mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401000
push    eax
mov     large fs:0, esp
sub     esp, 4
push    esi
mov     [ebp+var_10], ecx
mov     esi, ecx
call    ??0cwnd@@qae@xz
xor     eax, eax
mov     [ebp+var_4], eax
mov     dword ptr [esi], offset off_41e000
mov     [esi+3ch], eax
mov     dword ptr [esi+0c0h], 0ac44h
mov     word ptr [esi+0bch], 1
mov     dword ptr [esi+0c4h], 2b110h
mov     [esi+0cch], ax
mov     [esi+0b4h], eax
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
mov     [esi+0d4h], eax
mov     large fs:0, ecx
mov     eax, esi
mov     word ptr [esi+0beh], 2
mov     word ptr [esi+0cah], 10h
mov     word ptr [esi+0c8h], 4
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_4215d0
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwnd@@uae@xz
push    esi
mov     esi, ecx
call    sub_4010d0
test    [esp+4+arg_0], 1
jz      short loc_4010c8
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4010d0
mov     dword ptr [ecx], offset off_41e000
push    eax
mov     large fs:0, esp
sub     esp, 4
mov     [ebp+var_4], 0
mov     [ebp+var_10], ecx
call    sub_4014d0
mov     [ebp+var_4], 0ffffffffh
call    loc_401123
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset stru_4215f8
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwnd@@uae@xz
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401130
push    eax
mov     large fs:0, esp
mov     eax, [ebp+arg_4]
sub     esp, 18h
push    ebx
push    esi
mov     [ecx+94h], eax
push    edi
mov     esi, ecx
mov     ebx, [ebp+pwfxsrc]
mov     ecx, [ebp+arg_8]
mov     [esi+98h], ecx
lea     ecx, [esi+9ch]
mov     eax, [ebx]
mov     [ecx], eax
mov     edx, [ebx+4]
mov     [ecx+4], edx
mov     edi, [ebx+8]
mov     [ecx+8], edi
mov     eax, [ebx+0ch]
mov     [ecx+0ch], eax
mov     dx, [ebx+10h]
mov     [ecx+10h], dx
mov     ax, [ecx]
cmp     ax, 2
jnz     short loc_40119f
mov     ax, [ebx+12h]
mov     [esi+0aeh], ax
jmp     short loc_4011f8
cmp     ax, 11h
jnz     short loc_4011b2
mov     ax, [ebx+12h]
mov     [esi+0aeh], ax
jmp     short loc_4011f8
mov     cx, [esi+0aah]
test    cx, cx
jz      short loc_4011ef
xor     edi, edi
xor     eax, eax
mov     di, [esi+0a8h]
movzx   ecx, cx
mov     ax, [esi+9eh]
imul    eax, ecx
cdq
and     edx, 7
add     eax, edx
sar     eax, 3
mov     ecx, eax
mov     eax, edi
cdq
idiv    ecx
mov     [esi+0aeh], ax
jmp     short loc_4011f8
mov     word ptr [esi+0aeh], 0
mov     dword ptr [esi+0c0h], 0ac44h
mov     word ptr [esi+0bch], 1
mov     dword ptr [esi+0c4h], 2b110h
mov     word ptr [esi+0beh], 2
mov     word ptr [esi+0cah], 10h
push    4
lea     eax, [esi+0bch]
mov     word ptr [esi+0cch], 0
mov     word ptr [esi+0c8h], 4
push    0
lea     ecx, [esi+3ch]
push    0
push    0
push    eax
push    ebx
push    0
push    ecx
call    acmstreamopen
test    eax, eax
jz      loc_40133b
mov     edi, [esi+0c0h]
lea     edx, [esi+0bch]
lea     ecx, [ebp+pwfxdst]
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+8]
push    90000h
mov     [ecx+4], edi
mov     edi, [edx+0ch]
push    12h
mov     dx, [edx+10h]
push    ecx
push    ebx
mov     [ecx+8], eax
push    0
mov     [ecx+0ch], edi
mov     [ecx+10h], dx
call    acmformatsuggest
test    eax, eax
jnz     short loc_4012e1
mov     eax, [ebp+pwfxdst.nsamplespersec]
lea     ecx, [ebp+pwfxdst]
lea     edx, [esi+0bch]
mov     edi, [ecx]
mov     [edx], edi
mov     edi, [ecx+8]
push    4
mov     [edx+4], eax
mov     eax, [ecx+0ch]
push    0
mov     cx, [ecx+10h]
push    0
push    0
mov     [edx+8], edi
push    edx
mov     [edx+0ch], eax
mov     [edx+10h], cx
push    ebx
push    0
lea     eax, [esi+3ch]
push    eax
call    acmstreamopen
test    eax, eax
jz      short loc_4012e1
mov     dword ptr [esi+3ch], 0
cmp     dword ptr [esi+3ch], 0
jnz     short loc_40133b
lea     ecx, [ebp+var_10]
call    ??0cstring@@qae@xz
push    offset avcdplayer
lea     eax, [ebp+var_10]
mov     [ebp+var_4], 0
push    6bh
push    eax
call    ?formatmessagea@cstring@@qaaxizz
add     esp, 0ch
mov     eax, [ebp+var_10]
push    0
push    0
push    eax
call    sub_4190c2
mov     [ebp+var_4], 0ffffffffh
call    loc_401333
xor     eax, eax
jmp     loc_4014b8
mov     eax, offset stru_421620
jmp     ___cxxframehandler
lea     ecx, [ebp+var_10]
jmp     ??1cstring@@qae@xz
push    0
lea     eax, [esi+0d0h]
push    eax
mov     ecx, [esi+3ch]
push    4000h
push    ecx
call    acmstreamsize
test    eax, eax
jz      short loc_401368
push    0
mov     eax, [esi+3ch]
push    eax
call    acmstreamclose
xor     eax, eax
jmp     loc_4014b8
push    1
lea     eax, [esi+0b0h]
push    eax
mov     ecx, [esi+0d0h]
push    ecx
mov     edx, [esi+3ch]
push    edx
call    acmstreamsize
test    eax, eax
jz      short loc_401397
push    0
mov     eax, [esi+3ch]
push    eax
call    acmstreamclose
xor     eax, eax
jmp     loc_4014b8
mov     eax, [esi+0b0h]
push    eax
call    ??2@yapaxi@z
add     esp, 4
mov     [esi+0b4h], eax
test    eax, eax
jnz     short loc_4013c2
push    0
mov     eax, [esi+3ch]
push    eax
call    acmstreamclose
xor     eax, eax
jmp     loc_4014b8
mov     eax, [esi+0d0h]
push    eax
call    ??2@yapaxi@z
add     esp, 4
mov     [esi+0d4h], eax
test    eax, eax
jnz     short loc_4013fc
mov     eax, [esi+0b4h]
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [esi+3ch]
push    0
push    eax
call    acmstreamclose
xor     eax, eax
jmp     loc_4014b8
mov     eax, [esi+0d0h]
mov     ecx, [esi+0b0h]
lea     edx, [esi+40h]
mov     [esi+0d8h], eax
mov     edi, edx
xor     eax, eax
mov     [esi+0b8h], ecx
mov     ecx, 15h
rep stosd
mov     dword ptr [edx], 54h
mov     eax, [esi+0b4h]
mov     ecx, [esi+0d4h]
mov     [esi+4ch], eax
mov     eax, [esi+0b0h]
mov     [esi+5ch], ecx
push    0
mov     [esi+50h], eax
push    edx
mov     [esi+58h], eax
mov     eax, [esi+0d0h]
mov     edx, [esi+3ch]
push    edx
mov     [esi+60h], eax
mov     [esi+68h], eax
call    acmstreamprepareheader
test    eax, eax
jz      short loc_40148f
mov     eax, [esi+0b4h]
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [esi+0d4h]
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [esi+3ch]
push    0
push    eax
call    acmstreamclose
xor     eax, eax
jmp     short loc_4014b8
lea     ecx, [esi+0bch]
mov     eax, [ecx]
mov     [ebx], eax
mov     edx, [ecx+4]
mov     [ebx+4], edx
mov     esi, [ecx+8]
mov     [ebx+8], esi
mov     eax, [ecx+0ch]
mov     [ebx+0ch], eax
mov     eax, 1
mov     cx, [ecx+10h]
mov     [ebx+10h], cx
mov     ecx, [ebp+var_c]
pop     edi
mov     large fs:0, ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    esi
mov     esi, ecx
mov     ecx, [ecx+3ch]
test    ecx, ecx
jz      short loc_401504
mov     eax, [esi+58h]
mov     edx, [esi+68h]
push    0
mov     [esi+50h], eax
lea     eax, [esi+40h]
mov     [esi+60h], edx
push    eax
push    ecx
call    acmstreamunprepareheader
push    0
mov     ecx, [esi+3ch]
push    ecx
call    acmstreamclose
mov     dword ptr [esi+3ch], 0
mov     eax, [esi+0b4h]
test    eax, eax
jz      short loc_401521
push    eax
call    ??3@yaxpax@z
mov     dword ptr [esi+0b4h], 0
add     esp, 4
mov     eax, [esi+0d4h]
test    eax, eax
jz      short loc_40153e
push    eax
call    ??3@yaxpax@z
mov     dword ptr [esi+0d4h], 0
add     esp, 4
mov     eax, 1
pop     esi
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
mov     edi, ecx
mov     ebp, [esp+10h+arg_4]
cmp     ebp, ebx
jz      loc_40165d
mov     esi, [esp+10h+arg_0]
mov     eax, [edi+0d0h]
cmp     [edi+0d8h], eax
jb      loc_40162b
mov     ecx, [edi+0b0h]
cmp     [edi+0b8h], ecx
jb      loc_401666
lea     eax, [edi+0b8h]
mov     edx, [edi+98h]
push    eax
push    edx
mov     eax, [edi+0b4h]
push    eax
push    ecx
mov     ecx, [edi+94h]
push    ecx
call    sub_401960
add     esp, 14h
test    eax, eax
jnz     loc_40166f
mov     eax, [edi+0b8h]
push    4
lea     ecx, [edi+40h]
mov     edx, [edi+3ch]
push    ecx
mov     [edi+50h], eax
mov     dword ptr [edi+64h], 0
push    edx
call    acmstreamconvert
test    eax, eax
jnz     loc_40167b
cmp     dword ptr [edi+64h], 0
jnz     short loc_40161f
mov     eax, [edi+0b8h]
push    24h
lea     ecx, [edi+40h]
mov     edx, [edi+3ch]
push    ecx
mov     [edi+50h], eax
push    edx
call    acmstreamconvert
test    eax, eax
jnz     loc_401687
cmp     dword ptr [edi+64h], 0
jnz     short loc_40161f
push    20h
lea     eax, [edi+40h]
push    eax
mov     ecx, [edi+3ch]
push    ecx
call    acmstreamconvert
test    eax, eax
jnz     short loc_401693
mov     dword ptr [edi+0d8h], 0
jmp     short loc_401655
cmp     ebx, ebp
jnb     short loc_40165d
mov     eax, [edi+0d8h]
cmp     [edi+0d0h], eax
jbe     short loc_401655
mov     ecx, [edi+0d4h]
inc     ebx
mov     al, [ecx+eax]
mov     [esi+ebx-1], al
inc     dword ptr [edi+0d8h]
cmp     ebx, ebp
jb      short loc_40162f
cmp     ebx, ebp
jb      loc_401568
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
sub     esp, 8
push    esi
mov     esi, ecx
mov     dx, [esi+0aeh]
test    dx, dx
jz      short loc_4016d7
mov     ecx, [esp+0ch+arg_0]
lea     eax, [ecx+ecx*8]
lea     eax, [ecx+eax*8]
lea     eax, [ecx+eax*2]
movzx   ecx, dx
shl     eax, 2
sub     edx, edx
div     ecx
xor     ecx, ecx
mov     cx, [esi+0a8h]
imul    eax, ecx
jmp     short loc_401708
mov     eax, [esi+0a4h]
mov     ecx, [esp+0ch+arg_0]
mov     dword ptr [esp+0ch+var_8], eax
xor     eax, eax
mov     dword ptr [esp+0ch+var_8+4], eax
fild    [esp+0ch+var_8]
mov     dword ptr [esp+0ch+var_8], ecx
mov     dword ptr [esp+0ch+var_8+4], eax
fmul    ds:flt_41e0c0
fild    [esp+0ch+var_8]
fmulp   st(1), st
call    __ftol
push    1
push    eax
mov     eax, [esi+94h]
push    eax
call    ds:mmioseek
inc     eax
pop     esi
cmp     eax, 1
sbb     eax, eax
add     esp, 8
inc     eax
retn    4
push    0
mov     eax, [ecx+1ch]
push    eax
call    ds:enablewindow
retn
push    1
mov     eax, [ecx+1ch]
push    eax
call    ds:enablewindow
retn
sub     esp, 28h
push    ebx
push    esi
mov     esi, [esp+30h+arg_8]
push    edi
mov     eax, [esp+34h+pszfilename]
push    ebp
push    10000h
mov     dword ptr [esi], 0
push    0
push    eax
call    ds:mmioopena
mov     edi, eax
test    edi, edi
jnz     short loc_4017c3
mov     ebx, 0e100h
jmp     loc_4018ed
mov     ebp, [esp+38h+pmmcki]
push    0
push    0
push    ebp
push    edi
call    ds:mmiodescend
mov     ebx, eax
test    ebx, ebx
jnz     loc_4018ed
cmp     dword ptr [ebp+0], 46464952h
jnz     loc_4018e8
cmp     dword ptr [ebp+8], 45564157h
jnz     loc_4018e8
lea     eax, [esp+38h+var_26.ckid+2]
push    10h
mov     [esp+3ch+var_26.ckid+2], 20746d66h
push    ebp
push    eax
push    edi
call    ds:mmiodescend
mov     ebx, eax
test    ebx, ebx
jnz     loc_4018ed
cmp     [esp+38h+var_26.cksize+2], 10h
jb      loc_4018e8
lea     eax, [esp+38h+pch]
push    10h
push    eax
mov     ebx, ds:mmioread
push    edi
call    ebx
cmp     eax, 10h
jz      short loc_401842
mov     ebx, 0e102h
jmp     loc_4018ed
cmp     word ptr [esp+38h+pch], 1
jnz     short loc_401877
mov     word ptr [esp+38h+var_26.ckid], 0
mov     eax, [esp+38h+var_26.ckid]
mov     ebp, ds:globalalloc
and     eax, 0ffffh
add     eax, 12h
push    eax
push    0
call    ebp
mov     ecx, eax
mov     [esi], eax
test    ecx, ecx
jnz     short loc_40188d
mov     ebx, 0e000h
jmp     short loc_4018ed
lea     eax, [esp+38h+var_26]
push    2
push    eax
push    edi
call    ebx
cmp     eax, 2
jz      short loc_401851
mov     ebx, 0e102h
jmp     short loc_4018ed
lea     edx, [esp+38h+pch]
mov     eax, [edx]
mov     [ecx], eax
mov     ebp, [edx+4]
mov     [ecx+4], ebp
mov     eax, [edx+8]
mov     [ecx+8], eax
mov     edx, [edx+0ch]
mov     [ecx+0ch], edx
mov     ecx, [esi]
mov     bp, word ptr [esp+38h+var_26.ckid]
mov     [ecx+10h], bp
cmp     word ptr [esp+38h+var_26.ckid], 0
jz      short loc_4018d2
mov     ebp, [esp+38h+var_26.ckid]
mov     eax, [esi]
and     ebp, 0ffffh
add     eax, 12h
push    ebp
push    eax
push    edi
call    ebx
cmp     eax, ebp
jnz     short loc_4018e8
lea     eax, [esp+38h+var_26.ckid+2]
push    0
push    eax
push    edi
call    ds:mmioascend
mov     ebx, eax
test    ebx, ebx
jz      short loc_40190f
jmp     short loc_4018ed
mov     ebx, 0e101h
mov     eax, [esi]
test    eax, eax
jz      short loc_401900
push    eax
call    ds:globalfree
mov     dword ptr [esi], 0
test    edi, edi
jz      short loc_40190f
push    0
push    edi
xor     edi, edi
call    ds:mmioclose
mov     eax, [esp+38h+arg_4]
pop     ebp
mov     [eax], edi
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
push    esi
push    edi
mov     esi, [esp+8+pmmckiparent]
push    0
mov     edi, [esp+0ch+arg_0]
mov     eax, [esi+0ch]
add     eax, 4
mov     ecx, [edi]
push    eax
push    ecx
call    ds:mmioseek
cmp     eax, 0ffffffffh
jz      short loc_401958
mov     eax, [esp+8+pmmcki]
push    10h
push    esi
push    eax
mov     dword ptr [eax], 61746164h
mov     ecx, [edi]
push    ecx
call    ds:mmiodescend
pop     edi
pop     esi
retn
sub     esp, 48h
lea     eax, [esp+48h+pmmioinfo]
push    ebx
mov     ecx, [esp+4ch+hmmio]
push    esi
push    edi
push    ebp
push    0
push    eax
push    ecx
call    ds:mmiogetinfo
cmp     eax, 1
sbb     eax, eax
inc     eax
jnz     loc_401a17
mov     ebx, [esp+58h+arg_4]
mov     ecx, [esp+58h+arg_c]
mov     eax, [ecx+4]
cmp     ebx, eax
jbe     short loc_401996
mov     ebx, eax
sub     eax, ebx
xor     ebp, ebp
mov     [ecx+4], eax
test    ebx, ebx
jz      short loc_4019ff
mov     eax, [esp+58h+pmmioinfo.pchnext]
cmp     [esp+58h+pmmioinfo.pchendread], eax
jnz     short loc_4019cb
lea     eax, [esp+58h+pmmioinfo]
push    0
mov     ecx, [esp+5ch+hmmio]
push    eax
push    ecx
call    ds:mmioadvance
test    eax, eax
jnz     short loc_401a17
mov     eax, [esp+58h+pmmioinfo.pchnext]
cmp     [esp+58h+pmmioinfo.pchendread], eax
jz      short loc_401a29
mov     edx, [esp+58h+pmmioinfo.pchendread]
mov     eax, ebx
sub     edx, [esp+58h+pmmioinfo.pchnext]
sub     eax, ebp
cmp     eax, edx
jnb     short loc_4019dd
mov     edx, eax
mov     edi, [esp+58h+arg_8]
mov     esi, [esp+58h+pmmioinfo.pchnext]
add     edi, ebp
mov     ecx, edx
shr     ecx, 2
add     ebp, edx
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
add     [esp+58h+pmmioinfo.pchnext], edx
cmp     ebx, ebp
ja      short loc_4019a1
lea     eax, [esp+58h+pmmioinfo]
push    0
mov     ecx, [esp+5ch+hmmio]
push    eax
push    ecx
mov     ebp, ds:mmiosetinfo
call    ebp
test    eax, eax
jz      short loc_401a30
mov     ecx, [esp+58h+arg_10]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [ecx], 0
add     esp, 48h
retn
mov     eax, 0e103h
jmp     short loc_401a17
mov     ecx, [esp+58h+arg_10]
pop     ebp
pop     edi
pop     esi
mov     [ecx], ebx
pop     ebx
add     esp, 48h
retn
push    esi
mov     esi, [esp+4+arg_4]
mov     eax, [esi]
test    eax, eax
jz      short loc_401a58
push    eax
call    ds:globalfree
mov     dword ptr [esi], 0
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
test    eax, eax
jz      short loc_401a71
push    0
push    eax
call    ds:mmioclose
mov     dword ptr [esi], 0
xor     eax, eax
pop     esi
retn
mov     eax, offset off_41e0c8
retn
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401a90
push    eax
mov     large fs:0, esp
sub     esp, 4
push    esi
push    0
mov     [ebp+var_10], ecx
mov     esi, ecx
call    ??0cwinapp@@qae@pbd@z
mov     [ebp+var_4], 0
mov     eax, esi
mov     dword ptr [esi], offset off_41e130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_421648
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwinapp@@uae@xz
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401af0
push    eax
mov     large fs:0, esp
sub     esp, 4
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+block], ecx
call    loc_401b49
test    [ebp+arg_0], 1
jz      short loc_401b2c
mov     eax, [ebp+block]
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+block]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_421670
jmp     ___cxxframehandler
mov     ecx, [ebp+block]
jmp     ??1cwinapp@@uae@xz
call    sub_401b70
jmp     loc_401b80
mov     ecx, offset dword_425ae0
jmp     sub_401a90
push    offset sub_401b90
call    _atexit
add     esp, 4
retn
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401b90
push    eax
mov     [ebp+var_4], 0ffffffffh
mov     large fs:0, esp
call    loc_401bcb
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset stru_421698
jmp     ___cxxframehandler
mov     ecx, offset dword_425ae0
jmp     ??1cwinapp@@uae@xz
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401be0
push    eax
mov     large fs:0, esp
sub     esp, 60h
push    esi
mov     esi, ecx
call    ?enable3dcontrolsstatic@cwinapp@@iaehxz
push    0
lea     ecx, [ebp+var_6c]
call    sub_4020c0
mov     [ebp+var_4], 0
lea     eax, [ebp+var_6c]
mov     ecx, eax
mov     [esi+1ch], eax
call    ?domodal@cdialog@@uaehxz
mov     [ebp+var_4], 0ffffffffh
call    loc_401c48
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_4216c0
jmp     ___cxxframehandler
lea     ecx, [ebp+var_6c]
jmp     sub_401e90
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401c50
push    eax
mov     large fs:0, esp
sub     esp, 4
push    esi
mov     esi, ecx
lea     ecx, [ebp+var_10]
call    ??0cstring@@qae@xz
push    offset avcdplayer
lea     eax, [ebp+var_10]
mov     [ebp+var_4], 0
push    6dh
push    eax
call    ?formatmessagea@cstring@@qaaxizz
add     esp, 0ch
mov     eax, [ebp+var_10]
push    0
push    1
push    eax
call    sub_4190c2
cmp     eax, 1
jnz     short loc_401cc6
mov     ecx, [esi+1ch]
push    80h
mov     eax, [ecx+1ch]
push    eax
call    sub_4027c0
push    0
mov     ecx, [esi+1ch]
push    0
push    10h
mov     edx, [ecx+1ch]
push    edx
call    ds:sendmessagea
mov     [ebp+var_4], 0ffffffffh
call    loc_401cea
mov     eax, [ebp+var_c]
pop     esi
mov     large fs:0, eax
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_4216e8
jmp     ___cxxframehandler
lea     ecx, [ebp+var_10]
jmp     ??1cstring@@qae@xz
mov     eax, dword_425de4
push    eax
call    ds:setevent
retn
call    sub_401d20
jmp     loc_401d30
mov     ecx, offset dword_425d00
jmp     sub_401000
push    offset sub_401d40
call    _atexit
add     esp, 4
retn
mov     ecx, offset dword_425d00
jmp     sub_4010d0
call    sub_401d60
jmp     loc_401d70
push    0ah
mov     ecx, offset dword_425cd0
call    sub_411e64
retn
push    offset sub_401d80
call    _atexit
add     esp, 4
retn
mov     ecx, offset dword_425cd0
jmp     sub_411f07
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401d90
push    eax
mov     large fs:0, esp
sub     esp, 4
push    esi
push    0
mov     [ebp+var_10], ecx
mov     esi, ecx
push    64h
call    ??0cdialog@@qae@ipavcwnd@@@z
mov     [ebp+var_4], 0
mov     eax, esi
mov     dword ptr [esi], offset off_41e2c0
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_421710
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     sub_4126f1
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401e00
push    eax
mov     large fs:0, esp
sub     esp, 4
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+block], ecx
call    loc_401e59
test    [ebp+arg_0], 1
jz      short loc_401e3c
mov     eax, [ebp+block]
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+block]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_421738
jmp     ___cxxframehandler
mov     ecx, [ebp+block]
jmp     sub_4126f1
mov     eax, offset off_41e1d8
retn
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401e90
push    eax
mov     large fs:0, esp
mov     dword ptr [ecx], offset off_41e398
sub     esp, 94h
mov     [ebp+var_10], ecx
push    ebx
push    esi
push    edi
xor     edi, edi
mov     [ebp+var_4], edi
mov     eax, hevent
push    eax
call    ds:setevent
cmp     versioninformation.dwplatformid, 1
jnz     short loc_401f4d
push    edi
push    40000000h
push    3
push    edi
push    edi
push    edi
push    offset filename
call    ds:createfilea
mov     ebx, eax
push    edi
push    1
push    edi
push    edi
call    ds:createeventa
mov     esi, eax
lea     eax, [ebp+overlapped]
push    eax
lea     ecx, [ebp+bytesreturned]
push    ecx
mov     [eax], edi
push    edi
mov     [eax+4], edi
push    edi
mov     [eax+8], edi
push    edi
mov     [eax+0ch], edi
push    edi
mov     [eax+10h], edi
push    20098h
mov     [ebp+overlapped.hevent], esi
push    ebx
call    ds:deviceiocontrol
test    eax, eax
jnz     short loc_401f3c
call    ds:getlasterror
cmp     eax, 3e5h
jnz     short loc_401f3c
push    0ffffffffh
push    esi
call    ds:waitforsingleobject
push    esi
mov     esi, ds:closehandle
call    esi
push    ebx
call    esi
jmp     loc_402056
mov     dword_42323c, 1
call    sub_403a00
push    eax
xor     ebx, ebx
push    offset format
lea     eax, [ebp+filename]
push    eax
call    _sprintf
add     esp, 0ch
lea     eax, [ebp+filename]
push    ebx
push    ebx
push    3
push    ebx
push    1
push    80000000h
push    eax
call    ds:createfilea
cmp     eax, 0ffffffffh
mov     esi, eax
jz      loc_40203b
lea     edi, [ebp+inbuffer]
xor     eax, eax
mov     ecx, 14h
rep stosd
lea     eax, [ebp+block]
push    eax
push    4
push    30h
call    sub_403be0
mov     edi, eax
add     esp, 0ch
mov     edx, eax
mov     ecx, 0ch
xor     eax, eax
rep stosd
mov     [ebp+inbuffer], 2ch
mov     [ebp+var_69], bl
mov     [ebp+var_68], bl
mov     [ebp+var_67], bl
mov     [ebp+var_64], bl
mov     [ebp+var_66], 0ah
mov     [ebp+var_65], 18h
mov     [ebp+var_60], 30h
mov     [ebp+var_5c], 5
mov     [ebp+var_58], edx
mov     [ebp+var_49], bl
push    ebx
mov     [ebp+var_48], bl
mov     [ebp+var_54], 30h
lea     eax, [ebp+bytesreturned]
lea     ecx, [ebp+inbuffer]
mov     [ebp+var_50], 3bh
mov     [ebp+var_4f], 1
mov     word ptr [edx+8], 55e2h
push    eax
push    50h
push    ecx
push    50h
push    ecx
push    4d014h
push    esi
call    ds:deviceiocontrol
mov     ecx, [ebp+block]
push    ecx
call    _free
add     esp, 4
push    esi
call    ds:closehandle
cmp     dword_423228, ebx
jnz     short loc_402033
lea     eax, [ebp+var_1c]
push    eax
call    sub_403cd0
add     esp, 4
test    eax, eax
jnz     short loc_40203b
push    offset criticalsection
call    ds:deletecriticalsection
mov     eax, hhandle
push    eax
call    ds:setevent
xor     eax, eax
cmp     dword_423220, eax
jnz     short loc_402064
mov     [ebp+var_4], 0ffffffffh
call    loc_402092
mov     eax, [ebp+var_c]
pop     edi
mov     large fs:0, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_421760
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     sub_4126f1
push    esi
mov     esi, ecx
call    sub_401e90
test    [esp+4+arg_0], 1
jz      short loc_4020b8
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4020c0
push    eax
mov     large fs:0, esp
mov     eax, [ebp+arg_0]
sub     esp, 4
push    esi
push    eax
mov     [ebp+var_10], ecx
mov     esi, ecx
push    66h
call    ??0cdialog@@qae@ipavcwnd@@@z
mov     [ebp+var_4], 0
mov     dword ptr [esi], offset off_41e398
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
push    80h
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+0ch]
push    eax
call    ds:loadicona
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
mov     [esi+5ch], eax
mov     large fs:0, ecx
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_421788
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     sub_4126f1
mov     eax, offset off_41e1f8
retn
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_402170
push    eax
mov     large fs:0, esp
sub     esp, 8
mov     [ebp+var_10], ecx
push    esi
push    edi
call    ?oninitdialog@cdialog@@uaehxz
push    offset avcdplayer
mov     ecx, [ebp+var_10]
call    ?setwindowtexta@cwnd@@qaexpbd@z
push    0
mov     eax, [ebp+var_10]
mov     ecx, [eax+1ch]
push    ecx
call    ds:getsystemmenu
push    eax
call    ?fromhandle@cmenu@@sgpav1@pauhmenu__@@@z
mov     esi, eax
test    esi, esi
jz      short loc_40220e
lea     ecx, [ebp+lpnewitem]
call    ??0cstring@@qae@xz
push    65h
lea     ecx, [ebp+lpnewitem]
mov     [ebp+var_4], 0
call    ?loadstringa@cstring@@qaehi@z
mov     eax, [ebp+lpnewitem]
cmp     dword ptr [eax-8], 0
jz      short loc_402202
push    0
mov     eax, [esi+4]
push    0
mov     edi, ds:appendmenua
push    800h
push    eax
call    edi
mov     ecx, [ebp+lpnewitem]
mov     eax, [esi+4]
push    ecx
push    10h
push    0
push    eax
call    edi
mov     [ebp+var_4], 0ffffffffh
call    loc_4022ad
mov     eax, [ebp+var_10]
mov     esi, ds:sendmessagea
mov     ecx, [eax+5ch]
mov     edx, [eax+1ch]
push    ecx
push    1
push    80h
push    edx
call    esi
mov     ecx, [ebp+var_10]
mov     eax, [ecx+5ch]
mov     edx, [ecx+1ch]
push    eax
push    0
push    80h
push    edx
call    esi
mov     ecx, dword_425b50
cmp     byte ptr [ecx], 0
jnz     short loc_402272
push    offset avcdplayer
push    80h
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+0ch]
push    eax
call    ds:loadicona
push    eax
mov     ecx, [ebp+var_10]
push    80h
mov     eax, [ecx+1ch]
push    eax
call    sub_4025e0
push    1
mov     ecx, [ebp+var_10]
push    0
push    10000000h
call    ?modifystyle@cwnd@@qaehkki@z
push    0
mov     esi, ds:createeventa
push    0
push    0
push    0
call    esi
mov     dword_425ba4, eax
test    eax, eax
jnz     short loc_4022b5
xor     eax, eax
jmp     loc_4023d9
mov     eax, offset stru_4217b0
jmp     ___cxxframehandler
lea     ecx, [ebp+lpnewitem]
jmp     ??1cstring@@qae@xz
push    0
push    0
push    0
push    0
call    esi
mov     dword_425cec, eax
test    eax, eax
jnz     short loc_4022cf
xor     eax, eax
jmp     loc_4023d9
push    0
push    0
push    0
push    0
call    esi
mov     dword_425ba0, eax
test    eax, eax
jnz     short loc_4022e9
xor     eax, eax
jmp     loc_4023d9
push    0
push    0
push    0
push    0
call    esi
mov     hhandle, eax
test    eax, eax
jnz     short loc_402303
xor     eax, eax
jmp     loc_4023d9
push    0
push    0
push    0
push    0
call    esi
mov     hevent, eax
test    eax, eax
jnz     short loc_40231d
xor     eax, eax
jmp     loc_4023d9
push    0
push    0
push    0
push    0
call    esi
mov     dword_425ddc, eax
test    eax, eax
jnz     short loc_402337
xor     eax, eax
jmp     loc_4023d9
push    0
push    0
push    0
push    0
call    esi
mov     dword_425de4, eax
test    eax, eax
jnz     short loc_402351
xor     eax, eax
jmp     loc_4023d9
mov     eax, [ebp+var_10]
push    offset versioninformation
mov     ecx, [eax+1ch]
mov     versioninformation.dwosversioninfosize, 94h
mov     dword_425c1c, ecx
call    ds:getversionexa
cmp     versioninformation.dwplatformid, 1
jnz     short loc_402391
push    0
push    0
push    0
push    0
push    0
push    offset sub_4027f0
call    ?afxbeginthread@@ygpavcwinthread@@p6aipax@z0hikpau_security_attributes@@@z
jmp     short loc_4023d4
push    offset criticalsection
call    ds:initializecriticalsection
push    0
push    0
push    0
xor     esi, esi
push    0
push    0
push    offset sub_402a80
call    ?afxbeginthread@@ygpavcwinthread@@p6aipax@z0hikpau_security_attributes@@@z
lea     eax, dword_425cb8[esi*4]
push    0
push    0
push    0
push    0
mov     [eax], esi
push    eax
inc     esi
push    offset sub_402be0
call    ?afxbeginthread@@ygpavcwinthread@@p6aipax@z0hikpau_security_attributes@@@z
cmp     esi, 5
jl      short loc_4023b2
mov     eax, 1
mov     ecx, [ebp+var_c]
pop     edi
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4023f0
push    eax
mov     large fs:0, esp
mov     eax, [ebp+arg_0]
sub     esp, 5ch
and     eax, 0fff0h
cmp     eax, 10h
jnz     short loc_40244f
lea     ecx, [ebp+var_68]
call    sub_401d90
mov     [ebp+var_4], 0
lea     ecx, [ebp+var_68]
call    ?domodal@cdialog@@uaehxz
mov     [ebp+var_4], 0ffffffffh
call    loc_402447
jmp     short loc_402464
mov     eax, offset stru_4217d8
jmp     ___cxxframehandler
lea     ecx, [ebp+var_68]
jmp     loc_402480
cmp     eax, 0f060h
jnz     short loc_40245f
push    6
call    ?showwindow@cwnd@@qaehh@z
jmp     short loc_402464
call    ?default@cwnd@@iaejxz
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn    8
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset loc_4024b7
push    eax
mov     large fs:0, esp
sub     esp, 4
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+var_10], ecx
call    sub_4024c1
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset dword_421800
jmp     ___cxxframehandler
mov     ecx, [ebp-10h]
jmp     sub_4126f1
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4024d0
push    eax
mov     large fs:0, esp
sub     esp, 64h
push    ebx
push    esi
mov     eax, [ecx+1ch]
push    edi
mov     esi, ecx
push    eax
call    ds:isiconic
test    eax, eax
jz      loc_402594
push    esi
lea     ecx, [ebp+var_70]
call    ??0cpaintdc@@qae@pavcwnd@@@z
mov     [ebp+var_4], 0
push    0
mov     eax, [ebp+wparam]
push    eax
mov     ecx, [esi+1ch]
push    27h
push    ecx
call    ds:sendmessagea
push    0bh
mov     ebx, ds:getsystemmetrics
call    ebx
mov     edi, eax
push    0ch
call    ebx
mov     ebx, eax
mov     ecx, [esi+1ch]
lea     eax, [ebp+rect]
push    eax
push    ecx
call    ds:getclientrect
mov     eax, [ebp+rect.right]
sub     eax, [ebp+rect.left]
sub     eax, edi
inc     eax
cdq
sub     eax, edx
sar     eax, 1
mov     edi, eax
mov     eax, [ebp+rect.bottom]
sub     eax, [ebp+rect.top]
mov     ecx, [esi+5ch]
sub     eax, ebx
push    ecx
inc     eax
cdq
sub     eax, edx
mov     edx, [ebp+wparam]
sar     eax, 1
push    eax
push    edi
push    edx
call    ds:drawicon
mov     [ebp+var_4], 0ffffffffh
call    loc_40258c
jmp     short loc_40259b
mov     eax, offset stru_421828
jmp     ___cxxframehandler
lea     ecx, [ebp+var_70]
jmp     ??1cpaintdc@@uae@xz
mov     ecx, esi
call    ?default@cwnd@@iaejxz
mov     eax, [ebp+var_c]
pop     edi
mov     large fs:0, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ecx+5ch]
retn
push    esi
mov     esi, ecx
call    ?default@cwnd@@iaejxz
cmp     [esp+4+arg_0], 1
jnz     short loc_4025d8
push    0
mov     ecx, esi
call    ?showwindow@cwnd@@qaehh@z
pop     esi
retn    0ch
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 58h
mov     [esp+58h+var_54], eax
push    esi
mov     [esp+5ch+var_50], ecx
push    edi
mov     esi, [esp+60h+hicon]
mov     eax, [esp+60h+lpstring2]
mov     [esp+60h+var_44], esi
test    eax, eax
mov     [esp+60h+var_58], 58h
mov     [esp+60h+var_4c], 7
mov     [esp+60h+var_48], 401h
jz      short loc_40262d
push    40h
push    eax
lea     eax, [esp+68h+string1]
push    eax
call    ds:lstrcpyna
jmp     short loc_402632
mov     [esp+60h+string1], 0
lea     eax, [esp+60h+var_58]
push    eax
push    0
call    ds:shell_notifyicona
mov     edi, eax
test    esi, esi
jz      short loc_40264c
push    esi
call    ds:destroyicon
mov     eax, edi
pop     edi
pop     esi
add     esp, 58h
retn    10h
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_402660
push    eax
mov     large fs:0, esp
sub     esp, 1ch
mov     [ebp+var_14], offset ??_7cobject@@6b@
push    ebx
xor     eax, eax
push    esi
mov     [ebp+var_4], eax
push    edi
mov     esi, ecx
mov     ecx, [ebp+arg_4]
mov     [ebp+hmenu], eax
mov     [ebp+var_14], offset ??_7cmenu@@6b@
mov     [ebp+var_4], 1
cmp     [ebp+arg_0], 80h
jnz     loc_402781
cmp     ecx, 7bh
jz      short loc_4026ca
cmp     ecx, 201h
jz      loc_40276b
cmp     ecx, 204h
jnz     loc_402781
lea     eax, [ebp+point]
push    eax
call    ds:getcursorpos
mov     ecx, [ebp+point.y]
mov     edi, [ebp+point.x]
add     edi, 5
push    8bh
mov     [ebp+y], ecx
add     [ebp+y], 5
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ecx, [eax+0ch]
push    ecx
call    ds:loadmenua
push    eax
lea     ecx, [ebp+var_14]
call    ?attach@cmenu@@qaehpauhmenu__@@@z
push    0
mov     ecx, [ebp+hmenu]
push    ecx
mov     ebx, esi
call    ds:getsubmenu
push    eax
call    ?fromhandle@cmenu@@sgpav1@pauhmenu__@@@z
mov     [ebp+var_28], eax
mov     ecx, ebx
call    ?getstyle@cwnd@@qbekxz
test    eax, 40000000h
jz      short loc_40273a
mov     eax, [ebx+1ch]
push    eax
call    ds:getparent
push    eax
call    ?fromhandle@cwnd@@sgpav1@pauhwnd__@@@z
mov     ebx, eax
jmp     short loc_402718
mov     eax, [esi+1ch]
push    eax
call    ds:setforegroundwindow
push    0
mov     ecx, [ebp+y]
push    ebx
push    ecx
push    edi
mov     ecx, [ebp+var_28]
push    2
call    ?trackpopupmenu@cmenu@@qaehihhpavcwnd@@pbutagrect@@@z
push    0
mov     ecx, [esi+1ch]
push    0
push    400h
push    ecx
call    ds:postmessagea
jmp     short loc_402781
push    0
mov     eax, [esi+1ch]
push    0f120h
push    112h
push    eax
call    ds:sendmessagea
mov     [ebp+var_4], 0ffffffffh
call    loc_4027b4
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ebp+var_14]
jmp     loc_403d80
mov     eax, offset stru_421850
jmp     ___cxxframehandler
lea     ecx, [ebp+var_14]
jmp     sub_403e10
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 58h
lea     edx, [esp+58h+var_58]
mov     [esp+58h+var_54], eax
mov     [esp+58h+var_50], ecx
push    edx
mov     [esp+5ch+var_58], 58h
push    2
call    ds:shell_notifyicona
add     esp, 58h
retn    8
sub     esp, 388h
mov     dword_423220, 1
push    ebx
push    esi
lea     esi, [esp+390h+hdevice]
push    edi
push    ebp
mov     edi, ds:createfilea
push    0
push    40000000h
push    3
push    0
push    0
push    0
push    offset filename
call    edi
mov     [esi], eax
cmp     eax, 0ffffffffh
jz      loc_402948
add     esi, 4
lea     eax, [esp+398h+bytesreturned]
cmp     esi, eax
jb      short loc_40280e
xor     edi, edi
lea     esi, [esp+398h+overlapped]
lea     ecx, [esp+398h+var_388]
mov     eax, 1
mov     ebx, ds:createeventa
xor     ebp, ebp
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
push    ebp
add     edi, 4
push    1
add     esi, 14h
push    ebp
push    ebp
call    ebx
mov     [esp+edi+398h+var_378], eax
mov     [esi-14h], ebp
mov     [esi-10h], ebp
mov     [esi-0ch], ebp
mov     [esi-8], ebp
mov     [esi-4], eax
lea     eax, [esp+398h+outbuffer]
cmp     esi, eax
jb      short loc_40285f
mov     eax, hevent
mov     [esp+398h+hobject], eax
xor     esi, esi
xor     ebp, ebp
lea     ebx, [esp+398h+outbuffer]
lea     edi, [esp+398h+overlapped]
cmp     [esp+ebp+398h+var_388], 0
jz      short loc_4028d1
lea     eax, [esp+ebp+398h+bytesreturned]
push    edi
mov     ecx, [esp+ebp+39ch+hdevice]
push    eax
push    90h
push    ebx
push    0
push    0
push    20084h
push    ecx
call    ds:deviceiocontrol
mov     [esp+ebp+398h+var_388], eax
test    eax, eax
jnz     short loc_4028e9
add     ebp, 4
add     ebx, 90h
add     edi, 14h
inc     esi
lea     eax, [esp+398h+outbuffer]
cmp     edi, eax
jb      short loc_4028a2
cmp     esi, 5
jz      short loc_4028f5
cmp     [esp+esi*4+398h+var_388], 0
jnz     short loc_402929
lea     eax, [esp+398h+handles]
push    0ffffffffh
push    0
push    eax
push    6
call    ds:waitformultipleobjects
cmp     eax, 0ffffffffh
mov     esi, eax
jz      short def_402941
cmp     esi, 5
jz      loc_402a04
mov     [esp+esi*4+398h+var_388], 1
cmp     [esp+esi*4+398h+var_388], 0
jz      def_402941
lea     eax, [esi+esi*8]
shl     eax, 4
lea     esi, [esp+eax+398h+outbuffer]
mov     eax, [esi]
cmp     eax, 3
ja      def_402941
jmp     ds:jpt_402941[eax*4]
xor     eax, eax
pop     ebp
mov     dword_423220, 0
pop     edi
pop     esi
pop     ebx
add     esp, 388h
retn
cmp     dword_423224, 0
jz      short loc_40298b
mov     eax, dword_425de4
push    eax
call    ds:setevent
mov     ecx, dword_425de4
xor     eax, eax
cmp     dword_423224, eax
jnz     short loc_40297c
push    ecx
call    ds:resetevent
mov     dword_423224, 1
mov     eax, dword_425ba4
push    eax
call    ds:resetevent
mov     eax, dword_425cec
push    eax
call    ds:resetevent
mov     eax, dword_425ba0
push    eax
call    ds:resetevent
push    0
push    0
push    0
push    0
push    esi
push    offset sub_402da0
call    ?afxbeginthread@@ygpavcwinthread@@p6aipax@z0hikpau_security_attributes@@@z
jmp     def_402941
mov     eax, dword_425ba4
push    eax
call    ds:setevent
jmp     def_402941
mov     eax, dword_425cec
push    eax
call    ds:setevent
jmp     def_402941
mov     eax, dword_425ba0
push    eax
call    ds:setevent
jmp     def_402941
push    0ffffffffh
mov     eax, hhandle
push    eax
call    ds:waitforsingleobject
cmp     dword_423224, 0
jz      short loc_402a31
mov     eax, dword_425de4
push    eax
call    ds:setevent
xor     eax, eax
cmp     dword_423224, eax
jnz     short loc_402a29
xor     esi, esi
mov     edi, ds:closehandle
mov     eax, [esp+esi+398h+handles]
add     esi, 4
push    eax
call    edi
mov     eax, [esp+esi+398h+hobject]
push    eax
call    edi
cmp     esi, 14h
jl      short loc_402a39
xor     eax, eax
pop     ebp
mov     dword_423220, 0
pop     edi
pop     esi
pop     ebx
add     esp, 388h
retn
sub     esp, 9ch
mov     eax, hevent
mov     dword_423220, 1
push    ebx
mov     ecx, dword_425ddc
mov     [esp+0a0h+handles], eax
push    esi
push    edi
mov     esi, ds:setevent
mov     [esp+0a8h+var_98], ecx
push    ebp
lea     eax, [esp+0ach+handles]
push    0ffffffffh
push    0
push    eax
push    2
call    ds:waitformultipleobjects
cmp     eax, 0ffffffffh
jz      short loc_402aad
test    eax, eax
jz      loc_402ba3
xor     edi, edi
lea     eax, [esp+0ach+var_94]
push    eax
call    sub_403cd0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_402aad
push    ebx
call    ds:globallock
mov     ebp, eax
test    ebp, ebp
jz      short loc_402acd
mov     eax, [ebp+0]
cmp     eax, 3
ja      def_402af9
jmp     ds:jpt_402af9[eax*4]
cmp     dword_423224, edi
jz      short loc_402b24
mov     eax, dword_425de4
push    eax
call    esi
cmp     dword_423224, edi
jnz     short loc_402b10
mov     eax, dword_425de4
push    eax
call    ds:resetevent
mov     dword_423224, 1
mov     eax, dword_425ba4
push    eax
call    ds:resetevent
mov     eax, dword_425cec
push    eax
call    ds:resetevent
mov     eax, dword_425ba0
push    eax
call    ds:resetevent
lea     eax, [esp+0ach+var_90]
push    90h
push    ebp
push    eax
call    _memcpy
lea     eax, [esp+0b8h+var_90]
add     esp, 0ch
push    edi
push    edi
push    edi
push    edi
push    eax
push    offset sub_402da0
call    ?afxbeginthread@@ygpavcwinthread@@p6aipax@z0hikpau_security_attributes@@@z
jmp     short def_402af9
mov     eax, dword_425ba4
jmp     short loc_402b8d
mov     eax, dword_425cec
jmp     short loc_402b8d
mov     eax, dword_425ba0
push    eax
call    esi
push    ebx
call    ds:globalunlock
push    ebx
call    ds:globalfree
jmp     loc_402acd
push    0ffffffffh
mov     eax, hhandle
push    eax
call    ds:waitforsingleobject
xor     eax, eax
pop     ebp
mov     dword_423220, 0
pop     edi
pop     esi
pop     ebx
add     esp, 9ch
retn
sub     esp, 280h
mov     ecx, offset format
lea     edx, [esp+280h+format]
push    ebx
push    esi
mov     eax, [ecx]
push    edi
mov     esi, 3
push    ebp
mov     ebx, [ecx+4]
mov     ecx, [ecx+8]
mov     [edx], eax
mov     eax, [esp+290h+arg_0]
mov     [edx+4], ebx
mov     [edx+8], ecx
inc     dword_423228
mov     ebx, [eax]
call    sub_403a00
lea     ecx, [esp+290h+format]
push    eax
lea     eax, [esp+294h+filename]
push    ecx
push    eax
call    _sprintf
add     esp, 0ch
lea     ecx, [esp+290h+filename]
push    0
push    0
mov     ebp, ds:createfilea
push    esi
push    0
push    1
push    80000000h
push    ecx
call    ebp
cmp     eax, 0ffffffffh
mov     ebp, eax
jnz     short loc_402c64
xor     eax, eax
pop     ebp
pop     edi
dec     dword_423228
pop     esi
pop     ebx
add     esp, 280h
retn
lea     edi, [esp+290h+inbuffer]
xor     eax, eax
mov     ecx, 94h
push    0
rep stosd
mov     [esp+294h+inbuffer], 2ch
lea     edx, [esp+294h+inbuffer]
mov     [esp+294h+var_24d], al
mov     [esp+294h+var_24b], 0
mov     [esp+294h+var_24a], 0ah
lea     eax, [ebx+3]
lea     ecx, [esp+294h+bytesreturned]
mov     [esp+294h+var_24c], al
push    ecx
mov     [esp+298h+var_248], 1
mov     [esp+298h+var_244], 0c0h
mov     [esp+298h+var_249], 18h
mov     [esp+298h+var_240], 19ed8h
mov     [esp+298h+var_23c], 50h
mov     [esp+298h+var_238], 30h
mov     [esp+298h+var_234], 3ch
mov     [esp+298h+var_233], 1
push    110h
push    edx
lea     edx, [esp+2a0h+inbuffer]
push    2ch
push    edx
push    4d004h
push    ebp
call    ds:deviceiocontrol
test    eax, eax
jz      short loc_402d66
cmp     dword_42323c, 0
jnz     loc_402d78
cmp     [esp+290h+var_1f8], 0ffh
mov     esi, 3
jz      loc_402c64
push    90h
push    42h
call    ds:globalalloc
mov     edi, eax
test    edi, edi
jz      loc_402c64
push    edi
call    ds:globallock
test    eax, eax
jz      loc_402c64
lea     ecx, [esp+290h+src]
push    90h
push    ecx
push    eax
call    _memcpy
add     esp, 0ch
push    edi
call    sub_403c30
add     esp, 4
mov     eax, dword_425ddc
push    eax
call    ds:setevent
push    edi
call    ds:globalunlock
jmp     loc_402c64
cmp     dword_42323c, 0
jnz     short loc_402d78
dec     esi
test    esi, esi
jg      loc_402c64
test    ebp, ebp
jz      short loc_402d83
push    ebp
call    ds:closehandle
xor     eax, eax
pop     ebp
pop     edi
dec     dword_423228
pop     esi
pop     ebx
add     esp, 280h
retn
sub     esp, 8ch
push    ebx
push    esi
cmp     versioninformation.dwplatformid, 1
push    edi
push    ebp
mov     edi, [esp+9ch+arg_0]
mov     eax, [edi+4]
mov     dword_423224, 1
mov     [esp+9ch+var_80], eax
jnz     short loc_402de1
push    0
push    40000000h
push    3
push    0
push    0
push    0
push    offset filename
jmp     short loc_402e0d
call    sub_403a00
push    eax
push    offset format
lea     eax, [esp+0a4h+filename]
push    eax
call    _sprintf
add     esp, 0ch
lea     eax, [esp+9ch+filename]
push    0
push    0
push    3
push    0
push    1
push    80000000h
push    eax
call    ds:createfilea
cmp     eax, 0ffffffffh
mov     ebp, eax
jnz     short loc_402e31
xor     eax, eax
pop     ebp
mov     dword_423224, 0
pop     edi
pop     esi
pop     ebx
add     esp, 8ch
retn
xor     ebx, ebx
push    ebx
push    1
push    ebx
push    ebx
call    ds:createeventa
mov     esi, eax
lea     eax, [esp+9ch+overlapped]
mov     ecx, dword_425de4
mov     [eax], ebx
mov     edx, dword_425ba4
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [esp+9ch+handles], ecx
mov     ecx, dword_425ba0
mov     [eax+0ch], ebx
push    ebx
mov     [eax+10h], ebx
mov     eax, dword_425cec
push    offset ppds
mov     [esp+0a4h+overlapped.hevent], esi
push    ebx
mov     [esp+0a8h+var_70], edx
mov     [esp+0a8h+var_6c], eax
mov     [esp+0a8h+var_68], ecx
call    directsoundcreate
test    eax, eax
jz      short loc_402eb2
push    esi
mov     esi, ds:closehandle
call    esi
push    ebp
call    esi
xor     eax, eax
pop     ebp
pop     edi
mov     dword_423224, ebx
pop     esi
pop     ebx
add     esp, 8ch
retn
push    2
mov     eax, dword_425c1c
push    eax
mov     ecx, ppds
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+18h]
test    eax, eax
jz      short loc_402ef8
mov     eax, ppds
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
push    esi
mov     esi, ds:closehandle
call    esi
push    ebp
call    esi
xor     eax, eax
pop     ebp
mov     dword_423224, 0
pop     edi
pop     esi
pop     ebx
add     esp, 8ch
retn
mov     eax, [edi+88h]
add     edi, 8
push    eax
push    edi
call    sub_4031f0
add     esp, 8
test    eax, eax
jz      short loc_402f32
push    esi
mov     esi, ds:closehandle
call    esi
push    ebp
call    esi
xor     eax, eax
pop     ebp
mov     dword_423224, 0
pop     edi
pop     esi
pop     ebx
add     esp, 8ch
retn
push    0
mov     eax, dword_423230
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+34h]
push    1
mov     ecx, dword_423230
push    0
xor     ebx, ebx
push    0
mov     eax, [ecx]
push    ecx
call    dword ptr [eax+30h]
mov     dword_423238, 1
lea     eax, [esp+9ch+handles]
push    32h
push    ebx
push    eax
push    4
call    ds:waitformultipleobjects
cmp     eax, 102h
jnz     loc_403112
cmp     dword_423238, ebx
jz      short loc_402f5d
call    sub_4034b0
mov     eax, [esp+9ch+var_80]
cmp     dword_425c0c, ebx
mov     [esp+9ch+inbuffer], eax
jz      short loc_402f9b
mov     dword ptr [esp+9ch+var_88], ebx
jmp     short loc_402fbf
mov     eax, pwfxsrc
mov     ecx, 4bh
sub     edx, edx
mov     eax, [eax+8]
div     ecx
mov     edi, eax
sub     edx, edx
mov     eax, dword_425c04
div     edi
mov     dword ptr [esp+9ch+var_88], eax
cmp     eax, ebx
jz      short loc_402f5d
cmp     versioninformation.dwplatformid, 1
jnz     short loc_403011
lea     eax, [esp+9ch+overlapped]
lea     ecx, [esp+9ch+bytesreturned]
lea     edx, [esp+9ch+inbuffer]
push    eax
push    ecx
push    ebx
push    ebx
push    0ch
push    edx
push    20094h
push    ebp
call    ds:deviceiocontrol
test    eax, eax
jnz     loc_4030cd
call    ds:getlasterror
cmp     eax, 3e5h
jnz     loc_4030cd
push    0ffffffffh
push    esi
call    ds:waitforsingleobject
jmp     loc_4030cd
lea     edi, [esp+9ch+filename]
xor     eax, eax
mov     ecx, 14h
rep stosd
lea     eax, [esp+9ch+block]
push    eax
push    4
push    3ch
call    sub_403be0
mov     edi, eax
add     esp, 0ch
mov     edx, eax
mov     ecx, 0fh
xor     eax, eax
push    ebx
rep stosd
mov     word ptr [esp+0a0h+filename], 2ch
mov     [esp+0a0h+var_61], bl
mov     [esp+0a0h+var_60], 1
mov     [esp+0a0h+var_5f], bl
mov     [esp+0a0h+var_5e], 0ah
mov     [esp+0a0h+var_5d], 18h
mov     [esp+0a0h+var_5c], bl
mov     [esp+0a0h+var_58], 3ch
mov     [esp+0a0h+var_54], 5
mov     [esp+0a0h+var_50], edx
mov     [esp+0a0h+var_4c], 30h
mov     [esp+0a0h+var_48], 3bh
mov     [esp+0a0h+var_47], 1
mov     [esp+0a0h+var_41], bl
mov     [esp+0a0h+var_40], bl
mov     word ptr [edx+8], 55e1h
mov     eax, [esp+0a0h+inbuffer]
mov     [edx+30h], eax
lea     eax, [esp+0a0h+filename]
mov     ecx, dword ptr [esp+0a0h+var_88]
mov     [edx+34h], ecx
lea     edx, [esp+0a0h+bytesreturned]
push    edx
push    50h
push    eax
push    50h
lea     eax, [esp+0b0h+filename]
push    eax
push    4d014h
push    ebp
call    ds:deviceiocontrol
mov     ecx, [esp+9ch+block]
push    ecx
call    _free
add     esp, 4
cmp     dword_425c0c, ebx
jz      loc_402f5d
push    offset pwfxsrc
push    offset dword_425bcc
call    sub_401a40
add     esp, 8
mov     ecx, offset dword_425d00
call    sub_4014d0
cmp     dword_423230, 0
jz      loc_4031ad
mov     eax, dword_423230
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
jmp     loc_4031ad
test    eax, eax
jz      short loc_40315d
cmp     eax, 1
jz      short loc_40315d
cmp     eax, 2
jnz     short loc_403136
mov     eax, dword_423230
push    eax
mov     edi, [eax]
call    dword ptr [edi+48h]
mov     dword_423238, ebx
jmp     loc_402f5d
cmp     eax, 3
jnz     loc_402f5d
push    1
mov     eax, dword_423230
push    ebx
push    ebx
push    eax
mov     edi, [eax]
call    dword ptr [edi+30h]
mov     dword_423238, 1
jmp     loc_402f5d
cmp     dword_423230, 0
jz      short loc_403171
mov     eax, dword_423230
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+48h]
push    offset pwfxsrc
push    offset dword_425bcc
call    sub_401a40
add     esp, 8
mov     ecx, offset dword_425d00
call    sub_4014d0
cmp     dword_423230, 0
jz      short loc_4031a1
mov     eax, dword_423230
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
xor     eax, eax
mov     dword_423238, eax
mov     dword_423230, eax
cmp     ppds, 0
jz      short loc_4031c1
mov     eax, ppds
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
push    esi
mov     esi, ds:closehandle
call    esi
push    ebp
call    esi
xor     eax, eax
pop     ebp
mov     dword_423224, 0
pop     edi
pop     esi
pop     ebx
add     esp, 8ch
retn
mov     eax, [esp+pszfilename]
sub     esp, 14h
push    esi
push    offset pmmckiparent
push    offset pwfxsrc
push    offset dword_425bcc
push    eax
call    sub_401790
add     esp, 10h
test    eax, eax
jz      short loc_40321e
mov     eax, 0ffffff9ch
pop     esi
add     esp, 14h
retn
push    offset pmmckiparent
push    offset pmmcki
push    offset dword_425bcc
call    sub_401920
add     esp, 0ch
test    eax, eax
jz      short loc_403255
push    offset pwfxsrc
push    offset dword_425bcc
call    sub_401a40
add     esp, 8
mov     eax, 0ffffff99h
pop     esi
add     esp, 14h
retn
push    offset pmmcki
mov     eax, dword_425bcc
push    eax
mov     ecx, pwfxsrc
push    ecx
mov     ecx, offset dword_425d00
call    sub_401130
test    eax, eax
jnz     short loc_403291
push    offset pwfxsrc
push    offset dword_425bcc
call    sub_401a40
add     esp, 8
mov     eax, 0ffffff99h
pop     esi
add     esp, 14h
retn
mov     eax, pwfxsrc
mov     esi, 64h
sub     edx, edx
mov     eax, [eax+8]
shl     eax, 3
lea     ecx, [eax+eax*2]
lea     eax, [ecx+ecx*4]
xor     ecx, ecx
div     esi
mov     dword_425bfc, eax
lea     eax, [esp+18h+var_14]
mov     [eax], ecx
mov     edx, dword_425bfc
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
push    ecx
push    offset dword_423230
mov     [eax+10h], ecx
mov     eax, pwfxsrc
lea     ecx, [esp+20h+var_14]
mov     [esp+20h+var_c], edx
push    ecx
mov     edx, ppds
mov     [esp+24h+var_4], eax
mov     [esp+24h+var_14], 14h
mov     [esp+24h+var_10], 180e0h
push    edx
mov     eax, [edx]
call    dword ptr [eax+0ch]
test    eax, eax
jz      short loc_40330c
mov     eax, 0ffffff9ah
pop     esi
add     esp, 14h
retn
mov     eax, dword_423230
mov     edx, pwfxsrc
mov     ecx, 4bh
mov     dword_425bf8, eax
mov     dword_425c14, 0
mov     dword_425c08, 0
mov     eax, [edx+8]
sub     edx, edx
div     ecx
imul    eax, [esp+18h+arg_4]
mov     dword_425c18, eax
call    sub_403360
xor     eax, eax
pop     esi
mov     dword_425c0c, 0
add     esp, 14h
retn
sub     esp, 10h
lea     eax, [esp+10h+var_4]
push    ebx
lea     ecx, [esp+14h+var_8]
push    esi
lea     edx, [esp+18h+var_10]
push    edi
push    0
push    eax
lea     eax, [esp+24h+var_c]
push    ecx
push    edx
mov     ecx, dword_425bfc
push    eax
mov     edx, dword_423230
push    ecx
push    0
push    edx
mov     eax, [edx]
call    dword ptr [eax+2ch]
test    eax, eax
jnz     loc_40349d
cmp     dword ptr [esp+1ch+var_10], 0
jz      loc_40346b
mov     ecx, 930h
mov     eax, dword_425c18
sub     edx, edx
div     ecx
push    eax
mov     ecx, offset dword_425d00
call    sub_4016a0
mov     eax, dword ptr [esp+1ch+var_10]
mov     ecx, dword ptr [esp+1ch+var_c]
push    eax
push    ecx
mov     ecx, offset dword_425d00
call    sub_401550
cmp     eax, dword ptr [esp+1ch+var_10]
jnb     loc_40346b
cmp     dword_425c10, 0
jz      short loc_403419
mov     esi, dword ptr [esp+1ch+var_c]
mov     edi, dword ptr [esp+1ch+var_10]
add     esi, eax
sub     edi, eax
push    offset pmmckiparent
push    offset pmmcki
push    offset dword_425bcc
call    sub_401920
add     esp, 0ch
mov     ecx, offset dword_425d00
push    edi
push    esi
call    sub_401550
cmp     eax, edi
jb      short loc_4033ec
jmp     short loc_40346b
mov     edx, dword ptr [esp+1ch+var_10]
mov     ecx, pwfxsrc
sub     edx, eax
mov     dword_425c08, eax
mov     dword_425c14, 1
mov     cx, [ecx+0eh]
sub     cx, 8
cmp     cx, 1
sbb     bl, bl
xor     ecx, ecx
and     bl, 80h
mov     edi, dword ptr [esp+1ch+var_c]
mov     cl, bl
add     edi, eax
mov     bh, bl
mov     bl, cl
mov     ecx, ebx
shl     ecx, 10h
mov     cx, bx
mov     eax, ecx
mov     ecx, edx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     eax, dword ptr [esp+1ch+var_8]
push    0
mov     ecx, dword ptr [esp+20h+var_10]
push    eax
mov     edx, dword ptr [esp+24h+var_c]
push    ecx
push    edx
mov     eax, dword_423230
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4ch]
mov     dword_425c00, 0
mov     ecx, dword_425c18
mov     dword_425c04, ecx
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 1ch
lea     eax, [esp+1ch+var_8]
push    ebx
push    esi
mov     ecx, dword_425bf8
push    edi
xor     esi, esi
push    ebp
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    [esp+2ch+var_8], 2
jz      short loc_4034ef
mov     eax, dword_425bf8
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+50h]
test    eax, eax
jnz     loc_4039e9
mov     dword_425c00, esi
mov     esi, 1
lea     eax, [esp+2ch+var_4]
lea     ecx, [esp+2ch+var_10]
push    eax
mov     edx, dword_425bf8
mov     eax, [edx]
push    ecx
push    edx
call    dword ptr [eax+10h]
mov     ecx, dword_425c00
cmp     dword ptr [esp+2ch+var_10], ecx
jnz     short loc_403519
test    esi, esi
jz      loc_4039e9
cmp     dword_425c14, 0
jz      short loc_40354a
cmp     dword_425c08, 0
jnz     short loc_40354a
cmp     dword_425c0c, 0
jnz     loc_4039e9
mov     dword_425c0c, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, dword_425c00
mov     edi, dword ptr [esp+2ch+var_10]
cmp     dword ptr [esp+2ch+var_10], eax
jnb     short loc_403563
sub     edi, eax
add     edi, dword_425bfc
jmp     short loc_403569
sub     edi, dword_425c00
mov     ebx, edi
test    esi, esi
jz      short loc_403581
mov     eax, dword_425bfc
mov     ecx, 6
add     eax, eax
sub     edx, edx
div     ecx
mov     ebx, eax
add     dword_425c04, edi
cmp     dword_425c14, 0
jz      loc_4036c8
cmp     dword_425c08, 0
jz      loc_4036c8
cmp     edi, dword_425c08
jbe     short loc_4035b5
mov     dword_425c08, 0
jmp     short loc_4035bb
sub     dword_425c08, edi
lea     eax, [esp+2ch+var_1c]
push    0
lea     ecx, [esp+30h+var_14]
push    eax
lea     edx, [esp+34h+var_18]
push    ecx
lea     eax, [esp+38h+var_c]
push    edx
push    eax
mov     ecx, dword_425c00
push    ebx
mov     edx, dword_425bf8
mov     eax, [edx]
push    ecx
push    edx
call    dword ptr [eax+2ch]
test    eax, eax
jz      short loc_4035fc
push    offset outputstring
call    ds:outputdebugstringa
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     edx, [esp+2ch+var_18]
mov     eax, pwfxsrc
mov     ax, [eax+0eh]
sub     ax, 8
cmp     ax, 1
sbb     eax, eax
and     eax, 80h
mov     edi, [esp+2ch+var_c]
mov     cl, al
mov     ch, cl
mov     cl, al
mov     eax, ecx
shl     eax, 10h
mov     ax, cx
mov     ecx, edx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
cmp     [esp+2ch+var_14], 0
jz      short loc_403682
cmp     dword ptr [esp+2ch+var_1c], 0
jz      short loc_403682
mov     edx, dword ptr [esp+2ch+var_1c]
mov     eax, pwfxsrc
mov     ax, [eax+0eh]
sub     ax, 8
cmp     ax, 1
sbb     eax, eax
and     eax, 80h
mov     edi, [esp+2ch+var_14]
mov     cl, al
mov     ch, cl
mov     cl, al
mov     eax, ecx
shl     eax, 10h
mov     ax, cx
mov     ecx, edx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     eax, dword ptr [esp+2ch+var_1c]
mov     ecx, [esp+2ch+var_14]
mov     edx, [esp+2ch+var_18]
push    eax
mov     eax, [esp+30h+var_c]
push    ecx
push    edx
mov     ecx, dword_425bf8
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+4ch]
mov     ecx, dword_425bfc
add     dword_425c00, ebx
cmp     dword_425c00, ecx
jb      loc_4039e9
pop     ebp
sub     dword_425c00, ecx
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
lea     eax, [esp+2ch+var_1c]
push    0
lea     ecx, [esp+30h+var_14]
push    eax
lea     edx, [esp+34h+var_18]
push    ecx
lea     eax, [esp+38h+var_c]
push    edx
push    eax
mov     ecx, dword_425c00
push    ebx
mov     edx, dword_425bf8
mov     eax, [edx]
push    ecx
push    edx
call    dword ptr [eax+2ch]
test    eax, eax
jz      short loc_403709
push    offset outputstring
call    ds:outputdebugstringa
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
cmp     [esp+2ch+var_18], 0
jz      loc_40384e
cmp     dword_425c0c, 0
jnz     loc_403802
mov     eax, [esp+2ch+var_18]
mov     ecx, [esp+2ch+var_c]
push    eax
push    ecx
mov     ecx, offset dword_425d00
call    sub_401550
cmp     eax, [esp+2ch+var_18]
jnb     loc_40384e
cmp     dword_425c10, 0
jnz     loc_4037cd
mov     ecx, pwfxsrc
mov     cx, [ecx+0eh]
cmp     cx, 8
jnz     short loc_40376f
mov     edx, [esp+2ch+var_18]
mov     edi, [esp+2ch+var_c]
sub     edx, eax
add     edi, eax
mov     eax, 80808080h
jmp     short loc_403783
cmp     cx, 10h
jnz     short loc_403791
mov     edx, [esp+2ch+var_18]
mov     edi, [esp+2ch+var_c]
sub     edx, eax
add     edi, eax
xor     eax, eax
mov     ecx, edx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     dword_425c14, 1
mov     eax, dword_425c00
cmp     dword ptr [esp+2ch+var_10], eax
jbe     short loc_4037ba
sub     eax, dword ptr [esp+2ch+var_10]
add     eax, dword_425bfc
mov     dword_425c08, eax
jmp     loc_40384e
mov     eax, dword_425c00
sub     eax, dword ptr [esp+2ch+var_10]
mov     dword_425c08, eax
jmp     loc_40384e
mov     edi, [esp+2ch+var_c]
mov     ebp, [esp+2ch+var_18]
add     edi, eax
sub     ebp, eax
push    offset pmmckiparent
push    offset pmmcki
push    offset dword_425bcc
call    sub_401920
add     esp, 0ch
mov     ecx, offset dword_425d00
push    ebp
push    edi
call    sub_401550
cmp     eax, ebp
jb      short loc_4037d5
jmp     short loc_40384e
cmp     [esp+2ch+var_18], 0
jz      short loc_40384e
cmp     dword_425c0c, 0
jz      short loc_40384e
mov     edx, [esp+2ch+var_18]
mov     eax, pwfxsrc
mov     ax, [eax+0eh]
sub     ax, 8
cmp     ax, 1
sbb     eax, eax
and     eax, 80h
mov     edi, [esp+2ch+var_c]
mov     cl, al
mov     ch, cl
mov     cl, al
mov     eax, ecx
shl     eax, 10h
mov     ax, cx
mov     ecx, edx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
cmp     dword ptr [esp+2ch+var_1c], 0
jz      loc_403947
cmp     dword_425c0c, 0
jnz     loc_403947
mov     eax, dword ptr [esp+2ch+var_1c]
mov     ecx, [esp+2ch+var_14]
push    eax
push    ecx
mov     ecx, offset dword_425d00
call    sub_401550
cmp     eax, dword ptr [esp+2ch+var_1c]
jnb     loc_40399a
cmp     dword_425c10, 0
jnz     loc_403912
mov     ecx, pwfxsrc
mov     cx, [ecx+0eh]
cmp     cx, 8
jnz     short loc_4038b4
mov     edx, dword ptr [esp+2ch+var_1c]
mov     edi, [esp+2ch+var_14]
sub     edx, eax
add     edi, eax
mov     eax, 80808080h
jmp     short loc_4038c8
cmp     cx, 10h
jnz     short loc_4038d6
mov     edx, dword ptr [esp+2ch+var_1c]
mov     edi, [esp+2ch+var_14]
sub     edx, eax
add     edi, eax
xor     eax, eax
mov     ecx, edx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     dword_425c14, 1
mov     eax, dword_425c00
cmp     dword ptr [esp+2ch+var_10], eax
jbe     short loc_4038ff
sub     eax, dword ptr [esp+2ch+var_10]
add     eax, dword_425bfc
mov     dword_425c08, eax
jmp     loc_40399a
mov     eax, dword_425c00
sub     eax, dword ptr [esp+2ch+var_10]
mov     dword_425c08, eax
jmp     loc_40399a
mov     edi, [esp+2ch+var_14]
mov     ebp, dword ptr [esp+2ch+var_1c]
add     edi, eax
sub     ebp, eax
push    offset pmmckiparent
push    offset pmmcki
push    offset dword_425bcc
call    sub_401920
add     esp, 0ch
mov     ecx, offset dword_425d00
push    ebp
push    edi
call    sub_401550
cmp     eax, ebp
jb      short loc_40391a
jmp     short loc_40399a
cmp     [esp+2ch+var_14], 0
jz      short loc_40399a
cmp     dword ptr [esp+2ch+var_1c], 0
jz      short loc_40399a
cmp     dword_425c0c, 0
jz      short loc_40399a
mov     edx, dword ptr [esp+2ch+var_1c]
mov     eax, pwfxsrc
mov     ax, [eax+0eh]
sub     ax, 8
cmp     ax, 1
sbb     eax, eax
and     eax, 80h
mov     edi, [esp+2ch+var_14]
mov     cl, al
mov     ch, cl
mov     cl, al
mov     eax, ecx
shl     eax, 10h
mov     ax, cx
mov     ecx, edx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     eax, dword ptr [esp+2ch+var_1c]
mov     ecx, [esp+2ch+var_14]
mov     edx, [esp+2ch+var_18]
push    eax
mov     eax, [esp+30h+var_c]
push    ecx
push    edx
mov     ecx, dword_425bf8
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+4ch]
mov     ecx, dword_425bfc
add     dword_425c00, ebx
cmp     dword_425c00, ecx
jb      short loc_4039d4
sub     dword_425c00, ecx
test    esi, esi
jz      short loc_4039e9
push    1
mov     eax, dword_425bf8
push    0
push    0
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+30h]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_403a00
push    eax
mov     large fs:0, esp
sub     esp, 104h
lea     ecx, [ebp+var_1c]
push    ebx
push    esi
xor     ebx, ebx
push    edi
call    ??0cstring@@qae@xz
lea     ecx, [ebp+var_20]
mov     esi, offset ahardwaredevice
lea     edi, [ebp+subkey]
mov     [ebp+var_4], ebx
call    ??0cstring@@qae@xz
mov     byte ptr [ebp+var_4], 1
mov     [ebp+dwindex], 0ffffffffh
mov     ecx, 6
rep movsd
lea     eax, [ebp+phkresult]
lea     ecx, [ebp+subkey]
push    eax
mov     esi, ds:regopenkeyexa
push    20019h
push    ebx
push    ecx
push    80000002h
call    esi
test    eax, eax
jz      short loc_403a99
mov     byte ptr [ebp+var_4], bl
call    loc_403bbb
mov     [ebp+var_4], 0ffffffffh
call    loc_403bcd
mov     eax, 0ffffffffh
mov     ecx, [ebp+var_c]
pop     edi
mov     large fs:0, ecx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, 40h
lea     eax, [ebp+ftlastwritetime]
push    eax
lea     ecx, [ebp+cchclass]
push    ecx
lea     edx, [ebp+class]
push    edx
lea     eax, [ebp+cchname]
push    0
lea     ecx, [ebp+name]
push    eax
inc     [ebp+dwindex]
push    ecx
mov     edx, [ebp+dwindex]
push    edx
mov     eax, [ebp+phkresult]
push    eax
mov     [ebp+cchname], edi
mov     [ebp+cchclass], edi
call    ds:regenumkeyexa
cmp     eax, 103h
jz      loc_403b80
lea     eax, [ebp+name]
lea     ecx, [ebp+subkey]
push    eax
lea     edx, [ebp+buffer]
push    ecx
push    offset ass
push    edx
call    _sprintf
add     esp, 10h
lea     ecx, [ebp+hkey]
lea     edx, [ebp+buffer]
push    ecx
push    20019h
push    0
push    edx
push    80000002h
call    esi
test    eax, eax
jnz     short loc_403b8c
lea     eax, [ebp+name]
lea     ecx, [ebp+type]
mov     edx, [ebp+hkey]
mov     [ebp+cbdata], edi
lea     edi, [ebp+cbdata]
push    edi
push    eax
push    ecx
push    0
push    offset valuename
push    edx
call    ds:regqueryvalueexa
mov     ecx, [ebp+hkey]
push    ecx
call    ds:regclosekey
lea     eax, [ebp+name]
mov     edx, offset afastcdmp
mov     cl, [eax]
cmp     cl, [edx]
jnz     short loc_403b70
or      cl, cl
jz      short loc_403b6c
mov     cl, [eax+1]
cmp     cl, [edx+1]
jnz     short loc_403b70
add     eax, 2
add     edx, 2
or      cl, cl
jnz     short loc_403b50
xor     eax, eax
jmp     short loc_403b75
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
jnz     short loc_403b8c
mov     ebx, 1
jmp     short loc_403b8c
mov     [ebp+dwindex], 0ffffffffh
mov     ebx, 1
test    ebx, ebx
jz      loc_403a99
mov     eax, [ebp+phkresult]
push    eax
call    ds:regclosekey
mov     byte ptr [ebp+var_4], 0
call    loc_403bbb
mov     [ebp+var_4], 0ffffffffh
call    loc_403bcd
mov     eax, [ebp+dwindex]
jmp     loc_403a88
lea     ecx, [ebp+var_20]
jmp     ??1cstring@@qae@xz
mov     eax, offset stru_421880
jmp     ___cxxframehandler
lea     ecx, [ebp+var_1c]
jmp     ??1cstring@@qae@xz
mov     eax, [esp+size]
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_4]
test    esi, esi
jnz     short loc_403c05
push    eax
call    _malloc
mov     ecx, [esp+0ch+arg_8]
add     esp, 4
mov     [ecx], eax
mov     ecx, [esp+8+var_4]
jmp     short loc_403c1d
add     eax, esi
push    eax
call    _malloc
mov     ecx, [esp+0ch+arg_8]
add     esp, 4
mov     [ecx], eax
lea     ecx, [esi+eax]
not     esi
and     ecx, esi
mov     eax, 0
pop     esi
cmp     ecx, 1
adc     eax, 0ffffffffh
add     esp, 4
and     eax, ecx
retn
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_403c30
push    eax
mov     large fs:0, esp
sub     esp, 4
push    esi
push    edi
push    4
call    ??2@yapaxi@z
mov     [ebp+block], eax
add     esp, 4
mov     esi, eax
mov     edi, 0
mov     [ebp+var_4], 0
test    esi, esi
jz      short loc_403c74
mov     edi, esi
mov     dword ptr [esi], 1
mov     eax, [ebp+arg_0]
push    offset criticalsection
mov     [ebp+var_4], 0ffffffffh
mov     [edi], eax
call    ds:entercriticalsection
push    edi
mov     ecx, offset dword_425cd0
call    sub_411fca
push    offset criticalsection
call    ds:leavecriticalsection
mov     eax, [ebp+var_c]
pop     edi
mov     large fs:0, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_4218b0
jmp     ___cxxframehandler
mov     eax, [ebp+block]
push    eax
call    ??3@yaxpax@z
add     esp, 4
retn
push    esi
push    edi
xor     esi, esi
push    offset criticalsection
call    ds:entercriticalsection
mov     edi, dword_425cdc
cmp     edi, esi
jle     short loc_403d0a
mov     eax, dword_425cd4
mov     eax, [eax+8]
test    eax, eax
jz      short loc_403d00
mov     esi, [eax]
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     ecx, offset dword_425cd0
call    sub_411ff5
mov     eax, [esp+8+arg_0]
push    offset criticalsection
mov     [eax], edi
call    ds:leavecriticalsection
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_413ac3
retn    4
mov     eax, [esp+arg_0]
and     dword ptr [eax+18h], 0ffffffbfh
call    ?default@cwnd@@iaejxz
retn    4
push    esi
push    80h
mov     eax, [ecx+1ch]
mov     esi, ecx
push    eax
call    sub_4027c0
mov     ecx, esi
call    ?default@cwnd@@iaejxz
pop     esi
retn
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_403d90
mov     dword ptr [ecx], offset ??_7cmenu@@6b@
push    eax
mov     large fs:0, esp
sub     esp, 4
mov     [ebp+var_4], 0
mov     [ebp+block], ecx
call    ?destroymenu@cmenu@@qaehxz
mov     [ebp+var_4], 0ffffffffh
call    loc_403dfb
test    [ebp+arg_0], 1
jz      short loc_403dde
mov     eax, [ebp+block]
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+block]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_4218d8
jmp     ___cxxframehandler
mov     ecx, [ebp+block]
jmp     loc_403d80
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_403e10
mov     dword ptr [ecx], offset ??_7cmenu@@6b@
push    eax
mov     large fs:0, esp
sub     esp, 4
mov     [ebp+var_4], 0
mov     [ebp+var_10], ecx
call    ?destroymenu@cmenu@@qaehxz
mov     [ebp+var_4], 0ffffffffh
call    loc_403e63
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset stru_421900
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     loc_403d80
mov     eax, [ecx]
jmp     dword ptr [eax+0d0h]
mov     eax, [ecx]
jmp     dword ptr [eax+0cch]
mov     eax, offset loc_403ef3
call    __eh_prolog
sub     esp, 4
push    esi
push    10h
call    ??2cnotrackobject@@sgpaxi@z
mov     [ebp+hmem], eax
mov     esi, eax
mov     eax, 0
test    esi, esi
mov     [ebp+var_4], 0
jz      short loc_403edd
mov     ecx, esi
call    sub_41b70a
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_421b60
jmp     ___cxxframehandler
push    [ebp+hmem]
call    ??3cnotrackobject@@sgxpax@z
retn
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ecx, [eax+4]
jmp     ?endwaitcursor@ccmdtarget@@qaexxz
mov     eax, offset loc_4040e1
call    __eh_prolog
sub     esp, 4
push    esi
push    4
call    ??2cnotrackobject@@sgpaxi@z
mov     [ebp+hmem], eax
mov     esi, eax
xor     eax, eax
test    esi, esi
mov     [ebp+var_4], eax
jz      short loc_4040c9
mov     byte ptr [ebp+var_4], 1
mov     dword ptr [esi], offset ??_7cnotrackobject@@6b@
mov     byte ptr [ebp+var_4], al
mov     eax, esi
mov     dword ptr [esi], offset ??_7_afx_ctl3d_thread@@6b@
jmp     short loc_4040cb
mov     ecx, [ebp+hmem]
jmp     loc_403fec
xor     eax, eax
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_422008
jmp     ___cxxframehandler
push    [ebp+hmem]
call    ??3cnotrackobject@@sgxpax@z
retn
mov     eax, offset loc_4041b3
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cexception@@6b@
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+var_10], ecx
call    loc_4041bd
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset stru_4225f0
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     loc_403d80
mov     eax, offset loc_40420b
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cexception@@6b@
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+block], ecx
call    loc_404215
test    [ebp+arg_0], 1
jz      short loc_4041f8
push    [ebp+block]
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+block]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_422618
jmp     ___cxxframehandler
mov     ecx, [ebp+block]
jmp     loc_403d80
mov     eax, offset loc_404263
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7csimpleexception@@6b@
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+block], ecx
call    loc_40426d
test    [ebp+arg_0], 1
jz      short loc_404250
push    [ebp+block]
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+block]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_422640
jmp     ___cxxframehandler
mov     ecx, [ebp+block]
jmp     sub_404184
mov     eax, offset loc_4042a4
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7csimpleexception@@6b@
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+var_10], ecx
call    loc_4042ae
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset stru_422668
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     sub_404184
mov     eax, offset loc_4042fc
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cresourceexception@@6b@
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+block], ecx
call    loc_404306
test    [ebp+arg_0], 1
jz      short loc_4042e9
push    [ebp+block]
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+block]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_422690
jmp     ___cxxframehandler
mov     ecx, [ebp+block]
jmp     sub_404275
mov     eax, offset loc_404354
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cuserexception@@6b@
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+block], ecx
call    loc_40435e
test    [ebp+arg_0], 1
jz      short loc_404341
push    [ebp+block]
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+block]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_4226b8
jmp     ___cxxframehandler
mov     ecx, [ebp+block]
jmp     sub_404275
mov     eax, offset loc_4043b8
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cgdiobject@@6b@
mov     [ebp+var_4], 0
mov     [ebp+block], ecx
call    sub_418c76
mov     [ebp+var_4], 0ffffffffh
call    loc_4043c2
test    [ebp+arg_0], 1
jz      short loc_4043a5
push    [ebp+block]
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+block]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_4226e0
jmp     ___cxxframehandler
mov     ecx, [ebp+block]
jmp     loc_403d80
push    [esp+y]
push    [esp+4+x]
push    dword ptr [ecx+4]
call    ds:ptvisible
retn    8
push    [esp+lprect]
push    dword ptr [ecx+4]
call    ds:rectvisible
retn    4
push    ebp
mov     edx, 0
mov     ebp, esp
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_40449a
mov     edx, [eax+4]
push    [ebp+nheight]
push    [ebp+nwidth]
push    [ebp+y]
push    [ebp+x]
push    [ebp+ncount]
push    [ebp+lpdata]
push    [ebp+lpoutputfunc]
push    edx
push    dword ptr [ecx+4]
call    ds:graystringa
pop     ebp
retn    20h
mov     eax, offset loc_404520
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cmemoryexception@@6b@
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+block], ecx
call    loc_40452a
test    [ebp+arg_0], 1
jz      short loc_40450d
push    [ebp+block]
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+block]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_422880
jmp     ___cxxframehandler
mov     ecx, [ebp+block]
jmp     sub_404275
mov     eax, offset loc_404578
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cnotsupportedexception@@6b@
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+block], ecx
call    loc_404582
test    [ebp+arg_0], 1
jz      short loc_404565
push    [ebp+block]
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+block]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_4228a8
jmp     ___cxxframehandler
mov     ecx, [ebp+block]
jmp     sub_404275
push    esi
mov     esi, ecx
call    ?default@cwnd@@iaejxz
cmp     eax, 0ffffffffh
mov     eax, 0ffffffffh
jz      short loc_4045b0
push    0
push    14h
push    41eh
push    dword ptr [esi+1ch]
call    ds:sendmessagea
xor     eax, eax
pop     esi
retn    4
push    esi
push    0
mov     esi, ecx
call    sub_4045b4
push    1
mov     ecx, esi
call    sub_4045b4
push    2
mov     ecx, esi
call    sub_4045b4
mov     ecx, esi
call    ?onncdestroy@cwnd@@iaexxz
pop     esi
retn
push    esi
push    0
mov     esi, ecx
call    sub_404612
push    2
mov     ecx, esi
call    sub_404612
mov     ecx, esi
call    ?default@cwnd@@iaejxz
pop     esi
retn
mov     eax, offset loc_4046e0
call    __eh_prolog
sub     esp, 4
xor     eax, eax
mov     [ebp+var_4], eax
push    esi
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7cobject@@6b@
mov     dword ptr [ecx], offset ??_7cimagelist@@6b@
mov     [ecx+4], eax
mov     eax, ecx
mov     esi, ecx
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_422b20
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     loc_403d80
push    esi
mov     esi, ecx
call    sub_404710
test    [esp+arg_0], 1
jz      short loc_40470a
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_40474b
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cimagelist@@6b@
mov     [ebp+var_4], 0
mov     [ebp+var_10], ecx
call    ?deleteimagelist@cimagelist@@qaehxz
mov     [ebp+var_4], 0ffffffffh
call    loc_404755
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset stru_422b48
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     loc_403d80
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     eax, 1
pop     esi
pop     ebx
pop     ebp
retn
pop     edi
pop     esi
pop     ebx
retn
pop     esi
retn
push    esi
inc     ebx
xor     dh, [eax]
pop     eax
inc     ebx
xor     [eax], dh
mov     eax, dword ptr filename+104h
push    eax
call    ds:setunhandledexceptionfilter
retn
retn
mov     eax, large fs:0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset stru_4203a8
push    offset __except_handler3
push    eax
mov     large fs:0, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     [ebp+ms_exc.old_esp], esp
mov     [ebp+ms_exc.registration.trylevel], 0
mov     eax, off_424930
test    eax, eax
jz      short loc_40a0b1
mov     [ebp+ms_exc.registration.trylevel], 1
call    eax
mov     eax, 1
retn
mov     esp, [ebp+ms_exc.old_esp]
mov     [ebp+ms_exc.registration.trylevel], 0
mov     [ebp+ms_exc.registration.trylevel], 0ffffffffh
call    loc_40a0cd
mov     eax, [ebp+ms_exc.registration.next]
pop     edi
mov     large fs:0, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
jmp     ?terminate@@yaxxz
retn
xor     eax, eax
retn
add     esp, 4
retn
mov     eax, [esp+arg_4]
push    offset dword_424c00
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    __ld12cvt
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
push    offset dword_424c18
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    __ld12cvt
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
sub     esp, 10h
lea     ecx, [esp+10h+var_10]
push    0
lea     edx, [esp+14h+var_c]
push    0
push    0
push    0
push    eax
push    ecx
push    edx
call    ___strgtold12
mov     ecx, [esp+2ch+arg_0]
lea     edx, [esp+2ch+var_c]
add     esp, 1ch
push    ecx
push    edx
call    sub_40a990
add     esp, 18h
retn
mov     eax, [esp+arg_4]
sub     esp, 10h
lea     ecx, [esp+10h+var_10]
push    0
lea     edx, [esp+14h+var_c]
push    0
push    0
push    0
push    eax
push    ecx
push    edx
call    ___strgtold12
mov     ecx, [esp+2ch+arg_0]
lea     edx, [esp+2ch+var_c]
add     esp, 1ch
push    ecx
push    edx
call    sub_40a9b0
add     esp, 18h
retn
sub     esp, 18h
push    ebx
push    esi
push    edi
push    ebp
xor     edi, edi
mov     [esp+28h+block], edi
cmp     locale, edi
jz      loc_40c42b
cmp     codepage, edi
jnz     short loc_40c202
push    offset codepage
xor     eax, eax
mov     ax, word_424efc
push    0bh
push    eax
push    edi
call    ___getlocaleinfo
add     esp, 10h
test    eax, eax
jnz     loc_40c3ee
push    202h
call    _malloc
add     esp, 4
mov     esi, eax
push    202h
call    _malloc
add     esp, 4
mov     ebp, eax
push    101h
call    _malloc
add     esp, 4
mov     edi, eax
push    202h
call    _malloc
mov     [esp+2ch+block], eax
add     esp, 4
test    esi, esi
jz      loc_40c3f6
test    ebp, ebp
jz      loc_40c3f6
test    edi, edi
jz      loc_40c3f6
test    eax, eax
jz      loc_40c3f6
mov     ecx, edi
xor     eax, eax
mov     [ecx], al
inc     ecx
inc     eax
cmp     eax, 100h
jl      short loc_40c264
lea     eax, [esp+28h+cpinfo]
mov     ecx, codepage
push    eax
push    ecx
call    ds:getcpinfo
test    eax, eax
jz      loc_40c3f6
cmp     [esp+28h+cpinfo.maxcharsize], 2
ja      loc_40c3f6
mov     eax, [esp+28h+cpinfo.maxcharsize]
and     eax, 0ffffh
mov     cbmultibyte, eax
cmp     eax, 1
jle     short loc_40c2db
cmp     [esp+28h+cpinfo.leadbyte], 0
lea     ebx, [esp+28h+cpinfo.leadbyte]
jz      short loc_40c2db
mov     dl, [ebx+1]
test    dl, dl
jz      short loc_40c2db
xor     eax, eax
xor     ecx, ecx
mov     al, [ebx]
mov     cl, dl
cmp     ecx, eax
jl      short loc_40c2d3
mov     byte ptr [edi+eax], 0
inc     eax
xor     ecx, ecx
mov     cl, [ebx+1]
cmp     ecx, eax
jge     short loc_40c2c5
add     ebx, 2
cmp     byte ptr [ebx], 0
jnz     short loc_40c2b2
push    0
lea     eax, [esi+2]
push    0
push    eax
push    100h
push    edi
push    1
call    ___crtgetstringtypea
add     esp, 18h
test    eax, eax
jz      loc_40c3f6
mov     word ptr [esi], 0
mov     ecx, [esp+28h+block]
xor     eax, eax
mov     [ecx], ax
add     ecx, 2
inc     eax
cmp     eax, 100h
jl      short loc_40c306
push    0
lea     eax, [ebp+2]
mov     ecx, [esp+2ch+block]
push    0
push    eax
push    100h
push    ecx
push    1
call    ___crtgetstringtypew
add     esp, 18h
test    eax, eax
jz      loc_40c3f6
mov     word ptr [ebp+0], 0
cmp     cbmultibyte, 1
jle     short loc_40c383
cmp     [esp+28h+cpinfo.leadbyte], 0
lea     ebx, [esp+28h+cpinfo.leadbyte]
jz      short loc_40c383
mov     dl, [ebx+1]
test    dl, dl
jz      short loc_40c383
xor     eax, eax
xor     ecx, ecx
mov     al, [ebx]
mov     cl, dl
cmp     ecx, eax
jl      short loc_40c37b
lea     edx, [esi+eax*2+2]
mov     word ptr [edx], 8000h
add     edx, 2
inc     eax
xor     ecx, ecx
mov     cl, [ebx+1]
cmp     ecx, eax
jge     short loc_40c369
add     ebx, 2
cmp     byte ptr [ebx], 0
jnz     short loc_40c352
lea     eax, [esi+2]
lea     ecx, [ebp+2]
mov     off_424710, eax
mov     off_424714, ecx
cmp     dword_424ee4, 0
jz      short loc_40c3ab
mov     eax, dword_424ee4
push    eax
call    _free
add     esp, 4
cmp     dword_424ee8, 0
mov     dword_424ee4, esi
jz      short loc_40c3c8
mov     eax, dword_424ee8
push    eax
call    _free
add     esp, 4
push    edi
mov     dword_424ee8, ebp
call    _free
mov     eax, [esp+2ch+block]
add     esp, 4
push    eax
call    _free
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     esi, [esp+28h+cpinfo.maxcharsize]
mov     ebp, [esp+28h+cpinfo.maxcharsize]
push    esi
call    _free
add     esp, 4
push    ebp
call    _free
add     esp, 4
push    edi
call    _free
mov     eax, [esp+2ch+block]
add     esp, 4
push    eax
call    _free
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, (offset __ctype+2)
mov     ecx, dword_424ee4
push    ecx
mov     off_424710, eax
mov     off_424714, eax
call    _free
add     esp, 4
mov     ecx, dword_424ee8
push    ecx
call    _free
add     esp, 4
xor     eax, eax
mov     dword_424ee4, eax
mov     dword_424ee8, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
retn
push    1
push    0
call    ?afxtermlocaldata@@ygxpauhinstance__@@h@z
retn
call    sub_411bf9
jmp     loc_411c03
mov     ecx, offset dword_427e94
jmp     ??0_afx_term_app_state@@qae@xz
push    offset sub_411c11
call    _atexit
add     esp, 4
retn
mov     ecx, offset dword_427e94
jmp     loc_411be5
sub     esp, 4
lea     eax, [esp+4+pexceptionobject]
push    offset __ti5pavcmemoryexception@@
mov     [esp+8+pexceptionobject], offset dword_427838
push    eax
call    __cxxthrowexception@8
add     esp, 4
retn
mov     eax, offset loc_411eb7
call    __eh_prolog
sub     esp, 4
xor     eax, eax
mov     [ebp+var_4], eax
push    esi
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7cobject@@6b@
mov     dword ptr [ecx], offset ??_7cptrlist@@6b@
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+8], eax
mov     [ecx+4], eax
mov     [ecx+14h], eax
mov     eax, ecx
mov     esi, ecx
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+arg_0]
mov     [esi+18h], ecx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_422038
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     loc_403d80
push    esi
mov     esi, ecx
call    sub_411f07
test    byte ptr [esp+arg_0], 1
jz      short loc_411ee1
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_411f42
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cptrlist@@6b@
mov     [ebp+var_4], 0
mov     [ebp+var_10], ecx
call    sub_411ee7
mov     [ebp+var_4], 0ffffffffh
call    loc_411f4c
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset stru_422060
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     loc_403d80
mov     edx, [ecx+10h]
mov     eax, [esp+arg_0]
mov     [eax], edx
mov     [ecx+10h], eax
mov     eax, [ecx+0ch]
dec     eax
mov     [ecx+0ch], eax
jnz     short locret_411fc7
call    sub_411ee7
retn    4
push    esi
push    edi
lea     edi, [ecx+8]
mov     esi, ecx
push    0
push    dword ptr [edi]
call    sub_411f54
mov     ecx, [esp+8+arg_0]
mov     [eax+8], ecx
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_411feb
mov     [ecx], eax
jmp     short loc_411fee
mov     [esi+4], eax
mov     [edi], eax
pop     edi
pop     esi
retn    4
push    esi
xor     edx, edx
push    edi
mov     edi, [ecx+4]
mov     esi, [edi+8]
mov     eax, [edi]
mov     [ecx+4], eax
test    eax, eax
jz      short loc_41200d
mov     [eax+4], edx
jmp     short loc_412014
mov     dword ptr [ecx+8], 0
push    edi
call    sub_411fad
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, offset loc_4120b0
call    __eh_prolog
sub     esp, 4
xor     eax, eax
mov     [ebp+var_4], eax
push    esi
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7cobject@@6b@
mov     dword ptr [ecx], offset ??_7cmapptrtoptr@@6b@
mov     [ecx+4], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+14h], eax
mov     esi, ecx
mov     ecx, [ebp+arg_0]
mov     eax, esi
mov     dword ptr [esi+8], 11h
mov     [ebp+var_4], 0ffffffffh
mov     [esi+18h], ecx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset stru_422a08
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     loc_403d80
push    esi
mov     esi, ecx
call    sub_41215e
test    byte ptr [esp+arg_0], 1
jz      short loc_4120da
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_412199
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cmapptrtoptr@@6b@
mov     [ebp+var_4], 0
mov     [ebp+var_10], ecx
call    sub_41212f
mov     [ebp+var_4], 0ffffffffh
call    loc_4121a3
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset stru_422a30
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     loc_403d80
mov     edx, [ecx+10h]
mov     eax, [esp+arg_0]
mov     [eax], edx
mov     [ecx+10h], eax
mov     eax, [ecx+0ch]
dec     eax
mov     [ecx+0ch], eax
jnz     short locret_412210
call    sub_41212f
retn    4
push    ebp
mov     ebp, esp
sub     esp, 4
push    ebx
lea     eax, [ebp+var_4]
push    esi
mov     ebx, [ebp+arg_0]
push    edi
push    eax
mov     edi, ecx
push    ebx
call    sub_412213
test    eax, eax
jnz     short loc_4122c8
lea     esi, [edi+4]
cmp     dword ptr [esi], 0
jnz     short loc_4122ac
push    1
mov     ecx, edi
push    dword ptr [edi+8]
call    sub_4120e0
mov     ecx, edi
call    ?newassoc@cmapptrtoptr@@iaepaucassoc@1@xz
mov     [eax+4], ebx
mov     edx, [ebp+var_4]
mov     ecx, [esi]
mov     ebx, [ecx+edx*4]
mov     [eax], ebx
mov     edx, [ebp+var_4]
mov     ecx, [esi]
mov     [ecx+edx*4], eax
add     eax, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    esi
push    edi
mov     esi, [ecx+4]
test    esi, esi
jz      short loc_412301
mov     edi, [esp+8+arg_0]
sub     edx, edx
mov     eax, edi
shr     eax, 4
div     dword ptr [ecx+8]
lea     eax, [esi+edx*4]
mov     edx, [eax]
test    edx, edx
jz      short loc_412301
cmp     [edx+4], edi
jz      short loc_412308
mov     eax, edx
mov     edx, [edx]
test    edx, edx
jnz     short loc_4122f4
xor     eax, eax
pop     edi
pop     esi
retn    4
mov     esi, [edx]
push    edx
mov     [eax], esi
call    sub_4121f6
mov     eax, 1
jmp     short loc_412303
sub     esp, 4
lea     eax, [esp+4+var_4]
push    eax
push    [esp+8+str2]
call    sub_41243a
test    eax, eax
jnz     short loc_4124a9
xor     eax, eax
jmp     short loc_4124b7
mov     ecx, [eax+0ch]
mov     eax, [esp+4+arg_4]
mov     [eax], ecx
mov     eax, 1
add     esp, 4
retn    8
sub     esp, 4
lea     eax, [esp+4+var_4]
push    eax
push    [esp+8+str2]
call    sub_41243a
test    eax, eax
jnz     short loc_4124d6
xor     eax, eax
jmp     short loc_4124e4
mov     ecx, [eax+8]
mov     eax, [esp+4+arg_4]
mov     [eax], ecx
mov     eax, 1
add     esp, 4
retn    8
push    ebp
mov     ebp, esp
sub     esp, 4
push    ebx
lea     eax, [ebp+var_4]
push    esi
push    edi
mov     esi, ecx
push    eax
push    [ebp+str2]
call    sub_41243a
mov     edi, eax
test    edi, edi
jnz     short loc_412547
lea     ebx, [esi+4]
cmp     dword ptr [ebx], 0
jnz     short loc_41251b
push    1
mov     ecx, esi
push    dword ptr [esi+8]
call    sub_412389
mov     ecx, esi
call    sub_4123d8
lea     ecx, [eax+8]
mov     edi, eax
push    [ebp+str2]
mov     eax, [ebp+var_4]
mov     [edi+4], eax
call    ??4cstring@@qaeabv0@pbd@z
mov     ecx, [ebp+var_4]
mov     edx, [ebx]
mov     eax, [edx+ecx*4]
mov     [edi], eax
mov     ecx, [ebp+var_4]
mov     edx, [ebx]
mov     [edx+ecx*4], edi
lea     eax, [edi+0ch]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, offset off_41e478
retn
push    esi
mov     esi, ecx
call    sub_4126f1
test    [esp+4+arg_0], 1
jz      short loc_4126eb
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_412734
call    __eh_prolog
sub     esp, 4
mov     dword ptr [ecx], offset ??_7cdialog@@6b@
mov     [ebp+var_10], ecx
xor     ecx, ecx
mov     eax, [ebp+var_10]
mov     [ebp+var_4], ecx
cmp     [eax+1ch], ecx
jz      short loc_41271b
mov     ecx, eax
call    ?destroywindow@cwnd@@uaehxz
mov     [ebp+var_4], 0ffffffffh
call    loc_41273e
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset stru_421928
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwnd@@uae@xz
xor     eax, eax
retn    4
push    2
call    ?enddialog@cdialog@@qaexh@z
retn
push    [esp+arg_8]
push    [esp+4+arg_4]
push    [esp+8+arg_0]
call    ?ongrayctlcolor@cwnd@@qaepauhbrush__@@pavcdc@@pav1@i@z
retn    0ch
jmp     $+5
push    offset acommctrldragli
call    ds:registerwindowmessagea
mov     dword_4276f4, eax
retn
call    sub_412f0b
jmp     loc_412f18
push    0
mov     ecx, offset dword_4275f8
call    ??0cwnd@@aae@pauhwnd__@@@z
retn
push    offset unknown_libname_2
call    _atexit
add     esp, 4
retn
call    sub_412f4b
jmp     loc_412f58
push    1
mov     ecx, offset dword_4276b8
call    ??0cwnd@@aae@pauhwnd__@@@z
retn
push    offset unknown_libname_3
call    _atexit
add     esp, 4
retn
call    sub_412f8b
jmp     loc_412f98
push    0ffffffffh
mov     ecx, offset dword_427638
call    ??0cwnd@@aae@pauhwnd__@@@z
retn
push    offset unknown_libname_4
call    _atexit
add     esp, 4
retn
call    sub_412fcb
jmp     loc_412fd8
push    0fffffffeh
mov     ecx, offset dword_427678
call    ??0cwnd@@aae@pauhwnd__@@@z
retn
push    offset unknown_libname_5
call    _atexit
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+28h], 0
jnz     short loc_413af4
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
test    byte ptr [eax+18h], 1
mov     eax, 1
jnz     short loc_413ae5
push    1
call    ?afxenddeferregisterclass@@yghf@z
test    eax, eax
jnz     short loc_413aed
xor     eax, eax
jmp     short loc_413af9
mov     dword ptr [esi+28h], offset aafxwnd42s
mov     eax, 1
pop     esi
retn    4
push    ebp
mov     eax, [esp+arg_10]
mov     ebp, esp
test    eax, eax
push    ebx
push    esi
push    edi
jnz     short loc_413b0f
xor     eax, eax
jmp     short loc_413b12
mov     eax, [eax+1ch]
push    [ebp+arg_18]
mov     edi, [ebp+arg_c]
push    [ebp+arg_14]
push    eax
mov     esi, [edi+4]
mov     edx, [edi]
mov     eax, [edi+0ch]
sub     eax, esi
push    eax
mov     eax, [edi+8]
sub     eax, edx
push    eax
push    esi
push    edx
mov     eax, [ebp+arg_8]
or      eax, 40000000h
push    eax
push    [ebp+arg_4]
push    [ebp+arg_0]
push    0
call    ?createex@cwnd@@qaehkpbd0khhhhpauhwnd__@@pauhmenu__@@pax@z
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    1ch
lea     eax, [ecx+28h]
retn
mov     eax, [esp+point.x]
push    ebx
push    esi
push    edi
push    ebp
mov     esi, ecx
push    [esp+10h+point.y]
push    eax
push    dword ptr [esi+1ch]
call    ?_afxchildwindowfrompoint@@ygpauhwnd__@@pau1@utagpoint@@@z
mov     ebx, eax
test    ebx, ebx
jz      short loc_413e91
push    ebx
call    ds:getdlgctrlid
movzx   ebp, ax
mov     edi, [esp+10h+arg_8]
test    edi, edi
jz      short loc_413e8d
cmp     dword ptr [edi], 28h
jb      short loc_413e8d
mov     eax, [esi+1ch]
push    0
push    0
mov     [edi+8], eax
push    87h
mov     [edi+0ch], ebx
or      byte ptr [edi+4], 1
mov     dword ptr [edi+24h], 0ffffffffh
push    ebx
call    ds:sendmessagea
test    ah, 20h
jnz     short loc_413e8d
or      dword ptr [edi+4], 80000002h
mov     eax, ebp
jmp     short loc_413e96
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     eax, offset loc_414131
retn
mov     eax, offset loc_41434e
call    __eh_prolog
sub     esp, 4
push    ebx
push    esi
push    edi
mov     edi, ecx
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     esi, [eax+4]
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ecx, [eax+4]
call    ?beginwaitcursor@ccmdtarget@@qaexxz
mov     [ebp+var_4], 0
mov     ebx, [edi]
mov     ecx, edi
call    dword ptr [ebx+0b8h]
test    eax, eax
jz      short loc_4142b1
mov     ecx, edi
call    dword ptr [ebx+0f8h]
xor     ebx, ebx
push    ebx
push    ebx
push    1fh
push    dword ptr [edi+1ch]
call    ds:sendmessagea
push    1
push    1
push    ebx
push    ebx
push    1fh
push    dword ptr [edi+1ch]
call    ?sendmessagetodescendants@cwnd@@sgxpauhwnd__@@iijhh@z
mov     ecx, edi
call    ?gettoplevelparent@cwnd@@qbepav1@xz
lea     edi, [eax+1ch]
push    ebx
push    ebx
push    1fh
push    dword ptr [edi]
call    ds:sendmessagea
push    1
push    1
push    ebx
push    ebx
push    1fh
push    dword ptr [edi]
call    ?sendmessagetodescendants@cwnd@@sgxpauhwnd__@@iijhh@z
call    ds:getcapture
test    eax, eax
jz      short loc_41430a
push    ebx
push    ebx
push    1fh
push    eax
call    ds:sendmessagea
push    [ebp+dwdata]
push    [ebp+ucommand]
push    dword ptr [esi+8ch]
push    dword ptr [edi]
call    ds:winhelpa
test    eax, eax
jnz     short loc_414330
push    0ffffffffh
push    0
push    0f107h
call    ?afxmessagebox@@yghiii@z
mov     [ebp+var_4], 0ffffffffh
call    loc_414358
mov     eax, [ebp+var_c]
pop     edi
mov     large fs:0, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     eax, offset stru_421c30
jmp     ___cxxframehandler
lea     ecx, [ebp+var_d]
jmp     loc_403f72
mov     eax, offset off_41e6f0
retn
xor     eax, eax
retn    4
push    esi
mov     esi, ecx
call    ?afxgetthread@@ygpavcwinthread@@xz
test    eax, eax
jz      short loc_41550f
call    ?afxgetthread@@ygpavcwinthread@@xz
cmp     [eax+1ch], esi
jnz     short loc_41550f
push    [esp+4+arg_0]
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ecx, [eax+4]
call    ?devmodechange@cwinapp@@qaexpad@z
mov     ecx, esi
call    ?getstyle@cwnd@@qbekxz
test    eax, 40000000h
jnz     short loc_415537
call    ?getcurrentmessage@cwnd@@kgpbutagmsg@@xz
push    1
push    1
push    dword ptr [eax+0ch]
push    dword ptr [eax+8]
push    dword ptr [eax+4]
push    dword ptr [esi+1ch]
call    ?sendmessagetodescendants@cwnd@@sgxpauhwnd__@@iijhh@z
pop     esi
retn    4
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, 1
retn
mov     eax, 1
retn    4
xor     eax, eax
retn    4
xor     eax, eax
retn
xor     eax, eax
retn
mov     eax, offset dword_41eae0
retn
mov     eax, offset dword_41eb00
retn
mov     eax, offset dword_41eb30
retn
mov     eax, offset dword_41eb68
retn
mov     eax, 1
retn
xor     eax, eax
retn    4
mov     eax, offset dword_41eb90
retn
xor     eax, eax
retn    4
xor     eax, eax
retn    4
mov     eax, offset dword_41eba0
retn
push    esi
push    edi
mov     eax, [ecx+0ch]
mov     esi, ecx
test    eax, eax
jz      short loc_4166b8
cmp     dword ptr [esi+10h], 0
jnz     short loc_4166c7
mov     edi, 400h
push    edi
push    dword ptr [esi+8]
push    dword ptr [eax+4]
call    ds:getmenustate
and     eax, 0fffff6fbh
mov     edx, [esi+0ch]
push    [esp+8+lpnewitem]
push    dword ptr [esi+4]
or      eax, edi
push    eax
push    dword ptr [esi+8]
push    dword ptr [edx+4]
call    ds:modifymenua
jmp     short loc_4166c7
mov     ecx, [esi+14h]
push    [esp+8+lpnewitem]
push    dword ptr [ecx+1ch]
call    ?afxsetwindowtext@@ygxpauhwnd__@@pbd@z
pop     edi
pop     esi
retn    4
call    sub_411e46
xor     eax, eax
retn
mov     eax, offset off_4233fc
retn
mov     eax, offset off_41ecb0
retn
push    esi
push    edi
mov     edi, ecx
mov     esi, 0
call    ?afxgetthread@@ygpavcwinthread@@xz
test    eax, eax
jz      short loc_416a6f
call    ?afxgetthread@@ygpavcwinthread@@xz
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+7ch]
mov     esi, eax
xor     eax, eax
push    eax
mov     [edi+84h], eax
push    eax
push    36ah
push    dword ptr [esi+1ch]
call    ds:postmessagea
mov     eax, [esi]
mov     ecx, esi
push    [esp+8+arg_4]
push    [esp+0ch+arg_0]
call    dword ptr [eax+74h]
pop     edi
pop     esi
retn    8
add     esp, 4
pop     edi
pop     esi
retn    8
xor     eax, eax
retn
mov     eax, [ecx+38h]
retn
mov     eax, offset off_41f2a0
retn
mov     eax, offset loc_4180e2
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     esi, 0ffffffffh
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
mov     edi, [eax+4]
call    sub_41d405
test    eax, eax
jz      short loc_41846e
mov     ebx, [edi]
mov     ecx, edi
call    dword ptr [ebx+8ch]
test    eax, eax
jz      short loc_41846e
mov     ecx, edi
call    dword ptr [ebx+58h]
test    eax, eax
jnz     short loc_418467
mov     ecx, [edi+1ch]
test    ecx, ecx
jz      short loc_418460
mov     eax, [ecx]
call    dword ptr [eax+60h]
mov     ecx, edi
call    dword ptr [ebx+70h]
jmp     short loc_41846c
mov     ecx, edi
call    dword ptr [ebx+5ch]
mov     esi, eax
call    ?afxwinterm@@ygxxz
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    10h
push    [esp+lprect]
push    dword ptr [ecx+4]
call    ds:getclipbox
retn    4
push    esi
push    edi
lea     edi, [ecx+4]
mov     esi, [edi]
test    esi, esi
jz      short loc_418c6b
push    0
call    ?afxmaphgdiobj@@yapavchandlemap@@h@z
add     esp, 4
mov     ecx, eax
test    ecx, ecx
jz      short loc_418c6b
push    dword ptr [edi]
call    sub_4122d4
mov     eax, esi
mov     dword ptr [edi], 0
pop     edi
pop     esi
retn
cmp     dword ptr [ecx+4], 0
mov     eax, 0
jz      short locret_418c8d
call    sub_418c49
push    eax
call    ds:deleteobject
retn
sub     esp, 4
lea     eax, [esp+4+pexceptionobject]
push    offset __ti5pavcresourceexception@@
mov     [esp+8+pexceptionobject], offset dword_4277a0
push    eax
call    __cxxthrowexception@8
add     esp, 4
retn
mov     eax, offset off_41f7b8
retn
push    esi
mov     esi, ecx
call    ??1cframewnd@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_41956f
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+28h], 0
jnz     short loc_419cce
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
test    byte ptr [eax+18h], 8
mov     eax, 1
jnz     short loc_419cbf
push    8
call    ?afxenddeferregisterclass@@yghf@z
test    eax, eax
jnz     short loc_419cc7
xor     eax, eax
jmp     short loc_419cf7
mov     dword ptr [esi+28h], offset aafxframeorview
mov     eax, [esi+20h]
test    ah, 80h
jz      short loc_419ce5
cmp     dword_427a0c, 0
jz      short loc_419cf2
or      ah, 40h
mov     [esi+20h], eax
cmp     dword_427a0c, 0
jz      short loc_419cf2
or      byte ptr [esi+2dh], 2
mov     eax, 1
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    dword ptr [eax]
push    eax
call    sub_419e4b
retn    4
push    esi
push    edi
mov     esi, ecx
call    ?default@cwnd@@iaejxz
cmp     eax, 0ffffffffh
jnz     short loc_419e60
mov     eax, 0ffffffffh
jmp     short loc_419e9c
mov     edi, [esi]
mov     ecx, esi
push    [esp+8+arg_4]
push    [esp+0ch+arg_0]
call    dword ptr [edi+0e4h]
test    eax, eax
mov     eax, 0ffffffffh
jz      short loc_419e9c
push    0
push    0e001h
push    362h
push    dword ptr [esi+1ch]
call    ds:postmessagea
push    1
mov     ecx, esi
call    dword ptr [edi+0d0h]
xor     eax, eax
pop     edi
pop     esi
retn    8
mov     eax, [ecx+98h]
retn
mov     eax, ecx
retn
call    nullsub_2
jmp     loc_41b5a2
push    offset sub_41b5b0
call    _atexit
add     esp, 4
retn
push    offset dword_427c38
call    ?afxdeleteobject@@ygxpapax@z
retn
mov     eax, offset off_41e558
retn
mov     eax, offset off_41e980
retn
mov     eax, offset off_41ebc0
retn
mov     eax, offset loc_41b748
call    __eh_prolog
sub     esp, 4
mov     [ebp+var_4], 0
mov     [ebp+var_4], 0ffffffffh
push    esi
mov     eax, ecx
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7cnotrackobject@@6b@
mov     dword ptr [ecx], offset ??_7_afx_win_state@@6b@
mov     esi, ecx
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_421e18
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     loc_403fec
push    esi
mov     esi, ecx
call    ??1_afx_win_state@@uae@xz
test    [esp+arg_0], 1
jz      short loc_41b76f
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
mov     eax, 1
retn
mov     eax, offset off_41ed18
retn
call    nullsub_3
jmp     loc_41baf2
push    offset unknown_libname_17
call    _atexit
add     esp, 4
retn
mov     eax, offset off_41edf0
retn
mov     eax, offset off_41eea8
retn
call    nullsub_4
jmp     loc_41be39
push    offset unknown_libname_18
call    _atexit
add     esp, 4
retn
mov     eax, offset loc_41bf7c
call    __eh_prolog
sub     esp, 4
mov     [ebp+var_10], ecx
mov     [ebp+var_4], 0ffffffffh
call    loc_41bf86
mov     eax, [ebp+var_c]
mov     esp, ebp
mov     large fs:0, eax
pop     ebp
retn
mov     eax, offset stru_422130
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     loc_41ce8b
call    nullsub_5
jmp     loc_41c33d
push    offset unknown_libname_19
call    _atexit
add     esp, 4
retn
mov     eax, offset loc_41c4a6
call    __eh_prolog
sub     esp, 4
push    esi
push    8
call    ??2@yapaxi@z
mov     [ebp+block], eax
add     esp, 4
mov     esi, eax
xor     eax, eax
mov     [ebp+var_4], eax
test    esi, esi
jz      short loc_41c48e
mov     byte ptr [ebp+var_4], 1
mov     dword ptr [esi], offset ??_7cobject@@6b@
mov     byte ptr [ebp+var_4], al
mov     dword ptr [esi], offset ??_7cmenu@@6b@
mov     [esi+4], eax
mov     eax, esi
jmp     short loc_41c490
mov     ecx, [ebp+block]
jmp     loc_403d80
xor     eax, eax
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_422300
jmp     ___cxxframehandler
push    [ebp+block]
call    ??3cobject@@sgxpax@z
retn
mov     eax, offset off_41ef00
retn
mov     eax, offset off_41efc8
retn
call    unknown_libname_21
jmp     loc_41c54f
push    offset unknown_libname_22
call    _atexit
add     esp, 4
retn
mov     eax, offset off_41efe0
retn
call    unknown_libname_23
jmp     loc_41c62e
push    offset unknown_libname_24
call    _atexit
add     esp, 4
retn
mov     eax, offset off_41eff8
retn
mov     eax, offset off_41f040
retn
mov     eax, offset loc_41c746
call    __eh_prolog
sub     esp, 4
push    esi
push    8
call    ??2@yapaxi@z
mov     [ebp+block], eax
add     esp, 4
mov     esi, eax
xor     eax, eax
mov     [ebp+var_4], eax
test    esi, esi
jz      short loc_41c72e
mov     byte ptr [ebp+var_4], 1
mov     dword ptr [esi], offset ??_7cobject@@6b@
mov     byte ptr [ebp+var_4], al
mov     dword ptr [esi], offset ??_7cgdiobject@@6b@
mov     [esi+4], eax
mov     eax, esi
jmp     short loc_41c730
mov     ecx, [ebp+block]
jmp     loc_403d80
xor     eax, eax
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset stru_4224f8
jmp     ___cxxframehandler
push    [ebp+block]
call    ??3cobject@@sgxpax@z
retn
mov     eax, offset off_41f058
retn
mov     eax, offset off_41f300
retn
mov     eax, offset off_41f318
retn
call    unknown_libname_25
jmp     loc_41c7f5
push    offset unknown_libname_26
call    _atexit
add     esp, 4
retn
mov     eax, offset off_41f330
retn
call    unknown_libname_27
jmp     loc_41c8d4
push    offset unknown_libname_28
call    _atexit
add     esp, 4
retn
push    esi
mov     eax, [ecx]
mov     esi, ecx
test    eax, eax
jz      short loc_41cea9
cmp     dword_427968, 0
jz      short loc_41cea9
push    eax
mov     ecx, dword_427968
call    ?freeslot@cthreadslotdata@@qaexh@z
mov     dword ptr [esi], 0
pop     esi
retn
mov     eax, offset loc_41cee6
retn
mov     eax, offset off_41f3a8
retn
call    nullsub_6
jmp     loc_41d03a
push    offset unknown_libname_30
call    _atexit
add     esp, 4
retn
call    nullsub_7
jmp     loc_41d08a
push    offset unknown_libname_31
call    _atexit
add     esp, 4
retn
call    sub_41d0d9
jmp     loc_41d0e3
mov     ecx, offset dword_4279b0
jmp     ??0aux_data@@qae@xz
push    offset sub_41d0f1
call    _atexit
add     esp, 4
retn
mov     ecx, offset dword_4279b0
jmp     loc_41d729
mov     eax, offset off_41f718
retn
mov     eax, offset off_41fbb0
retn
add     ecx, 50h
push    ecx
call    ?afxdeleteobject@@ygxpapax@z
retn
offset loc_41587a>