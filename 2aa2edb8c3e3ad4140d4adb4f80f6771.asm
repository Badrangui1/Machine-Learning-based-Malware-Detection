xor     eax, eax
retn
test    edi, edi
jz      short loc_10001076
test    esi, esi
jz      short loc_10001076
movzx   ecx, word ptr dword_1000b288
mov     eax, 2
push    ecx
mov     [esi], ax
mov     dword ptr [esi+4], 0ffffffffh
call    htons
mov     [esi+2], ax
movsx   edx, byte ptr [edi]
push    edx
call    ds:isalpha
add     esp, 4
push    edi
test    eax, eax
jz      short loc_10001063
call    gethostbyname
test    eax, eax
jz      short loc_10001076
mov     eax, [eax+0ch]
mov     ecx, [eax]
mov     edx, [ecx]
mov     [esi+4], edx
mov     eax, 1
retn
call    inet_addr
cmp     eax, 0ffffffffh
jz      short loc_10001076
mov     [esi+4], eax
mov     eax, 1
retn
xor     eax, eax
retn
sub     esp, 208h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+208h+var_4], eax
push    esi
call    ds:getlasterror
push    0
push    0
mov     esi, eax
lea     eax, [esp+214h+buffer]
push    eax
push    400h
push    esi
push    0
push    1100h
call    ds:formatmessagea
mov     ecx, dword ptr [esp+20ch+buffer]
push    ecx
push    esi
push    edi
lea     edx, [esp+218h+text]
push    offset format
push    edx
call    ds:sprintf
add     esp, 14h
push    0
push    offset caption
lea     eax, [esp+214h+text]
push    eax
push    0
call    ds:messageboxa
mov     ecx, dword ptr [esp+20ch+buffer]
push    ecx
call    ds:localfree
mov     ecx, [esp+20ch+var_4]
pop     esi
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 208h
retn
push    eax
mov     eax, [esp+4+lpbuffer]
push    ecx
mov     ecx, hfile
push    edx
push    eax
push    ecx
call    ds:readfile
retn
push    eax
mov     eax, [esp+4+lpbuffer]
push    ecx
mov     ecx, hfile
push    edx
push    eax
push    ecx
call    ds:writefile
retn
sub     esp, 10ch
mov     eax, s
push    esi
push    0fch
xor     esi, esi
lea     ecx, [esp+114h+readfds.fd_array+4]
push    esi
push    ecx
mov     [esp+11ch+readfds.fd_count], 1
mov     [esp+11ch+readfds.fd_array], eax
call    memset
mov     eax, dword_1000b4c8
add     esp, 0ch
cmp     eax, 3
jnz     short loc_1000118e
mov     eax, 7a120h
jmp     short loc_100011bc
cmp     eax, 2
jnz     short loc_100011a2
cmp     dword_1000b4b0, eax
jnz     short loc_100011ba
mov     eax, 7a120h
jmp     short loc_100011bc
cmp     eax, 5
jnz     short loc_100011ae
mov     eax, 186a0h
jmp     short loc_100011bc
cmp     eax, 6
jnz     short loc_100011ba
mov     eax, dword_1000b068
jmp     short loc_100011bc
xor     eax, eax
mov     [esp+110h+var_108], eax
neg     eax
sbb     eax, eax
lea     edx, [esp+110h+var_10c]
and     eax, edx
push    eax
push    esi
push    esi
lea     eax, [esp+11ch+readfds]
push    eax
push    esi
mov     [esp+124h+var_10c], esi
call    select
test    eax, eax
jz      short loc_1000122e
mov     ecx, s
push    2
push    edi
push    ebx
push    ecx
call    recv
cmp     eax, 0ffffffffh
jnz     short loc_100011ff
xor     eax, eax
pop     esi
add     esp, 10ch
retn
cmp     eax, esi
jnz     short loc_10001219
mov     edx, [esp+110h+arg_0]
mov     [edx], eax
mov     eax, 1
pop     esi
add     esp, 10ch
retn
mov     eax, s
push    esi
push    edi
push    ebx
push    eax
call    recv
mov     esi, eax
cmp     esi, 0ffffffffh
jz      short loc_100011f5
mov     ecx, [esp+110h+arg_0]
mov     [ecx], esi
mov     eax, 1
pop     esi
add     esp, 10ch
retn
sub     esp, 110h
mov     eax, s
push    esi
push    0fch
xor     esi, esi
lea     ecx, [esp+118h+writefds.fd_array+4]
push    esi
push    ecx
mov     [esp+120h+var_10d], 0ah
mov     [esp+120h+writefds.fd_count], 1
mov     [esp+120h+writefds.fd_array], eax
call    memset
add     esp, 0ch
push    esi
push    esi
lea     edx, [esp+11ch+writefds]
push    edx
push    esi
push    esi
mov     [esp+128h+var_10c], esi
mov     [esp+128h+var_108], esi
call    select
test    eax, eax
jz      short loc_100012e4
mov     eax, [esp+114h+len]
mov     ecx, [esp+114h+buf]
mov     edx, s
push    esi
push    eax
push    ecx
push    edx
call    send
mov     esi, eax
cmp     esi, 0ffffffffh
jnz     short loc_100012ca
xor     eax, eax
pop     esi
add     esp, 110h
retn
mov     ecx, s
push    0
push    1
lea     eax, [esp+11ch+var_10d]
push    eax
push    ecx
call    send
cmp     eax, 0ffffffffh
jz      short loc_100012c0
mov     edx, [esp+114h+arg_8]
mov     [edx], esi
mov     eax, 1
pop     esi
add     esp, 110h
retn
cmp     dword_1000b4c4, 0
push    ebx
mov     ebx, eax
jz      short loc_1000131b
push    edi
push    ecx
mov     edi, edx
call    sub_10001150
add     esp, 4
pop     edi
pop     ebx
retn
mov     eax, [esp+4+arg_0]
push    ebx
call    sub_10001110
add     esp, 4
pop     ebx
retn
cmp     dword_1000b4c4, 0
jz      short loc_10001345
push    ecx
push    edx
push    eax
call    sub_10001250
add     esp, 0ch
retn
push    eax
mov     eax, [esp+4+arg_0]
call    sub_10001130
add     esp, 4
retn
mov     eax, dword_1000b4a4
retn
sub     esp, 20ch
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+20ch+var_4], eax
push    edi
push    offset filename
push    104h
mov     filename, 0
call    ds:getcurrentdirectorya
mov     edi, offset filename
dec     edi
mov     al, [edi+1]
inc     edi
test    al, al
jnz     short loc_100013a2
mov     ax, ds:word_100095a4
mov     [edi], ax
mov     eax, offset filename
dec     eax
pop     edi
lea     ebx, [ebx+0]
mov     cl, [eax+1]
inc     eax
test    cl, cl
jnz     short loc_100013c0
mov     ecx, ds:filename
mov     edx, ds:dword_1000959c
push    offset filename
mov     [eax], ecx
mov     cl, ds:byte_100095a0
push    104h
mov     [eax+4], edx
lea     edx, [esp+214h+returnedstring]
push    edx
push    offset default
push    offset keyname
push    offset appname
mov     [eax+8], cl
call    ds:getprivateprofilestringa
lea     eax, [esp+20ch+returnedstring]
lea     edx, [eax+1]
lea     ecx, [ecx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10001410
sub     eax, edx
jz      short loc_10001459
push    0
push    0
lea     eax, [esp+214h+dir]
push    eax
lea     ecx, [esp+218h+drive]
push    ecx
lea     edx, [esp+21ch+returnedstring]
push    edx
call    ds:_splitpath
push    0
push    offset filename
lea     eax, [esp+228h+dir]
push    eax
lea     ecx, [esp+22ch+drive]
push    ecx
push    offset filename
call    ds:_makepath
add     esp, 28h
mov     ecx, [esp+20ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 20ch
retn
push    0ffffffffh
push    offset seh_10001470
mov     eax, large fs:0
push    eax
sub     esp, 2ch
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+38h+var_10], eax
push    ebx
push    ebp
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+4ch+var_c]
mov     large fs:0, eax
mov     edi, ds:getprivateprofileinta
xor     ebp, ebp
cmp     dword_1000b034, ebp
jz      short loc_100014d0
push    offset filename
push    1
push    offset ausenetwork_0
push    offset appname
call    edi
neg     eax
sbb     eax, eax
neg     eax
mov     dword_1000b4c4, eax
cmp     dword_1000b044, ebp
jz      short loc_100014f6
push    offset filename
push    1
push    offset aisbanked_0
push    offset appname
call    edi
neg     eax
sbb     eax, eax
neg     eax
mov     dword_1000b048, eax
cmp     dword_1000b04c, ebp
jz      short loc_1000151b
push    offset filename
push    ebp
push    offset aswitchinputonl
push    offset appname
call    edi
neg     eax
sbb     eax, eax
neg     eax
mov     dword_1000b4cc, eax
cmp     dword_1000b038, ebp
jz      short loc_10001541
push    offset filename
push    1
push    offset anewsocketeacht
push    offset appname
call    edi
neg     eax
sbb     eax, eax
neg     eax
mov     dword_1000b03c, eax
cmp     dword_1000b05c, ebp
jz      short loc_10001567
push    offset filename
push    1
push    offset aexpectreply_0
push    offset appname
call    edi
neg     eax
sbb     eax, eax
neg     eax
mov     dword_1000b060, eax
cmp     dword_1000b064, ebp
jz      short loc_100015a7
push    offset filename
push    186a0h
push    offset atimeoutusecs
push    offset appname
call    edi
cmp     eax, ebp
mov     dword_1000b068, eax
jge     short loc_10001596
mov     dword_1000b068, ebp
jmp     short loc_100015a7
cmp     eax, 0f4240h
jle     short loc_100015a7
mov     dword_1000b068, 0f423fh
cmp     dword_1000b050, ebp
jz      short loc_100015cd
push    offset filename
push    1
push    offset ainputspecified_0
push    offset appname
call    edi
neg     eax
sbb     eax, eax
neg     eax
mov     dword_1000b054, eax
cmp     dword_1000b058, ebp
jz      short loc_100015f2
push    offset filename
push    ebp
push    offset acountfromzero_0
push    offset appname
call    edi
neg     eax
sbb     eax, eax
neg     eax
mov     dword_1000b4d0, eax
mov     ebx, ds:getprivateprofilestringa
mov     esi, ds:strncpy
cmp     dword_1000b290, ebp
jz      loc_10001691
push    offset filename
push    1000h
push    offset destination
push    offset acidodt
push    offset aswitchtemplate
push    offset appname
call    ebx
push    offset destination
lea     ecx, [esp+50h+var_34]
call    ds:??0?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qae@pbd@z
push    offset asc_10009694
push    offset an_0
lea     ecx, [esp+54h+var_34]
mov     [esp+54h+var_4], ebp
call    ds:?replace@?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qaehpbd0@z
push    offset asc_1000968c
push    offset ar
lea     ecx, [esp+54h+var_34]
call    ds:?replace@?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qaehpbd0@z
push    1000h
lea     ecx, [esp+50h+var_34]
call    ds:??b?$csimplestringt@d$00@atl@@qbepbdxz
push    eax
push    offset destination
call    esi
add     esp, 0ch
lea     ecx, [esp+4ch+var_34]
mov     [esp+4ch+var_4], 0ffffffffh
call    ds:??1?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qae@xz
cmp     dword_1000b294, ebp
jz      short loc_10001716
push    offset filename
push    40h
push    offset returnedstring
push    offset an_0
push    offset aswitchprompt
push    offset appname
call    ebx
push    offset returnedstring
lea     ecx, [esp+50h+var_38]
call    ds:??0?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qae@pbd@z
push    offset asc_10009694
push    offset an_0
lea     ecx, [esp+54h+var_38]
mov     [esp+54h+var_4], 1
call    ds:?replace@?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qaehpbd0@z
push    offset asc_1000968c
push    offset ar
lea     ecx, [esp+54h+var_38]
call    ds:?replace@?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qaehpbd0@z
push    40h
lea     ecx, [esp+50h+var_38]
call    ds:??b?$csimplestringt@d$00@atl@@qbepbdxz
push    eax
push    offset returnedstring
call    esi
add     esp, 0ch
lea     ecx, [esp+4ch+var_38]
call    ds:??1?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qae@xz
cmp     dword_1000b17c, ebp
jz      short loc_1000173e
push    offset filename
push    104h
push    offset alocalhost
push    offset alocalhost_0
push    offset aswitchserver
push    offset appname
call    ebx
cmp     dword_1000b284, ebp
jz      short loc_10001761
push    offset filename
push    1162h
push    offset aswitchport
push    offset appname
call    edi
mov     dword_1000b288, eax
cmp     dword_1000b06c, ebp
jz      short loc_10001789
push    offset filename
push    104h
push    offset acom1_0
push    offset acom1
push    offset acomport
push    offset appname
call    ebx
cmp     dword_1000b174, ebp
jz      short loc_100017fb
push    offset filename
push    2580h
push    offset abaud
push    offset appname
call    edi
cmp     eax, 9600h
mov     dword_1000b178, eax
jg      short loc_100017d3
jz      short loc_100017fb
cmp     eax, 3840h
jg      short loc_100017cc
jz      short loc_100017fb
cmp     eax, 12c0h
jz      short loc_100017fb
cmp     eax, 2580h
jmp     short loc_100017ef
cmp     eax, 4b00h
jmp     short loc_100017ef
cmp     eax, 1f400h
jg      short loc_100017ea
jz      short loc_100017fb
cmp     eax, 0e100h
jz      short loc_100017fb
cmp     eax, 1c200h
jmp     short loc_100017ef
cmp     eax, 3e800h
jz      short loc_100017fb
mov     dword_1000b178, 2580h
cmp     dword_1000b040, ebp
jz      loc_10001ac6
push    offset filename
push    20h
lea     eax, [esp+54h+returnedstring]
push    eax
push    offset default
push    offset acommandset
push    offset appname
call    ebx
mov     esi, ds:strnlen
push    20h
push    offset string2
call    esi
mov     edi, ds:_strnicmp
push    eax
lea     ecx, [esp+58h+returnedstring]
push    offset string2
push    ecx
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_10001867
mov     eax, 1
mov     dword_1000b4a8, eax
mov     dword_1000b4bc, ebp
mov     dword_1000b4c8, eax
jmp     loc_10001a2e
push    20h
push    offset string
call    esi
push    eax
lea     edx, [esp+58h+returnedstring]
push    offset string
push    edx
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_100018a9
mov     dword_1000b4a8, ebp
mov     dword_1000b4bc, ebp
mov     dword_1000b4c0, 1
mov     dword_1000b4c8, 6
jmp     loc_10001a34
push    20h
push    offset asismmx
call    esi
push    eax
lea     eax, [esp+58h+returnedstring]
push    offset asismmx
push    eax
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_100018f6
mov     eax, 1
mov     dword_1000b4a8, ebp
mov     dword_1000b4ac, eax
mov     dword_1000b4bc, ebp
mov     dword_1000b4c0, ebp
mov     dword_1000b4c8, 2
mov     dword_1000b4b0, eax
jmp     loc_10001a3a
push    20h
push    offset asismav
call    esi
push    eax
lea     ecx, [esp+58h+returnedstring]
push    offset asismav
push    ecx
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_1000193d
mov     eax, 2
mov     dword_1000b4a8, ebp
mov     dword_1000b4ac, 1
mov     dword_1000b4bc, ebp
mov     dword_1000b4c8, eax
mov     dword_1000b4b0, eax
jmp     loc_10001a3a
push    20h
push    offset asis
call    esi
push    eax
lea     edx, [esp+58h+returnedstring]
push    offset asis
push    edx
call    edi
add     esp, 14h
test    eax, eax
jz      loc_100018c6
push    20h
push    offset arcpt01
call    esi
push    eax
lea     eax, [esp+58h+returnedstring]
push    offset arcpt01
push    eax
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_100019ac
mov     dword_1000b4a8, ebp
mov     dword_1000b4ac, ebp
mov     dword_1000b4b4, 1
mov     dword_1000b4bc, ebp
mov     dword_1000b4c0, ebp
mov     dword_1000b4c8, 3
jmp     loc_10001a40
push    20h
push    offset alptp
call    esi
push    eax
lea     ecx, [esp+58h+returnedstring]
push    offset alptp
push    ecx
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_100019f7
mov     dword_1000b4a8, ebp
mov     dword_1000b4b8, 1
mov     dword_1000b4ac, ebp
mov     dword_1000b4b4, ebp
mov     dword_1000b4bc, ebp
mov     dword_1000b4c8, 4
jmp     short loc_10001a46
push    20h
push    offset avideohub
call    esi
push    eax
lea     edx, [esp+58h+returnedstring]
push    offset avideohub
push    edx
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_10001a46
mov     dword_1000b4a8, ebp
mov     dword_1000b4bc, 1
mov     dword_1000b4c8, 5
mov     dword_1000b4c0, ebp
mov     dword_1000b4ac, ebp
mov     dword_1000b4b4, ebp
mov     dword_1000b4b8, ebp
push    offset filename
push    280h
push    offset byte_1000c718
push    offset default
push    offset avideoonlyinput
push    offset appname
call    ebx
push    offset filename
push    280h
push    offset byte_1000c998
push    offset default
push    offset aaudioonlyinput
push    offset appname
call    ebx
push    offset filename
push    280h
push    offset byte_1000cc18
push    offset default
push    offset avideoonlyoutpu
push    offset appname
call    ebx
push    offset filename
push    280h
push    offset byte_1000ce98
push    offset default
push    offset aaudioonlyoutpu
push    offset appname
call    ebx
mov     ecx, [esp+4ch+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebp
pop     ebx
mov     ecx, [esp+38h+var_10]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 38h
retn
xor     edx, edx
test    ecx, ecx
jg      short loc_10001b05
test    eax, eax
jg      short loc_10001afd
xor     eax, eax
retn
mov     eax, dword_1000c614[eax*4]
retn
test    eax, eax
jg      short loc_10001b11
mov     eax, dword_1000c514[ecx*4]
retn
mov     ecx, dword_1000c514[ecx*4]
test    ecx, ecx
jz      short loc_10001b1e
mov     edx, ecx
mov     eax, dword_1000c614[eax*4]
test    eax, eax
jnz     short locret_10001b2b
mov     eax, edx
retn
cmp     [esp+arg_0], 0
jz      locret_10001be2
test    eax, eax
jz      locret_10001be2
push    ebp
push    edi
push    offset delimiter
push    eax
call    ds:strtok
mov     edi, eax
add     esp, 8
xor     ebp, ebp
test    edi, edi
jz      loc_10001be0
push    ebx
push    esi
cmp     ebp, [esp+10h+arg_4]
jge     short loc_10001bde
xor     ebx, ebx
xor     eax, eax
mov     esi, edi
cmp     [edi], bl
jz      short loc_10001bc7
cmp     ebx, 0ah
jge     short loc_10001ba7
movsx   eax, byte ptr [esi]
push    eax
call    ds:isdigit
add     esp, 4
test    eax, eax
jnz     short loc_10001b99
movsx   ecx, byte ptr [esi]
push    ecx
call    ds:isspace
add     esp, 4
test    eax, eax
jz      short loc_10001bc7
inc     esi
inc     ebx
cmp     byte ptr [esi], 0
mov     eax, 1
jnz     short loc_10001b72
jmp     short loc_10001bab
test    eax, eax
jz      short loc_10001bc7
push    edi
call    ds:atoi
mov     ebp, eax
add     esp, 4
test    ebp, ebp
jle     short loc_10001bc7
mov     edx, [esp+10h+arg_8]
mov     eax, [esp+10h+arg_0]
mov     [eax+ebp*4-4], edx
push    offset delimiter
push    0
call    ds:strtok
mov     edi, eax
add     esp, 8
inc     ebp
test    edi, edi
jnz     short loc_10001b62
pop     esi
pop     ebx
pop     edi
pop     ebp
retn
mov     eax, 1008h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1008h+var_4], eax
mov     ecx, [esp+1008h+arg_8]
mov     eax, [esp+1008h+source]
push    ebp
push    esi
mov     esi, [esp+1010h+count]
xor     ebp, ebp
mov     [esp+1010h+var_1008], ecx
test    esi, esi
jle     loc_10001cdb
push    esi
push    eax
lea     edx, [esp+1018h+destination]
push    edx
call    ds:strncpy
lea     eax, [esp+esi+101ch+destination]
add     esp, 0ch
cmp     byte ptr [eax], 0
jz      short loc_10001c49
mov     byte ptr [eax], 0
push    ebx
mov     ebx, ds:strtok
push    edi
lea     eax, [esp+1018h+destination]
push    offset asc_10009734
push    eax
call    ebx
mov     esi, eax
add     esp, 8
xor     edi, edi
test    esi, esi
jz      loc_10001cf7
mov     ebp, ds:atoi
cmp     edi, [esp+1018h+arg_c]
jge     short loc_10001cc0
mov     al, [esi]
test    al, al
jz      short loc_10001c9a
movsx   ecx, al
push    ecx
call    ds:isdigit
add     esp, 4
test    eax, eax
jnz     short loc_10001c9a
mov     al, [esi+1]
inc     esi
test    al, al
jnz     short loc_10001c81
push    esi
call    ebp
mov     edx, [esp+101ch+var_1008]
push    offset asc_10009734
push    0
mov     [edx+edi*4], eax
call    ebx
mov     esi, eax
add     esp, 0ch
test    esi, esi
jz      short loc_10001cbb
cmp     byte ptr [esi], 45h
jz      short loc_10001cc0
inc     edi
test    esi, esi
jnz     short loc_10001c72
xor     eax, eax
pop     edi
pop     ebx
pop     esi
pop     ebp
mov     ecx, [esp+1008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1008h
retn
mov     ecx, [esp+1010h+var_4]
pop     esi
pop     ebp
xor     ecx, esp
mov     eax, 10h
call    @__security_check_cookie@4
add     esp, 1008h
retn
mov     eax, ebp
jmp     short loc_10001cc2
push    ebx
mov     ebx, ds:__iob_func
push    ebp
push    esi
mov     esi, [esp+0ch+count]
push    edi
mov     edi, [esp+10h+arg_0]
push    esi
lea     eax, [esp+14h+destination]
push    eax
push    edi
push    offset agetswitchererr_0
call    ebx
mov     ebp, ds:fprintf
add     eax, 20h
push    eax
call    ebp
mov     eax, [esp+24h+destination]
add     esp, 14h
test    eax, eax
jz      short loc_10001d68
test    esi, esi
jle     short loc_10001d68
mov     ecx, source[edi*4]
push    esi
push    ecx
push    eax
call    ds:strncpy
add     esp, 0ch
mov     esi, eax
push    esi
push    offset atheerrorstring
call    ebx
add     eax, 20h
push    eax
call    ebp
add     esp, 0ch
pop     edi
mov     eax, esi
pop     esi
pop     ebp
pop     ebx
retn
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
retn
mov     eax, 12h
retn
sub     esp, 1b4h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1b4h+var_4], eax
mov     eax, [esp+1b4h+arg_8]
push    ebx
push    ebp
mov     ebp, [esp+1bch+arg_0]
xor     ebx, ebx
mov     [esp+1bch+var_1b0], eax
mov     [esp+1bch+var_1a8], ecx
mov     [esp+1bch+var_1ac], ebx
call    sub_10001360
test    eax, eax
jz      loc_10001f5e
push    esi
push    edi
cmp     dword_1000b4c4, ebx
jz      loc_10001ead
mov     eax, s
cmp     eax, 0ffffffffh
jz      short loc_10001e1f
push    eax
call    closesocket
mov     s, 0ffffffffh
push    6
push    1
push    2
call    socket
mov     s, eax
cmp     eax, 0ffffffffh
jnz     short loc_10001e3e
call    wsacleanup
mov     eax, 0bh
pop     edi
pop     esi
pop     ebp
pop     ebx
mov     ecx, [esp+1b4h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1b4h
retn
call    wsacleanup
lea     edx, [esp+1c4h+wsadata]
push    edx
push    101h
call    wsastartup
test    eax, eax
jz      short loc_10001de7
mov     eax, 0ah
jmp     short loc_10001e06
lea     esi, [esp+1c4h+name]
mov     edi, offset alocalhost
call    sub_10001010
test    eax, eax
jnz     short loc_10001e71
mov     eax, s
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
mov     eax, 0dh
jmp     short loc_10001e06
mov     edx, s
push    10h
lea     ecx, [esp+1c8h+name]
push    ecx
push    edx
call    connect
cmp     eax, 0ffffffffh
jnz     short loc_10001ead
mov     eax, s
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
mov     eax, 0ch
jmp     loc_10001e06
mov     edi, [esp+1c4h+len]
mov     esi, ebp
test    edi, edi
jbe     short loc_10001ee0
lea     ebx, [ebx+0]
push    0
lea     ecx, [esp+1c8h+var_1ac]
mov     edx, edi
mov     eax, esi
call    sub_10001330
add     esp, 4
test    eax, eax
jz      short loc_10001f3a
mov     eax, [esp+1c4h+var_1ac]
add     esi, eax
sub     edi, eax
jnz     short loc_10001ec0
mov     esi, [esp+1c4h+var_1b0]
push    0
lea     ecx, [esp+1c8h+var_1b4]
mov     edx, 1
mov     eax, esi
mov     [esp+1c8h+var_1b4], ebx
call    sub_10001300
add     esp, 4
test    eax, eax
jz      short loc_10001f26
mov     eax, [esp+1c4h+var_1b4]
test    eax, eax
jz      short loc_10001f4e
add     esi, eax
add     ebx, eax
push    0
lea     ecx, [esp+1c8h+var_1b4]
mov     edx, 1
mov     eax, esi
call    sub_10001300
add     esp, 4
test    eax, eax
jnz     short loc_10001f01
mov     edi, offset asendbcscommand_2
call    sub_10001080
mov     eax, 0eh
jmp     loc_10001e06
mov     edi, offset asendbcscommand_1
call    sub_10001080
mov     eax, 0fh
jmp     loc_10001e06
mov     ecx, [esp+1c4h+var_1a8]
mov     byte ptr [esi], 0
mov     [ecx], ebx
xor     eax, eax
jmp     loc_10001e06
mov     ecx, [esp+1bch+var_4]
pop     ebp
pop     ebx
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 1b4h
retn
mov     eax, 1018h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1018h+var_4], eax
mov     eax, [esp+1018h+arg_4]
push    ebx
push    ebp
mov     ebp, [esp+1020h+destination]
push    esi
xor     ebx, ebx
push    edi
mov     edi, ecx
mov     esi, edx
mov     [esp+1028h+var_1008], eax
mov     [esp+1028h+var_100c], ebx
mov     [esp+1028h+var_1014], ebx
mov     [esp+1028h+var_1010], ebx
call    sub_10001360
test    eax, eax
jz      loc_10002131
cmp     edi, ebx
jbe     short loc_10001ff0
push    ebx
lea     ecx, [esp+102ch+var_100c]
mov     edx, edi
mov     eax, esi
call    sub_10001330
add     esp, 4
test    eax, eax
jz      short loc_10002031
mov     eax, [esp+1028h+var_100c]
add     esi, eax
sub     edi, eax
jnz     short loc_10001fd1
mov     edi, ebp
mov     [ebp+0], bl
mov     ebp, ds:_strnicmp
jmp     short loc_10002000
mov     [esp+1028h+var_1018], ebx
push    ebx
lea     ecx, [esp+102ch+var_1018]
mov     edx, 1
lea     eax, [esp+102ch+string1]
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_10002115
cmp     [esp+1028h+var_1018], ebx
jz      short loc_10002045
cmp     [esp+1028h+string1], 2eh
jnz     short loc_10002004
jmp     short loc_10002058
mov     edi, offset asendrcpt01comm_1
call    sub_10001080
mov     eax, 0fh
jmp     loc_10002136
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     [esp+1028h+var_1010], 1
lea     esi, [esp+1028h+var_1003]
lea     esp, [esp+0]
push    ebx
lea     ecx, [esp+102ch+var_1018]
mov     edx, 1
mov     eax, esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_10002115
mov     eax, [esp+1028h+var_1018]
cmp     eax, ebx
jz      short loc_1000208e
add     esi, eax
cmp     byte ptr [esi-1], 0dh
jnz     short loc_10002060
jmp     short loc_100020a1
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     [esp+1028h+var_1010], 1
push    2
lea     ecx, [esp+102ch+string1]
push    offset aa
push    ecx
mov     [esi], bl
call    ebp
add     esp, 0ch
test    eax, eax
jz      short loc_100020cd
push    2
lea     edx, [esp+102ch+string1]
push    offset ae
push    edx
call    ebp
add     esp, 0ch
test    eax, eax
jnz     short loc_100020fb
lea     eax, [esp+1028h+string1]
push    1000h
push    eax
call    ds:strnlen
push    eax
lea     ecx, [esp+1034h+string1]
push    ecx
push    edi
mov     [esp+103ch+var_1018], eax
call    ds:strncat
mov     eax, [esp+103ch+var_1018]
add     esp, 14h
add     edi, eax
add     [esp+1028h+var_1014], eax
cmp     [esp+1028h+var_1010], ebx
jz      loc_10002000
mov     eax, [esp+1028h+var_1008]
mov     edx, [esp+1028h+var_1014]
mov     [edi], bl
mov     [eax], edx
xor     eax, eax
jmp     short loc_10002136
mov     edi, offset asendrcpt01comm_2
call    sub_10001080
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     eax, 0eh
jmp     short loc_10002136
mov     eax, 2
mov     ecx, [esp+1028h+var_4]
pop     edi
pop     esi
pop     ebp
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1018h
retn
mov     eax, dword_1000b4a8
retn
mov     eax, dword_1000b4ac
retn
sub     esp, 1bch
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1bch+var_4], eax
mov     ecx, [esp+1bch+arg_c]
mov     eax, [esp+1bch+arg_0]
mov     [esp+1bch+var_1a8], ecx
xor     ecx, ecx
push    ebx
mov     ebx, [esp+1c0h+str]
mov     [esp+1c0h+var_1ac], eax
mov     [esp+1c0h+var_1b4], ecx
mov     [esp+1c0h+var_1b0], ecx
mov     [esp+1c0h+var_1bc], ecx
call    sub_10001360
test    eax, eax
jz      loc_100024bb
push    esi
push    edi
cmp     dword_1000b4c4, ecx
jz      loc_100022e9
mov     eax, s
cmp     eax, 0ffffffffh
jz      short loc_1000221c
push    eax
call    closesocket
mov     s, 0ffffffffh
push    6
push    1
push    2
call    socket
mov     s, eax
cmp     eax, 0ffffffffh
jnz     short loc_10002251
call    wsacleanup
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     ecx, [esp+1bch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1bch
retn
call    wsacleanup
lea     edx, [esp+1c8h+wsadata]
push    edx
push    101h
call    wsastartup
test    eax, eax
jz      short loc_100021e5
pop     edi
pop     esi
mov     eax, 0ah
pop     ebx
mov     ecx, [esp+1bch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1bch
retn
lea     esi, [esp+1c8h+name]
mov     edi, offset alocalhost
call    sub_10001010
test    eax, eax
jnz     short loc_1000229a
mov     eax, s
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
pop     edi
pop     esi
mov     eax, 0dh
pop     ebx
mov     ecx, [esp+1bch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1bch
retn
mov     edx, s
push    10h
lea     ecx, [esp+1cch+name]
push    ecx
push    edx
call    connect
cmp     eax, 0ffffffffh
jnz     short loc_100022e9
mov     eax, s
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
pop     edi
pop     esi
mov     eax, 0ch
pop     ebx
mov     ecx, [esp+1bch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1bch
retn
mov     edi, [esp+1c8h+len]
mov     esi, [esp+1c8h+var_1ac]
test    edi, edi
jbe     short loc_1000231c
push    0
lea     ecx, [esp+1cch+var_1b0]
mov     edx, edi
mov     eax, esi
call    sub_10001330
add     esp, 4
test    eax, eax
jz      loc_100023f9
mov     eax, [esp+1c8h+var_1b0]
add     esi, eax
sub     edi, eax
jnz     short loc_100022f8
mov     esi, ebx
mov     [esp+1c8h+var_1b8], 0
jmp     short loc_10002330
push    0
lea     ecx, [esp+1cch+var_1b8]
mov     edx, 1
mov     eax, esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_10002494
mov     eax, [esp+1c8h+var_1b8]
test    eax, eax
jz      short loc_1000236a
add     [esp+1c8h+var_1bc], eax
add     esi, eax
mov     al, [esi-1]
cmp     al, 54h
jz      short loc_1000236a
cmp     al, 58h
jz      short loc_1000236a
cmp     al, 3fh
jnz     short loc_10002330
mov     edi, ds:strchr
push    54h
push    ebx
mov     byte ptr [esi], 0
call    edi
add     esp, 8
test    eax, eax
jz      loc_10002420
mov     ecx, [esp+1c8h+var_1ac]
cmp     byte ptr [ecx], 53h
mov     [esp+1c8h+var_1b4], 0
jnz     loc_1000246e
mov     bl, 29h
lea     ebx, [ebx+0]
push    0
lea     ecx, [esp+1cch+var_1b8]
mov     edx, 1
mov     eax, esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_10002494
mov     eax, [esp+1c8h+var_1b8]
test    eax, eax
jz      short loc_100023d0
add     [esp+1c8h+var_1bc], eax
add     esi, eax
cmp     [esi-1], bl
jnz     short loc_100023a0
mov     eax, [esp+1c8h+var_1bc]
mov     edx, [esp+1c8h+var_1a8]
pop     edi
mov     byte ptr [esi], 0
pop     esi
mov     [edx], eax
mov     eax, [esp+1c0h+var_1b4]
pop     ebx
mov     ecx, [esp+1bch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1bch
retn
mov     edi, offset asendbcscommand_1
call    sub_10001080
pop     edi
pop     esi
mov     eax, 0fh
pop     ebx
mov     ecx, [esp+1bch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1bch
retn
push    58h
push    ebx
call    edi
add     esp, 8
test    eax, eax
jz      short loc_1000245a
mov     eax, [esp+1c8h+var_1bc]
mov     edx, [esp+1c8h+var_1a8]
pop     edi
mov     [esp+1c4h+var_1b4], 6
pop     esi
mov     [edx], eax
mov     eax, [esp+1c0h+var_1b4]
pop     ebx
mov     ecx, [esp+1bch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1bch
retn
push    3fh
push    ebx
call    edi
add     esp, 8
test    eax, eax
jz      short loc_1000246e
mov     [esp+1c8h+var_1b4], 7
mov     eax, [esp+1c8h+var_1bc]
mov     edx, [esp+1c8h+var_1a8]
pop     edi
pop     esi
mov     [edx], eax
mov     eax, [esp+1c0h+var_1b4]
pop     ebx
mov     ecx, [esp+1bch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1bch
retn
mov     edi, offset asendbcscommand_2
call    sub_10001080
pop     edi
pop     esi
mov     eax, 0eh
pop     ebx
mov     ecx, [esp+1bch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1bch
retn
mov     ecx, [esp+1c0h+var_4]
pop     ebx
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 1bch
retn
mov     eax, 11bch
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+11bch+var_4], eax
mov     eax, [esp+11bch+arg_0]
mov     ecx, [esp+11bch+arg_c]
push    ebp
mov     ebp, [esp+11c0h+str]
push    esi
xor     esi, esi
mov     [esp+11c4h+var_11ac], eax
mov     [esp+11c4h+var_11a8], ecx
mov     [esp+11c4h+var_11bc], esi
mov     [esp+11c4h+var_11b0], esi
mov     [esp+11c4h+var_11b4], esi
call    sub_10001360
test    eax, eax
jz      loc_10002814
push    ebx
push    edi
cmp     dword_1000b4c4, esi
jz      loc_10002640
mov     eax, s
or      ebx, 0ffffffffh
cmp     eax, ebx
jz      short loc_1000259a
push    eax
call    closesocket
mov     s, ebx
push    6
push    1
push    2
call    socket
mov     s, eax
cmp     eax, ebx
jnz     short loc_100025c4
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     eax, 0bh
pop     edi
pop     ebx
pop     esi
pop     ebp
mov     ecx, [esp+11bch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11bch
retn
call    wsacleanup
lea     edx, [esp+11cch+wsadata]
push    edx
push    101h
call    wsastartup
test    eax, eax
jz      short loc_10002558
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     eax, 0ah
jmp     short loc_10002581
lea     esi, [esp+11cch+name]
mov     edi, offset alocalhost
call    sub_10001010
test    eax, eax
jnz     short loc_100025f3
mov     eax, s
push    eax
call    closesocket
mov     s, ebx
call    wsacleanup
mov     eax, 0dh
jmp     short loc_10002581
mov     edx, s
push    10h
lea     ecx, [esp+11d0h+name]
push    ecx
push    edx
call    connect
cmp     eax, ebx
jnz     short loc_10002635
mov     eax, s
push    eax
call    closesocket
mov     s, ebx
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     eax, 0ch
jmp     loc_10002581
cmp     dword_1000b4c4, 0
jnz     short loc_1000266b
xor     esi, esi
push    esi
lea     ecx, [esp+11d0h+var_11b8]
mov     edx, 1000h
lea     eax, [esp+11d0h+var_1004]
mov     [esp+11d0h+var_11b8], esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_10002706
cmp     [esp+11cch+var_11b8], esi
ja      short loc_10002640
mov     edi, [esp+11cch+len]
mov     esi, [esp+11cch+var_11ac]
test    edi, edi
jbe     short loc_100026a0
lea     ebx, [ebx+0]
push    0
lea     ecx, [esp+11d0h+var_11b0]
mov     edx, edi
mov     eax, esi
call    sub_10001330
add     esp, 4
test    eax, eax
jz      short loc_10002715
mov     eax, [esp+11cch+var_11b0]
add     esi, eax
sub     edi, eax
jnz     short loc_10002680
mov     esi, ebp
mov     [esp+11cch+var_11b8], 0
mov     bl, 0ah
lea     esp, [esp+0]
push    0
lea     ecx, [esp+11d0h+var_11b8]
mov     edx, 1
mov     eax, esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_100027f2
mov     eax, [esp+11cch+var_11b8]
test    eax, eax
jz      short loc_10002734
add     [esp+11cch+var_11b4], eax
add     esi, eax
cmp     [esi-1], bl
jnz     short loc_100026b0
push    45h
push    ebp
mov     byte ptr [esi], 0
call    ds:strchr
add     esp, 8
test    eax, eax
jnz     short loc_1000274c
mov     ecx, [esp+11cch+var_11a8]
mov     edx, [esp+11cch+var_11b4]
mov     [esp+11cch+var_11bc], eax
mov     [ecx], edx
jmp     loc_10002581
mov     edi, offset asendsiscommand_0
call    sub_10001080
jmp     loc_100027ff
mov     edi, offset asendsiscommand_1
call    sub_10001080
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     eax, 0fh
jmp     loc_10002581
mov     ecx, dword_1000b4a0
mov     byte ptr [esi], 0
call    ?unlock@csinglelock@@qaehxz
mov     eax, 11h
jmp     loc_10002581
mov     esi, ds:strnlen
push    3
push    offset ae01
call    esi
mov     edi, ds:_strnicmp
push    eax
push    offset ae01
push    ebp
call    edi
add     esp, 14h
test    eax, eax
jz      short loc_1000278a
push    3
push    offset ae12
call    esi
push    eax
push    offset ae12
push    ebp
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_100027a5
mov     ecx, [esp+11cch+var_11a8]
mov     edx, [esp+11cch+var_11b4]
mov     [esp+11cch+var_11bc], 6
mov     eax, [esp+11cch+var_11bc]
mov     [ecx], edx
jmp     loc_10002581
push    3
push    offset ae10
call    esi
push    eax
push    offset ae10
push    ebp
call    edi
add     esp, 14h
test    eax, eax
jz      short loc_100027d7
push    3
push    offset ae13
call    esi
push    eax
push    offset ae13
push    ebp
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_100027df
mov     [esp+11cch+var_11bc], 7
mov     ecx, [esp+11cch+var_11a8]
mov     edx, [esp+11cch+var_11b4]
mov     eax, [esp+11cch+var_11bc]
mov     [ecx], edx
jmp     loc_10002581
mov     edi, offset asendsiscommand_0
call    sub_10001080
mov     byte ptr [esi], 0
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     eax, 0eh
jmp     loc_10002581
mov     ecx, [esp+11c4h+var_4]
pop     esi
pop     ebp
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 11bch
retn
mov     al, [esp+arg_0]
cmp     al, 54h
jz      short loc_1000283f
cmp     al, 58h
jz      short loc_1000283f
xor     eax, eax
retn
mov     eax, 1
retn
movsx   eax, [esp+arg_0]
add     eax, 0ffffffdfh
cmp     eax, 39h
ja      short def_10002864
movzx   eax, ds:byte_1000287c[eax]
jmp     ds:jpt_10002864[eax*4]
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, 1008h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1008h+var_4], eax
mov     ecx, [esp+1008h+arg_8]
mov     eax, [esp+1008h+source]
push    ebx
push    esi
mov     esi, [esp+1010h+count]
xor     ebx, ebx
mov     [esp+1010h+var_1008], ecx
test    esi, esi
jle     loc_1000298f
push    esi
push    eax
lea     edx, [esp+1018h+destination]
push    edx
call    ds:strncpy
lea     eax, [esp+esi+101ch+destination]
add     esp, 0ch
cmp     [eax], bl
jz      short loc_10002917
mov     [eax], bl
push    edi
mov     edi, ds:strtok
lea     eax, [esp+1014h+destination]
push    offset asc_10009838
push    eax
call    edi
add     esp, 8
xor     esi, esi
test    eax, eax
jz      short loc_100029ab
mov     ebx, ds:strchr
push    ebp
mov     ebp, ds:atoi
cmp     esi, [esp+1018h+arg_c]
jge     short loc_10002974
push    20h
push    eax
call    ebx
add     esp, 8
test    eax, eax
jz      short loc_10002963
inc     eax
push    eax
call    ebp
mov     ecx, [esp+101ch+var_1008]
add     esp, 4
mov     [ecx+esi*4], eax
push    offset asc_10009838
push    0
call    edi
add     esp, 8
inc     esi
test    eax, eax
jnz     short loc_10002940
pop     ebp
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     ecx, [esp+1008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1008h
retn
pop     esi
mov     eax, 10h
pop     ebx
mov     ecx, [esp+1008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1008h
retn
mov     ecx, [esp+1014h+var_4]
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1008h
retn
push    esi
push    edi
mov     edi, [esp+8+str]
push    58h
push    edi
call    ds:strchr
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     short loc_10002a1c
push    28h
push    edi
call    ds:strrchr
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     short loc_100029fd
pop     edi
pop     esi
retn
mov     edi, ds:atoi
lea     eax, [esi-3]
push    eax
call    edi
add     esp, 4
test    eax, eax
jnz     short loc_10002a37
add     esi, 0fffffffeh
push    esi
call    edi
add     esp, 4
pop     edi
pop     esi
retn
mov     edi, ds:atoi
lea     ecx, [esi-2]
push    ecx
call    edi
add     esp, 4
test    eax, eax
jnz     short loc_10002a36
dec     esi
push    esi
call    edi
add     esp, 4
dec     eax
pop     edi
pop     esi
retn
mov     eax, 1008h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1008h+var_4], eax
mov     ecx, [esp+1008h+arg_8]
mov     eax, [esp+1008h+source]
push    ebx
push    esi
mov     esi, [esp+1010h+count]
xor     ebx, ebx
mov     [esp+1010h+var_1008], ecx
test    esi, esi
jle     loc_10002b0f
push    esi
push    eax
lea     edx, [esp+1018h+destination]
push    edx
call    ds:strncpy
lea     eax, [esp+esi+101ch+destination]
add     esp, 0ch
cmp     [eax], bl
jz      short loc_10002a97
mov     [eax], bl
push    edi
mov     edi, ds:strtok
lea     eax, [esp+1014h+destination]
push    offset asc_1000968c
push    eax
call    edi
add     esp, 8
xor     esi, esi
test    eax, eax
jz      short loc_10002b2b
mov     ebx, ds:strchr
push    ebp
mov     ebp, ds:atoi
cmp     esi, [esp+1018h+arg_c]
jge     short loc_10002af4
push    2ch
push    eax
call    ebx
add     esp, 8
test    eax, eax
jz      short loc_10002ae3
inc     eax
push    eax
call    ebp
mov     ecx, [esp+101ch+var_1008]
add     esp, 4
mov     [ecx+esi*4], eax
push    offset asc_1000968c
push    0
call    edi
add     esp, 8
inc     esi
test    eax, eax
jnz     short loc_10002ac0
pop     ebp
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     ecx, [esp+1008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1008h
retn
pop     esi
mov     eax, 10h
pop     ebx
mov     ecx, [esp+1008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1008h
retn
mov     ecx, [esp+1014h+var_4]
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1008h
retn
mov     eax, dword_1000b4b4
retn
mov     al, [esp+arg_0]
cmp     al, 0ah
jz      short loc_10002b6f
cmp     al, 0dh
jz      short loc_10002b6f
xor     eax, eax
retn
mov     eax, 1
retn
push    ecx
mov     [esp+4+var_4], 0
call    sub_10001360
test    eax, eax
jz      short loc_10002bf5
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, [esp+0ch+len]
test    edi, edi
jbe     short loc_10002bc0
nop
push    0
lea     ecx, [esp+10h+var_4]
mov     edx, edi
mov     eax, esi
call    sub_10001330
add     esp, 4
test    eax, eax
jz      short loc_10002bd7
mov     eax, [esp+0ch+var_4]
add     esi, eax
sub     edi, eax
jnz     short loc_10002ba0
mov     eax, [esp+0ch+arg_8]
mov     ecx, [esp+0ch+arg_c]
mov     byte ptr [eax], 0
pop     edi
mov     dword ptr [ecx], 0
xor     eax, eax
pop     esi
pop     ecx
retn
mov     edi, offset asendrcpt01comm_1
call    sub_10001080
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
mov     eax, 0fh
pop     esi
pop     ecx
retn
mov     eax, 2
pop     ecx
retn
mov     ecx, [esp+arg_0]
cmp     ecx, 6
ja      def_10002c0d
jmp     ds:jpt_10002c0d[ecx*4]
xor     eax, eax
mov     dword_1000b4a8, eax
jmp     loc_10002ce1
xor     eax, eax
mov     dword_1000b4a8, eax
mov     dword_1000b4b4, 1
jmp     loc_10002ce6
xor     eax, eax
mov     dword_1000b4a8, eax
mov     dword_1000b4ac, 1
mov     dword_1000b4b4, eax
jmp     loc_10002ceb
xor     eax, eax
mov     dword_1000b4a8, eax
mov     dword_1000b4ac, eax
mov     dword_1000b4b4, eax
mov     dword_1000b4b8, 1
mov     dword_1000b4bc, eax
mov     dword_1000b4c0, eax
mov     dword_1000b4c8, ecx
retn
xor     eax, eax
mov     dword_1000b4a8, eax
mov     dword_1000b4ac, eax
mov     dword_1000b4b4, eax
mov     dword_1000b4bc, 1
mov     dword_1000b4b8, eax
mov     dword_1000b4c0, eax
mov     dword_1000b4c8, ecx
retn
xor     eax, eax
mov     dword_1000b4a8, eax
mov     dword_1000b4ac, eax
mov     dword_1000b4b4, eax
mov     dword_1000b4c0, 1
mov     dword_1000b4bc, eax
mov     dword_1000b4b8, eax
mov     dword_1000b4c8, ecx
retn
mov     dword_1000b4a8, 1
xor     eax, eax
mov     dword_1000b4b4, eax
mov     dword_1000b4ac, eax
mov     dword_1000b4b8, eax
mov     dword_1000b4bc, eax
mov     dword_1000b4c0, eax
mov     dword_1000b4c8, ecx
retn
mov     eax, dword_1000b4c8
retn
mov     eax, 1008h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1008h+var_4], eax
mov     ecx, [esp+1008h+arg_8]
mov     eax, [esp+1008h+source]
push    ebp
push    esi
mov     esi, [esp+1010h+count]
xor     ebp, ebp
mov     [esp+1010h+var_1008], ecx
test    esi, esi
jle     loc_10002e0f
push    esi
push    eax
lea     edx, [esp+1018h+destination]
push    edx
call    ds:strncpy
lea     eax, [esp+esi+101ch+destination]
add     esp, 0ch
cmp     byte ptr [eax], 0
jz      short loc_10002d89
mov     byte ptr [eax], 0
push    ebx
mov     ebx, ds:strchr
push    edi
lea     eax, [esp+1018h+destination]
push    3ah
push    eax
call    ebx
mov     edi, ds:strtok
inc     eax
push    offset asc_1000983c
push    eax
call    edi
add     esp, 10h
xor     esi, esi
test    eax, eax
jz      short loc_10002e2b
mov     ebp, ds:atoi
jmp     short loc_10002dc0
cmp     esi, [esp+1018h+arg_c]
jge     short loc_10002df4
push    2ch
push    eax
call    ebx
add     esp, 8
test    eax, eax
jz      short loc_10002de3
inc     eax
push    eax
call    ebp
mov     ecx, [esp+101ch+var_1008]
add     esp, 4
mov     [ecx+esi*4], eax
push    offset asc_1000983c
push    0
call    edi
add     esp, 8
inc     esi
test    eax, eax
jnz     short loc_10002dc0
xor     eax, eax
pop     edi
pop     ebx
pop     esi
pop     ebp
mov     ecx, [esp+1008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1008h
retn
mov     ecx, [esp+1010h+var_4]
pop     esi
pop     ebp
xor     ecx, esp
mov     eax, 10h
call    @__security_check_cookie@4
add     esp, 1008h
retn
mov     eax, ebp
jmp     short loc_10002df6
mov     eax, dword_1000b4b8
retn
xor     eax, eax
cmp     [esp+arg_0], 0dh
setz    al
retn
mov     eax, 11b8h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+11b8h+var_4], eax
mov     eax, [esp+11b8h+arg_8]
mov     ecx, [esp+11b8h+arg_c]
push    ebx
mov     ebx, [esp+11bch+arg_0]
push    esi
xor     esi, esi
mov     [esp+11c0h+var_11ac], eax
mov     [esp+11c0h+var_11a8], ecx
mov     [esp+11c0h+var_11b0], esi
mov     [esp+11c0h+var_11b4], esi
call    sub_10001360
test    eax, eax
jz      loc_10003155
push    edi
cmp     dword_1000b4c4, esi
jz      loc_10002ff5
mov     eax, s
cmp     eax, 0ffffffffh
jz      short loc_10002f07
push    eax
call    closesocket
mov     s, 0ffffffffh
push    6
push    1
push    2
call    socket
mov     s, eax
cmp     eax, 0ffffffffh
jnz     short loc_10002f47
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
call    wsacleanup
lea     edx, [esp+11c4h+wsadata]
push    edx
push    101h
call    wsastartup
test    eax, eax
jz      short loc_10002ec5
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0ah
pop     ebx
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
lea     esi, [esp+11c4h+name]
mov     edi, offset alocalhost
call    sub_10001010
test    eax, eax
jnz     short loc_10002f90
mov     eax, s
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
pop     edi
pop     esi
mov     eax, 0dh
pop     ebx
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     edx, s
push    10h
lea     ecx, [esp+11c8h+name]
push    ecx
push    edx
call    connect
cmp     eax, 0ffffffffh
jnz     short loc_10002fea
mov     eax, s
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0ch
pop     ebx
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
cmp     dword_1000b4c4, 0
jnz     short loc_10003020
xor     esi, esi
push    esi
lea     ecx, [esp+11c8h+var_11b8]
mov     edx, 1000h
lea     eax, [esp+11c8h+var_1004]
mov     [esp+11c8h+var_11b8], esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_100030b7
cmp     [esp+11c4h+var_11b8], esi
ja      short loc_10002ff5
mov     edi, [esp+11c4h+len]
mov     esi, ebx
test    edi, edi
jbe     short loc_10003050
lea     ecx, [ecx+0]
push    0
lea     ecx, [esp+11c8h+var_11b0]
mov     edx, edi
mov     eax, esi
call    sub_10001330
add     esp, 4
test    eax, eax
jz      short loc_100030c3
mov     eax, [esp+11c4h+var_11b0]
add     esi, eax
sub     edi, eax
jnz     short loc_10003030
mov     esi, [esp+11c4h+var_11ac]
mov     [esp+11c4h+var_11b8], 0
mov     bl, 3eh
mov     edi, edi
push    0
lea     ecx, [esp+11c8h+var_11b8]
mov     edx, 1
mov     eax, esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_10003120
mov     eax, [esp+11c4h+var_11b8]
test    eax, eax
jz      short loc_100030f5
add     [esp+11c4h+var_11b4], eax
add     esi, eax
cmp     [esi-1], bl
jnz     short loc_10003060
mov     ecx, [esp+11c4h+var_11a8]
mov     edx, [esp+11c4h+var_11b4]
pop     edi
mov     byte ptr [esi], 0
pop     esi
mov     [ecx], edx
xor     eax, eax
pop     ebx
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     edi, offset asendlptpcomman_1
call    sub_10001080
jmp     short loc_1000312d
mov     edi, offset asendlptcommand
call    sub_10001080
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0fh
pop     ebx
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     ecx, dword_1000b4a0
mov     byte ptr [esi], 0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 11h
pop     ebx
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     edi, offset asendlptcommand_0
call    sub_10001080
mov     byte ptr [esi], 0
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0eh
pop     ebx
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     ecx, [esp+11c0h+var_4]
pop     esi
pop     ebx
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     eax, 1008h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1008h+var_4], eax
mov     ecx, [esp+1008h+arg_8]
mov     eax, [esp+1008h+source]
push    esi
mov     esi, [esp+100ch+count]
mov     [esp+100ch+var_1008], ecx
test    esi, esi
jle     loc_1000329a
push    esi
push    eax
lea     edx, [esp+1014h+destination]
push    edx
call    ds:strncpy
lea     eax, [esp+esi+1018h+destination]
add     esp, 0ch
cmp     byte ptr [eax], 0
jz      short loc_100031d6
mov     byte ptr [eax], 0
push    ebx
mov     ebx, ds:strtok
push    edi
lea     eax, [esp+1014h+destination]
push    offset asc_10009694
push    eax
call    ebx
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_10003237
mov     edi, ds:_strnicmp
lea     esp, [esp+0]
push    15h
push    offset avideooutputrou
push    esi
call    edi
add     esp, 0ch
test    eax, eax
jz      short loc_10003225
push    offset asc_10009694
push    0
call    ebx
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     short loc_10003200
jmp     short loc_10003237
test    esi, esi
jz      short loc_10003237
push    offset asc_10009694
push    0
call    ebx
add     esp, 8
mov     esi, eax
xor     edi, edi
test    esi, esi
jz      short loc_10003280
push    ebp
mov     ebp, ds:atoi
cmp     edi, [esp+1018h+arg_c]
jge     short loc_1000327f
push    20h
push    esi
call    ds:strchr
add     esp, 8
test    eax, eax
jz      short loc_1000326c
inc     eax
push    eax
call    ebp
mov     ecx, [esp+101ch+var_1008]
add     esp, 4
inc     eax
mov     [ecx+edi*4], eax
push    offset asc_10009694
push    0
call    ebx
mov     esi, eax
add     esp, 8
inc     edi
test    esi, esi
jnz     short loc_10003244
pop     ebp
pop     edi
pop     ebx
xor     eax, eax
pop     esi
mov     ecx, [esp+1008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1008h
retn
mov     ecx, [esp+100ch+var_4]
pop     esi
xor     ecx, esp
mov     eax, 10h
call    @__security_check_cookie@4
add     esp, 1008h
retn
mov     eax, dword_1000b4bc
retn
xor     eax, eax
cmp     [esp+arg_0], 0ah
setz    al
retn
mov     eax, dword_1000b4c0
retn
mov     eax, dword_1000b4c4
retn
mov     eax, [esp+arg_0]
mov     dword_1000b4c4, eax
mov     dword_1000b034, 0
retn
mov     eax, dword_1000b03c
retn
mov     eax, [esp+arg_0]
mov     dword_1000b03c, eax
mov     dword_1000b038, 0
retn
mov     eax, dword_1000b4d0
retn
mov     eax, [esp+arg_0]
mov     dword_1000b4d0, eax
mov     dword_1000b058, 0
retn
mov     eax, dword_1000b054
retn
mov     eax, [esp+arg_0]
mov     dword_1000b054, eax
mov     dword_1000b050, 0
retn
mov     eax, dword_1000b048
retn
mov     eax, [esp+arg_0]
mov     dword_1000b048, eax
mov     dword_1000b044, 0
retn
mov     eax, dword_1000b060
retn
mov     eax, [esp+arg_0]
mov     dword_1000b060, eax
mov     dword_1000b05c, 0
retn
sub     esp, 1a8h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1a8h+var_4], eax
push    ebx
mov     ebx, [esp+1ach+arg_0]
push    esi
push    edi
mov     [esp+1b4h+var_1a8], 0
call    sub_10001360
test    eax, eax
jz      loc_1000361c
call    usenetwork
test    eax, eax
jz      loc_1000359d
call    usenewsocketeachtime
test    eax, eax
jz      loc_1000359d
mov     eax, s
cmp     eax, 0ffffffffh
jz      short loc_100034b9
push    eax
call    closesocket
mov     s, 0ffffffffh
push    6
push    1
push    2
call    socket
mov     s, eax
cmp     eax, 0ffffffffh
jnz     short loc_100034f9
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0bh
pop     ebx
mov     ecx, [esp+1a8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1a8h
retn
call    wsacleanup
lea     eax, [esp+1b4h+wsadata]
push    eax
push    101h
call    wsastartup
test    eax, eax
jz      short loc_10003477
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0ah
pop     ebx
mov     ecx, [esp+1a8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1a8h
retn
lea     esi, [esp+1b4h+name]
mov     edi, offset alocalhost
call    sub_10001010
test    eax, eax
jnz     short loc_10003543
mov     ecx, s
push    ecx
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
pop     edi
pop     esi
mov     eax, 0dh
pop     ebx
mov     ecx, [esp+1a8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1a8h
retn
mov     eax, s
push    10h
lea     edx, [esp+1b8h+name]
push    edx
push    eax
call    connect
cmp     eax, 0ffffffffh
jnz     short loc_1000359d
mov     ecx, s
push    ecx
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0ch
pop     ebx
mov     ecx, [esp+1a8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1a8h
retn
mov     edi, [esp+1b4h+len]
mov     esi, ebx
test    edi, edi
jbe     short loc_100035d0
lea     ebx, [ebx+0]
push    0
lea     ecx, [esp+1b8h+var_1a8]
mov     edx, edi
mov     eax, esi
call    sub_10001330
add     esp, 4
test    eax, eax
jz      short loc_100035ea
mov     eax, [esp+1b4h+var_1a8]
add     esi, eax
sub     edi, eax
jnz     short loc_100035b0
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     ecx, [esp+1a8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1a8h
retn
mov     edi, offset asendcommandsex_0
call    sub_10001080
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0fh
pop     ebx
mov     ecx, [esp+1a8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1a8h
retn
mov     ecx, [esp+1b4h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 1a8h
retn
push    ebp
push    esi
mov     esi, [esp+8+string1]
xor     ebp, ebp
cmp     esi, ebp
jz      loc_1000382b
push    ebx
push    edi
mov     edi, ds:strnlen
push    20h
push    offset string2
mov     dword_1000b4a8, ebp
mov     dword_1000b4b8, ebp
mov     dword_1000b4ac, ebp
mov     dword_1000b4b4, ebp
mov     dword_1000b4bc, ebp
mov     dword_1000b4c0, ebp
mov     dword_1000b4c8, ebp
call    edi
mov     ebx, ds:_strnicmp
push    eax
push    offset string2
push    esi
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_100036bb
pop     edi
pop     ebx
mov     eax, 1
pop     esi
mov     dword_1000b040, ebp
mov     dword_1000b4a8, eax
mov     dword_1000b4c8, eax
pop     ebp
retn
push    20h
push    offset string
call    edi
push    eax
push    offset string
push    esi
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_100036f3
pop     edi
pop     ebx
pop     esi
mov     dword_1000b040, ebp
mov     dword_1000b4c0, 1
mov     dword_1000b4c8, 6
pop     ebp
retn
push    20h
push    offset asismmx
call    edi
push    eax
push    offset asismmx
push    esi
call    ebx
add     esp, 14h
test    eax, eax
jz      short loc_10003762
push    20h
push    offset asismav
call    edi
push    eax
push    offset asismav
push    esi
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_10003749
pop     edi
pop     ebx
mov     eax, 2
pop     esi
mov     dword_1000b040, ebp
mov     dword_1000b4ac, 1
mov     dword_1000b4b0, eax
mov     dword_1000b4c8, eax
pop     ebp
retn
push    20h
push    offset asis
call    edi
push    eax
push    offset asis
push    esi
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_10003786
pop     edi
pop     ebx
mov     eax, 1
pop     esi
mov     dword_1000b040, ebp
mov     dword_1000b4ac, eax
mov     dword_1000b4b0, eax
mov     dword_1000b4c8, 2
pop     ebp
retn
push    20h
push    offset arcpt01
call    edi
push    eax
push    offset arcpt01
push    esi
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_100037be
pop     edi
pop     ebx
pop     esi
mov     dword_1000b040, ebp
mov     dword_1000b4b4, 1
mov     dword_1000b4c8, 3
pop     ebp
retn
push    20h
push    offset alptp
call    edi
push    eax
push    offset alptp
push    esi
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_100037f6
pop     edi
pop     ebx
pop     esi
mov     dword_1000b040, ebp
mov     dword_1000b4b8, 1
mov     dword_1000b4c8, 4
pop     ebp
retn
push    20h
push    offset avideohub
call    edi
push    eax
push    offset avideohub
push    esi
call    ebx
add     esp, 14h
test    eax, eax
jnz     short loc_10003823
mov     dword_1000b4bc, 1
mov     dword_1000b4c8, 5
pop     edi
mov     dword_1000b040, ebp
pop     ebx
pop     esi
pop     ebp
retn
push    ebx
mov     ebx, ds:strncpy
push    esi
mov     esi, 1
push    edi
xor     edi, edi
push    104h
push    offset acom1
push    offset acom1_0
mov     dword_1000b4a4, edi
mov     dword_1000b4a8, edi
mov     dword_1000b4ac, edi
mov     dword_1000b4b0, edi
mov     dword_1000b4b4, edi
mov     dword_1000b4b8, edi
mov     dword_1000b4bc, edi
mov     dword_1000b4c0, edi
mov     dword_1000b034, esi
mov     dword_1000b4c4, edi
mov     dword_1000b038, esi
mov     dword_1000b03c, esi
mov     dword_1000b040, esi
mov     dword_1000b4c8, edi
mov     dword_1000b044, esi
mov     dword_1000b048, esi
mov     dword_1000b04c, esi
mov     dword_1000b4cc, edi
mov     dword_1000b050, esi
mov     dword_1000b054, esi
mov     dword_1000b058, esi
mov     dword_1000b4d0, edi
mov     dword_1000b05c, esi
mov     dword_1000b060, esi
mov     dword_1000b064, esi
mov     dword_1000b068, 186a0h
mov     dword_1000b06c, esi
call    ebx
push    104h
push    offset alocalhost_0
push    offset alocalhost
mov     dword_1000b174, esi
mov     dword_1000b178, 2580h
mov     hfile, edi
mov     dword_1000b17c, esi
call    ebx
push    1000h
push    offset default
push    offset destination
mov     dword_1000b284, esi
mov     dword_1000b288, 1162h
mov     s, 0ffffffffh
mov     dword_1000b290, esi
call    ebx
push    40h
push    offset default
push    offset returnedstring
mov     dword_1000b294, esi
call    ebx
add     esp, 30h
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+source]
push    104h
push    eax
push    offset alocalhost
mov     dword_1000b17c, 0
call    ds:strncpy
mov     ecx, [esp+0ch+arg_4]
add     esp, 0ch
mov     dword_1000b284, 0
mov     dword_1000b288, ecx
retn
sub     esp, 108h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+108h+var_4], eax
mov     edx, [esp+108h+lpdefault]
mov     ecx, [esp+108h+lpkeyname]
mov     eax, [esp+108h+lpappname]
push    ebx
push    esi
mov     esi, [esp+110h+lpfilename]
push    edi
push    esi
push    104h
lea     esi, [esp+11ch+returnedstring]
push    esi
push    edx
push    ecx
push    eax
xor     ebx, ebx
call    ds:getprivateprofilestringa
mov     esi, ds:strnlen
push    20h
push    offset string2
call    esi
mov     edi, ds:_strnicmp
push    eax
lea     eax, [esp+120h+returnedstring]
push    offset string2
push    eax
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_10003a2a
lea     ebx, [eax+1]
jmp     loc_10003b13
push    20h
push    offset string
call    esi
push    eax
lea     ecx, [esp+120h+returnedstring]
push    offset string
push    ecx
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_10003a4f
lea     ebx, [eax+6]
jmp     loc_10003b13
push    20h
push    offset asismmx
call    esi
push    eax
lea     edx, [esp+120h+returnedstring]
push    offset asismmx
push    edx
call    edi
add     esp, 14h
test    eax, eax
jz      short loc_10003aa6
push    20h
push    offset asismav
call    esi
push    eax
lea     eax, [esp+120h+returnedstring]
push    offset asismav
push    eax
call    edi
add     esp, 14h
test    eax, eax
jz      short loc_10003aa6
push    20h
push    offset asis
call    esi
push    eax
lea     ecx, [esp+120h+returnedstring]
push    offset asis
push    ecx
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_10003aad
mov     ebx, 2
jmp     short loc_10003b13
push    20h
push    offset arcpt01
call    esi
push    eax
lea     edx, [esp+120h+returnedstring]
push    offset arcpt01
push    edx
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_10003acf
lea     ebx, [eax+3]
jmp     short loc_10003b13
push    20h
push    offset alptp
call    esi
push    eax
lea     eax, [esp+120h+returnedstring]
push    offset alptp
push    eax
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_10003af1
lea     ebx, [eax+4]
jmp     short loc_10003b13
push    20h
push    offset avideohub
call    esi
push    eax
lea     ecx, [esp+120h+returnedstring]
push    offset avideohub
push    ecx
call    edi
add     esp, 14h
test    eax, eax
jnz     short loc_10003b13
mov     ebx, 5
mov     ecx, [esp+114h+var_4]
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 108h
retn
mov     eax, [esp+arg_4]
dec     eax
cmp     eax, 5
ja      short def_10003b3a
jmp     ds:jpt_10003b3a[eax*4]
mov     eax, offset string2
jmp     short loc_10003b69
mov     eax, offset asis
jmp     short loc_10003b69
mov     eax, offset alptp
jmp     short loc_10003b69
mov     eax, offset arcpt01
jmp     short loc_10003b69
mov     eax, offset avideohub_0
jmp     short loc_10003b69
mov     eax, offset string
mov     ecx, [esp+lpfilename]
mov     edx, [esp+lpappname]
push    ecx
push    eax
push    offset acommandset
push    edx
call    ds:writeprivateprofilestringa
retn
mov     eax, [esp+arg_0]
push    eax
call    ??3@yaxpax@z
pop     ecx
retn    4
mov     eax, [esp+arg_0]
push    eax
call    ??2@yapaxi@z
add     esp, 4
retn    4
mov     eax, 1010h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1010h+var_4], eax
push    ebp
mov     ebp, [esp+1014h+arg_4]
push    edi
mov     edi, edx
xor     edx, edx
mov     [ebp+0], edx
call    sub_10001360
test    eax, eax
jz      loc_10003c95
cmp     [esp+1018h+arg_0], edx
mov     [esp+1018h+var_1008], edx
mov     [esp+1018h+destination], ecx
mov     [esp+1018h+count], edx
mov     [ebp+0], edx
jle     short loc_10003c7c
push    ebx
push    esi
nop
push    25h
push    edi
call    ds:strchr
add     esp, 8
test    eax, eax
jnz     short loc_10003c30
mov     esi, edi
lea     ecx, [esi+1]
mov     al, [esi]
inc     esi
test    al, al
jnz     short loc_10003c25
sub     esi, ecx
jmp     short loc_10003c35
sub     eax, edi
inc     eax
mov     esi, eax
lea     eax, [esp+1020h+count]
push    eax
lea     ecx, [esp+1024h+source]
push    ecx
push    esi
push    edi
call    sendsiscommand
mov     ebx, [esp+1030h+count]
mov     eax, [esp+1030h+destination]
push    ebx
lea     edx, [esp+1034h+source]
push    edx
push    eax
call    ds:strncpy
mov     eax, [esp+103ch+var_1008]
add     [esp+103ch+destination], ebx
add     [ebp+0], ebx
add     eax, esi
add     esp, 1ch
add     edi, esi
cmp     eax, [esp+1020h+arg_0]
mov     [esp+1020h+var_1008], eax
jl      short loc_10003c10
pop     esi
pop     ebx
pop     edi
xor     eax, eax
pop     ebp
mov     ecx, [esp+1010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1010h
retn
mov     ecx, [esp+1018h+var_4]
pop     edi
pop     ebp
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 1010h
retn
mov     eax, 1010h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1010h+var_4], eax
push    ebp
mov     ebp, [esp+1014h+arg_4]
push    edi
mov     edi, edx
xor     edx, edx
mov     [ebp+0], edx
call    sub_10001360
test    eax, eax
jz      loc_10003d95
cmp     [esp+1018h+arg_0], edx
mov     [esp+1018h+var_1008], edx
mov     [esp+1018h+destination], ecx
mov     [esp+1018h+count], edx
mov     [ebp+0], edx
jle     short loc_10003d7c
push    ebx
push    esi
nop
push    0dh
push    edi
call    ds:strchr
add     esp, 8
test    eax, eax
jnz     short loc_10003d30
mov     esi, edi
lea     ecx, [esi+1]
mov     al, [esi]
inc     esi
test    al, al
jnz     short loc_10003d25
sub     esi, ecx
jmp     short loc_10003d35
sub     eax, edi
inc     eax
mov     esi, eax
lea     eax, [esp+1020h+count]
push    eax
lea     ecx, [esp+1024h+source]
push    ecx
push    esi
push    edi
call    sendlptpcommand
mov     ebx, [esp+1030h+count]
mov     eax, [esp+1030h+destination]
push    ebx
lea     edx, [esp+1034h+source]
push    edx
push    eax
call    ds:strncpy
mov     eax, [esp+103ch+var_1008]
add     [esp+103ch+destination], ebx
add     [ebp+0], ebx
add     eax, esi
add     esp, 1ch
add     edi, esi
cmp     eax, [esp+1020h+arg_0]
mov     [esp+1020h+var_1008], eax
jl      short loc_10003d10
pop     esi
pop     ebx
pop     edi
xor     eax, eax
pop     ebp
mov     ecx, [esp+1010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1010h
retn
mov     ecx, [esp+1018h+var_4]
pop     edi
pop     ebp
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 1010h
retn
mov     eax, 3010h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+3010h+var_4], eax
push    ebx
mov     ebx, [esp+3014h+arg_0]
push    esi
push    0fffh
xor     esi, esi
lea     eax, [esp+301ch+var_2003]
push    esi
push    eax
mov     [esp+3024h+var_3008], ebx
mov     [esp+3024h+destination], 0
call    memset
push    0fffh
lea     ecx, [esp+3028h+var_1003]
push    esi
push    ecx
mov     [esp+3030h+buffer], 0
call    memset
add     esp, 18h
mov     [esp+3018h+var_3010], 1000h
call    sub_10001360
test    eax, eax
jz      loc_1000413a
push    edi
mov     [ebx], esi
cmp     dword_1000b4a8, esi
jz      loc_10003f8e
mov     ebx, ds:sprintf
push    ebp
lea     ebp, [esp+3020h+destination]
mov     edi, 1
mov     [esp+3020h+var_300c], 40h
nop
xor     eax, eax
mov     ecx, edi
call    sub_10001af0
sub     eax, 1
push    edi
jz      short loc_10003e92
sub     eax, 1
jz      short loc_10003e83
push    offset asidt
lea     edx, [esp+3028h+buffer]
push    edx
jmp     short loc_10003e9f
push    offset asl2idt
lea     eax, [esp+3028h+buffer]
push    eax
jmp     short loc_10003e9f
push    offset asl1idt
lea     ecx, [esp+3028h+buffer]
push    ecx
call    ebx
lea     eax, [esp+302ch+buffer]
add     esp, 0ch
lea     edx, [eax+1]
mov     edi, edi
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10003eb0
sub     eax, edx
mov     esi, eax
push    esi
lea     edx, [esp+3024h+buffer]
push    edx
push    ebp
call    ds:strncat
add     esp, 0ch
add     ebp, esi
inc     edi
sub     [esp+3020h+var_300c], 1
jnz     short loc_10003e60
lea     eax, [esp+3020h+destination]
lea     edx, [eax+1]
pop     ebp
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10003ee3
lea     ecx, [esp+301ch+string1]
push    ecx
sub     eax, edx
push    eax
lea     edx, [esp+3024h+destination]
push    edx
lea     ecx, [esp+3028h+var_3010]
call    sub_10001d80
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     short loc_10003f3e
mov     eax, [esp+301ch+var_3010]
push    eax
lea     ecx, [esp+3020h+string1]
push    ecx
call    getlastvalidinorout
mov     edx, [esp+3024h+var_3008]
add     esp, 8
pop     edi
mov     [edx], eax
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
cmp     esi, 6
jnz     short loc_10003f62
mov     esi, 6
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
cmp     esi, 7
jz      loc_100040e4
cmp     esi, 11h
jnz     loc_10004120
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
cmp     dword_1000b4ac, esi
jz      loc_10004103
lea     eax, [esp+301ch+destination]
push    offset an
push    eax
call    ds:sprintf
lea     eax, [esp+3024h+destination]
add     esp, 8
lea     edx, [eax+1]
lea     ebx, [ebx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10003fc0
sub     eax, edx
lea     ecx, [esp+301ch+var_3010]
push    ecx
lea     edx, [esp+3020h+string1]
push    edx
push    eax
lea     eax, [esp+3028h+destination]
push    eax
call    sendsiscommand
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     loc_100040d6
mov     edi, ds:_strnicmp
push    7
lea     ecx, [esp+3020h+string1]
push    offset an60556
push    ecx
call    edi
add     esp, 0ch
test    eax, eax
jz      short loc_10004068
push    7
lea     edx, [esp+3020h+string1]
push    offset an60557
push    edx
call    edi
add     esp, 0ch
test    eax, eax
jnz     short loc_1000403e
pop     edi
mov     eax, esi
pop     esi
mov     dword ptr [ebx], 6
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
push    6
lea     eax, [esp+3020h+string1]
push    offset a60553
push    eax
call    edi
add     esp, 0ch
test    eax, eax
jz      short loc_10004068
push    6
lea     ecx, [esp+3020h+string1]
push    offset a60605
push    ecx
call    edi
add     esp, 0ch
test    eax, eax
jnz     short loc_10004088
pop     edi
mov     eax, esi
pop     esi
mov     dword ptr [ebx], 4
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
push    6
lea     edx, [esp+3020h+string1]
push    offset a60554
push    edx
call    edi
add     esp, 0ch
test    eax, eax
jz      short loc_100040b6
push    6
lea     eax, [esp+3020h+string1]
push    offset a60555
push    eax
call    edi
add     esp, 0ch
test    eax, eax
jnz     loc_10003f43
pop     edi
mov     eax, esi
pop     esi
mov     dword ptr [ebx], 8
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
cmp     esi, 6
jz      loc_10003f43
cmp     esi, 7
jnz     short loc_10004120
mov     esi, 7
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
cmp     dword_1000b4b4, esi
jnz     short loc_1000411b
cmp     dword_1000b4b8, esi
jnz     short loc_1000411b
cmp     dword_1000b4bc, esi
jz      short loc_10004120
mov     esi, 12h
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
mov     ecx, [esp+3018h+var_4]
pop     esi
pop     ebx
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 3010h
retn
mov     eax, 3010h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+3010h+var_4], eax
push    ebx
mov     ebx, [esp+3014h+arg_0]
push    esi
push    0fffh
xor     esi, esi
lea     eax, [esp+301ch+var_1003]
push    esi
push    eax
mov     [esp+3024h+var_3008], ebx
mov     [esp+3024h+buffer], 0
call    memset
push    0fffh
lea     ecx, [esp+3028h+var_2003]
push    esi
push    ecx
mov     [esp+3030h+destination], 0
call    memset
add     esp, 18h
mov     [esp+3018h+var_3010], 1000h
call    sub_10001360
test    eax, eax
jz      loc_100044da
push    edi
mov     [ebx], esi
cmp     dword_1000b4a8, esi
jz      loc_1000432e
mov     ebx, ds:sprintf
push    ebp
lea     ebp, [esp+3020h+destination]
mov     edi, 1
mov     [esp+3020h+var_300c], 40h
nop
mov     eax, edi
xor     ecx, ecx
call    sub_10001af0
sub     eax, 1
push    edi
jz      short loc_10004232
sub     eax, 1
jz      short loc_10004223
push    offset asodt
lea     edx, [esp+3028h+buffer]
push    edx
jmp     short loc_1000423f
push    offset asl2odt
lea     eax, [esp+3028h+buffer]
push    eax
jmp     short loc_1000423f
push    offset asl1odt
lea     ecx, [esp+3028h+buffer]
push    ecx
call    ebx
lea     eax, [esp+302ch+buffer]
add     esp, 0ch
lea     edx, [eax+1]
mov     edi, edi
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10004250
sub     eax, edx
mov     esi, eax
push    esi
lea     edx, [esp+3024h+buffer]
push    edx
push    ebp
call    ds:strncat
add     esp, 0ch
add     ebp, esi
inc     edi
sub     [esp+3020h+var_300c], 1
jnz     short loc_10004200
lea     eax, [esp+3020h+destination]
lea     edx, [eax+1]
pop     ebp
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10004283
lea     ecx, [esp+301ch+string1]
push    ecx
sub     eax, edx
push    eax
lea     edx, [esp+3024h+destination]
push    edx
lea     ecx, [esp+3028h+var_3010]
call    sub_10001d80
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     short loc_100042de
mov     eax, [esp+301ch+var_3010]
push    eax
lea     ecx, [esp+3020h+string1]
push    ecx
call    getlastvalidinorout
mov     edx, [esp+3024h+var_3008]
add     esp, 8
pop     edi
mov     [edx], eax
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
cmp     esi, 6
jnz     short loc_10004302
mov     esi, 6
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
cmp     esi, 7
jz      loc_10004484
cmp     esi, 11h
jnz     loc_100044c0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
cmp     dword_1000b4ac, esi
jz      loc_100044a3
lea     eax, [esp+301ch+destination]
push    offset an
push    eax
call    ds:sprintf
lea     eax, [esp+3024h+destination]
add     esp, 8
lea     edx, [eax+1]
lea     ebx, [ebx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10004360
sub     eax, edx
lea     ecx, [esp+301ch+var_3010]
push    ecx
lea     edx, [esp+3020h+string1]
push    edx
push    eax
lea     eax, [esp+3028h+destination]
push    eax
call    sendsiscommand
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     loc_10004476
mov     edi, ds:_strnicmp
push    7
lea     ecx, [esp+3020h+string1]
push    offset an60556
push    ecx
call    edi
add     esp, 0ch
test    eax, eax
jz      short loc_100043be
push    7
lea     edx, [esp+3020h+string1]
push    offset an60557
push    edx
call    edi
add     esp, 0ch
test    eax, eax
jnz     short loc_100043de
pop     edi
mov     eax, esi
pop     esi
mov     dword ptr [ebx], 2
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
push    6
lea     eax, [esp+3020h+string1]
push    offset a60553
push    eax
call    edi
add     esp, 0ch
test    eax, eax
jz      short loc_1000441d
push    6
lea     ecx, [esp+3020h+string1]
push    offset a60605
push    ecx
call    edi
add     esp, 0ch
test    eax, eax
jz      short loc_10004456
push    6
lea     edx, [esp+3020h+string1]
push    offset a60554
push    edx
call    edi
add     esp, 0ch
test    eax, eax
jnz     short loc_1000443d
pop     edi
mov     eax, esi
pop     esi
mov     dword ptr [ebx], 4
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
push    0ah
lea     eax, [esp+3020h+string1]
push    offset a60555
push    eax
call    edi
add     esp, 0ch
test    eax, eax
jnz     loc_100042e3
pop     edi
mov     eax, esi
pop     esi
mov     dword ptr [ebx], 8
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
cmp     esi, 6
jz      loc_100042e3
cmp     esi, 7
jnz     short loc_100044c0
mov     esi, 7
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
cmp     dword_1000b4b4, esi
jnz     short loc_100044bb
cmp     dword_1000b4b8, esi
jnz     short loc_100044bb
cmp     dword_1000b4bc, esi
jz      short loc_100044c0
mov     esi, 12h
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
mov     ecx, [esp+3018h+var_4]
pop     esi
pop     ebx
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 3010h
retn
mov     eax, 2008h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+2008h+var_4], eax
xor     ecx, ecx
mov     [esp+2008h+var_2008], 1000h
call    sub_10001360
test    eax, eax
jz      loc_10004606
cmp     dword_1000b4a8, ecx
jz      loc_100045ca
push    esi
mov     esi, [esp+200ch+arg_0]
xor     eax, eax
mov     ecx, esi
call    sub_10001af0
sub     eax, 1
push    esi
jz      short loc_1000456e
sub     eax, 1
jz      short loc_10004562
push    offset adidt
lea     eax, [esp+2014h+buffer]
push    eax
jmp     short loc_10004578
push    offset adl2idt
lea     ecx, [esp+2014h+buffer]
push    ecx
jmp     short loc_10004578
push    offset adl1idt
lea     edx, [esp+2014h+buffer]
push    edx
call    ds:sprintf
add     esp, 0ch
lea     eax, [esp+200ch+buffer]
lea     edx, [eax+1]
pop     esi
lea     esp, [esp+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10004590
sub     eax, edx
lea     ecx, [esp+2008h+var_2008]
push    ecx
lea     edx, [esp+200ch+str]
push    edx
push    eax
lea     eax, [esp+2014h+buffer]
push    eax
call    sendbcscommand
add     esp, 10h
mov     ecx, eax
mov     ecx, [esp+2008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2008h
retn
cmp     dword_1000b4ac, ecx
jnz     short loc_100045ea
cmp     dword_1000b4b4, ecx
jnz     short loc_100045ea
cmp     dword_1000b4b8, ecx
jnz     short loc_100045ea
cmp     dword_1000b4bc, ecx
jz      short loc_100045ef
mov     ecx, 6
mov     eax, ecx
mov     ecx, [esp+2008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2008h
retn
mov     ecx, [esp+2008h+var_4]
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 2008h
retn
mov     eax, 2008h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+2008h+var_4], eax
xor     ecx, ecx
mov     [esp+2008h+var_2008], 1000h
call    sub_10001360
test    eax, eax
jz      loc_1000471d
cmp     dword_1000b4a8, ecx
jz      loc_100046e1
push    esi
mov     esi, [esp+200ch+arg_0]
mov     eax, esi
call    sub_10001af0
sub     eax, 1
push    esi
jz      short loc_1000468c
sub     eax, 1
jz      short loc_10004680
push    offset adodt
lea     eax, [esp+2014h+buffer]
push    eax
jmp     short loc_10004696
push    offset adl2odt
lea     ecx, [esp+2014h+buffer]
push    ecx
jmp     short loc_10004696
push    offset adl1odt
lea     edx, [esp+2014h+buffer]
push    edx
call    ds:sprintf
add     esp, 0ch
lea     eax, [esp+200ch+buffer]
lea     edx, [eax+1]
pop     esi
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_100046a7
sub     eax, edx
lea     ecx, [esp+2008h+var_2008]
push    ecx
lea     edx, [esp+200ch+str]
push    edx
push    eax
lea     eax, [esp+2014h+buffer]
push    eax
call    sendbcscommand
add     esp, 10h
mov     ecx, eax
mov     ecx, [esp+2008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2008h
retn
cmp     dword_1000b4ac, ecx
jnz     short loc_10004701
cmp     dword_1000b4b4, ecx
jnz     short loc_10004701
cmp     dword_1000b4b8, ecx
jnz     short loc_10004701
cmp     dword_1000b4bc, ecx
jz      short loc_10004706
mov     ecx, 6
mov     eax, ecx
mov     ecx, [esp+2008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2008h
retn
mov     ecx, [esp+2008h+var_4]
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 2008h
retn
mov     eax, 3008h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+3008h+var_4], eax
push    edi
mov     edi, [esp+300ch+arg_4]
push    0fffh
lea     eax, [esp+3010h+var_3003]
push    0
push    eax
mov     [esp+3018h+buffer], 0
call    memset
push    0fffh
lea     ecx, [esp+301ch+var_2003]
push    0
push    ecx
mov     [esp+3024h+destination], 0
call    memset
add     esp, 18h
mov     [esp+300ch+count], 1000h
call    sub_10001360
test    eax, eax
jz      loc_10004a99
cmp     dword_1000b4a8, 0
jz      loc_100048d1
push    esi
mov     esi, [esp+3010h+arg_0]
mov     eax, esi
xor     ecx, ecx
call    sub_10001af0
sub     eax, 1
push    esi
jz      short loc_100047eb
sub     eax, 1
jz      short loc_100047df
push    offset asl1odt
lea     edx, [esp+3018h+buffer]
push    edx
jmp     short loc_100047f5
push    offset asl2odt
lea     eax, [esp+3018h+buffer]
push    eax
jmp     short loc_100047f5
push    offset asl1odt
lea     ecx, [esp+3018h+buffer]
push    ecx
call    ds:sprintf
add     esp, 0ch
lea     eax, [esp+3010h+buffer]
lea     edx, [eax+1]
pop     esi
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10004806
sub     eax, edx
push    eax
lea     edx, [esp+3010h+buffer]
push    edx
lea     eax, [esp+3014h+destination]
push    eax
call    ds:strncat
lea     eax, [esp+3018h+destination]
add     esp, 0ch
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10004830
lea     ecx, [esp+300ch+source]
push    ecx
sub     eax, edx
push    eax
lea     edx, [esp+3014h+destination]
push    edx
lea     ecx, [esp+3018h+count]
call    sub_10001d80
add     esp, 0ch
test    eax, eax
jnz     short loc_10004897
lea     eax, [esp+300ch+source]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10004864
push    1
sub     eax, edx
push    edi
push    eax
lea     eax, [esp+3018h+source]
push    eax
call    parsebcsreply
add     esp, 10h
pop     edi
mov     ecx, [esp+3008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3008h
retn
cmp     eax, 6
jnz     short loc_100048b2
pop     edi
mov     ecx, [esp+3008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3008h
retn
cmp     eax, 7
jnz     loc_10004a63
pop     edi
mov     ecx, [esp+3008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3008h
retn
cmp     dword_1000b4ac, 0
jz      loc_1000498b
mov     ecx, [esp+300ch+arg_0]
push    ecx
lea     edx, [esp+3010h+buffer]
push    offset ad
push    edx
call    ds:sprintf
lea     eax, [esp+3018h+buffer]
add     esp, 0ch
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10004900
sub     eax, edx
push    eax
lea     eax, [esp+3010h+buffer]
push    eax
lea     ecx, [esp+3014h+destination]
push    ecx
call    ds:strncat
lea     eax, [esp+3018h+destination]
add     esp, 0ch
lea     edx, [eax+1]
lea     ebx, [ebx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10004930
sub     eax, edx
lea     edx, [esp+300ch+count]
push    edx
push    eax
lea     ecx, [esp+3014h+source]
lea     edx, [esp+3014h+destination]
call    sub_10003bc0
add     esp, 8
test    eax, eax
jnz     loc_10004897
mov     eax, [esp+300ch+count]
push    1
push    edi
push    eax
lea     ecx, [esp+3018h+source]
push    ecx
call    parsesisreply
add     esp, 10h
pop     edi
mov     ecx, [esp+3008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3008h
retn
cmp     dword_1000b4b4, 0
jz      loc_10004a7e
mov     edx, [esp+300ch+arg_0]
push    edx
lea     eax, [esp+3010h+buffer]
push    offset aivd
push    eax
call    ds:sprintf
lea     eax, [esp+3018h+buffer]
add     esp, 0ch
lea     edx, [eax+1]
lea     ebx, [ebx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_100049c0
sub     eax, edx
push    eax
lea     ecx, [esp+3010h+buffer]
push    ecx
lea     edx, [esp+3014h+destination]
push    edx
call    ds:strncat
lea     eax, [esp+3018h+destination]
add     esp, 0ch
lea     edx, [eax+1]
lea     ebx, [ebx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_100049f0
sub     eax, edx
lea     ecx, [esp+300ch+count]
push    ecx
lea     edx, [esp+3010h+source]
push    edx
mov     ecx, eax
lea     edx, [esp+3014h+destination]
call    sub_10001f80
add     esp, 8
test    eax, eax
jnz     loc_10004897
lea     eax, [esp+300ch+source]
lea     edx, [eax+1]
lea     esp, [esp+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10004a30
push    1
sub     eax, edx
push    edi
push    eax
lea     eax, [esp+3018h+source]
push    eax
call    parsercpt01reply
add     esp, 10h
pop     edi
mov     ecx, [esp+3008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3008h
retn
cmp     eax, 11h
jnz     short loc_10004a9e
pop     edi
mov     ecx, [esp+3008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3008h
retn
mov     eax, 12h
pop     edi
mov     ecx, [esp+3008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3008h
retn
mov     eax, 2
mov     ecx, [esp+300ch+var_4]
pop     edi
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3008h
retn
mov     eax, 1014h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1014h+var_4], eax
mov     ecx, dword_1000b4a0
push    ebx
mov     ebx, [esp+1018h+arg_c]
push    ebp
push    esi
mov     esi, [esp+1020h+arg_8]
xor     ebp, ebp
push    edi
mov     edi, [esp+1024h+str]
mov     [esp+1024h+var_1008], ebx
test    ecx, ecx
jz      loc_10004be4
push    0ffffffffh
call    ?lock@csinglelock@@qaehk@z
mov     ecx, dword_1000b4a0
xor     edx, edx
cmp     [ecx+8], edx
jz      loc_10004bdf
call    sub_10001360
test    eax, eax
jz      loc_10004bff
cmp     edi, edx
jz      loc_10004bff
cmp     esi, edx
jz      loc_10004bff
cmp     [esp+1024h+arg_4], edx
mov     [esp+1024h+var_1010], edx
mov     [esp+1024h+destination], esi
mov     [esp+1024h+count], edx
mov     [ebx], edx
jle     loc_10004bd8
mov     esi, ds:strchr
push    54h
push    edi
call    esi
add     esp, 8
test    eax, eax
jnz     short loc_10004b83
push    74h
push    edi
call    esi
add     esp, 8
test    eax, eax
jnz     short loc_10004b83
mov     esi, edi
lea     ecx, [esi+1]
mov     al, [esi]
inc     esi
test    al, al
jnz     short loc_10004b78
sub     esi, ecx
jmp     short loc_10004b88
sub     eax, edi
inc     eax
mov     esi, eax
lea     eax, [esp+1024h+count]
push    eax
lea     ecx, [esp+1028h+source]
push    ecx
push    esi
push    edi
call    sendbcscommand
mov     ebx, [esp+1034h+count]
push    ebx
lea     edx, [esp+1038h+source]
mov     ebp, eax
mov     eax, [esp+1038h+destination]
push    edx
push    eax
call    ds:strncpy
mov     eax, [esp+1040h+var_1008]
add     [eax], ebx
mov     eax, [esp+1040h+var_1010]
add     [esp+1040h+destination], ebx
add     eax, esi
add     esp, 1ch
add     edi, esi
cmp     eax, [esp+1024h+arg_4]
mov     [esp+1024h+var_1010], eax
jl      short loc_10004b55
mov     ecx, dword_1000b4a0
mov     edx, [esp+1024h+destination]
mov     byte ptr [edx], 0
call    ?unlock@csinglelock@@qaehxz
mov     eax, ebp
mov     ecx, [esp+1024h+var_4]
pop     edi
pop     esi
pop     ebp
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1014h
retn
call    ?unlock@csinglelock@@qaehxz
mov     eax, 2
jmp     short loc_10004be6
mov     eax, 1014h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1014h+var_4], eax
mov     ecx, dword_1000b4a0
push    ebx
push    ebp
mov     ebp, [esp+101ch+arg_c]
push    esi
mov     esi, [esp+1020h+arg_8]
xor     ebx, ebx
push    edi
mov     edi, [esp+1024h+str]
test    ecx, ecx
jz      loc_10004d24
push    0ffffffffh
call    ?lock@csinglelock@@qaehk@z
mov     ecx, dword_1000b4a0
xor     edx, edx
cmp     [ecx+8], edx
jz      loc_10004d1f
call    sub_10001360
test    eax, eax
jz      loc_10004d3f
cmp     edi, edx
jz      loc_10004d3f
cmp     esi, edx
jz      loc_10004d3f
cmp     [esp+1024h+arg_4], edx
mov     [esp+1024h+var_1010], edx
mov     [esp+1024h+destination], esi
mov     [esp+1024h+count], edx
mov     [ebp+0], edx
jle     short loc_10004d18
mov     edi, edi
push    0dh
push    edi
call    ds:strchr
add     esp, 8
test    eax, eax
jnz     short loc_10004cc0
mov     esi, edi
lea     ecx, [esi+1]
mov     al, [esi]
inc     esi
test    al, al
jnz     short loc_10004cb5
sub     esi, ecx
jmp     short loc_10004cc5
sub     eax, edi
inc     eax
mov     esi, eax
lea     eax, [esp+1024h+count]
push    eax
lea     ecx, [esp+1028h+source]
push    ecx
push    esi
push    edi
call    sendrcpt01command
mov     ebx, [esp+1034h+count]
push    ebx
lea     edx, [esp+1038h+source]
mov     [esp+1038h+var_1008], eax
mov     eax, [esp+1038h+destination]
push    edx
push    eax
call    ds:strncpy
mov     eax, [esp+1040h+var_1010]
add     [esp+1040h+destination], ebx
add     [ebp+0], ebx
add     eax, esi
add     esp, 1ch
add     edi, esi
cmp     eax, [esp+1024h+arg_4]
mov     [esp+1024h+var_1010], eax
jl      short loc_10004ca0
mov     ecx, dword_1000b4a0
mov     ebx, [esp+1024h+var_1008]
mov     edx, [esp+1024h+destination]
mov     byte ptr [edx], 0
call    ?unlock@csinglelock@@qaehxz
mov     eax, ebx
mov     ecx, [esp+1024h+var_4]
pop     edi
pop     esi
pop     ebp
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1014h
retn
call    ?unlock@csinglelock@@qaehxz
mov     eax, 2
jmp     short loc_10004d26
mov     eax, 1014h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1014h+var_4], eax
mov     ecx, dword_1000b4a0
push    ebx
push    ebp
mov     ebp, [esp+101ch+arg_c]
push    esi
mov     esi, [esp+1020h+arg_8]
xor     ebx, ebx
push    edi
mov     edi, [esp+1024h+str]
test    ecx, ecx
jz      loc_10004e64
push    0ffffffffh
call    ?lock@csinglelock@@qaehk@z
mov     ecx, dword_1000b4a0
xor     edx, edx
cmp     [ecx+8], edx
jz      loc_10004e5f
call    sub_10001360
test    eax, eax
jz      loc_10004e7f
cmp     edi, edx
jz      loc_10004e7f
cmp     esi, edx
jz      loc_10004e7f
cmp     [esp+1024h+arg_4], edx
mov     [esp+1024h+var_1010], edx
mov     [esp+1024h+destination], esi
mov     [esp+1024h+count], edx
mov     [ebp+0], edx
jle     short loc_10004e58
mov     edi, edi
push    0dh
push    edi
call    ds:strchr
add     esp, 8
test    eax, eax
jnz     short loc_10004e00
mov     esi, edi
lea     ecx, [esi+1]
mov     al, [esi]
inc     esi
test    al, al
jnz     short loc_10004df5
sub     esi, ecx
jmp     short loc_10004e05
sub     eax, edi
inc     eax
mov     esi, eax
lea     eax, [esp+1024h+count]
push    eax
lea     ecx, [esp+1028h+source]
push    ecx
push    esi
push    edi
call    sendlptpcommand
mov     ebx, [esp+1034h+count]
push    ebx
lea     edx, [esp+1038h+source]
mov     [esp+1038h+var_1008], eax
mov     eax, [esp+1038h+destination]
push    edx
push    eax
call    ds:strncpy
mov     eax, [esp+1040h+var_1010]
add     [esp+1040h+destination], ebx
add     [ebp+0], ebx
add     eax, esi
add     esp, 1ch
add     edi, esi
cmp     eax, [esp+1024h+arg_4]
mov     [esp+1024h+var_1010], eax
jl      short loc_10004de0
mov     ecx, dword_1000b4a0
mov     ebx, [esp+1024h+var_1008]
mov     edx, [esp+1024h+destination]
mov     byte ptr [edx], 0
call    ?unlock@csinglelock@@qaehxz
mov     eax, ebx
mov     ecx, [esp+1024h+var_4]
pop     edi
pop     esi
pop     ebp
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 1014h
retn
call    ?unlock@csinglelock@@qaehxz
mov     eax, 2
jmp     short loc_10004e66
mov     eax, 11b8h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+11b8h+var_4], eax
mov     eax, [esp+11b8h+arg_8]
mov     ecx, [esp+11b8h+arg_c]
push    ebp
mov     ebp, [esp+11bch+arg_0]
push    esi
xor     esi, esi
mov     [esp+11c0h+var_11ac], eax
mov     [esp+11c0h+var_11a8], ecx
mov     [esp+11c0h+var_11b0], esi
mov     [esp+11c0h+var_11b4], esi
call    sub_10001360
test    eax, eax
jz      loc_10005155
push    edi
call    usenewsocketeachtime
test    eax, eax
jz      loc_10005030
mov     eax, s
cmp     eax, 0ffffffffh
jz      short loc_10004f48
push    eax
call    closesocket
mov     s, 0ffffffffh
push    6
push    1
push    2
call    socket
mov     s, eax
cmp     eax, 0ffffffffh
jnz     short loc_10004f88
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0bh
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
call    wsacleanup
lea     edx, [esp+11c4h+wsadata]
push    edx
push    101h
call    wsastartup
test    eax, eax
jz      short loc_10004f06
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0ah
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
lea     esi, [esp+11c4h+name]
mov     edi, offset alocalhost
call    sub_10001010
test    eax, eax
jnz     short loc_10004fd1
mov     eax, s
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
pop     edi
pop     esi
mov     eax, 0dh
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     edx, s
push    10h
lea     ecx, [esp+11c8h+name]
push    ecx
push    edx
call    connect
cmp     eax, 0ffffffffh
jnz     short loc_1000502b
mov     eax, s
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0ch
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
xor     esi, esi
lea     ecx, [ecx+0]
push    esi
lea     ecx, [esp+11c8h+var_11b8]
mov     edx, 1000h
lea     eax, [esp+11c8h+var_1004]
mov     [esp+11c8h+var_11b8], esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_100050e2
cmp     [esp+11c4h+var_11b8], esi
ja      short loc_10005030
mov     edi, [esp+11c4h+len]
mov     esi, ebp
test    edi, edi
jbe     short loc_10005088
push    0
lea     ecx, [esp+11c8h+var_11b0]
mov     edx, edi
mov     eax, esi
call    sub_10001330
add     esp, 4
test    eax, eax
jz      short loc_100050ee
mov     eax, [esp+11c4h+var_11b0]
add     esi, eax
sub     edi, eax
jnz     short loc_10005068
mov     esi, [esp+11c4h+var_11ac]
mov     [esp+11c4h+var_11b8], 0
push    0
lea     ecx, [esp+11c8h+var_11b8]
mov     edx, 1
mov     eax, esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      short loc_10005120
mov     eax, [esp+11c4h+var_11b8]
add     [esp+11c4h+var_11b4], eax
add     esi, eax
test    eax, eax
ja      short loc_10005094
mov     ecx, [esp+11c4h+var_11b4]
mov     edx, [esp+11c4h+var_11a8]
pop     edi
mov     byte ptr [esi], 0
pop     esi
mov     [edx], ecx
xor     eax, eax
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     edi, offset asendvideohubco_0
call    sub_10001080
jmp     short loc_1000512d
mov     edi, offset asendvideohubco_1
call    sub_10001080
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0fh
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     edi, offset asendvideohubco_0
call    sub_10001080
mov     byte ptr [esi], 0
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0eh
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     ecx, [esp+11c0h+var_4]
pop     esi
pop     ebp
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     eax, 11b8h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+11b8h+var_4], eax
mov     eax, [esp+11b8h+arg_8]
mov     ecx, [esp+11b8h+arg_c]
push    ebp
mov     ebp, [esp+11bch+arg_0]
push    esi
xor     esi, esi
mov     [esp+11c0h+var_11a8], eax
mov     [esp+11c0h+var_11b0], ecx
mov     [esp+11c0h+var_11ac], esi
mov     [esp+11c0h+var_11b4], esi
call    sub_10001360
test    eax, eax
jz      loc_100054a8
push    edi
call    usenewsocketeachtime
test    eax, eax
jz      loc_10005320
mov     eax, s
cmp     eax, 0ffffffffh
jz      short loc_10005238
push    eax
call    closesocket
mov     s, 0ffffffffh
push    6
push    1
push    2
call    socket
mov     s, eax
cmp     eax, 0ffffffffh
jnz     short loc_10005278
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0bh
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
call    wsacleanup
lea     edx, [esp+11c4h+wsadata]
push    edx
push    101h
call    wsastartup
test    eax, eax
jz      short loc_100051f6
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0ah
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
lea     esi, [esp+11c4h+name]
mov     edi, offset alocalhost
call    sub_10001010
test    eax, eax
jnz     short loc_100052c1
mov     eax, s
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
pop     edi
pop     esi
mov     eax, 0dh
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     edx, s
push    10h
lea     ecx, [esp+11c8h+name]
push    ecx
push    edx
call    connect
cmp     eax, 0ffffffffh
jnz     short loc_1000531b
mov     eax, s
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0ch
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
xor     esi, esi
lea     ecx, [ecx+0]
push    esi
lea     ecx, [esp+11c8h+var_11b8]
mov     edx, 1000h
lea     eax, [esp+11c8h+var_1004]
mov     [esp+11c8h+var_11b8], esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_1000540a
cmp     [esp+11c4h+var_11b8], esi
ja      short loc_10005320
mov     edi, [esp+11c4h+len]
mov     esi, ebp
test    edi, edi
jbe     short loc_1000537c
push    0
lea     ecx, [esp+11c8h+var_11ac]
mov     edx, edi
mov     eax, esi
call    sub_10001330
add     esp, 4
test    eax, eax
jz      loc_10005416
mov     eax, [esp+11c4h+var_11ac]
add     esi, eax
sub     edi, eax
jnz     short loc_10005358
mov     esi, [esp+11c4h+var_11a8]
mov     edi, [esp+11c4h+var_11b0]
test    esi, esi
jz      short loc_100053ea
test    edi, edi
jz      short loc_100053ea
cmp     dword ptr [edi], 0
jle     short loc_100053ea
push    40h
push    offset returnedstring
call    ds:strnlen
add     esp, 8
test    eax, eax
jbe     short loc_100053ea
mov     [esp+11c4h+var_11b8], 0
lea     ecx, [ecx+0]
push    0
lea     ecx, [esp+11c8h+var_11b8]
mov     edx, 1
mov     eax, esi
call    sub_10001300
add     esp, 4
test    eax, eax
jz      loc_10005473
mov     eax, [esp+11c4h+var_11b8]
test    eax, eax
jz      short loc_10005448
mov     cl, [esi+eax-1]
add     [esp+11c4h+var_11b4], eax
add     esi, eax
cmp     cl, returnedstring
jnz     short loc_100053b0
mov     byte ptr [esi], 0
mov     edx, [esp+11c4h+var_11b4]
mov     [edi], edx
pop     edi
pop     esi
xor     eax, eax
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     edi, offset asendcustomcomm_0
call    sub_10001080
jmp     short loc_10005480
mov     edi, offset asendcustomcomm_1
call    sub_10001080
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0fh
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     ecx, dword_1000b4a0
mov     byte ptr [esi], 0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 11h
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     edi, offset asendcustomcomm_0
call    sub_10001080
mov     byte ptr [esi], 0
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     edi
pop     esi
mov     eax, 0eh
pop     ebp
mov     ecx, [esp+11b8h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 11b8h
retn
mov     ecx, [esp+11c0h+var_4]
pop     esi
pop     ebp
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 11b8h
retn
sub     esp, 354h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+354h+var_4], eax
push    ebx
push    offset aopenswitcherex_0
call    ds:__iob_func
add     eax, 20h
push    eax
call    ds:fprintf
add     esp, 8
call    sub_10001360
test    eax, eax
jnz     loc_10005810
call    sub_10001370
call    sub_10001470
call    sub_10001000
xor     ebx, ebx
cmp     eax, ebx
jnz     loc_10005812
push    8
call    ??2@yapaxi@z
add     esp, 4
cmp     eax, ebx
jz      short loc_1000553d
push    ebx
push    ebx
push    ebx
mov     ecx, eax
call    ??0cmutex@@qae@hpbdpau_security_attributes@@@z
jmp     short loc_1000553f
xor     eax, eax
push    0ch
mov     dword_1000b49c, eax
call    ??2@yapaxi@z
add     esp, 4
cmp     eax, ebx
jz      short loc_10005563
mov     ecx, dword_1000b49c
push    ebx
push    ecx
mov     ecx, eax
call    ??0csinglelock@@qae@pavcsyncobject@@h@z
jmp     short loc_10005565
xor     eax, eax
mov     dword_1000b4a0, eax
call    usenetwork
test    eax, eax
jz      loc_100056d2
lea     edx, [esp+358h+wsadata]
push    edx
push    101h
call    wsastartup
test    eax, eax
jnz     loc_10005618
call    usenewsocketeachtime
test    eax, eax
jnz     loc_10005806
mov     eax, s
or      ebx, 0ffffffffh
cmp     eax, ebx
jz      short loc_100055f2
push    eax
call    closesocket
mov     s, ebx
push    6
push    1
push    2
call    socket
mov     s, eax
cmp     eax, ebx
jnz     short loc_10005633
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     eax, 0bh
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
call    wsacleanup
lea     eax, [esp+358h+var_194]
push    eax
push    101h
call    wsastartup
test    eax, eax
jz      short loc_100055b3
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     eax, 0ah
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
push    esi
push    edi
lea     esi, [esp+360h+name]
mov     edi, offset alocalhost
call    sub_10001010
pop     edi
pop     esi
test    eax, eax
jnz     short loc_1000567b
mov     ecx, s
push    ecx
call    closesocket
mov     s, ebx
call    wsacleanup
mov     eax, 0dh
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     eax, s
push    10h
lea     edx, [esp+35ch+name]
push    edx
push    eax
call    connect
cmp     eax, ebx
jnz     loc_10005806
mov     ecx, s
push    ecx
call    closesocket
mov     s, ebx
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
mov     eax, 0ch
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
push    ebx
push    ebx
push    3
push    ebx
push    ebx
push    0c0000000h
push    offset acom1_0
call    ds:createfilea
mov     hfile, eax
cmp     eax, 0ffffffffh
jnz     short loc_1000570d
mov     eax, 3
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
lea     edx, [esp+358h+dcb]
push    edx
push    eax
call    ds:getcommstate
test    eax, eax
jnz     short loc_10005738
mov     eax, 4
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     edx, hfile
mov     eax, dword_1000b178
and     [esp+358h+dcb._bf_8], 0ffffcfcfh
lea     ecx, [esp+358h+dcb]
push    ecx
push    edx
mov     [esp+360h+dcb.baudrate], eax
mov     [esp+360h+dcb.bytesize], 8
mov     [esp+360h+dcb.parity], bl
mov     [esp+360h+dcb.stopbits], bl
call    ds:setcommstate
test    eax, eax
jnz     short loc_10005787
mov     eax, 5
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     ecx, hfile
lea     eax, [esp+358h+name]
push    eax
push    ecx
call    ds:getcommtimeouts
test    eax, eax
jnz     short loc_100057b8
mov     eax, 8
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     eax, dword_1000b4c8
mov     eax, 64h
lea     edx, [esp+358h+name]
mov     dword ptr [esp+358h+name.sa_data+6], eax
mov     [esp+358h+var_328], eax
mov     eax, hfile
push    edx
push    eax
mov     dword ptr [esp+360h+name.sa_family], ebx
mov     dword ptr [esp+360h+name.sa_data+2], ebx
mov     dword ptr [esp+360h+name.sa_data+0ah], ebx
call    ds:setcommtimeouts
test    eax, eax
jnz     short loc_10005806
mov     eax, 9
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     dword_1000b4a4, 1
xor     eax, eax
mov     ecx, [esp+358h+var_4]
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     edx, [esp+arg_0]
xor     eax, eax
test    edx, edx
jz      short loc_1000584c
mov     ecx, [esp+len]
test    ecx, ecx
jz      short loc_1000584c
push    ecx
push    edx
call    sendcommandsex
add     esp, 8
mov     edx, [esp+arg_8]
test    edx, edx
jz      short loc_10005866
mov     ecx, [esp+arg_c]
test    ecx, ecx
jz      short loc_10005866
push    ecx
push    edx
call    sendcommandsex
add     esp, 8
mov     edx, [esp+arg_10]
test    edx, edx
jz      short loc_10005880
mov     ecx, [esp+arg_14]
test    ecx, ecx
jz      short loc_10005880
push    ecx
push    edx
call    sendcommandsex
add     esp, 8
mov     edx, [esp+arg_18]
test    edx, edx
jz      short locret_1000589a
mov     ecx, [esp+arg_1c]
test    ecx, ecx
jz      short locret_1000589a
push    ecx
push    edx
call    sendcommandsex
add     esp, 8
retn
push    0ffffffffh
push    offset seh_100058a0
mov     eax, large fs:0
push    eax
mov     eax, 200ch
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+2018h+var_10], eax
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+2024h+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     esi, edx
mov     [esp+2024h+maxcount], 1000h
call    sub_10001360
test    eax, eax
jz      loc_10005cda
cmp     dword_1000b4a8, 0
jz      loc_100059c2
mov     eax, edi
mov     ecx, esi
call    sub_10001af0
push    edi
test    esi, esi
jnz     short loc_1000595a
sub     eax, 1
jz      short loc_10005945
sub     eax, 1
jz      short loc_10005930
lea     eax, [esp+2028h+buffer]
push    offset adodt
push    eax
call    ds:sprintf
add     esp, 0ch
jmp     short loc_10005990
lea     ecx, [esp+2028h+buffer]
push    offset adl2odt
push    ecx
call    ds:sprintf
add     esp, 0ch
jmp     short loc_10005990
lea     edx, [esp+2028h+buffer]
push    offset adl1odt
push    edx
call    ds:sprintf
add     esp, 0ch
jmp     short loc_10005990
sub     eax, 1
push    esi
jz      short loc_1000597d
sub     eax, 1
jz      short loc_10005971
push    offset acidodt
lea     eax, [esp+2030h+buffer]
push    eax
jmp     short loc_10005987
push    offset acl2idodt
lea     ecx, [esp+2030h+buffer]
push    ecx
jmp     short loc_10005987
push    offset acl1idodt
lea     edx, [esp+2030h+buffer]
push    edx
call    ds:sprintf
add     esp, 10h
lea     eax, [esp+2024h+buffer]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10005997
sub     eax, edx
lea     ecx, [esp+2024h+maxcount]
push    ecx
lea     edx, [esp+2028h+string1]
push    edx
push    eax
lea     eax, [esp+2030h+buffer]
push    eax
call    sendbcscommand
add     esp, 10h
xor     eax, eax
jmp     loc_10005cdf
cmp     dword_1000b4ac, 0
jz      short loc_10005a3b
test    esi, esi
jz      short loc_10005a03
cmp     dword_1000b4cc, 0
jz      short loc_100059ee
push    esi
lea     ecx, [esp+2028h+buffer]
push    offset ad_0
push    ecx
call    ds:sprintf
add     esp, 0ch
jmp     short loc_10005a03
push    edi
push    esi
lea     edx, [esp+202ch+buffer]
push    offset add_0
push    edx
call    ds:sprintf
add     esp, 10h
lea     eax, [esp+2024h+buffer]
lea     edx, [eax+1]
lea     ebx, [ebx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10005a10
sub     eax, edx
lea     ecx, [esp+2024h+maxcount]
push    ecx
lea     edx, [esp+2028h+string1]
push    edx
push    eax
lea     eax, [esp+2030h+buffer]
push    eax
call    sendsiscommand
add     esp, 10h
xor     eax, eax
jmp     loc_10005cdf
cmp     dword_1000b4b4, 0
jz      loc_10005af2
test    esi, esi
jz      loc_10005cd6
cmp     dword_1000b048, 0
jz      short loc_10005aab
lea     ecx, [esi+40h]
push    ecx
lea     edx, [edi+40h]
push    edx
push    esi
push    edi
lea     eax, [esp+2034h+buffer]
push    offset asvddsvdd
push    eax
call    ds:sprintf
lea     eax, [esp+203ch+buffer]
add     esp, 18h
lea     edx, [eax+1]
lea     ecx, [ecx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10005a80
sub     eax, edx
lea     ecx, [esp+2024h+maxcount]
push    ecx
lea     edx, [esp+2028h+string1]
push    edx
push    eax
lea     eax, [esp+2030h+buffer]
push    eax
call    sendrcpt01commands
add     esp, 10h
xor     eax, eax
jmp     loc_10005cdf
push    esi
push    edi
lea     ecx, [esp+202ch+buffer]
push    offset asvadd
push    ecx
call    ds:sprintf
lea     eax, [esp+2034h+buffer]
add     esp, 10h
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10005ac7
sub     eax, edx
lea     edx, [esp+2024h+maxcount]
push    edx
lea     ecx, [esp+2028h+string1]
push    ecx
push    eax
lea     edx, [esp+2030h+buffer]
push    edx
call    sendrcpt01command
add     esp, 10h
xor     eax, eax
jmp     loc_10005cdf
cmp     dword_1000b4b8, 0
jz      short loc_10005b4b
test    esi, esi
jz      loc_10005cd6
push    edi
push    esi
lea     eax, [esp+202ch+buffer]
push    offset ax0dd
push    eax
call    ds:sprintf
lea     eax, [esp+2034h+buffer]
add     esp, 10h
lea     edx, [eax+1]
nop
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10005b20
sub     eax, edx
lea     ecx, [esp+2024h+maxcount]
push    ecx
lea     edx, [esp+2028h+string1]
push    edx
push    eax
lea     eax, [esp+2030h+buffer]
push    eax
call    sendlptpcommand
add     esp, 10h
xor     eax, eax
jmp     loc_10005cdf
cmp     dword_1000b4bc, 0
jz      loc_10005be3
test    esi, esi
jz      loc_10005cd6
dec     esi
push    esi
dec     edi
push    edi
lea     ecx, [esp+202ch+buffer]
push    offset avideooutputrou_1
push    ecx
call    ds:sprintf
lea     eax, [esp+2034h+buffer]
add     esp, 10h
lea     edx, [eax+1]
mov     edi, edi
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10005b80
sub     eax, edx
lea     edx, [esp+2024h+maxcount]
push    edx
lea     ecx, [esp+2028h+string1]
push    ecx
push    eax
lea     edx, [esp+2030h+buffer]
push    edx
call    sendvideohubcommand
mov     eax, [esp+2034h+maxcount]
push    eax
lea     ecx, [esp+2038h+string1]
push    offset anak
push    ecx
call    ds:_strnicmp
add     esp, 1ch
test    eax, eax
jnz     loc_10005cd6
push    offset agotanakfromthe
call    ds:__iob_func
add     eax, 20h
push    eax
call    ds:fprintf
add     esp, 8
xor     eax, eax
jmp     loc_10005cdf
cmp     dword_1000b4c0, 0
jz      loc_10005cd6
push    offset destination
lea     ecx, [esp+2028h+var_2014]
call    ds:??0?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qae@pbd@z
push    offset asc_10009694
push    offset an_0
lea     ecx, [esp+202ch+var_2014]
mov     [esp+202ch+var_4], 0
call    ds:?replace@?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qaehpbd0@z
push    offset asc_1000968c
push    offset ar
lea     ecx, [esp+202ch+var_2014]
call    ds:?replace@?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qaehpbd0@z
cmp     dword_1000b4d0, 0
jz      short loc_10005c49
sub     esi, 1
jns     short loc_10005c42
xor     esi, esi
sub     edi, 1
jns     short loc_10005c49
xor     edi, edi
cmp     dword_1000b054, 0
jz      short loc_10005c58
mov     eax, esi
mov     esi, edi
jmp     short loc_10005c5a
mov     eax, edi
cmp     dword_1000b048, 0
push    esi
lea     ecx, [esp+2028h+var_2014]
push    eax
jz      short loc_10005c87
push    esi
push    eax
call    ds:??b?$csimplestringt@d$00@atl@@qbepbdxz
push    eax
lea     edx, [esp+2038h+buffer]
push    1000h
push    edx
call    ds:sprintf_s
add     esp, 1ch
jmp     short loc_10005ca1
call    ds:??b?$csimplestringt@d$00@atl@@qbepbdxz
push    eax
lea     eax, [esp+2030h+buffer]
push    1000h
push    eax
call    ds:sprintf_s
add     esp, 14h
lea     eax, [esp+2024h+buffer]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10005ca8
sub     eax, edx
lea     ecx, [esp+2024h+maxcount]
push    ecx
lea     edx, [esp+2028h+string1]
push    edx
push    eax
lea     eax, [esp+2030h+buffer]
push    eax
call    sendcustomcommand
add     esp, 10h
lea     ecx, [esp+2024h+var_2014]
call    ds:??1?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qae@xz
xor     eax, eax
jmp     short loc_10005cdf
mov     eax, 2
mov     ecx, [esp+2024h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [esp+2018h+var_10]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2018h
retn
push    esi
push    edi
push    offset acloseswitcherc
call    ds:__iob_func
add     eax, 20h
push    eax
call    ds:fprintf
mov     esi, 1
xor     edi, edi
add     esp, 8
mov     dword_1000b040, esi
mov     dword_1000b034, esi
mov     dword_1000b038, esi
mov     dword_1000b044, esi
mov     dword_1000b04c, esi
mov     dword_1000b050, esi
mov     dword_1000b058, esi
mov     dword_1000b05c, esi
mov     dword_1000b064, esi
mov     dword_1000b06c, esi
mov     dword_1000b174, esi
mov     dword_1000b17c, esi
mov     dword_1000b284, esi
mov     dword_1000b290, esi
mov     dword_1000b294, esi
cmp     dword_1000b4c4, edi
jz      short loc_10005db4
mov     eax, s
cmp     eax, 0ffffffffh
jz      short loc_10005dad
push    eax
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
jmp     short loc_10005dca
mov     eax, hfile
cmp     eax, edi
jz      short loc_10005dca
push    eax
call    ds:closehandle
mov     hfile, edi
mov     ecx, dword_1000b49c
cmp     ecx, edi
jz      short loc_10005de2
mov     eax, [ecx]
mov     edx, [eax+4]
push    esi
call    edx
mov     dword_1000b49c, edi
mov     ecx, dword_1000b4a0
cmp     ecx, edi
jz      short loc_10005e02
mov     esi, ecx
call    ?unlock@csinglelock@@qaehxz
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     dword_1000b4a0, edi
mov     dword_1000b4a4, edi
pop     edi
xor     eax, eax
pop     esi
retn
mov     eax, 2088h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+2088h+var_4], eax
push    esi
xor     esi, esi
call    isvideohub
test    eax, eax
jz      loc_10006013
push    edi
push    1000h
push    offset avideooutputrou_0
lea     eax, [esp+2098h+destination]
push    1000h
push    eax
mov     [esp+20a0h+maxcount], 1000h
call    ds:strncpy_s
mov     eax, [esp+20a0h+arg_4]
mov     edi, ds:sprintf
mov     esi, ds:strncat_s
add     esp, 10h
test    eax, eax
jz      short loc_10005eaf
mov     ecx, [esp+2090h+arg_0]
test    ecx, ecx
jz      short loc_10005eaf
dec     eax
push    eax
dec     ecx
push    ecx
lea     ecx, [esp+2098h+buffer]
push    offset add
push    ecx
call    edi
push    80h
lea     edx, [esp+20a4h+buffer]
push    edx
lea     eax, [esp+20a8h+destination]
push    1000h
push    eax
call    esi
add     esp, 20h
mov     ecx, [esp+2090h+arg_c]
test    ecx, ecx
jz      short loc_10005ef1
mov     eax, [esp+2090h+arg_8]
test    eax, eax
jz      short loc_10005ef1
dec     ecx
push    ecx
dec     eax
push    eax
lea     ecx, [esp+2098h+buffer]
push    offset add
push    ecx
call    edi
push    80h
lea     edx, [esp+20a4h+buffer]
push    edx
lea     eax, [esp+20a8h+destination]
push    1000h
push    eax
call    esi
add     esp, 20h
mov     ecx, [esp+2090h+arg_14]
test    ecx, ecx
jz      short loc_10005f33
mov     eax, [esp+2090h+arg_10]
test    eax, eax
jz      short loc_10005f33
dec     ecx
push    ecx
dec     eax
push    eax
lea     ecx, [esp+2098h+buffer]
push    offset add
push    ecx
call    edi
push    80h
lea     edx, [esp+20a4h+buffer]
push    edx
lea     eax, [esp+20a8h+destination]
push    1000h
push    eax
call    esi
add     esp, 20h
mov     ecx, [esp+2090h+arg_1c]
test    ecx, ecx
jz      short loc_10005f75
mov     eax, [esp+2090h+arg_18]
test    eax, eax
jz      short loc_10005f75
dec     ecx
push    ecx
dec     eax
push    eax
lea     ecx, [esp+2098h+buffer]
push    offset add
push    ecx
call    edi
push    80h
lea     edx, [esp+20a4h+buffer]
push    edx
lea     eax, [esp+20a8h+destination]
push    1000h
push    eax
call    esi
add     esp, 20h
push    1
push    offset asc_10009694
lea     ecx, [esp+2098h+destination]
push    1000h
push    ecx
call    esi
add     esp, 10h
lea     eax, [esp+2090h+destination]
lea     edx, [eax+1]
pop     edi
lea     esp, [esp+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10005fa0
sub     eax, edx
lea     edx, [esp+208ch+maxcount]
push    edx
lea     ecx, [esp+2090h+string1]
push    ecx
push    eax
lea     edx, [esp+2098h+destination]
push    edx
call    sendvideohubcommand
mov     eax, [esp+209ch+maxcount]
push    eax
lea     ecx, [esp+20a0h+string1]
push    offset anak
push    ecx
call    ds:_strnicmp
add     esp, 1ch
test    eax, eax
jnz     short loc_10005ffb
push    offset agotanakfromthe
call    ds:__iob_func
add     eax, 20h
push    eax
call    ds:fprintf
add     esp, 8
xor     eax, eax
pop     esi
mov     ecx, [esp+2088h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2088h
retn
mov     edx, [esp+208ch+arg_4]
test    edx, edx
jz      short loc_10006030
mov     ecx, [esp+208ch+arg_0]
test    ecx, ecx
jz      short loc_10006030
call    sub_100058a0
mov     esi, eax
mov     edx, [esp+208ch+arg_c]
test    edx, edx
jz      short loc_1000604d
mov     ecx, [esp+208ch+arg_8]
test    ecx, ecx
jz      short loc_1000604d
call    sub_100058a0
mov     esi, eax
mov     edx, [esp+208ch+arg_14]
test    edx, edx
jz      short loc_1000606a
mov     ecx, [esp+208ch+arg_10]
test    ecx, ecx
jz      short loc_1000606a
call    sub_100058a0
mov     esi, eax
mov     edx, [esp+208ch+arg_1c]
test    edx, edx
jz      short loc_1000609b
mov     ecx, [esp+208ch+arg_18]
test    ecx, ecx
jz      short loc_1000609b
call    sub_100058a0
pop     esi
mov     ecx, [esp+2088h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2088h
retn
mov     ecx, [esp+208ch+var_4]
mov     eax, esi
pop     esi
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2088h
retn
mov     dword ptr [edi], 0
call    sub_10001360
test    eax, eax
jz      short loc_100060f0
mov     eax, esi
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_100060d4
mov     ecx, [esp+arg_0]
push    edi
push    ecx
sub     eax, edx
push    eax
push    esi
call    sendvideohubcommand
add     esp, 10h
xor     eax, eax
retn
mov     eax, 2
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
jmp     sub_100058a0
mov     eax, 2008h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+2008h+var_4], eax
push    esi
mov     esi, 1
mov     [esp+200ch+var_2008], 0
call    sub_10001360
test    eax, eax
jz      loc_10006466
cmp     dword_1000b4a8, 0
jz      short loc_100061c0
mov     eax, esi
xor     ecx, ecx
call    sub_10001af0
sub     eax, esi
push    esi
jz      short loc_10006176
sub     eax, esi
jz      short loc_1000616a
push    offset asodt
lea     eax, [esp+2014h+buffer]
push    eax
jmp     short loc_10006180
push    offset asl2odt
lea     ecx, [esp+2014h+buffer]
push    ecx
jmp     short loc_10006180
push    offset asl1odt
lea     edx, [esp+2014h+buffer]
push    edx
call    ds:sprintf
lea     eax, [esp+2018h+buffer]
add     esp, 0ch
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006190
sub     eax, edx
lea     ecx, [esp+200ch+var_2008]
push    ecx
lea     edx, [esp+2010h+str]
push    edx
push    eax
lea     eax, [esp+2018h+buffer]
push    eax
call    sendbcscommand
add     esp, 10h
mov     esi, eax
neg     esi
sbb     esi, esi
inc     esi
jmp     loc_1000645f
cmp     dword_1000b4ac, 0
jz      short loc_10006213
lea     ecx, [esp+200ch+buffer]
push    offset ai
push    ecx
call    ds:sprintf
lea     eax, [esp+2014h+buffer]
add     esp, 8
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_100061e3
sub     eax, edx
lea     edx, [esp+200ch+var_2008]
push    edx
lea     ecx, [esp+2010h+str]
push    ecx
push    eax
lea     edx, [esp+2018h+buffer]
push    edx
call    sendsiscommand
add     esp, 10h
mov     esi, eax
neg     esi
sbb     esi, esi
inc     esi
jmp     loc_1000645f
cmp     dword_1000b4b4, 0
jnz     loc_1000647e
cmp     dword_1000b4b8, 0
jz      short loc_10006273
lea     eax, [esp+200ch+buffer]
push    offset as0
push    eax
call    ds:sprintf
lea     eax, [esp+2014h+buffer]
add     esp, 8
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006243
sub     eax, edx
lea     ecx, [esp+200ch+var_2008]
push    ecx
lea     edx, [esp+2010h+str]
push    edx
push    eax
lea     eax, [esp+2018h+buffer]
push    eax
call    sendlptpcommand
add     esp, 10h
mov     esi, eax
neg     esi
sbb     esi, esi
inc     esi
jmp     loc_1000645f
cmp     dword_1000b4bc, 0
jz      short loc_100062c6
lea     ecx, [esp+200ch+buffer]
push    offset aping
push    ecx
call    ds:sprintf
lea     eax, [esp+2014h+buffer]
add     esp, 8
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006296
sub     eax, edx
lea     edx, [esp+200ch+var_2008]
push    edx
lea     ecx, [esp+2010h+str]
push    ecx
push    eax
lea     edx, [esp+2018h+buffer]
push    edx
call    sendvideohubcommand
add     esp, 10h
mov     esi, eax
neg     esi
sbb     esi, esi
inc     esi
jmp     loc_1000645f
push    edi
mov     edi, ds:sprintf
lea     eax, [esp+2010h+buffer]
push    offset aso1t
push    eax
call    edi
lea     eax, [esp+2018h+buffer]
add     esp, 8
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_100062e3
sub     eax, edx
lea     ecx, [esp+2010h+var_2008]
push    ecx
lea     edx, [esp+2014h+str]
push    edx
push    eax
lea     eax, [esp+201ch+buffer]
push    eax
call    sendbcscommand
add     esp, 10h
mov     ecx, eax
neg     ecx
sbb     ecx, ecx
add     ecx, esi
mov     dword_1000b4a8, ecx
jnz     loc_100063f2
lea     ecx, [esp+2010h+buffer]
push    offset ai
push    ecx
call    edi
lea     eax, [esp+2018h+buffer]
add     esp, 8
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006331
sub     eax, edx
lea     edx, [esp+2010h+var_2008]
push    edx
lea     ecx, [esp+2014h+str]
push    ecx
push    eax
lea     edx, [esp+201ch+buffer]
push    edx
call    sendsiscommand
mov     ecx, dword_1000b4a8
add     esp, 10h
neg     eax
sbb     eax, eax
inc     eax
mov     dword_1000b4ac, eax
test    ecx, ecx
jnz     loc_100063ea
test    eax, eax
jnz     loc_1000641f
lea     eax, [esp+2010h+buffer]
push    offset aiv1
push    eax
call    edi
lea     eax, [esp+2018h+buffer]
add     esp, 8
lea     edx, [eax+1]
jmp     short loc_10006390
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006390
sub     eax, edx
lea     ecx, [esp+2010h+var_2008]
push    ecx
lea     edx, [esp+2014h+str]
push    edx
push    eax
lea     eax, [esp+201ch+buffer]
push    eax
call    sendrcpt01command
mov     ecx, dword_1000b4a8
add     esp, 10h
mov     edx, eax
neg     edx
sbb     edx, edx
inc     edx
mov     dword_1000b4b4, edx
test    ecx, ecx
jnz     short loc_100063f8
mov     eax, dword_1000b4ac
test    eax, eax
jnz     short loc_100063d8
test    edx, edx
jz      short loc_10006429
test    ecx, ecx
jz      short loc_1000640b
test    eax, eax
jnz     short loc_10006429
test    ecx, ecx
jz      short loc_1000640f
test    edx, edx
jnz     short loc_10006429
jmp     short loc_1000642b
mov     edx, dword_1000b4b4
jmp     short loc_100063fd
mov     edx, dword_1000b4b4
mov     eax, dword_1000b4ac
test    eax, eax
jz      short loc_10006405
test    edx, edx
jnz     short loc_10006429
test    ecx, ecx
jnz     short loc_100063dc
jmp     short loc_100063d0
test    eax, eax
jnz     short loc_10006425
test    edx, edx
jz      short loc_1000644b
mov     dword_1000b4c8, 3
jmp     short loc_1000645e
mov     edx, dword_1000b4b4
test    edx, edx
jz      short loc_1000643b
xor     esi, esi
test    ecx, ecx
jz      short loc_1000643b
mov     dword_1000b4c8, 1
jmp     short loc_1000645e
test    eax, eax
jz      short loc_1000640f
mov     dword_1000b4c8, 2
jmp     short loc_1000645e
cmp     dword_1000b4b8, 0
jz      short loc_1000645e
mov     dword_1000b4c8, 4
pop     edi
cmp     [esp+200ch+var_2008], 0
jnz     short loc_1000647e
xor     eax, eax
pop     esi
mov     ecx, [esp+2008h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2008h
retn
mov     ecx, [esp+200ch+var_4]
mov     eax, esi
pop     esi
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2008h
retn
mov     eax, 2010h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+2010h+var_4], eax
mov     ecx, [esp+2010h+arg_4]
push    ebp
xor     ebp, ebp
mov     [esp+2014h+var_200c], 1000h
call    sub_10001360
test    eax, eax
jz      loc_10006920
cmp     [esp+2014h+arg_c], ebp
jle     loc_10006908
mov     edx, [esp+2014h+arg_8]
push    ebx
mov     ebx, ds:sprintf
push    esi
mov     eax, ecx
sub     edx, ecx
push    edi
lea     esi, [ebp+1]
mov     [esp+2020h+var_2010], eax
mov     [esp+2020h+var_2008], edx
jmp     short loc_10006518
jmp     short loc_10006510
mov     eax, [esp+2020h+var_2010]
mov     edx, [esp+2020h+var_2008]
cmp     [esp+2020h+arg_8], 0
jz      loc_10006682
cmp     dword ptr [edx+eax], 0
jz      loc_1000688f
cmp     dword_1000b4a8, 0
jz      loc_100065d2
mov     eax, [esp+2020h+var_2010]
mov     edi, [eax]
mov     eax, esi
test    edi, edi
jnz     short loc_10006597
xor     ecx, ecx
call    sub_10001af0
sub     eax, 1
push    esi
jz      short loc_10006583
sub     eax, 1
jz      short loc_1000656f
lea     ecx, [esp+2024h+buffer]
push    offset adodt
push    ecx
call    ebx
add     esp, 0ch
jmp     loc_10006771
lea     edx, [esp+2024h+buffer]
push    offset adl2odt
push    edx
call    ebx
add     esp, 0ch
jmp     loc_10006771
lea     eax, [esp+2024h+buffer]
push    offset adl1odt
push    eax
call    ebx
add     esp, 0ch
jmp     loc_10006771
mov     ecx, edi
call    sub_10001af0
sub     eax, 1
push    esi
push    edi
jz      short loc_100065c3
sub     eax, 1
jz      short loc_100065b9
push    offset acidodt
lea     ecx, [esp+202ch+buffer]
push    ecx
jmp     loc_1000676c
push    offset acl2idodt
jmp     loc_10006767
push    offset acl1idodt
lea     eax, [esp+202ch+buffer]
push    eax
jmp     loc_1000676c
cmp     dword_1000b4ac, 0
jz      short loc_100065f5
mov     ecx, [esp+2020h+var_2010]
mov     eax, [ecx]
test    eax, eax
jz      loc_100067a7
push    esi
push    eax
push    offset add_0
jmp     loc_10006767
cmp     dword_1000b4b4, 0
jz      short loc_1000664a
mov     eax, [esp+2020h+var_2010]
mov     eax, [eax]
test    eax, eax
jz      loc_100067dd
cmp     dword_1000b048, 0
jz      short loc_10006639
mov     ecx, [esp+2020h+var_2010]
mov     eax, [ecx]
lea     edx, [eax+40h]
push    edx
lea     ecx, [esi+40h]
push    ecx
push    eax
push    esi
lea     edx, [esp+2030h+buffer]
push    offset asvddsvdd
push    edx
call    ebx
add     esp, 18h
jmp     loc_10006771
push    eax
push    esi
push    offset asvadd
lea     eax, [esp+202ch+buffer]
push    eax
jmp     loc_1000676c
cmp     dword_1000b4b8, 0
jnz     loc_10006752
cmp     dword_1000b4bc, 0
jz      loc_1000687c
mov     eax, [esp+2020h+var_2010]
mov     eax, [eax]
test    eax, eax
jz      loc_10006846
dec     eax
push    eax
lea     ecx, [esi-1]
push    ecx
push    offset avideooutputrou_1
jmp     loc_10006767
cmp     dword_1000b4a8, 0
jz      loc_10006717
mov     edi, [eax]
mov     eax, esi
test    edi, edi
jnz     short loc_100066e5
xor     ecx, ecx
call    sub_10001af0
sub     eax, 1
push    esi
jz      short loc_100066d1
sub     eax, 1
jz      short loc_100066bd
lea     eax, [esp+2024h+buffer]
push    offset adodt
push    eax
call    ebx
add     esp, 0ch
jmp     loc_10006771
lea     ecx, [esp+2024h+buffer]
push    offset adl2odt
push    ecx
call    ebx
add     esp, 0ch
jmp     loc_10006771
lea     edx, [esp+2024h+buffer]
push    offset adl1odt
push    edx
call    ebx
add     esp, 0ch
jmp     loc_10006771
mov     ecx, edi
call    sub_10001af0
sub     eax, 1
push    esi
push    edi
jz      short loc_10006710
sub     eax, 1
jz      short loc_10006704
push    offset acidodt
lea     eax, [esp+202ch+buffer]
push    eax
jmp     short loc_1000676c
push    offset acl2idodt
lea     ecx, [esp+202ch+buffer]
push    ecx
jmp     short loc_1000676c
push    offset acl1idodt
jmp     short loc_10006767
cmp     dword_1000b4ac, 0
jz      short loc_10006738
mov     eax, [eax]
test    eax, eax
jz      loc_100067a7
push    esi
push    eax
push    offset add_0
lea     eax, [esp+202ch+buffer]
push    eax
jmp     short loc_1000676c
cmp     dword_1000b4b4, 0
jnz     loc_10006602
cmp     dword_1000b4b8, 0
jz      loc_10006846
mov     ecx, [esp+2020h+var_2010]
mov     eax, [ecx]
test    eax, eax
jz      loc_10006813
push    esi
push    eax
push    offset ax0dd_0
lea     edx, [esp+202ch+buffer]
push    edx
call    ebx
add     esp, 10h
cmp     dword_1000b4a8, 0
jz      short loc_100067a7
lea     eax, [esp+2020h+buffer]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006781
sub     eax, edx
lea     ecx, [esp+2020h+var_200c]
push    ecx
lea     edx, [esp+2024h+str]
push    edx
push    eax
lea     eax, [esp+202ch+buffer]
push    eax
call    sendbcscommand
jmp     loc_10006877
cmp     dword_1000b4ac, 0
jz      short loc_100067dd
lea     eax, [esp+2020h+buffer]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_100067b7
sub     eax, edx
lea     ecx, [esp+2020h+var_200c]
push    ecx
lea     edx, [esp+2024h+str]
push    edx
push    eax
lea     eax, [esp+202ch+buffer]
push    eax
call    sendsiscommand
jmp     loc_10006877
cmp     dword_1000b4b4, 0
jz      short loc_10006813
lea     eax, [esp+2020h+buffer]
lea     edx, [eax+1]
lea     ecx, [ecx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_100067f0
sub     eax, edx
lea     ecx, [esp+2020h+var_200c]
push    ecx
lea     edx, [esp+2024h+str]
push    edx
push    eax
lea     eax, [esp+202ch+buffer]
push    eax
call    sendrcpt01commands
jmp     short loc_10006877
cmp     dword_1000b4b8, 0
jz      short loc_10006846
lea     eax, [esp+2020h+buffer]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006823
sub     eax, edx
lea     ecx, [esp+2020h+var_200c]
push    ecx
lea     edx, [esp+2024h+str]
push    edx
push    eax
lea     eax, [esp+202ch+buffer]
push    eax
call    sendlptpcommand
jmp     short loc_10006877
cmp     dword_1000b4bc, 0
jz      short loc_1000687c
lea     eax, [esp+2020h+buffer]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006856
sub     eax, edx
lea     ecx, [esp+2020h+var_200c]
push    ecx
lea     edx, [esp+2024h+str]
push    edx
push    eax
lea     eax, [esp+202ch+buffer]
push    eax
call    sendvideohubcommand
add     esp, 10h
mov     ebp, eax
test    ebp, ebp
jz      short loc_1000688f
cmp     ebp, 6
jz      short loc_100068c0
cmp     ebp, 7
jz      short loc_100068e0
cmp     ebp, 11h
jz      short loc_10006900
add     [esp+2020h+var_2010], 4
inc     esi
lea     ecx, [esi-1]
cmp     ecx, [esp+2020h+arg_c]
jl      loc_10006510
pop     edi
pop     esi
pop     ebx
mov     eax, ebp
pop     ebp
mov     ecx, [esp+2010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2010h
retn
pop     edi
pop     esi
mov     ebp, 6
pop     ebx
mov     eax, ebp
pop     ebp
mov     ecx, [esp+2010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2010h
retn
pop     edi
pop     esi
mov     ebp, 7
pop     ebx
mov     eax, ebp
pop     ebp
mov     ecx, [esp+2010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2010h
retn
pop     edi
pop     esi
mov     ebp, 11h
pop     ebx
mov     eax, ebp
pop     ebp
mov     ecx, [esp+2010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 2010h
retn
mov     ecx, [esp+2014h+var_4]
pop     ebp
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 2010h
retn
mov     eax, 3010h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+3010h+var_4], eax
push    ebx
mov     ebx, [esp+3014h+arg_4]
push    esi
push    0fffh
xor     esi, esi
lea     eax, [esp+301ch+var_1003]
push    esi
push    eax
mov     [esp+3024h+var_300c], ebx
mov     [esp+3024h+buffer], 0
call    memset
push    0fffh
lea     ecx, [esp+3028h+var_2003]
push    esi
push    ecx
mov     [esp+3030h+destination], 0
call    memset
add     esp, 18h
mov     [esp+3018h+count], 1000h
call    sub_10001360
test    eax, eax
jz      loc_10006dae
push    ebp
push    edi
cmp     dword_1000b4a8, esi
jz      loc_10006ad2
mov     eax, [esp+3020h+arg_8]
cmp     eax, 1
jl      loc_10006d24
lea     ebp, [esp+3020h+destination]
test    eax, eax
jle     loc_10006a69
mov     ebx, ds:sprintf
mov     edx, eax
mov     edi, 1
mov     [esp+3020h+var_3008], edx
mov     eax, edi
xor     ecx, ecx
call    sub_10001af0
sub     eax, 1
push    edi
jz      short loc_10006a25
sub     eax, 1
jz      short loc_10006a16
push    offset asl1odt
lea     eax, [esp+3028h+buffer]
push    eax
jmp     short loc_10006a32
push    offset asl2odt
lea     ecx, [esp+3028h+buffer]
push    ecx
jmp     short loc_10006a32
push    offset asl1odt
lea     edx, [esp+3028h+buffer]
push    edx
call    ebx
lea     eax, [esp+302ch+buffer]
add     esp, 0ch
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006a41
sub     eax, edx
mov     esi, eax
push    esi
lea     eax, [esp+3024h+buffer]
push    eax
push    ebp
call    ds:strncat
add     esp, 0ch
add     ebp, esi
inc     edi
sub     [esp+3020h+var_3008], 1
jnz     short loc_100069f3
lea     eax, [esp+3020h+destination]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006a73
lea     ecx, [esp+3020h+source]
push    ecx
sub     eax, edx
push    eax
lea     edx, [esp+3028h+destination]
push    edx
lea     ecx, [esp+302ch+count]
call    sub_10001d80
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     loc_10006d90
lea     eax, [esp+3020h+source]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006aa7
mov     ecx, [esp+3020h+arg_8]
sub     eax, edx
mov     edx, [esp+3020h+var_300c]
push    ecx
push    edx
push    eax
lea     eax, [esp+302ch+source]
push    eax
call    parsebcsreply
add     esp, 10h
mov     esi, eax
jmp     loc_10006d29
cmp     dword_1000b4ac, esi
jz      loc_10006ba4
mov     ebx, [esp+3020h+arg_8]
cmp     ebx, 1
jl      loc_10006d24
xor     eax, eax
lea     ebp, [esp+3020h+destination]
test    ebx, ebx
jle     short loc_10006b4a
jmp     short loc_10006b00
lea     edi, [eax+1]
push    edi
lea     ecx, [esp+3024h+buffer]
push    offset ad
push    ecx
call    ds:sprintf
lea     eax, [esp+302ch+buffer]
add     esp, 0ch
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006b24
sub     eax, edx
mov     esi, eax
push    esi
lea     edx, [esp+3024h+buffer]
push    edx
push    ebp
call    ds:strncat
mov     eax, edi
add     esp, 0ch
add     ebp, esi
cmp     eax, ebx
jl      short loc_10006b00
lea     eax, [esp+3020h+destination]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006b54
lea     ecx, [esp+3020h+count]
sub     eax, edx
push    ecx
push    eax
lea     ecx, [esp+3028h+source]
lea     edx, [esp+3028h+destination]
call    sub_10003bc0
mov     esi, eax
mov     eax, [esp+3028h+count]
add     esp, 8
mov     [esp+eax+3020h+source], 0
test    esi, esi
jnz     loc_10006d90
mov     edx, [esp+3020h+var_300c]
push    ebx
push    edx
push    eax
lea     eax, [esp+302ch+source]
push    eax
call    parsesisreply
add     esp, 10h
mov     esi, eax
jmp     loc_10006d29
cmp     dword_1000b4b4, esi
jz      loc_10006c8b
mov     ecx, [esp+3020h+arg_8]
cmp     ecx, 1
jl      loc_10006d24
xor     eax, eax
lea     ebp, [esp+3020h+destination]
test    ecx, ecx
jle     short loc_10006c1e
mov     ebx, ds:strncat
lea     edi, [eax+1]
push    edi
lea     ecx, [esp+3024h+buffer]
push    offset aivd
push    ecx
call    ds:sprintf
lea     eax, [esp+302ch+buffer]
add     esp, 0ch
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006bf7
sub     eax, edx
mov     esi, eax
push    esi
lea     edx, [esp+3024h+buffer]
push    edx
push    ebp
call    ebx
mov     eax, edi
add     esp, 0ch
add     ebp, esi
cmp     eax, [esp+3020h+arg_8]
jl      short loc_10006bd3
lea     eax, [esp+3020h+destination]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006c28
sub     eax, edx
lea     ecx, [esp+3020h+count]
push    ecx
lea     edx, [esp+3024h+source]
push    edx
mov     ecx, eax
lea     edx, [esp+3028h+destination]
call    sub_10001f80
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     loc_10006d90
lea     eax, [esp+3020h+source]
lea     edx, [eax+1]
lea     ecx, [ecx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006c60
mov     ecx, [esp+3020h+arg_8]
sub     eax, edx
mov     edx, [esp+3020h+var_300c]
push    ecx
push    edx
push    eax
lea     eax, [esp+302ch+source]
push    eax
call    parsercpt01reply
add     esp, 10h
mov     esi, eax
jmp     loc_10006d29
cmp     dword_1000b4b8, esi
jz      short loc_10006d0c
mov     edi, [esp+3020h+arg_8]
cmp     edi, 1
jl      loc_10006d24
lea     ecx, [esp+3020h+destination]
push    offset ar_0
push    ecx
call    ds:sprintf
lea     eax, [esp+3028h+destination]
add     esp, 8
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10006cc3
sub     eax, edx
lea     edx, [esp+3020h+count]
push    edx
push    eax
lea     ecx, [esp+3028h+source]
lea     edx, [esp+3028h+destination]
call    sub_10003cc0
mov     esi, eax
mov     eax, [esp+3028h+count]
add     esp, 8
mov     [esp+eax+3020h+source], 0
test    esi, esi
jnz     loc_10006d90
push    edi
push    ebx
push    eax
lea     eax, [esp+302ch+source]
push    eax
call    parselptpreply
add     esp, 10h
mov     esi, eax
jmp     short loc_10006d29
cmp     dword_1000b4bc, esi
jz      loc_10006da7
mov     ebp, [esp+3020h+arg_8]
cmp     ebp, 1
jge     short loc_10006d42
mov     eax, 6
pop     edi
pop     ebp
pop     esi
pop     ebx
mov     ecx, [esp+3010h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 3010h
retn
lea     ecx, [esp+3020h+destination]
push    offset avideooutputrou_2
push    ecx
call    ds:sprintf
lea     edx, [esp+3028h+source]
push    edx
lea     edi, [esp+302ch+count]
lea     esi, [esp+302ch+destination]
call    sub_100060c0
mov     esi, eax
mov     eax, [esp+302ch+count]
add     esp, 0ch
mov     [esp+eax+3020h+source], 0
test    esi, esi
jnz     short loc_10006d90
push    ebp
push    ebx
push    eax
lea     eax, [esp+302ch+source]
push    eax
call    parsevideohubreply
add     esp, 10h
mov     esi, eax
jmp     short loc_10006d29
cmp     esi, 6
jnz     short loc_10006d99
mov     eax, esi
jmp     short loc_10006d29
cmp     esi, 7
jnz     short loc_10006da2
mov     eax, esi
jmp     short loc_10006d29
cmp     esi, 11h
jnz     short $+2
mov     eax, esi
jmp     loc_10006d29
mov     ecx, [esp+3018h+var_4]
pop     esi
pop     ebx
xor     ecx, esp
mov     eax, 2
call    @__security_check_cookie@4
add     esp, 3010h
retn
push    offset acloseswitchere_0
call    ds:__iob_func
add     eax, 20h
push    eax
call    ds:fprintf
add     esp, 8
jmp     closeswitcher
sub     esp, 354h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+354h+var_4], eax
push    ebx
push    esi
push    offset aopenswitcherca
call    ds:__iob_func
add     eax, 20h
push    eax
call    ds:fprintf
add     esp, 8
call    sub_10001360
test    eax, eax
jnz     loc_100071f9
push    40h
xor     ebx, ebx
push    ebx
push    offset dword_1000c518
call    memset
push    40h
push    ebx
push    offset dword_1000c618
call    memset
call    sub_10001370
call    sub_10001470
call    sub_10001000
push    1
mov     esi, eax
push    40h
push    offset dword_1000c518
mov     eax, offset byte_1000c718
call    sub_10001b30
push    2
push    40h
push    offset dword_1000c518
mov     eax, offset byte_1000c998
call    sub_10001b30
push    1
push    40h
push    offset dword_1000c618
mov     eax, offset byte_1000cc18
call    sub_10001b30
push    2
push    40h
push    offset dword_1000c618
mov     eax, offset byte_1000ce98
call    sub_10001b30
add     esp, 48h
cmp     esi, ebx
jz      short loc_10006ec4
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
push    8
call    ??2@yapaxi@z
add     esp, 4
cmp     eax, ebx
jz      short loc_10006ede
push    ebx
push    ebx
push    ebx
mov     ecx, eax
call    ??0cmutex@@qae@hpbdpau_security_attributes@@@z
jmp     short loc_10006ee0
xor     eax, eax
push    0ch
mov     dword_1000b49c, eax
call    ??2@yapaxi@z
add     esp, 4
cmp     eax, ebx
jz      short loc_10006f04
mov     ecx, dword_1000b49c
push    ebx
push    ecx
mov     ecx, eax
call    ??0csinglelock@@qae@pavcsyncobject@@h@z
jmp     short loc_10006f06
xor     eax, eax
mov     dword_1000b4a0, eax
cmp     dword_1000b4c4, ebx
jz      loc_10007089
lea     edx, [esp+35ch+wsadata]
push    edx
push    101h
call    wsastartup
test    eax, eax
jnz     loc_10006fc5
call    isrcpt01
test    eax, eax
jnz     short loc_10006f44
call    usenewsocketeachtime
test    eax, eax
jnz     loc_100071c2
mov     eax, s
cmp     eax, 0ffffffffh
jz      short loc_10006f9f
push    eax
call    closesocket
mov     s, 0ffffffffh
push    6
push    1
push    2
call    socket
mov     s, eax
cmp     eax, 0ffffffffh
jnz     short loc_10006fe1
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     esi
mov     eax, 0bh
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
call    wsacleanup
lea     eax, [esp+35ch+var_194]
push    eax
push    101h
call    wsastartup
test    eax, eax
jz      short loc_10006f5e
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     esi
mov     eax, 0ah
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
push    edi
lea     esi, [esp+360h+name]
mov     edi, offset alocalhost
call    sub_10001010
pop     edi
test    eax, eax
jnz     short loc_1000702c
mov     ecx, s
push    ecx
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
pop     esi
mov     eax, 0dh
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     eax, s
push    10h
lea     edx, [esp+360h+name]
push    edx
push    eax
call    connect
cmp     eax, 0ffffffffh
jnz     loc_100071c2
mov     ecx, s
push    ecx
call    closesocket
mov     s, 0ffffffffh
call    wsacleanup
mov     ecx, dword_1000b4a0
call    ?unlock@csinglelock@@qaehxz
pop     esi
mov     eax, 0ch
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
push    ebx
push    ebx
push    3
push    ebx
push    ebx
push    0c0000000h
push    offset acom1_0
call    ds:createfilea
mov     hfile, eax
cmp     eax, 0ffffffffh
jnz     short loc_100070c5
pop     esi
mov     eax, 3
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
lea     edx, [esp+35ch+dcb]
push    edx
push    eax
call    ds:getcommstate
test    eax, eax
jnz     short loc_100070f1
pop     esi
mov     eax, 4
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     edx, hfile
mov     eax, dword_1000b178
and     [esp+35ch+dcb._bf_8], 0ffffcfcfh
lea     ecx, [esp+35ch+dcb]
push    ecx
push    edx
mov     [esp+364h+dcb.baudrate], eax
mov     [esp+364h+dcb.bytesize], 8
mov     [esp+364h+dcb.parity], bl
mov     [esp+364h+dcb.stopbits], bl
call    ds:setcommstate
test    eax, eax
jnz     short loc_10007141
pop     esi
mov     eax, 5
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     ecx, hfile
lea     eax, [esp+35ch+name]
push    eax
push    ecx
call    ds:getcommtimeouts
test    eax, eax
jnz     short loc_10007173
pop     esi
mov     eax, 8
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     eax, dword_1000b4c8
mov     eax, 64h
lea     edx, [esp+35ch+name]
mov     dword ptr [esp+35ch+name.sa_data+6], eax
mov     [esp+35ch+var_328], eax
mov     eax, hfile
push    edx
push    eax
mov     dword ptr [esp+364h+name.sa_family], ebx
mov     dword ptr [esp+364h+name.sa_data+2], ebx
mov     dword ptr [esp+364h+name.sa_data+0ah], ebx
call    ds:setcommtimeouts
test    eax, eax
jnz     short loc_100071c2
pop     esi
mov     eax, 9
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     dword_1000b4a4, 1
cmp     dword_1000b060, ebx
jz      short loc_100071f9
call    checkforswitcher
test    eax, eax
jnz     short loc_100071f9
pop     esi
mov     eax, 1
pop     ebx
mov     ecx, [esp+354h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
add     esp, 354h
retn
mov     ecx, [esp+35ch+var_4]
pop     esi
pop     ebx
xor     ecx, esp
xor     eax, eax
call    @__security_check_cookie@4
add     esp, 354h
retn
xor     eax, eax
mov     dword_1000b034, eax
mov     dword_1000b4c4, eax
jmp     openswitcher
push    esi
push    80h
call    ds:_malloc_crt
mov     esi, eax
push    esi
call    ds:_encode_pointer
pop     ecx
pop     ecx
mov     dword_1000d528, eax
mov     dword_1000d524, eax
test    esi, esi
jnz     short loc_10007637
xor     eax, eax
inc     eax
pop     esi
retn
and     dword ptr [esi], 0
call    sub_10007cc5
push    offset byte_10007ceb
call    _atexit
mov     dword ptr [esp], offset sub_10007cb9
call    _atexit
pop     ecx
xor     eax, eax
pop     esi
retn
push    offset dword_1000d50c
call    __clean_type_info_names_internal
pop     ecx
retn
mov     edi, edi
push    esi
mov     eax, offset dword_10009d98
mov     esi, offset dword_10009d98
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_10007ce8
mov     eax, [edi]
test    eax, eax
jz      short loc_10007ce1
call    eax
add     edi, 4
cmp     edi, esi
jb      short loc_10007cd9
pop     edi
pop     esi
retn
push    esi
mov     eax, offset dword_10009da0
mov     esi, offset dword_10009da0
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_10007d0e
mov     eax, [edi]
test    eax, eax
jz      short loc_10007d07
call    eax
add     edi, 4
cmp     edi, esi
jb      short loc_10007cff
pop     edi
pop     esi
retn
lea     ecx, [ebp-34h]
jmp     ds:??1?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qae@xz
lea     ecx, [ebp-38h]
jmp     ds:??1?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qae@xz
mov     edx, [esp+arg_4]
lea     eax, [edx-3ch]
mov     ecx, [edx-40h]
xor     ecx, eax
call    @__security_check_cookie@4
add     eax, 10h
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10009db8
jmp     __cxxframehandler3
lea     ecx, [ebp-2014h]
jmp     ds:??1?$cstringt@dv?$strtraitmfc_dll@dv?$chtraitscrt@d@atl@@@@@atl@@qae@xz
mov     edx, [esp+arg_4]
lea     eax, [edx-2014h]
mov     ecx, [edx-2018h]
xor     ecx, eax
call    @__security_check_cookie@4
add     eax, 8
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10009de4
jmp     __cxxframehandler3
mov     ecx, offset dword_1000d138
call    ??0_afx_dll_module_state@@qae@xz
push    offset sub_1000820f
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_1000d138
jmp     ??1afx_module_state@@uae@xz
offset __catch$_internaldllmain@12$2>