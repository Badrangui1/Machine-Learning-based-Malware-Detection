sub     esp, 28h
mov     ecx, ds:hinstance
lea     eax, [esp+28h+wndclass]
push    esi
push    eax
push    offset classname
push    ecx
call    ds:getclassinfoa
test    eax, eax
jnz     short loc_40108b
mov     ecx, ds:hinstance
push    7f00h
xor     esi, esi
mov     [esp+30h+wndclass.hinstance], ecx
mov     [esp+30h+wndclass.lpszclassname], offset classname
mov     [esp+30h+wndclass.lpfnwndproc], offset sub_4010c0
push    esi
call    ds:loadcursora
mov     [esp+2ch+wndclass.hcursor], eax
mov     [esp+2ch+wndclass.hicon], esi
mov     [esp+2ch+wndclass.lpszmenuname], esi
mov     [esp+2ch+wndclass.style], esi
lea     eax, [esp+2ch+wndclass]
mov     [esp+2ch+wndclass.cbclsextra], esi
mov     [esp+2ch+wndclass.hbrbackground], 6
mov     [esp+2ch+wndclass.cbwndextra], 1eh
push    eax
call    ds:registerclassa
test    ax, ax
mov     ecx, ds:hinstance
jnz     short loc_401091
call    sub_4892d0
pop     esi
add     esp, 28h
retn
mov     ecx, ds:hinstance
mov     eax, [esp+2ch+arg_0]
push    0
push    0
mov     edx, ds:hwndparent
push    edx
mov     ds:dword_4a6008, eax
push    44ch
push    ecx
call    ds:dialogboxparama
cmp     eax, 0ffffffffh
jnz     short loc_4010bb
call    sub_4892d0
pop     esi
add     esp, 28h
retn
mov     ecx, [esp+msg]
sub     esp, 2c0h
cmp     ecx, 0fh
mov     eax, ecx
push    ebx
push    esi
push    edi
push    ebp
ja      short loc_40110d
jz      loc_40130a
cmp     eax, 1
jz      short loc_40115a
cmp     eax, 2
jz      loc_4012c5
mov     eax, [esp+2d0h+lparam]
mov     edx, [esp+2d0h+wparam]
mov     ebx, [esp+2d0h+hdlg]
push    eax
push    edx
push    ecx
push    ebx
call    ds:defdlgproca
jmp     loc_4016df
cmp     eax, 87h
ja      short loc_401125
jz      loc_401698
cmp     eax, 14h
jz      loc_401665
jmp     short def_401153
cmp     eax, 111h
ja      short loc_40113f
jz      loc_4016cd
cmp     eax, 100h
jz      loc_4016cd
jmp     short def_401153
sub     eax, 113h
cmp     eax, 0f4h
ja      short def_401153
xor     edx, edx
mov     dl, ds:byte_401700[eax]
jmp     ds:jpt_401153[edx*4]
push    105h
mov     eax, ds:hinstance
push    105h
push    eax
call    sub_474110
add     esp, 0ch
mov     ds:hresdata, eax
test    eax, eax
jz      loc_4012bb
push    eax
call    ds:lockresource
mov     ds:dword_4a6004, eax
test    eax, eax
jz      loc_4012bb
movsx   ecx, word ptr [eax]
mov     ebx, [esp+2d0h+hdlg]
mov     [esp+2d0h+pt.x], ecx
movsx   edx, word ptr [eax+2]
mov     [esp+2d0h+pt.y], edx
push    ebx
call    ds:getdc
mov     esi, eax
test    esi, esi
jz      short loc_401218
push    7
push    esi
call    ds:setmapmode
lea     eax, [esp+2d0h+rect]
mov     ebp, ds:getclientrect
push    eax
push    ebx
call    ebp
mov     ecx, [esp+2d0h+rect.bottom]
push    0
mov     eax, [esp+2d4h+rect.right]
push    ecx
push    eax
mov     ebp, ds:setwindowextex
push    esi
call    ebp
mov     ecx, [esp+2d0h+rect.bottom]
push    0
mov     eax, [esp+2d4h+rect.right]
push    ecx
push    eax
mov     ebp, ds:setviewportextex
push    esi
call    ebp
lea     ecx, [esp+2d0h+pt]
push    1
push    ecx
push    esi
call    ds:lptodp
push    esi
mov     ebp, ds:releasedc
push    ebx
call    ebp
push    7
mov     esi, ds:getsystemmetrics
call    esi
mov     edi, eax
push    8
call    esi
mov     ebp, eax
push    0
lea     eax, ds:0[ebp*2]
add     eax, [esp+2d4h+pt.y]
push    eax
lea     eax, ds:0[edi*2]
add     eax, [esp+2d8h+pt.x]
push    eax
push    1
call    esi
cdq
sub     eax, edx
sar     eax, 1
mov     ecx, eax
mov     eax, [esp+2dch+pt.y]
cdq
sub     eax, edx
sar     eax, 1
sub     ecx, eax
sub     ecx, ebp
push    ecx
push    0
call    esi
cdq
sub     eax, edx
sar     eax, 1
mov     ecx, eax
mov     eax, [esp+2e0h+pt.x]
cdq
sub     eax, edx
sar     eax, 1
sub     ecx, eax
sub     ecx, edi
push    ecx
push    ebx
call    ds:movewindow
push    0
mov     ebp, ds:settimer
push    0bb8h
push    1
push    ebx
call    ebp
mov     ds:dword_4a6000, eax
call    ds:gettickcount
push    ebx
mov     ds:dword_4a6010, eax
call    ds:setfocus
jmp     loc_4016dd
call    sub_4892d0
jmp     loc_4016dd
cmp     ds:hresdata, 0
jz      loc_4016dd
mov     eax, ds:hresdata
push    eax
call    ds:freeresource
cmp     ds:dword_4a6000, 0
jz      loc_4016dd
mov     ebx, [esp+2d0h+hdlg]
push    1
push    ebx
call    ds:killtimer
mov     ds:dword_4a6000, 0
jmp     loc_4016dd
lea     eax, [esp+2d0h+paint]
mov     ebx, [esp+2d0h+hdlg]
push    eax
mov     ebp, ds:beginpaint
push    ebx
xor     esi, esi
call    ebp
mov     ebp, eax
cmp     ds:hresdata, esi
jz      loc_401654
lea     eax, [esp+2d0h+rect]
mov     [esp+2d0h+rc.left], esi
push    eax
push    ebx
call    ds:getclientrect
call    sub_469a70
cmp     eax, 8
jl      short loc_401360
push    2
mov     eax, ds:hinstance
push    2
push    eax
call    sub_474110
add     esp, 0ch
mov     esi, eax
test    esi, esi
jnz     short loc_401388
push    2
mov     eax, ds:hinstance
push    4
push    eax
call    sub_474110
add     esp, 0ch
mov     esi, eax
test    esi, esi
mov     [esp+2d0h+rc.left], 1
jz      loc_401501
push    esi
call    ds:lockresource
mov     edi, eax
test    edi, edi
jz      loc_4014fa
call    sub_40ae50
test    eax, eax
jz      short loc_4013b5
push    ebp
call    sub_40ae90
mov     [esp+2d4h+hpal], 0
add     esp, 4
jmp     short loc_4013fa
lea     eax, [esp+2d0h+hpal]
push    eax
push    1
push    0
call    sub_40b130
add     esp, 0ch
cmp     [esp+2d0h+hpal], 0
jnz     short loc_4013e1
push    edi
call    sub_40f4f0
mov     [esp+2d4h+hpal], eax
add     esp, 4
cmp     [esp+2d0h+hpal], 0
jz      short loc_4013fa
mov     eax, [esp+2d0h+hpal]
push    0
push    eax
push    ebp
call    ds:selectpalette
mov     [esp+2d0h+var_278], eax
push    ebp
call    ds:realizepalette
cmp     [esp+2d0h+rc.left], 0
jz      short loc_40143e
mov     eax, [esp+2d0h+rect.bottom]
mov     ecx, [esp+2d0h+rect.right]
push    eax
mov     edx, ds:dword_4a6004
movsx   eax, word ptr [edx+6]
push    ecx
push    eax
movsx   ecx, word ptr [edx+4]
lea     eax, [esp+2dch+rc]
push    ecx
push    eax
call    ds:setrect
push    0
call    ds:getstockobject
lea     ecx, [esp+2d0h+rc]
push    eax
push    ecx
push    ebp
call    ds:fillrect
mov     eax, ds:dword_4a6004
movsx   edx, word ptr [edi+4]
mov     cx, [eax+4]
mov     eax, [esp+2d0h+rect.right]
sub     eax, edx
movsx   edx, cx
sub     eax, edx
cdq
sub     eax, edx
mov     edx, ds:dword_4a6004
sar     eax, 1
add     ax, cx
mov     cx, [edx+6]
movsx   edx, word ptr [edi+8]
mov     [esp+2d0h+var_2be], ax
mov     eax, [esp+2d0h+rect.bottom]
sub     eax, edx
movsx   edx, cx
sub     eax, edx
push    edi
cdq
sub     eax, edx
sar     eax, 1
add     ax, cx
mov     word ptr [esp+2d4h+rc.left], ax
call    sub_40eff0
shl     eax, 2
add     esp, 4
add     eax, [edi]
lea     edx, [eax+edi]
test    edx, edx
jz      short loc_4014d3
xor     ecx, ecx
xor     eax, eax
mov     cx, [edi+8]
push    0cc0020h
mov     ax, [edi+4]
push    0
push    edi
push    edx
push    ecx
push    eax
movsx   edx, [esp+2e8h+var_2be]
push    0
push    0
push    ecx
push    eax
movsx   ecx, word ptr [esp+2f8h+rc.left]
push    ecx
push    edx
push    ebp
call    ds:stretchdibits
cmp     [esp+2d0h+hpal], 0
jz      short loc_4014fa
cmp     [esp+2d0h+var_278], 0
jz      short loc_4014ef
mov     eax, [esp+2d0h+var_278]
push    0
push    eax
push    ebp
call    ds:selectpalette
mov     eax, [esp+2d0h+hpal]
push    eax
call    ds:deleteobject
push    esi
call    ds:freeresource
push    1
push    ebp
call    ds:setbkmode
lea     eax, [esp+2d0h+rc]
push    1
push    ebp
push    eax
call    sub_4492b0
lea     edi, [esp+2dch+var_278]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+2d0h+var_278]
lea     edi, [esp+2d0h+var_294]
mov     ecx, 7
push    0
rep movsd
push    ebp
call    ds:settextalign
lea     eax, [esp+2d0h+string]
push    100h
push    eax
call    sub_40cf90
lea     eax, [esp+2d8h+string]
add     esp, 8
mov     esi, ds:lstrlena
push    eax
call    esi
lea     ecx, [esp+2d0h+string]
push    eax
push    ecx
mov     eax, ds:dword_4a6004
movsx   edx, word ptr [eax+0ah]
movsx   ecx, word ptr [eax+8]
push    edx
mov     edi, ds:textouta
push    ecx
push    ebp
call    edi
lea     ecx, [esp+2d0h+var_2a8]
lea     eax, [esp+2d0h+pt]
lea     edx, [esp+2d0h+string]
push    ecx
push    eax
push    edx
call    sub_40cfb0
lea     ecx, [esp+2dch+var_2a8]
add     esp, 0ch
push    ecx
call    esi
lea     ecx, [esp+2d0h+var_2a8]
push    eax
push    ecx
mov     edx, ds:dword_4a6004
movsx   eax, word ptr [edx+0eh]
movsx   ecx, word ptr [edx+0ch]
push    eax
push    ecx
push    ebp
call    edi
lea     ecx, [esp+2d0h+string]
push    ecx
call    esi
lea     ecx, [esp+2d0h+pt]
push    100h
mov     [esp+eax+2d4h+string], 0dh
lea     edx, [esp+eax+2d4h+var_1ff]
push    ecx
push    edx
call    sub_47f9f0
add     esp, 0ch
mov     ecx, ds:dword_4a6004
movsx   edx, word ptr [ecx+10h]
mov     [esp+2d0h+rc.left], edx
push    810h
movsx   eax, word ptr [ecx+12h]
mov     [esp+2d4h+rc.top], eax
movsx   edx, word ptr [ecx+14h]
mov     [esp+2d4h+rc.right], edx
lea     edx, [esp+2d4h+rc]
movsx   eax, word ptr [ecx+16h]
lea     ecx, [esp+2d4h+string]
push    edx
mov     [esp+2d8h+rc.bottom], eax
push    ecx
call    esi
lea     ecx, [esp+2d8h+string]
push    eax
push    ecx
push    ebp
call    ds:drawtexta
lea     ecx, [esp+2d0h+var_294]
lea     eax, [esp+2d0h+rc]
push    ecx
push    ebp
push    eax
call    sub_449700
add     esp, 0ch
lea     eax, [esp+2d0h+paint]
push    eax
push    ebx
call    ds:endpaint
jmp     short loc_4016dd
lea     eax, [esp+2d0h+rect]
mov     ebx, [esp+2d0h+hdlg]
push    eax
mov     ebp, ds:getclientrect
push    ebx
call    ebp
push    1
call    ds:getstockobject
mov     ecx, [esp+2d0h+wparam]
push    eax
lea     eax, [esp+2d4h+rect]
push    eax
push    ecx
call    ds:fillrect
jmp     short loc_4016dd
mov     eax, 87h
jmp     short loc_4016df
cmp     ds:dword_4a6008, 0
jz      short loc_4016cd
mov     eax, ds:dword_4a6004
movsx   esi, word ptr [eax+20h]
lea     ecx, [esi+esi*4]
lea     eax, [ecx+ecx*4]
lea     esi, [eax+eax*4]
shl     esi, 3
add     esi, ds:dword_4a6010
call    ds:gettickcount
cmp     esi, eax
jnb     short loc_4016dd
mov     ebx, [esp+2d0h+hdlg]
push    0
push    ebx
call    ds:enddialog
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2c0h
retn    10h
lea     eax, [esp+arg_c]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    eax
mov     eax, [esp+4+arg_0]
push    ecx
push    edx
push    eax
call    sub_401820
add     esp, 10h
retn
sub     esp, 2ch
mov     [esp+2ch+var_20], 0
push    ebx
push    esi
mov     ebx, [esp+34h+arg_c]
push    edi
mov     eax, [esp+38h+arg_4]
push    ebp
mov     [esp+3ch+var_18], ebx
mov     [esp+3ch+var_1c], ebx
test    eax, eax
jg      short loc_40184d
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
mov     ecx, ds:dword_4a6018
mov     edx, ds:dword_4a6014
dec     eax
mov     edi, [esp+3ch+arg_8]
mov     [esp+3ch+var_10], ecx
mov     [esp+3ch+var_14], edx
mov     ecx, [esp+3ch+arg_0]
mov     ds:dword_4a6018, eax
mov     ds:dword_4a6014, ecx
cmp     byte ptr [edi], 25h
jnz     short loc_40188b
cmp     byte ptr [edi+1], 24h
jnz     short loc_40188b
mov     [esp+3ch+var_20], 1
add     edi, 2
cmp     byte ptr [edi], 0
jz      loc_401b03
cmp     [esp+3ch+var_20], 0
jz      short loc_4018a2
mov     ebx, [esp+3ch+var_18]
add     ebx, 4
cmp     byte ptr [edi], 25h
jnz     loc_401aec
mov     al, [edi+1]
inc     edi
sub     al, 23h
cmp     al, 1
sbb     eax, eax
neg     eax
mov     [esp+3ch+var_28], eax
test    eax, eax
jz      short loc_4018c0
inc     edi
mov     al, [edi]
sub     al, 30h
cmp     al, 1
sbb     ebp, ebp
neg     ebp
test    ebp, ebp
jz      short loc_4018cf
inc     edi
movsx   eax, byte ptr [edi]
xor     esi, esi
cmp     eax, 80h
jnb     short loc_40191f
cmp     dword_4af134, 1
jle     short loc_4018f4
movsx   eax, byte ptr [edi]
push    4
push    eax
call    __isctype
add     esp, 8
jmp     short loc_401906
movsx   ecx, byte ptr [edi]
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 4
test    eax, eax
jz      short loc_40191f
movsx   ecx, byte ptr [edi]
lea     eax, [esi+esi*4]
inc     edi
lea     esi, [ecx+eax*2-30h]
movsx   eax, byte ptr [edi]
cmp     eax, 80h
jb      short loc_4018db
cmp     byte ptr [edi], 24h
jnz     short loc_401991
inc     edi
mov     ebx, [esp+3ch+var_1c]
cmp     esi, 1
jle     short loc_401932
lea     ebx, [ebx+esi*4-4]
mov     al, [edi]
sub     al, 30h
cmp     al, 1
sbb     ebp, ebp
neg     ebp
test    ebp, ebp
jz      short loc_401941
inc     edi
movsx   eax, byte ptr [edi]
xor     esi, esi
cmp     eax, 80h
jnb     short loc_401991
cmp     dword_4af134, 1
jle     short loc_401966
movsx   eax, byte ptr [edi]
push    4
push    eax
call    __isctype
add     esp, 8
jmp     short loc_401978
movsx   edx, byte ptr [edi]
mov     ecx, off_4aef28
xor     eax, eax
mov     ax, [ecx+edx*2]
and     eax, 4
test    eax, eax
jz      short loc_401991
movsx   ecx, byte ptr [edi]
lea     eax, [esi+esi*4]
inc     edi
lea     esi, [ecx+eax*2-30h]
movsx   eax, byte ptr [edi]
cmp     eax, 80h
jb      short loc_40194d
mov     al, [edi]
cmp     al, 6ch
jz      short loc_4019b5
cmp     al, 4ch
jz      short loc_4019b5
cmp     [esp+3ch+var_20], 0
mov     [esp+3ch+var_2c], 4
jz      short loc_4019b1
mov     edx, 1
jmp     short loc_4019c4
xor     edx, edx
jmp     short loc_4019c4
mov     [esp+3ch+var_2c], 4
mov     edx, 1
add     edi, edx
mov     cl, [edi]
movsx   eax, cl
sub     eax, 25h
cmp     eax, 53h
ja      loc_401ae6
mov     [esp+3ch+var_24], 0
mov     al, ds:byte_401b70[eax]
mov     byte ptr [esp+3ch+var_24], al
mov     eax, [esp+3ch+var_24]
jmp     ds:jpt_4019eb[eax*4]
push    25h
inc     edi
call    sub_401c90
add     esp, 4
jmp     loc_401afa
test    edx, edx
jz      short loc_401a1a
mov     eax, [ebx]
add     ebx, 4
push    eax
inc     edi
call    sub_401c90
add     esp, 4
jmp     loc_401afa
mov     eax, [ebx]
add     ebx, 4
push    eax
inc     edi
call    sub_401c90
add     esp, 4
jmp     loc_401afa
cmp     cl, 64h
jz      short loc_401a3d
mov     eax, 0
cmp     cl, 44h
jnz     short loc_401a42
mov     eax, 1
push    eax
inc     edi
mov     eax, [esp+40h+var_2c]
push    ebp
push    esi
push    eax
push    0ah
push    ebx
call    sub_401bd0
add     esp, 18h
mov     ebx, eax
jmp     loc_401afa
add     ebx, 4
push    0ah
lea     eax, [esp+40h+buffer]
push    eax
mov     eax, [ebx-4]
add     eax, 3ffh
shr     eax, 0ah
push    eax
call    __ultoa
add     esp, 0ch
push    eax
call    sub_401cc0
add     esp, 4
cmp     [esp+3ch+var_28], 0
jz      short loc_401ae3
push    4bh
inc     edi
call    sub_401c90
add     esp, 4
jmp     short loc_401afa
mov     eax, [ebx]
add     ebx, 4
push    eax
inc     edi
call    sub_401cc0
add     esp, 4
jmp     short loc_401afa
cmp     [esp+3ch+var_28], 0
jz      short loc_401abd
push    offset a0x
call    sub_401cc0
add     esp, 4
mov     eax, [esp+3ch+var_2c]
push    0
push    ebp
inc     edi
push    esi
push    eax
push    10h
push    ebx
call    sub_401bd0
add     esp, 18h
mov     ebx, eax
jmp     short loc_401afa
push    4
push    ebx
call    sub_401ce0
add     esp, 8
mov     ebx, eax
inc     edi
jmp     short loc_401afa
dec     edi
cmp     byte ptr [edi], 25h
jnz     short loc_401ae6
mov     eax, edi
inc     edi
mov     al, [eax]
push    eax
call    sub_401c90
add     esp, 4
cmp     byte ptr [edi], 0
jnz     loc_401894
mov     eax, ds:dword_4a6014
mov     ecx, [esp+3ch+var_10]
mov     edx, [esp+3ch+var_14]
mov     byte ptr [eax], 0
mov     eax, ds:dword_4a6014
mov     ds:dword_4a6018, ecx
sub     eax, [esp+3ch+arg_0]
mov     ds:dword_4a6014, edx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
sub     esp, 24h
cmp     [esp+24h+arg_8], 4
push    ebx
push    esi
push    edi
jnz     short loc_401bec
mov     esi, [esp+30h+arg_0]
mov     eax, [esp+30h+arg_14]
mov     edi, [esi]
add     esi, 4
jmp     short loc_401bfb
mov     eax, [esp+30h+arg_14]
mov     esi, [esp+30h+arg_0]
test    eax, eax
mov     edi, [esi]
add     esi, 4
test    eax, eax
jz      short loc_401c0f
test    edi, edi
jge     short loc_401c0f
neg     edi
push    2dh
call    sub_401c90
add     esp, 4
mov     ebx, [esp+30h+radix]
lea     eax, [esp+30h+sz]
push    ebx
push    eax
push    edi
call    __ultoa
add     esp, 0ch
cmp     ebx, 10h
jnz     short loc_401c32
lea     eax, [esp+30h+sz]
push    eax
call    ds:charuppera
mov     edi, [esp+30h+arg_c]
test    edi, edi
jle     short loc_401c6b
cmp     [esp+30h+arg_10], 1
sbb     bl, bl
lea     eax, [esp+30h+sz]
and     bl, 0f0h
push    eax
add     bl, 30h
call    ds:lstrlena
sub     edi, eax
mov     ecx, edi
dec     edi
test    ecx, ecx
jle     short loc_401c6b
push    ebx
call    sub_401c90
add     esp, 4
mov     eax, edi
dec     edi
test    eax, eax
jg      short loc_401c5b
lea     eax, [esp+30h+sz]
push    eax
call    sub_401cc0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
cmp     ds:dword_4a6018, 0
jz      short locret_401cb0
mov     eax, ds:dword_4a6014
mov     cl, [esp+arg_0]
mov     [eax], cl
inc     ds:dword_4a6014
dec     ds:dword_4a6018
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     byte ptr [esi], 0
jz      short loc_401cdd
mov     eax, esi
inc     esi
mov     al, [eax]
push    eax
call    sub_401c90
add     esp, 4
cmp     byte ptr [esi], 0
jnz     short loc_401cca
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
add     esi, 4
cmp     [esp+8+arg_4], 4
mov     eax, [esi-4]
mov     [esp+8+var_4], eax
jnz     short loc_401d18
push    0
push    1
push    8
push    4
push    10h
push    esi
call    sub_401bd0
add     esp, 18h
mov     esi, eax
push    3ah
call    sub_401c90
add     esp, 4
lea     eax, [esp+8+var_4]
push    0
push    1
push    8
push    4
push    10h
push    eax
call    sub_401bd0
add     esp, 18h
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_4]
sub     eax, 6000h
cmp     eax, 0dh
ja      short def_401d4e
jmp     ds:jpt_401d4e[eax*4]
xor     eax, eax
retn
mov     eax, [esp+arg_c]
push    eax
call    sub_401f00
mov     ecx, [esp+4+arg_10]
add     esp, 4
mov     [ecx], eax
mov     eax, 1
retn
mov     eax, [esp+arg_c]
push    eax
call    sub_402140
mov     ecx, [esp+4+arg_10]
add     esp, 4
mov     [ecx], eax
mov     eax, 1
retn
mov     eax, [esp+arg_c]
mov     ecx, [esp+ho]
push    eax
push    ecx
call    sub_402170
mov     ecx, [esp+8+arg_10]
add     esp, 8
mov     [ecx], eax
mov     eax, 1
retn
mov     eax, [esp+arg_c]
push    eax
call    sub_402210
add     esp, 4
mov     eax, 1
retn
call    sub_40ae50
mov     ecx, [esp+arg_10]
mov     [ecx], eax
mov     eax, 1
retn
call    sub_4441e0
mov     eax, [esp+arg_c]
mov     ecx, eax
and     eax, 1
and     ecx, 2
push    ecx
push    eax
mov     ecx, [esp+8+ho]
push    ecx
call    sub_40ba60
mov     ecx, [esp+0ch+arg_10]
add     esp, 0ch
mov     [ecx], eax
mov     eax, 1
retn
call    sub_4441e0
call    sub_40b0d0
mov     ecx, [esp+arg_10]
mov     eax, 1
mov     dword ptr [ecx], 0
retn
mov     eax, [esp+arg_c]
push    eax
call    sub_4028c0
mov     ecx, [esp+4+arg_10]
add     esp, 4
mov     [ecx], eax
mov     eax, 1
retn
mov     eax, [esp+arg_c]
push    eax
call    sub_402930
mov     ecx, [esp+4+arg_10]
add     esp, 4
mov     [ecx], eax
mov     eax, 1
retn
mov     eax, [esp+arg_c]
push    eax
call    sub_4029b0
mov     ecx, [esp+4+arg_10]
add     esp, 4
mov     [ecx], eax
mov     eax, 1
retn
mov     eax, [esp+ho]
mov     ecx, [esp+arg_c]
push    eax
push    ecx
call    sub_4021c0
mov     ecx, [esp+8+arg_10]
add     esp, 8
mov     [ecx], eax
mov     eax, 1
retn
mov     eax, [esp+arg_c]
push    eax
call    sub_4029f0
mov     ecx, [esp+4+arg_10]
add     esp, 4
mov     [ecx], eax
mov     eax, 1
retn
mov     eax, [esp+arg_c]
push    eax
call    sub_402a60
mov     ecx, [esp+4+arg_10]
add     esp, 4
mov     [ecx], eax
mov     eax, 1
retn
push    1
call    sub_43e090
add     esp, 4
mov     eax, 1
retn
sub     esp, 0c8h
push    ebx
push    esi
push    edi
mov     esi, 0fffffffeh
push    ebp
call    sub_41aa50
mov     [esp+0d8h+var_c4], eax
test    eax, eax
jnz     short loc_401f2d
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
mov     [esp+0d8h+var_c4], eax
mov     di, 2
mov     ebx, [esp+0d8h+arg_0]
cmp     dword ptr [ebx], 2ch
jnz     short loc_401f62
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_401f62
push    eax
call    ds:lstrlena
lea     edi, [eax+1]
test    di, 1
jz      short loc_401f57
inc     di
cmp     di, 100h
jl      short loc_401f62
mov     di, 100h
mov     eax, [ebx+24h]
cmp     eax, 400h
jbe     short loc_401f7c
mov     eax, 0fffffffdh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
add     ax, di
push    42h
add     ax, 84h
mov     [esp+0dch+var_c0], ax
movsx   ecx, [esp+0dch+var_c0]
push    ecx
call    sub_45b8f0
mov     [esp+0e0h+hmem], eax
add     esp, 8
test    eax, eax
jz      loc_40211b
push    eax
mov     ebp, ds:globallock
call    ebp
mov     ebp, eax
mov     ax, [esp+0d8h+var_c0]
mov     [ebp+0], ax
mov     eax, [ebx+1ch]
cmp     eax, 1
jz      short loc_401fcd
cmp     eax, 2
jz      short loc_401fd5
mov     word ptr [ebp+0ah], 12h
jmp     short loc_401fdb
mov     word ptr [ebp+0ah], 14h
jmp     short loc_401fdb
mov     word ptr [ebp+0ah], 18h
lea     edx, [ebx+0ch]
lea     ecx, [ebp+0ch]
mov     eax, [edx]
mov     [ecx], eax
mov     esi, [edx+4]
mov     [ecx+4], esi
mov     eax, [edx+8]
mov     [ecx+8], eax
mov     edx, [edx+0ch]
mov     [ecx+0ch], edx
mov     dword ptr [ebp+6], offset sub_402330
mov     cx, word ptr [esp+0d8h+var_c4]
mov     [ebp+32h], cx
mov     [ebp+80h], di
cmp     dword ptr [ebx], 2ch
jnz     short loc_40202e
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_40202e
movsx   ecx, di
push    ecx
push    eax
lea     eax, [ebp+84h]
push    eax
call    sub_47f9f0
add     esp, 0ch
mov     eax, [ebx+24h]
mov     [ebp+82h], ax
mov     eax, [ebx+24h]
test    eax, eax
jz      short loc_40205e
mov     esi, [ebx+20h]
test    esi, esi
jz      short loc_40205e
movsx   ecx, di
lea     edi, [ecx+ebp+84h]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, [ebx+4]
test    eax, eax
jnz     short loc_40206c
xor     esi, esi
jmp     loc_40211b
cmp     dword ptr [ebx+8], 0
jnz     short loc_40207c
mov     esi, 0ffffffffh
jmp     loc_40211b
lea     edi, [ebp+38h]
push    edi
push    eax
call    sub_44f360
add     esp, 8
cmp     dword ptr [edi], 0
jnz     short loc_402098
mov     esi, 0fffffffeh
jmp     loc_40211b
push    40h
mov     eax, [ebx+8]
push    eax
lea     ecx, [ebp+3ch]
push    ecx
call    sub_47f9f0
add     esp, 0ch
push    ebp
call    sub_402780
movsx   esi, ax
add     esp, 4
cmp     esi, 1
jnz     short loc_402110
mov     ax, [ebp+0ah]
xor     ecx, ecx
mov     cx, [ebp+32h]
push    eax
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
or      eax, ecx
push    eax
push    ebp
call    sub_478760
add     esp, 0ch
mov     esi, eax
test    esi, esi
jg      short loc_4020f6
mov     eax, [ebp+34h]
push    eax
call    ds:freelibrary
mov     dword ptr [ebp+34h], 0
jmp     short loc_402110
mov     [esp+0d8h+var_1c], 0
lea     eax, [esp+0d8h+var_c0]
push    eax
push    1ch
push    esi
call    sub_410930
add     esp, 0ch
mov     eax, [edi]
push    eax
call    sub_44f4a0
add     esp, 4
cmp     [esp+0d8h+hmem], 0
jz      short loc_40212f
mov     eax, [esp+0d8h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
mov     ecx, [esp+arg_0]
sub     esp, 0c0h
lea     eax, [esp+0c0h+var_c0]
push    eax
push    1bh
push    ecx
call    sub_410930
add     esp, 0ch
xor     eax, eax
add     esp, 0c0h
retn
mov     ecx, [esp+arg_4]
sub     esp, 0c0h
mov     eax, [ecx+4]
mov     edx, [ecx+8]
mov     [esp+0c0h+var_b6], ax
mov     [esp+0c0h+var_9c], edx
mov     eax, [esp+0c0h+arg_0]
lea     edx, [esp+0c0h+var_c0]
mov     [esp+0c0h+var_1c], ax
push    edx
push    1ch
mov     ecx, [ecx]
push    ecx
call    sub_410930
mov     eax, [esp+0cch+var_9c]
add     esp, 0ch
add     esp, 0c0h
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     word ptr [esp+8+var_4], 0ah
mov     ecx, [esp+8+var_4]
push    esi
mov     esi, 0ffffffffh
push    ecx
push    eax
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_402200
mov     ecx, [esp+0ch+arg_4]
push    offset dword_4a61c4
movsx   edx, word ptr [eax]
xor     esi, esi
mov     [edx+eax-8], ecx
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 8
retn
sub     esp, 0c0h
xor     eax, eax
mov     ecx, 2fh
push    esi
push    edi
lea     edi, [esp+0c8h+var_c0]
rep stosd
stosw
mov     edx, [esp+0c8h+arg_0]
lea     esi, [esp+0c8h+var_b0]
mov     eax, [edx+4]
lea     ecx, [edx+8]
mov     [esp+0c8h+var_b6], ax
mov     eax, [ecx]
mov     [esi], eax
mov     eax, [ecx+4]
mov     [esi+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [esi+8], eax
mov     eax, [edx]
mov     [esi+0ch], ecx
lea     edx, [esp+0c8h+var_c0]
mov     [esp+0c8h+var_a0], eax
mov     [esp+0c8h+var_1c], 7000h
push    edx
push    1ch
push    eax
call    sub_410930
add     esp, 0ch
pop     edi
pop     esi
add     esp, 0c0h
retn
mov     ecx, [esp+arg_0]
sub     esp, 38h
movsx   edx, word ptr [ecx+32h]
push    esi
mov     eax, [ecx+2]
mov     esi, ds:frequency
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_30], edx
mov     [esp+3ch+var_2c], esi
lea     edx, [ecx+0ch]
lea     esi, [esp+3ch+var_20]
mov     [esp+3ch+var_38], 38h
mov     eax, [edx]
mov     [esi], eax
mov     eax, [edx+4]
mov     [esi+4], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [esi+8], eax
xor     eax, eax
mov     [esi+0ch], edx
mov     ax, [ecx+80h]
lea     edx, [ecx+84h]
add     eax, ecx
mov     [esp+3ch+var_8], edx
add     eax, 84h
mov     esi, [esp+3ch+arg_8]
mov     [esp+3ch+var_10], eax
mov     [esp+3ch+var_28], esi
mov     [esp+3ch+var_4], 0
xor     eax, eax
mov     ax, [ecx+82h]
mov     ecx, [ecx+7ch]
mov     [esp+3ch+var_c], eax
test    ecx, ecx
mov     eax, [esp+3ch+arg_c]
mov     [esp+3ch+var_24], eax
jz      short loc_402321
mov     eax, [esp+3ch+arg_4]
lea     edx, [esp+3ch+var_38]
push    eax
push    edx
call    ecx
pop     esi
add     esp, 38h
retn
xor     eax, eax
pop     esi
add     esp, 38h
retn
sub     esp, 14h
push    ebx
push    esi
mov     ebx, [esp+1ch+arg_4]
push    edi
push    ebp
cmp     ebx, 6ah
ja      def_40234c
xor     eax, eax
mov     al, ds:byte_402708[ebx]
jmp     ds:jpt_40234c[eax*4]
mov     edi, [esp+24h+arg_0]
lea     edx, [esp+24h+rcsrc2]
lea     ecx, [edi+0ch]
mov     eax, [ecx]
mov     [edx], eax
mov     esi, [esp+24h+arg_8]
mov     ebx, [ecx+4]
mov     [edx+4], ebx
mov     ebp, [ecx+8]
mov     [edx+8], ebp
mov     eax, [ecx+0ch]
mov     ecx, [esi+0ch]
push    ecx
mov     [edx+0ch], eax
mov     ax, [edi+1ch]
lea     edx, [esp+28h+rcsrc2]
push    edx
push    eax
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_4023a3
push    0
mov     eax, [esi+0ch]
push    eax
push    2
push    edi
call    sub_402280
add     esp, 10h
xor     eax, eax
pop     ebp
mov     word ptr [edi+1ch], 0
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     esi, [esp+24h+arg_8]
mov     edi, [esp+24h+arg_0]
mov     eax, [esi]
mov     ecx, [esi+4]
push    ecx
push    eax
lea     eax, [edi+0ch]
push    eax
call    ds:ptinrect
test    eax, eax
jz      short loc_402405
xor     eax, eax
xor     ecx, ecx
mov     ax, [esi+4]
shl     eax, 10h
mov     cx, [esi]
or      eax, ecx
push    eax
push    0
push    0eh
push    edi
call    sub_402280
add     esp, 10h
test    eax, eax
jnz     short loc_402405
mov     eax, 0ffffffffh
pop     ebp
mov     [esi+98h], edi
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
xor     ecx, ecx
mov     esi, [esp+24h+arg_8]
mov     cx, [esi+4]
xor     eax, eax
mov     ax, [esi]
sub     ebx, 3
shl     ecx, 10h
or      ecx, eax
cmp     ebx, 1
sbb     eax, eax
push    ecx
push    0
and     eax, 6
add     eax, 7
mov     edi, [esp+2ch+arg_0]
push    eax
push    edi
call    sub_402280
add     esp, 10h
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
xor     eax, eax
mov     esi, [esp+24h+arg_8]
mov     ax, [esi+4]
xor     ecx, ecx
shl     eax, 10h
mov     cx, [esi]
or      eax, ecx
mov     edi, [esp+24h+arg_0]
cmp     word ptr [esi+0ah], 1
push    eax
push    0
sbb     eax, eax
add     eax, 6
push    eax
push    edi
call    sub_402280
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     edi, [esp+24h+arg_0]
push    0
push    0
push    1
push    edi
call    sub_402280
add     esp, 10h
push    0
push    8
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
push    edi
call    sub_402810
add     esp, 4
jmp     loc_4026b6
mov     esi, [esp+24h+arg_8]
mov     edi, [esp+24h+arg_0]
lea     ebp, [esi+24h]
push    ebp
push    esi
push    edi
call    sub_402830
add     esp, 0ch
test    eax, eax
jnz     loc_4026ba
mov     dx, [esi+0a4h]
mov     eax, [ebp+0]
movsx   ecx, word ptr [esi+0ah]
push    eax
push    ecx
push    edx
push    edi
call    sub_402280
add     esp, 10h
mov     [ebp+0], eax
jmp     loc_4026ba
mov     edi, [esp+24h+arg_0]
push    0
push    0
push    8
push    edi
call    sub_402280
add     esp, 10h
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     edi, [esp+24h+arg_0]
push    0
push    0
push    9
push    edi
call    sub_402280
add     esp, 10h
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     esi, [esp+24h+arg_8]
mov     edi, [esp+24h+arg_0]
mov     eax, [esi+98h]
lea     ecx, [edi+84h]
push    eax
push    ecx
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_402567
mov     eax, [esi+24h]
push    eax
push    0
push    0ah
push    edi
call    sub_402280
add     esp, 10h
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     esi, [esp+24h+arg_8]
mov     edi, [esp+24h+arg_0]
mov     eax, [esi+98h]
lea     ecx, [edi+84h]
push    eax
push    ecx
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_4025c6
mov     eax, [esi+24h]
push    eax
push    0
push    0bh
push    edi
add     edi, 3ch
call    sub_402280
add     esp, 10h
push    edi
push    eax
call    sub_488890
add     esp, 8
test    eax, eax
jz      short loc_4025b9
mov     [esi+0b6h], eax
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     esi, [esp+24h+arg_8]
mov     edi, [esp+24h+arg_0]
mov     eax, [esi+98h]
lea     ecx, [edi+84h]
push    eax
push    ecx
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_40261b
push    0
push    0
push    0ch
push    edi
call    sub_402280
add     esp, 10h
test    eax, eax
jnz     short loc_40260e
push    0
push    1bh
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     esi, [esp+24h+arg_8]
push    0
mov     edi, [esp+28h+arg_0]
push    0
mov     eax, [esi+0a6h]
push    3
mov     [esp+30h+var_14], eax
push    edi
call    sub_402280
add     esp, 10h
mov     ebp, eax
test    ebp, ebp
jz      short loc_4026ba
mov     eax, [esi+98h]
push    eax
push    1
push    ebp
call    [esp+30h+var_14]
add     esp, 0ch
push    ebp
call    sub_45ba00
add     esp, 4
jmp     short loc_4026ba
mov     esi, [esp+24h+arg_8]
mov     edi, [esp+24h+arg_0]
push    edi
mov     ebp, [esi+0a6h]
call    sub_402780
add     esp, 4
cmp     ax, 1
jnz     short loc_4026ba
mov     eax, [esi+98h]
push    eax
push    1
call    ebp
add     esp, 8
test    eax, eax
jz      short loc_4026a7
push    0
push    eax
push    4
push    edi
call    sub_402280
add     esp, 10h
jmp     short loc_4026ba
push    eax
call    sub_45ba00
add     esp, 4
jmp     short loc_4026ba
mov     edi, [esp+24h+arg_0]
mov     esi, [esp+24h+arg_8]
push    esi
push    ebx
push    edi
call    sub_40fd60
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 40h
push    ebx
push    esi
mov     esi, [esp+48h+arg_0]
push    edi
xor     di, di
mov     ebx, [esi+38h]
mov     dword ptr [esi+7ch], 0
push    ebx
call    sub_4889f0
add     esp, 4
mov     [esi+34h], eax
cmp     eax, 20h
jbe     short loc_4027f9
push    40h
lea     eax, [esi+3ch]
lea     ecx, [esp+50h+var_40]
push    eax
push    ecx
mov     [esi+38h], ebx
call    sub_47f9f0
lea     ecx, [esp+58h+var_40]
add     esp, 0ch
push    ecx
call    sub_488ab0
add     esp, 4
mov     ecx, [esi+34h]
push    eax
push    ecx
call    ds:getprocaddress
mov     [esi+7ch], eax
test    eax, eax
jnz     short loc_4027f5
mov     di, 0ffffh
mov     eax, [esi+34h]
push    eax
call    ds:freelibrary
mov     ax, di
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     di, 1
mov     ax, di
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+34h]
test    eax, eax
jz      short loc_40282a
push    eax
call    ds:freelibrary
mov     dword ptr [esi+34h], 0
pop     esi
retn
push    esi
xor     eax, eax
push    edi
mov     esi, 1
mov     ecx, [esp+8+arg_4]
mov     ax, [ecx+0a4h]
cmp     eax, 7000h
jz      short loc_402852
xor     esi, esi
pop     edi
mov     eax, esi
pop     esi
retn
or      ds:byte_4a61d4, 1
cmp     word ptr [ecx+0ah], 2
mov     edi, [esp+8+arg_0]
jnz     short loc_402889
mov     eax, [ecx+1ch]
mov     edx, [ecx+18h]
add     ecx, 10h
push    eax
push    edx
mov     eax, [ecx+4]
mov     dx, [edi+1ch]
push    eax
mov     ecx, [ecx]
push    ecx
push    edx
call    sub_474400
mov     [edi+1ch], ax
add     esp, 14h
jmp     short loc_4028ac
mov     eax, [ecx+1ch]
mov     edx, [ecx+18h]
add     ecx, 10h
push    eax
push    edx
mov     eax, [ecx+4]
mov     dx, [edi+1eh]
push    eax
mov     ecx, [ecx]
push    ecx
push    edx
call    sub_474400
mov     [edi+1eh], ax
add     esp, 14h
mov     eax, [esp+8+arg_8]
pop     edi
mov     dword ptr [eax], 0
mov     eax, esi
pop     esi
retn
sub     esp, 10h
push    esi
call    sub_41aa50
test    eax, eax
jnz     short loc_4028da
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
lea     ecx, [esp+14h+var_10]
lea     edx, [esp+14h+var_c]
lea     esi, [esp+14h+var_8]
push    ecx
lea     ecx, [esp+18h+var_4]
push    edx
push    0
push    0
push    0
push    0
push    esi
push    ecx
mov     esi, [esp+34h+arg_0]
mov     edx, [esi]
push    edx
push    eax
call    sub_41e3d0
mov     ecx, [esp+3ch+var_4]
mov     edx, [esp+3ch+var_8]
add     esp, 28h
mov     [esi+4], ecx
mov     [esi+8], edx
mov     ecx, [esp+14h+var_c]
mov     edx, [esp+14h+var_10]
mov     [esi+0ch], ecx
mov     [esi+10h], edx
pop     esi
add     esp, 10h
retn
sub     esp, 18h
push    ebx
push    esi
push    edi
call    sub_41aa50
mov     ebx, eax
test    ebx, ebx
jnz     short loc_40294f
xor     ebx, ebx
mov     bx, ds:word_4a8518
shl     ebx, 10h
mov     bl, 1
mov     esi, [esp+24h+arg_0]
mov     edi, [esi+4]
test    edi, edi
jnz     short loc_402968
mov     ebx, 14h
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
add     esp, 18h
retn
push    edi
call    ds:globallock
lea     ecx, [esp+24h+var_18]
push    1
push    ecx
push    eax
push    ebx
call    sub_41a990
add     esp, 10h
mov     ebx, eax
push    edi
call    ds:globalunlock
test    ebx, ebx
jnz     short loc_4029a0
lea     eax, [esp+24h+var_18]
add     esi, 14h
push    eax
push    esi
call    sub_402c30
add     esp, 8
mov     ebx, eax
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_4028c0
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_4029e3
push    esi
call    sub_402930
add     esp, 4
mov     edi, eax
mov     eax, [esi+4]
push    eax
call    sub_45ba00
mov     dword ptr [esi+4], 0
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 20h
lea     eax, [esp+20h+var_1c]
push    esi
lea     ecx, [esp+24h+var_20]
push    eax
mov     esi, [esp+28h+arg_0]
push    ecx
push    esi
call    sub_402bc0
add     esp, 0ch
test    eax, eax
jnz     short loc_402a51
lea     eax, [esp+24h+var_18]
mov     ecx, [esp+24h+var_1c]
push    eax
and     ecx, 0ffffh
mov     eax, [esp+28h+var_20]
mov     edx, [esp+28h+var_1c+2]
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
or      eax, ecx
push    eax
push    edx
mov     eax, [esp+30h+var_20]
add     esi, 10h
push    eax
call    sub_4427d0
lea     ecx, [esp+34h+var_18]
add     esp, 10h
push    ecx
push    esi
call    sub_402c30
add     esp, 8
pop     esi
add     esp, 20h
retn
sub     esp, 20h
lea     eax, [esp+20h+var_20]
push    esi
lea     ecx, [esp+24h+var_1c]
push    edi
mov     edi, [esp+28h+arg_0]
push    eax
push    ecx
push    edi
call    sub_402bc0
add     esp, 0ch
mov     esi, eax
cmp     esi, 16h
jnz     short loc_402aae
test    byte ptr [edi+0ch], 1
jz      short loc_402aae
cmp     dword ptr [edi+4], 0
jnz     short loc_402aae
cmp     dword ptr [edi+8], 0
jnz     short loc_402aae
mov     eax, [edi]
xor     esi, esi
push    eax
call    sub_442b00
mov     [esp+2ch+var_20+2], ax
add     esp, 4
mov     [esp+28h+var_20], 0
test    esi, esi
jnz     loc_402bb5
lea     eax, [esp+28h+var_20]
push    eax
call    sub_41bf10
add     esp, 4
test    eax, eax
jnz     short loc_402acc
mov     esi, 0ch
test    esi, esi
jnz     loc_402bb5
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_402af2
cmp     eax, 1
jz      short loc_402b2a
cmp     eax, 2
jz      short loc_402b62
mov     esi, 14h
pop     edi
mov     eax, esi
pop     esi
add     esp, 20h
retn
mov     eax, [edi+14h]
mov     ecx, dword ptr [esp+28h+var_20]
push    eax
and     ecx, 0ffffh
mov     eax, [esp+2ch+var_1c]
mov     edx, dword ptr [esp+2ch+var_20+2]
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
or      eax, ecx
push    eax
push    edx
mov     eax, [esp+34h+var_1c]
push    eax
call    sub_442960
add     esp, 10h
mov     eax, esi
pop     edi
pop     esi
add     esp, 20h
retn
mov     eax, [edi+14h]
mov     ecx, dword ptr [esp+28h+var_20]
push    eax
and     ecx, 0ffffh
mov     eax, [esp+2ch+var_1c]
mov     edx, dword ptr [esp+2ch+var_20+2]
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
or      eax, ecx
push    eax
push    edx
mov     eax, [esp+34h+var_1c]
push    eax
call    sub_442a20
add     esp, 10h
mov     eax, esi
pop     edi
pop     esi
add     esp, 20h
retn
lea     eax, [esp+28h+var_18]
push    eax
call    sub_41afc0
lea     edx, [esp+2ch+var_18]
mov     eax, [edi+18h]
mov     [esp+2ch+var_c], eax
mov     ecx, [edi+14h]
mov     eax, [esp+2ch+var_1c]
mov     [esp+2ch+var_10], ecx
shr     eax, 10h
mov     ecx, dword ptr [esp+2ch+var_20]
add     esp, 4
and     ecx, 0ffffh
movzx   eax, ax
mov     [esp+28h+var_18], 2
shl     eax, 10h
push    edx
or      eax, ecx
mov     edx, dword ptr [esp+2ch+var_20+2]
push    eax
push    edx
mov     eax, [esp+34h+var_1c]
push    eax
call    sub_4428a0
add     esp, 10h
mov     eax, esi
pop     edi
pop     esi
add     esp, 20h
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
call    sub_41aa50
mov     esi, [esp+0ch+arg_4]
cmp     eax, ebx
mov     [esi], eax
jnz     short loc_402be3
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
mov     [esi], eax
mov     edi, [esp+0ch+arg_0]
cmp     dword ptr [edi+4], 0
jnz     short loc_402c06
mov     eax, [edi+8]
test    eax, eax
jz      short loc_402c06
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jnz     short loc_402c06
mov     ebx, 17h
test    ebx, ebx
jnz     short loc_402c27
mov     eax, [esp+0ch+arg_8]
mov     ecx, [edi+8]
push    eax
mov     edx, [edi+4]
push    ecx
mov     eax, [edi]
push    edx
mov     ecx, [esi]
push    eax
push    ecx
call    sub_41bcc0
add     esp, 14h
mov     ebx, eax
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     ebx, [esp+10h+arg_4]
cmp     dword ptr [esi], 3
jnz     short loc_402c6c
movsx   eax, word ptr [ebx]
test    eax, eax
jz      short loc_402c56
cmp     eax, 1
jz      short loc_402c5e
cmp     eax, 2
jz      short loc_402c66
jmp     short loc_402c6c
mov     dword ptr [esi], 0
jmp     short loc_402c6c
mov     dword ptr [esi], 1
jmp     short loc_402c6c
mov     dword ptr [esi], 2
mov     eax, [esi]
test    eax, eax
jz      short loc_402c83
cmp     eax, 1
jz      short loc_402cc8
cmp     eax, 2
jz      short loc_402cdb
mov     edi, 14h
jmp     short loc_402cf2
push    0
push    ebx
call    sub_41aa60
add     esp, 8
push    ebx
call    sub_442d80
add     esp, 4
mov     ecx, [ebx+0ah]
push    ecx
push    eax
call    sub_45b910
add     esp, 8
mov     ebp, eax
push    ebx
call    sub_442e00
add     esp, 4
push    ebx
call    sub_41b030
add     esp, 4
test    ebp, ebp
jz      short loc_402cc1
mov     [esi+4], ebp
jmp     short loc_402cf2
mov     edi, 0bh
jmp     short loc_402cf2
push    1
push    ebx
call    sub_41aa60
add     esp, 8
mov     eax, [ebx+8]
mov     [esi+4], eax
jmp     short loc_402cf2
push    2
push    ebx
call    sub_41aa60
add     esp, 8
mov     eax, [ebx+0ch]
mov     [esi+8], eax
mov     ecx, [ebx+8]
mov     [esi+4], ecx
test    edi, edi
jz      short loc_402d07
mov     dword ptr [esi+4], 0
add     esi, 4
mov     dword ptr [esi+4], 0
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 0a4h
push    ebx
push    esi
mov     esi, [esp+0ach+hwnd]
push    edi
push    ebp
push    0fffffff0h
push    esi
call    ds:getwindowlonga
mov     ebx, eax
mov     edi, [esp+0b4h+msg]
and     eax, 800h
cmp     eax, 1
mov     eax, 2
adc     eax, 0ffffffffh
cmp     edi, 0ah
mov     [esp+0b4h+x], eax
ja      short loc_402d60
jz      loc_402ef6
cmp     edi, 1
jz      loc_402e01
jmp     loc_4034cc
cmp     edi, 14h
ja      short loc_402d82
jz      loc_403181
cmp     edi, 0fh
jz      loc_402f0d
cmp     edi, 10h
jz      loc_403170
jmp     loc_4034cc
cmp     edi, 200h
ja      short loc_402dad
jz      loc_403209
cmp     edi, 0f0h
jz      loc_4031a1
cmp     edi, 0f1h
jz      loc_4031bc
jmp     loc_4034cc
cmp     edi, 4c8h
ja      short loc_402de4
jz      loc_4031bc
cmp     edi, 201h
jz      loc_4032ad
cmp     edi, 202h
jz      loc_403386
cmp     edi, 203h
jz      loc_4032ad
jmp     loc_4034cc
cmp     edi, 4cah
jz      loc_4031a1
cmp     edi, 4cch
jz      loc_403458
jmp     loc_4034cc
mov     ebp, ebx
and     bp, 0ffh
push    ebp
push    0
push    esi
call    ds:setwindowword
push    ebp
push    2
push    esi
call    ds:setwindowword
push    0
push    4
push    esi
call    ds:setwindowword
test    bp, bp
jz      loc_4034cc
push    0
call    ds:getdc
mov     [esp+0b4h+hdc], eax
test    eax, eax
jz      loc_4034cc
add     bp, 320h
lea     eax, [esp+0b4h+color]
lea     ecx, [esp+0b4h+h]
push    eax
mov     eax, [esp+0b8h+hdc]
push    ecx
push    ebp
push    eax
call    sub_480500
add     esp, 10h
mov     eax, ebx
and     eax, 2000h
jnz     short loc_402eb8
test    bh, 40h
jnz     short loc_402eb8
lea     eax, [esp+0b4h+rect]
push    eax
push    esi
call    ds:getclientrect
mov     eax, [esp+0b4h+rect.right]
sub     eax, [esp+0b4h+rect.left]
sub     eax, [esp+0b4h+h]
cdq
sub     eax, edx
sar     eax, 1
mov     ebx, eax
mov     eax, [esp+0b4h+rect.bottom]
sub     eax, [esp+0b4h+rect.top]
sub     eax, [esp+0b4h+color]
cdq
sub     eax, edx
sar     eax, 1
movzx   ecx, ax
movzx   eax, bx
shl     ecx, 10h
or      ecx, eax
push    ecx
push    6
push    esi
call    ds:setwindowlonga
jmp     short loc_402ee4
mov     ecx, 0
push    6
cmp     eax, 1
mov     eax, [esp+0b8h+color]
adc     ecx, 0ffffffffh
and     ecx, [esp+0b8h+x]
add     eax, ecx
push    eax
mov     eax, [esp+0bch+h]
add     eax, ecx
push    eax
push    0
push    0
push    0
push    esi
call    ds:setwindowpos
mov     eax, [esp+0b4h+hdc]
push    eax
push    0
call    ds:releasedc
jmp     loc_4034cc
push    0
push    0
push    esi
call    ds:invalidaterect
push    esi
call    ds:updatewindow
jmp     loc_4034cc
push    4
mov     ebp, ds:getwindowword
push    esi
call    ebp
and     ax, 8000h
mov     word ptr [esp+0b4h+h], ax
cmp     ax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, 2
push    eax
push    esi
call    ebp
mov     bp, ax
lea     ecx, [esp+0b4h+rect]
push    ecx
push    esi
call    ds:getclientrect
mov     eax, ebx
and     eax, 2000h
mov     [esp+0b4h+color], eax
cmp     eax, 1
sbb     eax, eax
inc     eax
push    eax
push    0
push    esi
call    ds:invalidaterect
lea     ecx, [esp+0b4h+paint]
push    ecx
push    esi
call    ds:beginpaint
mov     edi, eax
xor     ecx, ecx
xor     eax, eax
test    bp, bp
jz      short loc_402f82
test    bh, 40h
jz      short loc_402f82
push    eax
push    eax
push    eax
jmp     loc_4030d1
cmp     [esp+0b4h+color], 0
jz      short loc_402fe0
cmp     word ptr [esp+0b4h+h], 0
jz      short loc_402f98
mov     eax, 1
mov     ecx, eax
add     bp, 320h
push    3
push    ecx
push    eax
push    ebp
push    edi
call    sub_480140
add     esp, 14h
cmp     word ptr [esp+0b4h+h], 0
jnz     loc_4030e0
mov     eax, [esp+0b4h+x]
add     [esp+0b4h+rect.top], eax
push    eax
add     [esp+0b8h+rect.left], eax
push    2
call    ds:getstockobject
lea     ecx, [esp+0b8h+rect]
push    eax
push    ecx
push    edi
call    sub_403690
add     esp, 10h
jmp     loc_4030e0
mov     eax, [esp+0b4h+x]
lea     ecx, [esp+0b4h+rect]
push    eax
mov     eax, [esp+0b8h+h]
and     eax, 0ffffh
push    eax
push    ecx
push    edi
call    sub_403890
add     esp, 10h
push    6
push    esi
call    ds:getwindowlonga
movzx   ecx, ax
shr     eax, 10h
mov     [esp+0b4h+x], ecx
movzx   ecx, ax
cmp     word ptr [esp+0b4h+h], 0
mov     [esp+0b4h+hdc], ecx
jz      short loc_403036
lea     eax, [esp+0b4h+rect]
push    1
inc     [esp+0b8h+x]
push    1
inc     [esp+0bch+hdc]
push    eax
call    ds:offsetrect
lea     eax, [esp+0b4h+string]
push    40h
push    eax
push    esi
call    ds:getwindowtexta
test    eax, eax
jle     short loc_4030c0
push    1
push    edi
call    ds:setbkmode
push    12h
call    ds:getsyscolor
push    eax
push    edi
call    ds:settextcolor
mov     [esp+0b4h+color], eax
push    0
push    0
push    31h
push    esi
call    ds:getparent
push    eax
call    ds:sendmessagea
push    eax
push    edi
call    ds:selectobject
cmp     bp, 1
mov     [esp+0b4h+h], eax
sbb     eax, eax
lea     ecx, [esp+0b4h+rect]
and     eax, 0fffffffch
lea     edx, [esp+0b4h+string]
add     eax, 8
or      eax, 21h
push    eax
push    ecx
push    0ffffffffh
push    edx
push    edi
call    ds:drawtexta
mov     ecx, [esp+0b4h+color]
push    ecx
push    edi
call    ds:settextcolor
mov     ecx, [esp+0b4h+h]
push    ecx
push    edi
call    ds:selectobject
test    bp, bp
jz      short loc_4030e0
mov     eax, [esp+0b4h+hdc]
push    0
mov     ecx, [esp+0b8h+x]
push    eax
push    ecx
add     bp, 320h
push    ebp
push    edi
call    sub_480270
add     esp, 14h
test    ebx, 800000h
jz      short loc_403109
lea     eax, [esp+0b4h+rect]
push    eax
push    esi
call    ds:getclientrect
push    4
call    ds:getstockobject
push    eax
lea     eax, [esp+0b8h+rect]
push    eax
push    edi
call    ds:framerect
push    esi
call    ds:iswindowenabled
test    eax, eax
jnz     short loc_40315a
push    5555aaaah
call    sub_403500
add     esp, 4
push    eax
push    edi
call    ds:selectobject
mov     ebx, eax
push    0af0229h
push    0
push    0
push    0
push    80h
push    80h
push    0
push    0
push    edi
call    ds:bitblt
push    ebx
push    edi
call    ds:selectobject
push    eax
call    ds:deleteobject
lea     eax, [esp+0b4h+paint]
push    eax
push    esi
call    ds:endpaint
mov     eax, 1
jmp     loc_4034e4
push    esi
call    ds:destroywindow
mov     eax, 1
jmp     loc_4034e4
test    bh, 40h
jnz     short loc_403197
mov     eax, [esp+0b4h+wparam]
push    eax
push    esi
call    sub_403550
add     esp, 8
mov     eax, 1
jmp     loc_4034e4
push    4
mov     ebp, ds:getwindowword
push    esi
call    ebp
and     ax, 8000h
cmp     ax, 1
sbb     eax, eax
inc     eax
jmp     loc_4034e4
push    4
mov     ebp, ds:getwindowword
push    esi
call    ebp
cmp     [esp+0b4h+wparam], 0
mov     bx, ax
jnz     short loc_4031db
and     bx, 7fffh
jmp     short loc_4031de
or      bh, 80h
push    4
push    esi
call    ebp
cmp     ax, bx
jz      short loc_4031f3
push    0
push    0
push    esi
call    ds:invalidaterect
push    ebx
push    4
push    esi
call    ds:setwindowword
push    esi
call    ds:updatewindow
jmp     loc_4034cc
call    ds:getcapture
cmp     eax, esi
jnz     loc_4034cc
test    bh, 10h
jnz     loc_4034cc
movsx   eax, word ptr [esp+0b4h+lparam]
lea     edx, [esp+0b4h+rect]
mov     [esp+0b4h+color], eax
mov     eax, [esp+0b4h+lparam]
push    edx
shr     eax, 10h
push    esi
movsx   ecx, ax
mov     [esp+0bch+var_94], ecx
call    ds:getclientrect
push    4
mov     ebp, ds:getwindowword
push    esi
call    ebp
mov     bx, ax
mov     ecx, [esp+0b4h+var_94]
mov     eax, [esp+0b4h+color]
push    ecx
lea     edx, [esp+0b8h+rect]
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jz      short loc_40327e
test    bh, 80h
jnz     loc_4034cc
or      bh, 80h
jmp     short loc_40328c
test    bh, 80h
jz      loc_4034cc
and     bx, 7fffh
push    ebx
push    4
push    esi
call    ds:setwindowword
push    0
push    0
push    esi
call    ds:invalidaterect
push    esi
call    ds:updatewindow
jmp     loc_4034cc
test    bh, 40h
jz      short loc_4032bc
mov     eax, 1
jmp     loc_4034e4
test    bh, 10h
jnz     short loc_4032d7
test    bh, 80h
jnz     short loc_4032d7
push    esi
call    sub_490870
add     esp, 4
mov     ebp, ds:getwindowword
jmp     short loc_403356
mov     edi, esi
mov     ebp, ds:getnextdlggroupitem
push    1
push    edi
push    esi
call    ds:getparent
push    eax
call    ebp
mov     edi, eax
test    edi, edi
jz      short loc_403308
cmp     edi, esi
jz      short loc_403308
push    0
push    0
push    4c8h
push    edi
call    ds:sendmessagea
jmp     short loc_4032df
and     ebx, 8000h
jnz     short loc_40332f
push    esi
push    esi
call    ds:getdlgctrlid
movzx   eax, ax
push    eax
push    111h
push    esi
call    ds:getparent
push    eax
call    ds:postmessagea
push    4
mov     ebp, ds:getwindowword
push    esi
call    ebp
test    ah, 80h
jz      short loc_403349
mov     eax, 1
jmp     loc_4034e4
test    ebx, ebx
jz      short loc_403356
push    esi
call    sub_490870
add     esp, 4
push    4
push    esi
call    ebp
or      ah, 80h
push    eax
push    4
push    esi
call    ds:setwindowword
push    0
push    0
push    esi
call    ds:invalidaterect
push    esi
mov     ebp, ds:updatewindow
call    ebp
mov     eax, 1
jmp     loc_4034e4
test    bh, 40h
jz      short loc_403395
mov     eax, 1
jmp     loc_4034e4
test    bh, 10h
jnz     loc_403447
movsx   eax, word ptr [esp+0b4h+lparam]
mov     [esp+0b4h+color], eax
push    4
mov     eax, [esp+0b8h+lparam]
push    esi
shr     eax, 10h
mov     ebp, ds:getwindowword
movsx   ecx, ax
mov     [esp+0bch+var_94], ecx
call    ebp
and     ax, 7fffh
push    eax
push    4
push    esi
call    ds:setwindowword
push    4
push    esi
call    ebp
and     ax, 7fffh
push    eax
push    4
push    esi
call    ds:setwindowword
lea     ecx, [esp+0b4h+rect]
push    ecx
push    esi
call    ds:getclientrect
mov     edx, [esp+0b4h+color]
mov     ecx, [esp+0b4h+var_94]
lea     eax, [esp+0b4h+rect]
push    ecx
push    edx
push    eax
call    ds:ptinrect
test    eax, eax
jz      short loc_403447
call    ds:getcapture
cmp     eax, esi
jnz     short loc_403447
push    esi
push    esi
call    ds:getdlgctrlid
movzx   eax, ax
push    eax
push    111h
push    esi
call    ds:getparent
push    eax
call    ds:postmessagea
push    0
push    0
push    esi
call    ds:invalidaterect
push    esi
call    ds:updatewindow
call    ds:getcapture
cmp     eax, esi
jnz     short loc_4034cc
call    sub_490890
jmp     short loc_4034cc
mov     ecx, [esp+0b4h+lparam]
mov     eax, [esp+0b4h+lparam]
shr     eax, 10h
and     ecx, 0ffffh
movzx   eax, ax
test    ecx, ecx
jl      short loc_403497
test    eax, eax
jnz     short loc_403493
mov     eax, [esp+0b4h+wparam]
cmp     ecx, 1
push    eax
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, 2
push    eax
jmp     short loc_4034b3
test    ecx, ecx
jge     short loc_40349e
and     bx, 0ffh
jmp     short loc_4034a6
mov     bx, word ptr [esp+0b4h+wparam]
push    ebx
push    0
push    esi
call    ds:setwindowword
push    ebx
push    2
push    esi
call    ds:setwindowword
push    0
push    0
push    esi
call    ds:invalidaterect
push    esi
call    ds:updatewindow
mov     eax, [esp+0b4h+lparam]
mov     ecx, [esp+0b4h+wparam]
push    eax
push    ecx
push    edi
push    esi
call    ds:defwindowproca
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn    10h
mov     eax, [esp+arg_0]
sub     esp, 10h
lea     ecx, [esp+10h+bits]
push    esi
push    edi
push    ecx
push    1
mov     [ecx], eax
push    1
mov     [ecx+4], eax
push    8
mov     [ecx+8], eax
push    8
mov     [ecx+0ch], eax
call    ds:createbitmap
push    eax
mov     esi, eax
call    ds:createpatternbrush
mov     edi, eax
push    esi
call    ds:deleteobject
push    edi
call    ds:unrealizeobject
mov     eax, edi
pop     edi
pop     esi
add     esp, 10h
retn
sub     esp, 10h
push    ebx
push    esi
mov     ebx, [esp+18h+arg_4]
push    edi
push    ebp
xor     edi, edi
cmp     ebx, edi
jnz     short loc_403575
mov     edi, 1
mov     esi, [esp+20h+hwnd]
push    esi
call    ds:getdc
mov     ebx, eax
jmp     short loc_403579
mov     esi, [esp+20h+hwnd]
lea     eax, [esp+20h+rect]
mov     ebp, ds:getclientrect
push    eax
push    esi
call    ebp
push    0fffffff6h
push    esi
call    ds:getparent
push    eax
call    ds:getclasslonga
test    eax, eax
jz      short loc_4035af
cmp     eax, 20h
jb      short loc_4035af
push    eax
mov     ebp, ds:fillrect
lea     eax, [esp+24h+rect]
push    eax
push    ebx
jmp     short loc_4035e5
cmp     eax, 1
jbe     short loc_4035bc
cmp     eax, 20h
jnb     short loc_4035bc
dec     eax
jmp     short loc_4035c1
mov     eax, 5
push    eax
call    ds:getsyscolor
push    eax
call    ds:createsolidbrush
push    eax
mov     ebp, eax
lea     eax, [esp+24h+rect]
push    eax
push    ebx
call    ds:fillrect
push    ebp
mov     ebp, ds:deleteobject
call    ebp
test    edi, edi
jz      short loc_4035f3
push    ebx
push    esi
call    ds:releasedc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 28h
lea     eax, [esp+28h+wndclass]
push    esi
mov     esi, [esp+2ch+hinstance]
push    edi
push    eax
push    offset abmpbutt
push    esi
call    ds:getclassinfoa
test    eax, eax
jz      short loc_403629
mov     eax, 1
pop     edi
pop     esi
add     esp, 28h
retn
xor     edi, edi
mov     [esp+30h+wndclass.hinstance], esi
mov     [esp+30h+wndclass.cbclsextra], edi
mov     [esp+30h+wndclass.hicon], edi
mov     [esp+30h+wndclass.style], 8
mov     [esp+30h+wndclass.lpfnwndproc], offset sub_402d10
mov     [esp+30h+wndclass.cbwndextra], 10h
push    7f00h
push    edi
call    ds:loadcursora
mov     [esp+30h+wndclass.hcursor], eax
mov     [esp+30h+wndclass.hbrbackground], edi
lea     eax, [esp+30h+wndclass]
mov     [esp+30h+wndclass.lpszmenuname], edi
mov     [esp+30h+wndclass.lpszclassname], offset abmpbutt
push    eax
call    ds:registerclassa
cmp     ax, 1
pop     edi
sbb     eax, eax
pop     esi
inc     eax
add     esp, 28h
retn
mov     eax, [esp+h]
sub     esp, 14h
push    ebx
push    esi
mov     esi, [esp+1ch+hdc]
push    edi
push    ebp
push    eax
push    esi
call    ds:selectobject
mov     ecx, [esp+24h+arg_4]
mov     [esp+24h+var_4], eax
mov     eax, [ecx]
mov     edi, [ecx+0ch]
inc     eax
dec     edi
mov     [esp+24h+var_8], eax
mov     eax, [ecx+8]
dec     eax
xor     ebx, ebx
mov     [esp+24h+var_14], eax
mov     eax, [ecx+4]
inc     eax
cmp     [esp+24h+arg_c], ebx
mov     [esp+24h+var_10], eax
jle     short loc_403704
mov     eax, [esp+24h+var_14]
inc     eax
mov     [esp+24h+x], eax
mov     ebp, edi
push    0
sub     ebp, ebx
mov     eax, [esp+28h+var_8]
push    ebp
add     eax, ebx
push    eax
inc     ebx
push    esi
call    ds:movetoex
mov     ecx, [esp+24h+x]
push    ebp
push    ecx
push    esi
call    ds:lineto
cmp     ebx, [esp+24h+arg_c]
jl      short loc_4036db
xor     ebx, ebx
cmp     [esp+24h+arg_c], ebx
jle     short loc_403734
inc     edi
mov     ebp, [esp+24h+var_14]
push    0
sub     ebp, ebx
mov     eax, [esp+28h+var_10]
add     eax, ebx
inc     ebx
push    eax
push    ebp
push    esi
call    ds:movetoex
push    edi
push    ebp
push    esi
call    ds:lineto
cmp     ebx, [esp+24h+arg_c]
jl      short loc_40370d
mov     eax, [esp+24h+var_4]
push    eax
push    esi
call    ds:selectobject
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, [esp+h]
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [esp+14h+hdc]
push    edi
push    ebp
push    eax
push    esi
call    ds:selectobject
mov     ecx, [esp+1ch+arg_4]
mov     [esp+1ch+var_4], eax
mov     edi, [ecx]
mov     eax, [ecx+0ch]
dec     eax
mov     ebx, [ecx+4]
xor     ebp, ebp
mov     [esp+1ch+var_c], eax
mov     eax, [ecx+8]
dec     eax
cmp     [esp+1ch+arg_c], ebp
mov     [esp+1ch+var_8], eax
jle     short loc_4037b3
push    0
lea     eax, [ebx+ebp]
push    eax
push    edi
push    esi
call    ds:movetoex
lea     eax, [ebx+ebp]
push    eax
mov     eax, [esp+20h+var_8]
sub     eax, ebp
inc     ebp
push    eax
push    esi
call    ds:lineto
cmp     ebp, [esp+1ch+arg_c]
jl      short loc_40378c
xor     ebp, ebp
cmp     [esp+1ch+arg_c], ebp
jle     short loc_4037e2
push    0
lea     eax, [edi+ebp]
push    ebx
push    eax
push    esi
call    ds:movetoex
mov     eax, [esp+1ch+var_c]
lea     ecx, [edi+ebp]
sub     eax, ebp
inc     ebp
push    eax
push    ecx
push    esi
call    ds:lineto
cmp     ebp, [esp+1ch+arg_c]
jl      short loc_4037bb
mov     eax, [esp+1ch+var_4]
push    eax
push    esi
call    ds:selectobject
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
push    10h
call    ds:getsyscolor
push    eax
push    1
push    0
call    ds:createpen
mov     edi, eax
push    6
call    ds:getstockobject
mov     ebx, [esp+14h+arg_8]
mov     ecx, 1
mov     [esp+14h+h], eax
test    ebx, ebx
jnz     short loc_403839
mov     ecx, [esp+14h+arg_c]
mov     eax, [esp+14h+h]
test    ebx, ebx
jnz     short loc_403843
mov     eax, edi
mov     ebp, [esp+14h+arg_4]
push    ecx
mov     esi, [esp+18h+hdc]
push    eax
push    ebp
push    esi
call    sub_403690
add     esp, 10h
mov     ecx, 1
test    ebx, ebx
jnz     short loc_403864
mov     ecx, [esp+14h+arg_c]
mov     eax, edi
test    ebx, ebx
jnz     short loc_40386e
mov     eax, [esp+14h+h]
push    ecx
push    eax
push    ebp
push    esi
call    sub_403750
add     esp, 10h
push    edi
call    ds:deleteobject
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
push    edi
push    0fh
call    ds:getsyscolor
push    eax
call    ds:createsolidbrush
mov     edi, eax
push    4
call    ds:getstockobject
mov     ebx, [esp+0ch+lprc]
push    eax
mov     esi, [esp+10h+hdc]
push    ebx
push    esi
call    ds:framerect
push    0ffffffffh
push    0ffffffffh
push    ebx
call    ds:inflaterect
push    edi
push    ebx
push    esi
call    ds:fillrect
mov     eax, [esp+0ch+arg_c]
mov     ecx, [esp+0ch+arg_8]
push    eax
push    ecx
push    ebx
push    esi
call    sub_403800
add     esp, 10h
push    edi
call    ds:deleteobject
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_0]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     eax, [esp+arg_4]
mov     [ecx], eax
mov     [ecx+4], eax
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
mov     eax, [esi+4]
push    eax
call    sub_45b7b0
add     esp, 4
test    eax, eax
jz      short loc_40393c
mov     eax, [esi+4]
inc     eax
push    eax
mov     [esi+4], eax
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_403928
push    7
mov     eax, [esi+4]
push    eax
call    sub_47fe60
add     esp, 8
test    ax, ax
jnz     short loc_40395f
lea     edi, [esi+8]
pop     ebp
mov     word ptr [edi], 0
mov     ax, [edi]
pop     edi
pop     esi
pop     ebx
retn
cmp     ax, 28h
jnz     short loc_403978
lea     edi, [esi+8]
pop     ebp
mov     word ptr [edi], 1
inc     dword ptr [esi+4]
mov     ax, [edi]
pop     edi
pop     esi
pop     ebx
retn
cmp     ax, 29h
jnz     short loc_403991
lea     edi, [esi+8]
pop     ebp
mov     word ptr [edi], 2
inc     dword ptr [esi+4]
mov     ax, [edi]
pop     edi
pop     esi
pop     ebx
retn
cmp     ax, 26h
jnz     short loc_4039aa
lea     edi, [esi+8]
pop     ebp
mov     word ptr [edi], 3
inc     dword ptr [esi+4]
mov     ax, [edi]
pop     edi
pop     esi
pop     ebx
retn
cmp     ax, 7ch
jnz     short loc_4039c3
lea     edi, [esi+8]
pop     ebp
mov     word ptr [edi], 4
inc     dword ptr [esi+4]
mov     ax, [edi]
pop     edi
pop     esi
pop     ebx
retn
cmp     ax, 21h
lea     edi, [esi+8]
jnz     short loc_4039f8
mov     ax, [edi]
cmp     ax, 6
jz      short loc_4039eb
cmp     ax, 2
jz      short loc_4039eb
mov     word ptr [edi], 5
pop     ebp
mov     ax, [edi]
inc     dword ptr [esi+4]
pop     edi
pop     esi
pop     ebx
retn
mov     word ptr [edi], 3
pop     ebp
mov     ax, [edi]
pop     edi
pop     esi
pop     ebx
retn
cmp     word ptr [edi], 6
jnz     short loc_403a0b
mov     word ptr [edi], 3
pop     ebp
mov     ax, [edi]
pop     edi
pop     esi
pop     ebx
retn
mov     word ptr [esi+0eh], 0
mov     word ptr [esi+0ch], 0
mov     ebx, [esi+4]
mov     eax, ebx
sub     eax, [esi]
mov     [esi+0ah], ax
cmp     byte ptr [ebx], 0
jz      loc_403b15
push    7
mov     eax, [esi+4]
push    eax
call    sub_47fe60
add     esp, 8
cmp     ax, 5ch
jnz     short loc_403a55
mov     eax, [esi+4]
inc     eax
mov     [esi+4], eax
jz      loc_403b09
inc     eax
mov     [esi+4], eax
jmp     loc_403b09
push    7
mov     eax, [esi+4]
push    eax
call    sub_47fe60
add     esp, 8
cmp     ax, 22h
jnz     short loc_403ad9
inc     word ptr [esi+0ah]
xor     ebp, ebp
mov     word ptr [esi+0eh], 1
mov     ebx, [esi+4]
inc     ebx
mov     [esi+4], ebx
cmp     byte ptr [ebx], 0
jz      short loc_403acc
push    7
mov     eax, [esi+4]
push    eax
call    sub_47fe60
add     esp, 8
cmp     ax, 5ch
jnz     short loc_403a9a
inc     dword ptr [esi+4]
jmp     short loc_403aae
push    7
mov     eax, [esi+4]
push    eax
call    sub_47fe60
add     esp, 8
cmp     ax, 22h
jz      short loc_403ac4
mov     eax, [esi+4]
cmp     byte ptr [eax], 0
jz      short loc_403aba
inc     eax
mov     [esi+4], eax
mov     eax, [esi+4]
cmp     byte ptr [eax], 0
jnz     short loc_403a81
jmp     short loc_403acc
mov     ebp, 1
inc     dword ptr [esi+4]
test    ebp, ebp
jz      short loc_403b22
mov     eax, [esi+4]
sub     eax, ebx
dec     ax
jmp     short loc_403b05
push    7
mov     eax, [esi+4]
push    eax
call    sub_47fe60
add     esp, 8
movzx   eax, ax
push    eax
push    offset str
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_403b15
mov     eax, [esi+4]
inc     eax
mov     [esi+4], eax
sub     eax, ebx
mov     [esi+0ch], ax
mov     eax, [esi+4]
cmp     byte ptr [eax], 0
jnz     loc_403a2b
mov     word ptr [edi], 6
pop     ebp
mov     ax, [edi]
pop     edi
pop     esi
pop     ebx
retn
mov     ax, 0ffffh
pop     ebp
mov     word ptr [edi], 0ffffh
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     ax, [eax+8]
retn
mov     eax, [esp+arg_0]
mov     ax, [eax+0ah]
retn
mov     eax, [esp+arg_0]
mov     ax, [eax+0ch]
retn
mov     eax, [esp+arg_0]
mov     ax, [eax+0eh]
retn
sub     esp, 1ch
xor     ecx, ecx
lea     eax, [esp+1ch+var_1c]
lea     edx, [esp+1ch+var_10]
mov     [eax], ecx
mov     ds:dword_4a6020, ecx
mov     ds:dword_4a6034, 1
mov     [eax+4], ecx
mov     [eax+8], cx
mov     eax, [esp+1ch+arg_4]
mov     [esp+1ch+var_14], cx
mov     [esp+1ch+var_1c], edx
mov     ecx, [esp+1ch+arg_0]
lea     edx, [esp+1ch+var_10]
mov     [esp+1ch+var_18], eax
push    ecx
push    edx
call    sub_4038f0
mov     ecx, [esp+24h+var_c]
add     esp, 8
push    ecx
call    sub_45b7b0
add     esp, 4
test    eax, eax
jz      short loc_403bdf
inc     [esp+1ch+var_c]
mov     eax, [esp+1ch+var_c]
push    eax
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_403bca
lea     eax, [esp+1ch+var_10]
push    eax
call    sub_403910
lea     eax, [esp+20h+var_1c]
add     esp, 4
push    eax
call    sub_403c50
add     esp, 4
test    eax, eax
jz      short loc_403c42
lea     eax, [esp+1ch+var_10]
push    eax
call    sub_403b30
add     esp, 4
cmp     ax, 2
jnz     short loc_403c18
mov     ax, 6
add     esp, 1ch
retn
lea     eax, [esp+1ch+var_10]
push    eax
call    sub_403910
add     esp, 4
test    ax, ax
jnz     short loc_403c3a
mov     eax, [esp+1ch+var_18]
mov     word ptr [eax], 0
add     esp, 1ch
xor     ax, ax
retn
mov     ax, 4
add     esp, 1ch
retn
mov     ax, [esp+1ch+var_14]
add     esp, 1ch
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_403cf0
add     esp, 4
test    eax, eax
jz      short loc_403cd9
mov     eax, [esi]
push    eax
call    sub_403b30
add     esp, 4
cmp     ax, 3
jz      short loc_403c7a
cmp     ax, 4
jnz     short loc_403cbf
mov     ecx, [esi+4]
mov     [ecx], ax
mov     ecx, [esi]
mov     edi, [esi+4]
push    ecx
add     edi, 2
mov     [esi+4], edi
lea     eax, [edi+2]
mov     [esi+4], eax
call    sub_403910
add     esp, 4
push    esi
call    sub_403cf0
add     esp, 4
test    eax, eax
jz      short loc_403cc7
mov     eax, [esi]
push    eax
call    sub_403b30
add     esp, 4
mov     ecx, [esi+4]
sub     ecx, edi
sar     ecx, 1
mov     [edi], cx
jmp     short loc_403c6e
mov     eax, 1
pop     edi
pop     esi
retn
cmp     word ptr [esi+8], 0
jnz     short loc_403cd4
mov     word ptr [esi+8], 3
xor     eax, eax
pop     edi
pop     esi
retn
cmp     word ptr [esi+8], 0
jnz     short loc_403ce6
mov     word ptr [esi+8], 5
xor     eax, eax
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
xor     edi, edi
mov     eax, [esi]
push    eax
call    sub_403b30
add     esp, 4
cmp     ax, 5
jnz     short loc_403d35
mov     edi, 1
mov     eax, [esi+4]
mov     word ptr [eax], 7
add     dword ptr [esi+4], 2
cmp     ds:dword_4a6020, edi
sbb     eax, eax
neg     eax
mov     ds:dword_4a6020, eax
mov     ecx, [esi]
push    ecx
call    sub_403910
add     esp, 4
cmp     ax, 6
jnz     loc_403dc4
mov     eax, [esi+4]
mov     word ptr [eax], 6
mov     ebx, [esi+4]
mov     ecx, [esi]
add     ebx, 2
push    ecx
mov     [esi+4], ebx
call    sub_403b40
mov     [ebx], ax
add     esp, 4
mov     ebx, [esi+4]
mov     eax, [esi]
add     ebx, 2
push    eax
mov     [esi+4], ebx
call    sub_403b50
mov     [ebx], ax
add     esp, 4
mov     ebx, [esi+4]
mov     eax, [esi]
add     ebx, 2
push    eax
mov     [esi+4], ebx
call    sub_403b60
mov     [ebx], ax
add     esp, 4
add     dword ptr [esi+4], 2
mov     eax, [esi]
push    eax
call    sub_403910
add     esp, 4
test    edi, edi
jz      short loc_403dbb
mov     eax, [esi+4]
mov     word ptr [eax], 5
add     dword ptr [esi+4], 2
cmp     ds:dword_4a6020, 1
sbb     eax, eax
neg     eax
mov     ds:dword_4a6020, eax
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
cmp     ax, 1
jnz     short loc_403d9b
mov     eax, [esi]
push    eax
call    sub_403910
add     esp, 4
push    esi
call    sub_403c50
add     esp, 4
test    eax, eax
jnz     short loc_403df5
cmp     word ptr [esi+8], 0
jnz     short loc_403def
mov     word ptr [esi+8], 2
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esi]
push    eax
call    sub_403b30
add     esp, 4
cmp     ax, 2
jz      short loc_403d90
cmp     word ptr [esi+8], 0
jnz     short loc_403e13
mov     word ptr [esi+8], 1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_48e830
mov     ecx, [esp+8+src]
add     esp, 4
inc     eax
push    ecx
push    eax
push    esi
call    sub_48e980
add     esp, 0ch
cmp     eax, 1
sbb     eax, eax
pop     esi
inc     eax
retn
sub     esp, 10h
mov     [esp+10h+var_8], 0
push    ebx
push    esi
mov     ebx, [esp+18h+arg_18]
push    edi
mov     esi, [esp+1ch+arg_4]
push    ebp
mov     ax, [esi]
cmp     ax, 1
sbb     edi, edi
inc     edi
test    ax, ax
jz      loc_4040ae
mov     eax, esi
add     esi, 2
movsx   eax, word ptr [eax]
sub     eax, 3
cmp     eax, 4
ja      def_403e8e
jmp     ds:jpt_403e8e[eax*4]
mov     bp, [esi]
add     esi, 2
movsx   eax, bp
dec     bp
push    2
add     eax, eax
push    eax
call    sub_45b8f0
mov     [esp+28h+hmem], eax
add     esp, 8
movsx   ebp, bp
push    eax
call    ds:globallock
mov     [esp+20h+var_c], eax
lea     eax, ds:0[ebp*2]
mov     ecx, [esp+20h+var_c]
push    eax
push    esi
add     ebp, ebp
push    ecx
call    _memcpy
mov     ecx, [esp+2ch+var_c]
mov     eax, [esp+2ch+arg_14]
mov     edx, [esp+2ch+arg_c]
add     esp, 0ch
mov     word ptr [ebp+ecx+0], 0
mov     ecx, [esp+20h+arg_10]
push    ebx
push    eax
push    ecx
mov     eax, [esp+2ch+arg_8]
push    edx
mov     ecx, [esp+30h+var_c]
push    eax
mov     edx, [esp+34h+arg_0]
push    ecx
push    edx
call    sub_403e50
add     esp, 1ch
test    eax, eax
jz      short loc_403f16
test    edi, edi
mov     edi, 1
jnz     short loc_403f18
xor     edi, edi
mov     eax, [esp+20h+hmem]
add     esi, ebp
push    eax
call    ds:globalunlock
mov     eax, [esp+20h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
test    [esp+20h+var_8], edi
jz      def_403e8e
test    ebx, ebx
jz      def_403e8e
lea     eax, [esp+20h+src]
mov     ecx, [esp+20h+arg_14]
push    eax
push    ecx
call    sub_403e20
mov     [esp+28h+var_8], 0
add     esp, 8
jmp     def_403e8e
mov     bp, [esi]
add     esi, 2
movsx   eax, bp
dec     bp
push    2
add     eax, eax
push    eax
call    sub_45b8f0
mov     [esp+28h+hmem], eax
add     esp, 8
movsx   ebp, bp
push    eax
call    ds:globallock
mov     [esp+20h+var_c], eax
lea     eax, ds:0[ebp*2]
mov     ecx, [esp+20h+var_c]
push    eax
push    esi
add     ebp, ebp
push    ecx
call    _memcpy
mov     ecx, [esp+2ch+var_c]
mov     eax, [esp+2ch+arg_14]
mov     edx, [esp+2ch+arg_c]
add     esp, 0ch
mov     word ptr [ebp+ecx+0], 0
mov     ecx, [esp+20h+arg_10]
push    ebx
push    eax
push    ecx
mov     eax, [esp+2ch+arg_8]
push    edx
mov     ecx, [esp+30h+var_c]
push    eax
mov     edx, [esp+34h+arg_0]
push    ecx
push    edx
call    sub_403e50
add     esp, 1ch
test    eax, eax
jnz     short loc_403fe4
test    edi, edi
mov     edi, 0
jz      short loc_403fe9
mov     edi, 1
mov     eax, [esp+20h+hmem]
add     esi, ebp
push    eax
call    ds:globalunlock
mov     eax, [esp+20h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
cmp     [esp+20h+var_8], 0
jz      def_403e8e
test    ebx, ebx
jz      def_403e8e
lea     eax, [esp+20h+src]
mov     ecx, [esp+20h+arg_14]
push    eax
push    ecx
call    sub_403e20
mov     [esp+28h+var_8], 0
add     esp, 8
jmp     short def_403e8e
cmp     ebx, 1
sbb     ebx, ebx
neg     ebx
cmp     edi, 1
sbb     edi, edi
neg     edi
jmp     short def_403e8e
mov     bp, [esi]
push    1
mov     ax, [esi+2]
add     esi, 2
mov     word ptr [esp+24h+var_c], ax
add     esi, 2
mov     ax, [esi]
add     esi, 2
test    ax, ax
mov     ecx, [esp+24h+var_c]
mov     eax, [esp+24h+arg_10]
mov     edx, [esp+24h+arg_0]
push    eax
push    ecx
push    ebp
push    edx
jz      short loc_404077
call    [esp+34h+arg_c]
jmp     short loc_40407b
call    [esp+34h+arg_8]
add     esp, 14h
mov     edi, eax
test    edi, edi
jz      short def_403e8e
mov     [esp+20h+var_8], 1
mov     ax, word ptr [esp+20h+var_c]
mov     [esp+20h+src], bp
mov     [esp+20h+var_2], ax
jmp     short def_403e8e
cmp     ebx, 1
sbb     ebx, ebx
neg     ebx
cmp     word ptr [esi], 0
jnz     loc_403e7a
test    ebx, ebx
jz      short loc_4040cb
cmp     [esp+20h+var_8], 0
jz      short loc_4040cb
lea     eax, [esp+20h+src]
mov     ecx, [esp+20h+arg_14]
push    eax
push    ecx
call    sub_403e20
add     esp, 8
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_14]
push    1
mov     ecx, [esp+4+arg_10]
push    eax
mov     edx, [esp+8+arg_c]
push    ecx
mov     eax, [esp+0ch+arg_8]
push    edx
mov     ecx, [esp+10h+arg_4]
push    eax
mov     edx, [esp+14h+arg_0]
push    ecx
push    edx
call    sub_403e50
add     esp, 1ch
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
mov     cx, [ebx]
push    ebp
cmp     cx, 1
sbb     eax, eax
inc     eax
test    cx, cx
jz      short loc_4041b6
mov     esi, [esp+10h+arg_0]
mov     edi, [esp+10h+arg_8]
mov     ebp, [esp+10h+arg_10]
mov     ecx, ebx
add     ebx, 2
movsx   ecx, word ptr [ecx]
sub     ecx, 3
cmp     ecx, 3
ja      short def_404153
jmp     ds:jpt_404153[ecx*4]
test    eax, eax
jnz     short loc_404166
movsx   ecx, word ptr [ebx]
lea     ebx, [ebx+ecx*2]
jmp     short def_404153
add     ebx, 2
jmp     short def_404153
cmp     eax, 1
jnz     short loc_404178
movsx   ecx, word ptr [ebx]
lea     ebx, [ebx+ecx*2]
jmp     short def_404153
add     ebx, 2
jmp     short def_404153
cmp     eax, 1
sbb     eax, eax
neg     eax
jmp     short def_404153
mov     ax, [ebx]
push    0
mov     cx, [ebx+2]
push    ebp
mov     dx, [ebx+4]
add     ebx, 2
add     ebx, 2
push    ecx
add     ebx, 2
push    eax
test    dx, dx
push    esi
jz      short loc_4041ab
call    [esp+24h+arg_c]
jmp     short loc_4041ad
call    edi
add     esp, 14h
cmp     word ptr [ebx], 0
jnz     short loc_404143
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ax, [esp+arg_4]
sub     esp, 4
mov     cx, [esp+4+arg_0]
mov     word ptr [esp+4+var_4], ax
mov     word ptr [esp+4+var_4+2], cx
mov     eax, [esp+4+var_4]
add     esp, 4
retn
cmp     [esp+arg_0], 27h
mov     eax, 1
jl      short locret_4041ff
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_4041f0
mov     cx, word ptr [esp+4+arg_0+2]
add     esp, 4
test    eax, eax
mov     ax, word ptr [esp+arg_0]
jnz     short loc_404236
push    eax
push    ecx
call    sub_404290
add     esp, 4
push    eax
call    sub_445700
add     esp, 8
test    ax, ax
jnz     short loc_404236
xor     eax, eax
retn
mov     eax, 1
retn
push    42h
push    1777h
call    sub_45bd50
add     esp, 8
mov     ds:dword_4a6054, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, ds:dword_4a6054
test    eax, eax
jz      short locret_40427c
push    eax
call    sub_45bdb0
mov     ds:dword_4a6054, 0
add     esp, 4
retn
mov     eax, [esp+arg_0]
mov     ax, [eax+6]
retn
mov     dx, [esp+arg_0]
mov     ecx, dword_4ae1e0
movsx   eax, dx
shl     eax, 6
mov     eax, [eax+ecx+10h]
mov     ecx, [eax]
xor     eax, eax
mov     ax, [ecx+3eh]
movzx   ecx, dx
shl     ecx, 10h
or      eax, ecx
retn
mov     dx, [esp+arg_0]
mov     ecx, dword_4ae1e0
movsx   eax, dx
shl     eax, 6
mov     eax, [eax+ecx+10h]
mov     ecx, [eax]
xor     eax, eax
mov     ax, [ecx+42h]
movzx   ecx, dx
shl     ecx, 10h
or      eax, ecx
retn
push    esi
mov     ecx, dword_4ae1e0
mov     si, [esp+4+arg_0]
push    edi
movsx   eax, si
shl     eax, 6
mov     edx, [eax+ecx+10h]
mov     edi, [edx]
cmp     word ptr [edi+3eh], 0
jz      short loc_40432c
push    esi
call    sub_404290
add     esp, 4
push    eax
call    sub_470610
add     esp, 4
test    eax, eax
jnz     short loc_40432c
mov     word ptr [edi+3eh], 0
cmp     word ptr [edi+42h], 0
jz      short loc_40434f
push    esi
call    sub_4042c0
add     esp, 4
push    eax
call    sub_470610
add     esp, 4
test    eax, eax
jnz     short loc_40434f
mov     word ptr [edi+42h], 0
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
add     eax, eax
lea     ecx, [eax+eax*8]
mov     eax, [esp+arg_0]
add     eax, ecx
mov     dl, [esp+arg_8]
mov     cl, [eax+0ah]
and     cl, 0feh
mov     [eax+0ah], cl
or      cl, 2
mov     [eax+0ah], cl
mov     [eax+0bh], dl
retn
push    esi
push    edi
mov     di, [esp+8+arg_4]
push    0
mov     esi, [esp+0ch+arg_0]
push    0
push    0
push    edi
push    esi
call    sub_4067e0
add     esp, 14h
push    1
push    0
push    1
push    esi
call    sub_406380
add     esp, 10h
push    1
push    0
push    2
push    esi
call    sub_406380
add     esp, 10h
push    1
push    0
push    3
push    esi
call    sub_406380
add     esp, 10h
push    1
push    0
push    4
push    esi
call    sub_406380
add     esp, 10h
push    1
push    0
push    5
push    esi
call    sub_406380
add     esp, 10h
push    1
push    0
push    6
push    esi
call    sub_406380
add     esp, 10h
push    1
push    0
push    7
push    esi
call    sub_406380
add     esp, 10h
push    0
push    1
push    0
push    edi
push    esi
call    sub_4067e0
add     esp, 14h
push    1
push    1
push    1
push    esi
call    sub_406380
add     esp, 10h
push    1
push    1
push    2
push    esi
call    sub_406380
add     esp, 10h
push    1
push    1
push    3
push    esi
call    sub_406380
add     esp, 10h
push    1
push    1
push    4
push    esi
call    sub_406380
add     esp, 10h
push    1
push    1
push    5
push    esi
call    sub_406380
add     esp, 10h
push    1
push    1
push    6
push    esi
call    sub_406380
add     esp, 10h
push    1
push    1
push    7
push    esi
call    sub_406380
add     esp, 10h
push    0
push    2
push    0
push    edi
push    esi
call    sub_4067e0
add     esp, 14h
push    1
push    2
push    1
push    esi
call    sub_406380
add     esp, 10h
push    1
push    2
push    2
push    esi
call    sub_406380
add     esp, 10h
push    1
push    2
push    3
push    esi
call    sub_406380
add     esp, 10h
push    1
push    2
push    4
push    esi
call    sub_406380
add     esp, 10h
push    1
push    2
push    5
push    esi
call    sub_406380
add     esp, 10h
push    1
push    2
push    6
push    esi
call    sub_406380
add     esp, 10h
push    1
push    2
push    7
push    esi
call    sub_406380
add     esp, 10h
pop     edi
pop     esi
retn
movsx   ecx, [esp+arg_4]
push    esi
mov     eax, ecx
lea     edx, [ecx+ecx*8]
lea     ecx, [eax+edx*2]
lea     eax, [eax+ecx*4]
mov     ecx, ds:dword_4a6054
lea     esi, ds:0[eax*2]
mov     ax, [esp+4+arg_0]
mov     byte ptr [ecx+esi], 4
push    eax
mov     eax, ds:dword_4a6054
add     eax, esi
push    eax
call    sub_404390
add     esp, 8
mov     eax, ds:dword_4a6054
add     eax, esi
push    0
push    0
push    eax
call    sub_404360
add     esp, 0ch
mov     eax, ds:dword_4a6054
add     eax, esi
push    1
push    2
push    eax
call    sub_404360
mov     dx, [esp+10h+arg_14]
mov     eax, [esp+10h+arg_c]
add     esp, 0ch
mov     ecx, ds:dword_4a6054
mov     [ecx+esi+6], dx
mov     ecx, ds:dword_4a6054
mov     [ecx+esi+2], ax
mov     edx, [esp+4+arg_10]
mov     ecx, ds:dword_4a6054
mov     [ecx+esi+4], dx
pop     esi
retn
push    esi
push    edi
mov     di, [esp+8+arg_4]
push    1
mov     esi, [esp+0ch+arg_0]
push    1
push    0
push    edi
push    esi
call    sub_4067e0
mov     eax, [esp+1ch+arg_8]
add     esp, 14h
push    eax
push    0
push    esi
call    sub_4068f0
add     esp, 0ch
push    edi
call    sub_4868a0
add     esp, 4
push    eax
push    0
push    esi
call    sub_406910
add     esp, 0ch
pop     edi
pop     esi
retn
push    esi
xor     eax, eax
mov     esi, [esp+4+arg_0]
push    edi
mov     edi, esi
mov     ecx, 26h
rep stosd
stosw
mov     di, [esp+8+arg_8]
mov     byte ptr [esi], 74h
push    edi
push    esi
call    sub_404390
add     esp, 8
push    0
push    0
push    esi
call    sub_404360
add     esp, 0ch
push    1
push    2
push    esi
call    sub_404360
add     esp, 0ch
push    2
push    3
push    esi
call    sub_404360
add     esp, 0ch
push    3
push    4
push    esi
call    sub_404360
add     esp, 0ch
push    4
push    6
push    esi
call    sub_404360
add     esp, 0ch
push    5
push    7
push    esi
call    sub_404360
mov     ax, [esp+14h+arg_18]
mov     ecx, [esp+14h+arg_10]
mov     [esi+6], ax
mov     edx, [esp+14h+arg_14]
mov     [esi+2], cx
add     esp, 0ch
mov     [esi+4], dx
push    1
push    edi
push    esi
call    sub_4045a0
add     esp, 0ch
pop     edi
pop     esi
retn
push    ebx
xor     eax, eax
push    esi
mov     ecx, 26h
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
mov     edi, esi
rep stosd
stosw
mov     ebx, [esp+10h+arg_14]
mov     byte ptr [esi], 2
cmp     ebx, eax
jz      short loc_4046b3
mov     byte ptr [esi], 72h
mov     di, [esp+10h+arg_8]
mov     ebp, 1
push    edi
push    esi
call    sub_404390
add     esp, 8
push    0
push    0
push    esi
call    sub_404360
add     esp, 0ch
test    ebx, ebx
jz      short loc_4046ea
mov     ebp, 2
push    1
push    1
push    esi
call    sub_404360
add     esp, 0ch
push    ebp
mov     eax, ebp
inc     ebp
push    2
push    esi
call    sub_404360
add     esp, 0ch
mov     ecx, ebp
inc     ebp
push    ecx
push    3
push    esi
call    sub_404360
add     esp, 0ch
mov     ecx, ebp
inc     ebp
push    ecx
push    4
push    esi
call    sub_404360
add     esp, 0ch
test    ebx, ebx
jz      short loc_40472a
push    ebp
mov     eax, ebp
inc     ebp
push    5
push    esi
call    sub_404360
add     esp, 0ch
push    ebp
push    6
push    esi
inc     ebp
call    sub_404360
add     esp, 0ch
push    ebp
push    7
push    esi
call    sub_404360
add     esp, 0ch
push    1
push    0
push    0
push    edi
push    esi
call    sub_4067e0
mov     ax, [esp+24h+arg_c]
add     esp, 14h
mov     [esi+6], ax
test    ebx, ebx
jz      short loc_404783
mov     ax, [esp+10h+arg_18]
push    1
mov     cx, [esp+14h+arg_1c]
push    edi
mov     [esi+2], ax
push    esi
mov     [esi+4], cx
call    sub_4045a0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    0
push    edi
push    esi
call    sub_4045a0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     si, [esp+4+arg_0]
push    esi
call    sub_408280
add     esp, 4
cmp     ax, 6
jge     short loc_4047d0
push    esi
call    sub_408280
add     esp, 4
cmp     ax, 4
jge     short loc_4047d0
push    1
push    7ah
call    sub_45c150
add     esp, 8
pop     esi
retn
sub     esp, 100h
cmp     [esp+100h+arg_4], 0
push    esi
mov     si, [esp+104h+arg_0]
jnz     short loc_404802
push    esi
call    sub_4047a0
add     esp, 4
cmp     ds:word_4a8518, si
jnz     loc_404a41
lea     eax, [esp+104h+buffer]
push    2
push    470h
push    100h
push    eax
call    sub_47fe70
lea     eax, [esp+114h+buffer]
add     esp, 10h
push    0
push    0
push    0
mov     ecx, ds:dword_4a6054
push    eax
push    1
push    esi
push    0
push    ecx
call    sub_404690
lea     edx, [esp+124h+buffer]
add     esp, 20h
mov     ecx, ds:dword_4a6054
push    1
push    470h
push    100h
push    edx
or      byte ptr [ecx], 8
call    sub_47fe70
lea     ecx, [esp+114h+buffer]
add     esp, 10h
push    0
push    0
push    0
mov     eax, ds:dword_4a6054
push    ecx
add     eax, 9ah
push    2
push    esi
push    0
push    eax
call    sub_404690
lea     ecx, [esp+124h+buffer]
add     esp, 20h
push    3
push    470h
push    100h
push    ecx
call    sub_47fe70
lea     ecx, [esp+114h+buffer]
add     esp, 10h
push    0
push    0
push    0
mov     eax, ds:dword_4a6054
push    ecx
add     eax, 39ch
push    3
push    esi
push    0
push    eax
call    sub_404690
add     esp, 20h
mov     ecx, ds:dword_4a6054
push    4
lea     edx, [esp+108h+buffer]
push    470h
or      byte ptr [ecx+39ch], 8
push    100h
push    edx
call    sub_47fe70
lea     ecx, [esp+114h+buffer]
add     esp, 10h
mov     eax, ds:dword_4a6054
push    0e2h
push    0ch
add     eax, 1ceh
push    0ch
push    ecx
push    esi
push    0
push    eax
call    sub_4045f0
lea     ecx, [esp+120h+buffer]
add     esp, 1ch
push    5
push    470h
push    100h
push    ecx
call    sub_47fe70
lea     ecx, [esp+114h+buffer]
add     esp, 10h
mov     eax, ds:dword_4a6054
push    0e3h
push    0dh
add     eax, 134h
push    0dh
push    ecx
push    esi
push    0
push    eax
call    sub_4045f0
lea     ecx, [esp+120h+buffer]
add     esp, 1ch
push    6
push    470h
push    100h
push    ecx
call    sub_47fe70
lea     ecx, [esp+114h+buffer]
add     esp, 10h
push    0dh
push    0dh
push    1
mov     eax, ds:dword_4a6054
push    ecx
add     eax, 436h
push    4
push    esi
push    0
push    eax
call    sub_404690
add     esp, 20h
push    7
lea     ecx, [esp+108h+buffer]
push    470h
push    100h
push    ecx
call    sub_47fe70
lea     ecx, [esp+114h+buffer]
add     esp, 10h
mov     eax, ds:dword_4a6054
push    0e4h
push    0ch
add     eax, 302h
push    0ch
push    ecx
push    esi
push    0
push    eax
call    sub_4045f0
lea     ecx, [esp+120h+buffer]
add     esp, 1ch
push    8
push    470h
push    100h
push    ecx
call    sub_47fe70
lea     ecx, [esp+114h+buffer]
add     esp, 10h
mov     eax, ds:dword_4a6054
push    0e5h
push    0dh
add     eax, 268h
push    0dh
push    ecx
push    esi
push    0
push    eax
call    sub_4045f0
lea     ecx, [esp+120h+buffer]
add     esp, 1ch
push    9
push    470h
push    100h
push    ecx
call    sub_47fe70
lea     ecx, [esp+114h+buffer]
add     esp, 10h
push    0ch
push    0ch
push    1
mov     eax, ds:dword_4a6054
push    ecx
add     eax, 4d0h
push    5
push    esi
push    0
push    eax
call    sub_404690
add     esp, 20h
pop     esi
add     esp, 100h
retn
call    sub_404240
test    eax, eax
jnz     short loc_404a5c
xor     eax, eax
retn
call    sub_406eb0
mov     eax, 1
retn
jmp     sub_404260
call    sub_489320
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     ax, 6
retn
sub     esp, 4
push    ebx
push    esi
mov     si, [esp+0ch+arg_0]
push    edi
push    ebp
xor     edi, edi
movzx   ebx, si
shl     ebx, 10h
lea     eax, [esp+14h+var_2]
mov     bl, 1
push    eax
push    3bh
push    ebx
call    sub_461350
add     esp, 0ch
mov     ebp, eax
mov     eax, [eax]
push    eax
call    sub_404200
add     esp, 4
test    eax, eax
jnz     short loc_404ae5
mov     edi, 1
call    sub_404a80
mov     [ebp+0], ax
mov     cx, [ebp+0]
mov     eax, [esp+14h+arg_4]
mov     [eax], cx
push    ebp
mov     [eax+2], si
push    edi
push    3bh
push    ebx
call    sub_4613a0
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
movsx   ecx, [esp+arg_0]
mov     eax, ecx
lea     edx, [ecx+ecx*8]
lea     ecx, [eax+edx*2]
lea     edx, [eax+ecx*4]
mov     eax, ds:dword_4a6054
lea     eax, [eax+edx*2]
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    esi
push    edi
push    eax
call    sub_4041f0
mov     si, word ptr [esp+10h+arg_0+2]
add     esp, 4
mov     di, word ptr [esp+0ch+arg_0]
test    eax, eax
jz      short loc_404b63
mov     eax, [esp+0ch+arg_0]
push    eax
call    sub_404b10
add     esp, 4
pop     edi
pop     esi
add     esp, 4
retn
lea     eax, [esp+0ch+var_2]
push    eax
push    edi
push    esi
call    sub_404290
add     esp, 4
push    eax
call    sub_4459f0
add     esp, 0ch
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_0]
push    esi
push    edi
push    eax
call    sub_4041f0
mov     di, word ptr [esp+0ch+arg_0+2]
add     esp, 4
test    eax, eax
mov     ax, word ptr [esp+8+arg_0]
jnz     short loc_404bd7
mov     ecx, [esp+8+arg_4]
mov     esi, [esp+8+arg_8]
push    ecx
push    esi
push    eax
push    edi
call    sub_404290
add     esp, 4
push    eax
call    sub_445a40
add     esp, 10h
test    esi, esi
jz      short loc_404bd7
push    edi
call    sub_4042f0
add     esp, 4
pop     edi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_8]
push    2
mov     edi, [esp+0ch+arg_0]
push    esi
push    edi
call    sub_406660
add     esp, 0ch
test    eax, eax
jz      short loc_404c1c
mov     eax, [esp+8+arg_4]
push    esi
push    eax
push    edi
call    sub_4066c0
add     esp, 0ch
push    0
push    1
push    1
push    1
push    eax
push    0
call    sub_43dce0
add     esp, 18h
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
push    eax
call    sub_404b30
add     esp, 4
mov     esi, eax
mov     eax, [esp+4+arg_4]
push    2
push    eax
push    esi
call    sub_406500
add     esp, 0ch
push    eax
mov     ax, word ptr [esp+8+arg_0+2]
push    eax
push    esi
call    sub_404be0
mov     eax, [esp+10h+arg_0]
add     esp, 0ch
push    0
push    esi
push    eax
call    sub_404b90
add     esp, 0ch
pop     esi
retn
sub     esp, 84h
push    ebx
push    esi
push    edi
push    ebp
mov     di, word ptr [esp+94h+arg_8]
test    di, di
jz      short loc_404cf6
mov     esi, [esp+94h+lpstring]
push    esi
call    ds:lstrlena
mov     ebx, [esp+94h+hdc]
push    eax
push    esi
push    edi
mov     si, word ptr [esp+0a0h+arg_4]
push    esi
push    ebx
call    sub_4877c0
mov     ecx, [esp+0a8h+arg_10]
add     esp, 14h
push    edi
mov     [ecx], eax
push    esi
push    ebx
call    sub_487860
add     esp, 0ch
mov     ebp, eax
push    edi
push    esi
push    ebx
call    sub_487900
add     esp, 0ch
sub     ebp, eax
push    edi
push    esi
push    ebx
call    sub_4878b0
mov     ecx, [esp+0a0h+arg_10]
add     esp, 0ch
sub     ebp, eax
mov     [ecx+4], ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 84h
retn
lea     eax, [esp+94h+var_70]
push    eax
push    0dh
call    sub_449200
lea     eax, [esp+9ch+var_70]
mov     ebx, [esp+9ch+hdc]
lea     ecx, [esp+9ch+var_1c]
add     esp, 8
push    eax
push    ebx
push    ecx
call    sub_449700
lea     edi, [esp+0a0h+var_38]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+94h+var_38]
lea     edi, [esp+94h+var_54]
mov     ecx, 7
rep movsd
mov     esi, [esp+94h+lpstring]
push    esi
call    ds:lstrlena
push    eax
push    esi
push    ebx
call    sub_449d50
mov     ecx, [esp+0a0h+arg_10]
lea     edx, [esp+0a0h+var_1c]
add     esp, 0ch
mov     [ecx], eax
lea     eax, [esp+94h+var_54]
push    eax
push    ebx
push    edx
call    sub_449700
lea     ecx, [esp+0a0h+var_84]
lea     edx, [esp+0a0h+var_70]
add     esp, 0ch
push    ecx
push    edx
push    ebx
call    sub_449750
mov     eax, [esp+0a0h+var_84]
mov     ecx, [esp+0a0h+arg_10]
sub     eax, [esp+0a0h+var_78]
lea     edx, [esp+0a0h+var_70]
sub     eax, [esp+0a0h+var_80]
add     esp, 0ch
mov     [ecx+4], eax
push    edx
call    sub_4496d0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 84h
retn
mov     ecx, [esp+arg_c]
mov     edx, [esp+arg_10]
sub     esp, 10h
xor     eax, eax
mov     [esp+10h+rc.left], eax
mov     [esp+10h+rc.top], eax
lea     eax, [esp+10h+rc]
mov     [esp+10h+rc.right], ecx
lea     ecx, [esp+10h+arg_4]
push    eax
mov     [esp+14h+rc.bottom], edx
push    ecx
call    sub_473bf0
lea     edx, [esp+18h+rc]
mov     eax, [esp+18h+arg_0]
add     esp, 8
mov     ecx, [edx]
mov     [eax], ecx
mov     ecx, [edx+4]
mov     [eax+4], ecx
mov     ecx, [edx+8]
mov     edx, [edx+0ch]
mov     [eax+8], ecx
mov     [eax+0ch], edx
add     esp, 10h
retn
lea     ecx, [esp+arg_8]
sub     esp, 28h
lea     eax, [esp+28h+var_28]
push    eax
push    ecx
call    sub_473c30
mov     edx, [esp+30h+arg_0]
mov     ecx, [esp+30h+arg_4]
mov     eax, [esp+30h+var_28]
add     esp, 8
push    ecx
push    edx
mov     edx, [esp+30h+var_24]
lea     ecx, [esp+30h+var_10]
push    edx
push    eax
push    ecx
call    sub_404dc0
lea     edx, [esp+3ch+var_20]
add     esp, 14h
mov     ecx, [eax]
mov     [edx], ecx
mov     ecx, [eax+4]
mov     [edx+4], ecx
mov     ecx, [eax+8]
mov     eax, [eax+0ch]
mov     [edx+8], ecx
mov     ecx, edx
mov     [edx+0ch], eax
mov     edx, [esp+28h+arg_18]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
add     esp, 28h
retn
lea     ecx, [esp+arg_8]
sub     esp, 28h
lea     eax, [esp+28h+var_28]
push    eax
push    ecx
call    sub_473c30
mov     edx, [esp+30h+arg_0]
mov     ecx, [esp+30h+arg_4]
mov     eax, [esp+30h+var_28]
add     esp, 8
push    ecx
push    edx
mov     edx, [esp+30h+var_24]
lea     ecx, [esp+30h+var_10]
push    edx
push    eax
push    ecx
call    sub_404dc0
lea     edx, [esp+3ch+var_20]
add     esp, 14h
mov     ecx, [eax]
mov     [edx], ecx
mov     ecx, [eax+4]
mov     [edx+4], ecx
mov     ecx, [eax+8]
mov     eax, [eax+0ch]
mov     [edx+8], ecx
mov     ecx, [esp+28h+arg_18]
mov     [edx+0ch], eax
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+4]
mov     [ecx+4], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     eax, [esp+28h+arg_8]
mov     [ecx+0ch], edx
mov     edx, [esp+28h+arg_0]
mov     [ecx], eax
add     edx, eax
mov     [ecx+8], edx
add     esp, 28h
retn
lea     ecx, [esp+arg_8]
sub     esp, 28h
lea     eax, [esp+28h+var_28]
push    eax
push    ecx
call    sub_473c30
mov     edx, [esp+30h+arg_0]
mov     ecx, [esp+30h+arg_4]
mov     eax, [esp+30h+var_28]
add     esp, 8
push    ecx
push    edx
mov     edx, [esp+30h+var_24]
lea     ecx, [esp+30h+var_10]
push    edx
push    eax
push    ecx
call    sub_404dc0
lea     edx, [esp+3ch+var_20]
add     esp, 14h
mov     ecx, [eax]
mov     [edx], ecx
mov     ecx, [eax+4]
mov     [edx+4], ecx
mov     ecx, [eax+8]
mov     eax, [eax+0ch]
mov     [edx+8], ecx
mov     ecx, [esp+28h+arg_18]
mov     [edx+0ch], eax
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+4]
mov     [ecx+4], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     eax, [esp+28h+arg_10]
mov     [ecx+0ch], edx
mov     edx, eax
mov     [ecx+8], eax
sub     edx, [esp+28h+arg_0]
mov     [ecx], edx
add     esp, 28h
retn
mov     eax, dword ptr [esp+arg_4]
sub     esp, 28h
push    esi
push    edi
push    eax
call    sub_404b30
mov     si, [esp+3eh]
add     esp, 4
mov     cx, si
mov     edi, eax
test    si, si
jnz     short loc_404fb8
mov     cx, ds:word_4a8518
test    cx, cx
jz      short loc_405008
mov     eax, [esp+30h+arg_24]
lea     edx, [esp+30h+rc]
push    eax
push    edx
lea     eax, [esp+38h+var_28]
lea     edx, [esp+38h+var_10]
push    eax
push    edx
lea     eax, [esp+40h+var_24]
mov     edx, [esp+40h+arg_1c]
push    eax
push    edx
mov     eax, [esp+48h+arg_18]
mov     edx, [esp+48h+arg_14]
push    eax
push    edx
mov     eax, dword ptr [esp+50h+arg_10]
mov     edx, [esp+50h+arg_c]
push    eax
push    edx
mov     eax, [esp+58h+lpstring]
mov     dl, [esp+58h+arg_20]
push    eax
push    edx
push    edi
push    ecx
mov     ecx, [esp+68h+hdc]
push    ecx
call    sub_405ee0
add     esp, 3ch
mov     eax, dword ptr [esp+30h+arg_4]
push    0
push    edi
push    eax
call    sub_404b90
add     esp, 0ch
pop     edi
pop     esi
add     esp, 28h
retn
mov     edx, [esp+arg_0]
push    ebx
push    esi
xor     ebx, ebx
xor     si, si
push    edi
mov     ecx, [esp+0ch+arg_4]
movsx   eax, si
add     eax, eax
lea     eax, [eax+eax*8]
lea     edi, [eax+edx]
test    byte ptr [edi+0ah], 2
jz      short loc_40506b
movsx   eax, word ptr [edi+16h]
test    ebx, ebx
jz      short loc_40505d
cmp     [ecx], eax
jle     short loc_40504f
mov     [ecx], eax
movsx   eax, word ptr [edi+18h]
cmp     [ecx+4], eax
jle     short loc_40506b
mov     [ecx+4], eax
jmp     short loc_40506b
mov     [ecx], eax
movsx   ebx, word ptr [edi+18h]
mov     [ecx+4], ebx
mov     ebx, 1
test    byte ptr [edi+0ah], 20h
jz      short loc_40509b
movsx   eax, word ptr [edi+0eh]
test    ebx, ebx
jz      short loc_40508d
cmp     [ecx], eax
jle     short loc_40507f
mov     [ecx], eax
movsx   eax, word ptr [edi+10h]
cmp     [ecx+4], eax
jle     short loc_40509b
mov     [ecx+4], eax
jmp     short loc_40509b
mov     [ecx], eax
movsx   ebx, word ptr [edi+10h]
mov     [ecx+4], ebx
mov     ebx, 1
inc     si
cmp     si, 7
jle     short loc_405030
test    ebx, ebx
jnz     short loc_4050b8
pop     edi
mov     dword ptr [ecx], 0
mov     dword ptr [ecx+4], 0
pop     esi
pop     ebx
retn
mov     eax, [ecx]
pop     edi
neg     eax
pop     esi
mov     [ecx], eax
mov     eax, [ecx+4]
pop     ebx
neg     eax
mov     [ecx+4], eax
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+arg_0]
push    edi
mov     edi, [esp+2ch+arg_4]
push    ebp
lea     eax, ds:0[edi*2]
lea     edx, [eax+eax*8]
movzx   ax, byte ptr [edx+esi+0bh]
lea     ecx, [edx+esi]
mov     edx, [esp+30h+arg_8]
mov     [edx], ax
mov     ebx, [esp+30h+arg_c]
mov     al, [ecx+0ah]
and     al, 20h
cmp     al, 1
sbb     eax, eax
inc     eax
mov     ebp, [esp+30h+arg_10]
mov     [ebx], eax
mov     al, [ecx+0ah]
and     al, 2
cmp     al, 1
sbb     eax, eax
inc     eax
mov     edx, [esp+30h+arg_14]
mov     [ebp+0], eax
mov     al, [ecx+0ah]
and     al, 8
cmp     al, 1
sbb     eax, eax
inc     eax
mov     [edx], eax
mov     edx, [esp+30h+arg_18]
mov     ax, [ecx+1ah]
mov     [edx], ax
xor     eax, eax
mov     al, [ecx+0ch]
mov     ecx, [esp+30h+arg_20]
cmp     [esp+30h+arg_28], 0
mov     [ecx], eax
jz      loc_405202
push    0
push    edi
push    esi
call    sub_406500
mov     edx, [esp+3ch+arg_8]
add     esp, 0ch
add     eax, eax
push    1
push    edi
push    esi
lea     ecx, [eax+eax*8]
movzx   ax, byte ptr [ecx+esi+0bh]
mov     [edx], ax
call    sub_406500
add     esp, 0ch
add     eax, eax
lea     ecx, [eax+eax*8]
push    0
push    edi
push    esi
mov     al, [ecx+esi+0ah]
and     al, 20h
cmp     al, 1
sbb     eax, eax
inc     eax
mov     [ebx], eax
call    sub_406500
add     esp, 0ch
add     eax, eax
lea     ecx, [eax+eax*8]
push    2
push    edi
push    esi
mov     al, [ecx+esi+0ah]
and     al, 2
cmp     al, 1
sbb     eax, eax
inc     eax
mov     [ebp+0], eax
call    sub_406500
add     esp, 0ch
add     eax, eax
lea     ecx, [eax+eax*8]
mov     edx, [esp+30h+arg_14]
push    1
push    edi
mov     al, [ecx+esi+0ah]
push    esi
and     al, 8
cmp     al, 1
sbb     eax, eax
inc     eax
mov     [edx], eax
call    sub_406500
add     eax, eax
mov     edx, [esp+3ch+arg_18]
add     esp, 0ch
lea     ecx, [eax+eax*8]
mov     ax, [ecx+esi+1ah]
mov     [edx], ax
push    1
push    edi
push    esi
call    sub_406500
add     esp, 0ch
add     eax, eax
lea     ecx, [eax+eax*8]
xor     eax, eax
mov     al, [ecx+esi+0ch]
mov     ecx, [esp+30h+arg_20]
mov     [ecx], eax
cmp     dword ptr [ebx], 0
jz      short loc_40524c
lea     eax, [esp+30h+var_10]
push    edi
push    esi
push    eax
call    sub_406710
lea     edx, [esp+3ch+var_20]
add     esp, 0ch
mov     ecx, [eax]
mov     ebx, [eax+4]
mov     [edx], ecx
mov     ecx, [eax+8]
mov     eax, [eax+0ch]
mov     [edx+4], ebx
mov     [edx+8], ecx
mov     ecx, [esp+30h+arg_1c]
mov     [edx+0ch], eax
mov     eax, [edx]
mov     ebx, [edx+4]
mov     [ecx], eax
mov     eax, [edx+8]
mov     [ecx+4], ebx
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
jmp     short loc_40525d
mov     ecx, [esp+30h+arg_1c]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
cmp     dword ptr [ebp+0], 0
jz      short loc_405286
push    edi
push    esi
call    sub_406780
mov     [esp+38h+var_10], eax
add     esp, 8
mov     ecx, [esp+30h+var_10]
mov     eax, [esp+30h+arg_24]
pop     ebp
pop     edi
pop     esi
mov     [eax], ecx
pop     ebx
mov     [eax+4], edx
add     esp, 20h
retn
mov     eax, [esp+30h+arg_24]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
add     esp, 20h
retn
push    ebx
push    esi
mov     ecx, [esp+8+arg_8]
push    edi
mov     edi, [esp+0ch+lprc]
mov     ebx, [edi+8]
mov     eax, [edi+0ch]
sub     ebx, [edi]
sub     eax, [edi+4]
cmp     ecx, eax
jg      short loc_4052be
xor     esi, esi
jmp     short loc_4052c8
sub     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
mov     esi, eax
mov     ecx, [esp+0ch+arg_4]
mov     eax, 0
cmp     ebx, ecx
jge     short loc_4052df
mov     eax, ebx
sub     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
neg     esi
neg     eax
push    esi
push    eax
push    edi
call    ds:inflaterect
pop     edi
pop     esi
pop     ebx
retn
lea     ecx, [esp+arg_4]
sub     esp, 8
lea     eax, [esp+8+var_8]
push    eax
push    ecx
call    sub_473c30
mov     ecx, [esp+10h+lprc]
lea     edx, [esp+10h+var_8]
add     esp, 8
push    ecx
push    edx
call    sub_473bf0
add     esp, 10h
retn
mov     ecx, [esp+lprc]
mov     eax, [esp+arg_14]
mov     edx, [esp+arg_18]
mov     dword ptr [ecx], 0
mov     [ecx+8], eax
mov     [ecx+0ch], edx
mov     eax, [esp+arg_10]
mov     edx, [esp+arg_c]
mov     dword ptr [ecx+4], 0
push    eax
push    edx
mov     eax, [esp+8+arg_8]
mov     edx, dword ptr [esp+8+arg_4]
push    eax
push    edx
push    ecx
call    sub_4052f0
add     esp, 14h
retn
sub     esp, 20h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+30h+arg_28]
test    edi, edi
jz      short loc_4053a7
mov     bp, word ptr [esp+30h+arg_30]
lea     eax, [esp+30h+var_20]
mov     bx, word ptr [esp+30h+arg_2c]
push    eax
mov     ecx, [esp+34h+lpstring]
mov     esi, [esp+34h+hdc]
push    ecx
push    ebp
push    ebx
push    esi
call    sub_404c70
lea     eax, [esp+44h+var_18]
add     esp, 14h
push    eax
push    offset asc_4ad07c
push    ebp
push    ebx
push    esi
call    sub_404c70
add     esp, 14h
mov     bl, [esp+30h+arg_8]
test    bl, 42h
jnz     short loc_4053d5
mov     ebp, [esp+30h+arg_14]
mov     esi, [esp+30h+arg_18]
lea     edx, [esp+30h+arg_10]
lea     ecx, [esp+30h+rc]
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+0ch]
mov     [ecx+4], ebp
mov     [ecx+8], esi
mov     [ecx+0ch], eax
jmp     loc_405465
test    [esp+30h+arg_4], 1
jz      short loc_4053e6
mov     ecx, [esp+30h+arg_24]
mov     eax, [esp+30h+arg_20]
jmp     short loc_40542a
test    edi, edi
jz      short loc_405420
mov     eax, [esp+30h+var_14]
mov     ecx, [esp+30h+var_1c]
lea     eax, [eax+eax*2]
cdq
sub     eax, edx
sar     eax, 1
add     ecx, eax
cmp     ecx, 14h
jg      short loc_405407
mov     ecx, 14h
mov     eax, [esp+30h+var_18]
lea     eax, [eax+eax*2]
add     eax, eax
add     eax, [esp+30h+var_20]
cmp     eax, 20h
jg      short loc_40542a
mov     eax, 20h
jmp     short loc_40542a
mov     ecx, 14h
mov     eax, 20h
mov     edx, [esp+30h+arg_14]
push    ecx
mov     ecx, [esp+34h+arg_18]
push    eax
mov     eax, [esp+38h+arg_1c]
push    eax
push    ecx
mov     eax, dword ptr [esp+40h+arg_10]
push    edx
lea     ecx, [esp+44h+rc]
push    eax
push    ecx
call    sub_405320
add     esp, 1ch
cmp     [esp+30h+arg_c], 0
jz      short loc_405465
lea     eax, [esp+30h+rc]
push    4
push    4
mov     ebp, ds:inflaterect
push    eax
call    ebp
test    [esp+30h+arg_4], 20h
jz      loc_4054fa
mov     edx, [esp+30h+rc.top]
mov     ebx, [esp+30h+rc.right]
lea     ecx, [esp+30h+rc]
mov     ebp, [esp+30h+arg_4c]
mov     eax, [ecx]
mov     [ebp+0], eax
mov     eax, [ecx+0ch]
mov     [ebp+4], edx
mov     [ebp+8], ebx
mov     [ebp+0ch], eax
mov     eax, [ebp+0]
add     eax, [esp+30h+arg_20]
test    edi, edi
mov     [ebp+8], eax
jz      loc_405630
mov     ebx, [esp+30h+rc.right]
mov     eax, [esp+30h+var_1c]
sub     ebx, [esp+30h+arg_20]
push    eax
sub     ebx, [esp+34h+var_18]
mov     ecx, [esp+34h+rc.bottom]
sub     ebx, [esp+34h+rc.left]
mov     edx, [esp+34h+rc.right]
mov     eax, [esp+34h+rc.top]
push    ebx
mov     esi, [esp+38h+lprc]
push    ecx
mov     ecx, [esp+3ch+rc.left]
push    edx
push    eax
push    ecx
push    esi
call    sub_405320
mov     ecx, [esp+4ch+var_18]
mov     eax, [esp+4ch+arg_20]
add     ecx, [esp+4ch+rc.left]
add     esp, 1ch
add     eax, ecx
mov     [esi], eax
add     eax, ebx
mov     [esi+8], eax
jmp     loc_405637
test    [esp+30h+arg_4], 2
jz      short loc_40556c
mov     edx, [esp+30h+rc.top]
mov     ebx, [esp+30h+rc.right]
lea     ecx, [esp+30h+rc]
mov     ebp, [esp+30h+arg_4c]
test    edi, edi
mov     eax, [ecx]
mov     [ebp+0], eax
mov     eax, [ecx+0ch]
mov     [ebp+4], edx
mov     [ebp+8], ebx
mov     [ebp+0ch], eax
jz      loc_405630
mov     eax, [esp+30h+var_1c]
mov     ecx, [esp+30h+var_18]
push    eax
add     ecx, ecx
mov     eax, [esp+34h+rc.right]
sub     eax, ecx
mov     ecx, [esp+34h+rc.bottom]
sub     eax, [esp+34h+rc.left]
mov     edx, [esp+34h+rc.top]
push    eax
push    ecx
mov     eax, [esp+3ch+rc.right]
mov     ecx, [esp+3ch+rc.left]
mov     esi, [esp+3ch+lprc]
push    eax
push    edx
push    ecx
push    esi
call    sub_405320
add     esp, 1ch
jmp     loc_405637
mov     edx, [esp+30h+rc.left]
mov     ebp, [esp+30h+arg_4c]
mov     ecx, [esp+30h+rc.top]
mov     eax, [esp+30h+arg_20]
add     eax, edx
mov     [ebp+0], edx
mov     esi, [esp+30h+lprc]
mov     [ebp+4], ecx
mov     [ebp+8], eax
mov     eax, [esp+30h+arg_24]
add     eax, ecx
test    edi, edi
mov     [ebp+0ch], eax
jz      short loc_4055e6
mov     eax, [esi]
cmp     [esi+8], eax
jnz     short loc_4055ca
mov     eax, [esp+30h+var_1c]
mov     ecx, [esp+30h+var_20]
push    eax
mov     edx, [ebp+4]
push    ecx
mov     eax, [ebp+0ch]
push    eax
mov     ecx, [ebp+8]
push    ecx
mov     eax, [ebp+0]
push    edx
push    eax
push    esi
call    sub_405320
add     esp, 1ch
jmp     short loc_4055e6
push    ecx
push    edx
push    esi
call    ds:offsetrect
mov     eax, [esp+30h+var_1c]
mov     ecx, [esp+30h+var_20]
push    eax
push    ecx
push    esi
call    sub_4052a0
add     esp, 0ch
test    bl, 40h
jz      short loc_4055fe
mov     eax, [esp+30h+dy]
mov     ecx, [esp+30h+arg_38]
push    eax
push    ecx
push    ebp
call    ds:offsetrect
jmp     short loc_405637
mov     ecx, [esp+30h+arg_44]
mov     ebx, [esp+30h+arg_40]
add     ecx, [esp+30h+dy]
mov     eax, [esp+30h+arg_38]
push    ecx
add     eax, ebx
push    eax
push    ebp
call    ds:offsetrect
test    edi, edi
jz      loc_4056e4
mov     eax, [esp+30h+arg_44]
push    eax
push    ebx
push    esi
call    ds:offsetrect
jmp     short loc_405637
mov     esi, [esp+30h+lprc]
test    edi, edi
jz      loc_4056e4
mov     eax, [esp+30h+arg_48]
test    eax, eax
jz      short loc_405659
cmp     eax, 1
jz      short loc_40568a
cmp     eax, 2
jz      short loc_4056bb
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+30h+arg_54]
mov     ecx, [esi+0ch]
push    eax
mov     edx, [esi+4]
push    ecx
mov     eax, [esi+8]
push    eax
mov     ecx, [esi]
mov     eax, [esp+3ch+var_20]
push    edx
mov     edx, [esp+40h+var_1c]
push    ecx
push    edx
push    eax
call    sub_404e20
add     esp, 1ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+30h+arg_54]
mov     ecx, [esi+0ch]
push    eax
mov     edx, [esi+4]
push    ecx
mov     eax, [esi+8]
push    eax
mov     ecx, [esi]
mov     eax, [esp+3ch+var_20]
push    edx
mov     edx, [esp+40h+var_1c]
push    ecx
push    edx
push    eax
call    sub_404e90
add     esp, 1ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+30h+arg_54]
mov     ecx, [esi+0ch]
push    eax
mov     edx, [esi+4]
push    ecx
mov     eax, [esi+8]
push    eax
mov     ecx, [esi]
mov     eax, [esp+3ch+var_20]
push    edx
mov     edx, [esp+40h+var_1c]
push    ecx
push    edx
push    eax
call    sub_404f10
add     esp, 1ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ecx, [esp+arg_0]
push    esi
mov     si, [esp+4+arg_4]
push    edi
mov     edi, [esp+8+lprc]
movsx   edx, si
mov     dword ptr [edi], 0
movsx   eax, word ptr [ecx+4]
imul    eax, edx
inc     edx
mov     [edi+4], eax
movsx   eax, word ptr [ecx+2]
mov     [edi+8], eax
movsx   eax, word ptr [ecx+4]
imul    eax, edx
test    si, si
mov     [edi+0ch], eax
jle     short loc_405734
push    1
push    0
push    edi
call    ds:offsetrect
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 2ch
push    esi
push    eax
call    sub_404b30
add     esp, 4
mov     esi, eax
xor     ecx, ecx
mov     al, [esp+30h+arg_8]
and     al, 1
lea     edx, [esp+30h+var_28]
mov     cl, al
lea     eax, [esp+30h+var_18]
push    ecx
push    eax
lea     ecx, [esp+38h+var_10]
push    edx
lea     eax, [esp+3ch+var_2c+2]
push    ecx
lea     edx, [esp+40h+var_24]
push    eax
lea     ecx, [esp+44h+var_20]
push    edx
lea     eax, [esp+48h+var_1c]
push    ecx
lea     edx, [esp+4ch+var_2c]
push    eax
mov     ecx, [esp+50h+arg_4]
push    edx
push    ecx
push    esi
call    sub_4050d0
mov     ecx, [esp+5ch+lprc]
mov     edx, dword ptr [esp+5ch+var_2c]
add     esp, 2ch
push    ecx
push    edx
push    esi
call    sub_4056f0
mov     ecx, [esp+3ch+arg_10]
add     esp, 0ch
push    ecx
push    esi
call    sub_405020
mov     ecx, [esp+38h+arg_0]
add     esp, 8
push    0
push    esi
push    ecx
call    sub_404b90
add     esp, 0ch
pop     esi
add     esp, 2ch
retn
sub     esp, 3ch
push    ebx
push    esi
mov     esi, [esp+44h+arg_0]
push    edi
cmp     word ptr [esi+6], 0
push    ebp
jle     loc_4058f7
lea     eax, [esp+4ch+rc]
mov     ecx, dword ptr [esp+4ch+arg_20]
push    eax
push    ecx
push    esi
call    sub_4056f0
mov     ebp, [esp+58h+hdc]
add     esp, 0ch
push    ebp
call    sub_40ae90
mov     bl, [esp+50h+arg_18]
add     esp, 4
test    bl, 20h
jz      short loc_405873
lea     edi, [esp+4ch+hmem]
xor     eax, eax
mov     ecx, 0ah
rep stosd
stosw
mov     ecx, [esp+4ch+arg_24]
mov     eax, [ecx+14h]
mov     edx, [ecx+18h]
mov     ebx, [ecx+1ch]
mov     [esp+4ch+var_20], eax
mov     eax, [ecx+2ch]
mov     [esp+4ch+var_1c], edx
lea     ecx, [esp+4ch+hmem]
lea     edx, [esp+4ch+arg_8]
mov     [esp+4ch+var_18], ebx
push    ecx
mov     [esp+50h+var_8], eax
push    edx
lea     eax, [esp+54h+rc]
xor     ecx, ecx
mov     cx, [esi+6]
push    eax
mov     eax, [esp+58h+arg_1c]
and     eax, 0ffffh
shl     eax, 10h
or      eax, ecx
push    eax
push    ebp
call    sub_46ec90
add     esp, 14h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
mov     edi, [esp+4ch+arg_1c]
xor     eax, eax
mov     ax, [esi+6]
and     edi, 0ffffh
shl     edi, 10h
or      eax, edi
push    eax
call    sub_470640
mov     [esp+50h+hmem], eax
add     esp, 4
test    bl, 8
movsx   ecx, word ptr [esp+4ch+arg_1c]
mov     [esp+4ch+var_28], ecx
jz      short loc_4058c2
lea     eax, [esp+4ch+arg_8]
lea     ecx, [esp+4ch+rc]
mov     edx, [esp+4ch+hmem]
push    eax
mov     eax, [esp+50h+var_28]
push    ecx
push    eax
push    edx
push    ebp
call    sub_46ecf0
add     esp, 14h
jmp     short loc_4058e4
mov     ecx, [esp+4ch+arg_24]
lea     eax, [esp+4ch+arg_8]
lea     edx, [esp+4ch+rc]
push    ecx
mov     ebx, [esp+50h+hmem]
push    eax
mov     ecx, [esp+54h+var_28]
push    edx
push    ecx
push    ebx
push    ebp
call    sub_46ebc0
add     esp, 18h
push    0
xor     eax, eax
mov     ax, [esi+6]
or      eax, edi
push    eax
call    sub_470920
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
mov     ecx, [esp+arg_0]
push    ebx
push    esi
push    edi
mov     bl, [ecx]
test    bl, 2
jz      loc_4059bc
push    ecx
call    sub_404280
mov     cl, [esp+10h+arg_18]
add     esp, 4
and     cl, 10h
xor     edx, edx
mov     dl, cl
movsx   ecx, ax
dec     ecx
cmp     ecx, 4
ja      def_405933
jmp     ds:jpt_405933[ecx*4]
mov     eax, [esp+0ch+arg_14]
push    edx
mov     ecx, [esp+10h+arg_10]
push    eax
mov     edx, [esp+14h+arg_c]
push    ecx
mov     eax, [esp+18h+xdest]
push    edx
mov     ecx, [esp+1ch+arg_20]
push    eax
mov     edx, [esp+20h+hdc]
push    ecx
push    edx
call    sub_407150
add     esp, 1ch
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+0ch+arg_14]
push    edx
mov     ecx, [esp+10h+arg_10]
push    eax
mov     edx, [esp+14h+arg_c]
push    ecx
mov     eax, [esp+18h+xdest]
push    edx
mov     ecx, [esp+1ch+arg_20]
push    eax
mov     edx, [esp+20h+hdc]
push    ecx
push    edx
call    sub_406fa0
add     esp, 1ch
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+0ch+arg_10]
push    eax
mov     eax, [esp+10h+arg_14]
push    edx
mov     edx, [esp+14h+arg_c]
push    eax
mov     eax, [esp+18h+xdest]
push    ecx
mov     ecx, [esp+1ch+arg_20]
push    edx
mov     edx, [esp+20h+hdc]
push    eax
push    ecx
push    edx
call    sub_407190
add     esp, 20h
pop     edi
pop     esi
pop     ebx
retn
test    bl, 4
jz      short loc_405a24
test    bl, 20h
jz      short loc_4059e0
mov     eax, [esp+0ch+arg_14]
mov     esi, [esp+0ch+arg_c]
movsx   edx, word ptr [ecx+4]
sub     eax, edx
sub     eax, esi
cdq
sub     eax, edx
sar     eax, 1
add     esi, eax
jmp     short loc_4059e4
mov     esi, [esp+0ch+arg_c]
movsx   edi, word ptr [ecx+4]
and     bl, 40h
cmp     bl, 1
sbb     eax, eax
movsx   edx, word ptr [ecx+2]
and     ax, 3
push    eax
push    edi
movsx   eax, [esp+14h+arg_24]
imul    eax, edi
push    edx
push    eax
mov     cx, [ecx+6]
push    0
mov     eax, [esp+20h+hdc]
push    edi
push    edx
push    esi
mov     edx, [esp+2ch+xdest]
push    edx
push    ecx
push    eax
call    sub_4803e0
add     esp, 2ch
pop     edi
pop     esi
pop     ebx
retn
test    bl, 1
jz      short def_405933
mov     eax, [esp+0ch+arg_28]
mov     edx, dword ptr [esp+0ch+arg_24]
mov     ebx, [esp+0ch+arg_1c]
push    eax
mov     eax, dword ptr [esp+10h+arg_18]
push    edx
mov     edx, [esp+14h+arg_14]
push    ebx
mov     ebx, [esp+18h+arg_10]
push    eax
mov     eax, [esp+1ch+arg_c]
push    edx
mov     edx, [esp+20h+xdest]
push    ebx
mov     ebx, [esp+24h+hdc]
push    eax
push    edx
push    ebx
push    ecx
call    sub_4057d0
add     esp, 28h
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
xor     esi, esi
call    sub_469a70
cmp     eax, 8
jnz     short loc_405a9e
mov     eax, [esp+8+hdc]
push    eax
call    ds:getsystempaletteuse
cmp     eax, 2
jz      short loc_405abe
push    20a0520h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_405ac3
mov     esi, 1
test    esi, esi
mov     esi, [esp+8+arg_4]
jz      short loc_405b1e
test    esi, esi
jz      short loc_405ad5
mov     dword ptr [esi], 0ffffffh
mov     esi, [esp+8+arg_8]
test    esi, esi
jz      short loc_405ae3
mov     dword ptr [esi], 0
mov     esi, [esp+8+arg_c]
test    esi, esi
jz      short loc_405af1
mov     dword ptr [esi], 0c0c0c0h
mov     esi, [esp+8+arg_10]
test    esi, esi
jz      short loc_405aff
mov     dword ptr [esi], 0ffffffh
mov     esi, [esp+8+arg_14]
test    esi, esi
jz      short loc_405b0d
mov     dword ptr [esi], 808080h
mov     esi, [esp+8+arg_18]
test    esi, esi
jz      short loc_405b7c
pop     edi
mov     dword ptr [esi], 0
pop     esi
retn
test    esi, esi
jz      short loc_405b30
push    5
mov     edi, ds:getsyscolor
call    edi
mov     [esi], eax
jmp     short loc_405b36
mov     edi, ds:getsyscolor
mov     esi, [esp+8+arg_8]
test    esi, esi
jz      short loc_405b44
push    6
call    edi
mov     [esi], eax
mov     esi, [esp+8+arg_c]
test    esi, esi
jz      short loc_405b52
push    0fh
call    edi
mov     [esi], eax
mov     esi, [esp+8+arg_10]
test    esi, esi
jz      short loc_405b60
push    14h
call    edi
mov     [esi], eax
mov     esi, [esp+8+arg_14]
test    esi, esi
jz      short loc_405b6e
push    10h
call    edi
mov     [esi], eax
mov     esi, [esp+8+arg_18]
test    esi, esi
jz      short loc_405b7c
push    12h
call    edi
mov     [esi], eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 84h
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_404280
add     esp, 4
cmp     ax, 3
jz      short loc_405bb1
cmp     ax, 4
jz      short loc_405bb1
mov     [esp+94h+var_84], 0
cmp     ax, 5
jnz     short loc_405bb9
mov     [esp+94h+var_84], 1
mov     eax, [esp+94h+arg_20]
cmp     eax, 2
jz      short loc_405bd2
mov     [esp+94h+var_1c], 0
cmp     eax, 6
jnz     short loc_405bda
mov     [esp+94h+var_1c], 1
cmp     eax, 3
jz      short loc_405be9
mov     ebp, 0
cmp     eax, 7
jnz     short loc_405bee
mov     ebp, 1
call    sub_469a70
mov     ebx, [esp+94h+hdc]
push    1
push    ebx
call    ds:setbkmode
cmp     [esp+94h+var_1c], 0
jz      short loc_405c28
mov     eax, [esp+94h+arg_0]
test    byte ptr [eax], 8
jz      short loc_405c28
lea     eax, [esp+94h+rc]
push    1
push    1
push    eax
call    ds:offsetrect
mov     si, [esp+94h+arg_1c]
mov     edi, 0
test    si, si
jz      short loc_405c4d
mov     eax, [esp+94h+arg_28]
push    esi
push    eax
call    sub_487070
add     esp, 8
mov     edi, eax
cmp     [esp+94h+var_84], 0
jz      short loc_405ca0
test    ebp, ebp
jnz     short loc_405c60
test    edi, edi
jnz     loc_405ce9
lea     eax, [esp+94h+var_78]
lea     ecx, [esp+94h+var_7c]
lea     edx, [esp+94h+var_74]
push    eax
push    ecx
push    edx
push    0
push    0
push    0
push    ebx
call    sub_405a80
add     esp, 1ch
test    ebp, ebp
jz      short loc_405c9a
mov     edi, [esp+94h+var_74]
push    1
lea     eax, [esp+98h+rc]
push    1
push    eax
call    ds:offsetrect
jmp     short loc_405ce9
mov     edi, [esp+94h+var_78]
jmp     short loc_405ce9
mov     eax, [esp+94h+arg_0]
push    eax
call    sub_4065c0
add     esp, 4
test    eax, eax
jnz     short loc_405ce9
cmp     [esp+94h+var_1c], 0
jz      short loc_405cdc
mov     eax, [esp+94h+arg_0]
push    eax
call    sub_406620
add     esp, 4
test    eax, eax
jz      short loc_405cdc
cmp     edi, 1
sbb     edi, edi
and     edi, 0ffffffh
jmp     short loc_405ce9
test    ebp, ebp
jz      short loc_405ce9
test    edi, edi
jnz     short loc_405ce9
mov     edi, 7f7f7fh
and     edi, 0ffffffh
push    ebx
or      edi, 2000000h
call    ds:gettextcolor
mov     [esp+94h+color], eax
push    edi
push    ebx
call    ds:settextcolor
test    si, si
lea     eax, [esp+94h+var_70]
push    eax
jz      short loc_405d25
mov     ecx, [esp+98h+arg_28]
push    esi
push    ecx
call    sub_487730
add     esp, 0ch
jmp     short loc_405d2f
push    0dh
call    sub_449200
add     esp, 8
lea     eax, [esp+94h+var_70]
lea     ecx, [esp+94h+var_1c]
push    eax
push    ebx
push    ecx
call    sub_449700
lea     edi, [esp+0a0h+var_38]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+94h+var_38]
lea     edi, [esp+94h+var_54]
mov     ecx, 7
rep movsd
mov     edi, [esp+94h+lpstring]
mov     esi, ds:lstrlena
push    edi
call    esi
mov     ecx, [esp+94h+rc.left]
push    eax
mov     eax, [esp+98h+rc.bottom]
push    edi
push    eax
push    ecx
push    ebx
call    sub_449d20
add     esp, 14h
cmp     [esp+94h+var_84], 0
jz      short loc_405dda
test    ebp, ebp
jz      short loc_405dda
mov     eax, [esp+94h+var_7c]
and     eax, 0ffffffh
or      eax, 2000000h
push    eax
push    ebx
call    ds:settextcolor
lea     ecx, [esp+94h+rc]
push    0ffffffffh
push    0ffffffffh
push    ecx
call    ds:offsetrect
push    edi
call    esi
mov     ecx, [esp+94h+rc.bottom]
push    eax
mov     edx, [esp+98h+rc.left]
push    edi
push    ecx
push    edx
push    ebx
call    sub_449d20
add     esp, 14h
lea     eax, [esp+94h+var_54]
lea     ecx, [esp+94h+var_1c]
push    eax
push    ebx
push    ecx
call    sub_449700
mov     ecx, [esp+0a0h+color]
add     esp, 0ch
push    ecx
push    ebx
call    ds:settextcolor
lea     ecx, [esp+94h+var_70]
push    ecx
call    sub_4496d0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 84h
retn
mov     eax, [esp+arg_14]
push    ebx
push    esi
push    edi
mov     esi, [esp+0ch+arg_2c]
push    ebp
test    esi, esi
jnz     short loc_405e38
test    eax, eax
jz      loc_405ecf
test    eax, eax
jz      short loc_405e82
mov     bl, [esp+10h+arg_8]
test    bl, 4
jnz     short loc_405e90
mov     eax, [esp+10h+arg_48]
mov     ecx, dword ptr [esp+10h+arg_28]
mov     edx, [esp+10h+arg_10]
push    eax
mov     eax, dword ptr [esp+14h+arg_c]
push    ecx
mov     ecx, [esp+18h+arg_24]
push    edx
mov     edx, [esp+1ch+arg_20]
push    eax
mov     eax, [esp+20h+arg_1c]
push    ebx
mov     ebp, [esp+24h+hdc]
push    ecx
mov     ecx, [esp+28h+xdest]
push    edx
mov     edi, [esp+2ch+arg_0]
push    eax
push    ecx
push    ebp
push    edi
call    sub_405900
add     esp, 2ch
jmp     short loc_405e98
mov     edi, [esp+10h+arg_0]
mov     ebp, [esp+10h+hdc]
mov     bl, [esp+10h+arg_8]
jmp     short loc_405e98
mov     edi, [esp+10h+arg_0]
mov     ebp, [esp+10h+hdc]
test    esi, esi
jz      short loc_405ecf
mov     eax, [esp+10h+arg_44]
mov     ecx, [esp+10h+lpstring]
mov     edx, [esp+10h+arg_10]
push    eax
mov     eax, dword ptr [esp+14h+arg_c]
push    ecx
mov     ecx, [esp+18h+rc.bottom]
push    edx
mov     edx, [esp+1ch+rc.right]
push    eax
mov     eax, [esp+20h+rc.top]
push    ebx
push    ecx
push    edx
mov     ecx, [esp+2ch+rc.left]
push    eax
push    ecx
push    ebp
push    edi
call    sub_405b80
add     esp, 2ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 2ch
lea     eax, [esp+2ch+var_18]
push    ebx
push    esi
push    edi
mov     edi, [esp+38h+arg_8]
push    ebp
push    eax
push    edi
call    sub_405020
mov     al, [esp+44h+arg_c]
add     esp, 8
and     al, 1
xor     ecx, ecx
mov     cl, al
lea     edx, [esp+3ch+var_28]
lea     eax, [esp+3ch+var_20]
push    ecx
mov     ebx, [esp+40h+lprc]
push    eax
lea     eax, [esp+44h+var_2c]
push    edx
lea     ecx, [esp+48h+var_24]
push    ebx
mov     edx, [esp+4ch+arg_28]
push    eax
mov     ebp, [esp+50h+arg_30]
push    ecx
lea     eax, [esp+54h+var_2c+2]
push    edx
mov     ecx, [esp+58h+arg_14]
push    ebp
push    eax
push    ecx
push    edi
call    sub_4050d0
add     esp, 2ch
mov     eax, [ebp+0]
test    eax, eax
jnz     short loc_405f55
mov     ecx, [esp+3ch+arg_28]
cmp     dword ptr [ecx], 0
jz      loc_40608c
test    eax, eax
jz      short loc_405f77
cmp     [esp+3ch+var_2c], 0
mov     si, [esp+3ch+arg_4]
jnz     short loc_405f7c
test    si, si
jz      short loc_405f7c
push    esi
call    sub_4868a0
mov     [esp+40h+var_2c], ax
add     esp, 4
jmp     short loc_405f7c
mov     si, [esp+3ch+arg_4]
lea     eax, [esp+3ch+rc]
mov     ecx, [esp+3ch+var_28]
mov     edx, [esp+3ch+var_14]
push    eax
mov     eax, [esp+40h+var_18]
push    ebx
mov     ebx, [esp+44h+arg_2c]
push    ebx
push    ecx
mov     ecx, [esp+4ch+dy]
push    edx
mov     edx, [esp+50h+lpstring]
push    eax
mov     eax, [esp+54h+var_20]
push    ecx
push    eax
mov     ecx, [ebp+0]
mov     eax, dword ptr [esp+5ch+var_2c]
push    edx
push    esi
push    eax
movsx   edx, word ptr [edi+4]
movsx   eax, word ptr [edi+2]
push    ecx
push    edx
mov     ecx, [esp+70h+arg_24]
push    eax
mov     edx, [esp+74h+arg_20]
push    ecx
mov     eax, [esp+78h+arg_1c]
push    edx
mov     ecx, dword ptr [esp+7ch+arg_18]
push    eax
push    ecx
push    edi
call    sub_406610
mov     ecx, dword ptr [esp+88h+arg_c]
add     esp, 4
mov     dl, [edi]
push    eax
mov     eax, [esp+88h+hdc]
push    ecx
push    edx
push    eax
call    sub_405360
add     esp, 58h
mov     ecx, ds:dword_4a6054
test    byte ptr [ecx+1776h], 1
jz      short loc_406028
mov     edx, [esp+3ch+arg_1c]
lea     ecx, [esp+3ch+arg_18]
mov     eax, [ecx]
mov     [ebx], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [ebx+4], edx
mov     [ebx+8], eax
mov     [ebx+0ch], ecx
mov     eax, [esp+3ch+arg_38]
mov     ecx, dword ptr [esp+3ch+var_2c]
mov     edx, [esp+3ch+lpstring]
push    eax
mov     eax, [esp+40h+rc.bottom]
push    ecx
mov     ecx, [esp+44h+rc.right]
push    edx
mov     edx, [esp+48h+rc.top]
push    eax
mov     eax, [esp+4ch+rc.left]
push    ecx
push    edx
mov     ecx, [ebp+0]
mov     edx, dword ptr [esp+54h+var_2c+2]
push    eax
push    ecx
mov     eax, [ebx+0ch]
push    edx
mov     ecx, [ebx+8]
push    eax
mov     edx, [ebx+4]
push    ecx
mov     eax, [ebx]
mov     ecx, [esp+68h+arg_28]
push    edx
push    eax
mov     edx, [ecx]
mov     eax, [esp+70h+arg_14]
push    edx
mov     ecx, dword ptr [esp+74h+arg_c]
push    eax
mov     edx, [esp+78h+hdc]
push    esi
push    ecx
push    edx
push    edi
call    sub_405e20
add     esp, 4ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
sub     esp, 58h
cmp     [esp+58h+arg_24], 0
push    ebx
push    esi
push    edi
jz      short loc_4060f4
cmp     [esp+64h+arg_20], 0
jnz     short loc_4060c1
mov     ebx, 7
jmp     short loc_40612d
mov     ebx, [esp+64h+arg_c]
test    ebx, ebx
jnz     short loc_4060d0
mov     ebx, 4
jmp     short loc_40612d
cmp     ebx, 1
jnz     short loc_4060dc
mov     ebx, 5
jmp     short loc_40612d
cmp     ebx, 2
jnz     short loc_4060e8
mov     ebx, 6
jmp     short loc_40612d
cmp     ebx, 3
jnz     short loc_40612d
mov     ebx, 7
jmp     short loc_40612d
cmp     [esp+64h+arg_20], 0
jz      short loc_406128
mov     ebx, [esp+64h+arg_c]
cmp     ebx, 4
jnz     short loc_40610b
xor     ebx, ebx
jmp     short loc_40612d
cmp     ebx, 5
jnz     short loc_406117
mov     ebx, 1
jmp     short loc_40612d
cmp     ebx, 6
jnz     short loc_406123
mov     ebx, 2
jmp     short loc_40612d
cmp     ebx, 7
jnz     short loc_40612d
mov     ebx, 3
lea     edi, [esp+64h+var_30]
xor     eax, eax
mov     ecx, 0ch
rep stosd
mov     eax, [esp+64h+arg_4]
push    eax
call    sub_404b30
lea     ecx, [esp+68h+rc]
lea     edx, [esp+68h+var_58]
add     esp, 4
mov     esi, eax
lea     eax, [esp+64h+var_30]
push    eax
push    ecx
lea     eax, [esp+6ch+var_40]
push    edx
lea     ecx, [esp+70h+var_54]
push    eax
mov     edx, [esp+74h+arg_1c]
push    ecx
mov     eax, [esp+78h+arg_18]
push    edx
mov     ecx, [esp+7ch+arg_14]
push    eax
mov     edx, dword ptr [esp+80h+arg_10]
push    ecx
mov     eax, [esp+84h+lpstring]
push    edx
mov     cl, [esp+88h+arg_28]
push    ebx
mov     edx, [esp+8ch+hdc]
push    eax
push    ecx
push    esi
push    0
push    edx
call    sub_405ee0
mov     ecx, [esp+0a0h+arg_4]
add     esp, 3ch
push    0
push    esi
push    ecx
call    sub_404b90
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 58h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
cmp     [eax], ecx
jz      short loc_4061d4
mov     [eax], ecx
mov     eax, 1
retn
xor     eax, eax
retn
push    ebx
push    esi
mov     bl, [esp+8+arg_10]
test    bl, 4
jz      short loc_40621c
mov     esi, [esp+8+arg_c]
mov     eax, [esp+8+arg_4]
push    esi
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_40624d
test    bl, 10h
jz      short loc_406214
mov     eax, [esp+8+arg_0]
push    esi
push    eax
call    sub_404c20
add     esp, 8
mov     eax, 1
pop     esi
pop     ebx
retn
mov     esi, [esp+8+arg_8]
mov     eax, [esp+8+arg_4]
push    esi
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_40624d
test    bl, 10h
jz      short loc_406245
mov     eax, [esp+8+arg_0]
push    esi
push    eax
call    sub_404c20
add     esp, 8
mov     eax, 1
pop     esi
pop     ebx
retn
xor     eax, eax
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_8]
mov     al, [esi]
test    al, 2
jz      short loc_4062da
mov     eax, [esp+4+pt.x]
mov     ecx, [esp+4+pt.y]
lea     edx, [esp+4+rc]
push    ecx
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
mov     al, [esi]
jz      short loc_4062b0
or      al, 8
mov     ecx, [esp+4+arg_4]
mov     edx, [esp+4+arg_0]
push    eax
push    6
mov     [esi], al
push    2
push    ecx
push    edx
call    sub_4061e0
add     esp, 14h
test    eax, eax
jz      loc_40637b
mov     eax, 1
pop     esi
retn
and     al, 0f7h
mov     ecx, [esp+4+arg_4]
mov     edx, [esp+4+arg_0]
push    eax
push    4
mov     [esi], al
push    0
push    ecx
push    edx
call    sub_4061e0
add     esp, 14h
test    eax, eax
jz      loc_40637b
mov     eax, 1
pop     esi
retn
mov     ecx, [esp+4+pt.y]
lea     edx, [esp+4+rc]
push    ecx
test    al, 1
mov     eax, [esp+8+pt.x]
push    eax
push    edx
jz      short loc_406345
call    ds:ptinrect
test    eax, eax
mov     al, [esi]
jz      short loc_40631f
or      al, 8
mov     ecx, [esp+4+arg_4]
mov     edx, [esp+4+arg_0]
push    eax
push    5
mov     [esi], al
push    1
push    ecx
push    edx
call    sub_4061e0
add     esp, 14h
test    eax, eax
jz      short loc_40637b
mov     eax, 1
pop     esi
retn
and     al, 0f7h
mov     ecx, [esp+4+arg_4]
mov     edx, [esp+4+arg_0]
push    eax
push    4
mov     [esi], al
push    0
push    ecx
push    edx
call    sub_4061e0
add     esp, 14h
test    eax, eax
jz      short loc_40637b
mov     eax, 1
pop     esi
retn
call    ds:ptinrect
test    eax, eax
jz      short loc_406354
or      byte ptr [esi], 8
jmp     short loc_406357
and     byte ptr [esi], 0f7h
mov     al, [esi]
mov     ecx, [esp+4+arg_4]
mov     edx, [esp+4+arg_0]
push    eax
push    4
push    0
push    ecx
push    edx
call    sub_4061e0
add     esp, 14h
test    eax, eax
jz      short loc_40637b
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
cmp     [esp+arg_c], 0
mov     eax, [esp+arg_8]
jz      short loc_4063d3
test    eax, eax
jz      short loc_40639a
cmp     eax, 1
jz      short loc_4063ad
cmp     eax, 2
jz      short loc_4063c0
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
add     eax, eax
lea     edx, [eax+eax*8]
or      byte ptr [edx+ecx+0ah], 1
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
add     eax, eax
lea     edx, [eax+eax*8]
or      byte ptr [edx+ecx+0ah], 10h
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
add     eax, eax
lea     edx, [eax+eax*8]
or      byte ptr [edx+ecx+0ah], 4
retn
test    eax, eax
jz      short loc_4063e2
cmp     eax, 1
jz      short loc_4063f5
cmp     eax, 2
jz      short loc_406408
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
add     eax, eax
lea     edx, [eax+eax*8]
and     byte ptr [edx+ecx+0ah], 0feh
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
add     eax, eax
lea     edx, [eax+eax*8]
and     byte ptr [edx+ecx+0ah], 0efh
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
add     eax, eax
lea     edx, [eax+eax*8]
and     byte ptr [edx+ecx+0ah], 0fbh
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    4
push    ecx
call    sub_406540
add     esp, 0ch
cmp     eax, 1
sbb     eax, eax
and     eax, 4
retn
mov     eax, [esp+arg_4]
push    esi
push    edi
dec     eax
cmp     eax, 6
ja      short def_40644c
jmp     ds:jpt_40644c[eax*4]
xor     eax, eax
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
mov     edi, [esp+8+arg_8]
mov     esi, [esp+8+arg_0]
push    edi
push    1
push    esi
call    sub_406540
add     esp, 0ch
test    eax, eax
jz      short loc_406482
push    edi
push    esi
call    sub_406420
add     esp, 8
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
mov     edi, [esp+8+arg_8]
mov     esi, [esp+8+arg_0]
push    edi
push    2
push    esi
call    sub_406540
add     esp, 0ch
test    eax, eax
jz      short loc_4064af
push    edi
push    esi
call    sub_406420
add     esp, 8
pop     edi
pop     esi
retn
mov     eax, 2
pop     edi
pop     esi
retn
mov     edi, [esp+8+arg_8]
mov     esi, [esp+8+arg_0]
push    edi
push    3
push    esi
call    sub_406540
add     esp, 0ch
test    eax, eax
jz      short loc_4064dc
push    edi
push    esi
call    sub_406420
add     esp, 8
pop     edi
pop     esi
retn
mov     eax, 3
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_8]
push    edi
mov     edi, [esp+0ch+arg_4]
push    ebx
mov     esi, [esp+10h+arg_0]
push    edi
push    esi
call    sub_406540
add     esp, 0ch
test    eax, eax
jz      short loc_40652d
push    ebx
push    edi
push    esi
call    sub_406440
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_8]
test    eax, eax
jz      short loc_406555
cmp     eax, 1
jz      short loc_40656c
cmp     eax, 2
jz      short loc_406585
xor     eax, eax
retn
mov     eax, [esp+arg_4]
mov     edx, [esp+arg_0]
add     eax, eax
lea     ecx, [eax+eax*8]
xor     eax, eax
mov     al, [ecx+edx+0ah]
and     eax, 1
retn
mov     eax, [esp+arg_4]
mov     edx, [esp+arg_0]
add     eax, eax
lea     ecx, [eax+eax*8]
mov     al, [ecx+edx+0ah]
and     al, 10h
cmp     al, 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_4]
mov     edx, [esp+arg_0]
add     eax, eax
lea     ecx, [eax+eax*8]
mov     al, [ecx+edx+0ah]
and     al, 4
cmp     al, 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_0]
mov     al, [eax]
and     al, 2
cmp     al, 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_0]
mov     al, [eax]
and     al, 80h
cmp     al, 1
sbb     eax, eax
inc     eax
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
mov     al, [ecx]
and     eax, 1
retn
mov     eax, [esp+arg_0]
mov     al, [eax]
and     al, 10h
cmp     al, 1
sbb     eax, eax
inc     eax
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_4065a0
add     esp, 4
test    eax, eax
jz      short loc_406608
push    esi
call    sub_404280
add     esp, 4
cmp     ax, 2
jnz     short loc_406608
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_4065e0
add     esp, 4
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_4065e0
add     esp, 4
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_404280
add     esp, 4
cmp     ax, 4
jz      short loc_40664c
cmp     ax, 5
jz      short loc_40664c
xor     eax, eax
retn
mov     eax, 1
retn
mov     eax, [esp+arg_8]
test    eax, eax
jz      short loc_406675
cmp     eax, 1
jz      short loc_40668e
cmp     eax, 2
jz      short loc_4066a7
xor     eax, eax
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
add     eax, eax
lea     edx, [eax+eax*8]
mov     al, [edx+ecx+0ah]
and     al, 2
cmp     al, 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
add     eax, eax
lea     edx, [eax+eax*8]
mov     al, [edx+ecx+0ah]
and     al, 20h
cmp     al, 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
add     eax, eax
lea     edx, [eax+eax*8]
mov     al, [edx+ecx+0ah]
and     al, 8
cmp     al, 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_8]
push    esi
mov     esi, [esp+4+arg_0]
push    edi
push    2
push    eax
push    esi
call    sub_406500
inc     ax
mov     edi, [esp+14h+arg_4]
add     esp, 0ch
and     edi, 0ffffh
shl     edi, 10h
push    eax
xor     eax, eax
mov     ax, [esi+8]
or      eax, edi
push    eax
call    sub_4457d0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_406707
push    edi
push    esi
call    sub_408b00
add     esp, 8
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_8]
sub     esp, 10h
push    esi
push    1
mov     esi, [esp+18h+arg_4]
push    eax
push    esi
call    sub_406500
add     esp, 0ch
add     eax, eax
lea     edx, [eax+eax*8]
movsx   eax, word ptr [edx+esi+0eh]
lea     ecx, [edx+esi]
mov     [esp+14h+var_10], eax
movsx   edx, word ptr [ecx+10h]
movsx   esi, word ptr [ecx+12h]
movsx   eax, word ptr [ecx+14h]
mov     [esp+14h+var_c], edx
mov     [esp+14h+var_8], esi
lea     edx, [esp+14h+var_10]
mov     [esp+14h+var_4], eax
mov     eax, [esp+14h+arg_0]
mov     ecx, [edx]
mov     esi, [edx+4]
mov     [eax], ecx
mov     ecx, [edx+8]
mov     [eax+4], esi
mov     edx, [edx+0ch]
pop     esi
mov     [eax+8], ecx
mov     [eax+0ch], edx
add     esp, 10h
retn
mov     eax, [esp+arg_4]
sub     esp, 8
push    esi
push    0
mov     esi, [esp+10h+arg_0]
push    eax
push    esi
call    sub_406500
add     esp, 0ch
add     eax, eax
lea     eax, [eax+eax*8]
add     eax, esi
pop     esi
movsx   edx, word ptr [eax+18h]
movsx   eax, word ptr [eax+16h]
add     esp, 8
retn
xor     ax, ax
push    ebx
mov     edx, [esp+4+arg_0]
mov     ecx, 8
add     edx, 0ah
mov     bl, [esp+4+arg_4]
test    [edx], bl
jz      short loc_4067ca
inc     ax
add     edx, 12h
dec     ecx
jnz     short loc_4067c4
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_c]
push    edi
mov     edi, [esp+0ch+arg_8]
push    ebp
mov     ebp, [esp+10h+arg_10]
push    ebx
mov     esi, [esp+14h+arg_0]
push    edi
push    esi
test    ebp, ebp
jz      short loc_40681a
call    sub_406660
add     esp, 0ch
test    eax, eax
jnz     loc_4068ea
push    0
push    ebx
push    edi
push    esi
call    sub_406380
add     esp, 10h
jmp     short loc_40682a
call    sub_406660
add     esp, 0ch
test    eax, eax
jz      loc_4068ea
test    ebx, ebx
jz      short loc_40683d
cmp     ebx, 1
jz      short loc_406884
cmp     ebx, 2
jz      short loc_4068b7
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
test    ebp, ebp
jz      short loc_406855
lea     eax, ds:0[edi*2]
pop     ebp
pop     edi
lea     ecx, [eax+eax*8]
or      byte ptr [ecx+esi+0ah], 2
pop     esi
pop     ebx
retn
push    0
push    edi
push    esi
call    sub_406540
add     esp, 0ch
test    eax, eax
jnz     short loc_406870
push    2
push    esi
call    sub_4067b0
add     esp, 8
lea     eax, ds:0[edi*2]
pop     ebp
pop     edi
lea     ecx, [eax+eax*8]
and     byte ptr [ecx+esi+0ah], 0fdh
pop     esi
pop     ebx
retn
lea     eax, ds:0[edi*2]
test    ebp, ebp
jz      short loc_4068aa
lea     eax, [eax+eax*8]
add     eax, esi
or      byte ptr [eax+0ah], 20h
cmp     word ptr [eax+1ah], 0
jnz     short loc_4068ea
mov     word ptr [eax+1ah], 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
lea     ecx, [eax+eax*8]
pop     ebp
pop     edi
and     byte ptr [ecx+esi+0ah], 0dfh
pop     esi
pop     ebx
retn
test    ebp, ebp
jz      short loc_4068cf
lea     eax, ds:0[edi*2]
pop     ebp
pop     edi
lea     ecx, [eax+eax*8]
or      byte ptr [ecx+esi+0ah], 8
pop     esi
pop     ebx
retn
push    2
push    edi
push    esi
call    sub_406660
add     esp, 0ch
lea     eax, ds:0[edi*2]
lea     ecx, [eax+eax*8]
and     byte ptr [ecx+esi+0ah], 0f7h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
mov     dl, [esp+arg_8]
add     eax, eax
lea     ecx, [eax+eax*8]
mov     eax, [esp+arg_0]
mov     [ecx+eax+0ch], dl
retn
mov     cx, [esp+arg_8]
mov     eax, [esp+arg_4]
add     eax, eax
lea     edx, [eax+eax*8]
mov     eax, [esp+arg_0]
mov     [edx+eax+1ah], cx
retn
sub     esp, 70h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
push    esi
call    ds:getdc
mov     ebx, [esp+80h+arg_4]
mov     [esp+80h+hdc], eax
lea     eax, [esp+80h+var_50]
xor     edi, edi
push    eax
xor     ebp, ebp
push    ebx
call    sub_405020
add     esp, 8
lea     eax, [esp+80h+var_58]
push    ebp
lea     ecx, [esp+84h+var_64]
push    eax
lea     edx, [esp+88h+rc]
push    ecx
lea     eax, [esp+8ch+var_70]
push    edx
lea     ecx, [esp+90h+var_5c]
push    eax
lea     edx, [esp+94h+var_68]
push    ecx
lea     eax, [esp+98h+var_6c]
push    edx
lea     ecx, [esp+9ch+var_70+2]
push    eax
push    ecx
push    edi
push    ebx
call    sub_4050d0
add     esp, 2ch
cmp     [esp+80h+var_6c], ebp
jnz     short loc_4069a6
cmp     [esp+80h+var_68], ebp
jz      loc_406aff
cmp     [esp+80h+var_6c], ebp
jz      short loc_4069e4
cmp     word ptr [esp+80h+var_70], bp
jnz     short loc_4069c2
mov     eax, [esp+80h+arg_8]
push    eax
call    sub_4868a0
mov     word ptr [esp+84h+var_70], ax
add     esp, 4
mov     eax, [esp+80h+rc.left]
cmp     [esp+80h+rc.right], eax
jnz     short loc_4069e4
mov     [esp+80h+rc.left], ebp
mov     [esp+80h+rc.top], ebp
movsx   eax, word ptr [ebx+2]
movsx   ecx, word ptr [ebx+4]
mov     [esp+80h+rc.right], eax
mov     [esp+80h+rc.bottom], ecx
lea     eax, [esp+80h+var_10]
lea     ecx, [esp+80h+rc]
lea     edx, [esp+80h+rcsrc2]
push    eax
mov     eax, [esp+84h+var_64]
push    ecx
mov     ecx, [esp+88h+var_4c]
push    edx
mov     edx, [esp+8ch+var_50]
push    eax
mov     eax, [esp+90h+var_58]
push    ecx
mov     ecx, [esp+94h+lpstring]
push    edx
mov     edx, [esp+98h+dy]
push    edx
push    eax
mov     eax, [esp+0a0h+arg_8]
push    ecx
mov     edx, [esp+0a4h+var_70]
push    eax
mov     ecx, [esp+0a8h+var_6c]
push    edx
movsx   eax, word ptr [ebx+4]
movsx   edx, word ptr [ebx+2]
push    ecx
push    eax
mov     ecx, [esp+0b4h+arg_1c]
push    edx
mov     eax, [esp+0b8h+arg_18]
push    ecx
mov     edx, [esp+0bch+arg_14]
push    eax
mov     ecx, dword ptr [esp+0c0h+arg_10]
push    edx
push    ecx
push    ebx
call    sub_406610
mov     edx, [esp+0cch+hdc]
add     esp, 4
mov     cl, [ebx]
push    eax
cmp     [esp+0cch+arg_20], 1
sbb     al, al
and     al, 2
push    eax
push    ecx
push    edx
call    sub_405360
add     esp, 58h
cmp     [esp+80h+var_68], ebp
jz      short loc_406abb
test    esi, esi
jnz     short loc_406aa6
mov     esi, 1
lea     eax, [esp+80h+rcsrc2]
lea     ecx, [esp+80h+rcdst]
mov     edx, [eax]
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     eax, [eax+0ch]
mov     [ecx+8], edx
mov     [ecx+0ch], eax
jmp     short loc_406abb
lea     eax, [esp+80h+rcsrc2]
lea     ecx, [esp+80h+rcdst]
push    eax
push    ecx
lea     ecx, [esp+88h+rcdst]
push    ecx
call    ds:unionrect
cmp     [esp+80h+var_6c], ebp
jz      short loc_406aff
test    esi, esi
jnz     short loc_406aea
mov     esi, 1
lea     eax, [esp+80h+rc]
lea     ecx, [esp+80h+rcdst]
mov     edx, [eax]
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     eax, [eax+0ch]
mov     [ecx+8], edx
mov     [ecx+0ch], eax
jmp     short loc_406aff
lea     eax, [esp+80h+rc]
lea     ecx, [esp+80h+rcdst]
push    eax
push    ecx
lea     ecx, [esp+88h+rcdst]
push    ecx
call    ds:unionrect
inc     edi
cmp     edi, 7
jle     loc_40695d
xor     eax, eax
test    esi, esi
jnz     short loc_406b1f
mov     [esp+80h+rcdst.left], eax
mov     [esp+80h+rcdst.top], eax
mov     [esp+80h+rcdst.right], eax
mov     [esp+80h+rcdst.bottom], eax
mov     eax, [esp+80h+hdc]
push    eax
push    0
call    ds:releasedc
lea     ecx, [esp+80h+var_48]
lea     eax, [esp+80h+arg_10]
push    ecx
push    eax
call    sub_473c30
lea     ecx, [esp+88h+rcdst]
lea     edx, [esp+88h+var_48]
add     esp, 8
push    ecx
push    edx
call    sub_473bf0
lea     edx, [esp+88h+rcdst]
mov     eax, [esp+88h+arg_0]
add     esp, 8
mov     ecx, [edx]
mov     ebx, [edx+4]
mov     ebp, [edx+8]
mov     [eax], ecx
mov     ecx, [edx+0ch]
mov     [eax+4], ebx
mov     [eax+8], ebp
pop     ebp
pop     edi
mov     [eax+0ch], ecx
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, [esp+arg_4]
sub     esp, 20h
push    esi
push    eax
call    sub_404b30
mov     cx, word ptr [esp+28h+arg_4+2]
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_406c0f
mov     eax, [esp+24h+arg_1c]
mov     edx, [esp+24h+arg_18]
push    eax
push    edx
mov     eax, [esp+2ch+arg_14]
mov     edx, [esp+2ch+arg_10]
push    eax
push    edx
mov     eax, dword ptr [esp+34h+arg_c]
mov     edx, [esp+34h+lpstring]
push    eax
push    edx
push    ecx
push    esi
lea     ecx, [esp+44h+var_10]
push    ecx
call    sub_406930
lea     edx, [esp+48h+var_20]
add     esp, 24h
mov     ecx, [eax]
mov     [edx], ecx
mov     ecx, [eax+4]
mov     [edx+4], ecx
mov     ecx, [eax+8]
mov     eax, [eax+0ch]
mov     [edx+8], ecx
mov     ecx, edx
mov     [edx+0ch], eax
lea     edx, [esp+24h+var_10]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
push    0
mov     [edx+4], eax
mov     eax, [ecx+8]
push    esi
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
mov     edx, [esp+2ch+arg_4]
push    edx
call    sub_404b90
add     esp, 0ch
mov     esi, [esp+24h+var_c]
lea     edx, [esp+24h+var_10]
mov     eax, [esp+24h+arg_0]
mov     ecx, [edx]
mov     [eax], ecx
mov     ecx, [edx+8]
mov     edx, [edx+0ch]
mov     [eax+4], esi
pop     esi
mov     [eax+8], ecx
mov     [eax+0ch], edx
add     esp, 20h
retn
mov     eax, [esp+arg_0]
sub     esp, 54h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
push    eax
call    sub_4041f0
mov     di, word ptr [esp+68h+arg_0+2]
mov     ecx, [esp+68h+pt.y]
lea     edx, [esp+68h+rc]
add     esp, 4
mov     ebp, ds:ptinrect
test    eax, eax
mov     eax, [esp+64h+pt.x]
push    ecx
push    eax
push    edx
jz      short loc_406c84
call    ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
call    ebp
test    eax, eax
jz      loc_406e9f
mov     eax, [esp+64h+arg_0]
push    eax
call    sub_404b30
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_406cae
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
push    ebx
call    sub_4065c0
add     esp, 4
test    eax, eax
jnz     short loc_406cc5
mov     esi, 1
jmp     loc_406e85
mov     eax, [esp+64h+rc.left]
mov     ecx, [esp+64h+rc.top]
lea     edx, [esp+64h+var_40]
sub     [esp+64h+pt.x], eax
sub     [esp+64h+pt.y], ecx
push    edx
push    ebx
call    sub_405020
lea     ecx, [esp+6ch+var_38]
lea     edx, [esp+6ch+var_48]
lea     eax, [esp+6ch+var_10]
add     esp, 8
push    1
push    ecx
lea     ecx, [esp+6ch+var_52]
push    edx
lea     edx, [esp+70h+var_44]
push    eax
lea     eax, [esp+74h+var_50]
push    ecx
lea     ecx, [esp+78h+var_4c]
push    edx
lea     edx, [esp+7ch+var_54]
push    eax
mov     eax, [esp+80h+arg_4]
push    ecx
push    edx
push    eax
push    ebx
call    sub_4050d0
add     esp, 2ch
cmp     [esp+64h+var_4c], 0
jz      short loc_406d71
mov     eax, [esp+64h+var_10.right]
sub     eax, [esp+64h+var_10.left]
test    eax, eax
jle     short loc_406d71
mov     eax, [esp+64h+dy]
mov     ecx, [esp+64h+var_40]
lea     edx, [esp+64h+var_10]
push    eax
push    ecx
push    edx
call    ds:offsetrect
mov     edx, [esp+64h+pt.x]
mov     ecx, [esp+64h+pt.y]
lea     eax, [esp+64h+var_10]
push    ecx
push    edx
push    eax
call    ebp
test    eax, eax
jz      short loc_406d71
mov     esi, 1
jmp     loc_406e85
xor     ecx, ecx
cmp     [esp+64h+var_50], ecx
jz      loc_406e85
mov     eax, [esp+64h+var_40]
add     eax, [esp+64h+var_38]
sub     [esp+64h+pt.x], eax
mov     eax, [esp+64h+dy]
add     eax, [esp+64h+var_34]
sub     [esp+64h+pt.y], eax
test    byte ptr [ebx], 40h
jnz     short loc_406dd6
mov     edx, [esp+64h+pt.x]
mov     [esp+64h+var_20.left], ecx
mov     [esp+64h+var_20.top], ecx
movsx   eax, word ptr [ebx+2]
mov     [esp+64h+var_20.right], eax
mov     eax, [esp+64h+pt.y]
movsx   ecx, word ptr [ebx+4]
mov     [esp+64h+var_20.bottom], ecx
push    eax
lea     ecx, [esp+68h+var_20]
push    edx
push    ecx
call    ebp
mov     esi, eax
jmp     loc_406e85
movsx   eax, word ptr [ebx+4]
movzx   ebp, di
shl     ebp, 10h
inc     eax
movsx   ecx, [esp+64h+var_54]
imul    eax, ecx
add     [esp+64h+pt.y], eax
xor     eax, eax
mov     ax, [ebx+6]
or      eax, ebp
push    eax
call    sub_470640
mov     [esp+68h+var_20.left], eax
add     esp, 4
test    eax, eax
jz      short loc_406e85
movsx   eax, di
mov     ecx, [esp+64h+pt.y]
mov     [esp+64h+var_20.top], eax
mov     eax, [esp+64h+pt.x]
push    1
mov     [esp+68h+var_30.bottom], ecx
push    1
mov     [esp+6ch+var_30.top], ecx
mov     [esp+6ch+var_30.right], eax
mov     [esp+6ch+var_30.left], eax
lea     eax, [esp+6ch+var_30]
push    eax
call    ds:inflaterect
lea     ecx, [esp+64h+var_30]
push    1
mov     eax, [esp+68h+pt.x]
push    ecx
mov     edx, [esp+6ch+pt.y]
mov     esi, [esp+6ch+var_20.left]
mov     ecx, [esp+6ch+var_20.top]
push    edx
push    eax
push    ecx
push    esi
call    sub_46b830
add     esp, 18h
mov     esi, eax
xor     eax, eax
push    0
mov     ax, [ebx+6]
sub     esi, 0dh
or      eax, ebp
push    eax
call    sub_470920
add     esp, 8
cmp     esi, 1
sbb     esi, esi
neg     esi
mov     eax, [esp+64h+arg_0]
push    0
push    ebx
push    eax
call    sub_404b90
add     esp, 0ch
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
push    0d3h
push    1ah
push    1bh
push    offset windowname
push    0eh
push    0
call    sub_404510
add     esp, 18h
push    0d4h
push    1ah
push    1bh
push    offset windowname
push    0fh
push    0
call    sub_404510
add     esp, 18h
push    0d5h
push    1ah
push    1bh
push    offset windowname
push    10h
push    0
call    sub_404510
add     esp, 18h
push    0d6h
push    1ah
push    1bh
push    offset windowname
push    11h
push    0
call    sub_404510
add     esp, 18h
push    0d7h
push    1ah
push    1bh
push    offset windowname
push    12h
push    0
call    sub_404510
add     esp, 18h
push    0d8h
push    1ah
push    1bh
push    offset windowname
push    13h
push    0
call    sub_404510
add     esp, 18h
push    0d9h
push    1ah
push    1bh
push    offset windowname
push    14h
push    0
call    sub_404510
add     esp, 18h
push    0dah
push    1ah
push    1bh
push    offset windowname
push    15h
push    0
call    sub_404510
add     esp, 18h
push    0dbh
push    1ah
push    1bh
push    offset windowname
push    16h
push    0
call    sub_404510
add     esp, 18h
retn
mov     eax, [esp+arg_4]
cmp     eax, 7
ja      short def_406fa9
jmp     ds:jpt_406fa9[eax*4]
mov     eax, [esp+arg_18]
lea     ecx, [esp+arg_8]
mov     edx, [esp+hdc]
push    eax
push    0
push    ecx
push    edx
call    sub_407010
add     esp, 10h
retn
mov     eax, [esp+arg_18]
lea     ecx, [esp+arg_8]
mov     edx, [esp+hdc]
push    eax
push    1
push    ecx
push    edx
call    sub_407010
add     esp, 10h
retn
sub     esp, 40h
lea     eax, [esp+40h+var_30]
push    esi
push    eax
call    sub_452fa0
add     esp, 4
cmp     [esp+44h+arg_c], 0
jz      short loc_40707a
mov     eax, 3
push    0
mov     [esp+48h+var_14], ax
push    0fh
mov     [esp+4ch+var_12], ax
push    0fh
mov     ecx, [esp+50h+arg_4]
mov     [esp+50h+var_2c], 0
mov     edx, [ecx+0ch]
mov     eax, [ecx+8]
push    edx
mov     esi, [ecx+4]
push    eax
mov     ecx, [ecx]
lea     eax, [esp+58h+var_30]
push    esi
mov     esi, [esp+5ch+hdc]
push    ecx
push    eax
push    esi
call    sub_451fc0
add     esp, 24h
mov     eax, 1
mov     [esp+44h+var_14], ax
mov     [esp+44h+var_12], ax
jmp     short loc_40707e
mov     esi, [esp+44h+hdc]
mov     ecx, [esp+44h+arg_4]
lea     edx, [esp+44h+rc]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     eax, 1
mov     [edx+0ch], ecx
mov     [esp+44h+var_2c], ax
xor     ecx, ecx
mov     [esp+44h+var_16], ax
mov     [esp+44h+var_10], ecx
cmp     [esp+44h+arg_8], ecx
mov     [esp+44h+var_2a], ecx
jnz     short loc_4070c3
mov     [esp+44h+var_2a], 0ffffffh
lea     eax, [esp+44h+rc]
push    0fffffffch
push    0fffffffch
push    eax
call    ds:inflaterect
mov     ecx, [esp+44h+rc.bottom]
push    0
mov     edx, [esp+48h+rc.right]
push    9
mov     eax, [esp+4ch+rc.top]
push    9
push    ecx
push    edx
mov     ecx, [esp+58h+rc.left]
push    eax
lea     edx, [esp+5ch+var_30]
push    ecx
push    edx
push    esi
call    sub_451fc0
lea     ecx, [esp+68h+var_30]
add     esp, 24h
push    ecx
call    sub_452fa0
add     esp, 4
mov     eax, 0fffffffeh
mov     [esp+44h+rc.top], eax
push    0
mov     [esp+48h+rc.left], eax
mov     eax, 0ffffffffh
mov     [esp+48h+rc.bottom], eax
mov     [esp+48h+rc.right], eax
mov     ecx, [esp+48h+rc.bottom]
mov     edx, [esp+48h+rc.top]
push    ecx
push    eax
mov     ecx, [esp+50h+rc.left]
push    edx
lea     eax, [esp+54h+var_30]
push    ecx
push    eax
push    esi
call    sub_451d90
add     esp, 1ch
pop     esi
add     esp, 40h
retn
mov     eax, [esp+arg_4]
cmp     eax, 2
jz      short loc_407163
mov     ecx, 0
cmp     eax, 6
jnz     short loc_407168
mov     ecx, 1
mov     eax, [esp+arg_18]
mov     edx, [esp+hdc]
push    eax
push    ecx
lea     ecx, [esp+8+arg_8]
push    ecx
push    edx
call    sub_407340
add     esp, 10h
retn
mov     eax, [esp+arg_4]
push    esi
cmp     eax, 2
jz      short loc_4071a4
mov     esi, 0
cmp     eax, 6
jnz     short loc_4071a9
mov     esi, 1
mov     cx, [esp+4+arg_1c]
cmp     cx, 3
jnz     short loc_4071ce
mov     eax, [esp+4+arg_18]
lea     ecx, [esp+4+arg_8]
mov     edx, [esp+4+hdc]
push    eax
push    esi
push    ecx
push    edx
call    sub_407700
add     esp, 10h
pop     esi
retn
cmp     eax, 4
jz      short loc_4071e2
cmp     eax, 6
jz      short loc_4071e2
mov     edx, 0
cmp     eax, 7
jnz     short loc_4071e7
mov     edx, 1
cmp     eax, 3
jz      short loc_4071f6
cmp     eax, 7
mov     eax, 0
jnz     short loc_4071fb
mov     eax, 1
cmp     cx, 4
jnz     short loc_407218
mov     ecx, [esp+4+hdc]
push    eax
lea     eax, [esp+8+arg_8]
push    edx
push    esi
push    eax
push    ecx
call    sub_4079f0
add     esp, 14h
pop     esi
retn
cmp     cx, 5
jnz     short loc_407233
mov     ecx, [esp+4+hdc]
push    eax
lea     eax, [esp+8+arg_8]
push    edx
push    esi
push    eax
push    ecx
call    sub_407d70
add     esp, 14h
pop     esi
retn
mov     eax, [esp+color]
push    esi
movsx   ecx, [esp+4+arg_4]
push    eax
push    ecx
push    0
call    ds:createpen
mov     esi, [esp+4+arg_c]
test    eax, eax
mov     [esi], eax
jz      short loc_407278
push    eax
mov     eax, [esp+8+hdc]
push    eax
call    ds:selectobject
mov     [esi+4], eax
test    eax, eax
jz      short loc_407278
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     ecx, [esp+hdc]
push    esi
mov     esi, [esp+4+arg_4]
mov     eax, [esi+4]
push    eax
push    ecx
call    ds:selectobject
mov     ecx, [esi]
push    ecx
call    ds:deleteobject
pop     esi
retn
mov     eax, [esp+color]
push    esi
push    eax
call    ds:createsolidbrush
mov     esi, [esp+4+arg_8]
test    eax, eax
mov     [esi], eax
jz      short loc_4072c5
push    eax
mov     eax, [esp+8+hdc]
push    eax
call    ds:selectobject
mov     [esi+4], eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_4]
cmp     dword ptr [esi], 0
jz      short loc_4072f6
mov     eax, [esi+4]
test    eax, eax
jz      short loc_4072ed
push    eax
mov     eax, [esp+8+hdc]
push    eax
call    ds:selectobject
mov     eax, [esi]
push    eax
call    ds:deleteobject
pop     esi
retn
push    ebx
push    esi
push    edi
push    8
call    ds:getstockobject
mov     esi, [esp+0ch+hdc]
push    eax
push    esi
mov     edi, ds:selectobject
call    edi
mov     ebx, eax
mov     ecx, [esp+0ch+right]
mov     eax, [esp+0ch+bottom]
mov     edx, [esp+0ch+top]
push    eax
push    ecx
mov     eax, [esp+14h+left]
push    edx
push    eax
push    esi
call    ds:rectangle
push    ebx
push    esi
call    edi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 30h
lea     eax, [esp+30h+var_30]
push    ebx
lea     ecx, [esp+34h+var_28]
push    esi
lea     edx, [esp+38h+var_24]
push    edi
push    ebp
push    0
mov     esi, [esp+44h+hdc]
push    eax
lea     eax, [esp+48h+color]
push    ecx
push    edx
push    eax
push    0
push    esi
call    sub_405a80
add     esp, 1ch
push    esi
call    ds:savedc
mov     edi, eax
test    edi, edi
jz      loc_4076e9
push    0dh
push    esi
call    ds:setrop2
mov     edx, [esp+40h+arg_4]
lea     ecx, [esp+40h+x]
mov     eax, [edx]
mov     ebx, [edx+4]
mov     ebp, [edx+8]
mov     [ecx], eax
mov     eax, [edx+0ch]
mov     [ecx+4], ebx
mov     edx, [esp+40h+color]
mov     [ecx+8], ebp
mov     [ecx+0ch], eax
lea     ecx, [esp+40h+var_20]
push    ecx
push    edx
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      loc_40745b
mov     eax, [esp+40h+y]
push    0
push    eax
mov     ebx, ds:movetoex
mov     eax, [esp+48h+x]
inc     eax
push    eax
push    esi
call    ebx
mov     ecx, [esp+40h+y]
mov     eax, [esp+40h+var_8]
push    ecx
dec     eax
push    eax
mov     ebp, ds:lineto
push    esi
call    ebp
mov     eax, [esp+40h+y]
push    0
inc     eax
push    eax
mov     eax, [esp+48h+var_8]
dec     eax
push    eax
push    esi
call    ebx
mov     eax, [esp+40h+var_4]
dec     eax
push    eax
mov     eax, [esp+44h+var_8]
dec     eax
push    eax
push    esi
call    ebp
mov     eax, [esp+40h+var_4]
push    0
dec     eax
push    eax
mov     eax, [esp+48h+var_8]
sub     eax, 2
push    eax
push    esi
call    ebx
mov     eax, [esp+40h+var_4]
mov     ecx, [esp+40h+x]
dec     eax
push    eax
push    ecx
push    esi
call    ebp
mov     eax, [esp+40h+var_4]
push    0
sub     eax, 2
mov     ecx, [esp+44h+x]
push    eax
push    ecx
push    esi
call    ebx
mov     ecx, [esp+40h+y]
push    ecx
mov     edx, [esp+44h+x]
push    edx
push    esi
call    ebp
lea     ecx, [esp+40h+var_20]
push    ecx
push    esi
call    sub_407280
add     esp, 8
jmp     short loc_407467
mov     ebp, ds:lineto
mov     ebx, ds:movetoex
cmp     [esp+40h+arg_c], 0
jz      short loc_4074b2
lea     eax, [esp+40h+x]
push    0ffffffffh
push    0ffffffffh
push    eax
call    ds:inflaterect
lea     eax, [esp+40h+var_20]
mov     ecx, [esp+40h+color]
push    eax
push    ecx
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_4074b2
lea     eax, [esp+40h+x]
push    eax
push    esi
call    sub_451d50
lea     eax, [esp+48h+var_20]
add     esp, 8
push    eax
push    esi
call    sub_407280
add     esp, 8
lea     eax, [esp+40h+var_18]
mov     ecx, [esp+40h+var_24]
push    eax
push    ecx
push    esi
call    sub_4072a0
lea     ecx, [esp+4ch+x]
add     esp, 0ch
push    0ffffffffh
push    0ffffffffh
push    ecx
call    ds:inflaterect
cmp     [esp+40h+arg_8], 0
lea     eax, [esp+40h+var_20]
push    eax
jz      loc_407564
mov     ecx, [esp+44h+var_30]
push    ecx
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_40753e
mov     eax, [esp+40h+y]
push    0
mov     ecx, [esp+44h+x]
push    eax
push    ecx
push    esi
call    ebx
mov     ecx, [esp+40h+y]
mov     edx, [esp+40h+var_8]
push    ecx
push    edx
push    esi
call    ebp
mov     ecx, [esp+40h+y]
push    0
mov     edx, [esp+44h+x]
push    ecx
push    edx
push    esi
call    ebx
mov     ecx, [esp+40h+var_4]
mov     edx, [esp+40h+x]
push    ecx
push    edx
push    esi
call    ebp
lea     ecx, [esp+40h+var_20]
push    ecx
push    esi
call    sub_407280
add     esp, 8
mov     eax, [esp+40h+var_4]
inc     eax
push    eax
mov     eax, [esp+44h+var_8]
inc     eax
push    eax
mov     eax, [esp+48h+y]
inc     eax
push    eax
mov     eax, [esp+4ch+x]
inc     eax
push    eax
push    esi
call    sub_407300
add     esp, 14h
jmp     loc_4076d3
mov     ecx, [esp+44h+var_28]
push    ecx
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      loc_407600
mov     eax, [esp+40h+y]
push    0
mov     ecx, [esp+44h+x]
push    eax
push    ecx
push    esi
call    ebx
mov     ecx, [esp+40h+y]
mov     edx, [esp+40h+var_8]
push    ecx
push    edx
push    esi
call    ebp
mov     ecx, [esp+40h+y]
push    0
mov     edx, [esp+44h+x]
push    ecx
push    edx
push    esi
call    ebx
mov     ecx, [esp+40h+var_4]
mov     edx, [esp+40h+x]
push    ecx
push    edx
push    esi
call    ebp
mov     eax, [esp+40h+y]
push    0
inc     eax
mov     ecx, [esp+44h+x]
push    eax
push    ecx
push    esi
call    ebx
mov     eax, [esp+40h+y]
inc     eax
push    eax
mov     eax, [esp+44h+var_8]
dec     eax
push    eax
push    esi
call    ebp
mov     ecx, [esp+40h+y]
push    0
mov     eax, [esp+44h+x]
push    ecx
inc     eax
push    eax
push    esi
call    ebx
mov     eax, [esp+40h+var_4]
dec     eax
push    eax
mov     eax, [esp+44h+x]
inc     eax
push    eax
push    esi
call    ebp
lea     ecx, [esp+40h+var_20]
push    ecx
push    esi
call    sub_407280
add     esp, 8
mov     eax, [esp+40h+var_4]
dec     eax
push    eax
mov     eax, [esp+44h+var_8]
dec     eax
push    eax
mov     eax, [esp+48h+y]
add     eax, 2
push    eax
mov     eax, [esp+4ch+x]
add     eax, 2
push    eax
push    esi
call    sub_407300
lea     ecx, [esp+54h+var_20]
mov     edx, [esp+54h+var_30]
add     esp, 14h
push    ecx
push    edx
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      loc_4076d3
mov     eax, [esp+40h+var_4]
push    0
sub     eax, 2
push    eax
mov     eax, [esp+48h+x]
inc     eax
push    eax
push    esi
call    ebx
mov     eax, [esp+40h+var_4]
mov     ecx, [esp+40h+var_8]
sub     eax, 2
push    eax
push    ecx
push    esi
call    ebp
mov     eax, [esp+40h+var_4]
push    0
dec     eax
mov     ecx, [esp+44h+x]
push    eax
push    ecx
push    esi
call    ebx
mov     eax, [esp+40h+var_4]
mov     ecx, [esp+40h+var_8]
dec     eax
push    eax
push    ecx
push    esi
call    ebp
mov     eax, [esp+40h+y]
push    0
inc     eax
push    eax
mov     eax, [esp+48h+var_8]
sub     eax, 2
push    eax
push    esi
call    ebx
mov     eax, [esp+40h+var_4]
dec     eax
push    eax
mov     eax, [esp+44h+var_8]
sub     eax, 2
push    eax
push    esi
call    ebp
mov     ecx, [esp+40h+y]
push    0
mov     eax, [esp+44h+var_8]
push    ecx
dec     eax
push    eax
push    esi
call    ebx
mov     ecx, [esp+40h+var_4]
mov     eax, [esp+40h+var_8]
push    ecx
dec     eax
push    eax
push    esi
call    ebp
lea     ecx, [esp+40h+var_20]
push    ecx
push    esi
call    sub_407280
add     esp, 8
lea     eax, [esp+40h+var_18]
push    eax
push    esi
call    sub_4072d0
add     esp, 8
push    edi
push    esi
call    ds:restoredc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     ecx, [esp+arg_4]
sub     esp, 34h
lea     edx, [esp+34h+rc]
push    ebx
push    esi
mov     eax, [ecx]
push    edi
mov     ebx, [ecx+4]
push    ebp
mov     [edx], eax
mov     ebp, [ecx+8]
mov     eax, [ecx+0ch]
lea     ecx, [esp+44h+var_28]
push    0
push    ecx
mov     [edx+4], ebx
lea     ecx, [esp+4ch+color]
mov     [edx+8], ebp
mov     [edx+0ch], eax
lea     edx, [esp+4ch+var_24]
lea     eax, [esp+4ch+var_34]
push    edx
mov     esi, [esp+50h+hdc]
push    eax
push    ecx
push    0
push    esi
call    sub_405a80
add     esp, 1ch
push    esi
call    ds:savedc
mov     [esp+44h+nsaveddc], eax
test    eax, eax
jz      loc_4079e1
push    0dh
push    esi
call    ds:setrop2
cmp     [esp+44h+arg_c], 0
jz      short loc_4077b1
lea     eax, [esp+44h+var_20]
mov     ecx, [esp+44h+color]
push    eax
push    ecx
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_4077a2
lea     eax, [esp+44h+rc]
push    eax
push    esi
call    sub_451d50
lea     eax, [esp+4ch+var_20]
add     esp, 8
push    eax
push    esi
call    sub_407280
add     esp, 8
lea     eax, [esp+44h+rc]
push    0ffffffffh
push    0ffffffffh
push    eax
call    ds:inflaterect
mov     ebx, [esp+44h+arg_8]
mov     eax, [esp+44h+color]
test    ebx, ebx
jnz     short loc_4077c1
mov     eax, [esp+44h+var_24]
lea     ecx, [esp+44h+var_20]
push    ecx
push    eax
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_40782c
mov     eax, [esp+44h+rc.top]
push    0
mov     ecx, [esp+48h+rc.left]
push    eax
push    ecx
mov     ebp, ds:movetoex
push    esi
call    ebp
mov     ecx, [esp+44h+rc.top]
mov     eax, [esp+44h+rc.right]
push    ecx
dec     eax
push    eax
mov     edi, ds:lineto
push    esi
call    edi
mov     ecx, [esp+44h+rc.top]
push    0
mov     eax, [esp+48h+rc.left]
push    ecx
push    eax
push    esi
call    ebp
mov     eax, [esp+44h+rc.bottom]
mov     ecx, [esp+44h+rc.left]
dec     eax
push    eax
push    ecx
push    esi
call    edi
lea     ecx, [esp+44h+var_20]
push    ecx
push    esi
call    sub_407280
add     esp, 8
jmp     short loc_407838
mov     edi, ds:lineto
mov     ebp, ds:movetoex
mov     eax, [esp+44h+var_24]
test    ebx, ebx
jnz     short loc_407844
mov     eax, [esp+44h+color]
lea     ecx, [esp+44h+var_20]
push    ecx
push    eax
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_4078a3
mov     eax, [esp+44h+rc.bottom]
push    0
dec     eax
mov     ecx, [esp+48h+rc.left]
push    eax
push    ecx
push    esi
call    ebp
mov     eax, [esp+44h+rc.bottom]
mov     ecx, [esp+44h+rc.right]
dec     eax
push    eax
push    ecx
push    esi
call    edi
mov     ecx, [esp+44h+rc.top]
push    0
mov     eax, [esp+48h+rc.right]
push    ecx
dec     eax
push    eax
push    esi
call    ebp
mov     ecx, [esp+44h+rc.bottom]
mov     eax, [esp+44h+rc.right]
push    ecx
dec     eax
push    eax
push    esi
call    edi
lea     ecx, [esp+44h+var_20]
push    ecx
push    esi
call    sub_407280
add     esp, 8
lea     eax, [esp+44h+rc]
push    0ffffffffh
push    0ffffffffh
push    eax
call    ds:inflaterect
mov     eax, [esp+44h+var_28]
test    ebx, ebx
jnz     short loc_4078be
mov     eax, [esp+44h+var_34]
lea     ecx, [esp+44h+var_20]
push    ecx
push    eax
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_40791b
mov     eax, [esp+44h+rc.top]
push    0
mov     ecx, [esp+48h+rc.left]
push    eax
push    ecx
push    esi
call    ebp
mov     ecx, [esp+44h+rc.top]
mov     eax, [esp+44h+rc.right]
push    ecx
dec     eax
push    eax
push    esi
call    edi
mov     ecx, [esp+44h+rc.top]
push    0
mov     edx, [esp+48h+rc.left]
push    ecx
push    edx
push    esi
call    ebp
mov     eax, [esp+44h+rc.bottom]
mov     ecx, [esp+44h+rc.left]
dec     eax
push    eax
push    ecx
push    esi
call    edi
lea     ecx, [esp+44h+var_20]
push    ecx
push    esi
call    sub_407280
add     esp, 8
mov     eax, [esp+44h+var_34]
test    ebx, ebx
jnz     short loc_407927
mov     eax, [esp+44h+var_28]
lea     ecx, [esp+44h+var_20]
push    ecx
push    eax
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_407986
mov     eax, [esp+44h+rc.bottom]
push    0
dec     eax
mov     ecx, [esp+48h+rc.left]
push    eax
push    ecx
push    esi
call    ebp
mov     eax, [esp+44h+rc.bottom]
mov     ecx, [esp+44h+rc.right]
dec     eax
push    eax
push    ecx
push    esi
call    edi
mov     ecx, [esp+44h+rc.top]
push    0
mov     eax, [esp+48h+rc.right]
push    ecx
dec     eax
push    eax
push    esi
call    ebp
mov     ecx, [esp+44h+rc.bottom]
mov     eax, [esp+44h+rc.right]
push    ecx
dec     eax
push    eax
push    esi
call    edi
lea     ecx, [esp+44h+var_20]
push    ecx
push    esi
call    sub_407280
add     esp, 8
lea     eax, [esp+44h+rc]
push    0ffffffffh
push    0ffffffffh
push    eax
call    ds:inflaterect
lea     eax, [esp+44h+var_18]
mov     ecx, [esp+44h+var_34]
push    eax
push    ecx
push    esi
call    sub_4072a0
mov     eax, [esp+50h+rc.bottom]
add     esp, 0ch
inc     eax
mov     ecx, [esp+44h+rc.top]
mov     edx, [esp+44h+rc.left]
push    eax
mov     eax, [esp+48h+rc.right]
inc     eax
push    eax
push    ecx
push    edx
push    esi
call    sub_407300
lea     ecx, [esp+58h+var_18]
add     esp, 14h
push    ecx
push    esi
call    sub_4072d0
mov     ecx, [esp+4ch+nsaveddc]
add     esp, 8
push    ecx
push    esi
call    ds:restoredc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn
sub     esp, 5ch
push    ebx
push    esi
mov     esi, [esp+64h+arg_4]
push    edi
push    ebp
mov     ecx, [esi]
mov     eax, [esi+8]
sub     eax, ecx
sub     eax, 0dh
cdq
sub     eax, edx
sar     eax, 1
add     eax, ecx
mov     ecx, [esi+4]
mov     [esp+6ch+x], eax
add     eax, 0dh
mov     [esp+6ch+var_24], eax
mov     eax, [esi+0ch]
sub     eax, ecx
sub     eax, 0dh
cdq
sub     eax, edx
sar     eax, 1
lea     edx, [esp+6ch+color]
add     eax, ecx
lea     ecx, [esp+6ch+var_50]
mov     [esp+6ch+y], eax
push    ecx
add     eax, 0dh
push    edx
lea     ecx, [esp+74h+var_54]
lea     edx, [esp+74h+var_48]
mov     [esp+74h+var_20], eax
lea     eax, [esp+74h+var_44]
mov     esi, [esp+74h+hdc]
push    eax
lea     eax, [esp+78h+var_4c]
push    ecx
push    edx
push    eax
push    esi
call    sub_405a80
add     esp, 1ch
push    esi
call    ds:savedc
mov     [esp+6ch+nsaveddc], eax
test    eax, eax
jz      loc_407d62
push    0dh
push    esi
call    ds:setrop2
lea     eax, [esp+6ch+var_3c]
mov     ecx, [esp+6ch+color]
push    eax
push    ecx
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_407aee
mov     eax, [esp+6ch+y]
push    0
mov     ecx, [esp+70h+x]
push    eax
push    ecx
push    esi
call    ds:movetoex
mov     ecx, [esp+6ch+y]
mov     eax, [esp+6ch+var_24]
push    ecx
dec     eax
push    eax
push    esi
call    ds:lineto
mov     ecx, [esp+6ch+y]
push    0
mov     edx, [esp+70h+x]
push    ecx
push    edx
push    esi
call    ds:movetoex
mov     eax, [esp+6ch+var_20]
mov     ecx, [esp+6ch+x]
dec     eax
push    eax
push    ecx
push    esi
call    ds:lineto
lea     ecx, [esp+6ch+var_3c]
push    ecx
push    esi
call    sub_407280
add     esp, 8
lea     eax, [esp+6ch+var_3c]
mov     ecx, [esp+6ch+var_44]
push    eax
push    ecx
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_407b61
mov     eax, [esp+6ch+var_20]
push    0
dec     eax
mov     ecx, [esp+70h+x]
push    eax
push    ecx
push    esi
call    ds:movetoex
mov     eax, [esp+6ch+var_20]
mov     ecx, [esp+6ch+var_24]
dec     eax
push    eax
push    ecx
push    esi
call    ds:lineto
mov     ecx, [esp+6ch+y]
push    0
mov     eax, [esp+70h+var_24]
push    ecx
dec     eax
push    eax
push    esi
call    ds:movetoex
mov     ecx, [esp+6ch+var_20]
mov     eax, [esp+6ch+var_24]
push    ecx
dec     eax
push    eax
push    esi
call    ds:lineto
lea     ecx, [esp+6ch+var_3c]
push    ecx
push    esi
call    sub_407280
add     esp, 8
lea     eax, [esp+6ch+x]
push    0ffffffffh
push    0ffffffffh
mov     edi, ds:inflaterect
push    eax
call    edi
lea     ecx, [esp+6ch+var_3c]
mov     eax, [esp+6ch+var_48]
push    ecx
push    eax
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_407be3
mov     eax, [esp+6ch+y]
push    0
mov     ecx, [esp+70h+x]
push    eax
push    ecx
push    esi
call    ds:movetoex
mov     ecx, [esp+6ch+y]
mov     eax, [esp+6ch+var_24]
push    ecx
dec     eax
push    eax
push    esi
call    ds:lineto
mov     ecx, [esp+6ch+y]
push    0
mov     edx, [esp+70h+x]
push    ecx
push    edx
push    esi
call    ds:movetoex
mov     eax, [esp+6ch+var_20]
mov     ecx, [esp+6ch+x]
dec     eax
push    eax
push    ecx
push    esi
call    ds:lineto
lea     ecx, [esp+6ch+var_3c]
push    ecx
push    esi
call    sub_407280
add     esp, 8
lea     eax, [esp+6ch+var_3c]
mov     ecx, [esp+6ch+var_54]
push    eax
push    ecx
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_407c56
mov     eax, [esp+6ch+var_20]
push    0
dec     eax
mov     ecx, [esp+70h+x]
push    eax
push    ecx
push    esi
call    ds:movetoex
mov     eax, [esp+6ch+var_20]
mov     ecx, [esp+6ch+var_24]
dec     eax
push    eax
push    ecx
push    esi
call    ds:lineto
mov     ecx, [esp+6ch+y]
push    0
mov     eax, [esp+70h+var_24]
push    ecx
dec     eax
push    eax
push    esi
call    ds:movetoex
mov     ecx, [esp+6ch+var_20]
mov     eax, [esp+6ch+var_24]
push    ecx
dec     eax
push    eax
push    esi
call    ds:lineto
lea     ecx, [esp+6ch+var_3c]
push    ecx
push    esi
call    sub_407280
add     esp, 8
lea     eax, [esp+6ch+x]
push    0ffffffffh
push    0ffffffffh
push    eax
call    edi
cmp     [esp+6ch+arg_8], 0
jnz     short loc_407c78
cmp     [esp+6ch+arg_10], 0
jnz     short loc_407c78
mov     eax, [esp+6ch+var_4c]
jmp     short loc_407c7c
mov     eax, [esp+6ch+var_54]
lea     ecx, [esp+6ch+var_34]
push    ecx
push    eax
push    esi
call    sub_4072a0
mov     eax, [esp+78h+var_20]
add     esp, 0ch
inc     eax
mov     ecx, [esp+6ch+y]
mov     edx, [esp+6ch+x]
push    eax
mov     eax, [esp+70h+var_24]
inc     eax
push    eax
push    ecx
push    edx
push    esi
call    sub_407300
lea     ecx, [esp+80h+var_34]
add     esp, 14h
push    ecx
push    esi
call    sub_4072d0
add     esp, 8
cmp     [esp+6ch+arg_c], 0
jz      loc_407d56
lea     eax, [esp+6ch+var_3c]
mov     ecx, [esp+6ch+var_50]
push    eax
push    ecx
push    1
push    esi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_407d56
mov     edi, [esp+6ch+x]
mov     eax, [esp+6ch+y]
inc     edi
mov     ecx, 4
mov     [esp+6ch+var_5c], eax
mov     [esp+6ch+var_18], ecx
mov     eax, 3
mov     [esp+6ch+var_10], ecx
mov     [esp+6ch+var_1c], eax
mov     [esp+6ch+var_c], eax
mov     [esp+6ch+var_14], 5
mov     [esp+6ch+var_8], 2
mov     [esp+6ch+var_4], 1
lea     ebx, [esp+6ch+var_1c]
mov     ebp, [ebx]
push    0
add     ebp, [esp+70h+var_5c]
add     ebx, 4
push    ebp
push    edi
push    esi
add     ebp, 3
call    ds:movetoex
push    ebp
push    edi
push    esi
inc     edi
call    ds:lineto
lea     eax, [esp+6ch]
cmp     ebx, eax
jb      short loc_407d1f
lea     eax, [esp+6ch+var_3c]
push    eax
push    esi
call    sub_407280
add     esp, 8
mov     eax, [esp+6ch+nsaveddc]
push    eax
push    esi
call    ds:restoredc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
sub     esp, 38h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+48h+arg_4]
mov     ecx, [edi]
mov     eax, [edi+8]
sub     eax, ecx
sub     eax, 0ch
cdq
sub     eax, edx
sar     eax, 1
lea     esi, [ecx+eax]
mov     eax, [edi+0ch]
lea     ecx, [esi+0ch]
mov     [esp+48h+var_8], ecx
mov     ecx, [edi+4]
sub     eax, ecx
sub     eax, 0ch
cdq
sub     eax, edx
lea     edx, [esp+48h+color]
sar     eax, 1
lea     ebx, [ecx+eax]
lea     eax, [esp+48h+var_2c]
push    eax
push    edx
lea     ecx, [ebx+0ch]
lea     eax, [esp+50h+var_34]
lea     edx, [esp+50h+var_24]
mov     [esp+50h+var_4], ecx
lea     ecx, [esp+50h+var_20]
mov     edi, [esp+50h+hdc]
push    ecx
push    eax
lea     ecx, [esp+58h+var_28]
push    edx
push    ecx
push    edi
call    sub_405a80
add     esp, 1ch
mov     ebp, ds:savedc
push    edi
call    ebp
mov     [esp+48h+nsaveddc], eax
test    eax, eax
jz      loc_40826d
push    0dh
push    edi
call    ds:setrop2
lea     eax, [esp+48h+var_18]
mov     ecx, [esp+48h+color]
push    eax
push    ecx
push    1
push    edi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_407e8c
lea     eax, [ebx+4]
push    0
push    eax
push    esi
push    edi
call    ds:movetoex
lea     eax, [ebx+8]
mov     ebp, ds:lineto
push    eax
push    esi
push    edi
call    ebp
lea     ecx, [ebx+2]
push    0
push    ecx
lea     eax, [esi+1]
push    eax
push    edi
call    ds:movetoex
lea     ecx, [ebx+0ah]
lea     edx, [esi+1]
push    ecx
push    edx
push    edi
call    ebp
lea     ecx, [esi+4]
push    0
push    ebx
push    ecx
push    edi
call    ds:movetoex
lea     ecx, [esi+8]
push    ebx
push    ecx
push    edi
call    ebp
lea     ecx, [esi+2]
push    0
lea     edx, [ebx+1]
push    edx
push    ecx
push    edi
call    ds:movetoex
lea     ecx, [ebx+1]
lea     edx, [esi+0ah]
push    ecx
push    edx
push    edi
call    ebp
lea     ecx, [esp+48h+var_18]
push    ecx
push    edi
call    sub_407280
add     esp, 8
jmp     short loc_407e92
mov     ebp, ds:lineto
lea     eax, [esp+48h+var_18]
mov     ecx, [esp+48h+var_20]
push    eax
push    ecx
push    1
push    edi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      loc_407f4d
mov     eax, [esp+48h+var_4]
lea     edx, [esi+4]
dec     eax
push    0
mov     [esp+4ch+y], eax
push    eax
push    edx
push    edi
call    ds:movetoex
lea     edx, [esi+8]
mov     ecx, [esp+48h+y]
push    ecx
push    edx
push    edi
call    ebp
mov     edx, [esp+48h+var_4]
lea     eax, [esi+2]
sub     edx, 2
push    0
mov     [esp+4ch+y], edx
push    edx
push    eax
push    edi
call    ds:movetoex
mov     ecx, [esp+48h+y]
lea     edx, [esi+0ah]
push    ecx
push    edx
push    edi
call    ebp
lea     edx, [ebx+4]
mov     ecx, [esp+48h+var_8]
dec     ecx
push    0
mov     [esp+4ch+y], ecx
push    edx
push    ecx
push    edi
call    ds:movetoex
lea     ecx, [ebx+8]
mov     edx, [esp+48h+y]
push    ecx
push    edx
push    edi
call    ebp
lea     edx, [ebx+2]
mov     ecx, [esp+48h+var_8]
sub     ecx, 2
push    0
mov     [esp+4ch+y], ecx
push    edx
push    ecx
push    edi
call    ds:movetoex
lea     ecx, [ebx+0ah]
mov     edx, [esp+48h+y]
push    ecx
push    edx
push    edi
call    ebp
lea     ecx, [esp+48h+var_18]
push    ecx
push    edi
call    sub_407280
add     esp, 8
lea     eax, [esp+48h+var_18]
mov     ecx, [esp+48h+var_24]
push    eax
push    ecx
push    1
push    edi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_407fe4
lea     eax, [ebx+4]
push    0
push    eax
lea     ecx, [esi+1]
push    ecx
push    edi
call    ds:movetoex
lea     ecx, [ebx+8]
lea     edx, [esi+1]
push    ecx
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+2]
push    ecx
lea     edx, [esi+2]
push    edx
push    edi
call    ds:movetoex
lea     ecx, [ebx+0ah]
lea     edx, [esi+2]
push    ecx
push    edx
push    edi
call    ebp
lea     edx, [esi+4]
push    0
lea     ecx, [ebx+1]
push    ecx
push    edx
push    edi
call    ds:movetoex
lea     edx, [esi+8]
lea     ecx, [ebx+1]
push    ecx
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+2]
push    ecx
lea     edx, [esi+2]
push    edx
push    edi
call    ds:movetoex
lea     ecx, [ebx+2]
lea     edx, [esi+0ah]
push    ecx
push    edx
push    edi
call    ebp
lea     ecx, [esp+48h+var_18]
push    ecx
push    edi
call    sub_407280
add     esp, 8
lea     eax, [esp+48h+var_18]
mov     ecx, [esp+48h+var_34]
push    eax
push    ecx
push    1
push    edi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      loc_4080a3
mov     eax, [esp+48h+var_4]
lea     edx, [esi+4]
sub     eax, 2
push    0
mov     [esp+4ch+y], eax
push    eax
push    edx
push    edi
call    ds:movetoex
lea     edx, [esi+8]
mov     ecx, [esp+48h+y]
push    ecx
push    edx
push    edi
call    ebp
mov     edx, [esp+48h+var_4]
lea     eax, [esi+2]
sub     edx, 3
push    0
mov     [esp+4ch+y], edx
push    edx
push    eax
push    edi
call    ds:movetoex
mov     ecx, [esp+48h+y]
lea     edx, [esi+0ah]
push    ecx
push    edx
push    edi
call    ebp
lea     edx, [ebx+4]
mov     ecx, [esp+48h+var_8]
sub     ecx, 2
push    0
mov     [esp+4ch+y], ecx
push    edx
push    ecx
push    edi
call    ds:movetoex
lea     ecx, [ebx+8]
mov     edx, [esp+48h+y]
push    ecx
push    edx
push    edi
call    ebp
lea     edx, [ebx+3]
mov     ecx, [esp+48h+var_8]
sub     ecx, 3
push    0
mov     [esp+4ch+x], ecx
push    edx
push    ecx
push    edi
call    ds:movetoex
lea     ecx, [ebx+0ah]
mov     edx, [esp+48h+x]
push    ecx
push    edx
push    edi
call    ebp
lea     ecx, [esp+48h+var_18]
push    ecx
push    edi
call    sub_407280
add     esp, 8
cmp     [esp+48h+arg_8], 0
jnz     short loc_4080b7
cmp     [esp+48h+arg_10], 0
jnz     short loc_4080b7
mov     eax, [esp+48h+var_28]
jmp     short loc_4080bb
mov     eax, [esp+48h+var_34]
lea     ecx, [esp+48h+var_18]
push    ecx
push    eax
push    1
push    edi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      loc_4081c2
push    0
lea     eax, [ebx+4]
push    eax
lea     ecx, [esi+2]
push    ecx
push    edi
call    ds:movetoex
lea     ecx, [ebx+8]
lea     edx, [esi+2]
push    ecx
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+3]
push    ecx
lea     edx, [esi+3]
push    edx
push    edi
call    ds:movetoex
lea     ecx, [ebx+9]
lea     edx, [esi+3]
push    ecx
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+2]
push    ecx
lea     edx, [esi+4]
push    edx
push    edi
call    ds:movetoex
lea     ecx, [ebx+0ah]
lea     edx, [esi+4]
push    ecx
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+2]
push    ecx
lea     edx, [esi+5]
push    edx
push    edi
call    ds:movetoex
lea     ecx, [ebx+0ah]
lea     edx, [esi+5]
push    ecx
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+2]
push    ecx
lea     edx, [esi+6]
push    edx
push    edi
call    ds:movetoex
lea     ecx, [ebx+0ah]
push    ecx
lea     edx, [esi+6]
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+2]
push    ecx
lea     edx, [esi+7]
push    edx
push    edi
call    ds:movetoex
lea     ecx, [ebx+0ah]
lea     edx, [esi+7]
push    ecx
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+3]
push    ecx
lea     edx, [esi+8]
push    edx
push    edi
call    ds:movetoex
lea     ecx, [ebx+9]
lea     edx, [esi+8]
push    ecx
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+4]
push    ecx
lea     edx, [esi+9]
push    edx
push    edi
call    ds:movetoex
lea     ecx, [ebx+8]
lea     edx, [esi+9]
push    ecx
push    edx
push    edi
call    ebp
lea     ecx, [esp+48h+var_18]
push    ecx
push    edi
call    sub_407280
add     esp, 8
cmp     [esp+48h+arg_c], 0
jz      loc_408261
lea     eax, [esp+48h+var_18]
mov     ecx, [esp+48h+var_2c]
push    eax
push    ecx
push    1
push    edi
call    sub_407240
add     esp, 10h
test    eax, eax
jz      short loc_408261
push    0
lea     eax, [ebx+5]
push    eax
lea     ecx, [esi+4]
push    ecx
push    edi
call    ds:movetoex
lea     ecx, [ebx+7]
lea     edx, [esi+4]
push    ecx
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+4]
push    ecx
lea     edx, [esi+5]
push    edx
push    edi
call    ds:movetoex
lea     ecx, [ebx+8]
lea     edx, [esi+5]
push    ecx
push    edx
push    edi
call    ebp
push    0
lea     ecx, [ebx+4]
push    ecx
lea     edx, [esi+6]
push    edx
push    edi
call    ds:movetoex
lea     edx, [esi+6]
lea     ecx, [ebx+8]
push    ecx
add     esi, 7
push    edx
push    edi
call    ebp
lea     ecx, [ebx+5]
push    0
push    ecx
add     ebx, 7
push    esi
push    edi
call    ds:movetoex
push    ebx
push    esi
push    edi
call    ebp
lea     eax, [esp+48h+var_18]
push    eax
push    edi
call    sub_407280
add     esp, 8
mov     eax, [esp+48h+nsaveddc]
push    eax
push    edi
call    ds:restoredc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 38h
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    esi
push    eax
call    sub_404290
add     esp, 4
mov     esi, eax
push    1
push    esi
call    sub_445700
add     esp, 8
cmp     ax, 2
jnz     short loc_4082ad
mov     ax, 1
pop     esi
add     esp, 4
retn
lea     eax, [esp+8+var_4]
push    4
push    eax
push    1
push    esi
call    sub_445670
mov     ecx, [esp+18h+var_4]
add     esp, 10h
test    eax, eax
jnz     short loc_4082cb
mov     cx, 6
mov     ax, cx
pop     esi
add     esp, 4
retn
push    esi
push    edi
xor     edi, edi
cmp     ds:dword_4a6058, edi
jz      short loc_4082f1
call    sub_4083c0
mov     si, [esp+8+arg_0]
cmp     si, 1
jge     short loc_408304
mov     eax, 1
pop     edi
pop     esi
retn
movsx   eax, si
push    2
mov     ecx, eax
shl     eax, 6
sub     eax, ecx
push    eax
call    sub_45bd50
add     esp, 8
mov     ds:dword_4a6060, eax
test    eax, eax
jz      short loc_40833d
mov     ds:word_4a605e, si
mov     edi, 1
mov     ds:word_4a605c, 0
mov     ds:dword_4a6058, edi
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, ds:dword_4a6058
retn
push    esi
xor     esi, esi
cmp     ds:dword_4a6058, esi
jz      short loc_4083a1
cmp     ds:word_4a605c, si
jle     short loc_408398
movsx   eax, si
inc     si
mov     ecx, eax
shl     eax, 6
sub     eax, ecx
add     eax, ds:dword_4a6060
push    eax
call    sub_408920
add     esp, 4
cmp     ds:word_4a605c, si
jg      short loc_408374
mov     ds:word_4a605c, 0
test    si, si
mov     eax, 1
mov     ds:dword_4a6064, 0
jg      short loc_4083b7
xor     eax, eax
pop     esi
retn
push    esi
xor     esi, esi
cmp     ds:dword_4a6058, esi
jz      short loc_4083f8
call    sub_408360
mov     eax, ds:dword_4a6060
push    eax
call    sub_45bdb0
mov     ds:word_4a605e, si
add     esp, 4
mov     ds:word_4a605c, si
mov     ds:dword_4a6060, esi
mov     ds:dword_4a6058, esi
pop     esi
retn
mov     eax, ds:dword_4a6064
retn
sub     esp, 4
cmp     ds:dword_4a6058, 0
push    ebx
push    esi
push    edi
jz      loc_4084f6
mov     ebx, [esp+10h+arg_4]
cmp     dword ptr [ebx+6], 0
jz      loc_4084f6
mov     cx, [ebx+4]
lea     eax, [esp+10h+src]
mov     esi, [esp+10h+arg_0]
push    eax
push    ecx
push    esi
call    sub_4086e0
add     esp, 0ch
test    eax, eax
jz      short loc_40845b
mov     eax, [esp+10h+src]
push    eax
call    sub_408920
add     esp, 4
jmp     short loc_4084bc
mov     ax, ds:word_4a605e
cmp     ds:word_4a605c, ax
jnz     short loc_408487
push    1
call    sub_408770
mov     cx, [ebx+4]
lea     eax, [esp+14h+src]
add     esp, 4
push    eax
push    ecx
push    esi
call    sub_4086e0
add     esp, 0ch
movsx   eax, ds:word_4a605c
mov     ecx, eax
shl     eax, 6
sub     eax, ecx
sub     eax, [esp+10h+src]
add     eax, ds:dword_4a6060
test    eax, eax
jle     short loc_4084b5
push    eax
mov     eax, [esp+14h+src]
push    eax
add     eax, 3fh
push    eax
call    _memcpy
add     esp, 0ch
inc     ds:word_4a605c
push    ebx
call    sub_408a10
add     esp, 4
mov     esi, ebx
mov     [ebx+3bh], eax
call    ds:gettickcount
mov     edi, [esp+10h+src]
mov     ecx, 0fh
mov     [ebx+37h], eax
rep movsd
movsw
movsb
mov     eax, [ebx+3bh]
pop     edi
pop     esi
add     ds:dword_4a6064, eax
mov     eax, 1
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
push    edi
push    ebp
call    sub_408830
mov     ebx, eax
mov     esi, [esp+10h+arg_0]
test    esi, esi
jz      short loc_40851e
cmp     ebx, esi
jl      short loc_408522
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     ebx, esi
jge     short loc_408576
cmp     ds:word_4a605c, 0
jle     short loc_408576
call    sub_4087f0
movsx   ebp, ax
mov     edi, ebp
shl     edi, 6
sub     edi, ebp
add     edi, ds:dword_4a6060
push    edi
add     ebx, [edi+3bh]
call    sub_408920
dec     ds:word_4a605c
add     esp, 4
movsx   ecx, ds:word_4a605c
sub     ecx, ebp
mov     eax, ecx
shl     ecx, 6
sub     ecx, eax
lea     eax, [edi+3fh]
push    ecx
push    eax
push    edi
call    _memcpy
add     esp, 0ch
cmp     ebx, esi
jl      short loc_408522
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
cmp     ds:dword_4a6058, 0
push    esi
jz      loc_408638
lea     eax, [esp+8+var_4]
mov     esi, [esp+8+arg_0]
push    eax
push    0
push    esi
call    sub_4086e0
add     esp, 0ch
cmp     ds:word_4a605c, 0
jle     loc_408638
mov     eax, ds:dword_4a6060
cmp     [esp+8+var_4], eax
jb      short loc_408638
movsx   eax, ds:word_4a605c
mov     ecx, eax
shl     eax, 6
sub     eax, ecx
add     eax, ds:dword_4a6060
cmp     eax, [esp+8+var_4]
jbe     short loc_408638
mov     eax, [esp+8+var_4]
cmp     [eax], esi
jnz     short loc_408638
cmp     word ptr [eax+4], 0
jnz     short loc_40862e
push    eax
call    sub_408920
dec     ds:word_4a605c
add     esp, 4
mov     eax, ds:dword_4a6060
mov     ecx, 3fh
sub     eax, [esp+8+var_4]
cdq
idiv    ecx
movsx   ecx, ds:word_4a605c
add     ecx, eax
mov     eax, ecx
shl     ecx, 6
sub     ecx, eax
mov     eax, [esp+8+var_4]
push    ecx
add     eax, 3fh
push    eax
mov     eax, [esp+10h+var_4]
push    eax
call    _memcpy
add     esp, 0ch
mov     eax, [esp+8+var_4]
mov     word ptr [eax+4], 0
pop     esi
add     esp, 4
retn
sub     esp, 4
cmp     ds:dword_4a6058, 0
push    esi
push    edi
jz      short loc_4086a9
lea     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+arg_4]
mov     edx, [esp+0ch+arg_0]
push    eax
push    ecx
push    edx
call    sub_4086e0
add     esp, 0ch
test    eax, eax
jz      short loc_4086a9
mov     eax, [esp+0ch+arg_8]
mov     ecx, [esp+0ch+var_4]
push    eax
push    ecx
call    sub_408950
add     esp, 8
test    eax, eax
jz      short loc_4086a9
call    ds:gettickcount
mov     ecx, [esp+0ch+var_4]
mov     edi, [esp+0ch+arg_c]
mov     [ecx+37h], eax
mov     ecx, 0fh
mov     esi, [esp+0ch+var_4]
rep movsd
movsw
movsb
mov     eax, 1
pop     edi
pop     esi
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_4089c0
add     esp, 8
retn
xor     dx, dx
push    ebx
push    esi
push    edi
mov     si, ds:word_4a605c
push    ebp
dec     si
js      short loc_40873b
mov     cx, [esp+10h+arg_4]
mov     eax, [esp+10h+arg_0]
movsx   edi, si
movsx   ebx, dx
add     edi, ebx
sar     edi, 1
movsx   ebx, di
mov     ebp, ebx
shl     ebx, 6
sub     ebx, ebp
add     ebx, ds:dword_4a6060
mov     ebp, [ebx]
cmp     eax, ebp
jge     short loc_408721
lea     esi, [edi-1]
jmp     short loc_408736
jg      short loc_408733
mov     bp, [ebx+4]
cmp     bp, cx
jle     short loc_408731
lea     esi, [edi-1]
jmp     short loc_408736
jge     short loc_408758
lea     edx, [edi+1]
cmp     si, dx
jge     short loc_4086fb
movsx   ecx, dx
mov     eax, ecx
shl     ecx, 6
sub     ecx, eax
mov     eax, [esp+10h+arg_8]
add     ecx, ds:dword_4a6060
pop     ebp
pop     edi
mov     [eax], ecx
xor     eax, eax
pop     esi
pop     ebx
retn
mov     eax, [esp+10h+arg_8]
pop     ebp
pop     edi
pop     esi
mov     [eax], ebx
mov     eax, 1
pop     ebx
retn
push    ebx
push    esi
push    edi
call    sub_408830
mov     si, ds:word_4a605e
sub     si, [esp+0ch+arg_0]
jns     short loc_408789
xor     si, si
cmp     ds:word_4a605c, si
jle     short loc_4087de
call    sub_4087f0
movsx   ebx, ax
mov     edi, ebx
shl     edi, 6
sub     edi, ebx
add     edi, ds:dword_4a6060
push    edi
call    sub_408920
dec     ds:word_4a605c
add     esp, 4
movsx   eax, ds:word_4a605c
sub     eax, ebx
mov     ecx, eax
shl     eax, 6
sub     eax, ecx
lea     ecx, [edi+3fh]
push    eax
push    ecx
push    edi
call    _memcpy
add     esp, 0ch
cmp     ds:word_4a605c, si
jg      short loc_408792
pop     edi
pop     esi
pop     ebx
retn
xor     cx, cx
push    esi
cmp     ds:word_4a605c, cx
push    edi
mov     eax, 0ffffffffh
mov     esi, ds:dword_4a6060
mov     edx, eax
jle     short loc_408825
mov     edi, [esi+37h]
cmp     edx, edi
jbe     short loc_408817
mov     ax, cx
mov     edx, edi
inc     cx
add     esi, 3fh
cmp     cx, ds:word_4a605c
jl      short loc_40880b
pop     edi
pop     esi
retn
sub     esp, 8
cmp     ds:word_4a605c, 0
mov     [esp+8+var_4], 0
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_408853
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    0
call    ds:createcompatibledc
mov     esi, eax
test    esi, esi
jnz     short loc_40886b
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ax, ds:word_4a605c
dec     ax
mov     [esp+18h+var_6], ax
js      loc_408906
movsx   ebx, [esp+18h+var_6]
mov     edi, ebx
shl     edi, 6
sub     edi, ebx
add     edi, ds:dword_4a6060
mov     eax, [edi+6]
push    eax
push    esi
call    ds:selectobject
mov     ebp, eax
test    ebp, ebp
jz      short loc_4088be
mov     eax, [edi+0ah]
test    eax, eax
jz      short loc_4088b4
push    eax
push    esi
call    ds:selectobject
test    eax, eax
jz      short loc_4088be
push    ebp
push    esi
call    ds:selectobject
jmp     short loc_4088fb
push    ebp
push    esi
call    ds:selectobject
mov     eax, [edi+3bh]
push    edi
add     [esp+1ch+var_4], eax
call    sub_408920
dec     ds:word_4a605c
add     esp, 4
movsx   ecx, ds:word_4a605c
sub     ecx, ebx
mov     eax, ecx
shl     ecx, 6
sub     ecx, eax
lea     eax, [edi+3fh]
push    ecx
push    eax
push    edi
call    _memcpy
add     esp, 0ch
dec     [esp+18h+var_6]
jns     loc_40887e
push    esi
call    ds:deletedc
mov     eax, [esp+18h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, ds:deleteobject
mov     eax, [edi+6]
push    eax
call    esi
mov     eax, [edi+0ah]
test    eax, eax
jz      short loc_40893c
push    eax
call    esi
mov     eax, [edi+3bh]
pop     edi
pop     esi
sub     ds:dword_4a6064, eax
retn
cmp     ds:word_4a605c, 0
push    ebx
push    esi
push    edi
push    ebp
jz      short loc_4089a1
mov     esi, [esp+10h+arg_0]
test    esi, esi
jz      short loc_4089a1
mov     edi, [esp+10h+arg_4]
mov     eax, [edi]
test    eax, eax
jz      short loc_4089a1
cmp     dword ptr [edi+0ch], 0
jz      short loc_4089a1
mov     ecx, [esi+6]
mov     ebx, ds:selectobject
push    ecx
push    eax
call    ebx
mov     ebp, eax
test    ebp, ebp
jz      short loc_4089a1
mov     eax, [esi+0ah]
test    eax, eax
jz      short loc_4089a8
push    eax
mov     eax, [edi+0ch]
push    eax
call    ebx
test    eax, eax
jnz     short loc_4089a8
push    ebp
mov     eax, [edi]
push    eax
call    ebx
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
test    edi, edi
jz      short loc_408a03
mov     esi, [esp+8+arg_4]
test    esi, esi
jz      short loc_408a03
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_4089e7
mov     eax, [esi+8]
test    eax, eax
jz      short loc_4089e7
push    eax
push    ecx
call    ds:selectobject
cmp     dword ptr [edi+0ah], 0
jz      short loc_408a03
mov     ecx, [esi+0ch]
test    ecx, ecx
jz      short loc_408a03
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_408a03
push    eax
push    ecx
call    ds:selectobject
pop     edi
pop     esi
retn
sub     esp, 18h
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+24h+arg_0]
mov     eax, [edi+6]
test    eax, eax
jz      short loc_408a42
lea     ecx, [esp+24h+pv]
mov     ebx, ds:getobjecta
push    ecx
push    18h
push    eax
call    ebx
test    eax, eax
jz      short loc_408a48
mov     esi, [esp+24h+var_10]
imul    esi, [esp+24h+var_c]
jmp     short loc_408a48
mov     ebx, ds:getobjecta
mov     eax, [edi+0ah]
test    eax, eax
jz      short loc_408a68
lea     ecx, [esp+24h+pv]
push    ecx
push    18h
push    eax
call    ebx
test    eax, eax
jz      short loc_408a68
mov     eax, [esp+24h+var_10]
imul    eax, [esp+24h+var_c]
add     esi, eax
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+nheight]
push    esi
mov     ecx, [esp+4+nwidth]
push    eax
mov     esi, [esp+8+hwnd]
push    ecx
push    0
push    esi
call    ds:createcaret
mov     eax, [esp+4+y]
mov     ecx, [esp+4+x]
push    eax
push    ecx
call    ds:setcaretpos
push    esi
call    ds:showcaret
mov     edx, [esp+4+x]
mov     ecx, [esp+4+y]
mov     ds:hwnd, esi
mov     ds:dword_4a6068, edx
pop     esi
mov     ds:dword_4a606c, ecx
retn
mov     eax, [esp+arg_0]
push    esi
push    edi
push    eax
call    sub_475620
add     esp, 4
mov     edi, eax
push    1
push    edi
call    sub_4759f0
add     esp, 8
mov     esi, eax
push    edi
call    sub_475610
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
push    edi
push    eax
call    sub_475620
add     esp, 4
mov     edi, eax
mov     eax, [esp+8+arg_4]
push    eax
push    1
push    edi
call    sub_475a20
add     esp, 0ch
mov     esi, eax
push    edi
call    sub_475610
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_408ad0
add     esp, 4
mov     ecx, eax
shr     ecx, 10h
mov     ax, cx
retn
mov     eax, [esp+hmem]
test    eax, eax
jz      short locret_408b71
push    eax
call    sub_475600
add     esp, 4
retn
mov     eax, [esp+arg_0]
push    esi
push    edi
push    eax
call    sub_475620
add     esp, 4
mov     esi, eax
push    esi
call    sub_475630
mov     di, ax
add     esp, 4
push    esi
call    sub_475610
add     esp, 4
test    di, di
jz      short loc_408bb1
lea     eax, [edi-1]
pop     edi
pop     esi
retn
xor     ax, ax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
push    edi
push    eax
call    sub_475620
add     esp, 4
mov     esi, eax
push    esi
call    sub_475980
add     esp, 4
mov     edi, eax
push    esi
call    sub_475610
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
retn
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
mov     ebp, [esp+10h+arg_0]
cmp     ebp, esi
jz      short loc_408c57
mov     bx, [esp+10h+arg_4]
cmp     bx, si
jz      short loc_408c57
push    ebp
call    sub_408b40
mov     di, ax
add     esp, 4
inc     bx
push    ebp
call    sub_475620
add     esp, 4
mov     ebp, eax
push    ebx
push    ebp
call    sub_4759f0
mov     bx, ax
add     esp, 8
push    ebp
call    sub_475610
add     esp, 4
test    di, di
jz      short loc_408c57
test    bx, bx
jz      short loc_408c57
movzx   eax, di
movzx   ecx, bx
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_470610
add     esp, 4
mov     esi, eax
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 40h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
mov     ebp, [esp+50h+arg_0]
cmp     ebp, esi
jz      short loc_408ce0
mov     di, [esp+50h+arg_4]
cmp     di, si
jz      short loc_408ce0
push    ebp
call    sub_408b40
mov     bx, ax
add     esp, 4
inc     di
push    ebp
call    sub_475620
add     esp, 4
mov     ebp, eax
push    edi
push    ebp
call    sub_4759f0
mov     di, ax
add     esp, 8
push    ebp
call    sub_475610
add     esp, 4
test    bx, bx
jz      short loc_408ce0
test    di, di
jz      short loc_408ce0
lea     eax, [esp+50h+buffer]
push    10h
push    1e10h
push    40h
push    eax
call    sub_47fe70
movzx   eax, bx
movzx   ecx, di
shl     eax, 10h
add     esp, 10h
or      eax, ecx
push    eax
call    sub_470640
add     esp, 4
mov     esi, eax
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
sub     esp, 40h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
mov     ebp, [esp+50h+arg_0]
cmp     ebp, esi
jz      short loc_408d7f
mov     bx, [esp+50h+arg_4]
cmp     bx, si
jz      short loc_408d7f
push    ebp
call    sub_408b40
mov     di, ax
add     esp, 4
inc     bx
push    ebp
call    sub_475620
add     esp, 4
mov     ebp, eax
push    ebx
push    ebp
call    sub_4759f0
mov     bx, ax
add     esp, 8
push    ebp
call    sub_475610
add     esp, 4
test    di, di
jz      short loc_408d7f
test    bx, bx
jz      short loc_408d7f
movzx   esi, di
movzx   eax, bx
shl     esi, 10h
or      esi, eax
push    esi
call    sub_470610
mov     ecx, [esp+54h+arg_8]
add     esp, 4
push    10h
mov     [ecx], eax
lea     eax, [esp+54h+buffer]
push    1e10h
push    40h
push    eax
call    sub_47fe70
add     esp, 10h
push    esi
call    sub_470880
add     esp, 4
mov     esi, eax
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
test    esi, esi
jz      short loc_408df5
mov     di, [esp+10h+arg_4]
test    di, di
jz      short loc_408df5
push    esi
call    sub_408b40
mov     bx, ax
add     esp, 4
inc     di
push    esi
call    sub_475620
add     esp, 4
mov     ebp, eax
push    edi
push    ebp
call    sub_4759f0
mov     si, ax
add     esp, 8
push    ebp
call    sub_475610
add     esp, 4
test    bx, bx
jz      short loc_408df5
test    si, si
jz      short loc_408df5
movzx   eax, bx
movzx   ecx, si
shl     eax, 10h
push    0
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     dword_4ad0d4, 1
push    42h
push    410h
call    sub_45bd50
add     esp, 8
mov     dword_4ad0d0, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_461490
add     esp, 4
test    ax, ax
jle     short loc_408e5a
shr     esi, 10h
push    eax
push    esi
call    sub_408e70
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_408e5a
xor     eax, eax
pop     esi
retn
push    esi
call    sub_462ca0
add     esp, 4
pop     esi
retn
push    ebx
push    esi
push    edi
xor     esi, esi
movsx   edi, [esp+0ch+arg_0]
lea     edi, [edi+edi*4]
shl     edi, 3
add     edi, dword_4ad0d0
push    edi
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_408eec
mov     bx, [esp+0ch+arg_4]
cmp     bx, si
jz      short loc_408eec
push    edi
call    sub_48f140
movsx   ecx, bx
add     esp, 4
inc     ecx
cmp     eax, ecx
jb      short loc_408ee3
push    ecx
push    edi
call    sub_48f1d0
add     esp, 8
mov     ebx, eax
cmp     ebx, esi
jz      short loc_408ee3
test    byte ptr [ebx], 2
jz      short loc_408ee3
mov     ax, [ebx+4]
push    eax
call    sub_40a7e0
add     esp, 4
test    eax, eax
jz      short loc_408ee3
mov     si, [eax+16h]
xor     eax, eax
shl     esi, 10h
mov     ax, [ebx+6]
or      esi, eax
push    edi
call    sub_48f1a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, dword_4ad0d0
test    eax, eax
jz      short locret_408f1c
push    eax
call    sub_45bdb0
mov     dword_4ad0d0, 0
add     esp, 4
retn
push    esi
push    edi
mov     si, [esp+8+arg_0]
push    esi
call    sub_40a100
add     esp, 4
mov     edi, eax
push    esi
call    sub_409920
add     esp, 4
and     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
mov     si, [esp+4+arg_0]
push    esi
call    sub_4099f0
add     esp, 4
test    eax, eax
jz      short loc_408f86
movsx   ecx, si
mov     eax, dword_4ad0d0
lea     edx, [ecx+ecx*4]
lea     ecx, [eax+edx*8]
push    ecx
push    esi
call    sub_40a150
add     esp, 8
test    eax, eax
jz      short loc_408f86
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_461490
add     esp, 4
test    ax, ax
jle     short loc_408fb2
shr     esi, 10h
push    eax
push    esi
call    sub_408e70
add     esp, 8
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_461490
add     esp, 4
test    ax, ax
jle     short loc_408fe2
shr     esi, 10h
push    eax
push    esi
call    sub_408e70
add     esp, 8
pop     esi
retn
mov     eax, esi
pop     esi
retn
mov     eax, [esp+arg_4]
cmp     eax, 7d0h
jl      short loc_409010
cmp     eax, 0bb6h
jg      short loc_409010
mov     eax, [esp+arg_0]
push    eax
call    sub_408fc0
add     esp, 4
retn
mov     eax, [esp+arg_0]
retn
sub     esp, 204h
xor     eax, eax
mov     ax, ds:word_4a8518
push    ebx
shl     eax, 10h
push    esi
push    edi
xor     esi, esi
push    ebp
mov     al, 1
push    2010410h
push    eax
call    sub_462670
mov     edi, [esp+21ch+arg_0]
add     esp, 8
movzx   ecx, ax
test    byte ptr [edi+1], 80h
mov     [esp+214h+var_204], ecx
jnz     loc_409164
mov     cx, [edi+4]
mov     ebx, [esp+214h+arg_4]
mov     eax, [ebx]
cmp     [eax+2], cx
jnz     loc_409164
inc     word ptr [eax+4]
xor     ebp, ebp
mov     eax, [ebx]
push    100h
mov     bp, [eax+16h]
xor     eax, eax
shl     ebp, 10h
mov     ax, [edi+6]
mov     cx, [ebx+4]
or      ebp, eax
lea     eax, [esp+218h+string1]
push    eax
push    edi
push    ecx
call    sub_409cd0
add     esp, 10h
push    ebp
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_4090fb
push    ebp
call    sub_462480
add     esp, 4
cmp     ax, [edi+8]
jnz     short loc_4090fb
cmp     [esp+214h+var_204], esi
jz      short loc_4090f6
lea     eax, [esp+214h+string2]
push    100h
push    eax
push    ebp
call    sub_461570
lea     eax, [esp+220h+string2]
lea     ecx, [esp+220h+string1]
add     esp, 0ch
mov     ebp, ds:lstrcmpia
push    eax
push    ecx
call    ebp
test    eax, eax
jnz     short loc_4090fb
mov     esi, 1
cmp     [esp+214h+var_204], 0
jz      short loc_409137
test    esi, esi
jnz     short loc_40913b
lea     eax, [esp+214h+string1]
mov     edx, [ebx]
movsx   ecx, word ptr [edi+8]
push    eax
push    ecx
push    edx
call    sub_40a8e0
add     esp, 0ch
test    eax, eax
jz      short loc_409137
mov     [edi+6], ax
push    1
mov     ax, [ebx+4]
mov     esi, 1
push    eax
call    sub_4617d0
add     esp, 8
test    esi, esi
jz      short loc_40914e
mov     eax, 1
pop     ebp
or      byte ptr [edi], 2
pop     edi
pop     esi
pop     ebx
add     esp, 204h
retn
mov     eax, 1
pop     ebp
mov     word ptr [edi+6], 0
pop     edi
pop     esi
pop     ebx
add     esp, 204h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 204h
retn
sub     esp, 8
push    esi
push    edi
mov     di, [esp+10h+arg_0]
movsx   eax, di
lea     ecx, [eax+eax*4]
mov     eax, dword_4ad0d0
lea     esi, ds:0[ecx*8]
add     eax, esi
push    eax
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_4091d2
mov     [esp+10h+var_4], di
mov     eax, [esp+10h+arg_4]
mov     [esp+10h+var_8], eax
lea     eax, [esp+10h+var_8]
push    eax
push    offset sub_409020
mov     eax, dword_4ad0d0
add     eax, esi
push    eax
call    sub_48e8c0
add     esp, 0ch
pop     edi
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_c]
sub     esp, 14h
mov     [esp+14h+var_14], eax
mov     [esp+14h+var_10], ecx
mov     ax, [esp+14h+arg_0]
lea     ecx, [esp+14h+var_14]
mov     [esp+14h+var_8], ax
push    ecx
mov     [esp+18h+var_6], edx
push    offset sub_409230
mov     [esp+1ch+var_c], 0
push    offset dword_4a6080
call    sub_48e8c0
mov     eax, [esp+20h+var_c]
add     esp, 0ch
add     esp, 14h
retn
sub     esp, 0ch
push    ebx
push    esi
push    edi
push    ebp
xor     ebp, ebp
mov     edi, [esp+1ch+arg_0]
mov     bx, [edi+4]
mov     ax, [edi]
mov     [esp+1ch+var_c], ebp
test    ah, 80h
jnz     loc_409324
test    al, 1
jz      loc_409324
test    ah, 1
jz      short loc_409289
mov     esi, [esp+1ch+arg_4]
mov     ax, [esi+0ch]
mov     [edi+16h], ax
mov     cx, [edi+2]
mov     ax, [esi+0ch]
push    ecx
push    eax
call    sub_409c00
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     ecx, [edi+12h]
test    ecx, ecx
jz      short loc_4092a3
lea     eax, [esp+1ch+var_8]
lea     edx, [esp+1ch+var_c]
push    eax
push    edx
push    ecx
call    sub_44f2e0
add     esp, 0ch
mov     esi, [esp+1ch+arg_4]
cmp     dword ptr [esi], 0
jnz     short loc_4092c9
mov     dx, [esi+0ch]
mov     eax, [esi+0eh]
mov     ecx, [esp+1ch+var_c]
push    eax
push    0
push    edi
push    ecx
push    edx
call    sub_409340
add     esp, 14h
test    eax, eax
jz      short loc_4092df
mov     cx, [esi+0ch]
push    edi
push    ecx
mov     ebp, 1
call    sub_4096a0
add     esp, 8
mov     [esi+8], eax
cmp     [esp+1ch+var_c], 0
jz      short loc_4092f3
mov     eax, [esp+1ch+var_c]
push    eax
call    sub_44f4a0
add     esp, 4
cmp     word ptr [edi+16h], 0
jz      short loc_40930d
test    ebp, ebp
jz      short loc_40930d
mov     ax, [esi+0ch]
push    1
push    eax
call    sub_4617d0
add     esp, 8
cmp     dword ptr [esi+4], 0
jnz     short loc_409317
mov     [edi+4], bx
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 13ch
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+148h+arg_8]
push    ebp
cmp     [esi+16h], bx
jnz     loc_409511
test    byte ptr [esi+1], 1
jnz     loc_409511
cmp     [esp+14ch+arg_10], ebx
jz      loc_409511
xor     ebp, ebp
lea     edi, [esp+14ch+var_128]
xor     eax, eax
mov     ecx, 7
rep stosd
stosw
mov     eax, [esp+14ch+arg_4]
cmp     eax, ebx
jz      short loc_40939d
push    eax
call    sub_44f3f0
mov     [esp+150h+var_128], eax
add     esp, 4
cmp     [esp+14ch+var_128], 0
jnz     short loc_4093b4
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 13ch
retn
lea     eax, [esp+14ch+var_138]
mov     ecx, [esp+14ch+var_128]
push    eax
push    ecx
call    sub_469560
add     esp, 8
test    eax, eax
jz      short loc_409401
cmp     [esp+14ch+var_138], 0
jz      short loc_409401
lea     eax, [esp+14ch+var_134]
lea     ecx, [esp+14ch+var_13c]
mov     edx, [esp+14ch+var_138]
push    eax
push    ecx
push    edx
call    sub_44f550
add     esp, 0ch
cmp     [esp+14ch+var_13c], 0
jz      short loc_409401
mov     eax, [esp+14ch+var_13c]
mov     ecx, [esp+14ch+var_128]
push    eax
push    ecx
call    sub_44f4f0
add     esp, 8
lea     eax, [esp+14ch+var_128]
push    eax
call    sub_40a810
mov     di, ax
add     esp, 4
test    di, di
jz      short loc_409457
mov     ax, [esi+2]
cmp     di, ax
jz      short loc_409457
push    edi
push    eax
mov     eax, [esp+154h+arg_0]
push    eax
call    sub_409c70
mov     ax, [esi+2]
add     esp, 0ch
push    eax
call    sub_40a6a0
movsx   eax, di
add     esp, 4
inc     eax
mov     ebp, 1
push    eax
push    offset dword_4a6080
call    sub_48f1d0
add     esp, 8
mov     esi, eax
cmp     word ptr [esi+16h], 0
jnz     loc_409504
mov     ax, [esi]
test    ax, 1002h
jnz     short loc_409485
test    ebp, ebp
jz      short loc_409485
mov     cx, [esi+2]
push    105h
lea     eax, [esp+150h+buffer]
push    eax
push    ecx
call    sub_40a760
jmp     short loc_409499
lea     eax, [esp+14ch+buffer]
push    105h
mov     ecx, [esp+150h+var_128]
push    eax
push    ecx
call    sub_44f5e0
mov     ax, [esi+2]
lea     ecx, [esp+158h+var_130]
inc     ax
lea     edx, [esp+158h+var_12c]
mov     [esp+158h+var_120], ax
add     esp, 0ch
lea     eax, [esp+14ch+buffer]
push    ecx
mov     ecx, [esp+150h+arg_c]
push    edx
lea     edx, [esp+154h+var_128]
push    eax
push    ecx
push    1
push    edx
call    sub_469360
add     esp, 18h
mov     ebx, eax
test    ebx, ebx
jnz     short loc_409504
mov     ax, [esp+14ch+var_120]
push    1
mov     [esi+16h], ax
and     word ptr [esi], 0ffbfh
mov     ax, [esi+16h]
push    eax
call    sub_461850
add     esp, 8
cmp     dword ptr [esi+12h], 0
jnz     short loc_409504
mov     ax, [esi+16h]
push    esi
push    eax
call    sub_40a430
add     esp, 8
mov     eax, [esp+14ch+var_128]
push    eax
call    sub_44f4a0
add     esp, 4
cmp     word ptr [esi+16h], 0
jz      short loc_40955f
mov     ax, [esi+2]
mov     ecx, [esp+14ch+arg_0]
push    eax
push    ecx
call    sub_409b90
mov     ecx, [esp+154h+arg_0]
add     esp, 8
mov     word ptr [esi+4], 0
push    esi
push    ecx
call    sub_409180
add     esp, 8
cmp     word ptr [esi+4], 0
jz      short loc_40954e
or      byte ptr [esi], 20h
mov     ax, [esi]
and     ax, 0fffdh
mov     [esi], ax
and     ax, 0efffh
mov     [esi], ax
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 13ch
retn
push    0
push    offset sub_409590
push    offset dword_4a6080
call    sub_48e8c0
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
mov     cx, [eax]
test    ch, 80h
jnz     short loc_4095b0
test    cl, 1
jz      short loc_4095b0
push    0
push    0
push    0
push    eax
call    sub_4095c0
add     esp, 10h
mov     eax, 1
retn
sub     esp, 8
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+14h+arg_0]
cmp     [edi+16h], si
jnz     short loc_4095f2
cmp     [esp+14h+arg_4], 4
jz      short loc_4095e6
mov     ax, [edi+2]
push    eax
call    sub_40a6a0
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     eax, [esp+14h+var_4]
lea     ecx, [esp+14h+var_8]
push    eax
mov     edx, [edi+12h]
push    ecx
push    edx
call    sub_44f2e0
mov     ebx, [esp+20h+arg_4]
add     esp, 0ch
test    ebx, ebx
jz      short loc_40963e
test    byte ptr [edi+1], 1
jnz     short loc_409667
mov     eax, [esp+14h+arg_c]
mov     ecx, [esp+14h+arg_8]
mov     edx, [esp+14h+var_8]
push    eax
mov     ax, [edi+16h]
push    0
push    ecx
push    offset windowname
push    ebx
push    edx
push    eax
call    sub_40abc0
add     esp, 1ch
test    eax, eax
jz      short loc_409684
test    byte ptr [edi+1], 1
jnz     short loc_409667
mov     ax, [edi+16h]
push    eax
call    sub_461a80
add     esp, 4
xor     eax, eax
mov     ax, [edi+16h]
push    0
shl     eax, 10h
mov     al, 2
push    eax
call    sub_443290
add     esp, 8
mov     word ptr [edi+16h], 0
cmp     ebx, 4
jz      short loc_40967f
mov     ax, [edi+2]
push    eax
call    sub_40a6a0
add     esp, 4
mov     esi, 1
mov     eax, [esp+14h+var_8]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 54h
push    ebx
push    esi
push    edi
mov     ebx, 1
push    ebp
xor     esi, esi
lea     edi, [esp+64h+var_30]
xor     eax, eax
mov     ecx, 0ch
push    20h
rep stosd
lea     eax, [esp+68h+buffer]
mov     ebp, [esp+68h+arg_4]
mov     cx, [ebp+2]
push    eax
push    ecx
call    sub_40a760
lea     eax, [esp+70h+buffer]
mov     [esp+70h+var_2c], esi
mov     [esp+70h+var_4], eax
add     esp, 0ch
mov     di, [esp+64h+arg_0]
lea     ecx, [esp+64h+var_54]
mov     [esp+64h+var_24], 4
mov     [esp+64h+var_14], offset sub_4097c0
mov     [esp+64h+var_10], 3
mov     [esp+64h+var_c], ecx
lea     eax, [esp+64h+buffer]
lea     ecx, [esp+64h+var_30]
mov     [esp+64h+var_30], 3e9h
push    eax
push    ecx
call    sub_47eeb0
add     esp, 8
test    eax, eax
jz      short loc_409729
cmp     eax, 1
jz      short loc_409738
jmp     short loc_4097a8
xor     ebx, ebx
mov     esi, 1
mov     word ptr [ebp+16h], 0
jmp     short loc_4097a8
lea     eax, [esp+64h+var_54]
push    eax
call    sub_40a810
mov     bx, ax
add     esp, 4
test    bx, bx
jz      short loc_409782
mov     ax, [ebp+2]
cmp     ax, bx
jz      short loc_409782
push    ebx
push    eax
push    edi
call    sub_409c70
mov     ax, [ebp+2]
add     esp, 0ch
push    eax
call    sub_40a6a0
movsx   eax, bx
add     esp, 4
inc     eax
push    eax
push    offset dword_4a6080
call    sub_48f1d0
add     esp, 8
mov     ebp, eax
mov     eax, [esp+64h+var_54]
push    1
push    0
push    ebp
push    eax
push    edi
call    sub_409340
add     esp, 14h
cmp     eax, 1
sbb     ebx, ebx
mov     eax, [esp+64h+var_54]
inc     ebx
push    eax
call    sub_44f4a0
add     esp, 4
test    ebx, ebx
jnz     loc_409704
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
sub     esp, 120h
push    ebx
push    esi
mov     esi, [esp+128h+hdlg]
push    edi
mov     edi, [esp+12ch+arg_4]
cmp     edi, 110h
jnz     short loc_409832
push    esi
call    sub_47f3f0
add     esp, 4
mov     ebx, eax
lea     eax, [esp+12ch+string]
push    80h
push    eax
push    0c8h
push    esi
call    ds:getdlgitemtexta
mov     ecx, [ebx+2ch]
lea     edx, [esp+12ch+string]
lea     eax, [esp+12ch+var_a0]
push    ecx
push    edx
push    0a0h
push    eax
call    sub_401800
lea     ecx, [esp+13ch+var_a0]
add     esp, 10h
push    ecx
push    0c8h
push    esi
call    ds:setdlgitemtexta
mov     eax, [esp+12ch+arg_c]
mov     ecx, [esp+12ch+arg_8]
push    eax
push    ecx
push    edi
push    esi
call    sub_47f590
pop     edi
pop     esi
pop     ebx
add     esp, 120h
retn    10h
mov     eax, [esp+arg_0]
sub     esp, 8
push    esi
push    edi
push    eax
call    sub_40a7e0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_4098da
cmp     word ptr [esi+16h], 0
jz      short loc_4098da
lea     eax, [esp+10h+var_4]
lea     ecx, [esp+10h+var_8]
push    eax
mov     edx, [esi+12h]
push    ecx
push    edx
call    sub_44f2e0
add     esp, 0ch
cmp     [esp+10h+var_8], 0
jz      short loc_4098da
mov     cx, [esi+16h]
mov     edi, [esp+10h+arg_4]
mov     edx, [esp+10h+var_8]
mov     eax, [edi+4]
push    eax
push    ecx
push    edx
call    sub_471b70
movzx   ecx, ax
add     esp, 0ch
mov     [edi], ecx
mov     edx, [esp+10h+var_8]
push    edx
call    sub_44f4a0
add     esp, 4
mov     eax, [edi]
sub     eax, 2
pop     edi
pop     esi
cmp     eax, 1
sbb     eax, eax
add     esp, 8
neg     eax
retn
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 8
lea     ecx, [esp+8+var_8]
mov     [esp+8+var_4], eax
mov     [esp+8+var_8], 2
push    ecx
push    offset sub_409860
call    sub_40a960
mov     eax, [esp+10h+var_8]
add     esp, 8
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
mov     si, [esp+10h+arg_0]
push    edi
movsx   edi, si
push    ebp
lea     ebp, [edi+edi*4]
shl     ebp, 3
add     ebp, dword_4ad0d0
push    ebp
call    sub_48e820
lea     ebx, [ebp+1eh]
add     esp, 4
test    eax, eax
jz      short loc_409995
lea     eax, [esp+18h+var_8]
lea     ecx, [esp+18h+var_4]
push    eax
push    ecx
push    ebp
call    sub_48e880
add     esp, 0ch
push    esi
call    sub_4617a0
add     esp, 4
test    eax, eax
jz      short loc_409995
push    1
mov     eax, edi
shl     eax, 6
mov     ecx, dword_4ae1e0
mov     edx, [eax+ecx+10h]
xor     ecx, ecx
mov     eax, [edx]
mov     cx, [eax+0ah]
movzx   eax, si
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_470920
add     esp, 8
push    ebx
call    sub_474b60
add     esp, 4
test    eax, eax
jz      short loc_4099d6
push    esi
call    sub_4617a0
add     esp, 4
test    eax, eax
jz      short loc_4099d6
mov     eax, dword_4ae1e0
shl     edi, 6
push    1
mov     ecx, [edi+eax+10h]
movzx   eax, si
shl     eax, 10h
mov     edx, [ecx]
xor     ecx, ecx
mov     cx, [edx+0ch]
or      ecx, eax
push    ecx
call    sub_470920
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
movsx   ebx, word ptr [esp+10h+arg_0]
push    edi
push    ebp
lea     ebp, [ebx+ebx*4]
mov     ecx, 7
shl     ebp, 3
add     ebp, dword_4ad0d0
mov     edi, ebp
lea     eax, [ebp+1eh]
mov     [esp+18h+var_4], eax
xor     eax, eax
rep stosd
stosw
shl     ebx, 6
mov     eax, [esp+18h+var_4]
xor     edi, edi
mov     [eax], edi
mov     [eax+4], edi
mov     [eax+8], di
mov     eax, [esp+18h+arg_0]
and     eax, 0ffffh
mov     ecx, dword_4ae1e0
shl     eax, 10h
mov     edx, [ebx+ecx+10h]
xor     ecx, ecx
mov     [esp+18h+var_8], eax
mov     eax, [edx]
mov     cx, [eax+0ah]
or      ecx, [esp+18h+var_8]
push    ecx
call    sub_470640
add     esp, 4
mov     esi, eax
cmp     esi, edi
jnz     short loc_409a6d
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     edi, [esi]
test    edi, edi
jz      loc_409b1a
cmp     dword ptr [edi+2], 0
jnz     loc_409b1a
test    byte ptr [edi+1], 80h
jz      loc_409b1a
mov     eax, [edi+6]
xor     edi, edi
inc     eax
push    eax
push    esi
push    edi
xor     esi, esi
push    10h
push    ebp
call    sub_48e840
mov     eax, [esp+2ch+arg_0]
add     esp, 14h
push    esi
push    eax
call    sub_409b90
mov     ax, word ptr [esp+20h+arg_0]
add     esp, 8
cmp     ax, ds:word_4a8518
jnz     short loc_409add
push    2010410h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_409b0d
mov     eax, dword_4ae1e0
mov     ecx, [ebx+eax+10h]
mov     edx, [ecx]
xor     ecx, ecx
mov     cx, [edx+0ch]
or      ecx, [esp+18h+var_8]
push    ecx
call    sub_470640
add     esp, 4
test    eax, eax
jz      short loc_409b1a
push    eax
mov     eax, [esp+1ch+var_4]
push    eax
call    sub_474b80
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebp
call    sub_48e7d0
add     esp, 4
test    edi, edi
jz      short loc_409b2e
push    esi
call    ds:globalunlock
test    esi, esi
jz      short loc_409b52
push    0
mov     eax, dword_4ae1e0
mov     ecx, [ebx+eax+10h]
mov     edx, [ecx]
xor     ecx, ecx
mov     cx, [edx+0ah]
or      ecx, [esp+1ch+var_8]
push    ecx
call    sub_470920
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ecx, [esp+4]
mov     dx, [ecx]
test    dh, 80h
jnz     short loc_409b86
mov     eax, [esp+8]
mov     ax, [eax]
test    ax, ax
jz      short loc_409b7e
cmp     [ecx+4], ax
jnz     short loc_409b86
and     dx, 0fffdh
mov     [ecx], dx
mov     eax, 1
retn
movsx   eax, [esp+arg_0]
push    esi
lea     ecx, [eax+eax*4]
mov     eax, dword_4ad0d0
lea     esi, ds:0[ecx*8]
add     eax, esi
push    eax
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_409bce
lea     eax, [esp+4+arg_4]
push    eax
push    offset loc_409b60
mov     eax, dword_4ad0d0
add     eax, esi
push    eax
call    sub_48e8c0
add     esp, 0ch
pop     esi
retn
mov     edx, [esp+arg_0]
mov     cx, [edx]
test    ch, 80h
jnz     short loc_409bf4
mov     eax, [esp+arg_4]
mov     ax, [eax]
test    ax, ax
jz      short loc_409bee
cmp     [edx+4], ax
jnz     short loc_409bf4
or      cl, 2
mov     [edx], cx
mov     eax, 1
retn
movsx   eax, [esp+arg_0]
push    esi
lea     ecx, [eax+eax*4]
mov     eax, dword_4ad0d0
lea     esi, ds:0[ecx*8]
add     eax, esi
push    eax
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_409c3e
lea     eax, [esp+4+arg_4]
push    eax
push    offset sub_409bd0
mov     eax, dword_4ad0d0
add     eax, esi
push    eax
call    sub_48e8c0
add     esp, 0ch
pop     esi
retn
mov     edx, [esp+arg_0]
mov     ax, [edx]
test    ah, 80h
jnz     short loc_409c65
test    al, 1
jz      short loc_409c65
mov     cx, [edx+4]
mov     eax, [esp+arg_4]
cmp     [eax], cx
jnz     short loc_409c65
mov     ax, [eax+2]
mov     [edx+4], ax
mov     eax, 1
retn
movsx   eax, [esp+arg_0]
sub     esp, 4
lea     ecx, [eax+eax*4]
mov     eax, dword_4ad0d0
push    esi
lea     esi, ds:0[ecx*8]
add     eax, esi
push    eax
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_409cc5
mov     ax, [esp+8+arg_4]
mov     cx, [esp+8+arg_8]
mov     [esp+8+var_4], ax
lea     eax, [esp+8+var_4]
mov     [esp+8+var_2], cx
push    eax
push    offset sub_409c40
mov     eax, dword_4ad0d0
add     eax, esi
push    eax
call    sub_48e8c0
add     esp, 0ch
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_8]
test    eax, eax
mov     byte ptr [esi], 0
jz      short loc_409d07
mov     ecx, [esp+4+arg_c]
mov     eax, [eax+0ch]
movsx   edx, [esp+4+arg_0]
push    ecx
push    esi
push    eax
lea     eax, [edx+edx*4]
shl     eax, 3
add     eax, dword_4ad0d0
add     eax, 1eh
push    eax
call    sub_474ba0
add     esp, 10h
cmp     byte ptr [esi], 1
pop     esi
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+lpszformat]
push    eax
call    ds:registerclipboardformata
retn
call    sub_4677e0
test    eax, eax
jz      short loc_409d2f
mov     eax, 1
retn
mov     eax, ds:hwndparent
push    eax
call    ds:openclipboard
retn
call    sub_4677e0
test    eax, eax
jz      short loc_409d4f
mov     eax, 1
retn
jmp     ds:closeclipboard
push    esi
call    sub_4677e0
mov     esi, [esp+4+arg_0]
test    eax, eax
jz      short loc_409d79
push    esi
call    sub_4677f0
add     esp, 4
jmp     short loc_409d83
movzx   eax, si
push    eax
call    ds:getclipboarddata
test    eax, eax
jnz     short loc_409d8b
xor     eax, eax
pop     esi
retn
cmp     esi, 2
pop     esi
retn
call    sub_4677e0
test    eax, eax
jz      short locret_409da6
mov     eax, [esp+arg_0]
push    eax
call    nullsub_15
add     esp, 4
retn
mov     ds:dword_4a6078, 0
push    esi
call    sub_44f2d0
mov     esi, eax
test    esi, esi
jz      short loc_409e30
push    esi
call    sub_456780
add     esp, 4
push    offset awinmmdll
push    esi
call    sub_44f5b0
add     esp, 8
push    esi
call    sub_412df0
add     esp, 4
mov     ds:hmodule, eax
test    eax, eax
jz      short loc_409e30
test    esi, esi
jz      short loc_409dfc
push    esi
call    sub_44f4a0
add     esp, 4
push    offset procname
mov     eax, ds:hmodule
push    eax
call    ds:getprocaddress
mov     ds:dword_4a6074, eax
test    eax, eax
jnz     short loc_409e26
mov     eax, ds:hmodule
push    eax
call    sub_412ee0
add     esp, 4
pop     esi
retn
mov     ds:dword_4a6078, 1
pop     esi
retn
mov     ecx, ds:hmodule
test    ecx, ecx
jz      short locret_409e5c
cmp     ds:dword_4a6078, 0
jz      short locret_409e5c
push    ecx
call    sub_412ee0
add     esp, 4
retn
cmp     ds:dword_4a6078, 0
jz      short loc_409e6f
jmp     ds:dword_4a6074
jmp     ds:gettickcount
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
cmp     eax, 6
mov     dl, [esi+5]
mov     cl, [esi+4]
ja      short def_409e94
jmp     ds:jpt_409e94[eax*4]
mov     byte ptr [esi+4], 0
mov     byte ptr [esi+5], 0
call    sub_409e60
mov     [esi], eax
pop     esi
retn
mov     byte ptr [esi+5], 0
jmp     short def_409e94
mov     byte ptr [esi+5], 1
jmp     short def_409e94
mov     al, cl
or      al, 1
jmp     short loc_409ece
mov     al, cl
and     al, 0feh
jmp     short loc_409ece
mov     al, cl
or      al, 2
jmp     short loc_409ece
mov     al, cl
and     al, 0fdh
mov     [esi+4], al
test    cl, cl
jnz     short loc_409ede
mov     ecx, 0
test    dl, dl
jz      short loc_409ee3
mov     ecx, 1
cmp     byte ptr [esi+4], 0
jnz     short loc_409ef4
cmp     byte ptr [esi+5], 0
mov     eax, 0
jz      short loc_409ef9
mov     eax, 1
cmp     ecx, eax
jz      short loc_409f06
call    sub_409e60
sub     eax, [esi]
mov     [esi], eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     byte ptr [esi+4], 0
jnz     short loc_409f4a
cmp     byte ptr [esi+5], 0
jnz     short loc_409f4a
call    sub_409e60
sub     eax, [esi]
pop     esi
retn
mov     eax, [esi]
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_4]
test    esi, esi
jnz     short loc_409f60
mov     eax, 10000h
pop     esi
retn
mov     eax, [esp+4+arg_0]
push    eax
call    sub_409f30
add     esp, 4
push    esi
push    eax
call    sub_445da0
add     esp, 8
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     byte ptr [esi+4], 0
jnz     short loc_409f9e
cmp     byte ptr [esi+5], 0
jnz     short loc_409f9e
call    sub_409e60
sub     eax, [esp+4+arg_4]
mov     [esi], eax
pop     esi
retn
mov     ecx, [esp+4+arg_4]
mov     [esi], ecx
pop     esi
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    eax
call    sub_409f30
mov     ebx, [esp+10h+arg_4]
add     esp, 4
mov     edi, eax
test    ebx, ebx
jz      short loc_40a01f
mov     eax, ebx
sub     edx, edx
or      eax, 7fffh
xor     esi, esi
div     ebx
movzx   eax, ax
mov     ecx, eax
imul    ecx, ebx
cmp     ecx, edi
jnb     short loc_409feb
sub     edi, ecx
add     esi, eax
cmp     ecx, edi
jb      short loc_409fe3
push    ebx
push    edi
call    sub_445da0
add     esp, 8
mov     ecx, eax
test    eax, eax
jl      short loc_40a002
sar     ecx, 10h
add     esi, ecx
jmp     short loc_40a009
neg     ecx
sar     ecx, 10h
sub     esi, ecx
test    eax, eax
jl      short loc_40a014
and     eax, 0ffffh
jmp     short loc_40a026
neg     eax
and     eax, 0ffffh
neg     eax
jmp     short loc_40a026
mov     esi, 1
xor     eax, eax
mov     cx, [esp+0ch+arg_c]
test    cx, cx
jz      short loc_40a040
movsx   ecx, cx
cmp     ecx, esi
jg      short loc_40a040
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
movsx   ecx, [esp+0ch+arg_8]
imul    ecx, eax
test    ecx, ecx
jl      short loc_40a05c
sar     ecx, 10h
mov     eax, [esp+0ch+arg_10]
mov     [eax], cx
pop     edi
xor     eax, eax
pop     esi
pop     ebx
retn
neg     ecx
sar     ecx, 10h
mov     eax, [esp+0ch+arg_10]
neg     cx
mov     [eax], cx
pop     edi
xor     eax, eax
pop     esi
pop     ebx
retn
sub     esp, 200h
push    esi
push    edi
xor     esi, esi
push    esi
push    200h
push    offset dword_4a6080
call    sub_48e770
lea     edi, [esp+214h+var_200]
add     esp, 0ch
xor     eax, eax
mov     ecx, 80h
rep stosd
mov     [esp+208h+var_200], 8000h
lea     eax, [esp+208h+var_200]
mov     [esp+208h+var_1fe], esi
mov     [esp+208h+var_1fa], esi
push    eax
mov     [esp+20ch+var_1f6], esi
push    offset dword_4a6080
call    sub_48e920
add     esp, 8
push    offset dword_4a6080
call    sub_48f170
add     esp, 4
push    offset dword_4a6080
call    sub_48e820
add     esp, 4
pop     edi
pop     esi
add     esp, 200h
retn
movsx   eax, [esp+arg_0]
push    esi
lea     ecx, [eax+eax*4]
mov     eax, dword_4ad0d0
lea     esi, ds:0[ecx*8]
add     eax, esi
push    eax
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_40a13b
push    0ffffffffh
mov     eax, dword_4ad0d0
add     eax, esi
push    eax
push    offset dword_4a6080
call    sub_40a340
add     esp, 0ch
mov     eax, 1
pop     esi
retn
sub     esp, 28h
push    ebx
push    esi
mov     si, [esp+30h+arg_0]
push    edi
movsx   eax, si
shl     eax, 6
push    ebp
mov     edx, dword_4ae1e0
mov     [esp+38h+var_24], eax
movzx   eax, si
shl     eax, 10h
mov     ecx, [esp+38h+var_24]
mov     [esp+38h+var_28], eax
mov     eax, [edx+ecx+10h]
xor     ecx, ecx
mov     edx, [eax]
mov     cx, [edx+0eh]
or      ecx, [esp+38h+var_28]
push    ecx
call    sub_470640
add     esp, 4
test    eax, eax
jnz     short loc_40a1a1
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
mov     ecx, [eax]
test    ecx, ecx
jz      loc_40a2bb
cmp     dword ptr [ecx+2], 0
jnz     loc_40a2bb
test    byte ptr [ecx+1], 80h
jz      loc_40a2bb
mov     edi, [ecx+6]
inc     edi
push    edi
push    eax
lea     eax, [esp+40h+var_20]
push    0
push    200h
push    eax
mov     ebx, 1
call    sub_48e840
lea     eax, [esp+4ch+var_20]
add     esp, 14h
push    eax
call    sub_48f140
add     esp, 4
cmp     edi, ebx
jbe     short loc_40a217
inc     ebx
lea     eax, [esp+38h+var_20]
push    ebx
push    eax
call    sub_48f1d0
add     esp, 8
mov     ebp, eax
test    byte ptr [eax], 1
jz      short loc_40a213
push    ebp
push    esi
call    sub_40a4b0
mov     [ebp+2], ax
add     esp, 8
cmp     edi, ebx
ja      short loc_40a1ef
mov     esi, [esp+38h+arg_4]
push    esi
call    sub_48f140
add     esp, 4
mov     ebp, 1
push    esi
call    sub_48e830
add     esp, 4
mov     ebx, eax
cmp     ebx, ebp
jbe     short loc_40a274
inc     ebp
push    ebp
push    esi
call    sub_48f1d0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_40a274
movsx   eax, word ptr [edi+4]
inc     eax
lea     ecx, [esp+38h+var_20]
push    eax
push    ecx
call    sub_48f1d0
add     esp, 8
test    eax, eax
jz      short loc_40a26a
mov     ax, [eax+2]
mov     [edi+4], ax
jmp     short loc_40a270
mov     word ptr [edi+4], 0
cmp     ebx, ebp
ja      short loc_40a238
push    esi
call    sub_48f1a0
lea     eax, [esp+3ch+var_20]
add     esp, 4
push    eax
call    sub_48f1a0
mov     ecx, [esp+3ch+var_24]
add     esp, 4
mov     eax, dword_4ae1e0
push    0
mov     edx, [eax+ecx+10h]
xor     ecx, ecx
mov     eax, [edx]
mov     cx, [eax+0eh]
or      ecx, [esp+3ch+var_28]
push    ecx
call    sub_470920
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
mov     ecx, [esp+38h+var_24]
push    0
mov     eax, dword_4ae1e0
mov     edx, [eax+ecx+10h]
xor     ecx, ecx
mov     eax, [edx]
mov     cx, [eax+0eh]
or      ecx, [esp+3ch+var_28]
push    ecx
call    sub_470920
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
mov     eax, [esp+arg_0]
push    esi
mov     cx, [eax]
test    ch, 80h
jnz     short loc_40a331
mov     ax, [eax+4]
test    ax, ax
jz      short loc_40a331
test    cl, 1
jz      short loc_40a331
movsx   eax, ax
inc     eax
mov     esi, [esp+4+arg_4]
push    eax
mov     ecx, [esi]
push    ecx
call    sub_48f1d0
add     esp, 8
test    eax, eax
jz      short loc_40a331
mov     cx, [esi+4]
push    ecx
push    eax
call    sub_40a390
add     esp, 8
mov     eax, 1
pop     esi
retn
mov     ax, [esp+arg_8]
sub     esp, 8
mov     [esp+8+var_4], ax
push    esi
mov     esi, [esp+0ch+arg_0]
mov     [esp+0ch+var_8], esi
push    esi
call    sub_48f140
lea     eax, [esp+10h+var_8]
mov     ecx, [esp+10h+arg_4]
add     esp, 4
push    eax
push    offset sub_40a2f0
push    ecx
call    sub_48e8c0
add     esp, 0ch
push    esi
call    sub_48f1a0
add     esp, 4
pop     esi
add     esp, 8
retn
mov     cx, [esp+arg_4]
mov     eax, [esp+arg_0]
add     [eax+4], cx
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     cx, [eax]
push    esi
xor     esi, esi
test    ch, 80h
jnz     short loc_40a418
test    cl, 1
jz      short loc_40a418
mov     ecx, [eax+12h]
test    ecx, ecx
jz      short loc_40a411
lea     eax, [esp+0ch+var_4]
lea     edx, [esp+0ch+var_8]
push    eax
push    edx
push    ecx
call    sub_44f2e0
add     esp, 0ch
test    eax, eax
jnz     short loc_40a411
mov     eax, [esp+0ch+var_8]
push    esi
push    eax
call    sub_44f9b0
add     esp, 8
test    eax, eax
jnz     short loc_40a3ff
mov     eax, [esp+0ch+arg_4]
mov     edx, [esp+0ch+var_8]
mov     ecx, [eax]
push    ecx
push    edx
call    sub_44f950
add     esp, 8
test    eax, eax
jnz     short loc_40a404
mov     esi, 1
mov     eax, [esp+0ch+var_8]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 8
retn
mov     eax, 1
pop     esi
add     esp, 8
retn
mov     dx, [esp+arg_0]
push    ebx
push    esi
mov     ecx, dword_4ae1e0
push    edi
xor     esi, esi
movsx   eax, dx
shl     eax, 6
mov     edi, [esp+0ch+arg_4]
mov     ebx, [eax+ecx+10h]
mov     eax, [ebx]
mov     si, [eax+48h]
movzx   eax, dx
shl     eax, 10h
or      esi, eax
mov     ax, [edi+2]
push    eax
push    esi
call    sub_4457d0
add     esp, 8
mov     ebx, eax
mov     ax, [edi+2]
push    eax
push    esi
call    sub_445700
mov     dword ptr [edi+12h], 0
movzx   eax, ax
add     esp, 8
test    ebx, ebx
jz      short loc_40a49e
push    eax
push    ebx
call    sub_44f210
add     esp, 8
mov     [edi+12h], eax
push    ebx
call    sub_45ba00
add     esp, 4
cmp     dword ptr [edi+12h], 0
jnz     short loc_40a4ac
call    sub_44f1b0
mov     [edi+12h], eax
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_4]
push    edi
cmp     dword ptr [esi+12h], 0
jnz     short loc_40a4ce
mov     eax, [esp+14h+arg_0]
push    esi
push    eax
call    sub_40a430
add     esp, 8
lea     eax, [esp+14h+var_4]
lea     ecx, [esp+14h+var_8]
push    eax
mov     edx, [esi+12h]
push    ecx
push    edx
call    sub_44f2e0
add     esp, 0ch
cmp     [esp+14h+var_8], 0
jnz     short loc_40a4f4
call    sub_44f2d0
mov     [esp+14h+var_8], eax
lea     eax, [esp+14h+var_8]
push    eax
push    offset sub_40a3a0
push    offset dword_4a6080
call    sub_48e8c0
add     esp, 0ch
mov     edi, eax
test    edi, edi
jz      short loc_40a53c
push    edi
push    offset dword_4a6080
dec     di
call    sub_48f1d0
mov     cx, [esi]
add     esp, 8
mov     ebx, eax
mov     ax, [ebx]
xor     cx, ax
and     cx, 1ch
xor     cx, ax
mov     [ebx], cx
inc     word ptr [ebx+4]
jmp     short loc_40a57d
test    byte ptr [esi], 2
mov     eax, [esi+12h]
push    eax
jz      short loc_40a54e
mov     cx, [esi+4]
push    0
push    ecx
jmp     short loc_40a558
mov     cx, [esi+16h]
mov     dx, [esi+4]
push    ecx
push    edx
call    sub_40a5b0
mov     di, ax
add     esp, 0ch
movsx   eax, di
inc     eax
push    eax
push    offset dword_4a6080
call    sub_48f1d0
mov     cx, [esi]
add     esp, 8
mov     [eax], cx
mov     ebx, eax
mov     eax, [esp+14h+var_8]
push    eax
call    sub_44f4a0
add     esp, 4
mov     ecx, [esi+8]
mov     ax, di
mov     [ebx+8], ecx
mov     edx, [esi+0ch]
pop     edi
mov     [ebx+0ch], edx
mov     si, [esi+10h]
mov     [ebx+10h], si
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 200h
push    ebx
push    esi
xor     bx, bx
push    edi
push    1
push    offset dword_4a6080
call    sub_48f1d0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_40a63e
lea     edi, [esp+20ch+var_200]
xor     eax, eax
mov     ecx, 80h
rep stosd
mov     [esp+20ch+var_200], 1
mov     ax, [esp+20ch+arg_4]
mov     edx, [esp+20ch+arg_8]
mov     cx, [esp+20ch+arg_0]
mov     [esp+20ch+var_1ee], edx
mov     [esp+20ch+var_1ea], ax
mov     [esp+20ch+var_1fc], cx
mov     bx, [esi+0ah]
test    bx, bx
jz      short loc_40a64b
movsx   eax, bx
inc     eax
push    eax
push    offset dword_4a6080
call    sub_48f1d0
add     esp, 8
mov     edi, eax
movsx   ecx, word ptr [eax+2]
mov     [esi+0ah], ecx
lea     esi, [esp+20ch+var_200]
mov     [esp+20ch+var_1fe], bx
mov     ecx, 80h
rep movsd
mov     ax, bx
pop     edi
pop     esi
pop     ebx
add     esp, 200h
retn
mov     edi, [esi+6]
push    offset dword_4a6080
inc     edi
mov     [esi+6], edi
call    sub_48f1a0
mov     [esp+210h+var_1fe], di
lea     eax, [esp+210h+var_200]
add     esp, 4
push    eax
push    offset dword_4a6080
call    sub_48e920
add     esp, 8
test    eax, eax
jnz     short loc_40a67d
xor     di, di
push    offset dword_4a6080
call    sub_48f170
mov     ax, di
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 200h
retn
push    ebx
push    esi
push    edi
push    ebp
xor     edi, edi
push    1
push    offset dword_4a6080
call    sub_48f1d0
add     esp, 8
mov     esi, eax
cmp     esi, edi
jz      loc_40a74e
movsx   eax, [esp+10h+arg_0]
inc     eax
push    eax
push    offset dword_4a6080
call    sub_48f1d0
add     esp, 8
mov     ebx, eax
cmp     ebx, edi
jz      short loc_40a74e
mov     bp, [esi+0ah]
mov     eax, [ebx+12h]
test    eax, eax
jz      short loc_40a6f0
push    eax
call    sub_44f2a0
add     esp, 4
mov     [ebx+12h], edi
cmp     [ebx+2], bp
jl      short loc_40a71d
test    bp, bp
jz      short loc_40a71d
movsx   eax, bp
inc     eax
push    eax
push    offset dword_4a6080
call    sub_48f1d0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_40a749
mov     bp, [edi+2]
cmp     [ebx+2], bp
jge     short loc_40a6f6
test    edi, edi
jz      short loc_40a72f
mov     dx, [edi+2]
mov     ax, [ebx+2]
mov     [edi+2], ax
jmp     short loc_40a73a
movsx   eax, word ptr [ebx+2]
mov     dx, [esi+0ah]
mov     [esi+0ah], eax
mov     edi, ebx
xor     eax, eax
mov     ecx, 80h
rep stosd
mov     [ebx+2], dx
mov     edi, 1
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
sub     esp, 8
push    esi
push    eax
mov     esi, [esp+10h+lpbuffer]
mov     byte ptr [esi], 0
call    sub_40a7e0
add     esp, 4
test    eax, eax
jz      short loc_40a7d9
test    byte ptr [eax+1], 1
jz      short loc_40a79c
mov     eax, [esp+0ch+cchbuffermax]
push    0ah
push    5e0h
push    eax
push    esi
call    sub_47fe70
add     esp, 10h
pop     esi
add     esp, 8
retn
lea     ecx, [esp+0ch+var_4]
lea     edx, [esp+0ch+var_8]
push    ecx
mov     eax, [eax+12h]
push    edx
push    eax
call    sub_44f2e0
add     esp, 0ch
cmp     [esp+0ch+var_8], 0
jz      short loc_40a7d9
mov     eax, [esp+0ch+cchbuffermax]
mov     ecx, [esp+0ch+var_8]
push    eax
push    esi
push    ecx
call    sub_44f5e0
mov     ecx, [esp+18h+var_8]
add     esp, 0ch
push    ecx
call    sub_44f4a0
add     esp, 4
pop     esi
add     esp, 8
retn
mov     ax, [esp+arg_0]
test    ax, ax
jle     short loc_40a805
movsx   eax, ax
inc     eax
push    eax
push    offset dword_4a6080
call    sub_48f1d0
add     esp, 8
test    eax, eax
jz      short loc_40a805
test    byte ptr [eax], 1
jnz     short locret_40a807
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    eax
push    offset sub_40a3a0
push    offset dword_4a6080
call    sub_48e8c0
add     esp, 0ch
test    eax, eax
jz      short loc_40a82e
dec     ax
retn
xor     ax, ax
retn
sub     esp, 19ch
push    esi
push    edi
mov     edi, [esp+1a4h+arg_0]
push    edi
call    sub_462480
mov     esi, [esp+1a8h+arg_4]
add     esp, 4
movsx   eax, ax
cmp     eax, [esi]
jnz     short loc_40a8d0
lea     eax, [esp+1a4h+string2]
push    19ah
push    eax
push    edi
call    sub_461570
add     esp, 0ch
cmp     [esp+1a4h+string2], 0
jz      short loc_40a89e
lea     eax, [esp+1a4h+string2]
mov     ecx, [esi+8]
push    eax
push    ecx
call    ds:lstrcmpia
pop     edi
cmp     eax, 1
sbb     eax, eax
pop     esi
inc     eax
add     esp, 19ch
retn
lea     eax, [esp+1a4h+string2]
push    19ah
push    eax
push    edi
call    sub_462d70
add     esp, 0ch
cmp     dword ptr [esi+4], 0
jnz     short loc_40a8d0
lea     eax, [esp+1a4h+string2]
mov     ecx, [esi+8]
push    eax
push    ecx
call    ds:lstrcmpia
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     [esi+4], eax
mov     eax, 1
pop     edi
pop     esi
add     esp, 19ch
retn
mov     eax, [esp+arg_0]
sub     esp, 0ch
mov     cx, [eax+16h]
test    cx, cx
jz      short loc_40a926
mov     eax, [esp+0ch+arg_4]
mov     edx, [esp+0ch+arg_8]
mov     [esp+0ch+var_c], eax
mov     [esp+0ch+var_4], edx
mov     [esp+0ch+var_8], 0
lea     eax, [esp+0ch+var_c]
push    eax
push    offset sub_40a840
movzx   eax, cx
shl     eax, 10h
push    6
mov     al, 2
push    eax
call    sub_4620e0
add     esp, 1ch
retn
xor     eax, eax
add     esp, 0ch
retn
mov     ecx, [esp+4]
mov     ax, [ecx]
test    ah, 80h
jnz     short loc_40a953
test    al, 1
jz      short loc_40a953
mov     cx, [ecx+2]
mov     edx, [esp+8]
mov     eax, [edx+4]
push    eax
push    ecx
call    dword ptr [edx]
add     esp, 8
retn
mov     eax, 1
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 8
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], ecx
lea     eax, [esp+8+var_8]
push    eax
push    offset loc_40a930
push    offset dword_4a6080
call    sub_48e8c0
add     esp, 0ch
test    eax, eax
jz      short loc_40a994
dec     ax
add     esp, 8
retn
xor     ax, ax
add     esp, 8
retn
mov     ax, ds:word_4a8518
push    esi
push    eax
call    sub_461830
add     esp, 4
mov     esi, eax
call    sub_4227c0
call    sub_408360
call    sub_409570
mov     ax, ds:word_4a8518
push    eax
call    sub_40d880
add     esp, 4
call    sub_494a60
call    sub_40b100
push    offset dword_4a8510
call    sub_40aa00
add     esp, 4
call    sub_488e00
test    esi, esi
jnz     short loc_40a9f5
call    sub_466460
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     ax, [esi+8]
test    ax, ax
jz      loc_40aa95
cmp     ds:word_4a8518, ax
jnz     short loc_40aa39
call    sub_468fa0
test    eax, eax
jz      short loc_40aa2a
call    sub_451500
call    sub_4227c0
push    0
call    sub_468fc0
add     esp, 4
mov     ax, [esi+8]
push    eax
call    sub_4617f0
mov     ax, [esi+8]
add     esp, 4
push    eax
call    sub_461a80
mov     ax, [esi+8]
add     esp, 4
push    eax
call    sub_4636c0
add     esp, 4
mov     eax, [esi]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, [esi+4]
mov     edi, esi
push    eax
call    sub_44f4a0
add     esp, 4
xor     eax, eax
mov     ecx, 7
rep stosd
stosw
push    offset windowname
mov     eax, [esi+4]
push    eax
call    sub_44f5b0
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
xor     esi, esi
lea     eax, [esp+1ch+arg_4]
push    2
mov     [esp+20h+var_8], esi
push    eax
mov     [esp+24h+var_4], esi
call    sub_44b960
add     esp, 8
test    eax, eax
jnz     loc_40abac
mov     eax, [esp+1ch+arg_4]
push    eax
call    sub_44b480
add     esp, 4
test    eax, eax
jz      short loc_40aae1
cmp     eax, 2
jnz     loc_40abac
mov     si, word ptr [esp+1ch+arg_0]
cmp     si, 17h
jz      short loc_40aaf5
push    esi
call    sub_461830
add     esp, 4
mov     eax, [esp+1ch+arg_4]
push    eax
call    sub_44ad30
add     esp, 4
test    eax, eax
jnz     loc_40abac
mov     eax, [esp+1ch+arg_4]
push    2
push    eax
call    sub_44baf0
mov     [esp+24h+hobject], eax
mov     [esp+24h+var_c], edx
add     esp, 8
cmp     [esp+1ch+hobject], 0
jnz     short loc_40ab35
call    sub_44a430
mov     esi, eax
mov     ebx, [esp+1ch+arg_c]
jmp     short loc_40ab65
mov     ebx, [esp+1ch+arg_c]
mov     edi, [esp+1ch+arg_8]
test    ebx, ebx
jnz     short loc_40ab94
mov     eax, [esp+1ch+var_8]
push    edi
mov     ecx, [esp+20h+var_4]
mov     edx, [esp+20h+hobject]
push    ecx
push    eax
mov     eax, [esp+28h+var_c]
push    eax
push    edx
push    esi
call    sub_471f40
add     esp, 18h
mov     esi, eax
test    esi, esi
jz      short loc_40ab94
cmp     [esp+1ch+hobject], 0
jz      short loc_40ab7e
mov     eax, [esp+1ch+hobject]
mov     ecx, [esp+1ch+var_c]
push    ecx
push    eax
call    sub_44ae90
add     esp, 8
mov     eax, [esp+1ch+arg_4]
push    eax
call    sub_44b480
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
test    edi, edi
jnz     short loc_40abaa
mov     eax, [esp+1ch+hobject]
mov     ecx, [esp+1ch+var_c]
push    ecx
push    eax
call    sub_44ae90
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ax, ds:word_4a8518
mov     cx, [esp+arg_0]
sub     ax, cx
cmp     ax, 1
sbb     eax, eax
neg     eax
test    cx, cx
jnz     short loc_40abe1
mov     eax, 1
retn
test    eax, eax
jz      short loc_40abf2
mov     eax, [esp+arg_14]
push    eax
call    sub_422640
add     esp, 4
mov     eax, 1
retn
sub     esp, 4
cmp     ds:word_4a8518, 0
jz      loc_40ac9a
push    20a0410h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_40ac3f
push    5
call    ds:getsyscolor
mov     [esp+4+var_4], eax
jmp     short loc_40aca2
xor     ecx, ecx
mov     cx, ds:word_4a8518
shl     ecx, 10h
mov     cl, 1
mov     eax, ecx
shr     eax, 10h
movsx   edx, ax
shl     edx, 6
mov     eax, dword_4ae1e0
mov     edx, [edx+eax+4]
mov     eax, [edx]
xor     edx, edx
mov     dl, ch
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_40ac7b
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_40ac84
push    ecx
call    sub_461250
add     esp, 4
lea     ecx, [esp+4+var_4]
push    4
push    ecx
push    1ah
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jnz     short loc_40aca2
mov     [esp+4+var_4], 0ffffffh
mov     eax, [esp+4+var_4]
add     esp, 4
and     eax, 0ffffffh
retn
sub     esp, 4
cmp     ds:word_4a8518, 0
jz      short loc_40ad19
xor     ecx, ecx
mov     cx, ds:word_4a8518
mov     edx, dword_4ae1e0
shl     ecx, 10h
mov     cl, 1
mov     eax, ecx
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     eax, [eax+edx+4]
xor     edx, edx
mov     dl, ch
mov     eax, [eax]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_40acfa
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_40ad03
push    ecx
call    sub_461250
add     esp, 4
lea     ecx, [esp+4+var_4]
push    4
push    ecx
push    1fh
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jnz     short loc_40ad21
mov     [esp+4+var_4], 0ff00ffh
mov     eax, [esp+4+var_4]
add     esp, 4
and     eax, 0ffffffh
retn
push    ebx
push    esi
push    edi
push    0
call    ds:getdc
mov     esi, eax
test    esi, esi
jz      loc_40ae0c
push    26h
mov     edi, ds:getdevicecaps
mov     ds:dword_4a6154, 0
push    esi
call    edi
test    ah, 1
jz      short loc_40ad69
push    68h
push    esi
call    edi
mov     ds:dword_4a6154, eax
push    18h
push    esi
call    edi
mov     ds:dword_4a6150, eax
cmp     eax, 14h
jle     short loc_40ad7d
mov     eax, 14h
cmp     ds:dword_4a6154, 0
mov     ds:dword_4a6150, eax
jle     short loc_40adfa
cdq
push    offset src
sub     eax, edx
sar     eax, 1
mov     edi, ds:getsystempaletteentries
push    eax
push    0
push    esi
call    edi
mov     eax, ds:dword_4a6150
cdq
sub     eax, edx
sar     eax, 1
lea     ecx, src.pered[eax*4]
push    ecx
push    eax
mov     ecx, ds:dword_4a6154
sub     ecx, eax
push    ecx
push    esi
call    edi
call    ds:getversion
sub     eax, 3
cmp     eax, 1
sbb     eax, eax
xor     edi, edi
and     eax, 0fffffffeh
add     eax, 15h
mov     ds:celements, eax
test    eax, eax
jle     short loc_40adfa
mov     ebx, ds:getsyscolor
push    edi
call    ebx
mov     ds:argbvalues[edi*4], eax
inc     edi
cmp     ds:celements, edi
jg      short loc_40ade7
push    esi
push    0
call    ds:releasedc
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, hpal
test    eax, eax
jz      short locret_40ae3a
push    eax
call    ds:deleteobject
mov     hpal, 0
retn
mov     eax, dword_4ad134
retn
mov     eax, hpal
retn
cmp     [esp+arg_0], 0
jz      short loc_40ae6e
inc     bforcebkgd
retn
dec     bforcebkgd
retn
mov     eax, bforcebkgd
retn
push    esi
mov     esi, [esp+4+hdc]
test    esi, esi
jz      short loc_40aeb8
mov     eax, hpal
test    eax, eax
jz      short loc_40aeb8
mov     ecx, bforcebkgd
push    ecx
push    eax
push    esi
call    ds:selectpalette
push    esi
call    ds:realizepalette
pop     esi
retn
cmp     ds:word_4a8518, 0
jz      short loc_40aeef
cmp     hpal, 0
jz      short loc_40aeef
cmp     dword_4ad150, 0
jnz     short loc_40aeef
mov     eax, dword_4ad148
push    eax
call    sub_40af40
add     esp, 4
mov     dword_4ad150, eax
mov     dword_4ad14c, 1
retn
cmp     hpal, 0
jz      short loc_40af26
cmp     dword_4ad150, 0
jz      short loc_40af26
push    1
call    sub_40af40
mov     dword_4ad150, 0
add     esp, 4
mov     dword_4ad14c, 0
retn
sub     esp, 0a8h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
call    sub_40bad0
mov     eax, ds:hwndparent
push    eax
call    ds:getdc
cmp     eax, esi
mov     edi, eax
jz      loc_40b05c
mov     eax, bforcebkgd
mov     ecx, hpal
push    eax
push    ecx
push    edi
call    ds:selectpalette
cmp     eax, esi
mov     ebx, eax
jz      loc_40b04f
cmp     [esp+0b8h+arg_0], 1
mov     esi, 2
adc     esi, 0ffffffffh
push    esi
push    edi
call    ds:setsystempaletteuse
cmp     eax, esi
mov     ebp, eax
jz      short loc_40afaf
mov     eax, hpal
push    eax
call    ds:unrealizeobject
push    edi
call    ds:realizepalette
test    eax, eax
jz      short loc_40afbf
call    sub_410830
xor     eax, eax
cmp     ds:dword_4a6154, eax
jle     short loc_40b040
cmp     ebp, esi
jz      short loc_40b040
cmp     esi, 2
jnz     short loc_40b018
xor     ecx, ecx
mov     edx, ds:celements
cmp     edx, eax
jle     short loc_40b00c
mov     esi, 1
mov     [esp+eax+0b8h+aelements], ecx
shl     esi, cl
and     esi, 10da3bh
cmp     esi, 1
mov     esi, 0
adc     esi, 0ffffffffh
add     eax, 4
and     esi, 0ffffffh
inc     ecx
mov     [esp+eax+0b8h+var_58], esi
cmp     edx, ecx
jg      short loc_40afde
lea     eax, [esp+0b8h+var_54]
lea     ecx, [esp+0b8h+aelements]
push    eax
push    ecx
jmp     short loc_40b037
xor     eax, eax
mov     edx, ds:celements
cmp     edx, eax
jle     short loc_40b02d
mov     [esp+eax*4+0b8h+aelements], eax
inc     eax
cmp     edx, eax
jg      short loc_40b024
lea     eax, [esp+0b8h+aelements]
push    offset argbvalues
push    eax
push    edx
mov     ebp, ds:setsyscolors
call    ebp
push    0
mov     esi, 1
push    ebx
push    edi
call    ds:selectpalette
push    edi
mov     eax, ds:hwndparent
push    eax
call    ds:releasedc
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a8h
retn
push    esi
mov     ecx, ds:hwndparent
cmp     [esp+4+arg_0], ecx
jz      short loc_40b0c4
cmp     hpal, 0
jz      short loc_40b0c4
push    ecx
call    ds:getdc
mov     esi, eax
test    esi, esi
jz      short loc_40b0c4
mov     eax, bforcebkgd
mov     ecx, hpal
push    eax
push    ecx
push    esi
call    ds:selectpalette
push    esi
call    ds:realizepalette
test    eax, eax
jz      short loc_40b0b7
call    sub_410830
push    esi
mov     eax, ds:hwndparent
push    eax
call    ds:releasedc
pop     esi
retn
push    2010520h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
cmp     ax, 1
sbb     eax, eax
neg     eax
push    eax
push    0
call    sub_40b1f0
add     esp, 8
retn
mov     dword_4ad13c, 0
mov     eax, dword_4ad138
test    eax, eax
jz      short locret_40b126
push    eax
call    sub_45ba00
mov     dword_4ad138, 0
add     esp, 4
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_8]
push    edi
push    ebp
xor     edi, edi
cmp     ebx, edi
jz      short loc_40b140
mov     [ebx], edi
mov     esi, [esp+10h+hmem]
mov     ebp, [esp+10h+arg_4]
test    esi, esi
jnz     short loc_40b157
push    ebp
call    sub_40b880
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_40b1a0
push    2
push    ebp
push    esi
call    sub_40b290
add     esp, 0ch
test    eax, eax
jz      short loc_40b190
push    esi
call    ds:globallock
push    eax
mov     ebp, eax
test    ebx, ebx
jz      short loc_40b186
call    ds:createpalette
mov     [ebx], eax
test    eax, eax
jz      short loc_40b190
push    ebp
call    sub_40b1b0
add     esp, 4
mov     edi, eax
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
xor     eax, eax
mov     esi, [esp+4+arg_0]
mov     ax, [esi+2]
lea     edx, ds:4[eax*4]
xor     eax, eax
mov     ecx, edx
dec     edx
test    ecx, ecx
jz      short loc_40b1e6
mov     ecx, eax
inc     esi
shl     ecx, 18h
shr     eax, 8
or      ecx, eax
xor     eax, eax
mov     al, [esi-1]
xor     ecx, eax
mov     eax, ecx
mov     ecx, edx
dec     edx
test    ecx, ecx
jnz     short loc_40b1cb
pop     esi
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    esi
mov     esi, [esp+8+hmem]
push    edi
mov     edi, [esp+0ch+arg_4]
push    eax
push    edi
push    esi
call    sub_40b130
add     esp, 0ch
cmp     [esp+0ch+var_4], 0
jz      short loc_40b235
push    edi
cmp     esi, 1
sbb     ecx, ecx
neg     ecx
push    ecx
push    eax
mov     eax, [esp+18h+var_4]
push    eax
call    sub_40b240
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, hpal
test    eax, eax
jz      short loc_40b250
push    eax
call    ds:deleteobject
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_8]
mov     hpal, eax
mov     eax, [esp+arg_c]
mov     dword_4ad134, ecx
mov     dword_4ad144, edx
mov     dword_4ad148, eax
mov     dword_4ad150, 0
cmp     dword_4ad14c, 0
jz      short locret_40b28e
jmp     sub_40aec0
retn
sub     esp, 8
cmp     ds:dword_4a6154, 0
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_40b2ad
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     [esp+18h+arg_4], 0
mov     ebx, 2
jz      short loc_40b2bf
mov     ebx, ds:dword_4a6150
mov     ebp, ds:dword_4a6154
sub     ebp, ebx
cmp     ebx, 2
jnz     short loc_40b2f3
xor     eax, eax
mov     ecx, 0ffh
mov     [esp+18h+var_6], al
mov     [esp+18h+var_7], al
mov     [esp+18h+var_8], al
mov     [esp+18h+var_2], cl
mov     [esp+18h+var_3], cl
mov     [esp+18h+var_4], cl
mov     [esp+18h+var_1], al
mov     [esp+18h+var_5], al
mov     eax, [esp+18h+hmem]
mov     esi, ds:globallock
push    eax
call    esi
push    eax
mov     edi, eax
call    sub_40b4b0
lea     eax, [esp+1ch+var_8]
add     esp, 4
cmp     ebx, 2
push    ebx
jz      short loc_40b31a
mov     eax, offset src
push    eax
push    edi
call    sub_40b540
mov     eax, [esp+24h+hmem]
add     esp, 0ch
push    eax
call    ds:globalunlock
push    2
mov     eax, ds:dword_4a6154
shl     eax, 2
mov     ecx, [esp+1ch+hmem]
add     eax, 5
dec     eax
push    eax
push    ecx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_40b359
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+18h+hmem]
push    eax
call    esi
mov     esi, eax
xor     edx, edx
mov     dx, [esi+2]
mov     eax, ds:dword_4a6154
sub     eax, edx
lea     edi, [esi+edx*4+4]
lea     ecx, ds:0[eax*4]
xor     eax, eax
shr     ecx, 2
rep stosd
mov     eax, [esp+18h+arg_8]
test    eax, eax
jz      short loc_40b398
cmp     eax, 1
jz      short loc_40b3e4
cmp     eax, 2
jz      short loc_40b3ac
jmp     loc_40b41b
xor     ecx, ecx
mov     cx, [esi+2]
cmp     ebp, ecx
jl      short loc_40b41b
mov     eax, ebx
cdq
sub     eax, edx
sar     eax, 1
jmp     short loc_40b404
xor     eax, eax
mov     ax, [esi+2]
cmp     ebp, eax
jge     short loc_40b3e4
cmp     ebx, 2
jnz     short loc_40b3cc
sub     eax, ebp
cmp     eax, ebx
jl      short loc_40b3c3
mov     eax, ebx
push    eax
push    ebx
lea     eax, [esp+20h+var_8]
push    eax
jmp     short loc_40b3db
sub     eax, ebp
cmp     eax, ebx
jl      short loc_40b3d4
mov     eax, ebx
push    eax
push    ebx
push    offset src
push    esi
call    sub_40b5c0
add     esp, 10h
mov     eax, ebx
mov     ecx, ds:dword_4a6154
cdq
sub     eax, edx
sar     eax, 1
sub     cx, ax
mov     dx, [esi+2]
cmp     cx, dx
jb      short loc_40b401
mov     cx, dx
movzx   ecx, cx
shl     ecx, 2
lea     edx, [esi+4]
push    ecx
lea     eax, [esi+eax*4]
push    edx
add     eax, 4
push    eax
call    _memcpy
add     esp, 0ch
mov     eax, ebx
lea     ecx, [esi+4]
and     eax, 3fffffffh
lea     ebp, ds:0[eax*2]
push    ebp
push    offset src
push    ecx
call    _memcpy
add     esp, 0ch
mov     eax, ebx
cdq
sub     eax, edx
push    ebp
sar     eax, 1
mov     edi, eax
mov     eax, ds:dword_4a6150
sub     eax, edi
lea     ecx, src.pered[eax*4]
mov     eax, ds:dword_4a6154
push    ecx
sub     eax, edi
lea     eax, [esi+eax*4]
add     eax, 4
push    eax
call    _memcpy
mov     ax, word ptr ds:dword_4a6154
add     esp, 0ch
mov     [esi+2], ax
mov     edx, edi
movzx   eax, ax
sub     eax, edi
cmp     eax, edi
jle     short loc_40b497
lea     eax, [esi+edi*4+7]
mov     byte ptr [eax], 4
add     eax, 4
inc     edx
xor     ecx, ecx
mov     cx, [esi+2]
sub     ecx, edi
cmp     ecx, edx
jg      short loc_40b484
mov     eax, [esp+18h+hmem]
push    eax
call    ds:globalunlock
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     cx, cx
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
push    ebp
mov     ax, [edi+2]
dec     ax
test    ax, ax
jle     short loc_40b532
lea     ebp, [ecx+1]
mov     bx, bp
cmp     [edi+2], bp
jle     short loc_40b524
movsx   eax, cx
lea     esi, [edi+eax*4]
movsx   ecx, bx
mov     al, [edi+ecx*4+4]
lea     edx, [edi+ecx*4]
cmp     [esi+4], al
jnz     short loc_40b51c
mov     al, [edx+5]
cmp     [esi+5], al
jnz     short loc_40b51c
mov     al, [edx+6]
cmp     [esi+6], al
jnz     short loc_40b51c
mov     ax, [edi+2]
add     edx, 4
dec     ax
mov     [edi+2], ax
movzx   eax, ax
sub     eax, ecx
lea     ecx, [edx+4]
shl     eax, 2
push    eax
push    ecx
push    edx
call    _memcpy
add     esp, 0ch
jmp     short loc_40b51e
inc     bx
cmp     [edi+2], bx
jg      short loc_40b4d8
mov     cx, bp
mov     ax, [edi+2]
dec     ax
cmp     ax, bp
jg      short loc_40b4c6
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_8]
sub     esp, 4
test    eax, eax
push    ebx
push    esi
push    edi
push    ebp
jle     short loc_40b5b5
mov     esi, [esp+14h+arg_4]
mov     ebx, [esp+14h+arg_0]
mov     [esp+14h+var_4], eax
xor     ebp, ebp
cmp     [ebx+2], bp
jbe     short loc_40b5ac
lea     edi, [ebx+4]
mov     al, [esi]
cmp     [edi], al
jnz     short loc_40b59e
mov     al, [esi+1]
cmp     [edi+1], al
jnz     short loc_40b59e
mov     al, [edi+2]
cmp     [esi+2], al
jnz     short loc_40b59e
mov     ax, [ebx+2]
lea     ecx, [edi+4]
dec     ax
mov     [ebx+2], ax
movzx   eax, ax
sub     eax, ebp
shl     eax, 2
push    eax
push    ecx
push    edi
call    _memcpy
add     esp, 0ch
jmp     short loc_40b5a2
add     edi, 4
inc     ebp
xor     eax, eax
mov     ax, [ebx+2]
cmp     eax, ebp
jg      short loc_40b566
add     esi, 4
dec     [esp+14h+var_4]
jnz     short loc_40b55b
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_8]
sub     esp, 10h
shl     eax, 2
push    ebx
push    esi
push    edi
push    ebp
push    2
push    eax
call    sub_45b8f0
mov     [esp+28h+hmem], eax
add     esp, 8
test    eax, eax
jnz     short loc_40b5eb
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+hmem]
push    eax
call    ds:globallock
mov     esi, eax
mov     di, word ptr [esp+20h+arg_8]
xor     bx, bx
cmp     di, bx
jle     short loc_40b655
movsx   eax, bx
inc     bx
mov     ecx, [esp+20h+arg_0]
lea     ebp, ds:0[eax*4]
mov     eax, [esp+20h+arg_4]
add     eax, ebp
add     ebp, esi
mov     [esp+20h+var_8], eax
push    eax
push    ecx
call    sub_40b790
mov     [ebp+0], ax
add     esp, 8
movsx   ecx, ax
mov     eax, [esp+20h+arg_0]
lea     ecx, [eax+ecx*4]
mov     eax, [esp+20h+var_8]
add     ecx, 4
push    ecx
push    eax
call    sub_40b800
mov     [ebp+2], ax
add     esp, 8
cmp     word ptr [esp+20h+arg_8], bx
jg      short loc_40b605
movsx   eax, word ptr [esp+20h+arg_8]
xor     cx, cx
dec     eax
mov     [esp+20h+var_8], eax
test    eax, eax
jle     short loc_40b6b4
lea     eax, [ecx+1]
mov     dx, ax
mov     [esp+20h+var_c], ax
cmp     di, ax
jle     short loc_40b6a6
movsx   eax, cx
lea     ecx, [esi+eax*4+2]
lea     ebx, [esi+eax*4]
movsx   eax, dx
mov     bp, [ecx]
lea     eax, [esi+eax*4]
cmp     [eax+2], bp
jge     short loc_40b69f
mov     ebp, [ebx]
mov     [esp+20h+var_10], ebp
mov     ebp, [eax]
mov     [ebx], ebp
mov     ebp, [esp+20h+var_10]
mov     [eax], ebp
inc     dx
cmp     di, dx
jg      short loc_40b680
mov     cx, [esp+20h+var_c]
movsx   eax, cx
cmp     eax, [esp+20h+var_8]
jl      short loc_40b666
xor     bx, bx
test    di, di
jle     loc_40b753
cmp     [esp+20h+arg_c], 0
jle     loc_40b75e
movsx   eax, bx
mov     ax, [esi+eax*4]
mov     ecx, [esp+20h+arg_0]
mov     bp, [ecx+2]
movsx   edx, ax
dec     bp
mov     word ptr [esp+20h+var_8], ax
movzx   eax, bp
mov     [ecx+2], bp
sub     eax, edx
shl     eax, 2
lea     ecx, [ecx+edx*4]
push    eax
add     ecx, 4
inc     bx
lea     edx, [ecx+4]
mov     bp, bx
push    edx
push    ecx
call    _memcpy
dec     [esp+2ch+arg_c]
add     esp, 0ch
cmp     di, bx
jle     short loc_40b753
movsx   edx, bp
lea     ecx, [esi+edx*4]
mov     ax, [ecx]
cmp     word ptr [esp+20h+var_8], ax
jnz     short loc_40b73c
dec     di
movsx   eax, di
sub     eax, edx
lea     edx, [ecx+4]
shl     eax, 2
push    eax
push    edx
push    ecx
call    _memcpy
add     esp, 0ch
jmp     short loc_40b745
jge     short loc_40b743
dec     ax
mov     [ecx], ax
inc     bp
cmp     di, bp
jg      short loc_40b712
cmp     di, bx
jg      loc_40b6c0
cmp     [esp+20h+arg_c], 0
jg      loc_40b5f8
mov     eax, [esp+20h+hmem]
push    eax
call    ds:globalunlock
mov     ecx, [esp+20h+hmem]
push    ecx
call    sub_45ba00
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
mov     ax, [esi+2]
push    ebp
test    ax, ax
jnz     short loc_40b7af
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     bx, 7fffh
xor     di, di
test    ax, ax
jle     short loc_40b7e7
mov     ebp, [esp+14h+arg_4]
movsx   eax, di
push    ebp
lea     eax, [esi+eax*4]
add     eax, 4
push    eax
call    sub_40b800
add     esp, 8
cmp     ax, bx
jge     short loc_40b7df
mov     bx, ax
mov     [esp+14h+var_2], di
inc     di
cmp     [esi+2], di
jg      short loc_40b7bf
mov     ax, [esp+14h+var_2]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ecx, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     bl, [ecx]
mov     esi, [esp+0ch+arg_0]
mov     dl, [esi]
cmp     bl, dl
jnb     short loc_40b81d
movzx   ax, dl
movzx   dx, bl
jmp     short loc_40b825
movzx   ax, bl
movzx   dx, dl
sub     ax, dx
mov     bl, [ecx+1]
mov     dl, [esi+1]
cmp     bl, dl
jnb     short loc_40b83c
movzx   di, dl
movzx   dx, bl
jmp     short loc_40b844
movzx   di, bl
movzx   dx, dl
sub     ax, dx
mov     bl, [esi+2]
add     ax, di
mov     dl, [ecx+2]
cmp     dl, bl
jnb     short loc_40b866
movzx   dx, dl
sub     ax, dx
pop     edi
movzx   cx, bl
add     ax, cx
pop     esi
pop     ebx
retn
movzx   cx, dl
movzx   dx, bl
sub     ax, dx
pop     edi
add     ax, cx
pop     esi
pop     ebx
retn
push    esi
push    edi
xor     esi, esi
call    sub_469a70
cmp     eax, 8
mov     edi, eax
jl      short loc_40b8c4
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_40b8c4
push    24h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4612e0
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_40b932
mov     eax, 100h
cmp     edi, 8
jge     short loc_40b8d7
mov     eax, 10h
push    108h
mov     ecx, ds:hinstance
movzx   eax, ax
push    eax
push    ecx
call    ds:findresourcea
test    eax, eax
jz      short loc_40b932
push    eax
mov     eax, ds:hinstance
push    eax
call    ds:loadresource
mov     edi, eax
test    edi, edi
jz      short loc_40b932
push    edi
call    ds:lockresource
test    eax, eax
jz      short loc_40b92b
add     eax, 14h
xor     ecx, ecx
mov     cx, [eax+2]
shl     ecx, 2
add     ecx, 5
dec     ecx
push    ecx
push    eax
call    sub_45b910
add     esp, 8
mov     esi, eax
push    edi
call    ds:freeresource
mov     eax, esi
pop     edi
pop     esi
retn
push    ebx
push    esi
push    edi
mov     esi, 0ah
mov     edi, [esp+0ch+arg_0]
push    ebp
xor     ebp, ebp
mov     dword ptr [edi], 0
cmp     dword_4ad144, ebp
jnz     short loc_40b975
mov     eax, hpal
push    eax
call    sub_469ab0
movzx   ebp, ax
add     esp, 4
lea     esi, ds:0ah[ebp*4]
push    42h
push    esi
call    sub_45b8f0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_40b9cd
push    ebx
call    ds:globallock
mov     word ptr [eax], 0
mov     ecx, dword_4ad148
mov     [eax+2], ecx
mov     word ptr [eax+6], 300h
mov     [eax+8], bp
cmp     dword_4ad144, 0
jnz     short loc_40b9c4
add     eax, 0ah
mov     ecx, hpal
push    eax
push    ebp
push    0
mov     ebp, ds:getpaletteentries
push    ecx
call    ebp
push    ebx
call    ds:globalunlock
mov     [edi], esi
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+hmem]
push    edi
push    ebp
xor     edi, edi
cmp     esi, edi
jz      short loc_40ba44
push    esi
call    ds:globallock
cmp     [eax], di
mov     ebx, eax
jnz     short loc_40ba3d
xor     eax, eax
mov     ebp, 0
mov     ax, [ebx+8]
test    eax, eax
jle     short loc_40ba21
shl     eax, 2
lea     ecx, [ebx+6]
add     eax, 5
dec     eax
push    eax
push    ecx
call    sub_45b910
add     esp, 8
mov     ebp, eax
mov     eax, [ebx+2]
push    eax
push    ebp
call    sub_40b1f0
add     esp, 8
mov     edi, eax
test    ebp, ebp
jz      short loc_40ba3d
push    ebp
call    sub_45ba00
add     esp, 4
push    esi
call    ds:globalunlock
test    edi, edi
jnz     short loc_40ba4f
call    sub_40b0d0
mov     edi, eax
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     [esp+arg_4], 0
push    esi
push    edi
mov     esi, 0
jnz     short loc_40ba74
mov     esi, dword_4ad148
mov     edi, [esp+8+ho]
test    edi, edi
jz      short loc_40ba99
cmp     [esp+8+arg_8], 0
jz      short loc_40ba99
push    esi
push    0
push    0
push    edi
call    sub_40b240
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
retn
push    edi
call    sub_469ae0
add     esp, 4
push    esi
push    eax
call    sub_40b1f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_40babd
test    edi, edi
jz      short loc_40babd
push    edi
call    ds:deleteobject
mov     eax, esi
pop     edi
pop     esi
retn
sub     esp, 4
cmp     ds:frequency, 0
jz      short loc_40bb12
call    ds:getfocus
test    eax, eax
jz      short loc_40bb12
cmp     eax, ds:frequency
jz      short loc_40bb12
lea     ecx, [esp+4+dwprocessid]
push    ecx
push    eax
call    ds:getwindowthreadprocessid
call    ds:getcurrentprocessid
cmp     eax, [esp+4+dwprocessid]
jnz     short loc_40bb12
mov     eax, ds:frequency
push    eax
call    ds:setfocus
add     esp, 4
retn
push    ebp
mov     ebp, esp
add     esp, 0fffffff8h
push    ebx
push    ecx
push    esi
push    edi
cld
mov     ax, word ptr [ebp+arg_8+2]
or      ax, ax
js      short loc_40c84e
jnz     short loc_40c853
test    word ptr [ebp+arg_8], 0ffffh
jnz     short loc_40c853
jmp     loc_40ca79
mov     esi, [ebp+arg_c]
or      esi, esi
jnz     short loc_40c867
xor     ax, ax
mov     [ebp+var_4], ax
mov     [ebp+var_6], ax
jmp     short loc_40c876
mov     ax, [esi]
mov     [ebp+var_4], ax
mov     ax, [esi+2]
mov     [ebp+var_6], ax
mov     ax, [ebp+arg_18]
movzx   eax, ax
dec     eax
mov     edi, [ebp+arg_4]
add     edi, eax
mov     esi, [ebp+arg_0]
shl     eax, 1
add     esi, eax
jmp     short $+2
mov     cl, 4
mov     [ebp+var_2], 2
lodsb
shl     ax, 1
movzx   ebx, [ebp+var_4]
and     bx, 7f0h
mov     dx, ax
and     dx, 0eh
add     bx, dx
mov     dx, [ebp+var_6]
add     dx, cs:word_40c030[ebx]
jo      loc_40c94f
mov     [ebp+var_6], dx
mov     dx, [ebp+var_4]
mov     bx, dx
sar     bx, cl
sar     bx, 1
sub     dx, bx
mov     bx, ax
and     bx, 0eh
add     dx, cs:word_40c020[ebx]
js      loc_40c966
mov     [ebp+var_4], dx
mov     bx, [ebp+var_6]
mov     dx, bx
xor     bh, 80h
mov     [edi], bh
add     edi, [ebp+arg_14]
mov     bx, dx
sar     bx, 1
sar     bx, 1
sar     bx, 1
sub     dx, bx
mov     [ebp+var_6], dx
shr     ax, 1
shr     ax, 1
shr     ax, 1
mov     bx, [ebp+var_4]
and     bx, 7f0h
shr     bx, 1
mov     dx, ax
and     dx, 6
add     bx, dx
mov     dx, [ebp+var_6]
add     dx, cs:word_40bc20[ebx]
jno     short loc_40c987
or      dx, dx
js      short loc_40c944
mov     dx, 8001h
jmp     short loc_40c987
mov     dx, 7fffh
jmp     short loc_40c987
xor     dx, dx
jmp     short loc_40c9ac
or      dx, dx
js      short loc_40c95d
mov     dx, 8001h
jmp     loc_40c8bd
mov     dx, 7fffh
jmp     loc_40c8bd
xor     dx, dx
jmp     loc_40c8e6
or      dx, dx
js      short loc_40c979
mov     dx, 8001h
jmp     short loc_40c9ee
mov     dx, 7fffh
jmp     short loc_40c9ee
xor     dx, dx
jmp     loc_40ca13
mov     [ebp+var_6], dx
mov     dx, [ebp+var_4]
mov     bx, dx
sar     bx, cl
sar     bx, 1
sub     dx, bx
mov     bx, ax
and     bx, 6
add     dx, cs:word_40bc18[ebx]
js      short loc_40c94a
mov     [ebp+var_4], dx
mov     bx, [ebp+var_6]
mov     dx, bx
xor     bh, 80h
mov     [edi], bh
add     edi, [ebp+arg_14]
mov     bx, dx
sar     bx, 1
sar     bx, 1
sar     bx, 1
sub     dx, bx
shr     ax, 1
shr     ax, 1
and     ax, 0eh
mov     bx, [ebp+var_4]
and     bx, 7f0h
add     bx, ax
add     dx, cs:word_40c030[ebx]
jo      short loc_40c96e
mov     [ebp+var_6], dx
mov     dx, [ebp+var_4]
mov     bx, dx
sar     bx, cl
sar     bx, 1
sub     dx, bx
mov     bx, ax
add     dx, cs:word_40c020[ebx]
js      loc_40c97f
mov     [ebp+var_4], dx
mov     bx, [ebp+var_6]
mov     dx, bx
xor     bh, 80h
mov     [edi], bh
add     edi, [ebp+arg_14]
mov     bx, dx
sar     bx, 1
sar     bx, 1
sar     bx, 1
sub     dx, bx
mov     [ebp+var_6], dx
dec     [ebp+var_2]
jz      short loc_40ca44
jmp     loc_40c894
mov     eax, [ebp+arg_14]
dec     eax
shl     eax, 1
add     esi, eax
sub     word ptr [ebp+arg_8], 1
sbb     word ptr [ebp+arg_8+2], 0
mov     eax, [ebp+arg_8]
or      eax, [ebp+arg_8+2]
jz      short loc_40ca63
jmp     loc_40c88e
mov     edi, [ebp+arg_10]
or      edi, edi
jz      short loc_40ca79
mov     ax, [ebp+var_4]
mov     [edi], ax
mov     ax, [ebp+var_6]
mov     [edi+2], ax
pop     edi
pop     esi
pop     ecx
pop     ebx
leave
retn
push    esi
mov     edx, ds:hinstance
mov     si, [esp+4+arg_0]
push    107h
lea     eax, [esi+1]
movzx   ecx, ax
push    ecx
push    edx
call    ds:findresourcea
test    eax, eax
jnz     short loc_40caa9
mov     ax, 1388h
pop     esi
retn
movsx   ecx, si
push    eax
lea     esi, dword_4a6158[ecx*4]
mov     eax, ds:hinstance
push    eax
call    ds:loadresource
mov     [esi], eax
cmp     eax, 1
sbb     ecx, ecx
pop     esi
and     cx, 1388h
mov     ax, cx
retn
push    esi
push    edi
xor     esi, esi
xor     edi, edi
cmp     ds:dword_4a6158[esi*4], edi
jnz     short loc_40cb03
push    esi
call    sub_40ca80
movsx   eax, ax
add     esp, 4
test    eax, eax
jnz     loc_40cb88
inc     esi
cmp     esi, 5
jl      short loc_40cae6
mov     eax, ds:dword_4a6158
mov     esi, ds:lockresource
push    eax
call    esi
mov     ecx, ds:dword_4a615c
mov     ds:dword_4a616c, eax
push    ecx
call    esi
mov     ds:dword_4a6170, eax
mov     eax, ds:dword_4a6160
push    eax
call    esi
mov     ds:dword_4a6174, eax
mov     eax, ds:dword_4a6164
push    eax
call    esi
mov     ds:dword_4a6178, eax
mov     eax, ds:dword_4a6168
push    eax
call    esi
cmp     ds:dword_4a616c, 0
mov     ds:dword_4a617c, eax
jz      short loc_40cb7e
cmp     ds:dword_4a6170, 0
jz      short loc_40cb7e
cmp     ds:dword_4a6174, 0
jz      short loc_40cb7e
cmp     ds:dword_4a6178, 0
jz      short loc_40cb7e
test    eax, eax
jz      short loc_40cb7e
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_40cb90
mov     eax, 8
pop     edi
pop     esi
retn
push    esi
push    edi
xor     si, si
mov     edi, ds:lockresource
movsx   eax, si
mov     eax, ds:dword_4a6158[eax*4]
test    eax, eax
jz      short loc_40cbac
push    eax
call    edi
inc     si
cmp     si, 5
jl      short loc_40cb9b
xor     eax, eax
pop     edi
mov     ds:dword_4a616c, eax
mov     ds:dword_4a6170, eax
pop     esi
mov     ds:dword_4a6174, eax
mov     ds:dword_4a6178, eax
mov     ds:dword_4a617c, eax
retn
sub     esp, 1ch
cmp     [esp+1ch+arg_8], 1
push    ebx
push    esi
push    edi
push    ebp
jl      loc_40cf84
mov     eax, [esp+2ch+arg_c]
test    eax, eax
jz      short loc_40cc1d
mov     dx, [eax]
mov     di, [eax+2]
mov     bp, [eax+4]
mov     cx, [eax+6]
mov     si, [eax+8]
mov     bx, [eax+0ah]
mov     word ptr [esp+2ch+var_c], dx
mov     [esp+2ch+var_16], bx
jmp     short loc_40cc32
xor     di, di
xor     esi, esi
xor     bp, bp
xor     cx, cx
mov     word ptr [esp+2ch+var_c], si
mov     [esp+2ch+var_16], si
mov     edx, [esp+2ch+arg_18]
mov     eax, [esp+2ch+arg_0]
lea     ebx, [eax+edx-1]
mov     eax, [esp+2ch+arg_4]
mov     [esp+2ch+var_8], ebx
lea     eax, [eax+edx-1]
mov     ebx, [esp+2ch+var_8]
inc     [esp+2ch+var_8]
mov     dl, [ebx]
mov     [esp+2ch+var_19], dl
shr     dl, 4
and     dl, 0eh
movsx   ebx, dl
xor     edx, edx
mov     dx, bp
and     edx, 7f0h
add     edx, ds:dword_4a617c
mov     dx, [edx+ebx]
mov     [esp+2ch+var_18], dx
mov     edx, ds:dword_4a6178
mov     [esp+2ch+var_4], edx
mov     dx, bp
sar     dx, 5
sub     bp, dx
mov     edx, [esp+2ch+var_4]
add     bp, [edx+ebx]
jns     short loc_40cc9c
xor     bp, bp
movsx   edx, si
mov     si, [esp+2ch+var_18]
xor     si, [esp+2ch+var_16]
jge     short loc_40ccc0
sub     edx, 13ah
cmp     edx, 0ffff8000h
jge     short loc_40ccd3
mov     edx, 0ffff8001h
jmp     short loc_40ccd3
add     edx, 1fah
cmp     edx, 7fffh
jle     short loc_40ccd3
mov     edx, 7fffh
movsx   esi, [esp+2ch+var_18]
movsx   ecx, cx
add     ecx, esi
cmp     ecx, 7fffh
jle     short loc_40ccec
mov     ecx, 7fffh
jmp     short loc_40ccf9
cmp     ecx, 0ffff8000h
jge     short loc_40ccf9
mov     ecx, 0ffff8001h
movsx   ebx, di
movsx   edi, word ptr [esp+2ch+var_c]
mov     esi, ecx
mov     [esp+2ch+var_c], edi
sar     si, 1
mov     [esp+2ch+var_16], si
movsx   esi, dx
imul    ecx, esi
movsx   edx, [esp+2ch+var_16]
sar     ecx, 0fh
mov     [esp+2ch+var_14], edx
mov     edx, ebx
sub     edx, [esp+2ch+var_14]
sar     edx, 2
movsx   edx, dx
sub     ebx, edx
add     edx, [esp+2ch+var_14]
add     ebx, edi
add     edx, edi
sar     ebx, 8
sar     edx, 8
xor     bl, 80h
xor     dl, 80h
mov     [eax], bl
mov     bx, bp
add     eax, [esp+2ch+arg_14]
sar     bx, 5
mov     [eax], dl
add     eax, [esp+2ch+arg_14]
mov     dl, [esp+2ch+var_19]
and     dl, 18h
shr     dl, 2
movsx   edi, dl
mov     dx, bp
and     dx, 7f0h
shr     dx, 1
movsx   edx, dx
sub     bp, bx
add     edx, ds:dword_4a6174
mov     dx, [edx+edi]
mov     [esp+2ch+var_18], dx
mov     edx, ds:dword_4a6170
add     bp, [edx+edi]
jns     short loc_40cd94
xor     bp, bp
mov     dx, [esp+2ch+var_18]
xor     dx, [esp+2ch+var_16]
jge     short loc_40cdb5
sub     esi, 13ah
cmp     esi, 0ffff8000h
jge     short loc_40cdc8
mov     esi, 0ffff8001h
jmp     short loc_40cdc8
add     esi, 1fah
cmp     esi, 7fffh
jle     short loc_40cdc8
mov     esi, 7fffh
movsx   edx, [esp+2ch+var_18]
movsx   ecx, cx
add     edx, ecx
cmp     edx, 7fffh
jle     short loc_40cde1
mov     edx, 7fffh
jmp     short loc_40cdee
cmp     edx, 0ffff8000h
jge     short loc_40cdee
mov     edx, 0ffff8001h
mov     edi, edx
movsx   esi, si
sar     di, 1
imul    edx, esi
movsx   ecx, di
sar     edx, 0fh
mov     [esp+2ch+var_10], ecx
mov     ecx, [esp+2ch+var_c]
sub     ecx, [esp+2ch+var_10]
sar     ecx, 2
movsx   ebx, cx
mov     ecx, [esp+2ch+var_c]
sub     ecx, ebx
add     ecx, [esp+2ch+var_14]
sar     ecx, 8
xor     cl, 80h
mov     [eax], cl
add     eax, [esp+2ch+arg_14]
mov     ecx, [esp+2ch+var_10]
add     ecx, ebx
add     ecx, [esp+2ch+var_14]
sar     ecx, 8
xor     cl, 80h
mov     [eax], cl
add     eax, [esp+2ch+arg_14]
xor     ecx, ecx
mov     cl, [esp+2ch+var_19]
and     ecx, 7
lea     ebx, ds:0[ecx*2]
xor     ecx, ecx
mov     cx, bp
and     ecx, 7f0h
add     ecx, ds:dword_4a617c
mov     cx, [ecx+ebx]
mov     [esp+2ch+var_18], cx
mov     ecx, ds:dword_4a6178
mov     [esp+2ch+var_4], ecx
mov     cx, bp
sar     cx, 5
sub     bp, cx
mov     ecx, [esp+2ch+var_4]
add     bp, [ecx+ebx]
jns     short loc_40ce89
xor     bp, bp
mov     cx, [esp+2ch+var_18]
xor     cx, di
jge     short loc_40cea8
sub     esi, 13ah
cmp     esi, 0ffff8000h
jge     short loc_40cebb
mov     esi, 0ffff8001h
jmp     short loc_40cebb
add     esi, 1fah
cmp     esi, 7fffh
jle     short loc_40cebb
mov     esi, 7fffh
movsx   ecx, dx
movsx   ebx, [esp+2ch+var_18]
lea     edx, [ebx+ecx]
cmp     edx, 7fffh
jle     short loc_40ced5
mov     edx, 7fffh
jmp     short loc_40cee2
cmp     edx, 0ffff8000h
jge     short loc_40cee2
mov     edx, 0ffff8001h
mov     ecx, edx
mov     ebx, [esp+2ch+var_14]
sar     cx, 1
mov     [esp+2ch+var_16], cx
movsx   ecx, si
imul    ecx, edx
movsx   edx, [esp+2ch+var_16]
sar     ecx, 0fh
mov     [esp+2ch+var_4], edx
mov     edx, [esp+2ch+var_14]
sub     edx, [esp+2ch+var_4]
sar     edx, 2
movsx   edx, dx
sub     ebx, edx
add     edx, [esp+2ch+var_4]
add     ebx, [esp+2ch+var_10]
add     edx, [esp+2ch+var_10]
sar     ebx, 8
sar     edx, 8
xor     bl, 80h
xor     dl, 80h
mov     [eax], bl
mov     bx, [esp+2ch+var_16]
add     eax, [esp+2ch+arg_14]
mov     [eax], dl
add     eax, [esp+2ch+arg_14]
mov     edx, [esp+2ch+arg_14]
dec     [esp+2ch+arg_8]
mov     word ptr [esp+2ch+var_c], bx
mov     ebx, [esp+2ch+var_8]
lea     edx, [edx+ebx-1]
mov     [esp+2ch+var_8], edx
jnz     loc_40cc4a
mov     eax, [esp+2ch+arg_10]
test    eax, eax
jz      short loc_40cf84
mov     dx, word ptr [esp+2ch+var_c]
mov     [eax], dx
mov     bx, [esp+2ch+var_16]
mov     [eax+2], di
mov     [eax+4], bp
mov     [eax+6], cx
mov     [eax+8], si
mov     [eax+0ah], bx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_489160
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+14h+lpstring1]
push    ebp
cmp     esi, ebx
jz      short loc_40cfc3
mov     [esi], bl
mov     ebp, [esp+18h+arg_4]
test    ebp, ebp
jz      short loc_40cfcf
mov     byte ptr [ebp+0], 0
cmp     [esp+18h+arg_8], 0
jz      short loc_40cfdd
mov     eax, [esp+18h+arg_8]
mov     byte ptr [eax], 0
push    103h
mov     eax, ds:hinstance
push    1
push    eax
call    ds:findresourcea
mov     edi, eax
test    edi, edi
jz      short loc_40d057
push    edi
mov     eax, ds:hinstance
push    eax
call    ds:sizeofresource
cmp     eax, 30ch
jb      short loc_40d057
push    edi
mov     eax, ds:hinstance
push    eax
call    ds:loadresource
mov     edi, eax
test    edi, edi
jz      short loc_40d057
push    edi
call    ds:lockresource
test    eax, eax
jz      short loc_40d050
mov     ecx, [esp+18h+arg_8]
push    eax
lea     eax, [esp+1ch+var_5+1]
lea     edx, [esp+1ch+var_5]
push    eax
push    ecx
push    ebp
push    esi
push    edx
call    sub_495c10
test    al, al
jz      short loc_40d04e
cmp     byte ptr [esp+18h+var_5], 1
sbb     ebx, ebx
neg     ebx
jmp     short loc_40d050
xor     ebx, ebx
push    edi
call    ds:freeresource
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     [esp+arg_0], 0
movsx   eax, [esp+arg_4]
jnz     short loc_40d07d
retn
add     eax, 32h
retn
mov     eax, [esp+arg_4]
sub     esp, 8
cmp     eax, 32h
jle     short loc_40d0b9
mov     [esp+8+var_8], 1
sub     ax, 32h
mov     cx, [esp+8+arg_0]
mov     word ptr [esp+8+var_4], ax
mov     word ptr [esp+8+var_4+2], cx
jmp     short loc_40d0e0
cmp     eax, 6
jg      short loc_40d0d0
mov     word ptr [esp+8+var_4], ax
xor     ecx, ecx
mov     word ptr [esp+8+var_4+2], cx
mov     [esp+8+var_8], ecx
jmp     short loc_40d0e0
xor     eax, eax
mov     word ptr [esp+8+var_4+2], ax
mov     [esp+8+var_8], eax
mov     word ptr [esp+8+var_4], ax
mov     eax, [esp+8+var_8]
mov     edx, [esp+8+var_4]
add     esp, 8
retn
push    esi
mov     ecx, 8
lea     esi, [esp+4+arg_0]
push    edi
lea     edi, [esp+8+arg_8]
repe cmpsb
mov     eax, 1
jz      short loc_40d10a
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+8]
cmp     dword ptr [eax+8], 0
jz      short loc_40d122
call    sub_40d720
xor     eax, eax
retn
call    sub_40d6d0
xor     eax, eax
retn
mov     dx, ds:word_4a8518
mov     eax, [esp+arg_4]
sub     esp, 18h
mov     ecx, [eax+8]
push    ecx
push    edx
call    sub_40d090
mov     [esp+20h+var_18], eax
add     esp, 8
mov     [esp+18h+var_14], edx
push    edx
push    eax
call    sub_40d5e0
mov     [esp+20h+var_10], eax
add     esp, 8
cmp     [esp+18h+var_18], 0
mov     [esp+18h+var_c], edx
jnz     short loc_40d1ad
call    sub_40d5d0
mov     ecx, [esp+18h+var_c]
mov     [esp+18h+var_8], eax
mov     eax, [esp+18h+var_10]
push    ecx
mov     [esp+1ch+var_4], edx
push    eax
mov     edx, [esp+20h+var_8]
mov     eax, [esp+20h+var_4]
push    eax
push    edx
call    sub_40d0f0
add     esp, 10h
test    eax, eax
jz      short loc_40d1ec
movsx   eax, word ptr [esp+18h+var_14]
push    eax
call    sub_40d4a0
add     esp, 4
xor     eax, eax
add     esp, 18h
retn
call    sub_40d5d0
mov     ecx, [esp+18h+var_c]
mov     [esp+18h+var_8], eax
mov     eax, [esp+18h+var_10]
push    ecx
mov     [esp+1ch+var_4], edx
push    eax
mov     edx, [esp+20h+var_8]
mov     eax, [esp+20h+var_4]
push    eax
push    edx
call    sub_40d0f0
add     esp, 10h
test    eax, eax
jz      short loc_40d1ec
mov     ecx, [esp+18h+var_18]
mov     eax, [esp+18h+var_14]
push    eax
push    ecx
call    sub_40d550
add     esp, 8
xor     eax, eax
add     esp, 18h
retn
push    2
push    32h
call    sub_45bd50
add     esp, 8
mov     ds:dword_4a6180, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, ds:dword_4a6180
push    eax
call    sub_45bdb0
add     esp, 4
retn
push    esi
mov     eax, ds:dword_4a6180
mov     ecx, [eax+2eh]
push    ecx
call    sub_475620
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_40d264
mov     eax, [esp+4+arg_4]
mov     ecx, dword ptr [esp+4+arg_0]
push    eax
push    ecx
push    esi
call    sub_475a20
add     esp, 0ch
push    esi
call    sub_475610
add     esp, 4
pop     esi
retn
push    esi
mov     eax, ds:dword_4a6180
push    edi
mov     ecx, [eax+2eh]
push    ecx
call    sub_475620
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_40d28e
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+8+arg_0]
push    eax
push    edi
call    sub_4759f0
add     esp, 8
mov     esi, eax
push    edi
call    sub_475610
add     esp, 4
test    esi, esi
jnz     short loc_40d2b0
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
call    sub_475620
add     esp, 4
pop     edi
pop     esi
retn
mov     eax, [esp+arg_6]
push    esi
push    edi
push    eax
call    sub_40d270
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_40d2da
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+10h]
push    eax
push    edi
call    sub_4759f0
add     esp, 8
mov     esi, eax
push    edi
call    sub_475610
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_40d313
cmp     eax, 0ffffffffh
jz      short loc_40d313
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
test    eax, eax
jl      short loc_40d333
cmp     eax, 6
jg      short loc_40d333
mov     eax, 1
retn
xor     eax, eax
retn
sub     esp, 8
push    esi
call    sub_40d200
test    eax, eax
jnz     short loc_40d354
xor     eax, eax
pop     esi
add     esp, 8
retn
xor     esi, esi
push    esi
push    0
inc     esi
call    sub_40d090
add     esp, 8
push    edx
push    eax
call    sub_40d9b0
add     esp, 8
mov     ecx, ds:dword_4a6180
cmp     esi, 6
mov     [ecx+esi*4+0eh], eax
jle     short loc_40d356
push    0
push    0
call    sub_40d090
add     esp, 8
mov     ecx, edx
mov     edx, ds:dword_4a6180
push    0
push    0
mov     [edx], eax
mov     [edx+4], ecx
call    sub_40d090
mov     [esp+14h+var_8], eax
add     esp, 8
mov     eax, ds:dword_4a6180
mov     ecx, [esp+0ch+var_8]
mov     [eax+8], ecx
mov     [eax+0ch], edx
add     eax, 8
mov     eax, ds:dword_4a6180
mov     word ptr [eax+10h], 0
call    sub_4755f0
mov     ecx, ds:dword_4a6180
pop     esi
mov     [ecx+2eh], eax
mov     eax, 1
add     esp, 8
retn
sub     esp, 8
cmp     ds:dword_4a6180, 0
push    esi
push    edi
jz      loc_40d48b
mov     esi, 1
mov     eax, ds:dword_4a6180
mov     ecx, [eax+2eh]
push    ecx
call    sub_475630
add     esp, 4
cmp     ax, si
jb      short loc_40d42f
push    esi
call    sub_40d880
mov     eax, ds:dword_4a6180
add     esp, 4
inc     esi
mov     ecx, [eax+2eh]
push    ecx
call    sub_475630
movzx   ecx, ax
add     esp, 4
cmp     ecx, esi
jge     short loc_40d40d
mov     eax, ds:dword_4a6180
xor     esi, esi
mov     edi, 0ffffffffh
mov     ecx, [eax+2eh]
push    ecx
call    sub_475600
add     esp, 4
push    esi
push    0
inc     esi
call    sub_40d090
mov     [esp+18h+var_8], eax
add     esp, 8
mov     eax, ds:dword_4a6180
mov     dword ptr [esp+10h+var_4], edx
mov     edx, [esp+10h+var_8]
mov     ecx, [eax+esi*4+0eh]
mov     eax, dword ptr [esp+10h+var_4]
push    ecx
push    eax
push    edx
call    sub_40da50
add     esp, 0ch
mov     ecx, ds:dword_4a6180
cmp     esi, 6
mov     [ecx+esi*4+0eh], edi
jle     short loc_40d447
call    sub_40d220
pop     edi
pop     esi
add     esp, 8
retn
sub     esp, 10h
cmp     ds:dword_4a6180, 0
push    esi
jz      short loc_40d4bd
mov     eax, ds:dword_4a6180
mov     ecx, [eax]
mov     edx, [eax+4]
mov     [esp+14h+var_10], ecx
jmp     short loc_40d4cd
push    0
push    0
call    sub_40d090
mov     [esp+1ch+var_10], eax
add     esp, 8
mov     esi, [esp+14h+arg_0]
mov     [esp+14h+var_c], edx
push    esi
call    sub_40d320
add     esp, 4
test    eax, eax
jz      short loc_40d50d
cmp     ds:dword_4a6180, 0
mov     eax, 0
jz      short loc_40d4f9
mov     eax, ds:dword_4a6180
mov     eax, [eax+esi*4+12h]
test    eax, eax
jz      short loc_40d537
cmp     eax, 0ffffffffh
jz      short loc_40d537
push    eax
call    sub_40da70
add     esp, 4
jmp     short loc_40d51f
push    esi
call    sub_40db00
add     esp, 4
cmp     ds:dword_4a6180, 0
jz      short loc_40d537
push    esi
push    0
call    sub_40d090
add     esp, 8
mov     ecx, edx
mov     edx, ds:dword_4a6180
mov     [edx], eax
mov     [edx+4], ecx
mov     eax, [esp+14h+var_10]
mov     ecx, [esp+14h+var_c]
push    ecx
push    eax
call    sub_40d070
add     esp, 8
pop     esi
add     esp, 10h
retn
sub     esp, 8
mov     eax, ds:dword_4a6180
mov     ecx, [eax]
mov     edx, [eax+4]
mov     eax, [esp+8+arg_0]
mov     [esp+8+var_8], ecx
mov     ecx, [esp+8+arg_4]
mov     [esp+8+var_4], edx
push    ecx
push    eax
call    sub_40d2c0
add     esp, 8
test    eax, eax
jz      short loc_40d588
cmp     eax, 0ffffffffh
jz      short loc_40d588
push    eax
call    sub_40da70
jmp     short loc_40d5a0
mov     eax, [esp+8+arg_0]
mov     ecx, [esp+8+arg_4]
push    ecx
push    eax
call    sub_40d070
add     esp, 8
push    eax
call    sub_40db00
mov     eax, [esp+0ch+arg_0]
mov     ecx, [esp+0ch+arg_4]
add     esp, 4
mov     edx, ds:dword_4a6180
mov     [edx], eax
mov     eax, [esp+8+var_8]
mov     [edx+4], ecx
mov     edx, [esp+8+var_4]
add     esp, 8
retn
mov     ecx, ds:dword_4a6180
mov     eax, [ecx]
mov     edx, [ecx+4]
retn
sub     esp, 8
mov     edx, ds:dword_4a6180
mov     eax, [edx+8]
mov     ecx, [edx+0ch]
add     edx, 8
mov     [esp+8+var_8], eax
mov     eax, [esp+8+arg_0]
mov     [esp+8+var_4], ecx
mov     ecx, [esp+8+arg_4]
mov     [edx], eax
mov     eax, [esp+8+var_8]
mov     [edx+4], ecx
mov     edx, [esp+8+var_4]
add     esp, 8
retn
mov     ecx, ds:dword_4a6180
mov     eax, [ecx+8]
mov     edx, [ecx+0ch]
add     ecx, 8
retn
sub     esp, 8
mov     eax, ds:dword_4a6180
cmp     word ptr [eax+10h], 0
jge     short loc_40d64a
push    0
call    sub_40da70
add     esp, 0ch
retn
call    sub_40d620
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], edx
cmp     [esp+8+var_8], 0
jnz     short loc_40d66b
movsx   eax, dx
push    eax
call    sub_40d4a0
add     esp, 0ch
retn
mov     eax, [esp+8+var_8]
mov     ecx, [esp+8+var_4]
push    ecx
push    eax
call    sub_40d550
add     esp, 10h
retn
mov     ecx, ds:dword_4a6180
mov     ax, [ecx+10h]
add     ecx, 10h
test    ax, ax
jge     short loc_40d697
inc     ax
mov     [ecx], ax
mov     eax, ds:dword_4a6180
mov     ax, [eax+10h]
retn
mov     eax, ds:dword_4a6180
dec     word ptr [eax+10h]
mov     eax, ds:dword_4a6180
mov     ax, [eax+10h]
retn
push    esi
mov     eax, ds:dword_4a6180
cmp     word ptr [eax+10h], 0ffffh
jge     short loc_40d6f2
mov     esi, 0ffffffffh
call    sub_40d9a0
mov     eax, ds:dword_4a6180
cmp     [eax+10h], si
jl      short loc_40d6e2
mov     eax, ds:dword_4a6180
cmp     word ptr [eax+10h], 0
jl      short loc_40d710
xor     esi, esi
call    sub_40d980
mov     eax, ds:dword_4a6180
cmp     [eax+10h], si
jge     short loc_40d700
pop     esi
retn
push    esi
mov     eax, ds:dword_4a6180
cmp     word ptr [eax+10h], 0
jle     short loc_40d73f
xor     esi, esi
call    sub_40d980
mov     eax, ds:dword_4a6180
cmp     [eax+10h], si
jg      short loc_40d72f
mov     eax, ds:dword_4a6180
cmp     word ptr [eax+10h], 0ffffh
jg      short loc_40d760
mov     esi, 0ffffffffh
call    sub_40d9a0
mov     eax, ds:dword_4a6180
cmp     [eax+10h], si
jle     short loc_40d750
pop     esi
retn
mov     ecx, [esp+arg_4]
sub     esp, 8
movsx   eax, word ptr [ecx]
movsx   edx, word ptr [ecx+2]
mov     [esp+8+xhotspot], eax
mov     [esp+8+yhotspot], edx
mov     ax, [esp+8+arg_8]
lea     edx, [ecx+0ah]
sub     ax, 0ah
push    eax
push    edx
mov     ax, [ecx+8]
push    eax
xor     eax, eax
mov     ax, [ecx+6]
mov     edx, [esp+14h+xhotspot]
push    eax
xor     eax, eax
mov     ax, [ecx+4]
mov     ecx, [esp+18h+yhotspot]
push    eax
push    ecx
push    edx
call    sub_40da80
mov     cx, [esp+24h+arg_0]
mov     edx, [esp+24h+arg_c]
add     esp, 1ch
push    eax
push    ecx
mov     eax, [edx]
push    eax
call    sub_475a20
add     esp, 0ch
mov     eax, 1
add     esp, 8
retn
sub     esp, 4
push    esi
mov     si, [esp+8+arg_0]
push    esi
call    sub_40d270
mov     [esp+0ch+var_4], eax
add     esp, 4
test    eax, eax
jnz     short loc_40d81e
call    sub_4755f0
mov     [esp+8+var_4], eax
push    eax
push    esi
call    sub_40d230
mov     eax, [esp+10h+var_4]
add     esp, 8
push    eax
call    sub_475620
mov     [esp+0ch+var_4], eax
add     esp, 4
lea     eax, [esp+8+var_4]
push    eax
push    offset sub_40d770
push    esi
call    sub_40dad0
add     esp, 4
push    eax
call    sub_474180
mov     eax, [esp+14h+var_4]
add     esp, 0ch
push    eax
call    sub_475610
add     esp, 4
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+8]
push    esi
call    sub_40d300
add     esp, 4
test    eax, eax
jz      short loc_40d86b
push    esi
call    sub_40dac0
add     esp, 4
mov     eax, 1
pop     esi
retn
sub     esp, 8
push    esi
push    edi
mov     si, [esp+10h+arg_0]
push    esi
call    sub_40d270
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_40d8eb
push    edi
call    sub_475610
add     esp, 4
push    0
push    offset loc_40d850
push    1
push    edi
call    sub_475b30
add     esp, 10h
push    edi
call    sub_475600
add     esp, 4
push    0
push    esi
call    sub_40d230
add     esp, 8
cmp     ds:word_4a8518, 0
jz      short loc_40d8eb
push    0
push    0
call    sub_40d090
add     esp, 8
mov     ecx, edx
mov     edx, ds:dword_4a6180
mov     [edx], eax
mov     [edx+4], ecx
pop     edi
pop     esi
add     esp, 8
retn
sub     esp, 8
push    esi
mov     esi, [esp+0ch+arg_0]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
push    0
jnz     short loc_40d926
push    0
call    sub_40d090
add     esp, 8
pop     esi
add     esp, 8
retn
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 3
jz      short loc_40d952
cmp     ax, 0bh
jz      short loc_40d952
cmp     ax, 7
jz      short loc_40d952
push    0
push    0
call    sub_40d090
add     esp, 8
pop     esi
add     esp, 8
retn
push    3090002h
push    esi
shr     esi, 10h
call    sub_462670
add     esp, 8
movzx   eax, ax
push    eax
push    esi
call    sub_40d090
add     esp, 8
pop     esi
add     esp, 8
retn
call    sub_40d6b0
cmp     ax, 0ffffh
jg      short locret_40d995
push    0
call    sub_40da70
add     esp, 4
retn
call    sub_40d680
test    ax, ax
jnz     short locret_40d9af
jmp     sub_40d630
retn
movsx   eax, [esp+arg_4]
cmp     eax, 6
ja      short def_40d9ba
jmp     ds:jpt_40d9ba[eax*4]
mov     eax, 0ffffffffh
retn
push    7f00h
push    0
call    ds:loadcursora
retn
push    7f01h
push    0
call    ds:loadcursora
retn
push    7bh
mov     eax, ds:hinstance
push    eax
call    ds:loadcursora
retn
push    7ah
mov     eax, ds:hinstance
push    eax
call    ds:loadcursora
retn
push    78h
mov     eax, ds:hinstance
push    eax
call    ds:loadcursora
retn
push    7f02h
push    0
call    ds:loadcursora
retn
push    79h
mov     eax, ds:hinstance
push    eax
call    ds:loadcursora
retn
movsx   eax, [esp+arg_4]
cmp     eax, 3
jz      short loc_40da5f
cmp     eax, 6
jnz     short locret_40da6a
mov     eax, [esp+hcursor]
push    eax
call    ds:destroycursor
retn
mov     eax, [esp+hcursor]
push    eax
call    ds:setcursor
retn
push    esi
mov     esi, [esp+4+nwidth]
mov     ecx, [esp+4+nheight]
mov     eax, esi
cdq
and     edx, 7
add     eax, edx
mov     edx, [esp+4+pvandplane]
sar     eax, 3
imul    eax, ecx
add     eax, edx
push    eax
push    edx
mov     edx, [esp+0ch+xhotspot]
push    ecx
mov     ecx, [esp+10h+yhotspot]
push    esi
push    ecx
mov     eax, ds:hinstance
push    edx
push    eax
call    ds:createcursor
pop     esi
retn
mov     eax, [esp+hcursor]
push    eax
call    ds:destroycursor
retn
mov     dx, [esp+arg_0]
mov     ecx, dword_4ae1e0
movsx   eax, dx
shl     eax, 6
mov     eax, [eax+ecx+10h]
mov     ecx, [eax]
xor     eax, eax
mov     ax, [ecx+30h]
movzx   ecx, dx
shl     ecx, 10h
or      eax, ecx
retn
push    esi
mov     eax, ds:hinstance
push    edi
mov     esi, ds:loadcursora
mov     edi, [esp+8+arg_0]
and     edi, 0ffffh
push    edi
push    eax
call    esi
test    eax, eax
jnz     short loc_40db28
push    edi
push    0
call    esi
test    eax, eax
jz      short loc_40db37
push    eax
call    ds:setcursor
mov     eax, 1
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    2
xor     edi, edi
push    edi
call    sub_45b8f0
mov     [esi], di
add     esp, 8
mov     [esi+6], di
mov     [esi+0ch], eax
mov     [esi+2], edi
mov     [esi+8], edi
pop     edi
cmp     eax, 1
sbb     eax, eax
pop     esi
inc     eax
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+0ch]
push    eax
call    sub_45ba00
mov     word ptr [esi], 0
add     esp, 4
mov     dword ptr [esi+0ch], 0
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+arg_0]
mov     dword ptr [edi], 0
cmp     dword ptr [esi+0ch], 0
jz      short loc_40dbd7
cmp     word ptr [esi], 0
jz      short loc_40dbd7
push    esi
call    sub_40e5d0
add     esp, 4
mov     eax, [esi+0ch]
push    eax
call    sub_45bab0
add     esp, 4
test    eax, eax
jz      short loc_40dbd2
xor     ecx, ecx
mov     cx, [esi]
shl     ecx, 5
mov     [edi], ecx
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+hmem]
push    ebx
push    esi
push    eax
call    sub_45bab0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_40dbfa
xor     eax, eax
pop     esi
pop     ebx
retn
mov     esi, [esp+8+arg_0]
mov     eax, [esi+0ch]
push    eax
call    sub_45ba00
mov     eax, [esp+0ch+arg_8]
add     esp, 4
cdq
and     edx, 1fh
push    ebx
add     eax, edx
mov     [esi+0ch], ebx
mov     dword ptr [esi+8], 0
sar     eax, 5
mov     [esi], ax
call    ds:globallock
xor     ecx, ecx
mov     cx, [esi]
shl     ecx, 5
lea     edx, [ecx+eax-20h]
push    edx
push    eax
call    sub_40ea70
add     esp, 8
mov     ebx, [esi+0ch]
mov     word ptr [esi+6], 0
push    ebx
mov     [esi+2], eax
call    ds:globalunlock
mov     eax, 1
pop     esi
pop     ebx
retn
sub     esp, 20h
xor     ecx, ecx
push    ebx
push    esi
mov     si, [esp+28h+arg_4]
push    edi
mov     ebx, [esp+2ch+arg_0]
push    ebp
movzx   edi, si
mov     cx, [ebx]
inc     ecx
cmp     ecx, edi
jl      loc_40dd21
mov     eax, [ebx+0ch]
test    eax, eax
jz      loc_40dd21
shl     ecx, 5
push    2
push    ecx
push    eax
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_40dca9
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     cx, [ebx]
mov     eax, [ebx+0ch]
sub     cx, si
mov     ebp, [eax]
inc     cx
jz      short loc_40dcd5
movzx   ecx, cx
shl     ecx, 5
mov     eax, edi
shl     eax, 5
push    ecx
lea     eax, [eax+ebp-20h]
push    eax
add     eax, 20h
push    eax
call    _memcpy
add     esp, 0ch
mov     eax, [esp+30h+arg_8]
mov     ecx, [esp+30h+arg_c]
mov     [esp+30h+var_20], ax
mov     edx, [esp+30h+arg_10]
mov     [esp+30h+var_1e], cx
lea     esi, [esp+30h+var_20]
mov     [esp+30h+var_1c], dx
mov     ecx, 8
shl     edi, 5
mov     [esp+30h+var_18], 0
lea     edi, [edi+ebp-20h]
rep movsd
inc     word ptr [ebx]
mov     eax, 1
mov     dword ptr [ebx+8], 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     cx, [esp+arg_4]
mov     eax, [esp+arg_0]
sub     esp, 8
cmp     [eax], cx
jb      short loc_40dd5c
mov     edx, [eax+0ch]
test    edx, edx
jz      short loc_40dd5c
movzx   eax, cx
shl     eax, 5
add     eax, [edx]
movsx   edx, word ptr [eax-1eh]
movsx   eax, word ptr [eax-20h]
add     esp, 8
retn
xor     eax, eax
add     esp, 8
mov     edx, eax
retn
sub     esp, 10h
mov     eax, [esp+10h+arg_0]
push    ebx
mov     ax, [eax]
push    esi
xor     si, si
push    edi
test    ax, ax
push    ebp
mov     [esp+20h+var_10], 40000000h
jnz     short loc_40ddaa
mov     eax, [esp+20h+arg_4]
mov     ecx, [esp+20h+arg_8]
mov     ebx, [esp+20h+arg_c]
pop     ebp
pop     edi
pop     esi
mov     [ebx], eax
xor     ax, ax
mov     [ebx+4], ecx
pop     ebx
add     esp, 10h
retn
cmp     ax, 1
jnz     short loc_40dddc
mov     eax, [esp+20h+arg_0]
push    1
push    eax
call    sub_40dd30
mov     ebx, [esp+28h+arg_c]
mov     [esp+28h+var_8], eax
mov     ax, 1
mov     ecx, [esp+28h+var_8]
add     esp, 8
mov     [ebx], ecx
mov     [ebx+4], edx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+arg_0]
mov     ecx, [eax+0ch]
push    ecx
call    ds:globallock
mov     edi, eax
xor     ecx, ecx
mov     eax, [esp+20h+arg_0]
mov     ebp, edi
mov     cx, [eax]
shl     ecx, 5
lea     eax, [ecx+edi-20h]
mov     [esp+20h+var_c], eax
cmp     eax, edi
jbe     short loc_40de67
mov     ebx, [esp+20h+arg_c]
lea     eax, [esp+20h+var_8]
mov     edx, [esp+20h+arg_4]
mov     ecx, [esp+20h+arg_8]
push    eax
push    ecx
push    edx
push    ebp
call    sub_40de80
mov     edx, [esp+30h+var_8]
mov     ecx, [esp+30h+var_4]
mov     eax, [esp+30h+arg_4]
add     esp, 10h
push    ecx
push    edx
mov     edx, [esp+28h+arg_8]
push    edx
push    eax
call    sub_410e40
add     esp, 10h
cmp     [esp+20h+var_10], eax
jle     short loc_40de5e
mov     esi, ebp
mov     ecx, [esp+20h+var_4]
sub     esi, edi
mov     [esp+20h+var_10], eax
sar     esi, 5
mov     eax, [esp+20h+var_8]
inc     si
mov     [ebx], eax
mov     [ebx+4], ecx
add     ebp, 20h
cmp     [esp+20h+var_c], ebp
ja      short loc_40de0a
mov     eax, [esp+20h+arg_0]
mov     ecx, [eax+0ch]
push    ecx
call    ds:globalunlock
mov     ax, si
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 28h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+38h+arg_0]
cmp     word ptr [edi+6], 0
jz      loc_40df9c
movsx   eax, word ptr [edi]
movsx   ecx, word ptr [edi+2]
movsx   edx, word ptr [edi+20h]
mov     ebx, [esp+38h+arg_4]
mov     [esp+38h+var_20], eax
mov     [esp+38h+var_1c], ecx
mov     [esp+38h+var_28], edx
movsx   eax, word ptr [edi+22h]
mov     ecx, [esp+38h+arg_8]
mov     [esp+38h+var_24], eax
push    ecx
push    ebx
mov     ebx, [esp+40h+var_20]
push    eax
mov     ecx, [esp+44h+var_1c]
push    edx
push    ecx
push    ebx
call    sub_410e60
mov     esi, [esp+50h+arg_c]
mov     ecx, [esp+50h+var_28]
add     esp, 18h
mov     [esi], eax
mov     [esi+4], edx
lea     eax, [esp+38h+rc]
mov     edx, [esp+38h+var_24]
push    eax
push    edx
push    ecx
mov     ecx, [esp+44h+var_1c]
push    ecx
push    ebx
call    sub_473c60
lea     eax, [esp+4ch+rc]
add     esp, 14h
mov     ebp, ds:inflaterect
push    1
push    1
push    eax
call    ebp
mov     eax, [esi]
mov     ecx, [esi+4]
lea     edx, [esp+38h+rc]
push    ecx
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jz      short loc_40df2d
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
mov     eax, [esp+38h+var_28]
mov     ecx, [esp+38h+var_24]
mov     edx, [esp+38h+arg_4]
push    ecx
push    eax
mov     eax, [esp+40h+arg_8]
push    eax
push    edx
call    sub_410e40
mov     edx, [esp+48h+var_20]
mov     ecx, [esp+48h+var_1c]
add     esp, 10h
mov     edi, eax
mov     eax, [esp+38h+arg_4]
push    ecx
push    edx
mov     edx, [esp+40h+arg_8]
push    edx
push    eax
call    sub_410e40
add     esp, 10h
cmp     edi, eax
jle     short loc_40df82
mov     eax, [esp+38h+var_20]
mov     ecx, [esp+38h+var_1c]
pop     ebp
mov     [esi], eax
xor     eax, eax
pop     edi
mov     [esi+4], ecx
pop     esi
pop     ebx
add     esp, 28h
retn
mov     ecx, [esp+38h+var_28]
mov     eax, [esp+38h+var_24]
pop     ebp
mov     [esi], ecx
pop     edi
mov     [esi+4], eax
mov     eax, 2
pop     esi
pop     ebx
add     esp, 28h
retn
movsx   eax, word ptr [edi+10h]
movsx   ecx, word ptr [edi+12h]
mov     edx, [esp+38h+arg_4]
mov     [esp+38h+rc.left], eax
mov     eax, [esp+38h+arg_8]
mov     ebx, [esp+38h+rc.left]
push    eax
push    edx
push    ecx
push    ebx
call    sub_445be0
add     esp, 10h
mov     ebp, eax
mov     esi, [edi+1ah]
mov     ecx, [edi+16h]
mov     eax, esi
cdq
sub     eax, edx
sar     eax, 1
add     ecx, eax
push    ecx
push    ebp
call    sub_445c00
add     esp, 8
mov     ebx, [edi+16h]
mov     ecx, eax
mov     edx, 1
sub     ecx, ebx
cmp     esi, ecx
jge     short loc_40dfee
xor     edx, edx
mov     ebp, 1
test    ecx, ecx
jge     short loc_40dff9
xor     ebp, ebp
cmp     edx, ebp
jnz     short loc_40e009
mov     [esp+38h+rc.left], 1
mov     ebx, eax
jmp     short loc_40e037
mov     eax, 1
test    ecx, ecx
jg      short loc_40e014
xor     eax, eax
mov     ecx, 1
test    esi, esi
jg      short loc_40e01f
xor     ecx, ecx
cmp     eax, ecx
jnz     short loc_40e02f
mov     [esp+38h+rc.left], 2
add     ebx, esi
jmp     short loc_40e037
mov     [esp+38h+rc.left], 0
mov     esi, [esp+38h+arg_c]
push    ebx
movsx   eax, word ptr [edi+10h]
mov     [esi], eax
movsx   ecx, word ptr [edi+12h]
mov     [esi+4], ecx
call    sub_445e90
movsx   ecx, word ptr [edi+14h]
imul    eax, ecx
add     esp, 4
test    eax, eax
jl      short loc_40e078
push    ebx
call    sub_445e90
movsx   ecx, word ptr [edi+14h]
imul    eax, ecx
add     esp, 4
add     eax, 8000h
sar     eax, 10h
add     [esi], eax
jmp     short loc_40e094
mov     ebp, 8000h
push    ebx
call    sub_445e90
movsx   ecx, word ptr [edi+14h]
imul    eax, ecx
add     esp, 4
sub     ebp, eax
sar     ebp, 10h
sub     [esi], ebp
add     ebx, 19220h
push    ebx
call    sub_445e90
movsx   ecx, word ptr [edi+14h]
imul    eax, ecx
add     esp, 4
test    eax, eax
jl      short loc_40e0cb
push    ebx
call    sub_445e90
movsx   ecx, word ptr [edi+14h]
imul    eax, ecx
add     esp, 4
add     eax, 8000h
sar     eax, 10h
add     [esi+4], eax
jmp     short loc_40e0e8
mov     ebp, 8000h
push    ebx
call    sub_445e90
movsx   ecx, word ptr [edi+14h]
imul    eax, ecx
add     esp, 4
sub     ebp, eax
sar     ebp, 10h
sub     [esi+4], ebp
mov     eax, [esp+38h+rc.left]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
cmp     word ptr [esi], 2
jnb     short loc_40e130
mov     edx, [esp+0ch+arg_10]
mov     edi, [esp+0ch+arg_c]
mov     eax, [esp+0ch+arg_4]
mov     ecx, [esp+0ch+arg_8]
mov     [edx], eax
mov     eax, 2
mov     [edx+4], ecx
mov     word ptr [edi], 1
pop     edi
pop     esi
pop     ebx
retn
mov     edi, [esp+0ch+arg_c]
cmp     word ptr [edi], 1
jnb     short loc_40e13f
mov     word ptr [edi], 1
mov     ax, [esi]
cmp     [edi], ax
jb      short loc_40e14c
dec     ax
mov     [edi], ax
mov     eax, [esi+0ch]
push    eax
call    ds:globallock
xor     ecx, ecx
mov     edx, [esp+0ch+arg_10]
mov     cx, [esi]
push    edx
shl     ecx, 5
push    edi
mov     edi, [esp+14h+arg_8]
lea     ebx, [ecx+eax-20h]
mov     ecx, [esp+14h+arg_4]
push    edi
push    ecx
push    ebx
push    eax
call    sub_40e190
add     esp, 18h
mov     ebx, eax
mov     eax, [esi+0ch]
push    eax
call    ds:globalunlock
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
mov     ebx, 1
mov     esi, [esp+0ch+arg_14]
push    ebp
mov     ebp, [esp+10h+arg_10]
xor     ecx, ecx
mov     eax, [esp+10h+arg_0]
mov     cx, [ebp+0]
push    esi
shl     ecx, 5
mov     edx, [esp+14h+arg_8]
lea     edi, [ecx+eax-20h]
mov     ecx, [esp+14h+arg_c]
push    ecx
push    edx
push    edi
call    sub_40de80
add     esp, 10h
test    eax, eax
jz      short loc_40e1d6
cmp     eax, 1
jz      short loc_40e223
cmp     eax, 2
jz      short loc_40e1ef
jmp     short loc_40e1a1
cmp     ebx, 2
jz      short loc_40e206
mov     cx, [ebp+0]
cmp     cx, 1
jz      short loc_40e210
dec     cx
mov     ebx, eax
mov     [ebp+0], cx
jmp     short loc_40e1a1
test    ebx, ebx
jz      short loc_40e22d
mov     ecx, [esp+10h+arg_4]
sub     ecx, 20h
cmp     ecx, edi
jbe     short loc_40e237
inc     word ptr [ebp+0]
mov     ebx, eax
jmp     short loc_40e1a1
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, word ptr [edi]
pop     ebp
mov     [esi], eax
movsx   ecx, word ptr [edi+2]
xor     eax, eax
pop     edi
mov     [esi+4], ecx
pop     esi
pop     ebx
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, word ptr [edi+20h]
pop     ebp
mov     [esi], eax
movsx   ecx, word ptr [edi+22h]
mov     eax, 2
pop     edi
mov     [esi+4], ecx
pop     esi
pop     ebx
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
mov     ax, [esi]
cmp     ax, 2
jb      loc_40e38a
mov     di, [esp+14h+arg_c]
cmp     di, ax
jnb     loc_40e38a
cmp     dword ptr [esi+2], 0
jz      loc_40e38a
cmp     di, 1
jnb     short loc_40e289
mov     di, 1
mov     eax, [esi+0ch]
xor     ebx, ebx
push    eax
call    ds:globallock
movzx   ecx, di
shl     ecx, 5
lea     edi, [ecx+eax-20h]
cmp     edi, eax
jbe     short loc_40e2b0
movsx   ecx, word ptr [eax+1eh]
add     ebx, ecx
add     eax, 20h
cmp     edi, eax
ja      short loc_40e2a3
cmp     word ptr [edi+6], 0
jz      short loc_40e2de
movsx   eax, word ptr [edi]
movsx   ecx, word ptr [edi+2]
mov     edx, [esp+14h+arg_4]
mov     dword ptr [esp+14h+var_8], eax
mov     eax, [esp+14h+arg_8]
mov     edi, dword ptr [esp+14h+var_8]
push    eax
push    edx
push    ecx
push    edi
call    sub_410e10
add     esp, 10h
add     ebx, eax
jmp     short loc_40e33a
movsx   eax, word ptr [edi+10h]
movsx   ecx, word ptr [edi+12h]
mov     edx, [esp+14h+arg_4]
mov     dword ptr [esp+14h+var_8], eax
mov     eax, [esp+14h+arg_8]
push    eax
push    edx
mov     edx, dword ptr [esp+1ch+var_8]
push    ecx
push    edx
call    sub_445be0
add     esp, 10h
mov     ecx, [edi+16h]
push    ecx
push    eax
call    sub_445c00
add     esp, 8
sub     eax, [edi+16h]
jns     short loc_40e316
neg     eax
movsx   ecx, word ptr [edi+14h]
imul    ecx, eax
test    ecx, ecx
jl      short loc_40e32e
add     ecx, 8000h
sar     ecx, 10h
add     ebx, ecx
jmp     short loc_40e33a
mov     eax, 8000h
sub     eax, ecx
sar     eax, 10h
sub     ebx, eax
shl     ebx, 10h
mov     eax, [esi+2]
mov     dword ptr [esp+14h+var_8], ebx
fild    dword ptr [esp+14h+var_8]
mov     dword ptr [esp+14h+var_8], eax
mov     dword ptr [esp+14h+var_8+4], 0
fild    [esp+14h+var_8]
pushf
cmp     dword_4af150, 0
jnz     short loc_40e366
fdivp   st(1), st
jmp     short loc_40e36f
push    eax
mov     al, 0dh
call    unknown_libname_3
pop     eax
popf
call    __ftol
mov     edi, eax
mov     eax, [esi+0ch]
push    eax
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 10000h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 8
xor     ecx, ecx
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
mov     ax, [esi]
push    ebp
test    ax, ax
jnz     short loc_40e3cb
mov     eax, ecx
mov     [esp+18h+var_4], ecx
mov     [esp+18h+var_8], ecx
mov     edx, [esp+18h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     ax, 1
jz      loc_40e5ad
mov     eax, [esp+18h+arg_4]
test    eax, eax
jz      loc_40e5ad
mov     ecx, [esi+2]
imul    ecx, eax
test    ecx, ecx
jl      short loc_40e3f6
lea     edi, [ecx+8000h]
sar     edi, 10h
jmp     short loc_40e402
mov     edi, 8000h
sub     edi, ecx
sar     edi, 10h
neg     edi
mov     eax, [esi+0ch]
push    eax
call    ds:globallock
xor     ecx, ecx
mov     ebx, eax
mov     cx, [esi]
shl     ecx, 5
lea     ecx, [ecx+eax-20h]
cmp     ecx, eax
jbe     short loc_40e42f
movsx   eax, word ptr [ebx+1eh]
cmp     eax, edi
jg      short loc_40e42f
sub     edi, eax
add     ebx, 20h
cmp     ecx, ebx
ja      short loc_40e41e
cmp     ecx, ebx
jz      loc_40e584
mov     ax, [ebx+1eh]
test    ax, ax
jz      loc_40e584
movsx   ecx, ax
shl     edi, 10h
mov     eax, edi
cdq
idiv    ecx
cmp     word ptr [ebx+6], 0
jz      short loc_40e4bd
movsx   ebp, word ptr [ebx]
movsx   edx, word ptr [ebx+20h]
movsx   edi, word ptr [ebx+2]
movsx   ecx, word ptr [ebx+22h]
sub     edx, ebp
sub     ecx, edi
imul    edx, eax
test    edx, edx
jl      short loc_40e481
add     edx, 8000h
sar     edx, 10h
add     edx, ebp
mov     [esp+18h+var_8], edx
jmp     short loc_40e491
mov     ebx, 8000h
sub     ebx, edx
sar     ebx, 10h
sub     ebp, ebx
mov     [esp+18h+var_8], ebp
imul    ecx, eax
test    ecx, ecx
jl      short loc_40e4a8
add     ecx, 8000h
sar     ecx, 10h
add     ecx, edi
jmp     loc_40e58f
mov     eax, 8000h
sub     eax, ecx
sar     eax, 10h
sub     edi, eax
mov     [esp+18h+var_4], edi
jmp     loc_40e593
mov     ecx, [ebx+1ah]
push    ecx
push    eax
call    sub_445cb0
mov     ebp, [ebx+16h]
add     ebp, eax
movsx   ecx, word ptr [ebx+12h]
movsx   eax, word ptr [ebx+10h]
mov     [esp+18h+var_8], eax
push    ebp
mov     [esp+1ch+var_4], ecx
call    sub_445e90
movsx   ecx, word ptr [ebx+14h]
imul    eax, ecx
add     esp, 4
test    eax, eax
jl      short loc_40e50e
push    ebp
call    sub_445e90
movsx   ecx, word ptr [ebx+14h]
imul    eax, ecx
add     esp, 4
add     eax, 8000h
sar     eax, 10h
add     [esp+18h+var_8], eax
jmp     short loc_40e52c
mov     edi, 8000h
push    ebp
call    sub_445e90
movsx   ecx, word ptr [ebx+14h]
imul    eax, ecx
add     esp, 4
sub     edi, eax
sar     edi, 10h
sub     [esp+18h+var_8], edi
add     ebp, 19220h
push    ebp
call    sub_445e90
movsx   ecx, word ptr [ebx+14h]
imul    eax, ecx
add     esp, 4
test    eax, eax
jl      short loc_40e564
push    ebp
call    sub_445e90
movsx   ecx, word ptr [ebx+14h]
imul    eax, ecx
add     esp, 4
add     eax, 8000h
sar     eax, 10h
add     [esp+18h+var_4], eax
jmp     short loc_40e593
mov     edi, 8000h
push    ebp
call    sub_445e90
movsx   ecx, word ptr [ebx+14h]
imul    eax, ecx
add     esp, 4
sub     edi, eax
sar     edi, 10h
sub     [esp+18h+var_4], edi
jmp     short loc_40e593
movsx   eax, word ptr [ebx]
movsx   ecx, word ptr [ebx+2]
mov     [esp+18h+var_8], eax
mov     [esp+18h+var_4], ecx
mov     eax, [esi+0ch]
push    eax
call    ds:globalunlock
mov     eax, [esp+18h+var_8]
mov     edx, [esp+18h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esi+0ch]
mov     eax, [eax]
movsx   ecx, word ptr [eax]
movsx   edx, word ptr [eax+2]
mov     [esp+18h+var_8], ecx
mov     eax, [esp+18h+var_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
cmp     dword ptr [esi+8], 0
jnz     short loc_40e5e3
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     dword ptr [esi+8], 0
cmp     word ptr [esi], 2
jb      short loc_40e636
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_40e636
push    eax
call    ds:globallock
mov     ebx, eax
xor     eax, eax
mov     ax, [esi]
shl     eax, 5
lea     edi, [eax+ebx-20h]
push    edi
push    ebx
call    sub_40e640
add     esp, 8
push    edi
push    ebx
call    sub_40ea70
add     esp, 8
mov     ecx, [esi+0ch]
mov     [esi+2], eax
push    ecx
call    ds:globalunlock
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
push    ebp
mov     ebx, esi
xor     ebp, ebp
mov     edi, [esp+20h+arg_4]
cmp     esi, edi
jnb     short loc_40e6ba
cmp     word ptr [ebx+4], 0
jz      short loc_40e66f
test    ebp, ebp
jnz     short loc_40e6b3
cmp     ebx, esi
jnz     short loc_40e66a
mov     ebp, ebx
jmp     short loc_40e6b3
lea     ebp, [ebx-20h]
jmp     short loc_40e6b3
test    ebp, ebp
jz      short loc_40e67f
push    ebx
push    ebp
xor     ebp, ebp
call    sub_40e6d0
add     esp, 8
mov     word ptr [ebx+6], 1
movsx   eax, word ptr [ebx]
movsx   ecx, word ptr [ebx+2]
mov     [esp+20h+var_10], eax
movsx   edx, word ptr [ebx+20h]
movsx   eax, word ptr [ebx+22h]
push    eax
push    edx
mov     edx, [esp+28h+var_10]
push    ecx
push    edx
call    sub_410e10
mov     [ebx+1eh], ax
add     esp, 10h
mov     dword ptr [ebx+8], 0
add     ebx, 20h
cmp     ebx, edi
jb      short loc_40e657
test    ebp, ebp
jz      short loc_40e6c8
push    edi
push    ebp
call    sub_40e6d0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+arg_0]
push    edi
push    esi
call    sub_40e710
add     esp, 8
push    edi
push    esi
call    sub_40e7d0
add     esp, 8
push    eax
push    edi
push    esi
call    sub_40e7a0
add     esp, 0ch
push    edi
push    esi
call    sub_40e840
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
push    ebp
mov     ebx, esi
cmp     esi, [esp+20h+arg_4]
jnb     short loc_40e78c
mov     edi, 0
cmp     esi, ebx
jz      short loc_40e749
push    ebx
push    esi
call    sub_40e7d0
add     esp, 8
push    eax
push    ebx
push    esi
call    sub_40e7a0
add     esp, 0ch
mov     edi, [ebx-14h]
add     edi, edi
sub     edi, [ebx-18h]
movsx   eax, word ptr [ebx]
lea     ebp, [ebx+20h]
mov     [esp+20h+var_10], eax
movsx   ecx, word ptr [ebx+2]
mov     [esp+20h+var_c], ecx
movsx   eax, word ptr [ebp+0]
movsx   ecx, word ptr [ebx+22h]
mov     edx, [esp+20h+var_10]
push    ecx
push    eax
mov     eax, [esp+28h+var_c]
push    eax
push    edx
call    sub_445be0
add     esp, 10h
push    edi
push    eax
call    sub_445c00
add     esp, 8
mov     [ebx+0ch], eax
mov     ebx, ebp
cmp     ebp, [esp+20h+arg_4]
jb      short loc_40e723
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_8]
push    esi
mov     esi, [esp+4+arg_0]
lea     ecx, [esi+20h]
mov     [esi+8], eax
mov     eax, [esp+4+arg_4]
cmp     ecx, eax
jnb     short loc_40e7cc
mov     edx, [esi+0ch]
add     ecx, 20h
add     edx, edx
sub     edx, [esi+8]
add     esi, 20h
mov     [ecx-18h], edx
cmp     ecx, eax
jb      short loc_40e7b7
pop     esi
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_4]
push    ebp
mov     esi, edi
sub     esi, eax
sar     esi, 5
cmp     esi, 2
jge     short loc_40e7f0
mov     eax, [eax+0ch]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
mov     ebx, 2
mov     ecx, esi
and     ecx, 1
cmp     ecx, 1
mov     ecx, esi
sbb     edx, edx
sub     edi, 20h
and     edx, 0fffffffeh
inc     edx
test    esi, esi
jle     short loc_40e827
mov     ebp, [edi+0ch]
sub     edi, 20h
sar     ebp, 6
imul    ebp, edx
imul    ebp, ebx
add     eax, ebp
add     ebx, 4
neg     edx
dec     ecx
jnz     short loc_40e80e
cdq
idiv    esi
shl     eax, 5
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_4]
push    edi
mov     edi, [esp+1ch+arg_0]
push    ebp
cmp     esi, edi
jbe     short loc_40e8b9
mov     ebx, 1
xor     ebp, ebp
push    ebp
mov     eax, [edi+8]
sub     eax, [edi+0ch]
push    eax
call    sub_445c00
add     esp, 8
cmp     eax, 0fffff29bh
jle     short loc_40e8a5
cmp     eax, 0d65h
jge     short loc_40e8a5
mov     [edi+6], bx
movsx   eax, word ptr [edi]
movsx   ecx, word ptr [edi+2]
mov     [esp+20h+var_10], eax
movsx   edx, word ptr [edi+20h]
movsx   eax, word ptr [edi+22h]
push    eax
push    edx
mov     edx, [esp+28h+var_10]
push    ecx
push    edx
call    sub_410e10
mov     [edi+1eh], ax
add     esp, 10h
jmp     short loc_40e8b2
mov     [edi+6], bp
push    edi
call    sub_40e8d0
add     esp, 4
add     edi, 20h
cmp     edi, esi
jb      short loc_40e85a
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
movsx   eax, word ptr [esi]
movsx   ecx, word ptr [esi+2]
mov     [esp+1ch+var_10], eax
push    ebp
movsx   edx, word ptr [esi+20h]
movsx   eax, word ptr [esi+22h]
mov     ebx, [esp+20h+var_10]
push    eax
push    edx
push    ecx
push    ebx
call    sub_410e10
add     esp, 10h
mov     edi, eax
shl     edi, 0fh
mov     ebx, [esi+8]
sub     ebx, [esi+0ch]
push    ebx
call    sub_445e90
add     esp, 4
mov     ecx, eax
mov     eax, edi
cdq
idiv    ecx
mov     edi, eax
test    edi, edi
jl      short loc_40e925
mov     [esp+20h+var_8], edi
jmp     short loc_40e92d
mov     eax, edi
neg     eax
mov     [esp+20h+var_8], eax
mov     ax, word ptr [esp+20h+var_8]
mov     [esi+14h], ax
mov     eax, [esi+8]
add     eax, 19220h
push    eax
call    sub_445e90
imul    eax, edi
add     esp, 4
test    eax, eax
jl      short loc_40e96c
mov     eax, [esi+8]
add     eax, 19220h
push    eax
call    sub_445e90
imul    eax, edi
add     esp, 4
add     eax, 8000h
sar     eax, 10h
jmp     short loc_40e98e
mov     ebp, 8000h
mov     eax, [esi+8]
add     eax, 19220h
push    eax
call    sub_445e90
imul    eax, edi
add     esp, 4
sub     ebp, eax
sar     ebp, 10h
neg     ebp
mov     eax, ebp
mov     cx, [esi]
sub     cx, ax
mov     eax, [esi+8]
mov     [esi+10h], cx
push    eax
call    sub_445e90
imul    eax, edi
add     esp, 4
test    eax, eax
jl      short loc_40e9c7
mov     eax, [esi+8]
push    eax
call    sub_445e90
add     esp, 4
mov     ebp, eax
imul    ebp, edi
add     ebp, 8000h
sar     ebp, 10h
jmp     short loc_40e9e2
mov     ebp, 8000h
mov     eax, [esi+8]
push    eax
call    sub_445e90
imul    eax, edi
add     esp, 4
sub     ebp, eax
sar     ebp, 10h
neg     ebp
mov     ax, [esi+2]
add     ax, bp
mov     [esi+12h], ax
mov     eax, [esi+8]
sub     eax, 19220h
test    edi, edi
mov     [esi+16h], eax
jle     short loc_40ea04
add     eax, 32440h
mov     [esi+16h], eax
lea     eax, ds:0[ebx*2]
neg     eax
cmp     eax, 64880h
jle     short loc_40ea19
sub     eax, 0c9100h
cmp     eax, 0fff9b780h
jge     short loc_40ea25
add     eax, 0c9100h
mov     [esi+1ah], eax
test    eax, eax
jge     short loc_40ea2e
neg     eax
imul    eax, [esp+20h+var_8]
test    eax, eax
jl      short loc_40ea4b
add     eax, 8000h
pop     ebp
sar     eax, 10h
pop     edi
mov     [esi+1eh], ax
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, 8000h
pop     ebp
sub     ecx, eax
pop     edi
sar     ecx, 10h
neg     cx
mov     [esi+1eh], cx
pop     esi
pop     ebx
add     esp, 10h
retn
push    esi
xor     eax, eax
mov     edx, [esp+4+arg_0]
mov     ecx, [esp+4+arg_4]
cmp     ecx, edx
jbe     short loc_40ea8c
movsx   esi, word ptr [edx+1eh]
add     eax, esi
add     edx, 20h
cmp     edx, ecx
jb      short loc_40ea7f
pop     esi
retn
sub     esp, 28h
mov     ecx, lpclassname
mov     edx, ds:hinstance
push    esi
lea     eax, [esp+2ch+wndclass]
push    eax
push    ecx
push    edx
call    ds:getclassinfoa
test    eax, eax
jnz     short loc_40eb15
xor     esi, esi
mov     eax, ds:hinstance
mov     [esp+2ch+wndclass.style], esi
mov     [esp+2ch+wndclass.cbclsextra], esi
mov     [esp+2ch+wndclass.hinstance], eax
push    7f00h
mov     [esp+30h+wndclass.hicon], esi
push    esi
mov     [esp+34h+wndclass.lpfnwndproc], offset sub_40eb20
mov     [esp+34h+wndclass.cbwndextra], 12h
call    ds:loadcursora
mov     ecx, lpclassname
lea     edx, [esp+2ch+wndclass]
mov     [esp+2ch+wndclass.hcursor], eax
push    edx
mov     [esp+30h+wndclass.lpszmenuname], esi
mov     [esp+30h+wndclass.lpszclassname], ecx
mov     [esp+30h+wndclass.hbrbackground], 6
call    ds:registerclassa
test    ax, ax
jnz     short loc_40eb15
xor     eax, eax
pop     esi
add     esp, 28h
retn
mov     eax, 1
pop     esi
add     esp, 28h
retn
mov     ecx, [esp+msg]
sub     esp, 158h
cmp     ecx, 0ah
mov     eax, ecx
push    ebx
push    esi
push    edi
mov     esi, 1
push    ebp
ja      short loc_40eb6b
jz      short loc_40ebb5
cmp     eax, 2
jz      loc_40efc2
mov     edx, [esp+168h+lparam]
mov     eax, [esp+168h+wparam]
mov     edi, [esp+168h+hwnd]
push    edx
push    eax
push    ecx
push    edi
call    ds:defwindowproca
mov     esi, eax
jmp     loc_40efc2
cmp     eax, 200h
ja      short loc_40eb7f
jz      loc_40ec7a
cmp     eax, 0fh
jz      short loc_40ebc9
jmp     short def_40ebae
cmp     eax, 401h
ja      short loc_40eba4
jz      loc_40ef45
cmp     eax, 201h
jz      loc_40ed45
cmp     eax, 202h
jz      loc_40ee51
jmp     short def_40ebae
sub     eax, 402h
cmp     eax, 4
ja      short def_40ebae
jmp     ds:jpt_40ebae[eax*4]
cmp     [esp+168h+wparam], 1
sbb     eax, eax
neg     eax
push    eax
push    0eh
jmp     loc_40efa0
lea     eax, [esp+168h+rect]
mov     edi, [esp+168h+hwnd]
push    eax
push    edi
call    ds:getclientrect
lea     eax, [esp+168h+var_100]
mov     ebp, ds:sendmessagea
mov     byte ptr [esp+168h+var_100], 0
push    eax
push    100h
push    0dh
push    edi
call    ebp
lea     ecx, [esp+168h+paint]
push    ecx
push    edi
call    ds:beginpaint
push    0
push    edi
call    ds:getwindowword
push    eax
push    0
call    sub_4041d0
mov     [esp+170h+var_155+1], eax
add     esp, 8
mov     ebx, ds:getwindowlonga
push    1
push    6
push    edi
call    ebx
push    eax
push    0eh
push    edi
call    ebx
mov     ecx, [esp+170h+rect.bottom]
mov     edx, [esp+170h+rect.right]
cmp     eax, 1
sbb     eax, eax
neg     eax
push    eax
push    ecx
mov     eax, [esp+178h+rect.top]
push    edx
mov     ecx, [esp+17ch+rect.left]
push    eax
push    ecx
push    2
push    edi
call    ebx
lea     ecx, [esp+184h+var_100]
push    eax
mov     edx, [esp+188h+var_155+1]
push    ecx
mov     eax, [esp+18ch+paint.hdc]
push    edx
push    eax
call    sub_4060a0
lea     ecx, [esp+194h+paint]
add     esp, 2ch
push    ecx
push    edi
call    ds:endpaint
jmp     loc_40efc2
mov     edi, [esp+168h+hwnd]
push    0ah
push    edi
mov     ebx, ds:getwindowlonga
call    ebx
mov     ebp, eax
push    0fffffff0h
push    edi
call    ebx
test    al, 1
jz      loc_40efc2
test    ebp, ebp
jz      loc_40efc2
push    2
push    edi
call    ebx
mov     [esp+168h+var_155+1], eax
push    0
push    edi
call    ds:getwindowword
push    eax
push    0
call    sub_4041d0
mov     edx, [esp+170h+lparam]
mov     [esp+170h+rect.left], eax
movsx   eax, dx
shr     edx, 10h
mov     [esp+170h+paint.hdc], eax
movsx   eax, dx
mov     [esp+170h+paint.ferase], eax
add     esp, 8
push    6
push    edi
call    ebx
lea     ecx, [esp+168h+var_100]
cmp     eax, 1
mov     al, 0
push    ecx
adc     al, 0ffh
push    edi
and     al, 4
or      al, 1
mov     byte ptr [esp+170h+var_155], al
call    ds:getclientrect
mov     ecx, [esp+168h+var_f4]
mov     eax, [esp+168h+var_f8]
mov     edx, [esp+168h+var_fc]
push    ecx
mov     ecx, [esp+16ch+var_100]
push    eax
mov     eax, [esp+170h+paint.hdc]
push    edx
mov     edx, [esp+174h+paint.ferase]
push    ecx
lea     ecx, [esp+178h+var_155]
push    edx
mov     edx, [esp+17ch+rect.left]
push    eax
lea     eax, [esp+180h+var_155+1]
push    ecx
push    eax
push    edx
call    sub_406260
add     esp, 24h
test    eax, eax
jz      loc_40efc2
mov     eax, [esp+168h+var_155+1]
push    eax
push    2
jmp     loc_40efa7
mov     edi, [esp+168h+hwnd]
push    2
push    edi
mov     ebx, ds:getwindowlonga
call    ebx
mov     [esp+168h+var_155+1], eax
push    0
push    edi
call    ds:getwindowword
push    eax
push    0
call    sub_4041d0
mov     edx, [esp+170h+lparam]
mov     [esp+170h+rect.left], eax
movsx   eax, dx
shr     edx, 10h
mov     [esp+170h+paint.hdc], eax
movsx   eax, dx
mov     [esp+170h+paint.ferase], eax
add     esp, 8
push    6
push    edi
call    ebx
lea     ecx, [esp+168h+var_100]
cmp     eax, 1
mov     al, 0
push    ecx
adc     al, 0ffh
push    edi
and     al, 4
mov     ebp, ds:getclientrect
or      al, 2
mov     byte ptr [esp+170h+var_155], al
call    ebp
mov     ecx, [esp+168h+var_f4]
mov     eax, [esp+168h+var_f8]
mov     edx, [esp+168h+var_fc]
push    ecx
mov     ecx, [esp+16ch+var_100]
push    eax
mov     eax, [esp+170h+paint.hdc]
push    edx
mov     edx, [esp+174h+paint.ferase]
push    ecx
lea     ecx, [esp+178h+var_155]
push    edx
mov     edx, [esp+17ch+rect.left]
push    eax
lea     eax, [esp+180h+var_155+1]
push    ecx
push    eax
push    edx
call    sub_406260
add     esp, 24h
test    eax, eax
jz      loc_40efc2
mov     eax, [esp+168h+var_155+1]
mov     ebp, ds:setwindowlonga
push    eax
push    2
push    edi
call    ebp
push    0
push    0
push    edi
call    ds:invalidaterect
push    edi
call    ds:updatewindow
test    byte ptr [esp+168h+var_155], 8
jz      loc_40efc2
push    0fffffff0h
push    edi
call    ebx
test    al, 1
jz      short loc_40ee3c
push    0fffffff8h
push    edi
call    ebx
push    edi
push    10000h
push    111h
push    eax
call    ds:postmessagea
jmp     loc_40efc2
push    1
push    0ah
push    edi
call    ebp
push    edi
call    sub_490870
add     esp, 4
jmp     loc_40efc2
mov     edi, [esp+168h+hwnd]
push    2
push    edi
mov     ebx, ds:getwindowlonga
call    ebx
mov     [esp+168h+var_155+1], eax
push    2
push    edi
call    ebx
push    eax
push    0
call    sub_4041d0
mov     edx, [esp+170h+lparam]
mov     [esp+170h+rect.left], eax
movsx   eax, dx
shr     edx, 10h
mov     [esp+170h+paint.hdc], eax
movsx   eax, dx
mov     [esp+170h+paint.ferase], eax
add     esp, 8
push    0fffffff0h
push    edi
call    ebx
test    al, 1
jnz     loc_40efc2
push    6
push    edi
call    ebx
push    0
cmp     eax, 1
mov     al, 0
push    0ah
adc     al, 0ffh
push    edi
and     al, 4
mov     ebp, ds:setwindowlonga
mov     byte ptr [esp+174h+var_155], al
call    ebp
lea     ecx, [esp+168h+var_100]
push    ecx
push    edi
call    ds:getclientrect
mov     ecx, [esp+168h+var_f4]
mov     edx, [esp+168h+var_f8]
mov     eax, [esp+168h+var_fc]
push    ecx
mov     ecx, [esp+16ch+var_100]
push    edx
mov     edx, [esp+170h+paint.hdc]
push    eax
mov     eax, [esp+174h+paint.ferase]
push    ecx
lea     ecx, [esp+178h+var_155]
push    eax
mov     eax, [esp+17ch+rect.left]
push    edx
lea     edx, [esp+180h+var_155+1]
push    ecx
push    edx
push    eax
call    sub_406260
add     esp, 24h
test    eax, eax
jz      short loc_40ef20
mov     eax, [esp+168h+var_155+1]
push    eax
push    2
push    edi
call    ebp
push    0
push    0
push    edi
call    ds:invalidaterect
push    edi
call    ds:updatewindow
test    byte ptr [esp+168h+var_155], 8
jz      short loc_40ef3e
push    0fffffff8h
push    edi
call    ebx
push    edi
push    10000h
push    111h
push    eax
call    ds:postmessagea
call    sub_490890
jmp     short loc_40efc2
mov     eax, [esp+168h+wparam]
mov     edi, [esp+168h+hwnd]
push    eax
push    0
push    edi
call    ds:setwindowword
jmp     short loc_40efb0
mov     eax, [esp+168h+wparam]
push    eax
push    6
jmp     short loc_40efa0
mov     edi, [esp+168h+hwnd]
push    0
push    edi
call    ds:getwindowword
movsx   eax, ax
jmp     short loc_40efc4
mov     edi, [esp+168h+hwnd]
push    6
push    edi
call    ds:getwindowlonga
jmp     short loc_40efc4
push    0
jmp     short loc_40ef9e
mov     eax, [esp+168h+wparam]
push    eax
push    2
mov     edi, [esp+170h+hwnd]
push    edi
mov     ebp, ds:setwindowlonga
call    ebp
push    0
push    0
push    edi
call    ds:invalidaterect
push    edi
call    ds:updatewindow
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 158h
retn    10h
mov     eax, [esp+arg_0]
mov     cx, [eax+0eh]
cmp     cx, 8
jbe     short loc_40f001
xor     eax, eax
retn
cmp     cx, 4
jbe     short loc_40f021
mov     eax, [eax+20h]
test    eax, eax
jnz     short loc_40f014
mov     eax, 100h
retn
cmp     eax, 100h
jb      short locret_40f044
mov     eax, 100h
retn
cmp     cx, 1
jbe     short loc_40f03f
mov     eax, [eax+20h]
test    eax, eax
jnz     short loc_40f034
mov     eax, 10h
retn
cmp     eax, 10h
jb      short locret_40f044
mov     eax, 10h
retn
mov     eax, 2
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+10h], 3
jnz     short loc_40f05f
mov     ax, 0ch
retn
push    eax
call    sub_40eff0
shl     ax, 2
add     esp, 4
retn
mov     ecx, [esp+arg_0]
mov     eax, [esp+arg_4]
mov     edx, ecx
mov     [eax+1], ch
shr     edx, 10h
mov     [eax+2], cl
mov     byte ptr [eax+3], 0
mov     [eax], dl
retn
mov     ecx, [esp+arg_0]
push    esi
mov     esi, [ecx+14h]
test    esi, esi
jnz     short loc_40f0cd
xor     esi, esi
mov     eax, [ecx+8]
cdq
mov     si, [ecx+0eh]
xor     eax, edx
imul    esi, [ecx+4]
add     esi, 1fh
sub     eax, edx
sar     esi, 3
and     esi, 0fffffffch
imul    esi, eax
mov     eax, [ecx+10h]
test    eax, eax
jz      short loc_40f0cd
cmp     eax, 3
jz      short loc_40f0cd
mov     eax, esi
shr     eax, 1
add     esi, eax
mov     eax, esi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
test    esi, esi
jnz     short loc_40f0ef
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
call    ds:globallock
push    eax
mov     edi, eax
call    sub_40f050
mov     edx, [esp+0ch+rop]
add     esp, 4
movzx   eax, ax
add     eax, [edi]
push    edx
mov     edx, [esp+0ch+arg_8]
lea     ecx, [eax+edi]
mov     eax, [esp+0ch+lprect]
push    eax
push    edx
push    ecx
push    edi
mov     ecx, [esp+1ch+hdc]
push    ecx
call    sub_40f3b0
add     esp, 18h
mov     edi, eax
push    esi
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 48h
cmp     [esp+48h+h], 0
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_40f158
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
lea     eax, [esp+58h+pv]
mov     ecx, [esp+58h+h]
push    eax
push    18h
push    ecx
call    ds:getobjecta
mov     edx, [esp+58h+arg_4]
test    dh, 80h
jz      short loc_40f17d
and     edx, 7fffh
dec     [esp+58h+var_38]
mov     ax, [esp+58h+arg_8]
test    ax, ax
jnz     short loc_40f192
mov     ax, [esp+58h+var_30]
imul    ax, [esp+58h+var_2e]
cmp     ax, 8
jbe     short loc_40f1a1
mov     cx, 18h
xor     di, di
jmp     short loc_40f1c9
cmp     ax, 4
jbe     short loc_40f1b1
mov     cx, 8
mov     di, 100h
jmp     short loc_40f1c9
cmp     ax, 1
jbe     short loc_40f1c1
mov     cx, 4
mov     di, 10h
jmp     short loc_40f1c9
mov     cx, 1
mov     di, 2
mov     [esp+58h+var_1a], cx
mov     eax, [esp+58h+var_3c]
mov     ebx, [esp+58h+var_38]
mov     [esp+58h+var_24], eax
mov     [esp+58h+clines], ebx
test    edx, edx
mov     [esp+58h+var_28], 28h
mov     [esp+58h+var_18], 0
mov     [esp+58h+var_1c], 1
jz      short loc_40f217
cmp     cx, 4
jnz     short loc_40f209
mov     [esp+58h+var_18], 2
jmp     short loc_40f217
cmp     cx, 8
jnz     short loc_40f217
mov     [esp+58h+var_18], 1
movzx   eax, di
xor     esi, esi
mov     [esp+58h+var_8], eax
lea     ecx, ds:28h[eax*4]
mov     [esp+58h+var_14], esi
mov     [esp+58h+var_10], esi
push    2
mov     [esp+5ch+var_c], esi
push    ecx
mov     [esp+60h+var_4], eax
call    sub_45b8f0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jnz     short loc_40f252
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
push    0
call    ds:getdc
mov     ebp, eax
test    ebp, ebp
jz      loc_40f39d
mov     eax, [esp+58h+hpal]
test    eax, eax
jnz     short loc_40f274
push    0fh
call    ds:getstockobject
push    0
push    eax
push    ebp
call    ds:selectpalette
mov     [esp+58h+hpal], eax
test    eax, eax
jz      loc_40f385
push    ebp
call    ds:realizepalette
push    ebx
call    ds:globallock
lea     esi, [esp+58h+var_28]
mov     edi, eax
mov     ecx, 0ah
push    0
mov     [esp+5ch+lpbmi], eax
rep movsd
mov     eax, [esp+5ch+lpbmi]
mov     ecx, [esp+5ch+clines]
mov     edx, [esp+5ch+h]
push    eax
push    0
push    ecx
push    0
push    edx
push    ebp
call    ds:getdibits
lea     edi, [esp+58h+var_28]
mov     esi, [esp+58h+lpbmi]
mov     ecx, 0ah
push    ebx
rep movsd
call    ds:globalunlock
cmp     [esp+58h+var_14], 0
jnz     short loc_40f2f7
lea     eax, [esp+58h+var_28]
push    eax
call    sub_40f090
mov     [esp+5ch+var_48], eax
mov     [esp+5ch+var_14], eax
add     esp, 4
lea     eax, [esp+58h+var_28]
push    eax
call    sub_40f050
movzx   eax, ax
add     eax, [esp+5ch+var_28]
add     esp, 4
mov     [esp+58h+lpbmi], eax
push    2
add     eax, [esp+5ch+var_14]
push    eax
push    ebx
call    sub_45b9b0
add     esp, 0ch
mov     edi, eax
test    edi, edi
jz      short loc_40f36a
mov     ebx, edi
push    edi
call    ds:globallock
mov     esi, eax
push    0
mov     eax, [esp+5ch+lpbmi]
push    esi
add     eax, esi
mov     ecx, [esp+60h+clines]
mov     edx, [esp+60h+h]
push    eax
push    ecx
push    0
push    edx
push    ebp
call    ds:getdibits
test    eax, eax
jnz     short loc_40f354
push    edi
jmp     short loc_40f36b
cmp     dword ptr [esi+14h], 0
jnz     short loc_40f361
mov     eax, [esp+58h+var_48]
mov     [esi+14h], eax
push    edi
call    ds:globalunlock
jmp     short loc_40f375
push    ebx
xor     ebx, ebx
call    sub_45ba00
add     esp, 4
mov     eax, [esp+58h+hpal]
push    0
push    eax
push    ebp
call    ds:selectpalette
jmp     short loc_40f394
test    ebx, ebx
jz      short loc_40f392
push    ebx
call    sub_45ba00
add     esp, 4
xor     ebx, ebx
push    ebp
push    0
call    ds:releasedc
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
mov     edx, [esp+lpbits]
push    ebx
push    esi
test    edx, edx
push    edi
push    ebp
jnz     short loc_40f3c3
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     edi, [esp+10h+arg_c]
mov     ecx, [esp+10h+lpbmi]
mov     ebx, [edi+8]
mov     eax, [ecx+4]
sub     ebx, [edi]
sub     eax, [edi]
cmp     ebx, eax
jl      short loc_40f3db
mov     ebx, eax
mov     ebp, [ecx+8]
mov     eax, [edi+0ch]
sub     ebp, [edi+4]
sub     eax, [edi+4]
cmp     ebp, eax
jl      short loc_40f3ed
mov     ebp, eax
mov     esi, [esp+10h+lprect]
mov     eax, [esp+10h+rop]
push    eax
push    0
push    ecx
push    edx
push    ebp
mov     ecx, [edi+4]
push    ebx
mov     edx, [edi]
push    ecx
mov     eax, [esi+0ch]
push    edx
sub     eax, [esi+4]
push    eax
mov     ecx, [esi+4]
mov     eax, [esi+8]
mov     edx, [esi]
sub     eax, [esi]
mov     edi, [esp+34h+hdc]
push    eax
push    ecx
push    edx
push    edi
call    ds:stretchdibits
cmp     eax, 0ffffffffh
jz      short loc_40f441
test    eax, eax
jnz     short loc_40f437
push    esi
push    edi
call    ds:rectvisible
test    eax, eax
jnz     short loc_40f441
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
push    2
lea     eax, ds:4[esi*4]
push    eax
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_40f4b2
push    edi
call    ds:globallock
mov     word ptr [eax], 300h
add     eax, 4
mov     [eax-2], si
test    esi, esi
jle     short loc_40f4ab
mov     edx, [esp+0ch+arg_0]
xor     ebx, ebx
mov     cl, [edx+2]
dec     esi
mov     [eax], cl
add     eax, 4
mov     cl, [edx+1]
add     edx, 4
mov     [eax-3], cl
test    esi, esi
mov     cl, [edx-4]
mov     [eax-2], cl
mov     [eax-1], bl
jnz     short loc_40f48c
push    edi
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     edi, [esp+8+hmem]
push    edi
call    ds:globallock
push    eax
call    ds:createpalette
mov     esi, eax
push    edi
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_40eff0
add     esp, 4
add     esi, 28h
push    eax
push    esi
call    sub_40f450
add     esp, 8
mov     esi, eax
cmp     esi, edi
jz      short loc_40f528
push    esi
call    sub_40f4c0
add     esp, 4
mov     edi, eax
push    esi
call    sub_45ba00
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
retn
push    ebp
mov     ebp, esp
add     esp, 0fffffff8h
push    ebx
push    esi
push    edi
xor     ax, ax
mov     esi, [ebp+8]
cmp     word ptr [esi], 28h
jnz     short loc_40f580
mov     bx, [esi+10h]
or      bx, bx
jz      short loc_40f556
dec     bx
jz      short loc_40f556
dec     bx
jnz     short loc_40f580
cmp     [esi+6], ax
jnz     short loc_40f580
cmp     [esi+4], ax
jz      short loc_40f580
cmp     [esi+0ah], ax
jnz     short loc_40f57e
cmp     [esi+8], ax
jz      short loc_40f580
mov     ax, [esi+0eh]
cmp     ax, 8
jz      short loc_40f57e
cmp     ax, 4
jnz     short loc_40f580
jmp     short loc_40f5c0
xor     di, di
xor     ax, ax
mov     bx, ax
mov     cx, [esi+4]
mov     dx, [esi+8]
push    di
cmp     ax, 7fffh
jnz     short loc_40f5a5
xor     ax, ax
mov     bx, ax
mov     cx, ax
mov     dx, ax
mov     edi, [ebp+10h]
stosw
mov     ax, bx
stosw
mov     ax, cx
stosw
mov     ax, dx
stosw
pop     ax
pop     edi
pop     esi
pop     ebx
leave
retn
mov     di, 1
cmp     word ptr [esi+10h], 0
jz      short loc_40f583
cld
mov     ax, 8001h
mov     [ebp-2], ax
mov     [ebp-4], ax
mov     ax, 7fffh
mov     [ebp-6], ax
mov     [ebp-8], ax
xor     cx, cx
mov     dx, [esi+8]
dec     dx
pusha
xor     eax, eax
mov     ax, [esi+10h]
mov     esi, [ebp+0ch]
cmp     ax, 1
jnz     loc_40f6a8
lodsw
or      al, al
jz      short loc_40f636
cmp     [ebp-6], cx
jle     short loc_40f611
mov     [ebp-6], cx
cmp     [ebp-8], dx
jle     short loc_40f61b
mov     [ebp-8], dx
xor     ah, ah
add     cx, ax
cmp     [ebp-2], cx
jge     short loc_40f62a
mov     [ebp-2], cx
cmp     [ebp-4], dx
jge     short loc_40f634
mov     [ebp-4], dx
jmp     short loc_40f601
or      ah, ah
jz      short loc_40f67a
cmp     ah, 2
jz      short loc_40f681
jb      short loc_40f690
cmp     [ebp-6], cx
jle     short loc_40f64b
mov     [ebp-6], cx
cmp     [ebp-8], dx
jle     short loc_40f655
mov     [ebp-8], dx
mov     al, ah
xor     ah, ah
add     cx, ax
cmp     [ebp-2], cx
jge     short loc_40f666
mov     [ebp-2], cx
cmp     [ebp-4], dx
jge     short loc_40f670
mov     [ebp-4], dx
add     esi, eax
and     ax, 1
add     esi, eax
jmp     short loc_40f601
dec     dx
xor     cx, cx
jmp     short loc_40f601
xor     ah, ah
lodsb
add     cx, ax
lodsb
sub     dx, ax
jmp     loc_40f601
popa
mov     ax, [ebp-6]
mov     bx, [ebp-8]
mov     cx, [ebp-2]
mov     dx, [ebp-4]
inc     dx
jmp     loc_40f591
lodsw
or      al, al
jz      short loc_40f6dd
cmp     [ebp-6], cx
jle     short loc_40f6b8
mov     [ebp-6], cx
cmp     [ebp-8], dx
jle     short loc_40f6c2
mov     [ebp-8], dx
xor     ah, ah
add     cx, ax
cmp     [ebp-2], cx
jge     short loc_40f6d1
mov     [ebp-2], cx
cmp     [ebp-4], dx
jge     short loc_40f6db
mov     [ebp-4], dx
jmp     short loc_40f6a8
or      ah, ah
jz      short loc_40f724
cmp     ah, 2
jz      short loc_40f72e
jb      short loc_40f690
cmp     [ebp-6], cx
jle     short loc_40f6f2
mov     [ebp-6], cx
cmp     [ebp-8], dx
jle     short loc_40f6fc
mov     [ebp-8], dx
mov     al, ah
xor     ah, ah
add     cx, ax
cmp     [ebp-2], cx
jge     short loc_40f70d
mov     [ebp-2], cx
cmp     [ebp-4], dx
jge     short loc_40f717
mov     [ebp-4], dx
add     ax, 3
shr     ax, 1
and     al, 0feh
add     esi, eax
jmp     short loc_40f6a8
dec     dx
xor     cx, cx
jmp     loc_40f6a8
xor     ah, ah
lodsb
add     cx, ax
lodsb
sub     dx, ax
jmp     loc_40f6a8
push    ebp
mov     ebp, esp
add     esp, 0ffffffe0h
push    ebx
push    ecx
push    esi
push    edi
xor     ax, ax
mov     esi, [ebp+8]
cmp     word ptr [esi], 28h
jnz     short loc_40f786
cmp     [esi+10h], ax
jnz     short loc_40f786
cmp     word ptr [esi+4], 5
jb      short loc_40f786
cmp     [esi+6], ax
jnz     short loc_40f786
cmp     word ptr [esi+8], 1
jb      short loc_40f786
cmp     [esi+0ah], ax
jnz     short loc_40f792
mov     ax, [esi+0eh]
cmp     ax, 8
jz      short loc_40f792
cmp     ax, 4
jz      short loc_40f792
xor     ax, ax
xor     dx, dx
pop     edi
pop     esi
pop     ecx
pop     ebx
leave
retn
cld
mov     [ebp-1ah], ax
mov     ax, [esi+8]
mov     [ebp-2], ax
mov     ax, [esi+4]
mov     [ebp-1eh], ax
cmp     word ptr [ebp-1ah], 4
jnz     short loc_40f7b3
inc     ax
shr     ax, 1
mov     [ebp-4], ax
and     ax, 3
sub     ax, 4
neg     ax
and     ax, 3
mov     [ebp-6], ax
mov     ax, [ebp+10h]
or      ax, [ebp+12h]
cmp     ax, 1
cmc
sbb     ax, ax
mov     [ebp-1ch], ax
xor     ax, ax
mov     [ebp-8], ax
mov     [ebp-0ah], ax
mov     [ebp-0ch], ax
mov     [ebp-0eh], ax
pusha
movzx   eax, ax
movzx   ecx, cx
movzx   edx, dx
mov     esi, [ebp+0ch]
mov     edi, [ebp+14h]
mov     ebx, [ebp+10h]
cmp     word ptr [ebp-1ah], 8
jz      short loc_40f810
jmp     loc_40fa79
mov     cx, [ebp-4]
lodsb
test    word ptr [ebp-1ch], 1
jz      loc_40f8ce
cmp     al, fs:[ebx]
jnz     loc_40f8ce
mov     ax, [ebp-8]
mov     [ebp-16h], ax
mov     ax, [ebp-0ah]
mov     [ebp-18h], ax
inc     ebx
inc     word ptr [ebp-8]
dec     cx
jz      short loc_40f8a9
lodsb
cmp     al, fs:[ebx]
jz      short loc_40f83a
push    bx
push    ax
mov     dx, [ebp-0ah]
sub     dx, [ebp-18h]
mov     bx, [ebp-8]
sub     bx, [ebp-16h]
jns     short loc_40f875
mov     ax, 0
stosw
mov     [ebp-14h], edi
mov     bx, [ebp-8]
dec     dx
jnz     short loc_40f875
or      bx, bx
jz      short loc_40f8a3
mov     ax, 200h
stosw
mov     ax, 0ffh
cmp     ax, bx
jb      short loc_40f887
mov     ax, bx
stosb
sub     bx, ax
mov     ax, 0ffh
cmp     ax, dx
jb      short loc_40f897
mov     ax, dx
stosb
sub     dx, ax
mov     ax, bx
or      ax, dx
jnz     short loc_40f875
pop     ax
pop     bx
jmp     short loc_40f8ce
mov     word ptr [ebp-8], 0
inc     word ptr [ebp-0ah]
dec     word ptr [ebp-2]
jz      loc_40fa57
mov     ax, [ebp-6]
add     esi, eax
add     ebx, eax
mov     cx, [ebp-4]
jmp     loc_40f843
mov     ah, al
inc     word ptr [ebp-8]
inc     ebx
dec     cx
jz      short loc_40f8f9
lodsb
test    word ptr [ebp-1ch], 1
jz      short loc_40f927
cmp     al, fs:[ebx]
jnz     short loc_40f927
mov     al, 1
stosw
jmp     loc_40f82a
mov     cx, ax
mov     al, 1
stosw
mov     ah, cl
mov     al, 1
stosw
dec     word ptr [ebp-2]
jz      loc_40fa57
mov     ax, 0
stosw
mov     [ebp-14h], edi
inc     word ptr [ebp-0ah]
mov     word ptr [ebp-8], 0
mov     ax, [ebp-6]
add     esi, eax
add     ebx, eax
jmp     loc_40f810
cmp     al, ah
jz      loc_40f9f0
inc     word ptr [ebp-8]
inc     ebx
dec     cx
jz      short loc_40f8f0
mov     dx, ax
lodsb
test    word ptr [ebp-1ch], 1
jz      short loc_40f94d
cmp     al, fs:[ebx]
jz      loc_40f9d9
cmp     al, dl
jz      loc_40f9e8
push    ax
push    dx
mov     ax, 300h
stosw
pop     ax
xchg    ah, al
stosw
pop     ax
stosb
lea     edx, [edi-4]
mov     ah, al
inc     word ptr [ebp-8]
inc     ebx
dec     cx
jz      short loc_40f998
lodsb
test    word ptr [ebp-1ch], 1
jz      short loc_40f984
cmp     al, fs:[ebx]
jz      short loc_40f9a5
cmp     al, ah
jz      short loc_40f9b2
stosb
inc     byte ptr es:[edx]
jz      short loc_40f990
jmp     short loc_40f96b
dec     byte ptr es:[edx]
jmp     loc_40f8ce
mov     dx, di
shr     dl, 1
adc     edi, 0
jmp     loc_40f8fd
mov     dx, di
shr     dl, 1
adc     edi, 0
jmp     loc_40f82a
dec     byte ptr es:[edx]
dec     edi
cmp     byte ptr es:[edx], 2
jz      short loc_40f9c6
mov     dx, di
shr     dl, 1
adc     edi, 0
jmp     short loc_40f9f0
lea     edi, [edx-1]
push    ax
mov     al, 1
mov     ah, es:[edi+2]
stosw
stosb
inc     edi
pop     ax
jmp     short loc_40f9f0
mov     al, 1
mov     ah, dh
stosw
mov     ah, dl
stosw
jmp     loc_40f82a
mov     al, 1
mov     ah, dh
stosw
mov     ah, dl
mov     dx, 1
inc     dx
inc     word ptr [ebp-8]
inc     ebx
dec     cx
jz      short loc_40fa2b
lodsb
test    word ptr [ebp-1ch], 1
jz      short loc_40fa0d
cmp     al, fs:[ebx]
jz      short loc_40fa41
cmp     al, ah
jz      short loc_40f9f4
push    ax
mov     al, 0ffh
or      dh, dh
jnz     short loc_40fa1b
mov     al, dl
stosw
sub     dx, 0ffh
jg      short loc_40fa13
pop     ax
jmp     loc_40f8ce
mov     al, 0ffh
or      dh, dh
jnz     short loc_40fa33
mov     al, dl
stosw
sub     dx, 0ffh
jg      short loc_40fa2b
jmp     loc_40f8fd
mov     al, 0ffh
or      dh, dh
jnz     short loc_40fa49
mov     al, dl
stosw
sub     dx, 0ffh
jg      short loc_40fa41
jmp     loc_40f82a
cmp     [ebp-14h], edi
jnz     short loc_40fa5e
dec     edi
dec     edi
mov     ax, 100h
stosw
movzx   esi, word ptr [ebp+14h]
sub     edi, esi
mov     esi, [ebp+8]
mov     [esi+14h], edi
popa
mov     eax, [esi+14h]
jmp     loc_40f78c
mov     cx, [ebp-1eh]
lodsb
test    word ptr [ebp-1ch], 1
jz      loc_40fb38
cmp     al, [ebx]
jnz     loc_40fb38
mov     ax, [ebp-8]
mov     [ebp-16h], ax
mov     ax, [ebp-0ah]
mov     [ebp-18h], ax
inc     ebx
add     word ptr [ebp-8], 2
sub     cx, 2
jle     short loc_40fb13
lodsb
cmp     al, [ebx]
jz      short loc_40faa2
push    bx
push    ax
mov     dx, [ebp-0ah]
sub     dx, [ebp-18h]
mov     bx, [ebp-8]
sub     bx, [ebp-16h]
jns     short loc_40fadf
mov     ax, 0
stosw
mov     [ebp-14h], edi
mov     bx, [ebp-8]
dec     dx
jnz     short loc_40fadf
or      bx, bx
jz      short loc_40fb0d
mov     ax, 200h
stosw
mov     ax, 0ffh
cmp     ax, bx
jb      short loc_40faf1
mov     ax, bx
stosb
sub     bx, ax
mov     ax, 0ffh
cmp     ax, dx
jb      short loc_40fb01
mov     ax, dx
stosb
sub     dx, ax
mov     ax, bx
or      ax, dx
jnz     short loc_40fadf
pop     ax
pop     bx
jmp     short loc_40fb38
mov     word ptr [ebp-8], 0
inc     word ptr [ebp-0ah]
dec     word ptr [ebp-2]
jz      loc_40fa57
mov     ax, [ebp-6]
add     esi, eax
add     ebx, eax
mov     cx, [ebp-1eh]
jmp     loc_40faae
mov     ah, al
inc     ebx
add     word ptr [ebp-8], 2
sub     cx, 2
jle     short loc_40fb66
lodsb
test    word ptr [ebp-1ch], 1
jz      short loc_40fb96
cmp     al, [ebx]
jnz     short loc_40fb96
mov     al, 2
stosw
jmp     loc_40fa92
push    ax
mov     al, 2
stosw
pop     ax
mov     ah, al
mov     al, 2
add     al, cl
stosw
dec     word ptr [ebp-2]
jz      loc_40fa57
mov     ax, 0
stosw
mov     [ebp-14h], edi
inc     word ptr [ebp-0ah]
mov     word ptr [ebp-8], 0
mov     ax, [ebp-6]
add     esi, eax
add     ebx, eax
jmp     loc_40fa79
cmp     al, ah
jz      loc_40fc64
mov     dx, ax
inc     ebx
add     word ptr [ebp-8], 2
sub     cx, 2
jle     short loc_40fb5c
lodsb
test    word ptr [ebp-1ch], 1
jz      short loc_40fbbf
cmp     al, fs:[ebx]
jz      loc_40fc4d
cmp     al, dl
jz      loc_40fc5c
push    ax
push    dx
mov     ax, 600h
stosw
pop     ax
xchg    ah, al
stosw
pop     ax
stosb
lea     edx, [edi-4]
mov     ah, al
inc     ebx
add     word ptr [ebp-8], 2
sub     cx, 2
jle     short loc_40fc0c
lodsb
test    word ptr [ebp-1ch], 1
jz      short loc_40fbf8
cmp     al, [ebx]
jz      short loc_40fc1b
cmp     al, ah
jz      short loc_40fc28
stosb
add     byte ptr [edx], 2
jz      short loc_40fc04
jmp     short loc_40fbdd
sub     byte ptr [edx], 2
jmp     loc_40fb38
add     [edx], cl
mov     dx, di
shr     dl, 1
adc     edi, 0
jmp     loc_40fb6c
mov     dx, di
shr     dl, 1
adc     edi, 0
jmp     loc_40fa92
sub     byte ptr [edx], 2
dec     edi
cmp     byte ptr [edx], 4
jz      short loc_40fc3b
mov     dx, di
shr     dl, 1
adc     edi, 0
jmp     short loc_40fc64
lea     edi, [edx-1]
push    ax
mov     al, 2
mov     ah, [edi+2]
stosw
stosb
inc     edi
pop     ax
jmp     short loc_40fc64
mov     al, 2
mov     ah, dh
stosw
mov     ah, dl
stosw
jmp     loc_40fa92
mov     al, 2
mov     ah, dh
stosw
mov     ah, dl
mov     dx, 2
add     dx, 2
inc     ebx
add     word ptr [ebp-8], 2
sub     cx, 2
jle     short loc_40fca3
lodsb
test    word ptr [ebp-1ch], 1
jz      short loc_40fc85
cmp     al, [ebx]
jz      short loc_40fcbc
cmp     al, ah
jz      short loc_40fc68
push    ax
mov     al, 0ffh
or      dh, dh
jnz     short loc_40fc93
mov     al, dl
stosw
sub     dx, 0ffh
jg      short loc_40fc8b
pop     ax
jmp     loc_40fb38
add     dx, cx
mov     al, 0ffh
or      dh, dh
jnz     short loc_40fcae
mov     al, dl
stosw
sub     dx, 0ffh
jg      short loc_40fca6
jmp     loc_40fb6c
mov     al, 0ffh
or      dh, dh
jnz     short loc_40fcc4
mov     al, dl
stosw
sub     dx, 0ffh
jg      short loc_40fcbc
jmp     loc_40fa92
jmp     loc_40f78c
push    ebp
mov     ebp, esp
add     esp, 0fffffff4h
push    ecx
push    esi
push    edi
mov     esi, [ebp+8]
mov     ax, [esi+8]
mov     [ebp-2], ax
mov     ax, [esi+4]
mov     [ebp-4], ax
dec     ax
and     ax, 1fh
sub     ax, 1fh
neg     ax
shr     ax, 3
mov     [ebp-8], ax
mov     word ptr [ebp-6], 0
mov     ax, [esi+4]
dec     ax
and     ax, 3
sub     ax, 3
neg     ax
mov     [ebp-0ah], ax
xor     ch, ch
pusha
mov     esi, [ebp+0ch]
mov     edi, [ebp+10h]
xor     ecx, ecx
mov     dx, [ebp-4]
lodsb
mov     bl, al
mov     cl, 8
shl     bl, 1
sbb     al, al
stosb
dec     dx
jz      short loc_40fd45
loop    loc_40fd38
jmp     short loc_40fd33
add     esi, [ebp-8]
mov     cx, [ebp-0ah]
rep stosb
dec     word ptr [ebp-2]
jnz     short loc_40fd2f
popa
pop     edi
pop     esi
pop     ecx
leave
retn
sub     esp, 180h
xor     eax, eax
mov     ecx, 2fh
push    ebx
push    esi
push    edi
lea     edi, [esp+18ch+var_180]
push    ebp
rep stosd
stosw
mov     edi, [esp+190h+arg_4]
cmp     edi, 3eh
ja      loc_4102b2
mov     al, ds:byte_41031c[edi]
jmp     ds:jpt_40fd8f[eax*4]
mov     esi, [esp+190h+arg_0]
test    byte ptr [esi+0bh], 1
jz      loc_4102b2
mov     edi, [esp+190h+arg_8]
mov     ecx, 7f7f7fh
mov     edx, 0ffffffh
mov     al, [edi+38h]
mov     ebx, dword_4ad240
mov     ebp, dword_4ad244
mov     byte ptr [esp+190h+rcdst.left], al
mov     eax, 1
mov     word ptr [esp+190h+rcdst.top], ax
mov     [esp+190h+rcdst.top+2], ecx
mov     [esp+190h+rcdst.right+2], edx
mov     [esp+190h+var_ae], ebx
mov     [esp+190h+var_aa], ebp
mov     [esp+190h+var_a6], ax
add     esi, 0ch
mov     [esp+190h+var_a2], ax
mov     [esp+190h+var_a4], ax
mov     [esp+190h+var_a0], ecx
mov     [esp+190h+var_9c], edx
call    sub_40ac00
push    eax
mov     ecx, [esi+8]
mov     eax, [esi+0ch]
mov     edx, [esi+4]
push    eax
push    ecx
push    edx
mov     eax, [esi]
lea     ecx, [esp+1a0h+rcdst]
push    eax
push    ecx
mov     edx, [edi+0ch]
push    edx
call    sub_451d90
add     esp, 1ch
jmp     loc_4102b2
mov     esi, [esp+190h+arg_0]
lea     ecx, [esp+190h+rcdst]
lea     edx, [esi+0ch]
mov     eax, [edx]
mov     [ecx], eax
push    offset rcsrc2
mov     ebx, [edx+4]
mov     [ecx+4], ebx
mov     ebp, [edx+8]
mov     [ecx+8], ebp
mov     eax, [edx+0ch]
mov     [ecx+0ch], eax
lea     ecx, [esp+194h+rcdst]
push    ecx
lea     ecx, [esp+198h+rcdst]
push    ecx
call    ds:intersectrect
cmp     edi, 7
jnz     short loc_40fe9a
add     esi, 1ch
jmp     short loc_40fe9d
add     esi, 1eh
mov     eax, [esp+190h+rcdst.bottom]
mov     ecx, [esp+190h+rcdst.right]
mov     edx, [esp+190h+rcdst.top]
push    eax
mov     eax, [esp+194h+rcdst.left]
push    ecx
mov     cx, [esi]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [esi], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
jmp     loc_4102b2
mov     esi, [esp+190h+arg_0]
mov     edi, [esp+190h+arg_8]
mov     ax, [esi+1eh]
mov     cx, [edi+8]
push    eax
push    ecx
call    sub_474520
movzx   eax, ax
add     esp, 8
mov     word ptr [esi+1eh], 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
mov     edi, [esp+190h+arg_8]
mov     esi, [esp+190h+arg_0]
mov     eax, [edi+10h]
add     edi, 10h
mov     [esi+0ch], eax
add     esi, 0ch
mov     ecx, [edi+4]
mov     [esi+4], ecx
mov     edx, [edi+8]
mov     [esi+8], edx
mov     eax, [edi+0ch]
mov     [esi+0ch], eax
jmp     loc_4102b2
lea     eax, [esp+190h+var_180]
mov     esi, [esp+190h+arg_0]
push    eax
push    3eh
push    esi
call    dword ptr [esi+6]
lea     ecx, [esp+19ch+var_170]
add     esp, 0ch
lea     edx, [esi+22h]
mov     eax, [ecx]
mov     [edx], eax
mov     edi, [esp+190h+arg_8]
mov     ebx, [ecx+4]
test    edi, edi
mov     [edx+4], ebx
mov     ebp, [ecx+8]
mov     [edx+8], ebp
mov     eax, [ecx+0ch]
mov     [edx+0ch], eax
jz      loc_4102b2
mov     eax, [ecx]
mov     ebx, [ecx+4]
mov     ebp, [ecx+8]
mov     edx, ecx
lea     ecx, [esp+190h+rcdst.top]
mov     [ecx], eax
mov     eax, [edx+0ch]
push    14h
mov     [ecx+4], ebx
mov     [ecx+8], ebp
mov     [ecx+0ch], eax
mov     ecx, [esi+2]
mov     [esp+194h+rcdst.left], ecx
lea     ecx, [esp+194h+rcdst]
push    ecx
push    2
call    dword ptr [edi+98h]
add     esp, 0ch
jmp     loc_4102b2
lea     edi, [esp+190h+rcdst]
xor     eax, eax
mov     ecx, 2fh
push    eax
rep stosd
stosw
mov     esi, [esp+194h+arg_0]
push    8
push    esi
call    dword ptr [esi+6]
mov     edi, [esp+19ch+arg_8]
lea     edx, [esp+19ch+var_b0]
add     esp, 0ch
mov     ecx, [edi+98h]
mov     eax, [ecx+4]
add     ecx, 4
mov     [edx], eax
mov     ebx, [ecx+4]
mov     [edx+4], ebx
mov     ebp, [ecx+8]
mov     [edx+8], ebp
mov     eax, [ecx+0ch]
lea     ecx, [esp+190h+rcdst]
push    ecx
mov     [edx+0ch], eax
push    0bh
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
push    0
push    8
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
push    0
push    1ah
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
jmp     loc_4102b2
mov     edi, [esp+190h+arg_8]
mov     esi, [esp+190h+arg_0]
mov     eax, [edi+20h]
cmp     [esi+2], eax
jnz     loc_4102b2
movsx   ecx, word ptr [edi+0ah]
mov     eax, [edi+98h]
push    eax
push    ecx
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
mov     [edi+24h], eax
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
mov     esi, [esp+190h+arg_0]
mov     word ptr [esi+1ch], 0
jmp     loc_4102b2
mov     esi, [esp+190h+arg_0]
add     esi, 0ch
jmp     loc_410291
mov     esi, [esp+190h+arg_0]
push    0
push    8
push    esi
call    dword ptr [esi+6]
mov     ax, [esi+0ah]
add     esp, 0ch
and     ax, 0ffefh
mov     [esi+0ah], ax
or      al, 20h
mov     [esi+0ah], ax
jmp     loc_4102b2
mov     edi, [esp+190h+arg_8]
mov     ecx, [edi+24h]
test    ecx, ecx
jz      loc_4102b2
mov     esi, [esp+190h+arg_0]
mov     edx, [edi+98h]
push    edx
push    esi
mov     eax, [esi+2]
mov     [edi+20h], eax
call    ecx
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
mov     edi, [esp+190h+arg_8]
push    0ffffffh
mov     eax, [edi+1ch]
mov     edx, [edi+18h]
mov     ebx, [edi+14h]
lea     ecx, [edi+10h]
push    eax
push    edx
push    ebx
mov     eax, [ecx]
push    eax
mov     ecx, [edi+98h]
push    ecx
mov     edx, [edi+0ch]
push    edx
call    sub_451d90
add     esp, 1ch
jmp     loc_4102b2
mov     eax, 1
xor     ecx, ecx
mov     edx, 0ffffffh
mov     esi, dword_4add88
mov     byte ptr [esp+190h+rcdst.left], 2
mov     word ptr [esp+190h+rcdst.top], ax
mov     edi, dword_4add8c
mov     [esp+190h+rcdst.top+2], ecx
mov     [esp+190h+rcdst.right+2], edx
mov     [esp+190h+var_ae], esi
push    edx
mov     esi, [esp+194h+arg_0]
mov     [esp+194h+var_aa], edi
mov     [esp+194h+var_a6], ax
add     esi, 0ch
mov     [esp+194h+var_a2], ax
mov     [esp+194h+var_a4], ax
mov     [esp+194h+var_a0], ecx
mov     [esp+194h+var_9c], edx
mov     edx, [esi+4]
mov     eax, [esi+0ch]
mov     ecx, [esi+8]
push    eax
push    ecx
push    edx
mov     eax, [esi]
lea     ecx, [esp+1a0h+rcdst]
push    eax
mov     edi, [esp+1a4h+arg_8]
push    ecx
mov     eax, [edi+0ch]
push    eax
call    sub_451d90
add     esp, 1ch
jmp     loc_4102b2
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
mov     esi, [esp+190h+arg_0]
test    byte ptr [esi+0ah], 20h
jnz     short loc_41027a
mov     edi, [esp+190h+arg_8]
cmp     word ptr [edi+0ah], 0
jnz     short loc_41027a
mov     eax, [edi]
mov     ecx, [edi+4]
push    ecx
add     esi, 0ch
push    eax
push    esi
call    ds:ptinrect
test    eax, eax
jz      short loc_41027a
mov     eax, 1
pop     ebp
mov     dword ptr [edi+20h], 0ffffffffh
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
mov     esi, [esp+190h+arg_0]
add     esi, 22h
mov     edi, [esp+190h+arg_8]
mov     eax, [esi]
mov     [edi+10h], eax
add     edi, 10h
mov     ecx, [esi+4]
mov     [edi+4], ecx
mov     edx, [esi+8]
mov     [edi+8], edx
mov     eax, [esi+0ch]
mov     [edi+0ch], eax
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
mov     ecx, [esp+arg_4]
sub     esp, 10h
lea     edx, [esp+10h+rcdst]
push    esi
mov     eax, [ecx]
mov     esi, [ecx+4]
push    offset rcsrc2
mov     [edx], eax
mov     eax, [ecx+8]
mov     [edx+4], esi
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
lea     edx, [esp+18h+rcdst]
push    edx
lea     edx, [esp+1ch+rcdst]
push    edx
call    ds:intersectrect
test    eax, eax
jz      short loc_4103cb
mov     esi, [esp+14h+arg_0]
mov     eax, [esp+14h+rcdst.bottom]
mov     ecx, [esp+14h+rcdst.right]
push    eax
mov     edx, [esp+18h+rcdst.top]
push    ecx
mov     cx, [esi+1eh]
push    edx
mov     eax, [esp+20h+rcdst.left]
push    eax
push    ecx
call    sub_474400
mov     [esi+1eh], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
pop     esi
add     esp, 10h
retn
mov     ecx, [esp+arg_4]
sub     esp, 10h
lea     edx, [esp+10h+rcdst]
push    esi
mov     eax, [ecx]
mov     esi, [ecx+4]
push    offset rcsrc2
mov     [edx], eax
mov     eax, [ecx+8]
mov     [edx+4], esi
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
lea     edx, [esp+18h+rcdst]
push    edx
lea     edx, [esp+1ch+rcdst]
push    edx
call    ds:intersectrect
test    eax, eax
jz      short loc_41043b
mov     esi, [esp+14h+arg_0]
mov     eax, [esp+14h+rcdst.bottom]
mov     ecx, [esp+14h+rcdst.right]
push    eax
mov     edx, [esp+18h+rcdst.top]
push    ecx
mov     cx, [esi+1ch]
push    edx
mov     eax, [esp+20h+rcdst.left]
push    eax
push    ecx
call    sub_474400
mov     [esi+1ch], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
pop     esi
add     esp, 10h
retn
sub     esp, 0c0h
xor     eax, eax
mov     ecx, 2fh
push    ebx
push    esi
push    edi
lea     edi, [esp+0cch+var_c0]
rep stosd
stosw
mov     ax, [esp+0cch+arg_8]
mov     ecx, [esp+0cch+arg_c]
mov     [esp+0cch+var_b8], ax
mov     esi, [esp+0cch+arg_0]
mov     [esp+0cch+var_b4], ecx
push    esi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_4104d1
push    esi
call    sub_4130c0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_4104c8
mov     di, [esp+0cch+arg_4]
test    [ebx+0ah], di
jz      short loc_4104b9
mov     [esp+0cch+var_b6], di
lea     eax, [esp+0cch+var_c0]
push    eax
push    9
push    ebx
call    dword ptr [ebx+6]
mov     [esp+0d8h+var_b8], ax
add     esp, 0ch
push    ebx
call    sub_413290
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_41049b
push    esi
call    sub_412f60
add     esp, 4
mov     ax, [esp+0cch+var_b8]
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
sub     esp, 0c4h
cmp     [esp+0c4h+arg_c], 0
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_410502
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c4h
retn
mov     eax, [esp+0d4h+arg_0]
push    eax
call    sub_412f30
add     esp, 4
test    eax, eax
jz      loc_4105f4
mov     eax, [esp+0d4h+arg_0]
push    eax
call    sub_413090
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      loc_4105da
mov     si, [esp+0d4h+arg_4]
mov     bx, [esp+0d4h+arg_8]
push    ebp
call    sub_413260
mov     [esp+0d8h+var_c4], eax
add     esp, 4
test    [ebp+0ah], si
jz      short loc_4105cc
mov     ax, [ebp+1ch]
push    eax
push    ebx
call    sub_474520
mov     bx, ax
add     esp, 8
mov     [ebp+1ch], ax
mov     ax, [ebp+0ah]
test    al, 10h
jz      short loc_4105ab
lea     edi, [esp+0d4h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
mov     [esp+0d4h+var_b6], si
mov     eax, [esp+0d4h+arg_c]
lea     ecx, [esp+0d4h+var_c0]
mov     [esp+0d4h+var_b4], eax
push    ecx
push    0
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
test    ax, ax
jz      short loc_4105ba
mov     bx, ax
jmp     short loc_4105ba
test    al, 20h
jnz     short loc_4105ba
push    0
push    17h
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
mov     word ptr [ebp+20h], 0
mov     word ptr [ebp+1eh], 0
mov     word ptr [ebp+1ch], 0
mov     ebp, [esp+0d4h+var_c4]
test    ebp, ebp
jnz     loc_410544
jmp     short loc_4105e2
mov     bx, [esp+0d4h+arg_8]
mov     eax, [esp+0d4h+arg_0]
push    eax
call    sub_412f60
add     esp, 4
jmp     short loc_4105fc
mov     bx, [esp+0d4h+arg_8]
mov     ax, bx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c4h
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+0ch+arg_0]
push    ebp
xor     ebp, ebp
push    esi
call    sub_413090
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_410680
push    0
push    25h
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
test    byte ptr [edi+0ah], 20h
jz      short loc_410663
mov     ebp, 1
push    0
push    0ch
push    edi
call    dword ptr [edi+6]
mov     ax, [edi]
add     esp, 0ch
add     ax, 2
sub     edi, [esi+4]
push    eax
push    edi
push    esi
mov     edi, ebx
call    sub_413430
add     esp, 0ch
test    edi, edi
jz      short loc_410671
mov     ebx, edi
push    edi
call    sub_413260
jmp     short loc_410677
push    esi
call    sub_413090
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_41062b
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
push    esi
xor     ebp, ebp
call    sub_4130c0
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_4106f0
push    edi
call    sub_413290
add     esp, 4
mov     ebx, eax
push    0
push    25h
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
test    byte ptr [edi+0ah], 20h
jz      short loc_4106ea
mov     ebp, 1
push    0
push    0ch
push    edi
call    dword ptr [edi+6]
mov     ax, [edi]
add     esp, 0ch
add     ax, 2
sub     edi, [esi+4]
push    eax
push    edi
push    esi
call    sub_413430
add     esp, 0ch
mov     edi, ebx
test    ebx, ebx
jnz     short loc_4106a9
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+8+arg_0]
cmp     [edi+0ch], si
jbe     short loc_410713
xor     eax, eax
pop     edi
pop     esi
retn
push    edi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_410742
cmp     [esp+8+arg_4], 0
push    edi
jz      short loc_41072f
call    sub_410610
jmp     short loc_410734
call    sub_410690
add     esp, 4
mov     esi, eax
push    edi
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_8]
push    ebx
mov     ebx, [esp+4+hdc]
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     di, [esp+0ch+arg_4]
push    ebp
push    ebx
push    eax
push    edi
push    esi
call    sub_410440
add     esp, 10h
push    eax
call    sub_474630
mov     bp, ax
add     esp, 4
test    di, 8
jz      short loc_4107a0
mov     ax, ds:word_4a61ee
push    eax
push    ebp
call    sub_474520
mov     bp, ax
add     esp, 8
mov     ds:word_4a61ee, 0
cmp     ds:dword_4a61b8, 0
jz      short loc_4107b3
push    ebp
push    edi
call    sub_475590
add     esp, 8
mov     eax, [esp+10h+hdcsrc]
test    eax, eax
jz      short loc_4107ea
cmp     ds:dword_4a61ea, 0
jz      short loc_4107dd
cmp     di, 8
jnz     short loc_4107dd
push    offset rcsrc2
push    ebx
push    eax
push    ebp
call    ds:dword_4a61ea
add     esp, 10h
jmp     short loc_4107fb
push    ebx
push    eax
push    ebp
call    sub_4748b0
add     esp, 0ch
jmp     short loc_4107fb
test    di, 2
jz      short loc_4107fb
push    ebx
push    ebp
call    sub_4108d0
add     esp, 8
call    sub_43e170
push    esi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_410825
push    ebx
push    ebp
push    edi
push    esi
call    sub_4104e0
mov     bp, ax
add     esp, 10h
push    esi
call    sub_412f60
add     esp, 4
mov     ax, bp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     ds:frequency, 0
push    esi
jz      short loc_410849
push    2
push    offset rcsrc2
call    sub_4753c0
add     esp, 8
mov     eax, hbr
test    eax, eax
jz      short loc_410859
push    eax
call    ds:deleteobject
mov     hbr, 0
push    0
call    ds:getdc
mov     esi, eax
test    esi, esi
jz      short loc_4108a6
push    esi
call    sub_40ae90
add     esp, 4
mov     eax, dword_4ad248
or      eax, 2000000h
push    eax
push    esi
call    ds:getnearestcolor
or      eax, 2000000h
push    eax
call    ds:createsolidbrush
push    esi
mov     hbr, eax
push    0
call    ds:releasedc
pop     esi
retn
mov     ecx, [esp+arg_0]
cmp     ecx, dword_4ad248
jz      short locret_4108c7
mov     dword_4ad248, ecx
jmp     sub_410830
retn
mov     eax, hbr
test    eax, eax
jz      short loc_4108ed
mov     ecx, dword ptr [esp+arg_0]
push    eax
mov     eax, [esp+4+hdc]
push    eax
push    ecx
call    sub_474950
add     esp, 0ch
retn
push    0
call    ds:getstockobject
mov     cx, [esp+arg_0]
push    eax
mov     eax, [esp+4+hdc]
push    eax
push    ecx
call    sub_474950
add     esp, 0ch
retn
mov     eax, hbr
test    eax, eax
jz      short locret_410920
push    eax
call    ds:deleteobject
retn
sub     esp, 0c0h
xor     eax, eax
mov     ecx, 2fh
push    esi
push    edi
lea     edi, [esp+0c8h+var_c0]
rep stosd
stosw
mov     eax, [esp+0c8h+arg_0]
mov     ecx, [esp+0c8h+arg_4]
mov     [esp+0c8h+var_b6], cx
mov     edx, [esp+0c8h+arg_8]
mov     [esp+0c8h+var_a0], eax
push    offset dword_4a61c4
mov     [esp+0cch+var_28], edx
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_4109be
push    offset dword_4a61c4
call    sub_413090
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_4109b1
lea     eax, [esp+0c8h+var_c0]
push    eax
push    11h
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
test    eax, eax
jnz     short loc_4109b1
push    esi
call    sub_413260
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_410990
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, [esp+0c8h+var_9c]
pop     edi
pop     esi
add     esp, 0c0h
retn
sub     esp, 0c0h
xor     eax, eax
mov     ecx, 2fh
push    ebx
push    esi
push    edi
xor     esi, esi
lea     edi, [esp+0cch+var_c0]
rep stosd
stosw
mov     eax, [esp+0cch+arg_4]
mov     ecx, [esp+0cch+arg_8]
mov     edi, [esp+0cch+arg_0]
mov     [esp+0cch+var_9c], eax
mov     [esp+0cch+var_28], ecx
cmp     edi, esi
jnz     short loc_410a13
mov     edi, offset dword_4a61c4
push    edi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_410a5b
push    edi
call    sub_413090
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_410a52
lea     eax, [esp+0cch+var_c0]
push    eax
push    1dh
push    ebx
call    dword ptr [ebx+6]
add     esp, 0ch
mov     esi, eax
test    esi, esi
jnz     short loc_410a52
push    ebx
call    sub_413260
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_410a2f
push    edi
call    sub_412f60
add     esp, 4
mov     eax, 0
cmp     esi, 1
adc     eax, 0ffffffffh
and     eax, [esp+0cch+var_a0]
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
mov     eax, [esp+arg_0]
push    0
push    1bh
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_410af6
mov     eax, [esp+10h+arg_0]
push    eax
call    sub_413090
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_410ae9
mov     si, [esp+10h+arg_4]
mov     edi, [esp+10h+arg_8]
mov     ebx, [esp+10h+arg_c]
mov     ax, [ebp+0ah]
and     ax, si
cmp     ax, si
jnz     short loc_410ada
push    ebx
push    edi
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
push    ebp
call    sub_413260
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_410ac5
mov     eax, [esp+10h+arg_0]
push    eax
call    sub_412f60
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 0e8h
push    ebx
push    esi
mov     esi, [esp+0f0h+arg_0]
push    edi
push    ebp
push    esi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_410b51
mov     eax, [esp+0f8h+arg_4]
push    eax
push    esi
call    sub_412fc0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_410b46
movsx   eax, word ptr [edi]
push    eax
push    edi
call    sub_45b910
mov     [esp+100h+hmem], eax
add     esp, 8
push    esi
call    sub_412f60
add     esp, 4
jmp     short loc_410b55
mov     edi, [esp+0f8h+var_c0]
test    edi, edi
jz      loc_410d1a
cmp     [esp+0f8h+hmem], 0
jz      loc_410d1a
mov     eax, [esp+0f8h+hmem]
push    eax
call    ds:globallock
mov     edi, eax
mov     ebp, [esp+0f8h+arg_8]
push    edi
test    ebp, ebp
jz      short loc_410b8d
push    ebp
push    esi
call    sub_413190
add     esp, 0ch
jmp     short loc_410b96
push    esi
call    sub_413130
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jnz     short loc_410bb3
push    1
push    esi
call    sub_410700
add     esp, 8
test    eax, eax
jnz     short loc_410b7c
test    ebx, ebx
jz      loc_410cf3
push    esi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      loc_410cf3
mov     eax, [edi+2]
push    eax
push    esi
call    sub_412fc0
add     esp, 8
mov     ebp, eax
push    ebx
push    esi
call    sub_412fc0
mov     [esp+100h+var_e8], eax
add     esp, 8
test    ebp, ebp
jz      loc_410cea
test    eax, eax
jz      loc_410cea
push    ebp
push    eax
call    sub_410d30
add     esp, 8
mov     ecx, ebp
test    eax, eax
jnz     short loc_410c05
mov     ecx, [esp+0f8h+var_e8]
mov     [esp+0f8h+var_d8], ecx
test    eax, eax
mov     eax, [esp+0f8h+var_e8]
jnz     short loc_410c13
mov     eax, ebp
lea     edi, [esp+0f8h+var_c0]
mov     ecx, 2fh
mov     [esp+0f8h+var_d4], eax
mov     eax, 1
mov     [esp+0f8h+var_dc], eax
mov     [esp+0f8h+var_e0], eax
xor     eax, eax
rep stosd
stosw
lea     ecx, [esp+0f8h+var_c0]
mov     edx, [esp+0f8h+var_e8]
mov     eax, [esp+0f8h+var_e8]
push    ecx
push    19h
push    edx
call    dword ptr [eax+6]
lea     edx, [esp+104h+var_b0]
lea     ecx, [esp+104h+rcsrc2]
add     esp, 0ch
mov     eax, [edx]
mov     edi, [edx+4]
mov     [ecx], eax
mov     eax, [edx+8]
push    ecx
mov     edx, [edx+0ch]
mov     [ecx+4], edi
mov     [ecx+8], eax
mov     eax, [esp+0fch+var_d4]
push    eax
mov     [ecx+0ch], edx
mov     edx, [esp+100h+var_d8]
push    edx
call    sub_410d70
add     esp, 0ch
test    eax, eax
jnz     short loc_410c8a
xor     eax, eax
mov     [esp+0f8h+var_e0], eax
mov     [esp+0f8h+var_dc], eax
jmp     short loc_410ca1
push    0
push    20h
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
test    eax, eax
jz      short loc_410ca1
mov     [esp+0f8h+var_e0], 0
xor     eax, eax
mov     [ebp+1eh], ax
cmp     [esp+0f8h+var_e0], eax
mov     [ebp+1ch], ax
jz      short loc_410cbb
push    eax
push    8
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
cmp     [esp+0f8h+var_dc], 0
jz      short loc_410cd1
mov     eax, [esp+0f8h+var_e8]
push    0
push    7
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
mov     dword ptr [ebp+6], offset sub_40fd60
mov     ax, [ebp+0ah]
or      al, 20h
mov     [ebp+0ah], ax
and     ax, 0ffefh
mov     [ebp+0ah], ax
push    esi
call    sub_412f60
add     esp, 4
mov     eax, [esp+0f8h+hmem]
mov     ebp, ds:globalunlock
push    eax
call    ebp
mov     ecx, [esp+0f8h+hmem]
push    ecx
call    sub_45ba00
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0e8h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0e8h
retn
mov     eax, [esp+arg_4]
push    esi
push    eax
call    sub_413260
add     esp, 4
test    eax, eax
jz      short loc_410d57
mov     esi, [esp+4+arg_0]
cmp     eax, esi
jz      short loc_410d5b
push    eax
call    sub_413260
add     esp, 4
test    eax, eax
jnz     short loc_410d46
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 0d0h
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_413260
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_410de0
mov     esi, ds:intersectrect
mov     ebx, [esp+0e0h+lprcsrc2]
cmp     ebp, [esp+0e0h+arg_4]
jz      short loc_410de0
lea     edi, [esp+0e0h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
lea     eax, [esp+0e0h+var_c0]
push    eax
push    19h
push    ebp
call    dword ptr [ebp+6]
lea     eax, [esp+0ech+rcsrc1]
lea     ecx, [esp+0ech+rcdst]
add     esp, 0ch
push    ebx
push    eax
push    ecx
call    esi
test    eax, eax
jnz     short loc_410ded
push    ebp
call    sub_413260
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_410d9a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0d0h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0d0h
retn
mov     eax, [esp+arg_0]
mov     ds:dword_4a61b8, eax
retn
mov     edx, [esp+arg_8]
mov     ecx, [esp+arg_c]
sub     edx, [esp+arg_0]
sub     ecx, [esp+arg_4]
imul    edx, edx
imul    ecx, ecx
add     edx, ecx
push    edx
call    sub_445e30
add     esp, 4
retn
mov     edx, [esp+arg_8]
mov     ecx, [esp+arg_c]
sub     edx, [esp+arg_0]
sub     ecx, [esp+arg_4]
imul    edx, edx
imul    ecx, ecx
lea     eax, [ecx+edx]
retn
mov     edx, [esp+arg_c]
sub     esp, 8
push    esi
mov     esi, [esp+0ch+arg_4]
cmp     edx, esi
jnz     short loc_410e85
mov     eax, [esp+0ch+arg_10]
mov     [esp+0ch+var_4], esi
mov     [esp+0ch+var_8], eax
mov     edx, [esp+0ch+var_4]
pop     esi
add     esp, 8
retn
mov     ecx, [esp+0ch+arg_8]
mov     eax, [esp+0ch+arg_0]
cmp     ecx, eax
jnz     short loc_410eaa
mov     [esp+0ch+var_8], eax
mov     eax, [esp+0ch+arg_14]
mov     [esp+0ch+var_4], eax
mov     eax, [esp+0ch+var_8]
mov     edx, [esp+0ch+var_4]
pop     esi
add     esp, 8
retn
sub     ecx, eax
sub     edx, esi
mov     [esp+0ch+var_8], ecx
fild    [esp+0ch+var_8]
mov     [esp+0ch+var_8], edx
fild    [esp+0ch+var_8]
mov     [esp+0ch+var_8], eax
fld     st
pushf
cmp     dword_4af150, 0
jnz     short loc_410ed2
fdiv    st, st(2)
jmp     short loc_410edb
push    eax
mov     al, 10h
call    unknown_libname_3
pop     eax
popf
fxch    st(2)
pushf
cmp     dword_4af150, 0
jnz     short loc_410eec
fdivrp  st(1), st
jmp     short loc_410ef5
push    eax
mov     al, 0fh
call    unknown_libname_3
pop     eax
popf
mov     eax, [esp+0ch+arg_14]
sub     eax, esi
fild    [esp+0ch+var_8]
fild    [esp+0ch+arg_10]
mov     [esp+0ch+var_8], eax
fmul    st, st(2)
fld     st(1)
fmul    st, st(4)
faddp   st(1), st
fiadd   [esp+0ch+var_8]
fld     st(2)
fadd    st, st(4)
pushf
cmp     dword_4af150, 0
jnz     short loc_410f26
fdivr   st, st(1)
jmp     short loc_410f2f
push    eax
mov     al, 0ah
call    unknown_libname_3
pop     eax
popf
fst     st(1)
call    __ftol
fsubrp  st(1), st
mov     [esp+0ch+var_8], eax
fmul    st, st(2)
call    __ftol
fstp    st
fstp    st
add     eax, esi
mov     [esp+0ch+var_4], eax
mov     eax, [esp+0ch+var_8]
mov     edx, [esp+0ch+var_4]
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_8]
push    0
mov     ecx, [esp+4+arg_4]
push    eax
mov     edx, dword ptr [esp+8+arg_0]
push    ecx
push    edx
call    sub_410f80
add     esp, 10h
retn
mov     eax, [esp+hwndinsertafter]
push    ebx
mov     ebx, [esp+4+arg_4]
push    esi
mov     si, [esp+8+arg_0]
push    edi
push    eax
push    ebx
push    esi
call    sub_4110c0
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     short loc_410fb3
push    1
push    9
call    sub_45c150
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+0ch+arg_8]
push    0
push    eax
push    ebx
push    esi
push    edi
call    sub_4111e0
add     esp, 14h
test    eax, eax
jz      short loc_410fd8
push    5
push    edi
call    ds:showwindow
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    edi
call    sub_411190
add     esp, 4
xor     edi, edi
push    2
push    9
call    sub_45c150
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 28h
push    esi
mov     esi, [esp+2ch+hwnd]
mov     [esp+2ch+var_26], esi
push    esi
call    sub_4907f0
mov     [esp+30h+var_28], ax
add     esp, 4
push    esi
call    sub_4117f0
mov     [esp+30h+var_22], eax
add     esp, 4
push    esi
call    sub_411910
mov     [esp+30h+var_16], eax
add     esp, 4
test    eax, eax
jz      short loc_41105d
push    eax
push    esi
call    sub_411c00
add     esp, 8
test    eax, eax
jz      short loc_41105d
mov     [esp+2ch+var_e], 6
lea     eax, [esp+2ch+var_28]
push    eax
push    0ah
call    sub_4112d0
add     esp, 8
mov     eax, [esp+2ch+arg_4]
lea     ecx, [esp+2ch+var_28]
mov     [esp+2ch+var_16], eax
push    ecx
push    9
call    sub_4112d0
lea     ecx, [esp+34h+var_28]
add     esp, 8
push    ecx
push    4
call    sub_4112d0
add     esp, 8
push    esi
call    sub_411830
add     esp, 4
push    eax
call    sub_45c820
add     esp, 4
pop     esi
add     esp, 28h
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+hwnd]
push    eax
push    esi
call    sub_411000
add     esp, 8
push    esi
call    sub_411190
add     esp, 4
pop     esi
retn
sub     esp, 28h
push    ebx
push    esi
push    edi
mov     di, [esp+34h+arg_0]
push    edi
call    sub_411720
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_4110e3
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
mov     ebx, [esp+34h+arg_4]
push    ebx
push    edi
push    esi
call    sub_490700
mov     eax, [esp+40h+hwndinsertafter]
add     esp, 0ch
push    eax
push    esi
call    sub_490cd0
mov     [esp+3ch+var_28], di
mov     [esp+3ch+frequency], esi
lea     edi, [esp+3ch+var_28]
mov     [esp+3ch+var_22], ebx
add     esp, 8
push    edi
push    1ah
call    sub_4112d0
add     esp, 8
test    eax, eax
jnz     short loc_41117a
xor     edi, edi
mov     eax, [esp+34h+frequency]
push    eax
call    sub_490d50
mov     [esp+38h+frequency], eax
add     esp, 4
cmp     eax, edi
jz      short loc_41117a
push    eax
call    sub_411600
add     esp, 4
test    eax, eax
jz      short loc_41116a
mov     eax, [esp+34h+frequency]
push    eax
call    sub_4907f0
mov     [esp+38h+var_28], ax
lea     eax, [esp+38h+var_28]
add     esp, 4
push    eax
push    1ah
call    sub_4112d0
add     esp, 8
cmp     eax, 2
jz      short loc_411122
mov     eax, [esp+34h+frequency]
push    edi
push    eax
call    __beep_2
add     esp, 8
jmp     short loc_411122
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
sub     esp, 28h
push    esi
mov     esi, [esp+2ch+hwnd]
push    esi
call    sub_4907f0
mov     [esp+30h+var_28], ax
mov     [esp+30h+var_26], esi
mov     [esp+30h+var_22], 0
lea     eax, [esp+30h+var_28]
add     esp, 4
push    eax
push    1ah
call    sub_4112d0
add     esp, 8
test    eax, eax
jnz     short loc_4111d2
push    1
push    0
push    esi
call    sub_490d00
add     esp, 0ch
push    esi
call    sub_490d90
add     esp, 4
pop     esi
add     esp, 28h
retn
mov     cx, [esp+arg_4]
mov     eax, [esp+hwnd]
mov     edx, [esp+arg_8]
sub     esp, 28h
mov     [esp+28h+var_28], cx
push    esi
mov     [esp+2ch+var_26], eax
push    edx
mov     [esp+30h+var_22], edx
push    eax
call    sub_411810
mov     ecx, [esp+34h+arg_10]
mov     edx, [esp+34h+var_26]
add     esp, 8
push    ecx
push    edx
call    sub_411870
add     esp, 8
call    sub_45c800
mov     esi, eax
test    esi, esi
jnz     short loc_41122c
xor     eax, eax
pop     esi
add     esp, 28h
retn
mov     eax, [esp+2ch+var_26]
push    esi
push    eax
call    sub_411850
mov     eax, [esp+34h+arg_c]
add     esp, 8
mov     edx, 1
test    eax, eax
jz      short loc_411256
xor     edx, edx
mov     ecx, [eax]
mov     eax, [eax+4]
mov     [esp+2ch+var_1e], ecx
mov     [esp+2ch+var_1a], eax
lea     eax, [esp+2ch+var_28]
push    eax
push    edx
call    sub_4112d0
lea     eax, [esp+34h+var_28]
add     esp, 8
push    eax
push    2
call    sub_4112d0
add     esp, 8
test    eax, eax
jnz     short loc_411287
push    esi
call    sub_45c820
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 28h
retn
lea     eax, [esp+2ch+var_28]
push    eax
push    5
call    sub_4112d0
add     esp, 8
test    eax, eax
lea     eax, [esp+2ch+var_28]
push    eax
jnz     short loc_4112b9
push    4
call    sub_4112d0
add     esp, 8
push    esi
call    sub_45c820
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 28h
retn
push    16h
call    sub_4112d0
add     esp, 8
mov     eax, 1
pop     esi
add     esp, 28h
retn
mov     edx, [esp+arg_4]
mov     ax, [edx]
cmp     ax, 64h
jl      short loc_4112fd
cmp     ax, 66h
jg      short loc_4112fd
movsx   eax, ax
mov     ecx, dword_4ad0d8[eax*4]
test    ecx, ecx
jz      short loc_4112fd
mov     eax, [esp+arg_0]
push    edx
push    eax
call    ecx
add     esp, 8
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
sub     esp, 20h
cmp     eax, 35h
push    esi
ja      short def_411315
xor     ecx, ecx
mov     cl, ds:byte_41157c[eax]
jmp     ds:jpt_411315[ecx*4]
mov     esi, [esp+24h+arg_4]
lea     eax, [esp+24h+rect]
push    eax
mov     ecx, [esi+2]
push    ecx
call    sub_412af0
lea     ecx, [esp+2ch+rect]
add     esp, 8
lea     eax, [esi+0ah]
push    ecx
mov     edx, [eax]
mov     ecx, [eax+4]
push    ecx
push    edx
call    sub_473ca0
lea     ecx, [esp+30h+rc]
add     esp, 0ch
push    ecx
call    sub_490c90
lea     ecx, [esp+28h+rect]
add     esp, 4
push    eax
push    ecx
call    sub_473cc0
mov     edx, [esp+2ch+rect.left]
mov     ecx, [esp+2ch+rect.top]
add     esp, 8
mov     eax, [esi+2]
push    ecx
push    edx
push    eax
call    sub_412b30
add     esp, 0ch
xor     eax, eax
pop     esi
add     esp, 20h
retn
lea     eax, [esp+24h+rc]
mov     esi, [esp+24h+arg_4]
push    eax
mov     ecx, [esi+2]
push    ecx
call    sub_412af0
lea     eax, [esp+2ch+rc]
add     esp, 8
push    eax
call    sub_4115c0
mov     ecx, [esp+28h+rc.left]
mov     edx, [esp+28h+rc.top]
add     esp, 4
lea     eax, [esi+0ah]
push    0
mov     [eax], ecx
push    eax
mov     [eax+4], edx
call    sub_491b40
add     esp, 8
push    esi
push    0
call    sub_4112d0
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 20h
retn
mov     eax, 1
pop     esi
add     esp, 20h
retn
mov     eax, 1
pop     esi
add     esp, 20h
retn
mov     eax, 1
pop     esi
add     esp, 20h
retn
mov     esi, [esp+24h+arg_4]
mov     eax, [esi+12h]
cmp     eax, 1
jz      short loc_411405
cmp     eax, 2
jz      short loc_41143f
xor     eax, eax
pop     esi
add     esp, 20h
retn
mov     eax, [esi+2]
push    eax
call    sub_4117b0
add     esp, 4
test    eax, eax
push    1
jz      short loc_41142c
push    1
mov     eax, [esi+2]
push    eax
call    sub_411780
add     esp, 0ch
xor     eax, eax
pop     esi
add     esp, 20h
retn
mov     eax, [esi+2]
push    eax
call    sub_4110a0
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 20h
retn
push    esi
push    3
call    sub_4112d0
add     esp, 8
test    eax, eax
jnz     short loc_41145a
push    3
push    9
call    sub_45c150
add     esp, 8
mov     eax, [esi+2]
push    eax
call    sub_4117b0
add     esp, 4
test    eax, eax
push    2
jz      short loc_411481
push    2
mov     eax, [esi+2]
push    eax
call    sub_411780
add     esp, 0ch
xor     eax, eax
pop     esi
add     esp, 20h
retn
mov     eax, [esi+2]
push    eax
call    sub_4110a0
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 20h
retn
mov     eax, 1
pop     esi
add     esp, 20h
retn
mov     esi, [esp+24h+arg_4]
push    esi
push    1ah
call    sub_4112d0
add     esp, 8
sub     eax, 2
cmp     eax, 1
pop     esi
sbb     eax, eax
add     esp, 20h
inc     eax
retn
mov     eax, 1
pop     esi
add     esp, 20h
retn
mov     esi, [esp+24h+arg_4]
push    1
mov     eax, [esi+2]
push    eax
call    sub_4118f0
add     esp, 8
test    eax, eax
jz      short loc_41150e
mov     dword ptr [esi+12h], 1
mov     dword ptr [esi+1ah], 2
push    esi
push    1bh
call    sub_4112d0
add     esp, 8
test    eax, eax
jz      def_411315
push    esi
push    0ah
call    sub_4112d0
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 20h
retn
mov     eax, 2
push    esi
push    0ah
mov     [esi+12h], eax
mov     [esi+1ah], eax
call    sub_4112d0
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 20h
retn
mov     esi, [esp+24h+arg_4]
push    esi
push    eax
call    sub_411a30
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 20h
retn
xor     eax, eax
pop     esi
add     esp, 20h
retn
sub     esp, 10h
lea     eax, [esp+10h+rect]
push    eax
call    sub_490c90
mov     eax, [esp+14h+rect.top]
mov     ecx, [esp+14h+lprc]
add     esp, 4
sub     eax, [ecx+4]
add     eax, 4
push    eax
mov     eax, [esp+14h+rect.right]
sub     eax, [ecx+8]
sub     eax, 4
push    eax
push    ecx
call    ds:offsetrect
add     esp, 10h
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_4907f0
add     esp, 4
cmp     ax, 64h
jl      short loc_41161f
cmp     ax, 66h
jg      short loc_41161f
mov     eax, 1
retn
xor     eax, eax
retn
push    esi
push    0ffffffe8h
mov     esi, [esp+8+hwnd]
push    esi
call    ds:getclasslonga
cmp     eax, offset sub_4129e0
jz      short loc_411650
cmp     eax, offset sub_412a30
jz      short loc_411650
xor     eax, eax
pop     esi
retn
push    1eh
push    esi
call    ds:getwindowlonga
pop     esi
retn
sub     esp, 28h
mov     ecx, ds:hinstance
lea     eax, [esp+28h+wndclass]
push    esi
push    eax
push    offset aawwoiddialog
push    ecx
call    ds:getclassinfoa
test    eax, eax
jz      short loc_411689
mov     eax, 1
pop     esi
add     esp, 28h
retn
xor     esi, esi
mov     eax, ds:hinstance
mov     [esp+2ch+wndclass.cbclsextra], esi
mov     [esp+2ch+wndclass.hinstance], eax
mov     [esp+2ch+wndclass.hicon], esi
push    7f00h
mov     [esp+30h+wndclass.style], 8
mov     [esp+30h+wndclass.cbwndextra], 22h
push    esi
call    ds:loadcursora
mov     [esp+2ch+wndclass.hcursor], eax
mov     [esp+2ch+wndclass.lpszmenuname], esi
lea     ecx, [esp+2ch+wndclass]
mov     esi, ds:registerclassa
mov     [esp+2ch+wndclass.hbrbackground], 6
mov     [esp+2ch+wndclass.lpfnwndproc], offset sub_4129e0
mov     [esp+2ch+wndclass.lpszclassname], offset aawmodaldialog
push    ecx
call    esi
test    ax, ax
jnz     short loc_4116f1
xor     eax, eax
pop     esi
add     esp, 28h
retn
mov     [esp+2ch+wndclass.lpfnwndproc], offset sub_412a30
mov     [esp+2ch+wndclass.lpszclassname], offset aawwoiddialog
lea     eax, [esp+2ch+wndclass]
push    eax
call    esi
cmp     ax, 1
pop     esi
sbb     eax, eax
add     esp, 28h
inc     eax
retn
push    esi
mov     si, [esp+4+arg_0]
mov     ds:word_4a6220, si
call    sub_4892f0
test    eax, eax
jz      short loc_411748
movsx   eax, si
cmp     eax, 64h
jl      short loc_411748
cmp     eax, 66h
jg      short loc_411748
add     si, 0bb8h
push    0
mov     eax, ds:hwndparent
push    offset dialogfunc
mov     edx, ds:hinstance
movzx   ecx, si
push    eax
push    ecx
push    edx
call    ds:createdialogparama
mov     ds:word_4a6220, 0
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+hdlg]
push    eax
push    esi
call    sub_411000
mov     ecx, [esp+0ch+nresult]
add     esp, 8
push    ecx
push    esi
call    ds:enddialog
pop     esi
retn
mov     ecx, [esp+hwnd]
sub     esp, 14h
lea     eax, [esp+14h+classname]
push    14h
push    eax
push    ecx
call    ds:getclassnamea
test    eax, eax
jz      short loc_4117e6
lea     eax, [esp+14h+classname]
push    offset aawmodaldialog
push    eax
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_4117e6
mov     eax, 1
add     esp, 14h
retn
xor     eax, eax
add     esp, 14h
retn
mov     eax, [esp+hwnd]
push    eax
call    sub_411630
add     esp, 4
test    eax, eax
jz      short loc_411805
mov     eax, [eax+0ah]
retn
xor     eax, eax
retn
mov     eax, [esp+hwnd]
push    eax
call    sub_411630
add     esp, 4
test    eax, eax
jz      short locret_411828
mov     ecx, [esp+arg_4]
mov     [eax+0ah], ecx
retn
mov     eax, [esp+hwnd]
push    eax
call    sub_411630
add     esp, 4
test    eax, eax
jz      short loc_411845
mov     eax, [eax+12h]
retn
xor     eax, eax
retn
mov     eax, [esp+hwnd]
push    eax
call    sub_411630
add     esp, 4
test    eax, eax
jz      short locret_411868
mov     ecx, [esp+arg_4]
mov     [eax+12h], ecx
retn
mov     eax, [esp+hwnd]
push    eax
call    sub_411630
add     esp, 4
test    eax, eax
jz      short locret_411888
mov     ecx, [esp+arg_4]
mov     [eax+0eh], ecx
retn
mov     eax, [esp+hwnd]
test    eax, eax
jnz     short loc_41189b
xor     eax, eax
retn
push    eax
call    sub_411630
add     esp, 4
test    eax, eax
jz      short loc_4118b2
cmp     dword ptr [eax+4], 0
jz      short loc_4118b2
add     eax, 22h
retn
xor     eax, eax
retn
mov     eax, [esp+niddlgitem]
mov     ecx, [esp+hdlg]
push    eax
push    ecx
call    ds:getdlgitem
test    eax, eax
jz      short locret_4118e0
mov     ecx, [esp+benable]
push    ecx
push    eax
call    ds:enablewindow
retn
mov     eax, [esp+niddlgitem]
mov     ecx, [esp+hdlg]
push    eax
push    ecx
call    ds:getdlgitem
test    eax, eax
jz      short loc_41190c
push    eax
call    ds:iswindowenabled
retn
xor     eax, eax
retn
mov     eax, [esp+hwnd]
push    eax
call    sub_411630
add     esp, 4
mov     ecx, eax
xor     eax, eax
test    ecx, ecx
jz      short locret_411935
mov     ecx, [ecx+16h]
test    ecx, ecx
jz      short locret_411935
push    0fffffff4h
push    ecx
call    ds:getwindowlonga
retn
mov     eax, [esp+niddlgitem]
mov     ecx, [esp+hdlg]
push    eax
push    ecx
call    ds:getdlgitem
test    eax, eax
jz      short locret_41196c
cmp     [esp+arg_8], 1
mov     ecx, 0
adc     ecx, 0ffffffffh
and     ecx, 5
push    ecx
push    eax
call    ds:showwindow
retn
mov     eax, [esp+niddlgitem]
mov     ecx, [esp+hdlg]
sub     esp, 8
push    eax
push    ecx
call    ds:getdlgitem
test    eax, eax
jz      short loc_41199a
push    eax
call    sub_4908e0
mov     [esp+0ch+var_8], eax
mov     [esp+0ch+var_4], edx
add     esp, 4
jmp     short loc_4119a4
xor     eax, eax
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], eax
mov     eax, [esp+8+var_8]
mov     edx, [esp+8+var_4]
add     esp, 8
retn
mov     eax, [esp+niddlgitem]
mov     ecx, [esp+hdlg]
push    eax
push    ecx
call    ds:getdlgitem
test    eax, eax
jz      short loc_4119d3
mov     ecx, [esp+lprc]
push    ecx
push    eax
call    sub_490920
add     esp, 8
retn
mov     ecx, [esp+lprc]
push    0
push    0
push    0
push    0
push    ecx
call    ds:setrect
retn
mov     eax, [esp+niddlgitem]
push    esi
mov     ecx, [esp+4+hdlg]
push    edi
push    eax
push    ecx
call    ds:getdlgitem
test    eax, eax
jz      short loc_411a26
mov     ecx, [esp+8+arg_8]
push    1
mov     edi, [ecx+4]
mov     esi, [ecx]
mov     edx, [ecx+0ch]
mov     ecx, [ecx+8]
sub     edx, edi
sub     ecx, esi
push    edx
push    ecx
push    edi
push    esi
push    eax
call    ds:movewindow
pop     edi
pop     esi
retn
push    ebx
push    esi
push    edi
push    ebp
call    ds:getfocus
mov     edi, eax
test    edi, edi
jz      short loc_411a52
push    edi
call    ds:getparent
mov     ecx, [esp+10h+arg_4]
cmp     eax, [ecx+2]
jz      short loc_411a81
jmp     short loc_411a56
mov     ecx, [esp+10h+arg_4]
mov     eax, [ecx+2]
push    eax
call    sub_411630
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_411a7f
mov     eax, [esi+16h]
test    eax, eax
jz      short loc_411a7f
push    eax
call    ds:iswindow
test    eax, eax
jz      short loc_411a7f
mov     edi, [esi+16h]
jmp     short loc_411a81
xor     edi, edi
xor     esi, esi
test    edi, edi
jz      short loc_411afe
xor     ebx, ebx
xor     ebp, ebp
mov     eax, [esp+10h+arg_0]
sub     eax, 28h
cmp     eax, 5
ja      short def_411a97
jmp     ds:jpt_411a97[eax*4]
mov     ebp, 300h
jmp     short def_411a97
mov     ebp, 301h
jmp     short def_411a97
mov     ebp, 302h
jmp     short def_411a97
mov     ebp, 303h
jmp     short def_411a97
mov     ebp, 304h
jmp     short def_411a97
push    edi
call    sub_411ba0
add     esp, 4
test    eax, eax
jz      short def_411a97
mov     ebp, 0b1h
xor     ebx, ebx
mov     esi, 0ffffffffh
test    ebp, ebp
jz      short loc_411afe
push    esi
push    ebx
push    ebp
mov     esi, ds:sendmessagea
push    edi
call    esi
cmp     ebp, 0b1h
jnz     short loc_411afe
push    0
push    0
push    0b7h
push    edi
call    esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+lpstring]
mov     ecx, [esp+niddlgitem]
mov     edx, [esp+hdlg]
push    eax
push    ecx
push    edx
call    ds:setdlgitemtexta
retn
mov     eax, [esp+cchmax]
mov     ecx, [esp+lpstring]
mov     edx, [esp+niddlgitem]
push    eax
mov     eax, [esp+4+hdlg]
push    ecx
push    edx
push    eax
call    ds:getdlgitemtexta
retn
mov     eax, [esp+lparam]
push    ebx
mov     ecx, [esp+4+wparam]
push    esi
mov     ebx, [esp+8+niddlgitem]
push    edi
mov     edi, [esp+0ch+hdlg]
push    eax
push    ecx
mov     esi, ds:senddlgitemmessagea
push    0b1h
push    ebx
push    edi
call    esi
push    0
push    0
push    0b7h
push    ebx
push    edi
call    esi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 0ch
lea     eax, [esp+0ch+classname]
push    esi
push    edi
xor     esi, esi
mov     ecx, [esp+14h+hwnd]
push    0ah
push    eax
push    ecx
call    ds:getclassnamea
test    eax, eax
jz      short loc_411bf8
lea     eax, [esp+14h+classname]
push    offset string2
push    eax
mov     edi, ds:lstrcmpia
call    edi
test    eax, eax
jz      short loc_411bf3
lea     eax, [esp+14h+classname]
push    offset aedit
push    eax
call    edi
test    eax, eax
jz      short loc_411bf3
lea     eax, [esp+14h+classname]
push    offset acalcedit
push    eax
call    edi
test    eax, eax
jnz     short loc_411bf8
mov     esi, 1
mov     eax, esi
pop     edi
pop     esi
add     esp, 0ch
retn
mov     eax, [esp+niddlgitem]
mov     ecx, [esp+hdlg]
push    eax
push    ecx
call    ds:getdlgitem
test    eax, eax
jz      short loc_411c1e
push    eax
call    sub_411ba0
add     esp, 4
retn
xor     eax, eax
retn
mov     ecx, [esp+niddlgitem]
push    0
movsx   eax, [esp+4+arg_8]
mov     edx, [esp+4+hdlg]
push    eax
push    401h
push    ecx
push    edx
call    ds:senddlgitemmessagea
retn
mov     eax, [esp+hwnd]
sub     esp, 0ch
push    ebx
push    esi
push    edi
push    ebp
push    5
mov     ebp, ds:getwindow
push    eax
call    ebp
mov     ebx, eax
test    ebx, ebx
jz      short loc_411caa
mov     esi, ds:getwindowlonga
mov     edi, ds:lstrcmpia
lea     eax, [esp+1ch+classname]
push    0ah
push    eax
push    ebx
call    ds:getclassnamea
lea     eax, [esp+1ch+classname]
push    offset abutton
push    eax
call    edi
test    eax, eax
jnz     short loc_411c9f
push    0fffffff0h
push    ebx
call    esi
cmp     al, 1
jz      short loc_411cb4
push    2
push    ebx
call    ebp
mov     ebx, eax
test    ebx, ebx
jnz     short loc_411c78
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    0fffffff4h
push    ebx
call    esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+niddlgitem]
mov     ecx, [esp+hdlg]
sub     esp, 0ch
push    eax
push    ecx
call    ds:getdlgitem
test    eax, eax
jz      short loc_411d14
lea     ecx, [esp+0ch+classname]
push    0ah
push    ecx
push    eax
call    ds:getclassnamea
test    eax, eax
jz      short loc_411d14
lea     eax, [esp+0ch+classname]
push    offset alistbox
push    eax
call    ds:lstrcmpia
cmp     eax, 1
sbb     eax, eax
add     esp, 0ch
neg     eax
retn
xor     eax, eax
add     esp, 0ch
retn
push    ebx
push    esi
mov     esi, [esp+8+hdlg]
push    edi
mov     edi, [esp+0ch+niddlgitem]
push    ebp
push    edi
push    esi
call    sub_411cd0
add     esp, 8
mov     ebx, eax
cmp     ebx, 1
mov     eax, [esp+10h+lparam]
push    eax
push    0
sbb     eax, eax
and     eax, 0ffffffc3h
add     eax, 180h
push    eax
push    edi
push    esi
call    ds:senddlgitemmessagea
mov     ebp, eax
test    ebp, ebp
jl      short loc_411d84
mov     eax, [esp+10h+arg_c]
cmp     ebx, 1
push    eax
push    ebp
sbb     eax, eax
and     eax, 0ffffffb7h
add     eax, 19ah
push    eax
push    edi
push    esi
call    ds:senddlgitemmessagea
cmp     eax, 0ffffffffh
jz      short loc_411d84
lea     eax, [ebp+1]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_8]
push    esi
push    edi
dec     eax
mov     edi, [esp+8+niddlgitem]
push    0
mov     esi, [esp+0ch+hdlg]
push    eax
push    edi
push    esi
call    sub_411cd0
add     esp, 8
cmp     eax, 1
sbb     eax, eax
and     eax, 0ffffffb7h
add     eax, 199h
push    eax
push    edi
push    esi
call    ds:senddlgitemmessagea
lea     ecx, [eax+1]
pop     edi
pop     esi
cmp     ecx, 1
mov     ecx, 0
adc     ecx, 0ffffffffh
and     ecx, eax
mov     eax, ecx
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+hdlg]
push    edi
mov     edi, [esp+10h+niddlgitem]
push    ebp
push    edi
push    esi
call    sub_411cd0
add     esp, 8
mov     ebx, eax
cmp     ebx, 1
push    0
sbb     eax, eax
push    0
and     eax, 0ffffffbfh
mov     ebp, ds:senddlgitemmessagea
add     eax, 188h
push    eax
push    edi
push    esi
call    ebp
mov     [esp+14h+lparam], eax
cmp     eax, 0ffffffffh
jnz     short loc_411e52
test    ebx, ebx
jz      short loc_411e52
push    edi
push    esi
call    sub_411eb0
add     esp, 8
cmp     eax, 1
jnz     short loc_411e52
lea     eax, [esp+14h+lparam]
push    eax
push    0
push    191h
push    edi
push    esi
call    ebp
cmp     eax, 0ffffffffh
jnz     short loc_411e52
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     [esp+14h+lparam], 0ffffffffh
jz      short loc_411e66
mov     eax, [esp+14h+lparam]
pop     ebp
inc     eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_8]
push    esi
push    edi
dec     eax
mov     edi, [esp+8+niddlgitem]
push    0
mov     esi, [esp+0ch+hdlg]
push    eax
push    edi
push    esi
call    sub_411cd0
add     esp, 8
cmp     eax, 1
sbb     eax, eax
and     eax, 0ffffffc8h
add     eax, 186h
push    eax
push    edi
push    esi
call    ds:senddlgitemmessagea
pop     edi
pop     esi
retn
mov     eax, [esp+niddlgitem]
push    0
mov     ecx, [esp+4+hdlg]
push    0
push    190h
push    eax
push    ecx
call    ds:senddlgitemmessagea
test    eax, eax
jg      short locret_411ecf
xor     eax, eax
retn
push    esi
push    edi
mov     edi, [esp+8+niddlgitem]
push    0
mov     esi, [esp+0ch+hdlg]
push    0
push    edi
push    esi
call    sub_411cd0
add     esp, 8
cmp     eax, 1
sbb     eax, eax
and     eax, 0ffffffc7h
add     eax, 184h
push    eax
push    edi
push    esi
call    ds:senddlgitemmessagea
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     ebx, [esp+8+wparam]
push    edi
mov     edi, [esp+0ch+niddlgitem]
push    0
mov     esi, [esp+10h+hdlg]
push    ebx
push    0bh
push    edi
push    esi
call    ds:senddlgitemmessagea
test    ebx, ebx
jz      short loc_411f50
push    edi
push    esi
call    ds:getdlgitem
mov     esi, eax
test    esi, esi
jz      short loc_411f50
push    1
push    0
push    esi
call    ds:invalidaterect
push    esi
call    ds:updatewindow
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+hwndparent]
test    ecx, ecx
jnz     short loc_411f6e
mov     ecx, ds:hwndparent
mov     dx, [esp+arg_0]
mov     eax, [esp+dwinitparam]
mov     ds:word_4a6224, dx
push    eax
mov     eax, [esp+4+lpdialogfunc]
push    eax
push    ecx
movzx   ecx, dx
push    ecx
mov     edx, ds:hinstance
push    edx
call    ds:dialogboxparama
retn
mov     eax, [esp+arg_4]
cmp     eax, 2
jz      short loc_411fb5
cmp     eax, 110h
jz      short loc_411fc7
xor     eax, eax
retn    10h
mov     eax, [esp+arg_0]
push    eax
call    sub_490760
add     esp, 4
xor     eax, eax
retn    10h
mov     cx, ds:word_4a6224
mov     eax, [esp+arg_c]
mov     edx, [esp+arg_0]
push    eax
push    ecx
push    edx
call    sub_490700
add     esp, 0ch
xor     eax, eax
retn    10h
sub     esp, 154h
push    esi
push    edi
mov     esi, [esp+15ch+arg_4]
mov     eax, [esi]
cmp     eax, 2
jz      short loc_412016
cmp     eax, 4
jz      short loc_412016
xor     eax, eax
pop     edi
pop     esi
add     esp, 154h
retn
mov     eax, [esi+0ch]
cmp     eax, 1
jb      loc_41213d
cmp     eax, 2
jbe     short loc_412035
cmp     eax, 4
jz      loc_41212a
jmp     loc_41213d
mov     edi, [esp+15ch+hwnd]
push    edi
call    sub_411630
mov     [esp+160h+var_152], edi
add     esp, 4
mov     cx, [eax+8]
mov     [esp+15ch+var_154], cx
lea     ecx, [esp+15ch+wparam]
mov     edx, [eax+0ah]
mov     edi, ecx
mov     eax, [esi+4]
mov     [esp+15ch+var_14e], edx
mov     [esp+15ch+var_142], eax
mov     [esp+15ch+var_136], ecx
xor     eax, eax
mov     ecx, 0bh
mov     [esp+15ch+var_13a], 9
rep stosd
mov     eax, [esi+0ch]
dec     eax
cmp     eax, 1
mov     ecx, [esi+18h]
sbb     eax, eax
mov     [esp+15ch+var_120], ecx
lea     ecx, [esi+1ch]
lea     edx, [esp+15ch+var_11c]
neg     eax
mov     edi, [ecx+4]
mov     [esp+15ch+var_128], eax
mov     eax, [esi+10h]
and     eax, 1
mov     [esp+15ch+var_124], eax
mov     eax, [ecx]
mov     [edx], eax
cmp     dword ptr [esi], 2
mov     eax, [ecx+8]
mov     [edx+4], edi
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
jnz     short loc_412115
mov     eax, [esi+8]
mov     ecx, [esi+2ch]
lea     edx, [esp+15ch+lparam]
push    0
mov     [esp+160h+wparam], eax
push    eax
push    18ah
mov     edi, ds:sendmessagea
mov     [esp+168h+var_10c], ecx
mov     [esp+168h+var_108], edx
mov     ecx, [esi+14h]
push    ecx
call    edi
mov     [esp+15ch+var_104], eax
cmp     eax, 100h
jnb     short loc_412109
lea     eax, [esp+15ch+lparam]
mov     ecx, [esp+15ch+wparam]
push    eax
mov     edx, [esi+14h]
push    ecx
push    189h
push    edx
call    edi
jmp     short loc_412111
mov     [esp+15ch+var_104], 0
inc     [esp+15ch+wparam]
lea     eax, [esp+15ch+var_154]
push    eax
push    0ah
call    sub_4112d0
add     esp, 8
test    byte ptr [esi+10h], 10h
jz      short loc_41213d
cmp     dword ptr [esi], 2
jnz     short loc_41213d
lea     eax, [esi+1ch]
mov     ecx, [esi+18h]
push    eax
push    ecx
call    ds:drawfocusrect
mov     eax, 1
pop     edi
pop     esi
add     esp, 154h
retn
sub     esp, 54h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+64h+hwnd]
push    edi
call    sub_411630
add     esp, 4
mov     ebx, eax
mov     eax, [esp+64h+arg_4]
cmp     eax, 10h
ja      short loc_412196
jz      loc_412344
cmp     eax, 1
jz      short loc_4121af
cmp     eax, 3
jz      loc_412259
cmp     eax, 5
jz      loc_4122c5
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
sub     eax, 24h
cmp     eax, 0edh
ja      short def_4121a8
xor     ecx, ecx
mov     cl, ds:byte_412848[eax]
jmp     ds:jpt_4121a8[ecx*4]
mov     ax, ds:word_4a6220
xor     esi, esi
mov     word ptr [esp+64h+classname], ax
lea     eax, [esp+64h+classname]
mov     dword ptr [esp+64h+classname+2], edi
push    eax
push    35h
call    sub_4112d0
add     esp, 8
test    eax, eax
jz      short loc_4121f4
cmp     [esp+64h+var_a], esi
jnz     short loc_4121f0
mov     ecx, [esp+64h+arg_10]
mov     eax, 1
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 0ffffffffh
pop     ebx
add     esp, 54h
retn
mov     esi, [esp+64h+var_a]
lea     eax, [esp+64h+classname]
push    eax
push    2fh
call    sub_4112d0
add     esp, 8
mov     ebx, eax
push    42h
lea     eax, [ebx+22h]
push    eax
call    sub_45b8f0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jnz     short loc_412230
mov     ecx, [esp+64h+arg_10]
mov     eax, 1
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 0ffffffffh
pop     ebx
add     esp, 54h
retn
push    ebp
call    ds:globallock
mov     cx, ds:word_4a6220
push    eax
mov     [eax+8], cx
push    1eh
push    edi
mov     [eax], ebp
mov     [eax+4], ebx
mov     [eax+1eh], esi
call    ds:setwindowlonga
jmp     loc_412817
push    edi
call    sub_4907f0
mov     word ptr [esp+68h+var_52+2], ax
add     esp, 4
test    ax, ax
jz      loc_412817
cmp     dword ptr [ebx+1ah], 0
jnz     loc_412817
lea     eax, [esp+64h+classname]
push    eax
push    edi
call    sub_412af0
mov     dword ptr [ebx+1ah], 1
mov     edx, dword ptr [esp+6ch+classname]
mov     ecx, [esp+6ch+var_24]
mov     [esp+6ch+var_4e], edi
add     esp, 8
mov     eax, [ebx+0ah]
mov     [esp+64h+var_4a], eax
mov     [esp+64h+var_46], edx
lea     eax, [esp+64h+var_52+2]
mov     [esp+64h+var_42], ecx
push    eax
push    19h
call    sub_4112d0
mov     dword ptr [ebx+1ah], 0
add     esp, 8
jmp     loc_412817
push    edi
call    sub_4907f0
mov     word ptr [esp+68h+var_52+2], ax
add     esp, 4
test    ax, ax
jz      loc_412817
movsx   eax, word ptr [esp+64h+arg_c]
mov     dword ptr [esp+64h+classname], eax
mov     eax, [esp+64h+arg_c]
shr     eax, 10h
cmp     dword ptr [ebx+1ah], 0
movsx   ecx, ax
jnz     loc_412817
mov     dword ptr [ebx+1ah], 1
mov     edx, dword ptr [esp+64h+classname]
mov     [esp+64h+var_4e], edi
mov     eax, [ebx+0ah]
mov     [esp+64h+var_4a], eax
mov     [esp+64h+var_46], edx
mov     eax, [esp+64h+arg_8]
mov     [esp+64h+var_42], ecx
sub     eax, 2
lea     ecx, [esp+64h+var_52+2]
push    ecx
cmp     eax, 1
sbb     eax, eax
push    17h
neg     eax
mov     [esp+6ch+var_2e], eax
call    sub_4112d0
mov     dword ptr [ebx+1ah], 0
add     esp, 8
jmp     loc_412817
mov     [esp+64h+var_4e], edi
mov     eax, [ebx+0ah]
mov     [esp+64h+var_4a], eax
mov     cx, [ebx+8]
mov     word ptr [esp+64h+var_52+2], cx
lea     ecx, [esp+64h+var_52+2]
push    ecx
push    20h
jmp     loc_41280f
push    edi
call    sub_4907f0
mov     word ptr [esp+68h+var_52+2], ax
add     esp, 4
test    ax, ax
jz      loc_412817
cmp     dword ptr [ebx+1ah], 0
jnz     loc_412817
mov     esi, [esp+64h+arg_c]
lea     edx, [esp+64h+var_52+2]
mov     [esp+64h+var_4e], edi
push    edx
mov     eax, [ebx+0ah]
lea     ecx, [esi+8]
push    1eh
add     esi, 18h
mov     [esp+6ch+var_4a], eax
mov     [esp+6ch+var_32], ecx
call    sub_4112d0
lea     ecx, [esp+6ch+var_52+2]
mov     [esp+6ch+var_32], esi
add     esp, 8
push    ecx
push    18h
jmp     loc_41280f
mov     eax, [esp+64h+arg_c]
push    eax
push    edi
call    sub_411ff0
mov     ecx, [esp+6ch+arg_10]
add     esp, 8
pop     ebp
mov     [ecx], eax
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     esi, [esp+64h+arg_c]
cmp     dword ptr [esi], 2
jnz     loc_412817
mov     edx, [esp+64h+arg_8]
mov     [esp+64h+var_4e], edi
mov     ax, [ebx+8]
mov     word ptr [esp+64h+var_52+2], ax
lea     eax, [esp+64h+var_52+2]
mov     ecx, [ebx+0ah]
push    eax
mov     [esp+68h+var_4a], ecx
push    0ah
mov     [esp+6ch+var_36], 8
mov     [esp+6ch+var_3e], edx
call    sub_4112d0
mov     ecx, [esp+6ch+arg_10]
add     esp, 8
mov     [esi+10h], eax
mov     eax, 1
pop     ebp
mov     dword ptr [ecx], 1
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
test    ebx, ebx
jz      short loc_412468
mov     eax, [ebx+1eh]
test    eax, eax
jz      short loc_412452
push    eax
call    sub_45bdb0
add     esp, 4
mov     eax, [ebx]
push    eax
call    sub_45ba00
add     esp, 4
push    0
push    1eh
push    edi
call    ds:setwindowlonga
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     eax, [esp+64h+arg_8]
mov     ebp, [esp+64h+arg_c]
mov     word ptr [esp+64h+var_52], ax
mov     [esp+64h+var_4e], edi
shr     eax, 10h
mov     cx, [ebx+8]
movzx   esi, ax
mov     word ptr [esp+64h+var_52+2], cx
mov     eax, [ebx+0ah]
mov     [esp+64h+var_4a], eax
mov     eax, [esp+64h+var_52]
and     eax, 0ffffh
cmp     esi, 100h
mov     [esp+64h+var_3e], eax
jz      short loc_4124b8
cmp     esi, 4
jz      short loc_4124b8
cmp     esi, 3
jnz     short loc_4124bb
mov     [ebx+16h], ebp
test    ebp, ebp
jz      loc_4127c7
lea     eax, [esp+64h+classname]
push    0ah
push    eax
push    ebp
call    ds:getclassnamea
test    eax, eax
jz      loc_4127c7
lea     eax, [esp+64h+classname]
push    offset abutton
push    eax
mov     edi, ds:lstrcmpia
call    edi
test    eax, eax
jnz     short loc_41253f
cmp     [esp+64h+var_3e], 63h
jnz     short loc_4124fe
mov     [esp+64h+var_3e], 1
test    esi, esi
jnz     loc_412817
mov     [esp+64h+var_36], 2
push    0fffffff0h
push    ebp
call    ds:getwindowlonga
test    al, al
jz      short loc_412523
cmp     al, 1
jnz     loc_412808
lea     eax, [esp+64h+var_52+2]
push    eax
push    1bh
call    sub_4112d0
add     esp, 8
test    eax, eax
jnz     loc_412808
jmp     loc_412817
lea     eax, [esp+64h+classname]
push    offset aedit
push    eax
call    edi
test    eax, eax
jz      loc_41276f
lea     eax, [esp+64h+classname]
push    offset acalcedit
push    eax
call    edi
test    eax, eax
jz      loc_41276f
lea     eax, [esp+64h+classname]
push    offset string2
push    eax
call    edi
test    eax, eax
jz      loc_41276f
lea     eax, [esp+64h+classname]
push    offset acombobox
push    eax
call    edi
test    eax, eax
jnz     short loc_4125b3
cmp     esi, 1
jnz     short loc_41259d
mov     [esp+64h+var_36], 4
jmp     loc_412808
cmp     esi, 2
jnz     loc_412817
mov     [esp+64h+var_36], 3
jmp     loc_412808
lea     eax, [esp+64h+classname]
push    offset alistbox
push    eax
call    edi
test    eax, eax
jnz     short loc_41260f
cmp     esi, 1
jnz     short loc_4125d5
mov     [esp+64h+var_36], 4
jmp     loc_412808
cmp     esi, 2
jnz     short loc_4125e7
mov     [esp+64h+var_36], 3
jmp     loc_412808
cmp     esi, 4
jnz     short loc_4125f9
mov     [esp+64h+var_36], 5
jmp     loc_412808
cmp     esi, 5
jnz     loc_412817
mov     [esp+64h+var_36], 6
jmp     loc_412808
lea     eax, [esp+64h+classname]
push    offset acusbit
push    eax
call    edi
test    eax, eax
jz      loc_412735
lea     eax, [esp+64h+classname]
push    offset aocusbit
push    eax
call    edi
test    eax, eax
jz      loc_412735
lea     eax, [esp+64h+classname]
push    offset acustbutt
push    eax
call    edi
test    eax, eax
jnz     short loc_412668
push    ebp
call    ds:getdlgctrlid
mov     [esp+64h+var_3e], eax
cmp     esi, 1
jnz     loc_412817
mov     [esp+64h+var_36], 2
jmp     loc_412808
lea     eax, [esp+64h+classname]
push    offset acussel
push    eax
call    edi
test    eax, eax
jnz     loc_412808
push    0
cmp     esi, 405h
jnz     short loc_4126ac
push    4
push    ebp
call    ds:getwindowword
movzx   eax, ax
push    eax
call    sub_4596d0
mov     [esp+6ch+var_36], 0dh
mov     [esp+6ch+var_2e], eax
add     esp, 8
jmp     loc_412808
push    ebp
mov     edi, ds:getwindowword
call    edi
movzx   eax, ax
mov     [esp+64h+var_46], eax
push    2
push    ebp
call    edi
movzx   eax, ax
mov     [esp+64h+var_42], eax
cmp     esi, 401h
jnz     short loc_4126dd
mov     [esp+64h+var_36], 0bh
jmp     loc_412808
cmp     esi, 402h
jnz     short loc_4126f2
mov     [esp+64h+var_36], 0ah
jmp     loc_412808
cmp     esi, 403h
jnz     short loc_412707
mov     [esp+64h+var_36], 0ch
jmp     loc_412808
cmp     esi, 407h
jnz     short loc_41271c
mov     [esp+64h+var_36], 5
jmp     loc_412808
cmp     esi, 408h
jnz     loc_412817
mov     [esp+64h+var_36], 6
jmp     loc_412808
cmp     esi, 1
jnz     short loc_412747
mov     [esp+64h+var_36], 4
jmp     loc_412808
cmp     esi, 3
jnz     short loc_412759
mov     [esp+64h+var_36], 3
jmp     loc_412808
cmp     esi, 2
jnz     loc_412817
mov     [esp+64h+var_36], 2
jmp     loc_412808
cmp     esi, 300h
jnz     short loc_412784
mov     [esp+64h+var_36], 4
jmp     loc_412808
cmp     esi, 100h
jnz     short loc_412796
mov     [esp+64h+var_36], 5
jmp     short loc_412808
cmp     esi, 200h
jnz     short loc_4127a8
mov     [esp+64h+var_36], 6
jmp     short loc_412808
cmp     esi, 61h
jnz     short loc_412817
lea     eax, [esp+64h+classname]
push    offset string2
push    eax
call    edi
test    eax, eax
jnz     short loc_412817
mov     [esp+64h+var_36], 2
jmp     short loc_412808
cmp     word ptr [esp+64h+var_52], 1
jnz     short loc_412808
test    ebp, ebp
jnz     short loc_412808
test    esi, esi
jnz     short loc_412808
push    edi
call    sub_411c50
add     esp, 4
test    eax, eax
jz      short loc_4127ed
cmp     eax, 1
jz      short loc_4127ed
mov     [esp+64h+var_3e], eax
mov     [esp+64h+var_36], 2
lea     eax, [esp+64h+var_52+2]
push    eax
push    1bh
call    sub_4112d0
add     esp, 8
test    eax, eax
jz      short loc_412817
lea     eax, [esp+64h+var_52+2]
push    eax
push    0ah
call    sub_4112d0
add     esp, 8
mov     ecx, [esp+64h+arg_10]
mov     eax, 1
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 0
pop     ebx
add     esp, 54h
retn
sub     esp, 28h
push    esi
mov     esi, [esp+2ch+hwnd]
push    esi
call    sub_411630
mov     ecx, [esp+30h+arg_10]
add     esp, 4
mov     dword ptr [ecx], 0
mov     ecx, [esp+2ch+arg_4]
cmp     ecx, 2
jz      short loc_412970
cmp     ecx, 6
jz      short loc_412989
xor     eax, eax
pop     esi
add     esp, 28h
retn
cmp     esi, ds:hdlg
jnz     short loc_4129d5
xor     eax, eax
pop     esi
mov     ds:hdlg, 0
add     esp, 28h
retn
cmp     [esp+2ch+arg_8], 1
sbb     edx, edx
inc     edx
jz      short loc_41299c
mov     ds:hdlg, esi
jmp     short loc_4129ae
cmp     esi, ds:hdlg
jnz     short loc_4129ae
mov     ds:hdlg, 0
mov     [esp+2ch+var_26], esi
mov     cx, [eax+8]
mov     [esp+2ch+var_28], cx
lea     ecx, [esp+2ch+var_28]
mov     eax, [eax+0ah]
push    ecx
mov     [esp+30h+var_22], eax
push    33h
mov     [esp+34h+var_6], edx
call    sub_4112d0
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 28h
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    ebx
mov     ebx, [esp+8+wparam]
push    esi
push    edi
push    ebp
mov     ebp, [esp+14h+lparam]
push    eax
mov     edi, [esp+18h+msg]
push    ebp
mov     esi, [esp+1ch+hdlg]
push    ebx
push    edi
push    esi
call    sub_412150
add     esp, 14h
test    eax, eax
jz      short loc_412a1a
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
push    ebp
push    ebx
push    edi
push    esi
call    ds:defdlgproca
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
sub     esp, 4
lea     eax, [esp+4+var_4]
push    ebx
mov     ebx, [esp+8+wparam]
push    esi
push    edi
push    ebp
mov     ebp, [esp+14h+lparam]
push    eax
mov     edi, [esp+18h+msg]
push    ebp
mov     esi, [esp+1ch+hdlg]
push    ebx
push    edi
push    esi
call    sub_412940
add     esp, 14h
test    eax, eax
jz      short loc_412a6a
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
lea     eax, [esp+14h+var_4]
push    eax
push    ebp
push    ebx
push    edi
push    esi
call    sub_412150
add     esp, 14h
test    eax, eax
jz      short loc_412a8d
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
lea     eax, [esp+14h+var_4]
push    eax
push    ebp
push    ebx
push    edi
push    esi
call    sub_48f580
add     esp, 14h
test    eax, eax
jz      short loc_412ab0
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
push    ebp
push    ebx
push    edi
push    esi
call    ds:defdlgproca
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
cmp     [esp+arg_4], 110h
jz      short loc_412adf
xor     eax, eax
retn    10h
mov     eax, 1
retn    10h
mov     eax, [esp+hwnd]
push    esi
mov     esi, [esp+4+lprect]
push    edi
push    esi
push    eax
call    ds:getwindowrect
push    esi
mov     ecx, ds:hwndparent
push    ecx
mov     edi, ds:screentoclient
add     esi, 8
call    edi
push    esi
mov     eax, ds:hwndparent
push    eax
call    edi
pop     edi
pop     esi
retn
lea     eax, [esp+point]
push    esi
push    eax
mov     ecx, ds:hwndparent
push    ecx
call    ds:clienttoscreen
mov     esi, [esp+4+hwnd]
push    esi
call    sub_4908b0
add     esp, 4
test    eax, eax
jz      short loc_412b60
lea     ecx, [esp+4+point]
push    ecx
push    eax
call    ds:screentoclient
mov     eax, [esp+4+point.x]
mov     ecx, [esp+4+point.y]
push    ecx
push    eax
push    esi
call    sub_490bd0
add     esp, 0ch
pop     esi
retn
mov     ecx, offset dword_4a6228
jmp     loc_412b90
mov     eax, ecx
retn
mov     eax, [ecx]
retn
mov     word ptr [ecx], 0
mov     eax, ecx
mov     dword ptr [ecx+2], 0
retn
push    esi
mov     eax, [ecx+2]
mov     esi, ecx
test    eax, eax
jz      short loc_412be1
push    eax
call    ds:freelibrary
mov     dword ptr [esi+2], 0
pop     esi
retn
sub     esp, 88h
push    ebx
push    esi
push    edi
mov     esi, ecx
mov     ecx, [esp+94h+arg_0]
push    ebp
mov     eax, [ecx]
call    dword ptr [eax+10h]
mov     ecx, eax
mov     edi, eax
call    sub_44d310
lea     ecx, [esp+98h+reopenbuff]
push    4000h
push    ecx
mov     eax, [edi+8]
push    eax
call    ds:openfile
cmp     ax, 0ffffh
jnz     short loc_412c39
mov     ecx, edi
call    sub_44d360
mov     eax, 1
jmp     short loc_412c71
push    1
mov     ebx, ds:seterrormode
call    ebx
mov     ebp, eax
lea     eax, [esp+98h+reopenbuff.szpathname]
push    eax
call    ds:loadlibrarya
push    ebp
mov     [esi+2], eax
call    ebx
cmp     dword ptr [esi+2], 0
mov     ecx, edi
jnz     short loc_412c6a
call    sub_44d360
mov     eax, 3
jmp     short loc_412c71
call    sub_44d360
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 88h
retn    4
push    esi
mov     eax, [ecx+8]
test    eax, eax
jz      short loc_412cb9
mov     dx, [eax]
dec     dx
mov     [eax], dx
jnz     short loc_412cb9
mov     esi, [ecx+8]
test    esi, esi
jz      short loc_412cb9
mov     ecx, esi
call    sub_412bd0
push    esi
call    ??3@yaxpax@z
add     esp, 4
pop     esi
retn
push    esi
push    edi
mov     esi, ecx
push    0ch
mov     edi, 0
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_412ce0
mov     ecx, eax
call    unknown_libname_1
mov     edi, eax
mov     eax, [esp+8+lpprocname]
mov     ecx, [esi+2]
push    eax
push    ecx
call    ds:getprocaddress
mov     [edi+4], eax
test    eax, eax
jz      short loc_412d09
mov     eax, edi
mov     dword ptr [edi], 0
mov     [edi+8], esi
pop     edi
inc     word ptr [esi]
pop     esi
retn    0ch
test    edi, edi
jz      short loc_412d1d
mov     ecx, edi
call    sub_412c90
push    edi
call    ??3@yaxpax@z
add     esp, 4
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
retn    0ch
mov     ecx, [ecx+4]
mov     eax, 0
cmp     ecx, 1
adc     eax, 0ffffffffh
and     eax, ecx
retn
mov     eax, [esp+arg_0]
sub     esp, 10h
push    esi
xor     esi, esi
push    esi
push    eax
call    sub_44baf0
mov     [esp+1ch+hobject], eax
mov     [esp+1ch+var_4], edx
add     esp, 8
cmp     [esp+14h+hobject], esi
jz      short loc_412dd9
lea     eax, [esp+14h+buffer]
push    3ch
mov     edx, [esp+18h+hobject]
push    esi
mov     ecx, [esp+1ch+var_4]
push    4
push    eax
push    ecx
push    edx
call    sub_44b0c0
add     esp, 18h
cmp     eax, 4
jnz     short loc_412dc7
mov     eax, [esp+14h+buffer]
lea     ecx, [esp+14h+var_10]
mov     edx, [esp+14h+hobject]
push    eax
mov     eax, [esp+18h+var_4]
push    esi
push    4
push    ecx
push    eax
push    edx
call    sub_44b0c0
add     esp, 18h
cmp     eax, 4
jnz     short loc_412dc7
mov     eax, [esp+14h+var_10]
sub     eax, 4550h
cmp     eax, 1
sbb     esi, esi
neg     esi
mov     eax, [esp+14h+hobject]
mov     ecx, [esp+14h+var_4]
push    ecx
push    eax
call    sub_44ae90
add     esp, 8
test    esi, esi
jnz     short loc_412de7
mov     ds:dword_4a6228, 3
mov     eax, esi
pop     esi
add     esp, 10h
retn
sub     esp, 194h
lea     eax, [esp+194h+filename]
push    ebx
mov     ecx, [esp+198h+arg_0]
push    esi
push    edi
xor     esi, esi
mov     [esp+1a0h+var_194], esi
push    105h
push    eax
push    ecx
call    sub_44f640
lea     ecx, [esp+1ach+reopenbuff]
lea     edx, [esp+1ach+filename]
add     esp, 0ch
push    4000h
push    ecx
push    edx
call    ds:openfile
cmp     ax, 0ffffh
jnz     short loc_412e50
xor     eax, eax
pop     edi
mov     ds:dword_4a6228, 1
pop     esi
pop     ebx
add     esp, 194h
retn
lea     eax, [esp+1a0h+var_194]
lea     ecx, [esp+1a0h+reopenbuff.szpathname]
push    eax
push    ecx
call    sub_44f360
add     esp, 8
test    eax, eax
jnz     short loc_412eb1
mov     eax, [esp+1a0h+var_194]
push    eax
call    sub_412d50
add     esp, 4
test    eax, eax
jz      short loc_412ea2
push    1
mov     edi, ds:seterrormode
call    edi
mov     ebx, eax
lea     eax, [esp+1a0h+reopenbuff.szpathname]
push    eax
call    ds:loadlibrarya
mov     esi, eax
push    ebx
call    edi
test    esi, esi
jnz     short loc_412ea2
call    ds:__imp_getlasterror
mov     ds:dword_4a6228, eax
mov     eax, [esp+1a0h+var_194]
push    eax
call    sub_44f4a0
add     esp, 4
jmp     short loc_412ebb
mov     ds:dword_4a6228, 1
mov     eax, 0
pop     edi
cmp     esi, 1
adc     eax, 0ffffffffh
and     eax, esi
pop     esi
pop     ebx
add     esp, 194h
retn
mov     eax, [esp+hlibmodule]
push    eax
call    ds:freelibrary
retn
mov     ecx, offset dword_4a6228
jmp     loc_412bb0
mov     ecx, offset dword_4a6228
jmp     nullsub_19
push    offset sub_412f00
call    _atexit
add     esp, 4
retn
call    sub_412b80
jmp     loc_412f10
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
test    eax, eax
jnz     short loc_412f3f
xor     eax, eax
pop     esi
retn
mov     cx, [esi+0ch]
test    cx, cx
lea     edx, [ecx+1]
mov     [esi+0ch], dx
jnz     short loc_412f59
push    eax
call    ds:globallock
mov     [esi+4], eax
mov     eax, [esi+4]
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     ax, [esi+0ch]
test    ax, ax
jz      short loc_412f8e
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_412f8e
dec     ax
mov     [esi+0ch], ax
jnz     short loc_412f8e
test    ecx, ecx
jz      short loc_412f8e
push    ecx
call    ds:globalunlock
mov     dword ptr [esi+4], 0
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
push    eax
call    sub_413090
add     esp, 4
test    eax, eax
jz      short loc_412fb8
mov     esi, [esp+4+arg_4]
cmp     [eax+2], esi
jz      short loc_412fba
push    eax
call    sub_413260
add     esp, 4
test    eax, eax
jnz     short loc_412fa6
xor     eax, eax
pop     esi
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
sub     esp, 4
lea     eax, [esp+4+var_4]
push    esi
push    eax
push    ecx
push    edx
call    sub_413000
add     esp, 0ch
mov     esi, eax
cmp     [esp+8+var_4], 0
jz      short loc_412ff4
mov     eax, [esp+8+var_4]
add     eax, 32h
push    eax
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_413090
mov     ebx, [esp+14h+arg_8]
add     esp, 4
mov     ebp, eax
mov     dword ptr [ebx], 0
test    ebp, ebp
jz      short loc_41306f
mov     edi, [esp+10h+arg_4]
cmp     [ebp+2], edi
jz      short loc_413076
cmp     dword ptr [ebp+6], offset sub_4535e0
jnz     short loc_413060
lea     esi, [ebp+32h]
cmp     dword ptr [esi], 0
jz      short loc_413060
push    esi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_413089
push    ebx
push    edi
push    esi
call    sub_413000
add     esp, 0ch
test    eax, eax
jnz     short loc_41307d
push    esi
call    sub_412f60
add     esp, 4
push    ebp
call    sub_413260
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_413025
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     dword ptr [ebx], 0
jnz     short loc_413071
mov     [ebx], ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax], 0
jz      short loc_4130b2
cmp     dword ptr [eax+8], 4
jbe     short loc_4130b2
cmp     word ptr [eax+0ch], 0
jz      short loc_4130b2
mov     eax, [eax+4]
add     eax, 2
cmp     word ptr [eax], 0
jnz     short locret_4130b4
xor     eax, eax
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax], 0
jz      short loc_4130ea
mov     ecx, [eax+8]
cmp     ecx, 4
jbe     short loc_4130ea
cmp     word ptr [eax+0ch], 0
jz      short loc_4130ea
mov     eax, [eax+4]
add     eax, ecx
sub     eax, 2
push    eax
call    sub_413290
add     esp, 4
retn
xor     eax, eax
retn
mov     ecx, [esp+arg_0]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     eax, 1
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     [esi], eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
pop     esi
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     edi, [esp+0ch+src]
push    ebp
mov     ax, [edi]
mov     esi, [esp+10h+arg_0]
inc     ax
and     ax, 0fffeh
mov     [edi], ax
push    eax
push    esi
call    sub_413390
add     esp, 8
mov     ebp, eax
cmp     ebp, ebx
jz      short loc_41317d
xor     eax, eax
mov     ax, [edi]
push    eax
push    edi
push    ebp
call    _memcpy
add     esp, 0ch
call    sub_413340
mov     [ebp+2], eax
mov     ebx, eax
push    esi
call    sub_412f60
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+1ch+arg_0]
push    ebp
mov     edi, [esp+20h+src]
mov     [esp+20h+var_4], ebx
mov     eax, [esi+8]
mov     [esp+20h+var_8], eax
mov     ax, [edi]
inc     ax
and     ax, 0fffeh
mov     [edi], ax
push    eax
push    esi
call    sub_413390
mov     [esp+28h+var_10], eax
add     esp, 8
cmp     eax, ebx
jz      loc_413253
mov     eax, [esp+20h+arg_4]
push    eax
push    esi
call    sub_412f90
add     esp, 8
mov     ebp, eax
cmp     ebp, ebx
jz      short loc_413218
mov     eax, ebp
lea     ecx, [esp+20h+var_4]
sub     eax, [esi+4]
push    ecx
mov     edx, [esp+24h+var_8]
lea     ecx, [esp+24h+var_c]
mov     [esp+24h+var_c], eax
push    edx
mov     ax, [edi]
add     ax, 2
push    eax
push    ecx
push    esi
call    sub_4133f0
add     esp, 14h
test    eax, eax
jz      short loc_41324a
mov     ebp, [esi+4]
add     ebp, [esp+20h+var_c]
jmp     short loc_413221
mov     ebp, [esp+20h+var_10]
mov     eax, 1
test    eax, eax
jz      short loc_41324a
xor     eax, eax
mov     ax, [edi]
push    eax
push    edi
push    ebp
call    _memcpy
add     esp, 0ch
call    sub_413340
mov     [ebp+2], eax
mov     ebx, eax
mov     ax, [edi]
movzx   ecx, ax
mov     [ebp+ecx+0], ax
push    esi
call    sub_412f60
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
xor     ecx, ecx
mov     cx, [eax]
add     ecx, 2
add     [esp+arg_0], ecx
mov     eax, [esp+arg_0]
cmp     word ptr [eax], 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, [esp+arg_0]
retn
sub     [esp+arg_0], 2
mov     eax, [esp+arg_0]
movsx   ecx, word ptr [eax]
sub     [esp+arg_0], ecx
mov     eax, [esp+arg_0]
cmp     word ptr [eax], 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, [esp+arg_0]
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
xor     edi, edi
cmp     [esi], edi
jnz     short loc_4132e0
push    esi
call    sub_413360
add     esp, 4
test    eax, eax
jnz     short loc_4132e0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ebx, [esi+8]
add     ebx, [esp+0ch+arg_4]
cmp     word ptr [esi+0ch], 0
jz      short loc_4132f7
mov     eax, [esi]
push    eax
call    ds:globalunlock
push    2
mov     eax, [esi]
push    ebx
push    eax
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jz      short loc_413310
mov     edi, 1
mov     [esi], eax
cmp     word ptr [esi+0ch], 0
jz      short loc_413329
mov     eax, [esi]
push    eax
call    ds:globallock
mov     [esi+4], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     dword ptr [esi+4], 0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, dword_4ad2f0
mov     eax, ecx
inc     ecx
mov     dword_4ad2f0, ecx
retn
mov     eax, [esp+arg_0]
mov     dword_4ad2f0, eax
retn
push    esi
push    42h
mov     esi, [esp+8+arg_0]
push    4
mov     word ptr [esi+0ch], 0
mov     dword ptr [esi+8], 4
call    sub_45b8f0
add     esp, 8
mov     [esi], eax
pop     esi
retn
push    ebx
push    esi
push    edi
push    ebp
mov     di, [esp+10h+arg_4]
push    43h
movzx   ebx, di
mov     esi, [esp+14h+arg_0]
lea     ebp, [ebx+2]
push    ebp
push    esi
call    sub_4132c0
add     esp, 0ch
test    eax, eax
jz      short loc_4133e9
push    esi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_4133e9
mov     eax, [esi+8]
mov     ecx, [esi+4]
add     eax, ebp
mov     [esi+8], eax
lea     eax, [ecx+eax-2]
mov     word ptr [eax], 0
pop     ebp
mov     [eax-2], di
mov     eax, [esi+8]
mov     ecx, [esi+4]
pop     edi
sub     ecx, ebx
pop     esi
pop     ebx
lea     eax, [ecx+eax-4]
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
mov     edx, [eax]
mov     eax, [esp+arg_0]
mov     ecx, [eax+4]
mov     eax, [esp+arg_c]
sub     eax, edx
push    eax
lea     eax, [edx+ecx]
push    eax
movsx   eax, [esp+8+arg_8]
add     eax, ecx
add     eax, edx
push    eax
call    _memcpy
mov     ecx, [esp+0ch+arg_10]
add     esp, 0ch
mov     eax, 1
mov     dword ptr [ecx], 0
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
movsx   edi, [esp+0ch+arg_8]
mov     esi, [esp+0ch+arg_0]
lea     eax, [edi+ebx]
mov     edx, [esi+4]
mov     ecx, [esi+8]
sub     ecx, eax
add     eax, edx
push    ecx
add     edx, ebx
push    eax
push    edx
call    _memcpy
add     esp, 0ch
sub     [esi+8], edi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 1ch
push    ebx
push    esi
push    edi
push    ebp
push    42h
push    0c0h
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_413496
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
push    esi
call    ds:globallock
mov     edi, eax
mov     ecx, [esp+2ch+arg_0]
mov     eax, [ecx]
mov     [edi], eax
mov     edx, [ecx+4]
mov     [edi+4], edx
mov     edx, [esp+2ch+arg_4]
mov     ebx, [ecx+8]
mov     [edi+8], ebx
mov     eax, [ecx+0ch]
lea     ecx, [edi+10h]
mov     [edi+0ch], eax
mov     eax, [edx]
mov     [ecx], eax
mov     ebx, [edx+4]
mov     [ecx+4], ebx
mov     ebp, [edx+8]
mov     [ecx+8], ebp
mov     eax, [edx+0ch]
mov     edx, [esp+2ch+arg_c]
mov     [ecx+0ch], eax
xor     ebx, ebx
mov     cx, [esp+2ch+arg_8]
mov     [edi+86h], cx
mov     word ptr [edi+20h], 7000h
mov     word ptr [edi+6ch], 4
mov     word ptr [edi+68h], 0ffffh
mov     [edi+82h], edx
mov     [edi+62h], ebx
push    2
mov     dword ptr [edi+76h], 0ffffffh
mov     word ptr [edi+8ch], 1
push    ebx
mov     [edi+8eh], ebx
mov     [edi+92h], ebx
mov     [edi+96h], ebx
mov     [edi+9ah], ebx
call    sub_45b8f0
add     esp, 8
mov     [edi+22h], eax
mov     [edi+2ah], bx
lea     eax, [esp+2ch+var_1c]
push    0ah
mov     [eax], ebx
mov     [eax+4], ebx
mov     [eax+8], bx
lea     eax, [esp+30h+var_1c]
mov     word ptr [esp+30h+var_16], 2
push    eax
call    sub_45b910
add     esp, 8
mov     [edi+2ch], eax
mov     word ptr [edi+34h], 1
mov     word ptr [esp+2ch+var_1c], bx
movsx   ecx, word ptr [edi+4]
mov     [esp+2ch+var_12], ecx
mov     [esp+2ch+var_1c+2], ecx
movsx   eax, word ptr [edi]
mov     [esp+2ch+var_16], eax
lea     eax, [esp+2ch+var_1c]
lea     ecx, [esp+2ch+var_e]
mov     edx, [eax]
mov     [ecx], edx
push    1ch
mov     ebp, [eax+4]
mov     [ecx+4], ebp
mov     edx, [eax+8]
mov     [ecx+8], edx
mov     ax, [eax+0ch]
mov     [ecx+0ch], ax
lea     ecx, [esp+30h+var_1c]
push    ecx
call    sub_45b910
add     esp, 8
mov     [edi+36h], eax
mov     word ptr [edi+3eh], 1
push    2
push    ebx
call    sub_45b8f0
add     esp, 8
mov     [edi+40h], eax
mov     [edi+48h], bx
call    sub_4755f0
mov     [edi+4eh], eax
mov     [edi+52h], ebx
cmp     [edi+22h], ebx
jz      short loc_413600
cmp     [edi+2ch], ebx
jz      short loc_413600
cmp     [edi+36h], ebx
jz      short loc_413600
cmp     [edi+40h], ebx
jz      short loc_413600
cmp     [edi+4eh], ebx
jz      short loc_413600
push    esi
call    ds:globalunlock
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
push    esi
call    sub_413620
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
push    eax
mov     edi, eax
call    sub_414810
add     esp, 4
mov     eax, [edi+22h]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [edi+2ch]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [edi+36h]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [edi+40h]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [edi+4eh]
push    eax
call    sub_475600
add     esp, 4
push    esi
call    sub_419dc0
add     esp, 4
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
add     esp, 4
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     ax, [ecx+86h]
retn
push    esi
mov     esi, [esp+4+hmem]
push    esi
call    ds:globallock
mov     cx, [esp+4+arg_8]
mov     edx, [esp+4+src]
push    ecx
push    edx
push    eax
call    sub_4136d0
add     esp, 0ch
push    esi
call    ds:globalunlock
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
cmp     dword ptr [esi+92h], 0
mov     bx, [esi+4ah]
jz      short loc_4136f3
cmp     dword ptr [esi+5ah], 0
jz      short loc_4136f3
push    esi
call    sub_419760
add     esp, 4
mov     ax, [esi+2ah]
mov     di, [esp+0ch+arg_8]
movsx   ecx, ax
movsx   edx, di
add     edx, ecx
cmp     edx, 7ffeh
jle     short loc_413713
mov     di, 7ffeh
sub     di, ax
movsx   eax, di
mov     edx, [esp+0ch+src]
push    eax
movsx   eax, bx
push    edx
push    0
push    eax
push    ecx
mov     ecx, [esi+22h]
push    ecx
call    sub_489000
add     esp, 18h
cmp     eax, 0ffffffffh
jz      short loc_413786
push    esi
call    sub_415000
add     esp, 4
push    edi
push    esi
call    sub_413c70
add     esp, 8
push    edi
push    ebx
push    esi
call    sub_413790
add     esp, 0ch
push    esi
call    sub_415050
mov     ax, [esi+4ah]
add     esp, 4
mov     dword ptr [esi+52h], 0
add     ax, di
mov     [esi+4ah], ax
add     [esi+2ah], di
mov     [esi+4ch], ax
mov     eax, [esi+92h]
test    eax, eax
jz      short loc_413786
mov     dword ptr [eax+10h], 1
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
push    esi
call    sub_415000
mov     cx, [esp+14h+arg_4]
add     esp, 4
test    cx, cx
jz      short loc_4137bf
mov     eax, [esi+22h]
movsx   edx, cx
mov     ebx, [eax]
cmp     byte ptr [ebx+edx-1], 0dh
mov     ebx, 0
jnz     short loc_4137c4
mov     ebx, 1
cmp     [esi+2ah], cx
jnz     short loc_4137d1
test    cx, cx
jle     short loc_4137d1
xor     ebx, ebx
xor     dx, dx
mov     ebp, [esi+44h]
mov     di, [esp+10h+arg_8]
cmp     [esi+48h], dx
jle     short loc_41382d
mov     ax, [ebp+0]
test    ebx, ebx
jz      short loc_413801
cmp     cx, ax
jge     short loc_4137f6
add     ax, di
mov     [ebp+0], ax
mov     ax, [ebp+2]
cmp     cx, ax
jge     short loc_413822
jmp     short loc_41381b
cmp     cx, ax
jg      short loc_413812
test    ax, ax
jz      short loc_413812
add     ax, di
mov     [ebp+0], ax
mov     ax, [ebp+2]
cmp     cx, ax
jg      short loc_413822
add     ax, di
mov     [ebp+2], ax
inc     dx
add     ebp, 0ah
cmp     [esi+48h], dx
jg      short loc_4137e2
movsx   eax, word ptr [esi+34h]
mov     edx, [esi+30h]
lea     ebp, [eax+eax*4]
lea     edx, [edx+ebp*2-0ah]
cmp     [edx], cx
jle     short loc_41384b
add     [edx], di
sub     edx, 0ah
cmp     [edx], cx
jg      short loc_413840
test    ebx, ebx
jnz     short loc_41385d
mov     ax, [edx]
cmp     cx, ax
jnz     short loc_41385d
add     ax, di
mov     [edx], ax
push    esi
call    sub_415050
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
push    esi
call    sub_415000
mov     di, [esi+48h]
add     esp, 4
test    di, di
mov     ebx, [esi+44h]
jle     short loc_413901
mov     cx, [esp+10h+arg_4]
mov     dx, [esp+10h+arg_8]
mov     ax, [ebx]
cmp     ax, cx
jl      short loc_4138a5
add     ax, dx
mov     [ebx], ax
mov     ax, [ebx+2]
cmp     ax, cx
jle     short loc_4138b5
add     ax, dx
mov     [ebx+2], ax
cmp     byte ptr [ebx+8], 1
jnz     short loc_4138fa
cmp     [ebx], cx
jge     short loc_4138fa
cmp     [ebx+2], cx
jle     short loc_4138fa
mov     ax, [esi+48h]
movsx   ebp, ax
inc     ax
lea     ebp, [ebp+ebp*4+0]
mov     [esi+48h], ax
add     ebp, ebp
add     ebp, [esi+44h]
mov     eax, [ebx]
mov     [ebp+0], eax
mov     eax, [ebx+4]
mov     [ebp+4], eax
mov     ax, [ebx+8]
mov     [ebp+8], ax
lea     eax, [ecx+edx]
mov     [ebp+0], ax
mov     [ebx+2], cx
add     ebx, 0ah
dec     di
jnz     short loc_413897
push    esi
call    sub_415050
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+hmem]
push    esi
call    ds:globallock
push    eax
call    sub_413930
add     esp, 4
push    esi
call    ds:globalunlock
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     ax, [esi+4ah]
mov     di, [esi+4ch]
sub     di, ax
test    di, di
jle     loc_413a41
movsx   ecx, di
movsx   eax, ax
movsx   edx, word ptr [esi+2ah]
push    0
push    0
push    ecx
push    eax
push    edx
mov     ecx, [esi+22h]
push    ecx
call    sub_489000
mov     cx, [esi+4ah]
add     esp, 18h
sub     [esi+2ah], di
push    esi
mov     [esi+4ch], cx
call    sub_415000
mov     ax, di
add     esp, 4
neg     ax
push    eax
push    esi
call    sub_413c70
mov     ax, [esi+48h]
add     esp, 8
test    ax, ax
jz      short loc_4139dd
mov     cx, [esi+4ah]
mov     ebx, [esi+44h]
mov     dx, 0
jle     short loc_4139dd
mov     ax, [ebx]
cmp     cx, ax
jge     short loc_4139b9
sub     ax, di
mov     [ebx], ax
cmp     cx, ax
jle     short loc_4139b9
mov     [ebx], cx
mov     ax, [ebx+2]
cmp     cx, ax
jge     short loc_4139d2
sub     ax, di
mov     [ebx+2], ax
cmp     cx, ax
jle     short loc_4139d2
mov     [ebx+2], cx
inc     dx
add     ebx, 0ah
cmp     [esi+48h], dx
jg      short loc_4139a3
movsx   eax, word ptr [esi+34h]
mov     ecx, [esi+30h]
lea     ebx, [eax+eax*4]
mov     ax, [esi+4ah]
lea     edx, [ecx+ebx*2-0ah]
cmp     [edx], ax
jle     short loc_413a15
mov     cx, [edx]
sub     cx, di
mov     [edx], cx
mov     ax, [esi+4ah]
cmp     ax, cx
jle     short loc_413a09
mov     [edx], ax
mov     ax, [esi+4ah]
sub     edx, 0ah
cmp     [edx], ax
jg      short loc_4139f4
cmp     dword ptr [esi+0bch], 0
jnz     short loc_413a27
push    esi
call    sub_4150a0
add     esp, 4
push    esi
call    sub_415050
add     esp, 4
mov     eax, [esi+92h]
test    eax, eax
jz      short loc_413a41
mov     dword ptr [eax+10h], 1
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+hmem]
push    edi
call    ds:globallock
mov     ebx, [eax+82h]
mov     esi, eax
push    ebx
call    sub_474d50
add     esp, 4
mov     [esi+56h], eax
push    esi
call    sub_413930
mov     ax, [esp+10h+arg_8]
add     esp, 4
test    ax, ax
jz      short loc_413a94
push    eax
mov     eax, [esp+10h+src]
push    eax
push    esi
call    sub_4136d0
add     esp, 0ch
mov     eax, [esi+56h]
push    eax
push    ebx
call    __beep_0
add     esp, 8
mov     dword ptr [esi+56h], 0
push    edi
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
retn
mov     edx, [esp+lpstring]
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
push    edx
call    ds:lstrlena
cmp     ax, 1
mov     ebp, ds:globallock
sbb     edi, edi
neg     edi
mov     bx, ax
mov     eax, [esp+20h+hmem]
push    eax
call    ebp
mov     esi, eax
test    edi, edi
jz      short loc_413afc
mov     [esp+20h+lpstring], offset asc_4ad308
mov     bx, 1
mov     bp, [esp+20h+arg_c]
push    edi
mov     di, [esp+24h+arg_8]
push    ebp
push    edi
push    esi
call    sub_415460
mov     ax, [esi+2ah]
add     esp, 10h
movsx   ecx, ax
movsx   edx, bx
add     edx, ecx
cmp     edx, 7ffeh
jle     short loc_413b2d
mov     bx, 7ffeh
sub     bx, ax
movsx   edx, bx
push    edx
mov     edx, [esp+24h+lpstring]
push    edx
movsx   eax, di
movsx   edx, bp
sub     edx, eax
push    edx
push    eax
push    ecx
mov     eax, [esi+22h]
push    eax
call    sub_489000
add     esp, 18h
cmp     eax, 0ffffffffh
jnz     short loc_413b65
mov     eax, [esp+20h+hmem]
push    eax
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     bx, bp
push    esi
add     bx, di
call    sub_415000
add     [esi+2ah], bx
add     esp, 4
mov     ax, [esi+4ah]
cmp     ax, di
jle     short loc_413b91
add     ax, bx
mov     [esi+4ah], ax
cmp     ax, di
jge     short loc_413b91
mov     [esi+4ah], di
mov     ax, [esi+4ch]
cmp     ax, di
jle     short loc_413bae
lea     ecx, [eax+ebx]
mov     [esi+4ch], cx
mov     ax, [esi+4ah]
cmp     ax, cx
jle     short loc_413bae
mov     [esi+4ch], ax
movsx   eax, word ptr [esi+48h]
mov     ecx, [esi+44h]
lea     edx, [eax+eax*4]
lea     eax, [ecx+edx*2]
cmp     eax, ecx
jbe     short loc_413be4
mov     dx, [ecx]
cmp     dx, bp
jl      short loc_413bcd
add     dx, bx
mov     [ecx], dx
mov     dx, [ecx+2]
cmp     dx, bp
jl      short loc_413bdd
add     dx, bx
mov     [ecx+2], dx
add     ecx, 0ah
cmp     eax, ecx
ja      short loc_413bbf
push    ebp
push    esi
call    sub_416d20
movsx   ecx, ax
movsx   edx, word ptr [esi+34h]
add     esp, 8
lea     ecx, [ecx+ecx*4]
add     ecx, ecx
lea     edx, [edx+edx*4]
add     ecx, [esi+30h]
add     edx, edx
add     edx, [esi+30h]
cmp     edx, ecx
jbe     short loc_413c1e
mov     ax, [ecx]
cmp     ax, bp
jl      short loc_413c17
add     ax, bx
mov     [ecx], ax
add     ecx, 0ah
cmp     edx, ecx
ja      short loc_413c09
cmp     word ptr [esi+68h], 0fffdh
jnz     short loc_413c37
lea     eax, [esp+20h+var_10]
push    0
push    1
push    eax
push    esi
call    sub_417620
add     esp, 10h
push    esi
call    sub_415050
mov     eax, [esp+24h+hmem]
add     esp, 4
push    eax
call    ds:globalunlock
test    di, di
jle     short loc_413c52
dec     di
cmp     [esi+68h], di
jle     short loc_413c5c
mov     [esi+68h], di
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
mov     cx, [eax+4ah]
cmp     [eax+68h], cx
jle     short locret_413c82
mov     [eax+68h], cx
retn
cmp     [esp+src], 20h
push    esi
push    edi
jb      short loc_413ca0
cmp     [esp+8+src], 7fh
jnz     short loc_413cb3
cmp     [esp+8+src], 9
jz      short loc_413cb3
cmp     [esp+8+src], 0dh
jz      short loc_413cb3
xor     eax, eax
pop     edi
pop     esi
retn
push    0
call    ds:setcursor
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
mov     edi, eax
mov     eax, [esp+8+arg_4]
mov     [edi+56h], eax
mov     dword ptr [edi+62h], 0
mov     cx, [edi+4ch]
cmp     [edi+4ah], cx
jz      short loc_413ce9
push    edi
call    sub_413930
add     esp, 4
lea     eax, [esp+8+src]
push    1
push    eax
push    edi
call    sub_4136d0
add     esp, 0ch
mov     dword ptr [edi+56h], 0
push    esi
call    ds:globalunlock
mov     eax, [edi+92h]
test    eax, eax
jz      short loc_413d18
mov     dword ptr [eax+10h], 1
mov     eax, 1
pop     edi
pop     esi
retn
mov     edx, [esp+arg_0]
mov     ax, [edx+4ah]
mov     cx, [edx+6eh]
cmp     ax, cx
jnz     short loc_413d35
mov     ax, cx
retn
mov     cx, [edx+70h]
cmp     [edx+4ch], cx
jnz     short locret_413d42
mov     ax, cx
retn
sub     esp, 18h
push    ebx
push    esi
mov     bx, [esp+20h+arg_4]
push    edi
mov     di, bx
push    ebp
mov     esi, [esp+28h+arg_0]
push    esi
call    sub_415000
mov     eax, [esp+2ch+arg_8]
add     esp, 4
sub     eax, 10021h
cmp     eax, 7
ja      def_413d7e
jmp     ds:jpt_413d7e[eax*4]
mov     ax, [esi+4ah]
mov     cx, [esi+4ch]
mov     bx, [esi+6eh]
mov     bp, [esi+70h]
mov     word ptr [esp+28h+var_10], ax
mov     eax, [esp+28h+arg_8]
mov     word ptr [esp+28h+var_18], cx
sub     eax, 10021h
cmp     eax, 1
sbb     eax, eax
and     eax, 0fffffffeh
inc     eax
push    eax
push    esi
call    sub_41a190
mov     cx, word ptr [esp+30h+var_10]
add     esp, 8
mov     di, [esi+4ah]
mov     ax, word ptr [esp+28h+var_18]
mov     [esi+4ah], cx
mov     [esi+4ch], ax
mov     [esi+6eh], bx
mov     [esi+70h], bp
jmp     def_413d7e
cmp     [esp+28h+arg_c], 0
jz      short loc_413dee
mov     di, 7fffh
jmp     def_413d7e
push    ebx
push    esi
call    sub_4196c0
mov     di, ax
add     esp, 8
push    esi
call    sub_415000
movsx   edx, di
add     esp, 4
mov     eax, [esi+3ah]
lea     ecx, ds:0[edx*8]
sub     ecx, edx
mov     di, [eax+ecx*2+0eh]
movsx   eax, word ptr [esi+3eh]
dec     di
dec     eax
cmp     eax, edx
jg      short loc_413e27
mov     di, [esi+2ah]
push    esi
call    sub_415050
add     esp, 4
jmp     def_413d7e
cmp     [esp+28h+arg_c], 0
jz      short loc_413e44
xor     di, di
jmp     def_413d7e
push    ebx
push    esi
call    sub_4196c0
mov     di, ax
add     esp, 8
push    esi
call    sub_415000
movsx   ecx, di
add     esp, 4
mov     eax, ecx
shl     ecx, 3
push    esi
sub     ecx, eax
mov     eax, [esi+3ah]
mov     di, [eax+ecx*2]
call    sub_415050
add     esp, 4
jmp     def_413d7e
mov     di, 0
cmp     bx, 1
jle     short loc_413e86
lea     edi, [ebx-1]
cmp     [esp+28h+arg_c], 0
jz      def_413d7e
test    di, di
jle     short loc_413eb4
mov     eax, [esi+26h]
movsx   ecx, di
cmp     byte ptr [ecx+eax], 20h
jg      short loc_413eb4
cmp     di, 1
jle     short loc_413eac
dec     di
jmp     short loc_413eaf
xor     di, di
test    di, di
jg      short loc_413e99
push    1
push    1
push    edi
push    esi
call    sub_4144c0
mov     di, ax
add     esp, 10h
jmp     def_413d7e
push    ebx
push    esi
call    sub_4196c0
mov     di, ax
add     esp, 8
cmp     [esp+28h+arg_8], 10028h
jnz     short loc_413ef1
movsx   eax, word ptr [esi+3eh]
movsx   ecx, di
dec     eax
cmp     eax, ecx
jle     short loc_413ef8
inc     di
jmp     short loc_413ef8
test    di, di
jle     short loc_413ef8
dec     di
movsx   edi, di
push    esi
call    sub_415000
add     esp, 4
mov     eax, edi
shl     edi, 3
mov     ebp, [esi+3ah]
sub     edi, eax
push    0
lea     eax, [esp+2ch+var_10]
push    eax
push    ebx
push    esi
call    sub_415fb0
mov     eax, [esp+38h+var_10]
add     esp, 10h
mov     ecx, [ebp+edi*2+2]
push    esi
mov     [esp+2ch+var_18], eax
mov     [esp+2ch+var_14], ecx
call    sub_415050
mov     edx, [esp+2ch+var_18]
mov     ecx, [esp+2ch+var_14]
add     esp, 4
push    0
push    1
push    ecx
push    edx
push    esi
call    sub_415d60
mov     di, ax
add     esp, 14h
jmp     short def_413d7e
mov     eax, [esp+28h+arg_c]
test    eax, eax
jz      short loc_413f61
movsx   edi, bx
jmp     short loc_413f65
movsx   edi, word ptr [esi+4ch]
inc     di
test    eax, eax
jz      short def_413d7e
push    1
push    0
push    edi
push    esi
call    sub_4144c0
add     esp, 10h
push    1
push    0
push    eax
push    esi
call    sub_4144c0
add     esp, 10h
push    1
push    1
push    eax
push    esi
call    sub_4144c0
mov     di, ax
add     esp, 10h
cmp     di, bx
jnz     short def_413d7e
mov     di, [esi+2ah]
push    esi
call    sub_415050
mov     ax, di
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    esi
call    sub_413d20
mov     di, ax
add     esp, 4
mov     ax, [esi+4ah]
mov     cx, [esi+4ch]
mov     word ptr [esp+10h+var_4], ax
mov     word ptr [esp+10h+var_4+2], cx
mov     ecx, [esp+10h+arg_4]
cmp     ecx, 10027h
jz      short loc_414030
cmp     ecx, 10028h
jz      short loc_414030
cmp     ecx, 10022h
jz      short loc_414030
mov     ax, 0ffffh
cmp     ecx, 10023h
jnz     short loc_414034
mov     ax, 1
test    ax, ax
jle     short loc_41404a
cmp     word ptr [esp+10h+var_4], di
lea     ebx, [esp+10h+var_4+2]
jz      short loc_414059
lea     ebx, [esp+10h+var_4]
jmp     short loc_414059
cmp     word ptr [esp+10h+var_4+2], di
lea     ebx, [esp+10h+var_4]
jz      short loc_414059
lea     ebx, [esp+10h+var_4+2]
mov     eax, [esp+10h+arg_8]
push    eax
push    ecx
mov     cx, [ebx]
push    ecx
push    esi
call    sub_413d50
mov     [ebx], ax
add     esp, 10h
mov     cx, word ptr [esp+10h+var_4]
cmp     word ptr [esp+10h+var_4+2], cx
jge     short loc_4140a7
mov     dx, cx
mov     ax, word ptr [esp+10h+var_4+2]
sub     ax, di
mov     cx, word ptr [esp+10h+var_4+2]
cmp     ax, 1
sbb     eax, eax
neg     eax
mov     word ptr [esp+10h+var_4], cx
test    eax, eax
mov     word ptr [esp+10h+var_4+2], dx
mov     edi, [esp+10h+var_4]
jnz     short loc_4140a7
mov     edi, edx
mov     [esi+6eh], di
push    esi
mov     [esi+70h], di
call    sub_419890
add     esp, 4
test    eax, eax
jz      short loc_4140d3
mov     ax, [ebx]
push    eax
push    esi
call    sub_4196c0
add     esp, 8
push    eax
push    esi
call    sub_41a040
add     esp, 8
mov     eax, [esp+10h+var_4+2]
mov     ecx, [esp+10h+var_4]
push    eax
push    ecx
push    esi
call    sub_4146e0
mov     [esi+6eh], di
add     esp, 0ch
mov     [esi+70h], di
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_c]
push    esi
mov     ecx, [esp+4+arg_4]
push    eax
mov     esi, [esp+8+arg_0]
push    ecx
cmp     [esp+0ch+arg_8], 0
jz      short loc_414121
push    esi
call    sub_413fe0
add     esp, 0ch
pop     esi
retn
mov     ax, [esi+4ah]
push    eax
push    esi
call    sub_413d50
add     esp, 10h
push    eax
push    eax
push    esi
call    sub_4146e0
add     esp, 0ch
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_8]
push    edi
push    ebp
mov     ebx, esi
and     ebx, 1ffffh
test    esi, 10000h
jnz     short loc_414171
mov     eax, esi
and     eax, 0ffffh
cmp     eax, 20h
jb      short loc_414171
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+14h+hmem]
mov     ebp, ds:globallock
push    eax
xor     edi, edi
call    ebp
mov     ebp, eax
mov     eax, [esp+14h+arg_4]
mov     [esp+14h+var_4], 1
mov     [ebp+56h], eax
mov     eax, esi
and     eax, 20000h
and     esi, 40000h
shr     eax, 11h
mov     [ebp+62h], edi
shr     esi, 12h
test    eax, eax
jz      short loc_4141bd
mov     cx, [ebp+4ah]
cmp     [ebp+4ch], cx
jnz     short loc_4141bd
mov     [ebp+6eh], cx
mov     [ebp+70h], cx
cmp     ebx, 10028h
ja      short loc_4141d8
cmp     ebx, 10021h
jnb     loc_414283
cmp     ebx, 8
jz      short loc_4141ed
jmp     short loc_4141e0
cmp     ebx, 1002eh
jz      short loc_4141ed
mov     [esp+14h+var_4], 0
jmp     loc_41428f
mov     ax, [ebp+4ch]
cmp     [ebp+4ah], ax
jnz     short loc_414239
push    ebp
call    sub_415000
mov     ax, [ebp+4ah]
add     esp, 4
cmp     ebx, 8
jnz     short loc_414224
test    ax, ax
jle     short loc_414230
cmp     ax, 1
jle     short loc_41421c
dec     ax
mov     [ebp+4ah], ax
jmp     short loc_414230
mov     word ptr [ebp+4ah], 0
jmp     short loc_414230
cmp     [ebp+2ah], ax
jle     short loc_414230
inc     ax
mov     [ebp+4ch], ax
push    ebp
call    sub_415050
add     esp, 4
mov     ax, [ebp+4ah]
cmp     [ebp+4ch], ax
jz      short loc_414279
cmp     dword ptr [ebp+92h], 0
jz      short loc_414260
push    eax
push    ebp
call    sub_4196c0
add     esp, 8
push    eax
push    ebp
call    sub_41a040
add     esp, 8
push    ebp
mov     edi, 1
call    sub_413930
add     esp, 4
push    ebp
call    sub_414840
add     esp, 4
jmp     short loc_41428f
mov     [esp+14h+var_4], 0
jmp     short loc_41428f
push    esi
push    eax
push    ebx
push    ebp
call    sub_414100
add     esp, 10h
cmp     dword ptr [ebp+92h], 0
jz      short loc_4142a1
push    ebp
call    sub_419760
add     esp, 4
mov     dword ptr [ebp+56h], 0
mov     eax, [esp+14h+hmem]
push    eax
call    ds:globalunlock
cmp     [esp+14h+var_4], 0
jz      short loc_4142c2
push    0
call    ds:setcursor
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+hmem]
push    edi
push    ebp
push    esi
call    ds:globallock
mov     edi, eax
mov     ebp, [esp+14h+arg_14]
mov     eax, [esp+14h+arg_4]
push    0
mov     edx, [esp+18h+arg_8]
push    1
mov     ecx, [esp+1ch+arg_c]
mov     [edi+56h], eax
push    ecx
mov     [edi+72h], ebp
push    edx
push    edi
call    sub_415d60
mov     bx, ax
add     esp, 14h
cmp     [esp+14h+arg_10], 0
jnz     short loc_414357
test    ebp, ebp
jz      short loc_414340
push    1
push    1
push    ebx
lea     ebp, [edi+70h]
push    edi
call    sub_4144c0
mov     [edi+6eh], ax
add     esp, 10h
push    1
push    0
push    ebx
push    edi
call    sub_4144c0
mov     [ebp+0], ax
add     esp, 10h
jmp     short loc_41434b
lea     ebp, [edi+70h]
mov     [ebp+0], bx
mov     [edi+6eh], bx
mov     ax, [ebp+0]
mov     cx, [edi+6eh]
push    eax
push    ecx
jmp     short loc_4143be
movsx   eax, word ptr [edi+4ah]
movsx   ecx, word ptr [edi+4ch]
add     eax, ecx
cdq
sub     eax, edx
movsx   edx, bx
sar     eax, 1
cmp     eax, edx
jl      short loc_414397
test    ebp, ebp
jz      short loc_414383
push    1
push    1
push    ebx
push    edi
call    sub_4144c0
mov     bx, ax
add     esp, 10h
mov     ax, [edi+4ch]
mov     [edi+70h], ax
mov     [edi+6eh], ax
mov     ax, [edi+4ch]
push    eax
push    ebx
jmp     short loc_4143be
test    ebp, ebp
jz      short loc_4143ac
push    1
push    0
push    ebx
push    edi
call    sub_4144c0
mov     bx, ax
add     esp, 10h
mov     ax, [edi+4ah]
push    ebx
mov     [edi+70h], ax
mov     [edi+6eh], ax
mov     ax, [edi+4ah]
push    eax
push    edi
call    sub_4146e0
add     esp, 0ch
mov     dword ptr [edi+56h], 0
push    esi
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+hmem]
push    edi
test    esi, esi
jz      loc_4144af
push    esi
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      loc_4144af
mov     eax, [esp+0ch+arg_4]
push    0
mov     edx, [esp+10h+arg_8]
push    1
mov     ecx, [esp+14h+arg_c]
mov     [edi+56h], eax
push    ecx
push    edx
push    edi
call    sub_415d60
mov     bx, ax
add     esp, 14h
push    edi
call    sub_419890
add     esp, 4
test    eax, eax
jz      short loc_414442
push    ebx
push    edi
call    sub_4196c0
add     esp, 8
push    eax
push    edi
call    sub_41a040
add     esp, 8
cmp     dword ptr [edi+72h], 0
jz      short loc_41447e
cmp     [edi+6eh], bx
push    1
mov     eax, 1
jg      short loc_414457
xor     eax, eax
push    eax
push    ebx
push    edi
call    sub_4144c0
mov     cx, [edi+70h]
add     esp, 10h
cmp     cx, ax
jg      short loc_41446e
mov     cx, ax
push    ecx
mov     cx, [edi+6eh]
cmp     cx, ax
jl      short loc_41447b
mov     cx, ax
push    ecx
jmp     short loc_414498
mov     ax, [edi+70h]
cmp     ax, bx
jg      short loc_41448a
mov     ax, bx
push    eax
mov     ax, [edi+6eh]
cmp     ax, bx
jl      short loc_414497
mov     ax, bx
push    eax
push    edi
call    sub_4146e0
add     esp, 0ch
mov     dword ptr [edi+56h], 0
push    esi
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_415000
mov     si, [esp+14h+arg_4]
mov     eax, [esp+14h+arg_0]
mov     bp, [eax+2ah]
add     esp, 4
mov     ebx, [eax+26h]
cmp     [esp+10h+arg_8], 0
jz      loc_4145c6
cmp     si, bp
mov     edi, [esp+10h+arg_c]
jge     short loc_414572
movsx   eax, si
test    edi, edi
lea     ebp, [eax+ebx]
jz      short loc_41450e
mov     cl, 20h
mov     eax, 1
cmp     cl, [ebp+0]
adc     eax, 0ffffffffh
jmp     short loc_414528
cmp     byte ptr [ebp+0], 20h
jbe     short loc_414526
push    ebp
call    sub_45b810
add     esp, 4
test    eax, eax
mov     eax, 1
jz      short loc_414528
xor     eax, eax
test    eax, eax
jnz     short loc_414572
test    si, si
jle     loc_414654
test    edi, edi
jz      short loc_414548
mov     al, 20h
cmp     al, [ebp-1]
mov     eax, 1
adc     eax, 0ffffffffh
jmp     short loc_414563
dec     ebp
cmp     byte ptr [ebp+0], 20h
jbe     short loc_414561
push    ebp
call    sub_45b810
add     esp, 4
test    eax, eax
mov     eax, 1
jz      short loc_414563
xor     eax, eax
test    eax, eax
jnz     loc_414654
dec     si
jmp     loc_414654
test    si, si
jle     loc_414654
test    edi, edi
jz      short loc_414592
movsx   ecx, si
mov     al, 20h
cmp     al, [ecx+ebx-1]
mov     eax, 1
adc     eax, 0ffffffffh
jmp     short loc_4145b2
movsx   eax, si
lea     eax, [eax+ebx-1]
cmp     byte ptr [eax], 20h
jbe     short loc_4145b0
push    eax
call    sub_45b810
add     esp, 4
test    eax, eax
mov     eax, 1
jz      short loc_4145b2
xor     eax, eax
test    eax, eax
jz      loc_414654
dec     si
test    si, si
jg      short loc_41457b
jmp     loc_414654
cmp     si, bp
mov     edi, [esp+10h+arg_c]
jge     short loc_414610
test    edi, edi
jz      short loc_4145e5
movsx   ecx, si
mov     al, 20h
cmp     al, [ecx+ebx]
mov     eax, 1
adc     eax, 0ffffffffh
jmp     short loc_414603
movsx   eax, si
add     eax, ebx
cmp     byte ptr [eax], 20h
jbe     short loc_414601
push    eax
call    sub_45b810
add     esp, 4
test    eax, eax
mov     eax, 1
jz      short loc_414603
xor     eax, eax
test    eax, eax
jnz     short loc_414610
cmp     si, bp
jge     short loc_414654
inc     si
jmp     short loc_414654
cmp     si, bp
jge     short loc_414654
test    edi, edi
jz      short loc_41462b
movsx   ecx, si
mov     al, 20h
cmp     al, [ecx+ebx]
mov     eax, 1
adc     eax, 0ffffffffh
jmp     short loc_414649
movsx   eax, si
add     eax, ebx
cmp     byte ptr [eax], 20h
jbe     short loc_414647
push    eax
call    sub_45b810
add     esp, 4
test    eax, eax
mov     eax, 1
jz      short loc_414649
xor     eax, eax
test    eax, eax
jz      short loc_414654
inc     si
cmp     si, bp
jl      short loc_414615
mov     eax, [esp+10h+arg_0]
push    eax
call    sub_415050
mov     ax, si
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     si, [esp+8+arg_8]
push    edi
mov     ebx, [esp+0ch+hmem]
push    ebp
mov     ecx, [ebx]
cmp     dword ptr [ecx+5ah], 0
jnz     short loc_4146a8
mov     di, [esp+10h+arg_c]
test    si, si
jnz     short loc_4146ad
cmp     [ecx+2ah], di
jg      short loc_4146ad
mov     word ptr [ecx+4ah], 0
mov     ax, [ecx+2ah]
pop     ebp
mov     [ecx+4ch], ax
pop     edi
pop     esi
pop     ebx
retn
mov     di, [esp+10h+arg_c]
push    ebx
call    ds:globallock
mov     ebp, eax
push    edi
mov     eax, [esp+14h+arg_4]
push    esi
push    ebp
mov     [ebp+56h], eax
call    sub_4146e0
add     esp, 0ch
mov     dword ptr [ebp+56h], 0
push    ebx
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
cmp     dword ptr [esi+5ah], 0
jz      short loc_4146ff
lea     eax, [esp+14h+var_4]
push    eax
push    esi
call    sub_415c50
add     esp, 8
mov     di, [esp+14h+arg_4]
test    di, di
jg      short loc_41470c
xor     di, di
mov     cx, [esi+2ah]
cmp     di, cx
jl      short loc_414718
mov     di, cx
mov     bx, di
mov     ax, [esp+14h+arg_8]
cmp     bx, ax
jg      short loc_414728
mov     bx, ax
cmp     bx, cx
jl      short loc_414730
mov     bx, cx
mov     bp, [esi+4ah]
cmp     bp, cx
jl      short loc_41473c
mov     bp, cx
mov     ax, [esi+4ch]
cmp     ax, cx
jl      short loc_414748
mov     ax, cx
cmp     dword ptr [esi+5ah], 0
jz      short loc_4147ac
cmp     ax, bp
jz      short loc_41479a
cmp     di, bx
jz      short loc_414788
cmp     bp, di
jg      short loc_414762
cmp     ax, di
jge     short loc_41476c
cmp     bp, bx
jg      short loc_414788
cmp     ax, bx
jl      short loc_414788
cmp     ax, bx
jz      short loc_41477e
push    0
push    eax
push    ebx
push    esi
call    sub_414990
add     esp, 10h
cmp     bp, di
jz      short loc_4147ac
push    3
push    ebp
jmp     short loc_4147a2
cmp     ax, bp
jz      short loc_41479a
push    1
push    eax
push    ebp
push    esi
call    sub_414990
add     esp, 10h
cmp     di, bx
jz      short loc_4147ac
push    1
push    ebx
push    edi
push    esi
call    sub_414990
add     esp, 10h
mov     [esi+4ah], di
cmp     dword ptr [esi+5ah], 0
mov     [esi+4ch], bx
jz      short loc_4147d1
push    esi
call    sub_414840
lea     eax, [esp+18h+var_4]
add     esp, 4
push    eax
push    esi
call    sub_415cc0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
push    edi
mov     edi, [esp+8+hmem]
push    edi
call    ds:globallock
push    eax
mov     esi, eax
mov     eax, [esp+0ch+arg_4]
mov     [esi+56h], eax
call    sub_414840
add     esp, 4
mov     dword ptr [esi+56h], 0
push    edi
call    ds:globalunlock
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+5eh], 0
jz      short loc_414832
call    ds:destroycaret
mov     ds:hwnd, 0
mov     dword ptr [esi+5eh], 0
pop     esi
retn
sub     esp, 28h
lea     edx, [esp+28h+rcsrc2]
push    esi
mov     esi, [esp+2ch+arg_0]
lea     ecx, [esi+10h]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
push    esi
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
call    sub_41a480
add     esp, 4
test    eax, eax
jz      loc_41494b
push    esi
call    sub_419f10
add     [esp+30h+rcsrc2.bottom], eax
add     esp, 4
cmp     dword ptr [esi+5eh], 0
jz      short loc_414899
call    ds:destroycaret
mov     ds:hwnd, 0
cmp     dword ptr [esi+5ah], 0
jz      short loc_4148b0
mov     dword ptr [esi+5eh], 1
mov     ax, [esi+4ch]
cmp     [esi+4ah], ax
jz      short loc_4148b7
mov     dword ptr [esi+5eh], 0
cmp     dword ptr [esi+5eh], 0
jz      loc_41494b
mov     cx, [esi+4ah]
push    0
lea     eax, [esp+30h+rcdst]
push    eax
push    ecx
push    esi
call    sub_415fb0
lea     ecx, [esp+3ch+rcsrc2]
lea     edx, [esp+3ch+rcdst]
add     esp, 10h
push    ecx
push    edx
lea     edx, [esp+34h+rcdst]
push    edx
call    ds:intersectrect
mov     [esi+5eh], eax
test    eax, eax
jz      short loc_41494b
mov     eax, [esi+56h]
push    eax
call    sub_4535a0
mov     [esp+30h+x], eax
add     esp, 4
mov     eax, edx
lea     ecx, [esp+2ch+rcdst]
neg     eax
push    eax
mov     eax, [esp+30h+x]
neg     eax
push    eax
push    ecx
call    ds:offsetrect
mov     ecx, [esp+2ch+rcdst.left]
mov     edx, [esp+2ch+rcdst.top]
mov     eax, [esp+2ch+rcdst.bottom]
mov     [esp+2ch+x], ecx
sub     eax, edx
mov     [esp+2ch+y], edx
mov     edx, [esp+2ch+x]
push    eax
mov     ecx, [esp+30h+y]
push    1
push    ecx
mov     eax, [esi+82h]
push    edx
push    eax
call    sub_408a80
add     esp, 14h
pop     esi
add     esp, 28h
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
mov     cx, [esp+8+arg_c]
mov     edi, eax
mov     dx, [esp+8+arg_8]
mov     eax, [esp+8+arg_4]
push    1
mov     [edi+56h], eax
push    ecx
push    edx
push    edi
call    sub_414990
add     esp, 10h
mov     dword ptr [edi+56h], 0
push    esi
call    ds:globalunlock
pop     edi
pop     esi
retn
sub     esp, 48h
push    ebx
push    esi
mov     bx, [esp+50h+arg_4]
push    edi
mov     di, [esp+54h+arg_8]
push    ebp
cmp     di, bx
jz      loc_414a9b
mov     esi, [esp+58h+arg_0]
lea     ecx, [esp+58h+rect]
push    ecx
push    esi
mov     eax, [esi+62h]
mov     dword ptr [esi+62h], 0
mov     [esp+60h+var_44], eax
call    sub_415b50
mov     [esp+60h+var_48], eax
add     esp, 8
cmp     di, bx
jge     short loc_4149dc
mov     ax, bx
mov     bx, di
mov     di, ax
mov     ebp, [esp+58h+arg_c]
lea     ecx, [esp+58h+rc]
mov     eax, ebp
and     eax, 1
and     ebp, 2
push    eax
push    ecx
push    ebx
push    esi
call    sub_415fb0
lea     eax, [esp+68h+var_40]
add     esp, 10h
push    ebp
push    eax
push    edi
push    esi
call    sub_415fb0
mov     eax, [esp+68h+var_40.top]
add     esp, 10h
cmp     [esp+58h+rc.top], eax
jnz     short loc_414a2b
mov     eax, [esp+58h+var_40.left]
lea     ecx, [esp+58h+rc]
push    ecx
mov     edx, [esi+56h]
mov     [esp+5ch+rc.right], eax
push    edx
call    ds:invertrect
jmp     short loc_414a7f
mov     eax, [esp+58h+rc.bottom]
mov     ecx, [esp+58h+var_40.top]
mov     edx, [esp+58h+var_40.left]
mov     [esp+58h+var_20.top], eax
mov     eax, [esi]
mov     [esp+58h+var_20.bottom], ecx
mov     ecx, [esi+8]
mov     [esp+58h+var_40.right], edx
mov     edx, [esi+56h]
mov     [esp+58h+var_40.left], eax
mov     edi, ds:invertrect
mov     [esp+58h+var_20.left], eax
lea     eax, [esp+58h+rc]
mov     [esp+58h+rc.right], ecx
mov     [esp+58h+var_20.right], ecx
push    eax
push    edx
call    edi
lea     ecx, [esp+58h+var_40]
mov     eax, [esi+56h]
push    ecx
push    eax
call    edi
lea     ecx, [esp+58h+var_20]
mov     edx, [esi+56h]
push    ecx
push    edx
call    edi
cmp     [esp+58h+var_48], 0
mov     eax, [esp+58h+var_44]
mov     [esi+62h], eax
jz      short loc_414a9b
lea     eax, [esp+58h+rect]
push    eax
push    esi
call    sub_415c00
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+hmem]
push    edi
push    esi
call    ds:globallock
mov     edi, eax
lea     ecx, [esp+10h+var_4]
mov     eax, [esp+10h+arg_4]
push    ecx
push    edi
mov     [edi+56h], eax
call    sub_415c50
mov     ebx, [esp+18h+arg_8]
add     esp, 8
cmp     [edi+5ah], ebx
jz      short loc_414af6
mov     ax, [edi+4ch]
push    1
mov     cx, [edi+4ah]
push    eax
push    ecx
push    edi
call    sub_414990
add     esp, 10h
push    edi
mov     [edi+5ah], ebx
call    sub_414840
lea     eax, [esp+14h+var_4]
add     esp, 4
push    eax
push    edi
call    sub_415cc0
add     esp, 8
mov     dword ptr [edi+56h], 0
push    esi
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+hmem]
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    ds:globallock
push    eax
mov     edi, eax
call    sub_415000
mov     si, [edi+86h]
add     esp, 4
mov     ax, [edi+4ah]
push    edi
mov     cx, [edi+4ch]
mov     word ptr [esp+18h+var_4+2], ax
mov     word ptr [esp+18h+var_4], cx
call    sub_413d20
mov     cx, word ptr [esp+18h+var_4]
add     esp, 4
cmp     cx, word ptr [esp+14h+var_4+2]
jz      short loc_414b82
cmp     ax, cx
jnz     short loc_414b82
dec     ax
mov     edx, [esp+14h+arg_c]
test    edx, edx
jz      short loc_414b9f
mov     cx, [edi+6ch]
mov     [edx+4], cx
mov     ebx, [edi+76h]
mov     [edx], ebx
mov     bp, [edi+20h]
mov     [edx+6], bp
mov     cx, word ptr [esp+14h+var_4]
sub     cx, word ptr [esp+14h+var_4+2]
cmp     cx, 1
sbb     ecx, ecx
neg     ecx
push    ecx
push    eax
push    edi
call    sub_414c90
mov     bx, ax
mov     ebp, [esp+20h+arg_4]
add     esp, 0ch
test    ebp, ebp
jz      short loc_414c0d
push    20h
lea     eax, [ebp+4]
push    eax
push    esi
push    ebx
call    sub_486fd0
add     esp, 10h
push    esi
push    ebx
call    sub_487010
mov     [ebp+24h], ax
add     esp, 8
push    esi
push    ebx
call    sub_487040
mov     [ebp+26h], ax
add     esp, 8
push    esi
push    ebx
call    sub_4870a0
add     esp, 8
mov     [ebp+0], eax
push    esi
push    ebx
call    sub_487070
add     esp, 8
mov     [ebp+28h], eax
mov     ebp, [esp+14h+arg_8]
test    ebp, ebp
jz      short loc_414c33
push    ebp
push    ebx
push    edi
call    sub_4191a0
add     esp, 0ch
mov     eax, [ebp+14h]
test    eax, eax
jz      short loc_414c33
push    eax
call    sub_45bab0
add     esp, 4
mov     [ebp+14h], eax
push    esi
push    ebx
mov     esi, 1ff7fh
call    sub_486ee0
mov     cx, word ptr [esp+1ch+var_4]
add     esp, 8
cmp     cx, word ptr [esp+14h+var_4+2]
jz      short loc_414c63
mov     ecx, [esp+14h+var_4]
mov     eax, [esp+14h+var_4+2]
push    ecx
push    eax
push    edi
call    sub_414d50
add     esp, 0ch
mov     esi, eax
push    edi
call    sub_415050
mov     eax, [esp+18h+hmem]
add     esp, 4
push    eax
call    ds:globalunlock
mov     eax, esi
pop     ebp
and     eax, 1ff7fh
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     di, [esi+86h]
push    ebp
mov     ebp, [esp+10h+arg_8]
test    ebp, ebp
jz      short loc_414ccd
cmp     dword ptr [esi+52h], 0
jnz     short loc_414ccd
cmp     word ptr [esp+10h+arg_4], 0
jz      short loc_414ccb
mov     eax, [esi+22h]
movsx   ecx, word ptr [esp+10h+arg_4]
mov     edx, [eax]
cmp     byte ptr [edx+ecx-1], 0dh
jz      short loc_414ccb
dec     word ptr [esp+10h+arg_4]
xor     ebp, ebp
push    edi
push    3
call    sub_486f30
mov     bx, ax
add     esp, 8
test    bx, bx
jz      short loc_414d3f
test    ebp, ebp
jz      short loc_414d06
push    edi
push    ebx
push    1
call    sub_4872f0
add     esp, 0ch
mov     eax, [esi+4eh]
push    edi
push    ebx
push    eax
call    sub_487290
mov     ax, bx
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_415000
mov     eax, [esp+14h+arg_4]
add     esp, 4
push    eax
push    esi
call    sub_416d20
add     esp, 8
mov     ecx, [esi+30h]
movsx   eax, ax
push    edi
push    ebx
lea     edx, [eax+eax*4]
mov     ax, [ecx+edx*2+6]
push    eax
call    sub_4872f0
add     esp, 0ch
push    esi
call    sub_415050
add     esp, 4
mov     ax, bx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 8
push    ebx
push    esi
xor     si, si
push    edi
mov     ebx, [esp+14h+arg_0]
push    ebp
mov     di, [ebx+86h]
push    ebx
call    sub_415000
mov     [esp+1ch+var_8], 1ff7fh
mov     ax, [esp+1ch+arg_4]
add     esp, 4
push    eax
push    ebx
call    sub_416d20
movsx   ebp, ax
movsx   eax, word ptr [ebx+34h]
add     esp, 8
lea     ebp, [ebp+ebp*4+0]
add     ebp, ebp
lea     edx, [eax+eax*4]
add     ebp, [ebx+30h]
mov     ecx, [ebx+30h]
lea     eax, [ecx+edx*2-0ah]
mov     [esp+18h+var_4], eax
cmp     eax, ebp
jb      short loc_414ddb
mov     ax, [esp+18h+arg_8]
cmp     [ebp+0], ax
jge     short loc_414ddb
mov     ax, [ebp+6]
test    si, si
jnz     short loc_414dc0
mov     si, ax
jmp     short loc_414dd2
push    edi
push    eax
push    edi
push    esi
call    sub_487460
not     eax
and     [esp+28h+var_8], eax
add     esp, 10h
add     ebp, 0ah
cmp     [esp+18h+var_4], ebp
jnb     short loc_414da7
push    ebx
call    sub_415050
mov     eax, [esp+1ch+var_8]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     edx, [eax]
mov     [edx+9eh], ecx
mov     edx, [eax]
mov     eax, [esp+arg_8]
mov     [edx+0a2h], eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
test    ecx, ecx
jz      short locret_414e2d
cmp     dword ptr [ecx+9eh], 0
jz      short locret_414e2d
mov     eax, [esp+arg_4]
mov     [ecx+0a2h], eax
retn
mov     ecx, [esp+arg_4]
sub     esp, 4
lea     eax, [esp+4+var_4]
push    esi
mov     esi, [esp+8+hmem]
push    edi
push    eax
push    ecx
push    esi
call    sub_414f70
add     esp, 0ch
mov     edi, eax
mov     eax, [esp+0ch+lprcsrc2]
push    eax
push    edi
call    sub_416480
lea     eax, [esp+14h+var_4]
add     esp, 8
push    eax
push    edi
push    esi
call    sub_414fb0
add     esp, 0ch
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 14h
push    ebx
push    esi
mov     esi, [esp+1ch+arg_8]
push    edi
push    ebp
xor     edi, edi
cmp     esi, edi
jnz     short loc_414e95
lea     esi, [esp+24h+var_10]
mov     eax, [esp+24h+hmem]
push    eax
call    ds:globallock
push    eax
mov     ebx, eax
call    sub_419930
add     esp, 4
mov     ebp, eax
mov     eax, [esp+24h+arg_4]
test    eax, eax
jz      short loc_414eba
mov     [ebx+56h], eax
jmp     short loc_414ec7
push    0
call    ds:getdc
mov     [ebx+56h], eax
mov     edi, eax
cmp     [esp+24h+arg_10], 0
jz      short loc_414ed4
mov     word ptr [ebx+68h], 0ffffh
mov     eax, [esp+24h+arg_14]
mov     ecx, [esp+24h+arg_c]
push    eax
push    ecx
push    esi
push    ebx
call    sub_417620
mov     [esp+34h+var_14], eax
add     esp, 10h
call    sub_418060
test    eax, eax
jnz     short loc_414f37
test    ebp, ebp
jz      short loc_414f18
mov     esi, [esp+24h+var_14]
push    ebx
call    sub_419f10
add     esp, 4
sub     esi, eax
mov     [ebx+1ch], esi
test    ebp, ebp
jz      short loc_414f37
push    ebx
call    sub_419e60
add     esp, 4
test    ebp, ebp
jz      short loc_414f37
cmp     dword ptr [ebx+5ah], 0
jz      short loc_414f37
mov     eax, [ebx+92h]
cmp     dword ptr [eax+10h], 0
jz      short loc_414f37
push    ebx
call    sub_419760
add     esp, 4
test    edi, edi
jz      short loc_414f44
push    edi
push    0
call    ds:releasedc
mov     dword ptr [ebx+56h], 0
mov     eax, [esp+24h+hmem]
push    eax
call    ds:globalunlock
mov     eax, [esp+24h+var_14]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, [esp+hmem]
push    esi
push    eax
call    ds:globallock
mov     esi, eax
mov     ecx, [esp+4+arg_8]
mov     eax, [esp+4+arg_4]
push    ecx
push    esi
mov     [esi+56h], eax
call    sub_415c50
add     esp, 8
cmp     dword ptr [esi+5ah], 0
jz      short loc_414fac
mov     ax, [esi+4ch]
cmp     [esi+4ah], ax
jnz     short loc_414fac
push    esi
call    sub_414810
add     esp, 4
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_4]
cmp     dword ptr [esi+5ah], 0
jz      short loc_414fd0
mov     ax, [esi+4ch]
push    1
mov     cx, [esi+4ah]
push    eax
push    ecx
push    esi
call    sub_414990
add     esp, 10h
mov     eax, [esp+4+arg_8]
push    eax
push    esi
call    sub_415cc0
mov     eax, [esp+0ch+hmem]
add     esp, 8
mov     dword ptr [esi+56h], 0
push    eax
call    ds:globalunlock
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     ax, [esi+6ah]
test    ax, ax
lea     ecx, [eax+1]
mov     [esi+6ah], cx
jnz     short loc_415040
mov     eax, [esi+36h]
mov     edi, ds:globallock
push    eax
call    edi
mov     ecx, [esi+22h]
mov     [esi+3ah], eax
push    ecx
call    edi
mov     [esi+26h], eax
mov     eax, [esi+2ch]
push    eax
call    edi
mov     [esi+30h], eax
mov     eax, [esi+40h]
push    eax
call    edi
mov     [esi+44h], eax
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     ax, [esi+6ah]
xor     edi, edi
test    ax, ax
jz      short loc_415094
dec     ax
mov     [esi+6ah], ax
jnz     short loc_415094
mov     eax, [esi+36h]
mov     ebx, ds:globalunlock
push    eax
call    ebx
mov     ecx, [esi+22h]
push    ecx
call    ebx
mov     eax, [esi+2ch]
push    eax
call    ebx
mov     eax, [esi+40h]
push    eax
call    ebx
mov     [esi+3ah], edi
mov     [esi+26h], edi
mov     [esi+30h], edi
mov     [esi+44h], edi
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+arg_0]
movsx   eax, word ptr [edi+34h]
mov     ecx, [edi+30h]
lea     edx, [eax+eax*4]
lea     ebx, [ecx+edx*2-0ah]
cmp     word ptr [ebx], 0
jle     short loc_4150ce
mov     ax, [edi+2ah]
cmp     [ebx], ax
jl      short loc_4150ce
sub     ebx, 0ah
cmp     word ptr [ebx], 0
jg      short loc_4150c0
mov     esi, ebx
cmp     ebx, ecx
jbe     short loc_41510e
mov     ax, [esi]
lea     ebp, [esi-0ah]
cmp     [ebp+0], ax
jz      short loc_4150ee
push    ebp
push    esi
call    sub_415130
add     esp, 8
test    eax, eax
jz      short loc_415107
mov     ax, [ebp+0]
mov     [esi], ax
mov     eax, ebx
sub     eax, ebp
sub     ebx, 0ah
push    eax
push    esi
push    ebp
call    _memcpy
add     esp, 0ch
mov     esi, ebp
cmp     [edi+30h], ebp
jb      short loc_4150d4
sub     ebx, [edi+30h]
mov     ecx, 0ah
mov     eax, ebx
pop     ebp
cdq
idiv    ecx
inc     ax
mov     [edi+34h], ax
pop     edi
pop     esi
pop     ebx
retn
mov     edx, [esp+arg_0]
mov     eax, [esp+arg_4]
mov     cx, [edx+6]
cmp     [eax+6], cx
jz      short loc_415145
xor     eax, eax
retn
mov     ax, [eax+8]
sub     ax, [edx+8]
cmp     ax, 1
sbb     eax, eax
neg     eax
retn
mov     eax, [esp+hmem]
sub     esp, 4
mov     [esp+4+var_4], 0
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    ds:globallock
lea     edx, [eax+10h]
mov     esi, eax
mov     eax, [esp+14h+pt.x]
mov     ecx, [esp+14h+pt.y]
push    ecx
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jz      loc_41524a
mov     eax, [esp+14h+arg_4]
push    0
mov     edx, [esp+18h+pt.x]
push    0
mov     ecx, [esp+1ch+pt.y]
mov     [esi+56h], eax
push    ecx
push    edx
push    esi
call    sub_415d60
mov     bp, ax
mov     edi, [esp+28h+arg_14]
add     esp, 14h
test    edi, edi
jz      short loc_4151c4
mov     byte ptr [edi], 0
mov     ebx, [esp+14h+arg_10]
test    ebx, ebx
jz      short loc_4151d1
mov     word ptr [ebx], 0
test    bp, bp
jl      short loc_415243
cmp     [esi+2ah], bp
jle     short loc_415243
mov     [esp+14h+var_4], 1
test    ebx, ebx
jz      short loc_4151f7
push    ebp
push    esi
call    sub_4196c0
inc     ax
add     esp, 8
mov     [ebx], ax
test    edi, edi
jz      short loc_415243
push    1
push    1
push    ebp
push    esi
call    sub_4144c0
mov     bx, ax
add     esp, 10h
push    1
push    0
push    ebp
push    esi
call    sub_4144c0
movsx   edx, ax
movsx   ecx, bx
add     esp, 10h
sub     edx, ecx
mov     cx, [esp+14h+arg_18]
movsx   ebp, cx
cmp     edx, ebp
jl      short loc_415233
lea     eax, [ebx+ecx]
dec     ax
push    edi
push    eax
mov     eax, [esp+1ch+hmem]
push    ebx
push    eax
call    sub_4193a0
add     esp, 10h
mov     dword ptr [esi+56h], 0
mov     eax, [esp+14h+hmem]
push    eax
call    ds:globalunlock
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
push    edi
mov     edi, [esp+8+hmem]
push    edi
call    ds:globallock
mov     ecx, [esp+8+src]
push    ecx
push    eax
call    sub_4152a0
mov     si, ax
add     esp, 8
push    edi
call    ds:globalunlock
mov     ax, si
pop     edi
pop     esi
retn
push    esi
push    edi
xor     di, di
mov     esi, [esp+8+arg_0]
movsx   eax, word ptr [esi+48h]
mov     ecx, [esp+8+src]
mov     edx, [esi+40h]
lea     eax, [eax+eax*4]
add     eax, eax
push    eax
push    0ah
push    ecx
push    edx
call    sub_45baf0
add     esp, 10h
test    eax, eax
jz      short loc_4152d4
mov     di, [esi+48h]
inc     di
mov     [esi+48h], di
mov     ax, di
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     ax, [ecx+48h]
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
mov     dx, [esp+8+arg_4]
mov     ecx, [esp+8+arg_8]
push    ecx
push    edx
push    eax
call    sub_415320
add     esp, 0ch
mov     edi, eax
push    esi
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     cx, [eax+48h]
mov     edx, [eax+40h]
mov     ax, [esp+arg_4]
test    ax, ax
jle     short loc_415364
cmp     cx, ax
jl      short loc_415364
movsx   ecx, ax
lea     ecx, [ecx+ecx*4]
add     ecx, ecx
add     ecx, [edx]
mov     edx, [esp+arg_8]
mov     eax, [ecx-0ah]
sub     ecx, 0ah
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, 1
mov     cx, [ecx+8]
mov     [edx+8], cx
retn
xor     eax, eax
retn
push    esi
mov     esi, [esp+4+hmem]
push    esi
call    ds:globallock
mov     cx, [esp+4+arg_4]
push    ecx
push    eax
call    sub_4153a0
add     esp, 8
push    esi
call    ds:globalunlock
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     bx, [esi+48h]
push    ebp
mov     bp, [esp+10h+arg_4]
mov     edi, [esi+40h]
test    bp, bp
jle     short loc_4153f1
cmp     bx, bp
jl      short loc_4153f1
push    edi
call    ds:globallock
movsx   edx, bp
lea     ecx, [edx+edx*4]
lea     eax, [eax+ecx*2]
movsx   ecx, bx
sub     ecx, edx
lea     ecx, [ecx+ecx*4]
add     ecx, ecx
push    ecx
push    eax
sub     eax, 0ah
push    eax
call    _memcpy
add     esp, 0ch
push    edi
call    ds:globalunlock
dec     word ptr [esi+48h]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+hmem]
push    edi
push    esi
call    ds:globallock
push    eax
mov     edi, eax
call    sub_415000
mov     ax, [esp+10h+arg_4]
add     esp, 4
push    eax
push    edi
call    sub_416d20
mov     cx, [edi+86h]
add     esp, 8
movsx   eax, ax
mov     edx, [edi+30h]
push    ecx
lea     ebx, [eax+eax*4]
mov     ax, [edx+ebx*2+6]
push    eax
call    sub_4870a0
add     esp, 8
mov     ebx, eax
push    edi
call    sub_415050
add     esp, 4
push    esi
call    ds:globalunlock
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_415000
mov     di, [esp+0ch+arg_4]
add     esp, 4
push    edi
push    esi
call    sub_416d20
movsx   ecx, ax
add     esp, 8
lea     ecx, [ecx+ecx*4]
add     ecx, ecx
add     ecx, [esi+30h]
cmp     [esp+8+arg_c], 0
jz      short loc_415496
or      byte ptr [ecx+8], 1
jmp     short loc_41549c
and     word ptr [ecx+8], 0fffeh
cmp     [esi+68h], di
jle     short loc_4154a6
mov     [esi+68h], di
push    esi
call    sub_415050
add     esp, 4
pop     edi
pop     esi
retn
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [esp+14h+hmem]
push    edi
push    ebp
push    esi
call    sub_419300
mov     bx, [esp+20h+arg_8]
add     esp, 4
cmp     ax, bx
jge     short loc_4154e1
mov     bx, ax
mov     di, [esp+1ch+arg_4]
cmp     di, bx
jge     short loc_415567
cmp     [esp+1ch+arg_c], 0
jz      short loc_41551f
mov     [esp+1ch+var_4], 6
mov     word ptr [esp+1ch+src], di
mov     eax, [esp+1ch+arg_10]
mov     word ptr [esp+1ch+src+2], bx
lea     edi, [esp+1ch+src]
mov     [esp+1ch+var_8], eax
push    edi
push    esi
call    sub_415270
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    esi
call    sub_4152e0
mov     bp, ax
add     esp, 4
cmp     bp, 1
jl      short loc_415567
lea     eax, [esp+1ch+src]
push    eax
push    ebp
push    esi
call    sub_4152f0
add     esp, 0ch
cmp     [esp+1ch+var_4], 6
jnz     short loc_41555f
cmp     word ptr [esp+1ch+src], di
jl      short loc_41555f
cmp     word ptr [esp+1ch+src+2], bx
jg      short loc_41555f
push    ebp
push    esi
call    sub_415370
add     esp, 8
dec     bp
cmp     bp, 1
jge     short loc_415531
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    esi
mov     esi, [esp+4+hmem]
push    esi
call    ds:globallock
push    esi
call    ds:globalunlock
push    esi
call    sub_415690
add     esp, 4
pop     esi
retn
sub     esp, 8
lea     eax, [esp+8+var_8+2]
push    ebx
lea     ecx, [esp+0ch+var_8]
push    esi
mov     esi, [esp+10h+hmem]
push    edi
push    ebp
push    eax
push    ecx
push    esi
call    sub_4195c0
mov     cx, [esp+24h+var_8]
add     esp, 0ch
cmp     [esp+18h+var_8+2], cx
jz      loc_415688
mov     eax, ds:hwndparent
push    eax
call    ds:openclipboard
test    eax, eax
jz      loc_415688
mov     eax, dword ptr [esp+18h+var_8+2]
mov     ecx, dword ptr [esp+18h+var_8]
push    eax
push    ecx
push    esi
call    sub_419310
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jz      short loc_415649
push    ebx
call    ds:globallock
push    eax
call    sub_47fdc0
add     esp, 4
movzx   edi, ax
push    ebx
call    sub_45bbc0
add     esp, 4
add     edi, eax
mov     ebp, ds:globalunlock
push    ebx
call    ebp
push    2
push    edi
push    ebx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jz      short loc_415636
push    ebx
call    ds:globallock
push    edi
push    eax
call    sub_47fcf0
add     esp, 8
push    ebx
call    ebp
call    ds:emptyclipboard
push    ebx
mov     edi, ds:setclipboarddata
push    1
call    edi
jmp     short loc_41564f
mov     edi, ds:setclipboarddata
lea     eax, [esp+18h+var_4]
mov     ecx, dword ptr [esp+18h+var_8+2]
mov     edx, dword ptr [esp+18h+var_8]
push    eax
push    1
push    ecx
push    edx
push    esi
call    sub_418070
add     esp, 14h
mov     esi, eax
test    esi, esi
jz      short loc_415682
mov     eax, lpszformat
push    eax
call    ds:registerclipboardformata
movzx   ecx, ax
push    esi
push    ecx
call    edi
call    ds:closeclipboard
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
call    sub_409d20
test    eax, eax
jz      loc_4157c1
push    7f02h
push    0
call    ds:loadcursora
push    eax
call    ds:setcursor
mov     esi, eax
mov     eax, [esp+14h+hmem]
push    eax
call    sub_413910
add     esp, 4
mov     eax, lpszformat
push    eax
call    sub_409d10
add     esp, 4
test    ax, ax
jz      short loc_4156ea
movzx   eax, ax
push    eax
call    sub_409d60
add     esp, 4
mov     edi, eax
jmp     short loc_4156ee
mov     edi, [esp+14h+var_4]
test    edi, edi
jz      short loc_415716
mov     eax, [esp+14h+hmem]
push    eax
call    sub_413690
add     esp, 4
push    eax
lea     eax, [esp+18h+hmem]
push    eax
push    edi
call    sub_418330
add     esp, 0ch
test    eax, eax
jnz     loc_4157b5
push    1
call    sub_409d60
add     esp, 4
mov     edi, eax
test    edi, edi
jz      loc_4157b5
push    edi
call    sub_45bbc0
add     esp, 4
mov     ebx, eax
push    edi
call    ds:globallock
mov     ebp, eax
cmp     ebx, 0ffffffffh
ja      short loc_41574c
push    ebp
call    ds:lstrlena
mov     ebx, eax
cmp     ebx, 7fffh
jle     short loc_41575b
mov     byte ptr [ebp+7ffeh], 0
push    ebp
call    sub_47fd60
add     esp, 4
push    ebp
call    ds:lstrlena
mov     ebx, eax
mov     eax, [esp+14h+hmem]
push    eax
call    sub_419300
movsx   eax, ax
add     esp, 4
add     eax, ebx
cmp     eax, 7fffh
jle     short loc_41579d
mov     ebx, 7ffeh
mov     eax, [esp+14h+hmem]
push    eax
call    sub_419300
movsx   eax, ax
add     esp, 4
sub     ebx, eax
mov     eax, [esp+14h+hmem]
push    ebx
push    ebp
push    eax
call    sub_4136a0
add     esp, 0ch
push    edi
call    sub_409d90
add     esp, 4
call    sub_409d40
push    esi
call    ds:setcursor
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+hdc]
or      eax, 2000000h
push    eax
push    ecx
call    ds:settextcolor
retn
push    ebx
push    esi
push    edi
push    ebp
mov     di, [esp+10h+arg_10]
test    di, di
jnz     short loc_415807
mov     eax, [esp+10h+x]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     esi, [esp+10h+lpstring]
movsx   eax, di
cmp     byte ptr [eax+esi-1], 0dh
jnz     short loc_415817
dec     di
mov     ebx, [esp+10h+arg_0]
movsx   eax, word ptr [ebx+6ch]
cmp     eax, 4
ja      def_415828
jmp     ds:jpt_415828[eax*4]
push    1
mov     eax, [ebx+56h]
push    eax
mov     ebp, ds:setbkmode
call    ebp
mov     ecx, [esp+10h+y]
push    edi
mov     eax, [esp+14h+x]
push    esi
push    ecx
push    eax
jmp     short loc_4158bb
mov     eax, [esp+10h+arg_14]
mov     ebp, [esp+10h+y]
mov     ecx, [esp+10h+x]
push    eax
push    edi
push    esi
push    ebp
push    ecx
push    ebx
call    sub_415900
add     esp, 18h
test    eax, eax
jz      short loc_4158a7
jmp     short def_415828
push    1
mov     eax, [ebx+56h]
push    eax
mov     ebp, ds:setbkmode
call    ebp
call    sub_40ac00
and     eax, 0ffffffh
mov     ecx, [ebx+56h]
or      eax, 2000000h
mov     ebp, ds:settextcolor
push    eax
push    ecx
call    ebp
mov     ecx, [esp+10h+y]
push    edi
mov     eax, [esp+14h+x]
push    esi
push    ecx
push    eax
jmp     short loc_4158bb
mov     ebp, [esp+10h+y]
push    1
mov     eax, [ebx+56h]
push    eax
call    ds:setbkmode
mov     ecx, [esp+10h+x]
push    edi
push    esi
push    ebp
push    ecx
mov     edx, [ebx+56h]
push    edx
call    sub_449d20
add     esp, 14h
push    edi
mov     eax, [ebx+56h]
push    esi
push    eax
call    sub_449d50
add     eax, [esp+1ch+x]
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 84h
push    ebx
push    esi
mov     esi, [esp+8ch+arg_14]
push    edi
mov     ebx, [esp+90h+arg_0]
push    ebp
push    esi
push    ebx
call    sub_419160
mov     [esp+9ch+y], eax
add     esp, 8
push    esi
push    ebx
call    sub_419140
mov     ecx, [esp+9ch+y]
mov     edx, dword ptr [esp+9ch+arg_10]
add     esp, 8
lea     eax, [eax+ecx+10h]
mov     ecx, [esp+94h+lpstring]
push    edx
mov     [esp+98h+nheight], eax
push    ecx
mov     eax, [ebx+56h]
push    eax
call    sub_449d50
add     esp, 0ch
add     eax, 10h
mov     ebp, [ebx+56h]
mov     [esp+94h+nwidth], eax
push    ebp
call    ds:createcompatibledc
mov     [ebx+56h], eax
test    eax, eax
jz      loc_415ade
mov     eax, [esp+94h+nheight]
push    0
mov     ecx, [esp+98h+nwidth]
push    1
push    1
push    eax
push    ecx
call    ds:createbitmap
mov     [esp+94h+ho], eax
test    eax, eax
jz      loc_415ad7
push    eax
mov     ecx, [ebx+56h]
push    ecx
call    ds:selectobject
mov     dx, [ebx+86h]
lea     ecx, [esp+94h+var_70]
mov     [esp+94h+h], eax
push    ecx
mov     ax, [esi+6]
push    edx
push    eax
call    sub_487730
lea     ecx, [esp+0a0h+var_70]
lea     eax, [esp+0a0h+var_1c]
add     esp, 0ch
mov     edx, [ebx+56h]
push    ecx
push    edx
push    eax
call    sub_449700
lea     edi, [esp+0a0h+var_38]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+94h+var_38]
lea     edi, [esp+94h+var_54]
mov     ecx, 7
push    0ff0062h
rep movsd
mov     ecx, [esp+98h+nheight]
mov     edx, [esp+98h+nwidth]
push    ecx
mov     eax, [ebx+56h]
push    edx
push    0
push    0
push    eax
call    ds:patblt
movsx   ecx, [esp+94h+arg_10]
mov     eax, [esp+94h+lpstring]
push    ecx
mov     edx, [esp+98h+y]
push    eax
push    edx
mov     ecx, [ebx+56h]
push    0
push    ecx
call    ds:textouta
mov     esi, [esp+94h+arg_8]
push    2000000h
sub     esi, [esp+98h+y]
push    ebp
call    ds:settextcolor
push    2ffffffh
push    ebp
call    ds:setbkcolor
push    990066h
push    0
push    0
mov     eax, [ebx+56h]
mov     ecx, [esp+0a0h+nheight]
push    eax
mov     edx, [esp+0a4h+nwidth]
push    ecx
mov     eax, [esp+0a8h+x]
push    edx
push    esi
push    eax
push    ebp
call    ds:bitblt
lea     ecx, [esp+94h+var_54]
mov     eax, [ebx+56h]
lea     edx, [esp+94h+var_1c]
push    ecx
push    eax
push    edx
call    sub_449700
lea     ecx, [esp+0a0h+var_70]
add     esp, 0ch
push    ecx
call    sub_4496d0
mov     ecx, [esp+98h+h]
add     esp, 4
mov     edx, [ebx+56h]
push    ecx
push    edx
call    ds:selectobject
mov     ecx, [ebx+56h]
push    ecx
call    ds:deletedc
mov     ecx, [esp+94h+ho]
push    ecx
call    ds:deleteobject
mov     eax, 1
mov     [ebx+56h], ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 84h
retn
push    ebp
call    ds:deletedc
xor     eax, eax
mov     [ebx+56h], ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 84h
retn
mov     eax, [esp+arg_8]
push    ebx
push    esi
and     eax, 0ffffffh
mov     esi, [esp+8+arg_0]
push    edi
or      eax, 2000000h
mov     edi, ds:setbkcolor
push    eax
mov     ecx, [esi+56h]
push    ecx
call    edi
cmp     eax, 80000000h
mov     ebx, eax
jz      short loc_415b40
mov     eax, [esp+0ch+lprect]
push    0
push    0
mov     ecx, [esi+56h]
push    offset windowname
push    eax
push    2
push    0
push    0
push    ecx
call    ds:exttextouta
push    ebx
mov     ecx, [esi+56h]
push    ecx
call    edi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
push    ebp
xor     edi, edi
cmp     esi, edi
jz      loc_415be7
mov     ecx, [esp+20h+lprect]
cmp     ecx, edi
jz      short loc_415be7
mov     eax, [esi+92h]
test    eax, eax
jz      short loc_415be7
mov     edx, [eax+4]
test    edx, edx
jge     short loc_415be7
lea     eax, [esi+10h]
lea     ebx, [esp+20h+x1]
mov     ebp, [eax]
mov     [ebx], ebp
mov     ebp, [eax+4]
mov     [ebx+4], ebp
mov     ebp, [eax+8]
mov     eax, [eax+0ch]
mov     [ebx+8], ebp
mov     [ebx+0ch], eax
mov     eax, [esi+56h]
add     [esp+20h+y2], edx
test    eax, eax
jz      short loc_415be7
push    ecx
push    eax
call    ds:getclipbox
mov     eax, [esp+20h+y2]
mov     ecx, [esp+20h+x2]
mov     edx, [esp+20h+y1]
push    eax
mov     eax, [esp+24h+x1]
push    ecx
push    edx
push    eax
call    ds:createrectrgn
cmp     eax, edi
mov     ebx, eax
jz      short loc_415be7
push    ebx
mov     eax, [esi+56h]
push    eax
mov     edi, 1
call    sub_474e10
add     esp, 8
push    ebx
call    ds:deleteobject
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
test    esi, esi
jz      short loc_415c3f
mov     ecx, [esp+8+arg_4]
test    ecx, ecx
jz      short loc_415c3f
mov     eax, [ecx+0ch]
mov     edx, [ecx+8]
push    eax
mov     edi, [ecx+4]
push    edx
mov     eax, [ecx]
push    edi
push    eax
call    ds:createrectrgn
mov     edi, eax
test    edi, edi
jz      short loc_415c3f
push    edi
mov     eax, [esi+56h]
push    eax
call    ds:selectcliprgn
push    edi
call    ds:deleteobject
pop     edi
pop     esi
retn
sub     esp, 10h
push    esi
mov     esi, [esp+14h+arg_0]
mov     eax, [esi+56h]
push    eax
call    ds:savedc
mov     ecx, [esp+14h+arg_4]
lea     edx, [esp+14h+left]
mov     [ecx], eax
lea     ecx, [esi+10h]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
push    esi
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
call    sub_419f10
mov     edx, [esp+18h+right]
add     [esp+18h+bottom], eax
mov     ecx, [esp+18h+bottom]
mov     eax, [esp+18h+top]
add     esp, 4
push    ecx
push    edx
mov     ecx, [esp+1ch+left]
push    eax
push    ecx
mov     edx, [esi+56h]
push    edx
call    ds:intersectcliprect
pop     esi
add     esp, 10h
retn
mov     eax, [esp+arg_4]
mov     edx, [esp+arg_0]
mov     ecx, [eax]
mov     eax, [edx+56h]
push    ecx
push    eax
call    ds:restoredc
retn
push    ebx
push    esi
mov     ebx, [esp+8+hmem]
push    edi
push    ebp
push    ebx
call    ds:globallock
mov     esi, eax
mov     ebp, [esp+10h+arg_4]
test    ebp, ebp
jz      short loc_415cfe
mov     [esi+56h], ebp
jmp     short loc_415d0e
mov     eax, [esi+82h]
push    eax
call    ds:getdc
mov     [esi+56h], eax
mov     eax, [esp+10h+arg_14]
mov     ecx, [esp+10h+arg_10]
mov     edx, [esp+10h+arg_8]
push    eax
mov     eax, [esp+14h+arg_c]
push    ecx
push    eax
push    edx
push    esi
call    sub_415d60
mov     di, ax
add     esp, 14h
test    ebp, ebp
jnz     short loc_415d45
mov     eax, [esi+56h]
mov     ecx, [esi+82h]
push    eax
mov     ebp, ds:releasedc
push    ecx
call    ebp
mov     dword ptr [esi+56h], 0
push    ebx
call    ds:globalunlock
mov     ax, di
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 30h
mov     [esp+30h+var_28], 1
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+40h+arg_c]
cmp     ebp, 2
jnz     short loc_415d82
mov     [esp+40h+var_28], 3
xor     ebp, ebp
mov     dword_4ad34c, 0
cmp     [esp+40h+arg_10], 0
jz      short loc_415d9d
mov     eax, [esp+40h+arg_10]
mov     dword ptr [eax], 0
mov     edi, [esp+40h+arg_0]
inc     [esp+40h+arg_4]
push    edi
mov     dword ptr [edi+62h], 0
call    sub_415000
add     esp, 4
mov     edx, [edi+3ah]
movsx   eax, word ptr [edi+3eh]
mov     esi, edx
mov     ecx, eax
shl     eax, 3
sub     eax, ecx
lea     ecx, [esi+eax*2]
cmp     ecx, esi
jb      short loc_415ddc
mov     eax, [esp+40h+arg_8]
cmp     [esi+2], eax
jg      short loc_415ddc
add     esi, 0eh
cmp     ecx, esi
jnb     short loc_415dd0
cmp     esi, edx
jnz     short loc_415dea
cmp     ebp, 1
sbb     ebx, ebx
jmp     loc_415f8d
cmp     ecx, esi
jnb     short loc_415e04
test    ebp, ebp
jnz     short loc_415dfb
mov     bx, 0ffffh
jmp     loc_415f8d
mov     bx, [edi+2ah]
jmp     loc_415f8d
mov     bx, [esi-0eh]
mov     eax, [esp+40h+arg_4]
mov     dx, [esi]
sub     eax, [esi-8]
mov     word ptr [esp+40h+var_2e], dx
sub     esi, 0eh
mov     [esp+40h+var_2e+2], eax
test    eax, eax
jg      short loc_415e33
test    ebp, ebp
jnz     loc_415f8d
mov     bx, 0ffffh
jmp     loc_415f8d
lea     eax, [esp+40h+var_18]
push    eax
push    ebx
push    edi
call    sub_416d60
mov     eax, [esp+4ch+var_e]
add     esp, 0ch
sub     eax, [esi+6]
cmp     [esp+40h+arg_10], 0
mov     [esp+40h+var_20], eax
jz      short loc_415e66
cmp     [esp+40h+var_18], 3
jnz     short loc_415e66
mov     eax, [esp+40h+arg_10]
mov     dword ptr [eax], 1
mov     ax, [esi]
mov     edx, [esp+40h+var_2e]
mov     ecx, [esp+40h+var_20]
push    edx
lea     ebx, [esp+44h+var_2e+2]
push    ecx
mov     cx, word ptr [esp+48h+var_2e]
push    ebx
sub     cx, ax
mov     edx, [esp+4ch+var_28]
push    edx
push    0
push    ecx
push    eax
lea     eax, [esp+5ch+var_18]
push    eax
push    edi
call    sub_4170d0
mov     bx, ax
add     esp, 24h
cmp     word ptr [esp+40h+var_2e], bx
jg      short loc_415ebc
jnz     short loc_415eab
cmp     word ptr [esp+40h+var_2e], 1
jz      short loc_415ebc
test    ebp, ebp
jnz     loc_415f69
mov     bx, 0ffffh
jmp     loc_415f8d
cmp     [esp+40h+var_2e+2], 0
jge     short loc_415ecf
mov     bx, [esi]
mov     eax, [esi+6]
mov     [esp+40h+var_24], eax
jmp     short loc_415edb
mov     eax, [esp+40h+arg_4]
sub     eax, [esp+40h+var_2e+2]
mov     [esp+40h+var_24], eax
mov     cx, bx
mov     eax, [esp+40h+var_e]
sub     eax, [esp+40h+var_12]
mov     [esp+40h+var_2e+2], eax
mov     [esp+40h+var_1c], eax
mov     ax, [esi]
sub     cx, ax
inc     cx
cmp     bx, 1
jnz     short loc_415f08
cmp     word ptr [esp+40h+var_2e], cx
jge     short loc_415f08
mov     cx, word ptr [esp+40h+var_2e]
mov     edx, [esp+40h+var_2e]
push    edx
mov     edx, [esp+44h+var_20]
push    edx
lea     edx, [esp+48h+var_2e+2]
push    edx
mov     edx, [esp+4ch+var_28]
push    edx
mov     dx, word ptr [esp+50h+var_2e]
sub     dx, cx
push    edx
push    ecx
push    eax
lea     eax, [esp+5ch+var_18]
push    eax
push    edi
call    sub_4170d0
add     esp, 24h
mov     ecx, [esi+6]
sub     ecx, [esp+40h+var_2e+2]
add     ecx, [esp+40h+var_1c]
cmp     ebp, 1
jnz     short loc_415f69
sub     ecx, [esp+40h+arg_4]
mov     eax, [esp+40h+arg_4]
sub     eax, [esp+40h+var_24]
cmp     ecx, eax
jge     short loc_415f69
mov     ax, bx
inc     bx
cmp     bx, ax
jz      short loc_415f69
mov     dword_4ad34c, 1
cmp     word ptr [esp+40h+var_2e], bx
jnz     short loc_415f8d
cmp     [esi], bx
jge     short loc_415f8d
mov     eax, [edi+26h]
movsx   ecx, bx
cmp     byte ptr [eax+ecx-1], 0dh
jnz     short loc_415f86
dec     bx
jmp     short loc_415f8d
mov     dword ptr [edi+62h], 1
push    edi
call    sub_415050
mov     ax, bx
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
sub     esp, 1ch
push    ebx
push    esi
mov     esi, [esp+24h+arg_0]
push    edi
push    ebp
push    esi
call    sub_415000
mov     bx, [esp+30h+arg_4]
add     esp, 4
push    ebx
push    esi
call    sub_416db0
add     esp, 8
mov     edi, eax
movsx   ecx, word ptr [esi+3eh]
mov     eax, ecx
shl     ecx, 3
sub     ecx, eax
mov     eax, [esi+3ah]
mov     ax, [eax+ecx*2]
cmp     ax, bx
jge     short loc_415fef
mov     bx, ax
test    bx, bx
jle     short loc_416002
cmp     [edi], bx
jnz     short loc_416002
cmp     dword ptr [esi+62h], 0
jz      short loc_416002
sub     edi, 0eh
lea     eax, [esp+2ch+var_18]
push    eax
push    ebx
push    esi
call    sub_416d60
add     esp, 0ch
mov     edx, 1
cmp     [esp+2ch+arg_c], 0
jz      short loc_416022
mov     edx, 3
mov     [esp+2ch+var_1c], 7fffh
mov     ax, [edi+0eh]
mov     bp, ax
push    eax
sub     bp, bx
mov     eax, [esp+30h+var_e]
mov     cx, [edi]
sub     eax, [edi+6]
sub     bx, cx
push    eax
lea     eax, [esp+34h+var_1c]
push    eax
push    edx
lea     eax, [esp+3ch+var_18]
push    ebp
push    ebx
push    ecx
push    eax
push    esi
call    sub_4170d0
mov     edx, [esp+50h+arg_8]
add     esp, 24h
mov     eax, [edi+2]
mov     [edx+4], eax
mov     ecx, [edi+10h]
mov     [edx+0ch], ecx
mov     ecx, [edi+6]
sub     ecx, [esp+2ch+var_1c]
add     ecx, 7fffh
mov     [edx], ecx
cmp     word ptr [esi+2ah], 0
jnz     short loc_41608e
mov     eax, [esp+2ch+var_16]
add     eax, [esp+2ch+var_12]
cmp     eax, ecx
jle     short loc_41608e
mov     [edx], eax
mov     eax, [edx]
push    esi
inc     eax
mov     [edx+8], eax
call    sub_415050
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     ax, [esp+arg_4]
push    esi
mov     dx, [esp+4+arg_8]
cmp     dx, ax
jle     short loc_4160d4
mov     ecx, [esp+4+arg_0]
movsx   esi, ax
cmp     byte ptr [esi+ecx], 9
jz      short loc_4160d8
inc     ax
cmp     ax, dx
jl      short loc_4160c4
mov     ax, 0ffffh
pop     esi
retn
push    ebx
xor     eax, eax
mov     bx, [esp+4+arg_8]
push    esi
mov     si, [esp+8+arg_4]
push    edi
push    ebp
xor     edi, edi
xor     ecx, ecx
cmp     bx, si
jle     short loc_41611d
mov     edx, [esp+10h+arg_0]
movsx   ebp, si
cmp     byte ptr [ebp+edx+0], 20h
jnz     short loc_41610e
mov     edi, 1
jmp     short loc_416116
mov     ax, si
mov     ecx, 1
inc     si
cmp     bx, si
jg      short loc_4160fd
test    ax, ax
jnz     short loc_416139
test    ecx, ecx
jnz     short loc_416139
cmp     [esp+10h+arg_c], 0
jz      short loc_416131
test    edi, edi
jnz     short loc_416140
mov     ax, bx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     ax, bx
jge     short loc_416140
inc     ax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_8]
push    ebx
push    esi
push    edi
mov     di, [esp+0ch+arg_4]
push    ebp
mov     esi, [esp+10h+arg_0]
push    0
xor     bp, bp
push    eax
push    edi
push    esi
call    sub_4160e0
mov     bx, ax
add     esp, 10h
cmp     bx, di
jle     short loc_4161ba
cmp     bx, di
jle     short loc_4161a5
movsx   eax, di
cmp     byte ptr [eax+esi], 20h
jnz     short loc_416190
inc     bp
inc     di
cmp     bx, di
jg      short loc_41617e
cmp     bx, di
jle     short loc_4161b5
push    0
push    ebx
push    edi
push    esi
call    sub_416f80
mov     di, ax
add     esp, 10h
cmp     bx, di
jle     short loc_4161ba
movsx   eax, di
cmp     byte ptr [eax+esi], 20h
jz      short loc_4161b5
inc     bp
cmp     bx, di
jg      short loc_41617e
mov     ax, bp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_10]
push    ebx
mov     ebx, [esp+4+arg_8]
push    esi
mov     si, [esp+8+arg_c]
push    edi
push    0
push    eax
push    esi
push    ebx
call    sub_4160e0
mov     di, ax
add     esp, 10h
push    edi
push    esi
push    ebx
call    sub_416150
mov     ecx, [esp+18h+arg_18]
mov     edx, [esp+18h+arg_14]
mov     [ecx], ax
add     esp, 0ch
mov     eax, [esp+0ch+arg_1c]
push    0
sub     di, si
push    0
push    eax
mov     [eax], edx
mov     eax, [esp+18h+arg_4]
push    0
mov     ecx, [esp+1ch+arg_0]
push    0
push    edi
push    esi
push    eax
push    ecx
call    sub_4170d0
add     esp, 24h
pop     edi
pop     esi
pop     ebx
retn
mov     ax, [esp+arg_0]
push    esi
mov     ecx, [esp+4+arg_8]
push    edi
mov     di, [ecx]
cmp     ax, di
jle     short loc_416291
mov     esi, [esp+8+arg_c]
mov     edx, [esp+8+arg_4]
cmp     [esi], edx
jge     short loc_416291
test    ax, ax
jz      short loc_416291
test    edx, edx
jz      short loc_416291
inc     di
mov     [ecx], di
cmp     ax, di
jnz     short loc_41626b
mov     eax, edx
pop     edi
sub     eax, [esi]
mov     [esi], edx
pop     esi
retn
movsx   ecx, ax
shl     edx, 0ah
mov     eax, edx
cdq
idiv    ecx
movsx   edx, di
imul    eax, edx
add     eax, 200h
sar     eax, 0ah
mov     ecx, eax
sub     eax, [esi]
jns     short loc_41628c
xor     eax, eax
pop     edi
mov     [esi], ecx
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+56h]
test    ecx, ecx
jz      short loc_4162b8
mov     eax, [esp+extra]
push    eax
push    ecx
call    ds:settextcharacterextra
retn
xor     eax, eax
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_24]
push    edi
push    ebp
mov     eax, esi
and     al, 3
cmp     al, 2
jnz     short loc_4162ee
mov     ebx, [esp+18h+arg_10]
push    1
mov     edi, [esp+1ch+lpstring]
push    ebx
push    0
push    edi
call    sub_4160e0
mov     bx, ax
add     esp, 10h
jmp     short loc_4162f7
mov     bx, word ptr [esp+18h+arg_10]
mov     edi, [esp+18h+lpstring]
test    bx, bx
jle     loc_41646b
and     esi, 2
test    bx, bx
mov     [esp+18h+var_4], esi
mov     esi, [esp+18h+x]
jle     loc_4163b0
cmp     byte ptr [edi], 20h
jnz     loc_4163b0
xor     ebp, ebp
mov     [esp+18h+extra], ebp
cmp     [esp+18h+var_4], ebp
jz      short loc_416362
cmp     bx, 1
jl      short loc_416362
mov     eax, [esp+18h+arg_2c]
mov     ecx, [esp+18h+arg_28]
mov     edx, [esp+18h+arg_20]
push    eax
mov     eax, [esp+1ch+arg_1c]
push    ecx
push    edx
mov     ebp, 0ffffffffh
push    eax
call    sub_416230
add     esp, 10h
push    eax
mov     eax, [esp+1ch+arg_0]
push    eax
call    sub_4162a0
mov     [esp+20h+extra], eax
add     esp, 8
dec     bx
mov     eax, [esp+18h+arg_18]
mov     ecx, [esp+18h+y]
push    eax
mov     edx, [esp+1ch+arg_0]
push    1
push    edi
push    ecx
push    esi
inc     edi
push    edx
call    sub_4157f0
dec     word ptr [esp+30h+arg_14]
add     esp, 18h
mov     esi, eax
cmp     ebp, 0ffffffffh
jnz     short loc_4163a0
mov     eax, [esp+18h+extra]
mov     ecx, [esp+18h+arg_0]
push    eax
push    ecx
call    sub_4162a0
add     esp, 8
jmp     short loc_4163a7
test    bx, bx
jle     short loc_4163b0
add     esi, ebp
test    bx, bx
jg      loc_416314
mov     word ptr [esp+18h+extra], 0ffffh
cmp     word ptr [esp+18h+arg_14], 0
jle     short loc_4163d6
mov     eax, [esp+18h+arg_14]
push    0
push    eax
push    0
push    edi
call    sub_416f80
mov     word ptr [esp+28h+extra], ax
add     esp, 10h
xor     bp, bp
test    bx, bx
jle     short loc_416418
push    0
push    ebx
push    0
push    edi
call    sub_416f80
mov     bp, ax
mov     ecx, [esp+28h+y]
mov     eax, [esp+28h+arg_18]
add     esp, 10h
mov     edx, [esp+18h+arg_0]
push    eax
push    ebp
push    edi
push    ecx
push    esi
sub     bx, bp
push    edx
call    sub_4157f0
sub     word ptr [esp+30h+arg_14], bp
add     esp, 18h
movsx   ecx, bp
mov     esi, eax
add     edi, ecx
cmp     [esp+18h+var_4], 0
jz      short loc_416458
test    bx, bx
jg      short loc_416435
jnz     short loc_416458
cmp     word ptr [esp+18h+arg_14], 0
jle     short loc_416458
cmp     word ptr [esp+18h+extra], bp
jnz     short loc_416458
cmp     byte ptr [edi], 20h
jz      short loc_416458
mov     eax, [esp+18h+arg_2c]
mov     ecx, [esp+18h+arg_28]
mov     edx, [esp+18h+arg_20]
push    eax
mov     eax, [esp+1ch+arg_1c]
push    ecx
push    edx
push    eax
call    sub_416230
add     esp, 10h
add     esi, eax
test    bx, bx
jg      loc_416314
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     esi, [esp+18h+x]
pop     ebp
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ecx, [esp+arg_0]
sub     esp, 108h
add     ecx, 10h
push    ebx
lea     edx, [esp+10ch+rcdst]
push    esi
push    edi
mov     eax, [ecx]
push    ebp
mov     ebx, [ecx+4]
mov     ebp, [ecx+8]
mov     [edx], eax
mov     eax, [ecx+0ch]
mov     [edx+4], ebx
mov     ecx, [esp+118h+arg_0]
mov     [edx+8], ebp
push    ecx
mov     [edx+0ch], eax
mov     [esp+11ch+var_e8], 0
call    sub_419f10
add     [esp+11ch+rcdst.bottom], eax
mov     eax, [esp+11ch+lprcsrc2]
add     esp, 4
test    eax, eax
jz      short loc_4164eb
push    eax
lea     eax, [esp+11ch+rcdst]
push    eax
lea     eax, [esp+120h+rcdst]
push    eax
call    ds:intersectrect
test    eax, eax
jz      loc_416c8f
mov     eax, [esp+118h+arg_0]
cmp     word ptr [eax+2ah], 0
jnz     short loc_41650c
mov     ax, [eax+6ch]
cmp     ax, 4
jz      short loc_41650c
test    ax, ax
jnz     loc_416c8f
mov     eax, [esp+118h+arg_0]
push    eax
call    sub_415000
xor     cx, cx
mov     eax, [esp+11ch+arg_0]
add     esp, 4
mov     edx, [eax+3ah]
mov     ax, [eax+3eh]
mov     [esp+118h+var_c8], edx
test    ax, ax
jle     short loc_41654f
mov     esi, [esp+118h+rcdst.top]
mov     edx, [esp+118h+var_c8]
cmp     [edx+2], esi
jg      short loc_41654f
inc     cx
add     [esp+118h+var_c8], 0eh
cmp     cx, ax
jl      short loc_416536
test    cx, cx
jle     short loc_41655b
sub     [esp+118h+var_c8], 0eh
dec     cx
sub     ax, cx
mov     edx, [esp+118h+arg_0]
mov     [esp+118h+var_f6], ax
mov     ecx, [edx+26h]
mov     ebx, [edx+30h]
mov     ebp, [esp+118h+var_c8]
movsx   eax, word ptr [edx+34h]
mov     [esp+118h+var_ec], ecx
lea     ecx, [eax+eax*4]
mov     ax, [ebp+0]
lea     edx, [ebx+ecx*2-0ah]
mov     ecx, [esp+118h+arg_0]
push    eax
mov     [esp+11ch+var_d0], edx
push    ecx
call    sub_416d20
movsx   ecx, ax
lea     edx, [ecx+ecx*4]
add     esp, 8
xor     eax, eax
mov     al, [ebx+edx*2+8]
lea     ebx, [ebx+edx*2]
and     eax, 1
cmp     ebx, [esp+118h+var_d0]
mov     [esp+118h+var_e4], eax
jb      short loc_4165c1
mov     word ptr [esp+118h+var_104+2], 0ffffh
jmp     short loc_4165ca
mov     ax, [ebx+0ah]
mov     word ptr [esp+118h+var_104+2], ax
mov     eax, [esp+118h+arg_0]
push    eax
call    sub_41a480
mov     eax, [esp+11ch+arg_0]
add     esp, 4
cmp     dword ptr [eax+56h], 0
jnz     short loc_4165fb
push    eax
call    sub_415050
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
mov     eax, [esp+118h+arg_0]
cmp     dword ptr [eax+5eh], 0
jz      short loc_416616
mov     eax, ds:hwnd
mov     ebp, ds:hidecaret
push    eax
call    ebp
mov     eax, [esp+118h+arg_0]
mov     ax, [eax+6ch]
cmp     ax, 4
jz      short loc_41662c
test    ax, ax
jnz     short loc_416645
mov     eax, [esp+118h+arg_0]
lea     edx, [esp+118h+rcdst]
mov     ecx, [eax+76h]
push    ecx
push    edx
push    eax
call    sub_415af0
add     esp, 0ch
mov     eax, [esp+118h+arg_0]
push    eax
call    sub_417ea0
mov     eax, [esp+11ch+arg_0]
lea     ecx, [esp+11ch+var_1c]
add     esp, 4
push    ebx
push    eax
push    ecx
call    sub_419280
lea     edi, [esp+124h+var_38]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+118h+var_38]
lea     edi, [esp+118h+var_54]
mov     ecx, 7
rep movsd
cmp     [esp+118h+var_f6], 0
jle     loc_416c25
mov     eax, [esp+118h+rcdst.bottom]
mov     edx, [esp+118h+var_c8]
cmp     [edx+2], eax
jge     loc_416c25
mov     [esp+118h+var_e8], 0
mov     dx, [edx]
test    dx, dx
jz      short loc_4166db
mov     eax, [esp+118h+arg_0]
mov     esi, 0
mov     ecx, [eax+22h]
mov     ebp, [ecx]
movsx   eax, dx
cmp     byte ptr [ebp+eax-1], 0dh
jnz     short loc_4166e0
mov     esi, 1
lea     eax, [esp+118h+var_a4]
mov     ecx, [esp+118h+arg_0]
push    eax
push    edx
push    ecx
call    sub_416d60
mov     edx, [esp+124h+var_c8]
add     esp, 0ch
mov     ax, [edx]
add     edx, 0eh
mov     word ptr [esp+118h+var_104], ax
mov     ecx, [esp+118h+arg_0]
mov     [esp+118h+var_106], ax
mov     [esp+118h+var_bc], edx
mov     ax, [edx]
mov     word ptr [esp+118h+var_fe], ax
mov     ax, [ecx+2ah]
cmp     word ptr [esp+118h+var_fe], ax
jle     short loc_41672d
mov     word ptr [esp+118h+var_fe], ax
mov     edx, [esp+118h+var_c8]
mov     [esp+118h+var_f0], 0
mov     ecx, [edx+6]
mov     ebp, [edx+0ah]
sub     ebp, [ebx+2]
mov     [esp+118h+x], ecx
cmp     [esp+118h+var_a4], 3
jnz     loc_4167f7
cmp     word ptr [esp+118h+var_fe], ax
jge     loc_4167f7
cmp     word ptr [esp+118h+var_fe], 0
jz      short loc_41677d
mov     eax, [esp+118h+arg_0]
mov     ecx, [eax+22h]
mov     edx, [ecx]
movsx   eax, word ptr [esp+118h+var_fe]
cmp     byte ptr [edx+eax-1], 0dh
jz      short loc_4167f7
mov     eax, [esp+118h+var_fe]
mov     ecx, [esp+118h+var_104]
mov     edx, [esp+118h+var_ec]
push    eax
mov     [esp+11ch+var_f0], 2
push    ecx
push    edx
call    sub_4160b0
mov     [esp+124h+var_100], ax
mov     eax, [esp+124h+var_9a]
sub     eax, [esp+124h+var_9e]
add     eax, [esp+124h+x]
add     esp, 0ch
test    esi, esi
mov     [esp+118h+var_c0], eax
jz      short loc_4167c3
mov     eax, [esp+118h+var_a2]
sub     [esp+118h+var_c0], eax
mov     eax, [esp+118h+var_fe]
push    0
mov     ecx, [esp+11ch+var_104]
push    eax
mov     edx, [esp+120h+var_ec]
push    ecx
mov     [esp+124h+var_d8], 0
mov     word ptr [esp+124h+var_fe+2], 0ffffh
mov     word ptr [esp+124h+var_fa], 0
push    edx
call    sub_4160e0
mov     word ptr [esp+128h+var_fa+2], ax
add     esp, 10h
mov     ecx, [esp+118h+var_9e]
test    esi, esi
jz      short loc_416807
mov     ecx, [esp+118h+var_a2]
add     ecx, [esp+118h+var_9e]
mov     edx, [esp+118h+var_c8]
mov     eax, [edx+6]
sub     eax, ecx
mov     cx, word ptr [esp+118h+var_104]
mov     [esp+118h+var_c8], eax
cmp     word ptr [esp+118h+var_fe], cx
jle     loc_416b6a
mov     eax, [esp+118h+var_f0]
mov     [esp+118h+var_b8], eax
and     eax, 2
mov     [esp+118h+var_e0], eax
cmp     [esp+118h+var_e0], 0
jz      loc_4168d9
cmp     [esp+118h+var_100], 0ffffh
jnz     loc_4168d9
cmp     word ptr [esp+118h+var_fe+2], 0ffffh
jnz     loc_4168d9
lea     eax, [esp+118h+var_dc]
lea     ecx, [esp+118h+var_fe+2]
push    eax
push    ecx
mov     eax, [esp+120h+var_c0]
mov     ecx, [esp+120h+var_fe]
sub     eax, [esp+120h+x]
mov     edx, [esp+120h+var_104]
push    eax
push    ecx
mov     eax, [esp+128h+var_ec]
push    edx
lea     ecx, [esp+12ch+var_a4]
push    eax
mov     edx, [esp+130h+arg_0]
push    ecx
push    edx
call    sub_4161d0
mov     cx, word ptr [esp+138h+var_104+2]
add     esp, 20h
cmp     word ptr [esp+118h+var_fe], cx
jl      short loc_4168d9
cmp     cx, 0ffffh
jz      short loc_4168d9
mov     eax, [esp+118h+arg_0]
push    ebx
lea     ecx, [esp+11ch+var_38]
push    eax
push    ecx
call    sub_419280
lea     edi, [esp+124h+ho]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
mov     ecx, [esp+118h+ho]
push    ecx
call    ds:deleteobject
mov     ax, word ptr [esp+118h+var_104]
cmp     ax, word ptr [esp+118h+var_104+2]
jnz     loc_416a46
cmp     [esp+118h+var_e4], 0
jnz     loc_4169bc
cmp     [esp+118h+var_e0], 0
jz      short loc_416903
cmp     [esp+118h+var_100], 0ffffh
jz      short loc_416944
test    byte ptr [esp+118h+var_f0], 4
jnz     short loc_416944
mov     ax, word ptr [esp+118h+var_104]
push    ebx
sub     ax, [esp+11ch+var_106]
mov     ecx, [esp+11ch+x]
mov     edx, [esp+11ch+arg_0]
push    eax
movsx   eax, [esp+120h+var_106]
add     eax, [esp+120h+var_ec]
push    eax
push    ebp
push    ecx
push    edx
call    sub_4157f0
mov     [esp+130h+var_e8], 0
mov     [esp+130h+x], eax
add     esp, 18h
jmp     short loc_4169bc
mov     ax, word ptr [esp+118h+var_104]
mov     ecx, [esp+118h+var_f0]
cmp     word ptr [esp+118h+var_fa+2], ax
jle     short loc_416957
or      ecx, 1
cmp     [esp+118h+var_100], 0ffffh
jz      short loc_416962
and     ecx, 0fffffffdh
lea     eax, [esp+118h+var_d4]
lea     edx, [esp+118h+var_e8]
lea     esi, [esp+118h+var_d8]
push    eax
lea     eax, [esp+11ch+var_fa]
push    edx
mov     edx, [esp+120h+var_fe+2]
push    esi
push    eax
push    ecx
mov     ax, word ptr [esp+12ch+var_fe]
mov     ecx, [esp+12ch+var_dc]
sub     ax, [esp+12ch+var_106]
push    ecx
mov     ecx, [esp+130h+x]
push    edx
mov     edx, [esp+134h+arg_0]
push    ebx
push    eax
mov     ax, word ptr [esp+13ch+var_104]
sub     ax, [esp+13ch+var_106]
push    eax
movsx   eax, [esp+140h+var_106]
add     eax, [esp+140h+var_ec]
push    eax
push    ebp
push    ecx
push    edx
call    sub_4162c0
mov     [esp+150h+x], eax
add     esp, 38h
mov     eax, [ebx+2]
test    eax, eax
jz      short loc_4169c5
add     ebp, eax
mov     ax, word ptr [esp+118h+var_104]
add     ebx, 0ah
mov     [esp+118h+var_106], ax
push    ebx
mov     ecx, [esp+11ch+arg_0]
lea     eax, [esp+11ch+var_1c]
push    ecx
push    eax
call    sub_419280
lea     edi, [esp+124h+var_8c]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
mov     ecx, [esp+118h+var_8c]
push    ecx
call    ds:deleteobject
mov     eax, [ebx+2]
test    eax, eax
jz      short loc_416a12
sub     ebp, eax
xor     eax, eax
mov     al, [ebx+8]
and     eax, 1
cmp     ebx, [esp+118h+var_d0]
mov     [esp+118h+var_e4], eax
jb      short loc_416a2d
mov     word ptr [esp+118h+var_104+2], 0ffffh
jmp     short loc_416a36
mov     ax, [ebx+0ah]
mov     word ptr [esp+118h+var_104+2], ax
mov     ax, word ptr [esp+118h+var_104]
cmp     ax, word ptr [esp+118h+var_104+2]
jz      loc_4168e9
mov     ecx, [esp+118h+var_ec]
movsx   eax, word ptr [esp+118h+var_104]
cmp     byte ptr [eax+ecx], 9
jnz     loc_416b53
cmp     [esp+118h+var_e4], 0
jnz     short loc_416a98
mov     ax, word ptr [esp+118h+var_104]
push    ebx
sub     ax, [esp+11ch+var_106]
mov     ecx, [esp+11ch+x]
mov     edx, [esp+11ch+arg_0]
push    eax
movsx   eax, [esp+120h+var_106]
add     eax, [esp+120h+var_ec]
push    eax
push    ebp
push    ecx
push    edx
call    sub_4157f0
mov     [esp+130h+var_e8], 0
mov     [esp+130h+x], eax
add     esp, 18h
mov     si, word ptr [esp+118h+var_104]
lea     ecx, [esp+118h+var_c4]
inc     si
push    ecx
mov     [esp+11ch+var_106], si
lea     eax, [esp+11ch+var_cc]
lea     ecx, [esp+11ch+var_a4]
push    eax
mov     eax, [esp+120h+x]
sub     eax, [esp+120h+var_c8]
push    eax
push    ecx
call    sub_416ca0
add     esp, 10h
test    eax, eax
jz      short loc_416b03
xor     eax, eax
cmp     [esp+118h+var_c4], eax
jz      short loc_416af3
mov     eax, [esp+118h+var_cc]
mov     ecx, [esp+118h+arg_0]
sub     eax, [esp+118h+x]
push    eax
mov     ax, word ptr [esp+11ch+var_fe]
sub     ax, si
push    eax
push    esi
push    ecx
call    sub_417d90
add     esp, 10h
mov     ecx, [esp+118h+var_cc]
sub     ecx, eax
add     ecx, [esp+118h+var_c8]
mov     [esp+118h+x], ecx
jmp     short loc_416b34
cmp     [esp+118h+var_e4], 0
jnz     short loc_416b34
mov     ecx, [esp+118h+x]
push    ebx
mov     eax, [esp+11ch+arg_0]
push    1
push    offset asc_4ad07c
push    ebp
push    ecx
push    eax
call    sub_4157f0
mov     [esp+130h+var_e8], 0
mov     [esp+130h+x], eax
add     esp, 18h
cmp     [esp+118h+var_e0], 0
jz      short loc_416b53
mov     eax, [esp+118h+var_fe]
mov     ecx, [esp+118h+var_ec]
push    eax
push    esi
push    ecx
call    sub_4160b0
mov     [esp+124h+var_100], ax
add     esp, 0ch
mov     ax, word ptr [esp+118h+var_104]
inc     ax
mov     word ptr [esp+118h+var_104], ax
cmp     word ptr [esp+118h+var_fe], ax
jg      loc_416833
cmp     [esp+118h+var_e4], 0
jnz     loc_416c0c
cmp     [esp+118h+var_b8], 0
jz      short loc_416bd8
lea     eax, [esp+118h+var_d4]
lea     ecx, [esp+118h+var_e8]
lea     edx, [esp+118h+var_d8]
push    eax
lea     eax, [esp+11ch+var_fa]
push    ecx
mov     ecx, [esp+120h+var_b8]
push    edx
mov     edx, [esp+124h+var_dc]
push    eax
mov     eax, [esp+128h+var_fe+2]
push    ecx
push    edx
push    eax
mov     ax, word ptr [esp+134h+var_fe]
push    ebx
sub     ax, [esp+138h+var_106]
push    eax
mov     ax, word ptr [esp+13ch+var_104]
mov     ecx, [esp+13ch+x]
sub     ax, [esp+13ch+var_106]
mov     edx, [esp+13ch+arg_0]
push    eax
movsx   eax, [esp+140h+var_106]
add     eax, [esp+140h+var_ec]
push    eax
push    ebp
push    ecx
push    edx
call    sub_4162c0
add     esp, 38h
jmp     short loc_416c0c
mov     ax, word ptr [esp+118h+var_104]
push    ebx
sub     ax, [esp+11ch+var_106]
mov     ecx, [esp+11ch+x]
mov     edx, [esp+11ch+arg_0]
push    eax
movsx   eax, [esp+120h+var_106]
add     eax, [esp+120h+var_ec]
push    eax
push    ebp
push    ecx
push    edx
call    sub_4157f0
mov     [esp+130h+var_e8], 0
add     esp, 18h
dec     [esp+118h+var_f6]
mov     edx, [esp+118h+var_bc]
cmp     [esp+118h+var_f6], 0
mov     [esp+118h+var_c8], edx
jg      loc_41669f
lea     eax, [esp+118h+var_54]
mov     ecx, [esp+118h+arg_0]
push    eax
mov     edx, [ecx+56h]
lea     eax, [esp+11ch+var_1c]
push    edx
push    eax
call    sub_449700
lea     edi, [esp+124h+var_38]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
mov     ecx, [esp+118h+var_38]
push    ecx
call    ds:deleteobject
mov     ecx, [esp+118h+arg_0]
cmp     dword ptr [ecx+5eh], 0
jz      short loc_416c7f
mov     eax, ds:hwnd
push    eax
call    ds:showcaret
mov     eax, [esp+118h+arg_0]
push    eax
call    sub_415050
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     di, [esi+0eh]
mov     ebx, [esp+0ch+arg_4]
mov     edx, [esi+10h]
sub     ebx, edx
add     ebx, 3
test    di, di
jle     short loc_416d0f
mov     eax, [esi+14h]
mov     eax, [eax]
mov     ecx, [eax]
test    ecx, ecx
jg      short loc_416cc9
neg     ecx
cmp     ebx, ecx
jle     short loc_416cd7
dec     di
add     eax, 4
test    di, di
jg      short loc_416cc1
test    di, di
jz      short loc_416d0f
mov     ecx, [eax]
mov     eax, ecx
test    ecx, ecx
jg      short loc_416ce8
mov     eax, ecx
neg     eax
add     edx, eax
cmp     [esi+0ah], edx
jle     short loc_416d0f
mov     eax, [esp+0ch+arg_c]
test    ecx, ecx
mov     ecx, 1
jl      short loc_416cfe
xor     ecx, ecx
mov     [eax], ecx
mov     eax, [esp+0ch+arg_8]
pop     edi
pop     esi
pop     ebx
mov     [eax], edx
mov     eax, 1
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+2ch]
movsx   eax, word ptr [eax+34h]
mov     edx, [ecx]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*2-0ah]
mov     cx, [esp+arg_4]
cmp     [eax], cx
jle     short loc_416d46
sub     eax, 0ah
cmp     [eax], cx
jg      short loc_416d3e
sub     eax, edx
mov     ecx, 0ah
cdq
idiv    ecx
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_415000
mov     ax, [esp+8+arg_4]
add     esp, 4
push    eax
push    esi
call    sub_416d20
mov     ecx, [esp+0ch+arg_8]
add     esp, 8
movsx   eax, ax
push    ecx
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, [esi+30h]
push    eax
push    esi
call    sub_419260
add     esp, 0ch
push    esi
call    sub_415050
add     esp, 4
pop     esi
retn
mov     eax, [esp+arg_0]
movsx   edx, word ptr [eax+3eh]
mov     ecx, edx
mov     eax, [eax+3ah]
shl     edx, 3
sub     edx, ecx
mov     cx, [esp+arg_4]
lea     eax, [eax+edx*2-0eh]
cmp     [eax], cx
jle     short locret_416dd8
sub     eax, 0eh
cmp     [eax], cx
jg      short loc_416dd0
retn
sub     esp, 64h
xor     eax, eax
mov     edx, [esp+64h+arg_0]
push    ebx
mov     [esp+68h+hdc], eax
push    esi
mov     [esp+6ch+var_64], eax
push    edi
push    ebp
cmp     [edx+56h], eax
jnz     short loc_416e0c
push    eax
call    ds:getdc
mov     edx, [esp+74h+arg_0]
mov     [esp+74h+hdc], eax
mov     [edx+56h], eax
mov     eax, [esp+74h+arg_4]
mov     edx, [esp+74h+arg_0]
push    eax
push    edx
call    sub_416d20
mov     edx, [esp+7ch+arg_0]
add     esp, 8
movsx   ebx, ax
movsx   ecx, word ptr [edx+34h]
lea     ebx, [ebx+ebx*4]
mov     eax, [edx+30h]
add     ebx, ebx
lea     ebp, [ecx+ecx*4]
mov     [esp+74h+var_60], 0
add     ebx, [edx+30h]
lea     ecx, [eax+ebp*2-0ah]
cmp     [esp+74h+arg_8], 0
mov     [esp+74h+var_5c], ecx
jle     loc_416f0d
cmp     [esp+74h+var_5c], ebx
jbe     short loc_416e72
mov     bp, [ebx+0ah]
sub     bp, word ptr [esp+74h+arg_4]
cmp     bp, [esp+74h+arg_8]
jle     short loc_416e7a
mov     bp, [esp+74h+arg_8]
test    byte ptr [ebx+8], 1
jnz     short loc_416eee
mov     edx, [esp+74h+arg_0]
push    ebx
lea     eax, [esp+78h+var_1c]
push    edx
push    eax
call    sub_419280
lea     edi, [esp+80h+ho]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
cmp     [esp+74h+var_64], 0
jz      short loc_416eb4
mov     eax, [esp+74h+ho]
push    eax
call    ds:deleteobject
jmp     short loc_416ecb
lea     esi, [esp+74h+ho]
lea     edi, [esp+74h+var_54]
mov     ecx, 7
rep movsd
mov     [esp+74h+var_64], 1
mov     edx, [esp+74h+arg_0]
push    ebp
movsx   ecx, word ptr [esp+78h+arg_4]
mov     eax, [edx+26h]
add     eax, ecx
mov     ecx, [edx+56h]
push    eax
push    ecx
call    sub_449d50
add     [esp+80h+var_60], eax
add     esp, 0ch
sub     [esp+74h+arg_8], bp
add     ebx, 0ah
add     word ptr [esp+74h+arg_4], bp
cmp     [esp+74h+arg_8], 0
jg      loc_416e59
cmp     [esp+74h+var_64], 0
jz      short loc_416f46
lea     eax, [esp+74h+var_54]
mov     edx, [esp+74h+arg_0]
push    eax
mov     ecx, [edx+56h]
lea     eax, [esp+78h+var_1c]
push    ecx
push    eax
call    sub_449700
lea     edi, [esp+80h+ho]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
mov     ecx, [esp+74h+ho]
push    ecx
call    ds:deleteobject
cmp     [esp+74h+hdc], 0
jz      short loc_416f65
mov     eax, [esp+74h+hdc]
push    eax
push    0
call    ds:releasedc
mov     edx, [esp+74h+arg_0]
mov     dword ptr [edx+56h], 0
mov     eax, [esp+74h+var_60]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     ax, [esp+arg_4]
push    esi
push    edi
xor     ecx, ecx
mov     di, [esp+8+arg_8]
mov     esi, [esp+8+arg_0]
cmp     di, ax
jle     short loc_416fac
movsx   edx, ax
cmp     byte ptr [edx+esi], 20h
jnz     short loc_416fac
inc     ax
mov     ecx, 1
cmp     di, ax
jg      short loc_416f97
test    ecx, ecx
mov     cx, [esp+8+arg_c]
jz      short loc_416fba
test    cl, 10h
jnz     short loc_416fe9
cmp     di, ax
jle     short loc_416fcf
movsx   edx, ax
cmp     byte ptr [edx+esi], 20h
jz      short loc_416fcf
inc     ax
cmp     di, ax
jg      short loc_416fbf
test    cl, 2
jz      short loc_416fe9
cmp     di, ax
jle     short loc_416fe9
movsx   ecx, ax
cmp     byte ptr [ecx+esi], 20h
jnz     short loc_416fe9
inc     ax
cmp     di, ax
jg      short loc_416fd9
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 8
movsx   ecx, word ptr [esp+8+arg_4]
push    ebx
push    esi
mov     si, [esp+10h+arg_8]
push    edi
push    ebp
mov     ebx, [eax+26h]
add     ebx, ecx
xor     ebp, ebp
xor     eax, eax
cmp     si, ax
jz      loc_4170c4
mov     edi, [esp+18h+arg_10]
mov     [esp+18h+var_6], bp
mov     [esp+18h+var_4], eax
cmp     bp, si
jge     short loc_41704e
movsx   eax, bp
cmp     byte ptr [eax+ebx], 20h
jnz     short loc_417039
inc     bp
cmp     bp, si
jl      short loc_417029
cmp     bp, si
jge     short loc_41704e
movsx   eax, bp
cmp     byte ptr [eax+ebx], 20h
jz      short loc_41704e
inc     bp
cmp     bp, si
jl      short loc_41703e
mov     eax, [esp+18h+arg_4]
push    ebp
mov     ecx, [esp+1ch+arg_0]
push    eax
push    ecx
call    sub_416de0
add     esp, 0ch
cmp     bp, si
jge     short loc_41706a
cmp     [edi], eax
jg      short loc_41701b
cmp     [edi], eax
jge     short loc_417077
mov     bp, [esp+18h+var_6]
mov     eax, [esp+18h+var_4]
test    bp, bp
jz      short loc_417083
cmp     [esp+18h+arg_c], 0
jz      short loc_4170bf
cmp     bp, si
jge     short loc_4170aa
cmp     [edi], eax
jle     short loc_4170ac
inc     bp
mov     ecx, [esp+18h+arg_0]
mov     [esp+18h+var_4], eax
push    ebp
mov     eax, [esp+1ch+arg_4]
push    eax
push    ecx
call    sub_416de0
add     esp, 0ch
cmp     bp, si
jl      short loc_417088
cmp     [edi], eax
jge     short loc_4170bf
cmp     bp, 1
mov     eax, [esp+18h+var_4]
jle     short loc_4170bc
dec     bp
jmp     short loc_4170bf
xor     bp, bp
sub     [edi], eax
mov     ax, bp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_14]
sub     esp, 18h
and     eax, 1
push    ebx
mov     ecx, [esp+1ch+arg_0]
push    esi
mov     [esp+20h+var_8], eax
push    edi
mov     ax, [ecx+2ah]
push    ebp
cmp     [esp+28h+arg_8], ax
jle     short loc_4170f6
mov     [esp+28h+arg_8], ax
mov     si, [esp+28h+arg_8]
mov     ecx, [esp+28h+arg_18]
test    si, si
mov     edx, [esp+28h+arg_4]
mov     eax, [ecx]
mov     ecx, [edx+6]
mov     [esp+28h+var_18], eax
mov     [esp+28h+var_10], ecx
jz      short loc_41712d
mov     eax, [esp+28h+arg_0]
mov     ecx, [eax+22h]
mov     edx, [ecx]
movsx   eax, si
cmp     byte ptr [edx+eax-1], 0dh
mov     eax, 0
jnz     short loc_417132
mov     eax, 1
test    eax, eax
jz      short loc_417141
mov     eax, [esp+28h+arg_4]
mov     ecx, [eax+2]
add     [esp+28h+var_10], ecx
xor     bp, bp
mov     eax, [esp+28h+arg_0]
movsx   ebx, si
add     ebx, [eax+26h]
cmp     [esp+28h+arg_c], bp
jle     short loc_41716c
movsx   eax, bp
mov     al, [eax+ebx]
cmp     al, 0dh
jz      short loc_41716c
cmp     al, 9
jz      short loc_41716c
inc     bp
cmp     bp, [esp+28h+arg_c]
jl      short loc_417155
mov     eax, [esp+28h+var_18]
lea     ecx, [esp+28h+var_18]
mov     edx, [esp+28h+var_8]
push    ecx
mov     [esp+2ch+var_4], eax
push    edx
mov     eax, [esp+30h+arg_0]
push    ebp
push    esi
push    eax
call    sub_416ff0
mov     di, ax
add     esp, 14h
cmp     bp, [esp+28h+arg_c]
jz      loc_4172cf
cmp     bp, di
jg      loc_4172cf
movsx   eax, di
lea     ebp, [eax+ebx]
cmp     byte ptr [ebp+0], 0dh
jz      loc_4172b3
lea     eax, [esp+28h+var_c]
lea     ecx, [esp+28h+var_14]
mov     edx, [esp+28h+var_10]
push    eax
mov     eax, [esp+2ch+arg_4]
push    ecx
push    edx
push    eax
call    sub_416ca0
add     esp, 10h
test    eax, eax
jz      loc_417276
mov     ecx, [esp+28h+arg_18]
mov     ebx, [esp+28h+var_10]
mov     eax, [ecx]
lea     ecx, [esp+28h+var_14]
sub     eax, [esp+28h+var_18]
mov     edx, [esp+28h+arg_4]
add     ebx, eax
lea     eax, [esp+28h+var_c]
push    eax
push    ecx
push    ebx
push    edx
call    sub_416ca0
add     esp, 10h
test    eax, eax
jz      loc_4173cb
cmp     [esp+28h+var_c], 0
jz      short loc_41723d
mov     dx, [esp+28h+arg_c]
lea     ecx, [esi+edi]
inc     cx
mov     eax, [esp+28h+var_14]
sub     dx, di
sub     eax, ebx
add     dx, [esp+28h+arg_10]
push    eax
dec     dx
push    edx
push    ecx
mov     ecx, [esp+34h+arg_0]
push    ecx
call    sub_417d90
sub     [esp+38h+var_14], eax
add     esp, 10h
mov     ecx, [esp+28h+var_10]
sub     [esp+28h+var_14], ecx
cmp     [esp+28h+var_8], 0
jz      short loc_417258
mov     eax, [esp+28h+var_14]
mov     ecx, [esp+28h+arg_18]
cmp     [ecx], eax
jl      short loc_4172ba
mov     ecx, [esp+28h+arg_18]
lea     esi, [edi+esi+1]
inc     di
mov     eax, [ecx]
sub     [esp+28h+arg_c], di
sub     eax, [esp+28h+var_14]
mov     [esp+28h+var_18], eax
jmp     loc_417141
mov     ax, di
mov     bl, [ebp+0]
add     ax, si
push    1
mov     ecx, [esp+2ch+arg_0]
push    eax
push    ecx
mov     byte ptr [ebp+0], 20h
call    sub_416de0
add     esp, 0ch
mov     [ebp+0], bl
cmp     eax, [esp+28h+var_18]
jg      loc_4173cb
inc     di
sub     [esp+28h+var_18], eax
add     si, di
sub     [esp+28h+arg_c], di
jmp     loc_417141
inc     di
jmp     loc_4173cb
mov     eax, [esp+28h+var_18]
mov     ecx, [esp+28h+arg_18]
pop     ebp
mov     [ecx], eax
lea     eax, [esi+edi]
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
test    di, di
jnz     short loc_4172f8
cmp     [esp+28h+arg_c], 0
jle     short loc_4172f8
cmp     si, [esp+28h+arg_8]
jnz     short loc_4172f8
inc     di
mov     eax, [esp+28h+arg_0]
push    edi
push    esi
push    eax
call    sub_416de0
sub     [esp+34h+var_18], eax
add     esp, 0ch
cmp     [esp+28h+var_8], 0
jz      loc_4173b6
cmp     [esp+28h+arg_1c], 0
jz      loc_4173cb
cmp     word ptr [esp+28h+arg_20], 0
jz      loc_4173cb
mov     eax, [esp+28h+arg_4]
cmp     word ptr [eax], 3
jnz     loc_4173cb
mov     cx, word ptr [esp+28h+arg_20]
mov     eax, [esp+28h+arg_0]
cmp     [eax+2ah], cx
jle     loc_4173cb
test    cx, cx
jz      short loc_417351
mov     ecx, [eax+22h]
mov     edx, [ecx]
movsx   eax, word ptr [esp+28h+arg_20]
cmp     byte ptr [edx+eax-1], 0dh
jz      short loc_4173cb
mov     ax, word ptr [esp+28h+arg_20]
sub     ax, si
push    eax
push    edi
push    ebx
call    sub_4160b0
add     esp, 0ch
cmp     ax, 0ffffh
jnz     short loc_4173cb
mov     ecx, [esp+28h+arg_18]
mov     eax, [esp+28h+var_4]
lea     edx, [esp+28h+var_18]
mov     [esp+28h+var_18], eax
mov     ecx, [ecx]
mov     eax, [esp+28h+arg_14]
sub     ecx, [esp+28h+var_4]
and     eax, 2
add     bp, si
push    eax
push    edx
push    ecx
movsx   eax, si
mov     ecx, [esp+34h+arg_1c]
sub     ebx, eax
push    ecx
push    ebp
mov     ecx, [esp+3ch+arg_20]
mov     eax, [esp+3ch+arg_0]
push    ecx
push    esi
mov     ecx, [esp+44h+arg_4]
push    ebx
push    ecx
push    eax
call    sub_4173e0
mov     di, ax
add     esp, 28h
jmp     short loc_4173cb
cmp     bp, di
jle     short loc_4173cb
movsx   eax, di
cmp     byte ptr [eax+ebx], 20h
jnz     short loc_4173cb
inc     di
cmp     bp, di
jg      short loc_4173bb
mov     eax, [esp+28h+var_18]
mov     ecx, [esp+28h+arg_18]
pop     ebp
mov     [ecx], eax
lea     eax, [esi+edi]
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 10h
lea     eax, [esp+10h+var_8]
push    ebx
lea     ecx, [esp+14h+var_10]
push    esi
push    edi
push    ebp
push    eax
push    ecx
mov     ecx, [esp+28h+arg_18]
mov     eax, [esp+28h+arg_10]
sub     cx, [esp+28h+arg_1c]
movsx   edx, cx
mov     ecx, [esp+28h+arg_c]
push    edx
mov     edx, [esp+2ch+arg_8]
push    eax
mov     eax, [esp+30h+arg_4]
push    ecx
mov     ecx, [esp+34h+arg_0]
push    edx
push    eax
push    ecx
call    sub_4161d0
mov     si, word ptr [esp+40h+arg_c]
mov     edx, [esp+40h+arg_20]
mov     [esp+40h+var_4], 0
add     esp, 20h
mov     ecx, [edx]
mov     word ptr [esp+20h+var_10+2], 0
mov     [esp+20h+var_c], ecx
cmp     si, [esp+20h+arg_14]
jge     loc_4175fc
mov     ecx, [esp+20h+arg_8]
movsx   eax, si
cmp     byte ptr [eax+ecx], 20h
jnz     short loc_4174bc
xor     ebx, ebx
lea     edi, [esi+1]
cmp     di, [esp+20h+arg_14]
jg      short loc_41747f
lea     eax, [esp+20h+var_4]
lea     ecx, [esp+20h+var_10+2]
mov     edx, [esp+20h+var_8]
push    eax
mov     eax, [esp+24h+var_10]
push    ecx
push    edx
push    eax
call    sub_416230
add     esp, 10h
mov     ebx, eax
mov     bp, di
lea     eax, [esp+20h+var_c]
sub     bp, si
push    eax
mov     ecx, [esp+24h+arg_0]
push    1
push    ebp
push    esi
push    ecx
call    sub_416ff0
add     esp, 14h
cmp     ax, bp
jl      loc_41758c
cmp     ebx, [esp+20h+var_c]
jge     loc_41758c
mov     si, di
sub     [esp+20h+var_c], ebx
cmp     di, [esp+20h+arg_14]
jl      short loc_417448
cmp     si, [esp+20h+arg_14]
jge     loc_4175fc
mov     eax, [esp+20h+arg_10]
push    0
mov     ecx, [esp+24h+arg_8]
push    eax
push    esi
push    ecx
call    sub_416f80
mov     bx, ax
add     esp, 10h
mov     di, ax
sub     bx, si
mov     ax, bx
cmp     di, [esp+20h+arg_14]
jle     short loc_4174fa
mov     di, [esp+20h+arg_14]
mov     ax, di
sub     ax, si
lea     ecx, [esp+20h+var_c]
push    ecx
push    1
push    eax
push    esi
mov     eax, [esp+30h+arg_0]
push    eax
call    sub_416ff0
add     esp, 14h
cmp     ax, bx
jl      loc_4175a6
mov     si, di
cmp     di, [esp+20h+arg_14]
jl      short loc_417539
cmp     [esp+20h+arg_24], 0
jz      loc_41743d
cmp     di, [esp+20h+arg_14]
jnz     loc_41743d
mov     ecx, [esp+20h+arg_8]
movsx   eax, di
cmp     byte ptr [eax+ecx], 20h
jz      loc_41743d
mov     edi, [esp+20h+var_c]
lea     eax, [esp+20h+var_4]
lea     ecx, [esp+20h+var_10+2]
push    eax
mov     edx, [esp+24h+var_8]
push    ecx
mov     eax, [esp+28h+var_10]
push    edx
push    eax
call    sub_416230
sub     [esp+30h+var_c], eax
add     esp, 10h
cmp     [esp+20h+var_c], 0
jg      loc_41743d
cmp     [esp+20h+var_c], 0
mov     edx, [esp+20h+arg_20]
jnz     short loc_4175c0
mov     dword ptr [edx], 0
jmp     short loc_4175ec
sub     si, word ptr [esp+20h+arg_c]
mov     edx, [esp+20h+arg_20]
mov     ax, si
pop     ebp
pop     edi
mov     dword ptr [edx], 0
pop     esi
pop     ebx
add     esp, 10h
retn
sub     ax, word ptr [esp+20h+arg_c]
mov     ecx, [esp+20h+var_c]
add     ax, si
mov     edx, [esp+20h+arg_20]
pop     ebp
pop     edi
pop     esi
mov     [edx], ecx
pop     ebx
add     esp, 10h
retn
cmp     [esp+20h+arg_24], 0
mov     [edx], edi
jz      short loc_4175ec
cmp     si, word ptr [esp+20h+arg_c]
jle     short loc_4175ec
movsx   ecx, si
movsx   eax, word ptr [esp+20h+arg_c]
sub     ecx, eax
cmp     ecx, 1
jle     short loc_4175e2
dec     ecx
jmp     short loc_4175e4
xor     ecx, ecx
mov     si, word ptr [esp+20h+arg_c]
add     si, cx
mov     ax, si
sub     ax, word ptr [esp+20h+arg_c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+var_c]
mov     edx, [esp+20h+arg_20]
mov     [edx], eax
mov     ax, [esp+20h+arg_14]
sub     ax, word ptr [esp+20h+arg_c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 4ch
push    ebx
push    esi
mov     esi, [esp+54h+arg_0]
push    edi
push    ebp
push    esi
call    sub_419930
mov     [esp+60h+var_2c], eax
add     esp, 4
test    eax, eax
jz      short loc_417654
cmp     [esp+5ch+arg_c], 0
jnz     short loc_41764a
cmp     [esp+5ch+arg_8], 0
jz      short loc_417654
mov     [esp+5ch+var_24], 1
jmp     short loc_41765c
mov     [esp+5ch+var_24], 0
mov     [esp+5ch+var_20], 0ffffffffh
xor     eax, eax
mov     [esp+5ch+var_38], eax
mov     [esp+5ch+hmem], eax
cmp     word ptr [esi+2ah], 1388h
jle     short loc_417685
mov     [esp+5ch+var_34], 1
cmp     word ptr [esi+68h], 0ffffh
jz      short loc_41768d
mov     [esp+5ch+var_34], 0
cmp     [esp+5ch+var_34], 0
jz      short loc_4176a4
push    5
call    sub_40d4a0
mov     [esp+60h+var_28], eax
add     esp, 4
jmp     short loc_4176ac
mov     [esp+5ch+var_28], 0
mov     dword_4ad348, 0
push    esi
call    sub_415000
add     esp, 4
mov     ecx, [esi+3ah]
test    ecx, ecx
jz      short loc_4176d9
movsx   eax, word ptr [esi+3eh]
mov     edx, eax
shl     eax, 3
sub     eax, edx
mov     edx, [ecx+eax*2+2]
mov     [esp+5ch+var_20], edx
cmp     [esp+5ch+var_24], 0
jz      short loc_4176f6
movsx   eax, word ptr [esi+3eh]
mov     edx, eax
shl     eax, 3
sub     eax, edx
mov     eax, [ecx+eax*2+2]
sub     eax, [ecx+2]
mov     [esp+5ch+var_1c], eax
movsx   eax, word ptr [esi+68h]
cmp     eax, 0fffffffdh
jz      loc_41783c
cmp     eax, 0ffffffffh
jz      loc_4178af
cmp     eax, 7fffh
jz      loc_4178ba
cmp     [esp+5ch+var_2c], 0
jz      short loc_417748
mov     eax, [esi+92h]
mov     ecx, [eax]
push    ecx
call    sub_47d790
add     esp, 4
mov     ecx, [esi+14h]
sub     ecx, eax
cmp     dword ptr [esi+0ch], 7d00h
mov     [esi+4], ecx
jz      short loc_417748
mov     ecx, [esi+1ch]
sub     ecx, eax
mov     [esi+0ch], ecx
mov     eax, [esi+36h]
push    eax
call    sub_45bab0
mov     [esp+60h+hmem], eax
add     esp, 4
mov     ax, [esi+68h]
push    eax
push    esi
call    sub_416db0
add     esp, 8
mov     edi, eax
sub     eax, [esi+3ah]
mov     ecx, 0eh
cdq
idiv    ecx
mov     dx, [edi]
mov     [esp+5ch+var_4c], ax
mov     [esp+5ch+var_46], ax
mov     word ptr [esp+5ch+var_4a+2], dx
test    ax, ax
jle     short loc_417792
dec     [esp+5ch+var_4c]
sub     edi, 0eh
cmp     [esp+5ch+var_4c], 0
jnz     short loc_4177a0
mov     eax, [esi+4]
mov     [edi+2], eax
mov     eax, [esi+10h]
mov     ecx, [esp+5ch+arg_4]
mov     [ecx], eax
mov     ebx, [esi+18h]
mov     [ecx+8], ebx
mov     eax, [edi+2]
mov     [ecx+4], eax
movsx   ecx, word ptr [esi+3eh]
mov     eax, ecx
shl     ecx, 3
sub     ecx, eax
mov     eax, [esi+3ah]
mov     edx, [eax+ecx*2+2]
mov     ecx, [esp+5ch+arg_4]
cmp     [esp+5ch+var_2c], 0
mov     [ecx+0ch], edx
jz      short loc_4177e7
push    esi
call    sub_419f50
mov     ecx, [esp+60h+arg_4]
add     esp, 4
add     eax, ebx
mov     [ecx+8], eax
mov     eax, [esi+36h]
push    eax
call    sub_45bbc0
mov     cx, 0eh
add     esp, 4
sub     dx, dx
div     cx
movzx   eax, ax
mov     dx, [edi]
mov     [esp+5ch+var_44], eax
push    edx
push    esi
call    sub_416d20
mov     word ptr [esp+64h+var_4a], ax
add     esp, 8
mov     dx, [edi]
test    dx, dx
jz      loc_4178e0
mov     eax, [esi+22h]
movsx   ecx, dx
mov     ebx, [eax]
cmp     byte ptr [ebx+ecx-1], 0dh
jz      loc_4178e0
xor     ebx, ebx
jmp     loc_4178e5
xor     dx, dx
cmp     [esi+3eh], dx
jl      short loc_417862
inc     dx
mov     eax, [esi+7eh]
add     [ecx+2], eax
add     ecx, 0eh
mov     eax, [esi+7eh]
add     [ecx-4], eax
mov     ebx, [esi+7ah]
add     [ecx-8], ebx
cmp     [esi+3eh], dx
jge     short loc_417845
movsx   edi, word ptr [esi+3eh]
mov     eax, edi
mov     ecx, [esp+5ch+arg_4]
shl     edi, 3
sub     edi, eax
mov     eax, [esi+10h]
add     edi, edi
add     edi, [esi+3ah]
mov     [ecx], eax
cmp     [esp+5ch+var_2c], 0
mov     ebx, [esi+18h]
mov     [ecx+8], ebx
mov     eax, [edi+2]
mov     [ecx+4], eax
mov     eax, [edi+2]
mov     [ecx+0ch], eax
jz      loc_417a6b
push    esi
call    sub_419f50
mov     ecx, [esp+60h+arg_4]
add     esp, 4
add     eax, ebx
mov     [ecx+8], eax
jmp     loc_417a6b
mov     word ptr [esi+68h], 0
jmp     loc_417717
mov     ecx, [esp+5ch+arg_4]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
movsx   edi, word ptr [esi+3eh]
mov     ecx, edi
shl     edi, 3
sub     edi, ecx
add     edi, edi
add     edi, [esi+3ah]
jmp     loc_417a71
mov     ebx, 1
test    ebx, ebx
jnz     short loc_4178f0
cmp     [esp+5ch+var_38], 0
jnz     short loc_417907
lea     eax, [esp+5ch+var_18]
push    eax
push    edx
push    esi
call    sub_416d60
mov     [esp+68h+var_38], 1
add     esp, 0ch
mov     eax, [esp+5ch+var_e]
cmp     ebx, 1
mov     ebx, 0
adc     ebx, 0ffffffffh
sub     eax, [esp+5ch+var_12]
inc     [esp+5ch+var_4c]
and     ebx, [esp+5ch+var_16]
movsx   ebp, [esp+5ch+var_4c]
sub     eax, ebx
mov     [esp+5ch+var_40], eax
mov     eax, [esp+5ch+var_12]
add     eax, ebx
cmp     [esp+5ch+var_44], ebp
mov     [edi+6], eax
jg      short loc_417995
mov     edi, [esi+36h]
lea     eax, [ebp+0ah]
mov     [esp+5ch+var_44], eax
shl     eax, 3
sub     eax, [esp+5ch+var_44]
add     eax, eax
mov     [esp+5ch+dwbytes], eax
cmp     eax, 0ffffh
jg      loc_417ae9
push    edi
call    ds:globalunlock
mov     eax, [esp+5ch+dwbytes]
push    2
push    eax
push    edi
call    sub_45b960
add     esp, 0ch
test    eax, eax
jz      loc_417b3c
push    edi
call    ds:globallock
lea     ecx, ds:0[ebp*8]
mov     [esi+3ah], eax
sub     ecx, ebp
lea     edi, [eax+ecx*2-0eh]
mov     cx, [edi]
lea     ebp, [edi+0eh]
lea     eax, [esp+5ch+var_40]
push    0
push    0
push    eax
mov     ax, [esi+2ah]
push    0
sub     ax, cx
push    0
push    eax
push    ecx
lea     ecx, [esp+78h+var_18]
push    ecx
push    esi
call    sub_4170d0
mov     [ebp+0], ax
mov     ecx, [esp+80h+var_4a]
add     esp, 24h
push    ecx
push    edi
push    esi
call    sub_417b90
mov     word ptr [esp+68h+var_4a], ax
add     esp, 0ch
movsx   eax, [esp+5ch+var_18]
cmp     eax, 1
jz      short loc_4179e8
cmp     eax, 2
jz      short loc_4179f7
jmp     short loc_417a04
mov     eax, [esp+5ch+var_40]
cdq
sub     eax, edx
sar     eax, 1
add     [edi+6], eax
jmp     short loc_417a04
test    ebx, ebx
jl      short loc_4179fd
xor     ebx, ebx
add     ebx, [esp+5ch+var_40]
add     [edi+6], ebx
mov     ax, [esp+5ch+var_4c]
mov     edi, ebp
cmp     [esp+5ch+var_46], ax
jnz     short loc_417a27
mov     ax, word ptr [esp+5ch+var_4a+2]
cmp     [ebp+0], ax
jnz     short loc_417a27
mov     eax, [ebp+2]
mov     ecx, [esp+5ch+arg_4]
mov     [ecx+4], eax
mov     ax, [ebp+0]
cmp     [esi+2ah], ax
jg      loc_417816
cmp     [ebp-0eh], ax
jge     short loc_417a4c
mov     ecx, [esi+26h]
movsx   eax, ax
cmp     byte ptr [ecx+eax-1], 0dh
jz      loc_417816
mov     ax, [esi+2ah]
mov     ecx, [esp+5ch+arg_4]
mov     [edi], ax
mov     eax, [edi+2]
cmp     [ecx+0ch], eax
jge     short loc_417a62
mov     [ecx+0ch], eax
mov     ax, [esp+5ch+var_4c]
mov     [esi+3eh], ax
mov     word ptr [esi+68h], 7fffh
cmp     [esp+5ch+var_2c], 0
mov     edi, [edi+2]
jz      short loc_417aae
mov     eax, [esi+92h]
mov     ecx, [eax]
push    ecx
call    sub_47d790
add     esp, 4
add     edi, eax
cmp     [esp+5ch+var_24], 0
jz      short loc_417aa3
mov     eax, [esp+5ch+var_1c]
push    eax
push    esi
call    sub_417df0
add     esp, 8
push    esi
call    sub_419f10
add     esp, 4
add     edi, eax
push    esi
call    sub_415050
add     esp, 4
cmp     [esp+5ch+hmem], 0
jz      short loc_417acb
mov     eax, [esp+5ch+hmem]
push    eax
call    sub_45ba00
add     esp, 4
cmp     [esp+5ch+var_34], 0
jz      short loc_417adf
mov     eax, [esp+5ch+var_28]
push    eax
call    sub_40d4a0
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4ch
retn
mov     word ptr [esi+68h], 7fffh
push    esi
call    sub_415050
add     esp, 4
cmp     [esp+5ch+hmem], 0
jz      short loc_417b12
mov     eax, [esi+36h]
push    eax
call    sub_45ba00
mov     eax, [esp+60h+hmem]
add     esp, 4
mov     [esi+36h], eax
mov     dword_4ad348, 1f42h
cmp     [esp+5ch+var_34], 0
jz      short loc_417b30
mov     eax, [esp+5ch+var_28]
push    eax
call    sub_40d4a0
add     esp, 4
mov     eax, [esp+5ch+var_20]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4ch
retn
mov     word ptr [esi+68h], 7fffh
push    2
push    16h
call    sub_45c150
add     esp, 8
mov     dword_4ad348, 8
push    esi
call    sub_415050
add     esp, 4
cmp     [esp+5ch+var_34], 0
jz      short loc_417b75
mov     eax, [esp+5ch+var_28]
push    eax
call    sub_40d4a0
add     esp, 4
mov     eax, [esp+5ch+var_20]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4ch
retn
sub     esp, 10h
mov     [esp+10h+var_8], 0ffffffffh
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
xor     edi, edi
movsx   ebx, [esp+20h+arg_8]
mov     ecx, [esp+20h+arg_0]
lea     ebx, [ebx+ebx*4]
add     ebx, ebx
add     ebx, [ecx+30h]
mov     ecx, [esp+20h+arg_4]
mov     ax, [ecx+0eh]
mov     [esp+20h+var_a], ax
mov     ax, [ebx+6]
mov     ecx, [esp+20h+arg_0]
mov     dx, [ecx+86h]
mov     word ptr [esp+20h+var_10], ax
mov     eax, [esp+20h+var_10]
mov     word ptr [esp+20h+var_10+2], dx
mov     edx, [esp+20h+var_10+2]
push    edx
push    eax
call    sub_487040
mov     [esp+28h+var_c], ax
mov     ecx, [esp+28h+var_10+2]
mov     edx, [esp+28h+var_10]
add     esp, 8
push    ecx
push    edx
push    0
call    sub_487860
mov     ecx, [esp+2ch+var_10+2]
mov     edx, [esp+2ch+var_10]
mov     [esp+2ch+var_4], eax
add     esp, 0ch
push    ecx
push    edx
push    0
call    sub_4878b0
mov     ecx, [esp+2ch+var_10+2]
add     esp, 0ch
mov     ebp, eax
push    ecx
mov     eax, [esp+24h+var_10]
push    eax
push    0
call    sub_487900
add     esp, 0ch
add     ebp, eax
test    byte ptr [esp+20h+var_c], 60h
jnz     short loc_417c67
mov     dword ptr [ebx+2], 0
mov     eax, [esp+20h+var_4]
cmp     eax, esi
jg      short loc_417c4d
mov     eax, esi
mov     esi, eax
cmp     ebp, edi
jg      short loc_417c55
mov     ebp, edi
mov     edi, ebp
mov     eax, [esp+20h+var_4]
cdq
sub     eax, edx
sar     eax, 1
mov     [esp+20h+var_8], eax
jmp     short loc_417cc7
cmp     [esp+20h+var_8], 0
jge     short loc_417c80
mov     ecx, [esp+20h+arg_0]
push    ebx
push    ecx
call    sub_417d50
mov     [esp+28h+var_8], eax
add     esp, 8
test    byte ptr [esp+20h+var_c], 20h
mov     eax, [esp+20h+var_8]
jz      short loc_417ca8
mov     [ebx+2], eax
mov     eax, [esp+20h+var_4]
add     eax, [esp+20h+var_8]
cmp     eax, esi
jg      short loc_417c9c
mov     eax, esi
mov     esi, eax
cmp     ebp, edi
jg      short loc_417ca4
mov     ebp, edi
mov     edi, ebp
jmp     short loc_417cc7
neg     eax
mov     [ebx+2], eax
mov     eax, [esp+20h+var_4]
cmp     eax, esi
jg      short loc_417cb7
mov     eax, esi
mov     esi, eax
mov     eax, [esp+20h+var_8]
add     eax, ebp
cmp     eax, edi
jg      short loc_417cc5
mov     eax, edi
mov     edi, eax
inc     [esp+20h+arg_8]
mov     ecx, [esp+20h+arg_0]
mov     ax, [esp+20h+arg_8]
cmp     [ecx+34h], ax
jz      short loc_417cec
mov     ax, [esp+20h+var_a]
add     ebx, 0ah
cmp     [ebx], ax
jl      loc_417bc1
mov     ecx, [esp+20h+arg_4]
mov     edx, [esp+20h+arg_0]
mov     ebx, [ecx+2]
lea     eax, [esi+ebx]
mov     [ecx+0ah], eax
mov     cx, [edx+20h]
cmp     cx, 7000h
jl      short loc_417d22
movsx   ecx, cx
lea     eax, [esi+edi+1]
sub     ecx, 6ffeh
cdq
sub     eax, edx
sar     eax, 1
imul    eax, ecx
add     eax, ebx
jmp     short loc_417d2b
movsx   eax, cx
add     eax, ebx
add     eax, edi
add     eax, esi
mov     ecx, [esp+20h+arg_4]
mov     [ecx+10h], eax
mov     ax, [esp+20h+arg_8]
pop     ebp
dec     ax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+arg_0]
cmp     word ptr [edi], 0
jle     short loc_417d77
push    edi
push    esi
call    sub_419180
add     esp, 8
test    al, 60h
jz      short loc_417d77
sub     edi, 0ah
cmp     word ptr [edi], 0
jg      short loc_417d60
push    edi
push    esi
call    sub_419160
cdq
add     esp, 8
sub     eax, edx
sar     eax, 1
pop     edi
pop     esi
retn
movsx   eax, word ptr [esp+arg_4]
push    ebx
push    esi
mov     dx, [esp+8+arg_8]
push    edi
mov     edi, [esp+0ch+arg_0]
push    ebp
xor     bp, bp
mov     ecx, [edi+26h]
cmp     dx, bp
lea     esi, [eax+ecx]
jle     short loc_417dc9
mov     bl, [esi]
cmp     bl, 2eh
jz      short loc_417dc9
cmp     bl, 20h
jle     short loc_417dc9
inc     esi
mov     ebp, esi
sub     ebp, ecx
sub     bp, ax
cmp     bp, dx
jl      short loc_417db0
mov     eax, [esp+10h+arg_4]
push    ebp
push    eax
push    edi
call    sub_416de0
mov     ecx, [esp+1ch+arg_c]
add     esp, 0ch
sub     ecx, 3
cmp     ecx, eax
jl      short loc_417de5
mov     ecx, eax
mov     eax, ecx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
test    edi, edi
jz      short loc_417e50
mov     esi, [esp+8+arg_0]
movsx   ecx, word ptr [esi+3eh]
mov     eax, [esi+3ah]
mov     edx, ecx
shl     ecx, 3
sub     ecx, edx
mov     edx, [eax+ecx*2+2]
sub     edx, [eax+2]
mov     eax, edx
sub     eax, edi
jz      short loc_417e50
mov     ecx, [esi+92h]
sub     [ecx+4], eax
mov     ecx, 0
mov     esi, [esi+92h]
mov     eax, [esi+4]
add     edx, eax
test    eax, eax
jge     short loc_417e3d
mov     ecx, 1
sub     ecx, eax
push    1eh
mov     eax, [esi]
push    5
push    edx
push    1
push    ecx
push    eax
call    sub_47d6c0
add     esp, 18h
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
mov     si, [eax+2ah]
mov     edx, [eax+22h]
mov     ax, [esp+4+arg_4]
mov     ecx, [edx]
movsx   edx, ax
add     ecx, edx
cmp     si, ax
jle     short loc_417e91
cmp     byte ptr [ecx], 0dh
jz      short loc_417e8a
inc     ax
inc     ecx
cmp     si, ax
jg      short loc_417e7d
cmp     si, ax
jle     short loc_417e91
inc     ax
pop     esi
retn
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [esp+14h+arg_0]
push    edi
mov     di, 1
push    ebp
mov     bp, [esi+48h]
cmp     bp, di
jl      short loc_417ef1
mov     ebx, 6
lea     eax, [esp+1ch+var_c]
push    eax
push    edi
push    esi
call    sub_415320
add     esp, 0ch
cmp     [esp+1ch+var_4], bl
jnz     short loc_417eea
mov     eax, [esp+1ch+var_8]
mov     ecx, [esp+12h]
mov     edx, [esp+1ch+var_c]
push    eax
push    ecx
push    edx
push    esi
call    sub_417f00
add     esp, 10h
inc     di
cmp     bp, di
jge     short loc_417ebd
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 38h
push    ebx
push    esi
mov     bx, [esp+40h+arg_8]
push    edi
mov     di, [esp+44h+arg_4]
cmp     bx, di
jle     loc_417fe1
lea     eax, [esp+44h+rect]
push    1
mov     esi, [esp+48h+arg_0]
push    eax
push    edi
push    esi
call    sub_415fb0
lea     ecx, [esp+54h+var_30]
add     esp, 10h
push    0
push    ecx
push    ebx
push    esi
call    sub_415fb0
mov     eax, [esp+54h+rect.top]
add     esp, 10h
cmp     [esp+44h+var_30.top], eax
jnz     short loc_417f6b
mov     eax, [esp+44h+var_30.left]
mov     edi, [esp+44h+arg_c]
lea     ecx, [esp+44h+rect]
push    edi
mov     [esp+48h+rect.right], eax
push    ecx
push    esi
call    sub_415af0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 38h
retn
lea     eax, [esp+44h+var_38]
lea     ecx, [esp+44h+var_34]
push    eax
push    ecx
push    ebx
push    edi
push    esi
call    sub_417ff0
mov     ecx, [esp+58h+rect.bottom]
mov     edx, [esp+58h+var_30.top]
mov     eax, [esp+58h+var_30.left]
mov     [esp+58h+var_10.top], ecx
mov     ecx, [esp+58h+var_34]
mov     [esp+58h+var_10.bottom], edx
mov     [esp+58h+var_30.right], eax
mov     [esp+58h+var_30.left], ecx
mov     eax, [esp+58h+var_38]
mov     edi, [esp+58h+arg_c]
mov     [esp+58h+var_10.left], ecx
mov     [esp+58h+rect.right], eax
lea     ecx, [esp+58h+rect]
mov     [esp+58h+var_10.right], eax
add     esp, 14h
push    edi
push    ecx
push    esi
call    sub_415af0
lea     eax, [esp+50h+var_30]
add     esp, 0ch
push    edi
push    eax
push    esi
call    sub_415af0
lea     eax, [esp+50h+var_10]
add     esp, 0ch
push    edi
push    eax
push    esi
call    sub_415af0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 38h
retn
sub     esp, 18h
push    ebx
push    esi
mov     ebx, [esp+20h+arg_10]
push    edi
mov     edi, [esp+24h+arg_c]
push    ebp
mov     bp, [esp+28h+arg_4]
mov     esi, [esp+28h+arg_0]
mov     dword ptr [edi], 7fffh
mov     dword ptr [ebx], 0ffff8000h
lea     eax, [esp+28h+var_18]
push    eax
push    ebp
push    esi
call    sub_416d60
mov     eax, [esp+34h+var_12]
add     esp, 0ch
cmp     [esp+28h+var_16], 0
jge     short loc_418032
add     eax, [esp+28h+var_16]
cmp     [edi], eax
jle     short loc_418038
mov     [edi], eax
mov     eax, [esp+28h+var_e]
cmp     [ebx], eax
jge     short loc_418042
mov     [ebx], eax
push    ebp
push    esi
call    sub_417e60
mov     bp, ax
add     esp, 8
cmp     bp, [esp+28h+arg_8]
jl      short loc_418014
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, dword_4ad348
retn
sub     esp, 74h
push    ebx
push    esi
push    edi
push    ebp
mov     ebx, [esp+84h+hmem]
push    0
push    0
push    0
push    0
push    0
push    ebx
call    sub_414e80
add     esp, 18h
push    ebx
call    ds:globallock
push    eax
mov     ebp, eax
call    sub_415000
mov     cx, [esp+88h+arg_4]
add     esp, 4
test    cx, cx
jge     short loc_4180b5
xor     cx, cx
jmp     short loc_4180c1
mov     ax, [ebp+2ah]
cmp     cx, ax
jle     short loc_4180c1
mov     cx, ax
mov     dx, [esp+84h+arg_8]
cmp     dx, cx
jge     short loc_4180d1
mov     dx, cx
mov     ax, [ebp+2ah]
cmp     dx, ax
jle     short loc_4180dd
mov     dx, ax
mov     [esp+84h+var_4c], 9
mov     eax, [ebp+10h]
mov     [esp+84h+var_48], ax
mov     esi, [ebp+14h]
mov     [esp+84h+var_46], si
mov     edi, [ebp+18h]
mov     [esp+84h+var_44], di
mov     eax, [ebp+1ch]
mov     [esp+84h+var_42], ax
mov     esi, [ebp+0]
mov     [esp+84h+var_40], si
mov     edi, [ebp+4]
mov     [esp+84h+var_3e], di
mov     eax, [ebp+8]
mov     [esp+84h+var_3c], ax
mov     esi, [ebp+0ch]
mov     [esp+84h+var_3a], si
mov     di, [ebp+20h]
mov     [esp+84h+var_36], di
mov     ax, [ebp+6ch]
mov     [esp+84h+var_34], ax
mov     esi, [ebp+76h]
mov     [esp+84h+var_22], esi
mov     di, [ebp+8ch]
mov     [esp+84h+var_1c], di
mov     eax, [ebp+9ah]
mov     [esp+84h+var_14], ax
cmp     dword ptr [ebp+92h], 0
jz      short loc_418186
cmp     dword ptr [ebp+8eh], 1
sbb     eax, eax
inc     eax
mov     [esp+84h+var_18], ax
mov     esi, [ebp+92h]
mov     edi, [esi+0ch]
mov     [esp+84h+var_16], di
mov     esi, [ebp+92h]
mov     eax, [esi+4]
jmp     short loc_418192
xor     eax, eax
mov     [esp+84h+var_18], ax
mov     [esp+84h+var_16], ax
mov     [esp+84h+var_1a], ax
cmp     [esp+84h+arg_c], 0
mov     [esp+84h+var_6c], cx
mov     [esp+84h+var_6a], dx
jz      short loc_4181b6
call    sub_4755f0
mov     [esp+84h+var_68], eax
jmp     short loc_4181be
mov     [esp+84h+var_68], 0
movsx   ecx, word ptr [ebp+3eh]
mov     eax, ecx
shl     ecx, 3
sub     ecx, eax
movsx   eax, word ptr [ebp+34h]
shl     eax, 3
push    400h
lea     ecx, [eax+ecx*2]
lea     edx, [esp+88h+var_64]
movsx   eax, word ptr [ebp+2ah]
add     eax, ecx
mov     ecx, eax
shr     ecx, 2
add     eax, ecx
push    eax
push    edx
call    sub_445f40
add     esp, 0ch
test    eax, eax
jz      loc_4182bd
lea     eax, [esp+84h+var_4c]
push    4ch
lea     ecx, [esp+88h+var_64]
push    eax
push    ecx
xor     edi, edi
call    sub_445f90
add     esp, 0ch
cmp     dword_4ad3a8, edi
jle     short loc_41823b
mov     esi, offset off_4ad358
lea     eax, [esp+84h+var_4c]
lea     ecx, [esp+84h+var_6c]
push    eax
add     esi, 10h
push    ebp
inc     edi
push    ecx
call    dword ptr [esi-10h]
add     esp, 0ch
cmp     edi, dword_4ad3a8
jl      short loc_41821e
mov     eax, [esp+84h+var_68]
push    eax
call    sub_475600
add     esp, 4
xor     eax, eax
test    [esp+84h+var_5c], 1
mov     [esp+84h+var_68], eax
jz      short loc_41826d
lea     ecx, [esp+84h+var_64]
push    1
mov     byte ptr [esp+88h+var_74], al
lea     eax, [esp+88h+var_74]
push    eax
push    ecx
call    sub_445f90
add     esp, 0ch
lea     eax, [esp+84h+var_70]
lea     ecx, [esp+84h+var_64]
push    eax
push    ecx
call    sub_446030
mov     [esp+8ch+var_74], eax
add     esp, 8
test    eax, eax
jz      short loc_4182bd
lea     esi, [esp+84h+var_4c]
mov     edi, [eax]
mov     ecx, 13h
push    ebp
rep movsd
call    sub_415050
add     esp, 4
push    ebx
call    ds:globalunlock
mov     ecx, [esp+84h+var_70]
mov     eax, [esp+84h+arg_10]
mov     [eax], ecx
mov     eax, [esp+84h+var_74]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 74h
retn
push    ebp
call    sub_415050
add     esp, 4
push    ebx
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 74h
retn
mov     eax, dword ptr [esp+arg_4]
mov     edx, [esp+arg_0]
sub     esp, 4
lea     ecx, [esp+4+hmem]
push    eax
mov     [esp+8+hmem], 0
push    ecx
push    edx
call    sub_418330
add     esp, 0ch
test    eax, eax
jz      short loc_418320
mov     eax, [esp+4+arg_8]
mov     ecx, [esp+4+hmem]
push    eax
push    ecx
call    sub_41a4e0
mov     eax, [esp+0ch+hmem]
add     esp, 8
add     esp, 4
retn
xor     eax, eax
add     esp, 4
retn
mov     eax, [esp+arg_4]
sub     esp, 3ch
push    ebx
cmp     dword ptr [eax], 1
sbb     eax, eax
push    esi
mov     ecx, [esp+44h+hmem]
push    edi
push    ebp
mov     edi, ds:globallock
neg     eax
mov     [esp+4ch+var_38], eax
push    ecx
call    edi
cmp     dword ptr [eax], 9
mov     esi, eax
jz      short loc_41836f
mov     eax, [esp+4ch+hmem]
push    eax
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
cmp     [esp+4ch+var_38], 0
jz      loc_418431
movsx   eax, word ptr [esi+0ch]
mov     [esp+4ch+var_34], eax
movsx   ecx, word ptr [esi+0eh]
mov     [esp+4ch+var_30], ecx
movsx   edx, word ptr [esi+10h]
mov     [esp+4ch+var_2c], edx
movsx   eax, word ptr [esi+12h]
mov     [esp+4ch+var_28], eax
movsx   ecx, word ptr [esi+4]
mov     [esp+4ch+var_24], ecx
push    0
movsx   edx, word ptr [esi+6]
mov     [esp+50h+var_20], edx
movsx   eax, word ptr [esi+8]
mov     dx, [esp+50h+arg_8]
mov     [esp+50h+var_1c], eax
lea     eax, [esp+50h+var_24]
push    edx
movsx   ecx, word ptr [esi+0ah]
mov     [esp+54h+var_18], ecx
push    eax
lea     ecx, [esp+58h+var_34]
push    ecx
call    sub_413470
mov     [esp+5ch+var_3c], eax
add     esp, 10h
test    eax, eax
jnz     short loc_4183e6
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
mov     ecx, [esp+4ch+var_3c]
push    ecx
call    edi
mov     edi, eax
mov     ax, [esi+16h]
mov     [edi+20h], ax
mov     cx, [esi+18h]
mov     [edi+6ch], cx
mov     edx, [esi+2ah]
mov     [edi+76h], edx
mov     ax, [esi+30h]
mov     [edi+8ch], ax
cmp     ax, 1
jge     short loc_41841f
mov     word ptr [edi+8ch], 1
movsx   eax, word ptr [esi+38h]
mov     [edi+9ah], eax
mov     word ptr [edi+68h], 7fffh
jmp     short loc_418458
mov     eax, [esp+4ch+arg_4]
mov     ecx, [eax]
mov     [esp+4ch+var_3c], ecx
push    ecx
call    edi
cmp     dword ptr [eax+92h], 0
mov     edi, eax
jz      short loc_418458
cmp     dword ptr [edi+5ah], 0
jz      short loc_418458
push    edi
call    sub_419760
add     esp, 4
xor     ebx, ebx
mov     edx, [esp+4ch+var_38]
mov     [esp+4ch+var_a], ebx
mov     ax, [edi+4ah]
mov     word ptr [esp+4ch+var_14], ax
lea     eax, [esi+4ch]
mov     word ptr [esp+4ch+var_14+2], bx
mov     [esp+4ch+var_24], eax
mov     cx, [edi+2ah]
cmp     dword_4ad3a8, ebx
mov     [esp+3ch], cx
mov     [esp+4ch+var_6], edx
mov     [esp+4ch+var_e], ebx
jle     short loc_4184b7
mov     ebp, offset off_4ad35c
mov     eax, [esp+4ch+var_24]
push    esi
lea     ecx, [esp+50h+var_14]
push    edi
push    eax
add     ebp, 10h
push    ecx
inc     ebx
call    dword ptr [ebp-10h]
add     [esp+5ch+var_24], eax
add     esp, 10h
cmp     ebx, dword_4ad3a8
jl      short loc_418495
cmp     [esp+4ch+var_a], 0
jz      short loc_4184f0
mov     eax, [esp+4ch+hmem]
mov     esi, ds:globalunlock
push    eax
call    esi
mov     ecx, [esp+4ch+var_3c]
push    ecx
call    esi
cmp     [esp+4ch+var_38], 0
jz      short loc_4184e6
mov     ecx, [esp+4ch+var_3c]
push    ecx
call    sub_413620
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
cmp     [esp+4ch+var_38], 0
jnz     short loc_418518
mov     eax, [esp+4ch+var_14+2]
push    eax
push    edi
call    sub_413c70
mov     eax, [esp+54h+var_14+2]
mov     ecx, [esp+54h+var_14]
add     esp, 8
push    eax
push    ecx
push    edi
call    sub_413870
add     esp, 0ch
lea     eax, [esi+4ch]
xor     ebx, ebx
mov     [esp+4ch+var_24], eax
cmp     dword_4ad3a8, ebx
jle     short loc_418550
mov     ebp, offset off_4ad360
mov     eax, [esp+4ch+var_24]
push    esi
lea     ecx, [esp+50h+var_14]
push    edi
push    eax
add     ebp, 10h
push    ecx
inc     ebx
call    dword ptr [ebp-10h]
add     [esp+5ch+var_24], eax
add     esp, 10h
cmp     ebx, dword_4ad3a8
jl      short loc_41852e
cmp     [esp+4ch+var_38], 0
jz      short loc_418578
cmp     word ptr [esi+34h], 0
jz      short loc_418571
add     esi, 32h
mov     ecx, [esp+4ch+var_3c]
push    esi
push    0
push    ecx
call    sub_419cf0
add     esp, 0ch
cmp     [esp+4ch+var_38], 0
jnz     short loc_418593
mov     ax, [edi+4ah]
add     ax, word ptr [esp+4ch+var_14+2]
mov     [edi+4ah], ax
mov     [edi+4ch], ax
mov     dword ptr [edi+0bch], 1
mov     eax, [esp+4ch+var_e]
push    eax
call    sub_475600
mov     eax, [esp+50h+hmem]
add     esp, 4
mov     esi, ds:globalunlock
push    eax
call    esi
mov     ecx, [esp+4ch+var_3c]
push    ecx
call    esi
cmp     [esp+4ch+var_38], 0
jz      short loc_4185c5
mov     eax, [esp+4ch+arg_4]
mov     ecx, [esp+4ch+var_3c]
mov     [eax], ecx
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+arg_0]
push    edi
mov     ecx, [esp+2ch+arg_4]
push    ebp
mov     bx, [ecx+34h]
mov     eax, [esi+10h]
push    2
lea     ecx, [esi+8]
mov     [esp+34h+var_1e], 8
mov     [esp+34h+var_18], eax
lea     eax, [esp+34h+var_1e]
push    eax
push    ecx
call    sub_445f90
add     esp, 0ch
cmp     word ptr [esi+2], 0
jnz     short loc_418688
mov     eax, [esp+30h+arg_4]
cmp     dword ptr [eax+52h], 0
jz      short loc_418688
lea     eax, [esp+30h+var_c]
mov     ecx, [esp+30h+arg_4]
push    eax
mov     edx, [ecx+4eh]
push    edx
push    ecx
call    sub_418760
mov     ecx, [esp+3ch+var_6]
add     esp, 0ch
push    ecx
push    esi
call    sub_418f90
mov     cx, [esp+38h+var_c]
mov     edx, [esp+38h+var_a]
mov     ax, word ptr [esp+38h+var_6]
add     esp, 8
mov     [esp+30h+var_14], cx
push    8
mov     cx, word ptr [esp+34h+var_6+2]
mov     [esp+34h+var_12], dx
lea     edx, [esp+34h+var_14]
mov     [esp+34h+var_10], ax
push    edx
mov     [esp+38h+var_e], cx
lea     eax, [esi+8]
push    eax
call    sub_445f90
add     esp, 0ch
jmp     loc_41873b
mov     ax, [esi]
mov     ecx, [esp+30h+arg_4]
push    eax
push    ecx
call    sub_416d20
movsx   edi, ax
movsx   ecx, bx
mov     [esp+38h+var_1c], ecx
add     esp, 8
cmp     ecx, edi
jle     loc_41873b
lea     eax, [edi+edi*4]
lea     ebx, ds:0[eax*2]
mov     eax, [esp+30h+arg_4]
mov     ecx, [eax+30h]
mov     ax, [esi+2]
add     ecx, ebx
cmp     [ecx], ax
jg      short loc_41873b
lea     edx, [esp+30h+var_c]
mov     eax, [ecx]
mov     ebp, [ecx+4]
mov     [edx], eax
mov     cx, [ecx+8]
mov     [edx+4], ebp
mov     [edx+8], cx
mov     bp, [esp+30h+var_c]
sub     bp, [esi]
jns     short loc_4186ea
xor     bp, bp
mov     eax, [esp+30h+var_6]
add     ebx, 0ah
push    eax
inc     edi
push    esi
call    sub_418f90
mov     cx, word ptr [esp+38h+var_6]
mov     eax, [esp+38h+var_a]
mov     dx, word ptr [esp+38h+var_6+2]
add     esp, 8
mov     [esp+30h+var_14], bp
push    8
mov     [esp+34h+var_12], ax
lea     eax, [esp+34h+var_14]
mov     [esp+34h+var_10], cx
push    eax
mov     [esp+38h+var_e], dx
lea     ecx, [esi+8]
push    ecx
call    sub_445f90
add     esp, 0ch
cmp     [esp+30h+var_1c], edi
jg      loc_4186b5
mov     ecx, [esi+10h]
mov     eax, [esp+30h+arg_8]
sub     ecx, [esp+30h+var_18]
pop     ebp
pop     edi
mov     [eax+1ah], ecx
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+arg_0]
sub     esp, 4
xor     ecx, ecx
push    ebx
push    esi
push    edi
mov     di, [eax+86h]
push    ebp
mov     eax, [esp+14h+arg_8]
push    edi
mov     [eax], cx
push    1
mov     [eax+8], cx
mov     [eax+2], ecx
call    sub_486e10
mov     bx, ax
add     esp, 8
push    edi
push    ebx
push    1
call    sub_4872f0
mov     bp, 1
mov     esi, [esp+20h+arg_4]
add     esp, 0ch
push    esi
call    sub_475630
mov     [esp+18h+var_2], ax
add     esp, 4
cmp     ax, bp
jl      short loc_4187d5
push    ebp
push    esi
inc     bp
call    sub_475820
add     esp, 8
push    edi
push    ebx
push    eax
call    sub_4872f0
add     esp, 0ch
cmp     bp, [esp+14h+var_2]
jle     short loc_4187b7
push    edi
push    ebx
call    sub_487680
mov     si, ax
add     esp, 8
test    si, si
jz      short loc_4187f4
push    edi
push    ebx
mov     bx, si
call    sub_486ee0
add     esp, 8
mov     eax, [esp+14h+arg_8]
pop     ebp
mov     [eax+6], bx
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_c]
push    ebx
push    esi
push    edi
mov     esi, [eax+1ah]
cmp     dword ptr [eax], 8
jge     short loc_418830
mov     edi, [esp+0ch+arg_0]
mov     eax, esi
mov     dword ptr [edi+0ah], 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+0ch+arg_4]
lea     ebx, [esi-2]
mov     di, [eax]
mov     eax, ebx
cdq
movsx   ecx, di
idiv    ecx
movsx   eax, ax
mov     edx, eax
imul    edx, ecx
cmp     edx, ebx
jnz     short loc_418886
cmp     di, 8
jnz     short loc_418886
mov     ecx, [esp+0ch+arg_8]
mov     edi, [esp+0ch+arg_0]
movsx   edx, word ptr [ecx+34h]
add     edx, eax
push    2
mov     eax, [ecx+2ch]
lea     edx, [edx+edx*4]
add     edx, edx
push    edx
push    eax
call    sub_45b960
add     esp, 0ch
cmp     eax, 1
sbb     eax, eax
neg     eax
or      [edi+0ah], eax
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     edi, [esp+0ch+arg_0]
mov     eax, esi
mov     dword ptr [edi+0ah], 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_c]
sub     esp, 1ch
push    ebx
mov     ecx, [eax+1ah]
mov     [esp+20h+var_c], ecx
push    esi
push    edi
push    ebp
mov     edi, [esp+2ch+arg_0]
mov     ax, [edi]
mov     word ptr [esp+2ch+var_18], ax
mov     eax, [esp+2ch+arg_4]
movsx   ebx, word ptr [eax]
lea     ecx, [eax+2]
mov     eax, [esp+2ch+var_c]
sub     eax, 2
mov     [esp+2ch+var_10], ecx
cdq
idiv    ebx
mov     [esp+2ch+var_1a], ax
mov     eax, [esp+2ch+arg_8]
push    eax
call    sub_415000
mov     eax, [esp+30h+var_18]
mov     ecx, [esp+30h+arg_8]
add     esp, 4
push    eax
push    ecx
call    sub_416d20
mov     si, ax
add     esp, 8
mov     ax, [edi+4]
test    ax, ax
jle     short loc_418908
inc     si
test    ax, ax
mov     ecx, [esp+2ch+arg_8]
mov     ebx, [ecx+30h]
jle     short loc_41891f
mov     ax, [ecx+34h]
mov     word ptr [esp+2ch+var_18+2], ax
jmp     short loc_418926
mov     word ptr [esp+2ch+var_18+2], 0
movsx   eax, si
movsx   edx, word ptr [esp+2ch+var_18+2]
sub     edx, eax
lea     eax, [eax+eax*4]
lea     edx, [edx+edx*4]
lea     ecx, [ebx+eax*2]
add     edx, edx
mov     [esp+2ch+var_14], ecx
movsx   eax, [esp+2ch+var_1a]
push    edx
push    ecx
lea     edx, [eax+eax*4]
lea     eax, [ecx+edx*2]
push    eax
call    _memcpy
mov     [esp+38h+var_1c], 0
add     esp, 0ch
cmp     [esp+2ch+var_1a], 0
jle     short loc_4189be
mov     ecx, [esp+2ch+var_10]
push    8
movsx   ebp, [esp+30h+var_1c]
lea     edx, [esp+30h+var_8]
lea     eax, [ecx+ebp*8]
push    eax
push    edx
call    _memcpy
mov     ax, [esp+38h+var_8]
mov     ecx, [esp+38h+var_14]
lea     edx, [ebp+ebp*4+0]
inc     [esp+38h+var_1c]
add     esp, 0ch
lea     ecx, [ecx+edx*2]
mov     [ecx], ax
movsx   edx, [esp+2ch+var_6]
mov     [ecx+2], edx
mov     bp, [esp+2ch+var_4]
mov     [ecx+6], bp
mov     ax, [esp+2ch+var_2]
mov     [ecx+8], ax
mov     cx, [esp+2ch+var_1c]
cmp     cx, [esp+2ch+var_1a]
jl      short loc_418964
mov     ax, word ptr [esp+2ch+var_18+2]
mov     ecx, [esp+2ch+arg_8]
mov     bp, [esp+2ch+var_1a]
add     ax, [esp+2ch+var_1a]
add     bp, si
mov     [ecx+34h], ax
cmp     bp, si
jle     short loc_418a02
movsx   eax, si
inc     si
lea     edx, [eax+eax*4]
mov     ax, word ptr [esp+2ch+var_18]
lea     ecx, [ebx+edx*2]
add     [ecx], ax
add     ecx, 6
push    ecx
push    edi
call    sub_418fd0
add     esp, 8
cmp     bp, si
jg      short loc_4189dd
mov     ecx, [esp+2ch+arg_8]
mov     ax, [ecx+34h]
cmp     ax, si
jle     short loc_418a24
movsx   ecx, si
mov     dx, [edi+2]
lea     ebp, [ecx+ecx*4]
inc     si
add     [ebx+ebp*2], dx
cmp     ax, si
jg      short loc_418a0f
mov     ecx, [esp+2ch+arg_8]
push    ecx
call    sub_415050
mov     eax, [esp+30h+var_c]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
sub     esp, 8
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+18h+arg_0]
cmp     word ptr [edi], 0
jnz     short loc_418ac0
mov     eax, [esp+18h+arg_4]
mov     cx, [eax+2ah]
cmp     [edi+2], cx
jnz     short loc_418ac0
mov     bx, [eax+3eh]
mov     ebp, [eax+3ah]
inc     bx
test    bx, bx
jle     short loc_418aab
mov     si, bx
add     edi, 8
mov     ax, [ebp+0]
push    8
mov     [esp+1ch+var_8], ax
mov     ecx, [ebp+2]
add     ebp, 0eh
mov     [esp+1ch+var_6], cx
lea     ecx, [esp+1ch+var_8]
mov     edx, [ebp-8]
push    ecx
mov     [esp+20h+var_4], dx
push    edi
mov     eax, [ebp-4]
mov     [esp+24h+var_2], ax
call    sub_445f90
add     esp, 0ch
dec     si
jnz     short loc_418a73
movsx   ecx, bx
shl     ecx, 3
mov     eax, [esp+18h+arg_8]
pop     ebp
pop     edi
pop     esi
mov     [eax+3ch], ecx
pop     ebx
add     esp, 8
retn
mov     eax, [esp+18h+arg_8]
pop     ebp
pop     edi
pop     esi
mov     dword ptr [eax+3ch], 0
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_c]
push    esi
mov     esi, [esp+4+arg_0]
push    edi
mov     edi, [eax+3ch]
cmp     dword ptr [esi+0eh], 0
jz      short loc_418b25
test    edi, edi
jz      short loc_418b25
mov     eax, edi
push    2
shr     eax, 3
movsx   eax, ax
mov     ecx, eax
shl     eax, 3
sub     eax, ecx
mov     ecx, [esp+0ch+arg_8]
add     eax, eax
mov     edx, [ecx+36h]
push    eax
push    edx
call    sub_45b960
add     esp, 0ch
cmp     eax, 1
sbb     eax, eax
neg     eax
or      [esi+0ah], eax
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_c]
sub     esp, 0ch
push    ebx
mov     ecx, [eax+3ch]
mov     edx, [esp+10h+arg_0]
push    esi
mov     [esp+14h+var_c], ecx
push    edi
cmp     dword ptr [edx+0eh], 0
push    ebp
jz      loc_418bd5
test    ecx, ecx
jnz     short loc_418b60
mov     eax, [esp+1ch+arg_8]
mov     word ptr [eax+68h], 0ffffh
jmp     short loc_418bd5
mov     edi, [esp+1ch+src]
mov     esi, [esp+1ch+var_c]
shr     esi, 3
mov     eax, [esp+1ch+arg_8]
mov     ecx, [eax+36h]
push    ecx
call    ds:globallock
test    si, si
mov     ebp, eax
jle     short loc_418bbd
mov     bx, si
lea     eax, [esp+1ch+var_8]
push    8
push    edi
add     ebp, 0eh
push    eax
add     edi, 8
call    _memcpy
mov     ax, [edi-8]
add     esp, 0ch
dec     bx
mov     [ebp-0eh], ax
movsx   ecx, [esp+1ch+var_6]
mov     [ebp-0ch], ecx
movsx   edx, [esp+1ch+var_4]
mov     [ebp-8], edx
movsx   eax, [esp+1ch+var_2]
mov     [ebp-4], eax
jnz     short loc_418b83
dec     si
mov     eax, [esp+1ch+arg_8]
mov     ecx, [eax+36h]
push    ecx
call    ds:globalunlock
mov     eax, [esp+1ch+arg_8]
mov     [eax+3eh], si
mov     eax, [esp+1ch+var_c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 10h
push    ebx
push    esi
mov     ebx, [esp+18h+arg_0]
push    edi
mov     esi, [esp+1ch+arg_4]
push    ebp
mov     bp, [esi+48h]
mov     eax, [ebx+10h]
cmp     word ptr [ebx+2], 0
mov     [esp+20h+var_10], eax
jle     loc_418cb8
xor     di, di
test    bp, bp
jle     loc_418d1e
movsx   eax, di
lea     ecx, [esp+20h+var_c]
lea     eax, [eax+eax*4]
add     eax, eax
add     eax, [esi+44h]
mov     edx, [eax]
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     ax, [eax+8]
mov     [ecx+8], ax
mov     cx, [ebx]
cmp     [esp+20h+var_a], cx
jle     short loc_418cab
mov     ax, [ebx+2]
cmp     [esp+20h+var_c], ax
jge     short loc_418cab
sub     [esp+20h+var_c], cx
jns     short loc_418c65
mov     [esp+20h+var_c], 0
cmp     [esp+20h+var_a], ax
jle     short loc_418c71
mov     [esp+20h+var_a], ax
sub     [esp+20h+var_a], cx
cmp     [esp+20h+var_4], 1
jnz     short loc_418c8b
mov     eax, [esp+20h+var_8]
push    eax
push    ebx
call    sub_418f90
add     esp, 8
cmp     dword ptr [ebx+4], 0
jz      short loc_418c98
cmp     [esp+20h+var_4], 2
jz      short loc_418cab
lea     eax, [esp+20h+var_c]
push    0ah
push    eax
lea     ecx, [ebx+8]
push    ecx
call    sub_445f90
add     esp, 0ch
inc     di
cmp     bp, di
jg      loc_418c21
jmp     short loc_418d1e
cmp     dword ptr [esi+52h], 0
jz      short loc_418d1e
mov     di, 1
mov     esi, [esi+4eh]
push    esi
call    sub_475630
mov     bp, ax
add     esp, 4
cmp     bp, di
jl      short loc_418d1e
push    edi
push    esi
inc     di
call    sub_475820
mov     [esp+28h+var_4], 1
movsx   ecx, ax
mov     [esp+28h+var_8], ecx
add     esp, 8
mov     [esp+20h+var_c], 0
mov     [esp+20h+var_a], 0
push    eax
push    ebx
call    sub_418f90
lea     ecx, [esp+28h+var_c]
add     esp, 8
lea     edx, [ebx+8]
push    0ah
push    ecx
push    edx
call    sub_445f90
add     esp, 0ch
cmp     bp, di
jge     short loc_418cd6
mov     ecx, [ebx+10h]
mov     eax, [esp+20h+arg_8]
sub     ecx, [esp+20h+var_10]
pop     ebp
pop     edi
mov     [eax+40h], ecx
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_c]
push    ebx
mov     ecx, [esp+4+arg_8]
push    esi
push    edi
mov     esi, [eax+40h]
mov     edi, 0ah
mov     eax, esi
movsx   ebx, word ptr [ecx+48h]
sub     edx, edx
push    2
div     edi
movsx   eax, ax
mov     edi, [esp+10h+arg_0]
lea     ebx, [eax+ebx*2]
mov     eax, [ecx+40h]
lea     ebx, [ebx+ebx*4]
add     ebx, ebx
push    ebx
push    eax
call    sub_45b960
add     esp, 0ch
cmp     eax, 1
sbb     eax, eax
neg     eax
or      [edi+0ah], eax
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_c]
sub     esp, 14h
push    ebx
mov     ecx, [eax+40h]
push    esi
mov     ebx, 0ah
push    edi
mov     eax, ecx
push    ebp
sub     edx, edx
div     ebx
mov     si, ax
mov     ebx, [esp+24h+arg_0]
cmp     word ptr [ebx+2], 0
mov     [esp+24h+size+2], ecx
jle     loc_418e42
mov     edi, [esp+24h+arg_8]
mov     ebp, ds:globallock
mov     eax, [edi+40h]
push    eax
call    ebp
movsx   ecx, word ptr [edi+48h]
lea     edx, [ecx+ecx*4]
mov     ecx, [esp+24h+src]
lea     ebp, [eax+edx*2]
mov     eax, [esp+24h+size+2]
push    eax
push    ecx
push    ebp
call    _memcpy
add     esp, 0ch
test    si, si
jle     short loc_418e32
mov     [esp+24h+var_c], si
mov     ax, [ebx]
add     [ebp+0], ax
mov     ax, [ebx]
add     [ebp+2], ax
cmp     byte ptr [ebp+8], 1
jnz     short loc_418e28
mov     eax, [ebp+4]
mov     word ptr [esp+24h+size], ax
lea     eax, [esp+24h+size]
push    eax
push    ebx
call    sub_418fd0
movsx   ecx, word ptr [esp+2ch+size]
add     esp, 8
mov     [ebp+4], ecx
add     ebp, 0ah
dec     [esp+24h+var_c]
jnz     short loc_418df6
mov     eax, [edi+40h]
push    eax
call    ds:globalunlock
add     [edi+48h], si
jmp     short loc_418e9c
test    si, si
mov     ebp, [esp+24h+src]
jle     short loc_418e9c
mov     edi, [esp+24h+arg_8]
lea     eax, [esp+24h+var_c]
push    0ah
push    ebp
push    eax
call    _memcpy
add     esp, 0ch
cmp     [esp+24h+var_4], 1
jnz     short loc_418e95
mov     eax, [esp+24h+var_8]
mov     word ptr [esp+24h+size], ax
lea     eax, [esp+24h+size]
push    eax
push    ebx
call    sub_418fd0
mov     ecx, [esp+2ch+size]
add     esp, 8
mov     edx, [edi+4eh]
push    ecx
push    edx
call    sub_475710
mov     dword ptr [edi+52h], 1
add     esp, 8
add     ebp, 0ah
dec     si
jnz     short loc_418e4f
mov     eax, [esp+24h+size+2]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     edx, [esp+arg_0]
push    esi
movsx   ecx, word ptr [edx]
movsx   esi, word ptr [edx+2]
sub     esi, ecx
mov     eax, [esp+4+arg_4]
push    esi
add     edx, 8
mov     eax, [eax+26h]
add     eax, ecx
push    eax
push    edx
call    sub_445f90
mov     ecx, [esp+10h+arg_8]
add     esp, 0ch
mov     [ecx+26h], esi
pop     esi
retn
mov     eax, [esp+arg_c]
push    esi
mov     ecx, [esp+4+arg_8]
push    edi
mov     esi, [eax+26h]
mov     edi, [esp+8+arg_0]
movsx   eax, word ptr [ecx+2ah]
add     eax, esi
push    2
push    eax
mov     ecx, [ecx+22h]
push    ecx
call    sub_45b960
mov     [edi+2], si
add     esp, 0ch
cmp     eax, 1
sbb     eax, eax
neg     eax
or      [edi+0ah], eax
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_c]
push    ebx
mov     ebx, [esp+4+arg_0]
push    esi
push    edi
mov     esi, [eax+26h]
mov     edi, [esp+0ch+arg_8]
push    ebp
movsx   ebp, word ptr [edi+2ah]
movsx   eax, word ptr [ebx]
sub     ebp, eax
mov     ecx, [edi+22h]
push    ecx
call    ds:globallock
movsx   ecx, word ptr [ebx]
push    ebp
lea     ebx, [ecx+eax]
push    ebx
lea     eax, [ebx+esi]
push    eax
call    _memcpy
mov     eax, [esp+1ch+src]
add     esp, 0ch
push    esi
push    eax
push    ebx
call    _memcpy
add     [edi+2ah], si
add     esp, 0ch
mov     eax, [edi+22h]
mov     ebp, ds:globalunlock
push    eax
call    ebp
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_8]
mov     dword ptr [eax+44h], 0
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+4]
test    ecx, ecx
jz      short locret_418fa9
mov     eax, dword ptr [esp+arg_4]
push    eax
push    ecx
call    sub_475710
add     esp, 8
retn
mov     eax, [esp+arg_c]
mov     eax, [eax+44h]
retn
mov     eax, [esp+arg_c]
mov     eax, [eax+44h]
retn
mov     eax, [esp+arg_0]
push    esi
mov     eax, [eax+6]
test    eax, eax
jz      short loc_418ff0
mov     esi, [esp+4+arg_4]
mov     cx, [esi]
push    ecx
push    eax
call    sub_486b70
mov     [esi], ax
add     esp, 8
pop     esi
retn
mov     ecx, [esp+arg_0]
mov     eax, [ecx+1ah]
mov     edx, [ecx+26h]
add     eax, [ecx+3ch]
add     eax, [ecx+40h]
add     eax, [ecx+44h]
lea     eax, [eax+ecx+4ch]
mov     ecx, [esp+arg_4]
mov     [ecx], edx
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
mov     edi, eax
mov     ax, [esp+8+arg_4]
push    eax
push    edi
call    sub_416d20
movsx   ecx, ax
add     esp, 8
mov     eax, [edi+2ch]
lea     edx, [ecx+ecx*4]
mov     ecx, [eax]
mov     di, [ecx+edx*2+6]
push    esi
call    ds:globalunlock
mov     ax, di
pop     edi
pop     esi
retn
mov     eax, [esp+hmem]
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     esi, ds:globallock
push    ebp
push    eax
call    esi
mov     ecx, [eax+40h]
mov     [esp+1ch+var_4], eax
push    ecx
call    esi
mov     esi, eax
mov     ecx, [esp+1ch+var_4]
mov     ax, [ecx+86h]
mov     edi, [esp+1ch+arg_8]
mov     cx, [esp+1ch+arg_4]
mov     edx, [esp+1ch+arg_c]
mov     [esp+1ch+var_a+2], 0
mov     word ptr [esp+1ch+var_a], ax
mov     [edi], cx
mov     [edx], cx
mov     ecx, [esp+1ch+var_4]
mov     ax, [ecx+48h]
mov     [esp+1ch+var_c], ax
test    ax, ax
jle     short loc_419117
cmp     byte ptr [esi+8], 1
jnz     short loc_41910d
mov     bx, [esi]
mov     bp, [esi+2]
cmp     [esp+1ch+arg_4], bx
jl      short loc_41910d
cmp     [esp+1ch+arg_4], bp
jge     short loc_41910d
mov     cx, [esi+4]
mov     eax, [esp+1ch+var_a]
push    eax
push    ecx
call    sub_486fa0
add     esp, 8
test    eax, 2000000h
jz      short loc_41910d
mov     [esp+1ch+var_a+2], 1
cmp     [edi], bx
jle     short loc_419101
mov     [edi], bx
mov     ecx, [esp+1ch+arg_c]
cmp     [ecx], bp
jge     short loc_41910d
mov     [ecx], bp
add     esi, 0ah
dec     [esp+1ch+var_c]
jnz     short loc_4190bd
mov     eax, [esp+1ch+var_4]
mov     esi, ds:globalunlock
mov     ecx, [eax+40h]
push    ecx
call    esi
mov     ecx, [esp+1ch+hmem]
push    ecx
call    esi
mov     eax, [esp+1ch+var_a+2]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     ax, [eax+86h]
mov     dx, [ecx+6]
push    eax
push    edx
push    0
call    sub_4878b0
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     ax, [eax+86h]
mov     dx, [ecx+6]
push    eax
push    edx
push    0
call    sub_487860
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     ax, [eax+86h]
mov     dx, [ecx+6]
push    eax
push    edx
call    sub_487040
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    ebx
push    esi
mov     bx, [eax+86h]
push    edi
mov     esi, [esp+10h+arg_8]
push    ebp
mov     bp, [esp+14h+arg_4]
push    ebx
push    ebp
call    sub_487170
add     esp, 8
mov     [esi+2], eax
push    ebx
push    ebp
call    sub_487140
mov     [esi], ax
add     esp, 8
push    ebx
push    ebp
call    sub_4871a0
mov     ecx, [esp+1ch+arg_0]
add     esp, 8
mov     edi, eax
mov     eax, [esp+14h+arg_0]
push    ebx
push    ebp
mov     eax, [eax+10h]
add     eax, edi
mov     [esi+6], eax
mov     edx, [ecx+18h]
mov     [esp+1ch+var_4], edx
call    sub_4871d0
mov     edx, [esp+1ch+arg_0]
sub     [esp+1ch+var_4], eax
mov     ecx, [esp+1ch+var_4]
add     esp, 8
mov     [esi+0ah], ecx
lea     ecx, [esi+0eh]
mov     eax, [edx+10h]
push    ecx
push    ebx
mov     [esi+10h], eax
push    ebp
call    sub_487200
add     esp, 0ch
mov     ecx, [esi+2]
mov     [esi+14h], eax
lea     edx, [edi+ecx]
test    edx, edx
jge     short loc_41923f
neg     edi
pop     ebp
mov     [esi+2], edi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esi+0ah]
sub     eax, [esi+6]
sub     eax, 14h
cmp     ecx, eax
jle     short loc_41924f
mov     [esi+2], eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
mov     dx, [ecx+6]
push    eax
mov     eax, [esp+4+arg_0]
push    edx
push    eax
call    sub_4191a0
add     esp, 0ch
retn
mov     eax, [esp+arg_8]
sub     esp, 54h
push    ebx
push    esi
mov     si, [eax+6]
push    edi
mov     edi, [esp+60h+arg_4]
mov     bx, [edi+86h]
push    ebx
push    esi
call    sub_487070
add     esp, 8
push    eax
mov     eax, [edi+56h]
push    eax
call    sub_4157d0
lea     eax, [esp+68h+var_38]
add     esp, 8
push    eax
push    ebx
push    esi
call    sub_487730
lea     eax, [esp+6ch+var_38]
lea     edx, [esp+6ch+var_1c]
add     esp, 0ch
mov     ecx, [edi+56h]
push    eax
push    ecx
push    edx
call    sub_449700
lea     edi, [esp+6ch+var_54]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+60h+var_54]
mov     eax, [esp+60h+arg_0]
mov     edi, eax
mov     ecx, 7
rep movsd
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     ax, [ecx+2ah]
retn
mov     eax, [esp+hmem]
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    ds:globallock
mov     esi, eax
mov     ax, [esp+10h+arg_4]
test    ax, ax
jg      short loc_41932e
xor     ax, ax
mov     dx, [esi+2ah]
mov     cx, [esp+10h+arg_8]
cmp     dx, cx
jl      short loc_41933f
mov     dx, cx
movsx   ebp, ax
movsx   ebx, dx
sub     ebx, ebp
push    42h
lea     eax, [ebx+1]
push    eax
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_41937f
push    esi
call    sub_415000
add     esp, 4
mov     eax, [esi+26h]
add     eax, ebp
mov     ecx, [edi]
push    ebx
push    eax
push    ecx
call    _memcpy
add     esp, 0ch
push    esi
call    sub_415050
add     esp, 4
mov     eax, [esp+10h+hmem]
push    eax
call    ds:globalunlock
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+hmem]
push    edi
call    ds:globallock
mov     si, [esp+10h+arg_4]
mov     ebx, eax
test    si, si
jg      short loc_4193be
xor     si, si
mov     bp, [ebx+2ah]
mov     ax, [esp+10h+arg_8]
cmp     bp, ax
jl      short loc_4193cf
mov     bp, ax
push    ebx
call    sub_415000
add     esp, 4
mov     eax, [ebx+26h]
movsx   ecx, si
movsx   esi, bp
sub     esi, ecx
add     eax, ecx
mov     ebp, [esp+10h+arg_c]
push    esi
push    eax
push    ebp
call    _memcpy
add     esp, 0ch
mov     byte ptr [esi+ebp], 0
push    ebx
call    sub_415050
add     esp, 4
push    edi
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_4]
mov     eax, [esp+arg_0]
mov     edx, [eax]
mov     eax, [ecx]
mov     [edx+10h], eax
add     edx, 10h
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     ecx, [eax]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     ecx, [eax]
mov     eax, [ecx+10h]
add     ecx, 10h
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    ebp
mov     ecx, [eax]
mov     ebx, [esp+10h+arg_4]
mov     edi, [ecx]
mov     ebp, [ecx+8]
mov     eax, [ecx+4]
sub     ebp, edi
mov     edx, [ecx+0ch]
sub     edx, eax
mov     esi, [ebx]
sub     esi, edi
mov     edi, [ebx+4]
sub     edi, eax
mov     eax, [ebx]
mov     [ecx], eax
mov     eax, [ebx+4]
mov     [ecx+4], eax
mov     eax, [ebx+8]
mov     [ecx+8], eax
mov     eax, [ebx+0ch]
mov     [ecx+0ch], eax
mov     eax, [ebx+8]
sub     eax, [ebx]
cmp     eax, ebp
jnz     short loc_41951c
mov     eax, [ebx+0ch]
mov     ebp, eax
sub     ebp, [ebx+4]
cmp     ebp, edx
jz      short loc_4194f8
cmp     eax, 7d00h
jnz     short loc_41951c
cmp     word ptr [ecx+68h], 7fffh
jnz     short loc_419511
mov     word ptr [ecx+68h], 0fffdh
pop     ebp
mov     [ecx+7ah], esi
mov     [ecx+7eh], edi
pop     edi
pop     esi
pop     ebx
retn
mov     word ptr [ecx+68h], 0ffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     word ptr [ecx+68h], 0ffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     eax, [ecx+56h]
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     ax, [ecx+8ch]
retn
push    ebx
push    esi
mov     esi, [esp+8+hmem]
push    edi
push    esi
call    sub_419540
mov     bx, ax
mov     edi, [esp+10h+arg_4]
add     esp, 4
push    edi
push    esi
call    sub_419470
add     esp, 8
mov     eax, 0ffffffffh
cmp     bx, 1
jg      short loc_41957e
xor     eax, eax
add     [edi], eax
add     [edi+4], eax
cmp     bx, 1
mov     eax, 1
jg      short loc_419590
xor     eax, eax
mov     ebx, [edi+8]
push    esi
add     ebx, eax
add     [edi+0ch], eax
mov     [edi+8], ebx
call    sub_4199a0
add     esp, 4
add     eax, ebx
mov     [edi+8], eax
push    esi
call    sub_419ef0
add     esp, 4
add     [edi+0ch], eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     eax, [eax]
mov     dx, [eax+4ah]
mov     [ecx], dx
mov     dx, [eax+4ch]
mov     eax, [esp+arg_8]
mov     [eax], dx
retn
mov     ecx, [esp+arg_0]
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    0
push    eax
push    0
push    ecx
call    sub_414b30
add     esp, 10h
cmp     [esp+18h+hmem], 0
jz      short loc_41960d
mov     eax, [esp+18h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [esp+18h+var_18+2]
add     esp, 18h
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     ax, [ecx+6ch]
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     eax, [ecx+5ah]
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     di, 0ffffh
push    ebp
push    esi
call    sub_415000
mov     bx, [esi+3eh]
add     esp, 4
movsx   eax, bx
mov     edx, [esi+3ah]
mov     ecx, eax
shl     eax, 3
sub     eax, ecx
lea     ebp, [edx+eax*2-0eh]
mov     eax, [esp+10h+arg_4]
cmp     [edx+2], eax
jl      short loc_419678
xor     di, di
jmp     short loc_4196a1
cmp     [ebp+10h], eax
jg      short loc_419682
lea     edi, [ebx-1]
jmp     short loc_4196a1
xor     cx, cx
cmp     edx, ebp
ja      short loc_4196a1
cmp     [edx+2], eax
jg      short loc_419693
cmp     [edx+10h], eax
jg      short loc_41969e
inc     cx
add     edx, 0eh
cmp     edx, ebp
jbe     short loc_419689
jmp     short loc_4196a1
mov     di, cx
push    esi
call    sub_415050
mov     ax, di
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_4]
sub     esp, 10h
lea     eax, [esp+10h+var_10]
push    esi
mov     esi, [esp+14h+arg_0]
push    0
push    eax
push    ecx
push    esi
call    sub_415fb0
mov     ecx, [esp+24h+var_c]
add     esp, 10h
push    ecx
push    esi
call    sub_419640
add     esp, 8
pop     esi
add     esp, 10h
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
mov     ecx, [esp+8+arg_4]
mov     eax, [eax+92h]
push    ecx
mov     edx, [eax]
push    edx
call    sub_47da20
add     esp, 8
mov     edi, eax
push    esi
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
push    eax
call    sub_419760
add     esp, 4
mov     edi, eax
push    esi
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 28h
push    ebx
push    esi
mov     esi, [esp+30h+arg_0]
push    edi
xor     edi, edi
mov     ecx, [esi+92h]
test    ecx, ecx
jz      loc_419853
lea     ebx, [esi+10h]
lea     edx, [esp+34h+rc]
mov     eax, [ebx]
mov     [edx], eax
mov     eax, [ebx+4]
mov     [edx+4], eax
mov     eax, [ebx+8]
mov     ebx, [ebx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ebx
mov     [ecx+10h], edi
mov     ecx, [esi+92h]
mov     edx, ds:dword_4a6068
mov     eax, [ecx+4]
mov     ecx, ds:dword_4a606c
add     [esp+34h+rc.bottom], eax
mov     ax, [esi+4ch]
mov     [esp+34h+pt.x], edx
mov     [esp+34h+pt.y], ecx
mov     cx, [esi+4ah]
cmp     cx, ax
jz      short loc_4197d3
cmp     [esi+6eh], cx
jz      short loc_4197d0
mov     eax, ecx
mov     cx, ax
lea     eax, [esp+34h+var_20]
push    0
push    eax
push    ecx
push    esi
call    sub_415fb0
mov     eax, [esp+44h+var_20]
mov     ecx, [esp+44h+var_14]
mov     [esp+44h+pt.x], eax
add     esp, 10h
cmp     [esp+34h+rc.bottom], ecx
jl      short loc_41981a
mov     eax, [esp+34h+var_1c]
cmp     [esp+34h+rc.top], eax
jle     short loc_419806
mov     [esp+34h+pt.y], eax
jmp     short loc_41981e
mov     eax, [esp+34h+var_14]
mov     ecx, [esp+34h+var_1c]
sub     eax, [esp+34h+var_1c]
cdq
sub     eax, edx
sar     eax, 1
add     ecx, eax
mov     [esp+34h+pt.y], ecx
mov     eax, [esp+34h+pt.x]
mov     ecx, [esp+34h+pt.y]
lea     edx, [esp+34h+rc]
push    ecx
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jnz     short loc_419853
mov     eax, [esp+34h+pt.y]
push    eax
push    esi
mov     edi, 1
call    sub_41a170
add     esp, 8
push    esi
call    sub_414840
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
push    eax
call    sub_419890
add     esp, 4
mov     edi, eax
push    esi
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
xor     esi, esi
cmp     [eax+9ah], esi
jz      short loc_4198b9
cmp     [eax+92h], esi
jz      short loc_4198b9
push    eax
call    sub_419940
add     esp, 4
test    eax, eax
jnz     short loc_4198b9
mov     esi, 1
mov     eax, esi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
cmp     [eax+9ah], edi
jz      short loc_4198e2
push    esi
call    sub_4198f0
add     esp, 4
mov     edi, eax
push    esi
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     eax, [eax]
cmp     dword ptr [eax+9ah], 0
jz      short loc_41990e
cmp     dword ptr [eax+92h], 0
jz      short loc_41990e
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     eax, [ecx+9ah]
retn
mov     eax, [esp+arg_0]
mov     eax, [eax+9ah]
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, 1
cmp     dword ptr [esi+92h], 0
jz      short loc_419999
push    esi
call    sub_419f10
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jge     short loc_419999
push    esi
call    sub_415000
movsx   ecx, word ptr [esi+3eh]
add     esp, 4
mov     eax, ecx
shl     ecx, 3
sub     ecx, eax
mov     eax, [esi+3ah]
mov     eax, [eax+ecx*2+2]
mov     ecx, [esi+1ch]
sub     eax, [esi+4]
add     ecx, ebx
add     eax, [esi+14h]
cmp     eax, ecx
jl      short loc_419990
xor     edi, edi
push    esi
call    sub_415050
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+hmem]
push    esi
xor     esi, esi
push    eax
call    sub_4198c0
add     esp, 4
test    eax, eax
jz      short loc_4199b9
mov     esi, 10h
mov     eax, esi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
mov     eax, [eax+92h]
test    eax, eax
jz      short loc_4199e6
mov     eax, [eax]
push    eax
call    sub_47d790
add     esp, 4
mov     edi, eax
push    esi
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+hmem]
push    esi
call    ds:globallock
mov     ecx, [eax+92h]
test    ecx, ecx
jz      short loc_419a2b
mov     eax, [esp+4+arg_8]
mov     edx, [esp+4+arg_4]
push    eax
mov     ecx, [ecx]
push    edx
push    ecx
call    sub_47d740
add     esp, 0ch
push    esi
call    ds:globalunlock
pop     esi
retn
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+hmem]
push    edi
call    ds:globallock
mov     ebx, eax
mov     esi, [esp+10h+hdc]
push    edi
mov     [ebx+56h], esi
call    sub_4198f0
add     esp, 4
test    eax, eax
jz      short loc_419a8a
mov     eax, [ebx+92h]
push    edi
mov     ebp, [eax]
call    sub_419860
add     esp, 4
push    eax
push    ebp
call    sub_47da50
add     esp, 8
push    esi
push    ebp
call    sub_47d7e0
add     esp, 8
mov     dword ptr [ebx+56h], 0
push    edi
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
test    edi, edi
jz      short loc_419ae2
mov     esi, [esp+8+arg_0]
push    esi
call    sub_415000
movsx   eax, word ptr [esi+3eh]
mov     ecx, eax
shl     eax, 3
sub     eax, ecx
add     esp, 4
mov     edx, [esi+3ah]
lea     eax, [edx+eax*2]
cmp     edx, eax
ja      short loc_419ad9
sub     [edx+2], edi
sub     [edx+0ah], edi
add     edx, 0eh
cmp     edx, eax
jbe     short loc_419acc
push    esi
call    sub_415050
add     esp, 4
pop     edi
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+hmem]
push    edi
push    ebp
mov     edi, 0
test    esi, esi
jz      short loc_419b0d
push    esi
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      loc_419c2f
mov     eax, [edi+92h]
test    eax, eax
jz      loc_419c2f
mov     ebx, [esp+20h+arg_4]
sub     ebx, [eax+0ch]
jz      loc_419c28
push    edi
call    sub_41a480
add     esp, 4
test    eax, eax
jz      loc_419c28
xor     ebp, ebp
cmp     [edi+56h], ebp
jnz     short loc_419b64
mov     eax, [edi+82h]
push    eax
call    sub_474d50
add     esp, 4
mov     [edi+56h], eax
cmp     eax, ebp
jz      short loc_419b64
mov     ebp, [edi+82h]
cmp     dword ptr [edi+56h], 0
jz      loc_419c03
mov     eax, [edi+14h]
mov     ecx, [edi+1ch]
sub     ecx, eax
lea     edx, [edi+10h]
sub     eax, [esp+20h+arg_4]
mov     [edi+4], eax
add     eax, ecx
lea     ecx, [esp+20h+rcsrc2]
mov     [edi+0ch], eax
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+4]
mov     [ecx+4], eax
mov     eax, [edx+8]
mov     [ecx+8], eax
push    ebx
mov     edx, [edx+0ch]
push    edi
mov     [ecx+0ch], edx
mov     ecx, [edi+92h]
mov     eax, [ecx+4]
add     [esp+28h+rcsrc2.right], 10h
add     [esp+28h+rcsrc2.bottom], eax
call    sub_419aa0
add     esp, 8
mov     ecx, [edi+9eh]
test    ecx, ecx
jz      short loc_419bd9
lea     eax, [esp+20h+rcsrc2]
mov     edx, [edi+0a2h]
push    eax
push    edx
push    esi
call    ecx
add     esp, 0ch
jmp     short loc_419be8
lea     eax, [esp+20h+rcsrc2]
push    2
push    eax
call    sub_4753c0
add     esp, 8
cmp     [esp+20h+arg_8], 0
jz      short loc_419c03
call    sub_47dcc0
test    eax, eax
jz      short loc_419c03
mov     ebx, [edi+56h]
call    sub_475320
mov     [edi+56h], ebx
test    ebp, ebp
jz      short loc_419c1b
mov     eax, [edi+56h]
push    eax
push    ebp
call    __beep_0
mov     dword ptr [edi+56h], 0
add     esp, 8
mov     ecx, [edi+92h]
mov     eax, [esp+20h+arg_4]
mov     [ecx+0ch], eax
push    esi
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+arg_4]
push    edi
push    ebp
xor     edi, edi
cmp     ebx, edi
jz      loc_419cda
mov     esi, [esp+14h+hmem]
push    esi
call    ds:globallock
mov     [eax+56h], ebx
mov     ebp, eax
cmp     [eax+92h], edi
jz      short loc_419ccc
push    ebp
call    sub_419890
add     esp, 4
test    eax, eax
jz      short loc_419ccc
mov     eax, [ebp+92h]
mov     ebx, [eax]
test    ebx, ebx
jz      short loc_419ccc
push    ebx
call    sub_47d790
mov     ecx, [esp+18h+pt.y]
mov     [esp+18h+var_4], eax
mov     eax, [esp+18h+pt.x]
add     esp, 4
push    ecx
push    eax
push    ebx
call    sub_47d840
add     esp, 0ch
mov     edi, eax
push    ebx
call    sub_47d790
add     esp, 4
mov     ebx, eax
cmp     ebx, [esp+14h+var_4]
jz      short loc_419ccc
mov     eax, 1
jle     short loc_419cc2
xor     eax, eax
push    eax
push    ebp
call    sub_41a0c0
add     esp, 8
mov     dword ptr [ebp+56h], 0
push    esi
call    ds:globalunlock
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+hmem]
push    edi
push    ebp
mov     edi, ds:globallock
push    esi
call    edi
mov     ebx, eax
push    2
push    14h
call    sub_45b8f0
add     esp, 8
mov     [ebx+8eh], eax
push    eax
call    edi
mov     [ebx+92h], eax
mov     edi, eax
mov     ebp, [esp+10h+arg_8]
xor     eax, eax
test    ebp, ebp
jnz     short loc_419d38
mov     [edi+4], eax
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     [edi+10h], eax
jmp     short loc_419d54
movsx   eax, word ptr [ebp+0]
mov     [edi+4], eax
movsx   ecx, word ptr [ebp+2]
mov     [edi+8], ecx
movsx   edx, word ptr [ebp+4]
mov     [edi+0ch], edx
mov     dword ptr [edi+10h], 0
call    sub_47ed60
cmp     eax, 1
sbb     eax, eax
inc     eax
push    eax
push    esi
push    esi
mov     ecx, [ebx+82h]
push    offset sub_419af0
push    0
push    0
push    0
push    0
push    ecx
call    sub_47d640
add     esp, 24h
mov     [edi], eax
test    ebp, ebp
jz      short loc_419d92
movsx   eax, word ptr [ebp+0]
mov     ecx, [ebx+1ch]
sub     ecx, [ebx+14h]
add     eax, ecx
jmp     short loc_419d96
mov     eax, [esp+10h+arg_4]
push    0
push    1
push    eax
push    ebx
call    sub_41a3b0
add     esp, 10h
push    esi
call    ds:globalunlock
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
push    esi
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      short loc_419e34
cmp     dword ptr [edi+8eh], 0
jz      short loc_419e0d
mov     eax, [edi+92h]
test    eax, eax
jz      short loc_419dfe
mov     eax, [eax]
push    eax
call    sub_47d6b0
add     esp, 4
mov     eax, [edi+8eh]
push    eax
call    ds:globalunlock
mov     eax, [edi+8eh]
push    eax
call    sub_45ba00
add     esp, 4
mov     dword ptr [edi+92h], 0
mov     dword ptr [edi+8eh], 0
mov     eax, [edi+14h]
push    esi
mov     [edi+4], eax
mov     ecx, [edi+1ch]
mov     [edi+0ch], ecx
call    ds:globalunlock
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+hmem]
push    esi
call    ds:globallock
push    eax
call    sub_419e60
add     esp, 4
push    esi
call    ds:globalunlock
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     eax, [esi+92h]
test    eax, eax
jz      short loc_419ebf
mov     edi, [eax+4]
mov     eax, [eax]
add     edi, [esi+1ch]
push    eax
sub     edi, [esi+14h]
call    sub_47ed70
movsx   eax, ax
add     edi, 2
add     esp, 4
cmp     eax, edi
jle     short loc_419ea2
mov     eax, [esi+92h]
mov     ecx, [eax]
push    ecx
call    sub_47ed70
movsx   edi, ax
add     esp, 4
push    edi
mov     eax, [esi+14h]
push    10h
dec     eax
push    eax
mov     ecx, [esi+18h]
push    ecx
mov     edx, [esi+92h]
mov     eax, [edx]
push    eax
call    sub_47d7b0
add     esp, 14h
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     edx, [eax]
mov     ecx, [edx+92h]
test    ecx, ecx
jz      short locret_419ee7
mov     eax, [esp+arg_4]
mov     [ecx+4], eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     eax, [ecx+92h]
test    eax, eax
jz      short loc_419f04
mov     eax, [eax+4]
retn
xor     eax, eax
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
mov     ecx, [ecx+92h]
test    ecx, ecx
jz      short locret_419f23
mov     eax, [ecx+4]
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     eax, 0
cmp     dword ptr [ecx+92h], 1
adc     eax, 0ffffffffh
and     eax, 10h
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+92h], 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, 10h
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    ebp
cmp     dword ptr [esi+92h], 0
jz      loc_41a02a
mov     ebx, 0ffffffffh
push    esi
mov     di, bx
call    sub_415000
add     esp, 4
mov     ebp, [esi+14h]
mov     eax, [esi+92h]
mov     ecx, 0
mov     [esp+18h+var_4], ebp
mov     eax, [eax+4]
test    eax, eax
jge     short loc_419fb4
mov     ecx, eax
mov     eax, [esi+1ch]
mov     edx, [esi+3ah]
add     eax, ecx
movsx   ecx, word ptr [esi+3eh]
mov     [esp+18h+var_8], eax
mov     eax, ecx
shl     ecx, 3
sub     ecx, eax
lea     eax, [edx+ecx*2-0eh]
xor     cx, cx
cmp     eax, edx
jb      short loc_41a013
cmp     bx, 0ffffh
jnz     short loc_419fe8
mov     ebp, [esp+18h+var_4]
cmp     [edx+2], ebp
jl      short loc_419fe8
mov     bx, cx
cmp     di, 0ffffh
jnz     short loc_419ffe
cmp     eax, edx
jz      short loc_419ffb
mov     ebp, [esp+18h+var_8]
cmp     [edx+1eh], ebp
jl      short loc_419ffe
mov     di, cx
cmp     bx, 0ffffh
jz      short loc_41a00a
cmp     di, 0ffffh
jnz     short loc_41a013
inc     cx
add     edx, 0eh
cmp     eax, edx
jnb     short loc_419fd6
mov     eax, [esp+18h+arg_4]
mov     ecx, [esp+18h+arg_8]
mov     [eax], bx
push    esi
mov     [ecx], di
call    sub_415050
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     eax, [esi+92h]
test    eax, eax
jz      short loc_41a0b6
mov     ebx, [eax]
push    ebx
call    sub_47d790
lea     ecx, [esp+18h+var_4+2]
add     esp, 4
mov     ebp, eax
lea     eax, [esp+14h+var_4]
push    eax
push    ecx
push    esi
call    sub_419f70
mov     ax, [esp+20h+arg_4]
add     esp, 0ch
cmp     word ptr [esp+14h+var_4+2], ax
jle     short loc_41a08a
push    eax
mov     eax, [esp+18h+var_4+2]
jmp     short loc_41a096
cmp     word ptr [esp+14h+var_4], ax
jge     short loc_41a0a2
push    eax
mov     eax, [esp+18h+var_4]
push    eax
push    esi
call    sub_41a290
add     esp, 0ch
mov     edi, eax
test    edi, edi
jz      short loc_41a0b6
push    1
lea     eax, [ebp+edi+0]
push    eax
push    ebx
call    sub_47d740
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+14h+arg_0]
mov     esi, [edi+14h]
mov     edx, [edi+92h]
inc     esi
mov     ecx, [edi+1ch]
mov     eax, [edx+4]
mov     ebx, [edx]
push    ebx
lea     ebp, [eax+ecx-1]
call    sub_47d790
mov     [esp+18h+var_4], eax
add     esp, 4
push    edi
call    sub_415000
add     esp, 4
cmp     [esp+14h+arg_4], 0
jz      short loc_41a11e
push    esi
push    edi
call    sub_419640
movsx   ecx, ax
add     esp, 8
mov     eax, ecx
shl     ecx, 3
sub     ecx, eax
mov     eax, [edi+3ah]
mov     ecx, [eax+ecx*2+2]
sub     ecx, esi
inc     ecx
jmp     short loc_41a13c
push    ebp
push    edi
call    sub_419640
movsx   ecx, ax
add     esp, 8
mov     eax, ecx
shl     ecx, 3
sub     ecx, eax
mov     eax, [edi+3ah]
mov     ecx, [eax+ecx*2+10h]
sub     ecx, ebp
dec     ecx
test    ecx, ecx
jz      short loc_41a152
mov     eax, [esp+14h+var_4]
push    1
add     eax, ecx
push    eax
push    ebx
call    sub_47d740
add     esp, 0ch
push    edi
call    sub_415050
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    eax
push    esi
call    sub_419640
add     esp, 8
push    eax
push    esi
call    sub_41a040
add     esp, 8
pop     esi
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
mov     eax, [edi+92h]
test    eax, eax
jz      short loc_41a1e4
mov     si, [esp+0ch+arg_4]
test    si, si
jz      short loc_41a1e4
mov     ebx, [eax]
push    ebx
call    sub_47d790
add     esp, 4
mov     ecx, [edi+92h]
mov     edx, [ecx+4]
push    1
movsx   ecx, si
sub     edx, [edi+14h]
add     edx, [edi+1ch]
imul    ecx, edx
add     ecx, eax
push    ecx
push    ebx
call    sub_47d740
add     esp, 0ch
push    1
push    edi
call    sub_41a1f0
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
push    esi
call    sub_415000
lea     eax, [esp+10h+var_4]
lea     ecx, [esp+10h+var_2]
add     esp, 4
mov     edi, [esi+3ah]
push    eax
push    ecx
push    esi
call    sub_419f70
mov     ecx, [esp+18h+arg_4]
add     esp, 0ch
test    ecx, ecx
jz      short loc_41a227
movsx   eax, [esp+0ch+var_2]
jmp     short loc_41a22c
movsx   eax, [esp+0ch+var_4]
lea     edx, ds:0[eax*8]
sub     edx, eax
test    ecx, ecx
lea     edi, [edi+edx*2]
mov     dx, [edi]
jnz     short loc_41a25a
movsx   ecx, word ptr [esi+3eh]
mov     dx, [edi+0eh]
dec     ecx
mov     eax, ecx
shl     ecx, 3
sub     ecx, eax
add     ecx, ecx
add     ecx, [esi+3ah]
cmp     ecx, edi
jz      short loc_41a25a
dec     dx
mov     [esi+70h], dx
push    esi
mov     [esi+6eh], dx
mov     [esi+4ch], dx
mov     [esi+4ah], dx
call    sub_415050
add     esp, 4
push    esi
call    sub_414840
add     esp, 4
pop     edi
pop     esi
add     esp, 4
retn
push    ebx
push    esi
mov     bx, [esp+8+arg_8]
push    edi
mov     di, [esp+0ch+arg_4]
push    ebp
xor     ebp, ebp
cmp     bx, di
jz      short loc_41a2eb
mov     esi, [esp+10h+arg_0]
push    esi
call    sub_415000
movsx   eax, di
mov     ecx, eax
shl     eax, 3
sub     eax, ecx
add     esp, 4
mov     edx, [esi+3ah]
lea     ecx, [edx+eax*2]
movsx   eax, bx
mov     ebp, eax
shl     eax, 3
sub     eax, ebp
cmp     bx, di
lea     eax, [edx+eax*2]
jle     short loc_41a2dc
mov     ebp, [eax+10h]
sub     ebp, [ecx+10h]
jmp     short loc_41a2e2
mov     ebp, [eax+2]
sub     ebp, [ecx+2]
push    esi
call    sub_415050
add     esp, 4
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, [esp+0ch+arg_4]
push    ebp
test    esi, esi
jz      loc_41a3a7
push    esi
call    sub_415000
add     esp, 4
cmp     dword ptr [esi+92h], 0
jz      short loc_41a39e
mov     ebx, [esi+14h]
mov     ecx, [esi+3ah]
movsx   eax, word ptr [esi+3eh]
lea     edx, [edi+ebx]
mov     ebp, eax
shl     eax, 3
sub     eax, ebp
lea     eax, [ecx+eax*2-0eh]
test    eax, eax
jz      short loc_41a39e
cmp     [esi+1ch], edx
jl      short loc_41a382
mov     ebp, [esp+10h+arg_8]
test    ebp, ebp
jz      short loc_41a369
cmp     ecx, eax
ja      short loc_41a39e
mov     ebp, [ecx+10h]
cmp     ebp, edx
jge     short loc_41a363
add     ecx, 0eh
cmp     ecx, eax
jbe     short loc_41a353
jmp     short loc_41a39e
sub     ebp, ebx
mov     edi, ebp
jmp     short loc_41a39e
mov     edi, [ecx+10h]
cmp     ecx, eax
ja      short loc_41a39c
mov     ebp, [ecx+10h]
cmp     ebp, edx
jge     short loc_41a39c
mov     edi, ebp
add     ecx, 0eh
cmp     ecx, eax
jbe     short loc_41a370
jmp     short loc_41a39c
mov     edi, [eax+10h]
mov     ecx, edi
sub     ecx, [eax+2]
test    ecx, ecx
jg      short loc_41a392
mov     edi, edx
jmp     short loc_41a39c
cmp     edi, edx
jge     short loc_41a39c
add     edi, ecx
cmp     edi, edx
jl      short loc_41a396
sub     edi, ebx
push    esi
call    sub_415050
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+92h]
test    eax, eax
jz      loc_41a47b
mov     eax, [eax]
push    eax
call    sub_47ed70
movsx   ecx, ax
mov     eax, [esp+8+arg_4]
add     esp, 4
cmp     ecx, eax
jle     short loc_41a3ed
mov     eax, [esi+92h]
mov     ecx, [eax]
push    ecx
call    sub_47ed70
movsx   eax, ax
add     esp, 4
cmp     [esp+4+arg_c], 0
jz      short loc_41a403
mov     ecx, [esp+4+arg_8]
push    ecx
push    eax
push    esi
call    sub_41a300
add     esp, 0ch
mov     ecx, [esi+14h]
sub     ecx, [esi+1ch]
lea     edx, [ecx+eax]
mov     ecx, [esi+92h]
test    edx, edx
mov     [ecx+4], edx
jge     short loc_41a439
push    1eh
push    5
push    eax
mov     ecx, [esi+92h]
push    1
mov     eax, 1
sub     eax, edx
mov     edx, [ecx]
push    eax
push    edx
call    sub_47d6c0
add     esp, 18h
push    esi
call    sub_419e60
add     esp, 4
mov     eax, [esi+14h]
sub     eax, [esi+4]
test    eax, eax
jle     short loc_41a460
push    0
push    eax
mov     eax, [esi+92h]
mov     ecx, [eax]
push    ecx
call    sub_47d740
add     esp, 0ch
push    esi
call    sub_419890
add     esp, 4
push    eax
mov     eax, [esi+92h]
mov     ecx, [eax]
push    ecx
call    sub_47da50
add     esp, 8
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+82h]
push    eax
call    ds:iswindow
test    eax, eax
jnz     short loc_41a4cf
cmp     ds:frequency, 0
jz      short loc_41a4cf
mov     eax, ds:frequency
push    esi
mov     [esi+82h], eax
call    sub_419930
add     esp, 4
test    eax, eax
jz      short loc_41a4cf
mov     eax, [esi+82h]
mov     ecx, [esi+92h]
push    eax
mov     edx, [ecx]
push    edx
call    sub_47dd30
add     esp, 8
cmp     dword ptr [esi+82h], 1
sbb     eax, eax
pop     esi
inc     eax
retn
push    esi
mov     esi, [esp+4+hmem]
push    esi
call    ds:globallock
mov     ecx, [esp+4+arg_4]
push    ecx
push    eax
call    sub_41a510
add     esp, 8
push    esi
call    ds:globalunlock
pop     esi
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short locret_41a53f
mov     dword ptr [eax+56h], 0
mov     ecx, [esp+arg_4]
mov     [eax+82h], ecx
mov     eax, [eax+92h]
test    eax, eax
jz      short locret_41a53f
push    ecx
mov     eax, [eax]
push    eax
call    sub_47dd30
add     esp, 8
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     word ptr [ecx+68h], 0ffffh
retn
sub     esp, 10h
lea     eax, [esp+10h+var_10]
push    esi
mov     esi, [esp+14h+arg_0]
push    eax
push    esi
call    sub_419470
add     esp, 8
push    esi
call    sub_419f30
add     [esp+18h+var_8], eax
add     esp, 4
push    esi
call    sub_419ef0
lea     ecx, [esp+18h+var_10]
mov     edx, [esp+18h+arg_4]
add     [esp+18h+var_4], eax
add     esp, 4
mov     eax, [ecx]
mov     esi, [ecx+4]
mov     [edx], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+4], esi
pop     esi
mov     [edx+8], eax
mov     [edx+0ch], ecx
add     esp, 10h
retn
mov     ecx, [esp+arg_4]
sub     esp, 10h
lea     edx, [esp+10h+var_10]
push    esi
mov     eax, [ecx]
mov     esi, [ecx+4]
mov     [edx], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+4], esi
mov     esi, [esp+14h+arg_0]
mov     [edx+8], eax
push    esi
mov     [edx+0ch], ecx
call    sub_419f30
sub     [esp+18h+var_8], eax
add     esp, 4
push    esi
call    sub_419ef0
lea     ecx, [esp+18h+var_10]
sub     [esp+18h+var_4], eax
add     esp, 4
push    ecx
push    esi
call    sub_419410
add     esp, 8
pop     esi
add     esp, 10h
retn
mov     ecx, dword ptr [esp+arg_4]
sub     esp, 0ch
lea     eax, [esp+0ch+var_c]
push    esi
mov     esi, [esp+10h+hmem]
push    eax
push    ecx
push    esi
call    sub_41a660
add     esp, 0ch
test    ax, ax
jnz     short loc_41a63a
mov     eax, 0ffffffffh
pop     esi
add     esp, 0ch
retn
mov     eax, dword ptr [esp+10h+var_c+2]
mov     ecx, dword ptr [esp+10h+var_c]
mov     edx, [esp+10h+arg_8]
push    eax
push    ecx
push    edx
push    esi
call    sub_41a8f0
add     esp, 10h
mov     eax, 0ffffffffh
pop     esi
add     esp, 0ch
retn
push    ebx
push    esi
mov     esi, [esp+8+hmem]
push    edi
mov     edi, [esp+0ch+arg_8]
push    ebp
xor     bp, bp
mov     ebx, 4
inc     bp
push    edi
push    ebp
push    esi
call    sub_4152f0
add     esp, 0ch
test    eax, eax
jz      short loc_41a69c
cmp     [edi+8], bl
jnz     short loc_41a674
movsx   eax, [esp+10h+arg_4]
cmp     [edi+4], eax
jnz     short loc_41a674
mov     ax, bp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
mov     [esp+10h+var_10], 0
push    ebx
push    esi
mov     bx, 1
push    edi
mov     esi, [esp+1ch+arg_4]
push    ebp
mov     word ptr [esi], 0
mov     edi, [esp+20h+arg_8]
mov     word ptr [edi], 0
lea     eax, [esp+20h+var_c]
mov     ebp, [esp+20h+hmem]
push    eax
push    1
push    ebp
call    sub_4152f0
add     esp, 0ch
test    eax, eax
jz      short loc_41a73a
cmp     [esp+20h+var_4], 4
jz      short loc_41a6fb
cmp     [esp+20h+var_4], 5
jnz     short loc_41a725
mov     [esp+20h+var_10], 1
mov     cx, [esp+20h+var_8]
mov     ax, [esi]
test    ax, ax
jnz     short loc_41a715
mov     [esi], cx
jmp     short loc_41a722
cmp     ax, cx
jle     short loc_41a71d
mov     [esi], cx
cmp     [edi], cx
jge     short loc_41a725
mov     [edi], cx
inc     bx
lea     eax, [esp+20h+var_c]
push    eax
push    ebx
push    ebp
call    sub_4152f0
add     esp, 0ch
test    eax, eax
jnz     short loc_41a6ed
mov     eax, [esp+20h+var_10]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 0ch
lea     eax, [esp+0ch+var_c]
push    ebx
push    esi
push    edi
mov     si, 1
push    ebp
xor     edi, edi
push    eax
mov     ebp, [esp+20h+hmem]
push    1
push    ebp
call    sub_4152f0
add     esp, 0ch
test    eax, eax
jz      short loc_41a796
mov     ebx, 4
cmp     [esp+1ch+var_4], bl
jnz     short loc_41a781
inc     edi
inc     si
lea     eax, [esp+1ch+var_c]
push    eax
push    esi
push    ebp
call    sub_4152f0
add     esp, 0ch
test    eax, eax
jnz     short loc_41a77a
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 0ch
lea     eax, [esp+0ch+var_c]
push    ebx
mov     bx, 1
push    esi
mov     esi, [esp+14h+hmem]
push    edi
push    ebp
push    eax
push    1
push    esi
call    sub_4152f0
add     esp, 0ch
test    eax, eax
jz      loc_41a854
mov     edi, [esp+1ch+arg_4]
mov     ebp, [esp+1ch+arg_8]
cmp     [esp+1ch+var_4], 4
jnz     short loc_41a83b
mov     cx, [esp+1ch+var_8]
test    cx, cx
jnz     short loc_41a801
test    ebp, ebp
jz      short loc_41a823
cmp     ebp, 1
jz      short loc_41a7f0
cmp     ebp, 2
jnz     short loc_41a83b
jmp     short loc_41a823
mov     eax, [esp+12h]
mov     ecx, dword ptr [esp+1ch+var_c]
push    eax
push    ecx
push    offset szdelim
jmp     short loc_41a832
test    ebp, ebp
jz      short loc_41a80c
cmp     ebp, 2
jz      short loc_41a823
jmp     short loc_41a83b
mov     eax, dword ptr [esp+1ch+var_c+2]
mov     edx, dword ptr [esp+1ch+var_c]
push    eax
push    edx
push    ecx
push    edi
push    esi
call    sub_41a860
add     esp, 14h
jmp     short loc_41a83b
mov     eax, dword ptr [esp+1ch+var_c+2]
mov     ecx, dword ptr [esp+1ch+var_c]
push    eax
push    ecx
push    offset windowname
push    esi
call    sub_413ac0
add     esp, 10h
inc     bx
lea     eax, [esp+1ch+var_c]
push    eax
push    ebx
push    esi
call    sub_4152f0
add     esp, 0ch
test    eax, eax
jnz     loc_41a7cf
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 18h
push    ebx
push    esi
mov     esi, [esp+20h+arg_4]
push    edi
push    ebp
push    esi
call    sub_408fc0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_41a8e7
push    esi
call    sub_483d30
mov     di, [esp+2ch+arg_8]
mov     esi, [esp+2ch+hmem]
add     esp, 4
push    edi
push    ebx
push    esi
call    sub_41a950
add     esp, 0ch
mov     ebp, eax
lea     eax, [esp+28h+var_18]
push    1
push    eax
push    ebp
push    ebx
call    sub_41a990
add     esp, 10h
push    ebp
push    edi
push    ebx
push    esi
call    sub_41a970
add     esp, 10h
push    0
call    sub_483d30
mov     ax, [esp+2ch+arg_10]
lea     edx, [esp+2ch+var_18]
mov     cx, [esp+2ch+arg_c]
add     esp, 4
push    eax
push    ecx
push    edx
push    esi
call    sub_41a8f0
lea     ecx, [esp+38h+var_18]
add     esp, 10h
push    ecx
call    sub_41b030
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_4]
cmp     word ptr [edi], 0
jz      short loc_41a920
mov     bx, [esp+0ch+arg_8]
mov     esi, [esp+0ch+hmem]
push    ebx
push    esi
call    sub_415400
add     esp, 8
push    eax
push    0
push    0
push    edi
call    sub_41aa80
add     esp, 10h
jmp     short loc_41a929
mov     bx, [esp+0ch+arg_8]
mov     esi, [esp+0ch+hmem]
push    edi
call    sub_442d80
mov     cx, [esp+10h+arg_c]
add     esp, 4
push    ecx
push    ebx
push    eax
push    esi
call    sub_413ac0
add     esp, 10h
push    edi
call    sub_442e00
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
sub     esp, 4
lea     eax, [esp+4+var_2]
push    eax
push    ecx
push    edx
call    sub_461350
add     esp, 10h
retn
mov     eax, [esp+arg_c]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    eax
push    0
push    ecx
push    edx
call    sub_4613a0
add     esp, 10h
retn
push    ebx
push    esi
mov     eax, [esp+8+arg_0]
push    edi
cmp     [esp+0ch+arg_c], 0
movsx   ebx, word_4ad3dc
mov     word_4ad3dc, 0
push    ebp
mov     ebp, ds:dword_4a65a8
mov     ds:dword_4a65a8, eax
jnz     short loc_41a9c1
inc     word_4ad3d8
mov     ecx, [esp+10h+arg_4]
push    ecx
push    eax
call    sub_41b060
add     esp, 8
call    sub_41bbf0
cmp     word ptr [eax], 0
mov     esi, eax
jnz     short loc_41aa12
cmp     word ptr [esi+8], 4
jnz     short loc_41aa12
push    esi
call    sub_442d80
add     esp, 4
push    eax
mov     eax, [esp+14h+arg_8]
push    eax
call    sub_41aec0
add     esp, 8
test    eax, eax
jnz     short loc_41aa07
mov     word_4ad3dc, 0bh
push    esi
call    sub_442e00
add     esp, 4
jmp     short loc_41aa1f
mov     edi, [esp+10h+arg_8]
mov     ecx, 5
rep movsd
movsw
movsx   eax, word_4ad3dc
mov     word_4ad3dc, bx
mov     ds:dword_4a65a8, ebp
cmp     eax, 0fffffffah
jnz     short loc_41aa3a
xor     eax, eax
cmp     [esp+10h+arg_c], 0
jnz     short loc_41aa48
dec     word_4ad3d8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ds:dword_4a65a8
retn
mov     eax, [esp+arg_4]
push    0
mov     ecx, [esp+4+arg_0]
push    1
push    eax
push    ecx
call    sub_41aa80
add     esp, 10h
retn
sub     esp, 50h
push    ebx
push    esi
mov     bx, [esp+58h+arg_4]
push    edi
mov     edi, [esp+5ch+arg_0]
push    ebp
cmp     [edi], bx
jz      loc_41ac31
cmp     bx, 6
jz      loc_41ac31
mov     esi, ds:lstrlena
movsx   eax, bx
mov     [esp+60h+var_4c], bx
cmp     eax, 3
ja      def_41aaba
jmp     ds:jpt_41aaba[eax*4]
movsx   eax, word ptr [edi]
test    eax, eax
jz      short loc_41aadf
cmp     eax, 1
jl      def_41aaba
cmp     eax, 2
jle     loc_41ac31
jmp     def_41aaba
mov     bx, 1
push    edi
call    sub_442d80
add     esp, 4
mov     ebp, eax
push    ebp
call    esi
cmp     eax, 0ah
jge     short loc_41ab08
push    offset control
push    ebp
call    _strpbrk
add     esp, 8
test    eax, eax
jz      short loc_41ab0c
mov     bx, 2
push    edi
call    sub_442e00
add     esp, 4
jmp     short loc_41aaa9
movsx   eax, word ptr [edi]
cmp     eax, 1
jl      def_41aaba
cmp     eax, 2
jg      def_41aaba
mov     eax, [esp+60h+arg_c]
mov     ecx, [esp+60h+arg_8]
lea     edx, [esp+60h+var_4c]
push    eax
push    ecx
push    edx
push    edi
call    sub_41ace0
add     esp, 10h
jmp     def_41aaba
movsx   eax, word ptr [edi]
test    eax, eax
jz      short loc_41ab5a
cmp     eax, 2
jz      short loc_41abc3
jmp     def_41aaba
push    edi
call    sub_442d80
add     esp, 4
mov     esi, eax
push    1
push    esi
call    sub_41ac50
add     esp, 8
test    eax, eax
jz      short loc_41ab7e
mov     dword ptr [esp+60h+var_44], 1
jmp     short loc_41abb8
push    0
push    esi
call    sub_41ac50
add     esp, 8
test    eax, eax
jz      short loc_41ab97
mov     dword ptr [esp+60h+var_44], 0
jmp     short loc_41abb8
lea     eax, [esp+60h+string]
push    esi
push    32h
push    eax
call    sub_47fc70
lea     eax, [esp+6ch+string]
add     esp, 0ch
push    eax
call    _atol
mov     dword ptr [esp+64h+var_44], eax
add     esp, 4
push    edi
call    sub_442e00
add     esp, 4
jmp     short def_41aaba
fld     qword ptr [edi+8]
call    __ftol
mov     dword ptr [esp+60h+var_44], eax
jmp     short def_41aaba
movsx   eax, word ptr [edi]
test    eax, eax
jz      short loc_41abdf
cmp     eax, 1
jz      short loc_41ac14
jmp     short def_41aaba
push    edi
call    sub_442d80
add     esp, 4
push    eax
push    32h
lea     eax, [esp+68h+string]
push    eax
call    sub_47fc70
lea     eax, [esp+6ch+string]
add     esp, 0ch
push    eax
call    _atof
fstp    [esp+64h+var_44]
add     esp, 4
push    edi
call    sub_442e00
add     esp, 4
jmp     short def_41aaba
fild    dword ptr [edi+8]
fstp    [esp+60h+var_44]
push    edi
call    sub_41b030
lea     esi, [esp+64h+var_4c]
add     esp, 4
mov     ecx, 5
rep movsd
movsw
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
sub     esp, 100h
mov     eax, 6
cmp     [esp+100h+arg_4], 1
adc     eax, 0ffffffffh
push    esi
lea     ecx, [esp+104h+string]
push    edi
push    eax
push    30h
push    100h
push    ecx
call    sub_47fe70
lea     ecx, [esp+118h+string]
add     esp, 10h
push    offset delimiter
push    ecx
call    _strtok
add     esp, 8
test    eax, eax
jz      short loc_41acbb
mov     esi, ds:lstrcmpia
mov     edi, [esp+108h+lpstring2]
push    edi
push    eax
call    esi
test    eax, eax
jz      short loc_41acc6
push    offset delimiter
push    0
call    _strtok
add     esp, 8
test    eax, eax
jnz     short loc_41aca0
xor     eax, eax
pop     edi
pop     esi
add     esp, 100h
retn
mov     eax, 1
pop     edi
pop     esi
add     esp, 100h
retn
mov     edx, [esp+arg_0]
sub     esp, 84h
cmp     word ptr [edx], 1
jnz     short loc_41ad1a
cmp     [esp+84h+arg_8], 0
mov     eax, 0
jnz     short loc_41ad06
mov     eax, [esp+84h+arg_c]
lea     ecx, [esp+84h+string1]
push    ecx
push    eax
mov     eax, [edx+8]
push    eax
call    sub_44a410
add     esp, 0ch
jmp     short loc_41ad46
cmp     [esp+84h+arg_8], 0
mov     eax, 80bh
jnz     short loc_41ad30
mov     eax, [esp+84h+arg_c]
lea     ecx, [esp+84h+string1]
push    ecx
push    eax
mov     eax, [edx+0ch]
mov     edx, [edx+8]
push    eax
push    edx
call    sub_44a070
add     esp, 10h
mov     eax, [esp+84h+arg_4]
lea     ecx, [esp+84h+string1]
mov     word ptr [eax], 0
push    ecx
push    eax
call    sub_41aec0
add     esp, 8
test    eax, eax
jnz     short loc_41ad6d
mov     word_4ad3dc, 0bh
add     esp, 84h
retn
mov     edx, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     ax, [edx]
cmp     [ecx], ax
jz      short loc_41ad93
xor     eax, eax
retn
movsx   eax, ax
test    eax, eax
jz      short loc_41ada7
cmp     eax, 1
jz      short loc_41adb9
cmp     eax, 2
jz      short loc_41adc7
xor     eax, eax
retn
push    ecx
push    edx
call    sub_41ade0
add     esp, 8
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
mov     eax, [ecx+8]
sub     eax, [edx+8]
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
fld     qword ptr [ecx+8]
fcomp   qword ptr [edx+8]
fnstsw  ax
test    ah, 40h
mov     eax, 1
jnz     short locret_41addb
xor     eax, eax
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+0ch+arg_0]
cmp     [esi], bx
jnz     short loc_41ae67
mov     edi, [esp+0ch+arg_4]
cmp     [edi], bx
jnz     short loc_41ae67
mov     ax, [esi+8]
cmp     [edi+8], ax
jnz     short loc_41ae37
cmp     ax, 3
jnz     short loc_41ae17
mov     cx, [esi+0eh]
cmp     [edi+0eh], cx
jnz     short loc_41ae17
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
cmp     ax, 2
jnz     short loc_41ae37
mov     ax, [edi+10h]
cmp     [esi+10h], ax
jnz     short loc_41ae37
mov     ax, [esi+0eh]
cmp     [edi+0eh], ax
jnz     short loc_41ae37
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_442d80
add     esp, 4
mov     ebx, eax
push    edi
call    sub_442d80
add     esp, 4
push    eax
push    ebx
call    ds:lstrcmpa
mov     ebx, eax
push    esi
call    sub_442e00
add     esp, 4
push    edi
call    sub_442e00
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     esi, [esp+8+arg_4]
cmp     word ptr [esi], 0
jnz     short loc_41aeac
xor     edi, edi
push    esi
call    sub_442d80
add     esp, 4
push    eax
mov     eax, [esp+0ch+arg_0]
push    eax
call    sub_41aec0
add     esp, 8
test    eax, eax
jnz     short loc_41ae9e
mov     edi, 8
push    esi
call    sub_442e00
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
retn
mov     edi, [esp+8+arg_0]
mov     ecx, 5
rep movsd
movsw
xor     eax, eax
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
xor     ebx, ebx
mov     edi, [esp+0ch+lpstring]
push    edi
mov     [esi], ebx
mov     [esi+4], ebx
mov     [esi+8], ebx
mov     [esi+0ch], ebx
mov     [esi+10h], ebx
mov     [esi+14h], bx
call    ds:lstrlena
inc     eax
mov     [esi+0ah], eax
cmp     eax, 8
jg      short loc_41af0b
mov     [esi+8], bx
add     esi, 0eh
push    8
push    edi
push    esi
call    sub_47f9f0
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     word ptr [esi+8], 1
push    eax
push    edi
call    sub_45b910
add     esp, 8
lea     ecx, [esi+0eh]
test    eax, eax
mov     [ecx], eax
jnz     short loc_41af02
mov     dword ptr [esi+0ah], 8
mov     word ptr [esi+8], 0
push    8
push    edi
push    ecx
call    sub_47f9f0
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+0ch+arg_0]
mov     ebx, [esp+0ch+hmem]
push    ebx
mov     [edi], esi
mov     [edi+4], esi
mov     [edi+8], esi
mov     [edi+0ch], esi
mov     [edi+10h], esi
mov     [edi+14h], si
call    sub_489a90
add     esp, 4
inc     eax
mov     [edi+0ah], eax
cmp     eax, 8
jg      short loc_41afaf
mov     [edi+8], si
test    ebx, ebx
jz      short loc_41afa7
push    8
mov     eax, [ebx]
push    eax
add     edi, 0eh
push    edi
call    sub_47f9f0
add     esp, 0ch
push    ebx
call    sub_45ba00
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
mov     byte ptr [edi+0eh], 0
pop     edi
pop     esi
pop     ebx
retn
mov     word ptr [edi+8], 1
mov     [edi+0eh], ebx
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_0]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+14h], ax
retn
mov     eax, [esp+arg_0]
cmp     word ptr [eax], 0
jnz     short loc_41affd
cmp     word ptr [eax+8], 0
jnz     short loc_41affd
cmp     byte ptr [eax+0eh], 0
jnz     short loc_41affd
mov     eax, 1
retn
xor     eax, eax
retn
mov     ecx, [esp+arg_4]
xor     eax, eax
mov     [ecx], eax
mov     edx, [esp+arg_0]
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+14h], ax
mov     word ptr [ecx], 1
mov     [ecx+8], edx
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     word ptr [esi], 0
jnz     short loc_41b055
cmp     word ptr [esi+8], 1
jnz     short loc_41b055
mov     eax, [esi+0eh]
push    eax
call    sub_45ba00
mov     dword ptr [esi+0eh], 0
add     esp, 4
pop     esi
retn
sub     esp, 30h
mov     eax, ds:dword_4a6230
mov     ecx, off_4ad3d4
push    ebx
mov     [esp+34h+var_1c], eax
push    esi
mov     [esp+38h+var_28], ecx
push    edi
push    ebp
mov     ecx, ds:frequency
cmp     ds:dword_4a68c4, 1
sbb     eax, eax
mov     [esp+40h+var_24], ecx
neg     eax
xor     ecx, ecx
mov     [esp+40h+var_20], eax
mov     eax, [esp+40h+arg_4]
mov     ds:dword_4a6230, eax
mov     cx, [eax+2]
lea     ebx, [eax+ecx*4]
cmp     word ptr [ebx], 0
mov     [esp+40h+var_2c], ebx
jz      loc_41b307
mov     ebp, [esp+40h+var_18]
cmp     word_4ad3dc, 0
jnz     loc_41b311
cmp     ds:dword_4a68c4, 1
sbb     eax, eax
neg     eax
cmp     eax, [esp+40h+var_20]
jnz     loc_41b2fe
mov     eax, [esp+40h+var_24]
cmp     ds:frequency, eax
jnz     loc_41b2fe
movsx   eax, word ptr [ebx]
dec     eax
cmp     eax, 13h
ja      short def_41b0fb
xor     ecx, ecx
mov     cl, ds:byte_41b398[eax]
jmp     ds:jpt_41b0fb[ecx*4]
mov     word_4ad3dc, 0ffffh
jmp     loc_41b2ef
mov     eax, [esp+40h+arg_0]
push    ebx
push    eax
call    sub_41b400
add     esp, 8
jmp     loc_41b2ef
mov     eax, [esp+40h+arg_0]
push    ebx
push    eax
call    sub_41b580
add     esp, 8
jmp     loc_41b2ef
movsx   eax, word ptr [ebx+2]
push    eax
call    sub_41b620
jmp     loc_41b2ec
movsx   eax, word ptr [ebx+2]
push    eax
call    sub_41b850
jmp     loc_41b2ec
movsx   eax, word ptr [ebx+2]
push    eax
call    sub_41ba00
jmp     loc_41b2ec
mov     eax, ds:dword_4a6230
movsx   ecx, word ptr [ebx+2]
mov     ax, [ecx+eax]
mov     ecx, ds:dword_4a6230
mov     word ptr [esp+40h+var_30], ax
movsx   edx, word ptr [ebx+2]
mov     ax, [edx+ecx+2]
cmp     word ptr [esp+40h+var_30], 0
mov     word ptr [esp+40h+var_30+2], ax
jz      short loc_41b1ad
call    sub_41bc50
mov     ecx, [esp+40h+var_30]
and     ecx, 0ffffh
lea     ebp, [ecx+ecx*4]
lea     ecx, [ecx+ebp*2]
add     ecx, ecx
sub     eax, ecx
lea     ebp, [eax+16h]
lea     eax, [esp+40h+var_18]
push    eax
call    sub_41afc0
mov     eax, [esp+44h+var_30+2]
add     esp, 4
push    eax
call    sub_487fd0
add     esp, 4
cmp     ax, 2
lea     eax, [esp+40h+var_18]
push    eax
push    ebp
mov     eax, [esp+48h+var_30]
jnz     short loc_41b1f1
and     eax, 0ffffh
lea     ecx, [esp+48h+var_30+2]
mov     edx, [esp+48h+arg_0]
push    eax
push    ecx
push    edx
call    sub_421dc0
add     esp, 14h
jmp     short loc_41b206
and     eax, 0ffffh
mov     ecx, [esp+48h+var_30+2]
mov     edx, [esp+48h+arg_0]
push    eax
push    ecx
push    edx
call    sub_488290
cmp     word ptr [esp+40h+var_30], 0
jz      short loc_41b223
call    sub_41bbf0
push    eax
call    sub_41b030
add     esp, 4
dec     word ptr [esp+40h+var_30]
jnz     short loc_41b20e
call    sub_41bc20
mov     edi, eax
mov     ebp, eax
lea     esi, [esp+40h+var_18]
mov     ecx, 5
rep movsd
movsw
jmp     loc_41b2ef
call    sub_41bbf0
mov     esi, eax
mov     ebp, eax
call    sub_41bc50
push    eax
mov     edi, eax
call    sub_41b030
add     esp, 4
mov     ecx, 5
rep movsd
movsw
jmp     loc_41b2ef
call    sub_41bc50
push    eax
mov     ebp, eax
call    sub_41b3b0
add     esp, 4
test    eax, eax
jz      short loc_41b280
call    sub_41bbf0
jmp     short loc_41b2ef
mov     ecx, [esp+40h+var_2c]
movsx   eax, word ptr [ebx+2]
lea     ebx, [ecx+eax*4]
jmp     short loc_41b2f2
call    sub_41bc50
push    eax
mov     ebp, eax
call    sub_41b3b0
add     esp, 4
test    eax, eax
jnz     short loc_41b2a8
call    sub_41bbf0
jmp     short loc_41b2ef
mov     ecx, [esp+40h+var_2c]
movsx   eax, word ptr [ebx+2]
lea     ebx, [ecx+eax*4]
jmp     short loc_41b2f2
call    sub_41bbf0
push    eax
call    sub_41b3b0
add     esp, 4
test    eax, eax
jnz     short loc_41b2ef
mov     ecx, [esp+40h+var_2c]
movsx   eax, word ptr [ebx+2]
lea     ebx, [ecx+eax*4]
jmp     short loc_41b2f2
mov     ecx, [esp+40h+var_2c]
movsx   eax, word ptr [ebx+2]
lea     ebx, [ecx+eax*4]
jmp     short loc_41b2f2
call    sub_41bbf0
push    eax
call    sub_41b030
add     esp, 4
add     ebx, 4
cmp     word ptr [ebx], 0
jnz     loc_41b0b7
jmp     short loc_41b307
mov     word_4ad3dc, 0fffah
cmp     word_4ad3dc, 0
jz      short loc_41b337
mov     eax, [esp+40h+var_28]
cmp     off_4ad3d4, eax
jz      short loc_41b337
call    sub_41bbf0
push    eax
call    sub_41b030
mov     eax, [esp+44h+var_28]
add     esp, 4
cmp     off_4ad3d4, eax
jnz     short loc_41b31d
mov     eax, [esp+40h+var_28]
cmp     off_4ad3d4, eax
jnz     short loc_41b351
call    sub_41bc20
push    eax
call    sub_41afc0
add     esp, 4
mov     eax, [esp+40h+var_1c]
pop     ebp
pop     edi
mov     ds:dword_4a6230, eax
pop     esi
pop     ebx
add     esp, 30h
retn
push    esi
mov     esi, [esp+4+arg_0]
movsx   eax, word ptr [esi]
test    eax, eax
jz      short loc_41b3c3
cmp     eax, 2
jz      short loc_41b3d0
jmp     short loc_41b3f0
push    1
push    esi
call    sub_41aa60
add     esp, 8
jmp     short loc_41b3f0
mov     eax, [esi+0ch]
and     eax, 7fffffffh
or      eax, [esi+8]
mov     dword ptr [esi+8], 0
jz      short loc_41b3eb
mov     dword ptr [esi+8], 1
mov     word ptr [esi], 1
cmp     dword ptr [esi+8], 1
sbb     eax, eax
inc     eax
mov     [esi+8], eax
pop     esi
retn
sub     esp, 18h
push    esi
push    edi
call    sub_41bc20
push    eax
mov     edi, eax
call    sub_41afc0
add     esp, 4
cmp     word_4ad3dc, 0
jnz     loc_41b54f
mov     ecx, [esp+20h+arg_4]
movsx   eax, word ptr [ecx]
dec     eax
cmp     eax, 8
ja      short def_41b430
jmp     ds:jpt_41b430[eax*4]
mov     word_4ad3dc, 0fffeh
pop     edi
pop     esi
add     esp, 18h
retn
mov     word ptr [edi], 2
add     edi, 8
movsx   eax, word ptr [ecx+2]
add     eax, ds:dword_4a6230
mov     ecx, [eax]
mov     [edi], ecx
mov     eax, [eax+4]
mov     [edi+4], eax
pop     edi
pop     esi
add     esp, 18h
retn
movsx   esi, word ptr [ecx+2]
add     esi, ds:dword_4a6230
push    esi
call    ds:lstrlena
mov     word ptr [edi], 0
inc     eax
mov     word ptr [edi+8], 4
mov     [edi+0ah], eax
mov     [edi+0eh], esi
pop     edi
pop     esi
add     esp, 18h
retn
mov     word ptr [edi], 1
movsx   eax, word ptr [ecx+2]
mov     [edi+8], eax
pop     edi
pop     esi
add     esp, 18h
retn
mov     word ptr [edi], 1
movsx   eax, word ptr [ecx+2]
mov     [edi+8], eax
pop     edi
pop     esi
add     esp, 18h
retn
mov     word ptr [edi], 1
movsx   eax, word ptr [ecx+2]
mov     ecx, ds:dword_4a6230
mov     edx, [eax+ecx]
mov     [edi+8], edx
pop     edi
pop     esi
add     esp, 18h
retn
movsx   eax, word ptr [ecx+2]
mov     ecx, ds:dword_4a6230
push    edi
mov     edx, [eax+ecx]
mov     [esp+24h+var_18], edx
mov     edx, [esp+24h+arg_0]
mov     eax, edx
mov     ecx, [esp+24h+var_18]
shr     eax, 10h
and     ecx, 0ffffh
movzx   eax, ax
shl     eax, 10h
mov     esi, [esp+24h+var_18+2]
or      eax, ecx
push    eax
push    esi
push    edx
call    sub_4427d0
add     esp, 10h
cmp     word ptr [edi], 0
jnz     short loc_41b54f
cmp     word ptr [edi+8], 3
jnz     short loc_41b54f
lea     eax, [esp+20h+var_18]
push    edi
push    eax
call    sub_41ae70
lea     esi, [esp+28h+var_18]
add     esp, 8
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
mov     word ptr [edi], 4
movsx   eax, word ptr [ecx+2]
mov     ecx, ds:dword_4a6230
mov     edx, [eax+ecx]
mov     [edi+8], edx
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
cmp     word_4ad3d8, 0
push    esi
push    edi
jle     short loc_41b59e
mov     word_4ad3dc, 0ch
pop     edi
pop     esi
add     esp, 18h
retn
call    sub_41bc50
push    eax
mov     edi, eax
mov     eax, [esp+24h+arg_4]
mov     ecx, ds:dword_4a6230
movsx   edx, word ptr [eax+2]
mov     eax, [edx+ecx]
mov     edx, [esp+24h+arg_0]
mov     [esp+24h+var_18], eax
mov     eax, edx
shr     eax, 10h
mov     ecx, [esp+24h+var_18]
movzx   eax, ax
shl     eax, 10h
and     ecx, 0ffffh
or      eax, ecx
mov     ecx, [esp+24h+var_18+2]
push    eax
push    ecx
push    edx
call    sub_4428a0
add     esp, 10h
cmp     word ptr [edi], 0
jnz     short loc_41b60d
cmp     word ptr [edi+8], 3
jnz     short loc_41b60d
lea     eax, [esp+20h+var_18]
push    edi
push    eax
call    sub_41ae70
lea     esi, [esp+28h+var_18]
add     esp, 8
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
push    esi
call    sub_41bc50
mov     esi, eax
mov     eax, [esp+4+arg_0]
cmp     eax, 6
jz      short loc_41b638
cmp     eax, 0fh
jz      short loc_41b663
pop     esi
retn
cmp     word ptr [esi], 0
jnz     short loc_41b649
push    3
push    esi
call    sub_41aa60
add     esp, 8
cmp     word ptr [esi], 1
jnz     short loc_41b659
mov     eax, [esi+8]
neg     eax
mov     [esi+8], eax
pop     esi
retn
fld     qword ptr [esi+8]
fchs
fstp    qword ptr [esi+8]
pop     esi
retn
push    esi
call    sub_41b3b0
add     esp, 4
cmp     dword ptr [esi+8], 1
sbb     eax, eax
neg     eax
mov     [esi+8], eax
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
call    sub_41bbf0
mov     ebx, eax
call    sub_41bc50
mov     ebp, eax
push    0
push    ebx
call    sub_41aa60
add     esp, 8
push    0
push    ebp
call    sub_41aa60
add     esp, 8
mov     eax, [ebx+0ah]
cmp     eax, 1
jg      short loc_41b6b8
mov     eax, 1
mov     [ebx+0ah], eax
mov     ecx, [ebp+0ah]
cmp     ecx, 1
jg      short loc_41b6c8
mov     ecx, 1
mov     [ebp+0ah], ecx
mov     eax, [ebx+0ah]
lea     edx, [eax+ecx-1]
mov     [esp+20h+dwbytes], edx
cmp     edx, 8
jg      short loc_41b704
cmp     word ptr [ebp+8], 0
jnz     short loc_41b704
push    ebx
call    sub_442d80
add     esp, 4
lea     ecx, [ebp+0eh]
push    eax
push    ecx
call    ds:lstrcata
push    ebx
call    sub_442e00
add     esp, 4
jmp     loc_41b833
mov     eax, [esp+20h+dwbytes]
cmp     eax, 7531h
jl      short loc_41b714
mov     eax, 7531h
mov     [esp+20h+dwbytes], eax
cmp     ecx, 7531h
jl      short loc_41b725
mov     ecx, 7531h
mov     eax, [esp+20h+dwbytes]
push    2
push    eax
mov     [ebp+0ah], ecx
cmp     word ptr [ebp+8], 1
jnz     short loc_41b767
mov     ecx, [ebp+0eh]
push    ecx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_41b757
mov     word_4ad3dc, 0bh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [ebp+0eh]
push    eax
call    ds:globallock
mov     [esp+20h+var_c], eax
jmp     short loc_41b7d6
call    sub_45b8f0
mov     [esp+28h+hmem], eax
add     esp, 8
test    eax, eax
jnz     short loc_41b788
mov     word_4ad3dc, 0bh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+hmem]
push    eax
call    ds:globallock
mov     [esp+20h+var_c], eax
push    ebp
call    sub_442d80
mov     edi, [esp+24h+var_c]
add     esp, 4
mov     edx, [ebp+0ah]
mov     esi, eax
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
push    ebp
and     ecx, 3
rep movsb
call    sub_442e00
add     esp, 4
push    ebp
call    sub_41b030
mov     edx, [esp+24h+hmem]
add     esp, 4
mov     word ptr [ebp+8], 1
mov     [ebp+0eh], edx
mov     eax, [esp+20h+dwbytes]
mov     ecx, [ebx+0ah]
sub     eax, [ebp+0ah]
dec     ecx
cmp     eax, ecx
jl      short loc_41b7e7
mov     eax, ecx
mov     [esp+20h+var_4], eax
push    ebx
call    sub_442d80
mov     edx, [esp+24h+var_4]
add     esp, 4
mov     ecx, [ebp+0ah]
mov     esi, eax
dec     ecx
add     [esp+20h+var_c], ecx
mov     ecx, edx
shr     ecx, 2
mov     edi, [esp+20h+var_c]
rep movsd
mov     ecx, edx
push    ebx
and     ecx, 3
rep movsb
mov     eax, [esp+24h+var_c]
mov     edx, [esp+24h+var_4]
mov     byte ptr [eax+edx], 0
call    sub_442e00
add     esp, 4
mov     ecx, [ebp+0eh]
push    ecx
call    ds:globalunlock
push    ebx
call    sub_41b030
mov     eax, [esp+24h+dwbytes]
add     esp, 4
mov     [ebp+0ah], eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
cmp     esi, 23h
jnz     short loc_41b867
call    sub_41b680
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
call    sub_41bbf0
mov     ebx, eax
call    sub_41bc50
cmp     word ptr [eax], 0
mov     edi, eax
jnz     short loc_41b886
push    3
push    edi
call    sub_41aa60
add     esp, 8
cmp     word ptr [ebx], 0
jnz     short loc_41b897
push    3
push    ebx
call    sub_41aa60
add     esp, 8
cmp     word ptr [edi], 2
jz      short loc_41b8c0
cmp     word ptr [ebx], 2
jz      short loc_41b8c0
cmp     esi, 25h
jz      short loc_41b8c0
cmp     esi, 4
jz      short loc_41b8c0
mov     bp, 1
push    1
push    ebx
call    sub_41aa60
add     esp, 8
push    1
jmp     short loc_41b8d1
mov     bp, 2
push    2
push    ebx
call    sub_41aa60
add     esp, 8
push    2
push    edi
sub     esi, 3
call    sub_41aa60
add     esp, 8
cmp     esi, 22h
ja      short def_41b8ea
xor     eax, eax
mov     al, ds:byte_41b9d4[esi]
jmp     ds:jpt_41b8ea[eax*4]
mov     word_4ad3dc, 0fffdh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     bp, 2
jnz     short loc_41b913
fld     qword ptr [ebx+8]
fmul    qword ptr [edi+8]
pop     ebp
fstp    qword ptr [edi+8]
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [ebx+8]
pop     ebp
imul    eax, [edi+8]
mov     [edi+8], eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [ebx+0ch]
and     eax, 7fffffffh
or      eax, [ebx+8]
jnz     short loc_41b945
mov     eax, dword_4af2c4
pop     ebp
mov     [edi+0ch], eax
mov     ecx, dword_4af2c0
mov     [edi+8], ecx
pop     edi
pop     esi
pop     ebx
retn
fld     qword ptr [edi+8]
pushf
cmp     dword_4af150, 0
jnz     short loc_41b957
fdiv    qword ptr [ebx+8]
jmp     short loc_41b962
push    dword ptr [ebx+0ch]
push    dword ptr [ebx+8]
call    unknown_libname_7
popf
pop     ebp
fstp    qword ptr [edi+8]
pop     edi
pop     esi
pop     ebx
retn
cmp     bp, 2
jnz     short loc_41b97f
fld     qword ptr [ebx+8]
fadd    qword ptr [edi+8]
pop     ebp
fstp    qword ptr [edi+8]
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [ebx+8]
pop     ebp
add     [edi+8], eax
pop     edi
pop     esi
pop     ebx
retn
cmp     bp, 2
jnz     short loc_41b99e
fld     qword ptr [edi+8]
fsub    qword ptr [ebx+8]
pop     ebp
fstp    qword ptr [edi+8]
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [ebx+8]
pop     ebp
sub     [edi+8], eax
pop     edi
pop     esi
pop     ebx
retn
fld     qword ptr [edi+8]
fld     qword ptr [ebx+8]
call    __cipow
fstp    qword ptr [edi+8]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 20h
push    ebx
push    esi
push    edi
call    sub_41bbf0
mov     ebx, eax
call    sub_41bc50
cmp     word ptr [eax], 0
mov     esi, eax
jnz     short loc_41ba49
push    esi
call    sub_442d80
add     esp, 4
push    eax
lea     eax, [esp+30h+var_18]
push    eax
call    sub_41aec0
add     esp, 8
test    eax, eax
jnz     short loc_41ba3e
mov     word_4ad3dc, 0bh
push    esi
call    sub_442e00
add     esp, 4
jmp     short loc_41ba56
lea     edi, [esp+2ch+var_18]
mov     ecx, 5
rep movsd
movsw
cmp     word ptr [esp+2ch+var_18], 0
jnz     short loc_41ba8f
cmp     word ptr [ebx], 0
jnz     short loc_41ba8f
lea     eax, [esp+2ch+var_18]
push    ebx
push    eax
call    sub_41ade0
add     esp, 8
mov     esi, eax
lea     eax, [esp+2ch+var_18]
push    eax
call    sub_41b030
add     esp, 4
push    ebx
call    sub_41b030
add     esp, 4
jmp     loc_41bb27
lea     eax, [esp+2ch+var_18]
push    3
push    eax
call    sub_41aa60
add     esp, 8
push    3
push    ebx
call    sub_41aa60
add     esp, 8
cmp     word ptr [esp+2ch+var_18], 2
jz      short loc_41bada
cmp     word ptr [ebx], 2
jz      short loc_41bada
lea     eax, [esp+2ch+var_18]
push    1
push    eax
call    sub_41aa60
add     esp, 8
push    1
push    ebx
call    sub_41aa60
mov     esi, dword ptr [esp+34h+var_10]
add     esp, 8
sub     esi, [ebx+8]
jmp     short loc_41bb27
lea     eax, [esp+2ch+var_18]
push    2
push    eax
call    sub_41aa60
add     esp, 8
push    2
push    ebx
call    sub_41aa60
fld     [esp+34h+var_10]
fsub    qword ptr [ebx+8]
add     esp, 8
fcom    ds:dbl_4ab000
fstp    [esp+2ch+var_20]
fnstsw  ax
test    ah, 40h
jz      short loc_41bb10
xor     esi, esi
jmp     short loc_41bb27
fldz
fcomp   [esp+2ch+var_20]
mov     esi, 0ffffffffh
fnstsw  ax
test    ah, 41h
jz      short loc_41bb27
mov     esi, 1
call    sub_41bc20
push    eax
mov     edi, eax
call    sub_41afc0
mov     word ptr [edi], 1
mov     eax, [esp+30h+arg_0]
add     esp, 4
sub     eax, 7
cmp     eax, 5
ja      short def_41bb48
jmp     ds:jpt_41bb48[eax*4]
mov     word_4ad3dc, 0fffdh
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
test    esi, esi
jnz     short loc_41bbc4
mov     dword ptr [edi+8], 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
test    esi, esi
jle     short loc_41bbc4
mov     dword ptr [edi+8], 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
test    esi, esi
jge     short loc_41bbc4
mov     dword ptr [edi+8], 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
test    esi, esi
jg      short loc_41bbc4
mov     dword ptr [edi+8], 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
test    esi, esi
jl      short loc_41bbc4
mov     dword ptr [edi+8], 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
test    esi, esi
jz      short loc_41bbc4
mov     dword ptr [edi+8], 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, off_4ad3d4
cmp     eax, offset dword_4a6238
ja      short loc_41bc0f
call    sub_41bc20
push    eax
call    sub_41afc0
add     esp, 4
mov     eax, off_4ad3d4
sub     eax, 16h
mov     off_4ad3d4, eax
retn
mov     ecx, off_4ad3d4
mov     eax, offset dword_4a65a8
cmp     ecx, eax
jb      short loc_41bc3e
mov     word_4ad3dc, 0ah
mov     off_4ad3d4, eax
retn
mov     eax, ecx
add     ecx, 16h
mov     off_4ad3d4, ecx
retn
mov     eax, off_4ad3d4
cmp     eax, offset dword_4a6238
ja      short loc_41bc82
mov     word_4ad3dc, 0fffch
push    offset dword_4a6238
call    sub_41afc0
add     esp, 4
mov     eax, offset dword_4a6238
mov     off_4ad3d4, offset dword_4a6238
retn
sub     eax, 16h
retn
mov     eax, [esp+arg_0]
sub     esp, 64h
lea     ecx, [esp+64h+string]
push    64h
push    eax
push    ecx
call    sub_47f9f0
lea     ecx, [esp+70h+string]
add     esp, 0ch
push    ecx
call    _atof
add     esp, 68h
retn
sub     esp, 0ch
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+1ch+lpstring1]
test    ebp, ebp
jnz     short loc_41bcdb
cmp     [esp+1ch+arg_c], 0
mov     ebx, 0
jz      short loc_41bce0
mov     ebx, 1
mov     edi, [esp+1ch+arg_10]
mov     eax, [esp+1ch+lpstring]
mov     word ptr [edi+2], 20b6h
mov     word ptr [edi], 0
cmp     byte ptr [eax], 0
jz      loc_41bdee
push    eax
call    ds:lstrlena
cmp     eax, 28h
jle     short loc_41bd15
mov     eax, 1bh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     esi, [esp+1ch+arg_0]
mov     eax, esi
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
mov     al, 2
mov     [esp+1ch+var_8], eax
push    eax
push    esi
call    sub_463480
add     esp, 8
test    eax, eax
jnz     short loc_41bd6d
cmp     ds:dword_4a68c4, 0
jnz     short loc_41bd6d
mov     eax, [esp+1ch+lpstring]
push    eax
call    sub_442bc0
mov     [edi+2], ax
add     esp, 4
test    ax, ax
jz      short loc_41bd6d
mov     eax, 0
pop     ebp
pop     edi
cmp     ebx, 1
adc     eax, 0ffffffffh
pop     esi
and     eax, 19h
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+1ch+lpstring]
push    eax
push    esi
call    sub_489760
mov     [edi+2], ax
add     esp, 8
push    eax
call    sub_489a50
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_41bd97
cmp     eax, 2
jz      short loc_41bdad
jmp     short loc_41bdf2
mov     eax, 0
pop     ebp
pop     edi
cmp     ebx, 1
adc     eax, 0ffffffffh
pop     esi
and     eax, 19h
pop     ebx
add     esp, 0ch
retn
mov     ax, [edi+2]
push    eax
call    sub_482660
add     esp, 4
test    eax, eax
jz      short loc_41bdcb
mov     eax, 1fh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
test    ebx, ebx
jz      short loc_41bdf2
mov     eax, [esp+1ch+var_8]
push    eax
push    esi
call    sub_463480
add     esp, 8
test    eax, eax
jz      short loc_41bdf2
mov     eax, 20h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     esi, [esp+1ch+arg_0]
mov     cx, [edi+2]
test    cx, cx
jnz     short loc_41be0e
pop     ebp
cmp     ebx, 1
sbb     eax, eax
pop     edi
and     eax, 0fffffffdh
pop     esi
add     eax, 19h
pop     ebx
add     esp, 0ch
retn
test    ebx, ebx
jnz     short loc_41be1c
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
lea     eax, [esp+1ch+var_8]
push    eax
push    ecx
call    sub_482610
add     esp, 8
test    byte ptr [esp+1ch+var_8+2], 0fh
jnz     short loc_41be3e
mov     eax, 18h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
test    ebp, ebp
jz      short loc_41beb5
cmp     byte ptr [ebp+0], 0
jnz     short loc_41be55
mov     eax, 1ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    ebp
call    sub_4861f0
add     esp, 4
test    eax, eax
jz      short loc_41be6f
mov     eax, 1ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
shr     esi, 10h
lea     eax, [esp+1ch+var_c]
push    eax
push    0
push    ebp
push    esi
call    sub_462f10
add     esp, 10h
test    eax, eax
jnz     short loc_41be94
mov     eax, 17h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
cmp     [esp+1ch+var_c], 0
jnz     short loc_41bea8
mov     eax, 1ah
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     [edi], ax
pop     ebp
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     ax, word ptr [esp+1ch+arg_c]
pop     ebp
mov     [edi], ax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+cchbuffermax]
push    esi
mov     ecx, [esp+4+lpstring]
push    eax
mov     esi, [esp+8+arg_0]
push    ecx
mov     eax, esi
xor     edx, edx
shr     eax, 10h
movzx   ecx, ax
shl     ecx, 10h
mov     eax, [esp+0ch+arg_c]
mov     dx, [eax]
mov     ax, [eax+2]
or      ecx, edx
push    ecx
push    eax
push    esi
call    sub_489850
add     esp, 14h
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     ax, [esi+2]
push    eax
call    sub_489a50
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_41bf38
cmp     eax, 2
jz      short loc_41bf3f
cmp     eax, 3
jz      short loc_41bf38
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
mov     ax, [esi+2]
push    eax
call    sub_482640
add     esp, 4
pop     esi
retn
sub     esp, 4d4h
xor     eax, eax
mov     [esp+4d4h+var_338], al
push    esi
mov     esi, dword ptr [esp+4d8h+arg_0]
mov     [esp+4d8h+string], al
cmp     esi, eax
jl      short loc_41bfb1
cmp     esi, 2ah
jg      short loc_41bfb1
mov     edx, [esp+4d8h+arg_c]
cmp     edx, eax
jle     short loc_41bfd1
inc     edx
mov     eax, [esp+4d8h+arg_4]
mov     ecx, [esp+4d8h+arg_8]
cmp     edx, 19ah
jl      short loc_41bf9b
mov     edx, 19ah
push    edx
add     eax, ecx
lea     ecx, [esp+4dch+var_338]
push    eax
push    ecx
call    sub_47f9f0
add     esp, 0ch
jmp     short loc_41bfd1
lea     eax, [esp+4d8h+var_338]
push    esi
push    offset ad_0
mov     esi, 12h
push    19ah
push    eax
call    sub_401800
add     esp, 10h
test    esi, esi
jz      short loc_41c013
lea     eax, [esp+4d8h+buffer]
push    esi
push    40h
push    19ah
push    eax
call    sub_47fe70
add     esp, 10h
test    eax, eax
jz      short loc_41c013
lea     eax, [esp+4d8h+var_338]
lea     ecx, [esp+4d8h+buffer]
lea     edx, [esp+4d8h+string]
push    eax
push    ecx
push    19ah
push    edx
call    sub_401800
add     esp, 10h
lea     eax, [esp+4d8h+string]
push    eax
call    ds:lstrlena
inc     eax
lea     ecx, [esp+4d8h+string]
push    eax
push    ecx
call    sub_45b910
add     esp, 8
pop     esi
add     esp, 4d4h
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     ds:dword_4a65bc, eax
push    ebx
push    esi
xor     eax, eax
mov     esi, [esp+10h+arg_c]
push    edi
mov     ax, [esi]
push    ebp
add     eax, 400h
push    42h
push    eax
mov     ds:dword_4a65d0, eax
call    sub_45b8f0
add     esp, 8
mov     ds:hmem, eax
test    eax, eax
jnz     short loc_41c084
mov     eax, 0bh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ds:hmem
mov     ebx, ds:globallock
push    eax
call    ebx
push    42h
mov     ds:dword_4a65b8, eax
add     eax, 6
mov     ds:dword_4a65dc, eax
mov     ebp, [esi]
add     ebp, 190h
push    ebp
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a65d8, eax
test    eax, eax
jnz     short loc_41c0d6
mov     eax, ds:hmem
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, 0bh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ds:dword_4a65d8
and     ebp, 0fffffffch
push    eax
call    ebx
mov     edi, [esp+18h+src]
add     ebp, eax
sub     ebp, 0ch
mov     ds:dword_4a65ac, eax
mov     ds:dword_4a65c0, eax
mov     ds:dword_4a65cc, edi
mov     ds:dword_4a65c4, ebp
mov     ebp, 0ffffffffh
mov     word_4ad3dc, 0
mov     ds:word_4a65b4, bp
mov     ds:word_4a65c8, bp
call    sub_41e020
cmp     [esp+18h+arg_10], 0
jz      short loc_41c12f
call    sub_41c370
jmp     short loc_41c163
lea     eax, [esp+18h+var_6+2]
mov     ecx, ds:dword_4a65c0
push    eax
mov     edx, ds:dword_4a65cc
push    ecx
push    edx
call    sub_41c3b0
add     esp, 0ch
test    eax, eax
jz      short loc_41c167
push    17h
call    sub_41de90
add     esp, 4
cmp     ds:dword_4a65d4, 1
sbb     eax, eax
neg     eax
test    eax, eax
jnz     short loc_41c1db
mov     eax, ds:dword_4a65c0
cmp     ds:dword_4a65c4, eax
ja      loc_41c2f5
mov     eax, ds:dword_4a65d8
push    eax
call    ds:globalunlock
call    sub_41e070
test    eax, eax
jz      loc_41c308
mov     eax, ds:dword_4a65d8
push    eax
call    ebx
mov     ecx, ds:dword_4a65d8
mov     ds:dword_4a65ac, eax
push    ecx
mov     ds:dword_4a65c0, eax
mov     ds:dword_4a65cc, edi
call    sub_45bbc0
add     esp, 4
and     eax, 0fffffffch
add     eax, ds:dword_4a65ac
sub     eax, 0ch
mov     ds:dword_4a65c4, eax
mov     eax, ds:dword_4a65b8
add     eax, 2
mov     ds:dword_4a65dc, eax
jmp     loc_41c105
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 0
add     ds:dword_4a65c0, 4
mov     ecx, ds:dword_4a65dc
mov     ebx, ds:dword_4a65c0
sub     ecx, ds:dword_4a65b8
sub     ebx, ds:dword_4a65ac
add     cx, 3
shr     cx, 2
mov     edx, ds:dword_4a65b8
lea     eax, ds:0[ecx*4]
mov     bp, ax
add     bp, bx
mov     word ptr [esp+18h+var_6], ax
mov     eax, [esi]
add     ax, bp
mov     [edx], ax
mov     edx, ds:dword_4a65b8
mov     [edx+2], cx
mov     edx, ds:dword_4a65b8
mov     [edx+4], bp
mov     eax, ds:hmem
push    eax
call    ds:globalunlock
movzx   ecx, bx
mov     eax, [esp+18h+var_6]
mov     edx, ds:dword_4a65ac
and     eax, 0ffffh
push    eax
push    ecx
push    edx
mov     eax, ds:hmem
push    eax
call    sub_45bb60
mov     ebx, [esp+28h+arg_8]
add     esp, 10h
test    eax, eax
mov     [ebx], eax
jnz     short loc_41c29a
mov     word_4ad3dc, 0bh
mov     eax, ds:hmem
push    eax
call    sub_45ba00
mov     ds:hmem, 0
add     esp, 4
mov     eax, ds:dword_4a65d8
movzx   ebp, bp
push    eax
call    sub_45ba00
mov     ds:dword_4a65d8, 0
add     esp, 4
mov     eax, [ebx]
mov     ds:hmem, eax
push    ebp
mov     ecx, [esi]
push    ecx
push    edi
push    eax
call    sub_45bb60
add     esp, 10h
mov     [ebx], eax
test    eax, eax
jnz     short loc_41c2f1
mov     word_4ad3dc, 0bh
mov     eax, ds:hmem
push    eax
call    sub_45ba00
mov     ds:hmem, 0
add     esp, 4
add     [esi], ebp
jmp     short loc_41c308
cmp     word_4ad3dc, 0
jnz     short loc_41c312
mov     word_4ad3dc, 5
cmp     word_4ad3dc, 0
jz      short loc_41c349
mov     eax, ds:dword_4a65cc
sub     eax, edi
mov     [esi], eax
cmp     ds:dword_4a65d8, 0
jz      short loc_41c332
mov     eax, ds:dword_4a65d8
push    eax
call    sub_45ba00
add     esp, 4
cmp     ds:hmem, 0
jz      short loc_41c349
mov     eax, ds:hmem
push    eax
call    sub_45ba00
add     esp, 4
movsx   eax, word_4ad3dc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     al, byte_4ad41c
mov     cl, [esp+arg_0]
mov     byte_4ad41c, cl
retn
cmp     ds:dword_4a65d4, 0
jnz     short loc_41c37f
mov     eax, 1
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jnz     short loc_41c39b
xor     eax, eax
retn
cmp     ds:dword_4a65d4, 1
sbb     eax, eax
neg     eax
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_8]
push    edi
push    ebp
push    17h
mov     dword ptr [esi], 1
call    sub_41de90
add     esp, 4
cmp     ds:dword_4a65d4, 16h
jz      short loc_41c407
cmp     ds:dword_4a65d4, 21h
jz      short loc_41c407
cmp     ds:dword_4a65d4, 24h
jz      short loc_41c407
cmp     ds:dword_4a65d4, 2ah
jz      short loc_41c407
cmp     ds:dword_4a65d4, 2eh
jz      short loc_41c407
cmp     ds:dword_4a65d4, 30h
jz      short loc_41c407
cmp     ds:dword_4a65d4, 31h
jnz     short loc_41c42d
mov     dword ptr [esi], 0
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41c4d0
add     esp, 8
test    eax, eax
jnz     short loc_41c42d
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     edi, 17h
cmp     ds:dword_4a65d4, edi
jnz     loc_41c4c5
mov     ebx, ds:dword_4a65cc
mov     ebp, ds:dword_4a65c0
call    sub_41df60
cmp     ds:dword_4a65d4, 16h
jz      short loc_41c48e
cmp     ds:dword_4a65d4, 21h
jz      short loc_41c48e
cmp     ds:dword_4a65d4, 24h
jz      short loc_41c48e
cmp     ds:dword_4a65d4, 2ah
jz      short loc_41c48e
cmp     ds:dword_4a65d4, 2eh
jz      short loc_41c48e
cmp     ds:dword_4a65d4, 30h
jz      short loc_41c48e
cmp     ds:dword_4a65d4, 31h
jnz     short loc_41c4b4
mov     dword ptr [esi], 0
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41c4d0
add     esp, 8
test    eax, eax
jnz     short loc_41c432
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ds:dword_4a65cc, ebx
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
call    sub_41e070
test    eax, eax
jnz     short loc_41c4dc
xor     eax, eax
retn
mov     eax, ds:dword_4a65d4
sub     eax, 16h
cmp     eax, 1bh
ja      short def_41c4f1
xor     ecx, ecx
mov     cl, ds:byte_41c5a8[eax]
jmp     ds:jpt_41c4f1[ecx*4]
mov     word_4ad3dc, 21h
xor     eax, eax
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41c5d0
add     esp, 8
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41c690
add     esp, 8
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41c6f0
add     esp, 8
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41ca30
add     esp, 8
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41ce00
add     esp, 8
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41ce90
add     esp, 8
retn
push    ebx
push    esi
push    edi
push    16h
mov     edi, ds:dword_4a65cc
call    sub_41de90
add     esp, 4
test    eax, eax
jz      loc_41c689
cmp     ds:dword_4a65d4, 10h
jnz     loc_41c689
mov     esi, ds:dword_4a65cc
mov     ebx, ds:dword_4a65c0
call    sub_41df60
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jz      short loc_41c665
mov     eax, ds:dword_4a65c0
push    0
mov     word ptr [eax], 0ah
push    edi
push    16h
call    sub_41e0d0
add     esp, 0ch
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], ax
pop     edi
mov     eax, 1
pop     esi
add     ds:dword_4a65c0, 4
mov     ecx, ds:dword_4a65c0
pop     ebx
mov     word ptr [ecx], 14h
add     ds:dword_4a65c0, 4
retn
cmp     word_4ad3dc, 13h
jnz     short loc_41c689
mov     ds:dword_4a65cc, esi
mov     ds:dword_4a65c0, ebx
call    sub_41e020
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
cmp     ds:dword_4a65d4, 21h
jz      short loc_41c6a5
cmp     ds:dword_4a65d4, 24h
jz      short loc_41c6a5
xor     eax, eax
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41d610
add     esp, 8
test    eax, eax
jz      short loc_41c6e0
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 14h
mov     eax, ds:dword_4a65c0
mov     word ptr [eax+2], 0
add     ds:dword_4a65c0, 4
mov     eax, 1
retn
xor     eax, eax
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    2ah
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41c70d
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jnz     short loc_41c72f
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    2bh
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41c74f
xor     eax, eax
pop     edi
mov     word_4ad3dc, 23h
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ds:dword_4a65c0
push    17h
mov     word ptr [eax], 12h
mov     esi, ds:dword_4a65c0
add     ds:dword_4a65c0, 4
call    sub_41de90
add     esp, 4
test    eax, eax
jz      loc_41c880
lea     eax, [esp+10h+var_4]
mov     ecx, ds:dword_4a65c0
push    eax
mov     edx, ds:dword_4a65cc
push    ecx
push    edx
call    sub_41c3b0
add     esp, 0ch
test    eax, eax
jnz     short loc_41c7a0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     [esp+10h+var_4], 0
jnz     short loc_41c7be
push    17h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41c7be
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     ds:dword_4a65d4, 2ch
jnz     short loc_41c829
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 13h
mov     edi, ds:dword_4a65c0
add     ds:dword_4a65c0, 4
mov     eax, ds:dword_4a65c0
sub     eax, ds:dword_4a65ac
sar     eax, 2
mov     [esi+2], ax
mov     eax, ds:dword_4a65c0
push    eax
mov     ecx, ds:dword_4a65cc
push    ecx
call    sub_41c960
add     esp, 8
test    eax, eax
jnz     short loc_41c812
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ds:dword_4a65c0
sub     eax, ds:dword_4a65ac
sar     eax, 2
mov     [edi+2], ax
jmp     loc_41c948
push    2dh
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41c849
xor     eax, eax
pop     edi
mov     word_4ad3dc, 24h
pop     esi
pop     ebx
add     esp, 4
retn
push    2ah
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41c869
xor     eax, eax
pop     edi
mov     word_4ad3dc, 22h
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ds:dword_4a65c0
sub     eax, ds:dword_4a65ac
sar     eax, 2
mov     [esi+2], ax
jmp     loc_41c948
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41c4d0
add     esp, 8
test    eax, eax
jnz     short loc_41c8a2
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     edi, ds:dword_4a65cc
mov     ebx, ds:dword_4a65c0
push    17h
call    sub_41de90
add     esp, 4
cmp     ds:dword_4a65d4, 2ch
jnz     short loc_41c920
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 13h
mov     edi, ds:dword_4a65c0
add     ds:dword_4a65c0, 4
mov     eax, ds:dword_4a65c0
sub     eax, ds:dword_4a65ac
sar     eax, 2
mov     [esi+2], ax
mov     eax, ds:dword_4a65c0
push    eax
mov     ecx, ds:dword_4a65cc
push    ecx
call    sub_41c960
add     esp, 8
test    eax, eax
jnz     short loc_41c90c
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ds:dword_4a65c0
sub     eax, ds:dword_4a65ac
sar     eax, 2
mov     [edi+2], ax
jmp     short loc_41c948
mov     ecx, ds:dword_4a65c0
sub     ecx, ds:dword_4a65ac
sar     ecx, 2
test    eax, eax
mov     [esi+2], cx
jz      short loc_41c948
mov     ds:dword_4a65cc, edi
mov     ds:dword_4a65c0, ebx
call    sub_41e020
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
push    2ch
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41c977
xor     eax, eax
add     esp, 4
retn
push    17h
call    sub_41de90
add     esp, 4
test    eax, eax
jz      loc_41ca0c
lea     eax, [esp+4+var_4]
mov     ecx, ds:dword_4a65c0
push    eax
mov     edx, ds:dword_4a65cc
push    ecx
push    edx
call    sub_41c3b0
add     esp, 0ch
test    eax, eax
jnz     short loc_41c9ae
xor     eax, eax
add     esp, 4
retn
cmp     [esp+4+var_4], 0
jnz     short loc_41c9c9
push    17h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41c9c9
xor     eax, eax
add     esp, 4
retn
push    2dh
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41c9e6
xor     eax, eax
add     esp, 4
mov     word_4ad3dc, 24h
retn
push    2ah
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41ca03
xor     eax, eax
add     esp, 4
mov     word_4ad3dc, 22h
retn
mov     eax, 1
add     esp, 4
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41c4d0
add     esp, 0ch
retn
sub     esp, 8
push    ebx
push    esi
mov     si, ds:word_4a65b4
push    edi
mov     di, ds:word_4a65c8
push    ebp
push    2eh
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41ca5d
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    2fh
call    sub_41de90
add     esp, 4
test    eax, eax
jz      loc_41caf8
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
sub     eax, ds:dword_4a65ac
sar     eax, 2
mov     ds:word_4a65b4, ax
mov     eax, ds:dword_4a65c0
push    eax
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jnz     short loc_41caa6
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    0ffffffffh
push    12h
call    sub_41e320
mov     ds:word_4a65c8, ax
add     esp, 8
push    17h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41cad0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     eax, [esp+18h+var_6+2]
mov     ecx, ds:dword_4a65c0
push    eax
mov     edx, ds:dword_4a65cc
push    ecx
push    edx
call    sub_41c3b0
add     esp, 0ch
test    eax, eax
jnz     loc_41cd37
jmp     loc_41cd2d
push    32h
call    sub_41de90
add     esp, 4
test    eax, eax
jz      loc_41cde4
mov     ebp, ds:dword_4a65cc
push    16h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41cb31
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 28h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    10h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41cb52
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 28h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jnz     short loc_41cb7e
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 28h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    34h
call    sub_41de90
add     esp, 4
mov     ebx, eax
push    33h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41cbab
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 28h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    0ffffffffh
push    13h
call    sub_41e320
mov     word ptr [esp+20h+var_6], ax
add     esp, 8
mov     eax, ds:dword_4a65c0
push    0
sub     eax, ds:dword_4a65ac
push    ebp
sar     eax, 2
push    16h
mov     ds:word_4a65b4, ax
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 8
call    sub_41e0d0
add     esp, 0ch
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], ax
add     ds:dword_4a65c0, 4
mov     ecx, ds:dword_4a65c0
mov     word ptr [ecx], 3
mov     ecx, ds:dword_4a65c0
mov     word ptr [ecx+2], 1
add     ds:dword_4a65c0, 4
mov     ecx, ds:dword_4a65c0
cmp     ebx, 1
mov     word ptr [ecx], 0ch
mov     edx, [esp+18h+var_6]
sbb     eax, eax
mov     ecx, ds:dword_4a65c0
add     eax, 6
push    edx
mov     [ecx+2], ax
add     ds:dword_4a65c0, 4
call    sub_41e3a0
add     esp, 4
mov     ecx, ds:dword_4a65c0
mov     word ptr [ecx], 0ah
push    0
push    ebp
push    16h
call    sub_41e0d0
add     esp, 0ch
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], ax
mov     eax, ds:dword_4a65cc
add     ds:dword_4a65c0, 4
mov     ecx, ds:dword_4a65c0
push    ecx
push    eax
call    sub_41cf10
add     esp, 8
test    eax, eax
jnz     short loc_41cc9c
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 28h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ds:dword_4a65c0
cmp     ebx, 1
mov     word ptr [eax], 0dh
sbb     eax, eax
mov     ecx, ds:dword_4a65c0
add     eax, 0bh
mov     [ecx+2], ax
push    0ffffffffh
add     ds:dword_4a65c0, 4
mov     eax, ds:dword_4a65c0
push    12h
mov     word ptr [eax], 0fh
mov     eax, ds:dword_4a65c0
mov     word ptr [eax+2], 0
add     ds:dword_4a65c0, 4
call    sub_41e320
mov     ds:word_4a65c8, ax
add     esp, 8
push    17h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41cd0e
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 25h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     eax, [esp+18h+var_6+2]
mov     ecx, ds:dword_4a65c0
push    eax
mov     edx, ds:dword_4a65cc
push    ecx
push    edx
call    sub_41c3b0
add     esp, 0ch
test    eax, eax
jnz     short loc_41cd37
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 13h
mov     eax, ds:dword_4a65c0
mov     dx, ds:word_4a65b4
mov     [eax+2], dx
add     ds:dword_4a65c0, 4
mov     cx, ds:word_4a65c8
push    ecx
call    sub_41e3a0
add     esp, 4
cmp     [esp+18h+var_6+2], 0
jnz     short loc_41cd87
push    17h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41cd87
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    2dh
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41cda8
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 24h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    2eh
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41cdc9
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 27h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ds:word_4a65b4, si
mov     eax, 1
mov     ds:word_4a65c8, di
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 26h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    30h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41ce11
xor     eax, eax
retn
push    2eh
call    sub_41de90
add     esp, 4
test    eax, eax
jz      short loc_41ce64
cmp     ds:word_4a65c8, 0ffffh
jnz     short loc_41ce4d
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     ds:dword_4a65cc, eax
mov     ds:dword_4a65c0, ecx
call    sub_41e020
mov     word_4ad3dc, 29h
xor     eax, eax
retn
mov     ax, ds:word_4a65c8
push    eax
push    13h
call    sub_41e320
add     esp, 8
mov     eax, 1
retn
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 0
mov     eax, ds:dword_4a65c0
mov     word ptr [eax+2], 0
add     ds:dword_4a65c0, 4
mov     eax, 1
retn
push    31h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41cea1
xor     eax, eax
retn
push    2eh
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41ceb2
xor     eax, eax
retn
cmp     ds:word_4a65b4, 0ffffh
jnz     short loc_41cee0
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     ds:dword_4a65cc, eax
mov     ds:dword_4a65c0, ecx
call    sub_41e020
mov     word_4ad3dc, 29h
xor     eax, eax
retn
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 13h
mov     eax, ds:dword_4a65c0
mov     dx, ds:word_4a65b4
mov     [eax+2], dx
mov     eax, 1
add     ds:dword_4a65c0, 4
retn
cmp     ds:dword_4a65d4, 16h
push    ebx
push    esi
push    edi
jnz     loc_41cfbd
mov     edi, ds:dword_4a65cc
call    sub_41df60
cmp     ds:dword_4a65d4, 10h
jnz     loc_41cfbd
mov     esi, ds:dword_4a65cc
mov     ebx, ds:dword_4a65c0
call    sub_41df60
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jnz     short loc_41cf8c
cmp     word_4ad3dc, 13h
jnz     short loc_41cf86
mov     ds:dword_4a65cc, esi
mov     ds:dword_4a65c0, ebx
call    sub_41e020
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ds:dword_4a65c0
push    0
mov     word ptr [eax], 0ah
push    edi
push    16h
call    sub_41e0d0
add     esp, 0ch
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], ax
pop     edi
mov     eax, 1
pop     esi
add     ds:dword_4a65c0, 4
pop     ebx
retn
mov     eax, [esp+0ch+arg_0]
mov     ecx, [esp+0ch+arg_4]
mov     ds:dword_4a65cc, eax
mov     ds:dword_4a65c0, ecx
call    sub_41e020
mov     ecx, ds:dword_4a65c0
mov     edx, ds:dword_4a65cc
push    ecx
push    edx
call    sub_41d000
add     esp, 8
cmp     eax, 1
sbb     eax, eax
pop     edi
inc     eax
pop     esi
pop     ebx
retn
push    ebx
mov     eax, ds:dword_4a65c0
push    esi
mov     ecx, ds:dword_4a65cc
push    edi
push    ebp
push    eax
push    ecx
call    sub_41d0e0
add     esp, 8
test    eax, eax
jnz     short loc_41d024
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ebx, 4
call    sub_41e070
test    eax, eax
jz      short loc_41d08f
mov     esi, ds:dword_4a65cc
mov     ebp, ds:dword_4a65c0
call    sub_41def0
test    eax, eax
jz      short loc_41d096
mov     edi, ds:dword_4a65c0
add     ds:dword_4a65c0, ebx
cmp     eax, 0dh
mov     word ptr [edi], 10h
jz      short loc_41d062
mov     word ptr [edi], 11h
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41d0e0
add     esp, 8
test    eax, eax
jz      short loc_41d0b1
mov     eax, ds:dword_4a65c0
sub     eax, ds:dword_4a65ac
sar     eax, 2
mov     [edi+2], ax
jmp     short loc_41d029
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ds:dword_4a65cc, esi
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     word_4ad3dc, 13h
jnz     short loc_41d0d5
mov     ds:dword_4a65cc, esi
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
mov     eax, ds:dword_4a65c0
push    esi
mov     ecx, ds:dword_4a65cc
push    edi
push    ebp
push    eax
push    ecx
call    sub_41d270
add     esp, 8
test    eax, eax
jnz     short loc_41d104
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     edi, ds:dword_4a65cc
mov     ebx, ds:dword_4a65c0
call    sub_41df40
mov     esi, eax
test    esi, esi
jnz     short loc_41d125
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41d270
add     esp, 8
test    eax, eax
jnz     short loc_41d169
cmp     word_4ad3dc, 13h
jnz     short loc_41d162
mov     ds:dword_4a65cc, edi
mov     ds:dword_4a65c0, ebx
call    sub_41e020
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
call    sub_41e070
test    eax, eax
jz      loc_41d204
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 0dh
mov     eax, ds:dword_4a65c0
mov     [eax+2], si
add     ds:dword_4a65c0, 4
mov     edi, ds:dword_4a65cc
mov     ebp, ds:dword_4a65c0
call    sub_41def0
test    eax, eax
jz      loc_41d236
mov     ebx, ds:dword_4a65c0
add     ds:dword_4a65c0, 4
mov     word ptr [ebx], 10h
cmp     eax, 0dh
jz      short loc_41d1c5
mov     word ptr [ebx], 11h
call    sub_41df40
mov     esi, eax
test    esi, esi
jz      short loc_41d236
mov     edi, ds:dword_4a65cc
mov     ebp, ds:dword_4a65c0
push    ebp
push    edi
call    sub_41d270
add     esp, 8
test    eax, eax
jz      short loc_41d20b
mov     eax, ds:dword_4a65c0
sub     eax, ds:dword_4a65ac
add     eax, 4
sar     eax, 2
mov     [ebx+2], ax
jmp     loc_41d169
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     word_4ad3dc, 13h
jnz     short loc_41d22f
mov     ds:dword_4a65cc, edi
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ds:dword_4a65cc, edi
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     eax, ds:dword_4a65c0
pop     ebp
mov     word ptr [eax], 0fh
pop     edi
mov     eax, 1
pop     esi
add     ds:dword_4a65c0, 4
pop     ebx
retn
push    ebx
mov     eax, ds:dword_4a65c0
push    esi
mov     ecx, ds:dword_4a65cc
push    edi
push    ebp
push    eax
push    ecx
call    sub_41d360
add     esp, 8
test    eax, eax
jz      loc_41d356
mov     ebx, ds:dword_4a65cc
mov     ebp, ds:dword_4a65c0
push    23h
call    sub_41de90
add     esp, 4
test    eax, eax
jz      short loc_41d309
mov     esi, 23h
mov     edi, 4
call    sub_41e070
test    eax, eax
jz      short loc_41d324
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41d360
add     esp, 8
test    eax, eax
jz      short loc_41d32b
mov     eax, ds:dword_4a65c0
push    esi
mov     word ptr [eax], 0ch
mov     eax, ds:dword_4a65c0
mov     [eax+2], si
mov     ebx, ds:dword_4a65cc
add     ds:dword_4a65c0, edi
mov     ebp, ds:dword_4a65c0
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41d2b5
mov     ds:dword_4a65cc, ebx
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     word_4ad3dc, 13h
jnz     short loc_41d34f
mov     ds:dword_4a65cc, ebx
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
mov     eax, ds:dword_4a65c0
push    esi
mov     ecx, ds:dword_4a65cc
push    edi
push    ebp
push    eax
push    ecx
call    sub_41d440
add     esp, 8
test    eax, eax
jz      loc_41d433
mov     ebx, ds:dword_4a65cc
mov     ebp, ds:dword_4a65c0
mov     edi, 4
call    sub_41deb0
mov     esi, eax
test    esi, esi
jz      short loc_41d418
call    sub_41e070
test    eax, eax
jz      short loc_41d3e6
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41d440
add     esp, 8
test    eax, eax
jz      short loc_41d3ed
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 0ch
mov     eax, ds:dword_4a65c0
mov     [eax+2], si
mov     ebx, ds:dword_4a65cc
add     ds:dword_4a65c0, edi
mov     ebp, ds:dword_4a65c0
jmp     short loc_41d392
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     word_4ad3dc, 13h
jnz     short loc_41d411
mov     ds:dword_4a65cc, ebx
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ds:dword_4a65cc, ebx
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
mov     eax, ds:dword_4a65c0
push    esi
mov     ecx, ds:dword_4a65cc
push    edi
push    ebp
push    eax
push    ecx
call    sub_41d520
add     esp, 8
test    eax, eax
jz      loc_41d513
mov     ebx, ds:dword_4a65cc
mov     ebp, ds:dword_4a65c0
mov     edi, 4
call    sub_41ded0
mov     esi, eax
test    esi, esi
jz      short loc_41d4f8
call    sub_41e070
test    eax, eax
jz      short loc_41d4c6
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41d520
add     esp, 8
test    eax, eax
jz      short loc_41d4cd
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 0ch
mov     eax, ds:dword_4a65c0
mov     [eax+2], si
mov     ebx, ds:dword_4a65cc
add     ds:dword_4a65c0, edi
mov     ebp, ds:dword_4a65c0
jmp     short loc_41d472
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     word_4ad3dc, 13h
jnz     short loc_41d4f1
mov     ds:dword_4a65cc, ebx
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ds:dword_4a65cc, ebx
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
mov     eax, ds:dword_4a65c0
push    esi
mov     ecx, ds:dword_4a65cc
push    edi
push    ebp
push    eax
push    ecx
call    sub_41d610
add     esp, 8
test    eax, eax
jz      loc_41d606
mov     ebx, ds:dword_4a65cc
mov     ebp, ds:dword_4a65c0
push    25h
call    sub_41de90
add     esp, 4
test    eax, eax
jz      short loc_41d5b9
mov     esi, 25h
mov     edi, 4
call    sub_41e070
test    eax, eax
jz      short loc_41d5d4
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41d610
add     esp, 8
test    eax, eax
jz      short loc_41d5db
mov     eax, ds:dword_4a65c0
push    esi
mov     word ptr [eax], 0ch
mov     eax, ds:dword_4a65c0
mov     [eax+2], si
mov     ebx, ds:dword_4a65cc
add     ds:dword_4a65c0, edi
mov     ebp, ds:dword_4a65c0
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41d565
mov     ds:dword_4a65cc, ebx
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     word_4ad3dc, 13h
jnz     short loc_41d5ff
mov     ds:dword_4a65cc, ebx
mov     ds:dword_4a65c0, ebp
call    sub_41e020
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
call    sub_41e070
test    eax, eax
jnz     short loc_41d62a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
call    sub_41df10
mov     [esp+14h+var_4], eax
mov     eax, ds:dword_4a65d4
dec     eax
cmp     eax, 28h
ja      short def_41d646
xor     ecx, ecx
mov     cl, ds:byte_41dae0[eax]
jmp     ds:jpt_41d646[ecx*4]
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 13h
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
call    sub_41df60
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jnz     short loc_41d69b
cmp     word_4ad3dc, 13h
jnz     short loc_41d691
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    2
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     loc_41da79
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 8
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ds:dword_4a65c0
push    0
mov     word ptr [eax], 7
mov     ecx, ds:dword_4a65cc
mov     edx, ds:dword_4a65d4
push    ecx
push    edx
call    sub_41e0d0
add     esp, 0ch
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], ax
jmp     loc_41da6d
mov     eax, ds:dword_4a65c0
push    0
mov     word ptr [eax], 2
mov     ecx, ds:dword_4a65cc
mov     edx, ds:dword_4a65d4
push    ecx
push    edx
call    sub_41e0d0
add     esp, 0ch
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], ax
jmp     loc_41da6d
mov     eax, ds:dword_4a65c0
push    0
mov     word ptr [eax], 1
mov     ecx, ds:dword_4a65cc
mov     edx, ds:dword_4a65d4
push    ecx
push    edx
call    sub_41e0d0
add     esp, 0ch
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], ax
jmp     loc_41da6d
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 5
jmp     loc_41da62
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 3
mov     eax, ds:dword_4a65c0
mov     word ptr [eax+2], 1
jmp     loc_41da6d
mov     eax, ds:dword_4a65c0
push    0
mov     word ptr [eax], 8
mov     ecx, ds:dword_4a65cc
mov     edx, ds:dword_4a65d4
push    ecx
push    edx
call    sub_41e0d0
add     esp, 0ch
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], ax
jmp     loc_41da6d
mov     ebx, ds:dword_4a65cc
mov     ebp, ds:dword_4a65c0
mov     esi, ebx
call    sub_41df60
push    1
call    sub_41de90
add     esp, 4
test    eax, eax
jz      loc_41d86a
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
lea     edx, [ebx+1]
push    ecx
push    edx
call    sub_41dbc0
add     esp, 0ch
mov     edi, eax
cmp     edi, 0fffffffeh
jnz     short loc_41d80d
mov     ds:dword_4a65cc, esi
mov     ds:dword_4a65c0, ebp
call    sub_41e020
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
test    edi, edi
jge     short loc_41d81b
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    2
call    sub_41de90
add     esp, 4
test    eax, eax
jz      short loc_41d855
mov     eax, ds:dword_4a65c0
push    edi
mov     word ptr [eax], 0eh
push    ebx
push    21h
call    sub_41e0d0
add     esp, 0ch
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], ax
add     ds:dword_4a65c0, 4
jmp     loc_41da79
cmp     word_4ad3dc, 0
jnz     short loc_41d873
mov     word_4ad3dc, 8
jmp     short loc_41d873
mov     word_4ad3dc, 9
mov     ds:dword_4a65cc, esi
mov     ds:dword_4a65c0, ebp
call    sub_41e020
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
call    sub_41df60
mov     esi, ds:dword_4a65cc
mov     edi, ds:dword_4a65c0
push    1
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41d8d1
mov     ds:dword_4a65cc, esi
mov     ds:dword_4a65c0, edi
mov     word_4ad3dc, 9
call    sub_41e020
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jnz     short loc_41d907
cmp     word_4ad3dc, 13h
jnz     short loc_41d8fd
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    26h
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41d928
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 7
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     edi, ds:dword_4a65c0
add     ds:dword_4a65c0, 4
mov     word ptr [edi], 12h
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jnz     short loc_41d970
cmp     word_4ad3dc, 13h
jnz     short loc_41d966
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, ds:dword_4a65c0
add     ds:dword_4a65c0, 4
mov     word ptr [esi], 13h
push    26h
mov     eax, ds:dword_4a65c0
sub     eax, ds:dword_4a65ac
sar     eax, 2
mov     [edi+2], ax
mov     edi, ds:dword_4a65cc
mov     ebx, ds:dword_4a65c0
call    sub_41de90
add     esp, 4
test    eax, eax
mov     eax, ds:dword_4a65c0
jz      short loc_41d9f5
push    eax
mov     ecx, ds:dword_4a65cc
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jnz     short loc_41da0c
cmp     word_4ad3dc, 13h
jnz     short loc_41d9eb
mov     ds:dword_4a65cc, edi
mov     ds:dword_4a65c0, ebx
call    sub_41e020
mov     word_4ad3dc, 0eh
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     word ptr [eax], 5
mov     eax, ds:dword_4a65c0
mov     word ptr [eax+2], 0
add     ds:dword_4a65c0, 4
push    2
call    sub_41de90
add     esp, 4
test    eax, eax
jnz     short loc_41da2d
xor     eax, eax
pop     ebp
mov     word_4ad3dc, 8
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ds:dword_4a65c0
sub     eax, ds:dword_4a65ac
sar     eax, 2
mov     [esi+2], ax
jmp     short loc_41da79
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 4
mov     eax, ds:dword_4a65c0
mov     word ptr [eax+2], 1
jmp     short loc_41da6d
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 6
mov     eax, ds:dword_4a65c0
mov     word ptr [eax+2], 0
add     ds:dword_4a65c0, 4
call    sub_41df60
cmp     [esp+14h+var_4], 0
jz      short loc_41daa0
mov     dx, word ptr [esp+14h+var_4]
mov     eax, ds:dword_4a65c0
mov     word ptr [eax], 0bh
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], dx
add     ds:dword_4a65c0, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
call    sub_41e070
test    eax, eax
jnz     short loc_41db1c
xor     eax, eax
retn
cmp     ds:dword_4a65d4, 16h
jz      short loc_41db28
xor     eax, eax
retn
mov     eax, ds:dword_4a65c0
push    0
mov     word ptr [eax], 9
mov     ecx, ds:dword_4a65cc
push    ecx
push    16h
call    sub_41e0d0
add     esp, 0ch
mov     ecx, ds:dword_4a65c0
mov     [ecx+2], ax
add     ds:dword_4a65c0, 4
call    sub_41df60
mov     eax, 1
retn
push    ebx
push    esi
push    edi
xor     esi, esi
mov     ebx, [esp+0ch+arg_0]
push    ebp
mov     bp, [esp+10h+arg_4]
push    ebp
push    ebx
call    sub_487f10
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_41dbb5
push    edi
push    ebp
push    ebx
call    sub_487fa0
add     esp, 0ch
test    eax, eax
jz      short loc_41dbac
mov     esi, 1
push    eax
call    sub_44f4a0
add     esp, 4
push    edi
call    sub_44f2a0
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     ax, [eax]
push    ebx
mov     word ptr [esp+0ch+var_6], ax
push    esi
push    edi
xor     esi, esi
mov     eax, [esp+14h+var_6]
push    ebp
push    eax
call    sub_487fd0
movsx   edi, ax
add     esp, 4
cmp     edi, 2
jnz     short loc_41dc32
lea     eax, [esp+18h+var_6]
push    eax
call    sub_421da0
add     esp, 4
test    byte_4ad41c, 1
jnz     short loc_41dc1a
cmp     al, 1
jnz     short loc_41dc1a
mov     eax, 0fffffffeh
pop     ebp
mov     word_4ad3dc, 1eh
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     edi, 2
jnz     short loc_41dc32
lea     eax, [esp+18h+var_6]
push    eax
call    sub_421cc0
mov     [esp+1ch+var_6+2], eax
add     esp, 4
jmp     short loc_41dc51
lea     eax, [esp+18h+var_6+2]
mov     ecx, [esp+18h+var_6]
push    eax
mov     edx, ds:dword_4a65bc
push    ecx
push    edx
call    sub_488080
mov     word_4ad3dc, ax
add     esp, 0ch
cmp     word_4ad3dc, 2ah
jnz     short loc_41dc68
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ebx, 26h
xor     ebp, ebp
push    esi
cmp     edi, 2
jnz     short loc_41dc84
lea     eax, [esp+1ch+var_6]
push    eax
call    sub_421d30
add     esp, 8
jmp     short loc_41dc98
mov     eax, [esp+1ch+var_6]
mov     ecx, ds:dword_4a65bc
push    eax
push    ecx
call    sub_488000
add     esp, 0ch
cmp     ax, 0ffffh
jz      loc_41dd34
cmp     ax, 4
jnz     short loc_41dcdd
test    esi, esi
jz      short loc_41dcbd
push    ebx
call    sub_41de90
add     esp, 4
test    eax, eax
jz      loc_41dd89
mov     eax, ds:dword_4a65c0
mov     ecx, ds:dword_4a65cc
push    eax
push    ecx
call    sub_41db10
add     esp, 8
test    eax, eax
jz      loc_41dd65
inc     esi
jmp     short loc_41dc6f
test    esi, esi
jz      short loc_41dcf2
push    ebx
call    sub_41de90
add     esp, 4
test    eax, eax
jz      loc_41dd89
mov     eax, ds:dword_4a65c0
cmp     ds:dword_4a65d4, ebx
jnz     short loc_41dd1a
mov     word ptr [eax], 5
inc     esi
mov     eax, ds:dword_4a65c0
mov     [eax+2], bp
add     ds:dword_4a65c0, 4
jmp     loc_41dc6f
push    eax
mov     ecx, ds:dword_4a65cc
push    ecx
call    sub_41cf10
add     esp, 8
test    eax, eax
jz      short loc_41dd76
inc     esi
jmp     loc_41dc6f
cmp     ds:dword_4a65d4, 0
jz      short loc_41dd5a
cmp     ds:dword_4a65d4, 17h
jz      short loc_41dd5a
cmp     ds:dword_4a65d4, 2
jz      short loc_41dd89
mov     word_4ad3dc, 0fh
jmp     short loc_41dd89
mov     word_4ad3dc, 8
jmp     short loc_41dd89
cmp     [esp+18h+var_6+2], esi
jle     short loc_41dd98
mov     word_4ad3dc, 10h
jmp     short loc_41dd89
cmp     word_4ad3dc, 13h
jnz     short loc_41dd89
mov     word_4ad3dc, 0
cmp     [esp+18h+var_6+2], esi
jle     short loc_41dd98
mov     word_4ad3dc, 1dh
cmp     word_4ad3dc, 1dh
jnz     short loc_41ddfe
test    byte_4ad41c, 8
jnz     short loc_41ddc8
cmp     edi, 1
jnz     short loc_41ddfe
mov     eax, [esp+18h+var_6]
mov     ecx, ds:dword_4a65bc
push    eax
push    ecx
call    sub_41db70
add     esp, 8
test    eax, eax
jz      short loc_41ddfe
cmp     [esp+18h+var_6+2], esi
jle     short loc_41ddf5
xor     ecx, ecx
mov     edx, 4
mov     eax, ds:dword_4a65c0
inc     esi
mov     word ptr [eax], 5
mov     eax, ds:dword_4a65c0
mov     [eax+2], cx
add     ds:dword_4a65c0, edx
cmp     [esp+18h+var_6+2], esi
jg      short loc_41ddd5
mov     word_4ad3dc, 0
cmp     word_4ad3dc, 0fh
jnz     short loc_41de72
test    byte_4ad41c, 8
jnz     short loc_41de2e
cmp     edi, 1
jnz     short loc_41de72
mov     eax, [esp+18h+var_6]
mov     ecx, ds:dword_4a65bc
push    eax
push    ecx
call    sub_41db70
add     esp, 8
test    eax, eax
jz      short loc_41de72
xor     edi, edi
cmp     ds:dword_4a65d4, 2
mov     word_4ad3dc, di
jz      short loc_41de72
mov     ebx, 17h
mov     ebp, 2
cmp     ds:dword_4a65d4, edi
jz      short loc_41de69
cmp     ds:dword_4a65d4, ebx
jz      short loc_41de69
call    sub_41df60
cmp     ds:dword_4a65d4, ebp
jnz     short loc_41de4a
jmp     short loc_41de72
mov     word_4ad3dc, 8
cmp     word_4ad3dc, 0
mov     eax, esi
jz      short loc_41de83
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ecx, ds:dword_4a65d4
cmp     [esp+arg_0], ecx
jnz     short loc_41deab
test    ecx, ecx
jz      short loc_41dea5
call    sub_41df60
mov     eax, 1
retn
xor     eax, eax
retn
push    esi
mov     esi, ds:dword_4a65d4
cmp     esi, 5
jz      short loc_41dec5
cmp     esi, 6
jz      short loc_41dec5
xor     eax, eax
pop     esi
retn
call    sub_41df60
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ds:dword_4a65d4
cmp     esi, 3
jz      short loc_41dee5
cmp     esi, 4
jz      short loc_41dee5
xor     eax, eax
pop     esi
retn
call    sub_41df60
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ds:dword_4a65d4
cmp     esi, 0dh
jz      short loc_41df05
cmp     esi, 0eh
jz      short loc_41df05
xor     eax, eax
pop     esi
retn
call    sub_41df60
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ds:dword_4a65d4
cmp     esi, 5
mov     eax, esi
jl      short loc_41df28
cmp     eax, 6
jle     short loc_41df2c
cmp     eax, 0fh
jz      short loc_41df2c
xor     eax, eax
pop     esi
retn
call    sub_41df60
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ds:dword_4a65d4
cmp     esi, 7
mov     eax, esi
jl      short loc_41df53
cmp     eax, 0ch
jle     short loc_41df57
xor     eax, eax
pop     esi
retn
call    sub_41df60
mov     eax, esi
pop     esi
retn
push    ebx
mov     eax, ds:dword_4a65d4
push    esi
sub     eax, 17h
push    edi
mov     ecx, 5
push    ebp
mov     edx, 3
mov     esi, 19h
mov     edi, 17h
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     ebp, ds:dword_4a65d4
inc     ds:dword_4a65cc
sub     ebp, 11h
cmp     ebp, 10h
ja      short loc_41dfd1
xor     ebx, ebx
mov     bl, ss:byte_41e008[ebp]
jmp     ds:jpt_41dfa3[ebx*4]
add     ds:dword_4a65cc, ecx
jmp     short loc_41dfd1
add     ds:dword_4a65cc, edx
jmp     short loc_41dfd1
mov     bl, byte ptr ds:dword_4a65d4
mov     ebp, ds:dword_4a65cc
inc     ds:dword_4a65cc
cmp     [ebp+0], bl
jnz     short loc_41dfc0
mov     ebp, ds:dword_4a65cc
xor     ebx, ebx
mov     bl, [ebp+0]
mov     ds:dword_4a65d4, ebx
cmp     ebx, esi
jz      short loc_41df87
test    eax, eax
jz      short loc_41dfee
cmp     ebx, edi
jz      short loc_41df87
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ds:dword_4a65cc
cmp     byte ptr [eax], 19h
jnz     short loc_41e05a
inc     ds:dword_4a65cc
mov     eax, ds:dword_4a65cc
inc     ds:dword_4a65cc
cmp     byte ptr [eax], 19h
jz      short loc_41e050
mov     eax, ds:dword_4a65cc
inc     ds:dword_4a65cc
cmp     byte ptr [eax], 19h
jnz     short loc_41e040
mov     eax, ds:dword_4a65cc
cmp     byte ptr [eax], 19h
jz      short loc_41e02a
mov     eax, ds:dword_4a65cc
xor     ecx, ecx
mov     cl, [eax]
mov     ds:dword_4a65d4, ecx
retn
push    esi
mov     esi, ds:dword_4a65c0
cmp     ds:dword_4a65c4, esi
jbe     short loc_41e086
mov     eax, 1
pop     esi
retn
sub     esi, ds:dword_4a65ac
push    42h
add     esi, 190h
mov     eax, ds:dword_4a65d8
push    esi
push    eax
call    sub_45b960
add     esp, 0ch
test    eax, eax
jz      short loc_41e0bf
and     esi, 0fffffffch
mov     eax, ds:dword_4a65ac
lea     eax, [esi+eax-0ch]
pop     esi
mov     ds:dword_4a65c4, eax
mov     eax, 1
retn
xor     eax, eax
pop     esi
mov     word_4ad3dc, 0bh
retn
sub     esp, 1a8h
push    ebx
push    esi
push    edi
mov     esi, ds:dword_4a65dc
xor     edi, edi
sub     esi, ds:dword_4a65b8
lea     eax, [esi+8]
cmp     eax, ds:dword_4a65d0
jle     short loc_41e10f
push    400h
call    sub_41e2b0
add     esp, 4
test    eax, eax
jnz     short loc_41e10f
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 1a8h
retn
mov     eax, [esp+1b4h+arg_0]
sub     eax, 11h
cmp     eax, 10h
ja      short def_41e126
xor     ecx, ecx
mov     cl, ds:byte_41e29c[eax]
jmp     ds:jpt_41e126[ecx*4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 1a8h
retn
mov     ebx, [esp+1b4h+arg_4]
inc     ebx
cmp     byte ptr [ebx], 11h
jz      short loc_41e153
mov     al, [ebx]
inc     ebx
mov     [esp+edi+1b4h+string], al
inc     edi
cmp     byte ptr [ebx], 11h
jnz     short loc_41e146
mov     [esp+edi+1b4h+string], 0
lea     eax, [esp+1b4h+string]
push    eax
call    _atol
mov     [esp+1b8h+var_1a8], eax
add     esp, 4
mov     eax, ds:dword_4a65dc
mov     ecx, [esp+1b4h+var_1a8]
mov     [eax], ecx
add     ds:dword_4a65dc, 4
jmp     loc_41e277
mov     ebx, [esp+1b4h+arg_4]
inc     ebx
mov     eax, ebx
cmp     byte ptr [ebx], 12h
jz      short loc_41e19e
inc     edi
cmp     edi, 19ah
jge     short loc_41e19e
inc     eax
cmp     byte ptr [eax], 12h
jnz     short loc_41e18f
lea     eax, [edi+esi+1]
inc     edi
cmp     eax, ds:dword_4a65d0
jle     short loc_41e1ca
lea     eax, [edi+400h]
push    eax
call    sub_41e2b0
add     esp, 4
test    eax, eax
jnz     short loc_41e1ca
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 1a8h
retn
push    edi
mov     eax, ds:dword_4a65dc
push    ebx
push    eax
call    sub_47f9f0
add     esp, 0ch
add     ds:dword_4a65dc, edi
jmp     loc_41e277
mov     ebx, [esp+1b4h+arg_4]
inc     ebx
mov     edi, ebx
cmp     byte ptr [ebx], 13h
jz      short loc_41e1fa
inc     edi
cmp     byte ptr [edi], 13h
jnz     short loc_41e1f4
push    ebx
mov     byte ptr [edi], 0
call    sub_41bc90
fstp    [esp+1b8h+var_1a4]
lea     eax, [esp+1b8h+var_1a4]
add     esp, 4
mov     byte ptr [edi], 13h
mov     edx, ds:dword_4a65dc
mov     ecx, [eax]
mov     [edx], ecx
mov     eax, [eax+4]
mov     [edx+4], eax
add     ds:dword_4a65dc, 8
jmp     short loc_41e277
mov     ecx, ds:dword_4a65dc
mov     ebx, [esp+1b4h+arg_4]
mov     eax, [ebx+1]
mov     [ecx], eax
add     ds:dword_4a65dc, 4
jmp     short loc_41e277
mov     cx, [esp+1b4h+arg_8]
mov     eax, ds:dword_4a65dc
mov     [eax], cx
mov     ebx, [esp+1b4h+arg_4]
add     ds:dword_4a65dc, 2
mov     ax, [ebx+1]
mov     edx, ds:dword_4a65dc
mov     [edx], ax
add     ds:dword_4a65dc, 2
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 1a8h
retn
push    esi
mov     eax, ds:hmem
mov     esi, ds:dword_4a65dc
push    eax
sub     esi, ds:dword_4a65b8
call    ds:globalunlock
mov     ecx, ds:dword_4a65d0
push    42h
add     ecx, [esp+8+arg_0]
mov     eax, ds:hmem
push    ecx
mov     ds:dword_4a65d0, ecx
push    eax
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_41e2fb
xor     eax, eax
pop     esi
mov     word_4ad3dc, 0bh
retn
mov     eax, ds:hmem
push    eax
call    ds:globallock
mov     ds:dword_4a65b8, eax
add     eax, esi
pop     esi
mov     ds:dword_4a65dc, eax
mov     eax, 1
retn
mov     ax, [esp+arg_0]
push    esi
push    edi
mov     edx, ds:dword_4a65c0
sub     edx, ds:dword_4a65ac
mov     ecx, ds:dword_4a65c0
sar     edx, 2
mov     [ecx], ax
mov     ax, [esp+8+arg_4]
cmp     ax, 0ffffh
jnz     short loc_41e362
mov     eax, ds:dword_4a65c0
pop     edi
mov     word ptr [eax+2], 0ffffh
add     ds:dword_4a65c0, 4
mov     ax, dx
pop     esi
retn
movsx   ecx, ax
mov     esi, ds:dword_4a65ac
lea     edi, ds:0[ecx*4]
mov     cx, [esi+edi+2]
mov     esi, ds:dword_4a65c0
mov     [esi+2], cx
mov     ecx, ds:dword_4a65ac
mov     [ecx+edi+2], dx
pop     edi
add     ds:dword_4a65c0, 4
pop     esi
retn
mov     cx, [esp+arg_0]
mov     edx, ds:dword_4a65c0
sub     edx, ds:dword_4a65ac
sar     edx, 2
movsx   eax, cx
mov     ecx, ds:dword_4a65ac
lea     eax, [ecx+eax*4+2]
mov     cx, [eax]
mov     [eax], dx
cmp     cx, 0ffffh
jnz     short loc_41e3b4
retn
mov     eax, [esp+lpstring]
sub     esp, 0ch
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    ds:lstrlena
mov     ecx, [esp+1ch+arg_24]
mov     ebx, [esp+1ch+arg_20]
mov     esi, [esp+1ch+arg_8]
mov     [ecx], eax
lea     eax, [esp+1ch+var_4]
mov     ecx, [esp+1ch+arg_1c]
mov     dl, [esp+1ch+arg_18]
push    eax
mov     al, [esp+20h+arg_14]
push    ebx
push    ecx
mov     dword ptr [ebx], 0
mov     ecx, [esp+28h+arg_10]
push    edx
lea     edx, [esp+2ch+hmem]
push    eax
mov     eax, [esp+30h+lpstring]
push    ecx
mov     ecx, [esp+34h+arg_0]
push    edx
push    eax
mov     dword ptr [esi], 0
push    ecx
call    sub_41e4d0
add     esp, 24h
mov     edi, eax
test    edi, edi
jz      short loc_41e447
mov     eax, [esp+1ch+var_4]
mov     ecx, [esp+1ch+arg_24]
pop     ebp
mov     [ecx], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+1ch+hmem]
mov     ebp, ds:globallock
push    eax
call    ebp
mov     ecx, [esp+1ch+var_4]
mov     ebp, [esp+1ch+arg_c]
cmp     [esp+1ch+arg_10], 1
mov     [esp+1ch+src], eax
mov     [ebp+0], ecx
sbb     eax, eax
mov     ecx, [esp+1ch+arg_0]
neg     eax
push    eax
push    ebp
mov     eax, [esp+24h+src]
push    esi
push    eax
push    ecx
call    sub_41c040
add     esp, 14h
mov     edi, eax
test    edi, edi
jz      short loc_41e4b9
cmp     edi, 1
jz      short loc_41e4b3
cmp     edi, 0bh
jz      short loc_41e4b3
mov     eax, [ebp+0]
mov     ecx, [esp+1ch+arg_24]
mov     edx, [esp+1ch+src]
push    ecx
mov     ecx, [esp+20h+arg_0]
push    ebx
push    edx
mov     [ebx], eax
mov     eax, [esp+28h+lpstring]
push    eax
push    ecx
call    sub_41f900
add     esp, 14h
mov     dword ptr [esi], 0
mov     eax, [esp+1ch+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 1d8h
mov     eax, [esp+1d8h+arg_c]
push    ebx
mov     [esp+1dch+var_1d8], eax
push    esi
push    edi
xor     esi, esi
mov     [esp+1e4h+var_1cc], esi
push    ebp
mov     [esp+1e8h+var_1bc], esi
mov     [esp+1e8h+var_1c8], esi
mov     [esp+1e8h+var_1d0], esi
push    42h
mov     [esp+1ech+var_1a4], esi
push    334h
mov     [esp+1f0h+var_1c0], 1
mov     [esp+1f0h+dwbytes], 334h
call    sub_45b8f0
mov     [esp+1f0h+hmem], eax
mov     eax, [esp+1f0h+lpstring]
add     esp, 8
push    eax
call    ds:lstrlena
mov     ecx, [esp+1e8h+arg_20]
cmp     [esp+1e8h+hmem], esi
mov     [ecx], eax
mov     eax, [esp+1e8h+arg_1c]
mov     [eax], esi
jnz     short loc_41e554
mov     eax, 0bh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1d8h
retn
mov     eax, [esp+1e8h+lpstring]
mov     ecx, [esp+1e8h+hmem]
mov     [esp+1e8h+var_1a0], eax
push    ecx
call    ds:globallock
mov     ebp, eax
mov     [esp+1e8h+var_1b4], eax
mov     [esp+1e8h+var_1b8], 0
mov     esi, [esp+1e8h+lpstring]
push    0dh
mov     eax, [esp+1ech+lpstring]
push    eax
call    _strchr
add     esp, 8
test    eax, eax
jz      short loc_41e59e
sub     eax, [esp+1e8h+lpstring]
jmp     short loc_41e5ac
mov     eax, [esp+1e8h+lpstring]
push    eax
call    ds:lstrlena
cmp     eax, 19ah
jge     loc_41e885
lea     eax, [esp+1e8h+var_1a4]
lea     ecx, [esp+1e8h+var_1b8]
mov     edx, [esp+1e8h+arg_18]
push    eax
mov     eax, dword ptr [esp+1ech+arg_14]
push    ecx
mov     ecx, dword ptr [esp+1f0h+arg_10]
push    edx
lea     edx, [esp+1f4h+string]
push    eax
lea     eax, [esp+1f8h+lpstring]
push    ecx
mov     ecx, [esp+1fch+arg_0]
push    edx
push    eax
push    ecx
call    sub_41e990
lea     ecx, [esp+208h+string]
add     esp, 20h
mov     ebx, eax
push    ecx
call    ds:lstrlena
cmp     [esp+1e8h+var_1b8], 0
mov     [esp+1e8h+var_1d4], eax
jnz     loc_41e893
cmp     ebx, 21h
jnz     short loc_41e621
mov     [esp+1e8h+var_1d4], 2
jmp     short loc_41e62e
cmp     ebx, 16h
jnz     short loc_41e62e
mov     [esp+1e8h+var_1d4], 4
mov     eax, [esp+1e8h+var_1c8]
add     eax, [esp+1e8h+var_1d4]
add     eax, 2
cmp     eax, [esp+1e8h+dwbytes]
jle     short loc_41e683
add     [esp+1e8h+dwbytes], 334h
mov     ecx, [esp+1e8h+hmem]
push    ecx
call    ds:globalunlock
mov     eax, [esp+1e8h+dwbytes]
push    42h
mov     ecx, [esp+1ech+hmem]
push    eax
push    ecx
call    sub_45b960
mov     ecx, [esp+1f4h+hmem]
add     esp, 0ch
test    eax, eax
push    ecx
jz      loc_41e8ba
call    ds:globallock
mov     ebp, [esp+1e8h+var_1c8]
mov     [esp+1e8h+var_1b4], eax
add     ebp, eax
mov     [esp+1e8h+var_1ac], ebp
mov     [ebp+0], bl
inc     ebp
cmp     ebx, 19h
jz      short loc_41e6a1
test    ebx, ebx
jz      short loc_41e6a1
cmp     ebx, 17h
jz      short loc_41e6a1
mov     [esp+1e8h+var_1c0], 0
lea     ecx, [ebx-7]
cmp     ecx, 2bh
ja      short def_41e6b1
xor     eax, eax
mov     al, ds:byte_41e94c[ecx]
jmp     ds:jpt_41e6b1[eax*4]
mov     [esp+1e8h+var_1d0], 0
cmp     [esp+1e8h+var_1cc], 0
jz      loc_41e843
mov     [esp+1e8h+var_1d4], 1
mov     [esp+1e8h+var_1b8], 0dh
jmp     def_41e89f
cmp     [esp+1e8h+var_1cc], 0
jz      loc_41e843
mov     byte ptr [ebp-1], 10h
mov     [esp+1e8h+var_1cc], 0
cmp     [esp+1e8h+var_1d0], 0
jz      short loc_41e722
mov     ecx, [esp+1e8h+var_1b4]
mov     eax, [esp+1e8h+var_1d0]
mov     edx, [eax+ecx]
mov     [esp+1e8h+var_1a8], edx
lea     edx, [esp+1e8h+var_1a8]
push    edx
call    sub_41bf10
add     esp, 4
test    eax, eax
jnz     loc_41e843
mov     [esp+1e8h+var_1b8], 0ch
mov     eax, [esp+1e8h+lpstring]
sub     eax, esi
mov     [esp+1e8h+var_1d4], eax
jmp     def_41e89f
cmp     [esp+1e8h+var_1cc], 0
jnz     short loc_41e74a
cmp     [esp+1e8h+var_1d8], 0
jz      short loc_41e755
cmp     [esp+1e8h+var_1c0], 0
jz      loc_41e6cb
mov     [esp+1e8h+var_1c0], 1
mov     [esp+1e8h+var_1d0], 0
mov     [esp+1e8h+var_1bc], 0
mov     eax, [esp+1e8h+arg_c]
mov     [esp+1e8h+var_1d8], eax
jmp     loc_41e843
mov     [esp+1e8h+var_1bc], 0
mov     [esp+1e8h+var_1d8], 0
cmp     [esp+1e8h+var_1d8], 0
jz      short loc_41e7a4
mov     [esp+1e8h+var_1d8], 0
mov     [esp+1e8h+var_1cc], 1
cmp     ebx, 16h
jnz     short loc_41e810
mov     eax, [esp+1e8h+var_1c8]
inc     eax
mov     [esp+1e8h+var_1d0], eax
jmp     short loc_41e818
cmp     [esp+1e8h+var_1d8], 0
jz      loc_41e843
mov     [esp+1e8h+var_1bc], 1
mov     [esp+1e8h+var_1d8], 0
jmp     short loc_41e843
cmp     [esp+1e8h+var_1bc], 0
jz      short loc_41e7e3
mov     eax, [esp+1e8h+arg_c]
mov     [esp+1e8h+var_1d8], eax
cmp     [esp+1e8h+var_1cc], 0
jz      short loc_41e843
jmp     loc_41e6cb
mov     [esp+1e8h+var_1d8], 0
jmp     short loc_41e843
mov     [esp+1e8h+var_1d0], 0
mov     eax, 1
mov     [esp+1e8h+var_1d8], eax
mov     [esp+1e8h+var_1c0], eax
jmp     short loc_41e843
mov     [esp+1e8h+var_1d0], 0
cmp     [esp+1e8h+var_1d8], 0
jnz     loc_41e8d2
mov     eax, [esp+1e8h+var_1d4]
lea     esi, [esp+1e8h+string]
mov     edi, ebp
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
add     ebp, [esp+1e8h+var_1d4]
mov     [ebp+0], bl
inc     ebp
mov     eax, [esp+1e8h+var_1ac]
sub     [esp+1e8h+var_1c8], eax
add     [esp+1e8h+var_1c8], ebp
test    ebx, ebx
jnz     loc_41e578
mov     eax, [esp+1e8h+arg_8]
mov     ecx, [esp+1e8h+hmem]
push    ecx
mov     [eax], ecx
call    ds:globalunlock
mov     ecx, [esp+1e8h+arg_20]
mov     edx, [esp+1e8h+var_1c8]
xor     eax, eax
pop     ebp
pop     edi
mov     [ecx], edx
pop     esi
pop     ebx
add     esp, 1d8h
retn
mov     [esp+1e8h+var_1b8], 1
mov     [esp+1e8h+var_1d4], eax
jmp     short def_41e89f
mov     eax, [esp+1e8h+var_1b8]
sub     eax, 2
cmp     eax, 4
ja      short def_41e89f
jmp     ds:jpt_41e89f[eax*4]
mov     [esp+1e8h+var_1d4], 19ah
jmp     short def_41e89f
mov     [esp+1e8h+var_1d4], 1
jmp     short def_41e89f
call    sub_45ba00
add     esp, 4
mov     eax, 0bh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1d8h
retn
mov     [esp+1e8h+var_1b8], 11h
mov     ecx, [esp+1e8h+arg_20]
mov     eax, [esp+1e8h+var_1d4]
sub     esi, [esp+1e8h+var_1a0]
mov     [ecx], eax
add     esi, [esp+1e8h+var_1a4]
mov     eax, [esp+1e8h+arg_1c]
mov     ecx, [esp+1e8h+hmem]
mov     [eax], esi
push    ecx
call    sub_45ba00
mov     eax, [esp+1ech+var_1b8]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1d8h
retn
mov     al, [esp+arg_c]
sub     esp, 8
test    al, al
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, 199h
jnz     short loc_41e9a9
mov     al, ds:byte_4a8540
mov     [esp+18h+var_5], al
mov     al, [esp+18h+arg_10]
test    al, al
jnz     short loc_41e9ba
mov     al, ds:byte_4a8542
mov     ecx, [esp+18h+arg_18]
mov     ebx, [esp+18h+str]
mov     edi, [esp+18h+arg_4]
mov     byte ptr [esp+18h+var_4], al
mov     eax, [esp+18h+arg_1c]
mov     dword ptr [ecx], 0
mov     dword ptr [eax], 0
mov     byte ptr [ebx], 0
mov     ecx, [edi]
mov     al, [ecx]
test    al, al
jnz     short loc_41e9ef
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     al, 0dh
jnz     short loc_41ea0b
inc     ecx
mov     [edi], ecx
cmp     byte ptr [ecx], 0ah
jnz     short loc_41e9fe
inc     ecx
mov     [edi], ecx
mov     eax, 17h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     [esp+18h+var_6], al
cmp     al, 80h
jnb     loc_41eaeb
cmp     dword_4af134, 1
jle     short loc_41ea33
push    8
xor     eax, eax
mov     al, [esp+1ch+var_6]
push    eax
call    __isctype
add     esp, 8
jmp     short loc_41ea48
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, [esp+18h+var_6]
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 8
test    eax, eax
jz      loc_41eaeb
mov     esi, 1
mov     eax, [edi]
mov     al, [eax]
mov     [ebx], al
inc     dword ptr [edi]
mov     al, [ebx]
cmp     al, 80h
jnb     short loc_41eace
cmp     dword_4af134, esi
jle     short loc_41ea7c
push    8
xor     ecx, ecx
mov     cl, al
push    ecx
call    __isctype
add     esp, 8
jmp     short loc_41ea8f
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, al
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 8
test    eax, eax
jz      short loc_41eace
dec     ebp
jz      short loc_41eab7
mov     eax, ebx
inc     ebx
cmp     byte ptr [eax], 0dh
jnz     short loc_41ea55
mov     eax, [edi]
mov     al, [eax]
cmp     al, 0ah
jnz     short loc_41eaaa
mov     [ebx], al
inc     dword ptr [edi]
mov     eax, 17h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ecx, [esp+18h+arg_18]
mov     eax, 1bh
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 2
pop     ebx
add     esp, 8
retn
dec     dword ptr [edi]
pop     ebp
mov     byte ptr [ebx], 0
mov     eax, [edi]
pop     edi
pop     esi
pop     ebx
cmp     byte ptr [eax], 1
mov     eax, 0
adc     eax, 0ffffffffh
add     esp, 8
and     eax, 19h
retn
cmp     [esp+18h+var_6], 0ach
jnz     short loc_41eb5b
mov     esi, [edi]
inc     esi
cmp     byte ptr [esi], 0dh
jz      short loc_41eb37
mov     al, [esi]
cmp     al, 80h
jnb     short loc_41eb37
cmp     dword_4af134, 1
jle     short loc_41eb1a
push    8
xor     ecx, ecx
mov     cl, al
push    ecx
call    __isctype
add     esp, 8
jmp     short loc_41eb2d
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, al
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 8
test    eax, eax
jz      short loc_41eb37
inc     esi
cmp     byte ptr [esi], 0dh
jnz     short loc_41eafa
mov     eax, esi
inc     esi
cmp     byte ptr [eax], 0dh
jnz     short loc_41eb5b
cmp     byte ptr [esi], 0ah
jnz     short loc_41eb45
inc     esi
mov     eax, 19h
pop     ebp
mov     [edi], esi
pop     edi
pop     esi
mov     byte ptr [ebx], 0ach
mov     byte ptr [ebx+1], 0
pop     ebx
add     esp, 8
retn
cmp     [esp+18h+arg_14], 0
jz      short loc_41ebb7
cmp     [esp+18h+var_6], 3bh
jnz     loc_41ec1c
mov     eax, [edi]
cmp     byte ptr [eax], 0
jz      short loc_41eb90
mov     eax, [edi]
mov     al, [eax]
cmp     al, 0dh
jz      short loc_41eb90
mov     ecx, ebp
dec     ebp
test    ecx, ecx
jz      short loc_41eba0
mov     [ebx], al
inc     ebx
mov     eax, [edi]
inc     eax
mov     [edi], eax
cmp     byte ptr [eax], 0
jnz     short loc_41eb74
mov     eax, 19h
pop     ebp
pop     edi
mov     byte ptr [ebx], 0
pop     esi
pop     ebx
add     esp, 8
retn
mov     ecx, [esp+18h+arg_18]
mov     eax, 1bh
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 2
pop     ebx
add     esp, 8
retn
mov     eax, [edi]
push    eax
call    sub_41f2b0
add     esp, 4
test    ax, ax
jz      short loc_41ec1c
mov     byte ptr [ebx], 3bh
inc     ebx
movsx   eax, ax
add     eax, [edi]
mov     [edi], eax
mov     al, [eax]
test    al, al
jz      short loc_41ebf5
cmp     al, 0dh
jz      short loc_41ebf5
cmp     al, 0ach
jz      short loc_41ebf5
mov     ecx, ebp
dec     ebp
test    ecx, ecx
jz      short loc_41ec05
mov     [ebx], al
inc     ebx
mov     eax, [edi]
inc     eax
mov     [edi], eax
mov     al, [eax]
test    al, al
jnz     short loc_41ebd8
mov     eax, 19h
pop     ebp
pop     edi
mov     byte ptr [ebx], 0
pop     esi
pop     ebx
add     esp, 8
retn
mov     ecx, [esp+18h+arg_18]
mov     eax, 1bh
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 2
pop     ebx
add     esp, 8
retn
cmp     [esp+18h+var_6], 80h
jnb     loc_41efad
cmp     dword_4af134, 1
jle     short loc_41ec46
push    103h
xor     eax, eax
mov     al, [esp+1ch+var_6]
push    eax
call    __isctype
add     esp, 8
jmp     short loc_41ec5d
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, [esp+18h+var_6]
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 103h
test    eax, eax
jnz     short loc_41ec73
cmp     [esp+18h+var_6], 5fh
jz      short loc_41ec73
cmp     [esp+18h+var_6], 40h
jnz     loc_41ee01
mov     eax, [edi]
push    eax
call    sub_41f410
add     esp, 4
mov     esi, eax
cmp     esi, 19ah
jl      short loc_41ec9f
mov     ecx, [esp+18h+arg_18]
mov     eax, 1bh
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 2
pop     ebx
add     esp, 8
retn
lea     eax, [esi+1]
mov     ecx, [edi]
push    eax
push    ecx
push    ebx
call    sub_47f9f0
add     esp, 0ch
add     [edi], esi
push    ebx
call    sub_41f490
add     esp, 4
test    eax, eax
jnz     loc_41f1c5
mov     esi, [edi]
cmp     byte ptr [esi], 80h
jnb     short loc_41ed04
mov     edi, 1
cmp     dword_4af134, edi
jle     short loc_41ece7
push    8
xor     eax, eax
mov     al, [esi]
push    eax
call    __isctype
add     esp, 8
jmp     short loc_41ecfa
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, [esi]
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 8
test    eax, eax
jz      short loc_41ed04
inc     esi
cmp     byte ptr [esi], 80h
jb      short loc_41ecce
cmp     byte ptr [esi], 28h
jnz     short loc_41ed6a
lea     eax, [esp+18h+var_4]
push    eax
push    ebx
call    sub_421c00
mov     ecx, [esp+20h+arg_18]
add     esp, 8
cmp     eax, 1fh
mov     [ecx], eax
jnz     short loc_41ed2f
mov     eax, 1fh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
test    eax, eax
jz      short loc_41ed4c
lea     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+arg_0]
push    eax
push    ebx
push    ecx
call    sub_488110
mov     ecx, [esp+24h+arg_18]
add     esp, 0ch
mov     [ecx], eax
mov     ecx, [esp+18h+arg_18]
cmp     dword ptr [ecx], 0
jnz     short loc_41ed5d
mov     ax, word ptr [esp+18h+var_4]
mov     [ebx], ax
mov     eax, 21h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    40h
push    ebx
call    _strchr
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_41ed98
mov     byte ptr [esi], 0
inc     esi
cmp     byte ptr [esi], 22h
jnz     short loc_41ed98
push    esi
call    ds:lstrlena
lea     eax, [esi+eax-1]
cmp     byte ptr [eax], 22h
jnz     short loc_41ed98
inc     esi
mov     byte ptr [eax], 0
lea     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+arg_0]
push    eax
push    0
push    esi
push    ebx
push    ecx
call    sub_41bcc0
mov     ecx, [esp+2ch+arg_18]
add     esp, 14h
cmp     eax, 1fh
mov     [ecx], eax
ja      short def_41edc1
xor     ecx, ecx
mov     cl, ds:byte_41f1ec[eax]
jmp     ds:jpt_41edc1[ecx*4]
mov     eax, [esp+18h+var_4]
mov     [ebx], eax
mov     eax, 16h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    19ah
push    esi
push    ebx
sub     esi, ebx
call    sub_47f9f0
mov     eax, [esp+24h+arg_1c]
add     esp, 0ch
mov     [eax], esi
jmp     short def_41edc1
mov     eax, 1fh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     [esp+18h+var_6], 80h
jnb     loc_41efad
cmp     dword_4af134, 1
jle     short loc_41ee28
push    4
xor     eax, eax
mov     al, [esp+1ch+var_6]
push    eax
call    __isctype
add     esp, 8
jmp     short loc_41ee3d
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, [esp+18h+var_6]
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 4
test    eax, eax
jnz     short loc_41ee8a
mov     al, [esp+18h+var_6]
cmp     [esp+18h+var_5], al
jnz     loc_41efad
cmp     dword_4af134, 1
jle     short loc_41ee6c
push    4
mov     ecx, [edi]
xor     eax, eax
mov     al, [ecx+1]
push    eax
call    __isctype
add     esp, 8
jmp     short loc_41ee82
mov     eax, [edi]
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, [eax+1]
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 4
test    eax, eax
jz      loc_41efad
mov     al, [esp+18h+var_5]
sub     al, [esp+18h+var_6]
cmp     al, 1
mov     eax, [edi]
sbb     esi, esi
neg     esi
cmp     byte ptr [eax], 80h
jnb     short loc_41eeed
cmp     dword_4af134, 1
jle     short loc_41eebb
push    4
mov     ecx, [edi]
xor     eax, eax
mov     al, [ecx]
push    eax
call    __isctype
add     esp, 8
jmp     short loc_41eed0
mov     eax, [edi]
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, [eax]
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 4
test    eax, eax
jz      short loc_41eeed
mov     eax, ebp
dec     ebp
test    eax, eax
jle     short loc_41ef39
mov     eax, [edi]
inc     ebx
mov     al, [eax]
mov     [ebx-1], al
mov     eax, [edi]
inc     eax
mov     [edi], eax
cmp     byte ptr [eax], 80h
jb      short loc_41ee9f
mov     eax, 199h
sub     eax, ebp
cmp     eax, 9
jle     short loc_41eefe
mov     esi, 1
mov     ecx, [edi]
mov     al, [esp+18h+var_5]
cmp     [ecx], al
jnz     short loc_41ef80
mov     esi, 1
mov     byte ptr [ebx], 2eh
add     ebx, esi
mov     eax, [edi]
add     eax, esi
mov     [edi], eax
cmp     byte ptr [eax], 80h
jnb     short loc_41ef80
cmp     dword_4af134, 1
jle     short loc_41ef50
push    4
mov     ecx, [edi]
xor     eax, eax
mov     al, [ecx]
push    eax
call    __isctype
add     esp, 8
jmp     short loc_41ef65
mov     ecx, [esp+18h+arg_18]
mov     eax, 1bh
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 2
pop     ebx
add     esp, 8
retn
mov     eax, [edi]
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, [eax]
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 4
test    eax, eax
jz      short loc_41ef80
dec     ebp
test    ebp, ebp
jle     short loc_41ef96
mov     eax, [edi]
inc     ebx
mov     al, [eax]
mov     [ebx-1], al
mov     eax, [edi]
inc     eax
mov     [edi], eax
cmp     byte ptr [eax], 80h
jb      short loc_41ef1d
pop     ebp
mov     byte ptr [ebx], 0
pop     edi
cmp     esi, 1
sbb     eax, eax
pop     esi
and     eax, 0fffffffeh
pop     ebx
add     eax, 13h
add     esp, 8
retn
mov     ecx, [esp+18h+arg_18]
mov     eax, 1bh
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 2
pop     ebx
add     esp, 8
retn
cmp     [esp+18h+var_6], 22h
jnz     loc_41f057
inc     dword ptr [edi]
mov     eax, [edi]
mov     cl, [eax]
inc     eax
cmp     cl, 5ch
mov     [edi], eax
jnz     short loc_41f000
mov     al, [eax]
cmp     al, 22h
jz      short loc_41eff9
cmp     al, 5ch
jz      short loc_41eff9
cmp     al, 72h
jnz     short loc_41efdc
mov     byte ptr [ebx], 0dh
inc     ebx
inc     dword ptr [edi]
jmp     short loc_41f003
cmp     al, 6eh
jnz     short loc_41efe8
mov     byte ptr [ebx], 0ah
inc     ebx
inc     dword ptr [edi]
jmp     short loc_41f003
cmp     al, 74h
jnz     short loc_41eff4
mov     byte ptr [ebx], 9
inc     ebx
inc     dword ptr [edi]
jmp     short loc_41f003
mov     byte ptr [ebx], 5ch
jmp     short loc_41f002
mov     [ebx], al
inc     ebx
inc     dword ptr [edi]
jmp     short loc_41f003
mov     [ebx], cl
inc     ebx
mov     eax, ebp
dec     ebp
test    eax, eax
jle     short loc_41f029
test    cl, cl
jz      short loc_41f040
cmp     cl, 0dh
jz      short loc_41f040
cmp     cl, 22h
jnz     short loc_41efba
mov     eax, 12h
pop     ebp
mov     byte ptr [ebx-1], 0
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ecx, [esp+18h+arg_18]
mov     eax, 1bh
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 2
pop     ebx
add     esp, 8
retn
mov     ecx, [esp+18h+arg_18]
mov     eax, 1bh
pop     ebp
pop     edi
pop     esi
mov     dword ptr [ecx], 3
pop     ebx
add     esp, 8
retn
mov     ecx, [edi]
mov     al, [esp+18h+var_6]
inc     ecx
cmp     byte ptr [esp+18h+var_4], al
mov     [edi], ecx
jnz     short loc_41f073
mov     eax, 26h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     eax, eax
mov     al, [esp+18h+var_6]
sub     eax, 26h
cmp     eax, 58h
ja      def_41f08d
xor     edx, edx
mov     dl, ds:byte_41f248[eax]
jmp     ds:jpt_41f08d[edx*4]
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 2
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     byte ptr [ecx], 2ah
jnz     short loc_41f0d0
inc     ecx
mov     eax, 25h
pop     ebp
mov     [edi], ecx
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 3
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 5
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 6
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     byte ptr [ecx], 3dh
jnz     def_41f08d
inc     ecx
mov     eax, 10h
pop     ebp
mov     [edi], ecx
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     al, [ecx]
cmp     al, 3dh
jnz     short loc_41f133
inc     ecx
mov     eax, 0ah
pop     ebp
mov     [edi], ecx
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     al, 3eh
jnz     short loc_41f147
inc     ecx
mov     eax, 0ch
pop     ebp
mov     [edi], ecx
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 9
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 7
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     byte ptr [ecx], 3dh
jnz     short loc_41f176
inc     ecx
mov     eax, 0bh
pop     ebp
mov     [edi], ecx
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 23h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 0eh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 0fh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     al, [esp+18h+var_6]
mov     ecx, [esp+18h+arg_18]
sub     al, 40h
cmp     al, 1
sbb     eax, eax
and     eax, 2
add     eax, 4
mov     [ecx], eax
mov     eax, 1ah
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_41f2c8
cmp     byte ptr [eax], 2dh
jnz     short loc_41f2c8
cmp     byte ptr [eax+1], 2dh
jnz     short loc_41f2c8
mov     ax, 2
retn
xor     ax, ax
retn
mov     eax, [esp+arg_0]
push    ebx
test    eax, eax
jnz     short loc_41f2dd
xor     eax, eax
pop     ebx
retn
mov     bl, [eax]
movsx   ecx, bl
cmp     ecx, 80h
jb      short loc_41f2ee
xor     eax, eax
pop     ebx
retn
cmp     dword_4af134, 1
jle     short loc_41f307
push    107h
push    ecx
call    __isctype
add     esp, 8
jmp     short loc_41f318
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 107h
test    eax, eax
jnz     short loc_41f32a
cmp     bl, 5fh
jz      short loc_41f32a
cmp     bl, 20h
jz      short loc_41f32a
xor     eax, eax
pop     ebx
retn
mov     eax, 1
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+lpstring]
push    edi
push    ebp
mov     edi, esi
mov     ebp, esi
push    esi
mov     [esp+18h+var_4], 1
call    sub_41f2d0
add     esp, 4
test    eax, eax
jz      loc_41f3fb
cmp     dword_4af134, 1
jle     short loc_41f384
movsx   eax, byte ptr [esi]
push    103h
push    eax
call    __isctype
add     esp, 8
jmp     short loc_41f398
movsx   ecx, byte ptr [esi]
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 103h
test    eax, eax
jnz     short loc_41f3a1
cmp     byte ptr [esi], 5fh
jnz     short loc_41f3fb
inc     edi
cmp     byte ptr [edi], 20h
jz      short loc_41f3b4
push    edi
call    sub_41f2d0
add     esp, 4
test    eax, eax
jnz     short loc_41f3a1
mov     bl, [edi]
push    ebp
mov     byte ptr [edi], 0
call    sub_41f470
add     esp, 4
mov     [edi], bl
test    eax, eax
jnz     short loc_41f3da
cmp     bl, 20h
jnz     short loc_41f3e4
mov     [esp+14h+var_4], 0
lea     ebp, [edi+1]
jmp     short loc_41f3a1
cmp     [esp+14h+var_4], 0
jnz     short loc_41f3e4
lea     edi, [ebp-1]
cmp     edi, esi
jbe     short loc_41f3ee
dec     edi
cmp     byte ptr [edi], 20h
jz      short loc_41f3e4
sub     edi, esi
pop     ebp
lea     eax, [edi+1]
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
push    edi
mov     esi, [esp+8+lpstring]
push    esi
call    sub_41f340
add     esp, 4
lea     edi, [esi+eax]
cmp     byte ptr [edi], 40h
jnz     short loc_41f46a
lea     eax, [edi+1]
cmp     byte ptr [eax], 22h
jnz     short loc_41f44b
mov     edi, eax
mov     al, [edi+1]
inc     edi
test    al, al
jz      short loc_41f459
cmp     al, 5ch
jnz     short loc_41f443
inc     edi
cmp     byte ptr [edi], 0
jz      short loc_41f459
cmp     byte ptr [edi], 22h
jnz     short loc_41f431
inc     edi
jmp     short loc_41f459
inc     edi
push    edi
call    sub_41f2d0
add     esp, 4
test    eax, eax
jnz     short loc_41f44b
dec     edi
cmp     byte ptr [edi], 20h
jnz     short loc_41f465
dec     edi
cmp     byte ptr [edi], 20h
jz      short loc_41f45f
sub     edi, esi
lea     eax, [edi+1]
pop     edi
pop     esi
retn
mov     eax, [esp+lpstring]
push    eax
call    sub_41f490
add     esp, 4
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
push    ebx
push    esi
mov     ebx, [esp+8+lpstring]
push    edi
push    ebp
push    ebx
call    ds:lstrlena
cmp     eax, 6
jle     short loc_41f4ab
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     edi, edi
mov     esi, 0fh
lea     ebp, [esi+edi]
sar     ebp, 1
mov     eax, ss:off_4ad428[ebp+ebp*4]
push    eax
push    ebx
call    ds:lstrcmpia
test    eax, eax
jge     short loc_41f4d0
lea     esi, [ebp-1]
jmp     short loc_41f4d5
jle     short loc_41f4e0
lea     edi, [ebp+1]
cmp     edi, esi
jle     short loc_41f4b2
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
mov     al, ss:byte_4ad42c[ebp+ebp*4]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 1a0h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, 334h
push    42h
mov     esi, edi
push    edi
call    sub_45b8f0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jnz     short loc_41f51f
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1a0h
retn
push    ebp
call    ds:globallock
xor     ecx, ecx
mov     [esp+1b0h+lpstring1], eax
mov     eax, [esp+1b0h+arg_4]
mov     cx, [eax+4]
add     [esp+1b0h+arg_4], ecx
mov     eax, [esp+1b0h+arg_4]
xor     ebx, ebx
lea     ecx, [esp+1b0h+arg_4]
mov     edx, [esp+1b0h+arg_0]
mov     bl, [eax]
lea     eax, [esp+1b0h+string2]
inc     [esp+1b0h+arg_4]
push    eax
push    ecx
push    ebx
push    edx
call    sub_41f610
lea     ecx, [esp+1c0h+string2]
mov     edx, [esp+1c0h+lpstring1]
add     esp, 10h
push    ecx
push    edx
call    ds:lstrcata
lea     ecx, [esp+1b0h+string2]
push    ecx
call    ds:lstrlena
sub     edi, eax
cmp     edi, 19ah
jge     short loc_41f5c6
push    ebp
add     esi, 334h
call    ds:globalunlock
push    42h
push    esi
push    ebp
call    sub_45b960
add     esp, 0ch
test    eax, eax
push    ebp
jz      short loc_41f5fa
mov     edi, esi
call    ds:globallock
mov     [esp+1b0h+lpstring1], eax
push    eax
call    ds:lstrlena
sub     edi, eax
test    ebx, ebx
jnz     loc_41f53e
push    ebp
call    ds:globalunlock
mov     eax, [esp+1b0h+lpstring1]
push    42h
push    eax
call    ds:lstrlena
inc     eax
push    eax
push    ebp
call    sub_45b960
add     esp, 0ch
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1a0h
retn
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1a0h
retn
mov     edx, [esp+arg_4]
sub     esp, 24h
xor     eax, eax
push    ebx
push    esi
cmp     edx, 26h
push    edi
push    ebp
ja      short def_41f62a
xor     ecx, ecx
mov     cl, ds:byte_41f8d0[edx]
jmp     ds:jpt_41f62a[ecx*4]
cmp     edx, 35h
jge     short loc_41f653
mov     eax, lpstring2[edx*4]
mov     esi, [esp+34h+lpstring1]
push    eax
push    esi
call    ds:lstrcpya
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     esi, [esp+34h+lpstring1]
xor     eax, eax
pop     ebp
pop     edi
mov     [esi], dl
mov     byte ptr [esi+1], 0
pop     esi
pop     ebx
add     esp, 24h
retn
mov     esi, [esp+34h+lpstring1]
xor     eax, eax
pop     ebp
pop     edi
mov     byte ptr [esi], 0
pop     esi
pop     ebx
add     esp, 24h
retn
mov     esi, [esp+34h+lpstring1]
mov     ebx, 1
inc     esi
mov     edi, [esp+34h+arg_8]
movsx   edx, dl
mov     byte ptr [esi-1], 22h
mov     eax, [edi]
mov     cl, [eax]
inc     eax
mov     [edi], eax
xor     eax, eax
mov     al, cl
cmp     eax, edx
jz      short loc_41f6ef
mov     eax, ebx
inc     ebx
cmp     eax, 198h
jg      short loc_41f700
cmp     cl, 22h
jz      short loc_41f6e5
cmp     cl, 5ch
jz      short loc_41f6e5
cmp     cl, 0dh
jnz     short loc_41f6c0
mov     byte ptr [esi], 5ch
inc     esi
mov     byte ptr [esi], 72h
inc     esi
inc     ebx
jmp     short loc_41f68d
cmp     cl, 0ah
jnz     short loc_41f6d0
mov     byte ptr [esi], 5ch
inc     esi
mov     byte ptr [esi], 6eh
inc     esi
inc     ebx
jmp     short loc_41f68d
cmp     cl, 9
jnz     short loc_41f6e0
mov     byte ptr [esi], 5ch
inc     esi
mov     byte ptr [esi], 74h
inc     esi
inc     ebx
jmp     short loc_41f68d
mov     [esi], cl
inc     esi
jmp     short loc_41f68d
mov     byte ptr [esi], 5ch
inc     esi
mov     [esi], cl
inc     esi
inc     ebx
jmp     short loc_41f68d
xor     eax, eax
pop     ebp
pop     edi
mov     byte ptr [esi], 22h
mov     byte ptr [esi+1], 0
pop     esi
pop     ebx
add     esp, 24h
retn
mov     eax, 0fffffffbh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     edi, [esp+34h+arg_8]
mov     eax, [edi]
mov     esi, [esp+34h+lpstring1]
mov     ecx, [eax]
mov     eax, [esp+34h+arg_0]
mov     dword ptr [esp+34h+buffer+2], ecx
add     dword ptr [edi], 5
lea     ecx, [esp+34h+buffer+2]
push    ecx
push    19ah
push    esi
push    eax
call    sub_41bed0
add     esp, 10h
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     edi, [esp+34h+arg_8]
mov     ecx, [edi]
mov     cl, [ecx]
cmp     cl, 3bh
jnz     short loc_41f765
mov     esi, [esp+34h+lpstring1]
mov     eax, 1
inc     esi
mov     byte ptr [esi-1], 2dh
mov     byte ptr [esi], 2dh
inc     esi
add     [edi], eax
jmp     short loc_41f78b
mov     esi, [esp+34h+lpstring1]
cmp     cl, 0ach
jnz     short loc_41f78b
mov     byte ptr [esi], 0ach
inc     esi
inc     esi
xor     eax, eax
pop     ebp
mov     byte ptr [esi-1], 0dh
mov     byte ptr [esi], 0ah
mov     byte ptr [esi+1], 0
add     dword ptr [edi], 2
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     ecx, [edi]
mov     cl, [ecx]
mov     [esi], cl
cmp     cl, dl
jz      short loc_41f7b0
inc     esi
mov     ecx, eax
inc     eax
inc     dword ptr [edi]
cmp     ecx, 19ah
jle     short loc_41f78b
mov     eax, 0fffffffbh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
xor     eax, eax
pop     ebp
inc     dword ptr [edi]
pop     edi
mov     byte ptr [esi], 0
pop     esi
pop     ebx
add     esp, 24h
retn
mov     edi, [esp+34h+arg_8]
mov     esi, [esp+34h+lpstring1]
mov     eax, [edi]
mov     ax, [eax]
mov     word ptr [esp+34h+buffer], ax
add     dword ptr [edi], 3
lea     eax, [esp+34h+buffer]
push    eax
push    esi
call    sub_421c80
add     esp, 8
test    eax, eax
jz      loc_41f8a1
lea     eax, [esp+34h+buffer]
mov     ecx, [esp+34h+arg_0]
push    eax
push    esi
push    ecx
call    sub_488140
add     esp, 0ch
test    eax, eax
jz      loc_41f8a1
lea     eax, [esp+34h+buffer+2]
push    13h
push    1e10h
push    20h
push    eax
call    sub_47fe70
lea     eax, [esp+44h+buffer+2]
add     esp, 10h
push    eax
push    esi
call    ds:lstrcpya
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
cmp     ds:byte_4a8542, 0
jz      short loc_41f8a1
mov     al, ds:byte_4a8542
mov     esi, [esp+34h+lpstring1]
pop     ebp
pop     edi
mov     [esi], al
xor     eax, eax
mov     byte ptr [esi+1], 0
pop     esi
pop     ebx
add     esp, 24h
retn
mov     edi, [esp+34h+arg_8]
mov     esi, [esp+34h+lpstring1]
xor     ebx, ebx
mov     ebp, esi
mov     ecx, [edi]
inc     esi
mov     cl, [ecx]
mov     [ebp+0], cl
inc     dword ptr [edi]
cmp     [ebp+0], dl
jz      short loc_41f89d
cmp     byte ptr [esi-1], 2eh
jnz     short loc_41f885
cmp     ds:byte_4a8540, bl
jz      short loc_41f885
mov     cl, ds:byte_4a8540
mov     [esi-1], cl
mov     ecx, eax
inc     eax
cmp     ecx, 19ah
jle     short loc_41f85d
mov     eax, 0fffffffbh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     byte ptr [esi-1], 0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
sub     esp, 1a4h
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
xor     edi, edi
mov     ebp, 1
mov     esi, [esp+1b4h+lpstring]
push    esi
call    ds:lstrlena
mov     ecx, [esp+1b4h+arg_c]
mov     [esp+1b4h+var_1a4], eax
mov     eax, [esp+1b4h+arg_8]
mov     [esp+1b4h+string], bl
mov     [esp+1b4h+var_1a0], eax
cmp     [ecx], ebx
jl      loc_41fa09
test    ebp, ebp
jz      loc_41fa0d
add     edi, ebx
mov     eax, [esp+1b4h+var_1a4]
cmp     eax, edi
jl      short loc_41f957
mov     eax, edi
mov     edi, eax
lea     ecx, [esp+1b4h+string]
mov     eax, [esp+1b4h+var_1a0]
push    ecx
movsx   ebp, byte ptr [eax]
lea     eax, [esp+1b8h+var_1a0]
mov     edx, [esp+1b8h+arg_0]
inc     [esp+1b8h+var_1a0]
push    eax
push    ebp
push    edx
call    sub_41f610
lea     ecx, [esp+1c4h+string]
add     esp, 10h
push    ecx
call    ds:lstrlena
mov     ebx, eax
cmp     ebp, 17h
jnz     short loc_41f9a4
cmp     byte ptr [edi+esi], 0
jz      short loc_41f9a4
cmp     byte ptr [edi+esi], 0dh
jz      short loc_41f9a4
inc     edi
cmp     byte ptr [edi+esi], 0
jnz     short loc_41f997
cmp     ebp, 10h
jnz     short loc_41f9b5
mov     al, [edi+esi]
test    al, al
jz      short loc_41f9b5
cmp     al, 3ah
jz      short loc_41f9b5
dec     ebx
cmp     ebp, 12h
jnz     short loc_41f9ef
mov     ecx, 1
mov     al, [esp+1b4h+var_19b]
cmp     al, 22h
jz      short loc_41f9ef
lea     edx, [ecx+edi+1]
inc     ecx
cmp     edx, [esp+1b4h+var_1a4]
jge     short loc_41f9e7
cmp     al, 5ch
jnz     short loc_41f9e7
cmp     [esp+ecx+1b4h+string], 5ch
jnz     short loc_41f9e7
lea     eax, [edi+esi]
cmp     byte ptr [eax+ecx], 5ch
jz      short loc_41f9e7
dec     ebx
mov     al, [esp+ecx+1b4h+string]
cmp     al, 22h
jnz     short loc_41f9c7
mov     ecx, [esp+1b4h+var_1a0]
mov     eax, [esp+1b4h+arg_c]
sub     ecx, [esp+1b4h+arg_8]
cmp     ecx, [eax]
jle     loc_41f943
test    ebp, ebp
jnz     short loc_41fa32
mov     eax, [esp+1b4h+arg_c]
mov     ecx, [esp+1b4h+arg_10]
mov     edx, [esp+1b4h+var_1a4]
pop     ebp
pop     edi
mov     dword ptr [eax], 0
pop     esi
mov     [ecx], edx
pop     ebx
add     esp, 1a4h
retn
mov     eax, [esp+1b4h+arg_c]
mov     ecx, [esp+1b4h+arg_10]
pop     ebp
mov     [eax], edi
pop     edi
mov     [ecx], ebx
pop     esi
pop     ebx
add     esp, 1a4h
retn
sub     esp, 86ch
mov     [esp+86ch+var_86c], offset sub_479e20
push    ebx
mov     eax, 3
push    esi
mov     ebx, 1
push    edi
mov     ecx, 2
mov     [esp+878h+var_868], bl
push    ebp
mov     [esp+87ch+var_867], al
mov     [esp+87ch+var_866], cl
mov     [esp+87ch+var_85d], bl
mov     [esp+87ch+var_85c], bl
mov     [esp+87ch+var_865], offset an
mov     [esp+87ch+var_85b], cl
mov     [esp+87ch+var_852], bl
mov     [esp+87ch+var_851], cl
mov     [esp+87ch+var_850], cl
mov     [esp+87ch+var_861], offset loc_479e70
mov     [esp+87ch+var_85a], offset an
mov     [esp+87ch+var_847], bl
mov     [esp+87ch+var_846], cl
mov     [esp+87ch+var_856], offset sub_479e90
mov     [esp+87ch+var_84f], offset ar
mov     [esp+87ch+var_845], cl
mov     [esp+87ch+var_83c], bl
mov     [esp+87ch+var_83b], cl
mov     [esp+87ch+var_83a], cl
mov     [esp+87ch+var_84b], offset loc_479eb0
mov     [esp+87ch+var_844], offset ar
mov     [esp+87ch+var_831], bl
mov     [esp+87ch+var_830], cl
mov     [esp+87ch+var_840], offset sub_479ec0
mov     [esp+87ch+var_839], offset ar
mov     [esp+87ch+var_82f], cl
mov     [esp+87ch+var_826], bl
mov     [esp+87ch+var_825], cl
mov     [esp+87ch+var_824], cl
mov     [esp+87ch+var_835], offset sub_479ed0
mov     [esp+87ch+var_82e], offset ar
mov     [esp+87ch+var_81b], bl
mov     [esp+87ch+var_81a], cl
mov     [esp+87ch+var_82a], offset loc_479ef0
mov     [esp+87ch+var_823], offset ar
mov     [esp+87ch+var_819], cl
mov     [esp+87ch+var_810], bl
mov     [esp+87ch+var_80f], cl
mov     [esp+87ch+var_80e], cl
mov     [esp+87ch+var_81f], offset loc_479f10
mov     [esp+87ch+var_818], offset ar
mov     [esp+87ch+var_805], bl
mov     [esp+87ch+var_804], cl
mov     [esp+87ch+var_814], offset loc_479f20
mov     [esp+87ch+var_80d], offset ar
mov     [esp+87ch+var_803], cl
mov     [esp+87ch+var_7fa], bl
mov     [esp+87ch+var_809], offset sub_479f40
mov     [esp+87ch+var_802], offset ar
mov     [esp+87ch+var_7fe], offset loc_479f50
mov     [esp+87ch+var_7f9], bl
mov     [esp+87ch+var_7f8], cl
mov     [esp+87ch+var_7ef], bl
mov     [esp+87ch+var_7ee], cl
mov     [esp+87ch+var_7ed], cl
mov     [esp+87ch+var_7f7], offset an
xor     edx, edx
mov     [esp+87ch+var_7e4], cl
mov     [esp+87ch+var_7e3], dl
mov     [esp+87ch+var_7e2], cl
mov     [esp+87ch+var_7f3], offset sub_479fa0
mov     [esp+87ch+var_7ec], offset ar
mov     [esp+87ch+var_7d9], bl
mov     [esp+87ch+var_7d8], cl
mov     [esp+87ch+var_7e8], offset sub_47a970
mov     [esp+87ch+var_7e1], offset asll
mov     [esp+87ch+var_7d7], cl
mov     [esp+87ch+var_7ce], bl
mov     [esp+87ch+var_7cd], al
mov     [esp+87ch+var_7cc], cl
mov     [esp+87ch+var_7dd], offset sub_479fb0
mov     [esp+87ch+var_7d6], offset arl
mov     [esp+87ch+var_7d2], offset sub_47a060
mov     [esp+87ch+var_7c2], bl
mov     [esp+87ch+var_7c1], cl
mov     [esp+87ch+var_7cb], offset ann
mov     esi, offset aa
mov     [esp+87ch+var_7b8], al
mov     [esp+87ch+var_7c0], esi
mov     [esp+87ch+var_7b7], bl
mov     ebp, offset asc_4ad6d4
mov     [esp+87ch+var_7b6], cl
mov     [esp+87ch+var_7c7], offset sub_421fe0
mov     [esp+87ch+var_7b5], ebp
mov     [esp+87ch+var_7ad], al
mov     [esp+87ch+var_7ac], bl
mov     [esp+87ch+var_7ab], cl
mov     [esp+87ch+var_7c3], 63h
mov     [esp+87ch+var_7bc], offset sub_40d130
mov     edi, offset windowname
mov     [esp+87ch+var_7a1], bl
mov     [esp+87ch+var_7aa], edi
mov     [esp+87ch+var_7a0], bl
mov     [esp+87ch+var_7b1], offset sub_477620
mov     [esp+87ch+var_7a6], offset sub_458060
mov     [esp+87ch+var_797], cl
mov     [esp+87ch+var_796], dl
mov     [esp+87ch+var_7a2], 5
mov     [esp+87ch+var_79f], offset asss_0
mov     [esp+87ch+var_795], cl
mov     [esp+87ch+var_78c], cl
mov     [esp+87ch+var_78b], dl
mov     [esp+87ch+var_78a], cl
mov     [esp+87ch+var_79b], offset sub_47aa10
mov     [esp+87ch+var_794], offset as_2
mov     [esp+87ch+var_781], cl
mov     [esp+87ch+var_780], bl
mov     [esp+87ch+var_790], offset sub_47aa30
mov     [esp+87ch+var_789], offset as_2
mov     [esp+87ch+var_785], offset sub_47aaa0
mov     [esp+87ch+var_77f], cl
mov     [esp+87ch+var_77e], offset as_2
mov     [esp+87ch+var_776], cl
mov     [esp+87ch+var_775], dl
mov     [esp+87ch+var_774], cl
mov     [esp+87ch+var_76b], cl
mov     [esp+87ch+var_76a], dl
mov     [esp+87ch+var_769], cl
mov     [esp+87ch+var_77a], offset sub_47aad0
mov     [esp+87ch+var_773], offset ass_0
mov     [esp+87ch+var_760], cl
mov     [esp+87ch+var_75f], dl
mov     [esp+87ch+var_76f], offset sub_47ab90
mov     [esp+87ch+var_768], offset ass_0
mov     [esp+87ch+var_75e], cl
mov     [esp+87ch+var_755], cl
mov     [esp+87ch+var_754], bl
mov     [esp+87ch+var_753], cl
mov     [esp+87ch+var_764], offset sub_47ac80
mov     [esp+87ch+var_75d], offset asl_0
mov     [esp+87ch+var_74a], cl
mov     [esp+87ch+var_749], bl
mov     [esp+87ch+var_759], offset sub_47ad30
mov     [esp+87ch+var_752], offset ass_0
mov     [esp+87ch+var_748], cl
mov     [esp+87ch+var_73f], cl
mov     [esp+87ch+var_73e], dl
mov     [esp+87ch+var_73d], cl
mov     [esp+87ch+var_74e], offset sub_47adc0
mov     [esp+87ch+var_747], offset ass_0
mov     [esp+87ch+var_734], cl
mov     [esp+87ch+var_733], dl
mov     [esp+87ch+var_743], offset sub_47b0b0
mov     [esp+87ch+var_73c], offset asss
mov     [esp+87ch+var_732], cl
mov     [esp+87ch+var_729], cl
mov     [esp+87ch+var_728], bl
mov     [esp+87ch+var_727], cl
mov     [esp+87ch+var_738], offset sub_47b0d0
mov     [esp+87ch+var_731], offset asss
mov     [esp+87ch+var_71e], cl
mov     [esp+87ch+var_71d], dl
mov     [esp+87ch+var_72d], offset sub_47b0f0
mov     [esp+87ch+var_726], offset as_2
mov     [esp+87ch+var_71c], cl
mov     [esp+87ch+var_713], cl
mov     [esp+87ch+var_712], bl
mov     [esp+87ch+var_711], cl
mov     [esp+87ch+var_722], offset sub_47b120
mov     [esp+87ch+var_71b], offset als
mov     [esp+87ch+var_708], cl
mov     [esp+87ch+var_707], al
mov     [esp+87ch+var_717], offset sub_47b1d0
mov     [esp+87ch+var_710], offset as_2
mov     [esp+87ch+var_70c], offset sub_47b260
mov     [esp+87ch+var_706], cl
mov     [esp+87ch+var_6fc], dl
mov     [esp+87ch+var_6fb], cl
mov     [esp+87ch+var_6fa], ebp
mov     [esp+87ch+var_705], offset als
mov     [esp+87ch+var_701], offset sub_47bd90
mov     [esp+87ch+var_6fd], 4
mov     [esp+87ch+var_6f6], offset sub_47bdf0
mov     [esp+87ch+var_6f1], dl
mov     [esp+87ch+var_6f0], cl
mov     [esp+87ch+var_6ef], ebp
mov     [esp+87ch+var_6e6], bl
mov     [esp+87ch+var_6e5], cl
mov     [esp+87ch+var_6e4], ebp
mov     [esp+87ch+var_6f2], 4
mov     [esp+87ch+var_6eb], offset sub_47be50
mov     [esp+87ch+var_6db], bl
mov     [esp+87ch+var_6da], cl
mov     [esp+87ch+var_6e7], 4
mov     [esp+87ch+var_6e0], offset loc_47be90
mov     [esp+87ch+var_6d9], ebp
mov     [esp+87ch+var_6d0], bl
mov     [esp+87ch+var_6cf], cl
mov     [esp+87ch+var_6ce], ebp
mov     [esp+87ch+var_6dc], 4
mov     [esp+87ch+var_6d5], offset loc_47bed0
mov     [esp+87ch+var_6c5], dl
mov     [esp+87ch+var_6c4], cl
mov     [esp+87ch+var_6d1], 4
mov     [esp+87ch+var_6ca], offset sub_47bf10
mov     [esp+87ch+var_6c3], ebp
mov     [esp+87ch+var_6ba], dl
mov     [esp+87ch+var_6b9], cl
mov     [esp+87ch+var_6b8], ebp
mov     [esp+87ch+var_6c6], 4
mov     [esp+87ch+var_6bf], offset sub_47bf70
mov     [esp+87ch+var_6af], bl
mov     [esp+87ch+var_6ae], cl
mov     [esp+87ch+var_6bb], 4
mov     [esp+87ch+var_6b4], offset sub_47bfd0
mov     [esp+87ch+var_6a5], al
mov     [esp+87ch+var_6a4], bl
mov     [esp+87ch+var_6b0], 4
mov     [esp+87ch+var_6ad], offset alll
mov     [esp+87ch+var_6a3], cl
mov     [esp+87ch+var_69a], bl
mov     [esp+87ch+var_699], al
mov     [esp+87ch+var_698], cl
mov     [esp+87ch+var_6a9], offset sub_4786d0
mov     [esp+87ch+var_6a2], offset all_0
mov     [esp+87ch+var_68f], al
mov     [esp+87ch+var_68e], bl
mov     [esp+87ch+var_69e], offset sub_47a120
mov     [esp+87ch+var_697], offset arrr
mov     [esp+87ch+var_68d], bl
mov     [esp+87ch+var_684], al
mov     [esp+87ch+var_683], bl
mov     [esp+87ch+var_682], cl
mov     [esp+87ch+var_693], offset loc_479820
mov     [esp+87ch+var_68c], offset asc_4ad6ac
mov     [esp+87ch+var_681], edi
mov     [esp+87ch+var_678], bl
mov     [esp+87ch+var_677], cl
mov     [esp+87ch+var_676], edi
mov     [esp+87ch+var_688], offset sub_421fe0
mov     [esp+87ch+var_67d], offset sub_421fe0
mov     [esp+87ch+var_679], 63h
mov     [esp+87ch+var_672], offset sub_421fe0
mov     [esp+87ch+var_66e], 63h
mov     [esp+87ch+var_66d], bl
mov     [esp+87ch+var_66c], cl
mov     [esp+87ch+var_66b], edi
mov     [esp+87ch+var_662], bl
mov     [esp+87ch+var_661], cl
mov     [esp+87ch+var_660], edi
mov     [esp+87ch+var_667], offset sub_421fe0
mov     [esp+87ch+var_657], bl
mov     [esp+87ch+var_656], cl
mov     [esp+87ch+var_663], 63h
mov     [esp+87ch+var_65c], offset sub_421fe0
mov     [esp+87ch+var_655], edi
mov     [esp+87ch+var_64c], bl
mov     [esp+87ch+var_64b], cl
mov     [esp+87ch+var_64a], edi
mov     [esp+87ch+var_658], 63h
mov     [esp+87ch+var_651], offset sub_421fe0
mov     [esp+87ch+var_641], dl
mov     [esp+87ch+var_640], cl
mov     [esp+87ch+var_64d], 63h
mov     [esp+87ch+var_63f], ebp
mov     [esp+87ch+var_637], al
mov     [esp+87ch+var_636], bl
mov     [esp+87ch+var_635], cl
mov     [esp+87ch+var_646], offset sub_479110
mov     [esp+87ch+var_642], 0ah
mov     [esp+87ch+var_634], edi
mov     [esp+87ch+var_62b], bl
mov     [esp+87ch+var_63b], offset loc_477450
mov     [esp+87ch+var_630], offset loc_479360
mov     [esp+87ch+var_62c], 5
mov     [esp+87ch+var_62a], bl
mov     [esp+87ch+var_620], bl
mov     [esp+87ch+var_629], offset asss_0
mov     [esp+87ch+var_625], offset loc_478610
mov     [esp+87ch+var_61f], bl
mov     [esp+87ch+var_616], cl
mov     [esp+87ch+var_621], 7
mov     [esp+87ch+var_61e], offset alllll
mov     [esp+87ch+var_61a], offset sub_476560
mov     [esp+87ch+var_614], cl
mov     [esp+87ch+var_60b], al
mov     [esp+87ch+var_60a], bl
mov     [esp+87ch+var_609], cl
mov     [esp+87ch+var_615], 6
mov     [esp+87ch+var_613], offset asss_0
mov     [esp+87ch+var_600], al
mov     [esp+87ch+var_5ff], bl
mov     [esp+87ch+var_5fe], bl
mov     [esp+87ch+var_5fd], edi
mov     [esp+87ch+var_60f], offset sub_4774f0
mov     [esp+87ch+var_5f5], al
mov     [esp+87ch+var_5f4], bl
mov     [esp+87ch+var_608], offset as_2
mov     [esp+87ch+var_604], offset sub_4774c0
mov     [esp+87ch+var_5f3], bl
mov     [esp+87ch+var_5ea], bl
mov     [esp+87ch+var_5f9], offset sub_479840
mov     [esp+87ch+var_5f2], offset asc_4ad6ac
mov     [esp+87ch+var_5ee], offset sub_442d10
mov     [esp+87ch+var_5e9], 6
mov     [esp+87ch+var_5e8], cl
mov     [esp+87ch+var_5e7], ebp
mov     [esp+87ch+var_5df], bl
mov     [esp+87ch+var_5dd], cl
mov     [esp+87ch+var_5e3], offset sub_442c00
mov     [esp+87ch+var_5de], 6
mov     [esp+87ch+var_5d3], bl
mov     [esp+87ch+var_5d2], bl
mov     [esp+87ch+var_5dc], offset ala
mov     [esp+87ch+var_5d8], offset sub_476cb0
mov     [esp+87ch+var_5d4], 8
mov     [esp+87ch+var_5c8], dl
mov     [esp+87ch+var_5c7], bl
mov     [esp+87ch+var_5d1], offset ass_0
mov     [esp+87ch+var_5cd], offset sub_4767b0
mov     [esp+87ch+var_5be], cl
mov     [esp+87ch+var_5bd], dl
mov     [esp+87ch+var_5c9], 8
mov     [esp+87ch+var_5c6], offset as_2
mov     [esp+87ch+var_5c2], offset sub_47b2b0
mov     [esp+87ch+var_5bc], cl
mov     [esp+87ch+var_5b2], bl
mov     [esp+87ch+var_5b1], cl
mov     [esp+87ch+var_5b0], ebp
mov     [esp+87ch+var_5bb], offset as_2
mov     [esp+87ch+var_5b7], offset sub_48aaf0
mov     [esp+87ch+var_5a7], bl
mov     [esp+87ch+var_5a6], cl
mov     [esp+87ch+var_5b3], 6
mov     [esp+87ch+var_5ac], offset sub_48ab20
mov     [esp+87ch+var_5a8], 6
mov     [esp+87ch+var_59c], bl
mov     [esp+87ch+var_59b], cl
mov     [esp+87ch+var_5a5], offset all_0
mov     [esp+87ch+var_5a1], offset sub_48ab60
mov     [esp+87ch+var_59a], ebp
mov     [esp+87ch+var_591], bl
mov     [esp+87ch+var_59d], 6
mov     [esp+87ch+var_596], offset loc_478650
mov     [esp+87ch+var_592], 7
mov     [esp+87ch+var_590], bl
mov     [esp+87ch+var_586], bl
mov     [esp+87ch+var_58f], offset alllll
mov     [esp+87ch+var_58b], offset loc_478690
mov     [esp+87ch+var_585], bl
mov     [esp+87ch+var_57c], cl
mov     [esp+87ch+var_587], 7
mov     [esp+87ch+var_584], offset alllll
mov     [esp+87ch+var_580], offset sub_476510
mov     [esp+87ch+var_57a], cl
mov     [esp+87ch+var_571], al
mov     [esp+87ch+var_570], bl
mov     [esp+87ch+var_56f], bl
mov     [esp+87ch+var_57b], 6
mov     [esp+87ch+var_579], offset asss_0
mov     [esp+87ch+var_566], al
mov     [esp+87ch+var_565], bl
mov     [esp+87ch+var_575], offset sub_4776b0
mov     [esp+87ch+var_56e], offset avvvvvvvvvv
mov     [esp+87ch+var_56a], offset loc_40d110
mov     [esp+87ch+var_564], cl
mov     [esp+87ch+var_563], ebp
mov     [esp+87ch+var_55a], dl
mov     [esp+87ch+var_559], cl
mov     [esp+87ch+var_558], edi
mov     [esp+87ch+var_550], cl
mov     [esp+87ch+var_54f], dl
mov     [esp+87ch+var_55f], offset sub_477750
mov     [esp+87ch+var_55b], 0dh
mov     [esp+87ch+var_54e], cl
mov     [esp+87ch+var_545], cl
mov     [esp+87ch+var_544], dl
mov     [esp+87ch+var_543], cl
mov     [esp+87ch+var_554], offset sub_47b3c0
mov     [esp+87ch+var_54d], offset asl
mov     [esp+87ch+var_549], offset sub_47b490
mov     [esp+87ch+var_539], bl
mov     [esp+87ch+var_538], cl
mov     [esp+87ch+var_542], offset aslls
mov     [esp+87ch+var_53e], offset sub_479860
mov     [esp+87ch+var_53a], 0ah
mov     [esp+87ch+var_52e], bl
mov     [esp+87ch+var_52d], cl
mov     [esp+87ch+var_537], offset all
mov     [esp+87ch+var_533], offset sub_477900
mov     [esp+87ch+var_524], cl
mov     [esp+87ch+var_523], dl
mov     [esp+87ch+var_52f], 7
mov     [esp+87ch+var_52c], offset all_0
mov     [esp+87ch+var_522], cl
mov     [esp+87ch+var_519], cl
mov     [esp+87ch+var_518], dl
mov     [esp+87ch+var_517], cl
mov     [esp+87ch+var_528], offset sub_47b5a0
mov     [esp+87ch+var_521], offset aslls
mov     [esp+87ch+var_50e], cl
mov     [esp+87ch+var_50d], dl
mov     [esp+87ch+var_51d], offset sub_47b630
mov     [esp+87ch+var_516], offset aslss
mov     [esp+87ch+var_50c], cl
mov     [esp+87ch+var_503], al
mov     [esp+87ch+var_502], bl
mov     [esp+87ch+var_501], bl
mov     [esp+87ch+var_512], offset sub_47b7b0
mov     [esp+87ch+var_50b], offset aslss
mov     [esp+87ch+var_500], edi
mov     [esp+87ch+var_4f7], bl
mov     [esp+87ch+var_507], offset loc_477ac0
mov     [esp+87ch+var_4fc], offset sub_479290
mov     [esp+87ch+var_4f8], 0ah
mov     [esp+87ch+var_4f6], cl
mov     [esp+87ch+var_4ec], bl
mov     [esp+87ch+var_4f5], offset asc_4ad6ac
mov     [esp+87ch+var_4f1], offset loc_478630
mov     [esp+87ch+var_4ed], 7
mov     [esp+87ch+var_4eb], bl
mov     [esp+87ch+var_4e1], bl
mov     [esp+87ch+var_4ea], offset alllll_0
mov     [esp+87ch+var_4e6], offset loc_478670
mov     [esp+87ch+var_4e2], 7
mov     [esp+87ch+var_4e0], bl
mov     [esp+87ch+var_4df], offset alllll_0
mov     [esp+87ch+var_4d6], bl
mov     [esp+87ch+var_4d5], bl
mov     [esp+87ch+var_4db], offset loc_4786b0
mov     [esp+87ch+var_4d7], 7
mov     [esp+87ch+var_4cb], bl
mov     [esp+87ch+var_4ca], bl
mov     [esp+87ch+var_4d4], offset alllll_0
mov     [esp+87ch+var_4d0], offset sub_476c90
mov     [esp+87ch+var_4cc], 8
mov     [esp+87ch+var_4c0], bl
mov     [esp+87ch+var_4bf], cl
mov     [esp+87ch+var_4c9], offset ass_0
mov     [esp+87ch+var_4c5], offset sub_421fe0
mov     [esp+87ch+var_4be], esi
mov     [esp+87ch+var_4b5], bl
mov     [esp+87ch+var_4b4], cl
mov     [esp+87ch+var_4b3], esi
mov     [esp+87ch+var_4c1], 63h
mov     [esp+87ch+var_4ba], offset sub_421fe0
mov     [esp+87ch+var_4aa], bl
mov     [esp+87ch+var_4a9], cl
mov     [esp+87ch+var_4b6], 63h
mov     [esp+87ch+var_4af], offset sub_48ac00
mov     [esp+87ch+var_4ab], 6
mov     [esp+87ch+var_49f], bl
mov     [esp+87ch+var_49e], bl
mov     [esp+87ch+var_4a8], offset asl_0
mov     [esp+87ch+var_4a4], offset sub_479380
mov     [esp+87ch+var_4a0], 5
mov     [esp+87ch+var_494], bl
mov     [esp+87ch+var_493], bl
mov     [esp+87ch+var_49d], offset asss_0
mov     [esp+87ch+var_499], offset sub_458040
mov     [esp+87ch+var_495], 5
mov     [esp+87ch+var_489], bl
mov     [esp+87ch+var_488], bl
mov     [esp+87ch+var_492], offset asss_0
mov     [esp+87ch+var_487], ebp
mov     [esp+87ch+var_47f], al
mov     [esp+87ch+var_47e], bl
mov     [esp+87ch+var_47d], bl
mov     [esp+87ch+var_48e], offset sub_477460
mov     [esp+87ch+var_48a], 5
mov     [esp+87ch+var_474], al
mov     [esp+87ch+var_473], bl
mov     [esp+87ch+var_483], offset sub_477540
mov     [esp+87ch+var_47c], offset all_0
mov     [esp+87ch+var_472], bl
mov     [esp+87ch+var_469], cl
mov     [esp+87ch+var_468], bl
mov     [esp+87ch+var_467], cl
mov     [esp+87ch+var_478], offset sub_477580
mov     [esp+87ch+var_471], offset all_0
mov     [esp+87ch+var_45e], bl
mov     [esp+87ch+var_45d], cl
mov     [esp+87ch+var_46d], offset sub_47b820
mov     [esp+87ch+var_466], offset ass
mov     [esp+87ch+var_462], offset sub_47a340
mov     [esp+87ch+var_45b], offset ar
mov     [esp+87ch+var_45c], cl
mov     [esp+87ch+var_457], offset loc_47a350
mov     [esp+87ch+var_453], bl
mov     [esp+87ch+var_452], cl
mov     [esp+87ch+var_451], cl
mov     [esp+87ch+var_447], bl
mov     [esp+87ch+var_450], offset ar
mov     [esp+87ch+var_44c], offset sub_476cd0
mov     [esp+87ch+var_448], 8
mov     [esp+87ch+var_446], cl
mov     [esp+87ch+var_43c], bl
mov     [esp+87ch+var_445], offset asl
mov     [esp+87ch+var_441], offset sub_476740
mov     [esp+87ch+var_43b], cl
mov     [esp+87ch+var_432], al
mov     [esp+87ch+var_431], bl
mov     [esp+87ch+var_430], cl
mov     [esp+87ch+var_43d], 8
mov     [esp+87ch+var_43a], offset as_2
mov     [esp+87ch+var_436], offset sub_477a50
mov     [esp+87ch+var_426], dl
mov     [esp+87ch+var_425], cl
mov     [esp+87ch+var_42f], offset asc_4ad6ac
mov     [esp+87ch+var_42b], offset sub_476e20
mov     [esp+87ch+var_427], 8
mov     [esp+87ch+var_41b], bl
mov     [esp+87ch+var_41a], cl
mov     [esp+87ch+var_424], offset ass
mov     [esp+87ch+var_420], offset sub_477100
mov     [esp+87ch+var_411], al
mov     [esp+87ch+var_410], bl
mov     [esp+87ch+var_40f], cl
mov     [esp+87ch+var_40e], edi
mov     [esp+87ch+var_41c], 8
mov     [esp+87ch+var_406], al
mov     [esp+87ch+var_405], bl
mov     [esp+87ch+var_404], cl
mov     [esp+87ch+var_403], edi
mov     [esp+87ch+var_419], offset as_2
mov     [esp+87ch+var_3fb], al
mov     [esp+87ch+var_3fa], bl
mov     [esp+87ch+var_3f9], cl
mov     [esp+87ch+var_3f8], edi
mov     [esp+87ch+var_415], offset sub_440f40
mov     [esp+87ch+var_40a], offset sub_440f90
mov     [esp+87ch+var_3ef], dl
mov     [esp+87ch+var_3ee], cl
mov     [esp+87ch+var_3ff], offset sub_441000
mov     [esp+87ch+var_3f4], offset sub_4789e0
mov     [esp+87ch+var_3f0], 63h
mov     [esp+87ch+var_3e4], bl
mov     [esp+87ch+var_3e3], cl
mov     [esp+87ch+var_3ed], offset ar
mov     [esp+87ch+var_3e9], offset sub_47c190
mov     [esp+87ch+var_3e5], 5
mov     [esp+87ch+var_3d9], bl
mov     [esp+87ch+var_3d8], cl
mov     [esp+87ch+var_3e2], offset asc_4ad6ac
mov     [esp+87ch+var_3de], offset sub_479710
mov     [esp+87ch+var_3da], 5
mov     [esp+87ch+var_3d7], offset as_1
mov     [esp+87ch+var_3d3], offset sub_479620
mov     [esp+87ch+var_3cf], 5
mov     [esp+87ch+var_3ce], dl
mov     [esp+87ch+var_3cd], cl
mov     [esp+87ch+var_3c4], al
mov     [esp+87ch+var_3c3], bl
mov     [esp+87ch+var_3c2], bl
mov     [esp+87ch+var_3c1], ebp
mov     [esp+87ch+var_3cc], offset as_1
mov     [esp+87ch+var_3b8], bl
mov     [esp+87ch+var_3b7], cl
mov     [esp+87ch+var_3c8], offset sub_477650
mov     [esp+87ch+var_3bd], offset sub_421fe0
mov     [esp+87ch+var_3b6], esi
mov     [esp+87ch+var_3ad], bl
mov     [esp+87ch+var_3ac], bl
mov     [esp+87ch+var_3ab], ebp
mov     [esp+87ch+var_3b9], 63h
mov     [esp+87ch+var_3a3], al
mov     [esp+87ch+var_3a2], bl
mov     [esp+87ch+var_3a1], bl
mov     [esp+87ch+var_3a0], ebp
mov     [esp+87ch+var_3b2], offset sub_478d60
mov     [esp+87ch+var_398], al
mov     [esp+87ch+var_397], bl
mov     [esp+87ch+var_396], cl
mov     [esp+87ch+var_395], edi
mov     [esp+87ch+var_3ae], 0ah
mov     [esp+87ch+var_3a7], offset sub_477610
mov     [esp+87ch+var_38c], bl
mov     [esp+87ch+var_38b], bl
mov     [esp+87ch+var_39c], offset sub_477af0
mov     [esp+87ch+var_391], offset sub_478e80
mov     [esp+87ch+var_38a], edi
mov     [esp+87ch+var_381], bl
mov     [esp+87ch+var_380], cl
mov     [esp+87ch+var_37f], esi
mov     [esp+87ch+var_38d], 0ah
mov     [esp+87ch+var_386], offset sub_421fe0
mov     [esp+87ch+var_376], dl
mov     [esp+87ch+var_375], cl
mov     [esp+87ch+var_382], 63h
mov     [esp+87ch+var_37b], offset sub_478f30
mov     [esp+87ch+var_377], 0ah
mov     [esp+87ch+var_36b], bl
mov     [esp+87ch+var_36a], bl
mov     [esp+87ch+var_374], offset all_1
mov     [esp+87ch+var_370], offset sub_478e90
mov     [esp+87ch+var_369], ebp
mov     [esp+87ch+var_360], bl
mov     [esp+87ch+var_36c], 0ah
mov     [esp+87ch+var_365], offset sub_458080
mov     [esp+87ch+var_35f], bl
mov     [esp+87ch+var_356], cl
mov     [esp+87ch+var_355], dl
mov     [esp+87ch+var_354], cl
mov     [esp+87ch+var_361], 5
mov     [esp+87ch+var_35e], offset asss_0
mov     [esp+87ch+var_35a], offset sub_47b6d0
mov     [esp+87ch+var_353], offset aslls_0
mov     [esp+87ch+var_34f], offset sub_479160
mov     [esp+87ch+var_34b], 0ah
mov     [esp+87ch+var_34a], bl
mov     [esp+87ch+var_349], cl
mov     [esp+87ch+var_340], al
mov     [esp+87ch+var_33f], bl
mov     [esp+87ch+var_33e], cl
mov     [esp+87ch+var_348], offset all
mov     [esp+87ch+var_335], al
mov     [esp+87ch+var_334], bl
mov     [esp+87ch+var_344], offset sub_47c080
mov     [esp+87ch+var_33d], offset asc_4ad6ac
mov     [esp+87ch+var_339], offset sub_47c100
mov     [esp+87ch+var_333], cl
mov     [esp+87ch+var_329], bl
mov     [esp+87ch+var_332], offset ar
mov     [esp+87ch+var_32e], offset sub_477810
mov     [esp+87ch+var_32a], 0dh
mov     [esp+87ch+var_328], cl
mov     [esp+87ch+var_31e], dl
mov     [esp+87ch+var_327], offset asss
mov     [esp+87ch+var_323], offset sub_477780
mov     [esp+87ch+var_31f], 0dh
mov     [esp+87ch+var_31d], cl
mov     [esp+87ch+var_313], bl
mov     [esp+87ch+var_31c], offset ass_0
mov     [esp+87ch+var_318], offset sub_4778b0
mov     [esp+87ch+var_314], 0dh
mov     [esp+87ch+var_312], cl
mov     [esp+87ch+var_308], bl
mov     [esp+87ch+var_307], cl
mov     [esp+87ch+var_306], esi
mov     [esp+87ch+var_311], offset as_2
mov     [esp+87ch+var_30d], offset sub_421fe0
mov     [esp+87ch+var_309], 61h
mov     [esp+87ch+var_302], offset sub_475bb0
mov     [esp+87ch+var_2fe], 63h
mov     [esp+87ch+var_2fd], 6
mov     [esp+87ch+var_2fc], cl
mov     [esp+87ch+var_2f2], bl
mov     [esp+87ch+var_2f1], bl
mov     [esp+87ch+var_2f0], ebp
mov     [esp+87ch+var_2fb], offset ala_0
mov     [esp+87ch+var_2f7], offset sub_478dd0
mov     [esp+87ch+var_2e7], bl
mov     [esp+87ch+var_2e6], cl
mov     [esp+87ch+var_2f3], 0ah
mov     [esp+87ch+var_2ec], offset sub_421fe0
mov     [esp+87ch+var_2e5], esi
mov     [esp+87ch+var_2dc], bl
mov     [esp+87ch+var_2e8], 61h
mov     [esp+87ch+var_2e1], offset sub_477230
mov     [esp+87ch+var_2dd], 8
mov     [esp+87ch+var_2db], cl
mov     [esp+87ch+var_2d1], dl
mov     [esp+87ch+var_2da], offset ass_0
mov     [esp+87ch+var_2d6], offset loc_477640
mov     [esp+87ch+var_2d2], 63h
mov     [esp+87ch+var_2d0], cl
mov     [esp+87ch+var_2c6], bl
mov     [esp+87ch+var_2cf], offset an
mov     [esp+87ch+var_2cb], offset sub_421fe0
mov     [esp+87ch+var_2c7], 61h
mov     [esp+87ch+var_2c5], cl
mov     [esp+87ch+var_2c4], esi
mov     [esp+87ch+var_2bb], bl
mov     [esp+87ch+var_2ba], cl
mov     [esp+87ch+var_2b9], esi
mov     [esp+87ch+var_2c0], offset sub_421fe0
mov     [esp+87ch+var_2b0], bl
mov     [esp+87ch+var_2af], cl
mov     [esp+87ch+var_2bc], 61h
mov     [esp+87ch+var_2b5], offset sub_478f00
mov     [esp+87ch+var_2b1], 0ah
mov     [esp+87ch+var_2a5], bl
mov     [esp+87ch+var_2a4], cl
mov     [esp+87ch+var_2ae], offset asc_4ad6ac
mov     [esp+87ch+var_2aa], offset sub_48ac60
mov     [esp+87ch+var_2a3], edi
mov     [esp+87ch+var_29a], bl
mov     [esp+87ch+var_299], cl
mov     [esp+87ch+var_298], ebp
mov     [esp+87ch+var_2a6], 6
mov     [esp+87ch+var_29f], offset sub_48ac80
mov     [esp+87ch+var_28f], bl
mov     [esp+87ch+var_28e], cl
mov     [esp+87ch+var_29b], 6
mov     [esp+87ch+var_294], offset sub_48acf0
mov     [esp+87ch+var_28d], ebp
mov     [esp+87ch+var_284], bl
mov     [esp+87ch+var_283], cl
mov     [esp+87ch+var_282], ebp
mov     [esp+87ch+var_290], 6
mov     [esp+87ch+var_289], offset sub_48ad30
mov     [esp+87ch+var_279], bl
mov     [esp+87ch+var_278], cl
mov     [esp+87ch+var_285], 6
mov     [esp+87ch+var_27e], offset sub_48adf0
mov     [esp+87ch+var_27a], 6
mov     [esp+87ch+var_26e], dl
mov     [esp+87ch+var_26d], cl
mov     [esp+87ch+var_277], offset alll
mov     [esp+87ch+var_273], offset sub_48ad50
mov     [esp+87ch+var_26f], 6
mov     [esp+87ch+var_263], bl
mov     [esp+87ch+var_262], cl
mov     [esp+87ch+var_26c], offset asl_0
mov     [esp+87ch+var_268], offset loc_476000
mov     [esp+87ch+var_261], ebp
mov     [esp+87ch+var_258], dl
mov     [esp+87ch+var_264], 9
mov     [esp+87ch+var_25d], offset sub_476030
mov     [esp+87ch+var_259], 9
mov     [esp+87ch+var_257], cl
mov     [esp+87ch+var_24d], bl
mov     [esp+87ch+var_24c], cl
mov     [esp+87ch+var_24b], edi
mov     [esp+87ch+var_256], offset all
mov     [esp+87ch+var_252], offset sub_476050
mov     [esp+87ch+var_242], bl
mov     [esp+87ch+var_241], cl
mov     [esp+87ch+var_24e], 9
mov     [esp+87ch+var_247], offset sub_476060
mov     [esp+87ch+var_243], 9
mov     [esp+87ch+var_240], ebp
mov     [esp+87ch+var_237], dl
mov     [esp+87ch+var_236], cl
mov     [esp+87ch+var_23c], offset sub_4760a0
mov     [esp+87ch+var_238], 9
mov     [esp+87ch+var_22c], dl
mov     [esp+87ch+var_22b], cl
mov     [esp+87ch+var_235], offset all
mov     [esp+87ch+var_231], offset sub_4760c0
mov     [esp+87ch+var_22d], 9
mov     [esp+87ch+var_221], bl
mov     [esp+87ch+var_220], cl
mov     [esp+87ch+var_22a], offset alll_0
mov     [esp+87ch+var_226], offset sub_476130
mov     [esp+87ch+var_222], 9
mov     [esp+87ch+var_216], dl
mov     [esp+87ch+var_215], cl
mov     [esp+87ch+var_21f], offset asllllll
mov     [esp+87ch+var_21b], offset sub_476240
mov     [esp+87ch+var_214], ebp
mov     [esp+87ch+var_20b], bl
mov     [esp+87ch+var_20a], cl
mov     [esp+87ch+var_209], ebp
mov     [esp+87ch+var_217], 9
mov     [esp+87ch+var_210], offset sub_478a50
mov     [esp+87ch+var_200], bl
mov     [esp+87ch+var_1ff], cl
mov     [esp+87ch+var_20c], 0ah
mov     [esp+87ch+var_205], offset sub_478a80
mov     [esp+87ch+var_1fe], ebp
mov     [esp+87ch+var_1f5], bl
mov     [esp+87ch+var_201], 0ah
mov     [esp+87ch+var_1fa], offset sub_478ab0
mov     [esp+87ch+var_1f6], 0ah
mov     [esp+87ch+var_1f4], cl
mov     [esp+87ch+var_1ea], bl
mov     [esp+87ch+var_1f3], offset all
mov     [esp+87ch+var_1ef], offset sub_478b00
mov     [esp+87ch+var_1eb], 0ah
mov     [esp+87ch+var_1e9], cl
mov     [esp+87ch+var_1df], bl
mov     [esp+87ch+var_1e8], offset all
mov     [esp+87ch+var_1e4], offset sub_478b50
mov     [esp+87ch+var_1e0], 0ah
mov     [esp+87ch+var_1de], cl
mov     [esp+87ch+var_1d4], bl
mov     [esp+87ch+var_1d3], cl
mov     [esp+87ch+var_1d2], ebp
mov     [esp+87ch+var_1dd], offset all
mov     [esp+87ch+var_1d9], offset sub_478bc0
mov     [esp+87ch+var_1c9], bl
mov     [esp+87ch+var_1c8], cl
mov     [esp+87ch+var_1d5], 0ah
mov     [esp+87ch+var_1ce], offset sub_478bf0
mov     [esp+87ch+var_1ca], 0ah
mov     [esp+87ch+var_1be], bl
mov     [esp+87ch+var_1bd], cl
mov     [esp+87ch+var_1c7], offset dword_4ad64c
mov     [esp+87ch+var_1c3], offset sub_478c80
mov     [esp+87ch+var_1bf], 0ah
mov     [esp+87ch+var_1bc], offset dword_4ad64c
mov     [esp+87ch+var_1b8], offset sub_478d10
mov     [esp+87ch+var_1b3], dl
mov     [esp+87ch+var_1b2], cl
mov     [esp+87ch+var_1b1], ebp
mov     [esp+87ch+var_1a8], bl
mov     [esp+87ch+var_1b4], 0ah
mov     [esp+87ch+var_1ad], offset sub_4762c0
mov     [esp+87ch+var_1a9], 9
mov     [esp+87ch+var_1a7], cl
mov     [esp+87ch+var_19d], dl
mov     [esp+87ch+var_19c], cl
mov     [esp+87ch+var_19b], ebp
mov     [esp+87ch+var_1a6], offset all
mov     [esp+87ch+var_1a2], offset sub_476340
mov     [esp+87ch+var_192], bl
mov     [esp+87ch+var_191], bl
mov     [esp+87ch+var_19e], 0ah
mov     [esp+87ch+var_197], offset sub_47a490
mov     [esp+87ch+var_193], 0bh
mov     [esp+87ch+var_187], bl
mov     [esp+87ch+var_186], bl
mov     [esp+87ch+var_190], offset dword_4ad648
mov     [esp+87ch+var_18c], offset sub_47a560
mov     [esp+87ch+var_188], 0bh
mov     [esp+87ch+var_17c], bl
mov     [esp+87ch+var_17b], bl
mov     [esp+87ch+var_185], offset all
mov     [esp+87ch+var_181], offset sub_47a600
mov     [esp+87ch+var_17d], 0bh
mov     [esp+87ch+var_171], bl
mov     [esp+87ch+var_170], bl
mov     [esp+87ch+var_17a], offset all
mov     [esp+87ch+var_176], offset sub_47a6a0
mov     [esp+87ch+var_16f], ebp
mov     [esp+87ch+var_166], bl
mov     [esp+87ch+var_172], 0bh
mov     [esp+87ch+var_16b], offset sub_47a720
mov     [esp+87ch+var_167], 0bh
mov     [esp+87ch+var_165], bl
mov     [esp+87ch+var_15b], bl
mov     [esp+87ch+var_15a], cl
mov     [esp+87ch+var_159], ebp
mov     [esp+87ch+var_164], offset all
mov     [esp+87ch+var_160], offset sub_47a7b0
mov     [esp+87ch+var_150], bl
mov     [esp+87ch+var_14f], bl
mov     [esp+87ch+var_15c], 0bh
mov     [esp+87ch+var_155], offset sub_47a830
mov     [esp+87ch+var_151], 0bh
mov     [esp+87ch+var_145], dl
mov     [esp+87ch+var_144], cl
mov     [esp+87ch+var_14e], offset dword_4ad648
mov     [esp+87ch+var_14a], offset sub_47a8e0
mov     [esp+87ch+var_143], ebp
mov     [esp+87ch+var_13a], dl
mov     [esp+87ch+var_139], cl
mov     [esp+87ch+var_138], ebp
mov     [esp+87ch+var_146], 0bh
mov     [esp+87ch+var_13f], offset sub_47a360
mov     [esp+87ch+var_13b], 0bh
mov     [esp+87ch+var_134], offset loc_477b20
mov     [esp+87ch+var_130], al
mov     [esp+87ch+var_12f], bl
mov     [esp+87ch+var_12e], bl
mov     [esp+87ch+var_12d], ebp
mov     [esp+87ch+var_125], al
mov     [esp+87ch+var_124], bl
mov     [esp+87ch+var_123], bl
mov     [esp+87ch+var_11a], al
mov     [esp+87ch+var_119], bl
mov     [esp+87ch+var_129], offset sub_477bb0
mov     [esp+87ch+var_122], offset all_0
mov     [esp+87ch+var_118], bl
mov     [esp+87ch+var_10f], cl
mov     [esp+87ch+var_10e], bl
mov     [esp+87ch+var_10d], cl
mov     [esp+87ch+var_11e], offset loc_477c20
mov     [esp+87ch+var_117], offset all_0
mov     [esp+87ch+var_113], offset sub_47b390
mov     [esp+87ch+var_103], bl
mov     [esp+87ch+var_102], cl
mov     [esp+87ch+var_10c], offset as_2
mov     [esp+87ch+var_108], offset sub_478ce0
mov     [esp+87ch+var_101], ebp
mov     [esp+87ch+var_f8], bl
mov     [esp+87ch+var_f7], cl
mov     [esp+87ch+var_f6], ebp
mov     [esp+87ch+var_104], 0ah
mov     [esp+87ch+var_fd], offset loc_478580
mov     [esp+87ch+var_ed], bl
mov     [esp+87ch+var_ec], cl
mov     [esp+87ch+var_f9], 7
mov     [esp+87ch+var_f2], offset loc_4785a0
mov     [esp+87ch+var_ee], 7
mov     [esp+87ch+var_e2], bl
mov     [esp+87ch+var_e1], cl
mov     [esp+87ch+var_eb], offset all
mov     [esp+87ch+var_e7], offset loc_4785c0
mov     [esp+87ch+var_e3], 7
mov     [esp+87ch+var_d7], bl
mov     [esp+87ch+var_d6], cl
mov     [esp+87ch+var_e0], offset all
mov     [esp+87ch+var_dc], offset loc_4785e0
mov     [esp+87ch+var_d5], ebp
mov     [esp+87ch+var_cc], bl
mov     [esp+87ch+var_d8], 7
mov     [esp+87ch+var_d1], offset loc_4785f0
mov     [esp+87ch+var_cb], cl
mov     [esp+87ch+var_c2], al
mov     [esp+87ch+var_c1], bl
mov     [esp+87ch+var_c0], cl
mov     [esp+87ch+var_cd], 7
mov     [esp+87ch+var_ca], offset alll
mov     [esp+87ch+var_c6], offset sub_477c80
mov     [esp+87ch+var_b6], bl
mov     [esp+87ch+var_b5], cl
mov     [esp+87ch+var_bf], offset as_2
mov     [esp+87ch+var_bb], offset sub_477c90
mov     [esp+87ch+var_b7], 0ah
mov     [esp+87ch+var_b0], offset loc_479d60
mov     [esp+87ch+var_ac], 0ah
mov     [esp+87ch+var_b4], ebp
mov     [esp+87ch+var_ab], bl
mov     [esp+87ch+var_aa], cl
mov     [esp+87ch+var_a9], ebp
mov     [esp+87ch+var_a1], al
mov     [esp+87ch+var_a0], bl
mov     eax, 0eh
mov     [esp+87ch+var_9f], bl
mov     [esp+87ch+var_9e], ebp
mov     [esp+87ch+var_96], al
mov     [esp+87ch+var_95], bl
mov     [esp+87ch+var_94], cl
mov     [esp+87ch+var_a5], offset sub_477690
mov     [esp+87ch+var_8b], al
mov     [esp+87ch+var_8a], dl
mov     [esp+87ch+var_9a], offset sub_477400
mov     eax, offset sub_477420
mov     [esp+87ch+var_89], bl
mov     [esp+87ch+var_93], offset ass
mov     [esp+87ch+var_8f], offset sub_477410
mov     [esp+87ch+var_84], eax
mov     [esp+87ch+var_7e], cl
mov     [esp+87ch+var_7d], esi
mov     [esp+87ch+var_79], eax
mov     [esp+87ch+var_88], offset as_2
mov     [esp+87ch+var_80], 63h
mov     [esp+87ch+var_73], cl
mov     [esp+87ch+var_72], esi
mov     [esp+87ch+var_7f], 6
mov     [esp+87ch+var_75], 63h
mov     [esp+87ch+var_6e], eax
mov     [esp+87ch+var_68], cl
mov     [esp+87ch+var_67], esi
mov     [esp+87ch+var_63], eax
mov     [esp+87ch+var_74], 6
mov     [esp+87ch+var_6a], 63h
mov     [esp+87ch+var_5d], cl
mov     [esp+87ch+var_5c], esi
mov     [esp+87ch+var_69], 6
mov     [esp+87ch+var_5f], 63h
mov     [esp+87ch+var_58], eax
mov     [esp+87ch+var_52], cl
mov     [esp+87ch+var_51], esi
mov     [esp+87ch+var_4d], eax
mov     [esp+87ch+var_5e], 6
mov     [esp+87ch+var_54], 63h
mov     [esp+87ch+var_47], bl
mov     [esp+87ch+var_46], esi
mov     [esp+87ch+var_53], 6
mov     [esp+87ch+var_49], 63h
mov     [esp+87ch+var_42], eax
mov     [esp+87ch+var_3c], bl
mov     [esp+87ch+var_3b], esi
mov     [esp+87ch+var_37], eax
mov     [esp+87ch+var_48], 6
mov     [esp+87ch+var_3e], 63h
mov     [esp+87ch+var_31], bl
mov     [esp+87ch+var_30], esi
mov     [esp+87ch+var_3d], 6
mov     [esp+87ch+var_33], 63h
mov     [esp+87ch+var_32], 6
mov     [esp+87ch+var_2c], eax
mov     [esp+87ch+var_28], 63h
mov     [esp+87ch+var_26], bl
mov     [esp+87ch+var_25], esi
mov     [esp+87ch+var_21], eax
mov     [esp+87ch+var_1b], bl
mov     [esp+87ch+var_27], 6
mov     [esp+87ch+var_1d], 63h
mov     [esp+87ch+var_1a], esi
mov     [esp+87ch+var_11], bl
mov     [esp+87ch+var_10], cl
mov     [esp+87ch+var_f], edi
mov     [esp+87ch+var_1c], 6
mov     [esp+87ch+var_16], offset sub_477d20
mov     [esp+87ch+var_6], bl
mov     [esp+87ch+var_5], cl
mov     [esp+87ch+var_12], 63h
mov     [esp+87ch+var_b], offset sub_479df0
lea     ecx, [esp+87ch+var_86c]
push    86ch
mov     [esp+880h+var_7], 63h
mov     [esp+880h+var_4], offset all
mov     ds:word_4a65e8, 0c4h
push    ecx
call    sub_45bd80
add     esp, 8
mov     ds:dword_4a65e4, eax
cmp     eax, ebx
pop     ebp
sbb     eax, eax
pop     edi
add     eax, ebx
pop     esi
pop     ebx
add     esp, 86ch
retn
sub     esp, 2ch
mov     eax, ds:dword_4a65e0
test    eax, eax
push    esi
push    edi
jz      short loc_421a74
push    offset dword_4a65f0
call    sub_454030
add     esp, 4
test    eax, eax
jz      short loc_421a60
push    offset dword_4a65f0
call    sub_453fe0
add     esp, 4
xor     eax, eax
jmp     short loc_421a74
push    0
push    offset dword_4a65f0
call    sub_454010
add     esp, 8
mov     eax, ds:dword_4a65e0
mov     ds:dword_4a65e0, eax
test    eax, eax
jnz     short loc_421ae7
push    0c4h
push    offset dword_4a65f0
call    sub_453f90
add     esp, 8
test    eax, eax
mov     eax, ds:dword_4a65e0
jz      short loc_421ae7
mov     si, 7918h
mov     edi, ds:charlowera
mov     ax, si
lea     ecx, [esp+34h+sz]
sub     ax, 7918h
push    eax
push    70h
push    29h
push    ecx
call    sub_47fe70
add     esp, 10h
test    eax, eax
jle     short loc_421ad9
lea     eax, [esp+34h+sz]
push    eax
call    edi
lea     eax, [esp+34h+sz]
push    esi
push    eax
push    offset dword_4a65f0
call    sub_454040
add     esp, 0ch
inc     si
cmp     si, 79dbh
jle     short loc_421aa2
mov     eax, 1
pop     edi
mov     ds:dword_4a65e0, eax
pop     esi
add     esp, 2ch
retn
mov     ax, [esp+arg_4]
sub     esp, 2ch
sub     ax, 7918h
lea     ecx, [esp+2ch+string2]
push    eax
push    70h
push    29h
push    ecx
call    sub_47fe70
lea     ecx, [esp+3ch+string2]
mov     edx, [esp+3ch+lpstring1]
add     esp, 10h
push    ecx
push    edx
call    ds:lstrcmpia
cmp     eax, 1
sbb     eax, eax
add     esp, 2ch
neg     eax
retn
sub     esp, 2ch
push    ebx
push    esi
push    edi
push    ebp
xor     bp, bp
call    sub_421a30
test    eax, eax
jz      short loc_421ba8
mov     edi, [esp+3ch+lpstring1]
push    29h
lea     eax, [esp+40h+sz]
push    edi
push    eax
call    sub_47f9f0
lea     eax, [esp+48h+sz]
add     esp, 0ch
push    eax
call    ds:charlowera
lea     ecx, [esp+3ch+sz]
push    0
push    offset sub_421b00
push    ecx
push    offset dword_4a65f0
call    sub_4540a0
mov     bp, ax
add     esp, 10h
push    1
push    offset dword_4a65f0
call    sub_454010
mov     ax, bp
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
xor     bx, bx
mov     esi, ds:lstrcmpia
mov     edi, [esp+3ch+lpstring1]
lea     eax, [esp+3ch+sz]
push    ebx
push    70h
push    29h
push    eax
call    sub_47fe70
lea     eax, [esp+4ch+sz]
add     esp, 10h
push    eax
push    edi
call    esi
test    eax, eax
jz      short loc_421be7
inc     bx
cmp     bx, 0c3h
jle     short loc_421bb5
mov     ax, bp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
lea     ebp, [ebx+7918h]
mov     ax, bp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+lpstring]
mov     word ptr [edi], 0
push    esi
call    ds:lstrlena
cmp     eax, 28h
jle     short loc_421c23
mov     eax, 1bh
pop     edi
pop     esi
retn
push    esi
call    sub_421b40
mov     [edi], ax
add     esp, 4
test    ax, ax
jz      short loc_421c6b
movsx   eax, ax
lea     ecx, [eax+eax*4-25d78h]
lea     edx, [eax+ecx*2-7918h]
sub     eax, 7918h
mov     eax, ds:dword_4a65e4
mov     al, [edx+eax+4]
cmp     al, 62h
jnz     short loc_421c5f
mov     eax, 1fh
pop     edi
pop     esi
retn
sub     al, 61h
pop     edi
pop     esi
cmp     al, 1
sbb     eax, eax
and     eax, 15h
retn
mov     eax, 15h
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
mov     ax, [eax]
cmp     ax, 7918h
jl      short loc_421cac
cmp     ax, 79dbh
jg      short loc_421cac
sub     ax, 7918h
mov     ecx, [esp+lpbuffer]
push    eax
push    70h
push    29h
push    ecx
call    sub_47fe70
add     esp, 10h
xor     eax, eax
retn
mov     eax, 15h
retn
mov     eax, [esp+arg_0]
push    ebx
mov     ax, [eax]
push    esi
sub     ax, 7918h
push    edi
movzx   ecx, ax
mov     edx, ds:dword_4a65e4
xor     edi, edi
lea     eax, [ecx+ecx*4]
lea     ecx, [ecx+eax*2]
mov     esi, [ecx+edx+7]
cmp     byte ptr [esi], 0
jz      short loc_421d20
mov     ebx, 1
cmp     dword_4af134, ebx
jle     short loc_421d04
movsx   eax, byte ptr [esi]
push    ebx
push    eax
call    __isctype
add     esp, 8
jmp     short loc_421d15
movsx   ecx, byte ptr [esi]
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, ebx
test    eax, eax
jz      short loc_421d20
inc     edi
inc     esi
cmp     byte ptr [esi], 0
jnz     short loc_421ced
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    esi
mov     ax, [eax]
mov     edx, ds:dword_4a65e4
sub     ax, 7918h
movzx   ecx, ax
lea     eax, [ecx+ecx*4]
lea     ecx, [ecx+eax*2]
mov     esi, [ecx+edx+7]
push    esi
call    ds:lstrlena
dec     eax
jns     short loc_421d5f
mov     ax, 0ffffh
pop     esi
retn
mov     ecx, [esp+4+arg_4]
cmp     ecx, eax
jle     short loc_421d75
cmp     byte ptr [esi+eax], 2eh
jz      short loc_421d73
mov     ax, 0ffffh
pop     esi
retn
cmp     ecx, eax
jl      short loc_421d79
mov     ecx, eax
add     esi, ecx
cmp     byte ptr [esi], 2eh
jnz     short loc_421d81
dec     esi
movsx   eax, byte ptr [esi]
push    eax
call    _toupper
add     esp, 4
movzx   ax, byte_4ad5ef[eax]
pop     esi
retn
mov     eax, [esp+arg_0]
mov     edx, ds:dword_4a65e4
mov     ax, [eax]
sub     ax, 7918h
movzx   ecx, ax
lea     eax, [ecx+ecx*4]
lea     ecx, [ecx+eax*2]
mov     al, [ecx+edx+6]
retn
mov     ecx, [esp+arg_4]
mov     ax, [ecx]
cmp     ax, 7918h
jl      short loc_421df0
cmp     ax, 79dbh
jg      short loc_421df0
mov     eax, [esp+arg_10]
mov     edx, [esp+arg_c]
push    eax
push    edx
mov     eax, [esp+8+arg_8]
push    eax
push    ecx
mov     ecx, [esp+10h+arg_0]
push    ecx
call    sub_421e10
add     esp, 14h
xor     eax, eax
retn
mov     eax, ds:dword_4a65ec
retn
mov     eax, [esp+arg_0]
sub     esp, 30h
mov     ds:dword_4a65ec, eax
push    ebx
mov     ecx, [esp+34h+arg_4]
push    esi
mov     ax, [ecx]
push    edi
sub     ax, 7918h
push    ebp
movzx   ebp, ax
lea     eax, [ebp+ebp*4+0]
lea     ebp, [ebp+eax*2+0]
add     ebp, ds:dword_4a65e4
cmp     byte ptr [ebp+4], 62h
jnz     short loc_421e61
mov     edi, [esp+40h+arg_10]
push    edi
call    sub_41afc0
add     esp, 4
push    30h
call    sub_45c150
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, [ebp+7]
mov     edi, [esp+40h+arg_c]
mov     ebx, [esp+40h+arg_8]
dec     ebx
cmp     [esp+40h+arg_8], 0
jle     short def_421e94
movsx   eax, byte ptr [esi]
push    eax
call    _toupper
add     esp, 4
xor     ecx, ecx
mov     cl, al
lea     edx, [ecx-41h]
cmp     edx, 15h
ja      short def_421e94
xor     eax, eax
mov     al, ds:byte_421fa4[edx]
jmp     ds:jpt_421e94[eax*4]
movzx   ax, byte_4ad5ef[ecx]
push    eax
push    edi
call    sub_41aa60
add     esp, 8
mov     al, [esi+1]
inc     esi
cmp     al, 2eh
jz      short loc_421eb9
test    al, al
jnz     short loc_421eba
dec     esi
add     edi, 16h
mov     eax, ebx
dec     ebx
test    eax, eax
jg      short loc_421e74
xor     eax, eax
mov     al, [ebp+5]
cmp     eax, 6
ja      short def_421ece
jmp     ds:jpt_421ece[eax*4]
mov     edi, [esp+40h+arg_10]
push    edi
call    sub_41afc0
add     esp, 4
jmp     loc_421f78
mov     eax, [esp+40h+arg_c]
mov     ecx, [esp+40h+arg_8]
push    eax
push    ecx
call    dword ptr [ebp+0]
mov     edi, [esp+48h+arg_10]
add     esp, 8
push    eax
push    edi
call    sub_41af50
add     esp, 8
jmp     short loc_421f78
mov     eax, [esp+40h+arg_c]
mov     ecx, [esp+40h+arg_8]
push    eax
push    ecx
call    dword ptr [ebp+0]
mov     edi, [esp+48h+arg_10]
add     esp, 8
mov     word ptr [edi], 1
mov     [edi+8], eax
jmp     short loc_421f78
mov     eax, [esp+40h+arg_c]
mov     ecx, [esp+40h+arg_8]
push    eax
push    ecx
call    dword ptr [ebp+0]
mov     edi, [esp+48h+arg_10]
add     esp, 8
fstp    qword ptr [edi+8]
mov     word ptr [edi], 2
jmp     short loc_421f78
mov     eax, [esp+40h+arg_c]
mov     ecx, [esp+40h+arg_8]
lea     edx, [esp+40h+var_18]
push    eax
push    ecx
push    edx
call    dword ptr [ebp+0]
lea     edi, [esp+4ch+var_30]
add     esp, 0ch
mov     esi, eax
mov     ecx, 5
rep movsd
movsw
lea     esi, [esp+40h+var_30]
mov     edi, [esp+40h+arg_10]
mov     ecx, 5
rep movsd
movsw
mov     ds:dword_4a65ec, 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     eax, eax
retn
cmp     ds:dword_4a68c4, 0
push    esi
push    edi
jnz     short loc_422009
cmp     ds:frequency, 0
jz      short loc_422009
call    sub_422a50
mov     eax, [esp+8+arg_0]
push    eax
call    sub_485260
add     esp, 4
mov     edi, eax
cmp     ds:dword_4a68c4, 0
jnz     short loc_422038
cmp     ds:frequency, 0
jz      short loc_422038
mov     esi, 0
call    sub_4353b0
test    eax, eax
jnz     short loc_42203d
mov     esi, 1
test    esi, esi
jz      short loc_422061
call    sub_428970
test    esi, esi
jz      short loc_42207b
test    ds:byte_4a61d4, 1
jz      short loc_422061
cmp     ds:frequency, 0
jz      short loc_422061
call    sub_4443d0
test    esi, esi
jz      short loc_42207b
test    edi, edi
jnz     short loc_42207b
cmp     ds:word_4a68d0, 0
jnz     short loc_42207b
mov     eax, 1
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
push    edi
push    1
call    sub_444df0
add     esp, 4
test    eax, eax
jnz     short loc_4220f1
mov     si, [esp+8+arg_0]
xor     edi, edi
call    sub_459fe0
test    eax, eax
jnz     short loc_4220f1
push    esi
call    sub_421ff0
add     esp, 4
test    eax, eax
mov     eax, ds:dword_4a68c4
jnz     short loc_4220f1
cmp     ds:dword_4a66d4, edi
jz      short loc_4220e3
cmp     ds:dword_4a66d0, edi
jz      short loc_4220e3
test    eax, eax
jnz     short loc_4220e3
cmp     ds:frequency, edi
jz      short loc_4220e3
cmp     ds:dword_4a66d8, edi
jz      short loc_4220de
cmp     ds:dword_4a66dc, edi
jnz     short loc_4220e3
call    sub_42b060
push    1
call    sub_444df0
add     esp, 4
test    eax, eax
jz      short loc_422097
pop     edi
pop     esi
retn
mov     ax, [esp+arg_0]
test    ax, ax
jle     short loc_422122
movsx   ecx, ax
cmp     ecx, 16h
ja      short loc_422122
mov     eax, [esp+arg_4]
push    eax
call    funcs_422117[ecx*4]
add     esp, 4
retn
mov     eax, 1388h
retn
push    esi
push    edi
mov     di, 1
mov     esi, [esp+8+arg_0]
push    esi
push    edi
inc     di
call    sub_422100
movsx   eax, di
add     esp, 8
cmp     eax, 16h
jbe     short loc_42213a
pop     edi
pop     esi
retn
sub     esp, 24h
call    ds:gettickcount
push    eax
call    sub_49e02c
add     esp, 4
call    sub_4452b0
mov     [esp+24h+var_24], 0
lea     eax, [esp+24h+var_24]
push    eax
call    sub_422130
add     esp, 28h
retn
sub     esp, 1b4h
cmp     [esp+1b4h+arg_0], 0
push    ebx
push    esi
push    edi
push    ebp
jz      short loc_4221da
lea     eax, [esp+1c4h+arg_0]
push    2
push    eax
call    sub_44b960
add     esp, 8
test    eax, eax
jz      short loc_4221ca
mov     eax, 5
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1b4h
retn
mov     eax, [esp+1c4h+arg_0]
push    eax
call    sub_44b480
add     esp, 4
mov     eax, [esp+1c4h+arg_0]
push    1
push    eax
call    sub_43cb40
add     esp, 8
test    eax, eax
jnz     loc_4222fb
mov     ebp, 1
call    sub_45c800
mov     si, bp
mov     ebx, eax
lea     edi, [esp+1c4h+var_1b4]
xor     eax, eax
mov     ecx, 9
rep stosd
mov     word ptr [esp+1c4h+var_1ac], 0
mov     [esp+1c4h+var_1a6], bp
lea     eax, [esp+1c4h+var_190]
lea     ecx, [esp+1c4h+var_1b4]
mov     [esp+1c4h+var_1b4], ebp
mov     [esp+1c4h+var_1ac+2], eax
push    ecx
push    esi
call    sub_422100
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     loc_4222cc
cmp     word ptr [esp+1c4h+var_1ac], 0
jnz     short loc_42224d
mov     word ptr [esp+1c4h+var_1ac], bp
mov     eax, [esp+1c4h+var_1ac]
lea     ecx, [esp+1c4h+var_190]
push    eax
push    ecx
push    esi
push    ebx
call    sub_45ca00
add     esp, 10h
test    eax, eax
jz      short loc_4222d0
inc     si
movsx   eax, si
cmp     eax, 16h
jbe     short loc_422203
mov     eax, [ebx]
push    eax
call    sub_45c830
add     esp, 4
push    eax
push    ebx
push    1
call    sub_43cda0
add     esp, 0ch
mov     edi, eax
test    edi, edi
jz      short loc_4222d7
mov     si, 16h
test    si, si
jz      short loc_4222b0
mov     ebx, 4
lea     eax, [esp+1c4h+var_190]
mov     [esp+1c4h+var_190], ebx
push    eax
push    esi
call    sub_422100
add     esp, 8
dec     si
jnz     short loc_42229a
call    sub_43cd20
mov     eax, edi
pop     ebp
mov     ds:dword_4a65fc, 0
pop     edi
pop     esi
pop     ebx
add     esp, 1b4h
retn
dec     si
jmp     short loc_422290
mov     edi, 8
jmp     short loc_422290
push    0
xor     eax, eax
mov     ax, word_4ad9ac
shl     eax, 10h
mov     al, 1
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ds:dword_4a65fc, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1b4h
retn
sub     esp, 8ch
push    esi
push    edi
mov     esi, [esp+94h+arg_0]
push    0
push    esi
call    sub_43cb40
mov     [esp+9ch+var_8c], eax
add     esp, 8
test    eax, eax
jnz     loc_422489
call    sub_422590
mov     [esp+94h+var_8c], eax
test    eax, eax
jz      short loc_422355
call    sub_43cd20
mov     eax, [esp+94h+var_8c]
pop     edi
pop     esi
add     esp, 8ch
retn
push    2000308h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     loc_422412
cmp     [esp+94h+arg_4], 0
jnz     loc_422412
push    2
xor     eax, eax
mov     ax, word_4ad9ac
shl     eax, 10h
mov     al, 1
push    eax
call    sub_445700
mov     di, ax
lea     ecx, [esp+9ch+var_64]
add     esp, 8
push    edi
push    ecx
push    2
push    1
call    sub_43cde0
add     esp, 10h
call    sub_43cd20
push    esi
call    sub_422190
mov     [esp+98h+var_8c], eax
add     esp, 4
test    eax, eax
jnz     loc_422489
mov     [esp+94h+var_80], di
lea     eax, [esp+94h+var_64]
lea     ecx, [esp+94h+var_88]
mov     [esp+94h+var_7e], eax
mov     [esp+94h+var_88], 2
push    ecx
push    2
call    sub_422100
mov     [esp+9ch+var_8c], eax
add     esp, 8
cmp     eax, 1389h
jnz     short loc_422405
mov     [esp+94h+var_8c], 0
mov     eax, [esp+94h+var_8c]
pop     edi
pop     esi
add     esp, 8ch
retn
mov     [esp+94h+var_8c], 0
lea     eax, [esp+94h+var_8c]
push    eax
push    offset sub_4224a0
push    1
call    sub_43ceb0
mov     si, ax
add     esp, 0ch
test    si, si
jnz     short loc_422455
mov     ds:dword_4a65fc, 1
push    1
call    sub_422a10
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
add     esp, 8ch
retn
mov     [esp+94h+var_64], 4
dec     si
test    si, si
jle     short loc_422476
lea     eax, [esp+94h+var_64]
push    eax
push    esi
call    sub_422100
add     esp, 8
dec     si
jnz     short loc_422464
call    sub_43cd20
mov     ds:dword_4a65fc, 0
mov     eax, [esp+94h+var_8c]
pop     edi
pop     esi
add     esp, 8ch
retn
mov     cx, [esp+arg_0]
sub     esp, 24h
cmp     cx, 2710h
jl      short loc_4224b8
mov     eax, 1
add     esp, 24h
retn
cmp     cx, 1
jl      short loc_4224ff
movsx   eax, cx
cmp     eax, 16h
ja      short loc_4224ff
mov     dx, [esp+24h+arg_8]
mov     eax, [esp+24h+arg_4]
mov     [esp+24h+var_1c], dx
mov     [esp+24h+var_1a], eax
mov     [esp+24h+var_24], 2
lea     eax, [esp+24h+var_24]
push    eax
push    ecx
call    sub_422100
mov     ecx, [esp+2ch+arg_c]
add     esp, 8
cmp     eax, 1
mov     [ecx], eax
sbb     eax, eax
add     esp, 24h
neg     eax
retn
mov     ecx, [esp+24h+arg_c]
xor     eax, eax
mov     dword ptr [ecx], 1388h
add     esp, 24h
retn
sub     esp, 4
lea     eax, [esp+4+var_2]
push    esi
push    edi
push    eax
push    1
push    1
call    sub_43ce70
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_42255e
mov     eax, dword ptr [esp+0ch+var_2]
push    eax
push    esi
call    sub_489130
mov     edi, [esp+14h+arg_0]
add     esp, 8
push    esi
mov     [edi+4], eax
push    0
xor     eax, eax
mov     ax, word_4ad9ac
push    1
shl     eax, 10h
mov     al, 1
push    eax
call    sub_445a40
add     esp, 10h
jmp     short loc_422562
mov     edi, [esp+0ch+arg_0]
mov     ax, ds:word_4a8518
push    eax
call    sub_471c10
add     esp, 4
mov     [edi], eax
mov     dword ptr [edi+8], 0
mov     word ptr [edi+0ch], 152h
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 20h
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
push    edi
mov     al, 1
push    eax
call    sub_470610
add     esp, 4
test    eax, eax
jnz     short loc_4225ba
mov     eax, 138ah
pop     edi
pop     esi
add     esp, 20h
retn
push    2710h
xor     eax, eax
mov     ax, word_4ad9ac
shl     eax, 10h
mov     al, 1
push    eax
call    sub_445700
add     esp, 8
cmp     ax, 0eh
jz      short loc_4225e6
mov     eax, 1388h
pop     edi
pop     esi
add     esp, 20h
retn
lea     eax, [esp+28h+var_20]
push    0eh
push    eax
push    2710h
push    1
call    sub_43cde0
lea     eax, [esp+38h+var_10]
add     esp, 10h
push    eax
call    sub_422510
lea     esi, [esp+2ch+var_10]
lea     edi, [esp+2ch+var_20]
add     esp, 4
mov     ecx, 0eh
sub     eax, eax
repe cmpsb
jz      short loc_422621
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
mov     eax, 1389h
jnz     short loc_42262c
xor     eax, eax
pop     edi
pop     esi
add     esp, 20h
retn
sub     esp, 14h
cmp     ds:dword_4a65fc, 0
push    esi
push    edi
jnz     short loc_422656
xor     eax, eax
pop     edi
pop     esi
add     esp, 14h
retn
cmp     ds:dword_4a6604, 0
jz      short loc_422667
xor     eax, eax
pop     edi
pop     esi
add     esp, 14h
retn
mov     esi, [esp+1ch+arg_0]
test    esi, esi
jnz     short loc_422680
call    sub_4367d0
test    eax, eax
jnz     short loc_422680
xor     eax, eax
pop     edi
pop     esi
add     esp, 14h
retn
mov     edi, ds:dword_4a68c4
test    edi, edi
jnz     short loc_422694
push    0
call    sub_422a10
add     esp, 4
mov     ds:dword_4a6600, 1
mov     [esp+1ch+var_14], 0
lea     eax, [esp+1ch+var_14]
push    eax
push    offset sub_422760
push    1
call    sub_43ceb0
lea     eax, [esp+28h+var_10]
add     esp, 0ch
push    eax
call    sub_422510
lea     eax, [esp+20h+var_10]
add     esp, 4
push    0eh
push    eax
push    2710h
push    1
call    sub_43ce30
add     esp, 10h
mov     ds:dword_4a6600, 0
cmp     [esp+1ch+var_14], 0
jnz     short loc_4226f9
call    sub_43cc50
mov     [esp+1ch+var_14], eax
jmp     short loc_422739
test    edi, edi
jz      short loc_42273d
push    2000308h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_422721
test    esi, esi
jz      short loc_422739
mov     eax, [esp+1ch+var_14]
push    eax
call    sub_4698f0
add     esp, 4
push    eax
push    39h
call    sub_45c150
add     esp, 8
test    edi, edi
jnz     short loc_422747
push    1
call    sub_422a10
add     esp, 4
mov     eax, [esp+1ch+var_14]
pop     edi
pop     esi
add     esp, 14h
retn
mov     cx, [esp+arg_0]
sub     esp, 24h
cmp     cx, 2710h
jl      short loc_422778
mov     eax, 1
add     esp, 24h
retn
mov     dx, [esp+24h+arg_8]
mov     eax, [esp+24h+arg_4]
mov     [esp+24h+var_1c], dx
mov     [esp+24h+var_1a], eax
mov     [esp+24h+var_24], 3
lea     eax, [esp+24h+var_24]
push    eax
push    ecx
call    sub_422100
mov     ecx, [esp+2ch+arg_c]
mov     edx, [esp+2ch+arg_10]
add     esp, 8
mov     [ecx], eax
mov     dword ptr [edx], 1
cmp     dword ptr [ecx], 1
sbb     eax, eax
add     esp, 24h
neg     eax
retn
sub     esp, 24h
cmp     ds:dword_4a65fc, 0
jz      short loc_422804
mov     [esp+24h+var_24], 4
lea     eax, [esp+24h+var_24]
push    eax
call    sub_422130
add     esp, 4
call    sub_43cd20
mov     ds:dword_4a65fc, 0
mov     ds:dword_4a65f8, 0
mov     ds:dword_4a6604, 0
add     esp, 24h
retn
movsx   eax, [esp+arg_0]
sub     esp, 10h
mov     [esp+10h+var_10], 5
mov     [esp+10h+var_8], offset sub_422850
cmp     [esp+10h+arg_4], 0
mov     [esp+10h+var_4], eax
jz      short loc_422838
add     [esp+10h+var_4], 10h
lea     eax, [esp+10h+var_10]
push    eax
call    sub_434ac0
add     esp, 14h
retn
mov     eax, [esp+arg_0]
mov     ecx, eax
and     eax, 10h
shr     eax, 4
and     cx, 0ffefh
push    eax
push    ecx
call    sub_422870
add     esp, 8
retn
sub     esp, 14h
push    ebx
push    esi
push    edi
call    sub_4443d0
mov     si, [esp+20h+arg_0]
test    si, si
jnz     short loc_42289d
mov     edi, [esp+20h+arg_4]
push    edi
call    sub_457ae0
add     esp, 4
test    eax, eax
jz      short loc_4228a6
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
call    sub_457df0
mov     edi, [esp+20h+arg_4]
test    edi, edi
jz      short loc_4228b4
push    0
call    sub_422980
add     esp, 4
cmp     si, 2
jz      short loc_4228cc
cmp     si, 3
jz      short loc_4228cc
call    sub_470520
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, ds:hwndparent
xor     edi, edi
push    eax
call    ds:destroywindow
lea     eax, [esp+20h+tokenhandle]
push    eax
push    28h
call    ds:getcurrentprocess
push    eax
call    ds:openprocesstoken
mov     ebx, ds:__imp_getlasterror
test    eax, eax
jnz     short loc_4228fc
call    ebx
mov     edi, eax
test    edi, edi
jnz     short loc_422948
lea     eax, [esp+20h+newstate.privileges]
push    eax
push    offset name
push    0
call    ds:lookupprivilegevaluea
test    eax, eax
jz      short loc_42293e
lea     eax, [esp+20h+newstate]
push    0
mov     ecx, [esp+24h+tokenhandle]
push    0
mov     [esp+28h+newstate.privilegecount], 1
mov     [esp+28h+newstate.privileges.attributes], 2
push    0
push    eax
push    0
push    ecx
call    ds:adjusttokenprivileges
call    ebx
test    eax, eax
jnz     short loc_42296c
test    edi, edi
jz      short loc_42294d
cmp     edi, 78h
jnz     short loc_42296c
cmp     si, 3
push    0
jnz     short loc_422964
push    0dh
call    ds:exitwindowsex
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
push    6
call    ds:exitwindowsex
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 24h
call    sub_4443d0
xor     ecx, ecx
mov     eax, ds:dword_4a65fc
mov     ds:dword_4a65f8, ecx
mov     ds:dword_4a6604, ecx
cmp     eax, ecx
jz      short loc_4229b9
mov     [esp+24h+var_24], 5
lea     eax, [esp+24h+var_24]
push    eax
call    sub_422130
add     esp, 4
mov     eax, ds:dword_4a65fc
lea     ecx, [esp+24h+var_24]
cmp     eax, 1
sbb     eax, eax
push    ecx
neg     eax
mov     [esp+28h+var_24], 1
mov     [esp+28h+var_16], ax
call    sub_422130
add     esp, 4
cmp     ds:frequency, 0
jz      short loc_4229f1
push    0
mov     eax, ds:frequency
push    eax
call    ds:validaterect
call    sub_444540
push    0
call    sub_45bc40
add     esp, 4
push    0
call    sub_47ed50
add     esp, 28h
retn
sub     esp, 24h
cmp     ds:dword_4a65fc, 0
jz      short loc_422a48
mov     eax, [esp+24h+arg_0]
cmp     eax, 1
sbb     edx, edx
neg     edx
cmp     edx, ds:dword_4a68c4
jz      short loc_422a48
cmp     eax, 1
sbb     eax, eax
add     eax, 7
mov     [esp+24h+var_24], eax
lea     eax, [esp+24h+var_24]
push    eax
call    sub_422130
add     esp, 4
add     esp, 24h
retn
cmp     ds:dword_4a65fc, 0
jnz     short loc_422a5f
mov     eax, 1
retn
call    sub_436d70
test    eax, eax
jz      short loc_422a71
call    sub_4353b0
test    eax, eax
jz      short loc_422a5f
call    sub_434300
test    eax, eax
jz      short loc_422a87
cmp     ds:word_4a68d0, 1
sbb     eax, eax
neg     eax
retn
xor     eax, eax
retn
cmp     ds:dword_4a6604, 0
jnz     short locret_422ae9
cmp     ds:dword_4a6600, 0
jnz     short locret_422ae9
mov     ds:dword_4a6604, 1
mov     eax, [esp+arg_18]
mov     ecx, [esp+arg_14]
mov     edx, [esp+arg_10]
push    eax
mov     eax, [esp+4+arg_c]
push    ecx
mov     ecx, [esp+8+arg_8]
push    edx
mov     edx, [esp+0ch+arg_4]
push    eax
movsx   eax, [esp+10h+arg_0]
push    ecx
push    edx
push    eax
call    sub_45c150
add     esp, 1ch
cmp     eax, 1
jnz     short locret_422ae9
push    0
push    0
call    sub_422810
add     esp, 8
retn
sub     esp, 20h
cmp     ds:dword_4a65f8, 0
push    esi
jnz     short loc_422b76
cmp     ds:dword_4a6604, 0
jnz     short loc_422b76
mov     eax, [esp+24h+arg_4]
cmp     eax, 8
jz      short loc_422b30
cmp     eax, 4
jz      short loc_422b30
cmp     eax, 0fh
jnz     short loc_422b22
cmp     ds:dword_4a9a0c, 8
jz      short loc_422b30
sub     eax, 0fh
cmp     eax, 1
sbb     esi, esi
add     si, 3
jmp     short loc_422b34
mov     si, 1
lea     eax, [esp+24h+string1]
push    1eh
mov     ecx, [esp+28h+arg_0]
push    eax
mov     ds:dword_4a65f8, 1
push    ecx
call    sub_462d70
lea     ecx, [esp+30h+string1]
add     esp, 0ch
movsx   edx, si
push    ecx
push    edx
push    38h
call    sub_45c150
add     esp, 0ch
cmp     eax, 1
jnz     short loc_422b76
push    0
push    0
call    sub_422810
add     esp, 8
pop     esi
add     esp, 20h
retn
mov     ecx, [esp+arg_0]
sub     esp, 20h
lea     eax, [esp+20h+string1]
push    1eh
push    eax
push    ecx
call    sub_462d70
lea     ecx, [esp+2ch+string1]
add     esp, 0ch
push    ecx
push    2dh
call    sub_422a90
add     esp, 28h
retn
call    sub_408830
call    sub_473050
test    eax, eax
jz      short loc_422bc4
mov     eax, 1
retn
call    sub_408360
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
sub     esp, 24h
mov     [esp+24h+var_24], 0fh
lea     eax, [esp+24h+var_24]
push    eax
call    sub_422130
add     esp, 28h
retn
mov     eax, [esp+hwnd]
push    eax
call    sub_474cf0
add     esp, 4
retn
sub     esp, 0a4h
xor     ecx, ecx
mov     [esp+0a4h+var_9c], ecx
push    ebx
mov     ebx, [esp+0a8h+arg_0]
push    esi
mov     [esp+0ach+var_98], ecx
push    edi
push    ebp
mov     edi, ebx
shr     edi, 10h
xor     eax, eax
mov     al, bh
mov     edx, dword_4ae1e0
movsx   esi, di
shl     esi, 6
lea     ebp, ds:0[eax*4]
mov     eax, [edx+esi+4]
mov     edx, [eax]
mov     eax, [edx+ebp]
cmp     eax, ecx
jz      short loc_422c51
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_422c5a
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+0b4h+var_7c]
push    8
push    ecx
push    0ch
push    eax
call    sub_45c8a0
mov     ax, di
add     esp, 10h
shl     ax, 10h
or      ax, word ptr [esp+0b4h+var_7c]
jle     short loc_422c92
movzx   eax, di
shl     eax, 10h
mov     ecx, [esp+0b4h+var_7c]
and     ecx, 0ffffh
or      eax, ecx
mov     [esp+0b4h+var_94], eax
jmp     short loc_422c9a
mov     [esp+0b4h+var_94], 0
mov     ax, word ptr [esp+0b4h+var_7c+2]
cmp     [esp+0b4h+var_94], 0
mov     word ptr [esp+0b4h+var_90], ax
jz      loc_423422
lea     eax, [esp+0b4h+var_2c]
mov     ecx, [esp+0b4h+var_90]
mov     edx, [esp+0b4h+var_94]
push    eax
push    ecx
push    edx
call    sub_423e10
add     esp, 0ch
test    eax, eax
jnz     short loc_422cf9
mov     eax, [esp+0b4h+var_90]
mov     ecx, [esp+0b4h+var_94]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jz      loc_423422
lea     edi, [esp+0b4h+var_2c]
xor     eax, eax
mov     ecx, 0ah
rep stosd
stosw
lea     eax, [esp+0b4h+var_98]
lea     ecx, [esp+0b4h+var_54]
mov     edx, [esp+0b4h+var_90]
push    eax
mov     eax, [esp+0b8h+var_94]
push    ecx
push    edx
push    eax
call    sub_423e90
add     esp, 10h
push    5
push    ebx
call    sub_462670
mov     [esp+0bch+var_a2], ax
add     esp, 8
push    200020ch
push    ebx
call    sub_462670
add     esp, 8
cmp     ax, 2
jz      short loc_422d55
push    200020ch
push    ebx
call    sub_462670
mov     [esp+0bch+var_a0], 0
add     esp, 8
cmp     ax, 3
jnz     short loc_422d5d
mov     [esp+0b4h+var_a0], 1
push    2000003h
push    ebx
call    sub_462670
mov     word ptr [esp+0bch+var_6c], ax
add     esp, 8
cmp     [esp+0b4h+var_a2], 1
jnz     loc_422e05
mov     eax, dword_4ae1e0
mov     ecx, [eax+esi+4]
mov     edx, [ecx]
mov     eax, [edx+ebp]
test    eax, eax
jz      short loc_422d9b
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_422da4
push    ebx
call    sub_461250
add     esp, 4
push    400h
push    eax
call    sub_45c870
add     esp, 8
test    ax, ax
jz      short loc_422e05
push    0
push    400h
push    ebx
call    sub_42ed80
mov     [esp+0c0h+var_16], eax
add     esp, 0ch
cmp     [esp+0b4h+var_a0], 0
jnz     short loc_422dd9
test    eax, eax
jz      short loc_422dee
push    80h
push    400h
push    ebx
push    6
call    sub_441440
add     esp, 10h
cmp     [esp+0b4h+var_16], 0
jnz     short loc_422e10
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn
mov     [esp+0b4h+var_16], 0
cmp     [esp+0b4h+var_a0], 0
jz      loc_422ebf
movsx   eax, [esp+0b4h+var_a2]
cmp     eax, 2
jl      short loc_422e9b
cmp     eax, 3
jle     short loc_422e65
cmp     eax, 4
jnz     short loc_422e9b
push    0
push    402h
push    ebx
push    6
call    sub_441440
add     esp, 10h
push    0
push    404h
push    ebx
push    6
call    sub_441440
add     esp, 10h
push    0
push    406h
push    ebx
push    6
call    sub_441440
add     esp, 10h
push    0
push    401h
push    ebx
push    6
call    sub_441440
add     esp, 10h
push    0
push    403h
push    ebx
push    6
call    sub_441440
add     esp, 10h
push    0
push    405h
push    ebx
push    6
call    sub_441440
add     esp, 10h
push    0
push    3f4h
push    ebx
push    6
call    sub_441440
add     esp, 10h
push    0
push    3f5h
push    ebx
push    6
call    sub_441440
add     esp, 10h
lea     eax, [esp+0b4h+var_84]
mov     ecx, [esp+0b4h+var_90]
mov     edx, [esp+0b4h+var_94]
push    eax
push    ecx
push    edx
call    sub_43b260
lea     ecx, [esp+0c0h+var_12]
add     esp, 0ch
push    ecx
call    sub_40db40
add     esp, 4
cmp     [esp+0b4h+var_a2], 1
jz      short loc_422ef6
cmp     [esp+0b4h+var_a2], 2
jnz     short loc_422f58
push    0fh
push    ebx
call    sub_4612e0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_422f58
mov     eax, dword_4ae1e0
mov     ecx, [eax+esi+4]
mov     edx, [ecx]
mov     eax, [edx+ebp]
test    eax, eax
jz      short loc_422f26
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_422f2f
push    ebx
call    sub_461250
add     esp, 4
push    0fh
push    eax
call    sub_45c870
lea     ecx, [esp+0bch+var_12]
add     esp, 8
movsx   eax, ax
push    eax
push    edi
push    ecx
call    sub_40dbe0
add     esp, 0ch
push    edi
call    sub_45ba00
add     esp, 4
cmp     [esp+0b4h+var_98], ebx
jnz     short loc_422f64
mov     eax, [esp+0b4h+var_50]
jmp     short loc_422f6a
xor     eax, eax
mov     [esp+0b4h+var_50], eax
movsx   edi, [esp+0b4h+var_a2]
cmp     edi, 4
ja      def_422f78
jmp     ds:jpt_422f78[edi*4]
lea     eax, [esp+0b4h+rc]
mov     ecx, [esp+0b4h+var_90]
mov     edx, [esp+0b4h+var_94]
push    eax
push    ecx
push    edx
call    sub_43b210
lea     eax, [esp+0c0h+rc]
add     esp, 0ch
movsx   ecx, [esp+0b4h+var_78]
movsx   edx, [esp+0b4h+var_76]
mov     [esp+0b4h+var_6c], ecx
push    eax
mov     ebp, [esp+0b8h+var_6c]
push    edx
push    ebp
call    sub_473ca0
lea     eax, [esp+0c0h+var_8c]
lea     ecx, [esp+0c0h+rc]
add     esp, 0ch
push    eax
push    ecx
call    sub_473c30
mov     ecx, [esp+0bch+var_80]
mov     edx, [esp+0bch+var_84]
lea     eax, [esp+0bch+var_12]
add     esp, 8
push    0
push    ecx
push    edx
push    1
push    eax
jmp     loc_42310f
lea     ecx, [esp+0b4h+var_4c]
mov     [esp+0b4h+var_22], eax
lea     eax, [esp+0b4h+var_44]
push    eax
push    ecx
push    405h
push    401h
push    403h
push    ebx
call    sub_423bd0
mov     ecx, [esp+0cch+var_6c]
add     esp, 18h
push    ecx
push    eax
call    sub_423ca0
mov     [esp+0bch+var_1e], eax
add     esp, 8
jmp     def_422f78
mov     eax, dword_4ae1e0
mov     ecx, [eax+esi+4]
mov     edx, [ecx]
mov     eax, [edx+ebp]
test    eax, eax
jz      short loc_423044
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_42304d
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+0b4h+var_74]
push    8
push    ecx
push    10h
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      loc_4230e9
lea     eax, [esp+0b4h+var_44]
lea     ecx, [esp+0b4h+var_4c]
push    eax
push    ecx
push    405h
push    401h
push    403h
push    ebx
call    sub_423bd0
mov     ecx, [esp+0cch+var_6c]
add     esp, 18h
push    ecx
push    eax
call    sub_423ca0
add     esp, 8
mov     esi, eax
movsx   ecx, [esp+0b4h+var_70]
movsx   eax, [esp+0b4h+var_74]
push    ecx
push    eax
push    esi
call    sub_423c60
mov     [esp+0c0h+var_8c], eax
add     esp, 0ch
movsx   ecx, [esp+0b4h+var_6e]
movsx   edx, [esp+0b4h+var_72]
push    ecx
push    edx
push    esi
call    sub_423c60
mov     [esp+0c0h+var_88], eax
add     esp, 0ch
jmp     short loc_4230f9
lea     eax, [esp+0b4h+var_54]
lea     ecx, [esp+0b4h+var_8c]
mov     edx, [esp+0b4h+var_6c]
push    eax
push    ecx
push    edx
push    ebx
call    sub_423d00
add     esp, 10h
test    eax, eax
jnz     short loc_4230f9
mov     eax, [esp+0b4h+var_84]
mov     ecx, [esp+0b4h+var_80]
mov     [esp+0b4h+var_8c], eax
mov     [esp+0b4h+var_88], ecx
mov     eax, [esp+0b4h+var_80]
push    0
mov     ecx, [esp+0b8h+var_84]
push    eax
lea     edx, [esp+0bch+var_12]
push    ecx
push    1
push    edx
call    sub_40dc60
mov     ecx, [esp+0c8h+var_88]
mov     edx, [esp+0c8h+var_8c]
lea     eax, [esp+0c8h+var_12]
add     esp, 14h
push    0
push    ecx
push    edx
push    2
push    eax
call    sub_40dc60
add     esp, 14h
mov     [esp+0b4h+var_22], 0
mov     [esp+0b4h+var_1e], 10000h
cmp     [esp+0b4h+var_6], 0
jz      loc_4233fe
cmp     word ptr [esp+0b4h+var_12], 2
jb      loc_4233fe
lea     eax, [esp+0b4h+var_12]
push    eax
call    sub_40e5d0
mov     eax, [esp+0b8h+var_12+2]
mov     ecx, [esp+0b8h+var_1e]
mov     edx, [esp+0b8h+var_22]
add     esp, 4
push    eax
push    ecx
push    edx
push    0
push    0
push    3f4h
push    ebx
call    sub_42ee00
fstp    [esp+0d0h+var_c8]
add     esp, 8
push    ebx
call    sub_4237c0
mov     [esp+0cch+var_2c], eax
add     esp, 18h
push    3f5h
push    ebx
call    sub_42e360
mov     ecx, [esp+0bch+var_94]
add     esp, 8
push    eax
push    ecx
call    sub_42e310
add     esp, 8
mov     ebp, eax
cmp     ds:dword_4a6aba, 1
jnz     short loc_4231ea
push    ebx
push    2
push    1
call    sub_43bd20
add     esp, 0ch
cmp     [esp+0b4h+var_2c], 0
jz      loc_423306
mov     eax, [esp+0b4h+var_1e]
cmp     [esp+0b4h+var_22], eax
jz      loc_423306
lea     eax, [esp+0b4h+var_54]
push    ebx
mov     ecx, [esp+0b8h+var_90]
push    eax
mov     edx, [esp+0bch+var_94]
push    ecx
mov     [esp+0c0h+var_54], ebx
push    edx
call    sub_423ee0
lea     ecx, [esp+0c4h+var_28]
add     esp, 10h
push    0
push    ecx
call    sub_409e80
lea     ecx, [esp+0bch+var_28]
add     esp, 8
push    2
push    ecx
call    sub_409e80
mov     ecx, [esp+0bch+var_22]
lea     edx, [esp+0bch+var_2c]
mov     eax, [esp+0bch+var_90]
mov     [esp+0bch+var_1a], ecx
mov     ecx, [esp+0bch+var_94]
add     esp, 8
push    edx
push    eax
push    ecx
call    sub_423e50
mov     ecx, [esp+0c0h+var_90]
mov     edx, [esp+0c0h+var_94]
add     esp, 0ch
push    1
push    ebp
push    ecx
push    edx
call    sub_43b5a0
add     esp, 10h
call    sub_4443d0
lea     ecx, [esp+0b4h+var_2c]
mov     edx, [esp+0b4h+var_90]
mov     eax, [esp+0b4h+var_94]
push    ecx
push    edx
push    eax
call    sub_423e10
add     esp, 0ch
test    eax, eax
jz      short loc_4232d8
lea     eax, [esp+0b4h+var_28]
push    1
push    eax
call    sub_409e80
lea     eax, [esp+0bch+var_2c]
mov     ecx, [esp+0bch+var_90]
mov     edx, [esp+0bch+var_94]
add     esp, 8
push    eax
push    ecx
push    edx
call    sub_423e50
add     esp, 0ch
push    200020ch
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jnz     loc_4233ef
mov     [esp+0b4h+var_9c], 1
mov     eax, [esp+0b4h+var_9c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn
xor     esi, esi
cmp     [esp+0b4h+var_a0], esi
jz      short loc_423365
cmp     edi, 2
jl      short loc_423365
cmp     edi, 4
jg      short loc_423365
mov     esi, 1
push    4
mov     eax, [esp+0b8h+var_90]
mov     ecx, [esp+0b8h+var_94]
push    eax
push    ecx
call    sub_43b4a0
mov     ecx, [esp+0c0h+var_90]
mov     edx, [esp+0c0h+var_94]
add     esp, 0ch
push    esi
push    ebp
push    ecx
push    edx
call    sub_43b5a0
mov     ecx, [esp+0c4h+var_94]
add     esp, 10h
push    ecx
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_423365
mov     eax, [esp+0b4h+var_94]
push    eax
call    sub_428ff0
add     esp, 4
mov     eax, [esp+0b4h+var_1e]
lea     ecx, [esp+0b4h+var_12]
push    eax
push    ecx
call    sub_40e3a0
mov     [esp+0bch+var_6c], eax
add     esp, 8
cmp     [esp+0b4h+var_a2], 2
mov     [esp+0b4h+var_68], edx
jnz     short loc_423398
mov     eax, [esp+0b4h+var_1e]
mov     [esp+0b4h+var_50], eax
lea     eax, [esp+0b4h+var_54]
push    ebx
mov     ecx, [esp+0b8h+var_90]
push    eax
mov     edx, [esp+0bch+var_94]
push    ecx
mov     [esp+0c0h+var_54], ebx
push    edx
call    sub_423ee0
mov     edx, [esp+0c4h+var_6c]
add     esp, 10h
cmp     esi, 1
mov     ecx, [esp+0b4h+var_68]
sbb     eax, eax
neg     eax
push    eax
push    0
mov     eax, [esp+0bch+var_90]
push    ecx
push    edx
push    eax
mov     edx, [esp+0c8h+var_94]
push    edx
call    sub_4234a0
lea     ecx, [esp+0cch+var_12]
add     esp, 18h
push    ecx
call    sub_40db70
add     esp, 4
call    sub_4443d0
mov     eax, [esp+0b4h+var_9c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn
lea     eax, [esp+0b4h+var_12]
push    eax
call    sub_40db70
mov     eax, [esp+0b8h+var_90]
mov     ecx, [esp+0b8h+var_94]
add     esp, 4
push    0
push    eax
push    ecx
call    sub_423e50
add     esp, 0ch
cmp     ds:dword_4a6aba, 1
jnz     short loc_423438
push    ebx
push    2
push    1
call    sub_43bd20
add     esp, 0ch
cmp     ds:dword_4a6aba, 2
jnz     short loc_42344e
push    ebx
push    2
push    2
call    sub_43bd20
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn
mov     eax, [esp+arg_10]
push    1
mov     edx, [esp+4+arg_8]
push    eax
mov     ecx, [esp+8+arg_c]
mov     eax, [esp+8+arg_4]
push    ecx
push    edx
mov     edx, [esp+10h+arg_0]
push    eax
push    edx
call    sub_4234a0
add     esp, 18h
retn
mov     ecx, [esp+arg_4]
sub     esp, 34h
lea     eax, [esp+34h+var_34]
push    esi
mov     edx, [esp+38h+arg_0]
push    edi
push    eax
push    ecx
push    edx
call    sub_43b260
add     esp, 0ch
test    eax, eax
jz      loc_42364c
mov     eax, [esp+3ch+arg_8]
cmp     [esp+3ch+var_34], eax
jnz     short loc_4234dc
mov     eax, [esp+3ch+arg_c]
cmp     [esp+3ch+var_30], eax
jz      loc_42364c
mov     edx, [esp+3ch+arg_10]
test    edx, edx
jnz     loc_423580
call    sub_4441e0
mov     eax, [esp+3ch+arg_4]
mov     ecx, [esp+3ch+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_42355b
lea     ecx, [esi+0ch]
lea     edx, [esp+3ch+rc]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
push    edx
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
lea     eax, [esp+40h+arg_8]
mov     ecx, [ecx+0ch]
push    eax
mov     [edx+0ch], ecx
call    sub_473bf0
add     esp, 8
push    0
push    0dh
push    esi
call    dword ptr [esi+6]
mov     ecx, [esp+48h+rc.top]
mov     edx, [esp+48h+rc.left]
add     esp, 0ch
push    ecx
push    edx
push    esi
call    sub_438840
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
cmp     [esp+3ch+arg_14], 0
jz      loc_42364c
mov     eax, [esp+3ch+arg_4]
push    0
mov     ecx, [esp+40h+arg_0]
push    eax
push    ecx
call    sub_423e50
add     esp, 0ch
pop     edi
pop     esi
add     esp, 34h
retn
lea     edi, [esp+3ch+rc]
xor     eax, eax
mov     ecx, 0ah
rep stosd
stosw
xor     esi, esi
lea     eax, [esp+3ch+rc.top]
mov     [esp+3ch+rc.left], edx
push    esi
mov     [esp+40h+rc.right+2], esi
push    eax
mov     [esp+44h+rc.bottom+2], 10000h
call    sub_409e80
lea     eax, [esp+44h+var_12]
mov     [esp+44h+var_16], esi
add     esp, 8
push    eax
call    sub_40db40
mov     eax, [esp+40h+var_30]
mov     ecx, [esp+40h+var_34]
lea     edx, [esp+40h+var_12]
add     esp, 4
push    esi
push    eax
push    ecx
push    1
push    edx
call    sub_40dc60
mov     ecx, [esp+50h+arg_c]
mov     edx, [esp+50h+arg_8]
lea     eax, [esp+50h+var_12]
add     esp, 14h
push    esi
push    ecx
push    edx
push    2
push    eax
call    sub_40dc60
lea     ecx, [esp+50h+var_12]
add     esp, 14h
push    ecx
call    sub_40e5d0
add     esp, 4
cmp     [esp+3ch+var_10], esi
jz      short loc_423624
lea     eax, [esp+3ch+rc]
mov     ecx, [esp+3ch+arg_4]
mov     edx, [esp+3ch+arg_0]
push    eax
push    ecx
push    edx
call    sub_423e50
add     esp, 0ch
pop     edi
pop     esi
add     esp, 34h
retn
lea     eax, [esp+3ch+var_12]
push    eax
call    sub_40db70
add     esp, 4
cmp     [esp+3ch+arg_14], 0
jz      short loc_42364c
mov     eax, [esp+3ch+arg_4]
push    0
mov     ecx, [esp+40h+arg_0]
push    eax
push    ecx
call    sub_423e50
add     esp, 0ch
pop     edi
pop     esi
add     esp, 34h
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    ebp
xor     ebx, ebx
lea     eax, [esi+1ah]
lea     ebp, [esi+4]
mov     [esp+18h+var_8], eax
mov     eax, [esi]
push    eax
push    ebp
call    sub_409f50
add     esp, 8
mov     edi, eax
cmp     edi, 10000h
jle     short loc_4236b8
mov     edi, 10000h
cmp     [esi+16h], ebx
jnz     short loc_4236a6
mov     eax, [esi+0eh]
sub     eax, [esi+12h]
cmp     eax, 1
sbb     ebx, ebx
neg     ebx
jmp     short loc_4236b8
push    0
push    ebp
call    sub_409e80
mov     dword ptr [esi+0ah], 0
add     esp, 8
mov     eax, [esi+0eh]
mov     ebp, [esi+0ah]
cmp     edi, 10000h
jnz     short loc_4236ca
mov     edi, eax
jmp     short loc_4236e2
test    ebp, ebp
jnz     short loc_4236d5
cmp     eax, 10000h
jz      short loc_4236e2
sub     eax, ebp
push    eax
push    edi
call    sub_445cb0
lea     edi, [ebp+eax+0]
mov     eax, [esp+18h+var_8]
push    edi
push    eax
call    sub_40e3a0
add     esp, 8
mov     ecx, edx
cmp     ebx, 1
mov     edx, [esp+18h+arg_4]
pop     ebp
mov     [edx], eax
sbb     eax, eax
mov     [edx+4], ecx
neg     eax
mov     [esi+12h], edi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 10h
push    ebx
push    esi
mov     ebx, [esp+18h+arg_0]
mov     ecx, dword_4ae1e0
mov     esi, ebx
shr     esi, 10h
movsx   eax, si
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_423746
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_42374f
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+18h+var_8]
push    8
push    ecx
push    0ch
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      short loc_4237ae
mov     dx, word ptr [esp+18h+var_8+2]
mov     ecx, [esp+18h+var_8]
mov     word ptr [esp+18h+var_c], dx
and     ecx, 0ffffh
movzx   eax, si
shl     eax, 10h
mov     edx, [esp+18h+var_c]
or      eax, ecx
push    edx
push    eax
call    sub_43b710
add     esp, 8
push    ebx
call    sub_434b70
add     esp, 4
cmp     ds:dword_4a6aba, 2
jnz     short loc_4237ae
push    ebx
push    2
push    2
call    sub_43bd20
add     esp, 0ch
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    esi
push    2010780h
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_423834
mov     ecx, [esp+8+arg_10]
mov     eax, [esp+8+arg_c]
mov     esi, ecx
mov     edx, [esp+8+arg_14]
sub     esi, eax
imul    esi, edx
test    esi, esi
jl      short loc_4237fd
lea     eax, [esi+8000h]
sar     eax, 10h
jmp     short loc_42380d
sub     eax, ecx
imul    eax, edx
add     eax, 8000h
sar     eax, 10h
neg     ax
test    ax, ax
jge     short loc_423815
neg     ax
movsx   eax, ax
mov     [esp+8+var_4], eax
fild    [esp+8+var_4]
fmul    [esp+8+arg_4]
fmul    ds:dbl_4ab020
call    __ftol
pop     esi
add     esp, 4
retn
fldz
fcomp   [esp+8+arg_4]
fnstsw  ax
test    ah, 41h
jnz     short loc_42384b
xor     eax, eax
mov     dword ptr [esp+8+arg_4], eax
mov     dword ptr [esp+8+arg_4+4], eax
fld     [esp+8+arg_4]
fmul    ds:dbl_4ab028
call    __ftol
pop     esi
add     esp, 4
retn
sub     esp, 3ch
push    ebx
push    esi
mov     ebx, [esp+44h+arg_0]
mov     ecx, dword_4ae1e0
mov     esi, ebx
shr     esi, 10h
movsx   eax, si
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_423896
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_42389f
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+44h+var_34]
push    8
push    ecx
push    0ch
push    eax
call    sub_45c8a0
add     esp, 10h
cmp     word ptr [esp+44h+var_34], 0
jz      short loc_4238d1
movzx   eax, si
shl     eax, 10h
mov     ecx, [esp+44h+var_34]
and     ecx, 0ffffh
or      eax, ecx
mov     [esp+44h+var_3c], eax
jmp     short loc_4238d9
mov     [esp+44h+var_3c], 0
mov     ax, word ptr [esp+44h+var_34+2]
mov     word ptr [esp+44h+var_38], ax
mov     eax, [esp+44h+var_38]
mov     ecx, [esp+44h+var_3c]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      loc_423a20
movsx   ecx, word ptr [eax]
add     ecx, eax
mov     eax, [ecx-9ah]
cmp     [ecx-4], ebx
jnz     short loc_423916
mov     esi, 1
test    eax, eax
jz      short loc_423918
xor     esi, esi
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
test    esi, esi
jz      loc_423a17
movsx   eax, [esp+44h+arg_4]
cmp     eax, 3f4h
jz      short loc_42395a
cmp     eax, 3f5h
jz      short loc_4239bb
cmp     eax, 400h
jz      loc_4239f6
push    ebx
call    sub_422c00
add     esp, 4
pop     esi
pop     ebx
add     esp, 3ch
retn
lea     eax, [esp+44h+var_2c]
mov     ecx, [esp+44h+var_38]
mov     edx, [esp+44h+var_3c]
push    eax
push    ecx
push    edx
call    sub_423e10
add     esp, 0ch
test    eax, eax
jz      loc_423a20
mov     esi, [esp+44h+arg_8]
push    2
push    esi
call    sub_41aa60
lea     edx, [esp+4ch+var_2c]
add     esp, 8
mov     eax, [esi+0ch]
mov     ecx, [esi+8]
push    eax
push    ecx
push    edx
push    ebx
call    sub_423b20
lea     ecx, [esp+54h+var_2c]
mov     edx, [esp+54h+var_38]
mov     eax, [esp+54h+var_3c]
add     esp, 10h
push    ecx
push    edx
push    eax
call    sub_423e50
add     esp, 0ch
pop     esi
pop     ebx
add     esp, 3ch
retn
mov     esi, [esp+44h+arg_8]
push    1
push    esi
call    sub_41aa60
mov     ecx, [esp+4ch+var_3c]
add     esp, 8
mov     eax, [esi+8]
push    0
push    eax
push    ecx
call    sub_42e310
mov     ecx, [esp+50h+var_38]
mov     edx, [esp+50h+var_3c]
add     esp, 8
push    eax
push    ecx
push    edx
call    sub_43b5a0
add     esp, 10h
pop     esi
pop     ebx
add     esp, 3ch
retn
mov     eax, [esp+44h+var_38]
mov     ecx, [esp+44h+var_3c]
mov     esi, [esp+44h+arg_8]
push    eax
push    ecx
mov     eax, [esi+8]
push    eax
push    ebx
call    sub_423a30
add     esp, 10h
pop     esi
pop     ebx
add     esp, 3ch
retn
push    ebx
call    sub_422c00
add     esp, 4
pop     esi
pop     ebx
add     esp, 3ch
retn
sub     esp, 2ch
push    esi
push    200020ch
mov     esi, [esp+34h+arg_0]
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 2
jz      short loc_423abc
push    200020ch
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 3
jz      short loc_423abc
cmp     [esp+30h+arg_4], 0
jnz     loc_423b12
lea     eax, [esp+30h+var_2c]
mov     ecx, [esp+30h+arg_c]
mov     edx, [esp+30h+arg_8]
push    eax
push    ecx
push    edx
call    sub_423e10
add     esp, 0ch
test    eax, eax
jz      short loc_423aac
cmp     [esp+30h+var_16], 0
jz      short loc_423aac
lea     eax, [esp+30h+var_2c]
mov     ecx, [esp+30h+arg_c]
mov     edx, [esp+30h+arg_8]
push    eax
mov     [esp+34h+var_16], 0
push    ecx
push    edx
call    sub_423e50
add     esp, 0ch
push    6
push    esi
call    sub_4417a0
add     esp, 8
pop     esi
add     esp, 2ch
retn
lea     eax, [esp+30h+var_2c]
mov     ecx, [esp+30h+arg_c]
mov     edx, [esp+30h+arg_8]
push    eax
push    ecx
push    edx
call    sub_423e10
mov     ecx, [esp+3ch+arg_4]
add     esp, 0ch
test    eax, eax
jnz     short loc_423aed
test    ecx, ecx
jz      short loc_423aed
push    esi
call    sub_422c00
add     esp, 4
pop     esi
add     esp, 2ch
retn
test    eax, eax
jz      short loc_423b12
cmp     [esp+30h+var_16], ecx
jz      short loc_423b12
lea     eax, [esp+30h+var_2c]
mov     edx, [esp+30h+arg_8]
mov     [esp+30h+var_16], ecx
push    eax
mov     ecx, [esp+34h+arg_c]
push    ecx
push    edx
call    sub_423e50
add     esp, 0ch
pop     esi
add     esp, 2ch
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_4]
push    edi
push    ebp
mov     eax, [esi+1ch]
push    eax
mov     ecx, [esi+0eh]
push    ecx
mov     edx, [esi+0ah]
mov     eax, dword ptr [esp+20h+arg_8+4]
push    edx
mov     ecx, dword ptr [esp+24h+arg_8]
push    eax
mov     edx, [esp+28h+arg_0]
push    ecx
push    edx
call    sub_4237c0
add     esp, 18h
mov     ebx, eax
mov     edi, [esi]
test    edi, edi
jz      short loc_423bbb
lea     ebp, [esi+4]
push    ebp
call    sub_409f30
mov     dword ptr [esp+1ch+var_8], eax
add     esp, 4
mov     dword ptr [esp+18h+var_8+4], 0
fild    [esp+18h+var_8]
mov     dword ptr [esp+18h+var_8], edi
mov     dword ptr [esp+18h+var_8+4], 0
fild    [esp+18h+var_8]
mov     dword ptr [esp+18h+var_8], ebx
mov     dword ptr [esp+18h+var_8+4], 0
pushf
cmp     dword_4af150, 0
jnz     short loc_423b9c
fdivp   st(1), st
jmp     short loc_423ba5
push    eax
mov     al, 0dh
call    unknown_libname_3
pop     eax
popf
fild    [esp+18h+var_8]
fmulp   st(1), st
call    __ftol
push    eax
push    ebp
call    sub_409f80
add     esp, 8
pop     ebp
mov     [esi], ebx
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
push    0
push    0
push    eax
push    esi
call    sub_42ee00
mov     ax, word ptr [esp+1ch+arg_c]
mov     edi, [esp+1ch+arg_10]
add     esp, 10h
fstp    qword ptr [edi]
push    0
push    0
push    eax
push    esi
call    sub_42ee00
mov     ebx, [esp+1ch+arg_14]
add     esp, 10h
fst     qword ptr [ebx]
fcomp   qword ptr [edi]
fnstsw  ax
test    ah, 40h
jz      short loc_423c1a
mov     eax, 10000h
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+0ch+arg_8]
push    0
push    0
push    eax
push    esi
call    sub_42ee00
fsub    qword ptr [edi]
fld     qword ptr [ebx]
fsub    qword ptr [edi]
add     esp, 10h
sub     esp, 8
pushf
cmp     dword_4af150, 0
jnz     short loc_423c43
fdivp   st(1), st
jmp     short loc_423c4c
push    eax
mov     al, 0dh
call    unknown_libname_3
pop     eax
popf
fstp    [esp+14h+var_14]
call    sub_445c70
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
mov     edx, [esp+arg_8]
push    esi
mov     esi, edx
mov     ecx, [esp+4+arg_4]
sub     esi, ecx
mov     eax, [esp+4+arg_0]
imul    esi, eax
test    esi, esi
jl      short loc_423c86
add     esi, 8000h
sar     esi, 10h
lea     eax, [esi+ecx]
pop     esi
retn
mov     esi, ecx
sub     esi, edx
imul    esi, eax
add     esi, 8000h
sar     esi, 10h
neg     esi
lea     eax, [esi+ecx]
pop     esi
retn
movsx   eax, [esp+arg_4]
test    eax, eax
jz      short loc_423cb3
cmp     eax, 1
mov     eax, [esp+arg_0]
jz      short loc_423ccf
retn
mov     eax, [esp+arg_0]
test    eax, eax
jge     short loc_423cbe
xor     eax, eax
retn
mov     ecx, 10000h
cmp     eax, 10000h
jg      short loc_423ccc
mov     ecx, eax
mov     eax, ecx
retn
test    eax, eax
jge     short loc_423ce4
mov     ecx, dword_4ad76c
not     ecx
or      ecx, eax
lea     eax, [ecx+10000h]
retn
cmp     eax, 10000h
jle     short locret_423cf1
and     eax, dword_4ad76c
retn
sub     esp, 8
push    ebx
push    esi
mov     ebx, [esp+10h+arg_0]
push    edi
push    ebp
mov     eax, ebx
shr     eax, 10h
mov     ecx, dword_4ae1e0
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_423d38
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_423d41
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+18h+var_8]
push    8
push    ecx
push    10h
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      loc_423df8
mov     edi, [esp+18h+arg_c]
lea     eax, [edi+10h]
lea     ecx, [edi+8]
push    eax
push    ecx
push    405h
push    401h
push    403h
push    ebx
call    sub_423bd0
mov     bp, [esp+30h+arg_4]
add     esp, 18h
push    ebp
push    eax
call    sub_423ca0
movsx   ecx, [esp+20h+var_4]
movsx   edx, [esp+20h+var_8]
add     esp, 8
push    ecx
push    edx
push    eax
call    sub_423c60
mov     esi, [esp+24h+arg_8]
lea     ecx, [edi+20h]
add     esp, 0ch
add     edi, 18h
mov     [esi], eax
push    ecx
push    edi
push    406h
push    402h
push    404h
push    ebx
call    sub_423bd0
add     esp, 18h
push    ebp
push    eax
call    sub_423ca0
movsx   ecx, [esp+20h+var_2]
movsx   edx, [esp+20h+var_6]
add     esp, 8
push    ecx
push    edx
push    eax
call    sub_423c60
add     esp, 0ch
mov     [esi+4], eax
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_423e48
mov     ecx, [esp+4+arg_8]
push    ecx
push    eax
call    sub_438510
add     esp, 8
mov     esi, eax
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_423e88
mov     ecx, [esp+4+arg_8]
push    ecx
push    eax
call    sub_438480
add     esp, 8
mov     esi, eax
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    edi
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_423ed9
mov     eax, [esp+8+arg_8]
push    eax
push    edi
call    sub_438610
mov     edx, [esp+10h+arg_c]
add     esp, 8
mov     esi, eax
push    offset dword_4a61c4
movsx   eax, word ptr [edi]
mov     ecx, [eax+edi-4]
mov     [edx], ecx
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    edi
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_423f27
mov     eax, [esp+8+arg_8]
push    eax
push    esi
call    sub_4385e0
add     esp, 8
mov     edi, eax
movsx   ecx, word ptr [esi]
mov     eax, [esp+8+arg_c]
push    offset dword_4a61c4
mov     [ecx+esi-4], eax
call    sub_412f60
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
cmp     [esp+arg_4], 1
mov     eax, 4
adc     eax, 0ffffffffh
push    eax
mov     eax, [esp+4+arg_0]
add     eax, 4
push    eax
call    sub_409e80
add     esp, 8
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
dec     eax
cmp     eax, 6
ja      def_423f61
jmp     ds:jpt_423f61[eax*4]
call    sub_4755f0
mov     ds:dword_4a6614, eax
test    eax, eax
jnz     short loc_423f7d
mov     eax, 8
pop     esi
retn
call    sub_43cd40
mov     ds:word_4a6618, ax
xor     eax, eax
mov     word ptr [esi+8], 6
mov     ecx, ds:dword_4a6614
mov     dword_4ad7b0, eax
push    ecx
mov     dword_4ad7b4, eax
call    sub_475690
mov     dx, ds:word_4a6618
add     esp, 4
mov     ecx, ds:dword_4a6614
push    eax
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
pop     esi
retn
cmp     word ptr [esi+8], 6
jz      short loc_423fd1
mov     eax, 1389h
pop     esi
retn
mov     eax, [esi+0ah]
mov     edx, offset dword_4a6614
xor     esi, esi
mov     ecx, [eax]
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
mov     dword_4ad7b0, esi
mov     cx, ds:word_4a6618
mov     dword_4ad7b4, esi
push    ecx
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6614, eax
cmp     eax, esi
jnz     def_423f61
mov     eax, 8
pop     esi
retn
mov     edx, [esi+0ah]
mov     ecx, ds:dword_4a6614
mov     eax, offset dword_4a6614
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
mov     edx, ds:dword_4a6614
push    edx
call    sub_475690
mov     dx, ds:word_4a6618
add     esp, 4
mov     ecx, ds:dword_4a6614
push    eax
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
pop     esi
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6618
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ds:dword_4a6614, 0
pop     esi
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
push    0
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a6618
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
pop     esi
retn
mov     eax, ds:dword_4a68c0
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short def_423f61
mov     eax, [esi]
mov     ecx, ds:dword_4a68c0
sub     eax, 7
cmp     eax, 1
sbb     eax, eax
neg     eax
push    eax
push    ecx
call    sub_440b90
add     esp, 8
xor     eax, eax
pop     esi
retn
movsx   eax, [esp+arg_4]
sub     esp, 44h
sub     eax, 3f0h
cmp     eax, 23h
push    esi
ja      def_42411f
xor     ecx, ecx
mov     cl, ds:byte_4241dc[eax]
jmp     ds:jpt_42411f[ecx*4]
mov     eax, [esp+48h+arg_8]
mov     esi, [esp+48h+arg_0]
push    esi
cmp     dword ptr [eax+8], 1
mov     eax, 5
adc     eax, 0ffffffffh
mov     [esp+4ch+var_40], eax
call    sub_461f70
lea     ecx, [esp+4ch+var_40]
mov     [esp+4ch+var_3c], eax
add     esp, 4
push    ecx
push    esi
call    sub_424a90
add     esp, 8
pop     esi
add     esp, 44h
retn
mov     eax, [esp+48h+arg_8]
mov     esi, [esp+48h+arg_0]
mov     [esp+48h+var_40], 10h
mov     ecx, [eax+8]
push    esi
mov     [esp+4ch+var_44], ecx
call    sub_461f70
lea     ecx, [esp+4ch+var_44]
mov     [esp+4ch+var_3c], eax
lea     eax, [esp+4ch+var_40]
mov     [esp+4ch+var_4], ecx
add     esp, 4
push    eax
push    esi
call    sub_424a90
add     esp, 8
pop     esi
add     esp, 44h
retn
mov     [esp+48h+var_40], 0fh
mov     esi, [esp+48h+arg_0]
push    esi
call    sub_461f70
mov     [esp+4ch+var_3c], eax
lea     eax, [esp+4ch+var_40]
add     esp, 4
push    eax
push    esi
call    sub_424a90
add     esp, 8
pop     esi
add     esp, 44h
retn
sub     esp, 0c0h
xor     eax, eax
push    esi
push    edi
mov     esi, [esp+0c8h+lprcdst]
mov     edi, [esp+0c8h+arg_0]
push    edi
mov     [esi], eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
call    sub_463590
add     esp, 4
test    eax, eax
jnz     short loc_42423b
xor     eax, eax
pop     edi
pop     esi
add     esp, 0c0h
retn
push    edi
call    sub_4624e0
add     esp, 4
cmp     eax, 2
jz      short loc_4242b3
cmp     eax, 0bh
jz      loc_42432b
push    edi
call    sub_462c40
add     esp, 4
test    eax, eax
push    esi
push    edi
jnz     short loc_424272
call    sub_462540
add     esp, 8
pop     edi
pop     esi
add     esp, 0c0h
retn
call    sub_42c120
add     esp, 8
test    eax, eax
jnz     short loc_4242a5
cmp     ds:dword_4a6608, 0
jnz     short loc_4242a5
mov     ds:dword_4a6608, 1
push    esi
push    edi
call    sub_4243c0
mov     ds:dword_4a6608, 0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
add     esp, 0c0h
retn
push    edi
call    sub_461f70
mov     [esp+0cch+var_c0], eax
add     esp, 4
mov     word ptr [esp+0c8h+var_bc], 2
mov     eax, [esp+0c8h+var_bc]
mov     ecx, [esp+0c8h+var_c0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_424320
lea     ecx, [esp+0c8h+var_c0]
push    ecx
push    3eh
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
lea     ecx, [esp+0cch+var_b0]
add     esp, 4
mov     eax, [ecx]
mov     edx, [ecx+4]
mov     edi, [ecx+8]
mov     [esi], eax
mov     eax, [ecx+0ch]
mov     [esi+4], edx
mov     [esi+8], edi
pop     edi
mov     [esi+0ch], eax
mov     eax, 1
pop     esi
add     esp, 0c0h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 0c0h
retn
push    esi
push    edi
call    sub_426270
add     esp, 8
pop     edi
pop     esi
add     esp, 0c0h
retn
fild    [esp+arg_8]
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
sub     esp, 8
sub     esp, 8
fstp    [esp+10h+var_10]
push    ecx
push    edx
call    sub_42ee00
fcom    ds:dbl_4ab030
add     esp, 10h
fstp    [esp+8+var_8]
fnstsw  ax
test    ah, 1
jz      short loc_424382
mov     dword ptr [esp+8+var_8], 0
mov     dword ptr [esp+8+var_8+4], 0c0dfffc0h
jmp     short loc_4243a3
fld     [esp+8+var_8]
fcomp   ds:dbl_4ab038
fnstsw  ax
test    ah, 41h
jnz     short loc_4243a3
mov     dword ptr [esp+8+var_8], 0
mov     dword ptr [esp+8+var_8+4], 40dfffc0h
fld     [esp+8+var_8]
call    __ftol
movsx   eax, ax
add     esp, 8
retn
sub     esp, 0e0h
lea     eax, [esp+0e0h+var_e0]
push    ebx
push    esi
push    edi
mov     esi, [esp+0ech+arg_0]
push    eax
push    esi
call    sub_462540
add     esp, 8
test    eax, eax
jnz     short loc_4243f4
xor     eax, eax
mov     [esp+0ech+var_dc], eax
mov     [esp+0ech+var_e0], eax
mov     [esp+0ech+var_d4], eax
mov     [esp+0ech+var_d8], eax
mov     edi, [esp+0ech+var_d8]
mov     ebx, [esp+0ech+var_d4]
sub     edi, [esp+0ech+var_e0]
sub     ebx, [esp+0ech+var_dc]
mov     eax, [esp+0ech+var_e0]
push    eax
push    410h
push    esi
call    sub_424340
mov     [esp+0f8h+var_e0], eax
mov     eax, [esp+0f8h+var_dc]
add     esp, 0ch
push    eax
push    411h
push    esi
call    sub_424340
mov     [esp+0f8h+var_dc], eax
add     esp, 0ch
push    edi
push    412h
push    esi
call    sub_424340
add     esp, 0ch
mov     edi, eax
push    ebx
push    413h
push    esi
call    sub_424340
mov     ecx, [esp+0f8h+var_e0]
add     esp, 0ch
add     ecx, edi
mov     [esp+0ech+var_d8], ecx
mov     ecx, [esp+0ech+var_dc]
add     ecx, eax
mov     eax, 0fffffc18h
mov     [esp+0ech+var_d4], ecx
cmp     [esp+0ech+var_e0], eax
jge     short loc_424475
mov     [esp+0ech+var_e0], eax
mov     eax, 7d0h
cmp     [esp+0ech+var_e0], eax
jle     short loc_424484
mov     [esp+0ech+var_e0], eax
mov     eax, 0fffffc18h
cmp     [esp+0ech+var_dc], eax
jge     short loc_424493
mov     [esp+0ech+var_dc], eax
mov     eax, 7d0h
cmp     [esp+0ech+var_dc], eax
jle     short loc_4244a2
mov     [esp+0ech+var_dc], eax
mov     eax, 0fffffc18h
cmp     [esp+0ech+var_d8], eax
jge     short loc_4244b1
mov     [esp+0ech+var_d8], eax
mov     eax, 7d0h
cmp     [esp+0ech+var_d8], eax
jle     short loc_4244c0
mov     [esp+0ech+var_d8], eax
mov     eax, 0fffffc18h
cmp     [esp+0ech+var_d4], eax
jge     short loc_4244cf
mov     [esp+0ech+var_d4], eax
mov     eax, 7d0h
cmp     [esp+0ech+var_d4], eax
jle     short loc_4244de
mov     [esp+0ech+var_d4], eax
mov     eax, [esp+0ech+var_e0]
cmp     [esp+0ech+var_d8], eax
jge     short loc_4244ec
mov     [esp+0ech+var_d8], eax
mov     eax, [esp+0ech+var_d4]
cmp     [esp+0ech+var_dc], eax
jle     short loc_4244fe
mov     eax, [esp+0ech+var_dc]
mov     [esp+0ech+var_d4], eax
xor     edi, edi
lea     eax, [esp+0ech+var_d0]
push    eax
push    esi
call    sub_42c120
add     esp, 8
test    eax, eax
jz      short loc_42453a
mov     eax, [esp+0ech+var_e0]
cmp     [esp+0ech+var_d0], eax
jnz     short loc_42453a
mov     eax, [esp+0ech+var_dc]
cmp     [esp+0ech+var_cc], eax
jnz     short loc_42453a
mov     eax, [esp+0ech+var_d8]
cmp     [esp+0ech+var_c8], eax
jnz     short loc_42453a
mov     eax, [esp+0ech+var_d4]
cmp     [esp+0ech+var_c4], eax
jz      short loc_42453f
mov     edi, 1
test    edi, edi
jz      loc_4245e4
lea     eax, [esp+0ech+var_e0]
push    eax
push    esi
call    sub_42c0d0
mov     [esp+0f4h+var_c0], esi
add     esp, 8
mov     word ptr [esp+0ech+var_bc], 1
mov     eax, [esp+0ech+var_bc]
mov     ecx, [esp+0ech+var_c0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_4245d6
lea     edi, [esp+0ech+var_c0]
xor     eax, eax
mov     ecx, 2fh
lea     edx, [esp+0ech+var_e0]
rep stosd
stosw
lea     ecx, [esp+0ech+var_b0]
mov     eax, [edx]
mov     edi, [edx+4]
push    0
push    8
mov     [ecx], eax
mov     eax, [edx+8]
push    ebx
mov     edx, [edx+0ch]
mov     [ecx+4], edi
mov     [ecx+8], eax
mov     [ecx+0ch], edx
call    dword ptr [ebx+6]
lea     ecx, [esp+0f8h+var_c0]
add     esp, 0ch
push    ecx
push    0bh
push    ebx
call    dword ptr [ebx+6]
add     esp, 0ch
push    0
push    8
push    ebx
call    dword ptr [ebx+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
lea     eax, [esp+0ech+var_d0]
push    eax
push    esi
call    sub_4372e0
add     esp, 8
mov     edx, [esp+0ech+arg_4]
test    edx, edx
jz      short loc_42460b
mov     ebx, [esp+0ech+var_dc]
mov     esi, [esp+0ech+var_d8]
lea     ecx, [esp+0ech+var_e0]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+0ch]
mov     [edx+4], ebx
mov     [edx+8], esi
mov     [edx+0ch], eax
pop     edi
pop     esi
pop     ebx
add     esp, 0e0h
retn
mov     eax, [esp+arg_0]
mov     ecx, ds:dword_4a6614
push    eax
push    ecx
call    sub_475650
add     esp, 8
retn
mov     eax, dword ptr [esp+arg_0]
mov     ecx, dword ptr [esp+arg_4]
push    eax
mov     edx, ds:dword_4a6614
push    ecx
push    edx
call    sub_4757b0
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
mov     ecx, ds:dword_4a6614
push    eax
push    ecx
call    sub_475770
add     esp, 8
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
mov     edx, ds:dword_4a6614
push    ecx
push    1
push    edx
call    sub_4758a0
add     esp, 10h
retn
sub     esp, 28h
push    ebx
push    esi
mov     ebx, [esp+30h+arg_4]
push    edi
mov     esi, [esp+34h+arg_0]
push    ebp
xor     eax, eax
mov     [esp+38h+var_18], ebx
mov     [esp+38h+var_10], ax
mov     [esp+38h+var_14], esi
mov     [esp+38h+var_e], ax
mov     [esp+38h+var_8], eax
mov     [esp+38h+var_c], ax
lea     ecx, [esp+38h+var_18]
mov     [esp+38h+var_a], ax
push    ecx
mov     [esp+3ch+var_4], 1
push    offset sub_4249e0
push    eax
push    esi
call    sub_4620e0
add     esp, 10h
mov     edi, eax
cmp     ebx, 0eh
ja      def_424700
xor     eax, eax
mov     al, ds:byte_4249c8[ebx]
jmp     ds:jpt_424700[eax*4]
push    esi
call    sub_42fa20
add     esp, 4
cmp     [esp+38h+var_8], 0
jz      short loc_424766
mov     [esp+38h+var_28], esi
mov     word ptr [esp+38h+var_24], 2
mov     eax, [esp+38h+var_24]
mov     ecx, [esp+38h+var_28]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_424752
movsx   ecx, word ptr [eax]
mov     word ptr [ecx+eax-0a0h], 0
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
push    esi
call    sub_43fdc0
add     esp, 4
push    1
push    esi
call    sub_426020
add     esp, 8
cmp     [esp+38h+var_10], 0
jz      short loc_424794
mov     cx, [esp+38h+var_e]
xor     eax, eax
cmp     [esp+38h+var_10], cx
jle     short loc_424787
push    1
push    esi
call    sub_437ee0
add     esp, 8
test    eax, eax
jnz     short loc_424794
push    esi
call    sub_437c00
add     esp, 4
cmp     [esp+38h+var_a], 0
jle     def_424700
push    0
push    1
push    0
call    sub_42ba50
add     esp, 0ch
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
call    sub_42fb00
push    0
push    esi
call    sub_433c40
add     esp, 8
push    esi
call    sub_433da0
add     esp, 4
cmp     [esp+38h+var_8], 0
jz      loc_4248a2
push    esi
call    sub_440b50
add     esp, 4
cmp     eax, 1
sbb     eax, eax
neg     eax
test    eax, eax
jnz     loc_424897
push    2070204h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jnz     loc_424897
mov     [esp+38h+var_28], esi
push    esi
mov     word ptr [esp+3ch+var_24], 2
call    sub_440c60
add     esp, 4
push    0
push    esi
call    sub_440d30
mov     eax, [esp+40h+var_24]
mov     ecx, [esp+40h+var_28]
add     esp, 8
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_4248a2
mov     eax, [ebx+62h]
push    eax
call    sub_419620
mov     bp, ax
add     esp, 4
call    sub_43d470
movsx   ecx, word ptr [ebx]
mov     [ecx+ebx-0a0h], ax
movsx   eax, word ptr [ebx]
cmp     bp, 4
mov     dword ptr [eax+ebx-8], 1
jz      short loc_42487d
test    bp, bp
jz      short loc_42487d
push    0
push    8
jmp     short loc_424881
push    0
push    7
push    ebx
call    dword ptr [ebx+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
jmp     short loc_4248a2
push    2
push    esi
call    sub_43ad00
add     esp, 8
mov     ax, [esp+38h+var_e]
cmp     [esp+38h+var_10], ax
jle     def_424700
test    ax, ax
jz      short loc_4248cc
push    0
push    esi
call    sub_437ee0
add     esp, 8
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
push    esi
call    sub_437e50
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
call    sub_42fb00
cmp     [esp+38h+var_8], 0
jz      def_424700
push    esi
call    sub_440c60
add     esp, 4
push    0
push    esi
call    sub_440d30
add     esp, 8
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
call    sub_42bcb0
push    esi
call    sub_42fa20
add     esp, 4
cmp     [esp+38h+var_8], 0
jz      short loc_424987
lea     eax, [esp+38h+var_28]
push    eax
push    esi
call    sub_43ff00
add     esp, 8
push    1
push    esi
call    sub_440ca0
add     esp, 8
test    eax, eax
jz      short loc_42495f
push    2070308h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_424968
push    1
push    esi
call    sub_440d30
add     esp, 8
jmp     short loc_424968
push    esi
call    sub_43fdc0
add     esp, 4
cmp     ebx, 3
jnz     short loc_42497b
call    sub_438240
test    eax, eax
mov     eax, 1
jz      short loc_42497d
xor     eax, eax
push    eax
push    esi
call    sub_426020
add     esp, 8
cmp     [esp+38h+var_10], 0
jz      short loc_424998
push    esi
call    sub_437c00
add     esp, 4
push    0
push    1
push    0
call    sub_42ba50
add     esp, 0ch
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
sub     esp, 40h
push    esi
push    edi
mov     esi, [esp+48h+arg_0]
push    esi
call    sub_4624e0
add     esp, 4
mov     edi, eax
push    1000102h
push    esi
call    sub_462670
movzx   eax, ax
add     esp, 8
cmp     edi, 2
jz      short loc_424a27
cmp     edi, 5
jz      short loc_424a34
mov     edi, [esp+48h+arg_4]
test    eax, eax
jz      short loc_424a5c
cmp     dword ptr [edi], 0
jz      short loc_424a46
mov     eax, 1
pop     edi
pop     esi
add     esp, 40h
retn
mov     edi, [esp+48h+arg_4]
mov     dword ptr [edi+10h], 1
jmp     short loc_424a13
mov     edi, [esp+48h+arg_4]
inc     word ptr [edi+8]
test    eax, eax
jz      short loc_424a5c
inc     word ptr [edi+0ah]
jmp     short loc_424a13
mov     ax, [edi+0ch]
inc     ax
mov     [edi+0ch], ax
push    eax
push    esi
call    sub_424640
add     esp, 8
jmp     short loc_424a63
mov     dword ptr [edi+14h], 0
mov     eax, [edi]
mov     ecx, [edi+4]
mov     [esp+48h+var_40], eax
mov     [esp+48h+var_3c], ecx
lea     eax, [esp+48h+var_40]
mov     [esp+48h+var_4], edi
push    eax
push    esi
call    sub_424a90
add     esp, 8
pop     edi
pop     esi
add     esp, 40h
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
cmp     dword ptr [edi], 6
jnz     short loc_424aa4
mov     eax, [edi+8]
mov     esi, [esp+8+arg_0]
jmp     short loc_424ab1
mov     esi, [esp+8+arg_0]
push    esi
call    sub_4624e0
add     esp, 4
mov     eax, dword_4ad780[eax*4]
test    eax, eax
jz      short loc_424ac6
push    edi
push    esi
call    eax
add     esp, 8
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
push    ebp
mov     edi, [ebx+32h]
cmp     dword ptr [ebx], 6
jnz     loc_424bb1
test    edi, edi
jz      short loc_424b14
cmp     byte ptr [edi], 0
jnz     short loc_424b14
push    2070102h
mov     eax, [ebx+4]
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_424b14
mov     eax, 1
pop     ebp
mov     dword ptr [ebx+38h], 0
pop     edi
pop     esi
pop     ebx
retn
mov     ebp, dword ptr [esp+10h+arg_0]
push    1010102h
push    ebp
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_424b3c
mov     eax, 1
pop     ebp
mov     dword ptr [ebx+38h], 1
pop     edi
pop     esi
pop     ebx
retn
test    edi, edi
jnz     short loc_424b51
mov     eax, 1
pop     ebp
mov     dword ptr [ebx+38h], 0
pop     edi
pop     esi
pop     ebx
retn
xor     esi, esi
push    1010204h
push    ebp
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_424b7c
push    ebp
call    sub_433d50
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_424b7c
call    sub_4755f0
mov     esi, eax
push    esi
mov     eax, [ebx+4]
push    eax
call    sub_4269b0
add     esp, 4
movsx   eax, ax
push    eax
push    edi
push    ebp
call    sub_45adb0
add     esp, 10h
mov     [ebx+38h], eax
test    esi, esi
jz      short loc_424bb1
push    esi
push    ebp
call    sub_433cc0
add     esp, 8
push    esi
call    sub_475600
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+20h+arg_0]
push    3090002h
push    edi
call    sub_462670
add     esp, 8
movzx   ebp, ax
push    10b0520h
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_424c07
push    10b0780h
mov     esi, 1
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_424c09
xor     esi, esi
mov     ebx, [esp+20h+arg_4]
mov     ecx, [ebx]
cmp     ecx, 0fh
ja      def_424c20
xor     eax, eax
mov     al, ds:byte_424e2c[ecx]
jmp     ds:jpt_424c20[eax*4]
push    edi
call    sub_462c40
add     esp, 4
test    eax, eax
jz      short loc_424c87
push    0
push    edi
call    sub_4243c0
add     esp, 8
push    0
push    410h
push    edi
push    2
call    sub_441440
add     esp, 10h
push    0
push    411h
push    edi
push    2
call    sub_441440
add     esp, 10h
push    0
push    412h
push    edi
push    2
call    sub_441440
add     esp, 10h
push    0
push    413h
push    edi
push    2
call    sub_441440
add     esp, 10h
push    edi
call    sub_424620
add     esp, 4
test    eax, eax
jz      short loc_424ca5
push    edi
call    sub_42b8e0
add     esp, 4
test    eax, eax
jnz     def_424c20
test    ebp, ebp
jnz     short loc_424cb1
test    esi, esi
jz      def_424c20
xor     dx, dx
mov     ecx, [ebx+3ch]
test    ebp, ebp
jz      short loc_424cbf
mov     dx, 1
test    esi, esi
jz      short loc_424cc6
or      dl, 2
mov     ax, [ecx+0eh]
push    edx
inc     ax
mov     [ecx+0eh], ax
push    eax
push    edi
call    sub_42b870
add     esp, 0ch
jmp     def_424c20
test    ebp, ebp
jnz     short loc_424ce8
test    esi, esi
jz      short loc_424cf1
push    edi
call    sub_42b9e0
add     esp, 4
push    edi
call    sub_462c40
add     esp, 4
test    eax, eax
jz      short loc_424d07
push    edi
call    sub_42c190
add     esp, 4
push    2
push    edi
call    sub_4417a0
jmp     short loc_424d5e
push    1000102h
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short def_424c20
test    ebp, ebp
jnz     short loc_424d2c
test    esi, esi
jz      short def_424c20
push    0
push    edi
call    sub_42b9a0
jmp     short loc_424d5e
test    ebp, ebp
jnz     short loc_424d3e
test    esi, esi
jz      short loc_424d49
push    1
push    edi
call    sub_42b9a0
add     esp, 8
push    edi
call    sub_462c40
add     esp, 4
test    eax, eax
jz      short def_424c20
push    0
push    edi
call    sub_4243c0
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     ecx, 4
cmp     ecx, 1
sbb     eax, eax
neg     eax
push    eax
push    edi
call    sub_42b9c0
add     esp, 8
push    1
push    1
push    0
call    sub_42ba50
add     esp, 0ch
jmp     short def_424c20
test    esi, esi
jnz     short loc_424de8
lea     eax, [esp+20h+rc]
push    eax
push    edi
call    sub_424200
add     esp, 8
test    eax, eax
jz      short loc_424de8
mov     edx, [ebx+18h]
lea     eax, [ebx+14h]
push    edx
mov     ebp, ds:ptinrect
mov     ecx, [eax]
lea     eax, [esp+24h+rc]
push    ecx
push    eax
call    ebp
test    eax, eax
jz      short loc_424de8
cmp     dword ptr [ebx+1ch], 0
jnz     short loc_424ddc
push    10b0780h
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_424de8
mov     dword ptr [ebx+38h], 1
jmp     def_424c20
mov     dword ptr [ebx+38h], 0
jmp     def_424c20
push    edi
call    sub_427390
add     esp, 4
jmp     def_424c20
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     eax, [esi]
cmp     eax, 1
jz      short loc_424e6e
cmp     eax, 6
jz      short loc_424e85
cmp     eax, 7
jz      loc_424ef7
mov     edi, [esp+0ch+arg_0]
push    esi
push    edi
call    sub_424bc0
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
mov     edi, [esp+0ch+arg_0]
mov     eax, ds:dword_4a6770+2
mov     edx, [eax]
movsx   ecx, di
and     word ptr [edx+ecx*4+4], 7fffh
jmp     short loc_424e60
mov     edi, [esp+0ch+arg_0]
push    10b0780h
push    edi
call    sub_462670
movzx   ebx, ax
add     esp, 8
test    ebx, ebx
jnz     short loc_424eb6
push    10b0520h
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
mov     eax, 1
jnz     short loc_424eb8
xor     eax, eax
test    eax, eax
jnz     short loc_424ef0
cmp     dword ptr [esi+1ch], 0
jnz     short loc_424ec6
test    ebx, ebx
jnz     short loc_424ef0
mov     cx, [esi+30h]
lea     eax, [esi+2ch]
push    ecx
mov     edx, [eax]
push    edx
push    1eh
push    edi
call    sub_4261f0
add     esp, 10h
test    eax, eax
jz      short loc_424ef0
mov     eax, 1
pop     edi
mov     dword ptr [esi+38h], 1
pop     esi
pop     ebx
retn
mov     dword ptr [esi+38h], 0
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 18h
push    esi
push    edi
mov     esi, [esp+20h+arg_4]
mov     eax, [esi]
cmp     eax, 0fh
ja      def_424f1c
xor     ecx, ecx
mov     cl, ds:byte_425130[eax]
jmp     ds:jpt_424f1c[ecx*4]
mov     edi, [esp+20h+arg_0]
mov     eax, ds:dword_4a6770+2
mov     edx, [eax]
push    edi
movsx   ecx, di
or      byte ptr [edx+ecx*4+7], 2
call    sub_462c40
add     esp, 4
test    eax, eax
jz      def_424f1c
push    0
push    edi
call    sub_4243c0
add     esp, 8
push    0
push    410h
push    edi
push    2
call    sub_441440
add     esp, 10h
push    0
push    411h
push    edi
push    2
call    sub_441440
add     esp, 10h
push    0
push    412h
push    edi
push    2
call    sub_441440
add     esp, 10h
push    0
push    413h
push    edi
push    2
call    sub_441440
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
add     esp, 18h
retn
mov     edi, [esp+20h+arg_0]
push    edi
call    sub_462c40
add     esp, 4
test    eax, eax
jz      short loc_424fbf
push    edi
call    sub_42c190
add     esp, 4
mov     eax, ds:dword_4a6770+2
push    2
mov     edx, [eax]
push    edi
movsx   ecx, di
and     word ptr [edx+ecx*4+4], 7fffh
call    sub_4417a0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
add     esp, 18h
retn
mov     edi, [esp+20h+arg_0]
push    edi
call    sub_462c40
add     esp, 4
test    eax, eax
jz      def_424f1c
push    0
push    edi
call    sub_4243c0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
add     esp, 18h
retn
lea     eax, [esp+20h+rc]
mov     edi, [esp+20h+arg_0]
mov     dword ptr [esi+38h], 0
push    eax
push    edi
call    sub_424200
add     esp, 8
test    eax, eax
jz      def_424f1c
mov     edx, [esi+28h]
lea     eax, [esi+24h]
push    edx
mov     ecx, [eax]
lea     eax, [esp+24h+rc]
push    ecx
push    eax
call    ds:ptinrect
test    eax, eax
jz      def_424f1c
mov     ds:dword_4a660c, 0
push    1090520h
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_425092
lea     eax, [esi+2ch]
mov     edx, offset dword_4a660c
pop     edi
mov     ecx, [eax]
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
mov     eax, 1
mov     dword ptr [esi+38h], 1
pop     esi
add     esp, 18h
retn
lea     eax, [esp+20h+var_18]
push    eax
push    27h
push    edi
call    sub_426110
add     esp, 0ch
test    eax, eax
jz      short loc_4250cc
mov     eax, [esp+20h+var_18]
cmp     [esi+2ch], eax
jnz     short loc_4250cc
mov     ax, [esp+20h+var_14]
cmp     [esi+30h], ax
jnz     short loc_4250cc
mov     eax, 1
pop     edi
mov     dword ptr [esi+38h], 1
pop     esi
add     esp, 18h
retn
mov     eax, 1
pop     edi
mov     dword ptr [esi+38h], 0
pop     esi
add     esp, 18h
retn
mov     edi, [esp+20h+arg_0]
push    edi
call    sub_427390
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
add     esp, 18h
retn
mov     edi, [esp+20h+arg_0]
push    edi
call    sub_425bb0
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
add     esp, 18h
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     eax, [edi]
cmp     eax, 0eh
ja      def_425159
xor     ecx, ecx
mov     cl, ds:byte_42526c[eax]
jmp     ds:jpt_425159[ecx*4]
mov     esi, [esp+8+arg_0]
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
push    80h
push    3f0h
push    esi
or      byte ptr [edx+ecx*4+7], 2
push    2
call    sub_441440
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
retn
mov     esi, [esp+8+arg_0]
push    2
push    esi
call    sub_4417a0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
retn
mov     esi, [esp+8+arg_0]
push    0
push    esi
call    sub_437f50
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
retn
mov     esi, [esp+8+arg_0]
push    1
push    3f0h
push    esi
call    sub_42ed80
add     esp, 0ch
test    eax, eax
jz      short def_425159
push    1
push    esi
call    sub_437f50
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
retn
mov     esi, [esp+8+arg_0]
push    esi
call    sub_424620
add     esp, 4
test    eax, eax
jnz     short loc_425214
push    esi
call    sub_461f70
add     esp, 4
cmp     eax, ds:dword_4a68c0
jnz     short def_425159
cmp     ds:dword_4a68ae, 2
jnz     short def_425159
mov     eax, [edi]
sub     eax, 4
cmp     eax, 1
sbb     eax, eax
neg     eax
push    eax
push    esi
call    sub_437f50
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
retn
mov     eax, [edi+0ch]
sub     eax, [esp+8+arg_0]
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     [edi+38h], eax
mov     eax, 1
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_4]
cmp     dword ptr [esi], 6
jnz     short loc_42529e
mov     eax, [esp+4+arg_0]
mov     ecx, [esi+20h]
push    eax
push    ecx
call    sub_42fd40
add     esp, 8
mov     [esi+38h], eax
mov     eax, 1
pop     esi
retn
mov     ecx, [esp+arg_4]
sub     esp, 8
push    esi
mov     eax, [ecx]
push    edi
cmp     eax, 0fh
ja      def_4252cc
xor     edx, edx
mov     dl, ds:byte_42559c[eax]
jmp     ds:jpt_4252cc[edx*4]
mov     edi, [esp+10h+arg_0]
push    1
mov     [esp+14h+var_8], edi
push    3f0h
mov     word ptr [esp+18h+var_4], 1
push    edi
call    sub_42ed80
add     esp, 0ch
mov     esi, eax
push    edi
call    sub_462c40
add     esp, 4
test    eax, eax
jz      short loc_425349
push    0
push    410h
push    edi
push    2
call    sub_441440
add     esp, 10h
push    0
push    411h
push    edi
push    2
call    sub_441440
add     esp, 10h
push    0
push    412h
push    edi
push    2
call    sub_441440
add     esp, 10h
push    0
push    413h
push    edi
push    2
call    sub_441440
add     esp, 10h
mov     eax, [esp+10h+var_4]
push    esi
mov     ecx, [esp+14h+var_8]
push    eax
push    ecx
call    sub_427480
shl     si, 9
add     esp, 0ch
mov     edx, ds:dword_4a6770+2
movsx   ecx, di
mov     eax, [edx]
push    80h
push    3f0h
push    edi
lea     ecx, [eax+ecx*4+6]
push    2
mov     ax, [ecx]
xor     si, ax
and     si, 200h
xor     si, ax
mov     [ecx], si
call    sub_441440
add     esp, 10h
push    3090002h
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jz      def_4252cc
push    0
push    0
push    0
call    sub_42ba50
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
mov     edi, [esp+10h+arg_0]
push    1
push    edi
call    sub_43ad00
add     esp, 8
push    edi
call    sub_462c40
add     esp, 4
test    eax, eax
jz      short loc_4253ea
push    edi
call    sub_42c190
add     esp, 4
mov     eax, ds:dword_4a6770+2
push    3090002h
mov     edx, [eax]
push    edi
movsx   ecx, di
and     word ptr [edx+ecx*4+6], 0fdffh
call    sub_462670
add     esp, 8
test    ax, ax
jz      def_4252cc
push    0
push    0
push    0
call    sub_42ba50
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
mov     edi, [esp+10h+arg_0]
push    1000102h
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jnz     def_4252cc
push    0
push    edi
call    sub_428780
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
mov     edi, [esp+10h+arg_0]
push    1
push    edi
call    sub_428780
add     esp, 8
test    eax, eax
jnz     loc_42554b
mov     [esp+10h+var_8], edi
push    1
mov     word ptr [esp+14h+var_4], 1
push    3f0h
push    edi
call    sub_42ed80
mov     ecx, [esp+1ch+var_8]
add     esp, 0ch
push    eax
mov     eax, [esp+14h+var_4]
push    eax
push    ecx
call    sub_427480
add     esp, 0ch
push    80h
push    3f0h
push    edi
push    2
call    sub_441440
add     esp, 10h
jmp     loc_42554b
sub     eax, 4
mov     edi, [esp+10h+arg_0]
cmp     eax, 1
sbb     esi, esi
neg     esi
push    esi
push    edi
call    sub_428720
mov     eax, ds:dword_4a6770+2
movsx   ecx, di
mov     edx, [eax]
shl     si, 9
add     esp, 8
lea     eax, [edx+ecx*4+6]
pop     edi
mov     cx, [eax]
xor     si, cx
and     si, 200h
xor     si, cx
mov     [eax], si
mov     eax, 1
pop     esi
add     esp, 8
retn
mov     eax, [ecx+0ch]
sub     eax, [esp+10h+arg_0]
pop     edi
pop     esi
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     [ecx+38h], eax
mov     eax, 1
add     esp, 8
retn
mov     edi, [esp+10h+arg_0]
push    1
mov     word ptr [esp+14h+var_4], 1
mov     [esp+14h+var_8], edi
mov     eax, [esp+14h+var_4]
push    eax
push    edi
call    sub_427480
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
mov     edi, [esp+10h+arg_0]
push    edi
call    sub_462c40
add     esp, 4
test    eax, eax
jz      short def_4252cc
push    0
push    edi
call    sub_4243c0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    10106c0h
push    esi
call    sub_462670
mov     di, ax
add     esp, 8
cmp     di, 2
jz      short loc_4255e4
push    1000102h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4255e4
mov     di, 2
mov     ax, di
pop     edi
pop     esi
retn
sub     esp, 20h
push    esi
push    edi
mov     edi, [esp+28h+arg_4]
mov     eax, [edi]
cmp     eax, 10h
ja      def_42560c
xor     ecx, ecx
mov     cl, ds:byte_4258a0[eax]
jmp     ds:jpt_42560c[ecx*4]
mov     esi, [esp+28h+arg_0]
mov     eax, ds:dword_4a6770+2
mov     edx, [eax]
movsx   ecx, si
or      byte ptr [edx+ecx*4+7], 2
jmp     loc_425708
mov     esi, [esp+28h+arg_0]
push    esi
call    sub_4255b0
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_425650
cmp     eax, 2
jz      short loc_425677
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
mov     [esp+28h+var_1c], 0
mov     [esp+28h+var_20], esi
mov     ecx, [esp+28h+var_1c]
push    ecx
push    esi
push    5
call    sub_43eb00
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
cmp     dword ptr [edi], 2
jnz     short loc_4256a6
push    3f3h
push    esi
call    sub_441ad0
add     esp, 8
or      al, 40h
push    eax
push    3f3h
push    esi
call    sub_441b10
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
push    2
push    esi
call    sub_4417a0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
mov     esi, [esp+28h+arg_0]
push    0
push    3f3h
push    esi
call    sub_42ed80
add     esp, 0ch
mov     [edi+38h], eax
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
mov     eax, [edi+3ch]
cmp     dword ptr [eax], 0
jz      def_42560c
mov     esi, [esp+28h+arg_0]
push    0
push    esi
call    sub_43c630
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
mov     esi, [esp+28h+arg_0]
push    esi
call    sub_4255b0
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_425729
cmp     eax, 2
jz      short loc_425756
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
mov     [esp+28h+var_20], esi
push    1
mov     [esp+2ch+var_1c], 0
mov     eax, [esp+2ch+var_20]
mov     ecx, [esp+2ch+var_1c]
push    ecx
push    eax
push    5
call    sub_43ea30
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
cmp     dword ptr [edi], 0
jnz     short loc_4257b4
push    80h
push    3f3h
push    esi
push    2
call    sub_441440
add     esp, 10h
test    eax, eax
jz      def_42560c
lea     eax, [esp+28h+var_18]
push    eax
push    0
push    3f3h
push    esi
call    sub_42ed80
add     esp, 0ch
push    eax
call    sub_41b000
lea     eax, [esp+30h+var_18]
add     esp, 8
push    eax
push    3f3h
push    esi
call    sub_441a50
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
lea     eax, [esp+28h+var_18]
push    eax
push    3f3h
push    esi
call    sub_4419e0
add     esp, 0ch
test    eax, eax
jz      def_42560c
push    0
push    3f3h
push    esi
call    sub_42ed80
add     esp, 0ch
mov     edi, eax
push    3f3h
push    esi
call    sub_441ad0
and     ax, 0ffbfh
add     esp, 8
push    eax
push    3f3h
push    esi
call    sub_441b10
add     esp, 0ch
cmp     [esp+28h+var_10], 0
jnz     short loc_42584e
test    edi, edi
jz      short loc_42584e
lea     eax, [esp+28h+var_18]
cmp     edi, 1
push    eax
sbb     eax, eax
neg     eax
push    eax
call    sub_41b000
lea     ecx, [esp+30h+var_18]
add     esp, 8
push    ecx
push    3f3h
push    esi
call    sub_441a50
add     esp, 0ch
push    3f3h
push    esi
call    sub_441b60
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
cmp     [esp+28h+var_10], edi
jz      short def_42560c
lea     eax, [esp+28h+var_18]
push    eax
push    edi
call    sub_41b000
lea     eax, [esp+30h+var_18]
add     esp, 8
push    eax
push    3f3h
push    esi
call    sub_441a50
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
add     esp, 20h
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_4]
mov     eax, [esi]
cmp     eax, 0ch
ja      def_4258dc
xor     ecx, ecx
mov     cl, ds:byte_425b28[eax]
jmp     ds:jpt_4258dc[ecx*4]
mov     ebx, [esp+10h+arg_0]
push    5
push    ebx
call    sub_43ad00
add     esp, 8
mov     eax, 1
pop     esi
pop     ebx
add     esp, 8
retn
mov     word ptr [esp+10h+var_4], 5
mov     ebx, [esp+10h+arg_0]
mov     [esp+10h+var_8], ebx
mov     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+var_8]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jz      loc_425a62
push    1010640h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jz      def_4258dc
push    0
push    0
push    3f1h
push    ebx
call    sub_42ee00
fmul    ds:dbl_4ab048
add     esp, 10h
call    __ftol
push    0
push    eax
push    ebx
call    sub_42ac20
add     esp, 0ch
mov     eax, 1
pop     esi
pop     ebx
add     esp, 8
retn
mov     ebx, [esp+10h+arg_0]
push    1
push    3f0h
push    ebx
call    sub_42ed80
add     esp, 0ch
mov     [esi+38h], eax
mov     eax, 1
pop     esi
pop     ebx
add     esp, 8
retn
mov     ebx, [esp+10h+arg_0]
push    1010430h
push    ebx
call    sub_462670
movzx   eax, ax
add     esp, 8
cmp     eax, 1
jl      def_4258dc
cmp     eax, 3
jg      def_4258dc
push    ebx
call    sub_42ad70
add     esp, 4
mov     eax, 1
pop     esi
pop     ebx
add     esp, 8
retn
xor     esi, esi
push    1010430h
mov     ebx, [esp+14h+arg_0]
push    ebx
call    sub_462670
movzx   eax, ax
add     esp, 8
cmp     eax, 1
jz      short loc_4259ff
cmp     eax, 2
jz      short loc_425a2b
cmp     eax, 3
jz      short loc_425a13
mov     eax, 1
pop     esi
pop     ebx
add     esp, 8
retn
push    ebx
call    sub_42adf0
add     esp, 4
mov     eax, 1
pop     esi
pop     ebx
add     esp, 8
retn
push    1010640h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_425a2b
mov     esi, 1
push    0
push    0
push    3f1h
push    ebx
call    sub_42ee00
fmul    ds:dbl_4ab048
add     esp, 10h
call    __ftol
push    esi
push    eax
push    ebx
call    sub_42ac20
add     esp, 0ch
mov     eax, 1
pop     esi
pop     ebx
add     esp, 8
retn
mov     ebx, [esp+10h+arg_0]
mov     eax, ds:dword_4a6770+2
movsx   ecx, bx
mov     edx, [eax]
or      byte ptr [edx+ecx*4+7], 2
jmp     short loc_425a77
mov     ebx, [esp+10h+arg_0]
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_425aa4
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_425aad
push    ebx
call    sub_461250
add     esp, 4
push    3f1h
push    eax
call    sub_45c870
add     esp, 8
test    ax, ax
jz      short def_4258dc
push    0
push    0
push    3f1h
push    ebx
call    sub_42ee00
fmul    ds:dbl_4ab048
add     esp, 10h
call    __ftol
mov     esi, eax
push    1
push    1010780h
push    ebx
call    sub_462670
add     esp, 8
movzx   eax, ax
push    eax
push    esi
push    ebx
call    sub_42a680
add     esp, 10h
mov     eax, 1
pop     esi
pop     ebx
add     esp, 8
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_4]
cmp     dword ptr [edi], 6
jnz     short loc_425b9c
mov     esi, [esp+0ch+arg_0]
mov     eax, ds:dword_4a6770+2
mov     edx, [eax]
movsx   ecx, si
cmp     byte ptr [edx+ecx*4+6], 0
jnz     short loc_425b95
mov     eax, [edi+4]
push    eax
call    sub_4269b0
mov     bx, ax
add     esp, 4
push    0
push    3f2h
push    esi
call    sub_42edc0
add     esp, 0ch
cmp     bx, ax
jl      short loc_425b95
mov     dword ptr [edi+38h], 1
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     dword ptr [edi+38h], 0
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 20h
cmp     ds:dword_4a660c, 0
push    esi
jz      short loc_425bef
mov     esi, [esp+24h+arg_0]
push    1090520h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_425bf3
mov     ecx, ds:dword_4a660c
mov     eax, offset dword_4a660c
mov     ax, [eax+4]
lea     edx, [esp+24h+var_20]
mov     [edx], ecx
mov     [edx+4], ax
jmp     short loc_425c03
mov     esi, [esp+24h+arg_0]
lea     eax, [esp+24h+var_20]
push    eax
push    27h
push    esi
call    sub_426110
add     esp, 0ch
push    10906c0h
push    esi
call    sub_462670
movzx   eax, ax
add     esp, 8
cmp     eax, 1
jz      short loc_425c27
cmp     eax, 2
jz      loc_425ca2
pop     esi
add     esp, 20h
retn
lea     eax, [esp+24h+rcdst]
mov     ecx, [esp+24h+var_1c]
mov     edx, [esp+24h+var_20]
push    eax
push    ecx
push    edx
call    sub_438720
lea     ecx, [esp+30h+var_18]
lea     edx, [esp+30h+rcdst]
add     esp, 0ch
push    ecx
push    edx
call    sub_473c30
mov     edx, [esp+2ch+var_18]
mov     ecx, [esp+2ch+var_14]
mov     eax, [esp+2ch+var_1c]
add     esp, 8
push    5dch
push    ecx
push    edx
push    eax
mov     edx, [esp+34h+var_20]
push    edx
call    sub_423470
mov     ecx, [esp+38h+var_1c]
mov     edx, [esp+38h+var_20]
add     esp, 14h
push    ecx
push    edx
call    sub_425d00
add     esp, 8
test    eax, eax
jz      short loc_425cf2
mov     eax, [esp+24h+var_1c]
mov     ecx, [esp+24h+var_20]
push    eax
push    ecx
call    sub_425d00
add     esp, 8
test    eax, eax
jnz     short loc_425c87
pop     esi
add     esp, 20h
retn
lea     eax, [esp+24h+rcdst]
push    eax
push    esi
call    sub_424200
lea     eax, [esp+2ch+var_18]
lea     ecx, [esp+2ch+rcdst]
add     esp, 8
push    eax
push    ecx
call    sub_473c30
mov     edx, [esp+2ch+var_18]
mov     ecx, [esp+2ch+var_14]
mov     eax, [esp+2ch+var_1c]
add     esp, 8
push    0
push    ecx
push    edx
push    eax
mov     edx, [esp+34h+var_20]
push    edx
call    sub_423470
mov     ecx, [esp+38h+var_1c]
mov     edx, [esp+38h+var_20]
add     esp, 14h
push    ecx
push    edx
call    sub_43b710
add     esp, 8
pop     esi
add     esp, 20h
retn
push    esi
push    7fffh
xor     esi, esi
call    sub_485260
mov     eax, [esp+8+arg_4]
mov     ecx, [esp+8+arg_0]
add     esp, 4
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_425d62
movsx   ecx, word ptr [eax]
push    offset dword_4a61c4
cmp     dword ptr [ecx+eax-9ah], 1
sbb     esi, esi
call    sub_412f60
neg     esi
add     esp, 4
test    esi, esi
jnz     short loc_425d62
mov     eax, [esp+4+arg_4]
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_43b710
add     esp, 8
push    3
call    sub_445430
add     esp, 4
call    sub_4443d0
mov     eax, esi
pop     esi
retn
sub     esp, 40h
push    esi
mov     esi, [esp+44h+arg_0]
cmp     dword_4ad7b0, esi
jnz     short loc_425d8f
mov     eax, dword_4ad7b4
cmp     eax, [esp+44h+arg_4]
jz      loc_425ecc
test    esi, esi
jnz     short loc_425d9d
mov     [esp+44h+arg_4], 0
jmp     short loc_425dad
cmp     [esp+44h+arg_4], 0
jnz     short loc_425dad
mov     eax, ds:dword_4a68c0
mov     [esp+44h+arg_4], eax
mov     eax, [esp+44h+arg_4]
push    0
push    0
mov     dword_4ad7b0, esi
push    0
mov     dword_4ad7b4, eax
push    offset sub_425f60
call    sub_43b080
add     esp, 10h
test    esi, esi
jz      loc_425ecc
cmp     esi, 2
jz      loc_425ebd
mov     eax, [esp+44h+arg_4]
push    eax
call    sub_463590
add     esp, 4
test    eax, eax
jz      short loc_425e10
lea     eax, [esp+44h+var_40]
mov     ecx, [esp+44h+arg_4]
mov     [esp+44h+var_40], 7
push    eax
push    ecx
call    sub_424a90
add     esp, 8
jmp     loc_425ea1
mov     eax, [esp+44h+arg_4]
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_425ea1
mov     eax, [esp+44h+arg_4]
push    2
mov     [esp+48h+var_40], eax
push    eax
mov     word ptr [esp+4ch+var_3c], 2
call    sub_425fe0
add     esp, 8
test    eax, eax
jz      short loc_425e64
mov     eax, [esp+44h+var_3c]
mov     ecx, [esp+44h+var_40]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jnz     short loc_425e64
mov     eax, [esp+44h+arg_4]
push    eax
call    sub_43fdc0
add     esp, 4
mov     eax, [esp+44h+arg_4]
push    0
push    eax
call    sub_440b90
mov     eax, [esp+4ch+arg_4]
add     esp, 8
push    1
push    eax
call    sub_440a00
add     esp, 8
lea     eax, [esi-1]
cmp     eax, 1
mov     ecx, [esp+44h+arg_4]
sbb     eax, eax
neg     eax
push    eax
push    offset sub_425f10
push    0
push    ecx
call    sub_4620e0
add     esp, 10h
cmp     esi, 1
jnz     short loc_425ecc
lea     eax, [esp+44h+arg_4]
push    eax
push    offset sub_425ee0
call    sub_424680
add     esp, 8
pop     esi
add     esp, 40h
retn
mov     eax, [esp+44h+arg_4]
push    1
push    eax
call    sub_440a00
add     esp, 8
pop     esi
add     esp, 40h
retn
mov     eax, [esp+arg_4]
push    1
mov     ecx, [esp+4+arg_0]
mov     eax, [eax]
shr     eax, 10h
and     ecx, 0ffffh
movzx   eax, ax
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_425f10
add     esp, 8
retn
sub     esp, 40h
cmp     [esp+40h+arg_4], 0
push    esi
jz      short loc_425f35
mov     esi, [esp+44h+arg_0]
push    1
push    3f0h
push    esi
call    sub_42ed80
add     esp, 0ch
test    eax, eax
jz      short loc_425f4f
jmp     short loc_425f39
mov     esi, [esp+44h+arg_0]
mov     [esp+44h+var_40], 7
lea     eax, [esp+44h+var_40]
push    eax
push    esi
call    sub_424a90
add     esp, 8
mov     eax, 1
pop     esi
add     esp, 40h
retn
sub     esp, 8
lea     edx, [esp+8+var_8]
push    esi
mov     esi, [esp+0ch+arg_0]
movsx   eax, word ptr [esi]
add     eax, esi
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
mov     eax, [esp+0ch+var_8]
mov     cx, [esp+0ch+var_4]
cmp     cx, 1
jnz     short loc_425fb6
push    eax
call    sub_4624e0
add     esp, 4
cmp     eax, 7
jz      short loc_425fc7
push    esi
call    sub_410a80
add     esp, 4
mov     eax, 1
pop     esi
add     esp, 8
retn
cmp     cx, 2
jnz     short loc_425fc7
push    0
push    eax
call    sub_440a00
add     esp, 8
mov     eax, 1
pop     esi
add     esp, 8
retn
lea     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    offset loc_426000
push    0
push    ecx
call    sub_4620e0
add     esp, 10h
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_4624e0
mov     ecx, [esp+4+arg_4]
add     esp, 4
movsx   edx, word ptr [ecx]
sub     eax, edx
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
sub     esp, 20h
lea     eax, [esp+20h+var_18]
push    esi
mov     esi, [esp+24h+arg_0]
push    edi
push    eax
push    0
push    201ah
push    esi
call    sub_4427d0
add     esp, 10h
test    eax, eax
mov     eax, 1
jnz     short loc_42604b
mov     eax, [esp+28h+arg_4]
test    eax, eax
jz      short loc_4260ce
lea     eax, [esp+28h+var_18]
push    0
push    eax
call    sub_41aa60
lea     eax, [esp+30h+var_18]
add     esp, 8
push    eax
call    sub_442d80
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_4260b6
mov     word ptr [esp+28h+var_1c], 2
mov     [esp+28h+var_20], esi
mov     eax, [esp+28h+var_1c]
mov     ecx, [esp+28h+var_20]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_4260a9
push    edi
push    eax
call    sub_440a50
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
lea     eax, [esp+28h+var_18]
push    eax
call    sub_442e00
add     esp, 4
lea     eax, [esp+28h+var_18]
push    eax
call    sub_41b030
add     esp, 4
push    0
push    esi
call    sub_440ca0
add     esp, 8
pop     edi
pop     esi
add     esp, 20h
retn
push    esi
push    0
mov     esi, [esp+8+arg_0]
push    3f3h
push    esi
call    sub_42ed80
add     esp, 0ch
test    eax, eax
jz      short loc_426108
push    0
push    esi
call    sub_43c630
add     esp, 8
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
sub     esp, 8
lea     eax, [esp+8+var_6]
push    ebx
mov     ecx, [esp+0ch+arg_4]
push    esi
push    edi
xor     esi, esi
push    ebp
xor     edi, edi
mov     edx, [esp+18h+arg_0]
push    eax
push    ecx
push    edx
call    sub_461350
mov     [esp+24h+var_4], eax
add     esp, 0ch
cmp     eax, esi
jz      loc_4261cf
mov     ax, [esp+18h+var_6]
mov     ebx, [esp+18h+arg_8]
shr     ax, 2
mov     [esp+18h+var_8], ax
cmp     ax, si
jle     short loc_4261b4
test    edi, edi
jnz     short loc_4261b4
mov     eax, [esp+18h+var_4]
movsx   ecx, si
lea     ebp, [eax+ecx*4]
mov     eax, [esp+18h+arg_0]
shr     eax, 10h
mov     cx, [ebp+0]
mov     dx, ax
shl     dx, 10h
or      dx, cx
jle     short loc_426189
movzx   edx, ax
movzx   eax, cx
shl     edx, 10h
or      edx, eax
mov     [ebx], edx
jmp     short loc_42618f
mov     dword ptr [ebx], 0
mov     eax, [ebx]
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_4261ab
mov     ax, [ebp+2]
mov     edi, 1
mov     [ebx+4], ax
inc     si
cmp     si, [esp+18h+var_8]
jl      short loc_426155
mov     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+arg_4]
mov     edx, [esp+18h+arg_0]
push    eax
push    0
push    ecx
push    edx
call    sub_4613a0
add     esp, 10h
jmp     short loc_4261d3
mov     ebx, [esp+18h+arg_8]
test    edi, edi
jnz     short loc_4261dd
mov     dword ptr [ebx], 0
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 4
lea     eax, [esp+4+var_2]
push    ebx
mov     ecx, [esp+8+arg_4]
push    esi
push    edi
xor     esi, esi
mov     edx, [esp+10h+arg_0]
push    ebp
push    eax
push    ecx
push    edx
call    sub_461350
add     esp, 0ch
test    eax, eax
jz      short loc_426264
mov     bx, [esp+14h+var_2]
shr     bx, 2
xor     bp, bp
test    bx, bx
jle     short loc_42624f
mov     di, [esp+14h+arg_c]
mov     edx, [esp+14h+arg_8]
test    esi, esi
jnz     short loc_42624f
movsx   ecx, bp
lea     ecx, [eax+ecx*4]
cmp     [ecx], dx
jnz     short loc_426248
cmp     [ecx+2], di
jnz     short loc_426248
mov     esi, 1
inc     bp
cmp     bp, bx
jl      short loc_42622e
mov     ecx, [esp+14h+arg_0]
push    eax
mov     eax, [esp+18h+arg_4]
push    0
push    eax
push    ecx
call    sub_4613a0
add     esp, 10h
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 1ch
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
xor     edi, edi
mov     esi, [esp+2ch+lprcdst]
lea     eax, [esp+2ch+var_1a]
push    eax
push    1eh
mov     ecx, [esp+34h+arg_0]
mov     [esi], ebx
push    ecx
mov     [esi+4], ebx
mov     [esi+8], ebx
mov     [esi+0ch], ebx
call    sub_461350
add     esp, 0ch
mov     ebp, eax
test    ebp, ebp
jz      loc_426348
mov     ax, [esp+2ch+var_1a]
shr     ax, 2
mov     [esp+2ch+var_1c], ax
cmp     ax, bx
jle     short loc_426336
test    edi, edi
jnz     short loc_426336
xor     edx, edx
xor     ecx, ecx
movsx   eax, bx
mov     dx, ds:word_4a8518
lea     eax, [ebp+eax*4+0]
shl     edx, 10h
mov     cx, [eax]
mov     ax, [eax+2]
or      edx, ecx
mov     word ptr [esp+2ch+var_14], ax
lea     ecx, [esp+2ch+rcsrc2]
mov     eax, [esp+2ch+var_14]
push    ecx
push    eax
push    edx
call    sub_43b210
add     esp, 0ch
test    eax, eax
jz      short loc_42632d
test    edi, edi
jz      short loc_42630c
lea     eax, [esp+2ch+rcsrc2]
push    eax
push    esi
push    esi
call    ds:unionrect
jmp     short loc_42632d
mov     edx, [esp+2ch+rcsrc2.top]
mov     edi, [esp+2ch+rcsrc2.right]
lea     ecx, [esp+2ch+rcsrc2]
mov     eax, [ecx]
mov     [esi], eax
mov     eax, [ecx+0ch]
mov     [esi+4], edx
mov     [esi+8], edi
mov     edi, 1
mov     [esi+0ch], eax
inc     bx
cmp     bx, [esp+2ch+var_1c]
jl      short loc_4262bb
mov     eax, [esp+2ch+arg_0]
push    ebp
push    0
push    1eh
push    eax
call    sub_4613a0
add     esp, 10h
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_461f70
add     esp, 4
push    eax
call    sub_440b50
add     esp, 4
push    0
push    esi
call    sub_435870
add     esp, 8
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     [esp+8+var_8], eax
call    sub_4755f0
mov     [esp+8+hmem], eax
test    eax, eax
jz      short loc_4263dd
lea     eax, [esp+8+var_8]
push    eax
push    offset sub_4263f0
call    sub_424680
mov     eax, [esp+10h+hmem]
add     esp, 8
push    0
push    offset sub_426440
push    1
push    eax
call    sub_475b30
mov     eax, [esp+18h+hmem]
add     esp, 10h
push    eax
call    sub_475600
add     esp, 4
add     esp, 8
retn
push    esi
push    edi
mov     esi, [esp+8+arg_4]
mov     ecx, [esi]
mov     eax, ecx
push    ecx
shr     eax, 10h
movzx   edi, ax
shl     edi, 10h
mov     eax, [esp+0ch+arg_0]
and     eax, 0ffffh
or      edi, eax
push    edi
call    sub_463480
add     esp, 8
test    eax, eax
jz      short loc_426429
push    edi
mov     eax, [esi+4]
push    eax
call    sub_475a70
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
retn
sub     esp, 40h
lea     eax, [esp+40h+var_40]
push    esi
mov     esi, [esp+44h+arg_0]
push    eax
mov     [esp+48h+var_40], 1
push    esi
call    sub_424a90
add     esp, 8
push    esi
call    sub_424660
add     esp, 4
push    esi
call    sub_4624e0
add     esp, 4
cmp     eax, 3
jz      short loc_426484
cmp     eax, 5
jz      short loc_4264b3
mov     eax, 1
pop     esi
add     esp, 40h
retn
push    10b0308h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4264c5
push    esi
call    sub_461f70
add     esp, 4
push    eax
call    sub_4372d0
add     esp, 4
mov     eax, 1
pop     esi
add     esp, 40h
retn
push    esi
call    sub_461f70
add     esp, 4
push    eax
call    sub_437e50
add     esp, 4
mov     eax, 1
pop     esi
add     esp, 40h
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     eax, [ebx]
dec     eax
cmp     eax, 6
ja      def_4264e3
jmp     ds:jpt_4264e3[eax*4]
push    2
push    0
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a6620, eax
test    eax, eax
jnz     short loc_426508
mov     eax, 8
pop     edi
pop     esi
pop     ebx
retn
call    sub_43cd40
mov     ds:word_4a6624, ax
call    sub_43cd40
mov     ds:word_4a6626, ax
xor     eax, eax
and     ds:word_4a6634, 0fffdh
mov     ds:word_4a664e, ax
mov     ds:dword_4a6628, eax
mov     ds:dword_4a664a, eax
mov     ds:dword_4a6646, eax
mov     word ptr [ebx+8], 30h
call    sub_45c800
mov     esi, eax
mov     eax, [eax]
push    eax
call    sub_45c830
add     esp, 4
push    eax
push    esi
mov     ax, ds:word_4a6626
push    eax
call    sub_43cda0
movsx   ecx, ds:word_4a664e
add     esp, 0ch
mov     eax, ds:dword_4a6620
lea     edx, [ecx+ecx*8]
lea     ecx, [ecx+edx*2]
mov     dx, ds:word_4a6624
add     ecx, ecx
push    ecx
push    eax
push    edx
call    sub_43cda0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
cmp     word ptr [ebx+8], 30h
jz      short loc_4265a1
mov     eax, 1389h
pop     edi
pop     esi
pop     ebx
retn
mov     edi, offset dword_4a6620
mov     esi, [ebx+0ah]
mov     ecx, 0ch
rep movsd
mov     ax, ds:word_4a6624
mov     ds:dword_4a6628, 0
push    eax
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6620, eax
test    eax, eax
jnz     short loc_4265db
mov     eax, 8
pop     edi
pop     esi
pop     ebx
retn
mov     ax, ds:word_4a6626
push    eax
call    sub_43cd60
add     esp, 4
test    eax, eax
jz      def_4264e3
push    eax
call    sub_426770
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     esi, offset dword_4a6620
call    sub_426960
mov     edi, [ebx+0ah]
mov     ecx, 0ch
rep movsd
movsx   ecx, ds:word_4a664e
mov     eax, ds:dword_4a6620
lea     edx, [ecx+ecx*8]
lea     ecx, [ecx+edx*2]
mov     dx, ds:word_4a6624
add     ecx, ecx
push    ecx
push    eax
push    edx
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jnz     loc_42674e
call    sub_45c800
push    eax
mov     esi, eax
call    sub_4267c0
add     esp, 4
mov     eax, [esi]
push    eax
call    sub_45c830
add     esp, 4
push    eax
push    esi
mov     ax, ds:word_4a6626
push    eax
call    sub_43cda0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
xor     esi, esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a6624
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6626
push    esi
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
mov     ecx, ds:dword_4a6646
mov     ds:dword_4a6620, esi
push    ecx
call    sub_475600
add     esp, 4
xor     eax, eax
mov     ds:dword_4a6646, esi
mov     ds:dword_4a6628, esi
pop     edi
pop     esi
pop     ebx
retn
xor     esi, esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
push    esi
xor     ecx, ecx
mov     cx, ds:word_4a6624
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6626
push    esi
shl     eax, 10h
push    esi
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
mov     ds:dword_4a6620, esi
mov     ds:dword_4a6628, esi
pop     edi
pop     esi
pop     ebx
retn
push    3
call    sub_426dc0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    4
call    sub_426dc0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    ebx
mov     eax, ds:dword_4a6620
push    esi
push    edi
push    eax
call    ds:globallock
mov     di, ds:word_4a664e
mov     ebx, eax
test    di, di
jle     short loc_4267ad
mov     esi, [esp+0ch+hmem]
cmp     dword ptr [ebx+1eh], 0
jz      short loc_4267a6
mov     eax, [ebx]
push    eax
push    esi
call    sub_45c920
add     esp, 8
mov     [ebx+1eh], eax
add     ebx, 26h
dec     di
jnz     short loc_426791
mov     eax, ds:dword_4a6620
push    eax
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
retn
push    ebx
mov     eax, ds:dword_4a6620
push    esi
push    edi
push    ebp
push    eax
call    ds:globallock
mov     di, ds:word_4a664e
mov     ebx, eax
test    di, di
jle     short loc_426807
mov     esi, [esp+10h+arg_0]
mov     ebp, [ebx+1eh]
test    ebp, ebp
jz      short loc_426800
push    ebp
call    sub_475690
add     esp, 4
push    eax
push    ebp
mov     eax, [ebx]
push    eax
push    esi
call    sub_45cb00
add     esp, 10h
add     ebx, 26h
dec     di
jnz     short loc_4267e2
mov     eax, ds:dword_4a6620
push    eax
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    edi
call    sub_426960
mov     edi, offset dword_4a6628
xor     eax, eax
mov     ecx, 9
push    0
rep stosd
stosw
mov     eax, [esp+8+arg_0]
push    offset word_4a6636
mov     ds:dword_4a6628, eax
call    sub_409e80
add     esp, 8
push    0
push    offset dword_4a663c
call    sub_409e80
movsx   eax, ds:word_4a664e
add     esp, 8
lea     edx, [eax+eax*8]
mov     ecx, ds:dword_4a6620
lea     eax, [eax+edx*2]
add     eax, eax
push    eax
push    26h
push    offset dword_4a6628
push    ecx
call    sub_45baf0
add     esp, 10h
test    eax, eax
jz      short loc_426895
inc     ds:word_4a664e
mov     eax, 1
pop     edi
retn
xor     eax, eax
pop     edi
mov     ds:dword_4a6628, 0
retn
mov     eax, ds:dword_4a6620
mov     edx, [eax]
xor     ax, ax
cmp     ds:word_4a664e, ax
jle     short loc_4268d9
mov     ecx, [esp+arg_0]
cmp     [edx], ecx
jz      short locret_4268dd
inc     ax
add     edx, 26h
cmp     ds:word_4a664e, ax
jg      short loc_4268c7
mov     ax, 0ffffh
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
test    esi, esi
jnz     short loc_4268ef
xor     eax, eax
pop     edi
pop     esi
retn
cmp     ds:dword_4a6628, esi
jnz     short loc_4268ff
mov     eax, 1
pop     edi
pop     esi
retn
call    sub_426960
push    esi
call    sub_4268b0
add     esp, 4
test    ax, ax
jl      short loc_42693a
movsx   esi, ax
lea     ecx, [esi+esi*8]
mov     eax, ds:dword_4a6620
mov     edi, offset dword_4a6628
lea     esi, [esi+ecx*2]
mov     ecx, 9
add     esi, esi
add     esi, [eax]
rep movsd
movsw
mov     eax, 1
pop     edi
pop     esi
retn
cmp     [esp+8+arg_4], 0
jz      short loc_42695b
push    esi
call    sub_426820
add     esp, 4
cmp     eax, 1
mov     eax, 0
pop     edi
adc     eax, 0ffffffffh
pop     esi
and     eax, 2
retn
xor     eax, eax
pop     edi
pop     esi
retn
cmp     ds:dword_4a6628, 0
push    esi
push    edi
jz      short loc_4269a8
mov     eax, ds:dword_4a6628
push    eax
call    sub_4268b0
add     esp, 4
test    ax, ax
jl      short loc_42699e
movsx   edi, ax
lea     ecx, [edi+edi*8]
mov     esi, offset dword_4a6628
mov     eax, ds:dword_4a6620
lea     edi, [edi+ecx*2]
mov     ecx, 9
add     edi, edi
add     edi, [eax]
rep movsd
movsw
mov     ds:dword_4a6628, 0
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_4269ca
mov     ax, ds:word_4a6630
retn
xor     ax, ax
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_4269ee
mov     ax, [esp+arg_4]
mov     ds:word_4a6630, ax
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426a16
mov     ax, [esp+arg_4]
add     ds:word_4a6630, ax
mov     ax, ds:word_4a6630
retn
xor     ax, ax
retn
push    esi
push    1
mov     esi, [esp+8+arg_0]
push    esi
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426a42
cmp     eax, 1
jz      short loc_426a67
cmp     eax, 2
jz      short loc_426a46
xor     eax, eax
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
call    sub_461cc0
add     esp, 4
test    eax, eax
jz      short loc_426a67
inc     ds:word_4a6632
push    eax
call    sub_461c50
add     esp, 4
test    eax, eax
jnz     short loc_426a53
xor     eax, eax
pop     esi
mov     ax, ds:word_4a6632
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426a99
mov     eax, ds:dword_4a662c
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426abc
mov     eax, [esp+arg_4]
mov     ds:dword_4a662c, eax
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426ae2
mov     ax, ds:word_4a6634
and     ax, 30h
shr     ax, 4
retn
xor     ax, ax
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426b1e
mov     ax, [esp+arg_4]
shl     ax, 4
xor     ax, ds:word_4a6634
and     ax, 30h
xor     ds:word_4a6634, ax
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426b39
mov     al, byte ptr ds:word_4a6634+1
retn
xor     al, al
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426b66
movzx   ax, [esp+arg_4]
mov     ah, al
mov     al, byte ptr ds:word_4a6634
mov     ds:word_4a6634, ax
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426b8f
xor     eax, eax
mov     ax, ds:word_4a6634
and     eax, 1
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426bcb
movzx   ax, [esp+arg_4]
xor     ax, ds:word_4a6634
and     ax, 1
xor     ds:word_4a6634, ax
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426bf5
mov     ax, ds:word_4a6634
and     ax, 8
shr     ax, 3
movzx   eax, ax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426c2d
mov     eax, [esp+arg_4]
shl     ax, 3
xor     ax, ds:word_4a6634
and     ax, 8
xor     ds:word_4a6634, ax
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426c51
push    offset word_4a6636
call    sub_409f30
add     esp, 4
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426c79
mov     eax, ds:dword_4a6642
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426cac
mov     ds:dword_4a6642, 0
push    0
push    offset dword_4a663c
call    sub_409e80
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426ce4
push    offset dword_4a663c
call    sub_409f30
add     esp, 4
mov     ds:dword_4a6642, eax
push    0
push    offset dword_4a663c
call    sub_409e80
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426d15
mov     eax, [esp+arg_4]
push    eax
push    offset word_4a6636
call    sub_409e80
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426d4c
mov     eax, [esp+arg_4]
add     ax, ax
xor     ax, ds:word_4a6634
and     ax, 2
xor     ds:word_4a6634, ax
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426d75
mov     ax, ds:word_4a6634
and     ax, 2
shr     ax, 1
movzx   eax, ax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426d9c
mov     eax, [esp+arg_4]
mov     ds:dword_4a664a, eax
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426db9
mov     eax, ds:dword_4a664a
retn
xor     eax, eax
retn
push    ebx
push    esi
push    edi
call    sub_426960
mov     eax, ds:dword_4a6620
mov     ebx, ds:globallock
push    eax
call    ebx
mov     bx, ds:word_4a664e
mov     edi, eax
test    bx, bx
jle     short loc_426e09
mov     esi, [esp+0ch+arg_0]
lea     eax, [edi+0eh]
push    esi
push    eax
add     edi, 26h
call    sub_409e80
add     esp, 8
lea     eax, [edi-12h]
push    esi
push    eax
call    sub_409e80
add     esp, 8
dec     bx
jnz     short loc_426de8
mov     eax, ds:dword_4a6620
push    eax
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426e39
mov     eax, ds:dword_4a6646
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    esi
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426e74
mov     esi, [esp+4+arg_4]
cmp     ds:dword_4a6646, esi
jz      short loc_426e6e
mov     eax, ds:dword_4a6646
push    eax
call    sub_475600
add     esp, 4
mov     ds:dword_4a6646, esi
pop     esi
retn
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short locret_426ead
mov     eax, [esp+arg_4]
shl     ax, 2
xor     ax, ds:word_4a6634
and     ax, 4
xor     ds:word_4a6634, ax
retn
mov     eax, [esp+arg_0]
push    0
push    eax
call    sub_4268e0
add     esp, 8
test    eax, eax
jz      short loc_426ed5
mov     ax, ds:word_4a6634
and     ax, 4
shr     ax, 2
movzx   eax, ax
retn
mov     eax, 1
retn
mov     edx, [esp+arg_0]
mov     eax, ds:dword_4a6650
mov     ecx, offset dword_4a6650
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
sub     esp, 18h
lea     eax, [esp+18h+rc]
push    ebx
push    esi
push    edi
push    eax
call    sub_444150
mov     esi, [esp+28h+lprc]
add     esp, 4
push    esi
call    sub_426ee0
add     esp, 4
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_426f48
cmp     [esp+24h+rc.bottom], eax
jl      short loc_426f48
lea     edi, [esi+8]
mov     eax, [esp+24h+rc.right]
cmp     [edi], eax
jle     short loc_426f8d
mov     eax, [esp+24h+arg_0]
push    0
mov     word ptr [esp+28h+var_14], 4
mov     ecx, [esp+28h+var_14]
push    esi
push    ecx
lea     edi, [esi+8]
push    eax
call    sub_427160
mov     eax, [esp+34h+rc.left]
add     esp, 10h
mov     ecx, [edi]
mov     ebx, [esi+0ch]
sub     ecx, [esi]
sub     ebx, [esi+4]
add     eax, 4
mov     edx, [esp+24h+rc.top]
add     edx, 18h
mov     [esi], eax
add     eax, ecx
mov     [esi+4], edx
add     edx, ebx
mov     [edi], eax
mov     [esi+0ch], edx
push    1
push    esi
call    sub_427080
add     esp, 8
test    eax, eax
jz      short loc_426fdd
mov     ebx, ds:offsetrect
push    8
push    8
push    esi
call    ebx
mov     eax, [esp+24h+rc.right]
cmp     [edi], eax
jg      short loc_426fba
mov     eax, [esp+24h+rc.bottom]
cmp     [esi+0ch], eax
jle     short loc_426fce
mov     eax, 8
sub     eax, [esi+4]
push    eax
mov     eax, 8
sub     eax, [esi]
push    eax
push    esi
call    ebx
push    1
push    esi
call    sub_427080
add     esp, 8
test    eax, eax
jnz     short loc_426fa2
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 10h
push    esi
push    edi
mov     esi, [esp+18h+lprc2]
mov     edi, [esp+18h+lprc1]
push    esi
push    edi
call    ds:equalrect
test    eax, eax
jz      short loc_427014
mov     eax, 1
pop     edi
pop     esi
add     esp, 10h
retn
cmp     [esp+18h+arg_8], 0
jnz     short loc_427072
lea     eax, [esp+18h+var_10]
push    eax
push    edi
call    sub_473c30
lea     eax, [esp+20h+pt]
add     esp, 8
push    eax
push    esi
call    sub_473c30
mov     eax, [esp+20h+pt.x]
mov     ecx, [esp+20h+pt.y]
add     esp, 8
push    ecx
push    eax
push    edi
mov     edi, ds:ptinrect
call    edi
test    eax, eax
jnz     short loc_427067
mov     eax, [esp+18h+var_10.x]
mov     ecx, [esp+18h+var_10.y]
push    ecx
push    eax
push    esi
call    edi
test    eax, eax
jnz     short loc_427067
xor     eax, eax
pop     edi
pop     esi
add     esp, 10h
retn
mov     eax, 1
pop     edi
pop     esi
add     esp, 10h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 10h
retn
sub     esp, 18h
lea     ecx, [esp+18h+var_10]
push    esi
mov     esi, [esp+1ch+arg_0]
mov     eax, [esi]
mov     edx, [esi+4]
mov     [ecx], eax
mov     eax, [esi+8]
mov     [ecx+4], edx
mov     edx, [esi+0ch]
mov     [ecx+8], eax
lea     eax, [esp+1ch+arg_4]
mov     [ecx+0ch], edx
lea     ecx, [esp+1ch+var_18]
lea     edx, [esp+1ch+var_10]
push    ecx
push    eax
push    edx
push    offset sub_4270f0
call    sub_43b080
lea     ecx, [esp+2ch+var_10]
add     esp, 10h
mov     eax, [ecx]
mov     edx, [ecx+4]
cmp     [esp+1ch+var_18], 1
mov     [esi], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [esi+4], edx
mov     [esi+8], eax
sbb     eax, eax
mov     [esi+0ch], ecx
inc     eax
pop     esi
add     esp, 18h
retn
mov     ecx, [esp+arg_0]
movsx   eax, word ptr [ecx]
cmp     word ptr [eax+ecx-0a2h], 1
jnz     short loc_427121
mov     eax, [esp+arg_8]
add     ecx, 0ch
mov     edx, [eax]
mov     eax, [esp+lprc1]
push    edx
push    ecx
push    eax
call    sub_426ff0
add     esp, 0ch
test    eax, eax
jz      short loc_427121
xor     eax, eax
retn
mov     eax, 1
retn
mov     edx, [esp+arg_8]
mov     eax, [edx]
mov     ecx, [edx+8]
sub     ecx, eax
cmp     ecx, 8
jge     short loc_427146
add     eax, 8
mov     [edx+8], eax
mov     eax, [edx+4]
mov     ecx, [edx+0ch]
sub     ecx, eax
cmp     ecx, 8
jge     short locret_427159
add     eax, 8
mov     [edx+0ch], eax
retn
sub     esp, 1d0h
cmp     [esp+1d0h+arg_4], 1
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_4271a4
mov     eax, [esp+1e0h+arg_0]
push    30c0002h
push    eax
call    sub_462670
add     esp, 8
push    eax
mov     eax, [esp+1e4h+arg_0]
shr     eax, 10h
push    eax
call    sub_4041d0
mov     [esp+1e8h+var_1d0], eax
add     esp, 8
jmp     short loc_4271bc
lea     eax, [esp+1e0h+var_1d0]
push    eax
mov     eax, [esp+1e4h+arg_0]
shr     eax, 10h
push    eax
call    sub_404aa0
add     esp, 8
lea     eax, [esp+1e0h+string]
push    19ah
mov     ecx, dword ptr [esp+1e4h+arg_4]
push    eax
mov     edx, [esp+1e8h+arg_0]
push    ecx
push    edx
call    sub_4285c0
mov     esi, [esp+1f0h+arg_8]
lea     ecx, [esp+1f0h+var_1cc]
add     esp, 10h
mov     eax, [esi]
mov     edx, [esi+4]
mov     ebx, [esi+8]
mov     [ecx], eax
mov     eax, [esi+0ch]
mov     [ecx+4], edx
mov     [ecx+8], ebx
mov     [ecx+0ch], eax
mov     ecx, [esp+1e0h+arg_c]
push    ecx
push    eax
push    ebx
mov     eax, [esi]
lea     ecx, [esp+1ech+string]
push    edx
mov     edx, [esp+1f0h+var_1d0]
push    eax
lea     eax, [esp+1f4h+var_1ac]
push    ecx
push    edx
push    eax
call    sub_406b80
lea     edx, [esp+200h+var_1bc]
add     esp, 20h
mov     ecx, [eax]
mov     ebx, [eax+4]
mov     ebp, [eax+8]
mov     [edx], ecx
mov     eax, [eax+0ch]
mov     ecx, edx
mov     [edx+4], ebx
mov     [edx+8], ebp
mov     [edx+0ch], eax
mov     eax, [ecx]
mov     edx, [ecx+4]
mov     ebx, [ecx+8]
mov     [esi], eax
mov     eax, [ecx+0ch]
mov     ecx, [esp+1e0h+var_1d0]
mov     [esi+4], edx
push    ecx
mov     [esi+8], ebx
mov     [esi+0ch], eax
call    sub_404b30
mov     ebx, [esp+1e4h+var_1c8]
mov     ebp, [esp+1e4h+var_1cc]
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_4272c0
push    edi
call    sub_4065a0
add     esp, 4
test    eax, eax
jz      short loc_4272b0
mov     eax, [esi+8]
mov     ecx, [esp+1e0h+var_1c4]
sub     eax, [esi]
sub     ecx, ebp
cmp     eax, ecx
jg      short loc_427296
mov     eax, [esp+1e0h+var_1c4]
mov     [esi], ebp
mov     [esi+8], eax
mov     eax, [esi+0ch]
mov     ecx, [esp+1e0h+var_1c0]
sub     eax, [esi+4]
sub     ecx, ebx
cmp     eax, ecx
jg      short loc_4272b0
mov     eax, [esp+1e0h+var_1c0]
mov     [esi+4], ebx
mov     [esi+0ch], eax
mov     eax, [esp+1e0h+var_1d0]
push    0
push    edi
push    eax
call    sub_404b90
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1d0h
retn
mov     eax, [esp+lpstring]
push    esi
mov     esi, 0
push    0dh
cmp     [esp+8+arg_4], 1
adc     esi, 0ffffffffh
push    eax
and     esi, 2
call    sub_4292f0
add     esp, 8
lea     ecx, [esi+eax]
add     cx, 8
pop     esi
mov     ax, cx
retn
cmp     [esp+arg_0], 1
push    esi
push    0dh
mov     esi, 0
adc     esi, 0ffffffffh
call    sub_429310
and     esi, 2
add     esp, 4
lea     ecx, [esi+eax]
pop     esi
add     cx, 6
mov     ax, cx
retn
mov     eax, [esp+lpstring]
push    esi
mov     esi, [esp+4+arg_c]
push    edi
push    esi
push    eax
call    sub_4272d0
add     esp, 8
movsx   edi, ax
push    esi
call    sub_427300
movsx   ecx, ax
add     esp, 4
cmp     edi, 50h
jge     short loc_42735d
mov     edi, 50h
cmp     ecx, 18h
jge     short loc_427367
mov     ecx, 18h
mov     eax, [esp+8+lprc]
push    eax
mov     dword ptr [eax], 0
mov     [eax+8], edi
mov     [eax+0ch], ecx
mov     dword ptr [eax+4], 0
lea     ecx, [esp+0ch+arg_0]
push    ecx
call    sub_473bf0
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 0c8h
mov     word ptr [esp+0c8h+var_c4], 1
push    esi
mov     esi, [esp+0cch+arg_0]
mov     [esp+0cch+var_c8], esi
mov     eax, [esp+0cch+var_c4]
mov     ecx, [esp+0cch+var_c8]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jnz     loc_42744c
lea     eax, [esp+0cch+rcdst]
mov     ecx, [esp+0cch+var_c4]
mov     edx, [esp+0cch+var_c8]
push    eax
push    ecx
push    edx
call    sub_4289d0
lea     ecx, [esp+0d8h+rcdst]
lea     edx, [esp+0d8h+var_a4]
add     esp, 0ch
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
push    esi
mov     [edx+4], eax
mov     [esp+0d0h+src], 0aeh
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
lea     edx, [esp+0d0h+src]
push    edx
call    sub_428510
add     esp, 8
push    esi
call    sub_4624e0
add     esp, 4
sub     eax, 4
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     [esp+0cch+var_7a], eax
call    sub_4441e0
mov     ecx, [esp+0cch+var_c4]
push    100000h
mov     edx, [esp+0d0h+var_c8]
push    4
lea     eax, [esp+0d4h+src]
push    ecx
push    edx
push    offset sub_427900
push    eax
call    sub_43aa50
add     esp, 18h
pop     esi
add     esp, 0c8h
retn
mov     eax, [esp+arg_0]
push    414h
push    eax
call    sub_461f70
add     esp, 4
push    eax
call    sub_42e360
add     esp, 8
retn
mov     eax, dword ptr [esp+arg_4]
sub     esp, 1ech
mov     ecx, [esp+1ech+arg_0]
push    ebx
push    esi
push    edi
push    ebp
push    eax
push    ecx
call    sub_43b1e0
mov     esi, [esp+204h+arg_0]
add     esp, 8
test    eax, eax
jnz     loc_4278e8
mov     [esp+1fch+src], 1e4h
mov     [esp+1fch+var_2], 0
mov     [esp+1fch+var_1b2], 1
mov     edi, [esp+1fch+arg_8]
test    edi, edi
jz      short loc_4274d8
mov     [esp+1fch+var_1b2], 3
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
test    byte ptr [edx+ecx*4+7], 4
jz      short loc_4274ee
or      byte ptr [esp+1fch+var_1b2], 20h
cmp     [esp+1fch+arg_4], 1
jnz     short loc_427516
or      byte ptr [esp+1fch+var_1b2+1], 10h
push    10b0640h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_427516
or      byte ptr [esp+1fch+var_1b2], 10h
lea     eax, [esp+1fch+string]
push    19ah
mov     ecx, dword ptr [esp+200h+arg_4]
push    eax
mov     edx, [esp+204h+arg_0]
push    ecx
push    edx
call    sub_4285c0
add     esp, 10h
test    byte ptr [esp+1fch+var_1b2+1], 10h
jz      loc_4276a0
push    30c0002h
push    esi
call    sub_462670
add     esp, 8
push    eax
mov     eax, esi
shr     eax, 10h
push    eax
call    sub_4041d0
mov     ecx, dword ptr [esp+204h+arg_4]
mov     edx, [esp+204h+arg_0]
mov     [esp+204h+var_1a8], eax
add     esp, 8
push    ecx
push    edx
call    sub_428ef0
add     esp, 8
cmp     ds:dword_4a6660, 0
jz      short loc_427588
xor     ax, ax
cmp     ax, 1
jnz     short loc_42759b
or      byte ptr [esp+1fch+var_1b2], 8
mov     [esp+1fch+var_1ac], 4
test    byte ptr [esp+1fch+var_1b2], 8
jz      short loc_4275ba
lea     eax, [esp+1fch+arg_0]
mov     edx, offset dword_4a6660
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     eax, [esp+1fch+var_1a8]
push    eax
call    sub_404b30
add     esp, 4
mov     ebx, eax
push    ebx
call    sub_4065d0
add     esp, 4
test    eax, eax
jz      short loc_4275db
or      byte ptr [esp+1fch+var_1b2], 80h
push    ebx
call    sub_406610
add     esp, 4
test    eax, eax
jz      short loc_4275ed
or      byte ptr [esp+1fch+var_1b2+1], 8
push    ebx
call    sub_4065c0
add     esp, 4
test    eax, eax
jz      short loc_4275ff
or      byte ptr [esp+1fch+var_1b2+1], 20h
mov     eax, [esp+1fch+var_1a8]
push    0
push    ebx
push    eax
call    sub_404b90
lea     eax, [esp+208h+rc]
mov     ecx, dword ptr [esp+208h+arg_4]
mov     edx, [esp+208h+arg_0]
add     esp, 0ch
push    eax
push    ecx
push    edx
call    sub_428a20
add     esp, 0ch
test    eax, eax
jnz     loc_42775e
mov     [esp+1fch+rc.top], 60h
lea     eax, [esp+1fch+var_1ec]
lea     ecx, [esp+1fch+rc]
mov     [esp+1fch+rc.left], 20h
mov     [esp+1fch+rc.bottom], 78h
mov     [esp+1fch+rc.right], 70h
push    eax
push    ecx
call    sub_473c30
lea     ecx, [esp+204h+rc]
mov     edx, dword ptr [esp+204h+arg_4]
mov     eax, [esp+204h+arg_0]
add     esp, 8
push    ecx
push    edx
push    eax
call    sub_428570
lea     ecx, [esp+208h+string]
mov     edx, [esp+208h+var_1ec]
add     esp, 8
push    eax
push    ecx
mov     eax, [esp+208h+var_1e8]
push    eax
push    edx
call    sub_427330
add     esp, 14h
jmp     loc_42775e
lea     eax, [esp+1fch+var_1a8]
push    eax
mov     eax, esi
shr     eax, 10h
push    eax
call    sub_404aa0
mov     ecx, [esp+204h+var_1a8]
add     esp, 8
push    ecx
call    sub_404b30
add     esp, 4
mov     ebx, eax
push    ebx
call    sub_4065d0
add     esp, 4
test    eax, eax
jz      short loc_4276d4
or      byte ptr [esp+1fch+var_1b2], 80h
push    ebx
call    sub_406610
add     esp, 4
test    eax, eax
jz      short loc_4276e6
or      byte ptr [esp+1fch+var_1b2+1], 8
push    ebx
call    sub_4065c0
add     esp, 4
test    eax, eax
jz      short loc_4276f8
or      byte ptr [esp+1fch+var_1b2+1], 20h
mov     eax, [esp+1fch+var_1a8]
push    0
push    ebx
push    eax
call    sub_404b90
add     esp, 0ch
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 7
jnz     short loc_42772a
push    2000640h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_42772f
or      byte ptr [esp+1fch+var_1b2], 8
lea     eax, [esp+1fch+rc]
mov     ecx, dword ptr [esp+1fch+arg_4]
mov     edx, [esp+1fch+arg_0]
push    eax
push    ecx
push    edx
call    sub_428a20
add     esp, 0ch
test    eax, eax
jnz     short loc_42775e
lea     eax, [esp+1fch+rc]
push    eax
push    esi
call    sub_426f10
add     esp, 8
mov     eax, dword ptr [esp+1fch+arg_4]
mov     ecx, [esp+1fch+arg_0]
mov     bp, 4
push    eax
push    ecx
call    sub_427460
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jg      short loc_427784
mov     bp, 2
test    edi, edi
jz      short loc_4277a3
test    byte ptr [esp+1fch+var_1b2], 20h
jz      short loc_427799
mov     [esp+1fch+var_1ac], 4
jmp     short loc_4277e1
mov     [esp+1fch+var_1ac], 0
jmp     short loc_4277e1
test    byte ptr [esp+1fch+var_1b2], 10h
jz      short loc_4277c5
test    byte ptr [esp+1fch+var_1b2], 20h
jz      short loc_4277bb
mov     [esp+1fch+var_1ac], 7
jmp     short loc_4277e1
mov     [esp+1fch+var_1ac], 3
jmp     short loc_4277e1
test    byte ptr [esp+1fch+var_1b2], 20h
mov     [esp+1fch+var_1ac], 7
jnz     short loc_4277dc
mov     [esp+1fch+var_1ac], 3
or      byte ptr [esp+1fch+var_1b2], 4
mov     eax, [esp+1fch+var_1a8]
push    eax
call    sub_404b30
add     esp, 4
mov     edi, eax
push    edi
call    sub_4065c0
add     esp, 4
test    eax, eax
jz      short loc_427838
push    0
push    1
push    edi
call    sub_406540
add     esp, 0ch
test    eax, eax
jnz     short loc_427813
or      byte ptr [esp+1fch+var_1b2+1], 1
push    0
push    5
push    edi
call    sub_406540
add     esp, 0ch
test    eax, eax
jnz     short loc_427829
or      byte ptr [esp+1fch+var_1b2+1], 2
push    edi
call    sub_4065b0
add     esp, 4
test    eax, eax
jz      short loc_42784a
jmp     short loc_427845
push    edi
call    sub_406630
add     esp, 4
test    eax, eax
jz      short loc_42784a
or      byte ptr [esp+1fch+var_1b2+1], 4
push    1
push    1
push    edi
call    sub_406540
add     esp, 0ch
test    eax, eax
jz      short loc_42786c
push    2
push    1
push    edi
call    sub_406660
add     esp, 0ch
test    eax, eax
jz      short loc_427871
or      byte ptr [esp+1fch+var_1b2+1], 1
push    1
push    5
push    edi
call    sub_406540
add     esp, 0ch
test    eax, eax
jz      short loc_427893
push    2
push    5
push    edi
call    sub_406660
add     esp, 0ch
test    eax, eax
jz      short loc_427898
or      byte ptr [esp+1fch+var_1b2+1], 2
push    esi
call    sub_40d900
mov     ecx, [esp+200h+var_1a8]
mov     [esp+200h+var_a], eax
mov     [esp+200h+var_6], edx
add     esp, 4
push    0
push    edi
push    ecx
call    sub_404b90
add     esp, 0ch
call    sub_4441e0
mov     ecx, dword ptr [esp+1fch+arg_4]
push    ebx
mov     edx, [esp+200h+arg_0]
push    ebp
lea     eax, [esp+204h+src]
push    ecx
push    edx
push    offset sub_427dc0
push    eax
call    sub_43aa50
add     esp, 18h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ech
retn
sub     esp, 20h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+30h+arg_4]
cmp     edi, 0bh
ja      def_42791c
xor     eax, eax
mov     al, ds:byte_427b38[edi]
jmp     ds:jpt_42791c[eax*4]
mov     esi, [esp+30h+arg_0]
lea     ecx, [esp+30h+rcsrc2]
lea     edi, [esi+0ch]
mov     eax, [edi]
mov     [ecx], eax
mov     edx, [edi+4]
mov     [ecx+4], edx
mov     ebx, [edi+8]
mov     [ecx+8], ebx
mov     eax, [edi+0ch]
mov     [ecx+0ch], eax
mov     eax, [esi+42h]
cmp     [esp+30h+rcsrc2.right], eax
jge     short loc_427951
mov     [esp+30h+rcsrc2.right], eax
mov     eax, [esi+46h]
cmp     [esp+30h+rcsrc2.bottom], eax
jge     short loc_42795e
mov     [esp+30h+rcsrc2.bottom], eax
mov     dx, [esi+1ch]
mov     ebx, [esp+30h+arg_8]
lea     ecx, [esp+30h+rcsrc2]
mov     eax, [ebx+0ch]
push    eax
push    ecx
push    edx
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_427991
mov     eax, [esi+36h]
lea     ecx, [esi+4ah]
push    eax
mov     edx, [ebx+0ch]
push    ecx
push    edi
push    edx
call    sub_429280
add     esp, 10h
xor     eax, eax
pop     ebp
mov     word ptr [esi+1ch], 0
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ebx, [esp+30h+arg_8]
mov     esi, [esp+30h+arg_0]
mov     edi, ds:ptinrect
mov     eax, [ebx]
mov     ecx, [ebx+4]
push    ecx
push    eax
lea     eax, [esi+3ah]
push    eax
call    edi
test    eax, eax
jz      short loc_4279d3
mov     eax, 0ffffffffh
pop     ebp
pop     edi
mov     [ebx+98h], esi
pop     esi
pop     ebx
add     esp, 20h
retn
lea     edx, [esi+0ch]
lea     ecx, [esp+30h+rc]
mov     eax, [edx]
mov     [ecx], eax
push    3
mov     ebp, [edx+4]
push    3
mov     [ecx+4], ebp
mov     ebp, ds:inflaterect
mov     eax, [edx+8]
mov     [ecx+8], eax
mov     edx, [edx+0ch]
mov     [ecx+0ch], edx
lea     ecx, [esp+38h+rc]
push    ecx
call    ebp
mov     eax, [ebx]
mov     ecx, [ebx+4]
lea     edx, [esp+30h+rc]
push    ecx
push    eax
push    edx
call    edi
test    eax, eax
jnz     short loc_427a1d
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
lea     eax, [esp+30h+rc]
push    0fffffffah
push    0fffffffah
push    eax
call    ebp
mov     eax, [ebx]
mov     ecx, [ebx+4]
lea     edx, [esp+30h+rc]
push    ecx
push    eax
push    edx
call    edi
test    eax, eax
jz      short loc_427a44
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, 0ffffffffh
pop     ebp
pop     edi
mov     [ebx+98h], esi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     esi, [esp+30h+arg_0]
lea     ecx, [esp+30h+rc]
mov     ebx, [esi+3eh]
mov     ebp, [esi+42h]
lea     edx, [esi+3ah]
cmp     edi, 7
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+0ch]
mov     [ecx+4], ebx
lea     ebx, [esi+1ch]
mov     [ecx+8], ebp
mov     [ecx+0ch], eax
jz      short loc_427a83
lea     ebx, [esi+1eh]
mov     eax, [esp+30h+rc.bottom]
mov     ecx, [esp+30h+rc.right]
mov     edx, [esp+30h+rc.top]
push    eax
mov     eax, [esp+34h+rc.left]
push    ecx
mov     cx, [ebx]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [ebx], ax
add     esp, 14h
jmp     short loc_427b0c
mov     esi, [esp+30h+arg_0]
mov     ebx, [esp+30h+arg_8]
mov     eax, [ebx+10h]
add     ebx, 10h
lea     edi, [esi+0ch]
mov     [edi], eax
push    edi
mov     ecx, [ebx+4]
mov     [edi+4], ecx
mov     edx, [ebx+8]
mov     [edi+8], edx
mov     eax, [ebx+0ch]
mov     [edi+0ch], eax
movsx   eax, word ptr [esi]
add     eax, esi
mov     cx, [eax-0a2h]
sub     eax, 0a6h
push    ecx
add     esi, 3ah
mov     edx, [eax]
push    edx
call    sub_427130
add     esp, 0ch
mov     ecx, [edi]
mov     eax, [edi+4]
push    esi
push    eax
push    ecx
call    sub_473ca0
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     esi, [esp+30h+arg_0]
mov     ebx, [esp+30h+arg_8]
push    ebx
push    edi
push    esi
call    sub_40fd60
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
test    byte ptr [edi+33h], 8
jz      short loc_427b76
push    4
lea     eax, [edi+0ch]
push    4
mov     esi, ds:inflaterect
push    eax
add     edi, 22h
call    esi
push    4
push    4
push    edi
call    esi
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
test    byte ptr [edi+33h], 8
jz      short loc_427ba6
push    0fffffffch
lea     eax, [edi+0ch]
push    0fffffffch
mov     esi, ds:inflaterect
push    eax
add     edi, 22h
call    esi
push    0fffffffch
push    0fffffffch
push    edi
call    esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    0
test    byte ptr [eax+33h], 4
jz      short loc_427bc0
push    8
jmp     short loc_427bc2
push    7
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
cmp     [esp+arg_4], 0
jz      short locret_427bd5
jmp     sub_475320
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
test    byte ptr [esi+32h], 20h
jz      short loc_427c18
push    6
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_427c3d
push    6
mov     eax, [esi+3ch]
push    eax
mov     edi, 1
call    sub_404c20
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
retn
push    2
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_427c3d
push    2
mov     eax, [esi+3ch]
push    eax
mov     edi, 1
call    sub_404c20
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
mov     dx, [esi+32h]
xor     edi, edi
test    dl, 80h
jz      short loc_427cdd
movsx   eax, word ptr [esi]
add     eax, esi
lea     ebx, [esp+14h+var_8]
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
cmp     [esp+14h+arg_4], edi
mov     ax, [eax+4]
mov     [ebx], ecx
mov     [ebx+4], ax
jz      short loc_427c9b
test    dl, 20h
jz      short loc_427c94
and     dx, 0ffdfh
jmp     short loc_427c97
or      dl, 20h
mov     [esi+32h], dx
mov     eax, ds:dword_4a6770+2
movsx   ecx, [esp+14h+var_8]
mov     ebx, [eax]
mov     ax, [esi+32h]
lea     edx, [ebx+ecx*4+6]
mov     cx, [edx]
and     ax, 20h
cmp     ax, 1
sbb     eax, eax
push    20bbh
inc     eax
push    1
shl     ax, 0ah
xor     ax, cx
and     ax, 400h
xor     ax, cx
mov     [edx], ax
call    sub_441c60
add     esp, 8
mov     ax, [esi+32h]
test    al, 20h
jz      short loc_427d4a
test    ah, 2
jz      short loc_427d1c
push    5
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      loc_427da9
push    4
mov     eax, [esi+3ch]
push    eax
mov     edi, 1
call    sub_404c20
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    4
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_427da9
push    4
mov     eax, [esi+3ch]
push    eax
mov     edi, 1
call    sub_404c20
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     [esp+14h+arg_8], 0
jz      short loc_427d84
test    ah, 1
jz      short loc_427d84
push    1
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_427da9
push    0
mov     eax, [esi+3ch]
push    eax
mov     edi, 1
call    sub_404c20
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    0
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_427da9
push    0
mov     eax, [esi+3ch]
push    eax
mov     edi, 1
call    sub_404c20
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 54h
push    ebx
push    esi
mov     esi, [esp+5ch+arg_0]
push    edi
mov     edi, [esp+60h+arg_4]
push    ebp
cmp     edi, 6ah
ja      def_427de0
xor     eax, eax
mov     al, ds:byte_42843c[edi]
jmp     ds:jpt_427de0[eax*4]
test    byte ptr [esi+32h], 4
jnz     loc_427ecf
mov     dx, [esi+1ch]
mov     ebp, [esp+64h+arg_8]
lea     ecx, [esi+0ch]
mov     eax, [ebp+0ch]
push    eax
push    ecx
push    edx
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      loc_427ecf
mov     bl, [esi+32h]
lea     edi, [esp+64h+var_30]
and     bl, 8
xor     eax, eax
add     bl, bl
mov     ecx, 0ch
rep stosd
or      bl, 21h
test    byte ptr [esi+33h], 20h
jz      short loc_427e9f
lea     edi, [esp+64h+rc]
mov     ecx, 6
rep stosd
stosw
lea     eax, [esp+64h+var_54]
lea     ecx, [esp+64h+rc]
push    eax
mov     edx, [esi+38h]
push    ecx
mov     eax, [esi+3ch]
push    ebx
push    edx
push    eax
call    sub_405740
add     esp, 14h
mov     eax, [esi+0ch]
sub     eax, [esp+64h+rc.left]
add     eax, [esp+64h+var_54]
mov     [esp+64h+var_3c], eax
mov     eax, [esi+10h]
sub     eax, [esp+64h+rc.top]
add     eax, [esp+64h+var_50]
lea     edx, [esp+64h+rc]
mov     [esp+64h+var_38], eax
mov     cx, [esi+1ch]
mov     [esp+64h+var_1c], offset sub_429160
mov     [esp+64h+var_18], offset sub_4291d0
mov     [esp+64h+var_14], offset loc_429230
mov     [esp+64h+var_34], cx
mov     [esp+64h+var_4], edx
mov     edx, [esi+14h]
lea     eax, [esp+64h+var_30]
push    eax
lea     ecx, [esi+0ch]
push    ebx
mov     eax, [ecx+0ch]
push    eax
mov     ebx, [ecx+4]
push    edx
mov     eax, [ecx]
push    ebx
mov     ecx, [esi+38h]
push    eax
lea     edx, [esi+40h]
push    ecx
mov     eax, [esi+3ch]
push    edx
mov     ecx, [ebp+0ch]
push    eax
push    ecx
call    sub_404f90
add     esp, 28h
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
test    byte ptr [esi+32h], 4
jnz     def_427de0
xor     edi, edi
push    esi
call    sub_427b80
mov     ebp, [esp+68h+arg_8]
add     esp, 4
mov     eax, [ebp+0]
mov     ecx, [ebp+4]
push    ecx
push    eax
mov     eax, [esi+18h]
mov     edx, [esi+14h]
mov     ebx, [esi+10h]
lea     ecx, [esi+0ch]
push    eax
push    edx
push    ebx
mov     eax, [ecx]
push    eax
mov     ecx, [esi+38h]
push    ecx
mov     edx, [esi+3ch]
push    edx
call    sub_406c40
add     esp, 20h
test    eax, eax
jz      short loc_427f2b
mov     edi, 0ffffffffh
mov     [ebp+98h], esi
push    esi
call    sub_427b50
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     ax, [esi+1e2h]
inc     ax
mov     [esi+1e2h], ax
cmp     ax, 1
jg      loc_428041
push    esi
call    sub_428e50
add     esp, 4
test    eax, eax
jz      loc_428041
xor     edi, edi
push    esi
lea     ebx, [esi+38h]
call    sub_427b80
mov     ebp, [esp+68h+arg_8]
add     esp, 4
mov     ecx, [ebp+0]
mov     eax, [ebp+4]
push    eax
push    ecx
mov     edx, [esi+18h]
mov     eax, [esi+14h]
mov     ebp, [esi+10h]
lea     ecx, [esi+0ch]
push    edx
push    eax
push    ebp
mov     ecx, [ecx]
push    ecx
mov     eax, [ebx]
push    eax
mov     edx, [esi+3ch]
push    edx
call    sub_406c40
add     esp, 20h
test    eax, eax
jz      short loc_427fd0
test    byte ptr [esi+32h], 20h
jz      short loc_427fbf
push    6
push    ebx
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428029
jmp     short loc_428024
push    2
push    ebx
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428029
jmp     short loc_428024
mov     ax, [esi+32h]
test    al, 20h
jz      short loc_427fff
test    ah, 2
jz      short loc_427fee
push    5
push    ebx
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428029
jmp     short loc_428024
push    4
push    ebx
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428029
jmp     short loc_428024
test    ah, 1
jz      short loc_428015
push    1
push    ebx
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428029
jmp     short loc_428024
push    0
push    ebx
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428029
mov     edi, 1
push    esi
call    sub_427b50
add     esp, 4
test    edi, edi
jz      short loc_428041
push    1
push    esi
call    sub_427bb0
add     esp, 8
dec     word ptr [esi+1e2h]
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     ax, [esi+1e2h]
inc     ax
mov     [esi+1e2h], ax
cmp     ax, 1
jg      loc_4280ee
push    esi
call    sub_428e50
add     esp, 4
test    eax, eax
jz      short loc_4280ee
xor     edi, edi
push    esi
call    sub_427b80
mov     ebp, [esp+68h+arg_8]
add     esp, 4
mov     ecx, [ebp+0]
mov     eax, [ebp+4]
push    eax
push    ecx
mov     edx, [esi+18h]
mov     eax, [esi+14h]
mov     ebx, [esi+10h]
lea     ecx, [esi+0ch]
push    edx
push    eax
push    ebx
mov     ecx, [ecx]
push    ecx
mov     eax, [esi+38h]
push    eax
mov     edx, [esi+3ch]
push    edx
call    sub_406c40
add     esp, 20h
test    eax, eax
jz      short loc_4280bb
mov     edi, 1
push    esi
call    sub_427b50
add     esp, 4
push    1
push    edi
push    esi
call    sub_427c50
add     esp, 0ch
test    eax, eax
jz      short loc_4280df
push    1
push    esi
call    sub_427bb0
add     esp, 8
test    edi, edi
jz      short loc_4280ee
push    esi
call    sub_428680
add     esp, 4
mov     esi, eax
dec     word ptr [esi+1e2h]
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     ax, [esi+1e2h]
inc     ax
mov     [esi+1e2h], ax
cmp     ax, 1
jg      short loc_42814e
push    esi
call    sub_428e50
add     esp, 4
test    eax, eax
jz      short loc_42814e
push    esi
call    sub_427be0
add     esp, 4
test    eax, eax
jz      short loc_42814e
push    1
push    esi
call    sub_427bb0
dec     word ptr [esi+1e2h]
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
dec     word ptr [esi+1e2h]
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
test    byte ptr [esi+32h], 4
jz      def_427de0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
push    esi
call    sub_427b80
mov     ebp, [esp+68h+arg_8]
add     esp, 4
mov     eax, [ebp+10h]
add     ebp, 10h
lea     ecx, [esi+0ch]
mov     [ecx], eax
push    esi
mov     edx, [ebp+4]
mov     [ecx+4], edx
mov     ebx, [ebp+8]
mov     [ecx+8], ebx
mov     eax, [ebp+0ch]
mov     [ecx+0ch], eax
call    sub_427b50
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     dx, [esi+32h]
test    dh, 10h
jz      def_427de0
movsx   ecx, word ptr [esi]
add     ecx, esi
lea     ebx, [esp+64h+var_30]
sub     ecx, 0a6h
test    dl, 8
mov     eax, [ecx]
mov     cx, [ecx+4]
mov     [ebx], eax
mov     [ebx+4], cx
jz      short loc_4281e7
mov     ds:dword_4a6660, 0
mov     eax, [esp+64h+var_30]
push    2
push    eax
call    sub_4417a0
add     esp, 8
jmp     def_427de0
mov     ax, [esi+32h]
test    ax, 404h
jnz     short loc_428212
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     [esp+64h+var_30], 0
mov     ax, [esi+1e2h]
inc     ax
mov     [esi+1e2h], ax
cmp     ax, 1
jg      loc_4283a9
mov     ebp, [esp+64h+arg_8]
cmp     word ptr [ebp+0ah], 0
jnz     short loc_428296
test    byte ptr [esi+32h], 4
jnz     short loc_428296
push    esi
call    sub_427b80
add     esp, 4
mov     eax, [ebp+0]
mov     ecx, [ebp+4]
push    ecx
push    eax
mov     eax, [esi+18h]
mov     edx, [esi+14h]
mov     ebx, [esi+10h]
lea     ecx, [esi+0ch]
push    eax
push    edx
push    ebx
mov     eax, [ecx]
push    eax
mov     ecx, [esi+38h]
push    ecx
mov     edx, [esi+3ch]
push    edx
call    sub_406c40
mov     [esp+84h+var_30], eax
add     esp, 20h
push    esi
call    sub_427b50
mov     dword ptr [ebp+20h], 0ffffffffh
add     esp, 4
mov     ax, [esi+32h]
mov     ebx, 0
test    ah, 3
jz      short loc_4282a9
mov     ebx, 1
cmp     word ptr [esi+1deh], 1
sbb     edi, edi
inc     edi
test    ebx, ebx
jz      short loc_4282c5
push    esi
call    sub_428e50
add     esp, 4
test    eax, eax
jnz     short loc_4282de
test    edi, edi
jz      loc_4283a9
push    esi
call    sub_428e90
add     esp, 4
test    eax, eax
jz      loc_4283a9
mov     [esp+64h+rc.left], 0
cmp     [esp+64h+var_30], 0
jz      short loc_42834f
test    ebx, ebx
jz      short loc_428335
test    byte ptr [esi+32h], 20h
jz      short loc_42830d
push    5
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428335
push    5
jmp     short loc_428321
push    1
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428335
push    1
mov     eax, [esi+3ch]
push    eax
call    sub_404c20
mov     [esp+6ch+rc.left], 1
add     esp, 8
test    edi, edi
jz      short loc_428397
movsx   eax, word ptr [esi+1e0h]
mov     [ebp+24h], eax
movsx   ecx, word ptr [esi+1deh]
mov     [ebp+20h], ecx
jmp     short loc_428397
test    ebx, ebx
jz      short loc_428397
test    byte ptr [esi+32h], 20h
jz      short loc_42836f
push    4
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428397
push    4
jmp     short loc_428383
push    0
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428397
push    0
mov     eax, [esi+3ch]
push    eax
call    sub_404c20
mov     [esp+6ch+rc.left], 1
add     esp, 8
cmp     [esp+64h+rc.left], 0
jz      short loc_4283a9
push    1
push    esi
call    sub_427bb0
add     esp, 8
dec     word ptr [esi+1e2h]
mov     eax, [esp+64h+var_30]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
test    byte ptr [esi+32h], 8
jz      short def_427de0
movsx   eax, word ptr [esi]
add     eax, esi
mov     edx, offset dword_4a6660
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
mov     ebp, [esp+64h+arg_8]
push    ebp
push    edi
push    esi
call    sub_40fd60
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_428507
mov     eax, ds:dword_4a6770+2
movsx   ecx, word ptr [esp+4+arg_0]
mov     edx, [eax]
test    byte ptr [edx+ecx*4+7], 4
jz      short loc_4284e2
or      byte ptr [esi+32h], 20h
jmp     short loc_4284e6
and     byte ptr [esi+32h], 0dfh
push    esi
call    sub_428830
add     esp, 4
push    0
push    7
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     eax, [esp+0ch+arg_4]
push    64h
lea     edi, [esi+4ah]
push    edi
push    eax
call    sub_462d70
add     esp, 0ch
mov     ebx, [esi+0ch]
mov     eax, [esi+10h]
mov     [esi+42h], ebx
push    1
mov     [esi+3ah], ebx
push    edi
mov     [esi+46h], eax
mov     [esi+3eh], eax
call    sub_4292f0
add     esp, 8
add     eax, ebx
add     eax, 5
push    1
mov     [esi+42h], eax
call    sub_429310
add     esp, 4
add     eax, 0bh
add     [esi+46h], eax
pop     edi
pop     esi
pop     ebx
retn
cmp     [esp+arg_4], 1
push    esi
jnz     short loc_428590
mov     esi, [esp+4+arg_0]
push    10b0780h
push    esi
call    sub_462670
add     esp, 8
movzx   eax, ax
pop     esi
retn
mov     esi, [esp+4+arg_0]
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 7
jnz     short loc_4285b6
push    2000640h
push    esi
call    sub_462670
add     esp, 8
movzx   eax, ax
pop     esi
retn
mov     eax, 1
pop     esi
retn
sub     esp, 19ch
cmp     [esp+19ch+arg_4], 1
push    esi
jnz     short loc_428604
mov     esi, [esp+1a0h+lpstring1]
mov     ecx, [esp+1a0h+arg_0]
movsx   eax, [esp+1a0h+arg_c]
push    eax
push    esi
push    ecx
call    sub_462d70
add     esp, 0ch
push    esi
call    sub_45b740
add     esp, 4
pop     esi
add     esp, 19ch
retn
mov     ecx, [esp+1a0h+arg_0]
mov     edx, dword_4ae1e0
shr     ecx, 10h
movsx   eax, cx
shl     eax, 6
mov     esi, [eax+edx+4]
mov     eax, [esi]
mov     eax, [eax]
test    eax, eax
jz      short loc_428631
mov     eax, [eax]
xor     edx, edx
mov     dl, 1
add     eax, [eax+edx*4]
jmp     short loc_428642
movzx   eax, cx
shl     eax, 10h
mov     al, 1
push    eax
call    sub_461250
add     esp, 4
lea     ecx, [esp+1a0h+var_19c]
push    19ah
push    ecx
push    16h
push    eax
call    sub_45c990
lea     ecx, [esp+1b0h+var_19c]
mov     esi, [esp+1b0h+lpstring1]
movsx   eax, [esp+1b0h+arg_c]
add     esp, 10h
push    eax
push    ecx
push    esi
call    sub_47f9f0
add     esp, 0ch
pop     esi
add     esp, 19ch
retn
mov     eax, [esp+arg_0]
sub     esp, 8
movsx   ecx, word ptr [eax]
push    esi
add     ecx, eax
push    edi
mov     esi, [eax+2]
mov     eax, [ecx-0a6h]
sub     ecx, 0a6h
mov     cx, [ecx+4]
lea     edx, [esp+10h+var_8]
mov     [edx], eax
mov     [edx+4], cx
cmp     [esp+10h+var_4], 4
mov     edi, [esp+10h+var_8]
jnz     short loc_4286f7
cmp     ds:dword_4a68c0, edi
jnz     short loc_4286d3
push    edi
call    sub_462480
add     esp, 4
cmp     ax, 7
mov     eax, 1
jz      short loc_4286d5
xor     eax, eax
test    eax, eax
jz      short loc_4286e6
push    edi
call    sub_43a8b0
add     esp, 4
test    eax, eax
jnz     short loc_428700
cmp     ds:dword_4a68c0, edi
jnz     short loc_428700
push    1
call    sub_435670
jmp     short loc_4286fd
push    edi
call    sub_43ca50
add     esp, 4
push    esi
push    offset dword_4a61c4
call    sub_412fc0
add     esp, 8
pop     edi
pop     esi
add     esp, 8
retn
sub     esp, 8
push    esi
mov     esi, [esp+0ch+arg_4]
test    esi, esi
jz      short loc_428731
mov     esi, 1
mov     word ptr [esp+0ch+var_4], 1
mov     eax, [esp+0ch+arg_0]
mov     ecx, [esp+0ch+var_4]
push    ecx
push    eax
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_428778
lea     ecx, [eax+32h]
test    esi, esi
jz      short loc_42875a
or      byte ptr [ecx], 2
jmp     short loc_42875d
and     byte ptr [ecx], 0fdh
test    byte ptr [ecx], 40h
jnz     short loc_42876b
push    eax
call    sub_428830
add     esp, 4
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     word ptr [esp+8+var_4], 1
mov     ecx, [esp+8+var_4]
push    ebx
push    esi
push    ecx
xor     esi, esi
push    eax
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_4287f6
mov     cx, [eax+32h]
mov     esi, 1
xor     edx, edx
mov     ebx, [esp+10h+arg_4]
mov     dl, cl
and     edx, esi
cmp     edx, ebx
jz      short loc_4287e9
test    ebx, ebx
jz      short loc_4287c4
or      cx, si
jmp     short loc_4287c8
and     cx, 0fffeh
mov     [eax+32h], cx
test    ebx, ebx
jz      short loc_4287db
push    eax
call    sub_428830
add     esp, 4
jmp     short loc_4287e9
or      byte ptr [eax+32h], 40h
mov     ds:dword_4a6668, 1
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     [esp+arg_0], 4
mov     eax, 1
jge     short locret_42880e
xor     eax, eax
retn
mov     eax, [esp+arg_0]
cmp     eax, 4
movsx   eax, ax
jl      short loc_428820
sub     eax, 4
retn
add     eax, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     bx, [esi+32h]
and     bx, 0ffbfh
mov     ax, bx
and     ax, 4
mov     [esi+32h], bx
cmp     ax, 1
mov     eax, [esi+38h]
sbb     edi, edi
push    eax
and     bx, 20h
call    sub_428800
inc     edi
add     esp, 4
cmp     bx, 1
sbb     ecx, ecx
neg     ecx
cmp     eax, ecx
jnz     short loc_42887d
mov     eax, [esi+38h]
push    eax
call    sub_428810
add     esp, 4
mov     ebx, eax
jmp     short loc_428880
mov     ebx, [esi+38h]
mov     ax, [esi+32h]
test    al, 2
jz      short loc_4288de
test    al, 1
jnz     short loc_4288c5
movsx   eax, word ptr [esi]
push    1000102h
mov     ecx, [eax+esi-0a6h]
push    ecx
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_4288c5
push    ebx
call    sub_428800
add     esp, 4
cmp     eax, 1
sbb     ebx, ebx
and     ebx, 0fffffffch
add     ebx, 7
test    byte ptr [esi+32h], 10h
jnz     short loc_4288fd
jmp     short loc_4288f8
cmp     ebx, 3
jnz     short loc_4288d0
xor     ebx, ebx
xor     edi, edi
jmp     short loc_4288fd
cmp     ebx, 7
jnz     short loc_4288da
mov     ebx, 4
xor     edi, edi
jmp     short loc_4288fd
push    ebx
call    sub_428800
add     esp, 4
cmp     eax, 1
sbb     ebx, ebx
and     ebx, 0fffffffch
add     ebx, 7
test    byte ptr [esi+32h], 10h
jnz     short loc_4288fd
mov     edi, 1
mov     cx, [esi+32h]
mov     ax, cx
and     ax, 4
cmp     ax, 1
sbb     eax, eax
inc     eax
cmp     eax, edi
jnz     short loc_42891e
cmp     [esi+38h], ebx
jnz     short loc_42891e
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
test    edi, edi
jz      short loc_428927
or      cl, 4
jmp     short loc_42892b
and     cx, 0fffbh
mov     [esi+32h], cx
test    byte ptr [esi+32h], 4
jz      short loc_428949
push    0
push    8
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
call    sub_4441e0
push    0
mov     [esi+38h], ebx
push    esi
call    sub_427bb0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
cmp     ds:dword_4a6668, 0
jz      short locret_428996
push    0
push    0
push    0
push    offset sub_4289a0
call    sub_43b080
mov     ds:dword_4a6668, 0
add     esp, 10h
retn
mov     eax, [esp+arg_0]
movsx   ecx, word ptr [eax]
cmp     dword ptr [ecx+eax-0aah], offset sub_427dc0
jnz     short loc_4289bd
push    eax
call    sub_428830
add     esp, 4
mov     eax, 1
retn
push    ebx
push    esi
mov     ebx, [esp+8+lprcdst]
push    edi
mov     esi, [esp+0ch+arg_0]
push    ebx
push    esi
call    sub_424200
add     esp, 8
test    eax, eax
jz      short loc_4289f4
cmp     dword ptr [ebx+0ch], 0
mov     edi, 1
jnz     short loc_4289f6
xor     edi, edi
test    edi, edi
jz      short loc_428a1a
push    esi
call    sub_462c40
add     esp, 4
test    eax, eax
jz      short loc_428a1a
mov     eax, [esp+0ch+arg_4]
push    ebx
mov     ecx, [esp+10h+arg_0]
push    eax
push    ecx
call    sub_427130
add     esp, 0ch
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 20h
cmp     word ptr [esp+20h+arg_4], 4
push    ebx
push    esi
push    edi
push    ebp
jnz     loc_428b5a
mov     ebx, [esp+30h+arg_0]
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   edi, ax
shl     edi, 6
xor     eax, eax
mov     al, bh
lea     ebp, ds:0[eax*4]
mov     eax, [edi+ecx+4]
mov     edx, [eax]
mov     eax, [edx+ebp]
test    eax, eax
jz      short loc_428a6d
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_428a76
push    ebx
call    sub_461250
add     esp, 4
push    6
push    eax
call    sub_45c870
mov     si, ax
add     esp, 8
mov     eax, dword_4ae1e0
mov     ecx, [edi+eax+4]
mov     edx, [ecx]
mov     eax, [edx+ebp]
test    eax, eax
jz      short loc_428aa1
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_428aaa
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+30h+var_20]
push    esi
push    ecx
push    6
push    eax
call    sub_45c8a0
mov     ebp, [esp+40h+lprc]
mov     edi, eax
movsx   eax, [esp+40h+var_20]
movsx   ecx, [esp+40h+var_1e]
movsx   edx, [esp+40h+var_1a]
add     esp, 10h
mov     [ebp+0], eax
mov     [ebp+4], ecx
mov     [ebp+0ch], edx
movsx   eax, [esp+30h+var_1c]
mov     [ebp+8], eax
test    edi, edi
jz      loc_428ba3
cmp     si, 8
jz      loc_428ba3
mov     eax, [ebp+0]
lea     edx, [esp+30h+rc]
mov     [esp+30h+var_18], eax
push    edx
mov     [esp+34h+var_14], ecx
call    sub_444150
add     esp, 4
push    0
push    0
push    0
push    0
push    ebp
call    ds:setrect
mov     ecx, [esp+30h+arg_4]
push    0
mov     eax, [esp+34h+arg_0]
push    ebp
push    ecx
push    eax
call    sub_427160
mov     edx, [esp+40h+var_18]
mov     ecx, [esp+40h+var_14]
add     esp, 10h
push    ebp
push    ecx
push    edx
call    sub_473ca0
lea     ecx, [esp+3ch+rc]
add     esp, 0ch
push    ecx
push    ebp
call    sub_473cc0
add     esp, 8
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ebp, [esp+30h+lprc]
mov     ebx, [esp+30h+arg_0]
push    ebp
push    ebx
call    sub_424200
add     esp, 8
test    eax, eax
jz      short loc_428b7b
cmp     dword ptr [ebp+0ch], 0
mov     edi, 1
jnz     short loc_428b7d
xor     edi, edi
test    edi, edi
jz      short loc_428ba3
push    ebx
call    sub_462c40
add     esp, 4
test    eax, eax
jz      short loc_428ba3
mov     eax, [esp+30h+arg_4]
push    1
mov     ecx, [esp+34h+arg_0]
push    ebp
push    eax
push    ecx
call    sub_427160
add     esp, 10h
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+arg_0]
mov     edx, ds:dword_4a6660
mov     ecx, offset dword_4a6660
mov     [eax], edx
mov     cx, [ecx+4]
mov     [eax+4], cx
retn
mov     ds:dword_4a6660, 0
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
sub     esp, 0c0h
push    ebx
push    esi
push    edi
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_428c70
lea     edi, [esp+0cch+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
mov     esi, ds:gettickcount
call    esi
mov     edi, eax
push    ebx
call    sub_427be0
add     esp, 4
test    eax, eax
jz      short loc_428c32
push    1
push    ebx
call    sub_427bb0
add     esp, 8
add     edi, 96h
call    esi
cmp     eax, edi
jb      short loc_428c38
push    0
push    1
push    ebx
call    sub_427c50
add     esp, 0ch
test    eax, eax
jz      short loc_428c63
push    1
push    ebx
call    sub_427bb0
add     esp, 8
push    ebx
call    sub_428680
add     esp, 4
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
push    ebx
push    esi
push    edi
mov     esi, ds:gettickcount
call    esi
mov     ebx, eax
mov     edi, [esp+0ch+arg_0]
push    edi
add     ebx, 96h
call    sub_428cc0
add     esp, 4
call    esi
cmp     eax, ebx
jb      short loc_428ca0
push    edi
call    sub_428cc0
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 0d4h
cmp     ds:frequency, 0
push    ebx
push    esi
push    edi
mov     esi, 0
push    ebp
jz      short loc_428ce8
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     esi, eax
test    esi, esi
jz      loc_428e41
mov     eax, [esp+0e4h+arg_0]
push    eax
call    sub_4624e0
add     esp, 4
cmp     eax, 0bh
jnz     loc_428e02
lea     eax, [esp+0e4h+var_d2]
mov     ecx, [esp+0e4h+arg_0]
push    eax
push    1eh
push    ecx
call    sub_461350
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jz      loc_428e32
mov     ax, [esp+0e4h+var_d2]
shr     ax, 2
xor     bp, bp
mov     [esp+0e4h+var_d4], ax
cmp     ax, bp
jle     loc_428deb
mov     eax, [esp+0e4h+arg_0]
shr     eax, 10h
mov     word ptr [esp+0e4h+var_d0], ax
shl     ax, 10h
mov     [esp+0e4h+var_cc], ax
movsx   eax, bp
lea     edx, [ebx+eax*4]
mov     ax, [edx]
mov     cx, ax
or      cx, [esp+0e4h+var_cc]
jle     short loc_428d87
movzx   eax, ax
mov     ecx, [esp+0e4h+var_d0]
and     ecx, 0ffffh
shl     ecx, 10h
or      ecx, eax
mov     [esp+0e4h+var_c8], ecx
jmp     short loc_428d8f
mov     [esp+0e4h+var_c8], 0
mov     ax, [edx+2]
mov     word ptr [esp+0e4h+var_c4], ax
mov     eax, [esp+0e4h+var_c4]
mov     ecx, [esp+0e4h+var_c8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edx, eax
test    edx, edx
jz      short loc_428dde
lea     edi, [esp+0e4h+rc]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
lea     eax, [esp+0e4h+rc]
mov     [esp+0e4h+rc.bottom], esi
push    eax
push    28h
push    edx
call    dword ptr [edx+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
inc     bp
cmp     bp, [esp+0e4h+var_d4]
jl      loc_428d5c
mov     eax, [esp+0e4h+arg_0]
push    ebx
push    0
push    1eh
push    eax
call    sub_4613a0
add     esp, 10h
jmp     short loc_428e32
lea     eax, [esp+0e4h+rc]
mov     ecx, [esp+0e4h+arg_0]
push    eax
push    ecx
call    sub_424200
lea     ecx, [esp+0ech+rc]
add     esp, 8
push    0ffffffffh
push    0ffffffffh
push    ecx
call    ds:inflaterect
lea     ecx, [esp+0e4h+rc]
push    ecx
push    esi
call    ds:invertrect
push    esi
mov     eax, ds:frequency
push    eax
call    __beep_0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0d4h
retn
mov     ecx, [esp+arg_0]
mov     eax, [ecx+38h]
cmp     eax, 7
jz      short loc_428e6c
cmp     eax, 3
jz      short loc_428e6c
test    byte ptr [ecx+32h], 4
mov     eax, 1
jz      short loc_428e6e
xor     eax, eax
test    eax, eax
jz      short locret_428e82
mov     cx, [ecx+32h]
test    ch, 10h
jz      short locret_428e82
test    cl, 40h
jz      short locret_428e82
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+38h]
cmp     ecx, 7
jz      short loc_428ead
cmp     ecx, 3
jz      short loc_428ead
test    byte ptr [eax+32h], 4
jnz     short loc_428ead
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, [esp+arg_4]
push    esi
xor     esi, esi
push    eax
mov     ecx, [esp+8+arg_0]
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_428ee1
push    eax
call    sub_428e50
add     esp, 4
mov     esi, eax
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     esi
retn
cmp     [esp+arg_4], 1
push    esi
jnz     short loc_428f0d
mov     esi, [esp+4+arg_0]
push    10b0780h
push    esi
call    sub_462670
add     esp, 8
pop     esi
retn
mov     esi, [esp+4+arg_0]
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 7
jnz     short loc_428f30
push    2000640h
push    esi
call    sub_462670
add     esp, 8
pop     esi
retn
mov     ax, 1
pop     esi
retn
sub     esp, 8
push    esi
call    sub_4441e0
mov     word ptr [esp+0ch+var_4], 4
mov     eax, [esp+0ch+arg_0]
mov     ecx, [esp+0ch+var_4]
push    ecx
push    eax
call    sub_43b150
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_428fe1
cmp     [esp+0ch+arg_4], 0
jz      short loc_428f9d
test    byte ptr [esi+32h], 20h
jz      short loc_428f89
push    4
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428fd4
jmp     short loc_428fc9
push    0
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428fd4
jmp     short loc_428fc9
test    byte ptr [esi+32h], 20h
jz      short loc_428fb7
push    7
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428fd4
jmp     short loc_428fc9
push    3
lea     eax, [esi+38h]
push    eax
call    sub_4061c0
add     esp, 8
test    eax, eax
jz      short loc_428fd4
push    0
push    esi
call    sub_427bb0
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    0
push    offset sub_429010
push    0
push    eax
call    sub_4620e0
add     esp, 10h
retn
sub     esp, 8
push    esi
push    edi
mov     esi, [esp+10h+arg_0]
push    0
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 7
jnz     short loc_429084
mov     [esp+10h+var_8], esi
mov     word ptr [esp+10h+var_4], 1
mov     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_429064
movsx   ecx, word ptr [eax]
push    offset dword_4a61c4
mov     edi, [ecx+eax-9eh]
call    sub_412f60
add     esp, 4
jmp     short loc_429068
mov     edi, [esp+10h+var_8]
mov     [esp+10h+var_8], esi
push    1
mov     word ptr [esp+14h+var_4], 1
mov     eax, [esp+14h+var_4]
push    edi
push    eax
push    esi
call    sub_43b5a0
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
lea     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    offset sub_429100
push    0
push    ecx
call    sub_4620e0
add     esp, 10h
retn
sub     esp, 4
push    esi
push    414h
mov     esi, [esp+0ch+arg_0]
push    esi
call    sub_42e360
add     esp, 8
test    eax, eax
mov     ax, 4
jg      short loc_4290d2
mov     ax, 2
mov     [esp+8+var_2], ax
lea     eax, [esp+8+var_2]
push    eax
push    offset sub_429100
push    0
push    esi
call    sub_4620e0
add     esp, 10h
pop     esi
add     esp, 4
retn
sub     esp, 8
push    esi
push    0
mov     esi, [esp+10h+arg_0]
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 7
jnz     short loc_429150
mov     word ptr [esp+0ch+var_4], 1
mov     eax, [esp+0ch+var_4]
push    eax
push    esi
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_429150
mov     ecx, [esp+0ch+arg_4]
mov     cx, [ecx]
push    ecx
push    eax
call    sub_43b4e0
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, 1
pop     esi
add     esp, 8
retn
mov     eax, [esp+lprcsrc2]
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+lprcsrc1]
push    edi
lea     ecx, [esp+1ch+rcdst]
push    ebp
push    eax
push    esi
push    ecx
call    ds:intersectrect
mov     ecx, [esi+14h]
mov     eax, [esi+10h]
lea     edx, [esp+20h+rcdst]
push    ecx
push    eax
mov     edi, ds:offsetrect
push    edx
call    edi
mov     cx, [esi+18h]
mov     ebx, [esp+20h+lprc]
lea     eax, [esp+20h+rcdst]
push    ebx
push    eax
push    ecx
call    sub_474340
add     esp, 0ch
mov     ebp, eax
mov     eax, [esi+14h]
neg     eax
push    eax
mov     eax, [esi+10h]
neg     eax
push    eax
push    ebx
call    edi
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, [esp+arg_0]
sub     esp, 10h
lea     edx, [esp+10h+rc]
push    esi
mov     esi, [esp+14h+arg_4]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
mov     edx, [esi+14h]
push    edx
mov     eax, [esi+10h]
lea     ecx, [esp+18h+rc]
push    eax
push    ecx
call    ds:offsetrect
mov     ecx, [esp+14h+rc.bottom]
mov     edx, [esp+14h+rc.right]
mov     eax, [esp+14h+rc.top]
push    ecx
mov     ecx, [esp+18h+rc.left]
push    edx
mov     dx, [esi+18h]
push    eax
push    ecx
push    edx
call    sub_474400
add     esp, 14h
pop     esi
add     esp, 10h
retn
mov     ax, [esp+4]
push    ebx
test    ax, ax
push    esi
push    edi
mov     edi, [esp+18h]
jz      short loc_429246
movzx   eax, ax
jmp     short loc_42924c
xor     eax, eax
mov     ax, [edi+18h]
mov     esi, [esp+14h]
push    esi
push    eax
call    sub_474aa0
mov     bx, ax
add     esp, 8
mov     eax, [edi+14h]
neg     eax
push    eax
mov     eax, [edi+10h]
neg     eax
push    eax
push    esi
call    ds:offsetrect
mov     ax, bx
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+hdc]
push    edi
call    ds:savedc
mov     ebx, eax
mov     ebp, [esp+10h+arg_4]
mov     eax, [esp+10h+arg_c]
push    eax
push    ebp
push    edi
call    sub_429340
add     esp, 0ch
mov     esi, [ebp+0]
add     esi, 5
mov     ebp, [ebp+4]
add     ebp, 0bh
push    0
push    edi
call    ds:settextcolor
mov     eax, [esp+10h+lpstring]
push    eax
call    ds:lstrlena
mov     ecx, [esp+10h+lpstring]
push    eax
push    ecx
push    ebp
push    esi
push    1
push    edi
call    sub_449310
add     esp, 18h
push    ebx
push    edi
call    ds:restoredc
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+lpstring]
push    esi
call    ds:lstrlena
push    eax
push    esi
mov     ax, word ptr [esp+0ch+arg_4]
push    eax
push    0
call    sub_4493b0
add     esp, 10h
pop     esi
retn
push    esi
push    edi
mov     si, [esp+8+arg_0]
push    esi
push    0
call    sub_4494a0
add     esp, 8
mov     edi, eax
push    esi
push    0
call    sub_449480
add     esp, 8
add     eax, edi
pop     edi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
push    7f7f7fh
push    1
push    2
call    ds:createpen
push    eax
mov     ebx, eax
mov     esi, [esp+18h+hdc]
mov     edi, ds:selectobject
push    esi
call    edi
push    5
call    ds:getstockobject
push    eax
push    esi
call    edi
push    0dh
push    esi
call    ds:setrop2
mov     ebp, [esp+14h+arg_4]
mov     [esp+14h+rop2], eax
mov     eax, [ebp+0ch]
mov     ecx, [ebp+8]
push    eax
mov     edx, [ebp+4]
push    ecx
mov     eax, [ebp+0]
push    edx
push    eax
push    esi
call    ds:rectangle
cmp     [esp+14h+arg_8], 0
jz      short loc_4293e1
push    0
mov     eax, [ebp+4]
push    eax
mov     ecx, [ebp+0]
push    ecx
push    esi
call    ds:movetoex
mov     ecx, [ebp+0ch]
mov     edx, [ebp+8]
push    ecx
push    edx
push    esi
call    ds:lineto
push    0
mov     ecx, [ebp+4]
push    ecx
mov     edx, [ebp+8]
push    edx
push    esi
call    ds:movetoex
mov     ecx, [ebp+0ch]
mov     edx, [ebp+0]
push    ecx
push    edx
push    esi
call    ds:lineto
push    7
call    ds:getstockobject
push    eax
push    esi
call    edi
push    ebx
call    ds:deleteobject
push    0
call    ds:getstockobject
push    eax
push    esi
call    edi
mov     eax, [esp+14h+rop2]
push    eax
push    esi
call    ds:setrop2
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     edx, [esp+arg_0]
mov     eax, ds:dword_4a667c
mov     ecx, ds:dword_4a6680
mov     [edx], eax
mov     eax, [esp+arg_4]
mov     [edx+4], ecx
mov     ecx, ds:dword_4a66b2
mov     [eax], ecx
cmp     ds:dword_4a66ae, 1
sbb     eax, eax
inc     eax
retn
mov     eax, ds:frequency
push    eax
call    sub_490870
mov     eax, [esp+4+arg_4]
mov     ecx, [esp+4+arg_0]
add     esp, 4
mov     ds:dword_4a66a6, eax
mov     ds:dword_4a6678, 7
mov     ds:dword_4a66aa, ecx
retn
mov     edx, [esp+arg_4]
sub     esp, 0c8h
lea     eax, [esp+0c8h+var_c8]
push    esi
push    edi
xor     esi, esi
mov     ecx, [esp+0d0h+arg_8]
push    eax
push    ecx
push    edx
call    sub_43b2a0
lea     eax, [esp+0dch+var_c8]
add     esp, 0ch
mov     edx, offset dword_4a6684
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     ecx, [esp+0d0h+var_c8]
mov     edx, [esp+0d0h+var_c4]
push    edx
push    ecx
call    sub_43b150
add     esp, 8
mov     edx, eax
cmp     edx, esi
jz      loc_429558
lea     edi, [esp+0d0h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
mov     eax, [esp+0d0h+arg_4]
mov     ecx, [esp+0d0h+arg_8]
mov     [esp+0d0h+var_c0], eax
mov     eax, [esp+0d0h+arg_0]
sub     eax, 204h
mov     [esp+0d0h+var_bc], ecx
cmp     eax, 5
ja      short def_42950b
jmp     ds:jpt_42950b[eax*4]
mov     esi, 33h
jmp     short def_42950b
mov     esi, 34h
jmp     short def_42950b
mov     esi, 37h
jmp     short def_42950b
mov     esi, 35h
jmp     short def_42950b
mov     esi, 36h
jmp     short def_42950b
mov     esi, 38h
test    esi, esi
jz      short loc_42954b
lea     eax, [esp+0d0h+var_c0]
push    eax
push    esi
push    edx
call    dword ptr [edx+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     edi
pop     esi
add     esp, 0c8h
retn
sub     esp, 0c8h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
mov     ds:dword_4a66ba, esi
cmp     ds:dword_4a6678, esi
jz      short loc_4295b4
mov     eax, [esp+0d8h+arg_0]
mov     ecx, [esp+0d8h+arg_4]
push    ecx
push    eax
call    sub_429ac0
add     esp, 8
jmp     short loc_4295b9
call    sub_466a50
mov     ebx, [esp+0d8h+arg_8]
mov     ds:dword_4a66ae, ebx
call    ds:gettickcount
mov     ecx, [esp+0d8h+arg_4]
lea     edx, [esp+0d8h+var_c0]
push    edx
mov     ds:dword_4a66b2, eax
mov     eax, [esp+0dch+arg_0]
mov     ds:dword_4a667c, eax
mov     ds:dword_4a6680, ecx
call    sub_41afc0
lea     ecx, [esp+0dch+var_c0]
add     esp, 4
xor     eax, eax
push    ecx
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
push    209eh
mov     al, 1
push    eax
call    sub_4428a0
lea     ecx, [esp+0e8h+var_c0]
add     esp, 10h
xor     eax, eax
push    ecx
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
push    2098h
mov     al, 1
push    eax
call    sub_4428a0
lea     ecx, [esp+0e8h+var_c0]
add     esp, 10h
xor     eax, eax
push    ecx
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
push    2099h
mov     al, 1
push    eax
call    sub_4428a0
lea     ecx, [esp+0e8h+var_c8]
mov     edx, [esp+0e8h+arg_0]
mov     eax, [esp+0e8h+arg_4]
add     esp, 10h
push    ecx
push    eax
push    edx
call    sub_43b2a0
lea     eax, [esp+0e4h+var_c8]
add     esp, 0ch
mov     edx, offset dword_4a6684
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     edx, [esp+0d8h+var_c4]
push    edx
mov     ecx, [esp+0dch+var_c8]
push    ecx
call    sub_43b150
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      loc_429733
mov     eax, [esp+0d8h+var_c8]
push    eax
call    sub_429860
lea     edi, [esp+0dch+var_c0]
add     esp, 4
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
mov     [esp+0d8h+var_b6], bx
mov     eax, [esp+0d8h+arg_0]
mov     ecx, [esp+0d8h+arg_4]
mov     [esp+0d8h+var_c0], eax
lea     eax, [esp+0d8h+var_c0]
mov     [esp+0d8h+var_bc], ecx
push    eax
push    6
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
mov     edi, eax
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
test    edi, edi
jz      short loc_429726
mov     ds:dword_4a6678, 1
mov     eax, ds:frequency
push    eax
call    sub_490870
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
cmp     word ptr [esp+0d8h+var_c4], 1
jnz     short loc_429733
mov     esi, 1
mov     eax, [esp+0d8h+arg_0]
push    ebx
mov     ecx, [esp+0dch+arg_4]
push    ecx
push    eax
call    sub_429e40
add     esp, 0ch
test    eax, eax
jnz     loc_429851
test    ebx, ebx
jz      short loc_42978d
call    sub_438900
mov     eax, [esp+0d8h+var_c8]
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_42977d
mov     eax, [esp+0d8h+var_c8]
push    eax
call    sub_4290b0
add     esp, 4
call    sub_490890
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
test    esi, esi
jnz     loc_429851
cmp     [esp+0d8h+var_c8], 0
jz      loc_429839
mov     eax, [esp+0d8h+var_c4]
mov     ecx, [esp+0d8h+var_c8]
push    eax
push    ecx
call    sub_429f80
add     esp, 8
test    eax, eax
jz      short loc_4297fc
mov     eax, [esp+0d8h+arg_0]
mov     ecx, [esp+0d8h+arg_4]
mov     edx, [esp+0d8h+var_c4]
push    ecx
push    eax
push    edx
mov     eax, [esp+0e4h+var_c8]
push    eax
call    sub_429fc0
add     esp, 10h
mov     ecx, ds:frequency
mov     ds:dword_4a6678, 3
push    ecx
call    sub_490870
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
cmp     [esp+0d8h+var_c8], 0
jz      short loc_429839
mov     eax, ds:dword_4a6770+2
movsx   ecx, word ptr [esp+0d8h+var_c8]
mov     edx, [eax]
test    byte ptr [edx+ecx*4+5], 8
jz      short loc_429839
mov     ds:dword_4a6678, 4
mov     eax, ds:frequency
push    eax
call    sub_490870
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
mov     ds:dword_4a6678, 8
mov     eax, ds:frequency
push    eax
call    sub_490870
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
mov     ecx, [esp+arg_0]
sub     esp, 1b4h
lea     eax, [esp+1b4h+string]
push    19ah
push    eax
push    ecx
call    sub_486100
lea     ecx, [esp+1c0h+string]
lea     edx, [esp+1c0h+var_1b4]
add     esp, 0ch
push    ecx
push    edx
call    sub_41aec0
lea     ecx, [esp+1bch+var_1b4]
add     esp, 8
xor     eax, eax
push    ecx
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
push    209eh
mov     al, 1
push    eax
call    sub_4428a0
lea     ecx, [esp+1c4h+var_1b4]
add     esp, 10h
xor     eax, eax
push    ecx
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
push    2083h
mov     al, 1
push    eax
call    sub_4428a0
add     esp, 1c4h
retn
mov     eax, [esp+pt.x]
mov     ecx, [esp+pt.y]
sub     esp, 0c8h
mov     ds:dword_4a6670, eax
mov     eax, ds:dword_4a6678
mov     ds:dword_4a6674, ecx
push    esi
push    edi
cmp     eax, 8
ja      def_429909
jmp     ds:jpt_429909[eax*4]
lea     eax, [esp+0d0h+pt]
push    1
push    1
push    eax
call    sub_42ba50
add     esp, 0ch
jmp     def_429909
mov     ax, ds:word_4a6688
mov     ecx, ds:dword_4a6684
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edx, eax
test    edx, edx
jz      def_429909
lea     edi, [esp+0d0h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
mov     eax, [esp+0d0h+pt.x]
mov     ecx, [esp+0d0h+pt.y]
mov     [esp+0d0h+var_c0], eax
lea     eax, [esp+0d0h+var_c0]
mov     [esp+0d0h+var_bc], ecx
push    eax
push    3
push    edx
call    dword ptr [edx+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
jmp     def_429909
mov     eax, [esp+0d0h+pt.x]
mov     ecx, [esp+0d0h+pt.y]
push    ecx
push    eax
push    offset rcdst
call    ds:ptinrect
cmp     eax, ds:dword_4a66a2
mov     esi, eax
jz      def_429909
mov     eax, ds:dword_4a669e
push    eax
call    sub_428cc0
add     esp, 4
mov     ds:dword_4a66a2, esi
jmp     short def_429909
mov     eax, [esp+0d0h+pt.y]
mov     ecx, [esp+0d0h+pt.x]
push    eax
push    ecx
call    sub_438770
add     esp, 8
jmp     short def_429909
cmp     ds:dword_4a66aa, 0
jz      short def_429909
mov     eax, [esp+0d0h+pt.x]
mov     ecx, [esp+0d0h+pt.y]
push    ecx
push    eax
call    ds:dword_4a66aa
add     esp, 8
jmp     short def_429909
mov     eax, ds:dword_4a667c
mov     ecx, ds:dword_4a6680
mov     edx, [esp+0d0h+pt.x]
push    ecx
push    eax
mov     eax, [esp+0d8h+pt.y]
push    eax
push    edx
call    sub_410e40
add     esp, 10h
cmp     eax, 19h
jle     short def_429909
mov     ds:dword_4a6678, 0
cmp     ds:dword_4a68c4, 0
jnz     short loc_429a90
call    sub_42b830
test    eax, eax
jnz     short loc_429a90
call    sub_40d620
mov     [esp+0d0h+var_c0], eax
mov     [esp+0d0h+var_bc], edx
call    sub_40d5d0
mov     ecx, [esp+0d0h+var_bc]
mov     [esp+0d0h+var_c8], eax
mov     eax, [esp+0d0h+var_c0]
push    ecx
mov     [esp+0d4h+var_c4], edx
push    eax
mov     edx, [esp+0d8h+var_c8]
mov     eax, [esp+0d8h+var_c4]
push    eax
push    edx
call    sub_40d0f0
add     esp, 10h
test    eax, eax
jz      short loc_429a90
call    sub_40d630
pop     edi
pop     esi
add     esp, 0c8h
retn
sub     esp, 1d4h
push    esi
push    edi
call    sub_490890
mov     eax, ds:dword_4a6678
dec     eax
cmp     eax, 7
ja      def_429adc
jmp     ds:jpt_429adc[eax*4]
mov     ax, ds:word_4a6688
mov     ecx, ds:dword_4a6684
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edx, eax
test    edx, edx
jz      def_429adc
lea     edi, [esp+1dch+string]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
mov     eax, [esp+1dch+arg_0]
mov     ecx, [esp+1dch+arg_4]
mov     dword ptr [esp+1dch+string], eax
lea     eax, [esp+1dch+string]
mov     [esp+1dch+var_198], ecx
push    eax
push    4
push    edx
call    dword ptr [edx+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
cmp     ds:dword_4a66ba, 0
jz      def_429adc
mov     eax, ds:dword_4a66c2
mov     ecx, ds:dword_4a66be
push    eax
push    ecx
call    ds:dword_4a66ba
mov     ds:dword_4a66ba, 0
add     esp, 8
jmp     def_429adc
cmp     ds:dword_4a66a2, 0
jnz     short loc_429b8d
push    1
call    sub_43eba0
add     esp, 4
jmp     def_429adc
mov     esi, ds:gettickcount
call    esi
mov     ecx, ds:dword_4a66b2
add     ecx, 96h
cmp     eax, ecx
jb      short loc_429b93
mov     eax, ds:dword_4a669e
push    eax
call    sub_428cc0
add     esp, 4
push    1
call    sub_43eba0
add     esp, 4
cmp     ds:dword_4a66b6, 0
jz      short loc_429bf3
mov     eax, ds:dword_4a6684
mov     ecx, ds:dword_4a669a
push    eax
push    ecx
call    sub_461f70
add     esp, 4
push    eax
call    sub_426d80
add     esp, 8
push    2088h
push    1
call    sub_441c60
add     esp, 8
push    1
mov     eax, ds:dword_4a669a
push    eax
call    sub_43c630
add     esp, 8
jmp     def_429adc
call    sub_438900
mov     eax, ds:dword_4a6684
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_429c2f
mov     eax, ds:dword_4a6684
push    eax
call    sub_4290b0
add     esp, 4
cmp     ds:dword_4a68c4, 0
jnz     def_429adc
mov     ax, ds:word_4a6688
mov     ecx, ds:dword_4a6684
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edi, eax
test    edi, edi
jz      def_429adc
lea     esi, [edi+0ch]
mov     eax, [esi]
cmp     [edi+22h], eax
jnz     short loc_429c6e
mov     eax, [edi+10h]
cmp     [edi+26h], eax
jz      short loc_429cad
lea     eax, [esp+1dch+string]
push    19ah
push    eax
mov     ecx, ds:dword_4a6684
push    ecx
call    sub_486100
lea     ecx, [esp+1e8h+string]
add     esp, 0ch
mov     edx, ds:dword_4a6684
push    ecx
push    0
push    2087h
push    edx
call    sub_442960
movsx   ecx, word ptr [edi]
add     esp, 10h
mov     dword ptr [ecx+edi-4], 0
mov     ecx, ds:dword_4a6684
mov     eax, offset dword_4a6684
mov     ax, [eax+4]
lea     edx, [esp+1dch+var_1a8]
mov     [esp+1dch+var_1cc], 4
mov     [edx], ecx
mov     [edx+4], ax
lea     edx, [esp+1dch+var_1b0]
push    edx
push    esi
call    sub_473c30
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
lea     ecx, [esp+1e0h+var_1d4]
lea     edx, [esp+1e0h+var_1cc]
add     esp, 4
push    ecx
push    edx
call    sub_433460
add     esp, 8
test    eax, eax
jz      def_429adc
mov     eax, ds:dword_4a6684
mov     ecx, [esp+1dch+var_1d4]
push    eax
push    ecx
call    sub_461f70
add     esp, 4
push    eax
call    sub_426d80
add     esp, 8
push    2088h
push    1
call    sub_441c60
mov     ecx, [esp+1e4h+var_1d4]
add     esp, 8
push    1
push    ecx
call    sub_43c630
add     esp, 8
jmp     def_429adc
mov     eax, [esp+1dch+arg_0]
mov     ecx, [esp+1dch+arg_4]
lea     edx, [esp+1dch+string]
push    0
mov     dword ptr [esp+1e0h+string+2], eax
push    edx
mov     [esp+1e4h+var_198+2], ecx
mov     [esp+1e4h+var_192], 0
call    sub_4354f0
add     esp, 8
test    eax, eax
jnz     def_429adc
push    0
call    sub_435670
add     esp, 4
test    eax, eax
jnz     def_429adc
call    sub_436780
jmp     short def_429adc
call    sub_438900
mov     eax, ds:dword_4a6684
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_429db7
mov     eax, ds:dword_4a6684
push    eax
call    sub_4290b0
add     esp, 4
cmp     ds:dword_4a66aa, 0
jz      short loc_429dcf
mov     eax, ds:dword_4a66a6
push    eax
call    ds:dword_4a66aa
add     esp, 4
xor     eax, eax
mov     ds:dword_4a66aa, eax
mov     ds:dword_4a66a6, eax
jmp     short def_429adc
cmp     ds:dword_4a66aa, 0
jz      short loc_429dff
mov     eax, [esp+1dch+arg_0]
mov     ecx, [esp+1dch+arg_4]
push    ecx
push    eax
call    ds:dword_4a66a6
add     esp, 8
mov     ds:dword_4a66aa, 0
mov     ds:dword_4a6678, 0
pop     edi
pop     esi
add     esp, 1d4h
retn
sub     esp, 30h
mov     ds:dword_4a66b6, 0
lea     eax, [esp+30h+var_30]
push    eax
call    sub_433c30
mov     eax, [esp+34h+arg_0]
mov     ecx, [esp+34h+arg_4]
mov     edx, [esp+34h+arg_8]
mov     [esp+34h+var_24], eax
mov     [esp+34h+var_20], ecx
mov     [esp+34h+var_1c], edx
lea     edx, [esp+34h+var_c]
mov     ecx, ds:dword_4a6684
add     esp, 4
mov     eax, offset dword_4a6684
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
push    offset dword_4a669a
mov     [esp+34h+var_30], 3
lea     edx, [esp+34h+var_30]
push    edx
call    sub_433460
add     esp, 8
test    eax, eax
jz      loc_429f78
mov     eax, ds:dword_4a669a
push    eax
call    sub_4624e0
add     esp, 4
sub     eax, 0bh
cmp     eax, 1
sbb     eax, eax
neg     eax
cmp     ds:dword_4a669e, 0
mov     ds:dword_4a66b6, eax
jz      short loc_429f29
push    offset rcdst
mov     eax, ds:dword_4a669e
push    eax
call    sub_424200
add     esp, 8
mov     eax, ds:dword_4a669e
push    eax
call    sub_428cc0
mov     ds:dword_4a66a2, 1
add     esp, 4
mov     ds:dword_4a6678, 2
push    0
call    sub_43eba0
add     esp, 4
mov     eax, ds:frequency
push    eax
call    sub_490870
add     esp, 4
mov     eax, 1
add     esp, 30h
retn
cmp     ds:dword_4a66b6, 0
jz      short loc_429f5f
mov     eax, ds:dword_4a6684
mov     ecx, ds:dword_4a669a
push    eax
push    ecx
call    sub_461f70
add     esp, 4
push    eax
call    sub_426d80
add     esp, 8
push    2088h
push    1
call    sub_441c60
add     esp, 8
push    1
mov     eax, ds:dword_4a669a
push    eax
call    sub_43c630
add     esp, 8
mov     eax, 1
add     esp, 30h
retn
xor     eax, eax
add     esp, 30h
retn
mov     eax, [esp+arg_4]
push    eax
call    sub_43b770
add     esp, 4
test    eax, eax
jz      short loc_429fae
mov     eax, ds:dword_4a6770+2
movsx   ecx, [esp+arg_0]
mov     edx, [eax]
mov     ax, [edx+ecx*4+4]
and     ax, 400h
shr     ax, 0ah
movzx   eax, ax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_4]
sub     esp, 70h
mov     ecx, [esp+70h+arg_0]
push    ebx
push    esi
push    edi
push    ebp
push    eax
push    ecx
call    sub_43b150
mov     di, word ptr [esp+88h+arg_4]
mov     ebx, [esp+88h+arg_0]
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_42a2b9
lea     eax, [esp+80h+var_38]
push    eax
push    esi
call    sub_4385b0
lea     eax, [esp+88h+var_60]
add     esp, 8
push    eax
push    esi
call    sub_438610
lea     eax, [esp+88h+var_70]
mov     ecx, [esp+88h+arg_4]
mov     edx, [esp+88h+arg_0]
add     esp, 8
push    eax
push    ecx
push    edx
call    sub_43b260
mov     [esp+8ch+var_38], 0
mov     ecx, [esp+8ch+var_70]
sub     ecx, [esp+8ch+arg_8]
mov     [esp+8ch+var_34], ecx
mov     ecx, [esp+8ch+var_6c]
sub     ecx, [esp+8ch+arg_c]
add     esp, 0ch
test    di, di
mov     [esp+80h+var_30], ecx
jnz     loc_42a284
push    20306c0h
push    ebx
call    sub_462670
add     esp, 8
cmp     ax, 2
jnz     loc_42a284
push    5
push    ebx
call    sub_462670
movzx   eax, ax
add     esp, 8
cmp     eax, 2
jz      short loc_42a093
cmp     eax, 4
jz      loc_42a18b
jmp     loc_42a284
push    0fh
push    ebx
call    sub_4612e0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      loc_42a284
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     eax, eax
mov     al, bh
mov     ebp, [edx]
mov     eax, [ebp+eax*4+0]
test    eax, eax
jz      short loc_42a0d8
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_42a0e1
push    ebx
call    sub_461250
add     esp, 4
push    0fh
push    eax
call    sub_45c870
mov     bp, ax
lea     eax, [esp+88h+var_12]
add     esp, 8
push    eax
call    sub_40db40
add     esp, 4
test    eax, eax
jz      short loc_42a17d
movzx   eax, bp
lea     ecx, [esp+80h+var_12]
push    eax
push    edi
push    ecx
call    sub_40dbe0
add     esp, 0ch
test    eax, eax
jz      short loc_42a17d
mov     [esp+80h+var_38], 1
push    0
push    0
push    403h
push    ebx
call    sub_42ee00
fstp    [esp+90h+var_58]
add     esp, 10h
push    0
push    0
push    405h
push    ebx
call    sub_42ee00
fstp    [esp+90h+var_50]
lea     eax, [esp+90h+var_60]
mov     [esp+90h+var_60], ebx
add     esp, 10h
push    eax
push    esi
call    sub_4385e0
lea     eax, [esp+88h+var_68]
mov     edx, [esp+88h+var_70]
mov     ecx, [esp+88h+var_6c]
add     esp, 8
push    eax
push    ecx
lea     eax, [esp+88h+var_12]
push    edx
push    eax
call    sub_40dd70
mov     [esp+90h+var_1c], ax
add     esp, 10h
push    edi
call    sub_45ba00
add     esp, 4
jmp     loc_42a284
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_42a1b8
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_42a1c1
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+80h+var_68]
push    8
push    ecx
push    10h
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      loc_42a284
movsx   eax, [esp+80h+var_68]
movsx   ecx, [esp+80h+var_64]
movsx   edx, [esp+80h+var_66]
mov     [esp+80h+var_2c], eax
mov     [esp+80h+var_24], ecx
lea     ecx, [esp+80h+var_2c]
mov     [esp+80h+var_28], edx
movsx   eax, [esp+80h+var_62]
mov     [esp+80h+var_20], eax
push    ecx
call    sub_42a2d0
mov     [esp+84h+var_38], 2
add     esp, 4
cmp     [esp+80h+var_60], ebx
jz      short loc_42a284
push    0
push    0
push    403h
push    ebx
call    sub_42ee00
fstp    [esp+90h+var_58]
add     esp, 10h
push    0
push    0
push    405h
push    ebx
call    sub_42ee00
fstp    [esp+90h+var_50]
add     esp, 10h
push    0
push    0
push    404h
push    ebx
call    sub_42ee00
fstp    [esp+90h+var_48]
add     esp, 10h
push    0
push    0
push    406h
push    ebx
call    sub_42ee00
fstp    [esp+90h+var_40]
lea     eax, [esp+90h+var_60]
mov     [esp+90h+var_60], ebx
add     esp, 10h
push    eax
push    esi
call    sub_4385e0
add     esp, 8
lea     eax, [esp+80h+var_38]
push    eax
push    esi
call    sub_438540
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
push    ebx
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_42a2b9
push    4
push    ebx
call    sub_429090
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     edx, [esp+arg_0]
mov     ecx, [edx+0ch]
mov     eax, [edx+4]
cmp     ecx, eax
jge     short loc_42a2e4
mov     [edx+4], ecx
mov     [edx+0ch], eax
mov     ecx, [edx+8]
mov     eax, [edx]
cmp     ecx, eax
jge     short locret_42a2f2
mov     [edx], ecx
mov     [edx+8], eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
dec     ecx
cmp     ecx, 4
ja      short def_42a30c
jmp     ds:jpt_42a30c[ecx*4]
mov     word ptr [eax+8], 10h
xor     eax, eax
mov     ds:dword_4a66d0, eax
mov     ds:dword_4a66d4, eax
mov     ds:dword_4a66d8, eax
mov     ds:dword_4a66dc, eax
xor     eax, eax
retn
cmp     word ptr [eax+8], 10h
jz      short loc_42a33f
mov     eax, 1389h
retn
mov     ecx, [eax+0ah]
mov     edx, offset dword_4a66d0
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
xor     eax, eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
mov     ecx, offset dword_4a66d0
mov     edx, [eax+0ah]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
xor     eax, eax
retn
sub     esp, 0ch
lea     eax, [esp+0ch+var_c]
push    ebx
mov     ebx, [esp+10h+arg_4]
push    esi
mov     esi, [esp+14h+arg_0]
push    edi
mov     edi, [esp+18h+arg_8]
push    eax
push    edi
push    ebx
push    esi
call    sub_43b870
add     esp, 10h
test    eax, eax
jz      short loc_42a3d1
mov     eax, [esp+18h+var_c]
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
cmp     ebx, 68h
ja      def_42a3e2
xor     eax, eax
mov     al, ds:byte_42a4f0[ebx]
jmp     ds:jpt_42a3e2[eax*4]
mov     cx, [esi+1ch]
lea     ebx, [esi+0ch]
mov     eax, [edi+0ch]
push    eax
push    ebx
push    ecx
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_42a437
lea     eax, [esp+18h+var_8]
push    eax
push    ebx
call    sub_473c30
mov     eax, [esp+20h+var_4]
mov     ecx, [esp+20h+var_8]
add     esp, 8
mov     edx, [edi+0ch]
push    eax
push    ecx
push    0
push    33h
push    edx
call    sub_47ffd0
add     esp, 14h
mov     ecx, [edi+0ch]
push    esi
push    ecx
call    sub_42a830
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
lea     eax, [esp+18h+var_8]
lea     ecx, [esi+0ch]
push    eax
push    ecx
call    sub_473c30
mov     eax, [esp+20h+var_8]
add     esp, 8
mov     edx, [edi]
mov     ecx, [edi+4]
push    ecx
push    edx
mov     edx, [esp+20h+var_4]
push    edx
push    eax
call    sub_410e10
add     esp, 10h
cmp     eax, 0dh
jge     short loc_42a481
mov     eax, 0ffffffffh
mov     [edi+98h], esi
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     edx, [esi+42h]
lea     eax, [esi+3eh]
push    edx
mov     ecx, [eax]
push    ecx
push    4
call    sub_43eb00
jmp     short loc_42a4c5
cmp     word ptr [edi+0ah], 1
sbb     eax, eax
lea     ecx, [esi+32h]
add     eax, 4
push    eax
push    ecx
call    sub_409e80
add     esp, 8
cmp     word ptr [edi+0ah], 0
jnz     short def_42a3e2
push    0
push    7
push    esi
call    sub_40fd60
add     esp, 0ch
push    edi
push    ebx
push    esi
call    sub_40fd60
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 8
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+14h+arg_0]
cmp     esi, 1
jnz     short loc_42a5d6
cmp     [esp+14h+arg_4], 1
jnz     short loc_42a5d6
cmp     ds:dword_4a66c8, ebx
jz      short loc_42a594
pop     edi
mov     ds:dword_4a66c8, ebx
mov     ebx, 1
pop     esi
mov     eax, ebx
pop     ebx
add     esp, 8
retn
call    sub_42b150
cmp     ds:dword_4a66d4, 0
jz      short loc_42a5cb
cmp     ds:dword_4a66d0, 0
jz      short loc_42a5cb
cmp     ds:dword_4a68c4, 0
jnz     short loc_42a5cb
cmp     ds:frequency, 0
jz      short loc_42a5cb
mov     ebx, 1
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
add     esp, 8
retn
xor     ebx, ebx
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
add     esp, 8
retn
call    sub_4443d0
mov     word ptr [esp+14h+var_4], 5
mov     [esp+14h+var_8], esi
mov     eax, [esp+14h+var_4]
mov     ecx, [esp+14h+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_42a66b
test    byte ptr [edi+0ah], 10h
jz      short loc_42a652
cmp     byte ptr [edi+36h], 0
jnz     short loc_42a652
cmp     ds:frequency, 0
mov     ebx, 0
jz      short loc_42a628
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_42a652
lea     eax, [edi+0ch]
push    eax
push    ebx
call    sub_42aae0
add     esp, 8
push    edi
push    ebx
call    sub_42a830
add     esp, 8
mov     eax, ds:frequency
push    ebx
push    eax
call    __beep_0
add     esp, 8
push    esi
push    edi
call    sub_42ab20
add     esp, 8
mov     ebx, eax
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 50h
mov     word ptr [esp+50h+var_4c], 5
push    ebx
push    esi
mov     esi, [esp+58h+arg_0]
push    edi
mov     [esp+5ch+var_50], esi
mov     eax, [esp+5ch+var_4c]
mov     ecx, [esp+5ch+var_50]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jnz     loc_42a79c
mov     edi, [esp+5ch+arg_8]
test    edi, edi
jz      short loc_42a6c7
lea     eax, [esp+5ch+rc]
push    eax
push    esi
call    sub_42a7b0
add     esp, 8
jmp     short loc_42a6d8
lea     ecx, [esp+5ch+rc]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
lea     eax, [esp+5ch+var_16]
push    0
mov     [esp+60h+src], 46h
push    eax
call    sub_409e80
mov     ebx, [esp+64h+arg_4]
add     esp, 8
mov     [esp+5ch+var_c], 0
cmp     [esp+5ch+arg_c], 0
mov     [esp+5ch+var_10], ebx
jz      short loc_42a70b
mov     [esp+5ch+var_c], 1
call    sub_4441e0
mov     eax, [esp+5ch+var_4c]
push    100000h
mov     ecx, [esp+60h+var_50]
push    2
lea     edx, [esp+64h+src]
push    eax
push    ecx
push    offset sub_42a3a0
push    edx
call    sub_43aa50
mov     ecx, [esp+74h+var_4c]
mov     edx, [esp+74h+var_50]
add     esp, 18h
push    ecx
push    edx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_42a79c
test    edi, edi
jnz     short loc_42a757
and     byte ptr [eax+0ah], 0efh
mov     word ptr [eax+1ch], 0
shr     ebx, 7
cmp     ebx, 2710h
jbe     short loc_42a767
mov     ebx, 2710h
cmp     ebx, 1
jnb     short loc_42a771
mov     ebx, 1
lea     ecx, [eax+3eh]
push    ebx
mov     [ecx], esi
mov     dword ptr [eax+42h], 0
mov     esi, [ecx]
mov     eax, [ecx+4]
push    eax
push    esi
push    4
call    sub_43ea30
add     esp, 10h
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
mov     eax, ecx
mov     edx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     eax, [eax+edx+4]
xor     edx, edx
mov     dl, ch
mov     eax, [eax]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_42a7e6
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_42a7ef
push    ecx
call    sub_461250
add     esp, 4
lea     ecx, [esp+4+var_4]
push    4
push    ecx
push    7
push    eax
call    sub_45c8a0
mov     ecx, [esp+14h+lprc]
add     esp, 10h
movsx   eax, [esp+4+var_4]
push    11h
mov     [ecx+8], eax
push    11h
mov     [ecx], eax
movsx   eax, [esp+0ch+var_2]
push    ecx
mov     [ecx+0ch], eax
mov     [ecx+4], eax
call    ds:inflaterect
add     esp, 4
retn
sub     esp, 18h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+28h+arg_4]
mov     eax, [edi+38h]
lea     ecx, [edi+32h]
push    eax
add     edi, 0ch
push    ecx
call    sub_409f50
lea     ecx, [esp+30h+rc]
add     esp, 8
mov     esi, eax
mov     edx, [edi+4]
mov     eax, [edi]
mov     ebx, [edi+8]
mov     [ecx], eax
mov     eax, [edi+0ch]
mov     [ecx+4], edx
lea     edx, [esp+28h+rc]
mov     [ecx+8], ebx
mov     [ecx+0ch], eax
lea     ecx, [esp+28h+x]
push    ecx
push    edx
call    sub_473c30
mov     eax, [esp+30h+x]
lea     ecx, [esp+30h+rc]
sub     eax, [esp+30h+rc.right]
add     esp, 8
add     eax, 0bh
push    eax
push    eax
push    ecx
call    ds:inflaterect
push    8
mov     ebx, ds:getstockobject
call    ebx
mov     edi, [esp+28h+hdc]
push    eax
push    edi
mov     ebp, ds:selectobject
call    ebp
push    0
call    ebx
push    eax
push    edi
call    ebp
cmp     esi, 10000h
jbe     short loc_42a90b
mov     eax, [esp+28h+rc.bottom]
mov     ecx, [esp+28h+rc.right]
mov     edx, [esp+28h+rc.top]
push    eax
mov     eax, [esp+2ch+rc.left]
push    ecx
push    edx
push    eax
push    edi
call    ds:ellipse
push    7
call    ebx
push    eax
push    edi
call    ebp
mov     ecx, [esp+28h+y]
push    0
mov     eax, [esp+2ch+x]
push    ecx
push    eax
push    edi
call    ds:movetoex
mov     ecx, [esp+28h+rc.top]
mov     eax, [esp+28h+x]
push    ecx
push    eax
push    edi
call    ds:lineto
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    6163ch
push    esi
call    sub_445cb0
neg     eax
lea     ecx, [esp+28h+rc]
push    eax
push    0
push    ecx
push    edi
call    sub_42a940
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 10h
lea     eax, [esp+10h+var_8]
push    ebx
mov     ecx, [esp+14h+arg_4]
push    esi
push    edi
push    ebp
push    eax
push    ecx
call    sub_473c30
mov     esi, [esp+28h+var_8]
mov     ecx, [esp+28h+arg_4]
mov     ebx, [esp+28h+arg_8]
add     esp, 8
sub     esi, [ecx]
push    ebx
call    sub_445e90
imul    eax, esi
add     esp, 4
test    eax, eax
jl      short loc_42a991
push    ebx
call    sub_445e90
imul    eax, esi
add     esp, 4
add     eax, 8000h
sar     eax, 10h
mov     [esp+20h+var_10], eax
jmp     short loc_42a9ad
mov     edi, 8000h
push    ebx
call    sub_445e90
imul    eax, esi
add     esp, 4
sub     edi, eax
sar     edi, 10h
neg     edi
mov     [esp+20h+var_10], edi
add     ebx, 19220h
push    ebx
call    sub_445e90
imul    eax, esi
add     esp, 4
test    eax, eax
jl      short loc_42a9dd
push    ebx
call    sub_445e90
imul    eax, esi
add     esp, 4
add     eax, 8000h
sar     eax, 10h
mov     [esp+20h+var_c], eax
jmp     short loc_42a9f9
mov     edi, 8000h
push    ebx
call    sub_445e90
imul    eax, esi
add     esp, 4
sub     edi, eax
sar     edi, 10h
neg     edi
mov     [esp+20h+var_c], edi
mov     ebp, [esp+20h+arg_c]
push    ebp
call    sub_445e90
imul    eax, esi
add     esp, 4
test    eax, eax
jl      short loc_42aa26
push    ebp
call    sub_445e90
add     esp, 4
mov     edi, eax
imul    edi, esi
add     edi, 8000h
sar     edi, 10h
jmp     short loc_42aa3e
mov     edi, 8000h
push    ebp
call    sub_445e90
imul    eax, esi
add     esp, 4
sub     edi, eax
sar     edi, 10h
neg     edi
lea     eax, [ebp+19220h]
push    eax
call    sub_445e90
imul    eax, esi
add     esp, 4
test    eax, eax
jl      short loc_42aa73
lea     eax, [ebp+19220h]
push    eax
call    sub_445e90
add     esp, 4
mov     ebx, eax
imul    ebx, esi
add     ebx, 8000h
sar     ebx, 10h
jmp     short loc_42aa91
mov     ebx, 8000h
add     ebp, 19220h
push    ebp
call    sub_445e90
imul    eax, esi
add     esp, 4
sub     ebx, eax
sar     ebx, 10h
neg     ebx
cmp     [esp+20h+var_10], edi
jz      short loc_42aad7
mov     eax, [esp+20h+var_4]
sub     eax, ebx
push    eax
mov     eax, [esp+24h+var_8]
add     eax, edi
dec     eax
push    eax
mov     eax, [esp+28h+var_4]
mov     ecx, [esp+28h+arg_4]
sub     eax, [esp+28h+var_c]
mov     edx, [ecx+0ch]
push    eax
mov     eax, [esp+2ch+var_8]
add     eax, [esp+2ch+var_10]
dec     eax
push    eax
push    edx
mov     eax, [ecx+8]
mov     edx, [ecx+4]
push    eax
push    edx
mov     eax, [ecx]
mov     edx, [esp+3ch+hdc]
push    eax
push    edx
call    ds:pie
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, [esp+arg_4]
mov     eax, [ecx+0ch]
mov     edx, [ecx+8]
push    eax
push    edx
mov     eax, [ecx+4]
mov     ecx, [ecx]
push    eax
push    ecx
call    ds:createrectrgn
test    eax, eax
jz      short locret_42ab12
push    eax
mov     eax, [esp+4+hdc]
push    eax
call    sub_474e10
add     esp, 8
push    eax
call    ds:deleteobject
retn
sub     esp, 40h
push    ebx
push    esi
mov     esi, [esp+48h+arg_0]
push    edi
cmp     byte ptr [esi+37h], 0
jz      short loc_42ab39
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
lea     edi, [esi+32h]
mov     eax, [esi+38h]
push    eax
push    edi
call    sub_409f50
add     esp, 8
cmp     eax, 10000h
jl      short loc_42abbb
push    2
xor     ebx, ebx
push    edi
call    sub_409e80
add     esp, 8
mov     bl, [esi+3ch]
and     ebx, 1
jz      short loc_42ab97
lea     eax, [esp+4ch+var_40]
mov     edi, [esp+4ch+arg_4]
mov     [esp+4ch+var_40], 9
mov     [esp+4ch+var_8], 0
push    eax
push    edi
call    sub_424a90
add     esp, 8
cmp     [esp+4ch+var_8], 0
jnz     short loc_42ab9b
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     edi, [esp+4ch+arg_4]
test    byte ptr [esi+0ah], 10h
jz      short loc_42aba6
call    sub_4892d0
or      byte ptr [esi+3ch], 4
push    ebx
push    edi
call    sub_42abd0
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
cmp     [esp+arg_4], 0
push    esi
mov     esi, [esp+4+arg_0]
push    esi
jz      short loc_42abe9
call    sub_426360
add     esp, 4
xor     eax, eax
pop     esi
retn
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 5
jz      short loc_42ac02
cmp     eax, 7
jz      short loc_42ac0f
xor     eax, eax
pop     esi
retn
push    esi
call    sub_42cbb0
add     esp, 4
xor     eax, eax
pop     esi
retn
push    esi
call    sub_43a8b0
add     esp, 4
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
sub     esp, 0ch
mov     [esp+0ch+var_c], eax
push    0
lea     eax, [esp+10h+var_c]
push    0
mov     [esp+14h+var_8], ecx
push    eax
mov     [esp+18h+var_4], edx
push    offset sub_42ac60
call    sub_43b080
add     esp, 1ch
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
movsx   eax, word ptr [esi]
add     eax, esi
lea     edx, [esp+14h+var_8]
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
cmp     word ptr [esp+14h+var_4], 5
mov     ebx, [esp+14h+var_8]
jnz     loc_42ad57
mov     edi, [esp+14h+arg_4]
cmp     [edi], ebx
jnz     loc_42ad57
cmp     dword ptr [edi+4], 0
jz      short loc_42acb4
test    byte ptr [esi+3ch], 4
jnz     loc_42ad57
push    0
push    7
push    esi
call    sub_40fd60
add     esp, 0ch
lea     eax, [esi+32h]
push    0
push    eax
call    sub_409e80
mov     [esp+1ch+var_8], ebx
add     esp, 8
mov     eax, [edi+8]
mov     [esp+14h+var_4], 0
mov     edi, eax
shr     edi, 7
cmp     edi, 2710h
jbe     short loc_42acf0
mov     edi, 2710h
cmp     edi, 1
jnb     short loc_42acfa
mov     edi, 1
cmp     [esi+38h], eax
jnz     short loc_42ad13
mov     eax, [esp+14h+var_8]
push    edi
mov     ecx, [esp+18h+var_4]
push    ecx
push    eax
push    4
call    sub_43eac0
jmp     short loc_42ad54
mov     ecx, [esp+14h+var_4]
mov     [esi+38h], eax
mov     eax, [esp+14h+var_8]
push    ecx
push    eax
push    4
call    sub_43ebe0
add     esp, 0ch
test    eax, eax
jz      short loc_42ad42
mov     eax, [esp+14h+var_8]
mov     ecx, [esp+14h+var_4]
push    ecx
push    eax
push    4
call    sub_43eb00
add     esp, 0ch
mov     eax, [esp+14h+var_8]
push    edi
mov     ecx, [esp+18h+var_4]
push    ecx
push    eax
push    4
call    sub_43ea30
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     eax, [esp+arg_0]
push    0
push    0
push    eax
push    offset sub_42ad90
call    sub_43b080
add     esp, 10h
retn
sub     esp, 8
lea     edx, [esp+8+var_8]
push    esi
mov     esi, [esp+0ch+arg_0]
movsx   eax, word ptr [esi]
add     eax, esi
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
cmp     [esp+0ch+var_4], 5
jnz     short loc_42add8
mov     ecx, [esp+0ch+var_8]
mov     eax, [esp+0ch+arg_4]
cmp     [eax], ecx
jnz     short loc_42add8
push    5
add     esi, 32h
push    esi
call    sub_409e80
add     esp, 8
mov     eax, 1
pop     esi
add     esp, 8
retn
lea     eax, [esp+arg_0]
push    0
push    0
push    eax
push    offset sub_42ae10
call    sub_43b080
add     esp, 10h
retn
sub     esp, 8
lea     edx, [esp+8+var_8]
push    esi
mov     esi, [esp+0ch+arg_0]
movsx   eax, word ptr [esi]
add     eax, esi
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
cmp     [esp+0ch+var_4], 5
jnz     short loc_42ae58
mov     ecx, [esp+0ch+var_8]
mov     eax, [esp+0ch+arg_4]
cmp     [eax], ecx
jnz     short loc_42ae58
push    6
add     esi, 32h
push    esi
call    sub_409e80
add     esp, 8
mov     eax, 1
pop     esi
add     esp, 8
retn
lea     eax, [esp+arg_0]
push    0
push    0
push    eax
push    offset sub_42ae90
call    sub_43b080
add     esp, 10h
retn
sub     esp, 8
lea     edx, [esp+8+var_8]
push    esi
mov     esi, [esp+0ch+arg_0]
movsx   eax, word ptr [esi]
add     eax, esi
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
cmp     [esp+0ch+var_4], 5
jnz     short loc_42aee1
mov     eax, [esp+0ch+var_8]
push    eax
call    sub_461f70
mov     ecx, [esp+10h+arg_4]
add     esp, 4
cmp     eax, [ecx]
jnz     short loc_42aee1
push    2
add     esi, 32h
push    esi
call    sub_409e80
add     esp, 8
mov     eax, 1
pop     esi
add     esp, 8
retn
lea     ecx, [esp+arg_0]
sub     esp, 4
lea     eax, [esp+4+var_4]
push    0
mov     [esp+8+var_4], 0
push    eax
push    ecx
push    offset sub_42af20
call    sub_43b080
mov     eax, [esp+14h+var_4]
add     esp, 10h
add     esp, 4
retn
sub     esp, 8
lea     edx, [esp+8+var_8]
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
movsx   eax, word ptr [esi]
add     eax, esi
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
cmp     [esp+10h+var_4], 5
mov     ecx, [esp+10h+var_8]
jnz     short loc_42af8f
mov     eax, [esp+10h+arg_4]
mov     edi, [eax]
cmp     edi, ecx
jz      short loc_42af6a
push    ecx
call    sub_461f70
add     esp, 4
cmp     eax, edi
jnz     short loc_42af8f
mov     edi, [esi+38h]
add     esi, 32h
push    esi
call    sub_409f30
add     esp, 4
sub     edi, eax
test    edi, edi
jle     short loc_42af8f
mov     ecx, [esp+10h+arg_8]
mov     eax, [ecx]
cmp     eax, edi
ja      short loc_42af8d
test    eax, eax
jnz     short loc_42af8f
mov     [ecx], edi
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
cmp     ds:dword_4a66d0, 0
mov     eax, [esp+arg_0]
jz      short loc_42afb7
test    eax, eax
jz      short loc_42afb7
mov     ds:dword_4a66d0, eax
retn
cmp     eax, ds:dword_4a66d0
jz      short locret_42afcf
mov     ecx, ds:dword_4a66d4
push    ecx
push    eax
call    sub_42b0b0
add     esp, 8
retn
fld     [esp+arg_0]
fmul    ds:dbl_4ab058
sub     esp, 8
fcom    ds:dbl_4ab060
fstp    [esp+8+var_8]
fnstsw  ax
test    ah, 41h
jz      short loc_42aff2
xor     eax, eax
jmp     short loc_42b011
fld     [esp+8+var_8]
fcomp   ds:dbl_4ab068
fnstsw  ax
test    ah, 41h
mov     eax, 7fffffffh
jz      short loc_42b011
fld     [esp+8+var_8]
call    __ftol
cmp     eax, ds:dword_4a66d4
jz      short loc_42b028
push    eax
mov     eax, ds:dword_4a66d0
push    eax
call    sub_42b0b0
add     esp, 8
add     esp, 8
retn
sub     esp, 8
mov     eax, ds:dword_4a66d4
mov     dword ptr [esp+8+var_8], eax
mov     dword ptr [esp+8+var_8+4], 0
fild    [esp+8+var_8]
add     esp, 8
fmul    ds:dbl_4ab070
retn
cmp     ds:dword_4a66d8, 0
jz      short loc_42b072
cmp     ds:dword_4a66dc, 0
jnz     short locret_42b099
mov     eax, 1
mov     ecx, ds:dword_4a66d4
push    ecx
mov     ds:dword_4a66c8, eax
push    eax
mov     ds:dword_4a66d8, eax
push    eax
mov     ds:dword_4a66dc, eax
push    4
call    sub_43ea30
add     esp, 10h
retn
jmp     sub_42b100
cmp     ds:dword_4a66d8, 0
jz      short loc_42b0c7
cmp     ds:dword_4a66dc, 0
jz      short loc_42b0c7
call    sub_42b100
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     ds:dword_4a66d0, eax
mov     ds:dword_4a66d4, ecx
test    ecx, ecx
jz      short locret_42b0f9
test    eax, eax
jz      short locret_42b0f9
cmp     ds:dword_4a68c4, 0
jnz     short locret_42b0f9
cmp     ds:frequency, 0
jz      short locret_42b0f9
jmp     sub_42b060
retn
sub     esp, 8
xor     eax, eax
cmp     ds:dword_4a66d8, eax
jz      short loc_42b13f
cmp     ds:dword_4a66dc, eax
jz      short loc_42b13f
mov     ecx, ds:dword_4a66d8
mov     edx, ds:dword_4a66dc
mov     [esp+8+var_8], ecx
push    edx
mov     ds:dword_4a66d8, eax
mov     ds:dword_4a66dc, eax
mov     eax, [esp+0ch+var_8]
push    eax
push    4
call    sub_43eb00
add     esp, 0ch
mov     ds:dword_4a66c8, 0
add     esp, 8
retn
cmp     ds:dword_4a66d4, 0
push    esi
jz      short loc_42b1c8
cmp     ds:dword_4a66d0, 0
jz      short loc_42b1c8
cmp     ds:dword_4a68c4, 0
jnz     short loc_42b1c8
cmp     ds:frequency, 0
jz      short loc_42b1c8
cmp     ds:dword_4a66d8, 0
jz      short loc_42b1c8
cmp     ds:dword_4a66dc, 0
jz      short loc_42b1c8
mov     esi, ds:dword_4a66d0
push    0
push    0
call    sub_42b0b0
add     esp, 8
mov     eax, ds:dword_4a6770+2
mov     edx, [eax]
movsx   ecx, si
mov     ax, [edx+ecx*4+4]
and     ah, 60h
cmp     ah, 60h
jnz     short loc_42b1bd
push    0
push    esi
call    sub_434c50
add     esp, 8
pop     esi
retn
push    1
push    esi
call    sub_435870
add     esp, 8
pop     esi
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
mov     esi, [edi+4]
mov     eax, [edi]
cmp     eax, 0dh
ja      short def_42b1e9
xor     ecx, ecx
mov     cl, ds:byte_42b418[eax]
jmp     ds:jpt_42b1e9[ecx*4]
push    0
push    esi
call    sub_4269d0
add     esp, 8
push    0
push    esi
call    sub_426aa0
add     esp, 8
push    esi
call    sub_42c7f0
add     esp, 4
push    0
push    esi
call    sub_426cf0
add     esp, 8
cmp     dword ptr [edi], 0
jnz     short def_42b1e9
push    esi
call    sub_42ed10
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    2
push    esi
call    sub_426cf0
add     esp, 8
push    esi
push    12h
call    sub_441bb0
add     esp, 8
push    esi
call    sub_426390
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_426a80
add     esp, 4
mov     ebx, eax
mov     edi, [edi+8]
push    edi
call    sub_4635f0
add     esp, 4
test    eax, eax
jz      short loc_42b2cf
test    ebx, ebx
jz      short loc_42b27b
push    ebx
call    sub_426390
add     esp, 4
push    edi
push    esi
call    sub_426aa0
add     esp, 8
mov     eax, ds:dword_4a6770+2
movsx   ecx, di
mov     edx, [eax]
push    1
push    esi
lea     eax, [edx+ecx*4+6]
mov     cx, [eax]
lea     edx, [ecx+1]
mov     dh, ch
mov     [eax], dx
call    sub_4269f0
add     esp, 8
push    4040001h
push    esi
call    sub_462670
add     esp, 8
movzx   edi, ax
push    3fh
push    esi
push    edi
call    sub_4441f0
add     esp, 0ch
push    edi
call    sub_4443b0
add     esp, 4
push    esi
push    12h
call    sub_441c60
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_4358e0
add     esp, 4
test    eax, eax
jnz     def_42b1e9
push    esi
call    sub_461cc0
add     esp, 4
mov     edi, eax
test    edi, edi
jz      def_42b1e9
push    2
push    edi
push    esi
call    sub_434990
add     esp, 0ch
push    0
push    edi
call    sub_431d80
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    0
call    sub_4443b0
add     esp, 4
mov     eax, 3
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [edi+8]
push    eax
push    esi
call    sub_461e30
mov     di, ax
add     esp, 8
cmp     di, 2
jnz     short loc_42b353
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    edi
push    esi
call    sub_461d30
add     esp, 8
mov     ebx, eax
push    ebx
call    sub_42e460
add     esp, 4
test    eax, eax
jz      short loc_42b381
push    ebx
call    sub_43d590
add     esp, 4
push    2
push    eax
push    esi
call    sub_42e730
add     esp, 0ch
movsx   eax, di
cmp     eax, 3
jz      short loc_42b394
cmp     eax, 4
jz      short loc_42b3eb
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
call    sub_4354d0
test    eax, eax
jz      short loc_42b3b3
push    eax
call    sub_461f70
add     esp, 4
cmp     eax, esi
jnz     short loc_42b3b3
mov     eax, 2
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_461cc0
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_42b3e2
push    2
push    edi
push    esi
call    sub_434990
add     esp, 0ch
push    0
push    edi
call    sub_431d80
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 3
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 2
pop     edi
pop     esi
pop     ebx
retn
mov     ds:dword_4a6730, 0
mov     word ptr ds:dword_4a6734, 0
sub     esp, 8
mov     word ptr ds:dword_4a6734+2, 0
lea     eax, [esp+8+point]
push    eax
call    sub_42b850
lea     eax, [esp+0ch+point]
add     esp, 4
push    0
push    0
push    eax
call    sub_42ba50
add     esp, 14h
retn
sub     esp, 8
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
mov     ebp, [esp+18h+arg_0]
mov     eax, [ebp+0]
dec     eax
cmp     eax, 6
ja      def_42b48a
jmp     ds:jpt_42b48a[eax*4]
mov     word ptr [ebp+8], 18h
push    0
push    0ah
push    offset dword_4a66e0
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_42b4b9
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
call    sub_43cd40
mov     ds:word_4a6760, ax
mov     cl, ds:byte_4a66ec
mov     dx, ds:word_4a6760
mov     eax, ds:dword_4a66e0
shl     eax, cl
push    eax
mov     ecx, ds:dword_4a66f6
mov     ds:word_4a6762, 0
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jnz     loc_42b77e
push    0
push    14h
push    offset dword_4a6700
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_42b51c
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
call    sub_43cd40
mov     ds:word_4a6764, ax
mov     cl, ds:byte_4a670c
mov     dx, ds:word_4a6764
mov     eax, ds:dword_4a6700
shl     eax, cl
push    eax
mov     ecx, ds:dword_4a6716
mov     ds:word_4a6766, 0
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jz      short loc_42b565
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    0
push    0
call    sub_40d090
mov     [esp+20h+var_4], edx
add     esp, 8
push    edx
push    eax
call    sub_40d5e0
movsx   ecx, word ptr [esp+20h+var_4]
add     esp, 8
push    ecx
call    sub_40d4a0
add     esp, 4
call    sub_42b430
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     word ptr [ebp+8], 18h
jz      short loc_42b5b0
mov     eax, 1389h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     edi, offset dword_4a6750
mov     esi, [ebp+0ah]
mov     ecx, 6
rep movsd
mov     ax, ds:word_4a6760
push    eax
call    sub_43cd60
add     esp, 4
test    eax, eax
jnz     short loc_42b5df
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     ecx, ecx
mov     cx, ds:word_4a6762
push    ecx
push    eax
push    0
push    0ah
push    offset dword_4a66e0
call    sub_48e840
mov     cx, ds:word_4a6764
add     esp, 14h
push    ecx
call    sub_43cd60
add     esp, 4
test    eax, eax
jnz     short loc_42b61c
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     ecx, ecx
mov     cx, ds:word_4a6766
push    ecx
push    eax
push    0
push    14h
push    offset dword_4a6700
call    sub_48e840
add     esp, 14h
call    sub_40d630
call    sub_42b430
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ds:dword_4a66e0
mov     cl, ds:byte_4a66ec
mov     dx, ds:word_4a6760
mov     ds:word_4a6762, ax
shl     eax, cl
push    eax
mov     ecx, ds:dword_4a66f6
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jnz     loc_42b77e
mov     eax, ds:dword_4a6700
mov     cl, ds:byte_4a670c
mov     dx, ds:word_4a6764
mov     ds:word_4a6766, ax
shl     eax, cl
push    eax
mov     ecx, ds:dword_4a6716
push    ecx
mov     esi, offset dword_4a6750
push    edx
call    sub_43cda0
add     esp, 0ch
mov     ebx, eax
mov     edi, [ebp+0ah]
mov     ecx, 6
rep movsd
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     esi, esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a6760
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6764
push    esi
shl     eax, 10h
mov     ds:dword_4a66f6, esi
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
mov     eax, ebx
mov     ds:dword_4a6716, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     esi, esi
xor     ecx, ecx
mov     cx, word_4ad9ac
push    esi
shl     ecx, 10h
push    esi
xor     eax, eax
mov     ax, ds:word_4a6760
or      ecx, eax
push    ecx
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6764
push    esi
shl     eax, 10h
push    esi
or      eax, ecx
mov     ds:dword_4a66f6, esi
push    eax
call    sub_4709c0
add     esp, 0ch
mov     eax, ebx
mov     ds:dword_4a6716, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
call    sub_42b430
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    esi
mov     ecx, [esp+4+arg_4]
push    edi
push    ecx
mov     edx, ds:dword_4a6730
push    eax
mov     eax, ds:dword_4a6734
push    eax
push    edx
call    sub_40d0f0
mov     di, word ptr [esp+18h+arg_4]
mov     esi, [esp+18h+arg_0]
add     esp, 10h
test    eax, eax
jnz     short loc_42b82b
test    di, di
mov     ecx, [esp+8+arg_4]
mov     ds:dword_4a6730, esi
mov     ds:dword_4a6734, ecx
jnz     short loc_42b7fb
call    sub_40d630
pop     edi
pop     esi
retn
cmp     di, 0fffeh
jz      short loc_42b82b
mov     eax, [esp+8+arg_0]
mov     ecx, [esp+8+arg_4]
push    ecx
test    esi, esi
push    eax
jz      short loc_42b81a
call    sub_40d550
add     esp, 8
pop     edi
pop     esi
retn
call    sub_40d070
add     esp, 8
push    eax
call    sub_40d4a0
add     esp, 4
pop     edi
pop     esi
retn
mov     ax, word ptr ds:dword_4a6734
add     ax, 2
cmp     ax, 1
sbb     eax, eax
neg     eax
retn
push    esi
mov     esi, [esp+4+lppoint]
push    esi
call    ds:getcursorpos
push    esi
mov     eax, ds:frequency
push    eax
call    ds:screentoclient
pop     esi
retn
mov     ax, [esp+arg_8]
sub     esp, 0ch
or      al, 4
push    esi
mov     [esp+10h+src], ax
push    1
mov     esi, [esp+14h+arg_0]
push    3f0h
push    esi
call    sub_42ed80
add     esp, 0ch
test    eax, eax
jz      short loc_42b89d
or      byte ptr [esp+10h+src], 8
mov     [esp+10h+var_a], esi
push    esi
call    sub_461f70
mov     [esp+14h+var_6], eax
add     esp, 4
movsx   ecx, [esp+10h+arg_4]
lea     eax, [esp+10h+src]
push    eax
push    ecx
push    offset dword_4a66e0
call    sub_48e980
add     esp, 0ch
push    80h
push    3f0h
push    esi
push    2
call    sub_441440
add     esp, 10h
pop     esi
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
sub     esp, 0ch
lea     ecx, [esp+0ch+var_c]
push    esi
xor     esi, esi
push    40002h
mov     [esp+14h+var_a], eax
push    ecx
lea     ecx, [esp+18h+var_c]
push    ecx
push    offset dword_4a66e0
call    sub_48eac0
add     esp, 10h
cmp     esi, eax
mov     eax, 1
pop     esi
adc     eax, 0ffffffffh
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
sub     esp, 0ch
lea     ecx, [esp+0ch+var_c]
push    esi
mov     [esp+10h+var_a], eax
push    40002h
push    ecx
lea     ecx, [esp+18h+var_c]
push    ecx
push    offset dword_4a66e0
call    sub_48eac0
add     esp, 10h
mov     esi, eax
test    esi, esi
jz      short loc_42b98d
push    offset dword_4a66e0
call    sub_48f140
add     esp, 4
push    esi
push    offset dword_4a66e0
call    sub_48f1d0
mov     cx, [esp+18h+arg_4]
add     esp, 8
cmp     [esp+10h+arg_8], 0
jz      short loc_42b97a
or      [eax], cx
jmp     short loc_42b980
not     cx
and     [eax], cx
push    offset dword_4a66e0
call    sub_48f1a0
add     esp, 4
pop     esi
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    4
push    ecx
call    sub_42b920
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    8
push    ecx
call    sub_42b920
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
sub     esp, 1ch
lea     ecx, [esp+1ch+var_c]
push    40002h
mov     [esp+20h+var_a], eax
push    ecx
push    offset dword_4a66e0
call    sub_48eba0
add     esp, 0ch
test    eax, eax
jz      short loc_42ba46
test    [esp+1ch+var_c], 1
jz      short loc_42ba46
mov     [esp+1ch+var_1c], 0
lea     eax, [esp+1ch+point]
push    eax
call    sub_42b850
lea     eax, [esp+20h+point]
add     esp, 4
push    eax
call    sub_474dd0
lea     eax, [esp+20h+var_1c]
mov     edx, [esp+20h+point.x]
mov     ecx, [esp+20h+point.y]
add     esp, 4
push    eax
push    ecx
push    edx
call    sub_42bbd0
add     esp, 0ch
add     esp, 1ch
retn
sub     esp, 10h
push    esi
mov     esi, [esp+14h+arg_0]
test    esi, esi
jnz     short loc_42ba7a
lea     eax, [esp+14h+point]
push    eax
call    sub_42b850
lea     eax, [esp+18h+point]
add     esp, 4
push    eax
call    sub_474dd0
lea     esi, [esp+18h+point]
add     esp, 4
mov     [esp+14h+var_10], 0
lea     eax, [esp+14h+var_10]
mov     edx, [esi]
push    eax
mov     ecx, [esi+4]
push    ecx
push    edx
call    sub_42bbd0
mov     ecx, [esp+20h+arg_8]
mov     edx, [esp+20h+arg_4]
lea     eax, [esp+20h+var_10]
add     esp, 0ch
push    ecx
push    edx
push    eax
mov     ecx, [esi]
mov     eax, [esi+4]
push    eax
push    ecx
call    sub_42bcc0
add     esp, 14h
pop     esi
add     esp, 10h
retn
mov     eax, [esp+arg_8]
sub     esp, 0c0h
mov     ecx, [eax]
mov     edx, [eax+4]
mov     eax, ds:dword_4a6738
mov     [esp+0c0h+var_c0], ecx
mov     [esp+0c0h+var_b6], ax
lea     ecx, [esp+0c0h+var_c0]
mov     eax, [esp+0c0h+arg_0]
push    ecx
mov     [esp+0c4h+var_bc], edx
push    30h
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
test    eax, eax
jz      short loc_42bb52
cmp     ds:dword_4a6738, 0
jnz     short loc_42bb52
mov     ds:dword_4a6738, 1
cmp     [esp+0c0h+var_a0], 0fffffffeh
jnz     short loc_42bb31
mov     ecx, [esp+0c0h+arg_4]
mov     eax, [esp+0c0h+var_a0]
mov     [ecx+4], ax
mov     dword ptr [ecx], 0
mov     word ptr [ecx+6], 0
jmp     short loc_42bb52
mov     ax, [esp+0c0h+var_9c]
mov     ecx, [esp+0c0h+arg_4]
mov     [ecx+6], ax
mov     edx, [esp+0c0h+var_a0]
cmp     ax, 1
sbb     eax, eax
mov     [ecx+4], dx
inc     eax
mov     [ecx], eax
mov     eax, 1
add     esp, 0c0h
retn
sub     esp, 18h
push    0
push    0
call    sub_40d090
mov     [esp+20h+var_10], eax
mov     [esp+20h+var_c], edx
add     esp, 8
call    sub_43fb60
lea     ecx, [esp+18h+var_18]
lea     edx, [esp+18h+arg_0]
lea     eax, [esp+18h+var_10]
push    ecx
mov     ds:dword_4a6738, 0
push    edx
push    eax
push    offset sub_42bac0
call    sub_43b080
add     esp, 10h
call    sub_43fb70
cmp     word ptr [esp+18h+var_c], 0ffffh
jnz     short loc_42bbc3
push    0
push    0
call    sub_40d090
mov     [esp+20h+var_10], eax
mov     [esp+20h+var_c], edx
add     esp, 8
mov     eax, [esp+18h+var_10]
mov     edx, [esp+18h+var_c]
add     esp, 18h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 20h
push    ecx
push    eax
call    sub_42bb60
mov     [esp+28h+var_20], eax
add     esp, 8
mov     [esp+20h+var_1c], edx
push    edx
push    eax
call    sub_40d070
add     esp, 8
test    eax, eax
jnz     short loc_42bc43
mov     eax, [esp+20h+arg_0]
mov     ecx, [esp+20h+arg_4]
mov     edx, [esp+20h+arg_8]
mov     [esp+20h+var_16], eax
lea     eax, [esp+20h+var_18]
mov     [esp+20h+var_12], ecx
mov     [esp+20h+var_4], edx
push    eax
mov     [esp+24h+var_18], 5
call    sub_42bea0
add     esp, 4
cmp     [esp+20h+var_e], 0
jz      short loc_42bc43
mov     eax, [esp+20h+var_e]
push    eax
call    sub_40d900
mov     [esp+24h+var_20], eax
mov     [esp+24h+var_1c], edx
add     esp, 4
mov     eax, [esp+20h+var_20]
mov     ecx, [esp+20h+var_1c]
push    ecx
push    eax
call    sub_42b7b0
add     esp, 28h
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_4624e0
add     esp, 4
cmp     ax, 0bh
jz      short loc_42bc7a
cmp     ax, 3
jnz     short loc_42bca7
push    10b0520h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_42bca7
push    10b0780h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_42bca7
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     ds:dword_4a6768, 1
retn
sub     esp, 28h
cmp     ds:dword_4a6748, 0
push    esi
push    edi
mov     esi, [esp+30h+arg_c]
jz      short loc_42bd45
test    esi, esi
jz      short loc_42bd45
mov     eax, ds:dword_4a6748
push    eax
call    sub_4624e0
mov     ecx, [esp+34h+pt.y]
add     esp, 4
cmp     eax, 0bh
mov     eax, [esp+30h+pt.x]
push    ecx
push    eax
jnz     short loc_42bd34
mov     edx, ds:dword_4a6748
lea     eax, [esp+38h+var_20]
push    edx
push    eax
call    sub_433dc0
lea     edx, [esp+40h+var_28]
add     esp, 10h
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     edx, ds:dword_4a6740
cmp     [esp+30h+var_28], edx
jnz     short loc_42bd45
mov     ax, ds:word_4a6744
cmp     [esp+30h+var_24], ax
jnz     short loc_42bd45
xor     esi, esi
jmp     short loc_42bd45
push    offset stru_4a6720
call    ds:ptinrect
test    eax, eax
jz      short loc_42bd45
xor     esi, esi
mov     eax, [esp+30h+pt.x]
mov     ecx, [esp+30h+pt.y]
mov     edx, [esp+30h+arg_8]
mov     [esp+30h+var_16], eax
lea     eax, [esp+30h+var_18]
mov     [esp+30h+var_12], ecx
mov     [esp+30h+var_4], edx
push    eax
mov     [esp+34h+var_18], 6
call    sub_42bea0
add     esp, 4
test    eax, eax
jz      loc_42be68
mov     eax, [esp+30h+var_e]
push    eax
call    sub_4624e0
add     esp, 4
sub     eax, 0bh
cmp     eax, 1
mov     eax, ds:dword_4a6748
sbb     esi, esi
neg     esi
cmp     [esp+30h+var_e], eax
jnz     short loc_42bdc7
test    esi, esi
jnz     short loc_42bda7
xor     eax, eax
pop     edi
pop     esi
add     esp, 28h
retn
mov     eax, ds:dword_4a6740
cmp     [esp+30h+var_a], eax
jnz     short loc_42bdc7
mov     ax, ds:word_4a6744
cmp     [esp+30h+var_6], ax
jnz     short loc_42bdc7
xor     eax, eax
pop     edi
pop     esi
add     esp, 28h
retn
cmp     [esp+30h+arg_10], 0
jz      loc_42be5d
mov     eax, [esp+30h+var_e]
mov     edx, offset dword_4a6740
push    offset stru_4a6720
mov     ds:dword_4a6748, eax
lea     eax, [esp+34h+var_a]
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     edx, [esp+34h+var_e]
push    edx
call    sub_424200
add     esp, 8
test    esi, esi
jz      short loc_42be30
mov     eax, [esp+30h+var_a]
mov     ecx, [esp+30h+var_e]
push    eax
push    ecx
call    sub_461f70
add     esp, 4
push    eax
call    sub_426d80
add     esp, 8
push    2088h
push    1
call    sub_441c60
add     esp, 8
mov     eax, [esp+30h+var_e]
push    1
push    eax
call    sub_43c630
mov     eax, [esp+38h+var_e]
add     esp, 8
push    eax
call    sub_42e390
add     esp, 4
test    eax, eax
jnz     short loc_42be5d
mov     eax, [esp+30h+var_e]
push    eax
call    sub_43c5b0
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
add     esp, 28h
retn
test    esi, esi
jz      short loc_42be8e
mov     ds:dword_4a6748, 0
cmp     ds:dword_4a6768, 0
jz      short loc_42be8e
call    sub_43c600
mov     ds:dword_4a6768, 0
xor     eax, eax
pop     edi
pop     esi
add     esp, 28h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
mov     dword ptr [esi+0ah], 0
mov     eax, ds:dword_4a68c0
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_42bed1
cmp     ds:dword_4a68ae, 2
mov     eax, 1
jz      short loc_42bed3
xor     eax, eax
test    eax, eax
jnz     short loc_42bef2
push    esi
push    offset sub_42bfb0
push    offset dword_4a66e0
call    sub_48e8c0
add     esp, 0ch
mov     eax, [esi+0ah]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     di, 1
push    offset dword_4a66e0
call    sub_48f140
mov     bx, ax
add     esp, 4
cmp     bx, di
jl      short loc_42bf31
mov     cl, ds:byte_4a66ec
mov     eax, ds:dword_4a66f6
mov     eax, [eax]
movsx   ebp, di
dec     ebp
mov     edx, ds:dword_4a68c0
shl     ebp, cl
cmp     [ebp+eax+6], edx
jnz     short loc_42bf31
inc     di
cmp     di, bx
jle     short loc_42bf18
mov     bp, di
cmp     di, bx
jg      short loc_42bf61
mov     cl, ds:byte_4a66ec
mov     eax, ds:dword_4a66f6
movsx   edx, bp
dec     edx
push    esi
shl     edx, cl
add     edx, [eax]
push    edx
call    sub_42bfb0
add     esp, 8
test    eax, eax
jz      short loc_42bf61
inc     bp
cmp     bp, bx
jle     short loc_42bf39
cmp     bp, bx
jle     short loc_42bf97
mov     bx, 1
cmp     di, bx
jle     short loc_42bf97
mov     cl, ds:byte_4a66ec
mov     eax, ds:dword_4a66f6
movsx   edx, bx
dec     edx
push    esi
shl     edx, cl
add     edx, [eax]
push    edx
call    sub_42bfb0
add     esp, 8
test    eax, eax
jz      short loc_42bf97
inc     bx
cmp     bx, di
jl      short loc_42bf6f
push    offset dword_4a66e0
call    sub_48f1a0
add     esp, 4
mov     eax, [esi+0ah]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 18h
push    ebx
push    esi
mov     ebx, [esp+20h+arg_0]
push    edi
mov     cx, [ebx]
push    ebp
mov     edi, [ebx+2]
mov     esi, [esp+28h+arg_4]
mov     ax, [esi]
and     cx, ax
cmp     cx, ax
jz      short loc_42bfdd
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    edi
call    sub_4624e0
add     esp, 4
cmp     eax, 0bh
jnz     loc_42c07b
mov     ecx, [esi+6]
lea     ebp, [esi+2]
lea     edx, [esp+28h+rc]
push    ecx
mov     eax, [ebp+0]
push    eax
push    edi
push    edx
call    sub_433dc0
lea     ecx, [esp+38h+var_18]
add     esp, 10h
mov     edx, [eax]
mov     ax, [eax+4]
mov     [ecx], edx
mov     [ecx+4], ax
cmp     [esp+28h+var_18], 0
jz      loc_42c0bd
test    byte ptr [ebx], 8
jz      loc_42c0bd
mov     eax, [esi+14h]
cmp     dword ptr [eax], 0
jnz     short loc_42c045
push    eax
mov     ecx, [ebp+0]
mov     eax, [ebp+4]
push    eax
push    ecx
call    sub_43b2a0
add     esp, 0ch
mov     ecx, [esi+14h]
mov     eax, [esp+28h+var_18]
cmp     [ecx], eax
jnz     short loc_42c0bd
mov     ax, [esp+28h+var_14]
cmp     [ecx+4], ax
jnz     short loc_42c0bd
mov     [esi+0ah], edi
lea     eax, [esp+28h+var_18]
add     esi, 0eh
pop     ebp
mov     ecx, [eax]
pop     edi
mov     ax, [eax+4]
mov     [esi], ecx
mov     [esi+4], ax
xor     eax, eax
pop     esi
pop     ebx
add     esp, 18h
retn
lea     eax, [esp+28h+rc]
push    eax
push    edi
call    sub_424200
mov     edx, [esi+6]
add     esp, 8
lea     eax, [esi+2]
mov     ebp, ds:ptinrect
push    edx
mov     ecx, [eax]
lea     eax, [esp+2ch+rc]
push    ecx
push    eax
call    ebp
test    eax, eax
jz      short loc_42c0bd
test    byte ptr [ebx], 8
jz      short loc_42c0bd
xor     eax, eax
pop     ebp
mov     [esi+0ah], edi
pop     edi
mov     [esi+0eh], eax
mov     [esi+12h], ax
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 14h
lea     edx, [esp+14h+var_10]
mov     [esp+14h+var_14], eax
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
push    40000h
mov     [edx+4], eax
mov     eax, [ecx+8]
push    0
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
lea     edx, [esp+1ch+var_14]
push    edx
push    offset dword_4a6700
call    sub_48ef90
add     esp, 24h
retn
mov     eax, [esp+arg_0]
sub     esp, 14h
mov     [esp+14h+var_14], eax
push    40000h
lea     eax, [esp+18h+var_14]
push    eax
lea     eax, [esp+1ch+var_14]
push    eax
push    offset dword_4a6700
call    sub_48ed40
mov     edx, [esp+24h+arg_4]
add     esp, 10h
test    eax, eax
jz      short loc_42c176
test    edx, edx
jz      short loc_42c16d
lea     ecx, [esp+14h+var_10]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
mov     eax, 1
add     esp, 14h
retn
xor     eax, eax
test    edx, edx
jz      short loc_42c187
mov     [edx+4], eax
mov     [edx], eax
mov     [edx+0ch], eax
mov     [edx+8], eax
xor     eax, eax
add     esp, 14h
retn
mov     eax, [esp+arg_0]
sub     esp, 14h
mov     [esp+14h+var_14], eax
push    40000h
lea     eax, [esp+18h+var_14]
push    eax
push    offset dword_4a6700
call    sub_48ee50
add     esp, 20h
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     eax, [esi]
dec     eax
cmp     eax, 4
ja      def_42c1d2
jmp     ds:jpt_42c1d2[eax*4]
movsx   eax, ds:word_4a8518
shl     eax, 6
mov     ecx, dword_4ae1e0
xor     edi, edi
mov     edx, [eax+ecx+10h]
mov     eax, [edx]
mov     di, [eax+3ah]
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
or      edi, eax
push    edi
call    sub_470880
add     esp, 4
mov     ds:dword_4a6770+2, eax
test    eax, eax
jz      short loc_42c278
mov     ecx, [eax]
cmp     dword ptr [ecx], 1
jnz     short loc_42c22e
push    edi
call    sub_470610
add     esp, 4
mov     ds:nnumberofbytestowrite, eax
jmp     loc_42c2ce
mov     eax, ds:dword_4a6770+2
push    eax
call    sub_45ba00
add     esp, 4
mov     ecx, dword_4ae1e0
movsx   eax, ds:word_4a8518
shl     eax, 6
push    42h
mov     edx, [eax+ecx+10h]
mov     eax, [edx]
movsx   ecx, word ptr [eax]
lea     edx, ds:4[ecx*4]
push    edx
mov     ds:nnumberofbytestowrite, edx
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a6770+2, eax
test    eax, eax
jnz     short loc_42c2b9
jmp     short loc_42c2b1
movsx   ecx, ds:word_4a8518
shl     ecx, 6
mov     eax, dword_4ae1e0
push    42h
mov     edx, [ecx+eax+10h]
mov     ecx, [edx]
movsx   eax, word ptr [ecx]
lea     edx, ds:4[eax*4]
push    edx
mov     ds:nnumberofbytestowrite, edx
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a6770+2, eax
test    eax, eax
jnz     short loc_42c2b9
mov     eax, 8
pop     edi
pop     esi
retn
push    0
mov     eax, ds:dword_4a6770+2
push    offset sub_42c430
push    eax
call    sub_42c400
add     esp, 0ch
call    sub_43cd40
mov     word ptr ds:dword_4a6770, ax
mov     word ptr [esi+8], 0ah
mov     dx, word ptr ds:dword_4a6770
mov     eax, ds:nnumberofbytestowrite
push    eax
mov     ecx, ds:dword_4a6770+2
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
pop     edi
pop     esi
retn
cmp     word ptr [esi+8], 0ah
jz      short loc_42c30e
mov     eax, 1389h
pop     edi
pop     esi
retn
mov     ecx, [esi+0ah]
mov     edx, offset dword_4a6770
mov     eax, [ecx]
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     cx, [ecx+8]
mov     [edx+8], cx
mov     ax, word ptr ds:dword_4a6770
push    eax
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6770+2, eax
test    eax, eax
jnz     def_42c1d2
mov     eax, 8
pop     edi
pop     esi
retn
mov     edx, [esi+0ah]
mov     eax, ds:dword_4a6770
mov     ecx, offset dword_4a6770
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     cx, [ecx+8]
mov     [edx+8], cx
mov     edx, ds:dword_4a6770+2
mov     cx, word ptr ds:dword_4a6770
mov     eax, ds:nnumberofbytestowrite
push    eax
push    edx
push    ecx
call    sub_43cda0
add     esp, 0ch
pop     edi
pop     esi
retn
xor     esi, esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
xor     ecx, ecx
mov     cx, word ptr ds:dword_4a6770
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ds:dword_4a6770+2, esi
mov     ds:nnumberofbytestowrite, esi
pop     edi
pop     esi
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
push    0
shl     eax, 10h
xor     ecx, ecx
mov     cx, word ptr ds:dword_4a6770
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_8]
push    edx
mov     ecx, [eax]
mov     eax, [esp+4+arg_4]
mov     dword ptr [ecx], 1
push    eax
push    1
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4620e0
add     esp, 10h
retn
mov     eax, [esp+arg_0]
mov     ecx, ds:dword_4a6770+2
push    eax
push    ecx
push    eax
call    sub_42c450
add     esp, 0ch
mov     eax, 1
retn
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [eax]
mov     esi, [esp+0ch+arg_0]
push    esi
call    sub_462480
movsx   ecx, [esp+10h+arg_8]
add     esp, 4
lea     edi, [edi+ecx*4+4]
cmp     ax, 1
mov     dword ptr [edi], 0
jz      short loc_42c487
cmp     ax, 4
jz      short loc_42c487
cmp     ax, 9
jnz     short loc_42c4b0
mov     bx, [edi]
push    20306c0h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
sbb     eax, eax
inc     eax
shl     ax, 0ah
xor     ax, bx
and     ax, 400h
xor     ax, bx
mov     [edi], ax
push    esi
call    sub_461f70
add     esp, 4
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_42c4ea
mov     bx, [edi]
push    1000430h
push    esi
call    sub_462670
shl     ax, 0dh
add     esp, 8
xor     ax, bx
and     ax, 6000h
xor     ax, bx
mov     [edi], ax
mov     ax, [edi]
or      ah, 8
mov     [edi], ax
or      ah, 10h
mov     [edi], ax
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_0]
push    ebx
push    esi
push    edi
mov     esi, [ecx+4]
mov     eax, [ecx]
cmp     eax, 0bh
ja      def_42c51d
xor     edx, edx
mov     dl, ds:byte_42c79c[eax]
jmp     ds:jpt_42c51d[edx*4]
push    esi
call    sub_426a20
add     esp, 4
test    eax, eax
jz      def_42c51d
cmp     esi, dword_4ad820
jz      def_42c51d
push    2000102h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_42c55d
push    esi
call    sub_42c7b0
add     esp, 4
push    0
push    esi
call    sub_4269d0
add     esp, 8
push    0
push    esi
call    sub_426aa0
add     esp, 8
push    0
push    esi
call    sub_426c00
add     esp, 8
push    esi
call    sub_42c7f0
add     esp, 4
push    0
push    esi
call    sub_426cf0
add     esp, 8
push    esi
call    sub_42cb60
add     esp, 4
push    20005e0h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 4
jnz     def_42c51d
push    1
call    sub_436760
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    5
push    esi
call    sub_43ad00
add     esp, 8
push    2
push    esi
call    sub_426cf0
add     esp, 8
push    esi
push    0eh
call    sub_441bb0
add     esp, 8
push    20005e0h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 4
jnz     short loc_42c602
push    0
call    sub_436760
add     esp, 4
cmp     ds:dword_4a6aba, 2
jnz     def_42c51d
push    esi
push    5
push    2
call    sub_43bd20
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    0
push    esi
call    sub_426e80
add     esp, 8
cmp     dword_4ad820, 0
jz      short loc_42c646
xor     eax, eax
pop     edi
mov     dword_4ad820, 0
pop     esi
pop     ebx
retn
push    esi
call    sub_426a20
add     esp, 4
test    eax, eax
jz      def_42c51d
push    esi
call    sub_42c830
add     esp, 4
test    eax, eax
jnz     def_42c51d
push    1
push    esi
call    sub_426e80
add     esp, 8
push    esi
call    sub_42ed10
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     edi, [ecx+8]
push    edi
push    esi
call    sub_426aa0
movsx   eax, di
add     esp, 8
mov     edx, ds:dword_4a6770+2
lea     ecx, ds:0[eax*4]
mov     eax, [edx]
and     word ptr [eax+ecx+4], 0efffh
mov     edx, ds:dword_4a6770+2
push    1
push    esi
mov     eax, [edx]
lea     eax, [eax+ecx+6]
mov     cx, [eax]
lea     edx, [ecx+1]
mov     dh, ch
mov     [eax], dx
call    sub_4269f0
add     esp, 8
push    esi
push    0eh
call    sub_441bb0
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    20005e0h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
sbb     ebx, ebx
neg     ebx
test    ebx, ebx
jnz     short loc_42c73d
mov     eax, ds:dword_4a68ae
sub     eax, 2
cmp     eax, 1
sbb     edi, edi
neg     edi
test    edi, edi
jnz     short loc_42c724
cmp     ds:word_4a68d0, 0
jnz     short loc_42c739
push    0
call    sub_444df0
add     esp, 4
test    eax, eax
jnz     short loc_42c739
test    edi, edi
jz      short loc_42c72f
push    esi
call    sub_434b70
add     esp, 4
jmp     short loc_42c734
call    sub_4443d0
mov     ebx, 1
test    ebx, ebx
jz      short loc_42c769
push    esi
call    sub_426eb0
add     esp, 4
test    eax, eax
jz      short def_42c51d
push    esi
call    sub_42c900
add     esp, 4
test    eax, eax
jz      short def_42c51d
push    3
push    eax
push    esi
call    sub_434990
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ds:dword_4a68ae, 2
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    0
push    offset sub_42c7d0
push    0
push    eax
call    sub_4620e0
add     esp, 10h
retn
mov     eax, ds:dword_4a6770+2
movsx   ecx, [esp+arg_0]
mov     edx, [eax]
mov     eax, 1
or      byte ptr [edx+ecx*4+5], 10h
retn
mov     eax, [esp+arg_0]
push    0
push    offset sub_42c810
push    0
push    eax
call    sub_4620e0
add     esp, 10h
retn
mov     eax, ds:dword_4a6770+2
movsx   ecx, [esp+arg_0]
mov     edx, [eax]
mov     eax, 1
and     word ptr [edx+ecx*4+6], 0ff00h
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    20005e0h
mov     edi, [esp+14h+arg_0]
push    edi
call    sub_462670
mov     si, ax
add     esp, 8
push    1
push    3eah
push    edi
call    sub_42edc0
mov     bx, ax
add     esp, 0ch
push    edi
call    sub_4269b0
movsx   ecx, si
add     esp, 4
cmp     ecx, 5
ja      short def_42c86f
jmp     ds:jpt_42c86f[ecx*4]
test    ax, ax
mov     eax, 1
jg      short loc_42c8d3
pop     edi
xor     eax, eax
pop     esi
pop     ebx
add     esp, 4
retn
push    edi
call    sub_42cb00
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     ax, bx
mov     eax, 1
jge     short loc_42c8d3
pop     edi
xor     eax, eax
pop     esi
pop     ebx
add     esp, 4
retn
call    sub_4367b0
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    1
push    3ebh
push    edi
call    sub_42ed80
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+10h+var_4]
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_42c9c0
add     esp, 4
test    eax, eax
jnz     short loc_42c91b
push    esi
call    sub_42c7b0
add     esp, 4
push    2000318h
push    esi
call    sub_462670
movzx   eax, ax
add     esp, 8
cmp     eax, 3
ja      short def_42c931
jmp     ds:jpt_42c931[eax*4]
xor     eax, eax
pop     esi
retn
push    esi
push    1
call    sub_42ca10
add     esp, 8
pop     esi
retn
push    esi
call    sub_42c9c0
add     esp, 4
push    esi
push    eax
push    1
call    sub_42cbe0
add     esp, 8
push    eax
call    sub_42ca10
add     esp, 8
pop     esi
retn
push    esi
call    sub_426a20
add     esp, 4
push    esi
push    eax
push    1
call    sub_42cbe0
add     esp, 8
push    eax
call    sub_42ca90
add     esp, 8
pop     esi
retn
push    0
push    3ech
push    esi
call    sub_42edc0
add     esp, 0ch
test    ax, ax
jnz     short loc_42c9a2
xor     eax, eax
pop     esi
retn
push    esi
push    eax
call    sub_42ca90
add     esp, 8
pop     esi
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
mov     [esp+4+var_2], 0
lea     eax, [esp+4+var_2]
push    eax
push    offset loc_42c9f0
push    0
push    ecx
call    sub_4620e0
movsx   eax, [esp+14h+var_2]
add     esp, 10h
add     esp, 4
retn
mov     eax, ds:dword_4a6770+2
movsx   ecx, word ptr [esp+4]
mov     edx, [eax]
test    byte ptr [edx+ecx*4+5], 10h
jz      short loc_42ca0a
mov     eax, [esp+8]
inc     word ptr [eax]
mov     eax, 1
retn
mov     ax, [esp+arg_0]
sub     esp, 8
mov     [esp+8+var_8], ax
lea     ecx, [esp+8+var_8]
xor     eax, eax
push    ecx
mov     [esp+0ch+var_6], ax
push    offset sub_42ca50
mov     edx, [esp+10h+arg_4]
push    eax
mov     [esp+14h+var_4], eax
push    edx
call    sub_4620e0
mov     eax, [esp+18h+var_4]
add     esp, 10h
add     esp, 8
retn
mov     edx, [esp+arg_0]
mov     eax, ds:dword_4a6770+2
mov     eax, [eax]
movsx   ecx, dx
test    byte ptr [eax+ecx*4+5], 10h
jz      short loc_42ca7e
mov     eax, [esp+arg_4]
mov     cx, [eax+2]
inc     cx
mov     [eax+2], cx
cmp     [eax], cx
jnz     short loc_42ca7e
mov     [eax+4], edx
xor     eax, eax
retn
mov     eax, 1
retn
mov     ax, [esp+arg_0]
sub     esp, 8
mov     [esp+8+var_8], ax
lea     ecx, [esp+8+var_8]
xor     eax, eax
push    ecx
mov     [esp+0ch+var_6], ax
push    offset sub_42cad0
mov     edx, [esp+10h+arg_4]
push    eax
mov     [esp+14h+var_4], eax
push    edx
call    sub_4620e0
mov     eax, [esp+18h+var_4]
add     esp, 10h
add     esp, 8
retn
mov     ecx, [esp+arg_4]
mov     ax, [ecx+2]
inc     ax
mov     [ecx+2], ax
cmp     [ecx], ax
jnz     short loc_42caed
mov     eax, [esp+arg_0]
mov     [ecx+4], eax
xor     eax, eax
retn
mov     eax, 1
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
mov     [esp+4+var_4], 1
lea     eax, [esp+4+var_4]
push    eax
push    offset loc_42cb30
push    0
push    ecx
call    sub_4620e0
mov     eax, [esp+14h+var_4]
add     esp, 10h
add     esp, 4
retn
mov     eax, ds:dword_4a6770+2
movsx   ecx, word ptr [esp+4]
mov     edx, [eax]
cmp     byte ptr [edx+ecx*4+6], 0
jnz     short loc_42cb50
mov     eax, [esp+8]
mov     dword ptr [eax], 0
xor     eax, eax
retn
mov     eax, 1
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
push    0
push    0
push    3edh
push    edi
call    sub_42ee00
fmul    ds:dbl_4ab080
add     esp, 10h
call    __ftol
mov     esi, eax
test    esi, esi
jz      short loc_42cba7
push    0
push    2000204h
push    edi
call    sub_462670
add     esp, 8
movzx   eax, ax
push    eax
push    esi
push    edi
call    sub_42a680
add     esp, 10h
pop     edi
pop     esi
retn
push    esi
push    1
mov     esi, [esp+8+arg_0]
push    esi
call    sub_426c00
add     esp, 8
mov     dword_4ad820, esi
push    1
push    esi
call    sub_435870
add     esp, 8
pop     esi
retn
push    esi
push    edi
call    _rand
cdq
mov     si, [esp+8+arg_0]
movsx   edi, [esp+8+arg_4]
movsx   ecx, si
sub     edi, ecx
inc     edi
idiv    edi
pop     edi
lea     eax, [esi+edx]
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_408e30
add     esp, 4
test    eax, eax
jz      short loc_42cc24
push    eax
call    sub_470610
add     esp, 4
test    eax, eax
jz      short loc_42cc24
mov     eax, 1
retn
xor     eax, eax
retn
sub     esp, 3ch
push    ebx
push    esi
push    edi
push    ebp
xor     bp, bp
push    4020001h
mov     edi, [esp+50h+arg_0]
push    edi
call    sub_462670
mov     bx, [esp+54h+arg_4]
add     esp, 8
movzx   esi, ax
test    esi, esi
jnz     short loc_42cc5d
and     bx, 0fffdh
mov     eax, edi
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
mov     al, 2
push    eax
push    edi
call    sub_463480
add     esp, 8
test    eax, eax
jz      short loc_42cc7d
xor     bp, bp
jmp     short loc_42cc9b
test    bl, 1
jz      short loc_42cc8e
push    edi
call    sub_43d590
mov     bp, ax
add     esp, 4
test    bp, bp
jnz     short loc_42cc9b
call    sub_43d470
mov     bp, ax
cmp     edi, ds:dword_4a6780
jnz     short loc_42ccaa
mov     eax, ds:dword_4a677c
jmp     short loc_42ccb8
push    414h
push    edi
call    sub_42e360
add     esp, 8
mov     word ptr [esp+4ch+var_3a], 2
mov     [esp+4ch+var_28], eax
cmp     [esp+4ch+var_28], 0
jle     short loc_42ccd1
mov     word ptr [esp+4ch+var_3a], 4
mov     word ptr [esp+4ch+var_34], 0
mov     [esp+4ch+var_3a+2], edi
mov     eax, [esp+4ch+var_34]
mov     ecx, [esp+4ch+var_3a+2]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jz      short loc_42cd31
test    bl, 2
jz      short loc_42cd0e
call    sub_4441e0
push    0
push    edi
call    sub_43ad00
add     esp, 8
call    sub_4443d0
jmp     short loc_42cd31
call    sub_4441e0
test    bl, 4
jz      short loc_42cd31
mov     eax, [esp+4ch+var_28]
push    1
mov     ecx, [esp+50h+var_34]
push    eax
mov     edx, [esp+54h+var_3a+2]
push    ecx
push    edx
call    sub_43b5a0
add     esp, 10h
mov     eax, [esp+4ch+var_34]
mov     ecx, [esp+4ch+var_3a+2]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_42ce43
push    edi
push    ebx
call    sub_42d490
lea     ecx, [esp+54h+var_28]
add     esp, 8
movsx   eax, word ptr [ebx]
push    ecx
lea     esi, [ebx+0ch]
push    ebx
mov     [eax+ebx-4], edi
call    sub_438610
lea     ecx, [esp+54h+var_28]
lea     eax, [esp+54h+var_30]
mov     [esp+54h+var_28], 0
add     esp, 8
mov     edx, [esi+4]
push    ecx
push    eax
mov     ecx, [esi+0ch]
mov     eax, [esi+8]
push    ecx
push    eax
push    edx
mov     ecx, [esi]
push    ecx
push    edi
call    sub_42d570
add     esp, 1ch
test    eax, eax
jz      short loc_42cdb3
push    5
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_42cdd5
mov     [esp+4ch+var_28], edi
jmp     short loc_42cdd5
lea     eax, [esp+4ch+var_30]
push    eax
push    esi
call    sub_473c30
add     esp, 8
mov     eax, [ebx+62h]
sub     eax, [ebx+42h]
add     [esp+4ch+var_30], eax
mov     eax, [ebx+66h]
sub     eax, [ebx+46h]
add     [esp+4ch+var_2c], eax
lea     eax, [esp+4ch+var_28]
push    eax
push    ebx
call    sub_4385e0
add     esp, 8
push    edi
call    sub_462480
add     esp, 4
cmp     ax, 4
jz      short loc_42ce10
mov     eax, [esp+4ch+var_30]
push    0
mov     ecx, [esp+50h+var_2c]
mov     edx, [esp+50h+var_34]
push    ecx
push    eax
mov     eax, [esp+58h+var_3a+2]
push    edx
push    eax
call    sub_423470
add     esp, 14h
cmp     edi, ds:dword_4a6780
jnz     short loc_42ce26
mov     eax, [esp+4ch+var_3a]
push    eax
push    ebx
call    sub_43b4e0
add     esp, 8
movsx   eax, word ptr [ebx]
mov     [eax+ebx-0a0h], bp
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
jmp     loc_42cf9d
test    esi, esi
jnz     short loc_42ce55
call    sub_4443c0
test    eax, eax
jnz     short loc_42ce55
call    sub_4443d0
push    3fh
push    edi
push    esi
call    sub_4441f0
mov     eax, [esp+58h+var_34]
mov     ecx, [esp+58h+var_3a+2]
add     esp, 0ch
push    eax
push    ecx
call    sub_42cfc0
add     esp, 8
test    eax, eax
jnz     short loc_42ceaf
xor     bp, bp
cmp     ds:dword_4a6aba, 1
jnz     short loc_42ce90
push    edi
push    1
push    1
call    sub_43bd20
add     esp, 0ch
cmp     ds:dword_4a6aba, 2
jnz     loc_42cfa2
push    edi
push    1
push    2
call    sub_43bd20
add     esp, 0ch
jmp     loc_42cfa2
mov     eax, [esp+4ch+var_34]
mov     ecx, [esp+4ch+var_3a+2]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_42cf71
movsx   eax, word ptr [ebx]
mov     [eax+ebx-0a0h], bp
push    9
push    edi
call    sub_462670
add     esp, 8
movsx   ecx, word ptr [ebx]
cmp     ax, 1
sbb     eax, eax
neg     eax
mov     [ecx+ebx-8], eax
lea     eax, [esp+4ch+var_28]
movsx   edx, word ptr [ebx]
push    eax
push    ebx
mov     [edx+ebx-4], edi
call    sub_438610
lea     ecx, [esp+54h+var_28]
lea     edx, [esp+54h+var_30]
add     esp, 8
push    ecx
push    edx
mov     eax, [ebx+18h]
mov     edx, [ebx+14h]
lea     ecx, [ebx+0ch]
push    eax
push    edx
mov     eax, [ecx+4]
push    eax
mov     ecx, [ecx]
push    ecx
push    edi
call    sub_42d570
add     esp, 1ch
test    eax, eax
jz      short loc_42cf53
mov     eax, [esp+4ch+var_30]
push    ebx
mov     ecx, [esp+50h+var_2c]
push    ecx
push    eax
call    sub_42d780
lea     ecx, [esp+58h+var_28]
mov     [esp+58h+var_28], edi
add     esp, 0ch
push    ecx
push    ebx
call    sub_4385e0
add     esp, 8
mov     word ptr [ebx+1ch], 0
push    0
push    7
push    ebx
call    dword ptr [ebx+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
push    edi
push    5
call    sub_441bb0
mov     eax, [esp+54h+var_34]
mov     ecx, [esp+54h+var_3a+2]
add     esp, 8
push    1
push    eax
push    ecx
call    sub_4448e0
add     esp, 0ch
test    esi, esi
jnz     short loc_42cfa2
call    sub_4443c0
test    eax, eax
jnz     short loc_42cfa2
call    sub_4443d0
mov     ds:dword_4a6780, 0
mov     ax, bp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
sub     esp, 0c4h
xor     eax, eax
mov     ecx, 1dh
push    ebx
push    esi
push    edi
lea     edi, [esp+0d0h+src]
push    ebp
rep stosd
stosw
mov     [esp+0d4h+src], 76h
mov     ebx, [esp+0d4h+arg_0]
cmp     ds:dword_4a6780, ebx
jnz     short loc_42cff7
mov     edi, ds:dword_4a677c
jmp     short loc_42d007
push    414h
push    ebx
call    sub_42e360
add     esp, 8
mov     edi, eax
lea     eax, [esp+0d4h+buffer]
push    11h
push    1e10h
push    40h
push    eax
call    sub_47fe70
add     esp, 10h
push    ebx
call    sub_408e30
add     esp, 4
mov     esi, eax
test    esi, esi
jz      loc_42d17c
push    esi
call    sub_470640
mov     [esp+0d8h+hmem], eax
add     esp, 4
test    eax, eax
jz      loc_42d167
mov     ebp, esi
lea     ecx, [esp+0d4h+var_36]
shr     ebp, 10h
push    ecx
movsx   eax, bp
mov     [esp+0d8h+var_bc], eax
push    eax
mov     edx, [esp+0dch+hmem]
push    edx
call    sub_46d5e0
lea     edx, [esp+0e0h+var_36]
lea     ecx, [esp+0e0h+var_16]
add     esp, 0ch
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+4]
mov     [ecx+4], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [ecx+8], eax
lea     eax, [esp+0d4h+var_36]
mov     [ecx+0ch], edx
lea     ecx, [esp+0d4h+var_6c]
mov     edx, [eax]
mov     [ecx], edx
mov     edx, [eax+4]
push    2030308h
mov     [ecx+4], edx
mov     edx, [eax+8]
push    ebx
mov     [ecx+8], edx
mov     eax, [eax+0ch]
mov     [ecx+0ch], eax
call    sub_462670
movzx   ecx, ax
xor     ax, ax
mov     [esp+0dch+var_6], ecx
add     esp, 8
test    edi, edi
jle     short loc_42d0cf
mov     ax, 4
mov     ecx, [esp+0d4h+arg_0]
push    edi
lea     edx, [esp+0d8h+src]
push    eax
mov     eax, [esp+0dch+arg_4]
push    eax
push    ecx
push    offset sub_42d820
push    edx
call    sub_43aa50
mov     [esp+0ech+var_c4], eax
add     esp, 18h
test    eax, eax
jz      short loc_42d14d
mov     eax, [esp+0d4h+arg_4]
mov     ecx, [esp+0d4h+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_42d14d
push    ebp
lea     eax, [edi+0ch]
push    ebx
lea     ecx, [edi+32h]
mov     edx, [esp+0dch+hmem]
push    eax
mov     eax, [esp+0e0h+var_bc]
push    ecx
push    eax
push    edx
call    sub_42d1c0
add     esp, 18h
push    0
push    7
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
push    0
push    esi
call    sub_470920
mov     eax, [esp+0dch+var_c4]
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c4h
retn
test    esi, esi
jz      short loc_42d189
cmp     ds:dword_4a9a0c, 8
jnz     short loc_42d17c
push    ebx
call    sub_422b80
jmp     short loc_42d1ad
test    esi, esi
jz      short loc_42d189
cmp     ds:dword_4a9a0c, 0
jnz     short loc_42d1b0
cmp     word ptr [esp+0d4h+arg_4], 0
jnz     short loc_42d1b0
push    2030001h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_42d1b0
push    edi
call    sub_43ade0
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c4h
retn
sub     esp, 4b4h
push    esi
mov     esi, [esp+4b8h+arg_8]
push    esi
call    sub_4130f0
add     esp, 4
xor     eax, eax
xor     ecx, ecx
movsx   edx, ax
inc     ax
mov     [esp+edx*4+4b8h+var_400], ecx
cmp     ax, 100h
jl      short loc_42d1db
mov     [esp+4b8h+var_1a0], offset sub_42d2d0
mov     [esp+4b8h+var_19c], offset sub_42d390
lea     eax, [esp+4b8h+var_4b4]
push    eax
call    sub_46d4a0
mov     dx, [esp+4bch+arg_14]
lea     eax, [esp+4bch+var_4b4]
mov     [esp+4bch+var_40c], dx
mov     ecx, [esp+4bch+arg_10]
mov     [esp+4bch+var_448], eax
mov     [esp+4bch+var_410], ecx
mov     eax, [esp+4bch+arg_c]
mov     [esp+4bch+var_414], esi
mov     [esp+4bch+var_444], 0
mov     [esp+4bch+var_40a], eax
add     esp, 4
push    2030520h
push    ecx
call    sub_462670
lea     edx, [esp+4c0h+var_47c]
add     esp, 8
movzx   ecx, ax
mov     [esp+4b8h+var_402], 0
mov     eax, [esp+4b8h+hmem]
push    edx
mov     [esp+4bch+var_406], ecx
mov     ecx, [esp+4bch+arg_4]
push    ecx
push    eax
call    sub_46d310
add     esp, 0ch
test    eax, eax
jnz     short loc_42d2bd
lea     eax, [esp+4b8h+var_400]
push    9fh
lea     ecx, [esp+4bch+var_47c]
push    eax
push    ecx
call    sub_46b000
lea     ecx, [esp+4c4h+var_47c]
add     esp, 0ch
push    ecx
call    sub_46d380
add     esp, 4
pop     esi
add     esp, 4b4h
retn
sub     esp, 14h
push    ebx
push    esi
mov     ebx, [esp+1ch+arg_0]
push    edi
push    ebp
push    42h
mov     eax, [ebx+14h]
mov     ebp, [eax+2]
sub     ebp, 0eh
push    ebp
call    sub_45b8f0
mov     [esp+2ch+hmem], eax
add     esp, 8
test    eax, eax
jnz     short loc_42d304
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     esi, [ebx+14h]
mov     eax, [esp+24h+hmem]
add     esi, 0eh
mov     ecx, ebp
shr     ecx, 2
mov     edi, [eax]
rep movsd
mov     ecx, ebp
and     ecx, 3
rep movsb
mov     ax, [ebx+7ah]
lea     edx, [esp+24h+rcsrc2]
push    eax
push    edx
lea     ecx, [eax+1]
mov     [ebx+7ah], cx
mov     ecx, [ebx+76h]
mov     dx, [ebx+70h]
mov     eax, [ebx+68h]
push    eax
push    ecx
push    edx
mov     eax, [ebx+6ch]
mov     ecx, [esp+38h+hmem]
push    eax
push    ecx
call    sub_43f010
mov     ecx, [esp+40h+hmem]
add     esp, 1ch
mov     esi, eax
push    ecx
call    sub_45ba00
add     esp, 4
test    esi, esi
jz      short loc_42d37a
lea     eax, [esp+24h+rcsrc2]
mov     ecx, [ebx+72h]
push    eax
push    ecx
push    ecx
call    ds:unionrect
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 7ch
push    ebx
push    esi
mov     ebx, [esp+84h+arg_0]
push    edi
lea     edi, [esp+88h+src]
push    ebp
mov     eax, [ebx+14h]
mov     ecx, 1dh
push    42h
mov     ebp, [eax+2]
sub     ebp, 0eh
xor     eax, eax
rep stosd
stosw
push    ebp
call    sub_45b8f0
mov     [esp+94h+hmem], eax
add     esp, 8
test    eax, eax
jnz     short loc_42d3d6
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 7ch
retn
mov     esi, [ebx+14h]
mov     eax, [esp+8ch+hmem]
add     esi, 0eh
mov     ecx, ebp
shr     ecx, 2
mov     edi, [eax]
rep movsd
mov     ecx, ebp
and     ecx, 3
rep movsb
lea     ecx, [esp+8ch+src]
mov     eax, [esp+8ch+hmem]
push    ecx
push    eax
call    sub_464290
mov     ecx, [esp+94h+hmem]
add     esp, 8
mov     [esp+8ch+src], 76h
mov     [esp+8ch+var_72], offset sub_463da0
push    ecx
call    sub_45ba00
lea     ecx, [esp+90h+rcsrc2]
add     esp, 4
mov     edx, [ebx+72h]
push    ecx
push    edx
push    edx
call    ds:unionrect
mov     [esp+8ch+var_6e], 12h
xor     eax, eax
lea     ecx, [esp+8ch+src]
mov     [esp+8ch+var_58], ax
push    ecx
mov     [esp+90h+var_5a], ax
mov     edx, [ebx+68h]
mov     [esp+90h+var_5c], ax
push    edx
call    sub_413130
add     esp, 8
push    79bch
push    11h
call    sub_441c60
add     esp, 8
push    79beh
push    11h
call    sub_441c60
add     esp, 8
push    79bfh
push    11h
call    sub_441c60
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 7ch
retn
mov     edx, [esp+arg_0]
sub     esp, 180h
xor     eax, eax
push    ebx
push    esi
lea     ebx, [edx+32h]
push    edi
mov     ecx, 2fh
lea     edi, [esp+18ch+var_c0]
push    ebp
rep stosd
stosw
xor     edi, edi
cmp     [ebx], edi
jz      loc_42d559
lea     esi, [edx+0ch]
mov     eax, [edx+42h]
add     edx, 42h
mov     [esi], eax
mov     ecx, [edx+4]
mov     [esi+4], ecx
mov     ecx, [esp+190h+arg_4]
mov     ebp, [edx+8]
push    ebx
mov     [esi+8], ebp
mov     eax, [edx+0ch]
mov     [esi+0ch], eax
mov     [esp+194h+var_b6], di
mov     [esp+194h+var_a0], ecx
mov     [esp+194h+var_b4], edi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_42d559
push    ebx
call    sub_413090
add     esp, 4
mov     ebp, eax
cmp     ebp, edi
jz      short loc_42d550
mov     edi, ds:unionrect
lea     eax, [esp+190h+var_c0]
push    eax
push    14h
push    ebp
call    dword ptr [ebp+6]
lea     eax, [esp+19ch+var_180]
add     esp, 0ch
push    eax
push    19h
push    ebp
call    dword ptr [ebp+6]
lea     eax, [esp+19ch+rcsrc2]
add     esp, 0ch
push    eax
push    esi
push    esi
call    edi
push    ebp
call    sub_413260
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_42d519
push    ebx
call    sub_412f60
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 180h
retn
sub     esp, 0ch
push    ebx
push    5
mov     ebx, [esp+14h+arg_0]
push    ebx
call    sub_462670
movzx   eax, ax
add     esp, 8
cmp     eax, 2
jz      loc_42d622
cmp     eax, 4
jz      loc_42d63a
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_42d5c7
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_42d5d0
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+10h+var_c]
push    4
push    ecx
push    5
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      short loc_42d61b
movsx   eax, [esp+10h+var_c]
movsx   ecx, [esp+10h+var_a]
lea     edx, [esp+10h+rc]
push    edx
push    ecx
push    eax
call    sub_473ca0
mov     ecx, [esp+1ch+arg_14]
lea     edx, [esp+1ch+rc]
add     esp, 0ch
push    ecx
push    edx
call    sub_473c30
add     esp, 8
mov     eax, 1
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+10h+arg_18]
mov     ecx, [esp+10h+arg_14]
push    eax
push    ecx
push    ebx
call    sub_42d660
add     esp, 0ch
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+10h+arg_18]
mov     ecx, [esp+10h+arg_14]
push    eax
push    ecx
push    0
push    ebx
call    sub_423d00
add     esp, 10h
pop     ebx
add     esp, 0ch
retn
sub     esp, 18h
push    ebx
push    esi
mov     ebx, [esp+20h+arg_0]
push    edi
push    ebp
xor     edi, edi
push    0fh
push    ebx
call    sub_4612e0
add     esp, 8
mov     esi, eax
cmp     esi, edi
jz      loc_42d76a
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     eax, eax
mov     al, bh
mov     ebp, [edx]
mov     eax, [ebp+eax*4+0]
cmp     eax, edi
jz      short loc_42d6b2
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_42d6bb
push    ebx
call    sub_461250
add     esp, 4
push    0fh
push    eax
call    sub_45c870
mov     bp, ax
lea     eax, [esp+30h+var_10]
add     esp, 8
push    eax
call    sub_40db40
add     esp, 4
test    eax, eax
jz      loc_42d761
movzx   eax, bp
lea     ecx, [esp+28h+var_10]
push    eax
push    esi
push    ecx
call    sub_40dbe0
add     esp, 0ch
test    eax, eax
jz      short loc_42d754
mov     edi, [esp+28h+arg_8]
lea     eax, [edi+10h]
lea     ecx, [edi+8]
push    eax
push    ecx
push    405h
push    401h
push    403h
push    ebx
call    sub_423bd0
add     esp, 18h
push    0
push    eax
call    sub_423ca0
lea     ecx, [esp+30h+var_10]
add     esp, 8
mov     ebx, eax
push    ebx
push    ecx
call    sub_40e3a0
mov     ecx, [esp+30h+arg_4]
mov     [esp+30h+var_18], eax
mov     [esp+30h+var_14], edx
add     esp, 8
mov     edx, [esp+28h+var_18]
mov     eax, [esp+28h+var_14]
mov     [ecx], edx
mov     [ecx+4], eax
mov     [edi+4], ebx
mov     edi, 1
lea     eax, [esp+28h+var_10]
push    eax
call    sub_40db70
add     esp, 4
push    esi
call    sub_45ba00
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 0c0h
xor     eax, eax
mov     ecx, 2fh
push    esi
push    edi
push    eax
lea     edi, [esp+0cch+var_c0]
push    0dh
rep stosd
stosw
mov     esi, [esp+0d0h+arg_8]
push    esi
call    dword ptr [esi+6]
lea     ecx, [esi+0ch]
lea     edx, [esp+0d4h+rc]
add     esp, 0ch
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
push    edx
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
lea     eax, [esp+0cch+arg_0]
push    eax
mov     [edx+0ch], ecx
call    sub_473bf0
lea     ecx, [esp+0d0h+var_c0]
add     esp, 8
mov     [esp+0c8h+var_b6], 0
push    ecx
push    0bh
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
pop     edi
pop     esi
add     esp, 0c0h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     ds:dword_4a6780, eax
mov     ds:dword_4a677c, ecx
retn
sub     esp, 5ch
push    ebx
push    esi
mov     esi, [esp+64h+arg_0]
push    edi
lea     ecx, [esp+68h+rcsrc2]
push    ebp
xor     ebp, ebp
lea     edx, [esi+0ch]
mov     eax, [edx]
mov     [ecx], eax
mov     ebx, [edx+4]
mov     [ecx+4], ebx
mov     edi, [edx+8]
mov     [ecx+8], edi
mov     eax, [edx+0ch]
lea     edx, [esp+6ch+buffer]
mov     [ecx+0ch], eax
movsx   eax, word ptr [esi]
add     eax, esi
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
mov     ebx, [esp+6ch+arg_8]
mov     ax, [eax+4]
mov     edi, [esp+6ch+arg_4]
mov     [edx], ecx
mov     [edx+4], ax
lea     edx, [esp+6ch+var_54]
push    edx
push    ebx
push    edi
push    esi
call    sub_43b870
add     esp, 10h
test    eax, eax
jz      short loc_42d890
mov     eax, [esp+6ch+var_54]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
cmp     edi, 30h
ja      def_42d8a1
xor     eax, eax
mov     al, ds:byte_42dc2c[edi]
jmp     ds:jpt_42d8a1[eax*4]
mov     eax, dword ptr [esp+6ch+buffer]
push    eax
call    sub_408e30
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_42d8c5
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
cmp     edi, 30h
ja      def_42d8a1
xor     eax, eax
mov     al, ds:byte_42dc94[edi]
jmp     ds:jpt_42d8d6[eax*4]
mov     dx, [esi+1ch]
mov     eax, [ebx+0ch]
lea     ecx, [esp+6ch+rcsrc2]
push    eax
push    ecx
push    edx
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_42d931
call    sub_40ac00
push    eax
call    sub_46afe0
add     esp, 4
mov     edi, eax
lea     eax, [esp+6ch+buffer]
push    11h
push    1e10h
push    40h
push    eax
call    sub_47fe70
add     esp, 10h
push    ebx
push    ebp
push    esi
call    sub_42dcd0
add     esp, 0ch
push    edi
call    sub_46afe0
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
push    ebx
push    ebp
push    esi
call    sub_42e0d0
add     esp, 0ch
movsx   eax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
lea     ebp, [esi+1ch]
cmp     edi, 7
jz      short loc_42d95c
lea     ebp, [esi+1eh]
mov     eax, [esp+6ch+rcsrc2.bottom]
mov     ecx, [esp+6ch+rcsrc2.right]
mov     edx, [esp+6ch+rcsrc2.top]
push    eax
mov     eax, [esp+70h+rcsrc2.left]
push    ecx
mov     cx, [ebp+0]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [ebp+0], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
push    ebx
push    edi
push    esi
call    sub_4535e0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
mov     cx, [esi+1ch]
lea     eax, [esi+32h]
mov     word ptr [esp+6ch+var_5a], cx
push    eax
mov     dword ptr [esp+70h+buffer], eax
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_42da0a
mov     eax, dword ptr [esp+6ch+buffer]
push    eax
call    sub_413090
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_42d9fd
push    ebp
call    sub_413260
mov     ecx, [esp+70h+var_5a]
mov     [esp+70h+var_5a+2], eax
mov     ax, [ebp+1ch]
add     esp, 4
push    eax
push    ecx
call    sub_474520
mov     word ptr [esp+74h+var_5a], ax
add     esp, 8
mov     word ptr [ebp+1ch], 0
mov     ebp, [esp+6ch+var_5a+2]
test    ebp, ebp
jnz     short loc_42d9cb
mov     eax, dword ptr [esp+6ch+buffer]
push    eax
call    sub_412f60
add     esp, 4
mov     ax, word ptr [esp+6ch+var_5a]
mov     [esi+1ch], ax
cmp     dword ptr [esi+72h], 0
jz      def_42d8a1
test    byte ptr [esi+0ah], 10h
jz      def_42d8a1
lea     ebp, [esi+42h]
lea     eax, [esi+0ch]
push    ebp
push    eax
call    ds:equalrect
test    eax, eax
jz      def_42d8a1
push    ebx
push    edi
push    esi
call    sub_4535e0
lea     ecx, [esp+78h+buffer]
add     esi, 1ch
mov     word ptr [esp+78h+buffer], 0
add     esp, 0ch
push    ecx
push    esi
push    ebp
push    eax
call    sub_474ae0
mov     eax, dword ptr [esp+7ch+buffer]
add     esp, 10h
and     eax, 0ffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
lea     ebp, [esi+42h]
lea     ecx, [esi+52h]
mov     eax, [ecx]
mov     [ebp+0], eax
mov     edx, [ecx+4]
mov     [ebp+4], edx
mov     eax, [ecx+8]
mov     [ebp+8], eax
lea     eax, [ebx+10h]
mov     ecx, [ecx+0ch]
mov     [ebp+0ch], ecx
lea     ecx, [esi+22h]
mov     dx, [ebx+0ah]
push    edx
push    eax
push    ecx
push    ebp
call    sub_473df0
add     esp, 10h
push    ebx
push    edi
push    esi
call    sub_4535e0
lea     ecx, [esi+0ch]
add     esp, 0ch
mov     edi, eax
add     esi, 0ch
push    ebp
push    ecx
push    esi
call    ds:unionrect
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
cmp     dword ptr [esi+32h], 0
jz      def_42d8a1
mov     eax, dword ptr [esp+6ch+buffer]
push    3
push    eax
call    sub_4417a0
add     esp, 8
jmp     def_42d8a1
lea     edx, [esi+42h]
lea     ecx, [esi+52h]
mov     eax, [edx]
mov     [ecx], eax
mov     ebp, [edx+4]
mov     [ecx+4], ebp
mov     eax, [edx+8]
mov     [ecx+8], eax
mov     edx, [edx+0ch]
mov     [ecx+0ch], edx
jmp     def_42d8a1
push    ebx
push    edi
push    esi
call    sub_4535e0
lea     eax, [esi+42h]
lea     ecx, [esi+0ch]
add     esp, 0ch
add     esi, 0ch
push    eax
push    ecx
push    esi
call    ds:unionrect
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
movsx   eax, word ptr [esi]
mov     eax, [eax+esi-4]
cmp     eax, dword ptr [esp+6ch+buffer]
jz      def_42d8a1
cmp     ds:dword_4a6aba, 2
jnz     def_42d8a1
push    eax
push    2
push    2
call    sub_43bd20
add     esp, 0ch
jmp     def_42d8a1
cmp     dword ptr [esi+72h], 0
jz      short loc_42db8d
test    byte ptr [esi+0ah], 10h
jz      short loc_42db8d
lea     eax, [esi+42h]
add     esi, 0ch
push    eax
push    esi
call    ds:equalrect
test    eax, eax
jz      short loc_42db8d
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
push    ebx
push    ebp
push    esi
call    sub_42ddf0
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
cmp     word ptr [ebx+0ah], 0
jnz     short loc_42dc11
mov     eax, [ebx]
mov     ecx, [ebx+4]
push    ecx
lea     edx, [esi+0ch]
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jz      short loc_42dc11
push    ebx
push    edi
push    esi
call    sub_4535e0
mov     [esp+78h+var_54], eax
add     esp, 0ch
test    eax, eax
jz      short loc_42dbe8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
mov     eax, [ebx]
mov     ecx, [ebx+4]
push    ecx
push    eax
push    ebp
push    esi
call    sub_42e140
add     esp, 10h
test    eax, eax
jz      short loc_42dc11
mov     eax, 1
pop     ebp
mov     dword ptr [ebx+20h], 0ffffffffh
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
sub     esp, 44h
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
call    sub_43e170
mov     ebp, [esp+54h+arg_0]
lea     esi, [ebp+32h]
mov     [esp+54h+var_44], esi
push    esi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_42dd0a
push    esi
mov     ebx, 1
call    sub_413090
mov     [esp+58h+var_40], eax
add     esp, 4
jmp     short loc_42dd12
mov     [esp+54h+var_40], 0
mov     edx, [esp+54h+arg_8]
mov     [esp+54h+var_3c], edx
mov     ax, [ebp+1ch]
mov     [esp+54h+var_38], ax
mov     eax, [ebp+42h]
sub     eax, [ebp+62h]
lea     edi, [esp+54h+var_2c]
mov     ecx, 0ah
mov     [esp+54h+var_36], eax
mov     eax, [ebp+46h]
sub     eax, [ebp+66h]
mov     [esp+54h+var_32], eax
xor     eax, eax
rep stosd
stosw
mov     ecx, [esp+54h+arg_4]
mov     edx, [edx+0ch]
lea     eax, [ebp+42h]
mov     [esp+54h+var_2c], ecx
mov     [esp+54h+var_28], edx
mov     [esp+54h+var_24], eax
mov     eax, offset sub_42df90
lea     ecx, [esp+54h+var_44]
mov     [esp+54h+var_14], eax
mov     [esp+54h+var_10], eax
mov     [esp+54h+var_20], offset sub_42de70
mov     [esp+54h+var_1c], offset sub_42dee0
mov     [esp+54h+var_18], offset loc_42df40
mov     [esp+54h+var_8], ecx
lea     ecx, [esp+54h+var_2c]
mov     ax, [ebp+0ah]
push    ecx
and     ax, 2
cmp     ax, 1
sbb     eax, eax
and     ax, 2
mov     [esp+58h+var_4], ax
call    sub_46d870
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_42ddd3
push    0
push    17h
push    ebp
call    dword ptr [ebp+6]
movsx   eax, word ptr [ebp+0]
add     esp, 0ch
mov     ecx, [eax+ebp-0a6h]
push    edi
push    ecx
call    sub_422af0
add     esp, 8
test    ebx, ebx
jz      short loc_42dde0
push    esi
call    sub_412f60
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
sub     esp, 10h
push    esi
push    edi
mov     esi, [esp+18h+arg_4]
push    esi
call    sub_470640
mov     [esp+1ch+var_10], eax
add     esp, 4
test    eax, eax
jz      short loc_42de65
mov     eax, esi
mov     edi, [esp+18h+arg_0]
shr     eax, 10h
movsx   ecx, ax
mov     eax, [edi+42h]
sub     eax, [edi+62h]
mov     [esp+18h+var_8], eax
mov     eax, [edi+46h]
sub     eax, [edi+66h]
mov     edx, [esp+18h+var_8]
push    eax
push    edx
mov     edx, [esp+20h+var_10]
push    ecx
mov     eax, [esp+24h+arg_8]
push    edx
mov     edx, [eax+0ch]
push    edx
call    sub_46e340
add     esp, 14h
test    eax, eax
jz      short loc_42de5a
push    eax
movsx   eax, word ptr [edi]
mov     ecx, [eax+edi-0a6h]
push    ecx
call    sub_422af0
add     esp, 8
push    0
push    esi
call    sub_470920
add     esp, 8
pop     edi
pop     esi
add     esp, 10h
retn
mov     ecx, [esp+arg_0]
sub     esp, 10h
lea     edx, [esp+10h+rc]
push    ebx
push    esi
mov     eax, [ecx]
mov     esi, [esp+18h+arg_4]
push    edi
push    ebp
mov     ebx, [ecx+4]
mov     ebp, [ecx+8]
mov     [edx], eax
mov     eax, [ecx+0ch]
mov     [edx+4], ebx
mov     [edx+8], ebp
mov     [edx+0ch], eax
mov     edx, [esi+0eh]
mov     ecx, [esi+12h]
lea     eax, [esp+20h+rc]
push    ecx
mov     ebx, ds:offsetrect
push    edx
push    eax
call    ebx
mov     cx, [esi+0ch]
mov     edi, [esp+20h+lprc]
lea     eax, [esp+20h+rc]
push    edi
push    eax
push    ecx
call    sub_474340
add     esp, 0ch
mov     ebp, eax
mov     eax, [esi+12h]
neg     eax
push    eax
mov     eax, [esi+0eh]
neg     eax
push    eax
push    edi
call    ebx
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, [esp+arg_0]
sub     esp, 10h
lea     edx, [esp+10h+rc]
push    esi
mov     esi, [esp+14h+arg_4]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
mov     edx, [esi+12h]
push    edx
mov     eax, [esi+0eh]
lea     ecx, [esp+18h+rc]
push    eax
push    ecx
call    ds:offsetrect
mov     ecx, [esp+14h+rc.bottom]
mov     edx, [esp+14h+rc.right]
mov     eax, [esp+14h+rc.top]
push    ecx
mov     ecx, [esp+18h+rc.left]
push    edx
mov     dx, [esi+0ch]
push    eax
push    ecx
push    edx
call    sub_474400
add     esp, 14h
pop     esi
add     esp, 10h
retn
mov     ax, [esp+4]
push    ebx
test    ax, ax
push    esi
push    edi
mov     edi, [esp+18h]
jz      short loc_42df56
movzx   eax, ax
jmp     short loc_42df5c
xor     eax, eax
mov     ax, [edi+0ch]
mov     esi, [esp+14h]
push    esi
push    eax
call    sub_474aa0
mov     bx, ax
add     esp, 8
mov     eax, [edi+12h]
neg     eax
push    eax
mov     eax, [edi+0eh]
neg     eax
push    eax
push    esi
call    ds:offsetrect
mov     ax, bx
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     edi, [eax+6ch]
mov     ebx, [edi+4]
test    ebx, ebx
jz      loc_42e04a
mov     eax, [edi+8]
test    byte ptr [eax+0ah], 8
mov     esi, [eax+0ch]
jz      short loc_42dfc8
lea     eax, [esp+1ch+y]
lea     ecx, [esp+1ch+x]
push    eax
push    ecx
call    sub_474d10
add     esp, 8
jmp     short loc_42dfd2
xor     eax, eax
mov     [esp+1ch+y], eax
mov     [esp+1ch+x], eax
push    esi
call    sub_4535a0
mov     ecx, [esp+20h+y]
mov     [esp+20h+var_8], eax
mov     eax, [esp+20h+x]
mov     [esp+20h+var_4], edx
add     esp, 4
push    ecx
push    eax
push    esi
call    sub_453580
mov     cx, [ebx+1ch]
add     esp, 0ch
mov     dx, [edi+0ch]
push    ecx
push    edx
call    sub_474520
mov     [ebx+1ch], ax
add     esp, 8
mov     [edi+0ch], ax
mov     ecx, [edi+8]
push    ecx
push    ebx
call    sub_42e060
add     esp, 8
xor     eax, eax
mov     [ebx+20h], ax
push    ebx
mov     [ebx+1eh], ax
mov     [ebx+1ch], ax
call    sub_413260
mov     edx, [esp+20h+var_8]
mov     ecx, [esp+20h+var_4]
add     esp, 4
mov     [edi+4], eax
push    ecx
push    edx
push    esi
call    sub_453580
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 8
push    ebx
push    esi
mov     ebx, [esp+10h+arg_4]
push    edi
push    ebp
mov     edi, [ebx+0ch]
push    edi
call    ds:savedc
mov     bp, ax
lea     eax, [esp+18h+point]
push    eax
push    edi
call    ds:getviewportorgex
push    0
mov     esi, ds:setviewportorgex
push    0
push    0
push    edi
call    esi
mov     eax, [esp+18h+arg_0]
push    ebx
push    0
push    eax
call    dword ptr [eax+6]
mov     eax, [esp+24h+point.y]
mov     ecx, [esp+24h+point.x]
add     esp, 0ch
push    0
push    eax
push    ecx
push    edi
call    esi
movsx   ecx, bp
push    ecx
push    edi
call    ds:restoredc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    esi
push    edi
mov     esi, [esp+8+arg_8]
mov     edi, [esp+8+arg_0]
mov     eax, [esi]
mov     ecx, [esi+4]
push    ecx
push    eax
lea     eax, [edi+0ch]
push    eax
call    ds:ptinrect
test    eax, eax
jz      short loc_42e12d
push    esi
push    1
push    edi
call    sub_4535e0
add     esp, 0ch
cmp     eax, 0ffffffffh
jnz     short loc_42e107
mov     ax, 0ffffh
pop     edi
pop     esi
retn
mov     eax, [esi]
mov     ecx, [esi+4]
mov     edx, [esp+8+arg_4]
push    ecx
push    eax
push    edx
push    edi
call    sub_42e140
add     esp, 10h
test    eax, eax
jz      short loc_42e12d
mov     ax, 0ffffh
mov     [esi+98h], edi
pop     edi
pop     esi
retn
xor     ax, ax
pop     edi
pop     esi
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+arg_4]
push    edi
push    esi
call    sub_470640
mov     [esp+30h+hmem], eax
add     esp, 4
test    eax, eax
jz      loc_42e218
mov     eax, esi
lea     edx, [esp+2ch+rc]
shr     eax, 10h
push    edx
movsx   ecx, ax
mov     [esp+30h+var_1c], ecx
push    ecx
mov     eax, [esp+34h+hmem]
push    eax
call    sub_46d5e0
mov     eax, [esp+38h+arg_0]
mov     edx, [esp+38h+arg_c]
add     esp, 0ch
mov     edi, [eax+42h]
mov     ebx, [eax+46h]
sub     edi, [esp+2ch+rc.left]
sub     ebx, [esp+2ch+rc.top]
mov     eax, edx
sub     eax, ebx
mov     [esp+2ch+rc.bottom], edx
mov     [esp+2ch+var_14], eax
mov     [esp+2ch+rc.top], edx
mov     eax, [esp+2ch+arg_8]
push    3
mov     ecx, eax
push    3
sub     ecx, edi
mov     [esp+34h+rc.right], eax
mov     [esp+34h+var_18], ecx
mov     [esp+34h+rc.left], eax
lea     eax, [esp+34h+rc]
push    eax
call    ds:inflaterect
sub     [esp+2ch+rc.top], ebx
push    1
lea     ecx, [esp+30h+rc]
mov     edx, [esp+30h+var_18]
mov     eax, [esp+30h+var_14]
push    ecx
mov     ecx, [esp+34h+var_1c]
push    eax
sub     [esp+38h+rc.bottom], ebx
push    edx
mov     ebx, [esp+3ch+hmem]
push    ecx
sub     [esp+40h+rc.left], edi
push    ebx
sub     [esp+44h+rc.right], edi
call    sub_46b830
add     esp, 18h
mov     edi, eax
push    0
push    esi
call    sub_470920
add     esp, 8
cmp     edi, 0dh
jnz     short loc_42e218
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+arg_0]
sub     esp, 0c0h
mov     word ptr [esp+0c0h+var_bc], 0
mov     ecx, [esp+0c0h+var_bc]
push    edi
push    ecx
push    eax
call    sub_43b150
add     esp, 8
mov     edx, eax
test    edx, edx
jz      short loc_42e298
lea     edi, [esp+0c4h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
mov     ax, [esp+0c4h+arg_4]
mov     ecx, [esp+0c4h+arg_8]
mov     [esp+0c4h+var_b6], ax
lea     eax, [esp+0c4h+var_c0]
mov     [esp+0c4h+var_9c], ecx
push    eax
push    15h
push    edx
call    dword ptr [edx+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     edi
add     esp, 0c0h
retn
sub     esp, 8
mov     word ptr [esp+8+var_4], 0
push    esi
mov     esi, [esp+0ch+arg_0]
mov     [esp+0ch+var_8], esi
mov     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+var_8]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jz      short loc_42e2ce
call    sub_4441e0
mov     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_42e300
push    esi
push    eax
call    sub_42d490
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     esi
add     esp, 8
retn
push    0
push    esi
call    sub_42cc30
add     esp, 8
pop     esi
add     esp, 8
retn
push    esi
mov     esi, [esp+4+arg_4]
cmp     esi, 0ffff8000h
jge     short loc_42e324
mov     esi, 0ffff8000h
jmp     short loc_42e331
cmp     esi, 7fffh
jle     short loc_42e331
mov     esi, 7fffh
mov     eax, [esp+4+arg_0]
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 9
jnz     short loc_42e34e
cmp     esi, 1
jg      short loc_42e34e
mov     esi, 1
mov     eax, esi
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    0
push    eax
push    esi
call    sub_42edc0
add     esp, 0ch
push    eax
push    esi
call    sub_42e310
add     esp, 8
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_461f70
add     esp, 4
mov     edi, eax
push    esi
call    sub_4635f0
add     esp, 4
test    eax, eax
jz      short loc_42e3b6
mov     eax, 1
pop     edi
pop     esi
retn
push    edi
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jnz     short loc_42e3cd
mov     eax, 2
pop     edi
pop     esi
retn
push    7
push    esi
call    sub_462670
add     esp, 8
movzx   eax, ax
pop     edi
pop     esi
retn
push    esi
mov     ecx, ds:dword_4a6770+2
push    edi
mov     edi, [esp+8+arg_4]
movsx   eax, di
lea     esi, ds:0[eax*4]
mov     eax, [ecx]
mov     ax, [eax+esi+4]
and     ax, 1ffh
jz      short loc_42e421
push    eax
call    sub_43d550
add     esp, 4
test    eax, eax
jz      short loc_42e421
mov     eax, ds:dword_4a6770+2
pop     edi
mov     ecx, [eax]
and     word ptr [ecx+esi+4], 0fe00h
pop     esi
retn
push    edi
call    sub_42e460
add     esp, 4
test    eax, eax
jz      short loc_42e448
push    edi
call    sub_42e390
add     esp, 4
push    eax
mov     eax, [esp+0ch+arg_0]
push    eax
call    sub_42e490
add     esp, 8
pop     edi
pop     esi
retn
mov     eax, ds:dword_4a6770+2
pop     edi
mov     ecx, [eax]
and     word ptr [ecx+esi+4], 0fe00h
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_43d590
add     esp, 4
test    ax, ax
jz      short loc_42e483
cmp     ax, word ptr ds:dword_4a6af8
mov     eax, 1
jl      short locret_42e485
xor     eax, eax
retn
xor     eax, eax
retn
mov     cl, [esp+arg_4]
push    ebx
push    esi
mov     bl, 1
shl     bl, cl
mov     esi, [esp+8+arg_0]
push    esi
call    sub_426b20
add     esp, 4
or      bl, al
push    ebx
push    esi
call    sub_426b40
add     esp, 8
pop     esi
pop     ebx
retn
sub     esp, 18h
push    ebx
push    esi
mov     esi, [esp+20h+arg_0]
push    edi
mov     edi, [esp+24h+arg_4]
push    edi
push    esi
call    sub_42e660
add     esp, 8
push    esi
call    sub_426b20
add     esp, 4
mov     dl, 1
lea     ecx, [edi+1]
xor     ebx, ebx
shl     dl, cl
dec     dl
xor     ecx, ecx
mov     cl, dl
mov     bl, al
not     ecx
and     ecx, ebx
cmp     ecx, 1
sbb     ecx, ecx
neg     ecx
test    al, dl
jz      loc_42e646
test    ecx, ecx
jz      short loc_42e549
push    esi
call    sub_426b70
add     esp, 4
test    eax, eax
jnz     short loc_42e549
push    esi
call    sub_43d590
add     esp, 4
test    ax, ax
jz      short loc_42e549
lea     ebx, [eax+1]
call    sub_4441e0
push    0
push    ebx
call    sub_43ad60
add     esp, 8
push    0
push    ebx
call    sub_43d490
add     esp, 8
push    0
jmp     loc_42e63d
mov     [esp+24h+var_18], esi
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jnz     short loc_42e573
push    4040001h
push    esi
call    sub_462670
movzx   eax, ax
mov     [esp+2ch+var_8], eax
add     esp, 8
jmp     short loc_42e57b
mov     [esp+24h+var_8], 0
mov     [esp+24h+var_4], 3fh
mov     [esp+24h+var_14], edi
call    sub_4755f0
mov     [esp+24h+hmem], eax
call    sub_4755f0
cmp     [esp+24h+hmem], 0
mov     [esp+24h+var_c], eax
jz      loc_42e654
test    eax, eax
jz      loc_42e654
mov     [esp+24h+var_2], 0
lea     eax, [esp+24h+var_18]
push    eax
push    offset sub_42e970
push    0
push    esi
call    sub_4620e0
add     esp, 10h
push    esi
call    sub_426e20
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_42e5e9
lea     eax, [esp+24h+var_18]
push    eax
push    offset sub_42e9f0
push    1
push    ebx
call    sub_4758a0
add     esp, 10h
lea     eax, [esp+24h+var_18]
mov     ecx, [esp+24h+hmem]
push    eax
push    offset sub_42ea60
push    1
push    ecx
call    sub_4758a0
add     esp, 10h
test    ebx, ebx
jz      short loc_42e61e
mov     eax, [esp+24h+hmem]
push    eax
push    ebx
call    sub_475860
add     esp, 8
push    ebx
push    esi
call    sub_426e40
add     esp, 8
mov     eax, [esp+24h+hmem]
push    eax
call    sub_475600
mov     eax, [esp+28h+var_c]
add     esp, 4
push    eax
call    sub_475600
mov     eax, dword ptr [esp+28h+var_2]
add     esp, 4
push    eax
push    esi
call    sub_426b40
add     esp, 8
cmp     edi, 2
jnz     short loc_42e654
push    esi
call    sub_42e950
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    esi
call    sub_43e100
test    eax, eax
jz      short loc_42e697
mov     esi, [esp+4+arg_0]
push    eax
push    esi
call    sub_42e920
add     esp, 8
test    eax, eax
jz      short loc_42e69b
push    eax
call    sub_42e390
add     esp, 4
cmp     eax, [esp+4+arg_4]
jg      short loc_42e69b
push    0
call    sub_43e090
add     esp, 4
jmp     short loc_42e69b
mov     esi, [esp+4+arg_0]
call    sub_48a1f0
test    eax, eax
jz      short loc_42e6c6
push    eax
push    esi
call    sub_42e920
add     esp, 8
test    eax, eax
jz      short loc_42e6c6
push    eax
call    sub_42e390
add     esp, 4
cmp     eax, [esp+4+arg_4]
jg      short loc_42e6c6
call    sub_48aaa0
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
push    esi
call    sub_43d590
mov     di, ax
add     esp, 4
test    di, di
jz      short loc_42e722
push    esi
call    sub_42e390
mov     bx, ax
add     esp, 4
push    esi
mov     esi, [esp+10h+arg_0]
push    esi
call    sub_42e920
add     esp, 8
test    eax, eax
jz      short loc_42e717
push    eax
call    sub_42e390
add     esp, 4
cmp     ax, bx
jge     short loc_42e717
mov     bx, ax
push    ebx
push    edi
push    esi
call    sub_42e730
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    esi
call    sub_426e20
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_42e751
call    sub_4755f0
mov     edi, eax
test    edi, edi
jz      short loc_42e783
mov     ax, [esp+0ch+arg_4]
shl     ax, 2
mov     bx, [esp+0ch+arg_8]
or      ax, bx
push    eax
push    edi
call    sub_475710
add     esp, 8
push    edi
push    esi
call    sub_426e40
add     esp, 8
movsx   eax, bx
push    eax
push    esi
call    sub_42e490
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
push    edi
call    sub_435430
test    eax, eax
jz      short loc_42e7a8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     di, di
lea     eax, [esp+10h+var_4]
push    eax
push    0
call    sub_4350e0
add     esp, 8
mov     esi, eax
mov     ebx, ds:dword_4a68c0
cmp     bx, 1
jz      short loc_42e802
push    ebx
call    sub_463500
add     esp, 4
test    eax, eax
jnz     short loc_42e80b
cmp     [esp+10h+var_4], ebx
jnz     short loc_42e7f1
inc     di
mov     ebx, esi
lea     eax, [esp+10h+var_4]
push    eax
push    edi
call    sub_4350e0
add     esp, 8
mov     esi, eax
jmp     short loc_42e7fc
push    ebx
call    sub_461f70
add     esp, 4
mov     ebx, eax
cmp     bx, 1
jnz     short loc_42e7c8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
call    sub_4441e0
call    sub_42e790
mov     edi, eax
test    edi, edi
jz      loc_42e8c1
push    edi
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jz      short loc_42e8c1
push    edi
call    sub_426e20
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_42e8c1
mov     eax, [esp+14h+arg_0]
push    eax
call    sub_42e8d0
mov     bp, ax
add     esp, 4
lea     esi, ds:0[ebp*4]
or      si, 1
push    esi
push    ebx
call    sub_475650
add     esp, 8
test    eax, eax
jz      short loc_42e8c1
push    ebp
push    ebx
call    sub_42ead0
mov     [esp+1ch+var_2], ax
mov     eax, dword ptr [esp+1ch+var_2]
add     esp, 8
push    eax
push    ebp
call    sub_43ad60
mov     eax, dword ptr [esp+1ch+var_2]
add     esp, 8
push    eax
push    ebp
call    sub_43d490
add     esp, 8
push    esi
push    ebx
call    sub_475770
add     esp, 8
push    ebx
push    edi
call    sub_426e40
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
mov     [esp+4+var_2], 0
lea     eax, [esp+4+var_2]
push    eax
push    offset loc_42e900
push    0
push    ecx
call    sub_4620e0
mov     ax, [esp+14h+var_2]
add     esp, 10h
add     esp, 4
retn
mov     eax, [esp+4]
push    eax
call    sub_43d590
mov     ecx, [esp+0ch]
add     esp, 4
cmp     [ecx], ax
jge     short loc_42e919
mov     [ecx], ax
mov     eax, 1
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
test    edi, edi
jz      short loc_42e941
mov     esi, [esp+8+arg_0]
push    edi
call    sub_461f70
add     esp, 4
cmp     esi, eax
jz      short loc_42e946
mov     edi, eax
test    eax, eax
jnz     short loc_42e92e
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    0
mov     esi, [esp+8+arg_0]
push    esi
call    sub_426b40
add     esp, 8
push    0
push    esi
call    sub_426e40
add     esp, 8
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    esi
call    sub_43d590
mov     di, ax
add     esp, 4
test    di, di
jnz     short loc_42e991
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_42e390
mov     bx, ax
mov     esi, [esp+10h+arg_4]
add     esp, 4
lea     ecx, ds:0[edi*4]
or      cx, bx
cmp     [esi+4], eax
push    ecx
jge     short loc_42e9cf
mov     eax, [esi+0ch]
push    eax
call    sub_475710
add     esp, 8
mov     al, 1
mov     cl, bl
pop     edi
shl     al, cl
or      [esi+16h], al
mov     eax, 1
pop     esi
pop     ebx
retn
mov     eax, [esi+8]
push    eax
call    sub_475710
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     si, [esp+8+arg_0]
push    edi
mov     ax, si
sar     ax, 2
push    eax
call    sub_43d550
add     esp, 4
test    eax, eax
jnz     short loc_42ea48
xor     ebx, ebx
mov     edi, [esp+0ch+arg_4]
mov     bx, si
push    esi
and     ebx, 3
cmp     [edi+4], ebx
jge     short loc_42ea3c
mov     eax, [edi+0ch]
push    eax
call    sub_475710
add     esp, 8
mov     al, 1
mov     cl, bl
shl     al, cl
or      [edi+16h], al
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [edi+8]
push    eax
call    sub_475710
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
mov     di, [esp+0ch+arg_0]
sar     di, 2
push    edi
call    sub_43d550
add     esp, 4
test    eax, eax
jnz     short loc_42eabc
mov     esi, [esp+0ch+arg_4]
push    edi
mov     eax, [esi+0ch]
push    eax
call    sub_42ead0
mov     bx, ax
add     esp, 8
test    bx, bx
jz      short loc_42ea94
dec     bx
mov     ax, [esi+14h]
mov     ecx, [esi]
push    eax
mov     edx, [esi+10h]
push    ecx
push    edx
call    sub_4441f0
add     esp, 0ch
push    ebx
push    edi
call    sub_43ad60
add     esp, 8
push    ebx
push    edi
call    sub_43d490
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     ax, [esp+arg_4]
sub     esp, 4
mov     word ptr [esp+4+var_4], ax
mov     ecx, [esp+4+hmem]
mov     word ptr [esp+4+var_4+2], 0
lea     eax, [esp+4+var_4]
push    eax
push    offset sub_42eb10
push    1
push    ecx
call    sub_4758a0
mov     ax, word ptr [esp+14h+var_4+2]
add     esp, 10h
add     esp, 4
retn
push    esi
mov     si, [esp+4+arg_0]
sar     si, 2
push    esi
call    sub_43d550
add     esp, 4
test    eax, eax
jnz     short loc_42eb42
mov     eax, [esp+4+arg_4]
cmp     [eax], si
jg      short loc_42eb42
mov     cx, [eax+2]
cmp     si, cx
jl      short loc_42eb3e
test    cx, cx
jnz     short loc_42eb42
mov     [eax+2], si
mov     eax, 1
pop     esi
retn
mov     edx, [esp+arg_0]
push    ebx
mov     bx, [edx+8]
push    esi
push    edi
push    ebp
mov     ebp, [edx+4]
test    ebp, ebp
jz      short loc_42eb98
mov     eax, [edx]
mov     esi, [esp+10h+arg_4]
shr     eax, 10h
mov     ecx, esi
shr     ecx, 10h
cmp     ax, cx
jnz     short loc_42eb9c
mov     di, word ptr [esp+10h+arg_8]
test    bx, bx
jz      short loc_42eba1
cmp     [ebp+0], si
jnz     short loc_42eb8c
cmp     [ebp+2], di
jz      short loc_42ebdc
dec     bx
add     ebp, 4
test    bx, bx
jnz     short loc_42eb80
jmp     short loc_42eba1
mov     esi, [esp+10h+arg_4]
mov     di, word ptr [esp+10h+arg_8]
cmp     di, 7
jnz     short loc_42ebb5
push    esi
call    sub_437e50
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     dword ptr [edx+0ah], 0
jz      short loc_42ebca
push    edi
push    esi
call    sub_43ad00
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+10h+arg_8]
mov     ecx, [esp+10h+arg_4]
push    eax
push    ecx
call    sub_43b450
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
movsx   ecx, word ptr [eax]
add     ecx, eax
mov     ax, [ecx-0a2h]
sub     ecx, 0a6h
push    eax
mov     edx, [ecx]
mov     ecx, [esp+4+arg_4]
push    edx
push    ecx
call    sub_42eb50
add     esp, 0ch
mov     eax, 1
retn
sub     esp, 10h
push    esi
push    3fh
mov     esi, [esp+18h+arg_0]
push    esi
push    4000001h
push    esi
call    sub_462670
add     esp, 8
movzx   eax, ax
push    eax
call    sub_4441f0
mov     cx, [esp+20h+arg_8]
mov     eax, [esp+20h+arg_4]
mov     [esp+20h+var_8], cx
mov     edx, [esp+20h+arg_c]
mov     [esp+20h+var_10], esi
mov     [esp+20h+var_c], eax
lea     esi, [esp+20h+var_10]
mov     [esp+20h+var_6], edx
add     esp, 0ch
push    0
push    0
push    esi
push    offset sub_42ebf0
call    sub_43b080
add     esp, 10h
pop     esi
add     esp, 10h
retn
mov     eax, [esp+arg_4]
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+14h+arg_0]
push    eax
push    edi
call    sub_4612e0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_42ecdb
push    ebx
call    ds:globallock
mov     ebp, eax
test    ebp, ebp
jz      short loc_42ecc8
mov     esi, [esp+14h+arg_8]
push    1
push    esi
push    ebp
push    edi
call    sub_41a990
add     esp, 10h
mov     edi, eax
push    ebx
call    ds:globalunlock
jmp     short loc_42ecd0
mov     esi, [esp+14h+arg_8]
mov     edi, [esp+14h+var_4]
push    ebx
call    sub_45ba00
add     esp, 4
jmp     short loc_42ece7
mov     esi, [esp+14h+arg_8]
mov     ebp, [esp+14h+var_4]
mov     edi, [esp+14h+var_4]
test    ebx, ebx
jz      short loc_42ecef
test    ebp, ebp
jnz     short loc_42ecfd
push    esi
mov     edi, 3e8h
call    sub_41afc0
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 18h
push    ebx
push    esi
mov     esi, [esp+20h+arg_0]
push    1
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_42ed6d
push    1
call    sub_41c360
add     esp, 4
mov     bl, al
lea     eax, [esp+20h+var_18]
push    eax
push    3e9h
push    esi
call    sub_42ec80
add     esp, 0ch
mov     esi, eax
push    ebx
call    sub_41c360
add     esp, 4
cmp     esi, 3e8h
jz      short loc_42ed6d
lea     eax, [esp+20h+var_18]
push    eax
call    sub_41b030
add     esp, 4
call    sub_441d20
pop     esi
pop     ebx
add     esp, 18h
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    eax
push    ecx
push    edx
call    sub_42ec80
add     esp, 0ch
cmp     eax, 3e8h
jnz     short loc_42eda9
mov     eax, [esp+18h+arg_8]
add     esp, 18h
retn
lea     eax, [esp+18h+var_18]
push    eax
call    sub_41b3b0
add     esp, 1ch
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    eax
push    ecx
push    edx
call    sub_42ec80
add     esp, 0ch
cmp     eax, 3e8h
jnz     short loc_42ede9
mov     eax, [esp+18h+arg_8]
add     esp, 18h
retn
lea     eax, [esp+18h+var_18]
push    1
push    eax
call    sub_41aa60
mov     eax, [esp+20h+var_10]
add     esp, 8
add     esp, 18h
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    eax
push    ecx
push    edx
call    sub_42ec80
add     esp, 0ch
cmp     eax, 3e8h
jnz     short loc_42ee29
fld     [esp+18h+arg_8]
add     esp, 18h
retn
lea     eax, [esp+18h+var_18]
push    2
push    eax
call    sub_41aa60
fld     [esp+20h+var_10]
add     esp, 8
add     esp, 18h
retn
sub     esp, 4ch
mov     word ptr [esp+4ch+var_48], 0ah
push    esi
push    edi
mov     esi, [esp+54h+arg_0]
mov     [esp+54h+var_4c], esi
mov     eax, [esp+54h+var_48]
mov     ecx, [esp+54h+var_4c]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jnz     short loc_42eede
lea     edi, [esp+54h+src]
xor     eax, eax
mov     ecx, 10h
push    eax
rep stosd
stosw
mov     [esp+58h+src], 42h
mov     eax, dword ptr [esp+58h+arg_4]
mov     ecx, [esp+58h+var_48]
mov     edx, [esp+58h+var_4c]
push    eax
lea     eax, [esp+5ch+src]
push    ecx
push    edx
push    offset sub_42eef0
push    eax
call    sub_43aa50
mov     ecx, [esp+6ch+var_48]
mov     edx, [esp+6ch+var_4c]
add     esp, 18h
push    ecx
push    edx
call    sub_43b150
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_42eedc
push    9
push    esi
call    sub_462670
add     esp, 8
movsx   ecx, word ptr [edi]
cmp     ax, 1
sbb     eax, eax
neg     eax
mov     [ecx+edi-8], eax
mov     eax, edi
pop     edi
pop     esi
add     esp, 4ch
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 4ch
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+14h+arg_4]
lea     eax, [edi-3]
cmp     eax, 24h
ja      def_42ef0f
xor     ecx, ecx
mov     cl, ds:byte_42f078[eax]
jmp     ds:jpt_42ef0f[ecx*4]
mov     esi, [esp+14h+arg_0]
add     esi, 32h
push    esi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_42ef53
mov     eax, ds:dword_4a6784
push    eax
push    esi
call    sub_412fc0
add     esp, 8
test    eax, eax
jz      short loc_42ef4a
mov     ebx, [esp+14h+arg_8]
push    ebx
push    edi
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
push    esi
call    sub_412f60
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     ebx, ebx
mov     esi, [esp+14h+arg_0]
add     esi, 32h
mov     ds:dword_4a6784, ebx
mov     [esp+14h+var_4], ebx
push    esi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_42efd1
push    esi
call    sub_4130c0
add     esp, 4
mov     ebp, eax
cmp     ebp, ebx
jz      short loc_42efc8
mov     ebx, [esp+14h+arg_8]
push    ebx
push    1
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
test    eax, eax
jnz     short loc_42efaf
push    ebp
call    sub_413290
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_42ef90
jmp     short loc_42efc8
push    ebx
push    edi
push    ebp
call    dword ptr [ebp+6]
mov     [esp+20h+var_4], eax
add     esp, 0ch
test    eax, eax
jz      short loc_42efc8
mov     eax, [ebp+2]
mov     ds:dword_4a6784, eax
push    esi
call    sub_412f60
add     esp, 4
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, [esp+14h+arg_0]
add     esi, 32h
push    esi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_42f025
push    esi
call    sub_4130c0
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_42f01c
mov     ebx, [esp+14h+arg_8]
push    ebx
push    edi
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
push    ebp
call    sub_413290
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_42f004
push    esi
call    sub_412f60
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, [esp+14h+arg_0]
push    1
lea     eax, [esi+32h]
push    eax
call    sub_410700
add     esp, 8
jmp     short loc_42f047
mov     esi, [esp+14h+arg_0]
mov     ebx, [esp+14h+arg_8]
push    ebx
push    edi
push    esi
call    sub_4535e0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ecx, offset dword_4a6788
jmp     sub_44d680
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    eax
mov     ax, [esp+1ch+arg_0]
add     ax, 2001h
push    eax
call    sub_442a60
add     esp, 8
test    eax, eax
jz      short loc_42f0e5
lea     eax, [esp+18h+var_18]
push    1
push    eax
call    sub_41aa60
mov     eax, [esp+20h+var_10]
add     esp, 8
add     esp, 18h
retn
mov     eax, [esp+18h+arg_4]
push    eax
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
movzx   eax, ax
add     esp, 8
add     esp, 18h
retn
push    20a0780h
push    0c2h
call    sub_42f0b0
add     esp, 8
retn
push    20a0640h
push    0c3h
call    sub_42f0b0
add     esp, 8
retn
sub     esp, 2ch
lea     ecx, [esp+2ch+var_2c]
push    esi
call    sub_44d680
mov     eax, [esp+30h+arg_0]
mov     ecx, dword_4adc68
push    eax
call    sub_44c240
lea     ecx, [esp+30h+var_2c]
push    eax
call    sub_44d790
mov     esi, eax
test    esi, esi
jnz     short loc_42f1a4
call    sub_42f130
test    eax, eax
jnz     short loc_42f18f
lea     ecx, [esp+30h+var_2c]
call    sub_44ea10
mov     eax, [esp+30h+arg_8]
mov     ecx, [esp+30h+lpstring1]
push    eax
push    ecx
lea     ecx, [esp+38h+var_2c]
call    sub_44de00
mov     esi, eax
lea     ecx, [esp+30h+var_2c]
call    sub_44d730
mov     eax, esi
pop     esi
add     esp, 2ch
retn
sub     esp, 2ch
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+34h+lpbuffer]
mov     byte ptr [esi], 0
mov     ax, ds:word_4a8518
push    eax
call    sub_461810
add     esp, 4
test    eax, eax
jz      short loc_42f1fe
mov     eax, [esp+34h+cchbuffermax]
push    4
push    5e0h
push    eax
push    esi
call    sub_47fe70
add     esp, 10h
mov     eax, edi
pop     edi
pop     esi
add     esp, 2ch
retn
lea     ecx, [esp+34h+var_2c]
call    sub_44d680
mov     eax, ds:dword_4a8510
mov     ecx, dword_4adc68
push    eax
call    sub_44c240
lea     ecx, [esp+34h+var_2c]
push    eax
call    sub_44d790
mov     edi, eax
test    edi, edi
jnz     short loc_42f24b
call    sub_42f130
test    eax, eax
jnz     short loc_42f23a
lea     ecx, [esp+34h+var_2c]
call    sub_44ea10
mov     eax, [esp+34h+cchbuffermax]
lea     ecx, [esp+34h+var_2c]
push    eax
push    esi
call    sub_44de00
mov     edi, eax
lea     ecx, [esp+34h+var_2c]
call    sub_44d730
mov     eax, edi
pop     edi
pop     esi
add     esp, 2ch
retn
sub     esp, 2ch
lea     ecx, [esp+2ch+var_2c]
push    esi
call    sub_44d680
mov     eax, [esp+30h+arg_0]
lea     ecx, [esp+30h+var_2c]
push    eax
call    sub_44d790
mov     esi, eax
test    esi, esi
jnz     short loc_42f2ba
call    sub_42f110
test    eax, eax
jnz     short loc_42f293
lea     ecx, [esp+30h+var_2c]
call    sub_44e8f0
call    sub_42f130
test    eax, eax
jnz     short loc_42f2a5
lea     ecx, [esp+30h+var_2c]
call    sub_44ea10
mov     eax, [esp+30h+arg_8]
mov     ecx, [esp+30h+lpstring1]
push    eax
push    ecx
lea     ecx, [esp+38h+var_2c]
call    sub_44dae0
mov     esi, eax
lea     ecx, [esp+30h+var_2c]
call    sub_44d730
mov     eax, esi
pop     esi
add     esp, 2ch
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+lpstring1]
push    eax
mov     edx, ds:dword_4a8514
push    ecx
push    edx
mov     ecx, dword_4adc68
call    sub_44c1e0
push    eax
call    sub_42f260
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+lpstring1]
push    eax
mov     edx, ds:dword_4a8510
push    ecx
push    edx
mov     ecx, dword_4adc68
call    sub_44c1e0
push    eax
call    sub_42f260
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+lpstring1]
push    eax
push    ecx
push    offset dword_4a6788
call    sub_42f260
add     esp, 0ch
retn
push    offset dword_4a6788
push    0
call    sub_44b840
add     esp, 8
retn
mov     eax, [esp+arg_0]
mov     byte ptr [eax], 0
retn
mov     ecx, offset dword_4a6788
jmp     sub_44d730
push    offset sub_42f370
call    _atexit
add     esp, 4
retn
call    sub_42f0a0
jmp     loc_42f380
xor     eax, eax
mov     ds:dword_4a67c0, eax
mov     ds:dword_4a67c8, eax
retn
cmp     ds:dword_4a67b8, 0
push    esi
jnz     short loc_42f3be
xor     eax, eax
pop     esi
retn
cmp     [esp+4+arg_4], 0
jz      short loc_42f3c9
xor     eax, eax
pop     esi
retn
cmp     ds:dword_4a67c0, 0
jz      short loc_42f3f5
mov     ecx, ds:dword_4a67c0
mov     eax, ds:dword_4a67b8
mov     esi, [esp+4+arg_0]
mov     edx, [eax]
cmp     [edx+ecx*4-4], esi
jnz     short loc_42f3f9
lea     eax, [ecx-1]
pop     esi
mov     ds:dword_4a67c8, eax
xor     eax, eax
retn
mov     esi, [esp+4+arg_0]
mov     eax, ds:dword_4a67c4
cmp     ds:dword_4a67c0, eax
jb      short loc_42f438
dec     ds:dword_4a67c0
cmp     ds:dword_4a67c8, 0
jbe     short loc_42f41b
dec     ds:dword_4a67c8
mov     eax, ds:dword_4a67b8
mov     ecx, [eax]
mov     eax, ds:dword_4a67c0
shl     eax, 2
lea     edx, [ecx+4]
push    eax
push    edx
push    ecx
call    _memcpy
add     esp, 0ch
mov     ecx, ds:dword_4a67c0
mov     eax, ds:dword_4a67b8
mov     edx, [eax]
mov     [edx+ecx*4], esi
pop     esi
inc     ds:dword_4a67c0
mov     eax, ds:dword_4a67c0
dec     eax
mov     ds:dword_4a67c8, eax
mov     eax, 1
retn
cmp     ds:dword_4a67c0, 0
jz      short loc_42f48f
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_42f48f
cmp     ds:dword_4a67c0, eax
jnb     short loc_42f47c
xor     eax, eax
retn
mov     ecx, ds:dword_4a67c0
sub     ecx, eax
mov     eax, ds:dword_4a67b8
mov     edx, [eax]
mov     eax, [edx+ecx*4]
retn
xor     eax, eax
retn
cmp     ds:dword_4a67c0, 0
jnz     short loc_42f4ac
xor     eax, eax
retn
dec     ds:dword_4a67c8
mov     eax, ds:dword_4a67c8
cmp     ds:dword_4a67c0, eax
ja      short loc_42f4c2
xor     eax, eax
retn
mov     ecx, ds:dword_4a67c8
mov     eax, ds:dword_4a67b8
mov     edx, [eax]
mov     eax, [edx+ecx*4]
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     eax, [ebx]
dec     eax
cmp     eax, 4
ja      def_42f4f3
jmp     ds:jpt_42f4f3[eax*4]
mov     ds:dword_4a67c4, 64h
mov     ds:dword_4a67bc, 190h
push    2
push    190h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a67b8, eax
test    eax, eax
jnz     short loc_42f52f
mov     eax, 8
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
mov     ds:dword_4a67c0, eax
mov     ds:dword_4a67c8, eax
call    sub_43cd40
mov     ds:word_4a67cc, ax
mov     word ptr [ebx+8], 16h
mov     dx, ds:word_4a67cc
mov     eax, ds:dword_4a67bc
push    eax
mov     ecx, ds:dword_4a67b8
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
cmp     word ptr [ebx+8], 16h
jz      short loc_42f57d
mov     eax, 1389h
pop     edi
pop     esi
pop     ebx
retn
mov     edi, offset dword_4a67b8
mov     esi, [ebx+0ah]
mov     ecx, 5
rep movsd
movsw
mov     ax, ds:word_4a67cc
push    eax
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a67b8, eax
test    eax, eax
jnz     def_42f4f3
mov     eax, 8
pop     edi
pop     esi
pop     ebx
retn
mov     esi, offset dword_4a67b8
mov     edi, [ebx+0ah]
mov     ecx, 5
rep movsd
movsw
mov     dx, ds:word_4a67cc
mov     eax, ds:dword_4a67bc
push    eax
mov     ecx, ds:dword_4a67b8
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a67cc
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ds:dword_4a67b8, 0
pop     edi
pop     esi
pop     ebx
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a67cc
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     ecx, ecx
mov     cx, word_4ad9ac
xor     eax, eax
mov     ax, ds:word_4a67cc
push    0
shl     ecx, 10h
push    0
or      ecx, eax
push    ecx
call    sub_4709c0
mov     ds:dword_4a67b8, 0
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
dec     eax
cmp     eax, 4
ja      def_42f691
jmp     ds:jpt_42f691[eax*4]
call    sub_4755f0
mov     ds:dword_4a67d0, eax
call    sub_4755f0
cmp     ds:dword_4a67d0, 0
mov     ds:dword_4a67d4, eax
jz      short loc_42f729
test    eax, eax
jz      short loc_42f729
call    sub_43cd40
mov     ds:word_4a67d8, ax
call    sub_43cd40
mov     ds:word_4a67da, ax
mov     word ptr [esi+8], 0ch
mov     eax, ds:dword_4a67d0
push    eax
call    sub_475980
mov     cx, ds:word_4a67d8
add     esp, 4
push    eax
mov     eax, ds:dword_4a67d0
push    eax
push    ecx
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jnz     loc_42f8ab
mov     eax, ds:dword_4a67d4
push    eax
call    sub_475980
mov     cx, ds:word_4a67da
add     esp, 4
push    eax
mov     eax, ds:dword_4a67d4
push    eax
push    ecx
call    sub_43cda0
add     esp, 0ch
pop     esi
retn
mov     eax, 8
pop     esi
retn
cmp     word ptr [esi+8], 0ch
jz      short loc_42f73e
mov     eax, 1389h
pop     esi
retn
mov     ecx, [esi+0ah]
mov     edx, offset dword_4a67d0
mov     eax, [ecx]
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     ecx, [ecx+8]
mov     [edx+8], ecx
mov     ax, ds:word_4a67d8
push    eax
call    sub_43cd60
mov     cx, ds:word_4a67da
add     esp, 4
mov     ds:dword_4a67d0, eax
push    ecx
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a67d4, eax
cmp     ds:dword_4a67d0, 0
jz      short loc_42f790
test    eax, eax
jnz     def_42f691
mov     eax, 8
pop     esi
retn
mov     edx, [esi+0ah]
mov     eax, ds:dword_4a67d0
mov     ecx, offset dword_4a67d0
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     ecx, [ecx+8]
mov     [edx+8], ecx
mov     eax, ds:dword_4a67d0
push    eax
call    sub_475980
mov     dx, ds:word_4a67d8
add     esp, 4
mov     ecx, ds:dword_4a67d0
push    eax
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jnz     loc_42f8ab
mov     eax, ds:dword_4a67d4
push    eax
call    sub_475980
mov     cx, ds:word_4a67da
add     esp, 4
push    eax
mov     eax, ds:dword_4a67d4
push    eax
push    ecx
call    sub_43cda0
add     esp, 0ch
pop     esi
retn
xor     esi, esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a67d8
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a67da
push    esi
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ds:dword_4a67d0, esi
mov     ds:dword_4a67d4, esi
pop     esi
retn
xor     esi, esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
push    esi
xor     ecx, ecx
mov     cx, ds:word_4a67d8
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a67da
push    esi
shl     eax, 10h
push    esi
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
mov     ds:dword_4a67d0, esi
mov     ds:dword_4a67d4, esi
xor     eax, eax
pop     esi
retn
sub     esp, 40h
push    esi
mov     esi, [esp+44h+arg_0]
push    esi
call    sub_42fd00
add     esp, 4
test    eax, eax
jz      loc_42f984
lea     eax, [esp+44h+var_30]
push    eax
call    sub_433c30
lea     eax, [esp+48h+var_38]
lea     ecx, [esp+48h+var_30]
mov     [esp+48h+var_30], 6
mov     [esp+48h+var_18], esi
add     esp, 4
push    eax
push    ecx
call    sub_433460
add     esp, 8
test    eax, eax
jz      short loc_42f984
mov     esi, [esp+44h+var_38]
push    esi
call    sub_4624e0
add     esp, 4
cmp     eax, 3
jz      short loc_42f934
cmp     eax, 7
jz      short loc_42f952
cmp     eax, 0bh
jnz     short loc_42f96f
push    10b0640h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_42f96f
push    esi
call    sub_428c80
add     esp, 4
jmp     short loc_42f96f
mov     word ptr [esp+44h+var_3c], 1
mov     [esp+44h+var_40], esi
mov     eax, [esp+44h+var_3c]
mov     ecx, [esp+44h+var_40]
push    eax
push    ecx
call    sub_428be0
add     esp, 8
push    1
push    esi
call    sub_43c630
add     esp, 8
mov     eax, 1
pop     esi
add     esp, 40h
retn
xor     eax, eax
pop     esi
add     esp, 40h
retn
push    ebx
mov     ebx, [esp+4+arg_0]
push    ebx
call    sub_463500
add     esp, 4
test    eax, eax
jnz     short loc_42f9c6
push    ebx
call    sub_4624e0
add     esp, 4
cmp     eax, 6
jnz     short loc_42f9c6
movsx   eax, word ptr [esp+4+arg_8]
mov     ecx, [esp+4+lpstring1]
push    eax
push    ecx
push    ebx
call    sub_462d70
add     esp, 0ch
pop     ebx
retn
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_42f9f5
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_42f9fe
push    ebx
call    sub_461250
add     esp, 4
mov     ecx, [esp+4+arg_8]
mov     edx, [esp+4+lpstring1]
push    ecx
push    edx
push    0ah
push    eax
call    sub_45c990
add     esp, 10h
pop     ebx
retn
mov     eax, ds:dword_4a67d0
push    eax
call    sub_475850
mov     eax, [esp+4+arg_0]
add     esp, 4
push    0
push    offset sub_42fa50
push    0
push    eax
call    sub_4620e0
add     esp, 10h
retn
push    esi
push    1000102h
mov     esi, [esp+8+arg_0]
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_42fa7e
mov     eax, ds:dword_4a67d4
push    eax
push    esi
call    sub_42faa0
add     esp, 8
mov     eax, 1
pop     esi
retn
mov     eax, ds:dword_4a67d0
push    eax
push    esi
call    sub_42faa0
add     esp, 8
mov     eax, 1
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_4624e0
add     esp, 4
sub     eax, 3
cmp     eax, 8
ja      short def_42fabe
xor     ecx, ecx
mov     cl, ds:byte_42fae8[eax]
jmp     ds:jpt_42fabe[ecx*4]
mov     eax, [esp+4+hmem]
push    eax
push    esi
call    sub_42fb10
add     esp, 8
pop     esi
retn
mov     eax, ds:dword_4a67d0
push    eax
call    sub_475850
add     esp, 4
retn
sub     esp, 1a0h
lea     eax, [esp+1a0h+string2]
push    ebx
push    esi
push    edi
push    ebp
push    19ah
mov     ebp, [esp+1b4h+arg_0]
push    eax
push    ebp
call    sub_42f990
lea     ecx, [esp+1bch+string2]
add     esp, 0ch
push    7
push    19ah
push    ecx
lea     ecx, [esp+1bch+string2]
push    ecx
call    sub_47fe30
lea     esi, [esp+1c0h+string2]
add     esp, 10h
cmp     [esp+1b0h+string2], 0
jz      short loc_42fb7c
cmp     byte ptr [esi], 5ch
jnz     short loc_42fb60
inc     esi
jmp     short loc_42fb71
push    esi
call    sub_41f2b0
add     esp, 4
test    ax, ax
jz      short loc_42fb71
mov     byte ptr [esi], 0
cmp     byte ptr [esi], 0
jz      short loc_42fb7c
inc     esi
cmp     byte ptr [esi], 0
jnz     short loc_42fb58
lea     edi, [esp+1b0h+string2]
mov     esi, [esp+1b0h+hmem]
mov     al, [edi]
test    al, al
jz      loc_42fc90
mov     ecx, edi
cmp     al, 5ch
jnz     short loc_42fbc1
lea     ebx, [edi+1]
cmp     byte ptr [ebx], 0
jnz     short loc_42fba1
mov     ebx, edi
push    esi
xor     eax, eax
mov     al, [ebx]
lea     edi, [ebx+1]
push    eax
call    sub_42fca0
add     esp, 8
cmp     byte ptr [edi], 0
jz      loc_42fc88
inc     edi
jmp     loc_42fc88
mov     edx, ecx
test    al, al
jz      short loc_42fbd2
cmp     byte ptr [edx], 7ch
jz      short loc_42fbd2
inc     edx
cmp     byte ptr [edx], 0
jnz     short loc_42fbc7
lea     edi, [edx+1]
cmp     byte ptr [edx], 0
jnz     short loc_42fbdc
xor     edi, edi
mov     byte ptr [edx], 0
cmp     byte ptr [ecx], 3fh
jnz     short loc_42fbef
push    esi
push    400000h
jmp     loc_42fc80
push    ecx
push    2
call    sub_4590f0
add     esp, 8
mov     ebx, eax
push    ebp
call    sub_4624e0
add     esp, 4
cmp     eax, 5
jnz     short loc_42fc7e
test    ebx, ebx
jz      short loc_42fc7e
test    ebx, 90000h
jnz     short loc_42fc7e
or      ebx, 40000h
push    ebx
push    2
call    sub_459a90
mov     [esp+1b8h+var_19d], al
add     esp, 8
cmp     dword_4af134, 1
jle     short loc_42fc4a
push    103h
xor     eax, eax
mov     al, [esp+1b4h+var_19d]
push    eax
call    __isctype
add     esp, 8
jmp     short loc_42fc61
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, [esp+1b0h+var_19d]
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 103h
test    eax, eax
jz      short loc_42fc7e
xor     eax, eax
and     ebx, 0ff0000h
mov     al, [esp+1b0h+var_19d]
push    eax
call    _toupper
add     esp, 4
or      eax, ebx
mov     ebx, eax
push    esi
push    ebx
call    sub_42fca0
add     esp, 8
test    edi, edi
jnz     loc_42fb87
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1a0h
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short locret_42fcb6
push    eax
mov     eax, [esp+4+hmem]
push    eax
call    sub_475a70
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    esi
mov     esi, [esp+4+arg_4]
push    eax
push    esi
call    sub_475b00
add     esp, 8
test    eax, eax
jnz     short loc_42fced
push    400000h
push    esi
call    sub_475b00
add     esp, 8
test    eax, eax
jnz     short loc_42fced
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
push    esi
mov     eax, ds:dword_4a67d0
mov     esi, [esp+4+arg_0]
push    eax
push    esi
call    sub_42fcc0
add     esp, 8
test    eax, eax
jnz     short loc_42fd2f
mov     eax, ds:dword_4a67d4
push    eax
push    esi
call    sub_42fcc0
add     esp, 8
test    eax, eax
jnz     short loc_42fd2f
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
push    esi
push    edi
call    sub_4755f0
push    eax
mov     edi, eax
mov     eax, [esp+0ch+arg_4]
push    eax
call    sub_42fb10
mov     eax, [esp+10h+arg_0]
add     esp, 8
push    edi
push    eax
call    sub_42fcc0
add     esp, 8
mov     esi, eax
push    edi
call    sub_475600
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
push    ebp
mov     eax, [ebx+1ch]
mov     ebp, 65h
cmp     eax, 1
sbb     edi, edi
add     di, 65h
cmp     eax, 1
adc     ebp, 0ffffffffh
push    edi
call    sub_490830
add     esp, 4
mov     esi, eax
push    ebp
call    sub_490830
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_42fdc4
push    2
push    ebp
call    sub_4110a0
add     esp, 8
mov     eax, ds:dword_4a67dc
push    eax
call    sub_45ba00
add     esp, 4
push    20h
push    ebx
call    sub_45b910
add     esp, 8
mov     ds:dword_4a67dc, eax
test    eax, eax
jnz     short loc_42fe0b
test    esi, esi
jz      short loc_42fdf5
push    2
push    esi
call    sub_4110a0
add     esp, 8
test    ebp, ebp
jz      short loc_42fe04
push    2
push    ebp
call    sub_4110a0
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
test    esi, esi
jz      short loc_42fe1f
push    esi
call    sub_490cb0
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    0
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
push    edi
call    sub_410f60
add     esp, 0ch
mov     esi, eax
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 70h
mov     [esp+70h+var_6c], 0
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+80h+arg_4]
mov     ebx, [ebp+2]
push    ebx
call    sub_411890
mov     [esp+84h+var_70], eax
add     esp, 4
cmp     ds:dword_4a67dc, 0
jz      short loc_42fe93
mov     eax, ds:dword_4a67dc
lea     edi, [esp+80h+var_60]
mov     ecx, 8
mov     esi, [eax]
rep movsd
jmp     short loc_42fea0
lea     edi, [esp+80h+var_60]
xor     eax, eax
mov     ecx, 8
rep stosd
mov     esi, [esp+80h+arg_0]
test    esi, esi
jz      short loc_42feb0
cmp     esi, 9
jnz     short loc_42feba
push    esi
push    ebp
call    sub_431730
add     esp, 8
cmp     esi, 5
jz      short loc_42fec4
cmp     esi, 9
jnz     short loc_42fed4
push    0
push    ebp
push    esi
call    sub_411300
mov     [esp+8ch+var_6c], eax
add     esp, 0ch
lea     ecx, [esi-5]
cmp     ecx, 2ah
ja      short def_42fee4
xor     eax, eax
mov     al, ds:byte_430220[ecx]
jmp     ds:jpt_42fee4[eax*4]
push    0
push    ebp
push    esi
call    sub_411300
mov     [esp+8ch+var_6c], eax
mov     eax, [esp+8ch+var_6c]
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, [esp+80h+var_70]
push    offset sub_430a80
push    16h
add     eax, 10h
push    eax
call    sub_48e770
add     esp, 0ch
test    eax, eax
jz      loc_4301df
lea     eax, [esp+80h+string]
push    eax
push    4
push    ebx
call    sub_4119b0
add     esp, 0ch
push    ebx
call    sub_490980
mov     ecx, [esp+84h+var_70]
add     esp, 4
mov     eax, edx
push    ecx
sub     eax, [esp+84h+var_34]
add     eax, [esp+84h+var_3c]
mov     [ecx+36h], eax
lea     eax, [esp+84h+var_60]
mov     dx, [ebp+0]
push    eax
push    edx
push    ebx
call    sub_430320
mov     eax, [esp+90h+var_6c]
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
push    1
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    offset windowname
call    sub_4324d0
mov     eax, [esp+0a8h+var_70]
add     esp, 28h
add     eax, 10h
push    eax
call    sub_48e7d0
add     esp, 4
mov     ecx, ds:dword_4a67dc
push    ecx
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     ax, ds:word_4a8518
push    2020204h
mov     ds:dword_4a67dc, 0
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     loc_4301df
call    sub_432100
mov     eax, [esp+80h+var_6c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, [ebp+12h]
dec     eax
cmp     eax, 6
ja      short def_42fff6
jmp     ds:jpt_42fff6[eax*4]
push    0
push    ebp
push    esi
call    sub_411300
mov     [esp+8ch+var_6c], eax
mov     eax, [esp+8ch+var_6c]
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     ecx, [esp+80h+var_70]
lea     eax, [esp+80h+var_60]
push    ecx
push    eax
push    ebx
call    sub_4306a0
mov     eax, [esp+8ch+var_6c]
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, [ebp+1ah]
cmp     eax, 3
jz      short loc_430056
cmp     eax, 8
jz      short loc_430074
cmp     eax, 9
jz      short loc_430085
mov     eax, [esp+80h+var_6c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, [esp+80h+var_50]
push    0
push    eax
push    4
push    ebx
call    sub_4317b0
mov     eax, [esp+90h+var_6c]
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
push    ebx
call    sub_430cc0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     ecx, [esp+80h+var_70]
push    ecx
push    0
push    2
push    ebp
call    sub_430d50
mov     eax, [esp+90h+var_6c]
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, [esp+80h+var_50]
push    0
push    eax
push    4
push    ebx
call    sub_4317b0
mov     eax, [esp+90h+var_6c]
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
call    sub_432410
test    ax, ax
jz      loc_4301df
dec     ax
push    40h
cmp     ax, 1
lea     ecx, [esp+84h+string]
sbb     eax, eax
push    ecx
add     ax, 3ah
push    eax
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4319a0
lea     ecx, [esp+90h+string]
add     esp, 10h
push    ecx
push    6
push    ebx
call    sub_411b20
mov     eax, [esp+8ch+var_6c]
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
cmp     dword ptr [ebp+1ah], 9
jnz     loc_4301df
mov     ecx, [ebp+1eh]
lea     edx, [esp+80h+string]
mov     eax, [ecx+10h]
add     ecx, 10h
mov     [edx], eax
push    ebx
mov     ebp, [ecx+4]
mov     [edx+4], ebp
mov     ebp, ds:getdc
mov     esi, [ecx+8]
mov     [edx+8], esi
mov     eax, [ecx+0ch]
mov     [edx+0ch], eax
call    ebp
mov     esi, eax
test    esi, esi
jz      loc_4301df
lea     eax, [esp+80h+string]
push    eax
push    esi
call    sub_451d50
add     esp, 8
push    esi
push    ebx
call    ds:releasedc
mov     eax, [esp+80h+var_6c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     ecx, [esp+80h+var_70]
mov     eax, [ebp+0eh]
push    ecx
sub     eax, [ecx+4]
push    eax
mov     eax, [ebp+0ah]
sub     eax, [ecx]
push    eax
push    ebx
call    sub_431840
mov     eax, [esp+90h+var_6c]
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, [esp+80h+var_70]
mov     edx, [eax+8]
mov     ecx, [eax+0ch]
add     eax, 8
mov     eax, [ebp+1eh]
mov     [eax], edx
mov     [eax+4], ecx
mov     eax, [esp+80h+var_6c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, 2
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
push    2
push    ebx
call    sub_4110a0
add     esp, 8
mov     eax, [esp+80h+var_6c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, 3ah
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, [esp+arg_0]
sub     esp, 20h
cmp     eax, 0ah
push    esi
mov     esi, [esp+24h+arg_4]
jnz     loc_43030f
cmp     dword ptr [esi+12h], 4
jnz     loc_43030f
cmp     dword ptr [esi+1ah], 9
jnz     short loc_43030f
push    0ah
mov     eax, [esi+2]
push    eax
call    sub_411970
mov     [esp+2ch+var_8], eax
add     esp, 8
mov     eax, [esi+2]
push    4
push    eax
call    sub_411970
mov     [esp+2ch+var_10], eax
add     esp, 8
mov     eax, [esi+2]
push    9
push    eax
call    sub_411970
mov     [esp+2ch+var_18], eax
add     esp, 8
mov     eax, [esi+2]
push    4
push    eax
call    sub_411970
mov     [esp+2ch+var_20], eax
add     esp, 8
mov     eax, [esi+2]
push    eax
call    sub_411890
add     esp, 4
push    eax
mov     eax, [esp+28h+var_8]
sub     eax, [esp+28h+var_10]
push    eax
mov     eax, [esp+2ch+var_18]
sub     eax, [esp+2ch+var_20]
add     eax, 2
push    eax
push    esi
call    sub_430d50
add     esp, 10h
xor     eax, eax
pop     esi
add     esp, 20h
retn
push    esi
push    eax
call    sub_42fe50
add     esp, 8
pop     esi
add     esp, 20h
retn
sub     esp, 0c0h
xor     ecx, ecx
mov     cx, ds:word_4a8518
push    ebx
shl     ecx, 10h
push    esi
push    edi
mov     cl, 1
push    ebp
xor     edi, edi
lea     eax, [esp+0d0h+string]
push    80h
push    eax
push    2bh
push    ecx
call    sub_4319a0
lea     ecx, [esp+0e0h+string]
mov     esi, [esp+0e0h+hwnd]
add     esp, 10h
push    ecx
push    esi
call    ds:setwindowtexta
lea     eax, [esp+0d0h+rc]
push    eax
push    edi
push    2ch
push    8
push    esi
call    sub_430b90
lea     eax, [esp+0e4h+rc]
add     esp, 14h
push    eax
push    edi
push    2dh
push    9
push    esi
call    sub_430b90
lea     eax, [esp+0e4h+rc]
add     esp, 14h
push    eax
push    edi
push    2eh
push    1
push    esi
call    sub_430b90
mov     ebp, [esp+0e4h+rc.left]
lea     eax, [esp+0e4h+rc]
add     esp, 14h
push    eax
push    edi
push    2fh
push    5
push    esi
call    sub_430b90
add     esp, 14h
push    edi
push    ebp
push    5
push    esi
call    sub_430ae0
add     esp, 10h
add     ebp, [esp+0d0h+rc.left]
lea     eax, [esp+0d0h+rect]
push    eax
push    edi
push    3ah
push    6
push    esi
call    sub_430b90
lea     eax, [esp+0e4h+rc]
add     esp, 14h
push    eax
push    1
push    39h
push    6
push    esi
call    sub_430b90
add     esp, 14h
push    edi
push    ebp
push    6
push    esi
call    sub_430ae0
mov     eax, [esp+0e0h+rect.left]
add     esp, 10h
add     eax, [esp+0d0h+rc.left]
push    edi
add     ebp, eax
push    6
push    esi
call    sub_4118c0
lea     ecx, [esp+0dch+rc]
add     esp, 0ch
push    ecx
push    edi
push    30h
push    2
push    esi
call    sub_430b90
add     esp, 14h
push    edi
push    ebp
push    2
push    esi
call    sub_430ae0
add     ebp, [esp+0e0h+rc.left]
mov     ecx, [esp+0e0h+arg_c]
lea     eax, [esp+0e0h+var_c0]
add     esp, 10h
push    ecx
push    1
push    eax
push    esi
call    sub_4305e0
mov     dx, [esp+0e0h+arg_4]
lea     ecx, [esp+0e0h+rc]
mov     ebx, [esp+0e0h+arg_8]
add     esp, 10h
push    ecx
mov     eax, [ebx+4]
push    edx
push    eax
call    sub_431df0
add     esp, 0ch
test    eax, eax
jz      short loc_4304cf
mov     ecx, [esp+0d0h+arg_c]
lea     eax, [esp+0d0h+var_c0]
push    ecx
push    edi
push    eax
push    esi
call    sub_4305e0
mov     eax, [esp+0e0h+var_c0]
mov     ecx, [esp+0e0h+rc.right]
add     esp, 10h
cmp     eax, ecx
jg      short loc_430493
mov     eax, ecx
mov     ecx, [esp+0d0h+rc.bottom]
mov     [esp+0d0h+rc.right], eax
mov     eax, [esp+0d0h+var_bc]
cmp     eax, ecx
jg      short loc_4304a5
mov     eax, ecx
mov     [esp+0d0h+rc.bottom], eax
lea     eax, [esp+0d0h+rect]
push    eax
push    esi
call    sub_490920
mov     ebp, [esp+0d8h+rc.right]
mov     edi, [esp+0d8h+rc.bottom]
sub     ebp, [esp+0d8h+rect.right]
sub     edi, [esp+0d8h+rect.bottom]
add     ebp, [esp+0d8h+rect.left]
add     edi, [esp+0d8h+rect.top]
add     esp, 8
push    esi
call    sub_490980
mov     ecx, [esp+0d4h+arg_c]
add     esp, 4
add     eax, ebp
push    esi
mov     [ecx], eax
call    sub_490980
mov     ecx, [esp+0d4h+arg_c]
add     esp, 4
test    ebp, ebp
mov     [ecx+4], edx
jnz     short loc_4304fe
test    edi, edi
jz      short loc_430535
push    0
push    ebp
push    4
push    esi
call    sub_430b40
lea     eax, [esp+0e0h+rc]
add     esp, 10h
push    eax
push    esi
call    sub_490920
sub     edi, [esp+0d8h+rc.top]
sub     ebp, [esp+0d8h+rc.left]
add     edi, [esp+0d8h+rc.bottom]
add     ebp, [esp+0d8h+rc.right]
add     esp, 8
push    edi
push    ebp
push    esi
call    sub_490c50
add     esp, 0ch
mov     cx, [ebx+0ch]
lea     eax, [esp+0d0h+var_98]
push    eax
mov     edx, [ebx+8]
push    ecx
push    edx
call    sub_42ec80
add     esp, 0ch
test    eax, eax
jnz     short loc_4305b4
lea     eax, [esp+0d0h+var_98]
push    0
push    eax
call    sub_41aa60
lea     eax, [esp+0d8h+var_98]
add     esp, 8
push    eax
call    sub_442d80
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_4305a7
push    edi
push    3
push    esi
call    sub_411b20
add     esp, 0ch
cmp     byte ptr [edi], 0
jz      short loc_43059a
cmp     dword ptr [ebx+18h], 0
jz      short loc_43059a
mov     ecx, [esp+0d0h+arg_c]
push    ecx
push    ebx
push    esi
call    sub_4306a0
add     esp, 0ch
lea     eax, [esp+0d0h+var_98]
push    eax
call    sub_442e00
add     esp, 4
lea     eax, [esp+0d0h+var_98]
push    eax
call    sub_41b030
add     esp, 4
push    1
call    sub_449290
add     esp, 4
test    eax, eax
jz      short loc_4305d0
push    0
push    eax
push    30h
push    7
push    esi
call    ds:senddlgitemmessagea
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
sub     esp, 20h
lea     eax, [esp+20h+rect]
push    ebx
push    esi
push    edi
mov     edi, [esp+2ch+hwnd]
push    eax
push    edi
call    sub_490b60
lea     ecx, [esp+34h+rc]
add     esp, 8
push    ecx
push    3
push    edi
call    sub_4119b0
mov     eax, [esp+38h+rect.right]
mov     esi, [esp+38h+arg_4]
add     eax, [esp+38h+rect.left]
add     esp, 0ch
add     eax, [esp+2ch+rc.right]
push    edi
add     eax, [esp+30h+rc.left]
mov     [esi], eax
call    sub_430cc0
mov     ebx, [esp+30h+arg_c]
add     esp, 4
lea     eax, [eax+eax*2]
add     eax, [esp+2ch+rect.top]
add     eax, [esp+2ch+rect.bottom]
add     eax, 2
mov     [esi+4], eax
mov     ecx, [ebx+36h]
add     ecx, eax
cmp     [esp+2ch+arg_8], 0
mov     [esi+4], ecx
jz      short loc_43068c
lea     eax, [esp+2ch+rc]
mov     [ebx+0ch], ecx
push    eax
push    1
push    edi
call    sub_4119b0
mov     eax, [esp+38h+rc.left]
lea     ecx, [esp+38h+rc]
add     esp, 0ch
mov     [ebx+8], eax
push    ecx
push    2
push    edi
call    sub_4119b0
mov     ecx, [esp+38h+rect.right]
add     esp, 0ch
mov     eax, [ebx+8]
add     eax, [esp+2ch+rc.right]
add     ecx, eax
mov     [ebx+8], eax
add     ecx, [esp+2ch+rect.left]
mov     [ebx+8], ecx
mov     eax, [ebx+8]
mov     ecx, [esi]
cmp     eax, ecx
jg      short loc_430697
mov     eax, ecx
pop     edi
mov     [esi], eax
pop     esi
pop     ebx
add     esp, 20h
retn
sub     esp, 9ch
lea     eax, [esp+9ch+string]
push    ebx
mov     ecx, [esp+0a0h+hdlg]
push    esi
push    edi
push    ebp
push    80h
push    eax
push    3
push    ecx
call    sub_411b40
mov     ecx, [esp+0bch+hdlg]
add     esp, 10h
push    1
push    6
push    ecx
call    sub_4118c0
add     esp, 0ch
cmp     [esp+0ach+string], 0
jz      loc_4308e7
mov     eax, [esp+0ach+hdlg]
push    4
push    eax
call    sub_411ed0
mov     esi, [esp+0b4h+arg_8]
add     esp, 8
lea     eax, [esi+10h]
push    eax
call    sub_48e7d0
add     esp, 4
lea     eax, [esi+10h]
push    offset sub_430a80
push    16h
push    eax
call    sub_48e770
add     esp, 0ch
test    eax, eax
jz      loc_4308e7
xor     bx, bx
xor     ebp, ebp
mov     edi, [esp+0ach+arg_4]
movsx   eax, word ptr [edi+16h]
test    eax, eax
jz      short loc_430745
cmp     eax, 1
jz      short loc_43074b
cmp     eax, 2
jz      short loc_430751
jmp     short loc_430754
mov     bx, 2
jmp     short loc_430754
mov     bx, 1
jmp     short loc_430754
xor     bx, bx
cmp     word ptr [edi+14h], 0
jz      short loc_430769
mov     eax, [edi+4]
push    eax
call    sub_4549b0
add     esp, 4
mov     ebp, eax
mov     eax, [esp+0ach+hdlg]
push    offset windowname
push    7
push    eax
call    sub_411b20
mov     eax, [esp+0b8h+hdlg]
add     esp, 0ch
push    1
push    7
push    eax
call    sub_411940
mov     eax, [esp+0b8h+hdlg]
add     esp, 0ch
mov     dword ptr [esi+32h], 0ffffffffh
mov     dword ptr [esi+2eh], 0
push    1
mov     ecx, [edi+1ch]
push    eax
push    offset sub_430910
lea     edx, [esp+0b8h+string]
push    1
push    1
push    ecx
push    0
push    ebx
push    ebp
push    edx
call    sub_4324d0
add     esp, 28h
lea     ecx, [esi+10h]
mov     dword ptr [esi+2eh], 1
push    0
push    ecx
call    sub_48ecb0
add     esp, 8
lea     ecx, [esi+10h]
push    ecx
call    sub_48e830
mov     bx, ax
add     esp, 4
test    bx, bx
jle     loc_4308e7
mov     [esp+0ach+var_9c], 0
cmp     dword ptr [edi+1ch], 0
jnz     short loc_430851
mov     bp, 1
cmp     bx, bp
jl      short loc_430851
lea     eax, [esp+0ach+var_98]
lea     ecx, [esi+10h]
movsx   edi, bp
push    eax
push    edi
push    ecx
call    sub_48ea00
mov     ecx, [esp+0b8h+var_9c]
add     esp, 0ch
cmp     ecx, [esp+0ach+var_98]
jnz     short loc_430842
dec     bp
push    edi
lea     eax, [esi+10h]
push    eax
call    sub_48ea50
add     esp, 8
test    eax, eax
jz      short loc_430851
dec     bx
inc     bp
mov     eax, [esp+0ach+var_98]
cmp     bp, bx
mov     [esp+0ach+var_9c], eax
jle     short loc_43080e
mov     di, 1
push    0
mov     eax, [esp+0b0h+hdlg]
push    4
push    eax
call    sub_411f10
add     esp, 0ch
cmp     bx, di
jl      short loc_4308a6
lea     eax, [esp+0ach+var_98]
lea     edx, [esi+10h]
movsx   ecx, di
inc     di
push    eax
push    ecx
push    edx
call    sub_48ea00
mov     ecx, [esp+0b8h+var_98]
mov     edx, [esp+0b8h+hdlg]
add     esp, 0ch
push    ecx
push    offset windowname
push    4
push    edx
call    sub_411d20
add     esp, 10h
cmp     di, bx
jle     short loc_43086e
mov     eax, [esp+0ach+hdlg]
push    1
push    4
push    eax
call    sub_411f10
mov     eax, [esp+0b8h+hdlg]
add     esp, 0ch
push    1
push    4
push    eax
call    sub_411e70
mov     eax, [esp+0b8h+hdlg]
add     esp, 0ch
push    7fffh
push    0
push    3
push    eax
call    sub_411b60
add     esp, 10h
call    sub_433280
cmp     eax, 64h
jnz     short loc_430905
mov     eax, [esp+0ach+hdlg]
push    0
push    6
push    eax
call    sub_4118c0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 9ch
retn
sub     esp, 1ch
push    ebx
push    esi
mov     esi, [esp+24h+hwnd]
push    edi
push    ebp
call    sub_433280
mov     [esp+2ch+var_1c], eax
push    esi
call    sub_411890
mov     ebp, [esp+30h+arg_0]
mov     ebx, [esp+30h+src]
add     esp, 4
mov     edi, eax
test    ebp, ebp
jnz     short loc_430950
test    ebx, ebx
jnz     short loc_430950
test    esi, esi
jz      short loc_430950
push    0
push    6
push    esi
call    sub_4118c0
add     esp, 0ch
test    ebp, ebp
jz      loc_430a3c
test    ebx, ebx
jz      loc_430a3c
cmp     dword ptr [ebp+312h], 0
jz      short loc_430987
mov     eax, [ebx]
push    eax
call    sub_4549f0
add     esp, 4
mov     [ebx], eax
test    eax, eax
jnz     short loc_430987
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
cmp     dword ptr [edi+2eh], 0
jz      short loc_4309d3
cmp     dword ptr [ebp+316h], 0
jnz     short loc_4309d3
lea     eax, [edi+10h]
push    eax
call    sub_48e830
movsx   ebp, ax
add     esp, 4
test    ebp, ebp
jz      short loc_4309d3
mov     eax, ebp
lea     ecx, [esp+2ch+string]
dec     ebp
push    ecx
push    eax
lea     eax, [edi+10h]
push    eax
call    sub_48ea00
mov     ecx, dword ptr [esp+38h+string]
add     esp, 0ch
cmp     [ebx], ecx
jnz     short loc_4309a5
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
push    ebx
lea     eax, [edi+10h]
push    eax
call    sub_48e920
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_430a3c
push    ebx
call    sub_431f50
add     esp, 4
test    eax, eax
jz      short loc_430a2b
call    sub_433290
inc     eax
push    eax
call    sub_4332d0
add     esp, 4
cmp     dword ptr [edi+2eh], 0
jz      short loc_430a3c
push    0
lea     eax, [edi+10h]
push    eax
call    sub_48ecb0
add     esp, 8
mov     eax, [ebx]
push    eax
push    offset windowname
push    4
push    esi
call    sub_411d20
add     esp, 10h
jmp     short loc_430a3c
test    ebp, ebp
jz      short loc_430a3c
push    ebp
lea     eax, [edi+10h]
push    eax
call    sub_48ea50
add     esp, 8
mov     eax, [esp+2ch+var_1c]
cmp     [edi+32h], eax
jge     short loc_430a6d
lea     ecx, [esp+2ch+string]
push    eax
push    offset ad
mov     [edi+32h], eax
push    10h
push    ecx
call    sub_401800
lea     ecx, [esp+3ch+string]
add     esp, 10h
push    ecx
push    7
push    esi
call    sub_411b20
add     esp, 0ch
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
sub     esp, 338h
lea     eax, [esp+338h+string1]
push    esi
mov     esi, [esp+33ch+arg_0]
push    19ah
push    eax
mov     ecx, [esi]
push    ecx
call    sub_462d70
lea     eax, [esp+348h+string2]
add     esp, 0ch
mov     ecx, [esi]
push    19ah
push    eax
push    ecx
call    sub_462d70
lea     ecx, [esp+348h+string2]
lea     edx, [esp+348h+string1]
add     esp, 0ch
push    ecx
push    edx
call    ds:lstrcmpia
pop     esi
add     esp, 338h
retn
sub     esp, 10h
push    ebx
push    esi
mov     ebx, [esp+18h+arg_8]
push    edi
push    ebp
test    ebx, ebx
mov     ebp, [esp+20h+dy]
jnz     short loc_430af7
test    ebp, ebp
jz      short loc_430b2b
lea     eax, [esp+20h+rc]
mov     esi, [esp+20h+hdlg]
movsx   edi, [esp+20h+arg_4]
push    eax
push    edi
push    esi
call    sub_4119b0
lea     ecx, [esp+2ch+rc]
add     esp, 0ch
push    ebp
push    ebx
push    ecx
call    ds:offsetrect
lea     ecx, [esp+20h+rc]
push    ecx
push    edi
push    esi
call    sub_4119f0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_8]
push    edi
push    ebp
test    esi, esi
mov     ebp, [esp+20h+arg_c]
jnz     short loc_430b57
test    ebp, ebp
jz      short loc_430b86
lea     eax, [esp+20h+rc]
mov     edi, [esp+20h+hdlg]
movsx   ebx, [esp+20h+arg_4]
push    eax
push    ebx
push    edi
call    sub_4119b0
lea     ecx, [esp+2ch+rc]
add     [esp+2ch+rc.right], esi
add     [esp+2ch+rc.bottom], ebp
add     esp, 0ch
push    ecx
push    ebx
push    edi
call    sub_4119f0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 80h
push    ebx
push    esi
mov     esi, [esp+88h+lprc]
push    edi
mov     eax, [esp+8ch+hwnd]
push    ebp
movsx   edi, [esp+90h+arg_4]
push    esi
push    edi
push    eax
call    sub_4119b0
mov     cx, [esp+9ch+arg_8]
lea     eax, [esp+9ch+string]
add     esp, 0ch
push    80h
push    eax
push    ecx
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4319a0
lea     ecx, [esp+0a0h+string]
mov     edx, [esp+0a0h+hwnd]
add     esp, 10h
push    ecx
push    edi
push    edx
call    sub_411b20
mov     eax, [esp+9ch+hwnd]
add     esp, 0ch
mov     ebp, [esi+8]
push    eax
sub     ebp, [esi]
call    ds:getdc
mov     ebx, eax
test    ebx, ebx
jz      short loc_430c74
mov     eax, [esp+90h+hwnd]
push    0
push    0
mov     ebp, ds:senddlgitemmessagea
push    31h
push    edi
push    eax
xor     edi, edi
call    ebp
test    eax, eax
jz      short loc_430c3a
push    eax
push    ebx
call    ds:selectobject
mov     edi, eax
lea     eax, [esp+90h+string]
mov     ebp, ds:lstrlena
push    eax
call    ebp
lea     ecx, [esp+90h+string]
push    eax
push    ecx
push    ebx
call    sub_449d50
add     esp, 0ch
lea     ebp, [eax+10h]
test    edi, edi
jz      short loc_430c65
push    edi
push    ebx
call    ds:selectobject
mov     eax, [esp+90h+hwnd]
push    ebx
push    eax
call    ds:releasedc
mov     eax, [esi]
sub     eax, [esi+8]
cmp     [esp+90h+arg_c], 0
lea     edi, [eax+ebp]
jz      short loc_430c8c
test    edi, edi
jge     short loc_430c8e
xor     edi, edi
test    edi, edi
jz      short loc_430cab
mov     eax, dword ptr [esp+90h+arg_4]
push    0
mov     ecx, [esp+94h+hwnd]
push    edi
push    eax
push    ecx
call    sub_430b40
add     esp, 10h
pop     ebp
mov     [esi], edi
mov     dword ptr [esi+4], 0
pop     edi
pop     esi
pop     ebx
add     esp, 80h
retn
sub     esp, 68h
push    ebx
push    esi
mov     ebx, [esp+70h+hwnd]
push    edi
push    ebp
push    ebx
call    ds:getdc
mov     ebp, eax
test    ebp, ebp
jnz     short loc_430ce5
mov     eax, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 68h
retn
lea     eax, [esp+78h+var_1c]
push    1
push    ebp
push    eax
call    sub_4492b0
lea     edi, [esp+84h+var_38]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+78h+var_38]
lea     edi, [esp+78h+var_54]
mov     ecx, 7
rep movsd
lea     eax, [esp+78h+var_68]
push    eax
push    ebp
call    sub_449770
lea     eax, [esp+80h+var_54]
lea     ecx, [esp+80h+var_1c]
add     esp, 8
push    eax
push    ebp
push    ecx
call    sub_449700
add     esp, 0ch
push    ebp
push    ebx
call    ds:releasedc
mov     eax, [esp+78h+var_58]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 68h
retn
mov     eax, [esp+arg_0]
sub     esp, 21ch
push    ebx
push    esi
push    edi
mov     ebx, [eax+1eh]
mov     cx, [ebx]
push    ebp
mov     word ptr [esp+22ch+hmem], cx
mov     esi, [esp+22ch+arg_c]
add     esi, 10h
push    esi
call    sub_48e820
add     esp, 4
test    eax, eax
jz      loc_431091
cmp     word ptr [esp+22ch+hmem], 0
jle     loc_431091
push    esi
call    sub_48e830
add     esp, 4
cmp     ax, word ptr [esp+22ch+hmem]
jl      loc_431091
movsx   ecx, word ptr [esp+22ch+hmem]
lea     eax, [esp+22ch+var_208]
push    eax
push    ecx
push    esi
call    sub_48ea00
add     esp, 0ch
test    eax, eax
jz      loc_431091
mov     eax, [ebx+0ch]
mov     ebp, ds:getbkcolor
push    eax
call    ebp
mov     ecx, [ebx+0ch]
mov     [esp+22ch+color], eax
push    ecx
call    ds:gettextcolor
cmp     dword ptr [ebx+8], 0
mov     [esp+22ch+var_210], eax
jz      short loc_430e08
push    0dh
mov     esi, ds:getsyscolor
call    esi
push    eax
mov     eax, [ebx+0ch]
push    eax
call    ds:setbkcolor
push    0eh
call    esi
push    eax
mov     eax, [ebx+0ch]
push    eax
call    ds:settextcolor
push    1
mov     eax, [ebx+0ch]
lea     ecx, [esp+230h+var_1b8]
push    eax
push    ecx
call    sub_4492b0
lea     edi, [esp+238h+var_1d4]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+22ch+var_1d4]
lea     edi, [esp+22ch+var_1f0]
mov     ecx, 7
push    0
rep movsd
push    0
lea     ecx, [ebx+10h]
push    offset windowname
mov     edx, [ebx+0ch]
push    ecx
push    2
push    0
push    0
push    edx
call    ds:exttextouta
lea     ecx, [esp+22ch+string]
push    19ah
mov     edx, [esp+230h+var_208]
push    ecx
push    edx
call    sub_462d70
lea     ecx, [esp+238h+string]
add     esp, 0ch
push    ecx
call    sub_45b740
mov     ebp, [esp+230h+arg_8]
mov     eax, [esp+230h+arg_4]
lea     edx, [esp+230h+string]
add     esp, 4
lea     ecx, [ebp-8]
push    ecx
push    eax
push    edx
call    ds:lstrlena
lea     ecx, [esp+234h+string]
push    eax
push    ecx
push    ebx
call    sub_431210
add     esp, 14h
test    ebp, ebp
jz      loc_43105d
cmp     [esp+22ch+var_1f6], 4
jz      loc_43105d
lea     eax, [esp+22ch+var_21c+2]
mov     ecx, [esp+22ch+hmem]
push    eax
push    100h
push    ecx
push    ecx
call    sub_432bd0
mov     [esp+23ch+hmem], eax
add     esp, 10h
test    eax, eax
jz      loc_43105d
push    eax
call    ds:globallock
mov     [esp+22ch+lpstring], eax
test    eax, eax
jz      loc_431050
mov     eax, [esp+22ch+var_1fa]
sub     ax, [esp+22ch+var_1fe]
inc     ax
mov     [esp+22ch+var_21c], ax
mov     eax, [ebx+18h]
sub     eax, ebp
mov     ecx, [ebx+0ch]
sub     eax, 14h
lea     edx, [esp+22ch+var_21c]
push    eax
push    ecx
lea     eax, [esp+234h+var_21c+2]
push    edx
lea     ecx, [esp+238h+lpstring]
push    eax
push    ecx
call    sub_4310a0
add     esp, 14h
cmp     [esp+22ch+var_21c+2], 0
jz      short loc_430f5b
mov     eax, dword ptr [esp+22ch+var_21c+2]
push    7fffh
mov     ecx, [esp+230h+lpstring]
push    ebp
push    eax
push    ecx
push    ebx
call    sub_431210
add     esp, 14h
add     ebp, eax
movsx   ecx, [esp+22ch+var_21c+2]
add     [esp+22ch+lpstring], ecx
lea     eax, [esp+22ch+var_1f0]
mov     ecx, [ebx+0ch]
lea     edx, [esp+22ch+var_1b8]
push    eax
push    ecx
push    edx
call    sub_449700
lea     edx, [esp+238h+var_1b8]
add     esp, 0ch
mov     ecx, [ebx+0ch]
push    2
push    ecx
push    edx
call    sub_4492b0
lea     edi, [esp+238h+var_1d4]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+22ch+var_1d4]
lea     edi, [esp+22ch+var_1f0]
mov     ecx, 7
push    7fffh
rep movsd
mov     ecx, dword ptr [esp+230h+var_21c]
push    ebp
mov     edx, [esp+234h+lpstring]
push    ecx
push    edx
push    ebx
call    sub_431210
mov     ecx, [esp+240h+lpstring]
add     esp, 14h
add     ebp, eax
push    ecx
call    ds:lstrlena
movsx   ecx, [esp+22ch+var_21c]
cmp     eax, ecx
jle     short loc_431043
movsx   eax, [esp+22ch+var_21c]
lea     ecx, [esp+22ch+var_1f0]
add     [esp+22ch+lpstring], eax
push    ecx
mov     edx, [ebx+0ch]
lea     eax, [esp+230h+var_1b8]
push    edx
push    eax
call    sub_449700
lea     edx, [esp+238h+var_1b8]
add     esp, 0ch
mov     ecx, [ebx+0ch]
push    1
push    ecx
push    edx
call    sub_4492b0
lea     edi, [esp+238h+var_1d4]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+22ch+var_1d4]
lea     edi, [esp+22ch+var_1f0]
mov     ecx, 7
push    7fffh
rep movsd
mov     ecx, [esp+230h+lpstring]
push    ebp
push    ecx
call    ds:lstrlena
mov     ecx, [esp+234h+lpstring]
push    eax
push    ecx
push    ebx
call    sub_431210
add     esp, 14h
mov     eax, [esp+22ch+hmem]
mov     ebp, ds:globalunlock
push    eax
call    ebp
mov     eax, [esp+22ch+hmem]
push    eax
call    sub_45ba00
add     esp, 4
lea     eax, [esp+22ch+var_1f0]
mov     ecx, [ebx+0ch]
lea     edx, [esp+22ch+var_1b8]
push    eax
push    ecx
push    edx
call    sub_449700
mov     ecx, [esp+238h+color]
add     esp, 0ch
mov     edx, [ebx+0ch]
push    ecx
push    edx
call    ds:setbkcolor
mov     ecx, [esp+22ch+var_210]
mov     edx, [ebx+0ch]
push    ecx
push    edx
call    ds:settextcolor
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 21ch
retn
mov     eax, [esp+arg_0]
sub     esp, 8
push    ebx
push    esi
push    edi
mov     esi, [eax]
push    ebp
push    esi
call    ds:lstrlena
mov     [esp+18h+var_4], ax
mov     ecx, [esp+18h+arg_4]
movsx   eax, ax
mov     di, [ecx]
lea     ebx, [eax+esi]
mov     ax, [esp+18h+var_4]
mov     ecx, [esp+18h+arg_8]
sub     ax, [ecx]
sub     ax, di
mov     [esp+18h+var_6], ax
test    di, di
jle     short loc_431111
mov     ebp, esi
push    esi
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_4310fb
push    esi
call    sub_45b810
add     esp, 4
test    eax, eax
jz      short loc_431107
movsx   eax, di
add     eax, ebp
cmp     eax, esi
jbe     short loc_431107
inc     esi
jmp     short loc_4310e1
sub     ebp, esi
add     di, bp
add     [esp+18h+var_4], bp
cmp     esi, ebx
jnb     loc_4311d6
mov     eax, dword ptr [esp+18h+var_4]
mov     ecx, [esp+18h+hdc]
push    eax
push    esi
push    ecx
call    sub_449d50
add     esp, 0ch
cmp     eax, [esp+18h+arg_10]
jle     loc_4311d6
mov     ax, [esp+18h+var_6]
mov     ebp, ebx
add     ax, di
mov     [esp+18h+var_4+2], ax
mov     eax, ebx
sub     eax, esi
cmp     eax, 1
jle     short loc_431151
dec     ebx
jmp     short loc_431153
mov     ebx, esi
push    ebx
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_43116d
push    ebx
call    sub_45b810
add     esp, 4
test    eax, eax
jz      short loc_43117c
cmp     esi, ebx
jnb     short loc_43117c
mov     eax, ebx
sub     eax, esi
cmp     eax, 1
jle     short loc_431151
jmp     short loc_43114e
mov     eax, ebx
sub     eax, ebp
add     [esp+18h+var_6], ax
cmp     [esp+18h+var_6], di
jge     short loc_4311bc
test    di, di
jle     short loc_4311bc
mov     ebp, esi
inc     esi
push    esi
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_4311ae
push    esi
call    sub_45b810
add     esp, 4
test    eax, eax
jz      short loc_4311b7
movsx   eax, di
add     eax, ebp
cmp     eax, esi
ja      short loc_431193
sub     ebp, esi
add     di, bp
mov     ax, [esp+18h+var_6]
sub     ax, [esp+18h+var_4+2]
add     ax, di
add     [esp+18h+var_4], ax
cmp     esi, ebx
jb      loc_431119
mov     ecx, [esp+18h+arg_0]
mov     edx, [esp+18h+arg_4]
movsx   eax, [esp+18h+var_4]
mov     byte ptr [eax+esi], 0
mov     [ecx], esi
cmp     [esp+18h+var_6], 0
mov     [edx], di
jge     short loc_431200
mov     ax, [esp+18h+var_6]
mov     ecx, [esp+18h+arg_8]
add     [ecx], ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 34h
lea     edx, [esp+34h+var_34]
push    ebx
push    esi
push    edi
mov     esi, [esp+40h+arg_0]
push    ebp
mov     ebx, [esi+14h]
mov     ebp, [esi+18h]
lea     ecx, [esi+10h]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+0ch]
mov     ecx, [ecx]
mov     [edx+4], ebx
mov     ebx, [esp+44h+arg_c]
mov     [edx+8], ebp
add     ebx, ecx
mov     [edx+0ch], eax
mov     ebp, [esp+44h+top]
cmp     ebx, 7fffh
jl      short loc_431251
mov     ebx, 7fffh
mov     eax, [esp+44h+arg_10]
test    eax, eax
jle     short loc_43126b
add     eax, ecx
cmp     eax, 7fffh
jl      short loc_431267
mov     eax, 7fffh
mov     [esp+44h+right], eax
lea     edx, [esp+44h+var_34]
lea     ecx, [esp+44h+rect]
mov     [esp+44h+var_34], ebx
mov     [esp+44h+top], ebp
mov     eax, [edx]
mov     edi, [edx+4]
mov     [ecx], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [ecx+4], edi
mov     edi, [esp+44h+lpstring]
mov     [ecx+8], eax
mov     eax, [esi+0ch]
mov     [ecx+0ch], edx
mov     ecx, dword ptr [esp+44h+arg_8]
push    ecx
push    edi
push    eax
call    sub_449d50
add     esp, 0ch
lea     ecx, [ebx+eax]
mov     eax, [esp+44h+right]
cmp     ecx, eax
jl      short loc_4312b4
mov     ecx, eax
lea     eax, [esp+44h+rect]
push    0
mov     [esp+48h+rect.right], ecx
push    0
push    offset windowname
mov     ecx, [esi+0ch]
push    eax
push    2
push    0
push    0
push    ecx
call    ds:exttextouta
mov     ecx, [esi+0ch]
push    ecx
call    ds:savedc
mov     ecx, [esp+44h+bottom]
mov     edx, [esp+44h+right]
mov     [esp+44h+rect.left], eax
push    ecx
push    edx
mov     eax, [esi+0ch]
push    ebp
push    ebx
push    eax
call    ds:intersectcliprect
lea     ecx, [esp+44h+var_14]
mov     edx, [esi+0ch]
push    ecx
push    edx
call    sub_449770
mov     eax, [esp+4ch+bottom]
add     esp, 8
sub     eax, ebp
sub     eax, [esp+44h+var_4]
cdq
sub     eax, edx
sar     eax, 1
add     ebp, eax
mov     eax, dword ptr [esp+44h+arg_8]
add     ebp, [esp+44h+var_14]
push    eax
push    edi
mov     ecx, [esi+0ch]
push    ebp
push    ebx
push    ecx
call    sub_449d20
mov     ecx, [esp+58h+rect.left]
add     esp, 14h
mov     edx, [esi+0ch]
push    ecx
push    edx
call    ds:restoredc
mov     ecx, dword ptr [esp+44h+arg_8]
mov     edx, [esi+0ch]
push    ecx
push    edi
push    edx
call    sub_449d50
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn
sub     esp, 24h
lea     eax, [esp+24h+rect]
push    ebx
push    esi
push    edi
mov     esi, [esp+30h+hwnd]
push    eax
push    esi
call    sub_490b60
mov     eax, [esp+38h+rect.top]
mov     edi, [esp+38h+arg_4]
add     ax, word ptr [esp+38h+rect.bottom]
add     esp, 8
mov     [edi], ax
push    esi
call    ds:getdc
mov     ebx, eax
test    ebx, ebx
jz      short loc_4313b6
lea     eax, [esp+30h+var_14]
push    eax
push    ebx
call    sub_449770
mov     eax, [esp+38h+var_4]
add     esp, 8
imul    ax, 3
add     [edi], ax
push    ebx
push    esi
call    ds:releasedc
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+arg_0]
push    edi
mov     edi, [esp+2ch+arg_4]
push    ebp
test    esi, esi
mov     ebx, [edi+2]
mov     ebp, [edi+6]
jz      short loc_4313de
cmp     esi, 9
jnz     short loc_4313e8
push    esi
push    edi
call    sub_431730
add     esp, 8
lea     ecx, [esi-5]
cmp     ecx, 15h
ja      def_4313fc
xor     eax, eax
mov     al, ds:byte_431594[ecx]
jmp     ds:jpt_4313fc[eax*4]
push    1
push    3
push    ebx
call    sub_4315d0
mov     cx, [edi]
lea     eax, [esp+3ch+rect]
add     esp, 0ch
push    eax
push    ecx
push    ebp
call    sub_431df0
add     esp, 0ch
test    eax, eax
jz      short loc_4314a5
lea     eax, [esp+30h+rc]
push    eax
push    ebx
lea     esi, [edi+0eh]
call    sub_431360
mov     eax, [esp+38h+rect.right]
add     esp, 8
mov     [edi+0ah], eax
movsx   eax, word ptr [esp+30h+rc.left]
cmp     [esp+30h+rect.bottom], eax
jl      short loc_43144d
mov     eax, [esp+30h+rect.bottom]
mov     [esi], eax
lea     eax, [esp+30h+rect]
push    eax
push    ebx
call    sub_490b60
mov     eax, [esp+38h+rect.right]
add     eax, [esp+38h+rect.left]
add     esp, 8
sub     [edi+0ah], eax
mov     eax, [esp+30h+rect.top]
add     eax, [esp+30h+rect.bottom]
sub     [esi], eax
cmp     dword ptr [edi+0ah], 0
jnz     loc_4314fc
cmp     dword ptr [edi+0eh], 0
jnz     short loc_4314fc
mov     esi, [edi+1eh]
lea     eax, [esp+30h+rc]
push    eax
push    ebx
call    sub_431360
movsx   eax, word ptr [esp+38h+rc.left]
add     esp, 8
mov     [esi+4], eax
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
push    ebx
call    sub_490980
mov     [esp+34h+rc.left], eax
add     esp, 4
lea     eax, [edi+0ah]
mov     ecx, [esp+30h+rc.left]
mov     [eax], ecx
mov     [eax+4], edx
jmp     short loc_431472
cmp     dword ptr [edi+12h], 3
jnz     short def_4313fc
cmp     dword ptr [edi+1ah], 3
jnz     short def_4313fc
push    1
push    0
push    3
push    ebx
call    sub_4317b0
add     esp, 10h
push    0
push    edi
push    esi
call    sub_411300
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, 2
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
lea     eax, [esp+30h+rc]
push    eax
push    3
push    ebx
call    sub_4119b0
add     esp, 0ch
mov     eax, [edi+0ah]
inc     eax
lea     ecx, [esp+30h+rc]
mov     [esp+30h+rc.right], eax
push    ecx
mov     eax, [edi+0eh]
push    3
inc     eax
push    ebx
mov     [esp+3ch+rc.bottom], eax
call    sub_4119f0
lea     ecx, [esp+3ch+rc]
add     esp, 0ch
push    ecx
push    3
push    ebx
call    sub_4119b0
lea     ecx, [esp+3ch+rect]
add     esp, 0ch
push    ecx
push    ebx
call    sub_490b60
mov     eax, [esp+38h+rc.bottom]
add     eax, [esp+38h+rect.top]
add     eax, [esp+38h+rect.bottom]
add     esp, 8
dec     eax
push    eax
mov     eax, [edi+0ah]
add     eax, [esp+34h+rect.right]
add     eax, [esp+34h+rect.left]
push    eax
push    ebx
call    sub_490c50
add     esp, 0ch
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+hwnd]
push    0
push    3
push    eax
call    sub_4315d0
add     esp, 0ch
retn
sub     esp, 1bch
cmp     [esp+1bch+arg_8], 0
push    ebx
push    esi
push    edi
push    ebp
jz      loc_431668
lea     eax, [esp+1cch+rc]
mov     esi, [esp+1cch+hwnd]
push    eax
push    3
push    esi
call    sub_4119b0
lea     ecx, [esp+1d8h+rect]
add     esp, 0ch
push    ecx
push    esi
call    sub_490b60
mov     eax, [esp+1d4h+rect.top]
sub     eax, [esp+1d4h+rc.top]
add     eax, [esp+1d4h+rect.bottom]
add     eax, [esp+1d4h+rc.bottom]
add     esp, 8
push    eax
mov     eax, [esp+1d0h+rect.right]
sub     eax, [esp+1d0h+rc.left]
add     eax, [esp+1d0h+rect.left]
add     eax, [esp+1d0h+rc.right]
push    eax
push    esi
call    sub_490c50
lea     ecx, [esp+1d8h+string]
add     esp, 0ch
xor     eax, eax
push    80h
mov     ax, ds:word_4a8518
push    ecx
shl     eax, 10h
push    2ah
mov     al, 1
push    eax
call    sub_4319a0
lea     ecx, [esp+1dch+string]
add     esp, 10h
push    ecx
push    esi
call    ds:setwindowtexta
jmp     short loc_43166f
mov     esi, [esp+1cch+hwnd]
push    4050002h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
movzx   ecx, ax
mov     [esp+1d4h+rect.left], ecx
add     esp, 8
test    ecx, ecx
jnz     short loc_43169d
mov     [esp+1cch+rect.left], 0ffffffffh
movsx   ebx, [esp+1cch+arg_4]
push    ebx
push    esi
call    sub_411ed0
add     esp, 8
mov     edi, 1
push    0
push    ebx
push    esi
call    sub_411f10
add     esp, 0ch
cmp     [esp+1cch+rect.left], edi
jb      short loc_43170c
push    edi
call    sub_42f460
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_43170c
lea     eax, [esp+1cch+string]
push    19ah
push    eax
inc     edi
push    ebp
call    sub_462d70
lea     eax, [esp+1d8h+string]
add     esp, 0ch
push    eax
call    sub_45b740
lea     eax, [esp+1d0h+string]
add     esp, 4
push    ebp
push    eax
push    ebx
push    esi
call    sub_411d20
add     esp, 10h
cmp     [esp+1cch+rect.left], edi
jnb     short loc_4316c6
push    1
push    ebx
push    esi
call    sub_411f10
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1bch
retn
mov     eax, [esp+arg_4]
sub     esp, 10h
cmp     eax, 9
push    esi
mov     esi, [esp+14h+arg_0]
push    edi
mov     edi, [esi+6]
jnz     short loc_43177e
lea     eax, [esp+18h+rect]
mov     ecx, [esi+2]
push    eax
push    ecx
call    sub_412af0
mov     ecx, [esp+20h+rect.left]
mov     edx, [esp+20h+rect.top]
lea     eax, [esp+20h+rect]
sub     [esp+20h+rect.right], ecx
mov     cx, [esi]
sub     [esp+20h+rect.bottom], edx
add     esp, 8
push    eax
push    ecx
push    edi
call    sub_431ed0
add     esp, 0ch
pop     edi
pop     esi
add     esp, 10h
retn
test    eax, eax
jnz     short loc_4317a6
mov     cx, [esi]
lea     eax, [esp+18h+rect]
push    eax
push    ecx
push    edi
call    sub_431df0
add     esp, 0ch
test    eax, eax
jz      short loc_4317a6
mov     eax, [esp+18h+rect.left]
mov     ecx, [esp+18h+rect.top]
mov     [esi+0ah], eax
mov     [esi+0eh], ecx
pop     edi
pop     esi
add     esp, 10h
retn
push    esi
push    edi
movsx   edi, [esp+8+arg_4]
mov     esi, [esp+8+hdlg]
push    edi
push    esi
call    sub_411de0
add     esp, 8
test    ax, ax
jz      short loc_431833
movsx   eax, ax
push    eax
push    edi
push    esi
call    sub_411d90
add     esp, 0ch
mov     edi, eax
push    edi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_431833
mov     eax, ds:frequency
push    eax
call    sub_490d80
mov     eax, [esp+0ch+arg_c]
mov     ecx, [esp+0ch+arg_8]
add     esp, 4
push    eax
push    ecx
push    edi
call    sub_431d20
add     esp, 0ch
xor     eax, eax
mov     ax, ds:word_4a8518
push    2020204h
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_431833
push    1
push    esi
call    sub_4110a0
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 30h
push    ebx
push    esi
mov     ebx, [esp+38h+arg_4]
push    edi
push    ebp
test    ebx, ebx
mov     ebp, [esp+40h+arg_8]
jnz     short loc_43185b
test    ebp, ebp
jz      loc_431998
mov     esi, [esp+40h+arg_c]
lea     eax, [esp+40h+var_30]
mov     edi, [esp+40h+hwnd]
push    esi
push    0
push    eax
push    edi
call    sub_4305e0
lea     ecx, [esp+50h+rect]
add     esp, 10h
push    ecx
push    edi
call    sub_490920
mov     eax, [esp+48h+rect.right]
sub     eax, [esp+48h+rect.left]
add     esp, 8
cmp     eax, [esp+40h+var_30]
jg      short loc_43189e
mov     eax, [esp+40h+var_30]
sub     eax, [esp+40h+rect.right]
add     eax, [esp+40h+rect.left]
add     ebx, eax
mov     eax, [esp+40h+rect.bottom]
sub     eax, [esp+40h+rect.top]
cmp     eax, [esp+40h+var_2c]
jg      short loc_4318ba
mov     eax, [esp+40h+var_2c]
sub     eax, [esp+40h+rect.bottom]
add     eax, [esp+40h+rect.top]
add     ebp, eax
test    ebx, ebx
jnz     short loc_4318c6
test    ebp, ebp
jz      loc_43194f
lea     eax, [esp+40h+rect]
push    eax
push    4
push    edi
call    sub_4119b0
add     esp, 0ch
push    ebp
push    ebx
push    4
push    edi
call    sub_430b40
lea     eax, [esp+50h+rc]
add     esp, 10h
push    eax
push    4
push    edi
call    sub_4119b0
mov     ebx, [esp+4ch+rc.right]
mov     ebp, [esp+4ch+rc.bottom]
sub     ebx, [esp+4ch+rc.left]
sub     ebp, [esp+4ch+rc.top]
sub     ebx, [esp+4ch+rect.right]
sub     ebp, [esp+4ch+rect.bottom]
add     ebx, [esp+4ch+rect.left]
add     ebp, [esp+4ch+rect.top]
add     esp, 0ch
test    ebp, ebp
jz      short loc_43194f
push    ebp
push    0
push    1
push    edi
call    sub_430ae0
add     esp, 10h
push    ebp
push    0
push    2
push    edi
call    sub_430ae0
add     esp, 10h
push    ebp
push    0
push    6
push    edi
call    sub_430ae0
add     esp, 10h
push    ebp
push    0
push    5
push    edi
call    sub_430ae0
add     esp, 10h
lea     eax, [esp+40h+rc]
push    eax
push    edi
call    sub_490b60
add     esp, 8
mov     eax, [esi+4]
add     eax, [esp+40h+rc.top]
add     eax, [esp+40h+rc.bottom]
add     eax, ebp
push    eax
mov     eax, [esi]
add     eax, [esp+44h+rc.right]
add     eax, [esp+44h+rc.left]
add     eax, ebx
push    eax
push    edi
call    sub_490c50
add     esp, 0ch
push    edi
call    sub_490980
add     esp, 4
mov     [esi], eax
push    edi
call    sub_490980
add     esp, 4
mov     [esi+4], edx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
sub     esp, 4
push    ebx
push    esi
mov     si, [esp+0ch+arg_4]
push    edi
mov     ebx, [esp+10h+arg_0]
push    ebp
push    esi
push    ebx
call    sub_4612e0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jnz     short loc_431a37
movsx   eax, si
sub     eax, 2ah
cmp     eax, 10h
ja      short def_4319d3
xor     ecx, ecx
mov     cl, ds:byte_431afc[eax]
jmp     ds:jpt_4319d3[ecx*4]
xor     ax, ax
jmp     short loc_431a1a
mov     ax, 1
jmp     short loc_431a1a
mov     ax, 2
jmp     short loc_431a1a
mov     ax, 3
jmp     short loc_431a1a
mov     ax, 4
jmp     short loc_431a1a
mov     ax, 5
jmp     short loc_431a1a
mov     ax, 6
jmp     short loc_431a1a
mov     ax, 7
jmp     short loc_431a1a
mov     ax, 8
jmp     short loc_431a1a
mov     ax, 9
jmp     short loc_431a1a
mov     ax, [esp+14h+var_2]
mov     ecx, [esp+14h+lpbuffer]
push    eax
mov     eax, [esp+18h+cchbuffermax]
push    1bfch
push    eax
push    ecx
call    sub_47fe70
add     esp, 10h
jmp     loc_431abf
mov     eax, ebx
shr     eax, 10h
movsx   ecx, ax
shl     ecx, 6
mov     eax, dword_4ae1e0
mov     edx, [ecx+eax+4]
xor     eax, eax
mov     al, bh
mov     ecx, [edx]
mov     eax, [ecx+eax*4]
test    eax, eax
jz      short loc_431a65
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_431a6e
push    ebx
call    sub_461250
add     esp, 4
push    esi
push    eax
call    sub_45c870
add     esp, 8
movzx   ebx, ax
push    ebp
call    ds:globallock
mov     esi, eax
test    esi, esi
jz      short loc_431aa8
cmp     ebx, [esp+14h+cchbuffermax]
jg      short loc_431aa8
mov     eax, [esp+14h+lpbuffer]
mov     ecx, ebx
shr     ecx, 2
mov     edi, eax
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
mov     byte ptr [eax+ebx], 0
jmp     short loc_431aaf
mov     eax, [esp+14h+lpbuffer]
mov     byte ptr [eax], 0
push    ebp
call    ds:globalunlock
push    ebp
call    sub_45ba00
add     esp, 4
cmp     ebp, 1
pop     ebp
sbb     eax, eax
pop     edi
inc     eax
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 20h
mov     ecx, [eax+4]
cmp     dword ptr [eax], 0
jnz     short loc_431b3e
lea     eax, [esp+20h+var_20]
push    eax
push    ecx
call    sub_454a90
add     esp, 8
test    eax, eax
jz      short loc_431b3e
lea     eax, [esp+20h+var_20]
push    eax
call    sub_431b50
add     esp, 4
xor     eax, eax
add     esp, 20h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     eax, [esi+4]
xor     ebx, ebx
push    eax
call    sub_4549b0
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_431b79
push    ebp
call    sub_426a80
add     esp, 4
mov     ebx, eax
call    sub_432100
movsx   eax, word ptr [esi+0eh]
cmp     eax, 9
ja      def_431b8b
jmp     ds:jpt_431b8b[eax*4]
mov     edi, [esi]
jmp     def_431b8b
test    ebx, ebx
jz      short loc_431bbe
push    ebx
call    sub_461c50
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     def_431b8b
push    ebp
call    sub_461cc0
add     esp, 4
jmp     loc_431ca7
push    ebp
call    sub_461cc0
add     esp, 4
jmp     loc_431ca7
test    ebx, ebx
jz      def_431b8b
push    ebx
call    sub_461fe0
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     def_431b8b
push    ebp
call    sub_461ec0
add     esp, 4
jmp     loc_431ca7
test    ebp, ebp
jz      def_431b8b
push    ebp
call    sub_461cc0
add     esp, 4
jmp     loc_431ca7
test    ebp, ebp
jz      def_431b8b
push    ebp
call    sub_461ec0
add     esp, 4
jmp     loc_431ca7
test    ebp, ebp
jz      short loc_431c38
push    ebp
call    sub_4359a0
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
call    sub_42f4a0
jmp     short loc_431ca7
push    66h
call    sub_490830
add     esp, 4
test    eax, eax
jz      short loc_431c67
push    eax
call    sub_490cb0
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    0
mov     eax, [esi+4]
push    eax
push    66h
call    sub_410f60
add     esp, 0ch
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_42fd80
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ax, [esi+0ch]
push    0
push    eax
mov     ecx, [esi+8]
push    ecx
call    sub_42edc0
add     esp, 0ch
mov     edi, eax
push    edi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_431ce6
push    edi
call    sub_4635f0
add     esp, 4
test    eax, eax
jz      short loc_431ce6
mov     ax, [esi+0eh]
mov     ecx, [esi+10h]
sub     ax, 6
cmp     ax, 1
sbb     eax, eax
neg     eax
push    eax
push    ecx
push    edi
call    sub_431d20
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_461f70
add     esp, 4
cmp     [esp+4+arg_4], 0
jz      short loc_431d60
push    eax
mov     eax, ds:dword_4a68c0
push    eax
call    sub_463480
add     esp, 8
test    eax, eax
jnz     short loc_431d60
push    esi
call    sub_436620
add     esp, 4
test    eax, eax
jnz     short loc_431d60
push    esi
call    sub_435930
add     esp, 4
pop     esi
retn
cmp     [esp+4+arg_8], 0
mov     cx, 3
jz      short loc_431d6f
mov     cx, 0bh
push    ecx
push    esi
call    sub_435870
add     esp, 8
mov     eax, 1
pop     esi
retn
push    esi
xor     eax, eax
mov     ax, [esp+4+arg_4]
mov     ecx, [esp+4+arg_0]
and     eax, 8
push    eax
push    ecx
call    sub_42f3b0
add     esp, 8
mov     esi, eax
push    0
push    14h
call    sub_441c60
add     esp, 8
push    79a4h
push    11h
call    sub_441c60
add     esp, 8
push    79a5h
push    11h
call    sub_441c60
add     esp, 8
test    esi, esi
jz      short loc_431de0
push    66h
call    sub_490830
add     esp, 4
test    eax, eax
jz      short loc_431de0
push    eax
call    sub_4315b0
add     esp, 4
pop     esi
retn
movsx   eax, [esp+arg_4]
push    esi
cmp     eax, 64h
push    edi
jz      short loc_431e0b
cmp     eax, 65h
jz      short loc_431e33
cmp     eax, 66h
jz      short loc_431e5b
xor     eax, eax
pop     edi
pop     esi
retn
mov     esi, [esp+8+arg_8]
mov     eax, ds:dword_4a6800
mov     ecx, offset dword_4a6800
mov     [esi], eax
mov     edx, [ecx+4]
mov     [esi+4], edx
mov     edi, [ecx+8]
mov     [esi+8], edi
mov     eax, [ecx+0ch]
mov     [esi+0ch], eax
mov     ax, 32h
jmp     short loc_431e81
mov     esi, [esp+8+arg_8]
mov     eax, ds:dword_4a6810
mov     ecx, offset dword_4a6810
mov     [esi], eax
mov     edx, [ecx+4]
mov     [esi+4], edx
mov     edi, [ecx+8]
mov     [esi+8], edi
mov     eax, [ecx+0ch]
mov     [esi+0ch], eax
mov     ax, 33h
jmp     short loc_431e81
mov     esi, [esp+8+arg_8]
mov     eax, ds:dword_4a6820
mov     ecx, offset dword_4a6820
mov     [esi], eax
mov     edx, [ecx+4]
mov     [esi+4], edx
mov     edi, [ecx+8]
mov     [esi+8], edi
mov     eax, [ecx+0ch]
mov     [esi+0ch], eax
mov     ax, 34h
cmp     dword ptr [esi+0ch], 0
jz      short loc_431e8d
cmp     dword ptr [esi+8], 0
jnz     short loc_431ec0
mov     ecx, [esp+8+arg_0]
xor     edi, edi
shr     ecx, 10h
push    edi
movzx   ecx, cx
shl     ecx, 10h
push    1
mov     cl, 1
push    esi
push    eax
push    ecx
call    sub_491c10
add     esp, 14h
test    eax, eax
jnz     short loc_431ec0
xor     eax, eax
mov     [esi], edi
mov     [esi+4], edi
mov     [esi+8], edi
mov     [esi+0ch], edi
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
movsx   eax, [esp+arg_4]
cmp     eax, 64h
jz      short loc_431ee5
cmp     eax, 65h
jz      short loc_431f05
cmp     eax, 66h
jz      short loc_431f25
retn
mov     ecx, [esp+arg_8]
mov     edx, offset dword_4a6800
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
mov     ecx, [esp+arg_8]
mov     edx, offset dword_4a6810
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
mov     ecx, [esp+arg_8]
mov     edx, offset dword_4a6820
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
cmp     ds:word_4a683c, 0
push    esi
mov     esi, ds:dword_4a6834
jnz     short loc_431f76
mov     ds:dword_4a683e, 0
call    sub_43cd40
mov     ds:word_4a683c, ax
xor     eax, eax
cmp     ds:word_4a683c, ax
jz      short loc_431fa3
cmp     ds:dword_4a6830, eax
jnz     short loc_431fa3
push    2
mov     ds:dword_4a6838, eax
push    eax
mov     ds:dword_4a6834, eax
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a6830, eax
cmp     ds:word_4a683c, 0
jz      short loc_431fe3
cmp     ds:dword_4a6830, 0
jz      short loc_431fe3
mov     eax, ds:dword_4a6834
mov     ecx, [esp+4+src]
push    eax
mov     edx, ds:dword_4a6830
push    16h
push    ecx
push    edx
call    sub_45baf0
add     esp, 10h
test    eax, eax
jz      short loc_431fe3
add     ds:dword_4a6834, 16h
inc     ds:dword_4a6838
mov     eax, 1
cmp     esi, ds:dword_4a6834
jl      short loc_431ff2
xor     eax, eax
pop     esi
retn
cmp     ds:word_4a683c, 0
push    esi
push    edi
jz      short loc_432055
cmp     ds:dword_4a6830, 0
jz      short loc_432055
mov     ax, [esp+8+arg_4]
cmp     ax, 1
jl      short loc_432055
movsx   ecx, ax
cmp     ds:dword_4a6838, ecx
jl      short loc_432055
mov     eax, ds:dword_4a6830
mov     eax, [eax]
test    eax, eax
jz      short loc_432055
lea     edx, [ecx+ecx*4]
mov     edi, [esp+8+arg_0]
lea     ecx, [ecx+edx*2]
lea     esi, [eax+ecx*2-16h]
mov     ecx, 5
rep movsd
movsw
mov     eax, 1
pop     edi
pop     esi
retn
mov     ecx, [esp+8+arg_0]
xor     eax, eax
pop     edi
pop     esi
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+14h], ax
retn
cmp     ds:dword_4a6830, 0
push    esi
jz      short loc_432091
cmp     ds:dword_4a683e, 0
jnz     short loc_432091
mov     eax, ds:dword_4a6830
push    eax
call    sub_45ba00
add     esp, 4
xor     esi, esi
cmp     ds:word_4a683c, si
mov     ds:dword_4a6830, esi
mov     ds:dword_4a6838, esi
mov     ds:dword_4a6834, esi
jz      short loc_4320d6
push    esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a683c
or      eax, ecx
push    eax
call    sub_4709c0
mov     ds:word_4a683c, si
add     esp, 0ch
call    sub_432100
mov     eax, 1
pop     esi
retn
mov     eax, ds:dword_4a6842
retn
cmp     ds:dword_4a6842, 0
jz      short locret_43211d
push    0
call    sub_432120
mov     ds:dword_4a6842, 0
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 0c0h
mov     [esp+0c0h+var_b6], ax
call    sub_432160
mov     [esp+0c0h+var_9c], eax
lea     eax, [esp+0c0h+var_c0]
push    eax
push    31h
push    0
push    offset dword_4a61c4
call    sub_410a90
add     esp, 0d0h
retn
sub     esp, 4
xor     ecx, ecx
mov     cx, ds:word_4a8518
mov     edx, dword_4ae1e0
shl     ecx, 10h
mov     cl, 1
mov     eax, ecx
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     eax, [eax+edx+4]
xor     edx, edx
mov     dl, ch
mov     eax, [eax]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_4321a0
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_4321a9
push    ecx
call    sub_461250
add     esp, 4
lea     ecx, [esp+4+var_4]
push    4
push    ecx
push    3ch
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jnz     short loc_4321c7
mov     [esp+4+var_4], 0ff00h
mov     eax, [esp+4+var_4]
add     esp, 4
retn
mov     ecx, [esp+arg_0]
push    esi
push    edi
mov     eax, [ecx]
cmp     eax, 6
ja      def_4321e1
jmp     ds:jpt_4321e1[eax*4]
mov     edi, offset dword_4a6800
xor     eax, eax
mov     ecx, 11h
rep stosd
stosw
xor     eax, eax
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
mov     word ptr [ecx+8], 46h
mov     ds:dword_4a6842, 0
pop     esi
retn
cmp     word ptr [ecx+8], 46h
jz      short loc_432221
mov     eax, 1389h
pop     edi
pop     esi
retn
mov     edi, offset dword_4a6800
mov     esi, [ecx+0ah]
mov     ecx, 11h
rep movsd
movsw
cmp     ds:word_4a683c, 0
jz      def_4321e1
mov     ax, ds:word_4a683c
push    eax
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6830, eax
mov     ds:dword_4a683e, 1
test    eax, eax
jnz     def_4321e1
mov     eax, 8
pop     edi
pop     esi
retn
mov     esi, offset dword_4a6800
mov     edi, [ecx+0ah]
mov     ecx, 11h
rep movsd
movsw
cmp     ds:word_4a683c, 0
jz      def_4321e1
mov     dx, ds:word_4a683c
mov     eax, ds:dword_4a6834
push    eax
mov     ecx, ds:dword_4a6830
mov     ds:dword_4a683e, 1
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
pop     edi
pop     esi
retn
cmp     ds:dword_4a683e, 0
jz      short loc_4322ed
cmp     ds:word_4a683c, 0
jz      short loc_432304
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a683c
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
jmp     short loc_432304
cmp     ds:dword_4a6830, 0
jz      short loc_432304
mov     eax, ds:dword_4a6830
push    eax
call    sub_45ba00
add     esp, 4
mov     edi, offset dword_4a6800
xor     eax, eax
mov     ecx, 11h
rep stosd
stosw
xor     eax, eax
pop     edi
pop     esi
retn
cmp     ds:dword_4a6830, 0
jz      short loc_432339
cmp     ds:dword_4a683e, 0
jnz     short loc_432339
mov     eax, ds:dword_4a6830
push    eax
call    sub_45ba00
add     esp, 4
cmp     ds:word_4a683c, 0
jz      short loc_43236f
push    0
xor     eax, eax
mov     ax, word_4ad9ac
push    0
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a683c
or      eax, ecx
push    eax
call    sub_4709c0
mov     ds:word_4a683c, 0
add     esp, 0ch
mov     edi, offset dword_4a6800
xor     eax, eax
mov     ecx, 11h
rep stosd
stosw
xor     eax, eax
pop     edi
pop     esi
retn
push    1
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    offset windowname
call    sub_4324d0
add     esp, 28h
push    64h
call    sub_490830
add     esp, 4
test    eax, eax
jz      short loc_4323bc
push    2
push    eax
call    sub_4110a0
add     esp, 8
push    65h
call    sub_490830
add     esp, 4
test    eax, eax
jz      short loc_4323d5
push    2
push    eax
call    sub_4110a0
add     esp, 8
push    66h
call    sub_490830
add     esp, 4
test    eax, eax
jz      short def_4321e1
push    2
push    eax
call    sub_4110a0
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
retn
sub     esp, 4
cmp     dword_4ad888, 0
mov     [esp+4+var_2], 0
jz      short loc_432435
lea     eax, [esp+4+var_2]
push    eax
push    offset loc_432440
call    sub_485330
add     esp, 8
mov     ax, [esp+4+var_2]
add     esp, 4
retn
mov     eax, dword_4ad888
mov     ecx, [esp+4]
cmp     [ecx+2], eax
jnz     short loc_43246f
cmp     dword ptr [ecx+14h], 1
sbb     eax, eax
neg     eax
mov     [ecx+14h], eax
cmp     eax, 1
sbb     ecx, ecx
mov     eax, [esp+8]
and     ecx, 2
dec     ecx
mov     [eax], cx
mov     eax, 2
retn
xor     eax, eax
retn
push    esi
mov     eax, dword_4ad888
mov     esi, [esp+4+arg_0]
cmp     [esi+2], eax
jnz     short loc_4324c1
mov     eax, [esi+20h]
push    eax
push    0
push    0
call    dword ptr [esi+1ch]
add     esi, 24h
add     esp, 0ch
lea     eax, [esi+76eh]
push    eax
push    esi
call    sub_447a00
add     esp, 8
mov     eax, 1
mov     dword_4ad888, 0
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, 1768h
call    __alloca_probe
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     [esp+1774h+var_1768], ebx
push    ebp
cmp     dword_4ad888, ebx
jz      short loc_43250e
push    ebx
push    offset sub_432480
call    sub_485330
add     esp, 8
mov     eax, dword_4ad888
push    eax
call    sub_485210
add     esp, 4
mov     dword_4ad888, ebx
mov     ebp, [esp+1778h+lpstring]
cmp     byte ptr [ebp+0], 0
jz      short loc_43252f
push    ebp
call    sub_45b7b0
add     esp, 4
test    eax, eax
jz      short loc_43252f
inc     ebp
cmp     byte ptr [ebp+0], 0
jnz     short loc_43251b
push    ebp
mov     esi, ds:lstrlena
call    esi
test    eax, eax
jnz     short loc_432549
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1768h
retn
push    0
call    sub_4332a0
add     esp, 4
push    0
call    sub_4332d0
add     esp, 4
push    ebp
push    0
push    20bah
push    0
call    sub_442960
add     esp, 10h
push    ebp
call    esi
inc     eax
mov     edx, 19ah
cmp     eax, 19ah
jnb     short loc_432585
push    ebp
call    esi
lea     edx, [eax+1]
lea     edi, [esp+1778h+var_1334]
xor     eax, eax
mov     ecx, 1dbh
rep stosd
stosw
lea     edi, [esp+1778h+string]
mov     ecx, 10ch
rep stosd
lea     eax, [esp+1778h+string]
push    edx
push    ebp
push    eax
call    sub_47f9f0
mov     eax, [esp+1784h+arg_4]
add     esp, 0ch
xor     edx, edx
mov     dx, ds:word_4a8518
shl     edx, 10h
mov     dl, 1
cmp     eax, edx
jnz     short loc_4325cc
xor     eax, eax
cmp     eax, 1
mov     [esp+1778h+var_13c6], eax
sbb     ecx, ecx
and     ecx, 0fffffffeh
add     ecx, 3
test    eax, eax
mov     [esp+1778h+var_13ca], ecx
jnz     short loc_4325f0
mov     [esp+1778h+var_13c6], edx
test    eax, eax
jz      short loc_432606
push    eax
call    sub_461c50
mov     [esp+177ch+var_13c2], eax
add     esp, 4
jmp     short loc_432611
mov     [esp+1778h+var_13c2], 0
mov     ax, [esp+1778h+arg_8]
xor     ecx, ecx
cmp     ax, cx
mov     [esp+1778h+var_13ba], ecx
jz      short loc_432634
cmp     ax, 2
mov     [esp+1778h+var_13b6], ecx
jnz     short loc_43263f
mov     [esp+1778h+var_13b6], 1
cmp     ax, 1
jz      short loc_432656
mov     [esp+1778h+var_13ae], 0
cmp     ax, 2
jnz     short loc_432661
mov     [esp+1778h+var_13ae], 1
xor     esi, esi
mov     eax, [esp+1778h+arg_18]
mov     ecx, [esp+1778h+arg_10]
mov     edx, [esp+1778h+arg_14]
mov     edi, 1
mov     [esp+1778h+var_13b2], esi
mov     [esp+1778h+var_1376], eax
mov     [esp+1778h+var_1372], ecx
mov     [esp+1778h+var_136e], edx
mov     [esp+1778h+var_1366], edi
mov     [esp+1778h+var_136a], ecx
mov     [esp+1778h+var_13aa], esi
mov     edx, [esp+1778h+arg_24]
cmp     [esp+1778h+arg_c], edi
sbb     eax, eax
mov     [esp+1778h+var_13a2], esi
mov     [esp+1778h+var_1340], edi
mov     [esp+1778h+var_133c], edx
neg     eax
mov     [esp+1778h+var_13a6], eax
mov     [esp+1778h+var_1338], ecx
lea     ecx, [esp+1778h+string]
lea     eax, [esp+1778h+var_1334]
push    ecx
push    eax
call    sub_4475b0
add     esp, 8
test    eax, eax
jz      loc_432962
cmp     [esp+1778h+arg_1c], esi
jnz     short loc_432726
mov     [esp+1778h+arg_1c], offset sub_432b10
cmp     [esp+1778h+arg_18], esi
jnz     short loc_432726
mov     [esp+1778h+var_1768], edi
call    sub_48d890
xor     esi, esi
call    sub_432070
mov     ebp, [esp+1778h+arg_20]
mov     edi, 0ffffffffh
lea     eax, [esp+1778h+string]
lea     ecx, [esp+1778h+var_1334]
push    eax
push    ecx
call    sub_447940
add     esp, 8
test    eax, eax
jz      loc_4327f1
mov     eax, [esp+1778h+var_1334]
cmp     [esp+1778h+var_136a], esi
mov     [esp+1778h+var_bc4], eax
mov     [esp+1778h+var_bc0], eax
jz      short loc_4327bb
cmp     [esp+1778h+var_1372], esi
jz      short loc_4327bb
movsx   ecx, [esp+1778h+var_132a]
mov     ax, [esp+1778h+var_126a]
movsx   edx, [esp+1778h+var_1328]
mov     [esp+1778h+var_bbc], ax
mov     eax, [esp+1778h+var_1330]
mov     [esp+1778h+var_bba], ecx
mov     [esp+1778h+var_bb6], edx
mov     [esp+1778h+var_bb2], eax
jmp     short loc_4327c3
mov     [esp+1778h+var_bbc], di
lea     eax, [esp+1778h+var_bc4]
push    ebp
lea     ecx, [esp+177ch+var_1334]
push    eax
push    ecx
call    [esp+1784h+arg_1c]
add     esp, 0ch
test    eax, eax
jz      short loc_4327f1
inc     ebx
cmp     [esp+1778h+var_101a], 1
jnz     loc_432739
movsx   eax, [esp+1778h+var_100c]
shl     eax, 2
movsx   esi, [esp+1778h+var_100e]
lea     ecx, [eax+eax*4]
lea     eax, [ecx+ecx*4]
cdq
idiv    esi
push    eax
call    sub_4332a0
add     esp, 4
push    ebx
call    sub_4332d0
lea     ecx, [esp+177ch+var_1334]
add     esp, 4
push    ebp
push    0
push    ecx
call    [esp+1784h+arg_1c]
add     esp, 0ch
cmp     [esp+1778h+arg_18], 0
jz      loc_4328c9
cmp     [esp+1778h+var_101a], 1
jnz     short loc_4328c9
cmp     dword_4ad888, 0
jnz     short loc_4328d2
lea     esi, [esp+1778h+var_1334]
lea     edi, [esp+1778h+var_ba0]
mov     ecx, 1dbh
rep movsd
movsw
lea     esi, [esp+1778h+string]
lea     edi, [esp+1778h+var_432]
mov     ecx, 10ch
push    2
rep movsd
mov     eax, [esp+177ch+arg_1c]
push    0
lea     ecx, [esp+1780h+var_bc4]
push    offset sub_432970
mov     [esp+1784h+var_ba4], ebp
push    0bc2h
mov     [esp+1788h+var_ba8], eax
push    ecx
push    0
call    sub_485480
add     esp, 18h
mov     dword_4ad888, eax
test    eax, eax
jz      short loc_4328c9
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1768h
retn
cmp     dword_4ad888, 0
jz      short loc_432903
cmp     [esp+1778h+arg_18], 0
jz      short loc_432903
mov     eax, [esp+1778h+arg_24]
push    eax
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    0
push    offset windowname
call    sub_4324d0
add     esp, 28h
jmp     short loc_432918
lea     eax, [esp+1778h+string]
lea     ecx, [esp+1778h+var_1334]
push    eax
push    ecx
call    sub_447a00
add     esp, 8
cmp     [esp+1778h+var_1768], 0
jz      short loc_432924
call    sub_48d920
cmp     [esp+1778h+var_12fe], 1
jnz     short loc_432962
push    2080410h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_432962
mov     ds:dword_4a6842, 1
push    1
call    sub_432120
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1768h
retn
sub     esp, 18h
push    ebx
push    esi
mov     ebx, [esp+20h+arg_0]
push    edi
cmp     dword_4ad888, 0
push    ebp
lea     esi, [ebx+24h]
lea     edi, [ebx+792h]
jnz     short loc_43299a
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     ax, [esi+326h]
cmp     [esi+328h], ax
jge     loc_432a71
xor     ebp, ebp
call    ds:gettickcount
mov     [esi+31eh], eax
push    edi
push    esi
call    sub_447940
add     esp, 8
test    eax, eax
jz      short loc_432a2e
mov     eax, [esi]
mov     [esp+28h+var_18], eax
mov     eax, [esi]
mov     [esp+28h+var_14], eax
cmp     [esi+316h], ebp
jz      short loc_432a0b
cmp     [esi+30eh], ebp
jz      short loc_432a0b
mov     ax, [esi+0cah]
mov     [esp+28h+var_10], ax
movsx   ecx, word ptr [esi+0ah]
mov     [esp+28h+var_e], ecx
movsx   edx, word ptr [esi+0ch]
mov     [esp+28h+var_a], edx
mov     eax, [esi+4]
mov     [esp+28h+var_6], eax
jmp     short loc_432a12
mov     [esp+28h+var_10], 0ffffh
mov     eax, [ebx+20h]
lea     ecx, [esp+28h+var_18]
push    eax
push    ecx
push    esi
call    dword ptr [ebx+1ch]
add     esp, 0ch
test    eax, eax
jz      short loc_432a2e
cmp     [esi+31ah], ebp
jz      short loc_4329bc
mov     eax, [ebx+20h]
push    eax
push    0
push    esi
call    dword ptr [ebx+1ch]
movsx   eax, word ptr [esi+328h]
shl     eax, 2
add     esp, 0ch
movsx   ebp, word ptr [esi+326h]
lea     ecx, [eax+eax*4]
lea     eax, [ecx+ecx*4]
cdq
idiv    ebp
push    eax
call    sub_4332a0
add     esp, 4
cmp     dword ptr [esi+31ah], 1
jnz     short loc_432a71
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
cmp     dword ptr [esi+36h], 1
jnz     short loc_432aab
push    2080410h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_432aab
mov     ds:dword_4a6842, 1
push    1
call    sub_432120
add     esp, 4
cmp     dword ptr [esi+31ah], 0ffffffffh
jz      short loc_432abe
push    64h
call    sub_4332a0
add     esp, 4
mov     eax, [ebx+20h]
push    eax
push    0
push    0
call    dword ptr [ebx+1ch]
add     esp, 0ch
cmp     dword_4ad888, 0
jz      short loc_432aed
mov     eax, dword_4ad888
push    eax
call    sub_485210
mov     dword_4ad888, 0
add     esp, 4
push    edi
push    esi
call    sub_447a00
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 18h
push    esi
push    edi
mov     edi, [esp+20h+arg_0]
test    edi, edi
jz      loc_432bba
mov     esi, [esp+20h+src]
test    esi, esi
jz      loc_432bba
cmp     dword ptr [edi+30ah], 0
jz      short loc_432b3b
call    sub_48d8c0
cmp     dword ptr [edi+312h], 0
jz      short loc_432b60
mov     eax, [esi]
push    eax
call    sub_4549f0
add     esp, 4
mov     [esi], eax
test    eax, eax
jnz     short loc_432b60
mov     eax, 1
pop     edi
pop     esi
add     esp, 18h
retn
cmp     dword ptr [edi+316h], 0
jnz     short loc_432b93
xor     di, di
inc     di
lea     eax, [esp+20h+var_18]
push    edi
push    eax
call    sub_432000
add     esp, 8
test    eax, eax
jz      short loc_432b93
mov     eax, [esp+20h+var_18]
cmp     [esi], eax
jnz     short loc_432b6c
mov     eax, 1
pop     edi
pop     esi
add     esp, 18h
retn
push    esi
call    sub_431f50
add     esp, 4
test    eax, eax
jz      short loc_432baf
call    sub_433290
inc     eax
push    eax
call    sub_4332d0
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
add     esp, 18h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 474h
push    ebx
push    esi
mov     bx, [esp+47ch+arg_0]
push    edi
cmp     bx, 1
push    ebp
jl      loc_432d74
movsx   ecx, [esp+484h+arg_4]
cmp     ds:dword_4a6838, ecx
jl      loc_432d74
cmp     [esp+484h+arg_4], bx
jl      loc_432d74
xor     ebp, ebp
cmp     ds:word_4a683c, bp
jz      loc_432d67
cmp     ds:dword_4a6830, ebp
jz      loc_432d67
mov     ds:word_4a67fa, bp
mov     ds:dword_4a67f6, ebp
movsx   eax, bx
mov     ds:word_4a67fe, bp
sub     ecx, eax
movsx   eax, [esp+484h+arg_8]
cdq
inc     ecx
idiv    ecx
mov     ds:word_4a67fc, ax
lea     eax, [esp+484h+var_400]
push    eax
call    sub_46b550
mov     [esp+488h+var_1a0], offset sub_432d90
add     esp, 4
cmp     [esp+484h+arg_4], bx
jl      loc_432d42
movsx   ecx, bx
mov     eax, ds:dword_4a6830
mov     edi, offset dword_4a67e0
lea     edx, [ecx+ecx*4]
lea     ecx, [ecx+edx*2]
mov     edx, [eax]
lea     esi, [edx+ecx*2-16h]
mov     ecx, 5
rep movsd
movsw
mov     ecx, ds:dword_4a67e4
push    ecx
call    sub_408f90
add     esp, 4
test    eax, eax
jnz     short loc_432cb7
mov     eax, ds:dword_4a67e4
push    eax
call    sub_408e30
add     esp, 4
mov     esi, eax
push    esi
call    sub_470640
mov     [esp+488h+hmem], eax
add     esp, 4
cmp     eax, ebp
jz      short loc_432d32
mov     dx, ds:word_4a67e8
mov     eax, esi
shr     eax, 10h
movsx   ecx, ax
mov     [esp+484h+var_404], dx
lea     eax, [esp+484h+var_46c]
mov     edx, [esp+484h+hmem]
push    eax
push    ecx
push    edx
call    sub_46d310
add     esp, 0ch
test    eax, eax
jnz     short loc_432d28
lea     eax, [esp+484h+var_400]
push    9fh
lea     ecx, [esp+488h+var_46c]
push    eax
push    ecx
call    sub_46b000
lea     ecx, [esp+490h+var_46c]
add     esp, 0ch
push    ecx
call    sub_46d380
add     esp, 4
push    ebp
push    esi
call    sub_470920
add     esp, 8
inc     bx
cmp     [esp+484h+arg_4], bx
jge     loc_432c7d
mov     eax, [esp+484h+arg_c]
test    eax, eax
jz      short loc_432d57
mov     cx, ds:word_4a67fe
mov     [eax], cx
mov     eax, ds:dword_4a67f6
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 474h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 474h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 474h
retn
mov     edx, [esp+arg_0]
sub     esp, 8
mov     ax, [edx+68h]
push    ebx
test    ax, ax
push    esi
push    edi
lea     ecx, [eax-1]
mov     [edx+68h], cx
push    ebp
jz      short loc_432db5
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [edx+5ch]
mov     ecx, [edx+0ch]
lea     edx, [eax+ecx+0eh]
lea     eax, [esp+18h+var_4]
push    eax
push    edx
call    sub_419000
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_432f4d
cmp     [esp+18h+var_4], 0
jle     loc_432f4d
movsx   eax, ds:word_4a67fc
mov     [esp+18h+dwbytes], eax
push    2
push    eax
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_432e0b
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    edi
mov     ebx, ds:globallock
call    ebx
mov     ebp, eax
lea     eax, [esp+18h+dwbytes]
push    eax
mov     ecx, ds:dword_4a67ea
push    offset word_4a67fe
mov     eax, ds:dword_4a67ee
inc     eax
mov     edx, [esp+20h+var_4]
push    eax
push    ecx
mov     eax, [esp+28h+dwbytes]
push    edx
push    eax
push    esi
push    ebp
call    sub_432f60
add     esp, 20h
mov     esi, eax
test    esi, esi
jz      short loc_432e5b
push    edi
call    sub_45ba00
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     ds:dword_4a67f6, 0
push    2
jz      short loc_432ebd
movsx   eax, ds:word_4a67fa
add     eax, [esp+1ch+dwbytes]
mov     ecx, [esp+1ch+dwbytes]
inc     eax
cmp     eax, ecx
jl      short loc_432e7c
mov     eax, ecx
push    eax
mov     eax, ds:dword_4a67f6
push    eax
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_432eea
push    edi
call    sub_45ba00
add     esp, 4
mov     eax, ds:dword_4a67f6
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, 4
mov     ds:dword_4a67f6, 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+1ch+dwbytes]
inc     eax
push    eax
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a67f6, eax
test    eax, eax
jnz     short loc_432eea
push    edi
call    sub_45ba00
add     esp, 4
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ds:dword_4a67f6
push    eax
call    ebx
test    eax, eax
jz      short loc_432e8f
cmp     ds:word_4a67fa, 0
jz      short loc_432f0c
movsx   ecx, ds:word_4a67fa
mov     byte ptr [ecx+eax-1], 0dh
mov     edx, [esp+18h+dwbytes]
push    ebp
movsx   ecx, ds:word_4a67fa
inc     dx
add     eax, ecx
add     ds:word_4a67fa, dx
push    eax
call    ds:lstrcpya
push    edi
call    sub_45ba00
add     esp, 4
mov     ecx, ds:dword_4a67f6
push    ecx
call    ds:globalunlock
mov     eax, 11h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+dwbytes]
sub     esp, 14h
push    ebx
push    esi
push    edi
push    ebp
push    2
push    eax
call    sub_45b8f0
mov     [esp+2ch+hmem], eax
add     esp, 8
test    eax, eax
jnz     short loc_432f8b
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, [esp+24h+hmem]
push    eax
call    ds:globallock
mov     ebx, [esp+24h+arg_14]
mov     ecx, [esp+24h+arg_10]
mov     esi, ebx
mov     [esp+24h+str], eax
mov     eax, [esp+24h+dwbytes]
sub     esi, ecx
dec     eax
mov     [esp+24h+var_10], eax
cmp     esi, eax
jl      short loc_432fb5
mov     esi, eax
movsx   eax, si
mov     edi, [esp+24h+var_10]
sub     edi, eax
mov     eax, edi
cdq
sub     eax, edx
sar     eax, 1
dec     eax
test    eax, eax
jle     loc_43305e
cmp     ecx, eax
mov     esi, ecx
jl      short loc_432fd7
mov     esi, eax
mov     eax, ecx
mov     ebp, [esp+24h+arg_4]
sub     eax, esi
sub     edi, esi
lea     edx, [eax+ebp]
mov     eax, [esp+24h+arg_c]
sub     eax, ebx
cmp     eax, edi
jl      short loc_432ff0
mov     eax, edi
lea     esi, [ebp+ebx+0]
add     eax, esi
mov     [esp+24h+var_4], eax
lea     eax, [ebp+ecx+0]
cmp     edx, eax
jnb     short loc_433014
mov     edi, eax
sub     edi, ebp
cmp     edi, 1
jle     short loc_43300e
dec     eax
jmp     short loc_433010
mov     eax, ebp
cmp     edx, eax
jb      short loc_433002
cmp     [esp+24h+var_4], esi
jbe     short loc_433020
sub     esi, esi
add     esi, [esp+24h+var_4]
mov     edi, esi
sub     edi, eax
cmp     edi, [esp+24h+var_10]
jle     short loc_43302f
cmp     edx, eax
jbe     short loc_43302f
inc     eax
mov     edx, esi
sub     edx, eax
cmp     edx, [esp+24h+var_10]
jle     short loc_43304d
cmp     [esp+24h+var_4], esi
jnb     short loc_43304d
mov     edx, esi
sub     edx, ebp
cmp     edx, 1
jle     short loc_43304b
dec     esi
jmp     short loc_43304d
mov     esi, ebp
sub     bx, cx
mov     edx, ecx
sub     edx, eax
sub     esi, eax
add     dx, bp
add     bx, dx
jmp     short loc_433068
xor     dx, dx
mov     ebp, [esp+24h+arg_4]
mov     bx, si
movsx   eax, si
movsx   esi, dx
sub     ecx, esi
mov     edi, [esp+24h+str]
lea     esi, [ecx+ebp]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     ebp, [esp+24h+str]
lea     ecx, [esp+24h+var_14]
mov     byte ptr [eax+ebp], 0
lea     eax, [esp+24h+var_14+2]
push    eax
push    ecx
mov     eax, [esp+2ch+str]
push    ebx
mov     esi, [esp+30h+lpstring]
push    edx
mov     edx, [esp+34h+dwbytes]
push    edx
push    eax
push    esi
call    sub_4330e0
mov     cx, word ptr [esp+40h+var_14]
mov     eax, [esp+40h+arg_18]
mov     [eax], cx
mov     edx, [esp+40h+hmem]
add     esp, 1ch
push    edx
call    sub_45ba00
add     esp, 4
push    esi
call    ds:lstrlena
mov     ecx, [esp+24h+arg_1c]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     [ecx], eax
xor     eax, eax
add     esp, 14h
retn
sub     esp, 0ch
push    ebx
push    esi
mov     ebx, [esp+14h+str]
push    edi
push    ebp
push    20h
push    0dh
push    ebx
call    sub_47fdf0
add     esp, 0ch
push    20h
push    0ah
push    ebx
call    sub_47fdf0
movsx   eax, [esp+28h+arg_c]
movsx   ecx, [esp+28h+arg_10]
mov     [esp+28h+var_4], eax
add     esp, 0ch
lea     esi, [ebx+eax]
lea     edi, [ecx+ebx]
push    esi
call    ds:lstrlena
mov     ebp, eax
push    edi
call    ds:lstrlena
sub     bp, ax
mov     [esp+1ch+var_a], bp
cmp     bp, [esp+1ch+arg_8]
jge     loc_43320e
mov     [esp+1ch+lpstring], 0
mov     ax, [esp+1ch+arg_8]
sub     ax, bp
mov     [esp+1ch+var_c], ax
dec     [esp+1ch+var_c]
test    ax, ax
jle     short loc_4331b0
mov     eax, esi
lea     ebp, [esi-1]
sub     eax, ebx
cmp     eax, 1
jg      short loc_433169
mov     ebp, ebx
cmp     ebx, ebp
jnb     short loc_4331ac
push    ebp
call    sub_45b850
add     esp, 4
test    eax, eax
jz      short loc_433199
movsx   eax, [esp+1ch+arg_8]
movsx   ecx, [esp+1ch+var_a]
sub     eax, ecx
cdq
sub     eax, edx
movsx   edx, [esp+1ch+var_c]
sar     eax, 1
cmp     eax, edx
jge     short loc_4331b0
mov     [esp+1ch+lpstring], esi
mov     ax, [esp+1ch+var_c]
mov     esi, ebp
dec     [esp+1ch+var_c]
test    ax, ax
jg      short loc_43315b
jmp     short loc_4331b0
mov     [esp+1ch+lpstring], ebx
cmp     [esp+1ch+lpstring], 0
jnz     short loc_4331bb
mov     [esp+1ch+lpstring], esi
push    edi
call    ds:lstrlena
mov     esi, eax
xor     ebp, ebp
mov     eax, [esp+1ch+lpstring]
push    eax
call    ds:lstrlena
sub     si, ax
add     si, [esp+1ch+arg_8]
mov     ax, si
dec     si
test    ax, ax
jle     short loc_433206
cmp     byte ptr [edi], 0
jz      short loc_433204
push    edi
call    sub_45b850
add     esp, 4
test    eax, eax
jz      short loc_4331f7
mov     ebp, edi
mov     ax, si
inc     edi
dec     si
test    ax, ax
jg      short loc_4331e3
jmp     short loc_433206
mov     ebp, edi
test    ebp, ebp
jnz     short loc_43322e
mov     ebp, edi
jmp     short loc_43322e
movsx   eax, [esp+1ch+arg_8]
mov     ecx, esi
dec     eax
test    eax, eax
jle     short loc_43321d
lea     ecx, [eax+esi]
sub     ecx, ebx
mov     [esp+1ch+lpstring], esi
movsx   eax, cx
mov     [esp+1ch+arg_10], cx
lea     ebp, [eax+ebx]
sub     ebp, [esp+1ch+lpstring]
mov     edx, [esp+1ch+arg_0]
movsx   eax, bp
mov     edi, edx
mov     esi, [esp+1ch+lpstring]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     cx, [esp+1ch+arg_10]
sub     ebx, [esp+1ch+lpstring]
add     bx, word ptr [esp+1ch+var_4]
mov     byte ptr [eax+edx], 0
sub     cx, [esp+1ch+arg_c]
mov     eax, [esp+1ch+arg_14]
add     cx, bx
mov     [eax], bx
mov     eax, [esp+1ch+arg_18]
mov     [eax], cx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, dword_4ad88c
retn
mov     eax, dword_4ad890
retn
mov     eax, [esp+arg_0]
cmp     eax, 64h
jl      short loc_4332ae
mov     eax, 64h
push    20b9h
mov     dword_4ad88c, eax
push    1
call    sub_441c60
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    20a7h
push    1
mov     dword_4ad890, eax
call    sub_441c60
add     esp, 8
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
dec     eax
cmp     eax, 4
ja      def_433301
jmp     ds:jpt_433301[eax*4]
call    sub_45c800
mov     ds:dword_4a6848, eax
test    eax, eax
jnz     short loc_43331d
mov     eax, 8
pop     esi
retn
call    sub_43cd40
mov     ds:word_4a684c, ax
mov     word ptr [esi+8], 6
mov     eax, ds:dword_4a6848
mov     ecx, [eax]
push    ecx
call    sub_45c830
mov     dx, ds:word_4a684c
add     esp, 4
mov     ecx, ds:dword_4a6848
push    eax
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
pop     esi
retn
cmp     word ptr [esi+8], 6
jz      short loc_433366
mov     eax, 1389h
pop     esi
retn
mov     eax, [esi+0ah]
mov     edx, offset dword_4a6848
mov     ecx, [eax]
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
mov     dx, ds:word_4a684c
push    edx
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6848, eax
test    eax, eax
jnz     def_433301
mov     eax, 8
pop     esi
retn
mov     edx, [esi+0ah]
mov     ecx, ds:dword_4a6848
mov     eax, offset dword_4a6848
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
mov     edx, ds:dword_4a6848
mov     ecx, [edx]
push    ecx
call    sub_45c830
mov     dx, ds:word_4a684c
add     esp, 4
mov     ecx, ds:dword_4a6848
push    eax
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
pop     esi
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a684c
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ds:dword_4a6848, 0
pop     esi
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
push    0
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a684c
or      eax, ecx
push    eax
call    sub_4709c0
mov     ds:dword_4a6848, 0
add     esp, 0ch
xor     eax, eax
pop     esi
retn
sub     esp, 50h
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, ds:dword_4a68c0
push    ebp
mov     ebx, ebp
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_433487
cmp     ds:dword_4a68ae, 2
jz      short loc_433489
xor     ebx, ebx
test    ebx, ebx
jz      short loc_433496
push    ebx
call    sub_440b50
add     esp, 4
lea     edi, [esp+60h+var_4c]
mov     esi, [esp+60h+arg_0]
mov     ecx, 0ch
mov     [esp+60h+var_50], ebx
rep movsd
xor     eax, eax
test    ebx, ebx
mov     [esp+60h+var_1c], eax
mov     [esp+60h+var_12], eax
mov     [esp+60h+var_e], eax
jz      short loc_4334cb
push    ebx
call    sub_4269b0
mov     [esp+64h+var_18], ax
add     esp, 4
jmp     short loc_4334d2
mov     [esp+60h+var_18], 0ffffh
lea     eax, [esp+60h+var_50]
mov     [esp+60h+var_a], ebp
mov     [esp+60h+var_6], 0
mov     [esp+60h+var_16], 1
push    eax
push    offset sub_433670
call    sub_424680
add     esp, 8
cmp     [esp+60h+var_1c], 0
jz      short loc_433528
mov     eax, [esp+60h+var_1c]
mov     ecx, [esp+60h+arg_4]
mov     edx, [esp+60h+var_e]
push    0
push    ebx
mov     [ecx], eax
mov     [ecx+4], edx
call    sub_433c40
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
test    ebx, ebx
jz      short loc_433547
mov     ecx, [esp+60h+arg_4]
mov     eax, [esp+60h+arg_0]
push    ecx
push    eax
push    ebx
call    sub_433560
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
push    0
push    ebx
call    sub_433c40
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
sub     esp, 50h
push    ebx
push    esi
mov     ebx, [esp+58h+arg_0]
push    edi
lea     edi, [esp+5ch+var_4c]
push    ebp
mov     ebp, [esp+60h+arg_4]
mov     ecx, 0ch
mov     esi, ebp
mov     [esp+60h+var_50], ebx
rep movsd
xor     esi, esi
push    ebx
mov     [esp+64h+var_1c], esi
mov     [esp+64h+var_12], esi
mov     [esp+64h+var_e], esi
call    sub_4269b0
mov     [esp+64h+var_18], ax
mov     [esp+64h+var_16], esi
mov     [esp+64h+var_6], esi
add     esp, 4
cmp     [esp+60h+var_4c], 2
jz      short loc_4335b8
cmp     [esp+60h+var_4c], 6
jz      short loc_4335b8
mov     [esp+60h+var_22], esi
jmp     short loc_4335c5
push    ebx
call    sub_4432f0
mov     [esp+64h+var_22], eax
add     esp, 4
lea     eax, [esp+60h+var_50]
push    eax
push    offset sub_4336e0
push    0
push    ebx
call    sub_4620e0
add     esp, 10h
cmp     [esp+60h+var_22], 0
jz      short loc_4335ef
mov     eax, [esp+60h+var_22]
push    eax
push    ebx
call    sub_443310
add     esp, 8
cmp     [esp+60h+var_1c], 0
jz      short loc_43364d
mov     eax, [esp+60h+var_1c]
mov     ecx, [esp+60h+arg_8]
movsx   esi, ax
mov     edx, [esp+60h+var_e]
mov     [ecx], eax
mov     [ecx+4], edx
mov     eax, ds:dword_4a6770+2
mov     ecx, [eax]
mov     ax, [ecx+esi*4+4]
and     ah, 60h
cmp     ah, 40h
jnz     short loc_433635
push    ebp
push    ebx
call    sub_433c40
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
push    0
push    ebx
call    sub_433c40
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
push    0
push    ebx
call    sub_433c40
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
push    esi
push    edi
mov     esi, [esp+8+arg_4]
mov     eax, [esi+46h]
shr     eax, 10h
movzx   edi, ax
shl     edi, 10h
mov     eax, [esp+8+arg_0]
and     eax, 0ffffh
or      edi, eax
push    edi
call    sub_4624e0
add     esp, 4
cmp     eax, 3
jz      short loc_4336a0
cmp     eax, 0bh
jnz     short loc_4336b4
push    1
push    3f0h
push    edi
call    sub_42ed80
add     esp, 0ch
test    eax, eax
jnz     short loc_4336cd
mov     eax, ds:dword_4a6770+2
movsx   ecx, di
mov     edx, [eax]
test    byte ptr [edx+ecx*4+7], 2
jnz     short loc_4336cd
mov     eax, 1
pop     edi
pop     esi
retn
push    esi
push    edi
call    sub_4336e0
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_4]
push    edi
mov     edi, [esp+10h+arg_0]
push    ebp
cmp     dword ptr [esi+3ah], 0
jz      short loc_43370f
push    edi
call    sub_461f70
add     esp, 4
cmp     eax, [esi]
jnz     short loc_43370f
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+14h+var_4]
push    edi
cmp     dword ptr [esi+3ah], 1
sbb     [esp+18h+var_4], eax
neg     [esp+18h+var_4]
call    sub_4624e0
add     esp, 4
mov     ebp, eax
lea     edx, [esi+4]
mov     ecx, [esi]
cmp     [esp+14h+var_4], 0
mov     ebx, [edx]
mov     eax, 0ffffffffh
jz      short loc_433741
movsx   eax, word ptr [esi+38h]
push    eax
push    edx
push    edi
push    ecx
call    sub_433a90
add     esp, 10h
test    eax, eax
jz      short loc_433782
mov     ecx, [esi+4ah]
test    ecx, ecx
jz      short loc_43377e
cmp     ebx, 3
jz      short loc_433762
cmp     ebx, 0bh
jnz     short loc_43377e
cmp     [esi+28h], ecx
jnz     short loc_433771
mov     cx, [esi+4eh]
cmp     [esi+2ch], cx
jz      short loc_43377e
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
test    eax, eax
jnz     short loc_4337f1
cmp     ebx, 3
jz      short loc_43378c
cmp     ebx, 0bh
jnz     short loc_4337ba
cmp     ebp, 0bh
jnz     short loc_4337c7
mov     ax, [esi+2ch]
lea     ebx, [esi+28h]
push    eax
mov     ecx, [ebx]
push    ecx
push    1eh
push    edi
call    sub_4261f0
add     esp, 10h
test    eax, eax
jz      short loc_4337c7
mov     cx, [ebx+4]
add     esi, 4ah
mov     eax, [ebx]
mov     [esi], eax
mov     [esi+4], cx
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     ebp, 4
jnz     short loc_4337ba
mov     ax, [esi+2ch]
mov     ecx, [esi+28h]
add     esi, 28h
push    eax
push    ecx
push    27h
push    edi
call    sub_4261f0
add     esp, 10h
test    eax, eax
jz      short loc_4337ba
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     ebp, 8
jz      short loc_43383e
cmp     ebp, 0ah
jz      short loc_433839
cmp     ebp, 2
jnz     short loc_433805
cmp     ebx, 6
jz      short loc_433839
cmp     ebp, 3
jz      short loc_43380f
cmp     ebp, 0bh
jnz     short loc_433825
push    10b0640h
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_433825
mov     [esi+42h], edi
mov     eax, [esi+3eh]
test    eax, eax
jz      short loc_433877
pop     ebp
mov     [esi+34h], eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     ebp, 8
jnz     short loc_433856
push    1000102h
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
mov     eax, 1
jnz     short loc_433858
xor     eax, eax
cmp     dword ptr [esi+3eh], 0
jnz     short loc_433865
test    eax, eax
jnz     short loc_433865
mov     [esi+3eh], edi
cmp     ebx, 2
jz      short loc_433825
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
mov     [esi+34h], edi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 50h
push    esi
push    edi
mov     edi, [esp+58h+arg_4]
test    edi, edi
jz      short loc_4338f8
mov     esi, [esp+58h+arg_0]
test    esi, esi
jz      short loc_4338f8
lea     eax, [esp+58h+var_4c]
push    eax
push    esi
call    sub_433c80
add     esp, 8
push    esi
call    sub_4432f0
mov     [esp+5ch+var_22], eax
mov     [esp+5ch+var_50], esi
lea     eax, [esp+5ch+var_50]
add     esp, 4
push    eax
push    offset sub_433900
push    2
push    edi
call    sub_4620e0
add     esp, 10h
mov     edi, eax
cmp     [esp+58h+var_22], 0
jz      short loc_4338f0
mov     eax, [esp+58h+var_22]
push    eax
push    esi
call    sub_443310
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
add     esp, 50h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 50h
retn
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+10h+arg_4]
lea     edi, [ebp+4]
mov     ebx, [edi]
cmp     ebx, 3
jz      short loc_43391c
cmp     ebx, 4
jz      short loc_43391c
cmp     ebx, 0bh
jnz     short loc_433936
mov     esi, [esp+10h+arg_0]
push    esi
call    sub_4624e0
add     esp, 4
cmp     eax, 2
jnz     short loc_43393a
mov     dword ptr [edi], 2
jmp     short loc_43393a
mov     esi, [esp+10h+arg_0]
push    0ffffffffh
mov     eax, [ebp+0]
push    edi
push    esi
push    eax
call    sub_433a90
add     esp, 10h
mov     [edi], ebx
cmp     eax, 1
pop     ebp
sbb     eax, eax
pop     edi
neg     eax
pop     esi
pop     ebx
retn
sub     esp, 50h
push    esi
push    edi
mov     esi, [esp+58h+arg_0]
push    esi
call    sub_426a80
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_433980
xor     eax, eax
pop     edi
pop     esi
add     esp, 50h
retn
lea     eax, [esp+58h+var_4c]
push    eax
call    sub_433c30
lea     eax, [esp+5ch+var_50]
mov     [esp+5ch+var_50], esi
mov     [esp+5ch+var_4c], 0ah
add     esp, 4
push    eax
push    offset sub_4339c0
push    2
push    edi
call    sub_4620e0
add     esp, 10h
pop     edi
pop     esi
add     esp, 50h
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_4624e0
add     esp, 4
cmp     eax, 0ah
jnz     short loc_4339f1
mov     eax, [esp+4+arg_4]
push    0ah
lea     ecx, [eax+4]
mov     edx, [eax]
push    ecx
push    esi
push    edx
call    sub_433bc0
add     esp, 10h
test    eax, eax
jz      short loc_4339f1
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
sub     esp, 38h
lea     eax, [esp+38h+var_30]
push    esi
mov     esi, ds:dword_4a68c0
push    eax
call    sub_433c30
mov     [esp+40h+var_30], 2
mov     [esp+40h+var_18], 0
add     esp, 4
push    esi
call    sub_440b50
lea     eax, [esp+40h+var_38]
lea     ecx, [esp+40h+var_30]
add     esp, 4
push    eax
push    ecx
push    esi
call    sub_433560
add     esp, 0ch
test    eax, eax
push    1
jz      short loc_433a60
mov     eax, [esp+40h+var_38]
push    eax
call    sub_43c630
add     esp, 8
mov     eax, 1
pop     esi
add     esp, 38h
retn
push    esi
call    sub_4269f0
add     esp, 8
push    esi
push    0ch
call    sub_441bb0
add     esp, 8
push    0
push    esi
call    sub_440ca0
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 38h
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_4]
push    edi
push    ebp
push    esi
call    sub_4624e0
add     esp, 4
mov     edi, eax
cmp     edi, 8
mov     eax, [esp+14h+arg_8]
mov     eax, [eax]
jnz     short loc_433abb
cmp     eax, 0ah
jz      short loc_433abb
mov     eax, 8
cmp     edi, 0ah
jnz     short loc_433ac5
mov     eax, 0ah
cmp     eax, 6
jnz     short loc_433ad4
cmp     edi, 2
jnz     short loc_433ad4
mov     eax, 2
cmp     eax, 2
jnz     short loc_433af2
cmp     edi, 6
jz      short loc_433aed
cmp     edi, 3
jz      short loc_433aed
cmp     edi, 7
jz      short loc_433aed
cmp     edi, 0bh
jnz     short loc_433af2
mov     eax, 6
cmp     eax, 6
jnz     short loc_433b0b
cmp     edi, 3
jz      short loc_433b06
cmp     edi, 7
jz      short loc_433b06
cmp     edi, 0bh
jnz     short loc_433b0b
mov     edi, 6
cmp     eax, 3
jnz     short loc_433b1a
cmp     edi, 0bh
jnz     short loc_433b1a
mov     eax, 0bh
cmp     eax, edi
jz      short loc_433b28
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     [esp+14h+var_4], 0
mov     bx, [esp+14h+arg_c]
cmp     bx, 0ffffh
jz      short loc_433b64
cmp     edi, 3
jz      short loc_433b64
cmp     edi, 6
jz      short loc_433b64
cmp     edi, 0bh
jz      short loc_433b64
mov     ax, bx
mov     ecx, [esp+14h+arg_0]
inc     ax
mov     ebp, 1
push    eax
push    ecx
call    sub_4269d0
add     esp, 8
jmp     short loc_433b66
xor     ebp, ebp
mov     eax, [esp+14h+arg_8]
push    edi
mov     ecx, [esp+18h+arg_0]
push    eax
push    esi
push    ecx
call    sub_433bc0
add     esp, 10h
test    eax, eax
jz      short loc_433b9a
cmp     edi, 7
jnz     short loc_433b8d
mov     [esp+14h+var_4], 1
jmp     short loc_433b9a
push    esi
call    sub_433c10
mov     [esp+18h+var_4], eax
add     esp, 4
test    ebp, ebp
jz      short loc_433bac
mov     eax, [esp+14h+arg_0]
push    ebx
push    eax
call    sub_4269d0
add     esp, 8
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 40h
mov     ecx, 0ch
push    esi
mov     esi, [esp+44h+arg_8]
push    edi
lea     edi, [esp+48h+var_38]
mov     [esp+48h+var_3c], eax
mov     [esp+48h+var_40], 6
rep movsd
mov     ecx, [esp+48h+arg_c]
lea     edx, [esp+48h+var_40]
mov     eax, [esp+48h+arg_4]
push    edx
mov     [esp+4ch+var_38], ecx
push    eax
call    sub_424a90
mov     eax, [esp+50h+var_8]
add     esp, 8
pop     edi
pop     esi
add     esp, 40h
retn
mov     eax, [esp+arg_0]
push    1
push    3f0h
push    eax
call    sub_42ed80
add     esp, 0ch
retn
push    edi
xor     eax, eax
mov     edi, [esp+4+arg_0]
mov     ecx, 0ch
rep stosd
pop     edi
retn
mov     eax, [esp+arg_4]
test    eax, eax
jz      short loc_433c60
push    30h
mov     ecx, ds:dword_4a6848
push    eax
mov     eax, dword ptr [esp+8+arg_0]
push    eax
push    ecx
call    sub_45ca00
add     esp, 10h
retn
mov     eax, dword ptr [esp+arg_0]
mov     ecx, ds:dword_4a6848
push    eax
push    ecx
call    sub_45cc50
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    esi
mov     esi, [esp+4+arg_4]
push    30h
push    esi
mov     ecx, ds:dword_4a6848
push    eax
mov     edx, [ecx]
push    edx
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      short loc_433cb0
mov     dword ptr [esi+2ah], 0
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+10h+hmem]
push    ebp
call    sub_475630
add     esp, 4
test    ax, ax
jnz     short loc_433cd8
xor     ebp, ebp
mov     esi, dword ptr [esp+10h+arg_0]
push    esi
call    sub_461f70
add     esp, 4
lea     ebx, [eax+4000h]
mov     ecx, ds:dword_4a6848
push    ebx
push    ecx
call    sub_45c920
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_433d10
test    ebp, ebp
jz      short loc_433d0c
call    sub_45c800
mov     edi, eax
test    edi, edi
jz      short loc_433d4a
push    ebp
call    sub_475690
add     esp, 4
push    eax
push    ebp
push    esi
push    edi
call    sub_45cb00
add     esp, 10h
mov     eax, [edi]
push    eax
call    sub_45c830
add     esp, 4
push    eax
push    edi
push    ebx
mov     eax, ds:dword_4a6848
push    eax
call    sub_45cb00
add     esp, 10h
push    edi
call    sub_45c820
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     esi, dword ptr [esp+8+arg_0]
push    esi
call    sub_461f70
add     ax, 4000h
add     esp, 4
mov     ecx, ds:dword_4a6848
push    eax
push    ecx
call    sub_45c920
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_433d93
push    esi
push    edi
call    sub_45c920
add     esp, 8
mov     esi, eax
push    edi
call    sub_45c820
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ecx, ds:dword_4a6848
add     ax, 4000h
push    eax
push    ecx
call    sub_45cc50
add     esp, 8
retn
sub     esp, 0dch
mov     [esp+0dch+var_c4], 0
lea     eax, [esp+0dch+var_da]
push    ebx
mov     ecx, [esp+0e0h+arg_4]
push    esi
mov     [esp+0e4h+var_c8], 0
push    edi
push    ebp
push    eax
push    1eh
push    ecx
call    sub_461350
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      loc_433ef7
mov     bx, [esp+0ech+var_da]
shr     bx, 2
xor     bp, bp
test    bx, bx
jle     loc_433ee2
mov     eax, [esp+0ech+arg_4]
shr     eax, 10h
mov     word ptr [esp+0ech+var_d8], ax
shl     ax, 10h
mov     [esp+0ech+var_d4], ax
movsx   eax, bp
lea     edx, [esi+eax*4]
mov     ax, [edx]
mov     cx, ax
or      cx, [esp+0ech+var_d4]
jle     short loc_433e52
movzx   eax, ax
mov     ecx, [esp+0ech+var_d8]
and     ecx, 0ffffh
shl     ecx, 10h
or      ecx, eax
mov     [esp+0ech+var_d0], ecx
jmp     short loc_433e5a
mov     [esp+0ech+var_d0], 0
mov     ax, [edx+2]
mov     word ptr [esp+0ech+var_cc], ax
mov     eax, [esp+0ech+var_cc]
mov     ecx, [esp+0ech+var_d0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edx, eax
test    edx, edx
jz      short loc_433ec1
lea     edi, [esp+0ech+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
mov     eax, [esp+0ech+arg_8]
mov     ecx, [esp+0ech+arg_c]
mov     [esp+0ech+var_c0], eax
lea     eax, [esp+0ech+var_c0]
mov     [esp+0ech+var_bc], ecx
push    eax
push    1
push    edx
call    dword ptr [edx+6]
add     esp, 0ch
mov     edi, eax
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
test    edi, edi
jnz     short loc_433ece
inc     bp
cmp     bp, bx
jl      loc_433e27
jmp     short loc_433ee2
lea     eax, [esp+0ech+var_d0]
lea     edx, [esp+0ech+var_c8]
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     eax, [esp+0ech+arg_4]
push    esi
push    0
push    1eh
push    eax
call    sub_4613a0
add     esp, 10h
lea     ecx, [esp+0ech+var_c8]
mov     eax, [esp+0ech+arg_0]
pop     ebp
pop     edi
mov     edx, [ecx]
pop     esi
mov     cx, [ecx+4]
pop     ebx
mov     [eax], edx
mov     [eax+4], cx
add     esp, 0dch
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     eax, [esi]
dec     eax
cmp     eax, 6
ja      def_433f32
jmp     ds:jpt_433f32[eax*4]
call    sub_434240
call    sub_45c800
mov     ds:dword_4a6888, eax
test    eax, eax
jnz     short loc_433f54
mov     eax, 8
pop     edi
pop     esi
retn
call    sub_43cd40
mov     ds:word_4a688c, ax
xor     eax, eax
mov     ds:word_4a689a, ax
mov     ds:dword_4a6860, eax
mov     ds:word_4a687c, ax
mov     ds:word_4a6884, ax
mov     word ptr [esi+8], 56h
mov     ecx, ds:dword_4a6888
mov     edx, [ecx]
push    edx
call    sub_45c830
mov     dx, ds:word_4a688c
add     esp, 4
mov     ecx, ds:dword_4a6888
push    eax
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
pop     edi
pop     esi
retn
cmp     word ptr [esi+8], 56h
jz      short loc_433fb9
mov     eax, 1389h
pop     edi
pop     esi
retn
mov     eax, [esi+0ah]
mov     edi, offset dword_4a6868
mov     esi, eax
mov     ecx, 7
rep movsd
movsw
lea     esi, [eax+3eh]
mov     edi, offset dword_4a68a8
mov     ecx, 6
rep movsd
lea     esi, [eax+1eh]
mov     edi, offset dword_4a6888
mov     ecx, 8
rep movsd
mov     cx, ds:word_4a688c
push    ecx
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6888, eax
test    eax, eax
jnz     short loc_43400b
mov     eax, 8
pop     edi
pop     esi
retn
mov     eax, ds:dword_4a68a8
xor     esi, esi
mov     ds:dword_4a68c0, eax
mov     ds:dword_4a6864, esi
cmp     ds:word_4a6884, si
mov     ds:dword_4a686c, esi
mov     ds:dword_4a68c4, 1
mov     ds:dword_4a6860, esi
jz      def_433f32
mov     ax, ds:word_4a6884
push    eax
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6860, eax
cmp     eax, esi
jnz     def_433f32
mov     ds:word_4a687c, si
mov     eax, 8
pop     edi
pop     esi
retn
mov     eax, ds:dword_4a6888
mov     ecx, [eax]
push    ecx
call    sub_45c830
mov     dx, ds:word_4a688c
add     esp, 4
mov     ecx, ds:dword_4a6888
push    eax
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jnz     loc_434218
cmp     ds:dword_4a6860, 0
jz      short loc_4340bf
mov     cx, ds:word_4a6884
push    194h
mov     eax, ds:dword_4a6860
push    eax
push    ecx
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jnz     loc_434218
mov     eax, [esi+0ah]
mov     ecx, 7
mov     esi, offset dword_4a6868
mov     edi, eax
rep movsd
movsw
mov     esi, offset dword_4a68a8
lea     edi, [eax+3eh]
mov     ecx, 6
rep movsd
mov     esi, offset dword_4a6888
lea     edi, [eax+1eh]
mov     ecx, 8
rep movsd
xor     eax, eax
pop     edi
pop     esi
retn
xor     esi, esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a688c
or      eax, ecx
push    eax
call    sub_470920
mov     ds:word_4a688c, si
add     esp, 8
cmp     ds:word_4a6884, si
mov     ds:dword_4a6888, esi
jz      short loc_434155
push    esi
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6884
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     esi, esi
mov     ds:word_4a687c, si
push    esi
mov     ds:word_4a6884, si
mov     ds:dword_4a6860, esi
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
xor     eax, eax
mov     ds:dword_4a68a8, esi
pop     edi
mov     ds:dword_4a68c0, esi
pop     esi
retn
xor     esi, esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
push    esi
xor     ecx, ecx
mov     cx, ds:word_4a688c
or      eax, ecx
push    eax
call    sub_4709c0
mov     ds:word_4a688c, si
add     esp, 0ch
cmp     ds:word_4a6884, si
mov     ds:dword_4a6888, esi
jz      short loc_4341e5
push    esi
xor     ecx, ecx
mov     cx, word_4ad9ac
push    esi
shl     ecx, 10h
xor     eax, eax
mov     ax, ds:word_4a6884
or      ecx, eax
push    ecx
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
pop     edi
mov     ds:word_4a687c, ax
pop     esi
mov     ds:word_4a6884, ax
mov     ds:dword_4a6860, eax
xor     eax, eax
retn
xor     eax, eax
pop     edi
mov     ds:dword_4a68c4, 1
pop     esi
retn
mov     ds:dword_4a68c4, 0
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
xor     eax, eax
mov     ax, ds:word_4a8518
xor     esi, esi
shl     eax, 10h
mov     ds:dword_4a68c4, esi
mov     al, 1
mov     ds:dword_4a6864, esi
push    eax
mov     ds:dword_4a6868, esi
mov     ds:dword_4a686c, esi
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
xor     eax, eax
mov     ds:dword_4a68ae, esi
mov     ax, ds:word_4a8518
mov     ds:dword_4a6892, esi
mov     ds:word_4a68b2, si
push    2000308h
shl     eax, 10h
mov     al, 1
push    eax
mov     ds:dword_4a68a8, eax
mov     ds:dword_4a68c0, eax
call    sub_462670
add     esp, 8
mov     ds:dword_4a689c, esi
mov     ds:dword_4a68a0, esi
mov     ds:dword_4a68a4, esi
mov     ds:dword_4a68b4, esi
mov     ds:dword_4a68b8, esi
mov     ds:word_4a6850, si
mov     ds:dword_4a68bc, esi
mov     ds:word_4a6858, si
mov     ds:dword_4a685c, esi
movzx   ecx, ax
mov     ds:dword_4a688e, ecx
call    sub_436d60
pop     esi
retn
sub     esp, 40h
cmp     ds:word_4a6b50, 0
push    ebx
push    esi
push    edi
push    ebp
jz      short loc_434316
call    sub_441d20
cmp     ds:dword_4a686c, 0
jz      short loc_434340
push    offset dword_4a686c
call    sub_434af0
add     esp, 4
xor     eax, eax
mov     ds:dword_4a686c, 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     bx, ds:word_4a68ac
mov     edi, ds:dword_4a68a8
mov     eax, ds:dword_4a68ae
cmp     eax, 6
ja      short def_434357
jmp     ds:jpt_434357[eax*4]
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
cmp     ds:word_4a687c, 0
jz      short loc_43437e
push    edi
call    sub_436990
add     esp, 4
movsx   eax, di
mov     ecx, ds:dword_4a6770+2
lea     esi, ds:0[eax*4]
mov     eax, [ecx]
test    byte ptr [eax+esi+7], 1
jz      short loc_4343a2
push    edi
push    10h
call    sub_441bb0
add     esp, 8
movsx   ebp, bx
mov     ds:dword_4a68ae, 4
lea     ecx, [ebp-4]
cmp     ecx, 8
ja      short def_4343bf
xor     eax, eax
mov     al, ds:byte_434844[ecx]
jmp     ds:jpt_4343bf[eax*4]
mov     eax, ds:dword_4a6770+2
mov     edx, [eax]
lea     ecx, [edx+esi+4]
push    edi
mov     ax, [ecx]
mov     dx, word ptr ds:dword_4a6af8
xor     dx, ax
and     dx, 1ffh
xor     dx, ax
mov     [ecx], dx
call    sub_42ed10
add     esp, 4
jmp     loc_4347ed
cmp     word ptr ds:dword_4a6af8, 1ffh
jl      short loc_434407
call    sub_43d5c0
mov     eax, ds:dword_4a6770+2
mov     edx, [eax]
lea     ecx, [edx+esi+4]
mov     ax, [ecx]
push    ebx
mov     dx, word ptr ds:dword_4a6af8
push    edi
xor     dx, ax
and     dx, 1ffh
xor     dx, ax
mov     [ecx], dx
inc     word ptr ds:dword_4a6af8
call    sub_434920
mov     [esp+58h+var_20], 0
mov     [esp+58h+var_1c], edi
add     esp, 8
cmp     bx, 8
jz      short loc_43445c
lea     eax, [esp+50h+var_20]
push    eax
call    (funcs_434452-10h)[ebp*4]
add     esp, 4
push    ebx
push    edi
call    sub_434850
add     esp, 8
jmp     loc_4347ed
mov     eax, ds:dword_4a6770+2
mov     edx, [eax]
lea     ecx, [edx+esi+4]
mov     ax, [ecx]
mov     dx, word ptr ds:dword_4a6af8
xor     dx, ax
and     dx, 1ffh
xor     dx, ax
mov     [ecx], dx
call    sub_43e6b0
test    eax, eax
jz      short loc_4344bd
push    2020308h
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4344bd
call    sub_434c20
push    edi
call    sub_43e6d0
add     esp, 4
jmp     loc_4347ed
push    edi
call    sub_42ed10
add     esp, 4
jmp     loc_4347ed
mov     eax, ds:dword_4a6770+2
push    edi
mov     edx, [eax]
push    2
movsx   ecx, di
or      byte ptr [edx+ecx*4+5], 2
call    sub_441bb0
add     esp, 8
push    4
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jz      loc_4345c8
push    edi
call    sub_435470
add     esp, 4
test    eax, eax
jz      loc_4345c8
push    edi
call    sub_4355b0
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
cmp     bx, 5
jnz     short loc_434545
mov     [esp+50h+var_20], 0bh
lea     eax, [esp+50h+var_20]
mov     [esp+50h+var_1c], edi
push    eax
call    off_4ad8c4
add     esp, 4
jmp     loc_4347ed
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     ds:dword_4a68ae, 1
cmp     bx, 4
jz      short loc_43459b
cmp     bx, 5
jz      short loc_43459b
cmp     bx, 0ch
jz      short loc_43459b
mov     [esp+50h+var_20], 0
cmp     bx, 8
mov     [esp+50h+var_1c], edi
jz      loc_4347ed
movsx   ebx, bx
lea     eax, [esp+50h+var_20]
push    eax
call    dword_4ad8b0[ebx*4]
add     esp, 4
jmp     loc_4347ed
mov     [esp+50h+var_20], 0bh
cmp     bx, 8
mov     [esp+50h+var_1c], edi
jz      loc_4347ed
movsx   ebx, bx
lea     eax, [esp+50h+var_20]
push    eax
call    dword_4ad8b0[ebx*4]
add     esp, 4
jmp     loc_4347ed
cmp     bx, 4
jz      short loc_4345da
cmp     bx, 5
jz      short loc_4345da
cmp     bx, 0ch
jnz     short loc_434609
push    2
push    edi
call    sub_42e4c0
mov     [esp+58h+var_40], 1
mov     [esp+58h+var_3c], edi
add     esp, 8
cmp     bx, 8
jz      short loc_434609
movsx   ebp, bx
lea     eax, [esp+50h+var_40]
push    eax
call    dword_4ad8b0[ebp*4]
add     esp, 4
cmp     di, 1
jnz     short loc_434626
mov     eax, 1
pop     ebp
mov     ds:dword_4a68ae, 7
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
push    edi
call    sub_461f70
add     esp, 4
mov     ebp, eax
push    ebp
call    sub_462480
mov     si, ax
add     esp, 4
cmp     si, 0ch
jnz     short loc_43465b
push    edi
push    ebp
call    sub_461e30
sub     ax, 2
add     esp, 8
cmp     ax, 1
sbb     eax, eax
neg     eax
jmp     short loc_434671
cmp     si, 5
jz      short loc_43466c
cmp     si, 4
mov     eax, 0
jnz     short loc_434671
mov     eax, 1
push    edi
test    eax, eax
jz      loc_43470f
push    ebp
call    sub_42e3e0
add     esp, 8
push    edi
push    esi
push    ebp
call    sub_4348b0
movsx   eax, ax
add     esp, 0ch
cmp     eax, 3
jz      short loc_4346fd
mov     ds:word_4a68ac, si
push    esi
push    ebp
mov     ds:dword_4a68a8, ebp
mov     ds:dword_4a68c0, ebp
call    sub_434920
mov     [esp+58h+var_3c], ebp
add     esp, 8
mov     ds:dword_4a68ae, 4
mov     [esp+50h+var_40], 2
cmp     si, 8
jz      short loc_4346e1
movsx   ebp, si
lea     eax, [esp+50h+var_40]
push    eax
call    dword_4ad8b0[ebp*4]
add     esp, 4
cmp     ds:dword_4a68ae, 3
jnz     loc_4347aa
mov     ds:dword_4a68ae, 1
jmp     loc_4347aa
call    sub_434b60
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
call    sub_461c50
mov     [esp+54h+var_20], eax
add     esp, 4
test    eax, eax
jz      short loc_434748
push    eax
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
mov     ds:dword_4a68ae, 0
mov     eax, [esp+50h+var_20]
mov     ds:dword_4a68a8, eax
mov     ds:dword_4a68c0, eax
jmp     short loc_4347aa
cmp     si, 0ch
jnz     short loc_434797
push    edi
push    ebp
call    sub_4348f0
movsx   eax, ax
add     esp, 8
cmp     eax, 1
jz      short loc_43476c
cmp     eax, 2
jz      short loc_434776
cmp     eax, 3
jz      short loc_434785
jmp     short loc_4347aa
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
call    sub_436200
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
call    sub_434b60
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     ds:word_4a68ac, si
mov     ds:dword_4a68a8, ebp
mov     ds:dword_4a68c0, ebp
mov     eax, ds:dword_4a6770+2
movsx   ecx, di
mov     edx, [eax]
test    byte ptr [edx+ecx*4+7], 1
jz      short loc_4347c6
push    edi
push    10h
call    sub_441bb0
add     esp, 8
cmp     bx, 6
jz      short loc_4347d8
cmp     bx, 8
jz      short loc_4347d8
cmp     bx, 7
jnz     short loc_4347ed
cmp     ds:dword_4a6aba, 2
jnz     short loc_4347ed
push    edi
push    ebx
push    2
call    sub_43bd20
add     esp, 0ch
cmp     ds:dword_4a686c, 0
jz      short loc_43480d
push    offset dword_4a686c
call    sub_434af0
mov     ds:dword_4a686c, 0
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     eax, [esp+arg_0]
sub     esp, 20h
mov     ds:dword_4a68ae, 4
mov     [esp+20h+var_20], 2
mov     [esp+20h+var_1c], eax
mov     ax, [esp+20h+arg_4]
cmp     ax, 8
jz      short loc_43488a
movsx   eax, ax
lea     ecx, [esp+20h+var_20]
push    ecx
call    dword_4ad8b0[eax*4]
add     esp, 4
cmp     ds:dword_4a68ae, 3
jnz     short loc_43489d
mov     ds:dword_4a68ae, 1
add     esp, 20h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_8]
sub     esp, 20h
mov     [esp+20h+var_1c], eax
mov     [esp+20h+var_18], ecx
mov     [esp+20h+var_20], 0ch
mov     ax, [esp+20h+arg_4]
cmp     ax, 8
jnz     short loc_4348dd
xor     ax, ax
add     esp, 20h
retn
movsx   eax, ax
lea     ecx, [esp+20h+var_20]
push    ecx
call    dword_4ad8b0[eax*4]
add     esp, 24h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 20h
lea     edx, [esp+20h+var_20]
mov     [esp+20h+var_1c], eax
mov     [esp+20h+var_18], ecx
push    edx
mov     [esp+24h+var_20], 0dh
call    sub_4357f0
add     esp, 24h
retn
movsx   eax, [esp+arg_4]
cmp     eax, 4
jz      short loc_434935
cmp     eax, 5
jz      short loc_434953
cmp     eax, 0ch
jz      short loc_434971
retn
mov     eax, [esp+arg_0]
cmp     eax, ds:dword_4a68b8
jz      short locret_43498e
push    0
mov     ds:dword_4a68b8, eax
push    0ch
call    sub_441bb0
add     esp, 8
retn
mov     eax, [esp+arg_0]
cmp     eax, ds:dword_4a68b4
jz      short locret_43498e
push    0
mov     ds:dword_4a68b4, eax
push    0eh
call    sub_441bb0
add     esp, 8
retn
mov     eax, [esp+arg_0]
cmp     eax, ds:dword_4a68bc
jz      short locret_43498e
push    0
mov     ds:dword_4a68bc, eax
push    12h
call    sub_441bb0
add     esp, 8
retn
push    ebx
push    esi
push    edi
mov     esi, ds:dword_4a68c0
mov     di, [esp+0ch+arg_8]
test    di, 1
jz      short loc_4349b6
mov     ebx, [esp+0ch+arg_0]
push    1
push    ebx
call    sub_42e4c0
add     esp, 8
jmp     short loc_4349ba
mov     ebx, [esp+0ch+arg_0]
push    edi
mov     edi, [esp+10h+arg_4]
push    edi
push    ebx
call    sub_434a20
add     esp, 0ch
push    edi
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
mov     ds:dword_4a68a8, edi
mov     ds:dword_4a68c0, edi
mov     ds:dword_4a68ae, 0
push    esi
push    edi
call    sub_463480
add     esp, 8
test    eax, eax
jnz     short loc_434a18
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
test    byte ptr [edx+ecx*4+7], 1
jz      short loc_434a18
push    esi
push    10h
call    sub_441bb0
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 20h
mov     [esp+20h+var_2], 0
mov     [esp+20h+var_1c], eax
mov     [esp+20h+var_18], ecx
mov     [esp+20h+var_20], 3
mov     ax, [esp+20h+arg_8]
test    al, 4
jz      short loc_434a52
mov     [esp+20h+var_2], 1
test    al, 2
jz      short loc_434a5b
or      byte ptr [esp+20h+var_2], 2
test    al, 1
jz      short loc_434a64
or      byte ptr [esp+20h+var_2], 4
lea     eax, [esp+20h+var_20]
push    eax
call    sub_4357f0
add     esp, 24h
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_463590
add     esp, 4
test    eax, eax
jz      short loc_434ab3
push    1000430h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 3
jnz     short loc_434ab3
push    1
push    esi
call    sub_434c50
add     esp, 8
pop     esi
retn
push    3
push    esi
call    sub_435870
add     esp, 8
pop     esi
retn
cmp     ds:dword_4a686c, 0
jnz     short locret_434ae8
mov     ecx, [esp+arg_0]
mov     edx, offset dword_4a686c
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
dec     eax
cmp     eax, 4
ja      short def_434afd
jmp     ds:jpt_434afd[eax*4]
mov     eax, [esi+4]
push    eax
call    sub_434a80
add     esp, 4
pop     esi
retn
push    0
push    0
call    sub_422870
add     esp, 8
pop     esi
retn
push    0
call    sub_422980
add     esp, 4
pop     esi
retn
mov     eax, [esi+0ch]
push    eax
call    dword ptr [esi+8]
mov     dword ptr [esi+8], 0
add     esp, 4
pop     esi
retn
mov     ds:dword_4a68ae, 8
retn
sub     esp, 24h
push    ebx
push    esi
mov     esi, [esp+2ch+arg_0]
push    edi
cmp     esi, ds:dword_4a68a8
jnz     short loc_434ba1
cmp     ds:dword_4a68ae, 2
jnz     short loc_434ba1
mov     eax, 1
pop     edi
mov     ds:dword_4a68ae, 1
pop     esi
pop     ebx
add     esp, 24h
retn
mov     di, ds:word_4a68b2
test    di, di
jle     short loc_434be2
mov     ebx, 2
lea     eax, [esp+30h+var_24]
push    24h
push    eax
mov     ecx, ds:dword_4a6888
push    edi
mov     edx, [ecx]
push    edx
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      short loc_434bdb
cmp     esi, [esp+30h+var_24]
jnz     short loc_434bdb
cmp     [esp+30h+var_1e], ebx
jz      short loc_434beb
dec     di
test    di, di
jg      short loc_434bb2
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
lea     eax, [esp+30h+var_24]
push    24h
push    eax
mov     ecx, ds:dword_4a6888
mov     [esp+38h+var_1e], 1
push    edi
push    ecx
call    sub_45ca00
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     ds:dword_4a68ae, 3
retn
cmp     ds:dword_4a68ae, 3
jnz     short loc_434c49
mov     ds:dword_4a68ae, 4
mov     eax, 1
retn
xor     eax, eax
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
push    edi
call    sub_461f70
add     esp, 4
mov     esi, eax
push    esi
push    edi
call    sub_434c90
add     esp, 8
mov     eax, 0
cmp     [esp+8+arg_4], 1
adc     eax, 0ffffffffh
and     ax, 2
push    eax
push    edi
push    esi
call    sub_434990
add     esp, 0ch
pop     edi
pop     esi
retn
sub     esp, 20h
push    esi
mov     esi, [esp+24h+arg_0]
push    esi
call    sub_434f80
add     esp, 4
mov     eax, ds:dword_4a68a8
push    esi
push    eax
call    sub_4356e0
mov     eax, [esp+2ch+arg_4]
add     esp, 8
push    1
push    eax
call    sub_426ba0
add     esp, 8
cmp     ds:dword_4a68ae, 2
jz      short loc_434cd1
cmp     ds:dword_4a68ae, 5
jnz     short loc_434cef
mov     eax, ds:dword_4a68a8
lea     ecx, [esp+24h+var_20]
mov     [esp+24h+var_1c], eax
push    ecx
mov     [esp+28h+var_20], 9
call    sub_4357f0
add     esp, 4
cmp     word ptr ds:dword_4a6af8, 1ffh
jl      short loc_434cff
call    sub_43d5c0
inc     word ptr ds:dword_4a6af8
pop     esi
add     esp, 20h
retn
sub     esp, 20h
push    esi
mov     esi, [esp+24h+arg_0]
push    esi
call    sub_435000
add     esp, 4
test    eax, eax
jz      short loc_434d77
mov     eax, ds:dword_4a68a8
push    eax
push    esi
call    sub_4356e0
add     esp, 8
push    esi
call    sub_434e20
add     esp, 4
cmp     ds:dword_4a68ae, 2
jz      short loc_434d4f
cmp     ds:dword_4a68ae, 5
jnz     short loc_434d6d
mov     eax, ds:dword_4a68a8
lea     ecx, [esp+24h+var_20]
mov     [esp+24h+var_1c], eax
push    ecx
mov     [esp+28h+var_20], 0ah
call    sub_4357f0
add     esp, 4
mov     eax, 1
pop     esi
add     esp, 20h
retn
xor     eax, eax
pop     esi
add     esp, 20h
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_461f70
add     esp, 4
mov     edi, eax
push    esi
call    sub_434d10
add     esp, 4
push    0
push    edi
call    sub_426ba0
add     esp, 8
push    0
push    edi
call    sub_435870
add     esp, 8
cmp     word ptr ds:dword_4a6af8, 1ffh
jl      short loc_434dc0
call    sub_43d5c0
mov     eax, ds:dword_4a6770+2
movsx   ecx, di
mov     edx, [eax]
lea     ecx, [edx+ecx*4+4]
mov     ax, [ecx]
pop     edi
mov     dx, word ptr ds:dword_4a6af8
pop     esi
xor     dx, ax
and     dx, 1ffh
xor     dx, ax
mov     [ecx], dx
inc     word ptr ds:dword_4a6af8
retn
mov     eax, [esp+arg_0]
push    eax
mov     ds:dword_4a685c, eax
call    sub_43d590
mov     ds:word_4a6850, ax
add     esp, 4
mov     ax, word ptr ds:dword_4a6af8
dec     ax
mov     ds:word_4a6858, ax
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_43d590
add     esp, 4
test    ax, ax
jz      loc_434ee7
push    esi
call    sub_42e390
add     esp, 4
test    ax, ax
push    esi
jnz     short loc_434e78
call    sub_434df0
add     esp, 4
push    esi
call    sub_42bc60
add     esp, 4
test    eax, eax
jz      short loc_434e71
call    sub_42bcb0
push    0
push    1
push    0
call    sub_42ba50
add     esp, 0ch
jmp     short loc_434ede
call    sub_434ef0
jmp     short loc_434ede
call    sub_4635f0
add     esp, 4
test    eax, eax
jnz     short loc_434ede
call    sub_42e790
mov     edi, eax
push    esi
test    edi, edi
jz      short loc_434ed1
push    edi
call    sub_42e6d0
add     esp, 8
cmp     ds:dword_4a68a8, edi
jz      short loc_434ee7
mov     eax, ds:dword_4a68c0
push    eax
push    edi
call    sub_42e920
add     esp, 8
test    eax, eax
jz      short loc_434ee7
push    eax
call    sub_42e390
add     esp, 4
push    eax
mov     ax, word ptr ds:dword_4a6af8
push    eax
push    edi
call    sub_42e730
add     esp, 0ch
pop     edi
pop     esi
retn
call    sub_42e390
add     esp, 4
cmp     eax, 3
jz      short loc_434ee7
push    esi
call    sub_434df0
add     esp, 4
pop     edi
pop     esi
retn
mov     ecx, ds:dword_4a685c
test    ecx, ecx
jz      short locret_434f6e
mov     ax, ds:word_4a6850
test    ax, ax
jnz     short loc_434f1c
push    ecx
call    sub_43d590
mov     cx, word ptr ds:dword_4a6af8
add     esp, 4
mov     ds:word_4a6858, cx
mov     ds:word_4a6850, ax
test    ax, ax
jz      short loc_434f5b
call    sub_4441e0
mov     ax, ds:word_4a6858
mov     cx, ds:word_4a6850
push    eax
push    ecx
call    sub_43ad60
mov     cx, ds:word_4a6858
add     esp, 8
mov     dx, ds:word_4a6850
push    ecx
push    edx
call    sub_43d490
add     esp, 8
xor     eax, eax
mov     ds:word_4a6850, ax
mov     ds:dword_4a685c, eax
mov     ds:word_4a6858, ax
retn
mov     eax, [esp+arg_0]
mov     ds:dword_4a685c, eax
retn
sub     esp, 24h
mov     ecx, 6
push    esi
push    edi
mov     esi, offset dword_4a68a8
lea     edi, [esp+2ch+var_24]
rep movsd
mov     eax, [esp+2ch+arg_0]
mov     [esp+2ch+var_4], eax
push    eax
call    sub_461f70
mov     [esp+30h+var_c], eax
add     esp, 4
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_434fcc
mov     eax, [esp+2ch+var_c]
push    eax
call    sub_426a80
mov     [esp+30h+var_8], eax
add     esp, 4
jmp     short loc_434fd4
mov     [esp+2ch+var_c], 0
inc     ds:word_4a68b2
push    24h
mov     cx, ds:word_4a68b2
lea     eax, [esp+30h+var_24]
push    eax
mov     edx, ds:dword_4a6888
push    ecx
push    edx
call    sub_45ca00
add     esp, 10h
pop     edi
pop     esi
add     esp, 24h
retn
sub     esp, 24h
cmp     ds:word_4a68b2, 0
push    esi
push    edi
jnz     short loc_435017
xor     eax, eax
pop     edi
pop     esi
add     esp, 24h
retn
mov     cx, ds:word_4a68b2
push    24h
lea     eax, [esp+30h+var_24]
mov     edx, ds:dword_4a6888
push    eax
push    ecx
mov     eax, [edx]
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jnz     short loc_435043
xor     eax, eax
pop     edi
pop     esi
add     esp, 24h
retn
mov     eax, [esp+2ch+var_24]
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jnz     short loc_43505c
xor     eax, eax
pop     edi
pop     esi
add     esp, 24h
retn
mov     eax, [esp+2ch+arg_0]
cmp     [esp+2ch+var_4], eax
jz      short loc_43506e
xor     eax, eax
pop     edi
pop     esi
add     esp, 24h
retn
mov     ax, ds:word_4a68b2
mov     ecx, ds:dword_4a6888
push    eax
mov     edi, offset dword_4a68a8
push    ecx
call    sub_45cc50
dec     ds:word_4a68b2
lea     esi, [esp+34h+var_24]
add     esp, 8
mov     ecx, 6
rep movsd
mov     ecx, [esp+2ch+var_24]
mov     edx, [esp+2ch+var_c]
push    edx
mov     ds:dword_4a68c0, ecx
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_4350d4
mov     eax, [esp+2ch+var_8]
mov     ecx, [esp+2ch+var_c]
push    eax
push    ecx
call    sub_426aa0
add     esp, 8
push    0
push    0ch
call    sub_441c60
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
add     esp, 24h
retn
mov     cx, ds:word_4a68b2
sub     esp, 24h
sub     cx, [esp+24h+arg_0]
test    cx, cx
jg      short loc_435104
mov     eax, [esp+24h+arg_4]
mov     dword ptr [eax], 0
xor     eax, eax
add     esp, 24h
retn
lea     eax, [esp+24h+var_24]
push    24h
push    eax
push    ecx
mov     ecx, ds:dword_4a6888
mov     edx, [ecx]
push    edx
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      short loc_435133
mov     ecx, [esp+24h+var_4]
mov     eax, [esp+24h+arg_4]
mov     [eax], ecx
mov     eax, [esp+24h+var_24]
add     esp, 24h
retn
mov     eax, [esp+24h+arg_4]
mov     dword ptr [eax], 0
xor     eax, eax
add     esp, 24h
retn
cmp     ds:word_4a68b2, 0
jbe     short locret_435177
mov     ax, ds:word_4a68b2
mov     ecx, ds:dword_4a6888
push    eax
push    ecx
call    sub_45cc50
dec     ds:word_4a68b2
add     esp, 8
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    eax
push    0
call    sub_4350e0
add     esp, 8
test    eax, eax
jz      short loc_4351a0
mov     ecx, [esp+4+arg_0]
cmp     [esp+4+var_4], ecx
jz      short loc_4351a2
xor     eax, eax
add     esp, 4
retn
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+lpstring]
push    edi
call    ds:lstrlena
mov     esi, [esp+10h+arg_4]
mov     ebp, [esp+10h+hmem]
mov     ebx, eax
push    2
mov     eax, [esi]
add     eax, ebx
push    eax
push    ebp
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_4351e4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
lea     eax, [ebx+1]
push    eax
push    edi
mov     eax, [esi]
add     eax, [ebp+0]
dec     eax
push    eax
call    _memcpy
add     esp, 0ch
mov     eax, 1
add     [esi], ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 1a4h
push    ebx
push    esi
push    edi
push    ebp
push    42h
push    1
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_435247
mov     eax, [esp+1b4h+arg_0]
push    eax
call    sub_41afc0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1a4h
retn
xor     bp, bp
mov     ebx, 22h
mov     [esp+1b4h+var_1a4], 1
mov     ax, bp
lea     ecx, [esp+1b4h+var_1a0]
inc     bp
push    ecx
push    eax
call    sub_4350e0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      loc_435393
mov     eax, [esp+1b4h+var_1a0]
push    eax
call    sub_462480
dec     ax
lea     ecx, [esp+1b8h+buffer]
add     esp, 4
push    eax
push    1b3ch
push    19ah
push    ecx
call    sub_47fe70
lea     ecx, [esp+1c4h+buffer]
lea     edx, [esp+1c4h+var_1a4]
add     esp, 10h
push    ecx
push    edx
push    esi
call    sub_4351b0
lea     ecx, [esp+1c0h+var_1a4]
add     esp, 0ch
push    offset asc_4ad8f8
push    ecx
push    esi
call    sub_4351b0
lea     ecx, [esp+1c0h+buffer]
mov     edx, [esp+1c0h+var_1a0]
add     esp, 0ch
push    19ah
push    ecx
push    edx
call    sub_486100
lea     ecx, [esp+1c0h+buffer]
lea     edx, [esp+1c0h+var_1a4]
add     esp, 0ch
push    ecx
push    edx
push    esi
call    sub_4351b0
lea     ecx, [esp+1c0h+var_1a4]
add     esp, 0ch
push    offset acalledfrom
push    ecx
push    esi
call    sub_4351b0
add     esp, 0ch
push    edi
call    sub_462480
dec     ax
lea     ecx, [esp+1b8h+buffer]
add     esp, 4
push    eax
push    1b3ch
push    19ah
push    ecx
call    sub_47fe70
lea     ecx, [esp+1c4h+buffer]
lea     edx, [esp+1c4h+var_1a4]
add     esp, 10h
push    ecx
push    edx
push    esi
call    sub_4351b0
lea     ecx, [esp+1c0h+var_1a4]
add     esp, 0ch
push    offset asc_4ad8f8
push    ecx
push    esi
call    sub_4351b0
lea     ecx, [esp+1c0h+buffer]
add     esp, 0ch
push    19ah
push    ecx
push    edi
call    sub_486100
lea     ecx, [esp+1c0h+buffer]
lea     edx, [esp+1c0h+var_1a4]
add     esp, 0ch
push    ecx
push    edx
push    esi
call    sub_4351b0
lea     ecx, [esp+1c0h+buffer]
lea     edx, [esp+1c0h+var_1a4]
mov     [esp+1c0h+var_19b], 0dh
mov     [esp+1c0h+var_19a], 0
mov     [esp+1c0h+buffer], bl
add     esp, 0ch
push    ecx
push    edx
push    esi
call    sub_4351b0
add     esp, 0ch
jmp     loc_435257
mov     eax, [esp+1b4h+arg_0]
push    esi
push    eax
call    sub_41af50
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1a4h
retn
cmp     ds:dword_4a68c4, 0
jnz     short loc_4353ec
cmp     ds:frequency, 0
jz      short loc_4353ec
mov     eax, ds:dword_4a68ae
cmp     eax, 6
ja      short def_4353d4
xor     ecx, ecx
mov     cl, ds:byte_435400[eax]
jmp     ds:jpt_4353d4[ecx*4]
cmp     ds:dword_4a686c, 1
sbb     eax, eax
inc     eax
retn
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, ds:dword_4a68ae
cmp     eax, 3
jl      short loc_43541f
cmp     eax, 4
jle     short loc_435425
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, ds:dword_4a68ae
sub     eax, 7
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
mov     eax, ds:dword_4a68b8
retn
mov     eax, ds:dword_4a68b4
retn
mov     eax, ds:dword_4a68bc
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     si, 1
jnz     short loc_43547f
xor     eax, eax
pop     esi
retn
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_4354af
push    esi
call    sub_461cc0
add     esp, 4
test    eax, eax
jz      short loc_4354a8
push    esi
call    sub_43c950
add     esp, 4
test    eax, eax
jnz     short loc_4354af
mov     eax, 1
pop     esi
retn
push    esi
call    sub_4635c0
add     esp, 4
cmp     eax, 1
sbb     eax, eax
pop     esi
inc     eax
retn
mov     eax, ds:dword_4a68a4
retn
mov     eax, ds:dword_4a68a0
retn
mov     eax, ds:dword_4a689c
retn
sub     esp, 20h
cmp     ds:dword_4a68ae, 2
jz      short loc_435502
xor     eax, eax
add     esp, 20h
retn
mov     ecx, [esp+20h+arg_0]
test    ecx, ecx
jz      short loc_435530
lea     edx, [esp+20h+var_14]
mov     eax, [ecx]
mov     [esp+20h+var_20], 7
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     cx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], cx
jmp     short loc_435540
mov     [esp+20h+var_20], 8
mov     eax, [esp+20h+arg_4]
mov     [esp+20h+var_6], eax
mov     eax, ds:dword_4a68a8
lea     ecx, [esp+20h+var_20]
mov     [esp+20h+var_1c], eax
push    ecx
call    sub_4357f0
add     esp, 24h
retn
sub     esp, 20h
cmp     ds:dword_4a68ae, 8
jz      short loc_435572
xor     eax, eax
add     esp, 20h
retn
mov     eax, [esp+20h+arg_0]
mov     ecx, ds:dword_4a68a8
lea     edx, [esp+20h+var_20]
mov     [esp+20h+var_6], eax
mov     [esp+20h+var_1c], ecx
push    edx
mov     [esp+24h+var_20], 8
call    sub_4357f0
add     esp, 4
mov     eax, 1
add     esp, 20h
retn
sub     esp, 8
mov     ds:dword_4a68ae, 5
push    esi
push    edi
mov     edi, ds:dword_4a68c0
mov     esi, [esp+10h+arg_0]
push    esi
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
mov     ds:dword_4a68a8, esi
mov     ds:dword_4a68c0, esi
push    edi
push    esi
call    sub_463480
add     esp, 8
test    eax, eax
jnz     short loc_43562a
mov     eax, ds:dword_4a6770+2
movsx   ecx, di
mov     edx, [eax]
test    byte ptr [edx+ecx*4+7], 1
jz      short loc_43560e
push    edi
push    10h
call    sub_441bb0
add     esp, 8
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
test    byte ptr [edx+ecx*4+7], 1
jz      short loc_43562a
push    esi
push    10h
call    sub_441bb0
add     esp, 8
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_43564c
push    2080780h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_435663
mov     word ptr [esp+10h+var_4], 4
mov     eax, [esp+10h+var_4]
push    1
push    eax
push    esi
call    sub_427480
add     esp, 0ch
pop     edi
pop     esi
add     esp, 8
retn
sub     esp, 8
mov     eax, ds:dword_4a68a8
cmp     ds:dword_4a68ae, 5
mov     word ptr [esp+8+var_4], 4
mov     [esp+8+var_8], eax
jz      short loc_435692
xor     eax, eax
add     esp, 8
retn
cmp     [esp+8+arg_0], 0
jnz     short loc_4356b5
mov     eax, [esp+8+var_4]
mov     ecx, [esp+8+var_8]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jz      short loc_4356b5
xor     eax, eax
add     esp, 8
retn
push    4
mov     eax, ds:dword_4a68a8
push    eax
call    sub_43ad00
add     esp, 8
mov     eax, 1
mov     ds:dword_4a68ae, 6
add     esp, 8
retn
sub     esp, 20h
push    ebx
push    esi
mov     ebx, [esp+28h+arg_4]
push    edi
push    ebp
push    ebx
call    sub_461f70
add     esp, 4
push    0
push    13h
call    sub_441bb0
mov     edi, [esp+38h+arg_0]
add     esp, 8
mov     ebp, edi
mov     ds:dword_4a68c0, ebx
push    edi
call    sub_461f70
add     esp, 4
mov     esi, eax
push    edi
push    ebx
call    sub_463480
add     esp, 8
test    eax, eax
jnz     short loc_435775
mov     eax, ds:dword_4a6770+2
movsx   ecx, bp
mov     edx, [eax]
test    byte ptr [edx+ecx*4+7], 1
jz      short loc_435741
push    ebp
push    10h
call    sub_441c60
add     esp, 8
lea     eax, [esp+30h+var_20]
mov     [esp+30h+var_1c], ebp
push    eax
mov     ebp, esi
mov     [esp+34h+var_20], 0eh
call    sub_4357f0
add     esp, 4
push    esi
call    sub_461f70
add     esp, 4
mov     esi, eax
push    ebp
push    ebx
call    sub_463480
add     esp, 8
test    eax, eax
jz      short loc_435725
push    ebx
call    sub_461f70
add     esp, 4
mov     esi, eax
push    ebx
push    edi
call    sub_463480
add     esp, 8
test    eax, eax
jnz     short loc_4357e3
mov     ebp, 100h
mov     eax, ds:dword_4a6770+2
movsx   ecx, bx
mov     edx, [eax]
test    [edx+ecx*4+6], bp
jz      short loc_4357af
push    ebx
push    10h
call    sub_441c60
add     esp, 8
lea     eax, [esp+30h+var_20]
mov     [esp+30h+var_1c], ebx
push    eax
mov     ebx, esi
mov     [esp+34h+var_20], 0fh
call    sub_4357f0
add     esp, 4
push    esi
call    sub_461f70
add     esp, 4
mov     esi, eax
push    ebx
push    edi
call    sub_463480
add     esp, 8
test    eax, eax
jz      short loc_435793
call    sub_441d20
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
call    sub_462480
movsx   eax, ax
add     esp, 4
mov     eax, dword_4ad8b0[eax*4]
test    eax, eax
jz      short loc_435817
push    esi
call    eax
add     esp, 4
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
cmp     dword ptr [eax], 0
jnz     short loc_435861
mov     eax, [eax+4]
push    eax
call    sub_461cc0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_435861
push    esi
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
mov     ds:dword_4a68a8, esi
mov     ds:dword_4a68c0, esi
mov     ds:dword_4a68ae, 0
xor     eax, eax
pop     esi
retn
push    ebx
push    esi
push    edi
mov     ebx, ds:dword_4a68c0
push    1
xor     esi, esi
call    sub_435670
add     esp, 4
push    esi
push    12h
call    sub_43bd70
mov     di, [esp+14h+arg_4]
add     esp, 8
mov     ds:dword_4a689c, esi
mov     ds:dword_4a68a0, esi
push    edi
mov     ds:dword_4a68a4, esi
push    esi
push    esi
mov     esi, [esp+18h+arg_0]
push    esi
push    ebx
call    sub_435b40
add     esp, 14h
cmp     eax, esi
jz      short loc_4358c7
push    edi
push    esi
push    eax
call    sub_435e90
add     esp, 0ch
push    edi
push    0
push    0
push    esi
push    0ah
call    sub_435a80
add     esp, 14h
call    sub_436200
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    esi
push    3
push    eax
call    sub_461d30
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_435922
push    esi
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
mov     eax, 1
mov     ds:dword_4a68a8, esi
mov     ds:dword_4a68ae, 0
mov     ds:dword_4a68c0, esi
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_461f70
add     esp, 4
mov     edi, eax
push    1
push    12h
call    sub_43bd70
add     esp, 8
push    0
push    0
push    0
push    0
push    4
call    sub_435a80
add     esp, 14h
push    1
push    esi
push    0
push    edi
push    3
call    sub_435ac0
add     esp, 14h
mov     eax, ds:dword_4a68ae
mov     ecx, ds:dword_4a68c0
push    0
push    esi
push    eax
push    ecx
push    0bh
call    sub_435a80
add     esp, 14h
call    sub_436200
mov     eax, 1
pop     edi
pop     esi
retn
sub     esp, 4
push    esi
push    edi
mov     esi, ds:dword_4a68c0
push    1
call    sub_435670
add     esp, 4
push    1
push    12h
call    sub_43bd70
lea     eax, [esp+14h+var_4]
mov     edi, [esp+14h+arg_0]
add     esp, 8
push    3
push    eax
push    edi
push    0
push    esi
call    sub_435b40
add     esp, 14h
mov     esi, eax
push    esi
push    edi
call    sub_461e30
movsx   eax, ax
add     esp, 8
cmp     eax, 3
jz      short loc_4359f7
cmp     eax, 4
jz      loc_435a79
jmp     short loc_4359fd
xor     esi, esi
mov     [esp+0ch+var_4], esi
push    0
push    0
push    esi
push    edi
push    4
call    sub_435ac0
add     esp, 14h
cmp     [esp+0ch+var_4], 0
jz      short loc_435a52
push    2
push    0
push    0
push    edi
push    9
call    sub_435a80
add     esp, 14h
push    0
push    0
push    0
push    edi
push    5
call    sub_435a80
add     esp, 14h
push    0
push    0
push    0
push    esi
push    0ch
call    sub_435a80
add     esp, 14h
call    sub_436200
pop     edi
pop     esi
add     esp, 4
retn
push    3
push    0
push    0
push    edi
push    2
call    sub_435a80
add     esp, 14h
push    0
push    0
push    0
push    edi
push    0dh
call    sub_435a80
add     esp, 14h
call    sub_436200
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_8]
sub     esp, 14h
mov     [esp+14h+src], eax
mov     [esp+14h+var_10], ecx
mov     cx, [esp+14h+arg_10]
mov     eax, [esp+14h+arg_c]
mov     [esp+14h+var_4], cx
mov     [esp+14h+var_c], edx
lea     edx, [esp+14h+src]
mov     [esp+14h+var_8], eax
push    edx
call    sub_43bda0
add     esp, 18h
retn
mov     eax, [esp+arg_0]
push    ebx
mov     ecx, [esp+4+arg_4]
push    esi
push    edi
push    ebp
push    eax
push    ecx
call    sub_461d30
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_435b2c
mov     esi, ds:dword_4a68a0
mov     edi, ds:dword_4a689c
mov     ebx, ds:dword_4a68a4
mov     eax, [esp+10h+arg_10]
mov     ecx, [esp+10h+arg_c]
push    eax
mov     edx, [esp+14h+arg_8]
push    ecx
push    0
push    edx
push    6
call    sub_435a80
mov     ecx, [esp+24h+arg_4]
add     esp, 14h
push    0
push    ebp
push    0
push    ecx
push    3
call    sub_435a80
add     esp, 14h
push    ebx
push    esi
push    0
push    edi
push    6
call    sub_435a80
add     esp, 14h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+20h+arg_4]
test    edi, edi
jz      short loc_435b5e
push    edi
call    sub_461f70
mov     [esp+24h+var_4], eax
add     esp, 4
jmp     short loc_435b66
mov     [esp+20h+var_4], 0
xor     ebx, ebx
lea     eax, [esp+20h+var_e+2]
mov     word ptr [esp+20h+var_e], bx
push    eax
push    ebx
call    sub_4350e0
mov     esi, [esp+28h+arg_0]
mov     [esp+28h+var_8], eax
add     esp, 8
push    esi
call    sub_461f70
add     esp, 4
mov     ebp, eax
test    esi, esi
jz      loc_435cde
test    edi, edi
jz      short loc_435bb0
cmp     edi, esi
jz      short loc_435bb0
push    esi
push    edi
call    sub_463480
add     esp, 8
test    eax, eax
jnz     loc_435cde
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jnz     short loc_435be3
test    ebx, ebx
jz      short loc_435bd3
push    ebx
push    esi
call    sub_461e30
add     esp, 8
cmp     ax, 4
jz      short loc_435be3
push    1
push    0
push    ebx
push    esi
push    4
call    sub_435ac0
add     esp, 14h
mov     eax, [esp+20h+arg_10]
push    eax
push    edi
push    0
push    esi
push    2
call    sub_435a80
add     esp, 14h
cmp     [esp+20h+arg_8], 0
jz      short loc_435c07
cmp     [esp+20h+arg_8], ebp
jz      loc_435ce8
cmp     [esp+20h+var_e+2], esi
jnz     loc_435cc7
test    edi, edi
jz      short loc_435c32
cmp     ebp, [esp+20h+var_4]
jnz     short loc_435c32
mov     eax, [esp+20h+var_e+2]
push    ebp
push    eax
push    edi
call    sub_436b00
add     esp, 0ch
test    eax, eax
jnz     loc_435d05
push    ebp
call    sub_462480
sub     ax, 0ch
add     esp, 4
cmp     ax, 1
sbb     ebx, ebx
neg     ebx
test    ebx, ebx
jz      short loc_435c6c
push    1
push    0
push    esi
push    ebp
push    4
call    sub_435ac0
add     esp, 14h
push    0
push    0
push    0
push    ebp
push    5
call    sub_435a80
add     esp, 14h
test    byte ptr [esp+20h+arg_10], 1
jnz     short loc_435c77
test    ebx, ebx
jz      short loc_435c88
push    2
push    0
push    0
push    ebp
push    9
call    sub_435a80
add     esp, 14h
push    0
xor     ebx, ebx
push    0
push    0
push    esi
push    7
call    sub_435a80
mov     esi, [esp+34h+var_8]
add     esp, 14h
push    esi
call    sub_461f70
inc     word ptr [esp+24h+var_e]
add     esp, 4
mov     ebp, eax
lea     eax, [esp+20h+var_e+2]
mov     ecx, [esp+20h+var_e]
push    eax
push    ecx
call    sub_4350e0
mov     [esp+28h+var_8], eax
add     esp, 8
jmp     short loc_435cd6
mov     ebx, esi
push    ebp
mov     esi, ebp
call    sub_461f70
add     esp, 4
mov     ebp, eax
test    esi, esi
jnz     loc_435b96
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+var_e+2]
sub     eax, esi
cmp     eax, 1
mov     eax, [esp+20h+arg_c]
sbb     ecx, ecx
pop     ebp
neg     ecx
pop     edi
mov     [eax], ecx
mov     eax, esi
pop     esi
pop     ebx
add     esp, 10h
retn
push    0
push    edi
push    0
push    esi
push    8
call    sub_435a80
add     esp, 14h
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+arg_0]
push    edi
push    esi
xor     ebx, ebx
call    sub_461f70
mov     bx, [esp+30h+arg_8]
mov     [esp+30h+var_1c], esi
add     esp, 4
mov     edi, eax
and     ebx, 1
lea     eax, [esp+2ch+var_20]
mov     [esp+2ch+var_20], 6
push    eax
call    sub_4357f0
add     esp, 4
test    ebx, ebx
jz      short loc_435db5
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_435db5
push    esi
call    sub_42e390
add     esp, 4
cmp     eax, 2
jg      short loc_435db5
push    43h
push    esi
push    4060001h
push    esi
call    sub_462670
add     esp, 8
movzx   eax, ax
push    eax
call    sub_4441f0
add     esp, 0ch
push    0
push    esi
call    sub_43ad00
add     esp, 8
push    0ah
push    esi
call    sub_43ad00
add     esp, 8
push    esi
call    sub_4372d0
add     esp, 4
push    4
push    esi
call    sub_43ad00
add     esp, 8
test    ebx, ebx
jz      short loc_435dde
push    esi
call    sub_463500
add     esp, 4
test    eax, eax
jz      short loc_435dde
push    2
push    esi
call    sub_42e4c0
jmp     loc_435e61
push    esi
call    sub_463530
add     esp, 4
test    eax, eax
jz      short loc_435e64
mov     eax, [esp+2ch+arg_4]
push    eax
call    sub_463630
add     esp, 4
mov     ebx, eax
push    esi
call    sub_43d590
add     esp, 4
test    ax, ax
jz      short loc_435e28
cmp     ax, word ptr ds:dword_4a6af8
jnz     short loc_435e28
cmp     word ptr ds:dword_4a6af8, 1ffh
jl      short loc_435e21
call    sub_43d5c0
inc     word ptr ds:dword_4a6af8
test    ebx, ebx
jz      short loc_435e5a
cmp     edi, ebx
jz      short loc_435e5a
push    esi
call    sub_4635f0
add     esp, 4
test    eax, eax
jnz     short loc_435e5a
push    1000430h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 3
jnz     short loc_435e5a
push    esi
push    ebx
call    sub_42e6d0
jmp     short loc_435e61
push    esi
push    edi
call    sub_42e3e0
add     esp, 8
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
test    byte ptr [edx+ecx*4+7], 1
jz      short loc_435e80
push    esi
push    10h
call    sub_441c60
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+arg_4]
push    edi
call    sub_461f70
mov     bx, [esp+14h+arg_8]
mov     esi, [esp+14h+arg_0]
add     esp, 4
mov     ebp, eax
cmp     ebp, esi
jz      short loc_435ed4
push    ebx
push    ebp
push    esi
call    sub_435e90
add     esp, 0ch
push    ebp
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jnz     short loc_435ed4
push    edi
push    ebp
call    sub_435ef0
add     esp, 8
push    ebx
push    edi
push    esi
push    ebp
push    1
call    sub_435a80
add     esp, 14h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    0
push    0
push    0
push    esi
push    4
call    sub_435a80
mov     edi, [esp+1ch+arg_4]
add     esp, 14h
push    edi
call    sub_4635f0
add     esp, 4
test    eax, eax
jz      short loc_435f2b
push    1
push    edi
push    0
push    esi
push    3
call    sub_435ac0
add     esp, 14h
pop     edi
pop     esi
retn
push    edi
push    esi
call    sub_461e30
add     esp, 8
push    eax
push    esi
call    sub_461d30
add     esp, 8
push    0
push    0
push    0
push    eax
push    4
call    sub_435a80
add     esp, 14h
pop     edi
pop     esi
retn
mov     eax, [esp+arg_8]
push    esi
mov     esi, [esp+4+arg_0]
push    edi
sub     eax, esi
push    esi
cmp     eax, 1
sbb     edi, edi
call    sub_462480
neg     edi
movsx   edx, ax
add     esp, 4
sub     edx, 4
cmp     edx, 8
ja      short def_435f8f
xor     ecx, ecx
mov     cl, ds:byte_435ffc[edx]
jmp     ds:jpt_435f8f[ecx*4]
push    eax
push    esi
call    sub_434920
mov     ax, word ptr [esp+10h+arg_c]
mov     ecx, [esp+10h+arg_4]
add     esp, 8
push    eax
push    edi
push    ecx
push    esi
call    sub_436010
add     esp, 10h
jmp     short def_435f8f
mov     eax, [esp+8+arg_c]
mov     ecx, [esp+8+arg_4]
push    eax
push    ecx
push    esi
call    sub_436140
add     esp, 0ch
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
test    byte ptr [edx+ecx*4+7], 1
jz      short loc_435fe6
push    esi
push    10h
call    sub_441c60
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+arg_0]
push    edi
push    ebp
push    esi
call    sub_43d590
mov     bx, [esp+34h+arg_c]
add     esp, 4
test    bl, 1
mov     di, ax
jz      short loc_43604e
test    di, di
jnz     short loc_436043
push    esi
call    sub_426b70
add     esp, 4
test    eax, eax
jz      short loc_43604e
push    1
push    esi
call    sub_42e4c0
add     esp, 8
test    di, di
mov     edi, [esp+30h+arg_8]
jz      short loc_43606a
test    edi, edi
jnz     short loc_4360a7
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jz      short loc_4360a7
cmp     word ptr ds:dword_4a6af8, 1ffh
jl      short loc_43607a
call    sub_43d5c0
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
lea     ecx, [edx+ecx*4+4]
mov     ax, [ecx]
mov     dx, word ptr ds:dword_4a6af8
xor     dx, ax
and     dx, 1ffh
xor     dx, ax
mov     [ecx], dx
inc     word ptr ds:dword_4a6af8
cmp     word ptr ds:dword_4a6af8, 1ffh
jl      short loc_4360b7
call    sub_43d5c0
mov     ebp, [esp+30h+arg_4]
mov     eax, ds:dword_4a6770+2
mov     edx, [eax]
movsx   ecx, bp
lea     ecx, [edx+ecx*4+4]
mov     ax, [ecx]
mov     dx, word ptr ds:dword_4a6af8
xor     dx, ax
and     dx, 1ffh
xor     dx, ax
mov     [ecx], dx
inc     word ptr ds:dword_4a6af8
test    edi, edi
jnz     short loc_436107
lea     eax, [esp+30h+var_20]
mov     [esp+30h+var_1c], esi
mov     [esp+30h+var_20], 5
push    eax
call    sub_4357f0
add     esp, 4
jmp     short loc_436121
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_436121
push    0
push    esi
call    sub_433c40
add     esp, 8
push    ebx
push    ebp
push    esi
call    sub_434a20
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
test    [esp+arg_8], 1
push    ebx
push    esi
push    edi
push    ebp
jz      loc_4361ec
call    sub_43e100
mov     edi, eax
call    sub_48a1f0
mov     ebx, eax
test    edi, edi
jz      short loc_436173
mov     esi, [esp+10h+arg_0]
push    edi
push    esi
call    sub_42e920
add     esp, 8
mov     edi, eax
jmp     short loc_436177
mov     esi, [esp+10h+arg_0]
test    ebx, ebx
jz      short loc_436187
push    ebx
push    esi
call    sub_42e920
add     esp, 8
mov     ebx, eax
call    sub_4441e0
mov     eax, [esp+10h+arg_4]
push    eax
call    sub_461c50
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_4361ec
push    ebp
call    sub_43d590
mov     si, ax
add     esp, 4
test    si, si
jz      short loc_4361c6
push    0
push    esi
call    sub_43ad60
add     esp, 8
push    0
push    esi
call    sub_43d490
add     esp, 8
cmp     ebp, edi
jnz     short loc_4361d4
push    0
call    sub_43e090
add     esp, 4
cmp     ebx, ebp
jnz     short loc_4361dd
call    sub_48aaa0
push    ebp
call    sub_461c50
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_43619f
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 14h
lea     eax, [esp+14h+var_14]
push    eax
call    sub_43be80
add     esp, 4
test    eax, eax
jz      short loc_436239
mov     eax, [esp+14h+var_4]
mov     ecx, [esp+14h+var_8]
mov     edx, [esp+14h+var_c]
push    eax
mov     eax, [esp+18h+var_10]
push    ecx
mov     ecx, [esp+1ch+var_14]
push    edx
push    eax
push    ecx
call    sub_436250
add     esp, 14h
test    eax, eax
jnz     short loc_436203
call    sub_441d20
add     esp, 14h
retn
mov     eax, [esp+arg_0]
push    esi
dec     eax
cmp     eax, 0ch
ja      short def_43625b
jmp     ds:jpt_43625b[eax*4]
mov     eax, [esp+4+arg_10]
mov     ecx, [esp+4+arg_8]
mov     esi, [esp+4+arg_c]
push    eax
mov     eax, [esp+8+arg_4]
push    ecx
push    esi
push    eax
call    sub_435f60
add     esp, 10h
mov     eax, 1
pop     esi
retn
mov     eax, [esp+4+arg_10]
mov     esi, [esp+4+arg_c]
mov     ecx, [esp+4+arg_4]
push    eax
push    esi
push    ecx
call    sub_435d20
add     esp, 0ch
mov     eax, 1
pop     esi
retn
mov     esi, [esp+4+arg_c]
push    esi
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
xor     eax, eax
mov     ds:dword_4a68a8, esi
mov     ds:dword_4a68ae, 0
mov     ds:dword_4a68c0, esi
pop     esi
retn
cmp     word ptr ds:dword_4a6af8, 1ffh
jl      short loc_4362e0
call    sub_43d5c0
mov     dx, word ptr ds:dword_4a6af8
mov     esi, [esp+4+arg_4]
inc     word ptr ds:dword_4a6af8
test    esi, esi
jz      short def_43625b
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     esi, [eax]
lea     ecx, [esi+ecx*4+4]
pop     esi
mov     ax, [ecx]
xor     dx, ax
and     dx, 1ffh
xor     dx, ax
mov     eax, 1
mov     [ecx], dx
retn
mov     esi, [esp+4+arg_4]
push    esi
call    sub_426390
add     esp, 4
mov     eax, 1
pop     esi
retn
mov     esi, [esp+4+arg_4]
mov     eax, [esp+4+arg_c]
push    0
mov     ds:dword_4a689c, esi
push    17h
mov     ds:dword_4a68a0, eax
mov     eax, [esp+0ch+arg_10]
and     eax, 0ffffh
mov     ds:dword_4a68a4, eax
call    sub_441c60
add     esp, 8
mov     eax, 1
pop     esi
retn
mov     esi, [esp+4+arg_4]
push    esi
call    sub_436560
add     esp, 4
mov     eax, 1
pop     esi
retn
mov     esi, [esp+4+arg_c]
mov     eax, [esp+4+arg_4]
push    esi
push    eax
call    sub_4364f0
add     esp, 8
mov     eax, 1
pop     esi
retn
mov     eax, [esp+4+arg_10]
mov     esi, [esp+4+arg_4]
and     eax, 0ffffh
push    eax
push    esi
call    sub_42e4c0
add     esp, 8
mov     eax, 1
pop     esi
retn
mov     esi, [esp+4+arg_4]
push    esi
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
mov     ds:dword_4a68a8, esi
mov     ds:dword_4a68c0, esi
mov     eax, [esp+4+arg_8]
push    esi
mov     ds:dword_4a68ae, eax
call    sub_4635f0
add     esp, 4
test    eax, eax
jz      def_43625b
mov     eax, [esp+4+arg_10]
push    eax
push    esi
call    sub_431d80
add     esp, 8
mov     eax, 1
pop     esi
retn
mov     esi, [esp+4+arg_4]
push    esi
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
mov     ds:dword_4a68a8, esi
mov     ds:dword_4a68c0, esi
mov     eax, [esp+4+arg_8]
push    1
mov     ecx, [esp+8+arg_c]
mov     ds:dword_4a68ae, eax
push    ecx
call    sub_434c50
add     esp, 8
mov     eax, 1
pop     esi
retn
mov     esi, [esp+4+arg_4]
push    esi
call    sub_434d10
add     esp, 4
test    eax, eax
jnz     short loc_43648a
push    esi
call    sub_461f70
add     esp, 4
push    eax
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
push    esi
call    sub_461f70
add     esp, 4
mov     ds:dword_4a68a8, eax
push    esi
call    sub_461f70
add     esp, 4
mov     ds:dword_4a68c0, eax
mov     ds:dword_4a68ae, 1
xor     eax, eax
pop     esi
retn
mov     esi, [esp+4+arg_4]
push    esi
call    sub_462480
mov     ds:word_4a68ac, ax
add     esp, 4
xor     eax, eax
mov     ds:dword_4a68a8, esi
mov     ds:dword_4a68ae, 1
mov     ds:dword_4a68c0, esi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
push    esi
call    sub_461f70
mov     edi, [esp+18h+arg_4]
add     esp, 4
mov     ebx, eax
push    edi
call    sub_461f70
add     esp, 4
mov     ebp, eax
lea     eax, [esp+14h+var_4]
push    eax
push    0
call    sub_4350e0
add     esp, 8
test    eax, eax
jz      short loc_436556
cmp     [esp+14h+var_4], esi
jnz     short loc_436556
cmp     ebp, ebx
jnz     short loc_436556
push    ebp
push    esi
push    edi
call    sub_436b00
add     esp, 0ch
test    eax, eax
jz      short loc_436556
push    edi
call    sub_4366e0
add     esp, 4
push    0
push    13h
call    sub_441bb0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    eax
push    0
call    sub_4350e0
add     esp, 8
test    eax, eax
jz      short loc_436591
mov     eax, [esp+4+arg_0]
cmp     eax, [esp+4+var_4]
jnz     short loc_436591
call    sub_435150
push    0
push    13h
call    sub_441bb0
add     esp, 8
add     esp, 4
retn
lea     ecx, [esp+arg_0]
sub     esp, 4
mov     edx, ds:dword_4a6888
lea     eax, [esp+4+var_4]
push    eax
push    ecx
push    offset loc_4365d0
push    edx
call    sub_45cca0
add     esp, 10h
cmp     ax, 1
sbb     eax, eax
add     esp, 4
inc     eax
retn
mov     eax, [esp+10h]
push    esi
mov     ecx, [esp+0ch]
mov     esi, [eax]
cmp     [ecx+20h], esi
jz      short loc_4365e7
mov     eax, 1
pop     esi
retn
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 0dh
jnz     short loc_436610
push    2020308h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_436610
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 8
push    eax
call    sub_461f70
lea     ecx, [esp+0ch+var_8]
mov     [esp+0ch+var_8], eax
lea     eax, [esp+0ch+var_4]
add     esp, 4
mov     edx, ds:dword_4a6888
push    eax
push    ecx
push    offset loc_436660
push    edx
call    sub_45cca0
add     esp, 10h
cmp     ax, 1
sbb     eax, eax
add     esp, 8
inc     eax
retn
mov     eax, [esp+10h]
push    esi
mov     ecx, [esp+0ch]
push    edi
mov     edi, [eax]
mov     esi, [ecx]
test    esi, esi
jz      short loc_4366a0
cmp     esi, edi
jz      short loc_4366a0
push    edi
push    esi
call    sub_463480
add     esp, 8
test    eax, eax
jz      short loc_4366a0
push    esi
push    edi
call    sub_4366b0
add     esp, 8
push    eax
call    sub_4635f0
add     esp, 4
test    eax, eax
jz      short loc_4366a0
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     edi, [esp+8+arg_4]
push    edi
call    sub_461f70
add     esp, 4
cmp     eax, esi
jz      short loc_4366cf
test    eax, eax
jz      short loc_4366d4
mov     edi, eax
jmp     short loc_4366ba
mov     eax, edi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
mov     cx, ds:word_4a68b2
sub     esp, 24h
mov     edx, ds:dword_4a6888
push    esi
lea     eax, [esp+28h+var_24]
push    edi
push    24h
push    eax
push    ecx
mov     eax, [edx]
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      short loc_43674b
mov     eax, [esp+2ch+var_4]
push    eax
call    sub_461f70
mov     esi, [esp+30h+arg_0]
add     esp, 4
mov     edi, eax
push    esi
call    sub_461f70
add     esp, 4
cmp     edi, eax
jnz     short loc_43674b
mov     cx, ds:word_4a68b2
push    24h
lea     eax, [esp+30h+var_24]
mov     edx, ds:dword_4a6888
mov     [esp+30h+var_4], esi
push    eax
push    ecx
push    edx
call    sub_45ca00
add     esp, 10h
pop     edi
pop     esi
add     esp, 24h
retn
mov     ds:dword_4a6896, 0
mov     eax, [esp+arg_0]
mov     ds:dword_4a6892, eax
retn
cmp     ds:dword_4a6892, 0
jz      short loc_4367a2
cmp     ds:dword_4a6896, 0
jnz     short loc_4367a2
mov     ds:dword_4a6896, 1
mov     eax, 1
retn
xor     eax, eax
retn
cmp     ds:dword_4a6892, 0
jz      short loc_4367c8
cmp     ds:dword_4a6896, 0
jz      short loc_4367c8
mov     eax, 1
retn
xor     eax, eax
retn
cmp     ds:dword_4a688e, 0
jz      short loc_4367ff
push    2000308h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4367ff
mov     eax, 1
retn
xor     eax, eax
retn
sub     esp, 10h
xor     eax, eax
mov     ax, ds:word_4a8518
push    2000308h
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_436865
mov     eax, [esp+10h+arg_0]
cmp     ds:dword_4a688e, eax
jz      short loc_436865
mov     ds:dword_4a688e, eax
test    eax, eax
jnz     short loc_436865
mov     [esp+10h+var_10], 5
mov     [esp+10h+var_8], offset sub_436870
lea     eax, [esp+10h+var_10]
push    eax
call    sub_434ac0
add     esp, 4
add     esp, 10h
retn
push    1
call    sub_422640
add     esp, 4
retn
mov     eax, [esp+arg_0]
test    eax, eax
jge     short loc_43688c
xor     eax, eax
jmp     short loc_436896
cmp     eax, 64h
jle     short loc_436896
mov     eax, 64h
movsx   ecx, ds:word_4a687c
cmp     ecx, eax
jz      locret_436971
mov     ds:word_4a687c, ax
test    eax, eax
jnz     short loc_4368ea
cmp     ds:dword_4a6860, 0
jz      short loc_4368db
push    0
xor     eax, eax
mov     ax, word_4ad9ac
push    0
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a6884
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
mov     ds:word_4a6884, ax
mov     ds:dword_4a6860, eax
jmp     short loc_436953
cmp     ds:dword_4a6860, 0
jnz     short loc_436953
push    2
push    194h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a6860, eax
mov     ds:dword_4a6880, 0
mov     ds:word_4a687e, 0
call    sub_43cd40
mov     ds:word_4a6884, ax
push    194h
mov     cx, ds:word_4a6884
mov     eax, ds:dword_4a6860
push    eax
push    ecx
call    sub_43cda0
add     esp, 0ch
mov     edx, ds:dword_4a6860
mov     ecx, [edx]
test    ecx, ecx
jz      short loc_436953
mov     eax, ds:dword_4a68c0
mov     [ecx], eax
push    798bh
push    11h
call    sub_441c60
add     esp, 8
push    799dh
push    11h
call    sub_441c60
add     esp, 8
retn
movsx   eax, ds:word_4a687c
retn
cmp     ds:dword_4a6860, 0
jz      short locret_4369f4
mov     eax, ds:dword_4a6860
mov     ecx, [eax]
test    ecx, ecx
jz      short locret_4369f4
inc     ds:word_4a687e
cmp     ds:word_4a687e, 64h
jle     short loc_4369c8
mov     ds:dword_4a6880, 1
mov     ds:word_4a687e, 0
mov     eax, [esp+arg_0]
push    798bh
movsx   edx, ds:word_4a687e
push    11h
mov     [ecx+edx*4], eax
call    sub_441c60
add     esp, 8
push    799dh
push    11h
call    sub_441c60
add     esp, 8
retn
xor     eax, eax
cmp     ds:dword_4a6860, eax
jz      short locret_436a47
mov     cx, [esp+arg_0]
cmp     cx, ax
jl      short locret_436a47
cmp     ds:word_4a687c, cx
jl      short locret_436a47
mov     dx, ds:word_4a687e
sub     dx, cx
jns     short loc_436a35
cmp     ds:dword_4a6880, eax
jz      short locret_436a47
add     dx, 65h
mov     ecx, ds:dword_4a6860
mov     ecx, [ecx]
test    ecx, ecx
jz      short locret_436a47
movsx   eax, dx
mov     eax, [ecx+eax*4]
retn
push    esi
xor     eax, eax
mov     ax, ds:word_4a689a
xor     esi, esi
mov     si, ds:word_4a8518
shl     esi, 10h
or      esi, eax
test    ax, ax
jz      short loc_436a91
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_436a91
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 8
jnz     short loc_436a91
push    esi
call    sub_42ed10
add     esp, 4
pop     esi
retn
movsx   eax, ds:word_4a689a
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_436af3
mov     eax, esi
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
mov     al, 2
push    eax
push    esi
call    sub_463480
add     esp, 8
test    eax, eax
jnz     short loc_436af3
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 8
jnz     short loc_436af3
mov     ds:word_4a689a, si
pop     esi
retn
mov     eax, [esp+arg_8]
push    esi
xor     esi, esi
push    eax
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 4
jz      short loc_436b21
cmp     eax, 0ch
jz      short loc_436b43
mov     eax, esi
pop     esi
retn
mov     eax, ds:dword_4a6770+2
movsx   ecx, word ptr [esp+4+arg_0]
mov     edx, [eax]
mov     ax, [edx+ecx*4+4]
and     ah, 60h
cmp     ah, 60h
jnz     short loc_436b6a
mov     esi, 1
mov     eax, esi
pop     esi
retn
mov     eax, [esp+4+arg_0]
push    eax
call    sub_4635f0
add     esp, 4
test    eax, eax
jz      short loc_436b6a
mov     eax, [esp+4+arg_4]
push    eax
call    sub_4635f0
add     esp, 4
test    eax, eax
jz      short loc_436b6a
mov     esi, 1
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_437080
add     esp, 4
test    eax, eax
jz      short loc_436b8b
push    esi
call    sub_436b90
add     esp, 4
pop     esi
retn
cmp     ds:word_4a68d0, 14h
jge     short loc_436bcb
movsx   edx, ds:word_4a68d0
shl     edx, 4
mov     ecx, [esp+arg_0]
add     edx, offset dword_4a68d2
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
inc     ds:word_4a68d0
call    ds:gettickcount
mov     ds:dword_4a68c8, eax
retn
sub     esp, 20h
lea     eax, [esp+20h+var_20]
push    esi
mov     esi, [esp+24h+arg_0]
push    eax
mov     [esp+28h+var_20], 1
mov     [esp+28h+var_18], 0
mov     [esp+28h+var_1c], esi
call    sub_436b90
add     esp, 4
test    [esp+24h+var_1c], 0fffe0000h
jnz     short loc_436c3e
push    esi
push    2
call    sub_459a90
add     esp, 8
test    al, al
jz      short loc_436c3e
mov     [esp+24h+var_10], 2
movsx   eax, al
lea     ecx, [esp+24h+var_10]
mov     [esp+24h+var_4], eax
push    ecx
call    sub_436b90
add     esp, 4
mov     [esp+24h+var_20], 0
lea     eax, [esp+24h+var_20]
push    eax
call    sub_436b90
add     esp, 4
pop     esi
add     esp, 20h
retn
cmp     ds:word_4a68d0, 0
push    esi
jle     short loc_436ce0
mov     esi, [esp+4+arg_0]
mov     eax, ds:dword_4a68d2
mov     ecx, offset dword_4a68d2
mov     [esi], eax
mov     edx, [ecx+4]
mov     [esi+4], edx
mov     eax, [ecx+8]
mov     [esi+8], eax
mov     ecx, [ecx+0ch]
mov     [esi+0ch], ecx
dec     ds:word_4a68d0
movsx   eax, ds:word_4a68d0
shl     eax, 4
push    eax
push    offset word_4a68e2
push    offset dword_4a68d2
call    _memcpy
add     esp, 0ch
cmp     dword ptr [esi], 1
jnz     short loc_436cd9
mov     eax, [esi+4]
push    eax
call    sub_459970
add     esp, 4
test    eax, eax
jnz     short loc_436cd9
mov     eax, ds:dword_4a68cc
mov     ds:dword_4a6a12, eax
mov     ecx, [esi+4]
mov     ds:dword_4a68cc, ecx
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
movsx   eax, ds:word_4a68d0
shl     eax, 4
push    eax
push    offset dword_4a68d2
push    offset word_4a68e2
call    _memcpy
mov     ecx, [esp+0ch+arg_0]
add     esp, 0ch
mov     edx, offset dword_4a68d2
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     eax, [ecx+0ch]
inc     ds:word_4a68d0
mov     [edx+0ch], eax
cmp     dword ptr [ecx], 1
jnz     short locret_436d52
mov     eax, [ecx+4]
push    eax
call    sub_459970
add     esp, 4
test    eax, eax
jnz     short locret_436d52
mov     eax, ds:dword_4a6a12
mov     ds:dword_4a68cc, eax
retn
mov     ds:word_4a68d0, 0
retn
sub     esp, 10h
push    esi
call    sub_435410
test    eax, eax
jnz     short loc_436d84
xor     eax, eax
pop     esi
add     esp, 10h
retn
lea     eax, [esp+14h+var_10]
push    eax
call    sub_436c60
add     esp, 4
test    eax, eax
jz      loc_436e6e
cmp     [esp+14h+var_10], 1
jnz     short loc_436dba
cmp     [esp+14h+var_c], 0dh
jnz     short loc_436dba
call    sub_43c9b0
test    eax, eax
jz      short loc_436dba
mov     eax, 1
pop     esi
add     esp, 10h
retn
lea     eax, [esp+14h+var_10]
push    eax
call    sub_436f50
add     esp, 4
mov     esi, eax
mov     eax, [esp+14h+var_10]
test    eax, eax
jz      short loc_436de0
cmp     eax, 1
jz      short loc_436dfe
mov     eax, 1
pop     esi
add     esp, 10h
retn
mov     eax, [esp+14h+var_c]
and     eax, 1ffffh
push    eax
push    8
call    sub_441bb0
add     esp, 8
mov     eax, 1
pop     esi
add     esp, 10h
retn
mov     eax, [esp+14h+var_c]
push    eax
call    sub_459970
add     esp, 4
test    eax, eax
jnz     short loc_436e35
mov     eax, [esp+14h+var_c]
push    esi
push    eax
call    sub_436e80
add     esp, 8
test    eax, eax
jnz     short loc_436e35
lea     eax, [esp+14h+var_10]
push    eax
call    sub_436cf0
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 10h
retn
cmp     [esp+14h+var_8], 0
jnz     short loc_436e64
mov     eax, [esp+14h+var_c]
and     eax, 1ffffh
push    eax
push    8
call    sub_441bb0
mov     eax, [esp+1ch+var_c]
add     esp, 8
and     eax, 1ffffh
push    eax
push    9
call    sub_441bb0
add     esp, 8
mov     eax, 1
pop     esi
add     esp, 10h
retn
xor     eax, eax
pop     esi
add     esp, 10h
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_438140
add     esp, 4
test    eax, eax
jz      short loc_436e99
mov     eax, 1
pop     esi
retn
push    esi
call    sub_42f8d0
add     esp, 4
test    eax, eax
jz      short loc_436ead
mov     eax, 1
pop     esi
retn
push    esi
call    sub_436f30
add     esp, 4
test    eax, eax
jz      short loc_436ec1
mov     eax, 1
pop     esi
retn
push    esi
push    0
call    sub_4354f0
add     esp, 8
test    eax, eax
jnz     short loc_436f1d
cmp     [esp+4+arg_4], 0
jnz     short loc_436f1d
push    1
call    sub_435670
add     esp, 4
test    eax, eax
jz      short loc_436eec
mov     eax, 1
pop     esi
retn
call    sub_436780
test    eax, eax
jz      short loc_436efc
mov     eax, 1
pop     esi
retn
push    esi
call    sub_435560
add     esp, 4
test    eax, eax
jz      short loc_436f10
mov     eax, 1
pop     esi
retn
call    sub_435430
pop     esi
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, 1
pop     esi
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
cmp     ecx, 51h
jz      short loc_436f40
cmp     ecx, 71h
jnz     short locret_436f4d
test    ecx, 40000h
jz      short locret_436f4d
jmp     loc_437db0
retn
sub     esp, 0c8h
lea     eax, [esp+0c8h+var_c0]
push    ebx
push    esi
xor     ebx, ebx
push    edi
push    eax
call    sub_444560
lea     edx, [esp+0d8h+var_c8]
add     esp, 4
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     edx, [esp+0d4h+var_c4]
mov     ecx, [esp+0d4h+var_c8]
push    edx
push    ecx
call    sub_43b150
add     esp, 8
mov     esi, eax
cmp     esi, ebx
jz      loc_43701c
lea     edi, [esp+0d4h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
cmp     ds:frequency, eax
jz      short loc_436fbf
mov     eax, ds:frequency
push    eax
call    sub_474d50
mov     [esp+0d8h+duration], eax
add     esp, 4
jmp     short loc_436fc7
mov     [esp+0d4h+duration], 0
cmp     [esp+0d4h+duration], 0
jz      short loc_43700f
mov     ecx, [esp+0d4h+arg_0]
mov     eax, [ecx]
test    eax, eax
jz      short loc_437028
cmp     eax, 1
jz      short loc_437044
cmp     eax, 2
jz      short loc_43705b
mov     dx, [esp+0d4h+var_c0]
movsx   ecx, dx
lea     eax, [esp+0d4h+var_c0]
push    eax
push    ecx
push    esi
call    dword ptr [esi+6]
mov     ecx, [esp+0e0h+duration]
add     esp, 0ch
mov     ebx, eax
push    ecx
mov     eax, ds:frequency
push    eax
call    __beep_0
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
mov     dx, 66h
mov     eax, [ecx+4]
and     eax, 1ffffh
mov     [esp+0d4h+var_6], eax
mov     [esp+0d4h+var_28], ecx
jmp     short loc_436fea
mov     dx, 64h
mov     eax, [ecx+4]
mov     [esp+0d4h+var_6], eax
mov     [esp+0d4h+var_28], ecx
jmp     short loc_436fea
mov     dx, 67h
mov     eax, [ecx+0ch]
mov     [esp+0d4h+var_6], eax
mov     [esp+0d4h+var_28], ecx
jmp     loc_436fea
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
test    eax, eax
jz      short loc_437099
cmp     eax, 1
jz      short loc_4370b0
cmp     eax, 2
jz      short loc_4370e5
xor     eax, eax
pop     esi
retn
mov     eax, [esi+4]
push    eax
call    sub_459b80
add     esp, 4
test    eax, eax
jz      short loc_437095
mov     eax, 1
pop     esi
retn
mov     eax, [esi+4]
test    eax, 1ffffh
jz      short loc_437095
and     eax, 0ffefffffh
mov     [esi+4], eax
and     eax, 0ffdfffffh
push    eax
mov     [esi+4], eax
call    sub_458fc0
add     esp, 4
test    eax, eax
jz      short loc_4370de
and     dword ptr [esi+4], 0fffdffffh
mov     eax, 1
pop     esi
retn
mov     eax, 1
pop     esi
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
lea     edx, [esp+14h+var_8]
push    ebp
movsx   eax, word ptr [esi]
add     eax, esi
mov     ebp, [esp+18h+arg_4]
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
cmp     ebp, 0bh
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     edi, [esp+18h+var_8]
ja      short loc_43719a
xor     eax, eax
mov     al, ss:byte_4371d0[ebp]
jmp     ds:jpt_43712e[eax*4]
mov     cx, [esi+1ch]
mov     ebx, [esp+18h+arg_8]
mov     eax, [ebx+0ch]
push    eax
push    offset rcsrc2
push    ecx
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_437164
mov     eax, [esi+32h]
mov     ecx, [ebx+0ch]
push    eax
push    edi
push    ecx
call    sub_437580
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     ebx, [esi+1ch]
cmp     ebp, 7
jz      short loc_437183
lea     ebx, [esi+1eh]
mov     ax, [ebx]
push    edi
push    eax
call    sub_4375f0
mov     [ebx], ax
add     esp, 8
or      ds:byte_4a61d4, 1
mov     ebx, [esp+18h+arg_8]
push    ebx
push    ebp
push    esi
call    sub_40fd60
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 40h
push    esi
push    edi
mov     esi, [esp+48h+arg_0]
push    0
push    esi
call    sub_4373e0
add     esp, 8
test    eax, eax
jz      loc_4372ca
mov     word ptr [esp+48h+var_3c], 3
mov     [esp+48h+var_40], esi
mov     eax, [esp+48h+var_3c]
mov     ecx, [esp+48h+var_40]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jnz     short loc_437270
lea     edi, [esp+48h+src]
xor     eax, eax
mov     ecx, 0dh
rep stosd
stosw
mov     [esp+48h+src], 36h
mov     eax, 0fffffc18h
mov     [esp+48h+var_28], eax
mov     [esp+48h+var_2c], eax
mov     [esp+48h+var_20], eax
mov     [esp+48h+var_24], eax
call    sub_4441e0
mov     eax, [esp+48h+var_3c]
push    100000h
mov     ecx, [esp+4ch+var_40]
push    2
lea     edx, [esp+50h+src]
push    eax
push    ecx
push    offset sub_4370f0
push    edx
call    sub_43aa50
add     esp, 18h
push    9
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_4372ca
push    esi
call    sub_43d590
mov     si, ax
add     esp, 4
test    si, si
jz      short loc_4372ca
mov     eax, [esp+48h+var_3c]
mov     ecx, [esp+48h+var_40]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_4372ca
movsx   ecx, word ptr [eax]
mov     [ecx+eax-0a0h], si
push    offset dword_4a61c4
movsx   edx, word ptr [eax]
mov     dword ptr [edx+eax-8], 1
call    sub_412f60
add     esp, 4
pop     edi
pop     esi
add     esp, 40h
retn
mov     eax, [esp+arg_0]
push    3
push    eax
call    sub_43ad00
add     esp, 8
retn
sub     esp, 20h
lea     eax, [esp+20h+var_10]
push    esi
mov     esi, [esp+24h+arg_0]
push    eax
push    esi
call    sub_4374c0
add     esp, 8
test    eax, eax
jz      loc_4373cd
push    esi
call    sub_461f70
mov     [esp+28h+rcsrc2.left], eax
add     esp, 4
mov     word ptr [esp+24h+rcsrc2.top], 3
mov     eax, [esp+24h+rcsrc2.top]
mov     ecx, [esp+24h+rcsrc2.left]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_4373cd
mov     ecx, [esp+24h+arg_4]
test    ecx, ecx
jz      short loc_437394
lea     edx, [esp+24h+rcsrc2]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     eax, [ecx+0ch]
mov     [edx+0ch], eax
mov     eax, [ecx]
add     eax, 18h
cmp     [esp+24h+rcsrc2.right], eax
jge     short loc_43735f
mov     [esp+24h+rcsrc2.right], eax
mov     eax, [ecx+4]
add     eax, 18h
cmp     [esp+24h+rcsrc2.bottom], eax
jge     short loc_43736f
mov     [esp+24h+rcsrc2.bottom], eax
mov     eax, [esp+24h+rcsrc2.bottom]
mov     ecx, [esp+24h+rcsrc2.right]
mov     edx, [esp+24h+rcsrc2.top]
push    eax
mov     eax, [esp+28h+rcsrc2.left]
push    ecx
mov     cx, [esi+1eh]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [esi+1eh], ax
add     esp, 14h
mov     eax, [esp+24h+var_10.bottom]
mov     ecx, [esp+24h+var_10.right]
mov     edx, [esp+24h+var_10.top]
push    eax
mov     eax, [esp+28h+var_10.left]
push    ecx
mov     cx, [esi+1ch]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [esi+1ch], ax
add     esp, 14h
push    offset dword_4a61c4
call    sub_412f60
or      ds:byte_4a61d4, 1
add     esp, 4
pop     esi
add     esp, 20h
retn
lea     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    offset loc_437400
push    0
push    ecx
call    sub_4620e0
add     esp, 10h
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_4624e0
add     esp, 4
cmp     eax, 3
jnz     short loc_437446
push    10b0308h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_437446
mov     eax, [esp+4+arg_4]
cmp     dword ptr [eax], 0
jz      short loc_437442
push    1000102h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_437446
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
sub     esp, 10h
push    esi
mov     esi, [esp+14h+arg_0]
push    esi
call    sub_4624e0
add     esp, 4
cmp     eax, 3
jnz     short loc_4374b3
push    10b0308h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4374b3
lea     eax, [esp+14h+rcdst]
push    eax
push    esi
call    sub_424200
add     esp, 8
test    eax, eax
jz      short loc_4374b3
mov     eax, [esp+14h+rcdst.left]
mov     ecx, [esp+14h+arg_4]
add     eax, 0eh
mov     [ecx], eax
mov     eax, [esp+14h+rcdst.top]
add     eax, [esp+14h+rcdst.bottom]
pop     esi
cdq
sub     eax, edx
sar     eax, 1
mov     [ecx+4], eax
mov     eax, 1
add     esp, 10h
retn
xor     eax, eax
pop     esi
add     esp, 10h
retn
mov     ecx, [esp+arg_0]
sub     esp, 8
lea     eax, [esp+8+var_8]
push    eax
push    ecx
call    sub_437450
add     esp, 8
test    eax, eax
jz      short loc_43750d
mov     eax, [esp+8+var_8]
mov     ecx, [esp+8+arg_4]
sub     eax, 0ch
mov     [ecx], eax
mov     eax, [esp+8+var_8]
add     eax, 0ch
mov     [ecx+8], eax
mov     eax, [esp+8+var_4]
sub     eax, 0ch
mov     [ecx+4], eax
mov     eax, [esp+8+var_4]
add     eax, 0ch
mov     [ecx+0ch], eax
mov     eax, 1
add     esp, 8
retn
xor     eax, eax
add     esp, 8
retn
sub     esp, 8
lea     eax, [esp+8+var_8]
push    esi
mov     esi, [esp+0ch+arg_4]
push    eax
push    esi
call    sub_437450
add     esp, 8
test    eax, eax
jz      short loc_437573
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
mov     ax, [edx+ecx*4+6]
mov     ecx, 35h
and     ax, 0ffh
mov     edx, [esp+0ch+var_8]
cmp     ax, 1
mov     eax, [esp+0ch+var_4]
adc     ecx, 0ffffffffh
push    eax
push    edx
push    0
push    ecx
mov     ecx, [esp+1ch+hdc]
push    ecx
call    sub_47ffd0
add     esp, 14h
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_8]
sub     esp, 8
mov     edx, [esp+8+arg_4]
mov     [esp+8+var_8], eax
lea     eax, [esp+8+var_8]
mov     [esp+8+var_4], ecx
push    eax
push    offset loc_4375b0
push    0
push    edx
call    sub_4620e0
add     esp, 18h
retn
push    esi
push    edi
mov     edi, [esp+10h]
cmp     dword ptr [edi+4], 0
jz      short loc_4375d5
mov     esi, [esp+0ch]
push    1000102h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4375e5
jmp     short loc_4375d9
mov     esi, [esp+0ch]
push    esi
mov     eax, [edi]
push    eax
call    sub_437520
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
retn
lea     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
push    eax
push    offset sub_437610
push    0
push    ecx
call    sub_4620e0
mov     ax, [esp+10h+arg_0]
add     esp, 10h
retn
mov     ecx, [esp+arg_0]
sub     esp, 10h
lea     eax, [esp+10h+rcsrc2]
push    esi
push    eax
push    ecx
call    sub_4374c0
add     esp, 8
test    eax, eax
jz      short loc_437651
mov     eax, [esp+14h+rcsrc2.bottom]
mov     ecx, [esp+14h+rcsrc2.right]
mov     edx, [esp+14h+rcsrc2.top]
push    eax
mov     eax, [esp+18h+rcsrc2.left]
push    ecx
mov     esi, [esp+1ch+arg_4]
push    edx
mov     cx, [esi]
push    eax
push    ecx
call    sub_474400
mov     [esi], ax
add     esp, 14h
mov     eax, 1
pop     esi
add     esp, 10h
retn
cmp     [esp+arg_8], 0
push    esi
jnz     short loc_437682
mov     eax, [esp+4+arg_4]
mov     esi, [esp+4+arg_0]
push    eax
push    esi
call    sub_47caf0
add     esp, 8
mov     ds:dword_4a6a18+2, esi
pop     esi
retn
mov     esi, [esp+4+arg_0]
mov     ds:dword_4a6a18+2, esi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
test    esi, esi
jz      short loc_4376a6
call    sub_491140
mov     ds:dword_4a6a1e, esi
pop     esi
retn
call    sub_4911d0
mov     ds:dword_4a6a1e, esi
pop     esi
retn
mov     ecx, [esp+arg_0]
push    ebx
push    esi
xor     ebx, ebx
mov     bx, ds:word_4a8518
mov     eax, [ecx]
shl     ebx, 10h
dec     eax
mov     bl, 1
cmp     eax, 0dh
ja      def_4376e0
jmp     ds:jpt_4376e0[eax*4]
mov     word ptr [ecx+8], 0ah
call    sub_43cd40
mov     word ptr ds:dword_4a6a18, ax
test    ax, ax
jnz     short loc_437705
mov     eax, 8
pop     esi
pop     ebx
retn
push    2000204h
push    ebx
call    sub_462670
movzx   eax, ax
add     esp, 8
mov     ds:dword_4a6a18+2, eax
push    20a0308h
push    ebx
call    sub_462670
movzx   eax, ax
add     esp, 8
mov     ds:dword_4a6a1e, eax
call    sub_4379f0
push    2000102h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_437773
push    0
push    1
call    sub_47c860
add     esp, 8
test    eax, eax
jz      short loc_437773
push    offset dword_4a6a28
call    sub_47cfa0
add     esp, 4
call    sub_437d00
push    2010640h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_4377bd
push    2000204h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
mov     eax, 0
jnz     short loc_4377c2
mov     eax, 1
push    eax
mov     eax, ds:dword_4a6a18+2
push    eax
call    sub_47caf0
add     esp, 8
mov     eax, ds:dword_4a6a1e
push    eax
call    sub_437690
add     esp, 4
xor     eax, eax
pop     esi
pop     ebx
retn
cmp     word ptr [ecx+8], 0ah
jz      short loc_4377f3
mov     eax, 1389h
pop     esi
pop     ebx
retn
mov     ecx, [ecx+0ah]
mov     edx, offset dword_4a6a18
mov     eax, [ecx]
mov     [edx], eax
mov     ebx, [ecx+4]
mov     [edx+4], ebx
mov     cx, [ecx+8]
mov     [edx+8], cx
mov     ax, word ptr ds:dword_4a6a18
push    eax
call    sub_43cd60
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_43782a
mov     eax, 8
pop     esi
pop     ebx
retn
call    sub_4379f0
push    2010640h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_437874
push    2000204h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
mov     eax, 0
jnz     short loc_437879
mov     eax, 1
push    eax
mov     eax, ds:dword_4a6a18+2
push    eax
call    sub_47caf0
add     esp, 8
push    esi
call    sub_437a30
add     esp, 4
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, word ptr ds:dword_4a6a18
push    0
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
mov     ecx, ds:dword_4a6a1e
push    ecx
call    sub_437690
add     esp, 4
xor     eax, eax
pop     esi
pop     ebx
retn
mov     ecx, [ecx+0ah]
mov     eax, ds:dword_4a6a18
mov     edx, offset dword_4a6a18
mov     [ecx], eax
mov     ebx, [edx+4]
mov     [ecx+4], ebx
mov     dx, [edx+8]
mov     [ecx+8], dx
mov     ax, word ptr ds:dword_4a6a18
push    eax
call    sub_437ab0
add     esp, 4
pop     esi
pop     ebx
retn
mov     eax, ds:frequency
test    eax, eax
jz      short loc_437909
push    eax
call    sub_47d300
add     esp, 4
jmp     short loc_43790b
xor     eax, eax
test    eax, eax
jnz     def_4376e0
push    offset dword_4a6a28
call    sub_47c950
add     esp, 4
xor     eax, eax
pop     esi
pop     ebx
retn
push    offset dword_4a6a28
call    sub_47cc80
add     esp, 4
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, word ptr ds:dword_4a6a18
push    0
shl     eax, 10h
push    0
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
pop     esi
pop     ebx
retn
call    sub_438170
test    eax, eax
jz      short def_4376e0
mov     eax, ds:dword_4a6a1e
push    eax
call    sub_437690
add     esp, 4
xor     eax, eax
pop     esi
pop     ebx
retn
mov     eax, ds:dword_4a6a18+2
push    eax
call    sub_437b70
add     esp, 4
mov     eax, ds:dword_4a6a1e
push    eax
call    sub_437690
add     esp, 4
xor     eax, eax
pop     esi
pop     ebx
retn
push    0
call    sub_437b70
add     esp, 4
xor     eax, eax
pop     esi
pop     ebx
retn
push    offset dword_4a6a28
call    sub_47c950
add     esp, 4
retn
mov     eax, ds:dword_4a6a28
mov     ds:dword_4a6a28, 0
test    eax, eax
jz      short loc_437a10
push    offset dword_4a6a28
call    sub_47c950
add     esp, 4
push    1
push    offset sub_437dd0
push    offset dword_4a6a28
call    sub_47cf60
add     esp, 0ch
retn
mov     eax, [esp+hmem]
push    0
push    offset sub_437a50
push    1
push    eax
call    sub_4758a0
add     esp, 10h
retn
mov     ax, [esp+arg_0]
movsx   ecx, ax
cmp     ecx, 7530h
jz      short loc_437a88
cmp     ecx, 7fffh
jz      short loc_437a93
xor     ecx, ecx
movzx   eax, ax
mov     cx, ds:word_4a8518
shl     ecx, 10h
or      ecx, eax
push    ecx
call    sub_437c00
add     esp, 4
mov     eax, 1
retn
call    sub_437d00
mov     eax, 1
retn
push    offset dword_4a6a28
call    sub_47cfa0
add     esp, 4
mov     eax, 1
retn
sub     esp, 4
push    esi
push    edi
call    sub_4755f0
mov     [esp+0ch+hmem], eax
push    0
lea     eax, [esp+10h+hmem]
push    eax
push    offset sub_437b50
push    offset dword_4a6a28
call    sub_47c990
add     esp, 10h
test    ax, ax
jz      short loc_437ae7
mov     eax, 8
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esp+0ch+hmem]
push    eax
call    sub_475690
mov     di, word ptr [esp+10h+arg_0]
add     esp, 4
push    eax
mov     eax, [esp+10h+hmem]
push    eax
push    edi
call    sub_43cda0
add     esp, 0ch
mov     esi, eax
test    esi, esi
jnz     short loc_437b31
push    0
xor     eax, eax
movzx   ecx, di
mov     ax, word_4ad9ac
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
mov     eax, esi
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esp+0ch+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, dword ptr [esp+arg_0]
mov     ecx, [esp+arg_8]
push    eax
mov     edx, [ecx]
push    edx
call    sub_475710
add     esp, 8
retn
cmp     ds:dword_4a6a28, 0
push    ebx
push    esi
push    edi
mov     ebx, ds:frequency
jz      short loc_437bf5
test    ebx, ebx
jz      short loc_437bf5
push    ebx
call    sub_47d300
add     esp, 4
mov     esi, eax
push    ebx
call    sub_445580
add     esp, 4
mov     edi, eax
cmp     [esp+0ch+arg_0], 0
jz      short loc_437bc1
mov     ds:dword_4a6a40, ebx
cmp     ds:dword_4a6a28, esi
jz      short loc_437bd9
push    ebx
push    offset dword_4a6a28
call    sub_47d230
add     esp, 8
jmp     short loc_437bd9
push    ebx
push    offset dword_4a6a28
call    sub_47d260
mov     ds:dword_4a6a40, 0
add     esp, 8
test    esi, esi
jz      short loc_437bee
cmp     ds:dword_4a6a28, esi
jz      short loc_437bee
push    esi
call    sub_47d310
add     esp, 4
push    edi
call    ds:destroywindow
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 350h
cmp     ds:dword_4a6a28, 0
push    esi
jz      loc_437ce9
mov     esi, [esp+354h+arg_0]
push    esi
push    offset dword_4a6a28
call    sub_47ca80
add     esp, 8
test    eax, eax
jnz     loc_437ce9
lea     eax, [esp+354h+var_350]
push    0
push    0
push    eax
call    sub_47cf60
lea     eax, [esp+360h+var_350]
add     esp, 0ch
push    1
push    esi
push    eax
call    sub_437fe0
lea     eax, [esp+360h+string1]
add     esp, 0ch
push    19ah
push    eax
push    esi
call    sub_462d70
lea     eax, [esp+360h+string1]
add     esp, 0ch
push    eax
call    sub_45b740
lea     eax, [esp+358h+string2]
add     esp, 4
push    3
push    30h
push    19ah
push    eax
call    sub_47fe70
lea     eax, [esp+364h+string2]
lea     ecx, [esp+364h+string1]
add     esp, 10h
push    eax
push    ecx
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_437cb4
push    7530h
push    offset dword_4a6a28
call    sub_47d2a0
add     esp, 8
lea     eax, [esp+354h+var_350]
lea     ecx, [esp+354h+string1]
push    eax
push    0
push    ecx
push    0
push    0ffffffffh
push    esi
push    offset dword_4a6a28
call    sub_47d0b0
add     esp, 1ch
mov     eax, ds:dword_4a6a40
test    eax, eax
jz      short loc_437ce9
push    eax
push    offset dword_4a6a28
call    sub_47d280
add     esp, 8
pop     esi
add     esp, 350h
retn
sub     esp, 1b4h
lea     eax, [esp+1b4h+var_1b4]
push    0
push    0
push    eax
call    sub_47cf60
lea     eax, [esp+1c0h+buffer]
add     esp, 0ch
push    4
push    30h
push    19ah
push    eax
call    sub_47fe70
lea     ecx, [esp+1c4h+buffer]
add     esp, 10h
movsx   eax, [esp+1b4h+buffer]
add     eax, 40000h
push    0
lea     edx, [esp+1b8h+var_1b4]
push    eax
push    ecx
push    0
push    0ffffffffh
push    7531h
push    edx
call    sub_47d0b0
lea     ecx, [esp+1d0h+buffer]
add     esp, 1ch
push    3
push    30h
push    19ah
push    ecx
call    sub_47fe70
lea     ecx, [esp+1c4h+var_1b4]
lea     edx, [esp+1c4h+buffer]
add     esp, 10h
push    ecx
push    0
push    edx
push    0
push    0ffffffffh
push    7530h
push    offset dword_4a6a28
call    sub_47d0b0
add     esp, 1ch
mov     eax, ds:dword_4a6a40
test    eax, eax
jz      short loc_437da4
push    eax
push    offset dword_4a6a28
call    sub_47d280
add     esp, 8
add     esp, 1b4h
retn
push    7531h
call    sub_437dd0
add     esp, 4
mov     eax, 1
retn
mov     ax, [esp+arg_0]
push    esi
test    ah, 80h
jz      short loc_437ddf
xor     eax, eax
pop     esi
retn
cmp     ds:dword_4a68c4, 0
jz      short loc_437dec
xor     eax, eax
pop     esi
retn
movzx   eax, ax
cmp     eax, 7531h
jz      short loc_437e28
cmp     eax, 7532h
jz      short loc_437e3b
xor     esi, esi
mov     si, ds:word_4a8518
shl     esi, 10h
or      esi, eax
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_437e45
push    esi
call    sub_43ca50
add     esp, 4
mov     eax, 1
pop     esi
retn
push    0
push    0
call    sub_422810
add     esp, 8
mov     eax, 1
pop     esi
retn
push    0
call    sub_401000
add     esp, 4
mov     eax, 1
pop     esi
retn
cmp     ds:dword_4a6a28, 0
push    esi
jz      short loc_437ea7
mov     esi, [esp+4+arg_0]
push    esi
push    offset dword_4a6a28
call    sub_47ca80
add     esp, 8
test    eax, eax
jz      short loc_437e95
push    esi
push    offset dword_4a6a28
call    sub_47d2a0
add     esp, 8
mov     eax, ds:dword_4a6a40
test    eax, eax
jz      short loc_437e95
push    eax
push    offset dword_4a6a28
call    sub_47d280
add     esp, 8
push    0
push    offset sub_437eb0
push    0
push    esi
call    sub_4620e0
add     esp, 10h
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_4624e0
add     esp, 4
cmp     eax, 5
jnz     short loc_437ece
push    2
push    esi
call    sub_4417a0
add     esp, 8
mov     eax, 1
pop     esi
retn
sub     esp, 18h
cmp     ds:dword_4a6a28, 0
push    esi
jz      short loc_437f45
mov     esi, [esp+1ch+arg_0]
lea     eax, [esp+1ch+var_18]
push    eax
push    esi
push    offset dword_4a6a28
call    sub_47cb10
add     esp, 0ch
test    eax, eax
jz      short loc_437f45
lea     eax, [esp+1ch+var_18]
push    eax
call    sub_47cc80
mov     eax, [esp+20h+arg_4]
lea     ecx, [esp+20h+var_18]
add     esp, 4
push    eax
push    esi
push    ecx
call    sub_437fe0
lea     ecx, [esp+28h+var_18]
add     esp, 0ch
push    ecx
push    esi
push    offset dword_4a6a28
call    sub_47cb90
add     esp, 0ch
mov     eax, 1
pop     esi
add     esp, 18h
retn
xor     eax, eax
pop     esi
add     esp, 18h
retn
sub     esp, 18h
push    esi
push    edi
mov     edi, [esp+20h+arg_0]
push    edi
call    sub_461f70
mov     si, ax
lea     ecx, [esp+24h+var_18]
add     esp, 4
push    ecx
push    esi
push    offset dword_4a6a28
call    sub_47cb10
add     esp, 0ch
test    eax, eax
jz      short loc_437fcb
lea     eax, [esp+20h+var_18]
push    edi
push    eax
call    sub_47ca80
add     esp, 8
test    eax, eax
jz      short loc_437fcb
lea     eax, [esp+20h+var_18]
push    edi
push    eax
call    sub_47c9d0
and     ax, 0fffeh
add     esp, 8
cmp     [esp+20h+arg_4], 0
jnz     short loc_437fa9
or      al, 1
push    eax
push    edi
lea     eax, [esp+28h+var_18]
push    eax
call    sub_47ca00
lea     eax, [esp+2ch+var_18]
add     esp, 0ch
push    eax
push    esi
push    offset dword_4a6a28
call    sub_47cb90
add     esp, 0ch
pop     edi
pop     esi
add     esp, 18h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_8]
sub     esp, 8
mov     edx, [esp+8+arg_4]
mov     [esp+8+var_8], eax
lea     eax, [esp+8+var_8]
mov     [esp+8+var_4], ecx
push    eax
push    offset sub_438010
push    0
push    edx
call    sub_4620e0
add     esp, 18h
retn
sub     esp, 338h
push    ebx
push    esi
mov     ebx, [esp+340h+arg_0]
push    edi
push    ebx
call    sub_4624e0
add     esp, 4
cmp     eax, 5
jnz     loc_438130
mov     esi, [esp+344h+arg_4]
cmp     dword ptr [esi+4], 0
jnz     short loc_438056
push    1000102h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jz      loc_438130
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_438083
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_43808c
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+344h+string]
push    19ah
push    ecx
push    0ah
push    eax
call    sub_45c990
add     esp, 10h
test    ax, ax
jz      short loc_4380db
lea     eax, [esp+344h+string]
push    eax
push    0
call    sub_4590f0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_4380dd
test    edi, 0ff0000h
jnz     short loc_4380dd
cmp     edi, 9
jz      short loc_4380dd
cmp     edi, 0dh
jz      short loc_4380dd
or      edi, 40000h
jmp     short loc_4380dd
xor     edi, edi
lea     eax, [esp+344h+string1]
push    19ah
push    eax
push    ebx
call    sub_462d70
lea     eax, [esp+350h+string1]
add     esp, 0ch
push    eax
call    sub_45b740
add     esp, 4
cmp     [esp+344h+string1], 28h
jz      short loc_438115
push    ebx
call    sub_433c10
mov     cx, 0
add     esp, 4
test    eax, eax
jnz     short loc_438119
mov     cx, 1
lea     eax, [esp+344h+string1]
push    0
push    edi
push    eax
push    ecx
push    0ffffffffh
push    ebx
mov     ecx, [esi]
push    ecx
call    sub_47d0b0
add     esp, 1ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 338h
retn
cmp     ds:dword_4a6a2c, 0
jz      short loc_43816a
mov     eax, [esp+arg_0]
push    eax
push    offset dword_4a6a28
call    sub_47cab0
add     esp, 8
test    ax, ax
jz      short loc_43816a
push    eax
call    sub_437dd0
add     esp, 4
retn
xor     eax, eax
retn
mov     eax, 1
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     eax, [ebx]
dec     eax
cmp     eax, 6
ja      def_438193
jmp     ds:jpt_438193[eax*4]
mov     word ptr [ebx+8], 32h
push    1
call    sub_438250
add     esp, 4
call    sub_477d30
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
cmp     word ptr [ebx+8], 32h
jz      short loc_4381c5
mov     eax, 1389h
pop     edi
pop     esi
pop     ebx
retn
mov     edi, offset word_4a6a48
mov     esi, [ebx+0ah]
mov     ecx, 0ch
push    offset word_4a6a4a
rep movsd
movsw
call    sub_477d60
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    offset word_4a6a4a
mov     esi, offset word_4a6a48
call    sub_477d90
add     esp, 4
mov     edi, [ebx+0ah]
mov     ecx, 0ch
rep movsd
movsw
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ds:word_4a6a48, 0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
mov     al, byte ptr ds:word_4a6a48
and     eax, 1
retn
cmp     [esp+arg_0], 0
jz      short loc_43825f
or      byte ptr ds:word_4a6a48, 1
retn
and     ds:word_4a6a48, 0fffeh
retn
push    1
mov     eax, dword_4ad930
mov     ecx, dword_4ad934
push    ecx
push    eax
push    2
call    sub_43ea30
add     esp, 10h
retn
mov     eax, dword_4ad930
mov     ecx, dword_4ad934
push    ecx
push    eax
push    2
call    sub_43eb00
add     esp, 0ch
retn
sub     esp, 8
lea     eax, [esp+8+var_4]
push    0
lea     ecx, [esp+0ch+hmem]
push    eax
mov     [esp+10h+hmem], 0
mov     [esp+10h+var_4], 0
push    ecx
push    offset sub_438310
call    sub_43b080
add     esp, 10h
cmp     [esp+8+hmem], 0
jz      short loc_438306
mov     eax, [esp+8+hmem]
push    0
push    offset loc_438450
push    1
push    eax
call    sub_4758a0
mov     eax, [esp+18h+hmem]
add     esp, 10h
push    eax
call    sub_475600
add     esp, 4
mov     eax, [esp+8+var_4]
add     esp, 8
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, [esp+0ch+arg_8]
push    ebp
movsx   eax, word ptr [esi]
lea     ebx, [eax+esi-9ah]
cmp     dword ptr [ebx], 0
jnz     short loc_438374
push    ebx
mov     dword ptr [edi], 1
push    esi
call    sub_4383b0
add     esp, 8
test    eax, eax
jnz     short loc_438374
mov     ebp, [esp+10h+arg_4]
cmp     dword ptr [ebp+0], 0
jnz     short loc_438351
call    sub_4755f0
mov     [ebp+0], eax
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_438365
push    eax
mov     eax, [ebp+0]
push    eax
call    sub_475710
add     esp, 8
mov     eax, [ebx+3eh]
push    esi
mov     [ebx+8], eax
call    sub_4386c0
add     esp, 4
movsx   eax, word ptr [esi]
cmp     dword ptr [eax+esi-0eh], 0
jz      short loc_43839e
push    0
mov     dword ptr [edi], 1
push    0fh
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
test    eax, eax
jz      short loc_43839e
push    0
push    esi
call    sub_43b060
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
sub     esp, 18h
push    ebx
cmp     dword ptr [eax], 0
push    esi
push    edi
jz      short loc_4383c8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
lea     ecx, [esp+24h+var_18]
add     eax, 2ch
push    ecx
push    eax
call    sub_423660
mov     ecx, [esp+2ch+arg_0]
lea     edx, [esp+2ch+var_10]
mov     ebx, [ecx+10h]
lea     edi, [ecx+0ch]
add     esp, 8
mov     esi, eax
mov     eax, [edi]
mov     [edx], eax
mov     eax, [edi+8]
mov     edi, [edi+0ch]
mov     [edx+4], ebx
mov     [edx+8], eax
mov     [edx+0ch], edi
mov     edi, [esp+24h+var_10]
mov     eax, edi
mov     ebx, [esp+24h+var_c]
sub     eax, [esp+24h+var_8]
cdq
sub     eax, edx
sar     eax, 1
add     [esp+24h+var_18], eax
mov     eax, ebx
sub     eax, [esp+24h+var_4]
cdq
sub     eax, edx
sar     eax, 1
add     [esp+24h+var_14], eax
cmp     edi, [esp+24h+var_18]
jnz     short loc_438430
cmp     ebx, [esp+24h+var_14]
jz      short loc_438443
mov     eax, [esp+24h+var_14]
mov     edx, [esp+24h+var_18]
push    eax
push    edx
push    ecx
call    sub_438840
add     esp, 0ch
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
mov     ecx, [esp+4]
mov     ax, ds:word_4a8518
and     ecx, 0ffffh
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_423710
add     esp, 4
mov     eax, 1
retn
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+arg_0]
push    edi
mov     esi, [esp+10h+arg_4]
push    ebp
movsx   eax, word ptr [ebx]
test    esi, esi
lea     ebp, [eax+ebx-9ah]
mov     ecx, [ebp+0]
mov     [esp+14h+var_4], ecx
jz      short loc_4384d9
mov     eax, [esi+26h]
cmp     [ebp+52h], eax
jz      short loc_4384b8
lea     eax, [ebp+46h]
push    eax
call    sub_40db70
add     esp, 4
lea     edi, [ebp+2ch]
mov     ecx, 0ah
rep movsd
movsw
cmp     dword ptr [ebp+0], 0
jz      short loc_4384e2
push    ebx
mov     dword ptr [ebp+0], 0
call    sub_438690
jmp     short loc_4384df
push    ebx
call    sub_4386c0
add     esp, 4
mov     eax, [esp+14h+var_4]
cmp     [ebp+0], eax
jz      short loc_438500
movsx   eax, word ptr [ebx]
mov     ecx, [eax+ebx-0a6h]
push    ecx
push    4
call    sub_441bb0
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_0]
push    esi
movsx   ecx, word ptr [eax]
push    edi
lea     esi, [ecx+eax-6eh]
lea     eax, [ecx+eax-9ah]
mov     edi, [esp+8+arg_4]
mov     ecx, 0ah
rep movsd
movsw
pop     edi
cmp     dword ptr [eax], 1
sbb     eax, eax
pop     esi
neg     eax
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
movsx   eax, word ptr [ebx]
mov     esi, [esp+0ch+arg_4]
lea     edi, [eax+ebx-9ah]
mov     eax, [esi+32h]
cmp     [edi+88h], eax
jz      short loc_43856c
lea     eax, [edi+7ch]
push    eax
call    sub_40db70
add     esp, 4
mov     dword ptr [edi], 1
add     edi, 56h
mov     ecx, 0dh
push    ebx
rep movsd
movsw
call    sub_438690
movsx   eax, word ptr [ebx]
add     esp, 4
mov     ecx, [eax+ebx-0a6h]
push    ecx
push    4
call    sub_441bb0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    esi
movsx   ecx, word ptr [eax]
push    edi
lea     esi, [ecx+eax-44h]
lea     eax, [ecx+eax-9ah]
mov     edi, [esp+8+arg_4]
mov     ecx, 0dh
rep movsd
movsw
mov     eax, [eax]
pop     edi
dec     eax
pop     esi
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
mov     eax, [esp+arg_0]
push    esi
mov     esi, [esp+4+arg_4]
push    edi
movsx   ecx, word ptr [eax]
lea     edi, [ecx+eax-96h]
mov     ecx, 0ah
rep movsd
mov     eax, 1
pop     edi
pop     esi
retn
mov     edx, [esp+arg_0]
sub     esp, 8
movsx   eax, word ptr [edx]
push    ebx
push    esi
mov     ebx, [esp+10h+arg_4]
push    edi
push    ebp
mov     edi, ebx
lea     esi, [eax+edx-96h]
lea     ebp, [eax+edx-9ah]
mov     ecx, 0ah
rep movsd
mov     eax, [ebp+0]
test    eax, eax
jz      short loc_438647
cmp     eax, 1
jz      short loc_43864c
jmp     short loc_43867c
mov     eax, [ebp+3eh]
jmp     short loc_438679
add     ebp, 56h
cmp     dword ptr [ebp+0], 1
jnz     short loc_43867c
lea     eax, [esp+18h+var_8]
add     edx, 0ch
push    eax
push    edx
call    sub_473c30
mov     edx, [esp+20h+var_8]
mov     ecx, [esp+20h+var_4]
add     esp, 8
push    ecx
push    edx
push    ebp
call    sub_441140
add     esp, 0ch
mov     [ebx+4], eax
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    esi
push    0
mov     esi, [esp+8+arg_0]
push    0dh
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
push    4
push    esi
call    sub_43b4e0
movsx   eax, word ptr [esi]
add     esp, 8
cmp     dword ptr [eax+esi-9ah], 0
jnz     short loc_4386bd
call    sub_438270
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
movsx   eax, word ptr [esi]
lea     ecx, [eax+esi-54h]
lea     edi, [eax+esi-9ah]
push    ecx
call    sub_40db70
add     esp, 4
lea     eax, [edi+7ch]
push    eax
call    sub_40db70
add     esp, 4
mov     dword ptr [edi], 2
movsx   eax, word ptr [esi]
mov     ax, [eax+esi-0ah]
push    eax
push    esi
call    sub_43b4e0
movsx   ecx, word ptr [esi]
add     esp, 8
mov     edx, [ecx+esi-0a6h]
push    edx
push    4
call    sub_441bb0
add     esp, 8
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_438767
mov     edx, [esp+arg_8]
mov     ecx, [eax+22h]
add     eax, 22h
mov     [edx], ecx
mov     ecx, [eax+4]
push    offset dword_4a61c4
mov     [edx+4], ecx
mov     ecx, [eax+8]
mov     [edx+8], ecx
mov     eax, [eax+0ch]
mov     [edx+0ch], eax
call    sub_412f60
add     esp, 4
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 8
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], ecx
call    sub_4441e0
lea     ecx, [esp+8+var_8]
push    0
push    0
push    ecx
push    offset sub_4387c0
call    sub_43b080
add     esp, 10h
mov     edx, dword_4ad930
mov     ecx, dword_4ad934
push    ecx
push    edx
call    sub_4382b0
add     esp, 10h
retn
sub     esp, 10h
push    esi
mov     esi, [esp+14h+arg_0]
movsx   eax, word ptr [esi]
lea     ecx, [eax+esi-9ah]
cmp     dword ptr [ecx], 1
jnz     short loc_438827
add     ecx, 56h
mov     eax, [esp+14h+arg_4]
mov     edx, [eax]
mov     eax, [eax+4]
push    eax
push    edx
push    ecx
call    sub_441060
mov     [esp+20h+var_10], eax
mov     [esp+20h+var_4], edx
mov     ecx, [esp+20h+var_10]
add     esp, 0ch
mov     eax, [esi+0ch]
sub     eax, [esi+14h]
cdq
sub     eax, edx
sar     eax, 1
add     ecx, eax
mov     eax, [esi+10h]
sub     eax, [esi+18h]
cdq
sub     eax, edx
sar     eax, 1
add     [esp+14h+var_4], eax
mov     edx, [esp+14h+var_4]
push    edx
push    ecx
push    esi
call    sub_438840
add     esp, 0ch
mov     eax, 1
pop     esi
add     esp, 10h
retn
sub     esp, 0c8h
xor     eax, eax
mov     ecx, 2fh
push    esi
push    edi
lea     edi, [esp+0d0h+var_c0]
rep stosd
stosw
mov     eax, [esp+0d0h+arg_4]
mov     ecx, [esp+0d0h+arg_8]
mov     esi, [esp+0d0h+arg_0]
lea     edx, [esp+0d0h+rc]
mov     [esp+0d0h+var_c8], eax
mov     [esp+0d0h+var_c4], ecx
lea     ecx, [esi+0ch]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
push    edx
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     eax, [esp+0d4h+var_c8]
mov     [edx+0ch], ecx
mov     ecx, [esp+0d4h+var_c4]
push    ecx
push    eax
call    sub_473ca0
mov     [esp+0dch+var_b6], 0
add     esp, 0ch
push    0
push    8
push    esi
call    dword ptr [esi+6]
lea     ecx, [esp+0dch+var_c0]
add     esp, 0ch
push    ecx
push    0bh
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
push    0
push    8
push    esi
call    dword ptr [esi+6]
movsx   ecx, word ptr [esi]
add     esp, 0ch
mov     edx, [ecx+esi-0a6h]
push    edx
push    5
call    sub_441c60
movsx   ecx, word ptr [esi]
add     esp, 8
mov     edx, [ecx+esi-0a6h]
push    edx
call    sub_48a200
add     esp, 4
pop     edi
pop     esi
add     esp, 0c8h
retn
push    0
push    0
push    0
push    offset sub_438920
call    sub_43b080
add     esp, 10h
retn
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, [esp+14h+arg_0]
movsx   eax, word ptr [edi]
lea     ebx, [eax+edi-9ah]
cmp     dword ptr [ebx], 1
jnz     short loc_438971
lea     esi, [ebx+56h]
cmp     dword ptr [esi], 1
jnz     short loc_438968
lea     eax, [esp+14h+var_8]
lea     ecx, [edi+0ch]
push    eax
push    ecx
call    sub_473c30
mov     edx, [esp+1ch+var_8]
mov     ecx, [esp+1ch+var_4]
add     esp, 8
push    ecx
push    edx
push    esi
call    sub_441140
add     esp, 0ch
mov     [ebx+8], eax
push    edi
call    sub_4386c0
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_8]
push    edi
mov     esi, [esp+0ch+arg_4]
push    ebx
push    0ffffffffh
call    esi
mov     edi, [esp+14h+arg_0]
add     esp, 8
test    eax, eax
jz      short loc_4389a0
mov     [edi+52h], eax
jmp     short loc_4389b0
lea     ecx, [edi+46h]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
push    ebx
push    0fffffffeh
call    esi
add     esp, 8
test    eax, eax
jz      short loc_4389c6
mov     [edi+88h], eax
pop     edi
pop     esi
pop     ebx
retn
add     edi, 7ch
xor     eax, eax
mov     [edi], eax
mov     [edi+4], eax
mov     [edi+8], eax
mov     [edi+0ch], eax
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    ebx
push    esi
push    edi
mov     edi, [esp+10h+arg_0]
push    ebp
push    eax
lea     ecx, [edi+46h]
push    ecx
call    sub_40db90
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_438a1e
mov     ebx, [esp+14h+arg_8]
mov     esi, [esp+14h+arg_4]
push    ebx
push    0ffffffffh
push    ebp
call    esi
add     esp, 0ch
push    ebp
call    sub_45ba00
add     esp, 4
jmp     short loc_438a26
mov     esi, [esp+14h+arg_4]
mov     ebx, [esp+14h+arg_8]
lea     eax, [esp+14h+var_4]
add     edi, 7ch
push    eax
push    edi
call    sub_40db90
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_438a4f
push    ebx
push    0fffffffeh
push    edi
call    esi
add     esp, 0ch
push    edi
call    sub_45ba00
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
lea     eax, [esi+46h]
add     esi, 7ch
push    eax
call    sub_40db70
add     esp, 4
push    esi
call    sub_40db70
add     esp, 4
pop     esi
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
lea     ecx, [esp+14h+var_8]
push    ebp
mov     bp, [esi+0d8h]
push    ecx
movsx   eax, word ptr [esi]
mov     edi, [esp+1ch+arg_4]
mov     ebx, [eax+esi-0a6h]
mov     eax, [esp+1ch+arg_8]
push    eax
push    edi
push    esi
call    sub_43b870
add     esp, 10h
test    eax, eax
jz      short loc_438ac4
mov     eax, [esp+18h+var_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     bp, 3
jz      short loc_438ad0
cmp     bp, 4
jnz     short loc_438b19
cmp     edi, 0dh
jz      short loc_438ae1
cmp     edi, 0fh
jz      short loc_438aeb
cmp     edi, 1bh
jz      short loc_438b0e
jmp     short loc_438b19
push    0
push    esi
call    sub_4392a0
jmp     short loc_438b16
cmp     word ptr [esi+42h], 0
jnz     short loc_438b19
movsx   eax, word ptr [esi]
cmp     dword ptr [eax+esi-9ah], 2
jnz     short loc_438b19
cmp     dword ptr [esi+38h], 0
jnz     short loc_438b19
mov     dword ptr [esi+38h], 1
jmp     short loc_438b19
push    4
push    ebx
call    sub_4417a0
add     esp, 8
mov     eax, [esp+18h+arg_8]
push    eax
push    edi
push    esi
sub     edi, 0fh
call    sub_4606c0
add     esp, 0ch
mov     ebp, eax
cmp     edi, 5bh
ja      def_438b3e
xor     eax, eax
mov     al, ds:byte_438c9c[edi]
jmp     ds:jpt_438b3e[eax*4]
test    ebp, ebp
jz      short loc_438b7c
cmp     dword ptr [esi+0dah], 0
jz      short loc_438b5b
push    ebx
call    sub_434b70
add     esp, 4
cmp     ds:dword_4a6aba, 2
jnz     short loc_438b71
push    ebx
push    9
push    2
call    sub_43bd20
add     esp, 0ch
push    ebx
push    16h
call    sub_441c60
add     esp, 8
push    ebx
push    15h
call    sub_441c60
add     esp, 8
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     ds:dword_4a6aba, 2
jnz     short loc_438ba7
push    ebx
push    9
push    2
call    sub_43bd20
add     esp, 0ch
push    ebx
push    16h
call    sub_441c60
add     esp, 8
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     dword ptr [esi+0f0h], 0
jnz     def_438b3e
mov     eax, [esp+18h+arg_8]
lea     ecx, [esi+8ch]
cmp     word ptr [eax+0ah], 1
sbb     eax, eax
add     eax, 4
push    eax
push    ecx
call    sub_409e80
mov     ecx, [esp+20h+arg_8]
add     esp, 8
cmp     word ptr [ecx+0ah], 1
sbb     eax, eax
neg     eax
mov     [esi+3ch], eax
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebx
xor     edi, edi
call    sub_408fc0
add     esp, 4
test    eax, eax
jz      short loc_438c74
push    1ch
push    eax
call    sub_4612e0
add     esp, 8
mov     [esi+34h], eax
mov     [esi+0a6h], edi
lea     eax, [esp+18h+var_4]
push    eax
mov     [esi+0cch], edi
push    ebx
mov     [esi+0b4h], edi
push    esi
mov     [esi+0b8h], edi
mov     [esi+9eh], edi
mov     [esi+9ah], edi
mov     [esi+0c4h], edi
call    sub_439920
add     esp, 0ch
push    ebx
push    esi
call    sub_4398b0
add     esp, 8
push    esi
call    sub_4390a0
add     esp, 4
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     dword ptr [esi+34h], 0
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_438d50
add     esp, 4
cmp     eax, 3
jz      short loc_438d1a
cmp     eax, 5
jz      short loc_438d39
jmp     short loc_438d42
push    2050318h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_438d42
mov     ds:dword_4a68ae, 2
jmp     short loc_438d42
push    esi
call    sub_422b80
add     esp, 4
push    esi
push    16h
call    sub_441c60
add     esp, 8
pop     esi
retn
sub     esp, 0ch
mov     word ptr [esp+0ch+var_4], 0
push    esi
push    edi
mov     esi, [esp+14h+arg_0]
mov     [esp+14h+var_8], esi
mov     eax, [esp+14h+var_4]
mov     ecx, [esp+14h+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_438da2
push    0
push    8
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
push    esi
call    sub_43d590
movsx   ecx, word ptr [edi]
mov     [ecx+edi-0a0h], ax
add     esp, 4
call    sub_43d470
jmp     short loc_438e1b
lea     eax, [esp+14h+var_c]
mov     ecx, [esp+14h+var_4]
mov     edx, [esp+14h+var_8]
push    eax
push    ecx
push    edx
call    sub_438e70
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     short loc_438df5
cmp     ds:dword_4a6aba, 1
jnz     short loc_438dd5
push    esi
push    9
push    1
call    sub_43bd20
add     esp, 0ch
cmp     ds:dword_4a6aba, 2
jnz     short loc_438deb
push    esi
push    9
push    2
call    sub_43bd20
add     esp, 0ch
mov     eax, [esp+14h+var_c]
pop     edi
pop     esi
add     esp, 0ch
retn
mov     word ptr [edi+1ch], 0
push    esi
push    edi
call    sub_4398b0
add     esp, 8
push    0
push    7
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
push    esi
push    5
call    sub_441bb0
add     esp, 8
push    edi
call    sub_4390a0
add     esp, 4
cmp     dword ptr [edi+38h], 1
sbb     eax, eax
push    offset dword_4a61c4
add     eax, 4
mov     [esp+18h+var_c], eax
call    sub_412f60
add     esp, 4
cmp     ds:dword_4a6aba, 1
jnz     short loc_438e54
push    esi
push    9
push    1
call    sub_43bd20
add     esp, 0ch
call    sub_4443d0
mov     ds:dword_4a6a80, 0
mov     eax, [esp+14h+var_c]
pop     edi
pop     esi
add     esp, 0ch
retn
sub     esp, 0f4h
push    ebx
push    esi
mov     esi, [esp+0fch+arg_0]
push    edi
push    ebp
push    esi
call    sub_408fc0
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_438e92
mov     edi, esi
push    2050204h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_438ebe
push    20505e0h
mov     ebx, 1
push    edi
call    sub_462670
add     esp, 8
cmp     ax, 3
jz      short loc_438ec0
xor     ebx, ebx
lea     edi, [esp+104h+src]
xor     eax, eax
mov     ecx, 3dh
push    204000fh
rep stosd
mov     [esp+108h+src], 0f4h
mov     [esp+108h+var_ae], 0ffffffffh
push    esi
call    sub_462670
sub     ax, 5
mov     edi, [esp+10ch+arg_8]
add     esp, 8
cmp     ax, 1
push    edi
sbb     eax, eax
push    esi
neg     eax
lea     ecx, [esp+10ch+src]
mov     [esp+10ch+var_7a], eax
push    ecx
call    sub_439920
movsx   eax, ax
add     esp, 0ch
cmp     eax, 7
ja      def_438f1f
jmp     ds:jpt_438f1f[eax*4]
cmp     [esp+104h+hmem], 0
jz      short loc_438f3a
mov     eax, [esp+104h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0f4h
retn
mov     ax, [esp+104h+var_62]
and     ax, 20h
cmp     ax, 1
sbb     ebx, ebx
and     ebx, 4
add     bx, 4
cmp     ds:dword_4a6a80, esi
jnz     short loc_438f70
mov     ebp, ds:dword_4a6a7c
jmp     short loc_438f80
push    414h
push    esi
call    sub_42e360
add     esp, 8
mov     ebp, eax
call    sub_4441e0
mov     eax, [esp+104h+arg_4]
push    ebp
mov     ecx, [esp+108h+arg_0]
push    ebx
push    eax
push    ecx
push    offset sub_439c60
jmp     short loc_438fe6
cmp     ebx, 1
sbb     ebx, ebx
and     ebx, 0fffffffch
add     bx, 8
cmp     ds:dword_4a6a80, esi
jnz     short loc_438fba
mov     ebp, ds:dword_4a6a7c
jmp     short loc_438fca
push    414h
push    esi
call    sub_42e360
add     esp, 8
mov     ebp, eax
call    sub_4441e0
mov     eax, [esp+104h+arg_4]
push    ebp
mov     ecx, [esp+108h+arg_0]
push    ebx
push    eax
push    ecx
push    offset sub_438a80
lea     edx, [esp+118h+src]
push    edx
call    sub_43aa50
add     esp, 18h
push    esi
call    sub_4395f0
add     esp, 4
mov     eax, [esp+104h+arg_4]
mov     ecx, [esp+104h+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_43904b
call    sub_43d470
movsx   ecx, word ptr [ebx]
mov     [ecx+ebx-0a0h], ax
push    9
push    esi
call    sub_462670
add     esp, 8
movsx   ecx, word ptr [ebx]
cmp     ax, 1
sbb     eax, eax
neg     eax
mov     [ecx+ebx-8], eax
movsx   edx, word ptr [ebx]
mov     [edx+ebx-4], esi
mov     eax, ebx
pop     ebp
mov     dword ptr [edi], 3
pop     edi
pop     esi
pop     ebx
add     esp, 0f4h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     ds:dword_4a6a80, eax
mov     ds:dword_4a6a7c, ecx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
movsx   eax, word ptr [esi]
push    ebp
mov     ebp, [eax+esi-0a6h]
push    ebp
call    sub_408fc0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_4390c3
mov     ebx, ebp
mov     word ptr [esi+42h], 0
mov     word ptr [esi+0eeh], 0
push    204000fh
push    ebp
call    sub_462670
sub     ax, 5
add     esp, 8
cmp     ax, 1
sbb     ecx, ecx
neg     ecx
mov     ax, [esi+0d8h]
sub     ax, 5
cmp     ax, 1
sbb     eax, eax
push    204000fh
neg     eax
sub     ecx, eax
push    ebp
cmp     ecx, 1
sbb     eax, eax
inc     eax
mov     [esi+76h], eax
call    sub_462670
mov     [esi+0d8h], ax
add     esp, 8
mov     dword ptr [esi+0f0h], 0
mov     ax, [esi+0d8h]
sub     ax, 5
cmp     ax, 1
sbb     eax, eax
neg     eax
mov     [esi+7ah], eax
xor     eax, eax
mov     ax, [esi+0d8h]
cmp     eax, 1
jz      short loc_439154
cmp     eax, 4
jz      short loc_43916a
jmp     short loc_439181
push    1
push    3f9h
push    ebp
call    sub_42edc0
mov     [esi+42h], ax
add     esp, 0ch
jmp     short loc_439181
push    0
push    3fbh
push    ebp
call    sub_42edc0
mov     [esi+0eeh], ax
add     esp, 0ch
mov     edi, [esi+4ah]
push    edi
push    0
push    0
push    3f6h
push    ebp
call    sub_42edc0
add     esp, 0ch
dec     eax
push    eax
call    sub_439890
add     esp, 0ch
mov     [esi+0e6h], eax
push    edi
push    0
push    edi
push    3f7h
push    ebp
call    sub_42edc0
add     esp, 0ch
dec     eax
push    eax
call    sub_439890
add     esp, 0ch
mov     [esi+0eah], eax
push    2050318h
push    ebp
call    sub_462670
add     esp, 8
cmp     ax, 1
push    2060640h
sbb     eax, eax
push    ebp
neg     eax
lea     edi, [esi+0deh]
mov     [esi+0dah], eax
call    sub_462670
movzx   ecx, ax
add     esp, 8
mov     [esi+5eh], ecx
test    ecx, ecx
jz      short loc_43920a
push    40c38780h
jmp     short loc_43920c
push    0
push    0
push    3f8h
push    ebp
call    sub_42ee00
fstp    qword ptr [edi]
add     esp, 10h
push    2050102h
push    ebp
call    sub_462670
movzx   eax, ax
add     esp, 8
mov     [esi+62h], eax
push    2050001h
push    ebp
call    sub_462670
movzx   eax, ax
add     esp, 8
mov     [esi+66h], eax
push    20505e0h
push    ebx
call    sub_462670
movzx   eax, ax
add     esp, 8
mov     [esi+0a2h], eax
mov     ecx, [esi+0eah]
cmp     [esi+46h], ecx
jnz     short loc_43926f
mov     dword ptr [esi+46h], 0ffffffffh
push    0
push    esi
call    sub_4392a0
add     esp, 8
cmp     word ptr [esi+32h], 1
jnz     short loc_439291
mov     eax, [edi+4]
mov     ecx, [edi]
push    eax
push    ecx
push    esi
call    sub_494e40
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 34h
xor     ecx, ecx
push    ebx
push    esi
mov     esi, [esp+3ch+arg_0]
push    edi
mov     di, [esi+0d8h]
push    ebp
cmp     di, 3
jz      short loc_4392c4
cmp     di, 4
jnz     loc_439351
movsx   eax, word ptr [esi]
mov     eax, [eax+esi-9ah]
cmp     eax, 2
jnz     short loc_4392f5
mov     dword ptr [esi+38h], 1
cmp     dword ptr [esi+46h], 0ffffffffh
jnz     loc_4395e0
mov     eax, [esi+0e6h]
pop     ebp
pop     edi
mov     [esi+46h], eax
pop     esi
pop     ebx
add     esp, 34h
retn
cmp     di, 4
jnz     short loc_43934b
test    eax, eax
jnz     short loc_43934b
lea     eax, [esp+44h+var_2c]
push    eax
push    esi
call    sub_438510
mov     ax, [esi+0eeh]
add     esp, 8
test    ax, ax
jnz     short loc_439322
mov     dword ptr [esi+5ah], 0
jmp     short loc_439330
movsx   ecx, ax
mov     eax, dword ptr [esp+44h+var_2c]
sub     edx, edx
div     ecx
mov     [esi+5ah], eax
mov     ax, [esi+0eeh]
mov     [esi+42h], ax
mov     ecx, [esi+0e6h]
mov     [esi+46h], ecx
mov     ecx, 1
jmp     short loc_439351
mov     word ptr [esi+42h], 0
mov     ebx, [esi+0e6h]
mov     ebp, [esi+0eah]
mov     edx, 1
cmp     ebp, ebx
jl      short loc_439368
xor     edx, edx
fldz
fcomp   qword ptr [esi+0deh]
fnstsw  ax
test    ah, 41h
mov     eax, 1
jz      short loc_43937e
xor     eax, eax
fld     qword ptr [esi+0deh]
fabs
sub     edx, eax
fstp    [esp+44h+var_2c]
cmp     edx, 1
sbb     eax, eax
and     eax, 2
dec     ax
cmp     ebp, ebx
mov     [esp+44h+var_32], ax
mov     eax, 1
jg      short loc_4393a6
xor     eax, eax
cmp     [esp+44h+var_32], 0
mov     edx, 1
jg      short loc_4393b5
xor     edx, edx
cmp     eax, edx
jz      short loc_4393bf
mov     eax, ebx
mov     ebx, ebp
mov     ebp, eax
fld     [esp+44h+var_2c]
fcomp   ds:dbl_4ab098
mov     [esi+4eh], ebx
mov     [esi+52h], ebp
fnstsw  ax
test    ah, 41h
jnz     short loc_4393e6
mov     dword ptr [esp+44h+var_2c], 0
mov     dword ptr [esp+44h+var_2c+4], 406e0000h
mov     eax, dword ptr [esp+44h+var_2c+4]
and     eax, 7fffffffh
or      eax, dword ptr [esp+44h+var_2c]
jnz     short loc_4393fe
or      byte ptr [esi+92h], 8
jmp     short loc_439405
and     byte ptr [esi+92h], 0f7h
test    ecx, ecx
jnz     short loc_43947f
mov     eax, dword ptr [esp+44h+var_2c+4]
and     eax, 7fffffffh
or      eax, dword ptr [esp+44h+var_2c]
jz      short loc_439478
cmp     ebp, ebx
jz      short loc_439478
fld     [esp+44h+var_2c]
fcomp   ds:dbl_4ab098
fnstsw  ax
test    ah, 40h
jz      short loc_439433
cmp     dword ptr [esi+5eh], 0
jnz     short loc_439478
mov     eax, ebp
sub     eax, ebx
jns     short loc_43943b
neg     eax
lea     eax, [eax+eax*4+5]
lea     ecx, [eax+eax*4]
lea     eax, [ecx+ecx*4]
shl     eax, 3
mov     [esp+44h+var_30], eax
fild    [esp+44h+var_30]
pushf
cmp     dword_4af150, 0
jnz     short loc_439460
fdiv    [esp+48h+var_2c]
jmp     short loc_43946d
push    dword ptr [esp+48h+var_2c+4]
push    dword ptr [esp+4ch+var_2c]
call    unknown_libname_7
popf
call    __ftol
mov     [esi+5ah], eax
jmp     short loc_43947f
mov     dword ptr [esi+5ah], 0
push    0
lea     eax, [esi+8ch]
push    eax
call    sub_409e80
mov     dword ptr [esi+0c0h], 0
add     esp, 8
cmp     word ptr [esi+32h], 1
jnz     short loc_4394aa
push    esi
call    sub_495b80
add     esp, 4
cmp     [esp+44h+var_32], 0
mov     ecx, [esi+46h]
jle     short loc_4394c1
cmp     ecx, ebp
jg      short loc_4394ce
cmp     ecx, ebx
jl      short loc_4394ce
xor     eax, eax
jmp     short loc_4394d3
cmp     ecx, ebp
jl      short loc_4394ce
mov     eax, 0
cmp     ecx, ebx
jle     short loc_4394d3
mov     eax, 1
test    eax, eax
jz      short loc_439508
mov     ax, [esi+32h]
cmp     ax, 2
jnz     short loc_4394ed
push    ebx
push    esi
call    sub_4608f0
jmp     loc_43956e
cmp     ax, 1
jnz     short loc_439503
cmp     [esp+44h+arg_4], 0
jz      short loc_439503
push    ebx
push    esi
call    sub_495ab0
jmp     short loc_43956e
mov     [esi+46h], ebx
jmp     short loc_439571
cmp     ecx, ebx
jz      short loc_439571
cmp     dword ptr [esi+5ah], 0
jz      short loc_439571
cmp     [esp+44h+var_32], 0
jle     short loc_439520
mov     eax, ecx
sub     eax, ebx
jmp     short loc_439524
mov     eax, ebx
sub     eax, ecx
lea     eax, [eax+eax*4]
lea     ecx, [eax+eax*4]
lea     eax, [ecx+ecx*4]
shl     eax, 3
mov     [esp+44h+var_30], eax
fild    [esp+44h+var_30]
pushf
cmp     dword_4af150, 0
jnz     short loc_439548
fdiv    [esp+48h+var_2c]
jmp     short loc_439555
push    dword ptr [esp+48h+var_2c+4]
push    dword ptr [esp+4ch+var_2c]
call    unknown_libname_7
popf
fadd    ds:dbl_4ab0a0
call    __ftol
push    eax
lea     ecx, [esi+8ch]
push    ecx
call    sub_409f80
add     esp, 8
xor     eax, eax
cmp     ebp, ebx
mov     [esi+44h], ax
mov     [esi+3ch], eax
mov     dword ptr [esi+56h], 0ffffffffh
jz      short loc_4395c6
cmp     di, 2
jnz     short loc_4395a8
push    eax
push    3fah
movsx   eax, word ptr [esi]
mov     ecx, [eax+esi-0a6h]
push    ecx
call    sub_42ed80
add     esp, 0ch
test    eax, eax
jnz     short loc_4395c6
cmp     di, 1
jz      short loc_4395b4
cmp     di, 4
jnz     short loc_4395bb
cmp     word ptr [esi+42h], 0
jz      short loc_4395c6
lea     eax, [esi+38h]
mov     dword ptr [eax], 0
jmp     short loc_4395cf
lea     eax, [esi+38h]
mov     dword ptr [eax], 1
cmp     dword ptr [eax], 1
sbb     eax, eax
neg     eax
push    eax
push    esi
call    sub_43b060
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn
push    esi
push    2050318h
mov     esi, [esp+8+arg_0]
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 2
jnz     short loc_439675
push    0
push    3f8h
push    esi
push    4
call    sub_441440
add     esp, 10h
push    0
push    3f6h
push    esi
push    4
call    sub_441440
add     esp, 10h
push    0
push    3f7h
push    esi
push    4
call    sub_441440
add     esp, 10h
push    0
push    3f9h
push    esi
push    4
call    sub_441440
add     esp, 10h
push    0
push    3fbh
push    esi
push    4
call    sub_441440
add     esp, 10h
push    0
push    414h
push    esi
push    4
call    sub_441440
add     esp, 10h
push    204000fh
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 2
jnz     short loc_43969e
push    80h
push    3fah
push    esi
push    4
call    sub_441440
add     esp, 10h
pop     esi
retn
sub     esp, 8
mov     word ptr [esp+8+var_4], 0
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+18h+arg_0]
mov     [esp+18h+var_8], ebp
mov     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edi, eax
test    edi, edi
jz      loc_439765
cmp     [esp+18h+arg_4], 3f8h
jz      short loc_4396ec
mov     esi, [esp+18h+arg_8]
push    1
push    esi
call    sub_41aa60
add     esp, 8
jmp     short loc_4396f0
mov     esi, [esp+18h+arg_8]
movsx   ecx, [esp+18h+arg_4]
mov     ebx, [esi+8]
sub     ecx, 3f6h
cmp     ecx, 1eh
ja      short def_43970b
xor     eax, eax
mov     al, ds:byte_439864[ecx]
jmp     ds:jpt_43970b[eax*4]
mov     eax, [edi+4ah]
dec     ebx
push    eax
push    0
push    ebx
call    sub_439890
add     esp, 0ch
mov     [edi+0e6h], eax
push    1
push    edi
call    sub_4392a0
add     esp, 8
cmp     word ptr [edi+32h], 1
jnz     short loc_43974d
cmp     dword ptr [edi+38h], 0
jz      short loc_43974d
mov     eax, [edi+46h]
push    eax
push    edi
call    sub_495ab0
add     esp, 8
push    0
push    0fh
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [edi+4ah]
dec     ebx
push    eax
push    0
push    ebx
call    sub_439890
add     esp, 0ch
mov     [edi+0eah], eax
push    1
push    edi
call    sub_4392a0
add     esp, 8
cmp     word ptr [edi+32h], 1
jnz     short loc_43974d
cmp     dword ptr [edi+38h], 0
jz      short loc_43974d
jmp     short loc_439740
push    2
push    esi
call    sub_41aa60
add     esp, 8
mov     eax, [esi+0ch]
mov     [edi+0e2h], eax
push    1
mov     ecx, [esi+8]
push    edi
mov     [edi+0deh], ecx
call    sub_4392a0
add     esp, 8
cmp     word ptr [edi+32h], 1
jnz     short def_43970b
mov     eax, [edi+0e2h]
mov     ecx, [edi+0deh]
push    eax
push    ecx
push    edi
call    sub_4950a0
jmp     loc_439755
mov     [edi+42h], bx
push    1
push    edi
call    sub_4392a0
add     esp, 8
jmp     def_43970b
test    ebx, ebx
jz      def_43970b
mov     dword ptr [edi+38h], 1
jmp     def_43970b
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
push    0
push    ebx
push    ebp
call    sub_42e310
mov     ecx, [esp+24h+var_8]
add     esp, 8
push    eax
mov     eax, [esp+20h+var_4]
push    eax
push    ecx
call    sub_43b5a0
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ecx, [esp+arg_4]
mov     eax, [esp+arg_0]
cmp     ecx, eax
jle     short loc_43989e
mov     eax, ecx
mov     ecx, [esp+arg_8]
cmp     ecx, eax
jge     short locret_4398a8
mov     eax, ecx
retn
sub     esp, 30h
lea     eax, [esp+30h+var_28]
push    ebx
push    esi
push    edi
mov     edi, [esp+3ch+arg_0]
push    eax
push    edi
call    sub_438610
lea     eax, [esp+44h+var_28]
lea     ecx, [esp+44h+var_30]
add     esp, 8
lea     esi, [edi+0ch]
push    eax
mov     edx, [esi+4]
push    ecx
mov     eax, [esi+0ch]
push    eax
mov     ecx, [esi+8]
push    ecx
mov     eax, [esi]
mov     ebx, [esp+4ch+arg_4]
push    edx
push    eax
push    ebx
call    sub_42d570
mov     [esp+58h+var_28], ebx
lea     ebx, [esp+58h+var_28]
add     esp, 1ch
push    ebx
push    edi
call    sub_4385e0
lea     eax, [esp+44h+var_30]
add     esp, 8
push    esi
push    eax
call    sub_473bf0
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+arg_4]
sub     esp, 108h
mov     [esp+108h+var_108], 0
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_408fc0
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_43995f
mov     eax, [esp+118h+arg_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 0
xor     ax, ax
add     esp, 108h
retn
mov     eax, edi
mov     ebx, [esp+118h+arg_0]
shr     eax, 10h
push    1ch
mov     [ebx+98h], ax
push    edi
call    sub_4612e0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_439a4c
push    esi
call    ds:globallock
movsx   ecx, word ptr [eax+10h]
mov     edi, eax
lea     edx, [ebx+0ch]
movsx   eax, word ptr [edi+12h]
push    eax
push    ecx
push    0
push    0
push    edx
call    ds:setrect
mov     word ptr [ebx+32h], 2
mov     eax, [edi+2]
dec     eax
mov     [ebx+34h], esi
mov     [ebx+4ah], eax
xor     eax, eax
mov     ax, [edi]
cmp     eax, 1002h
jz      short loc_4399da
mov     eax, [esp+118h+arg_8]
mov     [esp+118h+var_108], 0
mov     dword ptr [eax], 0
jmp     short loc_439a35
mov     dword ptr [ebx+0d0h], 0ffffffffh
push    0
call    ds:getdc
mov     ebp, eax
test    ebp, ebp
jz      short loc_439a35
call    sub_40ae50
push    eax
push    ebp
mov     eax, [esp+120h+arg_4]
push    ebx
push    edi
push    eax
call    sub_446080
add     esp, 14h
test    eax, eax
jz      short loc_439a18
mov     [esp+118h+var_108], 5
jmp     short loc_439a2c
mov     eax, [esp+118h+arg_8]
mov     [esp+118h+var_108], 0
mov     dword ptr [eax], 5
push    ebp
push    0
call    ds:releasedc
push    esi
call    ds:globalunlock
mov     ax, [esp+118h+var_108]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
cmp     ds:dword_4a9a0c, 8
jnz     short loc_439a70
mov     eax, [esp+118h+arg_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 5
xor     ax, ax
add     esp, 108h
retn
push    21h
push    edi
call    sub_4612e0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_439c34
push    esi
call    ds:globallock
movsx   ecx, word ptr [eax+8]
mov     ebp, eax
lea     edx, [ebx+0ch]
movsx   eax, word ptr [ebp+0ah]
push    eax
push    ecx
push    0
push    0
push    edx
call    ds:setrect
cmp     dword ptr [ebx+7ah], 0
jz      short loc_439ab3
movsx   eax, word ptr [ebx+7eh]
add     [ebx+18h], eax
mov     ecx, [esp+118h+arg_4]
push    2050102h
mov     word ptr [ebx+32h], 1
mov     eax, [ebp+2]
push    ecx
dec     eax
mov     [ebx+34h], esi
mov     [ebx+4ah], eax
call    sub_462670
mov     edx, [esp+120h+arg_4]
add     esp, 8
movzx   ecx, ax
push    2050001h
mov     [ebx+62h], ecx
push    edx
call    sub_462670
add     esp, 8
mov     ebp, ds:globalunlock
movzx   ecx, ax
push    esi
mov     [ebx+66h], ecx
call    ebp
call    sub_44f2d0
mov     esi, eax
test    esi, esi
jnz     short loc_439b28
mov     eax, [esp+118h+arg_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 5
xor     ax, ax
add     esp, 108h
retn
push    esi
push    edi
call    sub_4940b0
add     esp, 8
test    eax, eax
jz      loc_439c0c
push    esi
call    sub_494180
add     esp, 4
test    ax, ax
jz      loc_439be4
mov     eax, [esp+118h+arg_4]
push    esi
push    ebx
push    eax
call    sub_494b80
add     esp, 0ch
test    eax, eax
jnz     short loc_439bc8
cmp     ds:dword_4a6a84, 0
jnz     short loc_439ba0
lea     eax, [esp+118h+var_108]
push    0
push    105h
push    eax
push    esi
call    sub_44f860
lea     eax, [esp+128h+var_108]
add     esp, 10h
push    eax
push    65h
call    sub_45c150
sub     ax, 2
add     esp, 8
cmp     ax, 1
sbb     eax, eax
neg     eax
mov     ds:dword_4a6a84, eax
mov     eax, [esp+118h+arg_8]
test    esi, esi
mov     dword ptr [eax], 2
jz      short loc_439bba
push    esi
call    sub_44f4a0
add     esp, 4
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
test    esi, esi
jz      short loc_439bd5
push    esi
call    sub_44f4a0
add     esp, 4
mov     ax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
mov     eax, [esp+118h+arg_8]
test    esi, esi
mov     dword ptr [eax], 1
jz      short loc_439bfe
push    esi
call    sub_44f4a0
add     esp, 4
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
test    esi, esi
jz      short loc_439c19
push    esi
call    sub_44f4a0
add     esp, 4
mov     eax, [esp+118h+arg_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 0
xor     ax, ax
add     esp, 108h
retn
cmp     ds:dword_4a9a0c, 8
jnz     short loc_439c19
mov     eax, [esp+118h+arg_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 5
xor     ax, ax
add     esp, 108h
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
movsx   eax, word ptr [esi]
push    ebp
mov     ebx, [eax+esi-0a6h]
lea     ecx, [eax+esi]
mov     ax, [esi+0d8h]
cmp     ax, 3
jz      short loc_439c8b
cmp     ax, 4
jnz     short loc_439cd9
mov     edi, [esp+18h+arg_4]
cmp     edi, 0dh
jz      short loc_439ca0
cmp     edi, 0fh
jz      short loc_439cad
cmp     edi, 1bh
jz      short loc_439ccc
jmp     short loc_439cdd
push    0
push    esi
call    sub_4392a0
add     esp, 8
jmp     short loc_439cdd
cmp     word ptr [esi+42h], 0
jnz     short loc_439cdd
cmp     dword ptr [ecx-9ah], 2
jnz     short loc_439cdd
cmp     dword ptr [esi+38h], 0
jnz     short loc_439cdd
mov     dword ptr [esi+38h], 1
jmp     short loc_439cdd
push    4
push    ebx
call    sub_4417a0
add     esp, 8
jmp     short loc_439cdd
mov     edi, [esp+18h+arg_4]
mov     ebp, [esp+18h+arg_8]
push    ebp
push    edi
push    esi
sub     edi, 0fh
call    sub_495410
mov     [esp+24h+var_8], eax
add     esp, 0ch
cmp     edi, 5bh
ja      def_439d04
xor     eax, eax
mov     al, ds:byte_439e5c[edi]
jmp     ds:jpt_439d04[eax*4]
cmp     [esp+18h+var_8], 0
jz      short loc_439d45
cmp     dword ptr [esi+0dah], 0
jz      short loc_439d24
push    ebx
call    sub_434b70
add     esp, 4
cmp     ds:dword_4a6aba, 2
jnz     short loc_439d3a
push    ebx
push    9
push    2
call    sub_43bd20
add     esp, 0ch
push    ebx
push    16h
call    sub_441c60
add     esp, 8
push    ebx
push    15h
call    sub_441c60
add     esp, 8
jmp     def_439d04
cmp     ds:dword_4a6aba, 2
jnz     short loc_439d6b
push    ebx
push    9
push    2
call    sub_43bd20
add     esp, 0ch
push    ebx
push    16h
call    sub_441c60
add     esp, 8
jmp     def_439d04
cmp     ds:dword_4a68c4, 0
jnz     short loc_439d8b
cmp     word ptr [ebp+0ah], 0
jz      short loc_439d94
push    esi
call    sub_495a30
add     esp, 4
cmp     dword ptr [esi+0f0h], 0
jnz     def_439d04
cmp     word ptr [ebp+0ah], 1
sbb     eax, eax
lea     ecx, [esi+8ch]
add     eax, 4
push    eax
push    ecx
call    sub_409e80
mov     ax, [ebp+0ah]
add     esp, 8
movsx   ecx, ax
cmp     ecx, [esi+3ch]
jnz     short def_439d04
cmp     ax, 1
push    0
sbb     eax, eax
push    0fh
neg     eax
push    esi
mov     [esi+3ch], eax
call    dword ptr [esi+6]
add     esp, 0ch
jmp     short def_439d04
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebx
call    sub_408fc0
add     esp, 4
test    eax, eax
jz      short loc_439e2f
push    21h
push    eax
call    sub_4612e0
add     esp, 8
mov     [esi+34h], eax
mov     dword ptr [esi+6ah], 0
lea     eax, [esp+18h+var_4]
push    eax
push    ebx
push    esi
call    sub_439920
add     esp, 0ch
push    ebx
push    esi
call    sub_4398b0
add     esp, 8
push    esi
call    sub_4390a0
add     esp, 4
jmp     short def_439d04
mov     dword ptr [esi+34h], 0
mov     eax, [esp+18h+var_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 8
mov     word ptr [esp+8+var_4], 0
push    esi
push    edi
mov     esi, [esp+10h+arg_0]
mov     [esp+10h+var_8], esi
mov     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_439f12
mov     eax, [edi+4eh]
push    edi
mov     [edi+46h], eax
call    sub_4390a0
add     esp, 4
cmp     dword ptr [edi+38h], 1
sbb     edi, edi
push    offset dword_4a61c4
neg     edi
call    sub_412f60
add     esp, 4
jmp     short loc_439f20
push    esi
mov     edi, 1
call    sub_438d50
add     esp, 4
push    esi
push    16h
call    sub_441c60
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 0cch
push    ebx
push    esi
push    edi
xor     esi, esi
mov     word ptr [esp+0d8h+var_bc], si
mov     ecx, [esp+0d8h+var_bc]
push    ecx
push    eax
call    sub_43b150
add     esp, 8
mov     ebx, eax
cmp     ebx, esi
jz      loc_43a090
lea     edi, [esp+0d8h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
mov     eax, [esp+0d8h+arg_4]
cmp     eax, 1
sbb     ecx, ecx
neg     ecx
mov     [esp+0d8h+var_b6], cx
test    eax, eax
jz      short loc_439faf
lea     eax, [esp+0d8h+var_c0]
push    eax
push    68h
push    ebx
call    dword ptr [ebx+6]
mov     dword ptr [ebx+0f0h], 1
add     esp, 0ch
jmp     loc_43a07b
fld     qword ptr [ebx+0deh]
fabs
fcom    ds:dbl_4ab098
fstp    [esp+0d8h+var_c8]
fnstsw  ax
test    ah, 41h
jnz     short loc_439fd8
mov     dword ptr [esp+0d8h+var_c8], 0
mov     dword ptr [esp+0d8h+var_c8+4], 406e0000h
lea     esi, [ebx+8ch]
push    0
push    esi
call    sub_409e80
mov     dword ptr [ebx+0c0h], 0
add     esp, 8
mov     eax, [ebx+46h]
mov     ecx, [ebx+4eh]
mov     edx, [ebx+52h]
cmp     ecx, eax
jz      short loc_43a063
mov     edi, dword ptr [esp+0d8h+var_c8+4]
and     edi, 7fffffffh
or      edi, dword ptr [esp+0d8h+var_c8]
jz      short loc_43a063
cmp     edx, ecx
jle     short loc_43a01a
sub     eax, ecx
mov     ecx, eax
jmp     short loc_43a01c
sub     ecx, eax
lea     eax, [ecx+ecx*4]
lea     ecx, [eax+eax*4]
lea     eax, [ecx+ecx*4]
shl     eax, 3
mov     [esp+0d8h+var_cc], eax
fild    [esp+0d8h+var_cc]
pushf
cmp     dword_4af150, 0
jnz     short loc_43a040
fdiv    [esp+0dch+var_c8]
jmp     short loc_43a04d
push    dword ptr [esp+0dch+var_c8+4]
push    dword ptr [esp+0e0h+var_c8]
call    unknown_libname_7
popf
fadd    ds:dbl_4ab0a0
call    __ftol
push    eax
push    esi
call    sub_409f80
add     esp, 8
mov     dword ptr [ebx+0f0h], 0
lea     eax, [esp+0d8h+var_c0]
push    eax
push    68h
push    ebx
call    dword ptr [ebx+6]
add     esp, 0ch
cmp     dword ptr [ebx+38h], 1
sbb     esi, esi
push    offset dword_4a61c4
neg     esi
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 0cch
retn
sub     esp, 0ch
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+18h+arg_0]
push    ebp
mov     dword ptr [esp+1ch+var_8], esi
mov     word ptr [esp+1ch+var_8+4], bx
mov     eax, dword ptr [esp+1ch+var_8+4]
mov     ecx, dword ptr [esp+1ch+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edi, eax
cmp     edi, ebx
jz      loc_43a1fb
mov     ebp, [esp+1ch+arg_4]
dec     ebp
js      loc_43a1ee
cmp     [edi+4ah], ebp
jl      loc_43a1ee
cmp     word ptr [edi+32h], 1
jnz     short loc_43a124
cmp     [edi+0f0h], ebx
jnz     short loc_43a105
push    1
mov     ebx, 1
push    esi
call    sub_439f40
add     esp, 8
push    ebp
push    edi
call    sub_495ab0
add     esp, 8
test    ebx, ebx
jz      loc_43a1e6
push    0
push    esi
call    sub_439f40
jmp     loc_43a1e3
fld     qword ptr [edi+0deh]
fabs
push    ebp
push    edi
fstp    [esp+24h+var_8]
call    sub_4608f0
fld     [esp+24h+var_8]
fcomp   ds:dbl_4ab098
add     esp, 8
fnstsw  ax
test    ah, 41h
jnz     short loc_43a15b
mov     dword ptr [esp+1ch+var_8], 0
mov     dword ptr [esp+1ch+var_8+4], 406e0000h
lea     esi, [edi+8ch]
push    0
push    esi
call    sub_409e80
mov     dword ptr [edi+0c0h], 0
add     esp, 8
mov     eax, [edi+46h]
mov     ecx, [edi+4eh]
mov     edx, [edi+52h]
cmp     eax, ecx
jz      short loc_43a1e6
mov     ebx, dword ptr [esp+1ch+var_8+4]
and     ebx, 7fffffffh
or      ebx, dword ptr [esp+1ch+var_8]
jz      short loc_43a1e6
cmp     edx, ecx
jle     short loc_43a19d
sub     eax, ecx
mov     ecx, eax
jmp     short loc_43a19f
sub     ecx, eax
lea     eax, [ecx+ecx*4]
lea     ecx, [eax+eax*4]
lea     eax, [ecx+ecx*4]
shl     eax, 3
mov     [esp+1ch+var_c], eax
fild    [esp+1ch+var_c]
pushf
cmp     dword_4af150, 0
jnz     short loc_43a1c3
fdiv    [esp+20h+var_8]
jmp     short loc_43a1d0
push    dword ptr [esp+20h+var_8+4]
push    dword ptr [esp+24h+var_8]
call    unknown_libname_7
popf
fadd    ds:dbl_4ab0a0
call    __ftol
push    eax
push    esi
call    sub_409f80
add     esp, 8
cmp     dword ptr [edi+38h], 1
sbb     ebx, ebx
neg     ebx
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
sub     esp, 8
push    esi
push    edi
xor     esi, esi
mov     word ptr [esp+10h+var_4], si
mov     ecx, [esp+10h+var_4]
push    ecx
push    eax
call    sub_43b150
add     esp, 8
mov     edi, eax
cmp     edi, esi
jz      short loc_43a254
cmp     word ptr [edi+32h], 1
jnz     short loc_43a244
push    edi
call    sub_495b80
add     esp, 4
mov     esi, [edi+46h]
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
lea     eax, [esi+1]
pop     edi
pop     esi
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    ebp
xor     edi, edi
cmp     esi, edi
jnz     loc_43a31a
push    offset dword_4a61c4
call    sub_412f30
add     esp, 4
test    eax, eax
jz      loc_43a31a
push    offset dword_4a61c4
call    sub_413090
add     esp, 4
mov     esi, eax
cmp     esi, edi
jz      short loc_43a303
mov     ebx, offset sub_43ae70
mov     ebp, 20h
cmp     [esi+6], ebx
jnz     short loc_43a2ed
test    [esi+0ah], bp
jnz     short loc_43a2ed
movsx   eax, word ptr [esi]
add     eax, esi
lea     ecx, [esp+18h+var_8]
mov     edx, [eax-0a6h]
sub     eax, 0a6h
mov     [ecx], edx
mov     ax, [eax+4]
mov     [ecx+4], ax
mov     eax, [esp+18h+var_8]
test    eax, eax
jz      short loc_43a2ed
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 9
jnz     short loc_43a2ed
cmp     dword ptr [esi+38h], 0
jz      short loc_43a2fe
push    esi
call    sub_413260
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_43a2a7
jmp     short loc_43a303
mov     edi, 1
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 9
jnz     short loc_43a35b
mov     word ptr [esp+18h+var_4], 0
mov     [esp+18h+var_8], esi
mov     eax, [esp+18h+var_4]
push    eax
push    esi
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_43a35b
cmp     dword ptr [eax+38h], 1
sbb     edi, edi
push    offset dword_4a61c4
neg     edi
call    sub_412f60
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
xor     esi, esi
push    eax
call    sub_408fc0
add     esp, 4
mov     ebx, eax
cmp     ebx, esi
jnz     short loc_43a38e
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    1ch
push    ebx
call    sub_4612e0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_43a3c3
push    edi
call    ds:globallock
test    eax, eax
jz      short loc_43a3b4
mov     esi, [eax+2]
push    edi
call    ds:globalunlock
push    edi
call    sub_45ba00
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
push    21h
push    ebx
call    sub_4612e0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_43a3f2
push    edi
call    ds:globallock
test    eax, eax
jz      short loc_43a3e9
mov     esi, [eax+2]
push    edi
call    ds:globalunlock
push    edi
call    sub_45ba00
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax], 0
jnz     short loc_43a417
push    6
mov     eax, [eax+4]
push    eax
call    sub_42cc30
add     esp, 8
xor     eax, eax
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax], 0
jnz     short loc_43a435
mov     eax, [eax+4]
push    eax
call    sub_438d00
add     esp, 4
xor     eax, eax
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi], 0
jz      short loc_43a44e
xor     eax, eax
pop     esi
retn
call    sub_4443d0
mov     eax, [esi+4]
push    eax
call    sub_422c00
add     esp, 4
test    eax, eax
jz      short loc_43a46d
mov     ds:dword_4a68ae, 2
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 0ch
push    ebx
cmp     dword ptr [eax], 0
push    esi
push    edi
push    ebp
jz      short loc_43a49a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     esi, [eax+4]
push    2010308h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_43a4b5
call    sub_4443d0
call    sub_444390
cmp     eax, 1
jz      short loc_43a4c9
call    sub_444390
cmp     eax, 2
jnz     short loc_43a4ce
call    sub_4441e0
push    3fh
push    esi
push    4000001h
push    esi
call    sub_462670
add     esp, 8
movzx   eax, ax
push    eax
call    sub_4441f0
add     esp, 0ch
push    20105e0h
push    esi
call    sub_462670
movzx   eax, ax
add     esp, 8
test    eax, eax
jz      short loc_43a517
cmp     eax, 1
jz      loc_43a5a0
cmp     eax, 2
jz      loc_43a5dc
jmp     loc_43a5e1
lea     eax, [esp+1ch+var_a]
push    eax
push    0bh
push    esi
call    sub_461350
mov     [esp+28h+var_4], eax
add     esp, 0ch
test    eax, eax
jz      loc_43a5e1
mov     bx, [esp+1ch+var_a]
mov     edi, eax
test    bx, bx
jz      short loc_43a58c
mov     eax, esi
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
mov     [esp+1ch+var_8], eax
xor     ebp, ebp
mov     bp, [edi]
or      ebp, [esp+1ch+var_8]
push    ebp
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_43a583
mov     ax, [edi+2]
cmp     ax, 7
jnz     short loc_43a579
push    ebp
call    sub_437e50
add     esp, 4
jmp     short loc_43a583
push    eax
push    ebp
call    sub_43ad00
add     esp, 8
add     edi, 4
sub     bx, 4
jnz     short loc_43a54e
mov     eax, [esp+1ch+var_4]
push    eax
push    0
push    0bh
push    esi
call    sub_4613a0
add     esp, 10h
jmp     short loc_43a5e1
lea     eax, [esp+1ch+var_a]
push    eax
push    0bh
push    esi
call    sub_461350
add     esp, 0ch
mov     edi, eax
mov     ax, [esp+1ch+var_a]
push    1
shr     ax, 2
push    eax
push    edi
push    esi
call    sub_42ec20
add     esp, 10h
test    edi, edi
jz      short loc_43a5e1
push    edi
push    0
push    0bh
push    esi
call    sub_4613a0
add     esp, 10h
jmp     short loc_43a5e1
call    sub_4444d0
test    ds:byte_4a61d4, 1
jnz     short loc_43a616
cmp     ds:dword_4a6aba, 1
jnz     short loc_43a600
push    esi
push    3
push    1
call    sub_43bd20
add     esp, 0ch
cmp     ds:dword_4a6aba, 2
jnz     short loc_43a616
push    esi
push    3
push    2
call    sub_43bd20
add     esp, 0ch
push    2010308h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_43a62e
call    sub_4443d0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
sub     esp, 8
push    ebx
push    esi
mov     ebx, [eax+4]
mov     eax, [eax]
cmp     eax, 0ah
ja      def_43a65f
xor     ecx, ecx
mov     cl, ds:byte_43a828[eax]
jmp     ds:jpt_43a65f[ecx*4]
call    sub_4443d0
push    2000520h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_43a69d
mov     [esp+10h+var_8], ebx
push    1
mov     word ptr [esp+14h+var_4], 4
mov     eax, [esp+14h+var_4]
mov     ecx, [esp+14h+var_8]
push    eax
push    ecx
call    sub_427480
add     esp, 0ch
mov     eax, ebx
shr     eax, 10h
movsx   ecx, ax
shl     ecx, 6
mov     eax, dword_4ae1e0
mov     edx, [ecx+eax+4]
xor     ecx, ecx
mov     cl, bh
mov     esi, [edx]
mov     eax, [esi+ecx*4]
test    eax, eax
jz      short loc_43a6c9
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_43a6d2
push    ebx
call    sub_461250
add     esp, 4
push    3efh
push    eax
call    sub_45c870
add     esp, 8
cmp     ax, 1
sbb     esi, esi
inc     esi
jz      short loc_43a6f2
push    ebx
call    sub_43a840
add     esp, 4
mov     ds:dword_4a68ae, 2
call    sub_4443d0
test    esi, esi
jnz     def_43a65f
push    2000640h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jnz     def_43a65f
push    2000780h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jnz     def_43a65f
push    2000520h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jnz     def_43a65f
push    ebx
call    sub_43a8b0
add     esp, 4
xor     eax, eax
pop     esi
pop     ebx
add     esp, 8
retn
push    4
push    ebx
call    sub_43ad00
add     esp, 8
push    5
push    ebx
call    sub_43ad00
add     esp, 8
cmp     ds:dword_4a6aba, 2
jnz     def_43a65f
push    ebx
push    7
push    2
call    sub_43bd20
add     esp, 0ch
xor     eax, eax
pop     esi
pop     ebx
add     esp, 8
retn
push    2000780h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jz      short def_43a65f
push    ebx
call    sub_43a8b0
add     esp, 4
mov     eax, 1
pop     esi
pop     ebx
add     esp, 8
retn
push    2000640h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_43a7da
push    ebx
call    sub_43a8b0
add     esp, 4
mov     eax, 1
pop     esi
pop     ebx
add     esp, 8
retn
push    0
push    ebx
call    sub_428f40
add     esp, 8
xor     eax, eax
pop     esi
pop     ebx
add     esp, 8
retn
push    1
push    ebx
call    sub_428f40
add     esp, 8
xor     eax, eax
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 8
push    esi
push    edi
mov     esi, [esp+10h+arg_0]
push    0
push    0
push    3efh
push    esi
call    sub_42ee00
fcom    ds:dbl_4ab0a8
add     esp, 10h
mov     edi, 0
fstp    [esp+10h+var_8]
fnstsw  ax
test    ah, 41h
jnz     short loc_43a882
fld     [esp+10h+var_8]
fmul    ds:dbl_4ab0b0
call    __ftol
mov     edi, eax
push    0
push    2000410h
push    esi
call    sub_462670
add     esp, 8
movzx   eax, ax
push    eax
push    edi
push    esi
call    sub_42a680
add     esp, 10h
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_434b70
add     esp, 4
test    eax, eax
jz      short loc_43a8df
push    4
push    esi
call    sub_43ad00
add     esp, 8
push    5
push    esi
call    sub_43ad00
add     esp, 8
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax], 0
jnz     short loc_43a907
push    1
mov     eax, [eax+4]
push    eax
call    sub_43e010
add     esp, 8
xor     eax, eax
retn
mov     eax, [esp+arg_0]
sub     esp, 20h
push    esi
mov     esi, [eax+4]
mov     eax, [eax]
test    eax, eax
jz      short loc_43a936
cmp     eax, 7
jl      short loc_43a92f
cmp     eax, 8
jle     loc_43aa19
xor     eax, eax
pop     esi
add     esp, 20h
retn
push    1
call    sub_48a540
add     esp, 4
test    ax, ax
jnz     loc_43a9f8
mov     [esp+24h+var_20], esi
push    12ch
mov     eax, [esp+28h+var_20]
mov     ecx, [esp+28h+var_1c]
push    ecx
push    eax
push    1
call    sub_43ea30
add     esp, 10h
push    0
push    esi
call    sub_48a820
add     esp, 8
push    2000204h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     short loc_43a9af
lea     eax, [esp+24h+var_18]
push    eax
push    408h
push    esi
call    sub_42ec80
add     esp, 0ch
test    eax, eax
jnz     short loc_43a9af
lea     eax, [esp+24h+var_18]
push    eax
push    408h
push    esi
call    sub_48a420
add     esp, 0ch
push    2000001h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jnz     loc_43a92f
mov     ds:dword_4a68ae, 2
push    2000308h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     loc_43a92f
push    esi
call    sub_48d360
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 20h
retn
cmp     ds:dword_4a6aba, 1
jnz     loc_43a92f
push    esi
push    0bh
push    1
call    sub_43bd20
add     esp, 0ch
xor     eax, eax
pop     esi
add     esp, 20h
retn
push    2000102h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     loc_43a92f
call    sub_48a700
call    sub_48d690
mov     eax, 1
pop     esi
add     esp, 20h
retn
sub     esp, 0ach
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+0bch+arg_8]
test    ebp, ebp
jnz     short loc_43aa72
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ach
retn
mov     eax, [esp+0bch+arg_c]
mov     ecx, [esp+0bch+arg_8]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jz      short loc_43aa9b
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ach
retn
cmp     word ptr [esp+0bch+arg_c], 0
jnz     short loc_43aac9
push    2030001h
push    ebp
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_43aac9
mov     ecx, [esp+0bch+arg_14]
push    ecx
call    sub_43ade0
add     esp, 4
mov     si, [esp+0bch+arg_10]
mov     eax, [esp+0bch+src]
add     word ptr [eax], 0aah
mov     ecx, [esp+0bch+arg_4]
test    si, si
mov     [eax+6], ecx
mov     word ptr [eax+0ah], 10h
jnz     short loc_43aaf6
mov     si, 2
mov     cx, si
mov     edx, [esp+0bch+arg_14]
or      cl, 10h
push    edx
mov     [eax+0ah], cx
push    eax
call    sub_43ac20
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jnz     short loc_43ab2d
push    ebp
call    sub_422b80
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ach
retn
push    offset dword_4a61c4
call    sub_412f30
add     esp, 4
test    eax, eax
jz      loc_43ac04
push    ebx
push    offset dword_4a61c4
call    sub_412fc0
add     esp, 8
mov     edx, eax
test    edx, edx
jz      loc_43abf7
lea     edi, [esp+0bch+var_ac]
xor     eax, eax
mov     dword ptr [edx+6], offset sub_43ae70
mov     ecx, 2ah
rep stosd
stosw
mov     ecx, [esp+0bch+arg_4]
lea     eax, [esp+0bch+arg_8]
mov     [esp+0bch+var_9c], 2
mov     edi, [eax]
mov     [esp+0bch+var_ac], ecx
mov     ax, [eax+4]
lea     ecx, [esp+0bch+var_a8]
mov     [esp+0bch+var_c], si
mov     [ecx], edi
mov     [ecx+4], ax
lea     esi, [esp+0bch+var_ac]
mov     [esp+0bch+var_10], 0
mov     [esp+0bch+var_a], 0
mov     ecx, [esp+0bch+arg_14]
mov     [esp+0bch+var_a0], ecx
mov     ecx, 2ah
movsx   eax, word ptr [edx]
lea     edi, [eax+edx-0aah]
rep movsd
movsw
mov     word ptr [edx+20h], 0
mov     word ptr [edx+1eh], 0
mov     word ptr [edx+1ch], 0
push    0
push    7
push    edx
call    dword ptr [edx+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
call    sub_443140
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ach
retn
mov     eax, [esp+arg_4]
cmp     eax, 100000h
jnz     short loc_43ac2f
xor     eax, eax
jmp     short loc_43ac3d
push    0
inc     eax
push    6
push    eax
call    sub_43ac70
add     esp, 0ch
mov     ecx, [esp+src]
test    eax, eax
push    ecx
jz      short loc_43ac55
push    eax
push    offset dword_4a61c4
call    sub_413190
add     esp, 0ch
retn
push    offset dword_4a61c4
call    sub_413130
add     esp, 8
retn
push    ebx
push    esi
push    edi
push    ebp
xor     ebp, ebp
push    offset dword_4a61c4
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_43aceb
push    offset dword_4a61c4
call    sub_4130c0
add     esp, 4
test    eax, eax
jz      short loc_43acde
mov     di, [esp+10h+arg_4]
mov     esi, [esp+10h+arg_0]
mov     ebx, [esp+10h+arg_8]
cmp     dword ptr [eax+6], offset sub_43ae70
jnz     short loc_43acd1
mov     cx, [eax+0ah]
test    cl, 20h
jnz     short loc_43acd1
test    di, cx
jz      short loc_43acd1
mov     ecx, [eax+2]
cmp     ebx, ecx
jz      short loc_43acd1
movsx   edx, word ptr [eax]
cmp     [edx+eax-9eh], esi
jl      short loc_43acde
mov     ebp, ecx
push    eax
call    sub_413290
add     esp, 4
test    eax, eax
jnz     short loc_43aca5
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     cx, [esp+arg_4]
mov     eax, [esp+arg_0]
sub     esp, 8
mov     word ptr [esp+8+var_4], cx
push    0
mov     [esp+0ch+var_8], eax
mov     ecx, [esp+0ch+var_4]
push    ecx
push    eax
call    sub_4448e0
mov     ecx, [esp+14h+var_4]
mov     edx, [esp+14h+var_8]
add     esp, 0ch
push    ecx
push    edx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_43ad51
push    eax
call    sub_410a80
add     esp, 4
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
add     esp, 8
retn
cmp     [esp+arg_4], 0
jnz     short loc_43ad73
mov     ax, word ptr ds:dword_4a6af8
mov     [esp+arg_4], ax
mov     ax, [esp+arg_0]
cmp     [esp+arg_4], ax
jl      short locret_43ad98
lea     eax, [esp+arg_4]
push    0
lea     ecx, [esp+4+arg_0]
push    eax
push    ecx
push    offset sub_43ada0
call    sub_43b080
add     esp, 10h
retn
mov     edx, [esp+arg_0]
movsx   eax, word ptr [edx]
lea     eax, [eax+edx-0aah]
cmp     dword ptr [eax+0a2h], 0
jz      short loc_43add6
mov     cx, [eax+0ah]
mov     eax, [esp+arg_4]
cmp     [eax], cx
jg      short loc_43add6
mov     eax, [esp+arg_8]
cmp     [eax], cx
jl      short loc_43add6
push    edx
call    sub_410a80
add     esp, 4
mov     eax, 1
retn
lea     ecx, [esp+arg_0]
sub     esp, 4
lea     eax, [esp+4+var_4]
push    0
mov     [esp+8+var_4], 1
push    eax
push    ecx
push    offset sub_43ae10
call    sub_43b080
add     esp, 14h
retn
push    esi
mov     esi, [esp+4+arg_0]
movsx   eax, word ptr [esi]
lea     ecx, [eax+esi-0aah]
cmp     dword ptr [ecx+0a2h], 0
jz      short loc_43ae65
mov     eax, [esp+4+arg_4]
mov     eax, [eax]
cmp     [ecx+0ch], eax
jg      short loc_43ae65
test    eax, eax
jg      short loc_43ae41
mov     ax, [esi+0ah]
and     al, 6
cmp     al, 2
jnz     short loc_43ae65
mov     eax, [esp+4+arg_8]
cmp     dword ptr [eax], 0
jnz     short loc_43ae5c
mov     eax, [ecx+4]
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 9
jz      short loc_43ae65
push    esi
call    sub_410a80
add     esp, 4
mov     eax, 1
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+20h+arg_0]
movsx   eax, word ptr [ebp+0]
lea     ebx, [eax+ebp-0aah]
cmp     dword ptr [ebx], offset sub_40fd60
jnz     short loc_43aea9
mov     edi, [esp+20h+arg_8]
mov     esi, [esp+20h+arg_4]
push    edi
push    esi
push    ebp
call    sub_40fd60
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     esi, [esp+20h+arg_4]
cmp     esi, 1bh
jnz     short loc_43af1d
lea     eax, [esp+20h+var_8]
push    eax
call    sub_444560
lea     edx, [esp+24h+var_10]
add     esp, 4
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     edx, [esp+20h+var_10]
cmp     [ebx+4], edx
jnz     short loc_43af1d
lea     eax, [esp+20h+var_8]
push    eax
call    sub_444560
lea     edx, [esp+24h+var_10]
add     esp, 4
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     dx, [esp+20h+var_c]
cmp     [ebx+8], dx
jnz     short loc_43af1d
xor     eax, eax
mov     [esp+20h+var_8], eax
mov     word ptr [esp+20h+var_4], ax
mov     eax, [esp+20h+var_4]
mov     ecx, [esp+20h+var_8]
push    eax
push    ecx
call    sub_444580
add     esp, 8
mov     edi, [esp+20h+arg_8]
push    edi
push    esi
push    ebp
sub     esi, 0ch
call    dword ptr [ebx]
add     esp, 0ch
mov     ebp, eax
cmp     esi, 5eh
ja      def_43af3f
xor     eax, eax
mov     al, ds:byte_43affc[esi]
jmp     ds:jpt_43af3f[eax*4]
add     ebx, 10h
push    ebx
call    sub_438a60
add     esp, 4
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
call    sub_443140
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
cmp     dword ptr [ebx+10h], 0
jnz     short def_43af3f
cmp     word ptr [edi+0ah], 1
sbb     eax, eax
add     ebx, 3ch
neg     eax
push    eax
push    ebx
call    sub_423f30
add     esp, 8
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
add     ebx, 10h
cmp     dword ptr [ebx], 2
jz      short def_43af3f
mov     eax, [edi+98h]
mov     ecx, [edi+0a6h]
push    eax
push    ecx
push    ebx
call    sub_4389e0
add     esp, 0ch
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
add     ebx, 10h
cmp     dword ptr [ebx], 2
jz      short def_43af3f
mov     eax, [edi+98h]
mov     ecx, [edi+0a6h]
push    eax
push    ecx
push    ebx
call    sub_438980
add     esp, 0ch
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
movsx   edx, word ptr [eax]
test    ecx, ecx
mov     [edx+eax-0eh], ecx
jz      short locret_43b078
jmp     sub_438270
retn
sub     esp, 8
mov     [esp+8+var_8], 0
push    ebx
push    esi
push    edi
push    ebp
push    offset dword_4a61c4
call    sub_412f30
add     esp, 4
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, offset dword_4a61c4
jz      short loc_43b12c
push    eax
inc     ds:dword_4a6a8c
call    sub_4130c0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_43b119
mov     esi, [esp+18h+arg_8]
mov     edi, [esp+18h+arg_0]
mov     ebp, [esp+18h+arg_4]
cmp     dword ptr [ebx+6], offset sub_43ae70
jnz     short loc_43b0ea
test    byte ptr [ebx+0ah], 20h
jnz     short loc_43b0ea
push    esi
push    ebp
push    ebx
call    edi
add     esp, 0ch
test    eax, eax
jz      short loc_43b0fb
push    ebx
call    sub_413290
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_43b0cf
jmp     short loc_43b119
movsx   eax, word ptr [ebx]
add     eax, ebx
lea     edx, [esp+18h+var_8]
mov     ecx, [eax-0a6h]
sub     eax, 0a6h
mov     [edx], ecx
mov     ax, [eax+4]
mov     [edx+4], ax
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
dec     ds:dword_4a6a8c
mov     edx, [esp+18h+arg_c]
test    edx, edx
jz      short loc_43b144
lea     eax, [esp+18h+var_8]
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
push    offset dword_4a61c4
call    sub_412f30
add     esp, 4
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, offset dword_4a61c4
jz      short loc_43b1d3
push    eax
call    sub_413090
add     esp, 4
test    eax, eax
jz      short loc_43b1c2
mov     di, [esp+10h+arg_4]
mov     esi, [esp+10h+arg_0]
mov     ebp, offset sub_43ae70
cmp     [eax+6], ebp
jnz     short loc_43b1b1
test    byte ptr [eax+0ah], 20h
jnz     short loc_43b1b1
movsx   ecx, word ptr [eax]
add     ecx, eax
cmp     [ecx-0a6h], esi
jnz     short loc_43b1b1
cmp     [ecx-0a2h], di
jz      short loc_43b1c0
push    eax
call    sub_413260
add     esp, 4
test    eax, eax
jnz     short loc_43b190
jmp     short loc_43b1c2
mov     ebx, eax
test    ebx, ebx
jnz     short loc_43b1d3
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_43b206
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
cmp     esi, 1
pop     esi
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_43b257
mov     edx, [esp+arg_8]
mov     ecx, [eax+0ch]
add     eax, 0ch
mov     [edx], ecx
mov     ecx, [eax+4]
push    offset dword_4a61c4
mov     [edx+4], ecx
mov     ecx, [eax+8]
mov     [edx+8], ecx
mov     eax, [eax+0ch]
mov     [edx+0ch], eax
call    sub_412f60
add     esp, 4
mov     eax, 1
retn
xor     eax, eax
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
sub     esp, 10h
lea     eax, [esp+10h+var_10]
push    eax
push    ecx
push    edx
call    sub_43b210
add     esp, 0ch
test    eax, eax
jz      short loc_43b299
mov     eax, [esp+10h+arg_8]
lea     ecx, [esp+10h+var_10]
push    eax
push    ecx
call    sub_473c30
add     esp, 8
mov     eax, 1
add     esp, 10h
retn
xor     eax, eax
add     esp, 10h
retn
mov     edx, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 8
mov     [esp+8+var_8], 0
lea     eax, [esp+8+var_8]
push    eax
push    ecx
push    edx
call    sub_43b2e0
mov     edx, [esp+14h+arg_8]
add     esp, 0ch
test    edx, edx
jz      short loc_43b2da
lea     eax, [esp+8+var_8]
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
add     esp, 8
retn
sub     esp, 8
lea     ecx, [esp+8+var_6]
push    esi
mov     esi, [esp+0ch+arg_8]
mov     dx, [esi+4]
mov     eax, [esi]
mov     [ecx], eax
test    eax, eax
mov     [ecx+4], dx
jnz     short loc_43b31b
lea     eax, [esp+0ch+var_8]
push    esi
lea     ecx, [esp+10h+arg_0]
push    eax
mov     [esp+14h+var_8], 8
push    ecx
push    offset sub_43b370
call    sub_43b080
add     esp, 10h
cmp     dword ptr [esi], 0
jnz     short loc_43b363
lea     eax, [esp+0ch+var_8]
push    esi
lea     ecx, [esp+10h+arg_0]
push    eax
mov     [esp+14h+var_8], 4
push    ecx
push    offset sub_43b370
call    sub_43b080
add     esp, 10h
cmp     dword ptr [esi], 0
jnz     short loc_43b363
lea     eax, [esp+0ch+var_8]
push    esi
lea     ecx, [esp+10h+arg_0]
push    eax
mov     [esp+14h+var_8], 2
push    ecx
push    offset sub_43b370
call    sub_43b080
add     esp, 10h
pop     esi
add     esp, 8
retn
sub     esp, 0c8h
xor     edx, edx
xor     eax, eax
mov     ecx, 2fh
push    ebx
push    esi
push    edi
lea     edi, [esp+0d4h+var_c0]
rep stosd
stosw
mov     eax, [esp+0d4h+arg_4]
mov     [esp+0d4h+var_28], edx
mov     esi, [esp+0d4h+arg_8]
mov     ecx, [eax]
mov     ebx, [eax+4]
mov     [esp+0d4h+var_c0], ecx
mov     [esp+0d4h+var_bc], ebx
mov     ebx, [esp+0d4h+arg_0]
mov     cx, [ebx+0ah]
mov     ax, [esi]
test    ax, cx
jz      short loc_43b430
cmp     ax, 8
jnz     short loc_43b3ce
mov     ax, cx
and     al, 0eh
cmp     al, 8
jnz     short loc_43b430
mov     edi, [esi+2]
test    edi, edi
jz      short loc_43b41b
movsx   ecx, word ptr [ebx]
add     ecx, ebx
lea     ebx, [esp+0d4h+var_c8]
mov     eax, [ecx-0a6h]
sub     ecx, 0a6h
mov     [ebx], eax
mov     cx, [ecx+4]
mov     [ebx+4], cx
cmp     [esp+0d4h+var_c8], edi
jnz     short loc_43b430
mov     ax, [esp+0d4h+var_c4]
cmp     [esi+6], ax
jnz     short loc_43b430
mov     eax, 1
pop     edi
mov     dword ptr [esi+2], 0
pop     esi
pop     ebx
add     esp, 0c8h
retn
test    cl, 10h
jz      short loc_43b430
lea     eax, [esp+0d4h+var_c0]
push    eax
push    1
push    ebx
call    dword ptr [ebx+6]
add     esp, 0ch
mov     edx, eax
pop     edi
cmp     edx, 1
sbb     eax, eax
pop     esi
neg     eax
pop     ebx
add     esp, 0c8h
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    0
push    eax
push    ecx
call    sub_4448e0
mov     ecx, [esp+10h+arg_4]
mov     edx, [esp+10h+arg_0]
add     esp, 0ch
push    ecx
push    edx
call    sub_43b150
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_43b499
push    0
push    8
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
and     byte ptr [esi+0ah], 0efh
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     esi
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short locret_43b4d1
mov     ecx, [esp+arg_8]
push    ecx
push    eax
call    sub_43b4e0
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
retn
sub     esp, 0c0h
push    ebx
push    esi
mov     esi, [esp+0c8h+arg_0]
push    edi
mov     ax, [esi+0ah]
mov     bx, ax
and     bx, 6
jz      loc_43b596
mov     cx, [esp+0cch+arg_4]
cmp     bx, cx
jz      loc_43b596
and     ax, 0fff9h
mov     dx, cx
or      dx, ax
mov     [esi+0ah], ax
mov     [esi+0ah], dx
cmp     bx, cx
jnb     short loc_43b569
lea     edi, [esp+0cch+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
lea     eax, [esp+0cch+var_c0]
push    eax
push    19h
push    esi
call    dword ptr [esi+6]
lea     eax, [esp+0d8h+rcsrc2]
add     esp, 0ch
push    ebx
push    eax
call    sub_4753c0
add     esp, 8
push    0
push    7
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
push    0
push    20h
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
test    eax, eax
push    0
jz      short loc_43b58d
push    7
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
push    8
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
mov     eax, [esp+arg_4]
push    ebx
mov     ecx, [esp+4+arg_0]
push    esi
push    edi
push    eax
xor     edi, edi
push    ecx
call    sub_43b150
add     esp, 8
mov     esi, eax
cmp     esi, edi
jz      loc_43b700
push    esi
call    sub_413260
add     esp, 4
test    eax, eax
jz      short loc_43b602
cmp     dword ptr [esi+6], offset sub_43ae70
jnz     short loc_43b5e5
mov     cx, [eax+0ah]
test    cl, 20h
jnz     short loc_43b5e5
test    cl, 6
jnz     short loc_43b5f2
push    eax
call    sub_413260
add     esp, 4
test    eax, eax
jnz     short loc_43b5ce
test    eax, eax
jz      short loc_43b602
movsx   ecx, word ptr [eax]
mov     edi, [ecx+eax-9eh]
jmp     short loc_43b607
mov     edi, 40000000h
push    esi
call    sub_413290
add     esp, 4
test    eax, eax
jz      short loc_43b648
cmp     dword ptr [esi+6], offset sub_43ae70
jnz     short loc_43b62b
mov     cx, [eax+0ah]
test    cl, 20h
jnz     short loc_43b62b
test    cl, 6
jnz     short loc_43b638
push    eax
call    sub_413290
add     esp, 4
test    eax, eax
jnz     short loc_43b614
test    eax, eax
jz      short loc_43b648
movsx   ecx, word ptr [eax]
mov     eax, [ecx+eax-9eh]
jmp     short loc_43b64d
mov     eax, 0c0000000h
mov     ebx, [esp+0ch+arg_8]
cmp     ebx, eax
jl      short loc_43b68b
cmp     ebx, edi
jl      short loc_43b666
mov     ax, [esp+0ch+arg_c]
jnz     short loc_43b690
cmp     ax, 1
jz      short loc_43b690
movsx   eax, word ptr [esi]
push    offset dword_4a61c4
mov     [eax+esi-9eh], ebx
mov     edi, [esi+2]
call    sub_412f60
add     esp, 4
call    sub_443140
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     ax, [esp+0ch+arg_c]
cmp     ax, 2
mov     esi, [esi+2]
jnz     short loc_43b69f
mov     eax, ebx
cmp     ebx, edi
jg      short loc_43b6a2
lea     eax, [ebx+1]
push    esi
push    6
push    eax
call    sub_43ac70
add     esp, 0ch
mov     edi, eax
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
push    edi
push    esi
push    offset dword_4a61c4
call    sub_410b00
mov     ecx, [esp+18h+arg_0]
add     esp, 0ch
mov     edi, eax
mov     eax, [esp+0ch+arg_4]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_43b6fb
movsx   ecx, word ptr [eax]
push    offset dword_4a61c4
mov     [ecx+eax-9eh], ebx
call    sub_412f60
add     esp, 4
call    sub_443140
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
test    esi, esi
jz      short loc_43b760
mov     di, word ptr [esp+8+arg_4]
xor     eax, eax
cmp     di, ax
jnz     short loc_43b72e
push    414h
push    esi
jmp     short loc_43b743
cmp     di, 1
jnz     short loc_43b74b
push    414h
push    esi
call    sub_461f70
add     esp, 4
push    eax
call    sub_42e360
add     esp, 8
mov     ecx, [esp+8+arg_0]
push    1
push    eax
mov     eax, [esp+10h+arg_4]
push    eax
push    ecx
call    sub_43b5a0
add     esp, 10h
pop     edi
pop     esi
retn
movsx   eax, [esp+arg_0]
test    eax, eax
jz      short loc_43b786
cmp     eax, 2
jz      short loc_43b786
cmp     eax, 0ah
jz      short loc_43b786
xor     eax, eax
retn
mov     eax, 1
retn
movsx   eax, [esp+arg_0]
lea     eax, off_4ad950[eax*4]
cmp     eax, offset dword_4ad97c
jnb     short loc_43b7a6
mov     eax, [eax]
retn
mov     eax, offset sub_40fd60
retn
xor     ax, ax
mov     ecx, offset off_4ad950
cmp     off_4ad950, 0
jz      short loc_43b7d3
mov     edx, [esp+arg_0]
cmp     [ecx], edx
jz      short locret_43b7d6
inc     ax
add     ecx, 4
cmp     dword ptr [ecx], 0
jnz     short loc_43b7c5
xor     ax, ax
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
movsx   eax, word ptr [esi]
lea     edi, [eax+esi-0aah]
mov     ecx, [edi]
push    ecx
call    sub_43b7b0
movsx   eax, ax
add     esp, 4
mov     [edi], eax
mov     dword ptr [esi+6], 0
pop     edi
pop     esi
retn
mov     edx, [esp+arg_0]
push    esi
xor     ecx, ecx
cmp     [edx+6], ecx
jnz     short loc_43b84b
movsx   eax, word ptr [edx]
cmp     eax, 0aah
jb      short loc_43b84b
mov     [edx+1eh], cx
lea     esi, [eax+edx-0aah]
mov     dword ptr [edx+6], offset sub_43ae70
mov     [edx+1ch], cx
mov     eax, [esi]
push    eax
call    sub_43b790
add     esp, 4
mov     [esi], eax
pop     esi
retn
xor     eax, eax
pop     esi
mov     [edx+1eh], ax
mov     dword ptr [edx+6], offset sub_40fd60
or      byte ptr [edx+0ah], 20h
mov     [edx+1ch], ax
retn
mov     eax, [esp+arg_4]
sub     esp, 8
cmp     eax, 1
push    esi
jz      short loc_43b889
cmp     eax, 0bh
jz      short loc_43b890
xor     eax, eax
pop     esi
add     esp, 8
retn
xor     eax, eax
pop     esi
add     esp, 8
retn
mov     esi, [esp+0ch+arg_8]
lea     eax, [esp+0ch+var_8]
add     esi, 10h
push    eax
push    esi
call    sub_473c30
mov     ecx, [esp+14h+arg_0]
add     esp, 8
mov     eax, [ecx+0ch]
add     ecx, 0ch
mov     [esi], eax
push    esi
mov     edx, [ecx+4]
mov     [esi+4], edx
lea     edx, [esp+10h+var_8]
mov     eax, [ecx+8]
push    edx
mov     [esi+8], eax
mov     ecx, [ecx+0ch]
mov     [esi+0ch], ecx
call    sub_473bf0
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 180h
mov     [esp+180h+var_c0], eax
push    edi
mov     word ptr [esp+184h+var_bc], 0
mov     ecx, [esp+184h+var_bc]
push    ecx
push    eax
call    sub_43b1e0
add     esp, 8
test    eax, eax
jz      loc_43b99e
mov     eax, [esp+184h+var_bc]
mov     ecx, [esp+184h+var_c0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     edx, eax
test    edx, edx
jz      short loc_43b99e
lea     edi, [esp+184h+var_180]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
lea     edi, [esp+184h+var_c0]
mov     ecx, 2fh
rep stosd
stosw
lea     eax, [esp+184h+var_c0]
lea     ecx, [esp+184h+var_180]
mov     [esp+184h+var_e8], eax
push    ecx
mov     [esp+188h+var_15c], offset sub_43b9b0
push    1dh
push    edx
call    dword ptr [edx+6]
add     esp, 0ch
test    eax, eax
jz      short loc_43b991
cmp     [esp+184h+var_160], 0
jz      short loc_43b991
mov     ecx, [esp+184h+var_28]
mov     eax, [esp+184h+arg_4]
mov     [eax], ecx
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     edi
add     esp, 180h
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+6], offset sub_463da0
jnz     short loc_43b9cd
mov     ecx, [esp+arg_4]
mov     [ecx+98h], eax
mov     eax, 1
retn
xor     eax, eax
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     eax, [ebx]
dec     eax
cmp     eax, 6
ja      def_43b9e3
jmp     ds:jpt_43b9e3[eax*4]
mov     word ptr [ebx+8], 26h
cmp     word ptr [ebx+0eh], 0
jz      short loc_43ba02
call    sub_43bab0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
call    sub_43baf0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
cmp     word ptr [ebx+8], 26h
jz      short loc_43ba1d
mov     eax, 1389h
pop     edi
pop     esi
pop     ebx
retn
mov     edi, offset word_4a6a98
mov     esi, [ebx+0ah]
mov     ecx, 9
rep movsd
movsw
call    sub_43bb50
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     esi, offset word_4a6a98
call    sub_43bb10
mov     edi, [ebx+0ah]
mov     ecx, 9
rep movsd
movsw
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
call    sub_43bcb0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
call    sub_43bcd0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     ecx, 9
push    edi
mov     esi, offset word_4a6a98
mov     edi, [esp+8+arg_0]
rep movsd
movsw
pop     edi
pop     esi
retn
push    edi
xor     eax, eax
mov     edi, offset word_4a6a98
mov     ecx, 9
rep stosd
stosw
mov     ds:word_4a6a98, 1
call    sub_456b60
mov     ds:dword_4a6aa2, eax
mov     ds:dword_4a6a9a, eax
call    sub_409e60
mov     ds:dword_4a6aa6, eax
call    sub_43baf0
pop     edi
retn
call    sub_43bc10
push    0
push    0
call    sub_43bd00
add     esp, 8
retn
call    sub_409e60
mov     ds:dword_4a6aaa, eax
call    sub_43bbf0
test    eax, eax
jz      short locret_43bb42
mov     ecx, ds:dword_4a6a90
mov     eax, ds:dword_4a6aaa
sub     ecx, ds:dword_4a6ab2
sub     eax, ecx
mov     ds:dword_4a6ab2, eax
add     eax, ecx
mov     ds:dword_4a6a90, eax
retn
inc     ds:word_4a6a98
cmp     ds:dword_4a6aaa, 0
jz      short loc_43bba2
mov     eax, ds:dword_4a6aaa
cmp     ds:dword_4a6ab2, eax
jnb     short loc_43bb88
call    sub_409e60
sub     eax, ds:dword_4a6aaa
add     ds:dword_4a6ab2, eax
mov     eax, ds:dword_4a6ab2
mov     ds:dword_4a6a90, eax
mov     eax, ds:dword_4a6aaa
mov     ecx, 3e8h
sub     eax, ds:dword_4a6aa6
sub     edx, edx
div     ecx
add     ds:dword_4a6aae, eax
mov     eax, ds:dword_4a6aa2
mov     ds:dword_4a6a9e, eax
call    sub_456b60
mov     ds:dword_4a6aa2, eax
call    sub_409e60
mov     ds:dword_4a6aaa, 0
mov     ds:dword_4a6aa6, eax
retn
call    sub_409e60
sub     eax, ds:dword_4a6aa6
mov     ecx, 3e8h
sub     edx, edx
div     ecx
add     eax, ds:dword_4a6aae
retn
cmp     ds:dword_4a6aba, 0
jnz     short loc_43bc0c
mov     eax, ds:dword_4a6a90
cmp     ds:dword_4a6ab2, eax
jz      short loc_43bc0c
mov     eax, 1
retn
xor     eax, eax
retn
call    sub_409e60
mov     ds:dword_4a6ab2, eax
mov     ds:dword_4a6a90, eax
retn
call    sub_43bbf0
test    eax, eax
jz      short loc_43bc35
mov     eax, ds:dword_4a6a90
sub     eax, ds:dword_4a6ab2
retn
call    sub_409e60
sub     eax, ds:dword_4a6ab2
retn
sub     esp, 8
call    sub_43bbf0
test    eax, eax
jz      short loc_43bc65
mov     eax, 1
add     esp, 8
retn
cmp     ds:dword_4a6aba, 0
jz      short loc_43bc74
xor     eax, eax
add     esp, 8
retn
call    sub_43bc20
mov     dword ptr [esp+8+var_8], eax
mov     dword ptr [esp+8+var_8+4], 0
fild    [esp+8+var_8]
fmul    ds:dbl_4ab0b8
fcomp   [esp+8+arg_0]
fnstsw  ax
test    ah, 1
jnz     short loc_43bca3
mov     eax, 1
add     esp, 8
retn
xor     eax, eax
add     esp, 8
retn
call    sub_409e60
mov     ds:dword_4a6a90, eax
cmp     ds:dword_4a6ab2, eax
jnz     short locret_43bcc8
inc     eax
mov     ds:dword_4a6a90, eax
retn
call    sub_43bbf0
test    eax, eax
jz      short locret_43bcf4
call    sub_409e60
sub     eax, ds:dword_4a6a90
add     ds:dword_4a6ab2, eax
mov     eax, ds:dword_4a6ab2
mov     ds:dword_4a6a90, eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     ds:dword_4a6aba, eax
mov     ds:dword_4a6ab6, ecx
retn
mov     eax, [esp+arg_0]
cmp     ds:dword_4a6aba, eax
jnz     short locret_43bd6b
cmp     ds:dword_4a6ab6, 0
jz      short locret_43bd6b
mov     eax, [esp+arg_8]
cmp     eax, ds:dword_4a6ab6
jz      short loc_43bd5a
test    eax, eax
jnz     short locret_43bd6b
mov     eax, ds:dword_4a6ab6
push    eax
call    sub_462480
add     esp, 4
cmp     ax, [esp+arg_4]
jnz     short locret_43bd6b
call    sub_43bc10
xor     eax, eax
mov     ds:dword_4a6aba, eax
mov     ds:dword_4a6ab6, eax
retn
cmp     [esp+arg_4], 0
mov     eax, [esp+arg_0]
mov     ds:size, eax
jnz     short loc_43bd8a
mov     ds:dword_4a6ac8, 0
mov     eax, ds:dword_4a6ac8
mov     ds:dword_4a6acc, eax
retn
cmp     ds:dword_4a6ac0, 0
push    esi
jnz     short loc_43bdae
xor     eax, eax
pop     esi
retn
cmp     ds:size, 0
jnz     short loc_43bdbb
xor     eax, eax
pop     esi
retn
mov     eax, ds:dword_4a6acc
cmp     ds:dword_4a6ac8, eax
jnb     short loc_43bdd2
mov     eax, ds:dword_4a6ac8
mov     ds:dword_4a6acc, eax
mov     eax, ds:dword_4a6ac8
inc     eax
imul    eax, ds:size
cmp     eax, ds:dword_4a6ac4
jle     short loc_43be1c
mov     eax, ds:size
push    2
lea     ecx, [eax+eax*4]
mov     eax, ds:dword_4a6ac4
lea     edx, [ecx+ecx*4]
mov     ecx, ds:dword_4a6ac0
lea     esi, ds:0[edx*2]
add     eax, esi
push    eax
push    ecx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jz      short loc_43be70
add     ds:dword_4a6ac4, esi
mov     ecx, ds:dword_4a6ac8
mov     eax, ds:size
sub     ecx, ds:dword_4a6acc
mov     esi, ds:dword_4a6acc
imul    ecx, eax
mov     edx, ds:dword_4a6ac0
push    ecx
imul    esi, eax
add     esi, [edx]
push    esi
add     eax, esi
push    eax
call    _memcpy
mov     edx, [esp+10h+src]
add     esp, 0ch
mov     ecx, ds:size
push    ecx
push    edx
push    esi
call    _memcpy
add     esp, 0ch
mov     eax, 1
inc     ds:dword_4a6ac8
pop     esi
retn
xor     eax, eax
pop     esi
retn
cmp     ds:dword_4a6ac8, 0
jnz     short loc_43be8c
xor     eax, eax
retn
mov     eax, ds:dword_4a6ac0
mov     ecx, ds:size
push    ecx
mov     eax, [eax]
dec     ds:dword_4a6ac8
mov     edx, ds:dword_4a6ac8
imul    edx, ecx
add     eax, edx
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    _memcpy
add     esp, 0ch
mov     eax, 1
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     eax, [ebx]
dec     eax
cmp     eax, 4
ja      def_43bed3
jmp     ds:jpt_43bed3[eax*4]
push    2
push    0
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a6ac0, eax
test    eax, eax
jnz     short loc_43bef8
mov     eax, 8
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ds:dword_4a6ac0
push    eax
call    sub_45bbc0
add     esp, 4
mov     ds:dword_4a6ac4, eax
mov     ds:dword_4a6ac8, 0
call    sub_43cd40
mov     ds:word_4a6ad0, ax
push    0
mov     word ptr [ebx+8], 16h
mov     cx, ds:word_4a6ad0
mov     eax, ds:dword_4a6ac0
push    eax
push    ecx
call    sub_43cda0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
cmp     word ptr [ebx+8], 16h
jz      short loc_43bf52
mov     eax, 1389h
pop     edi
pop     esi
pop     ebx
retn
mov     edi, offset dword_4a6ac0
mov     esi, [ebx+0ah]
mov     ecx, 5
rep movsd
movsw
mov     ax, ds:word_4a6ad0
mov     ds:dword_4a6ac0, 0
push    eax
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6ac0, eax
test    eax, eax
jnz     short loc_43bf8e
mov     eax, 8
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ds:dword_4a6ac0
push    eax
call    sub_45bbc0
add     esp, 4
mov     ds:dword_4a6ac4, eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     esi, offset dword_4a6ac0
mov     edi, [ebx+0ah]
mov     ecx, 5
rep movsd
movsw
mov     dx, ds:word_4a6ad0
mov     eax, ds:dword_4a6ac8
imul    eax, ds:size
push    eax
mov     ecx, ds:dword_4a6ac0
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jz      def_43bed3
pop     edi
pop     esi
pop     ebx
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6ad0
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ds:dword_4a6ac0, 0
pop     edi
pop     esi
pop     ebx
retn
push    0
xor     ecx, ecx
mov     cx, word_4ad9ac
xor     eax, eax
shl     ecx, 10h
mov     ax, ds:word_4a6ad0
or      ecx, eax
push    ecx
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6ad0
push    0
shl     eax, 10h
push    0
or      eax, ecx
push    eax
call    sub_4709c0
mov     ds:dword_4a6ac0, 0
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 40h
push    ebx
push    esi
mov     esi, [esp+48h+arg_0]
push    edi
push    ebp
mov     edi, [esi+4]
mov     eax, [esi]
cmp     eax, 0fh
ja      def_43c0a9
jmp     ds:jpt_43c0a9[eax*4]
push    0
push    edi
call    sub_4269d0
add     esp, 8
call    sub_43c600
push    edi
call    sub_43d070
add     esp, 4
push    0
push    edi
call    sub_426aa0
add     esp, 8
push    edi
call    sub_42c7f0
add     esp, 4
push    0
push    edi
call    sub_426cf0
add     esp, 8
push    edi
call    sub_426c80
add     esp, 4
push    edi
call    sub_433da0
add     esp, 4
push    edi
push    0ch
call    sub_441bb0
add     esp, 8
push    edi
push    0dh
call    sub_441bb0
add     esp, 8
cmp     dword ptr [esi], 0
jnz     short loc_43c134
push    edi
call    sub_42ed10
add     esp, 4
push    0
push    edi
call    sub_43c860
add     esp, 8
push    0
push    edi
call    sub_4246a0
add     esp, 8
push    edi
push    0fh
call    sub_441bb0
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
call    sub_43c600
push    2
push    edi
call    sub_426cf0
add     esp, 8
push    1
push    edi
call    sub_4246a0
add     esp, 8
cmp     dword ptr [esi], 1
jnz     short loc_43c1b6
push    7
push    edi
call    sub_462670
add     esp, 8
cmp     ax, 2
ja      short loc_43c1b6
push    43h
push    edi
push    4060001h
push    edi
call    sub_462670
add     esp, 8
movzx   eax, ax
push    eax
call    sub_4441f0
add     esp, 0ch
push    0
push    edi
call    sub_43ad00
add     esp, 8
push    0ah
push    edi
call    sub_43ad00
add     esp, 8
push    edi
call    sub_4372d0
add     esp, 4
cmp     ds:dword_4a6aba, 3
jnz     short loc_43c1cc
push    edi
push    4
push    3
call    sub_43bd20
add     esp, 0ch
cmp     ds:dword_4a6aba, 2
jnz     def_43c0a9
push    edi
push    4
push    2
call    sub_43bd20
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
push    1
push    edi
call    sub_426e80
add     esp, 8
push    edi
call    sub_426a80
add     esp, 4
test    eax, eax
jz      def_43c0a9
push    eax
push    edi
call    sub_43c710
add     esp, 8
test    eax, eax
jz      short loc_43c22f
push    0
push    edi
call    sub_426e80
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
cmp     dword_4ad9a0, edi
jz      short loc_43c242
push    0
push    edi
call    sub_42e4c0
add     esp, 8
push    edi
call    sub_42ed10
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
call    sub_43c600
test    byte ptr [esi+1eh], 2
jz      short loc_43c26b
push    1
push    edi
call    sub_4269f0
add     esp, 8
test    byte ptr [esi+1eh], 1
jnz     short loc_43c2b9
push    edi
call    sub_426cb0
add     esp, 4
push    offset windowname
push    0
push    2019h
push    edi
call    sub_442960
add     esp, 10h
push    offset windowname
push    0
push    201ah
push    edi
call    sub_442960
add     esp, 10h
push    1
call    sub_438250
add     esp, 4
push    2
push    edi
call    sub_4246a0
add     esp, 8
test    byte ptr [esi+1eh], 4
jz      short loc_43c317
push    7
push    edi
call    sub_462670
add     esp, 8
cmp     ax, 1
ja      short loc_43c317
push    43h
push    edi
push    4060001h
push    edi
call    sub_462670
add     esp, 8
movzx   eax, ax
push    eax
call    sub_4441f0
add     esp, 0ch
push    0
push    edi
call    sub_43ad00
add     esp, 8
push    0ah
push    edi
call    sub_43ad00
add     esp, 8
push    edi
call    sub_4372d0
add     esp, 4
push    0ah
push    edi
call    sub_4246a0
add     esp, 8
lea     eax, [esp+50h+var_40]
mov     ecx, [esi+8]
mov     [esp+50h+var_40], 9
push    eax
push    ecx
call    sub_424a90
add     esp, 8
mov     ebx, [esi+8]
push    ebx
push    edi
call    sub_426aa0
movsx   ecx, bx
add     esp, 8
mov     eax, ds:dword_4a6770+2
lea     edx, ds:0[ecx*4]
mov     ecx, [eax]
lea     ebp, [ecx+edx+6]
mov     cx, [ebp+0]
lea     eax, [ecx+1]
mov     ah, ch
mov     [ebp+0], ax
mov     ecx, ds:dword_4a6770+2
mov     ebp, [ecx]
and     word ptr [ebp+edx+4], 0efffh
mov     ecx, ds:dword_4a6770+2
mov     ebp, [ecx]
mov     ax, [ebp+edx+4]
and     ah, 60h
cmp     ah, 20h
jnz     short loc_43c397
push    edi
call    sub_42ae70
add     esp, 4
push    2
push    edi
call    sub_426cf0
add     esp, 8
test    byte ptr [esi+1eh], 1
jnz     short loc_43c3a7
push    ebx
push    edi
call    sub_43d090
add     esp, 8
push    edi
call    sub_426ac0
add     esp, 4
test    ax, ax
jnz     short loc_43c3cd
push    100020ch
push    ebx
call    sub_462670
add     esp, 8
push    eax
push    edi
call    sub_426af0
add     esp, 8
push    0
push    ebx
call    sub_4372e0
add     esp, 8
cmp     ds:dword_4a6aba, 3
jnz     short loc_43c3ee
push    edi
push    4
push    3
call    sub_43bd20
add     esp, 0ch
push    edi
push    0ch
call    sub_441bb0
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
cmp     ds:dword_4a68ae, 2
jnz     short loc_43c42f
push    0bh
push    edi
call    sub_4246a0
add     esp, 8
push    2
push    edi
call    sub_4246a0
add     esp, 8
push    0
push    edi
call    sub_428f40
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
cmp     ds:dword_4a68ae, 2
jnz     short loc_43c463
push    0eh
push    edi
call    sub_4246a0
add     esp, 8
push    0ch
push    edi
call    sub_4246a0
add     esp, 8
push    1
push    edi
call    sub_428f40
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
push    edi
call    sub_426eb0
add     esp, 4
test    eax, eax
jz      def_43c0a9
push    edi
call    sub_461cc0
add     esp, 4
test    eax, eax
jz      def_43c0a9
push    edi
call    sub_43c950
add     esp, 4
test    eax, eax
jnz     def_43c0a9
push    edi
call    sub_43c8a0
add     esp, 4
test    eax, eax
jnz     def_43c0a9
mov     ds:dword_4a68ae, 2
push    edi
call    sub_426a80
add     esp, 4
test    eax, eax
jz      def_43c0a9
push    1
push    edi
call    sub_43c860
add     esp, 8
push    edi
call    sub_43cad0
add     esp, 4
push    3
push    edi
call    sub_4246a0
add     esp, 8
push    edi
push    0fh
call    sub_441bb0
add     esp, 8
push    0
push    edi
call    sub_440ca0
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
cmp     ds:dword_4a68ae, 2
jnz     short loc_43c52a
push    0bh
push    edi
call    sub_4246a0
add     esp, 8
push    0
push    edi
call    sub_428f40
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
cmp     ds:dword_4a68ae, 2
jnz     short loc_43c553
push    0ch
push    edi
call    sub_4246a0
add     esp, 8
push    1
push    edi
call    sub_428f40
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
cmp     dword_4ad9a0, 0
push    esi
jz      short loc_43c5bf
call    sub_43c600
mov     esi, [esp+4+arg_0]
push    1000430h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 3
push    esi
jnz     short loc_43c5e2
call    sub_434f70
add     esp, 4
pop     esi
retn
call    sub_461f70
add     esp, 4
mov     dword_4ad9a0, eax
pop     esi
retn
mov     eax, dword_4ad9a0
test    eax, eax
jz      short loc_43c61e
push    0
push    eax
call    sub_42e4c0
mov     dword_4ad9a0, 0
add     esp, 8
jmp     sub_434ef0
push    ebx
push    esi
push    edi
mov     ebx, 0
mov     esi, [esp+0ch+arg_0]
push    ebp
mov     ebp, [esp+10h+arg_4]
push    esi
cmp     ebp, 1
adc     ebx, 0ffffffffh
call    sub_461f70
and     bx, 2
add     esp, 4
cmp     ds:dword_4a68c0, eax
mov     edi, eax
jnz     short loc_43c670
inc     bx
push    ebx
push    esi
push    edi
call    sub_434990
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
mov     ax, [edx+ecx*4+4]
and     ah, 60h
cmp     ah, 60h
jz      short loc_43c698
inc     bx
push    ebx
push    esi
call    sub_435870
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_4365a0
add     esp, 4
test    eax, eax
jnz     short loc_43c6d6
push    edi
call    sub_43c6e0
add     esp, 4
test    eax, eax
jz      short loc_43c6c3
inc     bx
push    ebx
push    esi
call    sub_435870
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    edi
call    sub_42e820
add     esp, 4
push    ebp
push    esi
call    sub_434c50
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ds:dword_4a68c0
mov     ecx, [esp+arg_0]
cmp     eax, ecx
jnz     short loc_43c6fd
mov     eax, ds:dword_4a68ae
sub     eax, 2
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
push    ecx
push    eax
call    sub_463480
add     esp, 8
retn
sub     esp, 4
mov     ecx, ds:dword_4a6770+2
push    esi
push    edi
mov     esi, [esp+0ch+arg_4]
movsx   eax, si
lea     edi, ds:0[eax*4]
mov     eax, [ecx]
mov     ax, [eax+edi+4]
and     ah, 60h
cmp     ah, 60h
jz      short loc_43c75a
lea     eax, [esp+0ch+var_4]
push    eax
push    0
call    sub_4350e0
add     esp, 8
test    eax, eax
jz      short loc_43c75a
cmp     esi, [esp+0ch+var_4]
jnz     short loc_43c75a
push    esi
call    sub_434d80
add     esp, 4
mov     eax, ds:dword_4a6770+2
mov     ecx, [eax]
mov     ax, [ecx+edi+4]
and     ax, 6000h
shr     ax, 0dh
movzx   eax, ax
cmp     eax, 1
jz      short loc_43c7bf
cmp     eax, 2
jz      loc_43c7ff
cmp     eax, 3
jz      loc_43c838
mov     edi, [esp+0ch+arg_0]
push    0
push    edi
call    sub_433c40
add     esp, 8
push    edi
call    sub_433960
add     esp, 4
test    eax, eax
jz      loc_43c856
push    4
push    eax
push    edi
call    sub_434990
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
add     esp, 4
retn
mov     edi, [esp+0ch+arg_0]
push    0
push    edi
call    sub_433c40
add     esp, 8
push    4
push    edi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_43c7f4
push    edi
call    sub_43c950
add     esp, 4
test    eax, eax
jz      short loc_43c7f4
push    edi
call    sub_4355b0
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
add     esp, 4
retn
mov     edi, [esp+0ch+arg_0]
push    esi
push    edi
call    sub_433890
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_43c78c
push    esi
push    edi
call    sub_43d090
add     esp, 8
push    4
push    esi
push    edi
call    sub_434990
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
add     esp, 4
retn
mov     edi, [esp+0ch+arg_0]
push    0
push    edi
call    sub_433c40
add     esp, 8
push    esi
call    sub_434d10
add     esp, 4
pop     edi
pop     esi
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_42cc00
add     esp, 4
test    eax, eax
jz      short loc_43c88b
cmp     [esp+4+arg_4], 0
mov     cx, 1
jnz     short loc_43c881
mov     cx, 3
push    ecx
push    esi
call    sub_42cc30
add     esp, 8
push    esi
call    sub_4371e0
add     esp, 4
pop     esi
retn
sub     esp, 50h
lea     eax, [esp+50h+var_48]
push    esi
mov     esi, [esp+54h+arg_0]
push    edi
xor     edi, edi
push    eax
push    edi
push    2019h
push    esi
call    sub_4427d0
add     esp, 10h
test    eax, eax
jz      short loc_43c93b
lea     eax, [esp+58h+var_48]
push    edi
push    eax
call    sub_41aa60
lea     eax, [esp+60h+var_48]
add     esp, 8
push    eax
call    sub_442d80
add     esp, 4
test    eax, eax
jz      short loc_43c93b
cmp     byte ptr [eax], 0
jz      short loc_43c93b
push    eax
push    esi
call    sub_443340
lea     eax, [esp+60h+var_48]
add     esp, 8
push    eax
call    sub_442e00
lea     eax, [esp+5ch+var_30]
add     esp, 4
push    eax
call    sub_433c30
lea     eax, [esp+5ch+var_50]
lea     ecx, [esp+5ch+var_30]
mov     [esp+5ch+var_30], 2
add     esp, 4
push    eax
push    ecx
push    esi
call    sub_433560
add     esp, 0ch
mov     edi, eax
test    edi, edi
jz      short loc_43c93b
mov     eax, [esp+58h+var_50]
push    1
push    eax
call    sub_43c630
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
add     esp, 50h
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
mov     [esp+4+var_4], 1
lea     eax, [esp+4+var_4]
push    eax
push    offset loc_43c980
push    0
push    ecx
call    sub_4620e0
mov     eax, [esp+14h+var_4]
add     esp, 10h
add     esp, 4
retn
mov     eax, [esp+4]
push    1000102h
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_43c9a4
mov     eax, [esp+8]
mov     dword ptr [eax], 0
xor     eax, eax
retn
mov     eax, 1
retn
sub     esp, 10h
lea     eax, [esp+10h+var_8]
push    eax
call    sub_428bb0
lea     edx, [esp+14h+var_10]
add     esp, 4
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
cmp     [esp+10h+var_10], 0
jz      short loc_43ca42
cmp     word ptr [esp+10h+var_c], 1
jnz     short loc_43ca42
mov     eax, [esp+10h+var_c]
mov     ecx, [esp+10h+var_10]
push    eax
push    ecx
call    sub_428eb0
add     esp, 8
test    eax, eax
jz      short loc_43ca42
mov     eax, [esp+10h+var_c]
mov     ecx, [esp+10h+var_10]
push    eax
push    ecx
call    sub_428be0
add     esp, 8
mov     ecx, ds:dword_4a68c0
push    ecx
call    sub_462480
add     esp, 4
cmp     ax, 4
jnz     short loc_43ca2a
mov     eax, ds:dword_4a68c0
push    eax
call    sub_440b50
add     esp, 4
mov     eax, [esp+10h+var_10]
push    1
push    eax
call    sub_43c630
add     esp, 8
mov     eax, 1
add     esp, 10h
retn
xor     eax, eax
add     esp, 10h
retn
sub     esp, 38h
push    esi
push    edi
mov     esi, [esp+40h+arg_0]
push    esi
call    sub_461f70
add     esp, 4
mov     edi, eax
push    1000102h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_43ca90
cmp     ds:dword_4a68c0, edi
jz      short loc_43ca90
push    1
push    esi
call    sub_43c630
add     esp, 8
pop     edi
pop     esi
add     esp, 38h
retn
push    esi
call    sub_4624e0
lea     ecx, [esp+44h+var_30]
mov     [esp+44h+var_30], eax
lea     eax, [esp+44h+var_38]
mov     [esp+44h+var_2c], esi
add     esp, 4
push    eax
push    ecx
call    sub_433460
add     esp, 8
test    eax, eax
jz      short loc_43cac6
mov     eax, [esp+40h+var_38]
push    1
push    eax
call    sub_43c630
add     esp, 8
pop     edi
pop     esi
add     esp, 38h
retn
sub     esp, 8
mov     word ptr [esp+8+var_4], 2
push    ebx
push    esi
push    edi
mov     edi, [esp+14h+arg_0]
mov     [esp+14h+var_8], edi
mov     eax, [esp+14h+var_4]
mov     ecx, [esp+14h+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_43cb2d
push    edi
call    sub_4432f0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_43cb20
push    ebx
push    esi
call    sub_440a50
add     esp, 8
push    ebx
push    edi
call    sub_443310
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     [esp+arg_0], 0
jz      short loc_43cba0
lea     eax, [esp+arg_0]
push    1
push    eax
call    sub_44b960
add     esp, 8
test    eax, eax
jz      short loc_43cb65
mov     eax, 5
mov     ds:dword_4a9a0c, eax
retn
cmp     [esp+arg_0], 0
jz      short loc_43cba0
mov     eax, [esp+arg_0]
push    eax
call    sub_44f7a0
add     esp, 4
cmp     eax, 2800h
jge     short loc_43cba0
mov     eax, [esp+arg_0]
push    eax
call    sub_44b360
add     esp, 4
cmp     eax, 1
sbb     eax, eax
and     eax, 457h
add     eax, 70h
mov     ds:dword_4a9a0c, eax
retn
mov     eax, [esp+arg_0]
push    1
push    55545357h
push    offset sub_489c70
push    1
push    17h
push    eax
call    sub_471190
add     esp, 18h
test    eax, eax
jnz     short loc_43cbca
mov     word_4ad9ac, 17h
cmp     [esp+arg_0], 0
mov     eax, ds:dword_4a9a0c
jz      short loc_43cc1c
test    eax, eax
jz      short loc_43cc1c
mov     eax, [esp+arg_0]
push    eax
call    sub_44b480
mov     eax, [esp+4+arg_0]
add     esp, 4
push    1
push    55545357h
push    offset sub_489c70
push    1
push    17h
push    eax
call    sub_471190
add     esp, 18h
test    eax, eax
mov     eax, ds:dword_4a9a0c
jnz     short loc_43cc1c
mov     word_4ad9ac, 17h
mov     ds:dword_4a9a0c, eax
retn
mov     ds:dword_4a9a0c, eax
retn
mov     eax, [esp+arg_0]
cmp     eax, 1
sbb     ecx, ecx
inc     ecx
test    eax, eax
mov     dword_4ad9b0, ecx
jz      short locret_43cc4b
mov     eax, [eax]
mov     ds:dword_4a6ad8, eax
retn
sub     esp, 8
cmp     dword_4ad9b0, 0
push    esi
push    edi
jz      loc_43ccfa
call    sub_43cf40
test    eax, eax
jz      loc_43ccfa
mov     eax, ds:dword_4a8514
push    eax
call    sub_44f3f0
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_43cc8e
mov     eax, 8
pop     edi
pop     esi
add     esp, 8
retn
mov     ecx, ds:dword_4a6ad8
test    ecx, ecx
jz      short loc_43ccd3
lea     eax, [esp+10h+var_4]
lea     edx, [esp+10h+hmem]
push    eax
push    edx
push    ecx
call    sub_44f550
add     esp, 0ch
cmp     [esp+10h+hmem], 0
jz      short loc_43ccd3
mov     eax, [esp+10h+hmem]
mov     ecx, ds:dword_4a8514
push    eax
push    ecx
call    sub_44f4f0
mov     ecx, [esp+18h+hmem]
add     esp, 8
push    ecx
call    sub_45ba00
add     esp, 4
mov     ax, word_4ad9ac
push    0
push    0
push    esi
push    eax
call    sub_40aaa0
add     esp, 10h
mov     edi, eax
push    esi
call    sub_44f4a0
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
add     esp, 8
retn
mov     ax, word_4ad9ac
push    0
push    eax
call    sub_471d50
add     esp, 8
mov     eax, ds:dword_4a9a0c
pop     edi
pop     esi
add     esp, 8
retn
mov     ax, word_4ad9ac
test    ax, ax
jz      short locret_43cd3d
push    eax
call    sub_471a10
mov     word_4ad9ac, 0
add     esp, 4
retn
xor     eax, eax
mov     ax, word_4ad9ac
shl     eax, 10h
mov     al, 2
push    eax
call    sub_4710a0
add     esp, 4
retn
mov     ax, word_4ad9ac
push    esi
test    ax, ax
jz      short loc_43cd92
movzx   eax, ax
shl     eax, 10h
mov     ecx, [esp+4+arg_0]
and     ecx, 0ffffh
or      eax, ecx
push    eax
call    sub_470640
add     esp, 4
mov     esi, eax
call    sub_43cf80
mov     eax, esi
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+nnumberofbytestowrite]
mov     ecx, [esp+hmem]
push    eax
push    ecx
xor     eax, eax
mov     ecx, [esp+8+arg_0]
mov     ax, word_4ad9ac
and     ecx, 0ffffh
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
call    sub_43cf80
mov     eax, ds:dword_4a9a0c
retn
mov     cx, word_4ad9ac
push    esi
test    cx, cx
jz      short loc_43ce22
mov     eax, [esp+4+arg_c]
mov     edx, [esp+4+arg_8]
mov     esi, [esp+4+arg_4]
push    eax
movzx   eax, cx
shl     eax, 10h
push    edx
mov     ecx, [esp+0ch+arg_0]
push    esi
and     ecx, 0ffffh
or      eax, ecx
push    eax
call    sub_445670
add     esp, 10h
mov     esi, eax
call    sub_43cf80
mov     eax, esi
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_c]
push    esi
mov     ecx, [esp+4+arg_8]
push    eax
mov     edx, [esp+8+arg_4]
push    ecx
push    edx
xor     eax, eax
mov     ax, word_4ad9ac
mov     ecx, [esp+10h+arg_0]
shl     eax, 10h
and     ecx, 0ffffh
or      eax, ecx
push    eax
call    sub_445850
add     esp, 10h
mov     esi, eax
call    sub_43cf80
mov     eax, esi
pop     esi
retn
mov     eax, [esp+arg_8]
push    esi
mov     ecx, [esp+4+arg_4]
push    eax
push    ecx
xor     eax, eax
mov     ax, word_4ad9ac
mov     ecx, [esp+0ch+arg_0]
shl     eax, 10h
and     ecx, 0ffffh
or      eax, ecx
push    eax
call    sub_4459f0
add     esp, 0ch
mov     esi, eax
call    sub_43cf80
mov     eax, esi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     si, word ptr [esp+0ch+arg_0]
push    edi
push    esi
call    sub_43cd60
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_43cf2f
lea     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+arg_8]
mov     edx, [esp+10h+arg_4]
push    eax
mov     [esp+14h+var_4], 0
push    ecx
push    edx
push    edi
call    sub_45cca0
add     esp, 10h
movsx   ebx, ax
cmp     [esp+10h+var_4], 0
jz      short loc_43cf0a
mov     eax, [edi]
push    eax
call    sub_45c830
add     esp, 4
push    eax
push    edi
push    esi
call    sub_43cda0
add     esp, 0ch
push    0
xor     ecx, ecx
movzx   eax, si
mov     cx, word_4ad9ac
shl     ecx, 10h
or      ecx, eax
push    ecx
call    sub_470920
add     esp, 8
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
call    sub_43cf80
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ax, word_4ad9ac
sub     esp, 8
test    ax, ax
jz      short loc_43cf6b
push    eax
call    sub_471bd0
mov     [esp+0ch+var_8], eax
add     esp, 4
cmp     [esp+8+var_8], 0
jnz     short loc_43cf6b
mov     eax, 1
add     esp, 8
retn
xor     eax, eax
add     esp, 8
retn
mov     eax, ds:dword_4a9a0c
test    eax, eax
jz      short locret_43cf9d
push    eax
call    sub_4698f0
add     esp, 4
push    eax
push    37h
call    sub_422a90
add     esp, 8
retn
sub     esp, 4
lea     eax, [esp+4+buffer]
push    esi
push    2
push    5c0h
push    4
push    eax
call    sub_47fe70
mov     eax, dword ptr [esp+18h+buffer]
mov     esi, [esp+18h+arg_0]
add     esp, 10h
push    eax
push    esi
call    sub_44f6a0
lea     ecx, [esp+10h+buffer]
add     esp, 8
push    ecx
push    esi
call    sub_44f700
add     esp, 8
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
dec     ecx
cmp     ecx, 6
ja      short def_43cfec
jmp     ds:jpt_43cfec[ecx*4]
mov     word ptr [eax+8], 0ch
mov     ecx, offset word_4a6ae0
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
xor     eax, eax
retn
cmp     word ptr [eax+8], 0ch
jz      short loc_43d018
mov     eax, 1389h
retn
mov     ecx, [eax+0ah]
mov     edx, offset word_4a6ae0
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
xor     eax, eax
mov     ecx, [ecx+8]
mov     [edx+8], ecx
retn
mov     ecx, offset word_4a6ae0
mov     edx, [eax+0ah]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     ecx, [ecx+8]
mov     [edx+8], ecx
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_43d110
add     esp, 4
test    eax, eax
jz      short locret_43d088
inc     ds:word_4a6ae0
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
push    edi
call    sub_43d110
add     esp, 4
test    eax, eax
jz      short loc_43d102
inc     ds:word_4a6ae2
push    100020ch
mov     eax, [esp+0ch+arg_4]
push    eax
call    sub_462670
mov     si, ax
add     esp, 8
cmp     si, 1
jnz     short loc_43d0cc
inc     ds:word_4a6ae4
cmp     si, 2
jnz     short loc_43d0d9
inc     ds:word_4a6ae6
push    edi
call    sub_4269b0
add     esp, 4
cmp     ax, 1
jnz     short loc_43d102
cmp     si, 1
jnz     short loc_43d0f5
inc     ds:word_4a6ae8
cmp     si, 2
jnz     short loc_43d102
inc     ds:word_4a6aea
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    0
push    offset loc_43d130
push    0
push    eax
call    sub_4620e0
add     esp, 10h
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+4]
push    100020ch
push    eax
call    sub_462670
add     esp, 8
cmp     ax, 1
sbb     eax, eax
neg     eax
retn
mov     dx, [esp+arg_0]
push    esi
sub     dx, 2001h
movsx   eax, dx
sub     eax, 1ah
cmp     eax, 7
ja      short def_43d166
jmp     ds:jpt_43d166[eax*4]
xor     eax, eax
pop     esi
retn
mov     ax, ds:word_4a6ae0
jmp     short loc_43d1d7
mov     ax, ds:word_4a6ae2
jmp     short loc_43d1d7
mov     ax, ds:word_4a6ae4
jmp     short loc_43d1d7
mov     ax, ds:word_4a6ae6
jmp     short loc_43d1d7
mov     ax, ds:word_4a6ae8
jmp     short loc_43d1d7
mov     ax, ds:word_4a6aea
jmp     short loc_43d1d7
xor     ecx, ecx
xor     eax, eax
mov     ax, ds:word_4a6ae6
mov     cx, ds:word_4a6ae4
lea     esi, [eax+ecx]
test    esi, esi
jnz     short loc_43d1be
xor     ax, ax
jmp     short loc_43d1d7
cmp     dx, 20h
jz      short loc_43d1c6
mov     ecx, eax
lea     eax, ds:0[ecx*4]
sub     edx, edx
lea     ecx, [eax+eax*4]
lea     eax, [ecx+ecx*4]
div     esi
mov     ecx, [esp+4+arg_4]
pop     esi
movzx   eax, ax
mov     word ptr [ecx], 1
mov     [ecx+8], eax
mov     eax, 1
retn
mov     ax, [esp+arg_0]
sub     ax, 2001h
movsx   eax, ax
sub     eax, 1ah
cmp     eax, 5
ja      short def_43d224
jmp     ds:jpt_43d224[eax*4]
xor     eax, eax
retn
mov     eax, [esp+arg_4]
push    eax
call    sub_43d2e0
mov     ds:word_4a6ae0, ax
add     esp, 4
mov     eax, 1
retn
mov     eax, [esp+arg_4]
push    eax
call    sub_43d2e0
mov     ds:word_4a6ae2, ax
add     esp, 4
mov     eax, 1
retn
mov     eax, [esp+arg_4]
push    eax
call    sub_43d2e0
mov     ds:word_4a6ae4, ax
add     esp, 4
mov     eax, 1
retn
mov     eax, [esp+arg_4]
push    eax
call    sub_43d2e0
mov     ds:word_4a6ae6, ax
add     esp, 4
mov     eax, 1
retn
mov     eax, [esp+arg_4]
push    eax
call    sub_43d2e0
mov     ds:word_4a6ae8, ax
add     esp, 4
mov     eax, 1
retn
mov     eax, [esp+arg_4]
push    eax
call    sub_43d2e0
mov     ds:word_4a6aea, ax
add     esp, 4
mov     eax, 1
retn
push    esi
push    1
mov     esi, [esp+8+arg_0]
push    esi
call    sub_41aa60
add     esp, 8
mov     eax, [esi+8]
test    eax, eax
jge     short loc_43d2f9
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
dec     eax
cmp     eax, 4
ja      def_43d311
jmp     ds:jpt_43d311[eax*4]
push    2
push    0
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a6afc, eax
mov     ds:dword_4a6b00, 0
mov     word ptr ds:dword_4a6af8, 1
call    sub_43cd40
mov     word ptr ds:dword_4a6af8+2, ax
mov     word ptr [esi+8], 0ch
mov     dx, word ptr ds:dword_4a6af8+2
mov     eax, ds:dword_4a6b00
push    eax
mov     ecx, ds:dword_4a6afc
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
pop     esi
retn
cmp     word ptr [esi+8], 0ch
jz      short loc_43d37a
mov     eax, 1389h
pop     esi
retn
mov     ecx, [esi+0ah]
mov     edx, offset dword_4a6af8
mov     eax, [ecx]
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     ecx, [ecx+8]
mov     [edx+8], ecx
mov     ax, word ptr ds:dword_4a6af8+2
push    eax
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6afc, eax
test    eax, eax
jnz     def_43d311
mov     eax, 8
pop     esi
retn
mov     edx, [esi+0ah]
mov     eax, ds:dword_4a6af8
mov     ecx, offset dword_4a6af8
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     ecx, [ecx+8]
mov     [edx+8], ecx
mov     edx, ds:dword_4a6afc
mov     cx, word ptr ds:dword_4a6af8+2
mov     eax, ds:dword_4a6b00
push    eax
push    edx
push    ecx
call    sub_43cda0
add     esp, 0ch
pop     esi
retn
xor     esi, esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
xor     ecx, ecx
mov     cx, word ptr ds:dword_4a6af8+2
or      eax, ecx
push    eax
call    sub_470920
mov     word ptr ds:dword_4a6af8+2, si
add     esp, 8
xor     eax, eax
mov     ds:dword_4a6afc, esi
pop     esi
retn
xor     esi, esi
xor     eax, eax
mov     ax, word_4ad9ac
push    esi
shl     eax, 10h
push    esi
xor     ecx, ecx
mov     cx, word ptr ds:dword_4a6af8+2
or      eax, ecx
push    eax
call    sub_4709c0
mov     word ptr ds:dword_4a6af8+2, si
add     esp, 0ch
mov     ds:dword_4a6afc, esi
xor     eax, eax
pop     esi
retn
cmp     word ptr ds:dword_4a6af8, 1ffh
jl      short loc_43d480
call    sub_43d5c0
mov     ax, word ptr ds:dword_4a6af8
inc     word ptr ds:dword_4a6af8
retn
sub     esp, 4
push    esi
mov     si, [esp+8+arg_4]
test    si, si
jnz     short loc_43d4a7
mov     si, word ptr ds:dword_4a6af8
dec     si
mov     dx, [esp+8+arg_0]
cmp     si, dx
jl      short loc_43d508
mov     eax, ds:dword_4a6afc
mov     ecx, ds:dword_4a6b00
test    ecx, ecx
mov     eax, [eax]
jle     short loc_43d4d7
cmp     [eax], si
jg      short loc_43d4cd
cmp     [eax+2], dx
jge     short loc_43d50d
add     eax, 4
sub     ecx, 4
test    ecx, ecx
jg      short loc_43d4c2
mov     [esp+8+src], dx
mov     eax, ds:dword_4a6b00
mov     [esp+8+var_2], si
push    eax
lea     edx, [esp+0ch+src]
push    4
push    edx
mov     ecx, ds:dword_4a6afc
push    ecx
call    sub_45baf0
add     esp, 10h
test    eax, eax
jz      short loc_43d508
add     ds:dword_4a6b00, 4
pop     esi
add     esp, 4
retn
cmp     [eax], dx
jle     short loc_43d515
mov     [eax], dx
cmp     [eax+2], si
jge     short loc_43d508
mov     [eax+2], si
pop     esi
add     esp, 4
retn
push    2
mov     eax, ds:dword_4a6afc
push    0
push    eax
call    sub_45b960
mov     ds:dword_4a6b00, 0
add     esp, 0ch
retn
mov     dx, [esp+arg_0]
test    dx, dx
jnz     short loc_43d560
mov     eax, 1
retn
mov     eax, ds:dword_4a6afc
mov     ecx, ds:dword_4a6b00
test    ecx, ecx
mov     eax, [eax]
jle     short loc_43d586
cmp     [eax], dx
jg      short loc_43d57c
cmp     [eax+2], dx
jge     short loc_43d589
add     eax, 4
sub     ecx, 4
test    ecx, ecx
jg      short loc_43d571
xor     eax, eax
retn
mov     eax, 1
retn
push    esi
mov     eax, ds:dword_4a6770+2
mov     edx, [eax]
movsx   ecx, [esp+4+arg_0]
mov     si, [edx+ecx*4+4]
and     si, 1ffh
push    esi
call    sub_43d550
add     esp, 4
cmp     eax, 1
sbb     ecx, ecx
and     cx, si
pop     esi
mov     ax, cx
retn
sub     esp, 14h
push    esi
call    sub_4755f0
mov     [esp+18h+hmem], eax
call    sub_4755f0
mov     [esp+18h+var_10], eax
call    sub_4755f0
mov     [esp+18h+var_c], eax
lea     eax, [esp+18h+hmem]
push    eax
push    offset sub_43d700
push    1
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4620e0
mov     ecx, [esp+28h+var_10]
add     esp, 10h
mov     si, 0ffh
push    offset sub_43d830
push    ecx
call    sub_475920
mov     ecx, [esp+20h+var_10]
add     esp, 8
mov     [esp+18h+var_8], 0
push    ecx
call    sub_475630
lea     ecx, [esp+1ch+hmem]
add     esp, 4
cmp     si, ax
push    ecx
mov     eax, 1
push    offset sub_43d860
adc     eax, 0ffffffffh
push    1
mov     edx, [esp+24h+var_10]
mov     [esp+24h+var_6], eax
push    edx
call    sub_4758a0
mov     ecx, [esp+28h+var_c]
add     esp, 10h
push    ecx
call    sub_475630
add     esp, 4
cmp     ax, 1fah
jl      short loc_43d68a
mov     ecx, ds:dword_4a6af0
mov     eax, ecx
inc     ecx
mov     ds:dword_4a6af0, ecx
test    eax, eax
jnz     short loc_43d6c6
push    1f4h
push    3ah
call    sub_45c150
add     esp, 8
jmp     short loc_43d6c6
inc     ax
mov     word ptr ds:dword_4a6af8, ax
call    sub_43d530
lea     eax, [esp+18h+var_c]
mov     ecx, [esp+18h+hmem]
push    eax
push    offset sub_43d990
push    1
push    ecx
call    sub_4758a0
lea     ecx, [esp+28h+hmem]
add     esp, 10h
push    0
push    0
push    ecx
push    offset loc_43d8f0
call    sub_43b080
add     esp, 10h
mov     eax, [esp+18h+hmem]
push    eax
call    sub_475600
mov     eax, [esp+1ch+var_10]
add     esp, 4
push    eax
call    sub_475600
mov     eax, [esp+1ch+var_c]
add     esp, 4
push    eax
call    sub_475600
add     esp, 4
pop     esi
add     esp, 14h
retn
push    ebx
mov     ecx, ds:dword_4a6770+2
push    esi
push    edi
mov     edi, dword ptr [esp+0ch+arg_0]
movsx   eax, di
lea     esi, ds:0[eax*4]
mov     eax, [ecx]
mov     bx, [eax+esi+4]
and     bx, 1ffh
jnz     short loc_43d72e
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    ebx
call    sub_43d550
add     esp, 4
test    eax, eax
jz      short loc_43d752
mov     eax, ds:dword_4a6770+2
pop     edi
mov     ecx, [eax]
mov     eax, 1
and     word ptr [ecx+esi+4], 0fe00h
pop     esi
pop     ebx
retn
mov     esi, [esp+0ch+arg_4]
push    edi
mov     eax, [esi]
push    eax
call    sub_475710
add     esp, 8
push    edi
call    sub_463500
add     esp, 4
test    eax, eax
jz      short loc_43d77f
neg     bx
mov     eax, [esi+4]
push    eax
push    edi
call    sub_43d7a0
add     esp, 8
push    ebx
mov     eax, [esi+4]
push    eax
call    sub_475710
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_426e20
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_43d819
mov     di, 1
push    esi
call    sub_475630
mov     bx, ax
add     esp, 4
cmp     bx, di
jl      short loc_43d819
push    edi
push    esi
call    sub_475820
mov     [esp+1ch+var_2], ax
add     esp, 8
mov     bp, ax
sar     bp, 2
push    ebp
call    sub_43d550
add     esp, 4
test    eax, eax
jz      short loc_43d804
dec     bx
mov     eax, dword ptr [esp+14h+var_2]
push    eax
push    esi
call    sub_475770
add     esp, 8
jmp     short loc_43d814
inc     di
push    ebp
mov     eax, [esp+18h+hmem]
push    eax
call    sub_475710
add     esp, 8
cmp     bx, di
jge     short loc_43d7cf
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ax, [esp+arg_0]
test    ax, ax
jge     short loc_43d83d
neg     ax
mov     cx, [esp+arg_4]
test    cx, cx
jge     short loc_43d84a
neg     cx
movsx   eax, ax
movsx   ecx, cx
sub     eax, ecx
retn
push    ebx
push    esi
mov     si, [esp+8+arg_0]
push    edi
test    si, si
push    ebp
mov     ebx, 1
jl      short loc_43d875
xor     ebx, ebx
test    ebx, ebx
jz      short loc_43d87c
neg     si
mov     edi, [esp+10h+arg_4]
mov     ax, [edi+0ch]
cmp     ax, 1
sbb     ebp, ebp
neg     ebp
test    ebp, ebp
jnz     short loc_43d8ab
cmp     dword ptr [edi+0eh], 0
jz      short loc_43d8a4
push    esi
push    eax
call    sub_43d930
add     esp, 8
test    eax, eax
jz      short loc_43d8ab
mov     eax, 1
jmp     short loc_43d8ad
xor     eax, eax
test    ebp, ebp
jnz     short loc_43d8c1
test    ebx, ebx
jnz     short loc_43d8b9
test    eax, eax
jz      short loc_43d8e5
test    ebp, ebp
jnz     short loc_43d8c1
test    eax, eax
jz      short loc_43d8ce
push    esi
mov     eax, [edi+8]
push    eax
call    sub_475710
add     esp, 8
test    ebx, ebx
jz      short loc_43d8e1
inc     si
mov     eax, [edi+8]
push    esi
push    eax
call    sub_475710
add     esp, 8
mov     [edi+0ch], si
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+8]
movsx   eax, word ptr [esi]
mov     cx, [eax+esi-0a0h]
test    cx, cx
jz      short loc_43d921
mov     eax, [esp+0ch]
mov     edx, [eax+8]
push    edx
push    ecx
call    sub_43dac0
movsx   ecx, word ptr [esi]
mov     [ecx+esi-0a0h], ax
add     esp, 8
mov     eax, 1
pop     esi
retn
lea     ecx, [esp+arg_4]
lea     edx, [esp+arg_0]
sub     esp, 8
lea     eax, [esp+8+var_8]
push    eax
push    ecx
push    edx
push    offset sub_43d960
call    sub_43b080
add     esp, 10h
cmp     [esp+8+var_8], 1
sbb     eax, eax
add     esp, 8
inc     eax
retn
mov     eax, [esp+arg_0]
movsx   ecx, word ptr [eax]
mov     cx, [ecx+eax-0a0h]
mov     eax, [esp+arg_4]
cmp     [eax], cx
jg      short loc_43d984
mov     eax, [esp+arg_8]
cmp     [eax], cx
jle     short loc_43d984
xor     eax, eax
retn
mov     eax, 1
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
and     eax, 0ffffh
push    edi
xor     esi, esi
mov     si, ds:word_4a8518
mov     ecx, ds:dword_4a6770+2
shl     esi, 10h
mov     ebx, [esp+0ch+arg_4]
or      esi, eax
movsx   eax, si
lea     edi, ds:0[eax*4]
mov     eax, [ecx]
mov     ax, [eax+edi+4]
mov     ecx, [ebx]
and     ax, 1ffh
push    ecx
push    eax
call    sub_43dac0
add     esp, 8
mov     ecx, ds:dword_4a6770+2
mov     ecx, [ecx]
lea     edx, [ecx+edi+4]
push    esi
mov     cx, [edx]
mov     di, cx
xor     di, ax
and     di, 1ffh
xor     di, cx
mov     [edx], di
call    sub_463500
add     esp, 4
test    eax, eax
jz      short loc_43da0e
mov     eax, [ebx]
push    eax
push    esi
call    sub_43da20
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_426e20
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_43dab0
call    sub_4755f0
mov     esi, eax
test    esi, esi
jz      short loc_43dab0
mov     di, 1
push    ebp
call    sub_475630
mov     [esp+18h+var_2], ax
add     esp, 4
cmp     ax, di
jl      short loc_43daa2
push    edi
xor     ebx, ebx
push    ebp
call    sub_475820
mov     cx, ax
add     esp, 8
sar     cx, 2
mov     bx, ax
mov     eax, [esp+14h+hmem]
and     ebx, 3
push    eax
push    ecx
call    sub_43dac0
add     esp, 8
test    ax, ax
jz      short loc_43da99
shl     ax, 2
or      ax, bx
push    eax
push    esi
call    sub_475710
add     esp, 8
inc     di
cmp     [esp+14h+var_2], di
jge     short loc_43da5c
mov     eax, [esp+14h+arg_0]
push    esi
push    eax
call    sub_426e40
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ax, [esp+arg_0]
sub     esp, 8
mov     word ptr [esp+8+var_8], ax
lea     ecx, [esp+8+var_8]
xor     eax, eax
push    ecx
mov     word ptr [esp+0ch+var_8+2], ax
push    offset loc_43db00
mov     word ptr [esp+10h+var_4], ax
push    1
mov     word ptr [esp+14h+var_4+2], ax
mov     edx, [esp+14h+hmem]
push    edx
call    sub_4758a0
mov     ax, word ptr [esp+18h+var_4]
add     esp, 10h
add     esp, 8
retn
mov     cx, [esp+arg_0]
push    esi
mov     edx, [esp+4+hmem]
mov     si, [edx+6]
inc     si
mov     ax, [edx]
mov     [edx+6], si
cmp     cx, ax
jg      short loc_43db33
cmp     [edx+2], cx
jge     short loc_43db33
mov     [edx+2], cx
mov     [edx+4], si
cmp     cx, ax
jnz     short loc_43db33
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
push    42h
push    4fh
call    sub_45bd50
add     esp, 8
mov     ds:dword_4a6b04, eax
test    eax, eax
jnz     short loc_43db58
xor     eax, eax
retn
call    sub_48d950
test    ax, ax
jz      short loc_43db65
xor     eax, eax
retn
xor     ecx, ecx
cmp     ds:dword_4a6b04, ecx
jz      short loc_43db97
mov     eax, ds:dword_4a6b04
mov     [eax+8], ecx
mov     eax, ds:dword_4a6b04
mov     [eax+20h], ecx
mov     eax, ds:dword_4a6b04
mov     [eax+24h], ecx
mov     eax, ds:dword_4a6b04
mov     [eax+4], ecx
mov     eax, ds:dword_4a6b04
mov     [eax+38h], ecx
mov     eax, 1
retn
sub     esp, 29ch
cmp     ds:dword_4a6b04, 0
jz      loc_43dc39
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+4], 0
jnz     short loc_43dc39
mov     eax, [esp+29ch+arg_0]
test    eax, eax
jz      short loc_43dbe1
lea     ecx, [esp+29ch+buffer]
push    19ah
push    ecx
push    eax
call    sub_486100
add     esp, 0ch
jmp     short loc_43dbe9
mov     [esp+29ch+buffer], 0
mov     eax, dword ptr [esp+29ch+arg_4]
lea     ecx, [esp+29ch+psztext]
push    eax
push    100h
push    ecx
call    sub_492790
lea     ecx, [esp+2a8h+psztext]
lea     edx, [esp+2a8h+buffer]
add     esp, 0ch
push    ecx
push    edx
push    2
push    1
push    5ah
call    sub_45c150
add     esp, 14h
cmp     ds:dword_4a6b04, 0
jz      short loc_43dc39
cmp     ax, 2
jnz     short loc_43dc39
mov     eax, ds:dword_4a6b04
mov     dword ptr [eax+4], 1
add     esp, 29ch
retn
cmp     ds:dword_4a6b04, 0
jz      short locret_43dc7e
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+3ch]
test    ecx, ecx
jz      short locret_43dc7e
cmp     [esp+arg_0], 0
jz      short loc_43dc69
push    0
push    ecx
call    sub_461190
add     esp, 8
jmp     short loc_43dc72
push    ecx
call    sub_408b60
add     esp, 4
mov     eax, ds:dword_4a6b04
mov     dword ptr [eax+3ch], 0
retn
push    esi
mov     esi, [esp+4+arg_0]
test    esi, esi
jz      short loc_43dcb5
cmp     ds:dword_4a6aba, 1
jnz     short loc_43dc9f
push    esi
push    0ah
push    1
call    sub_43bd20
add     esp, 0ch
cmp     ds:dword_4a6aba, 2
jnz     short loc_43dcb5
push    esi
push    0ah
push    2
call    sub_43bd20
add     esp, 0ch
xor     ecx, ecx
cmp     ds:dword_4a6b04, ecx
jz      short loc_43dccf
mov     eax, ds:dword_4a6b04
mov     [eax+14h], ecx
mov     eax, ds:dword_4a6b04
mov     [eax+10h], ecx
push    esi
call    sub_43dc40
add     esp, 4
call    sub_43e520
pop     esi
retn
sub     esp, 20h
cmp     ds:dword_4a6b04, 0
mov     dword ptr [esp+20h+var_20], 0
push    ebx
push    esi
push    edi
push    ebp
jz      loc_43dffa
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax], 0
jnz     loc_43dffa
mov     dword ptr [eax], 0
call    sub_43e630
mov     bp, [esp+30h+arg_10]
mov     ecx, ds:dword_4a6b04
lea     eax, [ebp-2]
cmp     ax, 1
sbb     eax, eax
neg     eax
cmp     [esp+30h+arg_c], 0
mov     [ecx+34h], eax
jnz     short loc_43dd44
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+34h], 0
jz      loc_43dffa
mov     ebx, [esp+30h+arg_0]
test    ebx, ebx
jz      short loc_43dd62
push    ebx
call    sub_408fc0
mov     [esp+34h+var_1c], eax
add     esp, 4
test    eax, eax
jnz     short loc_43dd6a
jmp     loc_43dffe
mov     [esp+30h+var_1c], 0
cmp     ds:dword_4a6b04, 0
jz      loc_43dffe
mov     ecx, ds:dword_4a6b04
mov     eax, [esp+30h+arg_4]
mov     [ecx+3ch], eax
mov     ecx, ds:dword_4a6b04
mov     eax, [ecx+3ch]
test    eax, eax
jz      loc_43dffe
lea     ecx, [esp+30h+var_20]
push    ecx
push    1
push    eax
call    sub_408cf0
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      loc_43dffe
push    esi
call    ds:globallock
push    eax
mov     edi, eax
call    nullsub_2
add     esp, 4
cmp     dword ptr [esp+30h+var_20], 30h
jb      loc_43dfd9
cmp     word ptr [edi], 3
jnz     loc_43dfd9
mov     al, [edi+1ah]
mov     ecx, ds:dword_4a6b04
mov     [ecx+4ah], al
mov     ecx, ds:dword_4a6b04
mov     word ptr [ecx+48h], 0
mov     eax, [edi+6]
mov     ecx, ds:dword_4a6b04
push    esi
mov     [ecx+2ch], eax
mov     edx, [edi+2]
mov     ecx, ds:dword_4a6b04
mov     [ecx+30h], edx
call    ds:globalunlock
movsx   eax, [esp+30h+arg_14]
test    eax, eax
jz      short loc_43de25
cmp     eax, 1
jz      short loc_43de43
cmp     eax, 2
jz      short loc_43de78
jmp     loc_43dee2
mov     edi, 1
push    ebp
mov     eax, [esp+34h+arg_8]
push    eax
push    ebx
call    sub_43e470
add     esp, 0ch
test    eax, eax
jnz     loc_43dee6
jmp     short loc_43deb0
test    ebx, ebx
jz      loc_43dee2
push    1
push    3feh
push    ebx
call    sub_42edc0
movsx   edi, ax
add     esp, 0ch
cmp     edi, 1
jl      short loc_43deb0
mov     eax, [esp+30h+arg_8]
push    ebp
push    eax
push    ebx
call    sub_43e470
add     esp, 0ch
test    eax, eax
jnz     short loc_43dee6
jmp     short loc_43deb0
test    ebx, ebx
jz      short loc_43dee2
mov     eax, ds:dword_4a6b04
push    0
push    3ffh
push    ebx
cmp     dword ptr [eax+34h], 1
sbb     edi, edi
call    sub_42ed80
neg     edi
add     esp, 0ch
test    eax, edi
jnz     short loc_43deb0
mov     eax, [esp+30h+arg_8]
push    ebp
push    eax
push    ebx
call    sub_43e470
add     esp, 0ch
test    eax, eax
jnz     short loc_43dec6
test    esi, esi
jz      loc_43dffe
push    esi
call    sub_45ba00
add     esp, 4
jmp     loc_43dffe
push    80h
mov     edi, 0ffffffffh
push    3ffh
push    ebx
push    5
call    sub_441440
add     esp, 10h
jmp     short loc_43dee6
mov     edi, [esp+30h+var_1c]
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+34h], 0
jz      short loc_43df1c
test    ebx, ebx
jz      short loc_43df1c
push    80h
push    3fdh
push    ebx
push    5
call    sub_441440
add     esp, 10h
push    0
push    3fch
push    ebx
push    5
call    sub_441440
add     esp, 10h
mov     eax, ds:dword_4a6b04
mov     [eax+28h], edi
xor     edi, edi
cmp     [esp+30h+arg_c], edi
jz      loc_43dfbb
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+1ch]
push    ecx
call    sub_43e330
add     esp, 4
mov     ecx, ds:dword_4a6b04
push    eax
mov     edx, [ecx+28h]
mov     eax, dword ptr [esp+34h+var_20]
push    edx
push    eax
push    esi
xor     esi, esi
call    sub_48de50
add     esp, 10h
test    ax, ax
jnz     short loc_43dfb1
mov     ebx, ds:dword_4a6b04
add     ebx, 0ch
cmp     [ebx], edi
jnz     short loc_43dfc4
mov     word ptr [esp+30h+var_1c], 1ch
mov     [esp+30h+var_16], offset sub_43e120
mov     [esp+30h+var_12], 64h
lea     eax, [esp+30h+var_1c]
mov     [esp+30h+var_8], edi
mov     [esp+30h+var_a], 4
push    eax
call    sub_485150
add     esp, 4
mov     [ebx], eax
mov     eax, ds:dword_4a6b04
cmp     [eax+0ch], edi
jnz     short loc_43dfc4
push    edi
call    sub_48e590
jmp     short loc_43dfc1
push    eax
push    ebx
call    sub_43dba0
add     esp, 8
push    ebx
call    sub_43dc80
add     esp, 4
test    esi, esi
jz      short loc_43e007
push    esi
call    sub_45ba00
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+30h+var_1c]
push    0fffffffah
push    eax
call    sub_43dba0
add     esp, 8
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
add     esp, 4
jmp     short loc_43dffe
mov     ebx, [esp+30h+arg_0]
push    ebx
call    sub_43dc80
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+10h+arg_0]
push    ebp
call    sub_408fc0
add     esp, 4
test    eax, eax
jz      short loc_43e084
push    eax
call    sub_461150
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_43e084
mov     esi, [esp+10h+arg_4]
test    esi, esi
jz      short loc_43e055
push    1
mov     ebx, 0
push    3fdh
push    ebp
call    sub_42ed80
add     esp, 0ch
test    eax, eax
jz      short loc_43e05a
mov     ebx, 1
push    2020430h
push    ebp
call    sub_462670
add     esp, 8
push    eax
push    20206c0h
push    ebp
call    sub_462670
add     esp, 8
push    eax
push    ebx
push    esi
push    edi
push    ebp
call    sub_43dce0
add     esp, 18h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     ds:dword_4a6b04, 0
push    esi
jz      short loc_43e0bb
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+8], 0
mov     eax, [esp+4+arg_0]
jnz     short loc_43e0ad
test    eax, eax
jz      short loc_43e0bb
push    eax
call    sub_48e590
mov     si, ax
add     esp, 4
jmp     short loc_43e0be
xor     si, si
xor     ecx, ecx
test    si, si
jnz     short loc_43e0f8
cmp     ds:dword_4a6b04, ecx
jz      short loc_43e0f8
mov     eax, ds:dword_4a6b04
cmp     [eax+8], ecx
jz      short loc_43e0f8
mov     [eax+14h], ecx
mov     eax, ds:dword_4a6b04
mov     [eax+10h], ecx
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+1ch]
push    ecx
call    sub_43dc40
add     esp, 4
call    sub_43e520
mov     ax, si
pop     esi
retn
cmp     ds:dword_4a6b04, 0
jz      short loc_43e118
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+8], 0
jz      short loc_43e118
mov     eax, [eax+1ch]
retn
xor     eax, eax
retn
cmp     ds:dword_4a6b04, 0
jz      short loc_43e15c
mov     eax, ds:dword_4a6b04
add     eax, 14h
cmp     dword ptr [eax], 0
jz      short loc_43e15c
mov     dword ptr [eax], 0
call    sub_43e520
cmp     ds:dword_4a6b04, 0
jz      short loc_43e156
mov     eax, ds:dword_4a6b04
mov     dword ptr [eax+0ch], 0
mov     eax, 1
retn
call    sub_48e2f0
test    eax, eax
jz      short loc_43e141
xor     eax, eax
retn
push    esi
xor     esi, esi
cmp     ds:dword_4a6b04, esi
jz      short loc_43e1b3
mov     eax, ds:dword_4a6b04
cmp     [eax+8], esi
jz      short loc_43e1b3
call    sub_409e60
mov     dword_4ad9d0, eax
cmp     eax, 0ffffff9ch
ja      short loc_43e1b3
mov     eax, ds:dword_4a6b04
mov     dword_4ad9d0, esi
mov     dword ptr [eax+10h], 1
call    sub_48e2f0
mov     eax, ds:dword_4a6b04
mov     [eax+10h], esi
pop     esi
retn
cmp     ds:dword_4a6b04, 0
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_43e1d4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ebx, [esp+10h+arg_4]
test    ebx, ebx
jg      short loc_43e216
mov     eax, ds:dword_4a6b04
mov     ax, [eax+48h]
test    ax, ax
jz      short loc_43e1fc
push    eax
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+3ch]
push    ecx
call    sub_408d90
add     esp, 8
mov     eax, ds:dword_4a6b04
mov     word ptr [eax+48h], 0
call    sub_43e520
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+30h]
mov     eax, [esp+10h+arg_0]
cdq
idiv    ecx
lea     edi, [eax+2]
mov     eax, [esp+10h+arg_0]
cdq
idiv    ecx
mov     esi, edx
mov     eax, ds:dword_4a6b04
mov     ax, [eax+48h]
cmp     di, ax
jz      short loc_43e2ac
test    ax, ax
jz      short loc_43e256
push    eax
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+3ch]
push    ecx
call    sub_408d90
add     esp, 8
mov     eax, ds:dword_4a6b04
push    edi
mov     [eax+48h], di
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+3ch]
push    ecx
call    sub_408bf0
add     esp, 8
mov     ecx, ds:dword_4a6b04
mov     [ecx+44h], eax
mov     ecx, ds:dword_4a6b04
cmp     dword ptr [ecx+44h], 0
jz      loc_43e310
push    edi
mov     ecx, [ecx+3ch]
push    ecx
call    sub_408c60
add     esp, 8
mov     ecx, ds:dword_4a6b04
mov     [ecx+40h], eax
mov     ecx, ds:dword_4a6b04
cmp     dword ptr [ecx+40h], 0
jz      short loc_43e317
mov     eax, ds:dword_4a6b04
mov     ebp, [eax+44h]
sub     ebp, esi
cmp     ebp, ebx
jl      short loc_43e2bc
mov     ebp, ebx
test    ebp, ebp
jz      short loc_43e31e
mov     eax, ds:dword_4a6b04
sub     ebx, ebp
mov     ecx, [eax+40h]
push    ecx
call    ds:globallock
mov     ecx, ebp
mov     edx, ebp
shr     ecx, 2
add     esi, eax
mov     edi, [esp+10h+arg_8]
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+40h]
push    ecx
call    ds:globalunlock
add     [esp+10h+arg_0], ebp
add     [esp+10h+arg_8], ebp
test    ebx, ebx
jg      loc_43e216
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
sub     esp, 18h
test    eax, eax
jz      short loc_43e380
lea     ecx, [esp+18h+var_18]
push    ecx
push    3fch
push    eax
call    sub_42ec80
add     esp, 0ch
cmp     eax, 3e8h
jnz     short loc_43e35e
mov     eax, 10000h
add     esp, 18h
retn
lea     eax, [esp+18h+var_18]
push    2
push    eax
call    sub_41aa60
fld     [esp+20h+var_10]
fmul    ds:dbl_4ab0c0
add     esp, 8
call    __ftol
add     esp, 18h
retn
mov     eax, 10000h
add     esp, 18h
retn
push    ebx
push    esi
mov     bx, [esp+8+arg_4]
push    edi
movsx   eax, bx
cmp     eax, 3fch
jz      short loc_43e3b4
cmp     eax, 3fdh
jz      short loc_43e3f6
cmp     eax, 3ffh
jz      short loc_43e41c
pop     edi
pop     esi
pop     ebx
retn
call    sub_43e100
cmp     eax, [esp+0ch+arg_0]
jnz     loc_43e469
mov     edi, [esp+0ch+arg_8]
push    2
push    edi
call    sub_41aa60
fld     qword ptr [edi+8]
fmul    ds:dbl_4ab0c0
add     esp, 8
call    __ftol
test    eax, eax
jg      short loc_43e3e9
mov     eax, 1
push    eax
call    sub_48e6b0
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
call    sub_43e100
mov     esi, [esp+0ch+arg_0]
cmp     eax, esi
jz      short loc_43e469
mov     edi, [esp+0ch+arg_8]
cmp     dword ptr [edi+8], 0
jz      short loc_43e469
push    1
push    esi
call    sub_43e010
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
call    sub_43e100
mov     esi, [esp+0ch+arg_0]
cmp     eax, esi
jnz     short loc_43e44b
mov     edi, [esp+0ch+arg_8]
cmp     dword ptr [edi+8], 0
jz      short loc_43e469
push    0
call    sub_48e590
add     esp, 4
push    ebx
push    esi
call    sub_441840
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
push    20206c0h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 2
jz      short loc_43e469
push    ebx
push    esi
call    sub_441840
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
cmp     ds:dword_4a6b04, 0
push    esi
jz      loc_43e50f
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+2ch], 0
jle     loc_43e50f
mov     esi, [esp+4+arg_0]
mov     [eax+1ch], esi
mov     eax, [esp+4+arg_4]
mov     ecx, ds:dword_4a6b04
mov     [ecx+18h], eax
mov     ecx, ds:dword_4a6b04
mov     dword ptr [ecx+8], 1
mov     ecx, ds:dword_4a6b04
cmp     dword ptr [ecx+18h], 0
jz      short loc_43e4d4
cmp     [esp+4+arg_8], 0
jnz     short loc_43e4d4
mov     ds:dword_4a68ae, 2
mov     eax, ds:dword_4a68c0
mov     [ecx+20h], eax
test    esi, esi
jz      short loc_43e4f9
cmp     ds:dword_4a6aba, 1
jnz     short loc_43e4ee
push    esi
push    0ah
push    1
call    sub_43bd20
add     esp, 0ch
push    esi
push    16h
call    sub_441c60
add     esp, 8
push    2081h
push    1
call    sub_441c60
add     esp, 8
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
cmp     ds:dword_4a6b04, 0
jz      locret_43e62f
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+10h], 0
jz      short loc_43e540
mov     dword ptr [eax+14h], 1
retn
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+8], 0
jz      locret_43e62f
mov     eax, [eax+1ch]
test    eax, eax
jz      short loc_43e56c
cmp     ds:dword_4a6aba, 2
jnz     short loc_43e56c
push    eax
push    0ah
push    2
call    sub_43bd20
add     esp, 0ch
mov     eax, ds:dword_4a6b04
mov     dword ptr [eax+8], 0
mov     eax, ds:dword_4a6b04
mov     edx, [eax+18h]
test    edx, edx
jz      short loc_43e5d2
mov     ecx, [eax+1ch]
test    ecx, ecx
jz      short loc_43e592
mov     eax, [eax+20h]
cmp     ecx, eax
jz      short loc_43e5e9
test    edx, edx
jz      short loc_43e5f2
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+38h], 0
jz      short loc_43e5d2
call    sub_434c30
mov     eax, ds:dword_4a6b04
mov     dword ptr [eax+38h], 0
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+24h]
push    ecx
call    sub_42ed10
add     esp, 4
mov     ecx, ds:dword_4a6b04
mov     dword ptr [ecx+24h], 0
jmp     short loc_43e5f2
test    edx, edx
jz      short loc_43e5f2
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+1ch]
test    ecx, ecx
jz      short loc_43e5f2
mov     eax, [eax+20h]
cmp     ecx, eax
jz      short loc_43e5f2
push    eax
call    sub_434b70
add     esp, 4
mov     eax, ds:dword_4a6b04
mov     eax, [eax+1ch]
test    eax, eax
jz      short loc_43e609
push    eax
push    16h
call    sub_441c60
add     esp, 8
mov     eax, ds:dword_4a6b04
push    2081h
mov     dword ptr [eax+1ch], 0
mov     eax, ds:dword_4a6b04
push    1
mov     edx, [eax+1ch]
mov     [eax+20h], edx
call    sub_441c60
add     esp, 8
retn
cmp     ds:dword_4a6b04, 0
jz      short locret_43e666
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+8], 0
jz      short loc_43e655
mov     dword ptr [eax+34h], 0
push    0
call    sub_48e590
add     esp, 4
mov     eax, ds:dword_4a6b04
mov     ecx, [eax+1ch]
push    ecx
call    sub_43dc40
add     esp, 4
retn
cmp     ds:dword_4a6b04, 0
jz      short locret_43e6a7
mov     eax, ds:dword_4a6b04
mov     dword ptr [eax+18h], 0
call    sub_43e630
call    sub_48db20
mov     eax, ds:dword_4a6b04
push    eax
call    sub_45bdb0
mov     ds:dword_4a6b04, 0
add     esp, 4
retn
cmp     ds:dword_4a6b04, 0
jz      short loc_43e6ca
mov     eax, ds:dword_4a6b04
cmp     dword ptr [eax+8], 0
jz      short loc_43e6ca
mov     eax, 1
retn
xor     eax, eax
retn
cmp     ds:dword_4a6b04, 0
jz      short locret_43e6f3
mov     ecx, ds:dword_4a6b04
mov     eax, [esp+arg_0]
mov     [ecx+24h], eax
mov     ecx, ds:dword_4a6b04
mov     dword ptr [ecx+38h], 1
retn
mov     ecx, [esp+arg_0]
mov     eax, [ecx]
dec     eax
cmp     eax, 0dh
ja      short def_43e714
xor     edx, edx
mov     dl, ds:byte_43e73c[eax]
jmp     ds:jpt_43e714[edx*4]
mov     word ptr [ecx+8], 0
xor     eax, eax
retn
call    sub_43e630
xor     eax, eax
retn
sub     esp, 8
push    esi
mov     esi, [esp+0ch+arg_0]
mov     eax, [esi]
dec     eax
cmp     eax, 0dh
ja      def_43e764
jmp     ds:jpt_43e764[eax*4]
call    sub_43cd40
mov     ds:word_4a6b0c, ax
xor     eax, eax
mov     word ptr [esi+8], 2
pop     esi
add     esp, 8
retn
cmp     word ptr [esi+8], 2
jz      short loc_43e794
mov     eax, 1389h
pop     esi
add     esp, 8
retn
mov     eax, [esi+0ah]
mov     ax, [eax]
mov     ds:word_4a6b0c, ax
push    eax
call    sub_43cd60
mov     [esp+10h+hmem], eax
add     esp, 4
test    eax, eax
jnz     short loc_43e7bb
mov     eax, 8
pop     esi
add     esp, 8
retn
lea     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+hmem]
push    eax
push    0
push    offset sub_43e9b0
push    ecx
call    sub_45cca0
add     esp, 10h
test    ax, ax
jz      short loc_43e7e3
mov     eax, 8
pop     esi
add     esp, 8
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6b0c
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
push    1
call    sub_43eba0
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 8
retn
mov     ax, ds:word_4a6b0c
mov     ecx, [esi+0ah]
mov     [ecx], ax
call    sub_45c800
mov     [esp+0ch+hmem], eax
test    eax, eax
jnz     short loc_43e838
mov     eax, 8
pop     esi
add     esp, 8
retn
lea     eax, [esp+0ch+hmem]
push    eax
push    offset sub_43e9e0
call    sub_485330
add     esp, 8
test    eax, eax
mov     eax, [esp+0ch+hmem]
jz      short loc_43e865
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, 8
pop     esi
add     esp, 8
retn
mov     ecx, [eax]
push    ecx
call    sub_45c830
mov     dx, ds:word_4a6b0c
mov     ecx, [esp+10h+hmem]
add     esp, 4
push    eax
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_43e8a0
mov     eax, [esp+0ch+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 8
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6b0c
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 8
retn
push    0
push    offset sub_43ea10
call    sub_485330
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 8
retn
push    0
push    offset sub_43ea10
call    sub_485330
add     esp, 8
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6b0c
push    0
shl     eax, 10h
push    0
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
pop     esi
add     esp, 8
retn
push    0
call    sub_43eba0
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 8
retn
cmp     ds:frequency, 0
jz      short def_43e764
push    1
call    sub_43eba0
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 8
retn
cmp     ds:dword_4a68c4, 0
jnz     short def_43e764
push    1
call    sub_43eba0
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 8
retn
push    0
call    sub_43eba0
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 8
retn
cmp     [esp+arg_8], 28h
jnz     short loc_43e9da
mov     eax, [esp+arg_4]
push    eax
mov     dword ptr [eax+6], offset sub_43eb70
mov     dword ptr [eax+14h], 1
call    sub_485150
add     esp, 4
test    eax, eax
jnz     short loc_43e9da
xor     eax, eax
retn
mov     eax, 1
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+6], offset sub_43eb70
jnz     short loc_43ea0d
inc     ds:word_4a6b08
push    28h
mov     ecx, [esp+4+arg_4]
push    eax
mov     ax, ds:word_4a6b08
mov     edx, [ecx]
push    eax
push    edx
call    sub_45ca00
add     esp, 10h
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     eax, [eax+6]
sub     eax, offset sub_43eb70
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_8]
sub     esp, 28h
push    esi
push    ecx
mov     si, [esp+30h+arg_0]
push    eax
push    esi
call    sub_43ebe0
add     esp, 0ch
test    eax, eax
jz      short loc_43ea5a
mov     eax, 1
pop     esi
add     esp, 28h
retn
mov     eax, [esp+2ch+arg_c]
mov     ecx, ds:dword_4a68c4
mov     [esp+2ch+var_1e], eax
mov     [esp+2ch+var_14], ecx
mov     [esp+2ch+var_22], offset sub_43eb70
mov     eax, [esp+2ch+arg_4]
mov     ecx, [esp+2ch+arg_8]
movsx   edx, si
mov     [esp+2ch+var_28], 28h
mov     [esp+2ch+var_c], edx
mov     [esp+2ch+var_8], eax
lea     edx, [esp+2ch+var_28]
mov     [esp+2ch+var_4], ecx
mov     [esp+2ch+var_16], 4
push    edx
call    sub_485150
add     esp, 4
cmp     eax, 1
sbb     eax, eax
pop     esi
inc     eax
add     esp, 28h
retn
mov     eax, [esp+arg_4]
push    esi
mov     si, [esp+4+arg_0]
mov     ecx, [esp+4+arg_8]
push    ecx
push    eax
push    esi
call    sub_43ebe0
add     esp, 0ch
test    eax, eax
jz      short loc_43eae4
mov     eax, 1
pop     esi
retn
mov     eax, [esp+4+arg_c]
mov     edx, [esp+4+arg_4]
mov     ecx, [esp+4+arg_8]
push    eax
push    ecx
push    edx
push    esi
call    sub_43ea30
add     esp, 10h
pop     esi
retn
mov     edx, [esp+arg_4]
mov     ecx, [esp+arg_8]
movsx   eax, [esp+arg_0]
sub     esp, 28h
mov     [esp+28h+var_c], eax
mov     [esp+28h+var_8], edx
lea     eax, [esp+28h+var_28]
mov     [esp+28h+var_4], ecx
push    eax
push    offset loc_43eb30
call    sub_485330
add     esp, 30h
retn
mov     ecx, [esp+4]
cmp     dword ptr [ecx+6], offset sub_43eb70
jnz     short loc_43eb5f
mov     eax, [ecx+1ch]
mov     edx, [esp+8]
cmp     [edx+1ch], eax
jnz     short loc_43eb5f
mov     eax, [ecx+20h]
cmp     [edx+20h], eax
jnz     short loc_43eb5f
mov     eax, [ecx+24h]
cmp     [edx+24h], eax
jnz     short loc_43eb5f
mov     eax, 1
retn
xor     eax, eax
retn
mov     ecx, [esp+arg_0]
lea     eax, [ecx+20h]
mov     edx, [eax]
mov     eax, [eax+4]
push    eax
push    edx
mov     eax, [ecx+1ch]
call    funcs_43eb81[eax*4]
add     esp, 8
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
lea     eax, [esp+arg_0]
push    eax
push    offset sub_43ebc0
call    sub_485330
add     esp, 8
retn
mov     ecx, [esp+arg_0]
cmp     dword ptr [ecx+6], offset sub_43eb70
jnz     short loc_43ebdb
mov     eax, [esp+arg_4]
cmp     dword ptr [eax], 1
sbb     eax, eax
neg     eax
mov     [ecx+14h], eax
xor     eax, eax
retn
mov     edx, [esp+arg_4]
mov     ecx, [esp+arg_8]
movsx   eax, [esp+arg_0]
sub     esp, 28h
mov     [esp+28h+var_c], eax
mov     [esp+28h+var_8], edx
lea     eax, [esp+28h+var_28]
mov     [esp+28h+var_4], ecx
push    eax
push    offset sub_43ec20
call    sub_485330
add     esp, 8
cmp     eax, 1
sbb     eax, eax
add     esp, 28h
inc     eax
retn
mov     ecx, [esp+arg_0]
cmp     dword ptr [ecx+6], offset sub_43eb70
jnz     short loc_43ec4f
mov     eax, [ecx+1ch]
mov     edx, [esp+arg_4]
cmp     [edx+1ch], eax
jnz     short loc_43ec4f
mov     eax, [ecx+20h]
cmp     [edx+20h], eax
jnz     short loc_43ec4f
mov     eax, [ecx+24h]
cmp     [edx+24h], eax
jnz     short loc_43ec4f
mov     eax, 2
retn
xor     eax, eax
retn
push    1
call    sub_422640
add     esp, 4
retn
sub     esp, 10h
mov     [esp+10h+var_10], 5
mov     [esp+10h+var_8], offset sub_43ec60
lea     eax, [esp+10h+var_10]
push    eax
call    sub_434ac0
add     esp, 4
cmp     [esp+10h+arg_0], 1
sbb     eax, eax
add     esp, 10h
inc     eax
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_4]
push    edi
lea     eax, [esi-26h]
cmp     eax, 44h
ja      def_43ecbe
xor     ecx, ecx
mov     cl, ds:byte_43edcc[eax]
jmp     ds:jpt_43ecbe[ecx*4]
mov     eax, ds:frequency
mov     edi, [esp+10h+arg_0]
push    eax
mov     ecx, [edi+62h]
push    ecx
call    sub_41a4e0
add     esp, 8
jmp     loc_43eda2
mov     edi, [esp+10h+arg_0]
push    0
mov     eax, [edi+62h]
push    eax
call    sub_41a4e0
add     esp, 8
jmp     loc_43eda2
mov     ebx, [esp+10h+arg_8]
lea     eax, [esp+10h+var_4]
mov     edi, [esp+10h+arg_0]
push    eax
mov     esi, [ebx+0a6h]
push    edi
call    sub_485a50
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_43ed3a
mov     eax, [ebx+98h]
push    eax
push    1
push    edi
call    esi
add     esp, 0ch
push    edi
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     edi
mov     word ptr [ebx+0ah], 8
pop     esi
pop     ebx
add     esp, 4
retn
mov     ebx, [esp+10h+arg_8]
mov     eax, [ebx+98h]
push    eax
push    1
call    dword ptr [ebx+0a6h]
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_43ed8f
mov     edi, [esp+10h+arg_0]
mov     eax, ds:frequency
push    edi
mov     ecx, [ebx+24h]
push    eax
push    ecx
push    esi
call    sub_485a70
add     esp, 10h
push    esi
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     edi
mov     word ptr [ebx+0ah], 8
pop     esi
pop     ebx
add     esp, 4
retn
mov     edi, [esp+10h+arg_0]
mov     ebx, [esp+10h+arg_8]
push    ebx
push    esi
push    edi
call    sub_4855f0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+14h+arg_4]
lea     eax, [edi-3]
cmp     eax, 67h
ja      def_43ee3f
xor     ecx, ecx
mov     cl, ds:byte_43efa0[eax]
jmp     ds:jpt_43ee3f[ecx*4]
mov     esi, [esp+14h+arg_8]
mov     ebp, [esp+14h+arg_0]
mov     ecx, [esi]
mov     eax, [esi+4]
push    eax
push    ecx
push    ebp
call    sub_43f410
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, [esp+14h+arg_8]
mov     ebp, [esp+14h+arg_0]
mov     ecx, [esi]
mov     eax, [esi+4]
push    eax
push    ecx
push    ebp
call    sub_43f470
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, [esp+14h+arg_8]
mov     ebp, [esp+14h+arg_0]
movsx   eax, word ptr [esi+0ah]
push    eax
mov     edx, [esi]
mov     ecx, [esi+4]
push    ecx
push    edx
push    ebp
call    sub_43f340
add     esp, 10h
test    eax, eax
jz      loc_43ef6f
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, [esp+14h+arg_8]
cmp     word ptr [esi+0ah], 0
jnz     short loc_43eefc
mov     eax, [esi]
mov     ecx, [esi+4]
lea     edx, [esp+14h+var_2]
push    ecx
mov     ebp, [esp+18h+arg_0]
push    eax
push    edx
push    ebp
call    sub_43f260
add     esp, 10h
mov     [esi+20h], eax
movsx   ecx, [esp+14h+var_2]
mov     [esi+24h], ecx
test    eax, eax
jz      short loc_43eefc
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, [esp+14h+arg_8]
mov     ebp, [esp+14h+arg_0]
movsx   ecx, word ptr [esi+0ah]
mov     eax, [esi+24h]
push    eax
push    ecx
push    ebp
call    sub_43f800
add     esp, 0ch
test    eax, eax
jz      short loc_43ef6f
push    0
push    8
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
jmp     short loc_43ef6f
mov     esi, [esp+14h+arg_8]
mov     ebp, [esp+14h+arg_0]
mov     ebx, [esi+24h]
mov     eax, [ebp+6eh]
push    eax
call    sub_408fc0
shr     eax, 10h
add     esp, 4
movsx   ecx, ax
push    esi
mov     [esi+24h], ecx
push    edi
push    ebp
call    sub_43eca0
add     esp, 0ch
mov     [esi+24h], ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ebp, [esp+14h+arg_0]
mov     esi, [esp+14h+arg_8]
push    esi
push    edi
push    ebp
call    sub_43eca0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 0bch
xor     eax, eax
mov     ecx, 23h
push    ebx
push    esi
push    edi
lea     edi, [esp+0c8h+src]
rep stosd
lea     eax, [esp+0c8h+src]
mov     ecx, ds:frequency
mov     edx, [esp+0c8h+arg_8]
push    eax
mov     eax, [esp+0cch+arg_0]
push    ecx
push    edx
push    eax
call    sub_485a70
add     esp, 10h
cmp     [esp+0c8h+hmem], 0
jnz     short loc_43f060
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0bch
retn
mov     ax, [esp+0c8h+arg_18]
mov     esi, [esp+0c8h+arg_4]
mov     [esp+0c8h+var_1a], ax
mov     ecx, [esp+0c8h+hmem]
mov     [esp+0c8h+var_1e], esi
push    ecx
mov     [esp+0cch+var_86], offset sub_43ee20
mov     [esp+0cch+src], 8ch
call    sub_419920
add     esp, 4
mov     edi, eax
test    edi, edi
jz      loc_43f149
lea     eax, [esp+0c8h+var_ac]
mov     ecx, [esp+0c8h+hmem]
push    eax
push    ecx
call    sub_419470
lea     edx, [esp+0d0h+var_ac]
lea     ecx, [esp+0d0h+var_9c]
add     esp, 8
mov     eax, [edx]
mov     ebx, [edx+4]
mov     [ecx], eax
mov     eax, [edx+8]
mov     [ecx+4], ebx
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
mov     ecx, [esp+0c8h+hmem]
push    ecx
call    sub_419ef0
mov     ebx, [esp+0cch+var_90]
add     esp, 4
add     ebx, eax
push    0
lea     eax, [esp+0cch+var_80]
push    0
mov     ecx, [esp+0d0h+hmem]
push    0
push    eax
push    0
push    ecx
call    sub_414e80
lea     ecx, [esp+0e0h+var_bc]
mov     edx, [esp+0e0h+hmem]
mov     [esp+0e0h+var_74], eax
add     esp, 18h
push    ecx
push    edx
call    sub_419470
mov     ecx, [esp+0d0h+var_a0]
add     esp, 8
cmp     [esp+0c8h+var_b0], ecx
jz      short loc_43f149
mov     eax, [esp+0c8h+hmem]
mov     [esp+0c8h+var_74], ebx
sub     ebx, [esp+0c8h+var_b0]
push    ebx
push    eax
call    sub_419ed0
add     esp, 8
call    sub_432160
push    eax
push    1
lea     eax, [esp+0d0h+src]
push    eax
call    sub_43f800
mov     eax, [esp+0d4h+hmem]
add     esp, 0ch
push    eax
call    sub_41a750
add     esp, 4
test    eax, eax
jz      short loc_43f1e4
test    edi, edi
jz      short loc_43f186
mov     eax, [esp+0c8h+hmem]
push    eax
call    sub_41a540
add     esp, 4
mov     eax, [esp+0c8h+hmem]
push    0
push    esi
push    eax
call    sub_41a7a0
add     esp, 0ch
cmp     [esp+0c8h+arg_c], 0
jz      short loc_43f1e4
lea     eax, [esp+0c8h+var_ac]
lea     ecx, [esp+0c8h+var_9c]
mov     edx, [esp+0c8h+hmem]
push    eax
push    ecx
push    edx
call    sub_41a6b0
add     esp, 0ch
test    eax, eax
jz      short loc_43f1e4
mov     di, word ptr [esp+0c8h+var_9c]
cmp     word ptr [esp+0c8h+var_ac], di
jl      short loc_43f1e4
push    0
push    edi
inc     di
push    esi
push    3
call    sub_441440
add     esp, 10h
cmp     di, word ptr [esp+0c8h+var_ac]
jle     short loc_43f1cd
lea     eax, [esp+0c8h+var_80]
mov     ecx, [esp+0c8h+hmem]
push    eax
xor     esi, esi
push    ecx
call    sub_41a550
lea     ecx, [esp+0d0h+src]
add     esp, 8
push    esi
push    ecx
call    sub_485e40
mov     eax, [esp+0d0h+arg_14]
mov     ecx, [esp+0d0h+hmem]
add     esp, 8
push    eax
push    ecx
call    sub_419550
mov     [esp+0d0h+var_6c], si
add     esp, 8
mov     [esp+0c8h+var_6e], si
lea     ecx, [esp+0c8h+src]
mov     [esp+0c8h+var_70], si
push    ecx
mov     [esp+0cch+var_82], 12h
mov     edx, [esp+0cch+arg_10]
push    edx
call    sub_413130
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 0bch
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    ebp
mov     ebx, [esi+62h]
push    ebx
call    sub_413690
mov     di, ax
mov     edx, [esp+1ch+arg_8]
lea     eax, [esp+1ch+var_8]
mov     ecx, [esp+1ch+arg_c]
add     esp, 4
push    eax
push    edi
push    ecx
push    edx
push    ebx
call    sub_43fcc0
mov     bx, ax
add     esp, 14h
cmp     bx, 0ffffh
jnz     short loc_43f2a6
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+18h+var_8]
push    edi
push    eax
call    sub_486fa0
add     esp, 8
mov     ebp, eax
test    ebp, 2000000h
jz      short loc_43f2f6
mov     eax, [esp+18h+var_8]
push    edi
push    eax
call    sub_4870d0
add     esp, 8
cmp     ax, 2
jnz     short loc_43f303
cmp     dword_4ada08, 0
mov     edi, 1
mov     dword_4ada0c, edi
jnz     short loc_43f2f6
push    ebx
push    esi
call    sub_43f4e0
add     esp, 8
mov     dword_4ada08, edi
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
test    ebp, 1000000h
jz      short loc_43f2f6
mov     eax, [esp+18h+var_8]
push    edi
push    eax
call    sub_487240
mov     [esp+20h+var_4], edx
add     esp, 8
test    dx, dx
jz      short loc_43f2f6
mov     cx, word ptr [esp+18h+var_4+2]
mov     eax, [esp+18h+arg_4]
mov     [eax], cx
pop     ebp
movsx   eax, dx
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_4]
sub     esp, 4
mov     ecx, [esp+4+arg_8]
push    ebx
push    esi
push    edi
mov     esi, [esp+10h+arg_0]
push    ecx
push    eax
push    esi
mov     edi, [esi+62h]
call    sub_43f640
mov     ebx, [esp+1ch+arg_4]
mov     ecx, [esp+1ch+arg_8]
add     esp, 0ch
lea     edx, [esi+74h]
mov     eax, [esi+62h]
mov     [edx], ebx
push    eax
mov     [edx+4], ecx
call    sub_413690
mov     bx, ax
lea     ecx, [esp+14h+var_2]
mov     eax, [esp+14h+arg_4]
mov     edx, [esp+14h+arg_8]
add     esp, 4
push    ecx
push    ebx
push    edx
push    eax
push    edi
call    sub_43fcc0
mov     di, ax
add     esp, 14h
cmp     di, 0ffffh
jnz     short loc_43f3aa
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, dword ptr [esp+10h+var_2]
push    ebx
push    eax
call    sub_486fa0
add     esp, 8
test    eax, 2000000h
jz      short loc_43f3f8
mov     eax, dword ptr [esp+10h+var_2]
push    ebx
push    eax
call    sub_4870d0
add     esp, 8
cmp     [esp+10h+arg_c], 0
jz      short loc_43f3d6
dec     ax
cmp     ax, 1
sbb     eax, eax
neg     eax
test    eax, eax
jz      short loc_43f3f8
push    edi
push    esi
call    sub_43f4e0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+7ch], 0
jz      short loc_43f45f
mov     eax, [esp+4+arg_4]
push    0
mov     ecx, [esp+8+arg_8]
push    0
push    ecx
mov     edx, [esi+62h]
push    eax
push    edx
call    sub_43fcc0
add     esp, 14h
cmp     [esi+84h], ax
jg      short loc_43f44c
cmp     [esi+86h], ax
mov     eax, 1
jge     short loc_43f44e
xor     eax, eax
cmp     [esi+80h], eax
jz      short loc_43f45f
push    esi
call    sub_43f5d0
add     esp, 4
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+7ch], 0
jz      short loc_43f4ce
cmp     dword ptr [esi+80h], 0
mov     edi, [esi+62h]
jz      short loc_43f491
push    esi
call    sub_43f5d0
add     esp, 4
mov     eax, [esp+8+arg_4]
push    0
mov     ecx, [esp+0ch+arg_8]
push    0
mov     dword ptr [esi+7ch], 0
push    ecx
push    eax
push    edi
call    sub_43fcc0
mov     cx, [esi+84h]
add     esp, 14h
cmp     ax, cx
jl      short loc_43f4ce
cmp     [esi+86h], ax
jl      short loc_43f4ce
push    ecx
push    esi
call    sub_43f580
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
mov     ebx, [esi+62h]
push    ebx
call    sub_413690
mov     di, [esp+18h+arg_4]
add     esp, 4
mov     bp, ax
push    edi
push    ebx
call    sub_419020
add     esp, 8
push    ebp
push    eax
call    sub_486fa0
add     esp, 8
test    eax, 4000000h
jz      short loc_43f56c
lea     eax, [esp+14h+var_4]
lea     ecx, [esp+14h+var_4+2]
push    eax
push    ecx
push    edi
push    ebx
call    sub_419060
add     esp, 10h
test    eax, eax
jz      short loc_43f576
mov     ax, word ptr [esp+14h+var_4+2]
push    esi
mov     dword ptr [esi+7ch], 1
mov     dword ptr [esi+80h], 0
mov     cx, word ptr [esp+18h+var_4]
mov     [esi+84h], ax
mov     [esi+86h], cx
call    sub_43f5d0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    edi
push    esi
call    sub_43f580
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 20h
push    ebx
push    esi
mov     si, [esp+28h+arg_4]
push    edi
mov     edi, [eax+62h]
mov     ebx, [eax+6eh]
push    esi
push    edi
call    sub_43f760
lea     eax, [esp+34h+var_20]
add     esp, 8
push    eax
mov     ax, si
inc     ax
push    eax
push    esi
push    edi
push    ebx
call    sub_454b80
add     esp, 14h
test    eax, eax
jz      short loc_43f5c6
lea     eax, [esp+2ch+var_20]
push    eax
call    sub_431b50
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
cmp     ds:frequency, 0
push    ebx
push    esi
push    edi
mov     ebx, 0
mov     edi, [esp+0ch+arg_0]
mov     esi, [edi+62h]
jz      short loc_43f5f8
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_43f637
mov     ax, [edi+86h]
mov     cx, [edi+84h]
push    eax
push    ecx
push    ebx
push    esi
call    sub_414950
add     esp, 10h
cmp     dword ptr [edi+80h], 1
sbb     eax, eax
push    ebx
neg     eax
mov     [edi+80h], eax
mov     ecx, ds:frequency
push    ecx
call    __beep_0
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 1b8h
mov     al, windowname
mov     ecx, 66h
push    edi
lea     edi, [esp+1bch+var_19b]
mov     [esp+1bch+string], al
xor     eax, eax
push    19ah
rep stosd
stosb
mov     word ptr [esp+1c0h+var_1b6], ax
lea     ecx, [esp+1c0h+var_1b6]
lea     eax, [esp+1c0h+string]
mov     edx, [esp+1c0h+pt.x]
push    eax
push    ecx
mov     eax, [esp+1c8h+pt.y]
mov     ecx, [esp+1c8h+arg_0]
push    eax
push    edx
push    ecx
call    sub_485ab0
add     esp, 18h
cmp     word ptr [esp+1bch+var_1b6], 0
jz      short loc_43f6ee
movsx   eax, word ptr [esp+1bch+var_1b6]
mov     word ptr [esp+1bch+var_1b6+2], 1
lea     ecx, [esp+1bch+var_1b6+2]
mov     [esp+1bch+var_1ac], eax
push    ecx
xor     eax, eax
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
push    2099h
mov     al, 1
push    eax
call    sub_4428a0
lea     ecx, [esp+1cch+var_1b6+2]
add     esp, 10h
xor     eax, eax
push    ecx
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
push    20a0h
mov     al, 1
push    eax
call    sub_4428a0
add     esp, 10h
cmp     [esp+1bch+string], 0
jz      short loc_43f74b
lea     eax, [esp+1bch+string]
lea     ecx, [esp+1bch+var_1b6+2]
push    eax
push    ecx
call    sub_41aec0
lea     ecx, [esp+1c4h+var_1b6+2]
add     esp, 8
xor     eax, eax
push    ecx
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
push    2098h
mov     al, 1
push    eax
call    sub_4428a0
lea     ecx, [esp+1cch+var_1b6+2]
add     esp, 10h
xor     eax, eax
push    ecx
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
push    209fh
mov     al, 1
push    eax
call    sub_4428a0
add     esp, 10h
pop     edi
add     esp, 1b8h
retn
sub     esp, 1ch
lea     eax, [esp+1ch+var_1c+2]
push    ebx
lea     ecx, [esp+20h+var_1c]
push    esi
mov     edx, dword ptr [esp+24h+arg_4]
push    edi
mov     esi, [esp+28h+hmem]
push    ebp
push    eax
push    ecx
push    edx
push    esi
call    sub_419060
add     esp, 10h
test    eax, eax
jz      short loc_43f7f7
movsx   edi, [esp+2ch+var_1c+2]
movsx   eax, [esp+2ch+var_1c]
sub     edi, eax
push    2
inc     edi
push    edi
call    sub_45b8f0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_43f7f7
push    ebx
call    ds:globallock
push    eax
mov     ebp, eax
mov     eax, dword ptr [esp+30h+var_1c+2]
mov     ecx, dword ptr [esp+30h+var_1c]
push    eax
push    ecx
push    esi
call    sub_4193a0
lea     ecx, [esp+3ch+var_18]
add     esp, 10h
mov     byte ptr [ebp+edi-1], 0
push    ebx
push    ecx
call    sub_41af50
lea     ecx, [esp+34h+var_18]
add     esp, 8
xor     eax, eax
push    ecx
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
push    20aeh
mov     al, 1
push    eax
call    sub_4428a0
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
sub     esp, 1ch
push    ebx
push    esi
mov     esi, [esp+24h+arg_0]
push    edi
push    ebp
xor     ebx, ebx
mov     edi, [esi+62h]
cmp     [esp+2ch+arg_4], ebx
jnz     short loc_43f84c
cmp     [esi+88h], ebx
jz      loc_43f8fa
mov     ebp, [esp+2ch+arg_8]
push    ebp
push    ebx
push    7fffh
push    ebx
push    edi
call    sub_4154c0
add     esp, 14h
mov     [esi+88h], ebx
mov     ebx, 1
pop     ebp
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
call    sub_4320f0
test    eax, eax
jz      loc_43f8fa
call    sub_43fba0
lea     eax, [esp+2ch+var_1a+2]
push    1
mov     word ptr [esp+30h+var_1a], 1
push    eax
call    sub_432000
add     esp, 8
test    eax, eax
jz      short loc_43f8f5
mov     ebp, [esp+2ch+arg_8]
mov     eax, [esi+6eh]
cmp     [esp+2ch+var_14], eax
jnz     short loc_43f8cc
cmp     [esp+2ch+var_10], 0ffffh
jz      short loc_43f8e9
cmp     [esp+2ch+var_14], eax
jnz     short loc_43f8cc
mov     ax, [esp+2ch+var_10]
cmp     [esi+72h], ax
jnz     short loc_43f8cc
cmp     [esp+2ch+var_6], 4
jz      short loc_43f8cc
mov     eax, [esp+2ch+var_a]
push    ebp
inc     ax
push    1
mov     ecx, dword ptr [esp+34h+var_e]
push    eax
push    ecx
mov     ebx, 1
push    edi
call    sub_4154c0
mov     dword ptr [esi+88h], 1
add     esp, 14h
inc     word ptr [esp+2ch+var_1a]
lea     ecx, [esp+2ch+var_1a+2]
mov     eax, [esp+2ch+var_1a]
push    eax
push    ecx
call    sub_432000
add     esp, 8
test    eax, eax
jnz     short loc_43f87c
jmp     short loc_43f8f5
push    ebp
push    esi
call    sub_43f910
add     esp, 8
mov     ebx, eax
call    sub_43fb90
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, [esp+arg_0]
sub     esp, 44h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [eax+62h]
xor     esi, esi
push    edi
call    sub_419300
mov     [esp+58h+var_38], 1
mov     [esp+58h+var_42], ax
lea     eax, [esp+58h+var_18]
add     esp, 4
push    eax
push    esi
push    20bah
push    esi
call    sub_4828c0
lea     eax, [esp+64h+var_18]
add     esp, 10h
push    esi
push    eax
call    sub_41aa60
lea     eax, [esp+5ch+var_18]
add     esp, 8
push    eax
call    sub_442d80
mov     [esp+58h+var_1c], eax
add     esp, 4
mov     eax, [esp+54h+arg_0]
mov     edx, [esp+54h+var_1c]
mov     ecx, [eax+6eh]
push    ecx
push    edx
call    sub_43fbc0
mov     [esp+5ch+var_28], eax
add     esp, 8
push    eax
call    sub_48e830
mov     [esp+58h+var_20], eax
add     esp, 4
cmp     eax, 1
mov     [esp+54h+var_24], 1
jl      loc_43fb29
mov     eax, [esp+54h+var_28]
push    eax
call    sub_48f140
mov     eax, [esp+58h+var_24]
mov     ecx, [esp+58h+var_28]
add     esp, 4
push    eax
push    ecx
call    sub_48f1d0
mov     ecx, [esp+5ch+var_28]
add     esp, 8
mov     ebx, eax
push    ecx
call    sub_48f1a0
movsx   eax, word ptr [ebx+2]
add     esp, 4
inc     eax
push    42h
push    eax
call    sub_45b8f0
mov     [esp+5ch+hmem], eax
add     esp, 8
push    eax
call    ds:globallock
movsx   ecx, word ptr [ebx+2]
mov     [esp+54h+lpstring2], eax
push    ecx
movsx   eax, word ptr [ebx]
add     eax, [esp+58h+var_1c]
push    eax
mov     eax, [esp+5ch+lpstring2]
push    eax
call    _memcpy
mov     ecx, [esp+60h+hmem]
add     esp, 0ch
push    ecx
call    ds:globalunlock
push    7fffh
push    0
push    edi
call    sub_419310
mov     [esp+60h+var_30], eax
add     esp, 0ch
test    eax, eax
jz      loc_43fb40
push    eax
call    ds:globallock
movsx   ecx, [esp+54h+var_42]
mov     ebp, eax
mov     [esp+54h+var_3c], eax
lea     ebx, [ecx+eax]
cmp     ebx, eax
jbe     loc_43faf2
mov     eax, [esp+54h+lpstring2]
push    0
push    0
push    1
push    eax
push    ebx
push    ebp
call    sub_45b290
mov     [esp+6ch+var_40], eax
add     esp, 18h
test    eax, eax
jz      short loc_43fae5
sub     ebp, [esp+54h+var_3c]
mov     esi, eax
sub     esi, [esp+54h+var_3c]
cmp     [esp+54h+var_38], 0
jz      short loc_43fabc
push    edi
call    sub_419920
add     esp, 4
test    eax, eax
jz      short loc_43fabc
push    edi
call    ds:globallock
mov     eax, [eax+56h]
push    edi
mov     [esp+58h+var_38], eax
call    ds:globalunlock
mov     eax, [esp+54h+var_38]
push    esi
push    ebp
push    eax
push    edi
call    sub_414670
add     esp, 10h
push    edi
call    sub_419730
mov     [esp+58h+var_38], 0
add     esp, 4
mov     eax, [esp+54h+arg_4]
push    eax
push    1
push    esi
push    ebp
push    edi
mov     esi, 1
call    sub_4154c0
mov     eax, [esp+68h+arg_0]
mov     ebp, [esp+68h+var_40]
add     esp, 14h
mov     dword ptr [eax+88h], 1
cmp     ebx, ebp
jbe     short loc_43faf2
inc     ebp
cmp     ebx, ebp
ja      loc_43fa4b
mov     eax, [esp+54h+hmem]
push    eax
call    sub_45ba00
mov     eax, [esp+58h+var_30]
add     esp, 4
push    eax
call    ds:globalunlock
mov     eax, [esp+54h+var_30]
push    eax
call    sub_45ba00
inc     [esp+58h+var_24]
mov     eax, [esp+58h+var_24]
add     esp, 4
cmp     eax, [esp+54h+var_20]
jle     loc_43f9a0
lea     eax, [esp+54h+var_18]
push    eax
call    sub_442e00
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
lea     eax, [esp+54h+var_18]
push    eax
call    sub_442e00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     dword_4ada0c, 0
retn
cmp     dword_4ada0c, 0
jnz     short locret_43fb83
mov     dword_4ada08, 0
retn
push    offset dword_4a6b18
call    sub_48e7d0
add     esp, 4
retn
mov     ds:dword_4a6b10, 0
push    0
push    4
push    offset dword_4a6b18
call    sub_48e770
add     esp, 0ch
retn
sub     esp, 0ba0h
push    ebx
push    esi
mov     ebx, [esp+0ba8h+arg_4]
push    edi
cmp     ds:dword_4a6b10, ebx
jnz     short loc_43fbe7
mov     eax, offset dword_4a6b18
pop     edi
pop     esi
pop     ebx
add     esp, 0ba0h
retn
push    offset dword_4a6b18
call    sub_48e800
add     esp, 4
mov     ds:dword_4a6b10, ebx
call    sub_447580
lea     edi, [esp+0bach+string]
mov     esi, eax
mov     ecx, 10ch
push    ebx
rep movsd
mov     [esp+0bb0h+var_802], ebx
call    sub_461c50
lea     edi, [esp+0bb0h+var_770]
mov     [esp+0bb0h+var_7fe], eax
add     esp, 4
xor     eax, eax
mov     ecx, 1dbh
rep stosd
stosw
lea     eax, [esp+0bach+string]
lea     ecx, [esp+0bach+var_770]
push    eax
push    ecx
call    sub_4475b0
add     esp, 8
test    eax, eax
jz      short loc_43fc95
lea     eax, [esp+0bach+var_402]
mov     esi, [esp+0bach+arg_0]
push    eax
push    esi
call    sub_403b70
movsx   ecx, ax
add     esp, 8
test    ecx, ecx
jnz     short loc_43fc95
lea     eax, [esp+0bach+var_770]
push    offset dword_4a6b18
lea     ecx, [esp+0bb0h+var_402]
push    eax
push    offset sub_448390
push    offset sub_4482b0
push    ecx
push    esi
call    sub_4040f0
add     esp, 18h
lea     eax, [esp+0bach+string]
lea     ecx, [esp+0bach+var_770]
push    eax
push    ecx
call    sub_447a00
add     esp, 8
mov     eax, offset dword_4a6b18
pop     edi
pop     esi
pop     ebx
add     esp, 0ba0h
retn
sub     esp, 10h
lea     eax, [esp+10h+var_10]
push    ebx
mov     edx, [esp+14h+arg_4]
push    esi
mov     ecx, [esp+18h+arg_8]
push    edi
mov     [esp+1ch+var_10], 0
mov     esi, [esp+1ch+hmem]
push    ebp
push    eax
push    0
push    ecx
push    edx
push    0
push    esi
call    sub_415ce0
mov     di, ax
mov     ebx, [esp+38h+arg_10]
add     esp, 18h
test    ebx, ebx
jz      loc_43fdad
cmp     di, 0ffffh
jz      loc_43fdad
push    edi
push    esi
call    sub_419020
mov     [ebx], ax
add     esp, 8
cmp     [esp+20h+var_10], 0
jz      loc_43fdad
mov     eax, [esp+20h+arg_4]
push    0
mov     ecx, [esp+24h+arg_8]
push    2
push    ecx
push    eax
push    0
push    esi
call    sub_415ce0
add     esp, 18h
cmp     ax, di
jz      short loc_43fdad
push    eax
push    esi
call    sub_419020
mov     bp, ax
add     esp, 8
mov     ax, [ebx]
cmp     bp, ax
jz      short loc_43fdad
mov     si, [esp+20h+arg_c]
push    esi
push    eax
call    sub_4870d0
mov     [esp+28h+var_8], ax
add     esp, 8
push    esi
push    ebp
call    sub_4870d0
add     esp, 8
cmp     [esp+20h+var_8], ax
jz      short loc_43fd87
mov     di, 0ffffh
pop     ebp
mov     ax, di
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ax, [ebx]
push    esi
push    eax
call    sub_487240
mov     [esp+28h+var_4], edx
add     esp, 8
push    esi
push    ebp
call    sub_487240
add     esp, 8
cmp     dx, word ptr [esp+20h+var_4]
jz      short loc_43fdad
mov     di, 0ffffh
mov     ax, di
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 164h
lea     eax, [esp+164h+var_15c]
push    esi
mov     esi, [esp+168h+arg_0]
push    edi
push    eax
push    esi
call    sub_43ff00
add     esp, 8
push    0
push    esi
call    sub_440ca0
add     esp, 8
test    eax, eax
jnz     loc_43feeb
lea     edi, [esp+16ch+var_c0]
xor     eax, eax
mov     ecx, 2fh
lea     edx, [esp+16ch+var_b0]
rep stosd
lea     ecx, [esp+16ch+var_15c]
stosw
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
lea     edi, [esp+16ch+src]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
xor     eax, eax
mov     [edx+0ch], ecx
mov     ecx, 22h
rep stosd
stosw
lea     ecx, [esp+16ch+var_15c]
lea     edx, [esp+16ch+var_140]
mov     [esp+16ch+src], 8ah
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
push    esi
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
lea     edx, [esp+170h+src]
push    edx
call    sub_4400c0
lea     ecx, [esp+174h+var_c0]
lea     edx, [esp+174h+src]
add     esp, 8
push    ecx
push    edx
call    sub_440840
add     esp, 8
push    2070308h
push    esi
call    sub_462670
movzx   ecx, ax
mov     [esp+174h+var_de], ecx
add     esp, 8
cmp     ds:dword_4a68c4, 1
sbb     eax, eax
neg     eax
mov     [esp+16ch+var_d6], eax
cmp     eax, 1
mov     word ptr [esp+16ch+var_160], 2
sbb     eax, eax
neg     eax
mov     [esp+16ch+var_da], eax
call    sub_4441e0
push    100000h
mov     ecx, [esp+170h+var_160]
push    0ah
lea     eax, [esp+174h+src]
push    ecx
push    esi
push    offset sub_4401c0
push    eax
call    sub_43aa50
mov     eax, [esp+184h+var_160]
add     esp, 18h
push    eax
push    esi
call    sub_444580
add     esp, 8
pop     edi
pop     esi
add     esp, 164h
retn
sub     esp, 0c8h
push    ebx
push    esi
mov     ebx, [esp+0d0h+arg_0]
push    edi
push    ebp
mov     eax, ebx
shr     eax, 10h
mov     ecx, dword_4ae1e0
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_43ff3e
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_43ff47
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+0d8h+var_c8]
push    8
push    ecx
push    0dh
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      short loc_43ff86
movsx   eax, [esp+0d8h+var_c8]
movsx   ecx, [esp+0d8h+var_c6]
mov     ebp, [esp+0d8h+arg_4]
movsx   edx, [esp+0d8h+var_c2]
mov     [ebp+0], eax
mov     [ebp+4], ecx
movsx   eax, [esp+0d8h+var_c4]
mov     [ebp+8], eax
mov     [ebp+0ch], edx
jmp     short loc_43ffa9
mov     ebp, [esp+0d8h+arg_4]
mov     dword ptr [ebp+4], 96h
mov     dword ptr [ebp+8], 140h
mov     dword ptr [ebp+0ch], 0a8h
mov     dword ptr [ebp+0], 96h
mov     eax, [ebp+0]
mov     ecx, [ebp+4]
push    eax
sub     [ebp+8], eax
push    40ch
sub     [ebp+0ch], ecx
push    ebx
call    sub_42edc0
add     esp, 0ch
mov     edx, [ebp+4]
movsx   ecx, ax
push    edx
mov     [ebp+0], ecx
push    40dh
push    ebx
call    sub_42edc0
add     esp, 0ch
mov     edx, [ebp+8]
movsx   ecx, ax
push    edx
mov     [ebp+4], ecx
push    40eh
push    ebx
call    sub_42edc0
add     esp, 0ch
mov     edx, [ebp+0ch]
movsx   ecx, ax
push    edx
mov     [ebp+8], ecx
push    40fh
push    ebx
call    sub_42edc0
add     esp, 0ch
mov     edx, [ebp+0]
movsx   ecx, ax
mov     eax, [ebp+8]
mov     [ebp+0ch], ecx
add     eax, edx
mov     ecx, [ebp+4]
mov     [ebp+8], eax
add     [ebp+0ch], ecx
sub     eax, edx
cmp     eax, 5
jge     short loc_440030
add     edx, 5
mov     [ebp+8], edx
mov     word ptr [esp+0d8h+var_bc], 2
mov     eax, [esp+0d8h+var_bc]
push    eax
push    ebx
call    sub_43b150
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_4400b4
lea     esi, [ebx+0ch]
mov     ecx, 10h
mov     edi, ebp
repe cmpsb
jz      short loc_4400a7
lea     edi, [esp+0d8h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
lea     ecx, [esp+0d8h+var_b0]
mov     eax, [ebp+0]
mov     edx, [ebp+4]
push    0
push    8
mov     [ecx], eax
mov     eax, [ebp+8]
push    ebx
mov     ebp, [ebp+0ch]
mov     [ecx+4], edx
mov     [ecx+8], eax
mov     [ecx+0ch], ebp
call    dword ptr [ebx+6]
lea     ecx, [esp+0e4h+var_c0]
add     esp, 0ch
push    ecx
push    0bh
push    ebx
call    dword ptr [ebx+6]
add     esp, 0ch
push    0
push    7
push    ebx
call    dword ptr [ebx+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
shr     esi, 10h
push    ebp
mov     ebx, ds:frequency
mov     edi, [esp+10h+arg_0]
mov     eax, [esp+10h+arg_4]
push    11h
mov     dword ptr [edi+66h], 0
mov     dword ptr [edi+6ah], 0
push    eax
mov     [edi+86h], eax
mov     dword ptr [edi+62h], 0
call    sub_4612e0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_44013f
push    ebx
push    esi
push    ebp
call    sub_4182e0
add     esp, 0ch
mov     ecx, eax
mov     [edi+62h], eax
test    ecx, ecx
jz      short loc_440136
lea     eax, [edi+0ch]
push    eax
push    ecx
call    sub_4194a0
add     esp, 8
lea     eax, [edi+0ch]
mov     ecx, [edi+62h]
push    eax
push    ecx
call    sub_419410
add     esp, 8
push    ebp
call    sub_45ba00
add     esp, 4
cmp     dword ptr [edi+62h], 0
jnz     short loc_440157
push    ebx
lea     eax, [edi+0ch]
push    esi
push    eax
push    eax
call    sub_413470
add     esp, 10h
mov     [edi+62h], eax
push    edi
call    sub_440e50
mov     eax, [esp+14h+arg_4]
add     esp, 4
push    eax
push    edi
call    sub_440180
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
call    sub_4755f0
mov     ecx, [esp+4+arg_4]
push    eax
push    ecx
mov     [esi+7eh], eax
call    sub_42fb10
add     esp, 8
mov     ecx, [esi+7eh]
push    ecx
call    sub_475630
add     esp, 4
test    ax, ax
jnz     short loc_4401ba
push    0dh
mov     eax, [esi+7eh]
push    eax
call    sub_475a70
add     esp, 8
pop     esi
retn
sub     esp, 24h
push    ebx
push    esi
mov     esi, [esp+2ch+arg_0]
push    edi
mov     ebx, [esp+30h+arg_4]
push    ebp
mov     ebp, [esi+62h]
cmp     ebx, 6ah
ja      def_4401e3
xor     eax, eax
mov     al, ds:byte_4407cc[ebx]
jmp     ds:jpt_4401e3[eax*4]
mov     edi, [esp+34h+arg_8]
push    edi
push    ebx
push    esi
call    sub_43eca0
add     esp, 0ch
test    byte ptr [edi+0ah], 6
jz      loc_44028e
lea     eax, [esp+34h+rcsrc2]
push    eax
push    esi
call    sub_4409c0
mov     dx, [esi+1ch]
lea     ecx, [esp+3ch+rcsrc2]
add     esp, 8
mov     eax, [edi+0ch]
push    eax
push    ecx
push    edx
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_44028e
cmp     dword ptr [esi+6eh], 0
jz      short loc_440248
mov     eax, [esi+82h]
lea     ecx, [esi+0ch]
push    eax
mov     edx, [edi+0ch]
push    ecx
push    edx
call    sub_440e20
add     esp, 0ch
cmp     dword ptr [esi+72h], 0
jz      short loc_44028e
lea     ecx, [esp+34h+rc.left+2]
mov     eax, [esi+0ch]
add     esi, 0ch
mov     [ecx], eax
push    1
mov     edx, [esi+4]
push    1
mov     [ecx+4], edx
mov     ebx, [esi+8]
mov     [ecx+8], ebx
mov     eax, [esi+0ch]
mov     [ecx+0ch], eax
lea     ecx, [esp+3ch+rc.left+2]
push    ecx
call    ds:inflaterect
lea     ecx, [esp+34h+rc.left+2]
push    0
push    ecx
mov     eax, [edi+0ch]
push    eax
call    sub_429340
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
cmp     dword ptr [esi+76h], 0
jnz     def_4401e3
lea     eax, [esp+34h+rcsrc2]
push    eax
push    ebp
call    sub_419550
mov     edi, [esp+3ch+arg_8]
lea     edx, [esp+3ch+rcsrc2]
add     esp, 8
mov     eax, [edi]
mov     ecx, [edi+4]
push    ecx
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jz      short loc_4402dd
mov     eax, 0ffffffffh
pop     ebp
mov     [edi+98h], esi
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
cmp     ds:frequency, 0
mov     esi, 0
jz      short loc_440305
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_44032e
mov     edi, [esp+34h+arg_8]
mov     ecx, [edi]
mov     eax, [edi+4]
push    eax
push    ecx
push    esi
push    ebp
call    sub_4143e0
add     esp, 10h
mov     ecx, ds:frequency
push    esi
push    ecx
call    __beep_0
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
cmp     ds:frequency, 0
mov     esi, 0
jz      short loc_440359
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_440378
push    1
push    esi
push    ebp
call    sub_414ab0
add     esp, 0ch
mov     eax, ds:frequency
push    esi
push    eax
call    __beep_0
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
cmp     dword ptr [esi+76h], 0
jnz     short loc_440395
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
cmp     ds:frequency, 0
mov     ebx, 0
jz      short loc_4403b3
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_440413
movsx   ecx, word ptr [esi]
add     ecx, esi
mov     ax, [ecx-0a2h]
sub     ecx, 0a6h
push    eax
mov     edx, [ecx]
push    edx
call    sub_444580
mov     edi, [esp+3ch+arg_8]
add     esp, 8
movsx   ecx, word ptr [edi+0ah]
push    ecx
push    10h
call    ds:getkeystate
and     ax, 8000h
mov     ecx, [edi]
cmp     ax, 1
sbb     eax, eax
inc     eax
push    eax
mov     eax, [edi+4]
push    eax
push    ecx
push    ebx
push    ebp
call    sub_4142d0
add     esp, 18h
mov     ecx, ds:frequency
push    ebx
push    ecx
call    __beep_0
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
lea     edi, [esi+1ch]
cmp     ebx, 7
jz      short loc_44042b
lea     edi, [esi+1eh]
lea     eax, [esp+34h+rcsrc2]
push    eax
push    esi
call    sub_4409c0
mov     eax, [esp+3ch+rcsrc2.bottom]
mov     ecx, [esp+3ch+rcsrc2.right]
mov     edx, [esp+3ch+rcsrc2.top]
add     esp, 8
push    eax
push    ecx
mov     cx, [edi]
push    edx
mov     eax, [esp+40h+rcsrc2.left]
push    eax
push    ecx
call    sub_474400
mov     [edi], ax
add     esp, 14h
mov     edi, [esp+34h+arg_8]
push    edi
push    ebx
push    esi
call    sub_43eca0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     edi, [esp+34h+arg_8]
push    edi
push    esi
call    sub_440840
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     eax, [esi+7eh]
push    eax
call    sub_475600
mov     dword ptr [esi+7eh], 0
add     esp, 4
jmp     short def_4401e3
mov     edi, [esp+34h+arg_8]
push    edi
push    ebx
push    esi
call    sub_43eca0
lea     eax, [esp+40h+rcsrc2]
add     esp, 0ch
push    eax
push    esi
add     edi, 10h
call    sub_4409c0
lea     eax, [esp+3ch+rcsrc2]
add     esp, 8
lea     ecx, [edi]
push    eax
push    ecx
push    edi
call    ds:unionrect
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
cmp     ds:frequency, 0
mov     edi, 0
jz      short loc_4404f7
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     edi, eax
test    edi, edi
jz      def_4401e3
push    0
push    edi
push    ebp
call    sub_414ab0
add     esp, 0ch
mov     eax, ds:frequency
push    edi
push    eax
call    __beep_0
add     esp, 8
jmp     def_4401e3
cmp     dword ptr [esi+76h], 0
jnz     short loc_44052f
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     edi, [esp+34h+arg_8]
mov     eax, [edi+0bah]
mov     ecx, [edi+0ch]
push    eax
push    ecx
push    ebp
call    sub_414140
add     esp, 0ch
test    eax, eax
jz      short loc_440571
lea     eax, [esp+34h+rcsrc2]
push    0
push    0
mov     ecx, [edi+0ch]
push    0
push    eax
push    ecx
push    ebp
call    sub_414e80
lea     ecx, [esp+4ch+rcsrc2]
add     esp, 18h
push    ecx
push    esi
call    sub_440930
add     esp, 8
mov     eax, [esi+7eh]
mov     ecx, [edi+0bah]
push    eax
push    ecx
call    sub_42fcc0
add     esp, 8
test    eax, eax
jz      short loc_4405b2
lea     eax, [esp+34h+rcsrc2]
push    eax
call    sub_436c60
add     esp, 4
test    eax, eax
jz      short loc_4405ad
cmp     [esp+34h+rcsrc2.left], 2
jz      short loc_4405ad
lea     eax, [esp+34h+rcsrc2]
push    eax
call    sub_436cf0
add     esp, 4
call    sub_433a00
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
cmp     dword ptr [esi+76h], 0
mov     edi, [esp+34h+arg_8]
jnz     short loc_4405da
cmp     word ptr [edi+0ah], 0
jz      short loc_4405da
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
movsx   eax, word ptr [edi+0ah]
push    eax
mov     ecx, [edi+0ch]
push    ecx
push    ebp
call    sub_414ab0
add     esp, 0ch
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
movsx   eax, word ptr [esi]
push    7fffh
push    3eeh
mov     ecx, [eax+esi-0a6h]
mov     [esp+3ch+rc.left+2], ecx
push    ecx
call    sub_42edc0
mov     word ptr [esp+40h+rc.left], ax
mov     edi, [esp+40h+arg_8]
lea     eax, [esp+40h+rcsrc2]
add     esp, 0ch
mov     bl, [edi+0bah]
mov     ecx, [esp+34h+rc.left+2]
push    ecx
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
call    sub_426d50
add     esp, 4
test    eax, eax
jz      short loc_44067e
push    ebx
call    ds:ischarlowera
test    eax, eax
jz      short loc_44067e
lea     eax, [esp+34h+sz]
mov     [esp+34h+sz], bl
push    eax
mov     ebx, ds:charuppera
mov     [esp+38h+var_23], 0
call    ebx
mov     bl, [esp+34h+sz]
cmp     bl, 9
jz      loc_44073c
mov     eax, [esi+7eh]
push    eax
xor     eax, eax
mov     al, bl
push    eax
call    sub_42fcc0
add     esp, 8
test    eax, eax
jnz     loc_44073c
mov     eax, [esi+82h]
mov     ecx, [esi+10h]
cdq
sub     eax, edx
sar     eax, 1
add     ecx, eax
mov     eax, [esi+18h]
add     ecx, [esi+82h]
cmp     ecx, eax
jg      short loc_4406c0
mov     ecx, eax
lea     eax, [esp+34h+rcsrc2]
mov     edx, [edi+0ch]
push    eax
push    ebx
push    ecx
mov     ecx, [esp+40h+rc.left]
push    ecx
push    edx
push    ebp
call    sub_440890
lea     ecx, [esp+4ch+rcsrc2]
add     esp, 18h
mov     edi, eax
push    ecx
push    esi
call    sub_440930
add     esp, 8
test    edi, edi
jz      short loc_440732
push    ebp
call    sub_440ef0
add     esp, 4
cmp     ax, word ptr [esp+34h+rc.left]
jl      short loc_440723
mov     eax, [esp+34h+rc.left+2]
push    2070001h
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_440723
call    sub_433a00
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     eax, [esi+86h]
push    eax
call    sub_440b50
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
movsx   eax, word ptr [esi]
mov     ecx, [eax+esi-0a6h]
push    ecx
push    esi
call    sub_440180
mov     edi, [esp+3ch+arg_8]
add     esp, 8
mov     eax, [esi+86h]
mov     ebp, [edi+24h]
push    eax
call    sub_408fc0
shr     eax, 10h
add     esp, 4
movsx   ecx, ax
push    edi
mov     [edi+24h], ecx
push    ebx
push    esi
call    sub_43eca0
add     esp, 0ch
mov     [edi+24h], ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     edx, [esp+arg_0]
push    ebx
push    esi
push    edi
mov     esi, [esp+0ch+arg_4]
mov     eax, [edx+82h]
mov     ecx, [esi+14h]
mov     edi, [esi+1ch]
sub     edi, ecx
lea     ebx, [eax+2]
cmp     edi, ebx
jge     short loc_440868
add     eax, ecx
add     eax, 2
mov     [esi+1ch], eax
mov     eax, [esi+10h]
mov     ecx, [esi+18h]
sub     ecx, eax
cmp     ecx, 5
jge     short loc_44087b
add     eax, 5
mov     [esi+18h], eax
push    esi
push    0bh
push    edx
call    sub_43eca0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+hmem]
push    edi
push    esi
call    sub_440ef0
mov     di, ax
lea     ecx, [esp+14h+var_2]
lea     eax, [esp+14h+var_4]
add     esp, 4
push    eax
push    ecx
push    esi
call    sub_4195c0
add     esp, 0ch
cmp     di, [esp+10h+arg_8]
jl      short loc_4408cc
mov     ax, [esp+10h+var_2]
cmp     [esp+10h+var_4], ax
jz      short loc_440916
mov     bl, [esp+10h+arg_10]
mov     edi, [esp+10h+arg_4]
push    ebx
push    edi
push    esi
call    sub_413c90
add     esp, 0ch
test    eax, eax
jz      short loc_44091f
mov     eax, [esp+10h+arg_14]
push    0
push    0
push    0
push    eax
push    edi
push    esi
call    sub_414e80
add     esp, 18h
cmp     [esp+10h+arg_c], eax
jle     short loc_44090a
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    8
push    edi
push    esi
call    sub_414140
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     bl, 8
jnz     short loc_440916
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     eax, [esi+62h]
push    eax
call    sub_419620
mov     edi, [esp+0ch+arg_4]
add     esp, 4
mov     eax, [edi+4]
or      eax, [edi+8]
or      eax, [edi+0ch]
or      eax, [edi]
jz      short loc_4409bb
mov     eax, [esi+62h]
push    eax
call    sub_419620
add     esp, 4
cmp     ax, 4
jz      short loc_440994
test    ax, ax
jz      short loc_440994
mov     eax, [edi+0ch]
mov     ecx, [edi+8]
push    eax
mov     edx, [edi+4]
push    ecx
mov     eax, [edi]
mov     cx, [esi+1eh]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [esi+1eh], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
pop     edi
pop     esi
retn
mov     eax, [edi+0ch]
mov     ecx, [edi+8]
push    eax
mov     edx, [edi+4]
push    ecx
mov     eax, [edi]
mov     cx, [esi+1ch]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [esi+1ch], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
pop     edi
pop     esi
retn
mov     edx, [esp+arg_0]
push    esi
mov     esi, [esp+4+lprc]
lea     ecx, [edx+0ch]
mov     eax, [ecx]
mov     [esi], eax
mov     eax, [ecx+4]
mov     [esi+4], eax
mov     eax, [ecx+8]
mov     [esi+8], eax
mov     ecx, [ecx+0ch]
mov     [esi+0ch], ecx
cmp     dword ptr [edx+6eh], 0
jz      short loc_4409eb
sub     dword ptr [esi], 14h
push    1
push    1
push    esi
call    ds:inflaterect
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     word ptr [esp+8+var_4], 2
mov     ecx, [esp+8+var_4]
push    ecx
push    eax
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_440a3f
mov     ecx, [esp+8+arg_4]
push    0
push    8
mov     [eax+72h], ecx
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    esi
push    edi
push    7fffh
mov     edi, [eax+62h]
push    0
push    eax
call    sub_440dd0
mov     esi, [esp+14h+lpstring]
add     esp, 0ch
push    esi
call    ds:lstrlena
push    eax
push    esi
push    edi
call    sub_413a50
add     esp, 0ch
or      ds:byte_4a61d4, 1
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     word ptr [esp+8+var_4], 2
mov     ecx, [esp+8+var_4]
push    esi
push    edi
xor     esi, esi
push    ecx
push    eax
call    sub_43b150
add     esp, 8
mov     edi, eax
cmp     edi, esi
jz      short loc_440ae5
push    7fffh
mov     eax, [edi+62h]
push    esi
push    eax
call    sub_419310
add     esp, 0ch
mov     [edi+7ah], eax
test    eax, eax
jz      short loc_440ad8
push    eax
call    ds:globallock
mov     esi, eax
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     word ptr [esp+8+var_4], 2
mov     ecx, [esp+8+var_4]
push    esi
push    edi
xor     esi, esi
push    ecx
push    eax
call    sub_43b150
add     esp, 8
mov     edi, eax
cmp     edi, esi
jz      short loc_440b3f
mov     eax, [edi+7ah]
test    eax, eax
jz      short loc_440b32
mov     esi, 1
push    eax
call    sub_45ba00
mov     dword ptr [edi+7ah], 0
add     esp, 4
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
add     esp, 8
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+0ch+arg_0]
push    esi
call    sub_440a90
add     esp, 4
mov     edi, eax
cmp     edi, ebx
jz      short loc_440b81
push    edi
push    esi
call    sub_443340
add     esp, 8
cmp     byte ptr [edi], 1
sbb     ebx, ebx
push    esi
inc     ebx
call    sub_440af0
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 8
cmp     [esp+8+arg_4], 0
push    esi
jz      short loc_440bb8
cmp     ds:dword_4a68ae, 2
jnz     short loc_440be5
mov     esi, [esp+0ch+arg_0]
push    1
push    esi
call    sub_440ca0
add     esp, 8
pop     esi
add     esp, 8
retn
mov     esi, [esp+0ch+arg_0]
push    esi
call    sub_440bf0
add     esp, 4
test    eax, eax
jz      short loc_440be5
mov     word ptr [esp+0ch+var_4], 2
mov     eax, [esp+0ch+var_4]
push    2
push    100000h
push    eax
push    esi
call    sub_43b5a0
add     esp, 10h
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     word ptr [esp+8+var_4], 2
mov     [esp+8+var_8], eax
mov     ecx, [esp+8+var_4]
push    ecx
push    eax
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_440c4b
mov     dword ptr [eax+76h], 0
push    offset dword_4a61c4
call    sub_412f60
mov     [esp+0ch+var_8], 0
mov     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+var_8]
add     esp, 4
push    eax
push    ecx
call    sub_444580
add     esp, 8
mov     eax, 1
add     esp, 8
retn
xor     eax, eax
add     esp, 8
retn
sub     esp, 8
push    esi
mov     esi, [esp+0ch+arg_0]
push    esi
call    sub_440bf0
add     esp, 4
test    eax, eax
jz      short loc_440c8e
mov     word ptr [esp+0ch+var_4], 2
mov     eax, [esp+0ch+var_4]
push    2
push    0
push    eax
push    esi
call    sub_43b5a0
add     esp, 10h
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     word ptr [esp+8+var_4], 2
mov     [esp+8+var_8], eax
mov     ecx, [esp+8+var_4]
push    ecx
push    eax
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_440d23
mov     dword ptr [eax+76h], 1
cmp     [esp+8+arg_4], 0
jnz     short loc_440ce2
push    7fffh
push    0
push    eax
call    sub_440dd0
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
mov     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+var_8]
add     esp, 4
push    2
push    100000h
push    eax
push    ecx
call    sub_43b5a0
mov     ecx, [esp+18h+var_4]
mov     edx, [esp+18h+var_8]
add     esp, 10h
push    ecx
push    edx
call    sub_444580
add     esp, 8
mov     eax, 1
add     esp, 8
retn
xor     eax, eax
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 10h
mov     word ptr [esp+10h+rcsrc2.top], 2
mov     ecx, [esp+10h+rcsrc2.top]
push    esi
push    ecx
push    eax
call    sub_43b150
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_440dc1
mov     eax, [esp+14h+arg_4]
cmp     [esi+6eh], eax
jz      short loc_440db4
lea     ecx, [esi+0ch]
lea     edx, [esp+14h+rcsrc2]
mov     [esi+6eh], eax
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     [edx+0ch], ecx
mov     eax, [esp+14h+rcsrc2.left]
sub     eax, 2
mov     [esp+14h+rcsrc2.right], eax
sub     [esp+14h+rcsrc2.left], 14h
mov     ecx, [esp+14h+rcsrc2.bottom]
mov     edx, [esp+14h+rcsrc2.top]
push    ecx
push    eax
mov     ax, [esi+1eh]
push    edx
mov     ecx, [esp+20h+rcsrc2.left]
push    ecx
push    eax
call    sub_474400
mov     [esi+1eh], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     esi
add     esp, 10h
retn
cmp     ds:frequency, 0
push    esi
mov     esi, 0
jz      short loc_440def
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_440e1e
mov     eax, dword ptr [esp+4+arg_8]
mov     ecx, dword ptr [esp+4+arg_4]
mov     edx, [esp+4+arg_0]
push    eax
push    ecx
push    esi
mov     eax, [edx+62h]
push    eax
call    sub_414670
add     esp, 10h
mov     ecx, ds:frequency
push    esi
push    ecx
call    __beep_0
add     esp, 8
pop     esi
retn
mov     eax, [esp+arg_8]
push    esi
cdq
mov     esi, [esp+4+arg_4]
sub     eax, edx
sar     eax, 1
mov     edx, [esi]
add     eax, [esi+4]
mov     ecx, [esp+4+hdc]
push    eax
push    edx
push    0
push    36h
push    ecx
call    sub_47ffd0
add     esp, 14h
pop     esi
retn
sub     esp, 88h
push    esi
push    edi
mov     esi, [esp+90h+arg_0]
mov     dword ptr [esi+82h], 14h
mov     eax, [esi+62h]
test    eax, eax
jz      short loc_440edd
lea     ecx, [esp+90h+var_88]
push    0
push    0
push    ecx
push    eax
call    sub_414b30
lea     edi, [esp+0a0h+var_5c]
add     esp, 10h
xor     eax, eax
mov     ecx, 16h
rep stosd
stosw
lea     eax, [esp+90h+var_84]
lea     ecx, [esp+90h+var_5c]
push    eax
push    ecx
call    sub_4497b0
lea     edx, [esp+98h+var_5c]
add     esp, 8
movsx   ecx, [esp+90h+var_64]
push    ecx
push    edx
call    sub_4497e0
mov     ecx, [esp+98h+var_62]
lea     edx, [esp+98h+var_5c]
add     esp, 8
push    ecx
push    edx
call    sub_449820
lea     ecx, [esp+98h+var_5c]
add     esp, 8
push    ecx
push    0
call    sub_449120
add     esp, 8
mov     [esi+82h], eax
pop     edi
pop     esi
add     esp, 88h
retn
mov     eax, [esp+hmem]
push    esi
push    edi
push    7fffh
push    0
push    eax
call    sub_419310
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_440f33
push    esi
call    ds:globallock
push    eax
call    ds:lstrlena
mov     di, ax
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
mov     ax, di
add     esp, 4
pop     edi
pop     esi
retn
xor     ax, ax
pop     edi
pop     esi
retn
sub     esp, 8
call    sub_435440
mov     word ptr [esp+8+var_4], 2
mov     [esp+8+var_8], eax
mov     eax, [esp+8+var_4]
mov     ecx, [esp+8+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_440f82
mov     eax, [eax+62h]
push    eax
call    sub_415590
add     esp, 4
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
xor     eax, eax
add     esp, 8
retn
sub     esp, 8
push    esi
call    sub_435440
mov     word ptr [esp+0ch+var_4], 2
mov     [esp+0ch+var_8], eax
mov     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_440ff0
mov     esi, [eax+62h]
push    esi
call    sub_415590
add     esp, 4
push    esi
call    sub_413910
add     esp, 4
push    offset dword_4a61c4
call    sub_412f60
mov     eax, [esp+10h+var_8]
add     esp, 4
or      ds:byte_4a61d4, 1
push    eax
call    sub_440b50
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 8
retn
sub     esp, 8
call    sub_435440
mov     word ptr [esp+8+var_4], 2
mov     [esp+8+var_8], eax
mov     eax, [esp+8+var_4]
mov     ecx, [esp+8+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_441056
mov     eax, [eax+62h]
push    eax
call    sub_415570
add     esp, 4
push    offset dword_4a61c4
call    sub_412f60
mov     eax, [esp+0ch+var_8]
add     esp, 4
or      ds:byte_4a61d4, 1
push    eax
call    sub_440b50
add     esp, 4
xor     eax, eax
add     esp, 8
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_8]
sub     esp, 18h
mov     [esp+18h+var_18], eax
push    esi
mov     esi, [esp+1ch+arg_0]
push    edi
mov     [esp+20h+var_14], ecx
mov     eax, [esi+4]
mov     ecx, [esi+8]
add     [esp+20h+var_18], eax
mov     eax, [esi]
add     [esp+20h+var_14], ecx
cmp     eax, 1
jz      short loc_441098
cmp     eax, 2
jz      short loc_4410c5
jmp     loc_44111a
lea     eax, [esp+20h+var_18]
lea     ecx, [esi+1ch]
mov     edx, [esp+20h+var_18]
push    eax
mov     eax, [esp+24h+var_14]
push    ecx
push    eax
lea     ecx, [esi+26h]
push    edx
push    ecx
call    sub_40e100
add     esp, 14h
cmp     eax, 2
jnz     short loc_44111a
mov     dword ptr [esi+1eh], 1
jmp     short loc_44111a
mov     edi, [esi+10h]
lea     ecx, [esi+0ch]
lea     edx, [esp+20h+var_10]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+4], edi
mov     [edx+8], eax
mov     [edx+0ch], ecx
mov     edx, [esp+20h+var_4]
mov     edi, [esp+20h+var_10]
mov     eax, [esp+20h+var_c]
mov     ecx, [esp+20h+var_8]
cmp     edi, [esp+20h+var_18]
jle     short loc_4410fc
mov     [esp+20h+var_18], edi
cmp     ecx, [esp+20h+var_18]
jge     short loc_441106
mov     [esp+20h+var_18], ecx
cmp     eax, [esp+20h+var_14]
jle     short loc_441110
mov     [esp+20h+var_14], eax
cmp     edx, [esp+20h+var_14]
jge     short loc_44111a
mov     [esp+20h+var_14], edx
mov     eax, [esi+22h]
test    eax, eax
jz      short loc_441127
push    esi
call    eax
add     esp, 4
mov     eax, [esp+20h+var_18]
mov     edx, [esp+20h+var_14]
pop     edi
pop     esi
add     esp, 18h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_8]
lea     edx, [eax+26h]
mov     ax, [eax+1ch]
push    eax
push    ecx
mov     eax, [esp+8+arg_4]
push    eax
push    edx
call    sub_40e250
add     esp, 10h
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
dec     eax
cmp     eax, 4
ja      def_441171
jmp     ds:jpt_441171[eax*4]
push    42h
push    1e0h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a6b40, eax
test    eax, eax
jnz     short loc_441197
mov     eax, 8
pop     esi
retn
mov     ds:word_4a6b46, 30h
mov     eax, ds:dword_4a6b40
push    eax
call    sub_45bbc0
mov     ds:word_4a6b48, ax
add     esp, 4
mov     eax, ds:dword_4a6b40
mov     eax, [eax]
mov     word ptr [eax], 30h
mov     dword ptr [eax+2], 1
call    sub_43cd40
mov     ds:word_4a6b44, ax
xor     eax, eax
mov     ds:word_4a6b50, ax
mov     ds:dword_4a6b4a, eax
mov     ds:word_4a6b54, ax
mov     word ptr [esi+8], 0eh
mov     ax, ds:word_4a6b44
mov     edx, ds:dword_4a6b40
movsx   ecx, ds:word_4a6b46
push    ecx
push    edx
push    eax
call    sub_43cda0
add     esp, 0ch
pop     esi
retn
cmp     word ptr [esi+8], 0eh
jz      short loc_441219
mov     eax, 1389h
pop     esi
retn
mov     ecx, [esi+0ah]
mov     edx, offset dword_4a6b40
mov     eax, [ecx]
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     cx, [ecx+0ch]
mov     [edx+0ch], cx
mov     dx, ds:word_4a6b44
push    edx
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6b40, eax
test    eax, eax
jnz     short loc_441259
mov     eax, 8
pop     esi
retn
mov     eax, ds:dword_4a6b40
push    eax
call    sub_45bbc0
mov     ds:word_4a6b48, ax
add     esp, 4
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_44129b
push    0
push    0
push    offset sub_4413d0
push    eax
call    sub_4413e0
add     esp, 10h
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
xor     eax, eax
pop     esi
mov     ds:word_4a6b50, 1
mov     ds:word_4a6b54, 0
retn
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_4412e4
push    offset word_4a6b46
push    eax
call    sub_4421c0
add     esp, 8
mov     eax, ds:dword_4a6b40
mov     ds:word_4a6b54, 0
push    eax
call    ds:globalunlock
mov     edx, [esi+0ah]
mov     eax, ds:dword_4a6b40
mov     ecx, offset dword_4a6b40
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     cx, [ecx+0ch]
mov     [edx+0ch], cx
mov     cx, ds:word_4a6b44
mov     eax, ds:dword_4a6b40
movsx   edx, ds:word_4a6b46
push    edx
push    eax
push    ecx
call    sub_43cda0
add     esp, 0ch
pop     esi
retn
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_441355
push    0
push    0
push    offset sub_441820
push    eax
call    sub_4413e0
add     esp, 10h
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6b44
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ds:dword_4a6b40, 0
pop     esi
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
push    0
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a6b44
or      eax, ecx
push    eax
call    sub_4709c0
mov     ds:dword_4a6b40, 0
add     esp, 0ch
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
and     word ptr [eax+0ch], 0fffeh
mov     eax, 1
retn
inc     ds:word_4a6b38
push    ebx
xor     bx, bx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, [esp+0ch+arg_8]
push    ebp
movsx   eax, bx
mov     ecx, [esp+10h+arg_c]
lea     ebp, [eax+esi]
push    ecx
push    edi
push    ebp
call    [esp+1ch+arg_4]
add     esp, 0ch
test    eax, eax
jz      short loc_44141a
cmp     dword ptr [ebp+2], 1
jz      short loc_441428
add     bx, [ebp+0]
jmp     short loc_4413f6
dec     ds:word_4a6b38
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
dec     ds:word_4a6b38
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, word ptr [esp+arg_8]
sub     esp, 48h
mov     [esp+48h+var_3c], eax
push    ebx
mov     [esp+4ch+var_40], 0
push    esi
push    edi
mov     esi, [esp+54h+arg_4]
push    ebp
push    eax
push    esi
call    sub_408ff0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jnz     short loc_441476
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
mov     ax, word ptr [esp+58h+arg_8]
lea     ecx, [esp+58h+var_46]
add     ax, 7d0h
push    ecx
mov     word ptr [esp+5ch+var_38], ax
mov     eax, [esp+5ch+var_38]
push    eax
push    ebx
call    sub_461350
add     esp, 0ch
mov     ebp, eax
test    ebp, ebp
jz      loc_441620
mov     [esp+58h+var_40], 1
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globallock
mov     [esp+58h+var_44], eax
test    eax, eax
jz      short loc_4414e1
mov     eax, [esp+58h+arg_8]
mov     ecx, [esp+58h+var_44]
push    eax
push    esi
push    ecx
call    sub_441e50
mov     [esp+64h+var_44], eax
add     esp, 0ch
mov     ecx, ds:dword_4a6b40
push    ecx
call    ds:globalunlock
cmp     [esp+58h+var_44], 0
jz      short loc_4414fe
mov     eax, [esp+58h+var_38]
push    ebp
push    0
push    eax
push    ebx
call    sub_4613a0
add     esp, 10h
jmp     loc_441620
lea     edi, [esp+58h+src]
xor     eax, eax
mov     ecx, 0ch
rep stosd
mov     edx, [esp+58h+arg_0]
mov     [esp+58h+var_c], esi
mov     eax, [ebp+4]
mov     [esp+58h+var_8], eax
mov     ax, word ptr [esp+58h+arg_8]
mov     ecx, [ebp+8]
mov     [esp+58h+var_26], ax
mov     [esp+58h+var_4], ecx
mov     ax, [esp+58h+arg_c]
mov     [esp+58h+var_2e], edx
and     ax, 0fff0h
mov     [esp+58h+var_2a], ebx
mov     [esp+58h+var_24], ax
mov     ax, [esp+58h+var_46]
add     ax, 24h
cmp     ds:word_4a6b38, 0
mov     [esp+58h+src], ax
jnz     short loc_44159a
cmp     ds:word_4a6b54, 0
jz      short loc_44159a
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globallock
mov     [esp+58h+var_44], eax
test    eax, eax
jz      short loc_44159a
push    offset word_4a6b46
push    eax
call    sub_4421c0
add     esp, 8
mov     eax, ds:dword_4a6b40
mov     ds:word_4a6b54, 0
push    eax
call    ds:globalunlock
lea     eax, [ebp+0ch]
lea     ecx, [esp+58h+src]
push    eax
push    ecx
call    sub_441700
mov     ecx, [esp+60h+var_38]
mov     [esp+60h+var_44], eax
add     esp, 8
push    ebp
push    0
push    ecx
push    ebx
call    sub_4613a0
add     esp, 10h
cmp     [esp+58h+var_44], 0
jnz     short loc_4415d1
mov     [esp+58h+var_40], 0
jmp     short loc_441620
cmp     ebx, esi
jnz     short loc_4415df
mov     eax, [esp+58h+var_44]
test    byte ptr [eax+2eh], 1
jz      short loc_4415f8
lea     eax, [esp+58h+var_44]
push    0
mov     ecx, [esp+5ch+var_44]
push    eax
push    offset loc_441630
push    ecx
call    sub_441eb0
add     esp, 10h
mov     eax, [esp+58h+var_44]
mov     ecx, [eax+28h]
test    ecx, ecx
jz      short loc_441614
mov     eax, [esp+58h+var_3c]
push    ecx
push    eax
push    esi
push    0
call    sub_43ea30
add     esp, 10h
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
mov     eax, [esp+58h+var_40]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
mov     eax, [esp+8]
push    esi
mov     esi, [esp+8]
push    edi
mov     dx, [esi]
mov     edi, [eax]
movsx   eax, dx
dec     eax
cmp     eax, 15h
ja      short def_441650
xor     ecx, ecx
mov     cl, ds:byte_4416e0[eax]
jmp     ds:jpt_441650[ecx*4]
mov     eax, [edi+6]
cmp     [edi+24h], eax
jz      short def_441650
mov     ecx, [esi+2]
push    ecx
push    eax
call    sub_443150
movsx   eax, ax
add     esp, 8
mov     [esi+2], eax
mov     eax, 1
pop     edi
pop     esi
retn
mov     eax, [esi+2]
test    eax, eax
jz      short loc_441695
mov     ecx, [edi+24h]
shr     ecx, 10h
movzx   eax, ax
movzx   ecx, cx
shl     ecx, 10h
or      ecx, eax
mov     [esi+2], ecx
cmp     dx, 10h
jnz     short def_441650
mov     eax, [esi+2]
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short def_441650
mov     eax, ds:dword_4a6770+2
movsx   ecx, word ptr [esi+2]
mov     edx, [eax]
or      byte ptr [edx+ecx*4+7], 1
mov     eax, 1
pop     edi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+src]
push    edi
mov     ax, [ebx]
push    ebp
add     ax, ds:word_4a6b46
xor     ebp, ebp
mov     [esp+14h+var_2], ax
mov     eax, dword ptr [esp+14h+var_2]
push    eax
call    sub_442130
add     esp, 4
test    eax, eax
jz      short loc_44178e
mov     eax, ds:dword_4a6b40
mov     ebp, ds:globallock
push    eax
call    ebp
movsx   ecx, ds:word_4a6b46
lea     ebp, [ecx+eax-30h]
mov     ecx, 0ch
mov     esi, ebp
push    30h
movsx   eax, word ptr [ebx]
push    ebx
push    ebp
lea     edi, [eax+ebp]
rep movsd
call    _memcpy
mov     ecx, [esp+20h+arg_4]
add     esp, 0ch
movsx   eax, word ptr [ebx]
sub     eax, 30h
lea     edx, [ebp+30h]
push    eax
push    ecx
push    edx
call    _memcpy
mov     cx, [esp+20h+var_2]
add     esp, 0ch
mov     ds:word_4a6b46, cx
mov     edx, [ebx+2ch]
or      ds:dword_4a6b4a, edx
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globallock
test    eax, eax
jz      short locret_4417df
lea     ecx, [esp+arg_4]
lea     edx, [esp+arg_0]
mov     ds:dword_4a6b4a, 0
push    ecx
push    edx
push    offset loc_4417e0
push    eax
call    sub_4413e0
add     esp, 10h
mov     ecx, ds:dword_4a6b40
push    ecx
call    ds:globalunlock
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
mov     edx, [eax]
cmp     [ecx+24h], edx
jnz     short loc_441809
mov     eax, [esp+arg_8]
mov     edx, [eax]
cmp     [ecx+2], edx
jnz     short loc_441809
push    ecx
call    sub_4418c0
add     esp, 4
mov     eax, 1
retn
cmp     dword ptr [ecx+2], 1
jle     short loc_441818
mov     eax, [ecx+2ch]
or      ds:dword_4a6b4a, eax
mov     eax, 1
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+2], 1
jle     short loc_441833
push    eax
call    sub_4418c0
add     esp, 4
mov     eax, 1
retn
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globallock
test    eax, eax
jz      short locret_44187f
lea     ecx, [esp+arg_4]
lea     edx, [esp+arg_0]
mov     ds:dword_4a6b4a, 0
push    ecx
push    edx
push    offset loc_441880
push    eax
call    sub_4413e0
add     esp, 10h
mov     ecx, ds:dword_4a6b40
push    ecx
call    ds:globalunlock
retn
mov     ecx, [esp+arg_0]
cmp     dword ptr [ecx+2], 1
jle     short loc_4418ba
mov     eax, [esp+arg_4]
mov     edx, [eax]
cmp     [ecx+24h], edx
jnz     short loc_4418b1
mov     eax, [esp+arg_8]
mov     ax, [eax]
cmp     [ecx+0ah], ax
jnz     short loc_4418b1
push    ecx
call    sub_4418c0
add     esp, 4
mov     eax, 1
retn
mov     eax, [ecx+2ch]
or      ds:dword_4a6b4a, eax
mov     eax, 1
retn
sub     esp, 18h
mov     ds:word_4a6b54, 1
push    ebx
push    esi
mov     ebx, [esp+20h+arg_0]
push    edi
test    byte ptr [ebx+0ch], 1
jz      short loc_4418fc
lea     esi, [ebx+0eh]
lea     edi, [esp+24h+var_18]
mov     ecx, 5
rep movsd
movsw
lea     eax, [esp+24h+var_18]
push    eax
call    sub_41b030
and     word ptr [ebx+0ch], 0fffeh
add     esp, 4
mov     dword ptr [ebx+2], 0
and     word ptr [ebx+0ch], 0fffdh
test    byte ptr [ebx+2eh], 1
jz      short loc_441921
push    0
push    0
push    offset sub_441930
push    ebx
call    sub_441eb0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 8
push    esi
mov     esi, [esp+0ch+arg_0]
cmp     word ptr [esi], 10h
jnz     short loc_4419a6
mov     eax, [esi+2]
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_4419a6
mov     dx, [esi+4]
lea     ecx, [esp+0ch+var_8]
mov     eax, [esi]
mov     [ecx], eax
mov     [ecx+4], dx
mov     ecx, ds:dword_4a6b40
push    ecx
call    ds:globallock
test    eax, eax
jz      short loc_4419a6
lea     ecx, [esp+0ch+var_8]
push    0
push    ecx
push    offset loc_4419b0
push    eax
call    sub_4413e0
add     esp, 10h
test    eax, eax
jnz     short loc_44199a
mov     eax, ds:dword_4a6770+2
movsx   ecx, word ptr [esi+2]
mov     edx, [eax]
and     word ptr [edx+ecx*4+6], 0feffh
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
mov     eax, 1
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+2], 1
jle     short loc_4419cf
mov     ecx, [esp+arg_4]
push    ecx
push    eax
call    sub_441f00
add     esp, 8
test    eax, eax
jz      short loc_4419cf
xor     eax, eax
retn
mov     eax, 1
retn
push    esi
mov     eax, ds:dword_4a6b40
push    edi
xor     esi, esi
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_441a32
mov     ecx, [esp+8+arg_4]
mov     edx, [esp+8+arg_0]
push    ecx
push    edx
push    eax
call    sub_441e50
add     esp, 0ch
test    eax, eax
jz      short loc_441a26
test    byte ptr [eax+0ch], 1
jz      short loc_441a26
lea     esi, [eax+0eh]
mov     edi, [esp+8+arg_8]
mov     ecx, 5
rep movsd
movsw
mov     esi, 1
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
test    esi, esi
jnz     short loc_441a43
mov     eax, [esp+8+arg_8]
push    eax
call    sub_41afc0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
sub     esp, 18h
mov     eax, ds:dword_4a6b40
push    ebx
push    esi
push    edi
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_441ac2
mov     ecx, [esp+24h+arg_4]
mov     edx, [esp+24h+arg_0]
push    ecx
push    edx
push    eax
call    sub_441e50
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jz      short loc_441ab6
test    byte ptr [ebx+0ch], 1
jz      short loc_441aa2
lea     esi, [ebx+0eh]
lea     edi, [esp+24h+var_18]
mov     ecx, 5
rep movsd
movsw
lea     eax, [esp+24h+var_18]
push    eax
call    sub_41b030
add     esp, 4
lea     edi, [ebx+0eh]
mov     esi, [esp+24h+arg_8]
mov     ecx, 5
rep movsd
movsw
or      byte ptr [ebx+0ch], 1
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    esi
mov     eax, ds:dword_4a6b40
xor     si, si
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_441b0b
mov     ecx, [esp+4+arg_4]
mov     edx, [esp+4+arg_0]
push    ecx
push    edx
push    eax
call    sub_441e50
add     esp, 0ch
test    eax, eax
jz      short loc_441aff
mov     si, [eax+0ch]
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
mov     ax, si
pop     esi
retn
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globallock
test    eax, eax
jz      short locret_441b5a
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
push    ecx
push    edx
push    eax
call    sub_441e50
add     esp, 0ch
test    eax, eax
jz      short loc_441b4e
mov     dx, [eax+0ch]
mov     cx, [esp+arg_8]
xor     dx, cx
and     dx, 0fh
xor     dx, cx
mov     [eax+0ch], dx
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
retn
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globallock
test    eax, eax
jz      short locret_441ba0
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
push    ecx
push    edx
push    eax
call    sub_441e50
add     esp, 0ch
test    eax, eax
jz      short loc_441b94
or      byte ptr [eax+0ch], 2
mov     ds:word_4a6b50, 1
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
retn
mov     cx, [esp+arg_0]
mov     eax, 1
shl     eax, cl
test    ds:dword_4a6b4a, eax
jz      short locret_441bd2
mov     eax, [esp+arg_4]
push    eax
push    ecx
call    sub_441be0
add     esp, 8
retn
sub     esp, 8
call    sub_442180
mov     ax, [esp+8+arg_0]
mov     ecx, [esp+8+arg_4]
mov     word ptr [esp+8+var_8], ax
mov     edx, ds:dword_4a6b40
mov     [esp+8+var_8+2], ecx
push    edx
call    ds:globallock
test    eax, eax
jz      short loc_441c2c
lea     ecx, [esp+8+var_8]
push    0
push    ecx
push    offset loc_441c30
push    eax
call    sub_4413e0
add     esp, 10h
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
add     esp, 8
retn
push    esi
mov     esi, dword ptr [esp+4+arg_0]
cmp     dword ptr [esi+2], 1
jle     short loc_441c56
mov     eax, [esp+4+arg_4]
push    eax
push    esi
call    sub_441f00
add     esp, 8
test    eax, eax
jz      short loc_441c56
push    esi
call    sub_441f90
add     esp, 4
mov     eax, 1
pop     esi
retn
mov     cx, [esp+arg_0]
sub     esp, 8
mov     eax, 1
shl     eax, cl
test    ds:dword_4a6b4a, eax
jz      short loc_441cca
cmp     cx, 1
jnz     short loc_441c8b
mov     eax, [esp+8+arg_4]
push    eax
call    sub_4434c0
add     esp, 0ch
retn
mov     [esp+8+var_8], cx
mov     eax, [esp+8+arg_4]
mov     ecx, ds:dword_4a6b40
mov     [esp+8+var_6], eax
push    ecx
call    ds:globallock
test    eax, eax
jz      short loc_441cca
lea     ecx, [esp+8+var_8]
push    0
push    ecx
push    offset loc_441cd0
push    eax
call    sub_4413e0
add     esp, 10h
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
add     esp, 8
retn
push    esi
mov     esi, [esp+8]
cmp     dword ptr [esi+2], 1
jle     short loc_441cfa
mov     eax, [esp+0ch]
push    eax
push    esi
call    sub_441f00
add     esp, 8
test    eax, eax
jz      short loc_441cfa
or      byte ptr [esi+0ch], 2
mov     ds:word_4a6b50, 1
mov     eax, 1
pop     esi
retn
mov     ax, [esp+arg_0]
mov     ds:word_4a6b50, ax
retn
sub     esp, 4
cmp     ds:word_4a6b50, 0
push    esi
push    edi
jz      short loc_441da8
cmp     ds:word_4a6b38, 0
jnz     short loc_441d3e
call    sub_442180
mov     ds:word_4a6b50, 0
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      short loc_441da8
call    sub_443480
test    eax, eax
jz      short loc_441d8a
lea     eax, [esp+0ch+var_2]
push    0
mov     [esp+10h+var_2], 0
push    eax
push    offset sub_441e10
push    edi
call    sub_4413e0
add     esp, 10h
call    sub_4435b0
test    byte ptr [esp+0ch+var_2], 2
jz      short loc_441d9c
push    0
push    0
push    offset loc_441db0
push    edi
call    sub_4413e0
add     esp, 10h
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
pop     edi
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+8]
cmp     dword ptr [esi+2], 1
jle     short loc_441dd0
test    byte ptr [esi+0ch], 2
jz      short loc_441dd0
push    esi
call    sub_441f90
and     word ptr [esi+0ch], 0fffdh
add     esp, 4
mov     eax, 1
pop     esi
retn
mov     eax, [esp+arg_0]
cmp     word ptr [eax], 1
jnz     short loc_441dfd
mov     eax, [eax+2]
push    eax
call    sub_443560
add     esp, 4
test    eax, eax
jz      short loc_441dfd
xor     eax, eax
retn
mov     eax, 1
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+2], 1
jle     short loc_441e46
test    byte ptr [esi+0ch], 2
jnz     short loc_441e3b
push    0
push    0
push    offset sub_441de0
push    esi
call    sub_441eb0
add     esp, 10h
test    eax, eax
jz      short loc_441e3b
or      byte ptr [esi+0ch], 2
mov     cx, [esi+0ch]
mov     eax, [esp+4+arg_4]
or      [eax], cx
mov     eax, 1
pop     esi
retn
lea     eax, [esp+arg_8]
lea     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
push    eax
push    ecx
push    offset loc_441e70
push    edx
call    sub_4413e0
add     esp, 10h
retn
mov     ecx, [esp+4]
cmp     dword ptr [ecx+2], 1
jle     short loc_441e9b
mov     eax, [esp+8]
mov     edx, [eax]
cmp     [ecx+24h], edx
jnz     short loc_441e95
mov     eax, [esp+0ch]
mov     ax, [eax]
cmp     [ecx+0ah], ax
jnz     short loc_441e95
xor     eax, eax
retn
mov     eax, 1
retn
mov     eax, 1
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    ebp
lea     ebx, [eax+30h]
mov     bp, [eax]
sub     bp, 30h
test    bp, bp
jle     short loc_441ee9
mov     esi, [esp+10h+arg_8]
mov     edi, [esp+10h+arg_c]
push    edi
push    esi
push    ebx
call    [esp+1ch+arg_4]
add     esp, 0ch
test    eax, eax
jz      short loc_441ef0
sub     bp, 6
add     ebx, 6
test    bp, bp
jg      short loc_441ecf
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
mov     edx, 1
mov     eax, [esp+4+arg_0]
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+arg_4]
mov     cx, [edi]
shl     edx, cl
test    [eax+2ch], edx
jz      short loc_441f6a
mov     bp, [eax]
lea     ebx, [eax+30h]
sub     bp, 30h
test    bp, bp
jle     short loc_441f6a
cmp     [ebx], cx
jnz     short loc_441f5e
mov     esi, [edi+2]
mov     edx, [ebx+2]
cmp     esi, edx
jz      short loc_441f7b
test    esi, esi
jz      short loc_441f7b
test    edx, edx
jz      short loc_441f7b
movsx   eax, cx
cmp     eax, 8
jl      short loc_441f5e
cmp     eax, 9
jg      short loc_441f5e
cmp     esi, 10011h
jnz     short loc_441f5e
cmp     edx, 1005fh
jz      short loc_441f71
sub     bp, 6
add     ebx, 6
test    bp, bp
jg      short loc_441f2a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 48h
push    ebx
push    esi
mov     ebx, [esp+50h+arg_0]
push    edi
push    ebp
test    byte ptr [ebx+0ch], 44h
jnz     loc_4420d0
mov     ebp, [ebx+2]
cmp     ebp, 1
jle     loc_4420d0
cmp     ebp, 8
jnb     loc_4420d0
mov     eax, [ebx+24h]
push    eax
call    sub_483d30
mov     cx, [ebx+0ah]
lea     eax, [esp+5ch+var_48]
add     esp, 4
mov     edx, [ebx+6]
push    eax
push    ecx
push    edx
call    sub_42ec80
add     esp, 0ch
push    0
call    sub_483d30
add     esp, 4
test    byte ptr [ebx+0ch], 80h
jz      short loc_441ff9
lea     eax, [esp+58h+var_48]
push    eax
call    sub_41b3b0
add     esp, 4
test    byte ptr [ebx+0ch], 1
jz      short loc_44203a
lea     esi, [ebx+0eh]
lea     edi, [esp+58h+var_30]
mov     ecx, 5
rep movsd
movsw
lea     eax, [esp+58h+var_30]
lea     ecx, [esp+58h+var_48]
push    eax
push    ecx
call    sub_41ad80
add     esp, 8
test    eax, eax
jz      short loc_44203a
lea     eax, [esp+58h+var_48]
push    eax
call    sub_41b030
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
lea     eax, [esp+58h+var_48]
lea     ecx, [esp+58h+var_18]
push    eax
push    ecx
call    sub_41ae70
mov     ax, [ebx+0ah]
lea     edx, [esp+60h+var_18]
add     esp, 8
mov     ecx, funcs_442065[ebp*4]
or      byte ptr [ebx+0ch], 4
push    edx
mov     ebp, [ebx+24h]
push    eax
push    ebp
call    ecx
lea     ecx, [esp+64h+var_48]
add     esp, 0ch
and     word ptr [ebx+0ch], 0fffbh
push    ecx
call    sub_41b030
lea     esi, [esp+5ch+var_18]
lea     edi, [esp+5ch+var_48]
add     esp, 4
mov     ecx, 5
rep movsd
movsw
cmp     dword ptr [ebx+2], 0
jz      short loc_4420c3
test    byte ptr [ebx+0ch], 1
jz      short loc_4420a7
lea     eax, [esp+58h+var_30]
push    eax
call    sub_41b030
add     esp, 4
lea     esi, [esp+58h+var_48]
lea     edi, [ebx+0eh]
mov     ecx, 5
pop     ebp
rep movsd
movsw
or      byte ptr [ebx+0ch], 1
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
lea     eax, [esp+58h+var_48]
push    eax
call    sub_41b030
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
push    esi
mov     eax, ds:dword_4a6b40
push    edi
xor     esi, esi
mov     di, [esp+8+arg_4]
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_442126
mov     ecx, [esp+8+arg_0]
push    edi
push    ecx
push    eax
call    sub_441e50
add     esp, 0ch
test    eax, eax
jz      short loc_44211a
push    eax
mov     esi, 1
call    sub_441f90
add     esp, 4
mov     eax, ds:dword_4a6b40
push    eax
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
mov     si, [esp+4+arg_0]
cmp     si, ds:word_4a6b48
jg      short loc_442146
mov     eax, 1
pop     esi
retn
add     si, 1e0h
push    2
movsx   eax, si
push    eax
mov     ecx, ds:dword_4a6b40
push    ecx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jz      short loc_442172
mov     ds:word_4a6b48, si
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
movsx   eax, ds:word_4a6b48
movsx   ecx, ds:word_4a6b46
sub     eax, ecx
cmp     eax, 0f0h
jnb     short loc_4421ab
mov     ax, ds:word_4a6b46
add     ax, 0f0h
push    eax
call    sub_442130
add     esp, 4
retn
mov     eax, 1
retn
push    ebx
push    esi
mov     eax, [esp+8+arg_0]
push    edi
push    ebp
push    0
push    1
push    offset sub_442260
push    eax
call    sub_4413e0
add     esp, 10h
mov     ebx, eax
test    ebx, ebx
jz      short loc_44224c
mov     edi, ebx
push    0
push    2
push    offset sub_442260
push    ebx
call    sub_4413e0
add     esp, 10h
mov     esi, eax
push    0
push    1
push    offset sub_442260
push    esi
call    sub_4413e0
add     esp, 10h
mov     ebx, eax
test    ebx, ebx
jz      short loc_442214
mov     ecx, ebx
sub     ecx, esi
jmp     short loc_44222d
push    0
push    3
push    offset sub_442260
push    esi
call    sub_4413e0
add     esp, 10h
mov     ecx, eax
sub     ecx, esi
add     cx, [eax]
movsx   ebp, cx
push    ebp
push    esi
push    edi
call    _memcpy
add     esp, 0ch
add     edi, ebp
test    ebx, ebx
jnz     short loc_4421e2
sub     edi, [esp+10h+arg_0]
mov     eax, [esp+10h+arg_4]
mov     [eax], di
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
cmp     ecx, 1
mov     eax, [eax+2]
jz      short loc_442280
cmp     ecx, 2
jz      short loc_442287
cmp     ecx, 3
jz      short loc_44228f
mov     eax, 1
retn
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
dec     eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     edx, [esp+arg_0]
push    esi
push    edi
mov     eax, [edx]
dec     eax
cmp     eax, 4
ja      def_4422b2
jmp     ds:jpt_4422b2[eax*4]
mov     word ptr [edx+8], 0ch
call    sub_442480
pop     edi
pop     esi
retn
mov     edi, offset dword_4a6b58
xor     eax, eax
mov     ecx, 11h
rep stosd
stosw
cmp     word ptr [edx+8], 0ch
jz      short loc_4422e6
mov     eax, 1389h
pop     edi
pop     esi
retn
mov     ecx, [edx+0ah]
mov     edx, offset dword_4a6b58
mov     eax, [ecx]
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     ecx, [ecx+8]
mov     [edx+8], ecx
mov     ax, word ptr ds:dword_4a6b58
push    eax
call    sub_43cd60
add     esp, 4
mov     ds:dword_4a6b64, eax
test    eax, eax
jnz     short loc_44231e
mov     eax, 8
pop     edi
pop     esi
retn
xor     ecx, ecx
xor     eax, eax
mov     cx, word_4ad9ac
shl     ecx, 10h
mov     ax, word ptr ds:dword_4a6b58
or      ecx, eax
push    ecx
call    sub_470610
add     esp, 4
mov     ds:dword_4a6b68, eax
push    0
push    8
push    offset dword_4a6b6c
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_44235f
mov     eax, 8
pop     edi
pop     esi
retn
push    0
push    offset sub_4426e0
call    sub_443050
add     esp, 8
mov     ecx, 16h
mov     eax, ds:dword_4a6b68
sub     edx, edx
div     ecx
mov     ds:dword_4a6b8a, 0
push    eax
push    0
call    sub_443640
add     esp, 8
test    eax, eax
jnz     short loc_44239d
mov     eax, 8
pop     edi
pop     esi
retn
push    0c6h
push    1
call    sub_443640
add     esp, 8
test    eax, eax
jnz     def_4422b2
mov     eax, 8
pop     edi
pop     esi
retn
mov     edx, [edx+0ah]
mov     eax, ds:dword_4a6b58
mov     ecx, offset dword_4a6b58
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     ecx, [ecx+8]
mov     [edx+8], ecx
mov     edx, ds:dword_4a6b64
mov     cx, word ptr ds:dword_4a6b58
mov     eax, ds:dword_4a6b68
push    eax
push    edx
push    ecx
call    sub_43cda0
add     esp, 0ch
pop     edi
pop     esi
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, word ptr ds:dword_4a6b58
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
mov     edi, offset dword_4a6b6c
mov     ds:dword_4a6b64, 0
mov     ds:dword_4a6b68, 0
push    offset dword_4a6b6c
call    sub_48e7d0
add     esp, 4
xor     eax, eax
mov     ecx, 7
rep stosd
stosw
call    sub_443680
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_4425e0
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
mov     ecx, dword_4ae1e0
movsx   eax, ds:word_4a8518
shl     eax, 6
xor     esi, esi
mov     edx, [eax+ecx+10h]
mov     eax, [edx]
mov     si, [eax+3ch]
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
or      esi, eax
push    esi
call    sub_470880
add     esp, 4
mov     ds:dword_4a6b64, eax
cmp     ds:dword_4a9a0c, 0
jz      short loc_4424c8
mov     eax, ds:dword_4a9a0c
pop     esi
retn
cmp     ds:dword_4a6b64, 0
jnz     short loc_4424f9
push    42h
push    0
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a6b64, eax
test    eax, eax
jnz     short loc_4424ed
mov     eax, 8
pop     esi
retn
mov     ds:dword_4a6b68, 0
jmp     short loc_442507
push    esi
call    sub_470610
add     esp, 4
mov     ds:dword_4a6b68, eax
mov     ecx, 16h
mov     eax, ds:dword_4a6b68
mov     ds:dword_4a6b8a, 0
sub     edx, edx
div     ecx
push    eax
push    0
call    sub_443640
add     esp, 8
test    eax, eax
jnz     short loc_442535
mov     eax, 8
pop     esi
retn
push    0c6h
push    1
call    sub_443640
add     esp, 8
test    eax, eax
jnz     short loc_44254f
mov     eax, 8
pop     esi
retn
call    sub_43cd40
mov     word ptr ds:dword_4a6b58, ax
mov     ecx, ds:dword_4a6b64
mov     dx, word ptr ds:dword_4a6b58
mov     eax, ds:dword_4a6b68
push    eax
push    ecx
push    edx
call    sub_43cda0
add     esp, 0ch
push    0
push    8
push    offset dword_4a6b6c
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_442593
mov     eax, 8
pop     esi
retn
mov     ds:word_4a6b62, 3001h
push    offset word_4a6b5c
call    sub_442750
add     esp, 4
test    eax, eax
jnz     short loc_4425dc
push    (offset dword_4a6b58+2)
call    sub_442750
add     esp, 4
test    eax, eax
jnz     short loc_4425dc
push    offset word_4a6b5e
call    sub_442750
add     esp, 4
test    eax, eax
jnz     short loc_4425dc
push    offset word_4a6b60
call    sub_442750
add     esp, 4
pop     esi
retn
push    edi
push    0
push    offset sub_442710
call    sub_443050
add     esp, 8
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, word ptr ds:dword_4a6b58
push    0
shl     eax, 10h
push    0
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6b5c
push    0
shl     eax, 10h
push    0
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, word ptr ds:dword_4a6b58+2
push    0
shl     eax, 10h
push    0
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     ecx, ecx
mov     cx, word_4ad9ac
xor     eax, eax
mov     ax, ds:word_4a6b5e
push    0
shl     ecx, 10h
push    0
or      ecx, eax
push    ecx
call    sub_4709c0
add     esp, 0ch
push    0
push    offset sub_442710
call    sub_443110
add     esp, 8
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6b60
push    0
shl     eax, 10h
push    0
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
mov     edi, offset dword_4a6b58
push    offset dword_4a6b6c
call    sub_48e7d0
add     esp, 4
call    sub_443680
xor     eax, eax
mov     ecx, 11h
rep stosd
stosw
pop     edi
retn
mov     eax, [esp+arg_4]
cmp     word ptr [eax], 0
jnz     short loc_4426fc
cmp     word ptr [eax+8], 2
jnz     short loc_4426fc
mov     cx, ds:word_4a8518
mov     [eax+10h], cx
mov     eax, 1
retn
mov     eax, [esp+arg_4]
cmp     word ptr [eax], 0
jnz     short loc_442741
cmp     word ptr [eax+8], 3
jnz     short loc_442741
push    0
xor     ecx, ecx
mov     cx, [eax+0eh]
push    0
xor     eax, eax
mov     ax, word_4ad9ac
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_4709c0
add     esp, 0ch
mov     eax, 1
retn
push    ebx
push    esi
push    edi
call    sub_45c800
mov     edi, eax
test    edi, edi
jnz     short loc_442767
mov     eax, 8
pop     edi
pop     esi
pop     ebx
retn
call    sub_43cd40
mov     esi, [esp+0ch+arg_0]
mov     [esi], ax
mov     eax, [edi]
push    eax
call    sub_45c830
add     esp, 4
push    eax
push    edi
mov     ax, [esi]
push    eax
call    sub_43cda0
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jz      short loc_4427a1
push    edi
call    sub_45c820
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, [esi]
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
push    eax
push    esi
call    sub_443150
mov     di, ax
add     esp, 8
push    edi
call    sub_489a50
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_442812
cmp     eax, 2
jz      short loc_442866
mov     ebx, [esp+0ch+arg_c]
cmp     eax, 3
push    ebx
jz      short loc_44287c
call    sub_41afc0
add     esp, 4
jmp     short loc_442885
dec     di
movsx   eax, di
lea     edx, [eax+eax*4]
lea     eax, [eax+edx*2]
lea     ecx, ds:0[eax*2]
cmp     ds:dword_4a6b68, ecx
jle     short loc_442857
mov     eax, ds:dword_4a6b64
mov     ebx, [esp+0ch+arg_c]
mov     edi, ebx
mov     esi, [eax]
add     esi, ecx
mov     ecx, 5
rep movsd
movsw
cmp     word ptr [ebx], 0
jnz     short loc_442885
cmp     dword ptr [ebx+0ah], 0
jnz     short loc_442885
mov     word ptr [ebx], 1
jmp     short loc_442885
mov     ebx, [esp+0ch+arg_c]
push    ebx
call    sub_41afc0
add     esp, 4
jmp     short loc_442885
mov     ebx, [esp+0ch+arg_c]
mov     eax, [esp+0ch+arg_8]
push    ebx
push    eax
push    edi
push    esi
call    sub_4828c0
add     esp, 10h
jmp     short loc_442885
push    edi
call    sub_442a60
add     esp, 8
push    ebx
call    sub_41afe0
add     esp, 4
cmp     eax, 1
sbb     eax, eax
pop     edi
neg     eax
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
push    eax
push    edi
call    sub_443150
mov     bx, ax
add     esp, 8
push    ebx
call    sub_489a50
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_4428d5
cmp     eax, 2
jz      short loc_44291b
cmp     eax, 3
jz      short loc_442931
jmp     short loc_44293f
mov     eax, ds:dword_4a6b64
push    eax
call    ds:globallock
movsx   ecx, bx
mov     esi, [esp+0ch+arg_c]
lea     edi, [ecx+ecx*4]
push    esi
lea     ecx, [ecx+edi*2]
lea     edi, [eax+ecx*2-16h]
call    sub_442ef0
add     esp, 4
push    edi
call    sub_442eb0
add     esp, 4
mov     ecx, 5
rep movsd
movsw
mov     eax, ds:dword_4a6b64
push    eax
call    ds:globalunlock
jmp     short loc_44293f
mov     esi, [esp+0ch+arg_c]
mov     eax, [esp+0ch+arg_8]
push    esi
push    eax
push    ebx
push    edi
call    sub_484190
add     esp, 10h
jmp     short loc_44293f
mov     esi, [esp+0ch+arg_c]
push    esi
push    ebx
call    sub_442aa0
add     esp, 8
movsx   eax, bx
push    eax
push    1
call    sub_441c60
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 18h
push    esi
mov     esi, [esp+1ch+lpstring]
test    esi, esi
jnz     short loc_442971
mov     esi, offset windowname
lea     eax, [esp+1ch+var_18]
push    eax
call    sub_41afc0
mov     [esp+20h+var_18], 0
mov     [esp+20h+var_10], 4
add     esp, 4
push    esi
call    ds:lstrlena
inc     eax
lea     ecx, [esp+1ch+var_18]
mov     edx, [esp+1ch+arg_8]
push    ecx
mov     ecx, [esp+20h+arg_0]
push    edx
mov     [esp+24h+var_e], eax
mov     [esp+24h+var_a], esi
mov     ax, [esp+24h+arg_4]
push    eax
push    ecx
call    sub_4428a0
add     esp, 10h
pop     esi
add     esp, 18h
retn
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    esi
push    eax
call    sub_41afc0
mov     esi, [esp+20h+arg_c]
add     esp, 4
mov     [esp+1ch+var_18], 0
mov     [esp+1ch+var_10], 1
push    esi
call    sub_489a90
lea     ecx, [esp+20h+var_18]
mov     edx, [esp+20h+arg_8]
mov     [esp+20h+var_a], esi
add     esp, 4
inc     eax
push    ecx
mov     ecx, [esp+20h+arg_0]
push    edx
mov     [esp+24h+var_e], eax
mov     ax, [esp+24h+arg_4]
push    eax
push    ecx
call    sub_4428a0
add     esp, 10h
pop     esi
add     esp, 18h
retn
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    eax
call    sub_41afc0
mov     eax, [esp+1ch+arg_c]
lea     ecx, [esp+1ch+var_18]
mov     edx, [esp+1ch+arg_8]
mov     [esp+1ch+var_10], eax
mov     ax, [esp+1ch+arg_4]
add     esp, 4
mov     [esp+18h+var_18], 1
push    ecx
push    edx
mov     ecx, [esp+20h+arg_0]
push    eax
push    ecx
call    sub_4428a0
add     esp, 28h
retn
mov     eax, [esp+arg_0]
push    esi
mov     cx, word ptr ds:dword_4a6b58+2
push    edi
mov     edi, [esp+8+arg_4]
push    16h
push    edi
push    eax
push    ecx
call    sub_43cde0
add     esp, 10h
mov     esi, eax
test    esi, esi
jnz     short loc_442a8d
push    edi
call    sub_41afc0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
sub     esp, 18h
push    esi
push    edi
mov     esi, [esp+20h+arg_4]
push    esi
call    sub_442ef0
mov     di, [esp+24h+arg_0]
lea     eax, [esp+24h+var_18]
mov     cx, word ptr ds:dword_4a6b58+2
add     esp, 4
push    16h
push    eax
push    edi
push    ecx
call    sub_43cde0
add     esp, 10h
test    eax, eax
jz      short loc_442ae0
lea     eax, [esp+20h+var_18]
push    eax
call    sub_442eb0
add     esp, 4
mov     ax, word ptr ds:dword_4a6b58+2
push    16h
push    esi
push    edi
push    eax
call    sub_43ce30
add     esp, 10h
pop     edi
pop     esi
add     esp, 18h
retn
push    esi
push    edi
mov     di, ds:word_4a6b62
mov     esi, [esp+8+lpstring]
inc     ds:word_4a6b62
push    esi
call    ds:lstrlena
inc     ax
mov     cx, ds:word_4a6b5c
push    eax
push    esi
push    edi
push    ecx
call    sub_43ce30
mov     ax, di
add     esp, 10h
pop     edi
pop     esi
retn
sub     esp, 18h
mov     cx, word ptr ds:dword_4a6b58+2
push    esi
mov     si, [esp+1ch+arg_0]
push    16h
lea     eax, [esp+20h+var_18]
push    eax
push    esi
push    ecx
call    sub_43cde0
add     esp, 10h
test    eax, eax
jz      short loc_442b92
lea     eax, [esp+1ch+var_18]
push    eax
call    sub_442eb0
add     esp, 4
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, word ptr ds:dword_4a6b58+2
push    esi
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_445aa0
add     esp, 8
push    esi
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6b5c
or      eax, ecx
push    eax
call    sub_445aa0
add     esp, 8
pop     esi
add     esp, 18h
retn
mov     cx, ds:word_4a6b5c
mov     eax, [esp+arg_0]
push    eax
push    offset sub_442be0
push    ecx
call    sub_43ceb0
add     esp, 0ch
retn
mov     eax, [esp+lpstring2]
mov     ecx, [esp+lpstring1]
push    eax
push    ecx
call    ds:lstrcmpia
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
sub     esp, 18h
cmp     word_4ad3d8, 0
push    esi
push    edi
jle     short loc_442c3e
mov     word_4ad3dc, 0ch
lea     eax, [esp+20h+var_18]
push    eax
call    sub_41afc0
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
mov     esi, [esp+20h+arg_8]
mov     edi, [esi+8]
cmp     edi, 9c4h
jbe     short loc_442c73
lea     eax, [esp+20h+var_18]
push    eax
call    sub_41afc0
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
inc     di
push    16h
mov     cx, ds:word_4a6b60
lea     eax, [esp+24h+var_18]
push    eax
add     esi, 16h
push    edi
push    ecx
call    sub_43cde0
add     esp, 10h
push    esi
call    sub_442ef0
add     esp, 4
test    eax, eax
jz      short loc_442ccc
mov     word_4ad3dc, 0bh
lea     eax, [esp+20h+var_18]
push    eax
call    sub_41afc0
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
lea     eax, [esp+20h+var_18]
push    eax
call    sub_442eb0
mov     ax, ds:word_4a6b60
add     esp, 4
push    16h
push    esi
push    edi
push    eax
call    sub_43ce30
mov     eax, [esp+30h+arg_0]
add     esp, 10h
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
mov     eax, [esp+arg_8]
sub     esp, 18h
push    esi
mov     eax, [eax+8]
push    edi
cmp     eax, 9c4h
jbe     short loc_442d49
lea     eax, [esp+20h+var_18]
push    eax
call    sub_41afc0
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
inc     ax
push    16h
mov     dx, ds:word_4a6b60
lea     ecx, [esp+24h+var_18]
push    ecx
push    eax
push    edx
call    sub_43cde0
lea     esi, [esp+30h+var_18]
mov     eax, [esp+30h+arg_0]
add     esp, 10h
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
mov     eax, [esp+arg_0]
movsx   ecx, word ptr [eax+8]
cmp     ecx, 4
ja      short def_442d8d
jmp     ds:jpt_442d8d[ecx*4]
add     eax, 0eh
retn
mov     eax, [eax+0eh]
push    eax
call    ds:globallock
retn
xor     ecx, ecx
xor     edx, edx
mov     cx, [eax+10h]
shl     ecx, 10h
mov     dx, [eax+0eh]
or      ecx, edx
push    ecx
call    sub_470640
add     esp, 4
test    eax, eax
jz      short def_442d8d
push    eax
call    ds:globallock
retn
mov     ax, [eax+0eh]
push    eax
call    sub_43cd60
add     esp, 4
test    eax, eax
jz      short def_442d8d
push    eax
call    ds:globallock
retn
mov     eax, [eax+0eh]
retn
mov     eax, offset windowname
retn
push    esi
mov     esi, [esp+4+arg_0]
movsx   eax, word ptr [esi+8]
cmp     eax, 1
jz      short loc_442e1a
cmp     eax, 2
jz      short loc_442e26
cmp     eax, 3
jz      short loc_442e69
pop     esi
retn
mov     eax, [esi+0eh]
push    eax
call    ds:globalunlock
pop     esi
retn
xor     eax, eax
xor     ecx, ecx
mov     ax, [esi+10h]
shl     eax, 10h
mov     cx, [esi+0eh]
or      eax, ecx
push    eax
call    sub_471110
add     esp, 4
test    eax, eax
jz      short loc_442eae
push    eax
call    ds:globalunlock
push    0
xor     eax, eax
mov     ax, [esi+10h]
xor     ecx, ecx
shl     eax, 10h
mov     cx, [esi+0eh]
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
pop     esi
retn
xor     eax, eax
xor     ecx, ecx
mov     ax, word_4ad9ac
shl     eax, 10h
mov     cx, [esi+0eh]
or      eax, ecx
push    eax
call    sub_471110
add     esp, 4
test    eax, eax
jz      short loc_442eae
push    eax
call    ds:globalunlock
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, [esi+0eh]
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
pop     esi
retn
mov     eax, [esp+arg_0]
cmp     word ptr [eax], 0
jnz     short locret_442ee1
cmp     word ptr [eax+8], 3
jnz     short locret_442ee1
push    0
xor     ecx, ecx
mov     cx, [eax+0eh]
push    0
xor     eax, eax
mov     ax, word_4ad9ac
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_4709c0
add     esp, 0ch
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
cmp     word ptr [esi], 0
push    ebp
jz      short loc_442f05
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, word ptr [esi+8]
mov     ebx, [esi+0ah]
cmp     eax, 1
jz      short loc_442f22
cmp     eax, 3
jz      short loc_442f54
cmp     eax, 4
jz      short loc_442f83
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
lea     ecx, [esi+0eh]
cmp     ebx, 8
mov     ebp, [ecx]
jg      loc_442fc2
push    ebx
mov     eax, [ebp+0]
push    eax
push    ecx
call    _memcpy
add     esp, 0ch
mov     word ptr [esi+8], 0
push    ebp
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_442d80
add     esp, 4
mov     ecx, [esi+0ah]
push    ecx
push    eax
call    sub_45b910
add     esp, 8
mov     ebp, eax
push    esi
call    sub_442e00
add     esp, 4
test    ebp, ebp
jnz     short loc_442fc2
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     ebx, 8
jg      short loc_442fa5
lea     ecx, [esi+0eh]
push    ebx
mov     eax, [ecx]
push    eax
push    ecx
call    _memcpy
add     esp, 0ch
xor     eax, eax
mov     word ptr [esi+8], 0
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
mov     eax, [esi+0eh]
push    eax
call    sub_45b910
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jnz     short loc_442fc2
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
call    sub_43cd40
mov     di, ax
test    di, di
jnz     short loc_442feb
push    esi
call    sub_41b030
add     esp, 4
push    esi
call    sub_41afc0
add     esp, 4
mov     eax, 138bh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    ebp
push    edi
call    sub_43cda0
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jz      short loc_443015
push    esi
call    sub_41b030
add     esp, 4
push    esi
call    sub_41afc0
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    0
xor     eax, eax
movzx   ecx, di
mov     ax, word_4ad9ac
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_470920
mov     [esi+0eh], di
add     esp, 8
mov     word ptr [esi+8], 3
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 8
mov     eax, ds:dword_4a6b64
push    ebx
push    esi
push    edi
push    ebp
mov     di, 1
push    eax
call    ds:globallock
mov     ebx, eax
mov     ebp, ds:dword_4a6b68
mov     esi, [esp+18h+arg_4]
test    ebp, ebp
jle     short loc_4430aa
push    esi
push    ebx
push    edi
call    [esp+24h+arg_0]
add     esp, 0ch
test    eax, eax
jz      short loc_443093
inc     di
add     ebx, 16h
sub     ebp, 16h
test    ebp, ebp
jg      short loc_443077
jmp     short loc_4430aa
mov     eax, ds:dword_4a6b64
push    eax
call    ds:globalunlock
mov     ax, di
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ds:dword_4a6b64
push    eax
call    ds:globalunlock
mov     ax, word ptr ds:dword_4a6b58+2
mov     ecx, [esp+18h+arg_0]
mov     [esp+18h+var_8], esi
mov     [esp+18h+var_4], ecx
lea     esi, [esp+18h+var_8]
push    esi
push    offset sub_4430f0
push    eax
call    sub_43ceb0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ecx, [esp+arg_c]
mov     edx, [esp+arg_4]
mov     eax, [ecx]
push    eax
push    edx
mov     ax, [esp+8+arg_0]
push    eax
call    dword ptr [ecx+4]
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
mov     dx, ds:word_4a6b60
sub     esp, 8
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], ecx
lea     eax, [esp+8+var_8]
push    eax
push    offset sub_4430f0
push    edx
call    sub_43ceb0
add     esp, 14h
retn
push    209bh
push    1
call    sub_441c60
add     esp, 8
retn
sub     esp, 1bch
push    ebx
push    esi
push    edi
mov     di, [esp+1c8h+arg_4]
push    edi
call    sub_489a50
add     esp, 4
cmp     ax, 1
jnz     loc_443279
mov     esi, [esp+1c8h+arg_0]
mov     eax, esi
shr     eax, 10h
cmp     ds:word_4a8518, ax
jz      loc_443279
mov     [esp+1c8h+var_1bc], ax
push    40000h
mov     [esp+1cch+var_1ba], di
lea     eax, [esp+1cch+var_1bc]
push    eax
lea     eax, [esp+1d0h+var_1bc]
push    eax
push    offset dword_4a6b6c
call    sub_48ed40
add     esp, 10h
test    eax, eax
jnz     loc_44326a
lea     eax, [esp+1c8h+string1]
push    19ah
push    eax
push    edi
push    esi
call    sub_4897b0
add     esp, 10h
test    eax, eax
jz      loc_44326a
lea     eax, [esp+1c8h+string1]
push    eax
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_489760
mov     bx, ax
add     esp, 8
test    bx, bx
jnz     short loc_44324c
lea     eax, [esp+1c8h+string1]
push    eax
call    sub_442bc0
mov     bx, ax
add     esp, 4
test    bx, bx
jnz     short loc_44324c
lea     eax, [esp+1c8h+var_1b4]
push    eax
push    edi
push    esi
call    sub_489900
lea     eax, [esp+1d4h+string1]
add     esp, 0ch
push    eax
call    sub_442b00
mov     bx, ax
lea     eax, [esp+1cch+var_1b4]
add     esp, 4
push    eax
push    0
push    ebx
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4428a0
add     esp, 10h
mov     [esp+1c8h+var_1b8], bx
push    40000h
lea     eax, [esp+1cch+var_1bc]
push    0
push    eax
push    offset dword_4a6b6c
call    sub_48ef90
add     esp, 10h
mov     ax, [esp+1c8h+var_1b8]
pop     edi
pop     esi
pop     ebx
add     esp, 1bch
retn
mov     ax, di
pop     edi
pop     esi
pop     ebx
add     esp, 1bch
retn
sub     esp, 8
push    esi
push    offset dword_4a6b6c
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_4432e4
mov     eax, [esp+0ch+arg_0]
shr     eax, 10h
mov     [esp+0ch+var_8], ax
mov     ax, [esp+0ch+arg_4]
mov     [esp+0ch+var_6], ax
cmp     ax, 1
sbb     esi, esi
and     esi, 0fffe0000h
add     esi, 40000h
lea     eax, [esp+0ch+var_8]
push    esi
push    eax
push    offset dword_4a6b6c
call    sub_48ee50
add     esp, 0ch
test    eax, eax
jnz     short loc_4432cd
pop     esi
add     esp, 8
retn
mov     dx, ds:word_4a6b5e
mov     ecx, [esp+arg_0]
sub     esp, 4
lea     eax, [esp+4+var_2]
push    eax
push    ecx
push    edx
call    sub_43ce70
add     esp, 10h
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    0
push    ecx
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6b5e
or      eax, ecx
push    eax
call    sub_445a40
add     esp, 10h
retn
push    esi
mov     esi, [esp+4+lpstring]
push    esi
call    ds:lstrlena
inc     ax
mov     cx, ds:word_4a6b5e
push    eax
push    esi
mov     esi, [esp+0ch+arg_0]
push    esi
push    ecx
call    sub_43ce30
add     esp, 10h
push    esi
push    0dh
call    sub_441c60
add     esp, 8
pop     esi
retn
call    sub_4425e0
call    sub_442480
test    eax, eax
jnz     locret_44343c
push    0
push    offset loc_443460
call    sub_443050
add     esp, 8
push    201bh
call    sub_443440
add     esp, 4
push    201ch
call    sub_443440
add     esp, 4
push    201dh
call    sub_443440
add     esp, 4
push    201eh
call    sub_443440
add     esp, 4
push    201fh
call    sub_443440
add     esp, 4
push    2020h
call    sub_443440
add     esp, 4
push    20a1h
call    sub_443440
add     esp, 4
push    0
call    sub_42afa0
add     esp, 4
push    2087h
call    sub_443440
add     esp, 4
push    209eh
call    sub_443440
add     esp, 4
push    2099h
call    sub_443440
add     esp, 4
push    2098h
call    sub_443440
add     esp, 4
xor     eax, eax
retn
push    esi
mov     si, [esp+4+arg_0]
push    esi
call    sub_484580
add     esp, 4
movsx   eax, si
push    eax
push    1
call    sub_441c60
add     esp, 8
pop     esi
retn
movsx   eax, word ptr [esp+4]
push    eax
push    1
call    sub_441c60
add     esp, 8
mov     eax, 1
retn
mov     eax, ds:dword_4a6b8a
retn
mov     eax, [esp+arg_0]
push    ebx
mov     eax, ds:dword_4a6b8e[eax*4]
test    eax, eax
jz      short loc_4434b5
mov     ecx, [esp+4+arg_4]
mov     eax, [eax]
mov     edx, ecx
mov     bl, 1
sar     edx, 3
and     cl, 7
shl     bl, cl
or      [edx+eax], bl
pop     ebx
retn
push    1
call    sub_441d10
mov     ax, [esp+4+arg_0]
add     esp, 4
mov     ds:dword_4a6b8a, 1
cmp     ax, 1
jl      short loc_4434f5
cmp     ax, 2000h
jg      short loc_4434f5
movsx   eax, ax
dec     eax
push    eax
push    0
call    sub_443490
add     esp, 8
retn
cmp     ax, 2001h
jl      short locret_443514
cmp     ax, 3000h
jg      short locret_443514
movsx   eax, ax
sub     eax, 2001h
push    eax
push    1
call    sub_443490
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    esi
mov     eax, ds:dword_4a6b8e[eax*4]
test    eax, eax
jz      short loc_443554
mov     ecx, [esp+4+arg_4]
mov     eax, [eax]
mov     esi, ecx
xor     edx, edx
sar     esi, 3
and     cl, 7
mov     dl, [esi+eax]
mov     eax, 1
shl     eax, cl
and     edx, eax
pop     esi
cmp     edx, 1
sbb     eax, eax
inc     eax
retn
xor     eax, eax
pop     esi
retn
mov     ax, [esp+arg_0]
cmp     ax, 1
jl      short loc_443581
cmp     ax, 2000h
jg      short loc_443581
movsx   eax, ax
dec     eax
push    eax
push    0
call    sub_443520
add     esp, 8
retn
cmp     ax, 2001h
jl      short loc_4435a1
cmp     ax, 3000h
jg      short loc_4435a1
movsx   eax, ax
sub     eax, 2001h
push    eax
push    1
call    sub_443520
add     esp, 8
retn
xor     eax, eax
retn
mov     ds:dword_4a6b8a, 0
cmp     ds:dword_4a6b8e, 0
push    ebx
push    esi
push    edi
jz      short loc_4435fc
mov     eax, ds:dword_4a6b8e
mov     esi, ds:globallock
push    eax
call    esi
mov     edx, ds:dword_4a6b96
mov     edi, eax
xor     eax, eax
mov     ecx, edx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     eax, ds:dword_4a6b8e
mov     ebx, ds:globalunlock
push    eax
call    ebx
jmp     short loc_443608
mov     esi, ds:globallock
mov     ebx, ds:globalunlock
cmp     ds:dword_4a6b92, 0
jz      short loc_443639
mov     eax, ds:dword_4a6b92
push    eax
call    esi
mov     edx, ds:dword_4a6b9a
mov     edi, eax
xor     eax, eax
mov     ecx, edx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     eax, ds:dword_4a6b92
push    eax
call    ebx
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
add     eax, 7
shl     esi, 2
push    42h
sar     eax, 3
push    eax
mov     ds:dword_4a6b96[esi], eax
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a6b8e[esi], eax
cmp     eax, 1
pop     esi
sbb     eax, eax
inc     eax
retn
mov     eax, ds:dword_4a6b8e
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, ds:dword_4a6b92
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     ds:dword_4a6b8e, eax
mov     ds:dword_4a6b92, eax
retn
sub     esp, 0c0h
push    ebx
push    esi
mov     ebx, [esp+0c8h+arg_0]
push    edi
mov     edx, [ebx]
lea     eax, [edx-1]
cmp     eax, 0dh
ja      def_4436ce
jmp     ds:jpt_4436ce[eax*4]
call    sub_43cd40
mov     ds:word_4a6ba0, ax
call    sub_43cd40
mov     ds:word_4a6ba2, ax
call    sub_43cd40
mov     ds:word_4a6ba4, ax
call    sub_43cd40
mov     ds:word_4a6ba6, ax
call    sub_40b0d0
mov     dword_4ada58, 0ffffffffh
call    sub_4444d0
mov     word ptr [ebx+8], 16h
jmp     def_4436ce
cmp     word ptr [ebx+8], 16h
jz      short loc_443736
mov     eax, 1389h
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
mov     edi, offset word_4a6ba0
mov     esi, [ebx+0ah]
mov     ecx, 5
rep movsd
movsw
mov     dword_4ada58, 0
mov     ds:dword_4a6bae, 0
mov     eax, ds:dword_4a6bb2
push    eax
call    sub_413350
add     esp, 4
call    sub_443a90
test    eax, eax
jnz     loc_443958
call    sub_4439a0
test    eax, eax
jz      def_4436ce
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
mov     esi, offset word_4a6ba0
call    sub_4443d0
call    sub_413340
mov     ecx, 5
mov     ds:dword_4a6bb2, eax
mov     edi, [ebx+0ah]
rep movsd
movsw
call    sub_443dc0
test    eax, eax
jnz     loc_443958
push    offset dword_4a61c4
call    sub_443d20
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
push    0
push    0ch
push    0
push    offset dword_4a61c4
call    sub_410a90
add     esp, 10h
push    offset dword_4a61c4
call    sub_413110
add     esp, 4
call    sub_408360
call    sub_428bd0
jmp     def_4436ce
call    sub_4444d0
call    sub_408360
call    sub_428bd0
push    0
xor     eax, eax
mov     ax, word_4ad9ac
push    0
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a6ba0
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6ba2
push    0
shl     eax, 10h
push    0
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6ba4
push    0
shl     eax, 10h
push    0
or      eax, ecx
push    eax
call    sub_4709c0
add     esp, 0ch
jmp     def_4436ce
lea     edi, [esp+0cch+var_c0]
xor     eax, eax
mov     ecx, 2fh
sub     edx, 7
rep stosd
stosw
lea     ecx, [esp+0cch+var_c0]
cmp     edx, 1
sbb     eax, eax
push    ecx
neg     eax
mov     [esp+0d0h+var_b6], ax
push    68h
push    0
push    offset dword_4a61c4
call    sub_410a90
add     esp, 10h
cmp     dword ptr [ebx], 6
jz      loc_443951
cmp     ds:frequency, 0
jz      def_4436ce
call    sub_438270
jmp     def_4436ce
push    1
call    sub_444720
add     esp, 4
jmp     short def_4436ce
push    0
call    sub_444720
add     esp, 4
jmp     short def_4436ce
lea     edi, [esp+0cch+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
cmp     ds:dword_4a68c4, eax
jnz     short loc_443905
call    sub_438270
lea     eax, [esp+0cch+var_c0]
push    eax
push    26h
push    0
push    offset dword_4a61c4
call    sub_410a90
add     esp, 10h
jmp     short def_4436ce
lea     edi, [esp+0cch+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
lea     eax, [esp+0cch+var_c0]
push    eax
push    27h
push    0
push    offset dword_4a61c4
call    sub_410a90
add     esp, 10h
push    1
push    offset dword_4a61c4
call    sub_410700
add     esp, 8
call    sub_438290
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
push    esi
xor     eax, eax
mov     ax, word_4ad9ac
push    edi
shl     eax, 10h
xor     ecx, ecx
mov     cx, ds:word_4a6ba0
or      eax, ecx
push    eax
call    sub_470610
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_443a35
xor     edi, edi
push    offset dword_4a61c4
mov     ds:dword_4a61c4, edi
xor     edi, edi
mov     ds:dword_4a61cc, esi
mov     ds:word_4a61d0, di
mov     ds:dword_4a61c8, edi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_443a2d
push    offset dword_4a61c4
call    sub_413090
add     esp, 4
mov     esi, eax
cmp     esi, edi
jz      short loc_443a20
push    esi
call    sub_43b810
add     esp, 4
push    esi
call    sub_413260
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_443a08
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
call    sub_443ae0
pop     edi
pop     esi
retn
mov     ax, ds:word_4a6ba0
push    eax
call    sub_43cd60
add     esp, 4
test    eax, eax
jnz     short loc_443a50
mov     eax, 8
pop     edi
pop     esi
retn
push    eax
call    sub_45bab0
add     esp, 4
mov     edi, eax
xor     eax, eax
xor     ecx, ecx
mov     ax, word_4ad9ac
push    0
shl     eax, 10h
mov     cx, ds:word_4a6ba0
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
test    edi, edi
jnz     loc_4439c9
mov     eax, 8
pop     edi
pop     esi
retn
mov     ax, ds:word_4a6ba6
push    esi
xor     esi, esi
push    eax
call    sub_43cd60
add     esp, 4
push    eax
call    sub_40b9e0
add     esp, 4
test    eax, eax
jnz     short loc_443ab4
mov     esi, 8
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6ba6
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
mov     eax, esi
pop     esi
retn
mov     ax, ds:word_4a6ba2
sub     esp, 0d8h
push    ebx
push    esi
push    edi
push    eax
call    sub_43cd60
add     esp, 4
mov     esi, eax
mov     ax, ds:word_4a6ba4
push    eax
call    sub_43cd60
add     esp, 4
mov     ebx, eax
xor     eax, eax
xor     ecx, ecx
mov     ax, word_4ad9ac
shl     eax, 10h
mov     cx, ds:word_4a6ba4
or      eax, ecx
push    eax
call    sub_470610
shr     eax, 4
add     esp, 4
mov     [esp+0e4h+var_d0], ax
test    esi, esi
mov     [esp+0e4h+var_ca], 0
mov     [esp+0e4h+var_c6], 12d687h
jz      short loc_443ba5
test    ebx, ebx
jz      short loc_443ba5
lea     edi, [esp+0e4h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
push    esi
mov     edi, ds:globallock
call    edi
mov     [esp+0e4h+var_d8], eax
push    ebx
call    edi
lea     ecx, [esp+0e4h+var_d8]
lea     edx, [esp+0e4h+var_c0]
mov     [esp+0e4h+var_d4], eax
push    edx
mov     ax, ds:word_4a8518
push    offset sub_443c00
mov     [esp+0ech+var_c2], ax
push    0
mov     [esp+0f0h+var_28], ecx
call    sub_4109d0
add     esp, 0ch
push    esi
mov     esi, ds:globalunlock
call    esi
push    ebx
call    esi
jmp     short loc_443bad
mov     [esp+0e4h+var_ca], 138ah
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6ba2
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
mov     cx, ds:word_4a6ba4
push    0
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_470920
mov     eax, [esp+0ech+var_ca]
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 0d8h
retn
mov     eax, [esp+arg_4]
sub     esp, 0c0h
mov     ecx, 2fh
push    esi
push    edi
mov     esi, [eax+98h]
lea     edi, [esp+0c8h+var_c0]
xor     eax, eax
rep stosd
stosw
movsx   ecx, word ptr [esi+16h]
mov     [esp+0c8h+var_b6], ax
mov     edi, [esp+0c8h+arg_0]
mov     [esp+0c8h+var_9c], ecx
mov     [esp+0c8h+var_28], esi
mov     [esp+0c8h+var_1a], offset loc_443c80
mov     eax, [edi+2]
lea     ecx, [esp+0c8h+var_c0]
push    ecx
mov     [esi+0ah], eax
push    6ah
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
cmp     [esp+0c8h+var_b6], 0
jz      short loc_443c6b
movsx   eax, [esp+0c8h+var_b6]
mov     [esi+0eh], eax
xor     eax, eax
mov     [edi+1eh], ax
mov     [edi+1ch], ax
pop     edi
pop     esi
add     esp, 0c0h
retn
mov     eax, [esp+4]
push    esi
mov     esi, [esp+0ch]
push    esi
push    eax
mov     ecx, [esi+0ah]
push    ecx
call    sub_443cb0
add     esp, 0ch
cmp     eax, 0ffffffffh
jnz     short loc_443ca3
mov     dword ptr [esi+0eh], 8
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_8]
push    edi
mov     bx, [esi+8]
mov     edi, [esi+4]
mov     ax, bx
dec     bx
test    ax, ax
jz      short loc_443ce6
mov     eax, [esp+0ch+arg_0]
mov     ecx, [esp+0ch+arg_4]
cmp     [edi], eax
jnz     short loc_443cd9
cmp     [edi+4], ecx
jz      short loc_443cec
mov     dx, bx
add     edi, 10h
dec     bx
test    dx, dx
jnz     short loc_443cd0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [edi+0ch]
test    eax, eax
jnz     short loc_443cf9
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    eax
mov     eax, [edi+8]
add     eax, [esi]
push    eax
call    sub_45b910
add     esp, 8
test    eax, eax
jnz     short loc_443ce8
pop     edi
mov     eax, 0ffffffffh
pop     esi
pop     ebx
retn
push    esi
push    edi
call    sub_443e20
test    eax, eax
jnz     loc_443dbc
mov     esi, [esp+8+arg_0]
mov     eax, [esi]
test    eax, eax
jz      short loc_443d58
push    eax
call    sub_45bab0
add     esp, 4
mov     edi, eax
mov     esi, [esi+8]
push    esi
push    edi
call    sub_4440d0
add     esp, 8
test    eax, eax
jz      short loc_443d68
pop     edi
pop     esi
retn
push    2
xor     esi, esi
push    0
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_443d74
mov     eax, 8
pop     edi
pop     esi
retn
mov     ax, ds:word_4a6ba0
push    esi
push    edi
push    eax
call    sub_43cda0
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_443d99
push    edi
call    sub_45ba00
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6ba0
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
mov     eax, esi
pop     edi
pop     esi
retn
sub     esp, 4
lea     eax, [esp+4+nnumberofbytestowrite]
push    eax
call    sub_40b940
add     esp, 4
test    eax, eax
jnz     short loc_443ddd
mov     eax, 8
add     esp, 4
retn
mov     ecx, [esp+4+nnumberofbytestowrite]
push    ecx
push    eax
mov     ax, ds:word_4a6ba6
push    eax
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jnz     short loc_443e19
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6ba6
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
xor     eax, eax
add     esp, 4
retn
sub     esp, 100h
xor     eax, eax
mov     ecx, 2fh
push    edi
lea     edi, [esp+104h+var_c0]
push    400h
rep stosd
stosw
lea     eax, [esp+108h+var_fc]
push    400h
push    eax
call    sub_445f40
add     esp, 0ch
test    eax, eax
jnz     short loc_443e5e
mov     eax, 8
pop     edi
add     esp, 100h
retn
lea     eax, [esp+104h+var_e4]
push    400h
push    400h
push    eax
call    sub_445f40
add     esp, 0ch
test    eax, eax
jnz     short loc_443e86
mov     eax, 8
pop     edi
add     esp, 100h
retn
lea     eax, [esp+104h+var_fc]
lea     ecx, [esp+104h+var_c0]
mov     [esp+104h+var_28], eax
push    ecx
mov     [esp+108h+var_c8], 0
mov     [esp+108h+var_c4], 12d687h
push    offset sub_443fa0
push    0
call    sub_4109d0
lea     eax, [esp+110h+nnumberofbytestowrite]
lea     ecx, [esp+110h+var_fc]
add     esp, 0ch
cmp     [esp+104h+var_c8], 0
push    eax
push    ecx
jz      short loc_443efe
call    sub_446030
add     esp, 8
push    eax
call    sub_45ba00
lea     ecx, [esp+108h+nnumberofbytestowrite]
lea     edx, [esp+108h+var_e4]
add     esp, 4
push    ecx
push    edx
call    sub_446030
add     esp, 8
push    eax
call    sub_45ba00
mov     eax, [esp+108h+var_c8]
add     esp, 4
pop     edi
add     esp, 100h
retn
call    sub_446030
mov     dx, ds:word_4a6ba2
mov     ecx, [esp+10ch+nnumberofbytestowrite]
add     esp, 8
push    ecx
push    eax
push    edx
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jnz     short loc_443f90
push    0
xor     eax, eax
mov     ax, word_4ad9ac
xor     ecx, ecx
shl     eax, 10h
mov     cx, ds:word_4a6ba2
or      eax, ecx
push    eax
call    sub_470920
lea     ecx, [esp+10ch+nnumberofbytestowrite]
lea     edx, [esp+10ch+var_e4]
add     esp, 8
push    ecx
push    edx
call    sub_446030
mov     dx, ds:word_4a6ba4
mov     ecx, [esp+10ch+nnumberofbytestowrite]
add     esp, 8
push    ecx
push    eax
push    edx
call    sub_43cda0
add     esp, 0ch
test    eax, eax
jnz     short loc_443f90
push    0
xor     ecx, ecx
mov     cx, word_4ad9ac
xor     eax, eax
shl     ecx, 10h
mov     ax, ds:word_4a6ba4
or      ecx, eax
push    ecx
call    sub_470920
add     esp, 8
xor     eax, eax
pop     edi
add     esp, 100h
retn
mov     eax, [esp+arg_4]
sub     esp, 0c0h
mov     ecx, 2fh
push    esi
push    edi
mov     esi, [eax+98h]
lea     edi, [esp+0c8h+var_c0]
xor     eax, eax
rep stosd
stosw
mov     [esp+0c8h+var_b6], ax
mov     ecx, [esp+0c8h+arg_0]
lea     edx, [esp+0c8h+var_c0]
mov     [esp+0c8h+var_28], esi
mov     [esp+0c8h+var_1a], offset loc_444010
mov     eax, [ecx+2]
push    edx
push    69h
mov     [esi+30h], eax
push    ecx
call    dword ptr [ecx+6]
add     esp, 0ch
cmp     [esp+0c8h+var_b6], 0
jz      short loc_444003
movsx   eax, [esp+0c8h+var_b6]
mov     [esi+34h], eax
xor     eax, eax
pop     edi
pop     esi
add     esp, 0c0h
retn
mov     eax, [esp+8]
push    esi
mov     esi, [esp+10h]
mov     edx, [esp+8]
push    esi
push    eax
mov     ecx, [esi+30h]
push    ecx
push    edx
call    sub_444040
add     esp, 10h
test    eax, eax
jz      short loc_444033
mov     [esi+34h], eax
pop     esi
retn
mov     eax, [esp+arg_4]
sub     esp, 10h
mov     ecx, [esp+10h+arg_8]
push    ebx
mov     [esp+14h+var_10], eax
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+1ch+arg_c]
mov     ebx, [esp+1ch+hmem]
mov     [esp+1ch+var_c], ecx
cmp     ebx, esi
mov     eax, [edi+8]
mov     [esp+1ch+var_8], eax
jnz     short loc_444071
mov     [esp+1ch+var_4], esi
jmp     short loc_44407e
push    ebx
call    sub_45bbc0
mov     [esp+20h+var_4], eax
add     esp, 4
lea     eax, [esp+1ch+var_10]
push    10h
push    eax
lea     ecx, [edi+18h]
push    ecx
call    sub_445f90
add     esp, 0ch
test    eax, eax
jnz     short loc_44409a
mov     esi, 8
test    ebx, ebx
jz      short loc_4440c4
mov     eax, [esp+1ch+var_4]
push    eax
push    ebx
call    ds:globallock
push    eax
push    edi
call    sub_445f90
add     esp, 0ch
test    eax, eax
jnz     short loc_4440bd
mov     esi, 8
push    ebx
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 10h
mov     [esp+10h+var_10], eax
push    esi
lea     eax, [esp+14h+var_10]
push    edi
xor     edi, edi
push    eax
mov     [esp+1ch+var_4], di
mov     [esp+1ch+var_8], ecx
mov     [esp+1ch+var_c], edi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_444143
lea     eax, [esp+18h+var_10]
push    eax
call    sub_413090
add     esp, 4
mov     esi, eax
cmp     esi, edi
jz      short loc_444136
mov     edi, offset sub_43ae70
cmp     [esi+6], edi
jnz     short loc_444127
push    esi
call    sub_43b7e0
add     esp, 4
push    esi
call    sub_413260
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_444119
lea     eax, [esp+18h+var_10]
push    eax
call    sub_412f60
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
add     esp, 10h
retn
push    esi
mov     eax, ds:frequency
mov     esi, [esp+4+lprc]
test    eax, eax
push    esi
jz      short loc_444173
push    eax
call    sub_490960
add     esp, 8
push    esi
call    sub_474db0
add     esp, 4
pop     esi
retn
call    sub_491880
add     esp, 4
pop     esi
retn
mov     ecx, dword ptr [esp+arg_0]
sub     esp, 10h
lea     eax, [esp+10h+rcdst]
push    esi
push    eax
push    ecx
call    sub_474a40
add     esp, 8
test    eax, eax
jz      short loc_4441d9
lea     eax, [esp+14h+rcdst]
mov     esi, [esp+14h+arg_c]
push    eax
push    esi
call    sub_473d40
mov     cx, word_4ada60
add     esp, 8
mov     eax, dword_4ada5c
mov     edx, dword_4ada58
push    ecx
push    eax
lea     ecx, [esp+1ch+rcdst]
push    edx
mov     eax, [esp+20h+hdcsrc]
push    esi
mov     edx, [esp+24h+hdc]
push    ecx
push    eax
push    edx
call    sub_44fae0
add     esp, 1ch
pop     esi
add     esp, 10h
retn
push    0
push    0
push    0
call    sub_4441f0
add     esp, 0ch
retn
sub     esp, 40h
push    ebx
push    esi
mov     ebx, [esp+48h+arg_4]
push    edi
mov     edi, [esp+4ch+arg_0]
push    ebp
cmp     edi, 0ffh
jnz     loc_444304
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   esi, ax
shl     esi, 6
xor     eax, eax
mov     al, bh
lea     ebp, ds:0[eax*4]
mov     eax, [esi+ecx+4]
mov     edx, [eax]
mov     eax, [edx+ebp]
test    eax, eax
jz      short loc_444241
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_44424a
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+50h+source]
push    40h
push    ecx
mov     cx, word ptr [esp+58h+arg_8]
inc     cx
push    ecx
push    eax
call    sub_45c990
lea     ecx, [esp+60h+source]
add     esp, 10h
push    ecx
call    sub_450f60
add     esp, 4
lea     edi, [eax+0ffh]
cmp     edi, 0ffh
jnz     loc_444304
mov     eax, dword_4ae1e0
mov     ecx, [esi+eax+4]
mov     edx, [ecx]
mov     eax, [edx+ebp]
test    eax, eax
jz      short loc_4442a0
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_4442a9
push    ebx
call    sub_461250
add     esp, 4
mov     ecx, [esp+50h+arg_8]
push    ecx
push    eax
call    sub_45c870
add     esp, 8
test    ax, ax
jz      short loc_4442f7
mov     eax, dword_4ae1e0
mov     ecx, [esi+eax+4]
mov     edx, [ecx]
mov     eax, [edx+ebp]
test    eax, eax
jz      short loc_4442d9
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_4442e2
push    ebx
call    sub_461250
add     esp, 4
lea     ecx, [esp+50h+source]
push    40h
mov     edx, [esp+54h+arg_8]
push    ecx
push    edx
push    eax
call    sub_45c990
add     esp, 10h
lea     eax, [esp+50h+source]
push    eax
call    sub_451970
add     esp, 4
cmp     dword_4ada58, edi
jz      short loc_444371
cmp     dword_4ada58, 0ffffffffh
jnz     short loc_444335
mov     cx, word ptr [esp+50h+arg_8]
mov     dword_4ada58, edi
mov     word_4ada60, cx
pop     ebp
pop     edi
mov     dword_4ada5c, ebx
pop     esi
pop     ebx
add     esp, 40h
retn
test    edi, edi
jnz     short loc_444342
call    sub_4443c0
test    eax, eax
jnz     short loc_444371
cmp     dword_4ada58, 1
jz      short loc_444359
cmp     dword_4ada58, 2
jz      short loc_444359
call    sub_4443d0
mov     cx, word ptr [esp+50h+arg_8]
mov     dword_4ada58, edi
mov     word_4ada60, cx
mov     dword_4ada5c, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     eax, dword_4ada5c
retn
mov     eax, dword_4ada58
retn
mov     eax, [esp+arg_0]
mov     dword_4ada58, eax
retn
mov     eax, [esp+arg_0]
mov     dword_4ada64, eax
retn
cmp     dword_4ada64, 1
sbb     eax, eax
inc     eax
retn
push    1
call    sub_4443e0
add     esp, 4
retn
cmp     ds:dword_4a6a8c, 0
jnz     locret_4444a7
test    ds:byte_4a61d4, 1
jz      locret_4444a7
cmp     ds:dword_4a6aba, 1
jnz     short loc_444428
push    0
push    1
push    1
call    sub_43bd20
add     esp, 0ch
cmp     ds:dword_4a6aba, 1
jnz     short loc_444428
push    0
push    3
push    1
call    sub_43bd20
add     esp, 0ch
mov     eax, dword_4ada58
test    eax, eax
jz      short loc_44444a
cmp     eax, 0ffffffffh
jz      short loc_44444a
cmp     eax, 1
jz      short loc_44444a
cmp     eax, 2
jz      short loc_44444a
mov     ds:dword_4a61ea, offset sub_444180
call    sub_475320
xor     ecx, ecx
mov     ds:dword_4a61ea, ecx
cmp     [esp+arg_0], ecx
jz      short loc_444479
mov     word_4ada60, cx
push    ecx
mov     dword_4ada58, ecx
mov     dword_4ada5c, ecx
call    sub_4443b0
add     esp, 4
cmp     ds:dword_4a6aba, 2
jnz     short locret_4444a7
push    0
push    1
push    2
call    sub_43bd20
add     esp, 0ch
cmp     ds:dword_4a6aba, 2
jnz     short locret_4444a7
push    0
push    3
push    2
call    sub_43bd20
add     esp, 0ch
retn
xor     eax, eax
mov     word_4ada60, ax
mov     ds:dword_4a61ea, eax
mov     dword_4ada58, eax
mov     dword_4ada5c, eax
retn
sub     esp, 8
mov     word ptr [esp+8+var_4], 0
mov     [esp+8+var_8], 0
mov     eax, [esp+8+var_4]
mov     ecx, [esp+8+var_8]
push    eax
push    ecx
call    sub_444580
add     esp, 8
push    0
push    0
call    sub_425d70
add     esp, 8
push    0
push    0
push    0
push    offset sub_444520
call    sub_43b080
add     esp, 18h
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_410a80
add     esp, 4
mov     eax, 1
retn
sub     esp, 10h
lea     eax, [esp+10h+rcsrc2]
push    eax
call    sub_444150
lea     eax, [esp+14h+rcsrc2]
add     esp, 4
push    2
push    eax
call    sub_4753c0
add     esp, 18h
retn
mov     eax, [esp+arg_0]
mov     edx, ds:dword_4a6ba8
mov     ecx, offset dword_4a6ba8
mov     [eax], edx
mov     cx, [ecx+4]
mov     [eax+4], cx
retn
sub     esp, 0c0h
xor     eax, eax
mov     ecx, 2fh
push    esi
push    edi
lea     edi, [esp+0c8h+var_c0]
rep stosd
stosw
mov     di, word ptr [esp+0c8h+arg_4]
mov     esi, [esp+0c8h+arg_0]
cmp     ds:dword_4a6ba8, esi
jnz     short loc_4445bb
cmp     ds:word_4a6bac, di
jz      loc_444708
call    sub_445290
test    eax, eax
jnz     short loc_4445ef
lea     eax, [esp+0c8h+arg_0]
mov     edx, offset dword_4a6ba8
mov     ds:dword_4a6bae, 0
mov     ecx, [eax]
pop     edi
mov     ax, [eax+4]
pop     esi
mov     [edx], ecx
mov     [edx+4], ax
add     esp, 0c0h
retn
cmp     ds:frequency, 0
jz      short loc_44460c
mov     eax, ds:frequency
push    eax
call    sub_474d50
mov     [esp+0cch+duration], eax
add     esp, 4
jmp     short loc_444614
mov     [esp+0c8h+duration], 0
cmp     [esp+0c8h+duration], 0
jz      loc_4446e6
mov     ax, ds:word_4a6bac
mov     ecx, ds:dword_4a6ba8
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_44465b
mov     [esp+0c8h+var_b6], 0
lea     ecx, [esp+0c8h+var_c0]
push    ecx
push    65h
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, [esp+0c8h+arg_4]
mov     ecx, [esp+0c8h+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_4446bd
mov     [esp+0c8h+var_b6], 1
lea     ecx, [esp+0c8h+var_c0]
push    ecx
push    65h
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
lea     eax, [esp+0cch+arg_0]
add     esp, 4
mov     ds:dword_4a6bae, 1
mov     edx, offset dword_4a6ba8
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
jmp     short loc_4446c9
xor     eax, eax
mov     ds:dword_4a6ba8, eax
mov     ds:dword_4a6bae, eax
mov     eax, [esp+0c8h+duration]
mov     ecx, ds:frequency
push    eax
push    ecx
call    __beep_0
add     esp, 8
pop     edi
pop     esi
add     esp, 0c0h
retn
lea     eax, [esp+0c8h+arg_0]
mov     edx, offset dword_4a6ba8
mov     ds:dword_4a6bae, 0
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
pop     edi
pop     esi
add     esp, 0c0h
retn
sub     esp, 0c0h
xor     eax, eax
mov     ecx, 2fh
push    esi
push    edi
lea     edi, [esp+0c8h+var_c0]
rep stosd
stosw
mov     esi, [esp+0c8h+arg_0]
cmp     esi, ds:dword_4a6bae
jz      loc_4447e8
cmp     ds:dword_4a6ba8, eax
jz      loc_4447e8
cmp     ds:frequency, eax
jz      short loc_444772
mov     eax, ds:frequency
push    eax
call    sub_474d50
mov     [esp+0cch+duration], eax
add     esp, 4
jmp     short loc_44477a
mov     [esp+0c8h+duration], 0
cmp     [esp+0c8h+duration], 0
jz      short loc_4447de
mov     ax, ds:word_4a6bac
mov     ecx, ds:dword_4a6ba8
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_4447bb
mov     [esp+0c8h+var_b6], si
lea     ecx, [esp+0c8h+var_c0]
push    ecx
push    65h
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, [esp+0c8h+duration]
mov     ecx, ds:frequency
push    eax
mov     ds:dword_4a6bae, esi
push    ecx
call    __beep_0
add     esp, 8
pop     edi
pop     esi
add     esp, 0c0h
retn
mov     ds:dword_4a6bae, 0
pop     edi
pop     esi
add     esp, 0c0h
retn
push    esi
mov     esi, [esp+4+arg_0]
lea     eax, [esi-200h]
cmp     eax, 9
ja      def_444814
jmp     ds:jpt_444814[eax*4]
mov     eax, [esp+4+pt.x]
mov     ecx, [esp+4+pt.y]
push    ecx
push    eax
call    sub_4298e0
add     esp, 8
push    0
push    7
call    sub_441bb0
add     esp, 8
pop     esi
retn
mov     eax, [esp+4+pt.x]
push    0
mov     ecx, [esp+8+pt.y]
push    ecx
push    eax
call    sub_429580
add     esp, 0ch
push    0
push    6
call    sub_441bb0
add     esp, 8
pop     esi
retn
mov     eax, [esp+4+pt.x]
mov     ecx, [esp+4+pt.y]
push    ecx
push    eax
call    sub_429ac0
add     esp, 8
push    0
push    6
call    sub_441bb0
add     esp, 8
pop     esi
retn
mov     eax, [esp+4+pt.x]
push    1
mov     ecx, [esp+8+pt.y]
push    ecx
push    eax
call    sub_429580
add     esp, 0ch
pop     esi
retn
push    0
push    6
call    sub_441bb0
add     esp, 8
mov     eax, [esp+4+pt.x]
mov     ecx, [esp+4+pt.y]
push    ecx
push    eax
push    esi
call    sub_429480
add     esp, 0ch
pop     esi
retn
sub     esp, 15ch
mov     [esp+15ch+var_15c], 0
push    ebx
push    esi
push    edi
push    ebp
call    sub_409e60
mov     [esp+16ch+var_150], eax
call    sub_444390
cmp     eax, 1
mov     ebx, eax
jz      short loc_444910
cmp     ebx, 2
jnz     loc_444d83
cmp     word ptr [esp+16ch+arg_4], 0
jnz     loc_444d83
mov     eax, [esp+16ch+arg_4]
mov     ecx, [esp+16ch+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_444d83
mov     ax, [esi+0ah]
test    al, 10h
jnz     short loc_444961
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 15ch
retn
and     ax, 0ffefh
push    0
mov     [esi+0ah], ax
push    8
push    esi
call    dword ptr [esi+6]
lea     ecx, [esp+178h+var_13c]
mov     eax, [esi+0ch]
add     esp, 0ch
add     esi, 0ch
mov     [ecx], eax
push    offset dword_4a61c4
mov     edx, [esi+4]
mov     [ecx+4], edx
mov     ebp, [esi+8]
mov     [ecx+8], ebp
mov     eax, [esi+0ch]
mov     [ecx+0ch], eax
call    sub_412f60
lea     edi, [esp+170h+src]
add     esp, 4
xor     eax, eax
mov     ecx, 15h
rep stosd
stosw
lea     eax, [esp+16ch+var_e2]
mov     ecx, [esp+16ch+arg_0]
push    eax
push    ecx
call    sub_451be0
mov     esi, [esp+174h+arg_8]
add     esp, 8
test    eax, eax
jz      loc_444d3c
mov     [esp+16ch+var_e6], esi
cmp     esi, 1
mov     [esp+16ch+src], 56h
mov     [esp+16ch+var_112], offset loc_444d90
mov     [esp+16ch+var_10e], 14h
jnz     short loc_444a2c
lea     eax, [esp+16ch+var_c0]
lea     ecx, [esp+16ch+var_13c]
push    eax
push    ecx
call    sub_473c30
mov     ecx, [esp+174h+var_c0]
mov     [esp+174h+var_10c], ecx
mov     edx, [esp+174h+var_bc]
mov     [esp+174h+var_108], edx
mov     [esp+174h+var_104], ecx
mov     [esp+174h+var_100], edx
add     esp, 8
jmp     short loc_444a4a
lea     edx, [esp+16ch+var_13c]
lea     ecx, [esp+16ch+var_10c]
mov     eax, [edx]
mov     [ecx], eax
mov     ebp, [edx+4]
mov     [ecx+4], ebp
mov     edi, [edx+8]
mov     [ecx+8], edi
mov     eax, [edx+0ch]
mov     [ecx+0ch], eax
push    offset dword_4a61c4
call    sub_412f30
add     esp, 4
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, offset dword_4a61c4
jz      short loc_444a88
lea     ecx, [esp+16ch+src]
push    ecx
push    eax
call    sub_413130
mov     [esp+174h+var_15c], eax
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
cmp     [esp+16ch+var_15c], 0
jz      loc_444d2c
cmp     esi, 1
jnz     short loc_444a9e
mov     ax, 3fh
jmp     short loc_444aae
mov     ax, 43h
test    esi, esi
jz      short loc_444aae
mov     ax, word ptr [esp+16ch+var_c0]
lea     ecx, [esp+16ch+var_12c]
push    ecx
push    eax
call    sub_444380
push    eax
call    sub_451520
add     esp, 0ch
mov     eax, 80h
sub     eax, [esp+16ch+var_12c]
cmp     eax, 1
jg      short loc_444ad5
mov     eax, 1
mov     ebp, [esp+16ch+var_138]
lea     edx, [esp+16ch+var_13c]
lea     ecx, [esp+16ch+rc]
mov     [esp+16ch+var_12c], eax
mov     eax, [edx]
mov     edi, [edx+8]
mov     [ecx], eax
mov     eax, [edx+0ch]
mov     [ecx+4], ebp
mov     ebp, [esp+16ch+var_134]
sub     ebp, [esp+16ch+var_13c]
mov     [ecx+8], edi
mov     edi, [esp+16ch+var_130]
mov     [ecx+0ch], eax
sub     edi, [esp+16ch+var_138]
cmp     esi, 1
jnz     short loc_444b50
cmp     ebx, 1
jnz     short loc_444b34
cmp     edi, ebp
jge     short loc_444b25
mov     eax, edi
cdq
sub     eax, edx
sar     eax, 1
lea     ecx, [eax-1]
mov     eax, ecx
jmp     short loc_444b3f
mov     eax, ebp
cdq
sub     eax, edx
sar     eax, 1
lea     ecx, [eax-1]
mov     eax, ecx
jmp     short loc_444b3f
xor     ecx, ecx
mov     eax, edi
cdq
sub     eax, edx
sar     eax, 1
dec     eax
neg     eax
neg     ecx
push    eax
push    ecx
lea     eax, [esp+174h+rc]
push    eax
call    ds:inflaterect
lea     eax, [esi-1]
cmp     eax, 1
sbb     ecx, ecx
dec     ebx
and     ecx, 0fffffffeh
mov     eax, [esp+16ch+var_12c]
cdq
inc     ecx
cmp     ebx, 1
sbb     ebx, ebx
sub     eax, edx
sar     eax, 1
and     ebx, ecx
add     eax, edi
add     eax, ebp
cdq
idiv    [esp+16ch+var_12c]
cmp     eax, 1
jge     short loc_444b81
mov     eax, 1
mov     edx, eax
imul    edx, ecx
imul    eax, ebx
mov     [esp+16ch+var_158], edx
mov     [esp+16ch+var_154], eax
mov     eax, edx
test    edx, edx
jg      short loc_444b9d
mov     eax, [esp+16ch+var_158]
neg     eax
lea     ecx, ds:0[eax*2]
mov     ebx, 1
mov     eax, edi
cdq
idiv    ecx
inc     eax
mov     [esp+16ch+var_12c], eax
mov     eax, [esp+16ch+var_12c]
push    ebx
mov     ecx, [esp+170h+var_128]
push    eax
mov     edx, [esp+174h+var_150]
push    ecx
push    edx
call    sub_4519f0
add     esp, 10h
test    eax, eax
jz      short loc_444bf2
mov     eax, [esp+16ch+var_158]
lea     ecx, [esp+16ch+rc]
neg     eax
push    eax
mov     eax, [esp+170h+var_154]
neg     eax
push    eax
push    ecx
call    ds:inflaterect
mov     ecx, [esp+16ch+var_130]
cmp     [esp+16ch+rc.bottom], ecx
jle     short loc_444c12
mov     ebp, [esp+16ch+var_138]
mov     edi, [esp+16ch+var_134]
lea     edx, [esp+16ch+var_13c]
lea     ecx, [esp+16ch+rc]
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+0ch]
mov     [ecx+4], ebp
mov     [ecx+8], edi
mov     [ecx+0ch], eax
push    offset dword_4a61c4
call    sub_412f30
add     esp, 4
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, offset dword_4a61c4
jz      loc_444cc1
mov     ecx, [esp+16ch+var_15c]
push    ecx
push    eax
call    sub_412fc0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_444cb4
lea     edi, [esp+16ch+var_c0]
xor     eax, eax
mov     ecx, 2fh
lea     edx, [esp+16ch+rc]
rep stosd
stosw
lea     ecx, [esp+16ch+var_b0]
mov     eax, [edx]
mov     edi, [edx+4]
cmp     esi, 1
mov     [ecx], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [ecx+4], edi
mov     [ecx+8], eax
mov     [ecx+0ch], edx
jnz     short loc_444c98
lea     eax, [esp+16ch+var_c0]
push    eax
push    0bh
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
push    0
push    8
jmp     short loc_444cad
push    0
push    8
push    ebp
call    dword ptr [ebp+6]
lea     eax, [esp+178h+var_c0]
add     esp, 0ch
push    eax
push    0bh
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
push    0
call    sub_4443e0
mov     eax, [esp+170h+rc.bottom]
add     esp, 4
cmp     [esp+16ch+rc.top], eax
jge     short loc_444ce5
mov     eax, [esp+16ch+var_130]
cmp     [esp+16ch+rc.bottom], eax
jz      short loc_444ce5
inc     ebx
jmp     loc_444bb3
push    offset dword_4a61c4
call    sub_412f30
add     esp, 4
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, offset dword_4a61c4
jz      short loc_444d2c
mov     ecx, [esp+16ch+var_15c]
push    ecx
push    eax
call    sub_412fc0
add     esp, 8
test    eax, eax
jz      short loc_444d1f
push    eax
call    sub_410a80
add     esp, 4
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
lea     eax, [esp+16ch+var_e2]
push    eax
call    sub_451d30
add     esp, 4
cmp     esi, 1
jnz     short loc_444d83
mov     eax, [esp+16ch+arg_4]
mov     ecx, [esp+16ch+arg_0]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_444d83
or      byte ptr [eax+0ah], 10h
push    0
push    8
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
push    0
call    sub_4443e0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 15ch
retn
mov     eax, [esp+8]
push    ebx
push    esi
test    eax, eax
push    edi
mov     edi, [esp+18h]
jz      short loc_444db2
mov     esi, [esp+10h]
push    edi
push    eax
push    esi
call    sub_40fd60
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
mov     esi, [esp+10h]
mov     eax, [edi+0ch]
mov     cx, [esi+1ch]
push    eax
lea     ebx, [esi+0ch]
push    ebx
push    ecx
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_444de0
add     esi, 36h
mov     eax, [edi+0ch]
push    esi
push    ebx
push    eax
call    sub_451ce0
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 1ch
lea     eax, [esp+1ch+msg]
push    0
push    0
push    0
push    0
push    eax
call    ds:peekmessagea
test    eax, eax
jz      short loc_444e3a
cmp     [esp+1ch+arg_0], 0
jz      short loc_444e2a
cmp     [esp+1ch+msg.message], 113h
jnz     short loc_444e2a
cmp     word_4ada78, 113h
jnz     short loc_444e2a
xor     eax, eax
jmp     short loc_444e36
mov     cx, word ptr [esp+1ch+msg.message]
mov     word_4ada78, cx
test    eax, eax
jnz     short loc_444e43
mov     word_4ada78, 0ffffh
add     esp, 1ch
retn
mov     eax, [esp+arg_10]
sub     esp, 50h
push    ebx
push    esi
mov     ebx, [esp+58h+uvirtkey]
push    edi
mov     edi, [esp+5ch+arg_4]
push    ebp
mov     ebp, [esp+60h+arg_c]
push    eax
mov     esi, [esp+64h+hwnd]
push    ebp
push    ebx
push    edi
push    esi
call    sub_401d40
add     esp, 14h
test    eax, eax
jz      short loc_444e89
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
cmp     edi, 0fh
mov     eax, edi
ja      short loc_444ebb
jz      loc_444f7b
cmp     eax, 1
jz      loc_444f45
cmp     eax, 3
jz      loc_444f59
cmp     eax, 5
jz      loc_444f68
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
cmp     eax, 14h
ja      short loc_444ed9
jz      loc_444ff3
cmp     eax, 10h
jz      loc_444fe1
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
cmp     eax, 4ah
ja      short loc_444f00
jz      loc_44505e
cmp     eax, 16h
jz      loc_44500a
cmp     eax, 18h
jz      loc_445028
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
cmp     eax, 112h
ja      short loc_444f1e
jz      loc_445146
sub     eax, 100h
cmp     eax, 5
ja      short def_444f17
jmp     ds:jpt_444f17[eax*4]
cmp     eax, 200h
jb      short def_444f17
cmp     eax, 209h
jbe     loc_445161
cmp     eax, 464h
jz      loc_4451a4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
xor     eax, eax
pop     ebp
mov     dword_4ada7c, 1
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
call    sub_422bd0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
push    esi
call    sub_422bf0
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
lea     eax, [esp+60h+paint]
push    eax
push    esi
call    ds:beginpaint
mov     ebx, [esp+60h+paint.rcpaint.top]
mov     ebp, [esp+60h+paint.rcpaint.right]
lea     ecx, [esp+60h+paint.rcpaint]
lea     edx, [esp+60h+rc]
push    edx
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+0ch]
mov     [edx+4], ebx
mov     [edx+8], ebp
mov     [edx+0ch], eax
call    sub_474db0
lea     ecx, [esp+64h+rc]
add     esp, 4
push    8
push    ecx
call    sub_4753c0
lea     ecx, [esp+68h+paint]
add     esp, 8
or      ds:byte_4a61d4, 1
push    ecx
push    esi
call    ds:endpaint
call    sub_475320
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
call    sub_459fd0
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
mov     eax, [esp+60h+arg_10]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 1
mov     eax, 1
add     esp, 50h
retn
test    ebx, ebx
jz      def_444f17
call    sub_457df0
push    esi
call    ds:destroywindow
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
cmp     dword_4ada7c, 0
jz      def_444f17
mov     [esp+60h+paint.hdc], 0dh
lea     eax, [esp+60h+paint]
push    eax
call    sub_422130
add     esp, 4
xor     eax, eax
mov     dword_4ada7c, 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
cmp     dword ptr [ebp+0], 4c8h
jnz     def_444f17
mov     edi, [ebp+8]
movsx   ebx, word ptr [edi+8]
test    edi, edi
jz      def_444f17
push    ebx
call    ds:iswindow
test    eax, eax
jz      def_444f17
mov     ax, [edi]
cmp     ax, 200h
jb      def_444f17
cmp     ax, 209h
ja      def_444f17
push    0
push    0
push    4c9h
push    ebx
mov     ebx, ds:sendmessagea
call    ebx
movsx   eax, word ptr [edi+4]
lea     edx, [esp+60h+paint]
mov     [esp+60h+paint.hdc], eax
mov     eax, [edi+4]
push    edx
shr     eax, 10h
push    esi
movsx   ecx, ax
mov     [esp+68h+paint.ferase], ecx
call    ds:screentoclient
mov     eax, [esp+60h+paint.ferase]
mov     ecx, [esp+60h+paint.hdc]
and     eax, 0ffffh
and     ecx, 0ffffh
shl     eax, 10h
or      eax, ecx
push    eax
mov     [edi+4], eax
xor     eax, eax
mov     ax, [edi+2]
push    eax
xor     eax, eax
mov     ax, [edi]
push    eax
push    esi
call    ebx
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
call    sub_45a690
test    eax, eax
jnz     def_444f17
cmp     ds:dword_4a68c4, 0
jnz     def_444f17
call    sub_445290
test    eax, eax
jz      def_444f17
cmp     edi, 104h
jnz     loc_4451d7
mov     ecx, 100h
jmp     loc_4451e6
cmp     ebx, 0f060h
jnz     def_444f17
call    sub_457df0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
cmp     ds:dword_4a68c4, 0
jnz     def_444f17
movsx   eax, bp
shr     ebp, 10h
mov     [esp+60h+paint.hdc], eax
movsx   eax, bp
mov     edx, [esp+60h+paint.hdc]
push    eax
push    edx
push    edi
call    sub_444800
add     esp, 0ch
cmp     ds:frequency, 0
jnz     def_444f17
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
cmp     ds:dword_4a68c4, 0
jnz     def_444f17
mov     eax, 0bh
cmp     ebx, 1
adc     eax, 0ffffffffh
mov     [esp+60h+paint.hdc], eax
lea     eax, [esp+60h+paint]
push    eax
call    sub_422130
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
mov     ecx, 101h
cmp     edi, 105h
jz      short loc_4451e6
mov     ecx, edi
lea     eax, [esp+60h+paint]
push    eax
push    ebp
push    ebx
push    ecx
call    sub_459c30
lea     eax, [esp+70h+paint]
add     esp, 10h
push    eax
call    sub_436b70
add     esp, 4
cmp     ds:frequency, 0
jnz     def_444f17
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
sub     esp, 24h
push    esi
push    0
call    sub_422640
mov     [esp+2ch+var_24], 0eh
lea     eax, [esp+2ch+var_24]
add     esp, 4
push    eax
call    sub_422130
mov     esi, [esp+2ch+hwnd]
add     esp, 4
push    esi
call    sub_474c90
add     esp, 4
mov     dword_4ae830, 0
push    0
call    sub_40a9a0
add     esp, 4
push    esi
call    ds:destroywindow
pop     esi
add     esp, 24h
retn
call    ds:getactivewindow
sub     eax, ds:frequency
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
sub     esp, 260h
mov     ecx, ds:dword_4a8510
lea     eax, [esp+260h+appname]
push    esi
mov     [esp+264h+string], 0
push    105h
push    eax
push    ecx
call    sub_44f610
lea     ecx, [esp+270h+buffer]
add     esp, 0ch
push    70h
push    270h
push    50h
push    ecx
call    sub_47fe70
lea     ecx, [esp+274h+buffer]
lea     edx, [esp+274h+appname]
lea     eax, [esp+274h+string]
add     esp, 10h
push    offset windowname
push    ecx
push    edx
push    105h
push    eax
call    sub_4564c0
add     esp, 14h
cmp     [esp+264h+string], 0
jnz     loc_4453d2
lea     eax, [esp+264h+appname]
push    0
push    1a8ch
push    105h
push    eax
call    sub_47fe70
lea     eax, [esp+274h+buffer]
lea     ecx, [esp+274h+appname]
lea     edx, [esp+274h+string]
add     esp, 10h
push    offset windowname
push    eax
push    ecx
push    105h
push    edx
call    sub_4564c0
add     esp, 14h
cmp     [esp+264h+string], 0
jnz     short loc_4453d2
call    sub_44f2d0
mov     esi, eax
test    esi, esi
jnz     short loc_445379
xor     eax, eax
pop     esi
add     esp, 260h
retn
push    esi
call    sub_456730
lea     eax, [esp+268h+string]
add     esp, 4
push    105h
push    eax
push    esi
call    sub_44f520
add     esp, 0ch
push    esi
call    sub_44f4a0
lea     eax, [esp+268h+string]
add     esp, 4
push    eax
call    ds:lstrlena
movsx   ecx, ax
lea     eax, [ecx+0ah]
cmp     eax, 105h
jnb     short loc_4453d2
push    3
mov     eax, 105h
push    5e0h
sub     eax, ecx
lea     ecx, [esp+ecx+26ch+string]
push    eax
push    ecx
call    sub_47fe70
add     esp, 10h
cmp     ds:dword_4a8514, 0
jz      short loc_4453e9
mov     eax, ds:dword_4a8514
push    eax
call    sub_44f4a0
add     esp, 4
lea     eax, [esp+264h+string]
push    offset dword_4a8514
push    eax
call    sub_44f360
lea     eax, [esp+26ch+appname]
add     esp, 8
mov     ecx, ds:dword_4a8514
push    eax
push    ecx
call    sub_44f5b0
add     esp, 8
mov     ecx, ds:dword_4a8514
push    ecx
call    sub_43cfa0
add     esp, 4
mov     eax, 1
pop     esi
add     esp, 260h
retn
sub     esp, 1ch
push    ebx
push    esi
mov     bx, [esp+24h+arg_0]
push    edi
mov     edi, ds:frequency
mov     esi, ds:peekmessagea
test    bl, 1
jz      short loc_445464
lea     eax, [esp+28h+msg]
push    1
push    209h
push    200h
push    edi
push    eax
call    esi
test    eax, eax
jnz     short loc_44544c
test    bl, 2
jz      short loc_445481
lea     eax, [esp+28h+msg]
push    1
push    108h
push    100h
push    edi
push    eax
call    esi
test    eax, eax
jnz     short loc_445469
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
sub     esp, 40h
push    esi
push    edi
mov     esi, [esp+48h+msg]
lea     eax, [esi-0fh]
cmp     eax, 76h
ja      short def_4454a9
xor     ecx, ecx
mov     cl, ds:byte_445508[eax]
jmp     ds:jpt_4454a9[ecx*4]
lea     eax, [esp+48h+paint]
mov     edi, [esp+48h+hwnd]
push    eax
push    edi
call    ds:beginpaint
lea     eax, [esp+48h+paint]
push    eax
push    edi
call    ds:endpaint
jmp     short loc_4454dc
xor     eax, eax
pop     edi
pop     esi
add     esp, 40h
retn    10h
mov     edi, [esp+48h+hwnd]
mov     eax, [esp+48h+lparam]
mov     ecx, [esp+48h+wparam]
push    eax
push    ecx
push    esi
push    edi
call    ds:defwindowproca
pop     edi
pop     esi
add     esp, 40h
retn    10h
sub     esp, 38h
mov     ecx, ds:hinstance
lea     eax, [esp+38h+wndclass]
push    esi
push    eax
push    offset aapwcover
push    ecx
call    ds:getclassinfoa
test    eax, eax
jnz     short loc_4455f9
xor     esi, esi
mov     eax, ds:hinstance
mov     [esp+3ch+wndclass.style], esi
mov     [esp+3ch+wndclass.cbclsextra], esi
mov     [esp+3ch+wndclass.cbwndextra], esi
push    7f00h
mov     [esp+40h+wndclass.hinstance], eax
push    esi
mov     [esp+44h+wndclass.lpfnwndproc], offset sub_445490
mov     [esp+44h+wndclass.hicon], esi
call    ds:loadcursora
lea     ecx, [esp+3ch+wndclass]
mov     [esp+3ch+wndclass.hcursor], eax
mov     [esp+3ch+wndclass.hbrbackground], esi
push    ecx
mov     [esp+40h+wndclass.lpszclassname], offset aapwcover
mov     [esp+40h+wndclass.lpszmenuname], esi
call    ds:registerclassa
test    ax, ax
jnz     short loc_4455f9
xor     eax, eax
pop     esi
add     esp, 38h
retn
lea     eax, [esp+3ch+rect]
mov     ecx, [esp+3ch+hwnd]
push    eax
push    ecx
call    ds:getwindowrect
push    0
mov     ecx, ds:hinstance
mov     eax, [esp+40h+rect.bottom]
push    ecx
sub     eax, [esp+44h+rect.top]
push    0
push    0
inc     eax
mov     ecx, [esp+4ch+rect.top]
push    eax
mov     eax, [esp+50h+rect.right]
mov     edx, [esp+50h+rect.left]
sub     eax, [esp+50h+rect.left]
inc     eax
push    eax
push    ecx
push    edx
push    80000000h
push    offset windowname
push    offset aapwcover
push    0
call    ds:createwindowexa
mov     esi, eax
push    8
push    esi
call    ds:showwindow
mov     eax, esi
pop     esi
add     esp, 38h
retn
mov     ds:dword_4a9a0c, 0
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_470610
add     esp, 4
test    eax, eax
jz      short loc_4456bc
push    esi
call    sub_470640
add     esp, 4
test    eax, eax
jz      short loc_4456bc
mov     ecx, [esp+8+arg_c]
mov     edx, [esp+8+arg_8]
mov     edi, [esp+8+arg_4]
push    ecx
push    edx
mov     eax, [eax]
push    edi
push    eax
call    sub_45c8a0
add     esp, 10h
mov     edi, eax
push    0
push    esi
call    sub_470920
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
retn
cmp     ds:dword_4a9a0c, 0
jz      short loc_4456d8
mov     ecx, [esp+8+arg_4]
push    ecx
push    esi
push    offset afggetblock
call    sub_445660
add     esp, 0ch
mov     edx, [esp+8+arg_c]
mov     edi, [esp+8+arg_8]
and     edx, 0ffffh
xor     eax, eax
mov     ecx, edx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
push    edi
call    sub_470610
add     esp, 4
test    eax, eax
jz      short loc_445744
push    edi
call    sub_470640
add     esp, 4
test    eax, eax
jz      short loc_445744
mov     ecx, [esp+8+arg_4]
mov     eax, [eax]
push    ecx
push    eax
call    sub_45c870
mov     si, ax
add     esp, 8
push    0
push    edi
call    sub_470920
mov     ax, si
add     esp, 8
pop     edi
pop     esi
retn
xor     ax, ax
pop     edi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_470610
add     esp, 4
test    eax, eax
jz      short loc_44579e
push    esi
call    sub_470640
add     esp, 4
test    eax, eax
jz      short loc_44579e
mov     ecx, [esp+8+arg_c]
mov     edx, [esp+8+arg_8]
mov     edi, [esp+8+arg_4]
push    ecx
push    edx
mov     eax, [eax]
push    edi
push    eax
call    sub_45c990
mov     di, ax
add     esp, 10h
push    0
push    esi
call    sub_470920
mov     ax, di
add     esp, 8
pop     edi
pop     esi
retn
cmp     ds:dword_4a9a0c, 0
jz      short loc_4457ba
mov     ecx, [esp+8+arg_4]
push    ecx
push    esi
push    offset afggetstr
call    sub_445660
add     esp, 0ch
xor     ax, ax
mov     ecx, [esp+8+arg_8]
pop     edi
pop     esi
mov     byte ptr [ecx], 0
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+0ch+arg_0]
push    ebp
push    esi
call    sub_470610
add     esp, 4
test    eax, eax
jz      short loc_445823
push    esi
call    sub_470640
mov     di, [esp+14h+arg_4]
add     esp, 4
test    eax, eax
jz      short loc_445828
push    edi
push    eax
call    sub_45c920
add     esp, 8
mov     ebx, eax
push    0
push    esi
call    sub_470920
add     esp, 8
cmp     ebx, 0ffffffffh
jnz     short loc_445828
mov     ds:dword_4a9a0c, 8
xor     ebx, ebx
jmp     short loc_445828
mov     di, [esp+10h+arg_4]
cmp     ds:dword_4a9a0c, 0
jz      short loc_445840
push    edi
push    esi
push    offset afggethandg
call    sub_445660
add     esp, 0ch
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
mov     bp, [esp+14h+arg_c]
test    bp, bp
jnz     short loc_44587b
mov     eax, [esp+14h+arg_4]
mov     esi, [esp+14h+arg_0]
push    eax
push    esi
call    sub_445aa0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, [esp+14h+arg_0]
test    si, si
jz      loc_4459e0
cmp     word ptr [esp+14h+arg_4], 0
jz      loc_4459e0
push    esi
call    sub_470610
add     esp, 4
mov     ebx, eax
cmp     ebx, 1
sbb     edi, edi
neg     edi
test    edi, edi
jz      loc_445960
call    sub_45c800
mov     [esp+14h+hmem], eax
test    eax, eax
jnz     short loc_4458c8
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
call    sub_45c810
movsx   eax, ax
add     ebx, eax
movzx   eax, bp
lea     ecx, [ebx+eax+4]
push    ecx
push    esi
call    sub_470b70
add     esp, 8
test    eax, eax
jz      loc_4459aa
mov     ebx, [esp+14h+hmem]
push    1
mov     eax, [esp+18h+arg_8]
push    ebp
mov     ecx, [esp+1ch+arg_4]
push    eax
lea     edx, [esp+20h+hmem]
push    ecx
push    edx
call    sub_45ca20
add     esp, 14h
test    eax, eax
jz      short loc_445982
test    edi, edi
jnz     short loc_445929
cmp     ebx, [esp+14h+hmem]
jz      short loc_445929
mov     eax, [esp+14h+hmem]
push    eax
push    esi
call    sub_471150
add     esp, 8
test    eax, eax
jz      short loc_445982
mov     eax, [esp+14h+hmem]
mov     ecx, [eax]
push    ecx
call    sub_45c830
mov     ecx, [esp+18h+hmem]
add     esp, 4
push    eax
push    ecx
push    esi
call    sub_4709c0
add     esp, 0ch
test    eax, eax
jnz     short loc_4459aa
push    0
push    esi
call    sub_470920
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
call    sub_470640
mov     [esp+18h+hmem], eax
add     esp, 4
test    eax, eax
jnz     loc_4458d2
mov     eax, ds:dword_4a9a0c
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+14h+hmem]
mov     ecx, [eax]
push    ecx
call    sub_45c830
mov     ecx, [esp+18h+hmem]
add     esp, 4
push    eax
push    ecx
push    esi
call    sub_4709c0
mov     ds:dword_4a9a0c, 8
add     esp, 0ch
test    edi, edi
jz      short loc_4459c8
mov     eax, [esp+14h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, ds:dword_4a9a0c
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    0
push    esi
call    sub_470920
add     esp, 8
mov     eax, ds:dword_4a9a0c
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_470610
add     esp, 4
test    eax, eax
jz      short loc_445a35
push    esi
call    sub_470640
add     esp, 4
test    eax, eax
jz      short loc_445a35
mov     ecx, [esp+4+arg_8]
mov     edx, [esp+4+arg_4]
push    ecx
push    edx
push    eax
call    sub_45cb90
add     esp, 0ch
test    eax, eax
jnz     short loc_445a37
push    0
push    esi
call    sub_470920
add     esp, 8
xor     eax, eax
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    esi
call    sub_471110
mov     cx, word ptr [esp+10h+arg_4]
mov     ebx, [esp+10h+arg_8]
add     esp, 4
mov     edi, eax
mov     eax, [esp+0ch+arg_c]
push    eax
push    ebx
push    ecx
push    edi
call    sub_45cc20
add     esp, 10h
test    ebx, ebx
jz      short loc_445a83
push    esi
call    sub_470610
add     esp, 4
push    eax
push    edi
push    esi
call    sub_4709c0
add     esp, 0ch
push    0
push    esi
call    sub_470920
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    esi
call    sub_470610
add     esp, 4
test    eax, eax
jnz     short loc_445aba
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_470640
add     esp, 4
mov     edi, eax
cmp     ds:dword_4a9a0c, 0
jz      short loc_445ad7
mov     eax, ds:dword_4a9a0c
pop     edi
pop     esi
pop     ebx
retn
test    edi, edi
jnz     short loc_445ae1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     bx, [esp+0ch+arg_4]
mov     eax, [edi]
push    ebx
push    eax
call    sub_45c870
add     esp, 8
test    ax, ax
jz      short loc_445b2f
push    ebx
push    edi
call    sub_45cc50
add     esp, 8
push    edi
call    sub_45c850
add     esp, 4
test    eax, eax
jz      short loc_445b10
xor     edi, edi
mov     eax, 0
test    edi, edi
jz      short loc_445b24
mov     eax, [edi]
push    eax
call    sub_45c830
add     esp, 4
push    eax
push    edi
push    esi
call    sub_4709c0
add     esp, 0ch
push    0
push    esi
call    sub_470920
add     esp, 8
mov     eax, ds:dword_4a9a0c
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
mov     [esp+4+var_4], 0
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    esi
call    sub_470610
add     esp, 4
test    eax, eax
jnz     short loc_445b79
xor     ax, ax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
call    sub_470640
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_445b92
xor     ax, ax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
lea     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+arg_8]
mov     edx, [esp+10h+arg_4]
push    eax
push    ecx
push    edx
push    edi
call    sub_45cca0
mov     bx, ax
add     esp, 10h
cmp     [esp+10h+var_4], 0
jz      short loc_445bca
mov     eax, [edi]
push    eax
call    sub_45c830
add     esp, 4
push    eax
push    edi
push    esi
call    sub_4709c0
add     esp, 0ch
push    0
push    esi
call    sub_470920
mov     ax, bx
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     edx, [esp+arg_8]
mov     ecx, [esp+arg_c]
sub     edx, [esp+arg_0]
sub     ecx, [esp+arg_4]
push    ecx
push    edx
call    sub_445e60
add     esp, 8
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+arg_0]
lea     eax, [edi-32440h]
cmp     esi, eax
jge     short loc_445c39
mov     eax, edi
mov     ecx, 64880h
sub     eax, esi
sub     edx, edx
add     eax, 3243fh
div     ecx
lea     edx, [eax+eax*4]
lea     ecx, [edx+edx*4]
lea     ecx, [eax+ecx*8]
shl     ecx, 4
add     ecx, eax
shl     ecx, 7
add     esi, ecx
lea     eax, [edi+32440h]
cmp     esi, eax
jle     short loc_445c6a
mov     eax, esi
mov     ecx, 64880h
sub     eax, edi
sub     edx, edx
add     eax, 3243fh
div     ecx
lea     edx, [eax+eax*4]
lea     edi, [edx+edx*4]
lea     ecx, [eax+edi*8]
shl     ecx, 4
add     ecx, eax
shl     ecx, 7
neg     ecx
add     esi, ecx
mov     eax, esi
pop     edi
pop     esi
retn
fld     dbl_4adac8
fcomp   [esp+arg_0]
fnstsw  ax
test    ah, 41h
jz      short loc_445c87
mov     eax, 7fffffffh
retn
fld     dbl_4adac8
fchs
fcomp   [esp+arg_0]
fnstsw  ax
test    ah, 1
jnz     short loc_445ca0
mov     eax, 80000001h
retn
fld     [esp+arg_0]
fmul    ds:dbl_4ab0c8
jmp     __ftol
mov     edx, [esp+arg_4]
sub     esp, 10h
test    edx, edx
push    esi
mov     esi, 1
jge     short loc_445cc8
neg     edx
mov     esi, 0ffffffffh
mov     eax, [esp+14h+arg_0]
test    eax, eax
jge     short loc_445cd4
neg     esi
neg     eax
mov     [esp+14h+var_4], ax
mov     ecx, eax
mov     [esp+14h+var_6], dx
mov     eax, edx
shr     ecx, 10h
shr     eax, 10h
mov     [esp+14h+var_8], cx
mov     [esp+14h+var_a], ax
mov     [esp+14h+var_c], 0
mov     word ptr [esp+14h+var_10], 0
mov     ax, [esp+14h+var_4]
mul     [esp+14h+var_6]
mov     [esp+14h+var_2], ax
mov     word ptr [esp+14h+var_10+2], dx
mov     ax, [esp+14h+var_4]
mul     [esp+14h+var_a]
add     word ptr [esp+14h+var_10+2], ax
adc     word ptr [esp+14h+var_10], dx
adc     [esp+14h+var_c], 0
mov     ax, [esp+14h+var_8]
mul     [esp+14h+var_6]
add     word ptr [esp+14h+var_10+2], ax
adc     word ptr [esp+14h+var_10], dx
adc     [esp+14h+var_c], 0
mov     ax, [esp+14h+var_8]
mul     [esp+14h+var_a]
add     word ptr [esp+14h+var_10], ax
add     [esp+14h+var_c], dx
jnz     short loc_445d80
cmp     word ptr [esp+14h+var_10], 0
jb      short loc_445d80
mov     eax, [esp+14h+var_10]
mov     ecx, [esp+14h+var_10+2]
and     eax, 0ffffh
and     ecx, 0ffffh
shl     eax, 10h
add     eax, ecx
jmp     short loc_445d85
mov     eax, 7fffffffh
test    esi, esi
jge     short loc_445d8b
neg     eax
pop     esi
add     esp, 10h
retn    8
push    esi
mov     esi, [esp+4+arg_4]
test    esi, esi
jnz     short loc_445dbc
cmp     [esp+4+arg_0], 0
mov     eax, 7fffffffh
jge     short loc_445e1f
pop     esi
mov     eax, 80000000h
retn
mov     eax, [esp+4+arg_0]
mov     ecx, eax
and     ecx, 0ffff8000h
jz      short loc_445e19
cmp     ecx, 0ffff8000h
jz      short loc_445e19
mov     ecx, 1
test    eax, eax
jl      short loc_445ddd
xor     ecx, ecx
test    ecx, ecx
jz      short loc_445de3
neg     eax
test    esi, esi
jge     short loc_445df0
cmp     ecx, 1
sbb     ecx, ecx
neg     ecx
neg     esi
test    eax, 0ff000000h
jnz     short loc_445dff
shl     eax, 8
shr     esi, 8
jmp     short loc_445e02
shr     esi, 10h
test    esi, esi
jnz     short loc_445e0d
mov     eax, 7fffffffh
jmp     short loc_445e11
sub     edx, edx
div     esi
test    ecx, ecx
jz      short loc_445e1f
neg     eax
pop     esi
retn
shl     eax, 10h
cdq
idiv    esi
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 4
test    eax, eax
jg      short loc_445e41
xor     eax, eax
add     esp, 4
retn
mov     [esp+4+var_4], eax
fild    [esp+4+var_4]
fsqrt
call    __ftol
add     esp, 4
retn
fild    [esp+arg_0]
fild    [esp+arg_4]
sub     esp, 4
sub     esp, 8
pushf
cmp     dword_4af150, 0
jnz     short loc_445e7c
fpatan
jmp     short loc_445e81
call    unknown_libname_22
popf
fstp    [esp+0ch+var_c]
call    sub_445c70
add     esp, 0ch
retn
push    esi
mov     ecx, 64880h
mov     eax, [esp+4+arg_0]
push    edi
cdq
idiv    ecx
mov     esi, 1
test    edx, edx
jge     short loc_445eae
neg     edx
mov     esi, 0ffffffffh
cmp     edx, 32440h
jle     short loc_445ebe
neg     esi
sub     edx, 32440h
cmp     edx, 19220h
jle     short loc_445ed4
mov     eax, 32440h
sub     eax, edx
cmp     eax, 19220h
mov     edx, eax
jnz     short loc_445edd
mov     eax, 10000h
jmp     short loc_445f34
mov     edi, edx
sar     edi, 0ch
movzx   eax, di
lea     ecx, ds:0[eax*2]
xor     eax, eax
mov     ax, word_4adad0[ecx]
test    di, di
jnz     short loc_445f01
mov     ecx, 10000h
jmp     short loc_445f0d
mov     edi, offset byte_4adb04
sub     edi, ecx
xor     ecx, ecx
mov     cx, [edi]
and     edx, 0fffh
mov     edi, edx
imul    edi, ecx
imul    edx, edx
sar     edi, 10h
sar     edx, 0ah
add     eax, edi
imul    edx, eax
sar     edx, 10h
shl     edx, 6
lea     edx, [edx+edx*2]
sar     edx, 0dh
sub     eax, edx
test    esi, esi
jg      short loc_445f3a
neg     eax
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+dwbytes]
push    2
push    edi
call    sub_45b8f0
mov     esi, [esp+10h+arg_0]
add     esp, 8
test    eax, eax
mov     [esi], eax
jnz     short loc_445f67
xor     eax, eax
pop     edi
mov     dword ptr [esi+14h], 1
pop     esi
retn
push    eax
call    ds:globallock
xor     ecx, ecx
mov     [esi+4], eax
mov     eax, [esp+8+arg_8]
mov     [esi+8], ecx
mov     [esi+0ch], edi
mov     [esi+10h], eax
mov     eax, 1
pop     edi
mov     [esi+14h], ecx
pop     esi
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
push    ebp
cmp     dword ptr [ebx+14h], 0
jnz     loc_446026
mov     ebp, [esp+10h+arg_8]
cmp     [ebx+0ch], ebp
jnb     short loc_445ffe
mov     eax, [ebx]
push    eax
call    ds:globalunlock
mov     eax, [ebx+10h]
push    2
add     eax, [ebx+0ch]
mov     edx, [ebx]
add     eax, ebp
mov     [ebx+0ch], eax
add     eax, [ebx+8]
push    eax
push    edx
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jnz     short loc_445fed
mov     eax, [ebx]
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     dword ptr [ebx+14h], 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    eax
mov     [ebx], eax
call    ds:globallock
mov     ecx, [ebx+8]
add     ecx, eax
mov     [ebx+4], ecx
mov     edi, [ebx+4]
mov     esi, [esp+10h+arg_4]
mov     ecx, ebp
shr     ecx, 2
rep movsd
mov     ecx, ebp
and     ecx, 3
rep movsb
mov     eax, 1
add     [ebx+4], ebp
add     [ebx+8], ebp
sub     [ebx+0ch], ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+14h], 0
jz      short loc_446049
mov     eax, [esp+4+arg_4]
pop     esi
mov     dword ptr [eax], 0
xor     eax, eax
retn
mov     eax, [esi]
push    eax
call    ds:globalunlock
push    2
mov     ecx, [esi+8]
push    ecx
mov     edx, [esi]
push    edx
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jz      short loc_446069
mov     [esi], eax
mov     ecx, [esi+8]
mov     eax, [esp+4+arg_4]
mov     [eax], ecx
mov     eax, [esi]
pop     esi
retn
sub     esp, 4
mov     eax, [esp+4+arg_0]
push    ebx
push    esi
xor     ebx, ebx
push    edi
push    ebp
xor     edi, edi
push    eax
call    sub_408fc0
add     esp, 4
mov     ebp, eax
cmp     ebp, ebx
jz      short loc_4460df
push    ebp
call    sub_461150
add     esp, 4
mov     ebx, eax
cmp     ebx, edi
jz      short loc_4460df
push    1
push    ebx
call    sub_461210
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_4460df
push    edi
call    ds:globallock
mov     esi, eax
push    0
mov     eax, [esi+10h]
add     eax, esi
push    eax
call    sub_447110
mov     [esp+1ch+var_4], eax
add     esp, 8
test    eax, eax
jnz     short loc_44610f
test    ebx, ebx
jz      short loc_446104
test    edi, edi
jz      short loc_4460f9
push    edi
call    ds:globalunlock
push    1
push    ebx
call    sub_461230
add     esp, 8
push    0
push    ebx
call    sub_461190
add     esp, 8
xor     esi, esi
mov     edi, [esp+14h+arg_8]
jmp     loc_4461da
mov     eax, [esp+14h+hdc]
push    26h
push    eax
call    ds:getdevicecaps
test    ah, 1
mov     edi, [esp+14h+arg_8]
jz      short loc_446139
mov     word ptr [edi+0aah], 1
mov     word ptr [edi+0aeh], 2
jmp     short loc_44614b
mov     word ptr [edi+0aah], 0
mov     word ptr [edi+0aeh], 4
mov     ax, [edi+0aeh]
push    20505e0h
shl     ax, 8
push    ebp
mov     word ptr [edi+0b0h], 100h
mov     [edi+0b2h], ax
call    sub_462670
movzx   ecx, ax
add     esp, 8
mov     [edi+0a2h], ecx
push    2060780h
push    ebp
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     short loc_446198
or      byte ptr [edi+92h], 2
mov     eax, [esp+14h+var_4]
mov     [edi+9ah], ebx
mov     [edi+9eh], esi
mov     [edi+0cch], eax
mov     ecx, [esp+14h+arg_0]
mov     esi, 1
mov     dword ptr [edi+0d0h], 0ffffffffh
mov     dword ptr [edi+0d4h], 0
mov     word ptr [edi+0ach], 8
mov     [edi+0bch], ecx
test    esi, esi
jz      short loc_4461fb
mov     eax, [esp+14h+h]
push    eax
push    edi
call    sub_446210
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_4461fb
push    edi
call    sub_446f80
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 18h
push    ebx
push    esi
mov     esi, [esp+20h+arg_0]
push    edi
push    ebp
mov     edi, [esi+9eh]
mov     eax, [edi+10h]
add     eax, edi
mov     [esp+28h+var_18], eax
mov     ax, [esi+0b2h]
add     ax, 28h
movzx   ecx, ax
xor     eax, eax
mov     [esp+28h+var_8], ecx
mov     ax, [edi+4]
imul    eax, ecx
cmp     dword ptr [esi+0b8h], 0
mov     [esp+28h+dwbytes], eax
jnz     short loc_446272
push    42h
push    eax
call    sub_45b8f0
add     esp, 8
test    eax, eax
jz      loc_4463e2
push    eax
call    ds:globallock
mov     [esi+0b8h], eax
mov     ebx, [edi+1ah]
test    ebx, ebx
jz      short loc_446294
cmp     word ptr [esi+0aah], 1
jnz     short loc_446294
call    sub_40ae40
mov     [esp+28h+var_14], 1
cmp     eax, ebx
jz      short loc_44629c
mov     [esp+28h+var_14], 0
cmp     [esp+28h+var_14], 0
jz      short loc_4462a8
mov     eax, [edi+1eh]
jmp     short loc_4462ab
mov     eax, [edi+14h]
lea     ebx, [eax+edi]
mov     ebp, [esi+0b8h]
mov     ax, [edi+4]
cmp     ax, 5
jb      short loc_4462c2
mov     ax, 5
test    ax, ax
jz      short loc_446342
mov     [esp+28h+var_10], ax
mov     ecx, [esp+28h+var_8]
mov     [esp+28h+var_c], ecx
cmp     [esp+28h+var_14], 0
jz      short loc_446301
mov     ax, [esi+0b0h]
mov     ecx, [esp+28h+var_18]
push    eax
push    ecx
push    ebp
push    ebx
call    sub_4464a0
mov     ax, [edi+6]
add     esp, 10h
shr     ax, 1
movzx   ecx, ax
add     ebx, ecx
jmp     short loc_446337
mov     cx, [esi+0b0h]
mov     eax, [esp+28h+h]
mov     edx, [esp+28h+var_18]
push    eax
mov     ax, [esi+0aah]
dec     ax
cmp     ax, 1
sbb     eax, eax
neg     eax
push    eax
push    ecx
push    edx
push    ebp
push    ebx
call    sub_446510
add     esp, 18h
xor     eax, eax
mov     ax, [edi+6]
add     ebx, eax
add     ebp, [esp+28h+var_c]
dec     [esp+28h+var_10]
jnz     short loc_4462d4
mov     eax, [esi+0a2h]
cmp     eax, 1
jz      short loc_4463a4
test    eax, eax
jnz     short loc_44635a
test    byte ptr [esi+92h], 4
jz      short loc_4463a4
mov     eax, [esi+0a6h]
test    eax, eax
jz      short loc_446377
push    eax
call    sub_447180
mov     dword ptr [esi+0a6h], 0
add     esp, 4
mov     eax, [esi+0b4h]
test    eax, eax
jz      loc_446484
push    eax
call    ds:globalhandle
push    eax
call    sub_45ba00
mov     dword ptr [esi+0b4h], 0
add     esp, 4
jmp     loc_446484
cmp     dword ptr [esi+0a6h], 0
jnz     short loc_4463c6
mov     eax, [esp+28h+var_18]
push    1
push    eax
call    sub_447110
add     esp, 8
mov     [esi+0a6h], eax
test    eax, eax
jz      short loc_4463e2
cmp     dword ptr [esi+0b4h], 0
jnz     short loc_4463f9
mov     eax, [esp+28h+dwbytes]
push    42h
push    eax
call    sub_45b8f0
add     esp, 8
test    eax, eax
jnz     short loc_4463ec
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    eax
call    ds:globallock
mov     [esi+0b4h], eax
xor     bx, bx
mov     ebp, [edi+14h]
add     ebp, edi
mov     ecx, [esi+0b4h]
cmp     [edi+4], bx
mov     [esp+28h+var_c], ecx
jbe     short loc_446484
mov     eax, [esp+28h+var_8]
mov     [esp+28h+dwbytes], eax
cmp     bx, 5
jnb     short loc_44646c
mov     eax, [esi+0a2h]
mov     ecx, [esp+28h+h]
dec     eax
mov     edx, [esp+28h+var_18]
cmp     eax, 1
sbb     eax, eax
inc     eax
push    eax
xor     eax, eax
mov     ax, [esi+92h]
and     eax, 2
push    eax
push    ecx
mov     ax, [esi+0aah]
dec     ax
mov     cx, [esi+0b0h]
cmp     ax, 1
sbb     eax, eax
neg     eax
push    eax
push    ecx
mov     eax, [esp+3ch+var_c]
push    edx
push    eax
push    ebp
call    sub_446600
add     esp, 20h
inc     bx
xor     eax, eax
mov     ax, [edi+6]
mov     ecx, [esp+28h+dwbytes]
add     ebp, eax
add     [esp+28h+var_c], ecx
cmp     [edi+4], bx
ja      short loc_446419
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     ax, [esp+arg_c]
sub     esp, 228h
add     ax, ax
mov     ecx, 0ah
movzx   edx, ax
push    esi
push    edi
lea     edi, [esp+230h+var_228]
mov     esi, [esp+230h+arg_8]
rep movsd
lea     edi, [esp+230h+var_200]
mov     esi, [esp+230h+arg_0]
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
add     ax, 28h
lea     esi, [esp+230h+var_228]
movzx   eax, ax
mov     edi, [esp+230h+arg_4]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
pop     edi
pop     esi
add     esp, 228h
retn
sub     esp, 828h
push    ebx
push    esi
mov     bx, [esp+830h+arg_c]
push    edi
lea     edi, [esp+834h+var_828]
push    ebp
lea     ebp, ds:0[ebx*4]
mov     esi, [esp+838h+arg_0]
movzx   edx, bp
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
lea     edi, [esp+838h+var_428]
mov     esi, [esp+838h+arg_8]
mov     ecx, 0ah
rep movsd
cmp     [esp+838h+arg_10], 0
jz      short loc_4465b2
test    bx, bx
lea     ebp, ds:28h[ebx*2]
lea     esi, [esp+838h+var_828]
lea     edi, [esp+838h+var_400]
jz      short loc_4465cf
xor     ecx, ecx
xor     eax, eax
mov     cl, [esi+1]
mov     al, [esi+2]
shl     ecx, 8
mov     edx, [esp+838h+h]
or      ecx, eax
add     edi, 2
xor     eax, eax
mov     al, [esi]
add     esi, 4
shl     eax, 10h
or      ecx, eax
push    ecx
push    edx
call    ds:getnearestpaletteindex
dec     bx
mov     [edi-2], ax
jnz     short loc_44657b
jmp     short loc_4465cf
add     bp, 28h
lea     esi, [esp+838h+var_828]
lea     edi, [esp+838h+var_400]
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
lea     esi, [esp+838h+var_428]
mov     edi, [esp+838h+arg_4]
movzx   eax, bp
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
pop     ebp
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebx
add     esp, 828h
retn
sub     esp, 830h
push    ebx
push    esi
push    edi
push    ebp
xor     ebp, ebp
cmp     [esp+840h+arg_18], ebp
jz      short loc_44661c
mov     eax, 0ffffffh
jmp     short loc_446623
mov     ebp, 0ffffffh
xor     eax, eax
cmp     [esp+840h+arg_10], 0
mov     [esp+840h+var_82e+2], ebp
jz      short loc_446649
lea     ecx, [eax-0ffffffh]
cmp     ecx, 1
sbb     edx, edx
and     dx, 0ffh
mov     bx, dx
xor     bl, 0ffh
jmp     short loc_446659
mov     dx, word ptr [esp+840h+var_428]
mov     bx, word ptr [esp+840h+var_428]
mov     cx, [esp+840h+arg_c]
lea     edi, [esp+840h+var_828]
shl     cx, 2
mov     esi, [esp+840h+arg_0]
mov     word ptr [esp+840h+var_82e], cx
mov     ecx, [esp+840h+var_82e]
and     ecx, 0ffffh
mov     [esp+840h+var_428], ecx
shr     ecx, 2
rep movsd
mov     ecx, [esp+840h+var_428]
and     ecx, 3
rep movsb
lea     edi, [esp+840h+var_428]
mov     esi, [esp+840h+arg_8]
mov     ecx, 0ah
rep movsd
cmp     [esp+840h+arg_1c], 0
jz      loc_446761
lea     esi, [esp+840h+var_828]
lea     edi, [esp+840h+var_400]
cmp     [esp+840h+arg_10], 0
jz      short loc_44671c
cmp     [esp+840h+arg_c], 0
jz      loc_44678f
mov     ax, [esp+840h+arg_c]
mov     word ptr [esp+840h+var_82e+2], ax
xor     eax, eax
xor     ecx, ecx
mov     al, [esi+1]
mov     cl, [esi+2]
shl     eax, 8
or      eax, ecx
xor     ecx, ecx
mov     cl, [esi]
shl     ecx, 10h
mov     [edi], dx
or      eax, ecx
cmp     eax, ebp
jz      short loc_44670d
mov     [edi], bx
add     edi, 2
add     esi, 4
dec     word ptr [esp+840h+var_82e+2]
jnz     short loc_4466eb
jmp     short loc_44678f
cmp     [esp+840h+arg_c], 0
jz      short loc_44678f
mov     bx, [esp+840h+arg_c]
xor     ecx, ecx
xor     edx, edx
mov     cl, [esi+1]
mov     dl, [esi+2]
shl     ecx, 8
or      ecx, edx
xor     edx, edx
mov     dl, [esi]
shl     edx, 10h
or      ecx, edx
cmp     ecx, ebp
jnz     short loc_44674f
mov     [edi], eax
jmp     short loc_446755
mov     ecx, [esp+840h+var_82e+2]
mov     [edi], ecx
add     edi, 4
add     esi, 4
dec     bx
jnz     short loc_44672f
jmp     short loc_44678f
cmp     [esp+840h+arg_10], 0
jz      short loc_44677d
mov     word ptr [esp+840h+var_400], dx
mov     [esp+840h+var_202], bx
jmp     short loc_44678f
mov     ecx, [esp+840h+var_82e+2]
mov     [esp+840h+var_400], eax
mov     [esp+840h+var_4], ecx
cmp     [esp+840h+arg_10], 0
jz      short loc_4467aa
mov     cx, [esp+840h+arg_c]
lea     eax, ds:28h[ecx*2]
jmp     short loc_4467b3
mov     ax, word ptr [esp+840h+var_82e]
add     ax, 28h
lea     esi, [esp+840h+var_428]
mov     edi, [esp+840h+arg_4]
movzx   eax, ax
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
pop     ebp
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebx
add     esp, 830h
retn
sub     esp, 20h
push    ebx
push    esi
push    edi
mov     edi, [esp+2ch+hdc]
push    edi
call    sub_447190
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      loc_4468b3
push    ebx
call    sub_40ae90
mov     esi, [esp+30h+arg_4]
add     esp, 4
cmp     dword ptr [esi+0cch], 0
jz      loc_4468aa
push    ebx
push    esi
call    sub_446aa0
add     esp, 8
test    eax, eax
jnz     short loc_446834
mov     eax, [esp+2ch+arg_0]
push    8
push    eax
call    sub_422af0
add     esp, 8
cmp     [esp+2ch+arg_c], 0
jnz     short loc_446863
mov     cx, [esi+1ch]
lea     eax, [esp+2ch+rcsrc2]
push    eax
push    ecx
call    sub_474a40
lea     ecx, [esp+34h+rcsrc2]
lea     eax, [esp+34h+rcdst]
add     esp, 8
lea     edx, [esi+0ch]
push    ecx
push    edx
push    eax
call    ds:intersectrect
jmp     short loc_446880
lea     edx, [esi+0ch]
lea     ecx, [esp+2ch+rcdst]
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+4]
mov     [ecx+4], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
mov     eax, [esp+2ch+rcdst.right]
mov     ecx, [esp+2ch+rcdst.bottom]
sub     eax, [esp+2ch+rcdst.left]
sub     ecx, [esp+2ch+rcdst.top]
test    eax, eax
jz      short loc_4468aa
test    ecx, ecx
jz      short loc_4468aa
push    ecx
push    eax
lea     eax, [esp+34h+rcdst]
push    eax
push    ebx
push    edi
push    esi
call    sub_4471b0
add     esp, 18h
push    ebx
call    sub_4471a0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     eax, [esi+0a6h]
test    eax, eax
jz      short loc_4468e3
push    eax
call    sub_447180
mov     dword ptr [esi+0a6h], 0
add     esp, 4
mov     eax, [esi+0cch]
test    eax, eax
jz      short loc_446900
push    eax
call    sub_447180
mov     dword ptr [esi+0cch], 0
add     esp, 4
mov     eax, [esi+0b4h]
test    eax, eax
jz      short loc_446928
push    eax
mov     edi, ds:globalhandle
call    edi
push    eax
call    sub_45ba00
mov     dword ptr [esi+0b4h], 0
add     esp, 4
jmp     short loc_44692e
mov     edi, ds:globalhandle
mov     eax, [esi+0b8h]
test    eax, eax
jz      short loc_44694e
push    eax
call    edi
push    eax
call    sub_45ba00
mov     dword ptr [esi+0b8h], 0
add     esp, 4
cmp     dword ptr [esi+9ah], 0
jz      short loc_4469a1
mov     eax, [esi+9eh]
test    eax, eax
jz      short loc_446986
push    eax
call    edi
push    eax
call    ds:globalunlock
push    1
mov     eax, [esi+9ah]
push    eax
call    sub_461230
mov     dword ptr [esi+9eh], 0
add     esp, 8
push    0
mov     eax, [esi+9ah]
push    eax
call    sub_461190
mov     dword ptr [esi+9ah], 0
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 40h
lea     eax, [esp+40h+var_3c]
push    ebx
lea     ecx, [esp+44h+var_3e]
push    esi
lea     edx, [esp+48h+var_38]
push    edi
mov     esi, [esp+4ch+arg_0]
push    ebp
push    eax
push    ecx
lea     eax, [esp+58h+var_34]
push    edx
push    eax
push    esi
call    sub_447040
mov     edi, [esp+64h+lprcdst]
add     esp, 14h
xor     eax, eax
mov     [edi], eax
mov     [edi+4], eax
mov     [edi+8], eax
mov     [edi+0ch], eax
cmp     [esi+9ah], eax
jz      short loc_446a68
mov     esi, [esi+9eh]
test    esi, esi
jz      short loc_446a68
mov     ebx, [esp+50h+var_34]
mov     ebp, ds:unionrect
movsx   eax, [esp+50h+var_3e]
sub     ebx, eax
movsx   eax, [esp+50h+var_3e]
add     ebx, eax
cmp     [esp+50h+var_3c], ebx
jge     short loc_446a1e
mov     ebx, 1
test    ebx, ebx
jge     short loc_446a26
mov     ebx, [esp+50h+var_3c]
lea     eax, [esp+50h+var_20]
push    ebx
push    esi
push    eax
call    sub_446a70
movsx   eax, [esp+5ch+var_1e]
movsx   ecx, [esp+5ch+var_1c]
movsx   edx, [esp+5ch+var_1a]
mov     [esp+5ch+rcsrc2.left], eax
mov     [esp+5ch+rcsrc2.top], ecx
lea     ecx, [esp+5ch+rcsrc2]
mov     [esp+5ch+rcsrc2.right], edx
movsx   eax, [esp+5ch+var_18]
mov     [esp+5ch+rcsrc2.bottom], eax
add     esp, 0ch
push    ecx
push    edi
push    edi
call    ebp
cmp     [esp+50h+var_38], ebx
jnz     short loc_446a0c
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     ecx, [esp+arg_4]
push    esi
mov     eax, [esp+4+arg_8]
push    edi
shl     eax, 5
mov     edx, [ecx+8]
add     edx, eax
mov     edi, [esp+8+arg_0]
lea     esi, [edx+ecx]
mov     ecx, 8
rep movsd
pop     edi
pop     esi
retn
sub     esp, 474h
push    ebx
push    esi
mov     ebx, [esp+47ch+arg_0]
push    edi
push    ebp
cmp     dword ptr [ebx+9ah], 0
jz      loc_446f6f
cmp     dword ptr [ebx+9eh], 0
jz      loc_446f6f
mov     eax, [ebx+34h]
test    eax, eax
jz      loc_446f6f
mov     ecx, [ebx+0d0h]
cmp     [ebx+46h], ecx
jnz     short loc_446af1
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 474h
retn
mov     [esp+484h+hmem], 0
push    eax
call    ds:globallock
cmp     word ptr [ebx+0aah], 1
mov     ebp, [ebx+9eh]
mov     [esp+484h+var_460], eax
jnz     short loc_446b26
xor     eax, eax
mov     ax, [ebx+0b0h]
lea     ecx, ds:28h[eax*2]
jmp     short loc_446b36
xor     eax, eax
mov     ax, [ebx+0b0h]
lea     ecx, ds:28h[eax*4]
lea     eax, [esp+484h+var_458]
lea     edx, [esp+484h+var_454]
mov     [esp+484h+var_45c], ecx
push    eax
lea     ecx, [esp+488h+var_472]
lea     eax, [esp+488h+var_450]
push    ecx
push    edx
push    eax
push    ebx
call    sub_447040
mov     eax, [esp+498h+var_450]
add     esp, 14h
movsx   ecx, [esp+484h+var_472]
sub     eax, ecx
mov     [esp+484h+var_470], eax
movsx   eax, [esp+484h+var_472]
add     [esp+484h+var_470], eax
mov     ecx, [esp+484h+var_470]
cmp     [esp+484h+var_458], ecx
jge     short loc_446b81
mov     [esp+484h+var_470], 1
cmp     [esp+484h+var_470], 0
jge     short loc_446b90
mov     eax, [esp+484h+var_458]
mov     [esp+484h+var_470], eax
mov     eax, [esp+484h+var_470]
lea     ecx, [esp+484h+var_448]
push    eax
push    ebp
push    ecx
call    sub_446a70
mov     ecx, [esp+490h+var_43c]
add     esp, 0ch
mov     edx, [ebx+9ah]
push    ecx
push    edx
call    sub_461210
mov     [esp+48ch+var_468], eax
add     esp, 8
test    eax, eax
jz      loc_446f20
push    eax
call    ds:globallock
add     eax, [esp+484h+var_43c+2]
cmp     dword ptr [ebx+0a6h], 0
mov     [esp+484h+lpbits], eax
jz      loc_446d8d
xor     eax, eax
xor     esi, esi
mov     ax, [esp+484h+var_43e]
mov     si, [ebx+0b2h]
add     esi, 28h
imul    esi, eax
add     esi, [ebx+0b4h]
cmp     dword ptr [esi], 0
jnz     short loc_446c61
xor     ecx, ecx
mov     edi, [ebp+10h]
mov     cx, [ebp+6]
add     edi, ebp
imul    ecx, eax
add     ecx, [ebp+14h]
add     ecx, ebp
mov     [esp+484h+h], ecx
call    sub_40ae50
mov     ecx, [ebx+0a2h]
mov     edx, [esp+484h+h]
dec     ecx
cmp     ecx, 1
sbb     ecx, ecx
inc     ecx
push    ecx
xor     ecx, ecx
mov     cx, [ebx+92h]
and     ecx, 2
push    ecx
push    eax
mov     ax, [ebx+0aah]
dec     ax
mov     cx, [ebx+0b0h]
cmp     ax, 1
sbb     eax, eax
neg     eax
push    eax
push    ecx
push    edi
push    esi
push    edx
call    sub_446600
add     esp, 20h
mov     eax, [esp+484h+var_45c]
lea     edi, [esp+484h+bmi]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
cmp     dword ptr [ebx+0a2h], 1
jnz     short loc_446ce1
mov     eax, [esp+484h+var_432]
mov     ecx, [ebx+9ah]
push    eax
push    ecx
call    sub_461210
mov     [esp+48ch+hmem], eax
add     esp, 8
test    eax, eax
jz      loc_446f20
push    eax
call    ds:globallock
mov     ecx, [esp+484h+var_432+2]
add     ecx, eax
mov     eax, [esp+484h+var_42c]
mov     [esp+484h+bmi.bmiheader.bisizeimage], eax
test    [esp+484h+var_448], 2
mov     [esp+484h+bmi.bmiheader.bibitcount], 8
mov     [esp+484h+bmi.bmiheader.biclrused], 100h
jz      short loc_446d23
mov     ax, [ebx+0ach]
sub     ax, 8
cmp     ax, 1
sbb     eax, eax
add     eax, 2
jmp     short loc_446d1d
mov     ecx, [esp+484h+lpbits]
mov     eax, [esp+484h+var_436]
mov     [esp+484h+bmi.bmiheader.bisizeimage], eax
xor     eax, eax
mov     dx, [ebx+0ach]
mov     [esp+484h+bmi.bmiheader.bibitcount], dx
mov     ax, [ebx+0b0h]
mov     [esp+484h+bmi.bmiheader.biclrused], eax
test    [esp+484h+var_448], 1
jz      short loc_446d23
cmp     word ptr [ebx+0ach], 1
mov     eax, 2
adc     eax, 0ffffffffh
mov     [esp+484h+bmi.bmiheader.bicompression], eax
jmp     short loc_446d2b
mov     [esp+484h+bmi.bmiheader.bicompression], 0
lea     eax, [esp+484h+bmi]
push    eax
push    ecx
mov     ecx, [esp+48ch+var_460]
mov     eax, [ebx+0a6h]
movsx   edx, word ptr [ecx+12h]
mov     ecx, [esp+48ch+hdc]
push    edx
push    eax
push    ecx
push    ebx
call    sub_447540
add     esp, 18h
test    eax, eax
jz      loc_446f20
cmp     [esp+484h+hmem], 0
jz      short loc_446d88
mov     eax, [esp+484h+hmem]
push    eax
call    ds:globalunlock
mov     eax, [esp+484h+var_432]
mov     ecx, [ebx+9ah]
push    eax
push    ecx
call    sub_461230
mov     [esp+48ch+hmem], 0
add     esp, 8
call    sub_43e170
xor     esi, esi
xor     eax, eax
mov     si, [ebx+0b2h]
mov     ax, [esp+484h+var_43e]
add     esi, 28h
imul    esi, eax
add     esi, [ebx+0b8h]
cmp     dword ptr [esi], 0
jnz     loc_446e49
mov     edi, [ebp+10h]
call    sub_40ae50
add     edi, ebp
mov     [esp+484h+h], eax
cmp     dword ptr [ebp+1ah], 0
jz      short loc_446e09
cmp     word ptr [ebx+0aah], 1
jnz     short loc_446e09
call    sub_40ae40
cmp     eax, [ebp+1ah]
jnz     short loc_446e09
mov     ax, [ebp+6]
xor     ecx, ecx
shr     ax, 1
mov     cx, [esp+484h+var_43e]
movzx   eax, ax
imul    eax, ecx
mov     cx, [ebx+0b0h]
add     eax, [ebp+1eh]
add     eax, ebp
push    ecx
push    edi
push    esi
push    eax
call    sub_4464a0
add     esp, 10h
jmp     short loc_446e49
xor     eax, eax
xor     ecx, ecx
mov     ax, [ebp+6]
mov     edx, [esp+484h+h]
mov     cx, [esp+484h+var_43e]
push    edx
imul    eax, ecx
mov     dx, [ebx+0b0h]
add     eax, [ebp+14h]
lea     ecx, [eax+ebp]
mov     ax, [ebx+0aah]
dec     ax
cmp     ax, 1
sbb     eax, eax
neg     eax
push    eax
push    edx
push    edi
push    esi
push    ecx
call    sub_446510
add     esp, 18h
mov     eax, [esp+484h+var_45c]
lea     edi, [esp+484h+bmi]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     ecx, [esp+484h+var_436]
mov     [esp+484h+bmi.bmiheader.bisizeimage], ecx
test    [esp+484h+var_448], 1
jz      short loc_446e84
cmp     word ptr [ebx+0ach], 1
mov     eax, 2
adc     eax, 0ffffffffh
mov     [esp+484h+bmi.bmiheader.bicompression], eax
jmp     short loc_446e8c
mov     [esp+484h+bmi.bmiheader.bicompression], 0
lea     eax, [esp+484h+bmi]
mov     ecx, [esp+484h+lpbits]
mov     edx, [esp+484h+var_460]
push    eax
movsx   eax, word ptr [edx+12h]
mov     edx, [esp+488h+hdc]
push    ecx
push    eax
mov     ecx, [ebx+0cch]
push    ecx
push    edx
push    ebx
call    sub_447540
add     esp, 18h
test    eax, eax
jz      short loc_446f20
cmp     [esp+484h+var_468], 0
jz      short loc_446ee1
mov     eax, [esp+484h+var_468]
push    eax
call    ds:globalunlock
mov     eax, [esp+484h+var_43c]
mov     ecx, [ebx+9ah]
push    eax
push    ecx
call    sub_461230
add     esp, 8
call    sub_43e170
mov     eax, [esp+484h+var_470]
cmp     [esp+484h+var_454], eax
jnz     loc_446b66
mov     eax, [ebx+46h]
mov     esi, 1
mov     [ebx+0d0h], eax
cmp     [esp+484h+var_460], 0
jz      short loc_446f13
mov     eax, [ebx+34h]
push    eax
call    ds:globalunlock
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 474h
retn
xor     esi, esi
cmp     [esp+484h+var_468], esi
jz      short loc_446f47
mov     eax, [esp+484h+var_468]
push    eax
call    ds:globalunlock
mov     eax, [esp+484h+var_43c]
mov     ecx, [ebx+9ah]
push    eax
push    ecx
call    sub_461230
add     esp, 8
cmp     [esp+484h+hmem], 0
jz      short loc_446f02
mov     eax, [esp+484h+hmem]
push    eax
call    ds:globalunlock
mov     eax, [esp+484h+var_432]
mov     ecx, [ebx+9ah]
push    eax
push    ecx
call    sub_461230
add     esp, 8
jmp     short loc_446f02
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 474h
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+arg_0]
push    edi
mov     edi, [esi+9eh]
mov     eax, [esi+34h]
push    eax
call    ds:globallock
movsx   ebx, word ptr [eax+14h]
mov     eax, [esi+34h]
push    eax
call    ds:globalunlock
mov     ecx, [esi+4ah]
test    ebx, ebx
jz      short loc_446fb0
inc     ecx
mov     eax, [esi+46h]
inc     eax
cmp     ecx, eax
jge     short loc_446fb9
inc     eax
push    eax
push    edi
lea     eax, [esp+34h+var_20]
push    eax
call    sub_446a70
mov     eax, [esp+38h+var_14]
add     esp, 0ch
mov     ecx, [esi+9ah]
push    eax
push    ecx
call    sub_461210
mov     ecx, [esp+34h+var_14]
add     esp, 8
mov     edx, [esi+9ah]
push    ecx
push    edx
call    sub_461230
add     esp, 8
cmp     dword ptr [esi+0a6h], 0
jz      short loc_44702a
cmp     dword ptr [esi+0a2h], 1
jnz     short loc_44702a
mov     eax, [esp+2ch+var_a]
mov     ecx, [esi+9ah]
push    eax
push    ecx
call    sub_461210
mov     ecx, [esp+34h+var_a]
add     esp, 8
mov     edx, [esi+9ah]
push    ecx
push    edx
call    sub_461230
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
sub     esp, 24h
push    ebx
push    esi
mov     ebx, [esp+2ch+arg_0]
push    edi
push    ebp
mov     edi, [ebx+9eh]
mov     eax, [ebx+34h]
mov     ebp, ds:globallock
push    eax
call    ebp
movsx   ecx, word ptr [eax+14h]
mov     eax, [ebx+34h]
mov     ebp, ds:globalunlock
mov     [esp+34h+var_24], ecx
push    eax
call    ebp
cmp     [esp+34h+var_24], 0
mov     esi, [ebx+4ah]
jz      short loc_44707c
inc     esi
mov     ebp, [ebx+46h]
lea     eax, [esp+34h+var_20]
push    ebp
push    edi
dec     ebp
push    eax
call    sub_446a70
add     esp, 0ch
test    [esp+34h+var_20], 40h
jnz     short loc_4470a2
cmp     [ebx+0d0h], ebp
jz      short loc_4470a2
test    ebp, ebp
jge     short loc_44707f
inc     ebp
mov     ecx, [ebx+46h]
jnz     short loc_4470c2
cmp     [esp+34h+var_24], 0
jz      short loc_4470c2
mov     eax, [ebx+0d0h]
test    eax, eax
jle     short loc_4470c2
lea     ebp, [eax+1]
test    ecx, ecx
jnz     short loc_4470c2
mov     ecx, esi
mov     eax, [esp+34h+arg_4]
mov     edx, [esp+34h+arg_8]
mov     [eax], ebp
mov     eax, [esp+34h+arg_10]
mov     [edx], ecx
mov     ecx, [esp+34h+arg_c]
mov     word ptr [ecx], 1
pop     ebp
pop     edi
mov     [eax], esi
pop     esi
pop     ebx
add     esp, 24h
retn
jmp     sub_4473b0
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+0ch+arg_4]
cmp     edi, esi
jz      short loc_44712e
cmp     ds:dword_4a6bb8, esi
jz      short loc_44712e
push    esi
call    ds:createcompatibledc
jmp     short loc_447136
push    0
call    ds:getdc
mov     ebx, eax
test    ebx, ebx
jz      short loc_447176
mov     eax, [esp+0ch+arg_0]
movsx   ecx, word ptr [eax+8]
movsx   edx, word ptr [eax+4]
push    ecx
push    edx
push    ebx
call    ds:createcompatiblebitmap
mov     esi, eax
test    edi, edi
jz      short loc_44716d
cmp     ds:dword_4a6bb8, 0
jz      short loc_44716d
push    ebx
call    ds:deletedc
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    0
call    ds:releasedc
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+ho]
push    eax
call    ds:deleteobject
retn
mov     eax, [esp+hdc]
push    eax
call    ds:createcompatibledc
retn
mov     eax, [esp+hdc]
push    eax
call    ds:deletedc
retn
sub     esp, 14h
push    ebx
push    esi
mov     esi, [esp+1ch+arg_0]
push    edi
push    ebp
test    byte ptr [esi+92h], 4
jz      loc_447255
mov     eax, [esi+0cch]
mov     ebx, [esp+24h+hdc]
push    eax
push    ebx
call    ds:selectobject
mov     edi, [esp+24h+arg_4]
push    3
mov     [esp+28h+h], eax
push    edi
call    ds:setbkmode
mov     [esp+24h+mode], eax
xor     eax, eax
mov     ax, [esi+92h]
and     eax, 2
push    eax
push    edi
call    ds:setbkcolor
push    0cc0020h
cmp     eax, 1
sbb     ebp, ebp
mov     eax, [esp+28h+arg_c]
and     ebp, 0ffffffh
mov     ecx, [eax+4]
mov     edx, [eax]
mov     eax, ecx
sub     eax, [esi+10h]
push    eax
mov     eax, edx
sub     eax, [esi+0ch]
mov     esi, [esp+2ch+cy]
push    eax
push    ebx
mov     eax, [esp+34h+arg_10]
push    esi
push    eax
push    ecx
push    edx
push    edi
call    ds:bitblt
mov     eax, [esp+24h+mode]
push    eax
push    edi
call    ds:setbkmode
push    ebp
push    edi
call    ds:setbkcolor
jmp     loc_447390
mov     eax, [esi+0a2h]
test    eax, eax
jz      short loc_44728d
cmp     eax, 1
jz      short loc_44728d
cmp     eax, 3
jnz     short loc_44727b
mov     ebp, 0cc0020h
mov     edi, [esp+24h+arg_4]
mov     ebx, [esp+24h+hdc]
jmp     loc_447354
mov     ebp, 990066h
mov     edi, [esp+24h+arg_4]
mov     ebx, [esp+24h+hdc]
jmp     loc_447354
mov     eax, [esi+0a6h]
mov     ebx, [esp+24h+hdc]
push    eax
push    ebx
call    ds:selectobject
test    byte ptr [esi+92h], 2
mov     [esp+24h+h], eax
jz      short loc_4472bb
mov     [esp+24h+rop], 8800c6h
mov     ebp, 0ee0086h
jmp     short loc_4472c8
mov     [esp+24h+rop], 0ee0086h
mov     ebp, 8800c6h
mov     edi, [esp+24h+arg_4]
push    0
push    edi
call    ds:settextcolor
mov     [esp+24h+color], eax
push    0ffffffh
push    edi
call    ds:setbkcolor
mov     [esp+24h+var_8], eax
push    2
push    edi
call    ds:setbkmode
mov     [esp+24h+mode], eax
mov     eax, [esp+24h+arg_c]
mov     ecx, [eax+4]
mov     edx, [eax]
mov     eax, [esp+24h+rop]
push    eax
mov     eax, ecx
sub     eax, [esi+10h]
push    eax
mov     eax, edx
sub     eax, [esi+0ch]
push    eax
push    ebx
mov     eax, [esp+34h+cy]
push    eax
mov     eax, [esp+38h+arg_10]
push    eax
push    ecx
push    edx
push    edi
call    ds:bitblt
mov     ecx, [esp+24h+color]
push    ecx
push    edi
call    ds:settextcolor
mov     ecx, [esp+24h+var_8]
push    ecx
push    edi
call    ds:setbkcolor
mov     ecx, [esp+24h+mode]
push    ecx
push    edi
call    ds:setbkmode
mov     ecx, [esp+24h+h]
push    ecx
push    ebx
call    ds:selectobject
mov     eax, [esi+0cch]
push    eax
push    ebx
call    ds:selectobject
mov     [esp+24h+h], eax
push    ebp
mov     eax, [esp+28h+arg_c]
mov     ecx, [eax+4]
mov     edx, [eax]
mov     eax, ecx
mov     ebp, [esp+28h+cy]
sub     eax, [esi+10h]
push    eax
mov     eax, edx
sub     eax, [esi+0ch]
mov     esi, [esp+2ch+arg_10]
push    eax
push    ebx
push    ebp
push    esi
push    ecx
push    edx
push    edi
call    ds:bitblt
test    ebx, ebx
jz      short loc_4473a7
cmp     [esp+24h+h], 0
jz      short loc_4473a7
mov     eax, [esp+24h+h]
push    eax
push    ebx
call    ds:selectobject
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 220h
mov     ds:dword_4a6bb8, 0
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
xor     edi, edi
push    esi
call    ds:createcompatibledc
cmp     eax, esi
mov     ebx, eax
jz      loc_4474f7
push    esi
mov     ebp, 10h
push    1
push    1
push    ebp
push    ebp
call    ds:createbitmap
cmp     eax, edi
mov     esi, eax
jz      loc_4474f7
push    42h
push    428h
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      loc_44750b
push    edi
call    ds:globallock
mov     dword ptr [eax], 28h
mov     ecx, 100h
mov     [eax+4], ebp
mov     [eax+8], ebp
mov     word ptr [eax+0ch], 1
mov     word ptr [eax+0eh], 8
mov     dword ptr [eax+10h], 1
mov     dword ptr [eax+14h], 220h
mov     dx, 80h
mov     [eax+20h], ecx
mov     [eax+24h], ecx
lea     ecx, [eax+28h]
mov     dword ptr [ecx], 0
add     ecx, 4
mov     dword ptr [ecx], 0ffffffh
add     ecx, 4
dec     dx
jnz     short loc_44744d
xor     cx, cx
lea     ebp, [esp+230h+bits]
mov     dx, cx
mov     byte ptr [ebp+0], 1
mov     [ebp+1], cl
inc     ebp
inc     ebp
and     dl, 0fh
cmp     dl, 0fh
jnz     short loc_447488
mov     byte ptr [ebp+0], 0
inc     ebp
mov     byte ptr [ebp+0], 0
inc     ebp
inc     cx
cmp     cx, 100h
jb      short loc_44746a
mov     byte ptr [ebp-1], 1
push    0
push    eax
lea     eax, [esp+238h+bits]
mov     ebp, ds:setdibits
push    eax
push    10h
push    0
push    esi
push    ebx
call    ebp
test    eax, eax
jz      short loc_4474f7
lea     eax, [esp+230h+bits]
mov     ebp, ds:getbitmapbits
push    eax
push    20h
push    esi
call    ebp
test    eax, eax
jz      short loc_4474f7
xor     dx, dx
lea     ecx, [esp+230h+bits]
mov     eax, ecx
inc     ecx
cmp     byte ptr [eax], 55h
jnz     short loc_4474f7
inc     dx
cmp     dx, 20h
jb      short loc_4474ca
call    sub_4892e0
mov     ds:dword_4a6bb8, 0
test    eax, eax
jnz     short loc_4474f7
mov     ds:dword_4a6bb8, 1
test    edi, edi
jz      short loc_44750b
push    edi
call    ds:globalunlock
push    edi
call    sub_45ba00
add     esp, 4
test    esi, esi
jz      short loc_447516
push    esi
call    ds:deleteobject
test    ebx, ebx
jz      short loc_447521
push    ebx
call    ds:deletedc
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 220h
retn
push    esi
push    3
mov     esi, [esp+8+hdc]
push    esi
call    ds:setstretchbltmode
xor     ecx, ecx
mov     eax, [esp+4+arg_0]
mov     cx, [eax+0aah]
mov     edx, [esp+4+lpbmi]
mov     eax, [esp+4+lpbits]
push    ecx
mov     ecx, [esp+8+clines]
push    edx
mov     edx, [esp+0ch+hbm]
push    eax
push    ecx
push    0
push    edx
push    esi
call    ds:setdibits
pop     esi
retn
mov     eax, offset dword_4a6bc0
retn
push    esi
mov     ecx, 10ch
mov     esi, [esp+4+arg_0]
push    edi
mov     edi, offset dword_4a6bc0
rep movsd
pop     edi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+14h+lpstring]
push    ebp
call    sub_447590
mov     ebx, [esp+18h+arg_0]
add     esp, 4
push    ebp
push    ebx
call    sub_447a00
add     esp, 8
push    ebx
call    sub_447a50
add     esp, 4
test    eax, eax
jnz     short loc_4475e9
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [ebp+39eh]
cmp     eax, 0ffffffffh
jz      loc_44791a
cmp     dword ptr [ebp+3a2h], 0ffffffffh
jz      loc_44791a
mov     [ebx+0eh], eax
mov     ecx, [ebp+39eh]
mov     [ebx+12h], ecx
test    ecx, ecx
mov     eax, [ebp+3a2h]
mov     [ebx+16h], eax
mov     dx, [ebp+3a6h]
mov     [ebx+1ah], dx
mov     si, [ebp+3a8h]
mov     [ebx+1ch], si
jnz     short loc_447647
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
mov     [ebx+12h], eax
mov     [ebx+0eh], eax
mov     eax, [ebx+12h]
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jnz     short loc_447661
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebp
call    sub_47fa80
add     esp, 4
mov     [ebx+1eh], eax
test    eax, eax
jnz     short loc_44767b
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
lea     eax, [ebp+19ah]
push    eax
call    sub_47fa80
add     esp, 4
mov     [ebx+26h], eax
test    eax, eax
jnz     short loc_44769b
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     dword ptr [ebp+420h], 0
jz      short loc_4476d9
lea     eax, [ebp+402h]
lea     edi, [ebx+4ah]
mov     esi, eax
mov     ecx, 7
rep movsd
movsw
mov     esi, 1
push    eax
mov     dword ptr [ebx+68h], 1
call    sub_48f430
mov     dword ptr [ebp+420h], 0
add     esp, 4
jmp     short loc_4476ee
lea     eax, [ebx+4ah]
push    0
push    4
push    eax
call    sub_48e770
add     esp, 0ch
mov     esi, eax
mov     [ebx+68h], eax
mov     word ptr [ebx+8], 0ffffh
xor     ecx, ecx
mov     [ebx+0ah], cx
mov     [ebx+8ah], ecx
mov     [ebx+0ch], cx
mov     [ebx+0c2h], ecx
mov     [ebx], ecx
mov     [ebx+96h], ecx
mov     [ebx+9ah], ecx
mov     eax, [ebp+3aah]
mov     [ebx+32h], eax
mov     edx, [ebp+3aeh]
mov     [ebx+36h], edx
mov     edi, [ebp+3b2h]
mov     [ebx+3ah], edi
mov     eax, [ebp+3b6h]
mov     [ebx+3eh], eax
mov     edx, [ebp+3bah]
mov     [ebx+2eh], edx
mov     edi, [ebp+3c2h]
mov     [ebx+42h], edi
mov     eax, [ebp+3beh]
mov     [ebx+46h], eax
mov     edx, [ebp+3deh]
mov     [ebx+2e8h], edx
mov     [ebx+8eh], ecx
mov     eax, [ebp+39ah]
sub     eax, 6
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     [ebx+92h], eax
mov     edx, [ebp+3c6h]
mov     [ebx+0b2h], edx
mov     edi, [ebp+3cah]
mov     [ebx+0b6h], edi
mov     ax, [ebp+3ceh]
mov     [ebx+0bah], ax
mov     dx, [ebp+3d0h]
mov     [ebx+0bch], dx
mov     edi, [ebp+3d2h]
mov     [ebx+0deh], cx
mov     [ebx+0beh], edi
mov     [ebx+0ceh], ecx
mov     [ebx+2f4h], ecx
mov     eax, [ebp+3deh]
mov     [ebx+2e8h], eax
mov     edx, [ebp+3e6h]
mov     [ebx+300h], cx
mov     [ebx+2f8h], edx
mov     edi, [ebp+3eah]
mov     [ebx+2fch], edi
mov     eax, [ebp+3e2h]
mov     [ebx+2ech], eax
test    eax, eax
jz      short loc_447819
mov     dword ptr [ebx+2f0h], 1
jmp     short loc_44782d
mov     dword ptr [ebx+2f0h], 0
mov     dword ptr [ebx+2f4h], 0
xor     edi, edi
push    edi
call    sub_454f70
add     esp, 4
mov     [ebx+0e0h], eax
mov     [esp+14h+var_2], 1
lea     eax, [esp+14h+var_2]
mov     ecx, [ebx+12h]
push    eax
push    offset sub_447930
push    1
push    ecx
call    sub_4620e0
mov     cx, [esp+24h+var_2]
add     esp, 10h
mov     [ebx+326h], cx
mov     edx, [ebp+3eeh]
mov     [ebx+30ah], edx
mov     eax, [ebp+3f2h]
mov     [ebx+30eh], eax
mov     ecx, [ebp+3f6h]
mov     [ebx+312h], ecx
mov     edx, [ebp+3fah]
mov     [ebx+316h], edx
mov     eax, [ebp+3feh]
mov     [ebx+328h], di
mov     [ebx+306h], eax
mov     dword ptr [ebx+322h], 7d0h
call    ds:gettickcount
mov     [ebx+31eh], eax
mov     ecx, [ebp+424h]
mov     [ebx+32eh], ecx
mov     edx, [ebp+428h]
mov     [ebx+336h], edx
mov     eax, [ebp+42ch]
mov     [ebx+360h], di
mov     [ebx+36ah], eax
mov     [ebx+36eh], di
mov     [ebx+366h], edi
mov     eax, esi
pop     ebp
mov     [ebx+332h], edi
mov     [ebx+33ah], edi
mov     dword ptr [ebx+362h], 0ffffffffh
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
inc     word ptr [eax]
mov     eax, 1
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+0ch+arg_0]
push    ebp
mov     edi, [esp+10h+arg_4]
mov     [esi], ebx
mov     [esi+4], ebx
mov     [esi+31ah], ebx
cmp     dword ptr [esi+30ah], 0
jnz     short loc_44796b
call    sub_488f20
test    eax, eax
jnz     short loc_4479d8
cmp     dword ptr [esi+2eh], 0
lea     ebp, [esi+12h]
jnz     short loc_4479a3
cmp     dword ptr [ebp+0], 0
jz      short loc_4479b5
push    edi
push    esi
call    sub_447b40
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_4479b5
cmp     word ptr [esi+8], 0ffffh
jnz     short loc_4479b5
mov     eax, [edi+39ah]
push    eax
push    esi
call    sub_448800
add     esp, 8
jmp     short loc_4479b5
cmp     dword ptr [ebp+0], 0
jz      short loc_4479b5
push    edi
push    esi
call    sub_447ba0
add     esp, 8
mov     ebx, eax
cmp     dword ptr [esi+31ah], 1
jz      short loc_4479e2
test    ebx, ebx
jz      short loc_4479e2
mov     eax, [ebp+0]
test    eax, eax
jz      short loc_4479e2
push    eax
call    sub_461f70
add     esp, 4
test    eax, eax
jz      short loc_447959
jmp     short loc_4479e2
mov     dword ptr [esi+31ah], 0ffffffffh
mov     eax, ebx
pop     ebp
pop     edi
or      [esi+0ceh], ebx
mov     dword ptr [esi+322h], 32h
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
xor     edi, edi
push    esi
call    sub_447a70
add     esp, 4
mov     [esi], edi
mov     eax, [esi+0e0h]
mov     [esi+96h], edi
mov     [esi+4], edi
mov     [esi+0c2h], edi
mov     word ptr [esi+8], 0ffffh
test    eax, eax
jz      short loc_447a42
push    edi
push    eax
call    sub_454fd0
add     esp, 8
mov     [esi+0e0h], edi
pop     edi
pop     esi
retn
push    edi
xor     eax, eax
mov     edi, [esp+4+arg_0]
mov     ecx, 1dbh
rep stosd
stosw
mov     eax, 1
pop     edi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     eax, [esi+1eh]
test    eax, eax
jz      short loc_447a8d
push    eax
call    sub_45ba00
mov     dword ptr [esi+1eh], 0
add     esp, 4
mov     eax, [esi+33eh]
test    eax, eax
jz      short loc_447aaa
push    eax
call    sub_45ba00
mov     dword ptr [esi+33eh], 0
add     esp, 4
mov     eax, [esi+26h]
test    eax, eax
jz      short loc_447ac1
push    eax
call    sub_45ba00
mov     dword ptr [esi+26h], 0
add     esp, 4
cmp     dword ptr [esi+68h], 0
jz      short loc_447ae7
lea     edi, [esi+4ah]
push    edi
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_447ae0
push    edi
call    sub_48e7d0
add     esp, 4
mov     dword ptr [esi+68h], 0
cmp     dword ptr [esi+8ah], 0
jz      short loc_447b13
lea     edi, [esi+6ch]
push    edi
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_447b09
push    edi
call    sub_48e7d0
add     esp, 4
mov     dword ptr [esi+8ah], 0
cmp     dword ptr [esi+36ah], 0
jz      short loc_447b38
add     esi, 342h
push    esi
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_447b38
push    esi
call    sub_48e7d0
add     esp, 4
pop     edi
pop     esi
retn
push    ebx
push    esi
push    edi
mov     esi, ds:gettickcount
mov     edi, [esp+0ch+arg_0]
push    ebp
mov     ebx, [esp+10h+arg_4]
push    edi
call    sub_448420
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_447b98
mov     eax, [ebx+39ah]
push    eax
push    edi
call    sub_448800
add     esp, 8
test    eax, eax
jz      short loc_447b98
cmp     dword ptr [edi+30ah], 0
jz      short loc_447b52
call    esi
sub     eax, [edi+31eh]
cmp     eax, [edi+322h]
jbe     short loc_447b52
mov     dword ptr [edi+31ah], 1
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+0ch+arg_0]
push    ebp
cmp     [esi+8ah], ebx
jnz     short loc_447c1c
lea     edi, [esi+6ch]
push    ebx
push    4
push    edi
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_447bcc
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     dword ptr [esi+8ah], 1
mov     eax, [esi+12h]
push    eax
push    edi
call    sub_448ac0
mov     ebp, [esp+18h+arg_4]
add     esp, 8
mov     eax, [ebp+39ah]
push    eax
push    esi
call    sub_448800
add     esp, 8
test    eax, eax
jz      short loc_447c1c
mov     eax, [esi+12h]
push    eax
push    edi
call    sub_448ac0
add     esp, 8
mov     eax, [ebp+39ah]
push    eax
push    esi
call    sub_448800
add     esp, 8
test    eax, eax
jnz     short loc_447bfb
lea     edi, [esi+6ch]
xor     ebp, ebp
cmp     word ptr [esi+8], 0ffffh
jnz     short loc_447c34
push    edi
call    sub_448ae0
add     esp, 4
mov     [esi+12h], eax
cmp     [esi+12h], ebp
jz      short loc_447c6e
push    esi
call    sub_448420
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_447c6e
cmp     [esi+30ah], ebp
jz      short loc_447c21
call    ds:gettickcount
sub     eax, [esi+31eh]
cmp     eax, [esi+322h]
jbe     short loc_447c21
mov     dword ptr [esi+31ah], 1
cmp     dword ptr [esi+12h], 0
jnz     short loc_447c87
push    edi
call    sub_48e7d0
mov     dword ptr [esi+8ah], 0
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
xor     ecx, ecx
mov     word ptr [eax+8], 0ffffh
mov     [eax+0ah], cx
mov     [eax+0ch], cx
mov     [eax+0deh], cx
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_447c90
add     esp, 4
mov     dword ptr [esi+0c2h], 0
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_447c90
add     esp, 4
mov     word ptr [esi+0cah], 0
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
mov     ebx, [esp+18h+lpstring]
push    edi
push    ebp
push    ebx
mov     ebp, ebx
call    ds:lstrlena
movsx   ecx, ax
mov     [esp+20h+var_4], 0
lea     esi, [ecx+ebx]
mov     edi, [esp+20h+arg_0]
mov     dx, [edi+1ch]
test    dx, dx
jz      short loc_447d3f
cmp     [edi+8], dx
jge     loc_448019
cmp     ax, dx
jle     short loc_447d34
movsx   ecx, dx
lea     esi, [ecx+ebx]
mov     ecx, [esp+20h+arg_0]
mov     [ecx+2e4h], ax
cmp     byte ptr [ebx], 0
jz      loc_448019
mov     ecx, [esp+20h+arg_0]
mov     dx, [ecx+8]
cmp     dx, 0ffffh
jz      short loc_447d5b
movsx   eax, dx
jmp     short loc_447d6b
mov     ecx, [esp+20h+arg_0]
mov     ax, [ecx+1ah]
test    ax, ax
jz      short loc_447d6d
movsx   eax, ax
add     ebx, eax
mov     ecx, [esp+20h+arg_0]
cmp     dword ptr [ecx+2eh], 0
jz      loc_447e90
mov     [esp+20h+var_8], 0
cmp     dx, 0ffffh
jnz     short loc_447d8d
mov     ebx, esi
jmp     short loc_447d99
cmp     ebp, ebx
jnz     short loc_447d9b
mov     [esp+20h+var_8], 1
cmp     ebp, ebx
ja      loc_448019
cmp     [esp+20h+var_8], 0
jnz     loc_448019
mov     ecx, [esp+20h+arg_0]
cmp     dword ptr [ecx+46h], 0
jz      short loc_447dfe
cmp     ebp, ebx
jnb     short loc_447dfe
push    ebx
call    sub_45b850
add     esp, 4
test    eax, eax
jz      short loc_447dd9
mov     eax, ebx
sub     eax, ebp
cmp     eax, 1
jle     short loc_447dd3
dec     ebx
jmp     short loc_447dd5
mov     ebx, ebp
cmp     ebp, ebx
jb      short loc_447dba
cmp     ebp, ebx
jnb     short loc_447dfe
mov     eax, ebx
lea     edi, [ebx-1]
sub     eax, ebp
cmp     eax, 1
jg      short loc_447deb
mov     edi, ebp
push    edi
call    sub_45b850
add     esp, 4
test    eax, eax
jnz     short loc_447dfe
mov     ebx, edi
cmp     edi, ebp
ja      short loc_447ddd
mov     ecx, [esp+20h+arg_0]
push    0
push    0
mov     edx, [ecx+22h]
cmp     dword ptr [ecx+42h], 1
sbb     eax, eax
neg     eax
push    eax
push    edx
push    esi
push    ebx
call    sub_45b290
add     esp, 18h
mov     edi, eax
test    edi, edi
jz      short loc_447e3c
mov     ecx, [esp+20h+arg_0]
cmp     dword ptr [ecx+46h], 0
jz      short loc_447e5f
push    edi
push    ebx
push    ebp
call    sub_45b890
add     esp, 0ch
test    eax, eax
jnz     short loc_447e5f
cmp     ebp, ebx
jz      loc_448019
mov     eax, ebx
sub     eax, ebp
cmp     eax, 1
jle     short loc_447e50
dec     ebx
jmp     short loc_447e52
mov     ebx, ebp
cmp     ebp, ebx
jbe     loc_447da1
jmp     loc_448019
mov     [esp+20h+var_4], 1
mov     eax, ebx
sub     eax, ebp
cmp     eax, 1
jle     short loc_447e73
dec     ebx
jmp     short loc_447e75
mov     ebx, ebp
sub     ebx, ebp
mov     ecx, [esp+20h+arg_0]
mov     [ecx+8], bx
sub     edi, ebp
dec     di
mov     [ecx+0ah], ax
mov     [ecx+0ch], di
jmp     loc_448019
cmp     esi, ebx
jbe     loc_448019
mov     ecx, [esp+20h+arg_0]
push    0
push    0
mov     edx, [ecx+22h]
cmp     dword ptr [ecx+42h], 1
sbb     eax, eax
neg     eax
push    eax
push    edx
push    esi
push    ebx
call    sub_45b290
mov     [esp+38h+var_c], eax
add     esp, 18h
test    eax, eax
jz      short loc_447ede
mov     ecx, [esp+20h+arg_0]
cmp     dword ptr [ecx+46h], 0
jz      short loc_447f14
push    eax
push    ebx
push    ebp
call    sub_45b890
add     esp, 0ch
test    eax, eax
jnz     short loc_447f14
cmp     [esp+20h+var_c], esi
jnb     short loc_447f14
mov     ecx, [esp+20h+arg_0]
cmp     dword ptr [ecx+46h], 0
jz      short loc_447f02
mov     edi, ebx
cmp     esi, ebx
jbe     short loc_447f0b
push    edi
call    sub_45b850
add     esp, 4
test    eax, eax
jnz     short loc_447f02
mov     ebx, edi
inc     edi
cmp     edi, esi
jb      short loc_447eee
cmp     esi, ebx
jbe     loc_448019
inc     ebx
cmp     esi, ebx
ja      short loc_447e98
jmp     loc_448019
mov     ecx, [esp+20h+arg_0]
mov     [esp+20h+var_4], 1
cmp     dword ptr [ecx+46h], 0
jz      loc_447fff
mov     eax, [ecx+22h]
push    eax
call    sub_448fa0
add     esp, 4
test    eax, eax
jz      loc_447fff
mov     [esp+20h+var_10], ebx
cmp     byte ptr [ebx], 0
jz      short loc_447f65
mov     eax, [esp+20h+var_10]
push    eax
call    sub_45b7b0
add     esp, 4
test    eax, eax
jz      short loc_447f65
inc     [esp+20h+var_10]
mov     eax, [esp+20h+var_10]
cmp     byte ptr [eax], 0
jnz     short loc_447f47
mov     ebx, [esp+20h+var_10]
cmp     ebx, esi
jnz     short loc_447f7a
mov     [esp+20h+var_4], 0
jmp     loc_448019
mov     [esp+20h+var_8], 0
mov     esi, [esp+20h+var_c]
sub     esi, [esp+20h+var_10]
test    esi, esi
jle     short loc_447fb2
mov     eax, [esp+20h+var_10]
cmp     byte ptr [eax], 0
jz      short loc_447fb2
push    eax
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_447fb2
inc     [esp+20h+var_10]
inc     [esp+20h+var_8]
cmp     esi, [esp+20h+var_8]
jg      short loc_447f8e
cmp     [esp+20h+var_8], 200h
jl      short loc_447fc4
mov     [esp+20h+var_8], 1ffh
mov     eax, [esp+20h+var_8]
mov     edi, [esp+20h+arg_0]
add     edi, 0e4h
mov     esi, ebx
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, [esp+20h+var_8]
mov     ecx, [esp+20h+arg_0]
mov     edx, [esp+20h+var_10]
mov     byte ptr [ecx+eax+0e4h], 0
cmp     byte ptr [edx], 0
jz      short loc_447fff
mov     [esp+20h+var_c], edx
mov     eax, [esp+20h+var_c]
mov     ecx, [esp+20h+arg_0]
sub     eax, ebp
sub     ebx, ebp
mov     [ecx+8], ax
dec     ax
mov     [ecx+0ah], bx
mov     [ecx+0ch], ax
cmp     [esp+20h+var_4], 0
jnz     short loc_448034
cmp     [esp+20h+arg_8], 0
jz      short loc_448034
mov     ecx, [esp+20h+arg_0]
push    ecx
call    sub_447cb0
add     esp, 4
mov     eax, [esp+20h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
xor     edi, edi
mov     eax, [esi+0c2h]
test    eax, eax
jz      short loc_44805f
cmp     eax, 2
jnz     loc_448184
cmp     dword ptr [esi+36h], 0
jnz     short loc_448075
push    esi
call    sub_447cb0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esi+12h]
push    eax
call    sub_462480
add     esp, 4
cmp     dword ptr [esi+0c2h], 2
jz      short loc_448093
mov     word ptr [esi+0cah], 0
cmp     ax, 1
jz      short loc_4480a3
cmp     ax, 4
jnz     loc_448177
xor     ebx, ebx
cmp     [esi+306h], ebx
jz      short loc_4480ca
push    2030204h
mov     eax, [esi+12h]
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4480ca
mov     ebx, 0ffffffffh
jmp     short loc_4480ef
cmp     dword ptr [esi+46h], 0
jz      short loc_4480ef
mov     ecx, [esi+0e0h]
test    ecx, ecx
jz      short loc_4480ef
push    0
mov     eax, [esi+22h]
push    eax
mov     edx, [esi+12h]
push    edx
push    ecx
call    sub_4550d0
add     esp, 10h
mov     ebx, eax
test    ebx, ebx
jl      loc_448177
cmp     dword ptr [esi+30eh], 0
jnz     short loc_44811b
cmp     dword ptr [esi+46h], 0
jz      short loc_44811b
test    ebx, ebx
jle     short loc_448177
mov     dword ptr [esi+0c2h], 2
mov     edi, 1
jmp     short loc_448177
mov     eax, [esi+12h]
push    eax
call    sub_408e30
add     esp, 4
mov     ebx, eax
push    ebx
call    sub_470640
mov     [esp+18h+hmem], eax
add     esp, 4
test    eax, eax
jz      short loc_448177
mov     eax, ebx
push    offset sub_448bf0
shr     eax, 10h
push    esi
movsx   ecx, ax
mov     edx, [esp+1ch+hmem]
push    ecx
push    edx
call    sub_448b50
add     esp, 10h
mov     edi, eax
test    edi, edi
jz      short loc_44816c
push    esi
lea     eax, [esi+0e4h]
push    eax
call    sub_448f00
add     esp, 8
push    0
push    ebx
call    sub_470920
add     esp, 8
test    edi, edi
jnz     short loc_448184
push    esi
call    sub_447cb0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    ebp
xor     edi, edi
cmp     [esi+3eh], edi
jz      loc_4482a5
mov     eax, [esi+0c2h]
mov     [esp+18h+var_8], edi
test    eax, eax
jz      short loc_4481bd
cmp     eax, 4
jnz     loc_4482a5
lea     eax, [esp+18h+var_8]
push    1
push    eax
mov     ecx, [esi+12h]
push    ecx
call    sub_455730
mov     [esp+24h+hmem], eax
add     esp, 0ch
test    eax, eax
jz      loc_448286
push    eax
call    ds:globallock
cmp     dword ptr [esi+0c2h], 4
mov     ebx, eax
jz      short loc_4481f7
mov     word ptr [esi+0cch], 0
xor     ebp, ebp
cmp     [esi+0cch], bp
jle     short loc_448223
push    ebx
call    ds:lstrlena
inc     eax
add     ebx, eax
sub     [esp+18h+var_8], eax
cmp     [esp+18h+var_8], 0
jle     short loc_448223
movsx   eax, word ptr [esi+0cch]
inc     ebp
cmp     eax, ebp
jg      short loc_448202
xor     ebp, ebp
cmp     [esp+18h+var_8], ebp
jle     short loc_44826e
mov     word ptr [esi+8], 0ffffh
push    1
push    ebx
push    esi
call    sub_447cf0
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     short loc_448253
push    ebx
call    ds:lstrlena
inc     eax
add     ebx, eax
sub     [esp+18h+var_8], eax
jmp     short loc_448263
push    esi
lea     eax, [esi+0e4h]
push    eax
call    sub_448f00
add     esp, 8
inc     word ptr [esi+0cch]
test    edi, edi
jz      short loc_448225
mov     eax, [esp+18h+hmem]
push    eax
call    ds:globalunlock
mov     ecx, [esp+18h+hmem]
push    ecx
call    sub_45ba00
add     esp, 4
test    edi, edi
jnz     short loc_44829b
push    esi
call    sub_447cb0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     dword ptr [esi+0c2h], 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebx
push    esi
push    edi
push    42h
movsx   edi, [esp+10h+arg_8]
lea     eax, [edi+1]
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
push    esi
call    ds:globallock
movsx   edx, [esp+0ch+arg_4]
add     edx, [esp+0ch+arg_0]
push    edi
push    edx
push    eax
call    _memcpy
add     esp, 0ch
push    esi
call    ds:globalunlock
cmp     [esp+0ch+arg_10], 0
mov     edi, [esp+0ch+arg_c]
jz      short loc_4482fe
push    edi
call    sub_447cd0
add     esp, 4
push    esi
mov     eax, [edi+1eh]
push    eax
call    sub_45bc50
add     esp, 8
test    eax, eax
jz      short loc_448355
mov     eax, [edi+0e0h]
test    eax, eax
jz      short loc_448324
push    0
push    eax
call    sub_454fd0
add     esp, 8
mov     eax, [edi+1eh]
push    eax
call    sub_45ba00
add     esp, 4
push    esi
call    sub_45bab0
add     esp, 4
mov     [edi+1eh], eax
push    0
call    sub_454f70
add     esp, 4
mov     [edi+0e0h], eax
push    edi
call    sub_447cb0
add     esp, 4
push    esi
call    sub_45ba00
add     esp, 4
mov     ebx, [edi+12h]
push    edi
call    sub_448770
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_448379
push    edi
call    sub_447cb0
add     esp, 4
mov     eax, esi
mov     [edi+12h], ebx
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_10]
sub     esp, 8
mov     ecx, [esp+8+arg_8]
push    ebx
push    esi
push    edi
mov     esi, [esp+14h+arg_c]
push    eax
mov     ax, [esp+18h+arg_4]
push    esi
mov     edx, [esp+1ch+arg_0]
push    ecx
push    eax
push    edx
call    sub_4482b0
add     esp, 14h
mov     ebx, eax
test    ebx, ebx
jz      short loc_44840c
cmp     dword ptr [esi+4], 2
jnz     short loc_44840c
mov     eax, [esi+12h]
push    eax
call    sub_408e30
add     esp, 4
mov     edi, eax
push    edi
call    sub_470640
mov     [esp+18h+hmem], eax
add     esp, 4
test    eax, eax
jz      short loc_44840c
mov     eax, edi
push    offset sub_448d90
shr     eax, 10h
push    esi
movsx   ecx, ax
mov     edx, [esp+1ch+hmem]
push    ecx
push    edx
call    sub_448b50
add     esp, 10h
mov     ebx, eax
push    0
push    edi
call    sub_470920
add     esp, 8
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 794h
push    ebx
push    esi
mov     ebx, [esp+79ch+arg_0]
push    edi
push    ebp
xor     ebp, ebp
cmp     [ebx+32eh], ebp
jz      loc_448752
cmp     [ebx+332h], ebp
jnz     short loc_448486
mov     eax, [ebx+1eh]
push    eax
call    sub_45bab0
add     esp, 4
mov     [ebx+33eh], eax
cmp     [ebx+36ah], ebp
jz      short loc_44847c
lea     eax, [ebx+342h]
push    ebp
mov     word ptr [ebx+360h], 1
push    4
push    eax
call    sub_48e770
add     esp, 0ch
mov     dword ptr [ebx+366h], 0
mov     eax, [ebx+33eh]
push    eax
call    ds:globallock
cmp     dword ptr [ebx+33ah], 0
mov     [esp+7a4h+var_794], eax
jnz     loc_448704
cmp     dword ptr [ebx+332h], 0
jnz     short loc_4484ca
lea     eax, [ebx+36eh]
mov     ecx, [esp+7a4h+var_794]
push    eax
push    ecx
call    sub_403b70
add     esp, 8
test    ax, ax
jnz     loc_448709
mov     dword ptr [ebx+332h], 1
mov     eax, [ebx+12h]
cmp     [ebx+362h], eax
jz      loc_4485c9
lea     edi, [esp+7a4h+var_770]
mov     esi, ebx
mov     ecx, 1dbh
push    ebx
rep movsd
movsw
push    offset sub_448390
lea     eax, [ebx+36eh]
mov     ecx, [esp+7ach+var_794]
push    offset sub_4482b0
push    eax
push    ecx
call    sub_404120
add     esp, 14h
mov     ebp, eax
test    ebp, ebp
jz      loc_4485c9
cmp     dword ptr [ebx+36ah], 0
jz      loc_4485b7
lea     esi, [esp+7a4h+var_770]
mov     edi, ebx
mov     ecx, 1dbh
rep movsd
movsw
lea     eax, [ebx+342h]
push    eax
call    sub_48e800
add     esp, 4
lea     eax, [ebx+342h]
lea     ecx, [ebx+36eh]
push    eax
mov     edx, [esp+7a8h+var_794]
push    ebx
push    offset sub_448390
push    offset sub_4482b0
push    ecx
lea     esi, [ebx+342h]
push    edx
call    sub_4040f0
lea     edi, [esp+7bch+var_790]
add     esp, 18h
mov     ebp, eax
mov     ecx, 7
rep movsd
movsw
lea     esi, [esp+7a4h+var_770]
mov     edi, ebx
mov     ecx, 1dbh
rep movsd
movsw
lea     esi, [esp+7a4h+var_790]
lea     edi, [ebx+342h]
mov     ecx, 7
rep movsd
movsw
mov     word ptr [ebx+360h], 1
mov     edx, [ebx+12h]
mov     [ebx+362h], edx
jmp     short loc_4485c9
cmp     dword ptr [ebx+0c2h], 0
jz      short loc_4485c9
push    ebx
call    sub_447cb0
add     esp, 4
cmp     dword ptr [ebx+36ah], 0
jz      loc_4486f0
mov     eax, [ebx+12h]
cmp     [ebx+362h], eax
jnz     loc_4486f0
lea     esi, [ebx+342h]
push    esi
call    sub_48e830
add     esp, 4
test    eax, eax
jz      loc_4486e8
movsx   ecx, word ptr [ebx+360h]
cmp     ecx, eax
jg      loc_4486e8
mov     dword ptr [ebx+366h], 1
push    esi
call    sub_48f140
add     esp, 4
movsx   eax, word ptr [ebx+360h]
push    eax
push    esi
call    sub_48f1d0
add     esp, 8
mov     edi, eax
push    esi
call    sub_48f1a0
movsx   eax, word ptr [edi+2]
add     esp, 4
inc     eax
push    42h
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
push    esi
call    ds:globallock
movsx   ecx, word ptr [edi+2]
push    ecx
movsx   ecx, word ptr [edi]
add     ecx, [esp+7a8h+var_794]
push    ecx
push    eax
call    _memcpy
add     esp, 0ch
push    esi
call    ds:globalunlock
push    esi
mov     ecx, [ebx+1eh]
push    ecx
call    sub_45bc50
add     esp, 8
test    eax, eax
jz      short loc_4486be
mov     eax, [ebx+1eh]
push    eax
call    sub_45ba00
add     esp, 4
push    esi
call    sub_45bab0
add     esp, 4
mov     [ebx+1eh], eax
mov     eax, [ebx+0e0h]
test    eax, eax
jz      short loc_4486ae
push    0
push    eax
call    sub_454fd0
add     esp, 8
push    0
call    sub_454f70
add     esp, 4
mov     [ebx+0e0h], eax
push    ebx
call    sub_448770
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_4486dd
push    ebx
call    sub_447cd0
inc     word ptr [ebx+360h]
add     esp, 4
push    esi
call    sub_45ba00
add     esp, 4
jmp     short loc_4486f0
xor     ebp, ebp
mov     [ebx+366h], ebp
mov     eax, [ebx+12h]
test    ebp, ebp
mov     [ebx], eax
jnz     short loc_448738
push    ebx
call    sub_447cb0
add     esp, 4
jmp     short loc_448738
mov     ax, [esp+7a4h+var_770]
cmp     dword ptr [ebx+33ah], 0
jnz     short loc_448736
cmp     dword ptr [ebx+336h], 0
jz      short loc_44872c
movsx   eax, ax
push    eax
push    0e8h
call    sub_45c150
add     esp, 8
mov     dword ptr [ebx+33ah], 1
xor     ebp, ebp
mov     eax, [ebx+33eh]
push    eax
call    ds:globalunlock
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 794h
retn
push    ebx
call    sub_448770
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 794h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
xor     ebx, ebx
mov     [esi+0e4h], bl
cmp     [esi+12h], ebx
jz      short loc_4487db
mov     eax, [esi+1eh]
push    eax
call    ds:globallock
mov     [esi+22h], eax
cmp     [eax], bl
jz      short loc_4487bb
push    esi
cmp     [esi+2eh], ebx
jnz     short loc_4487aa
call    sub_448040
add     esp, 4
push    esi
call    sub_448190
jmp     short loc_4487b8
call    sub_448190
add     esp, 4
push    esi
call    sub_448040
add     esp, 4
mov     eax, [esi+1eh]
push    eax
call    ds:globalunlock
mov     dword ptr [esi+22h], 0
mov     eax, [esi+0c2h]
cmp     eax, 1
mov     [esi+4], eax
sbb     ebx, ebx
inc     ebx
test    ebx, ebx
jz      short loc_4487e9
mov     eax, [esi+12h]
mov     [esi], eax
mov     eax, ebx
pop     esi
pop     ebx
retn
mov     eax, ebx
mov     dword ptr [esi], 0
pop     esi
pop     ebx
retn
sub     esp, 14h
push    ebx
push    esi
mov     esi, [esp+1ch+arg_0]
push    edi
push    ebp
xor     edi, edi
lea     ebx, [esi+4ah]
mov     [esp+24h+var_c], edi
mov     [esp+24h+var_14], edi
mov     [esp+24h+var_10], edi
cmp     [esi+366h], edi
jz      short loc_448831
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
inc     word ptr [esi+328h]
mov     ecx, [esi+2f8h]
mov     byte ptr [esi+0e4h], 0
test    ecx, ecx
jz      short loc_44887d
cmp     dword ptr [esi+2e8h], 0
jnz     short loc_44887d
mov     ax, [esi+300h]
inc     ax
mov     [esi+300h], ax
push    eax
push    ecx
call    sub_4759f0
add     esp, 8
mov     [esi+12h], eax
cmp     eax, 1
pop     ebp
sbb     eax, eax
pop     edi
inc     eax
pop     esi
pop     ebx
add     esp, 14h
retn
test    ebx, ebx
jz      loc_448aad
mov     eax, [esi+12h]
test    eax, eax
jz      loc_44897b
push    eax
call    sub_461cc0
add     esp, 4
mov     edi, eax
mov     eax, [esi+12h]
push    3
push    eax
call    sub_461d30
mov     [esp+2ch+var_14], eax
add     esp, 8
mov     eax, [esi+12h]
push    4
push    eax
call    sub_461d30
mov     [esp+2ch+var_10], eax
add     esp, 8
mov     eax, [esi+12h]
push    eax
call    sub_461c50
mov     [esp+28h+var_c], eax
add     esp, 4
cmp     word ptr [esi+1ah], 0
jnz     short loc_4488dd
cmp     word ptr [esi+1ch], 0
jz      short loc_4488df
xor     edi, edi
cmp     dword ptr [esi+8eh], 0
jnz     short loc_4488f4
mov     eax, [esi+12h]
cmp     [esi+16h], eax
jnz     loc_44897b
cmp     [esp+24h+arg_4], 9
jnz     short loc_448905
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
cmp     [esp+24h+var_c], 0
jnz     short loc_448938
test    edi, edi
jnz     short loc_448938
push    ebx
call    sub_48e830
add     esp, 4
test    eax, eax
jz      short loc_44892e
push    ebx
call    sub_448ae0
add     esp, 4
mov     [esi+12h], eax
jmp     loc_448a8a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
cmp     dword ptr [esi+16h], 0
jz      short loc_44897b
cmp     dword ptr [esi+306h], 0
jz      short loc_448951
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, edi
test    edi, edi
jnz     short loc_44895b
mov     eax, [esp+24h+var_c]
push    eax
call    sub_461f70
add     esp, 4
test    eax, eax
jz      short loc_448971
cmp     [esi+16h], eax
jnz     short loc_44895b
test    eax, eax
jnz     short loc_44897b
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
test    edi, edi
jnz     short loc_4489dd
cmp     [esp+24h+var_14], 0
jnz     short loc_4489b1
cmp     [esp+24h+var_10], 0
jnz     short loc_4489b1
cmp     [esp+24h+var_c], 0
jz      short loc_4489a0
mov     eax, [esp+24h+var_c]
mov     [esi+12h], eax
jmp     loc_448a8a
push    ebx
call    sub_448ae0
add     esp, 4
mov     [esi+12h], eax
jmp     loc_448a8a
test    edi, edi
jnz     short loc_4489dd
cmp     [esp+24h+var_14], 0
jz      short loc_4489ca
mov     edi, [esp+24h+var_14]
mov     [esp+24h+var_14], 0
jmp     short loc_4489dd
cmp     [esp+24h+var_10], 0
jz      short loc_4489dd
mov     edi, [esp+24h+var_10]
mov     [esp+24h+var_10], 0
mov     ebp, [esi+16h]
mov     ecx, [esi+0eh]
xor     edx, edx
mov     eax, [esi+12h]
mov     [esp+24h+var_4], edx
cmp     ebp, eax
mov     [esp+24h+var_8], 1
jnz     short loc_4489fe
mov     [esp+24h+var_8], edx
jmp     short loc_448a41
cmp     ecx, eax
jz      short loc_448a16
push    ecx
call    sub_461c50
add     esp, 4
test    eax, eax
jz      short loc_448a1e
mov     ecx, [esi+12h]
test    ecx, ecx
jz      short loc_448a02
mov     [esp+24h+var_4], 1
cmp     [esp+24h+var_4], 0
jz      short loc_448a41
push    ebp
call    sub_461f70
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_448a41
cmp     [esi+12h], ebp
jnz     short loc_448a25
mov     [esp+24h+var_8], 0
cmp     [esp+24h+var_c], 0
jz      short loc_448a5d
cmp     [esp+24h+var_8], 0
jz      short loc_448a5d
mov     eax, [esp+24h+var_c]
push    eax
push    ebx
call    sub_448ac0
add     esp, 8
cmp     [esp+24h+var_10], 0
jz      short loc_448a72
mov     eax, [esp+24h+var_10]
push    eax
push    ebx
call    sub_448ac0
add     esp, 8
cmp     [esp+24h+var_14], 0
jz      short loc_448a87
mov     eax, [esp+24h+var_14]
push    eax
push    ebx
call    sub_448ac0
add     esp, 8
mov     [esi+12h], edi
mov     ecx, [esi+12h]
mov     eax, [esi+16h]
sub     eax, ecx
cmp     eax, 1
pop     ebp
sbb     eax, eax
pop     edi
neg     eax
or      [esi+8eh], eax
pop     esi
pop     ebx
cmp     ecx, 1
sbb     eax, eax
add     esp, 14h
inc     eax
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
lea     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_48e920
add     esp, 8
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
xor     edi, edi
push    esi
call    sub_48e830
add     esp, 4
test    eax, eax
jz      short loc_448b29
push    esi
call    sub_48f140
add     esp, 4
push    esi
call    sub_48e830
add     esp, 4
mov     ebx, eax
push    ebx
push    esi
call    sub_48f1d0
add     esp, 8
mov     edi, [eax]
push    esi
call    sub_48f1a0
add     esp, 4
push    ebx
push    esi
call    sub_48ea50
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     dword_4adb88, eax
retn
mov     eax, dword_4adb88
retn
mov     edx, [esp+hmem]
mov     ecx, [esp+arg_4]
sub     esp, 468h
lea     eax, [esp+468h+var_468]
push    esi
push    edi
push    eax
push    ecx
push    edx
call    sub_46d310
add     esp, 0ch
mov     esi, eax
test    esi, esi
jnz     short loc_448bdd
lea     eax, [esp+470h+var_400]
push    eax
call    sub_46b550
mov     eax, [esp+474h+arg_c]
mov     edi, [esp+474h+arg_8]
mov     [esp+474h+var_1a0], eax
add     esp, 4
push    edi
call    sub_448b30
lea     ecx, [esp+474h+var_400]
lea     eax, [esp+474h+var_468]
add     esp, 4
push    9fh
push    ecx
push    eax
call    sub_46b000
add     esp, 0ch
mov     esi, eax
push    0
call    sub_448b30
add     esp, 4
test    esi, esi
jnz     short loc_448bd0
push    edi
call    sub_447cb0
add     esp, 4
lea     eax, [esp+470h+var_468]
push    eax
call    sub_46d380
add     esp, 4
sub     esi, 8
pop     edi
cmp     esi, 1
pop     esi
sbb     eax, eax
add     esp, 468h
neg     eax
retn
sub     esp, 1ch
push    ebx
push    esi
push    edi
push    ebp
call    sub_448b40
mov     edi, eax
test    edi, edi
jnz     short loc_448c0f
mov     eax, 5
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     ecx, [esp+2ch+arg_0]
mov     [esp+2ch+var_18], 4
mov     ebx, [ecx+14h]
mov     eax, [ecx+0ch]
mov     edx, [ecx+5ch]
mov     ecx, [ebx+2]
sub     ecx, 0eh
lea     eax, [eax+edx+0eh]
push    ecx
xor     ebp, ebp
push    eax
call    sub_45b910
mov     [esp+34h+hmem], eax
add     esp, 8
cmp     eax, ebp
jz      loc_448d82
mov     esi, [edi+12h]
push    esi
call    sub_408e30
shr     eax, 10h
mov     ecx, [esp+30h+hmem]
add     esp, 4
push    ebp
push    eax
push    ecx
call    sub_4182e0
mov     [esp+38h+var_1c], eax
add     esp, 0ch
cmp     eax, ebp
jz      loc_448d75
push    1
push    esi
push    eax
call    sub_41a7a0
lea     eax, [esp+38h+var_10]
add     esp, 0ch
mov     ecx, [esp+2ch+var_1c]
push    ebp
push    ebp
push    ebp
push    eax
push    ebp
push    ecx
call    sub_414e80
mov     ecx, [esp+44h+var_1c]
add     esp, 18h
push    7fffh
push    ebp
push    ecx
call    sub_419310
add     esp, 0ch
mov     esi, eax
cmp     esi, ebp
jz      loc_448d68
cmp     dword ptr [edi+0c2h], 2
mov     [esp+2ch+var_18], ebp
jnz     short loc_448cd8
cmp     word ptr [edi+8], 0ffffh
jz      short loc_448ce1
mov     eax, [edi+0c6h]
mov     ecx, [esp+2ch+arg_0]
sub     eax, [ecx+5ch]
cmp     eax, 1
sbb     ebp, ebp
inc     ebp
jmp     short loc_448ce1
mov     word ptr [edi+0deh], 0
test    ebp, ebp
jnz     short loc_448d5f
mov     ebp, [edi+0c2h]
push    esi
call    ds:globallock
push    1
push    eax
push    edi
call    sub_447cf0
add     esp, 0ch
test    eax, eax
jz      short loc_448d4b
mov     [esp+2ch+var_18], 8
movsx   eax, word ptr [ebx+6]
mov     [edi+0a2h], eax
movsx   ecx, word ptr [ebx+8]
mov     [edi+0a6h], ecx
mov     ecx, [esp+2ch+arg_0]
movsx   edx, word ptr [ebx+0ah]
mov     [edi+0aah], edx
movsx   eax, word ptr [ebx+0ch]
mov     [edi+0aeh], eax
mov     dword ptr [edi+0c2h], 2
mov     edx, [ecx+5ch]
mov     [edi+0c6h], edx
jmp     short loc_448d58
mov     [edi+0c2h], ebp
inc     word ptr [edi+0cah]
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
add     esp, 4
mov     eax, [esp+2ch+var_1c]
push    eax
call    sub_413620
add     esp, 4
mov     eax, [esp+2ch+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [esp+2ch+var_18]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
sub     esp, 18h
push    ebx
push    esi
push    edi
push    ebp
call    sub_448b40
mov     esi, eax
test    esi, esi
jnz     short loc_448daf
mov     eax, 5
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+28h+arg_0]
mov     [esp+28h+var_18], 4
mov     ecx, [eax+5ch]
mov     edx, [eax+0ch]
mov     eax, [eax+14h]
lea     ebx, [ecx+edx+0eh]
mov     eax, [eax+2]
sub     eax, 0eh
push    eax
push    ebx
call    sub_45b910
mov     [esp+30h+var_14], eax
add     esp, 8
test    eax, eax
jz      loc_448ee7
mov     ebx, [esi+12h]
push    ebx
call    sub_408e30
shr     eax, 10h
mov     ecx, [esp+2ch+var_14]
add     esp, 4
push    0
push    eax
push    ecx
call    sub_4182e0
add     esp, 0ch
mov     edi, eax
test    edi, edi
jz      loc_448eda
push    1
push    ebx
push    edi
call    sub_41a7a0
lea     eax, [esp+34h+hmem]
add     esp, 0ch
push    0
push    0
push    0
push    eax
push    0
push    edi
call    sub_414e80
add     esp, 18h
push    7fffh
push    0
push    edi
call    sub_419310
mov     [esp+34h+hmem], eax
add     esp, 0ch
test    eax, eax
jz      loc_448ed1
push    edi
call    sub_419300
mov     [esp+2ch+var_18], 0
mov     bx, ax
mov     eax, [esp+2ch+hmem]
add     esp, 4
push    eax
call    ds:globallock
mov     ebp, eax
movsx   eax, bx
lea     ebx, [eax+ebp]
cmp     ebp, ebx
jnb     short loc_448eb9
mov     eax, [esi+1eh]
push    eax
call    ds:globallock
cmp     dword ptr [esi+42h], 1
sbb     ecx, ecx
push    0
neg     ecx
push    0
push    ecx
push    eax
push    ebx
push    ebp
call    sub_45b290
add     esp, 18h
test    eax, eax
jz      short loc_448ea6
mov     [esp+28h+var_18], 8
mov     ebp, ebx
mov     eax, [esi+1eh]
push    eax
call    ds:globalunlock
cmp     ebp, ebx
jnb     short loc_448eb9
inc     ebp
cmp     ebp, ebx
jb      short loc_448e76
mov     eax, [esp+28h+hmem]
push    eax
call    ds:globalunlock
mov     eax, [esp+28h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
push    edi
call    sub_413620
add     esp, 4
mov     eax, [esp+28h+var_14]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [esp+28h+var_18]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    ebx
push    esi
mov     esi, [esp+8+lpstring]
push    edi
push    esi
xor     edi, edi
call    ds:lstrlena
test    ax, ax
mov     ebx, [esp+0ch+arg_4]
mov     dword ptr [ebx+32ah], 0
jle     short loc_448f8d
lea     ecx, [edi+1]
mov     dl, [esi+edi]
cmp     dl, 21h
jl      short loc_448f5a
cmp     dl, 7eh
jg      short loc_448f5a
movsx   edx, dl
mov     dl, byte_4adb07[edx]
test    dl, dl
jz      short loc_448f5a
test    dl, 2
jnz     short loc_448f67
test    edi, edi
jnz     short loc_448f4e
test    dl, 1
jnz     short loc_448f75
movsx   edi, ax
cmp     edi, ecx
jg      short loc_448f5a
test    dl, 4
jnz     short loc_448f83
movsx   edx, ax
mov     edi, ecx
cmp     edx, ecx
jg      short loc_448f23
pop     edi
pop     esi
pop     ebx
retn
mov     dword ptr [ebx+32ah], 1
pop     edi
pop     esi
pop     ebx
retn
mov     dword ptr [ebx+32ah], 1
pop     edi
pop     esi
pop     ebx
retn
mov     dword ptr [ebx+32ah], 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
cmp     byte ptr [eax], 0
jz      short loc_448fbb
mov     cl, [eax]
cmp     cl, 3fh
jz      short loc_448fbe
cmp     cl, 2ah
jz      short loc_448fbe
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_448fa9
xor     eax, eax
retn
mov     eax, 1
retn
call    sub_449170
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
jmp     sub_449190
push    ebx
push    esi
mov     ebx, [esp+8+arg_8]
push    edi
push    ebp
push    20h
mov     bp, [esp+14h+arg_4]
lea     eax, [ebx+3ah]
push    eax
push    1
push    ebp
call    sub_486420
mov     edx, [esp+20h+arg_0]
add     esp, 10h
mov     ax, [edx+2]
mov     edi, ebx
mov     [ebx+36h], ax
lea     esi, [edx+6]
mov     cx, [edx+4]
mov     [ebx+38h], cx
mov     ecx, 5
rep movsd
cmp     word ptr [edx], 2
lea     esi, [edx+1ah]
jge     short loc_44903a
sub     esi, 2
lea     edi, [ebx+14h]
mov     ecx, 8
rep movsd
movsw
mov     word ptr [ebx+12h], 0
push    ebp
push    ebx
call    sub_449870
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     ax, [esi+4]
push    eax
call    sub_4490c0
add     esp, 4
mov     edx, 1
test    al, 10h
jnz     short loc_44907d
xor     edx, edx
mov     eax, [esp+4+arg_4]
cmp     edx, 1
sbb     ecx, ecx
inc     ecx
test    edx, edx
mov     [eax], ecx
jz      short loc_449093
mov     ax, [esi+6]
pop     esi
retn
cmp     word ptr [esi], 2
lea     ecx, [esi+1ah]
jge     short loc_44909f
sub     ecx, 2
movsx   eax, word ptr [ecx+0ah]
movsx   ecx, word ptr [ecx+10h]
sub     eax, ecx
pop     esi
shl     eax, 0eh
lea     eax, [eax+eax*2]
add     eax, 8000h
sar     eax, 10h
retn
mov     ax, [esp+arg_0]
test    al, 30h
jnz     short locret_4490d2
test    al, 8
jz      short loc_4490d0
or      al, 10h
retn
or      al, 20h
retn
mov     eax, [esp+arg_4]
test    byte ptr [eax+38h], 10h
jz      short loc_4490ef
movsx   eax, word ptr [eax+0ah]
retn
movsx   eax, word ptr [eax+20h]
retn
mov     eax, [esp+arg_4]
test    byte ptr [eax+38h], 10h
jz      short loc_44910f
movsx   eax, word ptr [eax+0ch]
retn
movsx   eax, word ptr [eax+22h]
retn
mov     edx, [esp+arg_4]
test    byte ptr [edx+38h], 10h
jz      short loc_44913b
movsx   ecx, word ptr [edx+0ah]
movsx   eax, word ptr [edx+0ch]
add     ecx, eax
movsx   eax, word ptr [edx+0eh]
add     eax, ecx
retn
movsx   ecx, word ptr [edx+26h]
movsx   eax, word ptr [edx+20h]
add     ecx, eax
movsx   eax, word ptr [edx+22h]
add     eax, ecx
retn
mov     eax, [esp+arg_4]
test    byte ptr [eax+38h], 10h
jz      short loc_44915f
movsx   eax, word ptr [eax+0eh]
retn
movsx   eax, word ptr [eax+26h]
retn
push    42h
push    1e0h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a8294, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
sub     esp, 1ch
cmp     ds:dword_4a8294, 0
push    ebx
push    esi
push    edi
push    ebp
jz      short loc_4491e6
mov     bx, 1
xor     ebp, ebp
movsx   esi, bx
shl     esi, 5
mov     eax, ds:dword_4a8294
add     esi, [eax]
cmp     [esi+1ch], ebp
jz      short loc_4491d0
lea     edi, [esp+2ch+var_1c]
mov     ecx, 7
rep movsd
lea     eax, [esp+2ch+var_1c]
push    eax
call    sub_4496d0
add     esp, 4
inc     bx
cmp     bx, 0eh
jle     short loc_4491a6
mov     eax, ds:dword_4a8294
push    eax
call    sub_45ba00
add     esp, 4
mov     ds:dword_4a8294, 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
cmp     ds:dword_4a8294, 0
push    ebx
push    esi
push    edi
jnz     short loc_449222
mov     ebx, [esp+0ch+arg_4]
mov     ecx, [esp+0ch+arg_0]
push    ebx
push    ecx
call    sub_449e00
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
mov     cx, word ptr [esp+0ch+arg_0]
mov     eax, ds:dword_4a8294
movsx   edi, cx
shl     edi, 5
mov     esi, [eax]
add     esi, edi
mov     ebx, [esp+0ch+arg_4]
cmp     dword ptr [esi+1ch], 0
jz      short loc_449254
mov     edi, ebx
mov     ecx, 7
rep movsd
mov     dword ptr [ebx+4], 0
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    ecx
mov     esi, ebx
call    sub_449e00
add     esp, 8
mov     eax, ds:dword_4a8294
mov     ecx, 7
mov     eax, [eax]
add     eax, edi
mov     edi, eax
rep movsd
mov     dword ptr [eax+1ch], 1
mov     dword ptr [ebx+4], 0
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_0]
sub     esp, 1ch
lea     eax, [esp+1ch+var_1c]
push    eax
push    ecx
call    sub_449200
mov     eax, [esp+24h+var_1c]
add     esp, 8
add     esp, 1ch
retn
mov     ecx, [esp+arg_8]
sub     esp, 54h
lea     eax, [esp+54h+var_38]
push    esi
push    edi
push    eax
push    ecx
call    sub_449200
lea     ecx, [esp+64h+var_38]
mov     edx, [esp+64h+hdc]
lea     eax, [esp+64h+var_1c]
add     esp, 8
push    ecx
push    edx
push    eax
call    sub_449700
lea     edi, [esp+68h+var_54]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+5ch+var_54]
mov     eax, [esp+5ch+arg_0]
mov     edi, eax
mov     ecx, 7
rep movsd
pop     edi
pop     esi
add     esp, 54h
retn
mov     ecx, [esp+arg_4]
sub     esp, 70h
lea     eax, [esp+70h+var_70]
push    ebx
push    esi
push    edi
push    eax
push    ecx
call    sub_449200
lea     ecx, [esp+84h+var_70]
mov     ebx, [esp+84h+hdc]
lea     eax, [esp+84h+var_1c]
add     esp, 8
push    ecx
push    ebx
push    eax
call    sub_449700
lea     edi, [esp+88h+var_38]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+7ch+var_38]
lea     edi, [esp+7ch+var_54]
mov     ecx, 7
rep movsd
mov     ax, [esp+7ch+arg_14]
mov     ecx, [esp+7ch+lpstring]
mov     edx, [esp+7ch+y]
push    eax
mov     eax, [esp+80h+x]
push    ecx
push    edx
push    eax
push    ebx
call    sub_449d20
lea     ecx, [esp+90h+var_54]
lea     edx, [esp+90h+var_1c]
add     esp, 14h
push    ecx
push    ebx
push    edx
call    sub_449700
lea     ecx, [esp+88h+var_70]
add     esp, 0ch
push    ecx
call    sub_4496d0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
sub     esp, 70h
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+80h+hdc]
mov     ebx, ebp
test    ebp, ebp
jnz     short loc_4493d6
push    0
call    ds:getdc
mov     ebp, eax
test    ebp, ebp
jz      loc_44946d
lea     eax, [esp+80h+var_70]
mov     ecx, [esp+80h+arg_4]
push    eax
push    ecx
call    sub_449200
lea     ecx, [esp+88h+var_70]
lea     edx, [esp+88h+var_1c]
add     esp, 8
push    ecx
push    ebp
push    edx
call    sub_449700
lea     edi, [esp+8ch+var_38]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+80h+var_38]
lea     edi, [esp+80h+var_54]
mov     ecx, 7
rep movsd
mov     cx, [esp+80h+arg_c]
mov     edx, [esp+80h+lpstring]
push    ecx
push    edx
push    ebp
call    sub_449d50
lea     ecx, [esp+8ch+var_54]
add     esp, 0ch
mov     esi, eax
push    ecx
lea     eax, [esp+84h+var_1c]
push    ebp
push    eax
call    sub_449700
lea     ecx, [esp+8ch+var_70]
add     esp, 0ch
push    ecx
call    sub_4496d0
add     esp, 4
test    ebx, ebx
jnz     short loc_449471
push    ebp
push    0
call    ds:releasedc
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     esi, [esp+80h+var_1c]
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     ecx, [esp+arg_4]
sub     esp, 1ch
lea     eax, [esp+1ch+var_1c]
push    eax
push    ecx
call    sub_449200
mov     eax, [esp+24h+var_14]
add     esp, 8
add     esp, 1ch
retn
mov     ecx, [esp+arg_4]
sub     esp, 1ch
lea     eax, [esp+1ch+var_1c]
push    eax
push    ecx
call    sub_449200
mov     eax, [esp+24h+var_10]
add     esp, 8
add     esp, 1ch
retn
mov     ecx, [esp+arg_4]
sub     esp, 1ch
lea     eax, [esp+1ch+var_1c]
push    eax
push    ecx
call    sub_449200
mov     eax, [esp+24h+var_4]
add     esp, 8
add     esp, 1ch
retn
mov     ecx, [esp+arg_4]
sub     esp, 1ch
lea     eax, [esp+1ch+var_1c]
push    esi
push    eax
push    ecx
call    sub_449200
mov     esi, [esp+28h+var_14]
lea     eax, [esp+28h+var_1c]
add     esi, [esp+28h+var_10]
add     esp, 8
push    eax
call    sub_4496d0
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 1ch
retn
mov     ecx, [esp+arg_4]
sub     esp, 1ch
lea     eax, [esp+1ch+var_1c]
push    eax
push    ecx
call    sub_449200
mov     eax, [esp+24h+var_c]
add     esp, 8
add     esp, 1ch
retn
mov     ecx, [esp+arg_4]
sub     esp, 1ch
lea     eax, [esp+1ch+var_1c]
push    eax
push    ecx
call    sub_449200
mov     eax, [esp+24h+var_8]
add     esp, 8
add     esp, 1ch
retn
sub     esp, 3ch
push    ebx
push    esi
mov     esi, [esp+44h+arg_0]
push    edi
mov     bx, [esi+36h]
push    esi
call    sub_449650
mov     [esp+4ch+lf.lfwidth], 0
mov     [esp+4ch+lf.lfweight], eax
add     esp, 4
movsx   ecx, word ptr [esi+14h]
mov     al, bl
mov     [esp+48h+lf.lfheight], ecx
and     al, 2
and     bl, 4
mov     [esp+48h+lf.lfescapement], 0
mov     [esp+48h+lf.lforientation], 0
mov     [esp+48h+lf.lfstrikeout], 0
mov     [esp+48h+lf.lfoutprecision], 0
mov     [esp+48h+lf.lfclipprecision], 0
mov     [esp+48h+lf.lfquality], 0
shr     al, 1
mov     cl, [esi+2ah]
shr     bl, 2
push    20h
lea     edx, [esi+3ah]
mov     [esp+4ch+lf.lfitalic], al
mov     al, [esi+2bh]
push    edx
mov     [esp+50h+lf.lfunderline], bl
mov     [esp+50h+lf.lfcharset], al
lea     eax, [esp+50h+lf.lffacename]
mov     [esp+50h+lf.lfpitchandfamily], cl
push    eax
call    sub_47f9f0
lea     ecx, [esp+54h+lf]
add     esp, 0ch
push    ecx
call    ds:createfontindirecta
mov     edi, [esp+48h+arg_4]
test    eax, eax
mov     [edi], eax
jz      short loc_449603
mov     dword ptr [edi+4], 1
jmp     short loc_44961f
mov     dword ptr [edi+4], 0
push    0dh
call    ds:getstockobject
mov     [edi], eax
test    eax, eax
jz      short loc_44961f
mov     dword ptr [edi+4], 0
cmp     dword ptr [edi], 0
jnz     short loc_44962d
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
add     edi, 8
push    edi
push    esi
call    sub_4496a0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
mov     ecx, [esp+arg_0]
push    esi
push    edi
mov     eax, 190h
test    byte ptr [ecx+36h], 1
lea     edi, [ecx+3ah]
jz      short loc_44968f
push    offset asystem
mov     esi, ds:lstrcmpia
push    edi
call    esi
test    eax, eax
jz      short loc_44968a
push    offset asystem_0
push    edi
call    esi
test    eax, eax
jz      short loc_44968a
mov     eax, 2bch
pop     edi
pop     esi
retn
mov     eax, 384h
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_0]
mov     edx, [esp+arg_4]
movsx   eax, word ptr [ecx+20h]
mov     [edx], eax
movsx   eax, word ptr [ecx+22h]
mov     [edx+4], eax
movsx   eax, word ptr [ecx+26h]
mov     [edx+0ch], eax
movsx   ecx, word ptr [ecx+28h]
mov     [edx+8], ecx
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+4], 0
jz      short loc_4496e4
mov     eax, [esi]
push    eax
call    ds:deleteobject
mov     dword ptr [esi+4], 0
mov     dword ptr [esi], 0
pop     esi
retn
mov     eax, [esp+arg_8]
sub     esp, 1ch
push    esi
mov     ecx, [eax]
mov     esi, [esp+20h+hdc]
push    edi
push    ecx
push    esi
call    ds:selectobject
mov     [esp+24h+var_1c], eax
push    18h
push    esi
call    ds:settextalign
push    1
push    esi
call    ds:setbkmode
lea     esi, [esp+24h+var_1c]
mov     eax, [esp+24h+arg_0]
mov     edi, eax
mov     ecx, 7
mov     [esp+24h+var_18], 0
rep movsd
pop     edi
pop     esi
add     esp, 1ch
retn
push    esi
mov     ecx, 5
mov     esi, [esp+4+arg_4]
push    edi
add     esi, 8
mov     edi, [esp+8+arg_8]
rep movsd
pop     edi
pop     esi
retn
mov     ecx, [esp+hdc]
sub     esp, 38h
lea     eax, [esp+38h+tm]
push    eax
push    ecx
call    ds:gettextmetricsa
mov     edx, [esp+38h+tm.tmascent]
mov     ecx, [esp+38h+arg_4]
mov     eax, [esp+38h+tm.tmdescent]
mov     [ecx], edx
mov     edx, [esp+38h+tm.tmmaxcharwidth]
mov     [ecx+4], eax
mov     eax, [esp+38h+tm.tmexternalleading]
mov     [ecx+8], edx
mov     [ecx+0ch], eax
add     eax, [esp+38h+tm.tmheight]
mov     [ecx+10h], eax
add     esp, 38h
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    20h
push    eax
lea     ecx, [esi+3ah]
push    ecx
call    sub_47f9f0
add     esp, 0ch
push    esi
call    sub_449850
add     esp, 4
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_4]
test    esi, esi
jle     short loc_44980d
push    esi
call    sub_449f90
add     esp, 4
cmp     eax, 4000h
jge     short loc_449808
push    esi
call    sub_449f90
neg     eax
add     esp, 4
mov     esi, eax
jmp     short loc_44980d
mov     esi, 0ffffc000h
mov     eax, [esp+4+arg_0]
mov     [eax+14h], si
push    eax
call    sub_449850
add     esp, 4
pop     esi
retn
mov     cx, [esp+arg_4]
mov     eax, [esp+arg_0]
mov     [eax+36h], cx
retn
mov     eax, [esp+arg_0]
movsx   ecx, word ptr [eax+1eh]
movsx   edx, word ptr [eax+24h]
sub     ecx, edx
push    ecx
call    sub_449f70
add     esp, 4
retn
mov     eax, [esp+arg_0]
push    0
mov     word ptr [eax], 0
push    eax
mov     byte ptr [eax+2], 0
call    sub_449870
add     esp, 8
retn
sub     esp, 28h
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+38h+arg_0]
mov     ax, [ebp+1ah]
lea     ecx, [ebp+3ah]
mov     word ptr [esp+38h+var_28+2], ax
push    ecx
call    sub_449940
lea     ecx, [esp+3ch+var_28]
lea     edx, [esp+3ch+var_28+1]
add     esp, 4
lea     eax, [ebp+3ah]
push    ecx
push    edx
push    eax
call    sub_449960
mov     cl, byte ptr [esp+44h+var_28+1]
mov     dl, byte ptr [esp+44h+var_28]
lea     eax, [esp+20h]
add     esp, 0ch
mov     [ebp+2ah], cl
mov     [ebp+2bh], dl
push    eax
push    ebp
call    sub_449a10
add     esp, 8
test    eax, eax
jz      short loc_4498e4
lea     esi, [esp+14h]
lea     edi, [ebp+14h]
mov     ecx, 8
rep movsd
movsw
mov     al, byte ptr [esp+38h+var_28+1]
mov     cl, byte ptr [esp+38h+var_28]
mov     [ebp+2ah], al
mov     [ebp+2bh], cl
mov     ax, [ebp+38h]
xor     ebx, ebx
mov     bl, al
and     ax, 38h
and     bl, 1
mov     [ebp+38h], ax
push    eax
call    sub_4490c0
mov     [ebp+38h], ax
add     esp, 4
test    bl, bl
jz      short loc_44990c
or      byte ptr [ebp+38h], 2
lea     eax, [ebp+3ah]
push    eax
call    sub_449940
add     esp, 4
test    eax, eax
jnz     short loc_449920
or      byte ptr [ebp+38h], 1
cmp     word ptr [esp+38h+var_28+2], 0
jle     short loc_449938
mov     ax, word ptr [esp+38h+var_28+2]
cmp     ax, [esp+38h+var_1e]
jz      short loc_449938
or      byte ptr [ebp+38h], 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
mov     edx, [esp+lplogfont]
sub     esp, 4
lea     eax, [esp+4+var_2]
lea     ecx, [esp+4+var_1]
push    eax
push    ecx
push    edx
call    sub_449960
add     esp, 10h
retn
sub     esp, 94h
push    ebx
push    esi
push    edi
xor     esi, esi
mov     ebx, [esp+0a0h+lplogfont]
push    20h
lea     eax, [esp+0a4h+var_22]
push    ebx
push    eax
call    sub_47f9f0
mov     [esp+0ach+var_31], 0
mov     [esp+0ach+var_32], 0
add     esp, 0ch
push    esi
push    esi
push    esi
push    offset pwszdriver
call    ds:createica
cmp     eax, esi
mov     edi, eax
jz      short loc_4499e3
lea     eax, [esp+0a0h+lparam]
push    eax
push    offset proc
push    ebx
push    edi
call    ds:enumfontsa
cmp     eax, 1
sbb     esi, esi
neg     esi
test    esi, esi
jnz     short loc_4499dc
lea     eax, [esp+0a0h+tm]
push    eax
push    edi
call    ds:gettextmetricsa
mov     cl, [esp+0a0h+tm.tmcharset]
mov     al, [esp+0a0h+tm.tmpitchandfamily]
mov     [esp+0a0h+var_31], cl
mov     [esp+0a0h+var_32], al
push    edi
call    ds:deletedc
mov     cl, [esp+0a0h+var_32]
mov     eax, [esp+0a0h+arg_4]
mov     dl, [esp+0a0h+var_31]
mov     [eax], cl
mov     ecx, [esp+0a0h+arg_8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     [ecx], dl
add     esp, 94h
retn
sub     esp, 84h
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
xor     eax, eax
mov     ebp, [esp+94h+arg_4]
mov     ecx, 8
mov     edi, ebp
rep stosd
stosw
mov     edi, [esp+94h+arg_0]
push    ebx
mov     ax, [edi+14h]
push    ebx
mov     [ebp+0], ax
push    ebx
push    offset pwszdriver
call    ds:createica
cmp     eax, ebx
mov     esi, eax
jz      loc_449c95
mov     [esp+94h+lf.lfwidth], ebx
mov     [esp+94h+lf.lfescapement], ebx
mov     [esp+94h+lf.lforientation], ebx
mov     [esp+94h+lf.lfitalic], bl
mov     cl, [edi+2bh]
mov     [esp+94h+lf.lfunderline], bl
mov     [esp+94h+lf.lfstrikeout], bl
mov     [esp+94h+lf.lfcharset], cl
mov     [esp+94h+lf.lfoutprecision], bl
mov     [esp+94h+lf.lfclipprecision], bl
mov     dl, [edi+2ah]
push    20h
mov     [esp+98h+lf.lfquality], bl
mov     [esp+98h+lf.lfpitchandfamily], dl
mov     [esp+98h+lf.lfweight], 190h
movsx   eax, word ptr [edi+14h]
lea     ecx, [esp+98h+lf.lffacename]
mov     [esp+98h+lf.lfheight], eax
lea     eax, [edi+3ah]
push    eax
push    ecx
call    sub_47f9f0
lea     ecx, [esp+0a0h+lf]
add     esp, 0ch
push    ecx
call    ds:createfontindirecta
mov     [esp+94h+ho], eax
cmp     eax, ebx
jz      loc_449c8e
push    eax
push    esi
call    ds:selectobject
mov     [esp+94h+h], eax
lea     eax, [esp+94h+tm]
push    eax
push    esi
call    ds:gettextmetricsa
test    [esp+94h+tm.tmpitchandfamily], 4
jz      short loc_449b51
push    ebx
push    ebx
push    esi
call    ds:getoutlinetextmetricsa
test    ax, ax
jz      short loc_449b6c
movzx   eax, ax
mov     [esp+94h+cjcopy], eax
push    42h
push    eax
call    sub_45b8f0
mov     [esp+9ch+hmem], eax
add     esp, 8
cmp     eax, ebx
jz      short loc_449b6c
push    eax
call    ds:globallock
push    eax
mov     ebx, eax
mov     eax, [esp+98h+cjcopy]
push    eax
push    esi
call    ds:getoutlinetextmetricsa
push    ebp
lea     eax, [ebx+4]
push    eax
call    sub_449ce0
add     esp, 8
push    ebp
push    ebx
mov     ebx, 1
call    sub_449cb0
mov     eax, [esp+9ch+hmem]
add     esp, 8
push    eax
call    sub_45ba00
add     esp, 4
mov     [ebp+3], bl
mov     [ebp+4], bl
jmp     short loc_449b6c
lea     eax, [esp+94h+tm]
push    ebp
push    eax
mov     ebx, 1
call    sub_449ce0
add     esp, 8
xor     eax, eax
mov     [ebp+3], al
mov     [ebp+4], al
test    ebx, ebx
jz      short loc_449ba1
push    offset string
call    ds:lstrlena
push    eax
push    offset string
push    esi
call    sub_449fc0
mov     [ebp+6], ax
add     esp, 0ch
cmp     word ptr [ebp+0], 0
jl      short loc_449ba1
mov     ax, [ebp+10h]
sub     ax, [ebp+0ah]
mov     [ebp+0], ax
mov     eax, [esp+94h+h]
push    eax
push    esi
call    ds:selectobject
mov     eax, [esp+94h+ho]
push    eax
call    ds:deleteobject
test    ebx, ebx
jz      loc_449c8e
cmp     byte ptr [ebp+3], 0
jnz     short loc_449c1b
mov     [esp+94h+lf.lfheight], 0ffffffdch
lea     eax, [esp+94h+lf]
push    eax
call    ds:createfontindirecta
mov     [esp+94h+ho], eax
test    eax, eax
jz      short loc_449c1b
push    eax
push    esi
call    ds:selectobject
mov     [esp+94h+h], eax
lea     eax, [esp+94h+tm]
push    eax
push    esi
call    ds:gettextmetricsa
test    [esp+94h+tm.tmpitchandfamily], 4
jz      short loc_449c04
mov     byte ptr [ebp+4], 1
mov     eax, [esp+94h+h]
push    eax
push    esi
call    ds:selectobject
mov     eax, [esp+94h+ho]
push    eax
call    ds:deleteobject
mov     ax, [edi+36h]
push    edi
mov     word ptr [edi+36h], 1
mov     word ptr [esp+98h+h], ax
call    sub_449650
lea     ecx, [esp+98h+lf]
mov     [esp+98h+lf.lfweight], eax
mov     ax, word ptr [esp+98h+h]
add     esp, 4
mov     [edi+36h], ax
push    ecx
call    ds:createfontindirecta
mov     edi, eax
test    edi, edi
jz      short loc_449c8e
push    edi
push    esi
call    ds:selectobject
mov     [esp+94h+h], eax
push    offset string
call    ds:lstrlena
push    eax
push    offset string
push    esi
call    sub_449fc0
mov     [ebp+8], ax
mov     eax, [esp+0a0h+h]
add     esp, 0ch
push    eax
push    esi
call    ds:selectobject
push    edi
call    ds:deleteobject
push    esi
call    ds:deletedc
test    ebx, ebx
jz      short loc_449c9d
mov     byte ptr [ebp+2], 1
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 84h
retn
mov     ecx, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     eax, [ecx]
mov     [edx+1ah], ax
mov     eax, [ecx+80h]
mov     [edx+1ch], ax
mov     eax, [ecx+84h]
mov     [edx+1eh], ax
mov     ecx, [ecx+88h]
mov     [edx+20h], cx
retn
mov     edx, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     eax, [edx]
mov     [ecx+0ah], ax
mov     eax, [edx+4]
mov     [ecx+0ch], ax
mov     eax, [edx+8]
mov     [ecx+0eh], ax
mov     eax, [edx+0ch]
mov     [ecx+10h], ax
mov     eax, [edx+10h]
mov     [ecx+12h], ax
mov     eax, [edx+18h]
mov     [ecx+14h], ax
mov     edx, [edx+20h]
mov     [ecx+18h], dx
retn
mov     ecx, [esp+lpstring]
mov     edx, [esp+y]
movsx   eax, [esp+arg_10]
push    eax
push    ecx
mov     eax, [esp+8+x]
push    edx
mov     ecx, [esp+0ch+hdc]
push    eax
push    ecx
call    ds:textouta
retn
mov     ecx, [esp+lpstring]
mov     edx, [esp+hdc]
movsx   eax, [esp+arg_8]
push    eax
push    ecx
push    edx
call    sub_449fc0
add     esp, 0ch
retn
mov     eax, [esp+hresdata]
push    esi
xor     esi, esi
push    eax
call    ds:lockresource
test    eax, eax
jz      short loc_449dee
mov     edx, [esp+4+arg_4]
movsx   ecx, word ptr [eax]
mov     [edx], ecx
movsx   esi, word ptr [eax+2]
mov     [edx+4], esi
movsx   ecx, word ptr [eax+4]
mov     [edx+8], ecx
movsx   esi, word ptr [eax+6]
mov     [edx+0ch], esi
movsx   ecx, word ptr [eax+8]
mov     [edx+10h], ecx
mov     cl, [eax+0ah]
mov     [edx+14h], cl
mov     cl, [eax+0bh]
mov     [edx+15h], cl
mov     cl, [eax+0ch]
mov     [edx+16h], cl
mov     cl, [eax+0dh]
mov     [edx+17h], cl
mov     cl, [eax+0eh]
mov     [edx+18h], cl
mov     cl, [eax+0fh]
push    20h
add     eax, 12h
mov     [edx+19h], cl
push    eax
mov     cl, [eax-2]
add     edx, 1ch
push    edx
mov     esi, 1
mov     [edx-2], cl
mov     cl, [eax-1]
mov     [edx-1], cl
call    sub_47f9d0
add     esp, 0ch
mov     eax, esi
pop     esi
retn
sub     esp, 190h
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, 1
call    sub_4892f0
mov     bx, word ptr [esp+1a0h+arg_0]
test    eax, eax
jz      short loc_449e6d
cmp     bx, 0eh
jnz     short loc_449e6d
lea     edi, [esp+1a0h+pvparam]
xor     eax, eax
mov     ecx, 55h
push    eax
rep stosd
mov     [esp+1a4h+pvparam], 154h
lea     eax, [esp+1a4h+pvparam]
push    eax
push    0
push    29h
call    ds:systemparametersinfoa
test    eax, eax
jz      short loc_449e6d
lea     eax, [esp+1a0h+lf]
push    eax
call    ds:createfontindirecta
mov     esi, [esp+1a0h+arg_4]
mov     [esi], eax
mov     [esi+4], ebp
xor     ebp, ebp
jmp     short loc_449e74
mov     esi, [esp+1a0h+arg_4]
test    ebp, ebp
jz      short loc_449ed2
push    102h
mov     eax, ds:hinstance
push    ebx
push    eax
call    sub_474110
add     esp, 0ch
mov     edi, eax
test    edi, edi
jz      short loc_449ec1
lea     eax, [esp+1a0h+var_190]
push    eax
push    edi
call    sub_449d70
add     esp, 8
test    eax, eax
jz      short loc_449ec1
lea     eax, [esp+1a0h+var_190]
push    eax
call    ds:createfontindirecta
push    edi
mov     [esi], eax
call    ds:freeresource
mov     dword ptr [esi+4], 1
jmp     short loc_449ed2
push    0dh
call    ds:getstockobject
mov     dword ptr [esi+4], 0
mov     [esi], eax
lea     edi, [esi+8]
push    0
push    0
push    0
push    offset pwszdriver
call    ds:createica
mov     ebx, eax
test    ebx, ebx
jz      short loc_449f41
mov     eax, [esi]
mov     esi, ds:selectobject
push    eax
push    ebx
call    esi
mov     ebp, eax
lea     eax, [esp+1a0h+pvparam]
push    eax
push    ebx
call    ds:gettextmetricsa
mov     ecx, [esp+1a0h+var_150]
mov     [edi], ecx
mov     edx, [esp+1a0h+var_14c]
mov     [edi+4], edx
mov     eax, [esp+1a0h+var_13c]
mov     [edi+8], eax
mov     eax, [esp+1a0h+var_144]
push    ebp
mov     [edi+0ch], eax
mov     ecx, [edi+4]
push    ebx
add     ecx, [edi]
add     ecx, eax
mov     [edi+10h], ecx
call    esi
push    ebx
call    ds:deletedc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 190h
retn
mov     eax, 2
pop     ebp
mov     dword ptr [edi], 0ah
mov     [edi+4], eax
mov     dword ptr [edi+8], 0ah
mov     [edi+0ch], eax
mov     dword ptr [edi+10h], 0dh
pop     edi
pop     esi
pop     ebx
add     esp, 190h
retn
mov     eax, [esp+arg_0]
shl     eax, 0eh
lea     eax, [eax+eax*2]
add     eax, 8000h
sar     eax, 10h
retn
mov     ecx, [esp+arg_0]
lea     eax, [ecx+ecx*8]
lea     edx, [eax+eax*8]
lea     eax, [edx+edx*4]
add     eax, eax
sub     eax, ecx
lea     edx, [eax+eax*2]
lea     ecx, [ecx+edx*4]
lea     eax, [ecx+ecx*8]
add     eax, 8000h
sar     eax, 10h
retn
mov     ecx, [esp+c]
mov     edx, [esp+lpstring]
sub     esp, 8
lea     eax, [esp+8+psizl]
push    eax
push    ecx
mov     eax, [esp+10h+hdc]
push    edx
push    eax
call    ds:gettextextentpoint32a
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, [esp+8+psizl._cx]
add     esp, 8
retn
push    esi
push    edi
mov     edi, [esp+8+arg_c]
mov     esi, [esp+8+arg_0]
lea     eax, [esi+1ch]
lea     ecx, [edi+3ah]
push    eax
push    ecx
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_44a023
mov     eax, [esp+8+arg_4]
mov     al, [eax+34h]
mov     [edi+2bh], al
xor     eax, eax
mov     cl, [esi+1bh]
mov     [edi+2ah], cl
pop     edi
pop     esi
retn    10h
mov     eax, 1
pop     edi
pop     esi
retn    10h
mov     eax, [esp+arg_0]
and     eax, 3000h
jnz     short loc_44a041
mov     al, ds:byte_4a8541
retn
sub     eax, 1000h
cmp     eax, 1
sbb     al, al
and     al, 2
add     al, 2ch
retn
mov     eax, [esp+arg_0]
and     eax, 300h
jnz     short loc_44a061
mov     al, ds:byte_4a8540
retn
sub     eax, 200h
cmp     eax, 1
sbb     al, al
and     al, 0feh
add     al, 2eh
retn
sub     esp, 0c0h
mov     eax, [esp+0c0h+arg_8]
push    ebx
mov     [esp+0c4h+var_b0], 0
push    esi
push    edi
mov     edi, [esp+0cch+lpstring1]
push    ebp
push    eax
call    sub_44a030
add     esp, 4
mov     bl, al
mov     esi, 0
mov     eax, [esp+0d0h+arg_8]
push    eax
call    sub_44a050
mov     [esp+0d4h+var_bd], al
add     esp, 4
test    byte ptr [esp+0d0h+arg_8+1], 8
jz      short loc_44a0c8
mov     esi, [esp+0d0h+arg_8]
and     esi, 1fh
lea     eax, [esp+0d0h+ptsign]
lea     ecx, [esp+0d0h+ptdec]
mov     edx, dword ptr [esp+0d0h+value+4]
push    eax
mov     eax, dword ptr [esp+0d4h+value]
push    ecx
push    esi
push    edx
push    eax
call    __fcvt
add     esp, 14h
mov     ecx, eax
mov     eax, [esp+0d0h+ptdec]
add     eax, esi
cmp     eax, 0fh
jle     short loc_44a12a
mov     esi, 0fh
sub     esi, [esp+0d0h+ptdec]
jns     short loc_44a105
xor     esi, esi
lea     eax, [esp+0d0h+ptsign]
lea     ecx, [esp+0d0h+ptdec]
mov     edx, dword ptr [esp+0d0h+value+4]
push    eax
mov     eax, dword ptr [esp+0d4h+value]
push    ecx
push    esi
push    edx
push    eax
call    __fcvt
add     esp, 14h
mov     ecx, eax
cmp     [esp+0d0h+ptdec], 0
jge     short loc_44a18e
mov     eax, [esp+0d0h+ptdec]
neg     eax
mov     [esp+0d0h+var_b8], eax
mov     eax, [esp+0d0h+ptdec]
add     eax, esi
mov     [esp+0d0h+var_bc], eax
js      short loc_44a161
mov     eax, [esp+0d0h+var_bc]
mov     edx, [esp+0d0h+var_b8]
add     edx, ecx
mov     ebp, [esp+0d0h+var_bc]
mov     al, [eax+ecx]
mov     [edx+ebp], al
dec     [esp+0d0h+var_bc]
jns     short loc_44a147
mov     [esp+0d0h+var_bc], 0
cmp     [esp+0d0h+var_b8], 0
jle     short loc_44a186
mov     eax, [esp+0d0h+var_bc]
mov     byte ptr [eax+ecx], 30h
inc     [esp+0d0h+var_bc]
mov     eax, [esp+0d0h+var_bc]
cmp     [esp+0d0h+var_b8], eax
jg      short loc_44a170
mov     [esp+0d0h+ptdec], 0
cmp     [esp+0d0h+ptsign], 0
jz      short loc_44a1a2
mov     eax, [esp+0d0h+lpstring1]
lea     edi, [eax+1]
mov     byte ptr [eax], 2dh
test    esi, esi
jnz     short loc_44a1fc
cmp     byte ptr [ecx], 31h
jnz     short loc_44a1fc
lea     eax, [esp+0d0h+var_b8]
lea     ecx, [esp+0d0h+var_bc]
mov     edx, dword ptr [esp+0d0h+value+4]
push    eax
mov     eax, dword ptr [esp+0d4h+value]
push    ecx
push    5
push    edx
push    eax
call    __fcvt
add     esp, 14h
mov     ecx, eax
cmp     byte ptr [eax+1], 23h
jz      short loc_44a1fc
lea     eax, [esp+0d0h+ptsign]
lea     ecx, [esp+0d0h+ptdec]
mov     edx, dword ptr [esp+0d0h+value+4]
push    eax
mov     eax, dword ptr [esp+0d4h+value]
push    ecx
push    esi
push    edx
push    eax
call    __fcvt
add     esp, 14h
mov     ecx, eax
mov     eax, [esp+0d0h+ptdec]
add     eax, esi
add     eax, 2
cmp     eax, 5ah
jg      loc_44a3ad
cmp     byte ptr [ecx], 31h
jnz     short loc_44a21d
cmp     byte ptr [ecx+1], 23h
jz      loc_44a3ad
test    byte ptr [esp+0d0h+arg_8+2], 60h
jz      short loc_44a277
mov     ebp, [esp+0d0h+arg_8]
and     ebp, 1f0000h
shr     ebp, 10h
sub     ebp, [esp+0d0h+ptdec]
inc     ebp
test    ebp, ebp
jle     short loc_44a277
mov     [esp+0d0h+var_bc], 0
mov     eax, 30h
mov     edx, [esp+0d0h+var_bc]
inc     [esp+0d0h+var_bc]
mov     [esp+edx+0d0h+string1], al
cmp     [esp+0d0h+var_bc], ebp
jl      short loc_44a24d
mov     eax, [esp+0d0h+var_bc]
push    ecx
lea     ecx, [esp+eax+0d4h+string1]
push    ecx
call    ds:lstrcpya
lea     ecx, [esp+0d0h+string1]
add     [esp+0d0h+ptdec], ebp
cmp     byte ptr [ecx], 0
jnz     loc_44a303
mov     byte ptr [edi], 30h
mov     byte ptr [edi+1], 0
inc     edi
test    esi, esi
jle     loc_44a39c
cmp     [esp+0d0h+var_bd], 0
jz      short loc_44a29d
mov     al, [esp+0d0h+var_bd]
mov     [edi], al
test    byte ptr [esp+0d0h+arg_8], 80h
jnz     loc_44a38d
dec     esi
mov     [esp+0d0h+var_bc], esi
cmp     byte ptr [esi+ecx], 30h
jnz     short loc_44a2d3
xor     eax, eax
cmp     [esp+0d0h+var_bc], eax
jl      short loc_44a2d3
mov     edx, [esp+0d0h+var_bc]
mov     [edx+ecx], al
dec     [esp+0d0h+var_bc]
mov     edx, [esp+0d0h+var_bc]
cmp     byte ptr [edx+ecx], 30h
jz      short loc_44a2b8
cmp     [esp+0d0h+var_bc], 0
jge     short loc_44a2e2
mov     [esp+0d0h+var_bc], 0
mov     eax, [esp+0d0h+var_bc]
cmp     byte ptr [eax+ecx], 0
jnz     loc_44a382
cmp     [esp+0d0h+var_b0], 0
jz      loc_44a37d
mov     byte ptr [edi], 30h
jmp     loc_44a3b0
cmp     [esp+0d0h+ptdec], 0
jnz     short loc_44a317
mov     [esp+0d0h+var_b0], 1
jmp     loc_44a288
mov     eax, [esp+0d0h+ptdec]
mov     ebp, 3
cdq
mov     [esp+0d0h+var_b8], eax
idiv    ebp
mov     [esp+0d0h+var_bc], edx
test    edx, edx
jnz     short loc_44a333
mov     [esp+0d0h+var_bc], ebp
xor     edx, edx
mov     ebp, 3
mov     eax, [esp+0d0h+var_bc]
sub     [esp+0d0h+var_b8], eax
dec     [esp+0d0h+var_bc]
test    eax, eax
jz      short loc_44a35c
mov     al, [ecx]
inc     ecx
mov     [edi], al
inc     edi
mov     eax, [esp+0d0h+var_bc]
dec     [esp+0d0h+var_bc]
test    eax, eax
jnz     short loc_44a34a
cmp     [esp+0d0h+var_b8], edx
jle     loc_44a288
test    byte ptr [esp+0d0h+arg_8+1], 80h
jz      short loc_44a377
test    bl, bl
jz      short loc_44a377
mov     [edi], bl
inc     edi
mov     [esp+0d0h+var_bc], ebp
jmp     short loc_44a33a
mov     byte ptr [edi], 0
jmp     short loc_44a3b4
push    ecx
inc     edi
push    edi
call    ds:lstrcpya
jmp     short loc_44a3b4
push    ecx
inc     edi
push    edi
mov     byte ptr [esi+ecx], 0
call    ds:lstrcpya
jmp     short loc_44a3b4
cmp     [esp+0d0h+var_b0], 0
jz      short loc_44a3a8
mov     byte ptr [edi], 30h
jmp     short loc_44a3b0
mov     byte ptr [edi], 0
jmp     short loc_44a3b4
mov     byte ptr [edi], 23h
mov     byte ptr [edi+1], 0
mov     eax, [esp+0d0h+lpstring1]
cmp     byte ptr [eax], 2dh
jnz     short loc_44a3f5
lea     ecx, [eax+1]
mov     eax, ecx
cmp     byte ptr [ecx], 0
jz      short loc_44a3e1
mov     dl, [eax]
cmp     bl, dl
jz      short loc_44a3db
cmp     [esp+0d0h+var_bd], dl
jz      short loc_44a3db
cmp     dl, 30h
jnz     short loc_44a3e1
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_44a3ca
cmp     byte ptr [eax], 0
jnz     short loc_44a3f5
mov     eax, [esp+0d0h+lpstring1]
push    ecx
push    eax
call    ds:lstrcpya
mov     eax, [esp+0d0h+lpstring1]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
fild    [esp+arg_0]
mov     eax, [esp+lpstring1]
mov     ecx, [esp+arg_4]
sub     esp, 4
push    eax
push    ecx
sub     esp, 8
fstp    [esp+14h+value]
call    sub_44a070
add     esp, 14h
retn
push    esi
call    ds:__imp_getlasterror
mov     esi, eax
push    0
call    ds:setlasterror
mov     eax, esi
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 8
push    esi
mov     ecx, [eax]
mov     esi, 0ffffffffh
push    0
push    ecx
call    sub_44baf0
mov     [esp+14h+hobject], eax
mov     [esp+14h+var_4], edx
add     esp, 8
cmp     [esp+0ch+hobject], 0
jz      short loc_44a496
push    0
push    eax
call    ds:getfilesize
mov     esi, eax
mov     ecx, [esp+0ch+var_4]
mov     eax, [esp+0ch+hobject]
push    ecx
push    eax
call    sub_44ae90
add     esp, 8
mov     eax, esi
pop     esi
add     esp, 8
retn
mov     eax, [esp+hfile]
push    esi
mov     ecx, [esp+4+arg_4]
push    edi
push    ecx
push    eax
call    sub_44ba30
mov     edi, [esp+10h+arg_4]
add     esp, 8
test    eax, eax
jz      short loc_44a4f6
test    edi, 8000h
jz      short loc_44a4cc
mov     esi, [eax+9ah]
jmp     short loc_44a4e4
mov     eax, [esp+8+hfile]
push    2
mov     ecx, [esp+0ch+arg_4]
push    0
push    ecx
push    eax
call    sub_44af10
add     esp, 10h
mov     esi, eax
push    offset dword_4a8470
call    sub_48f1a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
mov     esi, 0ffffffffh
pop     edi
mov     eax, esi
pop     esi
retn
sub     esp, 210h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
xor     edi, edi
lea     eax, [esp+220h+pathname]
push    105h
mov     ecx, [esp+224h+arg_0]
push    eax
push    ecx
call    sub_44f520
add     esp, 0ch
test    eax, eax
jz      short loc_44a53c
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 210h
retn
mov     ebx, ds:__imp_getlasterror
xor     ebp, ebp
inc     edi
lea     eax, [esp+220h+tempfilename]
lea     ecx, [esp+220h+pathname]
push    eax
push    edi
push    offset prefixstring
push    ecx
call    ds:gettempfilenamea
test    eax, eax
jz      short loc_44a5a0
lea     eax, [esp+220h+tempfilename]
push    ebp
push    4000080h
push    1
push    ebp
push    2
push    40000000h
push    eax
call    ds:createfilea
cmp     eax, 0ffffffffh
jnz     short loc_44a599
call    ebx
cmp     eax, 0b7h
mov     esi, eax
jnz     short loc_44a5a0
cmp     edi, 3
jge     short loc_44a5a0
mov     ebp, 1
jmp     short loc_44a5a0
push    eax
call    ds:closehandle
test    ebp, ebp
jnz     short loc_44a542
cmp     esi, 6ch
jz      short loc_44a5c0
cmp     esi, 5
jz      short loc_44a5c0
cmp     esi, 13h
jz      short loc_44a5c0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 210h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 210h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     esp, 4
push    esi
push    ecx
push    eax
call    sub_44ba30
add     esp, 8
test    eax, eax
jz      short loc_44a638
lea     ecx, [esp+8+var_4]
add     eax, 18h
push    ecx
push    eax
call    sub_44f360
add     esp, 8
cmp     [esp+8+var_4], 0
jz      short loc_44a620
mov     eax, [esp+8+var_4]
push    eax
call    sub_44f7a0
add     esp, 4
mov     esi, eax
mov     eax, [esp+8+var_4]
push    eax
call    sub_44f4a0
add     esp, 4
jmp     short loc_44a624
mov     esi, [esp+8+var_4]
push    offset dword_4a8470
call    sub_48f1a0
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 4
retn
push    0a0h
mov     esi, 0ffffffffh
call    sub_44ba20
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 4
retn
sub     esp, 214h
push    esi
push    edi
mov     edi, [esp+21ch+arg_0]
mov     eax, [edi]
push    eax
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_44a696
push    45eh
call    sub_44ba20
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    105h
push    eax
mov     ecx, [edi]
push    ecx
call    sub_44f640
add     esp, 0ch
cmp     [esp+21ch+var_20d], 0
jnz     short loc_44a6c4
cmp     [esp+21ch+var_20e], 5ch
jnz     short loc_44a6c4
xor     eax, eax
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
mov     esi, ds:chartooema
push    eax
lea     eax, [esp+220h+psrc]
push    eax
call    esi
lea     ecx, [esp+21ch+psrc]
push    ecx
call    ds:getfileattributesa
cmp     eax, 0ffffffffh
jnz     short loc_44a6f1
xor     eax, eax
pop     edi
pop     esi
add     esp, 214h
retn
test    al, 10h
jz      short loc_44a703
mov     eax, 1
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+var_214]
mov     ecx, [edi]
push    eax
push    ecx
call    sub_44f6d0
lea     eax, [esp+224h+var_214]
add     esp, 8
cmp     [esp+21ch+var_214], 2eh
jnz     short loc_44a722
lea     eax, [esp+21ch+var_213]
push    105h
push    eax
lea     eax, [esp+224h+psrc]
push    eax
call    sub_47f9f0
lea     eax, [esp+228h+psrc]
add     esp, 0ch
mov     edi, ds:charuppera
push    eax
call    edi
lea     ecx, [esp+21ch+psrc]
push    ecx
lea     ecx, [esp+220h+psrc]
push    ecx
call    esi
lea     ecx, [esp+21ch+sz]
push    0
push    5c0h
push    105h
push    ecx
call    sub_47fe70
lea     ecx, [esp+22ch+sz]
add     esp, 10h
push    ecx
call    edi
lea     ecx, [esp+21ch+sz]
lea     edx, [esp+21ch+psrc]
push    ecx
mov     esi, ds:lstrcmpa
push    edx
call    esi
test    eax, eax
jnz     short loc_44a79b
mov     eax, 2
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+sz]
push    1
push    5c0h
push    105h
push    eax
call    sub_47fe70
lea     eax, [esp+22ch+sz]
add     esp, 10h
push    eax
call    edi
lea     eax, [esp+21ch+sz]
lea     ecx, [esp+21ch+psrc]
push    eax
push    ecx
call    esi
test    eax, eax
jnz     short loc_44a7e2
mov     eax, 3
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset amod
push    eax
call    esi
test    eax, eax
jnz     short loc_44a800
mov     eax, 4
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset apcm
push    eax
call    esi
test    eax, eax
jnz     short loc_44a81e
mov     eax, 5
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset awav
push    eax
call    esi
test    eax, eax
jnz     short loc_44a83c
mov     eax, 5
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset aaif
push    eax
call    esi
test    eax, eax
jnz     short loc_44a85a
mov     eax, 5
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset amve
push    eax
call    esi
test    eax, eax
jnz     short loc_44a878
mov     eax, 6
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset aavi
push    eax
call    esi
test    eax, eax
jnz     short loc_44a896
mov     eax, 6
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset amov
push    eax
call    esi
test    eax, eax
jnz     short loc_44a8b4
mov     eax, 6
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset adir
push    eax
call    esi
test    eax, eax
jnz     short loc_44a8d2
mov     eax, 6
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset aflc
push    eax
call    esi
test    eax, eax
jnz     short loc_44a8f0
mov     eax, 6
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset afli
push    eax
call    esi
test    eax, eax
jnz     short loc_44a90e
mov     eax, 6
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset acel
push    eax
call    esi
test    eax, eax
jnz     short loc_44a92c
mov     eax, 6
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset ampg
push    eax
call    esi
test    eax, eax
jnz     short loc_44a94a
mov     eax, 6
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset aucd
push    eax
call    esi
test    eax, eax
jnz     short loc_44a968
mov     eax, 8
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset au32
push    eax
call    esi
test    eax, eax
jnz     short loc_44a986
mov     eax, 8
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset adll
push    eax
call    esi
test    eax, eax
jnz     short loc_44a9a4
mov     eax, 8
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset atxt
push    eax
call    esi
test    eax, eax
jnz     short loc_44a9c2
mov     eax, 9
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset abat
push    eax
call    esi
test    eax, eax
jnz     short loc_44a9e0
mov     eax, 0ah
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset acom
push    eax
call    esi
test    eax, eax
jnz     short loc_44a9fe
mov     eax, 0ah
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset aexe_0
push    eax
call    esi
test    eax, eax
jnz     short loc_44aa1c
mov     eax, 0ah
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset apif
push    eax
call    esi
test    eax, eax
jnz     short loc_44aa3a
mov     eax, 0ah
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset aapl
push    eax
call    esi
test    eax, eax
jnz     short loc_44aa58
mov     eax, 0ch
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset aa3l
push    eax
call    esi
test    eax, eax
jnz     short loc_44aa76
mov     eax, 0ch
pop     edi
pop     esi
add     esp, 214h
retn
lea     eax, [esp+21ch+psrc]
push    offset aapr
push    eax
call    esi
pop     edi
cmp     eax, 1
sbb     eax, eax
pop     esi
and     eax, 2
add     esp, 214h
add     eax, 0bh
retn
sub     esp, 8
mov     [esp+8+var_4], 0
push    ebx
push    esi
mov     esi, [esp+10h+arg_4]
push    edi
push    ebp
test    esi, esi
jnz     short loc_44aac1
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    1
call    ds:seterrormode
mov     [esp+18h+var_6], ax
mov     eax, [esp+18h+arg_0]
push    eax
call    sub_44f3f0
mov     edi, [esp+1ch+arg_8]
add     esp, 4
mov     [edi], eax
mov     al, [esi]
test    al, al
jz      loc_44ab6b
mov     ebp, esi
cmp     byte ptr [ebp+0], 3bh
jz      short loc_44aafa
inc     ebp
cmp     byte ptr [ebp+0], 0
jnz     short loc_44aaed
mov     bl, [ebp+0]
push    esi
mov     byte ptr [ebp+0], 0
mov     eax, [edi]
push    eax
call    sub_44f4c0
add     esp, 8
mov     [ebp+0], bl
mov     eax, [edi]
push    eax
call    sub_44acb0
add     esp, 4
test    eax, eax
jz      short loc_44ab52
mov     eax, [edi]
mov     ecx, dword_4adc68
push    eax
call    sub_44c1e0
mov     ebx, [eax]
mov     ebp, eax
mov     eax, ds:dword_4a8510
mov     ecx, dword_4adc68
push    eax
call    sub_44c1e0
push    eax
mov     ecx, ebp
call    dword ptr [ebx+54h]
mov     [esp+18h+var_4], 1
jmp     short loc_44ab60
cmp     byte ptr [ebp+0], 0
jz      short loc_44ab5d
lea     esi, [ebp+1]
jmp     short loc_44ab60
mov     byte ptr [esi], 0
cmp     [esp+18h+var_4], 0
jz      loc_44aae1
cmp     [esp+18h+var_4], 0
jnz     short loc_44ab83
mov     eax, [edi]
push    eax
call    sub_44f4a0
add     esp, 4
mov     dword ptr [edi], 0
movsx   eax, [esp+18h+var_6]
push    eax
call    ds:seterrormode
mov     eax, [esp+18h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 10ch
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
push    1
call    ds:seterrormode
mov     [esp+11ch+var_10a], ax
mov     eax, [esp+11ch+arg_0]
push    eax
call    sub_44f3f0
mov     edi, [esp+120h+arg_4]
add     esp, 4
cmp     eax, esi
mov     [edi], eax
jnz     short loc_44abe3
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10ch
retn
mov     ebx, 1
xor     ebp, ebp
cmp     ebx, 4
jg      short loc_44ac63
lea     eax, [ebx-1]
cmp     eax, 3
ja      short def_44abf7
jmp     ds:jpt_44abf7[eax*4]
cmp     ds:word_4a8518, bp
jz      short loc_44ac5e
lea     eax, [esp+11ch+var_108]
push    105h
push    eax
mov     ecx, ds:dword_4a8510
push    ecx
call    sub_44f520
lea     ecx, [esp+128h+var_108]
add     esp, 0ch
mov     edx, [edi]
push    ecx
push    edx
call    sub_44f4c0
add     esp, 8
jmp     short def_44abf7
mov     eax, [edi]
push    eax
call    sub_4566d0
jmp     short loc_44ac4e
mov     eax, [edi]
push    eax
call    sub_456730
jmp     short loc_44ac4e
mov     eax, [edi]
push    eax
call    sub_456780
add     esp, 4
mov     eax, [edi]
push    eax
call    sub_44acb0
add     esp, 4
mov     esi, eax
inc     ebx
test    esi, esi
jz      short loc_44abea
movsx   eax, [esp+11ch+var_10a]
push    eax
call    ds:seterrormode
test    esi, esi
jnz     short loc_44ac88
mov     eax, [edi]
test    eax, eax
jz      short loc_44ac88
push    eax
call    sub_44f4a0
add     esp, 4
mov     dword ptr [edi], 0
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10ch
retn
sub     esp, 248h
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+250h+arg_0]
push    edi
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_44ace6
push    45eh
call    sub_44ba20
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
add     esp, 248h
retn
lea     eax, [esp+250h+filename]
push    105h
push    eax
push    edi
call    sub_44f640
lea     eax, [esp+25ch+findfiledata]
lea     ecx, [esp+25ch+filename]
add     esp, 0ch
push    eax
push    ecx
call    ds:findfirstfilea
cmp     eax, 0ffffffffh
jz      short loc_44ad1d
mov     esi, 1
push    eax
call    ds:findclose
mov     eax, esi
pop     edi
pop     esi
add     esp, 248h
retn
sub     esp, 218h
push    esi
push    edi
mov     esi, [esp+220h+arg_0]
push    esi
call    sub_44f920
add     esp, 4
test    eax, eax
jnz     loc_44ae14
push    esi
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_44ad78
push    45eh
call    sub_44ba20
add     esp, 4
mov     eax, 45eh
pop     edi
pop     esi
add     esp, 218h
retn
push    esi
call    sub_44b740
add     esp, 4
test    eax, eax
jnz     loc_44ae7d
lea     eax, [esp+220h+psrc]
push    105h
push    eax
push    esi
call    sub_44f640
lea     eax, [esp+22ch+psrc]
add     esp, 0ch
push    eax
lea     eax, [esp+224h+psrc]
push    eax
call    ds:chartooema
push    1
mov     esi, ds:seterrormode
call    esi
mov     di, ax
push    0
lea     eax, [esp+224h+psrc]
push    80h
push    2
push    0
push    1
push    0c0000000h
push    eax
call    ds:createfilea
movsx   ecx, di
mov     [esp+220h+hobject], eax
push    ecx
call    esi
cmp     [esp+220h+hobject], 0ffffffffh
jnz     short loc_44adfb
call    getlasterror
pop     edi
pop     esi
add     esp, 218h
retn
mov     eax, [esp+220h+hobject]
push    eax
call    ds:closehandle
xor     eax, eax
pop     edi
pop     esi
add     esp, 218h
retn
lea     eax, [esp+220h+dwbytes]
lea     ecx, [esp+220h+hobject]
lea     edx, [esp+220h+var_218]
push    eax
push    ecx
push    edx
push    esi
call    sub_44f8e0
add     esp, 10h
test    eax, eax
jnz     short loc_44ae7d
mov     eax, [esp+220h+dwbytes]
push    2
push    eax
call    sub_45b8f0
mov     [esp+228h+var_218], eax
add     esp, 8
test    eax, eax
mov     [esp+220h+hobject], 0
jnz     short loc_44ae68
push    70h
call    sub_44ba20
add     esp, 4
pop     edi
pop     esi
add     esp, 218h
retn
mov     eax, [esp+220h+dwbytes]
mov     ecx, [esp+220h+var_218]
push    eax
push    0
push    ecx
push    esi
call    sub_44f8a0
add     esp, 10h
pop     edi
pop     esi
add     esp, 218h
retn
sub     esp, 108h
push    esi
mov     esi, [esp+10ch+arg_4]
test    esi, 0ffff0000h
jz      short loc_44aeb8
push    0
call    sub_44ba20
add     esp, 4
pop     esi
add     esp, 108h
retn
mov     eax, [esp+10ch+hobject]
mov     ecx, [esp+10ch+arg_4]
mov     [esp+10ch+var_108], eax
push    80000h
lea     eax, [esp+110h+var_108]
mov     [esp+110h+var_104], ecx
push    eax
push    offset dword_4a8470
call    sub_48eba0
add     esp, 0ch
test    eax, eax
mov     eax, [esp+10ch+hobject]
jz      short loc_44aeff
test    esi, 8000h
jnz     short loc_44aeff
push    eax
call    ds:closehandle
pop     esi
add     esp, 108h
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_4]
test    esi, 0ffff0000h
jnz     short loc_44af3c
mov     eax, [esp+8+dwmovemethod]
mov     esi, [esp+8+ldistancetomove]
mov     ecx, [esp+8+hfile]
push    eax
push    0
push    esi
push    ecx
call    ds:setfilepointer
pop     esi
add     esp, 4
retn
mov     eax, [esp+8+hfile]
mov     ecx, [esp+8+arg_4]
push    ecx
push    eax
call    sub_44ba30
add     esp, 8
test    eax, eax
jz      short loc_44afb6
mov     ecx, [esp+8+dwmovemethod]
test    ecx, ecx
jz      short loc_44af78
cmp     ecx, 1
jz      short loc_44af7e
cmp     ecx, 2
jz      short loc_44af87
mov     esi, [esp+8+var_4]
test    esi, esi
jl      short loc_44af90
cmp     [eax+14h], esi
jl      short loc_44af90
push    0
mov     [eax+18h], esi
jmp     short loc_44af9a
mov     esi, [esp+8+ldistancetomove]
jmp     short loc_44af68
mov     esi, [esp+8+ldistancetomove]
add     esi, [eax+18h]
jmp     short loc_44af68
mov     esi, [esp+8+ldistancetomove]
add     esi, [eax+14h]
jmp     short loc_44af68
mov     esi, 0ffffffffh
push    0a0h
call    sub_44ba20
add     esp, 4
push    offset dword_4a8470
call    sub_48f1a0
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     esi, 0ffffffffh
push    2
call    sub_44ba20
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     eax, [esp+hfile]
push    ebx
mov     ebx, [esp+4+arg_4]
push    esi
mov     esi, [esp+8+ldistancetomove]
push    edi
test    ebx, 0ffff0000h
jnz     short loc_44b033
push    ebx
push    eax
call    sub_44a4a0
mov     edi, [esp+14h+hfile]
add     esp, 8
cmp     eax, esi
jz      loc_44b0b5
push    0
push    0
push    esi
push    edi
call    ds:setfilepointer
cmp     eax, 0ffffffffh
jnz     short loc_44b019
mov     esi, 0ffffffffh
pop     edi
mov     eax, esi
pop     esi
pop     ebx
retn
push    edi
call    ds:setendoffile
test    eax, eax
jnz     loc_44b0b5
mov     esi, 0ffffffffh
pop     edi
mov     eax, esi
pop     esi
pop     ebx
retn
mov     ecx, [esp+0ch+arg_4]
push    ecx
push    eax
call    sub_44ba30
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_44b0a6
cmp     [edi+1ch], esi
jl      short loc_44b05c
mov     eax, [edi+10h]
push    eax
call    sub_45bbc0
add     esp, 4
cmp     eax, esi
jge     short loc_44b086
push    42h
mov     eax, [edi+1ch]
cmp     eax, esi
mov     ecx, esi
jg      short loc_44b069
mov     eax, ecx
push    eax
mov     eax, [edi+10h]
push    eax
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jnz     short loc_44b083
mov     esi, 0ffffffffh
push    70h
jmp     short loc_44b08b
mov     [edi+10h], eax
push    0
mov     [edi+14h], esi
call    sub_44ba20
add     esp, 4
push    offset dword_4a8470
call    sub_48f1a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     esi, 0ffffffffh
push    2
call    sub_44ba20
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+dwmovemethod]
sub     esp, 4
mov     ecx, [esp+4+ldistancetomove]
push    ebx
mov     edx, [esp+8+hfile]
push    esi
push    edi
push    ebp
push    eax
push    ecx
mov     eax, [esp+1ch+arg_4]
push    eax
push    edx
call    sub_44af10
mov     esi, [esp+24h+hfile]
mov     edi, [esp+24h+arg_4]
add     esp, 10h
cmp     eax, 0ffffffffh
jnz     short loc_44b0fd
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
test    edi, 0ffff0000h
jnz     short loc_44b142
lea     eax, [esp+14h+numberofbytesread]
push    0
mov     ecx, [esp+18h+nnumberofbytestoread]
push    eax
mov     edx, [esp+1ch+lpbuffer]
push    ecx
mov     [esp+20h+numberofbytesread], 0
push    edx
push    esi
call    ds:readfile
test    eax, eax
jz      short loc_44b135
mov     eax, [esp+14h+numberofbytesread]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+14h+hfile]
mov     ecx, [esp+14h+arg_4]
push    ecx
push    eax
call    sub_44ba30
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_44b1c9
mov     ebx, [ebp+14h]
mov     eax, [esp+14h+nnumberofbytestoread]
sub     ebx, [ebp+18h]
cmp     ebx, eax
jl      short loc_44b16a
mov     ebx, eax
test    ebx, ebx
jg      short loc_44b174
xor     ebx, ebx
test    ebx, ebx
jle     short loc_44b1a8
mov     eax, [ebp+10h]
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_44b1a8
mov     esi, [ebp+18h]
mov     edi, [esp+14h+lpbuffer]
add     esi, eax
mov     ecx, ebx
shr     ecx, 2
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
add     [ebp+18h], ebx
mov     eax, [ebp+10h]
mov     ebp, ds:globalunlock
push    eax
call    ebp
push    offset dword_4a8470
call    sub_48f1a0
add     esp, 4
push    0
call    sub_44ba20
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ebx, 0ffffffffh
push    2
call    sub_44ba20
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+dwmovemethod]
sub     esp, 4
mov     ecx, [esp+4+ldistancetomove]
push    ebx
mov     edx, [esp+8+hfile]
push    esi
push    edi
push    ebp
push    eax
push    ecx
mov     eax, [esp+1ch+arg_4]
push    eax
push    edx
call    sub_44af10
mov     edi, [esp+24h+arg_4]
mov     esi, [esp+24h+hfile]
add     esp, 10h
cmp     eax, 0ffffffffh
jnz     short loc_44b22d
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
test    edi, 0ffff0000h
jnz     short loc_44b272
lea     eax, [esp+14h+numberofbyteswritten]
push    0
mov     ebx, [esp+18h+nnumberofbytestowrite]
push    eax
mov     ecx, [esp+1ch+lpbuffer]
push    ebx
mov     [esp+20h+numberofbyteswritten], 0
push    ecx
push    esi
call    ds:writefile
test    eax, eax
jz      short loc_44b265
mov     eax, [esp+14h+numberofbyteswritten]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    0
call    sub_44ba20
mov     eax, [esp+18h+hfile]
mov     ecx, [esp+18h+arg_4]
add     esp, 4
push    ecx
push    eax
call    sub_44ba30
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      loc_44b31d
mov     ebx, [esp+14h+nnumberofbytestowrite]
mov     esi, [ebp+18h]
add     esi, ebx
cmp     [ebp+14h], esi
jge     short loc_44b2e5
cmp     [ebp+1ch], esi
jl      short loc_44b2bb
mov     eax, [ebp+10h]
push    eax
call    sub_45bbc0
add     esp, 4
cmp     eax, esi
jge     short loc_44b2e2
push    2
mov     eax, [ebp+10h]
push    esi
push    eax
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jnz     short loc_44b2df
mov     ebx, 0ffffffffh
push    70h
call    sub_44ba20
add     esp, 4
jmp     short loc_44b2e5
mov     [ebp+10h], eax
mov     [ebp+14h], esi
test    ebx, ebx
jle     short loc_44b306
mov     eax, [ebp+10h]
mov     esi, [esp+14h+lpbuffer]
mov     ecx, ebx
mov     edi, [eax]
shr     ecx, 2
add     edi, [ebp+18h]
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
add     [ebp+18h], ebx
push    offset dword_4a8470
call    sub_48f1a0
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ebx, 0ffffffffh
push    2
call    sub_44ba20
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
test    [esp+arg_4], 0ffff0000h
jnz     short loc_44b355
mov     eax, [esp+hfile]
push    eax
call    ds:flushfilebuffers
xor     eax, eax
retn
push    ebx
push    esi
push    edi
mov     ebx, ds:seterrormode
push    1
call    ebx
mov     edi, eax
mov     eax, [esp+0ch+arg_0]
push    eax
call    sub_44f7a0
add     esp, 4
mov     esi, eax
inc     esi
push    edi
call    ebx
pop     edi
cmp     esi, 1
sbb     eax, eax
pop     esi
inc     eax
pop     ebx
retn
sub     esp, 210h
push    esi
push    edi
mov     esi, [esp+218h+arg_0]
push    esi
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_44b3c7
push    45eh
call    sub_44ba20
add     esp, 4
mov     eax, 45eh
pop     edi
pop     esi
add     esp, 210h
retn
mov     edi, [esp+218h+arg_4]
push    edi
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_44b3f6
push    45eh
call    sub_44ba20
add     esp, 4
mov     eax, 45eh
pop     edi
pop     esi
add     esp, 210h
retn
lea     eax, [esp+218h+psrc]
push    105h
push    eax
push    edi
call    sub_44f640
lea     eax, [esp+224h+psrc]
add     esp, 0ch
mov     edi, ds:chartooema
push    eax
lea     eax, [esp+21ch+psrc]
push    eax
call    edi
lea     ecx, [esp+218h+pdst]
push    105h
push    ecx
push    esi
call    sub_44f640
lea     eax, [esp+224h+pdst]
add     esp, 0ch
push    eax
lea     eax, [esp+21ch+pdst]
push    eax
call    edi
lea     ecx, [esp+218h+psrc]
lea     edx, [esp+218h+pdst]
push    ecx
push    edx
call    ds:movefilea
test    eax, eax
jnz     short loc_44b468
call    getlasterror
pop     edi
pop     esi
add     esp, 210h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 210h
retn
sub     esp, 108h
push    esi
mov     esi, [esp+10ch+arg_0]
push    esi
call    sub_44f920
add     esp, 4
test    eax, eax
jnz     loc_44b53c
push    esi
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_44b4c6
push    45eh
call    sub_44ba20
add     esp, 4
mov     eax, 45eh
pop     esi
add     esp, 108h
retn
lea     eax, [esp+10ch+psrc]
push    105h
push    eax
push    esi
call    sub_44f640
lea     eax, [esp+118h+psrc]
add     esp, 0ch
push    eax
lea     eax, [esp+110h+psrc]
push    eax
call    ds:chartooema
lea     ecx, [esp+10ch+psrc]
push    ecx
call    ds:deletefilea
test    eax, eax
jnz     short loc_44b532
lea     eax, [esp+10ch+psrc]
push    eax
call    ds:getfileattributesa
cmp     eax, 0ffffffffh
jz      short loc_44b525
test    al, 10h
jz      short loc_44b525
lea     eax, [esp+10ch+psrc]
push    eax
call    ds:removedirectorya
test    eax, eax
jz      short loc_44b525
xor     eax, eax
pop     esi
add     esp, 108h
retn
call    getlasterror
pop     esi
add     esp, 108h
retn
xor     eax, eax
pop     esi
add     esp, 108h
retn
xor     eax, eax
pop     esi
add     esp, 108h
retn
sub     esp, 108h
lea     eax, [esp+108h+var_108]
push    esi
mov     esi, [esp+10ch+arg_0]
push    105h
push    eax
push    esi
call    sub_44f5e0
add     esp, 0ch
test    eax, eax
jnz     short loc_44b593
lea     eax, [esp+10ch+var_108]
mov     ecx, [esp+10ch+arg_4]
push    eax
push    ecx
push    esi
call    sub_44b5c0
add     esp, 0ch
pop     esi
add     esp, 108h
retn
mov     eax, [esp+10ch+arg_4]
push    offset asc_4adc60
push    eax
push    esi
call    sub_44b5c0
add     esp, 0ch
pop     esi
add     esp, 108h
retn
sub     esp, 108h
push    esi
mov     esi, [esp+10ch+arg_0]
push    esi
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_44b5f5
push    45eh
call    sub_44ba20
add     esp, 4
mov     eax, 45eh
pop     esi
add     esp, 108h
retn
cmp     ds:dword_4a8324, 0
push    esi
jz      short loc_44b60f
mov     eax, ds:dword_4a8324
push    eax
call    sub_44f430
add     esp, 8
jmp     short loc_44b61c
call    sub_44f3f0
add     esp, 4
mov     ds:dword_4a8324, eax
mov     eax, [esp+10ch+arg_8]
mov     ecx, ds:dword_4a8324
push    eax
push    ecx
call    sub_44f5b0
lea     ecx, [esp+114h+psrc]
add     esp, 8
mov     edx, ds:dword_4a8324
push    105h
push    ecx
push    edx
call    sub_44f640
lea     ecx, [esp+118h+psrc]
add     esp, 0ch
push    ecx
lea     ecx, [esp+110h+psrc]
push    ecx
call    ds:chartooema
lea     ecx, [esp+10ch+psrc]
push    offset findfiledata
push    ecx
call    ds:findfirstfilea
mov     ds:hfindfile, eax
inc     eax
cmp     eax, 1
pop     esi
sbb     eax, eax
and     eax, 2
cmp     eax, 1
sbb     ecx, ecx
add     esp, 108h
inc     ecx
mov     ds:dword_4a8320, ecx
retn
cmp     ds:dword_4a8320, 0
jz      short loc_44b6bd
cmp     ds:dword_4a8324, 0
jz      short loc_44b6ba
mov     eax, ds:dword_4a8324
push    eax
call    sub_44f4a0
mov     ds:dword_4a8324, 0
add     esp, 4
xor     eax, eax
retn
push    offset findfiledata.cfilename
push    offset findfiledata.cfilename
call    ds:oemtochara
push    offset findfiledata.cfilename
mov     eax, ds:dword_4a8324
push    eax
call    sub_44f5b0
mov     ecx, [esp+8+arg_0]
add     esp, 8
mov     eax, ds:dword_4a8324
push    eax
push    ecx
call    sub_44f430
mov     eax, [esp+8+arg_4]
add     esp, 8
mov     ecx, ds:findfiledata.dwfileattributes
push    offset findfiledata
and     ecx, 10h
mov     [eax], ecx
mov     edx, ds:hfindfile
push    edx
call    ds:findnextfilea
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     ds:dword_4a8320, eax
test    eax, eax
jz      short loc_44b73a
mov     eax, ds:hfindfile
push    eax
call    ds:findclose
mov     ds:hfindfile, 0
mov     eax, 1
retn
sub     esp, 108h
push    esi
push    edi
mov     esi, [esp+110h+arg_0]
push    esi
call    sub_44b360
add     esp, 4
test    eax, eax
jnz     short loc_44b76a
mov     eax, 3edh
pop     edi
pop     esi
add     esp, 108h
retn
lea     eax, [esp+110h+psrc]
push    105h
push    eax
push    esi
call    sub_44f520
lea     eax, [esp+11ch+psrc]
add     esp, 0ch
push    eax
lea     eax, [esp+114h+psrc]
push    eax
call    ds:chartooema
push    esi
call    sub_44f780
lea     edi, [esp+114h+psrc]
add     esp, 4
test    eax, eax
jnz     short loc_44b7ab
push    esi
call    sub_44f760
lea     edi, [esp+eax+114h+psrc]
add     esp, 4
mov     esi, ds:getfileattributesa
push    5ch
push    edi
call    _strchr
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_44b82f
lea     eax, [esp+110h+psrc]
cmp     edi, eax
jz      short loc_44b802
mov     ecx, edi
sub     ecx, eax
lea     eax, [edi-1]
cmp     ecx, 1
jg      short loc_44b7da
lea     eax, [esp+110h+psrc]
cmp     byte ptr [eax], 3ah
jz      short loc_44b802
lea     eax, [edi-1]
cmp     ecx, 1
jg      short loc_44b7eb
lea     eax, [esp+110h+psrc]
cmp     byte ptr [eax], 2eh
jz      short loc_44b802
lea     eax, [esp+110h+psrc]
mov     byte ptr [edi], 0
push    eax
call    esi
cmp     eax, 0ffffffffh
jz      short loc_44b805
mov     byte ptr [edi], 5ch
inc     edi
jmp     short loc_44b7b1
lea     eax, [esp+110h+psrc]
push    0
push    eax
call    ds:createdirectorya
test    eax, eax
jz      short loc_44b821
xor     eax, eax
pop     edi
pop     esi
add     esp, 108h
retn
call    getlasterror
pop     edi
pop     esi
add     esp, 108h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 108h
retn
sub     esp, 108h
push    esi
push    edi
push    1
mov     edi, ds:seterrormode
call    edi
mov     esi, eax
push    105h
lea     eax, [esp+114h+string]
mov     ecx, [esp+114h+drive]
push    eax
push    ecx
call    __getdcwd
add     esp, 0ch
test    eax, eax
jnz     short loc_44b877
mov     [esp+110h+string], 0
push    esi
call    edi
lea     eax, [esp+110h+string]
push    eax
call    ds:lstrlena
movsx   ecx, ax
lea     ecx, [esp+ecx+110h+string]
cmp     byte ptr [ecx], 5ch
jz      short loc_44b89e
inc     ax
mov     byte ptr [ecx], 5ch
movsx   ecx, ax
mov     [esp+ecx+110h+string], 0
lea     eax, [esp+110h+string]
mov     ecx, [esp+110h+arg_4]
push    eax
push    ecx
call    sub_44f4c0
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
add     esp, 108h
retn
mov     ecx, [esp+arg_0]
sub     esp, 108h
lea     eax, [esp+108h+psrc]
push    105h
push    eax
push    ecx
call    sub_44f520
lea     ecx, [esp+114h+psrc]
add     esp, 0ch
push    ecx
lea     ecx, [esp+10ch+psrc]
push    ecx
call    ds:chartooema
lea     ecx, [esp+108h+psrc]
push    ecx
call    ds:setcurrentdirectorya
test    eax, eax
jz      short loc_44b905
xor     eax, eax
add     esp, 108h
retn
call    getlasterror
add     esp, 108h
retn
push    0
push    108h
push    offset dword_4a8470
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_44b93b
xor     eax, eax
retn
mov     dword_4af2cc, 8000h
mov     eax, 1
retn
push    offset dword_4a8470
call    sub_48e7d0
add     esp, 4
retn
sub     esp, 114h
push    esi
mov     esi, [esp+118h+arg_0]
mov     eax, [esi]
push    eax
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_44b997
push    45eh
call    sub_44ba20
add     esp, 4
mov     eax, 45eh
pop     esi
add     esp, 114h
retn
lea     eax, [esp+118h+string]
push    105h
push    eax
mov     ecx, [esi]
push    ecx
call    sub_44f640
mov     ecx, [esp+124h+arg_4]
lea     edx, [esp+124h+string]
mov     [esp+124h+var_10e], 0
mov     [esp+124h+lparam+2], ecx
add     esp, 0ch
push    edx
call    ds:globaladdatoma
mov     word ptr [esp+118h+lparam], ax
lea     eax, [esp+118h+lparam]
push    eax
push    offset enumfunc
call    ds:enumwindows
mov     ecx, [esp+118h+lparam]
push    ecx
call    ds:globaldeleteatom
cmp     [esp+118h+var_10e], 1
mov     eax, 0
pop     esi
adc     eax, 0ffffffffh
add     esp, 114h
and     eax, 20h
retn
push    esi
mov     esi, [esp+4+dwerrcode]
push    esi
call    ds:setlasterror
mov     eax, esi
pop     esi
retn
push    ebx
push    esi
push    edi
push    ebp
xor     edi, edi
push    offset dword_4a8470
call    sub_48f140
add     esp, 4
mov     ebx, eax
cmp     ebx, edi
jz      short loc_44ba6d
mov     esi, [esp+10h+arg_0]
mov     ebp, [esp+10h+arg_4]
push    ebx
push    offset dword_4a8470
call    sub_48f1d0
add     esp, 8
cmp     [eax], esi
jnz     short loc_44ba6a
cmp     [eax+4], ebp
jnz     short loc_44ba6a
mov     edi, eax
dec     ebx
jnz     short loc_44ba51
test    edi, edi
jnz     short loc_44ba7e
push    offset dword_4a8470
call    sub_48f1a0
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
test    eax, 0ffff8000h
jnz     short loc_44bab6
mov     eax, [esp+lplastwritetime]
mov     ecx, [esp+hfile]
push    eax
push    0
push    0
push    ecx
call    ds:getfiletime
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_4]
test    eax, 0ffff8000h
jnz     short loc_44bae0
mov     eax, [esp+lplastwritetime]
mov     ecx, [esp+hfile]
push    eax
push    0
push    0
push    ecx
call    ds:setfiletime
retn
xor     eax, eax
retn
sub     esp, 224h
push    ebx
push    esi
mov     esi, [esp+22ch+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     [esp+234h+hobject], edi
push    esi
mov     [esp+238h+var_104], edi
call    sub_44f920
add     esp, 4
test    eax, eax
jnz     loc_44bcd4
push    esi
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_44bb57
mov     [esp+234h+var_218], edi
push    45eh
mov     [esp+238h+var_214], edi
call    sub_44ba20
mov     eax, [esp+238h+var_218]
mov     edx, [esp+238h+var_214]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 224h
retn
lea     eax, [esp+234h+psrc]
push    105h
push    eax
push    esi
call    sub_44f640
lea     eax, [esp+240h+psrc]
add     esp, 0ch
push    eax
lea     eax, [esp+238h+psrc]
push    eax
call    ds:chartooema
mov     ebx, [esp+234h+arg_4]
test    bl, 8
jz      short loc_44bb8a
xor     ebx, ebx
jmp     short loc_44bb8d
and     ebx, 3
mov     word ptr [esp+234h+var_70], bx
push    1
call    ds:seterrormode
mov     word ptr [esp+234h+var_218], ax
mov     edi, [esp+234h+var_70]
and     edi, 0ffffh
push    0
push    80h
push    3
push    0
push    edi
call    sub_44bf80
add     esp, 4
push    eax
push    edi
call    sub_44bf50
add     esp, 4
mov     ebp, ds:createfilea
push    eax
lea     eax, [esp+24ch+psrc]
push    eax
call    ebp
mov     [esp+234h+hobject], eax
push    80h
lea     ecx, [esp+238h+string1]
cmp     eax, 1
sbb     edi, edi
lea     eax, [esp+238h+psrc]
push    eax
push    ecx
call    sub_47f9d0
add     esp, 0ch
neg     edi
cmp     [esp+234h+hobject], 0ffffffffh
jz      short loc_44bc11
test    edi, edi
jz      short loc_44bc3e
push    0
push    80h
push    3
push    0
push    ebx
call    sub_44bf80
add     esp, 4
push    eax
push    ebx
call    sub_44bf50
add     esp, 4
push    eax
lea     eax, [esp+24ch+psrc]
push    eax
call    ebp
mov     [esp+234h+hobject], eax
cmp     [esp+234h+hobject], 0ffffffffh
jnz     short loc_44bc75
push    0
push    80h
push    3
push    0
push    ebx
call    sub_44bf80
add     esp, 4
push    eax
push    ebx
call    sub_44bf50
add     esp, 4
push    eax
lea     eax, [esp+24ch+psrc]
push    eax
call    ebp
mov     [esp+234h+hobject], eax
test    edi, edi
jz      short loc_44bc81
push    0
call    ds:closehandle
movsx   eax, word ptr [esp+234h+var_218]
push    eax
call    ds:seterrormode
cmp     [esp+234h+hobject], 0ffffffffh
jnz     short loc_44bca6
xor     eax, eax
pop     ebp
mov     edx, eax
pop     edi
pop     esi
pop     ebx
add     esp, 224h
retn
call    ds:__imp_getlasterror
mov     edi, eax
push    esi
call    sub_44be10
add     esp, 4
sub     eax, 2
cmp     eax, 1
push    edi
sbb     al, al
inc     al
mov     [esp+238h+var_f7], al
call    ds:setlasterror
jmp     loc_44bd6f
lea     eax, [esp+234h+var_220]
lea     ecx, [esp+234h+var_21c]
lea     edx, [esp+234h+var_224]
push    eax
push    ecx
push    edx
push    esi
call    sub_44f8e0
add     esp, 10h
test    eax, eax
jnz     short loc_44bd6f
xor     edi, edi
push    edi
call    sub_44ba20
add     esp, 4
cmp     [esp+234h+var_224], edi
jnz     short loc_44bd26
mov     [esp+234h+var_218], edi
push    2
mov     [esp+238h+var_214], edi
call    sub_44ba20
mov     eax, [esp+238h+var_218]
mov     edx, [esp+238h+var_214]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 224h
retn
mov     eax, dword_4adbf8
mov     ecx, [esp+234h+var_224]
mov     [esp+234h+var_104], 10000h
mov     edx, [esp+234h+var_21c]
mov     [esp+234h+hobject], eax
inc     eax
mov     [esp+13ch], ecx
mov     dword_4adbf8, eax
mov     [esp+234h+var_f4], edx
mov     eax, [esp+234h+var_220]
mov     [esp+234h+var_ec], eax
mov     dword ptr [esp+234h+string1], 0
lea     eax, [esp+234h+hobject]
push    eax
push    offset dword_4a8470
call    sub_48e920
add     esp, 8
test    eax, eax
jnz     short loc_44bdc0
xor     eax, eax
push    esi
mov     [esp+238h+var_218], eax
mov     [esp+238h+var_214], eax
call    sub_44f920
add     esp, 4
test    eax, eax
jnz     short loc_44bdad
mov     eax, [esp+234h+hobject]
push    eax
call    ds:closehandle
mov     eax, [esp+234h+var_218]
mov     edx, [esp+234h+var_214]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 224h
retn
mov     eax, [esp+234h+hobject]
mov     edx, [esp+234h+var_104]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 224h
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
push    eax
call    sub_44f920
add     esp, 4
test    eax, eax
jnz     short loc_44be01
push    0
mov     eax, [esi]
push    eax
call    sub_44f730
add     esp, 8
pop     esi
retn
mov     ecx, [esp+arg_0]
sub     esp, 108h
lea     eax, [esp+108h+rootpathname]
push    105h
push    eax
push    ecx
call    sub_44f580
add     esp, 0ch
test    eax, eax
jnz     short loc_44be43
lea     eax, [esp+108h+rootpathname]
push    eax
call    ds:getdrivetypea
add     esp, 108h
retn
xor     eax, eax
add     esp, 108h
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_44be10
add     esp, 4
cmp     eax, 2
jz      short loc_44be6b
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
call    sub_44f7a0
add     esp, 4
cmp     eax, 0ffffffffh
jnz     short loc_44be81
mov     eax, 3edh
pop     edi
pop     esi
retn
push    esi
call    sub_44a500
add     esp, 4
test    eax, eax
jz      short loc_44be96
mov     eax, 6ch
pop     edi
pop     esi
retn
cmp     [esp+8+arg_4], 0
jz      short loc_44beb1
push    esi
call    sub_44b740
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_44beb1
mov     eax, edi
pop     edi
pop     esi
retn
cmp     [esp+8+arg_8], 0
jz      short loc_44bec3
push    esi
call    sub_44ad30
add     esp, 4
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_44bf00
add     esp, 4
test    eax, eax
jnz     short loc_44bef4
push    offset windowname
mov     eax, [esi]
push    eax
call    sub_44f5b0
add     esp, 8
pop     esi
retn
mov     eax, 0ffffffffh
pop     esi
retn
sub     esp, 108h
mov     ecx, ds:hinstance
lea     eax, [esp+108h+filename]
push    105h
push    eax
push    ecx
call    ds:getmodulefilenamea
test    eax, eax
jz      short loc_44bf3a
mov     eax, [esp+108h+arg_0]
lea     ecx, [esp+108h+filename]
push    eax
push    ecx
call    sub_44f360
add     esp, 110h
retn
mov     eax, 0ffffffffh
add     esp, 108h
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44bf68
cmp     eax, 1
jz      short loc_44bf6e
cmp     eax, 20h
jz      short loc_44bf74
mov     eax, 0c0000000h
retn
mov     eax, 80000000h
retn
mov     eax, 40000000h
retn
mov     eax, 80000000h
retn
mov     eax, [esp+arg_0]
and     eax, 8
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
push    11ah
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_44bfaa
mov     ecx, eax
call    sub_44c0a0
jmp     short loc_44bfac
xor     eax, eax
mov     dword_4adc68, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
push    esi
mov     esi, dword_4adc68
test    esi, esi
jz      short loc_44bfdb
mov     ecx, esi
call    sub_44c120
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     dword_4adc68, 0
pop     esi
retn
xor     ax, ax
movsx   edx, ax
cmp     dword ptr [ecx+edx*8], 0
jz      short loc_44c004
inc     ax
cmp     ax, 1eh
jl      short loc_44bff3
cmp     ax, 1eh
jge     short loc_44c01a
movsx   eax, ax
lea     eax, [ecx+eax*8]
mov     dword ptr [eax], 1
mov     eax, [eax+4]
retn
xor     eax, eax
retn
call    sub_44bff0
test    eax, eax
jnz     short locret_44c040
push    29h
call    ??2@yapaxi@z
add     esp, 4
mov     ecx, eax
test    ecx, ecx
jz      short loc_44c03e
jmp     sub_44d680
xor     eax, eax
retn
xor     dx, dx
push    esi
mov     eax, [esp+4+block]
movsx   esi, dx
cmp     [ecx+esi*8+4], eax
jz      short loc_44c069
inc     dx
cmp     dx, 1eh
jl      short loc_44c058
cmp     dx, 1eh
jge     short loc_44c087
movsx   eax, dx
lea     esi, [ecx+eax*8]
mov     ecx, [ecx+eax*8+4]
mov     eax, [ecx]
call    dword ptr [eax]
mov     dword ptr [esi], 0
pop     esi
retn    4
push    eax
call    ??3@yaxpax@z
add     esp, 4
pop     esi
retn    4
push    ebx
push    esi
xor     si, si
push    edi
mov     edi, ecx
xor     ebx, ebx
mov     [edi+0f0h], ebx
push    29h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_44c0ce
mov     ecx, eax
call    sub_44d680
movsx   ecx, si
mov     [edi+ecx*8+4], eax
jmp     short loc_44c0d5
movsx   eax, si
mov     [edi+eax*8+4], ebx
movsx   eax, si
inc     si
mov     [edi+eax*8], ebx
cmp     si, 1eh
jl      short loc_44c0b0
lea     eax, [edi+0fch]
push    eax
call    sub_48f430
add     esp, 4
mov     ecx, edi
mov     dword ptr [edi+0f4h], 0
mov     dword ptr [edi+0f8h], 1
call    sub_44cbe0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
xor     bx, bx
push    edi
mov     edi, ecx
movsx   eax, bx
mov     esi, [edi+eax*8+4]
test    esi, esi
jz      short loc_44c144
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
inc     bx
cmp     bx, 1eh
jl      short loc_44c128
mov     ecx, edi
call    sub_44cf70
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     esi, ecx
call    sub_44c020
mov     edi, eax
test    edi, edi
jz      short loc_44c1a6
mov     eax, [esp+8+arg_0]
mov     ecx, esi
push    eax
call    sub_44c230
push    eax
mov     ecx, esi
push    edi
call    sub_44c230
mov     ecx, eax
call    sub_44d790
test    eax, eax
jz      short loc_44c1a6
test    edi, edi
jz      short loc_44c1a4
lea     ecx, [edi+4]
call    sub_44d0d0
push    edi
call    ??3@yaxpax@z
add     esp, 4
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
retn    4
mov     eax, [esp+arg_4]
push    esi
mov     esi, ecx
push    eax
call    sub_44c230
push    eax
mov     ecx, esi
mov     eax, [esp+8+arg_0]
push    eax
call    sub_44c230
mov     ecx, eax
call    sub_44d790
pop     esi
retn    8
mov     eax, [esp+arg_0]
retn    4
mov     eax, [esp+arg_0]
retn    4
mov     eax, [esp+arg_0]
retn    4
mov     eax, [esp+arg_0]
retn    4
mov     eax, [esp+arg_0]
retn    4
mov     eax, [esp+arg_0]
retn    4
sub     esp, 138h
mov     [esp+138h+var_134], 0
mov     ecx, [esp+138h+lpstring]
push    ebx
push    esi
push    edi
mov     esi, [esp+144h+arg_4]
push    ebp
dec     esi
push    ecx
call    ds:lstrlena
cmp     eax, esi
jg      short loc_44c283
xor     eax, eax
jmp     loc_44c549
lea     eax, [esp+148h+var_128]
push    0
push    8
push    eax
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_44c2a2
mov     eax, 8
jmp     loc_44c549
mov     ebx, [esp+148h+lpstring]
xor     ebp, ebp
mov     [esp+148h+var_12c], ebp
mov     al, [ebx]
cmp     al, 5ch
jnz     short loc_44c322
cmp     byte ptr [ebx+1], 5ch
jnz     short loc_44c322
lea     ecx, [ebx+2]
push    5ch
push    ecx
call    _strchr
add     esp, 8
test    eax, eax
jz      loc_44c37d
push    5ch
inc     eax
push    eax
call    _strchr
add     esp, 8
mov     edi, eax
cmp     edi, ebp
jz      loc_44c37d
mov     [esp+148h+var_130], bp
mov     eax, edi
sub     eax, [esp+148h+lpstring]
lea     ecx, [esp+148h+var_130]
mov     [esp+148h+var_12e], ax
push    ecx
lea     edx, [esp+14ch+var_128]
push    edx
call    sub_48e920
add     esp, 8
test    eax, eax
jnz     short loc_44c31d
mov     [esp+148h+var_134], 8
jmp     loc_44c538
lea     ebx, [edi+1]
jmp     short loc_44c37d
test    al, al
jz      short loc_44c37d
mov     ecx, [esp+148h+lpstring]
cmp     byte ptr [ecx+1], 3ah
jnz     short loc_44c37d
lea     eax, [esp+148h+var_130]
lea     ecx, [esp+148h+var_128]
mov     [esp+148h+var_130], 0
mov     [esp+148h+var_12e], 2
push    eax
push    ecx
call    sub_48e920
add     esp, 8
test    eax, eax
jnz     short loc_44c364
mov     [esp+148h+var_134], 8
jmp     loc_44c538
mov     ebx, [esp+148h+lpstring]
add     ebx, 2
cmp     byte ptr [ebx], 5ch
jnz     short loc_44c37d
mov     ebx, [esp+148h+lpstring]
add     ebx, 3
push    5ch
push    ebx
call    _strchr
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_44c3cd
mov     eax, ebx
lea     ecx, [esp+148h+var_130]
sub     eax, [esp+148h+lpstring]
push    ecx
mov     [esp+14ch+var_130], ax
lea     edx, [esp+14ch+var_128]
mov     eax, edi
push    edx
sub     eax, ebx
mov     [esp+150h+var_12e], ax
call    sub_48e920
add     esp, 8
test    eax, eax
jz      short loc_44c3c0
lea     ebx, [edi+1]
jmp     short loc_44c37d
mov     [esp+148h+var_134], 8
jmp     loc_44c538
push    0
push    ebx
call    _strchr
add     esp, 8
mov     ecx, ebx
sub     eax, ebx
sub     ecx, [esp+148h+lpstring]
mov     [esp+148h+var_130], cx
lea     edx, [esp+148h+var_128]
mov     [esp+148h+var_12e], ax
lea     ecx, [esp+148h+var_130]
push    ecx
push    edx
call    sub_48e920
add     esp, 8
test    eax, eax
jnz     short loc_44c410
mov     [esp+148h+var_134], 8
jmp     loc_44c538
mov     ebx, 1
mov     eax, [esp+148h+var_128]
xor     ebp, ebp
mov     edx, ebx
mov     [esp+148h+var_138], eax
test    edx, edx
jz      short loc_44c436
dec     eax
mov     cl, [esp+148h+var_11c]
mov     edi, eax
shl     edi, cl
mov     ecx, [esp+148h+var_112]
add     edi, [ecx]
jmp     short loc_44c446
lea     edi, [ebx-1]
mov     cl, [esp+148h+var_11c]
shl     edi, cl
mov     ecx, [esp+148h+var_112]
inc     ebx
add     edi, [ecx]
movsx   ecx, word ptr [edi+2]
test    ebp, ebp
jz      short loc_44c44f
inc     ecx
cmp     ebp, 1
jnz     short loc_44c457
add     ecx, 4
cmp     esi, ecx
jl      short loc_44c46a
sub     esi, ecx
xor     edx, 1
mov     dword ptr [edi+4], 1
inc     ebp
jmp     short loc_44c421
cmp     ebp, 1
jg      short loc_44c4a1
mov     edx, [esp+148h+var_138]
mov     cl, [esp+148h+var_11c]
dec     edx
mov     eax, [esp+148h+var_112]
shl     edx, cl
mov     ecx, [eax]
mov     ebx, [esp+148h+arg_4]
movsx   eax, word ptr [edx+ecx]
add     eax, [esp+148h+lpstring]
push    ebx
mov     ecx, [esp+14ch+lpstring]
push    eax
push    ecx
jmp     loc_44c530
xor     esi, esi
lea     edi, [esp+148h+var_108]
mov     ebx, 1
cmp     [esp+148h+var_138], ebx
jl      short loc_44c518
lea     edx, [ebx-1]
mov     cl, [esp+148h+var_11c]
mov     eax, [esp+148h+var_112]
shl     edx, cl
add     edx, [eax]
cmp     dword ptr [edx+4], 0
jz      short loc_44c4f6
mov     ax, [edx+2]
test    ax, ax
jle     short loc_44c4ea
movsx   ebp, ax
movsx   eax, word ptr [edx]
add     eax, [esp+148h+lpstring]
push    ebp
push    eax
push    edi
add     edi, ebp
call    _memcpy
add     esp, 0ch
cmp     [esp+148h+var_138], ebx
jz      short loc_44c511
mov     byte ptr [edi], 5ch
inc     edi
jmp     short loc_44c511
test    esi, esi
jnz     short loc_44c511
mov     byte ptr [edi], 2eh
inc     edi
inc     edi
mov     esi, 1
inc     edi
mov     byte ptr [edi-2], 2eh
mov     byte ptr [edi-1], 2eh
mov     byte ptr [edi], 5ch
inc     edi
inc     ebx
cmp     [esp+148h+var_138], ebx
jge     short loc_44c4b2
mov     eax, [esp+148h+arg_4]
lea     ecx, [esp+148h+var_108]
mov     edx, [esp+148h+lpstring]
push    eax
push    ecx
mov     byte ptr [edi], 0
push    edx
call    sub_47f9f0
add     esp, 0ch
lea     eax, [esp+148h+var_128]
push    eax
call    sub_48e7d0
mov     eax, [esp+14ch+var_134]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 138h
retn    8
sub     esp, 10h
lea     eax, [esp+10h+var_8]
lea     ecx, [esp+10h+var_c]
lea     edx, [esp+10h+var_14+4]
push    eax
push    ecx
push    edx
mov     ecx, [esp+1ch+arg_0]
mov     eax, [ecx]
call    dword ptr [eax+58h]
test    eax, eax
jnz     short loc_44c5e0
mov     eax, dword ptr [esp+10h+var_8]
xor     ecx, ecx
mov     edx, dword ptr [esp+10h+var_c]
mov     dword ptr [esp+10h+var_8], eax
mov     eax, dword ptr [esp+10h+var_14+4]
mov     [esp+10h+var_4], ecx
fild    qword ptr [esp+10h+var_8]
mov     dword ptr [esp+10h+var_8], edx
mov     [esp+10h+var_4], ecx
fild    qword ptr [esp+10h+var_8]
mov     dword ptr [esp+10h+var_8], eax
mov     [esp+10h+var_4], ecx
fmulp   st(1), st
fild    qword ptr [esp+10h+var_8]
fmulp   st(1), st
fcom    ds:dbl_4ab0d8
fstp    qword ptr [esp+10h+var_8]
fnstsw  ax
test    ah, 41h
jnz     short loc_44c5d1
mov     eax, 7fffffffh
add     esp, 10h
retn    4
fld     qword ptr [esp+10h+var_8]
call    __ftol
add     esp, 10h
retn    4
xor     eax, eax
add     esp, 10h
retn    4
sub     esp, 0ch
lea     eax, [esp+0ch+var_8]
lea     ecx, [esp+0ch+var_c]
lea     edx, [esp+0ch+var_4]
push    eax
push    ecx
push    edx
mov     ecx, [esp+18h+arg_0]
mov     eax, [ecx]
call    dword ptr [eax+58h]
test    eax, eax
jnz     short loc_44c61e
mov     eax, dword ptr [esp+0ch+var_8]
imul    eax, dword ptr [esp+0ch+var_c]
add     esp, 0ch
retn    4
xor     eax, eax
add     esp, 0ch
retn    4
mov     eax, [esp+arg_0]
push    eax
call    sub_44c230
mov     ecx, eax
call    sub_44eea0
retn    4
mov     eax, [esp+arg_0]
push    eax
call    sub_44c230
mov     ecx, eax
call    sub_44ef30
retn    4
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
test    edi, edi
jz      short loc_44c6c9
mov     eax, [edi]
mov     ecx, edi
mov     esi, [eax+10h]
call    esi
mov     ecx, eax
call    sub_44d2f0
test    eax, eax
jz      short loc_44c6c9
mov     ecx, edi
call    esi
mov     ecx, eax
mov     esi, eax
call    sub_44d310
mov     edi, [esp+0ch+arg_8]
mov     ecx, [esi+8]
movsx   eax, di
mov     ebx, [esp+0ch+lpstring1]
push    eax
push    ecx
push    ebx
call    sub_47f9d0
add     esp, 0ch
mov     ecx, esi
mov     byte ptr [ebx+edi-1], 0
call    sub_44d360
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     eax, 2
pop     edi
pop     esi
pop     ebx
retn    0ch
sub     esp, 2ch
push    ebx
push    esi
mov     esi, [esp+34h+arg_0]
push    edi
mov     edi, ecx
test    esi, esi
jz      short loc_44c768
lea     ecx, [esp+38h+var_2c]
call    sub_44d680
push    esi
mov     ecx, edi
call    sub_44c230
lea     ecx, [esp+38h+var_2c]
push    eax
call    sub_44d790
mov     esi, eax
test    esi, esi
jnz     short loc_44c754
lea     ecx, [esp+38h+var_2c]
call    sub_44e8f0
lea     ecx, [esp+38h+var_2c]
call    sub_44ea10
lea     ecx, [esp+38h+var_28]
call    sub_44d310
mov     edi, [esp+38h+arg_8]
mov     ecx, [esp+38h+lpstring2]
movsx   eax, di
mov     ebx, [esp+38h+lpstring1]
push    eax
push    ecx
push    ebx
call    sub_47f9d0
lea     ecx, [esp+44h+var_28]
add     esp, 0ch
mov     byte ptr [edi+ebx-1], 0
call    sub_44d360
lea     ecx, [esp+38h+var_2c]
call    sub_44d730
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn    0ch
mov     esi, 2
pop     edi
mov     eax, esi
pop     esi
pop     ebx
add     esp, 2ch
retn    0ch
mov     ecx, [esp+arg_0]
test    ecx, ecx
jz      short loc_44c795
lea     eax, [esp+arg_4]
push    eax
mov     eax, [ecx]
call    dword ptr [eax+38h]
retn    8
mov     eax, 1f44h
retn    8
mov     ecx, [esp+arg_0]
test    ecx, ecx
jz      short loc_44c7b7
mov     eax, [esp+arg_4]
push    4
push    eax
mov     eax, [ecx]
call    dword ptr [eax+3ch]
retn    8
mov     eax, 1f44h
retn    8
cmp     [esp+arg_0], 1
sbb     eax, eax
and     eax, 1f44h
retn    8
mov     eax, 2
retn
mov     eax, 1
retn
push    esi
mov     dword ptr [ecx], offset off_4ab140
mov     esi, ecx
lea     ecx, [ecx+4]
call    sub_44d050
mov     eax, esi
mov     dword ptr [esi], offset off_4ab0e0
pop     esi
retn
lea     eax, [ecx+4]
retn
add     ecx, 4
jmp     sub_44d0b0
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     edi, ecx
mov     esi, [esp+0ch+hmem]
cmp     esi, ebx
jz      short loc_44c857
push    esi
call    ds:globallock
push    eax
mov     ecx, edi
mov     eax, [edi]
call    dword ptr [eax+1ch]
mov     ebx, eax
push    esi
call    ds:globalunlock
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn    4
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     edi, ecx
push    2
push    105h
mov     dword ptr [esi], 105h
call    sub_45b8f0
mov     ecx, [esp+14h+arg_0]
add     esp, 8
mov     ebx, eax
mov     [ecx], eax
test    ebx, ebx
jz      short loc_44c8ad
push    ebx
call    ds:globallock
mov     ecx, [esi]
push    ecx
push    eax
mov     eax, [edi]
mov     ecx, edi
call    dword ptr [eax+24h]
mov     esi, eax
push    ebx
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    8
mov     esi, 8
pop     edi
mov     eax, esi
pop     esi
pop     ebx
retn    8
mov     eax, [esp+arg_4]
push    esi
push    edi
mov     esi, [ecx]
mov     edi, [esp+8+str]
push    eax
push    edi
call    dword ptr [esi+30h]
mov     esi, eax
test    esi, esi
jnz     short loc_44c8f0
push    2eh
push    edi
call    _strrchr
add     esp, 8
test    eax, eax
jz      short loc_44c8f3
pop     edi
mov     byte ptr [eax], 0
mov     eax, esi
pop     esi
retn    8
mov     byte ptr [edi], 0
mov     eax, esi
pop     edi
pop     esi
retn    8
sub     esp, 108h
lea     eax, [esp+108h+str]
push    ebx
push    esi
mov     ebx, [ecx]
mov     esi, [esp+110h+lpstring1]
push    edi
push    105h
push    eax
mov     byte ptr [esi], 0
call    dword ptr [ebx+30h]
mov     edi, eax
test    edi, edi
jnz     short loc_44c956
lea     eax, [esp+114h+str]
push    2eh
push    eax
call    _strrchr
add     esp, 8
test    eax, eax
jz      short loc_44c956
mov     ebx, [esp+114h+arg_4]
inc     eax
movsx   ecx, bx
push    ecx
push    eax
push    esi
call    sub_47f9d0
mov     byte ptr [esi+ebx-1], 0
add     esp, 0ch
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn    8
sub     esp, 110h
mov     [esp+110h+var_110], ecx
push    ebx
push    esi
push    edi
mov     esi, [esp+11ch+lpstring]
push    ebp
push    esi
mov     edi, ds:lstrlena
call    edi
mov     bx, ax
push    105h
mov     eax, [esp+124h+var_110]
lea     edx, [esp+124h+str]
push    edx
mov     ecx, [eax]
mov     [esp+128h+var_10c], ecx
mov     ecx, [esp+128h+var_110]
mov     eax, [esp+128h+var_10c]
call    dword ptr [eax+30h]
test    eax, eax
jnz     loc_44ca4e
lea     eax, [esp+120h+str]
push    2eh
push    eax
call    _strrchr
add     esp, 8
test    eax, eax
jz      short loc_44c9ce
mov     byte ptr [eax], 0
movsx   eax, bx
inc     eax
cmp     eax, 104h
jnb     loc_44ca7d
mov     bp, 103h
lea     eax, [esp+120h+str]
sub     bp, bx
push    eax
call    edi
lea     ebx, [esp+eax+120h+str]
lea     ecx, [esp+120h+str]
mov     eax, ebx
sub     eax, ecx
cmp     eax, 1
jle     short loc_44c9ff
dec     ebx
jmp     short loc_44ca03
lea     ebx, [esp+120h+str]
movsx   ebp, bp
lea     eax, [esp+120h+str]
push    eax
call    edi
cmp     eax, ebp
jle     short loc_44ca33
mov     eax, ebx
lea     ecx, [esp+120h+str]
sub     eax, ecx
mov     byte ptr [ebx], 0
cmp     eax, 1
jle     short loc_44ca24
dec     ebx
jmp     short loc_44ca28
lea     ebx, [esp+120h+str]
lea     eax, [esp+120h+str]
push    eax
call    edi
cmp     eax, ebp
jg      short loc_44ca11
cmp     byte ptr [esi], 0
jz      short loc_44ca7d
lea     eax, [esp+120h+str]
push    105h
push    offset default
push    eax
call    sub_47f990
jmp     short loc_44ca67
test    bx, bx
jle     short loc_44ca8d
lea     eax, [esp+120h+str]
push    105h
push    offset default
push    eax
call    sub_47f9d0
lea     eax, [esp+12ch+str]
add     esp, 0ch
push    105h
push    esi
push    eax
call    sub_47f990
add     esp, 0ch
lea     eax, [esp+120h+str]
mov     ecx, [esp+120h+var_110]
mov     ebx, [esp+120h+var_10c]
push    eax
call    dword ptr [ebx+2ch]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 110h
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     edi, ecx
test    ebx, ebx
jz      short loc_44cadb
mov     esi, [esp+0ch+arg_4]
test    esi, esi
jz      short loc_44cadb
push    ebx
mov     ecx, edi
call    sub_44d510
test    eax, eax
jnz     short loc_44cadb
push    esi
mov     ecx, edi
call    sub_44d510
test    eax, eax
jnz     short loc_44cadb
push    esi
mov     eax, [ebx]
mov     ecx, ebx
call    dword ptr [eax+40h]
pop     edi
pop     esi
pop     ebx
retn    8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    8
push    ebx
push    esi
push    edi
mov     esi, ecx
mov     ebx, [esp+0ch+arg_0]
test    ebx, ebx
jz      short loc_44cb33
push    ebx
mov     ecx, esi
call    sub_44d510
test    eax, eax
jnz     short loc_44cb33
mov     edi, [esp+0ch+arg_4]
test    edi, edi
jz      short loc_44cb25
push    edi
mov     ecx, esi
call    sub_44d510
test    eax, eax
jz      short loc_44cb25
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    8
push    edi
mov     eax, [ebx]
mov     ecx, ebx
call    dword ptr [eax+44h]
pop     edi
pop     esi
pop     ebx
retn    8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    8
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     edi, ecx
test    ebx, ebx
jz      short loc_44cb83
push    ebx
mov     ecx, edi
call    sub_44d510
test    eax, eax
jnz     short loc_44cb83
mov     esi, [esp+0ch+arg_4]
test    esi, esi
jz      short loc_44cb75
push    esi
mov     ecx, edi
call    sub_44d510
test    eax, eax
jz      short loc_44cb75
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    8
push    esi
mov     eax, [ebx]
mov     ecx, ebx
call    dword ptr [eax+48h]
pop     edi
pop     esi
pop     ebx
retn    8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    8
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     edi, ecx
test    ebx, ebx
jz      short loc_44cbd3
push    ebx
mov     ecx, edi
call    sub_44d510
test    eax, eax
jnz     short loc_44cbd3
mov     esi, [esp+0ch+arg_4]
test    esi, esi
jz      short loc_44cbc5
push    esi
mov     ecx, edi
call    sub_44d510
test    eax, eax
jz      short loc_44cbc5
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    8
push    esi
mov     eax, [ebx]
mov     ecx, ebx
call    dword ptr [eax+4ch]
pop     edi
pop     esi
pop     ebx
retn    8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    8
push    ebx
push    esi
lea     ebx, [ecx+0fch]
push    edi
mov     esi, ecx
xor     edi, edi
push    edi
push    8
push    ebx
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_44cc11
mov     edi, 8
push    ebx
call    sub_48f430
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     dword ptr [esi+0f4h], 1
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 14h
mov     [esp+14h+var_10], ecx
push    ebx
mov     [esp+18h+var_4], 0
cmp     dword ptr [ecx+0f4h], 0
push    esi
push    edi
push    ebp
jz      loc_44cd9c
lea     eax, [ecx+0fch]
push    eax
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_44cc79
mov     ecx, [esp+24h+var_10]
call    sub_44cf70
mov     ecx, [esp+24h+var_10]
call    sub_44cbe0
mov     [esp+24h+var_4], eax
cmp     [esp+24h+var_4], 0
jnz     loc_44cd9c
mov     [esp+24h+henum], 0
lea     eax, [esp+24h+henum]
push    eax
push    0
push    0
push    1
push    1
call    wnetopenenuma
test    eax, eax
jnz     loc_44cd9c
mov     esi, 640h
push    2
mov     [esp+28h+ccount], 0ffffffffh
push    esi
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_44cccf
push    edi
call    ds:globallock
mov     ebx, eax
jmp     short loc_44ccd3
mov     ebx, [esp+24h+var_4]
test    edi, edi
jz      loc_44cd94
test    ebx, ebx
jz      loc_44cd94
lea     eax, [esp+24h+buffersize]
lea     ecx, [esp+24h+ccount]
mov     edx, [esp+24h+henum]
push    eax
mov     [esp+28h+buffersize], esi
push    ebx
push    ecx
push    edx
call    wnetenumresourcea
cmp     eax, 0eah
jnz     short loc_44cd29
mov     esi, [esp+24h+buffersize]
push    edi
call    ds:globalunlock
push    2
push    esi
push    edi
call    sub_45b960
add     esp, 0ch
test    eax, eax
jz      short loc_44cd5b
push    edi
call    ds:globallock
mov     ebx, eax
jmp     short loc_44cce3
test    eax, eax
jnz     short loc_44cd63
xor     bp, bp
cmp     word ptr [esp+24h+ccount], bp
jle     short loc_44cce3
movsx   eax, bp
shl     eax, 5
add     eax, ebx
inc     bp
mov     ecx, [eax+14h]
mov     edx, [eax+10h]
push    ecx
push    edx
mov     ecx, [esp+2ch+var_10]
call    sub_44cdb0
cmp     bp, word ptr [esp+24h+ccount]
jl      short loc_44cd37
jmp     short loc_44cce3
mov     [esp+24h+var_4], 8
mov     eax, [esp+24h+henum]
push    eax
call    wnetcloseenum
push    edi
call    ds:globalunlock
push    edi
call    sub_45ba00
add     esp, 4
cmp     [esp+24h+var_4], 0
jnz     short loc_44cd9c
mov     eax, [esp+24h+var_10]
mov     dword ptr [eax+0f4h], 0
jmp     short loc_44cd9c
mov     [esp+24h+var_4], 8
mov     eax, [esp+24h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 8
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
lea     edi, [ecx+0fch]
push    edi
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_44cdd1
mov     ebx, 1f43h
mov     esi, [esp+18h+lpstring]
test    esi, esi
jz      short loc_44ce41
mov     ebp, [esp+18h+arg_4]
test    ebp, ebp
jz      short loc_44ce41
lea     eax, [esp+18h+var_8]
test    esi, esi
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
jz      short loc_44ce11
cmp     byte ptr [esi], 0
jz      short loc_44ce11
push    esi
call    ds:lstrlena
inc     eax
push    eax
push    esi
call    sub_45b910
mov     [esp+20h+var_8], eax
add     esp, 8
test    ebp, ebp
jz      short loc_44ce31
cmp     byte ptr [ebp+0], 0
jz      short loc_44ce31
push    ebp
call    ds:lstrlena
inc     eax
push    eax
push    ebp
call    sub_45b910
mov     [esp+20h+var_4], eax
add     esp, 8
lea     eax, [esp+18h+var_8]
push    eax
push    edi
call    sub_48e920
add     esp, 8
jmp     short loc_44ce46
mov     ebx, 1f44h
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn    8
push    ebx
push    esi
push    edi
xor     ebx, ebx
lea     esi, [ecx+0fch]
mov     edi, ecx
push    esi
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_44ce85
mov     ebx, 1f43h
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
retn
mov     dword ptr [edi+0f8h], 1
push    esi
call    sub_48f140
add     esp, 4
test    eax, eax
jnz     short loc_44cea1
mov     ebx, 8
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
mov     edi, ecx
lea     ebp, [ecx+0fch]
push    ebp
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_44ced9
mov     ebx, 1f43h
pop     ebp
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn    4
mov     esi, [esp+10h+arg_0]
cmp     dword ptr [esi], 0
jnz     short loc_44ceec
mov     dword ptr [edi+0f8h], 1
push    ebp
call    sub_48e830
add     esp, 4
cmp     eax, [edi+0f8h]
jb      short loc_44cf22
mov     eax, [edi+0f8h]
push    eax
push    ebp
call    sub_48f1d0
add     esp, 8
mov     [esi], eax
test    eax, eax
jz      short loc_44cf28
mov     eax, ebx
pop     ebp
inc     dword ptr [edi+0f8h]
pop     edi
pop     esi
pop     ebx
retn    4
mov     dword ptr [esi], 0
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    4
push    esi
push    edi
xor     esi, esi
lea     edi, [ecx+0fch]
push    edi
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_44cf61
mov     esi, 1f43h
pop     edi
mov     eax, esi
pop     esi
retn
push    edi
call    sub_48f1a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
sub     esp, 0ch
mov     [esp+0ch+var_c], 0
push    ebx
push    esi
push    edi
push    ebp
lea     esi, [ecx+0fch]
mov     edi, ecx
push    esi
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_44cfa1
mov     [esp+1ch+var_c], 1f43h
jmp     loc_44d036
push    esi
call    sub_48f140
add     esp, 4
test    eax, eax
jnz     short loc_44cfb8
mov     [esp+1ch+var_c], 8
jmp     short loc_44d01a
push    esi
call    sub_48e830
add     esp, 4
mov     ebx, eax
cmp     eax, 1
jb      short loc_44d011
xor     ebp, ebp
lea     eax, [esp+1ch+hmem]
push    eax
push    ebx
push    esi
call    sub_48ea00
add     esp, 0ch
test    eax, eax
jz      short loc_44d00b
cmp     [esp+1ch+hmem], ebp
jz      short loc_44cff4
mov     eax, [esp+1ch+hmem]
push    eax
call    sub_45ba00
mov     [esp+20h+hmem], ebp
add     esp, 4
cmp     [esp+1ch+var_4], ebp
jz      short loc_44d00b
mov     eax, [esp+1ch+var_4]
push    eax
call    sub_45ba00
mov     [esp+20h+var_4], ebp
add     esp, 4
dec     ebx
cmp     ebx, 1
jnb     short loc_44cfca
push    esi
call    sub_48f1a0
add     esp, 4
push    esi
call    sub_48e7d0
add     esp, 4
push    esi
call    sub_48f430
mov     dword ptr [edi+0f4h], 0
add     esp, 4
mov     eax, [esp+1ch+var_c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
mov     dword ptr [ecx], offset off_4ab150
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     eax, ecx
retn
xor     eax, eax
retn
mov     eax, [esp+arg_8]
mov     edx, [esp+arg_4]
push    eax
push    edx
mov     eax, [ecx]
call    dword ptr [eax+8]
retn    0ch
xor     eax, eax
retn    4
push    esi
mov     eax, [ecx+4]
mov     esi, ecx
test    eax, eax
jz      short loc_44d0c3
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
pop     esi
retn
mov     dword ptr [ecx], offset off_4ab150
jmp     sub_44d0b0
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     edi, ecx
call    sub_44d0b0
mov     esi, [esp+0ch+lpstring]
cmp     esi, ebx
jz      short loc_44d120
push    esi
call    ds:lstrlena
inc     eax
push    eax
mov     [edi+0ch], eax
push    esi
call    sub_45b910
add     esp, 8
mov     [edi+4], eax
mov     [edi+8], ebx
cmp     eax, ebx
jnz     short loc_44d127
mov     ebx, 8
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
retn    4
mov     ecx, edi
call    sub_44d0b0
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn    4
push    ebx
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
call    sub_44d0b0
mov     ebx, [esp+0ch+arg_0]
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_44d16a
push    eax
call    sub_45bab0
add     esp, 4
mov     [esi+4], eax
cmp     eax, edi
jz      short loc_44d165
mov     eax, [ebx+0ch]
mov     [esi+0ch], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn    4
mov     edi, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn    4
push    ebx
push    esi
push    edi
mov     esi, ecx
push    ebp
call    sub_44d390
movsx   ebx, [esp+10h+arg_4]
mov     edi, eax
mov     ecx, esi
lea     eax, [ebx-1]
push    eax
call    sub_44d3a0
mov     ebp, eax
test    ebp, ebp
jnz     short loc_44d1c8
mov     ecx, esi
call    sub_44d310
add     edi, [esi+8]
push    ebx
mov     ecx, [esp+14h+lpstring2]
push    ecx
push    edi
call    sub_47f9d0
add     esp, 0ch
mov     ecx, esi
mov     byte ptr [ebx+edi-1], 0
call    sub_44d360
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
sub     esp, 18h
mov     [esp+18h+var_18], ecx
push    ebx
lea     ecx, [esp+1ch+var_10]
push    esi
push    edi
push    ebp
call    sub_44d050
mov     eax, [esp+28h+lpstring]
push    eax
call    ds:lstrlena
mov     edi, eax
mov     ecx, [esp+28h+var_18]
call    sub_44d390
add     edi, eax
mov     esi, [esp+28h+arg_8]
movsx   eax, word ptr [esi]
sub     edi, eax
lea     ecx, [esp+28h+var_10]
push    edi
call    sub_44d3a0
mov     [esp+28h+var_14], eax
test    eax, eax
jnz     loc_44d2b7
mov     ecx, [esp+28h+var_18]
call    sub_44d310
lea     ecx, [esp+28h+var_10]
call    sub_44d310
mov     eax, [esp+28h+var_18]
mov     edi, [esp+28h+lpstring1]
mov     ebx, [eax+8]
mov     ax, [esp+28h+arg_4]
test    ax, ax
jz      short loc_44d26a
movsx   ebp, ax
lea     eax, [ebp+1]
push    eax
push    ebx
push    edi
add     ebx, ebp
add     edi, ebp
call    sub_47f9d0
add     esp, 0ch
mov     byte ptr [edi], 0
mov     eax, [esp+28h+lpstring]
mov     ebp, ds:lstrcpya
push    eax
push    edi
call    ebp
mov     ecx, [esp+28h+lpstring]
push    ecx
call    ds:lstrlena
mov     dx, ax
mov     ecx, [esp+28h+arg_c]
sub     dx, [esi]
mov     [ecx], dx
movsx   ebp, word ptr [esi]
movsx   edx, ax
mov     [esi], ax
add     ebx, ebp
push    ebx
add     edi, edx
push    edi
call    ds:lstrcata
lea     ecx, [esp+28h+var_10]
call    sub_44d360
mov     ecx, [esp+28h+var_18]
call    sub_44d360
cmp     [esp+28h+var_14], 0
jnz     short loc_44d2d0
lea     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_18]
push    eax
call    sub_44d130
mov     [esp+28h+var_14], eax
lea     ecx, [esp+28h+var_10]
call    sub_44d0d0
mov     eax, [esp+28h+var_14]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn    10h
cmp     dword ptr [ecx+4], 0
jz      short loc_44d302
cmp     dword ptr [ecx+0ch], 1
jle     short loc_44d302
mov     eax, 1
retn
xor     eax, eax
retn
push    esi
mov     esi, ecx
cmp     dword ptr [ecx+4], 0
jnz     short loc_44d333
push    42h
push    1
call    sub_45b8f0
add     esp, 8
mov     [esi+4], eax
test    eax, eax
jz      short loc_44d333
mov     dword ptr [esi+0ch], 1
mov     eax, [esi+4]
test    eax, eax
jz      short loc_44d351
push    eax
call    ds:globallock
mov     ecx, [esi+0ch]
mov     [esi+8], eax
mov     byte ptr [ecx+eax-1], 0
mov     eax, [esi+8]
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, ecx
cmp     dword ptr [ecx+4], 0
jz      short loc_44d389
mov     eax, [esi+8]
test    eax, eax
jz      short loc_44d389
mov     ecx, [esi+0ch]
mov     byte ptr [ecx+eax-1], 0
mov     eax, [esi+4]
push    eax
call    ds:globalunlock
mov     dword ptr [esi+8], 0
pop     esi
retn
mov     eax, [ecx+0ch]
test    eax, eax
jle     short loc_44d399
dec     eax
retn
xor     eax, eax
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
cmp     [ecx+8], ebx
mov     edi, ecx
jz      short loc_44d3b7
mov     eax, 8
pop     edi
pop     esi
pop     ebx
retn    4
mov     eax, [edi+4]
test    eax, eax
jz      short loc_44d3d5
push    2
mov     ecx, [edi+0ch]
mov     esi, [esp+10h+arg_0]
add     ecx, esi
push    ecx
push    eax
call    sub_45b9b0
add     esp, 0ch
jmp     short loc_44d3e5
mov     esi, [esp+0ch+arg_0]
push    2
inc     esi
push    esi
call    sub_45b8f0
add     esp, 8
mov     [edi+4], eax
cmp     dword ptr [edi+4], 0
jz      short loc_44d3f9
mov     eax, ebx
add     [edi+0ch], esi
pop     edi
pop     esi
pop     ebx
retn    4
mov     ebx, 8
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
retn    4
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
cmp     ecx, esi
mov     edi, ecx
jnz     short loc_44d428
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn    4
mov     ecx, edi
test    esi, esi
jz      short loc_44d465
call    sub_44d310
mov     ecx, esi
call    sub_44d310
mov     eax, [esi+8]
mov     ecx, [edi+8]
push    eax
push    ecx
call    ds:lstrcmpia
mov     ecx, esi
cmp     eax, 1
sbb     ebx, ebx
call    sub_44d360
neg     ebx
mov     ecx, edi
call    sub_44d360
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn    4
call    sub_44d2f0
pop     edi
cmp     eax, 1
sbb     eax, eax
pop     esi
neg     eax
pop     ebx
retn    4
push    esi
push    edi
mov     esi, ecx
mov     edi, [esp+8+lpstring]
push    edi
call    ds:lstrlena
cmp     eax, [esp+8+arg_4]
jg      short loc_44d4a2
push    edi
mov     ecx, esi
call    sub_44d0e0
pop     edi
pop     esi
retn    8
mov     eax, 1f44h
pop     edi
pop     esi
retn    8
call    sub_44d390
inc     eax
retn
push    esi
push    edi
mov     edi, ecx
call    sub_44d2f0
test    eax, eax
jz      short loc_44d503
mov     ecx, edi
call    sub_44d310
mov     ecx, edi
call    sub_44d390
mov     ecx, [edi+8]
mov     esi, [esp+8+lpstring1]
movsx   eax, ax
inc     eax
push    eax
push    ecx
push    esi
call    sub_47f9d0
add     esp, 0ch
mov     ecx, edi
call    sub_44d390
mov     ecx, edi
mov     byte ptr [esi+eax], 0
call    sub_44d360
pop     edi
pop     esi
retn    4
mov     ecx, [esp+arg_0]
test    ecx, ecx
jz      short loc_44d52a
mov     eax, [ecx]
call    dword ptr [eax+4]
sub     eax, 2
cmp     eax, 1
sbb     eax, eax
neg     eax
retn    4
xor     eax, eax
retn    4
xor     eax, eax
mov     dword ptr [ecx], offset off_4ab168
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     eax, ecx
retn
xor     eax, eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
retn
push    esi
push    10h
mov     esi, 0
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_44d57d
mov     ecx, eax
call    sub_44d530
mov     esi, eax
test    esi, esi
jz      short loc_44d59c
mov     eax, [esp+4+arg_0]
mov     ecx, esi
push    eax
call    sub_44d640
test    eax, eax
jz      short loc_44d59c
push    esi
call    ??3@yaxpax@z
add     esp, 4
xor     esi, esi
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
call    sub_44d640
retn    8
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+lpstring1]
movsx   eax, di
push    eax
push    offset amemorybasedfil
push    esi
call    sub_47f9d0
add     esp, 0ch
xor     eax, eax
mov     byte ptr [edi+esi-1], 0
pop     edi
pop     esi
retn    0ch
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     [ecx+4], eax
mov     [ecx+8], edx
mov     eax, [esp+arg_8]
mov     [ecx+0ch], eax
xor     eax, eax
retn    0ch
mov     edx, [ecx+4]
mov     eax, [esp+arg_0]
mov     [eax], edx
mov     edx, [ecx+8]
mov     eax, [esp+arg_4]
mov     [eax], edx
mov     edx, [esp+arg_8]
mov     ecx, [ecx+0ch]
xor     eax, eax
mov     [edx], ecx
retn    0ch
push    ebx
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
mov     ebx, [esp+0ch+arg_0]
mov     eax, [ebx+4]
push    eax
call    sub_45bab0
add     esp, 4
mov     [esi+4], eax
cmp     eax, edi
jz      short loc_44d672
mov     eax, [ebx+8]
mov     [esi+8], eax
mov     eax, edi
mov     ecx, [ebx+0ch]
pop     edi
mov     [esi+0ch], ecx
pop     esi
pop     ebx
retn    4
mov     edi, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn    4
push    esi
mov     esi, ecx
call    sub_44c7f0
mov     ecx, esi
mov     dword ptr [esi], offset off_4ab178
call    sub_44d6a0
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_44c820
xor     eax, eax
mov     [esi+15h], ax
mov     [esi+14h], al
mov     [esi+17h], ax
mov     [esi+1dh], eax
mov     [esi+19h], ax
mov     [esi+1bh], ax
mov     eax, 1
mov     [esi+21h], eax
mov     [esi+25h], eax
pop     esi
retn
sub     esp, 210h
push    esi
mov     eax, [ecx]
mov     esi, ecx
mov     ecx, esi
call    dword ptr [eax]
lea     eax, [esp+214h+buffer]
push    eax
push    105h
call    ds:gettemppatha
test    eax, eax
jz      short loc_44d71c
lea     eax, [esp+214h+tempfilename]
lea     ecx, [esp+214h+buffer]
push    eax
push    0
push    offset prefixstring
push    ecx
call    ds:gettempfilenamea
lea     ecx, [esp+214h+tempfilename]
push    ecx
mov     ecx, esi
call    sub_44d740
pop     esi
add     esp, 210h
retn
mov     dword ptr [ecx], offset off_4ab178
add     ecx, 4
jmp     sub_44d0d0
mov     eax, [esp+lpstring]
push    esi
mov     esi, ecx
push    eax
call    sub_44d7e0
test    eax, eax
jnz     short loc_44d782
cmp     dword ptr [esi+21h], 0
jz      short loc_44d76b
mov     cl, [esi+14h]
test    cl, 2
jz      short loc_44d76b
test    cl, 1
jz      short loc_44d76b
mov     ecx, esi
call    sub_44e980
test    eax, eax
jnz     short loc_44d782
cmp     dword ptr [esi+25h], 0
jz      short loc_44d782
test    byte ptr [esi+14h], 4
jz      short loc_44d782
mov     ecx, esi
call    sub_44ea90
pop     esi
retn    4
mov     edx, [esp+arg_0]
mov     al, [edx+14h]
mov     [ecx+14h], al
mov     ax, [edx+15h]
mov     [ecx+15h], ax
mov     ax, [edx+17h]
mov     [ecx+17h], ax
mov     ax, [edx+19h]
mov     [ecx+19h], ax
add     edx, 4
mov     ax, [edx+17h]
push    edx
mov     [ecx+1bh], ax
add     ecx, 4
mov     eax, [edx+1dh]
mov     [ecx+1dh], eax
mov     eax, [edx+21h]
mov     [ecx+21h], eax
call    sub_44d130
retn    4
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     esi, ecx
lea     ecx, [esp+20h+var_10]
push    ebp
xor     ebp, ebp
call    sub_44d050
mov     edi, [esp+24h+lpstring]
mov     eax, [esi]
mov     ebx, edi
mov     ecx, esi
call    dword ptr [eax]
push    edi
call    sub_44e540
add     esp, 4
test    eax, eax
jz      short loc_44d865
push    edi
call    sub_44e500
mov     [esp+28h+var_14], eax
add     esp, 4
sub     eax, edi
lea     ecx, [esp+24h+var_10]
mov     [esi+17h], ax
inc     ax
push    eax
push    edi
call    sub_44d180
mov     ebp, eax
test    ebp, ebp
jnz     loc_44d8c0
push    3ah
push    edi
call    _strchr
add     esp, 8
test    eax, eax
jz      short loc_44d85b
mov     ecx, edi
sub     ecx, eax
cmp     ecx, 0ffffffffh
jnz     short loc_44d85b
sub     eax, edi
or      byte ptr [esi+14h], 1
inc     ax
mov     [esi+15h], ax
or      byte ptr [esi+14h], 2
mov     ebx, [esp+24h+var_14]
jmp     short loc_44d8c0
push    3ah
push    edi
call    _strchr
mov     [esp+2ch+var_14], eax
add     esp, 8
test    eax, eax
jz      short loc_44d8c0
mov     eax, edi
sub     eax, [esp+24h+var_14]
cmp     eax, 0ffffffffh
jnz     short loc_44d8bb
mov     eax, [esp+24h+var_14]
lea     ecx, [esp+24h+var_10]
sub     eax, edi
or      byte ptr [esi+14h], 1
inc     ax
mov     [esi+15h], ax
inc     ax
push    eax
push    edi
call    sub_44d180
mov     ebp, eax
test    ebp, ebp
jz      short loc_44d8bb
lea     ecx, [esp+24h+var_10]
call    sub_44d0d0
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn    4
mov     ebx, [esp+24h+var_14]
inc     ebx
push    ebx
call    ds:lstrlena
mov     cx, ax
mov     [esi+1bh], ax
test    cx, cx
jz      short loc_44d905
inc     cx
mov     eax, ebx
sub     eax, edi
push    ecx
mov     [esi+19h], ax
push    ebx
lea     ecx, [esp+2ch+var_10]
call    sub_44d180
mov     ebp, eax
test    ebp, ebp
jnz     short loc_44d918
push    2eh
push    ebx
call    _strrchr
add     esp, 8
test    eax, eax
jz      short loc_44d901
or      byte ptr [esi+14h], 8
or      byte ptr [esi+14h], 4
test    ebp, ebp
jnz     short loc_44d918
lea     eax, [esp+24h+var_10]
lea     ecx, [esi+4]
push    eax
call    sub_44d130
mov     ebp, eax
lea     ecx, [esp+24h+var_10]
call    sub_44d0d0
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn    4
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
push    ebp
mov     esi, ecx
xor     edi, edi
push    eax
mov     ecx, [esp+14h+arg_0]
call    sub_492e30
mov     ebx, eax
test    ebx, ebx
jz      short loc_44d98d
mov     eax, [ebx]
mov     ecx, ebx
mov     ebp, [eax+10h]
call    ebp
mov     ecx, eax
call    sub_44d2f0
test    eax, eax
jz      short loc_44d981
mov     ecx, ebx
call    ebp
mov     ecx, eax
mov     ebp, eax
call    sub_44d310
mov     eax, [ebp+8]
mov     ecx, esi
push    eax
call    sub_44d740
mov     edi, eax
mov     ecx, ebp
call    sub_44d360
push    ebx
mov     ecx, dword_4adc68
call    sub_44c050
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
sub     esp, 140h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, ecx
lea     ecx, [esp+150h+var_134]
call    sub_44d680
mov     eax, [esp+150h+lpstring2]
push    105h
lea     ecx, [esp+154h+string]
push    eax
push    ecx
call    sub_47f9d0
lea     ecx, [esp+15ch+string]
add     esp, 0ch
mov     ebp, ds:lstrlena
push    ecx
call    ebp
cmp     [esp+eax+150h+var_109], 5ch
jz      short loc_44d9ed
mov     [esp+eax+150h+string], 5ch
mov     [esp+eax+150h+var_107], 0
mov     eax, [edi+21h]
mov     ecx, [edi+25h]
mov     edx, [edi+1dh]
mov     [esp+150h+var_113], eax
lea     eax, [esp+150h+string]
mov     [esp+150h+var_10f], ecx
lea     ecx, [esp+150h+var_134]
push    eax
mov     [esp+154h+var_117], edx
call    sub_44d7e0
lea     ecx, [esp+150h+var_138]
lea     edx, [esp+150h+hmem+2]
push    ecx
push    edx
lea     ecx, [esp+158h+var_134]
call    sub_44db60
mov     ebx, eax
test    ebx, ebx
jnz     short loc_44da8f
mov     eax, [esp+150h+hmem+2]
lea     esi, [edi+14h]
push    eax
call    ds:globallock
test    [esp+150h+var_120], 1
mov     ebx, eax
jz      short loc_44da4e
mov     ax, [esp+150h+var_11f]
or      byte ptr [esi], 1
mov     [edi+15h], ax
jmp     short loc_44da51
and     byte ptr [esi], 0feh
mov     al, [esi]
test    al, 2
jnz     short loc_44da5d
or      al, 2
mov     [esi], al
jmp     short loc_44da67
push    ebx
call    ebp
test    eax, eax
jnz     short loc_44da67
and     byte ptr [esi], 0fdh
lea     eax, [esp+150h+hmem]
lea     ecx, [edi+17h]
push    eax
push    ecx
push    0
lea     ecx, [edi+4]
push    ebx
call    sub_44d1e0
mov     ebx, eax
test    ebx, ebx
jnz     short loc_44da8f
test    byte ptr [esi], 4
jz      short loc_44da8f
mov     ax, word ptr [esp+150h+hmem]
add     [edi+19h], ax
mov     eax, [esp+150h+hmem+2]
push    eax
call    sub_45ba00
add     esp, 4
test    ebx, ebx
jnz     short loc_44daba
cmp     dword ptr [edi+21h], 0
jz      short loc_44daba
mov     al, [edi+14h]
test    al, 2
jz      short loc_44daba
test    al, 1
jz      short loc_44daba
mov     ecx, edi
call    sub_44e980
mov     ebx, eax
lea     ecx, [esp+150h+var_134]
call    sub_44d730
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 140h
retn    4
push    ebx
push    esi
push    edi
mov     ebx, ecx
push    ebp
xor     esi, esi
test    byte ptr [ebx+14h], 2
jz      short loc_44db33
lea     edi, [ebx+4]
mov     ecx, edi
call    sub_44d310
movsx   ecx, word ptr [ebx+17h]
mov     eax, [esp+10h+arg_4]
dec     eax
cmp     ecx, eax
jl      short loc_44db07
mov     ecx, eax
movsx   ebx, cx
mov     ecx, [edi+8]
mov     ebp, [esp+10h+lpstring1]
lea     eax, [ebx+1]
push    eax
push    ecx
push    ebp
call    sub_47f9d0
add     esp, 0ch
mov     ecx, edi
mov     byte ptr [ebx+ebp], 0
call    sub_44d360
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
mov     ebp, [esp+10h+lpstring1]
mov     esi, 2
mov     eax, esi
mov     byte ptr [ebp+0], 0
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, [esp+hmem]
push    eax
call    sub_44c830
retn    4
mov     eax, [esp+arg_4]
mov     edx, [esp+arg_0]
push    eax
push    edx
call    sub_44c860
retn    8
sub     esp, 4
mov     [esp+4+var_4], 0
push    ebx
push    esi
push    edi
mov     ebx, ecx
push    ebp
test    byte ptr [ebx+14h], 1
jz      short loc_44dbe7
lea     esi, [ebx+4]
mov     ecx, esi
call    sub_44d310
movsx   eax, word ptr [ebx+15h]
inc     eax
mov     edi, [esp+14h+arg_4]
lea     ecx, [edi-1]
cmp     eax, ecx
jl      short loc_44dbb3
mov     eax, ecx
movsx   ebx, ax
push    ebx
mov     eax, [esi+8]
mov     ebp, [esp+18h+arg_0]
push    eax
push    ebp
call    sub_47f9d0
add     esp, 0ch
movsx   ecx, di
push    ecx
push    offset szdelim
push    ebp
call    sub_47f990
add     esp, 0ch
mov     ecx, esi
mov     byte ptr [ebx+ebp], 0
call    sub_44d360
jmp     short loc_44dc19
mov     edi, [esp+14h+arg_4]
mov     ebp, [esp+14h+arg_0]
push    edi
mov     eax, [ebx]
push    ebp
mov     ecx, ebx
call    dword ptr [eax+24h]
mov     [esp+14h+var_4], eax
test    eax, eax
jnz     short loc_44dc19
dec     edi
mov     ecx, ebx
call    sub_44ee60
cmp     eax, edi
mov     eax, edi
jg      short loc_44dc15
mov     ecx, ebx
call    sub_44ee60
mov     byte ptr [eax+ebp], 0
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    8
sub     esp, 134h
push    ebx
push    esi
push    edi
mov     esi, ecx
push    ebp
mov     ecx, esi
mov     edi, [esi]
push    0
call    dword ptr [edi+44h]
push    105h
test    eax, eax
lea     eax, [esp+148h+buffer]
push    eax
jz      short loc_44dcb0
call    ds:getsystemdirectorya
cmp     [esp+eax+144h+var_109], 5ch
jz      short loc_44dc6a
mov     [esp+eax+144h+buffer], 5ch
mov     [esp+eax+144h+var_107], 0
lea     ecx, [esp+144h+totalnumberofclusters]
call    sub_44d680
lea     ecx, [esp+144h+totalnumberofclusters]
call    sub_44d6a0
lea     eax, [esp+144h+buffer]
lea     ecx, [esp+144h+totalnumberofclusters]
push    eax
call    sub_44d9a0
mov     ebx, eax
test    ebx, ebx
jnz     short loc_44dca5
lea     eax, [esp+144h+buffer]
push    105h
lea     ecx, [esp+148h+totalnumberofclusters]
push    eax
call    sub_44db80
mov     ebx, eax
lea     ecx, [esp+144h+totalnumberofclusters]
call    sub_44d730
jmp     short loc_44dcb7
mov     ecx, esi
call    dword ptr [edi+28h]
mov     ebx, eax
test    ebx, ebx
jnz     short loc_44dd1c
lea     eax, [esp+144h+totalnumberofclusters]
mov     esi, [esp+144h+lpnumberoffreeclusters]
mov     ebp, [esp+144h+lpbytespersector]
push    eax
mov     edi, [esp+148h+lpsectorspercluster]
push    esi
lea     eax, [esp+14ch+buffer]
push    ebp
push    edi
push    eax
call    ds:getdiskfreespacea
test    eax, eax
jnz     short loc_44dd1c
call    ds:__imp_getlasterror
cmp     eax, 32h
jnz     short loc_44dd17
lea     eax, [esp+144h+buffer]
push    eax
call    ds:getdrivetypea
cmp     eax, 4
jnz     short loc_44dd17
mov     dword ptr [esi], 40000h
mov     dword ptr [edi], 40h
mov     dword ptr [ebp+0], 40h
jmp     short loc_44dd1c
mov     ebx, 2
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 134h
retn    0ch
sub     esp, 138h
push    esi
push    edi
mov     esi, ecx
lea     ecx, [esp+140h+var_136+2]
call    sub_44d680
mov     eax, [esi+21h]
mov     ecx, [esi+25h]
mov     edx, [esi+1dh]
mov     [esp+140h+var_113], eax
mov     eax, [esp+140h+lpstring]
mov     [esp+140h+var_10f], ecx
lea     ecx, [esp+140h+var_136+2]
push    eax
mov     [esp+144h+var_117], edx
call    sub_44d7e0
lea     ecx, [esp+140h+string]
push    105h
push    ecx
lea     ecx, [esp+148h+var_136+2]
call    sub_44de00
mov     edi, eax
test    edi, edi
jz      short loc_44dd87
cmp     edi, 2
jnz     short loc_44dde9
mov     cl, [esi+14h]
test    cl, 4
jnz     short loc_44ddb9
test    cl, 2
jz      short loc_44dda4
mov     ax, [esi+17h]
or      cl, 4
mov     [esi+19h], ax
mov     [esi+14h], cl
jmp     short loc_44ddcc
test    cl, 1
jz      short loc_44ddb1
mov     ax, [esi+15h]
mov     [esi+19h], ax
or      cl, 4
mov     [esi+14h], cl
jmp     short loc_44ddcc
lea     eax, [esp+140h+string]
push    eax
call    ds:lstrlena
test    eax, eax
jnz     short loc_44ddcc
and     byte ptr [esi+14h], 0fbh
mov     dx, [esi+19h]
lea     eax, [esp+140h+var_136]
push    eax
lea     ecx, [esi+1bh]
lea     eax, [esp+144h+string]
push    ecx
push    edx
lea     ecx, [esi+4]
push    eax
call    sub_44d1e0
mov     edi, eax
lea     ecx, [esp+140h+var_136+2]
call    sub_44d730
mov     eax, edi
pop     edi
pop     esi
add     esp, 138h
retn    4
push    ebx
push    esi
push    edi
mov     ebx, ecx
push    ebp
xor     esi, esi
test    byte ptr [ebx+14h], 4
jz      short loc_44de58
lea     edi, [ebx+4]
mov     ecx, edi
call    sub_44d310
movsx   ecx, word ptr [ebx+1bh]
mov     eax, [esp+10h+arg_4]
dec     eax
cmp     ecx, eax
jl      short loc_44de27
mov     ecx, eax
movsx   edx, word ptr [ebx+19h]
movsx   ebx, cx
add     edx, [edi+8]
mov     ebp, [esp+10h+lpstring1]
lea     eax, [ebx+1]
push    eax
push    edx
push    ebp
call    sub_47f9d0
add     esp, 0ch
mov     ecx, edi
mov     byte ptr [ebp+ebx+0], 0
call    sub_44d360
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
mov     ebp, [esp+10h+lpstring1]
mov     esi, 2
mov     eax, esi
mov     byte ptr [ebp+0], 0
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
push    esi
push    edi
mov     edi, ecx
mov     esi, [esp+8+lpstring]
push    esi
call    ds:lstrlena
test    eax, eax
jz      short loc_44de89
or      byte ptr [edi+14h], 8
jmp     short loc_44de8d
and     byte ptr [edi+14h], 0f7h
push    esi
mov     ecx, edi
call    sub_44c970
pop     edi
pop     esi
retn    4
xor     eax, eax
retn    4
sub     esp, 210h
push    esi
push    edi
test    byte ptr [ecx+14h], 2
mov     edi, ecx
jnz     short loc_44decd
xor     eax, eax
pop     edi
pop     esi
add     esp, 210h
retn    4
mov     esi, [edi]
push    105h
lea     eax, [esp+21ch+string]
mov     ecx, edi
push    eax
call    dword ptr [esi+24h]
test    eax, eax
jnz     loc_44dfc7
cmp     [esp+218h+string], 5ch
jz      short loc_44defb
cmp     [esp+218h+string], 2fh
jz      short loc_44defb
cmp     [esp+218h+string], 3ah
jnz     short loc_44df1d
cmp     [esp+218h+var_20f], 5ch
jz      short loc_44df10
cmp     [esp+218h+var_20f], 2fh
jz      short loc_44df10
cmp     [esp+218h+var_20f], 3ah
jnz     short loc_44df31
xor     eax, eax
pop     edi
pop     esi
add     esp, 210h
retn    4
cmp     [esp+218h+var_20f], 3ah
jnz     short loc_44df31
xor     eax, eax
pop     edi
pop     esi
add     esp, 210h
retn    4
lea     eax, [esp+218h+var_108]
push    105h
mov     ecx, [esp+21ch+arg_0]
push    eax
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jnz     short loc_44dfc7
cmp     [esp+218h+string], 5ch
jz      short loc_44df8e
cmp     [esp+218h+string], 2fh
jz      short loc_44df8e
lea     eax, [esp+218h+string]
push    105h
lea     ecx, [esp+21ch+var_108]
push    eax
push    ecx
call    sub_47f990
lea     ecx, [esp+224h+var_108]
add     esp, 0ch
push    ecx
mov     ecx, edi
call    dword ptr [esi+1ch]
pop     edi
pop     esi
add     esp, 210h
retn    4
cmp     [esp+218h+var_107], 3ah
jnz     short loc_44dfc7
lea     eax, [esp+218h+string]
push    105h
lea     ecx, [esp+21ch+var_108]
push    eax
mov     [esp+220h+var_106], 0
push    ecx
call    sub_47f990
lea     ecx, [esp+224h+var_108]
add     esp, 0ch
push    ecx
mov     ecx, edi
call    dword ptr [esi+1ch]
pop     edi
pop     esi
add     esp, 210h
retn    4
sub     esp, 2ch
push    ebx
push    esi
push    edi
mov     ebx, ecx
xor     esi, esi
push    24h
call    ??2@yapaxi@z
add     esp, 4
mov     edi, eax
cmp     edi, esi
jz      short loc_44e01e
lea     ecx, [edi+4]
mov     dword ptr [edi], offset off_4ab238
call    sub_44d050
lea     ecx, [edi+14h]
mov     dword ptr [edi], offset off_4ab208
call    sub_44d050
mov     dword ptr [edi], offset off_4ab1d8
jmp     short loc_44e020
xor     edi, edi
test    edi, edi
jz      short loc_44e079
lea     eax, [ebx+4]
lea     ecx, [edi+4]
push    eax
call    sub_44d130
mov     esi, eax
test    esi, esi
jnz     short loc_44e07d
lea     ecx, [esp+38h+var_2c]
call    sub_44d680
lea     ecx, [esp+38h+var_2c]
push    ebx
call    sub_44d790
mov     esi, eax
test    esi, esi
jnz     short loc_44e070
lea     ecx, [esp+38h+var_2c]
call    sub_44e8f0
lea     ecx, [esp+38h+var_2c]
call    sub_44ea10
lea     eax, [esp+38h+var_28]
lea     ecx, [edi+14h]
push    eax
call    sub_44d130
mov     esi, eax
lea     ecx, [esp+38h+var_2c]
call    sub_44d730
test    esi, esi
jz      short loc_44e09c
test    edi, edi
jz      short loc_44e09a
lea     ecx, [edi+14h]
call    sub_44d0d0
lea     ecx, [edi+4]
call    sub_44d0d0
push    edi
call    ??3@yaxpax@z
add     esp, 4
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
xor     eax, eax
retn    4
add     ecx, 4
call    sub_44d0b0
xor     eax, eax
retn
lea     eax, [ecx+4]
retn
lea     eax, [ecx+4]
retn
lea     eax, [ecx+14h]
retn
push    ebx
push    esi
push    edi
mov     esi, ecx
push    ebp
mov     ecx, dword_4adc68
call    sub_44c020
push    eax
mov     ecx, dword_4adc68
call    sub_44c230
mov     edi, eax
test    edi, edi
jz      short loc_44e189
lea     ebx, [esi+4]
mov     ecx, ebx
call    sub_44d2f0
test    eax, eax
jz      short loc_44e149
mov     ecx, ebx
call    sub_44d310
mov     eax, [ebx+8]
mov     ecx, edi
push    eax
call    sub_44d740
mov     ebp, eax
mov     ecx, ebx
jmp     short loc_44e172
add     esi, 14h
mov     ebp, 2
mov     ecx, esi
call    sub_44d2f0
test    eax, eax
jz      short loc_44e177
mov     ecx, esi
call    sub_44d310
mov     eax, [esi+8]
mov     ecx, edi
push    eax
call    sub_44d740
mov     ebp, eax
mov     ecx, esi
call    sub_44d360
test    ebp, ebp
jz      short loc_44e189
push    edi
mov     ecx, dword_4adc68
xor     edi, edi
call    sub_44c050
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ecx, dword_4adc68
call    sub_44c020
push    eax
mov     ecx, dword_4adc68
call    sub_44c230
mov     ebx, eax
test    ebx, ebx
jz      short loc_44e1f2
add     edi, 4
mov     esi, 2
mov     ecx, edi
call    sub_44d2f0
test    eax, eax
jz      short loc_44e1e0
mov     ecx, edi
call    sub_44d310
mov     eax, [edi+8]
mov     ecx, ebx
push    eax
call    sub_44d740
mov     esi, eax
mov     ecx, edi
call    sub_44d360
test    esi, esi
jz      short loc_44e1f2
push    ebx
mov     ecx, dword_4adc68
xor     ebx, ebx
call    sub_44c050
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    esi
mov     esi, ecx
test    eax, eax
jz      short loc_44e273
cmp     esi, eax
jnz     short loc_44e218
mov     eax, 1
pop     esi
retn    4
push    eax
mov     ecx, dword_4adc68
call    sub_44c230
mov     cl, [esi+14h]
cmp     [eax+14h], cl
jnz     short loc_44e26d
mov     cx, [esi+15h]
cmp     [eax+15h], cx
jnz     short loc_44e26d
mov     cx, [esi+17h]
cmp     [eax+17h], cx
jnz     short loc_44e26d
mov     cx, [esi+19h]
cmp     [eax+19h], cx
jnz     short loc_44e26d
mov     cx, [esi+1bh]
cmp     [eax+1bh], cx
jnz     short loc_44e26d
add     eax, 4
lea     ecx, [esi+4]
push    eax
call    sub_44d410
test    eax, eax
jz      short loc_44e26d
mov     eax, 1
pop     esi
retn    4
xor     eax, eax
pop     esi
retn    4
cmp     byte ptr [esi+14h], 1
sbb     eax, eax
pop     esi
neg     eax
retn    4
mov     eax, [esp+arg_0]
push    ebx
push    esi
mov     ebx, ecx
push    edi
test    eax, eax
jz      loc_44e31a
cmp     ebx, eax
jnz     short loc_44e2a0
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn    4
push    eax
mov     ecx, dword_4adc68
call    sub_44c230
mov     edi, eax
mov     al, [eax+14h]
xor     al, [ebx+14h]
test    al, 2
jnz     short loc_44e312
mov     ax, [ebx+15h]
cmp     [edi+15h], ax
jnz     short loc_44e312
mov     ax, [ebx+17h]
cmp     [edi+17h], ax
jnz     short loc_44e312
lea     esi, [ebx+4]
add     edi, 4
mov     ecx, esi
call    sub_44d310
mov     ecx, edi
call    sub_44d310
mov     ecx, [edi+8]
mov     edx, [esi+8]
movsx   eax, word ptr [ebx+17h]
push    eax
push    ecx
push    edx
call    sub_47fb70
add     esp, 0ch
mov     ecx, edi
cmp     eax, 1
sbb     ebx, ebx
call    sub_44d360
neg     ebx
mov     ecx, esi
call    sub_44d360
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn    4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    4
mov     al, [ebx+14h]
pop     edi
and     al, 2
pop     esi
pop     ebx
cmp     al, 1
sbb     eax, eax
neg     eax
retn    4
mov     eax, [esp+arg_0]
sub     esp, 210h
test    eax, eax
push    esi
push    edi
mov     edi, ecx
jz      loc_44e3d3
cmp     edi, eax
jnz     short loc_44e35a
mov     eax, 1
pop     edi
pop     esi
add     esp, 210h
retn    4
push    eax
mov     ecx, dword_4adc68
call    sub_44c230
mov     esi, eax
mov     al, [eax+14h]
xor     al, [edi+14h]
test    al, 4
jnz     short loc_44e3c6
mov     ax, [edi+1bh]
cmp     [esi+1bh], ax
jnz     short loc_44e3c6
lea     eax, [esp+218h+string1]
push    105h
push    eax
mov     ecx, edi
mov     eax, [edi]
call    dword ptr [eax+30h]
lea     ecx, [esp+218h+string2]
push    105h
push    ecx
mov     edi, [esi]
mov     ecx, esi
call    dword ptr [edi+30h]
lea     ecx, [esp+218h+string2]
lea     eax, [esp+218h+string1]
push    ecx
push    eax
call    ds:lstrcmpia
pop     edi
cmp     eax, 1
sbb     eax, eax
pop     esi
neg     eax
add     esp, 210h
retn    4
xor     eax, eax
pop     edi
pop     esi
add     esp, 210h
retn    4
mov     al, [edi+14h]
pop     edi
and     al, 4
pop     esi
cmp     al, 1
sbb     eax, eax
add     esp, 210h
neg     eax
retn    4
mov     eax, [esp+arg_0]
sub     esp, 210h
test    eax, eax
push    esi
mov     esi, ecx
jz      short loc_44e480
cmp     esi, eax
jnz     short loc_44e414
mov     eax, 1
pop     esi
add     esp, 210h
retn    4
push    eax
mov     ecx, dword_4adc68
call    sub_44c230
mov     cl, [esi+14h]
xor     cl, [eax+14h]
test    cl, 8
jnz     short loc_44e474
lea     ecx, [esp+214h+string1]
push    105h
push    ecx
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+3ch]
lea     ecx, [esp+214h+string2]
push    105h
push    ecx
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+3ch]
lea     ecx, [esp+214h+string2]
lea     edx, [esp+214h+string1]
push    ecx
push    edx
call    ds:lstrcmpia
pop     esi
cmp     eax, 1
sbb     eax, eax
add     esp, 210h
neg     eax
retn    4
xor     eax, eax
pop     esi
add     esp, 210h
retn    4
mov     al, [esi+14h]
pop     esi
and     al, 8
cmp     al, 1
sbb     eax, eax
add     esp, 210h
neg     eax
retn    4
mov     eax, [esp+arg_0]
mov     [ecx+1dh], eax
retn    4
xor     eax, eax
mov     al, [ecx+14h]
and     eax, 1
retn
push    esi
push    edi
mov     esi, [esp+8+str]
push    5ch
push    esi
call    _strchr
add     esp, 8
mov     edi, eax
push    2fh
push    esi
call    _strchr
add     esp, 8
test    edi, edi
jz      short loc_44e4ea
test    eax, eax
jz      short loc_44e4ec
cmp     eax, edi
jnb     short loc_44e4ec
mov     edi, eax
test    edi, edi
jz      short loc_44e4f1
inc     edi
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+str]
push    5ch
push    esi
call    _strrchr
add     esp, 8
mov     edi, eax
push    2fh
push    esi
call    _strrchr
add     esp, 8
test    edi, edi
jz      short loc_44e52a
test    eax, eax
jz      short loc_44e52c
cmp     eax, edi
jbe     short loc_44e52c
mov     edi, eax
test    edi, edi
jz      short loc_44e531
inc     edi
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    5ch
mov     esi, [esp+8+str]
push    esi
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_44e567
push    2fh
push    esi
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_44e567
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
xor     esi, esi
mov     cl, [eax]
cmp     cl, 5ch
jz      short loc_44e5a3
cmp     cl, 2fh
jz      short loc_44e5a3
cmp     cl, 3ah
jz      short loc_44e5a3
test    eax, eax
jz      short loc_44e5d1
inc     eax
jz      short loc_44e5d1
cmp     byte ptr [eax], 3ah
jnz     short loc_44e5d1
push    eax
call    sub_44e4c0
add     esp, 4
mov     esi, eax
mov     eax, esi
pop     esi
retn
mov     cl, [eax+1]
inc     eax
cmp     cl, 5ch
jz      short loc_44e5b6
cmp     cl, 2fh
jz      short loc_44e5b6
cmp     cl, 3ah
jnz     short loc_44e5d1
inc     eax
jz      short loc_44e5d1
push    eax
call    sub_44e4c0
add     esp, 4
test    eax, eax
jz      short loc_44e5d1
push    eax
call    sub_44e4c0
add     esp, 4
mov     esi, eax
mov     eax, esi
pop     esi
retn
sub     esp, 114h
cmp     dword_4adc68, 0
mov     [esp+114h+var_10c], 0
push    ebx
push    esi
push    edi
push    ebp
jz      loc_44e760
mov     [esp+124h+var_114], 0
mov     ecx, dword_4adc68
call    sub_44cc30
test    eax, eax
jnz     loc_44e760
mov     ecx, dword_4adc68
call    sub_44ce60
test    eax, eax
jnz     loc_44e760
mov     esi, [esp+124h+arg_4]
mov     ebp, [esp+124h+arg_8]
lea     eax, [esp+124h+var_114]
mov     ecx, dword_4adc68
push    eax
call    sub_44ceb0
test    eax, eax
jnz     loc_44e755
cmp     [esp+124h+var_114], 0
jz      loc_44e755
mov     eax, [esp+124h+var_114]
mov     eax, [eax]
test    eax, eax
jz      short loc_44e675
push    eax
call    ds:globallock
mov     [esp+124h+var_110], eax
jmp     short loc_44e67d
mov     [esp+124h+var_110], 0
mov     eax, [esp+124h+var_114]
mov     edi, 0
mov     eax, [eax+4]
test    eax, eax
jz      short loc_44e696
push    eax
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      loc_44e736
push    edi
mov     ebx, 105h
call    ds:lstrlena
inc     eax
cmp     eax, 105h
jnb     short loc_44e6bc
push    edi
call    ds:lstrlena
lea     ebx, [eax+1]
mov     eax, [esp+124h+arg_0]
push    ebx
lea     ecx, [esp+128h+string2]
push    eax
push    ecx
call    sub_47f9f0
lea     ecx, [esp+130h+string2]
add     esp, 0ch
push    ecx
push    edi
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_44e724
cmp     [esp+124h+var_110], 0
jz      short loc_44e724
mov     eax, [esp+124h+var_110]
push    ebp
push    offset szdelim
push    esi
mov     al, [eax]
mov     byte ptr [esi+1], 3ah
mov     byte ptr [esi+2], 0
mov     [esi], al
call    sub_47f990
mov     eax, [esp+130h+arg_0]
add     esp, 0ch
add     eax, ebx
push    ebp
push    eax
push    esi
call    sub_47f990
mov     [esp+130h+var_10c], 1
add     esp, 0ch
test    edi, edi
jz      short loc_44e736
mov     eax, [esp+124h+var_114]
mov     ecx, [eax+4]
push    ecx
call    ds:globalunlock
cmp     [esp+124h+var_110], 0
jz      short loc_44e74a
mov     eax, [esp+124h+var_114]
mov     ecx, [eax]
push    ecx
call    ds:globalunlock
cmp     [esp+124h+var_10c], 0
jz      loc_44e63b
mov     ecx, dword_4adc68
call    sub_44cf40
mov     eax, [esp+124h+var_10c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 114h
retn
sub     esp, 0ch
mov     [esp+0ch+var_4], 0
push    ebx
push    esi
mov     esi, [esp+14h+lpstring]
push    edi
push    ebp
mov     al, [esi]
test    al, al
jz      loc_44e8d5
movsx   eax, al
push    eax
call    _toupper
mov     [esp+20h+var_9], al
add     esp, 4
push    esi
call    sub_44e4c0
mov     [esp+20h+lpstring], eax
add     esp, 4
cmp     dword_4adc68, 0
jz      loc_44e8d5
mov     [esp+1ch+var_8], 0
mov     ecx, dword_4adc68
call    sub_44cc30
test    eax, eax
jnz     loc_44e8d5
mov     ecx, dword_4adc68
call    sub_44ce60
test    eax, eax
jnz     loc_44e8d5
mov     edi, ds:globallock
mov     esi, ds:globalunlock
lea     eax, [esp+1ch+var_8]
mov     ecx, dword_4adc68
push    eax
call    sub_44ceb0
test    eax, eax
jnz     loc_44e8ca
cmp     [esp+1ch+var_8], 0
jz      loc_44e8ca
mov     eax, [esp+1ch+var_8]
mov     ebp, 0
mov     eax, [eax]
test    eax, eax
jz      short loc_44e828
push    eax
call    edi
mov     ebp, eax
mov     eax, [esp+1ch+var_8]
mov     ebx, 0
mov     eax, [eax+4]
test    eax, eax
jz      short loc_44e83d
push    eax
call    edi
mov     ebx, eax
test    ebp, ebp
jz      short loc_44e857
movsx   eax, byte ptr [ebp+0]
push    eax
call    _toupper
movsx   ecx, [esp+20h+var_9]
add     esp, 4
cmp     eax, ecx
jz      short loc_44e86c
mov     eax, [esp+1ch+var_8]
mov     ecx, [eax]
push    ecx
call    esi
mov     ecx, [esp+1ch+var_8]
mov     edx, [ecx+4]
push    edx
call    esi
jmp     short loc_44e7f1
mov     [esp+1ch+var_4], 1
mov     edi, [esp+1ch+arg_0]
mov     ecx, edi
call    sub_44d0b0
push    ebx
mov     ebp, ds:lstrlena
call    ebp
inc     ax
mov     ecx, edi
push    eax
push    ebx
call    sub_44d180
push    2
mov     ecx, edi
push    offset szdelim
call    sub_44d180
mov     eax, [esp+1ch+lpstring]
push    eax
call    ebp
inc     ax
mov     ecx, [esp+1ch+lpstring]
push    eax
push    ecx
mov     ecx, edi
call    sub_44d180
mov     ecx, [esp+1ch+var_8]
mov     edx, [ecx]
push    edx
call    esi
mov     ecx, [esp+1ch+var_8]
mov     edx, [ecx+4]
push    edx
call    esi
mov     ecx, dword_4adc68
call    sub_44cf40
mov     eax, [esp+1ch+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 318h
push    esi
push    edi
push    ebp
mov     esi, ecx
xor     ebp, ebp
call    sub_44e4b0
test    eax, eax
jnz     short loc_44e974
mov     edi, [esi]
push    105h
lea     eax, [esp+328h+var_108]
mov     ecx, esi
push    eax
call    dword ptr [edi+24h]
mov     ebp, eax
test    ebp, ebp
jnz     short loc_44e974
lea     eax, [esp+324h+var_210]
push    105h
lea     ecx, [esp+328h+var_108]
push    eax
push    ecx
call    sub_44e5e0
mov     dword ptr [esi+21h], 0
add     esp, 0ch
test    eax, eax
jz      short loc_44e957
lea     eax, [esp+324h+var_210]
mov     ecx, esi
push    eax
call    dword ptr [edi+1ch]
jmp     short loc_44e974
lea     eax, [esp+324h+string]
push    105h
push    eax
mov     ecx, esi
call    dword ptr [edi+30h]
lea     eax, [esp+324h+string]
mov     ecx, esi
push    eax
call    sub_44d7e0
mov     ebp, eax
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
add     esp, 318h
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
xor     esi, esi
lea     ebx, [ecx+4]
push    ebp
mov     edi, ecx
mov     ecx, ebx
call    sub_44d2f0
test    eax, eax
jz      short loc_44e9f9
lea     ecx, [esp+20h+var_10]
call    sub_44d050
lea     ecx, [esp+20h+var_10]
call    sub_44d0b0
mov     ecx, ebx
call    sub_44d310
mov     eax, [ebx+8]
lea     ecx, [esp+20h+var_10]
push    eax
push    ecx
call    sub_44e770
add     esp, 8
mov     ebp, eax
mov     ecx, ebx
call    sub_44d360
test    ebp, ebp
jz      short loc_44e9f0
lea     ecx, [esp+20h+var_10]
call    sub_44d310
mov     eax, [esp+20h+lpstring]
mov     ecx, edi
push    eax
call    sub_44d7e0
mov     esi, eax
lea     ecx, [esp+20h+var_10]
call    sub_44d360
lea     ecx, [esp+20h+var_10]
call    sub_44d0d0
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 108h
push    esi
push    edi
lea     edi, [ecx+4]
push    ebp
mov     esi, ecx
xor     ebp, ebp
mov     ecx, edi
call    sub_44d2f0
test    eax, eax
jz      short loc_44ea76
mov     ecx, edi
call    sub_44d310
push    ebp
mov     al, [esi+14h]
push    ebp
and     al, 2
xor     ecx, ecx
mov     edx, [edi+8]
mov     cl, al
lea     eax, [esp+11ch+string2]
push    ecx
push    105h
push    eax
push    edx
call    sub_44ec50
add     esp, 18h
mov     ebp, eax
mov     ecx, edi
call    sub_44d360
test    ebp, ebp
jnz     short loc_44ea76
lea     eax, [esp+114h+string2]
mov     ecx, esi
mov     dword ptr [esi+25h], 0
push    eax
call    sub_44d7e0
mov     ebp, eax
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
add     esp, 108h
retn
sub     esp, 108h
push    ebx
push    esi
push    edi
mov     esi, ecx
xor     ebx, ebx
lea     edi, [esi+4]
mov     ecx, edi
call    sub_44d2f0
test    eax, eax
jz      short loc_44eaf7
mov     ecx, edi
call    sub_44d310
push    ebx
mov     al, [esi+14h]
push    1
and     al, 2
xor     ecx, ecx
mov     edx, [edi+8]
mov     cl, al
lea     eax, [esp+11ch+string2]
push    ecx
push    105h
push    eax
push    edx
call    sub_44ec50
add     esp, 18h
mov     ebx, eax
mov     ecx, edi
call    sub_44d360
test    ebx, ebx
jnz     short loc_44eaf7
lea     eax, [esp+114h+string2]
mov     ecx, esi
mov     dword ptr [esi+25h], 1
push    eax
call    sub_44d7e0
mov     ebx, eax
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
sub     esp, 144h
mov     [esp+144h+var_144], 0
push    ebx
push    esi
mov     esi, [esp+14ch+lpfilename]
push    edi
push    ebp
push    esi
call    sub_44e500
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_44eb7c
push    offset default
mov     ebx, ds:lstrcmpia
push    edi
call    ebx
test    eax, eax
jz      short loc_44eb56
push    offset asc_4adc8c
push    edi
call    ebx
test    eax, eax
jnz     short loc_44eb7c
mov     ebp, [esp+154h+imaxlength]
mov     edi, [esp+154h+arg_4]
push    ebp
push    esi
push    edi
call    sub_47f9d0
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 144h
retn
lea     eax, [esp+154h+findfiledata]
push    eax
push    esi
call    ds:findfirstfilea
cmp     eax, 0ffffffffh
mov     ebx, eax
jz      loc_44ec30
cmp     [esp+154h+arg_c], 0
lea     eax, [esp+154h+findfiledata.cfilename]
jnz     short loc_44eba8
lea     eax, [esp+154h+findfiledata.calternatefilename]
cmp     byte ptr [eax], 0
jz      short loc_44ec0e
push    esi
call    sub_44e500
add     esp, 4
test    eax, eax
jz      short loc_44ebde
sub     eax, esi
mov     ebp, [esp+154h+imaxlength]
inc     eax
mov     edi, [esp+154h+arg_4]
cmp     eax, ebp
jl      short loc_44ebd1
mov     eax, ebp
push    eax
push    esi
push    edi
call    sub_47f9d0
add     esp, 0ch
jmp     short loc_44ebef
mov     edi, [esp+154h+arg_4]
mov     ebp, [esp+154h+imaxlength]
mov     byte ptr [edi], 0
cmp     [esp+154h+arg_c], 0
lea     eax, [esp+154h+findfiledata.cfilename]
jnz     short loc_44ec04
lea     eax, [esp+154h+findfiledata.calternatefilename]
push    ebp
push    eax
push    edi
call    sub_47f990
jmp     short loc_44ec24
mov     ebp, [esp+154h+imaxlength]
mov     edi, [esp+154h+arg_4]
push    ebp
push    esi
push    edi
call    sub_47f9d0
add     esp, 0ch
push    ebx
call    ds:findclose
jmp     short loc_44ec38
mov     [esp+154h+var_144], 2
mov     eax, [esp+154h+var_144]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 144h
retn
sub     esp, 318h
push    ebx
push    esi
push    edi
xor     ebx, ebx
cmp     [esp+324h+arg_c], ebx
push    ebp
jz      loc_44edd4
mov     eax, [esp+328h+lpstring1]
push    eax
call    sub_44e570
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      loc_44edbf
mov     eax, ebp
sub     eax, [esp+328h+lpstring1]
inc     eax
cmp     eax, 20ah
jb      short loc_44ec99
mov     eax, 20ah
lea     ecx, [esp+328h+string1]
push    eax
mov     eax, [esp+32ch+lpstring1]
push    eax
push    ecx
call    sub_47f9d0
mov     esi, [esp+334h+lpstring2]
mov     edi, [esp+334h+imaxlength]
add     esp, 0ch
test    ebp, ebp
jz      loc_44ee06
push    ebp
call    sub_44e4c0
mov     [esp+32ch+var_318], eax
add     esp, 4
test    eax, eax
jz      loc_44ed63
sub     eax, ebp
cmp     eax, 20ah
jb      short loc_44eceb
mov     eax, 20ah
push    eax
push    ebp
lea     eax, [esp+330h+string]
push    eax
call    sub_47f9d0
lea     eax, [esp+334h+string]
lea     ecx, [esp+334h+string1]
add     esp, 0ch
push    20ah
push    eax
push    ecx
call    sub_47f990
mov     ecx, [esp+334h+arg_14]
mov     edx, [esp+334h+arg_10]
lea     eax, [esp+334h+string1]
add     esp, 0ch
push    ecx
push    edx
push    20ah
push    eax
lea     eax, [esp+338h+string1]
push    eax
call    sub_44eb10
lea     ecx, [esp+33ch+string1]
add     esp, 14h
mov     ebx, eax
push    20ah
push    offset szdelim
push    ecx
call    sub_47f990
mov     ebp, [esp+334h+var_318]
add     esp, 0ch
jmp     short loc_44edb5
lea     eax, [esp+328h+string1]
push    20ah
push    ebp
push    eax
call    sub_47f990
mov     eax, [esp+334h+arg_14]
mov     ecx, [esp+334h+arg_10]
lea     edx, [esp+334h+string1]
add     esp, 0ch
push    eax
push    ecx
push    edi
push    esi
push    edx
call    sub_44eb10
add     esp, 14h
mov     ebx, eax
test    ebx, ebx
jz      short loc_44edb3
lea     eax, [esp+328h+string1]
push    edi
push    eax
push    esi
call    sub_47f9d0
add     esp, 0ch
xor     ebp, ebp
test    ebx, ebx
jz      loc_44ecc0
jmp     short loc_44ee06
mov     ebx, 2
mov     esi, [esp+328h+lpstring2]
mov     edi, [esp+328h+imaxlength]
jmp     short loc_44ee06
mov     eax, [esp+328h+arg_14]
mov     ecx, [esp+328h+arg_10]
mov     edi, [esp+328h+imaxlength]
push    eax
mov     esi, [esp+32ch+lpstring2]
push    ecx
mov     eax, [esp+330h+lpstring1]
push    edi
push    esi
push    eax
call    sub_44eb10
add     esp, 14h
mov     ebx, eax
test    ebx, ebx
jnz     short loc_44ee3d
cmp     [esp+328h+arg_14], 0
jnz     short loc_44ee51
mov     eax, [esp+328h+lpstring1]
push    esi
push    eax
mov     ebp, ds:lstrcmpia
call    ebp
test    eax, eax
jnz     short loc_44ee51
mov     eax, [esp+328h+lpstring1]
push    edi
push    eax
push    esi
call    sub_47f9d0
add     esp, 0ch
jmp     short loc_44ee51
mov     eax, [esp+328h+lpstring1]
push    edi
push    eax
xor     ebx, ebx
push    esi
call    sub_47f9d0
add     esp, 0ch
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 318h
retn
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
call    sub_44e4b0
test    eax, eax
jnz     short loc_44ee95
add     esi, 4
mov     ecx, esi
call    sub_44d310
mov     eax, [esi+8]
push    eax
call    sub_44e570
add     esp, 4
test    eax, eax
jz      short loc_44ee8e
sub     eax, [esi+8]
mov     edi, eax
mov     ecx, esi
call    sub_44d360
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 114h
push    ebx
push    esi
push    edi
xor     ebx, ebx
test    byte ptr [ecx+14h], 4
mov     edi, ecx
jz      short loc_44ef1d
mov     esi, [edi]
push    105h
lea     eax, [esp+124h+string]
mov     ecx, edi
mov     [esp+124h+string], bl
push    eax
call    dword ptr [esi+28h]
lea     eax, [esp+120h+filesystemflags]
push    ebx
lea     ecx, [esp+124h+maximumcomponentlength]
push    ebx
lea     edx, [esp+128h+volumeserialnumber]
push    eax
push    ecx
mov     eax, 0
lea     ecx, [esp+130h+string]
push    edx
cmp     [esp+134h+string], 1
adc     eax, 0ffffffffh
push    ebx
push    ebx
and     eax, ecx
push    eax
call    ds:getvolumeinformationa
test    eax, eax
jz      short loc_44ef22
lea     eax, [esp+120h+string]
push    105h
push    eax
mov     ecx, edi
call    dword ptr [esi+30h]
test    eax, eax
jnz     short loc_44ef22
lea     eax, [esp+120h+string]
push    eax
call    ds:lstrlena
cmp     eax, [esp+120h+maximumcomponentlength]
jg      short loc_44ef22
mov     ebx, 1
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 114h
retn
sub     esp, 108h
push    ebx
push    esi
push    edi
mov     esi, ecx
cmp     dword ptr [ecx+25h], 0
jz      short loc_44ef88
lea     edi, [esi+4]
mov     ecx, edi
call    sub_44d310
push    1
mov     al, [esi+14h]
push    1
and     al, 2
xor     ecx, ecx
mov     edx, [edi+8]
mov     cl, al
lea     eax, [esp+11ch+string2]
push    ecx
push    105h
push    eax
push    edx
call    sub_44ec50
add     esp, 18h
mov     ebx, eax
mov     ecx, edi
call    sub_44d360
test    ebx, ebx
jnz     short loc_44ef88
lea     eax, [esp+114h+string2]
mov     ecx, esi
push    eax
call    sub_44d7e0
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
push    ebx
push    esi
mov     ebx, [esp+8+str]
push    edi
mov     esi, ds:lstrlena
push    26h
push    ebx
call    _strchr
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_44efd3
lea     ebx, [edi+1]
push    edi
call    esi
inc     eax
push    eax
push    edi
push    ebx
call    _memcpy
add     esp, 0ch
inc     ebx
jmp     short loc_44efad
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 108h
movsx   eax, [esp+108h+arg_8]
push    ebx
push    esi
push    edi
mov     esi, ecx
push    ebp
xor     edi, edi
cmp     eax, 4
ja      def_44efff
jmp     ds:jpt_44efff[eax*4]
lea     ecx, [esi+4]
call    sub_44d2f0
test    eax, eax
jz      short loc_44f064
lea     eax, [esp+118h+str]
push    105h
push    eax
mov     ebx, [esi]
mov     ecx, esi
call    dword ptr [ebx+30h]
mov     ebx, [esp+118h+arg_4]
lea     eax, [esp+118h+str]
push    ebx
mov     ecx, esi
push    eax
call    sub_44c250
mov     edi, eax
test    edi, edi
jnz     def_44efff
lea     ecx, [esp+118h+str]
mov     ebp, [esp+118h+lpstring1]
movsx   eax, bx
push    eax
push    ecx
push    ebp
call    sub_47f9d0
mov     byte ptr [ebp+ebx-1], 0
add     esp, 0ch
jmp     def_44efff
mov     ebx, [esp+118h+arg_4]
mov     ebp, [esp+118h+lpstring1]
movsx   eax, bx
push    eax
push    offset aunknown
push    ebp
call    sub_47f9d0
mov     byte ptr [ebp+ebx-1], 0
add     esp, 0ch
jmp     def_44efff
lea     ebx, [esi+4]
mov     ecx, ebx
call    sub_44d2f0
test    eax, eax
jz      short loc_44f10a
mov     ecx, ebx
call    sub_44d310
push    105h
mov     eax, [ebx+8]
lea     ecx, [esp+11ch+str]
push    eax
push    ecx
call    sub_47f9d0
add     esp, 0ch
mov     ecx, ebx
call    sub_44d360
mov     ebx, [esp+118h+arg_4]
lea     ecx, [esp+118h+str]
push    ebx
push    ecx
mov     ecx, esi
call    sub_44c250
mov     edi, eax
test    edi, edi
jnz     def_44efff
lea     eax, [esp+118h+str]
mov     ecx, esi
push    eax
call    sub_44efa0
lea     ecx, [esp+118h+str]
mov     ebp, [esp+118h+lpstring1]
movsx   eax, bx
push    eax
push    ecx
push    ebp
call    sub_47f9d0
mov     byte ptr [ebp+ebx-1], 0
add     esp, 0ch
jmp     short def_44efff
mov     ebx, [esp+118h+arg_4]
mov     ebp, [esp+118h+lpstring1]
movsx   eax, bx
push    eax
push    offset aunknown
push    ebp
call    sub_47f9d0
mov     byte ptr [ebp+ebx-1], 0
add     esp, 0ch
jmp     short def_44efff
add     esi, 4
mov     ecx, esi
call    sub_44d2f0
test    eax, eax
jz      short loc_44f173
mov     ecx, esi
call    sub_44d310
mov     ebx, [esp+118h+arg_4]
mov     ecx, [esi+8]
movsx   eax, bx
mov     ebp, [esp+118h+lpstring1]
push    eax
push    ecx
push    ebp
call    sub_47f9d0
add     esp, 0ch
mov     ecx, esi
mov     byte ptr [ebp+ebx-1], 0
call    sub_44d360
jmp     short def_44efff
mov     ebp, [esp+118h+lpstring1]
mov     byte ptr [ebp+0], 0
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn    0ch
push    esi
push    20h
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_44f1e4
push    1
lea     ecx, [esi+4]
push    0ah
mov     dword ptr [esi], offset off_4ab238
push    0ah
call    sub_459cb0
mov     dword ptr [esi+1ch], 0
mov     dword ptr [esi], offset off_4ab250
jmp     short loc_44f1e6
xor     esi, esi
test    esi, esi
jz      short loc_44f20b
mov     ecx, esi
call    sub_4928e0
test    eax, eax
jz      short loc_44f20b
test    esi, esi
jz      short loc_44f209
mov     ecx, esi
call    sub_4928f0
push    esi
call    ??3@yaxpax@z
add     esp, 4
xor     esi, esi
mov     eax, esi
pop     esi
retn
push    ebx
push    esi
push    edi
push    20h
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_44f246
push    1
lea     ecx, [esi+4]
push    0ah
mov     dword ptr [esi], offset off_4ab238
push    0ah
call    sub_459cb0
mov     dword ptr [esi+1ch], 0
mov     dword ptr [esi], offset off_4ab250
jmp     short loc_44f248
xor     esi, esi
test    esi, esi
jz      short loc_44f294
mov     ecx, esi
call    sub_4928e0
mov     ebx, eax
test    ebx, ebx
jnz     short loc_44f27e
mov     edi, [esp+0ch+hmem]
push    edi
call    ds:globallock
mov     ecx, [esp+0ch+arg_4]
push    ecx
push    eax
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+8]
mov     ebx, eax
push    edi
call    ds:globalunlock
test    ebx, ebx
jz      short loc_44f294
test    esi, esi
jz      short loc_44f292
mov     ecx, esi
call    sub_4928f0
push    esi
call    ??3@yaxpax@z
add     esp, 4
xor     esi, esi
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    esi
push    eax
mov     ecx, dword_4adc68
call    sub_44c1f0
mov     esi, eax
test    esi, esi
jz      short loc_44f2c7
mov     ecx, esi
call    sub_4928f0
push    esi
call    ??3@yaxpax@z
add     esp, 4
pop     esi
retn
mov     ecx, dword_4adc68
jmp     sub_44c020
push    esi
mov     ecx, dword_4adc68
call    sub_44c020
mov     esi, eax
test    esi, esi
jz      short loc_44f317
mov     eax, [esp+4+arg_4]
mov     ecx, [esp+4+arg_8]
mov     edx, [esp+4+arg_0]
push    ecx
push    edx
mov     [eax], esi
mov     ecx, dword_4adc68
call    sub_44c1f0
push    eax
mov     ecx, esi
mov     eax, [esi]
call    dword ptr [eax+14h]
pop     esi
retn
mov     eax, 8
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
push    edi
test    eax, eax
jz      short loc_44f358
push    eax
mov     ecx, dword_4adc68
call    sub_44c1e0
mov     esi, [eax]
mov     edi, eax
mov     eax, [esp+8+arg_8]
mov     ecx, [esp+8+arg_0]
push    eax
push    ecx
mov     ecx, dword_4adc68
call    sub_44c1f0
push    eax
mov     ecx, edi
call    dword ptr [esi+14h]
pop     edi
pop     esi
retn
mov     eax, 1f44h
pop     edi
pop     esi
retn
mov     ecx, dword_4adc68
call    sub_44c020
test    eax, eax
jz      short loc_44f382
mov     ecx, [esp+arg_4]
mov     edx, [esp+lpstring]
push    edx
mov     [ecx], eax
mov     ecx, eax
call    sub_44d740
retn
mov     eax, 8
retn
mov     ecx, dword_4adc68
call    sub_44c020
test    eax, eax
jz      short loc_44f3b2
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
push    edx
mov     edx, [eax]
mov     [ecx], eax
mov     ecx, eax
call    dword ptr [edx+1ch]
retn
mov     eax, 8
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f3e2
push    eax
mov     ecx, dword_4adc68
call    sub_44c1e0
mov     ecx, [esp+lpstring]
push    ecx
lea     ecx, [eax+4]
call    sub_44d0e0
retn
mov     eax, 1f44h
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_44f920
add     esp, 4
test    eax, eax
push    esi
mov     esi, dword_4adc68
mov     ecx, esi
jz      short loc_44f41a
call    sub_44c210
push    eax
mov     ecx, esi
call    sub_44d560
pop     esi
retn
call    sub_44c1e0
push    eax
mov     ecx, esi
call    sub_44c160
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
push    edi
call    sub_44f920
mov     esi, [esp+0ch+arg_4]
add     esp, 4
test    eax, eax
push    esi
jz      short loc_44f476
call    sub_44f920
add     esp, 4
test    eax, eax
jz      short loc_44f494
push    esi
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c210
push    eax
mov     ecx, esi
push    edi
call    sub_44c210
push    eax
mov     ecx, esi
call    sub_44d5b0
pop     edi
pop     esi
retn
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c1e0
push    eax
mov     ecx, esi
push    edi
call    sub_44c1e0
push    eax
mov     ecx, esi
call    sub_44c1b0
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c200
push    eax
mov     ecx, esi
call    sub_44c050
pop     esi
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f4e1
push    eax
mov     ecx, dword_4adc68
call    sub_44c1e0
mov     ecx, [esp+arg_4]
mov     edx, [eax]
push    ecx
mov     ecx, eax
call    dword ptr [edx+1ch]
retn
mov     eax, 1f44h
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f511
push    eax
mov     ecx, dword_4adc68
call    sub_44c1e0
mov     ecx, [esp+arg_4]
mov     edx, [eax]
push    ecx
mov     ecx, eax
call    dword ptr [edx+18h]
retn
mov     eax, 1f44h
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f546
push    eax
mov     ecx, dword_4adc68
call    sub_44c1e0
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    ecx
push    edx
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+24h]
retn
mov     eax, 1f44h
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f576
push    eax
mov     ecx, dword_4adc68
call    sub_44c1e0
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    ecx
push    edx
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+20h]
retn
mov     eax, 1f44h
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f5a6
push    eax
mov     ecx, dword_4adc68
call    sub_44c1e0
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    ecx
push    edx
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+28h]
retn
mov     eax, 1f44h
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f5d1
push    eax
mov     ecx, dword_4adc68
call    sub_44c1e0
mov     ecx, [esp+arg_4]
mov     edx, [eax]
push    ecx
mov     ecx, eax
call    dword ptr [edx+2ch]
retn
mov     eax, 1f44h
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f606
push    eax
mov     ecx, dword_4adc68
call    sub_44c1e0
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    ecx
push    edx
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+30h]
retn
mov     eax, 1f44h
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f636
push    eax
mov     ecx, dword_4adc68
call    sub_44c1e0
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    ecx
push    edx
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+34h]
retn
mov     eax, 1f44h
retn
mov     eax, [esp+arg_8]
push    esi
mov     ecx, [esp+4+lpstring1]
push    eax
mov     edx, [esp+8+arg_0]
push    ecx
push    edx
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c1e0
push    eax
mov     ecx, esi
call    sub_44c670
pop     esi
retn
mov     eax, [esp+arg_8]
push    esi
mov     ecx, [esp+4+lpstring1]
push    eax
mov     edx, [esp+8+arg_0]
push    ecx
push    edx
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c1e0
push    eax
mov     ecx, esi
call    sub_44c6e0
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c240
push    eax
mov     ecx, esi
call    sub_44c780
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c240
push    eax
mov     ecx, esi
call    sub_44c7a0
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c240
push    eax
mov     ecx, esi
call    sub_44c7c0
pop     esi
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short locret_44f750
mov     ecx, [esp+arg_4]
push    ecx
push    eax
mov     ecx, dword_4adc68
call    sub_44c240
mov     ecx, eax
call    sub_44e4a0
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f77b
push    eax
mov     ecx, dword_4adc68
call    sub_44c240
mov     ecx, eax
jmp     sub_44ee60
xor     eax, eax
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f79b
push    eax
mov     ecx, dword_4adc68
call    sub_44c240
mov     ecx, eax
jmp     sub_44e4b0
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    esi
test    eax, eax
jz      short loc_44f7c1
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c1e0
push    eax
mov     ecx, esi
call    sub_44c560
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
test    eax, eax
jz      short loc_44f7f1
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c1e0
push    eax
mov     ecx, esi
call    sub_44c5f0
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
test    eax, eax
jz      short loc_44f821
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c1e0
push    eax
mov     ecx, esi
call    sub_44c630
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
test    eax, eax
jz      short loc_44f84f
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c1e0
push    eax
mov     ecx, esi
call    sub_44c650
pop     esi
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_44f88d
push    eax
mov     ecx, dword_4adc68
call    sub_44c200
movzx   cx, [esp+arg_c]
mov     edx, [esp+arg_8]
push    ecx
mov     ecx, [esp+4+arg_4]
push    edx
push    ecx
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+8]
retn
mov     eax, 1f44h
retn
mov     ecx, [esp+arg_0]
test    ecx, ecx
jz      short loc_44f8cb
mov     eax, [esp+arg_c]
mov     edx, [esp+arg_8]
push    eax
push    edx
mov     eax, [esp+8+arg_4]
push    eax
push    ecx
mov     ecx, dword_4adc68
call    sub_44c210
mov     ecx, eax
call    sub_44d600
retn
mov     eax, 1f44h
retn
mov     ecx, [esp+arg_0]
test    ecx, ecx
jz      short loc_44f90b
mov     eax, [esp+arg_c]
mov     edx, [esp+arg_8]
push    eax
push    edx
mov     eax, [esp+8+arg_4]
push    eax
push    ecx
mov     ecx, dword_4adc68
call    sub_44c210
mov     ecx, eax
call    sub_44d620
retn
mov     eax, 1f44h
retn
mov     eax, [esp+arg_0]
push    esi
test    eax, eax
jz      short loc_44f941
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c200
push    eax
mov     ecx, esi
call    sub_44d510
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c200
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
mov     ecx, esi
call    sub_44c200
push    eax
mov     ecx, esi
call    sub_44caa0
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c200
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
mov     ecx, esi
call    sub_44c200
push    eax
mov     ecx, esi
call    sub_44caf0
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c200
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
mov     ecx, esi
call    sub_44c200
push    eax
mov     ecx, esi
call    sub_44cb40
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c200
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
mov     ecx, esi
call    sub_44c200
push    eax
mov     ecx, esi
call    sub_44cb90
pop     esi
retn
mov     eax, [esp+lpstring2]
push    esi
mov     esi, [esp+4+lpstring1]
push    4
push    eax
push    esi
mov     dword ptr [esi], 0
call    sub_47f9d0
add     esp, 0ch
mov     eax, [esi]
pop     esi
retn
cmp     dword_4adc68, 0
jz      short locret_44fa48
mov     eax, dword_4adc68
mov     dword ptr [eax+0f4h], 1
retn
sub     esp, 64h
lea     eax, [esp+64h+classname]
push    esi
mov     esi, [esp+68h+arg_4]
push    edi
mov     edi, [esp+6ch+hwnd]
push    64h
push    eax
push    edi
call    ds:getclassnamea
test    eax, eax
jnz     short loc_44fa7c
mov     eax, 1
pop     edi
pop     esi
add     esp, 64h
retn    8
lea     eax, [esp+6ch+classname]
push    offset aapwmainclass
push    eax
call    ds:lstrcmpia
test    eax, eax
jz      short loc_44fa9d
mov     eax, 1
pop     edi
pop     esi
add     esp, 64h
retn    8
push    0
xor     eax, eax
mov     ax, [esi]
push    eax
push    40ch
push    edi
call    ds:sendmessagea
test    ax, ax
jnz     short loc_44fabc
cmp     dword ptr [esi+2], 0
jnz     short loc_44facf
cmp     ax, 1
jz      short loc_44facf
mov     eax, 1
pop     edi
pop     esi
add     esp, 64h
retn    8
xor     eax, eax
pop     edi
mov     dword ptr [esi+6], 1
pop     esi
add     esp, 64h
retn    8
sub     esp, 18h
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+24h+arg_14]
push    ebp
cmp     esi, ebx
jnz     loc_44fb87
lea     eax, [esp+28h+var_18]
push    eax
call    sub_451920
add     esp, 4
cmp     eax, 1
jnz     short loc_44fb7f
lea     eax, [esp+28h+var_14]
mov     ecx, [esp+28h+var_18]
mov     [eax], ebx
mov     [eax+4], ebx
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     ebp, [esp+28h+arg_10]
mov     [eax+10h], ebx
cmp     ebp, 0ffh
mov     edx, [ecx+0ah]
mov     [esp+28h+var_14], edx
mov     eax, [ecx+0eh]
mov     [esp+28h+var_c], 1
mov     [esp+28h+var_10], eax
jnz     short loc_44fb74
lea     eax, [ecx+12h]
push    eax
call    sub_450f60
add     esp, 4
lea     ebp, [eax+0ffh]
cmp     ebp, 0ffh
jnz     short loc_44fb74
mov     eax, [esp+28h+var_18]
add     eax, 32h
cmp     [eax], bl
jnz     short loc_44fb6b
mov     eax, [esp+28h+var_18]
add     eax, 12h
push    eax
call    sub_451970
add     esp, 4
call    sub_451950
mov     edi, [esp+28h+lprcsrc2]
jmp     short loc_44fbcb
xor     ebp, ebp
mov     edi, [esp+28h+lprcsrc2]
jmp     short loc_44fbcb
lea     eax, [esp+28h+var_14]
mov     ecx, [esp+28h+arg_18]
push    eax
push    ecx
push    esi
call    sub_451520
add     esp, 0ch
test    eax, eax
jz      short loc_44fba4
mov     edi, [esp+28h+lprcsrc2]
jmp     short loc_44fba8
mov     edi, [esp+28h+arg_8]
mov     ebp, [esp+28h+arg_10]
cmp     ebp, 0ffh
jge     short loc_44fbcb
mov     eax, 80h
sub     eax, [esp+28h+var_14]
cmp     eax, 1
jg      short loc_44fbc7
mov     eax, 1
mov     [esp+28h+var_14], eax
lea     eax, [ebp-6]
cmp     eax, 0eh
ja      short def_44fbd3
jmp     ds:jpt_44fbd3[eax*4]
cmp     ebp, 0ffh
jl      loc_44fd7a
lea     eax, [esp+28h+var_14]
mov     ecx, [esp+28h+arg_18]
mov     edx, [esp+28h+hdcsrc]
push    eax
mov     eax, [esp+2ch+hdc]
push    ecx
push    esi
sub     ebp, 0ffh
push    edi
push    edx
push    eax
push    ebp
call    sub_451170
add     esp, 1ch
jmp     loc_44fd78
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_14]
mov     edx, [esp+28h+hdcsrc]
push    eax
mov     eax, [esp+2ch+hdc]
push    ecx
push    edi
push    edx
push    eax
call    sub_44fff0
add     esp, 14h
jmp     loc_44fd78
sub     ebp, 8
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_14]
push    ebp
mov     edx, [esp+2ch+hdcsrc]
push    eax
mov     eax, [esp+30h+hdc]
push    ecx
push    edi
push    edx
push    eax
call    sub_450320
add     esp, 18h
jmp     loc_44fd78
sub     ebp, 8
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_14]
push    ebp
mov     edx, [esp+2ch+hdcsrc]
push    eax
mov     eax, [esp+30h+hdc]
push    ecx
push    edi
push    edx
push    eax
call    sub_450450
add     esp, 18h
jmp     loc_44fd78
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_14]
mov     edx, [esp+28h+hdcsrc]
push    eax
mov     eax, [esp+2ch+hdc]
push    ecx
push    edi
push    edx
push    eax
call    sub_450580
add     esp, 14h
jmp     loc_44fd78
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_14]
mov     edx, [esp+28h+hdcsrc]
push    eax
mov     eax, [esp+2ch+hdc]
push    ecx
push    edi
push    edx
push    eax
call    sub_450680
add     esp, 14h
jmp     loc_44fd78
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_14]
mov     edx, [esp+28h+hdcsrc]
push    eax
mov     eax, [esp+2ch+hdc]
push    ecx
push    edi
push    edx
push    eax
call    sub_450860
add     esp, 14h
jmp     loc_44fd78
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_14]
mov     edx, [esp+28h+hdcsrc]
push    eax
mov     eax, [esp+2ch+hdc]
push    ecx
push    edi
push    edx
push    eax
call    sub_450950
add     esp, 14h
jmp     short loc_44fd78
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_14]
mov     edx, [esp+28h+hdcsrc]
push    eax
mov     eax, [esp+2ch+hdc]
push    ecx
push    edi
push    edx
push    eax
call    sub_450a40
add     esp, 14h
jmp     short loc_44fd78
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_14]
mov     edx, [esp+28h+hdcsrc]
push    eax
mov     eax, [esp+2ch+hdc]
push    ecx
push    edi
push    edx
push    eax
call    sub_450b90
add     esp, 14h
jmp     short loc_44fd78
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+var_14]
mov     edx, [esp+28h+hdcsrc]
push    eax
mov     eax, [esp+2ch+hdc]
push    ecx
push    edi
push    edx
push    eax
call    sub_44fe10
add     esp, 14h
jmp     short loc_44fd78
mov     eax, [esp+28h+var_10]
mov     ecx, [esp+28h+hdcsrc]
mov     edx, [esp+28h+hdc]
push    eax
push    edi
push    ecx
push    edx
call    sub_451ad0
add     esp, 10h
mov     ebx, eax
test    ebx, ebx
jnz     short loc_44fda5
mov     edx, [edi+4]
mov     ecx, [edi]
mov     eax, [esp+28h+hdcsrc]
push    edx
push    ecx
push    eax
mov     eax, [edi+0ch]
sub     eax, edx
push    eax
mov     eax, [edi+8]
sub     eax, ecx
push    eax
push    edx
push    ecx
mov     ecx, [esp+44h+hdc]
push    ecx
call    sub_450cf0
add     esp, 20h
test    esi, esi
jnz     short loc_44fdc9
lea     eax, [esp+28h+var_18]
push    eax
call    sub_451920
add     esp, 4
cmp     eax, 1
jnz     short loc_44fdc9
mov     eax, [esp+28h+var_18]
mov     word ptr [eax], 0
call    sub_451950
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+arg_8]
sub     esp, 1ch
mov     [esp+1ch+var_c], 0ffffffffh
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [eax+8]
mov     ebp, [eax+0ch]
sub     edi, [eax]
sub     ebp, [eax+4]
test    edi, edi
jle     loc_44ffd9
test    ebp, ebp
jle     loc_44ffd9
xor     ebx, ebx
mov     eax, [esp+2ch+arg_c]
sar     eax, 1
test    eax, eax
jz      short loc_44fe53
sar     eax, 1
inc     ebx
test    eax, eax
jnz     short loc_44fe4b
cmp     ebx, 2
jg      short loc_44fe5d
mov     ebx, 2
mov     eax, 1
mov     cl, bl
shl     eax, cl
mov     esi, eax
mov     [esp+2ch+arg_c], eax
mov     [esp+2ch+var_1c], eax
cmp     ebp, edi
jge     short loc_44fe8e
mov     eax, ebp
imul    eax, [esp+2ch+arg_c]
cdq
idiv    edi
cmp     eax, 1
jg      short loc_44fe88
mov     eax, 1
mov     [esp+2ch+var_1c], eax
jmp     short loc_44fea4
mov     eax, edi
imul    eax, [esp+2ch+arg_c]
cdq
idiv    ebp
cmp     eax, 1
mov     esi, eax
jg      short loc_44fea4
mov     esi, 1
call    sub_409e60
lea     ecx, ds:0[ebx*2]
mov     [esp+2ch+var_18], eax
mov     eax, [esp+2ch+var_1c]
push    ecx
mov     [esp+30h+var_10], 0
imul    eax, esi
mov     [esp+30h+var_14], eax
call    sub_4502f0
mov     [esp+30h+var_4], eax
add     esp, 4
call    _rand
mov     ecx, [esp+2ch+arg_c]
cdq
imul    ecx, ecx
dec     ecx
idiv    ecx
inc     edx
mov     ebp, edx
mov     [esp+2ch+var_8], edx
mov     eax, [esp+2ch+var_c]
mov     ecx, [esp+2ch+var_14]
mov     edx, [esp+2ch+arg_10]
push    eax
mov     eax, [esp+30h+var_18]
push    ecx
push    edx
push    eax
call    sub_4519f0
add     esp, 10h
test    eax, eax
jz      loc_44ffcf
mov     edi, ebp
mov     cl, bl
shr     edi, cl
mov     [esp+2ch+var_c], 0fffffffeh
movsx   ecx, word ptr [esp+2ch+arg_c]
dec     ecx
and     ecx, ebp
cmp     edi, esi
jge     short loc_44ff68
cmp     ecx, [esp+2ch+var_1c]
jge     short loc_44ff68
mov     eax, [esp+2ch+var_10]
sub     edx, edx
imul    eax, [esp+2ch+arg_10]
div     [esp+2ch+var_14]
mov     edx, [esp+2ch+var_18]
inc     [esp+2ch+var_10]
add     edx, eax
mov     eax, [esp+2ch+var_1c]
push    edx
push    eax
mov     edx, [esp+34h+hdcsrc]
push    esi
mov     eax, [esp+38h+hdc]
push    ecx
mov     ecx, [esp+3ch+arg_8]
push    edi
push    ecx
push    edx
push    eax
call    sub_450240
add     esp, 20h
test    ebp, 1
jz      short loc_44ff79
shr     ebp, 1
xor     ebp, [esp+2ch+var_4]
jmp     short loc_44ff7c
shr     ebp, 1
call    sub_43e170
cmp     [esp+2ch+var_8], ebp
jnz     loc_44feeb
mov     eax, [esp+2ch+var_10]
sub     edx, edx
imul    eax, [esp+2ch+arg_10]
div     [esp+2ch+var_14]
mov     ecx, [esp+2ch+var_18]
add     ecx, eax
mov     eax, [esp+2ch+var_1c]
mov     edx, [esp+2ch+arg_8]
push    ecx
mov     ecx, [esp+30h+hdcsrc]
push    eax
mov     eax, [esp+34h+hdc]
push    esi
push    0
push    0
push    edx
push    ecx
push    eax
call    sub_450240
add     esp, 20h
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, [esp+arg_8]
sub     esp, 20h
push    ebx
mov     ecx, [eax+8]
push    esi
sub     ecx, [eax]
mov     [esp+28h+var_14], 0ffffffffh
push    edi
push    ebp
mov     edi, [eax+0ch]
sub     edi, [eax+4]
test    ecx, ecx
jle     loc_450232
test    edi, edi
jle     loc_450232
mov     esi, [esp+30h+arg_c]
cmp     ecx, edi
mov     eax, esi
mov     [esp+30h+var_18], esi
jle     short loc_450042
imul    eax, edi
cdq
idiv    ecx
cmp     eax, 1
jg      short loc_45003c
mov     eax, 1
mov     [esp+30h+var_18], eax
jmp     short loc_450054
imul    eax, ecx
cdq
idiv    edi
cmp     eax, 1
mov     esi, eax
jg      short loc_450054
mov     esi, 1
mov     eax, [esp+30h+var_18]
lea     ecx, [esi-1]
dec     eax
lea     edx, [esp+30h+rc]
push    eax
push    ecx
push    0
push    0
push    edx
call    ds:setrect
xor     edi, edi
call    sub_409e60
mov     [esp+30h+var_20], eax
mov     eax, [esp+30h+var_18]
imul    eax, esi
mov     [esp+30h+var_1c], eax
mov     eax, [esp+30h+var_14]
mov     ecx, [esp+30h+var_1c]
mov     edx, [esp+30h+arg_10]
push    eax
mov     eax, [esp+34h+var_20]
push    ecx
push    edx
push    eax
call    sub_4519f0
add     esp, 10h
test    eax, eax
jz      loc_450228
mov     ebx, [esp+30h+rc.left]
mov     ebp, [esp+30h+rc.top]
mov     [esp+30h+var_14], 0fffffffeh
cmp     [esp+30h+rc.right], ebx
jle     short loc_4500f8
mov     eax, [esp+30h+arg_10]
sub     edx, edx
imul    eax, edi
mov     ecx, [esp+30h+var_20]
inc     edi
div     [esp+30h+var_1c]
add     ecx, eax
mov     edx, [esp+30h+arg_8]
mov     eax, [esp+30h+var_18]
push    ecx
mov     ecx, [esp+34h+hdcsrc]
push    eax
mov     eax, [esp+38h+hdc]
push    esi
push    ebp
push    ebx
push    edx
inc     ebx
push    ecx
push    eax
call    sub_450240
add     esp, 20h
cmp     [esp+30h+rc.right], ebx
jg      short loc_4500bd
cmp     [esp+30h+rc.bottom], ebp
jle     short loc_450139
mov     eax, [esp+30h+arg_10]
sub     edx, edx
imul    eax, edi
mov     ecx, [esp+30h+var_20]
inc     edi
div     [esp+30h+var_1c]
add     ecx, eax
mov     edx, [esp+30h+arg_8]
mov     eax, [esp+30h+var_18]
push    ecx
mov     ecx, [esp+34h+hdcsrc]
push    eax
mov     eax, [esp+38h+hdc]
push    esi
push    ebp
push    ebx
push    edx
inc     ebp
push    ecx
push    eax
call    sub_450240
add     esp, 20h
cmp     [esp+30h+rc.bottom], ebp
jg      short loc_4500fe
cmp     [esp+30h+rc.left], ebx
jge     short loc_45017a
mov     eax, [esp+30h+arg_10]
sub     edx, edx
imul    eax, edi
mov     ecx, [esp+30h+var_20]
inc     edi
div     [esp+30h+var_1c]
add     ecx, eax
mov     edx, [esp+30h+arg_8]
mov     eax, [esp+30h+var_18]
push    ecx
mov     ecx, [esp+34h+hdcsrc]
push    eax
mov     eax, [esp+38h+hdc]
push    esi
push    ebp
push    ebx
push    edx
dec     ebx
push    ecx
push    eax
call    sub_450240
add     esp, 20h
cmp     [esp+30h+rc.left], ebx
jl      short loc_45013f
cmp     [esp+30h+rc.top], ebp
jge     short loc_4501bb
mov     eax, [esp+30h+arg_10]
sub     edx, edx
imul    eax, edi
mov     ecx, [esp+30h+var_20]
inc     edi
div     [esp+30h+var_1c]
add     ecx, eax
mov     edx, [esp+30h+arg_8]
mov     eax, [esp+30h+var_18]
push    ecx
mov     ecx, [esp+34h+hdcsrc]
push    eax
mov     eax, [esp+38h+hdc]
push    esi
push    ebp
push    ebx
push    edx
dec     ebp
push    ecx
push    eax
call    sub_450240
add     esp, 20h
cmp     [esp+30h+rc.top], ebp
jl      short loc_450180
call    sub_43e170
inc     [esp+30h+rc.left]
dec     [esp+30h+rc.right]
mov     eax, [esp+30h+rc.left]
cmp     [esp+30h+rc.right], eax
jl      short loc_4501e8
inc     [esp+30h+rc.top]
dec     [esp+30h+rc.bottom]
mov     eax, [esp+30h+rc.top]
cmp     [esp+30h+rc.bottom], eax
jge     loc_450083
mov     eax, [esp+30h+arg_10]
sub     edx, edx
imul    eax, edi
div     [esp+30h+var_1c]
mov     ecx, [esp+30h+var_20]
add     ecx, eax
mov     eax, [esp+30h+var_18]
mov     edx, [esp+30h+arg_8]
push    ecx
mov     ecx, [esp+34h+hdcsrc]
push    eax
mov     eax, [esp+38h+hdc]
push    esi
push    ebp
push    ebx
push    edx
push    ecx
push    eax
call    sub_450240
add     esp, 20h
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ecx, [esp+arg_8]
push    ebx
push    esi
push    edi
push    ebp
mov     ebx, [ecx+8]
sub     ebx, [ecx]
mov     ebp, [ecx+0ch]
sub     ebp, [ecx+4]
mov     edi, [esp+10h+arg_c]
cmp     [esp+10h+arg_14], edi
jle     loc_4502e2
mov     eax, [esp+10h+arg_10]
cmp     [esp+10h+arg_18], eax
jle     short loc_4502e2
mov     eax, edi
imul    eax, ebx
cdq
idiv    [esp+10h+arg_14]
mov     esi, eax
lea     eax, [edi+1]
imul    eax, ebx
cdq
idiv    [esp+10h+arg_14]
mov     ebx, eax
mov     eax, [esp+10h+arg_10]
imul    eax, ebp
cdq
idiv    [esp+10h+arg_18]
sub     ebx, esi
mov     edi, eax
mov     eax, [esp+10h+arg_10]
add     esi, [ecx]
inc     eax
imul    eax, ebp
cdq
idiv    [esp+10h+arg_18]
mov     ebp, eax
sub     ebp, edi
add     edi, [ecx+4]
call    sub_409e60
cmp     eax, [esp+10h+arg_1c]
jnb     short loc_4502c5
call    sub_489290
call    sub_409e60
cmp     eax, [esp+10h+arg_1c]
jb      short loc_4502b5
mov     eax, [esp+10h+hdcsrc]
push    0cc0020h
push    edi
push    esi
mov     ecx, [esp+1ch+hdc]
push    eax
push    ebp
push    ebx
push    edi
push    esi
push    ecx
call    sub_451a90
add     esp, 24h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     cx, [esp+arg_0]
xor     eax, eax
movzx   edx, cx
dec     cl
mov     al, byte_4adcc0[edx]
mov     edx, 1
shl     edx, cl
test    eax, edx
jnz     short locret_450313
add     eax, eax
test    eax, edx
jz      short loc_45030d
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
call    sub_409e60
mov     edi, [esp+20h+arg_8]
mov     [esp+20h+var_4], eax
mov     [esp+20h+var_10], 1
mov     eax, [edi+8]
mov     ecx, [edi+0ch]
sub     eax, [edi]
mov     esi, [edi+4]
mov     ebp, ecx
mov     [esp+20h+var_8], eax
sub     ebp, esi
test    eax, eax
jle     loc_450442
test    ebp, ebp
jle     loc_450442
mov     ebx, [esp+20h+arg_c]
mov     eax, ebx
cdq
sub     eax, edx
sar     eax, 1
add     eax, ebp
cdq
idiv    ebx
mov     ebx, eax
test    ebx, ebx
jnz     short loc_45037b
mov     ebx, 1
mov     eax, ebx
cdq
sub     eax, edx
sar     eax, 1
add     eax, ebp
cdq
idiv    ebx
cmp     [esp+20h+arg_14], 0
mov     [esp+20h+arg_c], eax
mov     eax, [edi]
mov     [esp+20h+x], eax
jnz     short loc_45039d
mov     esi, ecx
jmp     short loc_45039f
sub     esi, ebx
mov     ebp, 1
cmp     [esp+20h+arg_c], ebp
jl      loc_450436
mov     eax, [esp+20h+arg_c]
push    ebp
mov     ecx, [esp+24h+arg_10]
push    eax
mov     edx, [esp+28h+var_4]
push    ecx
push    edx
call    sub_4519f0
mov     [esp+30h+var_10], eax
add     esp, 10h
test    eax, eax
jz      short loc_450436
cmp     [esp+20h+arg_14], 1
jnz     short loc_4503f5
add     esi, ebx
mov     eax, [edi+0ch]
lea     ecx, [esi+ebx]
cmp     ecx, eax
jle     short loc_450406
sub     eax, esi
mov     ebx, eax
test    ebx, ebx
jnz     short loc_450406
mov     eax, [esp+20h+var_10]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esi, ebx
mov     eax, [edi+4]
cmp     esi, eax
jge     short loc_450406
sub     ebx, eax
add     ebx, esi
jz      short loc_450436
mov     esi, eax
mov     eax, [esp+20h+x]
push    0cc0020h
mov     ecx, [esp+24h+hdcsrc]
push    esi
mov     edx, [esp+28h+var_8]
push    eax
push    ecx
inc     ebp
mov     ecx, [esp+30h+hdc]
push    ebx
push    edx
push    esi
push    eax
push    ecx
call    sub_451a90
add     esp, 24h
cmp     [esp+20h+arg_c], ebp
jge     loc_4503ae
mov     eax, [esp+20h+var_10]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
call    sub_409e60
mov     edi, [esp+20h+arg_8]
mov     [esp+20h+var_4], eax
mov     [esp+20h+var_10], 1
mov     ebx, [edi]
mov     esi, [edi+8]
sub     esi, ebx
mov     ecx, [edi+4]
mov     eax, [edi+0ch]
sub     eax, ecx
test    esi, esi
mov     [esp+20h+cy], eax
jle     loc_450570
test    eax, eax
jle     loc_450570
mov     ebp, [esp+20h+arg_c]
mov     eax, ebp
cdq
sub     eax, edx
sar     eax, 1
add     eax, esi
cdq
idiv    ebp
mov     ebp, eax
test    ebp, ebp
jnz     short loc_4504ab
mov     ebp, 1
mov     eax, ebp
cdq
sub     eax, edx
mov     [esp+20h+y], ecx
sar     eax, 1
add     eax, esi
cdq
idiv    ebp
cmp     [esp+20h+arg_14], 3
mov     [esp+20h+arg_c], eax
jnz     short loc_4504cc
mov     ebx, [edi+8]
jmp     short loc_4504ce
sub     ebx, ebp
mov     esi, 1
cmp     [esp+20h+arg_c], esi
jl      loc_450564
mov     eax, [esp+20h+arg_c]
push    esi
mov     ecx, [esp+24h+arg_10]
push    eax
mov     edx, [esp+28h+var_4]
push    ecx
push    edx
call    sub_4519f0
mov     [esp+30h+var_10], eax
add     esp, 10h
test    eax, eax
jz      short loc_450564
cmp     [esp+20h+arg_14], 2
jnz     short loc_450524
add     ebx, ebp
mov     eax, [edi+8]
lea     ecx, [ebx+ebp]
cmp     ecx, eax
jle     short loc_450534
sub     eax, ebx
mov     ebp, eax
test    ebp, ebp
jnz     short loc_450534
mov     eax, [esp+20h+var_10]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     ebx, ebp
mov     eax, [edi]
cmp     ebx, eax
jge     short loc_450534
sub     ebp, eax
add     ebp, ebx
jz      short loc_450564
mov     ebx, eax
mov     eax, [esp+20h+y]
push    0cc0020h
mov     ecx, [esp+24h+hdcsrc]
push    eax
mov     edx, [esp+28h+cy]
push    ebx
push    ecx
inc     esi
mov     ecx, [esp+30h+hdc]
push    edx
push    ebp
push    eax
push    ebx
push    ecx
call    sub_451a90
add     esp, 24h
cmp     [esp+20h+arg_c], esi
jge     loc_4504dd
mov     eax, [esp+20h+var_10]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 14h
push    ebx
push    esi
push    edi
push    ebp
call    sub_409e60
mov     ebx, [esp+24h+arg_8]
mov     [esp+24h+var_14], eax
mov     eax, [ebx+8]
mov     esi, [ebx+0ch]
sub     eax, [ebx]
sub     esi, [ebx+4]
test    eax, eax
jle     loc_45066a
test    esi, esi
jle     loc_45066a
cmp     esi, eax
jl      short loc_4505b5
mov     esi, eax
mov     ecx, [esp+24h+arg_c]
mov     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
add     eax, esi
cdq
idiv    ecx
mov     edi, eax
test    edi, edi
jnz     short loc_4505d1
mov     edi, 1
mov     eax, edi
lea     ecx, ds:0[edi*2]
cdq
sub     eax, edx
sar     eax, 1
add     eax, esi
cdq
idiv    ecx
mov     esi, eax
lea     ecx, [esp+24h+rc]
mov     eax, [ebx]
mov     edx, [ebx+4]
mov     ebp, [ebx+8]
mov     [ecx], eax
mov     eax, [ebx+0ch]
mov     [ecx+4], edx
mov     ebx, 1
mov     [ecx+8], ebp
mov     [ecx+0ch], eax
push    ebx
mov     eax, ebx
inc     ebx
push    esi
mov     ecx, [esp+2ch+arg_10]
mov     eax, [esp+2ch+var_14]
push    ecx
push    eax
call    sub_4519f0
add     esp, 10h
mov     ebp, eax
test    ebp, ebp
jz      short loc_450660
lea     eax, [esp+24h+rc]
push    edi
mov     ecx, [esp+28h+hdcsrc]
push    eax
mov     edx, [esp+2ch+hdc]
push    ecx
push    edx
call    sub_4507a0
lea     ecx, [esp+34h+rc]
add     esp, 10h
mov     eax, edi
neg     eax
push    eax
push    eax
push    ecx
call    ds:inflaterect
mov     ecx, [esp+24h+rc.left]
cmp     [esp+24h+rc.right], ecx
jle     short loc_450660
mov     eax, [esp+24h+rc.top]
cmp     [esp+24h+rc.bottom], eax
jg      short loc_450606
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 18h
push    ebx
push    esi
push    edi
push    ebp
call    sub_409e60
mov     edi, [esp+28h+lprcsrc2]
mov     [esp+28h+var_14], eax
mov     [esp+28h+var_18], 1
mov     eax, [edi+8]
mov     ecx, [edi+0ch]
sub     eax, [edi]
sub     ecx, [edi+4]
test    eax, eax
jle     loc_450785
test    ecx, ecx
jle     loc_450785
cmp     ecx, eax
jl      short loc_4506bd
mov     ecx, eax
mov     esi, [esp+28h+arg_c]
mov     eax, esi
cdq
sub     eax, edx
sar     eax, 1
add     eax, ecx
cdq
idiv    esi
mov     ebx, eax
test    ebx, ebx
jnz     short loc_4506d9
mov     ebx, 1
lea     esi, ds:0[ebx*2]
mov     eax, ecx
cdq
idiv    esi
lea     edx, [esp+28h+rc]
mov     ebp, [edi+4]
lea     esi, [eax+1]
mov     eax, [edi]
mov     [edx], eax
mov     eax, [edi+8]
mov     [edx+4], ebp
mov     ebp, [edi+0ch]
mov     [edx+8], eax
mov     eax, ebx
sub     eax, ecx
mov     [edx+0ch], ebp
cdq
sub     eax, edx
lea     edx, [esp+28h+rc]
sar     eax, 1
mov     ebp, 1
push    eax
push    eax
push    edx
call    ds:inflaterect
cmp     esi, ebp
jl      short loc_450779
mov     eax, [esp+28h+arg_10]
push    ebp
mov     ecx, [esp+2ch+var_14]
push    esi
push    eax
push    ecx
call    sub_4519f0
mov     [esp+38h+var_18], eax
add     esp, 10h
test    eax, eax
jz      short loc_450779
lea     eax, [esp+28h+rc]
push    ebx
mov     ecx, [esp+2ch+hdcsrc]
push    eax
mov     edx, [esp+30h+hdc]
push    ecx
push    edx
inc     ebp
call    sub_4507a0
lea     ecx, [esp+38h+rc]
add     esp, 10h
push    ebx
push    ebx
push    ecx
call    ds:inflaterect
lea     ecx, [esp+28h+rc]
push    edi
push    ecx
lea     ecx, [esp+30h+rc]
push    ecx
call    ds:intersectrect
cmp     ebp, esi
jle     short loc_450722
mov     eax, [esp+28h+var_18]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_8]
push    edi
push    ebp
push    0cc0020h
mov     edx, [ebx]
mov     ebp, [ebx+8]
sub     ebp, edx
mov     eax, [ebx+4]
mov     esi, [ebx+0ch]
push    eax
sub     esi, eax
push    edx
mov     ecx, [esp+1ch+hdcsrc]
mov     edi, [esp+1ch+cy]
push    ecx
push    edi
push    ebp
push    eax
mov     eax, [esp+2ch+hdc]
push    edx
push    eax
call    sub_451a90
add     esp, 24h
mov     eax, [ebx+4]
add     eax, edi
mov     edx, [ebx+8]
sub     edx, edi
lea     ecx, ds:0[edi*2]
sub     esi, ecx
push    0cc0020h
mov     ecx, [esp+14h+hdcsrc]
push    eax
push    edx
push    ecx
push    esi
push    edi
push    eax
push    edx
mov     eax, [esp+30h+hdc]
push    eax
call    sub_451a90
add     esp, 24h
mov     edx, [ebx+0ch]
sub     edx, edi
mov     eax, [ebx]
mov     ecx, [esp+10h+hdcsrc]
push    0cc0020h
push    edx
push    eax
push    ecx
push    edi
push    ebp
push    edx
mov     edx, [esp+2ch+hdc]
push    eax
push    edx
call    sub_451a90
add     esp, 24h
mov     edx, [ebx+4]
add     edx, edi
mov     eax, [ebx]
mov     ecx, [esp+10h+hdcsrc]
push    0cc0020h
push    edx
push    eax
push    ecx
push    esi
push    edi
push    edx
mov     edx, [esp+2ch+hdc]
push    eax
push    edx
call    sub_451a90
add     esp, 24h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 14h
push    ebx
push    esi
push    edi
push    ebp
call    sub_409e60
mov     esi, [esp+24h+arg_8]
mov     [esp+24h+var_4], eax
mov     [esp+24h+var_8], 1
mov     edi, [esi]
mov     eax, [esi+4]
mov     ebx, [esi+8]
mov     ecx, [esi+0ch]
sub     ebx, edi
sub     ecx, eax
mov     [esp+24h+y], eax
test    ebx, ebx
jle     loc_450941
test    ecx, ecx
jle     loc_450941
mov     ebp, [esp+24h+arg_c]
mov     eax, ebp
cdq
sub     eax, edx
sar     eax, 1
add     eax, ecx
cdq
idiv    ebp
mov     [esp+24h+var_14], eax
test    eax, eax
jnz     short loc_4508c0
mov     [esp+24h+var_14], 1
mov     [esp+24h+var_10], 1
cmp     [esp+24h+var_14], 1
jl      short loc_450935
mov     eax, [esp+24h+var_10]
mov     ecx, [esp+24h+var_14]
mov     edx, [esp+24h+arg_10]
push    eax
mov     eax, [esp+28h+var_4]
push    ecx
push    edx
push    eax
call    sub_4519f0
mov     [esp+34h+var_8], eax
add     esp, 10h
test    eax, eax
jz      short loc_450935
mov     ebp, [esp+24h+y]
cmp     [esi+0ch], ebp
jl      short loc_450923
mov     eax, [esp+24h+hdcsrc]
push    0cc0020h
mov     ecx, [esp+28h+hdc]
push    ebp
push    edi
push    eax
push    1
push    ebx
push    ebp
push    edi
push    ecx
call    sub_451a90
add     ebp, [esp+48h+var_14]
add     esp, 24h
cmp     [esi+0ch], ebp
jge     short loc_4508fc
mov     eax, [esp+24h+var_14]
inc     [esp+24h+var_10]
inc     [esp+24h+y]
cmp     [esp+24h+var_10], eax
jle     short loc_4508cf
mov     eax, [esp+24h+var_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 14h
push    ebx
push    esi
push    edi
push    ebp
call    sub_409e60
mov     esi, [esp+24h+arg_8]
mov     [esp+24h+var_4], eax
mov     [esp+24h+var_8], 1
mov     eax, [esi]
mov     edi, [esi+4]
mov     ecx, [esi+8]
mov     ebx, [esi+0ch]
sub     ecx, eax
sub     ebx, edi
mov     [esp+24h+x], eax
test    ecx, ecx
jle     loc_450a31
test    ebx, ebx
jle     loc_450a31
mov     ebp, [esp+24h+arg_c]
mov     eax, ebp
cdq
sub     eax, edx
sar     eax, 1
add     eax, ecx
cdq
idiv    ebp
mov     [esp+24h+var_14], eax
test    eax, eax
jnz     short loc_4509b0
mov     [esp+24h+var_14], 1
mov     [esp+24h+var_10], 1
cmp     [esp+24h+var_14], 1
jl      short loc_450a25
mov     eax, [esp+24h+var_10]
mov     ecx, [esp+24h+var_14]
mov     edx, [esp+24h+arg_10]
push    eax
mov     eax, [esp+28h+var_4]
push    ecx
push    edx
push    eax
call    sub_4519f0
mov     [esp+34h+var_8], eax
add     esp, 10h
test    eax, eax
jz      short loc_450a25
mov     ebp, [esp+24h+x]
cmp     [esi+8], ebp
jl      short loc_450a13
mov     eax, [esp+24h+hdcsrc]
push    0cc0020h
mov     ecx, [esp+28h+hdc]
push    edi
push    ebp
push    eax
push    ebx
push    1
push    edi
push    ebp
push    ecx
call    sub_451a90
add     ebp, [esp+48h+var_14]
add     esp, 24h
cmp     [esi+8], ebp
jge     short loc_4509ec
mov     eax, [esp+24h+var_14]
inc     [esp+24h+var_10]
inc     [esp+24h+x]
cmp     eax, [esp+24h+var_10]
jge     short loc_4509bf
mov     eax, [esp+24h+var_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
call    sub_409e60
mov     ebx, [esp+20h+arg_8]
mov     [esp+20h+var_4], eax
mov     [esp+20h+var_10], 1
mov     eax, [ebx+0ch]
mov     edi, [ebx+8]
sub     eax, [ebx+4]
mov     esi, [ebx]
mov     ecx, edi
mov     [esp+20h+cy], eax
sub     ecx, esi
test    eax, eax
jle     loc_450b80
test    ecx, ecx
jle     loc_450b80
mov     ebp, [esp+20h+arg_c]
mov     eax, ebp
cdq
sub     eax, edx
sar     eax, 1
add     eax, ecx
cdq
idiv    ebp
mov     ebp, eax
test    ebp, ebp
jnz     short loc_450a9b
mov     ebp, 1
mov     eax, ebp
cdq
sub     eax, edx
sub     edi, ebp
mov     [esp+20h+var_8], 1
sar     eax, 1
add     eax, ecx
lea     ecx, ds:0[ebp*2]
cdq
idiv    ecx
mov     [esp+20h+arg_c], eax
mov     eax, edi
sub     eax, esi
cmp     eax, ebp
jl      short loc_450b41
mov     eax, [esp+20h+var_8]
mov     ecx, [esp+20h+arg_c]
mov     edx, [esp+20h+arg_10]
push    eax
mov     eax, [esp+24h+var_4]
push    ecx
push    edx
push    eax
call    sub_4519f0
mov     [esp+30h+var_10], eax
add     esp, 10h
test    eax, eax
jz      short loc_450b41
mov     eax, [ebx+4]
push    0cc0020h
mov     ecx, [esp+24h+hdcsrc]
push    eax
mov     edx, [esp+28h+cy]
push    esi
push    ecx
push    edx
push    ebp
push    eax
mov     eax, [esp+3ch+hdc]
push    esi
push    eax
add     esi, ebp
call    sub_451a90
mov     ecx, [esp+44h+hdcsrc]
mov     edx, [esp+44h+cy]
add     esp, 24h
mov     eax, [ebx+4]
push    0cc0020h
push    eax
push    edi
push    ecx
push    edx
push    ebp
push    eax
push    edi
mov     eax, [esp+40h+hdc]
sub     edi, ebp
push    eax
call    sub_451a90
inc     [esp+44h+var_8]
add     esp, 24h
mov     eax, edi
sub     eax, esi
cmp     eax, ebp
jge     short loc_450ac5
cmp     [esp+20h+var_10], 0
jz      short loc_450b74
add     edi, ebp
sub     edi, esi
test    edi, edi
jle     short loc_450b74
mov     eax, [ebx+4]
push    0cc0020h
mov     ecx, [esp+24h+hdcsrc]
push    eax
mov     edx, [esp+28h+cy]
push    esi
push    ecx
push    edx
push    edi
push    eax
mov     eax, [esp+3ch+hdc]
push    esi
push    eax
call    sub_451a90
add     esp, 24h
mov     eax, [esp+20h+var_10]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 0ch
push    ebx
push    esi
push    edi
push    ebp
call    sub_409e60
mov     [esp+1ch+var_8], eax
mov     eax, [esp+1ch+arg_8]
mov     [esp+1ch+var_c], 1
mov     ecx, [eax+4]
mov     esi, [eax+0ch]
sub     esi, ecx
mov     ebp, [eax+8]
mov     ebx, ebp
mov     [esp+1ch+y], ecx
mov     ecx, [eax]
sub     ebx, ecx
test    esi, esi
jle     loc_450cd9
test    ebx, ebx
jle     loc_450cd9
mov     edi, [esp+1ch+arg_c]
mov     eax, edi
cdq
sub     eax, edx
sar     eax, 1
add     eax, ebx
cdq
idiv    edi
mov     edi, eax
test    edi, edi
jnz     short loc_450bed
mov     edi, 1
mov     eax, edi
cdq
sub     eax, edx
sar     eax, 1
add     eax, ebx
lea     ebx, ds:0[edi*2]
cdq
idiv    ebx
mov     [esp+1ch+arg_c], eax
mov     eax, edi
imul    eax, [esp+1ch+arg_c]
sub     ebp, eax
lea     ebx, [ecx+eax]
cmp     ebp, ebx
jle     short loc_450c3e
mov     eax, [esp+1ch+y]
push    0cc0020h
mov     ecx, [esp+20h+hdcsrc]
push    eax
push    ebx
mov     eax, ebp
push    ecx
sub     eax, ebx
mov     ecx, [esp+2ch+hdc]
push    esi
push    eax
mov     eax, [esp+34h+y]
push    eax
push    ebx
push    ecx
call    sub_451a90
add     esp, 24h
mov     [esp+1ch+y], 1
sub     ebx, edi
cmp     [esp+1ch+arg_c], 1
jl      short loc_450ccd
mov     eax, [esp+1ch+y]
mov     ecx, [esp+1ch+arg_c]
mov     edx, [esp+1ch+arg_10]
push    eax
mov     eax, [esp+20h+var_8]
push    ecx
push    edx
push    eax
call    sub_4519f0
mov     [esp+2ch+var_c], eax
add     esp, 10h
test    eax, eax
jz      short loc_450ccd
mov     eax, [esp+1ch+arg_8]
push    0cc0020h
mov     ecx, [esp+20h+hdcsrc]
mov     edx, [esp+20h+hdc]
mov     eax, [eax+4]
push    eax
push    ebx
push    ecx
push    esi
push    edi
push    eax
push    ebx
push    edx
sub     ebx, edi
call    sub_451a90
mov     ecx, [esp+40h+arg_8]
mov     edx, [esp+40h+hdcsrc]
add     esp, 24h
mov     eax, [ecx+4]
mov     ecx, [esp+1ch+hdc]
push    0cc0020h
push    eax
push    ebp
push    edx
push    esi
push    edi
push    eax
push    ebp
push    ecx
add     ebp, edi
call    sub_451a90
inc     [esp+40h+y]
mov     eax, [esp+40h+y]
add     esp, 24h
cmp     [esp+1ch+arg_c], eax
jge     short loc_450c4f
mov     eax, [esp+1ch+var_c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+y1]
push    0cc0020h
mov     ecx, [esp+4+x1]
push    eax
mov     edx, [esp+8+hdcsrc]
push    ecx
mov     eax, [esp+0ch+cy]
push    edx
mov     ecx, [esp+10h+arg_c]
push    eax
mov     edx, [esp+14h+y]
push    ecx
mov     eax, [esp+18h+x]
push    edx
mov     ecx, [esp+1ch+hdc]
push    eax
push    ecx
call    sub_451a90
add     esp, 24h
retn
sub     esp, 34h
push    ebx
push    esi
mov     ebx, [esp+3ch+arg_24]
push    edi
mov     eax, [esp+40h+arg_20]
push    ebp
mov     ebp, [ebx]
push    offset dword_4ab588
push    eax
call    sub_495dd0
test    eax, eax
jnz     short loc_450d5c
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    28h
lea     eax, [esp+44h+var_34]
push    offset aactortype
mov     esi, [esp+48h+arg_18]
push    4
push    eax
push    3
push    esi
mov     edi, [esi]
call    dword ptr [edi+14h]
test    eax, eax
jnz     loc_450e30
cmp     dword ptr [esp+44h+var_34], 2
jnz     loc_450e30
lea     edi, [esp+44h+var_30]
xor     eax, eax
mov     ecx, 0bh
rep stosd
stosw
mov     eax, [esp+44h+arg_0]
mov     edi, [esp+44h+arg_14]
mov     dword ptr [esp+44h+var_30], eax
mov     [esp+44h+var_2c], edi
mov     ax, [ebx+4]
push    offset asymbolstring
and     ax, 4
push    20h
cmp     ax, 1
lea     ecx, [esp+4ch+var_24]
sbb     eax, eax
push    ecx
push    9
mov     ebx, [esi]
mov     [esp+54h+var_28], esi
push    esi
neg     eax
mov     [esp+58h+var_4], ax
call    dword ptr [ebx+14h]
test    eax, eax
jnz     short loc_450e32
lea     eax, [esp+44h+var_30]
push    eax
push    ebp
call    sub_48e920
add     esp, 8
test    eax, eax
jnz     short loc_450df8
mov     eax, 80040002h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    28h
push    esi
mov     eax, [esi]
call    dword ptr [eax+4]
cmp     [esp+44h+var_4], 0
jnz     short loc_450e24
call    sub_45d290
push    eax
call    sub_496b70
mov     esi, eax
test    esi, esi
jz      short loc_450e24
push    edi
mov     eax, [esi]
push    esi
call    dword ptr [eax+18h]
push    esi
mov     eax, [esi]
call    dword ptr [eax+8]
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    28h
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    28h
sub     esp, 8
push    esi
push    42h
push    72h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a84d0, eax
push    0
push    40h
push    offset dword_4a8490
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_450e74
mov     eax, 80040002h
pop     esi
add     esp, 8
retn
mov     [esp+0ch+var_8], offset dword_4a84b0
mov     word ptr [esp+0ch+var_4], 3
push    0
push    2eh
push    offset dword_4a84b0
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_450ea2
mov     eax, 80040002h
pop     esi
add     esp, 8
retn
mov     eax, [esp+0ch+var_4]
lea     ecx, [esp+0ch+var_8]
push    eax
push    ecx
push    offset sub_450d30
call    sub_45d2a0
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_450ec6
mov     eax, esi
pop     esi
add     esp, 8
retn
push    20000ch
push    offset dword_4a84b0
call    sub_48ecb0
add     esp, 8
push    offset dword_4a84b0
call    sub_4518b0
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 8
retn
cmp     ds:dword_4a84d0, 0
jz      short loc_450f3d
mov     eax, ds:dword_4a84d0
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_450f25
mov     eax, [eax+2]
test    eax, eax
jz      short loc_450f19
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, ds:dword_4a84d0
push    eax
call    ds:globalunlock
mov     eax, ds:dword_4a84d0
push    eax
call    sub_45ba00
mov     ds:dword_4a84d0, 0
add     esp, 4
push    offset dword_4a8490
call    sub_48e7d0
add     esp, 4
push    offset dword_4a84b0
call    sub_48e7d0
add     esp, 4
retn
sub     esp, 30h
xor     eax, eax
mov     ecx, 0bh
push    edi
lea     edi, [esp+34h+var_30]
push    20h
rep stosd
stosw
mov     eax, [esp+38h+arg_0]
lea     ecx, [esp+38h+var_24]
push    eax
push    ecx
call    sub_47f9f0
lea     ecx, [esp+40h+var_30]
add     esp, 0ch
push    20000ch
push    ecx
lea     ecx, [esp+3ch+var_30]
push    ecx
push    offset dword_4a84b0
call    sub_48ed40
add     esp, 10h
pop     edi
add     esp, 30h
retn
mov     ecx, [esp+arg_0]
sub     esp, 30h
lea     eax, [esp+30h+var_30]
push    eax
push    ecx
push    offset dword_4a84b0
call    sub_48ea00
add     esp, 0ch
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, [esp+30h+var_28]
add     esp, 30h
retn
mov     eax, ds:dword_4a84b0
retn
sub     esp, 4
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
xor     edi, edi
mov     ebx, [esp+14h+arg_4]
cmp     ebx, esi
jnz     short loc_451053
lea     eax, [esp+14h+var_4]
push    eax
call    sub_451920
add     esp, 4
cmp     eax, 1
jnz     loc_4510ad
mov     eax, [esp+14h+var_4]
mov     edi, [eax+6]
test    edi, edi
jle     short loc_45103d
mov     eax, [eax+2]
test    eax, eax
jz      short loc_451048
push    eax
call    sub_45bab0
add     esp, 4
mov     ebx, eax
call    sub_451950
jmp     short loc_4510b1
mov     ebx, [esp+14h+var_4]
call    sub_451950
jmp     short loc_4510b1
mov     ebx, [esp+14h+var_4]
call    sub_451950
jmp     short loc_4510b1
mov     eax, ebx
shr     eax, 10h
movsx   ecx, ax
shl     ecx, 6
mov     eax, dword_4ae1e0
mov     edx, [ecx+eax+4]
xor     ecx, ecx
mov     cl, bh
mov     ebp, [edx]
mov     eax, [ebp+ecx*4+0]
test    eax, eax
jz      short loc_451080
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
add     eax, [eax+ecx*4]
jmp     short loc_451089
push    ebx
call    sub_461250
add     esp, 4
mov     bp, [esp+14h+arg_8]
push    ebp
push    eax
call    sub_45c870
movzx   edi, ax
add     esp, 8
test    edi, edi
jle     short loc_4510ad
push    ebp
push    ebx
call    sub_4612e0
add     esp, 8
mov     ebx, eax
jmp     short loc_4510b1
mov     ebx, [esp+14h+var_4]
test    edi, edi
jle     short loc_4510d3
mov     eax, [esp+14h+arg_0]
push    edi
push    ebx
push    eax
call    sub_4510e0
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_4510d3
push    ebx
call    sub_45ba00
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 8
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+10h+arg_8]
cmp     edi, esi
jle     short loc_451166
lea     eax, [esp+10h+var_8]
push    eax
push    offset dword_4ab608
push    offset dword_4ab5f8
call    sub_45d290
push    eax
call    sub_496b00
mov     esi, eax
test    esi, esi
jnz     short loc_451166
lea     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+var_8]
push    eax
push    offset dword_4ab4a8
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
mov     esi, eax
test    esi, esi
jnz     short loc_45115c
mov     eax, [esp+10h+arg_4]
push    edi
mov     ecx, [esp+14h+var_8]
push    eax
push    0
push    edi
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+0ch]
mov     esi, eax
test    esi, esi
jnz     short loc_451152
mov     eax, [esp+10h+var_4]
push    eax
mov     eax, [esp+14h+arg_0]
push    eax
mov     esi, [eax]
call    dword ptr [esi+40h]
mov     esi, eax
mov     eax, [esp+10h+var_4]
push    eax
mov     edi, [eax]
call    dword ptr [edi+8]
mov     eax, [esp+10h+var_8]
push    eax
mov     edi, [eax]
call    dword ptr [edi+8]
mov     eax, esi
pop     edi
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 48h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
push    eax
call    sub_450fb0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_451196
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
lea     eax, [esp+58h+var_28]
push    offset atransitioncaps
push    4
mov     ebp, [ebx]
push    eax
push    8
push    ebx
call    dword ptr [ebp+14h]
mov     edi, dword ptr [esp+58h+var_28]
call    sub_45d290
and     edi, 4
push    eax
shr     edi, 2
call    sub_496b70
mov     [esp+58h+var_38], eax
test    eax, eax
jz      loc_451447
lea     eax, [esp+58h+var_34]
mov     ecx, [esp+58h+var_38]
push    eax
push    offset dword_4ab588
push    ebx
mov     eax, [ecx]
push    ecx
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_45143d
mov     ax, [esp+58h+arg_14]
mov     ecx, [esp+58h+arg_10]
add     ax, 2
mov     edx, [esp+58h+var_34]
push    eax
push    ecx
push    edx
call    sub_450ff0
add     esp, 0ch
test    eax, eax
jnz     loc_451433
lea     eax, [esp+58h+var_48]
mov     ecx, [esp+58h+var_34]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+50h]
test    eax, eax
jnz     loc_451433
lea     eax, [esp+58h+var_44]
push    eax
push    offset dword_4ab4e8
push    offset dword_4ab5d8
call    sub_45d290
push    eax
call    sub_496b00
test    eax, eax
jnz     loc_451429
lea     eax, [esp+58h+var_30]
mov     ecx, [esp+58h+var_44]
push    eax
push    offset dword_4ab5e8
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
test    eax, eax
jnz     loc_45141f
lea     eax, [esp+58h+var_14]
mov     ecx, [esp+58h+arg_8]
mov     dword ptr [eax], 0
push    1
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     edx, [esp+5ch+var_30]
push    0
mov     dword ptr [eax+10h], 0
lea     eax, [esp+60h+var_14]
mov     [esp+60h+var_10], ecx
mov     [esp+60h+var_14], 3
push    eax
push    edx
mov     eax, [edx]
call    dword ptr [eax+0ch]
lea     ecx, [esp+58h+var_40]
push    ecx
push    offset dword_4ab4e8
push    offset dword_4ab5d8
call    sub_45d290
push    eax
call    sub_496b00
test    eax, eax
jnz     loc_451415
lea     eax, [esp+58h+var_2c]
mov     ecx, [esp+58h+var_40]
push    eax
push    offset dword_4ab5e8
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
test    eax, eax
jnz     loc_45140b
lea     eax, [esp+58h+var_14]
mov     ecx, [esp+58h+arg_4]
mov     dword ptr [eax], 0
mov     edx, ds:frequency
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
lea     eax, [esp+58h+var_14]
push    1
mov     [esp+5ch+var_10], ecx
push    0
mov     ecx, [esp+60h+var_2c]
push    eax
mov     dword ptr [esp+64h+var_c], edx
push    ecx
mov     [esp+68h+var_14], 1
mov     eax, [ecx]
call    dword ptr [eax+0ch]
mov     ecx, [esp+58h+arg_c]
mov     edx, [ecx+4]
mov     eax, [ecx]
mov     ebx, [ecx+0ch]
mov     [esp+58h+var_24], edx
mov     ecx, [ecx+8]
lea     edx, [esp+58h+var_24]
mov     [esp+58h+var_20], eax
mov     [esp+58h+var_1c], ebx
mov     ebx, [esp+58h+arg_18]
mov     eax, [esp+58h+var_44]
mov     [esp+58h+var_18], ecx
push    ebx
mov     ecx, [esp+5ch+var_40]
push    edx
mov     edx, [esp+60h+var_48]
push    eax
mov     eax, [edx]
push    ecx
push    edx
call    dword ptr [eax+10h]
test    eax, eax
jnz     loc_451401
mov     esi, 0ffffffffh
call    sub_409e60
mov     ebp, eax
push    esi
mov     eax, [ebx]
push    eax
mov     ecx, [ebx+4]
push    ecx
push    ebp
call    sub_4519f0
add     esp, 10h
test    eax, eax
jz      short loc_4513d8
test    edi, edi
jz      short loc_4513a8
mov     esi, 0fffffffeh
call    sub_409e60
sub     eax, ebp
lea     ecx, [esp+58h+var_3c]
lea     edx, [esp+58h+var_24]
push    ecx
mov     ecx, [esp+5ch+var_40]
push    ebx
push    edx
mov     [ebx+0ch], eax
mov     eax, [esp+64h+var_44]
mov     edx, [esp+64h+var_48]
push    eax
push    ecx
push    edx
mov     eax, [edx]
call    dword ptr [eax+14h]
cmp     [esp+58h+var_3c], 0
jz      short loc_45138a
mov     esi, 1
call    sub_409e60
sub     eax, ebp
push    ebx
lea     ecx, [esp+5ch+var_24]
mov     edx, [esp+5ch+var_44]
push    ecx
mov     [ebx+0ch], eax
mov     eax, [esp+60h+var_40]
push    edx
mov     ecx, [esp+64h+var_48]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+18h]
mov     eax, [esp+58h+var_2c]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, [esp+58h+var_40]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, [esp+58h+var_30]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, [esp+58h+var_44]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, [esp+58h+var_48]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, [esp+58h+var_34]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, [esp+58h+var_38]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
sub     esp, 0ch
lea     eax, [esp+0ch+var_a]
push    esi
push    edi
push    eax
call    sub_45d6a0
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_4514f4
cmp     [esp+14h+var_a], 0
jz      short loc_4514f4
call    sub_450fe0
mov     edi, eax
push    4
mov     [esp+18h+var_8], offset dword_4a84b0
mov     [esp+18h+var_4], 4
lea     eax, [esp+18h+var_8]
push    eax
push    offset sub_450d30
call    sub_45d2a0
add     esp, 0ch
mov     esi, eax
test    esi, esi
jnz     short loc_4514f4
call    sub_45d290
push    eax
call    sub_496bb0
cmp     eax, 80040016h
jnz     short loc_4514cc
push    17h
call    sub_45c150
add     esp, 4
call    sub_450fe0
cmp     eax, edi
jle     short loc_4514f4
push    20000ch
push    offset dword_4a84b0
call    sub_48ecb0
add     esp, 8
push    offset dword_4a84b0
call    sub_4518b0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
add     esp, 0ch
retn
push    offset dword_4a8490
call    sub_48e800
add     esp, 4
call    sub_45d290
test    eax, eax
jnz     short loc_451519
xor     eax, eax
retn
jmp     sub_45d730
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     ebx, 1
push    ebp
xor     edi, edi
mov     esi, [esp+28h+arg_8]
mov     [esp+28h+var_14], edi
mov     word ptr [esp+28h+var_18+2], 417h
mov     ebp, [esp+28h+arg_0]
mov     [esi], edi
push    ebp
mov     [esi+4], edi
mov     word ptr [esp+2ch+var_18], 418h
mov     [esi+8], edi
mov     [esi+0ch], edi
mov     [esi+10h], edi
call    sub_462480
movsx   ecx, ax
add     esp, 4
dec     ecx
cmp     ecx, 0bh
ja      short def_451570
xor     eax, eax
mov     al, ds:byte_4516f4[ecx]
jmp     ds:jpt_451570[eax*4]
cmp     bp, 1
jnz     short loc_4515e6
mov     [esp+28h+var_14], 4070001h
jmp     short loc_4515e6
mov     [esp+28h+var_14], 4020001h
mov     edi, 2060308h
jmp     short loc_4515e6
mov     [esp+28h+var_14], 4000001h
mov     edi, 2010410h
jmp     short loc_4515e6
cmp     [esp+28h+arg_4], 43h
jnz     short loc_4515ca
mov     [esp+28h+var_14], 4060001h
mov     word ptr [esp+28h+var_18+2], 419h
mov     word ptr [esp+28h+var_18], 41ah
mov     edi, 2080308h
jmp     short loc_4515e6
mov     [esp+28h+var_14], 4020001h
mov     edi, 2080204h
jmp     short loc_4515e6
mov     [esp+28h+var_14], 4040001h
mov     edi, 2050780h
test    ebp, ebp
jz      loc_4516ce
test    edi, edi
jz      short loc_451605
push    edi
push    ebp
call    sub_462670
add     esp, 8
cmp     ax, 1
sbb     ebx, ebx
inc     ebx
jmp     short loc_45160a
mov     ebx, 1
mov     eax, [esp+28h+var_18+2]
push    0bff00000h
push    0
push    eax
push    ebp
call    sub_42ee00
fmul    ds:dbl_4ab270
add     esp, 10h
call    __ftol
push    0bff00000h
mov     [esi+4], eax
mov     eax, [esp+2ch+var_18]
push    0
push    eax
push    ebp
call    sub_42ee00
add     esp, 10h
call    __ftol
cmp     dword ptr [esi+4], 0
mov     [esi], eax
jl      short loc_451653
test    eax, eax
jge     short loc_4516b0
mov     eax, [esp+28h+var_14]
push    eax
push    ebp
call    sub_462670
movzx   eax, ax
add     esp, 8
cmp     eax, 0ffh
jge     short loc_45169b
lea     ecx, [esp+28h+var_14]
xor     ebx, ebx
push    ecx
push    eax
call    sub_451700
mov     bx, ax
add     esp, 8
and     ebx, 1
cmp     dword ptr [esi+4], 0
jge     short loc_45168e
mov     eax, [esp+28h+var_10]
mov     [esi+4], eax
cmp     dword ptr [esi], 0
jge     short loc_4516b0
mov     eax, [esp+28h+var_14]
mov     [esi], eax
jmp     short loc_4516b0
xor     ebx, ebx
cmp     [esi+4], ebx
jge     short loc_4516a5
mov     [esi+4], ebx
cmp     dword ptr [esi], 0
jge     short loc_4516b0
mov     dword ptr [esi], 0
cmp     dword ptr [esi+4], 7530h
jle     short loc_4516c0
mov     dword ptr [esi+4], 7530h
cmp     dword ptr [esi], 80h
jle     short loc_4516ce
mov     dword ptr [esi], 80h
mov     eax, ebx
pop     ebp
mov     dword ptr [esi+8], 1
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 10h
xor     eax, eax
push    esi
push    edi
mov     di, 0ceh
mov     esi, [esp+18h+arg_4]
mov     edx, [esp+18h+arg_0]
mov     [esi], eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
mov     [esi+10h], eax
lea     eax, [edx-1]
cmp     eax, 14h
ja      short def_451731
xor     ecx, ecx
mov     cl, ds:byte_451894[eax]
jmp     ds:jpt_451731[ecx*4]
xor     di, di
mov     ax, di
pop     edi
pop     esi
add     esp, 10h
retn
mov     di, 0cah
mov     dword ptr [esi], 49h
mov     ax, di
pop     edi
pop     esi
add     esp, 10h
retn
mov     ax, di
mov     dword ptr [esi], 70h
mov     dword ptr [esi+4], 7d0h
pop     edi
pop     esi
add     esp, 10h
retn
mov     ax, di
mov     dword ptr [esi], 40h
mov     dword ptr [esi+4], 1f4h
pop     edi
pop     esi
add     esp, 10h
retn
mov     ax, di
mov     dword ptr [esi], 40h
mov     dword ptr [esi+4], 1f4h
pop     edi
pop     esi
add     esp, 10h
retn
mov     ax, di
mov     dword ptr [esi], 41h
mov     dword ptr [esi+4], 1f4h
pop     edi
pop     esi
add     esp, 10h
retn
mov     di, 0cdh
push    0
mov     dword ptr [esi+4], 3e8h
cmp     edx, 0eh
jnz     short loc_4517e2
push    2bh
call    sub_484ba0
add     esp, 8
test    eax, eax
jnz     short loc_451801
lea     eax, [esp+18h+var_10]
push    eax
call    sub_491880
mov     eax, [esp+1ch+var_4]
add     esp, 4
jmp     short loc_451801
push    2ah
call    sub_484ba0
add     esp, 8
test    eax, eax
jnz     short loc_451801
lea     eax, [esp+18h+var_10]
push    eax
call    sub_491880
mov     eax, [esp+1ch+var_8]
add     esp, 4
cdq
mov     ecx, 0fffffff6h
idiv    ecx
add     eax, 80h
mov     [esi], eax
mov     ax, di
pop     edi
pop     esi
add     esp, 10h
retn
mov     ax, di
mov     dword ptr [esi], 30h
mov     dword ptr [esi+4], 1f4h
pop     edi
pop     esi
add     esp, 10h
retn
mov     ax, di
mov     dword ptr [esi], 60h
mov     dword ptr [esi+4], 1f4h
pop     edi
pop     esi
add     esp, 10h
retn
mov     dword ptr [esi+4], 1f4h
mov     di, 8eh
mov     ax, di
pop     edi
pop     esi
add     esp, 10h
retn
mov     di, 0cah
mov     ax, di
pop     edi
pop     esi
add     esp, 10h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
push    esi
mov     ebx, [esi]
call    sub_48f140
add     esp, 4
cmp     ebx, 2
jl      short loc_45190c
lea     edi, [ebx-1]
mov     eax, [esi+16h]
mov     cl, [esi+0ch]
mov     edx, [eax]
mov     eax, edi
shl     eax, cl
lea     ebp, [eax+edx]
lea     eax, [ebx-2]
shl     eax, cl
lea     ecx, [eax+edx+0ch]
lea     edx, [ebp+0ch]
push    ecx
push    edx
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_451905
cmp     word ptr [ebp+2ch], 0
jnz     short loc_4518fb
mov     ebx, edi
push    ebx
push    esi
call    sub_48ea50
add     esp, 8
mov     ebx, edi
cmp     edi, 2
jge     short loc_4518c8
push    esi
call    sub_48f1a0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     dword ptr [esi], 0
cmp     ds:dword_4a84d0, 0
jz      short loc_451942
mov     eax, ds:dword_4a84d0
push    eax
call    ds:globallock
mov     [esi], eax
cmp     dword ptr [esi], 1
pop     esi
sbb     eax, eax
inc     eax
retn
mov     eax, ds:dword_4a84d0
test    eax, eax
jz      short loc_451965
push    eax
call    ds:globalunlock
mov     eax, ds:dword_4a84d0
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
sub     esp, 40h
xor     eax, eax
mov     ecx, 10h
push    edi
lea     edi, [esp+44h+destination]
push    40h
rep stosd
mov     eax, [esp+48h+source]
lea     ecx, [esp+48h+destination]
push    eax
push    ecx
call    _strncpy
lea     ecx, [esp+50h+destination]
add     esp, 0ch
push    200000h
push    0
push    ecx
push    offset dword_4a8490
call    sub_48ed40
add     esp, 10h
test    eax, eax
jnz     short loc_4519e5
lea     eax, [esp+44h+destination]
push    eax
push    offset dword_4a8490
call    sub_48e920
add     esp, 8
push    200000h
push    offset dword_4a8490
call    sub_48ecb0
lea     eax, [esp+4ch+destination]
add     esp, 8
push    eax
push    18h
call    sub_45c150
add     esp, 8
pop     edi
add     esp, 40h
retn
push    ebx
push    esi
push    edi
mov     esi, 1
push    ebp
push    0
call    sub_488fb0
add     esp, 4
test    eax, eax
jz      short loc_451a09
xor     esi, esi
cmp     esi, 1
jnz     short loc_451a86
call    sub_43e170
mov     ebp, [esp+10h+arg_c]
cmp     ebp, 1
jl      short loc_451a86
mov     ecx, [esp+10h+arg_4]
test    ecx, ecx
jz      short loc_451a86
mov     eax, ebp
sub     edx, edx
imul    eax, ecx
div     [esp+10h+arg_8]
mov     ebx, [esp+10h+arg_0]
cmp     ebp, 1
lea     edi, [ebx+eax]
mov     eax, 0
jz      short loc_451a4d
call    sub_409e60
sub     eax, ds:dword_4a84d4
add     eax, eax
mov     ds:dword_4a84d4, eax
cmp     edi, eax
jbe     short loc_451a7c
call    sub_409e60
cmp     eax, ebx
jb      short loc_451a7c
sub     edi, ds:dword_4a84d4
call    sub_409e60
cmp     eax, edi
jnb     short loc_451a7c
call    sub_489290
call    sub_409e60
cmp     eax, edi
jb      short loc_451a6e
call    sub_409e60
mov     ds:dword_4a84d4, eax
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+rop]
mov     ecx, [esp+y1]
mov     edx, [esp+x1]
push    eax
mov     eax, [esp+4+hdcsrc]
push    ecx
mov     ecx, [esp+8+cy]
push    edx
mov     edx, [esp+0ch+arg_c]
push    eax
mov     eax, [esp+10h+y]
push    ecx
mov     ecx, [esp+14h+x]
push    edx
mov     edx, [esp+18h+hdc]
push    eax
push    ecx
push    edx
call    ds:bitblt
retn
sub     esp, 1ch
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
mov     edi, ds:createbitmap
mov     [esp+2ch+var_18], esi
movzx   ebx, si
inc     si
mov     eax, ebx
shl     eax, 4
add     eax, offset dword_4add18
push    eax
push    1
push    1
push    8
push    8
call    edi
push    eax
mov     ebp, eax
call    ds:createpatternbrush
mov     [esp+ebx*4+2ch+h], eax
push    ebp
call    ds:deleteobject
cmp     si, 4
jb      short loc_451ae3
call    sub_409e60
mov     edi, [esp+2ch+hdc]
mov     [esp+2ch+var_1c], eax
xor     bx, bx
mov     eax, [esp+2ch+h]
push    eax
push    edi
call    ds:selectobject
mov     esi, [esp+2ch+arg_8]
mov     [esp+2ch+var_14], eax
movzx   ebp, bx
mov     ecx, [esp+2ch+arg_c]
mov     edx, [esp+2ch+var_1c]
lea     eax, [ebp+1]
push    eax
push    4
push    ecx
push    edx
call    sub_4519f0
add     esp, 10h
test    eax, eax
jz      short loc_451b98
inc     bx
mov     eax, [esp+ebp*4+2ch+h]
push    eax
push    edi
call    ds:selectobject
mov     edx, [esi+4]
mov     ecx, [esi]
mov     eax, [esp+2ch+hdcsrc]
push    0ca0749h
push    edx
push    ecx
push    eax
mov     eax, [esi+0ch]
sub     eax, edx
push    eax
mov     eax, [esi+8]
sub     eax, ecx
push    eax
push    edx
push    ecx
push    edi
call    sub_451a90
add     esp, 24h
cmp     bx, 4
jb      short loc_451b3b
jmp     short loc_451ba0
mov     [esp+2ch+var_18], 1
xor     si, si
mov     eax, [esp+2ch+var_14]
push    eax
push    edi
call    ds:selectobject
movzx   eax, si
inc     si
mov     ecx, [esp+eax*4+2ch+h]
push    ecx
call    ds:deleteobject
cmp     si, 4
jb      short loc_451baf
cmp     [esp+2ch+var_18], 1
sbb     eax, eax
pop     ebp
neg     eax
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, [esp+14h+arg_0]
push    edi
call    sub_408e30
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_451c4b
push    esi
call    sub_470640
mov     [esp+18h+hmem], eax
add     esp, 4
test    eax, eax
jz      short loc_451c4b
mov     eax, esi
mov     ebx, [esp+14h+arg_4]
shr     eax, 10h
push    ebx
movsx   ecx, ax
mov     eax, [esp+18h+hmem]
push    edi
push    ecx
push    eax
call    sub_451c60
add     esp, 10h
mov     edi, eax
test    edi, edi
jz      short loc_451c37
mov     eax, edi
mov     [ebx], esi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    0
push    esi
call    sub_470920
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     edx, [esp+hmem]
mov     ecx, [esp+arg_4]
sub     esp, 10h
lea     eax, [esp+10h+rc]
push    esi
push    eax
push    ecx
push    edx
call    sub_46d5e0
mov     eax, [esp+20h+rc.top]
add     esp, 0ch
neg     eax
lea     ecx, [esp+14h+rc]
push    eax
mov     eax, [esp+18h+rc.left]
neg     eax
push    eax
push    ecx
call    ds:offsetrect
mov     eax, [esp+14h+hmem]
mov     edx, [esp+14h+arg_4]
mov     ecx, [esp+14h+arg_c]
lea     esi, [ecx+4]
add     ecx, 10h
mov     [esi], eax
mov     eax, [esp+14h+arg_8]
mov     [esi+4], edx
mov     esi, [esp+14h+rc.top]
lea     edx, [esp+14h+rc]
mov     [ecx-4], eax
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [ecx+4], esi
pop     esi
mov     [ecx+8], eax
mov     eax, 1
mov     [ecx+0ch], edx
add     esp, 10h
retn
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_8]
mov     esi, [esp+0ch+hdc]
lea     ebx, [edi+10h]
push    ebx
push    eax
push    esi
call    sub_46f340
add     esp, 0ch
mov     ecx, [edi+0ch]
add     edi, 4
push    0
push    ebx
push    0
push    ecx
mov     edx, [edi]
push    0
mov     eax, [edi+4]
push    esi
push    eax
push    edx
call    sub_46d7e0
add     esp, 20h
push    esi
call    sub_46f310
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     eax, [eax]
test    eax, eax
jz      short locret_451d45
push    0
push    eax
call    sub_470920
add     esp, 8
retn
push    esi
push    5
call    ds:getstockobject
mov     esi, [esp+4+hdc]
push    eax
push    esi
call    ds:selectobject
mov     ecx, [esp+4+arg_4]
mov     eax, [ecx+0ch]
mov     edx, [ecx+8]
push    eax
push    edx
mov     eax, [ecx+4]
mov     ecx, [ecx]
push    eax
push    ecx
push    esi
call    ds:rectangle
pop     esi
retn
lea     eax, [esp+left]
sub     esp, 8
push    ebx
push    esi
mov     ebx, [esp+10h+arg_4]
push    edi
push    ebp
push    eax
push    ebx
call    sub_452f60
add     esp, 8
mov     al, [ebx]
cmp     al, 1
jz      short loc_451db3
cmp     al, 3
jnz     short loc_451e01
cmp     word ptr [ebx+4], 0
jz      short loc_451e01
mov     ebp, [esp+18h+arg_18]
lea     eax, [esp+18h+var_8]
mov     esi, [esp+18h+hdc]
push    ebp
push    eax
push    ebx
push    esi
call    sub_453450
mov     ecx, [esp+28h+bottom]
mov     eax, [esp+28h+right]
mov     edx, [esp+28h+top]
add     esp, 10h
mov     edi, ds:rectangle
push    ecx
mov     ecx, [esp+1ch+left]
push    eax
push    edx
push    ecx
push    esi
call    edi
lea     ecx, [esp+18h+var_8]
push    ebp
push    ecx
push    ebx
push    esi
call    sub_4534a0
add     esp, 10h
jmp     short loc_451e1f
mov     ebp, [esp+18h+arg_18]
lea     eax, [esp+18h+var_8]
mov     esi, [esp+18h+hdc]
push    ebp
push    eax
push    ebx
push    esi
call    sub_453090
add     esp, 10h
mov     edi, ds:rectangle
mov     eax, [esp+18h+bottom]
mov     ecx, [esp+18h+right]
mov     edx, [esp+18h+top]
push    eax
mov     eax, [esp+1ch+left]
push    ecx
push    edx
push    eax
push    esi
call    edi
lea     ecx, [esp+18h+var_8]
push    ecx
push    esi
call    sub_453100
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_4]
push    edi
cmp     word ptr [esi+1ah], 0
push    ebp
jz      loc_451f07
cmp     word ptr [esi+4], 0
jz      loc_451f07
cmp     word ptr [esi+1eh], 1
jnz     loc_451f07
cmp     byte ptr [esi], 2
jnz     loc_451f07
lea     eax, [esp+18h+rc]
push    0ffffffffh
push    0ffffffffh
mov     ebp, ds:inflaterect
mov     word ptr [esi+1ah], 0
push    eax
call    ebp
mov     ebx, [esp+18h+arg_18]
mov     eax, [esp+18h+rc.bottom]
mov     ecx, [esp+18h+rc.right]
push    ebx
mov     edx, [esp+1ch+rc.top]
push    eax
mov     eax, [esp+20h+rc.left]
push    ecx
mov     edi, [esp+24h+hdc]
push    edx
push    eax
push    esi
push    edi
call    sub_451e50
lea     ecx, [esp+34h+rc]
add     esp, 1ch
push    1
push    1
push    ecx
call    ebp
mov     eax, [esp+18h+rc.bottom]
push    ebx
mov     ecx, [esp+1ch+rc.right]
push    eax
mov     edx, [esp+20h+rc.top]
push    ecx
mov     eax, [esp+24h+rc.left]
push    edx
mov     word ptr [esi+1ah], 1
mov     word ptr [esi+4], 0
push    eax
push    esi
push    edi
call    sub_451e50
add     esp, 1ch
mov     word ptr [esi+4], 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     eax, [esp+18h+rc]
push    eax
push    esi
call    sub_452f60
add     esp, 8
mov     al, [esi]
cmp     al, 1
jz      short loc_451f1f
cmp     al, 3
jnz     short loc_451f6d
cmp     word ptr [esi+4], 0
jz      short loc_451f6d
mov     ebx, [esp+18h+arg_18]
lea     eax, [esp+18h+var_8]
mov     edi, [esp+18h+hdc]
push    ebx
push    eax
push    esi
push    edi
call    sub_453450
mov     ecx, [esp+28h+rc.bottom]
mov     eax, [esp+28h+rc.right]
mov     edx, [esp+28h+rc.top]
add     esp, 10h
mov     ebp, ds:ellipse
push    ecx
mov     ecx, [esp+1ch+rc.left]
push    eax
push    edx
push    ecx
push    edi
call    ebp
lea     ecx, [esp+18h+var_8]
push    ebx
push    ecx
push    esi
push    edi
call    sub_4534a0
add     esp, 10h
jmp     short loc_451f8b
mov     ebx, [esp+18h+arg_18]
lea     eax, [esp+18h+var_8]
mov     edi, [esp+18h+hdc]
push    ebx
push    eax
push    esi
push    edi
call    sub_453090
add     esp, 10h
mov     ebp, ds:ellipse
mov     eax, [esp+18h+rc.bottom]
mov     ecx, [esp+18h+rc.right]
mov     edx, [esp+18h+rc.top]
push    eax
mov     eax, [esp+1ch+rc.left]
push    ecx
push    edx
push    eax
push    edi
call    ebp
lea     ecx, [esp+18h+var_8]
push    ecx
push    edi
call    sub_453100
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+18h+arg_4]
cmp     word ptr [edi+1ah], 0
jz      loc_452089
cmp     word ptr [edi+4], 0
jz      loc_452089
cmp     word ptr [edi+1eh], 1
jnz     loc_452089
cmp     byte ptr [edi], 2
jnz     loc_452089
lea     eax, [esp+18h+rc]
push    0ffffffffh
mov     word ptr [edi+1ah], 0
push    0ffffffffh
push    eax
call    ds:inflaterect
mov     ebx, [esp+18h+arg_20]
mov     eax, [esp+18h+height]
mov     ebp, [esp+18h+width]
push    ebx
mov     ecx, [esp+1ch+rc.bottom]
push    eax
mov     eax, [esp+20h+rc.right]
push    ebp
mov     edx, [esp+24h+rc.top]
push    ecx
mov     ecx, [esp+28h+rc.left]
push    eax
mov     esi, [esp+2ch+hdc]
push    edx
push    ecx
push    edi
push    esi
call    sub_451fc0
lea     ecx, [esp+3ch+rc]
add     esp, 24h
push    1
push    1
push    ecx
call    ds:inflaterect
mov     word ptr [edi+1ah], 1
mov     eax, [esp+18h+height]
push    ebx
mov     ecx, [esp+1ch+rc.bottom]
push    eax
mov     edx, [esp+20h+rc.right]
push    ebp
mov     eax, [esp+24h+rc.top]
push    ecx
mov     ecx, [esp+28h+rc.left]
push    edx
mov     word ptr [edi+4], 0
push    eax
push    ecx
push    edi
push    esi
call    sub_451fc0
add     esp, 24h
mov     word ptr [edi+4], 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     eax, [esp+18h+rc]
push    eax
push    edi
call    sub_452f60
add     esp, 8
mov     al, [edi]
cmp     al, 1
jz      short loc_4520a1
cmp     al, 3
jnz     short loc_4520f7
cmp     word ptr [edi+4], 0
jz      short loc_4520f7
mov     ebx, [esp+18h+arg_20]
lea     eax, [esp+18h+var_8]
mov     esi, [esp+18h+hdc]
push    ebx
push    eax
push    edi
push    esi
call    sub_453450
mov     ecx, [esp+28h+height]
mov     ebp, [esp+28h+width]
mov     eax, [esp+28h+rc.bottom]
add     esp, 10h
mov     edx, [esp+18h+rc.top]
push    ecx
mov     ecx, [esp+1ch+rc.right]
push    ebp
push    eax
push    ecx
mov     eax, [esp+28h+rc.left]
push    edx
push    eax
push    esi
call    ds:roundrect
lea     ecx, [esp+18h+var_8]
push    ebx
push    ecx
push    edi
push    esi
call    sub_4534a0
add     esp, 10h
jmp     short loc_452113
mov     ebx, [esp+18h+arg_20]
lea     eax, [esp+18h+var_8]
mov     esi, [esp+18h+hdc]
push    ebx
push    eax
push    edi
push    esi
call    sub_453090
mov     ebp, [esp+28h+width]
add     esp, 10h
mov     eax, [esp+18h+height]
mov     ecx, [esp+18h+rc.bottom]
mov     edx, [esp+18h+rc.right]
push    eax
mov     eax, [esp+1ch+rc.top]
push    ebp
push    ecx
push    edx
mov     ecx, [esp+28h+rc.left]
push    eax
push    ecx
push    esi
call    ds:roundrect
lea     ecx, [esp+18h+var_8]
push    ecx
push    esi
call    sub_453100
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+18h+arg_4]
cmp     word ptr [edi+4], 0
jz      short loc_4521b1
mov     bp, [edi+1ah]
mov     ebx, [esp+18h+arg_28]
mov     eax, [esp+18h+x4]
push    ebx
mov     ecx, [esp+1ch+y4]
mov     edx, [esp+1ch+x3]
mov     word ptr [edi+1ah], 0
push    ecx
push    eax
mov     eax, [esp+24h+y3]
mov     ecx, [esp+24h+y2]
push    eax
push    edx
mov     edx, [esp+2ch+x2]
push    ecx
mov     eax, [esp+30h+y1]
push    edx
mov     ecx, [esp+34h+x1]
push    eax
mov     esi, [esp+38h+hdc]
push    ecx
push    edi
push    esi
call    sub_452280
mov     [edi+1ah], bp
mov     ebp, [esp+44h+x3]
add     esp, 2ch
jmp     short loc_4521bd
mov     esi, [esp+18h+hdc]
mov     ebp, [esp+18h+x3]
mov     ebx, [esp+18h+arg_28]
lea     eax, [esp+18h+x1]
push    eax
push    edi
call    sub_452f60
add     esp, 8
mov     al, [edi]
cmp     al, 1
jz      short loc_4521d5
cmp     al, 3
jnz     short loc_452226
cmp     word ptr [edi+4], 0
jz      short loc_452226
lea     eax, [esp+18h+var_8]
push    ebx
push    eax
push    edi
push    esi
call    sub_453450
mov     eax, [esp+28h+y4]
mov     ecx, [esp+28h+x4]
mov     edx, [esp+28h+y3]
add     esp, 10h
push    eax
push    ecx
mov     eax, [esp+20h+y2]
push    edx
mov     ecx, [esp+24h+x2]
push    ebp
mov     edx, [esp+28h+y1]
push    eax
mov     eax, [esp+2ch+x1]
push    ecx
push    edx
push    eax
push    esi
call    ds:arc
lea     ecx, [esp+18h+var_8]
push    ebx
push    ecx
push    edi
push    esi
call    sub_4534a0
jmp     short loc_452233
lea     eax, [esp+18h+var_8]
push    ebx
push    eax
push    edi
push    esi
call    sub_453090
mov     eax, [esp+28h+y4]
mov     ecx, [esp+28h+x4]
mov     edx, [esp+28h+y3]
add     esp, 10h
push    eax
push    ecx
mov     eax, [esp+20h+y2]
push    edx
mov     ecx, [esp+24h+x2]
push    ebp
mov     edx, [esp+28h+y1]
push    eax
mov     eax, [esp+2ch+x1]
push    ecx
push    edx
push    eax
push    esi
call    ds:arc
lea     ecx, [esp+18h+var_8]
push    ecx
push    esi
call    sub_453100
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     eax, [esp+left]
sub     esp, 8
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+18h+arg_4]
push    eax
push    edi
call    sub_452f60
add     esp, 8
mov     al, [edi]
cmp     al, 1
jz      short loc_4522a3
cmp     al, 3
jnz     short loc_452303
cmp     word ptr [edi+4], 0
jz      short loc_452303
mov     ebx, [esp+18h+arg_28]
lea     eax, [esp+18h+var_8]
mov     esi, [esp+18h+hdc]
push    ebx
push    eax
push    edi
push    esi
call    sub_453450
mov     ecx, [esp+28h+yr2]
mov     eax, [esp+28h+xr2]
mov     edx, [esp+28h+yr1]
mov     ebp, [esp+28h+xr1]
add     esp, 10h
push    ecx
push    eax
mov     eax, [esp+20h+bottom]
push    edx
mov     ecx, [esp+24h+right]
push    ebp
mov     edx, [esp+28h+top]
push    eax
mov     eax, [esp+2ch+left]
push    ecx
push    edx
push    eax
push    esi
call    ds:pie
lea     ecx, [esp+18h+var_8]
push    ebx
push    ecx
push    edi
push    esi
call    sub_4534a0
add     esp, 10h
jmp     short loc_45231f
mov     ebx, [esp+18h+arg_28]
lea     eax, [esp+18h+var_8]
mov     esi, [esp+18h+hdc]
push    ebx
push    eax
push    edi
push    esi
call    sub_453090
mov     ebp, [esp+28h+xr1]
add     esp, 10h
mov     eax, [esp+18h+yr2]
mov     ecx, [esp+18h+xr2]
mov     edx, [esp+18h+yr1]
push    eax
mov     eax, [esp+1ch+bottom]
push    ecx
mov     ecx, [esp+20h+right]
push    edx
mov     edx, [esp+24h+top]
push    ebp
push    eax
push    ecx
mov     eax, [esp+30h+left]
push    edx
push    eax
push    esi
call    ds:pie
lea     ecx, [esp+18h+var_8]
push    ecx
push    esi
call    sub_453100
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 0ch
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+1ch+arg_4]
cmp     word ptr [edi+1ah], 0
jz      loc_45251b
mov     ebx, [esp+1ch+apt]
movsx   ebp, [esp+1ch+arg_c]
lea     eax, [ebx+ebp*8]
mov     ecx, [ebx]
cmp     [eax-8], ecx
jnz     short loc_452395
mov     eax, [eax-4]
cmp     [ebx+4], eax
jz      loc_45251f
mov     al, [edi]
cmp     al, 1
jz      loc_452452
cmp     al, 3
jz      loc_452452
cmp     word ptr [edi+4], 0
jz      short loc_4523fe
mov     eax, [esp+1ch+arg_10]
lea     ecx, [esp+1ch+var_8]
mov     esi, [esp+1ch+hdc]
push    eax
mov     word ptr [edi+1ah], 0
push    ecx
push    edi
push    esi
call    sub_453090
add     esp, 10h
push    ebp
push    ebx
push    esi
call    ds:polygon
lea     ecx, [esp+1ch+var_8]
push    ecx
push    esi
call    sub_453100
mov     eax, [esp+24h+arg_10]
add     esp, 8
mov     word ptr [edi+1ah], 1
push    eax
push    edi
push    esi
call    sub_453140
mov     [esp+28h+ho], eax
add     esp, 0ch
jmp     short loc_452416
mov     eax, [esp+1ch+arg_10]
lea     ecx, [esp+1ch+var_8]
mov     esi, [esp+1ch+hdc]
push    eax
push    ecx
push    edi
push    esi
call    sub_453090
add     esp, 10h
push    ebp
push    ebx
push    esi
call    ds:polyline
cmp     word ptr [edi+4], 0
jz      short loc_45243c
mov     eax, [esp+1ch+ho]
push    eax
push    esi
call    sub_4531d0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
lea     eax, [esp+1ch+var_8]
push    eax
push    esi
call    sub_453100
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
movsx   eax, word ptr [edi+4]
mov     [esp+1ch+var_c], eax
test    eax, eax
jz      short loc_4524b8
mov     eax, [esp+1ch+arg_10]
lea     ecx, [esp+1ch+var_8]
mov     esi, [esp+1ch+hdc]
push    eax
mov     word ptr [edi+1ah], 0
push    ecx
push    edi
push    esi
call    sub_453450
add     esp, 10h
push    ebp
push    ebx
push    esi
call    ds:polygon
mov     ecx, [esp+1ch+arg_10]
lea     eax, [esp+1ch+var_8]
push    ecx
push    eax
push    edi
push    esi
call    sub_4534a0
add     esp, 10h
push    ebp
push    ebx
push    esi
call    ds:polygon
lea     ecx, [esp+1ch+var_8]
push    ecx
push    esi
call    sub_453100
mov     word ptr [edi+1ah], 1
add     esp, 8
jmp     short loc_4524bc
mov     esi, [esp+1ch+hdc]
mov     eax, [esp+1ch+arg_10]
lea     ecx, [esp+1ch+var_8]
mov     word ptr [edi+4], 0
push    eax
push    ecx
push    edi
push    esi
call    sub_453450
add     esp, 10h
push    ebp
push    ebx
push    esi
call    ds:polyline
mov     ecx, [esp+1ch+arg_10]
lea     edx, [esp+1ch+var_8]
push    ecx
push    edx
push    edi
push    esi
call    sub_4534a0
add     esp, 10h
push    ebp
push    ebx
push    esi
call    ds:polyline
lea     ecx, [esp+1ch+var_8]
push    ecx
push    esi
call    sub_453100
mov     cx, word ptr [esp+24h+var_c]
add     esp, 8
mov     [edi+4], cx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     ebx, [esp+1ch+apt]
mov     al, [edi]
cmp     al, 1
jz      short loc_452529
cmp     al, 3
jnz     short loc_452569
cmp     word ptr [edi+4], 0
jz      short loc_452569
mov     eax, [esp+1ch+arg_10]
lea     ecx, [esp+1ch+var_8]
mov     esi, [esp+1ch+hdc]
push    eax
push    ecx
push    edi
push    esi
call    sub_453450
movsx   ecx, [esp+2ch+arg_c]
add     esp, 10h
push    ecx
push    ebx
push    esi
call    ds:polygon
mov     eax, [esp+1ch+arg_10]
lea     ecx, [esp+1ch+var_8]
push    eax
push    ecx
push    edi
push    esi
call    sub_4534a0
jmp     short loc_45257e
mov     eax, [esp+1ch+arg_10]
lea     ecx, [esp+1ch+var_8]
mov     esi, [esp+1ch+hdc]
push    eax
push    ecx
push    edi
push    esi
call    sub_453090
movsx   eax, [esp+2ch+arg_c]
add     esp, 10h
push    eax
push    ebx
push    esi
call    ds:polygon
lea     eax, [esp+1ch+var_8]
push    eax
push    esi
call    sub_453100
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 0c8h
xor     eax, eax
push    ebx
push    esi
mov     esi, [esp+0d0h+arg_4]
push    edi
cmp     [esi+1ah], ax
push    ebp
jz      loc_452dc4
mov     di, [esi+1ch]
test    di, di
jz      loc_452dc4
cmp     [esi+1eh], ax
jz      loc_452dc4
mov     [esp+0d8h+var_b0], eax
mov     [esp+0d8h+var_ac], eax
mov     [esp+0d8h+var_b8], eax
mov     [esp+0d8h+var_b4], eax
cmp     [esi+3], al
jz      loc_452997
mov     eax, [esp+0d8h+arg_10]
sub     eax, [esp+0d8h+arg_8]
mov     ebx, [esp+0d8h+arg_14]
cdq
mov     [esp+0d8h+var_c8], eax
xor     eax, edx
sub     eax, edx
mov     [esp+0d8h+var_30], eax
mov     eax, ebx
fild    [esp+0d8h+var_30]
sub     eax, [esp+0d8h+arg_c]
cdq
mov     [esp+0d8h+dy], eax
xor     eax, edx
sub     eax, edx
mov     [esp+0d8h+var_30], eax
fild    [esp+0d8h+var_30]
fmul    st, st
fxch    st(1)
fmul    st, st
faddp   st(1), st
fsqrt
fadd    ds:dbl_4ab278
call    __ftol
movsx   ecx, di
cmp     ecx, 1
jz      short loc_452675
cmp     ecx, 2
jz      short loc_45267c
lea     edi, [ecx+ecx*4+14h]
sar     edi, 1
dec     edi
jmp     short loc_452681
mov     edi, 0ah
jmp     short loc_452681
mov     edi, 0dh
cmp     byte ptr [esi+3], 3
jnz     short loc_452699
lea     ecx, ds:0[edi*2]
cmp     ecx, eax
mov     eax, 1
jl      short loc_4526a4
jmp     short loc_4526a2
cmp     edi, eax
mov     eax, 1
jl      short loc_4526a4
xor     eax, eax
test    eax, eax
jz      loc_45299e
mov     eax, [esp+0d8h+arg_10]
mov     ecx, [esp+0d8h+arg_14]
mov     edx, [esp+0d8h+arg_8]
push    ecx
push    eax
mov     eax, [esp+0e0h+arg_c]
push    eax
push    edx
call    sub_452dd0
add     esp, 10h
lea     eax, ds:0[edi*8]
sub     eax, edi
mov     ecx, 0ah
cdq
idiv    ecx
mov     ebp, eax
test    ebp, ebp
jle     short loc_4526fb
lea     eax, [esp+0d8h+var_c0]
push    eax
call    sub_452ed0
add     esp, 4
dec     ebp
jnz     short loc_4526eb
fild    [esp+0d8h+dy]
fild    [esp+0d8h+var_c8]
mov     eax, [esp+0d8h+arg_8]
mov     ebp, [esp+0d8h+arg_c]
inc     edi
sub     [esp+0d8h+var_c0], eax
pushf
cmp     dword_4af150, 0
jnz     short loc_452724
fpatan
jmp     short loc_452729
call    unknown_libname_22
popf
mov     [esp+0d8h+var_98], edi
sub     [esp+0d8h+var_bc], ebp
fild    [esp+0d8h+var_98]
fld     st(1)
fcos
fmul    st, st(1)
fadd    ds:dbl_4ab278
call    __ftol
fld     st(1)
fsin
mov     ebp, eax
fmul    st, st(1)
fadd    ds:dbl_4ab278
call    __ftol
fmul    ds:dbl_4ab280
mov     [esp+0d8h+var_a0], eax
call    __ftol
fsub    ds:dbl_4ab288
mov     [esp+0d8h+var_98], eax
fild    [esp+0d8h+var_98]
fld     st(1)
fcos
fmul    st, st(1)
call    __ftol
mov     edi, eax
fxch    st(1)
fsin
fmulp   st(1), st
call    __ftol
mov     ecx, ebp
sub     ecx, edi
add     edi, ebp
mov     ebp, [esp+0d8h+var_a0]
mov     [esp+0d8h+var_98], ecx
mov     ecx, [esp+0d8h+var_a0]
add     ebp, eax
sub     ecx, eax
mov     al, [esi]
mov     [esp+0d8h+var_94], ecx
mov     byte ptr [esp+0d8h+var_30], al
cmp     al, 1
jnz     short loc_4527be
mov     byte ptr [esp+0d8h+var_30], 4
xor     eax, eax
mov     ecx, [esi+20h]
mov     [esp+0d8h+var_16], ax
mov     edx, dword_4add88
mov     [esp+0d8h+var_2c], 1
mov     [esp+0d8h+var_2a], ecx
mov     [esp+0d8h+bottom], eax
mov     eax, dword_4add8c
mov     [esp+0d8h+var_1e], edx
mov     [esp+0d8h+var_1a], eax
mov     al, [esi+3]
cmp     al, 1
jz      short loc_45280b
cmp     al, 3
jnz     loc_4528c3
mov     eax, [esp+0d8h+var_98]
add     eax, [esp+0d8h+arg_8]
mov     [esp+0d8h+var_a0], eax
mov     eax, [esp+0d8h+var_94]
add     eax, [esp+0d8h+arg_c]
mov     [esp+0d8h+var_9c], eax
mov     eax, [esp+0d8h+arg_8]
add     eax, edi
mov     edx, [esp+0d8h+arg_8]
mov     ecx, [esp+0d8h+arg_c]
mov     [esp+0d8h+var_a8], eax
mov     eax, [esp+0d8h+arg_c]
mov     [esp+0d8h+var_80.x], edx
add     eax, ebp
mov     edx, [esp+0d8h+var_9c]
mov     [esp+0d8h+var_a4], eax
mov     [esp+0d8h+var_80.y], ecx
mov     eax, [esp+0d8h+var_a0]
mov     ecx, [esp+0d8h+var_a4]
mov     [esp+0d8h+var_78], eax
mov     eax, [esp+0d8h+var_a8]
mov     [esp+0d8h+var_74], edx
mov     edx, [esp+0d8h+arg_8]
mov     [esp+0d8h+var_70], eax
push    0
mov     eax, [esp+0dch+arg_c]
push    4
mov     [esp+0e0h+var_6c], ecx
lea     ecx, [esp+0e0h+var_80]
mov     [esp+0e0h+var_68], edx
push    ecx
lea     edx, [esp+0e4h+var_30]
mov     [esp+0e4h+var_64], eax
mov     eax, [esp+0e4h+hdc]
push    edx
push    eax
call    sub_452360
mov     edx, [esp+0ech+var_c0]
mov     ecx, [esp+0ech+var_bc]
mov     [esp+0ech+var_b0], edx
mov     [esp+0ech+var_ac], ecx
add     esp, 14h
mov     al, [esi+3]
cmp     al, 2
jz      short loc_4528d2
cmp     al, 3
jnz     loc_45299e
mov     eax, [esp+0d8h+dy]
mov     ecx, [esp+0d8h+var_c8]
lea     edx, [esp+0d8h+rc]
push    eax
push    ecx
push    edx
call    ds:offsetrect
mov     eax, [esp+0d8h+arg_10]
sub     eax, [esp+0d8h+var_98]
mov     [esp+0d8h+var_a0], eax
mov     eax, ebx
sub     eax, [esp+0d8h+var_94]
mov     [esp+0d8h+var_9c], eax
mov     eax, [esp+0d8h+arg_10]
sub     eax, edi
mov     ecx, [esp+0d8h+arg_14]
mov     [esp+0d8h+var_a8], eax
mov     eax, ebx
sub     eax, ebp
mov     edx, [esp+0d8h+var_a0]
mov     [esp+0d8h+var_a4], eax
mov     eax, [esp+0d8h+arg_10]
mov     ebp, [esp+0d8h+var_a8]
mov     [esp+0d8h+var_80.x], eax
mov     eax, [esp+0d8h+var_9c]
mov     [esp+0d8h+var_80.y], ecx
mov     ecx, [esp+0d8h+var_a4]
mov     [esp+0d8h+var_78], edx
mov     edx, [esp+0d8h+arg_14]
mov     [esp+0d8h+var_74], eax
mov     eax, [esp+0d8h+arg_10]
push    0
mov     [esp+0dch+var_70], ebp
push    4
mov     [esp+0e0h+var_6c], ecx
lea     ecx, [esp+0e0h+var_80]
mov     [esp+0e0h+var_68], eax
push    ecx
lea     eax, [esp+0e4h+var_30]
mov     [esp+0e4h+var_64], edx
mov     edx, [esp+0e4h+hdc]
push    eax
push    edx
call    sub_452360
mov     edx, [esp+0ech+var_c0]
mov     ecx, [esp+0ech+var_bc]
mov     [esp+0ech+var_b8], edx
mov     [esp+0ech+var_b4], ecx
add     esp, 14h
jmp     short loc_45299e
mov     ebx, [esp+0d8h+arg_14]
mov     eax, [esp+0d8h+arg_10]
cmp     [esp+0d8h+arg_8], eax
jz      loc_452ccf
cmp     [esp+0d8h+arg_c], ebx
jz      loc_452ccf
mov     cx, [esi+1ch]
cmp     cx, 1
jnz     loc_452a97
mov     eax, [esp+0d8h+arg_18]
mov     ecx, [esp+0d8h+hdc]
push    eax
push    esi
push    ecx
call    sub_453140
add     esp, 0ch
mov     ebp, eax
mov     al, [esi]
mov     ecx, [esp+0d8h+hdc]
sub     al, 2
cmp     al, 1
sbb     eax, eax
and     eax, 0fffffffah
add     eax, 0dh
push    eax
push    ecx
call    ds:setrop2
mov     eax, [esp+0d8h+var_ac]
push    0
add     eax, [esp+0dch+arg_c]
mov     ecx, [esp+0dch+hdc]
push    eax
mov     eax, [esp+0e0h+var_b0]
add     eax, [esp+0e0h+arg_8]
push    eax
push    ecx
call    ds:movetoex
sub     ebx, [esp+0d8h+var_b4]
mov     edi, [esp+0d8h+arg_10]
sub     edi, [esp+0d8h+var_b8]
push    ebx
mov     eax, [esp+0dch+hdc]
push    edi
push    eax
call    ds:lineto
mov     ecx, [esp+0d8h+hdc]
push    ebp
push    ecx
call    sub_4531d0
mov     edx, [esp+0e0h+arg_18]
add     esp, 8
mov     cl, [esi+3]
push    edx
mov     byte ptr [esp+0dch+var_80.x], cl
push    ebx
mov     eax, [esp+0e0h+hdc]
push    edi
mov     byte ptr [esi+3], 0
push    ebx
push    edi
push    esi
push    eax
call    sub_4525b0
mov     al, byte ptr [esp+0f4h+var_80.x]
add     esp, 1ch
mov     [esi+3], al
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
mov     eax, [esp+0d8h+var_b0]
mov     ebp, [esp+0d8h+var_ac]
mov     edx, [esp+0d8h+var_b8]
sub     ebx, [esp+0d8h+var_b4]
add     [esp+0d8h+arg_8], eax
add     [esp+0d8h+arg_c], ebp
sub     [esp+0d8h+arg_10], edx
mov     eax, [esp+0d8h+arg_10]
cmp     eax, [esp+0d8h+arg_8]
jge     short loc_452b19
mov     eax, [esp+0d8h+arg_8]
mov     edx, [esp+0d8h+arg_c]
mov     [esp+0d8h+arg_14], ebx
mov     [esp+0d8h+apt.x], eax
mov     ebx, [esp+0d8h+arg_10]
mov     eax, [esp+0d8h+arg_14]
mov     [esp+0d8h+apt.y], edx
mov     [esp+0d8h+arg_8], ebx
mov     ebp, [esp+0d8h+apt.x]
mov     ebx, edx
mov     [esp+0d8h+arg_c], eax
mov     [esp+0d8h+arg_10], ebp
mov     [esp+0d8h+arg_14], edx
movsx   eax, cx
mov     di, [esi+1eh]
cdq
sub     eax, edx
sar     eax, 1
movsx   ebp, ax
movsx   eax, di
cdq
sub     eax, edx
sar     eax, 1
sub     [esp+0d8h+arg_8], ebp
sub     [esp+0d8h+arg_10], ebp
movsx   eax, ax
sub     ebx, eax
sub     [esp+0d8h+arg_c], eax
cmp     [esp+0d8h+arg_c], ebx
jge     loc_452beb
mov     eax, [esp+0d8h+arg_8]
mov     edx, [esp+0d8h+arg_c]
mov     [esp+0d8h+var_58], eax
mov     [esp+0d8h+apt.x], eax
mov     eax, [esp+0d8h+arg_c]
mov     [esp+0d8h+var_54], edx
movsx   edx, di
add     eax, edx
mov     ebp, [esp+0d8h+arg_c]
dec     eax
mov     [esp+0d8h+var_4c], ebp
mov     [esp+0d8h+apt.y], eax
add     edx, ebx
movsx   eax, cx
mov     ecx, [esp+0d8h+arg_8]
mov     [esp+0d8h+var_3c], edx
add     ecx, eax
mov     [esp+0d8h+var_44], ebx
add     eax, [esp+0d8h+arg_10]
mov     [esp+0d8h+var_50], ecx
mov     [esp+0d8h+var_40], eax
mov     [esp+0d8h+var_48], eax
mov     eax, [esp+0d8h+arg_10]
mov     [esp+0d8h+var_34], edx
inc     eax
mov     [esp+0d8h+var_38], eax
jmp     loc_452c7b
mov     eax, [esp+0d8h+arg_8]
mov     edx, [esp+0d8h+arg_c]
mov     [esp+0d8h+arg_14], ebx
mov     [esp+0d8h+var_50], eax
mov     [esp+0d8h+var_4c], edx
mov     [esp+0d8h+var_58], eax
movsx   edx, di
movsx   ecx, cx
mov     eax, [esp+0d8h+arg_c]
add     eax, edx
mov     [esp+0d8h+var_54], eax
mov     eax, [esp+0d8h+arg_8]
add     eax, ecx
mov     ebp, [esp+0d8h+var_54]
dec     eax
mov     [esp+0d8h+apt.y], ebp
mov     [esp+0d8h+apt.x], eax
mov     [esp+0d8h+var_3c], ebx
mov     eax, [esp+0d8h+arg_10]
add     ecx, eax
mov     [esp+0d8h+var_48], eax
lea     eax, [edx+ebx]
mov     [esp+0d8h+var_44], ebx
dec     eax
mov     [esp+0d8h+var_40], ecx
mov     [esp+0d8h+var_38], ecx
mov     [esp+0d8h+var_34], eax
mov     eax, [esp+0d8h+arg_18]
mov     ecx, [esp+0d8h+hdc]
push    eax
push    esi
push    ecx
call    sub_4533a0
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      loc_452dc4
lea     eax, [esp+0d8h+apt]
push    6
mov     ecx, [esp+0dch+hdc]
push    eax
push    ecx
call    ds:polygon
mov     ecx, [esp+0d8h+hdc]
push    esi
push    ecx
call    sub_453430
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
mov     eax, [esp+0d8h+var_b0]
mov     ebp, [esp+0d8h+var_ac]
mov     ecx, [esp+0d8h+var_b8]
sub     ebx, [esp+0d8h+var_b4]
add     [esp+0d8h+arg_8], eax
add     [esp+0d8h+arg_c], ebp
mov     edi, [esp+0d8h+arg_c]
sub     [esp+0d8h+arg_10], ecx
cmp     edi, ebx
jl      short loc_452d01
mov     edi, ebx
movsx   eax, word ptr [esi+1eh]
mov     cx, [esi+1ch]
mov     ebp, [esp+0d8h+arg_8]
cdq
sub     eax, edx
sar     eax, 1
movsx   eax, ax
sub     edi, eax
mov     eax, [esp+0d8h+arg_10]
cmp     ebp, eax
jl      short loc_452d28
mov     ebp, eax
movsx   eax, cx
cdq
sub     eax, edx
sar     eax, 1
movsx   eax, ax
sub     ebp, eax
movsx   eax, word ptr [esi+1eh]
inc     eax
cdq
sub     eax, edx
mov     edx, [esp+0d8h+arg_c]
sar     eax, 1
cmp     edx, ebx
jg      short loc_452d4e
mov     edx, ebx
lea     eax, [eax+edx+1]
mov     [esp+0d8h+bottom+2], eax
movsx   eax, cx
inc     eax
mov     ecx, [esp+0d8h+arg_8]
cdq
sub     eax, edx
mov     edx, [esp+0d8h+arg_10]
sar     eax, 1
cmp     ecx, edx
jg      short loc_452d77
mov     ecx, edx
lea     ebx, [eax+ecx+1]
mov     eax, [esp+0d8h+arg_18]
mov     ecx, [esp+0d8h+hdc]
push    eax
push    esi
push    ecx
call    sub_4533a0
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_452dc4
mov     eax, [esp+0d8h+bottom+2]
mov     ecx, [esp+0d8h+hdc]
push    eax
push    ebx
push    edi
push    ebp
push    ecx
call    ds:rectangle
mov     ecx, [esp+0d8h+hdc]
push    esi
push    ecx
call    sub_453430
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
mov     eax, [esp+arg_0]
push    esi
mov     edx, [esp+4+arg_4]
mov     ecx, [esp+4+arg_8]
mov     esi, [esp+4+arg_c]
mov     ds:dword_4a84e0, eax
mov     ds:dword_4a84e4, edx
mov     ds:dword_4a84e8, ecx
sub     ecx, eax
mov     ds:dword_4a84ec, esi
sub     esi, edx
xor     eax, eax
mov     ds:dword_4a84f4, ecx
mov     ds:dword_4a84f8, esi
mov     ecx, 1
mov     ds:dword_4a8500, eax
mov     ds:dword_4a8504, ecx
mov     ds:dword_4a8508, ecx
mov     ds:dword_4a850c, eax
cmp     ds:dword_4a84f4, eax
jge     short loc_452e43
mov     ds:dword_4a8508, 0ffffffffh
mov     eax, ds:dword_4a84f4
neg     eax
mov     ds:dword_4a84f4, eax
cmp     ds:dword_4a84f8, 0
jge     short loc_452e62
mov     ds:dword_4a8504, 0ffffffffh
mov     eax, ds:dword_4a84f8
neg     eax
mov     ds:dword_4a84f8, eax
mov     eax, ds:dword_4a84f8
cmp     ds:dword_4a84f4, eax
jge     short loc_452eae
mov     eax, ds:dword_4a84f4
mov     ecx, ds:dword_4a84f8
mov     edx, ds:dword_4a8508
mov     ds:dword_4a84f0, eax
mov     ds:dword_4a84f4, ecx
mov     ds:dword_4a84f8, eax
xor     eax, eax
mov     ecx, ds:dword_4a8504
mov     ds:dword_4a8500, edx
mov     ds:dword_4a8508, eax
mov     ds:dword_4a850c, ecx
mov     ds:dword_4a8504, eax
mov     eax, ds:dword_4a84f4
pop     esi
mov     ds:dword_4a84f0, 1
sar     eax, 1
mov     ds:dword_4a84fc, eax
retn
mov     eax, ds:dword_4a84f0
cmp     ds:dword_4a84f4, eax
mov     eax, 1
jge     short loc_452ee4
xor     eax, eax
mov     ecx, ds:dword_4a8508
mov     edx, ds:dword_4a850c
add     ds:dword_4a84e0, ecx
add     ds:dword_4a84e4, edx
mov     ecx, ds:dword_4a84f8
inc     ds:dword_4a84f0
add     ds:dword_4a84fc, ecx
mov     edx, ds:dword_4a84fc
cmp     ds:dword_4a84f4, edx
jge     short loc_452f40
mov     ecx, ds:dword_4a84f4
mov     edx, ds:dword_4a8500
sub     ds:dword_4a84fc, ecx
add     ds:dword_4a84e0, edx
mov     ecx, ds:dword_4a8504
add     ds:dword_4a84e4, ecx
mov     ecx, ds:dword_4a84e0
mov     edx, [esp+arg_0]
mov     [edx], ecx
mov     ecx, ds:dword_4a84e4
mov     [edx+4], ecx
retn
mov     eax, [esp+arg_0]
cmp     word ptr [eax+1ah], 0
jz      short loc_452f71
movsx   eax, word ptr [eax+1eh]
jmp     short loc_452f73
xor     eax, eax
mov     ecx, [esp+lprc]
test    al, 1
jnz     short loc_452f81
inc     dword ptr [ecx+8]
inc     dword ptr [ecx+0ch]
cdq
sub     eax, edx
sar     eax, 1
neg     eax
push    eax
push    eax
push    ecx
call    ds:inflaterect
retn
push    ebx
mov     edx, 1
push    esi
xor     ebx, ebx
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
mov     byte ptr [esi], 4
mov     [esi+4], dx
mov     [esi+1], dl
mov     eax, 0ffffffh
mov     [esi+2], bl
lea     ebp, [esi+12h]
mov     [esi+3], bl
mov     [esi+6], ebx
mov     [esi+0ah], eax
mov     [esi+0eh], ebx
mov     ecx, dword_4add88
mov     edi, dword_4add8c
mov     [esi+1ah], dx
mov     [ebp+0], ecx
mov     [esi+1ch], dx
mov     [ebp+4], edi
mov     [esi+1eh], dx
mov     [esi+20h], ebx
mov     [esi+24h], eax
add     esi, 28h
mov     eax, dword_4add88
mov     edi, dword_4add8c
pop     ebp
mov     [esi], eax
mov     [esi+4], edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_c]
push    ebx
mov     ecx, [esp+4+arg_10]
push    esi
mov     esi, [esp+8+lprc]
push    edi
mov     edx, [esp+0ch+arg_4]
push    esi
push    ecx
push    eax
mov     eax, [esp+18h+arg_8]
push    eax
push    edx
call    sub_473c60
mov     ebx, [esp+20h+arg_14]
add     esp, 14h
mov     eax, ebx
mov     edi, ds:inflaterect
cdq
sub     eax, edx
sar     eax, 1
push    eax
push    eax
push    esi
call    edi
test    bl, 1
jz      short loc_453056
inc     dword ptr [esi+8]
inc     dword ptr [esi+0ch]
cmp     [esp+0ch+arg_18], 0
jz      short loc_453080
lea     eax, [ebx-1]
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, ebx
lea     eax, [eax+eax*4+14h]
cdq
and     edx, 3
add     eax, edx
sar     eax, 2
push    eax
push    eax
push    esi
call    edi
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     ebx, [esp+0ch+hdc]
push    ebp
mov     ebp, [esp+10h+arg_c]
push    ebp
push    esi
push    ebx
call    sub_453140
mov     edi, [esp+1ch+arg_8]
add     esp, 0ch
push    ebp
mov     [edi+4], eax
push    esi
push    ebx
call    sub_453200
add     esp, 0ch
mov     [edi], eax
movsx   eax, byte ptr [esi]
cmp     eax, 4
ja      short def_4530c7
jmp     ds:jpt_4530c7[eax*4]
push    0dh
push    ebx
call    ds:setrop2
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    7
push    ebx
call    ds:setrop2
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+hdc]
mov     eax, [edi+4]
push    eax
push    esi
call    sub_4531d0
add     esp, 8
mov     ecx, [edi]
mov     dword ptr [edi+4], 0
push    ecx
push    esi
call    sub_453370
add     esp, 8
mov     dword ptr [edi], 0
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_4]
push    esi
cmp     word ptr [ecx+1ah], 0
jz      short loc_4531a5
mov     dx, [ecx+1ch]
test    dx, dx
jle     short loc_4531a5
cmp     word ptr [ecx+1eh], 0
jle     short loc_4531a5
mov     al, [ecx]
cmp     al, 3
jnz     short loc_45316d
mov     eax, [esp+4+arg_8]
or      eax, 2000000h
jmp     short loc_453194
cmp     al, 2
jz      short loc_45318f
mov     eax, dword_4add80
cmp     [ecx+28h], eax
jnz     short loc_453185
mov     eax, dword_4add84
cmp     [ecx+2ch], eax
jz      short loc_45318f
mov     eax, [ecx+20h]
or      eax, 2000000h
jmp     short loc_453194
mov     eax, 0ffffffh
push    eax
movsx   eax, dx
push    eax
push    0
call    ds:createpen
mov     esi, eax
jmp     short loc_4531af
push    8
xor     esi, esi
call    ds:getstockobject
test    eax, eax
jz      short loc_4531bf
push    eax
mov     eax, [esp+8+hdc]
push    eax
call    ds:selectobject
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, [esp+4+ho]
test    esi, esi
jz      short loc_4531f4
push    7
call    ds:getstockobject
push    eax
mov     eax, [esp+8+hdc]
push    eax
call    ds:selectobject
push    esi
call    ds:deleteobject
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+arg_4]
push    edi
cmp     word ptr [ebx+4], 0
push    ebp
jz      loc_453335
mov     cl, [ebx]
test    cl, cl
jz      short loc_453226
mov     ebp, 0
cmp     cl, 4
jnz     short loc_45322b
mov     ebp, 1
test    ebp, ebp
jz      short loc_453288
mov     eax, dword_4add88
cmp     [ebx+12h], eax
jnz     short loc_453288
mov     eax, dword_4add8c
cmp     [ebx+16h], eax
jnz     short loc_453288
cmp     cl, 3
jnz     short loc_45324e
mov     edi, [esp+14h+arg_8]
jmp     short loc_453251
mov     edi, [ebx+6]
mov     esi, [esp+14h+hdc]
push    2
push    esi
call    ds:getdevicecaps
cmp     eax, 1
jnz     short loc_453273
or      edi, 2000000h
push    edi
push    esi
call    ds:getnearestcolor
mov     edi, eax
or      edi, 2000000h
push    edi
call    ds:createsolidbrush
mov     edi, eax
mov     [esp+14h+var_4], eax
jmp     short loc_45329e
lea     eax, [ebx+12h]
push    eax
call    sub_453520
mov     esi, [esp+18h+hdc]
mov     [esp+18h+var_4], eax
add     esp, 4
mov     edi, eax
test    ebp, ebp
jz      short loc_4532c9
mov     eax, [ebx+6]
mov     ebp, ds:settextcolor
or      eax, 2000000h
push    eax
push    esi
call    ebp
mov     eax, [ebx+0ah]
or      eax, 2000000h
push    eax
push    esi
call    ds:setbkcolor
jmp     loc_45334b
mov     al, [ebx]
cmp     al, 3
jnz     short loc_4532ed
mov     eax, [esp+14h+arg_8]
or      eax, 2000000h
push    eax
push    esi
call    ds:settextcolor
push    0
mov     ebp, ds:setbkcolor
push    esi
call    ebp
jmp     short loc_45334b
cmp     al, 1
jnz     short loc_45331e
mov     eax, [ebx+0ah]
and     eax, 0ffffffh
cmp     eax, 0ffffffh
jz      short loc_45331e
push    0ffffffh
push    esi
call    ds:settextcolor
mov     eax, [ebx+0ah]
or      eax, 2000000h
push    eax
push    esi
call    ds:setbkcolor
jmp     short loc_45334b
push    0ffffffh
push    esi
call    ds:settextcolor
push    0
push    esi
call    ds:setbkcolor
jmp     short loc_45334b
push    5
call    ds:getstockobject
mov     edi, eax
mov     esi, [esp+14h+hdc]
mov     [esp+14h+var_4], 0
test    edi, edi
jz      short loc_453357
push    edi
push    esi
call    ds:selectobject
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
mov     esi, [esp+4+ho]
test    esi, esi
jz      short loc_453394
push    0
call    ds:getstockobject
push    eax
mov     eax, [esp+8+hdc]
push    eax
call    ds:selectobject
push    esi
call    ds:deleteobject
pop     esi
retn
mov     edx, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     cl, [edx]
cmp     cl, 3
jnz     short loc_4533ba
mov     edi, [esp+0ch+arg_8]
or      edi, 2000000h
jmp     short loc_4533e3
cmp     cl, 2
jz      short loc_4533de
mov     eax, dword_4add80
cmp     [edx+28h], eax
jnz     short loc_4533d3
mov     eax, dword_4add84
cmp     [edx+2ch], eax
jz      short loc_4533de
mov     edi, [edx+20h]
or      edi, 2000000h
jmp     short loc_4533e3
mov     edi, 0ffffffh
sub     cl, 2
mov     esi, [esp+0ch+hdc]
cmp     cl, 1
sbb     eax, eax
and     eax, 0fffffffah
add     eax, 0dh
push    eax
push    esi
call    ds:setrop2
push    edi
call    ds:createsolidbrush
test    eax, eax
jz      short loc_453426
push    eax
mov     edi, ds:selectobject
push    esi
call    edi
mov     ebx, eax
push    8
call    ds:getstockobject
push    eax
push    esi
call    edi
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+h]
test    eax, eax
jz      short locret_45344b
push    eax
mov     eax, [esp+4+hdc]
push    eax
call    ds:selectobject
push    eax
call    ds:deleteobject
retn
push    ebx
push    esi
mov     eax, [esp+8+arg_c]
push    edi
mov     edi, [esp+0ch+arg_4]
push    ebp
mov     esi, [esp+10h+hdc]
push    eax
mov     ebp, [edi+20h]
push    edi
mov     dword ptr [edi+20h], 0ffffffh
push    esi
call    sub_453140
mov     ebx, [esp+1ch+arg_8]
add     esp, 0ch
mov     [ebx+4], eax
mov     eax, [esp+10h+arg_c]
push    eax
mov     [edi+20h], ebp
push    edi
push    esi
call    sub_453200
add     esp, 0ch
mov     [ebx], eax
push    0fh
push    esi
call    ds:setrop2
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_8]
push    edi
mov     esi, [esp+0ch+hdc]
push    ebp
mov     eax, [ebx+4]
push    eax
push    esi
call    sub_4531d0
mov     ebp, [esp+18h+arg_c]
mov     edi, [esp+18h+arg_4]
add     esp, 8
push    ebp
push    edi
push    esi
call    sub_453140
add     esp, 0ch
mov     [ebx+4], eax
cmp     byte ptr [edi], 3
jnz     short loc_4534e9
or      ebp, 2000000h
push    ebp
push    esi
call    ds:settextcolor
push    0ffffffh
jmp     short loc_453502
mov     eax, [edi+6]
or      eax, 2000000h
push    eax
push    esi
call    ds:settextcolor
mov     eax, [edi+0ah]
or      eax, 2000000h
push    eax
push    esi
call    ds:setbkcolor
push    9
push    esi
call    ds:setrop2
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     dx, dx
mov     ecx, [esp+arg_0]
sub     esp, 10h
push    esi
push    edi
movsx   eax, dx
inc     dx
movzx   si, byte ptr [eax+ecx]
mov     [esp+eax*2+18h+bits], si
cmp     dx, 8
jl      short loc_45352c
lea     eax, [esp+18h+bits]
push    eax
push    1
push    1
push    8
push    8
call    ds:createbitmap
mov     edi, eax
test    edi, edi
jz      short loc_453572
push    edi
call    ds:createpatternbrush
mov     esi, eax
push    edi
call    ds:deleteobject
mov     eax, esi
pop     edi
pop     esi
add     esp, 10h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 10h
retn
mov     eax, [esp+y]
push    0
mov     ecx, [esp+4+x]
push    eax
mov     edx, [esp+8+hdc]
push    ecx
push    edx
call    ds:setwindoworgex
retn
mov     ecx, [esp+hdc]
sub     esp, 8
lea     eax, [esp+8+point]
push    eax
push    ecx
call    ds:getwindoworgex
mov     eax, [esp+8+point.x]
mov     edx, [esp+8+point.y]
add     esp, 8
retn
mov     eax, [esp+y]
push    0
mov     ecx, [esp+4+x]
push    eax
mov     edx, [esp+8+hdc]
push    ecx
push    edx
call    ds:offsetwindoworgex
retn
sub     esp, 20h
push    ebx
push    esi
mov     ebx, [esp+28h+arg_4]
push    edi
push    ebp
cmp     ebx, 6ah
ja      def_4535fc
xor     eax, eax
mov     al, ds:byte_453b7c[ebx]
jmp     ds:jpt_4535fc[eax*4]
mov     esi, [esp+30h+arg_8]
mov     ecx, [esp+30h+arg_0]
mov     dx, [ecx+1ch]
mov     eax, [esi+0ch]
push    eax
push    edx
mov     eax, [esp+38h+arg_0]
push    0eh
add     eax, 32h
push    eax
call    sub_4104e0
add     esp, 10h
movzx   eax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ecx, [esp+30h+arg_0]
test    byte ptr [ecx+0ah], 20h
jnz     def_4535fc
xor     edi, edi
add     ecx, 32h
mov     [esp+30h+var_10], ecx
push    ecx
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_453697
mov     eax, [esp+30h+var_10]
push    eax
call    sub_413090
add     esp, 4
mov     ebp, eax
cmp     ebp, edi
jz      short loc_45368a
mov     esi, [esp+30h+arg_8]
push    esi
push    ebx
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     short loc_45368a
push    ebp
call    sub_413260
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_45366c
mov     eax, [esp+30h+var_10]
push    eax
call    sub_412f60
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ecx, [esp+30h+arg_0]
mov     esi, [esp+30h+arg_8]
test    byte ptr [ecx+0ah], 20h
jnz     loc_453b05
mov     eax, [esp+30h+arg_0]
push    esi
push    ebx
add     eax, 32h
push    0
push    eax
call    sub_410a90
add     esp, 10h
jmp     loc_453b05
mov     ecx, [esp+30h+arg_0]
mov     esi, [esp+30h+arg_8]
test    byte ptr [ecx+0ah], 21h
jnz     loc_453b05
mov     eax, [esp+30h+arg_0]
push    esi
push    ebx
add     eax, 32h
push    0
push    eax
call    sub_410a90
add     esp, 10h
xor     eax, eax
or      ds:byte_4a61d4, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     esi, [esp+30h+arg_8]
mov     ecx, [esp+30h+arg_0]
push    esi
push    ebx
push    ecx
call    sub_40fd60
mov     bp, ax
add     esp, 0ch
test    bp, bp
jz      short loc_453722
mov     [esi+8], bp
mov     edi, [esp+30h+arg_0]
add     edi, 32h
push    edi
call    sub_412f30
add     esp, 4
test    eax, eax
jz      loc_453b05
push    edi
call    sub_413090
add     esp, 4
test    eax, eax
jnz     short loc_45374c
movzx   esi, bp
jmp     short loc_45378a
mov     ax, [esi+8]
push    eax
call    sub_474590
mov     ecx, [esp+34h+arg_0]
add     esp, 4
push    eax
mov     ax, [ecx+1ch]
push    eax
call    sub_474520
mov     ecx, [esp+38h+arg_0]
add     esp, 8
mov     [ecx+1ch], ax
mov     ax, [esi+8]
mov     edx, [esi+0ch]
push    edx
push    eax
push    0eh
push    edi
call    sub_410440
movzx   esi, ax
add     esp, 10h
push    edi
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ecx, [esp+30h+arg_0]
test    byte ptr [ecx+0ah], 20h
jnz     loc_4538b4
mov     esi, [esp+30h+arg_8]
movsx   eax, word ptr [esi+0ah]
push    eax
call    sub_473f90
mov     ecx, [esp+34h+arg_0]
add     esp, 4
movsx   edi, ax
mov     eax, [ecx+2eh]
mov     edx, [ecx+2ah]
mov     ebp, [ecx+26h]
add     ecx, 22h
mov     [esp+30h+var_1e+2], ecx
push    edi
push    eax
push    edx
push    ebp
mov     eax, [ecx]
push    eax
call    sub_474000
mov     [esp+44h+var_18], eax
add     esp, 14h
mov     eax, [esi]
mov     ecx, [esi+4]
mov     [esp+30h+var_14], edx
push    ecx
mov     edx, [esp+34h+var_18]
push    eax
mov     eax, [esp+38h+var_14]
push    edi
push    eax
lea     edi, [esi+10h]
push    edx
call    sub_473f10
mov     word ptr [esp+44h+var_1e], ax
lea     ecx, [esp+44h+var_10]
add     esp, 14h
mov     eax, [edi]
mov     edx, [edi+4]
mov     ebp, [edi+8]
mov     [ecx], eax
mov     eax, [edi+0ch]
mov     [ecx+4], edx
mov     [ecx+8], ebp
mov     [ecx+0ch], eax
mov     ecx, [esp+30h+arg_0]
add     ecx, 32h
mov     [esp+30h+var_18], ecx
push    ecx
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_4538a7
mov     eax, [esp+30h+var_18]
push    eax
call    sub_413090
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_45389a
lea     ecx, [ebp+22h]
mov     eax, [ecx]
mov     [edi], eax
mov     edx, [ecx+4]
mov     [edi+4], edx
mov     edx, [esp+30h+var_1e]
mov     eax, [ecx+8]
push    edx
mov     [edi+8], eax
lea     eax, [esp+34h+var_10]
mov     ecx, [ecx+0ch]
push    eax
mov     [edi+0ch], ecx
mov     ecx, [esp+38h+var_1e+2]
push    ecx
push    edi
call    sub_473df0
add     esp, 10h
push    esi
push    ebx
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
push    ebp
call    sub_413260
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_453851
mov     eax, [esp+30h+var_18]
push    eax
call    sub_412f60
add     esp, 4
mov     ecx, [esp+30h+arg_0]
push    ecx
call    sub_453bf0
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     edi, [esp+30h+arg_0]
mov     esi, [esp+30h+arg_8]
add     edi, 32h
push    esi
push    ebx
push    0
push    edi
call    sub_410a90
add     esp, 10h
push    edi
call    sub_413110
add     esp, 4
jmp     loc_453b05
mov     esi, [esp+30h+arg_8]
mov     ecx, [esp+30h+arg_0]
push    esi
push    ebx
push    ecx
call    sub_40fd60
add     esp, 0ch
test    eax, eax
jz      short loc_453908
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ebx, [esp+30h+arg_0]
add     ebx, 32h
push    ebx
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_45395f
push    ebx
call    sub_413090
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_453948
push    esi
push    11h
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
test    eax, eax
jnz     short loc_453948
push    edi
call    sub_413260
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_45392b
push    ebx
call    sub_412f60
add     esp, 4
cmp     edi, 1
sbb     eax, eax
pop     ebp
inc     eax
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ecx, [esp+30h+arg_0]
mov     esi, [esp+30h+arg_8]
test    byte ptr [ecx+0ah], 20h
jnz     loc_453b05
mov     eax, [esp+30h+arg_0]
push    esi
push    ebx
add     eax, 32h
push    0
push    eax
call    sub_410a90
mov     ecx, [esp+40h+arg_0]
add     esp, 10h
push    ecx
call    sub_453bf0
add     esp, 4
jmp     loc_453b05
mov     esi, [esp+30h+arg_8]
mov     eax, [esp+30h+arg_0]
push    esi
add     eax, 32h
push    ebx
push    0
push    eax
call    sub_410a90
add     esp, 10h
jmp     loc_453b05
mov     esi, [esp+30h+arg_8]
mov     ecx, [esp+30h+arg_0]
push    esi
push    ebx
push    ecx
call    sub_40fd60
add     esp, 0ch
mov     edi, eax
test    edi, edi
jz      short loc_4539e1
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ecx, [esp+30h+arg_0]
add     ecx, 32h
mov     [esp+30h+var_10], ecx
push    ecx
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_453a37
mov     eax, [esp+30h+var_10]
push    eax
call    sub_413090
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_453a2a
push    esi
push    ebx
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     short loc_453a2a
push    ebp
call    sub_413260
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_453a0c
mov     eax, [esp+30h+var_10]
push    eax
call    sub_412f60
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     esi, [esp+30h+arg_8]
cmp     word ptr [esi+0ah], 0
jnz     short loc_453ab4
mov     ecx, [esp+30h+arg_0]
test    byte ptr [ecx+0ah], 20h
jnz     short loc_453ab4
xor     edi, edi
add     ecx, 32h
mov     [esp+30h+var_10], ecx
push    ecx
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_453aaa
mov     eax, [esp+30h+var_10]
push    eax
call    sub_413090
add     esp, 4
mov     ebp, eax
cmp     ebp, edi
jz      short loc_453a9d
push    esi
push    ebx
push    ebp
call    dword ptr [ebp+6]
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     short loc_453a9d
push    ebp
call    sub_413260
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_453a7f
mov     eax, [esp+30h+var_10]
push    eax
call    sub_412f60
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+30h+arg_0]
add     eax, 32h
cmp     dword ptr [eax], 0
jz      short loc_453ad8
mov     esi, [esp+30h+arg_8]
push    esi
push    eax
call    sub_453ca0
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     esi, [esp+30h+arg_8]
mov     eax, [esp+30h+arg_0]
push    esi
add     eax, 32h
push    eax
call    sub_453d70
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     esi, [esp+30h+arg_8]
mov     ecx, [esp+30h+arg_0]
push    esi
push    ebx
push    ecx
call    sub_40fd60
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
sub     esp, 0c0h
push    ebx
push    esi
mov     esi, [esp+0c8h+arg_0]
push    edi
push    ebp
lea     eax, [esi+0ch]
lea     ecx, [esi+32h]
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
push    ecx
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_453c8b
lea     eax, [esi+32h]
push    eax
call    sub_413090
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_453c7f
mov     ebp, ds:unionrect
lea     edi, [esp+0d0h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
lea     eax, [esp+0d0h+var_c0]
push    eax
push    19h
push    ebx
call    dword ptr [ebx+6]
lea     eax, [esp+0dch+rcsrc2]
add     esp, 0ch
lea     ecx, [esi+0ch]
push    eax
push    ecx
push    ecx
call    ebp
push    ebx
call    sub_413260
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_453c47
lea     eax, [esi+32h]
push    eax
call    sub_412f60
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
sub     esp, 10h
lea     eax, [esp+10h+hmem]
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     [eax], ebx
mov     edi, [esp+1ch+arg_4]
push    ebp
mov     ebp, [esp+20h+arg_0]
mov     [eax+4], ebx
mov     esi, [edi+0a6h]
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     eax, [ebp+0]
push    eax
call    sub_45bab0
mov     [esp+24h+hmem], eax
add     esp, 4
mov     eax, [ebp+8]
cmp     [esp+20h+hmem], ebx
mov     [esp+20h+var_8], eax
jnz     short loc_453cf1
mov     word ptr [edi+0ah], 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
lea     eax, [esp+20h+hmem]
push    eax
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_453d43
lea     eax, [esp+20h+hmem]
push    eax
call    sub_413090
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_453d36
mov     eax, [ebx+6]
push    eax
call    sub_453e30
movsx   eax, ax
add     esp, 4
mov     [ebx+6], eax
push    ebx
call    sub_413260
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_453d15
lea     eax, [esp+20h+hmem]
push    eax
call    sub_412f60
add     esp, 4
mov     eax, [edi+98h]
mov     ecx, [esp+20h+hmem]
push    eax
push    1
push    ecx
call    esi
mov     ecx, [esp+2ch+hmem]
add     esp, 0ch
push    ecx
call    sub_45ba00
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     eax, [esi+98h]
push    eax
push    1
call    dword ptr [esi+0a6h]
mov     edi, [esp+14h+arg_0]
add     esp, 8
test    eax, eax
jnz     short loc_453dab
cmp     dword ptr [edi], 0
jz      short loc_453d9c
mov     word ptr [esi+0ah], 8
xor     eax, eax
mov     [edi+0ch], ax
mov     [edi], eax
mov     [edi+4], eax
pop     edi
pop     esi
pop     ebx
retn
xor     ebx, ebx
push    edi
mov     [edi+0ch], bx
mov     [edi], eax
mov     [edi+4], ebx
call    sub_412f30
add     esp, 4
test    eax, eax
jz      short loc_453e01
push    edi
call    sub_413090
add     esp, 4
mov     esi, eax
cmp     esi, ebx
jz      short loc_453df8
mov     eax, [esi+6]
push    eax
call    sub_453e10
add     esp, 4
mov     [esi+6], eax
mov     [esi+1eh], bx
push    esi
mov     [esi+1ch], bx
call    sub_413260
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_453dd2
push    edi
call    sub_412f60
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, [esp+arg_0]
lea     eax, off_4addb8[eax*4]
cmp     eax, offset dword_4addd4
jnb     short loc_453e26
mov     eax, [eax]
retn
mov     eax, offset sub_40fd60
retn
xor     ax, ax
mov     edx, offset off_4addb8
cmp     off_4addb8, 0
jz      short loc_453e53
mov     ecx, [esp+arg_0]
cmp     [edx], ecx
jz      short locret_453e56
inc     ax
add     edx, 4
cmp     dword ptr [edx], 0
jnz     short loc_453e45
xor     ax, ax
retn
mov     eax, [esp+arg_0]
add     eax, eax
retn
mov     eax, [esp+arg_0]
shr     eax, 1
retn
mov     eax, [esp+hmem]
push    esi
push    eax
call    sub_45bab0
mov     esi, [esp+8+arg_0]
add     esp, 4
mov     [esi], eax
mov     eax, [esp+4+arg_8]
push    eax
call    sub_453e70
add     esp, 4
mov     [esi+4], eax
cmp     dword ptr [esi], 1
pop     esi
sbb     eax, eax
inc     eax
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
cmp     [ecx], al
jz      short locret_453ed2
mov     edx, eax
inc     ecx
shl     edx, 18h
shr     eax, 8
or      edx, eax
movsx   eax, byte ptr [ecx-1]
xor     edx, eax
cmp     byte ptr [ecx], 0
mov     eax, edx
jnz     short loc_453eba
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
xor     ebp, ebp
mov     bl, [esi]
test    bl, bl
jz      short loc_453f4e
mov     edi, 1
cmp     dword_4af134, edi
jle     short loc_453f10
movsx   eax, bl
push    103h
push    eax
call    __isctype
add     esp, 8
jmp     short loc_453f24
movsx   ecx, bl
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 103h
test    eax, eax
jz      short loc_453f36
movsx   eax, bl
push    eax
call    _tolower
add     esp, 4
mov     bl, al
mov     ecx, ebp
inc     esi
movsx   eax, bl
shl     ecx, 18h
mov     bl, [esi]
shr     ebp, 8
or      ecx, ebp
xor     ecx, eax
test    bl, bl
mov     ebp, ecx
jnz     short loc_453ef5
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
cmp     eax, 9
jg      short loc_453f6f
mov     eax, 0bh
retn
shl     eax, 2
mov     ecx, 3
cdq
idiv    ecx
push    eax
call    sub_454130
add     esp, 4
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    eax
mov     dword ptr [esi], 0
call    sub_453f60
add     esp, 4
mov     [esi+4], eax
test    eax, eax
jnz     short loc_453fb3
xor     eax, eax
pop     esi
retn
push    42h
push    eax
call    sub_453e60
add     esp, 4
push    eax
call    sub_45b8f0
add     esp, 8
mov     [esi], eax
cmp     eax, 1
pop     esi
sbb     eax, eax
inc     eax
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
test    eax, eax
jz      short loc_454001
push    eax
call    sub_45ba00
add     esp, 4
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    edi
push    eax
mov     edi, [esi]
push    edi
call    sub_45ba10
add     esp, 8
mov     [esi], edi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
push    ecx
call    sub_45bbf0
add     esp, 4
retn
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
push    ebp
push    eax
mov     edi, [esi]
call    sub_453eb0
add     esp, 4
mov     ecx, eax
mov     esi, [esi+4]
sub     edx, edx
mov     ebx, esi
lea     ebp, [esi-2]
div     ebp
sub     ebx, edx
mov     eax, ecx
sub     ebx, 2
sub     edx, edx
mov     ecx, [edi]
div     esi
cmp     word ptr [ecx+edx*2], 0
jz      short loc_454087
lea     eax, [ebx+edx]
sub     edx, edx
div     esi
cmp     word ptr [ecx+edx*2], 0
jnz     short loc_454079
mov     ax, [esp+10h+arg_8]
pop     ebp
mov     [ecx+edx*2], ax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_453eb0
mov     edx, [esp+18h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, [edx+4]
mov     ebx, [edx]
mov     esi, ecx
sub     edx, edx
mov     [esp+14h+var_4], ecx
sub     ecx, 2
div     ecx
sub     esi, edx
mov     eax, edi
sub     esi, 2
sub     edx, edx
div     [esp+14h+var_4]
mov     edi, edx
mov     eax, [ebx]
mov     bp, [eax+edi*2]
test    bp, bp
jz      short loc_454112
mov     eax, [esp+14h+arg_c]
mov     ecx, [esp+14h+arg_4]
push    eax
push    ebp
push    ecx
call    [esp+20h+arg_8]
add     esp, 0ch
test    eax, eax
jnz     short loc_45411d
lea     eax, [esi+edi]
sub     edx, edx
div     [esp+14h+var_4]
mov     edi, edx
mov     eax, [ebx]
mov     bp, [eax+edi*2]
test    bp, bp
jnz     short loc_4540e6
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ax, bp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
shr     esi, 1
push    ebp
cmp     esi, 10000h
jb      short loc_454150
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    42h
lea     eax, [esi+1]
push    eax
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_45416e
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    edi
mov     ebx, 3
mov     ebp, 4
call    ds:globallock
mov     ecx, 1
cmp     byte ptr [ecx+eax], 0
jnz     short loc_45419e
mov     edx, ebp
mov     [esp+14h+var_4], ebx
cmp     ebp, esi
ja      short loc_45419e
mov     byte ptr [edx+eax], 1
add     edx, ebx
cmp     edx, esi
jbe     short loc_454194
lea     ebp, [ebp+ebx*2+2]
inc     ecx
add     ebx, 2
cmp     ecx, esi
jbe     short loc_454184
push    edi
call    ds:globalunlock
push    edi
call    sub_45ba00
mov     eax, [esp+18h+var_4]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_4]
mov     edx, [esi+4]
mov     ecx, [esi+0ch]
lea     eax, [ecx+edx]
test    eax, eax
jnz     short loc_4541e9
mov     eax, 1
pop     esi
retn
mov     eax, [esp+4+arg_0]
cmp     [eax+0ch], edx
jge     short loc_4541f6
xor     eax, eax
pop     esi
retn
cmp     [eax+4], ecx
jle     short loc_4541ff
xor     eax, eax
pop     esi
retn
mov     ecx, [esi]
cmp     [eax+8], ecx
jge     short loc_45420a
xor     eax, eax
pop     esi
retn
mov     eax, [eax]
cmp     [esi+8], eax
mov     eax, 0
jl      short loc_45421b
mov     eax, 1
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
mov     edi, [esp+1ch+arg_4]
push    edi
push    esi
call    sub_4541d0
add     esp, 8
test    eax, eax
jz      short loc_4542b3
cmp     [esp+1ch+arg_c], 0
jz      short loc_45424f
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, [esi+8]
mov     edx, [esi+0ch]
lea     ebx, [esp+1ch+var_10]
mov     eax, [edi]
sub     ecx, [esi]
sub     edx, [esi+4]
mov     [ebx], eax
mov     eax, [edi+4]
mov     [ebx+4], eax
mov     eax, [edi+8]
mov     edi, [edi+0ch]
mov     [ebx+8], eax
mov     eax, [esp+1ch+arg_8]
mov     [ebx+0ch], edi
mov     ebx, [eax+4]
lea     edi, [ebx+edx]
add     ebx, edx
add     [esp+1ch+var_c], edi
sub     [esp+1ch+var_4], ebx
mov     edi, [eax]
lea     eax, [edi+ecx]
add     edi, ecx
add     [esp+1ch+var_10], eax
sub     [esp+1ch+var_8], edi
lea     eax, [esp+1ch+var_10]
push    eax
push    esi
call    sub_4541d0
add     esp, 8
cmp     eax, 1
sbb     eax, eax
pop     edi
neg     eax
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     esi, [eax+8]
push    ebp
mov     ecx, [eax+4]
mov     ebp, [eax]
mov     edi, [eax+0ch]
mov     ebx, [esp+28h+arg_4]
sub     esi, ebp
sub     edi, ecx
mov     eax, [ebx+4]
sub     eax, edi
mov     [esp+28h+var_c], eax
mov     eax, [ebx+0ch]
add     eax, edi
mov     [esp+28h+var_4], eax
mov     eax, [ebx]
sub     eax, esi
mov     [esp+28h+var_10], eax
mov     eax, [ebx+8]
add     eax, esi
mov     [esp+28h+var_8], eax
mov     eax, edi
cdq
sub     eax, edx
sar     eax, 1
add     eax, ecx
mov     [esp+28h+var_14], eax
mov     eax, esi
cdq
sub     eax, edx
lea     ecx, [esp+28h+var_10]
sar     eax, 1
push    ecx
add     eax, ebp
mov     [esp+2ch+var_18], eax
lea     eax, [esp+2ch+var_18]
push    eax
call    sub_4543b0
add     esp, 8
test    eax, eax
jz      short loc_4543a5
cmp     [esp+28h+arg_c], 0
jz      short loc_454347
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
lea     ecx, [esp+28h+var_10]
mov     eax, [ebx]
mov     edx, [ebx+4]
mov     ebp, [ebx+8]
mov     [ecx], eax
mov     eax, [ebx+0ch]
mov     [ecx+4], edx
mov     [ecx+8], ebp
mov     [ecx+0ch], eax
mov     eax, [esp+28h+arg_8]
mov     edx, [eax+4]
lea     ecx, [edx+edi]
add     edx, edi
add     [esp+28h+var_c], ecx
sub     [esp+28h+var_4], edx
mov     ecx, [eax]
lea     edx, [esp+28h+var_18]
lea     eax, [ecx+esi]
add     ecx, esi
add     [esp+28h+var_10], eax
sub     [esp+28h+var_8], ecx
lea     eax, [esp+28h+var_10]
push    eax
push    edx
call    sub_4543b0
add     esp, 8
cmp     eax, 1
sbb     eax, eax
pop     ebp
neg     eax
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     ecx, [eax+8]
mov     edi, [eax]
add     edi, ecx
mov     edx, [eax+0ch]
sar     edi, 1
mov     ebx, [eax+4]
add     ebx, edx
sub     ecx, edi
sar     ebx, 1
mov     eax, [esp+0ch+arg_0]
sub     edx, ebx
mov     esi, [eax]
sub     esi, edi
mov     edi, [eax+4]
sub     edi, ebx
cmp     esi, 100h
jg      short loc_4543ed
cmp     ecx, 100h
jle     short loc_4543f5
sar     esi, 1
sar     ecx, 1
jmp     short loc_4543dd
cmp     edi, 100h
jg      short loc_454405
cmp     edx, 100h
jle     short loc_45440d
sar     edi, 1
sar     edx, 1
jmp     short loc_4543f5
imul    edx, edx
mov     eax, edx
imul    ecx, ecx
imul    eax, ecx
imul    edx, esi
imul    edx, esi
imul    ecx, edi
imul    ecx, edi
add     edx, ecx
pop     edi
pop     esi
cmp     eax, edx
mov     eax, 0
pop     ebx
adc     eax, 0ffffffffh
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
mov     esi, [eax]
mov     edx, [ecx]
cmp     esi, edx
jnz     short loc_454455
xor     eax, eax
pop     esi
retn
mov     eax, [eax+4]
sub     esi, edx
sub     eax, [ecx+4]
shl     eax, 10h
cdq
idiv    esi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     edx, [eax+4]
mov     [eax], edx
mov     [eax+4], ecx
retn
mov     eax, [esp+arg_c]
sub     esp, 28h
push    ebx
mov     eax, [eax]
cdq
push    esi
sub     eax, edx
sar     eax, 1
push    edi
push    ebp
mov     edi, [esp+38h+arg_0]
mov     ebp, [esp+38h+arg_4]
mov     ebx, [esp+38h+arg_8]
sub     eax, [edi]
add     eax, [edi+8]
mov     ecx, [ebp+4]
mov     esi, eax
mov     eax, [ebx+4]
cmp     ecx, eax
jge     short loc_4544ba
mov     [esp+38h+var_c], ecx
mov     [esp+38h+var_4], eax
jmp     short loc_4544c2
mov     [esp+38h+var_c], eax
mov     [esp+38h+var_4], ecx
mov     ecx, [ebx]
mov     eax, [ebp+0]
cmp     ecx, eax
jle     short loc_4544d5
mov     [esp+38h+var_10], eax
mov     [esp+38h+var_8], ecx
jmp     short loc_4544dd
mov     [esp+38h+var_10], ecx
mov     [esp+38h+var_8], eax
lea     eax, [esp+38h+var_10]
sub     [esp+38h+var_10], esi
sub     [esp+38h+var_c], esi
push    eax
add     [esp+3ch+var_8], esi
push    edi
add     [esp+40h+var_4], esi
call    sub_4541d0
add     esp, 8
test    eax, eax
jnz     short loc_454509
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
mov     ecx, [edi+4]
mov     eax, [edi+0ch]
sub     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
add     eax, ecx
mov     ecx, [edi]
mov     [esp+38h+var_1c], eax
mov     eax, [edi+8]
sub     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
add     eax, ecx
mov     ecx, [ebp+0]
mov     [esp+38h+var_20], eax
mov     [esp+38h+var_28], ecx
mov     eax, [ebp+4]
mov     ecx, [ebx]
mov     [esp+38h+var_24], eax
mov     [esp+38h+var_18], ecx
mov     eax, [ebx+4]
mov     ecx, [esp+38h+var_4]
sub     ecx, [esp+38h+var_c]
mov     [esp+38h+var_14], eax
mov     eax, [esp+38h+var_8]
sub     eax, [esp+38h+var_10]
cmp     ecx, eax
jle     short loc_454586
lea     eax, [esp+38h+var_28]
push    eax
call    sub_454470
lea     eax, [esp+3ch+var_18]
add     esp, 4
push    eax
call    sub_454470
lea     eax, [esp+3ch+var_20]
add     esp, 4
push    eax
call    sub_454470
add     esp, 4
lea     eax, [esp+38h+var_18]
lea     ecx, [esp+38h+var_28]
push    eax
push    ecx
call    sub_454440
lea     ecx, [esp+40h+var_20]
sub     [esp+40h+var_24], esi
add     esp, 8
mov     edi, eax
add     esi, esi
push    ecx
lea     eax, [esp+3ch+var_28]
push    eax
call    sub_454440
lea     ecx, [esp+40h+var_28]
add     [esp+40h+var_24], esi
add     esp, 8
mov     ebx, eax
lea     eax, [esp+38h+var_20]
push    eax
push    ecx
call    sub_454440
add     esp, 8
mov     ecx, 1
cmp     eax, edi
jg      short loc_4545d5
xor     ecx, ecx
mov     eax, 1
cmp     ebx, edi
jg      short loc_4545e0
xor     eax, eax
sub     ecx, eax
pop     ebp
mov     eax, 0
pop     edi
pop     esi
cmp     ecx, 1
adc     eax, 0ffffffffh
pop     ebx
add     esp, 28h
retn
mov     eax, [esp+arg_18]
sub     esp, 20h
mov     word ptr [eax], 0
push    ebx
mov     ecx, [esp+24h+arg_c]
push    esi
push    edi
push    ebp
mov     ebp, [esp+30h+arg_0]
push    ecx
push    ebp
call    sub_4541d0
add     esp, 8
test    eax, eax
jnz     short loc_454630
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
xor     di, di
mov     bx, [esp+30h+arg_4]
cmp     bx, di
jle     short loc_4546ab
movsx   eax, bx
mov     esi, [esp+30h+arg_8]
mov     [esp+30h+var_8], eax
movsx   ecx, di
mov     eax, [esp+30h+var_8]
sub     eax, ecx
cmp     eax, 1
lea     eax, [edi+1]
jnz     short loc_454663
cmp     [esp+30h+arg_14], 1
sbb     eax, eax
and     ax, di
movsx   eax, ax
lea     edx, [esi+eax*8]
lea     eax, [esi+ecx*8]
mov     ecx, [eax]
cmp     [edx], ecx
jnz     short loc_45467a
mov     ecx, [eax+4]
cmp     [edx+4], ecx
jz      short loc_45468e
mov     ecx, [esp+30h+arg_10]
push    ecx
push    edx
push    eax
push    ebp
call    sub_454480
add     esp, 10h
test    eax, eax
jnz     short loc_454697
inc     di
cmp     di, bx
jl      short loc_454648
jmp     short loc_4546af
mov     eax, [esp+30h+arg_18]
pop     ebp
mov     [eax], di
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     esi, [esp+30h+arg_8]
cmp     [esp+30h+arg_14], 0
jnz     short loc_4546c0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [ebp+8]
add     eax, [ebp+0]
mov     [esp+30h+var_20], 0
sar     eax, 1
mov     [esp+30h+var_10], eax
mov     eax, [ebp+4]
add     eax, [ebp+0ch]
push    ebx
sar     eax, 1
push    esi
mov     [esp+38h+var_c], eax
mov     edx, [esp+38h+var_10]
mov     [esp+38h+var_8], edx
mov     [esp+38h+var_4], eax
mov     [esp+38h+var_8], 7fffh
call    sub_4547d0
mov     [esp+38h+var_1e], bx
add     esp, 8
mov     di, ax
test    bx, bx
jz      loc_4547bc
movsx   eax, bx
mov     [esp+30h+var_1c], eax
movsx   ecx, di
mov     eax, [esp+30h+var_1c]
sub     eax, ecx
cmp     eax, 1
jnz     short loc_45472a
xor     di, di
jmp     short loc_45472c
inc     di
movsx   eax, di
lea     ebx, [esi+ecx*8]
lea     ebp, [esi+eax*8]
mov     eax, [ebx]
cmp     [ebp+0], eax
jnz     short loc_454744
mov     eax, [ebx+4]
cmp     [ebp+4], eax
jz      short loc_4547b1
mov     eax, [ebx]
mov     ecx, [ebx+4]
mov     edx, [esp+30h+var_8]
mov     [esp+30h+var_18], eax
mov     eax, [esp+30h+var_4]
mov     [esp+30h+var_14], ecx
mov     ecx, [esp+30h+var_c]
push    eax
mov     eax, [esp+34h+var_18]
push    edx
mov     edx, [esp+38h+var_10]
push    ecx
push    edx
mov     edx, [esp+40h+var_14]
push    edx
push    eax
push    edx
push    eax
call    sub_454840
add     esp, 20h
test    eax, eax
jnz     short loc_4547b1
mov     eax, [esp+30h+var_8]
mov     ecx, [esp+30h+var_4]
mov     edx, [esp+30h+var_10]
push    ecx
push    eax
mov     ecx, [ebp+0]
mov     eax, [esp+38h+var_c]
push    eax
push    edx
mov     eax, [ebp+4]
push    eax
push    ecx
mov     ecx, [ebx]
mov     eax, [ebx+4]
push    eax
push    ecx
call    sub_454840
add     esp, 20h
test    eax, eax
jz      short loc_4547b1
inc     [esp+30h+var_20]
dec     [esp+30h+var_1e]
jnz     loc_454717
xor     eax, eax
mov     ax, [esp+30h+var_20]
pop     ebp
and     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
sub     esp, 8
push    ebx
push    esi
mov     si, [esp+10h+arg_4]
push    edi
xor     di, di
push    ebp
cmp     si, di
mov     ebx, 7fffh
mov     [esp+18h+var_8], ebx
jle     short loc_454831
mov     ax, word ptr [esp+18h+var_8]
mov     edx, [esp+18h+arg_0]
movsx   ecx, di
mov     ebp, [edx+ecx*8+4]
lea     ecx, [edx+ecx*8]
cmp     ebx, ebp
jg      short loc_45480e
jnz     short loc_454822
mov     ebp, [esp+18h+var_8]
cmp     [ecx], ebp
jge     short loc_454822
mov     ebx, [ecx]
mov     eax, [ecx+4]
mov     [esp+18h+var_8], ebx
mov     [esp+18h+var_4], eax
mov     ax, di
mov     ebx, [esp+18h+var_4]
inc     di
cmp     di, si
jl      short loc_4547f6
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ax, word ptr [esp+18h+var_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_10]
push    esi
mov     ecx, [esp+4+arg_14]
mov     edx, [esp+4+arg_8]
mov     esi, [esp+4+arg_0]
push    ecx
mov     ecx, [esp+8+arg_4]
push    eax
mov     eax, [esp+0ch+arg_c]
push    eax
push    edx
push    ecx
push    esi
call    sub_454900
mov     ecx, [esp+1ch+arg_1c]
mov     edx, [esp+1ch+arg_8]
movsx   esi, ax
mov     eax, [esp+1ch+arg_18]
add     esp, 18h
push    ecx
push    eax
mov     eax, [esp+0ch+arg_c]
mov     ecx, [esp+0ch+arg_4]
push    eax
push    edx
mov     edx, [esp+14h+arg_0]
push    ecx
push    edx
call    sub_454900
movsx   ecx, ax
imul    esi, ecx
add     esp, 18h
test    esi, esi
jg      short loc_4548fa
mov     eax, [esp+4+arg_0]
mov     ecx, [esp+4+arg_4]
mov     edx, [esp+4+arg_18]
push    ecx
mov     esi, [esp+8+arg_10]
push    eax
mov     eax, [esp+0ch+arg_1c]
mov     ecx, [esp+0ch+arg_14]
push    eax
push    edx
push    ecx
push    esi
call    sub_454900
mov     ecx, [esp+1ch+arg_c]
mov     edx, [esp+1ch+arg_18]
movsx   esi, ax
mov     eax, [esp+1ch+arg_8]
add     esp, 18h
push    ecx
push    eax
mov     eax, [esp+0ch+arg_1c]
mov     ecx, [esp+0ch+arg_14]
push    eax
push    edx
mov     edx, [esp+14h+arg_10]
push    ecx
push    edx
call    sub_454900
movsx   ecx, ax
imul    esi, ecx
add     esp, 18h
test    esi, esi
jg      short loc_4548fa
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     ecx, [esp+arg_8]
push    ebx
mov     eax, [esp+4+arg_0]
push    esi
push    edi
sub     ecx, eax
mov     edx, [esp+0ch+arg_c]
push    ebp
mov     ebx, [esp+10h+arg_4]
mov     esi, [esp+10h+arg_10]
sub     edx, ebx
sub     esi, eax
mov     edi, [esp+10h+arg_14]
mov     eax, esi
sub     edi, ebx
mov     ebp, edi
imul    eax, edx
imul    ebp, ecx
cmp     ebp, eax
jle     short loc_45493b
mov     ax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
jge     short loc_454946
mov     ax, 0ffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     [esp+10h+arg_c], ebx
jnz     short loc_45496e
mov     eax, [esp+10h+arg_c]
cmp     [esp+10h+arg_14], eax
jnz     short loc_45496e
test    esi, esi
jge     short loc_454963
mov     ax, 0ffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
jle     short loc_45499d
mov     ax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, esi
imul    eax, ecx
test    eax, eax
jl      short loc_4549a5
mov     eax, edi
imul    eax, edx
test    eax, eax
jl      short loc_4549a5
imul    edx, edx
imul    ecx, ecx
imul    edi, edi
imul    esi, esi
add     edx, ecx
add     edi, esi
cmp     edx, edi
jge     short loc_45499d
mov     ax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ax, 0ffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    esi
push    eax
call    sub_461f70
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_4549e2
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jz      short loc_4549e2
push    esi
call    sub_461f70
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_4549c4
mov     eax, esi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_461f70
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_454a2d
push    edi
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jnz     short loc_454a24
push    esi
push    edi
call    sub_461e30
add     esp, 8
cmp     ax, 2
jz      short loc_454a28
mov     esi, edi
jmp     short loc_4549f6
mov     eax, esi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
sub     esp, 4
mov     [esp+4+var_2], 0
lea     eax, [esp+4+var_2]
push    esi
mov     esi, [esp+8+arg_0]
push    eax
push    4000002h
push    esi
call    sub_462b60
add     esp, 0ch
cmp     [esp+8+var_2], 0
jz      short loc_454a84
shr     esi, 10h
mov     ecx, dword ptr [esp+8+var_2]
movzx   eax, si
shl     eax, 10h
and     ecx, 0ffffh
or      eax, ecx
pop     esi
add     esp, 4
retn
xor     eax, eax
pop     esi
add     esp, 4
retn
push    esi
push    edi
mov     esi, [esp+8+arg_4]
push    20204f0h
mov     edi, [esp+0ch+arg_0]
push    edi
call    sub_462670
mov     [esi+0eh], ax
add     esp, 8
test    ax, ax
jnz     short loc_454acc
push    edi
call    sub_454a40
add     esp, 4
test    ax, ax
jle     short loc_454acc
push    edi
call    sub_454a40
add     esp, 4
mov     [esi], eax
jmp     short loc_454ad2
mov     dword ptr [esi], 0
push    2020308h
push    edi
call    sub_462670
movzx   eax, ax
add     esp, 8
mov     [esi+10h], eax
push    2020204h
push    edi
call    sub_462670
mov     [esi+14h], ax
add     esp, 8
push    2020003h
push    edi
call    sub_462670
mov     [esi+16h], ax
add     esp, 8
push    2030780h
push    edi
call    sub_462670
movzx   eax, ax
add     esp, 8
mov     [esi+18h], eax
push    2030640h
push    edi
call    sub_462670
mov     cx, [esi+0eh]
add     esp, 8
mov     [esi+4], edi
mov     [esi+8], edi
movzx   eax, ax
mov     [esi+1ch], eax
movsx   eax, cx
cmp     eax, 8
jz      short loc_454b51
cmp     eax, 9
jz      short loc_454b59
mov     word ptr [esi+0ch], 0
jmp     short loc_454b5f
mov     word ptr [esi+0ch], 416h
jmp     short loc_454b5f
mov     word ptr [esi+0ch], 415h
test    cx, cx
jnz     short loc_454b6e
cmp     dword ptr [esi], 0
jnz     short loc_454b6e
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
mov     eax, [esp+hmem]
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
push    eax
xor     ebp, ebp
call    sub_413690
mov     word ptr [esp+24h+var_10], ax
mov     ebx, [esp+24h+arg_10]
mov     word ptr [esp+24h+var_10+2], bp
add     esp, 4
mov     edi, ebx
xor     eax, eax
mov     ecx, 8
rep stosd
mov     si, 1
mov     eax, [esp+20h+arg_0]
mov     [ebx+0ch], bp
lea     ecx, [esp+20h+var_c]
push    ecx
mov     [ebx+4], eax
push    1
mov     [ebx+8], eax
mov     eax, [esp+28h+hmem]
push    eax
call    sub_4152f0
add     esp, 0ch
test    eax, eax
jz      loc_454d4f
mov     di, [esp+20h+arg_8]
mov     ax, [esp+20h+arg_c]
cmp     word ptr [esp+20h+var_c], ax
jge     def_454c0d
cmp     word ptr [esp+20h+var_c+2], di
jle     def_454c0d
xor     eax, eax
mov     al, [esp+20h+var_4]
dec     eax
cmp     eax, 4
ja      def_454c0d
jmp     ds:jpt_454c0d[eax*4]
mov     eax, [esp+20h+var_10]
mov     ecx, [esp+20h+var_8]
push    eax
push    ecx
call    sub_487100
add     esp, 8
test    ax, ax
jz      def_454c0d
mov     word ptr [esp+20h+var_10+2], ax
jmp     def_454c0d
mov     ax, word ptr [esp+20h+var_8]
mov     cx, word ptr [esp+20h+var_10]
shl     cx, 10h
or      cx, ax
jle     short loc_454c62
movzx   eax, ax
mov     ecx, [esp+20h+var_10]
and     ecx, 0ffffh
shl     ecx, 10h
or      ecx, eax
mov     [ebx], ecx
jmp     short loc_454c68
mov     dword ptr [ebx], 0
mov     eax, [ebx]
test    eax, eax
jz      def_454c0d
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      def_454c0d
mov     ebp, 1
jmp     def_454c0d
lea     eax, [esp+20h+var_8]
push    20204f0h
push    4
mov     ebp, 1
push    eax
call    sub_454dc0
mov     [ebx+0eh], ax
add     esp, 0ch
lea     eax, [esp+20h+var_8]
push    2020308h
push    4
push    eax
call    sub_454dc0
lea     ecx, [esp+2ch+var_8]
add     esp, 0ch
movsx   eax, ax
push    2020204h
mov     [ebx+10h], eax
push    4
push    ecx
call    sub_454dc0
mov     [ebx+14h], ax
lea     ecx, [esp+2ch+var_8]
add     esp, 0ch
push    2020003h
push    4
push    ecx
call    sub_454dc0
mov     [ebx+16h], ax
lea     ecx, [esp+2ch+var_8]
add     esp, 0ch
push    2030780h
push    4
push    ecx
call    sub_454dc0
lea     edx, [esp+2ch+var_8]
add     esp, 0ch
movsx   ecx, ax
push    2030640h
mov     [ebx+18h], ecx
push    4
push    edx
call    sub_454dc0
movsx   ecx, ax
add     esp, 0ch
mov     [ebx+1ch], ecx
jmp     short def_454c0d
mov     eax, [esp+20h+var_8]
mov     [ebx+0ch], ax
inc     si
lea     eax, [esp+20h+var_c]
mov     ecx, [esp+20h+hmem]
push    eax
push    esi
push    ecx
call    sub_4152f0
add     esp, 0ch
test    eax, eax
jnz     loc_454be2
test    ebp, ebp
jnz     short loc_454d9f
cmp     word ptr [esp+20h+var_10+2], 0
jz      short loc_454d9f
mov     eax, [esp+20h+var_10]
mov     ecx, [esp+20h+var_10+2]
and     eax, 0ffffh
and     ecx, 0ffffh
shl     eax, 10h
push    ebx
or      eax, ecx
push    eax
call    sub_454a90
add     esp, 8
test    eax, eax
jz      short loc_454d95
mov     eax, [esp+20h+arg_0]
pop     ebp
pop     edi
mov     [ebx+4], eax
mov     eax, 1
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     eax, [ebp+arg_8]
shr     eax, 10h
xor     ecx, ecx
mov     cl, al
sub     ecx, 2
mov     [ebp+var_4], cx
movsx   eax, [ebp+var_4]
add     eax, [ebp+arg_0]
mov     [ebp+var_c], eax
mov     eax, [ebp+arg_8]
mov     [ebp+var_10], ah
mov     al, byte ptr [ebp+arg_8]
mov     [ebp+var_8], al
mov     eax, [ebp+var_c]
xor     edx, edx
mov     dl, [eax]
xor     eax, eax
mov     al, [ebp+var_8]
and     edx, eax
mov     cl, [ebp+var_10]
sar     edx, cl
mov     ax, dx
jmp     $+5
pop     edi
pop     esi
pop     ebx
leave
retn
sub     esp, 1a0h
push    ebx
push    esi
mov     esi, [esp+1a8h+arg_0]
push    edi
push    ebp
mov     ebx, 0
xor     bp, bp
push    esi
call    sub_454a40
add     esp, 4
test    ax, ax
jle     short loc_454e42
push    esi
call    sub_454a40
add     esp, 4
mov     ebx, eax
push    20204f0h
push    esi
call    sub_462670
movzx   eax, ax
add     esp, 8
cmp     eax, 0eh
ja      short def_454e58
jmp     ds:jpt_454e58[eax*4]
test    ebx, ebx
jz      short def_454e58
mov     eax, ebx
sub     eax, esi
cmp     eax, 1
sbb     ebp, ebp
and     ebp, 2
add     bp, 9
jmp     short def_454e58
mov     bp, 1
jmp     short def_454e58
mov     bp, 2
jmp     short def_454e58
mov     bp, 3
jmp     short def_454e58
mov     bp, 4
jmp     short def_454e58
mov     bp, 5
jmp     short def_454e58
mov     bp, 7
jmp     short def_454e58
mov     bp, 6
jmp     short def_454e58
mov     bp, 0ah
jmp     short def_454e58
mov     bp, 8
mov     esi, [esp+1b0h+lpstring1]
push    ebp
movsx   edi, [esp+1b4h+arg_8]
push    1bdch
push    edi
push    esi
call    sub_47fe70
mov     [esp+1c0h+var_19e], ax
add     esp, 10h
cmp     bp, 9
jnz     short loc_454f1d
lea     eax, [esp+1b0h+string]
push    19ah
push    eax
push    ebx
call    sub_486100
lea     eax, [esp+1bch+string]
add     esp, 0ch
push    19ah
push    eax
call    sub_47fae0
lea     eax, [esp+1b8h+string]
add     esp, 8
push    eax
call    ds:lstrlena
movsx   ecx, [esp+1b0h+var_19e]
movsx   eax, ax
add     ecx, eax
cmp     ecx, edi
jge     short loc_454f1d
lea     eax, [esp+1b0h+string]
push    eax
push    esi
call    ds:lstrcata
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1a0h
retn
push    ebx
push    esi
push    edi
push    42h
push    20h
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_454fca
push    0
xor     eax, eax
mov     ax, ds:word_4a8518
push    0
shl     eax, 10h
xor     edi, edi
mov     al, 1
push    eax
call    sub_455730
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jz      short loc_454fbd
push    ebx
call    ds:globallock
mov     edi, eax
test    edi, edi
jnz     short loc_454fbd
push    ebx
call    sub_45ba00
add     esp, 4
mov     eax, [esi]
mov     edx, [esp+0ch+arg_0]
mov     [eax+8], edi
mov     ecx, [esi]
mov     [ecx], edx
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+hmem]
test    esi, esi
jz      short loc_455019
push    esi
call    ds:globallock
test    eax, eax
jz      short loc_455019
mov     eax, [eax+8]
test    eax, eax
jz      short loc_454ff4
push    eax
call    sub_455650
add     esp, 4
mov     eax, [esp+4+arg_4]
push    eax
push    esi
call    sub_455020
add     esp, 8
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
add     esp, 4
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
sub     esp, 8
push    esi
push    edi
mov     esi, [esp+10h+hmem]
push    esi
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      loc_4550bb
cmp     dword ptr [edi+4], 1
jnz     short loc_45506b
mov     ecx, [edi+0ch]
test    ecx, ecx
jz      short loc_45506b
lea     eax, [esp+10h+pmem]
lea     edx, [esp+10h+pmem+2]
push    eax
push    edx
push    ecx
call    sub_456240
add     esp, 0ch
test    eax, eax
jnz     short loc_45506b
mov     eax, [esp+10h+pmem+2]
push    eax
call    sub_455650
add     esp, 4
cmp     dword ptr [edi+4], 3
jnz     short loc_4550a1
mov     eax, [edi+0ch]
test    eax, eax
jz      short loc_455081
push    eax
call    sub_455650
add     esp, 4
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_455091
push    eax
call    sub_455650
add     esp, 4
mov     eax, [edi+14h]
test    eax, eax
jz      short loc_4550a1
push    eax
call    sub_455650
add     esp, 4
add     edi, 0ch
xor     eax, eax
push    esi
mov     [edi], eax
mov     [edi+4], eax
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     [edi+10h], eax
call    ds:globalunlock
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
push    ebx
push    esi
mov     esi, [esp+8+hmem]
push    edi
push    ebp
test    esi, esi
jz      loc_4551a0
mov     eax, [esp+10h+arg_4]
push    3
push    eax
push    esi
call    sub_4551b0
add     esp, 0ch
test    eax, eax
jz      loc_4551a0
mov     eax, [esi]
cmp     dword ptr [eax+0ch], 0
jnz     short loc_455107
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+10h+arg_c]
mov     ecx, [esp+10h+lpstring]
push    eax
push    ecx
push    esi
call    sub_455260
add     esp, 0ch
cmp     eax, 0ffffffffh
jz      short loc_45512f
test    eax, eax
jz      short loc_45513f
cmp     eax, 1
jz      short loc_455150
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esi]
pop     ebp
pop     edi
pop     esi
mov     dword ptr [eax+1ch], 0
xor     eax, eax
pop     ebx
retn
mov     eax, [esi]
pop     ebp
pop     edi
pop     esi
cmp     dword ptr [eax+1ch], 1
sbb     eax, eax
pop     ebx
and     eax, 0fffffffeh
inc     eax
retn
mov     eax, [esi]
mov     dword ptr [eax+1ch], 0
mov     eax, [esi]
mov     edi, [eax+18h]
mov     ebx, [eax+0ch]
mov     ecx, [eax+10h]
lea     ebp, [ecx+edi*4]
mov     eax, edi
sub     ebp, 4
dec     edi
test    eax, eax
jle     short loc_45518d
mov     eax, [ebp+0]
push    eax
push    ebx
call    sub_4562e0
add     esp, 8
cmp     eax, 1
jz      short loc_455167
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esi]
pop     ebp
pop     edi
pop     esi
mov     dword ptr [eax+1ch], 1
mov     eax, 1
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+hmem]
push    edi
mov     eax, [esi]
mov     ebx, [esp+0ch+arg_8]
mov     edi, [esp+0ch+arg_4]
cmp     [eax+4], ebx
jnz     short loc_4551d3
cmp     [eax], edi
jnz     short loc_4551d3
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    0
push    esi
call    sub_455020
add     esp, 8
mov     eax, [esi]
cmp     ebx, 1
mov     [eax+4], ebx
mov     eax, [esi]
mov     [eax], edi
jz      short loc_455230
cmp     ebx, 2
jz      short loc_455230
push    0
mov     eax, [esi]
push    0
mov     ecx, [eax]
push    ecx
call    sub_455730
add     esp, 0ch
mov     edi, eax
test    edi, edi
jz      short loc_455227
push    edi
call    ds:globallock
test    eax, eax
jnz     short loc_455222
push    edi
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esi]
mov     [ecx+0ch], eax
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    offset sub_455650
push    offset sub_455630
call    sub_4561e0
add     esp, 8
mov     ecx, [esi]
pop     edi
mov     [ecx+0ch], eax
mov     ecx, [esi]
pop     esi
pop     ebx
cmp     dword ptr [ecx+0ch], 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_0]
sub     esp, 210h
push    ebx
mov     ecx, [eax]
push    esi
push    edi
mov     esi, [esp+21ch+lpstring]
push    ebp
cmp     dword ptr [ecx+18h], 0
jnz     short loc_455289
cmp     byte ptr [esi], 0
jz      short loc_455289
mov     eax, 1
jmp     short loc_455290
mov     eax, [esp+220h+arg_8]
test    eax, eax
jnz     short loc_4552a1
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 210h
retn
lea     eax, [esp+220h+string2]
push    200h
push    eax
push    esi
call    ds:lstrlena
push    eax
push    esi
call    sub_455490
mov     [esp+230h+var_210], eax
mov     eax, [esp+230h+arg_0]
add     esp, 10h
mov     eax, [eax]
mov     ecx, [eax+18h]
sub     ecx, [esp+220h+var_210]
cmp     ecx, 1
sbb     edi, edi
inc     edi
jnz     short loc_455314
mov     ebx, [eax+14h]
lea     ebp, [esp+220h+string2]
xor     esi, esi
cmp     [esp+220h+var_210], esi
jle     short loc_455314
push    ebp
push    ebx
call    ds:lstrcmpia
cmp     eax, 1
sbb     edi, edi
inc     edi
jnz     short loc_455314
push    ebx
inc     esi
call    ds:lstrlena
lea     ebx, [eax+ebx+1]
push    ebp
call    ds:lstrlena
lea     ebp, [eax+ebp+1]
cmp     esi, [esp+220h+var_210]
jl      short loc_4552e7
xor     ebx, ebx
test    edi, edi
jz      loc_455428
mov     eax, [esp+220h+arg_0]
push    ebx
mov     ecx, [esp+224h+arg_0]
mov     eax, [eax]
mov     esi, [eax+0ch]
mov     [eax+0ch], ebx
add     eax, 0ch
push    ecx
call    sub_455020
mov     eax, [esp+228h+arg_0]
add     esp, 8
mov     ecx, [eax]
cmp     [esp+220h+var_210], ebx
mov     [ecx+0ch], esi
jz      loc_455428
mov     eax, [esp+220h+var_210]
push    42h
shl     eax, 2
mov     [esp+224h+var_204], ebx
mov     [esp+224h+var_208], ebx
push    eax
call    sub_45b8f0
mov     [esp+228h+hmem], eax
add     esp, 8
cmp     eax, ebx
jz      short loc_4553ed
push    eax
call    ds:globallock
mov     [esp+220h+var_204], eax
cmp     eax, ebx
jz      short loc_4553ed
xor     ebp, ebp
lea     edi, [esp+220h+string2]
cmp     [esp+220h+var_210], ebx
jle     short loc_4553b6
mov     ebx, eax
mov     esi, [esp+220h+var_210]
push    ebx
push    edi
add     ebx, 4
call    sub_4562a0
add     esp, 8
push    edi
call    ds:lstrlena
inc     eax
add     ebp, eax
add     edi, eax
dec     esi
jnz     short loc_45539a
push    42h
lea     eax, [ebp+1]
push    eax
call    sub_45b8f0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_4553ed
push    ebx
call    ds:globallock
mov     [esp+220h+var_208], eax
test    eax, eax
jz      short loc_4553ed
lea     esi, [esp+220h+string2]
mov     edi, eax
mov     ecx, ebp
shr     ecx, 2
rep movsd
mov     ecx, ebp
and     ecx, 3
rep movsb
cmp     [esp+220h+hmem], 0
jz      short loc_45545b
test    ebx, ebx
jz      short loc_455438
cmp     [esp+220h+var_204], 0
jz      short loc_455438
cmp     [esp+220h+var_208], 0
jz      short loc_455438
mov     eax, [esp+220h+arg_0]
mov     edx, [esp+220h+var_204]
mov     ecx, [eax]
mov     [ecx+10h], edx
mov     ecx, [eax]
mov     edx, [esp+220h+var_208]
mov     [ecx+14h], edx
mov     ecx, [eax]
mov     edx, [esp+220h+var_210]
mov     [ecx+18h], edx
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 210h
retn
cmp     [esp+220h+hmem], 0
jz      short loc_45545b
mov     eax, [esp+220h+hmem]
mov     esi, ds:globalunlock
push    eax
call    esi
mov     ecx, [esp+220h+hmem]
push    ecx
call    sub_45ba00
add     esp, 4
jmp     short loc_455461
mov     esi, ds:globalunlock
test    ebx, ebx
jz      short loc_455471
push    ebx
call    esi
push    ebx
call    sub_45ba00
add     esp, 4
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 210h
retn
mov     eax, [esp+arg_c]
sub     esp, 44h
push    ebx
push    esi
mov     esi, [esp+4ch+lpstring]
push    edi
mov     ecx, [esp+50h+arg_4]
push    ebp
push    eax
push    esi
mov     eax, [esp+5ch+arg_0]
push    ecx
push    eax
call    sub_455540
add     esp, 10h
mov     edi, eax
test    edi, edi
jz      short loc_455529
mov     ebx, esi
mov     [esp+54h+var_44], edi
xor     edi, edi
mov     eax, [esp+54h+var_44]
dec     [esp+54h+var_44]
test    eax, eax
jle     short loc_455522
lea     eax, [esp+54h+string]
push    esi
push    eax
call    sub_47c6d0
add     esp, 8
test    eax, eax
jnz     short loc_455522
lea     eax, [esp+54h+string]
push    eax
call    ds:lstrlena
lea     ebp, [eax+1]
cmp     word ptr [esp+54h+arg_c], bp
jbe     short loc_455522
push    esi
inc     edi
call    ds:lstrlena
lea     esi, [eax+esi+1]
lea     eax, [esp+54h+string]
push    eax
push    ebx
call    ds:lstrcpya
movzx   eax, bp
sub     word ptr [esp+54h+arg_c], bp
add     ebx, eax
mov     eax, [esp+54h+var_44]
dec     [esp+54h+var_44]
test    eax, eax
jg      short loc_4554cd
test    edi, edi
jle     short loc_455529
mov     byte ptr [ebx], 0
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     bp, [esp+10h+arg_4]
xor     ebx, ebx
mov     ax, bp
dec     bp
test    ax, ax
jz      short loc_4555ac
push    esi
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_455582
push    esi
call    sub_45b810
add     esp, 4
test    eax, eax
jz      short loc_45557a
cmp     byte ptr [esi], 27h
jnz     short loc_455582
test    edi, edi
jnz     short loc_4555a1
mov     edi, esi
jmp     short loc_4555a1
mov     eax, [esp+10h+arg_c]
lea     ecx, [esp+10h+arg_8]
push    eax
push    ecx
mov     eax, esi
sub     eax, edi
push    eax
push    edi
call    sub_4555d0
add     esp, 10h
test    eax, eax
jz      short loc_45559f
inc     ebx
xor     edi, edi
mov     ax, bp
inc     esi
dec     bp
test    ax, ax
jnz     short loc_45555b
mov     eax, [esp+10h+arg_c]
lea     ecx, [esp+10h+arg_8]
push    eax
sub     esi, edi
push    ecx
push    esi
push    edi
call    sub_4555d0
add     esp, 10h
test    eax, eax
jz      short loc_4555c7
inc     ebx
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_8]
push    edi
mov     esi, [esp+0ch+arg_0]
push    ebp
mov     ebp, [ebx]
test    esi, esi
jz      short loc_45561b
mov     edx, [esp+10h+arg_4]
cmp     edx, 40h
jge     short loc_45561b
mov     eax, [esp+10h+arg_c]
and     eax, 0ffffh
cmp     eax, edx
jle     short loc_45561b
mov     edi, ebp
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
add     ebp, edx
and     ecx, 3
inc     ebp
rep movsb
mov     byte ptr [ebp-1], 0
mov     eax, 1
mov     [ebx], ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+dwbytes]
push    2
push    eax
call    sub_45b8f0
add     esp, 8
test    eax, eax
jz      short loc_45564b
push    eax
call    ds:globallock
retn
xor     eax, eax
retn
mov     eax, [esp+pmem]
push    esi
push    eax
call    ds:globalhandle
mov     esi, eax
test    esi, esi
jz      short loc_455672
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
add     esp, 4
pop     esi
retn
mov     ds:dword_4a8530, 0
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+arg_0]
test    edi, edi
jnz     short loc_4556a9
mov     eax, [esi]
push    eax
call    sub_408f90
add     esp, 4
test    eax, eax
jz      short loc_4556a9
mov     [esi], eax
push    edi
mov     eax, [esi]
push    eax
call    sub_4556e0
mov     cx, ax
add     esp, 8
test    cx, cx
jz      short loc_4556d0
mov     eax, [esi]
pop     edi
shr     eax, 10h
pop     esi
movzx   eax, ax
movzx   ecx, cx
shl     eax, 10h
or      eax, ecx
retn
xor     eax, eax
pop     edi
mov     ds:dword_4a8530, 138ah
pop     esi
retn
cmp     [esp+arg_4], 1
mov     ecx, [esp+arg_0]
mov     eax, ecx
jnz     short loc_45570f
shr     eax, 10h
mov     edx, dword_4ae1e0
movsx   eax, ax
shl     eax, 6
mov     eax, [eax+edx+10h]
xor     edx, edx
mov     dl, ch
mov     eax, [eax]
mov     ax, [eax+edx*8+0c2h]
retn
shr     eax, 10h
movsx   edx, ax
shl     edx, 6
mov     eax, dword_4ae1e0
mov     edx, [edx+eax+10h]
mov     eax, [edx]
xor     edx, edx
mov     dl, ch
mov     ax, [eax+edx*8+0c0h]
retn
mov     eax, [esp+arg_8]
sub     esp, 4
lea     ecx, [esp+4+arg_0]
push    ebx
push    esi
push    edi
push    ebp
push    eax
xor     ebp, ebp
push    ecx
call    sub_455680
add     esp, 8
mov     esi, eax
cmp     esi, ebp
jz      short loc_4557cd
push    esi
call    sub_470640
add     esp, 4
mov     edi, eax
cmp     edi, ebp
jz      short loc_45579d
xor     eax, eax
mov     al, [esp+14h+arg_0]
lea     ecx, ds:0[eax*4]
add     ecx, [edi]
mov     ebx, [ecx+4]
sub     bx, [ecx]
jz      short loc_455783
push    eax
push    edi
call    sub_489b80
add     esp, 8
mov     ebp, eax
mov     eax, [esp+14h+arg_4]
test    eax, eax
jz      short loc_455790
movzx   ecx, bx
mov     [eax], ecx
push    0
push    esi
call    sub_470920
add     esp, 8
jmp     short loc_4557a2
mov     bx, [esp+14h+var_2]
test    edi, edi
jnz     short loc_4557ba
mov     eax, ds:dword_4a9a0c
mov     ds:dword_4a8530, eax
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
test    ebp, ebp
jnz     short loc_4557cd
test    bx, bx
jz      short loc_4557cd
mov     ds:dword_4a8530, 8
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ecx, [esp+arg_0]
mov     al, [ecx]
inc     ecx
add     al, [esp+arg_4]
xor     al, ds:byte_4ab290
cmp     byte ptr [ecx], 0
jz      short locret_455809
xor     edx, edx
inc     ecx
mov     dl, al
mov     al, ds:byte_4ab290[edx]
xor     al, [ecx-1]
cmp     byte ptr [ecx], 0
jnz     short loc_4557f6
retn
push    esi
mov     ecx, 1
push    edi
xor     eax, eax
mov     esi, [esp+8+arg_4]
mov     edx, [esp+8+arg_0]
mov     [esi], eax
mov     edi, 1
shl     edi, cl
test    edi, edi
jz      short loc_45583e
test    edx, edx
jz      short loc_45583e
test    eax, eax
jz      short loc_45583c
mov     dword ptr [esi], 1
mov     eax, ecx
inc     ecx
cmp     ecx, 20h
jbe     short loc_455823
pop     edi
pop     esi
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    esi
mov     esi, ecx
push    eax
push    7a129h
call    sub_455810
add     esp, 8
mov     [esi], eax
cmp     [esp+8+var_4], 0
jz      short loc_455873
inc     dword ptr [esi]
mov     eax, esi
pop     esi
add     esp, 4
retn
fldln2
fld     ds:dbl_4ab390
fyl2x
sub     esp, 0ch
push    esi
push    edi
mov     esi, [esp+14h+arg_0]
mov     edi, [esi]
sub     esp, 8
mov     dword ptr [esp+1ch+var_8], edi
mov     dword ptr [esp+1ch+var_8+4], 0
fild    [esp+1ch+var_8]
pushf
cmp     dword_4af150, 0
jnz     short loc_4558b6
fdivp   st(1), st
jmp     short loc_4558bf
push    eax
mov     al, 0dh
call    unknown_libname_3
pop     eax
popf
fmul    ds:dbl_4ab398
fstp    [esp+1ch+x]
call    _ceil
add     esp, 8
call    __ftol
fld     ds:dbl_4ab398
mov     dword ptr [esp+14h+var_8], eax
sub     esp, 8
mov     [esi+8], eax
mov     dword ptr [esp+1ch+var_8+4], 0
fild    [esp+1ch+var_8]
pushf
cmp     dword_4af150, 0
jnz     short loc_455900
fdivp   st(1), st
jmp     short loc_455909
push    eax
mov     al, 0dh
call    unknown_libname_3
pop     eax
popf
fstp    [esp+1ch+x]
call    _ceil
add     esp, 8
call    __ftol
mov     ecx, [esi+8]
mov     [esi+4], eax
lea     eax, [esp+14h+var_c]
push    eax
push    ecx
call    sub_455810
add     esp, 8
mov     [esi+0ch], eax
cmp     [esp+14h+var_c], 0
jz      short loc_45593b
inc     dword ptr [esi+0ch]
mov     eax, [esi+0ch]
inc     eax
imul    eax, edi
add     eax, [esi+4]
mov     ecx, eax
mov     [esi+10h], eax
shr     ecx, 3
add     ecx, 3
test    al, 7
mov     [esi+14h], ecx
jz      short loc_45595b
inc     ecx
mov     [esi+14h], ecx
xor     eax, eax
pop     edi
pop     esi
add     esp, 0ch
retn    4
mov     ecx, [esp+arg_0]
mov     dl, [ecx+8]
mov     eax, [ecx+4]
shl     dl, 7
shr     eax, 10h
or      dl, al
mov     eax, [ecx]
mov     [eax], dl
mov     edx, [ecx+4]
mov     eax, [ecx]
mov     [eax+1], dh
mov     dl, [ecx+4]
mov     eax, [ecx]
mov     [eax+2], dl
xor     eax, eax
retn    4
mov     eax, [esp+arg_0]
push    ebx
xor     ebx, ebx
mov     ecx, [eax]
mov     dl, [ecx]
shr     dl, 7
mov     [eax+8], dl
mov     dl, [ecx]
and     dl, 7fh
mov     bl, dl
xor     edx, edx
shl     ebx, 10h
mov     dl, [ecx+1]
shl     edx, 8
or      ebx, edx
xor     edx, edx
mov     dl, [ecx+2]
or      ebx, edx
mov     [eax+4], ebx
xor     eax, eax
pop     ebx
retn    4
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    ebp
mov     esi, [ecx]
sub     si, 8
mov     ebp, [eax]
mov     di, 1
push    0
push    ebp
xor     ebx, ebx
call    sub_4557e0
add     esp, 8
mov     bl, al
test    si, si
jle     short loc_455a32
cmp     di, 4
jnb     short loc_455a32
sub     si, 8
push    edi
push    ebp
call    sub_4557e0
add     esp, 8
xor     edx, edx
mov     dl, al
lea     ecx, ds:0[edi*8]
shl     edx, cl
inc     di
or      ebx, edx
test    si, si
jg      short loc_455a08
mov     eax, [esp+10h+arg_0]
pop     ebp
pop     edi
pop     esi
mov     [eax+4], ebx
xor     eax, eax
pop     ebx
retn    4
mov     edx, [esp+arg_0]
sub     esp, 4
push    ebx
mov     ecx, [edx+0ch]
push    esi
push    edi
push    ebp
mov     edi, [edx+18h]
mov     esi, [edx+8]
mov     ebp, [edx+4]
test    ebp, ebp
jnz     short loc_455a78
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
dec     ecx
jns     short loc_455ac2
inc     esi
test    esi, 3
jz      short loc_455a9b
cmp     byte ptr [edi+esi], 0
jnz     short loc_455a93
inc     esi
test    esi, 3
jnz     short loc_455a84
test    esi, 3
jnz     short loc_455aaa
cmp     dword ptr [edi+esi], 0
jnz     short loc_455aaa
add     esi, 4
cmp     dword ptr [edi+esi], 0
jz      short loc_455aa1
cmp     byte ptr [edi+esi], 0
jnz     short loc_455ab7
inc     esi
cmp     byte ptr [edi+esi], 0
jz      short loc_455ab0
xor     eax, eax
xor     ecx, ecx
mov     al, [edi+esi]
mov     cl, [eax+edx+20h]
mov     al, [edi+esi]
shr     al, cl
test    al, 1
jz      short loc_455a78
lea     eax, ds:0[esi*8]
sub     eax, ecx
add     eax, 7
test    ecx, ecx
jle     short loc_455afb
xor     ebx, ebx
mov     bl, [edi+esi]
mov     [esp+14h+var_4], 0
mov     bl, [ebx+edx+11fh]
mov     byte ptr [esp+14h+var_4], bl
cmp     [esp+14h+var_4], ecx
jnz     short loc_455afb
xor     ecx, ecx
dec     ebp
mov     [edx+8], esi
mov     [edx+4], ebp
mov     [edx+0ch], ecx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 28h
mov     word ptr [esp+28h+var_8], 3
mov     word ptr [esp+28h+var_8+2], 7
push    ebx
push    esi
mov     esi, [esp+30h+arg_8]
push    edi
push    ebp
mov     eax, esi
shr     eax, 3
mov     ecx, esi
add     ax, 3
mov     edx, [esp+38h+arg_0]
mov     word ptr [esp+38h+var_10], ax
mov     ax, 7
and     cx, ax
sub     ax, cx
mov     ecx, [edx]
mov     bx, 7
mov     word ptr [esp+38h+var_10+2], ax
lea     eax, [ecx+esi]
mov     edi, eax
mov     [edx+4], ecx
shr     edi, 3
mov     dword ptr [edx+0ch], 8
add     di, 3
push    edx
and     ax, bx
sub     bx, ax
mov     eax, [edx+1ch]
shr     eax, 3
mov     [edx+8], eax
call    sub_455a50
add     esp, 4
test    esi, esi
jz      loc_455cbb
mov     ecx, [esp+38h+arg_c]
mov     [esp+38h+var_14], esi
dec     ecx
mov     esi, [esp+38h+arg_4]
mov     [esp+38h+var_18], 0
mov     [esp+38h+var_1c], ecx
mov     [esp+38h+var_24], 0
cmp     eax, [esp+38h+var_1c]
ja      short loc_455c0b
mov     ecx, [esp+38h+arg_10]
dec     ecx
mov     [esp+38h+var_20], ecx
sub     eax, [esp+38h+var_18]
mov     ecx, [esp+38h+var_20]
inc     [esp+38h+var_24]
mov     [esp+38h+var_28], ecx
test    ecx, ecx
jl      short loc_455bf8
mov     edx, eax
mov     cl, byte ptr [esp+38h+var_28]
shr     edx, cl
and     dl, 1
jz      short loc_455be4
movzx   ebp, di
mov     cl, bl
shl     dl, cl
or      [ebp+esi+0], dl
dec     bx
cmp     bx, 0ffffh
jnz     short loc_455bf2
mov     bx, 7
inc     di
dec     [esp+38h+var_28]
jns     short loc_455bcc
mov     edx, [esp+38h+arg_0]
push    edx
call    sub_455a50
add     esp, 4
cmp     eax, [esp+38h+var_1c]
jbe     short loc_455bb8
xor     ecx, ecx
mov     edx, 1
cmp     ecx, [esp+38h+var_24]
adc     edx, 0ffffffffh
test    dl, dl
jz      short loc_455c31
mov     ebp, [esp+38h+var_8]
mov     cl, byte ptr [esp+38h+var_8+2]
and     ebp, 0ffffh
shl     dl, cl
or      [ebp+esi+0], dl
dec     word ptr [esp+38h+var_8+2]
cmp     word ptr [esp+38h+var_8+2], 0ffffh
jnz     short loc_455c4a
mov     word ptr [esp+38h+var_8+2], 7
inc     word ptr [esp+38h+var_8]
cmp     [esp+38h+var_24], 0
jz      short loc_455ca5
dec     [esp+38h+var_24]
jz      short loc_455c8c
mov     ebp, [esp+38h+var_10]
mov     dl, 1
and     ebp, 0ffffh
mov     cl, byte ptr [esp+38h+var_10+2]
shl     dl, cl
dec     word ptr [esp+38h+var_10+2]
or      [ebp+esi+0], dl
cmp     word ptr [esp+38h+var_10+2], 0ffffh
jnz     short loc_455c86
mov     word ptr [esp+38h+var_10+2], 7
inc     word ptr [esp+38h+var_10]
dec     [esp+38h+var_24]
jnz     short loc_455c57
dec     word ptr [esp+38h+var_10+2]
cmp     word ptr [esp+38h+var_10+2], 0ffffh
jnz     short loc_455ca5
mov     word ptr [esp+38h+var_10+2], 7
inc     word ptr [esp+38h+var_10]
mov     ecx, [esp+38h+arg_c]
add     [esp+38h+var_18], ecx
add     [esp+38h+var_1c], ecx
dec     [esp+38h+var_14]
jnz     loc_455ba1
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
push    ebx
push    esi
push    edi
mov     esi, ecx
push    ebp
call    sub_455850
mov     edi, [esp+10h+arg_8]
mov     eax, [esp+10h+arg_0]
mov     ecx, [esp+10h+arg_4]
push    21eh
mov     dword ptr [edi], 0
mov     [esi+8], eax
mov     [esi+0ch], ecx
call    eax
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_455d12
mov     eax, esi
pop     ebp
mov     dword ptr [edi], 3
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, ebp
xor     eax, eax
mov     ecx, 87h
push    40ee84a4h
rep stosd
stosw
xor     ebx, ebx
mov     [esi+4], ebp
push    ebx
call    _ceil
fadd    ds:dbl_4ab3a8
mov     di, 1
add     esp, 8
call    __ftol
mov     [ebp+10h], eax
mov     dword ptr [ebp+1ch], 0ffffffffh
mov     [ebp+11fh], bl
mov     [ebp+20h], bl
mov     ax, 7
mov     edx, 1
mov     bx, di
mov     cl, al
sar     bx, cl
test    bl, 1
jz      short loc_455d81
movsx   ecx, di
test    edx, edx
lea     ebx, [ecx+ebp]
mov     cl, al
mov     [ebx+11fh], cl
jz      short loc_455d81
xor     edx, edx
mov     [ebx+20h], cl
dec     ax
jns     short loc_455d5d
inc     di
cmp     di, 0ffh
jl      short loc_455d54
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    0ch
push    esi
mov     eax, [ecx+4]
mov     esi, ecx
mov     ecx, [eax+18h]
push    ecx
call    dword ptr [esi+0ch]
add     esp, 4
mov     ecx, [esi+4]
push    ecx
call    dword ptr [esi+0ch]
add     esp, 4
pop     esi
retn
sub     esp, 34h
mov     [esp+34h+var_34], ecx
push    ebx
push    esi
push    edi
push    ebp
mov     esi, [ecx+4]
mov     ebp, [esi]
test    ebp, ebp
jnz     short loc_455df7
mov     eax, [esp+44h+var_34]
push    3
call    dword ptr [eax+8]
mov     ebx, [esp+48h+arg_0]
add     esp, 4
pop     ebp
mov     [ebx], eax
mov     word ptr [eax], 0
pop     edi
xor     eax, eax
pop     esi
pop     ebx
add     esp, 34h
retn    4
lea     eax, [esp+44h+var_18]
mov     ecx, [esp+44h+var_34]
mov     [esp+44h+var_18], ebp
push    eax
call    sub_455880
mov     eax, [esp+44h+var_10]
mov     ecx, [esp+44h+var_c]
mov     edx, [esp+44h+var_14]
mov     edi, [esp+44h+var_4]
mov     [esp+44h+var_2c], eax
mov     [esp+44h+var_28], ecx
cmp     [esp+44h+var_8], 7a129h
mov     [esp+44h+var_30], edx
jb      short loc_455ea3
mov     edi, [esi+10h]
mov     eax, [esp+44h+var_34]
add     edi, 6
push    edi
call    dword ptr [eax+8]
mov     ebx, [esp+48h+arg_0]
add     esp, 4
test    eax, eax
mov     [ebx], eax
jnz     short loc_455e59
mov     eax, 3
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    4
mov     [eax], di
add     ebx, 4
lea     eax, [esp+44h+var_24]
mov     ecx, [esp+44h+var_34]
mov     [esp+44h+var_24], ebx
push    eax
mov     [esp+48h+var_1c], 1
mov     [esp+48h+var_20], ebp
call    sub_455970
xor     eax, eax
mov     edi, [ebx-4]
mov     ax, [esi+10h]
add     edi, 5
mov     esi, [esi+18h]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
pop     ebp
and     ecx, 3
rep movsb
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    4
lea     eax, [edi+3]
mov     ebx, [esp+44h+var_34]
push    eax
call    dword ptr [ebx+8]
mov     ebx, [esp+48h+arg_0]
add     esp, 4
test    eax, eax
mov     [ebx], eax
jnz     short loc_455eca
mov     eax, 3
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    4
lea     ecx, [edi+3]
movzx   edx, di
mov     [eax], cx
xor     eax, eax
mov     edi, [ebx]
mov     ecx, edx
shr     ecx, 2
add     edi, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     eax, [ebx]
mov     ecx, [esp+44h+var_34]
add     eax, 2
mov     [esp+44h+var_20], ebp
mov     [esp+44h+var_1c], 0
mov     [esp+44h+var_24], eax
lea     eax, [esp+44h+var_24]
push    eax
call    sub_455970
mov     ecx, [esp+44h+var_28]
mov     edx, [esp+44h+var_2c]
mov     eax, [esp+44h+var_30]
push    ecx
push    edx
push    eax
mov     eax, [ebx]
add     eax, 2
push    eax
push    esi
call    sub_455b10
add     esp, 14h
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    4
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+0ch+arg_4]
mov     eax, [esp+0ch+arg_0]
mov     ecx, edi
mov     ebx, edi
shr     ecx, 3
mov     dl, [ecx+eax+3]
mov     cl, 7
and     bl, cl
sub     cl, bl
shr     dl, cl
test    dl, 1
jnz     short loc_455f6e
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     ebx, 3
mov     ecx, 7
test    edi, edi
jz      short loc_455f96
mov     dl, [ebx+eax]
shr     dl, cl
test    dl, 1
jz      short loc_455f87
inc     esi
dec     ecx
cmp     ecx, 0ffffffffh
jnz     short loc_455f93
mov     ecx, 7
inc     ebx
dec     edi
jnz     short loc_455f7c
mov     eax, [esp+0ch+arg_8]
pop     edi
mov     [eax], esi
xor     eax, eax
pop     esi
pop     ebx
retn
push    ebx
xor     edx, edx
mov     eax, [esp+4+arg_4]
push    esi
push    edi
xor     esi, esi
push    ebp
mov     edi, eax
shr     edi, 3
mov     ecx, 7
add     edi, 3
and     eax, ecx
sub     ecx, eax
mov     ebp, [esp+10h+arg_8]
cmp     ebp, edx
jl      short loc_455ffc
mov     eax, [esp+10h+arg_0]
test    ebp, ebp
jle     short loc_455fe0
inc     esi
jmp     short loc_455fe1
inc     edx
mov     bl, [edi+eax]
shr     bl, cl
test    bl, 1
jnz     short loc_455fec
dec     ebp
dec     ecx
cmp     ecx, 0ffffffffh
jnz     short loc_455ff8
mov     ecx, 7
inc     edi
test    ebp, ebp
jge     short loc_455fdb
mov     eax, [esp+10h+arg_c]
mov     ecx, [esp+10h+arg_10]
pop     ebp
pop     edi
mov     [eax], esi
xor     eax, eax
pop     esi
mov     [ecx], edx
pop     ebx
retn
sub     esp, 8
push    ebx
push    esi
mov     ebx, [esp+10h+arg_4]
push    edi
push    ebp
mov     eax, [ebx+0ch]
imul    eax, [esp+18h+arg_10]
add     eax, [ebx+4]
mov     edx, 7
add     eax, [ebx]
mov     ecx, [esp+18h+arg_8]
mov     esi, eax
mov     edi, [ebx+8]
shr     esi, 3
and     eax, edx
add     esi, 3
sub     edx, eax
imul    edi, [esp+18h+arg_c]
sub     ecx, edi
mov     ebp, [esp+18h+arg_0]
mov     [esp+18h+var_4], ecx
xor     edi, edi
mov     ebx, [esp+18h+arg_4]
mov     eax, [ebx+0ch]
dec     eax
mov     [esp+18h+var_8], eax
mov     eax, [ebx+0ch]
dec     eax
js      short loc_45608b
mov     bl, [esi+ebp]
mov     cl, dl
xor     eax, eax
dec     edx
shr     bl, cl
and     bl, 1
mov     cl, byte ptr [esp+18h+var_8]
mov     al, bl
shl     eax, cl
or      edi, eax
cmp     edx, 0ffffffffh
jnz     short loc_456085
mov     edx, 7
inc     esi
dec     [esp+18h+var_8]
jns     short loc_456063
cmp     edi, [esp+18h+var_4]
jnb     short loc_456097
dec     [esp+18h+arg_14]
jnz     short loc_45604f
sub     edi, [esp+18h+var_4]
pop     ebp
cmp     edi, 1
pop     edi
sbb     eax, eax
pop     esi
inc     eax
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 30h
push    ebx
push    esi
push    edi
mov     ebx, 7a129h
mov     edi, ecx
sub     edx, edx
mov     ecx, [eax]
mov     eax, [eax+8]
div     ebx
cmp     word ptr [ecx], 0
lea     esi, [ecx+2]
mov     ebx, edx
jnz     short loc_4560e3
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn    4
lea     eax, [esp+3ch+var_24]
mov     ecx, edi
mov     [esp+3ch+var_24], esi
push    eax
call    sub_4559a0
cmp     [esp+3ch+var_1c], 1
jnz     short loc_45611c
mov     eax, ebx
mov     cl, 7
shr     eax, 3
and     bl, cl
sub     cl, bl
mov     al, [eax+esi+3]
shr     al, cl
and     al, 1
pop     edi
pop     esi
cmp     al, 1
sbb     eax, eax
pop     ebx
neg     eax
add     esp, 30h
retn    4
mov     eax, [esp+3ch+var_20]
mov     ecx, edi
mov     [esp+3ch+var_18], eax
lea     eax, [esp+3ch+var_18]
push    eax
call    sub_455880
mov     eax, ebx
sub     edx, edx
div     [esp+3ch+var_10]
mov     edi, eax
lea     ecx, [esp+3ch+var_28]
push    ecx
push    edi
push    esi
call    sub_455f40
add     esp, 0ch
test    eax, eax
jnz     short loc_456188
lea     eax, [esp+3ch+var_2c]
lea     ecx, [esp+3ch+var_30]
mov     edx, [esp+3ch+var_28]
push    eax
mov     eax, [esp+40h+var_14]
push    ecx
push    edx
push    eax
push    esi
call    sub_455fb0
add     esp, 14h
test    eax, eax
jnz     short loc_456188
mov     eax, [esp+3ch+var_2c]
mov     ecx, [esp+3ch+var_30]
lea     edx, [esp+3ch+var_18]
push    eax
push    ecx
push    edi
push    ebx
push    edx
push    esi
call    sub_456010
add     esp, 18h
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn    4
mov     eax, [esp+arg_0]
test    eax, eax
jnz     short loc_4561ab
xor     eax, eax
retn
cmp     eax, 1
jnz     short loc_4561b6
mov     eax, 2
retn
cmp     eax, 2
jnz     short loc_4561c1
mov     eax, 80h
retn
sub     eax, 3
cmp     eax, 1
sbb     eax, eax
and     eax, 0ffffff83h
add     eax, 80h
retn
sub     esp, 4
push    esi
push    10h
mov     esi, 0
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_45620f
lea     ecx, [esp+8+var_4]
mov     edx, [esp+8+arg_4]
mov     esi, [esp+8+arg_0]
push    ecx
push    edx
mov     ecx, eax
push    esi
call    sub_455cd0
mov     esi, eax
test    esi, esi
jz      short loc_456230
cmp     [esp+8+var_4], 0
jz      short loc_456230
test    esi, esi
jz      short loc_45622e
mov     ecx, esi
call    sub_455da0
push    esi
call    ??3@yaxpax@z
add     esp, 4
xor     esi, esi
mov     eax, esi
pop     esi
add     esp, 4
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    esi
mov     esi, [esp+8+block]
push    edi
push    eax
mov     ecx, esi
call    sub_455dc0
cmp     [esp+0ch+var_4], 0
mov     edi, eax
jz      short loc_456295
mov     ecx, [esp+0ch+var_4]
mov     eax, [esp+0ch+arg_4]
test    esi, esi
mov     [eax], ecx
mov     cx, [ecx]
mov     eax, [esp+0ch+arg_8]
mov     [eax], cx
jz      short loc_456286
mov     ecx, esi
call    sub_455da0
push    esi
call    ??3@yaxpax@z
add     esp, 4
push    edi
call    sub_4561a0
add     esp, 4
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, 3
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 0ch
lea     ecx, [esp+0ch+var_c]
call    sub_455850
mov     eax, [esp+0ch+arg_0]
lea     ecx, [esp+0ch+var_c]
mov     [esp+0ch+var_8], eax
lea     eax, [esp+0ch+var_8]
push    eax
call    sub_4559e0
mov     edx, [esp+0ch+var_4]
mov     ecx, [esp+0ch+arg_4]
push    eax
mov     [ecx], edx
call    sub_4561a0
add     esp, 10h
retn
sub     esp, 10h
lea     ecx, [esp+10h+var_10]
call    sub_455850
mov     eax, [esp+10h+arg_0]
mov     ecx, [esp+10h+arg_4]
mov     [esp+10h+var_c], eax
mov     [esp+10h+var_4], ecx
lea     eax, [esp+10h+var_c]
lea     ecx, [esp+10h+var_10]
push    eax
call    sub_4560b0
test    eax, eax
jnz     short loc_456317
mov     eax, 1
add     esp, 10h
retn
push    eax
call    sub_4561a0
add     esp, 14h
retn
mov     eax, 1
xor     ecx, ecx
mov     cl, [esp+arg_4]
dec     ecx
cmp     ecx, 5
ja      short def_456341
jmp     ds:jpt_456341[ecx*4]
mov     ecx, [esp+arg_0]
mov     eax, [esp+arg_c]
mov     edx, [esp+arg_8]
mov     [ecx+4], eax
xor     eax, eax
mov     [ecx], edx
fld     qword ptr [ecx]
fmul    [esp+arg_10]
fstp    qword ptr [ecx]
retn
mov     ecx, [esp+arg_0]
mov     dword ptr [ecx], 0e8000000h
mov     dword ptr [ecx+4], 40b5bba2h
fld     qword ptr [ecx]
fmul    [esp+arg_10]
fstp    qword ptr [ecx]
retn
mov     ecx, [esp+arg_0]
mov     dword ptr [ecx], 8b000000h
mov     dword ptr [ecx+4], 40bcfa2eh
fld     qword ptr [ecx]
fmul    [esp+arg_10]
fstp    qword ptr [ecx]
retn
mov     ecx, [esp+arg_0]
mov     dword ptr [ecx], 0
mov     dword ptr [ecx+4], 40c58880h
fld     qword ptr [ecx]
fmul    [esp+arg_10]
fstp    qword ptr [ecx]
retn
mov     ecx, [esp+arg_0]
mov     dword ptr [ecx], 0
mov     dword ptr [ecx+4], 40d58880h
fld     qword ptr [ecx]
fmul    [esp+arg_10]
fstp    qword ptr [ecx]
retn
sub     esp, 110h
call    sub_44f2d0
mov     ds:dword_4a8538, eax
test    eax, eax
jnz     short loc_45641d
xor     eax, eax
add     esp, 110h
retn
push    eax
mov     ds:dword_4a8538, eax
call    sub_456730
lea     eax, [esp+114h+buffer]
add     esp, 4
push    0
push    5e0h
push    105h
push    eax
call    sub_47fe70
lea     eax, [esp+120h+buffer]
add     esp, 10h
mov     ecx, ds:dword_4a8538
push    eax
push    ecx
call    sub_44f5b0
add     esp, 8
mov     ecx, ds:dword_4a8538
push    0
push    ecx
call    sub_44baf0
mov     [esp+118h+var_110], eax
add     esp, 8
cmp     [esp+110h+var_110], 0
jz      short loc_456480
push    edx
push    eax
call    sub_44ae90
add     esp, 8
jmp     short loc_45648a
mov     ds:dword_4a8538, 0
mov     eax, 1
add     esp, 110h
retn
mov     eax, ds:dword_4a8538
test    eax, eax
jz      short locret_4564b2
push    eax
call    sub_44f4a0
add     esp, 4
retn
sub     esp, 108h
mov     eax, ds:dword_4a8538
test    eax, eax
jnz     short loc_4564f3
mov     eax, [esp+108h+nsize]
mov     ecx, [esp+108h+lpdefault]
mov     edx, [esp+108h+lpreturnedstring]
push    eax
push    ecx
push    edx
call    sub_47f9f0
add     esp, 114h
retn
lea     ecx, [esp+108h+filename]
push    105h
push    ecx
push    eax
call    sub_44f640
lea     eax, [esp+114h+filename]
mov     ecx, [esp+114h+nsize]
mov     edx, [esp+114h+lpreturnedstring]
add     esp, 0ch
push    eax
push    ecx
mov     eax, [esp+110h+lpdefault]
push    edx
mov     ecx, [esp+114h+lpkeyname]
push    eax
mov     edx, [esp+118h+lpappname]
push    ecx
push    edx
call    ds:getprivateprofilestringa
add     esp, 108h
retn
sub     esp, 108h
mov     eax, ds:dword_4a8538
test    eax, eax
jnz     short loc_45655e
mov     ax, word ptr [esp+108h+arg_8]
add     esp, 108h
retn
lea     ecx, [esp+108h+filename]
push    105h
push    ecx
push    eax
call    sub_44f640
lea     eax, [esp+114h+filename]
mov     ecx, [esp+114h+lpkeyname]
mov     edx, [esp+114h+lpappname]
add     esp, 0ch
push    eax
mov     eax, [esp+10ch+arg_8]
and     eax, 0ffffh
push    eax
push    ecx
push    edx
call    ds:getprivateprofileinta
add     esp, 108h
retn
sub     esp, 210h
mov     ecx, ds:dword_4a8538
test    ecx, ecx
jnz     loc_456674
cmp     dword_4ade28, 0
jnz     loc_456674
mov     dword_4ade28, 1
call    sub_44f2d0
mov     ds:dword_4a8538, eax
test    eax, eax
jnz     short loc_4565e2
xor     eax, eax
add     esp, 210h
retn
push    eax
mov     ds:dword_4a8538, eax
call    sub_456730
lea     eax, [esp+214h+buffer]
add     esp, 4
push    0
push    5e0h
push    105h
push    eax
call    sub_47fe70
lea     eax, [esp+220h+buffer]
add     esp, 10h
mov     ecx, ds:dword_4a8538
push    eax
push    ecx
call    sub_44f5b0
add     esp, 8
mov     ecx, ds:dword_4a8538
push    0
push    ecx
call    sub_44baf0
mov     dword ptr [esp+218h+filename], eax
add     esp, 8
cmp     dword ptr [esp+210h+filename], 0
jz      short loc_456651
push    edx
push    eax
call    sub_44ae90
add     esp, 8
mov     ecx, ds:dword_4a8538
jmp     short loc_456674
mov     eax, ds:dword_4a8538
push    eax
call    sub_44ad30
add     esp, 4
mov     ecx, ds:dword_4a8538
test    eax, eax
jz      short loc_456674
push    ecx
call    sub_44f4a0
add     esp, 4
xor     ecx, ecx
mov     ds:dword_4a8538, ecx
test    ecx, ecx
jnz     short loc_456687
xor     eax, eax
add     esp, 210h
retn
lea     eax, [esp+210h+filename]
push    105h
push    eax
mov     ds:dword_4a8538, ecx
push    ecx
call    sub_44f640
lea     eax, [esp+21ch+filename]
mov     ecx, [esp+21ch+lpstring]
mov     edx, [esp+21ch+lpkeyname]
add     esp, 0ch
push    eax
push    ecx
mov     eax, [esp+218h+lpappname]
push    edx
push    eax
call    ds:writeprivateprofilestringa
add     esp, 210h
retn
sub     esp, 108h
mov     ecx, ds:hinstance
lea     eax, [esp+108h+filename]
push    105h
push    eax
push    ecx
call    ds:getmodulefilenamea
mov     edx, 5ch
mov     cx, ax
dec     ax
test    cx, cx
jle     short loc_456705
movsx   ecx, ax
cmp     [esp+ecx+108h+filename], dl
jnz     short loc_4566f2
inc     ax
lea     edx, [esp+108h+filename]
movsx   ecx, ax
mov     eax, [esp+108h+arg_0]
push    edx
mov     [esp+ecx+10ch+filename], 0
push    eax
call    sub_44f4c0
add     esp, 110h
retn
sub     esp, 108h
lea     eax, [esp+108h+buffer]
push    105h
push    eax
call    ds:getwindowsdirectorya
movsx   ecx, ax
cmp     [esp+ecx+108h+var_109], 5ch
jz      short loc_45675f
mov     [esp+ecx+108h+buffer], 5ch
inc     ax
movsx   ecx, ax
mov     [esp+ecx+108h+buffer], 0
lea     eax, [esp+108h+buffer]
mov     ecx, [esp+108h+arg_0]
push    eax
push    ecx
call    sub_44f4c0
add     esp, 110h
retn
sub     esp, 108h
lea     eax, [esp+108h+buffer]
push    105h
push    eax
call    ds:getsystemdirectorya
movsx   ecx, ax
cmp     [esp+ecx+108h+var_109], 5ch
jz      short loc_4567af
mov     [esp+ecx+108h+buffer], 5ch
inc     ax
movsx   ecx, ax
mov     [esp+ecx+108h+buffer], 0
lea     eax, [esp+108h+buffer]
mov     ecx, [esp+108h+arg_0]
push    eax
push    ecx
call    sub_44f4c0
add     esp, 110h
retn
call    sub_45b8c0
call    sub_456a50
call    sub_44bf90
test    eax, eax
jnz     short loc_4567e6
xor     eax, eax
retn
call    sub_44b920
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
call    sub_4906e0
test    eax, eax
jnz     short loc_45680c
xor     eax, eax
retn
call    sub_4850d0
test    eax, eax
jnz     short loc_456818
xor     eax, eax
retn
call    sub_456400
test    eax, eax
jnz     short loc_456824
xor     eax, eax
retn
call    sub_489f60
test    eax, eax
jnz     short loc_456830
xor     eax, eax
retn
call    sub_480940
test    eax, eax
jnz     short loc_45683c
xor     eax, eax
retn
call    sub_41fa50
test    eax, eax
jnz     short loc_456848
xor     eax, eax
retn
call    sub_4615e0
test    eax, eax
jnz     short loc_456854
xor     eax, eax
retn
call    sub_486830
test    eax, eax
jnz     short loc_456860
xor     eax, eax
retn
call    sub_47c5f0
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
sub     esp, 0a4h
cmp     dword_4ade34, 0
jnz     loc_45691c
lea     eax, [esp+0a4h+string1]
push    8
push    30h
push    10h
push    eax
call    sub_47fe70
lea     eax, [esp+0b4h+buffer]
add     esp, 10h
push    8
push    1aech
push    40h
push    eax
call    sub_47fe70
lea     eax, [esp+0b4h+keyname]
add     esp, 10h
push    9
push    1aech
push    40h
push    eax
call    sub_47fe70
lea     eax, [esp+0b4h+keyname]
lea     ecx, [esp+0b4h+buffer]
lea     edx, [esp+0b4h+string2]
add     esp, 10h
push    offset windowname
push    eax
push    ecx
push    10h
push    edx
call    sub_4564c0
lea     ecx, [esp+0b8h+string2]
lea     edx, [esp+0b8h+string1]
add     esp, 14h
push    ecx
push    edx
call    ds:lstrcmpia
test    eax, eax
jz      short loc_456912
lea     eax, [esp+0a4h+var_a4]
push    eax
call    sub_4a4a80
mov     dword_4ade34, 2
add     esp, 4
add     esp, 0a4h
retn
mov     dword_4ade34, 1
add     esp, 0a4h
retn
cmp     dword_4ade34, 2
jnz     short locret_45693e
jmp     loc_4a4de0
retn
call    sub_40ad30
test    eax, eax
jnz     short loc_45694c
xor     eax, eax
retn
call    sub_448fd0
test    eax, eax
jnz     short loc_456958
xor     eax, eax
retn
mov     eax, [esp+ncmdshow]
push    eax
call    sub_45a8d0
add     esp, 4
test    eax, eax
jnz     short loc_45696c
xor     eax, eax
retn
call    sub_466360
test    eax, eax
jz      short loc_456983
mov     eax, ds:hwndparent
push    eax
call    sub_467760
add     esp, 4
call    sub_461c30
test    eax, eax
jnz     short loc_45698f
xor     eax, eax
retn
call    sub_460ba0
test    eax, eax
jnz     short loc_45699b
xor     eax, eax
retn
call    sub_422160
push    28h
call    sub_4082e0
add     esp, 4
test    eax, eax
jnz     short loc_4569b1
xor     eax, eax
retn
mov     eax, ds:hinstance
push    eax
call    sub_403600
add     esp, 4
test    eax, eax
jnz     short loc_4569c6
xor     eax, eax
retn
call    sub_47c850
test    eax, eax
jnz     short loc_4569d2
xor     eax, eax
retn
call    sub_43db40
test    eax, eax
jnz     short loc_4569de
xor     eax, eax
retn
call    sub_40d340
test    eax, eax
jnz     short loc_4569ea
xor     eax, eax
retn
call    sub_404a50
test    eax, eax
jnz     short loc_4569f6
xor     eax, eax
retn
call    sub_46d520
call    sub_470600
call    sub_4470f0
test    eax, eax
jnz     short loc_456a0c
xor     eax, eax
retn
call    sub_409db0
call    sub_408e00
test    eax, eax
jnz     short loc_456a1d
xor     eax, eax
retn
call    sub_40a080
test    eax, eax
jnz     short loc_456a29
xor     eax, eax
retn
call    sub_411660
test    eax, eax
jnz     short loc_456a35
xor     eax, eax
retn
call    sub_488e80
call    sub_45d1a0
call    sub_46f650
call    sub_450e40
mov     eax, 1
retn
push    esi
push    2bh
push    offset control
mov     esi, ds:getprofilestringa
push    offset default
push    offset keyname
push    offset appname
call    esi
mov     al, ds:control
push    2bh
push    offset byte_4a8599
mov     ds:byte_4a8540, al
push    offset delimiter
push    offset asthousand
push    offset appname
call    esi
mov     al, ds:byte_4a8599
push    2bh
push    offset byte_4a85c4
mov     ds:byte_4a8541, al
push    offset delimiter
push    offset aslist
push    offset appname
call    esi
mov     al, ds:byte_4a85c4
push    offset control
mov     esi, ds:lstrlena
mov     ds:byte_4a8542, al
call    esi
mov     ecx, 2bh
sub     ecx, eax
add     eax, offset control
push    ecx
push    offset default
push    eax
call    sub_47f9f0
add     esp, 0ch
push    offset byte_4a8599
call    esi
mov     ecx, 2bh
sub     ecx, eax
add     eax, offset byte_4a8599
push    ecx
push    offset delimiter
push    eax
call    sub_47f9f0
add     esp, 0ch
push    offset byte_4a85c4
call    esi
mov     ecx, 2bh
sub     ecx, eax
add     eax, offset byte_4a85c4
push    ecx
push    offset delimiter
push    eax
call    sub_47f9f0
add     esp, 0ch
push    2bh
push    offset asc_4ade54
push    offset byte_4a8543
call    sub_47f9f0
add     esp, 0ch
push    2bh
push    offset a0123456789
push    offset byte_4a85ef
call    sub_47f9f0
add     esp, 0ch
pop     esi
retn
push    0
call    _time
add     esp, 4
sub     eax, dword_4af2d8
sub     eax, 7c543000h
retn
sub     esp, 64h
lea     eax, [esp+64h+returnedstring]
push    esi
push    64h
push    eax
push    offset amdyy
push    offset asshortdate
push    offset appname
call    ds:getprofilestringa
lea     ecx, [esp+68h+returnedstring]
mov     eax, [esp+68h+arg_8]
mov     edx, [esp+68h+cchbuffermax]
push    ecx
mov     esi, [esp+6ch+lpstring]
push    eax
push    edx
push    esi
call    sub_456c20
add     esp, 10h
push    esi
call    ds:lstrlena
pop     esi
add     esp, 64h
retn
sub     esp, 64h
lea     eax, [esp+64h+returnedstring]
push    esi
push    64h
push    eax
push    offset addddmmmmdyyyy
push    offset aslongdate
push    offset appname
call    ds:getprofilestringa
lea     ecx, [esp+68h+returnedstring]
mov     eax, [esp+68h+arg_8]
mov     edx, [esp+68h+cchbuffermax]
push    ecx
mov     esi, [esp+6ch+lpstring]
push    eax
push    edx
push    esi
call    sub_456c20
add     esp, 10h
push    esi
call    ds:lstrlena
pop     esi
add     esp, 64h
retn
sub     esp, 4
mov     ecx, dword_4af2d8
add     ecx, [esp+4+arg_8]
push    ebx
push    esi
add     ecx, 7c543000h
mov     [esp+0ch+time], ecx
push    edi
lea     ecx, [esp+10h+time]
push    ebp
push    ecx
call    _localtime
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      loc_456dd9
mov     ebx, [esp+14h+arg_c]
mov     esi, [esp+14h+lpbuffer]
cmp     byte ptr [ebx], 0
jz      loc_456dce
mov     edi, [esp+14h+cchbuffermax]
cmp     edi, 1
jle     loc_456ddd
mov     cl, [ebx]
movsx   edx, cl
sub     edx, 22h
cmp     edx, 57h
ja      short def_456c85
xor     eax, eax
mov     al, ds:byte_456e00[edx]
jmp     ds:jpt_456c85[eax*4]
mov     [esi], cl
inc     ebx
inc     esi
dec     edi
jmp     loc_456dba
mov     al, [ebx+1]
inc     ebx
test    al, al
jz      loc_456dba
cmp     al, cl
jz      short loc_456cb7
dec     edi
cmp     edi, 1
jle     short loc_456cb7
mov     [esi], al
inc     esi
mov     al, [ebx+1]
inc     ebx
test    al, al
jnz     short loc_456ca2
test    al, al
jz      loc_456dba
inc     ebx
jmp     loc_456dba
mov     eax, 1
add     ebx, eax
cmp     byte ptr [ebx], 4dh
jnz     short loc_456cd8
inc     eax
inc     ebx
cmp     byte ptr [ebx], 4dh
jz      short loc_456cd1
cmp     eax, 1
jz      short loc_456cfc
cmp     eax, 2
jz      short loc_456d0b
cmp     eax, 3
mov     eax, [ebp+10h]
push    eax
jz      short loc_456d15
push    4a0h
push    edi
push    esi
call    sub_47fe70
jmp     loc_456db3
mov     eax, [ebp+10h]
inc     eax
push    eax
push    offset ad_0
jmp     loc_456dac
mov     eax, [ebp+10h]
inc     eax
push    eax
jmp     loc_456da7
push    20h
push    edi
push    esi
call    sub_47fe70
jmp     loc_456db3
mov     eax, 1
add     ebx, eax
cmp     byte ptr [ebx], 64h
jnz     short loc_456d36
inc     eax
inc     ebx
cmp     byte ptr [ebx], 64h
jz      short loc_456d2f
cmp     eax, 1
jz      short loc_456d57
cmp     eax, 2
jz      short loc_456d62
cmp     eax, 3
mov     eax, [ebp+18h]
push    eax
jz      short loc_456d68
push    4b0h
push    edi
push    esi
call    sub_47fe70
jmp     short loc_456db3
mov     eax, [ebp+0ch]
push    eax
push    offset ad_0
jmp     short loc_456dac
mov     eax, [ebp+0ch]
push    eax
jmp     short loc_456da7
push    10h
push    edi
push    esi
call    sub_47fe70
jmp     short loc_456db3
mov     eax, 1
add     ebx, eax
cmp     byte ptr [ebx], 79h
jnz     short loc_456d86
inc     eax
inc     ebx
cmp     byte ptr [ebx], 79h
jz      short loc_456d7f
cmp     eax, 2
jz      short loc_456d9b
mov     eax, [ebp+14h]
add     eax, 76ch
push    eax
push    offset a04d
jmp     short loc_456dac
mov     ecx, 64h
mov     eax, [ebp+14h]
cdq
idiv    ecx
push    edx
push    offset a02d
push    edi
push    esi
call    sub_401800
add     esp, 10h
add     esi, eax
sub     edi, eax
cmp     byte ptr [ebx], 0
jnz     loc_456c67
pop     ebp
mov     byte ptr [esi], 0
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
pop     ebp
mov     byte ptr [esi], 0
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, [esp+14h+lpbuffer]
pop     ebp
mov     byte ptr [esi], 0
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
mov     ecx, dword_4af2d8
add     ecx, [esp+4+arg_0]
add     ecx, 7c543000h
mov     [esp+4+time], ecx
lea     ecx, [esp+4+time]
push    ecx
call    _localtime
add     esp, 4
test    eax, eax
jz      short loc_456ebb
mov     ecx, [esp+4+arg_4]
test    ecx, ecx
jz      short loc_456ea0
cmp     ecx, 1
jz      short loc_456ea7
cmp     ecx, 2
jz      short loc_456eaf
xor     eax, eax
add     esp, 4
retn
mov     eax, [eax+0ch]
add     esp, 4
retn
mov     eax, [eax+10h]
add     esp, 4
inc     eax
retn
mov     eax, [eax+14h]
add     esp, 4
add     eax, 76ch
retn
xor     eax, eax
add     esp, 4
retn
sub     esp, 4
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+0ch+lpbuffer]
mov     byte ptr [esi], 0
mov     ecx, dword_4af2d8
add     ecx, [esp+0ch+arg_8]
add     ecx, 7c543000h
mov     [esp+0ch+time], ecx
lea     ecx, [esp+0ch+time]
push    ecx
call    _localtime
add     esp, 4
test    eax, eax
jz      short loc_456f52
mov     ecx, [esp+0ch+arg_c]
cmp     ecx, edi
jz      short loc_456f18
cmp     ecx, 1
jz      short loc_456f39
mov     eax, edi
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [eax+18h]
mov     ecx, [esp+0ch+cchbuffermax]
push    eax
push    4b0h
push    ecx
push    esi
call    sub_47fe70
add     esp, 10h
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [eax+10h]
mov     ecx, [esp+0ch+cchbuffermax]
push    eax
push    4a0h
push    ecx
push    esi
call    sub_47fe70
add     esp, 10h
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 24h
xor     eax, eax
mov     ecx, 9
push    edi
lea     edi, [esp+28h+tm]
rep stosd
mov     eax, [esp+28h+arg_8]
mov     ecx, [esp+28h+arg_0]
sub     eax, 76ch
lea     edx, [esp+28h+tm]
mov     [esp+28h+tm.tm_year], eax
push    edx
mov     eax, [esp+2ch+arg_4]
mov     [esp+2ch+tm.tm_mday], ecx
dec     eax
mov     [esp+2ch+tm.tm_mon], eax
call    _mktime
add     esp, 4
sub     eax, dword_4af2d8
sub     eax, 7c543000h
pop     edi
add     esp, 24h
retn
sub     esp, 1ch
push    ebx
push    esi
mov     esi, [esp+24h+arg_0]
push    edi
push    ebp
mov     byte ptr [esi], 0
mov     ecx, dword_4af2d8
add     ecx, [esp+2ch+arg_8]
add     ecx, 7c543000h
mov     [esp+2ch+time], ecx
lea     ecx, [esp+2ch+time]
push    ecx
call    _localtime
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_456fef
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
push    0
mov     edi, ds:getprofileinta
push    offset aitime
push    offset appname
call    edi
push    0
cmp     eax, 1
sbb     ebp, ebp
push    offset aitlzero
neg     ebp
push    offset appname
call    edi
push    8
cmp     eax, 1
sbb     edi, edi
lea     eax, [esp+30h+returnedstring]
inc     edi
push    eax
push    offset asc_4adf04
push    offset astime
push    offset appname
call    ds:getprofilestringa
cmp     [esp+2ch+arg_c], 0
jz      short loc_45705f
mov     eax, [ebx]
lea     ecx, [esp+2ch+returnedstring]
lea     edx, [esp+2ch+var_8]
push    eax
push    ecx
push    offset as02d
push    8
push    edx
call    sub_401800
add     esp, 14h
jmp     short loc_457064
mov     [esp+2ch+var_8], 0
test    ebp, ebp
jz      short loc_4570b8
lea     eax, [esp+2ch+var_17]
push    7
mov     [esp+30h+var_18], 20h
cmp     dword ptr [ebx+8], 0ch
push    eax
jge     short loc_457086
push    offset aam
push    offset as1159
jmp     short loc_457090
push    offset apm
push    offset as2359
push    offset appname
call    ds:getprofilestringa
mov     eax, [ebx+8]
cmp     eax, 0ch
jle     short loc_4570a9
sub     eax, 0ch
mov     [ebx+8], eax
cmp     dword ptr [ebx+8], 0
jnz     short loc_4570bd
mov     dword ptr [ebx+8], 0ch
jmp     short loc_4570bd
mov     [esp+2ch+var_18], 0
lea     eax, [esp+2ch+var_18]
lea     ecx, [esp+2ch+var_8]
push    eax
mov     edx, [ebx+4]
lea     eax, [esp+30h+returnedstring]
push    ecx
push    edx
mov     ecx, [ebx+8]
push    eax
test    edi, edi
mov     eax, [esp+3ch+arg_4]
push    ecx
mov     ecx, offset a02ds02dss
jnz     short loc_4570e6
mov     ecx, offset ads02dss
push    ecx
push    eax
push    esi
call    sub_401800
add     esp, 20h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     ax, [esp+arg_c]
sub     esp, 184h
mov     cx, ax
push    ebx
and     cx, 2
push    esi
cmp     cx, 1
push    edi
sbb     esi, esi
push    ebp
mov     cx, ax
inc     esi
and     cx, 4
xor     ebx, ebx
mov     [esp+194h+var_184], 0
mov     bl, al
and     ebx, 1
cmp     cx, 1
sbb     ebp, ebp
and     ax, 8
inc     ebp
cmp     ax, 1
sbb     eax, eax
inc     eax
test    ebp, ebp
mov     [esp+194h+var_178], eax
jz      short loc_45715e
call    sub_43cf40
mov     [esp+194h+var_154], 1
test    eax, eax
jnz     short loc_457166
mov     [esp+194h+var_154], 0
or      esi, 6
lea     edi, [esp+194h+var_174]
xor     eax, eax
mov     ecx, 8
mov     [esp+194h+var_180], 0
rep stosd
cmp     [esp+194h+lpstring], eax
jz      short loc_4571b9
lea     eax, [esp+194h+var_174]
mov     ecx, [esp+194h+lpstring]
push    eax
push    ecx
call    sub_4575f0
add     esp, 8
test    eax, eax
jnz     short loc_4571b9
push    4
push    1ch
call    sub_45c150
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 184h
retn
test    ebx, ebx
jz      short loc_4571c7
push    0
call    sub_422980
add     esp, 4
call    sub_4443d0
mov     eax, ds:dword_4a8510
mov     ecx, [esp+194h+arg_10]
push    eax
push    ecx
call    sub_44f430
add     esp, 8
mov     ecx, ds:dword_4a8514
push    ecx
call    sub_44f3f0
add     esp, 4
mov     edi, eax
cmp     [esp+194h+var_154], 0
jz      short loc_45720a
lea     eax, [esp+194h+arg_4]
push    eax
call    sub_43cc30
add     esp, 4
lea     eax, [esp+194h+var_130]
push    0
mov     ebx, [esp+198h+arg_0]
push    28h
push    eax
push    ebx
call    sub_44f860
lea     ecx, [esp+1a4h+var_130]
add     esp, 10h
mov     eax, ds:dword_4a8510
push    0
mov     dx, ds:word_4a8518
push    ebp
push    1
push    ecx
push    3
push    eax
push    edx
call    sub_40abc0
add     esp, 1ch
mov     ebp, eax
push    0
call    sub_43cc30
add     esp, 4
test    ebp, ebp
jnz     short loc_457275
cmp     [esp+194h+lpstring], 0
jz      loc_457502
lea     eax, [esp+194h+var_174]
push    eax
call    sub_457920
add     esp, 4
jmp     loc_457502
mov     eax, [esp+194h+arg_10]
mov     ecx, ds:dword_4a8510
push    eax
push    ecx
call    sub_44f430
add     esp, 8
mov     ecx, ds:dword_4a8514
push    edi
push    ecx
call    sub_44f430
add     esp, 8
cmp     [esp+194h+var_154], 0
jz      short loc_4572be
push    edi
call    sub_44f4a0
mov     eax, [esp+198h+arg_4]
add     esp, 4
push    eax
call    sub_44f3f0
add     esp, 4
mov     edi, eax
push    0
push    ebx
call    sub_44f980
add     esp, 8
test    eax, eax
jz      short loc_457301
lea     eax, [esp+194h+var_154]
lea     ecx, [esp+194h+hmem]
push    eax
mov     edx, ds:dword_4a8510
push    ecx
push    edx
call    sub_44f550
mov     ecx, [esp+1a0h+hmem]
add     esp, 0ch
push    ecx
push    ebx
call    sub_44f4f0
mov     ecx, [esp+19ch+hmem]
add     esp, 8
push    ecx
call    sub_45ba00
add     esp, 4
xor     ebp, ebp
mov     eax, [esp+194h+var_178]
lea     ecx, [esp+194h+var_184]
push    eax
mov     [esp+198h+var_184], ebp
push    ecx
push    ebx
call    sub_457ed0
add     esp, 0ch
cmp     eax, 2
jnz     short loc_457376
lea     eax, [esp+194h+var_130]
push    ebp
push    28h
push    eax
push    ebx
call    sub_44f860
mov     eax, [esp+1a4h+var_184]
add     esp, 10h
push    eax
call    sub_44f4a0
lea     eax, [esp+198h+var_184]
lea     ecx, [esp+198h+var_130]
mov     [esp+198h+var_184], ebp
add     esp, 4
push    eax
push    ecx
call    sub_457fd0
add     esp, 8
test    eax, eax
jnz     short loc_457376
cmp     [esp+194h+lpstring], ebp
jz      loc_457502
lea     eax, [esp+194h+var_174]
push    eax
call    sub_457920
add     esp, 4
jmp     loc_457502
cmp     [esp+194h+var_184], 0
jz      short loc_4573b6
lea     eax, [esp+194h+var_130]
push    0
mov     ecx, [esp+198h+var_184]
push    28h
push    eax
push    ecx
call    sub_44f860
mov     ecx, [esp+1a4h+var_184]
add     esp, 10h
push    ecx
push    ebx
call    sub_44f430
mov     ecx, [esp+19ch+var_184]
add     esp, 8
push    ecx
call    sub_44f4a0
mov     [esp+198h+var_184], 0
add     esp, 4
lea     eax, [esp+194h+var_108]
push    105h
push    eax
push    ebx
call    sub_44f5e0
lea     eax, [esp+1a0h+var_108]
mov     ecx, [esp+1a0h+arg_4]
add     esp, 0ch
push    eax
push    ecx
call    sub_44f5b0
mov     ecx, [esp+19ch+arg_4]
add     esp, 8
push    ecx
call    sub_43cfa0
add     esp, 4
push    1
call    sub_40a9a0
mov     ecx, [esp+198h+arg_4]
add     esp, 4
push    esi
push    ecx
push    ebx
call    sub_4690a0
add     esp, 0ch
test    eax, eax
jz      loc_45749a
cmp     eax, 1388h
jnz     loc_457532
test    eax, eax
jz      short loc_45749a
lea     eax, [esp+194h+var_184]
lea     ecx, [esp+194h+var_130]
push    eax
push    ecx
call    sub_457fd0
add     esp, 8
test    eax, eax
jz      loc_457532
lea     eax, [esp+194h+var_130]
push    0
mov     ecx, [esp+198h+var_184]
push    28h
push    eax
push    ecx
call    sub_44f860
mov     ecx, [esp+1a4h+arg_4]
mov     edx, [esp+1a4h+var_184]
add     esp, 10h
push    esi
push    ecx
push    edx
call    sub_4690a0
add     esp, 0ch
mov     ebp, eax
test    ebp, ebp
jnz     short loc_457481
mov     eax, [esp+194h+var_184]
push    eax
push    ebx
call    sub_44f430
add     esp, 8
mov     eax, [esp+194h+var_184]
push    eax
call    sub_44f4a0
mov     [esp+198h+var_184], 0
add     esp, 4
test    ebp, ebp
jnz     short loc_457427
cmp     [esp+194h+lpstring], 0
jz      short loc_4574b1
lea     eax, [esp+194h+var_174]
push    eax
call    sub_457560
add     esp, 4
mov     [esp+194h+var_154], 0dh
lea     eax, [esp+194h+var_154]
push    eax
call    sub_422130
add     esp, 4
mov     eax, ds:frequency
push    0
push    eax
call    ds:validaterect
call    sub_444540
call    sub_436a50
mov     ecx, [esp+194h+arg_4]
push    edi
push    ecx
call    sub_44f430
add     esp, 8
push    edi
call    sub_44f4a0
mov     [esp+198h+var_180], 1
add     esp, 4
xor     edi, edi
test    edi, edi
jz      short loc_45750f
push    edi
call    sub_44f4a0
add     esp, 4
cmp     [esp+194h+var_184], 0
jz      short loc_457523
mov     eax, [esp+194h+var_184]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, [esp+194h+var_180]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 184h
retn
cmp     [esp+194h+lpstring], 0
jz      short loc_457549
lea     eax, [esp+194h+var_174]
push    eax
call    sub_457920
add     esp, 4
mov     eax, [esp+194h+arg_10]
push    3
push    edi
push    eax
call    sub_4690a0
add     esp, 0ch
jmp     short loc_457502
mov     eax, [esp+arg_0]
sub     esp, 5ch
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [eax+0ch]
mov     eax, [eax+8]
test    eax, eax
jle     short loc_4575d2
mov     [esp+6ch+var_5c], eax
xor     ebx, ebx
lea     edi, [esp+6ch+var_58]
mov     bx, ds:word_4a8518
mov     esi, ebp
shl     ebx, 10h
mov     ecx, 15h
mov     bl, 1
rep movsd
movsw
lea     eax, [esp+6ch+string1]
push    eax
push    ebx
call    sub_489760
add     esp, 8
test    ax, ax
jz      short loc_4575bc
lea     ecx, [esp+6ch+var_58]
push    ecx
push    0
push    eax
push    ebx
call    sub_4428a0
add     esp, 10h
jmp     short loc_4575c9
lea     eax, [esp+6ch+var_58]
push    eax
call    sub_41b030
add     esp, 4
add     ebp, 56h
dec     [esp+6ch+var_5c]
jnz     short loc_457579
mov     eax, [esp+6ch+arg_0]
push    eax
call    sub_457970
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
sub     esp, 19ch
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     bx, ds:word_4a8518
push    ebp
shl     ebx, 10h
mov     edi, [esp+1ach+lpstring]
mov     bl, 1
push    edi
call    ds:lstrlena
lea     ebp, [eax+1]
mov     esi, [esp+1ach+arg_4]
push    2
push    ebp
call    sub_45bd50
add     esp, 8
mov     [esi+10h], eax
test    eax, eax
jnz     short loc_45763f
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 19ch
retn
push    ebp
push    edi
push    eax
call    sub_47f9f0
add     esp, 0ch
push    esi
call    sub_4579f0
add     esp, 4
cmp     dword ptr [esi+1ch], 0
jnz     short loc_45766f
push    esi
call    sub_457970
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 19ch
retn
push    2
push    35ch
call    sub_45b8f0
add     esp, 8
mov     [esi], eax
test    eax, eax
jnz     short loc_45769a
push    esi
call    sub_457970
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 19ch
retn
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+4], 0ah
push    eax
call    ds:globallock
push    esi
mov     [esi+0ch], eax
push    offset loc_457770
push    ebx
call    sub_489ab0
add     esp, 0ch
test    ax, ax
jz      short loc_4576dc
push    esi
call    sub_457920
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 19ch
retn
lea     eax, [esp+1ach+string1]
push    19ah
push    eax
push    2028h
push    ebx
call    sub_4897b0
lea     eax, [esp+1bch+string1]
add     esp, 10h
push    esi
push    eax
push    2028h
call    sub_4577e0
lea     eax, [esp+1b8h+string1]
add     esp, 0ch
push    19ah
push    eax
push    2029h
push    ebx
call    sub_4897b0
lea     eax, [esp+1bch+string1]
add     esp, 10h
push    esi
push    eax
push    2029h
call    sub_4577e0
lea     eax, [esp+1b8h+string1]
add     esp, 0ch
push    19ah
push    eax
push    20b8h
push    ebx
call    sub_4897b0
lea     eax, [esp+1bch+string1]
add     esp, 10h
push    esi
push    eax
push    20b8h
call    sub_4577e0
add     esp, 0ch
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 19ch
retn
mov     ecx, [esp+8]
push    ebx
mov     ebx, [esp+10h]
push    esi
push    edi
push    ebp
push    ecx
xor     ebp, ebp
call    ds:lstrlena
mov     esi, [esp+18h]
add     esi, eax
cmp     [ebx+18h], ebp
jle     short loc_4577ba
xor     edi, edi
push    1
mov     eax, [ebx+1ch]
mov     edx, [esp+1ch]
push    0
push    1
mov     ecx, [eax+edi]
push    ecx
push    esi
push    edx
call    sub_45b290
add     esp, 18h
cmp     eax, esi
jz      short loc_4577c4
add     edi, 4
inc     ebp
cmp     [ebx+18h], ebp
jg      short loc_457792
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+18h]
push    ebx
mov     eax, [esp+18h]
push    ecx
push    eax
call    sub_4577e0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
sub     esp, 70h
lea     ecx, [esp+70h+var_42]
push    esi
push    edi
push    40h
push    eax
push    ecx
call    sub_47f9f0
mov     dx, [esp+84h+arg_0]
lea     ecx, [esp+84h+var_70]
add     esp, 0ch
xor     eax, eax
mov     ax, ds:word_4a8518
push    ecx
shl     eax, 10h
push    0
push    edx
mov     al, 1
push    eax
call    sub_4427d0
lea     ecx, [esp+88h+var_70]
lea     edx, [esp+88h+var_58]
add     esp, 10h
push    ecx
push    edx
call    sub_41ae70
lea     ecx, [esp+80h+var_70]
add     esp, 8
mov     esi, eax
push    ecx
call    sub_41b030
add     esp, 4
test    esi, esi
jz      short loc_45784c
xor     eax, eax
pop     edi
pop     esi
add     esp, 70h
retn
mov     eax, [esp+78h+arg_8]
push    eax
call    sub_457890
add     esp, 4
test    eax, eax
jz      short loc_45787a
lea     esi, [esp+78h+var_58]
mov     edi, eax
mov     ecx, 15h
rep movsd
movsw
mov     eax, 1
pop     edi
pop     esi
add     esp, 70h
retn
lea     eax, [esp+78h+var_58]
push    eax
call    sub_41b030
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
add     esp, 70h
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
mov     edi, [esi+8]
lea     eax, [edi+1]
mov     [esp+14h+var_4], eax
cmp     [esi+4], eax
jge     short loc_4578ff
mov     eax, [esi]
push    eax
call    ds:globalunlock
mov     ebx, [esi+4]
push    2
lea     eax, [ebx+ebx*4+32h]
add     ebx, 0ah
mov     dword ptr [esi+0ch], 0
lea     ecx, [ebx+eax*4]
lea     eax, [ebx+ecx*2]
mov     ecx, [esi]
add     eax, eax
push    eax
push    ecx
call    sub_45b9b0
add     esp, 0ch
mov     ebp, eax
test    ebp, ebp
jz      short loc_4578e2
mov     [esi], ebp
mov     eax, [esi]
push    eax
call    ds:globallock
mov     [esi+0ch], eax
test    ebp, ebp
jnz     short loc_4578fc
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     [esi+4], ebx
mov     eax, [esp+14h+var_4]
lea     ecx, [edi+edi*4]
pop     ebp
mov     [esi+8], eax
mov     eax, [esi+0ch]
lea     edx, [edi+ecx*4]
lea     ebx, [edi+edx*2]
pop     edi
pop     esi
lea     eax, [eax+ebx*2]
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     ebx, [eax+0ch]
push    ebp
mov     ebp, [eax+8]
test    ebp, ebp
jle     short loc_457957
lea     edi, [esp+28h+var_18]
mov     esi, ebx
mov     ecx, 5
add     ebx, 56h
rep movsd
movsw
lea     eax, [esp+28h+var_18]
push    eax
call    sub_41b030
add     esp, 4
dec     ebp
jnz     short loc_457935
mov     eax, [esp+28h+arg_0]
push    eax
call    sub_457970
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
test    eax, eax
jz      short loc_4579a0
cmp     dword ptr [esi+0ch], 0
jz      short loc_45798f
push    eax
call    ds:globalunlock
mov     dword ptr [esi+0ch], 0
mov     eax, [esi]
push    eax
call    sub_45ba00
add     esp, 4
mov     dword ptr [esi], 0
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_4579d5
cmp     dword ptr [esi+1ch], 0
jz      short loc_4579bb
push    eax
call    ds:globalunlock
mov     dword ptr [esi+1ch], 0
mov     eax, [esi+14h]
push    eax
call    sub_45ba00
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi+18h], 0
add     esp, 4
mov     eax, [esi+10h]
test    eax, eax
jz      short loc_4579ec
push    eax
call    sub_45bdb0
mov     dword ptr [esi+10h], 0
add     esp, 4
pop     esi
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    ebp
xor     ebx, ebx
push    2
mov     [esi+1ch], ebx
push    50h
mov     [esi+18h], ebx
mov     [esp+20h+var_4], 14h
call    sub_45b8f0
add     esp, 8
mov     [esi+14h], eax
test    eax, eax
jz      loc_457ad3
push    eax
call    ds:globallock
mov     [esi+1ch], eax
cmp     eax, ebx
jz      loc_457ad3
mov     edi, [esi+10h]
mov     [esp+18h+var_8], ebx
cmp     [edi], bl
jz      loc_457acc
mov     ebp, 50h
mov     al, [edi]
cmp     al, 2ch
jnz     short loc_457a54
mov     byte ptr [edi], 0
inc     edi
jmp     short loc_457ac3
cmp     al, 20h
jnz     short loc_457a5e
inc     edi
cmp     byte ptr [edi], 20h
jz      short loc_457a58
mov     eax, [esp+18h+var_4]
cmp     [esp+18h+var_8], eax
jl      short loc_457aa5
mov     eax, [esi+14h]
add     ebp, 50h
push    eax
call    ds:globalunlock
push    2
mov     eax, [esi+14h]
mov     dword ptr [esi+1ch], 0
add     [esp+1ch+var_4], 14h
push    ebp
push    eax
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jz      short loc_457ad3
push    eax
mov     [esi+14h], eax
call    ds:globallock
mov     [esi+1ch], eax
test    eax, eax
jz      short loc_457ad3
mov     eax, [esi+1ch]
add     ebx, 4
inc     [esp+18h+var_8]
mov     [eax+ebx-4], edi
cmp     byte ptr [edi], 2ch
jz      short loc_457ac3
cmp     byte ptr [edi], 0
jz      short loc_457acc
inc     edi
cmp     byte ptr [edi], 2ch
jnz     short loc_457ab8
cmp     byte ptr [edi], 0
jnz     loc_457a48
mov     eax, [esp+18h+var_8]
mov     [esi+18h], eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 1b4h
push    ebx
push    esi
push    edi
push    ebp
xor     edi, edi
push    190h
lea     eax, [esp+1c8h+string]
lea     ecx, [esp+1c8h+var_1b0]
lea     edx, [esp+1c8h+var_1ac]
push    eax
mov     [esp+1cch+var_1ac], edi
push    ecx
mov     [esp+1d0h+var_1b0], edi
push    edx
mov     [esp+1d4h+var_1a8], edi
call    sub_458830
add     esp, 10h
test    eax, eax
jz      loc_457dab
mov     eax, ds:dword_4a8514
push    eax
call    sub_44f3f0
mov     bp, 0ah
add     esp, 4
mov     esi, eax
push    esi
call    sub_457e80
add     esp, 4
cmp     [esp+1c4h+arg_0], edi
jz      short loc_457b46
mov     bp, 0bh
push    4070001h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
lea     ecx, [esp+1cch+var_1b4]
add     esp, 8
movzx   ebx, ax
push    ecx
call    sub_451920
add     esp, 4
test    eax, eax
jz      loc_457d1e
mov     eax, [esp+1c4h+var_1b4]
mov     eax, [eax+2]
test    eax, eax
jz      short loc_457b8d
push    eax
call    sub_45ba00
add     esp, 4
mov     edi, [esp+1c4h+var_1b4]
xor     eax, eax
mov     ecx, 1ch
cmp     ebx, 0ffh
rep stosd
stosw
jnz     loc_457cdd
mov     ax, ds:word_4a8518
mov     edx, dword_4ae1e0
shl     eax, 10h
mov     al, 1
mov     ecx, eax
shr     ecx, 10h
movsx   ecx, cx
shl     ecx, 6
mov     edi, [ecx+edx+4]
xor     ecx, ecx
mov     cl, ah
mov     edx, [edi]
mov     ecx, [edx+ecx*4]
test    ecx, ecx
jz      short loc_457be2
mov     edx, [ecx]
xor     ecx, ecx
mov     cl, al
mov     eax, [edx+ecx*4]
add     eax, edx
jmp     short loc_457beb
push    eax
call    sub_461250
add     esp, 4
mov     ecx, [esp+1c4h+var_1b4]
push    20h
add     ecx, 12h
push    ecx
push    40h
push    eax
call    sub_45c990
add     esp, 10h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
mov     ecx, eax
shr     ecx, 10h
movsx   edx, cx
shl     edx, 6
mov     ecx, dword_4ae1e0
mov     edi, [edx+ecx+4]
xor     ecx, ecx
mov     cl, ah
mov     edx, [edi]
mov     ecx, [edx+ecx*4]
test    ecx, ecx
jz      short loc_457c3c
mov     edx, [ecx]
xor     ecx, ecx
mov     cl, al
mov     eax, [edx+ecx*4]
add     eax, edx
jmp     short loc_457c45
push    eax
call    sub_461250
add     esp, 4
mov     ecx, [esp+1c4h+var_1b4]
push    40h
add     ecx, 32h
push    ecx
push    3fh
push    eax
call    sub_45c990
add     esp, 10h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
mov     ecx, eax
shr     ecx, 10h
movsx   edx, cx
shl     edx, 6
mov     ecx, dword_4ae1e0
mov     edi, [edx+ecx+4]
xor     ecx, ecx
mov     cl, ah
mov     edx, [edi]
mov     ecx, [edx+ecx*4]
test    ecx, ecx
jz      short loc_457c96
mov     edx, [ecx]
xor     ecx, ecx
mov     cl, al
mov     eax, [edx+ecx*4]
add     eax, edx
jmp     short loc_457c9f
push    eax
call    sub_461250
add     esp, 4
push    41h
push    eax
call    sub_45c870
mov     ecx, [esp+1cch+var_1b4]
add     esp, 8
movzx   eax, ax
mov     [ecx+6], eax
mov     ecx, [esp+1c4h+var_1b4]
cmp     dword ptr [ecx+6], 0
jle     short loc_457cdd
push    41h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4612e0
mov     ecx, [esp+1cch+var_1b4]
add     esp, 8
mov     [ecx+2], eax
lea     eax, [esp+1c4h+var_1a4]
push    eax
push    3fh
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_451520
mov     edx, [esp+1d0h+var_1a4]
mov     ecx, [esp+1d0h+var_1b4]
add     esp, 0ch
mov     [ecx+0ah], edx
mov     eax, [esp+1c4h+var_1a0]
mov     ecx, [esp+1c4h+var_1b4]
mov     [ecx+0eh], eax
mov     ecx, [esp+1c4h+var_1b4]
mov     word ptr [ecx], 1
call    sub_451950
call    sub_44f2d0
mov     edi, eax
test    edi, edi
jz      short loc_457da2
lea     eax, [esp+1c4h+string]
push    edi
mov     ecx, [esp+1c8h+var_1b0]
push    ebp
mov     edx, [esp+1cch+var_1ac]
push    eax
push    ecx
push    edx
call    sub_457100
add     esp, 14h
test    eax, eax
jz      short loc_457d5f
call    sub_4444b0
push    ebx
call    sub_4443a0
add     esp, 4
push    esi
call    sub_44b480
add     esp, 4
jmp     short loc_457d9a
lea     eax, [esp+1c4h+string]
mov     ecx, [esp+1c4h+var_1b0]
mov     edx, [esp+1c4h+var_1ac]
push    eax
push    ecx
push    edx
call    sub_458730
mov     ecx, [esp+1d0h+var_1ac]
add     esp, 0ch
push    ecx
call    sub_44f4a0
mov     ecx, [esp+1c8h+var_1b0]
add     esp, 4
push    ecx
call    sub_44f4a0
add     esp, 4
xor     eax, eax
mov     [esp+1c4h+var_1ac], eax
mov     [esp+1c4h+var_1b0], eax
mov     [esp+1c4h+var_1a8], 1
push    esi
call    sub_44f4a0
add     esp, 4
cmp     [esp+1c4h+var_1ac], 0
jz      short loc_457dbf
mov     eax, [esp+1c4h+var_1ac]
push    eax
call    sub_44f4a0
add     esp, 4
cmp     [esp+1c4h+var_1b0], 0
jz      short loc_457dd3
mov     eax, [esp+1c4h+var_1b0]
push    eax
call    sub_44f4a0
add     esp, 4
test    edi, edi
jz      short loc_457de0
push    edi
call    sub_44f4a0
add     esp, 4
mov     eax, [esp+1c4h+var_1a8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1b4h
retn
push    esi
mov     eax, ds:dword_4a8514
push    eax
call    sub_44f3f0
add     esp, 4
mov     esi, eax
push    esi
call    sub_457e80
add     esp, 4
call    sub_458910
test    eax, eax
jz      short loc_457e47
push    2000308h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_457e47
push    esi
call    sub_44b480
add     esp, 4
push    esi
call    sub_44f4a0
add     esp, 4
pop     esi
retn
push    0
mov     eax, ds:dword_4a8514
push    eax
mov     ecx, ds:dword_4a8510
push    ecx
call    sub_458730
add     esp, 0ch
push    esi
call    sub_458950
add     esp, 4
push    esi
call    sub_44f4a0
add     esp, 4
pop     esi
retn
sub     esp, 8
push    esi
push    offset aresume
mov     esi, [esp+10h+arg_0]
push    esi
call    sub_44f5b0
lea     eax, [esp+14h+string1]
add     esp, 8
push    offset aap0
push    eax
call    sub_44fa10
add     esp, 8
push    eax
push    esi
call    sub_44f6a0
add     esp, 8
push    offset aap0
push    esi
call    sub_44f700
add     esp, 8
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
sub     esp, 14h
push    esi
push    eax
call    sub_44f3f0
mov     esi, [esp+1ch+arg_4]
add     esp, 4
push    esi
mov     [esi], eax
cmp     [esp+1ch+arg_8], 0
jz      short loc_457f1d
call    sub_458020
add     esp, 4
test    eax, eax
jz      short loc_457f02
xor     eax, eax
pop     esi
add     esp, 14h
retn
mov     eax, [esi]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, 2
mov     dword ptr [esi], 0
pop     esi
add     esp, 14h
retn
call    sub_458020
add     esp, 4
test    eax, eax
jz      short loc_457f30
xor     eax, eax
pop     esi
add     esp, 14h
retn
lea     eax, [esp+18h+string1]
push    offset aapp
push    eax
call    sub_44fa10
add     esp, 8
mov     ecx, [esi]
push    eax
push    ecx
call    sub_44f6a0
add     esp, 8
push    esi
call    sub_458020
add     esp, 4
test    eax, eax
jz      short loc_457f62
xor     eax, eax
pop     esi
add     esp, 14h
retn
xor     eax, eax
push    offset aexe_0
lea     ecx, [esp+1ch+var_14]
mov     [esp+1ch+hobject], eax
mov     [esp+1ch+var_4], eax
push    ecx
call    sub_44fa10
add     esp, 8
mov     ecx, [esi]
push    eax
push    ecx
call    sub_44f6a0
mov     edx, [esp+20h+hobject]
mov     ecx, [esp+20h+var_4]
add     esp, 8
push    ecx
push    edx
push    esi
call    sub_489be0
add     esp, 0ch
test    eax, eax
jz      short loc_457fa8
xor     eax, eax
pop     esi
add     esp, 14h
retn
lea     eax, [esp+18h+var_14]
push    offset aapp
push    eax
call    sub_44fa10
add     esp, 8
mov     ecx, [esi]
push    eax
push    ecx
call    sub_44f6a0
add     esp, 8
mov     eax, 2
pop     esi
add     esp, 14h
retn
sub     esp, 30h
xor     eax, eax
mov     ecx, 0ch
push    edi
lea     edi, [esp+34h+var_30]
rep stosd
mov     eax, [esp+34h+arg_4]
mov     ecx, [esp+34h+arg_0]
mov     [esp+34h+var_c], eax
push    ecx
mov     [esp+38h+var_2c], 2
mov     [esp+38h+var_24], 1
mov     [esp+38h+var_10], 1
lea     edx, [esp+38h+var_30]
push    edx
call    sub_47eeb0
add     esp, 8
dec     eax
cmp     eax, 1
pop     edi
sbb     eax, eax
add     esp, 30h
neg     eax
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_44a450
add     esp, 4
inc     eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_4]
push    0
mov     ecx, [esp+4+arg_0]
push    0
push    eax
push    ecx
call    sub_4580a0
add     esp, 10h
xor     eax, eax
retn
mov     eax, [esp+arg_4]
push    1
mov     ecx, [esp+4+arg_0]
push    0
push    eax
push    ecx
call    sub_4580a0
add     esp, 10h
xor     eax, eax
retn
mov     eax, [esp+arg_4]
push    1
mov     ecx, [esp+4+arg_0]
push    1
push    eax
push    ecx
call    sub_4580a0
add     esp, 10h
xor     eax, eax
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
push    esi
mov     ebx, 0
call    sub_442d80
add     esp, 4
mov     edi, eax
cmp     [esp+0ch+arg_0], 1
jle     short loc_4580cc
lea     eax, [esi+16h]
push    eax
call    sub_442d80
add     esp, 4
mov     ebx, eax
mov     eax, [esp+0ch+arg_c]
mov     ecx, [esp+0ch+arg_8]
push    eax
push    ecx
push    ebx
push    edi
call    sub_458100
add     esp, 10h
push    esi
call    sub_442e00
add     esp, 4
test    ebx, ebx
jz      short loc_4580f9
add     esi, 16h
push    esi
call    sub_442e00
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 2ch
xor     eax, eax
mov     ecx, 7
push    esi
push    edi
lea     edi, [esp+34h+var_1c]
rep stosd
mov     eax, [esp+34h+arg_c]
mov     ecx, [esp+34h+arg_8]
lea     edx, [esp+34h+var_1c]
mov     [esp+34h+var_4], eax
mov     eax, [esp+34h+lpstring]
push    edx
mov     [esp+38h+var_8], ecx
push    eax
call    sub_44f360
add     esp, 8
test    eax, eax
jnz     loc_4581d9
mov     eax, [esp+34h+var_1c]
push    0
push    eax
call    sub_44f980
mov     esi, [esp+3ch+arg_4]
add     esp, 8
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     [esp+34h+var_18], eax
cmp     esi, 1
sbb     eax, eax
inc     eax
mov     [esp+34h+var_c], eax
jz      short loc_45819c
lea     eax, [esp+34h+var_14]
push    eax
push    esi
call    sub_44f360
add     esp, 8
test    eax, eax
jnz     short loc_4581d9
mov     eax, [esp+34h+var_14]
push    0
push    eax
call    sub_44f980
add     esp, 8
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     [esp+34h+var_10], eax
cmp     byte ptr [esi], 1
sbb     eax, eax
inc     eax
mov     [esp+34h+var_c], eax
lea     eax, [esp+34h+var_1c]
push    1ch
push    eax
call    sub_45b910
add     esp, 8
test    eax, eax
jz      short loc_4581d9
mov     [esp+34h+var_2c], 5
mov     [esp+34h+var_24], offset sub_4581e0
mov     [esp+34h+var_20], eax
lea     eax, [esp+34h+var_2c]
push    eax
call    sub_434ac0
mov     word_4ad3dc, 0fffah
add     esp, 4
pop     edi
pop     esi
add     esp, 2ch
retn
sub     esp, 124h
push    ebx
push    esi
mov     ebx, [esp+12ch+hmem]
push    edi
push    ebx
call    ds:globallock
lea     edi, [esp+130h+var_124]
mov     esi, eax
mov     ecx, 7
push    ebx
rep movsd
call    ds:globalunlock
push    ebx
call    sub_45ba00
add     esp, 4
xor     ebx, ebx
mov     esi, 21h
lea     eax, [esp+130h+var_124]
push    eax
call    sub_458580
add     esp, 4
test    eax, eax
jz      short loc_458244
lea     eax, [esp+130h+var_124]
push    eax
call    sub_458310
add     esp, 4
mov     esi, eax
cmp     esi, 20h
ja      loc_4582d1
cmp     esi, 21h
jz      short loc_458252
cmp     esi, 2
jnz     loc_4582f4
lea     eax, [esp+130h+var_108]
push    105h
mov     ecx, [esp+134h+var_124]
push    eax
push    ecx
call    sub_44f5e0
add     esp, 0ch
cmp     [esp+130h+var_108], bl
jz      short loc_458283
mov     eax, [esp+130h+var_124]
push    eax
call    sub_44b8c0
add     esp, 4
mov     eax, 2
jmp     short loc_4582ac
lea     eax, [esp+130h+var_108]
push    105h
mov     ecx, [esp+134h+var_11c]
push    eax
push    ecx
call    sub_44f5e0
mov     ecx, [esp+13ch+var_11c]
add     esp, 0ch
push    ecx
call    sub_44b8c0
add     esp, 4
mov     eax, 3
lea     ecx, [esp+130h+var_108]
push    eax
lea     eax, [esp+134h+var_124]
push    eax
push    ecx
call    sub_458530
add     esp, 0ch
test    eax, eax
jnz     loc_458216
pop     edi
pop     esi
pop     ebx
add     esp, 124h
retn
cmp     [esp+130h+var_10c], 0
jnz     short loc_458305
push    0
mov     eax, ds:hwndparent
push    0
push    10h
push    eax
call    ds:postmessagea
pop     edi
pop     esi
pop     ebx
add     esp, 124h
retn
movzx   eax, si
push    eax
push    0e2h
call    sub_45c150
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 124h
retn
sub     esp, 320h
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
xor     edi, edi
mov     ebp, 1
push    105h
lea     eax, [esp+334h+var_108]
mov     esi, [esp+334h+arg_0]
mov     [esp+334h+var_210], bl
push    eax
mov     ecx, [esi]
mov     [esp+338h+file], bl
mov     [esp+338h+var_108], bl
push    ecx
call    sub_44f5e0
lea     eax, [esp+33ch+file]
add     esp, 0ch
mov     ecx, [esi+8]
push    105h
push    eax
push    ecx
call    sub_44f5e0
add     esp, 0ch
cmp     [esp+330h+var_108], bl
jnz     short loc_458389
cmp     [esp+330h+file], bl
jnz     short loc_458389
mov     eax, 2
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 320h
retn
cmp     [esp+330h+var_108], 0
jz      short loc_4583e7
push    0
mov     eax, [esi]
push    eax
call    sub_44f9e0
add     esp, 8
test    eax, eax
jnz     short loc_4583c2
lea     eax, [esp+330h+string1]
push    offset aexe_0
push    eax
call    sub_44fa10
add     esp, 8
mov     ecx, [esi]
push    eax
push    ecx
call    sub_44f6a0
add     esp, 8
lea     eax, [esp+330h+var_108]
push    105h
push    eax
mov     ecx, [esi]
cmp     dword ptr [esi+4], 0
push    ecx
jz      short loc_4583df
call    sub_44f640
jmp     short loc_4583e4
call    sub_44f5e0
add     esp, 0ch
cmp     [esp+330h+file], 0
jz      short loc_458411
lea     eax, [esp+330h+file]
push    105h
push    eax
mov     ecx, [esi+8]
cmp     dword ptr [esi+0ch], 0
push    ecx
jz      short loc_458409
call    sub_44f640
jmp     short loc_45840e
call    sub_44f5e0
add     esp, 0ch
mov     eax, [esi+0ch]
test    eax, eax
jnz     short loc_458422
cmp     dword ptr [esi+4], 0
jz      short loc_45843f
test    eax, eax
jz      short loc_458427
mov     eax, [esi+8]
jmp     short loc_458429
mov     eax, [esi]
lea     ecx, [esp+330h+var_210]
push    105h
push    ecx
push    eax
call    sub_44f520
add     esp, 0ch
test    ebp, ebp
jnz     short loc_45844b
test    edi, edi
jz      loc_4584d7
xor     edi, edi
push    1
lea     eax, [esp+334h+var_210]
mov     ecx, 0
cmp     [esp+334h+var_210], 1
adc     ecx, 0ffffffffh
and     ecx, eax
lea     eax, [esp+334h+file]
cmp     [esp+334h+file], 0
push    ecx
push    edi
jnz     short loc_45847c
lea     eax, [esp+33ch+var_108]
cmp     dword ptr [esi+14h], 0
push    eax
mov     eax, offset operation
jnz     short loc_45848d
mov     eax, offset aopen
push    eax
mov     eax, ds:hwndparent
push    eax
call    ds:shellexecutea
cmp     eax, 1fh
mov     ebx, eax
jz      short loc_458506
cmp     ebx, 2
jnz     short loc_4584d0
test    ebp, ebp
jz      short loc_4584d0
mov     eax, [esi+4]
test    eax, eax
jnz     short loc_4584bb
cmp     dword ptr [esi+0ch], 0
jz      short loc_4584d0
test    eax, eax
jz      short loc_4584bf
mov     eax, [esi]
jmp     short loc_4584c2
mov     eax, [esi+8]
push    eax
mov     edi, 1
call    sub_44b8c0
add     esp, 4
xor     ebp, ebp
jmp     loc_45843f
cmp     ebx, 20h
ja      short loc_4584f9
push    esi
call    sub_458600
add     esp, 4
test    eax, eax
jz      short loc_4584f9
mov     eax, 21h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 320h
retn
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 320h
retn
push    esi
call    sub_458600
add     esp, 4
cmp     eax, 1
sbb     eax, eax
pop     ebp
and     eax, 0fffffffeh
pop     edi
add     eax, 21h
pop     esi
pop     ebx
add     esp, 320h
retn
sub     esp, 30h
xor     eax, eax
mov     ecx, 0ch
push    edi
lea     edi, [esp+34h+var_30]
rep stosd
mov     eax, [esp+34h+arg_8]
mov     ecx, [esp+34h+arg_4]
mov     edx, [esp+34h+arg_0]
mov     [esp+34h+var_2c], eax
lea     eax, [esp+34h+var_30]
push    edx
mov     [esp+38h+var_c], ecx
push    eax
mov     [esp+3ch+var_24], 3
mov     [esp+3ch+var_10], 1
call    sub_47eeb0
add     esp, 8
dec     eax
cmp     eax, 1
pop     edi
sbb     eax, eax
add     esp, 30h
neg     eax
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
lea     eax, [esp+4+string1]
push    esi
push    eax
mov     edx, [ecx]
push    edx
call    sub_44f6d0
lea     ecx, [esp+10h+string1]
add     esp, 8
mov     esi, ds:lstrcmpia
push    offset acom
push    ecx
call    esi
test    eax, eax
jz      short loc_4585f5
lea     eax, [esp+8+string1]
push    offset aexe_0
push    eax
call    esi
test    eax, eax
jz      short loc_4585f5
lea     eax, [esp+8+string1]
push    offset abat
push    eax
call    esi
test    eax, eax
jz      short loc_4585f5
lea     eax, [esp+8+string1]
push    offset apif
push    eax
call    esi
test    eax, eax
jz      short loc_4585f5
lea     eax, [esp+8+string1]
push    offset windowname
push    eax
call    esi
test    eax, eax
jz      short loc_4585f5
xor     eax, eax
pop     esi
add     esp, 4
retn
mov     eax, 1
pop     esi
add     esp, 4
retn
sub     esp, 294h
push    ebx
push    esi
mov     esi, [esp+29ch+arg_0]
push    edi
push    ebp
push    0
mov     eax, [esi]
push    eax
call    sub_44f9b0
add     esp, 8
test    eax, eax
jz      short loc_45862f
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 294h
retn
lea     eax, [esp+2a4h+string]
push    20ah
push    eax
mov     ecx, [esi]
cmp     dword ptr [esi+4], 0
push    ecx
jz      short loc_45864c
call    sub_44f640
jmp     short loc_458651
call    sub_44f5e0
lea     eax, [esp+2b0h+string]
add     esp, 0ch
mov     ebp, ds:lstrlena
push    eax
call    ebp
lea     edi, [esp+eax+2a4h+string]
push    4000h
lea     eax, [esp+2a8h+reopenbuff]
lea     ecx, [esp+2a8h+string]
push    eax
mov     ebx, ds:openfile
push    ecx
call    ebx
cmp     eax, 0ffffffffh
jnz     short loc_4586df
push    0
mov     eax, [esi]
push    eax
call    sub_44f9e0
add     esp, 8
test    eax, eax
jz      short loc_4586d2
push    offset aexe
push    edi
call    ds:lstrcpya
push    edi
call    ebp
add     edi, eax
push    4000h
lea     eax, [esp+2a8h+reopenbuff]
lea     ecx, [esp+2a8h+string]
push    eax
push    ecx
call    ebx
cmp     eax, 0ffffffffh
jnz     short loc_4586df
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 294h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 294h
retn
cmp     dword ptr [esi+10h], 0
jz      short loc_458700
mov     byte ptr [edi], 20h
inc     edi
lea     eax, [esp+2a4h+var_2]
mov     ecx, [esi+8]
sub     eax, edi
push    eax
push    edi
push    ecx
call    sub_44f640
add     esp, 0ch
lea     eax, [esp+2a4h+string]
push    5
push    eax
call    ds:winexec
mov     cx, 20h
pop     ebp
cmp     cx, ax
pop     edi
mov     eax, 1
pop     esi
adc     eax, 0ffffffffh
pop     ebx
add     esp, 294h
retn
sub     esp, 4
cmp     ds:dword_4a861c, 0
push    ebx
push    esi
push    edi
mov     edi, 1
jnz     short loc_45874e
call    sub_45c800
mov     ds:dword_4a861c, eax
call    sub_45c800
mov     esi, eax
test    esi, esi
jz      loc_45880b
mov     eax, [esp+10h+arg_4]
mov     ecx, [esp+10h+arg_0]
push    eax
push    ecx
push    esi
call    sub_458f50
add     esp, 0ch
test    eax, eax
jnz     loc_4587fe
mov     ebx, [esp+10h+lpstring]
test    ebx, ebx
jz      short loc_458796
push    ebx
call    ds:lstrlena
inc     ax
push    eax
push    ebx
push    3
push    esi
call    sub_45ca00
add     esp, 10h
lea     eax, [esp+10h+var_2]
push    2
push    eax
mov     ecx, ds:dword_4a861c
push    1
mov     edx, [ecx]
push    edx
call    sub_45c8a0
inc     [esp+20h+var_2]
add     esp, 10h
mov     ecx, [esi]
push    ecx
call    sub_45c830
add     esp, 4
mov     ecx, ds:dword_4a861c
push    eax
push    esi
mov     ax, [esp+18h+var_2]
add     ax, 64h
push    eax
push    ecx
call    sub_45cb00
add     esp, 10h
test    eax, eax
jz      short loc_4587fe
lea     eax, [esp+10h+var_2]
push    2
push    eax
mov     ecx, ds:dword_4a861c
push    1
push    ecx
call    sub_45ca00
add     esp, 10h
cmp     eax, 1
sbb     edi, edi
neg     edi
test    esi, esi
jz      short loc_45880b
push    esi
call    sub_45c820
add     esp, 4
test    edi, edi
jz      short loc_45881b
push    5
push    1ch
call    sub_45c150
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
push    esi
push    edi
xor     esi, esi
xor     edi, edi
cmp     ds:dword_4a861c, edi
jz      loc_4588f2
lea     eax, [esp+0ch+var_2]
push    2
push    eax
mov     ecx, ds:dword_4a861c
push    1
mov     edx, [ecx]
push    edx
call    sub_45c8a0
add     esp, 10h
cmp     [esp+0ch+var_2], di
jle     loc_4588f2
mov     ax, [esp+0ch+var_2]
mov     ecx, ds:dword_4a861c
add     ax, 64h
push    eax
push    ecx
call    sub_45c920
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_4588ff
mov     eax, [esp+0ch+arg_4]
mov     ecx, [esp+0ch+arg_0]
push    eax
push    ecx
push    esi
call    sub_458f80
add     esp, 0ch
test    eax, eax
jnz     short loc_4588f2
mov     eax, [esp+0ch+arg_c]
mov     ecx, [esp+0ch+arg_8]
push    eax
mov     edx, [esi]
push    ecx
push    3
push    edx
call    sub_45c990
mov     ax, [esp+1ch+var_2]
add     esp, 10h
add     ax, 64h
mov     ecx, ds:dword_4a861c
push    eax
push    ecx
call    sub_45cc50
dec     [esp+14h+var_2]
lea     ecx, [esp+14h+var_2]
add     esp, 8
mov     edx, ds:dword_4a861c
mov     edi, 1
push    2
push    ecx
push    1
push    edx
call    sub_45ca00
add     esp, 10h
test    esi, esi
jz      short loc_4588ff
push    esi
call    sub_45c820
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 4
cmp     ds:dword_4a861c, 0
mov     [esp+4+var_2], 0
jz      short loc_45893d
lea     eax, [esp+4+var_2]
push    2
push    eax
mov     ecx, ds:dword_4a861c
push    1
mov     edx, [ecx]
push    edx
call    sub_45c8a0
add     esp, 10h
cmp     [esp+4+var_2], 1
sbb     eax, eax
add     esp, 4
neg     eax
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    esi
call    sub_44b480
add     esp, 4
cmp     ds:dword_4a861c, 0
jz      loc_4589f8
push    esi
call    sub_44ad30
add     esp, 4
push    1
push    esi
call    sub_44baf0
mov     [esp+1ch+hobject], eax
mov     [esp+1ch+var_4], edx
add     esp, 8
cmp     [esp+14h+hobject], 0
jz      short loc_4589f8
mov     eax, ds:dword_4a861c
mov     ecx, [eax]
push    ecx
call    sub_45c830
add     esp, 4
mov     edi, eax
mov     ecx, ds:dword_4a861c
push    ecx
call    ds:globallock
mov     edx, [esp+14h+hobject]
push    0
mov     ecx, [esp+18h+var_4]
push    0
push    edi
push    eax
push    ecx
push    edx
call    sub_44b1f0
mov     edx, [esp+2ch+hobject]
mov     ecx, [esp+2ch+var_4]
add     esp, 18h
mov     ebx, eax
push    ecx
push    edx
call    sub_44ae90
add     esp, 8
mov     ecx, ds:dword_4a861c
push    ecx
call    ds:globalunlock
cmp     ebx, edi
jz      short loc_4589f8
push    esi
call    sub_44b480
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ds:dword_4a861c
push    eax
call    sub_45c820
mov     eax, [esp+4+arg_0]
add     esp, 4
push    eax
call    sub_458af0
add     esp, 4
mov     ds:dword_4a861c, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, ds:dword_4a861c
test    eax, eax
jz      short locret_458a4c
push    eax
call    sub_45c820
mov     ds:dword_4a861c, 0
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 8
push    ebx
push    esi
push    edi
push    eax
xor     edi, edi
call    sub_458af0
add     esp, 4
mov     esi, eax
cmp     esi, edi
jz      short loc_458ada
lea     eax, [esp+14h+var_6]
push    2
push    eax
mov     ecx, [esi]
push    1
push    ecx
call    sub_45c8a0
add     esp, 10h
cmp     [esp+14h+var_6], di
jz      short loc_458ad1
mov     ax, [esp+14h+var_6]
add     ax, 64h
push    eax
push    esi
call    sub_45c920
add     esp, 8
mov     ebx, eax
cmp     ebx, edi
jz      short loc_458ad1
lea     eax, [esp+14h+var_4]
mov     ecx, [esp+14h+arg_4]
push    eax
push    ecx
push    ebx
call    sub_458f80
add     esp, 0ch
test    eax, eax
jnz     short loc_458ac8
mov     eax, [esp+14h+var_4]
mov     edi, 1
push    eax
call    sub_44f4a0
add     esp, 4
push    ebx
call    sub_45c820
add     esp, 4
push    esi
call    sub_45c820
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     eax, [esp+arg_0]
sub     esp, 8
push    ebx
push    esi
push    edi
push    eax
call    sub_44a450
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_458b12
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+14h+arg_0]
push    0
push    eax
call    sub_44baf0
mov     [esp+1ch+hobject], eax
mov     [esp+1ch+var_4], edx
add     esp, 8
cmp     [esp+14h+hobject], 0
jnz     short loc_458b39
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    2
push    esi
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_458b53
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    edi
call    ds:globallock
mov     ecx, [esp+14h+var_4]
push    0
push    0
push    esi
push    eax
push    ecx
mov     eax, [esp+28h+hobject]
push    eax
call    sub_44b0c0
add     esp, 18h
mov     ebx, eax
push    edi
call    ds:globalunlock
mov     ecx, [esp+14h+hobject]
mov     eax, [esp+14h+var_4]
push    eax
push    ecx
call    sub_44ae90
add     esp, 8
cmp     ebx, esi
jz      short loc_458ba3
push    edi
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 40h
push    ebx
push    esi
push    edi
mov     esi, offset off_4ab238
lea     ecx, [esp+4ch+var_3c]
push    ebp
push    1
xor     ebx, ebx
push    0ah
mov     edi, offset off_4ab250
mov     [esp+58h+var_40], esi
push    0ah
call    sub_459cb0
lea     ecx, [esp+50h+var_1c]
push    1
mov     [esp+54h+var_24], ebx
push    0ah
mov     [esp+58h+var_40], edi
push    0ah
mov     [esp+5ch+var_20], esi
call    sub_459cb0
lea     ecx, [esp+50h+var_40]
mov     [esp+50h+var_4], ebx
mov     [esp+50h+var_20], edi
call    sub_4928e0
mov     esi, eax
lea     ecx, [esp+50h+var_20]
test    esi, esi
jz      short loc_458c24
call    sub_4928f0
lea     ecx, [esp+50h+var_40]
call    sub_4928f0
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
call    sub_4928e0
mov     esi, eax
test    esi, esi
jz      short loc_458c4b
lea     ecx, [esp+50h+var_20]
call    sub_4928f0
lea     ecx, [esp+50h+var_40]
call    sub_4928f0
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     eax, [esp+50h+arg_4]
lea     ecx, [esp+50h+var_40]
push    eax
call    sub_492e10
mov     esi, eax
test    esi, esi
jz      short loc_458c7b
lea     ecx, [esp+50h+var_20]
call    sub_4928f0
lea     ecx, [esp+50h+var_40]
call    sub_4928f0
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     eax, [esp+50h+arg_8]
lea     ecx, [esp+50h+var_20]
push    eax
call    sub_492e10
mov     ebx, eax
test    ebx, ebx
jz      short loc_458cab
lea     ecx, [esp+50h+var_20]
call    sub_4928f0
lea     ecx, [esp+50h+var_40]
call    sub_4928f0
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
lea     ecx, [esp+50h+var_40]
call    sub_492ca0
mov     edi, eax
push    42h
lea     ecx, [esp+54h+var_40]
call    sub_492ca0
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_458d94
push    esi
call    ds:globallock
lea     ecx, [esp+50h+var_40]
push    eax
call    sub_492cf0
push    esi
call    ds:globalunlock
push    edi
push    esi
mov     edi, [esp+58h+arg_0]
push    1
push    edi
call    sub_45cb00
add     esp, 10h
push    esi
call    sub_45ba00
lea     ecx, [esp+54h+var_20]
add     esp, 4
call    sub_492ca0
mov     ebp, eax
push    42h
lea     ecx, [esp+54h+var_20]
call    sub_492ca0
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_458d75
push    esi
call    ds:globallock
lea     ecx, [esp+50h+var_20]
push    eax
call    sub_492cf0
push    esi
call    ds:globalunlock
push    ebp
push    esi
push    2
push    edi
call    sub_45cb00
add     esp, 10h
push    esi
call    sub_45ba00
lea     ecx, [esp+54h+var_20]
add     esp, 4
call    sub_4928f0
lea     ecx, [esp+50h+var_40]
call    sub_4928f0
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
lea     ecx, [esp+50h+var_20]
call    sub_4928f0
lea     ecx, [esp+50h+var_40]
call    sub_4928f0
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
lea     ecx, [esp+50h+var_20]
call    sub_4928f0
lea     ecx, [esp+50h+var_40]
call    sub_4928f0
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
sub     esp, 44h
push    ebx
push    esi
push    edi
mov     esi, offset off_4ab238
lea     ecx, [esp+50h+var_3c]
push    ebp
push    1
xor     ebx, ebx
push    0ah
mov     edi, offset off_4ab250
mov     [esp+5ch+var_40], esi
push    0ah
call    sub_459cb0
lea     ecx, [esp+54h+var_1c]
push    1
mov     [esp+58h+var_24], ebx
push    0ah
mov     [esp+5ch+var_40], edi
push    0ah
mov     [esp+60h+var_20], esi
call    sub_459cb0
mov     [esp+54h+var_20], edi
mov     edi, [esp+54h+arg_4]
mov     ecx, [esp+54h+arg_8]
mov     [esp+54h+var_4], ebx
mov     [edi], ebx
mov     [ecx], ebx
lea     ecx, [esp+54h+var_40]
call    sub_4928e0
mov     esi, eax
lea     ecx, [esp+54h+var_20]
test    esi, esi
jz      short loc_458e40
call    sub_4928f0
lea     ecx, [esp+54h+var_40]
call    sub_4928f0
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
call    sub_4928e0
mov     esi, eax
test    esi, esi
jz      short loc_458e67
lea     ecx, [esp+54h+var_20]
call    sub_4928f0
lea     ecx, [esp+54h+var_40]
call    sub_4928f0
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     ebp, [esp+54h+hmem]
push    1
push    ebp
call    sub_45c920
add     esp, 8
mov     ebx, eax
mov     eax, [ebp+0]
push    1
push    eax
call    sub_45c870
movzx   eax, ax
add     esp, 8
test    ebx, ebx
jz      short loc_458ec1
movzx   eax, ax
push    eax
push    ebx
call    ds:globallock
lea     ecx, [esp+58h+var_40]
push    eax
call    sub_492ba0
mov     esi, eax
push    ebx
call    sub_45ba00
add     esp, 4
test    esi, esi
jnz     short loc_458ec1
lea     eax, [esp+54h+var_44]
lea     ecx, [esp+54h+var_40]
push    eax
call    sub_492e30
mov     [edi], eax
push    2
push    ebp
call    sub_45c920
add     esp, 8
mov     ebx, eax
mov     eax, [ebp+0]
push    2
push    eax
call    sub_45c870
movzx   eax, ax
add     esp, 8
test    ebx, ebx
jz      short loc_458f31
movzx   eax, ax
push    eax
push    ebx
call    ds:globallock
lea     ecx, [esp+58h+var_20]
push    eax
call    sub_492ba0
mov     esi, eax
push    ebx
call    sub_45ba00
add     esp, 4
test    esi, esi
jnz     short loc_458f1d
lea     eax, [esp+54h+var_44]
lea     ecx, [esp+54h+var_20]
push    eax
call    sub_492e30
mov     ecx, [esp+54h+arg_8]
mov     [ecx], eax
jmp     short loc_458f31
mov     eax, [edi]
mov     ecx, dword_4adc68
push    eax
call    sub_44c050
mov     dword ptr [edi], 0
lea     ecx, [esp+54h+var_20]
call    sub_4928f0
lea     ecx, [esp+54h+var_40]
call    sub_4928f0
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     eax, [esp+arg_8]
push    esi
push    eax
mov     esi, dword_4adc68
mov     ecx, esi
call    sub_44c1e0
mov     ecx, [esp+4+arg_4]
push    eax
push    ecx
mov     ecx, esi
call    sub_44c1e0
push    eax
mov     eax, [esp+0ch+arg_0]
push    eax
call    sub_458bb0
add     esp, 0ch
pop     esi
retn
mov     edx, [esp+hmem]
sub     esp, 8
lea     eax, [esp+8+var_8]
lea     ecx, [esp+8+var_4]
push    eax
push    ecx
push    edx
call    sub_458dc0
add     esp, 0ch
test    eax, eax
jnz     short loc_458fb2
mov     edx, [esp+8+var_4]
mov     ecx, [esp+8+arg_4]
mov     [ecx], edx
mov     edx, [esp+8+var_8]
mov     ecx, [esp+8+arg_8]
mov     [ecx], edx
add     esp, 8
retn
push    esi
mov     esi, [esp+4+arg_0]
and     esi, 1ffffh
cmp     esi, 80h
jnb     short loc_459008
cmp     dword_4af134, 1
jle     short loc_458fe9
push    20h
push    esi
call    __isctype
add     esp, 8
jmp     short loc_458ff8
mov     ecx, off_4aef28
xor     eax, eax
mov     ax, [ecx+esi*2]
and     eax, 20h
test    eax, eax
jnz     short loc_459008
cmp     esi, 20h
jz      short loc_459008
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
sub     esp, 44h
lea     eax, [esp+44h+string2]
push    ebx
push    esi
push    edi
mov     edi, [esp+50h+arg_4]
push    ebp
mov     esi, [esp+54h+arg_0]
push    40h
push    eax
push    edi
push    esi
call    sub_459290
mov     [esp+64h+var_44], eax
add     esp, 10h
test    al, 1
jnz     short loc_459042
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
test    edi, 40000h
jz      short loc_459071
mov     ebp, [esp+54h+cchbuffermax]
mov     ebx, [esp+54h+lpbuffer]
push    ebp
push    ebx
push    1ah
call    sub_459680
add     esp, 0ch
add     ebx, eax
sub     ebp, eax
test    esi, 1
jz      short loc_459079
mov     byte ptr [ebx], 2bh
inc     ebx
dec     ebp
jmp     short loc_459079
mov     ebx, [esp+54h+lpbuffer]
mov     ebp, [esp+54h+cchbuffermax]
test    edi, 80000h
jz      short loc_45909e
push    ebp
push    ebx
push    2
call    sub_459680
add     esp, 0ch
add     ebx, eax
sub     ebp, eax
test    esi, 1
jz      short loc_45909e
mov     byte ptr [ebx], 2bh
inc     ebx
dec     ebp
test    edi, 20000h
jz      short loc_4590ca
test    byte ptr [esp+54h+var_44], 2
jnz     short loc_4590ca
push    ebp
push    ebx
push    0
call    sub_459680
add     esp, 0ch
add     ebx, eax
sub     ebp, eax
test    esi, 1
jz      short loc_4590ca
mov     byte ptr [ebx], 2bh
inc     ebx
dec     ebp
lea     eax, [esp+54h+string2]
push    ebp
push    eax
push    ebx
call    sub_47f9d0
add     esp, 0ch
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
sub     esp, 4
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
cmp     sz, bl
jnz     loc_45919c
push    0ch
push    offset sz
push    1ah
call    sub_459680
add     esp, 0ch
mov     edi, ds:charuppera
push    offset sz
call    edi
push    0ch
push    offset byte_4ae034
push    2
call    sub_459680
add     esp, 0ch
push    offset byte_4ae034
call    edi
push    0ch
push    offset byte_4ae044
push    ebx
call    sub_459680
add     esp, 0ch
push    offset byte_4ae044
call    edi
push    0ch
push    offset byte_4ae054
push    18h
call    sub_459680
add     esp, 0ch
push    offset byte_4ae054
call    edi
push    0ch
push    offset byte_4ae064
push    1
call    sub_459680
add     esp, 0ch
push    offset byte_4ae064
call    edi
push    0ch
push    offset byte_4ae074
push    1bh
call    sub_459680
add     esp, 0ch
push    offset byte_4ae074
call    edi
jmp     short loc_4591a2
mov     edi, ds:charuppera
mov     esi, [esp+14h+lpstring]
cmp     byte ptr [esi], 0
jnz     short loc_4591b5
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
call    ds:lstrlena
mov     al, [esi+eax-1]
push    esi
mov     [esp+18h+var_1], al
call    edi
xor     edi, edi
mov     ebp, offset dword_4ae020
lea     eax, [ebp+4]
cmp     byte ptr [eax], 0
jz      short loc_4591e4
push    esi
push    eax
call    sub_4596a0
add     esp, 8
test    eax, eax
jnz     short loc_4591f1
add     ebp, 10h
cmp     ebp, offset akeyw
jb      short loc_4591ce
jmp     short loc_459205
or      ebx, [ebp+0]
add     ebp, 4
push    ebp
mov     edi, 1
call    ds:lstrlena
add     esi, eax
test    edi, edi
jnz     short loc_4591c7
cmp     byte ptr [esi+1], 0
jnz     short loc_45926f
test    ebx, 0c0000h
jz      short loc_45925f
cmp     dword_4af134, 1
jle     short loc_459233
push    2
xor     eax, eax
mov     al, [esp+18h+var_1]
push    eax
call    __isctype
add     esp, 8
jmp     short loc_459248
xor     edx, edx
mov     ecx, off_4aef28
mov     dl, [esp+14h+var_1]
xor     eax, eax
mov     ax, [ecx+edx*2]
and     eax, 2
test    eax, eax
jz      short loc_45925f
xor     eax, eax
mov     al, [esp+14h+var_1]
push    eax
call    _toupper
mov     [esp+18h+var_1], al
add     esp, 4
xor     eax, eax
mov     al, [esp+14h+var_1]
pop     ebp
or      eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
call    sub_4594b0
add     esp, 4
test    eax, eax
jz      short loc_459286
or      eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+arg_4]
mov     ebp, offset dword_4adf70
mov     ebx, edi
and     ebx, 1ffffh
cmp     dword_4adf70, 0
jz      short loc_4592fe
and     edi, 20000h
mov     esi, [esp+10h+lpbuffer]
mov     eax, [esp+10h+cchbuffermax]
mov     ecx, [ebp+4]
push    eax
push    esi
push    ecx
call    sub_459680
add     esp, 0ch
test    edi, edi
jz      short loc_4592da
mov     eax, ebx
or      eax, 20000h
cmp     eax, [ebp+0]
jz      short loc_4592ea
cmp     [ebp+0], ebx
jz      short loc_4592f4
add     ebp, 8
cmp     dword ptr [ebp+0], 0
jnz     short loc_4592b8
jmp     short loc_459302
mov     eax, 3
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     esi, [esp+10h+lpbuffer]
cmp     ebx, 10070h
jb      short loc_459316
cmp     ebx, 1007fh
jbe     loc_4593c7
mov     edi, [esp+10h+arg_0]
test    edi, 2
jz      short loc_459337
test    bl, 80h
jz      short loc_459337
mov     eax, 7
pop     ebp
pop     edi
mov     [esi], bl
mov     byte ptr [esi+1], 0
pop     esi
pop     ebx
retn
cmp     ebx, 80h
jnb     short loc_4593bd
cmp     dword_4af134, 1
jle     short loc_459355
push    20h
push    ebx
call    __isctype
add     esp, 8
jmp     short loc_459364
mov     ecx, off_4aef28
xor     eax, eax
mov     ax, [ecx+ebx*2]
and     eax, 20h
test    eax, eax
jnz     short loc_4593bd
test    edi, 1
mov     [esi], bl
jz      short loc_4593af
cmp     dword_4af134, 1
jle     short loc_45938b
movsx   eax, bl
push    2
push    eax
call    __isctype
add     esp, 8
jmp     short loc_45939d
movsx   ecx, bl
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 2
test    eax, eax
jz      short loc_4593af
movsx   eax, byte ptr [esi]
push    eax
call    _toupper
add     esp, 4
mov     [esi], al
mov     eax, 3
pop     ebp
mov     byte ptr [esi+1], 0
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
mov     byte ptr [esi], 0
pop     esi
pop     ebx
retn
mov     eax, [esp+10h+cchbuffermax]
sub     ebx, 10070h
push    eax
push    esi
push    3
call    sub_459680
add     esp, 0ch
add     esi, eax
cmp     ebx, 0fh
ja      short def_4593e4
jmp     ds:jpt_4593e4[ebx*4]
mov     byte ptr [esi], 31h
jmp     short loc_459456
mov     byte ptr [esi], 32h
jmp     short loc_459456
mov     byte ptr [esi], 33h
jmp     short loc_459456
mov     byte ptr [esi], 34h
jmp     short loc_459456
mov     byte ptr [esi], 35h
jmp     short loc_459456
mov     byte ptr [esi], 37h
jmp     short loc_459456
mov     byte ptr [esi], 38h
jmp     short loc_459456
mov     byte ptr [esi], 39h
jmp     short loc_459456
mov     byte ptr [esi], 31h
mov     byte ptr [esi+1], 30h
inc     esi
jmp     short loc_459456
mov     byte ptr [esi], 31h
mov     byte ptr [esi+1], 31h
inc     esi
jmp     short loc_459456
mov     byte ptr [esi], 31h
mov     byte ptr [esi+1], 32h
inc     esi
jmp     short loc_459456
mov     byte ptr [esi], 31h
mov     byte ptr [esi+1], 33h
inc     esi
jmp     short loc_459456
mov     byte ptr [esi], 31h
mov     byte ptr [esi+1], 34h
inc     esi
jmp     short loc_459456
mov     byte ptr [esi], 31h
mov     byte ptr [esi+1], 35h
inc     esi
jmp     short loc_459456
mov     byte ptr [esi], 31h
inc     esi
mov     byte ptr [esi], 36h
inc     esi
mov     eax, 1
pop     ebp
pop     edi
mov     byte ptr [esi], 0
pop     esi
pop     ebx
retn
sub     esp, 64h
lea     eax, [esp+64h+sz]
push    ebx
push    esi
push    edi
push    ebp
push    64h
push    eax
push    3
call    sub_459680
add     esp, 0ch
mov     esi, eax
mov     edi, ds:charuppera
lea     eax, [esp+74h+sz]
push    eax
call    edi
mov     ebx, [esp+74h+lpstring1]
lea     eax, [esp+74h+sz]
push    ebx
push    eax
call    sub_4596a0
add     esp, 8
test    eax, eax
jz      def_459507
lea     eax, [ebx+esi]
push    eax
call    sub_47fbb0
add     esp, 4
dec     eax
cmp     eax, 0fh
ja      def_459507
jmp     ds:jpt_459507[eax*4]
mov     eax, 10070h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 10071h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 10072h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 10073h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 10074h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 10075h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 10076h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 10077h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 10078h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 10079h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 1007ah
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 1007bh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 1007ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 1007dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 1007eh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, 1007fh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
cmp     dword_4adf70, 0
mov     ebp, offset dword_4adf70
jz      short loc_459625
mov     esi, ds:lstrcmpa
lea     eax, [esp+74h+sz]
push    64h
push    eax
mov     ecx, [ebp+4]
push    ecx
call    sub_459680
add     esp, 0ch
test    eax, eax
jz      short loc_45961c
lea     eax, [esp+74h+sz]
push    eax
call    edi
lea     eax, [esp+74h+sz]
push    eax
push    ebx
call    esi
test    eax, eax
jz      short loc_45962f
add     ebp, 8
cmp     dword ptr [ebp+0], 0
jnz     short loc_4595f2
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, [ebp+0]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     eax, dword ptr [esp+arg_0]
mov     ecx, [esp+cchbuffermax]
mov     edx, [esp+lpbuffer]
push    eax
push    580h
push    ecx
push    edx
call    sub_47fe70
add     esp, 10h
retn
mov     eax, [esp+arg_0]
push    ebx
mov     ecx, [esp+4+arg_4]
mov     bl, [eax]
test    bl, bl
jz      short loc_4596bb
inc     eax
mov     edx, ecx
inc     ecx
cmp     [edx], bl
jz      short loc_4596a9
xor     eax, eax
pop     ebx
retn
mov     eax, 1
pop     ebx
retn
mov     edx, [esp+uvirtkey]
sub     esp, 10ch
cmp     edx, 8
push    ebx
push    esi
push    edi
jb      short loc_4596fc
cmp     edx, 0dh
ja      short loc_4596fc
mov     esi, [esp+118h+arg_4]
pop     edi
or      esi, edx
mov     eax, esi
pop     esi
pop     ebx
add     esp, 10ch
retn
cmp     edx, 20h
jnz     short loc_459717
mov     esi, [esp+118h+arg_4]
pop     edi
or      esi, 20h
mov     eax, esi
pop     esi
pop     ebx
add     esp, 10ch
retn
cmp     edx, 2fh
ja      short loc_459737
mov     esi, [esp+118h+arg_4]
pop     edi
or      esi, edx
or      esi, 10000h
mov     eax, esi
pop     esi
pop     ebx
add     esp, 10ch
retn
cmp     edx, 60h
jb      short loc_459755
cmp     edx, 69h
ja      short loc_459755
lea     eax, [edx-30h]
or      eax, [esp+118h+arg_4]
pop     edi
pop     esi
pop     ebx
add     esp, 10ch
retn
lea     eax, [edx-6ah]
cmp     eax, 26h
ja      short def_459765
xor     ecx, ecx
mov     cl, ds:byte_459940[eax]
jmp     ds:jpt_459765[ecx*4]
cmp     edx, 70h
jb      short loc_459791
cmp     edx, 7fh
ja      short loc_459791
mov     esi, [esp+118h+arg_4]
pop     edi
or      esi, edx
or      esi, 10000h
mov     eax, esi
pop     esi
pop     ebx
add     esp, 10ch
retn
lea     edi, [esp+118h+keystate]
xor     eax, eax
mov     ecx, 40h
rep stosd
mov     esi, [esp+118h+arg_4]
test    esi, 20000h
jz      short loc_4597b2
mov     [esp+118h+var_f0], 80h
lea     eax, [esp+118h+char]
push    0
lea     ecx, [esp+11ch+keystate]
push    eax
push    ecx
push    0
push    edx
call    ds:toascii
cmp     eax, 1
jl      loc_45989b
cmp     dword_4af134, 1
mov     al, byte ptr [esp+118h+char]
mov     [esp+118h+var_109], al
jle     short loc_4597f5
xor     ebx, ebx
push    103h
mov     bl, al
push    ebx
call    __isctype
add     esp, 8
jmp     short loc_45980c
xor     ebx, ebx
mov     ecx, off_4aef28
mov     bl, [esp+118h+var_109]
xor     eax, eax
mov     ax, [ecx+ebx*2]
and     eax, 103h
test    eax, eax
jz      short loc_459889
test    esi, 0c0000h
jz      short loc_459843
cmp     dword_4af134, 1
jle     short loc_45982e
push    2
push    ebx
call    __isctype
add     esp, 8
jmp     short loc_45983d
mov     ecx, off_4aef28
xor     eax, eax
mov     ax, [ecx+ebx*2]
and     eax, 2
test    eax, eax
jz      short loc_459889
jmp     short loc_45987c
test    esi, 100000h
jz      short loc_459889
cmp     dword_4af134, 1
jle     short loc_459861
push    1
push    ebx
call    __isctype
add     esp, 8
jmp     short loc_459870
mov     ecx, off_4aef28
xor     eax, eax
mov     ax, [ecx+ebx*2]
and     eax, 1
test    eax, eax
jz      short loc_45987c
push    ebx
call    _tolower
jmp     short loc_459882
push    ebx
call    _toupper
mov     [esp+11ch+var_109], al
add     esp, 4
xor     eax, eax
mov     al, [esp+118h+var_109]
pop     edi
or      eax, esi
pop     esi
pop     ebx
add     esp, 10ch
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10ch
retn
mov     eax, [esp+118h+arg_4]
pop     edi
or      eax, 2ah
pop     esi
pop     ebx
add     esp, 10ch
retn
mov     eax, [esp+118h+arg_4]
pop     edi
or      eax, 2bh
pop     esi
pop     ebx
add     esp, 10ch
retn
mov     eax, [esp+118h+arg_4]
pop     edi
or      eax, 2dh
pop     esi
pop     ebx
add     esp, 10ch
retn
mov     eax, [esp+118h+arg_4]
pop     edi
or      eax, 2eh
pop     esi
pop     ebx
add     esp, 10ch
retn
mov     eax, [esp+118h+arg_4]
pop     edi
or      eax, 2fh
pop     esi
pop     ebx
add     esp, 10ch
retn
mov     eax, [esp+118h+arg_4]
pop     edi
or      eax, edx
pop     esi
or      eax, 10000h
pop     ebx
add     esp, 10ch
retn
mov     eax, [esp+arg_0]
and     eax, 1ffffh
sub     eax, 10010h
cmp     eax, 80h
ja      short def_45998d
xor     ecx, ecx
mov     cl, ds:byte_4599b0[eax]
jmp     ds:jpt_45998d[ecx*4]
xor     eax, eax
retn
mov     eax, 1
retn
push    esi
push    edi
xor     esi, esi
push    10h
mov     edi, ds:getkeystate
call    edi
test    ah, 80h
jz      short loc_459a58
mov     esi, 20000h
push    12h
call    edi
test    ah, 80h
jz      short loc_459a67
or      esi, 80000h
push    11h
call    edi
test    ah, 80h
jz      short loc_459a76
or      esi, 40000h
push    14h
call    edi
test    al, 1
jz      short loc_459a84
or      esi, 100000h
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
test    eax, 10000h
jz      short locret_459a9d
xor     al, al
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_4]
push    edi
push    esi
push    0
call    sub_459a90
mov     edi, [esp+18h+arg_8]
add     esp, 8
mov     bl, al
push    edi
push    0
call    sub_459a90
mov     [esp+18h+var_1], al
add     esp, 8
cmp     dword_4af134, 1
jle     short loc_459ae6
movsx   eax, bl
push    103h
push    eax
call    __isctype
add     esp, 8
jmp     short loc_459afa
movsx   ecx, bl
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 103h
test    eax, eax
jz      short loc_459b64
cmp     dword_4af134, 1
jle     short loc_459b1c
movsx   eax, [esp+10h+var_1]
push    103h
push    eax
call    __isctype
add     esp, 8
jmp     short loc_459b32
movsx   ecx, [esp+10h+var_1]
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 103h
test    eax, eax
jz      short loc_459b64
movsx   eax, bl
push    eax
and     esi, 0ff0000h
call    _toupper
add     esp, 4
or      eax, esi
mov     esi, eax
and     edi, 0ff0000h
movsx   ecx, [esp+10h+var_1]
push    ecx
call    _toupper
add     esp, 4
or      eax, edi
mov     edi, eax
sub     edi, esi
cmp     edi, 1
pop     edi
sbb     eax, eax
pop     esi
neg     eax
pop     ebx
add     esp, 4
retn
mov     ecx, [esp+arg_0]
and     ecx, 0ffffh
cmp     ecx, 8
jb      short loc_459b9a
cmp     ecx, 0dh
ja      short loc_459b9a
mov     eax, 1
retn
cmp     ecx, 20h
jnz     short loc_459ba5
mov     eax, 1
retn
cmp     ecx, 2fh
ja      short loc_459bb0
mov     eax, 1
retn
cmp     ecx, 60h
jb      short loc_459bc0
cmp     ecx, 69h
ja      short loc_459bc0
mov     eax, 1
retn
lea     eax, [ecx-6ah]
cmp     eax, 26h
ja      short def_459bd0
xor     edx, edx
mov     dl, ds:byte_459c00[eax]
jmp     ds:jpt_459bd0[edx*4]
cmp     ecx, 70h
jb      short loc_459be7
cmp     ecx, 7fh
ja      short loc_459be7
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, 1
retn
mov     eax, [esp+arg_0]
push    esi
cmp     eax, 100h
jz      short loc_459c4c
cmp     eax, 101h
jz      short loc_459c7d
cmp     eax, 102h
jz      short loc_459c9b
pop     esi
retn
mov     esi, [esp+4+arg_c]
mov     dword ptr [esi], 1
call    sub_459a40
push    eax
mov     eax, [esp+8+uvirtkey]
push    eax
call    sub_4596d0
add     esp, 8
mov     [esi+4], eax
mov     eax, [esp+4+arg_8]
and     eax, 40000000h
shr     eax, 1eh
mov     [esi+8], eax
pop     esi
retn
mov     esi, [esp+4+arg_c]
push    0
mov     eax, [esp+8+uvirtkey]
mov     dword ptr [esi], 0
push    eax
call    sub_4596d0
add     esp, 8
mov     [esi+4], eax
pop     esi
retn
mov     esi, [esp+4+arg_c]
mov     eax, [esp+4+uvirtkey]
mov     dword ptr [esi], 2
mov     [esi+0ch], eax
pop     esi
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     [ecx], eax
mov     [ecx+4], edx
mov     eax, [esp+arg_8]
mov     [ecx+10h], eax
xor     eax, eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+14h], eax
mov     eax, ecx
retn    0ch
push    ebx
push    esi
mov     eax, [ecx+14h]
push    edi
mov     esi, ecx
xor     ebx, ebx
test    eax, eax
jz      short loc_459cf7
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [esi]
shl     eax, 2
push    eax
call    ??2@yapaxi@z
add     esp, 4
mov     edi, eax
mov     [esi+14h], eax
test    edi, edi
jz      short loc_459d25
mov     ecx, [esi]
xor     eax, eax
shl     ecx, 2
shr     ecx, 2
rep stosd
pop     edi
mov     eax, [esi]
mov     [esi+8], eax
mov     eax, ebx
pop     esi
pop     ebx
retn
mov     ebx, 8
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
retn
sub     esp, 4
mov     [esp+4+var_4], 0
push    ebx
push    esi
mov     eax, [ecx+8]
push    edi
add     eax, [ecx+4]
push    ebp
shl     eax, 2
mov     ebx, ecx
push    eax
call    ??2@yapaxi@z
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_459d9e
mov     eax, [ebx+8]
mov     edi, ebp
add     eax, [ebx+4]
lea     ecx, ds:0[eax*4]
xor     eax, eax
shr     ecx, 2
rep stosd
mov     eax, [ebx+4]
mov     edi, ebp
add     eax, [ebx+8]
mov     esi, [ebx+14h]
mov     [ebx+8], eax
lea     ecx, ds:0[eax*4]
shr     ecx, 2
rep movsd
mov     eax, [ebx+14h]
test    eax, eax
jz      short loc_459d99
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     [ebx+14h], ebp
jmp     short loc_459da6
mov     [esp+14h+var_4], 8
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
xor     eax, eax
mov     esi, [ecx+14h]
test    esi, esi
jz      short loc_459de3
mov     edx, [esp+4+arg_0]
cmp     [ecx+0ch], edx
jle     short loc_459de3
cmp     [ecx+10h], eax
jz      short loc_459ddf
mov     eax, [esi+edx*4]
pop     esi
retn    4
mov     eax, [esi+edx*4-4]
pop     esi
retn    4
push    esi
xor     eax, eax
cmp     [ecx+10h], eax
push    edi
mov     esi, ecx
mov     edi, [esp+8+arg_0]
jnz     short loc_459e00
dec     edi
cmp     [esi+8], edi
jge     short loc_459e10
mov     ecx, esi
call    sub_459d30
test    eax, eax
jz      short loc_459e00
test    eax, eax
jnz     short loc_459e27
mov     edx, [esi+14h]
mov     ecx, [esp+8+arg_4]
mov     [edx+edi*4], ecx
cmp     [esi+0ch], edi
jg      short loc_459e27
inc     edi
mov     [esi+0ch], edi
pop     edi
pop     esi
retn    8
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
cmp     dword ptr [ecx+10h], 0
mov     edi, ecx
jnz     short loc_459e40
dec     ebx
xor     esi, esi
mov     eax, [edi+14h]
mov     eax, [eax+ebx*4]
test    eax, eax
jz      short loc_459e73
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [edi+14h]
mov     [eax+ebx*4], esi
mov     eax, [edi+0ch]
mov     ecx, eax
sub     ecx, ebx
cmp     ecx, 1
jnz     short loc_459e78
dec     eax
mov     [edi+0ch], eax
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
mov     esi, 1f44h
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
mov     ds:dword_4a862c, 0
push    ebp
mov     eax, [esp+hinstance]
mov     ebp, esp
mov     ds:hinstance, eax
sub     esp, 1ch
call    sub_4567d0
test    eax, eax
jnz     short loc_459eaa
xor     eax, eax
mov     esp, ebp
pop     ebp
retn    10h
push    0
push    offset buf
call    __setjmp3
add     esp, 8
test    eax, eax
jz      short loc_459eca
call    sub_470540
xor     eax, eax
mov     esp, ebp
pop     ebp
retn    10h
call    sub_456800
test    eax, eax
jnz     short loc_459eeb
push    0cfh
mov     eax, off_4ad1e8
push    offset amain2w
push    eax
call    sub_480570
add     esp, 0ch
call    sub_45ada0
test    eax, eax
jnz     short loc_459f11
call    sub_4705f0
mov     eax, ds:hwndparent
test    eax, eax
jz      short loc_459f09
push    eax
call    ds:destroywindow
xor     eax, eax
mov     esp, ebp
pop     ebp
retn    10h
mov     eax, [ebp+nshowcmd]
push    eax
call    sub_456940
add     esp, 4
test    eax, eax
jnz     short loc_459f39
push    0deh
mov     eax, off_4ad1e8
push    offset amain2w
push    eax
call    sub_480570
add     esp, 0ch
mov     eax, [ebp+lpcmdline]
push    eax
call    sub_45a970
add     esp, 4
lea     eax, [ebp+msg]
push    0
push    0
push    0
push    eax
call    ds:getmessagea
test    eax, eax
jz      short loc_459fb3
push    8001fh
push    8001fh
call    __control87
add     esp, 8
lea     eax, [ebp+msg]
push    eax
call    sub_45a730
add     esp, 4
push    7fffh
call    sub_422080
add     esp, 4
mov     eax, ds:hwndparent
cmp     ds:dword_4a862c, 0
jz      short loc_459f9f
test    eax, eax
jz      short loc_459f9f
push    eax
call    sub_445240
add     esp, 4
push    0
lea     eax, [ebp+msg]
push    0
push    0
push    eax
call    ds:getmessagea
test    eax, eax
jnz     short loc_459f59
call    sub_470540
mov     eax, [ebp+msg.wparam]
mov     esp, ebp
pop     ebp
retn    10h
mov     ds:dword_4a862c, 1
retn
mov     eax, ds:dword_4a862c
retn
sub     esp, 110h
cmp     ds:frequency, 0
push    ebx
push    esi
push    edi
jz      loc_45a08b
movsx   eax, word ptr [esp+11ch+lparam]
mov     edi, [esp+11ch+msg]
mov     dword ptr [esp+11ch+buffer], eax
mov     eax, [esp+11ch+lparam]
shr     eax, 10h
cmp     edi, 200h
movsx   ecx, ax
mov     [esp+11ch+var_104], ecx
jb      short loc_45a047
cmp     edi, 209h
ja      short loc_45a047
lea     eax, [esp+11ch+buffer]
push    eax
call    sub_474dd0
add     esp, 4
mov     ecx, [esp+11ch+var_104]
mov     eax, dword ptr [esp+11ch+buffer]
and     ecx, 0ffffh
and     eax, 0ffffh
shl     ecx, 10h
lea     edx, [esp+11ch+var_110]
or      ecx, eax
push    edx
mov     eax, [esp+120h+wparam]
push    ecx
mov     esi, [esp+124h+hwnd]
push    eax
push    edi
push    esi
call    sub_444e50
add     esp, 14h
test    eax, eax
jz      short loc_45a099
mov     eax, [esp+11ch+var_110]
jmp     loc_45a1a2
mov     esi, [esp+11ch+hwnd]
mov     edi, [esp+11ch+msg]
cmp     edi, 16h
mov     eax, edi
ja      short loc_45a0bb
jz      loc_45a23f
dec     eax
cmp     eax, 10h
ja      short def_45a0b4
xor     ecx, ecx
mov     cl, ds:byte_45a674[eax]
jmp     ds:jpt_45a0b4[ecx*4]
cmp     eax, 24h
ja      short loc_45a0f5
jz      loc_45a2c1
cmp     eax, 1ah
jz      loc_45a257
cmp     eax, 1ch
jz      loc_45a281
mov     eax, [esp+11ch+lparam]
mov     ecx, [esp+11ch+wparam]
push    eax
push    ecx
push    edi
push    esi
call    ds:defwindowproca
jmp     loc_45a1a2
cmp     eax, 7eh
ja      short loc_45a10b
jz      loc_45a2e0
cmp     eax, 41h
jz      loc_45a1a0
jmp     short def_45a0b4
cmp     eax, 0a1h
ja      short loc_45a125
jz      loc_45a61e
cmp     eax, 86h
jz      loc_45a2f0
jmp     short def_45a0b4
cmp     eax, 104h
ja      short loc_45a13f
jz      loc_45a3de
cmp     eax, 0a3h
jz      loc_45a37b
jmp     short def_45a0b4
cmp     eax, 117h
ja      short loc_45a163
jz      loc_45a4f9
cmp     eax, 111h
jb      short def_45a0b4
cmp     eax, 112h
jbe     loc_45a3f1
jmp     def_45a0b4
cmp     eax, 40ch
ja      short loc_45a18b
jz      loc_45a581
cmp     eax, 30fh
jz      loc_45a536
cmp     eax, 311h
jz      loc_45a545
jmp     def_45a0b4
cmp     eax, 432h
jz      short loc_45a1a0
jmp     def_45a0b4
push    esi
call    sub_490e70
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 110h
retn    10h
push    esi
call    sub_4677a0
add     esp, 4
push    0
call    ds:postquitmessage
mov     ds:hwndparent, 0
jmp     short loc_45a1a0
mov     eax, [esp+11ch+wparam]
push    eax
call    nullsub_18
jmp     short loc_45a19d
mov     eax, [esp+11ch+wparam]
push    eax
call    sub_491230
jmp     short loc_45a19d
cmp     word ptr [esp+11ch+wparam], 0
jz      short loc_45a1f9
call    sub_44fa30
mov     eax, [esp+11ch+lparam]
mov     ecx, [esp+11ch+wparam]
push    eax
push    ecx
push    edi
push    esi
call    ds:defwindowproca
jmp     short loc_45a1a2
call    sub_466a80
test    eax, eax
jnz     short loc_45a1a0
mov     eax, ds:dword_4a9ef8
test    eax, eax
jz      loc_45a1a0
push    eax
call    ds:setfocus
jmp     loc_45a1a0
mov     eax, 1
jmp     loc_45a1a2
cmp     [esp+11ch+wparam], 0
jz      loc_45a1a0
call    sub_470540
jmp     loc_45a1a0
call    sub_4892f0
test    eax, eax
jz      short loc_45a26f
call    sub_48f530
call    sub_449190
call    sub_449170
mov     eax, [esp+11ch+lparam]
push    eax
call    sub_46fc50
jmp     loc_45a19d
cmp     [esp+11ch+wparam], 0
jnz     short loc_45a29a
call    sub_40af00
call    sub_410830
jmp     loc_45a1a0
push    esi
call    ds:getlastactivepopup
cmp     eax, esi
jz      short loc_45a2b7
push    eax
call    ds:iswindowvisible
test    eax, eax
jnz     short loc_45a2b7
push    esi
call    ds:setactivewindow
call    sub_410830
jmp     loc_45a1a0
cmp     ds:hwndparent, 0
jz      loc_45a1a0
mov     eax, [esp+11ch+lparam]
push    eax
call    sub_491250
jmp     loc_45a19d
mov     eax, ds:hwndparent
push    eax
call    sub_491850
jmp     loc_45a19d
lea     eax, [esp+11ch+buffer]
lea     ecx, [esp+11ch+lparam]
lea     edx, [esp+11ch+wparam]
push    eax
push    ecx
push    edx
push    esi
call    sub_48fa80
add     esp, 10h
test    eax, eax
jz      short loc_45a31b
mov     eax, dword ptr [esp+11ch+buffer]
jmp     loc_45a1a2
mov     ecx, ds:dword_4a9ef8
test    ecx, ecx
jz      def_45a0b4
mov     eax, ds:dword_4a8628
cmp     eax, [esp+11ch+wparam]
jz      def_45a0b4
mov     eax, [esp+11ch+wparam]
push    0
push    eax
mov     ebx, ds:sendmessagea
push    464h
mov     ds:dword_4a8628, eax
push    ecx
call    ebx
mov     ecx, [esp+11ch+lparam]
mov     eax, [esp+11ch+wparam]
push    ecx
mov     edx, ds:dword_4a9ef8
push    eax
push    86h
push    edx
call    ebx
jmp     def_45a0b4
cmp     [esp+11ch+wparam], 5
jnz     loc_45a61e
mov     eax, ds:hwndparent
push    eax
call    sub_4908e0
mov     [esp+120h+var_110], eax
add     esp, 4
push    5
call    ds:getsystemmetrics
movsx   ebx, ax
call    sub_47d200
add     ebx, eax
movsx   eax, word ptr [esp+11ch+lparam]
add     ebx, [esp+11ch+var_110]
cmp     eax, ebx
jg      loc_45a61e
push    0
push    0f060h
push    112h
push    esi
call    ds:postmessagea
mov     eax, 1
jmp     loc_45a1a2
cmp     [esp+11ch+wparam], 79h
jnz     def_45a0b4
jmp     loc_45a1a0
mov     eax, [esp+11ch+wparam]
push    eax
call    sub_461120
add     esp, 4
test    eax, eax
jz      loc_45a4ba
mov     ecx, [esp+11ch+wparam]
and     cx, 0fff0h
movzx   eax, cx
cmp     eax, 0f030h
jz      short loc_45a42d
cmp     eax, 0f100h
jz      short loc_45a46f
cmp     eax, 0f120h
jnz     short loc_45a499
push    esi
call    ds:isiconic
test    eax, eax
jz      short loc_45a465
mov     eax, [esp+11ch+lparam]
mov     ecx, [esp+11ch+wparam]
push    eax
push    ecx
push    edi
push    esi
call    ds:defwindowproca
push    0
push    esi
call    sub_491410
add     esp, 8
mov     eax, 1
jmp     loc_45a1a2
mov     eax, 1
jmp     loc_45a1a2
cmp     cx, 0f100h
jnz     short loc_45a499
lea     eax, [esp+11ch+buffer]
push    eax
push    0
push    12h
push    101h
call    sub_459c30
lea     eax, [esp+12ch+buffer]
add     esp, 10h
push    eax
call    sub_436b70
add     esp, 4
mov     eax, [esp+11ch+lparam]
mov     ecx, [esp+11ch+wparam]
push    eax
push    ecx
push    112h
push    esi
call    ds:defwindowproca
jmp     loc_45a1a2
mov     ax, word ptr [esp+11ch+wparam]
cmp     ax, 7ff0h
ja      def_45a0b4
cmp     edi, 112h
jz      short loc_45a4e3
cmp     word ptr [esp+11ch+lparam], 0
jnz     def_45a0b4
push    eax
call    sub_437dd0
add     esp, 4
test    eax, eax
jnz     loc_45a1a0
jmp     def_45a0b4
mov     eax, [esp+11ch+lparam]
shr     eax, 10h
test    ax, ax
jnz     short loc_45a524
cmp     word ptr [esp+11ch+lparam], 0
jnz     loc_45a1a0
call    sub_461140
test    eax, eax
jz      loc_45a1a0
mov     eax, [esp+11ch+wparam]
push    eax
call    sub_460fe0
jmp     loc_45a19d
call    sub_40aec0
mov     eax, 1
jmp     loc_45a1a2
push    0
call    sub_466ff0
add     esp, 4
test    eax, eax
jz      short loc_45a56f
mov     eax, [esp+11ch+lparam]
push    0
mov     ecx, [esp+120h+wparam]
push    eax
push    ecx
push    edi
push    esi
call    sub_4672b0
add     esp, 14h
mov     eax, [esp+11ch+wparam]
push    eax
call    sub_40b070
jmp     loc_45a19d
xor     esi, esi
push    105h
lea     eax, [esp+120h+buffer]
mov     ecx, [esp+120h+wparam]
push    eax
push    ecx
call    ds:globalgetatomnamea
lea     ecx, [esp+11ch+var_110]
lea     eax, [esp+11ch+buffer]
push    ecx
push    eax
call    sub_44f360
add     esp, 8
cmp     [esp+11ch+var_110], esi
jz      short loc_45a617
mov     cx, ds:word_4a8518
mov     eax, [esp+11ch+var_110]
push    eax
mov     edx, ds:dword_4a8510
push    ecx
push    edx
call    sub_471b70
movzx   esi, ax
add     esp, 0ch
cmp     esi, 2
jnz     short loc_45a60a
mov     cx, word_4ad9ac
mov     eax, [esp+11ch+var_110]
push    eax
mov     edx, ds:dword_4a8514
push    ecx
push    edx
call    sub_471b70
movzx   esi, ax
add     esp, 0ch
cmp     esi, 2
jnz     short loc_45a60a
mov     eax, [esp+11ch+var_110]
push    eax
call    sub_4098f0
add     esp, 4
mov     esi, eax
mov     eax, [esp+11ch+var_110]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, esi
jmp     loc_45a1a2
call    sub_491a20
test    eax, eax
jz      def_45a0b4
cmp     [esp+11ch+wparam], 2
jnz     def_45a0b4
push    esi
call    ds:isiconic
test    eax, eax
jnz     def_45a0b4
mov     eax, 1
jmp     loc_45a1a2
mov     eax, dword_4ae0a8
and     eax, 3
sub     eax, 3
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
sub     esp, 1ch
lea     eax, [esp+1ch+msg]
push    0
push    0
push    0
push    0
push    eax
call    ds:peekmessagea
test    eax, eax
jz      short loc_45a71f
cmp     [esp+1ch+msg.message], 112h
jnz     short loc_45a6e6
mov     eax, [esp+1ch+msg.wparam]
cmp     eax, 0f030h
jz      short loc_45a70d
cmp     eax, 0f060h
jz      short loc_45a716
lea     eax, [esp+1ch+msg]
push    0
push    0
push    0
push    eax
call    ds:getmessagea
lea     ecx, [esp+1ch+msg]
push    ecx
call    sub_45a730
add     esp, 4
mov     eax, 1
add     esp, 1ch
retn
mov     eax, 1
add     esp, 1ch
retn
mov     eax, 2
add     esp, 1ch
retn
xor     eax, eax
add     esp, 1ch
retn
cmp     ds:dword_4a66d4, 0
push    esi
jz      short loc_45a7ab
cmp     ds:dword_4a66d0, 0
jz      short loc_45a7b1
cmp     ds:dword_4a68c4, 0
jnz     short loc_45a7b7
cmp     ds:frequency, 0
mov     esi, [esp+4+lpmsg]
jz      short loc_45a7bb
mov     eax, [esi+4]
cmp     eax, 0a9h
ja      short loc_45a771
cmp     eax, 0a0h
jnb     short loc_45a78d
cmp     eax, 21h
jz      short loc_45a78d
jmp     short loc_45a7bb
cmp     eax, 209h
ja      short loc_45a7bb
cmp     eax, 200h
jnb     short loc_45a78d
cmp     eax, 100h
jb      short loc_45a7bb
cmp     eax, 107h
ja      short loc_45a7bb
cmp     ds:dword_4a66d8, 0
jz      short loc_45a7a4
cmp     ds:dword_4a66dc, 0
jz      short loc_45a7a4
call    sub_42b0a0
call    sub_42b060
jmp     short loc_45a7bb
mov     esi, [esp+4+lpmsg]
jmp     short loc_45a7bb
mov     esi, [esp+4+lpmsg]
jmp     short loc_45a7bb
mov     esi, [esp+4+lpmsg]
push    esi
call    sub_45ab00
add     esp, 4
test    eax, eax
jz      short loc_45a7d6
push    esi
call    ds:translatemessage
push    esi
call    ds:dispatchmessagea
cmp     ds:dword_4a66d4, 0
jz      short loc_45a811
cmp     ds:dword_4a66d0, 0
jz      short loc_45a811
cmp     ds:dword_4a68c4, 0
jnz     short loc_45a811
cmp     ds:frequency, 0
jz      short loc_45a811
cmp     ds:dword_4a66d8, 0
jz      short loc_45a80c
cmp     ds:dword_4a66dc, 0
jnz     short loc_45a811
call    sub_42b060
pop     esi
retn
sub     esp, 80h
mov     eax, ds:hwndparent
test    eax, eax
push    esi
jz      short loc_45a837
push    eax
call    ds:destroywindow
cmp     [esp+84h+arg_4], 0
mov     esi, 2ca0000h
jz      short loc_45a84b
mov     esi, 2cb0000h
lea     eax, [esp+84h+windowname]
push    0
push    0
push    80h
push    eax
call    sub_47fe70
add     esp, 10h
mov     eax, ds:hinstance
push    0
push    eax
push    0
push    0
lea     ecx, [esp+94h+windowname]
push    0
push    0
push    0
push    0
push    esi
push    ecx
push    offset aapwmainclass
push    0
call    ds:createwindowexa
mov     ds:hwndparent, eax
test    eax, eax
jnz     short loc_45a89b
xor     eax, eax
pop     esi
add     esp, 80h
retn
mov     ecx, [esp+84h+ncmdshow]
mov     ds:hwndparent, eax
push    ecx
push    eax
call    ds:showwindow
mov     ecx, ds:hwndparent
push    ecx
call    ds:updatewindow
mov     eax, 1
pop     esi
add     esp, 80h
retn
sub     esp, 28h
mov     ecx, ds:hinstance
lea     eax, [esp+28h+wndclass]
push    esi
push    eax
push    offset aapwmainclass
push    ecx
call    ds:getclassinfoa
test    eax, eax
jnz     short loc_45a94e
xor     esi, esi
mov     eax, ds:hinstance
mov     [esp+2ch+wndclass.cbclsextra], esi
mov     [esp+2ch+wndclass.cbwndextra], esi
mov     [esp+2ch+wndclass.hinstance], eax
push    2
mov     [esp+30h+wndclass.style], 8
mov     [esp+30h+wndclass.lpfnwndproc], offset sub_459ff0
mov     [esp+30h+wndclass.hbrbackground], 0dh
push    eax
call    ds:loadicona
lea     ecx, [esp+2ch+wndclass]
mov     [esp+2ch+wndclass.hicon], eax
mov     [esp+2ch+wndclass.hcursor], esi
push    ecx
mov     [esp+30h+wndclass.lpszclassname], offset aapwmainclass
mov     [esp+30h+wndclass.lpszmenuname], esi
call    ds:registerclassa
test    ax, ax
jnz     short loc_45a94e
xor     eax, eax
pop     esi
add     esp, 28h
retn
mov     eax, [esp+2ch+ncmdshow]
push    0
push    eax
call    sub_45a820
add     esp, 8
cmp     eax, 1
sbb     eax, eax
pop     esi
inc     eax
add     esp, 28h
retn
sub     esp, 118h
lea     eax, [esp+118h+filename]
push    esi
xor     esi, esi
push    104h
push    eax
mov     ecx, ds:hinstance
mov     dword ptr [esp+124h+string1], esi
push    ecx
mov     [esp+128h+var_10c], esi
call    ds:getmodulefilenamea
lea     ecx, [esp+11ch+var_118]
lea     edx, [esp+11ch+filename]
push    ecx
push    edx
call    sub_44f360
add     esp, 8
cmp     [esp+11ch+var_118], esi
jz      short loc_45aa0f
mov     eax, dword ptr [esp+11ch+string1]
mov     ecx, [esp+11ch+var_10c]
lea     edx, [esp+11ch+var_118]
push    ecx
push    eax
push    edx
call    sub_489be0
add     esp, 0ch
test    eax, eax
jz      short loc_45aa02
mov     eax, [esp+11ch+var_118]
push    esi
push    esi
push    eax
call    sub_4690a0
add     esp, 0ch
test    eax, eax
mov     eax, [esp+11ch+var_118]
push    eax
jz      short loc_45a9f2
call    sub_44f4a0
add     esp, 4
call    sub_470520
jmp     short loc_45aa0f
call    sub_44f4a0
add     esp, 4
pop     esi
add     esp, 118h
retn
mov     eax, [esp+11ch+var_118]
push    eax
call    sub_44f4a0
add     esp, 4
mov     esi, [esp+11ch+lpstring]
push    esi
call    ds:lstrlena
test    eax, eax
jle     loc_45aaea
lea     eax, [esp+11ch+var_118]
push    eax
push    esi
call    sub_44f360
add     esp, 8
cmp     [esp+11ch+var_118], 0
jz      loc_45aaea
mov     eax, [esp+11ch+var_118]
push    eax
call    sub_44f830
mov     eax, [esp+120h+var_118]
add     esp, 4
push    0
push    eax
call    sub_44f980
add     esp, 8
test    eax, eax
mov     eax, [esp+11ch+var_118]
push    eax
jz      short loc_45aa6f
push    0
call    sub_44b840
add     esp, 8
jmp     short loc_45aa77
call    sub_44b8c0
add     esp, 4
mov     eax, [esp+11ch+var_118]
push    0
push    eax
call    sub_44f9e0
add     esp, 8
test    eax, eax
jnz     short loc_45aad5
lea     eax, [esp+11ch+var_118]
push    eax
call    sub_44a450
add     esp, 4
cmp     eax, 0ffffffffh
jnz     short loc_45aad5
lea     eax, [esp+11ch+filename]
push    1
push    5c0h
push    105h
push    eax
call    sub_47fe70
lea     eax, [esp+12ch+filename]
lea     ecx, [esp+12ch+string1]
add     esp, 10h
push    eax
push    ecx
call    sub_44fa10
mov     ecx, [esp+124h+var_118]
add     esp, 8
push    eax
push    ecx
call    sub_44f6a0
add     esp, 8
mov     eax, [esp+11ch+var_118]
push    0
push    0
push    eax
call    sub_4690a0
add     esp, 0ch
test    eax, eax
jz      short loc_45aaef
call    sub_468fd0
pop     esi
add     esp, 118h
retn
sub     esp, 2ch
push    esi
push    edi
mov     esi, 1
mov     edi, [esp+34h+lpmsg]
mov     ecx, [edi+4]
cmp     ecx, 100h
jnz     short loc_45ab34
mov     eax, [edi+8]
cmp     eax, 10h
jz      short loc_45ab26
cmp     eax, 11h
jnz     short loc_45ab34
test    byte ptr [edi+0fh], 40h
jz      short loc_45ab34
xor     eax, eax
pop     edi
pop     esi
add     esp, 2ch
retn
sub     ecx, 100h
cmp     ecx, 7
ja      def_45ab43
jmp     ds:jpt_45ab43[ecx*4]
test    byte ptr dword_4ae0a8, 1
jz      short loc_45ab7e
mov     eax, [edi+8]
cmp     eax, 10h
jb      short loc_45ab60
cmp     eax, 11h
jbe     short loc_45ab6f
mov     eax, esi
pop     edi
or      dword_4ae0a8, 2
pop     esi
add     esp, 2ch
retn
mov     eax, esi
pop     edi
and     dword_4ae0a8, 0fffffffdh
pop     esi
add     esp, 2ch
retn
push    edi
call    ds:translatemessage
push    0
mov     eax, [edi]
lea     ecx, [esp+38h+msg]
push    103h
push    103h
mov     esi, ds:peekmessagea
push    eax
push    ecx
call    esi
test    eax, eax
jnz     loc_45acad
push    0
mov     eax, [edi]
lea     ecx, [esp+38h+msg]
push    107h
push    107h
push    eax
push    ecx
call    esi
test    eax, eax
jnz     loc_45acad
push    1
mov     eax, [edi]
lea     ecx, [esp+38h+msg]
push    102h
push    102h
push    eax
push    ecx
call    esi
test    eax, eax
jnz     short loc_45abf7
push    1
mov     eax, [edi]
lea     ecx, [esp+38h+msg]
push    106h
push    106h
push    eax
push    ecx
call    esi
cmp     ds:word_4a8518, 0
jz      short loc_45ac72
cmp     ds:dword_4a68c4, 0
jnz     short loc_45ac72
mov     eax, ds:frequency
cmp     [edi], eax
jnz     short loc_45ac72
xor     esi, esi
lea     eax, [esp+34h+var_2c]
push    eax
mov     ecx, [edi+0ch]
push    ecx
mov     edx, [edi+8]
push    edx
push    100h
call    sub_459c30
lea     ecx, [esp+44h+var_2c]
add     esp, 10h
push    ecx
call    sub_437080
add     esp, 4
test    eax, eax
jz      short loc_45ac74
mov     eax, [esp+34h+var_28]
push    eax
call    sub_42fd00
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     def_45ab43
mov     eax, [edi+8]
cmp     eax, 51h
jz      short loc_45ac64
cmp     eax, 71h
jnz     short loc_45ac74
test    byte ptr [esp+34h+var_28+2], 4
jz      short loc_45ac74
mov     esi, 1
jmp     short loc_45ac74
xor     esi, esi
test    esi, esi
jnz     def_45ab43
cmp     ds:hdlg, 0
mov     esi, 1
jz      def_45ab43
push    edi
mov     eax, ds:hdlg
push    eax
call    ds:isdialogmessagea
test    eax, eax
jz      def_45ab43
xor     esi, esi
pop     edi
mov     eax, esi
pop     esi
add     esp, 2ch
retn
mov     dword_4ae0a8, 3
push    edi
call    ds:dispatchmessagea
xor     eax, eax
pop     edi
pop     esi
add     esp, 2ch
retn
test    byte ptr dword_4ae0a8, 1
jz      def_45ab43
mov     eax, [edi+8]
cmp     eax, 10h
jb      short loc_45ace4
cmp     eax, 11h
jbe     def_45ab43
xor     esi, esi
pop     edi
mov     eax, esi
pop     esi
add     esp, 2ch
retn
test    byte ptr dword_4ae0a8, 1
jz      short def_45ab43
mov     eax, ds:dword_4a863c
cmp     [edi+8], eax
jnz     short loc_45ad0a
and     dword_4ae0a8, 0fffffffdh
jmp     short loc_45ad14
mov     dword_4ae0a8, 0
cmp     ds:word_4a8518, 0
jz      short def_45ab43
cmp     ds:dword_4a68c4, 0
jnz     short def_45ab43
mov     eax, ds:frequency
cmp     [edi], eax
jnz     short def_45ab43
mov     [esp+34h+msg.hwnd], 1
mov     eax, [edi+8]
lea     ecx, [esp+34h+msg]
mov     [esp+34h+msg.message], eax
push    ecx
mov     eax, [edi+0ch]
and     eax, 40000000h
shr     eax, 1eh
mov     [esp+38h+msg.wparam], eax
call    sub_436b70
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
add     esp, 2ch
retn
mov     dword_4ae0a8, 3
mov     eax, [edi+8]
mov     ds:dword_4a863c, eax
mov     eax, esi
pop     edi
pop     esi
add     esp, 2ch
retn
mov     eax, 1
retn
mov     eax, [esp+lpstring]
sub     esp, 1cch
mov     [esp+1cch+hmem], 0
push    ebx
push    esi
push    edi
mov     esi, ds:lstrlena
push    ebp
push    eax
call    esi
mov     word ptr [esp+1dch+var_1ca], ax
push    1010780h
mov     edi, [esp+1e0h+arg_0]
push    edi
call    sub_462670
movzx   eax, ax
mov     [esp+1e4h+var_1ac], eax
add     esp, 8
push    1010640h
push    edi
call    sub_462670
movzx   eax, ax
mov     [esp+1e4h+var_1a8], eax
add     esp, 8
push    1010410h
push    edi
call    sub_462670
movzx   eax, ax
mov     [esp+1e4h+var_1a4], eax
add     esp, 8
push    1010308h
push    edi
call    sub_462670
movzx   eax, ax
mov     [esp+1e4h+var_1a0], eax
add     esp, 8
push    1010520h
push    edi
call    sub_462670
add     esp, 8
movzx   ebx, ax
push    0
push    40bh
push    edi
call    sub_42edc0
movsx   eax, ax
mov     [esp+1e8h+var_1bc], eax
add     esp, 0ch
push    1010204h
push    edi
call    sub_462670
movzx   eax, ax
mov     [esp+1e4h+var_1b4], eax
add     esp, 8
cmp     [esp+1dch+arg_c], 0
jz      short loc_45ae7f
mov     eax, [esp+1dch+arg_c]
jmp     short loc_45ae84
call    sub_4755f0
mov     [esp+1dch+var_1c0], eax
cmp     [esp+1dch+var_1c0], 0
jnz     short loc_45ae9c
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1cch
retn
lea     eax, [esp+1dch+string1]
push    19ah
push    eax
push    edi
call    sub_486100
lea     eax, [esp+1e8h+string1]
add     esp, 0ch
push    eax
call    sub_45b740
add     esp, 4
test    ebx, ebx
jz      short loc_45af15
mov     edi, [esp+1dch+var_1ca]
push    2
and     edi, 0ffffh
lea     eax, [edi+1]
push    eax
call    sub_45b8f0
mov     [esp+1e4h+hmem], eax
add     esp, 8
push    eax
call    ds:globallock
mov     ebx, eax
push    edi
mov     eax, [esp+1e0h+lpstring]
push    eax
push    ebx
call    _memcpy
add     esp, 0ch
mov     byte ptr [edi+ebx], 0
push    20h
push    ebx
call    sub_45b660
mov     [esp+1e4h+lpstring], ebx
add     esp, 8
push    ebx
call    esi
mov     word ptr [esp+1dch+var_1ca], ax
xor     ebx, ebx
lea     esi, [esp+1dch+string1]
mov     ebp, 1
mov     [esp+1dch+var_1b0], ebx
inc     ebx
push    7ch
push    esi
call    sub_45b630
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_45af3a
mov     byte ptr [edi], 0
inc     edi
cmp     byte ptr [esi], 20h
jnz     short loc_45af45
inc     esi
cmp     byte ptr [esi], 20h
jz      short loc_45af3f
movsx   eax, byte ptr [esi]
mov     [esp+1dch+var_1c4], ebp
cmp     eax, 23h
jz      short loc_45af58
cmp     eax, 7eh
jz      short loc_45afcb
jmp     short loc_45afd4
inc     esi
cmp     dword_4af134, ebp
jle     short loc_45af71
movsx   eax, byte ptr [esi]
push    4
push    eax
call    __isctype
add     esp, 8
jmp     short loc_45af83
movsx   ecx, byte ptr [esi]
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 4
test    eax, eax
jz      short loc_45af9a
movsx   eax, byte ptr [esi]
sub     eax, [esp+1dch+arg_8]
cmp     eax, 30h
jnz     loc_45b03d
cmp     dword_4af134, ebp
jle     short loc_45afb2
movsx   eax, byte ptr [esi]
push    4
push    eax
call    __isctype
add     esp, 8
jmp     short loc_45afc4
movsx   ecx, byte ptr [esi]
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 4
test    eax, eax
jz      short loc_45afd4
inc     esi
jmp     short loc_45af9a
mov     [esp+1dch+var_1c4], 0
inc     esi
lea     eax, [esp+1dch+var_1ac]
mov     ecx, [esp+1dch+var_1c0]
mov     edx, [esp+1dch+var_1ca]
push    eax
mov     eax, [esp+1e0h+lpstring]
push    ecx
push    ebx
push    esi
push    edx
push    eax
call    sub_45b0a0
mov     [esp+1f4h+var_1ca+2], eax
add     esp, 18h
cmp     eax, 0ffffffffh
jz      short loc_45b03d
cmp     [esp+1dch+var_1b4], 0
jz      short loc_45b017
mov     eax, [esp+1dch+var_1c0]
push    ebx
push    eax
call    sub_45b6e0
mov     [esp+1e4h+var_1ca+2], eax
add     esp, 8
cmp     [esp+1dch+var_1bc], 0
jz      short loc_45b024
mov     eax, [esp+1dch+var_1bc]
jmp     short loc_45b02d
push    esi
call    sub_45b4f0
add     esp, 4
cmp     eax, [esp+1dch+var_1ca+2]
mov     eax, ebp
jle     short loc_45b037
xor     eax, eax
cmp     eax, [esp+1dch+var_1c4]
jz      short loc_45b049
mov     esi, edi
test    edi, edi
jnz     loc_45af24
jmp     short loc_45b051
mov     [esp+1dch+var_1b0], 1
cmp     [esp+1dch+hmem], 0
jz      short loc_45b070
mov     eax, [esp+1dch+hmem]
push    eax
call    ds:globalunlock
mov     ecx, [esp+1dch+hmem]
push    ecx
call    sub_45ba00
add     esp, 4
cmp     [esp+1dch+arg_c], 0
jnz     short loc_45b087
mov     eax, [esp+1dch+var_1c0]
push    eax
call    sub_475600
add     esp, 4
mov     eax, [esp+1dch+var_1b0]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1cch
retn
sub     esp, 10h
mov     eax, [esp+10h+arg_4]
push    ebx
push    esi
and     eax, 0ffffh
mov     [esp+18h+var_e+2], 0
mov     [esp+18h+var_8], 0
mov     esi, [esp+18h+arg_c]
push    edi
mov     word ptr [esp+1ch+var_e], 0
push    ebp
mov     edi, [esp+20h+arg_0]
mov     ebx, [esp+20h+arg_14]
add     eax, edi
mov     [esp+20h+var_4], eax
lea     eax, [esp+20h+var_e]
mov     ecx, [esp+20h+var_4]
push    eax
push    ecx
mov     eax, [esp+28h+var_e]
and     eax, 0ffffh
add     eax, edi
push    eax
call    sub_45b490
add     esp, 0ch
mov     edi, eax
test    edi, edi
jz      short loc_45b177
mov     eax, [ebx+4]
mov     ecx, [ebx]
mov     edx, [esp+20h+hmem]
push    eax
mov     eax, [esp+24h+lpstring]
push    ecx
mov     ecx, [esp+28h+var_e]
push    edx
push    esi
push    eax
push    ecx
push    edi
call    sub_45b190
add     esp, 1ch
mov     ebp, eax
test    ebp, ebp
jz      short loc_45b148
cmp     [esp+20h+var_e+2], ebp
jl      short loc_45b12f
cmp     dword ptr [ebx+0ch], 0
jz      short loc_45b148
mov     eax, [esp+20h+hmem]
push    ebp
inc     [esp+24h+var_8]
push    esi
push    eax
call    sub_45b6a0
mov     [esp+2ch+var_e+2], ebp
add     esp, 0ch
jmp     short loc_45b0d9
cmp     dword ptr [ebx+8], 0
jnz     short loc_45b0d9
mov     eax, [esp+20h+var_e]
push    eax
push    edi
call    sub_45b540
add     esp, 8
test    eax, eax
jz      short loc_45b16a
cmp     dword ptr [ebx+4], 0
jnz     loc_45b0d9
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+var_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_4]
sub     esp, 0ch
and     eax, 0ffffh
push    ebx
mov     ebx, [esp+10h+lpstring]
push    esi
push    edi
push    ebp
mov     ebp, [esp+1ch+lpstring1]
push    ebx
add     ebp, eax
call    ds:lstrlena
add     eax, ebx
mov     [esp+1ch+var_4], eax
xor     eax, eax
mov     word ptr [esp+1ch+var_a], ax
mov     [esp+1ch+var_a+2], eax
lea     eax, [esp+1ch+var_a]
mov     ecx, [esp+1ch+var_4]
push    eax
push    ecx
mov     eax, [esp+24h+var_a]
and     eax, 0ffffh
add     eax, ebx
push    eax
call    sub_45b490
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jz      loc_45b27c
mov     eax, [esp+1ch+var_a]
push    1
and     eax, 0ffffh
mov     edx, [esp+20h+arg_14]
inc     [esp+20h+var_a+2]
lea     edi, [eax+ebx]
mov     eax, [esp+20h+arg_18]
mov     cl, [edi]
mov     [esp+20h+var_b], cl
push    eax
mov     ecx, [esp+24h+lpstring1]
push    edx
push    ebx
mov     byte ptr [edi], 0
push    ebp
push    ecx
call    sub_45b290
mov     cl, [esp+34h+var_b]
add     esp, 18h
mov     esi, eax
mov     [edi], cl
cmp     [esp+1ch+arg_18], 0
jz      short loc_45b249
test    esi, esi
jz      short loc_45b249
cmp     esi, ebp
jnb     short loc_45b24b
mov     eax, ebp
sub     eax, esi
push    eax
push    esi
call    sub_45b540
add     esp, 8
test    eax, eax
jz      short loc_45b249
mov     esi, ebp
cmp     esi, ebp
jnz     loc_45b1c2
mov     eax, [esp+1ch+var_a+2]
mov     ecx, [esp+1ch+arg_c]
mov     edx, [esp+1ch+arg_10]
push    eax
push    ecx
push    edx
call    sub_45b6c0
add     esp, 0ch
test    eax, eax
jnz     loc_45b1c2
mov     eax, [esp+1ch+var_a+2]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+14h+lpstring1]
cmp     [esp+14h+arg_4], ebp
jbe     loc_45b34d
mov     ecx, [esp+14h+lpstring2]
mov     al, [ecx]
test    al, al
jz      loc_45b34d
lea     edi, [ebp+1]
lea     ebx, [ecx+1]
movsx   eax, al
cmp     eax, 2ah
jz      loc_45b36b
cmp     eax, 3fh
jz      short loc_45b33d
cmp     eax, 5ch
jnz     short loc_45b2dd
cmp     byte ptr [ebx], 0
jz      loc_45b395
mov     [esp+14h+lpstring2], ebx
inc     ebx
mov     al, [edi]
mov     cl, [ebx]
mov     [esp+14h+var_1], al
mov     [esp+14h+var_2], cl
mov     ecx, [esp+14h+lpstring2]
mov     byte ptr [edi], 0
push    ecx
mov     byte ptr [ebx], 0
cmp     [esp+18h+arg_c], 0
push    ebp
jz      short loc_45b304
call    ds:lstrcmpia
jmp     short loc_45b30a
call    ds:lstrcmpa
mov     cl, [esp+14h+var_2]
cmp     eax, 1
sbb     esi, esi
mov     al, [esp+14h+var_1]
neg     esi
mov     [edi], al
test    esi, esi
mov     [ebx], cl
jnz     short loc_45b33d
cmp     [esp+14h+arg_10], 0
jz      short loc_45b339
push    ebp
call    sub_45b810
add     esp, 4
test    eax, eax
jz      short loc_45b339
mov     ebp, edi
jmp     short loc_45b343
test    esi, esi
jz      short loc_45b39f
mov     ebp, edi
mov     [esp+14h+lpstring2], ebx
cmp     edi, [esp+14h+arg_4]
jb      loc_45b2a5
mov     ecx, [esp+14h+lpstring2]
mov     al, [ecx]
test    al, al
jz      short loc_45b3a9
cmp     al, 2ah
jnz     short loc_45b361
cmp     byte ptr [ecx+1], 0
jz      short loc_45b3a9
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+14h+arg_14]
mov     ecx, [esp+14h+arg_10]
mov     edx, [esp+14h+arg_c]
push    eax
mov     eax, [esp+18h+lpstring2]
push    ecx
mov     ecx, [esp+1ch+arg_4]
push    edx
push    eax
push    ecx
push    ebp
call    sub_45b3c0
add     esp, 18h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+14h+arg_4]
cmp     eax, ebp
jb      short loc_45b3b3
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 8
push    ebx
push    esi
mov     ebx, [esp+10h+lpstring2]
push    edi
push    ebp
cmp     byte ptr [ebx], 2ah
jnz     short loc_45b3d6
inc     ebx
cmp     byte ptr [ebx], 2ah
jz      short loc_45b3d0
mov     al, [ebx]
test    al, al
jnz     short loc_45b3e8
mov     eax, [esp+18h+arg_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
movsx   eax, al
cmp     eax, 3fh
jz      short loc_45b3fd
mov     [esp+18h+var_4], 0
cmp     eax, 5ch
jnz     short loc_45b405
mov     [esp+18h+var_4], 1
mov     esi, [esp+18h+lpstring1]
mov     edi, [esp+18h+arg_4]
mov     [esp+18h+var_8], 0
mov     ebp, [esp+18h+arg_c]
mov     eax, [esp+18h+arg_14]
mov     ecx, [esp+18h+arg_10]
push    eax
push    ecx
push    ebp
push    ebx
push    edi
push    esi
call    sub_45b290
add     esp, 18h
test    eax, eax
jz      short loc_45b43a
cmp     [esp+18h+arg_14], 0
jz      short loc_45b458
cmp     edi, eax
jz      short loc_45b477
cmp     eax, [esp+18h+var_8]
jbe     short loc_45b448
mov     [esp+18h+var_8], eax
cmp     [esp+18h+var_4], 0
jz      short loc_45b460
inc     esi
cmp     edi, esi
ja      short loc_45b419
mov     eax, [esp+18h+var_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebp
mov     al, [ebx]
push    eax
inc     esi
push    edi
push    esi
call    sub_45b580
add     esp, 10h
mov     esi, eax
test    esi, esi
jnz     short loc_45b419
jmp     short loc_45b454
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     edi, [esp+0ch+arg_0]
cmp     esi, edi
jbe     short loc_45b4b3
push    edi
call    sub_45b7b0
add     esp, 4
test    eax, eax
jz      short loc_45b4b1
inc     edi
cmp     esi, edi
ja      short loc_45b49f
cmp     esi, edi
jnz     short loc_45b4bb
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ebx, edi
cmp     esi, edi
jbe     short loc_45b4d3
push    edi
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_45b4d3
inc     edi
cmp     esi, edi
ja      short loc_45b4c1
sub     edi, ebx
mov     eax, [esp+0ch+arg_8]
mov     [eax], di
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+lpstring]
push    edi
xor     edi, edi
push    esi
mov     [esp+14h+var_2], di
call    ds:lstrlena
lea     ebx, [esi+eax]
lea     eax, [esp+10h+var_2]
push    eax
push    ebx
mov     eax, dword ptr [esp+18h+var_2]
and     eax, 0ffffh
add     eax, esi
push    eax
call    sub_45b490
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_45b52e
inc     edi
jmp     short loc_45b50b
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
push    esi
push    edi
and     eax, 0ffffh
mov     edi, [esp+8+arg_0]
lea     esi, [eax+edi]
cmp     esi, edi
jbe     short loc_45b568
push    edi
call    sub_45b810
add     esp, 4
test    eax, eax
jz      short loc_45b570
inc     edi
cmp     esi, edi
ja      short loc_45b556
mov     eax, 1
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
cmp     [esp+10h+arg_4], esi
push    ebp
jbe     short loc_45b604
mov     edi, [esp+14h+arg_c]
mov     al, [esi]
mov     [esp+14h+var_1], al
cmp     al, [esp+14h+arg_8]
jz      short loc_45b60e
test    edi, edi
jz      short loc_45b5fd
cmp     dword_4af134, 1
jle     short loc_45b5c4
xor     ebx, ebx
push    103h
mov     bl, [esp+18h+arg_8]
push    ebx
call    __isctype
add     esp, 8
jmp     short loc_45b5db
xor     ebx, ebx
mov     ecx, off_4aef28
mov     bl, [esp+14h+arg_8]
xor     eax, eax
mov     ax, [ecx+ebx*2]
and     eax, 103h
test    eax, eax
jz      short loc_45b5fd
xor     eax, eax
mov     al, [esp+14h+var_1]
push    eax
call    _toupper
add     esp, 4
mov     ebp, eax
push    ebx
call    _toupper
add     esp, 4
cmp     ebp, eax
jz      short loc_45b618
inc     esi
cmp     [esp+14h+arg_4], esi
ja      short loc_45b595
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_0]
mov     dl, [eax]
test    dl, dl
jz      short loc_45b658
mov     cl, [esp+arg_4]
cmp     dl, 5ch
jnz     short loc_45b64c
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_45b650
xor     eax, eax
retn
cmp     dl, cl
jz      short locret_45b65a
mov     dl, [eax+1]
inc     eax
test    dl, dl
jnz     short loc_45b63e
xor     eax, eax
retn
mov     ecx, [esp+arg_0]
push    ebx
push    esi
mov     eax, ecx
cmp     byte ptr [ecx], 0
jz      short loc_45b68e
mov     dl, [esp+8+arg_4]
cmp     [eax], dl
jnz     short loc_45b678
inc     eax
jmp     short loc_45b689
mov     esi, eax
inc     eax
cmp     eax, esi
jbe     short loc_45b689
mov     bl, [esi]
inc     esi
mov     [ecx], bl
inc     ecx
cmp     eax, esi
ja      short loc_45b67f
cmp     byte ptr [eax], 0
jnz     short loc_45b671
pop     esi
mov     byte ptr [ecx], 0
pop     ebx
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+hmem]
shl     cx, 0ah
or      cx, [esp+arg_8]
push    ecx
push    edx
call    sub_475710
add     esp, 8
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
shl     cx, 0ah
or      cx, [esp+arg_8]
push    ecx
push    edx
call    sub_475650
add     esp, 8
retn
mov     eax, [esp+arg_4]
sub     esp, 8
mov     ecx, [esp+8+hmem]
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], 0
lea     eax, [esp+8+var_8]
push    eax
push    offset sub_45b720
push    1
push    ecx
call    sub_4758a0
mov     eax, [esp+18h+var_4]
add     esp, 10h
add     esp, 8
retn
mov     ax, [esp+arg_0]
sar     ax, 0ah
movsx   ecx, ax
mov     eax, [esp+arg_4]
cmp     ecx, [eax]
jnz     short loc_45b737
inc     dword ptr [eax+4]
mov     eax, 1
retn
sub     esp, 19ch
mov     al, windowname
mov     ecx, 66h
push    ebx
mov     [esp+1a0h+string2], al
push    esi
push    edi
xor     eax, eax
lea     edi, [esp+1a8h+var_19b]
rep stosd
stosb
mov     ebx, [esp+1a8h+lpstring1]
lea     edi, [esp+1a8h+string2]
mov     esi, ebx
cmp     byte ptr [esi], 5ch
jnz     short loc_45b775
inc     esi
jmp     short loc_45b783
push    esi
call    sub_41f2b0
add     esp, 4
test    ax, ax
jnz     short loc_45b791
mov     al, [esi]
mov     ecx, edi
inc     edi
inc     esi
mov     [ecx], al
test    al, al
jnz     short loc_45b76d
jmp     short loc_45b794
mov     byte ptr [edi], 0
lea     eax, [esp+1a8h+string2]
push    eax
push    ebx
call    ds:lstrcpya
pop     edi
pop     esi
pop     ebx
add     esp, 19ch
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short def_45b7cb
movsx   eax, byte ptr [eax]
sub     eax, 9
cmp     eax, 17h
ja      short def_45b7cb
xor     ecx, ecx
mov     cl, ds:byte_45b7ec[eax]
jmp     ds:jpt_45b7cb[ecx*4]
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
cmp     dword_4af134, 1
movzx   ax, byte ptr [eax]
jle     short loc_45b831
push    10h
xor     ecx, ecx
mov     cl, al
push    ecx
call    __isctype
add     esp, 8
retn
xor     edx, edx
mov     ecx, off_4aef28
mov     dl, al
xor     eax, eax
mov     ax, [ecx+edx*2]
and     eax, 10h
retn
push    esi
mov     esi, [esp+4+arg_0]
test    esi, esi
jz      short loc_45b883
cmp     byte ptr [esi], 0
jz      short loc_45b883
push    esi
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_45b87c
push    esi
call    sub_45b810
add     esp, 4
test    eax, eax
jnz     short loc_45b87c
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
mov     eax, 1
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_8]
push    esi
call    sub_45b850
add     esp, 4
test    eax, eax
jz      short loc_45b8af
cmp     esi, [esp+4+arg_4]
jz      short loc_45b8af
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
sub     esp, 20h
mov     [esp+20h+buffer.dwlength], 20h
lea     eax, [esp+20h+buffer]
push    eax
call    ds:globalmemorystatus
mov     eax, [esp+20h+buffer.dwtotalphys]
add     esp, 20h
sub     eax, 300000h
mov     ds:dword_4a8640, eax
retn
mov     eax, [esp+dwbytes]
test    eax, eax
jnz     short loc_45b8fd
mov     eax, 8
push    eax
mov     eax, [esp+4+arg_4]
and     eax, 0ffffh
push    eax
call    ds:globalalloc
retn
push    ebx
push    esi
mov     ebx, [esp+8+dwbytes]
push    edi
push    ebp
mov     ecx, ebx
xor     ebp, ebp
mov     eax, ds:globalalloc
cmp     ecx, 1
jg      short loc_45b92b
mov     ecx, 1
push    ecx
push    2
call    eax
test    eax, eax
jz      short loc_45b94a
mov     ebp, eax
mov     edi, [eax]
mov     esi, [esp+10h+arg_0]
mov     ecx, ebx
shr     ecx, 2
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+hmem]
test    ecx, ecx
jnz     short loc_45b96b
xor     eax, eax
retn
mov     edx, [esp+dwbytes]
cmp     edx, 0ffe0h
jle     short loc_45b97a
xor     eax, eax
retn
cmp     edx, 8
jge     short loc_45b984
mov     edx, 8
xor     eax, eax
mov     ax, [esp+arg_8]
and     eax, 40h
cmp     edx, 1
push    eax
mov     eax, ds:globalrealloc
jg      short loc_45b99e
mov     edx, 1
push    edx
push    ecx
call    eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     edx, [esp+hmem]
push    esi
test    edx, edx
jnz     short loc_45b9bd
xor     eax, eax
pop     esi
retn
mov     eax, [esp+4+dwbytes]
test    eax, eax
jge     short loc_45b9c9
xor     eax, eax
pop     esi
retn
cmp     eax, 8
jge     short loc_45b9d3
mov     eax, 8
mov     cx, [esp+4+arg_8]
test    cx, cx
jnz     short loc_45b9e1
mov     cx, 42h
xor     esi, esi
mov     si, cx
and     esi, 40h
push    esi
push    eax
push    edx
call    ds:globalrealloc
pop     esi
retn
mov     eax, [esp+hmem]
test    eax, eax
jz      short locret_45ba0f
push    eax
call    ds:globalfree
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
test    esi, esi
jnz     short loc_45ba1f
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
call    ds:globalflags
mov     edi, eax
mov     eax, 0
and     edi, 100h
shr     edi, 8
cmp     [esp+8+arg_4], 1
adc     eax, 0ffffffffh
and     eax, 100h
mov     al, 82h
push    eax
push    0
push    esi
call    ds:globalrealloc
mov     eax, edi
pop     edi
pop     esi
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+dwbytes]
cmp     edi, 1
jg      short loc_45ba71
mov     edi, 1
mov     si, [esp+0ch+arg_8]
xor     eax, eax
mov     ax, si
mov     ebx, [esp+0ch+hmem]
and     eax, 40h
push    eax
push    edi
push    ebx
call    ds:globalrealloc
test    eax, eax
jnz     short loc_45baa1
push    ebx
call    ds:globalfree
movzx   eax, si
push    edi
push    eax
call    ds:globalalloc
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     edi, [esp+8+hmem]
test    edi, edi
jnz     short loc_45babf
xor     eax, eax
pop     edi
pop     esi
retn
push    edi
call    ds:globallock
mov     esi, eax
push    edi
call    sub_45bbc0
add     esp, 4
push    eax
push    esi
call    sub_45b910
add     esp, 8
mov     esi, eax
push    edi
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+hmem]
test    edi, edi
jnz     short loc_45bb01
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     esi, [esp+0ch+arg_c]
mov     ebx, [esp+0ch+size]
lea     eax, [ebx+esi]
mov     ecx, eax
shr     ecx, 10h
test    cx, cx
jz      short loc_45bb1c
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    0
cmp     eax, 1
jg      short loc_45bb28
mov     eax, 1
push    eax
push    edi
call    sub_45ba60
add     esp, 0ch
cmp     eax, edi
jz      short loc_45bb3c
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+0ch+src]
push    ebx
push    eax
mov     eax, [edi]
add     eax, esi
push    eax
call    _memcpy
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+hmem]
push    ebx
push    esi
push    edi
xor     edi, edi
cmp     eax, edi
jnz     short loc_45bb73
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     esi, [esp+0ch+arg_c]
mov     ebx, [esp+0ch+size]
push    0
lea     ecx, [ebx+esi]
cmp     ecx, 1
jg      short loc_45bb8a
mov     ecx, 1
push    ecx
push    eax
call    sub_45ba60
add     esp, 0ch
test    eax, eax
jz      short loc_45bb9a
mov     edi, eax
test    edi, edi
jz      short loc_45bbb1
mov     eax, [esp+0ch+src]
push    ebx
push    eax
mov     eax, [edi]
add     eax, esi
push    eax
call    _memcpy
add     esp, 0ch
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+hmem]
test    esi, esi
jz      short loc_45bbde
push    esi
call    ds:globalflags
test    ah, 40h
jnz     short loc_45bbde
push    esi
call    ds:globalsize
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+hmem]
test    eax, eax
jnz     short loc_45bbfb
xor     eax, eax
retn
push    eax
call    ds:globalflags
and     eax, 4000h
shr     eax, 0eh
retn
sub     esp, 20h
xor     eax, eax
mov     ecx, 8
push    edi
lea     edi, [esp+24h+buffer]
rep stosd
mov     [esp+24h+buffer.dwlength], 20h
lea     eax, [esp+24h+buffer]
push    eax
call    ds:globalmemorystatus
mov     eax, [esp+24h+buffer.dwavailpagefile]
pop     edi
add     esp, 20h
retn
jmp     sub_45bc10
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+0ch+hmem]
push    ebp
mov     edi, [esp+10h+arg_4]
cmp     esi, ebx
jz      short loc_45bcbb
cmp     edi, ebx
jz      short loc_45bcbb
push    esi
call    sub_45bbc0
add     esp, 4
mov     ebp, eax
push    edi
call    sub_45bbc0
add     esp, 4
mov     ecx, eax
cmp     ecx, ebp
jl      short loc_45bc82
mov     ecx, ebp
mov     esi, [esi]
test    esi, esi
jz      short loc_45bc99
mov     edi, [edi]
test    edi, edi
jz      short loc_45bc99
sub     ebx, ebx
repe cmpsb
jz      short loc_45bc99
sbb     ebx, ebx
sbb     ebx, 0ffffffffh
test    ebx, ebx
jnz     short loc_45bcdc
cmp     eax, ebp
jle     short loc_45bcad
mov     ebx, 0ffffffffh
pop     ebp
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
jge     short loc_45bcdc
mov     ebx, 1
pop     ebp
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
test    esi, esi
jz      short loc_45bccf
test    edi, edi
jnz     short loc_45bcd3
mov     ebx, 1
pop     ebp
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
test    edi, edi
jz      short loc_45bcdc
test    esi, esi
jnz     short loc_45bcdc
mov     ebx, 0ffffffffh
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
push    0
call    sub_45bc40
mov     esi, [esp+18h+dwbytes]
add     esp, 4
cmp     esi, eax
jle     short loc_45bd0b
mov     esi, eax
mov     ebp, [esp+14h+arg_0]
cmp     ebp, esi
jle     short loc_45bd15
mov     esi, ebp
mov     edi, [esp+14h+var_4]
mov     ebx, ds:globalalloc
push    esi
push    42h
call    ebx
test    eax, eax
jz      short loc_45bd2c
mov     edi, eax
jmp     short loc_45bd2f
sar     esi, 1
test    eax, eax
jnz     short loc_45bd37
cmp     ebp, esi
jle     short loc_45bd1f
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+dwbytes]
push    eax
push    ecx
call    sub_45b8f0
add     esp, 8
test    eax, eax
jz      short loc_45bd6e
push    eax
call    ds:globallock
retn
xor     eax, eax
retn
mov     eax, [esp+dwbytes]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_45b910
add     esp, 8
test    eax, eax
jz      short loc_45bd9e
push    eax
call    ds:globallock
retn
xor     eax, eax
retn
mov     eax, [esp+pmem]
push    eax
call    ds:globalhandle
test    eax, eax
jz      short locret_45bdc8
push    eax
call    sub_45ba00
add     esp, 4
retn
mov     eax, [esp+arg_c]
sub     esp, 20h
push    ebx
push    esi
mov     ebx, [esp+28h+arg_8]
push    edi
mov     edi, [esp+2ch+arg_4]
push    eax
mov     esi, [esp+30h+hdlg]
push    ebx
push    edi
push    esi
call    sub_411fa0
cmp     edi, 110h
jz      short loc_45be0e
cmp     edi, 111h
jz      loc_45bf3a
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn    10h
xor     di, di
push    esi
call    sub_4907b0
add     esp, 4
push    eax
call    ds:globallock
mov     ecx, [eax]
mov     edx, [eax+4]
mov     [esp+2ch+var_20], ecx
mov     [esp+2ch+lpstring], edx
mov     ebx, [esp+2ch+var_20]
movsx   eax, word ptr [ebx]
mov     ecx, lpiconname[eax*4]
push    ecx
push    0
call    ds:loadicona
test    eax, eax
jz      short loc_45be5a
push    0
push    eax
push    170h
push    65h
push    esi
call    ds:senddlgitemmessagea
mov     eax, [esp+2ch+lpstring]
add     ebx, 2
push    eax
push    64h
push    esi
call    ds:setdlgitemtexta
push    ebx
push    1
push    esi
call    sub_45c0e0
add     esp, 0ch
test    eax, eax
jz      short loc_45be7f
mov     di, 1
push    ebx
push    2
push    esi
call    sub_45c0e0
add     esp, 0ch
test    eax, eax
jz      short loc_45be91
inc     di
push    ebx
push    3
push    esi
call    sub_45c0e0
add     esp, 0ch
test    eax, eax
jz      short loc_45bea3
inc     di
push    edi
push    ebx
push    esi
call    sub_45c3e0
add     esp, 0ch
push    esi
call    sub_4907b0
add     esp, 4
push    eax
call    ds:globalunlock
push    0
push    esi
call    ds:getsystemmenu
test    eax, eax
jz      short loc_45bed9
push    0
push    0f060h
push    eax
call    ds:deletemenu
lea     eax, [esp+2ch+rect]
push    eax
push    esi
call    ds:getwindowrect
push    0
mov     edi, ds:getsystemmetrics
call    edi
cdq
sub     eax, edx
push    1
sar     eax, 1
mov     [esp+30h+var_18], eax
call    edi
cdq
sub     eax, edx
lea     ecx, [esp+2ch+var_18]
sar     eax, 1
mov     [esp+2ch+var_14], eax
lea     eax, [esp+2ch+rect]
push    eax
push    ecx
call    sub_473bf0
mov     edx, [esp+34h+rect.left]
mov     ecx, [esp+34h+rect.top]
add     esp, 8
push    ecx
push    edx
push    esi
call    sub_490bd0
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn    10h
movzx   edi, bx
cmp     edi, 1
jz      short loc_45bf6f
cmp     edi, 2
jz      short loc_45bf57
cmp     edi, 3
jz      short loc_45bf6f
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn    10h
push    2
push    esi
call    ds:getdlgitem
push    eax
call    ds:iswindowvisible
test    eax, eax
jz      loc_45be03
push    edi
push    esi
call    ds:enddialog
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn    10h
call    ds:getdialogbaseunits
movzx   eax, ax
retn
mov     eax, [esp+hdlg]
push    0
push    0
push    31h
push    1
push    eax
call    ds:senddlgitemmessagea
retn
mov     eax, [esp+lprect]
mov     ecx, [esp+niddlgitem]
mov     edx, [esp+hdlg]
push    eax
push    ecx
push    edx
call    ds:getdlgitem
push    eax
call    sub_490920
add     esp, 8
retn
mov     eax, [esp+c]
mov     ecx, [esp+lpstring]
mov     edx, [esp+hdc]
push    eax
push    ecx
push    edx
call    sub_449fc0
add     esp, 0ch
retn
mov     eax, [esp+arg_14]
push    0
mov     edx, [esp+4+y]
mov     ecx, [esp+4+arg_10]
sub     eax, edx
push    eax
mov     eax, [esp+8+x]
sub     ecx, eax
push    ecx
push    edx
mov     edx, [esp+10h+niddlgitem]
push    eax
mov     eax, [esp+14h+hdlg]
push    edx
push    eax
call    ds:getdlgitem
push    eax
call    ds:movewindow
retn
mov     eax, [esp+nheight]
push    0
mov     ecx, [esp+4+nwidth]
push    eax
mov     edx, [esp+8+y]
push    ecx
mov     eax, [esp+0ch+x]
push    edx
mov     ecx, [esp+10h+hwnd]
push    eax
push    ecx
call    ds:movewindow
retn
mov     eax, [esp+nheight]
push    0
mov     ecx, [esp+4+nwidth]
push    eax
mov     edx, [esp+8+y]
push    ecx
mov     eax, [esp+0ch+x]
push    edx
mov     ecx, [esp+10h+niddlgitem]
push    eax
mov     edx, [esp+14h+hdlg]
push    ecx
push    edx
call    ds:getdlgitem
push    eax
call    ds:movewindow
retn
mov     eax, [esp+niddlgitem]
mov     ecx, [esp+hdlg]
push    eax
push    ecx
call    ds:getdlgitem
push    eax
call    ds:bringwindowtotop
retn
mov     eax, [esp+niddlgitem]
mov     ecx, [esp+hdlg]
push    eax
push    ecx
call    ds:getdlgitem
push    eax
call    ds:bringwindowtotop
retn
mov     eax, [esp+lpstring]
push    esi
mov     esi, [esp+4+niddlgitem]
push    edi
push    esi
push    eax
call    sub_45c3b0
add     esp, 8
mov     edi, eax
movzx   ax, byte ptr [edi]
cmp     ax, 30h
jb      short loc_45c107
cmp     ax, 39h
ja      short loc_45c107
inc     edi
push    edi
call    ds:lstrlena
test    eax, eax
jle     short loc_45c127
mov     eax, [esp+8+hdlg]
push    edi
push    esi
push    eax
call    ds:setdlgitemtexta
mov     eax, 1
pop     edi
pop     esi
retn
mov     eax, [esp+8+hdlg]
push    esi
push    eax
call    ds:getdlgitem
test    eax, eax
jz      short loc_45c145
push    0
push    eax
call    ds:showwindow
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
lea     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_45c170
add     esp, 8
retn
sub     esp, 264h
push    ebx
push    esi
mov     esi, [esp+26ch+arg_0]
push    edi
push    ebp
mov     ecx, ds:hinstance
movzx   eax, si
push    100h
push    eax
push    ecx
call    ds:findresourcea
push    eax
mov     ecx, ds:hinstance
push    ecx
call    ds:loadresource
mov     edi, eax
test    edi, edi
jz      loc_45c2b1
push    edi
call    ds:lockresource
mov     [esp+274h+var_260], eax
test    eax, eax
jz      loc_45c2b1
lea     ebx, [eax+2]
push    5
mov     [esp+278h+var_264], 12ch
push    ebx
call    sub_45c3b0
add     esp, 8
push    eax
lea     eax, [esp+278h+arg_4]
push    eax
push    4
push    ebx
call    sub_45c3b0
lea     ecx, [esp+284h+var_12c]
add     esp, 8
push    eax
lea     eax, [esp+280h+var_264]
push    eax
push    ecx
call    sub_45c330
mov     ecx, [esp+288h+arg_4]
lea     edx, [esp+288h+var_12c]
lea     eax, [esp+288h+var_258]
add     esp, 14h
push    ecx
push    edx
push    12ch
push    eax
call    sub_401820
mov     ecx, [esp+284h+var_260]
add     esp, 10h
movsx   eax, word ptr [ecx]
cmp     eax, 3
ja      short def_45c230
jmp     ds:jpt_45c230[eax*4]
push    0
jmp     short loc_45c249
push    40h
jmp     short loc_45c249
push    30h
jmp     short loc_45c249
push    10h
jmp     short loc_45c249
push    20h
call    sub_4892b0
lea     eax, [esp+278h+var_258]
add     esp, 4
mov     [esp+274h+var_25c], eax
push    2
push    8
call    sub_45b8f0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_45c2b1
lea     ebx, [esp+274h+var_260]
push    ebp
call    ds:globallock
mov     ecx, [ebx]
push    ebp
mov     [eax], ecx
mov     edx, [ebx+4]
mov     [eax+4], edx
call    ds:globalunlock
push    ebp
mov     ecx, ds:hwndparent
push    offset sub_45bdd0
push    ecx
push    0e5h
call    sub_411f60
add     esp, 10h
mov     ebx, eax
push    ebp
call    sub_45ba00
add     esp, 4
cmp     ebx, 0ffffffffh
jnz     short loc_45c304
cmp     esi, 0cfh
jz      short loc_45c2cc
push    esi
push    0cfh
call    sub_45c150
add     esp, 8
cmp     eax, 2
jnz     short loc_45c2f4
push    110h
mov     eax, off_4ad1e8
push    offset amessage
push    eax
call    sub_480570
add     esp, 0ch
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 264h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 264h
retn
push    edi
call    ds:freeresource
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 264h
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_8]
push    edi
mov     esi, [esp+0ch+arg_0]
push    ebp
cmp     byte ptr [ebx], 0
jz      short loc_45c39e
mov     edi, [esp+10h+arg_4]
mov     ebp, [esp+10h+arg_c]
mov     eax, [edi]
dec     eax
mov     [edi], eax
cmp     eax, 1
jle     short loc_45c39e
mov     al, [ebx]
inc     ebx
mov     [esi], al
inc     esi
cmp     al, 25h
jnz     short loc_45c38f
cmp     byte ptr [ebx], 6dh
jnz     short loc_45c38f
mov     ecx, [esp+10h+lpstring]
dec     esi
push    ecx
inc     ebx
push    ebp
inc     dword ptr [edi]
mov     eax, [ebp+0]
add     eax, 4
mov     [ebp+0], eax
mov     edx, [eax-4]
push    edx
push    ecx
call    sub_45c3b0
add     esp, 8
push    eax
push    edi
push    esi
call    sub_45c330
add     esp, 14h
mov     esi, eax
cmp     byte ptr [ebx], 0
jnz     short loc_45c349
mov     eax, esi
pop     ebp
pop     edi
mov     byte ptr [esi], 0
pop     esi
pop     ebx
retn
mov     eax, esi
pop     ebp
pop     edi
mov     byte ptr [esi], 0
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
dec     ebx
test    ebx, ebx
jle     short loc_45c3d6
mov     esi, ds:lstrlena
mov     edi, [esp+0ch+lpstring]
push    edi
call    esi
lea     edi, [eax+edi+1]
dec     ebx
jnz     short loc_45c3c6
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     edi, [esp+0ch+lpstring]
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 6ch
push    ebx
push    esi
push    edi
push    ebp
call    sub_45bf90
mov     ecx, eax
lea     eax, [eax+eax*2]
cdq
mov     ebx, [esp+7ch+hwnd]
mov     [esp+7ch+var_64], eax
sub     eax, edx
push    ebx
sar     eax, 1
lea     edx, [ecx+ecx*8]
mov     [esp+80h+var_60], eax
mov     [esp+80h+var_5c], edx
call    sub_45bfa0
add     esp, 4
movsx   esi, ax
push    ebx
call    sub_490980
mov     [esp+80h+rect.left], eax
add     esp, 4
mov     [esp+7ch+var_66], 4
mov     [esp+7ch+var_67], 0
push    ebx
call    ds:getdc
mov     ebp, eax
push    esi
push    ebp
call    ds:selectobject
mov     [esp+7ch+var_6a], 0
mov     [esp+7ch+h], eax
movsx   edi, [esp+7ch+var_6a]
mov     eax, edi
lea     esi, [edi+1]
shl     eax, 4
lea     ecx, [esp+eax+7ch+var_30]
push    ecx
push    esi
push    ebx
call    sub_45bfc0
mov     ecx, [esp+88h+lpstring]
add     esp, 0ch
push    esi
push    ecx
call    sub_45c3b0
add     esp, 8
mov     esi, eax
movzx   ax, byte ptr [esi]
cmp     ax, 30h
jl      short loc_45c4a8
cmp     ax, 39h
jg      short loc_45c4a8
inc     esi
mov     [esp+7ch+string], al
lea     eax, [esp+7ch+string]
push    eax
call    _atoi
dec     ax
add     esp, 4
mov     [esp+edi*2+7ch+var_54], ax
jmp     short loc_45c4b2
mov     ax, [esp+7ch+var_6a]
mov     [esp+edi*2+7ch+var_54], ax
lea     edi, [esp+edi*4+7ch+var_4c]
push    esi
call    ds:lstrlena
mov     [edi], eax
test    eax, eax
jz      short loc_45c4d2
push    eax
push    esi
push    ebp
call    sub_45bfe0
add     esp, 0ch
mov     [edi], eax
jmp     short loc_45c4d7
dec     [esp+7ch+var_66]
inc     [esp+7ch+var_6a]
cmp     [esp+7ch+var_6a], 3
jl      loc_45c44e
mov     eax, [esp+7ch+h]
push    eax
push    ebp
call    ds:selectobject
push    ebp
push    ebx
call    ds:releasedc
cmp     [esp+7ch+arg_8], 1
jnz     short loc_45c52b
mov     ecx, [esp+7ch+var_30.right]
mov     eax, [esp+7ch+rect.left]
sub     ecx, [esp+7ch+var_30.left]
inc     ecx
sub     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
mov     [esp+7ch+var_30.left], eax
add     eax, ecx
mov     [esp+7ch+var_30.right], eax
jmp     loc_45c5e5
cmp     [esp+7ch+arg_8], 2
jnz     loc_45c5e5
mov     ecx, 3
mov     eax, [esp+7ch+rect.left]
cdq
idiv    ecx
mov     ecx, eax
mov     esi, [esp+7ch+var_30.right]
sub     esi, [esp+7ch+var_30.left]
mov     eax, esi
cdq
sub     eax, edx
sar     eax, 1
lea     edi, [ecx+eax]
mov     eax, [esp+7ch+var_20]
add     edi, [esp+7ch+var_60]
sub     eax, [esp+7ch+var_18]
cdq
sub     eax, edx
sar     eax, 1
lea     edx, [eax+ecx*2]
cmp     edi, edx
jge     short loc_45c5ad
mov     eax, [esp+7ch+var_30.left]
sub     eax, [esp+7ch+var_30.right]
cdq
sub     eax, edx
sar     eax, 1
add     eax, ecx
mov     [esp+7ch+var_30.left], eax
add     eax, esi
mov     esi, [esp+7ch+var_20]
mov     [esp+7ch+var_30.right], eax
mov     eax, [esp+7ch+var_30.left]
sub     eax, [esp+7ch+var_30.right]
cdq
sub     eax, edx
sar     eax, 1
lea     ecx, [eax+ecx*2]
mov     eax, ecx
mov     [esp+7ch+var_20], ecx
sub     eax, esi
jmp     short loc_45c5e1
mov     ecx, [esp+7ch+var_30.right]
mov     eax, [esp+7ch+rect.left]
sub     eax, [esp+7ch+var_60]
cdq
sub     eax, edx
sar     eax, 1
mov     [esp+7ch+var_30.right], eax
sub     eax, ecx
mov     ecx, [esp+7ch+var_20]
add     [esp+7ch+var_30.left], eax
mov     eax, [esp+7ch+rect.left]
add     eax, [esp+7ch+var_60]
cdq
sub     eax, edx
sar     eax, 1
mov     [esp+7ch+var_20], eax
sub     eax, ecx
add     [esp+7ch+var_18], eax
xor     si, si
xor     edi, edi
movsx   ecx, si
cmp     [esp+ecx*4+7ch+var_4c], edi
jz      short loc_45c61b
movsx   edx, [esp+ecx*2+7ch+var_54]
shl     edx, 4
inc     ecx
mov     eax, [esp+edx+7ch+var_30.bottom]
mov     ebp, [esp+edx+7ch+var_30.right]
lea     edx, [esp+edx+7ch+var_30]
push    eax
push    ebp
mov     eax, [edx+4]
push    eax
mov     edx, [edx]
push    edx
push    ecx
push    ebx
call    sub_45c000
add     esp, 18h
inc     si
cmp     si, 3
jl      short loc_45c5ea
mov     di, 1
xor     si, si
xor     ebp, ebp
movsx   eax, si
cmp     [esp+eax*4+7ch+var_4c], ebp
jz      short loc_45c647
cmp     [esp+eax*2+7ch+var_54], di
jnz     short loc_45c647
inc     eax
push    eax
push    ebx
call    sub_45c0a0
add     esp, 8
inc     si
cmp     si, 3
jl      short loc_45c62c
dec     di
jns     short loc_45c627
xor     si, si
xor     eax, eax
movsx   ecx, si
cmp     [esp+ecx*4+7ch+var_4c], eax
jnz     short loc_45c669
inc     si
cmp     si, 3
jl      short loc_45c658
test    si, si
jle     short loc_45c6b4
cmp     si, 3
jge     short loc_45c6b4
movsx   eax, si
mov     ax, [esp+eax*2+7ch+var_54]
cmp     ax, 2
jg      short loc_45c6b4
mov     di, 3
sub     di, ax
xor     bp, bp
movsx   eax, bp
cmp     [esp+eax*4+7ch+var_4c], 0
jz      short loc_45c6a8
cmp     [esp+eax*2+7ch+var_54], si
jnz     short loc_45c6a8
inc     eax
push    eax
push    ebx
call    sub_45c0c0
add     esp, 8
inc     bp
cmp     bp, 3
jl      short loc_45c68c
dec     di
jnz     short loc_45c689
xor     edx, edx
xor     esi, esi
cmp     dx, 3
jge     short loc_45c6ec
movsx   eax, dx
mov     edi, [esp+eax*4+7ch+var_4c]
test    edi, edi
jz      short loc_45c6e6
movsx   eax, [esp+eax*2+7ch+var_54]
shl     eax, 4
mov     ecx, [esp+eax+7ch+var_30.right]
sub     ecx, [esp+eax+7ch+var_30.left]
sub     ecx, edi
cmp     ecx, [esp+7ch+var_64]
jge     short loc_45c6e6
mov     esi, 1
inc     dx
test    esi, esi
jz      short loc_45c6b8
xor     eax, eax
test    esi, esi
jz      loc_45c7ee
xor     edx, edx
movsx   ecx, ax
inc     ax
add     edx, [esp+ecx*4+7ch+var_4c]
cmp     ax, 3
jl      short loc_45c6f8
movsx   ecx, [esp+7ch+var_66]
mov     eax, [esp+7ch+var_64]
imul    ecx, [esp+7ch+var_60]
lea     ebp, [eax+eax*2]
mov     eax, [esp+7ch+rect.left]
add     ecx, ebp
add     ecx, edx
sub     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
mov     esi, eax
test    esi, esi
jge     short loc_45c76e
lea     eax, [esp+7ch+rect]
push    eax
push    ebx
call    sub_490920
mov     eax, [esp+84h+rect.bottom]
add     esp, 8
lea     ecx, ds:0[esi*2]
sub     eax, [esp+7ch+rect.top]
push    eax
mov     eax, [esp+80h+rect.right]
sub     eax, ecx
mov     ecx, [esp+80h+rect.top]
sub     eax, [esp+80h+rect.left]
push    eax
push    ecx
mov     eax, [esp+88h+rect.left]
add     eax, esi
xor     esi, esi
push    eax
push    ebx
call    sub_45c040
add     esp, 14h
xor     di, di
add     esi, [esp+7ch+var_60]
cmp     [esp+7ch+arg_8], di
jle     short loc_45c7ee
xor     ax, ax
xor     edx, edx
movsx   ecx, ax
cmp     [esp+ecx*2+7ch+var_54], di
jnz     short loc_45c794
cmp     [esp+ecx*4+7ch+var_4c], edx
jnz     short loc_45c79c
inc     ax
cmp     ax, 3
jl      short loc_45c784
cmp     ax, 3
jge     short loc_45c7e2
movsx   ecx, ax
mov     eax, [esp+7ch+var_5c]
mov     ebp, [esp+ecx*4+7ch+var_4c]
and     ebp, 0ffffh
add     ebp, [esp+7ch+var_64]
cmp     ebp, eax
jg      short loc_45c7bd
mov     ebp, eax
movsx   edx, di
shl     edx, 4
mov     eax, [esp+edx+7ch+var_30.top]
mov     edx, [esp+edx+7ch+var_30.bottom]
sub     edx, eax
inc     ecx
push    edx
push    ebp
push    eax
push    esi
push    ecx
push    ebx
call    sub_45c070
add     ebp, [esp+94h+var_60]
add     esp, 18h
add     esi, ebp
inc     di
cmp     di, [esp+7ch+arg_8]
jl      short loc_45c77f
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 6ch
retn
push    42h
push    2
call    sub_45b8f0
add     esp, 8
retn
mov     ax, 2
retn
mov     eax, [esp+hmem]
push    eax
call    sub_45ba00
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
test    esi, esi
jnz     short loc_45c83d
xor     eax, eax
pop     esi
retn
push    esi
call    sub_45cdc0
add     esp, 4
sub     eax, esi
add     eax, 2
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
mov     esi, 2
mov     ecx, [eax]
push    ecx
call    sub_45c830
add     esp, 4
cmp     esi, eax
sbb     eax, eax
pop     esi
inc     eax
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_45c88f
mov     ecx, [esp+arg_4]
push    ecx
push    eax
call    sub_45cd80
add     esp, 8
test    eax, eax
jz      short loc_45c88f
mov     ax, [eax+2]
retn
xor     ax, ax
retn
mov     eax, [esp+arg_0]
push    ebx
xor     bx, bx
push    esi
push    edi
test    eax, eax
push    ebp
jz      short loc_45c909
mov     bx, 0
mov     ecx, [esp+10h+arg_4]
push    ecx
push    eax
call    sub_45cd80
add     esp, 8
test    eax, eax
jz      short loc_45c8c9
mov     bx, [eax+2]
mov     dx, [esp+10h+arg_c]
cmp     bx, dx
jbe     short loc_45c8d6
xor     bx, bx
movzx   ebp, bx
lea     esi, [eax+4]
mov     ecx, ebp
shr     ecx, 2
mov     eax, [esp+10h+arg_8]
mov     edi, eax
rep movsd
movzx   edx, dx
mov     ecx, ebp
sub     edx, ebp
and     ecx, 3
rep movsb
lea     edi, [ebp+eax+0]
mov     ecx, edx
shr     ecx, 2
xor     eax, eax
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
movzx   eax, bx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     edi, [esp+8+hmem]
push    edi
call    ds:globallock
mov     cx, [esp+8+arg_4]
push    ecx
push    eax
call    sub_45c950
add     esp, 8
mov     esi, eax
push    edi
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
test    eax, eax
jnz     short loc_45c95b
xor     eax, eax
retn
mov     ecx, [esp+arg_4]
push    ecx
push    eax
call    sub_45cd80
add     esp, 8
test    eax, eax
jnz     short loc_45c970
xor     eax, eax
retn
xor     ecx, ecx
add     eax, 4
mov     cx, [eax-2]
push    ecx
push    eax
call    sub_45b910
add     esp, 8
test    eax, eax
jnz     short locret_45c98c
mov     eax, 0ffffffffh
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
test    eax, eax
push    edi
push    ebp
jz      short loc_45c9dd
mov     ecx, [esp+10h+arg_4]
push    ecx
push    eax
call    sub_45cd80
add     esp, 8
test    eax, eax
jz      short loc_45c9dd
mov     dx, [eax+2]
mov     cx, [esp+10h+arg_c]
cmp     dx, cx
jbe     short loc_45c9bf
mov     dx, cx
lea     esi, [eax+4]
mov     ebx, [esp+10h+arg_8]
movzx   ebp, dx
mov     edi, ebx
mov     ecx, ebp
shr     ecx, 2
rep movsd
dec     dx
mov     ecx, ebp
and     ecx, 3
rep movsb
jmp     short loc_45c9e4
xor     dx, dx
mov     ebx, [esp+10h+arg_8]
movzx   eax, dx
pop     ebp
pop     edi
pop     esi
mov     byte ptr [eax+ebx], 0
mov     ax, dx
pop     ebx
retn
mov     eax, [esp+arg_c]
push    0
mov     ecx, [esp+4+arg_8]
push    eax
mov     edx, [esp+8+arg_4]
push    ecx
lea     eax, [esp+0ch+arg_0]
push    edx
push    eax
call    sub_45ca20
add     esp, 14h
retn
push    ebx
push    esi
mov     si, [esp+8+arg_4]
push    edi
test    si, si
push    ebp
jnz     short loc_45ca35
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     di, [esp+10h+arg_c]
cmp     di, 0ffdah
jbe     short loc_45ca48
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
test    di, di
jnz     short loc_45ca67
mov     ebx, [esp+10h+arg_0]
push    esi
mov     eax, [ebx]
push    eax
call    sub_45cc50
add     esp, 8
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ebx, [esp+10h+arg_0]
mov     ebp, ds:globallock
mov     eax, [ebx]
push    eax
call    ebp
mov     ebp, eax
push    esi
push    ebp
call    sub_45cd80
add     esp, 8
test    eax, eax
jnz     short loc_45ca98
mov     ecx, [esp+10h+arg_10]
push    ecx
push    edi
push    esi
push    ebx
call    sub_45cde0
add     esp, 10h
jmp     short loc_45caaf
cmp     [eax+2], di
jz      short loc_45caaf
mov     ecx, [esp+10h+arg_10]
push    ecx
push    edi
push    eax
push    ebp
push    ebx
call    sub_45ceb0
add     esp, 14h
test    eax, eax
jnz     short loc_45cac3
mov     eax, [ebx]
push    eax
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     esi, [esp+10h+arg_8]
test    esi, esi
jz      short loc_45cadf
movzx   edx, di
lea     edi, [eax+4]
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, [ebx]
push    eax
call    ds:globalunlock
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, dword ptr [esp+arg_c]
push    0
mov     ecx, [esp+4+hmem]
push    eax
mov     edx, dword ptr [esp+8+arg_4]
push    ecx
lea     eax, [esp+0ch+arg_0]
push    edx
push    eax
call    sub_45cb20
add     esp, 14h
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
test    esi, esi
jnz     short loc_45cb46
mov     eax, dword ptr [esp+8+arg_4]
mov     ecx, [esp+8+arg_0]
push    eax
mov     edx, [ecx]
push    edx
call    sub_45cc50
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
retn
push    esi
call    sub_45bbf0
add     esp, 4
test    eax, eax
jz      short loc_45cb58
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
call    ds:globallock
mov     dx, [esp+8+arg_c]
mov     ecx, [esp+8+arg_10]
push    ecx
push    edx
mov     ecx, [esp+10h+arg_0]
push    eax
mov     ax, [esp+14h+arg_4]
push    eax
push    ecx
call    sub_45ca20
add     esp, 14h
mov     edi, eax
push    esi
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+hmem]
push    esi
call    ds:globallock
test    eax, eax
jz      short loc_45cbbe
mov     ecx, [esp+4+arg_8]
mov     edx, [esp+4+arg_4]
push    ecx
push    edx
push    eax
call    sub_45cbd0
add     esp, 0ch
test    eax, eax
jnz     short loc_45cbc0
push    esi
call    ds:globalunlock
xor     eax, eax
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
test    esi, esi
jnz     short loc_45cbe3
xor     eax, eax
pop     esi
add     esp, 4
retn
mov     eax, [esp+8+arg_4]
push    eax
push    esi
call    sub_45cd80
add     esp, 8
test    eax, eax
jz      short loc_45cc14
mov     dx, [eax+2]
mov     ecx, [esp+8+arg_8]
mov     [ecx], dx
lea     edx, [esp+8+var_4]
push    edx
push    eax
push    esi
call    sub_45cfd0
add     esp, 0ch
pop     esi
add     esp, 4
retn
xor     eax, eax
pop     esi
add     esp, 4
retn
cmp     [esp+arg_c], 0
jz      short locret_45cc32
mov     eax, [esp+hmem]
push    eax
call    ds:globalunlock
retn
mov     eax, [esp+hmem]
push    esi
push    eax
call    ds:globallock
mov     esi, eax
mov     ax, [esp+4+arg_4]
push    eax
push    esi
call    sub_45cd80
add     esp, 8
test    eax, eax
jz      short loc_45cc84
push    1
push    0
push    eax
push    esi
lea     eax, [esp+14h+hmem]
push    eax
call    sub_45ceb0
add     esp, 14h
mov     eax, [esp+4+hmem]
push    eax
call    ds:globalunlock
pop     esi
retn
mov     eax, [esp+hmem]
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     ebx, ds:globallock
push    ebp
push    eax
call    ebx
mov     ecx, [esp+20h+arg_c]
mov     ebp, eax
mov     [esp+20h+var_4], eax
mov     dword ptr [ecx], 0
mov     bx, [eax]
test    bx, bx
jz      loc_45cd66
lea     eax, [esp+20h+var_c]
mov     ecx, [esp+20h+var_4]
push    eax
push    ebp
push    ecx
call    sub_45cfd0
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_45cd59
lea     eax, [esp+20h+var_10]
mov     ecx, [esp+20h+arg_8]
mov     [esp+20h+var_10], 0
mov     di, [ebp+2]
push    eax
push    ecx
push    edi
push    esi
push    ebx
call    [esp+34h+arg_4]
mov     ecx, [esp+34h+var_10]
mov     edx, [esp+34h+arg_c]
mov     [esp+34h+var_8], eax
add     esp, 14h
or      [edx], ecx
cmp     [esp+20h+var_c], 0
jz      short loc_45cd43
test    ecx, ecx
jz      short loc_45cd36
movzx   eax, di
lea     edi, [ebp+4]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, [esp+20h+var_c]
push    eax
call    sub_45ba00
add     esp, 4
cmp     [esp+20h+var_8], 0
jz      short loc_45cd66
xor     eax, eax
mov     ax, [ebp+2]
inc     eax
and     eax, 0fffffffeh
add     eax, 4
add     ebp, eax
mov     bx, [ebp+0]
test    bx, bx
jnz     loc_45ccd0
mov     eax, [esp+20h+hmem]
mov     ebp, ds:globalunlock
push    eax
call    ebp
mov     ax, bx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     edx, [esp+arg_0]
cmp     word ptr [edx], 0
jz      short loc_45cda9
mov     ax, [esp+arg_4]
cmp     [edx], ax
jz      short loc_45cda9
xor     ecx, ecx
mov     cx, [edx+2]
inc     ecx
and     ecx, 0fffffffeh
add     ecx, 4
add     edx, ecx
cmp     word ptr [edx], 0
jnz     short loc_45cd8f
cmp     word ptr [edx], 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, edx
retn
mov     eax, [esp+arg_0]
cmp     word ptr [eax], 0
jz      short locret_45cddf
xor     ecx, ecx
mov     cx, [eax+2]
inc     ecx
and     ecx, 0fffffffeh
add     ecx, 4
add     eax, ecx
cmp     word ptr [eax], 0
jnz     short loc_45cdca
retn
push    ebx
push    esi
mov     si, [esp+8+arg_8]
push    edi
mov     edi, [esp+0ch+arg_0]
push    ebp
movzx   ebx, si
inc     ebx
mov     eax, [edi]
and     ebx, 0fffffffeh
push    eax
add     ebx, 4
mov     ebp, ds:globalunlock
call    ebp
mov     ecx, [esp+10h+arg_c]
mov     eax, [edi]
push    ecx
mov     edx, [eax]
push    edx
call    sub_45c830
add     esp, 4
add     eax, ebx
push    eax
push    edi
call    sub_45ce70
add     esp, 0ch
mov     ebp, eax
mov     ecx, [edi]
push    ecx
call    ds:globallock
test    ebp, ebp
jnz     short loc_45ce36
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    eax
call    sub_45cdc0
add     ebx, eax
add     esp, 4
mov     edi, eax
push    2
push    edi
push    ebx
call    _memcpy
mov     ax, [esp+1ch+arg_4]
add     esp, 0ch
mov     [edi], ax
pop     ebp
mov     [edi+2], si
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+dwbytes]
push    esi
cmp     [esp+4+arg_8], 0
jnz     short loc_45ce87
cmp     eax, 0ffe0h
jl      short loc_45ce87
xor     eax, eax
pop     esi
retn
mov     esi, [esp+4+arg_0]
push    2
push    eax
mov     eax, [esi]
push    eax
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jz      short loc_45cea6
mov     [esi], eax
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     si, [esp+0ch+arg_c]
push    edi
cmp     si, 0ffdah
push    ebp
jbe     short loc_45cecd
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ebp, [esp+14h+arg_8]
xor     eax, eax
movzx   edi, si
mov     ax, [ebp+2]
inc     edi
and     edi, 0fffffffeh
inc     eax
and     eax, 0fffffffeh
sub     edi, eax
jnz     short loc_45cef4
mov     [ebp+2], si
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
test    si, si
jnz     short loc_45cefc
sub     edi, 4
mov     ebx, ebp
mov     eax, [esp+14h+arg_0]
sub     ebx, [esp+14h+arg_4]
mov     ecx, [eax]
mov     edx, [ecx]
push    edx
call    sub_45c830
mov     [esp+18h+var_4], eax
add     esp, 4
test    edi, edi
jle     short loc_45cf63
mov     eax, [esp+14h+arg_0]
mov     ebp, ds:globalunlock
mov     ecx, [eax]
push    ecx
call    ebp
mov     ecx, [esp+14h+arg_10]
mov     eax, [esp+14h+var_4]
push    ecx
add     eax, edi
mov     ecx, [esp+18h+arg_0]
push    eax
push    ecx
call    sub_45ce70
mov     ecx, [esp+20h+arg_0]
add     esp, 0ch
mov     ebp, eax
mov     eax, [ecx]
push    eax
call    ds:globallock
test    ebp, ebp
jnz     short loc_45cf60
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
lea     ebp, [eax+ebx]
xor     eax, eax
push    ebp
mov     ax, [ebp+2]
inc     eax
and     eax, 0fffffffeh
lea     ebx, [eax+ebp+4]
call    sub_45cdc0
add     esp, 4
sub     eax, ebx
add     eax, 2
push    eax
push    ebx
add     ebx, edi
push    ebx
call    _memcpy
add     esp, 0ch
test    si, si
jz      short loc_45cf95
mov     [ebp+2], si
test    edi, edi
jge     short loc_45cfb9
mov     eax, [esp+14h+arg_10]
mov     ecx, [esp+14h+arg_0]
push    eax
mov     eax, [esp+18h+var_4]
add     eax, edi
push    eax
push    ecx
call    sub_45ce70
add     esp, 0ch
test    si, si
jnz     short loc_45cfb9
xor     ebp, ebp
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_8]
mov     dword ptr [eax], 0
mov     eax, [esp+arg_4]
add     eax, 4
retn
mov     eax, [esp+dwbytes]
push    esi
push    42h
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_45d019
push    esi
call    sub_45bbc0
add     esp, 4
add     ds:dword_4a8644, eax
mov     eax, [esi]
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+pmem]
push    esi
push    eax
call    ds:globalhandle
push    eax
mov     esi, eax
call    sub_45bbc0
add     esp, 4
sub     ds:dword_4a8644, eax
push    esi
call    sub_45ba00
add     esp, 4
pop     esi
retn
xor     eax, eax
mov     dword ptr [ecx], offset off_4ab3e0
mov     [ecx+8], eax
mov     [ecx+4], eax
mov     eax, ecx
retn
sub     esp, 8
push    esi
push    edi
push    ecx
mov     dword ptr [ecx], offset off_4ab3e0
mov     esi, ecx
lea     ecx, [esp+14h+var_8]
call    sub_45d140
lea     ecx, [esp+10h+var_8]
call    sub_45d160
mov     edi, eax
test    edi, edi
jz      short loc_45d0ac
push    edi
mov     ecx, esi
call    sub_45d0c0
test    edi, edi
jz      short loc_45d087
push    1
mov     eax, [edi]
mov     ecx, edi
call    dword ptr [eax]
jmp     short loc_45d087
pop     edi
pop     esi
add     esp, 8
retn
mov     edx, [esp+arg_0]
push    esi
push    edi
mov     eax, [edx+4]
lea     esi, [edx+8]
test    eax, eax
jz      short loc_45d0d7
mov     edi, [esi]
mov     [eax+8], edi
jmp     short loc_45d0dc
mov     eax, [esi]
mov     [ecx+8], eax
mov     edi, [esi]
mov     eax, [edx+4]
test    edi, edi
jz      short loc_45d0ea
mov     [edi+4], eax
jmp     short loc_45d0ed
mov     [ecx+4], eax
pop     edi
mov     dword ptr [esi], 0
mov     dword ptr [edx+4], 0
pop     esi
retn    4
sub     esp, 8
push    esi
push    ecx
lea     ecx, [esp+10h+var_8]
xor     esi, esi
call    sub_45d140
lea     ecx, [esp+0ch+var_8]
call    sub_45d160
test    eax, eax
jz      short loc_45d12b
inc     esi
lea     ecx, [esp+0ch+var_8]
call    sub_45d160
test    eax, eax
jnz     short loc_45d11d
mov     eax, esi
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
mov     edx, [eax+4]
mov     [ecx], edx
mov     eax, [eax+8]
mov     [ecx+4], eax
mov     eax, ecx
retn    4
mov     eax, [ecx]
test    eax, eax
jz      short locret_45d171
mov     edx, [eax+4]
mov     [ecx], edx
mov     edx, [eax+8]
mov     [ecx+4], edx
retn
push    esi
mov     esi, ecx
call    sub_45d070
test    [esp+4+arg_0], 1
jz      short loc_45d198
push    esi
call    sub_45d020
add     esp, 4
mov     eax, esi
pop     esi
retn    4
sub     esp, 104h
lea     eax, [esp+104h+string1]
push    esi
lea     esi, [esp+108h+string1]
push    4
push    eax
call    sub_45d3f0
add     esp, 8
test    eax, eax
jz      short loc_45d1c0
xor     esi, esi
push    offset dword_4ae104
push    offset dword_4ab5c8
push    esi
push    0
call    sub_4963c0
test    eax, eax
jnz     loc_45d25d
mov     dword_4ae108, 1
mov     eax, dword_4ae104
push    eax
call    sub_496620
test    eax, eax
jnz     short loc_45d25d
push    offset sub_45edc0
mov     eax, dword_4ae104
push    offset sub_45ebb0
push    offset sub_45ec00
push    offset sub_45ec80
push    offset sub_45eba0
push    eax
call    sub_496860
test    eax, eax
jnz     short loc_45d220
call    sub_45d380
push    0
mov     eax, dword_4ae104
push    0
push    eax
call    sub_4969f0
test    eax, eax
jnz     short loc_45d25d
push    1
push    3
call    sub_45d7a0
add     esp, 8
mov     eax, dword_4ae104
push    eax
call    sub_496bb0
cmp     eax, 80040016h
jnz     short loc_45d25b
push    17h
call    sub_45c150
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 104h
retn
cmp     dword_4ae108, 0
jz      short locret_45d28f
push    0
push    3
call    sub_45d7a0
add     esp, 8
push    offset dword_4ae104
call    sub_496550
retn
mov     eax, dword_4ae104
retn
sub     esp, 104h
mov     eax, dword_4ae104
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_496b70
mov     esi, eax
test    esi, esi
jz      loc_45d364
mov     bx, [esp+114h+arg_8]
test    bl, 4
jz      short loc_45d2fe
lea     eax, [esp+114h+string1]
push    3
push    eax
call    sub_45d3f0
add     esp, 8
test    eax, eax
jnz     short loc_45d2fe
mov     ebp, [esp+114h+arg_4]
mov     edi, [esp+114h+arg_0]
lea     eax, [esp+114h+string1]
push    ebp
push    edi
push    5
push    eax
push    esi
mov     eax, [esi]
call    dword ptr [eax+28h]
jmp     short loc_45d30c
mov     edi, [esp+114h+arg_0]
mov     ebp, [esp+114h+arg_4]
test    bl, 2
jz      short loc_45d333
lea     eax, [esp+114h+string1]
push    2
push    eax
call    sub_45d3f0
add     esp, 8
test    eax, eax
jnz     short loc_45d333
lea     eax, [esp+114h+string1]
push    ebp
push    edi
push    5
push    eax
push    esi
mov     eax, [esi]
call    dword ptr [eax+28h]
test    bl, 1
jz      short loc_45d35a
lea     eax, [esp+114h+string1]
push    1
push    eax
call    sub_45d3f0
add     esp, 8
test    eax, eax
jnz     short loc_45d35a
lea     eax, [esp+114h+string1]
push    ebp
push    edi
mov     ebx, [esi]
push    5
push    eax
push    esi
call    dword ptr [ebx+28h]
mov     eax, [esi]
xor     edi, edi
push    esi
call    dword ptr [eax+8]
jmp     short loc_45d369
mov     edi, 80040014h
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 104h
retn
sub     esp, 104h
lea     eax, [esp+104h+string1]
push    esi
push    1
push    eax
call    sub_45d3f0
add     esp, 8
test    eax, eax
jnz     short loc_45d3b1
lea     eax, [esp+108h+string1]
push    5
push    eax
mov     ecx, dword_4ae104
push    ecx
call    sub_496760
mov     esi, eax
jmp     short loc_45d3b5
mov     esi, dword ptr [esp+108h+string1]
lea     eax, [esp+108h+string1]
push    2
push    eax
call    sub_45d3f0
add     esp, 8
test    eax, eax
jnz     short loc_45d3dd
lea     eax, [esp+108h+string1]
push    5
push    eax
mov     ecx, dword_4ae104
push    ecx
call    sub_496760
mov     esi, eax
mov     eax, esi
pop     esi
add     esp, 104h
retn
sub     esp, 208h
xor     eax, eax
mov     ecx, 40h
push    ebx
mov     [esp+20ch+buffer], 0
push    esi
push    edi
lea     edi, [esp+214h+var_207]
rep stosd
stosw
stosb
mov     esi, 0ffffffffh
mov     eax, [esp+214h+arg_4]
add     eax, esi
cmp     eax, 3
ja      def_45d425
jmp     ds:jpt_45d425[eax*4]
lea     eax, [esp+214h+string]
push    eax
call    sub_44bed0
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     def_45d425
lea     eax, [esp+214h+buffer]
push    104h
mov     ecx, dword ptr [esp+218h+string]
push    eax
push    ecx
call    sub_44f520
mov     di, 0bh
mov     ecx, dword ptr [esp+220h+string]
add     esp, 0ch
mov     esi, eax
push    ecx
call    sub_44f4a0
add     esp, 4
jmp     short loc_45d4ec
mov     eax, [esp+214h+lpstring1]
push    1
push    104h
mov     ecx, dword_4ae104
push    eax
push    ecx
call    sub_496b90
pop     edi
pop     esi
pop     ebx
add     esp, 208h
retn
cmp     ds:word_4a8518, 0
jz      short loc_45d4c2
lea     eax, [esp+214h+buffer]
push    104h
push    eax
mov     ecx, ds:dword_4a8510
push    ecx
call    sub_44f520
add     esp, 0ch
mov     esi, eax
mov     di, 0bh
jmp     short loc_45d4ec
lea     eax, [esp+214h+buffer]
push    104h
push    eax
call    ds:getwindowsdirectorya
test    eax, eax
jz      short loc_45d4de
xor     esi, esi
mov     di, 0ch
jmp     short loc_45d4ec
mov     di, word ptr [esp+214h+string]
test    esi, esi
jnz     short loc_45d55a
lea     eax, [esp+214h+buffer]
push    eax
call    ds:lstrlena
mov     ebx, eax
push    edi
lea     eax, [esp+218h+string]
push    1eb0h
push    104h
push    eax
call    sub_47fe70
lea     eax, [esp+ebx+224h+var_209]
add     esp, 10h
cmp     ebx, 1
jg      short loc_45d525
lea     eax, [esp+214h+buffer]
cmp     byte ptr [eax], 5ch
jnz     short loc_45d52d
mov     byte ptr [eax], 0
lea     eax, [esp+214h+string]
push    104h
lea     ecx, [esp+218h+buffer]
push    eax
push    ecx
call    sub_47f990
lea     ecx, [esp+220h+buffer]
mov     edx, [esp+220h+lpstring1]
add     esp, 0ch
push    ecx
push    edx
call    ds:lstrcpya
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 208h
retn
sub     esp, 208h
xor     eax, eax
mov     ecx, 41h
push    ebx
mov     ebx, [esp+20ch+lpstring]
push    esi
xor     si, si
push    edi
mov     edi, ebx
push    3
rep stosd
push    ebx
call    sub_45d3f0
add     esp, 8
test    eax, eax
jnz     short loc_45d614
lea     edi, [esp+214h+string1]
xor     eax, eax
mov     ecx, 41h
rep stosd
lea     edi, [esp+214h+var_208]
mov     ecx, 41h
rep stosd
lea     eax, [esp+214h+string1]
push    1
push    eax
call    sub_45d3f0
lea     eax, [esp+21ch+var_208]
add     esp, 8
push    2
push    eax
call    sub_45d3f0
lea     eax, [esp+21ch+string1]
add     esp, 8
push    eax
push    ebx
call    sub_45d630
add     esp, 8
test    eax, eax
jnz     short loc_45d614
lea     eax, [esp+214h+var_208]
push    eax
push    ebx
call    sub_45d630
add     esp, 8
test    eax, eax
jnz     short loc_45d614
mov     si, 1
mov     ax, si
pop     edi
pop     esi
pop     ebx
add     esp, 208h
retn
push    ebx
push    esi
push    edi
call    sub_44f2d0
mov     esi, eax
call    sub_44f2d0
mov     edi, eax
test    esi, esi
jz      short loc_45d669
test    edi, edi
jz      short loc_45d669
mov     eax, [esp+0ch+lpstring]
push    eax
push    esi
call    sub_44f3c0
add     esp, 8
test    eax, eax
jnz     short loc_45d669
mov     eax, [esp+0ch+arg_4]
push    eax
push    edi
call    sub_44f3c0
add     esp, 8
push    edi
push    esi
call    sub_44f950
add     esp, 8
mov     ebx, eax
test    esi, esi
jz      short loc_45d682
push    esi
call    sub_44f4a0
add     esp, 4
test    edi, edi
jz      short loc_45d68f
push    edi
call    sub_44f4a0
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 104h
lea     eax, [esp+104h+string]
push    esi
xor     esi, esi
push    eax
call    sub_45d580
add     esp, 4
test    ax, ax
mov     eax, [esp+108h+arg_0]
jz      short loc_45d718
mov     word ptr [eax], 1
mov     ecx, dword_4ae104
push    ecx
call    sub_496620
mov     esi, eax
test    esi, esi
jnz     short loc_45d71d
lea     eax, [esp+108h+string]
push    5
push    eax
mov     ecx, dword_4ae104
push    ecx
call    sub_496760
mov     esi, eax
push    0
push    0
mov     ecx, dword_4ae104
push    ecx
call    sub_4969f0
test    esi, esi
jnz     short loc_45d71d
push    1
push    4
call    sub_45d7a0
add     esp, 8
mov     eax, esi
pop     esi
add     esp, 104h
retn
mov     word ptr [eax], 0
mov     eax, esi
pop     esi
add     esp, 104h
retn
sub     esp, 104h
lea     eax, [esp+104h+string]
push    esi
xor     esi, esi
push    eax
call    sub_45d580
add     esp, 4
test    ax, ax
jz      short loc_45d78d
mov     eax, dword_4ae104
push    eax
call    sub_496620
mov     esi, eax
test    esi, esi
jnz     short loc_45d781
lea     eax, [esp+108h+string]
push    5
push    eax
mov     ecx, dword_4ae104
push    ecx
call    sub_496680
mov     esi, eax
push    0
push    0
mov     ecx, dword_4ae104
push    ecx
call    sub_4969f0
push    0
push    4
call    sub_45d7a0
add     esp, 8
mov     eax, esi
pop     esi
add     esp, 104h
retn
sub     esp, 104h
mov     eax, dword_4ae104
push    ebx
push    esi
push    edi
push    eax
call    sub_496b70
mov     esi, eax
test    esi, esi
jz      loc_45d867
mov     di, [esp+110h+arg_0]
test    di, 4
jz      short loc_45d7fc
lea     eax, [esp+110h+string1]
push    3
push    eax
call    sub_45d3f0
mov     ebx, [esp+118h+arg_4]
add     esp, 8
test    eax, eax
jnz     short loc_45d803
lea     eax, [esp+110h+string1]
push    ebx
push    offset sub_45d880
push    5
push    eax
push    esi
mov     eax, [esi]
call    dword ptr [eax+28h]
jmp     short loc_45d803
mov     ebx, [esp+110h+arg_4]
test    di, 2
jz      short loc_45d830
lea     eax, [esp+110h+string1]
push    2
push    eax
call    sub_45d3f0
add     esp, 8
test    eax, eax
jnz     short loc_45d830
lea     eax, [esp+110h+string1]
push    ebx
push    offset sub_45d880
push    5
push    eax
push    esi
mov     eax, [esi]
call    dword ptr [eax+28h]
test    di, 1
jz      short loc_45d85d
lea     eax, [esp+110h+string1]
push    1
push    eax
call    sub_45d3f0
add     esp, 8
test    eax, eax
jnz     short loc_45d85d
lea     eax, [esp+110h+string1]
push    ebx
push    offset sub_45d880
mov     ebx, [esi]
push    5
push    eax
push    esi
call    dword ptr [ebx+28h]
mov     eax, [esi]
xor     edi, edi
push    esi
call    dword ptr [eax+8]
jmp     short loc_45d86c
mov     edi, 80040014h
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 104h
retn
sub     esp, 4
push    esi
push    edi
mov     esi, [esp+0ch+arg_24]
test    esi, esi
jz      short loc_45d8a2
mov     edi, [esp+0ch+arg_20]
push    offset dword_4ab568
push    edi
call    sub_495dd0
test    eax, eax
jnz     short loc_45d8b9
jmp     short loc_45d8a6
mov     edi, [esp+0ch+arg_20]
test    esi, esi
jnz     short loc_45d921
push    offset dword_4ab578
push    edi
call    sub_495dd0
test    eax, eax
jz      short loc_45d921
mov     eax, dword_4ae104
push    eax
call    sub_496b70
mov     esi, eax
test    esi, esi
jz      short loc_45d921
lea     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+arg_18]
push    eax
push    edi
push    ecx
mov     eax, [esi]
push    esi
call    dword ptr [eax+20h]
test    eax, eax
jz      short loc_45d8fa
lea     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+arg_1c]
push    eax
mov     edx, dword_4ae104
push    edi
push    ecx
push    edx
call    sub_496b00
test    eax, eax
jnz     short loc_45d91b
push    offset dword_4ab568
push    edi
call    sub_495dd0
test    eax, eax
mov     eax, dword ptr [esp+0ch+var_4]
push    eax
mov     edi, [eax]
call    dword ptr [edi+0ch]
mov     ecx, dword ptr [esp+0ch+var_4]
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
push    esi
mov     eax, [esi]
call    dword ptr [eax+8]
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn    28h
mov     eax, [esp+arg_0]
xor     ecx, ecx
mov     [eax+1ch], cx
mov     [eax+18h], ecx
mov     [eax+1eh], cx
mov     [eax+20h], cx
mov     [eax+22h], cx
xor     eax, eax
retn    4
mov     eax, [esp+4]
mov     eax, [eax+18h]
test    eax, eax
jz      short locret_45d964
push    eax
call    sub_45ba00
add     esp, 4
retn    4
xor     eax, eax
retn    4
xor     eax, eax
retn    4
mov     ecx, [esp+arg_4]
sub     esp, 10h
movsx   eax, word ptr [ecx]
movsx   edx, word ptr [ecx+4]
mov     [esp+10h+var_c], eax
mov     [esp+10h+var_10], edx
movsx   eax, word ptr [ecx+8]
movsx   ecx, word ptr [ecx+0ch]
lea     edx, [esp+10h+var_10]
mov     [esp+10h+var_4], eax
mov     eax, [esp+10h+arg_0]
push    edx
mov     [esp+14h+var_8], ecx
mov     ecx, [eax+4]
mov     edx, [ecx+18h]
push    edx
call    sub_410360
add     esp, 8
xor     eax, eax
add     esp, 10h
retn    8
mov     ecx, [esp+arg_4]
sub     esp, 10h
movsx   eax, word ptr [ecx]
movsx   edx, word ptr [ecx+4]
mov     [esp+10h+var_c], eax
mov     [esp+10h+var_10], edx
movsx   eax, word ptr [ecx+8]
movsx   ecx, word ptr [ecx+0ch]
lea     edx, [esp+10h+var_10]
mov     [esp+10h+var_4], eax
mov     eax, [esp+10h+arg_0]
push    edx
mov     [esp+14h+var_8], ecx
mov     ecx, [eax+4]
mov     edx, [ecx+18h]
push    edx
call    sub_4103d0
add     esp, 8
xor     eax, eax
add     esp, 10h
retn    8
xor     eax, eax
retn    4
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     ecx, [eax+4]
xor     eax, eax
mov     [ecx+18h], edx
retn    8
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_8]
push    edx
mov     ecx, [eax+4]
mov     eax, [esp+4+arg_4]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
inc     eax
mov     [esi+8], eax
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+4]
dec     esi
mov     [ebx+8], esi
jnz     short loc_45daff
push    ebx
call    nullsub_5
mov     eax, [edi+0ch]
push    ebx
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
push    edi
dec     dword_4ae15c
mov     eax, [edi]
call    dword ptr [eax+8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
call    sub_45db70
push    eax
push    offset sub_45d990
mov     eax, [esp+10h+arg_0]
push    0ch
push    eax
call    sub_45e890
add     esp, 14h
test    eax, eax
jz      short loc_45db4f
cmp     [esp+4+var_4], 0
jz      short loc_45db57
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
xor     eax, eax
jmp     short loc_45db57
mov     [esp+4+var_4], 80040002h
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, [esp+4+var_4]
add     esp, 4
retn    8
cmp     byte_4ae134, 0
jnz     short loc_45dbb2
mov     byte_4ae134, 1
mov     ds:dword_4a8798, offset sub_45da90
mov     ds:dword_4a879c, offset sub_45dab0
mov     ds:dword_4a87a0, offset sub_45dad0
mov     ds:dword_4a87a4, offset sub_45d9b0
mov     ds:dword_4a87a8, offset sub_45da00
mov     eax, offset dword_4a8798
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_8]
push    edx
mov     ecx, [eax+4]
mov     eax, [esp+4+arg_4]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
inc     eax
mov     [esi+8], eax
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+4]
dec     esi
mov     [ebx+8], esi
jnz     short loc_45dc2f
push    ebx
call    nullsub_6
mov     eax, [edi+0ch]
push    ebx
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
push    edi
dec     dword_4ae15c
mov     eax, [edi]
call    dword ptr [eax+8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
call    sub_45dca0
push    eax
push    offset sub_45da50
mov     eax, [esp+10h+arg_0]
push    0ch
push    eax
call    sub_45e890
add     esp, 14h
test    eax, eax
jz      short loc_45dc7f
cmp     [esp+4+var_4], 0
jz      short loc_45dc87
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
xor     eax, eax
jmp     short loc_45dc87
mov     [esp+4+var_4], 80040002h
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, [esp+4+var_4]
add     esp, 4
retn    8
cmp     byte_4ae138, 0
jnz     short loc_45dcd8
mov     byte_4ae138, 1
mov     ds:dword_4a8688, offset sub_45dbc0
mov     ds:dword_4a868c, offset sub_45dbe0
mov     ds:dword_4a8690, offset sub_45dc00
mov     ds:dword_4a8694, offset sub_45da70
mov     eax, offset dword_4a8688
retn
mov     eax, [esp+4]
mov     edx, [esp+0ch]
push    edx
mov     ecx, [eax+4]
mov     eax, [esp+0ch]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
inc     eax
mov     [esi+8], eax
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+4]
dec     esi
mov     [ebx+8], esi
jnz     short loc_45dd4f
push    ebx
call    nullsub_8
mov     eax, [edi+0ch]
push    ebx
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
push    edi
dec     dword_4ae15c
mov     eax, [edi]
call    dword ptr [eax+8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
call    sub_45ddc0
push    eax
push    offset sub_45efa0
mov     eax, [esp+10h+arg_0]
push    0ch
push    eax
call    sub_45e890
add     esp, 14h
test    eax, eax
jz      short loc_45dd9f
cmp     [esp+4+var_4], 0
jz      short loc_45dda7
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
xor     eax, eax
jmp     short loc_45dda7
mov     [esp+4+var_4], 80040002h
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, [esp+4+var_4]
add     esp, 4
retn    8
cmp     byte_4ae13c, 0
jnz     short loc_45de20
mov     byte_4ae13c, 1
mov     ds:dword_4a86b8, offset loc_45dce0
mov     ds:dword_4a86bc, offset sub_45dd00
mov     ds:dword_4a86c0, offset sub_45dd20
mov     ds:dword_4a86c4, offset sub_45efc0
mov     ds:dword_4a86c8, offset sub_45f020
mov     ds:dword_4a86cc, offset sub_45f050
mov     ds:dword_4a86d0, offset loc_45f070
mov     ds:dword_4a86d4, offset sub_45f0a0
mov     eax, offset dword_4a86b8
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_8]
push    edx
mov     ecx, [eax+4]
mov     eax, [esp+4+arg_4]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
inc     eax
mov     [esi+8], eax
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+4]
dec     esi
mov     [ebx+8], esi
jnz     short loc_45de9f
push    ebx
call    nullsub_7
mov     eax, [edi+0ch]
push    ebx
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
push    edi
dec     dword_4ae15c
mov     eax, [edi]
call    dword ptr [eax+8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
call    sub_45df10
push    eax
push    offset sub_45ef50
mov     eax, [esp+10h+arg_0]
push    0ch
push    eax
call    sub_45e890
add     esp, 14h
test    eax, eax
jz      short loc_45deef
cmp     [esp+4+var_4], 0
jz      short loc_45def7
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
xor     eax, eax
jmp     short loc_45def7
mov     [esp+4+var_4], 80040002h
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, [esp+4+var_4]
add     esp, 4
retn    8
cmp     byte_4ae140, 0
jnz     short loc_45df48
mov     byte_4ae140, 1
mov     ds:dword_4a8678, offset sub_45de30
mov     ds:dword_4a867c, offset sub_45de50
mov     ds:dword_4a8680, offset sub_45de70
mov     ds:dword_4a8684, offset sub_45ef70
mov     eax, offset dword_4a8678
retn
mov     eax, [esp+4]
mov     edx, [esp+0ch]
push    edx
mov     ecx, [eax+4]
mov     eax, [esp+0ch]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
inc     eax
mov     [esi+8], eax
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+4]
dec     esi
mov     [ebx+8], esi
jnz     short loc_45dfbf
push    ebx
call    nullsub_9
mov     eax, [edi+0ch]
push    ebx
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
push    edi
dec     dword_4ae15c
mov     eax, [edi]
call    dword ptr [eax+8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
call    sub_45e030
push    eax
push    offset sub_45f3d0
mov     eax, [esp+10h+arg_0]
push    0ch
push    eax
call    sub_45e890
add     esp, 14h
test    eax, eax
jz      short loc_45e00f
cmp     [esp+4+var_4], 0
jz      short loc_45e017
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
xor     eax, eax
jmp     short loc_45e017
mov     [esp+4+var_4], 80040002h
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, [esp+4+var_4]
add     esp, 4
retn    8
cmp     byte_4ae144, 0
jnz     short loc_45e0ae
mov     byte_4ae144, 1
mov     ds:dword_4a8648, offset loc_45df50
mov     ds:dword_4a864c, offset sub_45df70
mov     ds:dword_4a8650, offset sub_45df90
mov     ds:dword_4a8654, offset sub_45f3f0
mov     ds:dword_4a8658, offset sub_45f410
mov     ds:dword_4a865c, offset sub_45f430
mov     ds:dword_4a8660, offset sub_45f4e0
mov     ds:dword_4a8664, offset sub_45f540
mov     ds:dword_4a8668, offset sub_45f5c0
mov     ds:dword_4a866c, offset sub_45f630
mov     ds:dword_4a8670, offset sub_45f690
mov     eax, offset dword_4a8648
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_8]
push    edx
mov     ecx, [eax+4]
mov     eax, [esp+4+arg_4]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
inc     eax
mov     [esi+8], eax
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+4]
dec     esi
mov     [ebx+8], esi
jnz     short loc_45e12f
push    ebx
call    nullsub_10
mov     eax, [edi+0ch]
push    ebx
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
push    edi
dec     dword_4ae15c
mov     eax, [edi]
call    dword ptr [eax+8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
call    sub_45e1a0
push    eax
push    offset sub_45f6b0
mov     eax, [esp+10h+arg_0]
push    0ch
push    eax
call    sub_45e890
add     esp, 14h
test    eax, eax
jz      short loc_45e17f
cmp     [esp+4+var_4], 0
jz      short loc_45e187
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
xor     eax, eax
jmp     short loc_45e187
mov     [esp+4+var_4], 80040002h
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, [esp+4+var_4]
add     esp, 4
retn    8
cmp     byte_4ae148, 0
jnz     short loc_45e1d8
mov     byte_4ae148, 1
mov     ds:dword_4a8698, offset sub_45e0c0
mov     ds:dword_4a869c, offset sub_45e0e0
mov     ds:dword_4a86a0, offset sub_45e100
mov     ds:dword_4a86a4, offset sub_45f6d0
mov     eax, offset dword_4a8698
retn
mov     eax, [esp+4]
mov     edx, [esp+0ch]
push    edx
mov     ecx, [eax+4]
mov     eax, [esp+0ch]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
inc     eax
mov     [esi+8], eax
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+4]
dec     esi
mov     [ebx+8], esi
jnz     short loc_45e24f
push    ebx
call    nullsub_11
mov     eax, [edi+0ch]
push    ebx
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
push    edi
dec     dword_4ae15c
mov     eax, [edi]
call    dword ptr [eax+8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
call    sub_45e2c0
push    eax
push    offset sub_45f8a0
mov     eax, [esp+10h+arg_0]
push    0ch
push    eax
call    sub_45e890
add     esp, 14h
test    eax, eax
jz      short loc_45e29f
cmp     [esp+4+var_4], 0
jz      short loc_45e2a7
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
xor     eax, eax
jmp     short loc_45e2a7
mov     [esp+4+var_4], 80040002h
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, [esp+4+var_4]
add     esp, 4
retn    8
cmp     byte_4ae14c, 0
jnz     short loc_45e2f8
mov     byte_4ae14c, 1
mov     ds:dword_4a86a8, offset loc_45e1e0
mov     ds:dword_4a86ac, offset sub_45e200
mov     ds:dword_4a86b0, offset sub_45e220
mov     ds:dword_4a86b4, offset sub_45f8c0
mov     eax, offset dword_4a86a8
retn
mov     eax, [esp+4]
mov     edx, [esp+0ch]
push    edx
mov     ecx, [eax+4]
mov     eax, [esp+0ch]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
inc     eax
mov     [esi+8], eax
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+4]
dec     esi
mov     [ebx+8], esi
jnz     short loc_45e36f
push    ebx
call    nullsub_12
mov     eax, [edi+0ch]
push    ebx
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
push    edi
dec     dword_4ae15c
mov     eax, [edi]
call    dword ptr [eax+8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
call    sub_45e3e0
push    eax
push    offset loc_45f980
mov     eax, [esp+10h+arg_0]
push    0ch
push    eax
call    sub_45e890
add     esp, 14h
test    eax, eax
jz      short loc_45e3bf
cmp     [esp+4+var_4], 0
jz      short loc_45e3c7
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
xor     eax, eax
jmp     short loc_45e3c7
mov     [esp+4+var_4], 80040002h
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, [esp+4+var_4]
add     esp, 4
retn    8
cmp     byte_4ae150, 0
jnz     loc_45e476
mov     byte_4ae150, 1
mov     ds:dword_4a87c8, offset loc_45e300
mov     ds:dword_4a87cc, offset sub_45e320
mov     ds:dword_4a87d0, offset sub_45e340
mov     ds:dword_4a87d4, offset sub_45faf0
mov     ds:dword_4a87d8, offset sub_45fb90
mov     ds:dword_4a87dc, offset sub_45fbb0
mov     ds:dword_4a87e0, offset sub_45fbf0
mov     ds:dword_4a87e4, offset sub_45fc90
mov     ds:dword_4a87e8, offset sub_45fd40
mov     ds:dword_4a87ec, offset sub_45fd70
mov     ds:dword_4a87f0, offset loc_45fda0
mov     ds:dword_4a87f4, offset sub_45fdd0
mov     ds:dword_4a87f8, offset sub_45fdf0
mov     eax, offset dword_4a87c8
retn
mov     eax, [esp+4]
mov     edx, [esp+0ch]
push    edx
mov     ecx, [eax+4]
mov     eax, [esp+0ch]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
inc     eax
mov     [esi+8], eax
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+4]
dec     esi
mov     [ebx+8], esi
jnz     short loc_45e4ef
push    ebx
call    nullsub_13
mov     eax, [edi+0ch]
push    ebx
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
push    edi
dec     dword_4ae15c
mov     eax, [edi]
call    dword ptr [eax+8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
call    sub_45e560
push    eax
push    offset sub_45f9a0
mov     eax, [esp+10h+arg_0]
push    0ch
push    eax
call    sub_45e890
add     esp, 14h
test    eax, eax
jz      short loc_45e53f
cmp     [esp+4+var_4], 0
jz      short loc_45e547
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
xor     eax, eax
jmp     short loc_45e547
mov     [esp+4+var_4], 80040002h
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, [esp+4+var_4]
add     esp, 4
retn    8
cmp     byte_4ae154, 0
jnz     short loc_45e5a2
mov     byte_4ae154, 1
mov     ds:dword_4a87b0, offset loc_45e480
mov     ds:dword_4a87b4, offset sub_45e4a0
mov     ds:dword_4a87b8, offset sub_45e4c0
mov     ds:dword_4a87bc, offset loc_45fa00
mov     ds:dword_4a87c0, offset sub_45fa90
mov     eax, offset dword_4a87b0
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_8]
push    edx
mov     ecx, [eax+4]
mov     eax, [esp+4+arg_4]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
inc     eax
mov     [esi+8], eax
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+4]
dec     esi
mov     [ebx+8], esi
jnz     short loc_45e61f
push    ebx
call    nullsub_14
mov     eax, [edi+0ch]
push    ebx
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
push    edi
dec     dword_4ae15c
mov     eax, [edi]
call    dword ptr [eax+8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
call    sub_45e690
push    eax
push    offset loc_45fe20
mov     eax, [esp+10h+arg_0]
push    0ch
push    eax
call    sub_45e890
add     esp, 14h
test    eax, eax
jz      short loc_45e66f
cmp     [esp+4+var_4], 0
jz      short loc_45e677
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
xor     eax, eax
jmp     short loc_45e677
mov     [esp+4+var_4], 80040002h
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, [esp+4+var_4]
add     esp, 4
retn    8
cmp     byte_4ae158, 0
jnz     loc_45e884
mov     byte_4ae158, 1
mov     ds:dword_4a86d8, offset sub_45e5b0
mov     ds:dword_4a86dc, offset sub_45e5d0
mov     ds:dword_4a86e0, offset sub_45e5f0
mov     ds:dword_4a86e4, offset sub_45fe40
mov     ds:dword_4a86e8, offset sub_45fe50
mov     ds:dword_4a86ec, offset sub_45fe60
mov     ds:dword_4a86f0, offset sub_45fe70
mov     ds:dword_4a86f4, offset sub_45fe80
mov     ds:dword_4a86f8, offset sub_45fe90
mov     ds:dword_4a86fc, offset sub_45fec0
mov     ds:dword_4a8700, offset loc_45fef0
mov     ds:dword_4a8704, offset sub_45ff10
mov     ds:dword_4a8708, offset sub_45ff20
mov     ds:dword_4a870c, offset loc_45ff80
mov     ds:dword_4a8710, offset sub_45ffd0
mov     ds:dword_4a8714, offset sub_460000
mov     ds:dword_4a8718, offset sub_460060
mov     ds:dword_4a871c, offset sub_4600b0
mov     ds:dword_4a8720, offset sub_460100
mov     ds:dword_4a8724, offset sub_460120
mov     ds:dword_4a8728, offset sub_460130
mov     ds:dword_4a872c, offset sub_460170
mov     ds:dword_4a8730, offset sub_4601c0
mov     ds:dword_4a8734, offset sub_4601e0
mov     ds:dword_4a8738, offset sub_460200
mov     ds:dword_4a873c, offset sub_460220
mov     ds:dword_4a8740, offset sub_460240
mov     ds:dword_4a8744, offset sub_460260
mov     ds:dword_4a8748, offset sub_460280
mov     ds:dword_4a874c, offset sub_4602a0
mov     ds:dword_4a8750, offset sub_460310
mov     ds:dword_4a8754, offset sub_460320
mov     ds:dword_4a8758, offset sub_460330
mov     ds:dword_4a875c, offset sub_460340
mov     ds:dword_4a8760, offset sub_460350
mov     ds:dword_4a8764, offset sub_460360
mov     ds:dword_4a8768, offset sub_460370
mov     ds:dword_4a876c, offset sub_460380
mov     ds:dword_4a8770, offset sub_460390
mov     ds:dword_4a8774, offset sub_4603a0
mov     ds:dword_4a8778, offset sub_4603b0
mov     ds:dword_4a877c, offset sub_4603c0
mov     ds:dword_4a8780, offset sub_4603f0
mov     ds:dword_4a8784, offset sub_460410
mov     ds:dword_4a8788, offset sub_460460
mov     ds:dword_4a878c, offset sub_4604a0
mov     ds:dword_4a8790, offset sub_4604d0
mov     ds:dword_4a8794, offset sub_4604e0
mov     eax, offset dword_4a86d8
retn
mov     ecx, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    edi
push    ecx
mov     eax, [esi+0ch]
push    eax
mov     edi, [eax]
call    dword ptr [edi+0ch]
mov     edi, eax
test    edi, edi
jz      short loc_45e8dc
mov     eax, [esp+8+arg_c]
push    esi
mov     [edi], eax
mov     [edi+4], esi
mov     dword ptr [edi+8], 1
mov     eax, [esi]
call    dword ptr [eax+4]
push    esi
mov     esi, [esi]
call    dword ptr [esi+4]
push    edi
inc     dword_4ae15c
call    [esp+0ch+arg_8]
mov     ecx, [esp+8+arg_10]
mov     [ecx], eax
mov     eax, edi
pop     edi
pop     esi
retn
mov     ecx, [esp+8+arg_10]
mov     eax, edi
pop     edi
pop     esi
mov     dword ptr [ecx], 80040002h
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     edi, [esp+0ch+arg_0]
push    ebp
cmp     edi, ebx
jz      short loc_45e91d
push    offset dword_4ab5c8
push    edi
call    sub_495dd0
test    eax, eax
jnz     short loc_45e91d
mov     eax, offset dword_4ab3f8
cmp     eax, offset dword_4ab5c8
jnz     loc_45e9e0
cmp     [esp+10h+arg_4], 0
jz      short loc_45e944
mov     ebp, [esp+10h+arg_c]
push    ebp
push    offset loc_45d950
push    offset sub_45d930
push    24h
push    1
push    offset dword_4ab5c8
call    [esp+28h+arg_4]
mov     ebx, eax
jmp     short loc_45e94a
xor     ebx, ebx
mov     ebp, [esp+10h+arg_c]
test    ebx, ebx
jnz     loc_45eb8b
mov     esi, [esp+10h+arg_8]
test    esi, esi
jz      loc_45e9e8
push    ebp
push    offset sub_45dfd0
push    1
push    offset dword_4ab458
push    1
push    offset dword_4ab5c8
call    esi
mov     ebx, eax
test    ebx, ebx
jnz     loc_45eb8b
push    ebp
push    offset sub_45e630
push    1
push    offset dword_4ab548
push    1
push    offset dword_4ab5c8
call    esi
mov     ebx, eax
test    ebx, ebx
jnz     loc_45eb8b
push    ebp
push    offset sub_45e260
push    1
push    offset dword_4ab5b8
push    1
push    offset dword_4ab5c8
call    esi
mov     ebx, eax
test    ebx, ebx
jnz     loc_45eb8b
push    ebp
push    offset sub_45e140
push    1
push    offset dword_4ab4c8
push    1
push    offset dword_4ab5c8
call    esi
mov     ebx, eax
test    ebx, ebx
jnz     loc_45eb8b
jmp     short loc_45e9e8
mov     esi, [esp+10h+arg_8]
mov     ebp, [esp+10h+arg_c]
test    edi, edi
jz      short loc_45ea07
push    offset dword_4ab5d8
push    edi
call    sub_495dd0
test    eax, eax
jnz     short loc_45ea07
mov     eax, offset dword_4ab3f8
cmp     eax, offset dword_4ab5d8
jnz     short loc_45ea79
cmp     [esp+10h+arg_4], 0
mov     ebx, 0
jz      short loc_45ea2d
push    ebp
push    offset sub_45ef10
push    offset loc_45ef00
push    2eh
push    1
push    offset dword_4ab5d8
call    [esp+28h+arg_4]
mov     ebx, eax
test    ebx, ebx
jnz     loc_45eb8b
test    esi, esi
jz      short loc_45ea79
push    ebp
push    offset sub_45dd60
push    1
push    offset dword_4ab4e8
push    1
push    offset dword_4ab5d8
call    esi
mov     ebx, eax
test    ebx, ebx
jnz     loc_45eb8b
push    ebp
push    offset sub_45deb0
push    1
push    offset dword_4ab5e8
push    1
push    offset dword_4ab5d8
call    esi
mov     ebx, eax
test    ebx, ebx
jnz     loc_45eb8b
test    edi, edi
jz      short loc_45ea98
push    offset dword_4ab5f8
push    edi
call    sub_495dd0
test    eax, eax
jnz     short loc_45ea98
mov     eax, offset dword_4ab3f8
cmp     eax, offset dword_4ab5f8
jnz     short loc_45eb0a
cmp     [esp+10h+arg_4], 0
mov     ebx, 0
jz      short loc_45eabe
push    ebp
push    offset sub_45f9d0
push    offset sub_45f9c0
push    36h
push    1
push    offset dword_4ab5f8
call    [esp+28h+arg_4]
mov     ebx, eax
test    ebx, ebx
jnz     loc_45eb8b
test    esi, esi
jz      short loc_45eb0a
push    ebp
push    offset sub_45e380
push    1
push    offset dword_4ab4a8
push    1
push    offset dword_4ab5f8
call    esi
mov     ebx, eax
test    ebx, ebx
jnz     loc_45eb8b
push    ebp
push    offset sub_45e500
push    1
push    offset dword_4ab608
push    1
push    offset dword_4ab5f8
call    esi
mov     ebx, eax
test    ebx, ebx
jnz     loc_45eb8b
test    edi, edi
jz      short loc_45eb29
push    offset dword_4ab628
push    edi
call    sub_495dd0
test    eax, eax
jnz     short loc_45eb29
mov     eax, offset dword_4ab628
cmp     eax, offset dword_4ab3f8
jnz     short loc_45eb8b
cmp     [esp+10h+arg_4], 0
mov     ebx, 0
jz      short loc_45eb4f
push    ebp
push    offset nullsub_4
push    offset sub_45d970
push    1ch
push    1
push    offset dword_4ab628
call    [esp+28h+arg_4]
mov     ebx, eax
test    ebx, ebx
jnz     short loc_45eb8b
test    esi, esi
jz      short loc_45eb8b
push    ebp
push    offset sub_45db10
push    1
push    offset dword_4ab518
push    1
push    offset dword_4ab628
call    esi
mov     ebx, eax
test    ebx, ebx
jnz     short loc_45eb8b
push    ebp
push    offset sub_45dc40
push    1
push    offset dword_4ab618
push    1
push    offset dword_4ab628
call    esi
mov     ebx, eax
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 80040005h
retn    0ch
cmp     dword_4ae15c, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, 80040003h
retn
mov     edx, [esp+arg_14]
mov     eax, [esp+arg_8]
mov     ecx, [edx]
mov     [ecx], eax
mov     ecx, [edx+4]
mov     eax, [esp+arg_c]
mov     [ecx], eax
mov     ecx, [edx+8]
mov     eax, [esp+arg_10]
mov     [ecx], eax
mov     eax, 1
mov     byte ptr [edx+0ch], 1
retn    18h
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_c]
sub     esp, 10h
mov     [esp+10h+var_10], eax
mov     [esp+10h+var_c], ecx
lea     eax, [esp+10h+var_10]
mov     ecx, [esp+10h+arg_0]
mov     [esp+10h+var_8], edx
push    eax
mov     [esp+14h+var_4], 0
push    0
push    offset sub_45ebd0
push    ecx
call    sub_45e8f0
add     esp, 10h
cmp     [esp+10h+var_4], 1
sbb     eax, eax
add     esp, 10h
and     eax, 80040005h
retn    10h
mov     ecx, [esp+arg_8]
push    esi
mov     esi, [esp+4+arg_14]
mov     eax, [esi]
push    eax
push    ecx
call    sub_495dd0
test    eax, eax
jz      short loc_45ec76
mov     eax, [esp+4+arg_10]
mov     [esi+4], eax
mov     eax, 1
pop     esi
retn    18h
xor     eax, eax
pop     esi
retn    18h
mov     eax, [esp+arg_8]
sub     esp, 8
mov     ecx, [esp+8+arg_4]
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], 0
lea     eax, [esp+8+var_8]
push    eax
push    offset sub_45ec50
push    0
push    ecx
call    sub_45e8f0
add     esp, 10h
cmp     [esp+8+var_4], 0
jz      short loc_45ecc7
mov     eax, [esp+8+arg_c]
mov     ecx, [esp+8+arg_0]
push    eax
push    ecx
call    [esp+10h+var_4]
add     esp, 8
retn    10h
mov     eax, 80040004h
add     esp, 8
retn    10h
mov     ecx, [esp+arg_14]
push    esi
mov     esi, [ecx+4]
inc     dword ptr [ecx]
test    esi, esi
jz      short loc_45ed42
mov     edx, [esp+4+arg_0]
mov     eax, [edx]
mov     [esi], eax
mov     eax, [edx+4]
mov     [esi+4], eax
mov     eax, [edx+8]
mov     [esi+8], eax
mov     eax, [esp+4+arg_4]
mov     edx, [edx+0ch]
mov     [esi+0ch], edx
mov     esi, [ecx+4]
mov     edx, offset dword_4ab418
mov     [esi+10h], eax
mov     esi, [ecx+4]
mov     eax, [edx]
mov     [esi+14h], eax
add     esi, 14h
mov     eax, [edx+4]
mov     [esi+4], eax
mov     eax, [edx+8]
mov     [esi+8], eax
mov     edx, [edx+0ch]
mov     [esi+0ch], edx
mov     esi, [ecx+4]
mov     dword ptr [esi+24h], 1
add     dword ptr [ecx+4], 28h
xor     eax, eax
pop     esi
retn    18h
mov     ecx, [esp+arg_14]
push    esi
mov     esi, [ecx+4]
inc     dword ptr [ecx]
test    esi, esi
jz      short loc_45edb1
mov     edx, [esp+4+arg_0]
mov     eax, [edx]
mov     [esi], eax
mov     eax, [edx+4]
mov     [esi+4], eax
mov     eax, [edx+8]
mov     [esi+8], eax
mov     eax, [esp+4+arg_4]
mov     edx, [edx+0ch]
mov     [esi+0ch], edx
mov     esi, [ecx+4]
mov     edx, [esp+4+arg_8]
mov     [esi+10h], eax
mov     esi, [ecx+4]
mov     eax, [edx]
mov     [esi+14h], eax
add     esi, 14h
mov     eax, [edx+4]
mov     [esi+4], eax
mov     eax, [edx+8]
mov     [esi+8], eax
mov     eax, [esp+4+arg_c]
mov     edx, [edx+0ch]
mov     [esi+0ch], edx
mov     esi, [ecx+4]
mov     [esi+24h], eax
add     dword ptr [ecx+4], 28h
xor     eax, eax
pop     esi
retn    18h
sub     esp, 8
lea     eax, [esp+8+var_8]
push    esi
mov     [esp+0ch+var_8], 0
mov     [esp+0ch+var_4], 0
push    eax
push    offset sub_45ed50
push    offset sub_45ece0
push    0
call    sub_45e8f0
mov     eax, [esp+1ch+var_8]
add     esp, 10h
lea     eax, [eax+eax*4+5]
shl     eax, 3
push    eax
mov     eax, [esp+10h+arg_0]
push    eax
mov     esi, [eax]
call    dword ptr [esi+0ch]
mov     ecx, [esp+0ch+arg_4]
test    eax, eax
mov     [ecx], eax
jnz     short loc_45ee19
mov     eax, 80040002h
pop     esi
add     esp, 8
retn    8
mov     [esp+0ch+var_4], eax
lea     eax, [esp+0ch+var_8]
push    eax
push    offset sub_45ed50
push    offset sub_45ece0
push    0
call    sub_45e8f0
mov     edx, [esp+1ch+var_4]
mov     eax, ds:dword_4ab3e8
add     esp, 10h
mov     ecx, offset dword_4ab3e8
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
mov     ecx, offset dword_4ab3e8
mov     edx, [esp+0ch+var_4]
mov     eax, [ecx]
mov     [edx+14h], eax
add     edx, 14h
mov     esi, [ecx+4]
mov     [edx+4], esi
pop     esi
mov     eax, [ecx+8]
mov     [edx+8], eax
xor     eax, eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
add     esp, 8
retn    8
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     eax, [esi]
cmp     eax, 1
jz      short loc_45eeb1
cmp     eax, 2
jz      short loc_45eeb1
cmp     eax, 3
jz      short loc_45eeb1
mov     eax, 80040001h
pop     edi
pop     esi
pop     ebx
retn
mov     ebx, [esp+0ch+arg_0]
cmp     byte ptr [ebx+14h], 0
jz      short loc_45eedf
mov     eax, [ebx+4]
cmp     dword ptr [ebx], 1
push    eax
jnz     short loc_45eed0
mov     ecx, [ebx+8]
push    ecx
call    ds:releasedc
jmp     short loc_45eedf
mov     ecx, ds:frequency
push    ecx
call    __beep_0
add     esp, 8
mov     edi, ebx
mov     ecx, 5
rep movsd
mov     al, [esp+0ch+arg_8]
mov     cl, [esp+0ch+arg_c]
pop     edi
mov     [ebx+14h], al
xor     eax, eax
pop     esi
mov     [ebx+15h], cl
pop     ebx
retn
xor     eax, eax
retn    4
mov     eax, [esp+arg_0]
cmp     byte ptr [eax+2ch], 0
jz      short locret_45ef44
cmp     dword ptr [eax+18h], 1
jnz     short loc_45ef31
mov     ecx, [eax+1ch]
mov     eax, [eax+20h]
push    ecx
push    eax
call    ds:releasedc
retn    4
mov     eax, [eax+1ch]
mov     ecx, ds:frequency
push    eax
push    ecx
call    __beep_0
add     esp, 8
retn    4
xor     eax, eax
retn    4
mov     eax, [esp+arg_c]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    eax
mov     eax, [esp+4+arg_0]
push    ecx
push    edx
mov     eax, [eax+4]
add     eax, 18h
push    eax
call    sub_45ee90
add     esp, 10h
retn    10h
xor     eax, eax
retn    4
mov     eax, [esp+arg_0]
sub     esp, 10h
push    esi
mov     ecx, [eax+4]
lea     eax, [esp+14h+point]
push    edi
mov     edi, [ecx+1ch]
push    eax
push    edi
call    ds:getviewportorgex
mov     ecx, [esp+18h+point.x]
mov     esi, [esp+18h+arg_4]
mov     eax, [esp+18h+point.y]
mov     [esi], ecx
lea     ecx, [esp+18h+size]
mov     [esi+4], eax
push    ecx
push    edi
call    ds:getviewportextex
mov     eax, [esi]
add     eax, [esp+18h+size._cx]
mov     [esi+8], eax
mov     eax, [esi+4]
add     eax, [esp+18h+size.cy]
pop     edi
mov     [esi+0ch], eax
xor     eax, eax
pop     esi
add     esp, 10h
retn    8
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
mov     ecx, [eax+4]
push    0eh
mov     esi, ds:getdevicecaps
mov     edi, [ecx+1ch]
push    edi
call    esi
mov     ebx, eax
push    0ch
push    edi
call    esi
imul    ebx, eax
mov     eax, [esp+0ch+arg_4]
pop     edi
pop     esi
mov     [eax], ebx
xor     eax, eax
pop     ebx
retn    8
mov     eax, [esp+arg_0]
push    esi
push    edi
mov     ecx, 5
mov     esi, [eax+4]
mov     edi, [esp+8+arg_4]
add     esi, 18h
rep movsd
xor     eax, eax
pop     edi
pop     esi
retn    8
mov     eax, [esp+4]
mov     ecx, [eax+4]
cmp     byte ptr [ecx+2dh], 0
jz      short loc_45f085
mov     eax, 0ffffffffh
retn    8
mov     eax, [esp+8]
push    0
push    0
add     ecx, 18h
push    eax
push    ecx
call    sub_45ee90
add     esp, 10h
retn    8
sub     esp, 34h
push    ebx
push    esi
mov     esi, [esp+3ch+arg_14]
push    edi
push    ebp
test    esi, esi
jz      short loc_45f0d4
mov     al, [esi+3]
test    al, al
jz      short loc_45f0ba
cmp     al, 1
jnz     short loc_45f0c5
mov     al, [esi+7]
test    al, al
jz      short loc_45f0d4
cmp     al, 1
jz      short loc_45f0d4
mov     eax, 80040001h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    1ch
lea     eax, [esp+44h+var_14]
push    eax
mov     eax, [esp+48h+arg_8]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+14h]
mov     eax, [esp+44h+arg_10]
cmp     eax, 6
ja      short def_45f0ec
jmp     ds:jpt_45f0ec[eax*4]
mov     eax, 800407d0h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    1ch
mov     ebp, 0cc0020h
jmp     short loc_45f11c
mov     ebp, 440328h
jmp     short loc_45f11c
mov     ebp, 330008h
jmp     short loc_45f11c
mov     ebp, 1100a6h
mov     eax, [esp+44h+arg_0]
mov     ecx, [eax+4]
mov     ebx, [ecx+1ch]
push    ebx
call    ds:savedc
test    esi, esi
jz      short loc_45f1ae
call    sub_40ae50
cmp     byte ptr [esi+3], 0
mov     edi, eax
jz      short loc_45f158
xor     eax, eax
xor     ecx, ecx
mov     al, [esi+1]
mov     cl, [esi+2]
shl     eax, 8
shl     ecx, 10h
or      eax, ecx
xor     ecx, ecx
mov     cl, [esi]
or      eax, ecx
jmp     short loc_45f16a
test    edi, edi
jz      short loc_45f172
xor     eax, eax
mov     al, [esi]
push    eax
push    edi
call    sub_469b60
add     esp, 8
push    eax
push    ebx
call    ds:settextcolor
cmp     byte ptr [esi+7], 0
jz      short loc_45f194
xor     ecx, ecx
xor     eax, eax
mov     cl, [esi+5]
mov     al, [esi+6]
shl     ecx, 8
shl     eax, 10h
or      ecx, eax
xor     eax, eax
mov     al, [esi+4]
or      ecx, eax
push    ecx
jmp     short loc_45f1a7
test    edi, edi
jz      short loc_45f1ae
xor     eax, eax
mov     al, [esi]
push    eax
push    edi
call    sub_469b60
add     esp, 8
push    eax
push    ebx
call    ds:setbkcolor
mov     eax, [esp+44h+hrgn]
test    eax, eax
jz      short loc_45f1be
push    eax
push    ebx
call    ds:selectcliprgn
mov     edi, [esp+44h+arg_c]
mov     edx, [esp+44h+arg_4]
push    ebp
mov     eax, [edi]
mov     esi, [edi+4]
mov     ecx, [edx+4]
mov     [esp+48h+ysrc], eax
mov     eax, [edx]
mov     [esp+48h+ydest], eax
mov     eax, [edi+8]
sub     eax, [esp+48h+ysrc]
mov     ebp, [esp+48h+ysrc]
push    eax
mov     eax, [edi+0ch]
sub     eax, esi
push    eax
push    ebp
push    esi
mov     eax, [edx+8]
mov     esi, [esp+58h+hdcsrc]
sub     eax, [esp+58h+ydest]
push    esi
push    eax
mov     eax, [edx+0ch]
mov     edx, [esp+60h+ydest]
sub     eax, ecx
mov     ebp, ds:stretchblt
push    eax
push    edx
push    ecx
push    ebx
call    ebp
push    0ffffffffh
push    ebx
call    ds:restoredc
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn    1ch
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     ecx, [esi+4]
mov     ax, [ecx+22h]
cmp     [ecx+20h], ax
jnz     loc_45f32d
cmp     ax, 2000h
jnb     loc_45f32d
mov     ecx, [ecx+18h]
push    42h
movzx   eax, ax
test    ecx, ecx
lea     eax, ds:100h[eax*8]
push    eax
jnz     short loc_45f285
call    sub_45b8f0
add     esp, 8
mov     edi, eax
jmp     short loc_45f298
push    ecx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jz      short loc_45f298
mov     eax, [esi+4]
mov     edi, [eax+18h]
test    edi, edi
jz      loc_45f32d
mov     eax, [esi+4]
mov     [eax+18h], edi
mov     eax, [esi+4]
mov     cx, [eax+22h]
inc     cx
mov     [eax+1ch], cx
mov     eax, [esi+4]
mov     cx, [eax+22h]
xor     edi, edi
add     cx, 20h
mov     [eax+1eh], cx
mov     eax, [esi+4]
add     word ptr [eax+22h], 20h
mov     ecx, [esi+4]
xor     eax, eax
mov     di, [ecx+1ch]
test    edi, edi
jle     short loc_45f2fd
xor     edx, edx
mov     dx, [ecx+22h]
cmp     edx, edi
jl      short loc_45f2fd
mov     eax, [ecx+18h]
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_45f32d
lea     ecx, ds:0[edi*8]
sub     ecx, 8
add     eax, ecx
test    eax, eax
jz      short loc_45f32d
mov     ecx, [esi+4]
mov     dx, [ecx+1ch]
cmp     [ecx+1eh], dx
jbe     short loc_45f320
inc     dx
add     eax, 8
mov     [eax-4], dx
mov     ecx, [esi+4]
cmp     [ecx+1eh], dx
ja      short loc_45f30e
mov     eax, [esi+4]
mov     ecx, [eax+18h]
push    ecx
call    ds:globalunlock
xor     edi, edi
mov     ecx, [esi+4]
mov     ax, [ecx+22h]
cmp     [ecx+20h], ax
jnb     loc_45f3c3
xor     ebp, ebp
xor     ebx, ebx
mov     bp, [ecx+1ch]
test    ebp, ebp
jle     short loc_45f36f
movzx   eax, ax
cmp     eax, ebp
jl      short loc_45f36f
mov     eax, [ecx+18h]
push    eax
call    ds:globallock
cmp     eax, edi
mov     ebx, eax
jz      short loc_45f36f
lea     eax, ds:0[ebp*8]
sub     eax, 8
add     ebx, eax
test    ebx, ebx
jz      short loc_45f3c3
mov     eax, [esp+10h+arg_8]
mov     ebp, [esp+10h+dwbytes]
push    eax
push    ebp
call    sub_45b8f0
add     esp, 8
test    eax, eax
jz      short loc_45f3b6
mov     dx, [ebx+4]
mov     ecx, [esi+4]
mov     di, [ecx+1ch]
add     ecx, 1ch
mov     [ecx], dx
mov     ecx, [esi+4]
cmp     word ptr [ecx+1ch], 0
jnz     short loc_45f3aa
mov     word ptr [ecx+1eh], 0
mov     [ebx], eax
mov     [ebx+4], ebp
mov     eax, [esi+4]
inc     word ptr [eax+20h]
mov     eax, [esi+4]
mov     ecx, [eax+18h]
push    ecx
call    ds:globalunlock
mov     ax, di
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
retn    4
mov     eax, [esp+dwbytes]
push    2
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_45f240
movzx   eax, ax
add     esp, 0ch
retn    8
mov     eax, [esp+dwbytes]
push    42h
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_45f240
movzx   eax, ax
add     esp, 0ch
retn    8
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     edi, [esp+0ch+arg_4]
mov     esi, [esp+0ch+arg_0]
test    edi, edi
jle     short loc_45f46a
mov     eax, [esi+4]
xor     ecx, ecx
mov     cx, [eax+22h]
cmp     ecx, edi
jl      short loc_45f46a
mov     eax, [eax+18h]
push    eax
call    ds:globallock
mov     ebx, eax
test    ebx, ebx
jz      short loc_45f4cc
lea     eax, ds:0[edi*8]
sub     eax, 8
add     ebx, eax
test    ebx, ebx
jz      short loc_45f4cc
mov     eax, [ebx]
test    eax, eax
jz      short loc_45f4bf
push    eax
call    sub_45ba00
add     esp, 4
mov     dword ptr [ebx], 0
mov     word ptr [ebx+4], 0
mov     eax, [esi+4]
add     eax, 1ch
cmp     word ptr [eax], 0
jnz     short loc_45f498
mov     [eax], di
mov     eax, [esi+4]
mov     ax, [eax+1eh]
test    ax, ax
jz      short loc_45f4b1
movzx   eax, ax
movzx   ecx, di
sub     eax, ecx
mov     [ebx+eax*8+4], di
mov     eax, [esi+4]
mov     [eax+1eh], di
mov     eax, [esi+4]
dec     word ptr [eax+20h]
mov     eax, [esi+4]
mov     ecx, [eax+18h]
push    ecx
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
retn    8
push    ebx
xor     eax, eax
mov     ebx, [esp+4+arg_4]
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+0ch+arg_0]
cmp     ebx, eax
jle     short loc_45f51a
mov     ecx, [edi+4]
xor     edx, edx
mov     dx, [ecx+22h]
cmp     edx, ebx
jl      short loc_45f51a
mov     eax, [ecx+18h]
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_45f533
lea     ecx, ds:0[ebx*8]
sub     ecx, 8
add     eax, ecx
test    eax, eax
jz      short loc_45f533
cmp     dword ptr [eax], 0
jz      short loc_45f526
mov     esi, [eax+4]
mov     eax, [edi+4]
mov     ecx, [eax+18h]
push    ecx
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    8
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+0ch+arg_4]
push    ebp
xor     ebp, ebp
mov     ebx, [esp+10h+arg_0]
cmp     edi, ebp
jle     short loc_45f57f
mov     eax, [ebx+4]
xor     ecx, ecx
mov     cx, [eax+22h]
cmp     ecx, edi
jl      short loc_45f57f
mov     eax, [eax+18h]
mov     ebp, ds:globallock
push    eax
call    ebp
cmp     eax, esi
mov     ebp, eax
jz      short loc_45f57f
lea     eax, ds:0[edi*8]
sub     eax, 8
add     ebp, eax
test    ebp, ebp
jz      short loc_45f5b6
mov     eax, [ebp+0]
test    eax, eax
jz      short loc_45f5a9
mov     edi, [esp+10h+dwbytes]
push    2
push    edi
push    eax
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jz      short loc_45f5a9
mov     esi, 1
mov     [ebp+4], edi
mov     [ebp+0], eax
mov     eax, [ebx+4]
mov     ecx, [eax+18h]
push    ecx
call    ds:globalunlock
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    0ch
push    ebx
xor     eax, eax
mov     ebx, [esp+4+arg_4]
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+0ch+arg_0]
cmp     ebx, eax
jle     short loc_45f5fa
mov     ecx, [edi+4]
xor     edx, edx
mov     dx, [ecx+22h]
cmp     edx, ebx
jl      short loc_45f5fa
mov     eax, [ecx+18h]
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_45f61a
lea     ecx, ds:0[ebx*8]
sub     ecx, 8
add     eax, ecx
test    eax, eax
jz      short loc_45f61a
mov     eax, [eax]
test    eax, eax
jz      short loc_45f60d
push    eax
call    ds:globallock
mov     esi, eax
mov     eax, [edi+4]
mov     ecx, [eax+18h]
push    ecx
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    8
push    esi
xor     eax, eax
mov     esi, [esp+4+arg_0]
push    edi
mov     edi, [esp+8+arg_4]
cmp     edi, eax
jle     short loc_45f667
mov     ecx, [esi+4]
xor     edx, edx
mov     dx, [ecx+22h]
cmp     edx, edi
jl      short loc_45f667
mov     eax, [ecx+18h]
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_45f68b
lea     ecx, ds:0[edi*8]
sub     ecx, 8
add     eax, ecx
test    eax, eax
jz      short loc_45f68b
mov     eax, [eax]
test    eax, eax
jz      short loc_45f67c
push    eax
mov     edi, ds:globalunlock
call    edi
jmp     short loc_45f682
mov     edi, ds:globalunlock
mov     eax, [esi+4]
mov     ecx, [eax+18h]
push    ecx
call    edi
pop     edi
pop     esi
retn    8
sub     esp, 20h
mov     [esp+20h+buffer.dwlength], 20h
lea     eax, [esp+20h+buffer]
push    eax
call    ds:globalmemorystatus
mov     eax, [esp+20h+buffer.dwavailvirtual]
add     esp, 20h
retn    4
xor     eax, eax
retn    4
sub     esp, 4
push    ebx
push    esi
push    edi
mov     esi, 80040014h
mov     ebx, [esp+10h+cchbuffermax]
test    ebx, ebx
jle     loc_45f7c6
mov     edi, [esp+10h+lpbuffer]
test    edi, edi
jz      loc_45f7c6
mov     eax, [esp+10h+arg_4]
cmp     eax, 6
ja      short def_45f6fc
jmp     ds:jpt_45f6fc[eax*4]
mov     esi, 80040013h
pop     edi
mov     eax, esi
pop     esi
pop     ebx
add     esp, 4
retn    10h
push    ebx
push    edi
push    eax
call    sub_45f7f0
add     esp, 0ch
mov     esi, eax
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
push    7
push    1ed0h
push    ebx
push    edi
call    sub_47fe70
add     esp, 10h
test    eax, eax
jz      short loc_45f7bb
xor     esi, esi
pop     edi
mov     eax, esi
pop     esi
pop     ebx
add     esp, 4
retn    10h
lea     eax, [esp+10h+var_4]
push    eax
call    sub_44bf00
add     esp, 4
test    eax, eax
jnz     short loc_45f7bb
mov     eax, [esp+10h+var_4]
push    ebx
push    edi
push    eax
call    sub_44f640
add     esp, 0ch
test    eax, eax
jnz     short loc_45f773
xor     esi, esi
mov     eax, [esp+10h+var_4]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
push    0
push    0
push    ebx
push    edi
call    sub_47fe70
add     esp, 10h
test    eax, eax
jz      short loc_45f7bb
xor     esi, esi
pop     edi
mov     eax, esi
pop     esi
pop     ebx
add     esp, 4
retn    10h
push    ebx
push    edi
call    sub_489160
add     esp, 8
cmp     byte ptr [edi], 0
jz      short loc_45f7bb
xor     esi, esi
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
mov     eax, 80040001h
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
sub     esp, 210h
lea     eax, [esp+210h+var_210]
push    esi
push    edi
xor     esi, esi
lea     ecx, [esp+218h+var_200]
push    eax
lea     edx, [esp+21ch+lpstring]
push    ecx
push    edx
call    sub_40cfb0
add     esp, 0ch
test    eax, eax
jnz     short loc_45f82d
mov     eax, [esp+218h+lpstring1]
pop     edi
mov     byte ptr [eax], 0
mov     eax, esi
pop     esi
add     esp, 210h
retn
mov     eax, [esp+218h+arg_0]
test    eax, eax
jz      short loc_45f873
cmp     eax, 2
jz      short loc_45f879
cmp     eax, 3
jz      short loc_45f882
mov     edi, [esp+218h+lpstring]
push    edi
call    ds:lstrlena
cmp     eax, [esp+218h+arg_8]
jge     short loc_45f888
mov     eax, [esp+218h+lpstring1]
push    edi
push    eax
call    ds:lstrcpya
mov     eax, esi
pop     edi
pop     esi
add     esp, 210h
retn
lea     edi, [esp+218h+var_210]
jmp     short loc_45f849
lea     edi, [esp+218h+lpstring]
jmp     short loc_45f849
lea     edi, [esp+218h+var_200]
jmp     short loc_45f849
mov     esi, 80040001h
pop     edi
mov     eax, esi
pop     esi
add     esp, 210h
retn
xor     eax, eax
retn    4
sub     esp, 1ch
lea     eax, [esp+1ch+var_14]
push    ebx
push    esi
xor     ebx, ebx
mov     esi, [esp+24h+arg_4]
push    edi
lea     ecx, [esp+28h+var_18]
mov     [eax], ebx
push    ecx
mov     [esi], ebx
push    offset dword_4ab4e8
mov     [eax+4], ebx
push    offset dword_4ab5d8
mov     [eax+8], ebx
mov     [eax+0ch], ebx
mov     [eax+10h], ebx
call    sub_45d290
push    eax
call    sub_496b00
mov     edi, eax
test    edi, edi
jnz     short loc_45f971
lea     eax, [esp+28h+var_1c]
mov     ecx, [esp+28h+var_18]
push    eax
push    offset dword_4ab5e8
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
mov     edi, eax
test    edi, edi
jnz     short loc_45f971
mov     dword ptr [esp+28h+var_14], 1
cmp     ds:frequency, ebx
jz      short loc_45f93d
mov     eax, ds:frequency
push    eax
call    sub_474d50
mov     [esp+2ch+var_10], eax
add     esp, 4
jmp     short loc_45f945
mov     [esp+28h+var_10], 0
mov     eax, ds:frequency
push    1
lea     ecx, [esp+2ch+var_14]
push    1
mov     edx, [esp+30h+var_1c]
push    ecx
mov     [esp+34h+var_c], eax
push    edx
mov     eax, [edx]
call    dword ptr [eax+0ch]
mov     ecx, [esp+28h+var_1c]
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     ecx, [esp+28h+var_18]
mov     [esi], ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn    8
xor     eax, eax
retn    4
xor     eax, eax
retn    4
xor     eax, eax
retn    4
push    esi
mov     esi, [esp+4+arg_0]
cmp     byte ptr [esi+18h], 0
jz      short loc_45f9f6
mov     eax, [esi+32h]
test    eax, eax
jz      short loc_45f9f2
push    eax
call    sub_45ba00
mov     dword ptr [esi+32h], 0
add     esp, 4
mov     byte ptr [esi+18h], 0
mov     byte ptr [esi+19h], 0
pop     esi
retn    4
mov     eax, [esp+4]
push    esi
push    edi
mov     edi, [eax+4]
cmp     byte ptr [edi+18h], 0
jz      short loc_45fa19
mov     eax, 80040051h
pop     edi
pop     esi
retn    14h
mov     esi, [esp+10h]
test    esi, esi
jnz     short loc_45fa2b
mov     eax, 80040052h
pop     edi
pop     esi
retn    14h
mov     eax, [esp+18h]
push    42h
push    esi
test    eax, eax
jnz     short loc_45fa40
call    sub_45b8f0
add     esp, 8
jmp     short loc_45fa49
push    eax
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jnz     short loc_45fa57
mov     eax, 80040002h
pop     edi
pop     esi
retn    14h
xor     ecx, ecx
mov     edx, [esp+14h]
mov     byte ptr [edi+18h], 1
mov     [edi+19h], cl
mov     [edi+1ah], edx
mov     [edi+1eh], ecx
mov     [edi+22h], ecx
mov     [edi+26h], ecx
mov     ecx, [esp+1ch]
mov     [edi+2ah], ecx
mov     [edi+2eh], esi
mov     [edi+32h], eax
xor     eax, eax
pop     edi
pop     esi
retn    14h
mov     eax, [esp+arg_0]
mov     edx, [eax+4]
cmp     byte ptr [edx+18h], 0
jnz     short loc_45fab9
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_8]
mov     dword ptr [eax], 0
mov     eax, 80040050h
mov     dword ptr [ecx], 0
retn    0ch
mov     ecx, [edx+32h]
mov     eax, [esp+arg_4]
mov     [eax], ecx
mov     ecx, [edx+2ah]
mov     eax, [esp+arg_8]
mov     [eax], ecx
xor     eax, eax
mov     [edx+18h], al
mov     [edx+19h], al
mov     [edx+1ah], eax
mov     [edx+1eh], eax
mov     [edx+22h], eax
mov     [edx+26h], eax
mov     [edx+2ah], eax
mov     [edx+2eh], eax
mov     [edx+32h], eax
retn    0ch
mov     eax, [esp+arg_0]
mov     ecx, [eax+4]
cmp     byte ptr [ecx+19h], 0
jz      short loc_45fb05
mov     eax, 80040051h
retn    0ch
cmp     byte ptr [ecx+18h], 0
jnz     short loc_45fb13
mov     eax, 80040014h
retn    0ch
mov     eax, [esp+arg_4]
test    eax, eax
jz      short loc_45fb2d
cmp     eax, 1
jz      short loc_45fb3b
cmp     eax, 2
jz      short loc_45fb49
mov     eax, 80040052h
retn    0ch
cmp     dword ptr [ecx+1ah], 2
jnz     short loc_45fb57
mov     eax, 80040055h
retn    0ch
cmp     dword ptr [ecx+1ah], 1
jz      short loc_45fb57
mov     eax, 80040055h
retn    0ch
cmp     dword ptr [ecx+1ah], 0
jnz     short loc_45fb57
mov     eax, 80040055h
retn    0ch
mov     [ecx+1eh], eax
mov     eax, [esp+arg_8]
test    eax, eax
jl      short loc_45fb67
cmp     eax, 2
jle     short loc_45fb6f
mov     eax, 80040052h
retn    0ch
mov     [ecx+22h], eax
xor     eax, eax
mov     dword ptr [ecx+26h], 0
mov     byte ptr [ecx+19h], 1
retn    0ch
mov     eax, [esp+arg_0]
mov     eax, [eax+4]
cmp     byte ptr [eax+19h], 0
jnz     short loc_45fba5
mov     eax, 80040050h
retn    4
mov     byte ptr [eax+19h], 0
xor     eax, eax
retn    4
mov     ecx, [esp+size]
mov     edx, [esp+arg_4]
sub     esp, 4
lea     eax, [esp+4+var_4]
push    esi
mov     esi, [esp+8+arg_0]
push    eax
push    ecx
push    edx
push    esi
call    sub_45fbf0
mov     ecx, [esi+4]
mov     edx, [esp+8+var_4]
add     [ecx+26h], edx
mov     ecx, [esp+8+arg_c]
test    ecx, ecx
jz      short loc_45fbe5
mov     edx, [esp+8+var_4]
mov     [ecx], edx
pop     esi
add     esp, 4
retn    10h
mov     eax, [esp+arg_0]
push    ebx
push    esi
xor     ebx, ebx
mov     esi, [esp+8+arg_c]
push    edi
push    ebp
mov     edi, [eax+4]
cmp     esi, ebx
jz      short loc_45fc07
mov     [esi], ebx
cmp     byte ptr [edi+19h], 0
jnz     short loc_45fc19
mov     eax, 80040050h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
cmp     dword ptr [edi+1eh], 2
jnz     short loc_45fc2b
mov     eax, 80040055h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
mov     eax, [edi+26h]
mov     ecx, [edi+2ah]
cmp     eax, ecx
jb      short loc_45fc39
xor     ecx, ecx
jmp     short loc_45fc3b
sub     ecx, eax
mov     ebp, [esp+10h+size]
cmp     ecx, ebp
jnb     short loc_45fc4a
mov     ebp, ecx
mov     ebx, 80040054h
mov     eax, [edi+32h]
push    eax
call    ds:globallock
push    ebp
mov     ecx, [edi+26h]
add     ecx, eax
mov     eax, [esp+14h+arg_4]
push    ecx
push    eax
call    _memcpy
add     esp, 0ch
mov     ecx, [edi+32h]
push    ecx
call    ds:globalunlock
test    esi, esi
jz      short loc_45fc78
mov     [esi], ebp
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    ebp
mov     ebx, [eax+4]
xor     ebp, ebp
mov     edi, [esp+10h+arg_c]
cmp     edi, ebp
jz      short loc_45fca7
mov     [edi], ebp
cmp     byte ptr [ebx+19h], 0
jnz     short loc_45fcb9
mov     eax, 80040050h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
cmp     dword ptr [ebx+1eh], 0
jnz     short loc_45fccb
mov     eax, 80040055h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
mov     ecx, [ebx+26h]
mov     esi, [esp+10h+size]
lea     edx, [ecx+esi]
cmp     edx, ecx
jnb     short loc_45fcde
mov     edx, 0ffffffffh
cmp     [ebx+2ah], edx
jnb     short loc_45fcf8
mov     eax, [ebx+2eh]
cmp     edx, eax
jbe     short loc_45fcf5
mov     esi, eax
mov     edx, eax
sub     esi, ecx
mov     ebp, 80040058h
mov     [ebx+2ah], edx
mov     eax, [ebx+32h]
push    eax
call    ds:globallock
mov     ecx, [esp+10h+src]
push    esi
push    ecx
mov     ecx, [ebx+26h]
add     ecx, eax
push    ecx
call    _memcpy
add     esp, 0ch
mov     ecx, [ebx+32h]
push    ecx
call    ds:globalunlock
add     [ebx+26h], esi
test    edi, edi
jz      short loc_45fd29
mov     [edi], esi
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
mov     eax, [esp+arg_0]
mov     eax, [eax+4]
cmp     byte ptr [eax+19h], 0
jnz     short loc_45fd55
mov     eax, 80040050h
retn    8
mov     ecx, [eax+26h]
mov     eax, [esp+arg_4]
mov     [eax], ecx
xor     eax, eax
retn    8
mov     eax, [esp+arg_0]
mov     ecx, [eax+4]
cmp     byte ptr [ecx+19h], 0
jnz     short loc_45fd85
mov     eax, 80040050h
retn    8
cmp     dword ptr [ecx+22h], 0
jnz     short loc_45fd93
mov     eax, 80040056h
retn    8
mov     eax, [esp+arg_4]
mov     [ecx+26h], eax
xor     eax, eax
retn    8
mov     eax, [esp+4]
mov     eax, [eax+4]
cmp     byte ptr [eax+19h], 0
jnz     short loc_45fdb5
mov     eax, 80040050h
retn    8
mov     ecx, [eax+2ah]
mov     eax, [esp+8]
mov     [eax], ecx
xor     eax, eax
retn    8
mov     eax, [esp+arg_0]
mov     ecx, [eax+4]
cmp     byte ptr [ecx+19h], 1
sbb     eax, eax
and     eax, 80040050h
retn    4
mov     eax, [esp+arg_0]
mov     ecx, [eax+4]
cmp     byte ptr [ecx+19h], 0
jnz     short loc_45fe05
mov     eax, 80040050h
retn    0ch
mov     edx, [ecx+1eh]
mov     eax, [esp+arg_4]
mov     [eax], edx
mov     edx, [esp+arg_8]
mov     ecx, [ecx+22h]
xor     eax, eax
mov     [edx], ecx
retn    0ch
xor     eax, eax
retn    4
mov     eax, 800407d0h
retn    8
mov     eax, 800407d0h
retn    0ch
mov     eax, 800407d0h
retn    10h
mov     eax, 800407d0h
retn    14h
mov     eax, 800407d0h
retn    18h
mov     eax, [esp+arg_4]
push    esi
xor     esi, esi
push    eax
mov     ecx, ds:dword_4a8b20
call    sub_47ff00
mov     ecx, [esp+4+arg_8]
cmp     eax, esi
mov     [ecx], eax
jnz     short loc_45feb2
mov     esi, 80040002h
mov     eax, esi
pop     esi
retn    0ch
mov     eax, [esp+arg_c]
push    esi
xor     esi, esi
push    eax
mov     ecx, [esp+8+arg_8]
mov     edx, [esp+8+arg_4]
push    ecx
push    edx
mov     ecx, ds:dword_4a8b20
call    sub_47ff60
test    eax, eax
jnz     short loc_45fee6
mov     esi, 80040001h
mov     eax, esi
pop     esi
retn    10h
mov     eax, [esp+8]
mov     edx, [esp+0ch]
mov     ecx, [eax]
xor     eax, eax
mov     [edx], ecx
retn    0ch
mov     eax, 800407d0h
retn    8
push    esi
mov     esi, [esp+4+arg_4]
mov     eax, [esi]
sub     eax, 2
cmp     eax, 4
ja      short def_45ff2f
jmp     ds:jpt_45ff2f[eax*4]
mov     eax, [esi+4]
test    eax, eax
jz      short def_45ff2f
push    eax
call    ??3@yaxpax@z
jmp     short loc_45ff52
mov     eax, [esi+4]
test    eax, eax
jz      short def_45ff2f
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
pop     esi
retn    8
mov     eax, [esp+8]
push    esi
xor     esi, esi
mov     ecx, [eax]
cmp     ecx, 1
jz      short loc_45ffa4
cmp     ecx, 2
jz      short loc_45ffb3
mov     ecx, [esp+10h]
mov     [ecx], esi
mov     esi, 800407d9h
mov     eax, esi
pop     esi
retn    0ch
mov     eax, [eax+4]
mov     ecx, [esp+10h]
mov     [ecx], eax
mov     eax, esi
pop     esi
retn    0ch
mov     eax, [eax+4]
fld     qword ptr [eax]
call    __ftol
mov     ecx, [esp+10h]
mov     [ecx], eax
mov     eax, esi
pop     esi
retn    0ch
xor     eax, eax
mov     ecx, [esp+arg_4]
cmp     dword ptr [ecx], 4
jz      short loc_45ffe9
mov     ecx, [esp+arg_8]
mov     [ecx], eax
mov     eax, 80040001h
retn    0ch
mov     edx, [ecx+4]
mov     ecx, [esp+arg_8]
mov     [ecx], edx
retn    0ch
mov     edx, [esp+arg_4]
sub     esp, 4
xor     eax, eax
push    esi
mov     ecx, [edx]
cmp     ecx, 1
jz      short loc_46002b
cmp     ecx, 2
jz      short loc_46003b
mov     esi, [esp+8+arg_8]
mov     [esi], eax
mov     [esi+4], eax
mov     eax, 80040001h
pop     esi
add     esp, 4
retn    0ch
fild    dword ptr [edx+4]
mov     esi, [esp+8+arg_8]
fstp    qword ptr [esi]
pop     esi
add     esp, 4
retn    0ch
mov     ecx, [edx+4]
mov     esi, [esp+8+arg_8]
mov     edx, [ecx+4]
mov     [esi+4], edx
mov     ecx, [ecx]
mov     [esi], ecx
pop     esi
add     esp, 4
retn    0ch
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+8+arg_4]
cmp     dword ptr [edi], 3
jz      short loc_46007f
mov     ecx, [esp+8+arg_8]
pop     edi
mov     [ecx], esi
mov     esi, 80040001h
mov     eax, esi
pop     esi
retn    0ch
mov     eax, [edi+4]
push    eax
call    ds:globallock
push    eax
call    ds:lstrlena
mov     ecx, [esp+8+arg_8]
mov     [ecx], eax
mov     edx, [edi+4]
push    edx
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
retn    0ch
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+8+arg_4]
cmp     dword ptr [edi], 3
jz      short loc_4600c9
mov     esi, 80040001h
pop     edi
mov     eax, esi
pop     esi
retn    10h
mov     eax, [edi+4]
push    eax
call    ds:globallock
mov     ecx, [esp+8+arg_c]
mov     edx, [esp+8+arg_8]
push    ecx
push    eax
push    edx
call    sub_47f9f0
add     esp, 0ch
mov     ecx, [edi+4]
push    ecx
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
retn    10h
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
push    eax
push    ecx
call    sub_4604f0
add     esp, 8
retn    0ch
mov     eax, [esp+arg_4]
push    eax
call    sub_460520
add     esp, 4
retn    8
push    esi
xor     eax, eax
mov     ecx, [esp+4+arg_4]
cmp     dword ptr [ecx], 5
jz      short loc_46014e
mov     ecx, [esp+4+arg_8]
pop     esi
mov     [ecx], eax
mov     [ecx+4], eax
mov     eax, 80040001h
retn    0ch
mov     ecx, [ecx+4]
mov     esi, [ecx]
mov     edx, [ecx+4]
mov     ecx, [esp+4+arg_8]
mov     [ecx], esi
pop     esi
mov     [ecx+4], edx
retn    0ch
push    esi
xor     eax, eax
mov     ecx, [esp+4+arg_4]
cmp     dword ptr [ecx], 6
jz      short loc_460194
mov     esi, [esp+4+arg_8]
mov     [esi+0ch], eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi], eax
mov     eax, 80040001h
pop     esi
retn    0ch
mov     edx, [ecx+4]
mov     esi, [esp+4+arg_8]
mov     ecx, [edx]
mov     [esi], ecx
mov     ecx, [edx+4]
mov     [esi+4], ecx
mov     ecx, [edx+8]
mov     [esi+8], ecx
mov     edx, [edx+0ch]
mov     [esi+0ch], edx
pop     esi
retn    0ch
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
push    eax
push    ecx
call    sub_460550
add     esp, 8
retn    0ch
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
push    eax
push    ecx
call    sub_460570
add     esp, 8
retn    0ch
mov     eax, [esp+arg_c]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    eax
push    ecx
push    edx
call    sub_460590
add     esp, 0ch
retn    10h
mov     eax, [esp+arg_8]
mov     ecx, [esp+lpstring]
push    eax
push    ecx
call    sub_4605d0
add     esp, 8
retn    0ch
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
push    eax
push    ecx
call    sub_460610
add     esp, 8
retn    0ch
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
push    eax
push    ecx
call    sub_460630
add     esp, 8
retn    0ch
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
push    eax
push    ecx
call    sub_460670
add     esp, 8
retn    0ch
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     eax, [esi]
cmp     eax, 1
jz      short loc_4602c3
cmp     eax, 2
jz      short loc_4602c3
cmp     eax, 3
jz      short loc_4602c3
mov     eax, 80040001h
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     ebx, [esp+0ch+arg_8]
push    ebx
push    offset dword_4ab4e8
push    offset dword_4ab5d8
call    sub_45d290
push    eax
call    sub_496b00
mov     edi, eax
test    edi, edi
jnz     short loc_4602fa
mov     eax, [ebx]
push    esi
push    eax
mov     esi, [eax]
call    dword ptr [esi+18h]
mov     edi, eax
test    edi, edi
jz      short loc_4602fa
mov     eax, [ebx]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     eax, 800407d0h
retn    8
mov     eax, 800407d0h
retn    8
mov     eax, 800407d0h
retn    10h
mov     eax, 800407d0h
retn    8
xor     eax, eax
retn    0ch
mov     eax, 800407d0h
retn    14h
mov     eax, 800407d0h
retn    8
mov     eax, 800407d0h
retn    10h
mov     eax, 800407d0h
retn    8
mov     eax, 800407d0h
retn    8
mov     eax, 800407d0h
retn    8
mov     eax, [esp+lpdialogfunc]
push    0
push    eax
mov     ecx, ds:hwndparent
mov     edx, [esp+8+lptemplatename]
push    ecx
mov     eax, [esp+0ch+hinstance]
push    edx
push    eax
call    ds:dialogboxparama
retn    10h
mov     ecx, ds:hwndparent
mov     eax, [esp+arg_8]
mov     [eax], ecx
xor     eax, eax
retn    0ch
push    ebx
call    sub_40ae50
test    eax, eax
jz      short loc_46044a
xor     edx, edx
mov     ecx, [esp+4+arg_4]
xor     ebx, ebx
mov     dl, [ecx+1]
shl     edx, 8
mov     bl, [ecx+2]
shl     ebx, 10h
or      edx, ebx
xor     ebx, ebx
mov     bl, [ecx]
or      edx, ebx
push    edx
push    eax
call    ds:getnearestpaletteindex
mov     ecx, [esp+4+arg_8]
pop     ebx
mov     [ecx], al
xor     eax, eax
retn    0ch
mov     eax, 80040014h
pop     ebx
retn    0ch
call    sub_40ae50
test    eax, eax
jz      short loc_46048d
xor     ecx, ecx
mov     cl, [esp+arg_4]
push    ecx
push    eax
call    sub_469b60
mov     ecx, [esp+8+arg_8]
add     esp, 8
mov     [ecx], al
mov     [ecx+1], ah
shr     eax, 10h
mov     [ecx+2], al
xor     eax, eax
retn    0ch
mov     eax, 80040014h
retn    0ch
mov     eax, [esp+dwinitparam]
mov     ecx, [esp+lpdialogfunc]
push    eax
mov     edx, ds:hwndparent
mov     eax, [esp+4+lptemplatename]
push    ecx
mov     ecx, [esp+8+hinstance]
push    edx
push    eax
push    ecx
call    ds:dialogboxparama
retn    14h
xor     eax, eax
retn    8
xor     eax, eax
retn    8
mov     eax, [esp+arg_0]
push    esi
xor     esi, esi
cmp     dword ptr [eax], 3
jz      short loc_460505
mov     esi, 800407dch
mov     eax, esi
pop     esi
retn
mov     eax, [eax+4]
push    eax
call    ds:globallock
mov     ecx, [esp+4+arg_4]
mov     [ecx], eax
mov     eax, esi
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
xor     esi, esi
cmp     dword ptr [eax], 3
jz      short loc_460535
mov     esi, 800407dch
mov     eax, esi
pop     esi
retn
mov     eax, [eax+4]
push    eax
call    ds:globalunlock
mov     eax, esi
pop     esi
retn
mov     ecx, [esp+arg_4]
mov     eax, [esp+arg_0]
mov     dword ptr [ecx], 1
mov     [ecx+4], eax
xor     eax, eax
retn
mov     ecx, [esp+arg_4]
mov     eax, [esp+arg_0]
mov     dword ptr [ecx], 4
mov     [ecx+4], eax
xor     eax, eax
retn
push    esi
push    8
xor     esi, esi
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jnz     short loc_4605aa
mov     esi, 80040002h
mov     eax, esi
pop     esi
retn
mov     ecx, [esp+4+arg_4]
mov     edx, [esp+4+arg_0]
mov     [eax+4], ecx
mov     ecx, [esp+4+arg_8]
mov     [eax], edx
mov     dword ptr [ecx], 2
mov     [ecx+4], eax
mov     eax, esi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+lpstring]
push    esi
call    ds:lstrlena
inc     eax
push    eax
push    esi
call    sub_45b910
add     esp, 8
test    eax, eax
jnz     short loc_4605f8
mov     edi, 80040002h
mov     eax, edi
pop     edi
pop     esi
retn
mov     ecx, [esp+8+arg_4]
mov     dword ptr [ecx], 3
mov     [ecx+4], eax
mov     eax, edi
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_4]
mov     eax, [esp+arg_0]
mov     dword ptr [ecx], 3
mov     [ecx+4], eax
xor     eax, eax
retn
push    esi
push    8
xor     esi, esi
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jnz     short loc_46064a
mov     esi, 80040002h
mov     eax, esi
pop     esi
retn
mov     ecx, [esp+4+arg_0]
mov     edx, [ecx]
mov     ecx, [ecx+4]
mov     [eax], edx
mov     [eax+4], ecx
mov     ecx, [esp+4+arg_4]
mov     dword ptr [ecx], 5
mov     [ecx+4], eax
mov     eax, esi
pop     esi
retn
push    esi
push    10h
xor     esi, esi
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jnz     short loc_46068a
mov     esi, 80040002h
mov     eax, esi
pop     esi
retn
mov     edx, [esp+4+arg_0]
mov     ecx, [edx]
mov     [eax], ecx
mov     ecx, [edx+4]
mov     [eax+4], ecx
mov     ecx, [edx+8]
mov     [eax+8], ecx
mov     ecx, [esp+4+arg_4]
mov     edx, [edx+0ch]
mov     [eax+0ch], edx
mov     dword ptr [ecx], 6
mov     [ecx+4], eax
mov     eax, esi
pop     esi
retn
sub     esp, 18h
push    ebx
push    esi
mov     ebx, [esp+20h+arg_4]
push    edi
cmp     ebx, 0fh
ja      def_4606db
xor     eax, eax
mov     al, ds:byte_460848[ebx]
jmp     ds:jpt_4606db[eax*4]
mov     esi, [esp+24h+arg_0]
lea     edx, [esp+24h+rc]
lea     ecx, [esi+0ch]
mov     eax, [ecx]
mov     [edx], eax
mov     ebx, [ecx+4]
mov     [edx+4], ebx
mov     edi, [ecx+8]
mov     [edx+8], edi
mov     edi, [esp+24h+arg_8]
mov     eax, [ecx+0ch]
mov     ecx, [edi+0ch]
push    ecx
mov     [edx+0ch], eax
mov     ax, [esi+1ch]
lea     edx, [esp+28h+rc]
push    edx
push    eax
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_46074f
movsx   eax, word ptr [esi]
add     eax, esi
lea     edx, [esp+24h+var_18]
sub     eax, 0a6h
push    0
push    esi
mov     ecx, [eax]
mov     ax, [eax+4]
mov     [edx], ecx
mov     [edx+4], ax
mov     ecx, [edi+0ch]
mov     edx, [esp+2ch+var_18]
push    edx
push    ecx
call    sub_460860
add     esp, 10h
xor     eax, eax
pop     edi
mov     word ptr [esi+1ch], 0
pop     esi
pop     ebx
add     esp, 18h
retn
mov     esi, [esp+24h+arg_0]
lea     edx, [esp+24h+rc]
lea     ecx, [esi+0ch]
mov     eax, [ecx]
mov     [edx], eax
mov     ebx, [ecx+4]
mov     [edx+4], ebx
mov     edi, [ecx+8]
mov     [edx+8], edi
mov     edi, [esp+24h+arg_8]
mov     eax, [ecx+0ch]
mov     ecx, [edi+4]
push    ecx
mov     [edx+0ch], eax
mov     eax, [edi]
lea     edx, [esp+28h+rc]
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jz      short loc_4607ab
mov     eax, 0ffffffffh
mov     [edi+98h], esi
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     esi, [esp+24h+arg_0]
lea     edx, [esp+24h+var_18]
movsx   ecx, word ptr [esi]
add     ecx, esi
push    esi
mov     eax, [ecx-0a6h]
sub     ecx, 0a6h
mov     [edx], eax
mov     cx, [ecx+4]
mov     [edx+4], cx
mov     edx, [esp+28h+var_18]
push    edx
call    sub_460b30
mov     dword ptr [esi+34h], 0
add     esp, 8
jmp     short loc_46081e
cmp     ds:frequency, 0
jnz     short loc_460803
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     esi, [esp+24h+arg_0]
push    esi
call    sub_4608b0
add     esp, 4
mov     eax, [esi+38h]
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     esi, [esp+24h+arg_0]
mov     edi, [esp+24h+arg_8]
push    edi
push    ebx
push    esi
call    sub_40fd60
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    esi
mov     esi, [esp+4+arg_8]
mov     eax, [esi+34h]
push    eax
call    ds:globallock
xor     ecx, ecx
mov     cx, [eax]
cmp     ecx, 1002h
jnz     short loc_46089d
mov     eax, [esp+4+arg_c]
mov     ecx, [esp+4+hdc]
mov     edx, [esp+4+arg_4]
push    eax
push    ecx
push    esi
push    edx
call    sub_4467e0
add     esp, 10h
push    esi
call    sub_446f80
add     esp, 4
mov     eax, [esi+34h]
push    eax
call    ds:globalunlock
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+3ch], 0
jnz     short loc_4608e1
lea     eax, [esi+38h]
cmp     dword ptr [eax], 0
jnz     short loc_4608e1
push    eax
push    esi
call    sub_4609d0
add     esp, 8
cmp     [esi+46h], eax
jz      short loc_4608e1
cmp     [esi+4ah], eax
jl      short loc_4608e1
push    eax
push    esi
call    sub_4608f0
add     esp, 8
pop     esi
retn
mov     eax, [esp+arg_4]
sub     esp, 18h
push    esi
mov     esi, [esp+1ch+arg_0]
mov     ecx, [esi+34h]
mov     [esi+46h], eax
push    ecx
call    ds:globallock
cmp     word ptr [eax], 1002h
jnz     loc_4609b3
xor     ecx, ecx
cmp     [esi+0cch], ecx
jnz     short loc_460938
mov     [esp+1ch+rc.left], ecx
mov     [esp+1ch+rc.top], ecx
movsx   ecx, word ptr [eax+10h]
mov     [esp+1ch+rc.right], ecx
movsx   eax, word ptr [eax+12h]
mov     [esp+1ch+rc.bottom], eax
jmp     short loc_460946
lea     eax, [esp+1ch+rc]
push    eax
push    esi
call    sub_4469b0
add     esp, 8
mov     eax, [esi+0ch]
lea     ecx, [esp+1ch+rc]
add     eax, [esp+1ch+rc.left]
push    ecx
mov     [esp+20h+var_18], eax
mov     eax, [esi+10h]
add     eax, [esp+20h+rc.top]
mov     edx, [esp+20h+var_18]
push    eax
push    edx
call    sub_473ca0
mov     eax, [esp+28h+rc.bottom]
mov     ecx, [esp+28h+rc.right]
mov     edx, [esp+28h+rc.top]
add     esp, 0ch
cmp     dword ptr [esi+0a2h], 3
push    eax
push    ecx
mov     eax, [esp+24h+rc.left]
push    edx
push    eax
jnz     short loc_46099b
mov     cx, [esi+1ch]
push    ecx
call    sub_474400
mov     [esi+1ch], ax
add     esp, 14h
jmp     short loc_4609ac
mov     cx, [esi+1eh]
push    ecx
call    sub_474400
mov     [esi+1eh], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
mov     eax, [esi+34h]
push    eax
call    ds:globalunlock
pop     esi
add     esp, 18h
retn
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+arg_0]
push    edi
push    ebp
mov     esi, [ebx+4eh]
mov     edi, [ebx+52h]
cmp     edi, esi
jnz     short loc_4609ef
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [ebx+34h]
mov     ebp, ds:globallock
push    eax
call    ebp
mov     bp, [eax]
mov     eax, [ebx+34h]
push    eax
call    ds:globalunlock
cmp     dword ptr [ebx+5eh], 0
jz      loc_460ace
cmp     bp, 1002h
jnz     short loc_460a63
test    byte ptr [ebx+92h], 8
jz      short loc_460a2d
mov     eax, [ebx+46h]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
lea     eax, [ebx+8ch]
push    eax
call    sub_409f30
add     esp, 4
mov     ebp, eax
mov     eax, [ebx+5ah]
sub     edx, edx
div     dword ptr [ebx+4ah]
mov     ecx, [ebx+0c0h]
add     ecx, eax
cmp     ecx, ebp
jbe     short loc_460a5d
mov     eax, [ebx+46h]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     [ebx+0c0h], ebp
mov     ecx, 1
cmp     edi, esi
jg      short loc_460a71
mov     ecx, 0ffffffffh
mov     eax, [ebx+46h]
add     eax, ecx
test    ecx, ecx
jle     short loc_460a85
mov     ecx, 1
cmp     eax, edi
jg      short loc_460a90
jmp     short loc_460a8e
mov     ecx, 1
cmp     eax, edi
jl      short loc_460a90
xor     ecx, ecx
test    ecx, ecx
jz      loc_460b24
mov     cx, [ebx+44h]
inc     cx
mov     ax, [ebx+42h]
mov     [ebx+44h], cx
cmp     ax, cx
jg      short loc_460ac4
test    ax, ax
jz      short loc_460ac4
mov     eax, [esp+14h+arg_4]
pop     ebp
mov     dword ptr [eax], 1
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     edx, [ebx+5ah]
test    edx, edx
jnz     short loc_460ae0
mov     eax, [ebx+46h]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ecx, edi
sub     ecx, esi
js      short loc_460ae9
inc     ecx
jmp     short loc_460aea
dec     ecx
mov     bp, [ebx+42h]
lea     eax, [esp+14h+var_2]
push    eax
add     ebx, 8ch
push    ebp
push    ecx
push    edx
push    ebx
call    sub_409fb0
add     esp, 14h
test    eax, eax
jz      short loc_460b1d
mov     eax, [esp+14h+arg_4]
pop     ebp
mov     dword ptr [eax], 1
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
movsx   eax, [esp+14h+var_2]
add     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_4]
mov     eax, [esi+34h]
test    eax, eax
jz      short loc_460b9c
push    eax
call    ds:globallock
xor     ecx, ecx
mov     cx, [eax]
cmp     ecx, 1002h
jz      short loc_460b5a
cmp     ecx, 2000h
jz      short loc_460b62
jmp     short loc_460b7f
push    esi
call    sub_4468c0
jmp     short loc_460b7c
cmp     dword ptr [esi+94h], 0
jz      short loc_460b7f
push    0
push    esi
call    sub_4950f0
add     esp, 8
push    esi
call    sub_495230
add     esp, 4
mov     eax, [esi+34h]
push    eax
call    ds:globalunlock
mov     ecx, [esi+34h]
push    ecx
call    sub_45ba00
mov     dword ptr [esi+34h], 0
add     esp, 4
pop     esi
retn
sub     esp, 104h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
mov     eax, ds:hwndparent
mov     ds:dword_4a8800, esi
mov     ds:hmenu, esi
mov     ds:dword_4a8808, esi
cmp     eax, esi
jz      loc_460cb6
push    esi
push    eax
call    ds:getsystemmenu
cmp     eax, esi
mov     edi, eax
jz      loc_460cb6
call    sub_460d60
mov     ds:dword_4a8800, eax
cmp     eax, esi
jz      loc_460cb6
call    ds:createpopupmenu
mov     ds:hmenu, eax
cmp     eax, esi
jz      loc_460cb6
lea     eax, [esp+114h+string]
push    esi
push    1a2ch
push    100h
push    eax
call    sub_47fe70
lea     eax, [esp+124h+string]
add     esp, 10h
push    eax
push    7532h
push    edi
call    sub_460cd0
add     esp, 0ch
push    edi
call    ds:getmenuitemcount
mov     [esp+114h+var_102], ax
cmp     ax, si
jle     short loc_460ca6
movsx   ebp, si
push    ebp
push    edi
call    ds:getmenuitemid
movzx   ebx, ax
cmp     ebx, 0ffffffffh
jz      short loc_460cb6
push    400h
push    ebp
push    edi
call    ds:getmenustate
mov     [esp+114h+var_104], ax
cmp     ax, 0ffffh
jz      short loc_460cb6
lea     eax, [esp+114h+string]
push    400h
push    100h
push    eax
push    ebp
push    edi
call    ds:getmenustringa
movsx   ecx, [esp+114h+var_104]
lea     eax, [esp+114h+string]
mov     edx, ds:hmenu
push    eax
push    ebx
push    ecx
push    edx
call    ds:appendmenua
test    eax, eax
jz      short loc_460cb6
inc     si
cmp     si, [esp+114h+var_102]
jl      short loc_460c3e
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 104h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 104h
retn
push    ebx
push    esi
mov     esi, [esp+8+hmenu]
push    edi
test    esi, esi
jz      short loc_460d11
mov     edi, [esp+0ch+arg_4]
push    0
and     edi, 0ffffh
push    edi
push    esi
call    ds:getmenustate
cmp     eax, 0ffffffffh
jnz     short loc_460d11
push    0
mov     ebx, ds:appendmenua
push    0
push    800h
push    esi
call    ebx
mov     eax, [esp+0ch+lpnewitem]
push    eax
push    edi
push    0
push    esi
call    ebx
pop     edi
pop     esi
pop     ebx
retn
cmp     ds:dword_4a8800, 0
jz      short loc_460d35
mov     eax, ds:dword_4a8800
push    eax
call    ds:deleteobject
cmp     ds:hmenu, 0
jz      short locret_460d53
cmp     ds:dword_4a8808, 0
jnz     short locret_460d53
mov     eax, ds:hmenu
push    eax
call    ds:destroymenu
retn
sub     esp, 24h
push    ebx
push    esi
push    edi
push    ebp
call    sub_4892f0
push    7ff2h
test    eax, eax
push    0
jz      loc_460ea2
call    ds:loadbitmapa
mov     esi, eax
test    esi, esi
jz      loc_460fbc
lea     eax, [esp+34h+pv]
push    eax
push    18h
push    esi
call    ds:getobjecta
test    eax, eax
jz      loc_460fbc
mov     eax, [esp+34h+var_14]
push    0
cdq
sub     eax, edx
sar     eax, 1
mov     word ptr [esp+38h+var_1c], ax
xor     eax, eax
mov     ax, word ptr [esp+38h+nbitcount]
push    eax
mov     eax, [esp+34h]
and     eax, 0ffffh
push    eax
push    10h
push    10h
call    ds:createbitmap
push    0
mov     ebp, ds:createcompatibledc
mov     [esp+38h+h], eax
call    ebp
mov     edi, eax
test    edi, edi
jz      loc_460fbc
push    0
call    ebp
mov     ebx, eax
test    ebx, ebx
jz      loc_460fbc
push    esi
push    edi
call    ds:selectobject
mov     ebp, eax
test    ebp, ebp
jz      loc_460fbc
mov     eax, [esp+34h+h]
push    eax
push    ebx
call    ds:selectobject
mov     [esp+34h+var_24], eax
test    eax, eax
jz      loc_460fbc
mov     ecx, [esp+34h+hsrc]
push    0cc0020h
movsx   eax, word ptr [esp+38h+var_1c]
push    ecx
push    eax
push    0
push    eax
push    edi
push    10h
push    10h
push    0
push    0
push    ebx
call    ds:stretchblt
test    eax, eax
jz      loc_460fbc
push    ebp
push    edi
call    ds:selectobject
test    eax, eax
jz      loc_460fbc
mov     eax, [esp+34h+var_24]
push    eax
push    ebx
call    ds:selectobject
test    eax, eax
jz      loc_460fbc
push    esi
call    ds:deleteobject
test    eax, eax
jz      loc_460fbc
push    edi
mov     esi, ds:deletedc
call    esi
test    eax, eax
jz      loc_460fbc
push    ebx
call    esi
test    eax, eax
jnz     loc_460fc6
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
call    ds:loadbitmapa
mov     edi, eax
test    edi, edi
jz      loc_460fbc
lea     eax, [esp+34h+pv]
push    eax
push    18h
push    edi
call    ds:getobjecta
test    eax, eax
jz      loc_460fbc
mov     eax, [esp+34h+var_14]
push    0
cdq
sub     eax, edx
sar     eax, 1
movsx   esi, ax
xor     eax, eax
mov     ecx, [esp+38h+hsrc]
mov     ax, word ptr [esp+38h+nbitcount]
lea     edx, [esi+1]
push    eax
mov     eax, [esp+34h]
and     eax, 0ffffh
push    eax
push    ecx
push    edx
call    ds:createbitmap
push    0
mov     ebp, ds:createcompatibledc
mov     [esp+38h+h], eax
call    ebp
mov     ebx, eax
test    ebx, ebx
jz      loc_460fbc
push    0
call    ebp
mov     ebp, eax
test    ebp, ebp
jz      loc_460fbc
push    edi
push    ebx
call    ds:selectobject
mov     [esp+34h+var_1c], eax
test    eax, eax
jz      loc_460fbc
mov     eax, [esp+34h+h]
push    eax
push    ebp
call    ds:selectobject
mov     [esp+34h+var_24], eax
test    eax, eax
jz      short loc_460fbc
mov     eax, [esp+34h+hsrc]
push    0cc0020h
push    0
push    esi
push    ebx
push    eax
push    esi
push    0
push    0
push    ebp
call    ds:bitblt
test    eax, eax
jz      short loc_460fbc
push    0
push    0
push    esi
push    ebp
call    ds:movetoex
mov     eax, [esp+34h+hsrc]
push    eax
push    esi
push    ebp
call    ds:lineto
mov     ecx, [esp+34h+var_1c]
push    ecx
push    ebx
call    ds:selectobject
test    eax, eax
jz      short loc_460fbc
mov     eax, [esp+34h+var_24]
push    eax
push    ebp
call    ds:selectobject
test    eax, eax
jz      short loc_460fbc
push    edi
call    ds:deleteobject
test    eax, eax
jz      short loc_460fbc
push    ebx
mov     esi, ds:deletedc
call    esi
test    eax, eax
jz      short loc_460fbc
push    ebp
call    esi
test    eax, eax
jnz     short loc_460fc6
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     eax, [esp+34h+h]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+hmenu]
push    edi
push    ebp
push    esi
call    ds:getmenuitemcount
mov     [esp+14h+var_2], ax
push    0fffffff0h
mov     eax, ds:hwndparent
push    eax
call    ds:getwindowlonga
mov     [esp+14h+var_4], 0
cmp     [esp+14h+var_2], 0
mov     edi, eax
jle     loc_46110a
movsx   ebx, [esp+14h+var_4]
mov     bp, 400h
push    ebx
push    esi
call    ds:getmenuitemid
mov     ecx, ds:hwndparent
cmp     eax, 0f010h
ja      short loc_461046
jz      short loc_461085
cmp     eax, 0f000h
jz      short loc_461060
jmp     loc_4610e9
cmp     eax, 0f020h
jz      short loc_461092
cmp     eax, 0f030h
jz      short loc_4610a7
cmp     eax, 0f120h
jz      short loc_4610ca
jmp     loc_4610e9
test    edi, 40000h
jz      short loc_4610e5
push    ecx
call    ds:iszoomed
test    eax, eax
mov     eax, ds:hwndparent
jnz     short loc_4610e5
push    eax
call    ds:isiconic
test    eax, eax
jz      short loc_4610e9
jmp     short loc_4610e5
push    ecx
call    ds:iszoomed
test    eax, eax
jz      short loc_4610e9
jmp     short loc_4610e5
test    edi, 20000h
jz      short loc_4610e5
push    ecx
call    ds:isiconic
test    eax, eax
jz      short loc_4610e9
jmp     short loc_4610e5
call    sub_4892f0
test    eax, eax
mov     eax, ds:hwndparent
jnz     short loc_4610e5
test    edi, 10000h
jz      short loc_4610e5
push    eax
call    ds:iszoomed
test    eax, eax
jz      short loc_4610e9
jmp     short loc_4610e5
push    ecx
call    ds:iszoomed
test    eax, eax
mov     eax, ds:hwndparent
jnz     short loc_4610e9
push    eax
call    ds:isiconic
test    eax, eax
jnz     short loc_4610e9
mov     bp, 401h
movsx   eax, bp
push    eax
push    ebx
push    esi
call    ds:enablemenuitem
inc     [esp+14h+var_4]
mov     ax, [esp+14h+var_4]
cmp     ax, [esp+14h+var_2]
jl      loc_46101a
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ax, [esp+arg_0]
and     ax, 8000h
cmp     ax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, ds:dword_4a8808
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    23h
push    esi
call    sub_4612e0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_461180
push    esi
push    edi
call    sub_408b00
add     esp, 8
test    eax, eax
jnz     short loc_461180
push    edi
call    sub_45ba00
add     esp, 4
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
test    esi, esi
jz      short loc_4611d3
push    esi
call    sub_408bc0
add     esp, 4
push    esi
call    sub_408b80
mov     di, ax
add     esp, 4
push    esi
call    sub_408ad0
add     esp, 4
test    di, di
push    esi
jle     short loc_4611cb
call    sub_408b60
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_408b60
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_408b80
add     esp, 4
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_408bf0
add     esp, 8
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_408c60
add     esp, 8
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_408d90
add     esp, 8
retn
push    ebx
mov     ebx, [esp+4+arg_0]
push    ebx
call    sub_461280
add     esp, 4
test    eax, eax
jz      short loc_46126d
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
pop     ebx
add     eax, [eax+ecx*4]
retn
mov     eax, offset dword_4ae1c8
pop     ebx
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
mov     ecx, eax
shr     ecx, 10h
mov     edx, dword_4ae1e0
movsx   esi, cx
shl     esi, 6
xor     ebx, ebx
add     edx, esi
mov     bl, ah
mov     eax, [edx+4]
mov     eax, [eax]
mov     eax, [eax+ebx*4]
test    eax, eax
jnz     short loc_4612d8
mov     eax, [edx+10h]
xor     edx, edx
mov     eax, [eax]
mov     dx, [eax+ebx*8+0beh]
movzx   eax, cx
shl     eax, 10h
or      edx, eax
push    edx
call    sub_470640
add     esp, 4
mov     ecx, dword_4ae1e0
mov     edx, [esi+ecx+4]
mov     esi, [edx]
mov     [esi+ebx*4], eax
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
xor     edi, edi
mov     edx, [eax+ecx+4]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     esi, [eax+ecx*4]
test    esi, esi
jnz     short loc_46131a
push    ebx
call    sub_461280
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_461344
push    esi
call    ds:globallock
mov     ax, [esp+0ch+arg_4]
mov     ecx, [esi]
push    eax
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
push    eax
call    sub_45c950
add     esp, 8
mov     edi, eax
push    esi
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    ebx
call    sub_461280
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_461396
push    esi
call    ds:globallock
mov     dx, [esp+8+arg_4]
mov     ecx, [esi]
mov     eax, [esp+8+arg_8]
push    eax
push    edx
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
push    eax
call    sub_45cbd0
add     esp, 0ch
test    eax, eax
jnz     short loc_461398
push    esi
call    ds:globalunlock
xor     eax, eax
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    ebp
xor     ebx, ebx
mov     ebp, eax
mov     bl, ah
shr     ebp, 10h
mov     ecx, dword_4ae1e0
movsx   edi, bp
shl     edi, 6
mov     edx, [edi+ecx+4]
mov     esi, [edx]
mov     ecx, [esi+ebx*4]
mov     esi, ecx
test    ecx, ecx
jz      short loc_4613d9
mov     edx, [ecx]
xor     ecx, ecx
mov     cl, al
mov     eax, [edx+ecx*4]
add     eax, edx
jmp     short loc_4613e2
push    eax
call    sub_461250
add     esp, 4
mov     ecx, [esp+10h+arg_c]
mov     edx, [esp+10h+arg_8]
push    ecx
push    edx
mov     cx, [esp+18h+arg_4]
push    ecx
push    eax
call    nullsub_3
add     esp, 10h
push    esi
call    ds:globalunlock
cmp     [esp+10h+arg_8], 0
jz      short loc_46143d
mov     eax, [esi]
mov     edx, dword_4ae1e0
mov     ecx, [eax]
and     ecx, 0fffffffch
mov     eax, [ecx+eax-4]
mov     ecx, [edi+edx+10h]
push    eax
push    esi
mov     eax, [ecx]
xor     ecx, ecx
mov     cx, [eax+ebx*8+0beh]
movzx   eax, bp
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_4709c0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     cx, [esp+arg_0]
push    esi
movsx   esi, cx
shl     esi, 6
add     esi, dword_4ae1e0
cmp     dword ptr [esi+0ch], 0
jnz     short loc_461487
mov     eax, [esi+10h]
xor     edx, edx
mov     eax, [eax]
mov     dx, [eax+8]
movzx   eax, cx
shl     eax, 10h
or      edx, eax
push    edx
call    sub_470640
add     esp, 4
mov     [esi+0ch], eax
cmp     dword ptr [esi+0ch], 1
sbb     eax, eax
pop     esi
inc     eax
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_462480
movsx   eax, ax
add     esp, 4
dec     eax
cmp     eax, 9
ja      short def_4614b2
xor     ecx, ecx
mov     cl, ds:byte_4614f4[eax]
jmp     ds:jpt_4614b2[ecx*4]
lea     eax, [esp+8+var_2]
push    eax
push    4000002h
push    esi
call    sub_462b60
add     esp, 0ch
test    eax, eax
jz      short def_4614b2
mov     ax, [esp+8+var_2]
pop     esi
add     esp, 4
retn
xor     ax, ax
pop     esi
add     esp, 4
retn
push    ebx
push    esi
push    edi
mov     esi, dword_4ae1e0
mov     di, [esp+0ch+arg_0]
movsx   ebx, di
shl     ebx, 6
push    edi
add     esi, ebx
call    sub_461450
add     esp, 4
test    eax, eax
jnz     short loc_461529
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, dword_4ae1e0
mov     ecx, [ebx+eax+10h]
movzx   eax, di
shl     eax, 10h
mov     edx, [ecx]
xor     ecx, ecx
mov     cx, [edx+12h]
or      ecx, eax
push    ecx
call    sub_470640
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_46155e
push    edi
add     esi, 1eh
push    esi
call    sub_474b80
add     esp, 8
cmp     edi, 1
pop     edi
sbb     eax, eax
pop     esi
inc     eax
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     esi, [esp+0ch+arg_4]
push    ebp
mov     ebp, ebx
shr     ebp, 10h
movsx   edi, bp
shl     edi, 6
add     edi, dword_4ae1e0
mov     byte ptr [esi], 0
lea     eax, [edi+1eh]
push    eax
call    sub_474b60
add     esp, 4
test    eax, eax
jnz     short loc_4615ad
push    ebp
call    sub_461500
add     esp, 4
test    eax, eax
jz      short loc_4615d8
cmp     bx, 7
jl      short loc_4615d8
mov     eax, [edi+0ch]
movsx   ecx, bx
mov     edx, [eax]
mov     ecx, [edx+ecx*4]
shr     ecx, 8
test    ecx, ecx
jz      short loc_4615d8
mov     eax, [esp+10h+arg_8]
add     edi, 1eh
push    eax
push    esi
push    ecx
push    edi
call    sub_474ba0
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    42h
push    680h
call    sub_45bd50
add     esp, 8
mov     dword_4ae1e0, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, dword_4ae1e0
test    eax, eax
jz      short locret_46161c
push    eax
call    sub_45bdb0
mov     dword_4ae1e0, 0
add     esp, 4
retn
mov     ax, [esp+arg_0]
push    ebx
movzx   ebx, ax
shl     ebx, 10h
push    esi
push    edi
mov     bl, 1
movsx   esi, ax
shl     esi, 6
xor     eax, eax
add     esi, dword_4ae1e0
mov     ecx, 10h
mov     edi, esi
push    ebx
rep stosd
call    sub_470640
add     esp, 4
mov     [esi+10h], eax
test    eax, eax
jnz     short loc_461660
mov     eax, 138ah
pop     edi
pop     esi
pop     ebx
retn
push    ebx
call    sub_470610
add     esp, 4
cmp     eax, 4bch
jnb     short loc_461683
push    42h
mov     eax, [esi+10h]
push    4bch
push    eax
call    sub_45b960
add     esp, 0ch
push    42h
push    200h
call    sub_45b8f0
add     esp, 8
mov     [esi], eax
test    eax, eax
jz      short loc_4616bd
push    42h
push    200h
call    sub_45b8f0
add     esp, 8
mov     [esi+4], eax
test    eax, eax
jz      short loc_4616bd
push    ebx
call    sub_463740
add     esp, 4
test    byte ptr [eax+3], 0f0h
jnz     short loc_4616fb
mov     edi, 8
mov     eax, [esi]
test    eax, eax
jz      short loc_4616d7
push    eax
call    sub_45ba00
add     esp, 4
mov     dword ptr [esi], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_4616ee
push    eax
call    sub_45ba00
mov     dword ptr [esi+4], 0
add     esp, 4
mov     dword ptr [esi+10h], 0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     si, [esp+8+arg_0]
push    esi
call    sub_408f50
add     esp, 4
push    esi
call    sub_4868c0
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_46175e
push    esi
call    sub_40d7e0
add     esp, 4
push    0
push    esi
call    sub_4047e0
add     esp, 8
push    esi
call    sub_462d20
add     esp, 4
cmp     si, ds:word_4a8518
jnz     short loc_46175e
push    esi
call    sub_489550
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     si, [esp+4+arg_0]
push    eax
push    esi
call    sub_461620
add     esp, 8
test    eax, eax
jnz     short loc_461791
push    esi
call    sub_461710
add     esp, 4
pop     esi
retn
mov     ax, [esp+arg_0]
test    ax, ax
jle     short loc_4617c9
cmp     ax, 1ah
jge     short loc_4617c9
movsx   eax, ax
shl     eax, 6
mov     ecx, dword_4ae1e0
cmp     dword ptr [eax+ecx+10h], 0
jz      short loc_4617c9
mov     eax, 1
retn
xor     eax, eax
retn
movsx   eax, [esp+arg_0]
shl     eax, 6
mov     ecx, dword_4ae1e0
and     byte ptr [eax+ecx+28h], 0feh
retn
mov     edx, dword_4ae1e0
xor     eax, eax
movsx   ecx, [esp+arg_0]
shl     ecx, 6
mov     ax, [ecx+edx+28h]
and     eax, 2
retn
mov     edx, dword_4ae1e0
xor     eax, eax
movsx   ecx, [esp+arg_0]
shl     ecx, 6
mov     ax, [ecx+edx+28h]
and     eax, 4
retn
mov     edx, dword_4ae1e0
xor     eax, eax
movsx   ecx, [esp+arg_0]
shl     ecx, 6
mov     ax, [ecx+edx+28h]
and     eax, 8
retn
cmp     [esp+arg_4], 0
movsx   eax, [esp+arg_0]
jz      short loc_46186b
shl     eax, 6
mov     ecx, dword_4ae1e0
or      byte ptr [eax+ecx+28h], 8
retn
shl     eax, 6
mov     ecx, dword_4ae1e0
and     byte ptr [eax+ecx+28h], 0f7h
retn
push    ebx
push    esi
push    edi
push    ebp
movsx   edi, word ptr [esp+10h+arg_0]
shl     edi, 6
add     edi, dword_4ae1e0
mov     eax, [edi+10h]
test    eax, eax
jz      loc_461a6d
xor     bx, bx
push    eax
call    ds:globallock
mov     esi, eax
movsx   eax, bx
lea     ebp, [esi+eax*8]
mov     ax, [ebp+0bch]
test    ax, ax
jz      short loc_4618d8
mov     ecx, [esp+10h+arg_0]
push    0
movzx   eax, ax
and     ecx, 0ffffh
shl     ecx, 10h
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
mov     ax, [ebp+0beh]
test    ax, ax
jz      short loc_461901
mov     ecx, [esp+10h+arg_0]
push    0
movzx   eax, ax
and     ecx, 0ffffh
shl     ecx, 10h
or      eax, ecx
push    eax
call    sub_470920
add     esp, 8
inc     bx
cmp     bx, 80h
jl      short loc_4618a9
mov     eax, [esp+10h+arg_0]
push    eax
call    sub_408f20
mov     eax, [esp+14h+arg_0]
add     esp, 4
push    eax
call    sub_486d00
mov     ax, word ptr [esp+14h+arg_0]
add     esp, 4
cmp     ax, ds:word_4a8518
jnz     short loc_46193f
mov     eax, [esp+10h+arg_0]
push    eax
call    sub_489650
add     esp, 4
lea     ebp, [edi+1eh]
push    ebp
call    sub_474b60
add     esp, 4
test    eax, eax
jz      short loc_461985
mov     ebx, [esp+10h+arg_0]
xor     eax, eax
mov     ax, [esi+12h]
and     ebx, 0ffffh
shl     ebx, 10h
or      eax, ebx
push    eax
call    sub_471110
add     esp, 4
cmp     eax, [ebp+0]
jnz     short loc_461985
push    0
xor     eax, eax
mov     ax, [esi+12h]
or      eax, ebx
push    eax
call    sub_470920
add     esp, 8
lea     ebp, [edi+14h]
push    ebp
call    sub_474b60
add     esp, 4
test    eax, eax
jz      short loc_4619cb
mov     ebx, [esp+10h+arg_0]
xor     eax, eax
mov     ax, [esi+4]
and     ebx, 0ffffh
shl     ebx, 10h
or      eax, ebx
push    eax
call    sub_471110
add     esp, 4
cmp     eax, [ebp+0]
jnz     short loc_4619cb
push    0
xor     eax, eax
mov     ax, [esi+4]
or      eax, ebx
push    eax
call    sub_470920
add     esp, 8
mov     ax, [esi+6]
test    ax, ax
jz      short loc_4619f1
mov     ecx, [esp+10h+arg_0]
push    0
movzx   eax, ax
and     ecx, 0ffffh
shl     ecx, 10h
or      ecx, eax
push    ecx
call    sub_470920
add     esp, 8
mov     ax, [esi+8]
test    ax, ax
jz      short loc_461a1d
cmp     dword ptr [edi+0ch], 0
jz      short loc_461a1d
mov     ecx, [esp+10h+arg_0]
push    0
movzx   eax, ax
and     ecx, 0ffffh
shl     ecx, 10h
or      ecx, eax
push    ecx
call    sub_470920
add     esp, 8
mov     eax, [esp+10h+arg_0]
push    eax
call    sub_462ed0
add     esp, 4
mov     eax, [edi+10h]
push    eax
call    ds:globalunlock
mov     eax, [esp+10h+arg_0]
push    0
and     eax, 0ffffh
shl     eax, 10h
mov     al, 1
push    eax
call    sub_470920
add     esp, 8
mov     ecx, [edi]
push    ecx
call    sub_45ba00
add     esp, 4
mov     ecx, [edi+4]
push    ecx
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     ecx, 10h
rep stosd
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     si, [esp+4+arg_0]
push    esi
call    sub_461880
add     esp, 4
push    esi
call    sub_471a10
add     esp, 4
pop     esi
retn
mov     eax, ecx
retn
push    esi
mov     esi, ecx
call    sub_461af0
mov     ecx, esi
call    sub_461b10
mov     eax, [esi]
test    eax, eax
jz      short loc_461ad4
push    eax
call    sub_461b60
add     esp, 4
mov     dword ptr [esi], 0
pop     esi
retn
mov     eax, 1
retn
push    esi
mov     eax, [ecx+8]
mov     esi, ecx
test    eax, eax
jz      short loc_461b0a
push    eax
call    sub_461b60
mov     dword ptr [esi+8], 0
add     esp, 4
pop     esi
retn
push    esi
mov     eax, [ecx]
mov     esi, ecx
test    eax, eax
jz      short loc_461b28
push    eax
call    sub_461b60
add     esp, 4
mov     dword ptr [esi], 0
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_45d050
mov     word ptr [esi+0ch], 100h
mov     word ptr [esi+0eh], 1
mov     eax, esi
pop     esi
retn
jmp     sub_45d070
mov     ecx, [esp+arg_0]
test    ecx, ecx
jz      short locret_461b6e
push    1
mov     eax, [ecx]
call    dword ptr [eax]
retn
call    sub_461ba0
push    12h
call    sub_45cff0
add     esp, 4
test    eax, eax
jz      short loc_461b90
mov     ecx, eax
call    sub_461aa0
mov     ds:dword_4a8910, eax
retn
mov     ds:dword_4a8910, 0
retn
push    esi
mov     esi, ds:dword_4a8910
test    esi, esi
jz      short loc_461bc5
mov     ecx, esi
call    sub_461ab0
push    esi
call    sub_45d020
mov     ds:dword_4a8910, 0
add     esp, 4
pop     esi
retn
call    sub_461c00
push    10h
call    sub_45cff0
add     esp, 4
test    eax, eax
jz      short loc_461bf0
mov     ecx, eax
call    sub_461b30
mov     ds:dword_4a8914, eax
retn
mov     ds:dword_4a8914, 0
retn
push    esi
mov     esi, ds:dword_4a8914
test    esi, esi
jz      short loc_461c25
mov     ecx, esi
call    sub_461b50
push    esi
call    sub_45d020
mov     ds:dword_4a8914, 0
add     esp, 4
pop     esi
retn
call    sub_461bd0
call    sub_461b70
mov     ecx, ds:dword_4a8910
jmp     loc_461ae0
mov     ecx, [esp+arg_0]
push    esi
test    cx, cx
push    edi
jz      short loc_461cac
mov     esi, ecx
mov     edx, dword_4ae1e0
shr     esi, 10h
movsx   eax, si
shl     eax, 6
mov     edi, [eax+edx]
xor     edx, edx
mov     dl, ch
mov     eax, [edi]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_461c8c
mov     edi, [eax]
xor     edx, edx
mov     dl, cl
xor     eax, eax
mov     ax, [edi+edx*2]
add     eax, edi
jmp     short loc_461c95
push    ecx
call    sub_463740
add     esp, 4
mov     cx, [eax+6]
test    cx, cx
jz      short loc_461cac
movzx   eax, si
movzx   ecx, cx
shl     eax, 10h
pop     edi
or      eax, ecx
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_0]
push    esi
test    cx, cx
push    edi
jz      short loc_461d1c
mov     esi, ecx
mov     edx, dword_4ae1e0
shr     esi, 10h
movsx   eax, si
shl     eax, 6
mov     edi, [eax+edx]
xor     edx, edx
mov     dl, ch
mov     eax, [edi]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_461cfc
mov     edi, [eax]
xor     edx, edx
mov     dl, cl
xor     eax, eax
mov     ax, [edi+edx*2]
add     eax, edi
jmp     short loc_461d05
push    ecx
call    sub_463740
add     esp, 4
mov     cx, [eax+8]
test    cx, cx
jz      short loc_461d1c
movzx   eax, si
movzx   ecx, cx
shl     eax, 10h
pop     edi
or      eax, ecx
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
movsx   eax, [esp+arg_4]
sub     esp, 4
cmp     eax, 2
mov     [esp+4+var_2], 0
push    ebx
jz      short loc_461d7d
cmp     eax, 3
jz      short loc_461dc6
cmp     eax, 4
jz      loc_461df5
mov     ebx, [esp+8+arg_0]
cmp     [esp+8+var_2], 0
jz      loc_461e24
shr     ebx, 10h
mov     ecx, dword ptr [esp+8+var_2]
movzx   eax, bx
shl     eax, 10h
and     ecx, 0ffffh
or      eax, ecx
pop     ebx
add     esp, 4
retn
mov     ebx, [esp+8+arg_0]
mov     ecx, dword_4ae1e0
mov     eax, ebx
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_461db2
mov     eax, [eax]
xor     edx, edx
mov     dl, bl
xor     ecx, ecx
mov     cx, [eax+edx*2]
add     eax, ecx
jmp     short loc_461dbb
push    ebx
call    sub_463740
add     esp, 4
mov     ax, [eax+8]
mov     [esp+8+var_2], ax
jmp     short loc_461d57
mov     ebx, [esp+8+arg_0]
push    ebx
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jnz     loc_461d57
lea     eax, [esp+8+var_2]
push    eax
push    4000002h
push    ebx
call    sub_462b60
add     esp, 0ch
jmp     loc_461d57
mov     ebx, [esp+8+arg_0]
push    ebx
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jnz     loc_461d57
lea     eax, [esp+8+var_2]
push    eax
push    4020002h
push    ebx
call    sub_462b60
add     esp, 0ch
jmp     loc_461d57
xor     eax, eax
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jz      short loc_461e4e
mov     ax, 2
pop     edi
pop     esi
pop     ebx
retn
mov     bx, 2
mov     edi, [esp+0ch+arg_4]
push    ebx
push    edi
push    esi
call    sub_461e80
add     esp, 0ch
test    eax, eax
jnz     short loc_461e74
inc     bx
cmp     bx, 4
jle     short loc_461e56
xor     ax, ax
pop     edi
pop     esi
pop     ebx
retn
mov     ax, bx
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_8]
push    esi
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_461d30
add     esp, 8
test    eax, eax
jz      short loc_461eac
mov     esi, [esp+4+arg_4]
cmp     eax, esi
jz      short loc_461eb0
push    eax
call    sub_461c50
add     esp, 4
test    eax, eax
jnz     short loc_461e9b
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
mov     ecx, [esp+arg_0]
push    ebx
test    cx, cx
push    esi
push    edi
jz      loc_461f67
mov     esi, ecx
mov     edx, dword_4ae1e0
shr     esi, 10h
movsx   eax, si
shl     eax, 6
mov     ebx, [eax+edx]
xor     edx, edx
mov     dl, ch
mov     eax, [ebx]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_461f01
mov     edi, [eax]
xor     edx, edx
mov     dl, cl
xor     eax, eax
mov     ax, [edi+edx*2]
add     eax, edi
jmp     short loc_461f0a
push    ecx
call    sub_463740
add     esp, 4
mov     ax, [eax+8]
test    ax, ax
jz      short loc_461f67
movzx   ebx, si
movzx   eax, ax
shl     ebx, 10h
mov     ecx, dword_4ae1e0
or      ebx, eax
mov     esi, ebx
shr     esi, 10h
movsx   eax, si
shl     eax, 6
mov     edx, [eax+ecx]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_461f4f
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
xor     edx, edx
mov     dx, [eax+ecx*2]
add     eax, edx
jmp     short loc_461f58
push    ebx
call    sub_463740
add     esp, 4
mov     ax, [eax+6]
test    ax, ax
jnz     short loc_461f13
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_0]
push    esi
test    cx, cx
push    edi
jz      short loc_461fcc
mov     esi, ecx
mov     edx, dword_4ae1e0
shr     esi, 10h
movsx   eax, si
shl     eax, 6
mov     edi, [eax+edx]
xor     edx, edx
mov     dl, ch
mov     eax, [edi]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_461fac
mov     edi, [eax]
xor     edx, edx
mov     dl, cl
xor     eax, eax
mov     ax, [edi+edx*2]
add     eax, edi
jmp     short loc_461fb5
push    ecx
call    sub_463740
add     esp, 4
mov     cx, [eax+4]
test    cx, cx
jz      short loc_461fcc
movzx   eax, si
movzx   ecx, cx
shl     eax, 10h
pop     edi
or      eax, ecx
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     bp, 2
push    esi
call    sub_461f70
add     esp, 4
test    eax, eax
jz      loc_4620c6
push    ebp
push    eax
call    sub_461d30
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_4620b3
cmp     esi, ebx
jz      loc_4620cd
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx]
xor     eax, eax
mov     al, bh
mov     ecx, [edx]
mov     eax, [ecx+eax*4]
test    eax, eax
jz      short loc_46204d
mov     ecx, [eax]
xor     edx, edx
xor     eax, eax
mov     al, bl
mov     dx, [ecx+eax*2]
lea     eax, [edx+ecx]
jmp     short loc_462056
push    ebx
call    sub_463740
add     esp, 4
cmp     [eax+6], di
jz      short loc_4620b3
mov     ax, [eax+6]
cmp     si, ax
jz      short loc_4620d4
shr     ebx, 10h
movzx   eax, ax
movzx   ebx, bx
shl     ebx, 10h
or      ebx, eax
mov     eax, ebx
shr     eax, 10h
movsx   ecx, ax
shl     ecx, 6
mov     eax, dword_4ae1e0
mov     edx, [ecx+eax]
xor     eax, eax
mov     al, bh
mov     ecx, [edx]
mov     eax, [ecx+eax*4]
test    eax, eax
jz      short loc_4620a4
mov     ecx, [eax]
xor     edx, edx
xor     eax, eax
mov     al, bl
mov     dx, [ecx+eax*2]
lea     eax, [edx+ecx]
jmp     short loc_4620ad
push    ebx
call    sub_463740
add     esp, 4
cmp     [eax+6], di
jnz     short loc_46205c
inc     bp
cmp     bp, 4
jle     loc_461fee
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_4]
push    edi
push    ebp
cmp     esi, 9
ja      short def_4620f0
jmp     ds:jpt_4620f0[esi*4]
xor     esi, esi
mov     eax, [esp+18h+arg_0]
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
mov     al, 2
mov     [esp+18h+arg_0], eax
jmp     short loc_4620eb
mov     eax, [esp+18h+arg_0]
push    eax
call    sub_461cc0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short def_4620f0
mov     edi, [esp+18h+arg_8]
mov     ebx, [esp+18h+arg_c]
push    ebx
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_46214d
push    esi
call    sub_461c50
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_462129
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     edi, [esp+18h+arg_8]
mov     ebx, [esp+18h+arg_c]
mov     word ptr [esp+18h+var_4], 2
mov     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+arg_0]
push    eax
push    ecx
call    sub_461d30
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_4621a8
push    ebx
push    ebp
call    edi
add     esp, 8
test    eax, eax
jz      short loc_4621bf
push    ebx
push    edi
push    esi
push    ebp
call    sub_4620e0
add     esp, 10h
test    eax, eax
jnz     short loc_462145
push    ebp
call    sub_461c50
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_46217e
inc     word ptr [esp+18h+var_4]
cmp     word ptr [esp+18h+var_4], 4
jle     short loc_462166
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+18h+arg_0]
push    eax
call    sub_461c50
add     esp, 4
mov     esi, eax
test    esi, esi
jz      def_4620f0
mov     edi, [esp+18h+arg_8]
mov     ebx, [esp+18h+arg_c]
push    ebx
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_46220c
push    esi
call    sub_461c50
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_4621e8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+18h+arg_0]
push    eax
call    sub_461f70
add     esp, 4
mov     esi, eax
test    esi, esi
jz      def_4620f0
mov     edi, [esp+18h+arg_8]
mov     ebx, [esp+18h+arg_c]
push    ebx
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_462259
push    esi
call    sub_461f70
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_462235
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     si, 1
mov     ecx, [esp+18h+arg_0]
shr     ecx, 10h
mov     ebx, dword_4ae1e0
movsx   eax, cx
shl     eax, 6
mov     [esp+18h+var_8], eax
mov     eax, [eax+ebx+10h]
mov     ebx, [eax]
cmp     [ebx], si
jle     def_4620f0
mov     edi, [esp+18h+arg_8]
mov     ebx, [esp+18h+arg_c]
movzx   eax, cx
shl     eax, 10h
mov     [esp+18h+var_4], eax
movzx   ebp, si
or      ebp, [esp+18h+var_4]
push    ebp
call    sub_462480
movsx   eax, ax
add     esp, 4
test    eax, eax
jz      short loc_4622c1
push    ebx
push    ebp
call    edi
add     esp, 8
test    eax, eax
jz      short loc_4622e1
mov     edx, [esp+18h+var_8]
inc     si
mov     eax, dword_4ae1e0
mov     ecx, [edx+eax+10h]
mov     eax, [ecx]
cmp     [eax], si
jg      short loc_46229f
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ebx, [esp+18h+arg_c]
mov     eax, [esp+18h+arg_0]
mov     edi, [esp+18h+arg_8]
push    ebx
push    eax
call    edi
add     esp, 8
test    eax, eax
jnz     short loc_46230e
mov     eax, [esp+18h+arg_0]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     word ptr [esp+18h+var_4], 2
mov     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+arg_0]
push    eax
push    ecx
call    sub_461d30
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_462350
push    ebx
push    edi
push    esi
push    ebp
call    sub_4620e0
add     esp, 10h
test    eax, eax
jnz     loc_462145
push    ebp
call    sub_461c50
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_46232d
inc     word ptr [esp+18h+var_4]
cmp     word ptr [esp+18h+var_4], 4
jle     short loc_462315
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     edi, [esp+18h+arg_8]
mov     ebx, [esp+18h+arg_c]
mov     word ptr [esp+18h+var_4], 2
mov     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+arg_0]
push    eax
push    ecx
call    sub_461d30
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_4623bc
push    ebx
push    edi
push    esi
push    ebp
call    sub_4620e0
add     esp, 10h
test    eax, eax
jnz     loc_462145
push    ebx
push    ebp
call    edi
add     esp, 8
test    eax, eax
jz      short loc_4623d3
push    ebp
call    sub_461c50
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_46238e
inc     word ptr [esp+18h+var_4]
cmp     word ptr [esp+18h+var_4], 4
jle     short loc_462376
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     edi, [esp+18h+arg_8]
mov     ebx, [esp+18h+arg_c]
mov     word ptr [esp+18h+var_4], 2
mov     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+arg_0]
push    eax
push    ecx
call    sub_461d30
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_462427
push    ebx
push    edi
push    esi
push    ebp
call    sub_4620e0
add     esp, 10h
test    eax, eax
jnz     loc_462145
push    ebp
call    sub_461c50
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_462404
inc     word ptr [esp+18h+var_4]
cmp     word ptr [esp+18h+var_4], 4
jle     short loc_4623ec
mov     eax, [esp+18h+arg_0]
push    ebx
push    eax
call    edi
add     esp, 8
test    eax, eax
jnz     def_4620f0
mov     eax, [esp+18h+arg_0]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ecx, [esp+arg_0]
push    ebx
test    cx, cx
jz      short loc_4624d8
mov     eax, ecx
mov     edx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     ebx, [eax+edx]
xor     edx, edx
mov     dl, ch
mov     eax, [ebx]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_4624bb
mov     edx, [eax]
xor     ebx, ebx
mov     bl, cl
xor     eax, eax
mov     ax, [edx+ebx*2]
add     eax, edx
jmp     short loc_4624c4
push    ecx
call    sub_463740
add     esp, 4
test    eax, eax
jz      short loc_4624d3
mov     eax, [eax]
pop     ebx
shr     eax, 1ch
and     ax, 0fh
retn
xor     ax, ax
pop     ebx
retn
xor     ax, ax
pop     ebx
retn
mov     ecx, [esp+arg_0]
push    ebx
test    cx, cx
jz      short loc_462538
mov     eax, ecx
mov     edx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     ebx, [eax+edx]
xor     edx, edx
mov     dl, ch
mov     eax, [ebx]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_46251b
mov     edx, [eax]
xor     ebx, ebx
mov     bl, cl
xor     eax, eax
mov     ax, [edx+ebx*2]
add     eax, edx
jmp     short loc_462524
push    ecx
call    sub_463740
add     esp, 4
test    eax, eax
jz      short loc_462534
mov     eax, [eax]
pop     ebx
and     eax, 0f000000h
shr     eax, 18h
retn
xor     eax, eax
pop     ebx
retn
xor     eax, eax
pop     ebx
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    esi
call    sub_4624e0
add     esp, 4
sub     eax, 3
cmp     eax, 8
ja      def_462567
xor     ecx, ecx
mov     cl, ds:byte_462664[eax]
jmp     ds:jpt_462567[ecx*4]
lea     eax, [esp+14h+var_8]
push    eax
push    3010008h
push    esi
call    sub_462b60
add     esp, 0ch
test    eax, eax
jz      def_462567
movsx   edx, [esp+14h+var_8]
movsx   eax, [esp+14h+var_6]
movsx   ecx, [esp+14h+var_4]
mov     ebx, [esp+14h+arg_4]
cmp     edx, 0fffffc18h
movsx   edi, [esp+14h+var_2]
mov     [ebx], edx
mov     [ebx+4], eax
mov     [ebx+8], ecx
mov     [ebx+0ch], edi
jg      short loc_4625b9
mov     edx, 0fffffc18h
mov     [ebx], edx
cmp     edx, 7d0h
jl      short loc_4625c8
mov     edx, 7d0h
mov     [ebx], edx
cmp     ecx, 0fffffc18h
jg      short loc_4625d7
mov     ecx, 0fffffc18h
mov     [ebx+8], ecx
cmp     ecx, 7d0h
jl      short loc_4625e7
mov     ecx, 7d0h
mov     [ebx+8], ecx
cmp     ecx, edx
jg      short loc_4625f0
mov     ecx, edx
mov     [ebx+8], ecx
cmp     eax, 0fffffc18h
jg      short loc_4625ff
mov     eax, 0fffffc18h
mov     [ebx+4], eax
cmp     eax, 7d0h
jl      short loc_46260e
mov     eax, 7d0h
mov     [ebx+4], eax
cmp     edi, 0fffffc18h
jg      short loc_46261e
mov     edi, 0fffffc18h
mov     [ebx+0ch], edi
cmp     edi, 7d0h
jl      short loc_46262e
mov     edi, 7d0h
cmp     eax, edi
mov     esi, eax
mov     [ebx+0ch], edi
jg      short loc_462639
mov     esi, edi
or      eax, ecx
pop     edi
or      eax, esi
mov     [ebx+0ch], esi
or      eax, edx
pop     esi
pop     ebx
add     esp, 8
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebp
mov     ebp, esp
sub     esp, 40h
push    ebx
push    esi
push    edi
movsx   eax, word ptr [ebp+arg_0]
test    eax, eax
jnz     loc_46268d
xor     ax, ax
jmp     loc_462b58
mov     eax, [ebp+arg_0]
shr     eax, 10h
and     eax, 0ffffh
movsx   eax, ax
shl     eax, 6
mov     ecx, dword_4ae1e0
mov     eax, [eax+ecx]
mov     eax, [eax]
xor     ecx, ecx
mov     cl, byte ptr [ebp+arg_0+1]
mov     eax, [eax+ecx*4]
mov     [ebp+var_24], eax
cmp     [ebp+var_24], 0
jz      loc_4626db
xor     eax, eax
mov     al, byte ptr [ebp+arg_0]
mov     ecx, [ebp+var_24]
mov     ecx, [ecx]
xor     edx, edx
mov     dx, [ecx+eax*2]
mov     eax, [ebp+var_24]
add     edx, [eax]
mov     [ebp+var_2c], edx
jmp     loc_4626ea
mov     eax, [ebp+arg_0]
push    eax
call    sub_463740
add     esp, 4
mov     [ebp+var_2c], eax
jmp     loc_4626f5
mov     eax, [ebp+var_28]
mov     [ebp+var_2c], eax
jmp     $+5
mov     eax, [ebp+var_2c]
mov     [ebp+var_10], eax
cmp     [ebp+var_10], 0
jnz     loc_462712
xor     ax, ax
jmp     loc_462b58
mov     eax, [ebp+arg_4]
shr     eax, 10h
and     eax, 0ffffh
movzx   eax, ax
xor     ecx, ecx
mov     cl, ah
mov     [ebp+var_30], ecx
jmp     loc_462b28
xor     eax, eax
mov     al, byte ptr [ebp+arg_4]
mov     [ebp+var_34], eax
jmp     loc_4629a5
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 18h
and     eax, 0fh
jmp     loc_462b58
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 14h
and     eax, 1
jmp     loc_462b58
mov     eax, [ebp+arg_0]
shr     eax, 10h
and     eax, 0ffffh
movsx   eax, ax
shl     eax, 6
mov     ecx, dword_4ae1e0
cmp     dword ptr [eax+ecx+8], 0
jz      loc_4627ad
mov     eax, [ebp+arg_0]
shr     eax, 10h
and     eax, 0ffffh
movsx   eax, ax
shl     eax, 6
mov     ecx, dword_4ae1e0
mov     eax, [eax+ecx+8]
mov     eax, [eax]
movsx   ecx, word ptr [ebp+arg_0]
mov     eax, [eax+ecx*8+4]
and     eax, 1
jmp     loc_462b58
jmp     loc_4627b6
mov     ax, 1
jmp     loc_462b58
mov     eax, [ebp+arg_0]
shr     eax, 10h
and     eax, 0ffffh
movsx   eax, ax
shl     eax, 6
mov     ecx, dword_4ae1e0
mov     eax, [eax+ecx+8]
mov     eax, [eax]
movsx   ecx, word ptr [ebp+arg_0]
mov     eax, [eax+ecx*8+4]
shr     eax, 1
and     eax, 1
jmp     loc_462b58
mov     eax, [ebp+arg_0]
shr     eax, 10h
and     eax, 0ffffh
movsx   eax, ax
shl     eax, 6
mov     ecx, dword_4ae1e0
mov     eax, [eax+ecx+0ch]
mov     [ebp+var_4], eax
cmp     [ebp+var_4], 0
jz      loc_462822
movsx   eax, word ptr [ebp+arg_0]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx]
mov     eax, [ecx+eax*4]
and     eax, 1
jmp     loc_462b58
jmp     def_4629b2
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 1ch
and     al, 0fh
cmp     al, 4
jnz     loc_46284a
mov     [ebp+arg_4], 2080640h
jmp     loc_462712
jmp     loc_462877
mov     eax, [ebp+arg_0]
push    eax
call    sub_461f70
add     esp, 4
push    eax
call    sub_462480
add     esp, 4
movsx   eax, ax
cmp     eax, 5
jnz     loc_462877
mov     [ebp+arg_4], 1000520h
jmp     loc_462712
jmp     def_4629b2
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 1ch
and     eax, 0fh
mov     [ebp+var_38], eax
jmp     loc_4628c4
mov     [ebp+arg_4], 20004f0h
jmp     loc_462712
mov     [ebp+arg_4], 20604f0h
jmp     loc_462712
mov     [ebp+arg_4], 20704f0h
jmp     loc_462712
mov     [ebp+arg_4], 20404f0h
jmp     loc_462712
jmp     def_4628dc
dec     [ebp+var_38]
cmp     [ebp+var_38], 8
ja      def_4628dc
mov     eax, [ebp+var_38]
xor     ecx, ecx
mov     cl, ds:byte_4628f7[eax]
jmp     ds:jpt_4628dc[ecx*4]
jmp     def_4629b2
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 1ch
and     al, 0fh
cmp     al, 4
jnz     loc_462928
mov     [ebp+arg_4], 2080430h
jmp     loc_462712
jmp     loc_462944
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 18h
test    al, 0fh
jz      loc_462944
mov     [ebp+arg_4], 10006c0h
jmp     loc_462712
jmp     def_4629b2
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 1ch
and     eax, 0fh
mov     [ebp+var_3c], eax
jmp     loc_46297d
mov     [ebp+arg_4], 2030410h
jmp     loc_462712
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 15h
and     eax, 1
jmp     loc_462b58
jmp     loc_4629a0
cmp     [ebp+var_3c], 1
jz      loc_46295c
cmp     [ebp+var_3c], 4
jz      loc_46295c
cmp     [ebp+var_3c], 9
jz      loc_46295c
jmp     loc_462968
jmp     def_4629b2
cmp     [ebp+var_34], 9
ja      def_4629b2
mov     eax, [ebp+var_34]
jmp     ds:jpt_4629b2[eax*4]
jmp     def_462b35
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 1ch
test    al, 0fh
jz      loc_462a4d
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 18h
and     eax, 0fh
mov     al, byte_4ae230[eax]
mov     [ebp+var_18], al
mov     eax, [ebp+arg_4]
shr     eax, 10h
xor     ecx, ecx
mov     cl, al
xor     eax, eax
mov     al, [ebp+var_18]
add     ecx, eax
mov     eax, [ebp+var_10]
add     eax, 0ah
add     ecx, eax
mov     [ebp+var_c], ecx
mov     eax, [ebp+arg_4]
mov     [ebp+var_14], ah
mov     al, byte ptr [ebp+arg_4]
mov     [ebp+var_8], al
mov     eax, [ebp+var_c]
xor     edx, edx
mov     dl, [eax]
xor     eax, eax
mov     al, [ebp+var_8]
and     edx, eax
mov     cl, [ebp+var_14]
sar     edx, cl
mov     ax, dx
jmp     loc_462b58
jmp     def_462b35
mov     eax, [ebp+var_10]
mov     eax, [eax]
shr     eax, 18h
test    al, 0fh
jz      loc_462a9e
mov     eax, [ebp+arg_4]
shr     eax, 10h
xor     ecx, ecx
mov     cl, al
mov     eax, [ebp+var_10]
add     eax, 0ah
add     ecx, eax
mov     [ebp+var_c], ecx
mov     eax, [ebp+arg_4]
mov     [ebp+var_14], ah
mov     al, byte ptr [ebp+arg_4]
mov     [ebp+var_8], al
mov     eax, [ebp+var_c]
xor     edx, edx
mov     dl, [eax]
xor     eax, eax
mov     al, [ebp+var_8]
and     edx, eax
mov     cl, [ebp+var_14]
sar     edx, cl
mov     ax, dx
jmp     loc_462b58
jmp     def_462b35
xor     eax, eax
mov     al, byte ptr [ebp+arg_4]
mov     [ebp+var_40], eax
jmp     loc_462b0a
lea     eax, [ebp+var_1c]
push    eax
mov     eax, [ebp+arg_4]
push    eax
mov     eax, [ebp+arg_0]
push    eax
call    sub_462b60
add     esp, 0ch
test    eax, eax
jz      loc_462ad6
movzx   ax, [ebp+var_1c]
jmp     loc_462b58
jmp     loc_462b23
lea     eax, [ebp+var_20]
push    eax
mov     eax, [ebp+arg_4]
push    eax
mov     eax, [ebp+arg_0]
push    eax
call    sub_462b60
add     esp, 0ch
test    eax, eax
jz      loc_462b00
mov     ax, [ebp+var_20]
jmp     loc_462b58
jmp     loc_462b23
jmp     loc_462b23
cmp     [ebp+var_40], 1
jz      loc_462ab0
cmp     [ebp+var_40], 2
jz      loc_462adb
jmp     $+5
jmp     def_462b35
cmp     [ebp+var_30], 4
ja      def_462b35
mov     eax, [ebp+var_30]
jmp     ds:jpt_462b35[eax*4]
xor     ax, ax
jmp     $+5
pop     edi
pop     esi
pop     ebx
leave
retn
mov     ecx, [esp+arg_0]
push    ebx
test    cx, cx
push    esi
mov     esi, [esp+8+arg_8]
push    edi
jnz     short loc_462b76
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ecx
mov     edx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     ebx, [eax+edx]
xor     edx, edx
mov     dl, ch
mov     eax, [ebx]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_462ba7
mov     edi, [eax]
xor     edx, edx
mov     dl, cl
xor     eax, eax
mov     ax, [edi+edx*2]
add     eax, edi
jmp     short loc_462bb0
push    ecx
call    sub_463740
add     esp, 4
mov     edx, [esp+0ch+arg_4]
xor     ecx, ecx
mov     ebx, edx
shr     ebx, 10h
mov     cl, bh
cmp     ecx, 3
jz      short loc_462bcd
cmp     ecx, 4
jz      short loc_462bfa
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
test    byte ptr [eax+3], 0fh
jz      short loc_462bc7
xor     ecx, ecx
mov     cl, bl
lea     eax, [ecx+eax+0ah]
mov     cl, dl
dec     dl
test    cl, cl
jz      short loc_462bf1
mov     cl, [eax]
inc     eax
mov     [esi], cl
inc     esi
mov     cl, dl
dec     dl
test    cl, cl
jnz     short loc_462be3
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [eax]
test    ecx, 0f0000000h
jz      short loc_462bc7
and     ecx, 0f000000h
shr     ecx, 18h
movsx   edi, byte_4ae230[ecx]
xor     ecx, ecx
mov     cl, bl
add     edi, ecx
mov     cl, dl
dec     dl
lea     eax, [edi+eax+0ah]
test    cl, cl
jz      short loc_462c34
mov     cl, [eax]
inc     eax
mov     [esi], cl
inc     esi
mov     cl, dl
dec     dl
test    cl, cl
jnz     short loc_462c26
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_4624e0
add     esp, 4
cmp     eax, 3
jz      short loc_462c61
cmp     eax, 4
jz      short loc_462c74
cmp     eax, 7
jz      short loc_462c87
xor     eax, eax
pop     esi
retn
push    10b0204h
push    esi
call    sub_462670
add     esp, 8
movzx   eax, ax
pop     esi
retn
push    1090410h
push    esi
call    sub_462670
add     esp, 8
movzx   eax, ax
pop     esi
retn
push    10b0520h
push    esi
call    sub_462670
add     esp, 8
movzx   eax, ax
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_462cbe
cmp     eax, 4
jnz     short loc_462cf3
lea     eax, [esp+8+var_2]
push    eax
push    4040002h
push    esi
call    sub_462b60
add     esp, 0ch
cmp     [esp+8+var_2], 0
jz      short loc_462cf3
shr     esi, 10h
mov     ecx, dword ptr [esp+8+var_2]
movzx   eax, si
shl     eax, 10h
and     ecx, 0ffffh
or      eax, ecx
pop     esi
add     esp, 4
retn
xor     eax, eax
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_0]
mov     eax, [eax]
mov     ecx, eax
and     eax, 0fffffh
and     ecx, 0c00000h
shr     ecx, 2
add     eax, ecx
retn
mov     cx, [esp+arg_0]
push    esi
movsx   esi, cx
shl     esi, 6
add     esi, dword_4ae1e0
mov     eax, [esi+10h]
mov     edx, [eax]
mov     ax, [edx+4]
test    ax, ax
jz      short loc_462d6c
movzx   ecx, cx
movzx   eax, ax
shl     ecx, 10h
or      ecx, eax
push    ecx
call    sub_470640
add     esp, 4
test    eax, eax
jz      short loc_462d6c
push    eax
add     esi, 14h
push    esi
call    sub_474b80
add     esp, 8
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
sub     esp, 8
push    ebx
push    esi
mov     ebx, [esp+10h+arg_0]
push    edi
push    ebp
mov     esi, ebx
shr     esi, 10h
mov     ebp, dword_4ae1e0
mov     edi, [esp+18h+lpstring1]
xor     eax, eax
movsx   ecx, si
shl     ecx, 6
mov     al, bh
add     ebp, ecx
mov     byte ptr [edi], 0
mov     edx, dword_4ae1e0
mov     ecx, [ecx+edx]
mov     edx, [ecx]
mov     eax, [edx+eax*4]
test    eax, eax
jz      short loc_462dbf
mov     ecx, [eax]
xor     edx, edx
xor     eax, eax
mov     al, bl
mov     dx, [ecx+eax*2]
add     edx, ecx
mov     [esp+18h+var_8], edx
jmp     short loc_462dcc
push    ebx
call    sub_463740
mov     [esp+1ch+var_8], eax
add     esp, 4
mov     eax, [esp+18h+var_8]
push    eax
call    sub_462d00
mov     [esp+1ch+var_4], eax
add     esp, 4
test    eax, eax
jz      short loc_462e20
cmp     bx, 7
jl      short loc_462e20
add     ebp, 14h
push    ebp
call    sub_474b60
add     esp, 4
test    eax, eax
jnz     short loc_462e04
push    esi
call    sub_462d20
add     esp, 4
test    eax, eax
jz      short loc_462e20
mov     eax, dword ptr [esp+18h+arg_8]
mov     ecx, [esp+18h+var_4]
push    eax
push    edi
push    ecx
push    ebp
call    sub_474ba0
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     [esp+18h+var_4], 0
jnz     short loc_462e6d
mov     eax, [esp+18h+var_8]
mov     eax, [eax]
and     eax, 0f0000000h
cmp     eax, 0d0000000h
jnz     short loc_462e6d
push    2030520h
push    ebx
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_462e63
mov     eax, dword ptr [esp+18h+arg_8]
push    eax
push    edi
push    ebx
call    sub_454e10
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     dword ptr [esp+18h+arg_8], 0
jle     short loc_462e6d
mov     byte ptr [edi], 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     cx, [esp+arg_0]
push    esi
movsx   esi, cx
shl     esi, 6
add     esi, dword_4ae1e0
cmp     dword ptr [esi+2ah], 0
jz      short loc_462e9f
mov     eax, 1
pop     esi
retn
mov     eax, [esi+10h]
mov     edx, [eax]
mov     ax, [edx+38h]
test    ax, ax
jnz     short loc_462eb1
xor     eax, eax
pop     esi
retn
movzx   ecx, cx
movzx   eax, ax
shl     ecx, 10h
or      ecx, eax
push    ecx
call    sub_470640
add     esp, 4
mov     [esi+2ah], eax
cmp     eax, 1
pop     esi
sbb     eax, eax
inc     eax
retn
mov     cx, [esp+arg_0]
push    esi
movsx   esi, cx
shl     esi, 6
add     esi, dword_4ae1e0
cmp     dword ptr [esi+2ah], 0
jz      short loc_462f0d
push    0
mov     eax, [esi+10h]
xor     edx, edx
mov     eax, [eax]
mov     dx, [eax+38h]
movzx   eax, cx
shl     eax, 10h
or      edx, eax
push    edx
call    sub_470920
mov     dword ptr [esi+2ah], 0
add     esp, 8
pop     esi
retn
sub     esp, 1b0h
push    ebx
push    esi
push    edi
mov     esi, dword_4ae1e0
mov     [esp+1bch+var_1b0], 0
movsx   edi, word ptr [esp+1bch+arg_0]
shl     edi, 6
push    ebp
add     esi, edi
lea     eax, [esi+14h]
push    eax
call    sub_474b60
add     esp, 4
test    eax, eax
jnz     short loc_462f66
mov     eax, [esp+1c0h+arg_0]
push    eax
call    sub_462d20
add     esp, 4
test    eax, eax
jnz     short loc_462f66
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1b0h
retn
lea     eax, [esp+1c0h+string1]
push    7
mov     ecx, [esp+1c4h+lpstring2]
push    19ah
push    eax
push    ecx
call    sub_47fe30
mov     ecx, [esp+1d0h+arg_0]
add     esp, 10h
push    ecx
call    sub_462e80
add     esp, 4
test    eax, eax
jz      loc_46302e
mov     eax, [esi+2ah]
push    eax
call    ds:globallock
mov     ebx, eax
lea     eax, [esp+1c0h+string1]
push    eax
call    sub_463230
mov     bp, ax
add     esp, 4
mov     eax, dword_4ae1e0
mov     ecx, [edi+eax+10h]
mov     di, 7
mov     edx, [ecx]
mov     ax, [edx]
mov     word ptr [esp+1c0h+var_1ac], ax
cmp     ax, di
jle     short loc_463022
movsx   eax, di
cmp     [ebx+eax*2], bp
jnz     short loc_463019
cmp     [esp+1c0h+arg_8], di
jz      short loc_463019
mov     eax, [esp+1c0h+arg_c]
lea     ecx, [esp+1c0h+var_1b0]
lea     edx, [esp+1c0h+string1]
push    eax
mov     eax, [esp+1c4h+arg_0]
push    ecx
push    edx
and     eax, 0ffffh
shl     eax, 10h
push    esi
movzx   ecx, di
or      eax, ecx
push    eax
call    sub_463130
add     esp, 14h
test    eax, eax
jnz     short loc_463022
inc     di
cmp     di, word ptr [esp+1c0h+var_1ac]
jl      short loc_462fd2
mov     eax, [esi+2ah]
push    eax
call    ds:globalunlock
jmp     short loc_463084
mov     cx, [esp+1c0h+arg_8]
lea     eax, [esp+1c0h+string1]
mov     edx, [esp+1c0h+arg_c]
mov     [esp+1c0h+var_1ac], eax
mov     [esp+1c0h+var_1a8], 0
mov     [esp+1c0h+var_1a4], cx
lea     eax, [esp+1c0h+var_1ac]
mov     [esp+1c0h+var_1a2], edx
push    eax
mov     eax, [esp+1c4h+arg_0]
push    offset sub_4630a0
push    1
and     eax, 0ffffh
shl     eax, 10h
mov     al, 1
push    eax
call    sub_463290
mov     ecx, [esp+1d0h+var_1a8]
mov     [esp+1d0h+var_1b0], ecx
add     esp, 10h
mov     eax, [esp+1c0h+var_1b0]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1b0h
retn
sub     esp, 19ch
push    esi
push    edi
mov     edi, [esp+1a4h+arg_8]
mov     esi, [esp+1a4h+arg_0]
cmp     [edi+8], si
jz      short loc_463100
lea     eax, [esp+1a4h+string1]
push    7
push    19ah
mov     ecx, [edi]
push    eax
push    ecx
call    sub_47fe30
mov     ecx, [esp+1b4h+lpstring2]
lea     edx, [esp+1b4h+string1]
add     esp, 10h
push    ecx
push    edx
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_463100
cmp     dword ptr [edi+4], 0
jnz     short loc_463119
mov     eax, [edi+0ah]
mov     [edi+4], esi
test    eax, eax
jz      short loc_46310e
mov     dword ptr [eax], 1
mov     eax, 1
pop     edi
pop     esi
add     esp, 19ch
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 19ch
retn
mov     eax, [edi+0ah]
pop     edi
pop     esi
mov     dword ptr [eax], 0
xor     eax, eax
add     esp, 19ch
retn
sub     esp, 19ch
mov     ecx, dword_4ae1e0
push    ebx
mov     ebx, [esp+1a0h+arg_0]
mov     eax, ebx
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_46316f
mov     eax, [eax]
xor     edx, edx
mov     dl, bl
xor     ecx, ecx
mov     cx, [eax+edx*2]
add     eax, ecx
jmp     short loc_463178
push    ebx
call    sub_463740
add     esp, 4
test    byte ptr [eax+3], 0f0h
jz      short loc_4631f8
push    eax
call    sub_462d00
add     esp, 4
test    eax, eax
jz      short loc_4631f8
lea     ecx, [esp+1a0h+string1]
push    19ah
push    ecx
push    eax
mov     eax, [esp+1ach+arg_4]
add     eax, 14h
push    eax
call    sub_474ba0
lea     ecx, [esp+1b0h+string1]
add     esp, 10h
push    7
push    19ah
push    ecx
lea     ecx, [esp+1ach+string1]
push    ecx
call    sub_47fe30
mov     ecx, [esp+1b0h+lpstring2]
lea     edx, [esp+1b0h+string1]
add     esp, 10h
push    ecx
push    edx
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_4631f8
mov     eax, [esp+1a0h+arg_c]
cmp     dword ptr [eax], 0
jnz     short loc_46320f
mov     [eax], ebx
mov     eax, [esp+1a0h+arg_10]
test    eax, eax
jz      short loc_463202
mov     dword ptr [eax], 1
xor     eax, eax
pop     ebx
add     esp, 19ch
retn
mov     eax, 1
pop     ebx
add     esp, 19ch
retn
mov     eax, [esp+1a0h+arg_10]
pop     ebx
mov     dword ptr [eax], 0
mov     eax, 1
add     esp, 19ch
retn
mov     ecx, [esp+lpstring2]
sub     esp, 19ch
lea     eax, [esp+19ch+sz]
push    7
push    19ah
push    eax
push    ecx
call    sub_47fe30
lea     ecx, [esp+1ach+sz]
add     esp, 10h
push    ecx
call    ds:charlowera
xor     ax, ax
lea     edx, [esp+19ch+sz]
cmp     [esp+19ch+sz], al
jz      short loc_46327e
movsx   cx, byte ptr [edx]
inc     edx
lea     ecx, [ecx+eax*4]
sar     ax, 0eh
add     cx, ax
cmp     byte ptr [edx], 0
mov     ax, cx
jnz     short loc_463267
test    ax, ax
jnz     short loc_463287
mov     ax, 1
add     esp, 19ch
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, esi
mov     eax, dword_4ae1e0
shr     edi, 10h
movsx   ecx, di
shl     ecx, 6
lea     ebx, [ecx+eax+14h]
push    ebx
call    sub_474b60
add     esp, 4
test    eax, eax
jnz     short loc_4632cb
push    edi
call    sub_462d20
add     esp, 4
test    eax, eax
jnz     short loc_4632cb
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+0ch+arg_8]
mov     ecx, [esp+0ch+arg_c]
mov     edx, [esp+0ch+arg_4]
push    ecx
push    offset sub_463300
mov     ds:dword_4a8928, eax
push    edx
mov     ds:dword_4a8924, ebx
push    esi
call    sub_4620e0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 19ch
mov     ecx, dword_4ae1e0
push    ebx
mov     ebx, [esp+1a0h+arg_0]
mov     eax, ebx
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_46333f
mov     eax, [eax]
xor     edx, edx
mov     dl, bl
xor     ecx, ecx
mov     cx, [eax+edx*2]
add     eax, ecx
jmp     short loc_463348
push    ebx
call    sub_463740
add     esp, 4
test    byte ptr [eax+3], 0f0h
jz      short loc_46339a
push    eax
call    sub_462d00
add     esp, 4
test    eax, eax
jz      short loc_46339a
lea     ecx, [esp+1a0h+var_19c]
push    19ah
push    ecx
push    eax
mov     eax, ds:dword_4a8924
push    eax
call    sub_474ba0
add     esp, 10h
cmp     [esp+1a0h+var_19c], 0
jz      short loc_46339a
mov     eax, [esp+1a0h+arg_4]
lea     ecx, [esp+1a0h+var_19c]
push    eax
push    ecx
push    ebx
call    ds:dword_4a8928
add     esp, 0ch
pop     ebx
add     esp, 19ch
retn
mov     eax, 1
pop     ebx
add     esp, 19ch
retn
mov     eax, [esp+arg_8]
push    esi
mov     ecx, [esp+4+arg_4]
push    edi
push    eax
mov     edi, 1
push    ecx
call    sub_461d30
mov     esi, [esp+10h+arg_0]
add     esp, 8
cmp     esi, edi
jle     short loc_4633e3
test    eax, eax
jz      short loc_4633e3
push    eax
inc     edi
call    sub_461c50
add     esp, 4
cmp     edi, esi
jl      short loc_4633d1
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
push    edi
call    sub_461f70
add     esp, 4
mov     esi, eax
push    edi
push    esi
call    sub_461e30
add     esp, 8
push    eax
push    esi
mov     esi, 1
call    sub_461d30
add     esp, 8
test    eax, eax
jz      short loc_463430
cmp     edi, eax
jz      short loc_463430
inc     esi
push    eax
call    sub_461c50
add     esp, 4
test    eax, eax
jnz     short loc_46341e
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
xor     esi, esi
call    sub_461d30
add     esp, 8
test    eax, eax
jz      short loc_463477
inc     esi
push    eax
call    sub_461c50
add     esp, 4
test    eax, eax
jnz     short loc_463469
mov     eax, esi
pop     esi
retn
mov     ecx, [esp+arg_0]
push    esi
mov     esi, [esp+4+arg_4]
push    edi
mov     eax, esi
mov     edx, ecx
shr     eax, 10h
shr     edx, 10h
cmp     ax, dx
jnz     short loc_4634f1
test    cx, cx
jz      short loc_4634f1
cmp     si, cx
jz      short loc_4634f6
mov     edi, ecx
mov     edx, dword_4ae1e0
shr     edi, 10h
movsx   eax, di
shl     eax, 6
mov     eax, [eax+edx]
mov     edx, [eax]
xor     eax, eax
mov     al, ch
mov     eax, [edx+eax*4]
test    eax, eax
jz      short loc_4634d5
mov     edx, [eax]
xor     eax, eax
mov     al, cl
xor     ecx, ecx
mov     cx, [edx+eax*2]
lea     eax, [ecx+edx]
jmp     short loc_4634de
push    ecx
call    sub_463740
add     esp, 4
xor     ecx, ecx
mov     cx, [eax+4]
movzx   eax, di
shl     eax, 10h
or      ecx, eax
test    cx, cx
jnz     short loc_46349e
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 4
jz      short loc_463522
cmp     eax, 5
jz      short loc_463522
cmp     eax, 0ch
jz      short loc_463522
xor     eax, eax
retn
mov     eax, 1
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_461f70
add     esp, 4
mov     edi, eax
push    edi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 0ch
jnz     short loc_46356b
push    esi
push    edi
call    sub_461e30
sub     ax, 2
add     esp, 8
cmp     ax, 1
pop     edi
sbb     eax, eax
pop     esi
neg     eax
retn
cmp     eax, 4
jz      short loc_46357f
cmp     eax, 5
jz      short loc_46357f
cmp     eax, 0ch
jz      short loc_46357f
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_461f70
add     esp, 4
push    eax
call    sub_462480
sub     ax, 4
add     esp, 4
cmp     ax, 1
sbb     eax, eax
neg     eax
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_461f70
add     esp, 4
push    eax
call    sub_462480
sub     ax, 5
add     esp, 4
cmp     ax, 1
sbb     eax, eax
neg     eax
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_461f70
add     esp, 4
mov     edi, eax
push    edi
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jnz     short loc_463629
push    esi
push    edi
call    sub_461e30
sub     ax, 2
add     esp, 8
cmp     ax, 1
pop     edi
sbb     eax, eax
pop     esi
neg     eax
retn
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    eax
call    sub_461f70
add     esp, 4
mov     ebx, eax
test    bx, bx
jz      short loc_4636b3
mov     esi, ebx
mov     ecx, dword_4ae1e0
shr     esi, 10h
movsx   eax, si
shl     eax, 6
mov     edx, [eax+ecx]
xor     ecx, ecx
mov     cl, bh
mov     eax, [edx]
mov     eax, [eax+ecx*4]
test    eax, eax
jz      short loc_463677
mov     eax, [eax]
xor     ecx, ecx
mov     cl, bl
xor     edx, edx
mov     dx, [eax+ecx*2]
add     eax, edx
jmp     short loc_463680
push    ebx
call    sub_463740
add     esp, 4
mov     ecx, [eax]
and     ecx, 0f0000000h
cmp     ecx, 40000000h
jz      short loc_4636b8
cmp     ecx, 50000000h
jz      short loc_4636b8
cmp     ecx, 0c0000000h
jz      short loc_4636b8
xor     ebx, ebx
mov     bx, [eax+4]
movzx   eax, si
shl     eax, 10h
or      ebx, eax
test    bx, bx
jnz     short loc_463646
xor     eax, eax
pop     esi
pop     ebx
retn
mov     eax, ebx
pop     esi
pop     ebx
retn
push    edi
xor     eax, eax
movsx   ecx, [esp+4+arg_0]
shl     ecx, 6
mov     edi, dword_4ae1e0
add     edi, ecx
mov     ecx, 10h
rep stosd
pop     edi
retn
mov     ecx, [esp+arg_0]
mov     eax, ecx
shr     eax, 10h
test    ax, ax
jle     short loc_46372e
cmp     ax, 1ah
jge     short loc_46372e
movsx   eax, ax
shl     eax, 6
add     eax, dword_4ae1e0
cmp     dword ptr [eax], 0
jz      short loc_46372e
test    cx, cx
jle     short loc_46372e
mov     eax, [eax+10h]
mov     edx, [eax]
cmp     [edx], cx
jle     short loc_46372e
push    ecx
call    sub_462480
add     esp, 4
test    ax, ax
jle     short loc_46372e
cmp     ax, 0dh
jg      short loc_46372e
mov     eax, 1
retn
xor     eax, eax
retn
mov     edx, [esp+arg_0]
push    ebx
shr     edx, 10h
push    esi
push    edi
mov     ecx, dword_4ae1e0
movsx   edi, dx
shl     edi, 6
xor     ebx, ebx
add     ecx, edi
mov     bl, byte ptr [esp+0ch+arg_0+1]
mov     eax, [ecx]
mov     esi, [eax]
mov     eax, [esi+ebx*4]
test    eax, eax
jnz     short loc_4637b7
mov     eax, [ecx+10h]
xor     ecx, ecx
mov     esi, [eax]
movzx   eax, dx
mov     cx, [esi+ebx*8+0bch]
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_470640
add     esp, 4
mov     ecx, dword_4ae1e0
test    eax, eax
mov     edx, [edi+ecx]
mov     esi, [edx]
mov     [esi+ebx*4], eax
jnz     short loc_4637b7
mov     eax, offset dword_4a8918
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
mov     word ptr [eax+8], 0
retn
mov     eax, [eax]
xor     edx, edx
mov     dl, byte ptr [esp+0ch+arg_0]
xor     ecx, ecx
mov     cx, [eax+edx*2]
pop     edi
add     eax, ecx
pop     esi
pop     ebx
retn
sub     esp, 20h
push    ebx
push    esi
mov     ebx, [esp+28h+arg_4]
push    edi
cmp     ebx, 29h
ja      short def_4637e7
xor     eax, eax
mov     al, ds:byte_463a9c[ebx]
jmp     ds:jpt_4637e7[eax*4]
mov     esi, [esp+2ch+arg_8]
mov     edi, [esp+2ch+arg_0]
push    esi
push    ebx
push    edi
call    sub_40fd60
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
lea     eax, [esp+2ch+rcdst]
push    1
mov     edi, [esp+30h+arg_0]
push    eax
push    edi
call    sub_463ad0
mov     dx, [edi+1ch]
mov     esi, [esp+38h+arg_8]
lea     ecx, [esp+38h+rcdst]
add     esp, 0ch
mov     eax, [esi+0ch]
push    eax
push    ecx
push    edx
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_463864
call    sub_40ac00
push    eax
mov     edx, [edi+6eh]
lea     eax, [edi+6ah]
push    edx
mov     ecx, [eax]
mov     edx, [edi+66h]
lea     eax, [edi+62h]
push    ecx
push    edx
add     edi, 32h
mov     ecx, [eax]
mov     eax, [esi+0ch]
push    ecx
push    edi
push    eax
call    sub_4525b0
add     esp, 1ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     esi, [esp+2ch+arg_8]
mov     edx, [esi+4]
add     edx, 3
mov     [esp+2ch+rcdst.bottom], edx
lea     eax, [edx-6]
mov     edi, [esp+2ch+arg_0]
mov     [esp+2ch+rcdst.top], eax
mov     eax, [esi]
add     eax, 3
mov     [esp+2ch+rcdst.right], eax
lea     ecx, [eax-6]
mov     [esp+2ch+rcdst.left], ecx
lea     edx, [edi+6ah]
movsx   ecx, word ptr [edi+4eh]
mov     [esp+2ch+var_18], ecx
lea     ecx, [esp+2ch+var_18]
movsx   eax, word ptr [edi+50h]
mov     [esp+2ch+var_14], eax
push    ecx
push    edx
lea     eax, [edi+62h]
lea     ecx, [esp+34h+rcdst]
push    eax
push    ecx
call    sub_454480
add     esp, 10h
test    eax, eax
jz      short loc_4638d6
mov     eax, 0ffffffffh
mov     [esi+98h], edi
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
lea     eax, [esp+2ch+rcdst]
push    1
mov     edi, [esp+30h+arg_0]
push    eax
push    edi
call    sub_463ad0
lea     ecx, [esp+38h+rcdst]
add     esp, 0ch
push    offset rcsrc2
push    ecx
lea     ecx, [esp+34h+rcdst]
push    ecx
call    ds:intersectrect
cmp     ebx, 7
jnz     short loc_463912
add     edi, 1ch
jmp     short loc_463915
add     edi, 1eh
mov     eax, [esp+2ch+rcdst.bottom]
mov     ecx, [esp+2ch+rcdst.right]
mov     edx, [esp+2ch+rcdst.top]
push    eax
mov     eax, [esp+30h+rcdst.left]
push    ecx
mov     cx, [edi]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [edi], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     esi, [esp+2ch+arg_8]
mov     ax, [esi+0ah]
cmp     ax, 9
jnz     short loc_463969
mov     edi, [esp+2ch+arg_0]
mov     edx, [esi]
mov     eax, [esi+4]
lea     ecx, [edi+62h]
mov     [ecx], edx
mov     [ecx+4], eax
jmp     short loc_4639de
cmp     ax, 0ah
jnz     short loc_463982
mov     edi, [esp+2ch+arg_0]
mov     edx, [esi]
mov     eax, [esi+4]
lea     ecx, [edi+6ah]
mov     [ecx], edx
mov     [ecx+4], eax
jmp     short loc_4639de
mov     ecx, [esi+1ch]
mov     edi, [esp+2ch+arg_0]
mov     edx, [esi+14h]
add     esi, 10h
movsx   eax, word ptr [edi+72h]
push    eax
push    ecx
mov     eax, [esi+8]
mov     ecx, [esi]
push    eax
push    edx
push    ecx
call    sub_474000
add     esp, 14h
mov     ecx, edx
lea     edx, [edi+62h]
mov     [edx], eax
mov     [edx+4], ecx
movsx   eax, word ptr [edi+72h]
push    eax
call    sub_473f90
add     esp, 4
mov     ecx, [esi+0ch]
mov     edx, [esi+4]
push    eax
push    ecx
mov     eax, [esi+8]
push    eax
mov     ecx, [esi]
push    edx
push    ecx
call    sub_474000
add     esp, 14h
mov     ecx, edx
lea     edx, [edi+6ah]
mov     [edx], eax
mov     [edx+4], ecx
mov     ecx, [edi+6eh]
lea     ebx, [edi+6ah]
lea     esi, [edi+62h]
push    ecx
mov     eax, [ebx]
mov     ecx, [esi+4]
push    eax
push    ecx
mov     eax, [esi]
add     edi, 0ch
push    eax
call    sub_4740e0
mov     [edi+66h], ax
add     esp, 10h
mov     eax, [ebx]
mov     ecx, [ebx+4]
push    edi
mov     edx, [esi]
push    ecx
push    eax
mov     eax, [esi+4]
push    eax
push    edx
call    sub_473c60
add     esp, 14h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     edi, [esp+2ch+arg_0]
lea     ecx, [edi+0ch]
add     edi, 22h
mov     eax, [ecx]
mov     [edi], eax
mov     edx, [ecx+4]
mov     [edi+4], edx
mov     ebx, [ecx+8]
mov     [edi+8], ebx
mov     eax, [ecx+0ch]
mov     [edi+0ch], eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     esi, [esp+2ch+arg_8]
push    0
add     esi, 10h
mov     edi, [esp+30h+arg_0]
push    esi
push    edi
call    sub_463ad0
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     edi, [esp+2ch+arg_0]
movsx   eax, word ptr [edi+4eh]
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     edx, [esp+arg_0]
movsx   ax, byte ptr [edx+35h]
movsx   ecx, word ptr [edx+4eh]
push    eax
push    ecx
lea     eax, [edx+6ah]
add     edx, 62h
mov     ecx, [eax]
mov     eax, [eax+4]
push    eax
push    ecx
mov     eax, [edx]
mov     ecx, [edx+4]
mov     edx, [esp+10h+lprc]
push    ecx
push    eax
push    edx
call    sub_453010
add     esp, 1ch
retn
mov     eax, [esp+arg_4]
sub     esp, 18h
cmp     eax, 2bh
push    ebx
push    esi
push    edi
ja      short def_463b27
xor     ecx, ecx
mov     cl, ds:byte_463c80[eax]
jmp     ds:jpt_463b27[ecx*4]
mov     esi, [esp+24h+arg_8]
mov     edi, [esp+24h+arg_0]
push    esi
push    eax
push    edi
call    sub_40fd60
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     esi, [esp+24h+arg_8]
mov     edi, [esp+24h+arg_0]
mov     cx, [edi+1ch]
lea     ebx, [edi+0ch]
mov     eax, [esi+0ch]
push    eax
push    ebx
push    ecx
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_463b8e
call    sub_40ac00
push    eax
mov     ecx, [ebx+8]
mov     eax, [ebx+0ch]
mov     edx, [ebx+4]
push    eax
add     edi, 32h
push    ecx
mov     eax, [ebx]
push    edx
mov     ecx, [esi+0ch]
push    eax
push    edi
push    ecx
call    sub_451d90
add     esp, 1ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     esi, [esp+24h+arg_8]
mov     edx, [esi+4]
add     edx, 3
mov     [esp+24h+var_4], edx
lea     eax, [edx-6]
mov     edi, [esp+24h+arg_0]
mov     [esp+24h+var_c], eax
mov     eax, [esi]
add     eax, 3
mov     [esp+24h+var_8], eax
lea     ecx, [eax-6]
mov     [esp+24h+var_10], ecx
movsx   ecx, word ptr [edi+4eh]
mov     [esp+24h+var_18], ecx
lea     ecx, [esp+24h+var_18]
movsx   eax, word ptr [edi+50h]
mov     [esp+24h+var_14], eax
lea     eax, [edi+0ch]
movsx   edx, word ptr [edi+36h]
push    edx
push    ecx
lea     edx, [esp+2ch+var_10]
push    eax
push    edx
call    sub_454220
add     esp, 10h
test    eax, eax
jz      short loc_463c01
mov     eax, 0ffffffffh
mov     [esi+98h], edi
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     edi, [esp+24h+arg_0]
cmp     dword ptr [edi+6], offset sub_463b10
jnz     short loc_463c35
cmp     word ptr [edi+36h], 0
jz      short loc_463c35
mov     al, [edi+32h]
cmp     al, 4
jz      short loc_463c29
test    al, al
jnz     short loc_463c35
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     edi, [esp+24h+arg_0]
movsx   eax, word ptr [edi+4eh]
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+arg_4]
sub     esp, 18h
test    eax, eax
push    ebx
push    esi
push    edi
jz      short loc_463cdd
mov     esi, [esp+24h+arg_8]
cmp     eax, 1
jz      short loc_463d2c
mov     edi, [esp+24h+arg_0]
push    esi
push    eax
push    edi
call    sub_463b10
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     esi, [esp+24h+arg_8]
mov     edi, [esp+24h+arg_0]
mov     cx, [edi+1ch]
lea     ebx, [edi+0ch]
mov     eax, [esi+0ch]
push    eax
push    ebx
push    ecx
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_463d23
call    sub_40ac00
push    eax
mov     ecx, [ebx+8]
mov     eax, [ebx+0ch]
mov     edx, [ebx+4]
push    eax
add     edi, 32h
push    ecx
mov     eax, [ebx]
push    edx
mov     ecx, [esi+0ch]
push    eax
push    edi
push    ecx
call    sub_451e50
add     esp, 1ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     edx, [esi+4]
add     edx, 3
mov     [esp+24h+var_4], edx
lea     eax, [edx-6]
mov     edi, [esp+24h+arg_0]
mov     [esp+24h+var_c], eax
mov     eax, [esi]
add     eax, 3
mov     [esp+24h+var_8], eax
lea     ecx, [eax-6]
mov     [esp+24h+var_10], ecx
movsx   ecx, word ptr [edi+4eh]
mov     [esp+24h+var_18], ecx
lea     ecx, [esp+24h+var_18]
movsx   eax, word ptr [edi+50h]
mov     [esp+24h+var_14], eax
lea     eax, [edi+0ch]
movsx   edx, word ptr [edi+36h]
push    edx
push    ecx
lea     edx, [esp+2ch+var_10]
push    eax
push    edx
call    sub_4542c0
add     esp, 10h
test    eax, eax
jz      short loc_463d92
mov     eax, 0ffffffffh
mov     [esi+98h], edi
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
push    ebp
push    esi
call    sub_466cd0
mov     ebx, [esp+24h+arg_4]
add     esp, 4
cmp     ebx, 6ah
ja      def_463dc9
xor     eax, eax
mov     al, ds:byte_464054[ebx]
jmp     ds:jpt_463dc9[eax*4]
cmp     dword ptr [esi+62h], 0
mov     edi, [esp+20h+arg_8]
jz      loc_46401b
test    byte ptr [edi+0ah], 6
jz      loc_46401b
push    esi
call    sub_466d30
add     esp, 4
test    eax, eax
jz      loc_46401b
lea     ebp, [esi+0ch]
lea     ecx, [esp+20h+rcdst]
mov     eax, [ebp+0]
mov     [ecx], eax
push    offset rcsrc2
mov     edx, [ebp+4]
mov     [ecx+4], edx
mov     eax, [ebp+8]
mov     [ecx+8], eax
mov     edx, [ebp+0ch]
mov     [ecx+0ch], edx
lea     ecx, [esp+24h+rcdst]
push    ecx
lea     ecx, [esp+28h+rcdst]
push    ecx
call    ds:intersectrect
mov     ax, [esi+1ch]
mov     ecx, [edi+0ch]
lea     edx, [esp+20h+rcdst]
push    ecx
push    edx
push    eax
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      loc_46401b
push    ebp
mov     eax, [edi+0ch]
push    eax
push    esi
call    sub_466490
add     esp, 0ch
jmp     loc_46401b
mov     edi, [esp+20h+arg_8]
lea     edx, [esi+0ch]
mov     eax, [edi]
mov     ecx, [edi+4]
push    ecx
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jz      short loc_463e96
push    esi
call    sub_466fa0
add     esp, 4
test    eax, eax
jnz     short loc_463e96
mov     eax, 0ffffffffh
pop     ebp
mov     [edi+98h], esi
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     edi, [esp+20h+arg_8]
lea     edx, [esi+0ch]
mov     eax, [edi]
mov     ecx, [edi+4]
push    ecx
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jnz     short loc_463ec3
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
cmp     dword ptr [esi+62h], 0
jz      loc_46401b
push    esi
call    sub_466f20
add     esp, 4
cmp     ax, 1
jz      short loc_463eec
cmp     ax, 2
jnz     loc_46401b
cmp     ax, 1
jnz     short loc_463ef3
cmp     word ptr [edi+0ah], 0
jz      short loc_463f08
cmp     ax, 2
jnz     loc_46401b
cmp     word ptr [edi+0ah], 0
jz      loc_46401b
push    esi
call    sub_466e40
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     edi, [esp+20h+arg_8]
add     edi, 10h
push    edi
push    esi
call    sub_4643f0
add     esp, 8
lea     eax, [esi+0ch]
push    eax
push    esi
call    sub_466a10
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    esi
call    sub_4643c0
mov     edi, [esp+24h+arg_8]
add     esp, 4
jmp     loc_46401b
call    sub_466a50
mov     edi, [esp+20h+arg_8]
jmp     loc_46401b
mov     edi, [esp+20h+arg_8]
push    esi
mov     ebx, [edi+0a6h]
call    sub_466820
add     esp, 4
test    eax, eax
jnz     short loc_463f8d
xor     eax, eax
pop     ebp
mov     word ptr [edi+0ah], 4c7h
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    esi
call    sub_4640c0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_463fbe
mov     eax, [edi+98h]
push    eax
push    1
push    esi
call    ebx
add     esp, 0ch
push    esi
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     ebp
mov     word ptr [edi+0ah], 8
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     edi, [esp+20h+arg_8]
mov     eax, [edi+98h]
push    eax
push    1
call    dword ptr [edi+0a6h]
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_464007
push    esi
push    ebx
call    sub_464290
add     esp, 8
push    ebx
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     ebp
mov     word ptr [edi+0ah], 8
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     edi, [esp+20h+arg_8]
push    edi
push    ebx
push    esi
call    sub_40fd60
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 4
mov     [esp+4+var_4], 0
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
test    esi, esi
jz      loc_464183
cmp     dword ptr [esi+62h], 0
jz      loc_464183
push    5
call    sub_40d4a0
add     esp, 4
mov     ebx, eax
push    esi
call    sub_466820
add     esp, 4
test    eax, eax
jz      short loc_46417a
call    sub_466bc0
test    eax, eax
jz      short loc_464154
push    esi
call    sub_466f60
add     esp, 4
mov     ebp, eax
mov     eax, ebp
test    ebp, ebp
jnz     short loc_46411d
call    sub_40ae50
push    eax
lea     eax, [esi+0ch]
push    eax
push    esi
call    sub_464420
add     esp, 0ch
mov     edi, eax
test    ebp, ebp
jz      short loc_46413a
push    ebp
call    sub_466f90
add     esp, 4
mov     eax, [esi+72h]
test    eax, eax
jz      short loc_464151
push    eax
call    sub_45ba00
mov     dword ptr [esi+72h], 0
add     esp, 4
mov     [esi+72h], edi
push    esi
call    sub_4668e0
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_46417a
push    edi
push    esi
call    sub_464190
mov     [esp+1ch+var_4], eax
add     esp, 8
push    edi
call    sub_45ba00
add     esp, 4
push    ebx
call    sub_40d4a0
add     esp, 4
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
push    edi
push    ebp
push    42h
push    2ah
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_464285
push    esi
call    ds:globallock
mov     ebx, eax
test    ebx, ebx
jz      loc_46427e
mov     ebp, [esp+10h+arg_0]
mov     dword ptr [ebx], 2ah
mov     word ptr [ebx+4], 0
mov     dword ptr [ebx+6], 0
mov     eax, [ebp+0ch]
mov     [ebx+0ah], ax
push    ebx
mov     ecx, [ebp+10h]
push    ebp
mov     [ebx+0ch], cx
mov     edx, [ebp+14h]
mov     [ebx+0eh], dx
mov     eax, [ebp+18h]
mov     [ebx+10h], ax
call    sub_466e80
mov     ecx, [esp+18h+hmem]
add     esp, 8
push    ecx
call    sub_45bbc0
add     esp, 4
mov     edi, eax
push    esi
call    ds:globalunlock
mov     ecx, [ebx]
mov     eax, [esp+10h+hmem]
push    ecx
push    edi
mov     edx, [eax]
push    edx
push    esi
call    sub_45bb60
add     esp, 10h
mov     esi, eax
push    esi
call    ds:globallock
mov     [eax+26h], edi
mov     ebx, eax
add     [eax], edi
mov     eax, [ebp+72h]
test    eax, eax
jz      short loc_46426e
push    eax
call    sub_45bbc0
add     esp, 4
mov     edi, eax
push    esi
call    ds:globalunlock
mov     eax, [ebx]
mov     ecx, [ebp+72h]
push    eax
push    edi
mov     edx, [ecx]
push    edx
push    esi
call    sub_45bb60
add     esp, 10h
mov     esi, eax
push    esi
call    ds:globallock
mov     [eax+1eh], edi
mov     ebx, eax
add     [eax], edi
mov     dword ptr [ebx+22h], 2ah
mov     eax, [ebx+26h]
add     eax, 2ah
mov     [ebx+1ah], eax
push    esi
call    ds:globalunlock
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+hmem]
push    edi
push    ebp
xor     edi, edi
cmp     ebx, edi
jz      short loc_4642fb
mov     esi, [esp+14h+arg_4]
cmp     esi, edi
jz      short loc_4642fb
push    ebx
call    ds:globallock
mov     ebp, eax
push    5
call    sub_40d4a0
mov     [esp+18h+var_4], eax
add     esp, 4
test    ebp, ebp
jz      short loc_4642d8
push    esi
push    ebp
push    ebp
call    sub_464310
add     esp, 0ch
mov     edi, eax
push    ebx
call    ds:globalunlock
test    edi, edi
jz      short loc_4642e7
push    esi
call    sub_466cd0
add     esp, 4
jmp     short loc_4642ee
mov     dword ptr [esi+62h], 0
mov     eax, [esp+14h+var_4]
push    eax
call    sub_40d4a0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+0ch+arg_0]
push    ebp
cmp     esi, ebx
jz      loc_4643b7
mov     edi, [esp+10h+arg_8]
cmp     edi, ebx
jz      loc_4643b7
mov     eax, [esi+26h]
push    eax
mov     eax, [esi+22h]
add     eax, [esp+14h+arg_4]
push    eax
call    sub_45b910
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_4643b7
push    ebp
push    edi
call    sub_466930
add     esp, 8
mov     ebx, eax
lea     ecx, [edi+0ch]
movsx   eax, word ptr [esi+0ah]
mov     [ecx], eax
push    ecx
movsx   edx, word ptr [esi+0ch]
push    edi
mov     [edi+10h], edx
movsx   eax, word ptr [esi+0eh]
mov     [edi+14h], eax
movsx   edx, word ptr [esi+10h]
mov     [edi+18h], edx
call    sub_466a10
add     esp, 8
push    esi
push    edi
call    sub_466ec0
add     esp, 8
call    sub_466bc0
test    eax, eax
jnz     short loc_4643ae
mov     eax, [esi+1eh]
test    eax, eax
jz      short loc_4643ae
push    eax
mov     eax, [esi+1ah]
add     eax, [esp+14h+arg_4]
push    eax
call    sub_45b910
add     esp, 8
test    eax, eax
jz      short loc_4643ae
mov     [edi+72h], eax
push    ebp
call    sub_45ba00
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+62h], 0
jz      short loc_4643e8
push    esi
call    sub_466820
add     esp, 4
test    eax, eax
jz      short loc_4643e8
push    esi
call    sub_466870
mov     dword ptr [esi+62h], 0
add     esp, 4
pop     esi
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
add     edx, 0ch
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
xor     edi, edi
cmp     [esp+20h+arg_0], edi
jz      loc_46456d
mov     eax, [esp+20h+arg_4]
cmp     eax, edi
jz      loc_46456d
cmp     [esp+20h+hpal], edi
jz      loc_46456d
mov     esi, [eax+8]
mov     ebp, [eax+0ch]
sub     esi, [eax]
sub     ebp, [eax+4]
mov     [esp+20h+x], edi
push    edi
mov     [esp+24h+y], edi
mov     [esp+24h+w], esi
mov     [esp+24h+h], ebp
call    ds:getdc
cmp     eax, edi
mov     ebx, eax
jz      short loc_464486
push    ebp
push    esi
push    ebx
call    ds:createcompatiblebitmap
mov     esi, eax
push    ebx
push    edi
call    ds:releasedc
jmp     short loc_46448a
mov     esi, [esp+20h+x]
test    esi, esi
jnz     short loc_464498
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    0
call    ds:createcompatibledc
mov     ebx, eax
push    esi
test    ebx, ebx
jnz     short loc_4644b7
call    ds:deleteobject
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    ebx
call    ds:selectobject
mov     edi, eax
test    edi, edi
jnz     short loc_4644dc
push    ebx
call    ds:deletedc
push    esi
call    ds:deleteobject
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
cmp     [esp+20h+hpal], 0
jz      short loc_464500
mov     eax, [esp+20h+hpal]
push    0
push    eax
push    ebx
call    ds:selectpalette
mov     ebp, eax
test    ebp, ebp
jz      short loc_464502
push    ebx
call    ds:realizepalette
jmp     short loc_464502
xor     ebp, ebp
mov     eax, [esp+20h+h]
push    0ff0062h
mov     ecx, [esp+24h+w]
push    eax
mov     edx, [esp+28h+y]
push    ecx
mov     eax, [esp+2ch+x]
push    edx
push    eax
push    ebx
call    ds:patblt
lea     ecx, [esp+20h+x]
mov     edx, [esp+20h+arg_0]
push    ecx
push    ebx
push    edx
call    sub_466490
add     esp, 0ch
test    ebp, ebp
jz      short loc_464543
push    0
push    ebp
push    ebx
call    ds:selectpalette
push    edi
push    ebx
call    ds:selectobject
push    ebx
call    ds:deletedc
mov     eax, [esp+20h+hpal]
push    eax
push    0
push    1
push    esi
call    sub_40f140
add     esp, 10h
mov     edi, eax
push    esi
call    ds:deleteobject
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
push    esi
mov     dword ptr [ecx], offset off_4ab640
mov     [ecx+10h], eax
mov     esi, ecx
xor     ecx, ecx
push    ecx
mov     [esi+4], ecx
mov     [esi+0ch], ecx
mov     [esi+8], ecx
call    ds:oleinitialize
mov     eax, esi
pop     esi
retn    4
push    ebx
mov     eax, 80004002h
mov     ebx, [esp+4+arg_8]
push    esi
push    edi
mov     ecx, 10h
mov     edi, offset dword_4abe40
mov     edx, [esp+0ch+arg_4]
mov     esi, edx
mov     dword ptr [ebx], 0
repe cmpsb
jnz     short loc_4645ea
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx]
push    ecx
mov     [ebx], ecx
call    dword ptr [eax+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abe50
mov     ecx, 10h
mov     esi, edx
repe cmpsb
jnz     short loc_464612
mov     ecx, [esp+0ch+arg_0]
mov     edx, [ecx+8]
test    edx, edx
jz      short loc_464612
mov     [ebx], edx
mov     eax, [ecx+8]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+4]
inc     eax
mov     [ecx+4], eax
retn    4
mov     ecx, [esp+arg_0]
mov     eax, [ecx+4]
dec     eax
mov     [ecx+4], eax
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     dword ptr [ecx], offset off_4ab650
mov     [ecx+14h], eax
mov     dword ptr [ecx+4], 0
mov     esi, ecx
push    18h
mov     eax, [eax+40h]
mov     [esi+10h], eax
mov     ecx, [eax+6ch]
mov     [esi+18h], ecx
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_46467e
push    esi
mov     ecx, eax
call    sub_4647f0
mov     [esi+8], eax
jmp     short loc_464685
mov     dword ptr [esi+8], 0
push    14h
call    ??2@yapaxi@z
add     esp, 4
mov     ecx, eax
test    ecx, ecx
jz      short loc_4646a4
push    esi
call    sub_4648e0
mov     [esi+0ch], eax
mov     eax, esi
pop     esi
retn    4
mov     dword ptr [esi+0ch], 0
mov     eax, esi
pop     esi
retn    4
push    esi
push    edi
mov     esi, [ecx+8]
mov     dword ptr [ecx], offset off_4ab650
mov     edi, ecx
test    esi, esi
jz      short loc_4646e8
mov     ecx, esi
call    sub_464820
push    esi
call    ??3@yaxpax@z
mov     dword ptr [edi+8], 0
add     esp, 4
mov     esi, [edi+0ch]
test    esi, esi
jz      short loc_464706
mov     ecx, esi
call    sub_464910
push    esi
call    ??3@yaxpax@z
mov     dword ptr [edi+0ch], 0
add     esp, 4
pop     edi
pop     esi
retn
push    ebx
mov     eax, 80004002h
mov     edx, [esp+4+arg_8]
push    esi
push    edi
mov     ecx, 10h
mov     edi, offset dword_4abe40
mov     ebx, [esp+0ch+arg_4]
mov     esi, ebx
mov     dword ptr [edx], 0
repe cmpsb
jnz     short loc_46474a
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx]
push    ecx
mov     [edx], ecx
call    dword ptr [eax+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abea0
mov     ecx, 10h
mov     esi, ebx
repe cmpsb
jnz     short loc_464774
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx+8]
mov     [edx], eax
mov     eax, [ecx+8]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abeb0
mov     ecx, 10h
mov     esi, ebx
repe cmpsb
jnz     short loc_46479e
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx+8]
mov     [edx], eax
mov     eax, [ecx+8]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abf00
mov     ecx, 10h
mov     esi, ebx
repe cmpsb
jnz     short loc_4647c2
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx+8]
mov     [edx], eax
mov     eax, [ecx+8]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+4]
inc     eax
mov     [ecx+4], eax
retn    4
mov     ecx, [esp+arg_0]
mov     eax, [ecx+4]
dec     eax
mov     [ecx+4], eax
retn    4
mov     edx, [esp+arg_0]
mov     dword ptr [ecx], offset off_4ab660
mov     dword ptr [ecx+4], 0
mov     eax, [edx+10h]
mov     [ecx+8], eax
mov     eax, [edx+14h]
mov     [ecx+0ch], eax
mov     eax, [edx+18h]
mov     [ecx+10h], eax
mov     [ecx+14h], edx
mov     eax, ecx
retn    4
mov     dword ptr [ecx], offset off_4ab660
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_8]
push    edx
mov     ecx, [eax+14h]
mov     eax, [esp+4+arg_4]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
mov     eax, [esp+arg_0]
mov     eax, [eax+14h]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
retn    4
xor     eax, eax
mov     ecx, [esp+arg_0]
mov     ecx, [ecx+14h]
test    ecx, ecx
jz      short locret_464873
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
retn    4
xor     eax, eax
retn    14h
xor     eax, eax
retn    0ch
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
mov     [ecx+4], eax
xor     eax, eax
retn    8
xor     eax, eax
retn    18h
xor     eax, eax
retn    14h
xor     eax, eax
retn    8
mov     edx, [esp+arg_0]
mov     dword ptr [ecx], offset off_4ab688
mov     eax, [edx+10h]
mov     [ecx+4], eax
mov     eax, [edx+14h]
mov     [ecx+8], eax
mov     eax, [edx+18h]
mov     [ecx+0ch], eax
mov     [ecx+10h], edx
mov     eax, ecx
retn    4
mov     dword ptr [ecx], offset off_4ab688
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_8]
push    edx
mov     ecx, [eax+10h]
mov     eax, [esp+4+arg_4]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    0ch
mov     eax, [esp+arg_0]
mov     eax, [eax+10h]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
retn    4
xor     eax, eax
mov     ecx, [esp+arg_0]
mov     ecx, [ecx+10h]
test    ecx, ecx
jz      short locret_464963
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
retn    4
sub     esp, 4
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     edi, [esp+10h+arg_0]
push    ebp
xor     ebp, ebp
mov     esi, [esp+14h+arg_4]
mov     [esp+14h+var_4], ebx
push    ebx
mov     ecx, [edi+8]
call    sub_467be0
mov     ebx, eax
test    ebx, ebx
jz      short loc_4649b1
test    esi, esi
jz      short loc_4649ab
cmp     ebx, esi
jnz     short loc_4649ad
push    ebx
mov     ecx, [edi+8]
call    sub_467be0
mov     ebp, eax
jmp     short loc_4649ad
mov     ebp, ebx
test    ebp, ebp
jz      short loc_464987
test    ebp, ebp
jz      short loc_4649b9
mov     [esp+14h+var_4], ebp
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    8
mov     ecx, [esp+arg_4]
push    esi
push    edi
mov     esi, 80004005h
test    ecx, ecx
jz      short loc_464a06
push    offset dword_4abef0
call    sub_4687c0
mov     edi, eax
test    edi, edi
jz      short loc_464a06
mov     eax, [esp+8+arg_8]
mov     esi, [edi]
push    eax
push    edi
call    dword ptr [esi+0ch]
mov     esi, eax
test    edi, edi
jz      short loc_464a06
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, esi
pop     edi
pop     esi
retn    0ch
mov     ecx, [esp+arg_4]
push    ebx
push    esi
test    ecx, ecx
push    edi
mov     edi, 80004005h
jz      short loc_464a4f
mov     esi, [esp+0ch+arg_8]
test    esi, esi
jz      short loc_464a4f
test    ecx, ecx
jz      short loc_464a4f
push    offset dword_4abef0
call    sub_4687c0
mov     ebx, eax
test    ebx, ebx
jz      short loc_464a4f
push    esi
mov     eax, [ebx]
push    ebx
call    dword ptr [eax+10h]
mov     edi, eax
test    ebx, ebx
jz      short loc_464a4f
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+8]
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn    0ch
sub     esp, 9ch
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, 80004005h
mov     edi, [esp+0ach+lpmultibytestr]
test    edi, edi
jz      short loc_464a91
lea     eax, [esp+0ach+widecharstr]
push    80h
push    eax
push    0ffffffffh
push    edi
push    0
push    0
call    ds:multibytetowidechar
mov     esi, [esp+0ach+arg_4]
xor     ebx, ebx
test    esi, esi
jz      loc_464cab
mov     eax, ds:dword_4abfb0
mov     ebp, ds:dword_4abfb4
mov     edx, offset dword_4abfb0
lea     ecx, [esp+0ach+var_90]
mov     [esp+0ach+ppmk], ebx
mov     [ecx], eax
mov     eax, [edx+8]
mov     [ecx+4], ebp
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
cmp     [esp+0ach+arg_14], ebx
mov     dword ptr [esi+0eeh], 1
jz      loc_464ba5
lea     eax, [esp+0ach+ppbc]
mov     ebp, ds:createbindctx
mov     [esp+0ach+ppbc], ebx
push    eax
push    ebx
call    ebp
mov     ebp, eax
test    ebp, ebp
jl      loc_464b91
cmp     [esp+0ach+ppbc], ebx
jz      loc_464b91
lea     eax, [esp+0ach+ppmk]
mov     ecx, [esp+0ach+pcheaten]
lea     edx, [esp+0ach+widecharstr]
push    eax
mov     eax, [esp+0b0h+ppbc]
push    ecx
push    edx
mov     ebp, ds:mkparsedisplayname
push    eax
call    ebp
mov     ebp, eax
test    ebp, ebp
jl      short loc_464b91
cmp     [esp+0ach+ppmk], ebx
jz      short loc_464b91
lea     eax, [esp+0ach+pmkrest]
mov     ecx, [esp+0ach+ppbc]
mov     edx, [esp+0ach+ppmk]
push    eax
mov     [esp+0b0h+pmkrest], ebx
push    offset iid
push    ebx
mov     eax, [edx]
push    ecx
push    edx
call    dword ptr [eax+20h]
mov     ebp, eax
test    ebp, ebp
jl      short loc_464b76
cmp     [esp+0ach+pmkrest], ebx
jz      short loc_464b76
lea     eax, [esp+0ach+var_90]
mov     ecx, [esp+0ach+pmkrest]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+3ch]
mov     ebp, eax
mov     [esi+0eeh], ebx
jmp     short loc_464b80
mov     dword ptr [esi+0eeh], 1
cmp     [esp+0ach+pmkrest], 0
jz      short loc_464b91
mov     eax, [esp+0ach+pmkrest]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
cmp     [esp+0ach+ppbc], 0
jz      loc_464c3d
mov     eax, [esp+0ach+ppbc]
jmp     loc_464c37
xor     ebx, ebx
lea     eax, [esp+0ach+ppbc]
lea     ecx, [esp+0ach+widecharstr]
push    eax
push    ecx
mov     ebp, ds:createfilemoniker
mov     [esp+0b4h+ppbc], ebx
call    ebp
mov     ebp, eax
test    ebp, ebp
jl      loc_464c83
cmp     [esp+0ach+ppbc], ebx
jz      short loc_464c3d
push    edi
call    ds:lstrlena
cmp     eax, [esp+0ach+arg_c]
jle     short loc_464c2c
lea     eax, [esp+0ach+pmkrest]
lea     ecx, [esp+0ach+widecharstr]
push    eax
mov     ebp, ds:createitemmoniker
mov     [esp+0b0h+pmkrest], ebx
push    ecx
push    offset szdelim
call    ebp
mov     ebp, eax
test    ebp, ebp
jl      short loc_464c1b
cmp     [esp+0ach+pmkrest], ebx
jz      short loc_464c1b
lea     eax, [esp+0ach+ppmk]
mov     ecx, [esp+0ach+pmkrest]
mov     edx, [esp+0ach+ppbc]
push    eax
push    ecx
push    edx
call    ds:creategenericcomposite
mov     ebp, eax
cmp     [esp+0ach+pmkrest], 0
jz      short loc_464c2c
mov     eax, [esp+0ach+pmkrest]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
cmp     [esp+0ach+ppbc], 0
jz      short loc_464c3d
mov     eax, [esp+0ach+ppbc]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
test    ebp, ebp
jl      short loc_464c83
push    offset dword_4abef0
mov     ecx, esi
call    sub_4687c0
mov     edi, eax
test    edi, edi
jz      short loc_464c83
cmp     [esp+0ach+ppmk], 0
jz      short loc_464c6c
lea     eax, [esp+0ach+var_90]
mov     ecx, [esp+0ach+ppmk]
push    eax
mov     ebx, [edi]
push    ecx
push    edi
call    dword ptr [ebx+14h]
jmp     short loc_464c77
lea     eax, [esp+0ach+widecharstr]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+1ch]
mov     ebp, eax
test    edi, edi
jz      short loc_464c83
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
cmp     [esp+0ach+ppmk], 0
jz      short loc_464c9c
mov     eax, [esp+0ach+ppmk]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     [esp+0ach+ppmk], 0
test    esi, esi
jz      short loc_464cab
test    ebp, ebp
jl      short loc_464cad
mov     ecx, esi
call    sub_468920
test    ebp, ebp
mov     eax, ebp
jz      short loc_464cb6
mov     eax, 80004005h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 9ch
retn    18h
mov     eax, [esp+arg_4]
sub     esp, 10h
test    eax, eax
push    ebx
mov     [esp+14h+var_4], 80004005h
push    esi
push    edi
push    ebp
jz      loc_464e75
mov     ebp, [esp+20h+arg_8]
mov     [esp+20h+var_8], eax
test    ebp, ebp
jz      short loc_464cfe
mov     dword ptr [ebp+0], 0
mov     ebx, [esp+20h+arg_10]
test    ebx, ebx
jz      short loc_464d0c
mov     dword ptr [ebx], 0
cmp     [esp+20h+arg_14], 0
jz      short loc_464d1d
mov     ecx, [esp+20h+arg_14]
mov     dword ptr [ecx], 0
cmp     [esp+20h+arg_c], 0
jz      short loc_464d2e
mov     ecx, [esp+20h+arg_c]
mov     dword ptr [ecx], 0
mov     ecx, [esp+20h+arg_18]
test    ecx, ecx
jz      short loc_464d3c
mov     dword ptr [ecx], 0
cmp     [esp+20h+arg_1c], 0
jz      short loc_464d4d
mov     edx, [esp+20h+arg_1c]
mov     dword ptr [edx], 0
test    ecx, ecx
jz      short loc_464d62
mov     eax, [esp+20h+var_8]
cmp     dword ptr [eax+0eeh], 1
sbb     eax, eax
neg     eax
mov     [ecx], eax
mov     ecx, [esp+20h+var_8]
push    offset dword_4abef0
call    sub_4687c0
mov     esi, eax
test    esi, esi
jz      loc_464e75
lea     eax, [esp+20h+var_10]
mov     edi, [esi]
mov     [esp+20h+var_10], 0
push    eax
push    esi
call    dword ptr [edi+18h]
mov     [esp+20h+var_c], eax
test    eax, eax
jl      loc_464e5a
push    offset iid
push    esi
call    dword_4ae2f8
mov     edi, eax
test    edi, edi
jz      short loc_464dfa
test    ebx, ebx
jz      short loc_464dcb
push    ebx
mov     eax, [edi]
push    1
push    edi
call    dword ptr [eax+40h]
mov     eax, [ebx]
test    eax, eax
jz      short loc_464dcb
push    1
push    eax
call    sub_464f50
add     esp, 8
mov     [ebx], eax
cmp     [esp+20h+arg_14], 0
jz      short loc_464dfa
mov     ecx, [esp+20h+arg_14]
mov     eax, [edi]
push    ecx
push    2
push    edi
call    dword ptr [eax+40h]
mov     ecx, [esp+20h+arg_14]
mov     eax, [ecx]
test    eax, eax
jz      short loc_464dfa
push    1
push    eax
call    sub_464f50
mov     ecx, [esp+28h+arg_14]
add     esp, 8
mov     [ecx], eax
test    ebp, ebp
jz      short loc_464e32
push    ebp
mov     eax, [esi]
push    esi
call    dword ptr [eax+20h]
mov     [esp+20h+var_c], eax
mov     eax, [ebp+0]
test    eax, eax
jz      short loc_464e32
push    1
push    eax
call    sub_464f50
add     esp, 8
mov     [ebp+0], eax
cmp     [esp+20h+arg_c], 0
jz      short loc_464e32
push    eax
call    ds:lstrlena
mov     ecx, [esp+20h+arg_c]
mov     [ecx], eax
cmp     [esp+20h+arg_1c], 0
jz      short loc_464e48
mov     ecx, [esp+20h+var_8]
call    sub_4687e0
mov     edx, [esp+20h+arg_1c]
mov     [edx], eax
mov     eax, [esp+20h+var_c]
test    edi, edi
mov     [esp+20h+var_4], eax
jz      short loc_464e5a
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
cmp     [esp+20h+var_10], 0
jz      short loc_464e6b
mov     eax, [esp+20h+var_10]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
test    esi, esi
jz      short loc_464e75
push    esi
mov     eax, [esi]
call    dword ptr [eax+8]
mov     eax, [esp+20h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn    20h
push    esi
push    edi
mov     esi, 80004005h
mov     edi, [esp+8+arg_4]
test    edi, edi
jz      short loc_464ebf
push    0ffffffffh
mov     ecx, edi
call    sub_468500
test    eax, eax
jz      short loc_464eae
xor     esi, esi
mov     eax, 1
test    esi, esi
jl      short loc_464eb9
xor     eax, eax
mov     [edi+0eeh], eax
mov     eax, esi
pop     edi
pop     esi
retn    8
push    esi
mov     eax, 80004005h
mov     esi, [esp+4+arg_4]
test    esi, esi
jz      short loc_464efa
mov     ecx, [esi+9eh]
test    ecx, ecx
jz      short loc_464efa
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+34h]
cmp     eax, 1
sbb     ecx, ecx
inc     ecx
mov     [esi+0eeh], ecx
pop     esi
retn    10h
push    ebx
push    esi
push    edi
mov     ebx, 80004005h
mov     esi, [esp+0ch+block]
push    ebp
test    esi, esi
jz      short loc_464f47
push    offset dword_4abef0
mov     ecx, esi
call    sub_4687c0
mov     edi, eax
test    edi, edi
jz      short loc_464f47
mov     ebp, [edi]
push    offset dword_4abfb0
push    0
push    edi
call    dword ptr [ebp+14h]
push    edi
call    dword ptr [ebp+8]
mov     eax, [esp+10h+arg_0]
push    esi
mov     ecx, [eax+8]
call    sub_467c60
test    eax, eax
jz      short loc_464f47
xor     ebx, ebx
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
sub     esp, 80h
push    esi
push    edi
mov     esi, [esp+88h+lpwidecharstr]
test    esi, esi
jz      short loc_464fb9
lea     eax, [esp+88h+multibytestr]
push    0
push    0
push    80h
push    eax
push    0ffffffffh
push    esi
push    0
push    0
call    ds:widechartomultibyte
cmp     [esp+88h+arg_4], 0
jz      short loc_464fad
lea     eax, [esp+88h+multibytestr]
push    0
push    eax
call    dword_4ae328
mov     edi, eax
push    0
push    esi
call    dword_4ae324
mov     eax, edi
mov     esi, edi
pop     edi
pop     esi
add     esp, 80h
retn
lea     eax, [esp+88h+multibytestr]
push    eax
push    esi
call    ds:lstrcpya
mov     eax, esi
pop     edi
pop     esi
add     esp, 80h
retn
push    esi
push    edi
mov     dword ptr [ecx], offset off_4ab6b8
mov     esi, ecx
xor     edi, edi
mov     eax, [esp+8+arg_0]
mov     [esi+4], edi
mov     [esi+8], edi
mov     [esi+0ch], edi
mov     [esi+10h], edi
mov     [esi+30h], eax
mov     ecx, [eax+116h]
mov     [esi+2ch], ecx
mov     edx, [eax+112h]
mov     [esi+28h], edx
push    20h
mov     eax, [ecx+38h]
mov     [esi+34h], eax
mov     ecx, [ecx+3ch]
mov     [esi+38h], ecx
mov     [esi+1ch], edi
mov     [esi+20h], edi
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_46502e
push    esi
mov     ecx, eax
call    sub_465f70
mov     [esi+14h], eax
jmp     short loc_465035
mov     dword ptr [esi+14h], 0
push    20h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_465050
push    esi
mov     ecx, eax
call    sub_4661d0
mov     [esi+18h], eax
jmp     short loc_465057
mov     dword ptr [esi+18h], 0
push    20h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_465072
push    esi
mov     ecx, eax
call    sub_465b40
mov     [esi+24h], eax
jmp     short loc_465079
mov     dword ptr [esi+24h], 0
push    20h
call    ??2@yapaxi@z
add     esp, 4
mov     ecx, eax
test    ecx, ecx
jz      short loc_465094
push    esi
call    sub_465490
mov     [esi+1ch], eax
jmp     short loc_46509b
mov     dword ptr [esi+1ch], 0
push    20h
call    ??2@yapaxi@z
add     esp, 4
mov     ecx, eax
test    ecx, ecx
jz      short loc_4650bb
push    esi
call    sub_4659c0
pop     edi
mov     [esi+20h], eax
mov     eax, esi
pop     esi
retn    4
mov     eax, esi
pop     edi
mov     dword ptr [esi+20h], 0
pop     esi
retn    4
push    esi
push    edi
mov     esi, [ecx+14h]
mov     dword ptr [ecx], offset off_4ab6b8
mov     edi, ecx
test    esi, esi
jz      short loc_4650f8
mov     ecx, esi
call    sub_465fb0
push    esi
call    ??3@yaxpax@z
mov     dword ptr [edi+14h], 0
add     esp, 4
mov     esi, [edi+18h]
test    esi, esi
jz      short loc_465116
mov     ecx, esi
call    sub_466210
push    esi
call    ??3@yaxpax@z
mov     dword ptr [edi+18h], 0
add     esp, 4
mov     esi, [edi+24h]
test    esi, esi
jz      short loc_465134
mov     ecx, esi
call    sub_465b80
push    esi
call    ??3@yaxpax@z
mov     dword ptr [edi+24h], 0
add     esp, 4
mov     esi, [edi+1ch]
test    esi, esi
jz      short loc_465152
mov     ecx, esi
call    sub_4654d0
push    esi
call    ??3@yaxpax@z
mov     dword ptr [edi+1ch], 0
add     esp, 4
mov     esi, [edi+20h]
test    esi, esi
jz      short loc_465170
mov     ecx, esi
call    sub_465a00
push    esi
call    ??3@yaxpax@z
mov     dword ptr [edi+20h], 0
add     esp, 4
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_465184
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     dword ptr [edi+10h], 0
pop     edi
pop     esi
retn
push    ebx
mov     eax, 80004002h
mov     edx, [esp+4+arg_8]
push    esi
push    edi
mov     ecx, 10h
mov     edi, offset dword_4abe40
mov     ebx, [esp+0ch+arg_4]
mov     esi, ebx
mov     dword ptr [edx], 0
repe cmpsb
jnz     short loc_4651ca
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx]
push    ecx
mov     [edx], ecx
call    dword ptr [eax+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abec0
mov     ecx, 10h
mov     esi, ebx
repe cmpsb
jnz     short loc_4651f4
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx+14h]
mov     [edx], eax
mov     eax, [ecx+14h]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4ac390
mov     ecx, 10h
mov     esi, ebx
repe cmpsb
jnz     short loc_46521e
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx+18h]
mov     [edx], eax
mov     eax, [ecx+18h]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abf30
mov     ecx, 10h
mov     esi, ebx
repe cmpsb
jnz     short loc_465248
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx+1ch]
mov     [edx], eax
mov     eax, [ecx+1ch]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abf10
mov     ecx, 10h
mov     esi, ebx
repe cmpsb
jnz     short loc_465272
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx+20h]
mov     [edx], eax
mov     eax, [ecx+20h]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abf50
mov     ecx, 10h
mov     esi, ebx
repe cmpsb
jnz     short loc_465296
mov     ecx, [esp+0ch+arg_0]
mov     eax, [ecx+24h]
mov     [edx], eax
mov     eax, [ecx+24h]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+4]
inc     eax
mov     [ecx+4], eax
retn    4
mov     ecx, [esp+arg_0]
mov     eax, [ecx+4]
dec     eax
mov     [ecx+4], eax
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     [ecx], eax
mov     esi, ecx
mov     word ptr [esi+4], 0
mov     dword ptr [esi+8], 0
mov     word ptr [esi+6], 0
mov     word ptr [esi+6], 14h
push    42h
push    50h
call    sub_45b8f0
add     esp, 8
mov     [esi+8], eax
mov     eax, esi
pop     esi
retn    4
push    esi
mov     eax, [ecx+8]
mov     esi, ecx
test    eax, eax
jz      short loc_46531a
push    eax
call    sub_45ba00
mov     dword ptr [esi+8], 0
add     esp, 4
pop     esi
retn
push    esi
mov     esi, ecx
mov     ax, [esi+6]
cmp     [esi+4], ax
jl      short loc_465353
add     ax, 14h
push    42h
mov     [esi+6], ax
mov     ecx, [esi+8]
movsx   eax, ax
shl     eax, 2
push    eax
push    ecx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_465353
sub     word ptr [esi+6], 14h
mov     ax, [esi+6]
cmp     [esi+4], ax
jge     short loc_465392
mov     eax, [esi+8]
push    eax
call    ds:globallock
mov     ecx, eax
mov     [esi+0ch], eax
test    ecx, ecx
jz      short loc_465392
movsx   edx, word ptr [esi+4]
mov     eax, [esp+4+arg_0]
mov     [ecx+edx*4], eax
mov     ecx, [esi]
inc     word ptr [esi+4]
mov     dword ptr [ecx+4], 1
mov     edx, [esi+8]
push    edx
call    ds:globalunlock
pop     esi
retn    4
push    ebx
push    esi
mov     eax, [ecx+8]
push    edi
mov     esi, ecx
push    eax
call    ds:globallock
mov     edx, eax
mov     [esi+0ch], eax
test    edx, edx
jz      short loc_46540c
xor     di, di
mov     ax, [esi+4]
cmp     ax, di
jle     short loc_465402
mov     ecx, [esp+0ch+arg_0]
movsx   ebx, di
cmp     [edx+ebx*4], ecx
jz      short loc_4653d9
inc     di
cmp     di, ax
jl      short loc_4653c8
jmp     short loc_465402
movsx   eax, ax
movsx   ecx, di
mov     ebx, [edx+eax*4-4]
mov     [edx+ecx*4], ebx
mov     edx, [esi+0ch]
movsx   eax, word ptr [esi+4]
mov     dword ptr [edx+eax*4-4], 0
dec     word ptr [esi+4]
mov     ecx, [esi]
mov     dword ptr [ecx+4], 1
mov     eax, [esi+8]
push    eax
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
retn    4
push    ebx
push    esi
mov     eax, [ecx+8]
push    edi
push    ebp
mov     esi, ecx
push    eax
call    ds:globallock
mov     ebx, eax
mov     [esi+0ch], eax
test    ebx, ebx
jz      short loc_465487
mov     edi, [esp+10h+arg_0]
mov     ecx, [edi]
test    ecx, ecx
jnz     short loc_465448
xor     dx, dx
jmp     short loc_465467
xor     dx, dx
mov     ax, [esi+4]
cmp     ax, dx
jle     short loc_465467
movsx   ebp, dx
cmp     [ebx+ebp*4], ecx
jz      short loc_465465
inc     dx
cmp     ax, dx
jg      short loc_465454
jmp     short loc_465467
inc     dx
cmp     [esi+4], dx
jle     short loc_465477
movsx   eax, dx
mov     ecx, [ebx+eax*4]
mov     [edi], ecx
jmp     short loc_46547d
mov     dword ptr [edi], 0
mov     eax, [esi+8]
push    eax
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    4
mov     edx, [esp+arg_0]
mov     dword ptr [ecx], offset off_4ab6c8
mov     eax, [edx+28h]
mov     [ecx+4], eax
mov     eax, [edx+2ch]
mov     [ecx+8], eax
mov     eax, [edx+30h]
mov     [ecx+0ch], eax
mov     eax, [edx+34h]
mov     [ecx+10h], eax
mov     eax, [edx+38h]
mov     [ecx+14h], eax
mov     [ecx+18h], edx
mov     dword ptr [ecx+1ch], 0
mov     eax, ecx
retn    4
push    esi
mov     eax, [ecx+18h]
mov     dword ptr [ecx], offset off_4ab6c8
mov     esi, ecx
test    eax, eax
jz      short loc_4654f7
mov     eax, [eax+10h]
test    eax, eax
jz      short loc_4654f7
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     ecx, [esi+18h]
mov     dword ptr [ecx+10h], 0
cmp     dword ptr [esi+18h], 0
jz      short loc_465520
mov     eax, [esi+1ch]
test    eax, eax
lea     ecx, [eax-1]
mov     [esi+1ch], ecx
jle     short loc_465520
mov     eax, [esi+18h]
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, [esi+1ch]
test    eax, eax
lea     ecx, [eax-1]
mov     [esi+1ch], ecx
jg      short loc_46550a
pop     esi
retn
push    ebx
mov     eax, 80004002h
mov     ebx, [esp+4+arg_8]
push    esi
push    edi
mov     ecx, 10h
mov     edi, offset dword_4abe40
mov     edx, [esp+0ch+arg_4]
mov     esi, edx
mov     dword ptr [ebx], 0
repe cmpsb
jnz     short loc_46556a
mov     eax, [esp+0ch+arg_0]
push    eax
mov     [ebx], eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abee0
mov     ecx, 10h
mov     esi, edx
repe cmpsb
jnz     short loc_46558e
mov     eax, [esp+0ch+arg_0]
push    eax
mov     [ebx], eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abf30
mov     ecx, 10h
mov     esi, edx
repe cmpsb
jnz     short loc_4655b2
mov     eax, [esp+0ch+arg_0]
push    eax
mov     [ebx], eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, offset dword_4abf10
mov     ecx, 10h
mov     esi, edx
repe cmpsb
jnz     short loc_4655d0
mov     eax, [esp+0ch+arg_0]
push    eax
mov     [ebx], eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     eax, [esp+arg_0]
push    esi
mov     esi, [eax+1ch]
inc     esi
mov     [eax+1ch], esi
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_4655f9
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     esi, [eax+1ch]
dec     esi
mov     [eax+1ch], esi
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_465619
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     esi, 80004005h
mov     ecx, [eax+4]
call    sub_4679d0
test    eax, eax
jz      short loc_46563e
mov     ecx, [esp+4+arg_4]
xor     esi, esi
mov     [ecx], eax
mov     eax, esi
pop     esi
retn    8
xor     eax, eax
retn    8
sub     esp, 10h
push    esi
push    edi
mov     esi, [esp+18h+arg_4]
test    esi, esi
jz      short loc_4656d7
lea     ecx, [esp+18h+rect]
mov     eax, [esi]
mov     edx, [esi+4]
mov     edi, [esi+8]
push    ecx
mov     [ecx], eax
mov     eax, [esi+0ch]
mov     [ecx+4], edx
mov     edx, [esp+1ch+arg_0]
mov     [ecx+8], edi
mov     [ecx+0ch], eax
mov     ecx, [edx+4]
call    sub_4679d0
push    eax
call    sub_490960
mov     ecx, [esp+20h+rect.top]
mov     edx, [esp+20h+rect.left]
sub     [esp+20h+rect.bottom], ecx
sub     [esp+20h+rect.right], edx
mov     [esp+20h+rect.top], 0
mov     [esp+20h+rect.left], 0
lea     ecx, [esp+20h+rect]
add     esp, 8
mov     eax, [ecx]
mov     edx, [ecx+4]
mov     edi, [ecx+8]
mov     [esi], eax
mov     eax, [ecx+0ch]
mov     [esi+4], edx
mov     [esi+8], edi
mov     [esi+0ch], eax
xor     eax, eax
pop     edi
pop     esi
add     esp, 10h
retn    8
xor     eax, eax
retn    8
xor     eax, eax
retn    8
sub     esp, 80h
push    esi
mov     esi, [esp+84h+arg_0]
mov     eax, [esi+18h]
test    eax, eax
jz      short loc_46578e
mov     eax, [eax+10h]
test    eax, eax
jz      short loc_465732
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     ecx, [esi+18h]
mov     eax, [esp+84h+arg_4]
test    eax, eax
mov     [ecx+10h], eax
jz      short loc_465749
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+0ch]
cmp     dword ptr [eax+0d2h], 0
jz      short loc_46578e
lea     eax, [esp+84h+multibytestr]
push    0
mov     ecx, [esp+88h+lpwidecharstr]
push    0
push    80h
push    eax
push    0ffffffffh
push    ecx
push    0
push    0
call    ds:widechartomultibyte
lea     ecx, [esp+84h+multibytestr]
mov     edx, [esi+0ch]
push    ecx
mov     eax, [edx+0d2h]
push    eax
call    sub_467190
add     esp, 8
xor     eax, eax
pop     esi
add     esp, 80h
retn    0ch
mov     eax, [esp+arg_0]
sub     esp, 78h
push    ebx
mov     ecx, [eax+4]
mov     dword ptr [esp+7ch+multibytestr], 1
push    esi
push    edi
push    ebp
xor     edi, edi
call    sub_4679d0
xor     bp, bp
push    eax
call    ds:getmenu
push    eax
mov     esi, eax
call    ds:getmenuitemcount
mov     bx, ax
test    bx, bx
jle     short loc_46580c
lea     eax, [esp+88h+string]
push    400h
movsx   ecx, bp
push    50h
push    eax
push    ecx
push    esi
call    ds:getmenustringa
cmp     [esp+88h+string], 0
jnz     short loc_4657ff
inc     bp
cmp     bp, bx
jl      short loc_4657d8
jmp     short loc_46580c
movsx   eax, bp
push    eax
push    esi
call    ds:getsubmenu
mov     edi, eax
xor     esi, esi
test    edi, edi
jz      short loc_465871
lea     eax, [esp+88h+multibytestr]
push    3
push    1b5ch
push    28h
push    eax
call    sub_47fe70
lea     eax, [esp+98h+string]
lea     ecx, [esp+98h+multibytestr]
add     esp, 10h
push    50h
push    eax
push    0ffffffffh
push    ecx
push    esi
push    esi
call    ds:multibytetowidechar
movzx   eax, di
lea     ecx, [esp+88h+multibytestr]
mov     edx, [esp+88h+hmenu]
push    ecx
push    eax
push    10h
push    edx
call    ds:appendmenua
and     eax, 1
mov     dword ptr [esp+88h+multibytestr], eax
mov     eax, [esp+88h+arg_8]
mov     dword ptr [eax], 1
mov     [eax+8], esi
mov     [eax+10h], esi
cmp     dword ptr [esp+88h+multibytestr], 1
sbb     eax, eax
pop     ebp
and     eax, 80004005h
pop     edi
pop     esi
pop     ebx
add     esp, 78h
retn    0ch
push    ebx
push    esi
mov     esi, [esp+8+holemenu]
push    edi
xor     edi, edi
cmp     esi, edi
jz      short loc_4658cb
mov     ebx, [esp+0ch+duration]
cmp     ebx, edi
jz      short loc_4658cb
mov     eax, [esp+0ch+arg_0]
mov     ecx, [eax+4]
call    sub_4679d0
push    eax
mov     edi, eax
call    ds:getmenu
push    ebx
mov     dword_4ae2b4, eax
push    edi
call    __beep
add     esp, 8
jmp     short loc_4658f9
cmp     dword_4ae2b4, 0
jz      short loc_465910
mov     eax, dword_4ae2b4
mov     edx, [esp+0ch+arg_0]
push    eax
mov     ecx, [edx+4]
call    sub_4679d0
push    eax
call    __beep
mov     dword_4ae2b4, 0
add     esp, 8
mov     eax, [esp+0ch+hwndactiveobject]
push    0
push    0
push    eax
push    edi
push    esi
call    ds:olesetmenudescriptor
pop     edi
pop     esi
pop     ebx
retn    10h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    10h
sub     esp, 4
mov     [esp+4+var_4], 80004005h
push    ebx
push    esi
mov     ebx, [esp+0ch+hmenu]
push    edi
push    ebp
mov     esi, ds:getmenuitemcount
mov     ebp, 1
push    ebx
call    esi
test    eax, eax
jz      short loc_46595e
mov     edi, ds:removemenu
push    400h
push    0
push    ebx
call    edi
and     ebp, eax
push    ebx
call    esi
test    eax, eax
jnz     short loc_46594b
test    ebp, ebp
jz      short loc_46596a
mov     [esp+14h+var_4], 0
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    8
mov     eax, 80004005h
retn    8
xor     eax, eax
retn    8
mov     eax, [esp+lpmsg]
push    esi
mov     esi, 1
push    eax
call    sub_467240
add     esp, 4
test    eax, eax
jz      short loc_4659b9
xor     esi, esi
mov     eax, esi
pop     esi
retn    0ch
mov     edx, [esp+arg_0]
mov     dword ptr [ecx], offset off_4ab708
mov     eax, [edx+28h]
mov     [ecx+4], eax
mov     eax, [edx+2ch]
mov     [ecx+8], eax
mov     eax, [edx+30h]
mov     [ecx+0ch], eax
mov     eax, [edx+34h]
mov     [ecx+10h], eax
mov     eax, [edx+38h]
mov     [ecx+14h], eax
mov     [ecx+18h], edx
mov     dword ptr [ecx+1ch], 0
mov     eax, ecx
retn    4
push    esi
mov     dword ptr [ecx], offset off_4ab708
cmp     dword ptr [ecx+18h], 0
mov     esi, ecx
jz      short loc_465a32
mov     eax, [esi+1ch]
test    eax, eax
lea     ecx, [eax-1]
mov     [esi+1ch], ecx
jle     short loc_465a32
mov     eax, [esi+18h]
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, [esi+1ch]
test    eax, eax
lea     ecx, [eax-1]
mov     [esi+1ch], ecx
jg      short loc_465a1c
pop     esi
retn
push    esi
mov     ecx, 10h
mov     edx, [esp+4+arg_4]
push    edi
mov     edi, offset dword_4abe40
mov     esi, edx
repe cmpsb
mov     eax, [esp+8+arg_0]
jnz     short loc_465a6d
mov     ecx, [esp+8+arg_8]
push    eax
mov     [ecx], eax
mov     eax, [eax]
call    dword ptr [eax+4]
xor     eax, eax
pop     edi
pop     esi
retn    0ch
mov     eax, [eax+18h]
mov     ecx, [esp+8+arg_8]
push    ecx
push    edx
push    eax
mov     eax, [eax]
call    dword ptr [eax]
pop     edi
pop     esi
retn    0ch
mov     eax, [esp+arg_0]
push    esi
mov     esi, [eax+1ch]
inc     esi
mov     [eax+1ch], esi
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_465a99
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     esi, [eax+1ch]
dec     esi
mov     [eax+1ch], esi
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_465ab9
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     esi, 80004005h
mov     ecx, [eax+8]
call    sub_467b90
test    eax, eax
jz      short loc_465ade
mov     ecx, [esp+4+arg_4]
xor     esi, esi
mov     [ecx], eax
mov     eax, esi
pop     esi
retn    8
xor     eax, eax
retn    8
xor     eax, eax
retn    8
xor     eax, eax
retn    8
xor     eax, eax
retn    8
xor     eax, eax
retn    0ch
mov     edx, [esp+arg_0]
mov     dword ptr [ecx], offset off_4ab730
mov     eax, [edx+28h]
mov     [ecx+4], eax
mov     eax, [edx+2ch]
mov     [ecx+8], eax
mov     eax, [edx+30h]
mov     [ecx+0ch], eax
mov     eax, [edx+34h]
mov     [ecx+10h], eax
mov     eax, [edx+38h]
mov     [ecx+14h], eax
mov     [ecx+18h], edx
mov     dword ptr [ecx+1ch], 0
mov     eax, ecx
retn    4
push    esi
mov     dword ptr [ecx], offset off_4ab730
cmp     dword ptr [ecx+18h], 0
mov     esi, ecx
jz      short loc_465bb2
mov     eax, [esi+1ch]
test    eax, eax
lea     ecx, [eax-1]
mov     [esi+1ch], ecx
jle     short loc_465bb2
mov     eax, [esi+18h]
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, [esi+1ch]
test    eax, eax
lea     ecx, [eax-1]
mov     [esi+1ch], ecx
jg      short loc_465b9c
pop     esi
retn
push    esi
mov     ecx, 10h
mov     edx, [esp+4+arg_4]
push    edi
mov     edi, offset dword_4abe40
mov     esi, edx
repe cmpsb
mov     eax, [esp+8+arg_0]
jnz     short loc_465bed
mov     ecx, [esp+8+arg_8]
push    eax
mov     [ecx], eax
mov     eax, [eax]
call    dword ptr [eax+4]
xor     eax, eax
pop     edi
pop     esi
retn    0ch
mov     eax, [eax+18h]
mov     ecx, [esp+8+arg_8]
push    ecx
push    edx
push    eax
mov     eax, [eax]
call    dword ptr [eax]
pop     edi
pop     esi
retn    0ch
mov     eax, [esp+arg_0]
push    esi
mov     esi, [eax+1ch]
inc     esi
mov     [eax+1ch], esi
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_465c19
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     esi, [eax+1ch]
dec     esi
mov     [eax+1ch], esi
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_465c39
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     esi, 80004005h
mov     ecx, [eax+8]
call    sub_467b90
test    eax, eax
jz      short loc_465c5e
mov     ecx, [esp+4+arg_4]
xor     esi, esi
mov     [ecx], eax
mov     eax, esi
pop     esi
retn    8
xor     eax, eax
retn    8
xor     eax, eax
mov     ecx, [esp+arg_0]
mov     edx, [ecx+0ch]
cmp     [edx+4], eax
jz      short locret_465c93
mov     eax, 1
retn    4
push    esi
push    edi
mov     edi, 80004005h
mov     esi, [esp+8+arg_0]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_465cdd
push    offset dword_4abf40
mov     eax, [eax+9eh]
push    eax
call    dword_4ae2f8
test    eax, eax
jz      short loc_465cd3
mov     ecx, [esi+0ch]
xor     edi, edi
mov     [ecx+0a2h], eax
push    1
call    nullsub_20
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
retn    4
mov     eax, [esp+arg_0]
mov     ecx, [eax+0ch]
mov     eax, [ecx+0d2h]
test    eax, eax
jz      short loc_465d0c
push    1
push    eax
call    sub_467050
add     esp, 8
xor     eax, eax
retn    4
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+0ch+arg_0]
push    ebp
cmp     [edi+0ch], esi
jz      loc_465dcf
mov     ecx, [esp+10h+arg_4]
cmp     ecx, esi
jz      loc_465dc1
mov     ebx, [esp+10h+arg_8]
cmp     ebx, esi
jz      short loc_465dc1
mov     ebp, [esp+10h+arg_c]
cmp     ebp, esi
jz      short loc_465dc1
mov     eax, [edi+18h]
mov     edx, [eax+1ch]
mov     [ecx], edx
mov     eax, [edi+18h]
mov     eax, [eax+1ch]
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
push    ebp
mov     [ebx], esi
mov     ecx, [edi+0ch]
call    sub_468750
mov     ecx, [edi+8]
call    sub_467b90
push    eax
call    sub_490980
mov     eax, [esp+14h+arg_10]
add     esp, 4
mov     ecx, 7fffh
mov     ebx, [esp+10h+arg_14]
mov     [eax+4], esi
mov     [eax], esi
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [ebx+4], esi
mov     ecx, [edi+4]
call    sub_4679d0
mov     [ebx+8], eax
call    sub_4671c0
mov     [ebx+0ch], eax
call    sub_4671e0
movsx   ecx, ax
mov     eax, esi
pop     ebp
pop     edi
mov     [ebx+10h], ecx
pop     esi
pop     ebx
retn    18h
mov     esi, 80004005h
pop     ebp
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    18h
mov     esi, 80004005h
pop     ebp
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    18h
sub     esp, 28h
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+34h+arg_0]
mov     eax, [edi+0ch]
mov     ecx, [eax+0d2h]
test    ecx, ecx
jz      short loc_465e10
mov     eax, [esp+34h+arg_4]
push    eax
push    ecx
call    sub_4670e0
add     esp, 8
test    eax, eax
jnz     short loc_465e10
mov     esi, 80004005h
mov     ecx, [edi+8]
call    sub_467b90
push    eax
call    sub_490980
mov     [esp+38h+rcsrc2.right], eax
mov     [esp+38h+rcsrc2.bottom], edx
mov     edx, [esp+38h+arg_4]
lea     ecx, [esp+38h+rcdst]
mov     [esp+38h+rcsrc2.left], 0
add     esp, 4
mov     eax, [edx]
mov     ebx, [edx+4]
mov     [ecx], eax
mov     eax, [edx+8]
mov     [ecx+4], ebx
mov     edx, [edx+0ch]
mov     [ecx+8], eax
lea     eax, [esp+34h+rcdst]
mov     [ecx+0ch], edx
mov     [esp+34h+rcsrc2.top], 0
lea     ecx, [esp+34h+rcsrc2]
push    ecx
push    eax
lea     eax, [esp+3ch+rcdst]
push    eax
call    ds:intersectrect
mov     edx, [edi+0ch]
mov     ecx, [edx+0a2h]
test    ecx, ecx
jz      short loc_465e89
lea     eax, [esp+34h+rcsrc2]
lea     edx, [esp+34h+rcdst]
push    eax
mov     ebx, [ecx]
push    edx
push    ecx
call    dword ptr [ebx+1ch]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn    8
xor     eax, eax
retn    0ch
push    esi
push    0
mov     esi, [esp+8+arg_0]
push    0
push    0
mov     eax, [esi+18h]
mov     eax, [eax+1ch]
push    eax
mov     eax, [eax]
call    dword ptr [eax+28h]
mov     ecx, [esi+0ch]
mov     eax, [ecx+0d2h]
test    eax, eax
jz      short loc_465edf
push    0
push    eax
call    sub_467050
add     esp, 8
mov     eax, 80004005h
pop     esi
retn    8
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_465f2d
mov     eax, [eax+0a2h]
test    eax, eax
jz      short loc_465f19
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, [esi+0ch]
mov     dword ptr [eax+0a2h], 0
push    0
call    nullsub_20
add     esp, 4
mov     ecx, [esi+0ch]
push    0fffffffah
call    sub_468500
xor     eax, eax
pop     esi
retn    4
xor     eax, eax
retn    4
mov     eax, [esp+arg_0]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_465f6b
mov     eax, [eax+0a2h]
test    eax, eax
jz      short loc_465f6b
push    eax
mov     eax, [eax]
call    dword ptr [eax+14h]
xor     eax, eax
retn    4
mov     edx, [esp+arg_0]
mov     dword ptr [ecx], offset off_4ab770
mov     eax, [edx+28h]
mov     [ecx+4], eax
mov     eax, [edx+2ch]
mov     [ecx+8], eax
mov     eax, [edx+30h]
mov     [ecx+0ch], eax
mov     eax, [edx+34h]
mov     [ecx+10h], eax
mov     eax, [edx+38h]
mov     [ecx+14h], eax
mov     [ecx+18h], edx
mov     dword ptr [ecx+1ch], 0
mov     eax, ecx
retn    4
push    esi
mov     dword ptr [ecx], offset off_4ab770
mov     dword ptr [ecx+0ch], 0
cmp     dword ptr [ecx+18h], 0
mov     esi, ecx
jz      short loc_465fe9
mov     eax, [esi+1ch]
test    eax, eax
lea     ecx, [eax-1]
mov     [esi+1ch], ecx
jle     short loc_465fe9
mov     eax, [esi+18h]
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, [esi+1ch]
test    eax, eax
lea     ecx, [eax-1]
mov     [esi+1ch], ecx
jg      short loc_465fd3
pop     esi
retn
push    esi
mov     ecx, 10h
mov     edx, [esp+4+arg_4]
push    edi
mov     edi, offset dword_4abe40
mov     esi, edx
repe cmpsb
mov     eax, [esp+8+arg_0]
jnz     short loc_46601d
mov     ecx, [esp+8+arg_8]
push    eax
mov     [ecx], eax
mov     eax, [eax]
call    dword ptr [eax+4]
xor     eax, eax
pop     edi
pop     esi
retn    0ch
mov     eax, [eax+18h]
mov     ecx, [esp+8+arg_8]
push    ecx
push    edx
push    eax
mov     eax, [eax]
call    dword ptr [eax]
pop     edi
pop     esi
retn    0ch
mov     eax, [esp+arg_0]
push    esi
mov     esi, [eax+1ch]
inc     esi
mov     [eax+1ch], esi
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_466049
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     esi, [eax+1ch]
dec     esi
mov     [eax+1ch], esi
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_466069
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    0
mov     ecx, [eax+0ch]
call    sub_4683a0
retn    4
mov     eax, [esp+arg_8]
push    esi
mov     esi, [esp+4+arg_c]
push    edi
xor     edi, edi
cmp     eax, 1
mov     [esi], edi
jz      short loc_4660c2
cmp     eax, 2
jz      short loc_4660af
cmp     eax, 3
jz      short loc_4660c2
jmp     short loc_4660d5
mov     eax, [esp+8+arg_4]
mov     edx, [esp+8+arg_0]
push    eax
mov     ecx, [edx+0ch]
call    sub_4685f0
jmp     short loc_4660d3
mov     eax, [esp+8+arg_4]
mov     edx, [esp+8+arg_0]
push    eax
mov     ecx, [edx+0ch]
call    sub_468580
mov     [esi], eax
cmp     dword ptr [esi], 0
jnz     short loc_4660df
mov     edi, 80004005h
mov     eax, edi
pop     edi
pop     esi
retn    10h
mov     eax, [esp+arg_0]
mov     edx, [eax+8]
mov     eax, [esp+arg_4]
push    eax
push    offset dword_4abeb0
mov     ecx, [edx+3ch]
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
retn    8
call    sub_467290
xor     eax, eax
retn    4
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+0ch], 0
jnz     short loc_466131
xor     eax, eax
pop     esi
retn    8
cmp     [esp+4+arg_4], 0
mov     ecx, [esi+8]
jz      short loc_46616f
call    sub_467b90
mov     ecx, [esi+0ch]
test    eax, eax
mov     dword ptr [ecx+0d6h], 1
jz      short loc_4661af
mov     eax, [esi+0ch]
mov     eax, [eax+0d2h]
test    eax, eax
jz      short loc_4661af
push    0
push    eax
call    sub_467140
add     esp, 8
xor     eax, eax
pop     esi
retn    8
call    sub_467b90
mov     ecx, [esi+0ch]
test    eax, eax
mov     dword ptr [ecx+0d6h], 0
jz      short loc_4661af
mov     eax, [esi+0ch]
mov     eax, [eax+0d2h]
test    eax, eax
jz      short loc_4661af
push    0
push    eax
call    sub_467140
add     esp, 8
mov     eax, [esi+0ch]
mov     ecx, [eax+0d2h]
push    ecx
call    sub_466af0
add     esp, 4
xor     eax, eax
pop     esi
retn    8
mov     eax, 80004001h
retn    4
mov     edx, [esp+arg_0]
mov     dword ptr [ecx], offset off_4ab798
mov     eax, [edx+28h]
mov     [ecx+4], eax
mov     eax, [edx+2ch]
mov     [ecx+8], eax
mov     eax, [edx+30h]
mov     [ecx+0ch], eax
mov     eax, [edx+34h]
mov     [ecx+10h], eax
mov     eax, [edx+38h]
mov     [ecx+14h], eax
mov     [ecx+18h], edx
mov     dword ptr [ecx+1ch], 0
mov     eax, ecx
retn    4
push    esi
mov     dword ptr [ecx], offset off_4ab798
cmp     dword ptr [ecx+18h], 0
mov     esi, ecx
jz      short loc_466242
mov     eax, [esi+1ch]
test    eax, eax
lea     ecx, [eax-1]
mov     [esi+1ch], ecx
jle     short loc_466242
mov     eax, [esi+18h]
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, [esi+1ch]
test    eax, eax
lea     ecx, [eax-1]
mov     [esi+1ch], ecx
jg      short loc_46622c
pop     esi
retn
push    esi
mov     ecx, 10h
mov     edx, [esp+4+arg_4]
push    edi
mov     edi, offset dword_4abe40
mov     esi, edx
repe cmpsb
mov     eax, [esp+8+arg_0]
jnz     short loc_46627d
mov     ecx, [esp+8+arg_8]
push    eax
mov     [ecx], eax
mov     eax, [eax]
call    dword ptr [eax+4]
xor     eax, eax
pop     edi
pop     esi
retn    0ch
mov     eax, [eax+18h]
mov     ecx, [esp+8+arg_8]
push    ecx
push    edx
push    eax
mov     eax, [eax]
call    dword ptr [eax]
pop     edi
pop     esi
retn    0ch
mov     eax, [esp+arg_0]
push    esi
mov     esi, [eax+1ch]
inc     esi
mov     [eax+1ch], esi
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_4662a9
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     esi, [eax+1ch]
dec     esi
mov     [eax+1ch], esi
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_4662c9
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
mov     ecx, [eax+8]
mov     dword ptr [ecx+4], 1
retn    0ch
push    esi
mov     esi, [esp+4+arg_0]
mov     ecx, [esi+8]
call    sub_467b90
mov     ecx, [esi+8]
test    eax, eax
mov     dword ptr [ecx+4], 1
jz      short loc_466323
mov     eax, [esi+0ch]
mov     eax, [eax+0d2h]
test    eax, eax
jz      short loc_466323
push    0
push    eax
call    sub_467140
add     esp, 8
pop     esi
retn    0ch
push    esi
mov     eax, 0
cmp     ds:word_4a8518, 0
jz      short loc_46638a
movsx   eax, ds:word_4a8518
shl     eax, 6
mov     ecx, dword_4ae1e0
mov     edx, [eax+ecx+10h]
mov     eax, [edx]
movsx   eax, word ptr [eax+2]
test    eax, eax
jnz     short loc_466395
mov     eax, 1
pop     esi
retn
push    offset dword_4ae2cc
push    0
call    sub_467350
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_4663ea
push    70h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_4663c6
mov     ecx, eax
call    sub_467810
mov     dword_4ae540, eax
jmp     short loc_4663d0
mov     dword_4ae540, 0
cmp     dword_4ae540, 0
jz      short loc_4663ea
mov     eax, dword_4ae540
mov     esi, [eax+4]
test    esi, esi
jnz     short loc_4663ea
call    sub_4663f0
mov     eax, esi
pop     esi
retn
push    esi
call    sub_466bc0
test    eax, eax
jz      short loc_46642d
mov     esi, dword_4ae540
test    esi, esi
jz      short loc_46641e
mov     ecx, esi
call    sub_467900
push    esi
call    ??3@yaxpax@z
mov     dword_4ae540, 0
add     esp, 4
push    offset dword_4ae2cc
push    0
call    sub_467470
add     esp, 8
pop     esi
retn
push    esi
call    sub_466bc0
xor     esi, esi
test    eax, eax
jnz     short loc_466443
mov     eax, 1
pop     esi
retn
mov     ecx, dword_4ae540
test    ecx, ecx
jz      short loc_466454
call    sub_467930
mov     esi, eax
mov     eax, esi
pop     esi
retn
push    esi
call    sub_466bc0
xor     esi, esi
test    eax, eax
jnz     short loc_466473
mov     eax, 1
pop     esi
retn
mov     ecx, dword_4ae540
test    ecx, ecx
jz      short loc_466484
call    sub_4679a0
mov     esi, eax
mov     eax, esi
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     edi, [esp+1ch+arg_0]
cmp     dword ptr [edi+62h], 0
jz      loc_46653e
push    0
call    sub_466ff0
add     esp, 4
test    eax, eax
jnz     loc_46653e
test    edi, edi
jz      loc_46653e
mov     esi, [esp+1ch+hdcdraw]
test    esi, esi
jz      short loc_46653e
mov     ebx, [esp+1ch+arg_8]
test    ebx, ebx
jz      short loc_46653e
call    sub_466bc0
test    eax, eax
jz      short loc_466502
lea     ecx, [esp+1ch+rcbounds]
mov     eax, [ebx]
mov     edx, [ebx+4]
push    ecx
push    esi
mov     [ecx], eax
mov     eax, [ebx+8]
mov     [ecx+4], edx
mov     ebx, [ebx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], ebx
mov     ecx, [edi+62h]
call    sub_4684a0
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, [edi+72h]
xor     eax, eax
test    ecx, ecx
jz      short loc_46653e
lea     edx, [edi+0ch]
mov     [esp+1ch+rcbounds.left], eax
mov     [esp+1ch+rcbounds.top], eax
mov     eax, [edi+14h]
sub     eax, [edx]
push    0cc0020h
mov     [esp+20h+rcbounds.right], eax
push    edx
mov     eax, [edi+18h]
lea     edx, [esp+24h+rcbounds]
sub     eax, [edi+10h]
push    edx
mov     [esp+28h+rcbounds.bottom], eax
push    ecx
push    esi
call    sub_40f0e0
add     esp, 14h
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     [esi+62h], edi
jnz     short loc_466562
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466573
mov     eax, 1
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_466583
push    0
mov     ecx, [esi+62h]
call    sub_468500
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 4
mov     [esp+4+var_2], 0
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+62h], 0
jnz     short loc_4665ad
xor     ax, ax
pop     esi
add     esp, 4
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_4665be
xor     ax, ax
pop     esi
add     esp, 4
retn
test    esi, esi
jz      short loc_4665cf
lea     eax, [esp+8+var_2]
mov     ecx, [esi+62h]
push    eax
call    sub_468b70
mov     ax, [esp+8+var_2]
pop     esi
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+10h+arg_0]
mov     [esp+10h+var_4], ebx
cmp     [esi+62h], ebx
jnz     short loc_4665fe
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466610
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     edi, [esi+62h]
test    edi, edi
jz      short loc_466658
mov     esi, [esp+10h+lpmultibytestr]
test    esi, esi
jz      short loc_466658
lea     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+arg_4]
push    eax
push    ecx
mov     ecx, edi
call    sub_468ae0
test    eax, eax
jz      short loc_466658
mov     eax, dword ptr [esp+10h+arg_c]
mov     ecx, [esp+10h+var_4]
push    eax
push    esi
push    ecx
mov     ecx, edi
call    sub_468980
cmp     [esp+10h+arg_10], 0
mov     ebx, eax
jz      short loc_466658
push    esi
call    sub_466670
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     ebx, [esp+8+str]
push    edi
cmp     byte ptr [ebx], 0
jz      short loc_4666bd
mov     edi, ds:lstrlena
mov     al, [ebx]
cmp     al, 26h
jnz     short loc_46668d
lea     esi, [ebx+1]
jmp     short loc_4666a3
cmp     al, 28h
jnz     short loc_4666b2
push    29h
push    ebx
call    _strchr
add     esp, 8
test    eax, eax
jz      short loc_4666b2
lea     esi, [eax+1]
push    esi
call    edi
inc     eax
push    eax
push    esi
push    ebx
call    sub_47f9f0
add     esp, 0ch
cmp     byte ptr [ebx], 0
jz      short loc_4666bd
inc     ebx
cmp     byte ptr [ebx], 0
jnz     short loc_466682
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+0ch+arg_0]
cmp     [esi+62h], edi
jnz     short loc_4666e8
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_4666fc
mov     eax, 1
pop     edi
pop     esi
add     esp, 4
retn
mov     esi, [esi+62h]
test    esi, esi
jz      short loc_46672e
lea     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+arg_4]
mov     [esp+0ch+var_4], 0
push    eax
push    ecx
mov     ecx, esi
call    sub_468ae0
test    eax, eax
jz      short loc_46672e
mov     eax, [esp+0ch+var_4]
mov     ecx, esi
push    eax
call    sub_468500
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 2ch
push    ebx
push    esi
xor     bx, bx
push    edi
push    ebp
xor     edi, edi
mov     esi, [esp+3ch+arg_0]
cmp     [esi+62h], edi
jnz     short loc_46675f
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466775
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
test    esi, esi
jz      loc_4667ff
mov     edi, [esp+3ch+lpstring2]
test    edi, edi
jz      short loc_4667d9
cmp     byte ptr [edi], 0
jz      short loc_4667d9
mov     bp, 1
push    esi
call    sub_466590
mov     [esp+40h+var_2a], ax
add     esp, 4
cmp     ax, bp
jl      short loc_4667d9
test    bx, bx
jnz     short loc_4667de
lea     eax, [esp+3ch+string1]
push    1
push    28h
push    eax
push    ebp
push    esi
call    sub_4665e0
add     esp, 14h
test    eax, eax
jz      short loc_4667d0
lea     eax, [esp+3ch+string1]
push    edi
push    eax
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_4667d0
mov     bx, bp
inc     bp
cmp     [esp+3ch+var_2a], bp
jge     short loc_4667a1
test    bx, bx
jz      short loc_4667f4
push    ebx
push    esi
call    sub_4666d0
add     esp, 8
mov     edi, eax
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
push    esi
call    sub_466550
add     esp, 4
mov     edi, eax
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
xor     eax, eax
mov     ecx, ds:hwndparent
cmp     ecx, eax
jz      short locret_46681e
mov     eax, ecx
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     [esi+62h], edi
jnz     short loc_466832
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466843
mov     eax, 1
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_46685d
mov     ecx, [esi+62h]
mov     edi, 1
call    sub_468c20
push    esi
call    sub_467330
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
xor     eax, eax
push    edi
mov     edi, [esp+8+arg_0]
cmp     [edi+62h], eax
jz      short loc_4668da
test    edi, edi
jz      short loc_4668da
push    edi
call    sub_466d00
add     esp, 4
mov     eax, [edi+72h]
test    eax, eax
jz      short loc_4668a1
push    eax
call    sub_45ba00
mov     dword ptr [edi+72h], 0
add     esp, 4
call    sub_466bc0
mov     esi, [edi+62h]
test    eax, eax
jz      short loc_4668ba
test    esi, esi
jz      short loc_4668ce
mov     ecx, esi
call    sub_467fa0
jmp     short loc_4668c5
test    esi, esi
jz      short loc_4668ce
mov     ecx, esi
call    sub_468ef0
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     dword ptr [edi+62h], 0
mov     eax, 1
pop     edi
pop     esi
retn
sub     esp, 4
mov     [esp+4+var_4], 0
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+62h], 0
jnz     short loc_4668fd
xor     eax, eax
pop     esi
add     esp, 4
retn
call    sub_466bc0
mov     ecx, [esi+62h]
test    eax, eax
lea     eax, [esp+8+var_4]
mov     esi, [ecx]
push    eax
call    dword ptr [esi]
test    eax, eax
jge     short loc_46691c
mov     [esp+8+var_4], 0
mov     eax, [esp+8+var_4]
pop     esi
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
xor     edi, edi
cmp     esi, edi
jz      short loc_466940
mov     [esi+62h], edi
call    sub_466bc0
test    eax, eax
jz      short loc_4669b3
push    11ah
mov     ebx, 0
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_466977
mov     edx, [esp+0ch+hmem]
mov     ecx, dword_4ae540
push    edx
mov     ebx, [ecx+10h]
push    ebx
mov     ecx, eax
call    sub_467db0
mov     ebx, eax
test    ebx, ebx
jz      loc_466a03
mov     edi, [ebx+0fah]
test    edi, edi
jz      short loc_466992
mov     eax, edi
mov     [esi+62h], ebx
pop     edi
pop     esi
pop     ebx
retn
test    ebx, ebx
jz      short loc_4669a6
mov     ecx, ebx
call    sub_467fa0
push    ebx
call    ??3@yaxpax@z
add     esp, 4
mov     dword ptr [esi+62h], 0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    1ah
mov     ebx, 0
call    ??2@yapaxi@z
add     esp, 4
mov     ecx, eax
test    ecx, ecx
jz      short loc_4669d4
mov     edx, [esp+0ch+hmem]
push    edx
call    sub_468eb0
mov     ebx, eax
test    ebx, ebx
jz      short loc_466a03
mov     edi, [ebx+16h]
test    edi, edi
jz      short loc_4669e8
mov     eax, edi
mov     [esi+62h], ebx
pop     edi
pop     esi
pop     ebx
retn
test    ebx, ebx
jz      short loc_4669fc
mov     ecx, ebx
call    sub_468ef0
push    ebx
call    ??3@yaxpax@z
add     esp, 4
mov     dword ptr [esi+62h], 0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+8+arg_0]
cmp     [edi+62h], esi
jnz     short loc_466a22
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466a33
mov     eax, 1
pop     edi
pop     esi
retn
test    edi, edi
jz      short loc_466a46
mov     eax, [esp+8+arg_4]
mov     ecx, [edi+62h]
push    eax
call    sub_4686d0
mov     esi, eax
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
call    sub_466bc0
xor     esi, esi
test    eax, eax
jnz     short loc_466a63
mov     eax, 1
pop     esi
retn
mov     eax, dword_4ae2dc
test    eax, eax
jz      short loc_466a77
push    eax
call    sub_466820
add     esp, 4
mov     esi, eax
mov     eax, esi
pop     esi
retn
sub     esp, 4
push    esi
call    sub_466bc0
xor     esi, esi
test    eax, eax
jnz     short loc_466a99
mov     eax, 1
pop     esi
add     esp, 4
retn
cmp     dword_4ae2dc, 0
jz      short loc_466ade
mov     eax, dword_4ae2dc
mov     [esp+8+hwnd], 0
mov     ecx, [eax+62h]
mov     eax, [ecx+0a2h]
test    eax, eax
jz      short loc_466ac7
lea     ecx, [esp+8+hwnd]
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+0ch]
cmp     [esp+8+hwnd], 0
jz      short loc_466ade
mov     eax, [esp+8+hwnd]
mov     esi, 1
push    eax
call    ds:setfocus
mov     eax, esi
pop     esi
add     esp, 4
retn
sub     esp, 18h
push    esi
push    edi
mov     esi, [esp+20h+arg_0]
test    esi, esi
jz      loc_466baf
mov     ecx, [esi+62h]
cmp     dword ptr [ecx+0feh], 0
jz      loc_466baf
lea     edi, [esi+0ch]
lea     edx, [esp+20h+var_10]
mov     eax, [edi]
mov     [edx], eax
mov     eax, [edi+4]
mov     [edx+4], eax
mov     eax, [edi+8]
mov     [edx+8], eax
mov     eax, [edi+0ch]
mov     [edx+0ch], eax
lea     edx, [esp+20h+var_18]
push    edx
call    sub_468420
cmp     [esp+20h+var_18], 0
jz      short loc_466ba2
cmp     [esp+20h+var_14], 0
jz      short loc_466ba2
mov     eax, [esp+20h+var_4]
sub     eax, [esp+20h+var_c]
cmp     eax, [esp+20h+var_14]
jnz     short loc_466b62
mov     eax, [esp+20h+var_8]
sub     eax, [esp+20h+var_10]
cmp     eax, [esp+20h+var_18]
jz      short loc_466ba2
mov     eax, [esp+20h+var_10]
lea     ecx, [esp+20h+var_10]
add     eax, [esp+20h+var_18]
mov     [esp+20h+var_8], eax
mov     eax, [esp+20h+var_c]
add     eax, [esp+20h+var_14]
mov     [esp+20h+var_4], eax
mov     eax, [ecx]
mov     edx, [ecx+4]
mov     [edi], eax
mov     eax, [ecx+8]
mov     [edi+4], edx
mov     ecx, [ecx+0ch]
lea     edx, [esp+20h+var_10]
push    edx
mov     [edi+8], eax
push    esi
mov     [edi+0ch], ecx
call    sub_466a10
add     esp, 8
mov     eax, [esi+62h]
mov     dword ptr [eax+0feh], 0
pop     edi
pop     esi
add     esp, 18h
retn
cmp     dword_4ae2cc, 1
sbb     eax, eax
inc     eax
cmp     dword_4ae540, 1
sbb     ecx, ecx
inc     ecx
and     eax, ecx
and     eax, 1
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     [esi+62h], edi
jnz     short loc_466bf2
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466c03
mov     eax, 1
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_466c16
mov     ecx, [esi+62h]
mov     eax, [esp+8+arg_4]
push    eax
mov     esi, [ecx]
call    dword ptr [esi+4]
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     [esi+62h], edi
jnz     short loc_466c32
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466c43
mov     eax, 1
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_466c5f
mov     ecx, [esi+62h]
cmp     dword ptr [ecx+0eah], 0
jz      short loc_466c5f
mov     eax, [esp+8+arg_4]
push    eax
call    sub_4688d0
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     [esi+62h], edi
jnz     short loc_466c82
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466c97
push    esi
call    sub_467330
add     esp, 4
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_466cbe
mov     ecx, [esi+62h]
cmp     dword ptr [ecx+0eah], 0
jz      short loc_466cb3
call    sub_468920
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
call    sub_467330
add     esp, 4
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+62h], 0
jz      short loc_466cf5
call    sub_466bc0
test    eax, eax
jz      short loc_466cf5
test    esi, esi
jz      short loc_466cf5
mov     eax, [esi+62h]
test    eax, eax
jz      short loc_466cf5
mov     [eax+0d2h], esi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+62h], 0
jz      short loc_466d29
call    sub_466bc0
test    eax, eax
jz      short loc_466d29
test    esi, esi
jz      short loc_466d29
mov     eax, [esi+62h]
test    eax, eax
jz      short loc_466d29
mov     dword ptr [eax+0d2h], 0
pop     esi
retn
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+8+arg_0]
cmp     [edi+62h], esi
jnz     short loc_466d42
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466d53
mov     eax, 1
pop     edi
pop     esi
retn
test    edi, edi
jz      short loc_466d60
mov     eax, [edi+62h]
mov     esi, [eax+0f6h]
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     [esi+62h], edi
jnz     short loc_466d82
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466d93
mov     eax, 1
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_466da8
mov     ax, [esp+8+arg_4]
mov     ecx, [esi+62h]
mov     [ecx+0ch], ax
mov     edi, 1
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+8+arg_0]
cmp     [edi+62h], esi
jnz     short loc_466dc2
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466dd3
mov     eax, 1
pop     edi
pop     esi
retn
test    edi, edi
jz      short loc_466de9
mov     eax, [esp+8+arg_4]
mov     ecx, [edi+62h]
push    eax
mov     esi, 1
call    sub_468960
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+8+arg_0]
cmp     [edi+62h], esi
jnz     short loc_466e02
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466e10
xor     eax, eax
pop     edi
pop     esi
retn
mov     ecx, [edi+62h]
test    ecx, ecx
jz      short loc_466e38
mov     eax, dword ptr [esp+8+arg_8]
mov     esi, [esp+8+lpmultibytestr]
push    eax
mov     edx, [ecx+0eh]
push    esi
push    edx
call    sub_468980
push    esi
call    sub_466670
add     esp, 4
mov     esi, 1
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     [esi+62h], edi
jnz     short loc_466e52
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466e63
mov     eax, 1
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_466e75
mov     ecx, [esi+62h]
mov     eax, [ecx+0eh]
push    eax
call    sub_468500
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
mov     edx, [ecx+62h]
test    edx, edx
jz      short locret_466eb7
test    edx, edx
jz      short locret_466eb7
mov     ax, [edx+0ch]
mov     ecx, [esp+arg_4]
mov     [ecx+12h], ax
mov     eax, [edx+0eh]
mov     [ecx+14h], ax
mov     eax, [edx+12h]
mov     [ecx+16h], ax
mov     eax, 1
mov     edx, [edx+4]
mov     [ecx+18h], dx
retn
push    esi
xor     eax, eax
mov     esi, [esp+4+arg_0]
push    edi
mov     ecx, [esi+62h]
test    ecx, ecx
jz      short loc_466f1a
mov     edi, [esp+8+arg_4]
test    ecx, ecx
jz      short loc_466efc
mov     ax, [edi+12h]
mov     [ecx+0ch], ax
movsx   edx, word ptr [edi+16h]
mov     [ecx+12h], edx
movsx   eax, word ptr [edi+14h]
mov     [ecx+0eh], eax
mov     eax, [ecx]
movsx   edx, word ptr [edi+18h]
push    edx
call    dword ptr [eax+4]
mov     eax, 1
mov     cx, [edi+12h]
mov     [esi+66h], cx
movsx   edx, word ptr [edi+16h]
mov     [esi+6ah], edx
mov     cx, [edi+14h]
mov     [esi+68h], cx
movsx   edi, word ptr [edi+18h]
mov     [esi+6eh], edi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     di, di
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+62h], 0
jnz     short loc_466f35
xor     ax, ax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466f44
xor     ax, ax
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_466f4f
mov     eax, [esi+62h]
mov     di, [eax+0ch]
mov     ax, di
pop     edi
pop     esi
retn
push    esi
call    sub_466bc0
xor     esi, esi
test    eax, eax
jz      short loc_466f8a
mov     eax, [esp+4+arg_0]
mov     ecx, [eax+62h]
test    ecx, ecx
jz      short loc_466f8a
push    esi
call    sub_468d90
test    eax, eax
jz      short loc_466f8a
push    eax
call    ds:createpalette
mov     esi, eax
mov     eax, esi
pop     esi
retn
mov     eax, [esp+ho]
test    eax, eax
jz      short locret_466f9f
push    eax
call    ds:deleteobject
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     [esi+62h], edi
jnz     short loc_466fb2
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_466fc0
xor     eax, eax
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_466fe5
mov     eax, [esi+62h]
cmp     dword ptr [eax+0d6h], 0
jnz     short loc_466fe0
cmp     dword ptr [eax+0a2h], 0
jnz     short loc_466fe0
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
retn
mov     edi, 1
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     esi, edi
jnz     short loc_467009
cmp     dword_4ae2dc, 1
sbb     eax, eax
pop     edi
inc     eax
pop     esi
retn
cmp     dword ptr [esi+62h], 0
jnz     short loc_467014
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_466bc0
test    eax, eax
jnz     short loc_467022
xor     eax, eax
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_467033
mov     eax, [esi+62h]
cmp     dword ptr [eax+0a2h], 1
sbb     edi, edi
inc     edi
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
call    sub_466bc0
test    eax, eax
jz      short loc_4670d0
cmp     dword_4ae2e8, 0
jnz     short loc_4670d0
test    edi, edi
jz      short loc_4670d0
mov     eax, [edi+62h]
test    eax, eax
jz      short loc_4670d0
mov     ecx, [eax+116h]
mov     esi, [esp+8+arg_4]
test    ecx, ecx
jz      short loc_4670bc
test    esi, esi
jz      short loc_46709b
call    sub_467d30
push    edi
mov     dword_4ae2dc, edi
call    sub_467330
add     esp, 4
jmp     short loc_4670bc
call    sub_467d50
mov     dword_4ae2dc, 0
push    edi
call    sub_466af0
add     esp, 4
push    edi
call    sub_467330
add     esp, 4
test    esi, esi
jnz     short loc_4670d0
push    0
push    0
call    sub_466810
push    eax
call    ds:invalidaterect
pop     edi
pop     esi
retn
push    esi
xor     eax, eax
mov     esi, [esp+4+arg_0]
test    esi, esi
jz      short loc_467131
cmp     [esi+62h], eax
jz      short loc_467131
push    eax
push    8
push    esi
call    dword ptr [esi+6]
mov     ecx, [esp+10h+arg_4]
add     esp, 0ch
lea     edx, [esi+0ch]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
push    edx
mov     [edx+4], eax
mov     eax, [ecx+8]
push    esi
mov     [edx+8], eax
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
call    sub_466a10
add     esp, 8
push    0
push    7
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
mov     eax, 1
pop     esi
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
test    ecx, ecx
jz      short locret_467158
cmp     [ecx+62h], eax
jz      short locret_467158
push    ecx
call    sub_467330
add     esp, 4
retn
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short locret_4671b7
mov     eax, [eax+62h]
test    eax, eax
jz      short locret_4671b7
mov     edx, [esp+lpstring]
test    edx, edx
jz      short locret_4671b7
mov     ecx, [eax+116h]
test    ecx, ecx
jz      short locret_4671b7
push    edx
call    sub_467d70
retn
mov     eax, ds:dword_4a892c
test    eax, eax
jnz     short loc_4671d7
push    2
mov     eax, ds:hinstance
push    eax
call    ds:loadacceleratorsa
mov     ds:dword_4a892c, eax
retn
mov     ax, 3
retn
mov     eax, ds:dword_4a9ef8
test    eax, eax
jnz     short locret_467227
mov     eax, dword_4ae830
test    eax, eax
jnz     short locret_467227
mov     eax, ds:hwndparent
retn
xor     eax, eax
mov     ecx, ds:hwndparent
cmp     ecx, eax
jz      short locret_46723e
mov     eax, ecx
retn
push    esi
push    edi
xor     esi, esi
call    sub_467230
mov     edi, eax
call    sub_4671c0
test    eax, eax
jz      short loc_467267
test    edi, edi
jz      short loc_467267
mov     ecx, [esp+8+lpmsg]
push    ecx
push    eax
push    edi
call    ds:translateacceleratora
mov     esi, eax
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, dword ptr [esp+arg_4]
mov     ecx, [esp+lpbuffer]
push    eax
push    ecx
call    sub_469460
add     esp, 8
retn
call    sub_466bc0
test    eax, eax
jz      short locret_4672af
cmp     dword_4ae2dc, 0
jz      short locret_4672af
mov     eax, dword_4ae2dc
mov     ecx, [eax+62h]
jmp     sub_468d40
retn
sub     esp, 4
push    ebx
push    esi
push    edi
xor     esi, esi
xor     ebx, ebx
cmp     dword_4ae2dc, esi
jz      short loc_467313
mov     edi, [esp+10h+msg]
cmp     edi, 311h
jnz     short loc_467313
mov     eax, dword_4ae2dc
mov     [esp+10h+hwnd], esi
mov     ecx, [eax+62h]
mov     eax, [ecx+0a2h]
test    eax, eax
jz      short loc_4672ef
lea     ecx, [esp+10h+hwnd]
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+0ch]
cmp     [esp+10h+hwnd], 0
jz      short loc_467313
mov     eax, [esp+10h+lparam]
mov     ecx, [esp+10h+wparam]
mov     edx, [esp+10h+hwnd]
push    eax
push    ecx
mov     esi, 1
push    edi
push    edx
call    ds:sendmessagea
mov     ebx, eax
mov     eax, [esp+10h+arg_10]
test    eax, eax
jz      short loc_46731d
mov     [eax], esi
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
cmp     [ecx+62h], eax
jz      short locret_46734f
test    ecx, ecx
jz      short locret_46734f
push    0
push    8
push    ecx
call    dword ptr [ecx+6]
add     esp, 0ch
mov     eax, 1
retn
sub     esp, 110h
push    ebx
push    esi
mov     si, [esp+118h+arg_0]
push    edi
push    ebp
xor     ebx, ebx
xor     edi, edi
push    esi
lea     eax, [esp+124h+buffer]
push    1cf0h
mov     [esp+128h+var_110], ebx
push    105h
push    eax
call    sub_47fe70
lea     eax, [esp+130h+var_110]
lea     ecx, [esp+130h+buffer]
add     esp, 10h
push    eax
push    ecx
call    sub_44f360
add     esp, 8
cmp     [esp+120h+var_110], ebx
jz      loc_46745f
mov     ebp, [esp+120h+arg_4]
push    8000h
call    ds:seterrormode
mov     [esp+120h+umode], eax
mov     eax, [esp+120h+var_110]
push    eax
call    sub_412df0
add     esp, 4
mov     [ebp+0], eax
mov     eax, [esp+120h+umode]
push    eax
call    ds:seterrormode
mov     eax, [ebp+0]
test    eax, eax
jz      short loc_4673f9
push    eax
push    esi
call    sub_4674a0
add     esp, 8
test    eax, eax
jz      short loc_4673ed
mov     ebx, 1
mov     edi, ebx
jmp     short loc_467400
push    ebp
push    esi
call    sub_467470
add     esp, 8
jmp     short loc_467400
mov     dword ptr [ebp+0], 0
test    edi, edi
jnz     short loc_46744a
lea     eax, [esp+120h+buffer]
push    eax
push    0cbh
call    sub_45c150
add     esp, 8
cmp     eax, 1
jnz     short loc_467445
lea     eax, [esp+120h+var_110]
push    eax
call    sub_4676e0
add     esp, 4
test    eax, eax
jz      short loc_467445
lea     eax, [esp+120h+buffer]
push    105h
mov     ecx, [esp+124h+var_110]
push    eax
push    ecx
call    sub_44f640
add     esp, 0ch
jmp     short loc_46744a
mov     ebx, 1
test    ebx, ebx
jz      loc_4673a5
mov     eax, [esp+120h+var_110]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 110h
retn
push    esi
mov     esi, [esp+4+arg_4]
mov     eax, [esi]
test    eax, eax
jz      short loc_46748a
push    eax
call    sub_412ee0
add     esp, 4
mov     dword ptr [esi], 0
mov     eax, [esp+4+arg_0]
push    eax
call    sub_467650
add     esp, 4
pop     esi
retn
cmp     [esp+arg_0], 0
push    esi
push    edi
jnz     loc_467644
mov     esi, [esp+8+hmodule]
push    offset axformrectinpix
push    esi
mov     edi, ds:getprocaddress
call    edi
mov     dword_4ae2ec, eax
test    eax, eax
jz      loc_467644
push    offset axformsizeinpix
push    esi
call    edi
mov     dword_4ae2f0, eax
test    eax, eax
jz      loc_467644
push    offset axformsizeinhim
push    esi
call    edi
mov     dword_4ae2f4, eax
test    eax, eax
jz      loc_467644
push    offset aolestdqueryint
push    esi
call    edi
mov     dword_4ae2f8, eax
test    eax, eax
jz      loc_467644
push    offset aolestdcreatest
push    esi
call    edi
mov     dword_4ae2fc, eax
test    eax, eax
jz      loc_467644
push    offset aolestddoconver
push    esi
call    edi
mov     dword_4ae300, eax
test    eax, eax
jz      loc_467644
push    offset aolestddotreata
push    esi
call    edi
mov     dword_4ae304, eax
test    eax, eax
jz      loc_467644
push    offset aolestdswitchdi
push    esi
call    edi
mov     dword_4ae308, eax
test    eax, eax
jz      loc_467644
push    offset aolestdseticoni
push    esi
call    edi
mov     dword_4ae30c, eax
test    eax, eax
jz      loc_467644
push    offset aolestdgetdata
push    esi
call    edi
mov     dword_4ae310, eax
test    eax, eax
jz      loc_467644
push    offset aolestdgetprior
push    esi
call    edi
mov     dword_4ae314, eax
test    eax, eax
jz      loc_467644
push    offset aolestdisduplic
push    esi
call    edi
mov     dword_4ae318, eax
test    eax, eax
jz      loc_467644
push    offset aolestdgetlenfi
push    esi
call    edi
mov     dword_4ae31c, eax
test    eax, eax
jz      short loc_467644
push    offset aolestdfree
push    esi
call    edi
mov     dword_4ae320, eax
test    eax, eax
jz      short loc_467644
push    offset aolestdfreestri
push    esi
call    edi
mov     dword_4ae324, eax
test    eax, eax
jz      short loc_467644
push    offset aolestdcopystri
push    esi
call    edi
mov     dword_4ae328, eax
test    eax, eax
jz      short loc_467644
push    offset aolestdgetusert
push    esi
call    edi
mov     dword_4ae32c, eax
test    eax, eax
jz      short loc_467644
push    offset aolestdfillobje
push    esi
call    edi
mov     dword_4ae330, eax
test    eax, eax
jz      short loc_467644
push    offset aoleuimetafilep
push    esi
call    edi
mov     dword_4ae334, eax
test    eax, eax
jz      short loc_467644
push    offset aoleuidrawshadi
push    esi
call    edi
mov     dword_4ae338, eax
test    eax, eax
jz      short loc_467644
mov     eax, 1
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
xor     ecx, ecx
cmp     [esp+arg_0], cx
jnz     short locret_4676d1
mov     dword_4ae2ec, ecx
mov     dword_4ae2f0, ecx
mov     dword_4ae2f4, ecx
mov     dword_4ae2f8, ecx
mov     dword_4ae2fc, ecx
mov     dword_4ae300, ecx
mov     dword_4ae304, ecx
mov     dword_4ae308, ecx
mov     dword_4ae30c, ecx
mov     dword_4ae310, ecx
mov     dword_4ae314, ecx
mov     dword_4ae318, ecx
mov     dword_4ae31c, ecx
mov     dword_4ae320, ecx
mov     dword_4ae324, ecx
mov     dword_4ae328, ecx
mov     dword_4ae32c, ecx
mov     dword_4ae330, ecx
mov     dword_4ae334, ecx
mov     dword_4ae338, ecx
retn
sub     esp, 58h
lea     eax, [esp+58h+var_58]
push    esi
mov     esi, [esp+5ch+arg_0]
push    edi
push    0
push    28h
push    eax
mov     ecx, [esi]
push    ecx
call    sub_44f860
add     esp, 10h
mov     eax, [esi]
push    eax
call    sub_44f4a0
lea     edi, [esp+64h+var_30]
add     esp, 4
xor     eax, eax
mov     ecx, 0ch
mov     dword ptr [esi], 0
rep stosd
mov     [esp+60h+var_30], 3e8h
lea     eax, [esp+60h+var_58]
mov     [esp+60h+var_c], esi
lea     ecx, [esp+60h+var_30]
push    eax
mov     [esp+64h+var_2c], 19h
mov     [esp+64h+var_24], 16h
mov     [esp+64h+var_10], 0ah
push    ecx
call    sub_47eeb0
add     esp, 8
dec     eax
cmp     eax, 1
pop     edi
sbb     eax, eax
pop     esi
neg     eax
add     esp, 58h
retn
push    esi
call    sub_466bc0
xor     esi, esi
test    eax, eax
jz      short loc_46778e
mov     eax, [esp+4+arg_0]
cmp     eax, esi
jnz     short loc_467778
xor     eax, eax
pop     esi
retn
mov     ecx, dword_4ae540
test    ecx, ecx
jnz     short loc_467786
xor     eax, eax
pop     esi
retn
push    eax
call    sub_4679f0
mov     esi, eax
mov     eax, esi
pop     esi
retn
push    esi
call    sub_466bc0
xor     esi, esi
test    eax, eax
jz      short loc_4677ce
mov     eax, [esp+4+arg_0]
cmp     eax, esi
jnz     short loc_4677b8
xor     eax, eax
pop     esi
retn
mov     ecx, dword_4ae540
test    ecx, ecx
jnz     short loc_4677c6
xor     eax, eax
pop     esi
retn
push    eax
call    sub_467a00
mov     esi, eax
mov     eax, esi
pop     esi
retn
xor     eax, eax
retn
xor     eax, eax
retn
sub     esp, 78h
xor     eax, eax
push    esi
push    edi
mov     edi, ecx
mov     esi, ecx
mov     ecx, 1ch
rep stosd
xor     edi, edi
mov     [esi], edi
mov     [esi+4], edi
push    7
mov     [esi+10h], edi
lea     eax, [esp+84h+multibytestr]
push    1c0ch
push    28h
mov     [esi+14h], edi
push    eax
mov     [esi+54h], edi
mov     dword ptr [esi+14h], 1
mov     [esi+68h], edi
call    sub_47fe70
lea     eax, [esp+90h+widecharstr]
lea     ecx, [esp+90h+multibytestr]
add     esp, 10h
push    50h
push    eax
push    0ffffffffh
push    ecx
push    edi
push    edi
call    ds:multibytetowidechar
lea     ecx, [esi+58h]
lea     edx, [esp+80h+widecharstr]
push    ecx
push    edx
call    ds:clsidfromstring
push    0dh
lea     ecx, [esi+2ch]
push    1b5ch
push    28h
push    ecx
call    sub_47fe70
add     esp, 10h
lea     edi, [esi+6ch]
push    14h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_4678a9
push    esi
mov     ecx, eax
call    sub_464580
mov     [edi], eax
jmp     short loc_4678af
mov     dword ptr [edi], 0
cmp     dword ptr [edi], 0
jz      short loc_4678bb
mov     dword ptr [esi+4], 1
cmp     dword ptr [esi+4], 0
jz      short loc_4678cb
mov     ecx, esi
call    sub_4679e0
mov     [esi+4], eax
push    60h
call    ds:setmessagequeue
mov     dword ptr [esi+8], 0
call    sub_467230
push    eax
call    ds:getmenu
pop     edi
mov     [esi+0ch], eax
mov     eax, esi
pop     esi
add     esp, 78h
retn
push    esi
mov     esi, ecx
cmp     dword ptr [ecx+10h], 0
jz      short loc_467910
mov     ecx, esi
call    sub_4679a0
cmp     dword ptr [esi+14h], 0
jz      short loc_467923
call    ds:oleuninitialize
mov     dword ptr [esi+14h], 0
pop     esi
retn
push    ebx
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
cmp     [esi+10h], edi
jnz     short loc_46798c
push    44h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_467957
push    esi
mov     ecx, eax
call    sub_467a10
mov     [esi+10h], eax
jmp     short loc_46795e
mov     dword ptr [esi+10h], 0
mov     ebx, [esi+10h]
test    ebx, ebx
jz      short loc_467991
mov     edi, [ebx]
test    edi, edi
jnz     short loc_467991
test    ebx, ebx
jz      short loc_46797f
mov     ecx, ebx
call    sub_467af0
push    ebx
call    ??3@yaxpax@z
add     esp, 4
mov     dword ptr [esi+10h], 0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     edi, 1
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    esi
xor     eax, eax
push    edi
mov     esi, ecx
mov     edi, [ecx+10h]
test    edi, edi
jz      short loc_4679c9
mov     ecx, edi
call    sub_467af0
push    edi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, 1
mov     dword ptr [esi+10h], 0
pop     edi
pop     esi
retn
jmp     sub_467230
mov     eax, 1
mov     dword ptr [ecx], 0
retn
xor     eax, eax
retn    4
xor     eax, eax
retn    4
sub     esp, 50h
push    ebx
push    esi
push    edi
mov     esi, ecx
lea     edi, [esi+8]
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
mov     eax, [esp+5ch+arg_0]
mov     dword ptr [edi], 0
push    1ch
mov     [esi+40h], eax
mov     dword ptr [esi+0ch], 0
mov     byte ptr [esi+10h], 0
mov     ecx, [eax+6ch]
lea     ebx, [esi+3ch]
mov     [esi+38h], ecx
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_467a63
push    esi
mov     ecx, eax
call    sub_464640
mov     [ebx], eax
jmp     short loc_467a69
mov     dword ptr [ebx], 0
cmp     dword ptr [ebx], 0
jz      short loc_467ae1
push    10h
call    ??2@yapaxi@z
add     esp, 4
mov     ecx, eax
test    ecx, ecx
jz      short loc_467a89
push    esi
call    sub_4652c0
mov     [esi+0ch], eax
jmp     short loc_467a90
mov     dword ptr [esi+0ch], 0
cmp     dword ptr [esi+0ch], 0
jz      short loc_467ae1
lea     eax, [esp+5ch+multibytestr]
push    28h
push    eax
mov     dword ptr [edi], 0
call    sub_467270
lea     eax, [esp+64h+widecharstr]
lea     ecx, [esp+64h+multibytestr]
add     esp, 8
push    28h
push    eax
push    0ffffffffh
push    ecx
push    0
push    0
call    ds:multibytetowidechar
lea     ecx, [esp+5ch+widecharstr]
push    edi
push    ecx
push    offset szdelim
call    ds:createitemmoniker
mov     dword ptr [esi+4], 0
mov     dword ptr [esi], 1
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn    4
sub     esp, 4
push    esi
push    edi
mov     eax, [ecx+8]
mov     esi, ecx
test    eax, eax
jz      short loc_467b0b
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     dword ptr [esi+8], 0
mov     ecx, [esi+0ch]
test    ecx, ecx
jz      short loc_467b42
mov     [esp+0ch+var_4], 0
lea     eax, [esp+0ch+var_4]
push    eax
call    sub_465420
mov     edi, [esi+0ch]
test    edi, edi
jz      short loc_467b3b
mov     ecx, edi
call    sub_465300
push    edi
call    ??3@yaxpax@z
add     esp, 4
mov     dword ptr [esi+0ch], 0
mov     edi, [esi+3ch]
test    edi, edi
jz      short loc_467b60
mov     ecx, edi
call    sub_4646c0
push    edi
call    ??3@yaxpax@z
mov     dword ptr [esi+3ch], 0
add     esp, 4
pop     edi
pop     esi
add     esp, 4
retn
push    esi
xor     eax, eax
mov     esi, ecx
mov     ecx, [ecx+8]
test    ecx, ecx
jz      short loc_467b85
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+4]
mov     eax, [esi+8]
pop     esi
retn    4
jmp     sub_467210
xor     eax, eax
mov     ecx, [ecx+0ch]
test    ecx, ecx
jz      short locret_467bb8
mov     eax, [esp+arg_0]
push    eax
call    sub_465320
mov     eax, 1
retn    4
xor     eax, eax
mov     ecx, [ecx+0ch]
test    ecx, ecx
jz      short locret_467bd8
mov     eax, [esp+arg_0]
push    eax
call    sub_4653a0
mov     eax, 1
retn    4
mov     eax, [esp+arg_0]
sub     esp, 4
mov     [esp+4+var_4], eax
push    ebx
lea     eax, [esp+8+var_4]
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
push    eax
mov     ecx, [esi+0ch]
call    sub_465420
cmp     [esp+10h+var_4], edi
jz      short loc_467c48
xor     ebx, ebx
mov     eax, [esp+10h+var_4]
cmp     [eax+0eah], ebx
jz      short loc_467c26
mov     ecx, [eax+0d2h]
push    ecx
call    sub_467170
add     esp, 4
test    eax, eax
jnz     short loc_467c44
lea     eax, [esp+10h+var_4]
mov     ecx, [esi+0ch]
push    eax
call    sub_465420
cmp     [esp+10h+var_4], ebx
jnz     short loc_467c07
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    4
mov     edi, [esp+10h+var_4]
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    4
sub     esp, 4
mov     [esp+4+var_4], 0
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, ecx
mov     edi, [esp+14h+block]
test    edi, edi
jz      loc_467d14
push    offset dword_4ac3b0
mov     ecx, edi
call    sub_4687c0
mov     ebx, eax
test    ebx, ebx
jz      loc_467d14
push    11ah
mov     esi, 0
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_467cb4
push    ebx
mov     ecx, eax
push    ebp
call    sub_467f10
mov     esi, eax
test    esi, esi
jz      short loc_467d0a
cmp     dword ptr [esi+0fah], 0
jz      short loc_467cf6
mov     dword ptr [ebp+4], 1
push    esi
mov     eax, [edi+0d2h]
push    eax
call    sub_467180
add     esp, 8
test    eax, eax
jz      short loc_467d0a
test    edi, edi
jz      short loc_467cf0
mov     ecx, edi
call    sub_467fa0
push    edi
call    ??3@yaxpax@z
add     esp, 4
mov     [esp+14h+var_4], esi
jmp     short loc_467d0a
test    esi, esi
jz      short loc_467d0a
mov     ecx, esi
call    sub_467fa0
push    esi
call    ??3@yaxpax@z
add     esp, 4
test    ebx, ebx
jz      short loc_467d14
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+8]
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    4
push    esi
mov     esi, ecx
call    sub_467b90
test    eax, eax
jz      short loc_467d49
push    28h
add     esi, 10h
push    esi
push    eax
call    ds:getwindowtexta
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_467b90
test    eax, eax
jz      short loc_467d67
add     esi, 10h
push    esi
push    eax
call    ds:setwindowtexta
pop     esi
retn
push    esi
mov     esi, [esp+4+lpstring]
test    esi, esi
jz      short loc_467d8a
call    sub_467b90
test    eax, eax
jz      short loc_467d8a
push    esi
push    eax
call    ds:setwindowtexta
pop     esi
retn    4
mov     eax, dword ptr [esp+arg_4]
mov     ecx, [esp+lpbuffer]
push    eax
push    ecx
call    sub_467270
add     esp, 8
retn    8
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     esi, ecx
push    ebp
mov     ebx, 80004005h
xor     edi, edi
call    sub_468e90
mov     ebp, [esp+1ch+arg_0]
mov     ecx, esi
push    ebp
mov     dword ptr [esi], offset off_4ab7b8
mov     [esp+20h+pplkbyt], edi
mov     [esp+20h+ppstgopen], edi
call    sub_468030
mov     ecx, [esp+1ch+hglobal]
cmp     ecx, edi
jz      loc_467eee
test    ebp, ebp
jz      loc_467eee
test    eax, eax
jz      loc_467eee
lea     eax, [esp+1ch+pplkbyt]
push    eax
push    edi
push    ecx
call    ds:createilockbytesonhglobal
test    eax, eax
jl      short loc_467e23
lea     eax, [esp+1ch+ppstgopen]
mov     ecx, [esp+1ch+pplkbyt]
push    eax
push    edi
push    edi
push    10012h
push    edi
push    ecx
call    stgopenstorageonilockbytes
cmp     [esp+1ch+ppstgopen], 0
jz      short loc_467e68
mov     eax, [esi+0ceh]
mov     ecx, [esp+1ch+ppstgopen]
push    eax
push    0
push    0
mov     eax, [ecx]
push    0
push    ecx
call    dword ptr [eax+1ch]
mov     eax, [esi+0ceh]
push    1
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+24h]
cmp     [esp+1ch+ppstgopen], 0
jz      short loc_467e68
mov     eax, [esp+1ch+ppstgopen]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     [esp+1ch+ppstgopen], 0
cmp     [esp+1ch+pplkbyt], 0
jz      short loc_467e81
mov     eax, [esp+1ch+pplkbyt]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     [esp+1ch+pplkbyt], 0
lea     edi, [esi+9eh]
mov     eax, [esi+10eh]
push    edi
mov     edx, [esi+0ceh]
mov     ecx, [eax+14h]
push    ecx
push    offset iid
push    edx
call    ds:oleload
mov     ebx, eax
mov     eax, [edi]
test    eax, eax
jz      short loc_467ec9
lea     ecx, [esp+1ch+var_4]
push    ecx
push    1
push    eax
mov     eax, [eax]
call    dword ptr [eax+58h]
mov     eax, [esp+1ch+var_4]
and     eax, 40h
shr     eax, 6
mov     [esi+0eah], eax
test    ebx, ebx
jl      short loc_467edc
push    0
mov     ecx, esi
call    sub_468180
mov     ebx, eax
test    ebx, ebx
jge     short loc_467ef0
mov     eax, [edi]
test    eax, eax
jz      short loc_467ee8
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     dword ptr [edi], 0
test    ebx, ebx
mov     eax, 1
jge     short loc_467ef9
xor     eax, eax
pop     ebp
mov     [esi+0fah], eax
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn    8
push    ebx
push    esi
push    edi
mov     edi, ecx
call    sub_468e90
mov     esi, [esp+0ch+arg_0]
mov     ecx, edi
push    esi
mov     dword ptr [edi], offset off_4ab7b8
call    sub_468030
mov     ebx, eax
test    esi, esi
jz      short loc_467f8c
mov     ecx, [esp+0ch+psrcdataobj]
test    ecx, ecx
jz      short loc_467f8c
test    ebx, ebx
jz      short loc_467f8c
lea     esi, [edi+9eh]
mov     eax, [edi+0ceh]
push    esi
mov     edx, [edi+10eh]
push    eax
mov     ebx, [edx+14h]
push    ebx
mov     eax, [edi+9ah]
push    0
mov     ebx, 1
push    eax
push    offset iid
push    ecx
call    ds:olecreatestaticfromdata
test    eax, eax
jge     short loc_467f76
xor     ebx, ebx
test    ebx, ebx
jnz     short loc_467f8c
mov     eax, [esi]
test    eax, eax
jz      short loc_467f86
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     dword ptr [esi], 0
mov     eax, edi
mov     [edi+0fah], ebx
pop     edi
pop     esi
pop     ebx
retn    8
push    esi
push    edi
mov     dword ptr [ecx], offset off_4ab7b8
mov     esi, ecx
mov     ecx, esi
call    sub_468be0
mov     dword ptr [esi+0d2h], 0
mov     ecx, [esi+116h]
test    ecx, ecx
jz      short loc_467fcb
push    esi
call    sub_467bc0
mov     eax, [esi+9eh]
test    eax, eax
jz      short loc_467fe5
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     dword ptr [esi+9eh], 0
mov     edi, [esi+10eh]
test    edi, edi
jz      short loc_468009
mov     ecx, edi
call    sub_4650d0
push    edi
call    ??3@yaxpax@z
mov     dword ptr [esi+10eh], 0
add     esp, 4
mov     eax, [esi+0ceh]
test    eax, eax
jz      short loc_468023
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     dword ptr [esi+0ceh], 0
mov     ecx, esi
call    sub_468ef0
pop     edi
pop     esi
retn
push    ebx
xor     eax, eax
push    esi
mov     ebx, 1
push    edi
mov     [ecx+1ah], al
mov     [ecx+102h], eax
mov     [ecx+0feh], eax
mov     [ecx+0f6h], ebx
mov     [ecx+0f2h], eax
mov     [ecx+0eeh], eax
mov     [ecx+0eah], eax
mov     edi, ecx
mov     [ecx+0dah], eax
mov     [ecx+0deh], eax
mov     [ecx+0e2h], eax
mov     [ecx+0e6h], eax
lea     ecx, [ecx+0dah]
mov     [edi+0ceh], eax
mov     [edi+0d2h], eax
mov     [edi+9eh], eax
mov     esi, [esp+0ch+arg_0]
mov     [edi+0a2h], eax
mov     [edi+0a6h], eax
mov     [edi+9ah], ebx
mov     [edi+0d6h], eax
cmp     esi, eax
jz      short loc_4680be
mov     eax, [esi+40h]
mov     [edi+112h], eax
jmp     short loc_4680c8
mov     dword ptr [edi+112h], 0
mov     [edi+116h], esi
test    esi, esi
jz      short loc_4680dd
mov     eax, [esi+38h]
mov     [edi+106h], eax
jmp     short loc_4680e7
mov     dword ptr [edi+106h], 0
test    esi, esi
jz      short loc_4680f6
mov     eax, [esi+3ch]
mov     [edi+10ah], eax
jmp     short loc_468100
mov     dword ptr [edi+10ah], 0
test    esi, esi
jz      short loc_468130
push    edi
mov     ecx, esi
call    sub_467ba0
test    esi, esi
jz      short loc_468130
push    3ch
lea     esi, [edi+10eh]
call    ??2@yapaxi@z
add     esp, 4
mov     ecx, eax
test    ecx, ecx
jz      short loc_468136
push    edi
call    sub_464fd0
mov     [esi], eax
jmp     short loc_46813c
lea     esi, [edi+10eh]
mov     dword ptr [esi], 0
cmp     dword ptr [esi], 0
jz      short loc_46815c
push    1012h
push    1
push    0
call    dword_4ae2fc
mov     [edi+0ceh], eax
cmp     eax, 1
sbb     ebx, ebx
inc     ebx
test    ebx, ebx
jz      short loc_468169
mov     ecx, edi
call    sub_468f10
mov     ebx, eax
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 80h
push    ebx
push    esi
mov     eax, [ecx+9eh]
push    edi
push    ebp
mov     esi, ecx
xor     edi, edi
test    eax, eax
jz      loc_4682b8
lea     ecx, [esp+90h+var_80]
push    ecx
push    offset dword_4abf60
push    eax
mov     eax, [eax]
call    dword ptr [eax]
mov     edi, eax
test    edi, edi
jl      loc_4682b8
lea     ebx, [esi+9ah]
mov     eax, [esi+10eh]
mov     ecx, [eax+18h]
mov     edx, [ebx]
mov     eax, dword ptr [esp+90h+var_80]
push    ecx
push    2
push    edx
push    eax
mov     ebp, [eax]
call    dword ptr [ebp+1ch]
mov     ecx, dword ptr [esp+90h+var_80]
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     ecx, [esi+9eh]
lea     edx, [esi+102h]
push    edx
mov     eax, [esi+10eh]
mov     dword ptr [esp+94h+var_80], 0
mov     ebp, [eax+18h]
mov     eax, [ecx]
push    ebp
push    ecx
call    dword ptr [eax+4ch]
test    eax, eax
jl      loc_4682b8
lea     eax, [esp+90h+multibytestr]
push    28h
push    eax
mov     ecx, [esi+116h]
call    sub_467d90
lea     eax, [esp+90h+widecharstr]
push    28h
lea     ecx, [esp+94h+multibytestr]
push    eax
push    0ffffffffh
mov     ebp, ds:multibytetowidechar
push    ecx
push    0
push    0
call    ebp
lea     ecx, [esp+90h+var_78]
push    28h
push    ecx
mov     eax, [esi+112h]
push    0ffffffffh
add     eax, 2ch
push    eax
push    0
push    0
call    ebp
mov     ecx, [esi+9eh]
lea     edx, [esp+90h+widecharstr]
lea     eax, [esp+90h+var_78]
push    edx
push    eax
mov     ebp, [ecx]
push    ecx
call    dword ptr [ebp+14h]
test    eax, eax
jl      short loc_4682b8
push    1
mov     eax, [esi+9eh]
push    eax
mov     ebp, ds:olesetcontainedobject
call    ebp
mov     ebp, [esp+90h+arg_0]
test    ebp, ebp
jz      short loc_4682b1
lea     eax, [esp+90h+var_7c]
push    eax
push    0
push    0
mov     ecx, [esi+9eh]
push    0
push    ebp
push    4
push    ebx
push    ecx
call    dword_4ae308
mov     dword ptr [esi+4], 1
mov     [esi+0f2h], ebp
jmp     short loc_4682b8
mov     dword ptr [esi+4], 0
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 80h
retn    4
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     esi, 80004005h
mov     edi, [esp+18h+arg_0]
push    ebp
mov     ebp, ecx
xor     ebx, ebx
test    edi, edi
jz      loc_46838a
lea     eax, [esp+1ch+pplkbyt]
mov     [esp+1ch+pplkbyt], ebx
push    eax
push    1
push    ebx
call    ds:createilockbytesonhglobal
mov     esi, eax
test    esi, esi
jl      loc_46838a
cmp     [esp+1ch+pplkbyt], ebx
jz      short loc_46838a
lea     eax, [esp+1ch+ppstgopen]
mov     ecx, [esp+1ch+pplkbyt]
mov     [esp+1ch+ppstgopen], ebx
push    eax
push    ebx
push    1012h
push    ecx
call    stgcreatedocfileonilockbytes
mov     esi, eax
test    esi, esi
jl      short loc_468380
cmp     [esp+1ch+ppstgopen], ebx
jz      short loc_468380
mov     eax, [esp+1ch+ppstgopen]
mov     ecx, ebp
push    eax
call    sub_4683a0
mov     esi, eax
test    esi, esi
jl      short loc_468376
lea     eax, [esp+1ch+phglobal]
mov     ecx, [esp+1ch+pplkbyt]
push    eax
mov     ebp, ds:gethglobalfromilockbytes
mov     [esp+20h+phglobal], ebx
push    ecx
call    ebp
mov     esi, eax
test    esi, esi
jl      short loc_468376
cmp     [esp+1ch+phglobal], ebx
jz      short loc_468376
mov     eax, [esp+1ch+phglobal]
push    eax
call    sub_45bab0
add     esp, 4
mov     [edi], eax
mov     eax, [esp+1ch+ppstgopen]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, [esp+1ch+pplkbyt]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn    4
sub     esp, 4
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, 80004005h
mov     edi, [esp+10h+pstg]
cmp     edi, ebx
jz      short loc_4683bd
cmp     [ecx+0ceh], edi
jnz     short loc_4683c8
mov     ebx, 1
mov     edi, [ecx+0ceh]
mov     ecx, [ecx+9eh]
test    ecx, ecx
jz      short loc_468407
lea     eax, [esp+10h+pps]
mov     esi, [ecx]
push    eax
push    offset dword_4ac340
push    ecx
call    dword ptr [esi]
mov     esi, eax
test    esi, esi
jl      short loc_468407
mov     eax, [esp+10h+pps]
push    ebx
push    edi
push    eax
call    ds:olesave
cmp     [esp+10h+pps], 0
mov     esi, eax
jz      short loc_468407
mov     eax, [esp+10h+pps]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    4
sub     esp, 8
push    ebx
push    esi
push    edi
mov     ebx, 80004005h
push    ebp
mov     ebp, ecx
mov     ecx, [ecx+116h]
test    ecx, ecx
jz      short loc_468485
call    sub_467b90
mov     esi, eax
test    esi, esi
jz      short loc_468485
push    esi
call    ds:getdc
mov     edi, eax
test    edi, edi
jz      short loc_468485
mov     ecx, [ebp+9eh]
lea     eax, [esp+18h+var_8]
push    eax
mov     edx, [ebp+9ah]
push    edx
mov     ebx, [ecx]
push    ecx
call    dword ptr [ebx+48h]
mov     ebx, eax
lea     ecx, [esp+18h+var_8]
mov     eax, [esp+18h+arg_0]
push    eax
push    ecx
push    edi
call    dword_4ae2f4
push    edi
mov     ebp, ds:releasedc
push    esi
call    ebp
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn    4
push    ebx
push    esi
push    edi
mov     ebx, ecx
mov     esi, [esp+0ch+hdcdraw]
test    esi, esi
jz      short loc_4684f7
cmp     dword ptr [ebx+0a2h], 0
jnz     short loc_4684f7
push    esi
call    sub_40ae90
mov     edi, [esp+10h+lprcbounds]
add     esp, 4
mov     eax, [ebx+9ah]
mov     ecx, [ebx+9eh]
push    edi
push    esi
push    eax
push    ecx
call    ds:oledraw
cmp     dword ptr [ebx+0d6h], 0
jnz     short loc_4684eb
cmp     dword ptr [ebx+0a2h], 0
jz      short loc_4684f7
push    0
push    1
push    esi
push    edi
call    dword_4ae338
pop     edi
pop     esi
pop     ebx
retn    8
sub     esp, 10h
push    esi
push    edi
mov     edi, ecx
xor     esi, esi
cmp     [edi+9eh], esi
jz      short loc_468567
cmp     [edi+116h], esi
jz      short loc_468567
lea     eax, [esp+18h+var_10]
mov     ecx, edi
push    eax
call    sub_468750
test    eax, eax
jz      short loc_468567
mov     ecx, [edi+116h]
call    sub_467b90
test    eax, eax
jz      short loc_468567
mov     edx, [edi+9eh]
lea     ecx, [esp+18h+var_10]
push    ecx
push    eax
push    esi
mov     eax, [edi+10eh]
mov     ecx, [esp+24h+arg_0]
mov     esi, [eax+14h]
push    esi
mov     eax, [edx]
push    0
mov     esi, 1
push    ecx
push    edx
call    dword ptr [eax+2ch]
test    eax, eax
jge     short loc_468567
xor     esi, esi
mov     eax, esi
pop     edi
pop     esi
add     esp, 10h
retn    4
sub     esp, 4
mov     [esp+4+ppmkcomposite], 0
push    ebx
push    esi
push    edi
mov     ebx, ecx
mov     edi, [esp+10h+arg_0]
mov     ecx, [ebx+116h]
push    edi
call    sub_467b70
mov     esi, eax
test    esi, esi
jnz     short loc_4685b1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    4
push    edi
mov     ecx, ebx
call    sub_4685f0
mov     edi, eax
test    edi, edi
jz      short loc_4685d2
lea     eax, [esp+10h+ppmkcomposite]
push    eax
push    edi
push    esi
call    ds:creategenericcomposite
push    edi
mov     edi, [edi]
call    dword ptr [edi+8]
test    esi, esi
jz      short loc_4685dc
push    esi
mov     eax, [esi]
call    dword ptr [eax+8]
mov     eax, [esp+10h+ppmkcomposite]
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    4
mov     eax, [esp+arg_0]
sub     esp, 4
dec     eax
push    esi
mov     esi, ecx
cmp     eax, 3
mov     [esp+8+ppmk], 0
ja      def_46860c
jmp     ds:jpt_46860c[eax*4]
cmp     dword ptr [esi+0a6h], 0
jz      def_46860c
lea     eax, [esp+8+ppmk]
add     esi, 0aeh
push    eax
push    esi
push    offset szdelim
call    ds:createitemmoniker
mov     eax, [esp+8+ppmk]
pop     esi
add     esp, 4
retn    4
lea     eax, [esp+8+ppmk]
lea     ecx, [esi+0aeh]
push    eax
push    ecx
push    offset szdelim
call    ds:createitemmoniker
mov     eax, [esi+9eh]
mov     ecx, [esp+8+ppmk]
mov     dword ptr [esi+0a6h], 1
push    ecx
mov     esi, [eax]
push    2
push    eax
call    dword ptr [esi+1ch]
mov     eax, [esp+8+ppmk]
pop     esi
add     esp, 4
retn    4
mov     dword ptr [esi+0a6h], 0
mov     eax, [esp+8+ppmk]
pop     esi
add     esp, 4
retn    4
lea     eax, [esp+8+ppmk]
add     esi, 0aeh
push    eax
push    esi
push    offset szdelim
call    ds:createitemmoniker
mov     eax, [esp+8+ppmk]
pop     esi
add     esp, 4
retn    4
push    esi
mov     eax, 1
mov     esi, [esp+4+arg_0]
test    esi, esi
jz      short loc_468701
mov     edx, [esi]
mov     [ecx+0dah], edx
mov     edx, [esi+8]
mov     [ecx+0e2h], edx
mov     edx, [esi+4]
mov     [ecx+0deh], edx
mov     esi, [esi+0ch]
mov     [ecx+0e6h], esi
pop     esi
retn    4
xor     eax, eax
mov     edx, [esp+arg_0]
cmp     edx, eax
jz      short locret_468742
mov     eax, [ecx+0dah]
mov     [edx], eax
mov     eax, [ecx+0e2h]
mov     [edx+8], eax
mov     eax, [ecx+0deh]
mov     [edx+4], eax
mov     eax, 1
mov     ecx, [ecx+0e6h]
mov     [edx+0ch], ecx
retn    4
sub     esp, 8
xor     eax, eax
push    esi
push    edi
mov     edi, ecx
mov     esi, [esp+10h+arg_0]
cmp     esi, eax
jz      short loc_4687b3
lea     ecx, [esp+10h+var_4]
mov     [esp+10h+var_4], eax
mov     [esp+10h+var_8], eax
lea     eax, [esp+10h+var_8]
push    eax
push    ecx
call    sub_474d10
add     esp, 8
mov     eax, [edi+0dah]
sub     eax, [esp+10h+var_4]
mov     [esi], eax
mov     eax, [edi+0e2h]
sub     eax, [esp+10h+var_4]
mov     [esi+8], eax
mov     eax, [edi+0deh]
sub     eax, [esp+10h+var_8]
mov     [esi+4], eax
mov     eax, [edi+0e6h]
sub     eax, [esp+10h+var_8]
mov     [esi+0ch], eax
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn    4
mov     ecx, [ecx+9eh]
test    ecx, ecx
jz      short loc_4687d9
mov     eax, [esp+arg_0]
push    eax
push    ecx
call    dword_4ae2f8
retn    4
xor     eax, eax
retn    4
mov     eax, [ecx+0d2h]
push    eax
call    sub_467160
add     esp, 4
retn
sub     esp, 4
mov     eax, [esp+4+arg_0]
push    ebx
push    esi
test    eax, eax
push    edi
mov     esi, ecx
mov     [esp+10h+var_4], 0
mov     edi, 1
jz      short loc_46885a
cmp     dword ptr [esi+4], 0
jnz     short loc_468856
lea     ebx, [esi+9ah]
lea     eax, [esp+10h+var_4]
push    eax
mov     ecx, [esi+10eh]
mov     eax, [esi+0f2h]
mov     edx, [ecx+18h]
push    edx
mov     ecx, [esi+9eh]
push    edi
push    0
push    eax
push    4
push    ebx
push    ecx
call    dword_4ae308
test    eax, eax
jge     short loc_468848
xor     edi, edi
test    edi, edi
jz      short loc_4688a9
push    1
mov     dword ptr [ebx], 4
jmp     short loc_4688a2
test    eax, eax
jnz     short loc_4688a9
cmp     dword ptr [esi+4], 0
jz      short loc_4688a9
lea     ebx, [esi+9ah]
lea     eax, [esp+10h+var_4]
push    eax
mov     ecx, [esi+10eh]
mov     edx, [ecx+18h]
mov     eax, [esi+9eh]
push    edx
push    1
push    0
push    0
push    1
mov     edi, 1
push    ebx
push    eax
call    dword_4ae308
test    eax, eax
jge     short loc_468896
xor     edi, edi
test    edi, edi
jz      short loc_4688a9
push    0
mov     dword ptr [ebx], 1
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0ch]
cmp     [esp+10h+var_4], 0
jz      short loc_4688c1
push    0
mov     eax, [esi+0d2h]
push    eax
call    sub_467140
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    4
push    esi
push    edi
xor     edi, edi
push    offset dword_4abef0
call    sub_4687c0
mov     esi, eax
test    esi, esi
jz      short loc_46890b
cmp     [esp+8+arg_0], 1
sbb     eax, eax
mov     edi, [esi]
and     eax, 2
inc     eax
push    eax
push    esi
call    dword ptr [edi+0ch]
mov     edi, 1
test    eax, eax
jge     short loc_468901
xor     edi, edi
test    esi, esi
jz      short loc_46890b
push    esi
mov     eax, [esi]
call    dword ptr [eax+8]
mov     eax, edi
pop     edi
pop     esi
retn    4
push    esi
xor     eax, eax
push    edi
cmp     [ecx+0eah], eax
mov     edi, ecx
jz      short loc_46895c
mov     ecx, [edi+9eh]
test    ecx, ecx
jz      short loc_46895c
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+34h]
mov     esi, eax
push    0
mov     eax, [edi+0d2h]
push    eax
call    sub_467140
add     esp, 8
mov     eax, 1
test    esi, esi
jge     short loc_46895c
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_468975
lea     edx, [ecx+0eh]
push    edx
push    eax
call    sub_468a10
retn    4
mov     dword ptr [ecx+0eh], 0
retn    4
sub     esp, 14h
push    ebx
push    esi
mov     esi, [esp+1ch+lpmultibytestr]
push    edi
xor     edi, edi
cmp     esi, edi
jz      short loc_4689ff
mov     eax, [ecx+9eh]
mov     [esp+20h+var_14], edi
test    eax, eax
jz      short loc_4689ff
lea     ecx, [esp+20h+var_14]
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+30h]
cmp     [esp+20h+var_14], edi
jz      short loc_4689ff
mov     eax, [esp+20h+var_14]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+14h]
test    eax, eax
jnz     short loc_4689ff
mov     ebx, [esp+20h+arg_0]
lea     eax, [esp+20h+var_10]
push    0
mov     ecx, [esp+24h+var_14]
push    eax
mov     eax, [ecx]
push    1
push    ecx
call    dword ptr [eax+0ch]
test    eax, eax
jnz     short loc_4689ff
cmp     ebx, dword ptr [esp+20h+var_10]
jnz     short loc_4689c1
mov     ecx, [esp+20h+lpwidecharstr]
push    0
movsx   eax, [esp+24h+arg_8]
push    0
push    eax
push    esi
mov     edi, 1
push    0ffffffffh
push    ecx
push    0
push    0
call    ds:widechartomultibyte
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn    0ch
sub     esp, 3ch
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     edi, [esp+48h+arg_4]
push    ebp
cmp     edi, ebx
jz      loc_468acb
mov     esi, [esp+4ch+arg_0]
cmp     esi, ebx
jz      short loc_468a36
cmp     byte ptr [esi], 1
sbb     eax, eax
neg     eax
jmp     short loc_468a3b
mov     eax, 1
test    eax, eax
jz      short loc_468a47
mov     dword ptr [edi], 0
jmp     short loc_468ac6
mov     [esp+4ch+var_3c], 0
mov     eax, [ecx+9eh]
test    eax, eax
jz      short loc_468acb
lea     ecx, [esp+4ch+var_3c]
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+30h]
cmp     [esp+4ch+var_3c], 0
jz      short loc_468acb
mov     eax, [esp+4ch+var_3c]
push    eax
mov     ebp, [eax]
call    dword ptr [ebp+14h]
test    eax, eax
jnz     short loc_468acb
mov     ebp, ds:widechartomultibyte
lea     eax, [esp+4ch+var_38]
push    0
mov     ecx, [esp+50h+var_3c]
push    eax
mov     eax, [ecx]
push    1
push    ecx
call    dword ptr [eax+0ch]
test    eax, eax
jnz     short loc_468acb
lea     eax, [esp+4ch+multibytestr]
push    0
mov     ecx, [esp+50h+lpwidecharstr]
push    0
push    28h
push    eax
push    0ffffffffh
push    ecx
push    0
push    0
call    ebp
lea     ecx, [esp+4ch+multibytestr]
push    esi
push    ecx
call    sub_468c40
add     esp, 8
test    eax, eax
jz      short loc_468a7f
mov     eax, [esp+4ch+var_38]
mov     [edi], eax
mov     ebx, 1
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn    8
sub     esp, 14h
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+1ch+arg_4]
cmp     esi, edi
jz      short loc_468b5c
mov     eax, [ecx+9eh]
mov     [esp+1ch+var_14], edi
test    eax, eax
jz      short loc_468b5c
lea     ecx, [esp+1ch+var_14]
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+30h]
cmp     [esp+1ch+var_14], edi
jz      short loc_468b5c
mov     eax, [esp+1ch+var_14]
push    eax
mov     eax, [eax]
call    dword ptr [eax+14h]
test    eax, eax
jnz     short loc_468b5c
mov     cx, [esp+1ch+arg_0]
cmp     cx, 1
jle     short loc_468b36
movsx   eax, cx
dec     eax
mov     ecx, [esp+1ch+var_14]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+10h]
test    eax, eax
jnz     short loc_468b5c
lea     eax, [esp+1ch+var_10]
push    0
mov     ecx, [esp+20h+var_14]
push    eax
mov     eax, [ecx]
push    1
push    ecx
call    dword ptr [eax+0ch]
test    eax, eax
jnz     short loc_468b5c
mov     eax, [esp+1ch+var_10]
mov     edi, 1
mov     [esi], eax
mov     eax, edi
pop     edi
pop     esi
add     esp, 14h
retn    8
sub     esp, 14h
mov     eax, [ecx+9eh]
push    esi
push    edi
xor     esi, esi
xor     edi, edi
test    eax, eax
jz      short loc_468bcf
lea     ecx, [esp+1ch+var_14]
mov     [esp+1ch+var_14], esi
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+30h]
cmp     [esp+1ch+var_14], esi
jz      short loc_468bcf
mov     eax, [esp+1ch+var_14]
push    eax
mov     edi, [eax]
call    dword ptr [edi+14h]
test    eax, eax
jnz     short loc_468bc3
lea     eax, [esp+1ch+var_10]
push    0
mov     ecx, [esp+20h+var_14]
push    eax
mov     eax, [ecx]
push    1
push    ecx
call    dword ptr [eax+0ch]
test    eax, eax
jnz     short loc_468bc3
inc     si
test    eax, eax
jz      short loc_468ba6
mov     eax, [esp+1ch+arg_0]
mov     edi, 1
mov     [eax], si
mov     eax, edi
pop     edi
pop     esi
add     esp, 14h
retn    4
push    ebx
push    esi
push    edi
xor     esi, esi
mov     ebx, [ecx+9eh]
mov     edi, ecx
mov     ecx, edi
call    sub_468c20
test    ebx, ebx
jz      short loc_468c15
mov     eax, [edi+102h]
test    eax, eax
jz      short loc_468c15
push    eax
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+50h]
mov     dword ptr [edi+102h], 0
mov     esi, eax
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
mov     ecx, [ecx+0a2h]
test    ecx, ecx
jz      short locret_468c32
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+14h]
retn
mov     edx, [esp+lpstring2]
sub     esp, 50h
test    edx, edx
push    ebx
push    esi
push    edi
push    ebp
jz      short loc_468c58
cmp     byte ptr [edx], 1
sbb     eax, eax
neg     eax
jmp     short loc_468c5d
mov     eax, 1
mov     ebp, [esp+60h+arg_4]
test    ebp, ebp
jz      short loc_468c6e
cmp     byte ptr [edx], 1
sbb     ecx, ecx
neg     ecx
jmp     short loc_468c73
mov     ecx, 1
test    eax, eax
jz      short loc_468c88
test    ecx, ecx
jz      short loc_468c88
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
cmp     ecx, eax
jz      short loc_468c96
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
mov     bx, 28h
lea     esi, [esp+60h+sz]
lea     edi, [esp+60h+string1]
push    28h
lea     eax, [esp+64h+sz]
push    edx
push    eax
call    sub_47f9d0
lea     eax, [esp+6ch+string1]
add     esp, 0ch
push    28h
push    ebp
push    eax
call    sub_47f9d0
lea     eax, [esp+6ch+sz]
add     esp, 0ch
mov     ebp, ds:charlowera
push    eax
call    ebp
lea     ecx, [esp+60h+string1]
push    ecx
call    ebp
cmp     [esp+60h+sz], 0
jz      short loc_468d16
mov     al, [edi]
test    al, al
jz      short loc_468d16
dec     bx
test    bx, bx
jle     short loc_468d16
cmp     byte ptr [esi], 26h
jnz     short loc_468cf5
inc     esi
cmp     byte ptr [esi], 26h
jz      short loc_468cef
cmp     al, 26h
jnz     short loc_468cff
inc     edi
cmp     byte ptr [edi], 26h
jz      short loc_468cf9
mov     cl, [esi]
test    cl, cl
jz      short loc_468d16
mov     al, [edi]
test    al, al
jz      short loc_468d16
cmp     cl, al
jnz     short loc_468d16
inc     esi
inc     edi
cmp     byte ptr [esi], 0
jnz     short loc_468cdd
cmp     byte ptr [esi], 0
jnz     short loc_468d25
mov     eax, 0
cmp     byte ptr [edi], 0
jz      short loc_468d2a
mov     eax, 1
pop     ebp
cmp     eax, 1
sbb     eax, eax
pop     edi
neg     eax
pop     esi
pop     ebx
add     esp, 50h
retn
sub     esp, 10h
push    esi
mov     esi, ecx
cmp     dword ptr [ecx+0a2h], 0
jz      short loc_468d8a
mov     ecx, [esi+112h]
call    sub_4679d0
test    eax, eax
jz      short loc_468d8a
lea     ecx, [esp+14h+rect]
push    ecx
push    eax
call    sub_490960
add     esp, 8
mov     eax, [esi+10eh]
mov     ecx, [eax+10h]
test    ecx, ecx
jz      short loc_468d8a
push    1
mov     eax, [eax+1ch]
lea     edx, [esp+18h+rect]
push    eax
push    edx
mov     esi, [ecx]
push    ecx
call    dword ptr [esi+20h]
pop     esi
add     esp, 10h
retn
sub     esp, 8
mov     [esp+8+var_4], 0
push    esi
mov     eax, [ecx+9eh]
mov     esi, ecx
lea     ecx, [esp+0ch+var_8]
push    ecx
push    offset dword_4abf60
push    eax
mov     eax, [eax]
call    dword ptr [eax]
cmp     [esp+0ch+var_8], 0
jz      short loc_468dec
lea     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+arg_0]
push    eax
mov     edx, [esi+9ah]
mov     eax, [esp+10h+var_8]
push    ecx
push    0
push    0
push    0ffffffffh
mov     esi, [eax]
push    edx
push    eax
call    dword ptr [esi+10h]
cmp     [esp+0ch+var_8], 0
jz      short loc_468dec
mov     eax, [esp+0ch+var_8]
push    eax
mov     esi, [eax]
call    dword ptr [esi+8]
mov     eax, [esp+0ch+var_4]
pop     esi
add     esp, 8
retn    4
sub     esp, 28h
lea     eax, [esp+28h+var_20]
push    esi
mov     esi, ecx
push    eax
call    sub_468710
lea     eax, [esp+2ch+var_28]
mov     ecx, esi
push    eax
call    sub_468420
cmp     [esp+2ch+var_28], 0
jz      short loc_468e80
cmp     [esp+2ch+var_24], 0
jz      short loc_468e80
mov     eax, [esp+2ch+var_14]
sub     eax, [esp+2ch+var_1c]
cmp     eax, [esp+2ch+var_24]
jnz     short loc_468e46
mov     eax, [esp+2ch+var_18]
sub     eax, [esp+2ch+var_20]
cmp     eax, [esp+2ch+var_28]
jz      short loc_468e80
mov     eax, [esp+2ch+var_20]
mov     ecx, [esp+2ch+var_1c]
mov     [esp+2ch+var_10], eax
mov     [esp+2ch+var_c], ecx
add     eax, [esp+2ch+var_28]
mov     [esp+2ch+var_8], eax
mov     eax, [esp+2ch+var_24]
add     eax, ecx
mov     [esp+2ch+var_4], eax
mov     eax, [esi+0d2h]
test    eax, eax
jz      short loc_468e80
lea     ecx, [esp+2ch+var_10]
push    ecx
push    eax
call    sub_4670e0
add     esp, 8
mov     eax, [esp+2ch+arg_0]
mov     [esi+4], eax
pop     esi
add     esp, 28h
retn    4
push    esi
mov     dword ptr [ecx], offset off_4ab7d0
mov     esi, ecx
mov     ecx, esi
call    sub_468f10
mov     dword ptr [esi+8], 0
mov     [esi+16h], eax
mov     eax, esi
pop     esi
retn
push    esi
mov     dword ptr [ecx], offset off_4ab7d0
mov     esi, ecx
mov     ecx, esi
call    sub_468f10
mov     ecx, [esp+4+hmem]
test    ecx, ecx
jz      short loc_468ee1
test    eax, eax
jz      short loc_468ee1
push    ecx
call    sub_45bab0
add     esp, 4
mov     [esi+8], eax
cmp     eax, 1
sbb     eax, eax
inc     eax
mov     [esi+16h], eax
mov     eax, esi
pop     esi
retn    4
mov     eax, [ecx+8]
mov     dword ptr [ecx], offset off_4ab7d0
test    eax, eax
jz      short locret_468f06
push    eax
call    sub_45ba00
add     esp, 4
retn
mov     dword ptr [ecx+12h], 1
mov     dword ptr [ecx+0eh], 0ffffffffh
xor     eax, eax
mov     [ecx+0ch], ax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+16h], eax
mov     eax, 1
retn
mov     eax, [esp+arg_0]
mov     [ecx+4], eax
mov     eax, 1
retn    4
push    esi
mov     eax, [ecx+8]
mov     esi, [esp+4+arg_0]
test    eax, eax
jz      short loc_468f71
test    esi, esi
jz      short loc_468f7b
push    eax
call    sub_45bab0
add     esp, 4
mov     [esi], eax
xor     eax, eax
pop     esi
retn    4
test    esi, esi
jz      short loc_468f7b
mov     dword ptr [esi], 0
xor     eax, eax
pop     esi
retn    4
mov     eax, [esp+arg_0]
mov     [ecx+4], eax
retn    4
cmp     ds:dword_4a852a, 0
jz      short loc_468fb9
cmp     ds:word_4a8518, 0
jz      short loc_468fb9
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     ds:dword_4a852a, eax
retn
sub     esp, 34h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
mov     ebx, 1
mov     [esp+44h+var_34], esi
mov     ebp, ebx
lea     edi, [esp+44h+var_30]
xor     eax, eax
mov     ecx, 0ch
rep stosd
cmp     [esp+44h+var_34], esi
jz      short loc_469008
mov     eax, [esp+44h+var_34]
push    eax
call    sub_44f4a0
mov     [esp+48h+var_34], esi
add     esp, 4
lea     eax, [esp+44h+var_34]
lea     ecx, [esp+44h+var_30]
mov     [esp+44h+var_24], ebx
push    ecx
mov     [esp+48h+var_10], ebx
mov     [esp+48h+var_2c], ebx
mov     [esp+48h+var_c], eax
call    sub_47eeb0
add     esp, 4
cmp     eax, ebx
jz      short loc_469034
call    sub_470520
jmp     short loc_469064
mov     eax, [esp+44h+var_34]
mov     ecx, ds:dword_4a8510
push    eax
push    ecx
call    sub_44f950
mov     ecx, [esp+4ch+var_34]
add     esp, 8
push    ecx
call    sub_469080
mov     ecx, [esp+48h+var_34]
add     esp, 4
mov     ebp, eax
push    ecx
call    sub_44f4a0
add     esp, 4
test    ebp, ebp
jz      loc_468fe2
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn
mov     eax, [esp+arg_0]
push    0
push    0
push    eax
call    sub_4690a0
add     esp, 0ch
cmp     eax, 1
sbb     eax, eax
neg     eax
retn
sub     esp, 218h
push    ebx
push    esi
push    edi
push    ebp
push    7f02h
xor     edi, edi
push    0
call    ds:loadcursora
push    eax
mov     esi, ds:setcursor
call    esi
cmp     ds:dword_4a8510, edi
jz      short loc_4690d8
mov     eax, ds:dword_4a8510
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, [esp+228h+arg_0]
xor     ebp, ebp
push    eax
call    sub_44f3f0
add     esp, 4
mov     ds:dword_4a8510, eax
mov     ds:dword_4a8526, ebp
mov     ds:dword_4a8522, ebp
lea     eax, [esp+228h+var_210]
push    105h
push    eax
mov     ecx, ds:dword_4a8510
mov     ds:word_4a8518, 1
push    ecx
call    sub_44f5e0
lea     ecx, [esp+234h+var_218]
lea     edx, [esp+234h+var_214]
lea     eax, [esp+234h+var_210]
add     esp, 0ch
push    ecx
push    edx
push    eax
push    ebp
push    ebp
push    offset dword_4a8510
call    sub_469360
add     esp, 18h
mov     ebx, eax
test    ebx, ebx
jnz     loc_469303
mov     cx, ds:word_4a8518
mov     edi, 1
mov     eax, [esp+228h+var_218]
push    edi
push    eax
push    edi
push    ecx
call    sub_4091e0
add     esp, 10h
push    edi
call    sub_468fc0
add     esp, 4
call    sub_451460
mov     eax, [esp+228h+arg_4]
cmp     eax, ebp
jz      short loc_46918a
push    eax
call    sub_44f3f0
add     esp, 4
mov     ds:dword_4a8514, eax
jmp     short loc_4691d1
call    sub_4452b0
lea     eax, [esp+228h+var_108]
push    105h
push    eax
mov     ecx, ds:dword_4a8510
push    ecx
call    sub_44f5e0
lea     ecx, [esp+234h+var_108]
add     esp, 0ch
mov     edx, ds:dword_4a8514
push    ecx
push    edx
call    sub_44f5b0
add     esp, 8
mov     ecx, ds:dword_4a8514
push    ecx
call    sub_43cfa0
add     esp, 4
mov     ebp, [esp+228h+arg_8]
mov     ecx, ds:dword_4a8514
mov     eax, ebp
and     eax, 1
push    eax
push    ecx
call    sub_422310
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_46928f
lea     eax, [esp+228h+var_210]
push    105h
push    eax
mov     ecx, ds:dword_4a8510
push    ecx
call    sub_44f5e0
add     esp, 0ch
mov     ebx, eax
cmp     ebx, 3
jg      short loc_46921f
jz      short loc_46923b
test    ebx, ebx
jz      short loc_469237
jmp     short loc_469241
cmp     ebx, 4c7h
jz      short loc_46923f
cmp     ebx, 1389h
jl      short loc_469241
cmp     ebx, 138ah
jg      short loc_469241
xor     ebx, ebx
jmp     short loc_469241
xor     ebx, ebx
jmp     short loc_469241
xor     edi, edi
test    ebx, ebx
jnz     loc_469303
mov     eax, ds:dword_4a8514
push    eax
call    sub_44b480
add     esp, 4
xor     eax, eax
mov     ax, ds:word_4a8518
push    2000308h
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_46927f
mov     eax, ds:dword_4a8514
push    eax
jmp     short loc_469281
push    0
call    sub_422190
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_469303
call    sub_490f10
call    sub_456870
push    ebp
call    sub_4696d0
add     esp, 4
call    sub_40b100
cmp     ds:frequency, 0
jz      short loc_4692bd
test    ebp, 4
jnz     short loc_4692bd
call    sub_436a50
call    sub_466bc0
test    eax, eax
jnz     short loc_4692cb
call    sub_466360
push    2000102h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_4692f5
push    0
call    sub_491a70
add     esp, 4
call    sub_466bc0
test    eax, eax
jz      short loc_469303
call    sub_466430
push    7f00h
push    0
call    ds:loadcursora
push    eax
call    esi
test    ebx, ebx
jz      short loc_469348
call    sub_4227c0
push    offset dword_4a8510
call    sub_40aa00
add     esp, 4
test    edi, edi
jz      short loc_469348
push    ebx
call    sub_4698f0
add     esp, 4
push    eax
lea     eax, [esp+22ch+var_210]
push    eax
push    1
push    0fh
call    sub_45c150
add     esp, 10h
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 218h
retn
mov     eax, [esp+arg_10]
push    ebx
mov     ecx, [esp+4+arg_14]
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
mov     dword ptr [eax], 0
mov     dword ptr [ecx], 0
mov     eax, [esi]
push    eax
call    sub_44acb0
add     esp, 4
test    eax, eax
jnz     short loc_469395
mov     eax, 2
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    0
push    esi
call    sub_44b960
mov     edi, [esp+18h+arg_4]
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jnz     short loc_46940a
push    0
cmp     edi, 1
sbb     ebp, ebp
mov     ax, [esi+8]
and     ebp, 8f70000h
add     ebp, 494c5057h
mov     ecx, [esi]
push    ebp
push    offset sub_489c70
push    2
push    eax
push    ecx
call    sub_471190
add     esp, 18h
mov     ebx, eax
cmp     ebx, 1395h
jnz     short loc_4693e5
mov     word ptr [esi+8], 0
test    ebx, ebx
jnz     short loc_46940a
mov     cx, [esi+8]
sub     ebp, 42494c57h
cmp     ebp, 1
sbb     eax, eax
neg     eax
push    eax
push    ecx
call    sub_461770
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_469459
cmp     ebx, 2
jz      short loc_469421
cmp     ebx, 3edh
jz      short loc_469421
mov     eax, 0
cmp     ebx, 3
jnz     short loc_469426
mov     eax, 1
test    edi, edi
jz      short loc_46942e
test    eax, eax
jnz     short loc_469449
push    ebx
call    sub_4698f0
add     esp, 4
push    eax
mov     eax, [esp+14h+arg_c]
push    eax
push    1
push    0fh
call    sub_45c150
add     esp, 10h
push    esi
call    sub_40aa00
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+lpbuffer]
mov     byte ptr [esi], 0
mov     ax, ds:word_4a8518
push    eax
call    sub_461810
add     esp, 4
test    eax, eax
jz      short loc_469495
movsx   eax, [esp+4+arg_4]
push    4
push    5e0h
push    eax
push    esi
call    sub_47fe70
add     esp, 10h
mov     eax, esi
pop     esi
retn
push    0
mov     ecx, ds:dword_4a8510
movsx   eax, [esp+8+arg_4]
push    eax
push    esi
push    ecx
call    sub_44f860
add     esp, 10h
test    eax, eax
jz      short loc_4694b4
mov     byte ptr [esi], 0
mov     eax, esi
pop     esi
retn
push    esi
xor     ecx, ecx
mov     cx, ds:word_4a8518
push    edi
shl     ecx, 10h
mov     edx, dword_4ae1e0
mov     cl, 1
mov     eax, ecx
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     esi, [eax+edx+4]
xor     edx, edx
mov     dl, ch
mov     eax, [esi]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_4694ff
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_469508
push    ecx
call    sub_461250
add     esp, 4
mov     di, [esp+8+arg_4]
mov     esi, [esp+8+arg_0]
push    edi
push    esi
push    14h
push    eax
call    sub_45c990
add     esp, 10h
test    ax, ax
jnz     short loc_469553
mov     ax, ds:word_4a8518
push    eax
call    sub_461810
add     esp, 4
test    eax, eax
jnz     short loc_469553
push    0
mov     ecx, ds:dword_4a8510
movsx   eax, di
push    eax
push    esi
push    ecx
call    sub_44f860
add     esp, 10h
test    eax, eax
jz      short loc_469553
mov     byte ptr [esi], 0
mov     eax, esi
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_4]
sub     esp, 20h
push    ebx
mov     dword ptr [ecx], 0
push    esi
push    edi
push    ebp
call    sub_44f2d0
mov     esi, eax
test    esi, esi
jnz     short loc_469586
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
push    esi
push    0
call    sub_44b840
add     esp, 8
mov     eax, ds:dword_4a8510
push    eax
call    sub_44b8c0
lea     eax, [esp+34h+var_18]
add     esp, 4
push    eax
push    0
push    20a1h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4427d0
lea     ecx, [esp+40h+var_18]
add     esp, 10h
push    0
push    ecx
call    sub_41aa60
lea     ecx, [esp+38h+var_18]
add     esp, 8
push    ecx
call    sub_442d80
mov     ecx, [esp+34h+arg_4]
mov     edi, [esp+34h+arg_0]
add     esp, 4
push    ecx
push    eax
push    edi
call    sub_44aaa0
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jnz     loc_46968a
mov     eax, ds:dword_4a8510
push    eax
push    edi
call    sub_44f980
add     esp, 8
test    eax, eax
jnz     short loc_469676
lea     eax, [esp+30h+var_1c]
lea     ecx, [esp+30h+hmem]
push    eax
mov     edx, ds:dword_4a8510
push    ecx
push    edx
call    sub_44f550
add     esp, 0ch
test    eax, eax
jnz     short loc_469676
push    edi
call    sub_44f3f0
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_469669
mov     eax, [esp+30h+hmem]
push    eax
push    ebp
call    sub_44f4f0
add     esp, 8
push    ebp
call    sub_44acb0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_469660
push    ebp
push    edi
call    sub_44f430
add     esp, 8
push    ebp
call    sub_44f4a0
add     esp, 4
mov     eax, [esp+30h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
test    ebx, ebx
jnz     short loc_4696ac
mov     ecx, [esp+30h+arg_4]
push    ecx
push    edi
call    sub_44aba0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jnz     short loc_4696ac
push    edi
call    sub_44acb0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_4696ac
push    edi
call    sub_44f3f0
mov     ecx, [esp+34h+arg_4]
add     esp, 4
mov     [ecx], eax
push    esi
call    sub_44b8c0
add     esp, 4
push    esi
call    sub_44f4a0
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
sub     esp, 1a0h
lea     eax, [esp+1a0h+string]
push    19ah
push    eax
call    sub_4694c0
lea     eax, [esp+1a8h+string]
add     esp, 8
mov     ecx, ds:hwndparent
push    eax
push    ecx
call    ds:setwindowtexta
xor     eax, eax
mov     ecx, ds:hwndparent
mov     ax, [esp+1a0h+arg_0]
and     eax, 2
push    eax
push    ecx
call    sub_491410
add     esp, 8
mov     ecx, ds:hwndparent
push    ecx
call    sub_474c70
add     esp, 4
mov     ecx, ds:hwndparent
mov     dword_4ae830, ecx
call    sub_40ac00
push    eax
call    sub_4108b0
lea     ecx, [esp+1a4h+var_1a0]
add     esp, 4
mov     edx, ds:hwndparent
push    ecx
push    0
push    0
push    1
push    edx
call    sub_444e50
lea     ecx, [esp+1b4h+var_1a0]
add     esp, 14h
mov     edx, ds:hwndparent
push    ecx
push    0
push    0
push    18h
push    edx
call    sub_444e50
add     esp, 1b4h
retn
sub     esp, 64h
push    esi
mov     esi, [esp+68h+arg_0]
cmp     esi, 4
mov     eax, esi
jg      short loc_469797
jz      short loc_4697e4
test    eax, eax
jz      short loc_4697d7
jmp     short def_4697ae
cmp     eax, 1770h
jg      short loc_4697b5
jz      loc_46986b
sub     eax, 1388h
cmp     eax, 0dh
ja      short def_4697ae
jmp     ds:jpt_4697ae[eax*4]
cmp     eax, 1b5bh
jz      loc_469875
cmp     eax, 1b5ch
jz      loc_46987f
mov     ax, 1b8ch
xor     cx, cx
jmp     loc_469887
mov     ax, 1b8ch
mov     cx, 1
jmp     loc_469887
mov     ax, 1b8ch
mov     cx, 0ah
jmp     loc_469887
mov     ax, 1b8ch
mov     cx, 0eh
jmp     loc_469887
mov     ax, 1b8ch
mov     cx, 0fh
jmp     short loc_469887
mov     ax, 1b8ch
mov     cx, 12h
jmp     short loc_469887
mov     ax, 1b8ch
mov     cx, 13h
jmp     short loc_469887
mov     ax, 1b8ch
mov     cx, 11h
jmp     short loc_469887
mov     ax, 1b8ch
mov     cx, 10h
jmp     short loc_469887
mov     ax, 1b8ch
mov     cx, 10h
jmp     short loc_469887
mov     ax, 1b8ch
mov     cx, 19h
jmp     short loc_469887
mov     ax, 1b8ch
mov     cx, 17h
jmp     short loc_469887
mov     ax, 1d80h
xor     cx, cx
jmp     short loc_469887
mov     ax, 1d80h
mov     cx, 1
jmp     short loc_469887
mov     ax, 1b8ch
mov     cx, 23h
jmp     short loc_469887
mov     ax, 1b8ch
mov     cx, 18h
jmp     short loc_469887
mov     ax, 1d80h
mov     cx, 2
jmp     short loc_469887
mov     ax, 1d80h
mov     cx, 3
push    ecx
push    eax
lea     eax, [esp+70h+buffer]
push    64h
push    eax
call    sub_47fe70
lea     eax, [esp+78h+buffer]
add     esp, 10h
push    esi
push    eax
push    64h
push    offset dword_4a8930
call    sub_401800
add     esp, 10h
mov     eax, offset dword_4a8930
pop     esi
add     esp, 64h
retn
sub     esp, 64h
push    esi
mov     esi, [esp+68h+arg_0]
cmp     esi, 13h
mov     eax, esi
jg      short loc_46991c
jz      loc_4699b6
sub     eax, 2
cmp     eax, 0ch
ja      short def_469915
xor     ecx, ecx
mov     cl, ds:byte_469a5c[eax]
jmp     ds:jpt_469915[ecx*4]
cmp     eax, 50h
jg      short loc_469944
jz      loc_4699d2
cmp     eax, 1eh
jz      loc_4699bd
cmp     eax, 20h
jz      loc_4699c4
cmp     eax, 21h
jz      loc_4699cb
jmp     short def_469915
cmp     eax, 70h
jg      short loc_46995a
jz      loc_4699e0
cmp     eax, 6ch
jz      loc_4699d9
jmp     short def_469915
cmp     eax, 0c1h
jg      short loc_469970
jz      loc_4699ee
cmp     eax, 0a0h
jz      short loc_4699e7
jmp     short def_469915
cmp     eax, 45dh
jz      short loc_4699f5
cmp     eax, 45eh
jz      short loc_4699fc
cmp     eax, 46ah
jz      short loc_469a03
push    esi
call    sub_469780
add     esp, 4
pop     esi
add     esp, 64h
retn
mov     eax, 3
jmp     short loc_469a08
mov     eax, 15h
jmp     short loc_469a08
mov     eax, 0ah
jmp     short loc_469a08
mov     eax, 6
jmp     short loc_469a08
mov     eax, 4
jmp     short loc_469a08
mov     eax, 16h
jmp     short loc_469a08
mov     eax, 4
jmp     short loc_469a08
mov     eax, 0dh
jmp     short loc_469a08
mov     eax, 16h
jmp     short loc_469a08
mov     eax, 7
jmp     short loc_469a08
mov     eax, 16h
jmp     short loc_469a08
mov     eax, 0bh
jmp     short loc_469a08
mov     eax, 9
jmp     short loc_469a08
mov     eax, 2
jmp     short loc_469a08
mov     eax, 14h
jmp     short loc_469a08
mov     eax, 24h
jmp     short loc_469a08
mov     eax, 5
push    eax
push    1b8ch
lea     eax, [esp+70h+buffer]
push    64h
push    eax
call    sub_47fe70
lea     eax, [esp+78h+buffer]
add     esp, 10h
push    esi
push    eax
push    64h
push    offset dword_4a8998
call    sub_401800
add     esp, 10h
mov     eax, offset dword_4a8998
pop     esi
add     esp, 64h
retn
push    ebx
push    esi
push    edi
xor     edi, edi
push    edi
call    ds:getdc
cmp     eax, edi
mov     esi, eax
jz      short loc_469aa0
push    0eh
mov     ebx, ds:getdevicecaps
push    esi
call    ebx
mov     edi, eax
push    0ch
push    esi
call    ebx
imul    edi, eax
push    esi
push    0
call    ds:releasedc
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+h]
sub     esp, 4
test    eax, eax
jz      short loc_469ad7
lea     ecx, [esp+4+pv]
push    ecx
push    2
push    eax
call    ds:getobjecta
cmp     eax, 2
jnz     short loc_469ad7
mov     ax, [esp+4+pv]
add     esp, 4
retn
xor     ax, ax
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+hpal]
push    edi
push    ebp
push    esi
call    sub_469ab0
mov     bp, ax
add     esp, 4
test    bp, bp
jz      short loc_469b52
movzx   ebx, bp
push    42h
lea     eax, ds:0[ebx*4]
add     eax, 5
dec     eax
push    eax
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_469b52
push    edi
call    ds:globallock
mov     word ptr [eax], 300h
add     eax, 4
mov     [eax-2], bp
push    eax
push    ebx
mov     ebp, ds:getpaletteentries
push    0
push    esi
call    ebp
push    edi
cmp     eax, ebx
jnz     short loc_469b4a
call    ds:globalunlock
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+istart]
mov     edx, [esp+hpal]
sub     esp, 4
lea     eax, [esp+4+ppalentries]
push    eax
push    1
push    ecx
push    edx
call    ds:getpaletteentries
xor     eax, eax
xor     ecx, ecx
mov     al, [esp+4+ppalentries.peblue]
mov     cl, [esp+4+ppalentries.pegreen]
shl     eax, 10h
shl     ecx, 8
or      eax, ecx
xor     ecx, ecx
mov     cl, [esp+4+ppalentries.pered]
add     esp, 4
or      eax, ecx
retn
sub     esp, 4
mov     [esp+4+var_4], 0ffffffffh
push    ebx
push    esi
push    edi
push    ebp
push    0
call    ds:getdc
mov     esi, eax
test    esi, esi
jz      loc_469c5f
xor     ebx, ebx
push    26h
push    esi
mov     edi, ds:getdevicecaps
call    edi
test    ah, 1
jz      short loc_469bdc
push    68h
push    esi
call    edi
mov     ebx, eax
jmp     short loc_469beb
call    sub_469a70
cmp     eax, 4
jnz     short loc_469beb
mov     ebx, 10h
test    ebx, ebx
jle     short loc_469c5f
push    2
lea     eax, ds:0[ebx*4]
add     eax, 5
dec     eax
push    eax
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_469c5f
push    edi
call    ds:globallock
mov     [eax+2], bx
mov     ebp, eax
mov     word ptr [ebp+0], 300h
lea     eax, [ebp+4]
push    eax
push    ebx
push    0
push    esi
call    ds:getsystempaletteentries
test    eax, eax
jz      short loc_469c56
push    ebp
call    ds:createpalette
mov     ebx, eax
test    ebx, ebx
jz      short loc_469c56
mov     eax, [esp+14h+color]
mov     ebp, ds:getnearestpaletteindex
push    eax
push    ebx
call    ebp
mov     [esp+14h+var_4], eax
push    ebx
call    ds:deleteobject
push    edi
call    sub_45ba00
add     esp, 4
push    esi
push    0
call    ds:releasedc
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, ds:dword_4a8a00
push    eax
call    sub_45ba00
mov     ds:dword_4a8a00, 0
add     esp, 4
retn
sub     esp, 0c8h
lea     eax, [esp+0c8h+var_7c]
push    ebx
push    esi
push    edi
mov     esi, [esp+0d4h+arg_0]
push    ebp
push    eax
mov     edx, [esi+0ch]
mov     edi, [esi+10h]
lea     eax, [esi+8]
push    edx
mov     ecx, [eax]
push    ecx
call    sub_46d310
add     esp, 0ch
test    eax, eax
jnz     loc_469ec5
cmp     dword ptr [esi+4], 0
jnz     short loc_469cec
mov     eax, [esi]
push    eax
call    sub_4535a0
mov     [esp+0dch+var_c4], eax
mov     [esp+0dch+y], edx
add     esp, 4
cmp     ds:dword_4a8a00, 0
jnz     short loc_469d48
push    42h
push    400h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a8a00, eax
test    eax, eax
jnz     short loc_469d22
push    7eh
mov     eax, off_4ad1e8
push    offset apigdraw
push    eax
call    sub_480570
add     esp, 0ch
mov     eax, ds:dword_4a8a00
mov     ebx, ds:globallock
push    eax
call    ebx
push    eax
call    sub_46aeb0
add     esp, 4
mov     ecx, ds:dword_4a8a00
push    ecx
call    ds:globalunlock
jmp     short loc_469d4e
mov     ebx, ds:globallock
lea     eax, [esp+0d8h+var_b4]
push    eax
call    sub_46d4a0
lea     eax, [esp+0dch+var_b4]
add     esp, 4
mov     ecx, [esi+28h]
mov     edx, [esi]
mov     [esp+0d8h+var_48], eax
mov     [esp+0d8h+var_44], ecx
mov     eax, [esi+2ch]
mov     [esp+0d8h+hdc], edx
mov     [esp+0d8h+var_10], eax
mov     eax, [esi+14h]
test    eax, eax
mov     [esp+0d8h+var_c], eax
jnz     short loc_469d9c
mov     [esp+0d8h+var_c], offset loc_46af90
mov     eax, [esi+18h]
test    eax, eax
mov     [esp+0d8h+var_8], eax
jnz     short loc_469db5
mov     [esp+0d8h+var_8], offset nullsub_16
mov     eax, [esi+1ch]
test    edi, edi
mov     [esp+0d8h+var_4], eax
jnz     short loc_469dca
lea     edi, [esp+0d8h+var_3c]
mov     eax, [esp+0d8h+var_70]
movsx   eax, word ptr [eax+22h]
sub     eax, [edi]
mov     [esp+0d8h+x], eax
mov     eax, [esp+0d8h+var_70]
mov     edx, [esp+0d8h+x]
mov     ecx, [esp+0d8h+hdc]
movsx   eax, word ptr [eax+24h]
sub     eax, [edi+4]
push    eax
push    edx
push    ecx
call    sub_453580
add     esp, 0ch
mov     ecx, ds:dword_4a8a00
push    ecx
call    ebx
mov     ebx, [eax+260h]
mov     ebp, [eax+264h]
cmp     dword ptr [esi+4], 0
mov     edi, eax
mov     eax, [eax+150h]
mov     [esp+0d8h+x], eax
jz      short loc_469e36
mov     dword ptr [edi+260h], 0
mov     dword ptr [edi+150h], 0
jmp     short loc_469e3f
mov     eax, [esi+20h]
mov     [edi+260h], eax
mov     eax, [esi+24h]
push    9fh
lea     ecx, [esp+0dch+var_7c]
push    edi
push    ecx
mov     [edi+264h], eax
call    sub_46b000
mov     [esp+0e4h+var_c8], eax
add     esp, 0ch
cmp     dword ptr [esi+4], 0
jz      short loc_469e6f
mov     eax, [esp+0d8h+x]
mov     [edi+150h], eax
mov     [edi+264h], ebp
mov     [edi+260h], ebx
mov     eax, ds:dword_4a8a00
push    eax
call    ds:globalunlock
lea     eax, [esp+0d8h+var_7c]
push    eax
call    sub_46d380
add     esp, 4
cmp     [esp+0d8h+hmem], 0
jz      short loc_469ea8
mov     eax, [esp+0d8h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
cmp     dword ptr [esi+4], 0
jnz     short loc_469ecd
mov     eax, [esp+0d8h+var_c4]
mov     ecx, [esp+0d8h+y]
push    ecx
mov     edx, [esi]
push    eax
push    edx
call    sub_453580
add     esp, 0ch
jmp     short loc_469ecd
mov     [esp+0d8h+var_c8], 3
mov     eax, [esp+0d8h+var_c8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     ecx, [esi+14h]
mov     edx, [esi+38h]
test    edx, edx
jz      short loc_469f38
mov     cx, [ecx+6]
mov     eax, [esi+70h]
push    eax
mov     eax, [esi+6ch]
push    eax
push    ecx
mov     eax, [esi+5ch]
add     eax, [esi+0ch]
push    eax
call    edx
add     esp, 10h
xor     eax, eax
pop     esi
retn
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     di, [esi+10h]
mov     ebp, [esi+14h]
shl     edi, 10h
xor     eax, eax
mov     ax, [ebp+0ah]
or      edi, eax
push    edi
call    sub_470640
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      loc_46a045
push    ebx
call    ds:globallock
mov     ecx, [ebp+2ah]
cmp     ecx, 0ffffffffh
jnz     short loc_469fb5
xor     ecx, ecx
jmp     short loc_469fb7
add     ecx, eax
mov     edx, [ebp+2eh]
add     edx, eax
movsx   eax, word ptr [ebp+0eh]
mov     [esp+30h+var_20], eax
movsx   eax, word ptr [ebp+10h]
mov     [esp+30h+var_1c], eax
movsx   eax, word ptr [ebp+12h]
mov     [esp+30h+var_18], eax
movsx   eax, word ptr [ebp+14h]
mov     [esp+30h+var_14], eax
movsx   eax, word ptr [ebp+16h]
mov     [esp+30h+rect.left], eax
movsx   eax, word ptr [ebp+18h]
mov     [esp+30h+rect.top], eax
movsx   eax, word ptr [ebp+1ah]
movsx   ebp, word ptr [ebp+1ch]
mov     [esp+30h+rect.right], eax
push    ebp
mov     ebp, [esp+34h+rect.right]
mov     eax, [esp+34h+rect.top]
push    ebp
push    eax
mov     ebp, [esp+3ch+rect.left]
mov     eax, [esp+3ch+var_14]
push    ebp
push    eax
mov     ebp, [esp+44h+var_18]
mov     eax, [esp+44h+var_1c]
push    ebp
push    eax
mov     ebp, [esp+4ch+var_20]
push    ebp
push    ecx
push    edx
push    esi
call    sub_46a100
add     esp, 2ch
mov     esi, eax
push    ebx
call    ds:globalunlock
push    0
push    edi
call    sub_470920
add     esp, 8
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, 0fh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ecx, [esp+arg_0]
sub     esp, 20h
push    esi
push    edi
mov     edi, [ecx+14h]
mov     esi, [ecx+5ch]
add     esi, [ecx+0ch]
mov     edx, 0
mov     eax, [edi+1eh]
test    eax, eax
jz      short loc_46a082
lea     edx, [eax+esi+22h]
mov     eax, [edi+22h]
lea     esi, [eax+esi+26h]
movsx   eax, word ptr [edi+0ah]
mov     [esp+28h+var_20], eax
movsx   eax, word ptr [edi+0ch]
mov     [esp+28h+var_1c], eax
movsx   eax, word ptr [edi+0eh]
mov     [esp+28h+var_18], eax
movsx   eax, word ptr [edi+10h]
mov     [esp+28h+var_14], eax
movsx   eax, word ptr [edi+12h]
mov     [esp+28h+rect.left], eax
movsx   eax, word ptr [edi+14h]
mov     [esp+28h+rect.top], eax
movsx   eax, word ptr [edi+16h]
movsx   edi, word ptr [edi+18h]
push    edi
push    eax
mov     edi, [esp+30h+rect.top]
mov     eax, [esp+30h+rect.left]
push    edi
push    eax
mov     edi, [esp+38h+var_14]
mov     eax, [esp+38h+var_18]
push    edi
push    eax
mov     edi, [esp+40h+var_1c]
mov     eax, [esp+40h+var_20]
push    edi
push    eax
push    edx
push    esi
push    ecx
call    sub_46a100
add     esp, 2ch
pop     edi
pop     esi
add     esp, 20h
retn
sub     esp, 7ch
mov     eax, 1
mov     [esp+7ch+var_6c], eax
push    ebx
mov     [esp+80h+var_40], eax
push    esi
mov     ecx, [esp+84h+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     esi, [ecx+34h]
mov     [esp+8ch+ho], edi
mov     [esp+8ch+var_78], edi
cmp     [esi+30h], edi
jnz     short loc_46a158
push    2
push    428h
call    sub_45b8f0
add     esp, 8
mov     [esi+30h], eax
cmp     eax, edi
jnz     short loc_46a150
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 7ch
retn
mov     [esp+8ch+var_40], 0
mov     eax, [esp+8ch+arg_0]
lea     ecx, [esp+8ch+var_50]
push    ecx
mov     edi, [eax+68h]
mov     edx, [eax+6ch]
lea     ecx, [esp+90h+rect]
push    edx
push    ecx
call    dword ptr [eax+70h]
add     esp, 0ch
test    eax, eax
jz      loc_46a857
mov     eax, [esp+8ch+rect.bottom]
mov     ebx, [esp+8ch+arg_18]
sub     eax, [esp+8ch+rect.top]
sub     ebx, [esp+8ch+arg_10]
cmp     eax, ebx
jle     short loc_46a1a5
push    ebx
push    eax
jmp     short loc_46a1a7
push    eax
push    ebx
call    _div
mov     [esp+94h+var_2c], edx
add     esp, 8
cmp     [esp+8ch+var_2c], 0
jnz     loc_46a289
mov     ecx, [esp+8ch+rect.right]
mov     eax, [esp+8ch+arg_14]
sub     ecx, [esp+8ch+rect.left]
sub     eax, [esp+8ch+arg_c]
mov     ebp, [esp+8ch+rect.bottom]
mov     [esp+8ch+var_30], eax
sub     ebp, [esp+8ch+rect.top]
mov     eax, [esp+8ch+var_50]
sub     eax, [esp+8ch+rect.left]
imul    eax, [esp+8ch+var_30]
lea     eax, [eax+ecx-1]
cdq
idiv    ecx
add     [esp+8ch+arg_c], eax
mov     eax, [esp+8ch+var_4c]
sub     eax, [esp+8ch+rect.top]
imul    eax, ebx
lea     eax, [eax+ebp-1]
cdq
idiv    ebp
add     [esp+8ch+arg_10], eax
mov     eax, [esp+8ch+var_48]
sub     eax, [esp+8ch+var_50]
imul    eax, [esp+8ch+var_30]
lea     eax, [eax+ecx-1]
cdq
idiv    ecx
add     eax, [esp+8ch+arg_c]
mov     [esp+8ch+arg_14], eax
mov     eax, [esp+8ch+var_44]
sub     eax, [esp+8ch+var_4c]
imul    eax, ebx
lea     ecx, [esp+8ch+rect]
lea     eax, [eax+ebp-1]
cdq
idiv    ebp
add     eax, [esp+8ch+arg_10]
lea     edx, [esp+8ch+var_50]
mov     [esp+8ch+arg_18], eax
mov     eax, [edx]
mov     ebx, [edx+4]
mov     ebp, [edx+8]
mov     [ecx], eax
mov     eax, [edx+0ch]
mov     [ecx+4], ebx
mov     [ecx+8], ebp
mov     [ecx+0ch], eax
mov     eax, [esp+8ch+arg_14]
sub     eax, [esp+8ch+arg_c]
mov     [esp+8ch+var_58], eax
mov     eax, [esp+8ch+arg_18]
sub     eax, [esp+8ch+arg_10]
mov     [esp+8ch+var_68], eax
mov     eax, [esp+8ch+rect.right]
sub     eax, [esp+8ch+rect.left]
mov     ecx, [esi+30h]
mov     [esp+8ch+var_60], eax
push    ecx
mov     eax, [esp+90h+rect.bottom]
sub     eax, [esp+90h+rect.top]
mov     [esp+90h+var_5c], eax
call    ds:globallock
mov     ebx, eax
push    28h
mov     ebp, [esp+90h+src]
push    ebp
push    ebx
call    _memcpy
add     esp, 0ch
cmp     [esp+8ch+var_40], 1
jz      short loc_46a318
xor     eax, eax
xor     ecx, ecx
mov     ax, [ebx+0ch]
mov     cx, [ebx+0eh]
imul    eax, ecx
cmp     eax, 18h
jz      short loc_46a318
mov     [esp+8ch+var_78], 4
jmp     loc_46a841
lea     eax, [ebp+28h]
push    ebp
mov     [esp+90h+pjbits], eax
call    sub_40eff0
mov     [esp+90h+var_7a], ax
add     esp, 4
cmp     ax, 2
movsx   eax, byte ptr [esi]
jz      loc_46a45e
cmp     eax, 4
ja      short def_46a33f
jmp     ds:jpt_46a33f[eax*4]
mov     ebp, 0cc0020h
jmp     loc_46a5ad
mov     ebp, [esp+8ch+arg_8]
test    ebp, ebp
jz      short loc_46a3be
lea     eax, [esp+8ch+var_30]
push    30h
push    ebp
push    eax
call    _memcpy
lea     eax, [esp+98h+var_30]
add     esp, 0ch
push    eax
call    sub_40f050
lea     ecx, [esp+90h+var_8]
add     esp, 4
movzx   eax, ax
add     eax, ebp
push    ecx
add     eax, [esp+90h+var_30]
push    0
mov     [esp+94h+hdc], eax
call    sub_40f070
lea     ecx, [esp+94h+var_4]
add     esp, 8
mov     ebp, 8800c6h
push    ecx
push    0ffffffh
call    sub_40f070
mov     [esp+94h+ho], 1
add     esp, 8
jmp     loc_46a5ad
mov     ebp, 0cc0020h
jmp     loc_46a5ad
mov     ebp, [esp+8ch+arg_8]
test    ebp, ebp
jz      short loc_46a436
lea     eax, [esp+8ch+var_30]
push    30h
push    ebp
push    eax
call    _memcpy
lea     eax, [esp+98h+var_30]
add     esp, 0ch
push    eax
call    sub_40f050
lea     ecx, [esp+90h+var_8]
add     esp, 4
movzx   eax, ax
add     eax, ebp
push    ecx
add     eax, [esp+90h+var_30]
push    0
mov     [esp+94h+hdc], eax
call    sub_40f070
lea     ecx, [esp+94h+var_4]
add     esp, 8
mov     ebp, 8800c6h
push    ecx
push    0ffffffh
call    sub_40f070
mov     [esp+94h+ho], 1
add     esp, 8
jmp     loc_46a5ad
mov     ebp, 0cc0020h
jmp     loc_46a5ad
mov     ebp, 990066h
jmp     loc_46a5ad
mov     ebp, 0bb0226h
jmp     loc_46a5ad
mov     ebp, 0cc0020h
jmp     loc_46a5ad
cmp     eax, 4
ja      short def_46a463
jmp     ds:jpt_46a463[eax*4]
mov     ebp, 0cc0020h
jmp     loc_46a5ad
mov     ebp, [esp+8ch+arg_8]
test    ebp, ebp
jz      short loc_46a4e2
lea     eax, [esp+8ch+var_30]
push    30h
push    ebp
push    eax
call    _memcpy
lea     eax, [esp+98h+var_30]
add     esp, 0ch
push    eax
call    sub_40f050
lea     ecx, [esp+90h+var_8]
add     esp, 4
movzx   eax, ax
add     eax, ebp
push    ecx
add     eax, [esp+90h+var_30]
push    0
mov     [esp+94h+hdc], eax
call    sub_40f070
lea     ecx, [esp+94h+var_4]
add     esp, 8
mov     ebp, 8800c6h
push    ecx
push    0ffffffh
call    sub_40f070
mov     [esp+94h+ho], 1
add     esp, 8
jmp     loc_46a5ad
mov     ebp, 0cc0020h
jmp     loc_46a5ad
mov     eax, [ebx+28h]
and     eax, 0ffffffh
cmp     eax, 0ffffffh
jz      short loc_46a528
mov     eax, [ebx+2ch]
and     eax, 0ffffffh
cmp     eax, 0ffffffh
jz      short loc_46a528
mov     ebp, 0cc0020h
jmp     loc_46a5ad
mov     ebp, 990066h
jmp     loc_46a5ad
mov     ebp, 0cc0020h
jmp     loc_46a5ad
mov     eax, [esp+8ch+pjbits]
push    28h
lea     ecx, [esp+90h+var_30]
push    ebx
push    ecx
mov     ebp, 8800c6h
mov     [esp+98h+ho], 1
mov     [esp+98h+hdc], eax
call    _memcpy
add     esp, 0ch
cmp     byte ptr [esi], 1
jz      short loc_46a55e
mov     [esp+8ch+var_6c], 0
mov     ebp, [esp+8ch+var_30]
mov     eax, [ebx+28h]
and     eax, 0ffffffh
cmp     eax, 0ffffffh
lea     eax, [esp+8ch+var_8]
push    eax
jnz     short loc_46a58e
push    0
call    sub_40f070
lea     eax, [esp+94h+var_4]
add     esp, 8
push    eax
push    0ffffffh
jmp     short loc_46a5a5
push    0ffffffh
call    sub_40f070
lea     eax, [esp+94h+var_4]
add     esp, 8
push    eax
push    0
call    sub_40f070
add     esp, 8
cmp     [esp+8ch+ho], 0
jz      short loc_46a623
push    2
push    edi
call    ds:setstretchbltmode
mov     eax, [esp+8ch+arg_0]
lea     ecx, [esp+8ch+var_30]
mov     edx, [esp+8ch+hdc]
push    eax
mov     eax, [esp+90h+var_68]
push    0
push    0ee0086h
push    ecx
mov     ecx, [esp+9ch+var_58]
push    edx
push    eax
push    ecx
mov     eax, [esp+0a8h+var_28]
mov     ecx, [esp+0a8h+arg_c]
and     eax, 0ffffh
mov     edx, [esp+0a8h+var_5c]
sub     eax, [esp+0a8h+arg_18]
push    eax
push    ecx
mov     eax, [esp+0b0h+var_60]
push    edx
mov     ecx, [esp+0b4h+rect.top]
push    eax
mov     edx, [esp+0b8h+rect.left]
push    ecx
push    edx
push    edi
call    sub_46a890
mov     [esp+0c4h+var_78], eax
add     esp, 38h
cmp     [esp+8ch+var_78], 0
jnz     loc_46a841
cmp     [esp+8ch+var_6c], 0
jz      loc_46a841
mov     [esp+8ch+hmem], 0
cmp     [esp+8ch+var_7a], 2
jnz     loc_46a6e4
lea     eax, [ebx+28h]
mov     ecx, [esi+0ah]
push    eax
push    ecx
call    sub_40f070
add     esp, 8
lea     ecx, [ebx+2ch]
mov     edx, [esi+6]
push    ecx
push    edx
call    sub_40f070
add     esp, 8
push    1
push    edi
call    ds:setstretchbltmode
cmp     dword ptr [esi+0ah], 0
jnz     short loc_46a685
cmp     dword ptr [esi+6], 0ffffffh
jz      short loc_46a6ed
mov     eax, [esp+8ch+pjbits]
and     eax, 0ffffh
add     eax, [ebx+14h]
cmp     eax, 0ffffh
jbe     short loc_46a6ed
push    0ch
push    edi
call    ds:getdevicecaps
cmp     eax, 1
jnz     short loc_46a6ed
push    0eh
push    edi
call    ds:getdevicecaps
cmp     eax, 4
jnz     short loc_46a6ed
mov     eax, [ebx+14h]
mov     ecx, [esp+8ch+pjbits]
push    eax
push    ecx
call    sub_45b910
mov     [esp+94h+hmem], eax
add     esp, 8
test    eax, eax
jz      short loc_46a6da
push    eax
call    ds:globallock
mov     [esp+8ch+pjbits], eax
jmp     short loc_46a6ed
mov     [esp+8ch+var_78], 4
jmp     short loc_46a6ed
push    3
push    edi
call    ds:setstretchbltmode
mov     ecx, [esp+8ch+arg_c]
mov     [esp+8ch+var_40], ecx
mov     ecx, [esp+8ch+arg_14]
movsx   eax, word ptr [ebx+8]
sub     eax, [esp+8ch+arg_18]
push    2
mov     [esp+90h+var_3c], eax
push    edi
mov     eax, [esp+94h+arg_10]
mov     [esp+94h+var_38], ecx
add     eax, [esp+94h+var_68]
dec     eax
mov     [esp+94h+var_34], eax
call    ds:getdevicecaps
cmp     eax, 1
jz      loc_46a7d7
cmp     dword ptr [ebx+10h], 0
jz      loc_46a7d7
push    0
call    ds:getdc
mov     ecx, [esp+8ch+pjbits]
mov     [esp+8ch+hdc], eax
xor     eax, eax
mov     edx, [esp+8ch+hdc]
mov     ax, [esi+34h]
push    eax
push    ebx
push    ecx
push    4
push    ebx
push    edx
call    ds:createdibitmap
mov     ecx, [esp+8ch+hdc]
mov     [esp+8ch+ho], eax
push    ecx
push    0
call    ds:releasedc
cmp     [esp+8ch+ho], 0
jz      short loc_46a7d7
mov     eax, [esp+8ch+ho]
push    0
push    0
push    0
push    eax
call    sub_40f140
mov     [esp+9ch+hdc], eax
add     esp, 10h
test    eax, eax
jz      short loc_46a7cc
lea     eax, [esp+8ch+rect]
push    ebp
lea     ecx, [esp+90h+var_40]
push    eax
mov     edx, [esp+94h+hdc]
push    ecx
push    edx
push    edi
call    sub_40f0e0
mov     ecx, [esp+0a0h+hdc]
add     esp, 14h
cmp     eax, 1
push    ecx
sbb     eax, eax
neg     eax
mov     [esp+90h+var_6c], eax
call    sub_45ba00
add     esp, 4
mov     eax, [esp+8ch+ho]
push    eax
call    ds:deleteobject
cmp     [esp+8ch+var_6c], 0
jz      short loc_46a82d
mov     cx, [esi+34h]
mov     eax, [esp+8ch+arg_0]
mov     edx, [esp+8ch+pjbits]
push    eax
mov     eax, [esp+90h+var_68]
push    ecx
mov     ecx, [esp+94h+var_58]
push    ebp
push    ebx
push    edx
mov     edx, [esp+0a0h+var_3c]
push    eax
mov     eax, [esp+0a4h+var_40]
push    ecx
mov     ecx, [esp+0a8h+var_5c]
push    edx
mov     edx, [esp+0ach+var_60]
push    eax
mov     eax, [esp+0b0h+rect.top]
push    ecx
mov     ecx, [esp+0b4h+rect.left]
push    edx
push    eax
push    ecx
push    edi
call    sub_46a890
mov     [esp+0c4h+var_78], eax
add     esp, 38h
cmp     [esp+8ch+hmem], 0
jz      short loc_46a841
mov     eax, [esp+8ch+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [esi+30h]
push    eax
call    ds:globalunlock
mov     eax, [esp+8ch+var_78]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 7ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 7ch
retn
mov     eax, [esp+lpbmi]
sub     esp, 14h
movsx   eax, word ptr [eax+4]
sub     eax, [esp+14h+xsrc]
push    ebx
mov     ecx, [esp+18h+srcwidth]
push    esi
push    edi
cmp     eax, ecx
mov     [esp+20h+var_14], 0
push    ebp
jl      short loc_46a8b5
mov     eax, ecx
mov     ecx, [esp+24h+srcheight]
mov     [esp+24h+srcwidth], eax
mov     eax, [esp+24h+lpbmi]
movsx   eax, word ptr [eax+8]
sub     eax, [esp+24h+ysrc]
cmp     eax, ecx
jl      short loc_46a8cf
mov     eax, ecx
mov     [esp+24h+srcheight], eax
mov     eax, [esp+24h+lpbmi]
cmp     dword ptr [eax+20h], 0
jnz     short loc_46a8eb
cmp     word ptr [eax+0eh], 4
jnz     short loc_46a8eb
mov     dword ptr [eax+20h], 10h
mov     esi, [esp+24h+hdc]
mov     edi, [esp+24h+xdest]
mov     ebx, [esp+24h+ydest]
cmp     [esp+24h+lpbits], 0
mov     bp, 0
jz      short loc_46a945
mov     eax, [esp+24h+rop]
mov     ecx, [esp+24h+lpbmi]
mov     edx, [esp+24h+lpbits]
push    eax
mov     eax, [esp+28h+arg_30]
and     eax, 0ffffh
push    eax
push    ecx
mov     eax, [esp+30h+srcheight]
push    edx
mov     ecx, [esp+34h+srcwidth]
push    eax
mov     edx, [esp+38h+ysrc]
push    ecx
mov     eax, [esp+3ch+xsrc]
push    edx
mov     ecx, [esp+40h+destheight]
push    eax
mov     edx, [esp+44h+destwidth]
push    ecx
push    edx
push    ebx
push    edi
push    esi
call    ds:stretchdibits
mov     bp, ax
test    bp, bp
jnz     short loc_46a99a
mov     eax, [esp+24h+destwidth]
lea     ecx, [esp+24h+rect]
add     eax, edi
push    ecx
dec     eax
push    esi
mov     [esp+2ch+rect.left], edi
mov     [esp+2ch+rect.top], ebx
mov     [esp+2ch+rect.right], eax
mov     eax, [esp+2ch+destheight]
add     eax, ebx
dec     eax
mov     [esp+2ch+rect.bottom], eax
call    ds:rectvisible
test    eax, eax
jnz     short loc_46a97c
mov     bp, 1
call    __matherr
test    eax, eax
jnz     short loc_46a991
mov     [esp+24h+var_14], 4
mov     bp, 1
test    bp, bp
jz      loc_46a8f7
mov     eax, [esp+24h+var_14]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 20h
push    esi
mov     esi, [esp+24h+arg_0]
mov     ecx, [esi+14h]
movsx   eax, word ptr [ecx+2]
mov     [esp+24h+left], eax
movsx   edx, word ptr [ecx+4]
mov     [esp+24h+top], edx
lea     edx, [esp+24h+var_10]
movsx   eax, word ptr [ecx+6]
mov     [esp+24h+right], eax
push    edx
movsx   ecx, word ptr [ecx+8]
mov     [esp+28h+bottom], ecx
lea     ecx, [esp+28h+left]
mov     eax, [esi+6ch]
push    eax
push    ecx
call    dword ptr [esi+70h]
add     esp, 0ch
test    eax, eax
jz      short loc_46aa1d
call    sub_46afd0
mov     ecx, [esp+24h+right]
push    eax
mov     eax, [esp+28h+bottom]
mov     edx, [esp+28h+top]
push    eax
push    ecx
mov     eax, [esp+30h+left]
push    edx
push    eax
mov     ecx, [esi+34h]
push    ecx
mov     edx, [esi+68h]
push    edx
call    sub_451d90
add     esp, 1ch
xor     eax, eax
pop     esi
add     esp, 20h
retn
sub     esp, 20h
push    esi
mov     esi, [esp+24h+arg_0]
mov     ecx, [esi+14h]
movsx   eax, word ptr [ecx+2]
movsx   edx, word ptr [ecx+4]
mov     [esp+24h+var_20], eax
mov     [esp+24h+var_1c], edx
movsx   eax, word ptr [ecx+6]
movsx   ecx, word ptr [ecx+8]
mov     [esp+24h+var_18], eax
mov     [esp+24h+var_14], ecx
mov     eax, [esi+34h]
movsx   dx, byte ptr [eax+3]
movsx   ecx, word ptr [eax+1ch]
mov     eax, [esp+24h+var_20]
push    edx
mov     edx, [esp+28h+var_18]
push    ecx
mov     ecx, [esp+2ch+var_14]
push    ecx
push    edx
mov     edx, [esp+34h+var_1c]
lea     ecx, [esp+34h+rc]
push    edx
push    eax
push    ecx
call    sub_453010
lea     ecx, [esp+40h+rc]
add     esp, 1ch
mov     edx, [esi+6ch]
push    ecx
lea     ecx, [esp+28h+rc]
push    edx
push    ecx
call    dword ptr [esi+70h]
add     esp, 0ch
test    eax, eax
jz      short loc_46aacc
call    sub_46afd0
mov     ecx, [esp+24h+var_14]
push    eax
mov     eax, [esp+28h+var_18]
push    ecx
mov     edx, [esp+2ch+var_20]
push    eax
mov     eax, [esp+30h+var_1c]
mov     ecx, [esi+34h]
push    eax
push    edx
push    ecx
mov     edx, [esi+68h]
push    edx
call    sub_4525b0
add     esp, 1ch
xor     eax, eax
pop     esi
add     esp, 20h
retn
sub     esp, 20h
push    esi
mov     esi, [esp+24h+arg_0]
mov     ecx, [esi+14h]
movsx   eax, word ptr [ecx+2]
mov     [esp+24h+rc.left], eax
movsx   edx, word ptr [ecx+4]
mov     [esp+24h+rc.top], edx
lea     edx, [esp+24h+var_10]
movsx   eax, word ptr [ecx+6]
mov     [esp+24h+rc.right], eax
push    edx
movsx   ecx, word ptr [ecx+8]
mov     [esp+28h+rc.bottom], ecx
lea     ecx, [esp+28h+rc]
mov     eax, [esi+6ch]
push    eax
push    ecx
call    dword ptr [esi+70h]
add     esp, 0ch
test    eax, eax
jz      short loc_46ab4d
call    sub_46afd0
mov     ecx, [esp+24h+rc.right]
push    eax
mov     eax, [esp+28h+rc.bottom]
mov     edx, [esp+28h+rc.top]
push    eax
push    ecx
mov     eax, [esp+30h+rc.left]
push    edx
push    eax
mov     ecx, [esi+34h]
push    ecx
mov     edx, [esi+68h]
push    edx
call    sub_451e50
add     esp, 1ch
xor     eax, eax
pop     esi
add     esp, 20h
retn
sub     esp, 20h
push    esi
push    edi
mov     esi, [esp+28h+arg_0]
mov     edi, [esi+14h]
movsx   eax, word ptr [edi+2]
mov     [esp+28h+rc.left], eax
movsx   ecx, word ptr [edi+4]
mov     [esp+28h+rc.top], ecx
lea     ecx, [esp+28h+var_10]
movsx   edx, word ptr [edi+6]
mov     [esp+28h+rc.right], edx
push    ecx
movsx   eax, word ptr [edi+8]
mov     [esp+2ch+rc.bottom], eax
lea     eax, [esp+2ch+rc]
mov     edx, [esi+6ch]
push    edx
push    eax
call    dword ptr [esi+70h]
add     esp, 0ch
test    eax, eax
jz      short loc_46abd8
call    sub_46afd0
mov     edx, [esp+28h+rc.bottom]
push    eax
movsx   eax, word ptr [edi+0ch]
movsx   ecx, word ptr [edi+0ah]
push    eax
push    ecx
mov     eax, [esp+34h+rc.right]
push    edx
mov     ecx, [esp+38h+rc.top]
push    eax
mov     edx, [esp+3ch+rc.left]
push    ecx
push    edx
mov     eax, [esi+34h]
push    eax
mov     ecx, [esi+68h]
push    ecx
call    sub_451fc0
add     esp, 24h
xor     eax, eax
pop     edi
pop     esi
add     esp, 20h
retn
sub     esp, 30h
push    esi
push    edi
mov     esi, [esp+38h+arg_0]
mov     edi, [esi+14h]
movsx   eax, word ptr [edi+2]
mov     [esp+38h+left], eax
movsx   ecx, word ptr [edi+4]
mov     [esp+38h+top], ecx
lea     ecx, [esp+38h+var_10]
movsx   edx, word ptr [edi+6]
mov     [esp+38h+right], edx
push    ecx
movsx   eax, word ptr [edi+8]
mov     [esp+3ch+bottom], eax
lea     eax, [esp+3ch+left]
mov     edx, [esi+6ch]
push    edx
push    eax
call    dword ptr [esi+70h]
add     esp, 0ch
test    eax, eax
jz      short loc_46ac82
movsx   eax, word ptr [edi+0ah]
movsx   ecx, word ptr [edi+0ch]
mov     [esp+38h+xr1], eax
mov     [esp+38h+yr1], ecx
movsx   edx, word ptr [edi+0eh]
movsx   eax, word ptr [edi+10h]
mov     [esp+38h+xr2], edx
mov     [esp+38h+yr2], eax
call    sub_46afd0
mov     edx, [esp+38h+xr2]
push    eax
mov     ecx, [esp+3ch+yr2]
mov     eax, [esp+3ch+xr1]
push    ecx
push    edx
mov     edx, [esp+44h+yr1]
mov     ecx, [esp+44h+bottom]
push    edx
push    eax
mov     eax, [esp+4ch+right]
push    ecx
mov     edx, [esp+50h+top]
push    eax
mov     ecx, [esp+54h+left]
push    edx
push    ecx
mov     eax, [esi+34h]
push    eax
mov     edx, [esi+68h]
push    edx
call    sub_452280
add     esp, 2ch
xor     eax, eax
pop     edi
pop     esi
add     esp, 30h
retn
sub     esp, 30h
push    esi
push    edi
mov     esi, [esp+38h+arg_0]
mov     edi, [esi+14h]
movsx   eax, word ptr [edi+2]
mov     [esp+38h+x1], eax
movsx   ecx, word ptr [edi+4]
mov     [esp+38h+y1], ecx
lea     ecx, [esp+38h+var_10]
movsx   edx, word ptr [edi+6]
mov     [esp+38h+x2], edx
push    ecx
movsx   eax, word ptr [edi+8]
mov     [esp+3ch+y2], eax
lea     eax, [esp+3ch+x1]
mov     edx, [esi+6ch]
push    edx
push    eax
call    dword ptr [esi+70h]
add     esp, 0ch
test    eax, eax
jz      short loc_46ad32
movsx   eax, word ptr [edi+0ah]
movsx   ecx, word ptr [edi+0ch]
mov     [esp+38h+x3], eax
mov     [esp+38h+y3], ecx
movsx   edx, word ptr [edi+0eh]
movsx   eax, word ptr [edi+10h]
mov     [esp+38h+x4], edx
mov     [esp+38h+y4], eax
call    sub_46afd0
mov     edx, [esp+38h+x4]
push    eax
mov     ecx, [esp+3ch+y4]
mov     eax, [esp+3ch+x3]
push    ecx
push    edx
mov     edx, [esp+44h+y3]
mov     ecx, [esp+44h+y2]
push    edx
push    eax
mov     eax, [esp+4ch+x2]
push    ecx
mov     edx, [esp+50h+y1]
push    eax
mov     ecx, [esp+54h+x1]
push    edx
push    ecx
mov     eax, [esi+34h]
push    eax
mov     edx, [esi+68h]
push    edx
call    sub_452150
add     esp, 2ch
xor     eax, eax
pop     edi
pop     esi
add     esp, 30h
retn
sub     esp, 2ch
push    ebx
push    esi
mov     ebx, [esp+34h+arg_0]
push    edi
push    ebp
mov     ebp, [ebx+14h]
mov     ecx, [ebx+5ch]
mov     eax, [ebx+0ch]
lea     edx, [ecx+eax+10h]
movsx   ecx, word ptr [ebp+6]
mov     [esp+3ch+var_24], edx
mov     [esp+3ch+var_20], ecx
movsx   eax, word ptr [ebp+8]
mov     [esp+3ch+var_1c], eax
lea     eax, [esp+3ch+var_10]
movsx   edx, word ptr [ebp+0ah]
mov     [esp+3ch+var_18], edx
push    eax
movsx   ecx, word ptr [ebp+0ch]
mov     [esp+40h+var_14], ecx
lea     ecx, [esp+40h+var_20]
mov     edx, [ebx+6ch]
push    edx
push    ecx
call    dword ptr [ebx+70h]
add     esp, 0ch
test    eax, eax
jz      loc_46ae72
mov     dx, [ebp+0eh]
mov     ecx, [esp+3ch+var_24]
movsx   eax, dx
mov     [esp+3ch+var_2a], dx
lea     edi, [ecx+eax*4-4]
mov     eax, [ebx+34h]
test    byte ptr [eax+1], 8
jz      short loc_46adce
mov     ecx, 4
mov     esi, [esp+3ch+var_24]
repe cmpsb
jz      short loc_46adce
mov     eax, 1
add     [esp+3ch+var_2a], ax
jmp     short loc_46add3
mov     eax, 1
test    eax, eax
jz      loc_46ae72
movsx   eax, [esp+3ch+var_2a]
shl     eax, 3
push    2
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_46ae7c
push    esi
call    ds:globallock
xor     dx, dx
mov     edi, eax
cmp     [ebp+0eh], dx
jle     short loc_46ae32
movsx   eax, dx
inc     dx
mov     ecx, [esp+3ch+var_24]
lea     ecx, [ecx+eax*4]
mov     dword ptr [esp+3ch+var_2a+2], ecx
movsx   ecx, word ptr [ecx]
mov     [edi+eax*8], ecx
mov     ecx, dword ptr [esp+3ch+var_2a+2]
movsx   ecx, word ptr [ecx+2]
mov     [edi+eax*8+4], ecx
cmp     [ebp+0eh], dx
jg      short loc_46ae0a
mov     ax, [ebp+0eh]
cmp     ax, [esp+3ch+var_2a]
jge     short loc_46ae4d
movsx   eax, ax
mov     ecx, [edi]
mov     edx, [edi+4]
lea     eax, [edi+eax*8]
mov     [eax], ecx
mov     [eax+4], edx
call    sub_46afd0
push    eax
mov     ecx, [ebx+34h]
mov     eax, dword ptr [esp+40h+var_2a]
mov     edx, [ebx+68h]
push    eax
push    edi
push    ecx
push    edx
call    sub_452360
add     esp, 14h
push    esi
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
xor     eax, eax
retn
xor     eax, eax
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_46b560
add     esp, 4
mov     dword ptr [esi], offset loc_469ee0
mov     dword ptr [esi+10h], offset sub_469ef0
mov     dword ptr [esi+14h], offset sub_469f00
mov     dword ptr [esi+1ch], offset sub_469f10
mov     dword ptr [esi+20h], offset loc_469f40
mov     dword ptr [esi+100h], offset sub_469f50
mov     dword ptr [esi+104h], offset sub_469f60
mov     dword ptr [esi+180h], offset sub_469f70
mov     dword ptr [esi+194h], offset sub_46a060
mov     dword ptr [esi+1c4h], offset sub_46a9b0
mov     dword ptr [esi+1d4h], offset sub_46aa30
mov     dword ptr [esi+1f4h], offset sub_46aae0
mov     dword ptr [esi+204h], offset sub_46ab60
mov     dword ptr [esi+214h], offset sub_46abe0
mov     dword ptr [esi+224h], offset sub_46ac90
mov     dword ptr [esi+234h], offset sub_46ad40
mov     dword ptr [esi+260h], offset sub_46ae90
mov     dword ptr [esi+264h], offset sub_46aea0
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ds:dword_4a89fc, eax
retn
mov     ecx, [esp+4]
mov     edx, [esp+0ch]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     eax, 1
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
mov     eax, dword_4ae590
retn
mov     eax, dword_4ae590
mov     ecx, [esp+arg_0]
mov     dword_4ae590, ecx
retn
push    offset byte_4a8a08
call    sub_46b650
add     esp, 4
retn
mov     eax, [esp+arg_8]
push    0
mov     ecx, [esp+4+arg_4]
push    eax
mov     edx, [esp+8+arg_0]
push    ecx
push    edx
call    sub_46b020
add     esp, 10h
retn
sub     esp, 60h
cmp     ds:dword_4a8b08, 0
mov     [esp+60h+var_54], 0
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_46b047
call    sub_46aff0
mov     ds:dword_4a8b08, 1
mov     ebx, [esp+70h+arg_0]
mov     dword ptr [ebx+54h], 0
cmp     dword ptr [ebx+50h], 0
jle     loc_46b1ae
mov     esi, [ebx+5ch]
add     esi, [ebx+0ch]
cmp     [esp+70h+arg_c], 0
jz      short loc_46b082
mov     cx, [esi]
mov     ax, cx
shl     ax, 8
shr     cx, 8
add     ax, cx
mov     [esi], ax
jmp     short loc_46b085
mov     ax, [esi]
cmp     ax, [esp+70h+arg_8]
ja      loc_46b158
movzx   eax, ax
movsx   ebp, ds:byte_4a8a08[eax]
mov     [esp+70h+var_5c], eax
test    ebp, ebp
jle     short loc_46b0a6
mov     edx, ebp
jmp     short loc_46b103
neg     ebp
mov     edx, ebp
lea     ecx, [esi+2]
cmp     [esp+70h+arg_c], 0
jz      short loc_46b101
mov     [esp+70h+var_60], 0
mov     eax, [ecx]
movzx   ebp, ax
shr     eax, 10h
mov     [esp+70h+var_58], ebp
shl     [esp+70h+var_58], 10h
mov     word ptr [esp+70h+var_60], ax
mov     edi, [esp+70h+var_58]
and     [esp+70h+var_60], 0ffh
shr     ax, 8
add     edi, [esp+70h+var_60]
shl     edi, 8
and     ebp, 0ffffff00h
shl     ebp, 8
add     edi, ebp
movzx   eax, ax
lea     ebp, [edi+eax]
mov     [ecx], ebp
jmp     short loc_46b103
mov     ebp, [ecx]
mov     ecx, [esp+70h+arg_4]
mov     eax, [esp+70h+var_5c]
lea     edi, [ecx+eax*4]
mov     [esp+70h+var_58], edi
cmp     dword ptr [edi], 0
jz      short loc_46b153
movzx   eax, si
add     eax, edx
cmp     eax, 0ffffh
jle     short loc_46b13e
lea     edi, [esp+70h+var_50]
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
lea     eax, [esp+70h+var_50]
mov     [ebx+14h], eax
jmp     short loc_46b141
mov     [ebx+14h], esi
mov     eax, [esp+70h+var_58]
push    ebx
call    dword ptr [eax]
mov     [esp+74h+var_54], eax
add     esp, 4
test    eax, eax
jnz     short loc_46b1ae
add     [ebx+5ch], ebp
jmp     short loc_46b19e
add     esi, 2
cmp     [esp+70h+arg_c], 0
jz      short loc_46b199
mov     edx, [esi]
xor     eax, eax
movzx   edi, dx
shr     edx, 10h
mov     ecx, edi
mov     ax, dx
and     edi, 0ffffff00h
shr     dx, 8
and     eax, 0ffh
shl     ecx, 10h
shl     edi, 8
add     eax, ecx
movzx   ecx, dx
shl     eax, 8
add     eax, edi
add     eax, ecx
mov     [esi], eax
jmp     short loc_46b19b
mov     eax, [esi]
add     [ebx+5ch], eax
mov     eax, [ebx+54h]
inc     eax
mov     [ebx+54h], eax
cmp     [ebx+50h], eax
jg      loc_46b05c
mov     eax, [esp+70h+var_54]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 60h
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+34h]
xor     eax, eax
mov     word ptr [ecx+4], 1
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+34h]
xor     eax, eax
mov     word ptr [ecx+4], 0
retn
mov     eax, [esp+arg_0]
push    ebx
mov     ecx, [eax+14h]
xor     edx, edx
xor     ebx, ebx
mov     dl, [ecx+4]
mov     bl, [ecx+3]
shl     edx, 10h
mov     eax, [eax+34h]
shl     ebx, 8
or      edx, ebx
xor     ebx, ebx
mov     bl, [ecx+2]
or      edx, ebx
pop     ebx
mov     [eax+6], edx
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+14h]
mov     eax, [eax+34h]
mov     edx, [ecx+2]
add     ecx, 2
add     eax, 12h
mov     ecx, [ecx+4]
mov     [eax], edx
mov     [eax+4], ecx
xor     eax, eax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    ebx
mov     ecx, [eax+14h]
xor     edx, edx
xor     ebx, ebx
mov     dl, [ecx+4]
mov     bl, [ecx+3]
shl     edx, 10h
mov     eax, [eax+34h]
shl     ebx, 8
or      edx, ebx
xor     ebx, ebx
mov     bl, [ecx+2]
or      edx, ebx
pop     ebx
mov     [eax+0ah], edx
xor     eax, eax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+34h]
xor     eax, eax
mov     word ptr [ecx+1ah], 1
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+34h]
xor     eax, eax
mov     word ptr [ecx+1ah], 0
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+14h]
mov     edx, [esi+34h]
mov     cx, [eax+4]
mov     [edx+1eh], cx
mov     edx, [esi+34h]
mov     ax, [eax+2]
pop     esi
mov     [edx+1ch], ax
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    ebx
mov     ecx, [eax+14h]
xor     edx, edx
xor     ebx, ebx
mov     dl, [ecx+3]
mov     bl, [ecx+4]
shl     edx, 8
mov     eax, [eax+34h]
shl     ebx, 10h
or      edx, ebx
xor     ebx, ebx
mov     bl, [ecx+2]
or      edx, ebx
pop     ebx
mov     [eax+20h], edx
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+14h]
mov     eax, [eax+34h]
mov     edx, [ecx+2]
add     ecx, 2
add     eax, 28h
mov     ecx, [ecx+4]
mov     [eax], edx
mov     [eax+4], ecx
xor     eax, eax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    ebx
mov     ecx, [eax+14h]
xor     edx, edx
xor     ebx, ebx
mov     dl, [ecx+3]
mov     bl, [ecx+4]
shl     edx, 8
mov     eax, [eax+34h]
shl     ebx, 10h
or      edx, ebx
xor     ebx, ebx
mov     bl, [ecx+2]
or      edx, ebx
pop     ebx
mov     [eax+24h], edx
xor     eax, eax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+34h]
xor     eax, eax
mov     byte ptr [ecx+2], 1
retn
mov     eax, [esp+4]
mov     ecx, [eax+34h]
xor     eax, eax
mov     byte ptr [ecx+2], 0
retn
mov     eax, [esp+4]
mov     ecx, [eax+14h]
mov     eax, [eax+34h]
mov     cl, [ecx+2]
mov     [eax+3], cl
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+34h]
xor     eax, eax
mov     byte ptr [ecx+3], 0
retn
mov     eax, [esp+4]
mov     ecx, [eax+14h]
mov     eax, [eax+34h]
mov     cl, [ecx+2]
mov     [eax], cl
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+14h]
mov     eax, [eax+34h]
mov     cl, [ecx+2]
mov     [eax+1], cl
xor     eax, eax
retn
mov     ecx, [esp+arg_0]
mov     eax, [ecx+34h]
mov     word ptr [eax+34h], 0
mov     eax, [ecx+34h]
add     eax, 30h
push    eax
push    ecx
call    sub_46b420
add     esp, 8
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
mov     edi, [esi+14h]
mov     ebp, [esp+10h+arg_4]
mov     ebx, [ebp+0]
test    ebx, ebx
jnz     short loc_46b460
mov     eax, [edi+6]
cmp     eax, 100h
jg      short loc_46b445
mov     eax, 100h
push    2
lea     eax, ds:28h[eax*4]
push    eax
call    sub_45b8f0
mov     [ebp+0], eax
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_46b4a5
push    ebx
call    ds:globallock
mov     dword ptr [eax], 28h
mov     word ptr [eax+0ch], 1
mov     word ptr [eax+0eh], 8
mov     ecx, [edi+6]
mov     [eax+20h], ecx
mov     ecx, [edi+6]
shl     ecx, 2
mov     ebp, [esi+5ch]
shr     ecx, 2
mov     edx, [esi+0ch]
lea     edi, [eax+28h]
push    ebx
lea     esi, [ebp+edx+0ah]
rep movsd
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
push    ebp
mov     esi, [ebx+34h]
cmp     dword ptr [esi+30h], 0
jnz     short loc_46b4c8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
call    sub_469a70
cmp     eax, 8
jz      short loc_46b4d9
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     edi, [ebx+14h]
mov     ebp, [edi+0ah]
test    ebp, ebp
jz      short loc_46b52f
call    sub_40ae40
cmp     eax, ebp
jnz     short loc_46b52f
mov     eax, [esi+30h]
mov     ebp, ds:globallock
push    eax
call    ebp
mov     ecx, [ebx+0ch]
add     eax, 28h
mov     edx, [ebx+5ch]
lea     ecx, [edx+ecx+0eh]
xor     edx, edx
cmp     [edi+6], edx
jle     short loc_46b51f
inc     ecx
add     eax, 2
movzx   bx, byte ptr [ecx-1]
mov     [eax-2], bx
inc     edx
cmp     [edi+6], edx
jg      short loc_46b50c
mov     eax, [esi+30h]
push    eax
call    ds:globalunlock
mov     word ptr [esi+34h], 1
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    edi
xor     eax, eax
mov     edi, [esp+4+arg_0]
mov     ecx, 40h
rep stosd
pop     edi
retn
push    edi
xor     eax, eax
mov     edi, [esp+4+arg_0]
mov     ecx, 100h
rep stosd
pop     edi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_46b550
mov     dword ptr [esi+4], offset sub_46b1c0
mov     dword ptr [esi+8], offset sub_46b1d0
mov     dword ptr [esi+18h], offset sub_46b1e0
mov     dword ptr [esi+28h], offset sub_46b210
mov     dword ptr [esi+30h], offset loc_46b230
mov     dword ptr [esi+38h], offset sub_46b240
mov     dword ptr [esi+40h], offset sub_46b270
mov     dword ptr [esi+84h], offset sub_46b280
mov     dword ptr [esi+88h], offset sub_46b290
mov     dword ptr [esi+8ch], offset sub_46b2a0
mov     dword ptr [esi+98h], offset sub_46b2d0
mov     dword ptr [esi+0a8h], offset sub_46b300
mov     dword ptr [esi+0b0h], offset loc_46b320
mov     dword ptr [esi+0b8h], offset sub_46b330
mov     dword ptr [esi+0c0h], offset sub_46b360
mov     dword ptr [esi+108h], offset sub_46b370
mov     dword ptr [esi+10ch], offset loc_46b380
mov     dword ptr [esi+120h], offset loc_46b390
mov     dword ptr [esi+124h], offset sub_46b3b0
mov     dword ptr [esi+140h], offset loc_46b3c0
mov     dword ptr [esi+144h], offset sub_46b3e0
mov     dword ptr [esi+150h], offset sub_46b4b0
add     esp, 4
mov     dword ptr [esi+158h], offset sub_46b400
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_46b540
add     esp, 4
mov     eax, 2
mov     byte ptr [esi], 2ah
mov     [esi+1], al
mov     ecx, 8
mov     [esi+2], al
mov     [esi+4], al
mov     [esi+6], cl
mov     edx, 0ah
mov     [esi+8], al
mov     [esi+0ah], dl
mov     [esi+0eh], cl
mov     [esi+10h], al
mov     [esi+21h], al
mov     byte ptr [esi+5], 0fah
mov     [esi+22h], al
mov     [esi+26h], cl
mov     [esi+28h], al
mov     [esi+2ah], dl
mov     byte ptr [esi+7], 0f8h
mov     [esi+2eh], cl
mov     [esi+30h], al
mov     [esi+40h], al
mov     [esi+41h], al
mov     [esi+42h], al
mov     [esi+43h], al
mov     ecx, 4
mov     [esi+49h], al
mov     [esi+48h], cl
mov     [esi+50h], cl
mov     byte ptr [esi+0ch], 0f9h
mov     byte ptr [esi+23h], 6
mov     byte ptr [esi+2ch], 0f9h
mov     [esi+51h], cl
mov     [esi+71h], dl
mov     ecx, 0fffffff2h
mov     [esi+75h], dl
mov     [esi+54h], cl
mov     [esi+7dh], dl
mov     byte ptr [esi+56h], 0f6h
mov     byte ptr [esi+60h], 0b6h
mov     byte ptr [esi+65h], 0c6h
mov     byte ptr [esi+81h], 0eh
mov     byte ptr [esi+85h], 12h
mov     byte ptr [esi+89h], 12h
mov     byte ptr [esi+8dh], 0f0h
mov     [esi+98h], cl
mov     [esi+31h], al
mov     [esi+52h], al
mov     [esi+79h], dl
mov     byte ptr [esi+3], 6
mov     byte ptr [esi+8], 0
mov     byte ptr [esi+28h], 0
mov     byte ptr [esi+91h], 0
pop     esi
retn
push    42h
push    400h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a8b0c, eax
test    eax, eax
jnz     short loc_46b760
push    85h
mov     eax, off_4ad1e8
push    offset apighit
push    eax
call    sub_480570
add     esp, 0ch
mov     eax, ds:dword_4a8b0c
push    eax
call    ds:globallock
mov     dword ptr [eax+4], offset sub_46b990
mov     dword ptr [eax+8], offset sub_46b9b0
mov     dword ptr [eax+84h], offset sub_46b9d0
mov     dword ptr [eax+88h], offset sub_46ba00
mov     dword ptr [eax+8ch], offset sub_46ba20
mov     dword ptr [eax+140h], offset sub_46ba70
mov     dword ptr [eax+1c4h], offset sub_46ba90
mov     dword ptr [eax+1d4h], offset sub_46bae0
mov     dword ptr [eax+1f4h], offset sub_46bb60
mov     dword ptr [eax+204h], offset sub_46bbc0
mov     dword ptr [eax+234h], offset sub_46bc10
mov     dword ptr [eax+194h], offset sub_46bd00
mov     dword ptr [eax+180h], offset sub_46be00
mov     dword ptr [eax+260h], offset sub_46bf40
mov     dword ptr [eax+264h], offset sub_46bfa0
mov     dword ptr [eax+158h], offset sub_46bff0
mov     ecx, ds:dword_4a8b0c
push    ecx
call    ds:globalunlock
retn
mov     eax, ds:dword_4a8b0c
push    eax
call    sub_45ba00
add     esp, 4
retn
sub     esp, 0dch
lea     eax, [esp+0dch+var_dc]
push    esi
push    edi
push    eax
call    sub_46d4a0
lea     edi, [esp+0e8h+var_a4]
add     esp, 4
xor     eax, eax
mov     ecx, 28h
rep stosd
stosb
lea     eax, [esp+0e4h+var_dc]
mov     edx, [esp+0e4h+arg_8]
mov     ecx, [esp+0e4h+arg_c]
mov     [esp+0e4h+var_70], eax
mov     [esp+0e4h+var_3c], edx
lea     edx, [esp+0e4h+var_34]
mov     [esp+0e4h+var_38], ecx
mov     ecx, [esp+0e4h+arg_10]
mov     [esp+0e4h+var_6c], 0
mov     eax, [ecx]
mov     esi, [ecx+4]
mov     [edx], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+4], esi
mov     [edx+8], eax
movsx   eax, [esp+0e4h+var_c2]
mov     [edx+0ch], ecx
mov     [esp+0e4h+var_20], eax
movsx   edx, [esp+0e4h+var_d8]
movsx   ecx, [esp+0e4h+var_c0]
mov     [esp+0e4h+var_24], edx
mov     [esp+0e4h+var_1c], ecx
movsx   edx, [esp+0e4h+var_be]
mov     [esp+0e4h+var_18], edx
test    eax, eax
jz      short loc_46b8e7
mov     [esp+0e4h+var_14], ecx
mov     [esp+0e4h+var_10], edx
jmp     short loc_46b8f7
xor     eax, eax
mov     [esp+0e4h+var_14], eax
mov     [esp+0e4h+var_10], eax
mov     eax, [esp+0e4h+arg_14]
lea     ecx, [esp+0e4h+var_a4]
mov     edx, [esp+0e4h+arg_0]
push    ecx
mov     [esp+0e8h+hmem], 0
mov     [esp+0e8h+var_7], eax
mov     eax, [esp+0e8h+arg_4]
push    eax
push    edx
call    sub_46d310
add     esp, 0ch
test    eax, eax
jnz     short loc_46b987
mov     eax, ds:dword_4a8b0c
push    eax
call    ds:globallock
lea     ecx, [esp+0e4h+var_a4]
push    9fh
push    eax
push    ecx
call    sub_46b000
add     esp, 0ch
mov     esi, eax
mov     eax, ds:dword_4a8b0c
push    eax
call    ds:globalunlock
lea     ecx, [esp+0e4h+var_a4]
push    ecx
call    sub_46d380
add     esp, 4
cmp     [esp+0e4h+hmem], 0
jz      short loc_46b985
mov     eax, [esp+0e4h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
add     esp, 0dch
retn
mov     eax, [esp+arg_0]
mov     dword ptr [eax+80h], 1
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     dword ptr [eax+80h], 0
xor     eax, eax
retn
mov     ecx, [esp+arg_0]
mov     dword ptr [ecx+84h], 1
lea     eax, [ecx+88h]
add     ecx, 90h
mov     edx, [eax]
mov     eax, [eax+4]
mov     [ecx], edx
mov     [ecx+4], eax
xor     eax, eax
retn
mov     eax, [esp+arg_0]
xor     ecx, ecx
mov     [eax+84h], ecx
mov     [eax+90h], ecx
mov     [eax+94h], ecx
xor     eax, eax
retn
push    esi
mov     esi, [esp+4+arg_0]
lea     edx, [esi+88h]
mov     eax, [esi+14h]
movsx   ecx, word ptr [eax+2]
mov     [edx], ecx
cmp     dword ptr [esi+84h], 0
movsx   eax, word ptr [eax+4]
mov     [esi+8ch], eax
jz      short loc_46ba5e
mov     [esi+90h], ecx
mov     eax, ecx
mov     ecx, [edx+4]
mov     [esi+94h], ecx
add     esi, 90h
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+14h]
mov     cl, [ecx+2]
mov     [eax+98h], cl
xor     eax, eax
retn
mov     edx, [esp+arg_0]
sub     esp, 10h
mov     ecx, [edx+14h]
movsx   eax, word ptr [ecx+2]
mov     [esp+10h+var_10], eax
movsx   eax, word ptr [ecx+4]
mov     [esp+10h+var_c], eax
movsx   eax, word ptr [ecx+6]
mov     [esp+10h+var_8], eax
lea     eax, [esp+10h+var_10]
movsx   ecx, word ptr [ecx+8]
mov     [esp+10h+var_4], ecx
push    eax
push    edx
call    sub_46c010
add     esp, 8
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
add     esp, 10h
and     eax, 0dh
retn
mov     ecx, [esp+arg_0]
sub     esp, 10h
mov     edx, [ecx+14h]
movsx   eax, word ptr [edx+2]
mov     [esp+10h+var_10], eax
movsx   eax, word ptr [edx+4]
mov     [esp+10h+var_c], eax
movsx   eax, word ptr [edx+6]
mov     [esp+10h+var_8], eax
movsx   edx, word ptr [edx+8]
mov     [esp+10h+var_4], edx
lea     edx, [ecx+90h]
mov     eax, [edx]
inc     eax
push    edx
sar     eax, 1
lea     edx, [esp+14h+var_8]
movsx   eax, ax
add     [esp+14h+var_10], eax
push    edx
add     ecx, 70h
add     [esp+18h+var_c], eax
add     [esp+18h+var_8], eax
add     [esp+18h+var_4], eax
lea     eax, [esp+18h+var_10]
push    eax
push    ecx
call    sub_454480
add     esp, 10h
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
add     esp, 10h
and     eax, 0dh
retn
mov     ecx, [esp+arg_0]
sub     esp, 10h
mov     edx, [ecx+14h]
movsx   eax, word ptr [edx+2]
mov     [esp+10h+var_10], eax
movsx   eax, word ptr [edx+4]
mov     [esp+10h+var_c], eax
movsx   eax, word ptr [edx+6]
mov     [esp+10h+var_8], eax
mov     eax, [ecx+80h]
movsx   edx, word ptr [edx+8]
push    eax
add     ecx, 70h
lea     eax, [esp+14h+var_10]
mov     [esp+14h+var_4], edx
lea     edx, [ecx+20h]
push    edx
push    eax
push    ecx
call    sub_4542c0
add     esp, 10h
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
add     esp, 10h
and     eax, 0dh
retn
mov     edx, [esp+arg_0]
sub     esp, 10h
mov     ecx, [edx+14h]
movsx   eax, word ptr [ecx+2]
mov     [esp+10h+var_10], eax
movsx   eax, word ptr [ecx+4]
mov     [esp+10h+var_c], eax
movsx   eax, word ptr [ecx+6]
mov     [esp+10h+var_8], eax
lea     eax, [esp+10h+var_10]
movsx   ecx, word ptr [ecx+8]
mov     [esp+10h+var_4], ecx
push    eax
push    edx
call    sub_46c010
add     esp, 8
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
add     esp, 10h
and     eax, 0dh
retn
mov     ecx, [esp+arg_0]
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     ebx, [ecx+14h]
mov     si, [ebx+0eh]
push    ebp
lea     edi, [ebx+10h]
push    2
movsx   eax, si
shl     eax, 3
push    eax
call    sub_45b8f0
mov     [esp+30h+hmem], eax
add     esp, 8
test    eax, eax
jnz     short loc_46bc4b
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+28h+hmem]
mov     ebp, ds:globallock
push    eax
call    ebp
xor     dx, dx
test    si, si
jle     short loc_46bc7a
movsx   ecx, dx
inc     dx
movsx   ebp, word ptr [edi+ecx*4]
cmp     dx, si
mov     [eax+ecx*8], ebp
movsx   ebp, word ptr [edi+ecx*4+2]
mov     [eax+ecx*8+4], ebp
jl      short loc_46bc60
movsx   ecx, word ptr [ebx+6]
mov     [esp+28h+var_10], ecx
movsx   edx, word ptr [ebx+8]
mov     [esp+28h+var_c], edx
lea     edx, [esp+28h+var_16]
movsx   ebp, word ptr [ebx+0ah]
mov     [esp+28h+var_8], ebp
push    edx
movsx   ecx, word ptr [ebx+0ch]
mov     ebx, [esp+2ch+arg_0]
mov     [esp+2ch+var_4], ecx
lea     edx, [esp+2ch+var_10]
mov     ecx, [ebx+80h]
push    ecx
mov     ecx, [esp+30h+arg_0]
add     ecx, 90h
push    ecx
push    edx
push    eax
push    esi
mov     eax, [esp+40h+arg_0]
add     eax, 70h
push    eax
call    sub_454600
mov     ecx, [esp+44h+hmem]
add     esp, 1ch
mov     esi, eax
push    ecx
call    sub_45ba00
add     esp, 4
mov     eax, 0
cmp     esi, 1
pop     ebp
adc     eax, 0ffffffffh
pop     edi
and     eax, 0dh
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 10h
push    esi
mov     esi, [esp+14h+arg_0]
mov     ecx, [esi+14h]
movsx   eax, word ptr [ecx+12h]
mov     [esp+14h+var_10], eax
push    1
movsx   edx, word ptr [ecx+14h]
mov     [esp+18h+var_c], edx
lea     edx, [esi+90h]
movsx   eax, word ptr [ecx+16h]
mov     [esp+18h+var_8], eax
push    edx
movsx   ecx, word ptr [ecx+18h]
lea     eax, [esp+1ch+var_10]
mov     [esp+1ch+var_4], ecx
push    eax
lea     ecx, [esi+70h]
push    ecx
call    sub_454220
add     esp, 10h
test    eax, eax
jz      loc_46bdd7
movsx   eax, byte ptr [esi+98h]
cmp     eax, 6
ja      short def_46bd59
jmp     ds:jpt_46bd59[eax*4]
xor     eax, eax
pop     esi
add     esp, 10h
retn
push    esi
call    sub_46c080
add     esp, 4
cmp     eax, 0dh
jz      short loc_46bdd9
test    eax, eax
jz      short loc_46bdd9
mov     eax, 0dh
pop     esi
add     esp, 10h
retn
push    esi
call    sub_46c090
add     esp, 4
cmp     eax, 0dh
jz      short loc_46bdd9
test    eax, eax
jz      short loc_46bdd9
push    esi
call    sub_46c220
add     esp, 4
cmp     eax, 0dh
jz      short loc_46bdd9
test    eax, eax
jz      short loc_46bdd9
mov     eax, 0dh
pop     esi
add     esp, 10h
retn
push    esi
call    sub_46c220
add     esp, 4
cmp     eax, 0dh
jz      short loc_46bdd9
test    eax, eax
jz      short loc_46bdd9
mov     eax, 0dh
pop     esi
add     esp, 10h
retn
mov     eax, 0dh
pop     esi
add     esp, 10h
retn
xor     eax, eax
pop     esi
add     esp, 10h
retn
sub     esp, 10h
push    esi
mov     esi, [esp+14h+arg_0]
mov     ecx, [esi+14h]
movsx   eax, word ptr [ecx+16h]
mov     [esp+14h+var_10], eax
push    1
movsx   edx, word ptr [ecx+18h]
mov     [esp+18h+var_c], edx
lea     edx, [esi+90h]
movsx   eax, word ptr [ecx+1ah]
mov     [esp+18h+var_8], eax
push    edx
movsx   ecx, word ptr [ecx+1ch]
lea     eax, [esp+1ch+var_10]
mov     [esp+1ch+var_4], ecx
push    eax
lea     ecx, [esi+70h]
push    ecx
call    sub_454220
add     esp, 10h
test    eax, eax
jz      loc_46bf1d
movsx   eax, byte ptr [esi+98h]
cmp     eax, 6
ja      short def_46be59
jmp     ds:jpt_46be59[eax*4]
xor     eax, eax
pop     esi
add     esp, 10h
retn
push    esi
call    sub_46c3c0
add     esp, 4
cmp     eax, 0dh
jz      loc_46bf1f
test    eax, eax
jz      loc_46bf1f
push    esi
call    sub_46c510
add     esp, 4
cmp     eax, 0dh
jz      loc_46bf1f
test    eax, eax
jz      loc_46bf1f
mov     eax, 0dh
pop     esi
add     esp, 10h
retn
push    esi
call    sub_46c3c0
add     esp, 4
cmp     eax, 0dh
jz      short loc_46bf1f
test    eax, eax
jz      short loc_46bf1f
push    esi
call    sub_46c590
add     esp, 4
cmp     eax, 0dh
jz      short loc_46bf1f
test    eax, eax
jz      short loc_46bf1f
push    esi
call    sub_46c780
add     esp, 4
cmp     eax, 0dh
jz      short loc_46bf1f
test    eax, eax
jz      short loc_46bf1f
mov     eax, 0dh
pop     esi
add     esp, 10h
retn
push    esi
call    sub_46c3c0
add     esp, 4
cmp     eax, 0dh
jz      short loc_46bf1f
test    eax, eax
jz      short loc_46bf1f
push    esi
call    sub_46c780
add     esp, 4
cmp     eax, 0dh
jz      short loc_46bf1f
test    eax, eax
jz      short loc_46bf1f
mov     eax, 0dh
pop     esi
add     esp, 10h
retn
mov     eax, 0dh
pop     esi
add     esp, 10h
retn
xor     eax, eax
pop     esi
add     esp, 10h
retn
mov     edx, [esp+arg_0]
sub     esp, 10h
cmp     dword ptr [edx+9dh], 0
jnz     short loc_46bf8e
mov     ecx, [edx+14h]
movsx   eax, word ptr [ecx+6]
mov     [esp+10h+var_10], eax
movsx   eax, word ptr [ecx+8]
mov     [esp+10h+var_c], eax
movsx   eax, word ptr [ecx+0ah]
mov     [esp+10h+var_8], eax
lea     eax, [esp+10h+var_10]
movsx   ecx, word ptr [ecx+0ch]
mov     [esp+10h+var_4], ecx
push    eax
push    edx
call    sub_46c010
add     esp, 8
test    eax, eax
jz      short loc_46bf8e
mov     eax, 0dh
add     esp, 10h
retn
xor     eax, eax
add     esp, 10h
retn
mov     edx, [esp+arg_0]
sub     esp, 10h
mov     ecx, [edx+14h]
movsx   eax, word ptr [ecx+6]
mov     [esp+10h+var_10], eax
movsx   eax, word ptr [ecx+8]
mov     [esp+10h+var_c], eax
movsx   eax, word ptr [ecx+0ah]
mov     [esp+10h+var_8], eax
lea     eax, [esp+10h+var_10]
movsx   ecx, word ptr [ecx+0ch]
mov     [esp+10h+var_4], ecx
push    eax
push    edx
call    sub_46c010
add     esp, 8
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
add     esp, 10h
and     eax, 0dh
retn
mov     eax, [esp+arg_0]
lea     ecx, [eax+99h]
push    ecx
push    eax
call    sub_46b420
add     esp, 8
retn
mov     ecx, [esp+arg_0]
mov     eax, [ecx+80h]
lea     edx, [ecx+90h]
add     ecx, 70h
push    eax
mov     eax, [esp+4+arg_4]
push    edx
push    eax
push    ecx
call    sub_454220
add     esp, 10h
retn
mov     edx, [esp+arg_0]
push    esi
mov     ecx, [esp+4+arg_4]
mov     esi, [esp+4+arg_8]
mov     eax, [ecx]
add     eax, [edx+68h]
mov     [esi], eax
mov     eax, [ecx+4]
add     eax, [edx+6ch]
mov     [esi+4], eax
mov     eax, [ecx+8]
add     eax, [edx+68h]
mov     [esi+8], eax
mov     eax, [ecx+0ch]
add     eax, [edx+6ch]
mov     [esi+0ch], eax
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_46c110
add     esp, 4
retn
sub     esp, 28h
push    esi
mov     esi, [esp+2ch+arg_0]
mov     eax, [esi+14h]
mov     ecx, [esi+0ch]
mov     eax, [eax+22h]
add     eax, [esi+5ch]
lea     ecx, [eax+ecx+26h]
movzx   eax, cx
add     eax, 28h
cmp     eax, 0ffffh
jle     short loc_46c0d8
lea     eax, [esp+2ch+var_28]
push    28h
push    ecx
push    eax
call    _memcpy
mov     edx, [esp+38h+var_1c]
add     esp, 0ch
and     edx, 0ffffh
xor     eax, eax
mov     ax, word ptr [esp+2ch+var_1c+2]
jmp     short loc_46c0e4
xor     edx, edx
xor     eax, eax
mov     dx, [ecx+0ch]
mov     ax, [ecx+0eh]
imul    edx, eax
cmp     edx, 1
jnz     short loc_46c0f6
mov     eax, 0bh
pop     esi
add     esp, 28h
retn
push    esi
call    sub_46c110
add     esp, 4
pop     esi
add     esp, 28h
retn
sub     esp, 60h
push    ebx
push    esi
mov     ebx, [esp+68h+arg_0]
push    edi
mov     edi, [ebx+14h]
mov     ecx, [ebx+5ch]
add     ecx, [ebx+0ch]
mov     eax, [edi+1eh]
test    eax, eax
jz      loc_46c206
lea     esi, [eax+ecx+22h]
push    30h
lea     eax, [esp+70h+var_30]
push    esi
push    eax
call    _memcpy
mov     eax, [esp+78h+var_30]
lea     ecx, [esp+78h+var_8]
add     esp, 0ch
lea     esi, [esi+eax+8]
push    ecx
push    0ffffffh
call    sub_40f070
lea     eax, [esp+74h+var_4]
add     esp, 8
push    eax
push    0
call    sub_40f070
lea     eax, [esp+74h+rcdst]
add     esp, 8
push    eax
push    offset dword_4ae5b0
push    ebx
call    sub_46c040
movsx   eax, word ptr [edi+12h]
mov     [esp+78h+var_40], eax
add     esp, 0ch
movsx   ecx, word ptr [edi+14h]
mov     [esp+6ch+var_3c], ecx
movsx   edx, word ptr [edi+16h]
mov     [esp+6ch+var_38], edx
movsx   eax, word ptr [edi+18h]
mov     [esp+6ch+var_34], eax
movsx   ecx, word ptr [edi+0ah]
mov     [esp+6ch+rcsrc2.left], ecx
push    0
movsx   edx, word ptr [edi+0ch]
mov     [esp+70h+rcsrc2.top], edx
lea     edx, [esp+70h+rcsrc2]
movsx   eax, word ptr [edi+0eh]
mov     [esp+70h+rcsrc2.right], eax
push    edx
movsx   ecx, word ptr [edi+10h]
lea     eax, [esp+74h+var_40]
mov     [esp+74h+rcsrc2.bottom], ecx
lea     ecx, [esp+74h+rcdst]
push    eax
push    ecx
call    sub_473df0
lea     ecx, [esp+7ch+rcsrc2]
lea     edx, [esp+7ch+rcdst]
add     esp, 10h
push    ecx
push    edx
lea     edx, [esp+74h+rcdst]
push    edx
call    ds:intersectrect
lea     ecx, [esp+6ch+var_30]
push    esi
push    ecx
lea     edx, [esp+74h+rcdst]
push    edx
call    sub_46c970
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 60h
retn
mov     eax, 13h
pop     edi
pop     esi
pop     ebx
add     esp, 60h
retn
sub     esp, 5ch
push    ebx
push    esi
mov     esi, [esp+64h+arg_0]
push    edi
mov     [esp+68h+var_5c], 1
push    ebp
mov     ebx, [esi+14h]
mov     eax, [esi+5ch]
mov     ecx, [esi+0ch]
add     eax, [ebx+22h]
lea     ebp, [eax+ecx+26h]
movzx   eax, bp
add     eax, 28h
cmp     eax, 0ffffh
jle     short loc_46c273
lea     eax, [esp+6ch+var_28]
push    28h
push    ebp
push    eax
call    _memcpy
mov     ecx, [esp+78h+var_1c]
add     esp, 0ch
and     ecx, 0ffffh
xor     eax, eax
mov     ax, word ptr [esp+6ch+var_1c+2]
jmp     short loc_46c27f
xor     ecx, ecx
xor     eax, eax
mov     cx, [ebp+0ch]
mov     ax, [ebp+0eh]
imul    ecx, eax
cmp     ecx, 4
jz      short loc_46c28c
cmp     ecx, 8
jnz     short loc_46c2a4
cmp     dword ptr [esi+99h], 0
jnz     short loc_46c2d8
mov     edi, 0bh
pop     ebp
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
cmp     dword ptr [esi+99h], 0
jnz     short loc_46c2d8
push    2
push    28h
call    sub_45b8f0
add     esp, 8
mov     [esi+99h], eax
test    eax, eax
jnz     short loc_46c2d0
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
mov     [esp+6ch+var_5c], 0
mov     eax, [esi+99h]
push    eax
call    ds:globallock
mov     edi, eax
push    28h
push    ebp
push    edi
add     ebp, 28h
call    _memcpy
lea     eax, [esp+78h+rcdst]
add     esp, 0ch
push    eax
push    offset dword_4ae5b0
push    esi
call    sub_46c040
movsx   eax, word ptr [ebx+12h]
mov     [esp+78h+var_38], eax
add     esp, 0ch
movsx   ecx, word ptr [ebx+14h]
mov     [esp+6ch+var_34], ecx
movsx   edx, word ptr [ebx+16h]
mov     [esp+6ch+var_30], edx
movsx   eax, word ptr [ebx+18h]
mov     [esp+6ch+var_2c], eax
movsx   ecx, word ptr [ebx+0ah]
mov     [esp+6ch+rcsrc2.left], ecx
push    0
movsx   edx, word ptr [ebx+0ch]
mov     [esp+70h+rcsrc2.top], edx
lea     edx, [esp+70h+rcsrc2]
movsx   eax, word ptr [ebx+0eh]
mov     [esp+70h+rcsrc2.right], eax
push    edx
movsx   ecx, word ptr [ebx+10h]
lea     eax, [esp+74h+var_38]
mov     [esp+74h+rcsrc2.bottom], ecx
lea     ecx, [esp+74h+rcdst]
push    eax
push    ecx
call    sub_473df0
lea     ecx, [esp+7ch+rcsrc2]
lea     edx, [esp+7ch+rcdst]
add     esp, 10h
push    ecx
push    edx
lea     edx, [esp+74h+rcdst]
push    edx
call    ds:intersectrect
lea     ecx, [esp+6ch+rcdst]
push    ebp
push    edi
push    ecx
call    sub_46c970
add     esp, 0ch
mov     edi, eax
mov     ecx, [esi+99h]
push    ecx
call    ds:globalunlock
cmp     [esp+6ch+var_5c], 0
jnz     short loc_46c3b5
mov     eax, [esi+99h]
push    eax
call    sub_45ba00
mov     dword ptr [esi+99h], 0
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
sub     esp, 70h
push    ebx
push    esi
mov     ebx, [esp+78h+arg_0]
push    edi
mov     edi, [ebx+14h]
mov     eax, [ebx+5ch]
add     eax, [ebx+0ch]
mov     ecx, [edi+32h]
test    ecx, ecx
jz      loc_46c4f5
lea     esi, [ecx+eax+36h]
push    30h
lea     eax, [esp+80h+var_30]
push    esi
push    eax
call    _memcpy
mov     eax, [esp+88h+var_30]
lea     ecx, [esp+88h+var_8]
add     esp, 0ch
lea     esi, [esi+eax+8]
push    ecx
push    0ffffffh
call    sub_40f070
lea     eax, [esp+84h+var_4]
add     esp, 8
push    eax
push    0
call    sub_40f070
lea     eax, [esp+84h+rcdst]
add     esp, 8
push    eax
push    offset dword_4ae5c0
push    ebx
call    sub_46c040
movsx   eax, word ptr [edi+16h]
mov     [esp+88h+var_40], eax
add     esp, 0ch
movsx   ecx, word ptr [edi+18h]
mov     [esp+7ch+var_3c], ecx
movsx   edx, word ptr [edi+1ah]
mov     [esp+7ch+var_38], edx
movsx   eax, word ptr [edi+1ch]
mov     [esp+7ch+var_34], eax
movsx   ecx, word ptr [edi+0eh]
mov     [esp+7ch+var_50], ecx
push    0
movsx   edx, word ptr [edi+10h]
mov     [esp+80h+var_4c], edx
lea     edx, [esp+80h+var_50]
movsx   eax, word ptr [edi+12h]
mov     [esp+80h+var_48], eax
push    edx
movsx   ecx, word ptr [edi+14h]
lea     eax, [esp+84h+var_40]
mov     [esp+84h+var_44], ecx
lea     ecx, [esp+84h+rcdst]
push    eax
push    ecx
call    sub_473df0
movsx   ecx, word ptr [edi+1eh]
mov     [esp+8ch+rcsrc2.left], ecx
add     esp, 10h
movsx   edx, word ptr [edi+20h]
mov     [esp+7ch+rcsrc2.top], edx
push    0
movsx   eax, word ptr [edi+22h]
lea     edx, [esp+80h+rcsrc2]
mov     [esp+80h+rcsrc2.right], eax
movsx   ecx, word ptr [edi+24h]
mov     [esp+80h+rcsrc2.bottom], ecx
push    edx
lea     eax, [esp+84h+var_50]
lea     ecx, [esp+84h+rcdst]
push    eax
push    ecx
call    sub_473df0
lea     ecx, [esp+8ch+rcsrc2]
lea     edx, [esp+8ch+rcdst]
add     esp, 10h
push    ecx
push    edx
lea     edx, [esp+84h+rcdst]
push    edx
call    ds:intersectrect
lea     ecx, [esp+7ch+var_30]
push    esi
lea     edx, [esp+80h+rcdst]
push    ecx
push    edx
call    sub_46c970
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, 13h
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+0ch+arg_0]
xor     ecx, ecx
mov     si, [edi+10h]
mov     eax, [edi+14h]
shl     esi, 10h
mov     cx, [eax+0ah]
or      esi, ecx
cmp     dword ptr [eax+2ah], 0ffffffffh
jz      short loc_46c576
push    esi
call    sub_470640
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_46c56b
push    ebx
call    ds:globallock
push    eax
push    edi
call    sub_46c680
add     esp, 8
mov     edi, eax
push    ebx
call    ds:globalunlock
push    0
push    esi
call    sub_470920
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     edi, 0fh
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     edi, 13h
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 2ch
push    ebx
push    esi
mov     esi, [esp+34h+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     di, [esi+10h]
mov     ebp, [esi+14h]
shl     edi, 10h
xor     eax, eax
mov     ax, [ebp+0ah]
or      edi, eax
cmp     dword ptr [ebp+2ah], 0ffffffffh
jz      loc_46c662
push    edi
call    sub_470640
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      loc_46c653
push    ebx
call    ds:globallock
mov     edx, [ebp+2eh]
mov     [esp+3ch+var_2c], eax
add     edx, eax
movzx   eax, dx
add     eax, 28h
cmp     eax, 0ffffh
jle     short loc_46c60c
lea     eax, [esp+3ch+var_28]
push    28h
push    edx
push    eax
call    _memcpy
mov     ecx, [esp+48h+var_1c]
add     esp, 0ch
and     ecx, 0ffffh
xor     eax, eax
mov     ax, word ptr [esp+3ch+var_1c+2]
jmp     short loc_46c618
xor     ecx, ecx
xor     eax, eax
mov     cx, [edx+0ch]
mov     ax, [edx+0eh]
imul    ecx, eax
cmp     ecx, 1
jnz     short loc_46c627
mov     esi, 0bh
jmp     short loc_46c637
mov     eax, [esp+3ch+var_2c]
push    eax
push    esi
call    sub_46c680
add     esp, 8
mov     esi, eax
push    ebx
call    ds:globalunlock
push    0
push    edi
call    sub_470920
add     esp, 8
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
mov     esi, 0fh
pop     ebp
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
mov     esi, 13h
pop     ebp
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
sub     esp, 60h
push    ebx
push    esi
mov     ebx, [esp+68h+arg_0]
push    edi
mov     edi, [ebx+14h]
mov     eax, [edi+2ah]
cmp     eax, 0ffffffffh
jz      loc_46c773
mov     esi, [esp+6ch+arg_4]
push    30h
add     esi, eax
lea     eax, [esp+70h+var_30]
push    esi
push    eax
call    _memcpy
mov     eax, [esp+78h+var_30]
lea     ecx, [esp+78h+var_8]
add     esp, 0ch
lea     esi, [esi+eax+8]
push    ecx
push    0ffffffh
call    sub_40f070
lea     eax, [esp+74h+var_4]
add     esp, 8
push    eax
push    0
call    sub_40f070
lea     eax, [esp+74h+rcdst]
add     esp, 8
push    eax
push    offset dword_4ae5b0
push    ebx
call    sub_46c040
movsx   eax, word ptr [edi+16h]
mov     [esp+78h+var_40], eax
add     esp, 0ch
movsx   ecx, word ptr [edi+18h]
mov     [esp+6ch+var_3c], ecx
movsx   edx, word ptr [edi+1ah]
mov     [esp+6ch+var_38], edx
movsx   eax, word ptr [edi+1ch]
mov     [esp+6ch+var_34], eax
movsx   ecx, word ptr [edi+0eh]
mov     [esp+6ch+rcsrc2.left], ecx
push    0
movsx   edx, word ptr [edi+10h]
mov     [esp+70h+rcsrc2.top], edx
lea     edx, [esp+70h+rcsrc2]
movsx   eax, word ptr [edi+12h]
mov     [esp+70h+rcsrc2.right], eax
push    edx
movsx   ecx, word ptr [edi+14h]
lea     eax, [esp+74h+var_40]
mov     [esp+74h+rcsrc2.bottom], ecx
lea     ecx, [esp+74h+rcdst]
push    eax
push    ecx
call    sub_473df0
lea     ecx, [esp+7ch+rcsrc2]
lea     edx, [esp+7ch+rcdst]
add     esp, 10h
push    ecx
push    edx
lea     edx, [esp+74h+rcdst]
push    edx
call    ds:intersectrect
lea     ecx, [esp+6ch+var_30]
push    esi
push    ecx
lea     edx, [esp+74h+rcdst]
push    edx
call    sub_46c970
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 60h
retn
mov     eax, 13h
pop     edi
pop     esi
pop     ebx
add     esp, 60h
retn
sub     esp, 64h
push    ebx
push    esi
mov     esi, [esp+6ch+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     di, [esi+10h]
mov     ebp, [esi+14h]
shl     edi, 10h
xor     eax, eax
mov     ax, [ebp+0ah]
or      edi, eax
push    edi
call    sub_470640
mov     [esp+78h+hmem], eax
add     esp, 4
test    eax, eax
jz      loc_46c95f
mov     [esp+74h+var_60], 1
push    eax
call    ds:globallock
mov     ebx, [ebp+2eh]
add     ebx, eax
movzx   eax, bx
add     eax, 28h
cmp     eax, 0ffffh
jle     short loc_46c7f8
lea     eax, [esp+74h+var_28]
push    28h
push    ebx
push    eax
call    _memcpy
mov     ecx, [esp+80h+var_1c]
add     esp, 0ch
and     ecx, 0ffffh
xor     eax, eax
mov     ax, word ptr [esp+74h+var_1c+2]
jmp     short loc_46c804
xor     ecx, ecx
xor     eax, eax
mov     cx, [ebx+0ch]
mov     ax, [ebx+0eh]
imul    ecx, eax
cmp     ecx, 4
jz      short loc_46c811
cmp     ecx, 8
jnz     short loc_46c82a
cmp     dword ptr [esi+99h], 0
jnz     short loc_46c85e
mov     ebx, 0bh
mov     ebp, ds:globalunlock
jmp     loc_46c943
cmp     dword ptr [esi+99h], 0
jnz     short loc_46c85e
push    2
push    28h
call    sub_45b8f0
add     esp, 8
mov     [esi+99h], eax
test    eax, eax
jnz     short loc_46c856
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     [esp+74h+var_60], 0
mov     eax, [esi+99h]
push    eax
call    ds:globallock
mov     [esp+74h+var_5c], eax
push    28h
push    ebx
push    eax
add     ebx, 28h
call    _memcpy
lea     eax, [esp+80h+rcdst]
add     esp, 0ch
push    eax
push    offset dword_4ae5b0
push    esi
call    sub_46c040
movsx   eax, word ptr [ebp+16h]
mov     [esp+80h+var_38], eax
add     esp, 0ch
movsx   ecx, word ptr [ebp+18h]
mov     [esp+74h+var_34], ecx
movsx   edx, word ptr [ebp+1ah]
mov     [esp+74h+var_30], edx
movsx   eax, word ptr [ebp+1ch]
mov     [esp+74h+var_2c], eax
movsx   ecx, word ptr [ebp+0eh]
mov     [esp+74h+rcsrc2.left], ecx
push    0
movsx   edx, word ptr [ebp+10h]
mov     [esp+78h+rcsrc2.top], edx
lea     edx, [esp+78h+rcsrc2]
movsx   eax, word ptr [ebp+12h]
mov     [esp+78h+rcsrc2.right], eax
push    edx
movsx   ecx, word ptr [ebp+14h]
lea     eax, [esp+7ch+var_38]
mov     [esp+7ch+rcsrc2.bottom], ecx
lea     ecx, [esp+7ch+rcdst]
push    eax
push    ecx
call    sub_473df0
lea     ecx, [esp+84h+rcsrc2]
lea     edx, [esp+84h+rcdst]
add     esp, 10h
push    ecx
push    edx
lea     edx, [esp+7ch+rcdst]
push    edx
call    ds:intersectrect
mov     ecx, [esp+74h+var_5c]
push    ebx
lea     edx, [esp+78h+rcdst]
push    ecx
push    edx
call    sub_46c970
add     esp, 0ch
mov     ebx, eax
mov     ecx, [esi+99h]
mov     ebp, ds:globalunlock
push    ecx
call    ebp
cmp     [esp+74h+var_60], 0
jnz     short loc_46c943
mov     eax, [esi+99h]
push    eax
call    sub_45ba00
mov     dword ptr [esi+99h], 0
add     esp, 4
mov     eax, [esp+74h+hmem]
push    eax
call    ebp
push    0
push    edi
call    sub_470920
add     esp, 8
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     ebx, 0fh
pop     ebp
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 64h
retn
mov     ecx, [esp+arg_4]
mov     eax, [ecx+10h]
cmp     eax, 4
ja      short def_46c97c
jmp     ds:jpt_46c97c[eax*4]
mov     eax, 0bh
retn
mov     eax, [esp+arg_8]
push    eax
push    ecx
mov     ecx, [esp+8+arg_0]
push    ecx
call    sub_46ca10
add     esp, 0ch
retn
mov     eax, [esp+arg_8]
push    eax
push    ecx
mov     ecx, [esp+8+arg_0]
push    ecx
call    sub_46cbe0
add     esp, 0ch
retn
mov     eax, [esp+arg_8]
push    eax
push    ecx
mov     ecx, [esp+8+arg_0]
push    ecx
call    sub_46cd20
add     esp, 0ch
retn
mov     eax, [esp+arg_8]
push    eax
push    ecx
mov     ecx, [esp+8+arg_0]
push    ecx
call    sub_46d0e0
add     esp, 0ch
retn
mov     eax, [esp+arg_8]
push    eax
push    ecx
mov     ecx, [esp+8+arg_0]
push    ecx
call    sub_46cf10
add     esp, 0ch
retn
sub     esp, 10h
xor     ecx, ecx
mov     eax, [esp+10h+arg_4]
push    ebx
mov     cx, [eax+0eh]
push    esi
push    edi
mov     eax, [eax+4]
mov     [esp+1ch+var_10], ecx
push    ebp
imul    eax, ecx
mov     ebp, [esp+20h+arg_4]
add     eax, 1fh
sar     eax, 3
add     ebp, 28h
and     eax, 0fffffffch
mov     edx, [esp+20h+arg_0]
mov     [esp+20h+var_4], eax
mov     ecx, [edx+4]
mov     [esp+20h+var_c], ecx
cmp     [edx+0ch], ecx
jle     loc_46cb9d
mov     ecx, [edx+8]
mov     [esp+20h+var_8], ecx
mov     eax, [esp+20h+arg_4]
mov     edi, [esp+20h+arg_8]
mov     edx, [esp+20h+arg_0]
mov     ecx, [eax+8]
sub     ecx, [esp+20h+var_c]
mov     eax, [edx]
dec     ecx
imul    ecx, [esp+20h+var_4]
add     edi, ecx
cmp     [esp+20h+var_8], eax
jle     loc_46cb88
lea     ebx, [eax+eax*2]
lea     esi, [ebx+edi]
mov     edx, [esp+20h+var_10]
dec     edx
cmp     edx, 17h
ja      def_46ca9d
xor     ecx, ecx
mov     cl, ds:byte_46cbc8[edx]
jmp     ds:jpt_46ca9d[ecx*4]
mov     ecx, eax
mov     ebx, 80h
sar     ecx, 3
mov     dl, [ecx+edi]
mov     ecx, eax
and     cl, 7
sar     ebx, cl
and     dl, bl
cmp     dl, 1
sbb     ecx, ecx
cmp     dword ptr [ebp+ecx*4+4], 0ffffffh
jz      def_46ca9d
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, eax
sar     ecx, 1
add     ecx, edi
test    al, 1
mov     dl, [ecx]
jz      short loc_46caec
and     dl, 0fh
jmp     short loc_46caef
shr     dl, 4
xor     ecx, ecx
mov     cl, dl
xor     edx, edx
mov     dl, cl
cmp     dword ptr [ebp+edx*4+0], 0ffffffh
jz      short def_46ca9d
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     ecx, ecx
mov     cl, [eax+edi]
cmp     dword ptr [ebp+ecx*4+0], 0ffffffh
jz      short def_46ca9d
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
movzx   ecx, si
add     ecx, 4
cmp     ecx, 0ffffh
jbe     short loc_46cb65
xor     ecx, ecx
xor     edx, edx
mov     cl, [esi+2]
mov     dl, [esi+1]
shl     ecx, 10h
shl     edx, 8
or      ecx, edx
xor     edx, edx
mov     dl, [esi]
or      ecx, edx
cmp     ecx, 0ffffffh
jz      short def_46ca9d
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ebp, esi
mov     ecx, [esi]
and     ecx, 0ffffffh
cmp     ecx, 0ffffffh
jnz     short loc_46cba7
mov     edx, [esp+20h+arg_0]
add     esi, 3
inc     eax
cmp     [edx+8], eax
jg      loc_46ca87
mov     edx, [esp+20h+arg_0]
inc     [esp+20h+var_c]
mov     eax, [edx+0ch]
cmp     eax, [esp+20h+var_c]
jg      loc_46ca5a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, [esp+arg_4]
sub     esp, 4
xor     eax, eax
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [ecx+8]
lea     ebp, [ecx+28h]
dec     edi
mov     ecx, [esp+14h+arg_0]
mov     esi, [esp+14h+arg_8]
mov     dl, [esi]
mov     bl, [esi+1]
inc     esi
mov     [esp+14h+var_1], bl
inc     esi
test    dl, dl
jnz     loc_46cc99
xor     edx, edx
mov     dl, bl
test    edx, edx
jz      short loc_46cc74
cmp     edx, 1
jz      loc_46ccf8
cmp     edx, 2
jz      short loc_46cc81
cmp     [ecx+4], edi
jg      short loc_46cc66
cmp     [ecx+0ch], edi
jle     short loc_46cc66
mov     dl, bl
dec     dl
test    bl, bl
jz      short loc_46cc5c
cmp     eax, [ecx]
jl      short loc_46cc52
cmp     [ecx+8], eax
jle     short loc_46cc52
xor     ebx, ebx
mov     bl, [esi]
cmp     dword ptr [ebp+ebx*4+0], 0ffffffh
jnz     loc_46cce1
inc     esi
inc     eax
mov     bl, dl
dec     dl
test    bl, bl
jnz     short loc_46cc37
test    [esp+14h+var_1], 1
jz      short loc_46cbfc
inc     esi
jmp     short loc_46cbfc
add     eax, edx
test    [esp+14h+var_1], 1
jz      short loc_46cc70
inc     edx
add     esi, edx
jmp     short loc_46cbfc
dec     edi
cmp     [ecx+4], edi
jg      short loc_46ccee
xor     eax, eax
jmp     loc_46cbfc
xor     edx, edx
mov     dl, [esi]
inc     esi
sub     edi, edx
cmp     [ecx+4], edi
jg      short loc_46cd02
xor     edx, edx
mov     dl, [esi]
inc     esi
add     eax, edx
jmp     loc_46cbfc
cmp     [ecx+4], edi
jg      short loc_46ccd6
cmp     [ecx+0ch], edi
jle     short loc_46ccd6
xor     ebx, ebx
mov     bl, [esp+14h+var_1]
cmp     dword ptr [ebp+ebx*4+0], 0ffffffh
jz      short loc_46ccd6
mov     bl, dl
dec     dl
test    bl, bl
jz      loc_46cbfc
cmp     eax, [ecx]
jl      short loc_46ccc8
cmp     [ecx+8], eax
jg      short loc_46cd0c
inc     eax
mov     bl, dl
dec     dl
test    bl, bl
jnz     short loc_46ccbf
jmp     loc_46cbfc
xor     ebx, ebx
mov     bl, dl
add     eax, ebx
jmp     loc_46cbfc
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
sub     esp, 10h
push    ebx
lea     edx, [eax+28h]
mov     [esp+14h+var_c], edx
push    esi
mov     esi, [esp+18h+arg_8]
push    edi
push    ebp
xor     edi, edi
mov     ebp, [eax+8]
mov     eax, [esp+20h+arg_0]
dec     ebp
mov     bl, [esi]
mov     cl, [esi+1]
inc     esi
mov     [esp+20h+var_d], cl
inc     esi
test    bl, bl
jnz     loc_46ce27
xor     ecx, ecx
mov     cl, [esp+20h+var_d]
test    ecx, ecx
jz      loc_46cdfa
cmp     ecx, 1
jz      loc_46cee6
cmp     ecx, 2
jz      loc_46ce0b
cmp     [eax+4], ebp
jg      short loc_46cde5
cmp     [eax+0ch], ebp
jle     short loc_46cde5
xor     cl, cl
cmp     [esp+20h+var_d], cl
jz      short loc_46cdc5
cmp     edi, [eax]
jl      short loc_46cdb6
cmp     [eax+8], edi
jle     short loc_46cdb6
test    cl, 1
mov     bl, [esi]
jz      short loc_46cd9a
and     bl, 0fh
jmp     short loc_46cd9d
shr     bl, 4
xor     edx, edx
mov     dl, bl
xor     ebx, ebx
mov     bl, dl
mov     edx, [esp+20h+var_c]
cmp     dword ptr [edx+ebx*4], 0ffffffh
jnz     loc_46cecf
test    cl, 1
jz      short loc_46cdbc
inc     esi
inc     edi
inc     cl
cmp     [esp+20h+var_d], cl
ja      short loc_46cd85
test    [esp+20h+var_d], 2
jz      short loc_46cdd2
inc     esi
jmp     loc_46cd40
test    [esp+20h+var_d], 1
jz      loc_46cd40
add     esi, 2
jmp     loc_46cd40
add     edi, ecx
add     ecx, 3
and     ecx, 1fch
shr     ecx, 1
add     esi, ecx
jmp     loc_46cd40
dec     ebp
cmp     [eax+4], ebp
jg      loc_46cedc
xor     edi, edi
jmp     loc_46cd40
xor     ecx, ecx
mov     cl, [esi]
inc     esi
sub     ebp, ecx
cmp     [eax+4], ebp
jg      loc_46cef0
xor     ecx, ecx
mov     cl, [esi]
inc     esi
add     edi, ecx
jmp     loc_46cd40
mov     cl, [esp+20h+var_d]
mov     edx, [esp+20h+var_c]
mov     [esp+20h+var_4], 0
and     cl, 0fh
mov     byte ptr [esp+20h+var_4], cl
mov     ecx, [esp+20h+var_4]
mov     ecx, [edx+ecx*4]
sub     ecx, 0ffffffh
mov     [esp+20h+var_4], 0
cmp     ecx, 1
sbb     ecx, ecx
inc     ecx
mov     [esp+20h+var_8], ecx
mov     cl, [esp+20h+var_d]
shr     cl, 4
mov     byte ptr [esp+20h+var_4], cl
mov     ecx, [esp+20h+var_4]
mov     ecx, [edx+ecx*4]
sub     ecx, 0ffffffh
cmp     ecx, 1
sbb     ecx, ecx
inc     ecx
cmp     [eax+4], ebp
mov     [esp+20h+var_4], ecx
jg      short loc_46cec4
cmp     [eax+0ch], ebp
jle     short loc_46cec4
cmp     [esp+20h+var_8], 0
jnz     short loc_46ce94
test    ecx, ecx
jz      short loc_46cec4
xor     cl, cl
test    bl, bl
jz      loc_46cd40
cmp     edi, [eax]
jl      short loc_46ceb8
cmp     [eax+8], edi
jle     short loc_46ceb8
test    cl, 1
mov     edx, [esp+20h+var_8]
jnz     short loc_46ceb4
mov     edx, [esp+20h+var_4]
test    edx, edx
jnz     short loc_46cefa
inc     edi
inc     cl
cmp     bl, cl
ja      short loc_46ce9e
jmp     loc_46cd40
xor     ecx, ecx
mov     cl, bl
add     edi, ecx
jmp     loc_46cd40
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     edx, [esp+arg_4]
sub     esp, 0ch
xor     eax, eax
push    ebx
push    esi
lea     ecx, [edx+28h]
push    edi
mov     esi, [edx+8]
push    ebp
dec     esi
mov     edx, [edx+4]
mov     edi, [esp+1ch+arg_8]
mov     [esp+1ch+var_4], esi
mov     [esp+1ch+var_8], edx
mov     esi, [esp+1ch+arg_0]
mov     dl, [edi]
inc     edi
inc     edi
mov     [esp+1ch+var_9], dl
cmp     [esp+1ch+var_9], 0
mov     dl, [edi-1]
mov     [esp+1ch+var_a], dl
jnz     loc_46d02b
xor     edx, edx
mov     dl, [esp+1ch+var_a]
test    edx, edx
jz      loc_46cff0
cmp     edx, 1
jz      loc_46d0b1
cmp     edx, 2
jz      loc_46d008
mov     ebx, [esp+1ch+var_4]
cmp     [esi+4], ebx
jg      short loc_46cfde
cmp     [esi+0ch], ebx
jle     short loc_46cfde
dec     dl
cmp     [esp+1ch+var_a], 0
mov     [esp+1ch+var_9], dl
jz      short loc_46cfcd
mov     dl, 80h
xor     ebp, ebp
cmp     [esp+1ch+var_8], eax
jle     short loc_46cfc0
mov     bl, [edi]
and     bl, dl
cmp     bl, 1
sbb     ebx, ebx
inc     ebx
cmp     [esi], eax
jg      short loc_46cfb6
cmp     [esi+8], eax
jle     short loc_46cfb6
cmp     dword ptr [ecx+ebx*4], 0ffffffh
jnz     loc_46d09a
shr     dl, 1
inc     eax
inc     ebp
cmp     ebp, 8
jl      short loc_46cf90
inc     edi
mov     dl, [esp+1ch+var_9]
dec     [esp+1ch+var_9]
test    dl, dl
jnz     short loc_46cf8c
test    [esp+1ch+var_a], 1
jz      loc_46cf37
inc     edi
jmp     loc_46cf37
test    [esp+1ch+var_a], 1
lea     eax, [eax+edx*8]
jz      short loc_46cfe9
inc     edx
add     edi, edx
jmp     loc_46cf37
dec     [esp+1ch+var_4]
mov     ebx, [esp+1ch+var_4]
cmp     [esi+4], ebx
jg      loc_46d0a7
xor     eax, eax
jmp     loc_46cf37
xor     edx, edx
mov     dl, [edi]
inc     edi
sub     [esp+1ch+var_4], edx
mov     ebx, [esp+1ch+var_4]
cmp     [esi+4], ebx
jg      loc_46d0bb
xor     edx, edx
mov     dl, [edi]
inc     edi
lea     eax, [eax+edx*8]
jmp     loc_46cf37
mov     ebx, [esp+1ch+var_4]
cmp     [esi+4], ebx
jg      short loc_46d08c
cmp     [esi+0ch], ebx
jle     short loc_46d08c
mov     dl, [esp+1ch+var_9]
dec     [esp+1ch+var_9]
test    dl, dl
jz      loc_46cf37
mov     dl, 80h
xor     ebp, ebp
cmp     [esp+1ch+var_8], eax
jle     short loc_46d07b
mov     bl, [esp+1ch+var_a]
and     bl, dl
cmp     bl, 1
sbb     ebx, ebx
inc     ebx
cmp     [esi], eax
jg      short loc_46d071
cmp     [esi+8], eax
jle     short loc_46d071
cmp     dword ptr [ecx+ebx*4], 0ffffffh
jnz     short loc_46d0c5
shr     dl, 1
inc     eax
inc     ebp
cmp     ebp, 8
jl      short loc_46d04d
mov     dl, [esp+1ch+var_9]
dec     [esp+1ch+var_9]
test    dl, dl
jnz     short loc_46d049
jmp     loc_46cf37
xor     edx, edx
mov     dl, [esp+1ch+var_9]
lea     eax, [eax+edx*8]
jmp     loc_46cf37
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
sub     esp, 14h
push    ebx
mov     ecx, [eax+8]
push    esi
lea     ebx, [eax+28h]
push    edi
xor     esi, esi
push    ebp
dec     ecx
mov     eax, [eax+4]
mov     edi, [esp+24h+arg_0]
mov     ebp, [esp+24h+arg_8]
mov     [esp+24h+var_4], ecx
mov     [esp+24h+var_c], eax
mov     al, [ebp+0]
inc     ebp
inc     ebp
mov     byte ptr [esp+24h+var_10], al
cmp     byte ptr [esp+24h+var_10], 0
mov     al, [ebp-1]
mov     [esp+24h+var_12], al
jnz     loc_46d240
xor     eax, eax
mov     al, [esp+24h+var_12]
test    eax, eax
jz      loc_46d203
cmp     eax, 1
jz      loc_46d2e6
cmp     eax, 2
jz      loc_46d21b
mov     ecx, [esp+24h+var_4]
cmp     [edi+4], ecx
jg      loc_46d1ee
cmp     [edi+0ch], ecx
jle     loc_46d1ee
mov     [esp+24h+var_11], 0
test    al, al
jz      short loc_46d1ce
mov     al, [esp+24h+var_11]
and     al, 1
mov     byte ptr [esp+24h+var_8], al
cmp     al, 1
sbb     al, al
xor     cl, cl
and     al, 78h
add     al, 8
cmp     [esp+24h+var_c], esi
jle     short loc_46d1b8
mov     dl, [ebp+0]
and     dl, al
cmp     dl, 1
sbb     dl, dl
inc     dl
cmp     [edi], esi
jg      short loc_46d1ad
cmp     [edi+8], esi
jle     short loc_46d1ad
mov     [esp+24h+var_10], 0
mov     byte ptr [esp+24h+var_10], dl
mov     edx, [esp+24h+var_10]
cmp     dword ptr [ebx+edx*4], 0ffffffh
jnz     loc_46d2cf
shr     al, 1
inc     esi
inc     cl
cmp     cl, 4
jb      short loc_46d175
cmp     byte ptr [esp+24h+var_8], 0
jz      short loc_46d1c0
inc     ebp
mov     al, [esp+24h+var_12]
inc     [esp+24h+var_11]
cmp     al, [esp+24h+var_11]
ja      short loc_46d161
test    [esp+24h+var_12], 2
jz      short loc_46d1db
inc     ebp
jmp     loc_46d107
test    [esp+24h+var_12], 1
jz      loc_46d107
add     ebp, 2
jmp     loc_46d107
lea     esi, [esi+eax*4]
add     eax, 3
and     eax, 1fch
shr     eax, 1
add     ebp, eax
jmp     loc_46d107
dec     [esp+24h+var_4]
mov     ecx, [esp+24h+var_4]
cmp     [edi+4], ecx
jg      loc_46d2dc
xor     esi, esi
jmp     loc_46d107
xor     eax, eax
mov     al, [ebp+0]
inc     ebp
sub     [esp+24h+var_4], eax
mov     ecx, [esp+24h+var_4]
cmp     [edi+4], ecx
jg      loc_46d2f0
xor     eax, eax
mov     al, [ebp+0]
inc     ebp
lea     esi, [esi+eax*4]
jmp     loc_46d107
mov     ecx, [esp+24h+var_4]
cmp     [edi+4], ecx
jg      short loc_46d2c1
cmp     [edi+0ch], ecx
jle     short loc_46d2c1
mov     [esp+24h+var_11], 0
cmp     byte ptr [esp+24h+var_10], 0
jz      loc_46d107
mov     al, [esp+24h+var_11]
and     al, 1
cmp     al, 1
sbb     al, al
xor     cl, cl
and     al, 78h
add     al, 8
cmp     [esp+24h+var_c], esi
jle     short loc_46d2ae
mov     dl, al
and     dl, [esp+24h+var_12]
cmp     dl, 1
sbb     dl, dl
inc     dl
cmp     [edi], esi
jg      short loc_46d2a3
cmp     [edi+8], esi
jle     short loc_46d2a3
mov     [esp+24h+var_8], 0
mov     byte ptr [esp+24h+var_8], dl
mov     edx, [esp+24h+var_8]
cmp     dword ptr [ebx+edx*4], 0ffffffh
jnz     short loc_46d2fa
shr     al, 1
inc     esi
inc     cl
cmp     cl, 4
jb      short loc_46d26e
inc     [esp+24h+var_11]
mov     al, [esp+24h+var_11]
cmp     byte ptr [esp+24h+var_10], al
ja      short loc_46d25e
jmp     loc_46d107
xor     eax, eax
mov     al, byte ptr [esp+24h+var_10]
lea     esi, [esi+eax*4]
jmp     loc_46d107
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, [esp+hmem]
push    esi
mov     esi, [esp+4+arg_8]
push    edi
xor     edi, edi
mov     [esi+8], eax
test    eax, eax
jz      short loc_46d376
push    eax
call    ds:globallock
mov     [esi+0ch], eax
mov     [esi], edi
mov     eax, [esp+8+arg_4]
mov     ecx, [esi+0ch]
mov     dword ptr [esi+4], 1
mov     [esi+10h], eax
mov     edx, [ecx+12h]
mov     [esi+58h], edx
mov     eax, [ecx+0eh]
mov     [esi+50h], eax
movsx   edx, word ptr [ecx+1ah]
mov     [esi+40h], edx
movsx   eax, word ptr [ecx+1ch]
mov     [esi+44h], eax
movsx   edx, word ptr [ecx+1eh]
mov     eax, edi
mov     [esi+48h], edx
movsx   ecx, word ptr [ecx+20h]
mov     [esi+4ch], ecx
mov     [esi+5ch], edi
mov     [esi+60h], edi
mov     [esi+64h], edi
pop     edi
pop     esi
retn
mov     edi, 2
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 30h
push    ebx
push    esi
mov     ebx, [esp+38h+arg_0]
push    edi
cmp     dword ptr [ebx+4], 0
jnz     loc_46d46e
lea     eax, [esp+3ch+var_30]
lea     ecx, [ebx+18h]
push    eax
push    ecx
call    sub_446030
add     esp, 8
mov     [ebx+8], eax
test    eax, eax
jz      loc_46d466
mov     eax, [esp+3ch+var_30]
push    offset apig
lea     ecx, [esp+40h+string1+2]
mov     esi, ds:lstrcpya
push    ecx
mov     [ebx+5ch], eax
mov     word ptr [esp+44h+string1], 0
mov     [ebx+58h], eax
call    esi
lea     ecx, [esp+3ch+var_26]
push    offset awin
push    ecx
call    esi
lea     eax, [esp+3ch+var_22]
push    offset a001
push    eax
call    esi
mov     eax, [ebx+50h]
mov     ecx, [ebx+5ch]
mov     edx, [ebx+3ch]
mov     [esp+3ch+var_1e], eax
mov     eax, [ebx+40h]
mov     [esp+3ch+var_1a], ecx
mov     ecx, [ebx+44h]
mov     [esp+3ch+var_16], edx
mov     word ptr [esp+3ch+var_12], ax
mov     edx, [ebx+48h]
mov     word ptr [esp+3ch+var_12+2], cx
mov     eax, [ebx+4ch]
mov     word ptr [esp+3ch+var_e], dx
mov     word ptr [esp+3ch+var_e+2], ax
mov     eax, [ebx+8]
mov     esi, [esp+3ch+var_12]
mov     edx, [esp+3ch+var_e]
mov     [esp+3ch+var_a], esi
push    eax
mov     [esp+40h+var_6], edx
call    ds:globallock
lea     esi, [esp+3ch+string1]
mov     edi, eax
mov     ecx, 0ah
mov     [ebx+0ch], eax
rep movsd
movsw
mov     ecx, [ebx+8]
push    ecx
call    ds:globalunlock
mov     ecx, [ebx+8]
mov     edx, [ebx+10h]
mov     dword ptr [esp+3ch+string1], ecx
mov     [esp+14h], edx
jmp     short loc_46d486
xor     eax, eax
mov     dword ptr [esp+3ch+string1], eax
jmp     short loc_46d482
mov     eax, [ebx+8]
push    eax
call    ds:globalunlock
mov     ecx, [ebx+8]
mov     eax, [ebx+10h]
mov     dword ptr [esp+3ch+string1], ecx
mov     [esp+14h], eax
mov     eax, dword ptr [esp+3ch+string1]
mov     edx, [esp+14h]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
push    ebx
xor     edx, edx
push    esi
mov     ecx, 1
push    edi
push    ebp
mov     edi, [esp+10h+arg_0]
mov     [edi+4], cx
mov     [edi], dl
mov     eax, 0ffffffh
mov     [edi+1], cl
mov     [edi+2], dl
mov     [edi+3], dl
lea     ebp, [edi+12h]
mov     [edi+6], edx
mov     [edi+0ah], eax
mov     [edi+0eh], edx
mov     esi, dword_4add88
mov     ebx, dword_4add8c
mov     [edi+1ah], cx
mov     [ebp+0], esi
mov     [edi+1ch], cx
mov     [ebp+4], ebx
mov     [edi+1eh], cx
lea     esi, [edi+28h]
mov     [edi+20h], edx
mov     [edi+24h], eax
mov     eax, dword_4add88
mov     ebx, dword_4add8c
mov     [edi+34h], dx
pop     ebp
mov     [edi+36h], dx
mov     [esi], eax
mov     [esi+4], ebx
mov     [edi+30h], edx
pop     edi
pop     esi
pop     ebx
retn
push    offset sub_422bb0
call    sub_46af70
add     esp, 4
push    42h
push    400h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a8b1c, eax
test    eax, eax
jnz     short loc_46d562
push    96h
mov     eax, off_4ad1e8
push    offset apigutl
push    eax
call    sub_480570
add     esp, 0ch
mov     eax, ds:dword_4a8b1c
push    eax
mov     ds:dword_4a8b1c, eax
call    ds:globallock
push    eax
mov     ds:dword_4a8b10, eax
call    sub_46aeb0
add     esp, 4
mov     eax, ds:dword_4a8b1c
push    eax
call    ds:globalunlock
mov     ds:dword_4a8b10, 0
call    sub_46e9b0
call    sub_46b730
jmp     loc_46ea70
call    sub_469c80
call    sub_46ea60
call    sub_46b820
call    sub_46eb20
mov     eax, ds:dword_4a8b1c
push    eax
call    sub_45ba00
add     esp, 4
retn
push    esi
mov     esi, [esp+4+hmem]
push    esi
call    ds:globallock
test    eax, eax
jz      short loc_46d616
mov     edx, [esp+4+arg_8]
movsx   ecx, word ptr [eax+22h]
mov     [edx], ecx
push    esi
movsx   ecx, word ptr [eax+24h]
mov     [edx+4], ecx
movsx   ecx, word ptr [eax+26h]
mov     [edx+8], ecx
movsx   eax, word ptr [eax+28h]
mov     [edx+0ch], eax
call    ds:globalunlock
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     ebx, [eax+5ch]
push    ebp
mov     edi, [eax+14h]
mov     ebp, [eax+0ch]
mov     esi, [eax+6ch]
mov     eax, [esi+8]
push    eax
call    sub_408fc0
mov     [esp+28h+var_14], eax
add     esp, 4
mov     eax, [edi+2]
lea     ecx, [ebx+ebp+0eh]
sub     eax, 0eh
push    eax
push    ecx
call    sub_45b910
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jnz     short loc_46d66e
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, [esp+24h+var_14]
push    0
shr     eax, 10h
push    eax
push    ebx
call    sub_4182e0
add     esp, 0ch
mov     edi, eax
push    ebx
call    sub_45ba00
add     esp, 4
test    edi, edi
jnz     short loc_46d69d
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, [esi+0ch]
mov     ecx, [esp+24h+var_14]
push    eax
push    ecx
push    edi
call    sub_41a7a0
lea     ecx, [esp+30h+var_10]
add     esp, 0ch
mov     edx, [esi]
push    0
push    0
push    0
push    ecx
push    edx
push    edi
call    sub_414e80
add     esp, 18h
mov     ecx, [esi]
push    0
push    ecx
push    edi
call    sub_414e30
add     esp, 0ch
push    edi
call    sub_413620
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_46d700
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 88h
push    ebx
mov     edx, [eax+5ch]
push    esi
mov     ebx, [eax+14h]
push    edi
mov     esi, [eax+6ch]
lea     edi, [esp+94h+var_78]
push    ebp
mov     ebp, [eax+0ch]
mov     ecx, 1dh
xor     eax, eax
rep stosd
stosw
mov     eax, [ebx+2]
lea     ecx, [edx+ebp+0eh]
sub     eax, 0eh
push    eax
push    ecx
call    sub_45b910
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_46d753
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 88h
retn
lea     eax, [esp+98h+var_78]
push    eax
push    edi
call    sub_464290
add     esp, 8
push    edi
call    sub_45ba00
add     esp, 4
cmp     [esp+98h+var_16], 0
jnz     short loc_46d784
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 88h
retn
movsx   eax, word ptr [ebx+6]
mov     [esp+98h+var_88], eax
movsx   ecx, word ptr [ebx+8]
mov     [esp+98h+var_84], ecx
lea     ecx, [esp+98h+var_88]
movsx   edx, word ptr [ebx+0ah]
mov     [esp+98h+var_80], edx
push    ecx
movsx   eax, word ptr [ebx+0ch]
mov     [esp+9ch+var_7c], eax
lea     eax, [esp+9ch+var_78]
mov     edx, [esi]
push    edx
push    eax
call    sub_466490
lea     ecx, [esp+0a4h+var_78]
add     esp, 0ch
push    ecx
call    sub_466870
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 88h
retn
mov     edx, [esp+arg_8]
sub     esp, 40h
mov     eax, [esp+40h+arg_10]
push    esi
test    ax, ax
push    edi
mov     esi, [esp+48h+arg_c]
mov     [esp+48h+var_40], edx
mov     [esp+48h+var_3c], esi
mov     [esp+48h+var_38], eax
jz      short loc_46d80c
mov     eax, [esp+48h+arg_14]
mov     [esp+48h+var_34], eax
jmp     short loc_46d814
mov     [esp+48h+var_34], 2
lea     edi, [esp+48h+var_30]
xor     eax, eax
mov     ecx, 0ch
rep stosd
mov     eax, [esp+48h+arg_0]
mov     ecx, [esp+48h+arg_4]
mov     [esp+48h+var_30], edx
mov     [esp+48h+var_2c], esi
mov     edx, [esp+48h+arg_18]
mov     [esp+48h+var_28], eax
lea     eax, [esp+48h+var_40]
mov     [esp+48h+var_24], ecx
lea     ecx, [esp+48h+var_30]
mov     [esp+48h+var_20], edx
mov     [esp+48h+var_4], eax
push    ecx
mov     [esp+4ch+var_10], offset sub_46d620
mov     [esp+4ch+var_c], offset sub_46d6f0
call    sub_469ca0
add     esp, 4
pop     edi
pop     esi
add     esp, 40h
retn
sub     esp, 8
push    esi
push    edi
mov     esi, [esp+10h+arg_0]
mov     eax, [esi+4]
test    eax, eax
jz      short loc_46d891
push    eax
call    sub_4535a0
mov     [esp+14h+x], eax
mov     [esp+14h+y], edx
add     esp, 4
push    esi
call    sub_46d8c0
add     esp, 4
mov     edi, eax
mov     eax, [esi+4]
test    eax, eax
jz      short loc_46d8b6
mov     ecx, [esp+10h+x]
mov     edx, [esp+10h+y]
push    edx
push    ecx
push    eax
call    sub_453580
add     esp, 0ch
mov     eax, edi
pop     edi
pop     esi
add     esp, 8
retn
sub     esp, 130h
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+13ch+arg_0]
push    ebp
test    byte ptr [esi+28h], 1
mov     ebp, [esi+8]
jz      short loc_46d8df
mov     ebx, [esi+24h]
lea     eax, [esp+140h+var_120]
push    eax
call    sub_46f3b0
add     esp, 4
test    eax, eax
jnz     short loc_46d900
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
lea     eax, [esp+140h+var_d0]
lea     ecx, [esp+140h+var_120]
push    eax
mov     edx, [esi]
push    ecx
push    0
push    edx
call    sub_408640
add     esp, 10h
test    eax, eax
jz      loc_46d9ca
mov     ecx, [esi+4]
test    ecx, ecx
jz      short loc_46d982
test    ebp, ebp
jnz     short loc_46d931
lea     ebp, [esp+140h+var_a9]
mov     eax, [esp+140h+var_a9]
sub     eax, [ebp+0]
mov     [esp+140h+x], eax
mov     eax, [esp+140h+var_a5]
sub     eax, [ebp+4]
mov     [esp+140h+var_12c], eax
push    eax
mov     edi, [esp+144h+x]
push    edi
push    ecx
call    sub_4535c0
lea     eax, [esp+14ch+var_120]
lea     ecx, [esp+14ch+var_d0]
add     esp, 0ch
mov     edx, [esi+24h]
push    eax
push    ecx
push    edx
mov     eax, [esi+10h]
push    eax
mov     ecx, [esi+0ch]
push    ecx
mov     edx, [esi+4]
push    edx
call    sub_46f030
add     esp, 18h
mov     edi, eax
jmp     short loc_46d98d
mov     eax, [esp+140h+var_95]
xor     edi, edi
sub     [ebx], eax
lea     eax, [esp+140h+var_120]
lea     ecx, [esp+140h+var_d0]
push    eax
push    ecx
call    sub_4086c0
add     esp, 8
cmp     edi, 0ch
jnz     loc_46dc56
mov     eax, [esp+140h+x]
neg     eax
mov     ecx, [esi+4]
mov     [esp+140h+var_128], eax
mov     eax, [esp+140h+var_12c]
mov     edx, [esp+140h+var_128]
neg     eax
push    eax
push    edx
push    ecx
call    sub_4535c0
add     esp, 0ch
test    byte ptr [esi+28h], 1
jz      short loc_46d9ef
mov     eax, [esi]
push    eax
call    sub_470610
add     esp, 4
mov     ecx, [ebx]
cmp     eax, ecx
jle     short loc_46d9eb
mov     edi, 14h
jmp     loc_46dc56
sub     ecx, eax
mov     [ebx], ecx
mov     eax, [esi]
push    eax
call    sub_470640
mov     [esp+144h+var_128], eax
add     esp, 4
test    eax, eax
jnz     short loc_46da2a
cmp     ds:dword_4a9a0c, 0
jnz     short loc_46da12
xor     edi, edi
jmp     loc_46dc56
mov     eax, ds:dword_4a9a0c
sub     eax, 8
cmp     eax, 1
sbb     edi, edi
and     edi, 0fffffff5h
add     edi, 0fh
jmp     loc_46dc56
mov     eax, [esi]
lea     edx, [esp+140h+var_108]
shr     eax, 10h
push    edx
movsx   ecx, ax
mov     [esp+144h+var_124], ecx
call    sub_46d4a0
lea     ecx, [esp+144h+var_108]
add     esp, 4
mov     edx, [esi+20h]
mov     eax, [esi+4]
mov     [esp+140h+var_5c], ecx
mov     [esp+140h+var_58], edx
mov     ecx, [esi+24h]
mov     edx, [esi]
mov     [esp+140h+hdc], eax
mov     [esp+140h+var_24], ecx
xor     ecx, ecx
mov     eax, [esi+0ch]
mov     [esp+140h+var_14], cx
mov     [esp+140h+var_10], edx
mov     [esp+140h+var_12], cx
test    eax, eax
mov     [esp+140h+var_20], eax
jnz     short loc_46daa0
mov     [esp+140h+var_20], offset sub_46e300
mov     eax, [esi+10h]
test    eax, eax
mov     [esp+140h+var_1c], eax
jnz     short loc_46dab9
mov     [esp+140h+var_1c], offset nullsub_17
mov     eax, [esi+14h]
lea     ecx, [esp+140h+var_120]
mov     [esp+140h+var_18], eax
mov     [esp+140h+var_a], ecx
mov     ax, [esi+28h]
mov     [esp+140h+var_c], ax
test    al, 1
jz      short loc_46dae7
mov     eax, [ebx]
mov     [esp+140h+var_6], eax
lea     eax, [esp+140h+var_90]
mov     edx, [esp+140h+var_128]
mov     ecx, [esp+140h+var_124]
push    eax
push    ecx
push    edx
call    sub_46d310
add     esp, 0ch
test    eax, eax
jnz     loc_46dc35
cmp     [esp+140h+hdc], 0
jz      short loc_46db58
test    ebp, ebp
jnz     short loc_46db1e
lea     ebp, [esp+140h+var_50]
mov     eax, [esp+140h+var_84]
movsx   eax, word ptr [eax+22h]
sub     eax, [ebp+0]
mov     [esp+140h+x], eax
mov     eax, [esp+140h+var_84]
movsx   eax, word ptr [eax+24h]
sub     eax, [ebp+4]
mov     ecx, [esp+140h+hdc]
mov     [esp+140h+var_12c], eax
push    eax
mov     edx, [esp+144h+x]
push    edx
push    ecx
call    sub_4535c0
add     esp, 0ch
mov     eax, ds:dword_4a8b1c
mov     edi, ds:globallock
push    eax
call    edi
lea     edx, [eax+260h]
mov     ds:dword_4a8b10, eax
mov     ecx, [eax+264h]
mov     ebp, [edx]
mov     eax, [esi+18h]
mov     [esp+140h+var_128], ecx
mov     [edx], eax
mov     edx, [esi+1ch]
mov     ecx, ds:dword_4a8b10
mov     [ecx+264h], edx
mov     eax, ds:dword_4a8b14
push    eax
call    edi
lea     ecx, [esp+140h+var_90]
push    9fh
push    eax
push    ecx
call    sub_46b000
add     esp, 0ch
mov     edi, eax
mov     ecx, ds:dword_4a8b14
push    ecx
call    ds:globalunlock
mov     eax, ds:dword_4a8b10
mov     ecx, [esp+140h+var_128]
mov     [eax+264h], ecx
mov     eax, ds:dword_4a8b10
mov     [eax+260h], ebp
mov     edx, ds:dword_4a8b1c
push    edx
call    ds:globalunlock
mov     ds:dword_4a8b10, 0
lea     ecx, [esp+140h+var_90]
push    ecx
call    sub_46d380
add     esp, 4
cmp     [esp+140h+hmem], 0
jz      short loc_46dc13
mov     eax, [esp+140h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
test    edi, edi
jnz     short loc_46dc3a
cmp     [esp+140h+var_14], 1
jnz     short loc_46dc3a
test    byte ptr [esi+28h], 2
jz      short loc_46dc3a
mov     eax, [esi]
push    eax
call    sub_408580
add     esp, 4
jmp     short loc_46dc3a
mov     edi, 3
test    byte ptr [esi+28h], 1
jz      short loc_46dc49
mov     eax, [esp+140h+var_6]
mov     [ebx], eax
push    0
mov     eax, [esi]
push    eax
call    sub_470920
add     esp, 8
lea     eax, [esp+140h+var_120]
push    eax
call    sub_46f3f0
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
sub     esp, 68h
push    ebx
push    esi
mov     esi, [esp+70h+arg_0]
push    edi
lea     eax, [esp+74h+var_40]
push    ebp
mov     edi, [esi+14h]
push    eax
inc     word ptr [esi+7ch]
mov     cx, [esi+7eh]
inc     cx
mov     [esi+7eh], cx
mov     edx, [esi+86h]
push    edx
push    ecx
mov     ecx, [esi+80h]
push    ecx
call    sub_408640
add     esp, 10h
mov     ebp, eax
test    ebp, ebp
jnz     loc_46de28
xor     ebx, ebx
xor     eax, eax
mov     [esp+78h+var_68], 0
mov     bx, [esi+10h]
shl     ebx, 10h
mov     ax, [edi+0ah]
or      ebx, eax
test    byte ptr [esi+84h], 1
jz      short loc_46dd04
push    ebx
call    sub_470610
mov     [esp+7ch+var_68], eax
add     esp, 4
mov     eax, [esi+8ah]
cmp     eax, [esp+78h+var_68]
jge     short loc_46dcfa
mov     eax, 14h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 68h
retn
sub     eax, [esp+78h+var_68]
mov     [esi+8ah], eax
push    ebx
call    sub_470640
mov     [esp+7ch+hmem], eax
add     esp, 4
test    eax, eax
jnz     short loc_46dd22
mov     [esp+78h+var_50], 0fh
jmp     loc_46de24
cmp     dword ptr [esi+68h], 0
jnz     short loc_46dd3e
test    byte ptr [esi+84h], 2
jnz     short loc_46dd4b
mov     [esp+78h+var_50], 0
jmp     loc_46de02
test    byte ptr [esi+84h], 2
jz      loc_46de02
call    sub_408350
test    eax, eax
jz      loc_46de02
mov     eax, [esp+78h+hmem]
mov     ebp, ds:globallock
push    eax
call    ebp
mov     ecx, [edi+2ah]
cmp     ecx, 0ffffffffh
jnz     short loc_46dd71
xor     ecx, ecx
jmp     short loc_46dd73
add     ecx, eax
movsx   ebp, word ptr [edi+10h]
mov     edx, [edi+2eh]
mov     [esp+78h+var_5c], ebp
movsx   ebp, word ptr [edi+14h]
add     edx, eax
mov     [esp+78h+var_54], ebp
movsx   eax, word ptr [edi+0eh]
mov     [esp+78h+var_60], eax
movsx   ebp, word ptr [edi+18h]
movsx   eax, word ptr [edi+12h]
mov     [esp+78h+var_58], eax
movsx   eax, word ptr [edi+16h]
mov     [esp+78h+var_50], eax
mov     [esp+78h+var_4c], ebp
movsx   eax, word ptr [edi+1ah]
movsx   ebp, word ptr [edi+1ch]
mov     [esp+78h+var_48], eax
push    ebp
mov     ebp, [esp+7ch+var_48]
mov     eax, [esp+7ch+var_4c]
push    ebp
push    eax
mov     ebp, [esp+84h+var_50]
mov     eax, [esp+84h+var_54]
push    ebp
push    eax
mov     ebp, [esp+8ch+var_58]
mov     eax, [esp+8ch+var_5c]
push    ebp
push    eax
mov     ebp, [esp+94h+var_60]
push    ebp
push    ecx
lea     ecx, [esp+9ch+var_40]
push    edx
push    ecx
push    esi
call    sub_46e040
mov     [esp+0a8h+var_50], eax
add     esp, 30h
mov     ebp, ds:globalunlock
mov     eax, [esp+78h+hmem]
push    eax
call    ebp
cmp     [esp+78h+var_50], 1
sbb     ebp, ebp
neg     ebp
push    0
push    ebx
call    sub_470920
add     esp, 8
test    ebp, ebp
jz      short loc_46de74
push    ebx
call    sub_473080
mov     eax, [esp+7ch+var_68]
add     esp, 4
add     [esi+8ah], eax
test    ebp, ebp
jz      short loc_46de74
mov     ecx, [esi+68h]
test    ecx, ecx
jz      short loc_46de56
mov     eax, [esi+86h]
lea     edx, [esp+78h+var_40]
push    eax
mov     ebx, [esi+6ch]
push    edx
mov     eax, [esi+74h]
push    ebx
mov     edx, [esi+70h]
push    eax
push    edx
push    ecx
call    sub_46f030
mov     [esp+90h+var_50], eax
add     esp, 18h
jmp     short loc_46de5e
mov     [esp+78h+var_50], 0
mov     eax, [esi+86h]
lea     ecx, [esp+78h+var_40]
push    eax
push    ecx
call    sub_4086c0
add     esp, 8
jmp     short loc_46de8e
cmp     dword ptr [esi+68h], 0
jz      short loc_46de8e
movsx   eax, word ptr [edi]
push    esi
mov     ecx, ds:dword_4a8b10
call    dword ptr [ecx+eax*4]
mov     [esp+7ch+var_50], eax
add     esp, 4
mov     eax, [esp+78h+var_50]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 68h
retn
sub     esp, 60h
push    ebx
push    esi
mov     esi, [esp+68h+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     ebx, [esi+14h]
inc     word ptr [esi+7ch]
mov     cx, [esi+7eh]
inc     cx
mov     [esi+7eh], cx
cmp     [esi+68h], edi
jnz     short loc_46ded6
test    byte ptr [esi+84h], 2
jnz     short loc_46ded6
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 60h
retn
lea     eax, [esp+70h+var_40]
mov     edx, [esi+86h]
push    eax
push    edx
push    ecx
mov     ecx, [esi+80h]
push    ecx
call    sub_408640
add     esp, 10h
mov     ebp, eax
test    ebp, ebp
jnz     loc_46dfa0
test    byte ptr [esi+84h], 2
jz      loc_46df9c
call    sub_408350
test    eax, eax
jz      loc_46df9c
mov     edx, [esi+5ch]
mov     eax, [ebx+1eh]
add     edx, [esi+0ch]
mov     ecx, 0
test    eax, eax
jz      short loc_46df2c
lea     ecx, [eax+edx+22h]
movsx   ebp, word ptr [ebx+0ah]
mov     eax, [ebx+22h]
mov     [esp+70h+var_60], ebp
movsx   edi, word ptr [ebx+0eh]
lea     edx, [eax+edx+26h]
mov     [esp+70h+var_58], edi
movsx   ebp, word ptr [ebx+10h]
movsx   eax, word ptr [ebx+0ch]
mov     [esp+70h+var_5c], eax
mov     [esp+70h+var_54], ebp
movsx   edi, word ptr [ebx+14h]
movsx   eax, word ptr [ebx+12h]
mov     [esp+70h+var_50], eax
movsx   ebp, word ptr [ebx+16h]
movsx   eax, word ptr [ebx+18h]
push    eax
push    ebp
mov     eax, [esp+78h+var_50]
push    edi
mov     ebp, [esp+7ch+var_54]
push    eax
mov     edi, [esp+80h+var_58]
push    ebp
mov     eax, [esp+84h+var_5c]
push    edi
mov     ebp, [esp+88h+var_60]
push    eax
push    ebp
push    ecx
lea     ecx, [esp+94h+var_40]
push    edx
push    ecx
push    esi
call    sub_46e040
add     esp, 30h
mov     edi, eax
cmp     edi, 1
sbb     ebp, ebp
neg     ebp
test    ebp, ebp
jz      short loc_46dfed
mov     ecx, [esi+68h]
mov     edi, 0
test    ecx, ecx
jz      short loc_46dfcf
mov     eax, [esi+86h]
lea     edx, [esp+70h+var_40]
push    eax
mov     ebx, [esi+6ch]
push    edx
mov     eax, [esi+74h]
push    ebx
mov     edx, [esi+70h]
push    eax
push    edx
push    ecx
call    sub_46f030
add     esp, 18h
mov     edi, eax
mov     eax, [esi+86h]
lea     ecx, [esp+70h+var_40]
push    eax
push    ecx
call    sub_4086c0
add     esp, 8
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 60h
retn
cmp     dword ptr [esi+68h], 0
jz      short loc_46e005
movsx   eax, word ptr [ebx]
push    esi
mov     ecx, ds:dword_4a8b10
call    dword ptr [ecx+eax*4]
add     esp, 4
mov     edi, eax
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 60h
retn
mov     eax, [esp+4]
inc     word ptr [eax+7ch]
cmp     dword ptr [eax+68h], 0
jz      short loc_46e032
push    eax
mov     ecx, ds:dword_4a8b10
mov     eax, [eax+14h]
movsx   eax, word ptr [eax]
call    dword ptr [ecx+eax*4]
add     esp, 4
retn
xor     eax, eax
retn
sub     esp, 48h
xor     eax, eax
mov     ecx, 0fh
push    ebx
mov     ebx, [esp+4ch+arg_4]
push    esi
push    edi
push    ebp
mov     edi, ebx
mov     ebp, 1
rep stosd
stosw
stosb
mov     esi, [esp+58h+arg_0]
mov     edi, [esi+34h]
cmp     [edi+30h], eax
jnz     short loc_46e08f
push    2
push    428h
call    sub_45b8f0
add     esp, 8
mov     [edi+30h], eax
test    eax, eax
jnz     short loc_46e08d
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
xor     ebp, ebp
mov     eax, [edi+30h]
push    eax
call    ds:globallock
mov     ecx, [esp+58h+src]
push    28h
mov     [esp+5ch+lpbmi], eax
push    ecx
push    eax
call    _memcpy
mov     ecx, [esp+64h+lpbmi]
add     esp, 0ch
push    ecx
call    sub_40eff0
mov     [esp+5ch+var_46], ax
add     esp, 4
test    ebp, ebp
jnz     short loc_46e0e0
cmp     ax, 100h
jle     short loc_46e0e0
mov     eax, [edi+30h]
push    eax
call    ds:globalunlock
mov     eax, 12h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
mov     eax, [esp+58h+arg_28]
sub     eax, [esp+58h+arg_20]
mov     [esp+58h+var_3c], eax
mov     eax, [esp+58h+arg_2c]
mov     [esp+58h+var_44], 0
sub     eax, [esp+58h+arg_24]
mov     [esp+58h+var_38], eax
mov     eax, [esp+58h+src]
add     eax, 28h
cmp     [esp+58h+arg_c], 0
mov     [esp+58h+lpbits], eax
jz      short loc_46e135
mov     al, [edi]
test    al, al
jz      short loc_46e12d
cmp     al, 1
jnz     short loc_46e135
cmp     [esp+58h+var_46], 2
jz      short loc_46e135
mov     [esp+58h+var_44], 1
test    byte ptr [esi+84h], 1
jz      loc_46e1cb
mov     ebp, [esp+58h+var_38]
imul    ebp, [esp+58h+var_3c]
call    sub_469a70
cmp     eax, 1
jnz     short loc_46e164
mov     eax, ebp
cdq
and     edx, 7
add     eax, edx
sar     eax, 3
mov     ecx, eax
jmp     short loc_46e1a5
cmp     eax, 2
jnz     short loc_46e178
mov     eax, ebp
cdq
and     edx, 3
add     eax, edx
sar     eax, 2
mov     ecx, eax
jmp     short loc_46e1a5
cmp     eax, 4
jnz     short loc_46e189
mov     eax, ebp
cdq
sub     eax, edx
sar     eax, 1
mov     ecx, eax
jmp     short loc_46e1a5
cmp     eax, 8
jg      short loc_46e192
mov     ecx, ebp
jmp     short loc_46e1a5
lea     ecx, ds:0[ebp*2]
cmp     eax, 10h
jle     short loc_46e1a5
lea     ecx, ds:0[ebp*4]
cmp     [esp+58h+var_44], 0
jz      short loc_46e1b9
mov     eax, ebp
cdq
and     edx, 7
add     eax, edx
sar     eax, 3
add     ecx, eax
cmp     [esi+8ah], ecx
jge     short loc_46e1cb
mov     ebp, 14h
jmp     loc_46e2e2
cmp     [esp+58h+var_44], 0
mov     ebp, 0
jz      short loc_46e224
mov     eax, [esp+58h+arg_c]
push    30h
lea     ecx, [esp+5ch+var_30]
push    eax
push    ecx
call    _memcpy
lea     ecx, [esp+64h+var_30]
add     esp, 0ch
push    ecx
call    sub_40f050
movzx   ebp, ax
add     ebp, [esp+5ch+arg_c]
lea     eax, [esp+5ch+var_30.bmicolors]
add     ebp, [esp+5ch+var_30.bmiheader.bisize]
add     esp, 4
push    eax
push    0
call    sub_40f070
lea     eax, [esp+60h+var_4]
add     esp, 8
push    eax
push    0ffffffh
call    sub_40f070
add     esp, 8
push    ebx
mov     eax, [esi+86h]
lea     ecx, [esp+5ch+arg_20]
push    eax
lea     edx, [esp+60h+arg_10]
push    ecx
push    edx
mov     eax, [edi+0ah]
push    eax
mov     ecx, [edi+6]
push    ecx
xor     eax, eax
mov     ax, [edi+34h]
lea     edx, [esp+70h+var_30]
movsx   ecx, [esp+70h+var_46]
push    eax
push    ecx
mov     eax, [esp+78h+lpbits]
push    ebp
mov     ecx, [esp+7ch+lpbmi]
push    edx
push    eax
push    ecx
call    sub_46edd0
add     esp, 30h
mov     ebp, eax
xor     ecx, ecx
test    ebp, ebp
jnz     short loc_46e2e2
mov     eax, [esi+80h]
mov     [ebx], eax
mov     dx, [esi+7eh]
mov     [ebx+4], dx
mov     al, [edi]
mov     [ebx+0eh], al
mov     edx, [edi+6]
mov     [ebx+0fh], edx
mov     edx, [esp+58h+var_3c]
mov     eax, [edi+0ah]
mov     [ebx+13h], eax
mov     [ebx+17h], ecx
lea     eax, [esp+58h+arg_20]
mov     [ebx+1bh], ecx
mov     ecx, [esp+58h+var_38]
mov     [ebx+1fh], edx
mov     edx, [eax]
mov     [ebx+23h], ecx
lea     ecx, [ebx+27h]
mov     [ecx], edx
mov     edx, [eax+4]
push    ebx
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     eax, [eax+0ch]
mov     [ecx+8], edx
mov     [ecx+0ch], eax
mov     ecx, [esi+80h]
push    ecx
call    sub_408410
add     esp, 8
test    byte ptr [esi+84h], 1
jz      short loc_46e2e2
mov     eax, [ebx+3bh]
sub     [esi+8ah], eax
mov     eax, [edi+30h]
push    eax
call    ds:globalunlock
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 48h
retn
mov     ecx, [esp+arg_0]
mov     edx, [esp+arg_8]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     eax, 1
mov     ecx, [ecx+0ch]
mov     [edx+0ch], ecx
retn
sub     esp, 0c4h
push    ebx
push    esi
mov     esi, [esp+0cch+hdc]
push    edi
push    ebp
push    esi
call    sub_4535a0
mov     [esp+0d8h+x], eax
add     esp, 4
mov     eax, [esp+0d4h+arg_c]
mov     [esp+0d4h+y], edx
neg     eax
mov     [esp+0d4h+var_bc], eax
mov     eax, [esp+0d4h+arg_10]
neg     eax
mov     edx, [esp+0d4h+var_bc]
push    eax
push    edx
push    esi
call    sub_4535c0
lea     ecx, [esp+0e0h+var_b4]
add     esp, 0ch
xor     edi, edi
push    ecx
call    sub_46d4a0
lea     ecx, [esp+0d8h+var_b4]
mov     [esp+0d8h+var_44], edi
mov     [esp+0d8h+var_48], ecx
mov     [esp+0d8h+var_14], esi
lea     eax, [esp+0d8h+var_7c]
mov     [esp+0d8h+var_10], edi
mov     edx, [esp+0d8h+arg_4]
mov     ecx, [esp+0d8h+arg_8]
mov     [esp+0d8h+var_c], offset sub_46e300
mov     [esp+0d8h+var_8], offset nullsub_17
add     esp, 4
push    eax
push    ecx
push    edx
call    sub_46d310
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jnz     loc_46e47a
push    0ffffffh
call    sub_46afe0
add     esp, 4
mov     ebp, eax
mov     eax, ds:dword_4a8b1c
mov     ebx, ds:globallock
push    eax
call    ebx
mov     ecx, ds:dword_4a8b18
mov     ds:dword_4a8b10, eax
push    ecx
call    ebx
push    9fh
push    eax
lea     eax, [esp+0dch+var_7c]
push    eax
call    sub_46b000
add     esp, 0ch
mov     ebx, eax
mov     eax, ds:dword_4a8b18
push    eax
call    ds:globalunlock
mov     eax, ds:dword_4a8b1c
push    eax
call    ds:globalunlock
lea     eax, [esp+0d4h+var_7c]
mov     ds:dword_4a8b10, edi
push    eax
call    sub_46d380
add     esp, 4
cmp     [esp+0d4h+hmem], edi
jz      short loc_46e471
mov     eax, [esp+0d4h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
push    ebp
call    sub_46afe0
add     esp, 4
mov     eax, [esp+0d4h+x]
mov     ecx, [esp+0d4h+y]
push    ecx
push    eax
push    esi
call    sub_453580
add     esp, 0ch
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c4h
retn
mov     edx, [esp+arg_0]
push    esi
push    edi
mov     eax, 1
mov     esi, [edx+34h]
xor     ecx, ecx
mov     edi, 0ffffffh
mov     byte ptr [esi], 2
mov     [esi+4], ax
mov     [esi+6], ecx
mov     [esi+0ah], edi
mov     [esi+1ah], ax
mov     [esi+20h], ecx
mov     [esi+24h], edi
lea     edi, [esi+12h]
mov     eax, dword_4add88
mov     ecx, dword_4add8c
add     esi, 28h
mov     [edi], eax
push    edx
mov     [edi+4], ecx
mov     eax, dword_4add88
mov     ecx, dword_4add8c
mov     [esi], eax
mov     [esi+4], ecx
mov     ecx, ds:dword_4a8b10
mov     eax, [edx+14h]
movsx   edi, word ptr [eax]
call    dword ptr [ecx+edi*4]
add     esp, 4
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_0]
sub     esp, 10h
mov     eax, 1
push    ebx
push    esi
push    edi
mov     edi, [ecx+34h]
xor     esi, esi
mov     edx, 0ffffffh
mov     byte ptr [edi], 2
mov     [edi+4], ax
mov     [edi+6], esi
lea     ebx, [edi+12h]
mov     [edi+0ah], edx
mov     [edi+1ah], ax
mov     [edi+20h], esi
mov     [edi+24h], edx
add     edi, 28h
mov     eax, dword_4add88
mov     esi, dword_4add8c
mov     [ebx], eax
mov     [ebx+4], esi
mov     esi, dword_4add8c
mov     eax, dword_4add88
mov     [edi], eax
mov     [edi+4], esi
mov     esi, [ecx+14h]
movsx   eax, word ptr [esi+6]
movsx   ebx, word ptr [esi+8]
mov     [esp+1ch+left], eax
push    edx
movsx   edi, word ptr [esi+0ah]
movsx   eax, word ptr [esi+0ch]
push    eax
mov     edx, [ecx+34h]
mov     eax, [esp+24h+left]
push    edi
push    ebx
mov     ecx, [ecx+68h]
push    eax
push    edx
push    ecx
call    sub_451d90
add     esp, 1ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, [esp+arg_0]
sub     esp, 10h
xor     eax, eax
push    ebx
push    esi
mov     edx, 0ffffffh
push    edi
mov     edi, [ecx+34h]
mov     byte ptr [edi], 2
mov     word ptr [edi+4], 1
lea     ebx, [edi+12h]
mov     [edi+6], eax
mov     [edi+0ah], edx
mov     [edi+20h], eax
mov     [edi+24h], edx
add     edi, 28h
mov     eax, dword_4add88
mov     esi, dword_4add8c
mov     [ebx], eax
mov     [ebx+4], esi
mov     esi, dword_4add8c
mov     eax, dword_4add88
mov     [edi], eax
mov     [edi+4], esi
mov     esi, [ecx+14h]
movsx   eax, word ptr [esi+6]
movsx   ebx, word ptr [esi+8]
mov     [esp+1ch+left], eax
push    edx
movsx   edi, word ptr [esi+0ah]
movsx   eax, word ptr [esi+0ch]
push    eax
mov     edx, [ecx+34h]
mov     eax, [esp+24h+left]
push    edi
push    ebx
mov     ecx, [ecx+68h]
push    eax
push    edx
push    ecx
call    sub_451d90
add     esp, 1ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     di, [esi+10h]
mov     ebp, [esi+14h]
shl     edi, 10h
xor     eax, eax
mov     ax, [ebp+0ah]
or      edi, eax
push    edi
call    sub_470640
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      loc_46e705
push    ebx
call    ds:globallock
mov     ecx, [ebp+2ah]
cmp     ecx, 0ffffffffh
jnz     short loc_46e675
xor     ecx, ecx
jmp     short loc_46e677
add     ecx, eax
mov     edx, [ebp+2eh]
add     edx, eax
movsx   eax, word ptr [ebp+0eh]
mov     [esp+30h+var_20], eax
movsx   eax, word ptr [ebp+10h]
mov     [esp+30h+var_1c], eax
movsx   eax, word ptr [ebp+12h]
mov     [esp+30h+var_18], eax
movsx   eax, word ptr [ebp+14h]
mov     [esp+30h+var_14], eax
movsx   eax, word ptr [ebp+16h]
mov     [esp+30h+var_10], eax
movsx   eax, word ptr [ebp+18h]
mov     [esp+30h+var_c], eax
movsx   eax, word ptr [ebp+1ah]
movsx   ebp, word ptr [ebp+1ch]
mov     [esp+30h+var_8], eax
push    ebp
mov     ebp, [esp+34h+var_8]
mov     eax, [esp+34h+var_c]
push    ebp
push    eax
mov     ebp, [esp+3ch+var_10]
mov     eax, [esp+3ch+var_14]
push    ebp
push    eax
mov     ebp, [esp+44h+var_18]
mov     eax, [esp+44h+var_1c]
push    ebp
push    eax
mov     ebp, [esp+4ch+var_20]
push    ebp
push    ecx
push    edx
push    esi
call    sub_46e7c0
add     esp, 2ch
mov     esi, eax
push    ebx
call    ds:globalunlock
push    0
push    edi
call    sub_470920
add     esp, 8
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, 0fh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     ecx, [esp+arg_0]
sub     esp, 20h
push    esi
push    edi
mov     edi, [ecx+14h]
mov     esi, [ecx+5ch]
add     esi, [ecx+0ch]
mov     edx, 0
mov     eax, [edi+1eh]
test    eax, eax
jz      short loc_46e742
lea     edx, [eax+esi+22h]
mov     eax, [edi+22h]
lea     esi, [eax+esi+26h]
movsx   eax, word ptr [edi+0ah]
mov     [esp+28h+var_20], eax
movsx   eax, word ptr [edi+0ch]
mov     [esp+28h+var_1c], eax
movsx   eax, word ptr [edi+0eh]
mov     [esp+28h+var_18], eax
movsx   eax, word ptr [edi+10h]
mov     [esp+28h+var_14], eax
movsx   eax, word ptr [edi+12h]
mov     [esp+28h+var_10], eax
movsx   eax, word ptr [edi+14h]
mov     [esp+28h+var_c], eax
movsx   eax, word ptr [edi+16h]
movsx   edi, word ptr [edi+18h]
push    edi
push    eax
mov     edi, [esp+30h+var_c]
mov     eax, [esp+30h+var_10]
push    edi
push    eax
mov     edi, [esp+38h+var_14]
mov     eax, [esp+38h+var_18]
push    edi
push    eax
mov     edi, [esp+40h+var_1c]
mov     eax, [esp+40h+var_20]
push    edi
push    eax
push    edx
push    esi
push    ecx
call    sub_46e7c0
add     esp, 2ch
pop     edi
pop     esi
add     esp, 20h
retn
sub     esp, 3ch
push    ebx
push    esi
mov     esi, [esp+44h+arg_0]
push    edi
push    ebp
push    2
mov     eax, [esi+34h]
mov     eax, [eax+30h]
test    eax, eax
jz      short loc_46e7e3
push    eax
call    sub_45bbc0
add     esp, 4
push    eax
jmp     short loc_46e7e5
push    28h
call    sub_45b8f0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jnz     short loc_46e800
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
mov     ebx, [esi+68h]
mov     eax, [esp+4ch+arg_14]
sub     eax, [esp+4ch+arg_c]
mov     ecx, [esp+4ch+arg_18]
sub     ecx, [esp+4ch+arg_10]
mov     esi, [esp+4ch+arg_24]
sub     esi, [esp+4ch+arg_1c]
push    ebp
mov     [esp+50h+var_38], eax
mov     [esp+50h+var_34], ecx
mov     eax, [esp+50h+arg_28]
sub     eax, [esp+50h+arg_20]
mov     [esp+50h+var_3c], eax
call    ds:globallock
mov     edi, eax
push    28h
mov     eax, [esp+50h+src]
push    eax
push    edi
call    _memcpy
add     esp, 0ch
cmp     [esp+4ch+arg_8], 0
jz      loc_46e8f3
mov     eax, [esp+4ch+arg_8]
push    30h
lea     ecx, [esp+50h+var_30]
push    eax
push    ecx
call    _memcpy
lea     ecx, [esp+58h+var_30]
add     esp, 0ch
push    ecx
call    sub_40f050
movzx   edi, ax
add     edi, [esp+50h+arg_8]
lea     eax, [esp+50h+var_8]
add     edi, [esp+50h+var_30]
add     esp, 4
push    eax
push    0
call    sub_40f070
lea     eax, [esp+54h+var_4]
add     esp, 8
push    eax
push    0ffffffh
call    sub_40f070
add     esp, 8
push    1
push    ebx
call    ds:setstretchbltmode
lea     eax, [esp+4ch+var_30]
push    0
mov     ecx, [esp+50h+var_34]
push    0
mov     edx, [esp+54h+var_38]
push    660046h
push    eax
push    edi
mov     eax, [esp+60h+var_28]
push    ecx
push    edx
and     eax, 0ffffh
sub     eax, [esp+68h+arg_18]
mov     ecx, [esp+68h+arg_c]
mov     edx, [esp+68h+var_3c]
push    eax
mov     eax, [esp+6ch+arg_20]
push    ecx
mov     ecx, [esp+70h+arg_1c]
push    edx
push    esi
push    eax
push    ecx
jmp     loc_46e980
mov     eax, [esp+4ch+src]
mov     ecx, [esp+4ch+src]
add     eax, 28h
push    ecx
mov     [esp+50h+var_30], eax
call    sub_40eff0
add     esp, 4
test    ax, ax
jz      short loc_46e93a
dec     ax
jz      short loc_46e933
mov     ecx, 0ffh
movsx   edx, ax
dec     ax
mov     [edi+edx*4+28h], cl
mov     [edi+edx*4+29h], cl
mov     [edi+edx*4+2ah], cl
lea     edx, [edi+edx*4]
mov     byte ptr [edx+2bh], 0
jnz     short loc_46e919
mov     dword ptr [edi+28h], 0
push    1
push    ebx
call    ds:setstretchbltmode
movsx   ecx, word ptr [edi+8]
sub     ecx, [esp+4ch+arg_18]
push    0
mov     eax, [esp+50h+var_30]
push    0
mov     edx, [esp+54h+var_34]
push    660046h
push    edi
push    eax
mov     edi, [esp+60h+var_38]
push    edx
mov     eax, [esp+64h+arg_c]
push    edi
mov     edx, [esp+68h+arg_20]
push    ecx
mov     ecx, [esp+6ch+var_3c]
push    eax
mov     eax, [esp+70h+arg_1c]
push    ecx
push    esi
push    edx
push    eax
push    ebx
call    sub_46a890
add     esp, 38h
mov     esi, eax
push    ebp
call    ds:globalunlock
push    ebp
call    sub_45ba00
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 3ch
retn
push    esi
push    42h
push    400h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a8b14, eax
test    eax, eax
jnz     short loc_46e9e1
push    6beh
mov     eax, off_4ad1e8
push    offset apigutl
push    eax
call    sub_480570
add     esp, 0ch
mov     eax, ds:dword_4a8b14
push    eax
call    ds:globallock
push    eax
mov     esi, eax
call    sub_46aeb0
add     esp, 4
mov     eax, offset loc_46e010
mov     [esi+1c4h], eax
mov     [esi+1d4h], eax
mov     [esi+1f4h], eax
mov     [esi+204h], eax
mov     [esi+214h], eax
mov     [esi+224h], eax
mov     [esi+234h], eax
mov     dword ptr [esi+194h], offset sub_46dea0
mov     dword ptr [esi+180h], offset sub_46dc70
mov     [esi+260h], eax
mov     [esi+264h], eax
mov     ecx, ds:dword_4a8b14
push    ecx
call    ds:globalunlock
pop     esi
retn
mov     eax, ds:dword_4a8b14
push    eax
call    sub_45ba00
add     esp, 4
retn
push    esi
push    42h
push    400h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a8b18, eax
test    eax, eax
jnz     short loc_46eaa1
push    6f0h
mov     eax, off_4ad1e8
push    offset apigutl
push    eax
call    sub_480570
add     esp, 0ch
mov     eax, ds:dword_4a8b18
push    eax
call    ds:globallock
push    eax
mov     esi, eax
call    sub_46aeb0
add     esp, 4
mov     eax, offset sub_46e4a0
mov     [esi+1c4h], eax
mov     [esi+1d4h], eax
mov     [esi+1f4h], eax
mov     [esi+204h], eax
mov     [esi+214h], eax
mov     [esi+224h], eax
mov     [esi+234h], eax
mov     dword ptr [esi+194h], offset sub_46e720
mov     dword ptr [esi+180h], offset sub_46e630
mov     dword ptr [esi+260h], offset sub_46e510
mov     dword ptr [esi+264h], offset sub_46e5a0
mov     ecx, ds:dword_4a8b18
push    ecx
call    ds:globalunlock
pop     esi
retn
mov     eax, ds:dword_4a8b18
push    eax
call    sub_45ba00
add     esp, 4
retn
mov     eax, [esp+8]
mov     ecx, [esp+4]
mov     edx, [esp+0ch]
push    eax
push    ecx
push    edx
call    ds:intersectrect
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_14]
mov     edx, [esp+arg_8]
sub     esp, 10h
mov     dword ptr [ecx+4], 0
push    esi
mov     [ecx], eax
mov     eax, [esp+14h+arg_4]
lea     esi, [ecx+8]
cmp     dword ptr [ecx+14h], 0
mov     [esi], eax
mov     eax, [esp+14h+arg_c]
mov     [esi+4], edx
mov     [ecx+10h], eax
jnz     short loc_46ebaa
mov     edx, [esp+14h+arg_10]
lea     esi, [esp+14h+var_10]
mov     eax, [edx]
mov     [esi], eax
mov     eax, [edx+4]
mov     [esi+4], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [esi+8], eax
mov     [esi+0ch], edx
mov     [ecx+2ch], esi
mov     dword ptr [ecx+14h], offset loc_46eb30
push    ecx
call    sub_469ca0
add     esp, 4
pop     esi
add     esp, 10h
retn
mov     ecx, [esp+arg_10]
sub     esp, 10h
lea     edx, [esp+10h+rc]
push    esi
mov     eax, [ecx]
mov     esi, [ecx+4]
mov     [edx], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+4], esi
mov     esi, [esp+14h+arg_c]
mov     [edx+8], eax
mov     [edx+0ch], ecx
mov     eax, [esi+4]
neg     eax
lea     edx, [esp+14h+rc]
push    eax
mov     eax, [esi]
neg     eax
push    eax
push    edx
call    ds:offsetrect
mov     ecx, [esp+14h+arg_14]
lea     edx, [esp+14h+rc]
mov     eax, [esp+14h+arg_4]
push    ecx
mov     ecx, [esp+18h+arg_8]
push    esi
push    edx
push    ecx
mov     edx, [esp+24h+arg_0]
push    eax
push    edx
call    sub_46eb50
add     esp, 18h
pop     esi
add     esp, 10h
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_10]
mov     edx, [esp+arg_0]
sub     esp, 10h
mov     [ecx], eax
mov     [ecx+4], edx
cmp     dword ptr [ecx+0ch], 0
push    esi
mov     eax, [esp+14h+arg_8]
mov     [ecx+8], eax
jnz     short loc_46ec7a
mov     edx, [esp+14h+arg_c]
lea     esi, [esp+14h+var_10]
mov     eax, [edx]
mov     [esi], eax
mov     eax, [edx+4]
mov     [esi+4], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [esi+8], eax
mov     [esi+0ch], edx
mov     [ecx+24h], esi
mov     dword ptr [ecx+0ch], offset loc_46eb30
push    ecx
call    sub_46d870
add     esp, 4
pop     esi
add     esp, 10h
retn
mov     ecx, [esp+arg_c]
sub     esp, 10h
lea     edx, [esp+10h+rc]
push    esi
mov     eax, [ecx]
mov     esi, [ecx+4]
mov     [edx], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+4], esi
mov     esi, [esp+14h+arg_8]
mov     [edx+8], eax
mov     [edx+0ch], ecx
mov     eax, [esi+4]
neg     eax
lea     edx, [esp+14h+rc]
push    eax
mov     eax, [esi]
neg     eax
push    eax
push    edx
call    ds:offsetrect
mov     ecx, [esp+14h+arg_10]
lea     edx, [esp+14h+rc]
mov     eax, [esp+14h+arg_4]
push    ecx
mov     ecx, [esp+18h+arg_0]
push    esi
push    edx
push    eax
push    ecx
call    sub_46ec30
add     esp, 14h
pop     esi
add     esp, 10h
retn
mov     edx, [esp+hmem]
mov     ecx, [esp+arg_8]
sub     esp, 4ch
lea     eax, [esp+4ch+var_40]
push    esi
push    edi
push    eax
push    ecx
push    edx
call    sub_46d5e0
mov     ecx, [esp+60h+cy]
mov     edx, [esp+60h+w]
lea     eax, [esp+60h+var_4c]
add     esp, 0ch
push    ecx
push    edx
push    0
push    eax
call    sub_46f5a0
add     esp, 10h
mov     edx, eax
test    edx, edx
jz      loc_46edbc
lea     edi, [esp+54h+var_30]
xor     eax, eax
mov     ecx, 0ch
rep stosd
mov     ecx, [esp+54h+arg_8]
mov     [esp+54h+var_30], edx
lea     edx, [esp+54h+var_40]
mov     [esp+54h+var_2c], eax
mov     eax, [esp+54h+hmem]
mov     [esp+54h+var_20], edx
mov     [esp+54h+var_28], eax
lea     eax, [esp+54h+var_30]
mov     [esp+54h+var_24], ecx
push    eax
call    sub_469ca0
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_46eda7
mov     ecx, [esp+54h+arg_10]
mov     eax, [ecx+0ch]
mov     edx, [ecx+8]
push    eax
push    edx
mov     eax, [ecx+4]
mov     ecx, [ecx]
push    eax
push    ecx
mov     ecx, [esp+64h+arg_c]
mov     eax, [ecx+0ch]
mov     edx, [ecx+8]
push    eax
push    edx
mov     eax, [ecx+4]
mov     edx, [esp+6ch+hdc]
push    eax
mov     ecx, [ecx]
lea     eax, [esp+70h+var_4c]
push    ecx
push    edx
push    eax
call    sub_46f5f0
add     esp, 28h
lea     eax, [esp+54h+var_4c]
push    eax
call    sub_46f5c0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
add     esp, 4ch
retn
mov     esi, 4
pop     edi
mov     eax, esi
pop     esi
add     esp, 4ch
retn
mov     ecx, [esp+arg_24]
sub     esp, 14h
push    ebx
mov     eax, [ecx+8]
push    esi
sub     eax, [ecx]
mov     [esp+1ch+destwidth], eax
push    edi
push    ebp
mov     eax, [ecx+0ch]
sub     eax, [ecx+4]
mov     edi, [esp+24h+arg_20]
mov     [esp+24h+cy], eax
mov     eax, [edi+8]
sub     eax, [edi]
mov     ebp, [esp+24h+arg_10]
mov     ebx, [esp+24h+arg_28]
mov     [esp+24h+srcwidth], eax
mov     eax, [edi+0ch]
sub     eax, [edi+4]
cmp     ebp, 2
mov     [esp+24h+srcheight], eax
jnz     short loc_46ee1f
mov     eax, [ebx+4]
mov     ecx, [ebx]
push    eax
push    ecx
call    ds:selectobject
mov     esi, [esp+24h+arg_2c]
mov     eax, [esp+24h+cy]
mov     ecx, [esp+24h+destwidth]
push    eax
push    ecx
mov     edx, [ebx]
push    edx
call    ds:creatediscardablebitmap
mov     [esi+6], eax
cmp     ebp, 2
jnz     short loc_46ee4b
mov     eax, [ebx+8]
mov     ecx, [ebx]
push    eax
push    ecx
call    ds:selectobject
mov     eax, [esi+6]
test    eax, eax
jz      loc_46ef26
mov     [esp+24h+var_c], 0
push    eax
mov     eax, [ebx]
push    eax
call    ds:selectobject
test    eax, eax
jz      loc_46ef0e
cmp     ebp, 2
jnz     short loc_46eea5
mov     ebp, [esp+24h+lpbmi]
lea     eax, [ebp+28h]
push    eax
push    0
call    sub_40f070
add     esp, 8
lea     eax, [ebp+2ch]
push    eax
push    0ffffffh
call    sub_40f070
add     esp, 8
mov     eax, [ebx]
push    2
push    eax
call    ds:setstretchbltmode
jmp     short loc_46eeb4
push    3
mov     eax, [ebx]
push    eax
call    ds:setstretchbltmode
mov     ebp, [esp+24h+lpbmi]
mov     eax, [esp+24h+lpbits]
test    eax, eax
jz      short loc_46eefa
mov     ecx, [esp+24h+iusage]
push    0cc0020h
mov     edx, [esp+28h+srcwidth]
push    ecx
push    ebp
push    eax
mov     eax, [esp+34h+srcheight]
mov     ecx, [edi]
push    eax
push    edx
xor     eax, eax
mov     edx, [esp+3ch+cy]
mov     ax, [ebp+8]
sub     eax, [edi+0ch]
push    eax
push    ecx
mov     eax, [esp+44h+destwidth]
push    edx
push    eax
mov     ecx, [ebx]
push    0
push    0
push    ecx
call    ds:stretchdibits
mov     [esp+24h+var_c], eax
cmp     [esp+24h+var_c], 0
jnz     short loc_46ef26
mov     eax, [ebx+8]
mov     ecx, [ebx]
push    eax
push    ecx
call    ds:selectobject
cmp     [esp+24h+var_c], 0
jnz     short loc_46ef26
mov     eax, [esi+6]
push    eax
call    ds:deleteobject
mov     dword ptr [esi+6], 0
cmp     dword ptr [esi+6], 0
jz      loc_46f003
cmp     [esp+24h+arg_c], 0
jz      loc_46f003
mov     eax, [esp+24h+cy]
mov     ecx, [esp+24h+destwidth]
push    eax
mov     edx, [ebx+0ch]
push    ecx
push    edx
call    ds:creatediscardablebitmap
mov     [esi+0ah], eax
test    eax, eax
jz      loc_46efdf
xor     ebp, ebp
push    eax
mov     eax, [ebx+0ch]
push    eax
call    ds:selectobject
test    eax, eax
jz      short loc_46efca
push    2
mov     eax, [ebx+0ch]
push    eax
call    ds:setstretchbltmode
mov     ecx, [esp+24h+arg_8]
push    0cc0020h
mov     eax, [esp+28h+arg_c]
push    ebp
mov     edx, [esp+2ch+srcheight]
push    ecx
mov     ebp, [esp+30h+srcwidth]
push    eax
push    edx
xor     eax, eax
mov     ax, [ecx+8]
push    ebp
sub     eax, [edi+0ch]
mov     ecx, [edi]
mov     edx, [esp+3ch+cy]
push    eax
mov     eax, [esp+40h+destwidth]
push    ecx
push    edx
mov     ecx, [ebx+0ch]
push    eax
push    0
push    0
push    ecx
call    ds:stretchdibits
mov     ebp, eax
test    ebp, ebp
jnz     short loc_46efdf
mov     eax, [ebx+14h]
mov     ecx, [ebx+0ch]
push    eax
push    ecx
call    ds:selectobject
test    ebp, ebp
jnz     short loc_46efdf
mov     eax, [esi+0ah]
push    eax
call    ds:deleteobject
mov     dword ptr [esi+0ah], 0
cmp     dword ptr [esi+0ah], 0
jnz     short loc_46f003
mov     eax, [ebx+8]
mov     ecx, [ebx]
push    eax
push    ecx
call    ds:selectobject
mov     ecx, [esi+6]
push    ecx
call    ds:deleteobject
mov     dword ptr [esi+6], 0
mov     eax, [esi+6]
test    eax, eax
jz      short loc_46f01f
cmp     [esp+24h+arg_c], 0
jz      short loc_46f015
test    eax, eax
jz      short loc_46f01f
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 54h
mov     eax, [esp+54h+arg_14]
push    ebx
push    esi
push    edi
mov     edi, [esp+60h+arg_10]
push    ebp
mov     [esp+64h+var_54], 0
mov     ebx, [edi+0ah]
mov     ecx, [eax+0ch]
mov     ebp, [edi+1bh]
lea     edx, [edi+17h]
mov     [esp+64h+var_50], 1
mov     [esp+64h+hdcsrc], ecx
lea     ecx, [esp+64h+rc]
mov     eax, [edx]
mov     esi, [edx+8]
mov     [ecx], eax
mov     eax, [edx+0ch]
lea     edx, [edi+27h]
mov     [ecx+4], ebp
mov     [ecx+8], esi
mov     ebp, [edx+4]
mov     esi, [edx+8]
mov     [ecx+0ch], eax
lea     ecx, [esp+64h+x]
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+0ch]
mov     edx, [esp+64h+arg_c]
mov     [ecx+4], ebp
mov     [ecx+8], esi
mov     ebp, [esp+64h+arg_4]
mov     [ecx+0ch], eax
lea     ecx, [esp+64h+var_28]
lea     eax, [esp+64h+x]
push    ecx
push    edx
push    eax
call    ebp
add     esp, 0ch
test    eax, eax
jnz     short loc_46f0b9
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
mov     edx, [esp+64h+rc.left]
mov     ecx, [esp+64h+rc.top]
lea     eax, [esp+64h+var_28]
lea     esi, [esp+64h+x]
sub     edx, [esp+64h+x]
sub     ecx, [esp+64h+y]
mov     ebp, [eax]
mov     [esi], ebp
mov     ebp, [eax+4]
mov     [esi+4], ebp
mov     ebp, [eax+8]
mov     eax, [eax+0ch]
mov     [esi+8], ebp
mov     [esi+0ch], eax
lea     eax, [esp+64h+var_28]
lea     esi, [esp+64h+rc]
mov     ebp, [eax]
mov     [esi], ebp
mov     ebp, [eax+4]
push    ecx
mov     [esi+4], ebp
mov     ebp, [eax+8]
push    edx
mov     eax, [eax+0ch]
mov     [esi+8], ebp
mov     ebp, ds:offsetrect
mov     [esi+0ch], eax
lea     esi, [esp+6ch+rc]
push    esi
call    ebp
lea     eax, [esp+64h+pv]
mov     ecx, [edi+6]
push    eax
mov     ebp, ds:getobjecta
push    18h
push    ecx
call    ebp
mov     eax, [esp+64h+var_8]
xor     ecx, ecx
mov     cx, word ptr [esp+64h+var_8+2]
and     eax, 0ffffh
imul    eax, ecx
cmp     eax, 1
movsx   eax, byte ptr [edi+0eh]
jle     short loc_46f1a1
cmp     eax, 3
ja      short def_46f148
jmp     ds:jpt_46f148[eax*4]
mov     ebp, 0cc0020h
jmp     loc_46f23a
cmp     dword ptr [edi+0ah], 0
jz      short loc_46f18d
mov     ebp, 8800c6h
push    2000000h
mov     [esp+68h+var_54], 1
mov     esi, [esp+68h+hdc]
push    esi
call    ds:settextcolor
push    2ffffffh
push    esi
call    ds:setbkcolor
jmp     loc_46f23e
mov     ebp, 0cc0020h
jmp     loc_46f23a
mov     ebp, 0bb0226h
jmp     loc_46f23a
cmp     eax, 3
ja      short def_46f1a6
jmp     ds:jpt_46f1a6[eax*4]
mov     ebp, 0cc0020h
jmp     loc_46f23a
cmp     dword ptr [edi+0ah], 0
jz      short loc_46f1e8
mov     ebp, 8800c6h
push    2000000h
mov     [esp+68h+var_54], 1
mov     esi, [esp+68h+hdc]
push    esi
call    ds:settextcolor
push    2ffffffh
push    esi
call    ds:setbkcolor
jmp     short loc_46f23e
mov     ebp, 0cc0020h
jmp     short loc_46f23a
mov     ebp, 8800c6h
mov     ebx, [edi+6]
mov     eax, [esp+64h+arg_14]
push    2000000h
mov     [esp+68h+var_54], 1
mov     ecx, [eax]
mov     esi, [esp+68h+hdc]
mov     [esp+68h+hdcsrc], ecx
push    esi
call    ds:settextcolor
push    2ffffffh
push    esi
call    ds:setbkcolor
cmp     byte ptr [edi+0eh], 3
jnz     short loc_46f23e
mov     [esp+64h+var_50], 0
jmp     short loc_46f23e
mov     ebp, 990066h
mov     esi, [esp+64h+hdc]
cmp     [esp+64h+var_54], 0
jz      short loc_46f280
test    ebx, ebx
jz      short loc_46f280
mov     eax, [esp+64h+rc.top]
push    0ee0086h
mov     ecx, [esp+68h+rc.left]
push    eax
mov     edx, [esp+6ch+hdcsrc]
push    ecx
mov     eax, [esp+70h+var_3c]
push    edx
sub     eax, [esp+74h+y]
mov     ecx, [esp+74h+y]
mov     edx, [esp+74h+x]
push    eax
mov     eax, [esp+78h+var_40]
sub     eax, [esp+78h+x]
push    eax
push    ecx
push    edx
push    esi
call    ds:bitblt
cmp     [esp+64h+var_50], 0
jz      short loc_46f2df
mov     eax, [edi+13h]
or      eax, 2000000h
push    eax
push    esi
call    ds:settextcolor
mov     eax, [edi+0fh]
or      eax, 2000000h
push    eax
push    esi
call    ds:setbkcolor
mov     ecx, [esp+64h+rc.top]
push    ebp
mov     edx, [esp+68h+rc.left]
push    ecx
mov     eax, [esp+6ch+arg_14]
push    edx
mov     ecx, [eax]
mov     eax, [esp+70h+var_3c]
sub     eax, [esp+70h+y]
push    ecx
mov     ecx, [esp+74h+y]
push    eax
mov     eax, [esp+78h+var_40]
mov     edx, [esp+78h+x]
sub     eax, [esp+78h+x]
push    eax
push    ecx
push    edx
push    esi
call    ds:bitblt
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
push    esi
push    1
mov     esi, [esp+8+hdc]
push    esi
call    ds:setmapmode
push    0
push    0
push    0
push    esi
call    ds:setwindoworgex
push    0
push    0
push    0
push    esi
call    ds:setviewportorgex
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+hdc]
push    8
push    esi
call    ds:setmapmode
mov     edi, [esp+8+arg_4]
push    0
mov     eax, [edi+4]
mov     ecx, [edi]
push    eax
push    ecx
push    esi
call    ds:setviewportorgex
push    0
mov     eax, [edi+0ch]
sub     eax, [edi+4]
push    eax
mov     eax, [edi+8]
sub     eax, [edi]
push    eax
push    esi
call    ds:setviewportextex
mov     edi, [esp+8+arg_8]
push    0
mov     eax, [edi+4]
mov     ecx, [edi]
push    eax
push    ecx
push    esi
call    ds:setwindoworgex
push    0
mov     eax, [edi+0ch]
sub     eax, [edi+4]
push    eax
mov     eax, [edi+8]
sub     eax, [edi]
push    eax
push    esi
call    ds:setwindowextex
pop     edi
pop     esi
retn
push    esi
push    1
mov     esi, [esp+8+arg_0]
push    esi
call    sub_46f410
add     esp, 8
test    eax, eax
jz      short loc_46f3dd
push    0
lea     eax, [esi+0ch]
push    eax
call    sub_46f410
add     esp, 8
test    eax, eax
jz      short loc_46f3dd
mov     eax, 1
pop     esi
retn
push    esi
call    sub_46f3f0
add     esp, 4
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_46f490
add     esp, 4
add     esi, 0ch
push    esi
call    sub_46f490
add     esp, 4
pop     esi
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
push    ebp
xor     edi, edi
push    edi
mov     [ebx], edi
mov     [ebx+4], edi
mov     [ebx+8], edi
call    ds:createcompatibledc
cmp     eax, edi
mov     ebp, eax
mov     [ebx], eax
jz      short loc_46f486
mov     esi, [esp+10h+arg_4]
cmp     esi, edi
jz      short loc_46f446
push    edi
call    ds:getdc
cmp     eax, edi
mov     ebp, eax
jz      short loc_46f486
push    1
push    1
push    ebp
call    ds:createcompatiblebitmap
mov     [ebx+8], eax
test    eax, eax
jz      short loc_46f479
push    eax
mov     eax, [ebx]
push    eax
call    ds:selectobject
mov     [ebx+4], eax
test    eax, eax
jz      short loc_46f479
mov     eax, [ebx]
mov     edi, 1
push    eax
call    sub_40ae90
add     esp, 4
test    esi, esi
jz      short loc_46f486
push    ebp
push    0
call    ds:releasedc
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_46f4d5
mov     eax, [esi+4]
test    eax, eax
jz      short loc_46f4b1
push    eax
push    ecx
call    ds:selectobject
mov     dword ptr [esi+4], 0
mov     eax, [esi+8]
test    eax, eax
jz      short loc_46f4c6
push    eax
call    ds:deleteobject
mov     dword ptr [esi+8], 0
mov     eax, [esi]
push    eax
call    ds:deletedc
mov     dword ptr [esi], 0
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    0
mov     dword ptr [esi+4], 0
call    ds:getdc
mov     [esi], eax
test    eax, eax
jz      short loc_46f51d
mov     ebx, [esp+0ch+cy]
mov     edi, [esp+0ch+w]
push    ebx
push    edi
push    eax
call    ds:createcompatiblebitmap
mov     [esi+4], eax
mov     eax, [esi]
push    eax
push    0
call    ds:releasedc
jmp     short loc_46f525
mov     edi, [esp+0ch+w]
mov     ebx, [esp+0ch+cy]
cmp     dword ptr [esi+4], 0
jnz     short loc_46f531
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    0
call    ds:createcompatibledc
mov     [esi], eax
test    eax, eax
jnz     short loc_46f54f
mov     eax, [esi+4]
push    eax
call    ds:deleteobject
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esi+4]
push    ecx
push    eax
call    ds:selectobject
mov     [esi+8], eax
test    eax, eax
jz      short loc_46f57b
push    0ff0062h
mov     eax, [esi]
push    ebx
push    edi
push    0
push    0
push    eax
call    ds:patblt
mov     eax, [esi]
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esi]
push    eax
call    ds:deletedc
mov     ecx, [esi+4]
push    ecx
call    ds:deleteobject
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_0]
mov     eax, [esp+cy]
mov     edx, [esp+w]
push    eax
mov     dword ptr [ecx+4], 0
push    edx
push    ecx
call    sub_46f4e0
add     esp, 0ch
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+8]
mov     ecx, [esi]
push    eax
push    ecx
call    ds:selectobject
mov     ecx, [esi]
push    ecx
call    ds:deletedc
mov     ecx, [esi+4]
push    ecx
call    ds:deleteobject
pop     esi
retn
push    esi
push    3
mov     esi, [esp+8+hdc]
push    esi
call    ds:setstretchbltmode
mov     eax, [esp+4+arg_14]
push    0cc0020h
mov     edx, [esp+8+ysrc]
mov     ecx, [esp+8+arg_10]
sub     eax, edx
push    eax
mov     eax, [esp+0ch+xsrc]
sub     ecx, eax
push    ecx
push    edx
mov     edx, [esp+14h+arg_0]
push    eax
mov     ecx, [esp+18h+arg_20]
mov     eax, [edx]
mov     edx, [esp+18h+ydest]
push    eax
mov     eax, [esp+1ch+arg_24]
sub     eax, edx
push    eax
mov     eax, [esp+20h+xdest]
sub     ecx, eax
push    ecx
push    edx
push    eax
push    esi
call    ds:stretchblt
pop     esi
retn
push    22h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_46f66b
mov     dword ptr [eax], offset off_4ab7e0
mov     ds:dword_4a8b20, eax
jmp     short loc_46f675
mov     ds:dword_4a8b20, 0
cmp     ds:dword_4a8b20, 0
jnz     short loc_46f684
mov     eax, 80040002h
retn
mov     ecx, ds:dword_4a8b20
call    sub_47feb0
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, 80040002h
retn
push    esi
mov     esi, ecx
call    sub_47fed0
test    [esp+4+arg_0], 1
jz      short loc_46f6b8
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
retn    4
sub     esp, 140h
lea     eax, [esp+140h+pszport]
push    esi
lea     ecx, [esp+144h+pszdriver]
push    eax
lea     edx, [esp+148h+pszdevice]
push    ecx
push    edx
call    sub_46f860
add     esp, 0ch
test    eax, eax
jz      loc_46f7c3
call    sub_46fb30
cmp     [esp+144h+arg_0], 0
jnz     short loc_46f712
push    0
push    1
call    sub_47c860
add     esp, 8
test    eax, eax
jnz     short loc_46f712
call    sub_470170
jmp     short loc_46f717
call    sub_4701b0
mov     esi, eax
test    esi, esi
jz      loc_46f7b2
call    sub_46ff40
mov     hdc, eax
test    eax, eax
jz      short loc_46f79b
call    sub_46fb70
lea     eax, [esp+144h+string]
push    0ch
push    0d16h
push    50h
push    eax
call    sub_47fe70
lea     eax, [esp+154h+string]
add     esp, 10h
push    offset windowname
push    eax
call    sub_46fbd0
add     esp, 8
mov     eax, hdc
push    1
push    eax
call    sub_46ffd0
add     esp, 8
mov     eax, hdc
push    0
push    0
push    esi
push    eax
call    sub_4702d0
add     esp, 10h
mov     eax, hdc
push    1
push    eax
call    sub_470110
mov     hdc, 0
add     esp, 8
jmp     short loc_46f7a7
push    1
push    24h
call    sub_45c150
add     esp, 8
push    esi
call    sub_4703c0
add     esp, 4
jmp     short loc_46f7be
push    5
push    24h
call    sub_45c150
add     esp, 8
call    sub_46fba0
pop     esi
add     esp, 140h
retn
fld     [esp+arg_0]
fmul    ds:dbl_4a8b38
jmp     __ftol
fld     ds:dbl_4a8b30
fmul    [esp+arg_0]
jmp     __ftol
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_491a10
add     esp, 4
xor     eax, eax
mov     ax, ds:word_4a8518
push    2000204h
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_46f849
push    2010640h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_46f849
call    sub_490ec0
movsx   eax, ax
sub     [esi+0ch], eax
mov     dword ptr [esi+4], 0
mov     dword ptr [esi], 0
pop     esi
retn
push    ebx
push    esi
mov     ebx, [esp+8+pszport]
push    edi
mov     edi, [esp+0ch+pszdriver]
push    ebx
mov     esi, [esp+10h+pszdevice]
push    edi
push    esi
call    sub_46fe50
add     esp, 0ch
push    ebx
push    esi
push    edi
call    sub_46fc00
movsx   eax, ax
add     esp, 0ch
test    eax, eax
jnz     short loc_46f89e
push    6
push    24h
call    sub_45c150
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
cmp     eax, 0ffffffffh
jnz     short loc_46f8b5
push    1
push    24h
call    sub_45c150
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 1e0h
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
xor     esi, esi
lea     edi, [esp+1f0h+pprinter]
lea     eax, [esp+1f0h+var_188]
lea     ecx, [esp+1f0h+var_138]
push    eax
lea     edx, [esp+1f4h+pprintername]
push    ecx
mov     [esp+1f8h+var_1dc], ebx
push    edx
call    sub_46fe50
add     esp, 0ch
cmp     [esp+1f0h+pprintername], bl
jz      loc_46fa81
cmp     [esp+1f0h+var_138], bl
jz      loc_46fa81
cmp     [esp+1f0h+var_188], bl
jz      loc_46fa81
cmp     ds:hprinter, ebx
jnz     short loc_46f934
lea     eax, [esp+1f0h+pprintername]
push    ebx
push    offset hprinter
push    eax
call    openprintera
test    eax, eax
jz      loc_46fa81
lea     eax, [esp+1f0h+pcbneeded]
lea     ecx, [esp+1f0h+pprinter]
push    eax
mov     edx, ds:hprinter
push    54h
push    ecx
push    2
push    edx
call    getprintera
test    eax, eax
jnz     short loc_46f9a0
mov     eax, [esp+1f0h+pcbneeded]
push    42h
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_46fa95
push    esi
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      loc_46fa81
lea     eax, [esp+1f0h+pcbneeded]
mov     ecx, [esp+1f0h+pcbneeded]
push    eax
mov     edx, ds:hprinter
push    ecx
push    edi
push    2
push    edx
call    getprintera
test    eax, eax
jz      loc_46fa81
cmp     ds:dword_4a8b5c, 0
jnz     loc_46fa3d
lea     eax, [esp+1f0h+var_94]
push    0
push    eax
mov     ecx, [edi+4]
push    0
mov     edx, ds:hprinter
push    ecx
mov     eax, ds:hwndparent
push    edx
push    eax
call    documentpropertiesa
mov     [esp+1f0h+pcbneeded], eax
test    eax, eax
jz      loc_46fa81
push    2
push    eax
call    sub_45b8f0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      loc_46fa81
push    ebp
call    ds:globallock
test    eax, eax
jz      loc_46fa81
push    2
mov     ecx, ds:hprinter
push    0
mov     edx, ds:hwndparent
push    eax
mov     eax, [edi+4]
push    eax
push    ecx
push    edx
call    documentpropertiesa
push    ebp
test    eax, eax
jnz     short loc_46fa31
call    ds:globalunlock
push    ebp
call    sub_45ba00
add     esp, 4
jmp     short loc_46fa81
call    ds:globalunlock
mov     ds:dword_4a8b5c, ebp
mov     eax, ds:dword_4a8b5c
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_46fa81
push    0eh
mov     ecx, ds:hprinter
push    eax
mov     edx, ds:hwndparent
push    eax
mov     eax, [edi+4]
push    eax
push    ecx
push    edx
call    documentpropertiesa
test    eax, eax
jz      short loc_46fa75
mov     ebx, 1
mov     [esp+1f0h+var_1dc], ebx
mov     eax, ds:dword_4a8b5c
push    eax
call    ds:globalunlock
test    esi, esi
jz      short loc_46fa95
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
add     esp, 4
test    ebx, ebx
jnz     short loc_46faa5
push    1
push    24h
call    sub_45c150
add     esp, 8
mov     eax, [esp+1f0h+var_1dc]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1e0h
retn
cmp     ds:hprinter, 0
jz      short loc_46fade
mov     eax, ds:hprinter
push    eax
call    closeprinter
mov     ds:hprinter, 0
mov     eax, ds:dword_4a8b5c
test    eax, eax
jz      short locret_46fafa
push    eax
call    sub_45ba00
mov     ds:dword_4a8b5c, 0
add     esp, 4
retn
sub     esp, 8
push    esi
push    edi
mov     edi, [esp+10h+hdc]
push    8
push    edi
mov     esi, ds:getdevicecaps
call    esi
mov     [esp+10h+var_8], eax
push    0ah
push    edi
call    esi
mov     [esp+10h+var_4], eax
mov     eax, [esp+10h+var_8]
mov     edx, [esp+10h+var_4]
pop     edi
pop     esi
add     esp, 8
retn
push    0
mov     eax, ds:hwndparent
push    offset sub_470460
mov     ecx, ds:hinstance
mov     ds:dword_4a8b44, 0
push    eax
push    0dfh
push    ecx
call    ds:createdialogparama
mov     ds:dword_4a8b48, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, ds:dword_4a8b48
test    eax, eax
jz      short locret_46fb9d
push    1
push    eax
call    ds:showwindow
mov     eax, ds:dword_4a8b48
push    eax
call    ds:updatewindow
push    0
mov     ecx, ds:hwndparent
push    ecx
call    ds:enablewindow
retn
cmp     ds:dword_4a8b48, 0
jz      short locret_46fbc4
push    1
mov     eax, ds:hwndparent
push    eax
call    ds:enablewindow
mov     ecx, ds:dword_4a8b48
push    ecx
call    ds:destroywindow
retn
push    esi
mov     ecx, ds:dword_4a8b48
test    ecx, ecx
jz      short loc_46fbfa
mov     eax, [esp+4+lpstring]
mov     esi, ds:setdlgitemtexta
push    eax
push    64h
push    ecx
call    esi
mov     ecx, [esp+4+arg_4]
mov     eax, ds:dword_4a8b48
push    ecx
push    73h
push    eax
call    esi
pop     esi
retn
mov     eax, [esp+pszport]
push    esi
xor     si, si
push    edi
mov     ecx, [esp+8+pszdevice]
push    0
mov     edx, [esp+0ch+pszdriver]
push    eax
push    ecx
push    edx
call    ds:createica
mov     edi, eax
test    edi, edi
jz      short loc_46fc40
push    26h
push    edi
call    ds:getdevicecaps
test    al, 1
jz      short loc_46fc33
mov     si, 1
push    edi
call    ds:deletedc
mov     ax, si
pop     edi
pop     esi
retn
mov     si, 0ffffh
pop     edi
mov     ax, si
pop     esi
retn
sub     esp, 154h
push    ebx
push    esi
push    edi
xor     esi, esi
mov     [esp+160h+var_148], esi
push    ebp
mov     [esp+164h+phprinter], esi
cmp     ds:dword_4a8b5c, esi
jz      loc_46fe43
mov     eax, [esp+164h+lpstring1]
cmp     eax, esi
jz      short loc_46fc8f
push    offset awindows
push    eax
call    ds:lstrcmpia
test    eax, eax
jnz     loc_46fe43
lea     eax, [esp+164h+var_f4]
lea     ecx, [esp+164h+var_a4]
lea     edx, [esp+164h+pprintername]
push    eax
push    ecx
push    edx
call    sub_46fe50
add     esp, 0ch
cmp     [esp+164h+pprintername], 0
jz      loc_46fe12
cmp     [esp+164h+var_a4], 0
jz      loc_46fe12
cmp     [esp+164h+var_f4], 0
jz      loc_46fe12
lea     eax, [esp+164h+pprinter]
push    0
lea     ecx, [esp+168h+phprinter]
lea     edx, [esp+168h+pprintername]
mov     [esp+168h+var_150], eax
push    ecx
push    edx
call    openprintera
test    eax, eax
jz      loc_46fe12
lea     eax, [esp+164h+pcbneeded]
lea     ecx, [esp+164h+pprinter]
mov     edx, [esp+164h+phprinter]
push    eax
push    54h
push    ecx
push    2
push    edx
call    getprintera
test    eax, eax
jnz     short loc_46fd63
mov     eax, [esp+164h+pcbneeded]
push    42h
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      loc_46fe12
push    esi
mov     edi, ds:globallock
call    edi
mov     [esp+164h+var_150], eax
test    eax, eax
jz      loc_46fe12
lea     eax, [esp+164h+pcbneeded]
mov     ecx, [esp+164h+pcbneeded]
mov     edx, [esp+164h+var_150]
push    eax
mov     eax, [esp+168h+phprinter]
push    ecx
push    edx
push    2
push    eax
call    getprintera
test    eax, eax
jz      loc_46fe12
jmp     short loc_46fd69
mov     edi, ds:globallock
push    2
mov     eax, ds:dword_4a8b5c
push    eax
call    sub_45bbc0
add     esp, 4
push    eax
call    sub_45b8f0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_46fe12
push    ebx
call    edi
mov     ebp, eax
test    ebp, ebp
jz      short loc_46fe12
mov     eax, ds:dword_4a8b5c
push    eax
call    edi
mov     edi, eax
test    edi, edi
jz      short loc_46fe12
mov     eax, [esp+164h+var_150]
push    2
mov     edx, [esp+168h+phprinter]
push    0
push    ebp
mov     ecx, [eax+4]
push    ecx
mov     eax, ds:hwndparent
push    edx
push    eax
call    documentpropertiesa
test    eax, eax
jz      short loc_46fdf6
push    ebp
push    edi
call    ds:lstrcmpa
test    eax, eax
jnz     short loc_46fdf6
mov     ax, [ebp+24h]
cmp     [edi+24h], ax
jnz     short loc_46fdf6
mov     ax, [ebp+26h]
cmp     [edi+26h], ax
jnz     short loc_46fdf6
mov     ax, [ebp+22h]
cmp     [edi+22h], ax
jnz     short loc_46fdf6
mov     [esp+164h+var_148], 1
mov     eax, ds:dword_4a8b5c
push    eax
call    ds:globalunlock
push    ebx
call    ds:globalunlock
push    ebx
call    sub_45ba00
add     esp, 4
cmp     [esp+164h+phprinter], 0
jz      short loc_46fe23
mov     eax, [esp+164h+phprinter]
push    eax
call    closeprinter
test    esi, esi
jz      short loc_46fe37
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
add     esp, 4
cmp     [esp+164h+var_148], 0
jnz     short loc_46fe43
call    sub_46fac0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 154h
retn
sub     esp, 54h
push    ebx
push    esi
mov     esi, [esp+5ch+arg_0]
push    edi
push    ebp
test    esi, esi
jz      short loc_46fe62
mov     byte ptr [esi], 0
mov     edi, [esp+64h+arg_4]
test    edi, edi
jz      short loc_46fe6d
mov     byte ptr [edi], 0
cmp     [esp+64h+arg_8], 0
jz      short loc_46fe7b
mov     eax, [esp+64h+arg_8]
mov     byte ptr [eax], 0
lea     eax, [esp+64h+returnedstring]
push    50h
push    eax
push    offset windowname
push    offset adevice
push    offset awindows
call    ds:getprofilestringa
test    eax, eax
jz      loc_46ff2b
lea     eax, [esp+64h+returnedstring]
xor     ebx, ebx
mov     [esp+64h+var_54], ebx
cmp     [esp+64h+returnedstring], bl
jz      short loc_46fee1
mov     ebp, ds:charnexta
cmp     byte ptr [eax], 2ch
jnz     short loc_46fed3
mov     byte ptr [eax], 0
inc     eax
cmp     byte ptr [eax], 20h
jnz     short loc_46fecb
push    eax
call    ebp
cmp     byte ptr [eax], 20h
jz      short loc_46fec3
test    ebx, ebx
jnz     short loc_46fedd
mov     ebx, eax
jmp     short loc_46fed6
push    eax
call    ebp
cmp     byte ptr [eax], 0
jnz     short loc_46feb5
jmp     short loc_46fee1
mov     [esp+64h+var_54], eax
test    esi, esi
jz      short loc_46fef5
lea     eax, [esp+64h+returnedstring]
push    50h
push    eax
push    esi
call    sub_47f9f0
add     esp, 0ch
test    edi, edi
jz      short loc_46ff09
test    ebx, ebx
jz      short loc_46ff09
push    50h
push    ebx
push    edi
call    sub_47f9f0
add     esp, 0ch
cmp     [esp+64h+arg_8], 0
jz      short loc_46ff2b
cmp     [esp+64h+var_54], 0
jz      short loc_46ff2b
mov     eax, [esp+64h+var_54]
push    50h
mov     ecx, [esp+68h+arg_8]
push    eax
push    ecx
call    sub_47f9f0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 54h
retn
sub     esp, 64h
push    esi
push    edi
xor     edi, edi
mov     ds:dword_4a8b40, edi
call    sub_4703e0
mov     esi, eax
test    esi, esi
jz      short loc_46ffbe
push    offset proc
push    esi
call    ds:setabortproc
test    ax, ax
jle     short loc_46ffb5
lea     eax, [esp+6ch+buffer]
push    edi
push    edi
push    50h
push    eax
call    sub_47fe70
lea     eax, [esp+7ch+var_64]
add     esp, 10h
lea     ecx, [esp+6ch+buffer]
mov     [eax], edi
push    eax
mov     [eax+4], edi
push    esi
mov     [eax+8], edi
mov     [eax+0ch], edi
mov     [eax+10h], edi
mov     [esp+74h+var_64.cbsize], 14h
mov     [esp+74h+var_64.lpszdocname], ecx
call    ds:startdoca
test    ax, ax
jle     short loc_46ffb5
push    esi
call    ds:startpage
test    ax, ax
jg      short loc_46ffbe
push    esi
call    ds:deletedc
xor     esi, esi
mov     eax, esi
pop     edi
pop     esi
add     esp, 64h
retn
sub     esp, 18h
push    esi
push    edi
mov     edi, [esp+20h+hdc]
push    58h
push    edi
mov     esi, ds:getdevicecaps
call    esi
mov     [esp+20h+var_18], eax
push    5ah
fild    [esp+24h+var_18]
push    edi
fmul    ds:dbl_4ab7e8
fstp    ds:dbl_4a8b30
call    esi
mov     [esp+20h+var_18], eax
push    offset dword_4a8b50
fild    [esp+24h+var_18]
push    0
push    0
push    0eh
push    edi
fmul    ds:dbl_4ab7e8
fstp    ds:dbl_4a8b38
call    ds:escape
push    edi
call    sub_46fb00
mov     [esp+24h+var_18], eax
add     esp, 4
cmp     [esp+20h+arg_4], 0
mov     [esp+20h+var_14], edx
jz      short loc_47004d
push    0
mov     edi, ds:getsystemmetrics
call    edi
mov     esi, eax
push    1
call    edi
jmp     short loc_47006a
lea     eax, [esp+20h+var_10]
push    eax
call    sub_46f7f0
mov     esi, [esp+24h+var_8]
mov     eax, [esp+24h+var_4]
sub     esi, dword ptr [esp+24h+var_10]
sub     eax, dword ptr [esp+24h+var_10+4]
add     esp, 4
mov     dword ptr [esp+20h+var_10], esi
fild    dword ptr [esp+20h+var_10]
fmul    ds:dbl_4a8b30
pushf
cmp     dword_4af150, 0
jnz     short loc_470088
fidivr  [esp+24h+var_18]
jmp     short loc_470091
push    [esp+24h+var_18]
call    unknown_libname_13
popf
mov     dword ptr [esp+20h+var_10], eax
fild    dword ptr [esp+20h+var_10]
fmul    ds:dbl_4a8b38
pushf
cmp     dword_4af150, 0
jnz     short loc_4700b0
fidivr  [esp+24h+var_14]
jmp     short loc_4700b9
push    [esp+24h+var_14]
call    unknown_libname_13
popf
fcom    st(1)
fnstsw  ax
test    ah, 41h
jz      short loc_4700c5
fxch    st(1)
fstp    st
fcom    ds:dbl_4ab7f0
fstp    [esp+20h+var_10]
fnstsw  ax
test    ah, 41h
jz      short loc_4700fc
fld     [esp+20h+var_10]
fmul    ds:dbl_4ab7f8
fld     ds:dbl_4a8b30
fmul    st, st(1)
fstp    ds:dbl_4a8b30
fmul    ds:dbl_4a8b38
fstp    ds:dbl_4a8b38
pop     edi
pop     esi
add     esp, 18h
retn
cmp     ds:dword_4a8b40, 0
push    esi
jl      short loc_470154
cmp     ds:dword_4a8b44, 0
jnz     short loc_470161
cmp     [esp+4+arg_4], 0
mov     esi, [esp+4+hdc]
push    esi
jz      short loc_470145
call    ds:endpage
push    esi
call    ds:enddoc
push    esi
call    ds:deletedc
pop     esi
retn
call    ds:abortdoc
push    esi
call    ds:deletedc
pop     esi
retn
mov     esi, [esp+4+hdc]
push    esi
call    ds:deletedc
pop     esi
retn
mov     esi, [esp+4+hdc]
push    esi
call    ds:deletedc
pop     esi
retn
sub     esp, 10h
call    sub_490d40
test    eax, eax
jnz     short loc_470181
mov     eax, ds:hwndparent
lea     ecx, [esp+10h+rect]
push    ecx
push    eax
call    ds:getwindowrect
lea     ecx, [esp+10h+rect]
inc     [esp+10h+rect.right]
inc     [esp+10h+rect.bottom]
push    ecx
call    sub_470200
add     esp, 14h
retn
sub     esp, 10h
push    esi
push    edi
push    0
call    ds:getdc
mov     edi, eax
push    0ah
push    edi
mov     esi, ds:getdevicecaps
call    esi
push    eax
push    8
push    edi
call    esi
push    eax
push    0
lea     eax, [esp+24h+rc]
push    0
push    eax
call    ds:setrect
push    edi
push    0
call    ds:releasedc
lea     eax, [esp+18h+rc]
push    eax
call    sub_470200
add     esp, 4
pop     edi
pop     esi
add     esp, 10h
retn
sub     esp, 0ch
mov     [esp+0ch+var_4], 0
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+1ch+arg_0]
push    0
mov     ebp, [edi+8]
mov     eax, [edi+0ch]
sub     ebp, [edi]
sub     eax, [edi+4]
mov     [esp+20h+cy], eax
call    ds:getdc
mov     esi, eax
test    esi, esi
jz      loc_4702c2
mov     eax, [esp+1ch+cy]
push    eax
push    ebp
push    esi
call    ds:createcompatiblebitmap
mov     [esp+1ch+h], eax
test    eax, eax
jz      short loc_4702b9
push    esi
call    ds:createcompatibledc
mov     ebx, eax
test    ebx, ebx
jz      short loc_4702ae
mov     eax, [esp+1ch+h]
push    eax
push    ebx
call    ds:selectobject
push    0cc0020h
mov     ecx, [edi]
mov     edx, [esp+20h+cy]
mov     [esp+20h+var_4], eax
mov     eax, [edi+4]
push    eax
push    ecx
push    esi
push    edx
push    ebp
push    0
push    0
push    ebx
call    ds:bitblt
mov     ecx, [esp+1ch+var_4]
push    ecx
push    ebx
call    ds:selectobject
push    ebx
call    ds:deletedc
mov     ecx, [esp+1ch+h]
push    0
push    4
push    0
push    ecx
call    sub_40f140
mov     [esp+2ch+var_4], eax
add     esp, 10h
mov     eax, [esp+1ch+h]
push    eax
call    ds:deleteobject
push    esi
push    0
call    ds:releasedc
mov     eax, [esp+1ch+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 24h
push    ebx
push    esi
mov     esi, [esp+2ch+hmem]
push    edi
push    esi
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      loc_4703ac
mov     edx, [esp+30h+arg_8]
test    edx, edx
jz      short loc_470315
lea     ecx, [esp+30h+rc]
mov     eax, [edx]
mov     ebx, [edx+4]
mov     [ecx], eax
mov     eax, [edx+8]
mov     [ecx+4], ebx
mov     edx, [edx+0ch]
mov     ebx, ds:setrect
mov     [ecx+8], eax
mov     [ecx+0ch], edx
jmp     short loc_47034a
fild    dword ptr [edi+8]
sub     esp, 8
fstp    [esp+38h+var_38]
call    sub_46f7d0
fild    dword ptr [edi+4]
add     esp, 8
push    eax
sub     esp, 8
fstp    qword ptr [esp]
call    sub_46f7e0
add     esp, 8
mov     ebx, ds:setrect
push    eax
push    0
lea     eax, [esp+3ch+rc]
push    0
push    eax
call    ebx
mov     ecx, [esp+30h+arg_c]
test    ecx, ecx
jz      short loc_470375
mov     eax, [ecx]
mov     edx, [ecx+8]
mov     [esp+30h+var_20.left], eax
mov     [esp+30h+var_20.right], edx
mov     eax, [edi+8]
sub     eax, [ecx+0ch]
mov     [esp+30h+var_20.top], eax
mov     eax, [edi+8]
sub     eax, [ecx+4]
mov     [esp+30h+var_20.bottom], eax
jmp     short loc_470388
mov     eax, [edi+8]
mov     ecx, [edi+4]
lea     edx, [esp+30h+var_20]
push    eax
push    ecx
push    0
push    0
push    edx
call    ebx
push    esi
call    ds:globalunlock
lea     eax, [esp+30h+rc]
push    0cc0020h
lea     ecx, [esp+34h+var_20]
push    eax
mov     edx, [esp+38h+hdc]
push    ecx
push    esi
push    edx
call    sub_40f0e0
add     esp, 14h
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     eax, [esp+hmem]
test    eax, eax
jz      short locret_4703d1
push    eax
call    sub_45ba00
add     esp, 4
retn
sub     esp, 0f0h
lea     eax, [esp+0f0h+pszport]
push    esi
xor     esi, esi
push    eax
lea     ecx, [esp+0f8h+pwszdriver]
lea     edx, [esp+0f8h+pwszdevice]
push    ecx
push    edx
call    sub_46fe50
add     esp, 0ch
cmp     [esp+0f4h+pwszdevice], 0
jz      short loc_47044e
cmp     [esp+0f4h+pwszdriver], 0
jz      short loc_47044e
cmp     [esp+0f4h+pszport], 0
jz      short loc_47044e
mov     eax, ds:dword_4a8b5c
cmp     eax, esi
jz      short loc_47042d
push    eax
call    ds:globallock
mov     esi, eax
lea     eax, [esp+0f4h+pszport]
push    esi
lea     ecx, [esp+0f8h+pwszdevice]
push    eax
lea     edx, [esp+0fch+pwszdriver]
push    ecx
push    edx
call    ds:createdca
pop     esi
add     esp, 0f0h
retn
xor     eax, eax
pop     esi
add     esp, 0f0h
retn
mov     eax, [esp+arg_4]
cmp     eax, 110h
jz      short loc_470477
cmp     eax, 111h
jz      short loc_47047f
xor     eax, eax
retn    10h
mov     eax, 1
retn    10h
mov     ds:dword_4a8b44, 1
mov     eax, 1
retn    10h
sub     esp, 1ch
cmp     ds:dword_4a8b44, 0
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_470503
mov     esi, ds:dispatchmessagea
mov     edi, ds:peekmessagea
mov     ebx, ds:isdialogmessagea
mov     ebp, ds:translatemessage
lea     eax, [esp+2ch+msg]
push    1
push    0
push    0
push    0
push    eax
call    edi
test    eax, eax
mov     eax, ds:dword_4a8b48
jz      short loc_470503
lea     ecx, [esp+2ch+msg]
push    ecx
push    eax
call    ebx
test    eax, eax
jnz     short loc_4704fa
lea     eax, [esp+2ch+msg]
push    eax
call    ebp
lea     eax, [esp+2ch+msg]
push    eax
call    esi
cmp     ds:dword_4a8b44, 0
jz      short loc_4704c8
cmp     ds:dword_4a8b44, 1
sbb     eax, eax
pop     ebp
neg     eax
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn    8
push    0
mov     eax, ds:hwndparent
push    0
push    10h
push    eax
call    ds:postmessagea
retn
cmp     ds:dword_4a8b60, 0
jnz     locret_4705ed
mov     ds:dword_4a8b60, 1
call    sub_456930
call    sub_4564a0
call    sub_4379e0
call    sub_448fe0
call    sub_43e670
call    sub_48a4d0
call    sub_40d3e0
call    sub_404a70
call    sub_4850f0
call    sub_458a30
call    sub_471b10
call    sub_460d20
call    sub_40ae20
call    sub_4083c0
call    sub_46fac0
call    sub_410910
call    sub_46d5b0
call    sub_493d90
call    nullsub_1
call    sub_409e40
call    sub_4663f0
call    sub_4705f0
call    sub_47c680
call    sub_486850
call    sub_408f00
call    sub_461600
call    sub_450ef0
call    sub_45d270
call    sub_44bfc0
jmp     sub_490ff0
retn
jmp     sub_44b950
jmp     sub_472a50
mov     ecx, [esp+arg_0]
sub     esp, 10h
lea     eax, [esp+10h+var_10]
push    0
push    eax
push    ecx
call    sub_473660
add     esp, 0ch
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, [esp+10h+var_4]
add     esp, 10h
retn
sub     esp, 18h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+28h+arg_0]
mov     eax, edi
shr     eax, 10h
movsx   ecx, ax
mov     ds:dword_4a9a0c, 0
lea     eax, [ecx+ecx*8]
shl     eax, 4
lea     ebp, word_4a8b68[eax]
cmp     word ptr [ebp+2], 0
jnz     short loc_47067a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
lea     eax, [esp+28h+var_16+2]
push    eax
push    edi
call    sub_472af0
mov     word ptr [esp+30h+var_16], ax
add     esp, 8
test    ax, ax
jz      loc_470721
mov     eax, [esp+28h+var_16+2]
push    eax
mov     esi, [eax+4]
mov     bl, [eax+9]
call    sub_473290
mov     eax, [esp+2ch+var_16+2]
add     esp, 4
mov     al, [eax+8]
push    esi
mov     [esp+2ch+var_17], al
call    sub_45bbf0
add     esp, 4
test    eax, eax
jnz     short loc_4706fe
test    bl, bl
jnz     short loc_4706d7
test    [esp+28h+var_17], 1
jnz     short loc_4706d7
push    0
push    esi
call    sub_45ba10
add     esp, 8
mov     eax, [esp+28h+var_16]
inc     bl
push    eax
call    sub_4729f0
mov     [esp+2ch+var_16+2], eax
add     esp, 4
mov     [eax+4], esi
mov     eax, [esp+28h+var_16+2]
pop     ebp
pop     edi
mov     [eax+9], bl
mov     eax, esi
pop     esi
pop     ebx
add     esp, 18h
retn
test    bl, bl
jnz     short loc_47073f
test    [esp+28h+var_17], 7
jnz     short loc_47073f
push    edi
call    sub_472cc0
add     esp, 4
push    edi
call    sub_470610
add     esp, 4
sub     ds:dword_4a9a08, eax
lea     eax, [esp+28h+var_10]
push    0
push    eax
push    edi
call    sub_473660
add     esp, 0ch
test    eax, eax
jnz     short loc_470749
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
call    sub_408400
sub     eax, ds:dword_4a8640
add     eax, [esp+28h+dwbytes]
add     eax, ds:dword_4a9a08
mov     esi, eax
test    esi, esi
jle     short loc_470796
mov     ebx, ds:dword_4a9a08
mov     eax, esi
cdq
sub     eax, edx
sar     eax, 1
sub     esi, ebx
push    eax
push    0
push    0
push    0
call    sub_4731a0
add     esp, 10h
add     esi, ds:dword_4a9a08
test    esi, esi
jle     short loc_470796
push    esi
call    sub_408500
add     esp, 4
mov     eax, [esp+28h+dwbytes]
push    2
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_4707c4
push    0
push    0
push    0
push    1
call    sub_4731a0
add     esp, 10h
test    ax, ax
jz      short loc_470818
test    esi, esi
jz      short loc_470796
cmp     [esp+28h+dwbytes], 0
jz      short loc_47082c
push    esi
call    ds:globallock
mov     ecx, [esp+28h+ldistancetomove]
mov     edx, [esp+28h+dwbytes]
push    ecx
push    edx
push    eax
mov     edx, [ebp+8]
lea     eax, [ebp+4]
push    edx
mov     ecx, [eax]
push    ecx
push    ebp
call    sub_4728a0
add     esp, 18h
mov     ebx, eax
mov     ebp, ds:globalunlock
push    esi
call    ebp
test    ebx, ebx
jz      short loc_47082c
push    esi
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     ds:dword_4a9a0c, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
pop     ebp
mov     ds:dword_4a9a0c, 8
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    edi
call    sub_472ba0
mov     [esp+2ch+var_16+2], eax
add     esp, 4
test    eax, eax
jz      short loc_47085c
mov     [eax+4], esi
mov     eax, [esp+28h+var_16+2]
mov     byte ptr [eax+9], 1
mov     ecx, [esp+28h+dwbytes]
mov     eax, esi
pop     ebp
add     ds:dword_4a9a08, ecx
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    esi
call    sub_45ba00
add     esp, 4
xor     esi, esi
mov     ds:dword_4a9a0c, 8
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 4
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
push    esi
call    sub_470640
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_4708a0
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
lea     eax, [esp+0ch+var_4]
push    eax
push    esi
call    sub_472af0
add     esp, 8
test    ax, ax
jnz     short loc_4708b7
xor     edi, edi
jmp     short loc_4708f5
mov     eax, [esp+0ch+var_4]
cmp     byte ptr [eax+9], 2
jnb     short loc_4708ea
test    byte ptr [eax+8], 1
jnz     short loc_4708ea
mov     edi, [eax+4]
push    esi
call    sub_472cc0
add     esp, 4
push    esi
call    sub_470610
add     esp, 4
sub     ds:dword_4a9a08, eax
mov     eax, edi
pop     edi
pop     esi
add     esp, 4
retn
push    edi
call    sub_45bab0
add     esp, 4
mov     edi, eax
push    0
push    esi
call    sub_470920
add     esp, 8
test    edi, edi
jnz     short loc_47090e
mov     ds:dword_4a9a0c, 8
mov     eax, edi
pop     edi
pop     esi
add     esp, 4
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
mov     eax, ecx
push    esi
shr     eax, 10h
push    edi
test    ax, ax
jz      short loc_4709ad
lea     eax, [esp+0ch+var_4]
push    eax
push    ecx
call    sub_472af0
mov     si, ax
add     esp, 8
test    si, si
jz      short loc_4709ad
mov     eax, [esp+0ch+var_4]
mov     dl, [eax+9]
add     eax, 9
test    dl, dl
jz      short loc_4709ad
cmp     [esp+0ch+arg_4], 0
jz      short loc_470963
mov     byte ptr [eax], 0
jmp     short loc_470967
dec     dl
mov     [eax], dl
mov     eax, [esp+0ch+var_4]
cmp     byte ptr [eax+9], 0
jnz     short loc_4709ad
test    byte ptr [eax+8], 1
jnz     short loc_4709ad
mov     edi, [eax+4]
test    edi, edi
jz      short loc_4709ad
push    1
push    edi
call    sub_45ba10
add     esp, 8
push    esi
call    sub_4729f0
mov     [esp+10h+var_4], eax
add     esp, 4
mov     [eax+4], edi
mov     eax, [esp+0ch+var_4]
test    byte ptr [eax+8], 2
jnz     short loc_4709ad
push    eax
push    esi
call    sub_4730e0
add     esp, 8
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    ebp
mov     eax, esi
shr     eax, 10h
xor     edi, edi
movsx   ecx, ax
mov     ebp, [esp+18h+hmem]
mov     ds:dword_4a9a0c, edi
lea     eax, [ecx+ecx*8]
shl     eax, 4
cmp     ebp, edi
lea     ebx, word_4a8b68[eax]
jnz     short loc_470a02
push    esi
call    sub_470f40
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebp
call    sub_45bbf0
add     esp, 4
test    eax, eax
jnz     loc_470b66
cmp     word ptr [ebx+2], 0
jz      loc_470b66
test    si, si
jz      loc_470b66
lea     eax, [esp+18h+var_8]
push    eax
push    esi
call    sub_472af0
add     esp, 8
test    ax, ax
jz      loc_470afe
xor     edi, edi
mov     eax, [esp+18h+var_8]
push    eax
call    sub_473290
mov     eax, [esp+1ch+var_8]
add     esp, 4
add     eax, 9
cmp     byte ptr [eax], 0
jnz     short loc_470a5c
mov     byte ptr [eax], 1
mov     eax, [esp+18h+var_8]
mov     ecx, [eax+4]
add     eax, 4
cmp     ebp, ecx
jz      short loc_470a6e
mov     edi, ecx
mov     [eax], ebp
lea     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+nnumberofbytestowrite]
push    eax
push    0
push    ecx
push    ebp
push    esi
call    sub_470c30
add     esp, 14h
mov     ds:dword_4a9a0c, eax
test    eax, eax
jz      short loc_470ab3
test    edi, edi
jz      short loc_470aa6
lea     eax, [esp+18h+var_8]
push    eax
push    esi
call    sub_472af0
mov     eax, [esp+20h+var_8]
add     esp, 8
mov     [eax+4], edi
mov     eax, ds:dword_4a9a0c
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
test    edi, edi
jz      short loc_470ac0
push    edi
call    sub_45ba00
add     esp, 4
mov     edi, 1
test    byte ptr [ebx], 40h
jz      short loc_470ad9
cmp     [esp+18h+var_4], 0
jz      short loc_470ad9
mov     eax, [esp+18h+var_4]
mov     [esp+18h+nnumberofbytestowrite], eax
mov     eax, [esp+18h+nnumberofbytestowrite]
add     ds:dword_4a9a08, eax
test    edi, edi
jz      short loc_470af1
mov     eax, [esp+18h+var_4]
sub     ds:dword_4a9a08, eax
xor     eax, eax
pop     ebp
pop     edi
or      byte ptr [ebx], 4
pop     esi
pop     ebx
add     esp, 8
retn
push    esi
call    sub_472ba0
mov     [esp+1ch+var_8], eax
add     esp, 4
test    eax, eax
jz      short loc_470b4f
lea     ecx, [esp+18h+var_4]
mov     edx, [esp+18h+nnumberofbytestowrite]
push    ecx
mov     [eax+4], ebp
mov     eax, [esp+1ch+var_8]
push    0
push    edx
push    ebp
mov     byte ptr [eax+9], 1
push    esi
call    sub_470c30
add     esp, 14h
mov     ds:dword_4a9a0c, eax
test    eax, eax
jz      short loc_470ac5
push    esi
call    sub_472cc0
add     esp, 4
mov     eax, ds:dword_4a9a0c
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 8
pop     ebp
mov     ds:dword_4a9a0c, 8
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    ebp
mov     eax, esi
shr     eax, 10h
movsx   ecx, ax
lea     eax, [ecx+ecx*8]
shl     eax, 4
lea     ebx, word_4a8b68[eax]
cmp     word ptr [ebx+2], 0
jz      loc_470c1c
test    si, si
jz      short loc_470c1c
mov     edi, [esp+18h+nnumberofbytestowrite]
test    edi, edi
jnz     short loc_470bb4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     eax, [esp+18h+var_4]
push    eax
push    esi
call    sub_472af0
add     esp, 8
cmp     ax, 1
lea     eax, [esp+18h+var_8]
sbb     ebp, ebp
push    eax
inc     ebp
push    1
push    edi
push    0
push    esi
call    sub_470c30
add     esp, 14h
mov     ds:dword_4a9a0c, eax
test    eax, eax
jnz     short loc_470c09
test    byte ptr [ebx], 40h
jz      short loc_470bf5
cmp     [esp+18h+var_8], 0
jz      short loc_470bf5
mov     edi, [esp+18h+var_8]
add     ds:dword_4a9a08, edi
test    ebp, ebp
jz      short loc_470c09
mov     eax, [esp+18h+var_8]
sub     ds:dword_4a9a08, eax
cmp     ds:dword_4a9a0c, 1
sbb     eax, eax
pop     ebp
neg     eax
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
push    ebp
mov     eax, esi
shr     eax, 10h
xor     ebp, ebp
movsx   ecx, ax
push    ebp
lea     eax, [ecx+ecx*8]
shl     eax, 4
lea     ebx, word_4a8b68[eax]
lea     eax, [esp+24h+var_10]
push    eax
push    esi
call    sub_473660
add     esp, 0ch
cmp     eax, 1
sbb     edi, edi
neg     edi
test    edi, edi
jz      short loc_470c8d
lea     eax, [esp+20h+var_10]
push    eax
push    esi
mov     [eax], ebp
mov     [eax+4], ebp
mov     [eax+8], ebp
mov     [eax+0ch], ebp
mov     word ptr [esp+28h+var_10], si
call    sub_473740
add     esp, 8
test    eax, eax
jnz     short loc_470ce4
mov     ecx, [esp+20h+var_4]
mov     eax, [esp+20h+arg_10]
lea     edx, [esp+20h+var_10]
mov     [eax], ecx
mov     ecx, [esp+20h+arg_c]
push    edx
mov     eax, [esp+24h+nnumberofbytestowrite]
push    ecx
mov     edx, [esp+28h+hmem]
push    eax
push    edx
push    ebx
call    sub_470cf0
add     esp, 14h
mov     ebp, eax
test    ebp, ebp
jnz     short loc_470cd4
lea     eax, [esp+20h+var_10]
push    eax
push    esi
call    sub_473740
add     esp, 8
mov     ebp, eax
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
test    edi, edi
jz      short loc_470ce2
push    esi
push    ebx
call    sub_473ad0
add     esp, 8
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 10h
xor     eax, eax
mov     [esp+10h+var_d], al
push    ebx
mov     [esp+14h+var_c], eax
push    esi
push    edi
push    ebp
mov     edi, [esp+20h+arg_0]
cmp     [edi+4], eax
jz      short loc_470d17
test    byte ptr [edi], 2
mov     [esp+20h+var_4], 1
jz      short loc_470d1f
mov     [esp+20h+var_4], 0
mov     ebx, [esp+20h+arg_10]
test    byte ptr [ebx+2], 1
jnz     short loc_470d36
test    byte ptr [edi], 80h
mov     [esp+20h+var_8], 0
jz      short loc_470d3e
mov     [esp+20h+var_8], 1
mov     esi, [esp+20h+nnumberofbytestowrite]
test    esi, esi
jz      short loc_470da3
test    byte ptr [edi], 40h
jz      short loc_470d7b
mov     ebp, [ebx+8]
test    ebp, ebp
jz      short loc_470d76
cmp     [esp+20h+var_8], 0
jz      short loc_470d6a
cmp     [ebx+0ch], esi
jge     short loc_470da5
mov     [esp+20h+var_c], 1393h
xor     ebp, ebp
jmp     short loc_470da5
mov     [esp+20h+var_c], 1394h
xor     ebp, ebp
jmp     short loc_470da5
mov     ebp, [edi+10h]
jmp     short loc_470da5
cmp     [esp+20h+var_8], 0
jz      short loc_470d8e
mov     ebp, [ebx+8]
test    ebp, ebp
jz      short loc_470d8e
cmp     [ebx+0ch], esi
jz      short loc_470da5
push    esi
push    edi
call    sub_473410
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jnz     short loc_470da5
mov     ebp, [edi+10h]
jmp     short loc_470da5
xor     ebp, ebp
mov     eax, [esp+20h+arg_c]
cmp     eax, 1
jnz     short loc_470ddd
cmp     [esp+20h+var_4], 0
jz      short loc_470dd3
lea     eax, [esi+ebp]
cmp     eax, [edi+10h]
jle     short loc_470dd3
push    esi
push    edi
call    sub_472900
mov     [esp+28h+var_c], eax
add     esp, 8
test    eax, eax
jnz     loc_470f34
mov     [esp+20h+var_d], 2
jmp     loc_470e89
cmp     [esp+20h+var_4], 0
jz      loc_470e7c
test    ebp, ebp
jz      loc_470e98
cmp     eax, 2
jz      short loc_470e24
test    byte ptr [edi], 8
jz      short loc_470e00
test    byte ptr [ebx+2], 2
jz      short loc_470e24
lea     eax, [esi+ebp]
cmp     eax, [edi+10h]
jle     short loc_470e16
push    esi
push    edi
call    sub_472900
mov     [esp+28h+var_c], eax
add     esp, 8
cmp     [esp+20h+var_c], 0
jnz     short loc_470e5b
mov     [esp+20h+var_d], 1
jmp     short loc_470e54
mov     eax, [esp+20h+hmem]
push    eax
call    ds:globallock
push    ebp
push    esi
push    eax
mov     edx, [edi+8]
lea     eax, [edi+4]
push    edx
mov     ecx, [eax]
push    ecx
push    edi
call    sub_472850
mov     ecx, [esp+38h+hmem]
mov     [esp+38h+var_c], eax
add     esp, 18h
push    ecx
call    ds:globalunlock
cmp     [esp+20h+var_c], 0
jz      short loc_470e89
cmp     [ebx+8], ebp
jz      short loc_470e70
cmp     [edi+10h], ebp
jz      short loc_470e70
push    esi
push    ebp
push    edi
call    sub_473490
add     esp, 0ch
mov     eax, [esp+20h+var_c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
test    ebp, ebp
jnz     short loc_470e84
test    esi, esi
jnz     short loc_470e89
mov     [esp+20h+var_d], 1
test    ebp, ebp
jz      short loc_470ed4
lea     eax, [esi+ebp]
cmp     [edi+10h], eax
jge     short loc_470e98
mov     [edi+10h], eax
test    ebp, ebp
jz      short loc_470ed4
cmp     [esp+20h+var_8], 0
jz      short loc_470ec0
mov     eax, [ebx+8]
test    eax, eax
jz      short loc_470ec0
mov     ecx, [ebx+0ch]
test    ecx, ecx
jz      short loc_470ec0
cmp     ebp, eax
jz      short loc_470ec0
push    ecx
push    eax
push    edi
call    sub_473490
add     esp, 0ch
or      byte ptr [ebx+2], 1
test    byte ptr [edi], 40h
jz      short loc_470ece
cmp     [ebx+8], ebp
jz      short loc_470ed4
mov     [ebx+8], ebp
mov     [ebx+0ch], esi
mov     ax, [ebx]
test    ax, ax
jz      short loc_470f30
xor     esi, esi
movzx   eax, ax
mov     si, [edi+2]
shl     esi, 10h
or      esi, eax
lea     eax, [esp+20h+var_4]
push    eax
push    esi
call    sub_472af0
add     esp, 8
test    ax, ax
jz      short loc_470f18
mov     eax, [esp+20h+var_4]
mov     cl, [esp+20h+var_d]
add     eax, 8
test    byte ptr [eax], 4
jz      short loc_470f14
or      cl, 4
mov     [eax], cl
jmp     short loc_470f30
mov     [eax], cl
jmp     short loc_470f30
push    esi
call    sub_472ba0
mov     [esp+24h+var_4], eax
add     esp, 4
test    eax, eax
jz      short loc_470f30
mov     cl, [esp+20h+var_d]
mov     [eax+8], cl
mov     eax, [esp+20h+var_c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 14h
push    esi
push    edi
mov     esi, [esp+1ch+arg_0]
mov     eax, esi
shr     eax, 10h
movsx   ecx, ax
lea     eax, [ecx+ecx*8]
shl     eax, 4
lea     edi, word_4a8b68[eax]
cmp     word ptr [edi+2], 0
jz      short loc_470fe1
lea     eax, [esp+1ch+var_10]
push    0
push    eax
push    esi
call    sub_473660
add     esp, 0ch
test    eax, eax
jz      short loc_470fe1
lea     eax, [esp+1ch+var_14]
push    eax
push    esi
call    sub_472af0
add     esp, 8
test    ax, ax
jz      short loc_470fae
mov     eax, [esp+1ch+var_14]
mov     ecx, [eax+4]
push    ecx
call    sub_45ba00
add     esp, 4
push    esi
call    sub_472cc0
mov     ecx, [esp+20h+var_4]
add     esp, 4
sub     ds:dword_4a9a08, ecx
cmp     [esp+1ch+var_4], 0
jz      short loc_470fd4
test    [esp+1ch+var_e], 1
jnz     short loc_470fc1
test    byte ptr [edi], 80h
jz      short loc_470fd4
mov     eax, [esp+1ch+var_4]
mov     ecx, [esp+1ch+var_8]
push    eax
push    ecx
push    edi
call    sub_473490
add     esp, 0ch
push    esi
push    edi
call    sub_473ad0
add     esp, 8
or      byte ptr [edi], 4
pop     edi
pop     esi
add     esp, 14h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     eax, esi
shr     eax, 10h
movsx   ecx, ax
lea     ecx, [ecx+ecx*8]
shl     ecx, 4
test    ax, ax
lea     edi, word_4a8b68[ecx]
jz      short loc_47108e
test    si, si
jz      short loc_47108e
cmp     word ptr [edi+2], 0
jz      short loc_47108e
test    byte ptr [edi+50h], 1
jz      short loc_471029
xor     ax, ax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [edi+64h]
push    eax
push    esi
push    edi
call    sub_473b20
add     esp, 0ch
mov     ecx, [edi+64h]
test    eax, eax
mov     ebx, [ecx]
jl      short loc_471087
test    si, si
jle     short loc_47106c
inc     si
mov     edx, [edi+2ah]
inc     eax
cmp     edx, eax
jle     short loc_471087
mov     ecx, eax
shl     ecx, 4
add     ecx, ebx
cmp     [ecx], si
jnz     short loc_471087
inc     si
add     ecx, 10h
inc     eax
cmp     edx, eax
jg      short loc_471056
mov     ax, si
pop     edi
pop     esi
pop     ebx
retn
dec     si
dec     eax
js      short loc_471087
mov     ecx, eax
shl     ecx, 4
add     ecx, ebx
cmp     [ecx], si
jnz     short loc_471087
dec     si
sub     ecx, 10h
dec     eax
test    eax, eax
jge     short loc_471078
mov     ax, si
pop     edi
pop     esi
pop     ebx
retn
xor     ax, ax
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_470ff0
shr     esi, 10h
add     esp, 4
movzx   edi, ax
movzx   eax, si
shl     eax, 10h
or      edi, eax
test    di, di
jz      short loc_471104
push    42h
push    0
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_471102
push    0
push    esi
push    edi
call    sub_4709c0
add     esp, 0ch
test    eax, eax
jnz     short loc_4710f5
push    0
push    edi
call    sub_470920
mov     ax, di
add     esp, 8
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_471102
push    esi
call    sub_45ba00
add     esp, 4
xor     edi, edi
mov     ax, di
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
lea     eax, [esp+4+var_4]
push    eax
push    ecx
call    sub_472af0
add     esp, 8
test    ax, ax
jz      short loc_47113b
mov     eax, [esp+4+var_4]
cmp     byte ptr [eax+9], 0
jbe     short loc_47113b
mov     eax, [eax+4]
add     esp, 4
retn
xor     eax, eax
add     esp, 4
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
lea     eax, [esp+4+var_4]
push    eax
push    ecx
call    sub_472af0
add     esp, 8
test    ax, ax
jz      short loc_471186
mov     eax, [esp+4+var_4]
cmp     byte ptr [eax+9], 1
jnz     short loc_471186
mov     ecx, eax
mov     eax, [esp+4+arg_4]
mov     [ecx+4], eax
mov     eax, 1
add     esp, 4
retn
xor     eax, eax
add     esp, 4
retn
sub     esp, 1ch
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
xor     ebx, ebx
mov     bx, [esp+2ch+arg_8]
mov     edi, 0
and     ebx, 1
mov     [esp+2ch+hobject], esi
cmp     ebx, 1
mov     [esp+2ch+var_14], esi
adc     edi, 0ffffffffh
mov     [esp+2ch+var_10], esi
and     edi, 2
mov     [esp+2ch+var_c], esi
mov     ds:dword_4a9a0c, esi
cmp     [esp+2ch+arg_0], esi
jz      loc_4712a8
call    sub_44f2d0
mov     ebp, eax
test    ebp, ebp
jz      short loc_471218
lea     eax, [esp+2ch+string1]
push    offset aexe_0
push    eax
call    sub_44fa10
add     esp, 8
push    eax
push    ebp
call    sub_44f6a0
mov     eax, [esp+34h+arg_0]
add     esp, 8
push    ebp
push    eax
call    sub_44f9e0
add     esp, 8
test    eax, eax
jz      short loc_47120f
mov     edi, 8
push    ebp
call    sub_44f4a0
add     esp, 4
lea     eax, [esp+2ch+arg_0]
push    eax
call    sub_44bde0
add     esp, 4
call    sub_44a430
mov     eax, [esp+2ch+arg_0]
push    edi
push    eax
call    sub_44baf0
mov     dword ptr [esp+34h+string1], eax
mov     [esp+34h+hobject], eax
mov     [esp+34h+var_14], edx
add     esp, 8
call    sub_44a430
mov     ds:dword_4a9a0c, eax
test    ebx, ebx
jz      short loc_471294
cmp     dword ptr [esp+2ch+string1], 0
jz      short loc_47125e
cmp     eax, 2
jnz     short loc_471294
mov     eax, [esp+2ch+arg_0]
push    eax
call    sub_44ad30
add     esp, 4
test    eax, eax
jnz     short loc_471294
mov     esi, 1
push    edi
mov     eax, [esp+30h+arg_0]
push    eax
call    sub_44baf0
mov     [esp+34h+hobject], eax
mov     [esp+34h+var_14], edx
add     esp, 8
call    sub_44a430
mov     ds:dword_4a9a0c, eax
cmp     [esp+2ch+hobject], 0
jnz     short loc_4712a8
mov     eax, ds:dword_4a9a0c
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
cmp     ds:dword_4a9a0c, 0
jnz     short loc_47131a
mov     eax, [esp+2ch+arg_14]
mov     ecx, [esp+2ch+arg_10]
mov     edx, [esp+2ch+arg_c]
push    eax
mov     eax, dword ptr [esp+30h+arg_8]
push    ecx
mov     cx, [esp+34h+arg_4]
push    edx
mov     edx, [esp+38h+var_10]
push    eax
mov     eax, [esp+3ch+var_c]
push    ecx
mov     ebx, [esp+40h+hobject]
push    eax
mov     ecx, [esp+44h+var_14]
push    edx
mov     eax, [esp+48h+arg_0]
push    ecx
push    ebx
push    eax
call    sub_471330
add     esp, 28h
test    eax, eax
jz      short loc_47131a
cmp     [esp+2ch+hobject], 0
jz      short loc_471309
mov     eax, [esp+2ch+hobject]
mov     ecx, [esp+2ch+var_14]
push    ecx
push    eax
call    sub_44ae90
add     esp, 8
test    esi, esi
jz      short loc_47131a
mov     eax, [esp+2ch+arg_0]
push    eax
call    sub_44b480
add     esp, 4
mov     eax, ds:dword_4a9a0c
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     ax, [esp+arg_18]
sub     esp, 0ch
and     ax, 1
push    ebx
cmp     ax, 1
push    esi
mov     bx, [esp+14h+arg_14]
push    edi
push    ebp
mov     ebp, 0
adc     ebp, 0ffffffffh
and     ebp, 2
test    bx, bx
jle     loc_471552
cmp     bx, 19h
jg      loc_471552
movsx   eax, bx
mov     ecx, 24h
lea     eax, [eax+eax*8]
shl     eax, 4
lea     esi, word_4a8b68[eax]
xor     eax, eax
mov     edi, esi
rep stosd
mov     edi, [esp+1ch+arg_0]
cmp     edi, eax
jz      short loc_4713f7
mov     eax, [esp+1ch+hfile]
mov     ecx, [esp+1ch+arg_8]
push    ecx
push    eax
call    sub_44a4a0
add     esp, 8
mov     [esi+0ch], eax
push    edi
call    sub_44f920
add     esp, 4
test    eax, eax
jz      short loc_4713b7
mov     dword ptr [esi+80h], 1000h
jmp     short loc_4713c6
push    edi
call    sub_44f7d0
add     esp, 4
mov     [esi+80h], eax
mov     eax, [esi+80h]
cmp     eax, 1000h
jl      short loc_4713d8
mov     eax, 1000h
mov     edx, [esp+1ch+hfile]
mov     ecx, [esp+1ch+arg_8]
mov     [esi+80h], eax
lea     eax, [esi+84h]
push    eax
push    ecx
push    edx
call    sub_44ba90
add     esp, 0ch
mov     di, [esp+1ch+arg_18]
lea     eax, [esp+1ch+var_8]
and     di, 4
push    eax
mov     ecx, [esp+20h+arg_20]
lea     edx, [esp+20h+var_c]
cmp     di, 1
push    ecx
mov     eax, [esp+24h+hfile]
push    edx
mov     ecx, [esp+28h+arg_8]
push    ecx
push    eax
mov     eax, 0
adc     eax, 0ffffffffh
and     ax, 2
push    eax
call    [esp+34h+arg_1c]
add     esp, 18h
mov     ds:dword_4a9a0c, eax
test    eax, eax
jz      short loc_47144f
cmp     dword ptr [esi+0ch], 0
jnz     loc_471510
cmp     [esp+1ch+arg_24], 0
jz      loc_471510
mov     ds:dword_4a9a0c, 0
test    ebp, ebp
jz      short loc_471462
cmp     ebp, 8
jnz     short loc_471465
or      byte ptr [esi], 2
cmp     dword ptr [esi+0ch], 0
jge     short loc_47147a
call    sub_44a430
mov     ds:dword_4a9a0c, eax
jmp     loc_471510
lea     edx, [esi+4]
mov     eax, [esp+1ch+hfile]
mov     ecx, [esp+1ch+arg_8]
mov     [edx], eax
mov     eax, [esp+1ch+arg_1c]
mov     [edx+4], ecx
mov     ecx, [esp+1ch+arg_20]
mov     [esi+2], bx
mov     [esi+6ch], eax
mov     [esi+70h], ecx
mov     edx, [esp+1ch+var_8]
mov     [esi+74h], edx
mov     eax, [esp+1ch+var_c]
mov     [esi+68h], eax
mov     ecx, [esi+0ch]
mov     [esi+10h], ecx
mov     ax, [esi]
or      al, 1
test    byte ptr [esp+1ch+arg_18], 2
mov     [esi], ax
jz      short loc_4714c4
or      al, 8
mov     [esi], ax
test    byte ptr [esp+1ch+arg_18], 8
jz      short loc_4714ce
or      byte ptr [esi], 80h
test    di, di
jnz     short loc_4714ed
cmp     dword ptr [esi+0ch], 0
jz      short loc_4714ed
push    esi
call    sub_4715d0
add     esp, 4
mov     ds:dword_4a9a0c, eax
test    eax, eax
jz      short loc_471548
jmp     short loc_471510
test    byte ptr [esi], 2
jz      short loc_4714fe
mov     ds:dword_4a9a0c, 1388h
jmp     short loc_471510
push    esi
call    sub_471570
add     esp, 4
mov     ds:dword_4a9a0c, eax
test    eax, eax
jz      short loc_471548
mov     eax, [esi+64h]
test    eax, eax
jz      short loc_471520
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [esi+78h]
test    eax, eax
jz      short loc_471530
push    eax
call    sub_45ba00
add     esp, 4
mov     edi, esi
xor     eax, eax
mov     ecx, 24h
pop     ebp
rep stosd
mov     eax, ds:dword_4a9a0c
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, 8
pop     ebp
mov     ds:dword_4a9a0c, 8
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    esi
push    2
mov     esi, [esp+8+arg_0]
push    0
mov     dword ptr [esi+1ah], 4
or      byte ptr [esi], 4
call    sub_45b8f0
add     esp, 8
mov     [esi+64h], eax
test    eax, eax
jnz     short loc_471599
mov     eax, 8
pop     esi
retn
push    2
push    0
call    sub_45b8f0
add     esp, 8
mov     [esi+78h], eax
test    eax, eax
jnz     short loc_4715b3
mov     eax, 8
pop     esi
retn
mov     eax, [esi+68h]
sub     eax, [esi+0ch]
add     eax, 4ah
push    eax
push    esi
call    sub_472900
add     esp, 8
pop     esi
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
lea     edi, [esi+1ah]
mov     eax, [esi+68h]
push    eax
push    4ah
mov     edx, [esi+8]
push    edi
lea     eax, [esi+4]
push    edx
mov     ecx, [eax]
push    ecx
push    esi
call    sub_4728a0
add     esp, 18h
test    eax, eax
jnz     loc_4716d5
mov     eax, [edi]
cmp     eax, 2
jge     short loc_471612
mov     eax, 1389h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     eax, 4
jle     short loc_471623
mov     eax, 1391h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     eax, 3
jg      short loc_471649
lea     ecx, [edi+4]
lea     ebx, [edi+0ch]
mov     eax, [edi+8]
sub     eax, [ecx]
add     eax, [esi+68h]
add     eax, [ebx]
cmp     eax, 0ffffffb6h
jz      short loc_471664
mov     eax, 1388h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     ebx, [edi+0ch]
lea     ecx, [edi+4]
mov     eax, [edi+14h]
add     eax, [ebx]
cmp     eax, [ecx]
jle     short loc_471664
mov     eax, 1388h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     word ptr [edi+20h], 0
jz      short loc_471677
mov     eax, 1388h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [ecx]
cmp     [esi+0ch], eax
jge     short loc_47168a
mov     eax, 1388h
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
lea     ecx, [esp+14h+var_8]
mov     [esi+0ch], eax
mov     [esi+10h], eax
lea     eax, [esp+14h+var_4]
push    eax
push    ecx
push    esi
call    sub_4737d0
add     esp, 0ch
test    eax, eax
jnz     short loc_4716d5
test    byte ptr [esi], 2
jnz     short loc_4716d5
mov     eax, [esp+14h+var_4]
mov     ecx, [esp+14h+var_8]
push    eax
push    ecx
push    esi
call    sub_4716e0
add     esp, 0ch
test    eax, eax
jnz     short loc_4716d5
cmp     dword ptr [edi+14h], 0
jnz     short loc_4716d5
mov     eax, [ebx]
push    eax
push    esi
call    sub_4739b0
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
lea     ecx, [esi+1ah]
mov     eax, [esi+78h]
mov     [esp+14h+var_4], ecx
test    eax, eax
jz      short loc_471702
push    eax
call    sub_45ba00
add     esp, 4
mov     ecx, [esp+14h+var_4]
push    2
mov     dword ptr [esi+7ch], 0
mov     eax, [ecx+10h]
lea     edx, ds:20h[eax*8]
push    edx
call    sub_45b8f0
add     esp, 8
mov     [esi+78h], eax
test    eax, eax
jnz     short loc_471736
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esi+64h]
mov     edi, ds:globallock
push    eax
call    edi
mov     ebx, eax
xor     ebp, ebp
mov     eax, [esi+78h]
push    eax
call    edi
mov     edi, eax
mov     ecx, [esp+14h+var_4]
cmp     [ecx+10h], ebp
jle     short loc_471776
add     ebx, 8
mov     edx, edi
mov     eax, [ebx]
add     ebx, 10h
mov     [edx], eax
add     edx, 8
mov     ecx, [ebx-0ch]
inc     ebp
mov     [edx-4], ecx
mov     ecx, [esp+14h+var_4]
cmp     [ecx+10h], ebp
jg      short loc_47175c
mov     ecx, [esp+14h+var_4]
mov     eax, [ecx+14h]
test    eax, eax
jz      short loc_47178d
lea     edx, [edi+ebp*8]
inc     ebp
mov     [edx], eax
mov     eax, [ecx+0ch]
mov     [edx+4], eax
mov     eax, [esp+14h+arg_4]
test    eax, eax
jz      short loc_4717ab
mov     ecx, [esp+14h+var_4]
cmp     [ecx+14h], eax
jz      short loc_4717ab
lea     ecx, [edi+ebp*8]
inc     ebp
mov     [ecx], eax
mov     eax, [esp+14h+arg_8]
mov     [ecx+4], eax
lea     eax, [edi+ebp*8]
inc     ebp
mov     dword ptr [eax], 0
mov     ecx, [esi+68h]
inc     ebp
add     ecx, 4ah
push    offset sub_471880
push    ebp
mov     [eax+4], ecx
lea     eax, [edi+ebp*8-8]
mov     ecx, [esi+10h]
push    edi
dec     ebp
mov     [eax], ecx
mov     dword ptr [eax+4], 1
call    sub_471900
mov     dword ptr [esi+7ch], 0
mov     dword ptr [esi+32h], 0
add     esp, 0ch
test    ebp, ebp
jle     short loc_471819
lea     ecx, [edi+4]
mov     eax, [ecx-4]
mov     edx, [ecx+4]
add     eax, [ecx]
sub     edx, eax
jz      short loc_471813
mov     ebx, [esi+7ch]
mov     [edi+ebx*8], eax
mov     ebx, [esi+7ch]
mov     [edi+ebx*8+4], edx
inc     dword ptr [esi+7ch]
add     [esi+32h], edx
add     ecx, 8
dec     ebp
jnz     short loc_4717f4
push    offset sub_4718c0
mov     eax, [esi+7ch]
push    eax
push    edi
call    sub_471900
add     esp, 0ch
mov     eax, [esi+78h]
mov     edi, ds:globalunlock
push    eax
call    edi
mov     ecx, [esi+64h]
push    ecx
call    edi
mov     eax, [esi+7ch]
mov     ecx, [esp+14h+var_4]
cmp     [ecx+10h], eax
jz      short loc_47186f
shl     eax, 3
push    2
push    eax
mov     ecx, [esi+78h]
push    ecx
call    sub_45b9b0
add     esp, 0ch
mov     [esi+78h], eax
test    eax, eax
jnz     short loc_47186f
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     ecx, [eax]
sub     ecx, [edx]
jns     short loc_471894
mov     eax, 0ffffffffh
retn
test    ecx, ecx
jle     short loc_47189e
mov     eax, 1
retn
mov     eax, [eax+4]
sub     eax, [edx+4]
jns     short loc_4718ac
mov     eax, 0ffffffffh
retn
test    eax, eax
mov     eax, 1
jg      short locret_4718b7
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     ecx, [eax+4]
sub     ecx, [edx+4]
jns     short loc_4718d6
mov     eax, 0ffffffffh
retn
test    ecx, ecx
jle     short loc_4718e0
mov     eax, 1
retn
mov     eax, [eax]
sub     eax, [edx]
jns     short loc_4718ec
mov     eax, 0ffffffffh
retn
test    eax, eax
mov     eax, 1
jg      short locret_4718f7
xor     eax, eax
retn
sub     esp, 18h
cmp     [esp+18h+arg_4], 0
push    ebx
push    esi
push    edi
push    ebp
jle     loc_4719fe
mov     esi, 1
mov     ecx, 9
mov     eax, [esp+28h+arg_4]
cdq
idiv    ecx
cmp     eax, esi
jl      short loc_47192f
lea     esi, [esi+esi*2+1]
cmp     eax, esi
jge     short loc_471927
test    esi, esi
jle     loc_4719fe
lea     eax, [esi+1]
mov     [esp+28h+var_14], eax
cmp     [esp+28h+arg_4], eax
jl      loc_4719ea
sub     eax, esi
mov     ecx, [esp+28h+arg_0]
lea     edx, [ecx+eax*8-8]
mov     eax, [esp+28h+var_14]
mov     [esp+28h+var_c], edx
lea     edx, [ecx+eax*8-8]
mov     [esp+28h+var_10], edx
mov     eax, [esp+28h+var_10]
mov     edi, [esp+28h+var_14]
cmp     edi, esi
mov     ecx, [eax]
mov     edx, [eax+4]
mov     [esp+28h+var_8], ecx
mov     [esp+28h+var_4], edx
jle     short loc_4719b6
mov     ebx, eax
mov     ebp, [esp+28h+var_c]
lea     eax, ds:0[esi*8]
mov     [esp+28h+var_18], eax
lea     eax, [esp+28h+var_8]
push    ebp
push    eax
call    [esp+30h+arg_8]
add     esp, 8
test    eax, eax
jge     short loc_4719b6
mov     eax, [ebp+0]
mov     ecx, [ebp+4]
sub     ebp, [esp+28h+var_18]
sub     edi, esi
mov     [ebx], eax
mov     [ebx+4], ecx
sub     ebx, [esp+28h+var_18]
cmp     edi, esi
jg      short loc_47198c
mov     eax, [esp+28h+var_8]
mov     edx, [esp+28h+var_4]
add     [esp+28h+var_c], 8
mov     ecx, [esp+28h+arg_0]
inc     [esp+28h+var_14]
add     [esp+28h+var_10], 8
lea     ecx, [ecx+edi*8]
mov     [ecx-8], eax
sub     ecx, 8
mov     eax, [esp+28h+var_14]
cmp     [esp+28h+arg_4], eax
mov     [ecx+4], edx
jge     loc_471962
mov     ecx, 3
mov     eax, esi
cdq
idiv    ecx
mov     esi, eax
test    esi, esi
jg      loc_471937
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     cx, [esp+arg_0]
push    esi
mov     ds:dword_4a9a0c, 0
movsx   eax, cx
push    edi
lea     eax, [eax+eax*8]
shl     eax, 4
lea     edi, word_4a8b68[eax]
test    byte ptr [edi], 1
jnz     short loc_471a3a
xor     eax, eax
pop     edi
pop     esi
retn
push    0
push    offset loc_471ad0
push    ecx
call    sub_472f20
add     esp, 0ch
mov     eax, [edi+64h]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [edi+78h]
test    eax, eax
jz      short loc_471a66
push    eax
call    sub_45ba00
add     esp, 4
lea     esi, [edi+4]
cmp     dword ptr [esi], 0
jz      short loc_471abe
test    byte ptr [edi], 2
jnz     short loc_471aaf
mov     eax, [edi+0ch]
mov     edx, [esi]
push    eax
mov     ecx, [esi+4]
push    ecx
push    edx
call    sub_44afd0
add     esp, 0ch
test    eax, eax
jge     short loc_471a94
call    sub_44a430
mov     ds:dword_4a9a0c, eax
test    byte ptr [edi], 10h
jnz     short loc_471aaf
lea     eax, [edi+84h]
mov     edx, [esi]
push    eax
mov     ecx, [esi+4]
push    ecx
push    edx
call    sub_44bac0
add     esp, 0ch
mov     ecx, [esi]
mov     eax, [esi+4]
push    eax
push    ecx
call    sub_44ae90
add     esp, 8
xor     eax, eax
mov     ecx, 24h
rep stosd
mov     eax, ds:dword_4a9a0c
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+10h]
mov     eax, [esi]
push    eax
call    sub_470610
add     esp, 4
sub     ds:dword_4a9a08, eax
mov     eax, [esi+4]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [esi]
push    eax
call    sub_472cc0
add     esp, 4
mov     eax, 1
pop     esi
retn
push    ebx
push    esi
mov     si, 19h
push    edi
mov     ebx, offset dword_4a8bf8
lea     edi, [ebx+4]
cmp     dword ptr [edi], 0
jz      short loc_471b51
mov     ax, [ebx]
test    al, 1
jz      short loc_471b51
test    al, 2
jnz     short loc_471b42
mov     eax, [ebx+0ch]
mov     edx, [edi]
push    eax
mov     ecx, [edi+4]
push    ecx
push    edx
call    sub_44afd0
add     esp, 0ch
mov     ecx, [edi]
mov     eax, [edi+4]
push    eax
push    ecx
call    sub_44ae90
add     esp, 8
mov     edi, ebx
xor     eax, eax
mov     ecx, 24h
add     ebx, 90h
rep stosd
dec     si
jnz     short loc_471b1c
call    sub_472a90
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 8
push    esi
push    edi
mov     si, [esp+10h+arg_4]
mov     edi, 2
push    esi
call    sub_471bd0
mov     [esp+14h+var_8], eax
add     esp, 4
cmp     [esp+10h+var_8], 0
jz      short loc_471bb9
mov     eax, [esp+10h+arg_8]
mov     ecx, [esp+10h+arg_0]
push    eax
push    ecx
call    sub_44f950
add     esp, 8
test    eax, eax
jz      short loc_471bb9
push    esi
call    sub_471bf0
add     esp, 4
cmp     eax, 1
sbb     edi, edi
neg     edi
mov     ax, di
pop     edi
pop     esi
add     esp, 8
retn
movsx   ecx, [esp+arg_0]
lea     ecx, [ecx+ecx*8]
shl     ecx, 4
add     ecx, offset dword_4a8b6c
mov     eax, [ecx]
mov     edx, [ecx+4]
retn
movsx   ecx, [esp+arg_0]
xor     eax, eax
lea     ecx, [ecx+ecx*8]
shl     ecx, 4
mov     ax, ds:word_4a8b68[ecx]
and     eax, 2
retn
movsx   eax, [esp+arg_0]
lea     eax, [eax+eax*8]
shl     eax, 4
add     eax, offset word_4a8b68
test    byte ptr [eax], 1
jz      short loc_471c29
mov     eax, [eax+0ch]
retn
mov     eax, 0ffffffffh
retn
mov     eax, [esp+0ch]
and     byte ptr [eax+2], 0feh
retn
mov     ax, [esp+arg_0]
movsx   ecx, ax
lea     ecx, [ecx+ecx*8]
shl     ecx, 4
cmp     ds:word_4a8b6a[ecx], 0
jnz     short loc_471c65
mov     ds:dword_4a9a0c, 0
xor     eax, eax
retn
push    0
push    offset sub_471c90
push    eax
call    sub_472f20
add     esp, 0ch
xor     eax, eax
mov     ds:dword_4a9a0c, 0
retn
push    esi
mov     esi, [esp+4+arg_8]
test    byte ptr [esi+8], 1
jnz     short loc_471cc9
cmp     byte ptr [esi+9], 0
jnz     short loc_471cc9
mov     eax, [esi]
push    eax
call    sub_470610
add     esp, 4
sub     ds:dword_4a9a08, eax
mov     eax, [esi+4]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, [esi]
push    eax
call    sub_472cc0
add     esp, 4
mov     eax, 1
pop     esi
retn
sub     esp, 10h
push    esi
push    edi
mov     esi, [esp+18h+arg_8]
cmp     dword ptr [esi+4], 0
jz      short loc_471d33
test    byte ptr [esi+8], 1
jz      short loc_471d33
lea     eax, [esp+18h+var_10]
push    0
push    eax
mov     ecx, [esi]
push    ecx
call    sub_473660
add     esp, 0ch
test    eax, eax
jz      short loc_471d33
mov     edi, [esi+4]
push    edi
call    ds:globallock
mov     ecx, [esp+18h+ldistancetomove]
mov     edx, [esp+18h+nnumberofbytestowrite]
push    ecx
push    edx
mov     ecx, [esp+20h+arg_4]
push    eax
lea     eax, [ecx+4]
mov     edx, [eax]
mov     eax, [eax+4]
push    eax
push    edx
push    ecx
call    sub_472850
add     esp, 18h
mov     ds:dword_4a9a0c, eax
push    edi
call    ds:globalunlock
mov     eax, 1
pop     edi
and     byte ptr [esi+8], 0feh
pop     esi
add     esp, 10h
retn
push    ebx
push    esi
mov     si, [esp+8+arg_0]
push    edi
movsx   eax, si
push    ebp
lea     eax, [eax+eax*8]
shl     eax, 4
lea     edi, word_4a8b68[eax]
cmp     word ptr [edi+2], 0
jz      loc_471f2c
mov     ax, [edi]
test    al, 2
jnz     loc_471f2c
test    al, 4
jz      loc_471f2c
lea     ebx, [edi+4]
cmp     dword ptr [ebx], 0
jz      loc_471f2c
lea     eax, [edi+74h]
mov     ecx, [edi+70h]
push    eax
lea     edx, [edi+68h]
push    ecx
mov     eax, [ebx]
push    edx
mov     ecx, [ebx+4]
push    ecx
push    eax
push    1
call    dword ptr [edi+6ch]
add     esp, 18h
mov     ds:dword_4a9a0c, eax
test    eax, eax
jnz     loc_471f22
lea     ebp, [edi+1ah]
push    edi
push    offset sub_471cd0
push    esi
mov     dword ptr [ebp+0], 4
call    sub_472f20
add     esp, 0ch
cmp     ds:dword_4a9a0c, 0
jnz     loc_471f22
mov     eax, [esp+10h+arg_4]
push    eax
push    edi
call    sub_472480
add     esp, 8
mov     ds:dword_4a9a0c, eax
test    eax, eax
jnz     loc_471f22
mov     eax, [edi+26h]
test    eax, eax
jz      short loc_471e58
cmp     dword ptr [edi+2eh], 0
jz      short loc_471e3c
mov     eax, [edi+64h]
push    eax
call    ds:globallock
mov     ecx, [edi+2eh]
mov     edx, [edi+26h]
push    ecx
push    edx
push    eax
mov     ecx, [ebx+4]
mov     eax, [ebx]
push    ecx
push    eax
push    edi
call    sub_472850
add     esp, 18h
mov     ds:dword_4a9a0c, eax
mov     ecx, [edi+64h]
push    ecx
call    ds:globalunlock
jmp     short loc_471e4b
push    eax
push    edi
call    sub_4739b0
add     esp, 8
mov     ds:dword_4a9a0c, eax
cmp     ds:dword_4a9a0c, 0
jnz     loc_471f22
mov     eax, [edi+10h]
push    edi
sub     eax, [edi+68h]
sub     eax, [edi+26h]
sub     eax, 4ah
mov     [edi+22h], eax
sub     eax, [edi+32h]
mov     [edi+36h], eax
call    sub_472420
add     esp, 4
test    eax, eax
jz      short loc_471e89
pop     ebp
mov     ds:dword_4a9a0c, eax
mov     eax, ds:dword_4a9a0c
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [edi+10h]
mov     [edi+1eh], eax
mov     eax, [ebx]
mov     ecx, [edi+68h]
push    ecx
push    4ah
push    ebp
mov     ecx, [ebx+4]
push    ecx
push    eax
push    edi
call    sub_472850
add     esp, 18h
test    eax, eax
jz      short loc_471eb9
pop     ebp
mov     ds:dword_4a9a0c, eax
mov     eax, ds:dword_4a9a0c
pop     edi
pop     esi
pop     ebx
retn
and     byte ptr [edi+50h], 0feh
mov     ecx, [ebx]
mov     eax, [ebx+4]
push    eax
push    ecx
call    sub_44b340
add     esp, 8
test    eax, eax
jz      short loc_471ed5
mov     ds:dword_4a9a0c, eax
mov     ax, [edi]
and     ax, 0fffbh
mov     [edi], ax
or      al, 10h
mov     [edi], ax
mov     ecx, [edi+10h]
mov     [edi+0ch], ecx
cmp     ds:dword_4a9a0c, 0
jnz     short loc_471f22
push    0
push    0
push    edi
call    sub_4716e0
add     esp, 0ch
push    0
push    offset loc_471c30
push    esi
call    sub_4735f0
add     esp, 0ch
push    1
push    esi
call    sub_471c40
mov     dword ptr [edi+2eh], 0
add     esp, 8
mov     eax, ds:dword_4a9a0c
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
mov     ds:dword_4a9a0c, 0
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, word ptr [esp+arg_0]
sub     esp, 0a4h
lea     eax, [eax+eax*8]
shl     eax, 4
push    ebx
mov     [esp+0a8h+lpbuffer], 0
mov     ecx, ds:dword_4a8bdc[eax]
push    esi
push    edi
lea     ebx, word_4a8b68[eax]
push    ebp
mov     [esp+0b4h+var_8c], ecx
mov     eax, [ebx+64h]
push    eax
call    sub_45bab0
mov     [esp+0b8h+hmem], eax
add     esp, 4
test    eax, eax
jnz     short loc_471f91
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn
lea     edi, [esp+0b4h+buffer]
lea     esi, [ebx+1ah]
mov     ecx, 12h
rep movsd
movsw
lea     eax, [esp+0b4h+var_8c]
mov     ecx, [ebx+70h]
lea     edx, [esp+0b4h+ldistancetomove]
push    eax
mov     eax, [esp+0b8h+hfile]
push    ecx
mov     ecx, [esp+0bch+arg_8]
push    edx
push    ecx
push    eax
push    2
call    dword ptr [ebx+6ch]
add     esp, 18h
mov     ds:dword_4a9a0c, eax
test    eax, eax
jnz     loc_4723ea
mov     eax, [esp+0b4h+ldistancetomove]
lea     ecx, [ebx+1ah]
mov     edx, [esp+0b4h+hfile]
push    eax
mov     eax, [esp+0b8h+arg_8]
push    4ah
push    ecx
push    eax
push    edx
push    ebx
call    sub_472850
add     esp, 18h
mov     ds:dword_4a9a0c, eax
test    eax, eax
jnz     loc_4723ea
mov     ebp, [esp+0b4h+ldistancetomove]
mov     eax, [esp+0b4h+hmem]
add     ebp, 4ah
push    eax
call    ds:globallock
mov     [esp+0b4h+lpbuffer], eax
push    40000h
push    200h
call    sub_45bcf0
mov     [esp+0bch+var_90], eax
add     esp, 8
test    eax, eax
jnz     short loc_472044
mov     ds:dword_4a9a0c, 8
jmp     loc_4723ea
mov     edx, [ebx+8]
lea     eax, [ebx+4]
mov     ecx, [eax]
mov     eax, [esp+0b4h+hfile]
mov     [esp+0b4h+var_78], ecx
mov     [esp+0b4h+var_70], eax
mov     ecx, [esp+0b4h+arg_8]
mov     [esp+0b4h+var_74], edx
mov     edx, [esp+0b4h+var_90]
mov     [esp+0b4h+var_6c], ecx
mov     [esp+0b4h+var_5c], ebp
push    edx
mov     [esp+0b8h+var_58], 0
call    ds:globallock
mov     ecx, [esp+0b4h+var_90]
mov     [esp+0b4h+var_54], eax
push    ecx
call    sub_45bbc0
mov     [esp+0b8h+var_a4], 0
mov     [esp+0b8h+var_50], eax
add     esp, 4
cmp     [esp+0b4h+var_3c], 0
jle     loc_4721eb
mov     esi, [esp+0b4h+lpbuffer]
add     esi, 0ch
cmp     ds:dword_4a9a0c, 0
jnz     loc_472202
lea     eax, [esp+0b4h+var_88]
xor     ecx, ecx
mov     cx, [esi-0ch]
push    eax
xor     eax, eax
mov     ax, [ebx+2]
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_472b40
add     esp, 8
test    ax, ax
jz      short loc_47212c
cmp     [esp+0b4h+var_84], 0
jz      short loc_47212c
mov     eax, [esp+0b4h+var_84]
push    eax
call    sub_45bbf0
add     esp, 4
test    eax, eax
jnz     short loc_47212c
mov     eax, [esp+0b4h+var_84]
push    eax
call    sub_45bbc0
and     [esp+0b8h+var_80], 0feh
mov     [esp+0b8h+var_64], 1
mov     edi, eax
mov     eax, [esp+0b8h+var_84]
add     esp, 4
push    eax
call    ds:globallock
mov     [esp+0b4h+var_68], eax
cmp     [esi], edi
jle     short loc_47213b
mov     [esi], edi
jmp     short loc_47213b
mov     [esp+0b4h+var_64], 0
mov     eax, [esi-4]
mov     [esp+0b4h+var_68], eax
mov     eax, [esi]
mov     [esp+0b4h+var_60], eax
cmp     dword ptr [esi], 0
mov     [esi-4], ebp
jg      short loc_472150
mov     dword ptr [esi-4], 0
add     ebp, [esp+0b4h+var_60]
cmp     [esp+0b4h+var_64], 1
jz      short loc_472162
cmp     [esp+0b4h+var_68], 0
jz      short loc_472170
lea     eax, [esp+0b4h+var_78]
push    eax
push    ebx
call    sub_472740
add     esp, 8
cmp     [esp+0b4h+var_64], 1
jnz     short loc_4721d6
mov     eax, [esp+0b4h+var_84]
push    eax
call    ds:globalunlock
cmp     [esp+0b4h+var_7f], 0
jnz     short loc_4721d6
mov     edi, [esp+0b4h+var_84]
push    1
push    edi
call    sub_45ba10
lea     eax, [esp+0bch+var_88]
mov     [esp+0bch+var_84], edi
add     esp, 8
push    eax
call    sub_472c70
lea     eax, [esp+0b8h+var_a0]
add     esp, 4
xor     ecx, ecx
push    eax
mov     cx, [esi-0ch]
xor     eax, eax
mov     ax, [ebx+2]
shl     eax, 10h
or      eax, ecx
push    eax
call    sub_472af0
mov     ecx, [esp+0bch+var_a0]
add     esp, 8
push    ecx
push    eax
call    sub_4730e0
add     esp, 8
add     esi, 10h
inc     [esp+0b4h+var_a4]
mov     eax, [esp+0b4h+var_a4]
cmp     [esp+0b4h+var_3c], eax
jg      loc_4720b0
cmp     ds:dword_4a9a0c, 0
jnz     short loc_472202
lea     eax, [esp+0b4h+var_78]
push    eax
push    ebx
call    sub_472800
add     esp, 8
mov     eax, [esp+0b4h+var_90]
push    eax
call    ds:globalunlock
mov     eax, [esp+0b4h+var_90]
push    eax
call    sub_45ba00
add     esp, 4
cmp     ds:dword_4a9a0c, 0
jnz     loc_4723ea
cmp     [esp+0b4h+nnumberofbytestowrite], 0
jz      short loc_47226d
mov     eax, [esp+0b4h+nnumberofbytestowrite]
push    ebp
mov     ecx, [esp+0b8h+lpbuffer]
push    eax
mov     edx, [esp+0bch+hfile]
push    ecx
mov     eax, [esp+0c0h+arg_8]
mov     [esp+0c0h+var_38], ebp
push    eax
push    edx
push    ebx
call    sub_472850
add     ebp, [esp+0cch+nnumberofbytestowrite]
add     esp, 18h
mov     ds:dword_4a9a0c, eax
test    eax, eax
jnz     loc_4723ea
mov     eax, [esp+0b4h+hmem]
xor     esi, esi
push    eax
call    ds:globalunlock
mov     eax, ebp
mov     [esp+0b4h+lpbuffer], esi
sub     eax, [esp+0b4h+ldistancetomove]
mov     [esp+0b4h+var_34], esi
sub     eax, [esp+0b4h+nnumberofbytestowrite]
mov     ecx, [esp+0b4h+ldistancetomove]
sub     eax, 4ah
push    ecx
mov     [esp+0b8h+var_44], eax
push    4ah
lea     edx, [esp+0bch+buffer]
mov     ecx, [esp+0bch+arg_8]
mov     [esp+0bch+var_30], eax
push    edx
mov     eax, [esp+0c0h+hfile]
push    ecx
mov     [esp+0c4h+var_48], ebp
push    eax
mov     [esp+0c8h+buffer], 4
push    ebx
call    sub_472850
add     esp, 18h
test    eax, eax
jz      short loc_4722dc
mov     ds:dword_4a9a0c, eax
jmp     loc_4723ea
mov     eax, [esp+0b4h+hfile]
mov     ecx, [esp+0b4h+arg_8]
push    ecx
push    eax
call    sub_44b340
add     esp, 8
test    eax, eax
jz      short loc_472302
mov     ds:dword_4a9a0c, eax
jmp     loc_4723ea
cmp     [esp+0b4h+arg_14], 0
jz      loc_4723ea
cmp     dword ptr [ebx+4], 0
jz      short loc_472346
test    byte ptr [ebx], 10h
jnz     short loc_472334
lea     eax, [ebx+84h]
push    eax
mov     edx, [ebx+8]
lea     eax, [ebx+4]
push    edx
mov     ecx, [eax]
push    ecx
call    sub_44bac0
add     esp, 0ch
mov     edx, [ebx+8]
lea     eax, [ebx+4]
push    edx
mov     ecx, [eax]
push    ecx
call    sub_44ae90
add     esp, 8
push    ebx
call    sub_4733c0
add     esp, 4
test    eax, eax
jz      loc_4723ea
lea     eax, [ebx+4]
mov     ecx, [esp+0b4h+hfile]
mov     edx, [esp+0b4h+arg_8]
mov     [eax], ecx
mov     [eax+4], edx
and     byte ptr [ebx], 0f9h
mov     ecx, [ebx+64h]
push    ecx
call    sub_45ba00
mov     ecx, [esp+0b8h+hmem]
lea     esi, [esp+0b8h+buffer]
add     esp, 4
xor     edx, edx
lea     edi, [ebx+1ah]
mov     [ebx+64h], ecx
mov     ecx, 12h
mov     [esp+0b4h+hmem], edx
rep movsd
movsw
push    edx
mov     [ebx+10h], ebp
push    offset loc_471c30
mov     [ebx+0ch], ebp
mov     ecx, [esp+0bch+ldistancetomove]
mov     [ebx+68h], ecx
mov     [ebx+2eh], edx
mov     edx, [esp+0bch+arg_0]
push    edx
call    sub_4735f0
mov     ecx, [esp+0c0h+arg_0]
add     esp, 0ch
push    1
push    ecx
call    sub_471c40
mov     edx, [ebx+8]
add     esp, 8
lea     ecx, [ebx+84h]
lea     eax, [ebx+4]
push    ecx
push    edx
mov     ecx, [eax]
push    ecx
call    sub_44ba90
add     esp, 0ch
cmp     [esp+0b4h+lpbuffer], 0
jz      short loc_4723fc
mov     eax, [esp+0b4h+hmem]
push    eax
call    ds:globalunlock
cmp     [esp+0b4h+hmem], 0
jz      short loc_472410
mov     eax, [esp+0b4h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, ds:dword_4a9a0c
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     edi, [esp+0ch+arg_0]
push    ebp
xor     esi, esi
mov     eax, [edi+78h]
mov     edx, [eax]
mov     eax, [edi+7ch]
cmp     eax, ebx
jle     short loc_47244d
lea     ecx, [edx+4]
mov     ebp, [ecx-4]
add     ebp, [ecx]
cmp     ebp, [edi+10h]
jge     short loc_47244d
add     ecx, 8
inc     esi
cmp     esi, eax
jl      short loc_47243b
cmp     esi, eax
jge     short loc_472471
mov     eax, [edx+esi*8+4]
neg     eax
push    eax
push    edi
call    sub_472900
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jnz     short loc_472471
push    esi
push    edi
call    sub_4735a0
add     esp, 8
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
sub     esp, 44h
cmp     eax, 1
push    ebx
mov     [esp+48h+var_44], 0
push    esi
push    edi
push    ebp
jz      short loc_4724a7
cmp     eax, 2
jz      short loc_4724c0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     esi, [esp+54h+arg_0]
mov     eax, [esi+68h]
mov     ecx, [esi+0ch]
add     eax, 4ah
cmp     eax, ecx
jg      short loc_4724ba
mov     eax, ecx
mov     [esp+54h+var_3c], eax
jmp     short loc_4724db
mov     esi, [esp+54h+arg_0]
push    0
push    0
push    esi
mov     eax, [esi+68h]
add     eax, 4ah
mov     [esp+60h+var_3c], eax
call    sub_4716e0
add     esp, 0ch
mov     eax, [esi+2eh]
test    eax, eax
jz      short loc_4724f7
mov     ecx, [esi+26h]
push    ecx
push    eax
push    esi
call    sub_473490
mov     dword ptr [esi+2eh], 0
add     esp, 0ch
mov     eax, [esi+78h]
push    eax
call    ds:globallock
mov     [esp+54h+var_40], eax
push    offset sub_471880
mov     eax, [esi+7ch]
mov     edx, [esp+58h+var_40]
push    eax
xor     edi, edi
push    edx
call    sub_471900
add     esp, 0ch
mov     eax, [esi+7ch]
test    eax, eax
jle     short loc_472538
mov     ecx, [esp+54h+var_40]
mov     edx, [esp+54h+var_3c]
cmp     [ecx], edx
jge     short loc_472538
add     ecx, 8
inc     edi
cmp     edi, eax
jl      short loc_472528
cmp     edi, eax
jl      short loc_472550
mov     eax, [esi+78h]
push    eax
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     eax, [esi+10h]
sub     eax, [esp+54h+var_3c]
cmp     eax, 40000h
jl      short loc_472563
mov     eax, 40000h
push    eax
push    200h
call    sub_45bcf0
mov     [esp+5ch+hmem], eax
add     esp, 8
test    eax, eax
jnz     short loc_472586
mov     [esp+54h+var_44], 8
jmp     loc_47271e
mov     edx, [esi+8]
xor     ebx, ebx
lea     eax, [esi+4]
mov     [esp+54h+var_1c], ebx
mov     [esp+54h+var_14], ebx
mov     ecx, [eax]
mov     [esp+54h+var_34], ecx
mov     [esp+54h+var_18], ebx
mov     eax, [esp+54h+var_34]
mov     ecx, [esp+54h+var_40]
mov     [esp+54h+var_2c], eax
mov     [esp+54h+var_24], eax
lea     ebp, [ecx+edi*8]
mov     [esp+54h+var_28], edx
mov     ecx, [esp+54h+hmem]
mov     [esp+54h+var_20], edx
mov     eax, [ebp+0]
push    ecx
mov     [esp+58h+var_10], eax
mov     [esp+58h+var_c], ebx
call    ds:globallock
mov     ecx, [esp+54h+hmem]
mov     [esp+54h+var_8], eax
push    ecx
call    sub_45bbc0
mov     [esp+58h+var_4], eax
add     esp, 4
mov     ds:dword_4a9a0c, ebx
mov     ebx, edi
cmp     [esi+7ch], edi
jle     short loc_47263f
add     ebp, 4
cmp     [esp+54h+var_44], 0
jnz     short loc_47265d
mov     eax, [ebp-4]
add     eax, [ebp+0]
mov     [esp+54h+var_1c], eax
mov     eax, [esi+7ch]
dec     eax
cmp     eax, ebx
jle     short loc_472614
mov     eax, [ebp+4]
jmp     short loc_472617
mov     eax, [esi+10h]
sub     eax, [esp+54h+var_1c]
add     ebp, 8
inc     ebx
mov     [esp+54h+var_14], eax
lea     eax, [esp+54h+var_2c]
push    eax
push    esi
call    sub_472740
add     esp, 8
mov     eax, ds:dword_4a9a0c
cmp     [esi+7ch], ebx
mov     [esp+54h+var_44], eax
jg      short loc_4725f6
cmp     [esp+54h+var_44], 0
jnz     short loc_47265d
lea     eax, [esp+54h+var_2c]
push    eax
push    esi
call    sub_472800
add     esp, 8
mov     eax, ds:dword_4a9a0c
mov     [esp+54h+var_44], eax
mov     eax, [esp+54h+hmem]
push    eax
call    ds:globalunlock
mov     eax, [esp+54h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
cmp     [esp+54h+var_44], 0
jnz     loc_47271e
lea     ebx, [edi+1]
cmp     [esi+7ch], ebx
jle     short loc_47269f
mov     edx, [esp+54h+var_40]
lea     eax, [edx+ebx*8+4]
mov     ecx, [eax-8]
add     eax, 8
inc     ebx
add     [eax-8], ecx
cmp     [esi+7ch], ebx
jg      short loc_472690
mov     eax, [esi+64h]
xor     ebx, ebx
push    eax
call    ds:globallock
cmp     [esi+2ah], ebx
jle     short loc_4726ed
add     eax, 8
mov     ecx, [eax]
cmp     [esp+54h+var_3c], ecx
jg      short loc_4726e4
mov     ebp, [esi+7ch]
dec     ebp
cmp     edi, ebp
jg      short loc_4726e4
mov     edx, [esp+54h+var_40]
lea     edx, [edx+ebp*8]
cmp     [edx], ecx
jle     short loc_4726d6
sub     edx, 8
dec     ebp
cmp     edi, ebp
jle     short loc_4726ca
cmp     edi, ebp
jg      short loc_4726e4
mov     edx, [esp+54h+var_40]
sub     ecx, [edx+ebp*8+4]
mov     [eax], ecx
add     eax, 10h
inc     ebx
cmp     [esi+2ah], ebx
jg      short loc_4726b3
mov     eax, [esi+64h]
push    eax
call    ds:globalunlock
mov     edx, [esp+54h+var_40]
mov     eax, [esi+10h]
mov     ecx, [esi+7ch]
sub     eax, [edx+ecx*8-4]
push    eax
mov     [esi+10h], eax
mov     edx, [esi+8]
lea     eax, [esi+4]
push    edx
mov     ecx, [eax]
push    ecx
call    sub_44afd0
add     esp, 0ch
mov     [esi+7ch], edi
mov     eax, [esi+78h]
push    eax
call    ds:globalunlock
mov     eax, [esp+54h+var_44]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     ds:dword_4a9a0c, 0
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
push    ebp
cmp     dword ptr [ebx+18h], 0
jle     loc_4727f0
mov     ebp, [ebx+28h]
sub     ebp, [ebx+20h]
cmp     [ebx+18h], ebp
jle     short loc_472784
mov     eax, [esp+10h+arg_0]
push    ebx
push    eax
call    sub_472800
add     esp, 8
cmp     ds:dword_4a9a0c, 0
jnz     short loc_4727f0
mov     ebp, [ebx+28h]
sub     ebp, [ebx+20h]
mov     eax, [ebx+18h]
cmp     ebp, eax
jle     short loc_47278d
mov     ebp, eax
cmp     dword ptr [ebx+14h], 0
jnz     short loc_4727b9
mov     eax, [ebx+10h]
mov     edx, [ebx]
push    eax
mov     ecx, [ebx+4]
push    ebp
mov     eax, [ebx+24h]
add     eax, [ebx+20h]
push    eax
push    ecx
mov     eax, [esp+20h+arg_0]
push    edx
push    eax
call    sub_4728a0
add     esp, 18h
test    eax, eax
jnz     short loc_4727eb
jmp     short loc_4727d0
mov     edi, [ebx+24h]
mov     esi, [ebx+10h]
add     edi, [ebx+20h]
mov     ecx, ebp
shr     ecx, 2
rep movsd
mov     ecx, ebp
and     ecx, 3
rep movsb
mov     eax, [ebx+18h]
add     [ebx+10h], ebp
sub     eax, ebp
add     [ebx+20h], ebp
mov     [ebx+18h], eax
test    eax, eax
jg      loc_47275c
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ds:dword_4a9a0c, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ds:dword_4a9a0c, 0
push    esi
mov     esi, [esp+4+arg_4]
mov     eax, [esi+20h]
test    eax, eax
jle     short loc_472845
mov     ecx, [esi+1ch]
push    ecx
push    eax
mov     eax, [esi+24h]
push    eax
mov     edx, [esi+0ch]
lea     eax, [esi+8]
push    edx
mov     ecx, [eax]
mov     eax, [esp+14h+arg_0]
push    ecx
push    eax
call    sub_472850
add     esp, 18h
test    eax, eax
jz      short loc_47283f
mov     ds:dword_4a9a0c, eax
mov     eax, [esi+20h]
add     [esi+1ch], eax
mov     dword ptr [esi+20h], 0
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+hfile]
test    esi, esi
jz      short loc_47288e
mov     eax, [esp+8+ldistancetomove]
mov     edi, [esp+8+nnumberofbytestowrite]
mov     ecx, [esp+8+lpbuffer]
push    eax
mov     eax, [esp+0ch+hfile]
push    0
mov     edx, [esp+10h+arg_8]
push    edi
push    ecx
push    edx
push    eax
call    sub_44b1f0
add     esp, 18h
cmp     eax, edi
jnz     short loc_472886
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_44a430
pop     edi
pop     esi
retn
mov     eax, 70h
pop     edi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+hfile]
test    esi, esi
jz      short loc_4728f0
mov     edi, [esp+8+nnumberofbytestoread]
test    edi, edi
jnz     short loc_4728b7
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+8+ldistancetomove]
mov     ecx, [esp+8+lpbuffer]
mov     edx, [esp+8+hfile]
push    eax
mov     eax, [esp+0ch+arg_8]
push    0
push    edi
push    ecx
push    eax
push    edx
call    sub_44b0c0
add     esp, 18h
cmp     eax, edi
jnz     short loc_4728df
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_44a430
test    eax, eax
jnz     short loc_4728f5
mov     eax, 138eh
pop     edi
pop     esi
retn
mov     eax, 138eh
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
push    ebx
push    esi
test    eax, eax
push    edi
push    ebp
jz      short loc_472977
mov     esi, [esp+10h+arg_0]
test    byte ptr [esi], 2
jnz     short loc_472977
mov     edi, [esi+10h]
add     edi, eax
mov     eax, [esi+0ch]
cmp     edi, eax
jg      short loc_472923
mov     edi, eax
lea     ebx, [esi+4]
cmp     dword ptr [ebx], 0
jz      short loc_47296d
mov     eax, [ebx]
mov     ecx, [ebx+4]
push    ecx
push    eax
call    sub_44a4a0
add     esp, 8
cmp     eax, edi
jge     short loc_47296d
mov     ecx, [esi+80h]
lea     ebp, [ecx+edi-1]
mov     eax, ebp
cdq
idiv    ecx
sub     ebp, edx
mov     ecx, [ebx]
push    ebp
mov     eax, [ebx+4]
push    eax
push    ecx
call    sub_44afd0
add     esp, 0ch
test    eax, eax
jge     short loc_47296d
call    sub_44a430
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
mov     [esi+10h], edi
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, [esp+arg_0]
sub     esp, 8
lea     eax, [eax+eax*8]
shl     eax, 4
push    esi
mov     ecx, ds:dword_4a8b70[eax]
lea     esi, dword_4a8b6c[eax]
mov     eax, [esi]
mov     [esp+0ch+var_8], eax
mov     [esp+0ch+var_4], ecx
cmp     [esp+0ch+var_8], 0
jnz     short loc_4729b6
mov     eax, 0ffffffffh
pop     esi
add     esp, 8
retn
mov     eax, [esp+0ch+var_8]
mov     ecx, [esp+0ch+var_4]
push    ecx
push    eax
call    sub_44a5d0
mov     ecx, [esp+14h+var_8]
mov     edx, [esp+14h+var_4]
add     esp, 8
mov     [esi], ecx
mov     [esi+4], edx
pop     esi
add     esp, 8
retn
mov     eax, ds:dword_4a9a08
retn
mov     ax, [esp+arg_0]
cmp     ax, 401h
push    eax
jl      short loc_472a05
call    sub_472a10
add     esp, 4
retn
call    sub_472a30
add     esp, 4
retn
movsx   ecx, [esp+arg_0]
shl     ecx, 4
mov     eax, ds:dword_4a9a14
mov     edx, [eax]
lea     eax, [ecx+edx-4010h]
retn
movsx   ecx, [esp+arg_0]
shl     ecx, 4
mov     eax, ds:dword_4a9a20
mov     edx, [eax]
lea     eax, [ecx+edx-10h]
retn
push    42h
push    4000h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a9a20, eax
test    eax, eax
jnz     short loc_472a6b
xor     eax, eax
retn
push    42h
push    640h
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a9a14, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, ds:dword_4a9a20
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, ds:dword_4a9a14
push    eax
call    sub_45ba00
add     esp, 4
retn
push    esi
mov     eax, ds:dword_4a9a20
push    eax
mov     esi, ds:globallock
call    esi
mov     ecx, ds:dword_4a9a14
push    ecx
call    esi
pop     esi
retn
push    esi
mov     eax, ds:dword_4a9a20
push    eax
mov     esi, ds:globalunlock
call    esi
mov     ecx, ds:dword_4a9a14
push    ecx
call    esi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     edi, esi
shr     edi, 10h
dec     di
shl     di, 6
add     di, si
and     di, 3ffh
inc     di
push    edi
call    sub_472a30
add     esp, 4
cmp     [eax], esi
jz      short loc_472b2e
mov     di, [eax+0ah]
test    di, di
jz      short loc_472b2e
push    edi
call    sub_472a10
add     esp, 4
cmp     [eax], esi
jnz     short loc_472b18
mov     ecx, [esp+8+arg_4]
mov     [ecx], eax
mov     ax, di
pop     edi
pop     esi
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    esi
mov     esi, [esp+8+arg_0]
push    eax
push    esi
call    sub_472af0
add     esp, 8
test    ax, ax
jz      short loc_472b7e
mov     esi, [esp+8+var_4]
mov     edx, [esp+8+arg_4]
mov     ecx, [esi]
mov     [edx], ecx
mov     ecx, [esi+4]
mov     [edx+4], ecx
mov     ecx, [esi+8]
mov     [edx+8], ecx
mov     esi, [esi+0ch]
mov     [edx+0ch], esi
pop     esi
add     esp, 4
retn
mov     edx, [esp+8+arg_4]
xor     ecx, ecx
mov     [edx], ecx
mov     [edx+4], ecx
mov     [edx+8], ecx
mov     [edx+0ch], ecx
mov     [edx], esi
pop     esi
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
push    edi
mov     edi, [esp+10h+arg_0]
mov     ebx, edi
shr     ebx, 10h
dec     bx
shl     bx, 6
add     bx, di
and     bx, 3ffh
inc     bx
push    ebx
call    sub_472a30
add     esp, 4
cmp     dword ptr [eax], 0
jz      short loc_472c15
lea     eax, [esp+10h+var_4]
push    eax
call    sub_472e70
mov     si, ax
add     esp, 4
test    si, si
jnz     short loc_472c2b
push    0
push    1
push    0
push    1
call    sub_4731a0
add     esp, 10h
test    ax, ax
jnz     short loc_472bbf
push    0
push    0
push    0
push    1
call    sub_4731a0
add     esp, 10h
test    ax, ax
jnz     short loc_472bbf
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax], edi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ecx, [esp+10h+var_4]
xor     eax, eax
push    ebx
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     ecx, [esp+14h+var_4]
mov     [ecx], edi
call    sub_472a30
mov     cx, [eax+0ah]
mov     edx, [esp+14h+var_4]
mov     [edx+0ah], cx
add     esp, 4
mov     [eax+0ah], si
mov     eax, [esp+10h+var_4]
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    esi
mov     esi, [esp+8+arg_0]
push    eax
mov     ecx, [esi]
push    ecx
call    sub_472af0
add     esp, 8
test    ax, ax
jz      short loc_472cb5
mov     eax, [esi+4]
mov     ecx, [esp+8+var_4]
mov     [ecx+4], eax
mov     ecx, [esp+8+var_4]
mov     dl, [esi+8]
mov     eax, 1
mov     [ecx+8], dl
mov     dl, [esi+9]
mov     ecx, [esp+8+var_4]
pop     esi
mov     [ecx+9], dl
add     esp, 4
retn
xor     eax, eax
pop     esi
add     esp, 4
retn
sub     esp, 4
lea     eax, [esp+4+var_2]
push    ebx
mov     ecx, [esp+8+arg_0]
push    esi
push    edi
push    ebp
push    eax
xor     ebx, ebx
push    ecx
call    sub_472e00
mov     di, ax
add     esp, 8
test    di, di
jz      loc_472df5
push    edi
call    sub_4729f0
add     esp, 4
mov     esi, eax
push    esi
call    sub_473290
add     esp, 4
cmp     [esp+14h+var_2], bx
jz      short loc_472d3b
mov     eax, dword ptr [esp+14h+var_2]
push    eax
call    sub_4729f0
mov     cx, [esi+0ah]
add     esp, 4
mov     [eax+0ah], cx
mov     [esi], ebx
pop     ebp
mov     [esi+4], ebx
mov     [esi+8], ebx
mov     [esi+0ch], ebx
mov     ax, ds:word_4a9a1c
mov     [esi+0ah], ax
mov     ds:word_4a9a1c, di
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     bp, [esi+0ah]
test    bp, bp
jz      loc_472de8
push    ebp
call    sub_472a10
mov     bx, [eax+0ch]
add     esp, 4
mov     dx, [eax+0eh]
mov     ecx, [eax]
mov     [esi], ecx
mov     ecx, [eax+4]
mov     [esi+4], ecx
mov     ecx, [eax+8]
mov     [esi+8], ecx
mov     ecx, [eax+0ch]
mov     [esi+0ch], ecx
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     si, ds:word_4a9a1c
mov     [eax+0ah], si
mov     ds:word_4a9a1c, bp
cmp     bp, ds:word_4a9a2c
jnz     short loc_472dac
mov     ds:word_4a9a2c, di
cmp     bp, ds:word_4a9a28
jnz     short loc_472dbc
mov     ds:word_4a9a28, di
test    dx, dx
jz      short loc_472dce
push    edx
call    sub_4729f0
mov     [eax+0ch], di
add     esp, 4
test    bx, bx
jz      short loc_472df5
push    ebx
call    sub_4729f0
mov     [eax+0eh], di
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
mov     [esi], eax
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     ebx, esi
shr     ebx, 10h
dec     bx
shl     bx, 6
add     bx, si
and     bx, 3ffh
inc     bx
push    ebx
call    sub_472a30
mov     edi, [esp+10h+arg_4]
add     esp, 4
mov     word ptr [edi], 0
cmp     [eax], esi
jnz     short loc_472e39
mov     ax, bx
pop     edi
pop     esi
pop     ebx
retn
cmp     word ptr [eax+0ah], 0
jz      short loc_472e5b
mov     [edi], bx
mov     bx, [eax+0ah]
push    ebx
call    sub_472a10
add     esp, 4
cmp     [eax], esi
jnz     short loc_472e39
mov     ax, bx
pop     edi
pop     esi
pop     ebx
retn
xor     ax, ax
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     si, ds:word_4a9a1c
test    si, si
jz      short loc_472ea3
push    esi
call    sub_472a10
mov     ecx, [esp+8+arg_0]
add     esp, 4
mov     [ecx], eax
mov     ax, [eax+0ah]
mov     ds:word_4a9a1c, ax
mov     ax, si
mov     ecx, [ecx]
mov     word ptr [ecx+0ah], 0
pop     esi
retn
mov     ax, ds:word_4a9a10
cmp     ds:word_4a9a18, ax
jl      short loc_472ef3
movsx   eax, ax
add     eax, 64h
shl     eax, 4
cmp     eax, 0ffe0h
jle     short loc_472ed1
xor     ax, ax
pop     esi
mov     ds:dword_4a9a0c, 138bh
retn
push    42h
push    eax
mov     eax, ds:dword_4a9a14
push    eax
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_472eeb
xor     ax, ax
pop     esi
retn
add     ds:word_4a9a10, 64h
mov     si, ds:word_4a9a18
add     si, 401h
inc     ds:word_4a9a18
push    esi
call    sub_472a10
mov     ecx, [esp+8+arg_0]
add     esp, 4
mov     [ecx], eax
mov     ax, si
pop     esi
retn
cmp     ds:dword_4a9a14, 0
push    ebx
push    esi
push    edi
push    ebp
jz      short loc_472f8a
mov     bp, 1
mov     eax, ds:dword_4a9a14
push    eax
call    ds:globallock
mov     si, [esp+10h+arg_0]
mov     ebx, eax
cmp     ds:word_4a9a18, bp
mov     edi, [esp+10h+arg_8]
jl      short loc_472f7c
mov     eax, [ebx]
test    eax, eax
jz      short loc_472f6e
test    si, si
jz      short loc_472f64
shr     eax, 10h
cmp     ax, si
jnz     short loc_472f6e
push    ebx
push    edi
push    ebp
call    [esp+1ch+arg_4]
add     esp, 0ch
inc     bp
add     ebx, 10h
cmp     ds:word_4a9a18, bp
jge     short loc_472f51
mov     eax, ds:dword_4a9a14
push    eax
call    ds:globalunlock
jmp     short loc_472f93
mov     si, [esp+10h+arg_0]
mov     edi, [esp+10h+arg_8]
cmp     ds:dword_4a9a20, 0
jz      short loc_472fe3
mov     bp, 1
mov     eax, ds:dword_4a9a20
push    eax
call    ds:globallock
mov     ebx, eax
mov     eax, [ebx]
test    eax, eax
jz      short loc_472fcb
test    si, si
jz      short loc_472fc1
shr     eax, 10h
cmp     ax, si
jnz     short loc_472fcb
push    ebx
push    edi
push    ebp
call    [esp+1ch+arg_4]
add     esp, 0ch
inc     bp
add     ebx, 10h
cmp     bp, 400h
jle     short loc_472fae
mov     eax, ds:dword_4a9a20
push    eax
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     cx, [esp+arg_0]
cmp     cx, 3e8h
jle     short loc_473002
mov     cx, 3e8h
jmp     short loc_47300a
test    cx, cx
jge     short loc_47300a
xor     cx, cx
mov     ax, word_4ae67c
mov     word_4ae678, cx
cmp     cx, ax
jge     short locret_47302e
sub     ax, cx
push    0
push    0
push    0
push    eax
call    sub_4731a0
add     esp, 10h
retn
push    0
push    1
push    0
push    0
call    sub_4731a0
movzx   eax, ax
add     esp, 10h
retn
push    esi
call    sub_473030
mov     esi, eax
push    0
push    0
push    0
push    1
call    sub_4731a0
movzx   eax, ax
add     esp, 10h
or      esi, eax
mov     eax, esi
pop     esi
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    esi
mov     esi, [esp+8+arg_0]
push    eax
push    esi
call    sub_472af0
add     esp, 8
test    ax, ax
jz      short loc_4730d9
mov     ecx, [esp+8+var_4]
test    byte ptr [ecx+8], 4
jz      short loc_4730d9
push    eax
call    sub_4729f0
add     esp, 4
push    eax
call    sub_473260
add     esp, 4
push    esi
call    sub_472cc0
add     esp, 4
push    esi
call    sub_470610
add     esp, 4
sub     ds:dword_4a9a08, eax
mov     eax, 1
pop     esi
add     esp, 4
retn
xor     eax, eax
pop     esi
add     esp, 4
retn
sub     esp, 4
push    esi
push    edi
mov     esi, [esp+0ch+arg_4]
test    byte ptr [esi+8], 4
jnz     loc_473199
mov     ax, word_4ae678
cmp     word_4ae67c, ax
jle     short loc_47313b
mov     esi, [esi]
push    0
push    0
push    0
push    1
call    sub_4731a0
lea     eax, [esp+1ch+var_2]
add     esp, 10h
push    eax
push    esi
call    sub_472e00
mov     di, ax
add     esp, 8
test    di, di
jz      short loc_473199
push    edi
call    sub_4729f0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_473199
jmp     short loc_473140
mov     di, [esp+0ch+arg_0]
cmp     ds:word_4a9a2c, 0
jz      short loc_473176
mov     ax, ds:word_4a9a2c
push    eax
call    sub_4729f0
mov     [eax+0ch], di
add     esp, 4
mov     ax, ds:word_4a9a2c
mov     [esi+0eh], ax
mov     word ptr [esi+0ch], 0
mov     ds:word_4a9a2c, di
jmp     short loc_47318e
mov     ds:word_4a9a28, di
xor     eax, eax
mov     ds:word_4a9a2c, di
mov     [esi+0ch], ax
mov     [esi+0eh], ax
or      byte ptr [esi+8], 4
inc     word_4ae67c
pop     edi
pop     esi
add     esp, 4
retn
push    ebx
push    esi
xor     si, si
push    edi
cmp     ds:word_4a9a28, si
push    ebp
jz      loc_473256
cmp     [esp+10h+arg_0], si
jnz     short loc_4731c6
mov     ax, word_4ae67c
mov     [esp+10h+arg_0], ax
mov     edi, [esp+10h+arg_c]
test    edi, edi
jnz     short loc_4731d3
mov     edi, 7fffffffh
mov     ax, ds:word_4a9a28
push    eax
call    sub_4729f0
mov     bx, [eax+0ch]
add     esp, 4
mov     ebp, eax
mov     eax, [eax+4]
test    eax, eax
jz      short loc_47324e
cmp     [esp+10h+arg_4], 0
jz      short loc_473204
mov     ecx, [ebp+0]
shr     ecx, 10h
cmp     cx, [esp+10h+arg_4]
jnz     short loc_47324e
cmp     [esp+10h+arg_8], 0
jz      short loc_473218
push    eax
call    sub_45bbf0
add     esp, 4
test    eax, eax
jz      short loc_47324e
inc     si
mov     eax, [ebp+0]
push    eax
call    sub_470610
add     esp, 4
sub     edi, eax
sub     ds:dword_4a9a08, eax
push    ebp
call    sub_473260
add     esp, 4
mov     eax, [ebp+0]
push    eax
call    sub_472cc0
add     esp, 4
cmp     [esp+10h+arg_0], si
jle     short loc_473256
test    edi, edi
jle     short loc_473256
test    bx, bx
jz      short loc_473256
push    ebx
jmp     short loc_4731da
mov     ax, si
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_473290
add     esp, 4
mov     eax, [esi+4]
test    eax, eax
jz      short loc_473285
push    eax
call    sub_45ba00
mov     dword ptr [esi+4], 0
add     esp, 4
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
test    byte ptr [esi+8], 4
jz      short loc_473301
mov     ax, [esi+0ch]
test    ax, ax
jz      short loc_4732ba
push    eax
lea     edi, [esi+0eh]
call    sub_4729f0
mov     cx, [edi]
add     esp, 4
mov     [eax+0eh], cx
jmp     short loc_4732c6
lea     edi, [esi+0eh]
mov     ax, [edi]
mov     ds:word_4a9a2c, ax
mov     ax, [edi]
test    ax, ax
jz      short loc_4732e1
push    eax
call    sub_4729f0
mov     cx, [esi+0ch]
add     esp, 4
mov     [eax+0ch], cx
jmp     short loc_4732eb
mov     ax, [esi+0ch]
mov     ds:word_4a9a28, ax
mov     word ptr [esi+0ch], 0
and     byte ptr [esi+8], 0fbh
mov     word ptr [edi], 0
dec     word_4ae67c
pop     edi
pop     esi
retn
push    ebx
push    esi
push    edi
push    ebp
xor     di, di
cmp     ds:word_4a9a2c, di
jz      short loc_473359
call    sub_472ab0
mov     bp, ds:word_4a9a2c
mov     esi, [esp+10h+arg_4]
push    ebp
call    sub_4729f0
add     esp, 4
mov     ebx, eax
push    ebx
push    esi
push    ebp
call    [esp+1ch+arg_0]
add     esp, 0ch
test    eax, eax
jz      short loc_473354
inc     di
mov     bp, [ebx+0eh]
test    bp, bp
jnz     short loc_473330
call    sub_472ad0
mov     ax, di
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_8]
push    esi
mov     esi, [esp+4+arg_4]
mov     ecx, [eax]
push    ecx
call    sub_470610
add     esp, 4
add     [esi], eax
mov     eax, 1
pop     esi
retn
sub     esp, 4
mov     [esp+4+var_4], 0
lea     eax, [esp+4+var_4]
push    eax
push    offset sub_473370
call    sub_473310
mov     eax, [esp+0ch+var_4]
add     esp, 8
add     esp, 4
retn
push    esi
push    edi
push    2
push    100h
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_4733e6
xor     eax, eax
pop     edi
mov     ds:dword_4a9a0c, 8
pop     esi
retn
mov     esi, [esp+8+arg_0]
mov     eax, [esi+78h]
test    eax, eax
jz      short loc_4733fa
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, 1
mov     [esi+78h], edi
mov     dword ptr [esi+7ch], 0
pop     edi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     eax, [esi+78h]
test    eax, eax
jz      short loc_47347c
mov     edx, [eax]
xor     ebp, ebp
xor     ecx, ecx
mov     eax, [esi+7ch]
mov     [esp+14h+var_4], edx
cmp     eax, ecx
jle     short loc_47344a
add     edx, 4
mov     ebx, [esp+14h+arg_4]
cmp     [edx], ebx
jge     short loc_47344e
add     edx, 8
inc     ecx
cmp     eax, ecx
jg      short loc_47343c
jmp     short loc_47344e
mov     ebx, [esp+14h+arg_4]
cmp     eax, ecx
jle     short loc_473469
mov     edx, [esp+14h+var_4]
push    ecx
push    esi
mov     ebp, [edx+ecx*8+4]
lea     eax, [edx+ecx*8]
mov     edi, [eax]
call    sub_4735a0
add     esp, 8
cmp     ebp, ebx
jle     short loc_47347c
sub     ebp, ebx
add     ebx, edi
push    ebp
push    ebx
push    esi
call    sub_473490
add     esp, 0ch
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
cmp     dword ptr [esi+78h], 0
jz      loc_473595
mov     ebx, [esp+14h+arg_8]
test    ebx, ebx
jz      loc_473595
xor     ebp, ebp
mov     edi, [esp+14h+arg_4]
cmp     [esi+7ch], ebp
jle     short loc_4734ff
lea     eax, ds:0[ebp*8]
mov     ecx, [esi+78h]
add     eax, [ecx]
mov     ecx, [eax+4]
mov     eax, [eax]
lea     edx, [eax+ecx]
cmp     edx, edi
jnz     short loc_4734e4
mov     edi, eax
add     ebx, ecx
push    ebp
push    esi
call    sub_4735a0
add     esp, 8
jmp     short loc_4734fa
lea     edx, [edi+ebx]
cmp     edx, eax
jnz     short loc_4734f9
add     ebx, ecx
push    ebp
push    esi
call    sub_4735a0
add     esp, 8
jmp     short loc_4734fa
inc     ebp
cmp     [esi+7ch], ebp
jg      short loc_4734bc
mov     ecx, [esi+78h]
xor     ebp, ebp
cmp     [esi+7ch], ebp
mov     eax, [ecx]
jle     short loc_47351b
add     eax, 4
cmp     [eax], ebx
jge     short loc_47351b
add     eax, 8
inc     ebp
cmp     ebp, [esi+7ch]
jl      short loc_47350e
push    ecx
call    sub_45bbc0
add     esp, 4
mov     ecx, [esi+7ch]
lea     edx, ds:8[ecx*8]
cmp     eax, edx
jge     short loc_473559
push    2
mov     eax, [esi+78h]
push    eax
call    sub_45bbc0
add     esp, 4
add     eax, 100h
mov     ecx, [esi+78h]
push    eax
push    ecx
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jz      short loc_473595
mov     [esi+78h], eax
mov     eax, [esi+78h]
mov     ecx, [eax]
mov     [esp+14h+var_4], ecx
mov     ecx, [esi+7ch]
cmp     ebp, ecx
jge     short loc_473583
mov     eax, [esp+14h+var_4]
sub     ecx, ebp
shl     ecx, 3
lea     eax, [eax+ebp*8]
push    ecx
push    eax
add     eax, 8
push    eax
call    _memcpy
add     esp, 0ch
mov     eax, [esp+14h+var_4]
lea     eax, [eax+ebp*8]
mov     [eax], edi
mov     [eax+4], ebx
inc     dword ptr [esi+7ch]
add     [esi+32h], ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     eax, [esi+78h]
test    eax, eax
jz      short loc_4735e5
mov     edx, [esi+7ch]
mov     ecx, [esp+8+arg_4]
cmp     ecx, edx
jge     short loc_4735e2
mov     eax, [eax]
lea     edi, [eax+ecx*8]
mov     eax, [eax+ecx*8+4]
sub     [esi+32h], eax
lea     eax, [edx-1]
cmp     eax, ecx
jle     short loc_4735e2
sub     edx, ecx
lea     ecx, [edi+8]
lea     eax, ds:0fffffff8h[edx*8]
push    eax
push    ecx
push    edi
call    _memcpy
add     esp, 0ch
dec     dword ptr [esi+7ch]
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     si, [esp+8+arg_0]
push    edi
movsx   eax, si
push    ebp
lea     eax, [eax+eax*8]
shl     eax, 4
lea     edi, word_4a8b68[eax]
cmp     word ptr [edi+2], 0
jz      short loc_473659
mov     eax, [edi+64h]
test    eax, eax
jz      short loc_473659
push    eax
call    ds:globallock
mov     ebx, eax
mov     ebp, [edi+2ah]
mov     eax, ebp
dec     ebp
test    eax, eax
jle     short loc_47364f
movzx   esi, si
shl     esi, 10h
mov     eax, [esp+10h+arg_8]
push    ebx
push    eax
add     ebx, 10h
xor     eax, eax
mov     ax, [ebx-10h]
or      eax, esi
push    eax
call    [esp+1ch+arg_4]
add     esp, 0ch
mov     ecx, ebp
dec     ebp
test    ecx, ecx
jg      short loc_47362f
mov     eax, [edi+64h]
push    eax
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_0]
push    esi
test    cx, cx
push    edi
jnz     short loc_473670
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, ecx
shr     eax, 10h
test    ax, ax
jnz     short loc_47367f
xor     eax, eax
pop     edi
pop     esi
retn
movsx   eax, ax
lea     eax, [eax+eax*8]
shl     eax, 4
lea     esi, word_4a8b68[eax]
test    byte ptr [esi+50h], 1
jz      short loc_4736f1
movsx   edi, cx
shl     edi, 4
cmp     [esi+26h], edi
jle     loc_473731
mov     edx, [esp+8+arg_4]
mov     word ptr [edx+2], 0
mov     [edx], cx
mov     eax, [esi+64h]
mov     eax, [eax]
mov     ecx, [eax+edi-8]
mov     [edx+8], ecx
mov     eax, [esi+64h]
mov     eax, [eax]
mov     eax, [eax+edi-4]
mov     [edx+0ch], eax
mov     eax, [esi+64h]
mov     eax, [eax]
mov     al, [eax+edi-0ch]
mov     [edx+4], al
mov     edx, [esp+8+arg_8]
test    edx, edx
jz      short loc_4736e9
mov     eax, [esi+64h]
mov     esi, [eax]
mov     eax, [esi+edi+8]
sub     eax, ecx
mov     [edx], eax
mov     eax, 1
pop     edi
pop     esi
retn
mov     eax, [esi+64h]
push    eax
push    ecx
push    esi
call    sub_473b20
add     esp, 0ch
test    ax, ax
jl      short loc_473731
movsx   ecx, ax
shl     ecx, 4
mov     eax, [esi+64h]
mov     edx, [esp+8+arg_4]
add     ecx, [eax]
mov     eax, [ecx]
mov     [edx], eax
mov     esi, [ecx+4]
mov     [edx+4], esi
mov     edi, [ecx+8]
mov     [edx+8], edi
pop     edi
mov     eax, [ecx+0ch]
pop     esi
mov     [edx+0ch], eax
mov     eax, 1
retn
xor     eax, eax
pop     edi
pop     esi
retn
sub     esp, 4
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
mov     eax, esi
shr     eax, 10h
movsx   ecx, ax
lea     eax, [ecx+ecx*8]
shl     eax, 4
lea     edi, word_4a8b68[eax]
test    byte ptr [edi+50h], 1
jz      short loc_47376e
mov     eax, 1396h
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [edi+64h]
push    eax
push    esi
push    edi
call    sub_473b20
mov     [esp+18h+var_4], eax
add     esp, 0ch
test    eax, eax
jge     short loc_47379b
lea     eax, [esp+0ch+var_4]
mov     ecx, [esp+0ch+var_4]
push    eax
push    ecx
push    edi
call    sub_473a10
add     esp, 0ch
test    eax, eax
jnz     short loc_4737c4
mov     ecx, [esp+0ch+var_4]
mov     eax, [edi+64h]
shl     ecx, 4
mov     edx, [esp+0ch+arg_4]
add     ecx, [eax]
mov     [ecx], si
mov     ax, [edx+2]
mov     [ecx+2], ax
xor     eax, eax
mov     esi, [edx+8]
mov     [ecx+8], esi
mov     edx, [edx+0ch]
mov     [ecx+0ch], edx
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 8
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+18h+arg_0]
push    42h
mov     eax, [edi+26h]
lea     esi, [edi+1ah]
push    eax
call    sub_45b8f0
add     esp, 8
mov     [edi+64h], eax
test    eax, eax
jnz     short loc_473800
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     dword ptr [esi], 3
jg      short loc_473811
mov     eax, [esi+8]
add     eax, [edi+68h]
add     eax, 4ah
mov     [esi+14h], eax
mov     ecx, [esi+14h]
mov     eax, [esp+18h+arg_4]
mov     [eax], ecx
mov     ecx, [esp+18h+arg_8]
mov     edx, [esi+0ch]
mov     [ecx], edx
mov     eax, [edi+64h]
cmp     dword ptr [esi], 2
jg      loc_473901
mov     [esp+18h+hmem], eax
push    42h
mov     eax, [esi+10h]
shl     eax, 4
push    eax
call    sub_45b8f0
add     esp, 8
mov     [edi+64h], eax
test    eax, eax
jnz     short loc_473865
mov     eax, [esp+18h+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    eax
mov     ebx, ds:globallock
call    ebx
mov     ebp, eax
mov     eax, [esp+18h+hmem]
push    eax
call    ebx
mov     ebx, eax
mov     ecx, [esi+0ch]
mov     eax, [esi+14h]
push    eax
push    ecx
mov     ecx, [edi+8]
push    ebx
lea     eax, [edi+4]
push    ecx
mov     edx, [eax]
push    edx
push    edi
call    sub_4728a0
mov     [esp+30h+var_8], eax
add     esp, 18h
test    eax, eax
jnz     short loc_4738e5
mov     ecx, ebp
mov     edx, [esi+10h]
mov     eax, edx
dec     edx
test    eax, eax
jle     short loc_4738cf
mov     ax, [ebx]
add     ecx, 10h
mov     [ecx-10h], ax
mov     eax, [ebx+2]
add     ebx, 0ah
add     eax, [edi+68h]
sub     eax, 20h
mov     [ecx-8], eax
mov     eax, [ebx-4]
mov     [ecx-4], eax
mov     eax, edx
dec     edx
test    eax, eax
jg      short loc_4738a9
mov     eax, [esi+10h]
shl     eax, 4
mov     [esi+0ch], eax
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi], 4
mov     eax, [esp+18h+hmem]
mov     ebx, ds:globalunlock
push    eax
call    ebx
mov     ecx, [esp+18h+hmem]
push    ecx
call    sub_45ba00
add     esp, 4
jmp     short loc_473959
push    eax
call    ds:globallock
mov     ebp, eax
mov     ecx, [esi+0ch]
mov     eax, [esi+14h]
push    eax
push    ecx
mov     ecx, [edi+8]
push    ebp
lea     eax, [edi+4]
push    ecx
mov     edx, [eax]
push    edx
push    edi
call    sub_4728a0
mov     [esp+30h+var_8], eax
add     esp, 18h
test    byte ptr [edi+50h], 1
jnz     short loc_47394c
mov     ecx, ebp
mov     edx, [esi+10h]
mov     eax, edx
dec     edx
test    eax, eax
jle     short loc_47394c
xor     ebx, ebx
mov     [ecx+2], bx
add     ecx, 10h
mov     eax, edx
dec     edx
test    eax, eax
jg      short loc_47393e
mov     dword ptr [esi+14h], 0
mov     ebx, ds:globalunlock
test    byte ptr [edi+50h], 1
jnz     short loc_473992
mov     ecx, [esi+10h]
mov     eax, ecx
dec     ecx
test    eax, eax
jle     short loc_473992
mov     edx, [ebp+0ch]
test    edx, edx
jl      short loc_47398a
mov     eax, [ebp+8]
test    eax, eax
jl      short loc_47398a
add     eax, edx
cmp     eax, [edi+0ch]
jg      short loc_47398a
add     ebp, 10h
mov     eax, ecx
dec     ecx
test    eax, eax
jg      short loc_473969
jmp     short loc_473992
mov     [esp+18h+var_8], 1388h
mov     eax, [edi+64h]
push    eax
call    ebx
mov     eax, [esp+18h+var_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 10h
xor     edx, edx
lea     eax, [esp+10h+var_10]
push    esi
mov     esi, [esp+14h+arg_0]
push    edi
mov     [eax], edx
mov     ecx, [esi+26h]
mov     [eax+4], edx
mov     [eax+8], edx
mov     [eax+0ch], edx
mov     eax, [esi+2eh]
mov     [esp+18h+var_8], eax
mov     [esp+18h+var_4], ecx
test    eax, eax
jz      short loc_4739e3
mov     word ptr [esp+18h+var_10+2], 1
lea     eax, [esp+18h+var_10]
mov     edi, [esp+18h+nnumberofbytestowrite]
push    eax
mov     ecx, [esi+64h]
push    2
push    edi
push    ecx
push    esi
call    sub_470cf0
add     esp, 14h
test    eax, eax
jnz     short loc_473a0a
mov     ecx, [esp+18h+var_8]
mov     [esi+26h], edi
mov     [esi+2eh], ecx
pop     edi
pop     esi
add     esp, 10h
retn
mov     eax, [esp+arg_8]
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
push    ebp
mov     dword ptr [eax], 0ffffffffh
test    byte ptr [edi+50h], 1
jz      short loc_473a32
mov     eax, 1396h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     esi, 0ffffffffh
mov     ebx, [edi+2ah]
movsx   eax, [esp+10h+arg_4]
sub     esi, eax
inc     ebx
mov     ebp, ebx
shl     ebp, 4
cmp     [edi+8ch], ebp
jge     short loc_473a89
add     ebp, 200h
push    2
push    ebp
mov     eax, [edi+64h]
push    eax
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jnz     short loc_473a72
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     [edi+64h], eax
push    edi
call    sub_4739b0
add     esp, 8
test    eax, eax
jnz     short loc_473ac6
mov     [edi+8ch], ebp
mov     eax, [edi+64h]
mov     ecx, esi
shl     ecx, 4
mov     ebp, [eax]
add     ebp, ecx
mov     eax, ebx
sub     eax, esi
lea     ecx, [ebp+10h]
dec     eax
shl     eax, 4
push    eax
push    ebp
push    ecx
call    _memcpy
add     esp, 0ch
xor     eax, eax
mov     [ebp+0], eax
mov     ecx, [esp+10h+arg_8]
mov     [ebp+4], eax
mov     [ebp+8], eax
mov     [ebp+0ch], eax
mov     [edi+14h], ax
mov     [edi+2ah], ebx
mov     [ecx], esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
test    byte ptr [esi+50h], 1
jnz     short loc_473b1b
mov     eax, [esi+64h]
mov     ecx, [esp+4+arg_4]
push    eax
push    ecx
push    esi
call    sub_473b20
add     esp, 0ch
test    eax, eax
jl      short loc_473b1b
mov     edx, eax
mov     ecx, [esi+64h]
mov     word ptr [esi+14h], 0
shl     edx, 4
add     edx, [ecx]
mov     ecx, [esi+2ah]
sub     ecx, eax
lea     eax, [edx+10h]
dec     ecx
shl     ecx, 4
push    ecx
push    eax
push    edx
call    _memcpy
add     esp, 0ch
dec     dword ptr [esi+2ah]
pop     esi
retn
mov     eax, [esp+arg_8]
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     ebx, [eax]
push    ebp
xor     esi, esi
mov     ecx, [esp+1ch+arg_0]
mov     [esp+1ch+var_8], ebx
mov     edi, [ecx+2ah]
dec     edi
jns     short loc_473b4a
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     dx, [esp+1ch+arg_4]
mov     ecx, [esp+1ch+arg_0]
cmp     [ecx+14h], dx
jnz     short loc_473b64
mov     eax, [ecx+16h]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
movsx   eax, dx
mov     [esp+1ch+var_4], eax
lea     eax, [edi+esi]
mov     ebx, [esp+1ch+var_8]
shr     eax, 1
mov     ecx, eax
shl     ecx, 4
mov     cx, [ecx+ebx]
mov     [esp+1ch+var_a], cx
mov     ecx, [esp+1ch+var_4]
movsx   ebx, [esp+1ch+var_a]
sub     ecx, ebx
add     ecx, eax
cmp     esi, ecx
jg      short loc_473ba8
cmp     ecx, edi
jg      short loc_473ba8
mov     ebp, ecx
mov     ebx, [esp+1ch+var_8]
shl     ebp, 4
cmp     [ebp+ebx+0], dx
jz      short loc_473bcc
cmp     dx, [esp+1ch+var_a]
jge     short loc_473bb4
lea     edi, [eax-1]
jmp     short loc_473bb9
jle     short loc_473bce
lea     esi, [eax+1]
cmp     esi, edi
jle     short loc_473b6b
mov     eax, 0ffffffffh
pop     ebp
sub     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, ecx
mov     ecx, [esp+1ch+arg_0]
pop     ebp
mov     [ecx+14h], dx
pop     edi
pop     esi
mov     [ecx+16h], eax
pop     ebx
add     esp, 0ch
retn
sub     esp, 8
lea     eax, [esp+8+var_8]
push    esi
mov     esi, [esp+0ch+lprc]
push    eax
push    esi
call    sub_473c30
mov     eax, [esp+14h+arg_0]
add     esp, 8
mov     ecx, [eax+4]
mov     eax, [eax]
sub     ecx, [esp+0ch+var_4]
sub     eax, [esp+0ch+var_8]
push    ecx
push    eax
push    esi
call    ds:offsetrect
pop     esi
add     esp, 8
retn
mov     ecx, [esp+arg_0]
push    esi
mov     esi, [esp+4+arg_4]
mov     eax, [ecx+8]
add     eax, [ecx]
cdq
sub     eax, edx
sar     eax, 1
mov     [esi], eax
mov     eax, [ecx+4]
add     eax, [ecx+0ch]
cdq
sub     eax, edx
sar     eax, 1
mov     [esi+4], eax
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
mov     edx, eax
mov     ecx, [esp+4+arg_8]
mov     esi, [esp+4+arg_10]
cmp     edx, ecx
jl      short loc_473c75
mov     edx, ecx
mov     [esi], edx
cmp     eax, ecx
jg      short loc_473c7d
mov     eax, ecx
mov     ecx, [esp+4+arg_c]
mov     [esi+8], eax
mov     eax, [esp+4+arg_4]
cmp     eax, ecx
mov     edx, eax
jl      short loc_473c90
mov     edx, ecx
mov     [esi+4], edx
cmp     eax, ecx
jg      short loc_473c99
mov     eax, ecx
mov     [esi+0ch], eax
pop     esi
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+lprc]
sub     eax, [ecx+4]
push    eax
mov     eax, [esp+4+arg_0]
sub     eax, [ecx]
push    eax
push    ecx
call    ds:offsetrect
retn
mov     ecx, [esp+arg_4]
push    ebx
mov     edx, [esp+4+lprc]
push    esi
push    edi
xor     esi, esi
push    ebp
xor     edi, edi
mov     ebx, [ecx+8]
sub     ebx, [edx+8]
jns     short loc_473cdc
mov     esi, ebx
jmp     short loc_473cde
xor     ebx, ebx
mov     eax, [ecx]
sub     eax, [edx]
mov     ebp, eax
sub     ebp, ebx
test    ebp, ebp
jle     short loc_473cec
mov     esi, eax
mov     ebx, [ecx+0ch]
sub     ebx, [edx+0ch]
jns     short loc_473cf8
mov     edi, ebx
jmp     short loc_473cfa
xor     ebx, ebx
mov     eax, [ecx+4]
sub     eax, [edx+4]
mov     ecx, eax
sub     ecx, ebx
test    ecx, ecx
jle     short loc_473d0a
mov     edi, eax
push    edi
push    esi
push    edx
call    ds:offsetrect
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_0]
mov     eax, [ecx]
cmp     [ecx+8], eax
jle     short loc_473d36
mov     eax, [ecx+0ch]
cmp     [ecx+4], eax
jge     short loc_473d36
xor     eax, eax
retn
mov     eax, 1
retn
mov     ecx, [esp+arg_4]
push    esi
mov     edx, [esp+4+arg_0]
mov     esi, [ecx]
mov     eax, [edx]
cmp     esi, eax
jg      short loc_473d53
mov     esi, eax
mov     [ecx], esi
mov     eax, [edx+8]
cmp     eax, esi
jl      short loc_473d5e
mov     eax, esi
mov     esi, [ecx+8]
mov     [ecx], eax
mov     eax, [edx]
cmp     esi, eax
jg      short loc_473d6b
mov     esi, eax
mov     [ecx+8], esi
mov     eax, [edx+8]
cmp     eax, esi
jl      short loc_473d77
mov     eax, esi
mov     [ecx+8], eax
mov     eax, [ecx+4]
mov     esi, [edx+4]
cmp     esi, eax
jg      short loc_473d86
mov     esi, eax
mov     [ecx+4], esi
mov     eax, [edx+0ch]
cmp     eax, esi
jl      short loc_473d92
mov     eax, esi
mov     [ecx+4], eax
mov     eax, [ecx+0ch]
mov     esi, [edx+4]
cmp     esi, eax
jg      short loc_473da1
mov     esi, eax
mov     [ecx+0ch], esi
mov     eax, [edx+0ch]
cmp     eax, esi
jl      short loc_473dad
mov     eax, esi
pop     esi
mov     [ecx+0ch], eax
retn
mov     edx, [esp+arg_4]
mov     ecx, [esp+arg_0]
mov     eax, [edx]
cmp     [ecx+8], eax
jl      short loc_473dec
mov     eax, [ecx]
cmp     [edx+8], eax
jl      short loc_473dec
mov     eax, [ecx+0ch]
cmp     [edx+4], eax
jg      short loc_473dec
mov     eax, [ecx+4]
cmp     [edx+0ch], eax
jl      short loc_473dec
mov     eax, 1
retn
xor     eax, eax
retn
mov     ecx, [esp+arg_8]
sub     esp, 20h
lea     edx, [esp+20h+var_10]
push    ebx
push    esi
mov     eax, [ecx]
push    edi
mov     ebx, [ecx+4]
push    ebp
mov     [edx], eax
mov     ebp, [ecx+8]
mov     eax, [ecx+0ch]
mov     [edx+4], ebx
mov     [edx+8], ebp
mov     [edx+0ch], eax
mov     dx, [esp+30h+arg_c]
test    dl, 1
jz      short loc_473e29
mov     ebx, [ecx]
mov     [esp+30h+var_10], ebp
mov     [esp+30h+var_8], ebx
test    dl, 2
jz      short loc_473e3c
mov     eax, [ecx+0ch]
mov     ecx, [ecx+4]
mov     [esp+30h+var_c], eax
mov     [esp+30h+var_4], ecx
mov     esi, [esp+30h+arg_4]
mov     ebp, [esp+30h+var_8]
sub     ebp, [esp+30h+var_10]
mov     ebx, [esp+30h+var_4]
mov     edx, [esi]
mov     ecx, [esi+8]
sub     ecx, edx
mov     edi, [esi+0ch]
sub     edi, [esi+4]
sub     ebx, [esp+30h+var_c]
test    ecx, ecx
jnz     short loc_473e6c
mov     ecx, 1
test    ebp, ebp
jnz     short loc_473e6c
mov     ebp, ecx
test    edi, edi
jnz     short loc_473e7b
mov     edi, 1
test    ebx, ebx
jnz     short loc_473e7b
mov     ebx, edi
mov     eax, [esp+30h+arg_0]
mov     eax, [eax]
sub     eax, edx
imul    eax, ebp
cdq
idiv    ecx
mov     edx, [esp+30h+var_10]
add     edx, eax
mov     eax, [esp+30h+arg_0]
mov     [esp+30h+var_20], edx
mov     eax, [eax+8]
sub     eax, [esi+8]
imul    eax, ebp
cdq
idiv    ecx
mov     ecx, [esp+30h+var_8]
add     ecx, eax
mov     eax, [esp+30h+arg_0]
mov     [esp+30h+var_18], ecx
mov     eax, [eax+4]
sub     eax, [esi+4]
mov     ecx, [esp+30h+var_c]
imul    eax, ebx
cdq
idiv    edi
add     ecx, eax
mov     eax, [esp+30h+arg_0]
mov     [esp+30h+var_1c], ecx
mov     eax, [eax+0ch]
sub     eax, [esi+0ch]
mov     ecx, [esp+30h+var_4]
imul    eax, ebx
cdq
idiv    edi
add     ecx, eax
mov     edx, [esp+30h+var_18]
mov     eax, [esp+30h+arg_0]
push    eax
push    ecx
mov     eax, [esp+38h+var_20]
push    edx
mov     edx, [esp+3ch+var_1c]
push    edx
push    eax
call    sub_473c60
add     esp, 14h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
xor     ax, ax
push    esi
mov     ecx, [esp+4+arg_0]
test    ecx, ecx
jz      short loc_473f50
cmp     [esp+4+arg_c], ecx
mov     ecx, [esp+4+arg_8]
jge     short loc_473f3b
cmp     ecx, 1
jz      short loc_473f35
cmp     ecx, 7
jz      short loc_473f35
cmp     ecx, 8
jnz     short loc_473f54
mov     ax, 1
jmp     short loc_473f54
cmp     ecx, 3
jz      short loc_473f4a
cmp     ecx, 5
jz      short loc_473f4a
cmp     ecx, 4
jnz     short loc_473f54
mov     ax, 1
jmp     short loc_473f54
mov     ecx, [esp+4+arg_8]
mov     edx, [esp+4+arg_4]
test    edx, edx
jz      short loc_473f86
cmp     [esp+4+arg_10], edx
jle     short loc_473f75
cmp     ecx, 7
jz      short loc_473f71
cmp     ecx, 6
jz      short loc_473f71
cmp     ecx, 5
jnz     short loc_473f86
or      al, 2
pop     esi
retn
cmp     ecx, 1
jz      short loc_473f84
cmp     ecx, 2
jz      short loc_473f84
cmp     ecx, 3
jnz     short loc_473f86
or      al, 2
pop     esi
retn
mov     eax, [esp+arg_0]
dec     eax
cmp     eax, 7
ja      short def_473f9a
jmp     ds:jpt_473f9a[eax*4]
xor     eax, eax
retn
mov     eax, 5
retn
mov     eax, 6
retn
mov     eax, 7
retn
mov     eax, 8
retn
mov     eax, 1
retn
mov     eax, 2
retn
mov     eax, 3
retn
mov     eax, 4
retn
mov     eax, [esp+arg_10]
sub     esp, 8
dec     eax
cmp     eax, 7
ja      short def_47400d
jmp     ds:jpt_47400d[eax*4]
xor     eax, eax
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], eax
jmp     loc_4740a5
mov     eax, [esp+8+arg_0]
mov     ecx, [esp+8+arg_4]
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], ecx
jmp     short loc_4740a5
mov     [esp+8+var_8], 0
mov     eax, [esp+8+arg_4]
mov     [esp+8+var_4], eax
jmp     short loc_4740a5
mov     eax, [esp+8+arg_8]
mov     ecx, [esp+8+arg_4]
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], ecx
jmp     short loc_4740a5
mov     eax, [esp+8+arg_8]
jmp     short loc_474099
mov     eax, [esp+8+arg_8]
mov     ecx, [esp+8+arg_c]
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], ecx
jmp     short loc_4740a5
mov     [esp+8+var_8], 0
mov     eax, [esp+8+arg_c]
mov     [esp+8+var_4], eax
jmp     short loc_4740a5
mov     eax, [esp+8+arg_0]
mov     ecx, [esp+8+arg_c]
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], ecx
jmp     short loc_4740a5
mov     eax, [esp+8+arg_0]
mov     [esp+8+var_4], 0
mov     [esp+8+var_8], eax
mov     eax, [esp+8+var_8]
mov     edx, [esp+8+var_4]
add     esp, 8
retn
mov     eax, [esp+arg_0]
cmp     [esp+arg_8], eax
mov     eax, [esp+arg_4]
jge     short loc_4740ff
cmp     [esp+arg_c], eax
mov     eax, 5
jl      short locret_47410f
mov     eax, 3
retn
cmp     [esp+arg_c], eax
mov     eax, 7
jl      short locret_47410f
mov     eax, 1
retn
mov     eax, [esp+arg_8]
push    esi
and     eax, 0ffffh
mov     esi, [esp+4+hmodule]
push    eax
mov     eax, [esp+8+arg_4]
and     eax, 0ffffh
push    eax
push    esi
call    ds:findresourcea
test    eax, eax
jz      short loc_47413e
push    eax
push    esi
call    ds:loadresource
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_10]
mov     ecx, [esp+arg_c]
push    eax
mov     edx, [ecx+4]
mov     ax, [esp+4+arg_8]
push    edx
sub     ax, 2
mov     dx, [esp+8+arg_0]
push    eax
mov     eax, [esp+0ch+arg_4]
add     eax, 2
push    eax
push    edx
call    dword ptr [ecx]
add     esp, 14h
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_0]
sub     esp, 8
mov     [esp+8+var_8], eax
mov     [esp+8+var_4], ecx
lea     eax, [esp+8+var_8]
push    eax
push    offset sub_474150
push    edx
call    sub_445b50
add     esp, 14h
retn
cmp     dword_4ae6bc, 0
jnz     short loc_4741d3
cmp     dword_4ae6b8, 0
jz      short loc_4741d3
mov     eax, dword_4ae6b8
push    eax
call    ds:globallock
mov     dword_4ae6bc, eax
cmp     dword_4ae6bc, 1
sbb     eax, eax
inc     eax
retn
cmp     dword_4ae6b8, 0
push    ebx
push    esi
push    edi
jnz     short loc_47421d
mov     word_4ae6c0, 100h
push    2
push    100h
call    sub_45b8f0
add     esp, 8
mov     dword_4ae6b8, eax
test    eax, eax
jnz     short loc_474214
xor     ax, ax
pop     edi
pop     esi
pop     ebx
retn
mov     word_4ae6c2, 2
xor     ecx, ecx
mov     eax, [esp+0ch+arg_0]
mov     cx, word_4ae6c2
add     eax, eax
lea     edx, [eax+eax*8]
lea     esi, [ecx+edx]
cmp     esi, 10000h
jb      short loc_474241
xor     ax, ax
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
mov     ax, word_4ae6c0
cmp     eax, esi
jnb     short loc_4742b5
xor     edi, edi
cmp     dword_4ae6bc, edi
jz      short loc_47426e
mov     eax, dword_4ae6b8
push    eax
call    ds:globalunlock
mov     dword_4ae6bc, edi
mov     edi, 1
xor     eax, eax
mov     ebx, esi
mov     ax, word_4ae6c0
push    2
sub     ebx, eax
mov     ecx, dword_4ae6b8
and     ebx, 0ffffff00h
add     ebx, 100h
add     eax, ebx
push    eax
push    ecx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_4742a5
xor     ax, ax
pop     edi
pop     esi
pop     ebx
retn
add     word_4ae6c0, bx
test    edi, edi
jz      short loc_4742b5
call    sub_4741b0
mov     ax, word_4ae6c2
pop     edi
mov     word_4ae6c2, si
pop     esi
pop     ebx
retn
mov     ax, [esp+arg_0]
test    ax, ax
jz      short locret_4742e9
cmp     ax, word_4ae6c2
jnb     short locret_4742e9
mov     word_4ae6c2, ax
retn
push    esi
mov     si, [esp+4+arg_0]
test    si, si
jnz     short loc_474300
xor     ax, ax
pop     esi
retn
call    sub_4741b0
test    eax, eax
jnz     short loc_47430e
xor     ax, ax
pop     esi
retn
movzx   ecx, si
mov     ax, 1
add     ecx, dword_4ae6bc
cmp     word ptr [ecx+10h], 0
jz      short loc_47433a
xor     edx, edx
inc     ax
xor     esi, esi
mov     si, [ecx+10h]
add     esi, dword_4ae6bc
cmp     [esi+10h], dx
mov     ecx, esi
jnz     short loc_474324
pop     esi
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+lprcdst]
push    edi
mov     ax, [esp+2ch+arg_0]
push    ebp
xor     edi, edi
cmp     ax, di
mov     [esi+0ch], edi
mov     [esi+4], edi
mov     [esi+8], edi
mov     [esi], edi
jnz     short loc_47436c
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
movzx   ebp, ax
add     ebp, dword_4ae6bc
mov     ebx, [esp+30h+arg_4]
lea     ecx, [esp+30h+rcsrc1]
mov     eax, [ebx]
mov     edx, [ebx+4]
mov     [ecx], eax
mov     eax, [ebx+8]
mov     [ecx+4], edx
mov     edx, [ebx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
mov     ecx, [esp+30h+rcsrc1.left]
cmp     [ebp+8], ecx
jle     short loc_4743de
mov     eax, [esp+30h+rcsrc1.right]
cmp     [ebp+0], eax
jge     short loc_4743de
mov     eax, [esp+30h+rcsrc1.bottom]
cmp     [ebp+4], eax
jge     short loc_4743de
mov     eax, [esp+30h+rcsrc1.top]
cmp     [ebp+0ch], eax
jle     short loc_4743de
lea     eax, [esp+30h+rcsrc1]
push    ebp
lea     ecx, [esp+34h+rcdst]
push    eax
push    ecx
call    ds:intersectrect
test    eax, eax
jz      short loc_4743de
lea     eax, [esp+30h+rcdst]
mov     edi, 1
push    eax
push    esi
push    esi
call    ds:unionrect
mov     ax, [ebp+10h]
test    ax, ax
jz      short loc_4743f2
movzx   ebp, ax
add     ebp, dword_4ae6bc
jmp     short loc_474379
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+rcsrc2.top]
sub     esp, 10h
or      eax, [esp+10h+rcsrc2.right]
push    esi
or      eax, [esp+14h+rcsrc2.bottom]
push    edi
or      eax, [esp+18h+rcsrc2.left]
jnz     short loc_474422
mov     ax, [esp+18h+arg_0]
pop     edi
pop     esi
add     esp, 10h
retn
push    1
call    sub_4741e0
mov     di, ax
add     esp, 4
test    di, di
jnz     short loc_47443d
mov     ax, di
pop     edi
pop     esi
add     esp, 10h
retn
call    sub_4741b0
test    eax, eax
jnz     short loc_47444f
xor     ax, ax
pop     edi
pop     esi
add     esp, 10h
retn
mov     si, [esp+18h+arg_0]
test    si, si
jz      loc_4744e7
lea     edx, [esp+18h+rcsrc2]
lea     ecx, [esp+18h+rc]
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+4]
push    14h
mov     [ecx+4], eax
mov     eax, [edx+8]
push    14h
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
lea     ecx, [esp+20h+rc]
push    ecx
call    ds:inflaterect
movzx   ecx, si
add     ecx, dword_4ae6bc
mov     eax, [esp+18h+rc.left]
cmp     [ecx+8], eax
jle     short loc_4744b6
mov     eax, [esp+18h+rc.right]
cmp     [ecx], eax
jge     short loc_4744b6
mov     eax, [esp+18h+rc.bottom]
cmp     [ecx+4], eax
jge     short loc_4744b6
mov     eax, [esp+18h+rc.top]
cmp     [ecx+0ch], eax
jg      short loc_4744c4
mov     ax, [ecx+10h]
test    ax, ax
jz      short loc_4744e3
movzx   ecx, ax
jmp     short loc_47448d
lea     eax, [esp+18h+rcsrc2]
push    eax
push    ecx
push    ecx
call    ds:unionrect
push    edi
call    sub_4742d0
mov     ax, si
add     esp, 4
pop     edi
pop     esi
add     esp, 10h
retn
mov     [ecx+10h], di
movzx   ecx, di
add     ecx, dword_4ae6bc
lea     edx, [esp+18h+rcsrc2]
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+4]
test    si, si
mov     [ecx+4], eax
mov     eax, [edx+8]
mov     [ecx+8], eax
mov     eax, esi
mov     edx, [edx+0ch]
mov     [ecx+0ch], edx
mov     word ptr [ecx+10h], 0
jnz     short loc_474519
mov     eax, edi
pop     edi
pop     esi
add     esp, 10h
retn
push    esi
push    edi
mov     di, [esp+8+arg_4]
test    di, di
jnz     short loc_474534
mov     ax, [esp+8+arg_0]
pop     edi
pop     esi
retn
mov     si, [esp+8+arg_0]
test    si, si
jnz     short loc_474544
mov     ax, di
pop     edi
pop     esi
retn
call    sub_4741b0
test    eax, eax
jz      short loc_47457d
movzx   eax, di
add     eax, dword_4ae6bc
cmp     word ptr [eax+10h], 0
jz      short loc_474573
xor     ecx, ecx
xor     edx, edx
mov     dx, [eax+10h]
add     edx, dword_4ae6bc
cmp     [edx+10h], cx
mov     eax, edx
jnz     short loc_47455f
mov     [eax+10h], si
mov     ax, di
pop     edi
pop     esi
retn
mov     ax, si
pop     edi
pop     esi
retn
push    esi
push    edi
mov     di, [esp+8+arg_0]
test    di, di
jnz     short loc_4745a2
xor     ax, ax
pop     edi
pop     esi
retn
push    edi
call    sub_4742f0
add     esp, 4
movzx   eax, ax
push    eax
call    sub_4741e0
mov     si, ax
add     esp, 4
test    si, si
jnz     short loc_4745c5
xor     ax, ax
pop     edi
pop     esi
retn
call    sub_4741b0
test    eax, eax
jnz     short loc_4745d4
xor     ax, ax
pop     edi
pop     esi
retn
movzx   ecx, di
mov     dx, si
add     ecx, dword_4ae6bc
movzx   edi, dx
add     dx, 12h
add     edi, dword_4ae6bc
mov     eax, [ecx]
mov     [edi], eax
mov     eax, [ecx+4]
mov     [edi+4], eax
mov     eax, [ecx+8]
mov     [edi+8], eax
mov     eax, [ecx+0ch]
mov     [edi+0ch], eax
cmp     word ptr [ecx+10h], 0
jz      short loc_47461e
mov     [edi+10h], dx
xor     eax, eax
mov     ax, [ecx+10h]
add     eax, dword_4ae6bc
mov     ecx, eax
jmp     short loc_4745e0
mov     word ptr [edi+10h], 0
mov     ax, si
pop     edi
pop     esi
retn
sub     esp, 14h
push    ebx
push    esi
push    edi
push    ebp
call    sub_4741b0
test    eax, eax
jnz     short loc_47464d
mov     ax, word ptr [esp+24h+arg_0]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     esi, ds:inflaterect
mov     [esp+24h+var_14], 1
cmp     word ptr [esp+24h+arg_0], 0
mov     edi, 0
jz      short loc_474678
mov     edi, [esp+24h+arg_0]
and     edi, 0ffffh
add     edi, dword_4ae6bc
test    edi, edi
jz      loc_47474c
lea     ecx, [esp+24h+rc]
mov     eax, [edi]
mov     [ecx], eax
push    14h
mov     edx, [edi+4]
push    14h
mov     [ecx+4], edx
mov     ebx, [edi+8]
mov     [ecx+8], ebx
lea     ebx, [edi+10h]
mov     eax, [edi+0ch]
mov     [ecx+0ch], eax
lea     ecx, [esp+2ch+rc]
push    ecx
call    esi
mov     ax, [ebx]
mov     ebp, 0
test    ax, ax
jz      short loc_4746be
movzx   ebp, ax
add     ebp, dword_4ae6bc
test    ebp, ebp
jz      short loc_47472d
mov     eax, [esp+24h+rc.right]
cmp     [ebp+0], eax
jge     short loc_474725
mov     eax, [esp+24h+rc.left]
cmp     [ebp+8], eax
jle     short loc_474725
mov     eax, [esp+24h+rc.top]
cmp     [ebp+0ch], eax
jle     short loc_474725
mov     eax, [esp+24h+rc.bottom]
cmp     [ebp+4], eax
jge     short loc_474725
push    ebp
push    edi
push    edi
call    ds:unionrect
lea     ecx, [esp+24h+rc]
mov     eax, [edi]
push    14h
push    14h
mov     [ecx], eax
mov     edx, [edi+4]
mov     [ecx+4], edx
mov     eax, [edi+8]
mov     [ecx+8], eax
mov     edx, [edi+0ch]
mov     [ecx+0ch], edx
lea     ecx, [esp+2ch+rc]
push    ecx
call    esi
mov     [esp+24h+var_14], 0
mov     cx, [ebp+10h]
mov     [ebx], cx
jmp     short loc_4746a8
lea     ebx, [ebp+10h]
jmp     loc_4746a8
mov     ax, [edi+10h]
mov     edi, 0
test    ax, ax
jz      short loc_474744
movzx   edi, ax
add     edi, dword_4ae6bc
test    edi, edi
jnz     loc_474680
cmp     [esp+24h+var_14], 0
jz      loc_474653
mov     ax, word ptr [esp+24h+arg_0]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 20h
push    ebx
push    esi
push    edi
push    ebp
call    sub_4741b0
test    eax, eax
jnz     short loc_47478a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
lea     eax, [esp+30h+point]
mov     ecx, [esp+30h+hdc]
push    eax
push    ecx
call    ds:getwindoworgex
mov     bp, [esp+30h+arg_0]
mov     eax, [esp+30h+point.x]
xor     esi, esi
xor     edi, edi
neg     eax
mov     [esp+30h+var_20], eax
mov     eax, [esp+30h+point.y]
neg     eax
test    bp, bp
mov     [esp+30h+dy], eax
jz      loc_47486e
mov     ebx, [esp+30h+lprcsrc2]
movzx   eax, bp
add     eax, dword_4ae6bc
lea     ecx, [esp+30h+rcdst]
mov     bp, [eax+10h]
test    ebx, ebx
mov     edx, [eax]
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     [ecx+8], edx
mov     eax, [eax+0ch]
mov     [ecx+0ch], eax
jz      short loc_474804
lea     eax, [esp+30h+rcdst]
push    ebx
push    eax
lea     eax, [esp+38h+rcdst]
push    eax
call    ds:intersectrect
test    eax, eax
jz      short loc_474865
mov     eax, [esp+30h+dy]
mov     ecx, [esp+30h+var_20]
lea     edx, [esp+30h+rcdst]
push    eax
push    ecx
push    edx
call    ds:offsetrect
test    esi, esi
jnz     short loc_47482c
lea     eax, [esp+30h+rcdst]
push    eax
call    ds:createrectrgnindirect
mov     esi, eax
jmp     short loc_474865
test    edi, edi
jnz     short loc_47483f
lea     eax, [esp+30h+rcdst]
push    eax
call    ds:createrectrgnindirect
mov     edi, eax
jmp     short loc_47485a
mov     eax, [esp+30h+rcdst.bottom]
mov     ecx, [esp+30h+rcdst.right]
mov     edx, [esp+30h+rcdst.top]
push    eax
mov     eax, [esp+34h+rcdst.left]
push    ecx
push    edx
push    eax
push    edi
call    ds:setrectrgn
push    2
push    edi
push    esi
push    esi
call    ds:combinergn
test    bp, bp
jnz     loc_4747c4
test    esi, esi
jz      short loc_474889
mov     eax, [esp+30h+hdc]
push    esi
push    eax
call    ds:selectcliprgn
push    esi
mov     ebx, ds:deleteobject
call    ebx
jmp     short loc_47488f
mov     ebx, ds:deleteobject
test    edi, edi
jz      short loc_474896
push    edi
call    ebx
pop     ebp
cmp     esi, 1
sbb     eax, eax
pop     edi
inc     eax
pop     esi
pop     ebx
add     esp, 20h
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
call    sub_4741b0
test    eax, eax
jz      short loc_474908
mov     bx, [esp+1ch+arg_0]
test    bx, bx
jz      short loc_474908
mov     esi, [esp+1ch+hdcsrc]
mov     edi, [esp+1ch+hdc]
movzx   ecx, bx
add     ecx, dword_4ae6bc
lea     edx, [esp+1ch+var_10]
push    edx
push    esi
mov     eax, [ecx]
push    edi
mov     [edx], eax
mov     ebx, [ecx+4]
mov     [edx+4], ebx
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ebx, [ecx+0ch]
mov     [edx+0ch], ebx
mov     bx, [ecx+10h]
call    sub_474910
add     esp, 0ch
test    bx, bx
jnz     short loc_4748d1
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, [esp+arg_8]
push    esi
mov     eax, [esp+4+hdcsrc]
push    0cc0020h
mov     esi, [ecx+4]
mov     edx, [ecx]
push    esi
push    edx
push    eax
mov     eax, [ecx+0ch]
sub     eax, esi
push    eax
mov     eax, [ecx+8]
sub     eax, edx
mov     ecx, [esp+18h+hdc]
push    eax
push    esi
push    edx
push    ecx
call    ds:bitblt
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
call    sub_4741b0
test    eax, eax
jz      short loc_4749ad
mov     bp, [esp+20h+arg_0]
test    bp, bp
jz      short loc_4749ad
mov     esi, ds:fillrect
mov     edi, [esp+20h+hdc]
mov     ebx, [esp+20h+hbr]
movzx   ecx, bp
add     ecx, dword_4ae6bc
lea     edx, [esp+20h+rc]
push    ebx
mov     eax, [ecx]
mov     [edx], eax
mov     ebp, [ecx+4]
mov     [edx+4], ebp
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     ebp, [ecx+0ch]
mov     [edx+0ch], ebp
lea     edx, [esp+24h+rc]
mov     bp, [ecx+10h]
push    edx
push    edi
call    esi
test    bp, bp
jnz     short loc_474978
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_8]
push    esi
or      eax, 2000000h
push    eax
call    ds:createsolidbrush
mov     esi, eax
test    esi, esi
jz      short loc_4749f1
mov     eax, [esp+4+hdc]
push    esi
mov     ecx, dword ptr [esp+8+arg_0]
push    eax
push    ecx
call    sub_474950
add     esp, 0ch
push    esi
call    ds:deleteobject
pop     esi
retn
cmp     dword_4ae6b8, 0
jz      short loc_474a24
mov     eax, dword_4ae6b8
push    eax
call    ds:globalunlock
mov     ecx, dword_4ae6b8
push    ecx
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     dword_4ae6b8, eax
mov     dword_4ae6bc, eax
retn
push    ebx
xor     eax, eax
mov     ebx, [esp+4+lprcdst]
push    esi
push    edi
mov     [ebx+0ch], eax
mov     di, [esp+0ch+arg_0]
mov     [ebx+4], eax
mov     [ebx+8], eax
mov     [ebx], eax
call    sub_4741b0
test    eax, eax
jnz     short loc_474a68
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
test    di, di
jz      short loc_474a8a
mov     esi, ds:unionrect
movzx   edi, di
add     edi, dword_4ae6bc
push    edi
push    ebx
push    ebx
call    esi
mov     di, [edi+10h]
test    di, di
jnz     short loc_474a73
push    ebx
call    sub_473d20
add     esp, 4
cmp     eax, 1
sbb     eax, eax
pop     edi
neg     eax
pop     esi
pop     ebx
retn
mov     ax, [esp+arg_0]
test    ax, ax
jnz     short loc_474aae
xor     ax, ax
retn
movzx   ecx, ax
add     ecx, dword_4ae6bc
mov     edx, [esp+arg_4]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     [edx+8], eax
mov     eax, [ecx+0ch]
mov     [edx+0ch], eax
mov     ax, [ecx+10h]
retn
mov     ax, [esp+arg_0]
push    ebx
test    ax, ax
push    esi
push    edi
push    ebp
jz      short loc_474b57
mov     esi, [esp+10h+arg_4]
mov     edi, [esp+10h+arg_8]
movzx   ecx, ax
add     ecx, dword_4ae6bc
mov     eax, [esi+4]
cmp     [ecx+4], eax
jl      short loc_474b1f
mov     eax, [ecx+0ch]
cmp     [esi+0ch], eax
jl      short loc_474b1f
mov     eax, [esi]
cmp     [ecx], eax
jl      short loc_474b1f
mov     eax, [ecx+8]
mov     ebp, edi
cmp     [esi+8], eax
jge     short loc_474b23
mov     ebp, [esp+10h+arg_c]
mov     bx, [ecx+10h]
mov     eax, [ecx+0ch]
push    eax
mov     edx, [ecx+8]
push    edx
mov     eax, [ecx+4]
mov     dx, [ebp+0]
push    eax
mov     ecx, [ecx]
push    ecx
push    edx
call    sub_474400
mov     [ebp+0], ax
add     esp, 14h
test    bx, bx
jz      short loc_474b57
movzx   ecx, bx
add     ecx, dword_4ae6bc
jmp     short loc_474aff
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_474b73
cmp     dword ptr [eax], 0
jz      short loc_474b73
mov     eax, 1
retn
xor     eax, eax
retn
mov     ecx, [esp+arg_0]
xor     eax, eax
mov     edx, [esp+arg_4]
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], ax
mov     [ecx], edx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
push    ebp
push    ebx
mov     ebp, [esp+14h+arg_8]
mov     byte ptr [ebp+0], 0
call    sub_474c10
add     esp, 4
mov     esi, [ebx+4]
test    esi, esi
jz      short loc_474c02
mov     ecx, [esp+10h+arg_4]
cmp     ecx, 8
jb      short loc_474c02
mov     edx, [esi+4]
cmp     edx, ecx
jle     short loc_474c02
sub     edx, ecx
mov     eax, [esp+10h+arg_c]
cmp     edx, eax
jl      short loc_474bdc
mov     edx, eax
test    edx, edx
jle     short loc_474c02
add     esi, ecx
mov     edi, ebp
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
cmp     edx, eax
jge     short loc_474bfd
mov     byte ptr [ebp+edx+0], 0
jmp     short loc_474c02
mov     byte ptr [ebp+eax-1], 0
push    ebx
call    sub_474c40
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     ax, [esi+8]
test    ax, ax
lea     ecx, [eax+1]
mov     [esi+8], cx
jnz     short loc_474c31
mov     eax, [esi]
push    eax
call    ds:globallock
mov     [esi+4], eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     ax, [esi+8]
test    ax, ax
jle     short loc_474c54
dec     ax
mov     [esi+8], ax
cmp     word ptr [esi+8], 0
jnz     short loc_474c6b
mov     eax, [esi]
push    eax
call    ds:globalunlock
mov     dword ptr [esi+4], 0
pop     esi
retn
mov     eax, [esp+hwnd]
push    eax
mov     ds:frequency, eax
call    sub_474cf0
add     esp, 4
retn
mov     ds:frequency, 0
cmp     ds:ho, 0
push    esi
jz      short loc_474cbe
mov     eax, ds:ho
mov     esi, ds:deleteobject
push    eax
call    esi
mov     ds:ho, 0
jmp     short loc_474cc4
mov     esi, ds:deleteobject
cmp     ds:dword_4a9a4c, 0
jz      short loc_474cdf
mov     eax, ds:dword_4a9a4c
push    eax
call    esi
mov     ds:dword_4a9a4c, 0
pop     esi
retn
mov     eax, [esp+hwnd]
push    offset rcsrc2
push    eax
call    ds:getclientrect
mov     ecx, dy
add     ds:rcsrc2.bottom, ecx
retn
mov     ecx, x
mov     eax, [esp+arg_0]
mov     [eax], ecx
mov     ecx, [esp+arg_4]
mov     edx, dy
mov     [ecx], edx
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     x, eax
mov     dy, ecx
retn
mov     eax, [esp+hwnd]
push    esi
push    eax
call    ds:getdc
mov     esi, eax
push    0
mov     eax, dy
mov     ecx, x
push    eax
push    ecx
push    esi
call    ds:offsetwindoworgex
push    esi
call    sub_40ae90
add     esp, 4
mov     eax, esi
pop     esi
retn
push    esi
mov     eax, dy
push    eax
mov     ecx, x
mov     esi, [esp+8+lprc]
push    ecx
push    esi
call    ds:offsetrect
mov     eax, esi
pop     esi
retn
mov     ecx, x
mov     eax, [esp+arg_0]
add     [eax], ecx
mov     edx, dy
add     [eax+4], edx
retn
mov     ecx, x
mov     eax, [esp+arg_0]
sub     [eax], ecx
mov     edx, dy
sub     [eax+4], edx
retn
sub     esp, 8
lea     eax, [esp+8+point]
push    esi
mov     esi, [esp+0ch+hdc]
push    edi
push    eax
push    esi
call    ds:getwindoworgex
mov     eax, [esp+10h+point.y]
mov     edi, [esp+10h+hrgn]
neg     eax
push    eax
mov     eax, [esp+14h+point.x]
neg     eax
push    eax
push    edi
call    ds:offsetrgn
push    edi
push    esi
call    ds:selectcliprgn
mov     eax, edi
pop     edi
pop     esi
add     esp, 8
retn
cmp     ds:hdcsrc, 0
jnz     short loc_474e87
push    offset hdcsrc
call    sub_474fe0
add     esp, 4
cmp     ds:hdcsrc, 0
jnz     short loc_474e87
cmp     dword_4ae6f8, 0
jnz     short loc_474e87
push    0
push    offset hdcsrc
call    sub_475090
add     esp, 8
cmp     ds:ho, 1
sbb     eax, eax
neg     eax
mov     dword_4ae6f8, eax
retn
cmp     ds:dword_4a9a46, 0
push    esi
jnz     short loc_474ed8
push    offset dword_4a9a46
call    sub_474fe0
add     esp, 4
cmp     ds:dword_4a9a46, 0
jnz     short loc_474ed8
cmp     dword_4ae6fc, 0
jnz     short loc_474ed8
push    1
push    offset dword_4a9a46
call    sub_475090
add     esp, 8
xor     esi, esi
cmp     ds:hdcsrc, esi
jz      short loc_474f48
cmp     ds:dword_4a9a46, esi
jnz     short loc_474f48
mov     eax, ds:hdcsrc
mov     ecx, ds:ho
mov     edx, ds:h
mov     ds:dword_4a9a46, eax
mov     eax, ds:rcsrc2.bottom
mov     ds:dword_4a9a4c, ecx
push    eax
mov     ecx, ds:rcsrc2.right
push    ecx
mov     eax, ds:rcsrc2.left
mov     cx, ds:word_4a9a4a
mov     ds:dword_4a9a50, edx
mov     edx, ds:rcsrc2.top
push    edx
push    eax
push    ecx
call    sub_474400
mov     ds:word_4a9a4a, ax
add     esp, 14h
mov     ds:hdcsrc, esi
mov     ds:ho, esi
cmp     ds:dword_4a9a4c, 1
sbb     eax, eax
pop     esi
neg     eax
mov     dword_4ae6fc, eax
retn
cmp     ds:hdcsrc, 0
jz      short loc_474f89
mov     eax, ds:h
mov     ecx, ds:hdcsrc
push    eax
push    ecx
call    ds:selectobject
mov     ecx, ds:hdcsrc
push    ecx
call    ds:deletedc
mov     ds:hdcsrc, 0
retn
cmp     ds:dword_4a9a46, 0
jz      short loc_474fc9
mov     eax, ds:dword_4a9a50
mov     ecx, ds:dword_4a9a46
push    eax
push    ecx
call    ds:selectobject
mov     ecx, ds:dword_4a9a46
push    ecx
call    ds:deletedc
mov     ds:dword_4a9a46, 0
retn
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     ebx, ds:rcsrc2.bottom
mov     edi, ds:rcsrc2.right
sub     ebx, ds:rcsrc2.top
sub     edi, ds:rcsrc2.left
mov     esi, [esp+24h+arg_0]
mov     eax, [esi+6]
test    eax, eax
jz      short loc_475038
lea     ecx, [esp+24h+pv]
push    ecx
push    18h
push    eax
call    ds:getobjecta
test    eax, eax
jz      short loc_475038
cmp     [esp+24h+var_10], ebx
jnz     short loc_475027
cmp     [esp+24h+var_14], edi
jz      short loc_475038
mov     eax, [esi+6]
push    eax
call    ds:deleteobject
mov     dword ptr [esi+6], 0
cmp     dword ptr [esi+6], 0
jz      short loc_475082
mov     eax, ds:hdc
push    eax
call    ds:createcompatibledc
mov     [esi], eax
test    eax, eax
jz      short loc_475082
mov     ecx, [esi+6]
push    ecx
push    eax
call    ds:selectobject
mov     [esi+0ah], eax
test    eax, eax
jnz     short loc_475082
mov     eax, [esi]
push    eax
call    ds:deletedc
mov     ecx, [esi+6]
push    ecx
call    ds:deleteobject
mov     dword ptr [esi+6], 0
mov     dword ptr [esi], 0
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    esi
mov     eax, ds:hdc
push    edi
push    eax
call    ds:createcompatibledc
mov     esi, [esp+8+arg_0]
test    eax, eax
mov     [esi], eax
jz      loc_47517b
lea     edi, [esi+6]
mov     eax, ds:rcsrc2.bottom
cmp     [esp+8+arg_4], 1
jnz     short loc_4750dd
sub     eax, ds:rcsrc2.top
mov     ecx, ds:hdc
push    eax
mov     eax, ds:rcsrc2.right
sub     eax, ds:rcsrc2.left
push    eax
push    ecx
call    ds:creatediscardablebitmap
jmp     short loc_4750fd
sub     eax, ds:rcsrc2.top
mov     ecx, ds:hdc
push    eax
mov     eax, ds:rcsrc2.right
sub     eax, ds:rcsrc2.left
push    eax
push    ecx
call    ds:createcompatiblebitmap
mov     [edi], eax
mov     eax, [edi]
test    eax, eax
jz      short loc_475144
push    eax
mov     eax, [esi]
push    eax
call    ds:selectobject
mov     [esi+0ah], eax
test    eax, eax
jz      short loc_475144
mov     eax, ds:rcsrc2.bottom
mov     ecx, ds:rcsrc2.right
push    eax
mov     edx, ds:rcsrc2.top
push    ecx
mov     eax, ds:rcsrc2.left
mov     cx, [esi+4]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [esi+4], ax
add     esp, 14h
pop     edi
pop     esi
retn
mov     eax, [edi]
test    eax, eax
jz      short loc_475151
push    eax
call    ds:deleteobject
mov     eax, [esi]
push    eax
call    ds:deletedc
push    8
mov     dword ptr [esi], 0
mov     dword ptr [edi], 0
call    sub_4698f0
add     esp, 4
push    eax
push    37h
call    sub_422a90
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
cmp     dword_4ae700, esi
jnz     loc_475314
mov     edi, 1
mov     ds:dword_4a9a5c, esi
mov     dword_4ae700, edi
lea     eax, [esp+20h+rect]
push    esi
push    eax
mov     ecx, ds:frequency
push    ecx
call    ds:getupdaterect
test    eax, eax
jz      short loc_4751ef
lea     eax, [esp+20h+rect]
push    eax
call    sub_474db0
add     esp, 4
mov     ecx, [eax+0ch]
mov     edx, [eax+8]
mov     ebx, [eax+4]
push    ecx
mov     eax, [eax]
mov     cx, ds:word_4a9a58
push    edx
push    ebx
push    eax
push    ecx
call    sub_474400
mov     ds:word_4a9a58, ax
add     esp, 14h
xor     bp, bp
call    sub_474e50
cmp     ds:hdcsrc, esi
jz      short loc_475212
push    2
push    offset hdcsrc
push    esi
call    sub_475380
mov     bp, ax
add     esp, 0ch
call    sub_474ea0
cmp     ds:dword_4a9a46, esi
jz      short loc_475260
test    bp, bp
jz      short loc_47523a
mov     ax, ds:word_4a9a4a
push    ebp
push    eax
call    sub_474520
mov     ds:word_4a9a4a, ax
add     esp, 8
cmp     ds:hdcsrc, edi
sbb     eax, eax
and     eax, 2
add     ax, 4
push    eax
push    offset dword_4a9a46
mov     eax, ds:hdcsrc
push    eax
call    sub_475380
mov     bp, ax
add     esp, 0ch
call    sub_474f60
cmp     ds:dword_4a9a46, edi
sbb     ebx, ebx
and     ebx, 6
add     bx, 8
test    bp, bp
jz      short loc_47528f
mov     ax, ds:word_4a9a58
push    ebp
push    eax
call    sub_474520
mov     ds:word_4a9a58, ax
add     esp, 8
push    ebx
mov     eax, ds:dword_4a9a46
push    offset hdc
push    eax
call    sub_475380
add     esp, 0ch
call    sub_474fa0
call    sub_474a00
mov     ds:word_4a9a4a, si
mov     ds:word_4a9a3c, si
cmp     ds:dword_4a9a5c, esi
mov     ds:word_4a9a58, si
jz      short loc_4752f4
cmp     ds:dword_4a9a30, esi
jnz     short loc_4752e8
push    35h
call    sub_45c150
add     esp, 4
mov     ds:dword_4a9a30, edi
mov     ds:dword_4a9a5c, esi
cmp     ds:dword_4a9a5c, esi
jnz     loc_4751a6
push    1
push    offset dword_4a61c4
call    sub_410700
and     ds:byte_4a61d4, 0feh
mov     dword_4ae700, 0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
cmp     ds:frequency, 0
push    esi
jz      short loc_475369
mov     esi, ds:hdc
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     ds:hdc, eax
test    eax, eax
jz      short loc_475378
call    sub_475180
mov     eax, ds:hdc
mov     ecx, ds:frequency
push    eax
push    ecx
call    __beep_0
add     esp, 8
mov     ds:hdc, esi
pop     esi
retn
push    1
push    offset dword_4a61c4
call    sub_410700
add     esp, 8
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_4]
mov     eax, [esi]
push    eax
call    sub_40ae90
mov     dx, [esi+4]
mov     ecx, [esp+8+hdcsrc]
add     esp, 4
mov     eax, [esi]
push    eax
push    ecx
mov     ax, [esp+0ch+arg_8]
push    edx
push    eax
push    offset dword_4a61c4
call    sub_410750
add     esp, 14h
pop     esi
retn
mov     eax, [esp+lprcsrc2]
sub     esp, 10h
lea     ecx, [esp+10h+rcdst]
push    eax
push    offset rcsrc2
push    ecx
call    ds:intersectrect
mov     eax, [esp+10h+arg_4]
and     eax, 0ffffh
cmp     eax, 2
jz      short loc_4753f4
cmp     eax, 4
jz      short loc_47541e
cmp     eax, 8
jz      short loc_475448
add     esp, 10h
retn
mov     eax, [esp+10h+rcdst.bottom]
mov     ecx, [esp+10h+rcdst.right]
mov     edx, [esp+10h+rcdst.top]
push    eax
mov     eax, [esp+14h+rcdst.left]
push    ecx
mov     cx, ds:word_4a9a3c
push    edx
push    eax
push    ecx
call    sub_474400
mov     ds:word_4a9a3c, ax
add     esp, 14h
mov     eax, [esp+10h+rcdst.bottom]
mov     ecx, [esp+10h+rcdst.right]
mov     edx, [esp+10h+rcdst.top]
push    eax
mov     eax, [esp+14h+rcdst.left]
push    ecx
mov     cx, ds:word_4a9a4a
push    edx
push    eax
push    ecx
call    sub_474400
mov     ds:word_4a9a4a, ax
add     esp, 14h
mov     eax, [esp+10h+rcdst.bottom]
mov     ecx, [esp+10h+rcdst.right]
mov     edx, [esp+10h+rcdst.top]
push    eax
mov     eax, [esp+14h+rcdst.left]
push    ecx
mov     cx, ds:word_4a9a58
push    edx
push    eax
push    ecx
call    sub_474400
or      ds:byte_4a61d4, 1
mov     ds:word_4a9a58, ax
add     esp, 14h
add     esp, 10h
retn
mov     ax, [esp+arg_0]
mov     ecx, 1
cmp     ax, cx
jnz     short loc_475493
mov     eax, ecx
jmp     short loc_4754b9
cmp     ax, 2
jnz     short loc_4754a2
mov     ecx, 1
xor     eax, eax
jmp     short loc_4754b9
cmp     ax, 3
jnz     short loc_4754ae
xor     ecx, ecx
xor     eax, eax
jmp     short loc_4754b9
mov     ecx, dword_4ae6f8
mov     eax, dword_4ae6fc
mov     dword_4ae6f8, ecx
test    ecx, ecx
jz      short loc_4754ec
cmp     ds:ho, 0
mov     dword_4ae6fc, eax
jz      short loc_4754ec
mov     eax, ds:ho
push    eax
call    ds:deleteobject
mov     ds:ho, 0
mov     eax, dword_4ae6fc
mov     dword_4ae6fc, eax
test    eax, eax
jz      short loc_475514
cmp     ds:dword_4a9a4c, 0
jz      short loc_475514
mov     eax, ds:dword_4a9a4c
push    eax
call    ds:deleteobject
mov     ds:dword_4a9a4c, 0
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     ds:hdc, eax
call    sub_474e50
call    sub_474ea0
call    sub_474f60
call    sub_474fa0
mov     eax, ds:hdc
mov     ecx, ds:frequency
push    eax
push    ecx
call    __beep_0
mov     ds:hdc, 0
add     esp, 8
jmp     loc_475560
xor     eax, eax
cmp     dword_4ae6f8, eax
jnz     short loc_475577
cmp     ds:ho, eax
jz      short loc_475577
mov     eax, 1
cmp     dword_4ae6fc, 0
jnz     short loc_47558a
cmp     ds:dword_4a9a4c, 0
jz      short loc_47558a
inc     eax
inc     eax
retn
mov     ax, [esp+arg_0]
push    esi
push    edi
test    al, 2
jz      short loc_4755a2
mov     eax, dword_4ae704
jmp     short loc_4755b6
test    al, 4
jz      short loc_4755ad
mov     eax, dword_4ae708
jmp     short loc_4755b6
test    al, 8
jz      short loc_4755cb
mov     eax, dword_4ae70c
push    eax
mov     ecx, ds:hdc
mov     edx, dword ptr [esp+0ch+arg_4]
push    ecx
push    edx
call    sub_4749c0
add     esp, 0ch
mov     edi, ds:gettickcount
call    edi
lea     esi, [eax+0c8h]
call    edi
cmp     eax, esi
jb      short loc_4755d9
pop     edi
pop     esi
retn
push    42h
push    80h
call    sub_45b8f0
add     esp, 8
retn
mov     eax, [esp+hmem]
push    eax
call    sub_45ba00
add     esp, 4
retn
mov     eax, [esp+arg_0]
retn
mov     eax, [esp+arg_0]
retn
mov     eax, [esp+arg_0]
test    eax, eax
jnz     short loc_47563c
xor     ax, ax
retn
mov     eax, [eax]
mov     ax, [eax]
retn
mov     eax, [esp+arg_0]
test    eax, eax
jnz     short loc_47565b
xor     eax, eax
retn
mov     ecx, [eax]
movsx   edx, word ptr [ecx]
test    edx, edx
jle     short loc_475678
mov     ax, [esp+arg_4]
add     ecx, 2
cmp     [ecx], ax
jz      short loc_475676
dec     edx
test    edx, edx
jg      short loc_475669
test    edx, edx
mov     eax, 1
jg      short locret_475681
xor     eax, eax
retn
mov     eax, [esp+arg_0]
test    eax, eax
jnz     short loc_47569b
xor     eax, eax
retn
mov     eax, [eax]
movsx   ecx, word ptr [eax]
lea     eax, ds:2[ecx*2]
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+hmem]
add     edi, edi
mov     eax, [esi]
movsx   eax, word ptr [eax]
add     edi, 81h
add     eax, eax
and     edi, 0ff80h
add     eax, 81h
and     eax, 0ff80h
cmp     eax, edi
jnz     short loc_4756ea
push    esi
call    sub_45bbc0
add     esp, 4
cmp     eax, edi
jge     short loc_4756ff
push    42h
push    edi
push    esi
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_4756ff
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     si, [esp+8+arg_4]
push    edi
mov     ebx, [esp+0ch+hmem]
mov     eax, [ebx]
movsx   edi, word ptr [eax]
mov     ecx, edi
test    edi, edi
jle     short loc_47573f
add     eax, 2
cmp     [eax], si
jz      short loc_475736
dec     ecx
test    ecx, ecx
jg      short loc_475727
jmp     short loc_47573f
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
inc     edi
push    edi
push    ebx
call    sub_4756b0
add     esp, 8
test    eax, eax
jnz     short loc_475754
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [ebx]
mov     [eax], di
mov     [eax+edi*2], si
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    esi
mov     edx, [eax]
movsx   ecx, word ptr [edx]
mov     esi, edx
test    ecx, ecx
jle     short loc_4757ac
mov     ax, [esp+4+arg_4]
add     edx, 2
cmp     [edx], ax
jz      short loc_475794
dec     ecx
test    ecx, ecx
jg      short loc_475785
pop     esi
retn
lea     eax, ds:0fffffffeh[ecx*2]
lea     ecx, [edx+2]
push    eax
push    ecx
push    edx
call    _memcpy
dec     word ptr [esi]
add     esp, 0ch
pop     esi
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     di, [esp+0ch+arg_4]
push    ebp
cmp     di, 1
jb      short loc_47580c
mov     esi, [esp+10h+hmem]
mov     eax, [esi]
movsx   ebp, word ptr [eax]
movzx   eax, di
inc     ebp
cmp     eax, ebp
jbe     short loc_4757d5
mov     di, bp
push    ebp
push    esi
call    sub_4756b0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_47580c
mov     esi, [esi]
mov     ecx, ebp
movzx   eax, di
sub     ecx, eax
lea     edi, [esi+eax*2]
add     ecx, ecx
lea     eax, [edi+2]
push    ecx
push    edi
push    eax
call    _memcpy
mov     cx, [esp+1ch+arg_8]
add     esp, 0ch
mov     [esi], bp
mov     [edi], cx
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     ax, [esp+arg_4]
cmp     ax, 1
jb      short loc_47583e
cmp     [ecx], ax
jb      short loc_47583e
movzx   eax, ax
mov     ax, [ecx+eax*2]
retn
xor     ax, ax
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax]
mov     word ptr [ecx], 0
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_4]
push    edi
call    sub_475630
mov     bx, ax
add     esp, 4
test    bx, bx
jz      short loc_475894
mov     esi, [esp+0ch+arg_0]
push    ebx
push    edi
call    sub_475820
add     esp, 8
push    eax
push    esi
call    sub_475770
add     esp, 8
dec     bx
jnz     short loc_47587c
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+hmem]
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    ds:globallock
movsx   ebx, word ptr [eax]
mov     edi, eax
mov     esi, ebx
cmp     [esp+10h+arg_4], 1
jnz     short loc_4758e7
test    ebx, ebx
jle     short loc_47590c
mov     ebp, [esp+10h+arg_c]
mov     ax, [edi+2]
add     edi, 2
push    ebp
push    eax
call    [esp+18h+arg_8]
add     esp, 8
test    eax, eax
jz      short loc_4758e0
dec     esi
test    esi, esi
jg      short loc_4758c5
jmp     short loc_47590c
sub     ebx, esi
lea     esi, [ebx+1]
jmp     short loc_47590c
lea     edi, [edi+ebx*2]
test    ebx, ebx
jle     short loc_47590c
mov     ebp, [esp+10h+arg_c]
mov     eax, edi
push    ebp
mov     ax, [eax]
sub     edi, 2
push    eax
call    [esp+18h+arg_8]
add     esp, 8
test    eax, eax
jz      short loc_47590c
dec     esi
test    esi, esi
jg      short loc_4758f2
mov     eax, [esp+10h+hmem]
push    eax
call    ds:globalunlock
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+hmem]
push    esi
call    ds:globallock
mov     ecx, [esp+4+arg_4]
push    offset sub_475960
push    2
add     eax, 2
mov     ds:dword_4a9a64, ecx
movsx   edx, word ptr [eax-2]
push    edx
push    eax
call    sub_47d4b0
add     esp, 10h
push    esi
call    ds:globalunlock
pop     esi
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
mov     ax, [eax]
mov     dx, [ecx]
push    eax
push    edx
call    ds:dword_4a9a64
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_475690
add     esp, 4
add     eax, eax
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+hmem]
shl     edi, 2
mov     eax, [esi]
movsx   eax, word ptr [eax]
shl     eax, 2
add     edi, 83h
and     edi, 0ff80h
add     eax, 83h
and     eax, 0ff80h
cmp     eax, edi
jnz     short loc_4759cc
push    esi
call    sub_45bbc0
add     esp, 4
cmp     eax, edi
jge     short loc_4759e1
push    42h
push    edi
push    esi
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_4759e1
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
mov     cx, [esp+arg_4]
cmp     cx, 1
jb      short loc_475a0f
mov     eax, [esp+arg_0]
mov     edx, [eax]
movzx   eax, cx
movsx   ecx, word ptr [edx]
cmp     ecx, eax
jb      short loc_475a0f
mov     eax, [edx+eax*4]
retn
xor     eax, eax
retn
push    ebx
push    esi
mov     bx, [esp+8+arg_4]
push    edi
cmp     bx, 1
jb      short loc_475a67
mov     eax, 1
mov     edi, [esp+0ch+hmem]
mov     ecx, [edi]
movzx   esi, bx
movsx   edx, word ptr [ecx]
cmp     edx, esi
jnb     short loc_475a56
push    esi
push    edi
call    sub_475990
add     esp, 8
test    eax, eax
jz      short loc_475a69
mov     ecx, [edi]
mov     [ecx], bx
test    eax, eax
jz      short loc_475a69
mov     edx, [edi]
mov     ecx, [esp+0ch+arg_8]
pop     edi
mov     [edx+esi*4], ecx
pop     esi
pop     ebx
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+hmem]
push    edi
mov     esi, [esp+0ch+arg_4]
push    ebp
mov     eax, [ebx]
movsx   edi, word ptr [eax]
mov     ecx, edi
test    edi, edi
jle     short loc_475a9f
add     eax, 4
cmp     [eax], esi
jz      short loc_475a95
dec     ecx
test    ecx, ecx
jg      short loc_475a87
jmp     short loc_475a9f
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
lea     eax, ds:0[edi*4]
lea     ebp, ds:4[edi*4]
add     eax, 83h
inc     edi
and     eax, 0ff80h
add     ebp, 83h
and     ebp, 0ff80h
cmp     ebp, eax
jnz     short loc_475ad5
push    ebx
call    sub_45bbc0
add     esp, 4
cmp     eax, ebp
jge     short loc_475aec
push    2
push    ebp
push    ebx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_475aec
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [ebx]
pop     ebp
mov     [eax], di
mov     [eax+edi*4], esi
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
test    eax, eax
jnz     short loc_475b0b
xor     eax, eax
retn
mov     ecx, [eax]
movsx   edx, word ptr [ecx]
test    edx, edx
jle     short loc_475b26
mov     eax, [esp+arg_4]
add     ecx, 4
cmp     [ecx], eax
jz      short loc_475b24
dec     edx
test    edx, edx
jg      short loc_475b18
test    edx, edx
mov     eax, 1
jg      short locret_475b2f
xor     eax, eax
retn
mov     eax, [esp+hmem]
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    ds:globallock
movsx   ebp, word ptr [eax]
mov     ebx, eax
mov     esi, ebp
cmp     [esp+10h+arg_4], 1
jnz     short loc_475b76
test    ebp, ebp
jle     short loc_475b9a
mov     edi, [esp+10h+arg_c]
mov     eax, [ebx+4]
add     ebx, 4
push    edi
push    eax
call    [esp+18h+arg_8]
add     esp, 8
test    eax, eax
jz      short loc_475b6f
dec     esi
test    esi, esi
jg      short loc_475b55
jmp     short loc_475b9a
sub     ebp, esi
lea     esi, [ebp+1]
jmp     short loc_475b9a
lea     ebx, [ebx+ebp*4]
test    ebp, ebp
jle     short loc_475b9a
mov     edi, [esp+10h+arg_c]
mov     ecx, [ebx]
mov     eax, ebx
sub     ebx, 4
push    edi
push    ecx
call    [esp+18h+arg_8]
add     esp, 8
test    eax, eax
jz      short loc_475b9a
dec     esi
test    esi, esi
jg      short loc_475b81
mov     eax, [esp+10h+hmem]
push    eax
call    ds:globalunlock
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_8]
sub     esp, 48h
mov     [esp+48h+var_48], 1
mov     edx, [ecx+8]
push    esi
mov     eax, [esp+4ch+arg_4]
push    edi
dec     eax
add     ecx, 16h
mov     [esp+50h+var_40], 0
cmp     edx, 1
jb      short loc_475c0e
cmp     edx, 0eh
ja      short loc_475c0e
push    ecx
push    eax
lea     eax, [esp+58h+var_18]
push    eax
call    funcs_475be4[edx*4]
lea     edi, [esp+5ch+var_30]
add     esp, 0ch
mov     esi, eax
mov     ecx, 5
rep movsd
movsw
lea     esi, [esp+50h+var_30]
lea     edi, [esp+50h+var_48]
mov     ecx, 5
rep movsd
movsw
lea     esi, [esp+50h+var_48]
mov     eax, [esp+50h+arg_0]
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 48h
retn
mov     ecx, [esp+arg_8]
sub     esp, 18h
cmp     word ptr [ecx], 1
push    esi
mov     [esp+1ch+var_18], 1
mov     [esp+1ch+var_10], 0
push    edi
jnz     short loc_475c72
mov     eax, [ecx+8]
cmp     eax, 1
jz      short loc_475c62
cmp     eax, 2
jz      short loc_475c62
mov     dword ptr [ecx+8], 3
mov     eax, [ecx+8]
push    eax
call    sub_475480
mov     [esp+24h+var_10], eax
add     esp, 4
lea     esi, [esp+20h+var_18]
mov     eax, [esp+20h+arg_0]
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
mov     [esp+18h+var_18], 1
push    esi
push    edi
call    loc_475560
lea     esi, [esp+20h+var_18]
mov     ecx, 5
mov     [esp+20h+var_10], eax
mov     eax, [esp+20h+arg_0]
mov     edi, eax
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
mov     [esp+18h+var_18], 1
mov     [esp+18h+var_10], 0
cmp     [esp+18h+arg_4], 0
push    esi
push    edi
jz      short loc_475d10
mov     eax, [esp+20h+arg_8]
cmp     word ptr [eax], 1
jnz     short loc_475d10
mov     esi, [eax+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_475d10
push    2030308h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_475d10
mov     [esp+20h+var_10], 1
lea     esi, [esp+20h+var_18]
mov     eax, [esp+20h+arg_0]
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
cmp     [esp+18h+arg_4], 0
push    esi
push    edi
jz      short loc_475d52
mov     eax, [esp+20h+arg_8]
cmp     word ptr [eax], 1
jnz     short loc_475d52
mov     eax, [eax+8]
push    eax
call    sub_410e00
add     esp, 4
lea     eax, [esp+20h+var_18]
push    eax
call    sub_41afc0
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
cmp     [esp+18h+arg_4], 0
push    esi
push    edi
jz      short loc_475da2
mov     eax, [esp+20h+arg_8]
cmp     word ptr [eax], 1
jnz     short loc_475da2
mov     eax, [eax+8]
push    eax
call    sub_472ff0
add     esp, 4
lea     eax, [esp+20h+var_18]
push    eax
call    sub_41afc0
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    esi
push    edi
push    eax
call    sub_41afc0
mov     [esp+24h+var_10], 0ffffffffh
mov     [esp+24h+var_18], 1
add     esp, 4
cmp     [esp+20h+arg_4], 0
jz      short loc_475e12
mov     eax, [esp+20h+arg_8]
cmp     word ptr [eax], 1
jnz     short loc_475e12
mov     eax, [eax+8]
push    eax
call    sub_4082e0
mov     [esp+24h+var_10], eax
add     esp, 4
lea     esi, [esp+20h+var_18]
mov     eax, [esp+20h+arg_0]
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
push    esi
push    edi
xor     esi, esi
cmp     [esp+20h+arg_4], esi
jz      short loc_475e5b
mov     esi, [esp+20h+arg_8]
push    1
push    esi
call    sub_41aa60
add     esp, 8
mov     esi, [esi+8]
add     esi, ds:dword_4a8640
mov     ds:dword_4a8640, esi
lea     eax, [esp+20h+var_18]
push    eax
call    sub_41afc0
mov     eax, [esp+24h+arg_0]
mov     [esp+24h+var_10], esi
lea     esi, [esp+24h+var_18]
mov     edi, eax
add     esp, 4
mov     ecx, 5
mov     [esp+20h+var_18], 1
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    esi
push    edi
push    eax
call    sub_41afc0
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    esi
push    edi
push    eax
call    sub_41afc0
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    esi
push    edi
push    eax
call    sub_41afc0
add     esp, 4
push    1
call    sub_43e090
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    esi
push    edi
push    eax
call    sub_41afc0
add     esp, 4
cmp     [esp+20h+arg_4], 1
jnz     short loc_475f84
mov     eax, [esp+20h+arg_8]
cmp     word ptr [eax], 1
jnz     short loc_475f84
cmp     dword ptr [eax+8], 0
jz      short loc_475f75
mov     [esp+20h+var_18], 1
mov     ax, ds:word_4a8518
push    eax
call    sub_4895f0
mov     [esp+24h+var_10], eax
add     esp, 4
jmp     short loc_475f84
mov     ax, ds:word_4a8518
push    eax
call    sub_489650
add     esp, 4
lea     esi, [esp+20h+var_18]
mov     eax, [esp+20h+arg_0]
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    esi
push    edi
push    eax
call    sub_41afc0
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    esi
push    edi
push    eax
push    0
call    sub_41b000
lea     esi, [esp+28h+var_18]
mov     eax, [esp+28h+arg_0]
add     esp, 8
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
cmp     dword ptr [esp+4], 1
jnz     short loc_47601e
mov     eax, [esp+8]
cmp     word ptr [eax], 1
jnz     short loc_47601e
mov     eax, [eax+8]
push    eax
call    sub_42f460
add     esp, 4
retn
xor     eax, eax
retn
mov     eax, [esp+arg_4]
push    1
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_4764c0
add     esp, 0ch
retn
call    sub_42f3a0
xor     eax, eax
retn
sub     esp, 18h
cmp     [esp+18h+arg_0], 1
jnz     short loc_476091
mov     eax, [esp+18h+arg_4]
cmp     word ptr [eax], 1
jnz     short loc_476091
mov     eax, [eax+8]
lea     ecx, [esp+18h+var_18]
push    eax
push    ecx
call    sub_432000
add     esp, 8
test    eax, eax
jz      short loc_476091
mov     eax, [esp+18h+var_18]
add     esp, 18h
retn
xor     eax, eax
add     esp, 18h
retn
mov     eax, [esp+arg_4]
push    0
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_4764c0
add     esp, 0ch
retn
push    ebx
push    esi
xor     si, si
push    edi
mov     bx, 32h
call    sub_433290
mov     di, ax
mov     ecx, [esp+0ch+arg_4]
mov     eax, [esp+0ch+arg_0]
cmp     eax, 1
jl      short loc_4760e3
mov     si, [ecx+8]
cmp     eax, 2
jl      short loc_4760ec
mov     di, [ecx+1eh]
cmp     eax, 3
jl      short loc_476101
mov     ebx, [ecx+34h]
cmp     ebx, 7fffh
jl      short loc_476101
mov     ebx, 7fffh
cmp     si, 1
jl      short loc_476129
call    sub_433290
movsx   ecx, di
cmp     eax, ecx
jl      short loc_476129
cmp     di, si
jl      short loc_476129
push    0
push    ebx
push    edi
push    esi
call    sub_432bd0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
push    ebx
push    esi
mov     ebx, [esp+18h+arg_4]
push    edi
push    ebp
mov     edi, 1
push    ebx
xor     esi, esi
call    sub_442d80
mov     [esp+24h+lpstring], eax
add     esp, 4
cmp     eax, esi
jz      loc_476227
xor     di, di
xor     ebp, ebp
mov     ecx, [esp+20h+arg_0]
mov     [esp+20h+var_c], esi
mov     [esp+20h+var_8], esi
mov     [esp+20h+var_4], esi
cmp     ecx, 2
jl      short loc_476174
mov     esi, [ebx+1eh]
cmp     ecx, 3
jl      short loc_47617d
mov     di, [ebx+34h]
cmp     ecx, 4
jl      short loc_476185
mov     ebp, [ebx+4ah]
cmp     ecx, 5
jl      short loc_476191
mov     eax, [ebx+60h]
mov     [esp+20h+var_c], eax
cmp     ecx, 6
jl      short loc_47619d
mov     eax, [ebx+76h]
mov     [esp+20h+var_8], eax
cmp     ecx, 7
jl      short loc_4761ac
mov     eax, [ebx+8ch]
mov     [esp+20h+var_4], eax
test    esi, esi
jz      short loc_4761f7
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_4761de
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 6
jz      short loc_4761e0
cmp     ax, 4
jz      short loc_4761e0
cmp     ax, 5
jz      short loc_4761e0
cmp     ax, 0ch
jz      short loc_4761e0
xor     esi, esi
test    esi, esi
jnz     short loc_4761f7
push    ebx
call    sub_442e00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+var_4]
push    0
mov     ecx, [esp+24h+var_8]
push    0
mov     edx, [esp+28h+var_c]
push    0
push    eax
push    ecx
mov     eax, [esp+34h+lpstring]
push    edx
push    ebp
push    edi
push    esi
push    eax
call    sub_4324d0
add     esp, 28h
mov     edi, eax
push    ebx
call    sub_442e00
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 4
push    ebx
push    esi
push    edi
xor     ebx, ebx
xor     esi, esi
cmp     [esp+10h+arg_0], 1
jnz     short loc_4762ae
mov     edi, [esp+10h+arg_4]
cmp     word ptr [edi], 1
jnz     short loc_4762ae
mov     eax, [edi+8]
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_4762a5
lea     eax, [esp+10h+var_4]
push    1
push    eax
mov     ecx, [edi+8]
push    ecx
call    sub_455730
add     esp, 0ch
mov     esi, eax
cmp     esi, ebx
jz      short loc_4762a5
mov     eax, [esi]
dec     [esp+10h+var_4]
js      short loc_4762a5
cmp     [esp+10h+var_4], ebx
jle     short loc_47629e
cmp     [eax], bl
jnz     short loc_47629e
cmp     [eax+1], bl
jz      short loc_47629e
mov     byte ptr [eax], 20h
inc     eax
dec     [esp+10h+var_4]
jns     short loc_47628c
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ecx, [esp+arg_4]
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [ecx+8]
cmp     [esp+0ch+arg_0], 2
jnz     short loc_4762d6
mov     esi, [ecx+1eh]
push    edi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_476339
test    esi, esi
jz      short loc_476303
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_476339
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jnz     short loc_476339
push    edi
call    sub_461f70
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_47632d
cmp     ebx, esi
jz      short loc_476333
test    esi, esi
jnz     short loc_476329
push    ebx
call    sub_462480
add     esp, 4
cmp     ax, 0ch
jz      short loc_476333
mov     edi, ebx
jmp     short loc_476303
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_4]
sub     esp, 19ch
lea     eax, [esp+19ch+string]
push    esi
push    eax
mov     edx, [ecx+8]
push    edx
call    sub_4763b0
add     esp, 8
push    2
push    0
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_47639a
lea     eax, [esp+1a0h+string]
push    0
push    eax
call    ds:lstrlena
inc     eax
lea     ecx, [esp+1a4h+string]
push    eax
push    ecx
push    esi
call    sub_45baf0
add     esp, 10h
test    eax, eax
jnz     short loc_47639a
push    esi
call    sub_45ba00
add     esp, 4
xor     esi, esi
mov     eax, esi
pop     esi
add     esp, 19ch
retn
mov     eax, [esp+arg_0]
push    esi
test    eax, eax
jnz     short loc_4763bd
xor     eax, eax
pop     esi
retn
mov     esi, [esp+4+lpstring1]
push    19ah
push    esi
push    eax
mov     byte ptr [esi], 0
call    sub_486100
add     esp, 0ch
push    esi
call    sub_45b740
add     esp, 4
cmp     byte ptr [esi], 1
sbb     eax, eax
pop     esi
inc     eax
retn
sub     esp, 1b4h
push    ebx
push    esi
push    edi
push    ebp
push    42h
push    2
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jz      loc_4764b2
mov     si, [esp+1c4h+arg_0]
xor     ebx, ebx
cmp     [esp+1c4h+arg_4], si
jl      loc_4764b2
cmp     [esp+1c4h+arg_8], 0
mov     ax, si
jz      short loc_476445
movsx   ecx, ax
inc     si
push    ecx
call    sub_42f460
add     esp, 4
jmp     short loc_476461
inc     si
push    eax
lea     ecx, [esp+1c8h+var_1b4]
push    ecx
call    sub_432000
add     esp, 8
test    eax, eax
jz      short loc_4764b2
mov     eax, [esp+1c4h+var_1b4]
test    eax, eax
jz      short loc_4764a4
lea     ecx, [esp+1c4h+string]
push    ecx
push    eax
call    sub_4763b0
add     esp, 8
test    eax, eax
jz      short loc_4764a4
lea     eax, [esp+1c4h+string]
push    eax
call    ds:lstrlena
mov     ebp, eax
push    ebx
mov     [esp+ebp+1c8h+string], 0dh
mov     [esp+ebp+1c8h+var_19b], 0
lea     ecx, [esp+1c8h+string]
lea     eax, [ebp+2]
inc     ebp
push    eax
push    ecx
push    edi
call    sub_45baf0
add     esp, 10h
test    eax, eax
jz      short loc_4764b2
add     ebx, ebp
cmp     [esp+1c4h+arg_4], si
jge     loc_476428
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1b4h
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
xor     eax, eax
push    esi
push    edi
cmp     ecx, 1
jl      short loc_4764dd
mov     edx, [esp+0ch+arg_4]
mov     di, [edx+8]
mov     si, di
jmp     short loc_4764eb
mov     si, [esp+0ch+var_2]
mov     edx, [esp+0ch+arg_4]
mov     di, [esp+0ch+var_2]
cmp     ecx, 2
jl      short loc_4764f4
mov     di, [edx+1eh]
cmp     di, si
jl      short loc_476508
mov     eax, [esp+0ch+arg_8]
push    eax
push    edi
push    esi
call    sub_4763f0
add     esp, 0ch
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
sub     esp, 30h
lea     edx, [esp+30h+var_18]
push    esi
push    edi
push    1
push    eax
push    ecx
push    edx
call    sub_4765b0
lea     edi, [esp+48h+var_30]
add     esp, 10h
mov     esi, eax
mov     ecx, 5
rep movsd
movsw
lea     esi, [esp+38h+var_30]
mov     eax, [esp+38h+arg_0]
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 30h
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
sub     esp, 30h
lea     edx, [esp+30h+var_18]
push    esi
push    edi
push    0
push    eax
push    ecx
push    edx
call    sub_4765b0
lea     edi, [esp+48h+var_30]
add     esp, 10h
mov     esi, eax
mov     ecx, 5
rep movsd
movsw
lea     esi, [esp+38h+var_30]
mov     eax, [esp+38h+arg_0]
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 30h
retn
sub     esp, 2ch
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
call    sub_421e00
mov     edi, eax
mov     byte ptr [esp+3ch+hmem], bl
lea     eax, [esp+3ch+var_18]
push    eax
call    sub_41afc0
mov     esi, [esp+40h+arg_8]
add     esp, 4
push    esi
call    sub_442d80
add     esp, 4
mov     ebp, eax
mov     eax, [esp+3ch+arg_4]
cmp     eax, 2
jz      short loc_476608
cmp     eax, 3
jnz     short loc_476633
lea     eax, [esi+2ch]
push    eax
call    sub_442d80
add     esp, 4
mov     bl, [eax]
lea     eax, [esi+2ch]
push    eax
call    sub_442e00
add     esp, 4
lea     eax, [esi+16h]
push    eax
call    sub_442d80
add     esp, 4
mov     al, [eax]
lea     ecx, [esi+16h]
mov     byte ptr [esp+3ch+hmem], al
push    ecx
call    sub_442e00
add     esp, 4
cmp     byte ptr [esp+3ch+hmem], 2ch
jnz     short loc_476633
test    bl, bl
jnz     short loc_476633
mov     bl, 3bh
lea     eax, [esp+3ch+var_20]
lea     ecx, [esp+3ch+var_24]
mov     edx, [esp+3ch+hmem]
push    eax
lea     eax, [esp+40h+var_1c]
push    ecx
lea     ecx, [esp+44h+hmem+1]
push    0
push    ebx
push    edx
push    0
push    eax
push    ecx
push    ebp
push    edi
call    sub_41e3d0
add     esp, 28h
mov     ebx, eax
test    ebx, ebx
jz      short loc_4766bb
push    ebx
push    0
push    2060h
push    edi
call    sub_442a20
mov     eax, [esp+4ch+var_20]
mov     ecx, [esp+4ch+var_24]
add     esp, 10h
push    eax
push    ecx
push    ebp
push    ebx
call    sub_41bf50
add     esp, 10h
push    eax
push    0
push    2061h
push    edi
call    sub_4429c0
add     esp, 10h
push    esi
call    sub_442e00
lea     esi, [esp+40h+var_18]
mov     eax, [esp+40h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
push    esi
call    sub_442e00
mov     eax, [esp+40h+arg_c]
lea     ecx, [esp+40h+var_18]
mov     edx, [esp+40h+hmem+1]
add     esp, 4
push    eax
push    ecx
push    edx
call    ds:globallock
push    eax
push    edi
call    sub_41a990
mov     ecx, [esp+4ch+hmem+1]
add     esp, 10h
mov     esi, eax
push    ecx
call    sub_45ba00
add     esp, 4
push    esi
push    0
push    2060h
push    edi
call    sub_442a20
add     esp, 10h
push    0
push    0
push    0
push    esi
call    sub_41bf50
add     esp, 10h
push    eax
push    0
push    2061h
push    edi
call    sub_4429c0
lea     esi, [esp+4ch+var_18]
mov     eax, [esp+4ch+arg_0]
add     esp, 10h
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_4]
push    edi
xor     edi, edi
push    esi
call    sub_442d80
add     esp, 4
mov     ebx, eax
push    ebx
call    ds:lstrlena
cmp     eax, 105h
jg      short loc_476795
lea     eax, [esp+10h+var_4]
push    eax
push    ebx
call    sub_44f360
add     esp, 8
cmp     [esp+10h+var_4], edi
jz      short loc_476795
lea     eax, [esp+10h+var_4]
push    eax
call    sub_44a660
add     esp, 4
mov     edi, eax
mov     eax, [esp+10h+var_4]
push    eax
call    sub_44f4a0
add     esp, 4
push    esi
call    sub_442e00
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 0ch
push    ebx
push    esi
push    edi
push    0
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     esi, [esp+28h+arg_4]
add     esp, 10h
push    esi
call    sub_442d80
lea     ecx, [esp+1ch+var_c]
add     esp, 4
push    ecx
push    eax
call    sub_44f360
add     esp, 8
cmp     [esp+18h+var_c], 0
jnz     short loc_47680f
push    8
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+18h+var_c]
push    eax
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_476850
push    45eh
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+28h+var_c]
add     esp, 10h
push    eax
call    sub_44f4a0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    esi
call    sub_442e00
lea     eax, [esp+1ch+var_c]
add     esp, 4
push    eax
call    sub_44a450
add     esp, 4
cmp     eax, 0ffffffffh
jnz     short loc_47689c
call    sub_44a430
push    eax
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+28h+var_c]
add     esp, 10h
push    eax
call    sub_44f4a0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
cmp     eax, 7530h
jl      short loc_4768a8
mov     eax, 7530h
mov     edi, eax
push    2
lea     eax, [edi+1]
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_4768de
push    8
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+18h+var_c]
push    0
push    eax
call    sub_44baf0
mov     [esp+20h+hobject], eax
mov     [esp+20h+var_4], edx
add     esp, 8
cmp     [esp+18h+hobject], 0
jnz     short loc_476936
call    sub_44a430
push    eax
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
push    esi
call    sub_45ba00
mov     eax, [esp+1ch+var_c]
add     esp, 4
push    eax
call    sub_44f4a0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    esi
call    ds:globallock
mov     ebx, eax
push    0
mov     eax, [esp+1ch+hobject]
push    0
mov     ecx, [esp+20h+var_4]
push    edi
push    ebx
push    ecx
push    eax
call    sub_44b0c0
add     esp, 18h
cmp     eax, 0ffffffffh
jz      short loc_476983
push    ebx
mov     byte ptr [ebx+eax], 0
call    sub_47fd60
add     esp, 4
push    42h
push    ebx
call    ds:lstrlena
inc     ax
movzx   ecx, ax
push    ecx
push    esi
call    sub_45b960
add     esp, 0ch
jmp     short loc_47699e
call    sub_44a430
push    eax
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
push    esi
call    ds:globalunlock
cmp     [esp+18h+hobject], 0
jz      short loc_4769be
mov     eax, [esp+18h+hobject]
mov     ecx, [esp+18h+var_4]
push    ecx
push    eax
call    sub_44ae90
add     esp, 8
mov     eax, [esp+18h+var_c]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 18h
push    ebx
push    esi
mov     eax, [esp+20h+arg_4]
push    edi
push    ebp
xor     edi, edi
mov     [esp+28h+hobject], edi
push    eax
mov     [esp+2ch+var_c], edi
call    sub_442d80
lea     ecx, [esp+2ch+var_14]
add     esp, 4
push    ecx
push    eax
call    sub_44f360
add     esp, 8
mov     esi, eax
cmp     esi, edi
jz      short loc_476a31
push    esi
push    edi
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+28h+var_14]
push    eax
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_476a76
push    45eh
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+38h+var_14]
add     esp, 10h
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, 45eh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+28h+var_14]
push    0
push    eax
call    sub_44f980
add     esp, 8
test    eax, eax
jz      short loc_476a90
mov     eax, ds:dword_4a8514
jmp     short loc_476a94
mov     eax, [esp+28h+var_14]
mov     edi, [esp+28h+arg_8]
push    0
cmp     edi, 1
sbb     ecx, ecx
neg     ecx
push    ecx
push    eax
call    sub_44be50
add     esp, 0ch
mov     esi, eax
test    esi, esi
jnz     loc_476c56
test    edi, edi
jz      short loc_476b25
mov     eax, [esp+28h+var_14]
push    2
push    eax
call    sub_44baf0
mov     [esp+30h+hfile], eax
mov     [esp+30h+hobject], eax
mov     [esp+30h+var_4], edx
mov     [esp+30h+var_c], edx
add     esp, 8
cmp     [esp+28h+hfile], 0
jz      short loc_476b25
mov     edi, 0ffffffffh
lea     eax, [esp+28h+buffer]
mov     edx, [esp+28h+hfile]
push    edi
mov     ecx, [esp+2ch+var_4]
push    2
push    1
push    eax
push    ecx
push    edx
call    sub_44b0c0
add     esp, 18h
cmp     eax, 1
jnz     short loc_476b0c
cmp     [esp+28h+buffer], 1ah
jz      short loc_476b0e
xor     edi, edi
mov     eax, [esp+28h+hfile]
push    2
mov     ecx, [esp+2ch+var_4]
push    edi
push    ecx
push    eax
call    sub_44af10
add     esp, 10h
jmp     short loc_476b6c
mov     eax, [esp+28h+var_14]
push    eax
call    sub_44b480
mov     eax, [esp+2ch+var_14]
add     esp, 4
push    eax
call    sub_44ad30
add     esp, 4
test    eax, eax
jnz     short loc_476b65
mov     eax, [esp+28h+var_14]
push    2
push    eax
call    sub_44baf0
mov     [esp+30h+hfile], eax
mov     [esp+30h+hobject], eax
mov     [esp+30h+var_c], edx
add     esp, 8
cmp     [esp+28h+hfile], 0
jz      short loc_476b6c
call    sub_44a430
mov     esi, eax
cmp     [esp+28h+hobject], 0
jz      loc_476c56
mov     eax, [esp+28h+arg_4]
xor     esi, esi
add     eax, 16h
mov     [esp+28h+hfile], eax
push    eax
call    sub_442d80
mov     [esp+2ch+buffer], 0dh
mov     [esp+2ch+var_15], 0ah
add     esp, 4
mov     ebx, eax
push    0dh
push    ebx
call    _strchr
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_476c03
push    ebx
mov     byte ptr [edi], 0
call    ds:lstrlena
mov     ebp, eax
push    0
mov     eax, [esp+2ch+hobject]
push    1
mov     ecx, [esp+30h+var_c]
push    ebp
push    ebx
push    ecx
push    eax
call    sub_44b1f0
add     esp, 18h
cmp     eax, ebp
jnz     short loc_476bfc
lea     eax, [esp+28h+buffer]
push    0
mov     edx, [esp+2ch+hobject]
push    1
mov     ecx, [esp+30h+var_c]
push    2
push    eax
push    ecx
push    edx
call    sub_44b1f0
add     esp, 18h
cmp     eax, 2
jnz     short loc_476bfc
lea     ebx, [edi+1]
mov     byte ptr [edi], 0dh
jmp     short loc_476b99
call    sub_44a430
mov     esi, eax
test    esi, esi
jnz     short loc_476c37
push    ebx
call    ds:lstrlena
mov     edi, eax
test    edi, edi
jle     short loc_476c37
mov     eax, [esp+28h+hobject]
push    0
mov     ecx, [esp+2ch+var_c]
push    1
push    edi
push    ebx
push    ecx
push    eax
call    sub_44b1f0
add     esp, 18h
cmp     eax, edi
jz      short loc_476c37
call    sub_44a430
mov     esi, eax
mov     eax, [esp+28h+hobject]
mov     ecx, [esp+28h+var_c]
push    ecx
push    eax
call    sub_44ae90
mov     ecx, [esp+30h+hfile]
add     esp, 8
push    ecx
call    sub_442e00
add     esp, 4
mov     eax, [esp+28h+var_14]
push    eax
call    sub_44f4a0
mov     eax, [esp+2ch+arg_4]
add     esp, 4
push    eax
call    sub_442e00
add     esp, 4
push    esi
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+arg_4]
push    1
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_4769e0
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
push    0
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_4769e0
add     esp, 0ch
retn
sub     esp, 10ch
push    ebx
push    esi
push    edi
push    0
mov     edi, 8
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     esi, [esp+128h+arg_4]
add     esp, 10h
push    esi
call    sub_442d80
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      loc_476e0f
mov     [esp+118h+var_10c], 0
push    ebx
call    sub_44e540
add     esp, 4
test    eax, eax
jz      short loc_476d2c
lea     eax, [esp+118h+var_10c]
push    eax
push    ebx
jmp     short loc_476d68
lea     eax, [esp+118h+string]
push    106h
push    eax
mov     ecx, ds:dword_4a8514
push    ecx
call    sub_44f520
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     short loc_476d72
lea     eax, [esp+118h+string]
push    106h
push    ebx
push    eax
call    sub_47f990
lea     eax, [esp+124h+var_10c]
lea     ecx, [esp+124h+string]
add     esp, 0ch
push    eax
push    ecx
call    sub_44f360
add     esp, 8
mov     edi, eax
cmp     [esp+118h+var_10c], 0
jz      loc_476e0f
mov     eax, [esp+118h+var_10c]
push    eax
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_476dc4
push    45eh
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+128h+var_10c]
add     esp, 10h
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, 45eh
pop     edi
pop     esi
pop     ebx
add     esp, 10ch
retn
test    edi, edi
jnz     short loc_476df9
mov     eax, [esp+118h+var_10c]
push    eax
call    sub_44b480
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_476de3
call    sub_44a430
push    eax
jmp     short loc_476de4
push    edi
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
push    esi
call    sub_442e00
mov     eax, [esp+11ch+var_10c]
add     esp, 4
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 10ch
retn
sub     esp, 14h
push    ebx
push    esi
push    edi
push    ebp
push    0
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
cmp     [esp+24h+arg_0], 2
jnz     short loc_476e92
mov     edi, [esp+24h+arg_4]
lea     esi, [edi+16h]
push    esi
call    sub_442d80
add     esp, 4
mov     ebx, eax
push    offset aff
push    ebx
call    _strpbrk
add     esp, 8
cmp     eax, 1
sbb     eax, eax
push    offset add
inc     eax
push    ebx
mov     [esp+2ch+var_8], eax
call    _strpbrk
add     esp, 8
cmp     eax, 1
sbb     eax, eax
push    esi
inc     eax
mov     [esp+28h+var_4], eax
call    sub_442e00
add     esp, 4
jmp     short loc_476ea3
mov     eax, 1
mov     edi, [esp+24h+arg_4]
mov     [esp+24h+var_4], eax
mov     [esp+24h+var_8], eax
call    sub_44a430
push    edi
call    sub_442d80
lea     ecx, [esp+28h+var_14]
add     esp, 4
push    ecx
push    eax
call    sub_44f390
add     esp, 8
test    eax, eax
jz      short loc_476eec
push    eax
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
push    edi
call    sub_442e00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
push    edi
call    sub_442e00
mov     eax, [esp+28h+var_14]
add     esp, 4
push    eax
call    sub_44b360
add     esp, 4
test    eax, eax
jnz     short loc_476f37
push    3edh
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+34h+var_14]
add     esp, 10h
push    eax
call    sub_44f4a0
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
lea     eax, [esp+24h+var_10]
mov     ecx, [esp+24h+var_14]
push    eax
push    ecx
call    sub_44b550
add     esp, 8
test    eax, eax
jz      short loc_476f7a
push    eax
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+34h+var_14]
add     esp, 10h
push    eax
call    sub_44f4a0
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     edi, 400h
push    42h
mov     bp, di
push    edi
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_476fc1
push    8
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+34h+var_14]
add     esp, 10h
push    eax
call    sub_44f4a0
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
push    esi
call    ds:globallock
mov     [esp+24h+var_c], eax
mov     ebx, eax
lea     eax, [esp+24h+var_10]
mov     ecx, [esp+24h+var_14]
push    eax
push    ecx
call    sub_44b690
add     esp, 8
test    eax, eax
jz      loc_47708d
cmp     [esp+24h+var_10], 0
jz      short loc_476ffd
cmp     [esp+24h+var_4], 0
jnz     short loc_477004
cmp     [esp+24h+var_10], 0
jnz     short loc_477073
cmp     [esp+24h+var_8], 0
jz      short loc_477073
cmp     edi, 0eh
jge     short loc_477048
add     bp, 400h
push    esi
call    ds:globalunlock
movzx   eax, bp
push    42h
push    eax
push    esi
call    sub_45b960
add     esp, 0ch
test    eax, eax
jz      loc_4770cc
add     edi, 400h
push    esi
call    ds:globallock
mov     [esp+24h+var_c], eax
push    eax
mov     ebx, eax
call    ds:lstrlena
add     ebx, eax
mov     eax, [esp+24h+var_14]
push    edi
push    ebx
push    eax
call    sub_42f150
add     esp, 0ch
cmp     byte ptr [ebx], 2eh
jnz     short loc_477061
mov     byte ptr [ebx], 0
jmp     short loc_477073
push    ebx
call    ds:lstrlena
lea     ecx, [eax+1]
add     ebx, eax
mov     byte ptr [ebx], 0dh
sub     edi, ecx
inc     ebx
lea     eax, [esp+24h+var_10]
mov     ecx, [esp+24h+var_14]
push    eax
push    ecx
call    sub_44b690
add     esp, 8
test    eax, eax
jnz     loc_476fe8
mov     eax, [esp+24h+var_14]
mov     edi, ebx
push    eax
call    sub_44f4a0
sub     edi, [esp+28h+var_c]
add     esp, 4
inc     di
cmp     di, 1
jbe     short loc_4770ac
mov     byte ptr [ebx-1], 0
push    esi
call    ds:globalunlock
movzx   eax, di
push    42h
push    eax
push    esi
call    sub_45b960
add     esp, 0ch
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
push    8
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+34h+var_14]
add     esp, 10h
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 10ch
push    ebx
push    esi
push    edi
mov     ebx, 8
mov     esi, [esp+118h+arg_4]
push    esi
call    sub_442d80
add     esp, 4
mov     edi, eax
test    edi, edi
jz      loc_477202
mov     [esp+118h+var_10c], 0
push    edi
call    sub_44e540
add     esp, 4
test    eax, eax
jz      short loc_477145
lea     eax, [esp+118h+var_10c]
push    eax
push    edi
jmp     short loc_477181
lea     eax, [esp+118h+var_108]
push    106h
push    eax
mov     ecx, ds:dword_4a8514
push    ecx
call    sub_44f520
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jnz     short loc_47718b
lea     eax, [esp+118h+var_108]
push    106h
push    edi
push    eax
call    sub_47f990
lea     eax, [esp+124h+var_10c]
lea     ecx, [esp+124h+var_108]
add     esp, 0ch
push    eax
push    ecx
call    sub_44f390
add     esp, 8
mov     ebx, eax
mov     eax, [esp+118h+var_10c]
push    eax
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_4771d2
push    45eh
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+128h+var_10c]
add     esp, 10h
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, 45eh
pop     edi
pop     esi
pop     ebx
add     esp, 10ch
retn
test    ebx, ebx
jnz     short loc_4771e5
mov     eax, [esp+118h+var_10c]
push    eax
call    sub_44b740
add     esp, 4
mov     ebx, eax
cmp     [esp+118h+var_10c], 0
jz      short loc_4771f9
mov     eax, [esp+118h+var_10c]
push    eax
call    sub_44f4a0
add     esp, 4
push    esi
call    sub_442e00
add     esp, 4
push    ebx
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 10ch
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_4]
push    edi
push    ebp
push    esi
lea     edi, [esi+16h]
call    sub_442d80
add     esp, 4
mov     ebx, eax
push    edi
call    sub_442d80
add     esp, 4
mov     ebp, eax
lea     eax, [esp+20h+var_c]
push    eax
push    ebx
call    sub_44f360
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jnz     loc_4773c8
mov     eax, [esp+20h+var_c]
push    eax
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_4772b1
push    45eh
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+30h+var_c]
add     esp, 10h
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, 45eh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
lea     eax, [esp+20h+var_10]
push    eax
push    ebp
call    sub_44f360
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_4772ce
mov     eax, [esp+20h+var_c]
jmp     loc_4773bf
mov     eax, [esp+20h+var_10]
push    eax
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_477320
push    45eh
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
mov     eax, [esp+30h+var_c]
add     esp, 10h
push    eax
call    sub_44f4a0
mov     eax, [esp+24h+var_10]
add     esp, 4
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, 45eh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+var_10]
push    0
push    eax
call    sub_44f980
add     esp, 8
test    eax, eax
jz      short loc_47733a
mov     eax, ds:dword_4a8514
jmp     short loc_47733e
mov     eax, [esp+20h+var_10]
push    0
push    0
push    eax
call    sub_44be50
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jnz     short loc_4773c8
lea     eax, [esp+20h+var_4]
lea     ecx, [esp+20h+hmem]
mov     edx, [esp+20h+var_c]
push    eax
push    ecx
push    edx
call    sub_44f550
add     esp, 0ch
cmp     [esp+20h+hmem], 0
jnz     short loc_47737b
mov     ebx, 8
mov     eax, [esp+20h+var_c]
push    eax
jmp     short loc_4773b3
mov     eax, [esp+20h+hmem]
mov     ecx, [esp+20h+var_10]
push    eax
push    ecx
call    sub_44f4f0
mov     ecx, [esp+28h+hmem]
add     esp, 8
push    ecx
call    sub_45ba00
mov     ecx, [esp+24h+var_10]
mov     edx, [esp+24h+var_c]
add     esp, 4
push    ecx
push    edx
call    sub_44b390
mov     ecx, [esp+28h+var_c]
add     esp, 8
mov     ebx, eax
push    ecx
call    sub_44f4a0
mov     eax, [esp+24h+var_10]
add     esp, 4
push    eax
call    sub_44f4a0
add     esp, 4
push    edi
call    sub_442e00
add     esp, 4
push    esi
call    sub_442e00
add     esp, 4
push    ebx
push    0
push    207ch
call    sub_421e00
push    eax
call    sub_442a20
add     esp, 10h
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
sub     esp, 18h
mov     [esp+18h+var_18], 1
push    esi
mov     ecx, 5
lea     esi, [esp+1ch+var_18]
push    edi
mov     [esp+20h+var_10], 0
mov     edi, eax
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
call    sub_4892d0
xor     eax, eax
retn
mov     eax, [esp+arg_4]
sub     esp, 10h
push    esi
push    edi
mov     esi, [eax+8]
mov     edi, ds:dword_4a68c0
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_4774ab
cmp     edi, esi
jz      short loc_4774ab
cmp     si, 7
jl      short loc_4774ab
lea     eax, [esp+18h+var_10]
mov     [esp+18h+var_c], esi
mov     [esp+18h+var_10], 1
push    eax
call    sub_434ac0
mov     word_4ad3dc, 0fffah
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
add     esp, 10h
retn
sub     esp, 10h
mov     [esp+10h+var_10], 3
lea     eax, [esp+10h+var_10]
push    eax
call    sub_434ac0
add     esp, 4
xor     eax, eax
mov     word_4ad3dc, 0fffah
add     esp, 10h
retn
sub     esp, 10h
push    esi
mov     esi, [esp+14h+arg_4]
push    esi
call    sub_442d80
add     esp, 4
push    10h
push    eax
lea     eax, [esp+1ch+string]
push    eax
call    sub_47f9f0
add     esp, 0ch
push    esi
call    sub_442e00
lea     eax, [esp+18h+string]
add     esp, 4
push    eax
push    0
call    sub_4590f0
add     esp, 8
test    eax, eax
jz      short loc_477536
push    eax
call    sub_436be0
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 10h
retn
sub     esp, 18h
push    esi
mov     esi, ds:frequency
test    esi, esi
jz      short loc_477579
lea     eax, [esp+1ch+rect]
push    eax
push    esi
call    sub_490b60
mov     eax, [esp+24h+arg_4]
add     esp, 8
mov     ecx, [eax+1eh]
mov     eax, [eax+8]
sub     ecx, [esp+1ch+rect.left]
sub     eax, [esp+1ch+rect.top]
push    eax
push    ecx
push    esi
call    sub_490bd0
add     esp, 0ch
xor     eax, eax
pop     esi
add     esp, 18h
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    2010640h
call    sub_421e00
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
movzx   ebx, ax
mov     eax, [esp+24h+arg_4]
add     esp, 8
mov     esi, [eax+8]
mov     edi, [eax+1eh]
call    sub_47caa0
test    eax, eax
jz      short loc_4775c8
test    ebx, ebx
jnz     short loc_4775c8
call    sub_490ec0
movsx   eax, ax
add     edi, eax
mov     ebx, ds:frequency
test    ebx, ebx
jz      short loc_4775ff
lea     eax, [esp+1ch+rect]
push    eax
push    ebx
call    sub_490b60
mov     eax, [esp+24h+rect.top]
add     esp, 8
add     eax, edi
add     eax, [esp+1ch+rect.bottom]
push    eax
mov     eax, [esp+20h+rect.right]
add     eax, esi
add     eax, [esp+20h+rect.left]
push    eax
push    ebx
call    sub_490c50
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
retn
call    sub_4443d0
call    sub_489220
test    eax, eax
jz      short loc_47763c
call    sub_489290
call    sub_489220
test    eax, eax
jnz     short loc_47762e
xor     eax, eax
retn
xor     eax, eax
retn
push    2010640h
call    sub_421e00
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
mov     edx, [esp+8+arg_4]
add     esp, 8
movzx   ecx, ax
cmp     dword ptr [edx+8], 1
sbb     eax, eax
push    0
push    ecx
inc     eax
push    eax
call    sub_437660
add     esp, 0ch
xor     eax, eax
retn
mov     eax, [esp+arg_4]
cmp     dword ptr [eax+8], 1
sbb     eax, eax
inc     eax
push    eax
call    sub_437690
add     esp, 4
xor     eax, eax
retn
sub     esp, 1ch
push    ebx
push    esi
mov     esi, [esp+24h+arg_0]
push    edi
test    esi, esi
jnz     short loc_4776d7
call    sub_443380
test    eax, eax
jz      short loc_47773a
mov     word_4ad3dc, 0bh
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, esi
dec     esi
test    eax, eax
jle     short loc_477738
mov     edi, [esp+28h+arg_4]
mov     eax, [edi+8]
add     edi, 16h
mov     [esp+28h+var_1c], eax
call    sub_421e00
mov     cx, [edi-0ch]
mov     ebx, eax
lea     eax, [esp+28h+var_18]
push    eax
push    ecx
push    ebx
call    sub_489900
lea     ecx, [esp+34h+var_18]
mov     edx, [esp+34h+var_1c+2]
add     esp, 0ch
mov     eax, ebx
shr     eax, 10h
push    ecx
movzx   eax, ax
shl     eax, 10h
mov     ecx, [esp+2ch+var_1c]
and     ecx, 0ffffh
or      eax, ecx
push    eax
push    edx
push    ebx
call    sub_4428a0
add     esp, 10h
mov     ecx, esi
dec     esi
test    ecx, ecx
jg      short loc_4776e2
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
push    offset acoa
call    sub_47fa80
add     esp, 4
retn
mov     eax, [esp+8]
xor     ecx, ecx
mov     cx, [eax+0a4h]
push    eax
mov     eax, [esp+8]
push    ecx
push    eax
call    dword ptr [eax+6]
add     esp, 0ch
retn
sub     esp, 0c8h
push    ebx
push    esi
push    edi
mov     edi, [esp+0d4h+arg_4]
push    edi
call    sub_442d80
add     esp, 4
mov     ebx, eax
lea     esi, [edi+16h]
push    esi
call    sub_442d80
mov     [esp+0d8h+var_c8], eax
xor     ecx, ecx
lea     eax, [esp+0d8h+var_c8]
mov     [esp+0d8h+var_c4], ecx
mov     [esp+0d8h+var_9c], eax
mov     [esp+0d8h+var_28], ebx
lea     edx, [esp+0d8h+var_c0]
mov     [esp+0d8h+var_a], ecx
mov     [esp+0d8h+var_1c], 3ah
add     esp, 4
push    edx
push    offset loc_477760
push    ecx
call    sub_4109d0
add     esp, 0ch
push    edi
call    sub_442e00
add     esp, 4
push    esi
call    sub_442e00
mov     eax, [esp+0d8h+var_a]
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
sub     esp, 0c8h
push    ebx
push    esi
mov     esi, [esp+0d0h+arg_4]
push    edi
push    ebp
push    esi
call    sub_442d80
add     esp, 4
mov     ebx, eax
lea     eax, [esi+16h]
lea     edi, [esi+2ch]
push    eax
call    sub_442d80
add     esp, 4
mov     ebp, eax
push    edi
call    sub_442d80
mov     [esp+0dch+var_c8], ebp
mov     [esp+0dch+var_c4], eax
lea     eax, [esp+0dch+var_c8]
lea     ecx, [esp+0dch+var_c0]
mov     [esp+0dch+var_9c], eax
mov     [esp+0dch+var_28], ebx
mov     [esp+0dch+var_1c], 39h
add     esp, 4
push    ecx
push    offset loc_477760
push    0
call    sub_4109d0
add     esp, 0ch
push    esi
call    sub_442e00
add     esp, 4
add     esi, 16h
push    esi
call    sub_442e00
add     esp, 4
push    edi
call    sub_442e00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c8h
retn
sub     esp, 0c0h
push    esi
mov     esi, [esp+0c4h+arg_4]
push    esi
call    sub_442d80
mov     [esp+0c8h+var_28], eax
add     esp, 4
mov     [esp+0c4h+var_1c], 3bh
lea     eax, [esp+0c4h+var_c0]
push    eax
push    offset loc_477760
push    0
call    sub_4109d0
add     esp, 0ch
push    esi
call    sub_442e00
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 0c0h
retn
sub     esp, 58h
mov     word ptr [esp+58h+var_54], 0
lea     ecx, [esp+58h+rcdst]
push    esi
push    edi
push    ecx
mov     edi, [esp+64h+arg_4]
mov     eax, [edi+8]
mov     [esp+64h+var_58], eax
mov     edx, [esp+64h+var_54]
push    edx
push    eax
call    sub_43b210
lea     ecx, [esp+6ch+rcsrc2]
mov     esi, eax
mov     word ptr [esp+6ch+var_54], 0ah
mov     eax, [esp+6ch+var_54]
mov     edx, [esp+6ch+var_58]
add     esp, 0ch
push    ecx
push    eax
push    edx
call    sub_43b210
add     esp, 0ch
test    eax, eax
jz      short loc_47798d
test    esi, esi
jz      short loc_477969
lea     eax, [esp+60h+rcsrc2]
lea     ecx, [esp+60h+rcdst]
push    eax
push    ecx
lea     ecx, [esp+68h+rcdst]
push    ecx
call    ds:unionrect
jmp     short loc_477988
mov     esi, [esp+60h+rcsrc2.top]
lea     ecx, [esp+60h+rcsrc2]
lea     edx, [esp+60h+rcdst]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+4], esi
mov     [edx+8], eax
mov     [edx+0ch], ecx
mov     esi, 1
mov     eax, [edi+1eh]
lea     ecx, [esp+60h+rcsrc1]
mov     [esp+60h+var_58], eax
push    ecx
mov     word ptr [esp+64h+var_54], 0
mov     edx, [esp+64h+var_54]
push    edx
push    eax
call    sub_43b210
lea     ecx, [esp+6ch+var_30]
mov     edi, eax
mov     word ptr [esp+6ch+var_54], 0ah
mov     eax, [esp+6ch+var_54]
mov     edx, [esp+6ch+var_58]
add     esp, 0ch
push    ecx
push    eax
push    edx
call    sub_43b210
add     esp, 0ch
test    eax, eax
jz      short loc_477a11
test    edi, edi
jz      short loc_4779ed
lea     eax, [esp+60h+var_30]
lea     ecx, [esp+60h+rcsrc1]
push    eax
push    ecx
lea     ecx, [esp+68h+rcsrc1]
push    ecx
call    ds:unionrect
jmp     short loc_477a0c
mov     edi, [esp+60h+var_30.top]
lea     ecx, [esp+60h+var_30]
lea     edx, [esp+60h+rcsrc1]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+4], edi
mov     [edx+8], eax
mov     [edx+0ch], ecx
mov     edi, 1
test    esi, esi
jz      short loc_477a3a
test    edi, edi
jz      short loc_477a3a
lea     eax, [esp+60h+rcsrc1]
lea     ecx, [esp+60h+rcdst]
lea     edx, [esp+60h+var_10]
push    eax
push    ecx
push    edx
call    ds:intersectrect
pop     edi
cmp     eax, 1
sbb     eax, eax
pop     esi
inc     eax
add     esp, 58h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 58h
retn
sub     esp, 8
mov     [esp+8+var_4], 0
push    esi
mov     esi, 1
mov     [esp+0ch+var_8], esi
mov     ecx, [esp+0ch+var_4]
push    ecx
push    esi
push    3
call    sub_43eb00
add     esp, 0ch
cmp     [esp+0ch+arg_0], 0
jz      short loc_477a9b
mov     eax, [esp+0ch+arg_4]
mov     eax, [eax+8]
test    eax, eax
jle     short loc_477a9b
lea     esi, [eax+eax*4]
lea     eax, [esi+esi*4]
lea     esi, [eax+eax*4]
lea     ecx, [esi+esi*2]
lea     esi, [ecx+ecx*4]
shl     esi, 5
jmp     short loc_477aa3
mov     [esp+0ch+var_8], 0
mov     eax, [esp+0ch+var_8]
push    esi
mov     ecx, [esp+10h+var_4]
push    ecx
push    eax
push    3
call    sub_43ea30
add     esp, 10h
xor     eax, eax
pop     esi
add     esp, 8
retn
cmp     ds:dword_4a68c4, 0
jnz     short loc_477ae1
call    sub_46f8c0
test    eax, eax
jz      short loc_477ae1
call    sub_475320
push    0
call    sub_46f6c0
add     esp, 4
xor     eax, eax
retn
sub     esp, 1ch
push    esi
mov     esi, ds:peekmessagea
lea     eax, [esp+20h+msg]
push    3
push    108h
push    100h
push    0
push    eax
call    esi
test    eax, eax
jnz     short loc_477afa
call    sub_436d60
xor     eax, eax
pop     esi
add     esp, 1ch
retn
mov     eax, [esp+8]
push    esi
mov     esi, [eax+8]
cmp     si, 7
jl      short loc_477b9e
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_477b9e
push    esi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 9
jz      short loc_477b5a
cmp     eax, 0ah
jz      short loc_477b67
cmp     eax, 0bh
jz      short loc_477b76
xor     eax, eax
pop     esi
retn
push    esi
call    sub_439ec0
add     esp, 4
xor     eax, eax
pop     esi
retn
push    1
push    esi
call    sub_43e010
add     esp, 8
xor     eax, eax
pop     esi
retn
push    0
push    esi
call    sub_48a820
add     esp, 8
push    2000308h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     short loc_477b9e
push    esi
call    sub_48d360
add     esp, 4
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
push    edi
mov     edi, [eax+8]
cmp     di, 7
mov     esi, [eax+1eh]
jl      short loc_477c1a
push    edi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_477c1a
push    edi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 9
jz      short loc_477bef
cmp     eax, 0ah
jz      short loc_477bfe
cmp     eax, 0bh
jz      short loc_477c11
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
push    edi
call    sub_439f40
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_477c1a
push    0
call    sub_43e090
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_477c1a
call    sub_48a700
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+8]
push    esi
push    edi
mov     edi, [eax+8]
cmp     di, 7
mov     esi, [eax+1eh]
jl      short loc_477c72
push    edi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_477c72
push    edi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 9
jz      short loc_477c5a
cmp     eax, 0bh
jz      short loc_477c69
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
push    edi
call    sub_43a0a0
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
call    sub_48a800
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
xor     eax, eax
retn
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
xor     edi, edi
mov     esi, [eax+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jnz     short loc_477caf
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_408fc0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jnz     short loc_477cc4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
cmp     bx, 7
jl      short loc_477d0b
push    ebx
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_477d0b
push    ebx
call    sub_462480
add     esp, 4
cmp     ax, 9
jnz     short loc_477d0b
push    21h
push    ebx
call    sub_4612e0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_477d0b
push    ebx
call    sub_494540
add     esp, 4
mov     edi, eax
push    esi
call    sub_45ba00
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    1
call    sub_47ed50
add     esp, 4
mov     eax, 1
retn
push    edi
xor     eax, eax
mov     edi, offset dword_4a9a68
mov     ecx, 24h
rep stosd
stosb
push    offset byte_4a9a88
call    sub_452fa0
add     esp, 4
mov     ds:word_4a9a8c, 0
pop     edi
retn
push    esi
xor     eax, eax
push    edi
mov     ecx, 24h
mov     edi, offset dword_4a9a68
rep stosd
stosb
mov     edi, offset byte_4a9a88
mov     esi, [esp+8+arg_0]
mov     ecx, 0ch
rep movsd
pop     edi
pop     esi
retn
push    esi
mov     ecx, 0ch
push    edi
mov     esi, offset byte_4a9a88
mov     edi, [esp+8+arg_0]
rep movsd
pop     edi
pop     esi
retn
sub     esp, 74h
mov     eax, ds:dword_4a9ab8
test    eax, eax
push    esi
push    edi
jz      short loc_477dd5
cmp     eax, 1
jl      loc_477f1e
cmp     eax, 2
jle     loc_477e95
jmp     loc_477f1e
lea     edi, [esp+7ch+src]
xor     eax, eax
mov     ecx, 1dh
rep stosd
mov     [esp+7ch+src], 74h
mov     esi, offset byte_4a9a88
lea     edi, [esp+7ch+var_42]
mov     [esp+7ch+var_6a], 12h
mov     [esp+7ch+var_6e], offset sub_4637d0
mov     ecx, 0ch
rep movsd
mov     eax, [esp+7ch+arg_0]
mov     ecx, [esp+7ch+arg_4]
mov     edx, [esp+7ch+arg_8]
mov     [esp+7ch+var_12], eax
mov     eax, [esp+7ch+arg_c]
mov     [esp+7ch+var_e], ecx
lea     ecx, [esp+7ch+var_68]
mov     [esp+7ch+var_a], edx
mov     [esp+7ch+var_6], eax
push    ecx
mov     ecx, [esp+80h+arg_4]
push    eax
push    edx
push    ecx
mov     edx, [esp+8ch+arg_0]
push    edx
call    sub_473c60
mov     edx, [esp+90h+arg_8]
mov     ecx, [esp+90h+arg_c]
mov     eax, [esp+90h+arg_0]
add     esp, 14h
push    ecx
push    edx
mov     edx, [esp+84h+arg_4]
push    edx
push    eax
call    sub_4740e0
mov     [esp+8ch+var_2], ax
lea     edx, [esp+8ch+src]
add     esp, 10h
mov     ecx, ds:dword_4a9abc
push    2
push    ecx
jmp     loc_477f15
lea     edi, [esp+7ch+src]
xor     eax, eax
mov     ecx, 18h
rep stosd
stosw
mov     [esp+7ch+src], 62h
cmp     ds:dword_4a9ab8, 1
mov     [esp+7ch+var_6a], 12h
mov     [esp+7ch+var_6e], offset sub_463b10
jz      short loc_477ecb
mov     [esp+7ch+var_6e], offset sub_463cb0
mov     esi, offset byte_4a9a88
lea     edi, [esp+7ch+var_42]
mov     ecx, 0ch
rep movsd
lea     eax, [esp+7ch+var_68]
mov     edx, [esp+7ch+arg_8]
mov     ecx, [esp+7ch+arg_c]
push    eax
mov     eax, [esp+80h+arg_0]
push    ecx
push    edx
mov     edx, [esp+88h+arg_4]
push    edx
push    eax
call    sub_473c60
lea     edx, [esp+90h+src]
add     esp, 14h
mov     ecx, ds:dword_4a9abc
push    2
push    ecx
push    edx
call    sub_478760
add     esp, 0ch
call    sub_4443d0
cmp     ds:dword_4a9ac5, 0
jz      short loc_477f47
mov     esi, offset byte_4a9ac9
mov     edi, offset byte_4a9a88
mov     ecx, 0ch
rep movsd
mov     ds:dword_4a9ac5, 0
lea     eax, [esp+7ch+src]
push    eax
call    sub_41afc0
mov     eax, [esp+80h+arg_8]
lea     ecx, [esp+80h+src]
add     esp, 4
mov     edx, ds:dword_4a9abc
mov     [esp+7ch+src], 1
mov     [esp+7ch+var_6e+2], eax
push    ecx
push    0
push    2069h
push    edx
call    sub_4428a0
mov     ecx, [esp+8ch+arg_c]
lea     edx, [esp+8ch+src]
mov     [esp+8ch+var_6e+2], ecx
add     esp, 10h
mov     eax, ds:dword_4a9abc
push    edx
push    0
push    206ah
push    eax
call    sub_4428a0
add     esp, 10h
pop     edi
pop     esi
add     esp, 74h
retn
push    offset dword_4a9a78
call    sub_473d20
add     esp, 4
test    eax, eax
jnz     short locret_477ff5
mov     eax, ds:dword_4a9a78
mov     ecx, [esp+arg_0]
cmp     [ecx], eax
jge     short loc_477fd0
mov     [ecx], eax
mov     eax, ds:dword_4a9a80
cmp     [ecx], eax
jle     short loc_477fdb
mov     [ecx], eax
mov     eax, ds:dword_4a9a7c
cmp     [ecx+4], eax
jge     short loc_477fe8
mov     [ecx+4], eax
mov     eax, ds:dword_4a9a84
cmp     [ecx+4], eax
jle     short locret_477ff5
mov     [ecx+4], eax
retn
lea     eax, [esp+arg_0]
sub     esp, 10h
push    eax
call    sub_477fb0
add     esp, 4
mov     eax, ds:dword_4a9ab8
test    eax, eax
jz      short loc_478030
cmp     eax, 1
jz      loc_4780c3
cmp     eax, 2
jz      loc_478199
jmp     loc_478269
mov     eax, ds:dword_4a9a68
cmp     ds:dword_4a9a70, eax
jnz     short loc_47804a
mov     eax, ds:dword_4a9a6c
cmp     ds:dword_4a9a74, eax
jz      short loc_47807a
push    0
mov     eax, ds:dword_4a9a70
mov     ecx, ds:dword_4a9a74
mov     edx, ds:dword_4a9a68
push    ecx
push    eax
mov     eax, ds:dword_4a9a6c
mov     ecx, ds:dword_4a9ac0
push    eax
push    edx
push    offset byte_4a9a88
push    ecx
call    sub_4525b0
add     esp, 1ch
mov     eax, ds:dword_4a9a68
cmp     [esp+10h+arg_0], eax
jnz     short loc_478094
mov     eax, ds:dword_4a9a6c
cmp     [esp+10h+arg_4], eax
jz      loc_478269
mov     eax, [esp+10h+arg_0]
push    0
mov     ecx, [esp+14h+arg_4]
mov     edx, ds:dword_4a9a68
push    ecx
push    eax
mov     eax, ds:dword_4a9a6c
mov     ecx, ds:dword_4a9ac0
push    eax
push    edx
push    offset byte_4a9a88
push    ecx
call    sub_4525b0
jmp     loc_478266
mov     eax, ds:dword_4a9a68
cmp     ds:dword_4a9a70, eax
jnz     short loc_4780dd
mov     eax, ds:dword_4a9a6c
cmp     ds:dword_4a9a74, eax
jz      short loc_47812f
lea     eax, [esp+10h+left]
mov     edx, ds:dword_4a9a70
push    eax
mov     ecx, ds:dword_4a9a74
push    ecx
mov     eax, ds:dword_4a9a68
push    edx
mov     edx, ds:dword_4a9a6c
push    edx
push    eax
call    sub_473c60
mov     ecx, [esp+24h+bottom]
mov     edx, [esp+24h+right]
mov     eax, [esp+24h+top]
add     esp, 14h
push    0
push    ecx
mov     ecx, [esp+18h+left]
push    edx
push    eax
mov     edx, ds:dword_4a9ac0
push    ecx
push    offset byte_4a9a88
push    edx
call    sub_451d90
add     esp, 1ch
mov     eax, ds:dword_4a9a68
cmp     [esp+10h+arg_0], eax
jnz     short loc_478149
mov     eax, ds:dword_4a9a6c
cmp     [esp+10h+arg_4], eax
jz      loc_478269
lea     eax, [esp+10h+left]
mov     edx, [esp+10h+arg_0]
mov     ecx, [esp+10h+arg_4]
push    eax
push    ecx
mov     eax, ds:dword_4a9a68
push    edx
mov     edx, ds:dword_4a9a6c
push    edx
push    eax
call    sub_473c60
mov     ecx, [esp+24h+bottom]
mov     edx, [esp+24h+right]
mov     eax, [esp+24h+top]
add     esp, 14h
push    0
push    ecx
mov     ecx, [esp+18h+left]
push    edx
push    eax
mov     edx, ds:dword_4a9ac0
push    ecx
push    offset byte_4a9a88
push    edx
call    sub_451d90
jmp     loc_478266
mov     eax, ds:dword_4a9a68
cmp     ds:dword_4a9a70, eax
jnz     short loc_4781b3
mov     eax, ds:dword_4a9a6c
cmp     ds:dword_4a9a74, eax
jz      short loc_478205
lea     eax, [esp+10h+left]
mov     edx, ds:dword_4a9a70
push    eax
mov     ecx, ds:dword_4a9a74
push    ecx
mov     eax, ds:dword_4a9a68
push    edx
mov     edx, ds:dword_4a9a6c
push    edx
push    eax
call    sub_473c60
mov     ecx, [esp+24h+bottom]
mov     edx, [esp+24h+right]
mov     eax, [esp+24h+top]
add     esp, 14h
push    0
push    ecx
mov     ecx, [esp+18h+left]
push    edx
push    eax
mov     edx, ds:dword_4a9ac0
push    ecx
push    offset byte_4a9a88
push    edx
call    sub_451e50
add     esp, 1ch
mov     eax, ds:dword_4a9a68
cmp     [esp+10h+arg_0], eax
jnz     short loc_47821b
mov     eax, ds:dword_4a9a6c
cmp     [esp+10h+arg_4], eax
jz      short loc_478269
lea     eax, [esp+10h+left]
mov     edx, [esp+10h+arg_0]
mov     ecx, [esp+10h+arg_4]
push    eax
push    ecx
mov     eax, ds:dword_4a9a68
push    edx
mov     edx, ds:dword_4a9a6c
push    edx
push    eax
call    sub_473c60
mov     ecx, [esp+24h+bottom]
mov     edx, [esp+24h+right]
mov     eax, [esp+24h+top]
add     esp, 14h
push    0
push    ecx
mov     ecx, [esp+18h+left]
push    edx
push    eax
mov     edx, ds:dword_4a9ac0
push    ecx
push    offset byte_4a9a88
push    edx
call    sub_451e50
add     esp, 1ch
mov     eax, [esp+10h+arg_0]
mov     ecx, [esp+10h+arg_4]
add     esp, 10h
mov     ds:dword_4a9a70, eax
mov     ds:dword_4a9a74, ecx
retn
lea     eax, [esp+arg_0]
sub     esp, 8
push    eax
call    sub_477fb0
add     esp, 4
mov     al, ds:byte_4a9ac4
mov     edx, ds:dword_4a9a68
mov     ecx, ds:dword_4a9a6c
push    ecx
mov     ds:byte_4a9a88, al
push    edx
call    sub_478000
add     esp, 8
mov     ecx, ds:dword_4a9ac0
mov     edx, ds:frequency
push    ecx
push    edx
call    __beep_0
mov     edx, [esp+10h+arg_0]
mov     ecx, [esp+10h+arg_4]
add     esp, 8
mov     eax, ds:dword_4a9a68
push    ecx
push    edx
mov     edx, ds:dword_4a9a6c
push    edx
push    eax
call    sub_477db0
add     esp, 10h
call    sub_434c30
add     esp, 8
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
call    sub_489220
test    eax, eax
jz      loc_47849b
xor     ebp, ebp
cmp     ds:frequency, ebp
jz      loc_47849b
call    sub_421e00
mov     ebx, [esp+20h+arg_4]
mov     ds:dword_4a9abc, eax
cmp     [ebx+8], ebp
jge     short loc_47837c
mov     esi, offset byte_4a9a88
mov     edi, offset byte_4a9ac9
mov     ecx, 0ch
rep movsd
mov     eax, 1
cmp     ds:dword_4a9ab8, ebp
mov     ds:byte_4a9a88, 4
mov     ds:dword_4a9ac5, eax
jnz     short loc_478364
mov     ds:word_4a9a8c, bp
mov     ds:dword_4a9aa8, ebp
mov     ds:word_4a9aa2, ax
jmp     short loc_478389
mov     ds:word_4a9a8c, 1
xor     eax, eax
mov     ds:word_4a9aa2, ax
mov     ds:dword_4a9a8e, eax
jmp     short loc_478389
mov     ds:dword_4a9ac5, 0
mov     eax, [ebx+8]
mov     ds:word_4a9aa6, ax
mov     ds:word_4a9aa4, ax
mov     eax, ds:dword_4a9abc
push    eax
call    sub_463500
add     esp, 4
test    eax, eax
jnz     loc_47849b
lea     eax, [esp+20h+var_8]
push    eax
push    offset dword_4a9a68
call    sub_429420
add     esp, 8
mov     eax, ds:dword_4a9a68
mov     ecx, ds:dword_4a9a6c
mov     ds:dword_4a9a70, eax
cmp     ds:frequency, 0
mov     ds:dword_4a9a74, ecx
jz      short loc_4783f1
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     ds:dword_4a9ac0, eax
jmp     short loc_4783fb
mov     ds:dword_4a9ac0, 0
cmp     ds:dword_4a9ac0, 0
jz      loc_47849b
cmp     [esp+20h+arg_0], 5
mov     al, ds:byte_4a9a88
mov     ds:byte_4a9a88, 2
mov     ds:byte_4a9ac4, al
jnz     short loc_47846e
movsx   eax, word ptr [ebx+1eh]
movsx   ecx, word ptr [ebx+34h]
mov     [esp+20h+var_10], eax
push    offset dword_4a9a78
movsx   edx, word ptr [ebx+4ah]
movsx   eax, word ptr [ebx+60h]
mov     ebx, [esp+24h+var_10]
push    eax
push    edx
push    ecx
push    ebx
call    sub_473c60
add     esp, 14h
push    offset dword_4a9a68
call    sub_477fb0
add     esp, 4
mov     eax, ds:dword_4a9a68
mov     ecx, ds:dword_4a9a6c
mov     ds:dword_4a9a70, eax
mov     ds:dword_4a9a74, ecx
jmp     short loc_478484
xor     eax, eax
mov     ds:dword_4a9a78, eax
mov     ds:dword_4a9a7c, eax
mov     ds:dword_4a9a80, eax
mov     ds:dword_4a9a84, eax
push    offset sub_478280
push    offset sub_478000
call    sub_429450
add     esp, 8
call    sub_434c20
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 10h
push    esi
push    edi
mov     esi, [esp+18h+arg_4]
movsx   eax, word ptr [esi+1eh]
movsx   ecx, word ptr [esi+34h]
mov     [esp+18h+var_10], eax
mov     [esp+18h+var_c], ecx
movsx   edx, word ptr [esi+4ah]
movsx   eax, word ptr [esi+60h]
mov     [esp+18h+var_8], edx
mov     [esp+18h+var_4], eax
call    sub_421e00
xor     edx, edx
mov     ds:dword_4a9abc, eax
cmp     [esi+8], edx
jge     short loc_478541
mov     esi, offset byte_4a9a88
mov     edi, offset byte_4a9ac9
mov     ecx, 0ch
rep movsd
mov     eax, 1
cmp     ds:dword_4a9ab8, edx
mov     ds:byte_4a9a88, 4
mov     ds:dword_4a9ac5, eax
jnz     short loc_478529
mov     ds:word_4a9a8c, dx
mov     ds:dword_4a9aa8, edx
mov     ds:word_4a9aa2, ax
jmp     short loc_47854e
mov     ds:word_4a9a8c, 1
xor     eax, eax
mov     ds:word_4a9aa2, ax
mov     ds:dword_4a9a8e, eax
jmp     short loc_47854e
mov     ds:dword_4a9ac5, 0
mov     eax, [esi+8]
mov     ds:word_4a9aa6, ax
mov     ecx, [esp+18h+var_4]
mov     ds:word_4a9aa4, ax
push    ecx
mov     eax, [esp+1ch+var_8]
mov     edx, [esp+1ch+var_10]
push    eax
mov     eax, [esp+20h+var_c]
push    eax
push    edx
call    sub_477db0
add     esp, 10h
pop     edi
pop     esi
add     esp, 10h
retn
mov     eax, [esp+8]
mov     cl, [eax+8]
movsx   eax, cl
test    eax, eax
jl      short loc_478599
cmp     eax, 4
jg      short loc_478599
mov     ds:byte_4a9a88, cl
xor     eax, eax
retn
mov     ecx, [esp+8]
cmp     dword ptr [esp+4], 1
mov     eax, [ecx+8]
mov     ds:word_4a9a8c, ax
jle     short loc_4785bc
mov     eax, [ecx+1eh]
mov     ds:dword_4a9a8e, eax
xor     eax, eax
retn
mov     ecx, [esp+8]
cmp     dword ptr [esp+4], 1
mov     eax, [ecx+8]
mov     ds:word_4a9aa2, ax
jle     short loc_4785dc
mov     eax, [ecx+1eh]
mov     ds:dword_4a9aa8, eax
xor     eax, eax
retn
mov     eax, [esp+8]
mov     al, [eax+8]
mov     ds:byte_4a9a8b, al
xor     eax, eax
retn
xor     eax, eax
mov     ecx, [esp+8]
xor     edx, edx
mov     al, [ecx+1eh]
shl     eax, 8
mov     dl, [ecx+34h]
shl     edx, 10h
or      eax, edx
xor     edx, edx
mov     dl, [ecx+8]
or      eax, edx
retn
mov     eax, [esp+8]
mov     ecx, [esp+4]
mov     ds:dword_4a9ab8, 0
push    eax
push    ecx
call    sub_4784b0
add     esp, 8
xor     eax, eax
retn
mov     eax, [esp+8]
mov     ecx, [esp+4]
mov     ds:dword_4a9ab8, 0
push    eax
push    ecx
call    sub_4782f0
add     esp, 8
xor     eax, eax
retn
mov     eax, [esp+8]
mov     ecx, [esp+4]
mov     ds:dword_4a9ab8, 1
push    eax
push    ecx
call    sub_4784b0
add     esp, 8
xor     eax, eax
retn
mov     eax, [esp+8]
mov     ecx, [esp+4]
mov     ds:dword_4a9ab8, 1
push    eax
push    ecx
call    sub_4782f0
add     esp, 8
xor     eax, eax
retn
mov     eax, [esp+8]
mov     ecx, [esp+4]
mov     ds:dword_4a9ab8, 2
push    eax
push    ecx
call    sub_4784b0
add     esp, 8
xor     eax, eax
retn
mov     eax, [esp+8]
mov     ecx, [esp+4]
mov     ds:dword_4a9ab8, 2
push    eax
push    ecx
call    sub_4782f0
add     esp, 8
xor     eax, eax
retn
sub     esp, 28h
push    esi
push    edi
mov     esi, ds:frequency
test    esi, esi
jz      short loc_478755
mov     eax, [esp+30h+arg_4]
movsx   ecx, word ptr [eax+8]
movsx   edx, word ptr [eax+1eh]
mov     [esp+30h+var_28], ecx
mov     [esp+30h+var_24], edx
lea     ecx, [esp+30h+var_28]
push    ecx
call    sub_474df0
add     esp, 4
mov     edi, ds:clienttoscreen
push    eax
push    esi
call    edi
lea     ecx, [esp+30h+var_10]
mov     eax, [esp+30h+var_28]
mov     edx, [esp+30h+var_24]
push    ecx
push    edx
push    eax
push    edx
push    eax
call    sub_473c60
lea     ecx, [esp+44h+point]
add     esp, 14h
push    ecx
push    esi
call    sub_490960
lea     ecx, [esp+38h+point]
add     esp, 8
push    ecx
push    esi
call    edi
lea     ecx, [esp+30h+var_18]
push    ecx
push    esi
call    edi
lea     ecx, [esp+30h+point]
push    1
lea     edx, [esp+34h+var_10]
push    ecx
push    edx
call    sub_478830
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
add     esp, 28h
retn
sub     esp, 0c0h
push    ebx
push    esi
push    edi
push    ebp
xor     edi, edi
call    sub_4441e0
mov     ax, [esp+0d0h+arg_8]
mov     esi, [esp+0d0h+arg_4]
push    eax
push    esi
call    sub_42ee40
add     esp, 8
mov     ebx, eax
cmp     ebx, edi
jz      loc_478820
lea     edi, [esp+0d0h+var_c0]
xor     eax, eax
mov     ecx, 2fh
push    eax
rep stosd
stosw
mov     edi, [esp+0d4h+src]
push    7
push    edi
call    dword ptr [edi+6]
lea     eax, [esp+0dch+var_c0]
add     esp, 0ch
push    eax
push    19h
push    edi
call    dword ptr [edi+6]
add     esp, 0ch
lea     eax, [ebx+32h]
push    edi
push    eax
call    sub_413130
add     esp, 8
mov     edi, eax
lea     ecx, [ebx+0ch]
lea     eax, [esp+0d0h+rcsrc2]
push    eax
push    ecx
push    ecx
call    ds:unionrect
push    esi
call    sub_43d590
movsx   ecx, word ptr [ebx]
mov     bp, ax
add     esp, 4
mov     [ecx+ebx-0a0h], bp
push    esi
call    sub_463500
add     esp, 4
test    eax, eax
jnz     short loc_478813
cmp     word ptr ds:dword_4a6af8, bp
jnz     short loc_478813
call    sub_43d470
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0c0h
retn
sub     esp, 120h
push    ebx
push    esi
push    edi
push    ebp
push    0
push    0
push    0
push    offset pwszdriver
call    ds:createdca
mov     [esp+130h+hdc], eax
test    eax, eax
jz      loc_4789d5
push    7
mov     esi, ds:getstockobject
call    esi
push    eax
mov     edi, ds:selectobject
mov     eax, [esp+134h+hdc]
push    eax
call    edi
push    5
call    esi
mov     ecx, [esp+130h+hdc]
push    eax
push    ecx
call    edi
mov     eax, [esp+130h+hdc]
push    6
push    eax
mov     ebx, ds:setrop2
call    ebx
xor     bx, bx
mov     esi, [esp+130h+arg_0]
mov     edi, [esp+130h+arg_4]
call    sub_409e60
add     eax, 10h
cmp     bx, 10h
mov     [esp+130h+var_120], eax
jg      loc_478988
movsx   eax, bx
mov     ecx, eax
mov     ebp, [esi]
shl     ecx, 4
lea     edx, [esp+ecx+130h+left]
mov     [edx], ebp
mov     ebp, [esi+4]
cmp     [esp+130h+arg_8], 0
mov     [edx+4], ebp
mov     ebp, [esi+8]
mov     [edx+8], ebp
mov     ebp, [esi+0ch]
mov     [edx+0ch], ebp
lea     edx, [eax+1]
jnz     short loc_4788e7
mov     edx, 21h
sub     edx, eax
imul    eax, edx
cdq
mov     [esp+130h+var_114], 88h
sub     eax, edx
sar     eax, 1
mov     [esp+130h+var_11c], eax
mov     eax, [edi+4]
sub     eax, [esi+4]
imul    eax, [esp+130h+var_11c]
cdq
idiv    [esp+130h+var_114]
movsx   edx, ax
mov     eax, [edi]
add     [esp+ecx+130h+top], edx
mov     [esp+130h+var_114], 88h
sub     eax, [esi]
imul    eax, [esp+130h+var_11c]
cdq
idiv    [esp+130h+var_114]
movsx   edx, ax
mov     eax, [edi+0ch]
add     [esp+ecx+130h+left], edx
mov     [esp+130h+var_114], 88h
sub     eax, [esi+0ch]
imul    eax, [esp+130h+var_11c]
cdq
idiv    [esp+130h+var_114]
movsx   edx, ax
mov     eax, [edi+8]
mov     ebp, 88h
sub     eax, [esi+8]
add     [esp+ecx+130h+bottom], edx
imul    eax, [esp+130h+var_11c]
cdq
idiv    ebp
movsx   eax, ax
add     eax, [esp+ecx+130h+var_108]
mov     [esp+ecx+130h+var_108], eax
mov     edx, [esp+ecx+130h+bottom]
mov     ebp, [esp+ecx+130h+top]
push    edx
push    eax
mov     eax, [esp+ecx+138h+left]
push    ebp
mov     ecx, [esp+13ch+hdc]
push    eax
push    ecx
call    ds:rectangle
cmp     bx, 6
jl      short loc_4789b3
movsx   ecx, bx
shl     ecx, 4
mov     eax, [esp+ecx+130h+var_164]
mov     edx, [esp+ecx+130h+right]
mov     ebp, [esp+ecx+130h+var_16c]
push    eax
mov     eax, [esp+ecx+134h+var_170]
push    edx
mov     ecx, [esp+138h+hdc]
push    ebp
push    eax
push    ecx
call    ds:rectangle
call    sub_409e60
cmp     eax, [esp+130h+var_120]
jb      short loc_4789b3
inc     bx
cmp     bx, 16h
jle     loc_47889b
mov     eax, [esp+130h+hdc]
push    eax
call    ds:deletedc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 120h
retn
mov     word_4ad3dc, 15h
xor     eax, eax
retn
mov     ecx, [esp+arg_4]
mov     eax, 0
cmp     [esp+arg_0], ecx
jle     short loc_478a0d
lea     edx, [ecx+ecx*4]
mov     eax, [esp+arg_8]
lea     ecx, [ecx+edx*2]
mov     eax, [eax+ecx*2+8]
test    eax, eax
jz      short loc_478a1e
cmp     eax, 1
jz      short loc_478a2d
cmp     eax, 2
jz      short loc_478a3c
xor     eax, eax
retn
mov     eax, [esp+arg_c]
mov     word ptr [eax], 2
mov     eax, 1
retn
mov     eax, [esp+arg_c]
mov     word ptr [eax], 3
mov     eax, 1
retn
mov     eax, [esp+arg_c]
mov     word ptr [eax], 4
mov     eax, 1
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [eax+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478a70
push    esi
call    sub_461c50
add     esp, 4
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [eax+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478aa0
push    esi
call    sub_461fe0
add     esp, 4
pop     esi
retn
xor     eax, eax
pop     esi
retn
sub     esp, 4
push    esi
push    edi
mov     edi, [esp+0ch+arg_4]
mov     esi, [edi+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478af6
lea     eax, [esp+0ch+var_2]
mov     ecx, [esp+0ch+arg_0]
push    eax
push    edi
push    1
push    ecx
call    sub_4789f0
add     esp, 10h
test    eax, eax
jz      short loc_478af6
mov     eax, dword ptr [esp+0ch+var_2]
push    eax
push    esi
call    sub_463450
add     esp, 8
pop     edi
pop     esi
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 4
push    esi
push    edi
mov     edi, [esp+0ch+arg_4]
mov     esi, [edi+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478b46
lea     eax, [esp+0ch+var_2]
mov     ecx, [esp+0ch+arg_0]
push    eax
push    edi
push    1
push    ecx
call    sub_4789f0
add     esp, 10h
test    eax, eax
jz      short loc_478b46
mov     eax, dword ptr [esp+0ch+var_2]
push    eax
push    esi
call    sub_461d30
add     esp, 8
pop     edi
pop     esi
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 4
push    esi
push    edi
mov     edi, [esp+0ch+arg_4]
mov     esi, [edi+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478ba9
lea     eax, [esp+0ch+var_2]
mov     ecx, [esp+0ch+arg_0]
push    eax
push    edi
push    1
push    ecx
call    sub_4789f0
add     esp, 10h
test    eax, eax
jz      short loc_478ba9
mov     eax, dword ptr [esp+0ch+var_2]
push    eax
push    esi
call    sub_463450
add     esp, 8
test    eax, eax
jle     short loc_478ba9
mov     ecx, dword ptr [esp+0ch+var_2]
push    ecx
push    esi
push    eax
call    sub_4633b0
add     esp, 0ch
pop     edi
pop     esi
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [eax+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478be0
push    esi
call    sub_461f70
add     esp, 4
pop     esi
retn
xor     eax, eax
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+arg_4]
push    edi
mov     edi, [ebx+8]
mov     esi, [ebx+1eh]
push    edi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478c6d
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478c6d
lea     eax, [esp+10h+var_2]
mov     ecx, [esp+10h+arg_0]
push    eax
push    ebx
push    2
push    ecx
call    sub_4789f0
add     esp, 10h
test    eax, eax
jz      short loc_478c6d
mov     eax, esi
mov     esi, eax
push    eax
call    sub_461f70
add     esp, 4
test    eax, eax
jz      short loc_478c6d
cmp     eax, edi
jnz     short loc_478c35
test    eax, eax
jz      short loc_478c6d
push    esi
push    eax
call    sub_461e30
add     esp, 8
cmp     ax, [esp+10h+var_2]
jnz     short loc_478c6d
push    esi
call    sub_4633f0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+arg_4]
push    edi
mov     esi, [ebx+8]
mov     edi, [ebx+1eh]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478cd0
test    edi, edi
jle     short loc_478cd0
lea     eax, [esp+10h+var_2]
mov     ecx, [esp+10h+arg_0]
push    eax
push    ebx
push    2
push    ecx
call    sub_4789f0
add     esp, 10h
test    eax, eax
jz      short loc_478cd0
mov     eax, dword ptr [esp+10h+var_2]
push    eax
push    esi
push    edi
call    sub_4633b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [eax+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478d03
push    esi
call    sub_462480
add     esp, 4
movsx   eax, ax
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_4]
sub     esp, 19ch
mov     eax, [eax+8]
cmp     eax, 1
jl      short loc_478d52
cmp     eax, 0dh
jg      short loc_478d52
dec     ax
lea     ecx, [esp+19ch+string]
push    eax
push    1b3ch
push    19ah
push    ecx
call    sub_47fe70
lea     ecx, [esp+1ach+string]
add     esp, 10h
push    ecx
call    sub_47fa80
add     esp, 1a0h
retn
xor     eax, eax
add     esp, 19ch
retn
cmp     dword_4ae79c, 0
push    esi
jnz     short loc_478dc6
mov     eax, [esp+4+arg_4]
mov     dword_4ae79c, 1
mov     esi, [eax+8]
cmp     si, 7
jl      short loc_478dbc
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478dbc
push    esi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_478dab
cmp     eax, 4
jz      short loc_478dab
cmp     eax, 9
jz      short loc_478db3
jmp     short loc_478dbc
push    esi
call    sub_42e2a0
jmp     short loc_478db9
push    esi
call    sub_438d50
add     esp, 4
mov     dword_4ae79c, 0
xor     eax, eax
pop     esi
retn
sub     esp, 8
mov     word ptr [esp+8+var_4], 0
push    ebx
push    esi
push    edi
mov     edi, [esp+14h+arg_4]
mov     esi, [edi+8]
mov     [esp+14h+var_8], esi
mov     eax, [esp+14h+var_4]
mov     ecx, [esp+14h+var_8]
push    eax
push    ecx
call    sub_43b1e0
mov     ecx, [esp+1ch+arg_0]
add     esp, 8
mov     ebx, eax
push    edi
push    ecx
call    sub_478d60
add     esp, 8
test    ebx, ebx
jnz     short loc_478e6a
cmp     si, 7
jl      short loc_478e6a
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478e6a
push    esi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_478e3c
cmp     eax, 4
jz      short loc_478e3c
cmp     eax, 9
jnz     short loc_478e6a
mov     [esp+14h+var_8], esi
mov     eax, [esp+14h+var_4]
push    eax
push    esi
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_478e6a
movsx   ecx, word ptr [eax]
push    offset dword_4a61c4
mov     dword ptr [ecx+eax-8], 0
call    sub_412f60
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
call    sub_4444d0
xor     eax, eax
retn
mov     eax, [esp+arg_4]
push    esi
push    edi
mov     esi, ds:dword_4a68c0
mov     edi, [eax+8]
cmp     edi, 0ffffffffh
jnz     short loc_478eae
call    sub_4444d0
xor     eax, eax
pop     edi
pop     esi
retn
push    edi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_478eef
cmp     esi, edi
jz      short loc_478eef
cmp     di, 7
jl      short loc_478eef
push    edi
call    sub_462480
add     esp, 4
cmp     ax, 8
jnz     short loc_478ee4
push    0ah
push    edi
call    sub_43ad00
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
retn
push    0
push    edi
call    sub_43ad00
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
retn
xor     cx, cx
cmp     [esp+arg_0], 1
jnz     short loc_478f24
call    sub_436980
mov     ecx, [esp+arg_4]
mov     ecx, [ecx+8]
test    ecx, ecx
jge     short loc_478f1d
xor     eax, eax
retn
cmp     ecx, eax
jle     short loc_478f24
xor     eax, eax
retn
push    ecx
call    sub_436a00
add     esp, 4
retn
sub     esp, 1b0h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
xor     edi, edi
call    sub_436980
mov     ecx, [esp+1c0h+arg_0]
cmp     ecx, 1
jl      short loc_478f63
mov     edx, [esp+1c0h+arg_4]
cmp     ecx, 2
mov     esi, [edx+8]
mov     edi, esi
jnz     short loc_478f63
mov     edi, [edx+1eh]
test    esi, esi
jge     short loc_478f78
test    edi, edi
jge     short loc_478f78
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1b0h
retn
cmp     eax, esi
jge     short loc_478f8d
cmp     eax, edi
jge     short loc_478f8d
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1b0h
retn
test    esi, esi
jge     short loc_478f95
xor     ebx, ebx
jmp     short loc_478f9d
mov     ebx, eax
cmp     eax, esi
jl      short loc_478f9d
mov     ebx, esi
test    edi, edi
jge     short loc_478fab
mov     [esp+1c0h+var_1b0], 0
jmp     short loc_478fb5
cmp     eax, edi
jl      short loc_478fb1
mov     eax, edi
mov     [esp+1c0h+var_1b0], eax
mov     [esp+1c0h+var_1a8], 1
cmp     [esp+1c0h+var_1b0], ebx
jge     short loc_478fcb
mov     [esp+1c0h+var_1a8], 0ffffffffh
mov     di, bx
mov     eax, [esp+1c0h+var_1a8]
xor     esi, esi
add     [esp+1c0h+var_1b0], eax
movsx   eax, bx
mov     [esp+1c0h+var_1a0], eax
cmp     [esp+1c0h+var_1b0], eax
jz      short loc_479025
mov     bp, word ptr [esp+1c0h+var_1a8]
push    edi
call    sub_436a00
add     esp, 4
test    eax, eax
jz      short loc_479019
lea     ecx, [esp+1c0h+string]
push    19ah
push    ecx
push    eax
call    sub_486100
lea     eax, [esp+1cch+string]
add     esp, 0ch
push    eax
call    ds:lstrlena
lea     esi, [eax+esi+1]
add     di, bp
movsx   eax, di
cmp     eax, [esp+1c0h+var_1b0]
jnz     short loc_478fea
xor     ebp, ebp
test    esi, esi
mov     [esp+1c0h+hmem], ebp
jz      loc_4790f3
push    2
push    esi
call    sub_45b8f0
mov     [esp+1c8h+hmem], eax
add     esp, 8
cmp     eax, ebp
jz      loc_4790f3
push    eax
call    ds:globallock
mov     [esp+1c0h+var_1ac], eax
cmp     eax, ebp
jz      loc_4790de
mov     eax, [esp+1c0h+var_1b0]
cmp     eax, [esp+1c0h+var_1a0]
jz      short loc_4790c8
push    ebx
call    sub_436a00
add     esp, 4
test    eax, eax
jz      short loc_4790ba
lea     ecx, [esp+1c0h+string]
push    19ah
push    ecx
push    eax
call    sub_486100
lea     eax, [esp+1cch+string]
add     esp, 0ch
push    eax
call    ds:lstrlena
test    ebp, ebp
jz      short loc_4790a0
mov     ecx, [esp+1c0h+var_1ac]
inc     ebp
mov     byte ptr [ebp+ecx-1], 0dh
lea     esi, [esp+1c0h+string]
mov     edi, [esp+1c0h+var_1ac]
add     edi, ebp
mov     ecx, eax
shr     ecx, 2
add     ebp, eax
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
add     bx, word ptr [esp+1c0h+var_1a8]
movsx   eax, bx
cmp     eax, [esp+1c0h+var_1b0]
jnz     short loc_479067
mov     ecx, [esp+1c0h+var_1ac]
mov     eax, [esp+1c0h+hmem]
push    eax
mov     byte ptr [ebp+ecx+0], 0
call    ds:globalunlock
jmp     short loc_4790f3
mov     eax, [esp+1c0h+hmem]
push    eax
call    sub_45ba00
mov     [esp+1c4h+hmem], 0
add     esp, 4
mov     eax, [esp+1c0h+hmem]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1b0h
retn
mov     eax, [esp+arg_4]
sub     esp, 19ch
mov     [esp+19ch+string], 0
push    esi
mov     esi, [eax+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_479149
cmp     si, 7
jl      short loc_479149
lea     eax, [esp+1a0h+string]
push    19ah
push    eax
push    esi
call    sub_486100
add     esp, 0ch
lea     eax, [esp+1a0h+string]
push    eax
call    sub_47fa80
add     esp, 4
pop     esi
add     esp, 19ch
retn
mov     ecx, [esp+arg_4]
sub     esp, 8
cmp     [esp+8+arg_0], 2
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [ecx+8]
jnz     short loc_47917a
mov     ebp, [ecx+1eh]
jmp     short loc_479180
mov     ebp, ds:dword_4a68c0
cmp     bp, 7
jl      loc_47927a
push    ebp
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      loc_47927a
push    ebp
call    sub_462480
movsx   ebx, ax
add     esp, 4
cmp     ebx, 1
jz      short loc_4791ba
cmp     ebx, 4
jz      short loc_4791ba
cmp     ebx, 9
jnz     loc_47927a
push    edi
push    ebp
call    sub_42e310
add     esp, 8
mov     esi, eax
cmp     ds:dword_4a68c0, ebp
jnz     short loc_4791f9
push    edi
cmp     ebx, 9
push    ebp
jnz     short loc_4791e7
call    sub_439080
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
call    sub_42d800
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     word ptr [esp+18h+var_4], 0
mov     [esp+18h+var_8], ebp
mov     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+var_8]
push    eax
push    ecx
call    sub_43b1e0
add     esp, 8
test    eax, eax
jz      short loc_47927a
cmp     ebx, 9
jz      short loc_479260
mov     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_479260
mov     cx, 4
test    esi, esi
jg      short loc_479241
mov     cx, 2
movsx   edx, word ptr [eax]
mov     [edx+eax-0ah], cx
push    ecx
push    eax
call    sub_43b4e0
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, [esp+18h+var_4]
push    1
mov     ecx, [esp+1ch+var_8]
push    esi
push    eax
push    ecx
call    sub_43b5a0
add     esp, 10h
call    sub_4443d0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     [esp+arg_0], 1
push    esi
push    edi
jnz     short loc_4792f9
mov     eax, [esp+8+arg_4]
mov     esi, [eax+8]
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      loc_47935a
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 5
push    esi
jnz     short loc_4792ce
call    sub_42c7b0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_461f70
add     esp, 4
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 5
jnz     short loc_47935a
mov     eax, ds:dword_4a6770+2
pop     edi
movsx   ecx, si
mov     edx, [eax]
pop     esi
xor     eax, eax
or      byte ptr [edx+ecx*4+5], 10h
retn
call    sub_435450
push    eax
mov     edi, eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_47935a
push    edi
call    sub_426a80
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_47935a
push    edi
call    sub_42c9c0
add     esp, 4
test    eax, eax
jnz     short loc_47934b
push    2000318h
push    edi
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     short loc_47934b
push    edi
call    sub_42c7b0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
or      byte ptr [edx+ecx*4+5], 10h
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+8]
push    0
mov     ecx, [esp+8]
push    eax
push    ecx
call    sub_4793a0
add     esp, 0ch
xor     eax, eax
retn
mov     eax, [esp+arg_4]
push    1
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_4793a0
add     esp, 0ch
xor     eax, eax
retn
sub     esp, 18h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+28h+arg_0]
cmp     edi, 1
jl      short loc_4793ed
mov     esi, [esp+28h+arg_4]
push    esi
call    sub_442d80
lea     ecx, [esp+2ch+var_14]
add     esp, 4
push    ecx
push    eax
call    sub_44f360
add     esp, 8
mov     ebx, eax
push    esi
call    sub_442e00
add     esp, 4
test    ebx, ebx
jnz     short loc_4793ed
mov     eax, [esp+28h+var_14]
push    0
push    eax
call    sub_44f9b0
add     esp, 8
test    eax, eax
jz      short loc_479401
push    1
push    1ch
call    sub_45c150
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
cmp     edi, 2
jle     short loc_479438
lea     ebx, [esi+2ch]
push    ebx
call    sub_442d80
lea     ecx, [esp+2ch+var_18]
add     esp, 4
push    ecx
push    eax
call    sub_44f360
mov     eax, [esp+30h+var_18]
add     esp, 8
push    eax
call    sub_44b740
add     esp, 4
push    ebx
call    sub_442e00
add     esp, 4
jmp     short loc_47944a
mov     eax, ds:dword_4a8514
push    eax
call    sub_44f3f0
mov     [esp+2ch+var_18], eax
add     esp, 4
call    sub_45c800
mov     ebx, eax
test    ebx, ebx
jz      loc_47950e
mov     eax, [esp+28h+var_18]
mov     ecx, [esp+28h+var_14]
push    eax
push    ecx
push    ebx
call    sub_458f50
mov     ecx, [esp+34h+var_14]
add     esp, 0ch
mov     ebp, eax
push    ecx
call    sub_44f4a0
mov     eax, [esp+2ch+var_18]
add     esp, 4
push    eax
call    sub_44f4a0
add     esp, 4
test    ebp, ebp
jz      short loc_4794a0
push    6
push    1ch
call    sub_45c150
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
lea     eax, [esp+28h+arg_8]
push    4
push    eax
push    4
push    ebx
call    sub_45ca00
add     esp, 10h
cmp     edi, 1
jle     short loc_4794e4
add     esi, 16h
push    esi
call    sub_442d80
add     esp, 4
mov     edi, eax
push    edi
call    ds:lstrlena
inc     ax
push    eax
push    edi
push    3
push    ebx
call    sub_45ca00
add     esp, 10h
push    esi
call    sub_442e00
add     esp, 4
lea     eax, [esp+28h+var_10]
mov     [esp+28h+var_4], ebx
mov     [esp+28h+var_10], 5
mov     [esp+28h+var_8], offset sub_479520
push    eax
call    sub_434ac0
mov     word_4ad3dc, 0fffah
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 10h
lea     eax, [esp+10h+var_e+2]
push    ebx
lea     ecx, [esp+14h+var_8]
push    esi
mov     esi, [esp+18h+hmem]
push    edi
push    eax
push    ecx
push    esi
call    sub_458f80
add     esp, 0ch
test    eax, eax
jz      short loc_479554
push    6
push    1ch
call    sub_45c150
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
lea     eax, [esp+1ch+var_4]
push    4
push    eax
mov     ecx, [esi]
push    4
push    ecx
call    sub_45c8a0
lea     ecx, [esp+2ch+var_e]
add     esp, 10h
push    ecx
push    3
push    esi
call    sub_45cb90
add     esp, 0ch
mov     ebx, eax
call    sub_44f2d0
mov     edi, eax
test    edi, edi
jz      short loc_4795e7
push    edi
mov     eax, 0
cmp     [esp+20h+var_4], 1
adc     eax, 0ffffffffh
mov     ecx, [esp+20h+var_e+2]
and     ax, 4
mov     edx, [esp+20h+var_8]
push    eax
push    ebx
push    ecx
push    edx
call    sub_457100
add     esp, 14h
test    eax, eax
jz      short loc_4795c5
cmp     [esp+1ch+var_4], 0
jz      short loc_4795c5
mov     eax, [esp+1ch+var_e+2]
push    ebx
push    eax
push    edi
call    sub_458730
add     esp, 0ch
push    edi
call    sub_44f4a0
add     esp, 4
push    ebx
push    0
push    3
push    esi
call    sub_45cc20
add     esp, 10h
push    esi
call    sub_45c820
add     esp, 4
jmp     short loc_4795f3
push    6
push    1ch
call    sub_45c150
add     esp, 8
mov     eax, [esp+1ch+var_8]
push    eax
call    sub_44f4a0
mov     eax, [esp+20h+var_e+2]
add     esp, 4
push    eax
call    sub_44f4a0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ecx, [esp+arg_4]
sub     esp, 110h
lea     eax, [esp+110h+var_110]
push    esi
xor     esi, esi
push    eax
mov     edx, [esp+118h+arg_0]
push    ecx
push    edx
call    sub_4796b0
lea     ecx, [esp+120h+var_10c]
mov     edx, [esp+120h+var_110]
add     esp, 0ch
push    ecx
push    edx
call    sub_458a50
add     esp, 8
test    eax, eax
jz      short loc_47968c
lea     eax, [esp+114h+string]
push    105h
mov     ecx, [esp+118h+var_10c]
push    eax
push    ecx
call    sub_44f5e0
lea     ecx, [esp+120h+string]
add     esp, 0ch
push    ecx
call    sub_47fa80
mov     ecx, [esp+118h+var_10c]
add     esp, 4
mov     esi, eax
push    ecx
call    sub_44f4a0
add     esp, 4
mov     eax, [esp+114h+var_110]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 110h
retn
cmp     [esp+arg_0], 0
push    esi
push    edi
jle     short loc_4796ec
mov     esi, [esp+8+arg_4]
push    esi
call    sub_41afe0
add     esp, 4
test    eax, eax
jnz     short loc_4796ec
push    esi
call    sub_442d80
mov     edi, [esp+0ch+arg_8]
add     esp, 4
push    edi
push    eax
call    sub_44f360
add     esp, 8
push    esi
call    sub_442e00
add     esp, 4
jmp     short loc_479700
mov     eax, ds:dword_4a8514
push    eax
call    sub_44f3f0
mov     edi, [esp+0ch+arg_8]
add     esp, 4
mov     [edi], eax
mov     eax, [edi]
push    eax
call    sub_457e80
add     esp, 4
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
sub     esp, 14h
lea     eax, [esp+14h+var_14]
push    eax
push    ecx
push    edx
call    sub_4796b0
mov     ecx, [esp+20h+var_14]
lea     edx, [esp+20h+var_10]
mov     [esp+20h+var_10], 5
mov     [esp+20h+var_8], offset sub_479760
mov     [esp+20h+var_4], ecx
add     esp, 0ch
push    edx
call    sub_434ac0
add     esp, 4
xor     eax, eax
mov     word_4ad3dc, 0fffah
add     esp, 14h
retn
sub     esp, 198h
push    esi
mov     esi, [esp+19ch+arg_0]
push    esi
call    sub_458a00
add     esp, 4
test    eax, eax
jz      short loc_4797d5
lea     eax, [esp+19ch+var_190]
push    190h
lea     ecx, [esp+1a0h+var_198]
push    eax
lea     edx, [esp+1a4h+var_194]
push    ecx
push    edx
call    sub_458830
add     esp, 10h
test    eax, eax
jz      short loc_4797d5
call    sub_44f2d0
test    eax, eax
jz      short loc_4797d5
mov     ecx, [esp+19ch+var_194]
push    eax
mov     eax, [esp+1a0h+var_198]
push    8
push    0
push    eax
push    ecx
call    sub_457100
mov     ecx, [esp+1b0h+var_194]
add     esp, 14h
push    ecx
call    sub_44f4a0
mov     ecx, [esp+1a0h+var_198]
add     esp, 4
push    ecx
call    sub_44f4a0
add     esp, 4
push    esi
call    sub_44b480
add     esp, 4
push    esi
call    sub_44f4a0
add     esp, 4
pop     esi
add     esp, 198h
retn
xor     cx, cx
cmp     [esp+arg_0], 0
jle     short loc_479802
mov     eax, [esp+arg_4]
mov     cx, [eax+8]
mov     eax, [esp+arg_8]
push    eax
push    ecx
call    sub_422810
add     esp, 8
xor     eax, eax
mov     word_4ad3dc, 0fffah
retn
mov     eax, [esp+8]
push    0
mov     ecx, [esp+8]
push    eax
push    ecx
call    sub_4797f0
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
push    1
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_4797f0
add     esp, 0ch
retn
mov     ecx, [esp+arg_4]
sub     esp, 8
mov     [esp+8+var_4], 0
cmp     [esp+8+arg_0], 1
push    esi
push    edi
mov     esi, [ecx+8]
mov     edi, 1
jle     short loc_47988b
mov     eax, [ecx+1eh]
dec     eax
cmp     eax, 1
sbb     edi, edi
neg     edi
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_4798e6
mov     eax, ds:dword_4a8640
mov     [esp+10h+var_8], eax
call    sub_4729e0
sub     [esp+10h+var_8], eax
call    sub_408400
sub     [esp+10h+var_8], eax
call    sub_473390
lea     ecx, [esp+10h+var_4]
add     [esp+10h+var_8], eax
sub     [esp+10h+var_8], 10000h
lea     eax, [esp+10h+var_8]
push    eax
push    ecx
push    edi
push    esi
call    sub_4798f0
add     esp, 10h
test    eax, eax
jnz     short loc_4798e6
mov     eax, [esp+10h+var_4]
neg     eax
mov     [esp+10h+var_4], eax
mov     eax, [esp+10h+var_4]
pop     edi
pop     esi
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
push    edi
push    ebp
call    sub_43e170
mov     ebx, [esp+18h+arg_c]
mov     edi, [esp+18h+arg_4]
mov     esi, [esp+18h+arg_0]
push    ebx
push    edi
push    esi
call    sub_479b40
add     esp, 0ch
test    eax, eax
jnz     short loc_479921
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     [esp+18h+var_8], 1
push    esi
call    sub_462480
mov     bp, ax
add     esp, 4
movsx   ecx, bp
dec     ecx
cmp     ecx, 0bh
ja      short def_479946
xor     eax, eax
mov     al, ds:byte_479b28[ecx]
jmp     ds:jpt_479946[eax*4]
mov     ebp, [esp+18h+arg_8]
jmp     loc_479afc
push    ebx
push    edi
push    esi
call    sub_479c10
mov     [esp+24h+var_8], eax
add     esp, 0ch
test    eax, eax
jz      loc_479aff
mov     ebp, [esp+18h+arg_8]
jmp     loc_479afc
push    ebx
push    edi
push    esi
call    sub_479c10
mov     [esp+24h+var_8], eax
add     esp, 0ch
test    eax, eax
jz      loc_479aff
mov     ebp, [esp+18h+arg_8]
inc     dword ptr [ebp+0]
test    edi, 1000h
jz      loc_479aff
push    ebx
push    ebp
push    edi
push    esi
call    sub_461cc0
add     esp, 4
push    eax
call    sub_479c80
mov     [esp+28h+var_8], eax
add     esp, 10h
jmp     loc_479aff
mov     ebp, [esp+18h+arg_8]
inc     dword ptr [ebp+0]
test    edi, 1000h
jz      loc_479aff
push    ebx
push    ebp
push    edi
push    esi
call    sub_461cc0
add     esp, 4
push    eax
call    sub_479c80
mov     [esp+28h+var_8], eax
add     esp, 10h
jmp     loc_479aff
mov     ebp, [esp+18h+arg_8]
or      edi, 1000h
push    ebx
push    ebp
push    edi
inc     dword ptr [ebp+0]
push    esi
call    sub_461cc0
add     esp, 4
push    eax
call    sub_479c80
mov     [esp+28h+var_8], eax
add     esp, 10h
jmp     loc_479aff
push    esi
call    sub_408fc0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_479a7a
cmp     bp, 9
jnz     short loc_479a58
push    21h
push    esi
call    sub_4612e0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_479a58
push    esi
call    sub_494660
mov     [esp+1ch+var_8], eax
add     esp, 4
push    ebp
call    sub_45ba00
add     esp, 4
jmp     short loc_479a7a
push    ebx
push    edi
push    esi
call    sub_479b40
mov     [esp+24h+var_8], eax
add     esp, 0ch
test    eax, eax
jz      short loc_479a7a
push    ebx
push    edi
push    esi
call    sub_479cd0
mov     [esp+24h+var_8], eax
add     esp, 0ch
cmp     [esp+18h+var_8], 0
jz      short loc_479aff
mov     ebp, [esp+18h+arg_8]
jmp     short loc_479afc
mov     eax, edi
push    ebx
or      eax, 1000h
mov     ebp, [esp+1ch+arg_8]
mov     [esp+1ch+var_4], eax
push    ebp
push    eax
push    3
push    esi
call    sub_461d30
add     esp, 8
push    eax
call    sub_479c80
mov     [esp+28h+var_8], eax
add     esp, 10h
test    eax, eax
jz      short loc_479ad4
mov     eax, [esp+18h+var_4]
push    ebx
push    ebp
push    eax
push    4
push    esi
call    sub_461d30
add     esp, 8
push    eax
call    sub_479c80
mov     [esp+28h+var_8], eax
add     esp, 10h
cmp     [esp+18h+var_8], 0
jz      short loc_479afc
test    edi, 1000h
jz      short loc_479afc
push    ebx
push    ebp
push    edi
push    esi
call    sub_461cc0
add     esp, 4
push    eax
call    sub_479c80
mov     [esp+28h+var_8], eax
add     esp, 10h
inc     dword ptr [ebp+0]
mov     eax, [esp+18h+var_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    ebx
push    esi
push    edi
mov     ecx, dword_4ae1e0
push    ebp
xor     ebx, ebx
mov     ebp, [esp+10h+arg_0]
mov     bl, byte ptr [esp+10h+arg_0+1]
shr     ebp, 10h
movsx   edi, bp
shl     edi, 6
add     ecx, edi
mov     eax, [ecx]
mov     edx, [eax]
cmp     dword ptr [edx+ebx*4], 0
jnz     short loc_479bad
mov     eax, [ecx+10h]
xor     ecx, ecx
mov     edx, [eax]
movzx   eax, bp
mov     cx, [edx+ebx*8+0bch]
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_470610
mov     esi, [esp+14h+arg_8]
add     esp, 4
mov     ecx, [esi]
cmp     eax, ecx
jle     short loc_479b9a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     ecx, eax
mov     eax, [esp+10h+arg_0]
push    eax
mov     [esi], ecx
call    sub_463740
add     esp, 4
jmp     short loc_479bb1
mov     esi, [esp+10h+arg_8]
add     edi, dword_4ae1e0
mov     eax, [edi+4]
mov     ecx, [eax]
cmp     dword ptr [ecx+ebx*4], 0
jnz     short loc_479c00
mov     eax, [edi+10h]
xor     ecx, ecx
mov     edx, [eax]
movzx   eax, bp
mov     cx, [edx+ebx*8+0beh]
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_470610
add     esp, 4
mov     ecx, [esi]
cmp     eax, ecx
jle     short loc_479bef
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     ecx, eax
mov     eax, [esp+10h+arg_0]
push    eax
mov     [esi], ecx
call    sub_461250
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
sub     esp, 2ch
push    esi
push    edi
xor     esi, esi
push    eax
call    sub_408e30
add     esp, 4
mov     edx, eax
test    edx, edx
jz      short loc_479c69
lea     edi, [esp+34h+var_2c]
xor     eax, eax
mov     ecx, 0ah
rep stosd
stosw
mov     [esp+34h+var_4], 1
mov     eax, [esp+34h+arg_8]
mov     [esp+34h+var_2c], edx
test    [esp+34h+arg_4], 1
mov     [esp+34h+var_8], eax
jz      short loc_479c5a
mov     [esp+34h+var_4], 3
lea     eax, [esp+34h+var_2c]
push    eax
call    sub_46d870
add     esp, 4
mov     esi, eax
pop     edi
cmp     esi, 1
sbb     eax, eax
pop     esi
neg     eax
add     esp, 2ch
retn
push    ebx
push    esi
push    edi
push    ebp
mov     ebp, [esp+10h+arg_0]
test    ebp, ebp
jz      short loc_479cb7
mov     esi, [esp+10h+arg_4]
mov     edi, [esp+10h+arg_8]
mov     ebx, [esp+10h+arg_c]
push    ebx
push    edi
push    esi
push    ebp
call    sub_4798f0
add     esp, 10h
test    eax, eax
jz      short loc_479cc1
push    ebp
call    sub_461c50
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jnz     short loc_479c98
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
mov     eax, [esp+4+arg_0]
push    ebx
push    esi
mov     ebx, 1
mov     [esp+0ch+var_4], ebx
push    edi
push    ebp
push    eax
call    sub_461150
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_479d51
push    edi
call    sub_4611e0
mov     bp, ax
add     esp, 4
cmp     bp, bx
jl      short loc_479d46
mov     esi, [esp+14h+arg_8]
call    sub_43e170
push    ebx
push    edi
call    sub_4611f0
add     esp, 8
mov     ecx, [esi]
cmp     eax, ecx
jg      short loc_479d3e
sub     ecx, eax
push    ebx
push    edi
mov     [esi], ecx
call    sub_461210
add     esp, 8
push    ebx
push    edi
inc     bx
call    sub_461230
add     esp, 8
cmp     bx, bp
jle     short loc_479d08
jmp     short loc_479d46
mov     [esp+14h+var_4], 0
push    0
push    edi
call    sub_461190
add     esp, 8
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+8]
push    ebx
push    esi
push    edi
xor     edi, edi
mov     esi, [eax+8]
push    esi
cmp     esi, 0ffffffffh
jnz     short loc_479d7e
call    sub_494920
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
call    sub_4636e0
add     esp, 4
test    eax, eax
jnz     short loc_479d90
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_408fc0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_479de0
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_479de0
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 9
jnz     short loc_479de0
push    21h
push    ebx
call    sub_4612e0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_479de0
push    ebx
call    sub_494920
add     esp, 4
mov     edi, eax
push    esi
call    sub_45ba00
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_479860
add     esp, 8
retn
mov     eax, 1
retn
mov     eax, [esp+arg_8]
sub     esp, 18h
mov     ecx, 5
push    esi
push    edi
mov     esi, eax
lea     edi, [esp+20h+var_18]
rep movsd
movsw
cmp     word ptr [eax], 2
jnz     short loc_479e49
fld     qword ptr [eax+8]
fabs
fstp    [esp+20h+var_10]
jmp     short loc_479e55
mov     eax, [eax+8]
cdq
xor     eax, edx
sub     eax, edx
mov     dword ptr [esp+20h+var_10], eax
lea     esi, [esp+20h+var_18]
mov     eax, [esp+20h+arg_0]
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
mov     eax, [esp+8]
cmp     word ptr [eax], 2
jnz     short loc_479e82
fld     qword ptr [eax+8]
jmp     __ftol
mov     eax, [eax+8]
retn
mov     eax, [esp+arg_4]
fld     qword ptr [eax+8]
fld1
pushf
cmp     dword_4af150, 0
jnz     short loc_479ea7
fpatan
jmp     short loc_479eac
call    unknown_libname_22
popf
retn
mov     eax, [esp+8]
fld     qword ptr [eax+8]
fcos
retn
mov     eax, [esp+arg_4]
fld     qword ptr [eax+8]
fsin
retn
mov     eax, [esp+arg_4]
fld     qword ptr [eax+8]
pushf
cmp     dword_4af150, 0
jnz     short loc_479ee5
fptan
jmp     short loc_479eea
call    unknown_libname_23
popf
fstp    st
retn
fldl2e
mov     eax, [esp+8]
fmul    qword ptr [eax+8]
fld     st
frndint
fsub    st(1), st
fxch    st(1)
f2xm1
fld1
faddp   st(1), st
fscale
fstp    st(1)
retn
fldln2
mov     eax, [esp+8]
fld     qword ptr [eax+8]
fyl2x
retn
fld     ds:dbl_4ab800
mov     eax, [esp+8]
fld     qword ptr [eax+8]
jmp     __cipow
fldlg2
mov     eax, [esp+arg_4]
fld     qword ptr [eax+8]
fyl2x
retn
mov     ecx, [esp+8]
cmp     word ptr [ecx], 2
jnz     short loc_479f7e
fldz
fcomp   qword ptr [ecx+8]
fnstsw  ax
test    ah, 41h
jnz     short loc_479f6c
mov     eax, 0ffffffffh
retn
fldz
fcomp   qword ptr [ecx+8]
fnstsw  ax
test    ah, 1
jz      short loc_479f93
mov     eax, 1
retn
mov     eax, [ecx+8]
test    eax, eax
jge     short loc_479f8b
mov     eax, 0ffffffffh
retn
jle     short loc_479f93
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, [esp+arg_4]
fld     qword ptr [eax+8]
fabs
fsqrt
retn
sub     esp, 18h
cmp     [esp+18h+arg_0], 1
push    esi
jnz     short loc_479fd1
mov     dword ptr [esp+1ch+var_10], 0
mov     dword ptr [esp+1ch+var_10+4], 3ff00000h
mov     esi, [esp+1ch+arg_4]
jmp     short loc_479fe7
fld     ds:dbl_4ab800
mov     esi, [esp+1ch+arg_4]
fild    dword ptr [esi+1eh]
call    __cipow
fstp    [esp+1ch+var_10]
fld     qword ptr [esi+8]
fmul    [esp+1ch+var_10]
fcom    ds:dbl_4ab808
fstp    [esp+1ch+x]
fnstsw  ax
fld     [esp+1ch+x]
test    ah, 41h
jnz     short loc_47a00b
fadd    ds:dbl_4ab818
jmp     short loc_47a011
fsub    ds:dbl_4ab818
fstp    [esp+1ch+x]
lea     eax, [esp+1ch+y]
mov     ecx, dword ptr [esp+1ch+x+4]
mov     edx, dword ptr [esp+1ch+x]
push    eax
push    ecx
push    edx
call    _modf
fstp    st
fld     [esp+28h+y]
pushf
cmp     dword_4af150, 0
jnz     short loc_47a03f
fdiv    [esp+2ch+var_10]
jmp     short loc_47a04c
push    dword ptr [esp+2ch+var_10+4]
push    dword ptr [esp+30h+var_10]
call    unknown_libname_7
popf
add     esp, 0ch
pop     esi
add     esp, 18h
retn
sub     esp, 28h
lea     eax, [esp+28h+var_18]
push    esi
push    edi
push    eax
call    sub_41afc0
mov     edx, [esp+34h+arg_8]
add     esp, 4
mov     ax, [edx]
cmp     ax, 2
jz      short loc_47a0aa
cmp     word ptr [edx+16h], 2
jz      short loc_47a0aa
mov     [esp+30h+var_18], 1
mov     ecx, [edx+1eh]
test    ecx, ecx
jnz     short loc_47a09e
mov     dword ptr [esp+30h+var_10], 0
jmp     short loc_47a0fd
mov     eax, [edx+8]
cdq
idiv    ecx
mov     dword ptr [esp+30h+var_10], edx
jmp     short loc_47a0fd
cmp     ax, 1
jnz     short loc_47a0b9
fild    dword ptr [edx+8]
fstp    [esp+30h+var_20]
jmp     short loc_47a0c7
mov     eax, [edx+0ch]
mov     ecx, [edx+8]
mov     dword ptr [esp+30h+var_20+4], eax
mov     dword ptr [esp+30h+var_20], ecx
cmp     word ptr [edx+16h], 1
jnz     short loc_47a0d7
fild    dword ptr [edx+1eh]
fstp    [esp+30h+var_28]
jmp     short loc_47a0e5
mov     eax, [edx+22h]
mov     ecx, [edx+1eh]
mov     dword ptr [esp+30h+var_28+4], eax
mov     dword ptr [esp+30h+var_28], ecx
fld     [esp+30h+var_20]
fld     [esp+30h+var_28]
mov     [esp+30h+var_18], 2
call    __cifmod
fstp    [esp+30h+var_10]
lea     esi, [esp+30h+var_18]
mov     eax, [esp+30h+arg_0]
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 28h
retn
sub     esp, 38h
lea     eax, [esp+38h+var_18]
push    esi
push    edi
push    eax
call    sub_41afc0
mov     ecx, [esp+44h+arg_8]
add     esp, 4
mov     eax, [ecx+0ch]
mov     edx, [ecx+8]
mov     dword ptr [esp+40h+var_30+4], eax
mov     eax, [ecx+22h]
mov     dword ptr [esp+40h+var_30], edx
mov     dword ptr [esp+40h+y+4], eax
mov     edx, [ecx+1eh]
mov     eax, [ecx+38h]
mov     ecx, [ecx+34h]
mov     dword ptr [esp+40h+y], edx
fld     [esp+40h+y]
fcomp   [esp+40h+var_30]
mov     dword ptr [esp+40h+var_20+4], eax
mov     dword ptr [esp+40h+var_20], ecx
fnstsw  ax
test    ah, 1
jz      short loc_47a19f
mov     eax, dword ptr [esp+40h+var_30+4]
mov     ecx, dword ptr [esp+40h+var_30]
mov     edx, dword ptr [esp+40h+y+4]
mov     dword ptr [esp+40h+var_38+4], eax
mov     eax, dword ptr [esp+40h+y]
mov     dword ptr [esp+40h+var_38], ecx
mov     ecx, dword ptr [esp+40h+var_38+4]
mov     dword ptr [esp+40h+var_30+4], edx
mov     edx, dword ptr [esp+40h+var_38]
mov     dword ptr [esp+40h+var_30], eax
mov     dword ptr [esp+40h+y+4], ecx
mov     dword ptr [esp+40h+y], edx
fldz
fcomp   [esp+40h+var_20]
fnstsw  ax
test    ah, 41h
jnz     short loc_47a1b6
fld     [esp+40h+var_20]
fchs
fstp    [esp+40h+var_20]
mov     eax, dword ptr [esp+40h+var_20+4]
and     eax, 7fffffffh
or      eax, dword ptr [esp+40h+var_20]
jnz     short loc_47a204
call    _rand
mov     dword ptr [esp+40h+var_20], eax
fild    dword ptr [esp+40h+var_20]
fmul    ds:dbl_4ab820
fstp    [esp+40h+var_38]
fld     [esp+40h+y]
fsub    [esp+40h+var_30]
mov     [esp+40h+var_18], 2
fmul    [esp+40h+var_38]
fst     [esp+40h+var_38]
fadd    [esp+40h+var_30]
fst     [esp+40h+var_38]
fstp    [esp+40h+var_10]
jmp     loc_47a321
fld     [esp+40h+y]
fsub    [esp+40h+var_30]
lea     eax, [esp+40h+y]
push    eax
pushf
cmp     dword_4af150, 0
jnz     short loc_47a221
fdiv    [esp+48h+var_20]
jmp     short loc_47a22e
push    dword ptr [esp+48h+var_20+4]
push    dword ptr [esp+4ch+var_20]
call    unknown_libname_7
popf
sub     esp, 8
fstp    [esp+4ch+x]
call    _modf
fstp    st
fld     [esp+4ch+var_20]
fmul    [esp+4ch+y]
add     esp, 0ch
fadd    [esp+40h+var_30]
fstp    [esp+40h+y]
call    _rand
mov     dword ptr [esp+40h+var_38], eax
fild    dword ptr [esp+40h+var_38]
fmul    ds:dbl_4ab828
lea     eax, [esp+40h+var_38]
push    eax
fstp    [esp+44h+var_38]
fld     [esp+44h+y]
fsub    [esp+44h+var_30]
sub     esp, 8
fadd    [esp+4ch+var_20]
fmul    [esp+4ch+var_38]
fst     [esp+4ch+var_38]
pushf
cmp     dword_4af150, 0
jnz     short loc_47a292
fdiv    [esp+50h+var_20]
jmp     short loc_47a29f
push    dword ptr [esp+50h+var_20+4]
push    dword ptr [esp+54h+var_20]
call    unknown_libname_7
popf
fstp    [esp+4ch+x]
call    _modf
fstp    st
fld     [esp+4ch+var_38]
fmul    [esp+4ch+var_20]
add     esp, 0ch
fst     [esp+40h+var_38]
fadd    [esp+40h+var_30]
fst     [esp+40h+var_38]
fabs
fcomp   ds:dbl_4ab830
fnstsw  ax
test    ah, 1
jz      short loc_47a30a
lea     eax, [esp+40h+var_30]
mov     ecx, dword ptr [esp+40h+var_38+4]
mov     edx, dword ptr [esp+40h+var_38]
push    eax
push    ecx
push    edx
call    _modf
fcomp   ds:dbl_4ab808
add     esp, 0ch
fnstsw  ax
test    ah, 40h
jz      short loc_47a30a
fld     [esp+40h+var_38]
mov     [esp+40h+var_18], 1
call    __ftol
mov     dword ptr [esp+40h+var_10], eax
jmp     short loc_47a321
mov     eax, dword ptr [esp+40h+var_38+4]
mov     ecx, dword ptr [esp+40h+var_38]
mov     [esp+40h+var_18], 2
mov     dword ptr [esp+40h+var_10+4], eax
mov     dword ptr [esp+40h+var_10], ecx
lea     esi, [esp+40h+var_18]
mov     eax, [esp+40h+arg_0]
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 38h
retn
mov     eax, [esp+8]
fld     qword ptr [eax+8]
jmp     __ciacos
sub     esp, 34h
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
xor     esi, esi
mov     eax, [esp+44h+arg_0]
mov     [esp+44h+string1], bl
cmp     eax, ebx
jnz     short loc_47a37f
mov     esi, ds:dword_4a68c0
jmp     short loc_47a391
cmp     eax, 1
jnz     short loc_47a391
mov     eax, [esp+44h+arg_4]
cmp     word ptr [eax], 1
jnz     short loc_47a391
mov     esi, [eax+8]
test    esi, esi
jz      loc_47a47d
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      loc_47a47d
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 1
jz      short loc_47a3c3
cmp     ax, 4
jnz     loc_47a47d
mov     [esp+44h+var_30], 0
lea     eax, [esp+44h+var_30]
push    eax
push    esi
call    sub_43b8e0
add     esp, 8
cmp     [esp+44h+var_30], 0
jz      loc_47a47d
mov     di, 1
mov     eax, [esp+44h+var_30]
push    eax
call    sub_466590
mov     [esp+48h+var_32], ax
add     esp, 4
cmp     ax, di
jl      short loc_47a47d
mov     esi, ds:lstrlena
mov     ebp, dword ptr [esp+44h+string1]
lea     eax, [esp+44h+string1]
push    1
mov     ecx, [esp+48h+var_30]
push    29h
push    eax
push    edi
push    ecx
call    sub_4665e0
lea     ecx, [esp+58h+string1]
add     esp, 14h
push    offset asc_4ae7c8
push    ecx
call    ds:lstrcata
test    ebx, ebx
jnz     short loc_47a445
lea     eax, [esp+44h+string1]
push    eax
call    sub_47fa80
add     esp, 4
mov     ebx, eax
jmp     short loc_47a474
push    ebx
call    ds:globallock
test    eax, eax
jz      short loc_47a45c
push    eax
call    esi
mov     ebp, eax
push    ebx
call    ds:globalunlock
lea     eax, [esp+44h+string1]
push    ebp
push    eax
call    esi
inc     eax
lea     ecx, [esp+48h+string1]
push    eax
push    ecx
push    ebx
call    sub_45baf0
add     esp, 10h
inc     di
cmp     di, [esp+44h+var_32]
jle     short loc_47a409
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    ebx
push    esi
push    edi
xor     esi, esi
xor     edi, edi
cmp     eax, 1
jl      short loc_47a4e4
cmp     eax, 2
jg      short loc_47a4e4
mov     ebx, [esp+10h+arg_4]
cmp     word ptr [ebx], 1
jnz     short loc_47a4b5
mov     edi, [ebx+8]
cmp     eax, 1
jle     short loc_47a4e4
add     ebx, 16h
cmp     word ptr [ebx], 0
jnz     short loc_47a4e4
push    ebx
call    sub_442d80
add     esp, 4
push    eax
call    sub_47fa80
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_47a4e4
push    ebx
call    sub_442e00
add     esp, 4
test    edi, edi
jz      short loc_47a54b
push    edi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_47a54b
push    edi
call    sub_462480
add     esp, 4
cmp     ax, 1
jz      short loc_47a50a
cmp     ax, 4
jnz     short loc_47a54b
xor     ebx, ebx
test    esi, esi
mov     [esp+10h+var_4], ebx
jz      short loc_47a51d
push    esi
call    ds:globallock
mov     ebx, eax
lea     eax, [esp+10h+var_4]
push    eax
push    edi
call    sub_43b8e0
add     esp, 8
cmp     [esp+10h+var_4], 0
jz      short loc_47a540
mov     eax, [esp+10h+var_4]
push    ebx
push    eax
call    sub_466740
add     esp, 8
test    ebx, ebx
jz      short loc_47a54b
push    esi
call    ds:globalunlock
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    esi
push    edi
xor     edi, edi
mov     esi, 1
cmp     eax, esi
jl      short loc_47a598
cmp     eax, 2
jg      short loc_47a598
mov     ecx, [esp+0ch+arg_4]
cmp     [ecx], si
jnz     short loc_47a585
mov     edi, [ecx+8]
cmp     eax, 1
jle     short loc_47a598
cmp     word ptr [ecx+16h], 1
jnz     short loc_47a598
cmp     dword ptr [ecx+1eh], 1
sbb     esi, esi
inc     esi
test    edi, edi
jz      short loc_47a5e9
push    edi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_47a5e9
push    edi
call    sub_462480
add     esp, 4
cmp     ax, 1
jz      short loc_47a5be
cmp     ax, 4
jnz     short loc_47a5e9
mov     [esp+0ch+var_4], 0
lea     eax, [esp+0ch+var_4]
push    eax
push    edi
call    sub_43b8e0
add     esp, 8
cmp     [esp+0ch+var_4], 0
jz      short loc_47a5e9
mov     eax, [esp+0ch+var_4]
push    esi
push    eax
call    sub_466be0
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    esi
push    edi
xor     esi, esi
mov     edi, 1
cmp     eax, edi
jl      short loc_47a638
cmp     eax, 2
jg      short loc_47a638
mov     ecx, [esp+0ch+arg_4]
cmp     [ecx], di
jnz     short loc_47a625
mov     esi, [ecx+8]
cmp     eax, 1
jle     short loc_47a638
cmp     word ptr [ecx+16h], 1
jnz     short loc_47a638
cmp     dword ptr [ecx+1eh], 1
sbb     edi, edi
inc     edi
test    esi, esi
jz      short loc_47a689
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_47a689
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 1
jz      short loc_47a65e
cmp     ax, 4
jnz     short loc_47a689
mov     [esp+0ch+var_4], 0
lea     eax, [esp+0ch+var_4]
push    eax
push    esi
call    sub_43b8e0
add     esp, 8
cmp     [esp+0ch+var_4], 0
jz      short loc_47a689
mov     eax, [esp+0ch+var_4]
push    edi
push    eax
call    sub_466c20
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 4
push    esi
xor     esi, esi
cmp     [esp+8+arg_0], 1
jnz     short loc_47a6ba
mov     eax, [esp+8+arg_4]
cmp     word ptr [eax], 1
jnz     short loc_47a6ba
mov     esi, [eax+8]
test    esi, esi
jz      short loc_47a70a
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_47a70a
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 1
jz      short loc_47a6e0
cmp     ax, 4
jnz     short loc_47a70a
mov     [esp+8+var_4], 0
lea     eax, [esp+8+var_4]
push    eax
push    esi
call    sub_43b8e0
add     esp, 8
cmp     [esp+8+var_4], 0
jz      short loc_47a70a
mov     eax, [esp+8+var_4]
push    eax
call    sub_466c70
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    esi
push    edi
xor     di, di
xor     esi, esi
cmp     eax, 1
jl      short loc_47a755
cmp     eax, 2
jg      short loc_47a755
mov     ecx, [esp+0ch+arg_4]
cmp     word ptr [ecx], 1
jnz     short loc_47a745
mov     esi, [ecx+8]
cmp     eax, 1
jle     short loc_47a755
cmp     word ptr [ecx+16h], 1
jnz     short loc_47a755
mov     di, [ecx+1eh]
test    esi, esi
jz      short loc_47a7a6
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_47a7a6
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 1
jz      short loc_47a77b
cmp     ax, 4
jnz     short loc_47a7a6
mov     [esp+0ch+var_4], 0
lea     eax, [esp+0ch+var_4]
push    eax
push    esi
call    sub_43b8e0
add     esp, 8
cmp     [esp+0ch+var_4], 0
jz      short loc_47a7a6
mov     eax, [esp+0ch+var_4]
push    edi
push    eax
call    sub_466d70
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 4
push    esi
push    edi
xor     di, di
xor     esi, esi
cmp     [esp+0ch+arg_0], 1
jnz     short loc_47a7ce
mov     eax, [esp+0ch+arg_4]
cmp     word ptr [eax], 1
jnz     short loc_47a7ce
mov     esi, [eax+8]
test    esi, esi
jz      short loc_47a821
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_47a821
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 1
jz      short loc_47a7f4
cmp     ax, 4
jnz     short loc_47a821
mov     [esp+0ch+var_4], 0
lea     eax, [esp+0ch+var_4]
push    eax
push    esi
call    sub_43b8e0
add     esp, 8
cmp     [esp+0ch+var_4], 0
jz      short loc_47a821
mov     eax, [esp+0ch+var_4]
push    eax
call    sub_466f20
mov     di, ax
add     esp, 4
movsx   eax, di
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 4
mov     eax, [esp+4+arg_0]
push    ebx
push    esi
xor     ebx, ebx
push    edi
xor     esi, esi
xor     edi, edi
cmp     eax, 1
jl      short loc_47a872
cmp     eax, 2
jg      short loc_47a872
mov     ecx, [esp+10h+arg_4]
cmp     word ptr [ecx], 1
jnz     short loc_47a857
mov     esi, [ecx+8]
cmp     eax, 1
jle     short loc_47a872
add     ecx, 16h
cmp     word ptr [ecx], 0
jnz     short loc_47a872
mov     edi, ecx
push    ecx
call    sub_442d80
add     esp, 4
mov     ebx, eax
test    esi, esi
jz      short loc_47a8c3
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_47a8c3
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 1
jz      short loc_47a898
cmp     ax, 4
jnz     short loc_47a8c3
mov     [esp+10h+var_4], 0
lea     eax, [esp+10h+var_4]
push    eax
push    esi
call    sub_43b8e0
add     esp, 8
cmp     [esp+10h+var_4], 0
jz      short loc_47a8c3
mov     eax, [esp+10h+var_4]
push    ebx
push    eax
call    sub_466db0
add     esp, 8
test    edi, edi
jz      short loc_47a8d0
push    edi
call    sub_442e00
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 2ch
push    ebx
push    esi
xor     ebx, ebx
xor     esi, esi
cmp     [esp+34h+arg_0], 1
mov     [esp+34h+string], bl
jnz     short loc_47a901
mov     eax, [esp+34h+arg_4]
cmp     word ptr [eax], 1
jnz     short loc_47a901
mov     esi, [eax+8]
test    esi, esi
jz      short loc_47a967
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_47a967
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 1
jz      short loc_47a927
cmp     ax, 4
jnz     short loc_47a967
mov     [esp+34h+var_2c], 0
lea     eax, [esp+34h+var_2c]
push    eax
push    esi
call    sub_43b8e0
add     esp, 8
cmp     [esp+34h+var_2c], 0
jz      short loc_47a967
lea     eax, [esp+34h+string]
push    28h
mov     ecx, [esp+38h+var_2c]
push    eax
push    ecx
call    sub_466df0
lea     ecx, [esp+40h+string]
add     esp, 0ch
push    ecx
call    sub_47fa80
add     esp, 4
mov     ebx, eax
mov     eax, ebx
pop     esi
pop     ebx
add     esp, 2ch
retn
mov     eax, [esp+arg_4]
sub     esp, 4
push    ebx
push    esi
push    edi
mov     esi, [eax+1eh]
push    ebp
mov     edi, [eax+34h]
push    eax
call    sub_442d80
add     esp, 4
cmp     esi, 1
jg      short loc_47a994
mov     esi, 1
xor     ebx, ebx
cmp     edi, esi
mov     [esp+14h+var_4], ebx
jl      short loc_47a9d3
mov     ebp, eax
mov     ecx, 1
cmp     [eax], bl
jz      short loc_47a9d7
cmp     ecx, esi
jnz     short loc_47a9af
mov     ebx, ebp
cmp     ecx, edi
jz      short loc_47a9bd
inc     ebp
inc     ecx
cmp     byte ptr [ebp+0], 0
jnz     short loc_47a9a9
jmp     short loc_47a9d7
mov     eax, ebp
sub     eax, ebx
inc     ax
push    eax
push    ebx
call    sub_47faa0
mov     [esp+1ch+var_4], eax
add     esp, 8
jmp     short loc_47a9d7
mov     ebp, [esp+14h+var_4]
cmp     [esp+14h+var_4], 0
jnz     short loc_47a9f2
test    ebx, ebx
jz      short loc_47a9f2
sub     ebp, ebx
push    ebp
push    ebx
call    sub_47faa0
mov     [esp+1ch+var_4], eax
add     esp, 8
mov     eax, [esp+14h+arg_4]
push    eax
call    sub_442e00
mov     eax, [esp+18h+var_4]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
push    1
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_47aa50
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
push    0
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_47aa50
add     esp, 0ch
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
push    edi
call    sub_442d80
add     esp, 4
push    eax
call    sub_47fa80
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_47aa92
push    esi
call    ds:globallock
cmp     [esp+8+arg_8], 0
push    eax
jz      short loc_47aa85
call    ds:charuppera
jmp     short loc_47aa8b
call    ds:charlowera
push    esi
call    ds:globalunlock
push    edi
call    sub_442e00
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
push    edi
call    sub_442d80
add     esp, 4
push    eax
call    ds:lstrlena
mov     si, ax
push    edi
call    sub_442e00
add     esp, 4
movzx   eax, si
pop     edi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_4]
push    edi
push    ebp
lea     ebx, [esi+16h]
push    ebx
call    sub_442d80
add     esp, 4
push    eax
call    sub_47fa80
add     esp, 4
mov     edi, eax
push    ebx
call    sub_442e00
add     esp, 4
test    edi, edi
jnz     short loc_47ab09
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
call    sub_442d80
add     esp, 4
mov     ebx, eax
push    edi
call    ds:globallock
push    eax
mov     ebp, eax
call    ds:lstrlena
lea     eax, [ebp+eax+1]
mov     [esp+14h+var_4], eax
push    ebx
push    ebp
call    _strpbrk
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_47ab53
mov     eax, [esp+14h+var_4]
lea     ecx, [ebp+1]
sub     eax, ebp
dec     eax
push    eax
push    ecx
push    ebp
call    _memcpy
add     esp, 0ch
jmp     short loc_47ab2c
push    esi
call    sub_442e00
add     esp, 4
push    edi
call    ds:globalunlock
push    42h
push    edi
call    sub_489a90
add     esp, 4
inc     eax
push    eax
push    edi
call    sub_45b960
add     esp, 0ch
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_4]
push    edi
push    ebp
add     esi, 16h
push    esi
call    sub_442d80
add     esp, 4
push    eax
call    sub_47fa80
mov     [esp+1ch+hmem], eax
add     esp, 4
push    esi
call    sub_442e00
add     esp, 4
cmp     [esp+18h+hmem], 0
jnz     short loc_47abce
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+18h+arg_4]
push    eax
call    sub_442d80
mov     [esp+1ch+control], eax
mov     eax, [esp+1ch+hmem]
add     esp, 4
push    eax
call    ds:globallock
push    eax
mov     esi, eax
call    ds:lstrlena
lea     edi, [esi+eax+1]
mov     eax, [esp+18h+control]
push    eax
push    esi
call    _strpbrk
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_47ac39
mov     ebp, ebx
lea     esi, [ebx+1]
inc     ebx
cmp     byte ptr [ebx], 0
jz      short loc_47ac24
push    ebx
push    ebp
call    sub_47fa30
add     esp, 8
test    eax, eax
jnz     short loc_47ac10
mov     eax, edi
sub     edi, ebx
sub     eax, ebx
add     edi, esi
push    eax
push    ebx
push    esi
call    _memcpy
add     esp, 0ch
jmp     short loc_47abf7
mov     eax, [esp+18h+arg_4]
push    eax
call    sub_442e00
mov     eax, [esp+1ch+hmem]
add     esp, 4
push    eax
call    ds:globalunlock
mov     ecx, [esp+18h+hmem]
push    42h
push    ecx
call    sub_489a90
mov     ecx, [esp+20h+hmem]
add     esp, 4
inc     eax
push    eax
push    ecx
call    sub_45b960
mov     eax, [esp+24h+hmem]
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+arg_4]
sub     esp, 4
push    ebx
mov     eax, [eax+1eh]
push    esi
cmp     eax, 1
push    edi
push    ebp
jge     short loc_47ac9d
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, 7fffh
cmp     eax, 7fffh
jg      short loc_47acab
mov     esi, eax
mov     eax, [esp+14h+arg_4]
push    eax
call    sub_442d80
add     esp, 4
mov     edi, eax
push    edi
call    ds:lstrlena
movzx   ebx, ax
mov     eax, esi
push    2
imul    eax, ebx
inc     eax
push    eax
call    sub_45b8f0
mov     [esp+1ch+hmem], eax
add     esp, 8
test    eax, eax
jz      short loc_47ad0d
push    eax
mov     ebp, ds:globallock
call    ebp
mov     ebp, eax
test    esi, esi
jle     short loc_47acfe
push    ebx
dec     esi
push    edi
push    ebp
add     ebp, ebx
call    _memcpy
add     esp, 0ch
test    esi, esi
jnz     short loc_47acec
mov     eax, [esp+14h+hmem]
mov     byte ptr [ebp+0], 0
push    eax
call    ds:globalunlock
mov     eax, [esp+14h+arg_4]
push    eax
call    sub_442e00
mov     eax, [esp+18h+hmem]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_442d80
add     esp, 4
mov     esi, eax
mov     eax, [esp+14h+arg_4]
add     eax, 16h
mov     [esp+14h+var_4], eax
push    eax
call    sub_442d80
mov     di, 1
add     esp, 4
mov     ebx, eax
mov     ebp, ds:lstrlena
push    ebx
call    ebp
lea     ebp, [ebx+eax]
cmp     ebp, ebx
jbe     short loc_47ad8c
push    0
push    0
push    0
push    esi
push    ebp
push    ebx
call    sub_45b290
add     esp, 18h
test    eax, eax
jnz     short loc_47ad8f
inc     di
inc     ebx
cmp     ebp, ebx
ja      short loc_47ad70
xor     di, di
mov     eax, [esp+14h+arg_4]
push    eax
call    sub_442e00
mov     eax, [esp+18h+var_4]
add     esp, 4
push    eax
call    sub_442e00
add     esp, 4
movzx   eax, di
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
sub     esp, 8
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_442d80
mov     [esp+1ch+lpstring2], eax
mov     eax, [esp+1ch+arg_4]
add     esp, 4
add     eax, 16h
mov     [esp+18h+var_4], eax
push    eax
call    sub_442d80
add     esp, 4
mov     edi, eax
mov     ebx, ds:lstrlena
push    edi
call    ebx
mov     si, ax
push    edi
call    ebx
lea     ebp, [edi+eax-1]
lea     ebx, [edi+eax]
mov     eax, ebx
sub     eax, edi
cmp     eax, 1
jg      short loc_47ae0f
mov     ebp, edi
test    si, si
jz      short loc_47ae42
mov     eax, [esp+18h+lpstring2]
push    0
push    0
push    0
push    eax
push    ebx
push    ebp
call    sub_45b290
add     esp, 18h
test    eax, eax
jnz     short loc_47ae42
dec     si
mov     eax, ebp
sub     eax, edi
cmp     eax, 1
jle     short loc_47ae3b
dec     ebp
jmp     short loc_47ae3d
mov     ebp, edi
test    si, si
jnz     short loc_47ae14
mov     eax, [esp+18h+arg_4]
push    eax
call    sub_442e00
mov     eax, [esp+1ch+var_4]
add     esp, 4
push    eax
call    sub_442e00
add     esp, 4
movzx   eax, si
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 1ch
push    ebx
push    esi
mov     esi, [esp+24h+arg_4]
push    edi
push    ebp
add     esi, 2ch
push    esi
call    sub_442d80
add     esp, 4
push    eax
call    sub_47fa80
mov     [esp+30h+hmem+2], eax
add     esp, 4
push    esi
call    sub_442e00
add     esp, 4
cmp     [esp+2ch+hmem+2], 0
jnz     short loc_47aeae
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, [esp+2ch+arg_4]
cmp     dword ptr [eax+0ah], 1
jg      short loc_47aec4
mov     eax, [esp+2ch+hmem+2]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, [esp+2ch+arg_4]
push    eax
call    sub_442d80
mov     [esp+30h+lpstring2], eax
mov     eax, [esp+30h+arg_4]
add     esp, 4
add     eax, 16h
mov     [esp+2ch+var_4], eax
push    eax
call    sub_442d80
xor     di, di
mov     ecx, [esp+30h+arg_4]
mov     [esp+30h+src], eax
add     esp, 4
mov     eax, [ecx+20h]
mov     ecx, [esp+2ch+hmem+2]
dec     ax
push    ecx
mov     word ptr [esp+30h+hmem], ax
call    ds:globallock
mov     ebx, eax
push    eax
mov     esi, eax
call    ds:lstrlena
inc     ax
mov     word ptr [esp+2ch+var_1a], ax
mov     eax, [esp+2ch+var_1a]
and     eax, 0ffffh
cmp     byte ptr [esi], 0
lea     ecx, [eax+esi-1]
mov     [esp+2ch+var_10], ecx
jz      loc_47b040
cmp     [esp+2ch+arg_8], 0
jz      short loc_47af97
lea     eax, [esp+2ch+var_1a+2]
mov     ecx, [esp+2ch+var_10]
push    eax
push    ecx
push    ebx
call    sub_45b490
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jz      loc_47b040
mov     eax, [esp+2ch+lpstring2]
push    0
push    0
push    0
push    eax
mov     eax, [esp+3ch+var_1a+2]
and     eax, 0ffffh
add     eax, ebx
push    eax
push    ebx
call    sub_45b290
add     esp, 18h
mov     ebp, eax
mov     eax, [esp+2ch+var_1a+2]
and     eax, 0ffffh
lea     ecx, [ebx+eax]
cmp     ecx, ebp
jnz     short loc_47af91
mov     edi, ebx
sub     edi, esi
jmp     short loc_47afc2
xor     ebp, ebp
add     ebx, eax
jmp     short loc_47afc2
mov     eax, [esp+2ch+lpstring2]
push    0
mov     ecx, [esp+30h+var_10]
push    0
push    0
push    eax
push    ecx
push    ebx
call    sub_45b290
add     esp, 18h
mov     ebp, eax
test    ebp, ebp
jnz     short loc_47afc6
lea     eax, [ebx+1]
mov     ecx, eax
sub     ecx, ebx
mov     ebx, eax
add     di, cx
test    ebp, ebp
jz      short loc_47b037
mov     eax, [esp+2ch+hmem+2]
sub     ebp, ebx
push    eax
call    ds:globalunlock
mov     eax, [esp+2ch+hmem]
mov     ecx, [esp+2ch+src]
and     eax, 0ffffh
push    eax
push    ecx
mov     ecx, [esp+34h+hmem+2]
push    ebp
movzx   eax, di
push    eax
mov     eax, [esp+3ch+var_1a]
and     eax, 0ffffh
push    eax
push    ecx
call    sub_489000
mov     di, ax
add     esp, 18h
movzx   ebx, di
cmp     ebx, 0ffffffffh
jz      short loc_47b071
mov     eax, [esp+2ch+hmem+2]
push    eax
call    ds:globallock
push    eax
add     ebx, eax
mov     esi, eax
call    ds:lstrlena
inc     ax
mov     word ptr [esp+2ch+var_1a], ax
mov     eax, [esp+2ch+var_1a]
and     eax, 0ffffh
lea     ecx, [eax+esi-1]
mov     [esp+2ch+var_10], ecx
cmp     byte ptr [ebx], 0
jnz     loc_47af35
mov     eax, [esp+2ch+hmem+2]
push    eax
call    ds:globalunlock
mov     eax, [esp+2ch+arg_4]
push    eax
call    sub_442e00
mov     eax, [esp+30h+var_4]
add     esp, 4
push    eax
call    sub_442e00
mov     eax, [esp+30h+hmem+2]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, [esp+2ch+arg_4]
push    eax
call    sub_442e00
mov     eax, [esp+30h+var_4]
add     esp, 4
push    eax
call    sub_442e00
mov     eax, [esp+30h+hmem+2]
add     esp, 4
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, [esp+arg_4]
push    0
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_47ae70
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
push    1
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_47ae70
add     esp, 0ch
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
push    edi
call    sub_442d80
add     esp, 4
push    eax
call    sub_45b4f0
add     esp, 4
mov     esi, eax
push    edi
call    sub_442e00
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
sub     esp, 4
add     eax, 16h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [eax-0eh]
push    eax
call    sub_442d80
add     esp, 4
mov     esi, eax
xor     ebx, ebx
push    esi
call    ds:lstrlena
mov     [esp+14h+var_2], bx
lea     ebp, [esi+eax]
test    edi, edi
jle     short loc_47b184
lea     eax, [esp+14h+var_2]
push    eax
push    ebp
mov     eax, dword ptr [esp+1ch+var_2]
and     eax, 0ffffh
add     eax, esi
push    eax
call    sub_45b490
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_47b184
dec     edi
jnz     short loc_47b14d
mov     eax, dword ptr [esp+14h+var_2]
push    eax
push    esi
call    sub_47faa0
add     esp, 8
mov     ebx, eax
mov     eax, [esp+14h+arg_4]
add     eax, 16h
push    eax
call    sub_442e00
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
lea     eax, [esp+arg_0]
push    esi
xor     esi, esi
push    eax
call    sub_47bbf0
add     esp, 4
test    eax, eax
jz      short loc_47b1c6
inc     esi
lea     eax, [esp+4+arg_0]
push    eax
call    sub_47bbf0
add     esp, 4
test    eax, eax
jnz     short loc_47b1b4
mov     eax, esi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_4]
push    esi
call    sub_442d80
add     esp, 4
push    eax
call    sub_47b1a0
add     esp, 4
mov     edi, eax
push    esi
call    sub_442e00
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
retn
push    ebx
xor     eax, eax
push    esi
mov     esi, [esp+8+arg_0]
cmp     esi, eax
jle     short loc_47b222
lea     eax, [esp+8+arg_4]
push    eax
call    sub_47bbf0
add     esp, 4
test    eax, eax
jz      short loc_47b245
dec     esi
test    esi, esi
jg      short loc_47b20c
test    eax, eax
jz      short loc_47b245
mov     ecx, [esp+8+arg_4]
push    eax
mov     esi, [esp+0ch+arg_8]
mov     bl, [ecx]
push    esi
mov     byte ptr [ecx], 0
call    sub_41aec0
mov     ecx, [esp+10h+arg_4]
add     esp, 8
mov     [ecx], bl
jmp     short loc_47b252
mov     esi, [esp+8+arg_8]
push    esi
call    sub_41afc0
add     esp, 4
push    3
push    esi
call    sub_41aa60
add     esp, 8
pop     esi
pop     ebx
retn
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    esi
mov     esi, [esp+1ch+arg_8]
push    edi
add     esi, 16h
push    eax
push    esi
mov     edi, [esi-0eh]
call    sub_442d80
add     esp, 4
push    eax
push    edi
call    sub_47b200
add     esp, 0ch
push    esi
call    sub_442e00
lea     esi, [esp+24h+var_18]
mov     eax, [esp+24h+arg_0]
add     esp, 4
mov     edi, eax
mov     ecx, 5
rep movsd
movsw
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 68h
push    ebx
push    esi
push    edi
mov     edi, [esp+74h+arg_4]
push    edi
call    sub_442d80
mov     bl, [eax]
add     esp, 4
mov     esi, eax
cmp     bl, 80h
jnb     short loc_47b33e
cmp     dword_4af134, 1
jle     short loc_47b2e6
push    4
xor     eax, eax
mov     al, bl
push    eax
call    __isctype
add     esp, 8
jmp     short loc_47b2f9
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, bl
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 4
test    eax, eax
jz      short loc_47b308
push    esi
call    sub_47fbb0
add     esp, 4
jmp     short loc_47b368
cmp     bl, 80h
jnb     short loc_47b33e
cmp     dword_4af134, 1
jle     short loc_47b327
push    20h
xor     eax, eax
mov     al, bl
push    eax
call    __isctype
add     esp, 8
jmp     short loc_47b33a
xor     ecx, ecx
mov     edx, off_4aef28
mov     cl, bl
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 20h
test    eax, eax
jnz     short loc_47b36a
lea     eax, [esp+74h+var_64]
push    64h
push    esi
push    eax
call    sub_47f9f0
lea     eax, [esp+80h+var_64]
add     esp, 0ch
push    eax
push    0
call    sub_4590f0
add     esp, 8
push    eax
push    0
call    sub_459a90
add     esp, 8
mov     bl, al
push    edi
call    sub_442e00
lea     eax, [esp+78h+string]
mov     [esp+78h+string], bl
mov     [esp+78h+var_65], 0
add     esp, 4
push    eax
call    sub_47fa80
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 68h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
xor     ebx, ebx
push    esi
call    sub_442d80
add     esp, 4
mov     bl, [eax]
push    esi
call    sub_442e00
add     esp, 4
mov     eax, ebx
pop     esi
pop     ebx
retn
sub     esp, 0ch
cmp     [esp+0ch+arg_0], 2
push    ebx
push    esi
mov     esi, [esp+14h+arg_4]
push    edi
push    ebp
jnz     short loc_47b3e2
cmp     dword ptr [esi+1eh], 1
jnz     short loc_47b3e2
mov     [esp+1ch+var_a+2], 1
jmp     short loc_47b3ea
mov     [esp+1ch+var_a+2], 0
push    esi
call    sub_442d80
add     esp, 4
push    eax
call    sub_47fa80
mov     [esp+20h+hmem], eax
add     esp, 4
push    esi
call    sub_442e00
add     esp, 4
cmp     [esp+1ch+hmem], 0
jnz     short loc_47b41a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+1ch+hmem]
push    eax
call    ds:globallock
push    eax
mov     esi, eax
call    ds:lstrlena
mov     word ptr [esp+1ch+var_a], 0
lea     edi, [esi+eax]
lea     eax, [esp+1ch+var_a]
push    eax
push    edi
mov     eax, [esp+24h+var_a]
and     eax, 0ffffh
add     eax, esi
push    eax
call    sub_45b490
add     esp, 0ch
mov     esi, eax
test    esi, esi
jz      short loc_47b473
lea     ebp, [esi+1]
push    esi
mov     bl, [ebp+0]
mov     byte ptr [ebp+0], 0
call    ds:charuppera
cmp     [esp+1ch+var_a+2], 0
mov     [ebp+0], bl
jz      short loc_47b438
mov     eax, [esp+1ch+hmem]
push    eax
call    ds:globalunlock
mov     eax, [esp+1ch+hmem]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_4]
push    edi
xor     edi, edi
push    esi
mov     ebx, [esp+20h+arg_0]
push    4
lea     eax, [esp+24h+control]
push    ebx
push    4
push    eax
call    sub_47b8d0
lea     eax, [esp+30h+var_e]
lea     ecx, [esp+30h+var_10]
add     esp, 14h
push    eax
push    ecx
push    esi
push    ebx
call    sub_47b940
add     esp, 10h
cmp     [esp+1ch+var_10], di
jnz     short loc_47b4d9
cmp     [esp+1ch+var_e], di
jz      loc_47b58f
cmp     [esp+1ch+var_10], 0
jnz     short loc_47b4e8
mov     [esp+1ch+var_10], 1
push    esi
call    sub_442d80
lea     ecx, [esp+20h+control]
lea     edx, [esp+20h+src]
movsx   ebx, [esp+20h+var_10]
add     esp, 4
push    ecx
push    edx
push    ebx
push    eax
call    sub_47b9c0
add     esp, 10h
test    eax, eax
jl      short loc_47b586
lea     eax, [esp+1ch+control]
lea     ecx, [esp+1ch+var_8]
movsx   edx, [esp+1ch+var_10]
push    eax
push    ecx
movsx   eax, [esp+24h+var_e]
sub     eax, edx
mov     ecx, [esp+24h+src]
add     eax, 2
push    eax
push    ecx
call    sub_47b9c0
mov     ebx, [esp+2ch+var_8]
sub     ebx, [esp+2ch+src]
add     esp, 10h
test    ebx, ebx
jle     short loc_47b586
cmp     ebx, 1
jle     short loc_47b54c
dec     [esp+1ch+var_8]
jmp     short loc_47b554
mov     eax, [esp+1ch+src]
mov     [esp+1ch+var_8], eax
lea     eax, [esp+1ch+control]
mov     ecx, [esp+1ch+var_8]
push    eax
push    ecx
call    sub_47fa30
add     esp, 8
test    eax, eax
jz      short loc_47b572
mov     ebx, [esp+1ch+var_8]
sub     ebx, [esp+1ch+src]
test    ebx, ebx
jle     short loc_47b586
mov     eax, [esp+1ch+src]
push    ebx
push    eax
call    sub_47faa0
add     esp, 8
mov     edi, eax
push    esi
call    sub_442e00
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 8
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+14h+arg_4]
mov     edi, [esp+14h+arg_0]
lea     eax, [esp+14h+control]
push    esi
push    4
push    edi
push    4
push    eax
call    sub_47b8d0
lea     eax, [esp+28h+var_8+2]
lea     ecx, [esp+28h+var_8]
add     esp, 14h
push    eax
push    ecx
push    esi
push    edi
call    sub_47b940
add     esp, 10h
cmp     [esp+14h+var_8], bx
jnz     short loc_47b5e5
cmp     [esp+14h+var_8+2], bx
jz      short loc_47b620
cmp     [esp+14h+var_8], 0
jnz     short loc_47b5f4
mov     [esp+14h+var_8], 1
lea     eax, [esp+14h+control]
mov     ecx, dword ptr [esp+14h+var_8+2]
mov     edx, dword ptr [esp+14h+var_8]
push    eax
push    ecx
push    edx
push    esi
call    sub_442d80
add     esp, 4
push    eax
call    sub_47ba10
add     esp, 10h
mov     ebx, eax
push    esi
call    sub_442e00
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 4
mov     eax, [esp+4+arg_0]
push    ebx
push    esi
push    edi
mov     esi, [esp+10h+arg_4]
lea     ecx, [esp+10h+control]
push    esi
push    4
push    eax
push    4
push    ecx
call    sub_47b8d0
mov     bx, [esi+1eh]
add     esp, 14h
push    esi
call    sub_442d80
lea     ecx, [esp+14h+control]
add     esp, 4
push    ecx
push    ebx
push    ebx
push    eax
call    sub_47ba10
add     esp, 10h
mov     edi, eax
push    esi
call    sub_442e00
add     esp, 4
test    edi, edi
jnz     short loc_47b686
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
add     esi, 2ch
dec     bx
push    esi
call    sub_442d80
lea     ecx, [esp+14h+control]
add     esp, 4
push    ecx
push    eax
push    ebx
push    edi
call    ds:globallock
push    eax
call    sub_47bab0
add     esp, 10h
mov     ebx, eax
push    esi
call    sub_442e00
add     esp, 4
push    edi
call    sub_45ba00
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [esp+14h+arg_4]
push    edi
push    ebp
push    esi
call    sub_442d80
add     esp, 4
push    eax
call    sub_47fa80
mov     [esp+20h+hmem], eax
add     esp, 4
push    esi
call    sub_442e00
add     esp, 4
cmp     [esp+1ch+hmem], 0
jnz     short loc_47b70b
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esi+4ch]
xor     ebx, ebx
dec     eax
xor     edi, edi
mov     ebp, ds:globallock
mov     [esp+1ch+size], eax
mov     eax, [esp+1ch+hmem]
push    eax
call    ebp
mov     ebp, eax
mov     ecx, 1
mov     [esp+1ch+var_8], eax
cmp     [eax], bl
jz      short loc_47b74f
mov     edx, [esi+1eh]
mov     eax, [esi+34h]
add     eax, edx
cmp     ecx, edx
jnz     short loc_47b741
mov     edi, ebp
cmp     ecx, eax
jnz     short loc_47b747
mov     ebx, ebp
inc     ebp
inc     ecx
cmp     byte ptr [ebp+0], 0
jnz     short loc_47b73b
mov     eax, [esp+1ch+hmem]
push    eax
call    ds:globalunlock
test    edi, edi
jnz     short loc_47b764
mov     ebx, ebp
mov     edi, ebp
jmp     short loc_47b76a
test    ebx, ebx
jnz     short loc_47b76a
mov     ebx, ebp
add     esi, 42h
mov     eax, [esp+1ch+size]
push    eax
sub     ebx, edi
push    esi
call    sub_442d80
sub     edi, [esp+24h+var_8]
sub     ebp, [esp+24h+var_8]
add     esp, 4
inc     ebp
push    eax
push    ebx
mov     eax, [esp+28h+hmem]
push    edi
push    ebp
push    eax
call    sub_489000
add     esp, 18h
push    esi
call    sub_442e00
mov     eax, [esp+20h+hmem]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 4
push    ebx
push    esi
mov     eax, [esp+0ch+arg_0]
push    edi
mov     edi, [esp+10h+arg_4]
push    ebp
lea     ecx, [esp+14h+string]
push    edi
push    4
push    eax
push    4
push    ecx
call    sub_47b8d0
mov     bp, [edi+1eh]
add     esp, 14h
lea     ebx, [edi+2ch]
push    edi
call    sub_442d80
add     esp, 4
mov     esi, eax
push    ebx
call    sub_442d80
lea     ecx, [esp+18h+string]
add     esp, 4
push    ecx
push    eax
push    ebp
push    esi
call    sub_47bab0
add     esp, 10h
mov     esi, eax
push    edi
call    sub_442e00
add     esp, 4
push    ebx
call    sub_442e00
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
mov     eax, [esp+0ch+arg_0]
push    edi
mov     edi, [esp+10h+arg_4]
push    ebp
lea     ecx, [esp+14h+control]
push    edi
push    2
push    eax
push    4
push    ecx
call    sub_47b8d0
add     esp, 14h
push    edi
call    sub_442d80
add     esp, 4
mov     esi, eax
cmp     byte ptr [eax], 0
jnz     short loc_47b857
xor     bp, bp
jmp     short loc_47b8b3
mov     bp, 1
mov     eax, esi
lea     ecx, [esp+14h+control]
push    ecx
push    eax
call    _strpbrk
add     esp, 8
test    eax, eax
jz      short loc_47b874
inc     bp
inc     eax
jmp     short loc_47b85d
push    esi
mov     ebx, ds:lstrlena
call    ebx
cmp     eax, 1
jle     short loc_47b88b
push    esi
call    ebx
lea     ebx, [esi+eax-1]
jmp     short loc_47b88d
mov     ebx, esi
lea     eax, [esp+14h+control]
push    eax
push    ebx
call    sub_47fa30
add     esp, 8
test    eax, eax
jz      short loc_47b8b3
dec     bp
mov     eax, ebx
sub     eax, esi
cmp     eax, 1
jle     short loc_47b8ad
dec     ebx
jmp     short loc_47b8af
mov     ebx, esi
cmp     ebx, esi
ja      short loc_47b88d
push    edi
call    sub_442e00
add     esp, 4
movsx   eax, bp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_4]
cmp     edi, 1
jl      short loc_47b92e
mov     esi, [esp+0ch+arg_0]
mov     ecx, [esp+0ch+arg_c]
cmp     ecx, [esp+0ch+arg_8]
mov     byte ptr [esi], 0dh
mov     byte ptr [esi+1], 0
jg      short loc_47b92e
lea     eax, [ecx+ecx*4]
mov     ebx, [esp+0ch+arg_10]
lea     eax, [ecx+eax*2]
add     eax, eax
sub     eax, 16h
add     ebx, eax
push    ebx
call    sub_442d80
add     esp, 4
cmp     byte ptr [eax], 0
jz      short loc_47b925
cmp     edi, 1
jl      short loc_47b925
push    1
push    eax
push    esi
call    _memcpy
mov     byte ptr [esi+1], 0
add     esp, 0ch
push    ebx
call    sub_442e00
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+arg_4]
push    esi
cmp     [esp+4+arg_0], 2
mov     dx, [ecx+1eh]
push    edi
mov     esi, [esp+8+arg_8]
mov     [esi], dx
jle     short loc_47b964
mov     eax, [ecx+34h]
mov     edi, [esp+8+arg_c]
mov     [edi], ax
jmp     short loc_47b96b
mov     edi, [esp+8+arg_c]
mov     [edi], dx
mov     cx, [edi]
mov     ax, [esi]
cmp     cx, ax
jge     short loc_47b97c
mov     [esi], cx
mov     [edi], ax
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+lpstring]
cmp     byte ptr [edi], 0
jnz     short loc_47b990
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, [esp+8+control]
push    eax
push    edi
call    _strpbrk
add     esp, 8
test    eax, eax
jnz     short loc_47b9bc
push    edi
mov     esi, ds:lstrlena
call    esi
cmp     eax, 1
jle     short loc_47b9ba
push    edi
call    esi
lea     eax, [edi+eax-1]
pop     edi
pop     esi
retn
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_8]
mov     esi, [esp+0ch+arg_4]
cmp     esi, 1
mov     [edi], eax
jge     short loc_47b9dc
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
cmp     byte ptr [eax], 0
jz      short loc_47b9ff
mov     ebx, [esp+0ch+control]
push    ebx
mov     eax, [edi]
push    eax
dec     esi
call    sub_47b980
add     esp, 8
cmp     esi, 1
jl      short loc_47ba07
inc     eax
mov     [edi], eax
cmp     byte ptr [eax], 0
jnz     short loc_47b9e5
mov     eax, esi
pop     edi
neg     eax
pop     esi
pop     ebx
retn
sub     eax, [edi]
pop     edi
inc     eax
pop     esi
pop     ebx
retn
mov     eax, [esp+lpstring]
sub     esp, 8
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_47fa80
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_47ba98
push    esi
call    ds:globallock
movsx   ebx, [esp+18h+arg_4]
mov     edi, eax
mov     ebp, [esp+18h+control]
lea     eax, [esp+18h+var_8]
push    ebp
push    eax
push    ebx
push    edi
call    sub_47b9c0
add     esp, 10h
test    eax, eax
jl      short loc_47ba91
lea     eax, [esp+18h+var_4]
push    ebp
mov     ecx, [esp+1ch+var_8]
push    eax
movsx   eax, [esp+20h+arg_8]
sub     eax, ebx
add     eax, 2
push    eax
push    ecx
call    sub_47b9c0
mov     eax, [esp+28h+var_4]
sub     eax, [esp+28h+var_8]
add     esp, 10h
test    eax, eax
jle     short loc_47ba91
push    0
push    0
push    eax
mov     eax, [esp+24h+var_8]
sub     eax, edi
push    eax
push    0ffffffffh
push    esi
call    sub_489000
add     esp, 18h
push    esi
call    ds:globalunlock
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 0ch
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+1ch+lpstring]
push    edi
call    ds:lstrlena
mov     ebx, eax
mov     eax, [esp+1ch+arg_0]
push    eax
call    sub_47fa80
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      loc_47bbe3
push    ebp
call    ds:globallock
mov     esi, eax
push    edi
lea     eax, [esp+20h+var_4]
push    eax
movsx   eax, [esp+24h+arg_4]
inc     eax
push    eax
push    esi
call    sub_47b9c0
mov     [esp+2ch+var_8], eax
add     esp, 10h
mov     eax, [esp+1ch+var_4]
push    esi
sub     eax, esi
mov     word ptr [esp+20h+var_c], ax
call    ds:lstrlena
inc     ax
cmp     [esp+1ch+var_8], 0
mov     word ptr [esp+1ch+var_c+2], ax
jge     short loc_47bb91
cmp     [esp+1ch+var_4], esi
jz      short loc_47bb42
mov     eax, [esp+1ch+var_4]
sub     eax, esi
cmp     eax, 1
jle     short loc_47bb34
mov     esi, [esp+1ch+var_4]
dec     esi
push    edi
push    esi
call    sub_47fa30
add     esp, 8
test    eax, eax
jz      short loc_47bb46
inc     [esp+1ch+var_8]
push    ebp
call    ds:globalunlock
inc     [esp+1ch+var_8]
cmp     [esp+1ch+var_8], 0
jg      short loc_47bb98
mov     esi, 1
sub     esi, [esp+1ch+var_8]
mov     eax, [esp+1ch+var_c]
push    ebx
push    edi
and     eax, 0ffffh
push    0
push    eax
mov     eax, [esp+2ch+var_c+2]
and     eax, 0ffffh
push    eax
push    ebp
call    sub_489000
mov     word ptr [esp+34h+var_c], ax
add     esp, 18h
add     word ptr [esp+1ch+var_c+2], bx
dec     esi
jnz     short loc_47bb61
jmp     short loc_47bb98
push    ebp
call    ds:globalunlock
mov     eax, [esp+1ch+arg_8]
push    eax
call    ds:lstrlena
mov     esi, [esp+1ch+var_c+2]
push    eax
and     esi, 0ffffh
mov     ecx, [esp+20h+arg_8]
mov     [esp+20h+var_8], eax
push    ecx
mov     eax, [esp+24h+var_c]
push    0
and     eax, 0ffffh
push    eax
push    esi
push    ebp
call    sub_489000
add     esi, [esp+34h+var_8]
add     esp, 18h
movzx   ecx, ax
push    ebx
push    edi
push    0
push    ecx
push    esi
push    ebp
call    sub_489000
add     esp, 18h
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
mov     ebx, [edi]
cmp     byte ptr [ebx], 0
jz      loc_47bcbb
push    offset byte_4a8543
push    ebx
call    sub_47fa50
add     esp, 8
test    eax, eax
jz      short loc_47bc72
lea     esi, [ebx+1]
push    offset byte_4a85ef
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     loc_47bce3
push    offset control
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jz      short loc_47bcb1
inc     esi
push    offset byte_4a85ef
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jz      short loc_47bcb1
inc     esi
cmp     byte ptr [esi], 0
jz      short loc_47bc6a
push    offset byte_4a85ef
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47bc52
mov     eax, ebx
mov     [edi], esi
pop     edi
pop     esi
pop     ebx
retn
mov     esi, ebx
push    offset byte_4a85ef
push    ebx
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     loc_47bd35
push    offset control
push    ebx
call    sub_47fa50
add     esp, 8
test    eax, eax
jz      short loc_47bcb1
lea     esi, [ebx+1]
push    offset byte_4a85ef
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47bcc3
inc     ebx
cmp     byte ptr [ebx], 0
jnz     loc_47bc02
xor     eax, eax
mov     [edi], ebx
pop     edi
pop     esi
pop     ebx
retn
inc     esi
cmp     byte ptr [esi], 0
jz      short loc_47bcdb
push    offset byte_4a85ef
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47bcc3
mov     eax, ebx
mov     [edi], esi
pop     edi
pop     esi
pop     ebx
retn
inc     esi
cmp     byte ptr [esi], 0
jz      short loc_47bd2d
push    offset control
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47bd15
push    offset byte_4a85ef
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47bce3
mov     eax, ebx
mov     [edi], esi
pop     edi
pop     esi
pop     ebx
retn
inc     esi
cmp     byte ptr [esi], 0
jz      short loc_47bd2d
push    offset byte_4a85ef
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47bd15
mov     eax, ebx
mov     [edi], esi
pop     edi
pop     esi
pop     ebx
retn
inc     esi
cmp     byte ptr [esi], 0
jz      short loc_47bd7f
push    offset control
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47bd67
push    offset byte_4a85ef
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47bd35
mov     eax, ebx
mov     [edi], esi
pop     edi
pop     esi
pop     ebx
retn
inc     esi
cmp     byte ptr [esi], 0
jz      short loc_47bd7f
push    offset byte_4a85ef
push    esi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47bd67
mov     eax, ebx
mov     [edi], esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
sub     esp, 40h
mov     ecx, [eax+8]
cmp     ecx, 63e0h
jnb     short loc_47bda9
mov     ecx, 63e0h
jmp     short loc_47bdb6
cmp     ecx, 0c22dh
jbe     short loc_47bdb6
mov     ecx, 0c22dh
lea     eax, [ecx+ecx*4]
lea     ecx, [eax+eax*8]
lea     edx, [ecx+ecx*2]
lea     ecx, [esp+40h+string]
lea     eax, [edx+edx*4]
shl     eax, 7
push    eax
push    40h
push    ecx
call    sub_456b80
lea     ecx, [esp+4ch+string]
add     esp, 0ch
push    ecx
call    sub_47fa80
add     esp, 44h
retn
mov     eax, [esp+arg_4]
sub     esp, 40h
mov     ecx, [eax+8]
cmp     ecx, 63e0h
jnb     short loc_47be09
mov     ecx, 63e0h
jmp     short loc_47be16
cmp     ecx, 0c22dh
jbe     short loc_47be16
mov     ecx, 0c22dh
lea     eax, [ecx+ecx*4]
lea     ecx, [eax+eax*8]
lea     edx, [ecx+ecx*2]
lea     ecx, [esp+40h+string]
lea     eax, [edx+edx*4]
shl     eax, 7
push    eax
push    40h
push    ecx
call    sub_456bd0
lea     ecx, [esp+4ch+string]
add     esp, 0ch
push    ecx
call    sub_47fa80
add     esp, 44h
retn
mov     eax, [esp+arg_4]
mov     ecx, [eax+8]
cmp     ecx, 63e0h
jnb     short loc_47be66
mov     ecx, 63e0h
jmp     short loc_47be73
cmp     ecx, 0c22dh
jbe     short loc_47be73
mov     ecx, 0c22dh
push    0
lea     eax, [ecx+ecx*4]
lea     ecx, [eax+eax*8]
lea     edx, [ecx+ecx*2]
lea     eax, [edx+edx*4]
shl     eax, 7
push    eax
call    sub_456e60
add     esp, 8
retn
mov     eax, [esp+8]
mov     ecx, [eax+8]
cmp     ecx, 63e0h
jnb     short loc_47bea6
mov     ecx, 63e0h
jmp     short loc_47beb3
cmp     ecx, 0c22dh
jbe     short loc_47beb3
mov     ecx, 0c22dh
push    1
lea     eax, [ecx+ecx*4]
lea     ecx, [eax+eax*8]
lea     edx, [ecx+ecx*2]
lea     eax, [edx+edx*4]
shl     eax, 7
push    eax
call    sub_456e60
add     esp, 8
retn
mov     eax, [esp+8]
mov     ecx, [eax+8]
cmp     ecx, 63e0h
jnb     short loc_47bee6
mov     ecx, 63e0h
jmp     short loc_47bef3
cmp     ecx, 0c22dh
jbe     short loc_47bef3
mov     ecx, 0c22dh
push    2
lea     eax, [ecx+ecx*4]
lea     ecx, [eax+eax*8]
lea     edx, [ecx+ecx*2]
lea     eax, [edx+edx*4]
shl     eax, 7
push    eax
call    sub_456e60
add     esp, 8
retn
mov     eax, [esp+arg_4]
sub     esp, 40h
mov     ecx, [eax+8]
cmp     ecx, 63e0h
jnb     short loc_47bf29
mov     ecx, 63e0h
jmp     short loc_47bf36
cmp     ecx, 0c22dh
jbe     short loc_47bf36
mov     ecx, 0c22dh
push    0
lea     eax, [ecx+ecx*4]
lea     ecx, [eax+eax*8]
lea     edx, [ecx+ecx*2]
lea     ecx, [esp+44h+string]
lea     eax, [edx+edx*4]
shl     eax, 7
push    eax
push    40h
push    ecx
call    sub_456ed0
lea     ecx, [esp+50h+string]
add     esp, 10h
push    ecx
call    sub_47fa80
add     esp, 44h
retn
mov     eax, [esp+arg_4]
sub     esp, 40h
mov     ecx, [eax+8]
cmp     ecx, 63e0h
jnb     short loc_47bf89
mov     ecx, 63e0h
jmp     short loc_47bf96
cmp     ecx, 0c22dh
jbe     short loc_47bf96
mov     ecx, 0c22dh
push    1
lea     eax, [ecx+ecx*4]
lea     ecx, [eax+eax*8]
lea     edx, [ecx+ecx*2]
lea     ecx, [esp+44h+string]
lea     eax, [edx+edx*4]
shl     eax, 7
push    eax
push    40h
push    ecx
call    sub_456ed0
lea     ecx, [esp+50h+string]
add     esp, 10h
push    ecx
call    sub_47fa80
add     esp, 44h
retn
mov     eax, [esp+arg_4]
mov     ecx, [eax+8]
mov     edx, [eax+1eh]
mov     eax, [eax+34h]
cmp     eax, 46h
jge     short loc_47bfe8
mov     eax, 63e0h
retn
cmp     eax, 64h
jge     short loc_47bffe
add     eax, 76ch
cmp     edx, 1
jge     short loc_47c018
mov     edx, 1
jmp     short loc_47c022
cmp     eax, 7b2h
jge     short loc_47c00b
mov     eax, 63e0h
retn
cmp     eax, 7f4h
jle     short loc_47bff2
mov     eax, 0c22dh
retn
cmp     edx, 0ch
jle     short loc_47c022
mov     edx, 0ch
cmp     ecx, 1
jge     short loc_47c02e
mov     ecx, 1
jmp     short loc_47c038
cmp     ecx, 1fh
jle     short loc_47c038
mov     ecx, 1fh
cmp     eax, 7b2h
jnz     short loc_47c04f
cmp     edx, 1
jge     short loc_47c04f
cmp     ecx, 1
jge     short loc_47c04f
mov     eax, 63e0h
retn
cmp     eax, 7f4h
jnz     short loc_47c066
cmp     edx, 2
jle     short loc_47c066
cmp     ecx, 5
jle     short loc_47c066
mov     eax, 0c22dh
retn
push    eax
push    edx
push    ecx
call    sub_456f60
add     esp, 0ch
mov     ecx, 15180h
sub     edx, edx
div     ecx
retn
push    ebx
push    esi
push    edi
mov     ebx, 1
mov     esi, ds:dword_4a68c0
push    esi
call    sub_462480
mov     di, ax
add     esp, 4
cmp     [esp+0ch+arg_0], ebx
jnz     short loc_47c0c8
mov     eax, [esp+0ch+arg_4]
mov     eax, [eax+8]
cmp     eax, ebx
jz      short loc_47c0b2
cmp     eax, 2
jz      short loc_47c0b9
jmp     short loc_47c0c8
mov     ebx, 2
jmp     short loc_47c0c8
lea     eax, [edi-4]
mov     ebx, 3
cmp     ax, 1
adc     ebx, 0ffffffffh
push    esi
push    ebx
call    sub_43bd00
movsx   eax, di
add     esp, 8
cmp     eax, 4
jl      short loc_47c0f4
cmp     eax, 8
jg      short loc_47c0f4
cmp     ds:dword_4a6aba, 1
jnz     short loc_47c0f4
push    esi
push    edi
push    1
call    sub_43bd20
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 8
push    esi
call    sub_43bbf0
test    eax, eax
jnz     short loc_47c17a
mov     eax, [esp+0ch+arg_4]
mov     esi, ds:dword_4a68c0
mov     ecx, [eax+0ch]
mov     edx, [eax+8]
mov     dword ptr [esp+0ch+var_8+4], ecx
mov     dword ptr [esp+0ch+var_8], edx
call    sub_434c20
mov     ecx, dword ptr [esp+0ch+var_8+4]
mov     eax, dword ptr [esp+0ch+var_8]
push    ecx
push    eax
call    sub_43bc50
add     esp, 8
test    eax, eax
jnz     short loc_47c175
cmp     esi, ds:dword_4a68c0
jnz     short loc_47c175
call    sub_45a6b0
cmp     eax, 2
jz      short loc_47c175
push    7fffh
call    sub_421ff0
mov     eax, dword ptr [esp+10h+var_8+4]
mov     ecx, dword ptr [esp+10h+var_8]
add     esp, 4
push    eax
push    ecx
call    sub_43bc50
add     esp, 8
test    eax, eax
jz      short loc_47c140
call    sub_434c30
xor     eax, eax
pop     esi
add     esp, 8
retn
xor     ecx, ecx
cmp     [esp+arg_0], 1
jnz     short loc_47c1a0
mov     eax, [esp+arg_4]
mov     ecx, [eax+8]
push    ecx
call    sub_42afa0
add     esp, 4
xor     eax, eax
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
xor     edi, edi
mov     ecx, off_4ae7ec
movsx   eax, byte ptr [esi]
push    eax
push    ecx
call    _strchr
add     esp, 8
cmp     eax, 1
sbb     eax, eax
inc     eax
cmp     byte ptr [esi], 0
jz      short loc_47c21c
mov     ebx, [esp+0ch+arg_4]
test    eax, eax
movsx   eax, byte ptr [esi]
push    eax
jnz     short loc_47c1fa
mov     ecx, off_4ae7f0
push    ecx
call    _strchr
add     esp, 8
cmp     eax, 1
sbb     eax, eax
inc     eax
jmp     short loc_47c216
mov     ecx, off_4ae7ec
push    ecx
call    _strchr
add     esp, 8
cmp     eax, 1
sbb     eax, eax
inc     eax
jnz     short loc_47c216
inc     edi
cmp     ebx, edi
jz      short loc_47c21c
inc     esi
cmp     byte ptr [esi], 0
jnz     short loc_47c1db
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     al, [esi]
test    al, al
jnz     short loc_47c23f
xor     eax, eax
pop     esi
retn
movsx   eax, al
push    eax
mov     ecx, off_4ae7ec
push    ecx
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_47c26e
mov     eax, off_4ae7f0
inc     esi
push    eax
push    esi
call    _strpbrk
add     esp, 8
test    eax, eax
jnz     short loc_47c26e
xor     eax, eax
pop     esi
retn
mov     eax, 1
pop     esi
retn
mov     ecx, [esp+arg_4]
push    esi
mov     eax, [esp+4+arg_0]
cmp     ecx, 3
lea     esi, [eax+ecx-3]
jge     short loc_47c296
xor     eax, eax
pop     esi
retn
movsx   eax, byte ptr [esi]
push    eax
mov     ecx, off_4ae7ec
push    ecx
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_47c2e2
movsx   eax, byte ptr [esi+1]
push    eax
mov     ecx, off_4ae7ec
push    ecx
call    _strchr
add     esp, 8
test    eax, eax
jz      short loc_47c2e2
movsx   eax, byte ptr [esi+2]
push    eax
push    offset aaeiouwxy
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_47c2e2
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
cmp     edi, 3
jl      short loc_47c33f
mov     esi, [esp+8+arg_0]
mov     al, [esi]
cmp     [esi-1], al
jnz     short loc_47c33f
movsx   eax, al
push    eax
mov     ecx, off_4ae7f0
push    ecx
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_47c33f
cmp     edi, 4
jl      short loc_47c33a
movsx   eax, byte ptr [esi]
push    eax
push    offset afsz
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_47c33a
mov     byte ptr [esi], 0
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_47c280
add     esp, 8
test    eax, eax
jz      short loc_47c377
mov     eax, [esp+arg_4]
push    offset ae
inc     eax
push    eax
call    ds:lstrcpya
xor     eax, eax
retn
push    ebx
xor     ecx, ecx
mov     eax, [esp+4+arg_4]
push    esi
push    edi
lea     esi, [eax-1]
cmp     byte ptr [esi], 65h
jz      short loc_47c39c
mov     [eax], cl
mov     eax, [esp+0ch+arg_8]
dec     eax
pop     edi
pop     esi
pop     ebx
retn
lea     edi, [eax-2]
movsx   edx, byte ptr [edi]
sub     edx, 68h
cmp     edx, 12h
ja      short def_47c3b2
xor     ebx, ebx
mov     bl, ds:byte_47c41c[edx]
jmp     ds:jpt_47c3b2[ebx*4]
mov     dl, [eax-3]
cmp     dl, 63h
jz      short loc_47c3f2
cmp     dl, 73h
jnz     short def_47c3b2
jmp     short loc_47c3f2
mov     esi, [esp+0ch+arg_8]
cmp     esi, 3
jle     short loc_47c3dd
push    offset ay
push    edi
call    ds:lstrcpya
lea     eax, [esi-2]
pop     edi
pop     esi
pop     ebx
retn
cmp     byte ptr [eax-3], 73h
jnz     short def_47c3b2
jmp     short loc_47c3f2
cmp     byte ptr [eax-3], 7ah
jnz     short def_47c3b2
mov     ecx, 1
test    ecx, ecx
jz      short loc_47c3fd
mov     eax, esi
mov     byte ptr [eax], 0
sub     eax, [esp+0ch+arg_0]
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
sub     ebx, 3
mov     esi, [esp+0ch+arg_8]
sub     esi, 3
mov     edi, [esp+0ch+lpstring]
mov     byte ptr [ebx+1], 0
push    edi
call    sub_47c230
add     esp, 4
test    eax, eax
jnz     short loc_47c460
mov     eax, esi
pop     edi
mov     byte ptr [ebx+1], 69h
pop     esi
pop     ebx
retn
push    esi
push    ebx
call    sub_47c2f0
add     esp, 8
test    eax, eax
jnz     short loc_47c479
push    edi
call    ds:lstrlena
pop     edi
pop     esi
pop     ebx
retn
cmp     byte ptr [ebx], 76h
jnz     short loc_47c481
mov     byte ptr [ebx], 66h
cmp     byte ptr [ebx], 79h
jz      short loc_47c49c
push    esi
push    ebx
push    edi
call    sub_47c350
add     esp, 0ch
push    edi
call    ds:lstrlena
pop     edi
pop     esi
pop     ebx
retn
cmp     esi, 2
jnz     short loc_47c4c3
movsx   eax, byte ptr [ebx-1]
push    eax
push    offset adhltv
call    _strchr
add     esp, 8
test    eax, eax
jz      short loc_47c4c3
push    offset aie
push    ebx
call    ds:lstrcpya
push    edi
call    ds:lstrlena
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
push    esi
push    edi
lea     edi, [eax-2]
cmp     byte ptr [edi], 65h
jnz     short loc_47c4e5
mov     eax, [esp+8+arg_8]
pop     edi
pop     esi
retn
mov     byte ptr [eax-1], 0
mov     esi, [esp+8+arg_8]
sub     esi, 2
push    esi
push    edi
call    sub_47c2f0
add     esp, 8
test    eax, eax
jnz     short loc_47c50c
mov     esi, [esp+8+lpstring]
push    esi
call    ds:lstrlena
pop     edi
pop     esi
retn
mov     al, [edi]
cmp     al, 69h
jnz     short loc_47c531
cmp     esi, 1
jle     short loc_47c551
push    offset ay
push    edi
call    ds:lstrcpya
mov     esi, [esp+8+lpstring]
push    esi
call    ds:lstrlena
pop     edi
pop     esi
retn
cmp     al, 76h
jnz     short loc_47c538
mov     byte ptr [edi], 66h
push    esi
push    edi
mov     esi, [esp+10h+lpstring]
push    esi
call    sub_47c350
add     esp, 0ch
push    esi
call    ds:lstrlena
pop     edi
pop     esi
retn
mov     esi, [esp+8+lpstring]
push    esi
call    ds:lstrlena
pop     edi
pop     esi
retn
cmp     ds:pmem, 0
push    ebx
push    esi
push    edi
push    ebp
jz      short loc_47c5b9
cmp     ds:dword_4a9b00, 0
jz      short loc_47c5b9
xor     edi, edi
mov     ebx, 149h
mov     esi, [esp+10h+lpstring1]
lea     eax, [edi+ebx]
cdq
sub     eax, edx
sar     eax, 1
mov     ebp, eax
lea     eax, ds:0[eax*2]
lea     eax, [eax+eax*8]
add     eax, ds:pmem
add     eax, 2
push    eax
push    esi
call    ds:lstrcmpa
test    eax, eax
jge     short loc_47c5b0
lea     ebx, [ebp-1]
jmp     short loc_47c5b5
jle     short loc_47c5c0
lea     edi, [ebp+1]
cmp     ebx, edi
jge     short loc_47c581
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
lea     ecx, ds:0[ebp*2]
mov     eax, ds:pmem
pop     ebp
pop     edi
lea     edx, [ecx+ecx*8]
pop     esi
movsx   eax, word ptr [edx+eax]
shl     eax, 4
pop     ebx
add     eax, ds:dword_4a9b00
retn
push    ebx
mov     eax, ds:hinstance
push    esi
mov     ebx, ds:findresourcea
push    edi
push    0ah
push    64h
push    eax
call    ebx
test    eax, eax
jz      short loc_47c628
push    eax
mov     edi, ds:loadresource
mov     eax, ds:hinstance
push    eax
call    edi
push    eax
mov     esi, ds:lockresource
call    esi
mov     ds:pmem, eax
jmp     short loc_47c634
mov     esi, ds:lockresource
mov     edi, ds:loadresource
mov     eax, ds:hinstance
push    0ah
push    65h
push    eax
call    ebx
test    eax, eax
jz      short loc_47c655
push    eax
mov     eax, ds:hinstance
push    eax
call    edi
push    eax
call    esi
mov     ds:dword_4a9b00, eax
cmp     ds:pmem, 0
jz      short loc_47c670
cmp     ds:dword_4a9b00, 0
jz      short loc_47c670
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     eax, ds:pmem
test    eax, eax
jz      short loc_47c6a0
push    eax
mov     esi, ds:globalhandle
call    esi
test    eax, eax
jz      short loc_47c6a6
push    eax
call    ds:freeresource
jmp     short loc_47c6a6
mov     esi, ds:globalhandle
mov     eax, ds:dword_4a9b00
test    eax, eax
jz      short loc_47c6bd
push    eax
call    esi
test    eax, eax
jz      short loc_47c6bd
push    eax
call    ds:freeresource
xor     eax, eax
pop     esi
mov     ds:pmem, eax
mov     ds:dword_4a9b00, eax
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     edi, [esp+0ch+lpstring1]
push    ebp
mov     ebp, 1
mov     ebx, edi
cmp     byte ptr [esi], 0
jz      short loc_47c730
cmp     dword_4af134, 1
jle     short loc_47c701
movsx   eax, byte ptr [esi]
push    1
push    eax
call    __isctype
add     esp, 8
jmp     short loc_47c713
movsx   ecx, byte ptr [esi]
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 1
test    eax, eax
jz      short loc_47c725
movsx   eax, byte ptr [esi]
push    eax
call    _tolower
add     esp, 4
jmp     short loc_47c727
mov     al, [esi]
inc     esi
mov     [ebx], al
inc     ebx
cmp     byte ptr [esi], 0
jnz     short loc_47c6e8
mov     eax, ebx
mov     byte ptr [ebx], 0
sub     eax, edi
cmp     eax, 3
jge     short loc_47c743
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     byte ptr [ebx-1], 73h
jnz     short loc_47c756
lea     eax, [ebx-2]
cmp     byte ptr [eax], 27h
jnz     short loc_47c756
mov     ebx, eax
mov     byte ptr [eax], 0
mov     esi, ebx
sub     esi, edi
cmp     esi, 4
jge     short loc_47c766
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     al, [ebx-2]
dec     ebx
movsx   ecx, byte ptr [ebx]
cmp     ecx, 64h
jz      short loc_47c77e
cmp     ecx, 67h
jz      short loc_47c78e
cmp     ecx, 73h
jz      short loc_47c7b2
jmp     short loc_47c7c9
cmp     al, 65h
jnz     short loc_47c7c9
xor     ebp, ebp
push    esi
push    ebx
push    edi
call    sub_47c4d0
jmp     short loc_47c7c0
cmp     esi, 4
jle     short loc_47c7c9
push    offset aing
lea     eax, [ebx-2]
push    eax
call    ds:lstrcmpa
test    eax, eax
jnz     short loc_47c7c9
xor     ebp, ebp
push    esi
push    ebx
push    edi
call    sub_47c430
jmp     short loc_47c7c0
cmp     al, 73h
jz      short loc_47c7c9
xor     ebp, ebp
push    esi
push    ebx
push    edi
call    sub_47c380
lea     ebx, [edi+eax-1]
add     esp, 0ch
mov     esi, eax
test    ebp, ebp
jz      short loc_47c7e9
push    edi
call    sub_47c560
add     esp, 4
test    eax, eax
jz      short loc_47c7e9
push    eax
push    edi
call    ds:lstrcpya
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     esi, 3
jge     short loc_47c7f5
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     al, [ebx]
cmp     al, 6ch
jnz     short loc_47c80b
cmp     byte ptr [ebx-1], 6ch
jnz     short loc_47c80b
xor     eax, eax
pop     ebp
pop     edi
mov     byte ptr [ebx], 0
pop     esi
pop     ebx
retn
cmp     al, 65h
jnz     short loc_47c83c
push    2
push    edi
call    sub_47c1b0
add     esp, 8
cmp     eax, 1
jg      short loc_47c830
jnz     short loc_47c833
dec     esi
push    esi
push    edi
call    sub_47c280
add     esp, 8
test    eax, eax
jnz     short loc_47c833
mov     byte ptr [ebx], 0
dec     ebx
cmp     byte ptr [ebx], 76h
jnz     short loc_47c83c
mov     byte ptr [ebx], 66h
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 1
retn
sub     esp, 10h
cmp     ds:word_4a8518, 0
push    ebx
push    esi
push    edi
push    ebp
jz      loc_47c938
mov     edi, [esp+20h+arg_0]
mov     ebp, [esp+20h+arg_4]
test    edi, edi
jnz     short loc_47c889
test    ebp, ebp
jz      loc_47c938
push    20004f0h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     short loc_47c8b7
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ebx, 1
lea     eax, [esp+20h+var_10]
mov     esi, ebx
push    eax
push    20004f0h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, bl
push    eax
call    sub_462670
add     esp, 8
push    eax
call    sub_491e40
add     esp, 8
test    edi, edi
jz      short loc_47c8fe
push    ebx
mov     edi, ds:getsystemmetrics
call    edi
cmp     eax, [esp+20h+var_4]
jle     short loc_47c904
xor     ebx, ebx
jmp     short loc_47c904
mov     edi, ds:getsystemmetrics
test    ebp, ebp
jz      short loc_47c919
push    0
mov     esi, 1
call    edi
cmp     eax, [esp+20h+var_8]
jle     short loc_47c919
xor     esi, esi
test    ebx, ebx
jz      short loc_47c92e
test    esi, esi
jz      short loc_47c92e
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
push    eax
call    sub_47d310
add     esp, 4
mov     eax, [esi+4]
push    eax
call    sub_45c820
add     esp, 4
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+0ch], 0
pop     esi
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_c]
mov     edx, [esp+arg_4]
sub     esp, 14h
mov     [esp+14h+var_10], eax
mov     [esp+14h+var_c], ecx
mov     ecx, [esp+14h+arg_0]
lea     eax, [esp+14h+var_14]
mov     [esp+14h+var_8], edx
push    eax
lea     edx, [esp+18h+var_10]
mov     [esp+18h+var_4], ecx
push    edx
mov     ecx, [ecx+4]
push    offset sub_47cd20
push    ecx
call    sub_45cca0
add     esp, 24h
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
sub     esp, 4ch
lea     eax, [esp+4ch+var_4c]
push    4ah
push    eax
push    ecx
mov     eax, [edx+4]
mov     ecx, [eax]
push    ecx
call    sub_45c8a0
mov     ax, [esp+5ch+var_4c]
add     esp, 10h
add     esp, 4ch
retn
sub     esp, 4ch
push    ebx
push    esi
mov     esi, [esp+54h+arg_0]
push    edi
push    ebp
test    esi, esi
jz      short loc_47ca77
mov     bx, [esp+5ch+arg_4]
push    ebx
push    esi
call    sub_47ccd0
add     esp, 8
mov     edi, eax
test    edi, edi
jl      short loc_47ca77
cmp     dword ptr [esi], 0
jz      short loc_47ca77
lea     eax, [esp+5ch+var_4c]
push    4ah
push    eax
mov     ecx, [esi+4]
push    ebx
mov     edx, [ecx]
push    edx
call    sub_45c8a0
mov     bp, [esp+6ch+arg_8]
lea     ecx, [esp+6ch+var_4c]
mov     [esp+6ch+var_4c], bp
add     esp, 10h
mov     eax, [esi+4]
push    4ah
push    ecx
push    ebx
push    eax
call    sub_45ca00
add     esp, 10h
push    ebp
call    sub_47d470
add     esp, 4
or      ah, 4
movzx   ecx, ax
push    ecx
mov     edx, [esi]
push    edi
push    edx
call    ds:enablemenuitem
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4ch
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_47ccd0
add     esp, 8
inc     eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, dword_4ae83c
retn
mov     eax, [esp+arg_4]
sub     esp, 0ch
mov     [esp+0ch+var_4], 0
lea     ecx, [esp+0ch+var_c]
mov     edx, [esp+0ch+arg_0]
mov     [esp+0ch+var_8], eax
push    ecx
lea     eax, [esp+10h+var_8]
mov     ecx, [edx+4]
push    eax
push    offset sub_47cd50
push    ecx
call    sub_45cca0
mov     ax, [esp+1ch+var_4]
add     esp, 10h
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
push    1
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    sub_47ce00
add     esp, 0ch
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
xor     ebp, ebp
cmp     esi, ebp
jz      short loc_47cb81
mov     ebx, [esp+10h+arg_8]
cmp     ebx, ebp
jz      short loc_47cb81
mov     di, [esp+10h+arg_4]
push    edi
push    esi
call    sub_47ccd0
add     esp, 8
mov     [ebx], ebp
mov     [ebx+4], ebp
test    eax, eax
mov     [ebx+8], ebp
mov     [ebx+0ch], ebp
mov     [ebx+10h], ebp
mov     [ebx+14h], bp
jl      short loc_47cb81
push    eax
mov     eax, [esi]
push    eax
call    ds:getsubmenu
test    eax, eax
jz      short loc_47cb81
push    eax
call    sub_47d3a0
add     esp, 4
mov     [ebx], eax
cmp     eax, ebp
jz      short loc_47cb81
neg     di
push    edi
mov     eax, [esi+4]
push    eax
call    sub_45c920
add     esp, 8
mov     [ebx+4], eax
cmp     eax, 1
sbb     ebp, ebp
inc     ebp
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 50h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+60h+arg_0]
test    edi, edi
jz      loc_47cc6d
mov     esi, [esp+60h+arg_8]
test    esi, esi
jz      loc_47cc6d
cmp     dword ptr [edi], 0
jz      loc_47cc6d
test    esi, esi
jz      loc_47cc6d
cmp     dword ptr [esi], 0
jz      loc_47cc6d
cmp     dword ptr [edi+4], 0
jz      loc_47cc6d
mov     bx, [esp+60h+arg_4]
push    ebx
push    edi
call    sub_47ccd0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jl      loc_47cc6d
lea     eax, [esp+60h+var_4c]
push    4ah
push    eax
mov     ecx, [edi+4]
push    ebx
mov     edx, [ecx]
push    edx
call    sub_45c8a0
mov     edx, [esp+70h+var_4c]
add     esp, 10h
mov     ecx, [esi]
push    edx
mov     [esp+64h+uidnewitem], ecx
call    sub_47d470
or      ax, 410h
lea     ecx, [esp+64h+newitem]
mov     edx, [esp+64h+uidnewitem]
add     esp, 4
movzx   eax, ax
push    ecx
push    edx
push    eax
mov     ecx, [edi]
push    ebp
push    ecx
mov     ebp, ds:modifymenua
call    ebp
mov     ebp, [esi+4]
mov     eax, [ebp+0]
push    eax
call    sub_45c830
add     esp, 4
neg     bx
push    eax
push    ebp
push    ebx
mov     eax, [edi+4]
push    eax
call    sub_45cb00
add     esp, 10h
mov     ebp, [esi+4]
push    ebp
call    sub_45c820
add     esp, 4
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     eax, [esi]
test    eax, eax
jz      short loc_47ccca
push    eax
call    ds:getmenuitemcount
lea     edi, [eax-1]
test    edi, edi
jl      short loc_47ccaf
mov     ebx, ds:deletemenu
push    400h
mov     eax, [esi]
push    edi
push    eax
call    ebx
dec     edi
jns     short loc_47cca1
mov     eax, [esi+4]
push    eax
call    sub_45c820
add     esp, 4
call    sub_45c800
mov     dword ptr [esi+10h], 0
mov     [esi+4], eax
pop     edi
pop     esi
pop     ebx
retn
mov     ax, [esp+arg_4]
sub     esp, 0ch
mov     [esp+0ch+var_4], ax
lea     ecx, [esp+0ch+var_c]
lea     edx, [esp+0ch+var_8]
push    ecx
mov     eax, [esp+10h+arg_0]
push    edx
mov     [esp+14h+var_8], 0
push    offset sub_47ceb0
mov     ecx, [eax+4]
push    ecx
call    sub_45cca0
add     esp, 10h
test    ax, ax
mov     eax, [esp+0ch+var_8]
jnz     short loc_47cd12
mov     eax, 0ffffffffh
add     esp, 0ch
retn
mov     cx, [esp+arg_0]
test    cx, cx
jle     short loc_47cd41
mov     edx, [esp+arg_c]
mov     eax, [edx+4]
push    eax
mov     eax, [edx]
push    eax
mov     eax, [edx+0ch]
push    eax
push    ecx
call    dword ptr [edx+8]
add     esp, 10h
retn
mov     eax, 1
retn
sub     esp, 18h
push    ebx
push    esi
mov     bx, [esp+20h+arg_0]
push    edi
push    ebp
xor     edi, edi
test    bx, bx
jge     short loc_47cdbf
mov     eax, [esp+28h+arg_8]
mov     ebp, [esp+28h+arg_4]
and     eax, 0ffffh
mov     [esp+28h+var_c], edi
mov     [esp+28h+var_18], edi
push    eax
push    ebp
call    sub_45b910
mov     [esp+30h+hmem], eax
add     esp, 8
cmp     eax, edi
jz      short loc_47cdf0
mov     esi, [esp+28h+arg_c]
lea     ecx, [esp+28h+var_18]
mov     eax, [esi]
push    eax
push    ecx
call    sub_47cab0
mov     [esi+4], ax
mov     ecx, [esp+30h+hmem]
add     esp, 8
push    ecx
call    sub_45ba00
add     esp, 4
cmp     [esi+4], di
jz      short loc_47cdf0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     esi, [esp+28h+arg_c]
mov     ebp, [esp+28h+arg_4]
mov     eax, [esi]
mov     ecx, [ebp+2]
push    eax
push    ecx
push    0
call    sub_459aa0
add     esp, 0ch
test    eax, eax
jz      short loc_47cdf0
test    byte ptr [ebp+0], 1
jnz     short loc_47cdf0
mov     [esi+4], bx
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 10h
push    esi
push    edi
mov     esi, [esp+18h+arg_0]
mov     edi, [esp+18h+arg_4]
test    esi, esi
jz      short loc_47ce20
test    edi, edi
jz      short loc_47ce20
call    sub_490ec0
movsx   eax, ax
push    eax
jmp     short loc_47ce22
push    0
push    0
call    sub_474d30
add     esp, 8
cmp     [esp+18h+arg_8], 0
jz      short loc_47ce95
push    esi
call    sub_437b70
add     esp, 4
cmp     dword_4ae83c, esi
jz      short loc_47ce95
test    edi, edi
jnz     short loc_47ce95
mov     edi, ds:frequency
test    edi, edi
jz      short loc_47ce95
lea     eax, [esp+18h+rect]
push    eax
push    edi
call    sub_490920
add     esp, 8
test    esi, esi
jz      short loc_47ce6b
call    sub_490ec0
jmp     short loc_47ce73
call    sub_490ec0
neg     ax
movsx   eax, ax
add     [esp+18h+rect.bottom], eax
mov     eax, [esp+18h+rect.bottom]
sub     eax, [esp+18h+rect.top]
push    eax
mov     eax, [esp+1ch+rect.right]
sub     eax, [esp+1ch+rect.left]
push    eax
push    edi
call    sub_490c50
add     esp, 0ch
pop     edi
mov     dword_4ae83c, esi
pop     esi
add     esp, 10h
retn
mov     ax, [esp+arg_0]
test    ax, ax
jge     short loc_47cec0
mov     eax, 1
retn
mov     ecx, [esp+arg_c]
cmp     [ecx+4], ax
jnz     short loc_47cecd
xor     eax, eax
retn
mov     eax, 1
inc     dword ptr [ecx]
retn
push    ebx
push    esi
push    edi
push    0eh
push    0
call    sub_4494c0
add     esp, 8
mov     edi, eax
push    0eh
push    0
call    sub_449540
add     esp, 8
mov     esi, eax
push    0eh
push    0
call    sub_449480
add     esp, 8
mov     ebx, eax
call    sub_490ec0
mov     ds:word_4a9b0c, ax
push    0eh
push    0
call    sub_449520
add     esp, 8
inc     eax
cdq
sub     eax, edx
sar     eax, 1
movsx   ecx, ds:word_4a9b0c
inc     ax
mov     ds:word_4a9b10, ax
lea     eax, [esi+esi*2]
add     eax, ecx
sub     eax, edi
pop     edi
dec     eax
pop     esi
cdq
sub     eax, edx
sar     eax, 1
lea     eax, [ebx+eax-1]
pop     ebx
mov     ds:dword_4a9b14, eax
retn
push    esi
call    ds:createmenu
mov     esi, [esp+4+arg_0]
mov     [esi], eax
call    sub_45c800
mov     [esi+4], eax
mov     eax, [esp+4+arg_4]
mov     [esi+8], eax
xor     eax, eax
mov     [esi+10h], eax
mov     [esi+0ch], eax
cmp     ds:word_4a9b0c, ax
jnz     short loc_47cf92
call    sub_47cee0
mov     eax, 1
pop     esi
retn
sub     esp, 120h
cmp     ds:dword_4a9b18, 0
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_47cfbd
call    sub_460d60
mov     ds:dword_4a9b18, eax
lea     eax, [esp+130h+var_118]
push    0
push    0
push    eax
call    sub_47cf60
add     esp, 0ch
mov     eax, ds:hwndparent
push    0
push    eax
xor     di, di
call    ds:getsystemmenu
push    eax
mov     esi, eax
call    ds:getmenuitemcount
mov     word ptr [esp+130h+var_11e+2], 7fffh
mov     [esp+130h+var_11a], ax
cmp     ax, di
jle     short loc_47d078
movsx   ebp, di
push    ebp
push    esi
call    ds:getmenuitemid
mov     word ptr [esp+130h+var_11e], ax
push    400h
push    ebp
push    esi
call    ds:getmenustate
mov     bx, ax
test    bh, 8
jz      short loc_47d039
mov     [esp+130h+string], 2dh
mov     [esp+130h+var_ff], 0
dec     word ptr [esp+130h+var_11e+2]
mov     ax, word ptr [esp+130h+var_11e+2]
mov     word ptr [esp+130h+var_11e], ax
jmp     short loc_47d050
lea     eax, [esp+130h+string]
push    400h
push    100h
push    eax
push    ebp
push    esi
call    ds:getmenustringa
inc     di
push    0
lea     eax, [esp+134h+string]
push    0
mov     ecx, [esp+138h+var_11e]
push    eax
lea     edx, [esp+13ch+var_118]
push    0
push    0ffffffffh
push    ecx
push    edx
call    sub_47d0b0
add     esp, 1ch
cmp     di, [esp+130h+var_11a]
jl      short loc_47cff9
lea     eax, [esp+130h+var_118]
mov     ecx, [esp+130h+arg_0]
push    eax
push    0
push    offset windowname
push    0
push    0ffffffffh
push    7fffh
push    ecx
call    sub_47d0b0
add     esp, 1ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 120h
retn
sub     esp, 4ch
push    ebx
push    esi
mov     esi, [esp+54h+arg_10]
push    edi
lea     eax, [esp+58h+string]
push    ebp
push    3ch
push    esi
push    eax
call    sub_47f9f0
lea     eax, [esp+68h+string]
add     esp, 0ch
push    eax
call    ds:lstrlena
mov     edi, [esp+5ch+arg_14]
test    edi, edi
jz      short loc_47d104
lea     ecx, [eax+5]
cmp     ecx, 3ch
jnb     short loc_47d104
inc     eax
mov     ecx, 3ch
sub     ecx, eax
mov     [esp+eax+5ch+var_3f], 9
lea     eax, [esp+eax+5ch+string]
push    ecx
push    eax
push    edi
push    1
call    sub_459010
add     esp, 10h
mov     bp, [esp+5ch+arg_c]
mov     [esp+5ch+var_4a], edi
mov     bx, [esp+5ch+arg_4]
mov     [esp+5ch+var_4c], bp
cmp     bx, 7fffh
jnz     short loc_47d125
call    sub_47d200
jmp     short loc_47d132
lea     eax, [esp+5ch+string]
push    eax
call    sub_47d440
add     esp, 4
mov     edi, [esp+5ch+arg_0]
push    4ah
lea     edx, [esp+60h+var_4c]
mov     ecx, [edi+10h]
add     eax, ecx
push    edx
mov     [esp+64h+var_46], ecx
push    ebx
mov     ecx, [edi+4]
mov     [edi+10h], eax
mov     [esp+26h], eax
push    ecx
call    sub_45ca00
add     esp, 10h
push    ebp
call    sub_47d470
add     esp, 4
mov     cl, [esi]
cmp     cl, 2dh
jz      short loc_47d175
cmp     cl, 28h
jnz     short loc_47d179
cmp     byte ptr [esi+1], 2dh
jnz     short loc_47d179
mov     ax, 800h
mov     esi, [esp+5ch+arg_18]
test    esi, esi
jz      short loc_47d187
or      al, 10h
mov     edx, [esi]
jmp     short loc_47d18a
movsx   edx, bx
cmp     bx, 7fffh
jnz     short loc_47d1a2
xor     eax, eax
mov     ecx, [edi]
mov     ax, word ptr ds:dword_4a9b18
push    eax
push    edx
push    14h
push    ecx
jmp     short loc_47d1af
movzx   eax, ax
lea     ecx, [esp+5ch+string]
push    ecx
push    edx
push    eax
mov     edx, [edi]
push    edx
mov     ebp, ds:appendmenua
call    ebp
test    esi, esi
jz      short loc_47d1f5
mov     ebp, [esi+4]
mov     eax, [ebp+0]
push    eax
call    sub_45c830
add     esp, 4
neg     bx
push    eax
push    ebp
push    ebx
mov     eax, [edi+4]
push    eax
call    sub_45cb00
add     esp, 10h
mov     ebp, [esi+4]
push    ebp
call    sub_45c820
add     esp, 4
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4ch
retn
sub     esp, 18h
mov     eax, ds:dword_4a9b18
test    eax, eax
jz      short loc_47d222
lea     ecx, [esp+18h+pv]
push    ecx
push    18h
push    eax
call    ds:getobjecta
mov     eax, [esp+18h+var_14]
add     esp, 18h
retn
xor     eax, eax
add     esp, 18h
retn
push    esi
mov     esi, [esp+4+hwnd]
cmp     esi, ds:hwndparent
jnz     short loc_47d255
push    1
call    sub_491a70
mov     eax, [esp+8+arg_0]
add     esp, 4
mov     ecx, [eax]
push    ecx
push    esi
call    ds:setmenu
pop     esi
retn
mov     ecx, ds:hwndparent
cmp     [esp+arg_4], ecx
jnz     short locret_47d275
push    0
push    ecx
call    ds:setmenu
retn
mov     eax, [esp+hwnd]
cmp     eax, ds:hwndparent
jnz     short locret_47d293
push    eax
call    ds:drawmenubar
retn
push    esi
push    edi
mov     di, [esp+8+arg_4]
mov     esi, [esp+8+arg_0]
push    edi
push    esi
call    sub_47ccd0
add     esp, 8
test    eax, eax
jl      short loc_47d2f2
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_47d2cc
push    400h
push    eax
push    ecx
call    ds:deletemenu
push    edi
mov     eax, [esi+4]
push    eax
call    sub_45cc50
add     esp, 8
mov     eax, [esi+4]
neg     di
push    edi
push    eax
call    sub_45cc50
add     esp, 8
push    esi
call    sub_47d320
add     esp, 4
pop     edi
pop     esi
retn
mov     eax, [esp+hwnd]
push    eax
call    ds:getmenu
retn
mov     eax, [esp+hmenu]
test    eax, eax
jz      short locret_47d31f
push    eax
call    ds:destroymenu
retn
mov     eax, [esp+arg_0]
lea     edx, [esp+arg_0]
sub     esp, 4
mov     dword ptr [eax+10h], 0
lea     ecx, [esp+4+var_4]
mov     eax, [esp+4+arg_0]
push    ecx
push    edx
push    offset loc_47d350
mov     ecx, [eax+4]
push    ecx
call    sub_45cca0
add     esp, 14h
retn
mov     eax, [esp+10h]
push    esi
push    edi
mov     edi, [eax]
mov     ax, [esp+0ch]
test    ax, ax
jle     short loc_47d38e
mov     esi, [esp+10h]
cmp     ax, 7fffh
mov     ecx, [edi+10h]
mov     [esi+6], ecx
jnz     short loc_47d379
call    sub_47d200
jmp     short loc_47d385
lea     eax, [esi+0eh]
push    eax
call    sub_47d440
add     esp, 4
add     [edi+10h], eax
mov     eax, [edi+10h]
mov     [esi+0ah], eax
mov     eax, 1
pop     edi
pop     esi
retn
sub     esp, 0d0h
push    ebx
push    esi
push    edi
push    ebp
call    ds:createpopupmenu
mov     edi, eax
test    edi, edi
jz      short loc_47d42b
mov     esi, [esp+0e0h+hmenu]
xor     ebx, ebx
push    esi
call    ds:getmenuitemcount
mov     [esp+0e0h+var_cc], eax
cmp     eax, ebx
jz      short loc_47d41e
push    ebx
push    esi
call    ds:getmenuitemid
cmp     eax, 0ffffffffh
mov     ebp, eax
jz      short loc_47d417
push    400h
push    ebx
push    esi
call    ds:getmenustate
mov     [esp+0e0h+uflags], eax
push    400h
lea     eax, [esp+0e4h+string]
push    0c8h
push    eax
push    ebx
push    esi
call    ds:getmenustringa
lea     eax, [esp+0e0h+string]
mov     ecx, [esp+0e0h+uflags]
push    eax
push    ebp
push    ecx
push    edi
call    ds:appendmenua
inc     ebx
cmp     ebx, [esp+0e0h+var_cc]
jb      short loc_47d3ce
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0d0h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0d0h
retn
push    esi
mov     esi, [esp+4+lpstring]
push    esi
call    ds:lstrlena
push    eax
push    esi
push    0eh
push    0
call    sub_4493b0
movsx   ecx, ds:word_4a9b10
add     esp, 10h
lea     eax, [eax+ecx*2]
pop     esi
retn
mov     cx, [esp+arg_0]
mov     ax, cx
and     ax, 2
cmp     ax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     ax, 8
and     cx, 1
cmp     cx, 1
mov     ecx, 0
adc     ecx, 0ffffffffh
and     cx, 3
or      ax, cx
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
mov     [esp+4+var_4], 0
push    ebx
push    esi
mov     ebx, [esp+0ch+arg_4]
push    edi
mov     edi, [esp+10h+arg_8]
push    ebp
test    ebx, ebx
lea     esi, [edi+ecx]
jz      short loc_47d4fe
lea     ebp, [ebx-2]
lea     eax, [ebx-1]
test    eax, eax
jz      short loc_47d4fe
push    esi
push    ecx
call    [esp+1ch+arg_c]
add     esp, 8
test    eax, eax
jg      short loc_47d4f6
mov     ecx, esi
mov     eax, ebp
add     esi, edi
dec     ebp
test    eax, eax
jnz     short loc_47d4dc
jmp     short loc_47d4fe
mov     [esp+14h+var_4], 1
cmp     [esp+14h+var_4], 0
jz      short loc_47d52a
mov     eax, [esp+14h+arg_c]
dec     ebx
mov     dword_4ae850, edi
mov     ds:dword_4a9b1c, eax
imul    edi, ebx
add     edi, [esp+14h+arg_0]
mov     eax, [esp+14h+arg_0]
push    edi
push    eax
call    sub_47d540
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
mov     eax, dword_4ae850
mov     ebx, [esp+4+arg_4]
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
lea     edi, [eax+ebx]
mov     ebp, esi
cmp     ebx, esi
jbe     loc_47d5fe
add     ebp, eax
cmp     ebx, ebp
jbe     short loc_47d578
push    esi
push    ebp
call    ds:dword_4a9b1c
add     esp, 8
test    eax, eax
mov     eax, dword_4ae850
jle     short loc_47d55e
sub     edi, eax
cmp     edi, esi
jbe     short loc_47d592
push    esi
push    edi
call    ds:dword_4a9b1c
add     esp, 8
test    eax, eax
mov     eax, dword_4ae850
jge     short loc_47d578
push    eax
cmp     edi, ebp
push    edi
jbe     short loc_47d5a8
push    ebp
call    sub_47d610
add     esp, 0ch
mov     eax, dword_4ae850
jmp     short loc_47d55e
push    esi
call    sub_47d610
add     esp, 0ch
mov     ecx, ebx
sub     ecx, edi
mov     eax, edi
sub     eax, esi
cmp     ecx, eax
mov     eax, dword_4ae850
jg      short loc_47d5db
push    ebx
add     eax, edi
push    eax
mov     ebx, edi
mov     ebp, esi
call    sub_47d540
add     esp, 8
mov     eax, dword_4ae850
sub     ebx, eax
jmp     short loc_47d5f6
mov     ecx, edi
sub     ecx, eax
push    ecx
push    esi
call    sub_47d540
add     esp, 8
mov     eax, dword_4ae850
lea     esi, [eax+edi]
lea     edi, [eax+ebx]
mov     ebp, esi
cmp     ebx, esi
ja      loc_47d55e
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_8]
mov     eax, esi
dec     esi
test    eax, eax
jz      short loc_47d636
mov     ecx, [esp+8+arg_0]
mov     edx, [esp+8+arg_4]
mov     al, [ecx]
mov     bl, [edx]
mov     [ecx], bl
inc     ecx
mov     [edx], al
inc     edx
mov     eax, esi
dec     esi
test    eax, eax
jnz     short loc_47d625
pop     esi
pop     ebx
retn
push    42h
push    58h
call    sub_45b8f0
add     esp, 8
test    eax, eax
jz      short locret_47d6ae
mov     edx, [eax]
mov     ecx, [esp+arg_4]
mov     [edx], ecx
mov     ecx, [esp+arg_8]
mov     [edx+4], ecx
mov     ecx, [esp+arg_c]
mov     [edx+8], ecx
mov     ecx, [esp+arg_10]
cmp     ecx, 1
jg      short loc_47d674
mov     ecx, 1
mov     [edx+0ch], ecx
mov     ecx, [esp+arg_0]
mov     [edx+34h], ecx
mov     ecx, [esp+arg_14]
mov     [edx+40h], ecx
mov     ecx, [esp+arg_18]
mov     [edx+44h], ecx
mov     ecx, 1
mov     [edx+48h], eax
mov     word ptr [edx+2ch], 0
mov     [edx+18h], ecx
mov     [edx+4ch], ecx
mov     ecx, [esp+arg_1c]
mov     [edx+50h], ecx
mov     ecx, [esp+arg_20]
mov     [edx+54h], ecx
retn
mov     eax, [esp+hmem]
push    eax
call    sub_45ba00
add     esp, 4
retn
push    esi
push    edi
mov     esi, [esp+8+hmem]
push    esi
call    sub_47ed20
mov     ecx, [esp+0ch+arg_4]
mov     edx, [esp+0ch+arg_8]
add     esp, 4
dec     ecx
mov     [eax+1ch], ecx
cmp     edx, 1
mov     ecx, edx
jg      short loc_47d6e7
mov     ecx, 1
mov     [eax+18h], ecx
mov     ecx, [esp+8+arg_c]
mov     [eax+20h], ecx
mov     ecx, [esp+8+arg_10]
cmp     ecx, 1
jg      short loc_47d6ff
mov     ecx, 1
mov     edi, [esp+8+arg_14]
mov     [eax+10h], ecx
cmp     ecx, edi
jg      short loc_47d70c
mov     ecx, edi
push    0
mov     [eax+14h], ecx
mov     ecx, [eax+1ch]
imul    ecx, edx
mov     [eax+28h], ecx
mov     edx, [eax+24h]
push    edx
push    eax
call    sub_47dd40
add     esp, 0ch
push    esi
call    sub_47ed40
add     esp, 4
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+hmem]
push    edi
call    sub_47ed20
add     esp, 4
mov     esi, [eax+18h]
test    esi, esi
jz      short loc_47d773
mov     ecx, [esp+8+arg_8]
push    ecx
mov     ecx, [esp+0ch+arg_4]
imul    ecx, esi
push    ecx
push    eax
call    sub_47dd40
cdq
idiv    esi
add     esp, 0ch
mov     esi, eax
jmp     short loc_47d775
xor     esi, esi
push    edi
call    sub_47ed40
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     eax, [eax]
mov     ecx, [eax+18h]
test    ecx, ecx
jz      short loc_47d7a4
mov     eax, [eax+24h]
cdq
idiv    ecx
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     ecx, [eax]
mov     eax, [esp+arg_8]
mov     [ecx], edx
mov     edx, [esp+arg_c]
mov     [ecx+4], eax
mov     eax, [esp+arg_10]
mov     [ecx+8], edx
cmp     eax, 1
jg      short loc_47d7d8
mov     eax, 1
mov     [ecx+0ch], eax
retn
push    ebx
push    esi
mov     esi, [esp+8+hmem]
push    edi
push    esi
call    sub_47ed20
mov     edi, [esp+10h+hdc]
add     esp, 4
mov     ebx, eax
push    edi
push    ebx
call    sub_47e620
add     esp, 8
cmp     dword ptr [ebx+4ch], 0
jz      short loc_47d81a
push    ebx
call    sub_47e8f0
add     esp, 4
push    eax
push    edi
push    ebx
call    sub_47ed80
add     esp, 0ch
push    edi
push    ebx
call    sub_47e830
add     esp, 8
push    esi
call    sub_47ed40
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+hmem]
sub     esp, 14h
mov     [esp+14h+var_14], 1
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_47ed20
mov     ecx, [esp+28h+pt.y]
lea     edx, [esp+28h+var_10]
add     esp, 4
mov     esi, eax
mov     eax, [esp+24h+pt.x]
push    ecx
push    eax
push    edx
push    esi
call    sub_47eb10
add     esp, 8
mov     ebp, ds:ptinrect
push    eax
call    ebp
mov     ebx, [esp+24h+pt.y]
test    eax, eax
jz      loc_47d9fe
cmp     word ptr [esi+2ch], 0
jnz     loc_47da06
mov     dword ptr [esi+2eh], 0
mov     word ptr [esi+32h], 0
cmp     dword ptr [esi+54h], 1
jnz     short loc_47d8c4
mov     eax, [esp+24h+pt.x]
push    ebx
lea     edx, [esp+28h+var_10]
push    eax
push    edx
push    esi
call    sub_47ea10
add     esp, 8
push    eax
call    ebp
test    eax, eax
jnz     short loc_47d908
cmp     dword ptr [esi+54h], 0
jnz     short loc_47d92d
mov     eax, [esp+24h+pt.x]
mov     ecx, [esp+24h+pt.y]
lea     edx, [esp+24h+var_10]
push    ecx
push    eax
push    edx
push    esi
call    sub_47eac0
add     esp, 8
push    eax
call    ebp
test    eax, eax
jnz     short loc_47d908
mov     eax, [esp+24h+pt.x]
mov     ecx, [esp+24h+pt.y]
lea     edx, [esp+24h+var_10]
push    ecx
push    eax
push    edx
push    esi
call    sub_47ea70
add     esp, 8
push    eax
call    ebp
test    eax, eax
jz      short loc_47d92d
mov     word ptr [esi+2ch], 1
push    esi
call    sub_47e470
add     esp, 4
mov     word ptr [esi+2ch], 0
push    1
push    esi
call    sub_47ec30
add     esp, 8
jmp     loc_47da06
mov     eax, [esp+24h+pt.x]
mov     ecx, [esp+24h+pt.y]
lea     edx, [esp+24h+var_10]
push    ecx
push    eax
push    edx
push    esi
call    sub_47e970
add     esp, 8
push    eax
call    ebp
test    eax, eax
jz      loc_47da06
push    esi
call    sub_47e8f0
mov     ecx, [esp+28h+pt.y]
lea     edx, [esp+28h+var_10]
add     esp, 4
mov     edi, eax
mov     eax, [esp+24h+pt.x]
push    ecx
push    eax
push    edx
push    edi
push    esi
call    sub_47e920
add     esp, 0ch
push    eax
call    ebp
test    eax, eax
jz      short loc_47d9a4
mov     word ptr [esi+2ch], 3
sub     ebx, [esp+24h+var_c]
push    esi
mov     [esi+38h], ebx
call    sub_47dfc0
add     esp, 4
mov     word ptr [esi+2ch], 0
push    1
push    esi
call    sub_47ec30
add     esp, 8
jmp     short loc_47da06
mov     word ptr [esi+2ch], 2
mov     eax, [esi+54h]
cmp     eax, 1
jnz     short loc_47d9c1
mov     eax, [esi+4]
add     eax, edi
cmp     eax, ebx
mov     ax, 1
jl      short loc_47d9de
jmp     short loc_47d9da
call    sub_4892f0
mov     eax, 0fh
mov     ecx, [esi+4]
add     ecx, edi
add     ecx, eax
mov     ax, 1
cmp     ecx, ebx
jl      short loc_47d9de
mov     ax, 2
mov     [esi+32h], ax
push    esi
call    sub_47dda0
add     esp, 4
mov     word ptr [esi+2ch], 0
push    1
push    esi
call    sub_47ec30
add     esp, 8
jmp     short loc_47da06
mov     [esp+24h+var_14], 0
mov     eax, [esp+24h+hmem]
push    eax
call    sub_47ed40
mov     eax, [esp+28h+var_14]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, [esp+arg_0]
mov     edx, [eax]
mov     eax, [esp+arg_4]
mov     ecx, [edx]
mov     [eax], ecx
mov     ecx, [edx+4]
mov     [eax+4], ecx
mov     ecx, [edx+8]
add     ecx, [edx]
mov     [eax+8], ecx
mov     ecx, [edx+0ch]
add     ecx, [edx+4]
mov     [eax+0ch], ecx
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     ecx, [eax]
mov     [ecx+4ch], edx
retn
sub     esp, 8
push    ebx
push    esi
mov     si, 1
push    edi
mov     ebx, [esp+14h+arg_0]
push    ebp
cmp     dword ptr [ebx+54h], 1
jz      short loc_47da85
mov     esi, 7
call    sub_4892f0
cmp     eax, 1
adc     esi, 0ffffffffh
mov     di, [esp+18h+arg_c]
movsx   eax, di
cmp     eax, 5
ja      def_47da96
jmp     ds:jpt_47da96[eax*4]
cmp     dword ptr [ebx+54h], 1
mov     ebp, 9
jz      short loc_47dab2
mov     ebp, 0fh
call    sub_4892f0
mov     eax, [esp+18h+arg_8]
push    3
mov     ecx, [ebx+54h]
mov     edi, [eax+4]
mov     edx, [eax]
dec     ecx
cmp     ecx, 1
sbb     ecx, ecx
neg     ecx
lea     ebx, [ecx+ebp*2]
mov     ecx, [eax+0ch]
push    ebx
sub     ecx, edi
push    0eh
mov     eax, [eax+8]
push    0
sub     eax, edx
push    0
push    ecx
mov     ecx, [esp+30h+hdc]
push    eax
push    edi
push    edx
push    esi
push    ecx
call    sub_4801e0
add     esp, 2ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     dword ptr [ebx+54h], 1
mov     ecx, 7
jz      short loc_47db11
call    sub_4892f0
cmp     eax, 1
sbb     ecx, ecx
and     ecx, 0ah
add     ecx, 6
mov     eax, [esp+18h+arg_8]
push    3
sub     ecx, 2
mov     edx, [eax+4]
mov     edi, [eax]
push    ecx
push    0ch
mov     ecx, [ebx+54h]
dec     ecx
cmp     ecx, 1
sbb     ecx, ecx
and     ecx, 0ffffffebh
add     ecx, 3dh
inc     ecx
push    ecx
push    1
mov     ecx, [eax+0ch]
mov     eax, [eax+8]
sub     ecx, edx
sub     eax, edi
sub     ecx, 2
sub     eax, 2
push    ecx
inc     edx
push    eax
inc     edi
mov     eax, [esp+34h+hdc]
push    edx
push    edi
push    esi
push    eax
call    sub_4801e0
add     esp, 2ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     dword ptr [ebx+54h], 1
jnz     short loc_47db71
mov     [esp+18h+hsrc], 9
jmp     short loc_47db7e
call    sub_4892f0
mov     [esp+18h+hsrc], 0fh
cmp     di, 2
mov     ebp, 0
jz      short loc_47db98
mov     eax, [ebx+54h]
dec     eax
cmp     eax, 1
sbb     ebp, ebp
and     ebp, 0fffffff5h
add     ebp, 1fh
cmp     dword ptr [ebx+54h], 1
jnz     short loc_47dba8
mov     [esp+18h+var_8], 9
jmp     short loc_47dbb5
call    sub_4892f0
mov     [esp+18h+var_8], 0fh
cmp     dword ptr [ebx+54h], 1
mov     edi, 9
jz      short loc_47dbca
mov     edi, 0fh
call    sub_4892f0
mov     eax, [ebx+54h]
cmp     eax, 1
jnz     short loc_47dbed
mov     ecx, 9
mov     eax, [ebx+54h]
dec     eax
cmp     eax, 1
mov     eax, [esp+18h+arg_8]
sbb     edx, edx
neg     edx
add     edx, [eax+4]
add     edx, ecx
jmp     short loc_47dbf4
mov     eax, [esp+18h+arg_8]
mov     edx, [eax+4]
mov     ecx, [esp+18h+hsrc]
push    3
push    ecx
push    0eh
mov     ecx, [ebx+54h]
dec     ecx
cmp     ecx, 1
sbb     ecx, ecx
neg     ecx
add     ecx, ebp
add     ecx, [esp+24h+var_8]
push    ecx
push    0
push    edi
mov     ecx, [eax+8]
sub     ecx, [eax]
mov     eax, [eax]
push    ecx
push    edx
mov     edx, [esp+38h+hdc]
push    eax
push    esi
push    edx
call    sub_4801e0
add     esp, 2ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     dword ptr [ebx+54h], 1
mov     ebp, 9
jz      short loc_47dc47
mov     ebp, 0fh
call    sub_4892f0
cmp     di, 4
mov     edi, 0
jz      short loc_47dc61
mov     eax, [ebx+54h]
dec     eax
cmp     eax, 1
sbb     edi, edi
and     edi, 0fffffff5h
add     edi, 1fh
cmp     dword ptr [ebx+54h], 1
mov     ecx, 9
jz      short loc_47dc76
call    sub_4892f0
mov     ecx, 0fh
mov     eax, [esp+18h+arg_8]
push    3
push    ebp
push    0eh
mov     edx, [eax]
push    edi
push    0
push    ecx
mov     ecx, [eax+8]
mov     eax, [eax+4]
sub     ecx, edx
push    ecx
push    eax
push    edx
push    esi
mov     edx, [esp+40h+hdc]
push    edx
call    sub_4801e0
add     esp, 2ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 1ch
push    esi
push    1
call    ds:getkeystate
test    ah, 80h
jz      short loc_47dd1a
lea     eax, [esp+20h+msg]
push    2
push    203h
mov     esi, ds:peekmessagea
push    201h
push    0
push    eax
call    esi
test    eax, eax
jnz     short loc_47dd13
lea     eax, [esp+20h+msg]
push    2
push    0a3h
push    0a1h
push    0
push    eax
call    esi
test    eax, eax
jnz     short loc_47dd13
mov     eax, 1
pop     esi
add     esp, 1ch
retn
xor     eax, eax
pop     esi
add     esp, 1ch
retn
xor     eax, eax
pop     esi
add     esp, 1ch
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     ecx, [eax]
mov     [ecx+34h], edx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
push    esi
mov     edi, [esi+24h]
call    sub_47e8f0
mov     ecx, [esp+14h+arg_4]
add     esp, 4
mov     ebx, eax
mov     eax, [esi+28h]
cmp     eax, ecx
jl      short loc_47dd63
mov     eax, ecx
test    eax, eax
jg      short loc_47dd69
xor     eax, eax
mov     ebp, [esp+10h+arg_8]
mov     [esi+24h], eax
test    ebp, ebp
jz      short loc_47dd88
push    esi
call    sub_47e8f0
add     esp, 4
push    eax
push    ebx
push    esi
call    sub_47e550
add     esp, 0ch
push    ebp
push    esi
call    sub_47ec30
add     esp, 8
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 18h
push    esi
push    edi
mov     edi, [esp+20h+arg_0]
mov     esi, ds:gettickcount
call    esi
cmp     eax, [edi+2eh]
jle     loc_47de53
cmp     dword ptr [edi+2eh], 0
jnz     short loc_47ddca
call    esi
add     eax, 0c8h
mov     [edi+2eh], eax
lea     eax, [esp+20h+point]
push    eax
push    edi
call    sub_47ec00
lea     eax, [esp+28h+var_10]
add     esp, 8
push    eax
push    edi
call    sub_47e8f0
add     esp, 4
push    eax
push    edi
call    sub_47e920
mov     ax, [edi+32h]
add     esp, 0ch
cmp     ax, 1
jnz     short loc_47de1f
mov     ecx, [esp+20h+var_4]
cmp     [esp+20h+point.y], ecx
jl      short loc_47de1f
mov     ecx, [edi+24h]
mov     eax, [edi+18h]
imul    eax, [edi+20h]
add     eax, ecx
mov     edx, [edi+28h]
cmp     eax, edx
jl      short loc_47de19
mov     eax, edx
cmp     eax, ecx
jz      short loc_47de53
jmp     short loc_47de47
cmp     ax, 2
jnz     short loc_47de53
mov     eax, [esp+20h+var_c]
cmp     [esp+20h+point.y], eax
jge     short loc_47de53
mov     ecx, [edi+24h]
mov     edx, [edi+18h]
imul    edx, [edi+20h]
mov     eax, ecx
sub     eax, edx
test    eax, eax
jg      short loc_47de43
xor     eax, eax
cmp     eax, ecx
jz      short loc_47de53
push    1
push    eax
push    edi
call    sub_47dd40
add     esp, 0ch
call    sub_47ebe0
call    sub_47dcc0
test    eax, eax
jnz     loc_47ddaf
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 8
push    esi
push    edi
call    sub_47dcc0
mov     esi, [esp+10h+arg_0]
test    eax, eax
jz      loc_47df0b
call    sub_47ebe0
lea     eax, [esp+10h+point]
push    eax
push    esi
call    sub_47ec00
add     esp, 8
mov     eax, 9
cmp     dword ptr [esi+54h], 1
jz      short loc_47deae
call    sub_4892f0
mov     eax, 0fh
mov     edi, [esp+10h+point.y]
push    esi
sub     edi, [esi+4]
sub     edi, [esi+38h]
sub     edi, eax
call    sub_47e860
add     esp, 4
cmp     eax, edi
jl      short loc_47dec9
mov     eax, edi
mov     ecx, 0
test    eax, eax
jl      short loc_47ded4
mov     ecx, eax
push    ecx
push    esi
call    sub_47eb40
add     esp, 8
mov     ecx, [esi+28h]
cmp     ecx, eax
jl      short loc_47dee7
mov     ecx, eax
test    ecx, ecx
jg      short loc_47deed
xor     ecx, ecx
cmp     [esi+24h], ecx
jz      short loc_47defe
push    1
push    ecx
push    esi
call    sub_47dd40
add     esp, 0ch
call    sub_47dcc0
test    eax, eax
jnz     loc_47de86
push    esi
call    sub_47dfe0
add     esp, 4
pop     edi
pop     esi
add     esp, 8
retn
sub     esp, 8
push    esi
push    edi
call    sub_47dcc0
mov     esi, [esp+10h+arg_0]
test    eax, eax
jz      short loc_47dfa9
call    sub_47ebe0
lea     eax, [esp+10h+point]
push    eax
push    esi
call    sub_47ec00
mov     edi, [esp+18h+point.y]
add     esp, 8
mov     eax, [esi+54h]
push    esi
dec     eax
cmp     eax, 1
sbb     eax, eax
neg     eax
sub     edi, eax
sub     edi, [esi+4]
sub     edi, [esi+38h]
call    sub_47e860
add     esp, 4
cmp     eax, edi
jl      short loc_47df6b
mov     eax, edi
mov     ecx, 0
test    eax, eax
jl      short loc_47df76
mov     ecx, eax
push    ecx
push    esi
call    sub_47eb40
add     esp, 8
mov     ecx, [esi+28h]
cmp     ecx, eax
jl      short loc_47df89
mov     ecx, eax
test    ecx, ecx
jg      short loc_47df8f
xor     ecx, ecx
cmp     [esi+24h], ecx
jz      short loc_47dfa0
push    1
push    ecx
push    esi
call    sub_47dd40
add     esp, 0ch
call    sub_47dcc0
test    eax, eax
jnz     short loc_47df32
push    esi
call    sub_47dfe0
add     esp, 4
pop     edi
pop     esi
add     esp, 8
retn
mov     eax, [esp+arg_0]
push    eax
cmp     dword ptr [eax+54h], 1
jnz     short loc_47dfd4
call    sub_47df20
add     esp, 4
retn
call    sub_47de70
add     esp, 4
retn
mov     ecx, [esp+arg_0]
push    esi
push    edi
mov     edi, [ecx+18h]
test    edi, edi
jz      short loc_47e002
mov     eax, edi
cdq
sub     eax, edx
sar     eax, 1
add     eax, [ecx+24h]
cdq
idiv    edi
imul    eax, edi
mov     esi, eax
jmp     short loc_47e004
xor     esi, esi
mov     eax, 0
test    edi, edi
jz      short loc_47e016
mov     eax, [ecx+28h]
cdq
idiv    edi
imul    eax, edi
cmp     eax, esi
jl      short loc_47e01c
mov     eax, esi
test    eax, eax
jg      short loc_47e022
xor     eax, eax
cmp     [ecx+24h], eax
jz      short loc_47e03c
test    eax, eax
jl      short loc_47e03c
cmp     [ecx+28h], eax
jl      short loc_47e03c
push    1
push    eax
push    ecx
call    sub_47dd40
add     esp, 0ch
pop     edi
pop     esi
retn
sub     esp, 2ch
lea     eax, [esp+2ch+rc]
push    ebx
push    esi
push    edi
mov     esi, [esp+38h+arg_0]
push    ebp
push    eax
push    esi
call    sub_47eac0
lea     ecx, [esp+44h+var_20]
add     esp, 8
push    ecx
push    esi
call    sub_47ea70
add     esp, 8
mov     edi, ds:ptinrect
call    ds:gettickcount
cmp     eax, [esi+2eh]
jle     loc_47e1d2
cmp     dword ptr [esi+2eh], 0
jnz     short loc_47e090
call    ds:gettickcount
add     eax, 0c8h
mov     [esi+2eh], eax
mov     bx, 1
lea     eax, [esp+3ch+pt]
push    eax
push    esi
call    sub_47ec00
mov     eax, [esp+44h+pt.x]
mov     ecx, [esp+44h+pt.y]
lea     edx, [esp+44h+rc]
add     esp, 8
mov     dword ptr [esi+3ch], 1
push    ecx
push    eax
push    edx
call    edi
test    eax, eax
jnz     short loc_47e0de
mov     eax, [esp+3ch+pt.x]
mov     ecx, [esp+3ch+pt.y]
lea     edx, [esp+3ch+var_20]
push    ecx
push    eax
mov     ebx, 0
push    edx
call    edi
cmp     eax, 1
adc     ebx, 0ffffffffh
and     bx, 2
cmp     dword ptr [esi+34h], 0
jz      loc_47e181
lea     eax, [esp+3ch+var_2c]
push    eax
push    esi
call    sub_47eca0
add     esp, 8
mov     ebp, eax
mov     ax, [esi+32h]
sub     ax, 2
cmp     ax, 1
lea     eax, [ebx-2]
sbb     ecx, ecx
neg     ecx
cmp     ax, 1
sbb     eax, eax
neg     eax
cmp     ecx, eax
jz      short loc_47e136
lea     eax, [ebx-2]
lea     ecx, [esp+3ch+var_20]
cmp     ax, 1
mov     eax, 5
adc     eax, 0ffffffffh
push    eax
push    ecx
push    ebp
push    esi
call    sub_47da60
add     esp, 10h
mov     ax, [esi+32h]
dec     ax
cmp     ax, 1
lea     eax, [ebx-1]
sbb     ecx, ecx
neg     ecx
cmp     ax, 1
sbb     eax, eax
neg     eax
cmp     ecx, eax
jz      short loc_47e172
lea     eax, [ebx-1]
lea     ecx, [esp+3ch+rc]
cmp     ax, 1
mov     eax, 3
adc     eax, 0ffffffffh
push    eax
push    ecx
push    ebp
push    esi
call    sub_47da60
add     esp, 10h
lea     eax, [esp+3ch+var_2c]
push    eax
push    ebp
push    esi
call    sub_47ecf0
add     esp, 0ch
mov     [esi+32h], bx
cmp     bx, 1
jnz     short loc_47e19d
lea     ebx, [esi+24h]
push    esi
call    sub_47eb70
add     esp, 4
mov     ebp, [ebx]
add     ebp, eax
jmp     short loc_47e1b3
cmp     bx, 2
lea     ebx, [esi+24h]
mov     ebp, [ebx]
jnz     short loc_47e1b3
push    esi
call    sub_47eb70
add     esp, 4
sub     ebp, eax
mov     eax, [esi+28h]
cmp     eax, ebp
jl      short loc_47e1bc
mov     eax, ebp
test    eax, eax
jg      short loc_47e1c2
xor     eax, eax
cmp     [ebx], eax
jz      short loc_47e1d2
push    1
push    eax
push    esi
call    sub_47dd40
add     esp, 0ch
call    sub_47ebe0
call    sub_47dcc0
test    eax, eax
jnz     loc_47e06d
cmp     dword ptr [esi+34h], 0
jz      short loc_47e239
lea     eax, [esp+3ch+var_2c]
push    eax
push    esi
call    sub_47eca0
add     esp, 8
mov     edi, eax
cmp     word ptr [esi+32h], 1
jnz     short loc_47e212
lea     eax, [esp+3ch+rc]
push    2
push    eax
push    edi
push    esi
call    sub_47da60
add     esp, 10h
cmp     word ptr [esi+32h], 2
jnz     short loc_47e22a
lea     eax, [esp+3ch+var_20]
push    4
push    eax
push    edi
push    esi
call    sub_47da60
add     esp, 10h
lea     eax, [esp+3ch+var_2c]
push    eax
push    edi
push    esi
call    sub_47ecf0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
sub     esp, 1ch
lea     eax, [esp+1ch+var_10]
push    ebx
push    esi
push    edi
mov     esi, [esp+28h+arg_0]
push    ebp
push    eax
push    esi
call    sub_47ea10
add     esp, 8
mov     edi, ds:gettickcount
call    edi
cmp     eax, [esi+2eh]
jle     loc_47e3f7
cmp     dword ptr [esi+2eh], 0
jnz     short loc_47e28a
call    edi
add     eax, 0c8h
mov     [esi+2eh], eax
lea     eax, [esp+2ch+point]
push    eax
push    esi
call    sub_47ec00
mov     ecx, [esp+34h+point.y]
mov     eax, [esp+34h+var_c]
add     eax, [esp+34h+var_4]
add     esp, 8
cdq
sub     eax, edx
sar     eax, 1
sub     ecx, eax
mov     [esi+3ch], ecx
jns     short loc_47e2b7
mov     bx, 2
jmp     short loc_47e2c2
mov     bx, 1
test    ecx, ecx
jg      short loc_47e2c2
xor     bx, bx
cmp     dword ptr [esi+54h], 1
mov     ecx, 9
jz      short loc_47e2d7
call    sub_4892f0
mov     ecx, 0fh
mov     eax, [esi+3ch]
cdq
xor     eax, edx
sub     eax, edx
cmp     eax, ecx
jg      short loc_47e2e8
mov     [esi+3ch], eax
jmp     short loc_47e303
cmp     dword ptr [esi+54h], 1
jnz     short loc_47e2f7
mov     dword ptr [esi+3ch], 9
jmp     short loc_47e303
call    sub_4892f0
mov     dword ptr [esi+3ch], 0fh
cmp     dword ptr [esi+34h], 0
jz      loc_47e3a6
lea     eax, [esp+2ch+var_1c]
push    eax
push    esi
call    sub_47eca0
add     esp, 8
mov     ebp, eax
mov     ax, [esi+32h]
sub     ax, 2
cmp     ax, 1
lea     eax, [ebx-2]
sbb     ecx, ecx
neg     ecx
cmp     ax, 1
sbb     eax, eax
neg     eax
cmp     ecx, eax
jz      short loc_47e35b
lea     eax, [ebx-2]
lea     ecx, [esp+2ch+var_10]
cmp     ax, 1
mov     eax, 5
adc     eax, 0ffffffffh
push    eax
push    ecx
push    ebp
push    esi
call    sub_47da60
add     esp, 10h
mov     ax, [esi+32h]
dec     ax
cmp     ax, 1
lea     eax, [ebx-1]
sbb     ecx, ecx
neg     ecx
cmp     ax, 1
sbb     eax, eax
neg     eax
cmp     ecx, eax
jz      short loc_47e397
lea     eax, [ebx-1]
lea     ecx, [esp+2ch+var_10]
cmp     ax, 1
mov     eax, 3
adc     eax, 0ffffffffh
push    eax
push    ecx
push    ebp
push    esi
call    sub_47da60
add     esp, 10h
lea     eax, [esp+2ch+var_1c]
push    eax
push    ebp
push    esi
call    sub_47ecf0
add     esp, 0ch
mov     [esi+32h], bx
cmp     bx, 1
jnz     short loc_47e3c2
lea     ebx, [esi+24h]
push    esi
call    sub_47eb70
add     esp, 4
mov     ebp, [ebx]
add     ebp, eax
jmp     short loc_47e3d8
cmp     bx, 2
lea     ebx, [esi+24h]
mov     ebp, [ebx]
jnz     short loc_47e3d8
push    esi
call    sub_47eb70
add     esp, 4
sub     ebp, eax
mov     eax, [esi+28h]
cmp     eax, ebp
jl      short loc_47e3e1
mov     eax, ebp
test    eax, eax
jg      short loc_47e3e7
xor     eax, eax
cmp     [ebx], eax
jz      short loc_47e3f7
push    1
push    eax
push    esi
call    sub_47dd40
add     esp, 0ch
call    sub_47ebe0
call    sub_47dcc0
test    eax, eax
jnz     loc_47e26f
cmp     dword ptr [esi+34h], 0
jz      short loc_47e45e
lea     eax, [esp+2ch+var_1c]
push    eax
push    esi
call    sub_47eca0
add     esp, 8
mov     edi, eax
cmp     word ptr [esi+32h], 1
jnz     short loc_47e437
lea     eax, [esp+2ch+var_10]
push    2
push    eax
push    edi
push    esi
call    sub_47da60
add     esp, 10h
cmp     word ptr [esi+32h], 2
jnz     short loc_47e44f
lea     eax, [esp+2ch+var_10]
push    4
push    eax
push    edi
push    esi
call    sub_47da60
add     esp, 10h
lea     eax, [esp+2ch+var_1c]
push    eax
push    edi
push    esi
call    sub_47ecf0
add     esp, 0ch
push    esi
call    sub_47e490
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, [esp+arg_0]
push    eax
cmp     dword ptr [eax+54h], 1
jnz     short loc_47e484
call    sub_47e250
add     esp, 4
retn
call    sub_47e040
add     esp, 4
retn
push    ebx
mov     eax, 0
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
cmp     word ptr [esi+32h], 1
jnz     short loc_47e4a7
mov     eax, [esi+18h]
dec     eax
mov     ecx, [esi+24h]
mov     edi, [esi+18h]
add     eax, ecx
test    edi, edi
jz      short loc_47e4bb
cdq
idiv    edi
imul    eax, edi
jmp     short loc_47e4bd
xor     eax, eax
mov     edi, [esi+28h]
cmp     edi, eax
jl      short loc_47e4c6
mov     edi, eax
test    edi, edi
jg      short loc_47e4cc
xor     edi, edi
mov     eax, [esi+3ch]
cmp     eax, 1
jg      short loc_47e4d9
mov     eax, 1
mov     [esi+3ch], eax
cmp     edi, ecx
jz      short loc_47e53e
mov     ebx, [esi+24h]
push    esi
cmp     edi, ebx
jge     short loc_47e50a
call    sub_47eb70
add     esp, 4
sub     ebx, eax
cmp     ebx, edi
jge     short loc_47e4fa
mov     ebx, edi
jmp     short loc_47e528
mov     ebx, [esi+24h]
push    esi
call    sub_47eb70
add     esp, 4
sub     ebx, eax
jmp     short loc_47e528
call    sub_47eb70
add     esp, 4
add     eax, ebx
mov     ebx, edi
cmp     eax, edi
jg      short loc_47e528
push    esi
call    sub_47eb70
add     esp, 4
mov     ebx, [esi+24h]
add     ebx, eax
cmp     [esi+24h], ebx
jz      short loc_47e539
push    1
push    ebx
push    esi
call    sub_47dd40
add     esp, 0ch
cmp     [esi+24h], edi
jnz     short loc_47e4e0
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
sub     esp, 34h
lea     ecx, [esp+34h+rcscroll]
push    ebx
mov     ebx, [esp+38h+arg_8]
push    esi
mov     esi, [esp+3ch+arg_0]
push    edi
mov     edi, ebx
push    ecx
sub     edi, eax
push    eax
push    esi
call    sub_47e920
lea     ecx, [esp+4ch+var_30]
add     esp, 0ch
push    ecx
push    ebx
push    esi
call    sub_47e920
lea     edx, [esp+4ch+rcscroll]
lea     ecx, [esp+4ch+var_10]
add     esp, 0ch
mov     eax, [edx]
mov     ebx, [edx+4]
mov     [ecx], eax
mov     eax, [edx+8]
mov     [ecx+4], ebx
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
test    edi, edi
jle     short loc_47e5b8
mov     eax, [esp+40h+var_24]
mov     ecx, [esp+40h+var_2c]
mov     [esp+40h+rcscroll.bottom], eax
mov     [esp+40h+var_4], ecx
jmp     short loc_47e5c8
mov     eax, [esp+40h+var_2c]
mov     ecx, [esp+40h+var_24]
mov     [esp+40h+rcscroll.top], eax
mov     [esp+40h+var_c], ecx
cmp     dword ptr [esi+34h], 0
jz      short loc_47e60b
lea     eax, [esp+40h+var_34]
push    eax
push    esi
call    sub_47eca0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_47e60b
lea     eax, [esp+40h+var_30]
lea     ecx, [esp+40h+var_10]
lea     edx, [esp+40h+rcscroll]
push    eax
push    ecx
push    edx
push    edi
push    ebx
push    esi
call    sub_47ee60
lea     ecx, [esp+58h+var_34]
add     esp, 18h
push    ecx
push    ebx
push    esi
call    sub_47ecf0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn
mov     eax, [esp+arg_0]
sub     esp, 18h
push    ebx
mov     ecx, [eax+8]
push    esi
push    edi
push    ebp
mov     esi, [eax]
mov     ebp, [eax+4]
add     ecx, esi
mov     eax, [eax+0ch]
push    0
add     eax, ebp
mov     [esp+2ch+right], ecx
mov     [esp+2ch+bottom], eax
call    ds:getstockobject
mov     edi, [esp+28h+hdc]
push    eax
push    edi
call    ds:selectobject
mov     [esp+28h+h], eax
push    6
call    ds:getsyscolor
push    eax
push    1
push    0
call    ds:createpen
push    eax
mov     ebx, eax
push    edi
call    ds:selectobject
mov     ecx, [esp+28h+right]
mov     [esp+28h+var_18], eax
mov     eax, [esp+28h+bottom]
push    eax
push    ecx
push    ebp
push    esi
push    edi
mov     ebp, ds:rectangle
call    ebp
mov     ecx, [esp+28h+h]
push    ecx
push    edi
call    ds:selectobject
mov     eax, [esp+28h+var_18]
push    eax
push    edi
call    ds:selectobject
push    ebx
call    ds:deleteobject
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 20h
lea     eax, [esp+20h+var_20]
push    esi
mov     esi, [esp+24h+arg_0]
push    edi
push    eax
push    esi
call    sub_47ea70
lea     ecx, [esp+30h+var_10]
add     esp, 8
push    ecx
push    esi
call    sub_47eac0
lea     eax, [esp+30h+var_20]
mov     edi, [esp+30h+hdc]
add     esp, 8
push    4
push    eax
push    edi
push    esi
call    sub_47da60
lea     ecx, [esp+38h+var_10]
add     esp, 10h
push    2
push    ecx
push    edi
push    esi
call    sub_47da60
add     esp, 10h
cmp     word ptr [esi+2ch], 1
jnz     short loc_47e74a
mov     ax, [esi+32h]
cmp     ax, 1
jnz     short loc_47e733
lea     eax, [esp+28h+var_10]
push    3
push    eax
push    edi
push    esi
call    sub_47da60
add     esp, 10h
pop     edi
pop     esi
add     esp, 20h
retn
cmp     ax, 2
jnz     short loc_47e74a
lea     eax, [esp+28h+var_20]
push    5
push    eax
push    edi
push    esi
call    sub_47da60
add     esp, 10h
pop     edi
pop     esi
add     esp, 20h
retn
sub     esp, 14h
lea     eax, [esp+14h+x]
push    ebx
push    esi
push    edi
mov     esi, [esp+20h+arg_0]
push    ebp
push    eax
push    esi
call    sub_47ea10
mov     ebx, [esp+2ch+var_c]
add     esp, 8
mov     eax, [esi+54h]
push    0
dec     eax
cmp     eax, 1
mov     edi, [esp+28h+hdc]
sbb     eax, eax
mov     ebp, ds:movetoex
neg     eax
sub     ebx, eax
mov     eax, [esp+28h+x]
push    ebx
push    eax
push    edi
call    ebp
push    6
call    ds:getsyscolor
push    eax
push    1
push    0
call    ds:createpen
push    eax
mov     ebp, eax
push    edi
call    ds:selectobject
mov     [esp+24h+h], eax
push    ebx
mov     eax, [esp+28h+var_8]
push    eax
push    edi
call    ds:lineto
mov     ecx, [esp+24h+h]
push    ecx
push    edi
call    ds:selectobject
push    ebp
call    ds:deleteobject
lea     eax, [esp+24h+x]
push    0
push    eax
push    edi
push    esi
call    sub_47da60
add     esp, 10h
cmp     word ptr [esi+2ch], 1
jnz     short loc_47e822
mov     ax, [esi+32h]
cmp     ax, 1
jnz     short loc_47e80b
lea     eax, [esp+24h+x]
push    3
push    eax
push    edi
push    esi
call    sub_47da60
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
cmp     ax, 2
jnz     short loc_47e822
lea     eax, [esp+24h+x]
push    5
push    eax
push    edi
push    esi
call    sub_47da60
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+hdc]
push    ecx
push    eax
cmp     dword ptr [eax+54h], 1
jnz     short loc_47e849
call    sub_47e750
add     esp, 8
retn
call    sub_47e6c0
add     esp, 8
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     eax, [edi+54h]
cmp     eax, 1
jnz     short loc_47e8a2
mov     esi, 7
mov     edx, 9
cmp     dword ptr [edi+54h], 1
jz      short loc_47e888
call    sub_4892f0
mov     edx, 0fh
mov     eax, [edi+0ch]
mov     ecx, [edi+54h]
dec     ecx
cmp     ecx, 1
pop     edi
sbb     ecx, ecx
neg     ecx
lea     ecx, [edx+ecx*2]
add     ecx, ecx
sub     eax, ecx
sub     eax, esi
pop     esi
retn
call    sub_4892f0
mov     edx, 9
cmp     eax, 1
sbb     esi, esi
and     esi, 0ah
add     esi, 6
cmp     dword ptr [edi+54h], 1
jz      short loc_47e8c7
call    sub_4892f0
mov     edx, 0fh
mov     eax, [edi+0ch]
mov     ecx, [edi+54h]
dec     ecx
cmp     ecx, 1
sbb     ecx, ecx
add     edx, edx
neg     ecx
sub     eax, ecx
pop     edi
sub     eax, edx
sub     eax, esi
pop     esi
dec     eax
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, [edi+28h]
test    esi, esi
jz      short loc_47e910
push    edi
call    sub_47e860
imul    eax, [edi+24h]
cdq
add     esp, 4
idiv    esi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_8]
mov     esi, [esp+8+arg_0]
push    edi
push    esi
call    sub_47e970
mov     eax, [esp+10h+arg_4]
add     esp, 8
add     [edi+4], eax
mov     eax, 7
cmp     dword ptr [esi+54h], 1
jz      short loc_47e956
call    sub_4892f0
cmp     eax, 1
sbb     eax, eax
and     eax, 0ah
add     eax, 6
mov     ecx, [edi+4]
add     ecx, eax
mov     [edi+0ch], ecx
mov     eax, [esi+4]
add     eax, [esi+0ch]
cmp     eax, ecx
jge     short loc_47e96b
mov     [edi+0ch], eax
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
cmp     dword ptr [edi+54h], 1
mov     eax, [edi]
jnz     short loc_47e99e
inc     eax
mov     esi, [esp+8+arg_4]
mov     [esi], eax
mov     eax, [edi+4]
inc     eax
mov     [esi+4], eax
mov     eax, [edi+8]
add     eax, [edi]
dec     eax
mov     [esi+8], eax
mov     eax, [edi+0ch]
add     eax, [edi+4]
inc     eax
jmp     short loc_47e9ba
inc     eax
mov     esi, [esp+8+arg_4]
mov     [esi], eax
mov     ecx, [edi+4]
mov     [esi+4], ecx
mov     eax, [edi+8]
add     eax, [edi]
dec     eax
mov     [esi+8], eax
mov     eax, [edi+0ch]
add     eax, [edi+4]
mov     [esi+0ch], eax
mov     eax, [edi+54h]
cmp     eax, 1
jnz     short loc_47e9e1
mov     ecx, 9
mov     eax, [edi+54h]
dec     eax
cmp     eax, 1
pop     edi
sbb     eax, eax
neg     eax
add     eax, ecx
add     eax, eax
sub     [esi+0ch], eax
mov     eax, esi
pop     esi
retn
call    sub_4892f0
sub     dword ptr [esi+0ch], 0fh
cmp     dword ptr [edi+54h], 1
jnz     short loc_47e9f9
mov     eax, esi
pop     edi
add     dword ptr [esi+4], 9
pop     esi
retn
call    sub_4892f0
mov     eax, esi
pop     edi
add     dword ptr [esi+4], 0fh
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, [esp+8+arg_4]
mov     eax, [edi]
inc     eax
mov     [esi], eax
mov     eax, [edi+4]
inc     eax
mov     [esi+4], eax
mov     eax, [edi+8]
add     eax, [edi]
dec     eax
mov     ecx, 9
mov     [esi+8], eax
mov     eax, [edi+0ch]
add     eax, [edi+4]
dec     eax
mov     [esi+0ch], eax
cmp     dword ptr [edi+54h], 1
jz      short loc_47ea4e
call    sub_4892f0
mov     ecx, 0fh
mov     edx, [esi+0ch]
mov     eax, [edi+54h]
dec     eax
cmp     eax, 1
sbb     eax, eax
add     ecx, ecx
neg     eax
sub     edx, eax
pop     edi
sub     edx, ecx
mov     eax, esi
mov     [esi+4], edx
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, [esp+8+arg_4]
mov     eax, [edi]
inc     eax
mov     [esi], eax
mov     eax, [edi+4]
inc     eax
mov     ecx, 9
mov     [esi+4], eax
mov     eax, [edi+8]
add     eax, [edi]
dec     eax
mov     [esi+8], eax
cmp     dword ptr [edi+54h], 1
jz      short loc_47eaa4
call    sub_4892f0
mov     ecx, 0fh
mov     eax, [edi+4]
pop     edi
add     eax, ecx
inc     eax
mov     [esi+0ch], eax
mov     eax, esi
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     edi, [esp+8+arg_4]
mov     eax, [esi]
inc     eax
mov     [edi], eax
mov     eax, 9
cmp     dword ptr [esi+54h], 1
jz      short loc_47eae4
call    sub_4892f0
mov     eax, 0fh
mov     ecx, [esi+4]
sub     ecx, eax
add     ecx, [esi+0ch]
dec     ecx
mov     [edi+4], ecx
mov     eax, [esi+8]
add     eax, [esi]
dec     eax
mov     [edi+8], eax
mov     eax, [esi+4]
add     eax, [esi+0ch]
dec     eax
mov     [edi+0ch], eax
mov     eax, edi
pop     edi
pop     esi
retn
mov     edx, [esp+arg_0]
mov     eax, [esp+arg_4]
mov     ecx, [edx]
mov     [eax], ecx
mov     ecx, [edx+4]
mov     [eax+4], ecx
mov     ecx, [edx+8]
add     ecx, [edx]
mov     [eax+8], ecx
mov     ecx, [edx+0ch]
add     ecx, [edx+4]
mov     [eax+0ch], ecx
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_47e860
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_47eb67
mov     ecx, [esi+28h]
imul    ecx, [esp+8+arg_4]
lea     eax, [ecx+edi-1]
cdq
idiv    edi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
mov     ecx, [edi+54h]
cmp     ecx, 1
jnz     short loc_47ebc9
mov     eax, [edi+3ch]
test    eax, eax
jnz     short loc_47eb8c
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
cmp     eax, 2
jg      short loc_47eb98
mov     eax, [edi+10h]
pop     edi
pop     esi
pop     ebx
retn
mov     ebx, 9
cmp     ecx, 1
jz      short loc_47ebac
mov     ebx, 0fh
call    sub_4892f0
mov     esi, [edi+10h]
mov     eax, [edi+14h]
sub     eax, esi
mov     ecx, [edi+3ch]
sub     ecx, 2
sub     ebx, 2
imul    eax, ecx
cdq
idiv    ebx
add     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [edi+14h]
sub     eax, [edi+10h]
pop     edi
cdq
sub     eax, edx
pop     esi
sar     eax, 1
pop     ebx
retn
sub     esp, 1ch
lea     eax, [esp+1ch+msg]
push    0
push    0
push    0
push    0
push    eax
call    ds:peekmessagea
add     esp, 1ch
retn
push    esi
push    edi
mov     esi, [esp+8+lppoint]
push    esi
call    ds:getcursorpos
mov     edi, [esp+8+arg_0]
push    esi
mov     eax, [edi+34h]
push    eax
call    ds:screentoclient
push    edi
call    sub_47ec60
add     esp, 4
sub     [esi+4], eax
mov     eax, esi
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_0]
mov     edx, [ecx+40h]
test    edx, edx
jz      short locret_47ec51
mov     eax, [ecx+44h]
push    eax
mov     eax, [esp+4+arg_4]
push    eax
mov     eax, [ecx+24h]
push    eax
mov     ecx, [ecx+48h]
push    ecx
call    edx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     [esp+8+var_8], 0
cmp     dword ptr [eax+34h], 0
jz      short loc_47ec91
lea     eax, [esp+8+var_8]
lea     ecx, [esp+8+var_4]
push    eax
push    ecx
call    sub_474d10
mov     eax, [esp+10h+var_8]
add     esp, 8
neg     eax
mov     [esp+8+var_8], eax
mov     eax, [esp+8+var_8]
add     esp, 8
retn
push    esi
xor     eax, eax
mov     esi, [esp+4+arg_0]
push    edi
cmp     esi, eax
jz      short loc_47ece7
mov     edi, [esp+8+arg_4]
cmp     edi, eax
jz      short loc_47ece7
mov     dword ptr [edi], 1
mov     ecx, [esi+50h]
test    ecx, ecx
jz      short loc_47ecd3
push    ecx
call    sub_419530
add     esp, 4
cmp     eax, 1
sbb     ecx, ecx
neg     ecx
mov     [edi], ecx
test    eax, eax
jnz     short loc_47ece7
mov     ecx, [esi+34h]
test    ecx, ecx
jz      short loc_47ece7
push    ecx
call    sub_474d50
add     esp, 4
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
test    eax, eax
jz      short locret_47ed18
mov     ecx, [esp+hdc]
test    ecx, ecx
jz      short locret_47ed18
mov     edx, [esp+arg_8]
test    edx, edx
jz      short locret_47ed18
cmp     dword ptr [edx], 0
jz      short locret_47ed18
push    ecx
mov     eax, [eax+34h]
push    eax
call    ds:releasedc
retn
mov     eax, [esp+hmem]
sub     esp, 4
test    eax, eax
jz      short loc_47ed36
push    eax
call    ds:globallock
add     esp, 4
retn
mov     eax, [esp+4+var_4]
add     esp, 4
retn
mov     eax, [esp+hmem]
test    eax, eax
jz      short locret_47ed4f
push    eax
call    ds:globalunlock
retn
mov     eax, [esp+arg_0]
mov     dword_4ae858, eax
retn
mov     eax, dword_4ae858
retn
mov     ax, 1
retn
sub     esp, 28h
push    ebx
push    esi
push    edi
mov     esi, ds:getsyscolor
push    ebp
push    0
call    esi
push    eax
call    ds:createsolidbrush
mov     edi, eax
mov     ecx, [esp+38h+arg_8]
lea     eax, [esp+38h+left]
mov     ebx, [esp+38h+arg_0]
push    eax
push    ecx
push    ebx
call    sub_47e920
lea     ecx, [esp+44h+rc]
add     esp, 0ch
push    ecx
push    ebx
call    sub_47e970
lea     eax, [esp+40h+rc]
mov     ebp, [esp+40h+hdc]
add     esp, 8
push    edi
push    eax
push    ebp
call    ds:fillrect
push    5
call    ds:getstockobject
push    eax
push    ebp
call    ds:selectobject
mov     [esp+38h+h], eax
push    6
call    esi
push    eax
push    1
push    0
call    ds:createpen
push    eax
mov     esi, eax
push    ebp
call    ds:selectobject
mov     ecx, [esp+38h+right]
mov     edx, [esp+38h+top]
mov     [esp+38h+var_28], eax
mov     eax, [esp+38h+bottom]
push    eax
push    ecx
mov     eax, [esp+40h+left]
push    edx
push    eax
push    ebp
call    ds:rectangle
mov     ecx, [esp+38h+h]
push    ecx
push    ebp
call    ds:selectobject
mov     ecx, [esp+38h+var_28]
push    ecx
push    ebp
call    ds:selectobject
push    esi
mov     esi, ds:deleteobject
call    esi
push    edi
call    esi
lea     ecx, [esp+38h+left]
push    1
push    ecx
push    ebp
push    ebx
call    sub_47da60
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
sub     esp, 10h
push    esi
push    edi
push    0
call    ds:getsyscolor
push    eax
call    ds:createsolidbrush
mov     esi, eax
lea     eax, [esp+18h+rcupdate]
mov     ecx, [esp+18h+dy]
push    eax
mov     eax, [esp+1ch+lprcscroll]
push    0
mov     edi, [esp+20h+hdc]
push    eax
push    eax
push    ecx
push    0
push    edi
call    ds:scrolldc
lea     eax, [esp+18h+rcupdate]
push    esi
push    eax
push    edi
call    ds:fillrect
push    esi
call    ds:deleteobject
pop     edi
pop     esi
add     esp, 10h
retn
lea     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
push    0
call    sub_47eed0
add     esp, 0ch
retn
sub     esp, 2f8h
push    ebx
push    esi
mov     esi, [esp+300h+arg_4]
push    edi
lea     edi, [esp+304h+var_25c]
push    ebp
mov     eax, [esi]
mov     ecx, 13h
mov     [esp+308h+var_2f8], eax
xor     eax, eax
rep stosd
mov     ecx, ds:hwndparent
mov     edx, ds:hinstance
mov     [esp+308h+var_25c.hwndowner], ecx
mov     [esp+308h+var_25c.hinstance], edx
mov     [esp+308h+var_25c.lstructsize], 4ch
cmp     [esi+0ch], eax
jnz     short loc_47ef57
mov     eax, [esi+10h]
push    eax
call    sub_47fa80
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     short loc_47ef4c
push    2
push    9
call    sub_45c150
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2f8h
retn
push    edi
call    ds:globallock
mov     ebx, eax
jmp     short loc_47efa5
push    2
push    100h
call    sub_45b8f0
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_47ef85
push    2
push    9
call    sub_45c150
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2f8h
retn
push    edi
call    ds:globallock
mov     ebx, eax
mov     eax, [esi+0ch]
push    eax
push    1a6ch
push    100h
push    ebx
call    sub_47fe70
add     esp, 10h
mov     [esp+308h+var_25c.lpstrfilter], ebx
test    ebx, ebx
jz      short loc_47efd8
push    ebx
call    ds:lstrlena
test    eax, eax
jle     short loc_47efd8
mov     edx, [esp+308h+var_25c.lpstrfilter]
mov     al, [edx+eax-1]
cmp     byte ptr [edx], 0
jz      short loc_47efd8
cmp     [edx], al
jnz     short loc_47efd2
mov     byte ptr [edx], 0
inc     edx
cmp     byte ptr [edx], 0
jnz     short loc_47efcb
lea     eax, [esp+308h+var_2f4]
push    0
push    ebx
push    eax
call    sub_47f8d0
lea     eax, [esp+314h+var_2f4]
mov     [esp+314h+var_25c.lpstrdefext], eax
add     esp, 0ch
mov     eax, [esi+4]
test    eax, eax
jz      short loc_47f015
push    eax
push    4f0h
lea     eax, [esp+310h+buffer]
push    40h
push    eax
call    sub_47fe70
lea     ecx, [esp+318h+buffer]
add     esp, 10h
jmp     short loc_47f018
mov     ecx, [esi+8]
test    ecx, ecx
jz      short loc_47f036
mov     eax, [esp+308h+arg_8]
push    eax
push    ecx
lea     ecx, [esp+310h+var_2dc]
push    40h
push    ecx
call    sub_401820
add     esp, 10h
jmp     short loc_47f03b
mov     [esp+308h+var_2dc], 0
lea     eax, [esp+308h+var_2dc]
mov     [esp+308h+var_25c.lpstrtitle], eax
mov     eax, [esp+308h+arg_0]
dec     eax
cmp     eax, 1
sbb     eax, eax
and     eax, 0ffffe802h
add     eax, 1864h
mov     [esp+308h+var_25c.flags], eax
call    sub_489320
test    eax, eax
jz      short loc_47f08c
or      [esp+308h+var_25c.flags], 80000h
mov     eax, [esi]
test    eax, eax
jz      short loc_47f085
add     eax, 3e8h
jmp     short loc_47f08a
add     eax, 7d0h
mov     [esi], eax
mov     eax, [esi+18h]
test    eax, eax
jz      short loc_47f0ab
push    105h
push    eax
lea     eax, [esp+310h+var_108]
push    eax
call    sub_47f9f0
add     esp, 0ch
jmp     short loc_47f0b3
mov     [esp+308h+var_108], 0
mov     [esp+308h+var_25c.nmaxfile], 105h
lea     eax, [esp+308h+var_108]
mov     [esp+308h+var_25c.lpstrfile], eax
mov     eax, [esi+20h]
test    eax, eax
jz      short loc_47f0f0
lea     ecx, [esp+308h+var_25c.pvreserved]
push    105h
push    ecx
push    eax
push    1a8ch
call    sub_47f340
add     esp, 10h
jmp     short loc_47f0f8
mov     byte ptr [esp+308h+var_25c.pvreserved], 0
lea     eax, [esp+308h+var_25c.pvreserved]
mov     [esp+308h+var_25c.lcustdata], esi
mov     [esp+308h+var_25c.lpfnhook], offset sub_47f420
mov     [esp+308h+var_25c.lpstrinitialdir], eax
mov     eax, [esi]
test    eax, eax
jz      short loc_47f12a
movzx   eax, ax
mov     [esp+308h+var_25c.lptemplatename], eax
jmp     short loc_47f135
mov     [esp+308h+var_25c.lptemplatename], 3e8h
mov     eax, ds:dword_4a9b20
mov     ebx, ds:dword_4a9b24
lea     ecx, [esp+308h+var_2ec]
mov     ebp, ds:dword_4a9b28
mov     edx, offset dword_4a9b20
mov     [ecx], eax
mov     eax, [edx+0ch]
mov     [ecx+4], ebx
xor     ebx, ebx
mov     [ecx+8], ebp
mov     ds:dword_4a9b24, ebx
mov     [ecx+0ch], eax
lea     ecx, [esp+308h+var_25c]
mov     eax, [esp+308h+var_25c.lcustdata]
mov     ds:dword_4a9b20, ecx
mov     ds:dword_4a9b28, eax
lea     eax, [esp+308h+var_25c]
mov     ds:dword_4a9b2c, ebx
cmp     [esp+308h+arg_0], 1
push    eax
jnz     short loc_47f19d
call    getsavefilenamea
jmp     short loc_47f1a2
call    getopenfilenamea
test    eax, eax
jnz     short loc_47f1e8
call    commdlgextendederror
mov     ebp, eax
test    ebp, ebp
jz      short loc_47f1e0
call    sub_4892e0
test    eax, eax
jz      short loc_47f1d5
cmp     ebp, 0ffffh
jz      short loc_47f1e0
push    ebp
push    5bh
call    sub_45c150
add     esp, 8
mov     ebp, ds:dword_4a9b24
jmp     short loc_47f1ed
push    ebp
push    5bh
call    sub_45c150
add     esp, 8
mov     ebp, ds:dword_4a9b24
jmp     short loc_47f1ed
mov     ebp, 1
cmp     [esi+20h], ebx
jz      loc_47f278
mov     byte ptr [esp+308h+var_25c.pvreserved], bl
call    sub_489320
test    eax, eax
jz      short loc_47f21d
lea     eax, [esp+308h+var_25c.pvreserved]
push    105h
push    eax
call    __getcwd
add     esp, 8
jmp     short loc_47f256
cmp     ds:dword_4a9b30, ebx
jz      short loc_47f256
lea     eax, [esp+308h+var_25c.pvreserved]
push    105h
push    eax
mov     ecx, ds:dword_4a9b30
push    ecx
call    sub_44f670
add     esp, 0ch
mov     ecx, ds:dword_4a9b30
push    ecx
call    sub_44f4a0
add     esp, 4
mov     ds:dword_4a9b30, ebx
cmp     byte ptr [esp+308h+var_25c.pvreserved], bl
jz      short loc_47f278
lea     eax, [esp+308h+var_25c.pvreserved]
mov     ecx, [esi+20h]
push    eax
push    ecx
push    1a8ch
call    sub_47f3a0
add     esp, 0ch
test    ebp, ebp
jz      short loc_47f2f1
cmp     ds:dword_4a9b2c, ebx
jz      short loc_47f296
mov     eax, ds:dword_4a9b2c
mov     ecx, [esi+24h]
mov     [ecx], eax
mov     ds:dword_4a9b2c, ebx
jmp     short loc_47f2aa
mov     ecx, [esi+24h]
mov     edx, [esp+308h+var_25c.lpstrfile]
push    ecx
push    edx
call    sub_44f360
add     esp, 8
mov     eax, [esi+24h]
mov     ecx, [eax]
push    ecx
call    sub_44f800
add     esp, 4
test    eax, eax
jnz     short loc_47f2f1
push    45eh
call    sub_4698f0
add     esp, 4
push    eax
push    2
push    0efh
call    sub_45c150
add     esp, 0ch
mov     eax, [esi+24h]
mov     ecx, [eax]
push    ecx
call    sub_44f4a0
add     esp, 4
mov     ecx, [esi+24h]
mov     [ecx], ebx
jmp     loc_47f17e
mov     ebx, [esp+308h+var_2e8]
lea     edx, [esp+308h+var_2ec]
mov     ecx, offset dword_4a9b20
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+8]
mov     edx, [edx+0ch]
mov     [ecx+4], ebx
mov     [ecx+8], eax
test    edi, edi
mov     [ecx+0ch], edx
mov     ecx, [esp+308h+var_2f8]
mov     [esi], ecx
jz      short loc_47f324
push    edi
call    sub_45ba00
add     esp, 4
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2f8h
retn
sub     esp, 40h
lea     eax, [esp+40h+buffer]
push    0
push    1a8ch
push    1eh
push    eax
call    sub_47fe70
mov     eax, dword ptr [esp+50h+arg_4]
mov     ecx, dword ptr [esp+50h+arg_0]
lea     edx, [esp+50h+keyname]
add     esp, 10h
push    eax
push    ecx
push    1eh
push    edx
call    sub_47fe70
lea     ecx, [esp+50h+keyname]
lea     edx, [esp+50h+buffer]
mov     eax, [esp+50h+nsize]
add     esp, 10h
push    offset windowname
push    ecx
mov     ecx, [esp+48h+lpreturnedstring]
push    edx
push    eax
push    ecx
call    sub_4564c0
add     esp, 54h
retn
sub     esp, 40h
lea     eax, [esp+40h+buffer]
push    0
push    1a8ch
push    1eh
push    eax
call    sub_47fe70
mov     eax, dword ptr [esp+50h+arg_4]
mov     ecx, dword ptr [esp+50h+arg_0]
lea     edx, [esp+50h+keyname]
add     esp, 10h
push    eax
push    ecx
push    1eh
push    edx
call    sub_47fe70
mov     ecx, [esp+50h+lpstring]
lea     edx, [esp+50h+keyname]
lea     eax, [esp+50h+buffer]
add     esp, 10h
push    ecx
push    edx
push    eax
call    sub_4565a0
add     esp, 4ch
retn
mov     eax, ds:dword_4a9b28
retn
mov     eax, ds:dword_4a9b28
mov     ecx, ds:dword_4a9b20
mov     [ecx+40h], eax
mov     eax, ds:dword_4a9b20
retn
sub     esp, 108h
push    ebx
push    esi
mov     esi, [esp+110h+arg_0]
push    edi
push    esi
call    sub_47f3f0
mov     edi, [esp+118h+arg_4]
add     esp, 4
mov     ebx, eax
cmp     edi, 110h
jnz     short loc_47f45c
mov     eax, [ebx+4]
push    eax
push    0e4h
push    esi
call    sub_490700
add     esp, 0ch
mov     ebx, [ebx+1ch]
test    ebx, ebx
jnz     short loc_47f468
mov     ebx, offset sub_47f590
call    sub_489320
test    eax, eax
jz      short loc_47f4e7
mov     eax, [esp+114h+arg_c]
cmp     edi, 4eh
jz      short loc_47f48e
mov     ecx, [esp+114h+arg_8]
push    eax
push    ecx
push    edi
push    esi
call    ebx
mov     ebx, eax
jmp     short loc_47f503
mov     eax, [eax+8]
add     eax, 25fh
cmp     eax, 5
ja      short def_47f49b
jmp     ds:jpt_47f49b[eax*4]
push    esi
push    10470h
push    111h
push    esi
call    ebx
mov     ebx, eax
jmp     short loc_47f503
push    esi
push    1
push    111h
push    esi
call    ebx
mov     ebx, eax
jmp     short loc_47f503
push    esi
push    1860461h
push    111h
push    esi
call    ebx
mov     ebx, eax
jmp     short loc_47f503
push    esi
push    3000480h
push    111h
push    esi
call    ebx
mov     ebx, eax
jmp     short loc_47f503
mov     eax, [esp+114h+arg_c]
mov     ecx, [esp+114h+arg_8]
push    eax
push    ecx
push    edi
push    esi
call    ebx
mov     ebx, eax
jmp     short loc_47f503
mov     ebx, dword ptr [esp+114h+dstbuf]
call    sub_489320
test    eax, eax
jnz     short loc_47f558
cmp     edi, 111h
jnz     short loc_47f558
lea     eax, [esp+114h+dstbuf]
push    105h
push    eax
call    __getcwd
add     esp, 8
test    eax, eax
jz      short loc_47f558
cmp     ds:dword_4a9b30, 0
jz      short loc_47f546
lea     eax, [esp+114h+dstbuf]
mov     ecx, ds:dword_4a9b30
push    eax
push    ecx
call    sub_44f4c0
jmp     short loc_47f555
lea     eax, [esp+114h+dstbuf]
push    offset dword_4a9b30
push    eax
call    sub_44f390
add     esp, 8
cmp     edi, 2
jnz     short loc_47f566
push    esi
call    sub_490760
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn    10h
mov     eax, [esp+arg_4]
sub     esp, 348h
cmp     eax, 110h
push    ebx
push    esi
push    edi
push    ebp
jz      short loc_47f5b1
cmp     eax, 111h
jz      short loc_47f618
jmp     loc_47f8b3
lea     eax, [esp+358h+rect]
mov     esi, [esp+358h+hwnd]
push    eax
push    esi
call    ds:getwindowrect
push    1dh
mov     edi, ds:getsystemmetrics
push    0
push    0
push    1
call    edi
sub     eax, [esp+364h+rect.bottom]
add     eax, [esp+364h+rect.top]
cdq
sub     eax, edx
sar     eax, 1
push    eax
push    0
call    edi
sub     eax, [esp+368h+rect.right]
add     eax, [esp+368h+rect.left]
cdq
sub     eax, edx
sar     eax, 1
push    eax
push    0
push    esi
call    ds:setwindowpos
mov     eax, 1
jmp     loc_47f8b5
mov     edi, [esp+358h+arg_c]
mov     eax, [esp+358h+arg_8]
mov     ecx, eax
movzx   eax, ax
shr     ecx, 10h
cmp     eax, 1
jz      short loc_47f643
cmp     eax, 470h
jz      loc_47f868
jmp     loc_47f8b3
call    sub_4892f0
test    eax, eax
jnz     loc_47f77c
call    sub_4892f0
mov     esi, [esp+358h+hwnd]
test    eax, eax
jz      short loc_47f66b
push    esi
mov     ebx, ds:getparent
call    ebx
jmp     short loc_47f673
mov     eax, esi
mov     ebx, ds:getparent
lea     ecx, [esp+358h+rect]
push    106h
push    ecx
push    480h
push    eax
call    ds:getdlgitemtexta
lea     eax, [esp+358h+rect]
push    eax
call    ds:lstrlena
mov     [esp+358h+var_348], eax
push    2eh
lea     eax, [esp+35ch+rect]
push    eax
call    _strrchr
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_47f6db
lea     eax, [esp+358h+string2]
push    105h
push    edi
push    eax
call    sub_47f9d0
mov     eax, [esp+364h+var_348]
add     esp, 0ch
sub     eax, edi
mov     byte ptr [edi], 0
lea     ebp, [esp+eax+358h+rect]
jmp     short loc_47f6e5
mov     [esp+358h+string2], 0
mov     ebp, 4
lea     eax, [esp+358h+dstbuf]
push    105h
push    eax
call    __getcwd
lea     ecx, [esp+360h+var_344]
add     esp, 8
call    sub_44d680
lea     eax, [esp+358h+dstbuf]
lea     ecx, [esp+358h+var_344]
push    eax
call    sub_44d740
lea     ecx, [esp+358h+var_340]
call    sub_44d390
lea     ecx, [eax+ebp]
add     ecx, [esp+358h+var_348]
cmp     ecx, 103h
jle     short loc_47f771
lea     ecx, [esp+358h+var_6]
lea     edx, [esp+358h+rect]
sub     ecx, ebp
mov     ebp, ds:lstrcata
sub     ecx, eax
lea     eax, [esp+358h+string2]
push    eax
push    edx
mov     byte ptr [ecx], 0
call    ebp
call    sub_4892f0
test    eax, eax
mov     eax, esi
jz      short loc_47f75d
push    esi
call    ebx
lea     ecx, [esp+358h+rect]
push    ecx
push    480h
push    eax
call    ds:setdlgitemtexta
lea     ecx, [esp+358h+var_344]
call    sub_44d730
jmp     short loc_47f789
mov     ebx, ds:getparent
mov     esi, [esp+358h+hwnd]
mov     eax, ds:dword_4a9b20
mov     ecx, [eax+3ch]
push    ecx
call    ds:lstrlena
test    eax, eax
jnz     loc_47f8b3
call    sub_4892f0
test    eax, eax
mov     eax, esi
jz      short loc_47f7ae
push    esi
call    ebx
push    0
mov     ebp, ds:senddlgitemmessagea
push    0
push    147h
push    470h
push    eax
call    ebp
lea     edi, [eax+1]
call    sub_4892f0
test    eax, eax
mov     eax, esi
jz      short loc_47f7d6
push    esi
call    ebx
push    0
push    0
push    146h
push    470h
push    eax
call    ebp
cmp     eax, edi
jle     loc_47f8b3
call    sub_4892f0
test    eax, eax
mov     eax, esi
jz      short loc_47f7fd
push    esi
call    ebx
lea     ecx, [esp+358h+rect]
push    105h
push    ecx
push    480h
push    eax
call    ds:getdlgitemtexta
push    esi
call    sub_47f400
add     esp, 4
mov     ecx, [eax+0ch]
mov     edx, [eax+3ch]
push    edi
push    ecx
push    edx
call    sub_47f8d0
lea     ecx, [esp+364h+rect]
add     esp, 0ch
push    ecx
call    sub_47f930
add     esp, 4
test    eax, eax
jz      short loc_47f8b3
call    sub_4892f0
test    eax, eax
jz      short loc_47f852
push    esi
call    ebx
mov     esi, eax
lea     eax, [esp+358h+rect]
push    eax
push    480h
push    esi
call    ds:setdlgitemtexta
jmp     short loc_47f8b3
cmp     cx, 1
jnz     short loc_47f8b3
call    sub_4892f0
mov     esi, [esp+358h+hwnd]
test    eax, eax
jz      short loc_47f887
push    esi
call    ds:getparent
mov     esi, eax
push    esi
call    sub_47f400
add     esp, 4
mov     esi, eax
push    0
push    0
push    147h
push    edi
call    ds:sendmessagea
push    eax
mov     ecx, [esi+3ch]
mov     eax, [esi+0ch]
push    eax
push    ecx
call    sub_47f8d0
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 348h
retn    10h
mov     eax, [esp+arg_8]
mov     edx, [esp+str]
xor     ecx, ecx
lea     eax, ds:1[eax*2]
cmp     ecx, eax
jge     short loc_47f8f4
cmp     byte ptr [edx], 0
jz      short loc_47f8f0
inc     edx
cmp     byte ptr [edx], 0
jnz     short loc_47f8ea
inc     edx
inc     ecx
jmp     short loc_47f8e1
push    2eh
push    edx
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_47f909
mov     eax, 1
retn
mov     cl, [eax+1]
inc     eax
cmp     cl, 2ah
jz      short loc_47f927
cmp     cl, 3fh
jz      short loc_47f927
push    4
push    eax
mov     eax, [esp+8+arg_0]
push    eax
call    sub_47f9f0
add     esp, 0ch
mov     eax, 1
retn
push    esi
push    edi
mov     edi, [esp+8+str]
cmp     byte ptr [edi], 0
jz      short loc_47f98a
push    5ch
push    edi
call    _strrchr
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_47f94e
mov     esi, edi
push    esi
call    ds:lstrlena
test    eax, eax
jle     short loc_47f98a
push    2eh
push    esi
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_47f98a
push    offset default
mov     edi, ds:lstrcata
push    esi
call    edi
mov     eax, ds:dword_4a9b20
mov     ecx, [eax+3ch]
push    ecx
push    esi
call    edi
mov     eax, 1
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+lpstring]
push    edi
call    ds:lstrlena
mov     ebx, eax
mov     ebp, [esp+10h+arg_8]
mov     esi, [esp+10h+arg_0]
push    esi
call    ds:lstrlena
sub     ebp, eax
dec     ebp
cmp     ebp, ebx
jb      short loc_47f9b9
mov     ebp, ebx
test    ebp, ebp
jz      short loc_47f9c8
push    ebp
push    edi
push    esi
call    _strncat
add     esp, 0ch
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+imaxlength]
push    esi
mov     ecx, [esp+4+lpstring2]
push    eax
mov     esi, [esp+8+lpstring1]
push    ecx
push    esi
call    ds:lstrcpyna
mov     eax, esi
pop     esi
retn
push    ebx
xor     eax, eax
push    esi
push    edi
mov     edi, [esp+0ch+arg_8]
cmp     edi, eax
jle     short loc_47fa1f
mov     ecx, [esp+0ch+arg_0]
mov     esi, [esp+0ch+arg_4]
inc     eax
cmp     eax, edi
jge     short loc_47fa1b
mov     bl, [esi]
mov     edx, ecx
inc     ecx
inc     esi
mov     [edx], bl
test    bl, bl
jnz     short loc_47fa05
dec     eax
pop     edi
pop     esi
pop     ebx
retn
dec     eax
mov     byte ptr [ecx], 0
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     cl, [eax]
test    cl, cl
jz      short loc_47fa4d
mov     eax, [esp+arg_4]
mov     al, [eax]
test    al, al
jz      short loc_47fa4d
sub     al, cl
cmp     al, 1
sbb     eax, eax
neg     eax
retn
xor     eax, eax
retn
push    esi
push    edi
mov     edi, [esp+8+arg_4]
cmp     byte ptr [edi], 0
jz      short loc_47fa73
mov     esi, [esp+8+arg_0]
push    esi
push    edi
call    sub_47fa30
add     esp, 8
test    eax, eax
jnz     short loc_47fa78
inc     edi
cmp     byte ptr [edi], 0
jnz     short loc_47fa5f
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, 1
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+lpstring]
push    esi
call    ds:lstrlena
inc     eax
push    eax
push    esi
call    sub_45b910
add     esp, 8
pop     esi
retn
push    ebx
push    esi
push    edi
push    2
mov     edi, [esp+10h+arg_4]
and     edi, 0ffffh
lea     eax, [edi+1]
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_47fad6
mov     ebx, [esi]
push    edi
mov     eax, [esp+10h+src]
push    eax
push    ebx
call    _memcpy
add     esp, 0ch
mov     byte ptr [ebx+edi], 0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 200h
mov     eax, [esp+200h+arg_4]
push    ebx
push    esi
sub     eax, 2
mov     esi, [esp+208h+arg_0]
push    edi
push    ebp
mov     edi, esi
mov     [esp+210h+var_200], 22h
mov     ebx, 1
mov     cl, [esi]
test    cl, cl
jz      short loc_47fb45
mov     edx, 5ch
cmp     ebx, eax
jge     short loc_47fb45
cmp     cl, 22h
jz      short loc_47fb1f
cmp     cl, dl
jnz     short loc_47fb2b
lea     ecx, [eax-1]
cmp     ecx, ebx
jle     short loc_47fb45
mov     [esp+ebx+210h+var_200], dl
inc     ebx
mov     ebp, edi
inc     edi
cmp     ebp, edi
jnb     short loc_47fb3f
mov     cl, [ebp+0]
inc     ebp
mov     [esp+ebx+210h+var_200], cl
inc     ebx
cmp     ebp, edi
jb      short loc_47fb32
mov     cl, [edi]
test    cl, cl
jnz     short loc_47fb12
add     eax, 2
lea     ecx, [esp+210h+var_200]
mov     [esp+ebx+210h+var_200], 22h
mov     [esp+ebx+210h+var_1ff], 0
push    eax
push    ecx
push    esi
call    sub_47f9f0
add     esp, 0ch
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 200h
retn
push    esi
mov     esi, [esp+4+arg_8]
mov     eax, esi
dec     esi
test    eax, eax
jz      short loc_47fb97
mov     ecx, [esp+4+arg_0]
mov     edx, [esp+4+arg_4]
mov     al, [ecx]
cmp     [edx], al
jnz     short loc_47fb9f
test    al, al
jz      short loc_47fb9b
inc     ecx
inc     edx
mov     eax, esi
dec     esi
test    eax, eax
jnz     short loc_47fb84
xor     eax, eax
pop     esi
retn
xor     eax, eax
pop     esi
retn
movsx   eax, byte ptr [ecx]
movsx   ecx, byte ptr [edx]
sub     eax, ecx
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
push    esi
call    sub_45b7b0
add     esp, 4
test    eax, eax
jz      short loc_47fbd3
inc     esi
push    esi
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_47fbc5
push    6
push    esi
call    sub_47fe60
add     esp, 8
lea     ecx, [eax-2dh]
cmp     cx, 1
sbb     edi, edi
neg     edi
test    edi, edi
jnz     short loc_47fbf3
cmp     ax, 2bh
jnz     short loc_47fbf4
inc     esi
xor     ebp, ebp
cmp     byte ptr [esi], 0
jz      short loc_47fc54
cmp     dword_4af134, 1
push    6
push    esi
jle     short loc_47fc22
call    sub_47fe60
mov     bx, ax
add     esp, 8
movzx   eax, bx
push    4
push    eax
call    __isctype
add     esp, 8
jmp     short loc_47fc3f
call    sub_47fe60
mov     bx, ax
add     esp, 8
movzx   ecx, bx
mov     edx, off_4aef28
xor     eax, eax
mov     ax, [edx+ecx*2]
and     eax, 4
test    eax, eax
jz      short loc_47fc54
inc     esi
lea     eax, [ebp+ebp*4+0]
movzx   ecx, bx
cmp     byte ptr [esi], 0
lea     ebp, [ecx+eax*2-30h]
jnz     short loc_47fbfb
mov     eax, ebp
test    edi, edi
jz      short loc_47fc61
neg     eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
test    esi, esi
jle     short loc_47fce4
mov     edi, [esp+0ch+arg_8]
mov     ebx, [esp+0ch+arg_0]
cmp     byte ptr [edi], 0
jz      short loc_47fce1
dec     esi
jz      short loc_47fce1
push    offset byte_4a85ef
push    edi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47fcc6
push    offset byte_4a8543
push    edi
call    sub_47fa50
add     esp, 8
test    eax, eax
jnz     short loc_47fcc6
push    offset control
push    edi
call    sub_47fa50
add     esp, 8
test    eax, eax
jz      short loc_47fcd4
mov     byte ptr [ebx], 2eh
jmp     short loc_47fcd3
push    6
push    edi
call    sub_47fe60
add     esp, 8
mov     [ebx], al
inc     ebx
inc     edi
cmp     byte ptr [edi], 0
jnz     short loc_47fc88
pop     edi
mov     byte ptr [ebx], 0
pop     esi
pop     ebx
retn
mov     byte ptr [ebx], 0
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+14h+lpstring]
mov     [esp+14h+var_4], edi
test    edi, edi
jz      short loc_47fd53
push    edi
call    ds:lstrlena
lea     ebx, [edi+eax]
mov     eax, [esp+14h+arg_4]
and     eax, 0ffffh
lea     ebp, [eax+edi]
push    0dh
push    edi
call    _strchr
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_47fd53
cmp     ebp, ebx
jbe     short loc_47fd53
inc     edi
cmp     byte ptr [edi], 0ah
jz      short loc_47fd19
mov     eax, ebx
lea     esi, [edi+1]
inc     ebx
sub     eax, edi
inc     ax
movzx   ecx, ax
push    ecx
push    edi
push    esi
call    _memcpy
add     esp, 0ch
mov     byte ptr [edi], 0ah
mov     edi, esi
jmp     short loc_47fd19
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+lpstring]
push    edi
mov     edi, esi
test    esi, esi
jz      short loc_47fdae
push    esi
call    ds:lstrlena
lea     ebx, [esi+eax]
cmp     byte ptr [esi], 0
jz      short loc_47fdae
push    0dh
push    esi
call    _strchr
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_47fdae
inc     esi
cmp     byte ptr [esi], 0ah
jnz     short loc_47fda9
mov     eax, ebx
lea     edx, [esi+1]
dec     ebx
sub     eax, esi
movzx   ecx, ax
push    ecx
push    edx
push    esi
call    _memcpy
add     esp, 0ch
cmp     byte ptr [esi], 0
jnz     short loc_47fd7c
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+str]
push    esi
xor     si, si
push    0dh
push    eax
call    _strchr
add     esp, 8
test    eax, eax
jz      short loc_47fddc
inc     si
inc     eax
jmp     short loc_47fdc8
mov     ax, si
pop     esi
retn
mov     eax, [esp+str]
push    ebx
push    esi
test    eax, eax
push    edi
mov     esi, eax
jz      short loc_47fe1f
cmp     byte ptr [eax], 0
jz      short loc_47fe1f
movsx   edi, [esp+0ch+arg_4]
mov     bl, [esp+0ch+arg_8]
push    edi
push    eax
call    _strchr
add     esp, 8
test    eax, eax
jz      short loc_47fe1f
mov     [eax], bl
test    bl, bl
jnz     short loc_47fe0b
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+lpstring2]
push    esi
mov     esi, [esp+4+lpstring1]
push    edi
cmp     esi, eax
jz      short loc_47fe52
mov     edi, [esp+8+arg_8]
dec     edi
push    edi
push    eax
push    esi
call    sub_47f9d0
add     esp, 0ch
mov     byte ptr [esi+edi], 0
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
movzx   ax, byte ptr [eax]
retn
mov     eax, [esp+cchbuffermax]
push    esi
cmp     eax, 1
jge     short loc_47fe7e
xor     eax, eax
pop     esi
retn
mov     esi, [esp+4+lpbuffer]
push    eax
push    esi
mov     edx, ds:hinstance
movsx   eax, [esp+0ch+arg_c]
movsx   ecx, [esp+0ch+arg_8]
add     eax, ecx
push    eax
push    edx
call    ds:loadstringa
mov     byte ptr [esi+eax], 0
pop     esi
retn
push    offset __beep_1
add     ecx, 4
push    20h
push    ecx
call    sub_48e770
add     esp, 0ch
cmp     eax, 1
sbb     eax, eax
and     eax, 8
retn
push    esi
mov     dword ptr [ecx], offset off_4ab7e0
mov     esi, ecx
mov     ecx, esi
add     esi, 4
call    sub_47fef0
push    esi
call    sub_48e7d0
add     esp, 4
pop     esi
retn
add     ecx, 4
push    ecx
call    sub_48e800
add     esp, 4
retn
sub     esp, 20h
xor     eax, eax
push    esi
push    edi
mov     esi, ecx
lea     edi, [esp+28h+var_20]
mov     ecx, 8
push    20h
rep stosd
mov     eax, [esp+2ch+arg_0]
lea     ecx, [esp+2ch+var_20]
push    eax
add     esi, 4
push    ecx
call    sub_47f9f0
lea     ecx, [esp+34h+var_20]
add     esp, 0ch
push    0
push    0
push    ecx
push    esi
call    sub_48eac0
add     esp, 10h
test    eax, eax
jnz     short loc_47ff4f
lea     eax, [esp+28h+var_20]
push    eax
push    esi
call    sub_48e920
add     esp, 8
pop     edi
pop     esi
add     esp, 20h
retn    4
mov     edx, [esp+arg_0]
sub     esp, 20h
add     ecx, 4
lea     eax, [esp+20h+var_20]
push    eax
push    edx
push    ecx
call    sub_48ea00
add     esp, 0ch
test    eax, eax
jz      short loc_47ff9f
mov     eax, [esp+20h+arg_8]
lea     ecx, [esp+20h+var_20]
mov     edx, [esp+20h+arg_4]
push    eax
push    ecx
push    edx
call    sub_47f9f0
add     esp, 0ch
mov     eax, 1
add     esp, 20h
retn    0ch
xor     eax, eax
add     esp, 20h
retn    0ch
mov     eax, [esp+color]
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+hdc]
push    ebp
push    eax
mov     esi, ds:settextcolor
push    edi
call    esi
mov     ebx, eax
push    0ffffffh
push    edi
call    ds:setbkcolor
mov     dx, [esp+10h+arg_4]
mov     ebp, eax
mov     eax, [esp+10h+arg_10]
mov     ecx, [esp+10h+arg_c]
push    eax
push    ecx
push    edx
push    edi
call    sub_480020
add     esp, 10h
push    ebp
push    edi
call    ds:setbkcolor
push    ebx
push    edi
call    esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     dx, [esp+arg_4]
push    esi
movsx   eax, dx
mov     ecx, [esp+4+arg_c]
push    3
mov     si, word_4ae8a8[eax*2]
mov     ax, si
and     ax, 3e0h
shr     ax, 5
movzx   eax, ax
sub     ecx, eax
mov     eax, [esp+8+arg_8]
add     dx, 1f4h
push    ecx
xor     ecx, ecx
mov     cx, si
and     ecx, 1fh
sub     eax, ecx
push    eax
push    edx
mov     eax, [esp+14h+hdc]
push    eax
call    sub_480270
add     esp, 14h
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+hdc]
push    edi
push    0eh
mov     ebx, ds:getdevicecaps
push    esi
call    ebx
mov     edi, eax
push    0ch
push    esi
call    ebx
imul    edi, eax
cmp     edi, 8
jl      short loc_4800b9
mov     ax, word ptr [esp+0ch+arg_4]
mov     edx, ds:hinstance
add     ax, 7d0h
mov     esi, ds:loadbitmapa
movzx   ecx, ax
push    ecx
push    edx
call    esi
mov     ecx, ds:hinstance
test    eax, eax
jnz     short loc_4800f1
jmp     short loc_4800c5
mov     esi, ds:loadbitmapa
mov     ecx, ds:hinstance
cmp     edi, 4
jl      short loc_4800e4
mov     ax, word ptr [esp+0ch+arg_4]
add     ax, 3e8h
movzx   edx, ax
push    edx
push    ecx
call    esi
mov     ecx, ds:hinstance
test    eax, eax
jnz     short loc_4800f1
mov     eax, [esp+0ch+arg_4]
and     eax, 0ffffh
push    eax
push    ecx
call    esi
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, [esp+arg_0]
cmp     eax, 3
ja      short def_48010a
jmp     ds:jpt_48010a[eax*4]
mov     eax, 0cc0020h
retn
mov     eax, 8800c6h
retn
mov     eax, 0bb0226h
retn
mov     eax, 990066h
retn
mov     eax, 0cc0020h
retn
mov     eax, [esp+arg_4]
sub     esp, 18h
push    ebx
push    esi
mov     esi, [esp+20h+hdc]
push    edi
push    ebp
push    eax
push    esi
call    sub_480070
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_4801c9
lea     eax, [esp+28h+pv]
push    eax
push    18h
push    edi
call    ds:getobjecta
push    esi
mov     ebp, ds:createcompatibledc
call    ebp
mov     ebx, eax
push    edi
push    ebx
call    ds:selectobject
mov     ebp, eax
mov     ax, [esp+28h+arg_10]
push    eax
call    sub_480100
add     esp, 4
mov     ecx, [esp+28h+var_14]
push    eax
mov     eax, [esp+2ch+cy]
push    0
mov     edx, [esp+30h+y]
push    0
push    ebx
push    eax
mov     eax, [esp+3ch+x]
push    ecx
push    edx
push    eax
push    esi
call    ds:bitblt
push    ebp
push    ebx
call    ds:selectobject
push    edi
mov     ebp, ds:deleteobject
call    ebp
push    ebx
call    ds:deletedc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, [esp+arg_4]
push    ebx
mov     ebx, [esp+4+hdc]
push    esi
push    edi
push    ebp
push    eax
push    ebx
call    sub_480070
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_480266
push    ebx
call    ds:createcompatibledc
mov     edi, eax
push    esi
push    edi
call    ds:selectobject
mov     ebp, eax
mov     ax, [esp+10h+arg_28]
push    eax
call    sub_480100
mov     ecx, [esp+14h+wsrc]
mov     edx, [esp+14h+ysrc]
add     esp, 4
push    eax
mov     eax, [esp+14h+hsrc]
push    eax
push    ecx
mov     eax, [esp+1ch+xsrc]
push    edx
mov     ecx, [esp+20h+hdest]
push    eax
mov     edx, [esp+24h+wdest]
push    edi
mov     eax, [esp+28h+ydest]
push    ecx
mov     ecx, [esp+2ch+xdest]
push    edx
push    eax
push    ecx
push    ebx
call    ds:stretchblt
push    ebp
push    edi
call    ds:selectobject
push    esi
mov     ebp, ds:deleteobject
call    ebp
push    edi
call    ds:deletedc
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 24h
push    ebx
push    esi
mov     esi, [esp+2ch+hdc]
push    edi
mov     di, word ptr [esp+30h+arg_4]
push    ebp
push    edi
push    esi
call    sub_480070
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_4803d2
lea     eax, [esp+34h+pv]
mov     ebp, ds:getobjecta
push    eax
push    18h
add     di, 0bb8h
push    ebx
call    ebp
push    esi
call    ds:createcompatibledc
mov     ebp, eax
mov     ecx, ds:hinstance
movzx   eax, di
push    eax
push    ecx
call    ds:loadbitmapa
mov     edi, eax
push    ebx
push    ebp
call    ds:selectobject
mov     [esp+34h+h], eax
test    edi, edi
mov     eax, 660046h
jnz     short loc_4802e7
mov     eax, [esp+34h+arg_10]
push    eax
call    sub_480100
add     esp, 4
mov     ecx, [esp+34h+var_14]
push    eax
mov     eax, [esp+38h+cy]
push    0
mov     edx, [esp+3ch+y]
push    0
push    ebp
push    eax
mov     eax, [esp+48h+x]
push    ecx
push    edx
push    eax
push    esi
call    ds:bitblt
mov     ecx, [esp+34h+h]
push    ecx
push    ebp
call    ds:selectobject
test    edi, edi
jz      loc_4803b6
push    edi
push    ebp
call    ds:selectobject
push    0ffffffh
push    esi
call    ds:setbkcolor
mov     [esp+34h+color], eax
push    0
push    esi
call    ds:settextcolor
mov     [esp+34h+var_20], eax
push    8800c6h
mov     eax, [esp+38h+cy]
push    0
mov     ecx, [esp+3ch+var_14]
push    0
mov     edx, [esp+40h+y]
push    ebp
push    eax
push    ecx
mov     eax, [esp+4ch+x]
push    edx
push    eax
push    esi
call    ds:bitblt
mov     ecx, [esp+34h+color]
push    ecx
push    esi
call    ds:setbkcolor
mov     ecx, [esp+34h+var_20]
push    ecx
push    esi
call    ds:settextcolor
push    ebx
push    ebp
call    ds:selectobject
mov     ecx, [esp+34h+cy]
push    660046h
mov     edx, [esp+38h+var_14]
push    0
mov     eax, [esp+3ch+y]
push    0
push    ebp
push    ecx
mov     ecx, [esp+48h+x]
push    edx
push    eax
push    ecx
push    esi
call    ds:bitblt
push    edi
mov     esi, ds:deleteobject
call    esi
jmp     short loc_4803bc
mov     esi, ds:deleteobject
mov     eax, [esp+34h+h]
push    eax
push    ebp
call    ds:selectobject
push    ebx
call    esi
push    ebp
call    ds:deletedc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+hdc]
push    edi
push    ebp
mov     bp, word ptr [esp+14h+arg_4]
push    ebp
push    esi
call    sub_480070
add     esp, 8
mov     edi, eax
test    edi, edi
jz      loc_4804ee
add     bp, 0bb8h
push    esi
call    ds:createcompatibledc
mov     ebx, eax
mov     ecx, ds:hinstance
movzx   eax, bp
push    eax
mov     ebp, ds:loadbitmapa
push    ecx
call    ebp
mov     ebp, eax
test    ebp, ebp
jz      short loc_480478
push    ebp
push    ebx
call    ds:selectobject
mov     ecx, [esp+14h+wsrc]
push    0bb0226h
mov     edx, [esp+18h+ysrc]
mov     [esp+18h+h], eax
mov     eax, [esp+18h+hsrc]
push    eax
push    ecx
mov     eax, [esp+20h+xsrc]
push    edx
mov     ecx, [esp+24h+hdest]
push    eax
mov     edx, [esp+28h+wdest]
push    ebx
mov     eax, [esp+2ch+ydest]
push    ecx
mov     ecx, [esp+30h+xdest]
push    edx
push    eax
push    ecx
push    esi
call    ds:stretchblt
mov     ecx, [esp+14h+h]
push    ecx
push    ebx
call    ds:selectobject
push    edi
push    ebx
call    ds:selectobject
mov     [esp+14h+h], eax
mov     ax, [esp+14h+arg_28]
push    eax
call    sub_480100
mov     ecx, [esp+18h+wsrc]
mov     edx, [esp+18h+ysrc]
add     esp, 4
push    eax
mov     eax, [esp+18h+hsrc]
push    eax
push    ecx
mov     eax, [esp+20h+xsrc]
push    edx
mov     ecx, [esp+24h+hdest]
push    eax
mov     edx, [esp+28h+wdest]
push    ebx
mov     eax, [esp+2ch+ydest]
push    ecx
mov     ecx, [esp+30h+xdest]
push    edx
push    eax
push    ecx
push    esi
call    ds:stretchblt
mov     ecx, [esp+14h+h]
push    ecx
push    ebx
call    ds:selectobject
test    ebp, ebp
jz      short loc_4804de
push    ebp
mov     esi, ds:deleteobject
call    esi
jmp     short loc_4804e4
mov     esi, ds:deleteobject
push    edi
call    esi
push    ebx
call    ds:deletedc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+hdc]
sub     esp, 18h
push    esi
push    eax
push    ecx
call    sub_480070
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_48054a
lea     eax, [esp+1ch+pv]
push    eax
push    18h
push    esi
call    ds:getobjecta
mov     ecx, [esp+1ch+var_14]
mov     edx, [esp+1ch+arg_8]
mov     eax, [esp+1ch+arg_c]
push    esi
mov     [edx], ecx
mov     ecx, [esp+20h+var_10]
mov     [eax], ecx
call    ds:deleteobject
pop     esi
add     esp, 18h
retn
mov     eax, [esp+1ch+arg_8]
mov     ecx, [esp+1ch+arg_c]
pop     esi
mov     dword ptr [eax], 0
mov     dword ptr [ecx], 0
add     esp, 18h
retn
lea     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
sub     esp, 100h
lea     edx, [esp+100h+text]
push    esi
push    eax
push    ecx
push    100h
push    edx
call    sub_401820
lea     ecx, [esp+114h+text]
add     esp, 10h
push    ecx
push    offset caption
call    sub_480600
lea     ecx, [esp+10ch+text]
add     esp, 8
push    2010h
push    offset caption
push    ecx
push    0
call    ds:messageboxa
push    11h
mov     esi, ds:getkeystate
call    esi
test    ax, ax
jge     short loc_4805da
push    12h
call    esi
test    ax, ax
jge     short loc_4805da
call    ds:debugbreak
push    1
push    offset buf
call    _longjmp
add     esp, 8
pop     esi
add     esp, 100h
retn
sub     esp, 144h
cmp     ds:dword_4a9b78, 0
push    ebx
push    esi
push    edi
push    ebp
jz      short loc_480623
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 144h
retn
lea     eax, [esp+154h+string+2]
push    6
mov     ds:dword_4a9b78, 1
push    1aech
push    14h
push    eax
call    sub_47fe70
lea     eax, [esp+164h+keyname]
add     esp, 10h
push    7
push    1aech
push    14h
push    eax
call    sub_47fe70
lea     eax, [esp+164h+keyname]
lea     ecx, [esp+164h+string+2]
lea     edx, [esp+164h+sz]
add     esp, 10h
push    offset windowname
push    eax
push    ecx
push    14h
push    edx
call    sub_4564c0
lea     ecx, [esp+168h+sz]
add     esp, 14h
push    ecx
call    ds:charuppera
cmp     [esp+154h+sz], 59h
jz      short loc_4806ae
cmp     [esp+154h+sz], 54h
jz      short loc_4806ae
cmp     [esp+154h+sz], 31h
jz      short loc_4806ae
xor     eax, eax
pop     ebp
mov     ds:dword_4a9b78, 0
pop     edi
pop     esi
pop     ebx
add     esp, 144h
retn
lea     eax, [esp+154h+buffer]
push    104h
push    eax
call    ds:getwindowsdirectorya
push    1
mov     ecx, 104h
push    30h
sub     ecx, eax
lea     eax, [esp+eax+15ch+buffer]
push    ecx
push    eax
call    sub_47fe70
add     esp, 10h
push    1
call    ds:seterrormode
mov     word ptr [esp+154h+string], ax
push    2
lea     ecx, [esp+158h+buffer]
push    ecx
call    ds:_lopen
cmp     eax, 0ffffffffh
mov     edi, eax
jnz     short loc_480710
lea     eax, [esp+154h+buffer]
push    0
push    eax
call    ds:_lcreat
cmp     eax, 0ffffffffh
mov     edi, eax
jz      loc_48090f
push    2
push    0
push    edi
call    ds:_llseek
mov     esi, [esp+154h+lpstring1]
push    offset atrace
push    esi
call    ds:lstrcmpia
cmp     eax, 1
sbb     ebp, ebp
neg     ebp
test    ebp, ebp
jnz     short loc_48075e
lea     eax, [esp+154h+buffer]
push    esi
push    offset a20s
push    eax
call    ds:wsprintfa
add     esp, 0ch
mov     esi, ds:_lwrite
push    eax
lea     eax, [esp+158h+buffer]
push    eax
push    edi
call    esi
jmp     short loc_480764
mov     esi, ds:_lwrite
mov     eax, [esp+154h+lpstring]
mov     ebx, ds:lstrlena
push    eax
call    ebx
mov     ecx, [esp+154h+lpstring]
push    eax
push    ecx
push    edi
call    esi
push    2
push    offset buffer
push    edi
call    esi
test    ebp, ebp
jnz     loc_480908
lea     eax, [esp+154h+string+2]
push    eax
call    __strdate
lea     eax, [esp+158h+keyname]
add     esp, 4
push    eax
call    __strtime
lea     eax, [esp+158h+keyname]
lea     ecx, [esp+158h+string+2]
lea     edx, [esp+158h+buffer]
add     esp, 4
push    eax
push    ecx
push    offset ass
push    edx
call    ds:wsprintfa
lea     ecx, [esp+164h+buffer]
add     esp, 10h
push    eax
push    ecx
push    edi
call    esi
lea     ecx, [esp+154h+buffer]
push    104h
push    ecx
mov     edx, ds:hinstance
push    edx
call    ds:getmodulefilenamea
lea     ecx, [esp+154h+buffer]
push    eax
push    ecx
push    edi
call    esi
lea     ecx, [esp+154h+string+2]
push    14h
push    ecx
call    sub_489160
lea     ecx, [esp+15ch+string+2]
add     esp, 8
push    ecx
call    ebx
lea     ecx, [esp+154h+string+2]
lea     edx, [esp+154h+buffer]
push    ecx
push    offset as
push    edx
call    ds:wsprintfa
lea     ecx, [esp+160h+buffer]
add     esp, 0ch
push    eax
push    ecx
push    edi
call    esi
mov     ebp, ds:getversion
call    ebp
xor     ecx, ecx
mov     cl, ah
push    ecx
xor     ecx, ecx
mov     cl, al
push    ecx
push    16h
call    ds:getsystemmetrics
test    eax, eax
mov     eax, offset adebug
jnz     short loc_480851
mov     eax, offset windowname
push    eax
push    offset aswindowsdd
lea     eax, [esp+164h+buffer]
push    eax
call    ds:wsprintfa
add     esp, 14h
push    eax
lea     eax, [esp+158h+buffer]
push    eax
push    edi
call    esi
cmp     ds:word_4a8518, 0
jz      short loc_4808b7
lea     eax, [esp+154h+buffer]
push    2
push    104h
mov     ecx, ds:dword_4a8510
push    eax
push    ecx
call    sub_44f860
add     esp, 10h
push    8
push    offset acourse
push    edi
call    esi
lea     ecx, [esp+154h+buffer]
push    ecx
call    ebx
lea     ecx, [esp+154h+buffer]
push    eax
push    ecx
push    edi
call    esi
push    2
push    offset buffer
push    edi
call    esi
cmp     word_4ad9ac, 0
jz      short loc_4808fe
lea     eax, [esp+154h+buffer]
push    104h
push    eax
mov     ecx, ds:dword_4a8510
push    ecx
call    sub_44f640
add     esp, 0ch
push    9
push    offset arecords
push    edi
call    esi
lea     ecx, [esp+154h+buffer]
push    ecx
call    ebx
lea     ecx, [esp+154h+buffer]
push    eax
push    ecx
push    edi
call    esi
push    2
push    offset buffer
push    edi
call    esi
push    2
push    offset buffer
push    edi
call    esi
push    edi
call    ds:_lclose
mov     eax, dword ptr [esp+154h+string]
and     eax, 0ffffh
push    eax
call    ds:seterrormode
mov     eax, 1
pop     ebp
mov     ds:dword_4a9b78, 0
pop     edi
pop     esi
pop     ebx
add     esp, 144h
retn
sub     esp, 638h
mov     byte ptr [esp+638h+var_638+1], 1
mov     byte ptr [esp+638h+var_638+2], 2
push    ebx
mov     eax, 0dh
push    esi
xor     ebx, ebx
push    edi
mov     esi, 0ffffffffh
mov     byte ptr [esp+644h+var_638], bl
push    ebp
mov     ecx, 3
mov     byte ptr [esp+648h+var_638+3], al
mov     [esp+648h+var_634], esi
mov     [esp+648h+var_62e], cl
mov     [esp+648h+var_630], 1
mov     [esp+648h+var_62f], 2
mov     [esp+648h+var_62c], ebx
mov     [esp+648h+var_626], bl
mov     [esp+648h+var_625], bl
mov     [esp+648h+var_624], ebx
mov     [esp+648h+var_62d], 0eh
mov     [esp+648h+var_628], 1
mov     [esp+648h+var_627], 63h
mov     [esp+648h+var_61d], bl
mov     [esp+648h+var_61c], ebx
mov     [esp+648h+var_620], 1
mov     [esp+648h+var_61f], 63h
mov     [esp+648h+var_61e], 40h
mov     [esp+648h+var_615], bl
mov     [esp+648h+var_614], ebx
mov     [esp+648h+var_618], 1
mov     [esp+648h+var_617], 63h
mov     [esp+648h+var_616], 40h
mov     [esp+648h+var_60d], bl
mov     [esp+648h+var_60c], ebx
mov     [esp+648h+var_610], 1
mov     [esp+648h+var_60f], 63h
mov     [esp+648h+var_608], bl
mov     [esp+648h+var_605], al
mov     [esp+648h+var_604], esi
mov     [esp+648h+var_600], bl
mov     [esp+648h+var_60e], 40h
mov     [esp+648h+var_607], 1
mov     [esp+648h+var_5fd], al
mov     [esp+648h+var_5fc], esi
mov     [esp+648h+var_606], 2
mov     [esp+648h+var_5ff], 1
mov     [esp+648h+var_5f8], bl
mov     [esp+648h+var_5f5], al
mov     [esp+648h+var_5fe], 2
mov     [esp+648h+var_5f7], 1
mov     [esp+648h+var_5f6], 42h
mov     [esp+648h+var_5f4], esi
mov     [esp+648h+var_5ed], al
mov     [esp+648h+var_5f0], 1
mov     [esp+648h+var_5ef], 1
mov     [esp+648h+var_5ee], 2
mov     [esp+648h+var_5e8], 2
mov     [esp+648h+var_5ec], esi
mov     [esp+648h+var_5e7], 1
mov     edi, 1f4h
mov     [esp+648h+var_5e5], cl
mov     [esp+648h+var_5e6], 2
mov     [esp+648h+var_5e0], 1
mov     [esp+648h+var_5e4], edi
mov     [esp+648h+var_5dc], ebx
mov     [esp+648h+var_5df], 1
mov     [esp+648h+var_5de], 2
mov     [esp+648h+var_5dd], 0ch
mov     edx, 4
mov     [esp+648h+var_5d4], ebx
mov     [esp+648h+var_5d8], 1
mov     [esp+648h+var_5d7], 1
mov     [esp+648h+var_5d5], 0ch
mov     [esp+648h+var_5d0], 1
mov     [esp+648h+var_5d6], dl
mov     [esp+648h+var_5cc], ebx
mov     [esp+648h+var_5cf], 1
mov     [esp+648h+var_5ce], 2
mov     [esp+648h+var_5cd], 0ch
mov     [esp+648h+var_5c8], 1
mov     [esp+648h+var_5c4], ebx
mov     [esp+648h+var_5c0], bl
mov     [esp+648h+var_5c7], 1
mov     [esp+648h+var_5c6], 2
mov     [esp+648h+var_5c5], 0ch
mov     [esp+648h+var_5bf], 1
mov     [esp+648h+var_5bc], ebx
mov     [esp+648h+var_5b7], dl
mov     [esp+648h+var_5b6], bl
mov     [esp+648h+var_5b5], bl
mov     [esp+648h+var_5be], 2
mov     [esp+648h+var_5bd], 0ch
mov     [esp+648h+var_5b8], 1
mov     [esp+648h+var_5b0], 1
mov     [esp+648h+var_5b4], ebx
mov     [esp+648h+var_5ac], ebx
mov     [esp+648h+var_5af], 1
mov     [esp+648h+var_5ae], 2
mov     [esp+648h+var_5ad], 0ch
mov     [esp+648h+var_5a8], 1
mov     [esp+648h+var_5a7], 1
mov     [esp+648h+var_5a6], 2
mov     [esp+648h+var_5a5], 0ch
mov     [esp+648h+var_5a4], ebx
mov     [esp+648h+var_59d], al
mov     [esp+648h+var_5a0], 1
mov     [esp+648h+var_59f], 1
mov     [esp+648h+var_59e], 2
mov     [esp+648h+var_59c], esi
mov     [esp+648h+var_595], al
mov     [esp+648h+var_598], 1
mov     [esp+648h+var_597], 1
mov     [esp+648h+var_594], esi
mov     [esp+648h+var_58e], dl
mov     [esp+648h+var_596], 2
mov     [esp+648h+var_590], 1
mov     [esp+648h+var_58f], 1
mov     [esp+648h+var_58d], 0ch
mov     [esp+648h+var_58c], ebx
mov     eax, 5
mov     [esp+648h+var_588], al
mov     [esp+648h+var_586], dl
mov     [esp+648h+var_587], 1
mov     [esp+648h+var_585], 2
mov     [esp+648h+var_580], 1
mov     [esp+648h+var_584], esi
mov     [esp+648h+var_57c], ebx
mov     [esp+648h+var_57f], 1
mov     [esp+648h+var_57e], 44h
mov     [esp+648h+var_578], bl
mov     [esp+648h+var_575], bl
mov     [esp+648h+var_574], ebx
mov     [esp+648h+var_570], bl
mov     [esp+648h+var_57d], 0ch
mov     [esp+648h+var_577], 1
mov     [esp+648h+var_56d], bl
mov     [esp+648h+var_56c], ebx
mov     [esp+648h+var_576], 40h
mov     [esp+648h+var_56f], 1
mov     [esp+648h+var_56e], 40h
mov     [esp+648h+var_568], 1
mov     [esp+648h+var_567], 1
mov     [esp+648h+var_566], 40h
mov     [esp+648h+var_565], 0ch
mov     [esp+648h+var_560], 1
mov     [esp+648h+var_564], ebx
mov     [esp+648h+var_55c], ebx
mov     [esp+648h+var_55f], 1
mov     [esp+648h+var_55e], 40h
mov     [esp+648h+var_55d], 0ch
mov     [esp+648h+var_558], 1
mov     [esp+648h+var_557], 1
mov     [esp+648h+var_556], 40h
mov     [esp+648h+var_555], 0ch
mov     [esp+648h+var_550], 1
mov     [esp+648h+var_554], ebx
mov     [esp+648h+var_54c], ebx
mov     [esp+648h+var_54f], 1
mov     [esp+648h+var_54e], 40h
mov     [esp+648h+var_54d], 0ch
mov     [esp+648h+var_548], 1
mov     [esp+648h+var_547], 1
mov     [esp+648h+var_546], 40h
mov     [esp+648h+var_545], 0ch
mov     [esp+648h+var_540], 1
mov     [esp+648h+var_544], ebx
mov     [esp+648h+var_53c], ebx
mov     [esp+648h+var_53f], 1
mov     [esp+648h+var_53e], 40h
mov     [esp+648h+var_53d], 0ch
mov     [esp+648h+var_536], bl
mov     [esp+648h+var_534], ebx
mov     [esp+648h+var_538], 1
mov     [esp+648h+var_537], 1
mov     [esp+648h+var_535], 0ch
mov     [esp+648h+var_52e], bl
mov     [esp+648h+var_52c], ebx
mov     [esp+648h+var_530], 1
mov     [esp+648h+var_52f], 1
mov     [esp+648h+var_52d], 0ch
mov     [esp+648h+var_528], 1
mov     [esp+648h+var_526], al
mov     [esp+648h+var_524], ebx
mov     [esp+648h+var_527], 2
mov     [esp+648h+var_525], 0eh
mov     [esp+648h+var_51e], al
mov     [esp+648h+var_51c], ebx
mov     [esp+648h+var_520], 1
mov     [esp+648h+var_518], al
mov     [esp+648h+var_516], al
mov     [esp+648h+var_51f], 2
mov     [esp+648h+var_514], esi
mov     [esp+648h+var_510], bl
mov     [esp+648h+var_50f], dl
mov     [esp+648h+var_50e], bl
mov     [esp+648h+var_50d], bl
mov     [esp+648h+var_50c], ebx
mov     [esp+648h+var_51d], 0eh
mov     [esp+648h+var_508], bl
mov     [esp+648h+var_506], bl
mov     [esp+648h+var_505], bl
mov     [esp+648h+var_504], ebx
mov     [esp+648h+var_500], bl
mov     [esp+648h+var_4ff], dl
mov     [esp+648h+var_517], 2
mov     [esp+648h+var_4fd], bl
mov     [esp+648h+var_4fc], ebx
mov     [esp+648h+var_4f8], bl
mov     [esp+648h+var_4f7], dl
mov     [esp+648h+var_515], 2
mov     [esp+648h+var_4f5], bl
mov     [esp+648h+var_4f4], ebx
mov     [esp+648h+var_507], 7
mov     [esp+648h+var_4ef], dl
mov     [esp+648h+var_4ee], bl
mov     [esp+648h+var_4ed], bl
mov     [esp+648h+var_4ec], ebx
mov     [esp+648h+var_4fe], 40h
mov     [esp+648h+var_4e7], dl
mov     [esp+648h+var_4e6], bl
mov     [esp+648h+var_4e5], bl
mov     [esp+648h+var_4e4], ebx
mov     [esp+648h+var_4f6], 40h
mov     [esp+648h+var_4df], dl
mov     [esp+648h+var_4de], bl
mov     [esp+648h+var_4dd], bl
mov     [esp+648h+var_4dc], ebx
mov     [esp+648h+var_4f0], 1
mov     [esp+648h+var_4d7], dl
mov     [esp+648h+var_4d6], bl
mov     [esp+648h+var_4e8], 1
mov     [esp+648h+var_4e0], 1
mov     [esp+648h+var_4d4], ebx
mov     [esp+648h+var_4cf], dl
mov     [esp+648h+var_4d8], 1
mov     [esp+648h+var_4ce], bl
mov     [esp+648h+var_4cc], ebx
mov     [esp+648h+var_4d5], 6
mov     [esp+648h+var_4d0], 1
mov     [esp+648h+var_4cd], 6
mov     [esp+648h+var_4c8], 1
mov     [esp+648h+var_4c7], dl
mov     [esp+648h+var_4c6], bl
mov     [esp+648h+var_4c4], ebx
mov     [esp+648h+var_4bf], dl
mov     [esp+648h+var_4be], bl
mov     [esp+648h+var_4bc], ebx
mov     [esp+648h+var_4b8], bl
mov     [esp+648h+var_4b7], cl
mov     [esp+648h+var_4b6], bl
mov     [esp+648h+var_4b5], bl
mov     [esp+648h+var_4b4], ebx
mov     [esp+648h+var_4b0], bl
mov     [esp+648h+var_4af], cl
mov     [esp+648h+var_4ae], bl
mov     [esp+648h+var_4ad], bl
mov     [esp+648h+var_4c5], 7
mov     [esp+648h+var_4ac], ebx
mov     [esp+648h+var_4a7], cl
mov     [esp+648h+var_4a6], bl
mov     [esp+648h+var_4a5], bl
mov     [esp+648h+var_4a4], ebx
mov     [esp+648h+var_4a0], bl
mov     [esp+648h+var_49f], cl
mov     [esp+648h+var_49e], bl
mov     ebp, 0ea60h
mov     [esp+648h+var_49d], cl
mov     [esp+648h+var_4c0], 1
mov     [esp+648h+var_49c], ebp
mov     [esp+648h+var_497], cl
mov     [esp+648h+var_496], bl
mov     [esp+648h+var_495], cl
mov     [esp+648h+var_4bd], 7
mov     [esp+648h+var_490], bl
mov     [esp+648h+var_48f], cl
mov     [esp+648h+var_48e], bl
mov     [esp+648h+var_48d], cl
mov     [esp+648h+var_4a8], 2
mov     [esp+648h+var_48c], ebp
mov     [esp+648h+var_487], cl
mov     [esp+648h+var_486], bl
mov     [esp+648h+var_485], cl
mov     [esp+648h+var_498], 2
mov     [esp+648h+var_494], 1388h
mov     [esp+648h+var_47f], cl
mov     [esp+648h+var_47e], bl
mov     [esp+648h+var_47d], cl
mov     [esp+648h+var_47c], edi
mov     [esp+648h+var_488], 2
mov     [esp+648h+var_477], cl
mov     [esp+648h+var_476], bl
mov     [esp+648h+var_475], cl
mov     [esp+648h+var_474], edi
mov     [esp+648h+var_470], bl
mov     [esp+648h+var_46f], cl
mov     [esp+648h+var_46e], bl
mov     [esp+648h+var_46d], bl
mov     [esp+648h+var_46c], ebx
mov     [esp+648h+var_468], bl
mov     [esp+648h+var_484], 1388h
mov     [esp+648h+var_480], 2
mov     [esp+648h+var_478], 2
mov     [esp+648h+var_467], cl
mov     [esp+648h+var_466], bl
mov     [esp+648h+var_465], cl
mov     [esp+648h+var_464], ebp
mov     [esp+648h+var_460], bl
mov     [esp+648h+var_45f], cl
mov     [esp+648h+var_45e], bl
mov     [esp+648h+var_45d], bl
mov     [esp+648h+var_45c], ebx
mov     [esp+648h+var_457], cl
mov     [esp+648h+var_456], bl
mov     [esp+648h+var_455], bl
mov     [esp+648h+var_454], ebx
mov     [esp+648h+var_450], bl
mov     [esp+648h+var_44f], cl
mov     [esp+648h+var_44e], bl
mov     [esp+648h+var_44d], bl
mov     [esp+648h+var_44c], ebx
mov     [esp+648h+var_447], cl
mov     [esp+648h+var_446], bl
mov     [esp+648h+var_445], bl
mov     [esp+648h+var_444], ebx
mov     [esp+648h+var_43f], cl
mov     [esp+648h+var_43e], bl
mov     [esp+648h+var_43d], bl
mov     [esp+648h+var_43c], ebx
mov     [esp+648h+var_438], bl
mov     [esp+648h+var_437], cl
mov     [esp+648h+var_436], bl
mov     [esp+648h+var_435], bl
mov     [esp+648h+var_434], ebx
mov     [esp+648h+var_430], bl
mov     [esp+648h+var_42f], dl
mov     [esp+648h+var_458], 1
mov     [esp+648h+var_42e], bl
mov     [esp+648h+var_42c], ebx
mov     [esp+648h+var_448], 1
mov     [esp+648h+var_427], dl
mov     [esp+648h+var_426], bl
mov     [esp+648h+var_440], 1
mov     [esp+648h+var_42d], 9
mov     [esp+648h+var_428], 1
mov     [esp+648h+var_425], 9
mov     [esp+648h+var_424], ebx
mov     [esp+648h+var_41d], cl
mov     [esp+648h+var_420], 1
mov     [esp+648h+var_41c], edi
mov     [esp+648h+var_417], dl
mov     [esp+648h+var_416], bl
mov     [esp+648h+var_415], bl
mov     [esp+648h+var_41f], 9
mov     [esp+648h+var_414], ebx
mov     [esp+648h+var_40f], dl
mov     [esp+648h+var_40e], bl
mov     [esp+648h+var_40d], bl
mov     [esp+648h+var_40c], ebx
mov     [esp+648h+var_408], bl
mov     [esp+648h+var_41e], 6
mov     [esp+648h+var_418], 2
mov     [esp+648h+var_410], 2
mov     [esp+648h+var_407], dl
mov     [esp+648h+var_406], bl
mov     [esp+648h+var_405], bl
mov     [esp+648h+var_404], ebx
mov     [esp+648h+var_400], bl
mov     [esp+648h+var_3ff], dl
mov     [esp+648h+var_3fe], bl
mov     [esp+648h+var_3fd], bl
mov     [esp+648h+var_3fc], ebx
mov     [esp+648h+var_3f8], bl
mov     [esp+648h+var_3f7], dl
mov     [esp+648h+var_3f6], bl
mov     [esp+648h+var_3f5], bl
mov     [esp+648h+var_3f4], ebx
mov     [esp+648h+var_3f0], bl
mov     [esp+648h+var_3ef], cl
mov     [esp+648h+var_3ee], bl
mov     [esp+648h+var_3ed], cl
mov     [esp+648h+var_3ec], 3e8h
mov     [esp+648h+var_3e8], 2
mov     [esp+648h+var_3e7], 1
mov     [esp+648h+var_3e6], 1
mov     [esp+648h+var_3e4], 3e8h
mov     [esp+648h+var_3e0], 2
mov     [esp+648h+var_3e5], cl
mov     [esp+648h+var_3dc], ebx
mov     [esp+648h+var_3df], 1
mov     [esp+648h+var_3d7], dl
mov     [esp+648h+var_3d6], bl
mov     [esp+648h+var_3d5], bl
mov     [esp+648h+var_3d4], ebx
mov     [esp+648h+var_3d0], bl
mov     [esp+648h+var_3cf], dl
mov     [esp+648h+var_3ce], bl
mov     [esp+648h+var_3cd], bl
mov     [esp+648h+var_3de], 2
mov     [esp+648h+var_3cc], ebx
mov     [esp+648h+var_3c7], dl
mov     [esp+648h+var_3c6], bl
mov     [esp+648h+var_3c5], bl
mov     [esp+648h+var_3c4], ebx
mov     [esp+648h+var_3c0], bl
mov     [esp+648h+var_3bf], dl
mov     [esp+648h+var_3be], bl
mov     [esp+648h+var_3bd], bl
mov     [esp+648h+var_3bc], ebx
mov     [esp+648h+var_3b8], al
mov     [esp+648h+var_3b7], dl
mov     [esp+648h+var_3dd], 0ch
mov     [esp+648h+var_3d8], 1
mov     [esp+648h+var_3b6], bl
mov     [esp+648h+var_3b0], al
mov     [esp+648h+var_3af], dl
mov     [esp+648h+var_3ae], bl
mov     [esp+648h+var_3c8], 1
mov     [esp+648h+var_3b5], 8
mov     [esp+648h+var_3a8], al
mov     [esp+648h+var_3a7], dl
mov     [esp+648h+var_3b4], 10010h
mov     [esp+648h+var_3ad], 8
mov     [esp+648h+var_3ac], 1005fh
mov     [esp+648h+var_3a6], bl
mov     [esp+648h+var_3a5], 8
mov     [esp+648h+var_3a0], al
mov     [esp+648h+var_39f], dl
mov     [esp+648h+var_39e], bl
mov     [esp+648h+var_398], al
mov     [esp+648h+var_397], dl
mov     [esp+648h+var_396], bl
mov     [esp+648h+var_3a4], 10012h
mov     [esp+648h+var_39d], 8
mov     [esp+648h+var_39c], 10014h
mov     [esp+648h+var_395], 6
mov     [esp+648h+var_394], ebx
mov     [esp+648h+var_38d], al
mov     [esp+648h+var_390], 1
mov     [esp+648h+var_38f], 9
mov     [esp+648h+var_38e], 1
mov     [esp+648h+var_38c], esi
mov     [esp+648h+var_385], al
mov     [esp+648h+var_388], 1
mov     [esp+648h+var_387], 9
mov     [esp+648h+var_386], 1
mov     [esp+648h+var_384], esi
mov     [esp+648h+var_37d], al
mov     [esp+648h+var_380], 2
mov     [esp+648h+var_37f], 9
mov     [esp+648h+var_37e], 1
mov     [esp+648h+var_37c], esi
mov     [esp+648h+var_375], al
mov     [esp+648h+var_378], 2
mov     [esp+648h+var_377], 9
mov     [esp+648h+var_376], 1
mov     [esp+648h+var_374], esi
mov     [esp+648h+var_36d], al
mov     [esp+648h+var_36c], esi
mov     [esp+648h+var_368], al
mov     [esp+648h+var_370], 2
mov     [esp+648h+var_36f], 9
mov     [esp+648h+var_365], dl
mov     [esp+648h+var_364], esi
mov     [esp+648h+var_36e], 1
mov     [esp+648h+var_367], 9
mov     [esp+648h+var_360], al
mov     [esp+648h+var_35d], dl
mov     [esp+648h+var_35c], esi
mov     [esp+648h+var_358], al
mov     [esp+648h+var_366], 1
mov     [esp+648h+var_35f], 9
mov     [esp+648h+var_355], dl
mov     [esp+648h+var_354], esi
mov     [esp+648h+var_35e], 1
mov     [esp+648h+var_350], bl
mov     [esp+648h+var_34e], dl
mov     [esp+648h+var_357], 9
mov     [esp+648h+var_356], 1
mov     [esp+648h+var_34f], 1
mov     [esp+648h+var_34c], ebx
mov     [esp+648h+var_346], dl
mov     [esp+648h+var_34d], 0ch
mov     [esp+648h+var_348], 1
mov     [esp+648h+var_347], 1
mov     [esp+648h+var_345], 0ch
mov     [esp+648h+var_344], ebx
mov     [esp+648h+var_33f], dl
mov     [esp+648h+var_33d], bl
mov     [esp+648h+var_33c], ebx
mov     [esp+648h+var_338], bl
mov     [esp+648h+var_337], dl
mov     [esp+648h+var_335], bl
mov     [esp+648h+var_334], ebx
mov     [esp+648h+var_330], al
mov     [esp+648h+var_340], 1
mov     [esp+648h+var_33e], 40h
mov     [esp+648h+var_32d], bl
mov     [esp+648h+var_32c], ebx
mov     [esp+648h+var_336], 40h
mov     [esp+648h+var_32f], 9
mov     [esp+648h+var_328], bl
mov     [esp+648h+var_325], cl
mov     [esp+648h+var_32e], 41h
mov     [esp+648h+var_324], edi
mov     [esp+648h+var_31f], cl
mov     [esp+648h+var_31e], bl
mov     [esp+648h+var_31d], cl
mov     [esp+648h+var_327], 9
mov     [esp+648h+var_31c], ebp
mov     [esp+648h+var_317], cl
mov     [esp+648h+var_316], bl
mov     [esp+648h+var_315], cl
mov     [esp+648h+var_326], 6
mov     [esp+648h+var_314], ebp
mov     [esp+648h+var_30f], cl
mov     [esp+648h+var_30e], bl
mov     [esp+648h+var_30d], cl
mov     [esp+648h+var_320], 1
mov     [esp+648h+var_308], al
mov     [esp+648h+var_307], dl
mov     [esp+648h+var_318], 1
mov     [esp+648h+var_305], bl
mov     [esp+648h+var_304], ebx
mov     [esp+648h+var_310], 1
mov     [esp+648h+var_30c], 3e8h
mov     [esp+648h+var_2ff], al
mov     [esp+648h+var_2fd], cl
mov     [esp+648h+var_306], 40h
mov     [esp+648h+var_300], 1
mov     [esp+648h+var_2fe], 1
mov     [esp+648h+var_2fc], edi
mov     [esp+648h+var_2f5], bl
mov     [esp+648h+var_2f8], 1
mov     [esp+648h+var_2f7], 6
mov     [esp+648h+var_2f6], 40h
mov     [esp+648h+var_2f4], ebx
mov     [esp+648h+var_2ed], bl
mov     [esp+648h+var_2ec], ebx
mov     [esp+648h+var_2e8], al
mov     [esp+648h+var_2f0], 1
mov     [esp+648h+var_2ef], 6
mov     [esp+648h+var_2e6], cl
mov     [esp+648h+var_2e4], ebx
mov     [esp+648h+var_2ee], 40h
mov     [esp+648h+var_2e7], 2
mov     [esp+648h+var_2e5], 2
mov     [esp+648h+var_2e0], 1
mov     [esp+648h+var_2de], cl
mov     [esp+648h+var_2dd], bl
mov     [esp+648h+var_2dc], ebx
mov     [esp+648h+var_2d6], bl
mov     [esp+648h+var_2d5], bl
mov     [esp+648h+var_2d4], ebx
mov     [esp+648h+var_2df], 2
mov     [esp+648h+var_2cf], dl
mov     [esp+648h+var_2ce], bl
mov     [esp+648h+var_2d8], 1
mov     [esp+648h+var_2d7], 7
mov     [esp+648h+var_2d0], 1
mov     [esp+648h+var_2cd], cl
mov     [esp+648h+var_2c6], bl
mov     [esp+648h+var_2c5], bl
mov     [esp+648h+var_2c4], ebx
mov     [esp+648h+var_2cc], 3e8h
mov     [esp+648h+var_2c8], 1
mov     [esp+648h+var_2c7], 7
mov     [esp+648h+var_2c0], al
mov     [esp+648h+var_2bc], esi
mov     [esp+648h+var_2bf], 9
mov     [esp+648h+var_2b8], bl
mov     [esp+648h+var_2b6], bl
mov     [esp+648h+var_2b5], bl
mov     [esp+648h+var_2b4], ebx
mov     [esp+648h+var_2be], 1
mov     [esp+648h+var_2bd], 10h
mov     [esp+648h+var_2ae], bl
mov     [esp+648h+var_2ad], bl
mov     [esp+648h+var_2b7], 7
mov     [esp+648h+var_2ac], ebx
mov     [esp+648h+var_2a7], dl
mov     [esp+648h+var_2a6], bl
mov     [esp+648h+var_2a5], bl
mov     [esp+648h+var_2a4], ebx
mov     [esp+648h+var_2a0], bl
mov     [esp+648h+var_2b0], 1
mov     [esp+648h+var_29e], bl
mov     [esp+648h+var_29d], bl
mov     [esp+648h+var_29c], ebx
mov     [esp+648h+var_298], bl
mov     [esp+648h+var_2af], 63h
mov     [esp+648h+var_296], bl
mov     [esp+648h+var_295], bl
mov     [esp+648h+var_2a8], 1
mov     [esp+648h+var_29f], 7
mov     [esp+648h+var_297], 63h
mov     [esp+648h+var_294], ebx
mov     [esp+648h+var_28d], bl
mov     [esp+648h+var_290], 1
mov     [esp+648h+var_28f], 63h
mov     [esp+648h+var_28e], 40h
mov     [esp+648h+var_28c], ebx
mov     [esp+648h+var_285], bl
mov     [esp+648h+var_284], ebx
mov     [esp+648h+var_280], al
mov     [esp+648h+var_288], 1
mov     [esp+648h+var_287], 63h
mov     [esp+648h+var_286], 40h
mov     [esp+648h+var_27f], al
mov     [esp+648h+var_27d], cl
mov     [esp+648h+var_27c], edi
mov     [esp+648h+var_278], al
mov     [esp+648h+var_277], al
mov     [esp+648h+var_275], cl
mov     [esp+648h+var_274], edi
mov     [esp+648h+var_270], al
mov     [esp+648h+var_26f], dl
mov     [esp+648h+var_27e], 1
mov     [esp+648h+var_26e], bl
mov     [esp+648h+var_268], al
mov     [esp+648h+var_267], dl
mov     [esp+648h+var_266], bl
mov     [esp+648h+var_276], 1
mov     [esp+648h+var_26d], 8
mov     [esp+648h+var_26c], 10011h
mov     [esp+648h+var_264], ebx
mov     [esp+648h+var_25e], bl
mov     [esp+648h+var_25d], bl
mov     [esp+648h+var_25c], ebx
mov     [esp+648h+var_265], 6
mov     [esp+648h+var_258], bl
mov     [esp+648h+var_256], bl
mov     [esp+648h+var_255], bl
mov     [esp+648h+var_254], ebx
mov     [esp+648h+var_260], 1
mov     [esp+648h+var_25f], 7
mov     [esp+648h+var_257], 7
mov     [esp+648h+var_24e], dl
mov     [esp+648h+var_24c], ebx
mov     [esp+648h+var_250], 1
mov     [esp+648h+var_24f], 1
mov     [esp+648h+var_24d], 0ch
mov     [esp+648h+var_245], bl
mov     [esp+648h+var_244], ebx
mov     [esp+648h+var_248], 1
mov     [esp+648h+var_247], 63h
mov     [esp+648h+var_23e], bl
mov     [esp+648h+var_23d], bl
mov     [esp+648h+var_23c], ebx
mov     [esp+648h+var_238], al
mov     [esp+648h+var_237], dl
mov     [esp+648h+var_236], bl
mov     [esp+648h+var_246], 40h
mov     [esp+648h+var_240], 1
mov     [esp+648h+var_23f], 63h
mov     [esp+648h+var_22f], dl
mov     [esp+648h+var_22e], bl
mov     [esp+648h+var_22d], bl
mov     [esp+648h+var_22c], ebx
mov     [esp+648h+var_235], 1
mov     [esp+648h+var_228], bl
mov     [esp+648h+var_226], bl
mov     [esp+648h+var_234], 2081h
mov     [esp+648h+var_230], 1
mov     [esp+648h+var_220], bl
mov     [esp+648h+var_21f], dl
mov     [esp+648h+var_227], 1
mov     [esp+648h+var_225], 1
mov     [esp+648h+var_224], 2083h
mov     [esp+648h+var_21e], bl
mov     [esp+648h+var_21d], bl
mov     [esp+648h+var_21c], ebx
mov     [esp+648h+var_218], bl
mov     [esp+648h+var_217], dl
mov     [esp+648h+var_216], bl
mov     [esp+648h+var_215], bl
mov     [esp+648h+var_214], ebx
mov     [esp+648h+var_20f], dl
mov     [esp+648h+var_20e], bl
mov     [esp+648h+var_20d], bl
mov     [esp+648h+var_20c], ebx
mov     [esp+648h+var_208], bl
mov     [esp+648h+var_210], 1
mov     [esp+648h+var_206], bl
mov     [esp+648h+var_200], bl
mov     [esp+648h+var_207], 1
mov     [esp+648h+var_205], 1
mov     [esp+648h+var_204], 2087h
mov     [esp+648h+var_1ff], 1
mov     [esp+648h+var_1fe], 2
mov     [esp+648h+var_1fd], 1
mov     [esp+648h+var_1fc], 2088h
mov     [esp+648h+var_1f8], 2
mov     [esp+648h+var_1f6], 40h
mov     [esp+648h+var_1f5], 1
mov     [esp+648h+var_1f4], 2089h
mov     [esp+648h+var_1f0], 1
mov     [esp+648h+var_1f7], dl
mov     [esp+648h+var_1ec], ebx
mov     [esp+648h+var_1ef], 1
mov     [esp+648h+var_1ee], 1
mov     [esp+648h+var_1ed], 0fh
mov     [esp+648h+var_1e8], 1
mov     [esp+648h+var_1e7], 1
mov     [esp+648h+var_1e6], 1
mov     [esp+648h+var_1e5], 0fh
mov     [esp+648h+var_1e0], 1
mov     [esp+648h+var_1e4], ebx
mov     [esp+648h+var_1dc], ebx
mov     [esp+648h+var_1df], 1
mov     [esp+648h+var_1de], 1
mov     [esp+648h+var_1dd], 0fh
mov     [esp+648h+var_1d8], 1
mov     [esp+648h+var_1d4], ebx
mov     [esp+648h+var_1d0], al
mov     [esp+648h+var_1d7], 1
mov     [esp+648h+var_1d6], 1
mov     [esp+648h+var_1cd], bl
mov     [esp+648h+var_1cc], ebx
mov     [esp+648h+var_1d5], 0fh
mov     [esp+648h+var_1c8], bl
mov     [esp+648h+var_1c6], bl
mov     [esp+648h+var_1c5], bl
mov     [esp+648h+var_1c4], ebx
mov     [esp+648h+var_1cf], 1
mov     [esp+648h+var_1ce], 42h
mov     [esp+648h+var_1c7], 63h
mov     [esp+648h+var_1c0], 1
mov     [esp+648h+var_1bf], 1
mov     [esp+648h+var_1be], 2
mov     [esp+648h+var_1bd], 0ch
mov     [esp+648h+var_1b8], 1
mov     [esp+648h+var_1bc], ebx
mov     [esp+648h+var_1b4], ebx
mov     [esp+648h+var_1b7], 1
mov     [esp+648h+var_1b6], 2
mov     [esp+648h+var_1b5], 0ch
mov     [esp+648h+var_1b0], al
mov     [esp+648h+var_1ac], ebx
mov     [esp+648h+var_1af], 1
mov     [esp+648h+var_1a8], bl
mov     [esp+648h+var_1a6], bl
mov     [esp+648h+var_1a5], bl
mov     [esp+648h+var_1a4], ebx
mov     [esp+648h+var_1ae], 2
mov     [esp+648h+var_1a0], bl
mov     [esp+648h+var_19e], bl
mov     [esp+648h+var_19d], bl
mov     [esp+648h+var_19c], ebx
mov     [esp+648h+var_1ad], 0ch
mov     [esp+648h+var_198], bl
mov     [esp+648h+var_196], bl
mov     [esp+648h+var_195], bl
mov     [esp+648h+var_194], ebx
mov     [esp+648h+var_1a7], 63h
mov     [esp+648h+var_190], bl
mov     [esp+648h+var_18e], bl
mov     [esp+648h+var_18d], bl
mov     [esp+648h+var_18c], ebx
mov     [esp+648h+var_19f], 63h
mov     [esp+648h+var_188], bl
mov     [esp+648h+var_186], bl
mov     [esp+648h+var_185], bl
mov     [esp+648h+var_184], ebx
mov     [esp+648h+var_197], 63h
mov     [esp+648h+var_180], bl
mov     [esp+648h+var_17e], bl
mov     [esp+648h+var_18f], 63h
mov     [esp+648h+var_187], 63h
mov     [esp+648h+var_17f], 1
mov     [esp+648h+var_17d], 1
mov     [esp+648h+var_17c], 2098h
mov     [esp+648h+var_178], 1
mov     [esp+648h+var_177], 1
mov     [esp+648h+var_176], bl
mov     [esp+648h+var_16f], dl
mov     [esp+648h+var_175], 1
mov     [esp+648h+var_16d], bl
mov     [esp+648h+var_16c], ebx
mov     [esp+648h+var_174], 2099h
mov     [esp+648h+var_170], 1
mov     [esp+648h+var_16e], 40h
mov     [esp+648h+var_168], 1
mov     [esp+648h+var_167], 6
mov     [esp+648h+var_166], 1
mov     [esp+648h+var_165], 1
mov     [esp+648h+var_164], 209bh
mov     [esp+648h+var_160], 1
mov     [esp+648h+var_15f], 9
mov     [esp+648h+var_15e], 40h
mov     [esp+648h+var_15d], bl
mov     [esp+648h+var_15c], ebx
mov     [esp+648h+var_158], al
mov     [esp+648h+var_157], dl
mov     [esp+648h+var_156], bl
mov     [esp+648h+var_154], ebx
mov     [esp+648h+var_150], bl
mov     [esp+648h+var_14e], bl
mov     [esp+648h+var_155], 16h
mov     [esp+648h+var_14f], 1
mov     [esp+648h+var_148], bl
mov     [esp+648h+var_146], bl
mov     [esp+648h+var_14d], 1
mov     [esp+648h+var_14c], 209eh
mov     [esp+648h+var_147], 1
mov     [esp+648h+var_145], 1
mov     [esp+648h+var_144], 209fh
mov     [esp+648h+var_140], 1
mov     [esp+648h+var_13e], bl
mov     [esp+648h+var_138], bl
mov     [esp+648h+var_13f], 1
mov     [esp+648h+var_13d], 1
mov     [esp+648h+var_13c], 20a0h
mov     [esp+648h+var_137], 7
mov     [esp+648h+var_130], al
mov     [esp+648h+var_12f], dl
mov     [esp+648h+var_136], 40h
mov     [esp+648h+var_12e], bl
mov     [esp+648h+var_12c], ebx
mov     [esp+648h+var_128], al
mov     [esp+648h+var_127], dl
mov     [esp+648h+var_135], 1
mov     [esp+648h+var_126], bl
mov     [esp+648h+var_124], ebx
mov     [esp+648h+var_134], 20a1h
mov     [esp+648h+var_12d], 6
mov     [esp+648h+var_125], 6
mov     [esp+648h+var_120], 1
mov     [esp+648h+var_11f], 8
mov     [esp+648h+var_11e], 7
mov     [esp+648h+var_11d], 12h
mov     [esp+648h+var_118], 1
mov     [esp+648h+var_11c], ebx
mov     [esp+648h+var_114], ebx
mov     [esp+648h+var_117], 8
mov     [esp+648h+var_116], 7
mov     [esp+648h+var_115], 12h
mov     [esp+648h+var_110], 1
mov     [esp+648h+var_10f], 8
mov     [esp+648h+var_10e], 7
mov     [esp+648h+var_10d], 12h
mov     [esp+648h+var_10c], ebx
mov     [esp+648h+var_105], bl
mov     [esp+648h+var_108], 1
mov     [esp+648h+var_107], 8
mov     [esp+648h+var_104], ebx
mov     [esp+648h+var_fe], bl
mov     [esp+648h+var_106], 1
mov     [esp+648h+var_100], 1
mov     [esp+648h+var_ff], 8
mov     [esp+648h+var_fd], 17h
mov     [esp+648h+var_fc], ebx
mov     [esp+648h+var_f8], 1
mov     [esp+648h+var_f6], bl
mov     [esp+648h+var_f4], ebx
mov     [esp+648h+var_f7], 8
mov     [esp+648h+var_f5], 17h
mov     [esp+648h+var_ee], bl
mov     [esp+648h+var_ec], ebx
mov     [esp+648h+var_f0], 1
mov     [esp+648h+var_ef], 8
mov     [esp+648h+var_e6], bl
mov     [esp+648h+var_e5], bl
mov     [esp+648h+var_e4], ebx
mov     [esp+648h+var_e0], bl
mov     [esp+648h+var_ed], 17h
mov     [esp+648h+var_e8], 1
mov     [esp+648h+var_de], bl
mov     [esp+648h+var_dc], ebx
mov     [esp+648h+var_e7], 9
mov     [esp+648h+var_df], 9
mov     [esp+648h+var_dd], 13h
mov     [esp+648h+var_d8], 1
mov     [esp+648h+var_d4], ebx
mov     [esp+648h+var_d0], bl
mov     [esp+648h+var_d7], 9
mov     [esp+648h+var_d6], 1
mov     [esp+648h+var_cd], bl
mov     [esp+648h+var_cc], ebx
mov     [esp+648h+var_d5], 13h
mov     [esp+648h+var_cf], 8
mov     [esp+648h+var_ce], 40h
mov     [esp+648h+var_c7], dl
mov     [esp+648h+var_c4], esi
mov     [esp+648h+var_c0], al
mov     [esp+648h+var_bf], dl
mov     [esp+648h+var_c8], 1
mov     [esp+648h+var_c6], 1
mov     [esp+648h+var_c5], 15h
mov     [esp+648h+var_bc], esi
mov     [esp+648h+var_b7], dl
mov     [esp+648h+var_be], 1
mov     [esp+648h+var_bd], 16h
mov     [esp+648h+var_b8], 1
mov     [esp+648h+var_b6], 1
mov     [esp+648h+var_b5], 1
mov     [esp+648h+var_b4], 20b1h
mov     [esp+648h+var_ad], al
mov     [esp+648h+var_ac], esi
mov     [esp+648h+var_b0], 1
mov     [esp+648h+var_af], 9
mov     [esp+648h+var_ae], 1
mov     [esp+648h+var_a5], al
mov     [esp+648h+var_a4], esi
mov     [esp+648h+var_a8], 1
mov     [esp+648h+var_a7], 9
mov     [esp+648h+var_a6], 1
mov     [esp+648h+var_9d], al
mov     [esp+648h+var_9c], esi
mov     [esp+648h+var_a0], 1
mov     [esp+648h+var_9f], 9
mov     [esp+648h+var_9e], 1
mov     [esp+648h+var_98], 1
mov     [esp+648h+var_97], 9
mov     [esp+648h+var_95], al
mov     [esp+648h+var_94], esi
mov     [esp+648h+var_96], 1
mov     [esp+648h+var_8d], cl
mov     [esp+648h+var_8c], edi
mov     [esp+648h+var_90], 1
mov     [esp+648h+var_88], al
mov     [esp+648h+var_86], cl
mov     [esp+648h+var_8f], 63h
mov     [esp+648h+var_84], ebx
mov     [esp+648h+var_80], bl
mov     [esp+648h+var_8e], 1
mov     [esp+648h+var_7e], bl
mov     [esp+648h+var_7d], bl
mov     [esp+648h+var_87], 2
mov     [esp+648h+var_85], 0eh
mov     [esp+648h+var_7f], 7
mov     [esp+648h+var_7c], ebx
mov     [esp+648h+var_75], bl
mov     [esp+648h+var_74], ebx
mov     [esp+648h+var_70], bl
mov     [esp+648h+var_78], 1
mov     [esp+648h+var_77], 8
mov     [esp+648h+var_6d], bl
mov     [esp+648h+var_6c], ebx
mov     [esp+648h+var_76], 1
mov     [esp+648h+var_6f], 8
mov     [esp+648h+var_68], al
mov     [esp+648h+var_65], bl
mov     [esp+648h+var_6e], 40h
mov     [esp+648h+var_67], 1
mov     [esp+648h+var_66], 41h
mov     [esp+648h+var_64], ebx
mov     [esp+648h+var_5d], bl
mov     [esp+648h+var_5c], ebx
mov     [esp+648h+var_58], bl
mov     [esp+648h+var_60], 1
mov     [esp+648h+var_5f], 9
mov     [esp+648h+var_55], bl
mov     [esp+648h+var_54], ebx
mov     [esp+648h+var_5e], 1
mov     [esp+648h+var_4f], dl
mov     [esp+648h+var_4e], bl
mov     [esp+648h+var_4d], bl
mov     [esp+648h+var_4c], ebx
mov     [esp+648h+var_57], 9
mov     [esp+648h+var_47], dl
mov     [esp+648h+var_46], bl
mov     [esp+648h+var_45], bl
mov     [esp+648h+var_44], ebx
mov     [esp+648h+var_40], bl
mov     [esp+648h+var_3f], dl
mov     [esp+648h+var_3e], bl
mov     [esp+648h+var_3d], bl
mov     [esp+648h+var_56], 1
mov     [esp+648h+var_3c], ebx
mov     [esp+648h+var_37], dl
mov     [esp+648h+var_50], 1
mov     [esp+648h+var_48], 1
mov     [esp+648h+var_38], 1
mov     [esp+648h+var_36], bl
mov     [esp+648h+var_35], bl
mov     [esp+648h+var_34], ebx
mov     [esp+648h+var_30], bl
mov     [esp+648h+var_2f], dl
mov     [esp+648h+var_2e], bl
mov     [esp+648h+var_2d], bl
mov     [esp+648h+var_2c], ebx
mov     [esp+648h+var_25], bl
mov     [esp+648h+var_28], 1
mov     [esp+648h+var_27], 7
mov     [esp+648h+var_26], 40h
mov     [esp+648h+var_24], ebx
mov     [esp+648h+var_1d], bl
mov     [esp+648h+var_20], 1
mov     [esp+648h+var_1f], 7
mov     [esp+648h+var_1c], ebx
mov     [esp+648h+var_16], bl
mov     [esp+648h+var_15], bl
mov     [esp+648h+var_14], ebx
mov     [esp+648h+var_1e], 40h
mov     [esp+648h+var_10], bl
mov     [esp+648h+var_e], bl
mov     [esp+648h+var_d], bl
mov     [esp+648h+var_c], ebx
mov     [esp+648h+var_18], 1
mov     [esp+648h+var_17], 63h
mov     [esp+648h+var_8], bl
mov     [esp+648h+var_5], bl
mov     [esp+648h+var_f], 63h
mov     [esp+648h+var_4], ebx
push    638h
mov     [esp+64ch+var_7], 63h
mov     [esp+64ch+var_6], 40h
mov     ds:word_4a9b90, 0c7h
lea     ecx, [esp+64ch+var_638]
push    ecx
call    sub_45bd80
add     esp, 8
mov     ds:dword_4a9b80, eax
test    eax, eax
jz      short loc_4825fc
call    sub_42f350
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 638h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 638h
retn
mov     ax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     ax, 2001h
movsx   eax, ax
shl     eax, 3
add     eax, ds:dword_4a9b80
mov     edx, [eax]
mov     eax, [eax+4]
mov     [ecx], edx
mov     [ecx+4], eax
retn
mov     ax, [esp+arg_0]
mov     ecx, ds:dword_4a9b80
sub     ax, 2001h
movsx   edx, ax
mov     al, [ecx+edx*8+2]
and     al, 40h
cmp     al, 1
sbb     eax, eax
inc     eax
retn
mov     ax, [esp+arg_0]
mov     ecx, ds:dword_4a9b80
sub     ax, 2001h
movsx   edx, ax
mov     al, [ecx+edx*8+1]
sub     al, 62h
cmp     al, 1
sbb     eax, eax
neg     eax
retn
sub     esp, 2ch
mov     eax, ds:dword_4a9b94
test    eax, eax
push    esi
push    edi
jz      short loc_4826c4
push    offset dword_4a9b88
call    sub_454030
add     esp, 4
test    eax, eax
jz      short loc_4826b0
push    offset dword_4a9b88
call    sub_453fe0
add     esp, 4
xor     eax, eax
jmp     short loc_4826c4
push    0
push    offset dword_4a9b88
call    sub_454010
add     esp, 8
mov     eax, ds:dword_4a9b94
mov     ds:dword_4a9b94, eax
test    eax, eax
jnz     short loc_48272e
push    0c6h
push    offset dword_4a9b88
call    sub_453f90
add     esp, 8
test    eax, eax
mov     eax, ds:dword_4a9b94
jz      short loc_48272e
mov     si, 2001h
mov     edi, ds:charlowera
lea     eax, [esp+34h+sz]
push    29h
push    eax
push    esi
call    sub_482840
add     esp, 0ch
test    eax, eax
jle     short loc_482720
lea     eax, [esp+34h+sz]
push    eax
call    edi
lea     eax, [esp+34h+sz]
push    esi
push    eax
push    offset dword_4a9b88
call    sub_454040
add     esp, 0ch
inc     si
cmp     si, 20c6h
jle     short loc_4826f2
mov     eax, 1
pop     edi
mov     ds:dword_4a9b94, eax
pop     esi
add     esp, 2ch
retn
mov     ecx, dword ptr [esp+arg_4]
sub     esp, 2ch
lea     eax, [esp+2ch+string2]
push    29h
push    eax
push    ecx
call    sub_482840
add     esp, 0ch
test    eax, eax
jz      short loc_482776
lea     eax, [esp+2ch+string2]
mov     ecx, [esp+2ch+lpstring1]
push    eax
push    ecx
call    ds:lstrcmpia
cmp     eax, 1
sbb     eax, eax
add     esp, 2ch
neg     eax
retn
xor     eax, eax
add     esp, 2ch
retn
sub     esp, 2ch
push    ebx
push    esi
xor     bx, bx
push    edi
push    ebp
call    sub_482680
test    eax, eax
jz      short loc_4827ea
mov     esi, [esp+3ch+lpstring1]
push    2ah
lea     eax, [esp+40h+sz]
push    esi
push    eax
call    sub_47f9f0
lea     eax, [esp+48h+sz]
add     esp, 0ch
mov     ebx, ds:charlowera
push    eax
call    ebx
lea     ecx, [esp+3ch+sz]
push    0
push    offset sub_482740
push    ecx
push    offset dword_4a9b88
call    sub_4540a0
mov     bx, ax
add     esp, 10h
push    1
push    offset dword_4a9b88
call    sub_454010
mov     ax, bx
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
xor     di, di
mov     esi, [esp+3ch+lpstring1]
mov     ebp, ds:lstrcmpia
lea     eax, [esp+3ch+sz]
push    edi
push    270h
push    2ah
push    eax
call    sub_47fe70
lea     eax, [esp+4ch+sz]
add     esp, 10h
push    eax
push    esi
call    ebp
test    eax, eax
jz      short loc_48282c
inc     di
cmp     di, 0c5h
jle     short loc_4827f7
mov     ax, bx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
lea     ebx, [edi+2001h]
pop     ebp
mov     ax, bx
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
mov     ax, [esp+arg_0]
mov     ecx, [esp+cchbuffermax]
sub     ax, 2001h
mov     edx, [esp+lpbuffer]
push    eax
push    270h
push    ecx
push    edx
call    sub_47fe70
add     esp, 10h
retn
movsx   eax, [esp+arg_0]
push    esi
sub     eax, 2001h
mov     esi, [esp+4+arg_4]
cmp     eax, 66h
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+4], 0
mov     word ptr [esi], 1
jnz     short loc_4828b8
push    2000308h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
movzx   ecx, ax
add     esp, 8
mov     [esi+8], ecx
pop     esi
retn
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+arg_c]
push    edi
call    sub_41afc0
mov     bp, [esp+14h+arg_4]
add     esp, 4
sub     bp, 2001h
mov     word ptr [edi], 1
js      def_482988
cmp     bp, ds:word_4a9b90
jge     def_482988
mov     eax, ds:dword_4a9b80
movsx   ebx, bp
lea     ecx, [eax+ebx*8]
cmp     byte ptr [ecx+1], 62h
jnz     short loc_482913
push    30h
call    sub_45c150
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
mov     al, [ecx]
test    eax, eax
jz      short loc_482922
cmp     eax, 2
jz      short loc_482930
jmp     short loc_482935
mov     dword ptr [edi+0ah], 1
mov     word ptr [edi], 0
jmp     short loc_482935
mov     word ptr [edi], 2
mov     eax, ds:dword_4a9b80
mov     al, [eax+ebx*8+2]
and     al, 0fh
jz      short loc_48295f
mov     esi, [esp+10h+arg_8]
push    eax
mov     eax, [esp+14h+arg_0]
push    esi
push    ebx
push    eax
call    sub_483d40
add     esp, 10h
mov     esi, eax
test    si, si
jz      short def_482988
jmp     short loc_482963
mov     esi, [esp+10h+arg_8]
mov     ax, bp
push    edi
add     ax, 2001h
push    eax
call    sub_43d150
add     esp, 8
test    eax, eax
jnz     short def_482988
mov     ecx, ds:dword_4a9b80
xor     eax, eax
mov     al, [ecx+ebx*8]
cmp     eax, 5
ja      short def_482988
jmp     ds:jpt_482988[eax*4]
push    edi
push    esi
push    ebp
call    sub_484e50
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    ebp
call    sub_484ba0
add     esp, 8
mov     [edi+8], eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    ebx
call    sub_483550
fstp    qword ptr [edi+8]
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 30h
push    ebx
push    esi
push    edi
mov     di, [esp+3ch+arg_0]
movsx   ebx, di
lea     eax, [ebx-1]
cmp     eax, 0c3h
ja      short def_482a00
xor     ecx, ecx
mov     cl, ds:byte_483414[eax]
jmp     ds:jpt_482a00[ecx*4]
add     di, 2001h
lea     eax, [esp+3ch+rcdst]
push    eax
push    edi
call    sub_442a60
lea     eax, [esp+44h+rcdst]
add     esp, 8
push    1
push    eax
call    sub_41aa60
mov     eax, [esp+44h+rcdst.right]
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_4269b0
add     esp, 4
movsx   eax, ax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     ebx, ebx
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_4432f0
add     esp, 4
mov     edi, eax
cmp     edi, ebx
jz      short loc_482a75
push    edi
call    sub_47b1a0
add     esp, 4
mov     ebx, eax
push    edi
push    esi
call    sub_443310
add     esp, 8
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_4633f0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    _iswlower
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_426ac0
add     esp, 4
movsx   eax, ax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     eax, eax
mov     [esp+3ch+point.y], eax
mov     [esp+3ch+point.x], eax
cmp     ds:frequency, eax
jz      short loc_482aee
lea     eax, [esp+3ch+point]
push    eax
call    sub_474df0
lea     eax, [esp+40h+point]
add     esp, 4
mov     ecx, ds:frequency
push    eax
push    ecx
call    ds:clienttoscreen
cmp     di, 10h
mov     eax, [esp+3ch+point.x]
jz      loc_4832c9
mov     eax, [esp+3ch+point.y]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_483f00
add     esp, 4
test    eax, eax
jz      short loc_482b28
push    eax
call    sub_4633f0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     edi, edi
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_461cc0
add     esp, 4
test    eax, eax
jz      short loc_482b65
xor     ebx, ebx
mov     ecx, ds:dword_4a6770+2
movsx   edx, ax
mov     esi, [ecx]
cmp     [esi+edx*4+6], bl
jz      short loc_482b58
inc     edi
push    eax
call    sub_461c50
add     esp, 4
test    eax, eax
jnz     short loc_482b46
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     ebx, ebx
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_4432f0
add     esp, 4
mov     edi, eax
cmp     edi, ebx
jz      short loc_482b98
push    edi
call    sub_45b4f0
add     esp, 4
mov     ebx, eax
push    edi
push    esi
call    sub_443310
add     esp, 8
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     edi, edi
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_4432f0
add     esp, 4
mov     ebx, eax
cmp     ebx, edi
jz      short loc_482bc9
push    ebx
call    ds:lstrlena
mov     edi, eax
push    ebx
push    esi
call    sub_443310
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
movsx   edx, [esp+3ch+c]
mov     eax, ds:dword_4a6770+2
pop     edi
pop     esi
pop     ebx
mov     ecx, [eax]
xor     eax, eax
mov     ax, [ecx+edx*4+6]
add     esp, 30h
and     eax, 0ffh
retn
movsx   ecx, [esp+3ch+c]
mov     eax, ds:dword_4a6770+2
pop     edi
pop     esi
pop     ebx
mov     edx, [eax]
mov     ax, [edx+ecx*4+4]
add     esp, 30h
and     ax, 200h
shr     ax, 9
movzx   eax, ax
retn
mov     eax, ds:dword_4a6770+2
movsx   ecx, [esp+3ch+c]
mov     edx, [eax]
pop     edi
mov     ax, [edx+ecx*4+4]
pop     esi
and     ax, 6000h
pop     ebx
shr     ax, 0dh
add     esp, 30h
movzx   ecx, ax
xor     eax, eax
mov     al, byte_4ae9c4[ecx]
retn
lea     eax, [esp+3ch+rcdst]
push    eax
call    sub_43ba90
mov     eax, [esp+40h+rcdst.left]
add     esp, 4
and     eax, 0ffffh
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
lea     eax, [esp+3ch+rcdst]
lea     ecx, [esp+3ch+point]
push    eax
push    ecx
call    sub_429420
add     esp, 8
cmp     di, 7ah
jz      loc_4832c9
cmp     di, 2ch
mov     eax, [esp+3ch+point.x]
jz      loc_4832c9
mov     eax, [esp+3ch+point.y]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
push    ebx
call    sub_484f00
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     eax, eax
pop     edi
mov     ax, word ptr ds:dword_4a68cc
pop     esi
pop     ebx
add     esp, 30h
retn
mov     eax, dword ptr [esp+3ch+c]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_484ff0
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_485000
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
lea     eax, [esp+3ch+rcdst]
mov     [esp+3ch+rcdst.left], esi
push    eax
mov     word ptr [esp+40h+rcdst.top], 0
mov     ecx, [esp+40h+rcdst.top]
mov     edx, [esp+40h+rcdst.left]
push    ecx
push    edx
call    sub_43b210
add     esp, 0ch
test    eax, eax
jz      short loc_482d77
sub     ebx, 55h
cmp     ebx, 5fh
ja      def_482d11
xor     eax, eax
mov     al, ds:byte_4834f0[ebx]
jmp     ds:jpt_482d11[eax*4]
lea     eax, [esp+3ch+point]
lea     ecx, [esp+3ch+rcdst]
push    eax
push    ecx
call    sub_473c30
mov     eax, [esp+44h+point.x]
add     esp, 8
cmp     di, 55h
jz      loc_4832c9
mov     eax, [esp+3ch+point.y]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+3ch+rcdst.top]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+3ch+rcdst.left]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+3ch+rcdst.right]
sub     eax, [esp+3ch+rcdst.left]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+3ch+rcdst.bottom]
sub     eax, [esp+3ch+rcdst.top]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     ebx, ebx
mov     esi, dword ptr [esp+3ch+c]
mov     word ptr [esp+3ch+rcdst.top], bx
mov     eax, [esp+3ch+rcdst.top]
push    eax
push    esi
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_482dd2
movsx   ecx, word ptr [eax]
cmp     di, 5ch
mov     eax, [ecx+eax-9ah]
jz      short loc_482db1
test    eax, eax
jz      short loc_482dbc
cmp     di, 5bh
jz      short loc_482dc3
cmp     eax, 1
jnz     short loc_482dc3
mov     ebx, 1
jmp     short loc_482dc5
xor     ebx, ebx
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_4624e0
add     esp, 4
dec     eax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_4367d0
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_48ae90
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_461cc0
add     esp, 4
test    eax, eax
jz      short loc_482e3d
mov     esi, 200h
mov     ecx, ds:dword_4a6770+2
movsx   edx, ax
mov     ebx, [ecx]
test    [ebx+edx*4+4], si
jz      short loc_482e49
push    eax
call    sub_461c50
add     esp, 4
test    eax, eax
jnz     short loc_482e1e
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_426a20
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     ax, ds:word_4a8518
push    eax
call    sub_472980
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_45bc10
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     ax, ds:word_4a8518
push    eax
call    sub_471bd0
add     esp, 4
push    edx
push    eax
call    sub_44a4a0
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
mov     eax, ds:dword_4a68c0
push    esi
push    eax
call    sub_463480
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_48aeb0
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_48aed0
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_461f70
add     esp, 4
push    eax
call    sub_426a80
add     esp, 4
sub     eax, esi
cmp     eax, 1
pop     edi
sbb     eax, eax
pop     esi
neg     eax
pop     ebx
add     esp, 30h
retn
call    sub_43e6b0
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_469a70
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     eax, ds:frequency
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
lea     eax, [esp+3ch+rcdst]
mov     esi, dword ptr [esp+3ch+c]
push    eax
push    esi
call    sub_424200
add     esp, 8
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, [esp+3ch+rcdst.top]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
lea     eax, [esp+3ch+rcdst]
mov     esi, dword ptr [esp+3ch+c]
push    eax
push    esi
call    sub_424200
add     esp, 8
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, [esp+3ch+rcdst.left]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
lea     eax, [esp+3ch+rcdst]
mov     esi, dword ptr [esp+3ch+c]
push    eax
push    esi
call    sub_424200
add     esp, 8
test    eax, eax
jnz     short loc_482f93
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+3ch+rcdst.bottom]
sub     eax, [esp+3ch+rcdst.top]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
lea     eax, [esp+3ch+rcdst]
mov     esi, dword ptr [esp+3ch+c]
push    eax
push    esi
call    sub_424200
add     esp, 8
test    eax, eax
jnz     short loc_482fc1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+3ch+rcdst.right]
sub     eax, [esp+3ch+rcdst.left]
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_426d50
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     ebx, ebx
xor     edi, edi
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_461cc0
add     esp, 4
mov     esi, eax
cmp     esi, ebx
jz      short loc_48302f
push    100020ch
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     short loc_483020
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
cmp     [edx+ecx*4+6], bl
jz      short loc_483020
inc     edi
push    esi
call    sub_461c50
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_482ffb
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     ebx, ebx
xor     edi, edi
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_461cc0
add     esp, 4
mov     esi, eax
cmp     esi, ebx
jz      short loc_483083
push    100020ch
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 2
jnz     short loc_483074
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
cmp     [edx+ecx*4+6], bl
jz      short loc_483074
inc     edi
push    esi
call    sub_461c50
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_48304f
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     edi, 1
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_461cc0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_4830e4
xor     ebx, ebx
push    100020ch
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     short loc_4830ca
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
cmp     [edx+ecx*4+6], bl
jz      short loc_4830e2
push    esi
call    sub_461c50
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_4830a6
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_436aa0
xor     ecx, ecx
pop     edi
mov     cx, ds:word_4a8518
pop     esi
shl     ecx, 10h
pop     ebx
movzx   eax, ax
or      eax, ecx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_484100
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_436980
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
push    0
call    sub_43a260
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
test    esi, esi
jnz     short loc_48314c
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
push    esi
call    _iswlower
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_426a80
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
test    esi, esi
jnz     short loc_483181
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
push    esi
call    sub_426a80
add     esp, 4
test    eax, eax
jz      short loc_48319e
push    eax
call    sub_4633f0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_433290
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_4354c0
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_4354d0
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_4354e0
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     eax, eax
pop     edi
mov     ax, ds:word_4a8518
pop     esi
shl     eax, 10h
pop     ebx
mov     al, 1
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_435180
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_484880
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_4848e0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_484960
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
push    esi
call    sub_426bd0
add     esp, 4
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_433280
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
movsx   ecx, [esp+3ch+c]
mov     eax, ds:dword_4a6770+2
pop     edi
pop     esi
pop     ebx
mov     edx, [eax]
mov     ax, [edx+ecx*4+6]
add     esp, 30h
and     ax, 400h
shr     ax, 0ah
movzx   eax, ax
retn
call    sub_485050
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_42f110
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
call    sub_42f130
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
mov     esi, dword ptr [esp+3ch+c]
mov     eax, ds:dword_4a6770+2
movsx   ecx, si
mov     edx, [eax]
mov     ax, [edx+ecx*4+4]
and     ax, 400h
shr     ax, 0ah
movzx   eax, ax
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn
sub     esp, 34h
push    esi
mov     esi, [esp+38h+arg_0]
lea     eax, [esi-0ah]
cmp     eax, 7eh
ja      short def_483568
xor     ecx, ecx
mov     cl, ds:byte_483744[eax]
jmp     ds:jpt_483568[ecx*4]
fld     ds:dbl_4ab838
pop     esi
add     esp, 34h
retn
mov     eax, [esp+38h+arg_4]
push    eax
call    sub_426c30
mov     dword ptr [esp+3ch+var_28], eax
add     esp, 4
fild    dword ptr [esp+38h+var_28]
pop     esi
add     esp, 34h
fmul    ds:dbl_4ab840
retn
lea     eax, [esp+38h+var_28]
push    eax
call    sub_43ba90
add     esp, 4
cmp     esi, 36h
jnz     short loc_4835d0
call    sub_409e60
sub     eax, [esp+38h+var_1a]
mov     dword ptr [esp+38h+var_28], eax
mov     dword ptr [esp+38h+var_28+4], 0
fild    [esp+38h+var_28]
pop     esi
add     esp, 34h
fmul    ds:dbl_4ab848
retn
cmp     dword ptr [esp+38h+var_28+6], 0
jz      short loc_4835fa
mov     eax, [esp+38h+var_1e]
sub     eax, dword ptr [esp+38h+var_28+6]
mov     dword ptr [esp+38h+var_28], eax
mov     dword ptr [esp+38h+var_28+4], 0
fild    [esp+38h+var_28]
pop     esi
add     esp, 34h
fmul    ds:dbl_4ab850
retn
fld     ds:dbl_4ab838
pop     esi
add     esp, 34h
retn
call    sub_43bbd0
mov     dword ptr [esp+38h+var_28], eax
mov     dword ptr [esp+38h+var_28+4], 0
fild    [esp+38h+var_28]
pop     esi
add     esp, 34h
fmul    ds:dbl_4ab858
retn
call    sub_409e60
mov     dword ptr [esp+38h+var_28], eax
mov     dword ptr [esp+38h+var_28+4], 0
fild    [esp+38h+var_28]
pop     esi
add     esp, 34h
fmul    ds:dbl_4ab840
retn
lea     eax, [esp+38h+var_34]
lea     ecx, [esp+38h+var_30]
push    eax
push    ecx
call    sub_429420
add     esp, 8
cmp     [esp+38h+var_34], 0
jz      short loc_48366a
call    ds:gettickcount
sub     eax, [esp+38h+var_34]
jmp     short loc_483680
lea     eax, [esp+38h+var_28]
push    eax
call    sub_43ba90
add     esp, 4
call    sub_409e60
sub     eax, [esp+38h+var_1a]
mov     dword ptr [esp+38h+var_28], eax
fild    dword ptr [esp+38h+var_28]
pop     esi
add     esp, 34h
fmul    ds:dbl_4ab840
retn
fld     ds:dbl_4ab860
pop     esi
add     esp, 34h
retn
fld     ds:dbl_4ab868
pop     esi
add     esp, 34h
retn
mov     eax, [esp+38h+arg_4]
push    eax
call    sub_42aef0
mov     dword ptr [esp+3ch+var_28], eax
add     esp, 4
mov     dword ptr [esp+38h+var_28+4], 0
fild    [esp+38h+var_28]
pop     esi
add     esp, 34h
fmul    ds:dbl_4ab840
retn
mov     eax, [esp+38h+arg_4]
push    eax
call    sub_426c60
mov     dword ptr [esp+3ch+var_28], eax
add     esp, 4
fild    dword ptr [esp+38h+var_28]
pop     esi
add     esp, 34h
fmul    ds:dbl_4ab840
retn
mov     eax, [esp+38h+arg_4]
push    esi
push    eax
call    sub_483f40
add     esp, 8
pop     esi
add     esp, 34h
retn
call    sub_42b030
pop     esi
add     esp, 34h
retn
sub     esp, 400h
mov     [esp+400h+buffer], 0
push    ebx
push    esi
mov     esi, [esp+408h+arg_8]
push    edi
mov     di, [esp+40ch+arg_0]
push    ebp
movsx   eax, di
mov     word ptr [esi], 0
cmp     eax, 0c5h
ja      short def_483805
xor     ecx, ecx
mov     cl, ds:byte_483c64[eax]
jmp     ds:jpt_483805[ecx*4]
add     di, 2001h
push    esi
push    edi
call    sub_442a60
add     esp, 8
push    0
push    esi
call    sub_41aa60
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 400h
retn
mov     edi, 1
jmp     short loc_483844
mov     edi, 2
jmp     short loc_483844
mov     edi, 3
mov     ebx, [esp+410h+arg_4]
push    ebx
call    sub_4432f0
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      loc_483bb6
push    esi
push    ebp
push    edi
call    sub_47b200
add     esp, 0ch
push    ebp
push    ebx
call    sub_443310
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 400h
retn
mov     ebx, [esp+410h+arg_4]
push    ebx
call    sub_4432f0
add     esp, 4
mov     edi, eax
test    edi, edi
jz      loc_483bb6
push    edi
push    esi
call    sub_41aec0
add     esp, 8
push    edi
push    ebx
call    sub_443310
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 400h
retn
mov     ebx, [esp+410h+arg_4]
push    ebx
call    sub_483f00
add     esp, 4
test    eax, eax
jz      loc_483bb6
lea     ecx, [esp+410h+buffer]
push    400h
push    ecx
push    eax
call    sub_486100
lea     eax, [esp+41ch+buffer]
add     esp, 0ch
push    7ch
push    eax
call    sub_45b630
add     esp, 8
test    eax, eax
jz      loc_483bb6
mov     byte ptr [eax], 0
jmp     loc_483bb6
lea     eax, [esp+410h+buffer]
push    400h
push    eax
call    sub_4694c0
jmp     loc_483bb3
lea     eax, [esp+410h+buffer]
push    400h
push    eax
call    sub_42f1c0
jmp     loc_483bb3
lea     eax, [esp+410h+buffer]
push    400h
push    eax
push    edi
call    sub_484720
add     esp, 0ch
jmp     loc_483bb6
call    sub_456b60
push    eax
push    400h
lea     eax, [esp+418h+buffer]
push    eax
call    sub_456b80
add     esp, 0ch
jmp     loc_483bb6
sub     di, 49h
cmp     di, 1
sbb     eax, eax
neg     eax
push    eax
call    sub_456b60
lea     ecx, [esp+414h+buffer]
push    eax
push    400h
push    ecx
call    sub_456fb0
add     esp, 10h
jmp     loc_483bb6
sub     di, 3bh
push    eax
call    sub_484f00
add     esp, 4
cmp     di, 1
push    eax
sbb     eax, eax
lea     ecx, [esp+414h+buffer]
and     eax, 10h
add     eax, 4a0h
push    eax
push    400h
push    ecx
call    sub_47fe70
add     esp, 10h
jmp     loc_483bb6
call    sub_456b60
push    eax
push    400h
lea     eax, [esp+418h+buffer]
push    eax
call    sub_456bd0
add     esp, 0ch
jmp     loc_483bb6
lea     eax, [esp+410h+buffer]
push    400h
push    eax
mov     ecx, ds:dword_4a68cc
push    ecx
push    2
call    sub_459010
add     esp, 10h
jmp     loc_483bb6
lea     eax, [esp+410h+buffer]
push    400h
push    eax
call    sub_489160
jmp     loc_483bb3
call    sub_484ff0
push    eax
push    546h
lea     eax, [esp+418h+buffer]
push    400h
push    eax
call    sub_47fe70
add     esp, 10h
jmp     loc_483bb6
call    sub_485000
push    eax
push    550h
lea     eax, [esp+418h+buffer]
push    400h
push    eax
call    sub_47fe70
add     esp, 10h
jmp     loc_483bb6
lea     eax, [esp+410h+buffer]
push    400h
mov     ebx, [esp+414h+arg_4]
push    eax
push    ebx
call    sub_486100
add     esp, 0ch
jmp     loc_483bb6
lea     eax, [esp+410h+buffer]
push    400h
push    eax
call    sub_42f2d0
jmp     loc_483bb3
lea     eax, [esp+410h+buffer]
push    400h
push    eax
call    sub_42f300
jmp     loc_483bb3
lea     eax, [esp+410h+buffer]
push    0
push    0
push    400h
push    eax
call    sub_47fe70
add     esp, 10h
jmp     loc_483bb6
push    esi
push    207ch
call    sub_442a60
add     esp, 8
push    1
push    esi
call    sub_41aa60
add     esp, 8
mov     eax, [esi+8]
push    400h
push    eax
call    sub_4698f0
add     esp, 4
push    eax
lea     eax, [esp+418h+buffer]
push    eax
call    sub_47f9f0
add     esp, 0ch
jmp     loc_483bb6
mov     [esp+410h+buffer], 9
mov     [esp+410h+var_3ff], 0
jmp     loc_483bb6
mov     [esp+410h+buffer], 0dh
mov     [esp+410h+var_3ff], 0
jmp     loc_483bb6
mov     ebx, [esp+410h+arg_4]
push    ebx
call    sub_426da0
add     esp, 4
test    eax, eax
jz      loc_483bb6
lea     ecx, [esp+410h+buffer]
push    400h
push    ecx
push    eax
call    sub_486100
add     esp, 0ch
jmp     short loc_483bb6
push    esi
call    sub_4849c0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 400h
retn
push    esi
call    sub_435210
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 400h
retn
lea     eax, [esp+410h+buffer]
push    400h
push    eax
call    sub_42f330
jmp     short loc_483bb3
lea     eax, [esp+410h+buffer]
push    400h
push    eax
call    sub_485010
jmp     short loc_483bb3
call    sub_485050
push    eax
push    1e80h
lea     eax, [esp+418h+buffer]
push    400h
push    eax
call    sub_47fe70
add     esp, 10h
jmp     short loc_483bb6
lea     eax, [esp+410h+buffer]
push    400h
push    eax
call    sub_42f360
add     esp, 8
lea     eax, [esp+410h+buffer]
push    eax
push    esi
call    sub_41aec0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 400h
retn
mov     eax, [esp+arg_0]
mov     dword_4ae9c8, eax
retn
push    esi
mov     esi, [esp+4+arg_8]
test    si, si
jnz     loc_483dfb
mov     esi, [esp+4+arg_0]
mov     eax, esi
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
mov     al, 2
push    eax
push    esi
call    sub_463480
add     esp, 8
test    eax, eax
jz      short loc_483d78
mov     eax, dword_4ae9c8
test    eax, eax
jz      short loc_483d78
mov     esi, eax
xor     eax, eax
mov     al, [esp+4+arg_c]
dec     eax
cmp     eax, 6
ja      short def_483d84
jmp     ds:jpt_483d84[eax*4]
xor     eax, eax
pop     esi
retn
mov     eax, esi
pop     esi
retn
call    sub_435440
pop     esi
retn
call    sub_435450
pop     esi
retn
mov     eax, [esp+4+arg_4]
cmp     eax, 0ch
jz      short loc_483dcd
cmp     eax, 5dh
jz      short loc_483dcd
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_483dcd
push    esi
call    sub_463590
add     esp, 4
test    eax, eax
jz      short loc_483dcd
mov     eax, esi
pop     esi
retn
call    sub_435440
push    eax
call    sub_426a80
add     esp, 4
pop     esi
retn
call    sub_435450
push    eax
call    sub_426a80
add     esp, 4
pop     esi
retn
mov     eax, ds:dword_4a68c0
pop     esi
retn
call    sub_435460
pop     esi
retn
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jnz     short loc_483e0c
xor     eax, eax
pop     esi
retn
xor     eax, eax
mov     al, [esp+4+arg_c]
sub     eax, 2
cmp     eax, 5
ja      short def_483e1a
jmp     ds:jpt_483e1a[eax*4]
mov     eax, esi
pop     esi
retn
push    esi
call    sub_462480
sub     ax, 4
add     esp, 4
cmp     ax, 1
sbb     eax, eax
and     eax, esi
pop     esi
retn
push    esi
call    sub_462480
sub     ax, 5
add     esp, 4
cmp     ax, 1
sbb     eax, eax
and     eax, esi
pop     esi
retn
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 4
push    esi
jnz     short loc_483e6d
call    sub_426a80
add     esp, 4
pop     esi
retn
call    sub_463590
add     esp, 4
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, esi
pop     esi
retn
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 5
push    esi
jnz     short loc_483e9e
call    sub_426a80
add     esp, 4
pop     esi
retn
call    sub_4635c0
add     esp, 4
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, esi
pop     esi
retn
push    esi
call    sub_462480
sub     ax, 0ch
add     esp, 4
cmp     ax, 1
sbb     eax, eax
and     eax, esi
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
push    eax
call    sub_461cc0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_483f37
push    100020ch
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
jz      short loc_483f3b
push    esi
call    sub_461c50
add     esp, 4
mov     esi, eax
test    esi, esi
jnz     short loc_483f14
xor     eax, eax
pop     esi
retn
mov     eax, esi
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 40h
mov     word ptr [esp+40h+var_3c], 0
mov     [esp+40h+var_40], eax
push    esi
mov     ecx, [esp+44h+var_3c]
push    edi
push    ecx
push    eax
call    sub_43b150
add     esp, 8
test    eax, eax
jz      loc_4840ea
lea     ecx, [esp+48h+var_28]
push    ecx
push    eax
call    sub_438610
add     esp, 8
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
cmp     [esp+48h+var_28], 0
jnz     short loc_483f98
fld     ds:dbl_4ab838
pop     edi
pop     esi
add     esp, 40h
retn
mov     eax, [esp+48h+var_28]
push    5
push    eax
call    sub_462670
movzx   eax, ax
add     esp, 8
cmp     eax, 2
jz      loc_4840cc
cmp     eax, 3
jl      short loc_483fbd
cmp     eax, 4
jle     short loc_483fc9
fld     ds:dbl_4ab838
pop     edi
pop     esi
add     esp, 40h
retn
mov     esi, [esp+48h+arg_4]
cmp     esi, 57h
jnz     short loc_483fd7
mov     esi, 58h
lea     eax, [esp+48h+var_30]
mov     ecx, [esp+48h+var_3c]
mov     edx, [esp+48h+var_40]
push    eax
push    ecx
push    edx
call    sub_43b260
add     esp, 0ch
test    eax, eax
jnz     short loc_483ffe
fld     ds:dbl_4ab838
pop     edi
pop     esi
add     esp, 40h
retn
mov     edx, [esp+48h+var_28]
mov     edi, dword_4ae1e0
mov     cx, dx
mov     eax, edx
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     eax, [eax+edi+4]
mov     edi, [eax]
xor     eax, eax
mov     al, ch
mov     eax, [edi+eax*4]
test    eax, eax
jz      short loc_484034
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_48403d
push    edx
call    sub_461250
add     esp, 4
lea     ecx, [esp+48h+var_38]
push    8
push    ecx
push    10h
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jnz     short loc_48405f
fld     ds:dbl_4ab838
pop     edi
pop     esi
add     esp, 40h
retn
cmp     esi, 58h
jnz     short loc_484078
movsx   eax, [esp+48h+var_38]
movsx   ecx, [esp+48h+var_34]
sub     ecx, eax
mov     edx, [esp+48h+var_30]
sub     edx, eax
jmp     short loc_4840aa
movsx   eax, [esp+48h+var_36]
movsx   ecx, [esp+48h+var_32]
sub     ecx, eax
mov     edx, [esp+48h+var_2c]
sub     edx, eax
mov     esi, [esp+48h+var_10]
mov     eax, [esp+48h+var_c]
mov     edi, [esp+48h+var_4]
mov     dword ptr [esp+48h+var_20+4], eax
mov     dword ptr [esp+48h+var_18+4], edi
mov     eax, [esp+48h+var_8]
mov     dword ptr [esp+48h+var_20], esi
mov     dword ptr [esp+48h+var_18], eax
test    ecx, ecx
jnz     short loc_4840b8
fld     [esp+48h+var_20]
pop     edi
pop     esi
add     esp, 40h
retn
shl     ecx, 10h
shl     edx, 10h
push    ecx
push    edx
call    sub_445da0
mov     [esp+50h+var_24], eax
add     esp, 8
fld     [esp+48h+var_18]
fsub    [esp+48h+var_20]
fild    [esp+48h+var_24]
fmul    ds:dbl_4ab870
fmulp   st(1), st
fadd    [esp+48h+var_20]
pop     edi
pop     esi
add     esp, 40h
retn
fld     ds:dbl_4ab838
pop     edi
pop     esi
add     esp, 40h
retn
sub     esp, 8
push    esi
push    edi
mov     esi, 0ffffffffh
mov     edi, [esp+10h+arg_0]
cmp     di, 7
jl      short loc_484186
push    edi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_484186
push    edi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_48413c
cmp     eax, 4
jz      short loc_48413c
cmp     eax, 9
jnz     short loc_484186
mov     word ptr [esp+10h+var_4], 0
mov     [esp+10h+var_8], edi
mov     eax, [esp+10h+var_4]
push    eax
push    edi
call    sub_43b1e0
add     esp, 8
test    eax, eax
jz      short loc_484186
mov     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+var_8]
push    eax
push    ecx
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_484186
movsx   ecx, word ptr [eax]
push    offset dword_4a61c4
mov     esi, [ecx+eax-9eh]
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
add     esp, 8
retn
sub     esp, 8
push    ebx
push    esi
mov     si, [esp+10h+arg_4]
push    edi
sub     si, 2001h
push    ebp
js      loc_4842e3
cmp     ds:word_4a9b90, si
jle     loc_4842e3
mov     eax, ds:dword_4a9b80
movsx   ebx, si
lea     eax, [eax+ebx*8]
cmp     byte ptr [eax+1], 62h
jnz     short loc_4841d7
push    30h
call    sub_45c150
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     al, [eax+2]
and     al, 0fh
jz      short loc_4841ff
mov     ebp, [esp+18h+arg_8]
push    eax
mov     eax, [esp+1ch+arg_0]
push    ebp
push    ebx
push    eax
call    sub_483d40
add     esp, 10h
mov     ebp, eax
test    bp, bp
jz      loc_4842e3
jmp     short loc_484203
mov     ebp, [esp+18h+arg_8]
mov     ecx, ds:dword_4a9b80
xor     eax, eax
mov     al, [ecx+ebx*8]
cmp     eax, 5
jnz     short loc_484218
mov     eax, 1
mov     edi, [esp+18h+arg_c]
test    edi, edi
jz      short loc_484231
movsx   ecx, word ptr [edi]
cmp     ecx, eax
jz      short loc_484231
push    eax
push    edi
call    sub_41aa60
add     esp, 8
sub     ebx, 8
cmp     ebx, 0b2h
ja      def_484248
xor     eax, eax
mov     al, ds:byte_4844c8[ebx]
jmp     ds:jpt_484248[eax*4]
push    edi
call    sub_442d80
add     esp, 4
push    eax
push    ebp
call    sub_443340
add     esp, 8
push    edi
call    sub_442e00
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
xor     dx, dx
movsx   ecx, dx
xor     eax, eax
mov     al, byte_4ae9c4[ecx]
cmp     eax, [edi+8]
jnz     short loc_4842ac
mov     si, dx
mov     eax, ds:dword_4a6770+2
movsx   ecx, bp
shl     si, 0dh
mov     ebx, [eax]
lea     ecx, [ebx+ecx*4+4]
mov     ax, [ecx]
xor     si, ax
and     si, 6000h
xor     si, ax
mov     [ecx], si
inc     dx
cmp     dx, 4
jl      short loc_484276
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    0
call    sub_438250
add     esp, 4
add     si, 2001h
push    edi
push    esi
call    sub_43d210
add     esp, 8
test    eax, eax
jnz     short loc_4842e3
push    edi
push    esi
call    sub_442aa0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
add     si, 2001h
push    edi
push    esi
call    sub_442aa0
add     esp, 8
push    edi
call    sub_442d80
add     esp, 4
push    eax
call    sub_47fa80
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_4842e3
push    edi
call    sub_442e00
add     esp, 4
push    esi
call    ds:globallock
push    eax
call    sub_484810
add     esp, 4
push    esi
call    ds:globalunlock
mov     eax, [esp+18h+arg_0]
push    esi
push    ebp
push    2029h
push    eax
call    sub_4429c0
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     dword ptr [edi+8], 1
movsx   eax, bp
sbb     ecx, ecx
mov     ebx, ds:dword_4a6770+2
inc     ecx
lea     edx, ds:0[eax*4]
mov     di, cx
mov     eax, [ebx]
shl     di, 0ah
lea     esi, [eax+edx+4]
mov     ax, [esi]
xor     di, ax
and     di, 400h
xor     di, ax
mov     [esi], di
mov     ebx, ds:dword_4a6770+2
shl     cx, 0bh
mov     eax, [ebx]
pop     ebp
pop     edi
pop     esi
lea     edx, [eax+edx+4]
pop     ebx
mov     ax, [edx]
xor     cx, ax
and     cx, 800h
xor     cx, ax
mov     [edx], cx
add     esp, 8
retn
mov     eax, [esp+18h+arg_0]
push    2000308h
shr     eax, 10h
movzx   eax, ax
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      loc_4842e3
cmp     dword ptr [edi+8], 1
sbb     eax, eax
inc     eax
push    eax
call    sub_436810
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [edi+0ch]
mov     ecx, [edi+8]
push    eax
push    ecx
call    sub_42afd0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     dword ptr [edi+8], 1
sbb     eax, eax
inc     eax
push    eax
push    ebp
call    sub_426d20
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [edi+8]
push    eax
call    sub_436ab0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [edi+8]
push    eax
call    sub_436880
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
cmp     dword ptr [edi+8], 1
mov     eax, ds:dword_4a6770+2
movsx   ecx, bp
mov     ebx, [eax]
sbb     eax, eax
lea     edx, [ebx+ecx*4+6]
mov     cx, [edx]
inc     eax
shl     ax, 0ah
mov     [esp+18h+var_8], ebp
mov     word ptr [esp+18h+var_4], 1
xor     ax, cx
and     ax, 400h
xor     ax, cx
mov     ecx, [esp+18h+var_4]
mov     [edx], ax
push    ecx
mov     edx, [esp+1ch+var_8]
push    edx
call    sub_4284b0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 18h
push    esi
push    edi
mov     si, [esp+20h+arg_0]
sub     si, 2001h
js      loc_484633
cmp     ds:word_4a9b90, si
jle     loc_484633
mov     eax, ds:dword_4a9b80
movsx   edi, si
cmp     byte ptr [eax+edi*8+1], 62h
jnz     short loc_4845c1
push    30h
call    sub_45c150
add     esp, 4
pop     edi
pop     esi
add     esp, 18h
retn
lea     eax, [esp+20h+var_18]
push    eax
call    sub_41afc0
add     esp, 4
mov     eax, ds:dword_4a9b80
xor     ecx, ecx
mov     cl, [eax+edi*8]
cmp     ecx, 5
jnz     short loc_4845e2
mov     ecx, 1
movsx   eax, [esp+20h+var_18]
cmp     eax, ecx
jz      short loc_4845f9
lea     eax, [esp+20h+var_18]
push    ecx
push    eax
call    sub_41aa60
add     esp, 8
sub     edi, 8
cmp     edi, 0b2h
ja      short def_48460c
xor     eax, eax
mov     al, ds:byte_484664[edi]
jmp     ds:jpt_48460c[eax*4]
add     si, 2001h
lea     eax, [esp+20h+var_18]
push    eax
push    esi
call    sub_43d210
add     esp, 8
test    eax, eax
jnz     short loc_484633
push    esi
call    sub_442b40
add     esp, 4
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 28h
lea     eax, [esp+28h+var_28]
push    eax
call    sub_43ba90
movsx   eax, [esp+2ch+arg_0]
add     esp, 4
sub     eax, 30h
cmp     eax, 5
ja      short def_48473d
jmp     ds:jpt_48473d[eax*4]
mov     eax, [esp+28h+var_26]
mov     ecx, [esp+28h+cchbuffermax]
mov     edx, [esp+28h+lpstring]
push    eax
push    ecx
push    edx
call    sub_456b80
add     esp, 34h
retn
mov     eax, [esp+28h+var_1e]
push    0
mov     ecx, [esp+2ch+cchbuffermax]
push    eax
mov     edx, [esp+30h+lpstring]
push    ecx
push    edx
call    sub_456fb0
add     esp, 38h
retn
call    sub_43bbd0
mov     ecx, [esp+28h+lpstring]
push    eax
mov     eax, [esp+2ch+cchbuffermax]
push    eax
push    ecx
call    sub_4847d0
add     esp, 34h
retn
call    sub_409e60
sub     eax, [esp+28h+var_1a]
mov     ecx, 3e8h
sub     edx, edx
div     ecx
mov     edx, [esp+28h+cchbuffermax]
push    eax
mov     eax, [esp+2ch+lpstring]
push    edx
push    eax
call    sub_4847d0
add     esp, 0ch
add     esp, 28h
retn
push    esi
mov     ecx, 3ch
mov     eax, [esp+4+arg_8]
sub     edx, edx
div     ecx
mov     esi, eax
sub     edx, edx
div     ecx
lea     edx, ds:0[eax*4]
lea     ecx, [edx+edx*2]
lea     ecx, [ecx+ecx*4]
neg     ecx
add     ecx, esi
mov     edx, [esp+4+arg_0]
push    ecx
push    eax
mov     eax, [esp+0ch+arg_4]
push    offset ad02d
push    eax
push    edx
call    sub_401800
add     esp, 14h
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+str]
push    2ch
push    esi
call    _strchr
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_48482a
inc     edi
jmp     short loc_48482c
mov     edi, esi
cmp     byte ptr [edi], 0
jz      short loc_484844
push    edi
call    sub_45b7b0
add     esp, 4
test    eax, eax
jz      short loc_484844
inc     edi
cmp     byte ptr [edi], 0
jnz     short loc_484831
movsx   eax, byte ptr [edi]
push    eax
call    _toupper
add     esp, 4
mov     [edi], al
test    al, al
jz      short loc_48486e
push    edi
call    sub_45b7b0
add     esp, 4
test    eax, eax
jnz     short loc_48486e
mov     al, [edi]
inc     edi
mov     [esi], al
inc     esi
cmp     byte ptr [edi], 0
jnz     short loc_484856
pop     edi
mov     byte ptr [esi], 0
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     si, 7
jl      short loc_4848cd
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_4848cd
push    esi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 9
jz      short loc_4848b6
cmp     eax, 0bh
jz      short loc_4848c6
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
call    sub_43a210
add     esp, 4
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
call    sub_48a7d0
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     si, 7
jl      short loc_484955
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_484955
push    esi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 9
jz      short loc_48491b
cmp     eax, 0ah
jz      short loc_48492b
cmp     eax, 0bh
jz      short loc_484949
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
call    sub_43a260
add     esp, 4
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
test    esi, esi
jz      short loc_484942
call    sub_43e100
cmp     eax, esi
jnz     short loc_484942
mov     edi, 1
mov     eax, edi
pop     edi
pop     esi
retn
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
retn
call    sub_48aeb0
cmp     eax, 1
sbb     edi, edi
neg     edi
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
cmp     si, 7
jl      short loc_4849ad
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_4849ad
push    esi
call    sub_462480
movsx   eax, ax
add     esp, 4
cmp     eax, 9
jz      short loc_484996
cmp     eax, 0bh
jz      short loc_4849a6
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
call    sub_43a370
add     esp, 4
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
call    sub_48a780
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 0a4h
push    ebx
push    esi
push    edi
push    ebp
push    eax
push    20a1h
call    sub_442a60
add     esp, 8
test    eax, eax
jz      short loc_4849fd
mov     eax, [esp+0b4h+arg_0]
push    0
push    eax
call    sub_41aa60
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn
mov     word ptr [esp+0b4h+appname], 0
mov     eax, [esp+0b4h+arg_0]
push    eax
call    sub_41afc0
add     esp, 4
push    2
push    7531h
call    sub_45b8f0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_484b93
push    ebx
call    ds:globallock
mov     ebp, eax
lea     eax, [esp+0b4h+appname]
push    eax
push    26h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_461350
add     esp, 0ch
test    eax, eax
jz      short loc_484a9c
mov     edx, dword ptr [esp+0b4h+appname]
mov     edi, ebp
and     edx, 0ffffh
mov     esi, eax
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
push    eax
and     ecx, 3
push    0
rep movsb
push    26h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4613a0
mov     eax, dword ptr [esp+0c4h+appname]
add     esp, 10h
and     eax, 0ffffh
mov     byte ptr [eax+ebp-1], 3bh
lea     eax, [esp+0b4h+appname+2]
push    50h
push    eax
mov     ecx, ds:dword_4a8510
push    ecx
call    sub_44f5e0
lea     ecx, [esp+0c0h+buffer]
add     esp, 0ch
push    0a0h
push    270h
push    50h
push    ecx
call    sub_47fe70
mov     ecx, dword ptr [esp+0c4h+appname]
lea     eax, [esp+0c4h+buffer]
lea     edx, [esp+0c4h+appname+2]
add     esp, 10h
and     ecx, 0ffffh
push    offset windowname
push    eax
push    edx
mov     eax, 7531h
sub     eax, ecx
add     ecx, ebp
push    eax
push    ecx
call    sub_4564c0
add     esp, 14h
test    eax, eax
jz      short loc_484b12
add     word ptr [esp+0b4h+appname], ax
mov     eax, dword ptr [esp+0b4h+appname]
and     eax, 0ffffh
mov     byte ptr [eax+ebp], 3bh
inc     word ptr [esp+0b4h+appname]
lea     eax, [esp+0b4h+appname+2]
push    0
push    1a8ch
push    50h
push    eax
call    sub_47fe70
mov     ecx, dword ptr [esp+0c4h+appname]
lea     eax, [esp+0c4h+buffer]
lea     edx, [esp+0c4h+appname+2]
add     esp, 10h
and     ecx, 0ffffh
push    offset windowname
push    eax
push    edx
mov     eax, 7531h
sub     eax, ecx
add     ecx, ebp
push    eax
push    ecx
call    sub_4564c0
add     esp, 14h
test    eax, eax
jz      short loc_484b5f
add     word ptr [esp+0b4h+appname], ax
jmp     short loc_484b6c
cmp     word ptr [esp+0b4h+appname], 0
jz      short loc_484b6c
dec     word ptr [esp+0b4h+appname]
mov     eax, dword ptr [esp+0b4h+appname]
push    ebx
and     eax, 0ffffh
mov     byte ptr [eax+ebp], 0
mov     ebp, ds:globalunlock
call    ebp
mov     ecx, [esp+0b4h+arg_0]
push    ebx
push    ecx
call    sub_41af50
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn
sub     esp, 10h
push    esi
mov     si, [esp+14h+arg_0]
movsx   eax, si
sub     eax, 2ah
cmp     eax, 94h
ja      short def_484bbe
xor     ecx, ecx
mov     cl, ds:byte_484dac[eax]
jmp     ds:jpt_484bbe[ecx*4]
mov     eax, dword ptr [esp+14h+c]
push    eax
push    esi
call    sub_4829e0
add     esp, 8
pop     esi
add     esp, 10h
retn
cmp     ds:frequency, 0
jz      short loc_484c5b
mov     eax, ds:frequency
push    eax
call    sub_490980
mov     [esp+18h+point.x], eax
add     esp, 4
xor     eax, eax
push    2000204h
mov     ax, ds:word_4a8518
mov     [esp+18h+point.y], edx
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_484c44
push    2010640h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_484c44
push    0fh
call    ds:getsystemmetrics
inc     eax
sub     [esp+14h+point.y], eax
cmp     si, 2ah
mov     eax, [esp+14h+point.x]
jz      loc_484d71
mov     eax, [esp+14h+point.y]
pop     esi
add     esp, 10h
retn
xor     eax, eax
pop     esi
add     esp, 10h
retn
lea     eax, [esp+14h+point]
push    eax
call    ds:getcursorpos
cmp     ds:frequency, 0
jz      short loc_484c90
lea     eax, [esp+14h+point]
push    eax
call    sub_474dd0
add     esp, 4
push    eax
mov     eax, ds:frequency
push    eax
call    ds:screentoclient
cmp     si, 2eh
mov     eax, [esp+14h+point.x]
jz      loc_484d71
mov     eax, [esp+14h+point.y]
pop     esi
add     esp, 10h
retn
push    10h
call    ds:getkeystate
test    ax, ax
mov     eax, 1
jl      loc_484d71
pop     esi
xor     eax, eax
add     esp, 10h
retn
push    11h
call    ds:getkeystate
test    ax, ax
mov     eax, 1
jl      loc_484d71
pop     esi
xor     eax, eax
add     esp, 10h
retn
push    12h
call    ds:getkeystate
test    ax, ax
mov     eax, 1
jl      short loc_484d71
pop     esi
xor     eax, eax
add     esp, 10h
retn
push    14h
call    ds:getkeystate
xor     ecx, ecx
pop     esi
mov     cx, ax
add     esp, 10h
and     ecx, 1
mov     eax, ecx
retn
push    1
call    ds:getkeystate
test    ax, ax
mov     eax, 1
jl      short loc_484d71
pop     esi
xor     eax, eax
add     esp, 10h
retn
push    2
call    ds:getkeystate
test    ax, ax
mov     eax, 1
jl      short loc_484d71
pop     esi
xor     eax, eax
add     esp, 10h
retn
push    4
call    ds:getkeystate
test    ax, ax
mov     eax, 1
jl      short loc_484d71
pop     esi
xor     eax, eax
add     esp, 10h
retn
push    0
call    ds:getsystemmetrics
pop     esi
add     esp, 10h
retn
push    1
call    ds:getsystemmetrics
pop     esi
add     esp, 10h
retn
mov     cx, [esp+arg_0]
sub     esp, 200h
movsx   eax, cx
push    esi
cmp     eax, 46h
mov     [esp+204h+string], 0
mov     esi, [esp+204h+arg_8]
mov     word ptr [esi], 0
jz      short loc_484e94
cmp     eax, 48h
jz      short loc_484ed8
mov     eax, [esp+204h+arg_4]
push    esi
push    eax
push    ecx
call    sub_4837d0
add     esp, 0ch
pop     esi
add     esp, 200h
retn
lea     eax, [esp+204h+var_100]
push    0
lea     ecx, [esp+208h+string]
push    eax
push    ecx
call    sub_40cfb0
lea     ecx, [esp+210h+string]
add     esp, 0ch
push    ecx
call    ds:lstrlena
inc     eax
mov     ecx, 100h
sub     ecx, eax
lea     edx, [esp+204h+var_100]
mov     [esp+eax+204h+var_201], 0dh
lea     eax, [esp+eax+204h+string]
push    ecx
push    edx
push    eax
call    sub_47f9f0
jmp     short loc_484ee6
lea     eax, [esp+204h+string]
push    eax
push    0
push    0
call    sub_40cfb0
lea     eax, [esp+210h+string]
add     esp, 0ch
push    eax
push    esi
call    sub_41aec0
add     esp, 8
pop     esi
add     esp, 200h
retn
sub     esp, 4
lea     eax, [esp+4+time]
push    esi
xor     esi, esi
push    eax
call    _time
lea     eax, [esp+0ch+time]
add     esp, 4
push    eax
call    _localtime
add     esp, 4
test    eax, eax
jz      short def_484f38
mov     ecx, [esp+8+arg_0]
sub     ecx, 3bh
cmp     ecx, 2ah
ja      short def_484f38
xor     edx, edx
mov     dl, ds:byte_484fbc[ecx]
jmp     ds:jpt_484f38[edx*4]
mov     esi, [eax+18h]
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     esi, [eax+0ch]
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     esi, [eax+10h]
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     esi, [eax+10h]
inc     esi
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     esi, [eax+14h]
add     esi, 76ch
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     esi, [eax+8]
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     esi, [eax+4]
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     esi, [eax]
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     eax, 3
retn
mov     eax, 3
retn
push    esi
call    sub_489330
test    eax, eax
jz      short loc_48503f
mov     edx, [eax+118h]
mov     esi, [esp+4+arg_4]
inc     edx
mov     ecx, [esp+4+lpstring1]
cmp     edx, esi
jl      short loc_48502f
mov     edx, esi
push    edx
add     eax, 18h
push    eax
push    ecx
call    sub_47f9d0
add     esp, 0ch
pop     esi
retn
mov     ecx, [esp+4+lpstring1]
pop     esi
mov     byte ptr [ecx], 0
retn
mov     eax, 2
retn
sub     esp, 4
mov     ax, [esp+4+arg_0]
xchg    al, ah
mov     [esp+4+var_2], ax
mov     ax, [esp+4+var_2]
add     esp, 4
retn
mov     eax, [esp+arg_0]
sub     esp, 4
mov     word ptr [esp+4+var_4], ax
shr     eax, 10h
mov     word ptr [esp+4+var_4+2], ax
mov     dx, word ptr [esp+4+var_4]
mov     ax, word ptr [esp+4+var_4+2]
xchg    al, ah
xchg    dl, dh
mov     word ptr [esp+4+var_4+2], dx
mov     word ptr [esp+4+var_4], ax
mov     eax, [esp+4+var_4+2]
mov     ecx, [esp+4+var_4]
and     eax, 0ffffh
and     ecx, 0ffffh
shl     eax, 10h
add     esp, 4
or      eax, ecx
retn
push    2
push    0
call    sub_45b8f0
add     esp, 8
mov     ds:dword_4a9b98, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
cmp     ds:dword_4a9b98, 0
push    esi
jz      short loc_48513f
xor     si, si
cmp     ds:word_4a9ba0, si
jbe     short loc_485127
movzx   ecx, si
inc     si
mov     eax, ds:dword_4a9b98
mov     edx, [eax]
mov     ecx, [edx+ecx*4]
push    ecx
call    sub_45ba00
add     esp, 4
cmp     si, ds:word_4a9ba0
jb      short loc_485106
mov     eax, ds:dword_4a9b98
push    eax
call    sub_45ba00
mov     ds:dword_4a9b98, 0
add     esp, 4
pop     esi
retn
sub     esp, 4
cmp     ds:dword_4a9b98, 0
push    esi
jnz     short loc_485164
xor     eax, eax
pop     esi
add     esp, 4
retn
mov     esi, [esp+8+arg_0]
cmp     word ptr [esi], 1ch
jnb     short loc_485175
xor     eax, eax
pop     esi
add     esp, 4
retn
inc     ds:dword_4a9ba4
mov     eax, ds:dword_4a9ba4
mov     [esi+2], eax
mov     dword ptr [esi+18h], 0
call    sub_409e60
mov     [esi+0eh], eax
xor     eax, eax
mov     ax, [esi]
push    eax
push    esi
call    sub_45b910
mov     [esp+10h+hmem], eax
add     esp, 8
test    eax, eax
jnz     short loc_4851b0
xor     eax, eax
pop     esi
add     esp, 4
retn
xor     eax, eax
lea     ecx, [esp+8+hmem]
mov     ax, ds:word_4a9ba0
mov     edx, ds:dword_4a9b98
shl     eax, 2
push    eax
push    4
push    ecx
push    edx
call    sub_45baf0
add     esp, 10h
test    eax, eax
jnz     short loc_4851ea
mov     eax, [esp+8+hmem]
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 4
retn
inc     ds:word_4a9ba0
cmp     dword ptr [esi+14h], 0
jnz     short loc_485201
mov     ds:dword_4a9b9c, 1
mov     eax, [esi+2]
pop     esi
add     esp, 4
retn
cmp     ds:dword_4a9b98, 0
jz      short locret_48522b
lea     eax, [esp+arg_0]
push    eax
push    offset loc_485230
call    sub_485330
add     esp, 8
retn
mov     ecx, [esp+8]
mov     eax, [esp+4]
mov     edx, [ecx]
cmp     [eax+2], edx
jnz     short loc_48524b
mov     eax, 1
mov     dword ptr [ecx], 0
retn
cmp     edx, 1
sbb     eax, eax
and     eax, 2
retn
sub     esp, 8
call    sub_409e60
mov     ecx, dword_4ae9f4
mov     [esp+8+var_8], eax
mov     ax, [esp+8+arg_0]
cmp     [esp+8+var_8], ecx
mov     word ptr [esp+8+var_4], ax
jnb     short loc_485294
lea     eax, [esp+8+var_8]
push    eax
push    offset loc_4852d0
call    sub_485330
add     esp, 8
lea     eax, [esp+8+var_8]
push    eax
push    offset sub_4852f0
call    sub_485330
mov     eax, [esp+10h+var_8]
add     esp, 8
cmp     ds:dword_4a9ba8, 0
mov     dword_4ae9f4, eax
jz      short loc_4852c7
call    sub_485400
mov     ds:dword_4a9ba8, 0
mov     eax, 1
add     esp, 8
retn
mov     eax, [esp+8+var_4]
mov     ecx, [eax+0ah]
sub     ecx, 38h
cmp     ecx, [eax+0eh]
jnb     short loc_4852e6
mov     dword ptr [eax+0eh], 0
xor     eax, eax
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+14h], 0
jnz     short loc_485326
mov     edi, [esp+8+arg_4]
mov     ax, [edi+4]
test    [esi+12h], ax
jz      short loc_485326
mov     eax, [esi+0eh]
cmp     [edi], eax
jb      short loc_485326
push    esi
call    dword ptr [esi+6]
add     esp, 4
mov     ecx, [esi+0ah]
add     ecx, [edi]
pop     edi
sub     ecx, 38h
mov     [esi+0eh], ecx
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
sub     esp, 4
cmp     ds:dword_4a9b98, 0
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_48534a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     [esp+14h+var_4], 0
xor     si, si
cmp     ds:word_4a9ba0, si
jbe     loc_4853e7
mov     eax, ds:dword_4a9b98
movzx   ecx, si
mov     edx, [eax]
mov     edi, [edx+ecx*4]
mov     eax, [edi]
cmp     word ptr [eax], 0
jz      short loc_4853db
cmp     dword ptr [eax+18h], 0
jnz     short loc_4853c4
push    edi
call    ds:globallock
mov     ebx, eax
mov     eax, [esp+14h+arg_4]
push    eax
push    ebx
call    [esp+1ch+arg_0]
add     esp, 8
mov     ebp, eax
push    edi
call    ds:globalunlock
cmp     dword ptr [ebx+14h], 0
jnz     short loc_4853b1
cmp     ebp, 1
jz      short loc_4853bd
mov     ds:dword_4a9b9c, 1
cmp     ebp, 1
jz      short loc_4853bd
cmp     ebp, 2
jz      short loc_4853e0
jmp     short loc_4853ce
mov     dword ptr [ebx+18h], 1
mov     ds:dword_4a9ba8, 1
inc     si
cmp     si, ds:word_4a9ba0
jb      short loc_485362
jmp     short loc_4853e7
mov     eax, [eax+2]
jmp     short loc_4853e3
mov     eax, [ebx+2]
mov     [esp+14h+var_4], eax
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
push    edi
xor     edi, edi
cmp     ds:dword_4a9b98, edi
jz      short loc_485472
xor     si, si
cmp     ds:word_4a9ba0, di
jbe     short loc_485472
mov     eax, ds:dword_4a9b98
movzx   ecx, si
mov     edx, [eax]
mov     eax, [edx+ecx*4]
mov     edx, [eax]
cmp     [edx+18h], edi
jz      short loc_485467
push    eax
call    sub_45ba00
mov     dx, si
add     esp, 4
dec     ds:word_4a9ba0
cmp     si, ds:word_4a9ba0
jnb     short loc_485472
movzx   ecx, dx
inc     dx
mov     eax, ds:dword_4a9b98
shl     ecx, 2
add     ecx, [eax]
mov     eax, [ecx+4]
mov     [ecx], eax
cmp     dx, ds:word_4a9ba0
jb      short loc_485448
jmp     short loc_485469
inc     si
cmp     si, ds:word_4a9ba0
jb      short loc_485418
pop     edi
pop     esi
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_c]
sub     esp, 4
push    esi
push    edi
mov     dx, [esp+0ch+arg_14]
mov     esi, [esp+0ch+arg_4]
mov     [esi], ax
mov     edi, [esp+0ch+arg_0]
mov     [esi+12h], dx
mov     eax, [esp+0ch+arg_10]
mov     [esi+6], ecx
mov     [esi+0ah], eax
mov     dword ptr [esi+14h], 0
test    edi, edi
jz      short loc_4854c1
push    edi
call    sub_485210
add     esp, 4
jmp     short loc_4854cd
inc     ds:dword_4a9ba4
mov     edi, ds:dword_4a9ba4
mov     dword ptr [esi+18h], 0
mov     [esi+2], edi
call    sub_409e60
mov     ecx, [esi+0ah]
add     ecx, eax
xor     eax, eax
mov     ax, [esi]
sub     ecx, 38h
push    eax
mov     [esi+0eh], ecx
push    esi
call    sub_45b910
mov     [esp+14h+hmem], eax
add     esp, 8
test    eax, eax
jnz     short loc_485506
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
xor     eax, eax
lea     ecx, [esp+0ch+hmem]
mov     ax, ds:word_4a9ba0
mov     edx, ds:dword_4a9b98
shl     eax, 2
push    eax
push    4
push    ecx
push    edx
call    sub_45baf0
add     esp, 10h
test    eax, eax
jnz     short loc_485548
mov     eax, [esp+0ch+hmem]
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     dword ptr [esi+2], 0
pop     edi
pop     esi
add     esp, 4
retn
inc     ds:word_4a9ba0
pop     edi
mov     eax, [esi+2]
pop     esi
add     esp, 4
retn
push    esi
xor     eax, eax
mov     esi, [esp+4+arg_0]
push    edi
mov     edi, [esp+8+arg_4]
mov     ecx, [edi]
cmp     [esi+2], ecx
jnz     short loc_4855a5
cmp     [edi+10h], eax
jz      short loc_48557e
mov     eax, [edi+4]
mov     [esi+0ah], eax
cmp     dword ptr [edi+8], 0
jz      short loc_485594
call    sub_409e60
mov     ecx, [esi+0ah]
add     ecx, eax
sub     ecx, 38h
mov     [esi+0eh], ecx
cmp     dword ptr [edi+14h], 0
jz      short loc_4855a0
mov     eax, [edi+0ch]
mov     [esi+14h], eax
mov     eax, 2
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 18h
lea     ecx, [esp+18h+var_18]
mov     [esp+18h+var_18], eax
xor     eax, eax
push    ecx
mov     [esp+1ch+var_c], eax
push    offset sub_485560
mov     [esp+20h+var_8], eax
mov     [esp+20h+var_4], eax
mov     [esp+20h+var_10], 1
call    sub_485330
add     esp, 20h
retn
sub     esp, 10h
cmp     dword_4aea00, 0
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
jz      short loc_485610
push    esi
mov     eax, [esi+62h]
push    eax
call    sub_414e10
add     esp, 8
mov     ebx, [esp+1ch+arg_4]
cmp     ebx, 32h
ja      def_485625
xor     eax, eax
mov     al, ds:byte_485a10[ebx]
jmp     ds:jpt_485625[eax*4]
mov     edi, [esp+1ch+arg_8]
test    byte ptr [edi+0ah], 6
jz      short loc_4856b5
lea     eax, [esp+1ch+rcdst]
mov     ecx, [esi+62h]
push    eax
push    ecx
call    sub_419550
lea     ecx, [esp+24h+rcdst]
add     esp, 8
push    offset rcsrc2
push    ecx
lea     ecx, [esp+24h+rcdst]
push    ecx
call    ds:intersectrect
mov     ax, [esi+1ch]
mov     ecx, [edi+0ch]
lea     edx, [esp+1ch+rcdst]
push    ecx
push    edx
push    eax
call    sub_474770
add     esp, 0ch
test    eax, eax
jz      short loc_4856b5
push    0
mov     eax, [edi+0ch]
push    eax
mov     ecx, [esi+62h]
push    ecx
call    sub_414e30
add     esp, 0ch
mov     ecx, [esi+62h]
push    ecx
call    sub_419920
add     esp, 4
test    eax, eax
jz      short loc_4856b5
mov     eax, [edi+0ch]
push    eax
push    esi
call    sub_485b10
add     esp, 8
mov     eax, [edi+0ch]
mov     ecx, [esi+62h]
push    eax
push    ecx
call    sub_419a40
add     esp, 8
mov     eax, [esi+62h]
push    eax
call    sub_419630
add     esp, 4
test    eax, eax
jz      short loc_4856db
test    byte ptr [edi+0ah], 8
jz      short loc_4856db
mov     eax, [edi+0ch]
mov     ecx, [esi+62h]
push    eax
push    ecx
call    sub_4147e0
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
lea     eax, [esp+1ch+rcdst]
mov     ecx, [esi+62h]
push    eax
push    ecx
call    sub_419550
mov     edi, [esp+24h+arg_8]
lea     edx, [esp+24h+rcdst]
add     esp, 8
mov     eax, [edi]
mov     ecx, [edi+4]
push    ecx
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jz      short loc_485769
mov     eax, [esi+62h]
push    eax
call    sub_419620
add     esp, 4
cmp     ax, 4
jz      short loc_48574e
test    ax, ax
jz      short loc_48574e
mov     eax, [esi+62h]
push    eax
call    sub_419920
add     esp, 4
test    eax, eax
jnz     short loc_48574e
push    0
mov     eax, [edi]
push    0
mov     ecx, [edi+4]
push    0
push    ecx
push    eax
push    esi
call    sub_485ab0
add     esp, 18h
jmp     short loc_485753
mov     eax, 1
test    eax, eax
jz      short loc_485769
mov     eax, 0ffffffffh
mov     [edi+98h], esi
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esi+62h]
push    eax
call    sub_419860
mov     edi, [esp+20h+arg_8]
add     esp, 4
test    eax, eax
jz      loc_4859ce
mov     eax, [edi]
mov     ecx, [edi+4]
lea     edx, [esp+1ch+rcdst]
push    ecx
push    eax
push    edx
mov     eax, [esi+62h]
push    eax
call    sub_4196f0
add     esp, 8
push    eax
call    ds:ptinrect
test    eax, eax
jz      loc_4859ce
xor     ebx, ebx
cmp     [edi+0ch], ebx
jnz     short loc_4857ca
mov     ebx, ds:frequency
push    ebx
call    sub_474d50
add     esp, 4
mov     [edi+0ch], eax
push    esi
call    sub_486030
add     esp, 4
mov     eax, [edi]
mov     ecx, [edi+4]
mov     edx, [edi+0ch]
push    ecx
push    eax
push    edx
mov     eax, [esi+62h]
push    eax
call    sub_419c40
add     esp, 10h
push    esi
call    sub_486060
add     esp, 4
test    ebx, ebx
jz      short loc_48580b
mov     eax, [edi+0ch]
push    eax
push    ebx
call    __beep_0
mov     dword ptr [edi+0ch], 0
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
lea     eax, [esp+1ch+rcdst]
mov     ecx, [esi+62h]
push    eax
push    ecx
call    sub_419550
lea     ecx, [esp+24h+rcdst]
add     esp, 8
push    offset rcsrc2
push    ecx
lea     ecx, [esp+24h+rcdst]
push    ecx
call    ds:intersectrect
mov     eax, [esp+1ch+rcdst.bottom]
mov     ecx, [esp+1ch+rcdst.right]
mov     edx, [esp+1ch+rcdst.top]
push    eax
mov     eax, [esp+20h+rcdst.left]
push    ecx
push    edx
cmp     ebx, 7
push    eax
jnz     short loc_485869
mov     cx, [esi+1ch]
push    ecx
call    sub_474400
mov     [esi+1ch], ax
add     esp, 14h
jmp     short loc_48587a
mov     cx, [esi+1eh]
push    ecx
call    sub_474400
mov     [esi+1eh], ax
add     esp, 14h
xor     eax, eax
pop     edi
or      ds:byte_4a61d4, 1
pop     esi
pop     ebx
add     esp, 10h
retn
test    byte ptr [esi+0ah], 10h
jz      def_485625
cmp     dword ptr [esi+62h], 0
mov     edi, [esp+1ch+arg_8]
jz      loc_4859ce
test    byte ptr [edi+0ah], 6
jz      loc_4859ce
mov     eax, [edi+0ch]
push    eax
push    esi
call    sub_485e40
add     esp, 8
jmp     loc_4859ce
mov     ebx, [esi+10h]
mov     edi, [esi+14h]
lea     ecx, [esi+0ch]
lea     edx, [esp+1ch+rcdst]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+0ch]
mov     [edx+4], ebx
mov     [edx+8], edi
mov     edi, [esp+1ch+arg_8]
add     edi, 10h
mov     [edx+0ch], eax
mov     eax, [edi+0ch]
mov     ecx, [edi+8]
push    eax
mov     edx, [edi+4]
push    ecx
mov     eax, [edi]
push    edx
push    eax
push    esi
call    sub_485c00
add     esp, 14h
cmp     eax, 1f42h
jnz     short loc_48591e
mov     eax, [esp+1ch+rcdst.bottom]
mov     ecx, [esp+1ch+rcdst.right]
mov     edx, [esp+1ch+rcdst.top]
push    eax
mov     eax, [esp+20h+rcdst.left]
push    ecx
push    edx
push    eax
push    esi
call    sub_485c00
add     esp, 14h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esi+62h]
test    eax, eax
jz      short loc_485937
push    eax
call    sub_413620
add     esp, 4
mov     dword ptr [esi+62h], 0
jmp     def_485625
mov     edi, [esp+1ch+arg_8]
mov     edx, [esi+62h]
movsx   eax, word ptr [edi+0ah]
push    eax
mov     ecx, [edi+20h]
push    ecx
push    edx
call    sub_41a7a0
add     esp, 0ch
mov     ecx, [edi+0ch]
push    ecx
push    esi
call    sub_485e40
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     edi, [esp+1ch+arg_8]
mov     edx, [esi+62h]
mov     cx, [edi+0ah]
mov     eax, [edi+24h]
push    eax
push    ecx
push    edx
call    sub_41a610
add     esp, 0ch
mov     ecx, [edi+0ch]
push    ecx
push    esi
call    sub_485e40
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     edi, [esp+1ch+arg_8]
mov     eax, [esi+62h]
add     edi, 10h
push    edi
push    eax
call    sub_419550
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, 2
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     edi, [esp+1ch+arg_8]
push    edi
push    ebx
push    esi
call    sub_40fd60
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    0
push    7fffh
mov     edx, [ecx+62h]
push    0
push    edx
call    sub_418070
add     esp, 14h
retn
mov     eax, [esp+arg_8]
push    esi
mov     esi, [esp+4+arg_c]
push    eax
mov     ecx, [esp+8+arg_4]
mov     edx, [esp+8+arg_0]
push    ecx
push    edx
call    sub_4182e0
add     esp, 0ch
mov     [esi+62h], eax
test    eax, eax
jz      short loc_485aa6
push    eax
call    sub_419920
add     esp, 4
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     [esi+66h], eax
cmp     dword ptr [esi+62h], 1
sbb     eax, eax
pop     esi
inc     eax
retn
push    esi
mov     eax, ds:frequency
push    edi
push    eax
call    sub_474d50
mov     ecx, [esp+0ch+arg_10]
mov     edx, [esp+0ch+arg_c]
add     esp, 4
mov     esi, eax
mov     ax, [esp+8+arg_14]
push    eax
push    ecx
mov     eax, [esp+10h+pt.x]
push    edx
mov     ecx, [esp+14h+pt.y]
mov     edx, [esp+14h+arg_0]
push    ecx
push    eax
push    esi
mov     eax, [edx+62h]
push    eax
call    sub_415160
add     esp, 1ch
mov     edi, eax
mov     ecx, ds:frequency
push    esi
push    ecx
call    __beep_0
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 40h
push    ebx
push    esi
mov     esi, [esp+48h+arg_0]
push    edi
push    ebp
mov     eax, [esi+62h]
push    eax
call    sub_419540
mov     di, ax
add     esp, 4
mov     eax, [esi+62h]
push    eax
call    sub_419920
add     esp, 4
cmp     di, 1
jnz     short loc_485b44
test    eax, eax
jz      loc_485bf8
mov     ebx, [esp+50h+hdc]
test    ebx, ebx
jz      loc_485bf8
lea     edi, [esp+50h+var_30]
xor     eax, eax
mov     ecx, 0ch
rep stosd
mov     eax, [esi+0ch]
mov     edx, [esi+10h]
lea     ecx, [esp+50h+rc]
add     esi, 0ch
mov     ebp, [esi+8]
mov     [ecx], eax
mov     eax, [esi+0ch]
mov     [ecx+4], edx
mov     esi, 1
mov     [ecx+8], ebp
push    esi
mov     [ecx+0ch], eax
lea     ecx, [esp+54h+rc]
push    esi
push    ecx
call    ds:inflaterect
mov     [esp+50h+var_2c], 0
mov     byte ptr [esp+50h+var_30], 4
mov     [esp+50h+var_10], 0
mov     [esp+50h+var_16], si
mov     edx, dword_4add88
mov     [esp+50h+var_12], si
mov     ecx, dword_4add8c
mov     [esp+50h+var_14], si
mov     [esp+50h+var_8], edx
mov     [esp+50h+var_4], ecx
dec     [esp+50h+rc.right]
mov     [esp+50h+var_c], 0
call    sub_40ac00
mov     ecx, [esp+50h+rc.bottom]
push    eax
mov     edx, [esp+54h+rc.right]
push    ecx
mov     eax, [esp+58h+rc.top]
push    edx
mov     ecx, [esp+5ch+rc.left]
push    eax
lea     edx, [esp+60h+var_30]
push    ecx
push    edx
push    ebx
call    sub_451d90
add     esp, 1ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
sub     esp, 34h
push    ebx
push    esi
mov     esi, [esp+3ch+arg_0]
push    edi
push    ebp
mov     eax, [esi+62h]
push    eax
call    sub_419920
mov     edi, [esp+48h+arg_10]
mov     [esp+48h+var_34], eax
sub     edi, [esp+48h+arg_8]
add     esp, 4
test    eax, eax
jz      short loc_485c39
mov     eax, [esi+62h]
push    eax
call    sub_4199a0
mov     [esp+48h+var_10], eax
add     esp, 4
jmp     short loc_485c41
mov     [esp+44h+var_10], 0
mov     eax, [esi+62h]
push    eax
call    sub_4195e0
add     esp, 4
mov     ebx, eax
mov     ecx, [esi+62h]
lea     eax, [esp+44h+var_30]
push    eax
push    ecx
call    sub_419440
lea     ecx, [esp+4ch+var_20]
add     esp, 8
mov     edx, [esi+62h]
push    ecx
push    edx
call    sub_419470
mov     ecx, [esp+4ch+var_30]
mov     edx, [esp+4ch+var_18]
sub     edx, [esp+4ch+var_28]
add     esp, 8
sub     ecx, [esi+0ch]
mov     eax, ebx
test    ebx, ebx
jg      short loc_485c8a
mov     eax, ebx
neg     eax
mov     ebp, [esp+44h+arg_c]
sub     ebp, [esp+44h+arg_4]
sub     ebp, eax
sub     ebp, [esp+44h+var_10]
cmp     ebp, 14h
jge     short loc_485cb4
test    ebx, ebx
jg      short loc_485ca3
neg     ebx
mov     eax, [esp+44h+arg_4]
add     eax, [esp+44h+var_10]
add     eax, ebx
add     eax, 14h
mov     [esp+44h+arg_c], eax
lea     eax, [esp+44h+arg_4]
lea     ebx, [esp+44h+var_30]
mov     ebp, [eax]
mov     [ebx], ebp
mov     ebp, [eax+4]
add     ecx, [esp+44h+arg_4]
mov     [ebx+4], ebp
mov     ebp, [eax+8]
mov     eax, [eax+0ch]
mov     [ebx+8], ebp
mov     [ebx+0ch], eax
mov     [esp+44h+var_30], ecx
sub     [esp+44h+var_28], edx
cmp     [esp+44h+var_34], 0
jz      short loc_485d05
mov     eax, [esi+62h]
push    eax
call    sub_4199c0
sub     [esp+48h+var_2c], eax
add     esp, 4
mov     eax, [esi+62h]
push    eax
call    sub_419f30
sub     [esp+48h+var_28], eax
add     esp, 4
lea     eax, [esp+44h+var_30]
mov     ecx, [esi+62h]
mov     [esp+44h+var_24], 7d00h
push    eax
push    ecx
call    sub_4194a0
lea     ecx, [esp+4ch+arg_4]
add     esp, 8
mov     edx, [esi+62h]
push    ecx
push    edx
call    sub_41a5b0
add     esp, 8
cmp     [esp+44h+var_34], 0
jz      short loc_485d99
mov     ebx, [esi+2eh]
sub     ebx, [esi+26h]
cmp     edi, ebx
jz      short loc_485d99
mov     eax, [esi+62h]
sub     edi, ebx
push    eax
call    sub_419ef0
add     esp, 4
add     edi, eax
mov     eax, [esi+62h]
push    eax
call    sub_4199c0
lea     ecx, [esp+48h+var_20]
add     esp, 4
mov     ebx, eax
mov     edx, [esi+62h]
mov     eax, [esp+44h+arg_8]
push    ecx
mov     [esp+48h+var_1c], eax
push    edx
call    sub_419410
add     esp, 8
test    ebx, ebx
jz      short loc_485d8f
test    edi, edi
jle     short loc_485d8f
push    0
mov     eax, [esi+62h]
push    0
push    eax
call    sub_419a00
add     esp, 0ch
push    edi
push    esi
call    sub_486000
add     esp, 8
mov     eax, ds:frequency
push    eax
call    sub_474d50
add     esp, 4
mov     ebx, eax
mov     ecx, [esi+62h]
push    1
lea     eax, [esp+48h+var_10]
push    0
push    0
push    eax
push    ebx
push    ecx
call    sub_414e80
add     esp, 18h
mov     ebp, eax
call    sub_418060
mov     edi, eax
push    ebx
mov     eax, ds:frequency
push    eax
call    __beep_0
add     esp, 8
test    edi, edi
jz      short loc_485de7
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn
cmp     dword ptr [esi+66h], 0
jz      short loc_485df1
mov     [esp+44h+arg_10], ebp
mov     eax, [esp+44h+arg_8]
mov     ebp, [esp+44h+arg_c]
lea     ecx, [esp+44h+arg_4]
lea     edx, [esi+0ch]
mov     ebx, [ecx]
mov     ecx, [ecx+0ch]
mov     [edx], ebx
mov     [edx+4], eax
lea     eax, [esp+44h+arg_4]
push    eax
mov     [edx+8], ebp
mov     [edx+0ch], ecx
mov     edx, [esi+62h]
push    edx
call    sub_41a5b0
add     esp, 8
cmp     [esp+44h+var_34], 0
jz      short loc_485e34
mov     eax, [esi+62h]
push    eax
call    sub_419e40
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 34h
retn
sub     esp, 20h
push    ebx
push    esi
mov     esi, [esp+28h+arg_0]
push    edi
push    ebp
mov     eax, [esi+62h]
push    eax
call    sub_419540
lea     eax, [esp+34h+rcsrc2]
add     esp, 4
mov     edi, [esi+18h]
push    1
mov     ecx, [esp+34h+arg_4]
push    0
push    0
mov     edx, [esi+62h]
push    eax
push    ecx
push    edx
call    sub_414e80
add     esp, 18h
cmp     dword ptr [esi+66h], 0
jz      short loc_485e8f
mov     ecx, [esi+62h]
mov     [esi+18h], eax
lea     eax, [esi+0ch]
push    eax
push    ecx
call    sub_41a5b0
add     esp, 8
mov     eax, [esp+30h+rcsrc2.top]
or      eax, [esp+30h+rcsrc2.right]
or      eax, [esp+30h+rcsrc2.bottom]
or      eax, [esp+30h+rcsrc2.left]
jz      loc_485fa1
mov     eax, [esi+62h]
push    eax
call    sub_419620
mov     bp, ax
add     esp, 4
mov     eax, [esi+62h]
push    eax
call    sub_419920
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_485ed7
lea     eax, [esp+30h+var_10]
mov     ecx, [esi+62h]
push    eax
push    ecx
call    sub_4196f0
add     esp, 8
cmp     bp, 4
jz      short loc_485ee2
test    bp, bp
jnz     short loc_485f3b
cmp     [esi+18h], edi
jl      short loc_485f40
mov     eax, [esp+30h+rcsrc2.bottom]
mov     ecx, [esp+30h+rcsrc2.right]
mov     edx, [esp+30h+rcsrc2.top]
push    eax
mov     eax, [esp+34h+rcsrc2.left]
push    ecx
mov     cx, [esi+1ch]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [esi+1ch], ax
add     esp, 14h
test    ebx, ebx
jz      loc_485f9a
mov     eax, [esp+30h+var_10.bottom]
mov     ecx, [esp+30h+var_10.right]
mov     edx, [esp+30h+var_10.top]
push    eax
mov     eax, [esp+34h+var_10.left]
push    ecx
mov     cx, [esi+1ch]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [esi+1ch], ax
add     esp, 14h
jmp     short loc_485f9a
cmp     [esi+18h], edi
jge     short loc_485f4c
mov     [esp+30h+rcsrc2.bottom], edi
test    ebx, ebx
jz      short loc_485f4c
mov     [esp+30h+var_10.bottom], edi
mov     eax, [esp+30h+rcsrc2.bottom]
mov     ecx, [esp+30h+rcsrc2.right]
mov     edx, [esp+30h+rcsrc2.top]
push    eax
mov     eax, [esp+34h+rcsrc2.left]
push    ecx
mov     cx, [esi+1eh]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [esi+1eh], ax
add     esp, 14h
test    ebx, ebx
jz      short loc_485f9a
mov     eax, [esp+30h+var_10.bottom]
mov     ecx, [esp+30h+var_10.right]
mov     edx, [esp+30h+var_10.top]
push    eax
mov     eax, [esp+34h+var_10.left]
push    ecx
mov     cx, [esi+1eh]
push    edx
push    eax
push    ecx
call    sub_474400
mov     [esi+1eh], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 20h
retn
sub     esp, 10h
lea     eax, [esp+10h+var_10]
push    esi
mov     esi, [esp+14h+arg_0]
push    eax
mov     ecx, [esi+62h]
push    ecx
call    sub_419470
add     esp, 8
mov     ecx, [esi+62h]
push    ecx
call    sub_419920
add     esp, 4
test    eax, eax
jz      short loc_485fe9
mov     eax, [esi+62h]
push    eax
call    sub_419ef0
add     [esp+18h+var_4], eax
add     esp, 4
mov     eax, [esp+14h+var_4]
mov     [esi+18h], eax
pop     esi
add     esp, 10h
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    eax
mov     ecx, [esi+62h]
push    ecx
call    sub_419ed0
add     esp, 8
push    esi
call    sub_485fb0
add     esp, 4
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
push    offset loc_486080
mov     ecx, [eax+62h]
push    ecx
call    sub_414df0
mov     dword_4aea00, 1
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
push    0
push    0
mov     ecx, [eax+62h]
push    ecx
call    sub_414df0
mov     dword_4aea00, 0
add     esp, 0ch
retn
push    esi
mov     esi, [esp+0ch]
test    esi, esi
jz      short loc_4860f9
mov     eax, [esp+8]
push    eax
call    sub_419620
add     esp, 4
cmp     ax, 4
jz      short loc_4860ce
test    ax, ax
jz      short loc_4860ce
mov     ecx, [esp+10h]
mov     eax, [ecx+0ch]
mov     edx, [ecx+8]
push    eax
push    edx
mov     dx, [esi+1eh]
mov     eax, [ecx+4]
push    eax
mov     ecx, [ecx]
push    ecx
push    edx
call    sub_474400
mov     [esi+1eh], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
pop     esi
retn
mov     ecx, [esp+10h]
mov     eax, [ecx+0ch]
mov     edx, [ecx+8]
push    eax
push    edx
mov     dx, [esi+1ch]
mov     eax, [ecx+4]
push    eax
mov     ecx, [ecx]
push    ecx
push    edx
call    sub_474400
mov     [esi+1ch], ax
add     esp, 14h
or      ds:byte_4a61d4, 1
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+14h+arg_0]
push    edi
call    sub_463590
add     esp, 4
test    eax, eax
jz      short loc_48618d
push    edi
call    sub_4624e0
add     esp, 4
cmp     eax, 8
jnz     short loc_48618d
mov     ebx, [esp+14h+lpbuffer]
lea     eax, [esp+14h+var_2]
push    eax
push    3f3h
push    edi
mov     byte ptr [ebx], 0
call    sub_461350
add     esp, 0ch
mov     ebp, eax
test    ebp, ebp
jz      loc_4861dc
push    ebp
push    edi
call    sub_41f4f0
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_486174
mov     eax, dword ptr [esp+14h+arg_8]
mov     ecx, [esi]
push    eax
push    ecx
push    ebx
call    sub_47f9f0
add     esp, 0ch
push    esi
call    sub_45ba00
add     esp, 4
push    ebp
push    0
push    3f3h
push    edi
call    sub_4613a0
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, edi
shr     esi, 10h
push    esi
call    sub_461830
add     esp, 4
test    eax, eax
movzx   eax, si
jz      short loc_4861a9
shl     eax, 10h
mov     al, 2
jmp     short loc_4861ae
shl     eax, 10h
mov     al, 1
cmp     eax, edi
jnz     short loc_4861c9
mov     ebx, [esp+14h+lpbuffer]
push    28h
push    ebx
call    sub_469460
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, dword ptr [esp+14h+arg_8]
mov     ebx, [esp+14h+lpbuffer]
push    eax
push    ebx
push    edi
call    sub_462d70
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 19ch
push    ebx
push    esi
xor     si, si
push    edi
mov     edi, ds:lstrcmpia
mov     ebx, [esp+1a8h+lpstring1]
lea     eax, [esp+1a8h+string2]
push    esi
push    4d0h
push    19ah
push    eax
call    sub_47fe70
lea     eax, [esp+1b8h+string2]
add     esp, 10h
push    eax
push    ebx
call    edi
test    eax, eax
jz      short loc_486241
inc     si
cmp     si, 4
jle     short loc_486209
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 19ch
retn
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 19ch
retn
sub     esp, 58h
push    ebx
push    esi
xor     si, si
push    edi
mov     ebx, [esp+64h+arg_0]
cmp     byte ptr [ebx], 0
jnz     short loc_48626c
xor     ax, ax
pop     edi
pop     esi
pop     ebx
add     esp, 58h
retn
push    offset dword_4a9bb0
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_486292
push    0
push    56h
push    offset dword_4a9bb0
call    sub_48e770
add     esp, 0ch
test    eax, eax
jz      short loc_4862c2
lea     edi, [esp+64h+var_58]
xor     eax, eax
mov     ecx, 15h
rep stosd
stosw
lea     eax, [esp+64h+var_58]
push    eax
push    offset dword_4a9bb0
call    sub_48e920
mov     si, ax
add     esp, 8
push    ebx
push    1
push    esi
call    sub_4862d0
add     esp, 0ch
mov     ax, si
pop     edi
pop     esi
pop     ebx
add     esp, 58h
retn
push    ebx
push    esi
mov     si, [esp+8+arg_0]
push    edi
push    esi
call    sub_4863e0
add     esp, 4
mov     edi, eax
mov     eax, [esp+0ch+arg_4]
test    eax, eax
jz      short loc_4862f2
cmp     eax, 1
jz      short loc_486310
jmp     short loc_48632f
mov     eax, [esp+0ch+arg_8]
push    20h
push    eax
push    edi
call    sub_47f9f0
add     esp, 0ch
push    edi
call    sub_453ee0
add     esp, 4
mov     [edi+20h], eax
jmp     short loc_48632f
lea     ebx, [edi+2ah]
push    20h
mov     eax, [esp+10h+arg_8]
push    eax
push    ebx
call    sub_47f9f0
add     esp, 0ch
push    ebx
call    sub_453ee0
add     esp, 4
mov     [edi+4ah], eax
push    esi
call    sub_486410
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 44h
push    esi
push    edi
mov     di, [esp+4ch+arg_0]
test    di, di
jnz     short loc_486358
xor     ax, ax
pop     edi
pop     esi
add     esp, 44h
retn
mov     esi, [esp+4ch+src]
push    4
lea     eax, [esp+50h+var_44]
push    esi
push    eax
call    _memcpy
movsx   ecx, [esp+58h+var_42]
movsx   eax, di
add     esp, 0ch
dec     eax
imul    eax, ecx
lea     ecx, [esp+4ch+var_40]
push    40h
lea     edx, [eax+esi+4]
push    edx
push    ecx
call    _memcpy
lea     ecx, [esp+58h+string1]
add     esp, 0ch
push    ecx
push    1
call    sub_4864a0
add     esp, 8
test    ax, ax
jnz     short loc_4863d1
lea     eax, [esp+4ch+string1]
push    eax
call    sub_486250
mov     si, ax
add     esp, 4
test    si, si
jz      short loc_4863ce
lea     eax, [esp+4ch+var_40]
push    eax
push    0
push    esi
call    sub_4862d0
mov     ax, si
add     esp, 0ch
pop     edi
pop     esi
add     esp, 44h
retn
xor     ax, ax
pop     edi
pop     esi
add     esp, 44h
retn
push    offset dword_4a9bb0
call    sub_48f140
add     esp, 4
mov     cl, ds:byte_4a9bbc
movsx   eax, [esp+arg_0]
dec     eax
shl     eax, cl
mov     ecx, ds:dword_4a9bc6
add     eax, [ecx]
retn
push    offset dword_4a9bb0
call    sub_48f1a0
add     esp, 4
retn
push    esi
mov     si, [esp+4+arg_0]
test    si, si
jnz     short loc_486434
mov     eax, [esp+4+arg_8]
pop     esi
mov     byte ptr [eax], 0
retn
push    esi
call    sub_4863e0
mov     ecx, [esp+8+arg_4]
add     esp, 4
test    ecx, ecx
jz      short loc_48645c
cmp     ecx, 1
jz      short loc_48647a
mov     eax, [esp+4+arg_8]
push    esi
mov     byte ptr [eax], 0
call    sub_486410
add     esp, 4
pop     esi
retn
mov     ecx, [esp+4+arg_c]
push    ecx
push    eax
mov     eax, [esp+0ch+arg_8]
push    eax
call    sub_47f9f0
add     esp, 0ch
push    esi
call    sub_486410
add     esp, 4
pop     esi
retn
mov     ecx, [esp+4+arg_c]
add     eax, 2ah
mov     edx, [esp+4+arg_8]
push    ecx
push    eax
push    edx
call    sub_47f9f0
add     esp, 0ch
push    esi
call    sub_486410
add     esp, 4
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
push    offset dword_4a9bb0
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_4864c3
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     edi, ds:dword_4a9bb0
push    offset dword_4a9bb0
mov     [esp+18h+var_2], 0
call    sub_48f140
mov     esi, [esp+18h+lpstring1]
add     esp, 4
mov     ebp, 1
push    esi
call    sub_453ee0
add     esp, 4
mov     ebx, eax
cmp     [esp+14h+arg_0], 0
jnz     short loc_486526
cmp     edi, ebp
jb      short loc_48655c
lea     edx, [ebp-1]
mov     cl, ds:byte_4a9bbc
mov     eax, ds:dword_4a9bc6
shl     edx, cl
add     edx, [eax]
cmp     [edx+20h], ebx
jnz     short loc_48651f
push    edx
push    esi
call    ds:lstrcmpia
test    eax, eax
jz      short loc_486557
inc     ebp
cmp     ebp, edi
jbe     short loc_4864fc
jmp     short loc_48655c
cmp     edi, ebp
jb      short loc_48655c
lea     edx, [ebp-1]
mov     cl, ds:byte_4a9bbc
mov     eax, ds:dword_4a9bc6
shl     edx, cl
add     edx, [eax]
cmp     [edx+4ah], ebx
jnz     short loc_486550
add     edx, 2ah
push    edx
push    esi
call    ds:lstrcmpia
test    eax, eax
jz      short loc_486557
inc     ebp
cmp     ebp, edi
jbe     short loc_48652a
jmp     short loc_48655c
mov     [esp+14h+var_2], bp
push    offset dword_4a9bb0
call    sub_48f1a0
mov     ax, [esp+18h+var_2]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    offset dword_4a9bb0
call    sub_48e7d0
add     esp, 4
retn
sub     esp, 5ch
push    esi
push    edi
xor     si, si
push    offset dword_4a9bd0
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_4865be
push    0
push    5ch
push    offset dword_4a9bd0
call    sub_48e770
add     esp, 0ch
test    eax, eax
jz      short loc_4865ee
lea     edi, [esp+64h+var_5c]
mov     esi, [esp+64h+arg_4]
mov     ecx, 16h
rep movsd
movsw
mov     ax, [esp+64h+arg_0]
lea     ecx, [esp+64h+var_5c]
mov     [esp+64h+var_2], ax
push    ecx
push    offset dword_4a9bd0
call    sub_48e920
mov     si, ax
add     esp, 8
mov     ax, si
pop     edi
pop     esi
add     esp, 5ch
retn
sub     esp, 68h
lea     eax, [esp+68h+var_60]
push    esi
mov     esi, [esp+6ch+src]
push    edi
push    4
push    esi
push    eax
call    _memcpy
mov     eax, [esp+7ch+arg_0]
add     esp, 0ch
movsx   ecx, [esp+70h+var_5e]
and     eax, 0ffffh
push    2
dec     eax
imul    eax, ecx
lea     ecx, [esp+74h+var_66]
lea     esi, [eax+esi+4]
push    esi
push    ecx
add     esi, 2
call    _memcpy
lea     eax, [esp+7ch+var_64]
add     esp, 0ch
push    eax
push    esi
call    sub_449060
mov     di, [esp+78h+arg_8]
add     esp, 8
cmp     [esp+70h+var_64], 0
push    eax
push    edi
jz      short loc_48666b
call    sub_486760
jmp     short loc_486670
call    sub_4866d0
add     esp, 8
test    ax, ax
jnz     short loc_486695
lea     eax, [esp+70h+var_5c]
push    eax
push    edi
push    esi
call    sub_448ff0
lea     eax, [esp+7ch+var_5c]
add     esp, 0ch
push    eax
push    edi
call    sub_486590
add     esp, 8
pop     edi
pop     esi
add     esp, 68h
retn
push    offset dword_4a9bd0
call    sub_48f140
mov     eax, [esp+4+arg_0]
add     esp, 4
and     eax, 0ffffh
mov     cl, ds:byte_4a9bdc
dec     eax
shl     eax, cl
mov     ecx, ds:dword_4a9be6
add     eax, [ecx]
retn
push    ebx
push    esi
push    edi
push    ebp
push    offset dword_4a9bd0
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_4866ed
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     di, di
mov     ebp, ds:dword_4a9bd0
push    offset dword_4a9bd0
mov     ebx, 1
call    sub_48f140
add     esp, 4
cmp     ebp, ebx
jb      short loc_486745
mov     si, [esp+10h+arg_0]
lea     edx, [ebx-1]
mov     cl, ds:byte_4a9bdc
mov     eax, ds:dword_4a9be6
shl     edx, cl
add     edx, [eax]
cmp     [edx+5ah], si
jnz     short loc_48673b
push    edx
call    sub_449830
movsx   ecx, [esp+14h+arg_4]
add     esp, 4
cmp     eax, ecx
jz      short loc_486742
inc     ebx
cmp     ebp, ebx
jnb     short loc_486711
jmp     short loc_486745
mov     di, bx
push    offset dword_4a9bd0
call    sub_48f1a0
mov     ax, di
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
push    offset dword_4a9bd0
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_486783
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     esi, ds:dword_4a9bd0
push    offset dword_4a9bd0
mov     [esp+18h+var_2], 0
mov     ebx, 1
call    sub_48f140
add     esp, 4
cmp     esi, ebx
jb      short loc_4867db
mov     bp, [esp+14h+arg_4]
mov     eax, ds:dword_4a9be6
mov     di, [esp+14h+arg_0]
mov     cl, ds:byte_4a9bdc
mov     eax, [eax]
lea     edx, [ebx-1]
shl     edx, cl
add     edx, eax
cmp     [edx+5ah], di
jnz     short loc_4867cf
cmp     [edx], bp
jz      short loc_4867d6
inc     ebx
cmp     esi, ebx
jnb     short loc_4867bd
jmp     short loc_4867db
mov     [esp+14h+var_2], bx
push    offset dword_4a9bd0
call    sub_48f1a0
mov     ax, [esp+18h+var_2]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_4866a0
add     esp, 4
retn
push    offset dword_4a9bd0
call    sub_48f1a0
add     esp, 4
retn
push    offset dword_4a9bd0
call    sub_48e7d0
add     esp, 4
retn
push    42h
push    3dch
call    sub_45bd50
add     esp, 8
mov     dword_4aea44, eax
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     eax, dword_4aea44
test    eax, eax
jz      short locret_48686c
push    eax
call    sub_45bdb0
mov     dword_4aea44, 0
add     esp, 4
retn
mov     edx, [esp+arg_0]
push    edi
mov     edi, edx
xor     eax, eax
mov     ecx, 20h
rep stosd
mov     word ptr [edx+0ch], 1
mov     ax, [esp+4+arg_4]
pop     edi
mov     [edx+0eh], ax
retn
movsx   ecx, [esp+arg_0]
mov     eax, dword_4aea44
lea     edx, [ecx+ecx*8]
lea     ecx, [ecx+edx*2]
mov     ax, [eax+ecx*2+20h]
retn
push    ebx
push    esi
push    edi
mov     eax, dword_4ae1e0
mov     di, [esp+0ch+arg_0]
movsx   ebx, di
movzx   esi, di
shl     ebx, 6
shl     esi, 10h
mov     ecx, [eax+ebx+10h]
mov     edx, [ecx]
xor     ecx, ecx
mov     cx, [edx+32h]
or      ecx, esi
push    ecx
call    sub_470640
add     esp, 4
test    eax, eax
jnz     short loc_486914
cmp     ds:dword_4a9a0c, 0
jnz     short loc_486908
mov     edi, 138ah
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     edi, ds:dword_4a9a0c
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    eax
push    edi
call    sub_486950
add     esp, 8
mov     edi, eax
mov     eax, dword_4ae1e0
push    0
mov     edx, [eax+ebx+10h]
xor     eax, eax
mov     ecx, [edx]
mov     ax, [ecx+32h]
or      eax, esi
push    eax
call    sub_470920
add     esp, 8
cmp     edi, 1
jnz     short loc_486948
mov     edi, 1389h
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, [esp+arg_0]
sub     esp, 100h
lea     edx, [eax+eax*8]
push    ebx
lea     eax, [eax+edx*2]
push    esi
add     eax, eax
push    edi
add     eax, dword_4aea44
mov     ecx, [esp+10ch+hmem]
push    ebp
mov     [esp+110h+var_f4], eax
push    ecx
mov     [esp+114h+var_100], 0
call    ds:globallock
cmp     word ptr [eax], 13h
mov     [esp+110h+var_f0], eax
mov     ebp, eax
jz      short loc_4869b1
mov     eax, [esp+110h+hmem]
push    eax
call    ds:globalunlock
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 100h
retn
mov     bx, [ebp+2]
push    400h
movsx   eax, bx
shl     eax, 7
lea     ecx, [esp+114h+var_ec]
push    eax
push    ecx
call    sub_445f40
add     esp, 0ch
test    eax, eax
jnz     short loc_4869f0
mov     eax, [esp+110h+hmem]
push    eax
call    ds:globalunlock
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 100h
retn
mov     eax, [ebp+6]
mov     ecx, [ebp+0eh]
mov     si, 1
add     ecx, ebp
lea     edx, [eax+ebp]
add     ebp, 18h
add     eax, ecx
mov     [esp+110h+var_fc], edx
cmp     bx, si
mov     [esp+110h+src], eax
jl      loc_486ad9
lea     eax, [esp+110h+var_d4]
push    54h
push    ebp
push    eax
call    _memcpy
add     esp, 0ch
cmp     word ptr [esp+110h+var_d4], si
jle     short loc_486a5f
lea     edi, [esp+110h+var_80]
xor     eax, eax
mov     ecx, 20h
push    80h
rep stosd
inc     si
lea     eax, [esp+114h+var_80]
lea     ecx, [esp+114h+var_ec]
push    eax
push    ecx
call    sub_445f90
add     esp, 0ch
cmp     word ptr [esp+110h+var_d4], si
jg      short loc_486a2c
lea     ecx, [ebp+54h]
mov     eax, dword ptr [esp+110h+arg_0]
lea     edx, [esp+110h+var_80]
push    eax
mov     eax, [esp+114h+src]
push    edx
mov     edx, [esp+118h+var_fc]
push    eax
push    edx
push    ecx
lea     ecx, [esp+124h+var_d4]
push    ecx
call    sub_486b90
movsx   eax, ax
add     esp, 18h
add     eax, 54h
add     ebp, eax
cmp     si, 1
jnz     short loc_486aa3
and     [esp+110h+var_80], 0e8ffffffh
test    [esp+110h+var_74], 24h
jz      short loc_486ab5
mov     [esp+110h+var_100], 1
lea     eax, [esp+110h+var_80]
push    80h
inc     si
push    eax
lea     ecx, [esp+118h+var_ec]
push    ecx
call    sub_445f90
add     esp, 0ch
dec     bx
jnz     loc_486a15
dec     si
mov     eax, [esp+110h+var_f0]
mov     ax, [eax+4]
mov     ecx, [esp+110h+var_f4]
cmp     [esp+110h+var_100], 0
mov     [ecx+1eh], ax
jz      short loc_486af8
or      al, 1
mov     [ecx+1eh], ax
mov     eax, [esp+110h+var_f0]
mov     ecx, [esp+110h+var_f4]
mov     ax, [eax+12h]
mov     edx, [esp+110h+hmem]
mov     [ecx+20h], ax
push    edx
call    ds:globalunlock
lea     ecx, [esp+110h+var_80]
lea     edx, [esp+110h+var_ec]
push    ecx
push    edx
call    sub_446030
add     esp, 8
test    eax, eax
jnz     short loc_486b48
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 100h
retn
movsx   ecx, si
push    ecx
push    eax
mov     eax, [esp+118h+var_f4]
push    0
push    80h
push    eax
call    sub_48e840
add     esp, 14h
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 100h
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_4759f0
add     esp, 8
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
add     esi, 2
mov     ebx, [esp+10h+arg_10]
mov     edi, ebx
mov     ecx, 14h
rep movsd
movsw
test    byte ptr [ebx+1], 3
jz      short loc_486c1d
mov     cx, [ebx+24h]
mov     si, [ebx+26h]
test    cx, cx
jz      short loc_486bd1
mov     eax, [esp+10h+src]
push    eax
push    ecx
call    sub_486340
mov     [ebx+24h], ax
add     esp, 8
test    si, si
jz      short loc_486bf2
mov     ax, [ebx+24h]
mov     ecx, [esp+10h+arg_8]
push    eax
push    ecx
push    esi
call    sub_486600
mov     [ebx+26h], ax
add     esp, 0ch
mov     si, ax
jmp     short loc_486bf7
mov     si, [esp+10h+var_2]
test    si, si
jz      short loc_486c27
push    esi
call    sub_486800
add     esp, 4
push    eax
call    sub_449830
mov     [ebx+56h], ax
add     esp, 4
push    esi
call    sub_486810
add     esp, 4
jmp     short loc_486c27
xor     eax, eax
mov     [ebx+24h], ax
mov     [ebx+26h], ax
test    byte ptr [ebx+3], 10h
jnz     short loc_486c35
mov     word ptr [ebx+22h], 0
jmp     short loc_486c8b
mov     ax, [esp+10h+arg_14]
cmp     ax, 18h
jz      short loc_486c8b
cmp     ax, 19h
jz      short loc_486c8b
movzx   esi, ax
shl     esi, 10h
xor     eax, eax
mov     ax, [ebx+22h]
or      esi, eax
push    esi
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_486c7f
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 0dh
jnz     short loc_486c7f
push    esi
call    sub_461f70
add     esp, 4
cmp     ax, 3
jz      short loc_486c8b
mov     word ptr [ebx+22h], 0
and     dword ptr [ebx], 0efffffffh
mov     ax, [ebx+1ch]
test    ax, ax
jz      short loc_486cea
movsx   eax, ax
shl     eax, 2
push    2
push    eax
call    sub_45b8f0
add     esp, 8
mov     [ebx+52h], eax
test    eax, eax
jz      short loc_486cdc
push    eax
call    ds:globallock
xor     dx, dx
cmp     [ebx+1ch], dx
jle     short loc_486cd2
mov     ecx, [esp+10h+arg_4]
movsx   esi, dx
inc     dx
movsx   edi, word ptr [ecx+esi*2]
mov     [eax+esi*4], edi
cmp     [ebx+1ch], dx
jg      short loc_486cc0
mov     eax, [ebx+52h]
push    eax
call    ds:globalunlock
mov     ax, [ebx+1ch]
pop     edi
add     ax, ax
pop     esi
pop     ebx
add     esp, 4
retn
xor     ax, ax
pop     edi
mov     dword ptr [ebx+52h], 0
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
movsx   ebx, [esp+8+arg_0]
push    edi
push    ebp
lea     ecx, [ebx+ebx*8]
lea     ebx, [ebx+ecx*2]
add     ebx, ebx
add     ebx, dword_4aea44
mov     di, [ebx]
push    ebx
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_486d76
push    ebx
mov     ebp, 1
mov     si, bp
call    sub_48f140
add     esp, 4
cmp     di, bp
jl      short loc_486d64
mov     cl, [ebx+0ch]
mov     eax, [ebx+16h]
movsx   edx, si
dec     edx
shl     edx, cl
add     edx, [eax]
test    [edx+0ch], bp
jz      short loc_486d5d
mov     eax, [edx+52h]
push    eax
call    sub_45ba00
add     esp, 4
inc     si
cmp     si, di
jle     short loc_486d3d
push    ebx
call    sub_48f1a0
add     esp, 4
push    ebx
call    sub_48e7d0
add     esp, 4
mov     si, 1
xor     edi, edi
movsx   eax, si
lea     edx, [eax+eax*8]
lea     eax, [eax+edx*2]
add     eax, eax
add     eax, dword_4aea44
push    eax
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_486d9f
mov     edi, 1
inc     si
cmp     si, 1ah
jl      short loc_486d7c
test    edi, edi
jnz     short loc_486db5
call    sub_486580
call    sub_486820
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
movsx   esi, [esp+4+arg_4]
lea     ecx, [esi+esi*8]
lea     esi, [esi+ecx*2]
add     esi, esi
add     esi, dword_4aea44
push    esi
call    sub_48f140
add     esp, 4
mov     cl, [esi+0ch]
movsx   eax, [esp+4+arg_0]
dec     eax
shl     eax, cl
mov     ecx, [esi+16h]
pop     esi
add     eax, [ecx]
retn
movsx   ecx, [esp+arg_4]
mov     eax, dword_4aea44
lea     edx, [ecx+ecx*8]
lea     ecx, [ecx+edx*2]
lea     edx, [eax+ecx*2]
push    edx
call    sub_48f1a0
add     esp, 4
retn
sub     esp, 80h
push    ebx
push    esi
movsx   esi, [esp+88h+arg_4]
push    edi
push    ebp
lea     ecx, [esi+esi*8]
lea     esi, [esi+ecx*2]
mov     ebp, 1
mov     di, bp
add     esi, esi
add     esi, dword_4aea44
mov     bx, [esi]
push    esi
call    sub_48f140
add     esp, 4
cmp     bx, bp
jl      short loc_486e66
mov     cl, [esi+0ch]
mov     eax, [esi+16h]
mov     eax, [eax]
movsx   edx, di
dec     edx
shl     edx, cl
add     edx, eax
test    [edx+0ch], bp
jz      short loc_486ea9
inc     di
cmp     bx, di
jge     short loc_486e51
push    esi
call    sub_48f1a0
mov     ax, word ptr [esp+94h+arg_0]
lea     ecx, [esp+94h+var_80]
add     esp, 4
push    eax
push    ecx
call    sub_486870
lea     ecx, [esp+98h+var_80]
add     esp, 8
push    ecx
push    esi
call    sub_48e920
mov     di, ax
add     esp, 8
test    di, di
jz      short loc_486ec5
mov     ax, di
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 80h
retn
mov     eax, [esp+90h+arg_0]
push    eax
push    edx
call    sub_486870
add     esp, 8
push    esi
call    sub_48f1a0
add     esp, 4
jmp     short loc_486e9b
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 80h
retn
push    esi
push    edi
mov     di, [esp+8+arg_4]
mov     si, [esp+8+arg_0]
push    edi
push    esi
call    sub_486dc0
add     esp, 8
push    eax
call    sub_486f10
add     esp, 4
push    edi
push    esi
call    sub_486df0
add     esp, 8
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+52h]
push    eax
call    sub_45ba00
mov     dword ptr [esi+52h], 0
add     esp, 4
mov     word ptr [esi+0ch], 0
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
push    edi
mov     di, [esp+8+arg_4]
push    edi
push    eax
call    sub_486e10
mov     si, ax
add     esp, 8
test    si, si
jz      short loc_486f59
push    1
push    edi
push    esi
call    sub_486f60
add     esp, 0ch
mov     ax, si
pop     edi
pop     esi
retn
movsx   edx, [esp+arg_4]
push    esi
lea     ecx, [edx+edx*8]
movsx   esi, [esp+4+arg_0]
lea     edx, [edx+ecx*2]
dec     esi
add     edx, edx
add     edx, dword_4aea44
mov     cl, [edx+0ch]
mov     eax, [edx+16h]
shl     esi, cl
add     esi, [eax]
cmp     [esp+4+arg_8], 0
jz      short loc_486f91
or      byte ptr [esi+0ch], 2
pop     esi
retn
and     byte ptr [esi+0ch], 0fdh
pop     esi
retn
movsx   edx, [esp+arg_4]
push    esi
lea     ecx, [edx+edx*8]
movsx   esi, [esp+4+arg_0]
lea     edx, [edx+ecx*2]
dec     esi
add     edx, edx
add     edx, dword_4aea44
mov     cl, [edx+0ch]
mov     eax, [edx+16h]
shl     esi, cl
mov     ecx, [eax]
mov     eax, [esi+ecx]
pop     esi
retn
push    esi
push    edi
mov     di, [esp+8+arg_4]
mov     si, [esp+8+arg_0]
push    edi
push    esi
call    sub_486dc0
mov     ax, [eax+24h]
mov     ecx, [esp+10h+arg_c]
mov     edx, [esp+10h+arg_8]
add     esp, 8
push    ecx
push    edx
push    1
push    eax
call    sub_486420
add     esp, 10h
push    edi
push    esi
call    sub_486df0
add     esp, 8
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     si, [esp+8+arg_0]
push    edi
mov     di, [esp+0ch+arg_4]
push    edi
push    esi
call    sub_486dc0
mov     bx, [eax+56h]
add     esp, 8
push    edi
push    esi
call    sub_486df0
mov     ax, bx
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     si, [esp+8+arg_0]
push    edi
mov     di, [esp+0ch+arg_4]
push    edi
push    esi
call    sub_486dc0
mov     bx, [eax+12h]
add     esp, 8
push    edi
push    esi
call    sub_486df0
mov     ax, bx
add     esp, 8
pop     edi
pop     esi
pop     ebx
retn
movsx   edx, [esp+arg_4]
push    esi
lea     ecx, [edx+edx*8]
movsx   esi, [esp+4+arg_0]
lea     edx, [edx+ecx*2]
dec     esi
add     edx, edx
add     edx, dword_4aea44
mov     cl, [edx+0ch]
mov     eax, [edx+16h]
shl     esi, cl
mov     ecx, [eax]
mov     eax, [esi+ecx+4]
pop     esi
retn
movsx   edx, [esp+arg_4]
push    esi
lea     ecx, [edx+edx*8]
movsx   esi, [esp+4+arg_0]
lea     edx, [edx+ecx*2]
dec     esi
add     edx, edx
add     edx, dword_4aea44
mov     cl, [edx+0ch]
mov     eax, [edx+16h]
shl     esi, cl
mov     ecx, [eax]
mov     eax, [esi+ecx+8]
pop     esi
retn
movsx   edx, [esp+arg_4]
push    esi
lea     ecx, [edx+edx*8]
movsx   esi, [esp+4+arg_0]
lea     edx, [edx+ecx*2]
dec     esi
add     edx, edx
add     edx, dword_4aea44
mov     cl, [edx+0ch]
mov     eax, [edx+16h]
shl     esi, cl
mov     ecx, [eax]
movzx   ax, byte ptr [esi+ecx+10h]
pop     esi
retn
movsx   edx, [esp+arg_0]
push    esi
dec     edx
movsx   esi, [esp+4+arg_4]
lea     ecx, [esi+esi*8]
lea     esi, [esi+ecx*2]
add     esi, esi
add     esi, dword_4aea44
mov     cl, [esi+0ch]
mov     eax, [esi+16h]
shl     edx, cl
add     edx, [eax]
test    byte ptr [edx+3], 10h
jz      short loc_487130
mov     ax, [edx+22h]
pop     esi
retn
xor     ax, ax
pop     esi
retn
movsx   edx, [esp+arg_4]
push    esi
lea     ecx, [edx+edx*8]
movsx   esi, [esp+4+arg_0]
lea     edx, [edx+ecx*2]
dec     esi
add     edx, edx
add     edx, dword_4aea44
mov     cl, [edx+0ch]
mov     eax, [edx+16h]
shl     esi, cl
mov     ecx, [eax]
mov     ax, [esi+ecx+14h]
pop     esi
retn
movsx   edx, [esp+arg_4]
push    esi
lea     ecx, [edx+edx*8]
movsx   esi, [esp+4+arg_0]
lea     edx, [edx+ecx*2]
dec     esi
add     edx, edx
add     edx, dword_4aea44
mov     cl, [edx+0ch]
mov     eax, [edx+16h]
shl     esi, cl
mov     ecx, [eax]
movsx   eax, word ptr [esi+ecx+16h]
pop     esi
retn
movsx   edx, [esp+arg_4]
push    esi
lea     ecx, [edx+edx*8]
movsx   esi, [esp+4+arg_0]
lea     edx, [edx+ecx*2]
dec     esi
add     edx, edx
add     edx, dword_4aea44
mov     cl, [edx+0ch]
mov     eax, [edx+16h]
shl     esi, cl
mov     ecx, [eax]
movsx   eax, word ptr [esi+ecx+18h]
pop     esi
retn
movsx   edx, [esp+arg_4]
push    esi
lea     ecx, [edx+edx*8]
movsx   esi, [esp+4+arg_0]
lea     edx, [edx+ecx*2]
dec     esi
add     edx, edx
add     edx, dword_4aea44
mov     cl, [edx+0ch]
mov     eax, [edx+16h]
shl     esi, cl
mov     ecx, [eax]
movsx   eax, word ptr [esi+ecx+1ah]
pop     esi
retn
push    ebx
push    esi
mov     si, [esp+8+arg_0]
push    edi
mov     di, [esp+0ch+arg_4]
push    edi
push    esi
call    sub_486dc0
mov     cx, [eax+1ch]
add     esp, 8
mov     ebx, [eax+52h]
mov     eax, [esp+0ch+arg_8]
mov     [eax], cx
push    edi
push    esi
call    sub_486df0
add     esp, 8
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 8
push    ebx
push    esi
mov     bx, [esp+10h+arg_4]
push    edi
mov     si, [esp+14h+arg_0]
push    ebx
mov     di, 0
push    esi
call    sub_486dc0
add     esp, 8
test    byte ptr [eax+3], 1
jz      short loc_487268
mov     di, [eax+1eh]
push    ebx
push    esi
call    sub_486df0
add     esp, 8
movsx   eax, di
push    eax
push    ebx
call    sub_40d090
add     esp, 8
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
push    esi
mov     bp, 1
call    sub_475630
mov     [esp+18h+var_2], ax
add     esp, 4
cmp     ax, bp
jl      short loc_4872da
mov     di, [esp+14h+arg_4]
mov     bx, [esp+14h+arg_8]
push    ebp
push    esi
inc     bp
call    sub_475820
add     esp, 8
push    ebx
push    edi
push    eax
call    sub_4872f0
add     esp, 0ch
cmp     bp, [esp+14h+var_2]
jle     short loc_4872bc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    ebp
mov     bp, [esp+10h+arg_8]
push    ebp
push    eax
call    sub_486dc0
add     esp, 8
mov     esi, eax
mov     eax, [esp+10h+arg_4]
push    ebp
push    eax
call    sub_486dc0
add     esp, 8
mov     edi, eax
mov     ebx, [esi]
mov     eax, ebx
and     eax, 100h
jz      short loc_487333
test    bh, 2
jz      short loc_487333
mov     cx, [esi+26h]
mov     [edi+26h], cx
jmp     short loc_48733e
test    bh, 3
jz      short loc_48733e
mov     word ptr [edi+26h], 0
test    eax, eax
jz      short loc_48734a
mov     ax, [esi+24h]
mov     [edi+24h], ax
test    bh, 2
jz      short loc_487357
mov     ax, [esi+56h]
mov     [edi+56h], ax
test    ebx, 2000000h
jz      short loc_487365
mov     al, [esi+10h]
mov     [edi+10h], al
test    bh, 10h
jz      short loc_487370
mov     eax, [esi+8]
mov     [edi+8], eax
test    bh, 40h
jz      short loc_48737b
mov     eax, [esi+4]
mov     [edi+4], eax
test    bh, 8
jz      short loc_487388
mov     ax, [esi+14h]
mov     [edi+14h], ax
test    ebx, 400000h
jz      short loc_487398
mov     ax, [esi+16h]
mov     [edi+16h], ax
test    ebx, 100000h
jz      short loc_4873a8
mov     ax, [esi+18h]
mov     [edi+18h], ax
test    ebx, 200000h
jz      short loc_4873b8
mov     ax, [esi+1ah]
mov     [edi+1ah], ax
test    ebx, 1000000h
jz      short loc_4873c8
mov     ax, [esi+1eh]
mov     [edi+1eh], ax
test    ebx, 10000000h
jz      short loc_4873d8
mov     ax, [esi+22h]
mov     [edi+22h], ax
test    ebx, 800000h
jz      short loc_48741a
mov     eax, [edi+52h]
push    eax
call    sub_45ba00
mov     dword ptr [edi+52h], 0
add     esp, 4
mov     eax, [esi+52h]
test    eax, eax
jz      short loc_487414
push    eax
call    sub_45bab0
add     esp, 4
mov     [edi+52h], eax
test    eax, eax
jz      short loc_487414
mov     ax, [esi+1ch]
mov     [edi+1ch], ax
jmp     short loc_48741a
mov     word ptr [edi+1ch], 0
mov     cx, [esi+12h]
and     cx, bx
mov     ax, bx
push    ebp
not     ax
and     ax, [edi+12h]
mov     [edi+12h], ax
or      ax, cx
mov     ecx, [esp+14h+arg_0]
mov     [edi+12h], ax
push    ecx
or      [edi], ebx
call    sub_486df0
mov     ecx, [esp+18h+arg_4]
add     esp, 8
push    ebp
push    ecx
call    sub_486df0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
mov     si, [esp+0ch+arg_4]
push    ebp
push    esi
push    eax
call    sub_486dc0
mov     ecx, [esp+18h+arg_8]
add     esp, 8
mov     ebx, eax
mov     eax, [esp+10h+arg_c]
push    eax
push    ecx
call    sub_486dc0
add     esp, 8
mov     ebp, eax
push    ebp
push    ebx
call    sub_4874e0
add     esp, 8
mov     edi, eax
cmp     word ptr [esp+10h+arg_c], si
jz      short loc_4874b2
mov     eax, [ebp+0]
and     eax, [ebx]
test    eax, 10000000h
jz      short loc_4874b2
and     edi, 0efffffffh
mov     eax, [esp+10h+arg_0]
push    esi
push    eax
call    sub_486df0
mov     eax, [esp+18h+arg_c]
mov     ecx, [esp+18h+arg_8]
add     esp, 8
push    eax
push    ecx
call    sub_486df0
add     esp, 8
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
push    ebp
mov     eax, [ebx]
mov     ebp, [esp+10h+arg_4]
mov     edi, [ebp+0]
mov     esi, edi
and     edi, eax
xor     esi, eax
test    edi, 100h
jz      short loc_48750f
mov     cx, [ebx+24h]
cmp     [ebp+24h], cx
jz      short loc_48750f
or      esi, 100h
test    edi, 200h
jz      short loc_487527
mov     cx, [ebx+56h]
cmp     [ebp+56h], cx
jz      short loc_487527
or      esi, 200h
test    edi, 2000000h
jz      short loc_48753d
mov     al, [ebx+10h]
cmp     [ebp+10h], al
jz      short loc_48753d
or      esi, 2000000h
test    edi, 1000h
jz      short loc_487553
mov     ecx, [ebx+8]
cmp     [ebp+8], ecx
jz      short loc_487553
or      esi, 1000h
test    edi, 4000h
jz      short loc_487569
mov     ecx, [ebx+4]
cmp     [ebp+4], ecx
jz      short loc_487569
or      esi, 4000h
test    edi, 800h
jz      short loc_487581
mov     cx, [ebx+14h]
cmp     [ebp+14h], cx
jz      short loc_487581
or      esi, 800h
test    edi, 400000h
jz      short loc_487599
mov     cx, [ebx+16h]
cmp     [ebp+16h], cx
jz      short loc_487599
or      esi, 400000h
test    edi, 100000h
jz      short loc_4875b1
mov     cx, [ebx+18h]
cmp     [ebp+18h], cx
jz      short loc_4875b1
or      esi, 100000h
test    edi, 200000h
jz      short loc_4875c9
mov     cx, [ebx+1ah]
cmp     [ebp+1ah], cx
jz      short loc_4875c9
or      esi, 200000h
test    edi, 1000000h
jz      short loc_4875e1
mov     cx, [ebp+1eh]
cmp     [ebx+1eh], cx
jz      short loc_4875e1
or      esi, 1000000h
test    edi, 800000h
jz      short loc_4875fd
push    ebp
push    ebx
call    sub_487620
add     esp, 8
test    eax, eax
jnz     short loc_4875fd
or      esi, 800000h
mov     ax, [ebp+12h]
pop     ebp
xor     ax, [ebx+12h]
and     ax, di
pop     edi
and     ax, 7fh
movzx   ecx, ax
or      esi, ecx
mov     eax, esi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    esi
mov     dx, [eax+1ch]
push    edi
mov     ecx, [esp+8+arg_4]
cmp     [ecx+1ch], dx
jz      short loc_487639
xor     eax, eax
pop     edi
pop     esi
retn
test    dx, dx
jnz     short loc_487646
mov     eax, 1
pop     edi
pop     esi
retn
mov     eax, [eax+52h]
mov     ecx, [ecx+52h]
mov     edi, [eax]
mov     eax, [ecx]
xor     cx, cx
test    dx, dx
jle     short loc_48766b
mov     esi, [edi]
cmp     [eax], esi
jnz     short loc_487673
inc     cx
add     edi, 4
add     eax, 4
cmp     dx, cx
jg      short loc_487658
mov     eax, 1
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
sub     esp, 4
mov     [esp+4+var_2], 0
push    ebx
push    esi
push    edi
push    ebp
movsx   edi, [esp+14h+arg_4]
lea     ecx, [edi+edi*8]
lea     edi, [edi+ecx*2]
add     edi, edi
add     edi, dword_4aea44
mov     bx, [edi]
push    edi
call    sub_48f140
add     esp, 4
mov     cl, [edi+0ch]
mov     bp, 1
mov     eax, [edi+16h]
movsx   esi, [esp+14h+arg_0]
dec     esi
shl     esi, cl
add     esi, [eax]
cmp     bx, bp
jl      short loc_487719
mov     cl, [edi+0ch]
mov     eax, [edi+16h]
movsx   edx, bp
dec     edx
shl     edx, cl
add     edx, [eax]
cmp     [esp+14h+arg_0], bp
jz      short loc_48770b
mov     ax, [edx+0ch]
test    al, 1
jz      short loc_48770b
test    al, 2
jnz     short loc_48770b
cmp     [edi+20h], bp
jz      short loc_48770b
mov     ax, [edx+0eh]
cmp     [esi+0eh], ax
jnz     short loc_48770b
mov     eax, [esi]
cmp     [edx], eax
jnz     short loc_48770b
push    edx
push    esi
call    sub_4874e0
add     esp, 8
test    eax, eax
jz      short loc_487714
inc     bp
cmp     bx, bp
jge     short loc_4876c6
jmp     short loc_487719
mov     [esp+14h+var_2], bp
push    edi
call    sub_48f1a0
mov     ax, [esp+18h+var_2]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
sub     esp, 5ch
push    ebx
push    esi
push    edi
push    ebp
mov     bp, [esp+6ch+arg_0]
push    eax
push    ebp
call    sub_487950
mov     bx, ax
add     esp, 8
test    bx, bx
jz      short loc_4877ac
push    ebx
call    sub_486800
lea     edi, [esp+70h+var_5c]
add     esp, 4
mov     esi, eax
mov     ecx, 16h
rep movsd
movsw
mov     eax, [esp+6ch+arg_4]
push    eax
push    ebp
call    sub_487040
add     esp, 8
push    eax
lea     eax, [esp+70h+var_5c]
push    eax
call    sub_449820
mov     eax, [esp+74h+arg_8]
lea     ecx, [esp+74h+var_5c]
add     esp, 8
push    eax
push    ecx
call    sub_449560
add     esp, 8
push    ebx
call    sub_486810
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
mov     eax, [esp+6ch+arg_8]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 0
add     esp, 5ch
retn
mov     ecx, [esp+arg_8]
sub     esp, 70h
lea     eax, [esp+70h+var_70]
push    ebx
mov     edx, [esp+74h+arg_4]
push    esi
push    edi
push    eax
push    ecx
push    edx
call    sub_487730
lea     ecx, [esp+88h+var_70]
mov     ebx, [esp+88h+hdc]
lea     eax, [esp+88h+var_1c]
add     esp, 0ch
push    ecx
push    ebx
push    eax
call    sub_449700
lea     edi, [esp+88h+var_38]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+7ch+var_38]
lea     edi, [esp+7ch+var_54]
mov     ecx, 7
rep movsd
mov     ax, [esp+7ch+arg_10]
mov     ecx, [esp+7ch+lpstring]
push    eax
push    ecx
push    ebx
call    sub_449d50
lea     ecx, [esp+88h+var_54]
add     esp, 0ch
mov     esi, eax
push    ecx
lea     eax, [esp+80h+var_1c]
push    ebx
push    eax
call    sub_449700
lea     ecx, [esp+88h+var_70]
add     esp, 0ch
push    ecx
call    sub_4496d0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 70h
retn
mov     eax, [esp+arg_8]
push    esi
mov     ecx, [esp+4+arg_4]
push    edi
push    eax
push    ecx
call    sub_487950
mov     di, ax
add     esp, 8
test    di, di
jz      short loc_4878a3
push    edi
call    sub_486800
add     esp, 4
push    eax
mov     eax, [esp+0ch+arg_0]
push    eax
call    sub_4490e0
add     esp, 8
mov     esi, eax
push    edi
call    sub_486810
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_8]
push    esi
mov     ecx, [esp+4+arg_4]
push    edi
push    eax
push    ecx
call    sub_487950
mov     di, ax
add     esp, 8
test    di, di
jz      short loc_4878f3
push    edi
call    sub_486800
add     esp, 4
push    eax
mov     eax, [esp+0ch+arg_0]
push    eax
call    sub_449100
add     esp, 8
mov     esi, eax
push    edi
call    sub_486810
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_8]
push    esi
mov     ecx, [esp+4+arg_4]
push    edi
push    eax
push    ecx
call    sub_487950
mov     di, ax
add     esp, 8
test    di, di
jz      short loc_487943
push    edi
call    sub_486800
add     esp, 4
push    eax
mov     eax, [esp+0ch+arg_0]
push    eax
call    sub_449150
add     esp, 8
mov     esi, eax
push    edi
call    sub_486810
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
movsx   edx, [esp+arg_0]
push    esi
dec     edx
movsx   esi, [esp+4+arg_4]
lea     ecx, [esi+esi*8]
lea     esi, [esi+ecx*2]
add     esi, esi
add     esi, dword_4aea44
mov     cl, [esi+0ch]
mov     eax, [esi+16h]
shl     edx, cl
add     edx, [eax]
test    byte ptr [edx+1], 1
jnz     short loc_48797f
xor     ax, ax
pop     esi
retn
mov     cx, [edx+26h]
mov     eax, 0
cmp     cx, 1
pop     esi
adc     eax, 0ffffffffh
and     ax, cx
retn
mov     eax, [esp+lpstring2]
mov     ecx, [esp+lpstring1]
push    eax
push    ecx
call    ds:lstrcmpia
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
mov     edx, [esp+arg_0]
mov     eax, [esp+arg_4]
shr     edx, 10h
push    eax
movsx   eax, dx
shl     eax, 6
push    offset sub_4879a0
mov     ecx, dword_4ae1e0
mov     eax, [eax+ecx+10h]
xor     ecx, ecx
mov     eax, [eax]
mov     cx, [eax+22h]
movzx   eax, dx
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_445b50
add     esp, 0ch
retn
mov     ecx, [esp+arg_0]
push    esi
shr     ecx, 10h
push    edi
mov     eax, [esp+8+arg_c]
mov     esi, [esp+8+lpstring1]
mov     edx, [esp+8+arg_4]
push    eax
movsx   eax, cx
shl     eax, 6
push    esi
push    edx
mov     edx, dword_4ae1e0
mov     edi, [eax+edx+10h]
xor     edx, edx
mov     eax, [edi]
mov     dx, [eax+22h]
movzx   eax, cx
shl     eax, 10h
or      edx, eax
push    edx
call    sub_445750
add     esp, 10h
movzx   edi, ax
push    offset asc_4aea70
push    esi
call    ds:lstrcmpia
test    eax, eax
jz      short loc_487a59
mov     eax, edi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
mov     byte ptr [esi], 0
pop     esi
retn
mov     ecx, [esp+arg_0]
push    esi
shr     ecx, 10h
push    edi
mov     eax, [esp+8+arg_c]
mov     esi, [esp+8+lpstring1]
mov     edx, [esp+8+arg_4]
push    eax
movsx   eax, cx
shl     eax, 6
push    esi
push    edx
mov     edx, dword_4ae1e0
mov     edi, [eax+edx+10h]
xor     edx, edx
mov     eax, [edi]
mov     dx, [eax+1ah]
movzx   eax, cx
shl     eax, 10h
or      edx, eax
push    edx
call    sub_445750
add     esp, 10h
movzx   edi, ax
push    offset asc_4aea70
push    esi
call    ds:lstrcmpia
test    eax, eax
jz      short loc_487ac9
mov     eax, edi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
mov     byte ptr [esi], 0
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+str]
push    3dh
push    esi
call    _strchr
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_487b34
mov     ecx, edi
mov     eax, [esp+8+arg_8]
sub     ecx, esi
inc     ecx
cmp     ecx, 29h
jl      short loc_487b0a
mov     ecx, 29h
push    ecx
push    esi
push    eax
call    sub_47f9f0
add     esp, 0ch
mov     al, [edi+1]
inc     edi
cmp     al, 20h
jz      short loc_487b15
cmp     al, 9
jz      short loc_487b15
mov     eax, [esp+8+arg_4]
push    29h
push    edi
push    eax
call    sub_47f9f0
add     esp, 0ch
pop     edi
pop     esi
retn
mov     eax, [esp+8+arg_4]
push    29h
push    esi
push    eax
call    sub_47f9f0
mov     eax, [esp+14h+arg_8]
add     esp, 0ch
push    29h
push    esi
push    eax
call    sub_47f9f0
add     esp, 0ch
pop     edi
pop     esi
retn
sub     esp, 58h
lea     eax, [esp+58h+string1]
push    esi
mov     esi, [esp+5ch+arg_8]
push    eax
lea     ecx, [esp+60h+var_58]
mov     edx, [esp+60h+str]
push    ecx
push    edx
call    sub_487ae0
lea     edx, [esp+68h+string1]
add     esp, 0ch
mov     ecx, [esi+4]
push    ecx
push    edx
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_487bae
lea     eax, [esp+5ch+var_58]
push    29h
push    eax
mov     ecx, [esi]
push    ecx
call    sub_47f9f0
add     esp, 0ch
mov     eax, 1
pop     esi
add     esp, 58h
retn
xor     eax, eax
pop     esi
add     esp, 58h
retn
sub     esp, 4
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+10h+arg_0]
push    ebp
mov     eax, [edi+8]
mov     ecx, [edi+4]
push    eax
push    ecx
call    ds:loadresource
mov     [esp+14h+hresdata], eax
cmp     eax, esi
jz      short loc_487c27
push    eax
call    ds:lockresource
cmp     eax, esi
mov     ebp, eax
jz      short loc_487c1c
cmp     byte ptr [ebp+0], 0
jz      short loc_487c1c
mov     ebx, [esp+14h+arg_4]
push    ebx
push    ebp
push    edi
call    [esp+20h+arg_8]
add     esp, 0ch
mov     esi, eax
cmp     esi, 1
jz      short loc_487c1c
push    ebp
call    ds:lstrlena
lea     ebp, [eax+ebp+1]
cmp     byte ptr [ebp+0], 0
jnz     short loc_487bfa
mov     eax, [esp+14h+hresdata]
push    eax
call    ds:freeresource
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
sub     esp, 18h
push    esi
xor     esi, esi
push    esi
push    eax
push    ecx
call    sub_488b50
add     esp, 0ch
test    eax, eax
jz      short loc_487cab
mov     ecx, [esp+1ch+arg_8]
mov     edx, [esp+1ch+arg_c]
mov     [esp+1ch+var_14], ecx
mov     [esp+1ch+var_18], edx
mov     [esp+1ch+var_c], eax
push    offset type
mov     [esp+20h+var_10], esi
push    1
mov     [esp+24h+var_4], esi
push    eax
call    ds:findresourcea
mov     [esp+1ch+var_8], eax
cmp     eax, esi
jz      short loc_487cab
lea     eax, [esp+1ch+var_18]
push    offset sub_487b60
lea     ecx, [esp+20h+var_10]
push    eax
push    ecx
call    sub_487bc0
add     esp, 0ch
pop     esi
add     esp, 18h
retn
xor     eax, eax
pop     esi
add     esp, 18h
retn
mov     eax, [esp+arg_c]
sub     esp, 2ch
push    ebx
push    esi
mov     ebx, [esp+34h+lpstring1]
push    edi
mov     di, word ptr [esp+38h+arg_4]
push    eax
mov     esi, [esp+3ch+arg_0]
push    ebx
push    edi
push    esi
call    sub_487a70
add     esp, 10h
test    eax, eax
jnz     short loc_487d0c
lea     eax, [esp+38h+string1]
push    29h
push    eax
push    edi
push    esi
call    sub_487a00
add     esp, 10h
test    eax, eax
jz      short loc_487d0c
lea     eax, [esp+38h+string1]
push    ebx
push    eax
push    edi
push    esi
call    sub_487c40
add     esp, 10h
movsx   eax, byte ptr [ebx]
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
mov     eax, [esp+arg_0]
push    ebx
shr     eax, 10h
push    esi
mov     esi, [esp+8+arg_8]
push    edi
movsx   ebx, ax
movzx   edi, ax
shl     ebx, 6
mov     dword ptr [esi], 0
shl     edi, 10h
mov     eax, dword_4ae1e0
mov     ecx, [ebx+eax+10h]
mov     edx, [ecx]
xor     ecx, ecx
mov     cx, [edx+1eh]
or      ecx, edi
push    ecx
call    sub_470610
add     esp, 4
test    eax, eax
jz      short loc_487dd2
mov     eax, [esp+0ch+arg_4]
mov     ecx, dword_4ae1e0
push    eax
mov     edx, [ebx+ecx+10h]
xor     ecx, ecx
mov     eax, [edx]
mov     cx, [eax+1eh]
or      ecx, edi
push    ecx
call    sub_4457d0
add     esp, 8
mov     [esi], eax
test    eax, eax
jz      short loc_487dd2
push    eax
call    ds:globallock
mov     edi, eax
mov     eax, [esi]
push    eax
call    sub_45bbc0
add     esp, 4
lea     ebx, [eax-1]
lea     eax, [edi+1]
push    eax
call    ds:lstrlena
movsx   ecx, ax
cmp     ebx, ecx
jle     short loc_487dc9
movzx   eax, ax
sub     ebx, eax
lea     edi, [ecx+edi+1]
xor     eax, eax
mov     ecx, ebx
shr     ecx, 2
rep stosd
mov     ecx, ebx
and     ecx, 3
rep stosb
mov     eax, [esi]
push    eax
call    ds:globalunlock
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 2ch
lea     eax, [esp+2ch+name]
push    ebx
mov     bx, word ptr [esp+30h+arg_4]
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+38h+arg_0]
push    ebp
push    29h
push    eax
push    ebx
push    edi
call    sub_487a00
add     esp, 10h
test    eax, eax
jz      loc_487eab
push    esi
push    ebx
push    edi
call    sub_488b50
add     esp, 0ch
mov     edi, eax
cmp     edi, esi
jz      loc_487eab
lea     eax, [esp+3ch+name]
push    offset type
push    eax
push    edi
call    ds:findresourcea
push    eax
mov     ebp, ds:loadresource
push    edi
call    ebp
cmp     eax, esi
mov     edi, eax
jz      short loc_487eab
push    edi
call    ds:lockresource
cmp     eax, esi
mov     ebx, eax
jz      short loc_487ea4
push    ebx
call    ds:lstrlena
lea     ebp, [ebx+eax+1]
push    ebp
call    ds:lstrlena
lea     ebx, [ebp+eax+1]
push    ebx
call    ds:lstrlena
test    eax, eax
jz      short loc_487ea4
add     eax, 2
push    eax
push    offset windowname
call    sub_45b910
add     esp, 8
mov     esi, eax
test    esi, esi
jz      short loc_487ea4
push    esi
call    ds:globallock
mov     cl, [ebp+0]
push    ebx
mov     [eax], cl
inc     eax
push    eax
call    ds:lstrcpya
push    esi
mov     ebp, ds:globalunlock
call    ebp
push    edi
call    ds:freeresource
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2ch
retn
push    ebx
push    esi
mov     si, [esp+8+arg_4]
push    edi
mov     edi, [esp+0ch+arg_8]
push    esi
mov     dword ptr [edi], 0
call    sub_487fd0
add     esp, 4
cmp     ax, 1
jnz     short loc_487f01
mov     ebx, [esp+0ch+arg_0]
push    edi
push    esi
push    ebx
call    sub_487d20
add     esp, 0ch
cmp     dword ptr [edi], 0
jnz     short loc_487f01
push    esi
push    ebx
call    sub_487de0
add     esp, 8
mov     [edi], eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    ebx
shr     eax, 10h
push    esi
movsx   ebx, ax
shl     ebx, 6
push    edi
movzx   edi, ax
push    ebp
mov     eax, dword_4ae1e0
mov     bp, [esp+10h+arg_4]
mov     ecx, [ebx+eax+10h]
shl     edi, 10h
push    ebp
mov     edx, [ecx]
xor     ecx, ecx
mov     cx, [edx+20h]
or      ecx, edi
push    ecx
call    sub_4457d0
add     esp, 8
mov     esi, eax
mov     ecx, dword_4ae1e0
push    ebp
mov     eax, [ebx+ecx+10h]
xor     ecx, ecx
mov     edx, [eax]
mov     cx, [edx+20h]
or      ecx, edi
push    ecx
call    sub_445700
movzx   eax, ax
add     esp, 8
test    esi, esi
jz      short loc_487f80
test    eax, eax
jz      short loc_487f80
push    eax
push    esi
call    sub_44f210
add     esp, 8
jmp     short loc_487f85
call    sub_44f1b0
mov     edi, eax
test    esi, esi
jz      short loc_487f94
push    esi
call    sub_45ba00
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     edx, [esp+arg_8]
sub     esp, 8
lea     eax, [esp+8+var_4]
lea     ecx, [esp+8+var_8]
push    eax
push    ecx
push    edx
call    sub_44f2e0
add     esp, 0ch
cmp     eax, 1
sbb     eax, eax
and     eax, [esp+8+var_8]
add     esp, 8
retn
mov     ax, [esp+arg_0]
cmp     ax, 1
jl      short loc_487fe6
cmp     ax, 2fffh
jg      short loc_487fe6
mov     ax, 1
retn
cmp     ax, 7918h
jl      short loc_487ff7
cmp     ax, 79dbh
jg      short loc_487ff7
mov     ax, 2
retn
xor     ax, ax
retn
mov     ecx, [esp+arg_4]
sub     esp, 4
lea     eax, [esp+4+hmem]
push    esi
mov     si, 0ffffh
push    edi
mov     edx, [esp+0ch+arg_0]
push    eax
push    ecx
push    edx
call    sub_487ec0
add     esp, 0ch
cmp     [esp+0ch+hmem], 0
jz      short loc_488068
mov     eax, [esp+0ch+hmem]
push    eax
call    ds:globallock
lea     edi, [eax+1]
push    edi
call    ds:lstrlena
dec     eax
mov     ecx, [esp+0ch+arg_8]
cmp     eax, ecx
jl      short loc_48805b
test    ecx, ecx
jl      short loc_48805b
cmp     byte ptr [edi], 41h
jnz     short loc_48804f
inc     edi
movsx   eax, byte ptr [edi+ecx]
movsx   si, byte_4aea17[eax]
mov     eax, [esp+0ch+hmem]
push    eax
call    sub_45ba00
add     esp, 4
mov     ax, si
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 4
lea     eax, [esp+4+hmem]
push    esi
mov     esi, [esp+8+arg_8]
push    edi
mov     ecx, [esp+0ch+arg_4]
push    eax
mov     edx, [esp+10h+arg_0]
push    ecx
push    edx
mov     dword ptr [esi], 0
call    sub_487ec0
add     esp, 0ch
test    eax, eax
jnz     short loc_4880bc
cmp     [esp+0ch+hmem], 0
jnz     short loc_4880c3
mov     eax, 2ah
pop     edi
pop     esi
add     esp, 4
retn
cmp     [esp+0ch+hmem], 0
jz      short loc_4880fb
mov     eax, [esp+0ch+hmem]
push    eax
call    ds:globallock
lea     edi, [eax+1]
cmp     byte ptr [edi], 56h
jnz     short loc_4880de
mov     dword ptr [esi], 0
jmp     short loc_4880ee
push    edi
call    ds:lstrlena
mov     [esi], eax
cmp     byte ptr [edi], 41h
jnz     short loc_4880ee
dec     dword ptr [esi]
mov     eax, [esp+0ch+hmem]
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_4879c0
mov     ecx, [esp+8+arg_8]
add     esp, 8
mov     [ecx], ax
cmp     ax, 1
sbb     eax, eax
and     eax, 15h
retn
mov     eax, [esp+lpstring1]
push    29h
mov     ecx, [esp+4+arg_8]
push    eax
mov     dx, [ecx]
mov     eax, [esp+8+arg_0]
push    edx
push    eax
call    sub_487a00
add     esp, 10h
cmp     eax, 1
sbb     eax, eax
and     eax, 15h
retn
sub     esp, 38h
push    esi
push    edi
push    offset dword_4a9bf0
call    sub_48e820
add     esp, 4
test    eax, eax
jz      loc_488278
lea     eax, [esp+40h+name]
push    29h
mov     ecx, [esp+44h+arg_8]
push    eax
mov     edx, [esp+48h+arg_4]
push    ecx
push    edx
call    sub_487a00
mov     esi, [esp+50h+arg_0]
add     esp, 10h
test    eax, eax
jz      loc_48827c
mov     edi, [esi]
push    offset type
lea     eax, [esp+44h+name]
push    eax
push    edi
call    ds:findresourcea
push    eax
push    edi
call    ds:loadresource
mov     edi, eax
test    edi, edi
jz      loc_48827c
push    edi
call    ds:lockresource
test    eax, eax
jz      loc_48826f
cmp     byte ptr [eax], 0
jz      loc_48826f
lea     ecx, [esp+40h+var_38]
push    ecx
push    eax
call    sub_44f360
lea     eax, [esp+48h+var_34]
lea     ecx, [esp+48h+var_38]
add     esp, 8
push    0
push    eax
push    ecx
push    offset dword_4a9bf0
call    sub_48eac0
add     esp, 10h
test    eax, eax
jz      short loc_48821f
mov     eax, [esp+40h+var_30]
mov     [esi], eax
jmp     short loc_48825b
mov     eax, [esp+40h+var_38]
push    eax
call    sub_4889f0
add     esp, 4
mov     [esi], eax
test    eax, eax
jz      short loc_48825b
mov     eax, [esp+40h+var_38]
push    eax
call    sub_44f3f0
lea     ecx, [esp+44h+var_34]
mov     [esp+44h+var_34], eax
add     esp, 4
mov     eax, [esi]
mov     [esp+40h+var_30], eax
push    ecx
push    offset dword_4a9bf0
call    sub_48e920
add     esp, 8
cmp     [esp+40h+var_38], 0
jz      short loc_48826f
mov     eax, [esp+40h+var_38]
push    eax
call    sub_44f4a0
add     esp, 4
push    edi
call    ds:freeresource
jmp     short loc_48827c
mov     esi, [esp+40h+arg_0]
pop     edi
cmp     dword ptr [esi], 1
sbb     eax, eax
pop     esi
inc     eax
add     esp, 38h
retn
push    ebp
mov     ebp, esp
sub     esp, 0a4h
push    ebx
lea     eax, [ebp+hmem]
push    esi
mov     ecx, [ebp+arg_4]
push    edi
mov     esi, [ebp+arg_0]
push    eax
push    ecx
push    esi
call    sub_487ec0
add     esp, 0ch
cmp     [ebp+hmem], 0
jnz     short loc_4882ce
mov     eax, ds:dword_4a9a0c
push    eax
push    esi
call    sub_488d70
add     esp, 8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    14h
mov     eax, [ebp+hmem]
push    eax
call    ds:globallock
xor     ebx, ebx
mov     [ebp+var_34], eax
inc     eax
mov     [ebp+var_38], ebx
mov     edi, eax
mov     [ebp+lpstring], eax
mov     [ebp+var_24], 1
cmp     byte ptr [eax], 56h
jz      short loc_488311
mov     eax, [ebp+lpstring]
push    eax
call    ds:lstrlena
mov     ebx, eax
mov     eax, [ebp+lpstring]
cmp     byte ptr [eax], 41h
jnz     short loc_488311
lea     edi, [eax+1]
dec     ebx
mov     [ebp+var_38], 1
cmp     ebx, [ebp+arg_8]
jz      short loc_48838e
mov     eax, [ebp+arg_4]
push    eax
push    esi
call    sub_487f10
add     esp, 8
mov     [ebp+var_30], eax
mov     [ebp+var_24], 0
test    eax, eax
jz      short loc_48835f
push    eax
mov     ecx, [ebp+arg_4]
push    ecx
push    esi
call    sub_487fa0
add     esp, 0ch
test    eax, eax
jz      short loc_488353
mov     [ebp+var_24], 1
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, [ebp+var_30]
push    eax
call    sub_44f2a0
add     esp, 4
cmp     [ebp+var_24], 0
jnz     short loc_488386
push    20h
lea     eax, [ebp+buffer]
push    eax
push    esi
call    sub_486100
add     esp, 0ch
lea     eax, [ebp+buffer]
push    eax
push    6
push    73h
call    sub_488dd0
add     esp, 0ch
jmp     short loc_48838e
cmp     ebx, [ebp+arg_8]
jge     short loc_48838e
mov     [ebp+arg_8], ebx
cmp     [ebp+var_24], 0
jz      loc_48879d
push    1
mov     eax, [ebp+arg_4]
push    eax
push    esi
call    sub_488b50
add     esp, 0ch
mov     [ebp+hmodule], eax
test    eax, eax
jz      loc_48879d
push    29h
lea     eax, [ebp+string1]
push    eax
mov     ecx, [ebp+arg_4]
push    ecx
push    esi
call    sub_487cc0
add     esp, 10h
test    eax, eax
jnz     short loc_4883e0
mov     eax, ds:dword_4a9a0c
push    eax
push    esi
call    sub_488d70
add     esp, 8
jmp     loc_48879d
mov     eax, [ebp+arg_4]
lea     ecx, [ebp+hmodule]
push    eax
push    esi
push    ecx
call    sub_488170
add     esp, 0ch
test    eax, eax
jz      loc_48878a
lea     eax, [ebp+string1]
push    eax
call    sub_488ab0
add     esp, 4
push    eax
mov     eax, [ebp+hmodule]
push    eax
call    ds:getprocaddress
mov     [ebp+var_18], eax
test    eax, eax
jz      loc_48878a
push    edi
call    ds:lstrlena
lea     edi, [eax+edi-1]
sub     ebx, [ebp+arg_8]
test    ebx, ebx
jle     loc_4884fd
movsx   eax, byte ptr [edi]
sub     eax, 41h
cmp     eax, 16h
ja      def_48844b
xor     ecx, ecx
mov     cl, ds:byte_4887e0[eax]
jmp     ds:jpt_48844b[ecx*4]
xor     eax, eax
test    ebx, ebx
jnz     def_48844b
mov     ecx, ds:frequency
mov     [ebp+var_50], eax
mov     [ebp+var_54], ecx
mov     [ebp+var_4c], eax
mov     [ebp+var_58], 14h
mov     [ebp+var_48], eax
lea     eax, [ebp+var_58]
mov     [ebp+var_4], eax
push    small word ptr [ebp+var_4+2]
push    small word ptr [ebp+var_4]
dec     ebx
jmp     short def_48844b
mov     [ebp+var_8], 0
push    small word ptr [ebp+var_8+2]
push    small word ptr [ebp+var_8]
jmp     short def_48844b
xor     eax, eax
mov     [ebp+var_44], eax
mov     [ebp+var_40], eax
push    small word ptr [ebp+var_40+2]
push    small word ptr [ebp+var_40]
push    small word ptr [ebp+var_44+2]
push    small word ptr [ebp+var_44]
jmp     short def_48844b
mov     [ebp+var_14], 0
push    small word ptr [ebp+var_14+2]
push    small word ptr [ebp+var_14]
jmp     short def_48844b
mov     [ebp+var_10], 0
push    small word ptr [ebp+var_10+2]
push    small word ptr [ebp+var_10]
jmp     short def_48844b
mov     [ebp+var_c], 0
push    small word ptr [ebp+var_c+2]
push    small word ptr [ebp+var_c]
jmp     short def_48844b
mov     [ebp+var_4], offset windowname
push    small word ptr [ebp+var_4+2]
push    small word ptr [ebp+var_4]
dec     ebx
dec     edi
test    ebx, ebx
jg      loc_488434
mov     eax, [ebp+arg_8]
mov     esi, [ebp+arg_c]
lea     ecx, [eax+eax*4]
mov     [ebp+var_1c], eax
test    eax, eax
lea     edx, [eax+ecx*2]
lea     ebx, [esi+edx*2-16h]
jle     loc_488667
movsx   ecx, byte ptr [edi]
sub     ecx, 42h
cmp     ecx, 15h
ja      def_48852f
xor     eax, eax
mov     al, ds:byte_488824[ecx]
jmp     ds:jpt_48852f[eax*4]
push    1
push    ebx
call    sub_41aa60
add     esp, 8
xor     eax, eax
mov     al, [ebx+8]
mov     [ebp+var_8], eax
push    small word ptr [ebp+var_8+2]
push    small word ptr [ebp+var_8]
jmp     def_48852f
push    1
push    ebx
call    sub_41aa60
movsx   eax, byte ptr [ebx+8]
add     esp, 8
mov     [ebp+var_8], eax
push    small word ptr [ebp+var_8+2]
push    small word ptr [ebp+var_8]
jmp     def_48852f
push    2
push    ebx
call    sub_41aa60
add     esp, 8
mov     eax, [ebx+0ch]
mov     [ebp+var_40], eax
mov     ecx, [ebx+8]
mov     [ebp+var_44], ecx
push    small word ptr [ebp+var_40+2]
push    small word ptr [ebp+var_40]
push    small word ptr [ebp+var_44+2]
push    small word ptr [ebp+var_44]
jmp     def_48852f
push    2
push    ebx
call    sub_41aa60
fld     qword ptr [ebx+8]
add     esp, 8
fstp    [ebp+var_14]
push    small word ptr [ebp+var_14+2]
push    small word ptr [ebp+var_14]
jmp     def_48852f
push    1
push    ebx
call    sub_41aa60
add     esp, 8
mov     eax, [ebx+8]
mov     [ebp+var_10], eax
push    small word ptr [ebp+var_10+2]
push    small word ptr [ebp+var_10]
jmp     short def_48852f
cmp     word ptr [ebx], 0
jz      short loc_4885fb
push    1
push    ebx
call    sub_41aa60
add     esp, 8
mov     eax, [ebx+8]
mov     [ebp+var_c], eax
push    small word ptr [ebp+var_c+2]
push    small word ptr [ebp+var_c]
jmp     short def_48852f
push    0
push    ebx
call    sub_41aa60
mov     ax, [ebx+8]
add     esp, 8
cmp     ax, 4
jz      short loc_48861b
test    ax, ax
jnz     short loc_488642
cmp     ax, 4
jnz     short loc_488623
mov     eax, [ebx+0eh]
mov     [ebp+var_4], eax
jmp     short loc_488629
lea     ecx, [ebx+0eh]
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
push    eax
call    sub_47fa80
add     esp, 4
test    eax, eax
jz      short loc_488642
mov     [ebx+0eh], eax
mov     word ptr [ebx+8], 1
push    ebx
call    sub_442d80
add     esp, 4
mov     [ebp+var_4], eax
push    small word ptr [ebp+var_4+2]
push    small word ptr [ebp+var_4]
sub     ebx, 16h
dec     edi
dec     [ebp+var_1c]
cmp     [ebp+var_1c], 0
jnz     loc_488518
xor     eax, eax
cmp     [ebp+var_38], eax
jz      short loc_488695
mov     ecx, ds:frequency
mov     [ebp+var_50], eax
mov     [ebp+var_54], ecx
mov     [ebp+var_4c], eax
mov     [ebp+var_58], 14h
mov     [ebp+var_48], eax
lea     eax, [ebp+var_58]
mov     [ebp+var_4], eax
push    small word ptr [ebp+var_4+2]
push    small word ptr [ebp+var_4]
mov     eax, [ebp+var_34]
movsx   eax, byte ptr [eax]
sub     eax, 42h
cmp     eax, 15h
ja      def_4886af
xor     ecx, ecx
mov     cl, ds:byte_48886c[eax]
jmp     ds:jpt_4886af[ecx*4]
call    [ebp+var_18]
xor     edx, edx
mov     ecx, [ebp+arg_10]
mov     dl, al
mov     [ecx+8], edx
jmp     loc_48874c
call    [ebp+var_18]
movsx   eax, al
jmp     short loc_488746
call    [ebp+var_18]
mov     ecx, [ebp+arg_10]
fstp    qword ptr [ecx+8]
mov     word ptr [ecx], 2
jmp     short def_4886af
call    [ebp+var_18]
mov     ecx, [ebp+arg_10]
fstp    qword ptr [ecx+8]
mov     word ptr [ecx], 2
jmp     short def_4886af
call    [ebp+var_18]
movsx   eax, ax
jmp     short loc_488746
call    [ebp+var_18]
jmp     short loc_488746
call    [ebp+var_18]
jmp     short loc_488746
xor     edi, edi
call    [ebp+var_18]
lea     ecx, [ebp+string1]
push    ecx
push    eax
call    sub_488890
add     esp, 8
test    eax, eax
jz      short loc_48871d
mov     edi, eax
push    edi
mov     ecx, [ebp+arg_10]
push    ecx
call    sub_41af50
add     esp, 8
jmp     short def_4886af
call    [ebp+var_18]
jmp     short loc_488746
call    [ebp+var_18]
mov     ecx, [ebp+arg_10]
mov     dword ptr [ecx+8], 0
jmp     short loc_48874c
call    [ebp+var_18]
movzx   eax, ax
mov     ecx, [ebp+arg_10]
mov     [ecx+8], eax
mov     word ptr [ecx], 1
mov     ebx, [ebp+lpstring]
xor     edi, edi
cmp     [ebp+arg_8], edi
jle     short loc_48879d
mov     al, [ebx]
cmp     al, 53h
jz      short loc_488775
cmp     al, 50h
jnz     short loc_48876b
cmp     word ptr [esi], 0
jz      short loc_488775
cmp     al, 41h
jnz     short loc_48877e
dec     edi
sub     esi, 16h
jmp     short loc_48877e
push    esi
call    sub_442e00
add     esp, 4
inc     edi
add     esi, 16h
inc     ebx
cmp     edi, [ebp+arg_8]
jl      short loc_48875b
jmp     short loc_48879d
lea     eax, [ebp+string1]
push    eax
push    7
push    73h
call    sub_488dd0
add     esp, 0ch
mov     eax, [ebp+hmem]
push    eax
call    sub_45ba00
add     esp, 4
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    14h
push    ebx
push    esi
mov     esi, [esp+8+hmem]
push    edi
test    esi, esi
jz      loc_488954
push    esi
call    ds:globalflags
mov     ebx, eax
push    esi
call    ds:globallock
mov     edi, eax
test    edi, edi
jnz     short loc_4888da
mov     eax, [esp+0ch+arg_4]
push    eax
push    8
push    73h
call    sub_488dd0
add     esp, 0ch
test    bh, 40h
jz      short loc_4888d2
push    esi
call    ds:globalfree
xor     esi, esi
pop     edi
mov     eax, esi
pop     esi
pop     ebx
retn
test    bh, 1
jz      short loc_4888ef
push    80h
push    0
push    esi
call    ds:globalrealloc
mov     esi, eax
push    esi
call    ds:globalsize
cmp     eax, 7531h
mov     edx, eax
jb      short loc_488904
mov     edx, 7531h
xor     ecx, ecx
test    edx, edx
jz      short loc_488915
cmp     byte ptr [edi], 0
jz      short loc_488915
inc     ecx
inc     edi
cmp     edx, ecx
ja      short loc_48890a
cmp     edx, ecx
jnz     short loc_48894d
cmp     eax, 7530h
jbe     short loc_488938
mov     eax, [esp+0ch+arg_4]
push    7530h
push    eax
push    9
push    73h
call    sub_488dd0
add     esp, 10h
jmp     short loc_488949
mov     eax, [esp+0ch+arg_4]
push    eax
push    0ah
push    73h
call    sub_488dd0
add     esp, 0ch
mov     byte ptr [edi-1], 0
push    esi
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 8
push    esi
push    edi
call    sub_44f2d0
mov     esi, eax
test    esi, esi
jz      short loc_4889db
lea     eax, [esp+10h+string1]
push    offset aucd
push    eax
call    sub_44fa10
add     esp, 8
push    eax
push    esi
call    sub_44f6a0
mov     edi, [esp+18h+arg_0]
add     esp, 8
push    esi
mov     eax, [edi]
push    eax
call    sub_44f9e0
add     esp, 8
test    eax, eax
jz      short loc_4889d2
lea     eax, [esp+10h+string1]
push    offset au32
push    eax
call    sub_44fa10
add     esp, 8
mov     ecx, [edi]
push    eax
push    ecx
call    sub_44f6a0
add     esp, 8
push    esi
call    sub_44f4a0
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
add     esp, 8
retn
push    esi
call    sub_44f4a0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
add     esp, 8
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
lea     eax, [esp+4+var_4]
push    esi
xor     esi, esi
push    eax
mov     [esp+0ch+var_4], esi
push    ecx
call    sub_469560
add     esp, 8
test    eax, eax
jz      short loc_488a2b
mov     eax, [esp+8+var_4]
cmp     [esp+8+var_4], esi
jnz     short loc_488a1e
mov     eax, [esp+8+arg_0]
push    eax
call    sub_412d50
add     esp, 4
test    eax, eax
jnz     short loc_488a6e
lea     eax, [esp+8+arg_0]
push    eax
call    sub_488960
add     esp, 4
test    eax, eax
jz      short loc_488a88
lea     eax, [esp+8+var_4]
mov     ecx, [esp+8+arg_0]
push    eax
push    ecx
call    sub_469560
add     esp, 8
test    eax, eax
jz      short loc_488a88
cmp     [esp+8+var_4], 0
mov     eax, [esp+8+var_4]
jnz     short loc_488a61
mov     eax, [esp+8+arg_0]
push    eax
call    sub_412d50
add     esp, 4
test    eax, eax
jz      short loc_488a88
cmp     [esp+8+var_4], 0
mov     eax, [esp+8+var_4]
jnz     short loc_488a7d
mov     eax, [esp+8+arg_0]
push    eax
call    sub_412df0
add     esp, 4
mov     esi, eax
cmp     [esp+8+var_4], 0
jz      short loc_488a9c
mov     eax, [esp+8+var_4]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, esi
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_0]
cmp     byte ptr [eax], 40h
jnz     short locret_488ac6
inc     eax
push    eax
call    sub_47fbb0
movzx   eax, ax
add     esp, 4
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
mov     ebx, [esp+10h+arg_4]
mov     eax, [esi]
push    eax
mov     ecx, [ebx]
push    ecx
call    sub_44f9b0
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_488b35
mov     eax, [ebx]
push    eax
call    sub_44f3f0
mov     [esp+14h+var_4], eax
add     esp, 4
test    eax, eax
jz      short loc_488b35
lea     eax, [esp+10h+var_4]
push    eax
call    sub_488960
add     esp, 4
test    eax, eax
jz      short loc_488b28
mov     eax, [esi]
mov     ecx, [esp+10h+var_4]
push    eax
push    ecx
call    sub_44f9b0
add     esp, 8
mov     edi, eax
mov     eax, [esp+10h+var_4]
push    eax
call    sub_44f4a0
add     esp, 4
cmp     edi, 1
pop     edi
sbb     eax, eax
pop     esi
neg     eax
pop     ebx
add     esp, 4
retn
sub     esp, 114h
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
push    offset dword_4a9bf0
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_488bac
push    offset sub_488ad0
push    8
push    offset dword_4a9bf0
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_488bac
cmp     [esp+124h+arg_8], esi
jz      short loc_488b9f
push    offset windowname
push    1
push    73h
call    sub_488dd0
add     esp, 0ch
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 114h
retn
mov     bp, [esp+124h+arg_4]
mov     ebx, [esp+124h+arg_0]
push    ebp
push    ebx
call    sub_487f10
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_488bed
cmp     [esp+124h+arg_8], 0
jz      loc_488d5e
mov     eax, ds:dword_4a9a0c
push    eax
push    ebx
call    sub_488d70
add     esp, 8
jmp     loc_488d5e
push    edi
push    ebp
push    ebx
call    sub_487fa0
mov     [esp+130h+var_114], eax
add     esp, 0ch
test    eax, eax
jz      loc_488d55
lea     eax, [esp+124h+var_110]
push    0
lea     ecx, [esp+128h+var_114]
push    eax
push    ecx
push    offset dword_4a9bf0
call    sub_48eac0
add     esp, 10h
test    eax, eax
jz      short loc_488c41
mov     esi, [esp+124h+var_10c]
test    esi, esi
jnz     loc_488d48
lea     eax, [esp+124h+var_110]
push    0
push    eax
push    offset dword_4a9bf0
call    sub_48eba0
add     esp, 0ch
test    esi, esi
jnz     loc_488d48
mov     eax, [esp+124h+var_114]
push    eax
call    sub_4889f0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_488cd8
mov     eax, [esp+124h+var_114]
push    eax
call    sub_44f3f0
mov     [esp+128h+var_110], eax
mov     [esp+128h+var_10c], esi
lea     eax, [esp+128h+var_110]
add     esp, 4
push    eax
push    offset dword_4a9bf0
call    sub_48e920
add     esp, 8
test    eax, eax
jnz     loc_488d48
push    esi
call    sub_412ee0
lea     eax, [esp+128h+var_108]
mov     ecx, [esp+128h+var_110]
add     esp, 4
xor     esi, esi
push    2
push    105h
push    eax
push    ecx
call    sub_44f860
add     esp, 10h
cmp     [esp+124h+arg_8], esi
jz      short loc_488cc9
lea     eax, [esp+124h+var_108]
push    eax
push    1
push    73h
call    sub_488dd0
add     esp, 0ch
mov     eax, [esp+124h+var_110]
push    eax
call    sub_44f4a0
add     esp, 4
jmp     short loc_488d48
cmp     [esp+124h+arg_8], 0
jz      short loc_488d48
lea     eax, [esp+124h+var_108]
push    2
mov     ecx, [esp+128h+var_114]
push    105h
push    eax
push    ecx
call    sub_44f860
add     esp, 10h
call    sub_412ef0
cmp     eax, 1
jz      short loc_488d37
test    eax, eax
jz      short loc_488d37
cmp     eax, 3
jnz     short loc_488d23
lea     eax, [esp+124h+var_108]
push    eax
push    20h
push    0bh
push    73h
call    sub_488dd0
add     esp, 10h
jmp     short loc_488d48
push    eax
lea     eax, [esp+128h+var_108]
push    eax
push    3
push    73h
call    sub_488dd0
add     esp, 10h
jmp     short loc_488d48
lea     eax, [esp+124h+var_108]
push    eax
push    2
push    73h
call    sub_488dd0
add     esp, 0ch
mov     eax, [esp+124h+var_114]
push    eax
call    sub_44f4a0
add     esp, 4
push    edi
call    sub_44f2a0
add     esp, 4
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 114h
retn
mov     eax, [esp+arg_4]
sub     esp, 20h
test    eax, eax
jnz     short loc_488da1
lea     eax, [esp+20h+string1]
push    20h
mov     ecx, [esp+24h+arg_0]
push    eax
push    ecx
call    sub_462d70
lea     ecx, [esp+2ch+string1]
add     esp, 0ch
push    ecx
push    4
push    73h
call    sub_488dd0
add     esp, 2ch
retn
cmp     eax, 8
jnz     short loc_488db8
push    offset windowname
push    1
push    73h
call    sub_488dd0
add     esp, 2ch
retn
push    eax
push    5
push    73h
call    sub_488dd0
add     esp, 2ch
retn
cmp     ds:dword_4a9c10, 0
jnz     short locret_488dfa
lea     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_45c170
add     esp, 8
cmp     eax, 2
jnz     short locret_488dfa
mov     ds:dword_4a9c10, 1
retn
push    esi
push    edi
push    offset dword_4a9bf0
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_488e72
push    offset dword_4a9bf0
call    sub_48f140
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_488e58
push    edi
push    offset dword_4a9bf0
call    sub_48f1d0
add     esp, 8
mov     esi, eax
mov     eax, [eax+4]
test    eax, eax
jz      short loc_488e46
push    eax
call    sub_412ee0
add     esp, 4
mov     eax, [esi]
test    eax, eax
jz      short loc_488e55
push    eax
call    sub_44f4a0
add     esp, 4
dec     edi
jnz     short loc_488e26
push    offset dword_4a9bf0
call    sub_48f1a0
add     esp, 4
push    offset dword_4a9bf0
call    sub_48e7d0
add     esp, 4
pop     edi
pop     esi
retn
mov     ds:dword_4a9c10, 0
retn
push    ebp
mov     ebp, esp
push    ebx
push    ecx
push    esi
push    edi
push    esi
push    edi
xor     edi, edi
xor     esi, esi
xor     eax, eax
xor     ecx, ecx
mov     esi, [ebp+10h]
mov     ax, [esi+4]
add     ax, 3
and     ax, 0fffch
movzx   ebx, ax
mov     esi, [ebp+8]
mov     edi, [ebp+0ch]
mov     edx, edi
lodsw
or      al, al
jz      short loc_488ecd
mov     cl, al
mov     al, ah
shr     cx, 1
rep stosw
adc     cl, cl
rep stosb
jmp     short loc_488eb7
cmp     ah, al
jz      short loc_488eeb
cmp     ah, 1
jz      short loc_488f09
cmp     ah, 2
jz      short loc_488ef1
mov     cl, ah
shr     cx, 1
rep movsw
adc     cl, cl
jz      short loc_488eb7
movsb
inc     esi
jmp     short loc_488eb7
add     edx, ebx
mov     edi, edx
jmp     short loc_488eb7
lodsw
or      ah, ah
jnz     short loc_488efb
add     edi, eax
jmp     short loc_488eb7
mov     cl, ah
add     edi, ebx
add     edx, ebx
loop    loc_488efd
xor     ah, ah
add     edi, eax
jmp     short loc_488eb7
pop     edi
pop     esi
pop     edi
pop     esi
pop     ecx
pop     ebx
leave
retn
sub     esp, 1ch
push    esi
push    edi
push    3
mov     esi, ds:getasynckeystate
call    esi
test    ax, ax
jge     short loc_488f42
push    11h
call    esi
test    ax, ax
mov     esi, 1
jl      short loc_488f44
xor     esi, esi
test    esi, esi
jz      short loc_488f99
mov     edi, ds:peekmessagea
lea     eax, [esp+24h+msg]
push    3
push    108h
push    100h
push    0
push    eax
call    edi
test    eax, eax
jnz     short loc_488f4e
lea     eax, [esp+24h+msg]
push    3
push    209h
push    200h
push    0
push    eax
call    edi
test    eax, eax
jnz     short loc_488f67
lea     eax, [esp+24h+msg]
push    3
push    0a9h
push    0a0h
push    0
push    eax
call    edi
test    eax, eax
jnz     short loc_488f80
mov     eax, esi
pop     edi
pop     esi
add     esp, 1ch
retn
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     esi, ds:peekmessagea
mov     edi, [esp+28h+hwnd]
mov     ebx, 1bh
lea     eax, [esp+28h+msg]
push    3
push    101h
push    100h
push    edi
push    eax
call    esi
test    eax, eax
jz      short loc_488fef
cmp     [esp+28h+msg.wparam], ebx
jnz     short loc_488fc5
mov     eax, 1
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     ebx, [esp+0ch+hmem]
push    ebp
cmp     esi, 0ffffffffh
jnz     short loc_48901c
push    ebx
call    sub_45bbc0
add     esp, 4
mov     esi, eax
mov     edi, [esp+10h+arg_8]
cmp     edi, esi
jle     short loc_489026
mov     edi, esi
mov     ebp, [esp+10h+size]
sub     ebp, [esp+10h+arg_c]
test    ebp, ebp
jle     short loc_48904f
push    2
lea     eax, [esi+ebp]
push    eax
push    ebx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_48904f
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+10h+size]
mov     ecx, [esp+10h+src]
mov     edx, [esp+10h+arg_c]
push    eax
push    ecx
push    edx
push    edi
push    esi
push    ebx
call    ds:globallock
push    eax
call    sub_4890b0
add     esp, 18h
mov     edi, eax
push    ebx
call    ds:globalunlock
test    ebp, ebp
jge     short loc_48909a
push    2
lea     eax, [esi+ebp]
push    eax
push    ebx
call    sub_45b960
add     esp, 0ch
test    eax, eax
jnz     short loc_48909a
mov     eax, 0ffffffffh
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_c]
push    ebx
mov     ebx, [esp+4+size]
push    esi
push    edi
mov     edx, ebx
push    ebp
sub     edx, eax
jz      short loc_4890e4
mov     esi, [esp+10h+arg_8]
mov     edi, [esp+10h+arg_0]
add     eax, esi
mov     ebp, [esp+10h+arg_4]
sub     ebp, eax
lea     ecx, [eax+edi]
push    ebp
add     edx, ecx
push    ecx
push    edx
call    _memcpy
add     esp, 0ch
jmp     short loc_4890ec
mov     edi, [esp+10h+arg_0]
mov     esi, [esp+10h+arg_8]
test    ebx, ebx
jle     short loc_48911d
add     edi, esi
mov     eax, [esp+10h+src]
test    eax, eax
jz      short loc_48910d
push    ebx
push    eax
push    edi
call    _memcpy
add     esp, 0ch
lea     eax, [ebx+esi]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
mov     ecx, ebx
shr     ecx, 2
rep stosd
mov     ecx, ebx
and     ecx, 3
rep stosb
lea     eax, [ebx+esi]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     dx, [esp+arg_4]
push    esi
cmp     dx, 4
mov     ecx, [esp+4+arg_0]
movzx   eax, dx
jbe     short loc_489157
add     eax, [ecx]
add     ecx, 4
movzx   esi, dx
sub     dx, 4
or      eax, esi
cmp     dx, 4
ja      short loc_489143
pop     esi
retn
sub     esp, 300h
lea     eax, [esp+300h+buffer]
push    ebx
xor     ebx, ebx
push    1
mov     [esp+308h+buffer], bl
push    ebx
push    0ffh
push    eax
call    sub_47fe70
lea     eax, [esp+314h+var_100]
mov     [esp+314h+var_100], bl
add     esp, 10h
push    2
push    1e80h
push    0ffh
push    eax
call    sub_47fe70
lea     eax, [esp+314h+var_300]
mov     [esp+314h+var_300], bl
add     esp, 10h
push    2
push    ebx
push    0ffh
push    eax
call    sub_47fe70
mov     ecx, [esp+314h+arg_0]
add     esp, 10h
mov     [ecx], bl
cmp     [esp+304h+buffer], bl
jz      short loc_48920b
cmp     [esp+304h+var_100], bl
jz      short loc_48920b
cmp     [esp+304h+var_300], bl
jz      short loc_48920b
lea     eax, [esp+304h+var_100]
lea     edx, [esp+304h+buffer]
lea     ebx, [esp+304h+var_300]
push    eax
mov     eax, [esp+308h+arg_4]
push    edx
push    ebx
push    eax
push    ecx
call    sub_401800
add     esp, 14h
pop     ebx
add     esp, 300h
retn
sub     esp, 1ch
push    esi
push    1
call    ds:getkeystate
test    ah, 80h
jz      short loc_48927a
lea     eax, [esp+20h+msg]
push    2
push    203h
mov     esi, ds:peekmessagea
push    201h
push    0
push    eax
call    esi
test    eax, eax
jnz     short loc_489273
lea     eax, [esp+20h+msg]
push    2
push    0a3h
push    0a1h
push    0
push    eax
call    esi
test    eax, eax
jnz     short loc_489273
mov     eax, 1
pop     esi
add     esp, 1ch
retn
xor     eax, eax
pop     esi
add     esp, 1ch
retn
xor     eax, eax
pop     esi
add     esp, 1ch
retn
sub     esp, 1ch
lea     eax, [esp+1ch+msg]
push    0
push    0
push    0
push    0
push    eax
call    ds:peekmessagea
add     esp, 1ch
retn
push    1
call    sub_43e090
mov     eax, [esp+4+utype]
add     esp, 4
push    eax
call    ds:messagebeep
retn
push    0ffffffffh
call    sub_4892b0
add     esp, 4
retn
call    sub_489330
test    eax, eax
jz      short loc_4892ed
mov     eax, [eax+8]
retn
xor     eax, eax
retn
call    sub_489330
test    eax, eax
jz      short loc_489314
cmp     dword ptr [eax+4], 0
jnz     short loc_48930e
cmp     dword ptr [eax+8], 0
jz      short loc_48930b
cmp     dword ptr [eax+10h], 3
jg      short loc_48930e
xor     eax, eax
retn
mov     eax, 1
retn
xor     eax, eax
retn
jmp     sub_4892f0
sub     esp, 194h
cmp     ds:dword_4a9c14, 0
push    ebx
push    esi
push    edi
jz      short loc_489351
mov     eax, ds:dword_4a9c14
pop     edi
pop     esi
pop     ebx
add     esp, 194h
retn
push    42h
push    11ch
call    sub_45bd50
add     esp, 8
mov     ds:dword_4a9c14, eax
test    eax, eax
jnz     short loc_489375
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 194h
retn
call    ds:getversion
mov     ebx, eax
xor     ecx, ecx
mov     cl, bl
mov     eax, ds:dword_4a9c14
lea     edx, [esp+1a0h+versioninformation]
mov     [eax+10h], ecx
xor     ecx, ecx
mov     eax, ds:dword_4a9c14
mov     cl, bh
push    edx
mov     [eax+14h], ecx
mov     [esp+1a4h+versioninformation.dwosversioninfosize], 94h
call    ds:getversionexa
test    eax, eax
jz      loc_4894b1
mov     eax, [esp+1a0h+versioninformation.dwmajorversion]
mov     ecx, ds:dword_4a9c14
mov     [ecx+10h], eax
mov     ecx, ds:dword_4a9c14
mov     edx, [esp+1a0h+versioninformation.dwminorversion]
mov     [ecx+14h], edx
mov     eax, [esp+1a0h+versioninformation.dwplatformid]
test    eax, eax
jz      loc_489475
cmp     eax, 1
jz      loc_48948a
cmp     eax, 2
jz      loc_48949c
mov     si, word ptr [esp+1a0h+buffer]
mov     eax, ds:dword_4a9c14
mov     ecx, 0ah
mov     edi, [eax+14h]
mov     eax, edi
cdq
idiv    ecx
test    edx, edx
jnz     short loc_48940d
mov     eax, edi
cdq
idiv    ecx
mov     edi, eax
lea     eax, [esp+1a0h+buffer]
push    esi
push    1e88h
push    100h
push    eax
call    sub_47fe70
lea     edx, [esp+1b0h+buffer]
add     esp, 10h
mov     eax, ds:dword_4a9c14
push    edi
mov     ecx, [eax+10h]
add     eax, 18h
push    ecx
push    edx
push    100h
push    eax
call    sub_401800
add     esp, 14h
mov     eax, ds:dword_4a9c14
add     eax, 18h
push    eax
call    ds:lstrlena
mov     ecx, ds:dword_4a9c14
pop     edi
pop     esi
pop     ebx
mov     [ecx+118h], eax
mov     eax, ds:dword_4a9c14
add     esp, 194h
retn
mov     si, 3
mov     eax, ds:dword_4a9c14
mov     dword ptr [eax+0ch], 1
jmp     loc_4893f0
mov     eax, ds:dword_4a9c14
mov     esi, 1
mov     [eax+4], esi
jmp     loc_4893f0
mov     si, 2
mov     eax, ds:dword_4a9c14
mov     dword ptr [eax+8], 1
jmp     loc_4893f0
test    ebx, 80000000h
mov     eax, ds:dword_4a9c14
jz      short loc_4894ec
cmp     dword ptr [eax+10h], 3
jg      short loc_4894da
cmp     dword ptr [eax+14h], 0bh
jg      short loc_4894da
mov     dword ptr [eax+0ch], 1
mov     si, 3
jmp     loc_4893f0
mov     eax, ds:dword_4a9c14
mov     esi, 1
mov     [eax+4], esi
jmp     loc_4893f0
mov     dword ptr [eax+8], 1
mov     si, 2
jmp     loc_4893f0
mov     eax, [esp+arg_4]
sub     esp, 2ch
lea     ecx, [esp+2ch+sz]
push    esi
mov     esi, [esp+30h+arg_8]
push    29h
push    eax
push    ecx
call    sub_47f9f0
lea     ecx, [esp+3ch+sz]
add     esp, 0ch
push    ecx
call    ds:charuppera
mov     cx, [esp+30h+arg_0]
lea     edx, [esp+30h+sz]
push    ecx
push    edx
push    esi
call    sub_454040
add     esp, 0ch
mov     eax, 1
pop     esi
add     esp, 2ch
retn
push    ebx
push    esi
mov     si, [esp+8+arg_0]
push    edi
push    ebp
xor     edi, edi
movsx   eax, si
shl     eax, 6
mov     ecx, dword_4ae1e0
xor     ebx, ebx
mov     edx, [eax+ecx+10h]
mov     eax, [edx]
mov     bx, [eax+46h]
movzx   eax, si
shl     eax, 10h
or      ebx, eax
push    ebx
call    sub_470640
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_4895cf
push    ebx
call    sub_470610
add     esp, 4
push    ebx
call    sub_470610
add     esp, 4
push    eax
push    ebp
push    offset dword_4a9c18
call    sub_453e80
add     esp, 0ch
test    eax, eax
jz      short loc_4895b8
mov     ds:word_4a9c20, si
jmp     short loc_4895bd
mov     edi, 8
push    0
push    ebx
call    sub_470920
add     esp, 8
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_4895f0
add     esp, 4
test    eax, eax
jnz     short loc_4895e1
mov     edi, 138ah
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     si, [esp+8+arg_0]
movzx   ebx, si
shl     ebx, 10h
mov     bl, 1
push    ebx
call    sub_489b40
add     esp, 4
push    eax
push    offset dword_4a9c18
call    sub_453f90
add     esp, 8
test    eax, eax
jnz     short loc_48961f
xor     eax, eax
pop     esi
pop     ebx
retn
mov     ds:word_4a9c20, si
push    offset dword_4a9c18
push    offset sub_489500
push    ebx
call    sub_489ab0
add     esp, 0ch
mov     eax, 1
pop     esi
pop     ebx
retn
mov     ax, [esp+arg_0]
cmp     ax, ds:word_4a9c20
jnz     short locret_489674
push    offset dword_4a9c18
call    sub_453fe0
mov     ds:word_4a9c20, 0
add     esp, 4
retn
mov     ecx, dword ptr [esp+arg_4]
sub     esp, 2ch
lea     eax, [esp+2ch+string2]
push    29h
push    eax
push    ecx
mov     eax, [esp+38h+arg_8]
and     eax, 0ffffh
shl     eax, 10h
mov     al, 1
push    eax
call    sub_4897b0
add     esp, 10h
test    eax, eax
jz      short loc_4896c5
lea     eax, [esp+2ch+string2]
mov     ecx, [esp+2ch+lpstring1]
push    eax
push    ecx
call    ds:lstrcmpia
cmp     eax, 1
sbb     eax, eax
add     esp, 2ch
neg     eax
retn
xor     eax, eax
add     esp, 2ch
retn
mov     edx, [esp+arg_0]
sub     esp, 2ch
shr     edx, 10h
cmp     ds:word_4a9c20, dx
jnz     short loc_489722
mov     eax, [esp+2ch+arg_4]
push    29h
lea     ecx, [esp+30h+sz]
push    eax
push    ecx
call    sub_47f9f0
lea     ecx, [esp+38h+sz]
add     esp, 0ch
push    ecx
call    ds:charuppera
movsx   ecx, ds:word_4a9c20
lea     edx, [esp+2ch+sz]
push    ecx
push    offset sub_489680
push    edx
push    offset dword_4a9c18
call    sub_4540a0
add     esp, 3ch
retn
movsx   ecx, dx
shl     ecx, 6
mov     eax, [esp+2ch+arg_4]
push    eax
push    offset sub_489790
mov     eax, dword_4ae1e0
mov     ecx, [ecx+eax+10h]
mov     eax, [ecx]
xor     ecx, ecx
mov     cx, [eax+14h]
movzx   eax, dx
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_445b50
add     esp, 38h
retn
mov     eax, [esp+arg_0]
push    esi
mov     esi, [esp+4+lpstring1]
push    esi
push    eax
call    sub_4896d0
add     esp, 8
test    ax, ax
jnz     short loc_489781
push    esi
call    sub_482780
add     esp, 4
pop     esi
retn
mov     eax, [esp+lpstring2]
mov     ecx, [esp+lpstring1]
push    eax
push    ecx
call    ds:lstrcmpia
cmp     eax, 1
sbb     eax, eax
inc     eax
retn
push    esi
push    edi
mov     di, [esp+8+arg_4]
push    edi
call    sub_489a50
movsx   eax, ax
add     esp, 4
cmp     eax, 1
jz      short loc_4897d9
cmp     eax, 2
jz      short loc_489833
mov     esi, [esp+8+lpstring1]
xor     eax, eax
pop     edi
mov     byte ptr [esi], 0
pop     esi
retn
mov     ecx, [esp+8+arg_0]
mov     eax, [esp+8+cchbuffermax]
shr     ecx, 10h
push    eax
mov     esi, [esp+0ch+lpstring1]
mov     eax, dword_4ae1e0
movsx   edx, cx
shl     edx, 6
push    esi
push    edi
mov     edi, [edx+eax+10h]
xor     edx, edx
mov     eax, [edi]
mov     dx, [eax+14h]
movzx   eax, cx
shl     eax, 10h
or      edx, eax
push    edx
call    sub_445750
add     esp, 10h
movzx   edi, ax
push    offset asc_4aea94
push    esi
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_48982e
xor     eax, eax
pop     edi
mov     byte ptr [esi], 0
pop     esi
retn
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, [esp+8+cchbuffermax]
mov     esi, [esp+8+lpstring1]
push    eax
push    esi
push    edi
call    sub_482840
add     esp, 0ch
pop     edi
pop     esi
retn
mov     eax, [esp+arg_8]
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    sub_4636e0
mov     bx, [esp+14h+arg_4]
add     esp, 4
mov     ebp, eax
test    ebp, ebp
jz      short loc_489884
cmp     bx, 2044h
jnz     short loc_489879
mov     bx, 20bch
jmp     short loc_489884
cmp     bx, 2063h
jnz     short loc_489884
mov     bx, 20bdh
mov     edi, [esp+10h+cchbuffermax]
mov     esi, [esp+10h+lpstring]
mov     ecx, [esp+10h+arg_0]
lea     eax, [edi-3]
push    eax
push    esi
push    ebx
push    ecx
call    sub_4897b0
add     esp, 10h
test    eax, eax
jnz     short loc_4898bb
cmp     bx, 20b6h
jz      short loc_4898bb
push    4
push    4d0h
push    edi
push    esi
call    sub_47fe70
add     esp, 10h
test    ebp, ebp
jz      short loc_4898ec
push    esi
call    ds:lstrlena
add     esi, eax
inc     eax
inc     esi
sub     edi, eax
mov     ecx, [esp+10h+arg_8]
lea     eax, [edi-2]
mov     byte ptr [esi-1], 40h
push    eax
push    esi
push    ecx
call    sub_462d70
add     esp, 0ch
push    edi
push    esi
call    sub_47fae0
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
mov     si, [esp+0ch+arg_4]
push    edi
push    ebp
push    esi
call    sub_489a50
add     esp, 4
cmp     ax, 2
jnz     short loc_489931
mov     ebx, [esp+14h+arg_8]
push    ebx
push    esi
call    sub_482870
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+14h+arg_0]
xor     edi, edi
shr     eax, 10h
mov     word ptr [esp+14h+var_4], ax
cmp     ds:word_4a8518, ax
jnz     loc_4899ce
movsx   eax, ds:word_4a8518
shl     eax, 6
mov     ecx, dword_4ae1e0
xor     ebp, ebp
mov     edx, [eax+ecx+10h]
mov     eax, [edx]
mov     bp, [eax+3ch]
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
or      ebp, eax
push    ebp
call    sub_470640
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      loc_489a0a
dec     si
push    ebp
call    sub_470610
movsx   ecx, si
add     esp, 4
lea     esi, [ecx+ecx*4]
lea     ecx, [ecx+esi*2]
add     ecx, ecx
cmp     eax, ecx
jle     short loc_4899bd
mov     eax, [ebx]
mov     ebx, [esp+14h+arg_8]
mov     edi, ebx
lea     esi, [eax+ecx]
mov     ecx, 5
rep movsd
movsw
mov     edi, 1
jmp     short loc_4899c1
mov     ebx, [esp+14h+arg_8]
push    0
push    ebp
call    sub_470920
add     esp, 8
jmp     short loc_489a0e
mov     ebx, [esp+14h+arg_8]
push    16h
push    ebx
mov     eax, dword_4ae1e0
movsx   ecx, word ptr [esp+1ch+var_4]
shl     ecx, 6
push    esi
mov     edx, [ecx+eax+10h]
xor     ecx, ecx
mov     eax, [esp+20h+var_4]
mov     ebp, [edx]
mov     cx, [ebp+18h]
and     eax, 0ffffh
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_445670
add     esp, 10h
mov     edi, eax
jmp     short loc_489a0e
mov     ebx, [esp+14h+arg_8]
test    edi, edi
jz      short loc_489a30
cmp     word ptr [ebx], 0
jnz     short loc_489a3d
cmp     word ptr [ebx+8], 2
jnz     short loc_489a3d
mov     ax, word ptr [esp+14h+var_4]
pop     ebp
mov     [ebx+10h], ax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     word ptr [ebx], 1
xor     eax, eax
mov     [ebx+8], eax
mov     [ebx+4], eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     ax, [esp+arg_0]
cmp     ax, 1
jl      short loc_489a66
cmp     ax, 2000h
jg      short loc_489a66
mov     ax, 1
retn
cmp     ax, 2001h
jl      short loc_489a77
cmp     ax, 3000h
jg      short loc_489a77
mov     ax, 2
retn
cmp     ax, 3001h
jl      short loc_489a88
cmp     ax, 3fffh
jg      short loc_489a88
mov     ax, 3
retn
xor     ax, ax
retn
mov     eax, [esp+arg_0]
test    eax, eax
jnz     short loc_489a9b
xor     eax, eax
retn
mov     eax, [eax]
push    eax
call    ds:lstrlena
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_0]
sub     esp, 8
shr     edx, 10h
mov     [esp+8+var_8], eax
lea     eax, [esp+8+var_8]
mov     [esp+8+var_4], ecx
push    eax
mov     ecx, dword_4ae1e0
movsx   eax, dx
shl     eax, 6
push    offset loc_489b00
mov     eax, [eax+ecx+10h]
xor     ecx, ecx
mov     eax, [eax]
mov     cx, [eax+14h]
movzx   eax, dx
shl     eax, 10h
or      ecx, eax
push    ecx
call    sub_445b50
add     esp, 14h
retn
push    esi
push    offset asc_4aea94
mov     esi, [esp+10h]
push    esi
call    ds:lstrcmpia
test    eax, eax
jz      short loc_489b2a
mov     ecx, [esp+14h]
mov     edx, [esp+8]
mov     eax, [ecx+4]
push    eax
push    esi
push    edx
call    dword ptr [ecx]
add     esp, 0ch
pop     esi
retn
mov     eax, 1
pop     esi
retn
mov     ecx, [esp+arg_0]
sub     esp, 4
mov     [esp+4+var_2], 0
lea     eax, [esp+4+var_2]
push    eax
push    offset sub_489b70
push    ecx
call    sub_489ab0
movsx   eax, [esp+10h+var_2]
add     esp, 0ch
add     esp, 4
retn
mov     eax, [esp+arg_8]
inc     word ptr [eax]
mov     eax, 1
retn
push    ebx
push    esi
push    edi
mov     esi, ds:globallock
mov     edi, [esp+0ch+hmem]
push    ebp
push    edi
call    esi
mov     ebx, [esp+10h+arg_4]
push    edi
mov     ebp, [eax+ebx*4+4]
lea     eax, [eax+ebx*4]
sub     ebp, [eax]
call    ds:globalunlock
test    ebp, ebp
jz      short loc_489bcb
push    edi
call    esi
push    ebp
mov     ecx, [eax+ebx*4]
add     ecx, eax
push    ecx
call    sub_45b910
add     esp, 8
mov     esi, eax
push    edi
call    ds:globalunlock
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 48h
push    esi
xor     esi, esi
cmp     [esp+4ch+hobject], esi
jnz     short loc_489c0a
mov     eax, [esp+4ch+arg_0]
push    8
mov     esi, 1
mov     ecx, [eax]
push    ecx
call    sub_44baf0
mov     [esp+54h+hobject], eax
mov     [esp+54h+arg_8], edx
add     esp, 8
cmp     [esp+4ch+hobject], 0
jnz     short loc_489c18
xor     eax, eax
pop     esi
add     esp, 48h
retn
lea     eax, [esp+4ch+buffer]
push    0
mov     edx, [esp+50h+hobject]
push    0
mov     ecx, [esp+54h+arg_8]
push    40h
push    eax
push    ecx
push    edx
call    sub_44b0c0
add     esp, 18h
cmp     eax, 40h
jnz     short loc_489c48
cmp     [esp+4ch+buffer], 4dh
jnz     short loc_489c48
cmp     [esp+4ch+var_3f], 5ah
jz      short loc_489c50
mov     [esp+4ch+var_20], 0
test    esi, esi
jz      short loc_489c66
mov     eax, [esp+4ch+hobject]
mov     ecx, [esp+4ch+arg_8]
push    ecx
push    eax
call    sub_44ae90
add     esp, 8
mov     eax, [esp+4ch+var_20]
pop     esi
add     esp, 48h
retn
mov     eax, [esp+arg_10]
sub     esp, 0ch
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
cmp     eax, 42494c57h
jz      short loc_489c9f
cmp     eax, 55545357h
jnz     short loc_489c9f
mov     edi, [esp+1ch+arg_14]
mov     [esp+1ch+var_c], 0fffffffch
mov     dword ptr [edi], 0fffffffch
jmp     short loc_489cb1
mov     edi, [esp+1ch+arg_14]
mov     [esp+1ch+var_c], 0fffffffbh
mov     dword ptr [edi], 0fffffffbh
mov     [esp+1ch+var_8], eax
call    sub_489ee0
mov     si, [esp+1ch+arg_0]
mov     ebp, [esp+1ch+hfile]
mov     [esp+1ch+var_4], eax
test    ebp, ebp
jz      short loc_489d08
cmp     si, 2
jnz     short loc_489cf2
mov     ecx, [esp+1ch+arg_8]
push    ecx
push    ebp
call    sub_44a4a0
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jge     short loc_489d08
call    sub_44a430
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+1ch+hfile]
mov     ecx, [esp+1ch+arg_8]
push    ecx
push    eax
push    0
call    sub_489be0
add     esp, 0ch
mov     ebx, eax
lea     ecx, [ebx+20h]
mov     eax, [esp+1ch+arg_c]
test    ebp, ebp
mov     [eax], ecx
jz      short loc_489d41
lea     eax, [esp+1ch+var_c]
push    edi
lea     ecx, [esp+20h+var_4]
push    eax
lea     edx, [esp+24h+var_8]
push    ecx
mov     eax, [esp+28h+hfile]
push    edx
mov     ecx, [esp+2ch+arg_8]
push    ebx
push    ecx
push    eax
push    esi
call    sub_489d50
add     esp, 20h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 10h
cmp     [esp+10h+arg_0], 0
push    esi
push    edi
jnz     loc_489e2c
mov     eax, [esp+18h+ldistancetomove]
lea     ecx, [esp+18h+buffer]
mov     edx, [esp+18h+hfile]
push    eax
mov     eax, [esp+1ch+arg_8]
push    0
push    10h
push    ecx
push    eax
push    edx
call    sub_44b0c0
add     esp, 18h
cmp     eax, 10h
jz      short loc_489d91
mov     eax, 1388h
pop     edi
pop     esi
add     esp, 10h
retn
mov     eax, [esp+18h+var_c]
not     eax
cmp     eax, [esp+18h+buffer]
jz      short loc_489dc7
cmp     [esp+18h+buffer], 79706f43h
jnz     short loc_489dbc
cmp     [esp+18h+var_c], 68676972h
jnz     short loc_489dbc
mov     eax, 1395h
pop     edi
pop     esi
add     esp, 10h
retn
mov     eax, 1388h
pop     edi
pop     esi
add     esp, 10h
retn
mov     esi, [esp+18h+arg_10]
mov     eax, [esi]
cmp     eax, 20202020h
jz      short loc_489e0a
cmp     [esp+18h+buffer], eax
jz      short loc_489de5
mov     eax, 138ch
pop     edi
pop     esi
add     esp, 10h
retn
mov     edi, [esp+18h+arg_1c]
mov     ecx, [esp+18h+arg_18]
mov     eax, [edi]
mov     edx, [ecx]
push    eax
push    edx
mov     eax, [esp+20h+var_4]
push    eax
call    sub_489e90
add     esp, 0ch
test    eax, eax
jz      short loc_489e0e
pop     edi
pop     esi
add     esp, 10h
retn
mov     edi, [esp+18h+arg_1c]
mov     eax, [esp+18h+buffer]
mov     ecx, [esp+18h+var_4]
mov     edx, [esp+18h+var_8]
mov     [esi], eax
mov     eax, [esp+18h+arg_14]
mov     [edi], ecx
mov     [eax], edx
xor     eax, eax
pop     edi
pop     esi
add     esp, 10h
retn
mov     esi, [esp+18h+arg_10]
mov     eax, [esi]
cmp     eax, 20202020h
jz      short loc_489e24
mov     ecx, [esp+18h+arg_14]
mov     edi, [esp+18h+arg_1c]
mov     [esp+18h+buffer], eax
mov     edx, [ecx]
mov     ecx, [esp+18h+ldistancetomove]
mov     [esp+18h+var_8], edx
not     eax
lea     edx, [esp+18h+buffer]
push    ecx
mov     [esp+1ch+var_c], eax
push    0
mov     eax, [edi]
push    10h
mov     ecx, [esp+24h+arg_8]
push    edx
mov     [esp+28h+var_4], eax
push    ecx
mov     eax, [esp+2ch+hfile]
push    eax
call    sub_44b1f0
add     esp, 18h
cmp     eax, 10h
jz      short loc_489e24
mov     eax, 70h
pop     edi
pop     esi
add     esp, 10h
retn
mov     ecx, [esp+arg_0]
test    ecx, ecx
jl      short loc_489eb8
mov     eax, [esp+arg_4]
test    eax, eax
jl      short loc_489eb2
cmp     eax, ecx
jg      short loc_489eb2
test    eax, eax
jl      short loc_489ed0
cmp     eax, ecx
jge     short loc_489ed0
mov     eax, 1388h
retn
mov     eax, 1389h
retn
cmp     [esp+arg_4], ecx
jge     short loc_489ec4
mov     eax, 1389h
retn
cmp     [esp+arg_8], ecx
jle     short loc_489ed0
mov     eax, 1391h
retn
xor     eax, eax
retn
push    esi
push    edi
xor     esi, esi
cmp     dword_4aeaa8, esi
jz      short loc_489ef4
mov     eax, dword_4aeaa8
pop     edi
pop     esi
retn
push    104h
mov     eax, ds:hinstance
push    1
push    eax
call    ds:findresourcea
push    eax
mov     ecx, ds:hinstance
push    ecx
call    ds:loadresource
mov     edi, eax
test    edi, edi
jz      short loc_489f28
push    edi
call    ds:lockresource
mov     esi, eax
test    esi, esi
jnz     short loc_489f40
push    22dh
mov     eax, off_4ad1e8
push    offset aversion
push    eax
call    sub_480570
add     esp, 0ch
mov     eax, [esi]
push    edi
mov     dword_4aeaa8, eax
call    ds:freeresource
mov     eax, dword_4aeaa8
pop     edi
pop     esi
retn
push    edi
xor     eax, eax
mov     edi, offset dword_4a9c30
mov     ecx, 0a1h
rep stosd
stosb
mov     eax, 1
pop     edi
retn
mov     ecx, [esp+arg_0]
push    esi
push    edi
mov     eax, [ecx]
cmp     eax, 0fh
ja      def_489f99
xor     edx, edx
mov     dl, ds:byte_48a1e0[eax]
jmp     ds:jpt_489f99[edx*4]
mov     edi, offset dword_4a9c30
xor     eax, eax
mov     ecx, 0a1h
push    offset dword_4a9c30
rep stosd
stosb
mov     ds:word_4a9ea3, 3
call    sub_48b730
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
mov     word ptr [ecx+8], 0
pop     esi
retn
mov     esi, ds:dword_4a68c0
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 0bh
jnz     def_489f99
push    offset dword_4a9c30
call    sub_48b640
add     esp, 4
test    eax, eax
jnz     short loc_48a022
push    offset dword_4a9c30
call    sub_48b670
add     esp, 4
push    offset dword_4a9c30
call    sub_48b640
add     esp, 4
test    eax, eax
jnz     short loc_48a022
xor     eax, eax
pop     edi
pop     esi
retn
push    0
push    esi
call    sub_48a820
add     esp, 8
push    2000001h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jnz     def_489f99
push    2000308h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     def_489f99
push    esi
call    sub_48d360
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
call    sub_48a4d0
call    sub_48d690
xor     eax, eax
pop     edi
pop     esi
retn
push    offset dword_4a9c30
call    sub_48b640
add     esp, 4
test    eax, eax
jz      def_489f99
push    offset dword_4a9c30
call    sub_48b060
add     esp, 4
test    ax, ax
jnz     def_489f99
call    sub_48aa00
call    sub_48a700
push    0
call    sub_48aa90
add     esp, 4
call    sub_48d690
xor     eax, eax
pop     edi
pop     esi
retn
push    offset dword_4a9c30
call    sub_48b640
add     esp, 4
test    eax, eax
jz      short loc_48a0ea
push    offset dword_4a9c30
call    sub_48b060
add     esp, 4
test    ax, ax
jnz     short loc_48a0ea
call    sub_48a700
call    sub_48d690
xor     eax, eax
pop     edi
pop     esi
retn
cmp     ds:dword_4a68ae, 2
jnz     def_489f99
mov     esi, ds:dword_4a68c0
push    esi
call    sub_462480
add     esp, 4
cmp     ax, 0bh
jnz     def_489f99
push    1
push    esi
call    sub_48a820
add     esp, 8
push    2000308h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     short def_489f99
push    esi
call    sub_48d360
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
push    offset dword_4a9c30
call    sub_48a2c0
add     esp, 4
test    eax, eax
jz      short def_489f99
cmp     ds:dword_4a9e7f, 0
jz      short def_489f99
cmp     ds:frequency, 0
jz      short def_489f99
mov     eax, ds:dword_4a9e7f
push    eax
call    sub_48b210
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
push    offset dword_4a9c30
call    sub_48b640
add     esp, 4
test    eax, eax
jz      short loc_48a1a5
push    offset dword_4a9c30
call    sub_48b060
add     esp, 4
test    ax, ax
jnz     short loc_48a1a5
call    sub_48a700
call    sub_48b460
call    sub_48d690
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, ds:dword_4a9e7f
retn
sub     esp, 0ch
push    ebx
push    esi
push    offset dword_4a9c30
call    sub_48a2c0
add     esp, 4
test    eax, eax
jz      loc_48a2b9
cmp     ds:dword_4a9e7f, 0
jz      loc_48a2b9
mov     edx, ds:dword_4a9e7f
mov     esi, dword_4ae1e0
mov     cx, dx
mov     eax, edx
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     ebx, [eax+esi+4]
mov     eax, [ebx]
xor     ebx, ebx
mov     bl, ch
mov     eax, [eax+ebx*4]
test    eax, eax
jz      short loc_48a25f
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_48a268
push    edx
call    sub_461250
add     esp, 4
lea     ecx, [esp+14h+var_c]
push    0ah
push    ecx
push    20h
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      short loc_48a2b9
xor     eax, eax
xor     ecx, ecx
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     cx, word ptr [esp+14h+var_a]
or      eax, ecx
test    ax, ax
mov     [esp+14h+var_a], eax
jg      short loc_48a29d
xor     eax, eax
test    eax, eax
jz      short loc_48a2b9
mov     eax, [esp+14h+arg_0]
cmp     eax, [esp+14h+var_a]
jnz     short loc_48a2b9
mov     eax, ds:dword_4a9e7f
push    eax
call    sub_48b210
add     esp, 4
pop     esi
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
cmp     ecx, eax
jz      short locret_48a2d0
mov     eax, [ecx+257h]
retn
push    ebx
push    esi
push    edi
push    offset dword_4a9c30
call    sub_48b640
add     esp, 4
test    eax, eax
jz      loc_48a3f2
call    sub_48b080
test    ax, ax
jnz     loc_48a3e9
cmp     ds:dword_4a6aba, 2
mov     esi, [esp+0ch+arg_0]
jnz     short loc_48a320
push    esi
push    0bh
push    2
call    sub_43bd20
add     esp, 0ch
push    2000001h
push    esi
call    sub_462670
mov     di, ax
add     esp, 8
test    di, di
jnz     short loc_48a347
cmp     esi, ds:dword_4a68c0
jz      short loc_48a347
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    20106c0h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_48a35e
push    0
jmp     short loc_48a3b6
cmp     ax, 2
jnz     short loc_48a386
push    40ah
push    esi
call    sub_48aa20
add     esp, 8
mov     ebx, eax
call    sub_48a7d0
cmp     eax, ebx
jz      short loc_48a386
push    ebx
call    sub_48a800
add     esp, 4
push    0
push    407h
push    esi
call    sub_42ed80
add     esp, 0ch
test    eax, eax
jz      short loc_48a3b4
push    0
call    sub_48a760
add     esp, 4
push    407h
push    esi
call    sub_441840
add     esp, 8
jmp     short loc_48a3be
push    1
call    sub_48a760
add     esp, 4
cmp     ds:dword_4a68c4, 0
jnz     short loc_48a3d5
test    di, di
jnz     short loc_48a3d5
push    esi
call    sub_434b70
add     esp, 4
push    408h
push    esi
call    sub_441840
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
cmp     ds:dword_4a6aba, 2
mov     esi, [esp+0ch+arg_0]
jnz     short loc_48a40c
push    esi
push    0bh
push    2
call    sub_43bd20
add     esp, 0ch
push    esi
call    sub_434b70
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, [esp+arg_4]
push    esi
cmp     eax, 407h
jz      short loc_48a436
cmp     eax, 408h
jz      short loc_48a479
pop     esi
retn
mov     esi, [esp+4+arg_0]
cmp     ds:dword_4a9e7f, esi
jnz     loc_48a4ca
call    sub_48b080
test    ax, ax
jnz     short loc_48a4ca
mov     eax, [esp+4+arg_8]
cmp     dword ptr [eax+8], 0
jz      short loc_48a4ca
push    0
call    sub_48a760
add     esp, 4
push    407h
push    esi
call    sub_441840
add     esp, 8
call    sub_48d690
pop     esi
retn
mov     esi, [esp+4+arg_0]
cmp     ds:dword_4a9e7f, esi
jnz     short loc_48a4ca
mov     eax, [esp+4+arg_8]
cmp     dword ptr [eax+8], 0
jz      short loc_48a4ca
call    sub_48a700
call    sub_48d690
push    20106c0h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_48a4ca
push    0
push    407h
push    esi
call    sub_42ed80
add     esp, 0ch
test    eax, eax
jz      short loc_48a4ca
push    0
call    sub_48a760
add     esp, 4
pop     esi
retn
push    esi
push    offset dword_4a9c30
xor     si, si
call    sub_48b640
add     esp, 4
test    eax, eax
jz      short loc_48a53a
push    offset dword_4a9c30
call    sub_48b060
mov     si, ax
add     esp, 4
test    si, si
jnz     short loc_48a509
call    sub_48a700
push    0
call    sub_48a760
add     esp, 4
push    offset dword_4a9c30
call    sub_48af90
add     esp, 4
push    offset dword_4a9c30
call    sub_48afb0
add     esp, 4
push    offset dword_4a9c30
call    sub_48bcf0
add     esp, 4
push    0
call    sub_48aa90
add     esp, 4
mov     ax, si
pop     esi
retn
push    esi
push    edi
mov     di, 1
push    offset dword_4a9c30
call    sub_48bff0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      loc_48a654
push    offset dword_4a9c30
call    sub_48bf10
add     esp, 4
cmp     eax, offset loc_48b3d0
jnz     short loc_48a589
push    offset dword_4a9c30
call    sub_48a2c0
add     esp, 4
cmp     eax, offset loc_48b3d0
jz      loc_48a64c
push    offset dword_4a9c30
call    sub_48b670
add     esp, 4
test    ax, ax
jnz     short loc_48a5b6
push    offset dword_4a9c30
call    sub_48b060
add     esp, 4
test    ax, ax
jnz     short loc_48a5b6
xor     di, di
mov     ax, di
pop     edi
pop     esi
retn
cmp     [esp+8+arg_0], 0
jz      loc_48a642
dec     ax
cmp     ax, 1
sbb     eax, eax
add     eax, 2
push    eax
push    12h
call    sub_45c150
add     esp, 8
cmp     eax, 2
push    offset dword_4a9c30
jnz     short loc_48a631
call    sub_48af90
add     esp, 4
push    offset dword_4a9c30
call    sub_48afb0
add     esp, 4
push    offset dword_4a9c30
call    sub_48bcf0
add     esp, 4
push    offset loc_48b3d0
push    offset dword_4a9c30
mov     di, 2
call    sub_48bf30
add     esp, 8
push    offset loc_48b3d0
push    offset dword_4a9c30
call    sub_48bf50
mov     ax, di
add     esp, 8
pop     edi
pop     esi
retn
call    sub_48b510
mov     di, ax
add     esp, 4
mov     ax, di
pop     edi
pop     esi
retn
mov     di, 1
mov     ax, di
pop     edi
pop     esi
retn
test    esi, esi
jnz     loc_48a6f5
push    offset dword_4a9c30
call    sub_48bf10
add     esp, 4
cmp     eax, offset loc_48b3d0
jnz     short loc_48a67c
push    offset dword_4a9c30
call    sub_48a2c0
add     esp, 4
cmp     eax, offset loc_48b3d0
jz      short loc_48a6f5
cmp     [esp+8+arg_0], 0
jz      short loc_48a6f5
push    0d0h
call    sub_45c150
add     esp, 4
cmp     eax, 2
push    offset dword_4a9c30
jnz     short loc_48a6ea
call    sub_48af90
add     esp, 4
push    offset dword_4a9c30
call    sub_48afb0
add     esp, 4
push    offset dword_4a9c30
call    sub_48bcf0
add     esp, 4
push    offset loc_48b3d0
push    offset dword_4a9c30
mov     di, 2
call    sub_48bf30
add     esp, 8
push    offset loc_48b3d0
push    offset dword_4a9c30
call    sub_48bf50
mov     ax, di
add     esp, 8
pop     edi
pop     esi
retn
call    sub_48b510
mov     di, ax
add     esp, 4
mov     ax, di
pop     edi
pop     esi
retn
push    0
push    8
push    offset dword_4a9c30
call    sub_48bf70
add     esp, 0ch
retn
mov     ax, [esp+arg_0]
movsx   ecx, ax
mov     ds:word_4a9ea3, ax
push    ecx
push    9
push    offset dword_4a9c30
call    sub_48bf70
add     esp, 0ch
retn
movsx   eax, [esp+arg_0]
push    eax
push    0bh
push    offset dword_4a9c30
call    sub_48bf70
add     esp, 0ch
retn
movsx   eax, [esp+arg_0]
push    eax
push    0ah
push    offset dword_4a9c30
call    sub_48bf70
add     esp, 0ch
retn
sub     esp, 4
mov     eax, ds:dword_4a9e7f
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jnz     short loc_48a7a5
mov     [esp+4+var_4], 0ffffh
mov     eax, [esp+4+var_4]
add     esp, 4
retn
lea     eax, [esp+4+var_4]
push    eax
push    10h
push    offset dword_4a9c30
call    sub_48bf70
mov     eax, [esp+10h+var_4]
add     esp, 0ch
add     esp, 4
retn
sub     esp, 4
lea     eax, [esp+4+var_4]
push    eax
push    offset dword_4a9c30
call    sub_48b0e0
add     esp, 8
cmp     ax, 1
sbb     eax, eax
and     eax, [esp+4+var_4]
add     esp, 4
retn
mov     eax, [esp+arg_0]
cmp     eax, 1
jg      short loc_48a80e
mov     eax, 1
push    eax
push    5
push    offset dword_4a9c30
call    sub_48bf70
add     esp, 0ch
retn
sub     esp, 8
push    ebx
push    esi
push    edi
push    ebp
call    sub_48b460
call    sub_40acb0
push    eax
call    sub_48b4c0
mov     esi, [esp+1ch+arg_0]
add     esp, 4
mov     ds:dword_4a9e7f, esi
push    2010338h
push    esi
call    sub_462670
mov     word ptr [esp+20h+var_6], ax
mov     eax, [esp+20h+var_6]
add     esp, 8
push    eax
call    sub_48a720
add     esp, 4
push    409h
push    esi
call    sub_48aa20
add     esp, 8
test    eax, eax
jg      short loc_48a878
xor     eax, eax
mov     ebx, eax
push    offset dword_4a9c30
call    sub_48b5a0
add     esp, 4
cmp     eax, 1
jg      short loc_48a891
mov     eax, 1
mov     edi, eax
push    40ah
push    esi
call    sub_48aa20
add     esp, 8
cmp     eax, edi
jl      short loc_48a8ab
mov     [esp+18h+var_6+2], edi
jmp     short loc_48a8bd
push    40ah
push    esi
call    sub_48aa20
mov     [esp+20h+var_6+2], eax
add     esp, 8
cmp     ebx, edi
jl      short loc_48a8c3
mov     ebx, edi
mov     edi, 1
cmp     [esp+18h+var_6+2], ebx
jl      short loc_48a8d0
xor     edi, edi
mov     ax, word ptr [esp+18h+var_6]
sub     ax, 3
cmp     ax, 1
sbb     ebp, ebp
neg     ebp
cmp     [esp+18h+arg_4], 0
jnz     short loc_48a8f1
push    ebx
call    sub_48a800
add     esp, 4
push    2000640h
push    esi
call    sub_462670
add     esp, 8
push    eax
push    1
call    sub_48c070
add     esp, 8
push    2000520h
push    esi
call    sub_462670
add     esp, 8
push    eax
push    2
call    sub_48c070
add     esp, 8
push    2000410h
push    esi
call    sub_462670
add     esp, 8
push    eax
call    sub_48a740
add     esp, 4
push    2000780h
push    esi
call    sub_462670
add     esp, 8
push    eax
call    sub_48a760
add     esp, 4
push    esi
call    sub_48b210
add     esp, 4
cmp     ds:dword_4a6aba, 1
jnz     short loc_48a970
push    esi
push    0bh
push    1
call    sub_43bd20
add     esp, 0ch
cmp     word ptr [esp+18h+var_6], 0
jz      short loc_48a992
mov     eax, [esp+18h+var_6+2]
push    edi
push    ebp
test    eax, eax
jg      short loc_48a984
xor     eax, eax
push    eax
push    offset dword_4a9c30
call    sub_48afd0
add     esp, 10h
cmp     [esp+18h+arg_4], 0
jnz     short loc_48a9ea
push    20106c0h
push    esi
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_48a9c1
push    80h
push    407h
push    esi
push    7
call    sub_441440
add     esp, 10h
push    2000204h
push    esi
call    sub_462670
add     esp, 8
cmp     ax, 1
jnz     short loc_48a9ea
push    80h
push    408h
push    esi
push    7
call    sub_441440
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    0
push    13h
push    offset dword_4a9c30
call    sub_48bf70
add     esp, 0ch
retn
sub     esp, 1ch
lea     eax, [esp+1ch+var_1a]
push    ebx
push    esi
push    edi
mov     di, [esp+28h+arg_4]
push    eax
mov     esi, [esp+2ch+arg_0]
push    edi
push    esi
call    sub_461350
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jz      short loc_48aa7c
lea     eax, [esp+28h+var_18]
push    1
push    eax
push    ebx
push    esi
call    sub_41a990
lea     eax, [esp+38h+var_18]
add     esp, 10h
push    1
push    eax
call    sub_41aa60
add     esp, 8
push    ebx
push    0
push    edi
push    esi
call    sub_4613a0
mov     eax, [esp+38h+var_10]
add     esp, 10h
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     [esp+28h+var_10], 0
mov     eax, [esp+28h+var_10]
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
mov     eax, [esp+arg_0]
mov     ds:dword_4a9e7f, eax
retn
push    offset dword_4a9c30
call    sub_48b020
add     esp, 4
mov     eax, ds:dword_4a9e7f
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short locret_48aaef
push    407h
mov     eax, ds:dword_4a9e7f
push    eax
call    sub_441840
add     esp, 8
mov     eax, ds:dword_4a9e7f
push    408h
push    eax
call    sub_441840
add     esp, 8
push    0
call    sub_48aa90
add     esp, 4
retn
push    offset dword_4a9c30
call    sub_48b670
mov     eax, [esp+4+arg_4]
add     esp, 4
cmp     dword ptr [eax+8], 1
sbb     eax, eax
inc     eax
push    eax
call    sub_48a760
add     esp, 4
xor     eax, eax
retn
push    esi
mov     esi, [esp+4+arg_4]
mov     eax, [esi+8]
cmp     eax, 1
jl      short loc_48ab57
cmp     eax, 3
jg      short loc_48ab57
push    offset dword_4a9c30
call    sub_48b670
add     esp, 4
mov     ecx, [esi+8]
cmp     dword ptr [esi+1eh], 1
sbb     eax, eax
inc     eax
push    eax
push    ecx
call    sub_48c070
add     esp, 8
xor     eax, eax
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
push    offset dword_4a9c30
call    sub_48b670
mov     esi, [esp+8+arg_4]
add     esp, 4
mov     ecx, [esi+8]
mov     eax, ecx
cdq
xor     eax, edx
sub     eax, edx
cmp     eax, 5
jg      short loc_48abf0
test    ecx, ecx
jle     short loc_48abbd
push    ecx
call    sub_48a720
add     esp, 4
mov     eax, [esi+8]
sub     eax, 3
push    0
cmp     eax, 1
sbb     eax, eax
neg     eax
push    eax
push    offset dword_4a9c30
call    sub_48b5a0
add     esp, 4
push    eax
push    offset dword_4a9c30
call    sub_48afd0
add     esp, 10h
xor     eax, eax
pop     esi
retn
jge     short loc_48abeb
push    eax
call    sub_48a720
add     esp, 4
push    1
push    0
push    offset dword_4a9c30
call    sub_48b550
add     esp, 4
push    eax
push    offset dword_4a9c30
call    sub_48afd0
add     esp, 10h
xor     eax, eax
pop     esi
retn
call    sub_48a700
xor     eax, eax
pop     esi
retn
push    esi
push    edi
push    offset dword_4a9c30
call    sub_48b670
mov     esi, [esp+0ch+arg_4]
add     esp, 4
push    esi
call    sub_442d80
add     esp, 4
push    eax
call    sub_47fa80
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_48ac48
push    edi
call    ds:globallock
mov     ecx, [esi+1eh]
push    ecx
push    eax
call    sub_48b100
add     esp, 8
push    edi
call    sub_45ba00
add     esp, 4
push    esi
call    sub_442e00
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
push    offset dword_4a9c30
call    sub_48b670
add     esp, 4
call    sub_48a700
xor     eax, eax
retn
mov     ax, ds:word_4a9ea3
sub     esp, 4
sub     ax, 3
push    esi
cmp     ax, 1
push    offset dword_4a9c30
mov     [esp+0ch+var_4], 0
sbb     esi, esi
call    sub_48b670
lea     eax, [esp+0ch+var_4]
add     esp, 4
neg     esi
push    eax
push    offset dword_4a9c30
call    sub_48b0e0
mov     eax, [esp+10h+arg_4]
add     esp, 8
mov     ecx, 1
mov     eax, [eax+8]
cmp     [esp+8+var_4], eax
jg      short loc_48acd1
xor     ecx, ecx
push    ecx
push    esi
push    eax
push    offset dword_4a9c30
call    sub_48afd0
add     esp, 10h
xor     eax, eax
pop     esi
add     esp, 4
retn
push    offset dword_4a9c30
call    sub_48b670
mov     eax, [esp+4+arg_4]
add     esp, 4
cmp     dword ptr [eax+8], 0
push    offset dword_4a9c30
jz      short loc_48ad17
call    sub_48b0c0
add     esp, 4
xor     eax, eax
retn
call    sub_48b0a0
add     esp, 4
xor     eax, eax
retn
push    offset dword_4a9c30
call    sub_48b670
mov     eax, [esp+4+arg_4]
add     esp, 4
mov     ecx, [eax+8]
push    ecx
call    sub_48a800
add     esp, 4
xor     eax, eax
retn
sub     esp, 100h
mov     al, windowname
mov     ecx, 3fh
push    esi
mov     [esp+104h+string], al
push    edi
lea     edi, [esp+108h+var_ff]
xor     eax, eax
rep stosd
stosw
stosb
push    offset dword_4a9c30
call    sub_48b670
mov     esi, [esp+10ch+arg_4]
add     esp, 4
push    esi
call    sub_442d80
add     esp, 4
push    eax
call    sub_47fa80
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_48adc4
push    edi
call    ds:globallock
mov     ecx, [esi+1eh]
push    ecx
push    eax
lea     eax, [esp+110h+string]
push    100h
push    eax
call    sub_48b180
add     esp, 10h
push    edi
call    sub_45ba00
add     esp, 4
push    esi
call    sub_442e00
lea     eax, [esp+10ch+string]
add     esp, 4
push    eax
call    sub_47fa80
add     esp, 4
pop     edi
pop     esi
add     esp, 100h
retn
sub     esp, 8
cmp     ds:frequency, 0
push    ebx
jz      loc_48ae84
cmp     [esp+0ch+arg_0], 3
mov     ecx, [esp+0ch+arg_4]
jnz     short loc_48ae4c
mov     eax, [ecx+1eh]
xor     ebx, ebx
cdq
and     edx, 0ffh
add     eax, edx
mov     bl, ah
mov     eax, [ecx+34h]
cdq
shl     ebx, 8
and     edx, 0ffh
add     eax, edx
xor     edx, edx
mov     dl, ah
mov     eax, [ecx+8]
shl     edx, 10h
xor     ecx, ecx
or      ebx, edx
cdq
and     edx, 0ffh
add     eax, edx
mov     cl, ah
or      ebx, ecx
mov     [esp+0ch+color], ebx
jmp     short loc_48ae53
mov     eax, [ecx+8]
mov     [esp+0ch+color], eax
mov     eax, [esp+0ch+color]
push    eax
call    sub_469ba0
mov     [esp+10h+var_8], ax
add     esp, 4
push    offset dword_4a9c30
call    sub_48b670
lea     eax, [esp+10h+var_8]
add     esp, 4
push    eax
push    offset dword_4a9c30
call    sub_48b340
add     esp, 8
xor     eax, eax
pop     ebx
add     esp, 8
retn
push    offset dword_4a9c30
call    sub_48b670
add     esp, 4
jmp     sub_48a7d0
push    offset dword_4a9c30
call    sub_48b670
add     esp, 4
call    sub_48b080
cmp     ax, 1
sbb     eax, eax
neg     eax
retn
push    offset dword_4a9c30
call    sub_48b670
add     esp, 4
push    offset dword_4a9c30
call    sub_48bf10
add     esp, 4
cmp     eax, offset loc_48b380
jz      short loc_48af1b
push    offset dword_4a9c30
call    sub_48bf10
add     esp, 4
cmp     eax, offset loc_48b3d0
jz      short loc_48af1b
push    offset dword_4a9c30
call    sub_48b060
add     esp, 4
cmp     ax, 1
sbb     eax, eax
neg     eax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_0]
lea     ecx, [eax+236h]
push    ecx
push    1
push    eax
call    sub_48bf70
add     esp, 0ch
retn
sub     esp, 1ch
push    esi
push    edi
mov     esi, [esp+24h+arg_0]
push    0
push    19h
push    esi
call    sub_48bfb0
mov     di, ax
add     esp, 0ch
test    di, di
jnz     short loc_48af81
lea     eax, [esp+24h+var_1c]
push    eax
push    1bh
push    esi
call    sub_48bfb0
add     esp, 0ch
test    ax, ax
jnz     short loc_48af81
cmp     [esp+24h+var_1a], 1
sbb     eax, eax
neg     eax
mov     dword_4aeab4, eax
mov     ax, di
pop     edi
pop     esi
add     esp, 1ch
retn
mov     eax, [esp+arg_0]
push    0
push    2
push    eax
call    sub_48bf70
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
push    0
push    1ah
push    eax
call    sub_48bfb0
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
sub     esp, 0ch
cmp     eax, 1
jg      short loc_48afe1
mov     eax, 1
cmp     eax, 0ffffh
jl      short loc_48afed
mov     eax, 0ffffh
mov     ecx, [esp+0ch+arg_c]
lea     edx, [esp+0ch+var_c]
mov     [esp+0ch+var_c], eax
push    edx
mov     eax, [esp+10h+arg_8]
push    4
mov     [esp+14h+var_8], eax
mov     [esp+14h+var_4], ecx
mov     eax, [esp+14h+arg_0]
push    eax
call    sub_48bf70
movsx   eax, ax
add     esp, 0ch
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_48b640
add     esp, 4
test    eax, eax
jz      short locret_48b059
call    sub_48d690
push    1
call    sub_48a540
add     esp, 4
test    ax, ax
jnz     short locret_48b059
call    sub_48b460
call    sub_48a700
push    0
call    sub_48a760
add     esp, 4
retn
mov     eax, [esp+arg_0]
push    0
push    0dh
push    eax
call    sub_48bf70
add     esp, 0ch
retn
cmp     ds:dword_4a9e97, 0
mov     ax, 1
jnz     short locret_48b09e
push    0
push    0fh
push    offset dword_4a9c30
call    sub_48bf70
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
push    0
push    6
push    eax
call    sub_48bf70
add     esp, 0ch
retn
mov     eax, [esp+arg_0]
push    0
push    7
push    eax
call    sub_48bf70
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    0eh
push    ecx
call    sub_48bf70
add     esp, 0ch
retn
mov     ax, [esp+arg_4]
mov     ecx, [esp+arg_0]
sub     esp, 0ch
mov     edx, ds:dword_4a9e7f
mov     [esp+0ch+var_8], ax
push    edx
mov     [esp+10h+var_c], ecx
call    sub_4636e0
add     esp, 4
test    eax, eax
jz      short loc_48b158
mov     eax, ds:dword_4a9e7f
push    eax
call    sub_462480
add     esp, 4
cmp     ax, 0bh
jnz     short loc_48b158
push    2000410h
mov     eax, ds:dword_4a9e7f
push    eax
call    sub_462670
movzx   eax, ax
mov     [esp+14h+var_6], eax
add     esp, 8
jmp     short loc_48b160
mov     [esp+0ch+var_6], 0
lea     eax, [esp+0ch+var_c]
push    eax
push    12h
push    offset dword_4a9c30
call    sub_48bf70
add     esp, 18h
retn
sub     esp, 10ch
mov     al, windowname
mov     ecx, 3fh
push    esi
mov     [esp+110h+var_100], al
push    edi
lea     edi, [esp+114h+var_ff]
xor     eax, eax
rep stosd
stosw
stosb
mov     ecx, [esp+114h+arg_8]
mov     edx, [esp+114h+arg_c]
lea     eax, [esp+114h+var_100]
mov     [esp+114h+var_10c], ecx
lea     ecx, [esp+114h+var_10c]
mov     [esp+114h+var_108], edx
mov     [esp+114h+var_104], eax
push    ecx
push    14h
push    offset dword_4a9c30
call    sub_48bf70
mov     si, ax
add     esp, 0ch
test    si, si
jnz     short loc_48b1f9
mov     ecx, [esp+114h+var_104]
mov     edx, [esp+114h+arg_0]
movsx   eax, [esp+114h+arg_4]
push    eax
push    ecx
push    edx
call    sub_47f9f0
add     esp, 0ch
mov     ax, si
pop     edi
pop     esi
add     esp, 10ch
retn
sub     esp, 2ch
push    ebx
push    esi
push    offset dword_4a9c30
call    sub_48a2c0
add     esp, 4
test    eax, eax
jnz     short loc_48b22e
xor     eax, eax
pop     esi
pop     ebx
add     esp, 2ch
retn
mov     eax, ds:frequency
mov     ecx, ds:hinstance
xor     edx, edx
mov     [esp+34h+var_8], eax
mov     [esp+34h+var_4], ecx
mov     [esp+34h+var_10.x], edx
mov     ecx, [esp+34h+arg_0]
mov     [esp+34h+point.x], edx
mov     eax, ecx
mov     esi, dword_4ae1e0
shr     eax, 10h
mov     [esp+34h+var_10.y], edx
movsx   eax, ax
shl     eax, 6
mov     [esp+34h+point.y], edx
mov     ebx, [eax+esi+4]
mov     eax, [ebx]
xor     ebx, ebx
mov     bl, ch
mov     eax, [eax+ebx*4]
cmp     eax, edx
jz      short loc_48b286
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_48b28f
push    ecx
call    sub_461250
add     esp, 4
lea     ecx, [esp+34h+var_24]
push    0ah
push    ecx
push    20h
push    eax
call    sub_45c8a0
add     esp, 10h
xor     eax, eax
mov     ax, ds:word_4a8518
xor     ecx, ecx
shl     eax, 10h
mov     cx, word ptr [esp+34h+var_22]
or      eax, ecx
test    ax, ax
mov     [esp+34h+var_22], eax
jg      short loc_48b2c0
xor     eax, eax
test    eax, eax
jz      short loc_48b324
mov     cx, [esp+34h+var_1e]
mov     eax, [esp+34h+var_22]
mov     word ptr [esp+34h+var_28], cx
lea     edx, [esp+34h+point]
mov     ecx, [esp+34h+var_28]
push    edx
push    ecx
push    eax
call    sub_43b210
add     esp, 0ch
test    eax, eax
jz      short loc_48b324
lea     eax, [esp+34h+point]
push    eax
call    sub_474df0
lea     eax, [esp+38h+var_10]
add     esp, 4
push    eax
call    sub_474df0
lea     eax, [esp+38h+point]
add     esp, 4
mov     ecx, ds:frequency
mov     esi, ds:clienttoscreen
push    eax
push    ecx
call    esi
lea     ecx, [esp+34h+var_10]
mov     eax, ds:frequency
push    ecx
push    eax
call    esi
lea     eax, [esp+34h+point]
push    eax
push    offset dword_4a9c30
call    sub_48b620
add     esp, 8
movsx   eax, ax
pop     esi
pop     ebx
add     esp, 2ch
retn
push    esi
xor     si, si
cmp     dword_4aeab4, 0
jnz     short loc_48b37a
mov     eax, [esp+4+arg_4]
mov     ecx, [esp+4+arg_0]
push    eax
push    1ch
push    ecx
call    sub_48bfb0
mov     si, ax
add     esp, 0ch
test    si, si
jz      short loc_48b37a
push    offset dword_4a9e50
push    5
push    13h
call    sub_45c150
add     esp, 0ch
mov     ax, si
pop     esi
retn
movsx   eax, word ptr [esp+8]
cmp     eax, 0dh
jz      short loc_48b39a
cmp     eax, 0eh
jz      short loc_48b3ae
cmp     eax, 10h
jz      short loc_48b3be
xor     ax, ax
retn    0ch
mov     eax, [esp+0ch]
test    eax, eax
jz      short _ctl3dsetstyle@12_2
mov     dword ptr [eax], 1
xor     ax, ax
retn    0ch
mov     eax, [esp+0ch]
mov     dword ptr [eax], 0
xor     ax, ax
retn    0ch
mov     eax, [esp+0ch]
mov     dword ptr [eax], 0ffffh
movsx   ecx, word ptr [esp+8]
xor     ax, ax
dec     ecx
cmp     ecx, 0fh
ja      short _ctl3dsetstyle@12_3
xor     edx, edx
mov     dl, ds:byte_48b444[ecx]
jmp     ds:jpt_48b3e6[edx*4]
xor     ax, ax
retn    0ch
mov     eax, [esp+4]
mov     word ptr [eax+4], 1
mov     ax, 0fffdh
retn    0ch
mov     ecx, [esp+0ch]
test    ecx, ecx
jz      short locret_48b42c
mov     dword ptr [ecx], 1
retn    0ch
mov     ecx, [esp+0ch]
mov     dword ptr [ecx], 0
retn    0ch
mov     ecx, [esp+0ch]
mov     dword ptr [ecx], 0ffffh
retn    0ch
sub     esp, 18h
xor     eax, eax
mov     ecx, 6
push    esi
push    edi
xor     esi, esi
lea     edi, [esp+20h+var_18]
push    offset dword_4a9c30
rep stosd
call    sub_48a2c0
add     esp, 4
test    eax, eax
jz      short loc_48b4ad
mov     eax, ds:frequency
mov     ecx, ds:hinstance
lea     edx, [esp+20h+var_18]
mov     [esp+20h+var_8], eax
mov     [esp+20h+var_4], ecx
push    edx
push    offset dword_4a9c30
call    sub_48b620
movsx   esi, ax
add     esp, 8
mov     eax, esi
pop     edi
pop     esi
add     esp, 18h
retn
sub     esp, 8
cmp     ds:frequency, 0
push    esi
jz      short loc_48b506
mov     esi, [esp+0ch+color]
push    esi
call    sub_40ae50
push    eax
call    ds:getnearestpaletteindex
mov     [esp+0ch+var_8], ax
mov     [esp+0ch+var_6], esi
lea     eax, [esp+0ch+var_8]
push    eax
push    offset dword_4a9c30
call    sub_48b340
add     esp, 8
cmp     ax, 1
pop     esi
sbb     eax, eax
add     esp, 8
neg     eax
retn
xor     eax, eax
pop     esi
add     esp, 8
retn
push    esi
mov     esi, [esp+4+dwinitparam]
push    esi
call    sub_48afb0
add     esp, 4
push    esi
call    sub_48af90
add     esp, 4
mov     eax, ds:hwndparent
push    esi
push    offset sub_48c0f0
push    eax
push    0ddh
call    sub_411f60
add     esp, 10h
test    ax, ax
jnz     short loc_48b54e
push    esi
call    sub_48b670
add     esp, 4
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+24fh]
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jnz     short loc_48b56c
xor     eax, eax
pop     esi
retn
push    409h
mov     eax, [esi+24fh]
push    eax
call    sub_48aa20
add     esp, 8
test    eax, eax
jge     short loc_48b588
xor     eax, eax
pop     esi
retn
push    409h
mov     eax, [esi+24fh]
push    eax
call    sub_48aa20
add     esp, 8
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
mov     eax, [esi+24fh]
push    eax
call    sub_4636e0
add     esp, 4
test    eax, eax
jnz     short loc_48b5cc
mov     [esp+8+var_4], 0ffffh
mov     eax, [esp+8+var_4]
pop     esi
add     esp, 4
retn
lea     eax, [esp+8+var_4]
push    eax
push    10h
push    esi
call    sub_48bf70
add     esp, 0ch
mov     eax, [esi+24fh]
push    40ah
push    eax
call    sub_48aa20
add     esp, 8
cmp     eax, [esp+8+var_4]
jg      short loc_48b60e
push    40ah
mov     eax, [esi+24fh]
push    eax
call    sub_48aa20
mov     [esp+10h+var_4], eax
add     esp, 8
mov     eax, [esp+8+var_4]
pop     esi
add     esp, 4
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    1dh
push    ecx
call    sub_48bfb0
add     esp, 0ch
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_48bf10
add     esp, 4
test    eax, eax
jz      short loc_48b666
push    esi
call    sub_48bf10
add     esp, 4
test    eax, eax
jz      short loc_48b666
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
push    edi
xor     di, di
mov     esi, [esp+8+lpstring1]
push    esi
call    sub_48b640
add     esp, 4
test    eax, eax
jnz     loc_48b723
push    esi
call    sub_48b730
add     esp, 4
mov     dword ptr [esi+267h], 0
push    esi
call    sub_48bb00
mov     di, ax
add     esp, 4
test    di, di
jnz     short loc_48b723
push    esi
call    sub_48bd50
add     esp, 4
test    ax, ax
jle     short loc_48b6ec
push    esi
call    sub_48be00
add     esp, 4
test    ax, ax
jle     short loc_48b6ec
push    esi
call    sub_48af20
mov     di, ax
add     esp, 4
test    di, di
jnz     short loc_48b6ec
push    esi
call    sub_48af40
mov     di, ax
add     esp, 4
test    di, di
jz      short loc_48b723
push    esi
call    sub_48af90
add     esp, 4
push    esi
call    sub_48afb0
add     esp, 4
push    esi
call    sub_48bcf0
add     esp, 4
push    offset loc_48b3d0
push    esi
call    sub_48bf30
add     esp, 8
push    offset loc_48b3d0
push    esi
call    sub_48bf50
add     esp, 8
mov     ax, di
pop     edi
pop     esi
retn
sub     esp, 0c0h
mov     al, windowname
mov     ecx, 0fh
push    esi
mov     [esp+0c4h+returnedstring], al
push    edi
lea     edi, [esp+0c8h+var_7f]
xor     eax, eax
rep stosd
stosw
stosb
mov     esi, [esp+0c8h+lpstring1]
mov     ecx, 0a1h
mov     edi, esi
push    3
rep stosd
lea     ecx, [esp+0cch+buffer]
push    5f0h
stosb
push    20h
push    ecx
call    sub_47fe70
lea     eax, [esp+0d8h+keyname]
add     esp, 10h
push    4
push    5f0h
push    20h
push    eax
call    sub_47fe70
lea     eax, [esp+0d8h+default]
add     esp, 10h
push    0fh
push    5f0h
push    40h
push    eax
call    sub_47fe70
lea     eax, [esp+0d8h+default]
lea     ecx, [esp+0d8h+keyname]
lea     edx, [esp+0d8h+buffer]
add     esp, 10h
push    eax
push    ecx
push    edx
lea     eax, [esi+236h]
push    5
push    eax
call    sub_4564c0
lea     ecx, [esp+0dch+default]
add     esp, 14h
push    0dh
push    5f0h
push    40h
push    ecx
call    sub_47fe70
add     esp, 10h
push    5
push    5f0h
push    20h
lea     ecx, [esp+0d4h+keyname]
push    ecx
call    sub_47fe70
lea     ecx, [esp+0d8h+default]
lea     edx, [esp+0d8h+keyname]
lea     eax, [esp+0d8h+buffer]
add     esp, 10h
push    ecx
push    edx
push    eax
lea     ecx, [esi+20ah]
push    16h
push    ecx
call    sub_4564c0
lea     ecx, [esp+0dch+keyname]
add     esp, 14h
push    6
push    5f0h
push    20h
push    ecx
call    sub_47fe70
lea     ecx, [esp+0d8h+default]
lea     edx, [esp+0d8h+keyname]
lea     eax, [esp+0d8h+buffer]
add     esp, 10h
push    ecx
push    edx
push    eax
lea     ecx, [esi+220h]
push    16h
push    ecx
call    sub_4564c0
add     esp, 14h
call    sub_44f2d0
mov     edi, eax
test    edi, edi
jz      loc_48b926
push    edi
call    sub_4566d0
lea     eax, [esp+0cch+keyname]
add     esp, 4
push    7
push    5f0h
push    20h
push    eax
call    sub_47fe70
lea     eax, [esp+0d8h+keyname]
lea     ecx, [esp+0d8h+buffer]
lea     edx, [esp+0d8h+returnedstring]
add     esp, 10h
push    offset windowname
push    eax
push    ecx
push    40h
push    edx
call    sub_4564c0
add     esp, 14h
test    eax, eax
jz      short loc_48b8c2
lea     eax, [esp+0c8h+returnedstring]
push    eax
push    edi
call    sub_44f5b0
add     esp, 8
push    105h
push    esi
push    edi
call    sub_44f640
add     esp, 0ch
lea     eax, [esp+0c8h+keyname]
push    8
push    5f0h
push    20h
push    eax
call    sub_47fe70
lea     eax, [esp+0d8h+keyname]
lea     ecx, [esp+0d8h+buffer]
lea     edx, [esp+0d8h+returnedstring]
add     esp, 10h
push    offset windowname
push    eax
push    ecx
push    40h
push    edx
call    sub_4564c0
add     esp, 14h
test    eax, eax
jz      short loc_48b91d
lea     eax, [esp+0c8h+returnedstring]
add     esi, 105h
push    eax
push    edi
call    sub_44f5b0
add     esp, 8
push    105h
push    esi
push    edi
call    sub_44f640
add     esp, 0ch
push    edi
call    sub_44f4a0
add     esp, 4
pop     edi
pop     esi
add     esp, 0c0h
retn
sub     esp, 18ch
lea     eax, [esp+18ch+buffer]
push    esi
push    3
push    5f0h
push    40h
push    eax
call    sub_47fe70
lea     eax, [esp+1a0h+keyname]
add     esp, 10h
push    4
push    5f0h
push    40h
push    eax
call    sub_47fe70
mov     esi, [esp+1a0h+lpstring]
lea     ecx, [esp+1a0h+keyname]
lea     edx, [esp+1a0h+buffer]
add     esp, 10h
lea     eax, [esi+236h]
push    eax
push    ecx
push    edx
call    sub_4565a0
lea     ecx, [esp+19ch+keyname]
add     esp, 0ch
push    5
push    5f0h
push    40h
push    ecx
call    sub_47fe70
lea     edx, [esp+1a0h+keyname]
lea     eax, [esp+1a0h+buffer]
add     esp, 10h
lea     ecx, [esi+20ah]
push    ecx
push    edx
push    eax
call    sub_4565a0
lea     ecx, [esp+19ch+keyname]
add     esp, 0ch
push    7
push    5f0h
push    40h
push    ecx
call    sub_47fe70
lea     ecx, [esp+1a0h+var_18c]
add     esp, 10h
push    ecx
push    esi
call    sub_44f360
add     esp, 8
cmp     [esp+190h+var_18c], 0
jz      short loc_48ba1f
mov     eax, [esp+190h+var_18c]
push    eax
call    sub_44acb0
add     esp, 4
test    eax, eax
jz      short loc_48ba0a
lea     eax, [esp+190h+string]
push    105h
mov     ecx, [esp+194h+var_18c]
push    eax
push    ecx
call    sub_44f5e0
add     esp, 0ch
jmp     short loc_48ba12
mov     [esp+190h+string], 0
mov     eax, [esp+190h+var_18c]
push    eax
call    sub_44f4a0
add     esp, 4
lea     eax, [esp+190h+string]
lea     ecx, [esp+190h+keyname]
lea     edx, [esp+190h+buffer]
push    eax
push    ecx
push    edx
call    sub_4565a0
lea     ecx, [esp+19ch+keyname]
add     esp, 0ch
push    6
push    5f0h
push    40h
push    ecx
call    sub_47fe70
lea     edx, [esp+1a0h+keyname]
lea     eax, [esp+1a0h+buffer]
add     esp, 10h
lea     ecx, [esi+220h]
push    ecx
push    edx
push    eax
call    sub_4565a0
lea     ecx, [esp+19ch+keyname]
add     esp, 0ch
push    8
push    5f0h
push    40h
add     esi, 105h
push    ecx
call    sub_47fe70
lea     ecx, [esp+1a0h+var_18c]
add     esp, 10h
push    ecx
push    esi
call    sub_44f360
add     esp, 8
cmp     [esp+190h+var_18c], 0
jz      short loc_48badb
mov     eax, [esp+190h+var_18c]
push    eax
call    sub_44acb0
add     esp, 4
test    eax, eax
jz      short loc_48bac6
lea     eax, [esp+190h+string]
push    105h
mov     ecx, [esp+194h+var_18c]
push    eax
push    ecx
call    sub_44f5e0
add     esp, 0ch
jmp     short loc_48bace
mov     [esp+190h+string], 0
mov     eax, [esp+190h+var_18c]
push    eax
call    sub_44f4a0
add     esp, 4
lea     eax, [esp+190h+string]
lea     ecx, [esp+190h+keyname]
lea     edx, [esp+190h+buffer]
push    eax
push    ecx
push    edx
call    sub_4565a0
add     esp, 0ch
pop     esi
add     esp, 18ch
retn
sub     esp, 14h
push    ebx
push    esi
lea     eax, [esp+1ch+string2]
push    edi
push    ebp
push    0dh
push    5f0h
push    0fh
push    eax
call    sub_47fe70
mov     esi, [esp+34h+lpstring]
lea     eax, [esp+34h+string2]
add     esp, 10h
mov     ebx, ds:lstrcmpia
lea     edi, [esi+20ah]
push    eax
push    edi
call    ebx
test    eax, eax
jnz     short loc_48bb4f
xor     di, di
push    offset loc_48b380
push    esi
call    sub_48bf30
add     esp, 8
jmp     loc_48bc03
cmp     byte ptr [edi], 0
jz      loc_48bbff
cmp     byte ptr [esi+236h], 0
jz      loc_48bbff
cmp     byte ptr [esi], 0
jz      loc_48bbff
lea     eax, [esp+24h+var_14]
push    eax
push    esi
call    sub_44f360
add     esp, 8
cmp     [esp+24h+var_14], 0
jz      short loc_48bbe5
mov     eax, [esp+24h+var_14]
push    eax
call    sub_412df0
add     esp, 4
mov     [esi+25bh], eax
test    eax, eax
jz      short loc_48bbd2
push    offset avdoentry
push    eax
call    ds:getprocaddress
push    eax
push    esi
call    sub_48bf30
add     esp, 8
test    eax, eax
jnz     short loc_48bbcd
mov     eax, [esi+25bh]
push    eax
call    ds:freelibrary
mov     dword ptr [esi+25bh], 0
jmp     short loc_48bbd2
xor     di, di
jmp     short loc_48bbd6
mov     di, 1
mov     eax, [esp+24h+var_14]
push    eax
call    sub_44f4a0
add     esp, 4
jmp     short loc_48bbe9
mov     di, 1
cmp     di, 1
jnz     short loc_48bc03
push    offset loc_48b3d0
push    esi
call    sub_48bf30
add     esp, 8
jmp     short loc_48bc03
mov     di, 1
lea     ebp, [esi+220h]
lea     eax, [esp+24h+string2]
push    eax
push    ebp
call    ebx
test    eax, eax
jnz     short loc_48bc2b
xor     bx, bx
push    offset loc_48b380
push    esi
call    sub_48bf50
add     esp, 8
jmp     loc_48bcd9
cmp     byte ptr [ebp+0], 0
jz      loc_48bcd5
lea     eax, [esi+105h]
cmp     byte ptr [eax], 0
jz      loc_48bcd5
lea     ecx, [esp+24h+var_14]
push    ecx
push    eax
call    sub_44f360
add     esp, 8
cmp     [esp+24h+var_14], 0
jz      short loc_48bcbb
mov     eax, [esp+24h+var_14]
push    eax
call    sub_412df0
add     esp, 4
mov     [esi+25fh], eax
test    eax, eax
jz      short loc_48bca8
push    offset avdoentry
push    eax
call    ds:getprocaddress
push    eax
push    esi
call    sub_48bf50
add     esp, 8
test    eax, eax
jnz     short loc_48bca3
mov     eax, [esi+25fh]
push    eax
call    ds:freelibrary
mov     dword ptr [esi+25fh], 0
jmp     short loc_48bca8
xor     bx, bx
jmp     short loc_48bcac
mov     bx, 2
mov     eax, [esp+24h+var_14]
push    eax
call    sub_44f4a0
add     esp, 4
jmp     short loc_48bcbf
mov     bx, 2
cmp     bx, 2
jnz     short loc_48bcd9
push    offset loc_48b3d0
push    esi
call    sub_48bf50
add     esp, 8
jmp     short loc_48bcd9
mov     bx, 2
cmp     di, 1
jz      short loc_48bce1
mov     edi, ebx
mov     ax, di
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     eax, [edi+25bh]
test    eax, eax
jz      short loc_48bd15
push    eax
mov     esi, ds:freelibrary
call    esi
mov     dword ptr [edi+25bh], 0
jmp     short loc_48bd1b
mov     esi, ds:freelibrary
push    0
push    edi
call    sub_48bf30
add     esp, 8
mov     eax, [edi+25fh]
test    eax, eax
jz      short loc_48bd3d
push    eax
call    esi
mov     dword ptr [edi+25fh], 0
push    0
push    edi
call    sub_48bf50
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 40h
push    ebx
push    esi
mov     ebx, [esp+48h+arg_0]
push    edi
push    ebp
push    ebx
call    sub_48beb0
mov     di, ax
add     esp, 4
push    ebx
call    sub_48bf10
add     esp, 4
cmp     eax, offset loc_48b380
jnz     short loc_48bd83
mov     ax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
lea     eax, [esp+50h+var_24]
push    eax
push    11h
push    ebx
call    sub_48bf70
add     esp, 0ch
cmp     [esp+50h+var_24], 2
jz      short loc_48bda6
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     [esp+50h+var_3e], 1
test    di, di
jz      short loc_48bdf3
lea     ebp, [esp+50h+var_40]
lea     esi, [ebx+20ah]
mov     [esp+50h+var_40], di
push    ebp
push    0
push    ebx
call    sub_48bf70
lea     eax, [esp+5ch+string1]
add     esp, 0ch
push    esi
push    eax
call    ds:lstrcmpia
test    eax, eax
jz      short loc_48bdec
dec     di
jnz     short loc_48bdbc
mov     ax, di
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     [ebx+23fh], di
mov     ax, di
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
sub     esp, 40h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+50h+arg_0]
push    edi
call    sub_48bee0
mov     bx, ax
add     esp, 4
push    edi
call    sub_48a2c0
add     esp, 4
cmp     eax, offset loc_48b380
jnz     short loc_48be33
mov     ax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
lea     eax, [esp+50h+var_24]
push    eax
push    11h
push    edi
call    sub_48bfb0
add     esp, 0ch
cmp     [esp+50h+var_24], 2
jz      short loc_48be56
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     [esp+50h+var_3e], 2
test    bx, bx
jz      short loc_48bea3
lea     ebp, [esp+50h+var_40]
lea     esi, [edi+220h]
mov     [esp+50h+var_40], bx
push    ebp
push    0
push    edi
call    sub_48bfb0
lea     eax, [esp+5ch+string1]
add     esp, 0ch
push    esi
push    eax
call    ds:lstrcmpia
test    eax, eax
jz      short loc_48be9c
dec     bx
jnz     short loc_48be6c
mov     ax, bx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     [edi+249h], bx
mov     ax, bx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 40h
retn
mov     ecx, [esp+arg_0]
sub     esp, 24h
lea     eax, [esp+24h+var_24]
push    esi
xor     si, si
push    eax
push    11h
push    ecx
call    sub_48bf70
add     esp, 0ch
test    ax, ax
jnz     short loc_48bed5
mov     si, [esp+28h+var_20]
mov     ax, si
pop     esi
add     esp, 24h
retn
mov     ecx, [esp+arg_0]
sub     esp, 24h
lea     eax, [esp+24h+var_24]
push    esi
xor     si, si
push    eax
push    11h
push    ecx
call    sub_48bfb0
add     esp, 0ch
test    ax, ax
jnz     short loc_48bf05
mov     si, [esp+28h+var_1e]
mov     ax, si
pop     esi
add     esp, 24h
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
cmp     ecx, eax
jz      short locret_48bf20
mov     eax, [ecx+253h]
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
cmp     ecx, eax
jz      short locret_48bf44
mov     eax, [esp+arg_4]
mov     [ecx+253h], eax
retn
xor     eax, eax
mov     ecx, [esp+arg_0]
cmp     ecx, eax
jz      short locret_48bf64
mov     eax, [esp+arg_4]
mov     [ecx+257h], eax
retn
push    esi
push    edi
mov     si, 1
mov     edi, [esp+8+arg_0]
push    edi
call    sub_48bf10
add     esp, 4
test    eax, eax
jz      short loc_48bf9d
mov     ecx, [esp+8+arg_8]
mov     edx, [esp+8+arg_4]
push    ecx
add     edi, 23bh
push    edx
push    edi
call    eax
mov     si, ax
mov     ax, si
pop     edi
pop     esi
retn
push    esi
push    edi
mov     si, 2
mov     edi, [esp+8+arg_0]
push    edi
call    sub_48a2c0
add     esp, 4
test    eax, eax
jz      short loc_48bfdd
mov     ecx, [esp+8+arg_8]
mov     edx, [esp+8+arg_4]
push    ecx
add     edi, 245h
push    edx
push    edi
call    eax
mov     si, ax
mov     ax, si
pop     edi
pop     esi
retn
sub     esp, 40h
xor     eax, eax
push    esi
push    edi
mov     esi, [esp+48h+arg_0]
lea     edi, [esi+220h]
cmp     [edi], al
jnz     short loc_48c00d
cmp     [esi+20ah], al
jz      short loc_48c066
lea     eax, [esp+48h+string2]
push    0dh
push    5f0h
push    40h
push    eax
call    sub_47fe70
add     esp, 10h
cmp     byte ptr [edi], 0
jz      short loc_48c03c
lea     eax, [esp+48h+string2]
push    eax
push    edi
mov     edi, ds:lstrcmpia
call    edi
test    eax, eax
jnz     short loc_48c059
jmp     short loc_48c042
mov     edi, ds:lstrcmpia
add     esi, 20ah
cmp     byte ptr [esi], 0
jz      short loc_48c064
lea     eax, [esp+48h+string2]
push    eax
push    esi
call    edi
test    eax, eax
jz      short loc_48c064
mov     eax, 1
pop     edi
pop     esi
add     esp, 40h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 40h
retn
xor     ax, ax
mov     cx, [esp+arg_0]
cmp     cx, 1
jl      short locret_48c0ed
cmp     cx, 3
jg      short locret_48c0ed
cmp     cx, 1
jz      short loc_48c090
cmp     cx, 3
jnz     short loc_48c0b0
mov     ax, [esp+arg_4]
cmp     ax, 1
jnz     short loc_48c0a4
or      ds:dword_4a9e93, 1
jmp     short loc_48c0b5
and     ds:dword_4a9e93, 0fffeh
jmp     short loc_48c0b5
mov     ax, [esp+arg_4]
cmp     cx, 2
jz      short loc_48c0c1
cmp     cx, 3
jnz     short loc_48c0da
cmp     ax, 1
jnz     short loc_48c0d0
or      ds:dword_4a9e93, 2
jmp     short loc_48c0da
and     ds:dword_4a9e93, 0fffdh
mov     eax, ds:dword_4a9e93
push    eax
push    0ch
push    offset byte_4a9e6b
call    ds:dword_4a9e83
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_8]
push    edi
mov     edi, [esp+0ch+arg_4]
push    ebp
mov     ebp, [esp+10h+arg_c]
mov     esi, [esp+10h+hdlg]
push    ebp
push    ebx
push    edi
push    esi
call    sub_411fa0
cmp     edi, 110h
jz      short loc_48c126
cmp     edi, 111h
jz      short loc_48c151
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
push    ebp
mov     ds:lpstring, ebp
push    esi
call    sub_48cd20
add     esp, 8
test    ax, ax
jz      def_48c16b
push    0
push    esi
call    ds:enddialog
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
movzx   ecx, bx
mov     eax, ebx
dec     ecx
shr     eax, 10h
cmp     ecx, 66h
ja      def_48c16b
xor     edx, edx
mov     dl, ds:byte_48c284[ecx]
jmp     ds:jpt_48c16b[edx*4]
push    7f02h
mov     ebx, ds:loadcursora
push    0
call    ebx
push    eax
mov     edi, ds:setcursor
call    edi
mov     eax, ds:lpstring
push    eax
push    esi
call    sub_48c940
add     esp, 8
test    eax, eax
jz      short loc_48c1b4
mov     eax, ds:dword_4a9c28
push    eax
call    sub_45ba00
add     esp, 4
push    0
push    esi
call    ds:enddialog
push    7f00h
push    0
call    ebx
push    eax
call    edi
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
mov     eax, ds:dword_4a9c28
push    eax
call    sub_45ba00
add     esp, 4
push    2
push    esi
call    ds:enddialog
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
movzx   eax, ax
cmp     eax, 2
jnz     short def_48c16b
push    0
push    1
push    111h
push    esi
call    ds:postmessagea
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
mov     eax, ds:dword_4a9c28
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, ds:lpstring
push    eax
call    sub_48af90
add     esp, 4
mov     eax, ds:lpstring
push    eax
call    sub_48afb0
add     esp, 4
mov     eax, ds:lpstring
push    eax
call    sub_48bcf0
add     esp, 4
mov     eax, ds:lpstring
mov     ecx, offset loc_48b380
push    0
push    esi
mov     [eax+253h], ecx
mov     eax, ds:lpstring
mov     [eax+257h], ecx
call    ds:enddialog
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
sub     esp, 114h
push    ebx
push    esi
push    edi
mov     ebx, 1
xor     di, di
push    ebp
call    sub_44f2d0
mov     [esp+124h+var_10c], eax
test    eax, eax
jnz     short loc_48c318
mov     ax, 8
jmp     loc_48c477
call    sub_44f2d0
mov     esi, eax
mov     eax, [esp+124h+var_10c]
push    eax
test    esi, esi
jnz     short loc_48c339
call    sub_44f4a0
mov     ax, 8
add     esp, 4
jmp     loc_48c477
call    sub_4566d0
mov     eax, [esp+128h+arg_0]
lea     ecx, [esp+128h+var_110]
mov     edx, [esp+128h+var_10c]
add     esp, 4
push    eax
push    ecx
push    edx
call    sub_44b5c0
mov     [esp+130h+var_112], ax
add     esp, 0ch
test    ax, ax
jnz     loc_48c45e
test    di, di
jnz     loc_48c45e
test    ebx, ebx
jz      loc_48c45e
cmp     [esp+124h+var_110], 0
jnz     loc_48c42c
push    6
mov     ebp, 0
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_48c3a1
mov     ecx, eax
call    sub_412bc0
mov     ebp, eax
test    ebp, ebp
jz      loc_48c42c
push    esi
mov     ecx, dword_4adc68
call    sub_44c1e0
push    eax
mov     ecx, ebp
call    sub_412bf0
test    eax, eax
jnz     short loc_48c42c
mov     eax, [esp+124h+lpprocname]
push    0
push    0
mov     ecx, ebp
push    eax
call    sub_412cc0
mov     ebx, eax
test    ebx, ebx
jz      short loc_48c418
lea     eax, [esp+124h+var_108]
push    105h
push    eax
push    esi
call    sub_44f5e0
mov     eax, [esp+130h+arg_c]
lea     ecx, [esp+130h+var_108]
add     esp, 0ch
push    eax
push    ebx
push    ecx
call    [esp+130h+arg_4]
mov     di, ax
test    di, di
jnz     short loc_48c44a
test    ebx, ebx
jz      short loc_48c42c
mov     ecx, ebx
call    sub_412c90
push    ebx
jmp     short loc_48c424
test    ebp, ebp
jz      short loc_48c42c
mov     ecx, ebp
call    sub_412bd0
push    ebp
call    ??3@yaxpax@z
add     esp, 4
lea     eax, [esp+124h+var_110]
push    eax
push    esi
call    sub_44b690
add     esp, 8
mov     ebx, eax
cmp     [esp+124h+var_112], 0
jz      loc_48c369
jmp     short loc_48c45e
test    ebx, ebx
jz      short loc_48c45e
mov     ecx, ebx
call    sub_412c90
push    ebx
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [esp+124h+var_10c]
push    eax
call    sub_44f4a0
add     esp, 4
push    esi
call    sub_44f4a0
mov     ax, di
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 114h
retn    10h
sub     esp, 0e0h
xor     eax, eax
mov     [esp+0e0h+var_de], 0
push    ebx
mov     ecx, 8
push    esi
push    edi
lea     edi, [esp+0ech+var_a4]
push    ebp
rep stosd
stosw
lea     edi, [esp+0f0h+var_dc]
mov     ecx, 6
rep stosd
stosw
lea     edi, [esp+0f0h+var_80]
mov     ecx, 0bh
rep stosd
stosw
lea     edi, [esp+0f0h+var_c0]
mov     ecx, 6
rep stosd
stosw
lea     edi, [esp+0f0h+var_50]
mov     ecx, 13h
rep stosd
stosw
mov     esi, [esp+0f0h+arg_0]
push    0dh
lea     eax, [esp+0f4h+var_3a]
push    esi
push    eax
call    sub_47f9f0
lea     eax, [esp+0fch+var_15]
add     esp, 0ch
push    0dh
push    esi
push    eax
call    sub_47f9f0
mov     ecx, [esp+0fch+arg_4]
add     esp, 0ch
call    sub_412d30
mov     ebx, eax
lea     eax, [esp+0f0h+var_a4]
push    eax
push    11h
push    0
call    ebx
cmp     word ptr [esp+0f0h+var_a4], 2
jz      short loc_48c53d
xor     ax, ax
jmp     loc_48c6d9
mov     [esp+0f0h+var_da], 1
cmp     [esp+0f0h+var_a0], 0
jz      loc_48c60b
lea     edi, [esp+0f0h+var_80]
mov     esi, [esp+0f0h+arg_8]
mov     ebp, ds:senddlgitemmessagea
mov     ax, [esp+0f0h+var_a0]
mov     word ptr [esp+0f0h+var_dc], ax
lea     eax, [esp+0f0h+var_dc]
push    eax
push    0
push    0
call    ebx
mov     cx, word ptr [esp+0f0h+var_dc]
push    16h
mov     [esp+0f4h+var_2d], cx
lea     edx, [esp+0f4h+lparam]
lea     eax, [esp+0f4h+var_50]
push    edx
push    eax
call    sub_47f9f0
mov     cx, word ptr [esp+0fch+var_dc]
add     esp, 0ch
mov     [esp+0f0h+var_7e], cx
push    edi
push    3
push    0
call    ebx
mov     ecx, [esp+0f0h+var_60]
push    4eh
lea     edx, [esp+0f4h+var_50]
mov     [esp+0f4h+var_6], ecx
push    edx
push    offset dword_4a9ec8
call    sub_445f90
add     esp, 0ch
test    eax, eax
jz      short loc_48c602
cmp     [esp+0f0h+var_6], 0
jnz     short loc_48c5f1
lea     eax, [esp+0f0h+lparam]
mov     ecx, [esi]
push    eax
push    0
push    143h
push    64h
push    ecx
call    ebp
inc     word ptr [esi+4]
dec     [esp+0f0h+var_a0]
jnz     loc_48c561
jmp     short loc_48c618
mov     [esp+0f0h+var_de], 0ffffh
jmp     short loc_48c618
mov     esi, [esp+0f0h+arg_8]
mov     ebp, ds:senddlgitemmessagea
mov     [esp+0f0h+var_da], 2
cmp     [esp+0f0h+var_9e], 0
jz      loc_48c6d4
lea     edi, [esp+0f0h+var_c0]
mov     ax, [esp+0f0h+var_9e]
mov     word ptr [esp+0f0h+var_dc], ax
lea     eax, [esp+0f0h+var_dc]
push    eax
push    0
push    0
call    ebx
mov     cx, word ptr [esp+0f0h+var_dc]
push    16h
mov     [esp+0f4h+var_8], cx
lea     edx, [esp+0f4h+lparam]
lea     eax, [esp+0f4h+var_2b]
push    edx
push    eax
call    sub_47f9f0
mov     cx, word ptr [esp+0fch+var_dc]
add     esp, 0ch
mov     word ptr [esp+0f0h+var_c0], cx
push    edi
push    1bh
push    0
call    ebx
mov     ecx, [esp+0f0h+var_ae]
push    4eh
lea     edx, [esp+0f4h+var_50]
mov     [esp+0f4h+var_6], ecx
push    edx
push    offset dword_4a9ec8
call    sub_445f90
add     esp, 0ch
test    eax, eax
jz      short loc_48c6cd
cmp     [esp+0f0h+var_6], 0
jnz     short loc_48c6bc
lea     eax, [esp+0f0h+lparam]
mov     ecx, [esi]
push    eax
push    0
push    143h
push    68h
push    ecx
call    ebp
inc     word ptr [esi+6]
dec     [esp+0f0h+var_9e]
jnz     loc_48c62f
jmp     short loc_48c6d4
mov     [esp+0f0h+var_de], 0ffffh
mov     ax, [esp+0f0h+var_de]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0e0h
retn    0ch
push    esi
mov     esi, [esp+4+msg]
cmp     esi, 0a1h
mov     eax, esi
ja      short loc_48c72c
jz      loc_48c7b4
cmp     eax, 1
jz      short loc_48c761
cmp     eax, 2
jz      loc_48c798
mov     eax, [esp+4+hwnd]
mov     ecx, [esp+4+wparam]
mov     edx, [esp+4+arg_0]
push    eax
push    ecx
push    esi
push    edx
call    sub_48f870
pop     esi
retn    10h
cmp     eax, 0a8h
ja      short loc_48c746
jz      loc_48c7c9
cmp     eax, 0a5h
jz      loc_48c7c9
jmp     short def_48c75a
sub     eax, 111h
cmp     eax, 0f7h
ja      short def_48c75a
xor     ecx, ecx
mov     cl, ds:byte_48c848[eax]
jmp     ds:jpt_48c75a[ecx*4]
mov     eax, [esp+4+arg_0]
push    0
push    0deh
push    eax
call    sub_490700
add     esp, 0ch
call    sub_4443d0
mov     eax, [esp+4+arg_0]
push    eax
call    sub_48d100
add     esp, 4
mov     eax, ds:frequency
push    eax
call    ds:setfocus
jmp     def_48c75a
mov     ds:dword_4a9e97, 0
mov     eax, [esp+4+arg_0]
push    eax
call    sub_490760
add     esp, 4
jmp     def_48c75a
mov     eax, [esp+4+hwnd]
mov     ecx, [esp+4+wparam]
mov     edx, [esp+4+arg_0]
push    eax
push    ecx
push    esi
push    edx
call    sub_48f870
mov     eax, ds:frequency
push    eax
call    ds:setfocus
mov     eax, 1
pop     esi
retn    10h
mov     eax, [esp+4+hwnd]
test    eax, eax
jz      def_48c75a
push    0fffffff4h
push    eax
call    ds:getwindowlonga
test    eax, eax
jz      def_48c75a
mov     ecx, ds:dword_4a68c0
push    ecx
push    eax
call    sub_48d6c0
add     esp, 8
xor     eax, eax
pop     esi
retn    10h
mov     eax, [esp+4+wparam]
and     eax, 0fff0h
cmp     eax, 0f060h
jnz     def_48c75a
call    sub_48aaa0
jmp     def_48c75a
sub     esp, 2bch
xor     eax, eax
mov     ecx, 0a1h
push    ebx
push    esi
push    edi
lea     edi, [esp+2c8h+string1]
push    ebp
rep stosd
stosb
mov     [esp+2cch+var_15], 3
mov     esi, [esp+2cch+hdlg]
push    eax
push    eax
mov     edi, ds:senddlgitemmessagea
push    147h
push    64h
push    esi
call    edi
mov     bx, ax
push    0
push    0
push    147h
push    65h
push    esi
call    edi
mov     bp, ax
push    0
push    0
push    147h
push    68h
push    esi
call    edi
mov     [esp+2cch+var_2ba], ax
cmp     bx, 0ffffh
jz      loc_48cb74
cmp     bp, 0ffffh
jz      loc_48cb74
cmp     ax, 0ffffh
jz      loc_48cb74
movsx   ecx, bp
lea     eax, [esp+2cch+lparam]
push    eax
push    ecx
push    148h
push    65h
push    esi
call    edi
movsx   edx, bx
lea     ecx, [esp+2cch+var_2b8]
push    ecx
push    edx
push    148h
push    64h
push    esi
call    edi
movsx   edx, [esp+2cch+var_2ba]
lea     ecx, [esp+2cch+var_2a0]
push    ecx
push    edx
push    148h
push    68h
push    esi
call    edi
lea     ecx, [esp+2cch+string1]
lea     edx, [esp+2cch+var_2a0]
lea     eax, [esp+2cch+var_2b8]
push    ecx
push    edx
push    eax
call    sub_48cb90
add     esp, 0ch
test    eax, eax
jz      loc_48cb43
mov     ebx, [esp+2cch+lpstring]
push    ebx
call    sub_48af90
add     esp, 4
push    ebx
call    sub_48afb0
add     esp, 4
push    ebx
call    sub_48bcf0
lea     eax, [esp+2d0h+string1]
add     esp, 4
push    eax
call    sub_48bb00
add     esp, 4
test    ax, ax
jnz     loc_48cb07
lea     eax, [esp+2cch+string1]
push    eax
call    sub_48af20
add     esp, 4
test    ax, ax
jnz     short loc_48cac8
lea     eax, [esp+2cch+string1]
push    eax
call    sub_48b060
add     esp, 4
test    ax, ax
jnz     short loc_48cac8
lea     eax, [esp+2cch+string1]
push    eax
call    sub_48af40
add     esp, 4
test    ax, ax
jnz     short loc_48cab2
lea     esi, [esp+2cch+string1]
mov     edi, ebx
mov     ecx, 0a1h
push    ebx
rep movsd
movsb
call    sub_48b930
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2bch
retn
lea     eax, [esp+2cch+string1]
push    eax
call    sub_48af90
lea     eax, [esp+2d0h+var_68]
add     esp, 4
jmp     short loc_48cacf
lea     eax, [esp+2cch+var_7e]
push    eax
push    2
push    13h
call    sub_45c150
lea     eax, [esp+2d8h+string1]
add     esp, 0ch
push    eax
call    sub_48bcf0
add     esp, 4
mov     eax, offset loc_48b3d0
mov     [ebx+253h], eax
mov     [ebx+257h], eax
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2bch
retn
cmp     ax, 1
lea     eax, [esp+2cch+string1]
jz      short loc_48cb18
lea     eax, [esp+2cch+var_183]
push    eax
push    3
push    13h
call    sub_45c150
add     esp, 0ch
mov     eax, offset loc_48b3d0
mov     [ebx+253h], eax
mov     [ebx+257h], eax
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2bch
retn
push    4
push    13h
call    sub_45c150
mov     ebx, [esp+2d4h+lpstring]
add     esp, 8
mov     eax, offset loc_48b3d0
pop     ebp
pop     edi
mov     [ebx+253h], eax
pop     esi
mov     [ebx+257h], eax
xor     eax, eax
pop     ebx
add     esp, 2bch
retn
push    1
push    13h
call    sub_45c150
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 2bch
retn
push    ebx
mov     eax, ds:dword_4a9c28
push    esi
push    edi
push    ebp
push    eax
mov     ebp, ds:globallock
call    ebp
mov     esi, eax
test    esi, esi
jnz     short loc_48cbaf
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
movsx   ecx, word_4aead8
movsx   eax, word_4aead4
add     ecx, eax
inc     ecx
mov     edi, [esp+10h+lpstring2]
lea     edx, [ecx+ecx*4]
mov     ebx, ds:lstrcmpa
mov     eax, ecx
push    edi
lea     ecx, [edx+edx*4]
add     ecx, eax
lea     eax, [ecx+ecx*2]
add     esi, eax
push    esi
call    ebx
test    eax, eax
jz      short loc_48cbec
sub     esi, 4eh
push    edi
push    esi
call    ebx
test    eax, eax
jnz     short loc_48cbe1
call    sub_44f2d0
mov     edi, eax
test    edi, edi
jnz     short loc_48cbfe
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    edi
call    sub_4566d0
add     esp, 4
lea     eax, [esi+16h]
push    eax
push    edi
call    sub_44f5b0
mov     ecx, [esp+18h+lpstring1]
add     esp, 8
push    105h
push    ecx
push    edi
call    sub_44f640
mov     eax, [esp+1ch+lpstring1]
add     esp, 0ch
add     eax, 20ah
push    16h
push    esi
push    eax
call    sub_47f9f0
mov     dx, [esi+23h]
mov     ecx, [esp+1ch+lpstring1]
mov     [ecx+23fh], dx
add     esp, 0ch
mov     eax, ds:dword_4a9c28
push    eax
call    ds:globalunlock
mov     ecx, ds:dword_4a9c28
push    ecx
call    ebp
mov     esi, eax
test    esi, esi
jnz     short loc_48cc6d
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
movsx   ecx, word_4aead8
movsx   eax, word_4aead4
add     ecx, eax
inc     ecx
mov     ebp, [esp+10h+arg_4]
lea     edx, [ecx+ecx*4]
mov     eax, ecx
push    ebp
lea     ecx, [edx+edx*4]
add     ecx, eax
lea     eax, [ecx+ecx*2]
add     esi, eax
lea     eax, [esi+25h]
push    eax
call    ebx
test    eax, eax
jz      short loc_48ccaa
lea     eax, [esi-29h]
sub     esi, 4eh
push    ebp
push    eax
call    ebx
test    eax, eax
jnz     short loc_48cc9c
push    edi
call    sub_4566d0
add     esp, 4
lea     eax, [esi+3bh]
push    eax
push    edi
call    sub_44f5b0
mov     eax, [esp+18h+lpstring1]
add     esp, 8
add     eax, 105h
push    105h
push    eax
push    edi
call    sub_44f640
add     esp, 0ch
push    edi
call    sub_44f4a0
mov     eax, [esp+14h+lpstring1]
add     esp, 4
lea     ecx, [esi+25h]
add     eax, 220h
push    16h
push    ecx
push    eax
call    sub_47f9f0
mov     dx, [esi+48h]
mov     ecx, [esp+1ch+lpstring1]
mov     [ecx+249h], dx
add     esp, 0ch
mov     eax, ds:dword_4a9c28
push    eax
call    ds:globalunlock
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 0a4h
mov     ds:dword_4a9c28, 0
push    ebx
push    esi
push    edi
push    ebp
push    30ch
push    30ch
push    offset dword_4a9ec8
call    sub_445f40
add     esp, 0ch
cmp     eax, 1
sbb     ebx, ebx
neg     ebx
test    bx, bx
jnz     loc_48ce69
lea     eax, [esp+0b4h+string2]
push    0dh
push    5f0h
push    0fh
push    eax
call    sub_47fe70
lea     eax, [esp+0c4h+string2]
lea     ecx, [esp+0c4h+string1]
add     esp, 10h
mov     esi, ds:lstrcpya
push    eax
push    ecx
call    esi
lea     ecx, [esp+0b4h+string1]
push    4eh
push    ecx
push    offset dword_4a9ec8
call    sub_445f90
add     esp, 0ch
cmp     eax, 1
jnz     short loc_48cdba
lea     eax, [esp+0b4h+string1]
mov     edi, [esp+0b4h+hdlg]
push    eax
push    0
push    143h
push    64h
push    edi
call    ds:senddlgitemmessagea
jmp     short loc_48cdc1
mov     edi, [esp+0b4h+hdlg]
lea     eax, [esp+0b4h+string1]
push    offset windowname
push    eax
call    esi
lea     eax, [esp+0b4h+string2]
lea     ecx, [esp+0b4h+var_2b]
push    eax
push    ecx
call    esi
lea     ecx, [esp+0b4h+string1]
push    4eh
push    ecx
push    offset dword_4a9ec8
call    sub_445f90
add     esp, 0ch
cmp     eax, 1
jnz     short loc_48ce0d
lea     eax, [esp+0b4h+var_2b]
push    eax
push    0
push    143h
push    68h
push    edi
call    ds:senddlgitemmessagea
xor     eax, eax
lea     ecx, [esp+0b4h+var_9c]
mov     [esp+0b4h+var_98], ax
push    ecx
mov     [esp+0b8h+var_96], ax
push    offset avdoentry
mov     [esp+0bch+var_9c], edi
push    offset sub_48c490
push    offset avdr
call    sub_48c2f0
mov     bx, ax
lea     edx, [esp+0b4h+var_a0]
mov     cx, [esp+0b4h+var_96]
push    edx
mov     ax, [esp+0b8h+var_98]
push    offset dword_4a9ec8
mov     word_4aead4, cx
mov     word_4aead8, ax
call    sub_446030
add     esp, 8
mov     ds:dword_4a9c28, eax
jmp     short loc_48ce70
mov     edi, [esp+0b4h+hdlg]
test    bx, bx
jnz     loc_48d0a9
cmp     ds:dword_4a9c28, 0
jz      loc_48d0a9
cmp     [esp+0b4h+var_98], 0
jg      short loc_48cede
cmp     [esp+0b4h+var_96], 0
jg      short loc_48cede
push    3
push    11h
call    sub_45c150
mov     esi, [esp+0bch+arg_4]
add     esp, 8
push    esi
call    sub_48af90
add     esp, 4
push    esi
call    sub_48afb0
add     esp, 4
mov     bx, 2
push    esi
call    sub_48bcf0
add     esp, 4
mov     eax, offset loc_48b380
mov     [esi+253h], eax
mov     [esi+257h], eax
jmp     loc_48d0e8
xor     ebx, ebx
push    14h
lea     eax, [esp+0b8h+filename]
push    offset acom
mov     [esp+0bch+var_a4], ebx
push    eax
call    sub_47f9f0
mov     esi, [esp+0c0h+arg_4]
mov     [esp+0c0h+var_74], bl
mov     bx, 1
add     esp, 0ch
lea     eax, [ebx+30h]
push    0
lea     ecx, [esp+0b8h+filename]
push    40000080h
mov     [esp+0bch+var_75], al
push    3
push    0
push    0
push    0c0000000h
push    ecx
call    ds:createfilea
cmp     eax, 0ffffffffh
mov     ebp, eax
jnz     short loc_48cf4f
call    ds:__imp_getlasterror
cmp     eax, 0b7h
jnz     short loc_48cf4b
mov     al, [esp+0b4h+var_75]
cmp     [esi+239h], al
jz      short loc_48cf64
xor     eax, eax
jmp     short loc_48cf69
push    200h
push    40h
push    ebp
call    ds:setupcomm
push    ebp
call    ds:closehandle
mov     eax, 1
or      [esp+0b4h+var_a4], eax
test    eax, eax
jz      short loc_48cfb4
lea     eax, [esp+0b4h+buffer]
push    0
push    5b0h
push    0ah
push    eax
call    sub_47fe70
lea     ecx, [esp+0c4h+buffer]
lea     edx, [esp+0c4h+lparam]
add     esp, 10h
movsx   eax, bx
push    eax
push    ecx
push    14h
push    edx
call    sub_401800
lea     ecx, [esp+0c4h+lparam]
add     esp, 10h
push    ecx
push    0
push    143h
push    65h
push    edi
call    ds:senddlgitemmessagea
inc     bx
cmp     bx, 4
jle     loc_48cf07
cmp     [esp+0b4h+var_a4], 0
jnz     short loc_48d017
push    1
push    11h
call    sub_45c150
add     esp, 8
push    esi
call    sub_48af90
add     esp, 4
push    esi
call    sub_48afb0
add     esp, 4
push    esi
call    sub_48bcf0
add     esp, 4
mov     eax, offset loc_48b380
mov     bx, 45dh
mov     [esi+253h], eax
mov     [esi+257h], eax
mov     ecx, ds:dword_4a9c28
push    ecx
call    sub_45ba00
add     esp, 4
jmp     loc_48d0e8
lea     eax, [esi+236h]
push    eax
push    0
push    158h
push    65h
push    edi
call    ds:senddlgitemmessagea
cmp     eax, 0ffffffffh
jnz     short loc_48d035
xor     eax, eax
push    0
push    eax
push    14eh
push    65h
push    edi
call    ds:senddlgitemmessagea
lea     eax, [esi+20ah]
push    eax
push    0
push    158h
push    64h
push    edi
call    ds:senddlgitemmessagea
cmp     eax, 0ffffffffh
jnz     short loc_48d064
xor     eax, eax
push    0
add     esi, 220h
push    eax
push    14eh
push    64h
push    edi
call    ds:senddlgitemmessagea
push    esi
push    0
push    158h
push    68h
push    edi
call    ds:senddlgitemmessagea
cmp     eax, 0ffffffffh
jnz     short loc_48d093
xor     eax, eax
xor     bx, bx
push    0
push    eax
push    14eh
push    68h
push    edi
call    ds:senddlgitemmessagea
jmp     short loc_48d0e8
push    2
push    11h
call    sub_45c150
mov     esi, [esp+0bch+arg_4]
add     esp, 8
push    esi
call    sub_48af90
add     esp, 4
push    esi
call    sub_48afb0
add     esp, 4
push    esi
call    sub_48bcf0
add     esp, 4
mov     eax, offset loc_48b380
mov     [esi+253h], eax
mov     [esi+257h], eax
mov     ax, bx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn
sub     esp, 14h
mov     edx, ds:dword_4a9e7f
mov     cx, dx
mov     eax, edx
shr     eax, 10h
push    ebx
movsx   eax, ax
push    esi
push    edi
shl     eax, 6
mov     esi, dword_4ae1e0
mov     ebx, [eax+esi+4]
mov     eax, [ebx]
xor     ebx, ebx
mov     bl, ch
mov     eax, [eax+ebx*4]
test    eax, eax
jz      short loc_48d13e
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_48d147
push    edx
call    sub_461250
add     esp, 4
lea     ecx, [esp+20h+var_14]
push    4
push    ecx
push    8
push    eax
call    sub_45c8a0
add     esp, 10h
test    eax, eax
jz      short loc_48d195
lea     eax, [esp+20h+rect]
mov     esi, [esp+20h+hwnd]
movsx   edi, [esp+20h+var_14]
movsx   ebx, [esp+20h+var_12]
push    eax
push    esi
call    ds:getwindowrect
mov     eax, ebx
sub     eax, [esp+20h+rect.top]
add     [esp+20h+rect.bottom], eax
mov     [esp+20h+rect.top], ebx
mov     eax, edi
sub     eax, [esp+20h+rect.left]
add     [esp+20h+rect.right], eax
mov     [esp+20h+rect.left], edi
jmp     short loc_48d1b0
lea     eax, [esp+20h+rect]
mov     ecx, ds:frequency
mov     esi, [esp+20h+hwnd]
push    eax
push    1
push    ecx
push    esi
call    sub_48d200
add     esp, 10h
lea     eax, [esp+20h+rect]
push    eax
call    sub_48d2f0
mov     eax, [esp+24h+rect.top]
mov     ecx, [esp+24h+rect.left]
sub     [esp+24h+rect.bottom], eax
sub     [esp+24h+rect.right], ecx
mov     edx, [esp+24h+rect.bottom]
mov     eax, [esp+24h+rect.right]
mov     ecx, [esp+24h+rect.top]
add     esp, 4
push    0
push    edx
mov     edx, [esp+28h+rect.left]
push    eax
push    ecx
push    edx
push    esi
call    ds:movewindow
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
mov     ecx, [esp+hwnd]
sub     esp, 20h
lea     eax, [esp+20h+rect]
push    esi
push    eax
mov     esi, ds:getwindowrect
push    ecx
call    esi
lea     ecx, [esp+24h+var_20]
mov     eax, [esp+24h+arg_4]
push    ecx
push    eax
call    esi
mov     edx, [esp+24h+rect.right]
mov     esi, [esp+24h+rect.bottom]
sub     edx, [esp+24h+rect.left]
sub     esi, [esp+24h+rect.top]
mov     eax, [esp+24h+var_20.bottom]
mov     ecx, [esp+24h+arg_c]
add     edx, [esp+24h+var_20.left]
mov     [ecx+0ch], eax
mov     eax, [esp+24h+var_20.left]
mov     [ecx+8], edx
mov     [ecx], eax
mov     eax, [esp+24h+var_20.bottom]
sub     eax, esi
pop     esi
mov     [ecx+4], eax
add     esp, 20h
retn
sub     esp, 28h
mov     ecx, ds:hinstance
lea     eax, [esp+28h+wndclass]
push    esi
push    eax
push    offset avdowindclass
push    ecx
call    ds:getclassinfoa
test    eax, eax
jz      short loc_48d289
mov     eax, 1
pop     esi
add     esp, 28h
retn
xor     esi, esi
mov     eax, ds:hinstance
mov     [esp+2ch+wndclass.cbclsextra], esi
mov     [esp+2ch+wndclass.cbwndextra], esi
mov     [esp+2ch+wndclass.hinstance], eax
push    7f00h
mov     [esp+30h+wndclass.hicon], esi
push    esi
mov     [esp+34h+wndclass.style], 8
mov     [esp+34h+wndclass.lpfnwndproc], offset sub_48c6f0
call    ds:loadcursora
lea     ecx, [esp+2ch+wndclass]
mov     [esp+2ch+wndclass.hcursor], eax
mov     [esp+2ch+wndclass.lpszmenuname], esi
push    ecx
mov     [esp+30h+wndclass.hbrbackground], 6
mov     [esp+30h+wndclass.lpszclassname], offset avdowindclass
call    ds:registerclassa
movzx   eax, ax
pop     esi
add     esp, 28h
retn
push    ebx
push    esi
push    edi
mov     esi, ds:getsystemmetrics
push    0
call    esi
mov     ebx, eax
push    1
call    esi
mov     edi, [esp+0ch+lprc]
mov     ecx, [edi+0ch]
cmp     eax, ecx
jge     short loc_48d31e
sub     eax, ecx
mov     esi, ds:offsetrect
push    eax
push    0
push    edi
call    esi
jmp     short loc_48d324
mov     esi, ds:offsetrect
mov     eax, [edi+8]
cmp     ebx, eax
jge     short loc_48d333
push    0
sub     ebx, eax
push    ebx
push    edi
call    esi
mov     eax, [edi+4]
test    eax, eax
jge     short loc_48d342
neg     eax
push    eax
push    0
push    edi
call    esi
mov     eax, [edi]
test    eax, eax
jge     short loc_48d350
neg     eax
push    0
push    eax
push    edi
call    esi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 64h
cmp     ds:dword_4a9e97, 0
push    esi
push    edi
jnz     loc_48d67f
call    sub_48d260
test    eax, eax
jz      loc_48d67f
call    sub_40ea90
test    eax, eax
jz      loc_48d67f
call    sub_48f490
mov     esi, eax
call    sub_48f4d0
add     si, si
mov     edi, eax
add     si, 0f1h
call    sub_48f4b0
add     di, ax
push    0
add     di, 19h
mov     eax, [esp+70h+arg_0]
lea     ecx, [esp+70h+windowname]
push    1a3ch
push    64h
mov     ds:dword_4a9e7f, eax
push    ecx
call    sub_47fe70
add     esp, 10h
mov     ecx, ds:hinstance
push    0
mov     edx, ds:hwndparent
push    ecx
push    0
movsx   eax, di
movsx   ecx, si
push    edx
push    eax
lea     edx, [esp+80h+windowname]
push    ecx
push    64h
mov     esi, ds:createwindowexa
push    64h
push    80c80000h
push    edx
push    offset avdowindclass
push    188h
call    esi
push    7
mov     ds:dword_4a9e97, eax
call    sub_449290
add     esp, 4
mov     ecx, ds:hinstance
mov     ds:dword_4a9e9b, eax
push    0
push    ecx
mov     eax, ds:dword_4a9e97
push    0bh
push    eax
push    1ch
mov     edx, lpclassname
push    1ch
push    0ffffffffh
push    0ffffffffh
push    50000000h
push    offset windowname
push    edx
push    0
call    esi
push    0
mov     ecx, ds:hinstance
push    ecx
push    0ch
mov     edx, ds:dword_4a9e97
push    edx
push    1ch
push    1ch
mov     eax, lpclassname
push    0ffffffffh
push    1ah
push    50000000h
push    offset windowname
push    eax
push    0
call    esi
push    0
mov     ecx, ds:hinstance
push    ecx
mov     edx, ds:dword_4a9e97
push    0dh
push    edx
push    1ch
mov     eax, lpclassname
push    1ch
push    0ffffffffh
push    35h
push    50000000h
push    offset windowname
push    eax
push    0
call    esi
push    0
mov     ecx, ds:hinstance
push    ecx
mov     edx, ds:dword_4a9e97
push    0eh
push    edx
push    1ch
mov     eax, lpclassname
push    1ch
push    0ffffffffh
push    50h
push    50000000h
push    offset windowname
push    eax
push    0
call    esi
push    0
mov     ecx, ds:hinstance
push    ecx
mov     edx, ds:dword_4a9e97
push    0fh
push    edx
push    1ch
mov     eax, lpclassname
push    1ch
push    0ffffffffh
push    6bh
push    50000000h
push    offset windowname
push    eax
push    0
call    esi
push    0
mov     ecx, ds:hinstance
push    ecx
mov     edx, ds:dword_4a9e97
push    10h
push    edx
push    1ch
mov     eax, lpclassname
push    1ch
push    0ffffffffh
push    86h
push    50000000h
push    offset windowname
push    eax
push    0
call    esi
push    0
mov     ecx, ds:hinstance
push    ecx
mov     edx, ds:dword_4a9e97
push    11h
push    edx
push    1ch
mov     eax, lpclassname
push    1ch
push    0ffffffffh
push    0a1h
push    50000000h
push    offset windowname
push    eax
push    0
call    esi
push    0
mov     ecx, ds:hinstance
push    ecx
mov     edx, ds:dword_4a9e97
push    12h
push    edx
push    1ch
mov     eax, lpclassname
push    1ch
push    0ffffffffh
push    0bch
push    50000000h
push    offset windowname
push    eax
push    0
call    esi
push    0
mov     ecx, ds:hinstance
push    ecx
mov     edx, ds:dword_4a9e97
push    13h
push    edx
push    1ch
push    1ch
push    0ffffffffh
push    0d7h
push    50000000h
push    offset windowname
mov     eax, lpclassname
push    eax
push    0
call    esi
push    0eh
mov     ecx, ds:dword_4a9e97
push    0bh
push    ecx
call    sub_411c30
add     esp, 0ch
mov     ecx, ds:dword_4a9e97
push    10h
push    0ch
push    ecx
call    sub_411c30
add     esp, 0ch
mov     ecx, ds:dword_4a9e97
push    0fh
push    0dh
push    ecx
call    sub_411c30
add     esp, 0ch
mov     ecx, ds:dword_4a9e97
push    11h
push    0eh
push    ecx
call    sub_411c30
add     esp, 0ch
mov     ecx, ds:dword_4a9e97
push    12h
push    0fh
push    ecx
call    sub_411c30
add     esp, 0ch
mov     ecx, ds:dword_4a9e97
push    13h
push    10h
push    ecx
call    sub_411c30
add     esp, 0ch
mov     ecx, ds:dword_4a9e97
push    16h
push    11h
push    ecx
call    sub_411c30
add     esp, 0ch
mov     ecx, ds:dword_4a9e97
push    14h
push    12h
push    ecx
call    sub_411c30
add     esp, 0ch
mov     ecx, ds:dword_4a9e97
push    15h
push    13h
push    ecx
call    sub_411c30
add     esp, 0ch
mov     ecx, ds:dword_4a9e97
push    1
push    ecx
call    ds:showwindow
pop     edi
pop     esi
add     esp, 64h
retn
cmp     ds:dword_4a9e97, 0
push    esi
jz      short loc_48d6ba
mov     eax, ds:dword_4a9e97
push    eax
call    ds:destroywindow
mov     ds:dword_4a9e97, 0
mov     ds:dword_4a9e9b, 0
pop     esi
retn
push    ebx
push    esi
push    edi
mov     esi, 0
push    offset dword_4a9c30
call    sub_48b5a0
add     esp, 4
test    eax, eax
jle     short loc_48d6e8
push    offset dword_4a9c30
call    sub_48b5a0
add     esp, 4
mov     esi, eax
push    offset dword_4a9c30
call    sub_48b550
add     esp, 4
test    eax, eax
mov     eax, 0
jle     short loc_48d70b
push    offset dword_4a9c30
call    sub_48b550
add     esp, 4
cmp     eax, esi
mov     edi, eax
jg      short loc_48d713
mov     edi, esi
cmp     eax, esi
mov     ebx, eax
jl      short loc_48d71b
mov     ebx, esi
mov     eax, [esp+0ch+arg_0]
sub     eax, 3
cmp     eax, 10h
ja      def_48d733
xor     ecx, ecx
mov     cl, ds:byte_48d870[eax]
jmp     ds:jpt_48d733[ecx*4]
call    sub_48a700
pop     edi
pop     esi
pop     ebx
retn
push    5
call    sub_48a720
add     esp, 4
push    1
push    0
push    ebx
push    offset dword_4a9c30
call    sub_48afd0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
retn
push    3
call    sub_48a720
add     esp, 4
push    1
push    0
push    ebx
push    offset dword_4a9c30
call    sub_48afd0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
retn
push    1
call    sub_48a720
add     esp, 4
push    1
push    0
push    ebx
push    offset dword_4a9c30
call    sub_48afd0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
retn
call    sub_48a7d0
cmp     eax, ebx
jle     def_48d733
push    offset dword_4a9c30
call    sub_48b0c0
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
call    sub_48a700
pop     edi
pop     esi
pop     ebx
retn
call    sub_48a7d0
cmp     eax, edi
jge     short def_48d733
push    offset dword_4a9c30
call    sub_48b0a0
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
push    1
call    sub_48a720
add     esp, 4
push    0
push    0
push    edi
push    offset dword_4a9c30
call    sub_48afd0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
retn
push    3
call    sub_48a720
add     esp, 4
push    0
push    1
push    edi
push    offset dword_4a9c30
call    sub_48afd0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
retn
push    5
call    sub_48a720
add     esp, 4
push    0
push    0
push    edi
push    offset dword_4a9c30
call    sub_48afd0
add     esp, 10h
pop     edi
pop     esi
pop     ebx
retn
mov     ax, word_4aeb04
inc     ax
mov     word_4aeb04, ax
cmp     ax, 1
jnz     short locret_48d8bd
call    ds:gettickcount
mov     ds:word_4a9ee4, 64h
add     eax, 5dch
mov     ds:dword_4a9ee8, eax
retn
cmp     word_4aeb04, 0
jle     short locret_48d91c
call    ds:gettickcount
cmp     eax, ds:dword_4a9ee8
jb      short locret_48d91c
add     eax, 1f4h
mov     ds:dword_4a9ee8, eax
mov     ax, ds:word_4a9ee4
inc     ax
mov     ds:word_4a9ee4, ax
cmp     ax, 68h
jle     short loc_48d8fa
mov     ax, 65h
mov     ds:word_4a9ee4, ax
mov     ecx, ds:hinstance
movzx   eax, ax
push    eax
push    ecx
call    ds:loadcursora
test    eax, eax
jz      short locret_48d91c
push    eax
call    ds:setcursor
retn
cmp     word_4aeb04, 1
jnz     short locret_48d945
push    7f00h
push    0
call    ds:loadcursora
push    eax
call    ds:setcursor
dec     word_4aeb04
retn
sub     esp, 80h
push    esi
push    edi
push    42h
push    242h
call    sub_45bd50
add     esp, 8
mov     ds:dword_4a9eec, eax
test    eax, eax
jnz     short loc_48d97d
mov     ax, 7
pop     edi
pop     esi
add     esp, 80h
retn
mov     eax, ds:dword_4a9eec
add     eax, 0ch
push    eax
call    sub_491fd0
mov     si, ax
lea     ecx, [esp+8ch+buffer]
add     esp, 4
push    0
push    1aech
push    40h
push    ecx
call    sub_47fe70
lea     eax, [esp+98h+keyname]
add     esp, 10h
push    1
push    1aech
push    40h
push    eax
call    sub_47fe70
lea     eax, [esp+98h+keyname]
lea     ecx, [esp+98h+buffer]
add     esp, 10h
push    8
push    eax
push    ecx
call    sub_456540
lea     edx, [esp+94h+keyname]
add     esp, 0ch
mov     ecx, ds:dword_4a9eec
push    2
mov     [ecx+216h], ax
push    1aech
push    40h
push    edx
call    sub_47fe70
lea     ecx, [esp+98h+keyname]
lea     edx, [esp+98h+buffer]
add     esp, 10h
push    4000h
push    ecx
push    edx
call    sub_456540
add     esp, 0ch
mov     ecx, ds:dword_4a9eec
movzx   edx, ax
mov     [ecx+218h], edx
mov     ecx, ds:dword_4a9eec
mov     ax, [ecx+216h]
add     ecx, 216h
cmp     ax, 20h
jg      short loc_48da52
cmp     ax, 2
jl      short loc_48da52
mov     eax, ds:dword_4a9eec
mov     eax, [eax+218h]
cmp     eax, 0ffffh
jg      short loc_48da52
cmp     eax, 400h
jge     short loc_48da66
mov     word ptr [ecx], 8
mov     eax, ds:dword_4a9eec
mov     dword ptr [eax+218h], 4000h
mov     eax, ds:dword_4a9eec
mov     dword ptr [eax+8], 1
mov     eax, ds:dword_4a9eec
mov     dword ptr [eax], 0
call    sub_492340
mov     ecx, ds:dword_4a9eec
mov     [ecx+21ch], ax
mov     ecx, ds:dword_4a9eec
cmp     word ptr [ecx+21ch], 0
mov     eax, 1
jg      short loc_48daa6
xor     eax, eax
mov     ecx, ds:dword_4a9eec
mov     [ecx+21eh], eax
mov     eax, ds:dword_4a9eec
xor     ecx, ecx
mov     [eax+228h], cx
mov     eax, ds:dword_4a9eec
mov     dword ptr [eax+210h], 1
mov     eax, ds:dword_4a9eec
mov     [eax+214h], cx
mov     eax, ds:dword_4a9eec
xor     edi, edi
mov     dword ptr [eax+23eh], 0ffffh
movsx   eax, cx
inc     cx
lea     edx, ds:0[eax*4]
cmp     cx, 20h
mov     eax, ds:dword_4a9eec
mov     [eax+edx+10h], edi
mov     eax, ds:dword_4a9eec
mov     [eax+edx+90h], edi
jl      short loc_48daec
mov     ax, si
pop     edi
pop     esi
add     esp, 80h
retn
mov     eax, ds:dword_4a9eec
cmp     dword ptr [eax+8], 0
jz      short loc_48db47
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_48db47
push    eax
call    sub_412ee0
add     esp, 4
mov     eax, ds:dword_4a9eec
mov     dword ptr [eax+0ch], 0
call    sub_40cb90
mov     eax, ds:dword_4a9eec
add     eax, 10h
push    eax
call    sub_492140
add     esp, 4
mov     ecx, ds:dword_4a9eec
mov     eax, [ecx+232h]
test    eax, eax
jz      short loc_48db76
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, ds:dword_4a9eec
push    eax
call    sub_45bdb0
add     esp, 4
mov     eax, 1
mov     ds:dword_4a9eec, 0
retn
mov     eax, ds:dword_4a9eec
mov     eax, [eax+236h]
test    eax, eax
jz      short locret_48dbea
push    eax
call    ds:globalunlock
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+236h]
push    ecx
call    sub_45ba00
add     esp, 4
mov     ecx, ds:dword_4a9eec
mov     dword ptr [ecx+236h], 0
mov     ecx, ds:dword_4a9eec
mov     dword ptr [ecx+23ah], 0
retn
mov     eax, ds:dword_4a9eec
mov     eax, [eax]
test    eax, eax
jz      short loc_48dc0f
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+4]
push    ecx
call    sub_4855b0
add     esp, 4
xor     eax, eax
retn
push    eax
mov     eax, ds:dword_4a9eec
add     eax, 10h
push    eax
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+222h]
push    ecx
call    sub_492770
add     esp, 0ch
mov     ecx, ds:dword_4a9eec
mov     edx, [ecx+222h]
push    edx
call    sub_4926d0
add     esp, 4
mov     ecx, ds:dword_4a9eec
mov     dword ptr [ecx+23eh], 0
mov     ecx, ds:dword_4a9eec
mov     dword ptr [ecx+222h], 0
call    sub_48dba0
mov     ecx, ds:dword_4a9eec
mov     eax, 1
mov     dword ptr [ecx+4], 0
retn
push    esi
mov     eax, ds:dword_4a9eec
xor     esi, esi
cmp     [eax+222h], esi
jz      short loc_48dcee
mov     ecx, [eax+4]
push    ecx
call    sub_485210
add     esp, 4
mov     ecx, ds:dword_4a9eec
mov     [ecx+4], esi
mov     ecx, ds:dword_4a9eec
mov     eax, [ecx]
push    eax
lea     eax, [ecx+10h]
push    eax
mov     ecx, [ecx+222h]
push    ecx
call    sub_492770
add     esp, 0ch
mov     ecx, ds:dword_4a9eec
mov     edx, [ecx+222h]
push    edx
call    sub_4926d0
add     esp, 4
mov     ecx, ds:dword_4a9eec
mov     [ecx+23eh], esi
mov     ecx, ds:dword_4a9eec
mov     [ecx+222h], esi
pop     esi
retn
cmp     [esp+arg_0], 0
jz      short loc_48dcfe
call    sub_48dc80
jmp     short loc_48dd1d
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+222h]
test    ecx, ecx
jz      short loc_48dd1d
mov     edx, [eax]
add     eax, 10h
push    edx
push    eax
push    ecx
call    sub_492770
add     esp, 0ch
call    sub_48dba0
mov     eax, ds:dword_4a9eec
mov     dword ptr [eax], 0
mov     eax, ds:dword_4a9eec
add     eax, 10h
push    eax
call    sub_4921e0
add     esp, 4
retn
sub     esp, 1ch
mov     eax, ds:dword_4a9eec
cmp     dword ptr [eax+222h], 0
jz      short loc_48dd68
mov     ecx, [eax+23ah]
push    ecx
call    sub_492600
add     esp, 4
test    eax, eax
jz      loc_48de41
mov     eax, ds:dword_4a9eec
mov     eax, [eax+4]
test    eax, eax
jz      short loc_48ddd2
push    eax
call    sub_485210
add     esp, 4
mov     eax, ds:dword_4a9eec
mov     ecx, [eax]
add     eax, 10h
push    ecx
push    eax
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+222h]
push    ecx
call    sub_492770
add     esp, 0ch
mov     ecx, ds:dword_4a9eec
mov     edx, [ecx+222h]
push    edx
call    sub_4926d0
add     esp, 4
mov     ecx, ds:dword_4a9eec
mov     dword ptr [ecx+222h], 0
mov     ecx, ds:dword_4a9eec
mov     dword ptr [ecx+23eh], 0
mov     [esp+1ch+var_16], offset sub_48dbf0
mov     [esp+1ch+var_12], 1388h
mov     [esp+1ch+var_8], 0
mov     [esp+1ch+var_1c], 1ch
mov     [esp+1ch+var_a], 4
lea     eax, [esp+1ch+var_1c]
push    eax
call    sub_485150
add     esp, 4
mov     ecx, ds:dword_4a9eec
mov     [ecx+4], eax
mov     ecx, ds:dword_4a9eec
cmp     dword ptr [ecx+4], 0
jnz     short loc_48de22
mov     ax, 6
add     esp, 1ch
retn
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+23ah]
add     eax, 222h
push    ecx
push    eax
call    sub_4926a0
add     esp, 8
test    ax, ax
jnz     short loc_48de44
xor     ax, ax
add     esp, 1ch
retn
sub     esp, 4
mov     eax, ds:dword_4a9eec
mov     [esp+4+var_2], 0
cmp     dword ptr [eax+8], 0
push    esi
push    edi
jnz     short loc_48de73
mov     [esp+0ch+var_2], 3
jmp     loc_48e115
mov     eax, ds:dword_4a9eec
cmp     dword ptr [eax+21eh], 0
jnz     short loc_48de8d
mov     [esp+0ch+var_2], 6
jmp     loc_48e115
mov     eax, ds:dword_4a9eec
cmp     dword ptr [eax+210h], 0
jz      short loc_48dec8
add     eax, 10h
push    eax
call    sub_4920b0
add     esp, 4
mov     ecx, ds:dword_4a9eec
mov     ax, [ecx+216h]
sub     ax, [ecx+214h]
cmp     ax, 1
sbb     eax, eax
inc     eax
mov     [ecx+210h], eax
mov     eax, ds:dword_4a9eec
cmp     word ptr [eax+214h], 0
jnz     short loc_48dee3
mov     [esp+0ch+var_2], 7
jmp     loc_48e115
mov     eax, ds:dword_4a9eec
cmp     dword ptr [eax], 0
jz      short loc_48df05
push    0
call    sub_48e590
mov     [esp+10h+var_2], ax
add     esp, 4
test    ax, ax
jnz     loc_48e115
mov     eax, ds:dword_4a9eec
mov     edx, [esp+0ch+arg_8]
mov     dword ptr [eax], 1
mov     ecx, ds:dword_4a9eec
mov     [ecx+22eh], edx
mov     eax, ds:dword_4a9eec
add     eax, 10h
push    eax
call    sub_492190
add     esp, 4
cmp     [esp+0ch+arg_4], 30h
jnb     short loc_48df53
mov     [esp+0ch+var_2], 20h
mov     esi, [esp+0ch+hmem]
push    1
call    sub_48dcf0
add     esp, 4
jmp     loc_48e119
call    sub_48dba0
mov     eax, ds:dword_4a9eec
mov     esi, [esp+0ch+hmem]
mov     [eax+236h], esi
xor     esi, esi
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+236h]
push    ecx
call    ds:globallock
mov     ecx, ds:dword_4a9eec
mov     [ecx+23ah], eax
call    sub_48dd40
mov     [esp+0ch+var_2], ax
cmp     ax, si
jnz     short loc_48df44
mov     eax, ds:dword_4a9eec
mov     ecx, [esp+0ch+arg_c]
cmp     [eax+23eh], ecx
jz      short loc_48dfcd
push    ecx
mov     [eax], esi
call    sub_48e6b0
mov     [esp+10h+var_2], ax
add     esp, 4
mov     eax, ds:dword_4a9eec
mov     dword ptr [eax], 1
cmp     [esp+0ch+var_2], si
jnz     loc_48df44
mov     eax, ds:dword_4a9eec
xor     edi, edi
mov     [eax+22ah], edi
mov     eax, ds:dword_4a9eec
mov     [eax+226h], di
mov     eax, ds:dword_4a9eec
mov     dword ptr [eax], 1
mov     eax, ds:dword_4a9eec
cmp     [eax+22eh], edi
jz      loc_48e10c
mov     ecx, eax
mov     ax, [eax+226h]
cwd
idiv    word ptr [ecx+214h]
mov     eax, ds:dword_4a9eec
mov     [eax+228h], dx
mov     eax, ds:dword_4a9eec
inc     word ptr [eax+226h]
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+218h]
add     eax, 22ah
push    ecx
lea     ecx, [esp+10h+var_2]
push    eax
mov     eax, ds:dword_4a9eec
mov     ax, [eax+228h]
push    eax
push    ecx
call    sub_48e140
add     esp, 10h
cmp     [esp+0ch+var_2], di
jnz     loc_48df44
mov     ecx, ds:dword_4a9eec
push    eax
movsx   ecx, word ptr [ecx+228h]
shl     ecx, 2
mov     eax, ds:dword_4a9eec
add     ecx, ds:dword_4a9eec
mov     edx, [eax+23ah]
push    edx
mov     eax, [ecx+190h]
push    eax
mov     ecx, [ecx+110h]
push    ecx
mov     edx, ds:dword_4a9eec
mov     eax, [edx+222h]
push    eax
call    sub_492700
mov     [esp+20h+var_2], ax
add     esp, 14h
cmp     ax, di
jnz     loc_48df44
mov     eax, ds:dword_4a9eec
mov     ecx, ds:dword_4a9eec
add     eax, 10h
mov     edx, [ecx+222h]
push    eax
mov     eax, ds:dword_4a9eec
mov     ax, [eax+228h]
push    eax
push    edx
call    sub_492750
mov     [esp+18h+var_2], ax
add     esp, 0ch
cmp     ax, di
jnz     loc_48df44
mov     ecx, ds:dword_4a9eec
mov     eax, ecx
mov     ax, [eax+214h]
cmp     [ecx+226h], ax
jl      loc_48dff1
xor     ax, ax
pop     edi
pop     esi
add     esp, 4
retn
mov     esi, [esp+0ch+hmem]
push    0
push    0
push    0
call    sub_43e1c0
add     esp, 0ch
test    esi, esi
jz      short loc_48e134
push    esi
call    sub_45ba00
add     esp, 4
mov     ax, [esp+0ch+var_2]
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 8
push    ebx
push    esi
push    edi
xor     esi, esi
push    ebp
call    sub_48e700
mov     bx, ax
mov     edi, ds:dword_4a9eec
add     edi, 232h
cmp     [edi], esi
jnz     short loc_48e172
push    42h
push    4000h
call    sub_45b8f0
add     esp, 8
mov     [edi], eax
movsx   eax, bx
mov     edi, [esp+18h+arg_8]
mov     [esp+18h+var_8], eax
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+23ah]
mov     eax, [esp+18h+arg_c]
sub     eax, esi
mov     ebx, [ecx+6]
cdq
idiv    [esp+18h+var_8]
sub     ebx, [edi]
cmp     ebx, eax
jl      short loc_48e19e
mov     ebx, eax
test    ebx, ebx
jz      loc_48e2e5
call    sub_48e730
cmp     ax, 1
jz      short loc_48e1f7
call    sub_48e730
cmp     ax, 2
jz      short loc_48e1f7
mov     eax, ds:dword_4a9eec
movsx   ecx, [esp+18h+arg_4]
mov     eax, [eax+ecx*4+190h]
mov     ecx, [edi]
add     eax, esi
push    eax
push    ebx
push    ecx
call    sub_43e1c0
add     esp, 0ch
test    eax, eax
jnz     loc_48e274
mov     eax, [esp+18h+arg_0]
pop     ebp
mov     word ptr [eax], 0ffffh
pop     edi
mov     eax, esi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ebp, ebx
imul    ebp, [esp+18h+var_8]
call    sub_48e750
mov     ecx, eax
sub     edx, edx
mov     eax, ebp
div     ecx
sub     edx, edx
div     [esp+18h+var_8]
mov     [esp+18h+var_4], eax
mov     eax, ds:dword_4a9eec
mov     edx, [eax+232h]
push    edx
call    ds:globallock
push    eax
mov     ebp, eax
push    ebx
mov     ecx, [edi]
push    ecx
call    sub_43e1c0
add     esp, 0ch
test    eax, eax
jz      loc_48e2dc
mov     eax, [esp+18h+var_4]
mov     edx, ds:dword_4a9eec
movsx   ecx, [esp+18h+arg_4]
push    eax
mov     eax, [edx+ecx*4+190h]
add     eax, esi
push    eax
push    ebp
call    sub_492220
add     esp, 0ch
mov     ecx, ds:dword_4a9eec
mov     edx, [ecx+232h]
push    edx
call    ds:globalunlock
mov     ecx, [edi]
add     ecx, ebx
mov     [edi], ecx
mov     edx, ds:dword_4a9eec
mov     eax, [edx+23ah]
cmp     [eax+6], ecx
jg      short loc_48e2aa
mov     dword ptr [edi], 0
mov     ecx, ds:dword_4a9eec
mov     eax, [ecx+22eh]
add     ecx, 22eh
test    eax, eax
jle     short loc_48e2aa
dec     eax
mov     [ecx], eax
mov     eax, ebx
mov     ecx, ds:dword_4a9eec
imul    eax, [esp+18h+var_8]
add     esi, eax
cmp     [ecx+218h], esi
jle     short loc_48e2e5
cmp     dword ptr [ecx+22eh], 0
jz      short loc_48e2e5
test    ebx, ebx
jnz     loc_48e17d
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+18h+arg_0]
mov     word ptr [eax], 0ffffh
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 4
mov     eax, ds:dword_4a9eec
mov     [esp+4+var_2], 0
cmp     dword ptr [eax+8], 0
push    esi
push    edi
jnz     short loc_48e30f
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, ds:dword_4a9eec
cmp     dword ptr [eax], 0
jnz     short loc_48e321
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
xor     si, si
mov     eax, ds:dword_4a9eec
cmp     [eax+214h], si
jle     short loc_48e35b
movsx   eax, si
inc     si
mov     ecx, ds:dword_4a9eec
mov     edx, [ecx+eax*4+110h]
push    edx
call    sub_492780
add     esp, 4
mov     eax, ds:dword_4a9eec
cmp     [eax+214h], si
jg      short loc_48e332
xor     esi, esi
mov     eax, ds:dword_4a9eec
cmp     [eax+22eh], esi
jz      loc_48e4da
movsx   eax, word ptr [eax+228h]
mov     ecx, ds:dword_4a9eec
inc     eax
cdq
movsx   edi, word ptr [ecx+214h]
idiv    edi
mov     ecx, [ecx+edx*4+110h]
push    ecx
call    sub_492780
add     esp, 4
test    eax, eax
jz      loc_48e4cf
mov     eax, ds:dword_4a9eec
mov     ecx, eax
mov     ax, [eax+226h]
cwd
idiv    word ptr [ecx+214h]
mov     eax, ds:dword_4a9eec
mov     [eax+228h], dx
mov     eax, ds:dword_4a9eec
inc     word ptr [eax+226h]
mov     eax, ds:dword_4a9eec
movsx   edx, word ptr [eax+228h]
mov     ecx, ds:dword_4a9eec
mov     eax, [eax+edx*4+110h]
push    eax
mov     edx, [ecx+222h]
push    edx
call    sub_492730
mov     ecx, ds:dword_4a9eec
mov     [esp+14h+var_2], ax
add     esp, 8
mov     edx, [ecx+218h]
lea     eax, [ecx+22ah]
push    edx
push    eax
mov     eax, ecx
lea     ecx, [esp+14h+var_2]
mov     ax, [eax+228h]
push    eax
push    ecx
call    sub_48e140
add     esp, 10h
mov     ecx, ds:dword_4a9eec
movsx   ecx, word ptr [ecx+228h]
shl     ecx, 2
push    eax
add     ecx, ds:dword_4a9eec
mov     eax, ds:dword_4a9eec
mov     edx, [eax+23ah]
mov     edi, [ecx+190h]
push    edx
mov     eax, [ecx+110h]
push    edi
mov     ecx, ds:dword_4a9eec
push    eax
mov     edx, [ecx+222h]
push    edx
call    sub_492700
mov     [esp+20h+var_2], ax
add     esp, 14h
cmp     ax, si
jnz     short loc_48e4af
mov     eax, ds:dword_4a9eec
mov     ecx, ds:dword_4a9eec
add     eax, 10h
mov     edx, [ecx+222h]
push    eax
mov     eax, ds:dword_4a9eec
mov     ax, [eax+228h]
push    eax
push    edx
call    sub_492750
mov     [esp+18h+var_2], ax
add     esp, 0ch
cmp     ax, si
jz      loc_48e35d
push    1
call    sub_48dcf0
add     esp, 4
push    0
push    0
push    0
call    sub_43e1c0
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, 1
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, ds:dword_4a9eec
movsx   ecx, word ptr [eax+228h]
mov     edx, [eax+ecx*4+110h]
push    edx
call    sub_492780
add     esp, 4
test    eax, eax
jnz     short loc_48e505
mov     eax, 1
pop     edi
pop     esi
add     esp, 4
retn
xor     esi, esi
mov     eax, ds:dword_4a9eec
cmp     [eax+214h], si
jle     short loc_48e563
xor     edi, edi
mov     eax, ds:dword_4a9eec
cmp     [eax+226h], si
jle     short loc_48e553
mov     ecx, ds:dword_4a9eec
movsx   eax, si
mov     edx, [ecx+eax*4+110h]
mov     eax, [ecx+222h]
push    edx
push    eax
call    sub_492730
mov     [esp+14h+var_2], ax
add     esp, 8
cmp     ax, di
jnz     loc_48e4af
inc     si
mov     eax, ds:dword_4a9eec
cmp     [eax+214h], si
jg      short loc_48e517
push    0
call    sub_48dcf0
add     esp, 4
push    0
push    0
push    0
call    sub_43e1c0
add     esp, 0ch
mov     eax, 1
pop     edi
pop     esi
add     esp, 4
retn
push    esi
mov     eax, ds:dword_4a9eec
push    edi
cmp     dword ptr [eax+8], 0
jnz     short loc_48e5a4
mov     ax, 3
pop     edi
pop     esi
retn
mov     eax, ds:dword_4a9eec
mov     eax, [eax]
test    eax, eax
jnz     short loc_48e5c1
cmp     [esp+8+arg_0], 0
jz      short loc_48e5bb
call    sub_48dc80
xor     ax, ax
pop     edi
pop     esi
retn
push    eax
mov     eax, ds:dword_4a9eec
add     eax, 10h
push    eax
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+222h]
push    ecx
call    sub_492770
mov     di, ax
add     esp, 0ch
test    di, di
jnz     short loc_48e65f
xor     si, si
mov     eax, ds:dword_4a9eec
cmp     [eax+214h], si
jle     short loc_48e63e
mov     eax, ds:dword_4a9eec
cmp     [eax+226h], si
jle     short loc_48e62e
mov     ecx, ds:dword_4a9eec
movsx   eax, si
mov     edx, [ecx+eax*4+110h]
mov     eax, [ecx+222h]
push    edx
push    eax
call    sub_492730
mov     di, ax
add     esp, 8
test    di, di
jnz     short loc_48e65f
inc     si
mov     eax, ds:dword_4a9eec
cmp     [eax+214h], si
jg      short loc_48e5f8
mov     eax, [esp+8+arg_0]
push    eax
call    sub_48dcf0
add     esp, 4
push    0
push    0
push    0
call    sub_43e1c0
xor     ax, ax
add     esp, 0ch
pop     edi
pop     esi
retn
push    1
call    sub_48dcf0
add     esp, 4
push    0
push    0
push    0
call    sub_43e1c0
add     esp, 0ch
mov     eax, ds:dword_4a9eec
mov     eax, [eax+232h]
test    eax, eax
jz      short loc_48e69e
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, ds:dword_4a9eec
mov     dword ptr [eax+232h], 0
mov     ax, di
pop     edi
pop     esi
retn
mov     eax, ds:dword_4a9eec
cmp     dword ptr [eax+8], 0
jnz     short loc_48e6c0
mov     ax, 3
retn
lea     eax, [esp+arg_0]
mov     ecx, ds:dword_4a9eec
push    eax
mov     edx, [ecx+222h]
push    edx
mov     eax, [ecx]
push    eax
call    sub_4922f0
add     esp, 0ch
test    ax, ax
jnz     short locret_48e6f5
mov     eax, [esp+arg_0]
mov     ecx, ds:dword_4a9eec
mov     [ecx+23eh], eax
xor     ax, ax
retn
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+23ah]
mov     al, [ecx+15h]
test    al, al
jnz     short loc_48e717
mov     ax, 1
retn
cmp     al, 1
jnz     short loc_48e720
mov     ax, 3
retn
sub     al, 2
cmp     al, 1
sbb     eax, eax
and     eax, 5
inc     ax
retn
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+23ah]
movzx   ax, byte ptr [ecx+15h]
retn
mov     eax, ds:dword_4a9eec
mov     ecx, [eax+23ah]
xor     eax, eax
mov     al, [ecx+18h]
retn
push    esi
xor     eax, eax
mov     esi, [esp+4+arg_0]
push    edi
mov     edi, esi
mov     ecx, 7
rep stosd
stosw
push    42h
push    eax
call    sub_45b8f0
add     esp, 8
mov     [esi+16h], eax
test    eax, eax
jnz     short loc_48e79a
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+8+arg_4]
mov     dword ptr [esi], 0
push    eax
push    esi
call    sub_48f3d0
mov     eax, [esp+10h+arg_8]
add     esp, 8
mov     dword ptr [esi+0eh], 0
pop     edi
mov     [esi+12h], eax
mov     dword ptr [esi+1ah], 0
mov     eax, 1
pop     esi
retn
push    edi
mov     edi, [esp+4+arg_0]
push    edi
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_48e7ee
mov     eax, [edi+16h]
push    eax
call    sub_45ba00
add     esp, 4
xor     eax, eax
mov     ecx, 7
rep stosd
stosw
pop     edi
retn
push    esi
push    2
mov     esi, [esp+8+arg_0]
push    0
mov     eax, [esi+16h]
push    eax
call    sub_45b9b0
add     esp, 0ch
mov     [esi+16h], eax
mov     dword ptr [esi], 0
pop     esi
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+16h], 1
sbb     eax, eax
inc     eax
retn
mov     eax, [esp+arg_0]
mov     eax, [eax]
retn
push    esi
xor     eax, eax
mov     esi, [esp+4+arg_0]
push    edi
mov     edi, esi
mov     ecx, 7
rep stosd
stosw
mov     eax, [esp+8+arg_c]
mov     ecx, [esp+8+arg_10]
mov     edx, [esp+8+arg_4]
mov     [esi+16h], eax
push    edx
mov     [esi], ecx
push    esi
call    sub_48f3d0
mov     edx, [esp+10h+arg_8]
add     esp, 8
xor     ecx, ecx
mov     [esi+12h], edx
pop     edi
mov     [esi+0eh], ecx
mov     [esi+1ah], ecx
pop     esi
retn
push    edi
push    2
mov     edi, [esp+8+arg_0]
mov     eax, [edi]
mov     cl, [edi+0ch]
shl     eax, cl
push    eax
mov     ecx, [edi+16h]
push    ecx
call    sub_45b9b0
mov     edx, [esp+10h+arg_4]
add     esp, 0ch
mov     [edi+16h], eax
mov     [edx], eax
mov     eax, [esp+4+arg_8]
mov     ecx, [edi]
mov     [eax], ecx
xor     eax, eax
mov     ecx, 7
rep stosd
stosw
pop     edi
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
mov     ebx, 1
push    esi
call    sub_48f140
mov     [esp+18h+var_4], eax
add     esp, 4
mov     ebp, [esi+1ah]
cmp     eax, ebx
jb      short loc_48e8ff
mov     edi, [esp+14h+arg_8]
push    edi
push    ebp
call    [esp+1ch+arg_4]
add     esp, 8
test    eax, eax
jz      short loc_48e901
inc     ebx
add     ebp, [esi+8]
cmp     ebx, [esp+14h+var_4]
jbe     short loc_48e8e8
xor     ebx, ebx
push    esi
call    sub_48f1a0
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
push    ebx
inc     dword ptr [ebx]
call    sub_48f1f0
add     esp, 4
test    eax, eax
jnz     short loc_48e93e
xor     eax, eax
pop     edi
pop     esi
dec     dword ptr [ebx]
pop     ebx
retn
push    ebx
call    sub_48f140
add     esp, 4
mov     eax, [ebx+4]
mov     edi, [ebx]
mov     cl, [ebx+0ch]
dec     edi
mov     esi, [esp+0ch+arg_4]
shl     edi, cl
add     edi, [ebx+1ah]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
push    ebx
and     ecx, 3
rep movsb
call    sub_48f1a0
add     esp, 4
mov     eax, [ebx]
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, [esp+0ch+arg_4]
mov     eax, [esi]
inc     eax
mov     [esi], eax
cmp     eax, edi
jnb     short loc_48e996
mov     edi, eax
push    esi
call    sub_48f1f0
add     esp, 4
test    eax, eax
jnz     short loc_48e9ab
xor     eax, eax
pop     edi
dec     dword ptr [esi]
pop     esi
pop     ebx
retn
push    esi
lea     ebx, [edi-1]
call    sub_48f140
add     esp, 4
mov     cl, [esi+0ch]
shl     ebx, cl
add     ebx, [esi+1ah]
mov     edx, [esi]
sub     edx, edi
mov     eax, [esi+8]
shl     edx, cl
push    edx
add     eax, ebx
push    ebx
push    eax
call    _memcpy
mov     edx, [esp+18h+src]
add     esp, 0ch
mov     ecx, [esi+4]
push    ecx
push    edx
push    ebx
call    _memcpy
add     esp, 0ch
push    esi
call    sub_48f1a0
add     esp, 4
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
push    ebp
push    ebx
call    sub_48f140
mov     eax, [esp+14h+arg_4]
add     esp, 4
push    eax
push    ebx
call    sub_48f1d0
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_48ea3c
mov     eax, [ebx+4]
mov     edi, [esp+10h+arg_8]
mov     esi, ebp
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
push    ebx
call    sub_48f1a0
add     esp, 4
cmp     ebp, 1
sbb     eax, eax
pop     ebp
inc     eax
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+arg_0]
push    edi
call    sub_48f140
mov     esi, [esp+14h+arg_4]
add     esp, 4
mov     ebp, eax
test    esi, esi
jz      short loc_48ea74
mov     ebx, 1
cmp     ebp, esi
jnb     short loc_48ea76
xor     ebx, ebx
test    ebx, ebx
jz      short loc_48eaa6
push    esi
sub     ebp, esi
push    edi
call    sub_48f1d0
add     esp, 8
mov     cl, [edi+0ch]
shl     ebp, cl
push    ebp
mov     ecx, [edi+8]
add     ecx, eax
push    ecx
push    eax
call    _memcpy
add     esp, 0ch
dec     dword ptr [edi]
push    edi
call    sub_48f1f0
add     esp, 4
push    edi
call    sub_48f1a0
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 0ch
push    ebx
push    esi
mov     ebx, [esp+14h+arg_0]
push    edi
push    ebp
push    ebx
xor     ebp, ebp
call    sub_48f140
mov     [esp+20h+var_8], eax
add     esp, 4
cmp     eax, 1
mov     [esp+1ch+var_c], 1
jb      short loc_48eb51
mov     eax, [esp+1ch+arg_c]
mov     edi, [esp+1ch+arg_4]
shr     eax, 10h
mov     word ptr [esp+1ch+var_4], ax
mov     esi, [esp+1ch+var_c]
mov     cl, [ebx+0ch]
dec     esi
shl     esi, cl
add     esi, [ebx+1ah]
cmp     word ptr [esp+1ch+var_4], 2
jnz     short loc_48eb26
mov     ecx, [esp+1ch+arg_c]
xor     eax, eax
and     ecx, 0ffffh
xor     edx, edx
mov     ax, [ecx+esi]
mov     dx, [edi+ecx]
sub     eax, edx
jmp     short loc_48eb36
mov     eax, [esp+1ch+arg_c]
push    eax
push    edi
push    esi
push    ebx
call    sub_48f290
add     esp, 10h
cmp     eax, 1
sbb     ebp, ebp
neg     ebp
test    ebp, ebp
jnz     short loc_48eb59
inc     [esp+1ch+var_c]
mov     eax, [esp+1ch+var_c]
cmp     eax, [esp+1ch+var_8]
jbe     short loc_48eaf7
jmp     short loc_48eb55
mov     esi, [esp+1ch+var_4]
test    ebp, ebp
jz      short loc_48eb72
mov     edi, [esp+1ch+arg_8]
test    edi, edi
jz      short loc_48eb72
mov     eax, [ebx+4]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
push    ebx
call    sub_48f1a0
add     esp, 4
mov     eax, 0
cmp     ebp, 1
adc     eax, 0ffffffffh
and     eax, [esp+1ch+var_c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 0ch
push    ebx
push    esi
mov     ebx, [esp+14h+arg_0]
push    edi
push    ebp
push    ebx
xor     ebp, ebp
call    sub_48f140
mov     [esp+20h+var_4], eax
add     esp, 4
cmp     eax, 1
mov     [esp+1ch+var_c], 1
jb      short loc_48ec37
mov     esi, [esp+1ch+arg_8]
mov     edi, [esp+1ch+arg_4]
shr     esi, 10h
mov     eax, [esp+1ch+var_c]
push    eax
push    ebx
call    sub_48f1d0
mov     [esp+24h+var_8], eax
add     esp, 8
cmp     si, 2
jnz     short loc_48ec08
mov     ecx, [esp+1ch+arg_8]
xor     eax, eax
and     ecx, 0ffffh
xor     ebp, ebp
mov     ax, [ecx+edi]
mov     edx, [esp+1ch+var_8]
mov     bp, [ecx+edx]
sub     eax, ebp
jmp     short loc_48ec1c
mov     eax, [esp+1ch+arg_8]
mov     edx, [esp+1ch+var_8]
push    eax
push    edx
push    edi
push    ebx
call    sub_48f290
add     esp, 10h
cmp     eax, 1
sbb     ebp, ebp
neg     ebp
test    ebp, ebp
jnz     short loc_48ec3f
inc     [esp+1ch+var_c]
mov     eax, [esp+1ch+var_c]
cmp     eax, [esp+1ch+var_4]
jbe     short loc_48ebd2
jmp     short loc_48ec3b
mov     edi, [esp+1ch+arg_4]
test    ebp, ebp
jz      short loc_48ec8a
mov     eax, [ebx+4]
mov     esi, [esp+1ch+var_8]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, [esp+1ch+var_4]
mov     cl, [ebx+0ch]
sub     eax, [esp+1ch+var_c]
mov     edx, [esp+1ch+var_8]
shl     eax, cl
push    eax
mov     eax, [ebx+8]
add     eax, [esp+20h+var_8]
push    eax
push    edx
call    _memcpy
add     esp, 0ch
dec     dword ptr [ebx]
push    ebx
call    sub_48f1a0
add     esp, 4
push    ebx
call    sub_48f1f0
jmp     short loc_48ec90
push    ebx
call    sub_48f1a0
add     esp, 4
mov     eax, 0
cmp     ebp, 1
adc     eax, 0ffffffffh
and     eax, [esp+1ch+var_c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_48f140
mov     eax, [esp+8+arg_4]
add     esp, 4
mov     ds:dword_4a9ef4, esi
mov     ds:dword_4a9ef0, eax
push    offset loc_48ecf0
mov     ecx, [esi+8]
push    ecx
mov     edx, [esi]
push    edx
mov     eax, [esi+1ah]
push    eax
call    sub_47d4b0
add     esp, 10h
push    esi
call    sub_48f1a0
add     esp, 4
pop     esi
retn
push    esi
mov     eax, ds:dword_4a9ef0
shr     eax, 10h
cmp     ax, 2
jnz     short loc_48ed20
xor     esi, esi
xor     eax, eax
mov     si, word ptr ds:dword_4a9ef0
mov     ecx, [esp+4+arg_0]
mov     ax, [ecx+esi]
xor     edx, edx
mov     ecx, [esp+4+arg_4]
mov     dx, [ecx+esi]
pop     esi
sub     eax, edx
retn
mov     eax, ds:dword_4a9ef0
mov     ecx, [esp+4+arg_4]
mov     edx, [esp+4+arg_0]
push    eax
push    ecx
mov     eax, ds:dword_4a9ef4
push    edx
push    eax
call    sub_48f290
add     esp, 10h
pop     esi
retn
sub     esp, 0ch
push    ebx
push    esi
mov     ebx, [esp+14h+arg_0]
push    edi
push    ebp
xor     esi, esi
push    ebx
call    sub_48f140
mov     [esp+20h+var_4], esi
add     esp, 4
dec     eax
mov     [esp+1ch+var_c], eax
cmp     eax, esi
jl      loc_48edee
mov     eax, [esp+1ch+arg_c]
shr     eax, 10h
mov     [esp+1ch+var_8], ax
mov     ebp, [esp+1ch+var_c]
add     ebp, esi
sar     ebp, 1
cmp     [esp+1ch+var_8], 2
jnz     short loc_48edac
mov     edx, [esp+1ch+arg_c]
xor     eax, eax
and     edx, 0ffffh
mov     ecx, [esp+1ch+arg_4]
mov     ax, [edx+ecx]
mov     edi, ebp
mov     cl, [ebx+0ch]
shl     edi, cl
add     edi, [ebx+1ah]
xor     ecx, ecx
mov     cx, [edi+edx]
sub     eax, ecx
jmp     short loc_48edca
mov     eax, [esp+1ch+arg_c]
mov     cl, [ebx+0ch]
push    eax
mov     eax, ebp
shl     eax, cl
add     eax, [ebx+1ah]
mov     ecx, [esp+20h+arg_4]
push    eax
push    ecx
push    ebx
call    sub_48f290
add     esp, 10h
test    eax, eax
jge     short loc_48edd7
lea     eax, [ebp-1]
mov     [esp+1ch+var_c], eax
jmp     short loc_48eddc
jle     short loc_48ede4
lea     esi, [ebp+1]
cmp     [esp+1ch+var_c], esi
jge     short loc_48ed73
jmp     short loc_48edf2
mov     [esp+1ch+var_4], 1
jmp     short loc_48edf2
mov     ebp, [esp+1ch+var_4]
cmp     [esp+1ch+var_4], 0
jz      short loc_48ee1c
mov     edi, [esp+1ch+arg_8]
test    edi, edi
jz      short loc_48ee1c
mov     eax, [ebx+4]
mov     esi, ebp
mov     cl, [ebx+0ch]
shl     esi, cl
add     esi, [ebx+1ah]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
push    ebx
call    sub_48f1a0
add     esp, 4
cmp     [esp+1ch+var_4], 0
jz      short loc_48ee37
lea     eax, [ebp+1]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 14h
push    ebx
push    esi
mov     ebx, [esp+1ch+arg_0]
push    edi
push    ebp
push    ebx
call    sub_48f140
mov     [esp+28h+var_4], eax
add     esp, 4
xor     ecx, ecx
dec     eax
mov     [esp+24h+var_10], ecx
mov     [esp+24h+var_14], eax
mov     [esp+24h+var_8], ecx
cmp     eax, ecx
jl      loc_48ef0c
mov     eax, [esp+24h+arg_8]
mov     edi, [esp+24h+arg_4]
shr     eax, 10h
mov     [esp+24h+var_c], ax
mov     ebp, [esp+24h+var_14]
add     ebp, [esp+24h+var_10]
sar     ebp, 1
cmp     [esp+24h+var_c], 2
jnz     short loc_48eec6
mov     edx, [esp+24h+arg_8]
xor     eax, eax
and     edx, 0ffffh
mov     esi, ebp
mov     ax, [edx+edi]
mov     cl, [ebx+0ch]
shl     esi, cl
add     esi, [ebx+1ah]
xor     ecx, ecx
mov     cx, [esi+edx]
sub     eax, ecx
jmp     short loc_48eee0
mov     eax, [esp+24h+arg_8]
mov     cl, [ebx+0ch]
push    eax
mov     eax, ebp
shl     eax, cl
add     eax, [ebx+1ah]
push    eax
push    edi
push    ebx
call    sub_48f290
add     esp, 10h
test    eax, eax
jge     short loc_48eeed
lea     eax, [ebp-1]
mov     [esp+24h+var_14], eax
jmp     short loc_48eef6
jle     short loc_48ef02
lea     eax, [ebp+1]
mov     [esp+24h+var_10], eax
mov     eax, [esp+24h+var_10]
cmp     [esp+24h+var_14], eax
jge     short loc_48ee8f
jmp     short loc_48ef14
mov     [esp+24h+var_8], 1
jmp     short loc_48ef14
mov     edi, [esp+24h+arg_4]
mov     ebp, [esp+24h+var_4]
cmp     [esp+24h+var_8], 0
jz      short loc_48ef67
mov     edx, ebp
mov     cl, [ebx+0ch]
shl     edx, cl
add     edx, [ebx+1ah]
mov     eax, [ebx+4]
mov     esi, edx
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, [esp+24h+var_4]
mov     cl, [ebx+0ch]
sub     eax, ebp
dec     eax
shl     eax, cl
push    eax
mov     eax, [ebx+8]
add     eax, edx
push    eax
push    edx
call    _memcpy
add     esp, 0ch
dec     dword ptr [ebx]
push    ebx
call    sub_48f1a0
add     esp, 4
push    ebx
call    sub_48f1f0
jmp     short loc_48ef6d
push    ebx
call    sub_48f1a0
add     esp, 4
cmp     [esp+24h+var_8], 0
jz      short loc_48ef82
lea     eax, [ebp+1]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 18h
push    ebx
push    esi
mov     ebx, [esp+20h+arg_0]
push    edi
push    ebp
push    ebx
xor     ebp, ebp
call    sub_48f140
mov     [esp+2ch+var_4], eax
mov     [esp+2ch+var_8], ebp
add     esp, 4
dec     eax
cmp     eax, ebp
mov     [esp+28h+var_18], eax
jl      loc_48f053
mov     eax, [esp+28h+arg_c]
mov     esi, [esp+28h+arg_4]
shr     eax, 10h
mov     [esp+28h+var_c], ax
mov     edi, [esp+28h+var_18]
add     edi, ebp
sar     edi, 1
cmp     [esp+28h+var_c], 2
jnz     short loc_48f015
mov     ecx, [esp+28h+arg_c]
xor     eax, eax
and     ecx, 0ffffh
mov     edx, edi
mov     ax, [ecx+esi]
mov     [esp+28h+var_10], ecx
mov     cl, [ebx+0ch]
shl     edx, cl
add     edx, [ebx+1ah]
mov     ecx, [esp+28h+var_10]
mov     [esp+28h+var_14], 0
mov     cx, [edx+ecx]
mov     word ptr [esp+28h+var_14], cx
sub     eax, [esp+28h+var_14]
jmp     short loc_48f02f
mov     eax, [esp+28h+arg_c]
mov     cl, [ebx+0ch]
push    eax
mov     eax, edi
shl     eax, cl
add     eax, [ebx+1ah]
push    eax
push    esi
push    ebx
call    sub_48f290
add     esp, 10h
test    eax, eax
jge     short loc_48f03c
lea     eax, [edi-1]
mov     [esp+28h+var_18], eax
jmp     short loc_48f041
jle     short loc_48f049
lea     ebp, [edi+1]
cmp     [esp+28h+var_18], ebp
jge     short loc_48efcb
jmp     short loc_48f05b
mov     [esp+28h+var_8], 1
jmp     short loc_48f05b
mov     esi, [esp+28h+arg_4]
mov     edi, [esp+28h+var_4]
cmp     [esp+28h+var_8], 0
jz      short loc_48f0ac
mov     edx, [esp+28h+arg_8]
test    edx, edx
jz      short loc_48f085
mov     eax, [esp+28h+arg_c]
mov     cl, [ebx+0ch]
push    eax
mov     eax, edi
shl     eax, cl
add     eax, [ebx+1ah]
push    eax
push    esi
call    edx
add     esp, 0ch
jmp     loc_48f116
mov     ebp, [ebx+4]
mov     edx, edi
mov     cl, [ebx+0ch]
mov     eax, ebp
shl     edx, cl
add     edx, [ebx+1ah]
dec     ebp
test    eax, eax
jz      short loc_48f116
mov     al, [esi]
mov     cl, [edx]
mov     [esi], cl
inc     esi
mov     [edx], al
inc     edx
mov     eax, ebp
dec     ebp
test    eax, eax
jnz     short loc_48f099
jmp     short loc_48f116
push    ebx
inc     dword ptr [ebx]
call    sub_48f1a0
add     esp, 4
push    ebx
call    sub_48f1f0
add     esp, 4
test    eax, eax
jnz     short loc_48f0d0
xor     eax, eax
pop     ebp
pop     edi
dec     dword ptr [ebx]
pop     esi
pop     ebx
add     esp, 18h
retn
push    ebx
mov     edi, ebp
call    sub_48f140
mov     edx, [esp+2ch+var_4]
add     esp, 4
mov     cl, [ebx+0ch]
sub     edx, ebp
shl     edi, cl
add     edi, [ebx+1ah]
mov     eax, [ebx+8]
shl     edx, cl
push    edx
add     eax, edi
push    edi
push    eax
call    _memcpy
add     esp, 0ch
mov     eax, [ebx+4]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     [esp+28h+var_8], 1
mov     edi, ebp
push    ebx
call    sub_48f1a0
add     esp, 4
cmp     [esp+28h+var_8], 0
jz      short loc_48f131
lea     eax, [edi+1]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+0eh]
test    eax, eax
lea     ecx, [eax+1]
mov     [esi+0eh], ecx
jnz     short loc_48f15f
mov     eax, [esi+16h]
push    eax
call    ds:globallock
mov     [esi+1ah], eax
mov     eax, [esi]
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+0eh]
test    eax, eax
lea     ecx, [eax+1]
mov     [esi+0eh], ecx
jnz     short loc_48f18f
mov     eax, [esi+16h]
push    eax
call    ds:globallock
mov     [esi+1ah], eax
mov     eax, [esi]
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+0eh]
test    eax, eax
jz      short loc_48f1b0
dec     eax
mov     [esi+0eh], eax
cmp     dword ptr [esi+0eh], 0
jnz     short loc_48f1c7
mov     eax, [esi+16h]
push    eax
call    ds:globalunlock
mov     dword ptr [esi+1ah], 0
pop     esi
retn
mov     eax, [esp+arg_4]
test    eax, eax
jz      short loc_48f1ea
mov     edx, [esp+arg_0]
cmp     [edx], eax
jb      short loc_48f1ea
dec     eax
mov     cl, [edx+0ch]
shl     eax, cl
add     eax, [edx+1ah]
retn
xor     eax, eax
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
mov     eax, [esi+16h]
push    eax
call    sub_45bbc0
add     esp, 4
mov     ebp, [esi]
mov     dl, [esi+0ch]
mov     ebx, ebp
mov     cl, dl
mov     edi, 1
shl     ebx, cl
cmp     ebx, eax
jle     short loc_48f25a
mov     eax, ebp
push    2
shr     eax, 2
add     eax, ebp
shl     eax, cl
push    eax
mov     ecx, [esi+16h]
push    ecx
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jnz     short loc_48f247
push    2
mov     eax, [esi+16h]
push    ebx
push    eax
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jz      short loc_48f251
pop     ebp
mov     [esi+16h], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
xor     edi, edi
pop     ebp
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
jge     short loc_48f282
cmp     eax, 20h
jle     short loc_48f282
mov     ecx, eax
sar     eax, 2
sub     ecx, eax
cmp     ecx, ebx
jle     short loc_48f282
push    2
mov     eax, [esi+16h]
push    ebx
push    eax
call    sub_45b9b0
add     esp, 0ch
test    eax, eax
jz      short loc_48f282
mov     [esi+16h], eax
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     edx, [esp+arg_c]
push    esi
push    edi
mov     ecx, edx
shr     ecx, 10h
mov     eax, [esp+8+arg_0]
mov     eax, [eax+12h]
test    eax, eax
jz      short loc_48f2b9
mov     ecx, [esp+8+arg_4]
push    edx
mov     edx, [esp+0ch+arg_8]
push    edx
push    ecx
call    eax
add     esp, 0ch
pop     edi
pop     esi
retn
movzx   ecx, cx
lea     eax, [ecx-1]
cmp     eax, 5
ja      short def_48f2c4
jmp     ds:jpt_48f2c4[eax*4]
mov     esi, [esp+8+arg_4]
mov     edi, [esp+8+arg_8]
movzx   eax, dx
add     esi, eax
add     edi, eax
sub     eax, eax
repe cmpsb
jz      loc_48f3a7
sbb     eax, eax
pop     edi
sbb     eax, 0ffffffffh
pop     esi
retn
movzx   eax, dx
mov     edx, [esp+8+arg_4]
mov     esi, [esp+8+arg_8]
mov     cl, [eax+edx]
mov     al, [eax+esi]
cmp     al, cl
jbe     short loc_48f309
mov     eax, 0ffffffffh
pop     edi
pop     esi
retn
sub     al, cl
pop     edi
pop     esi
cmp     al, 1
sbb     eax, eax
inc     eax
retn
movzx   eax, dx
mov     edx, [esp+8+arg_4]
mov     esi, [esp+8+arg_8]
mov     cx, [eax+edx]
mov     ax, [eax+esi]
cmp     ax, cx
jbe     short loc_48f333
mov     eax, 0ffffffffh
pop     edi
pop     esi
retn
sub     ax, cx
pop     edi
cmp     ax, 1
pop     esi
sbb     eax, eax
inc     eax
retn
movzx   eax, dx
mov     edx, [esp+8+arg_4]
mov     esi, [esp+8+arg_8]
mov     ecx, [eax+edx]
mov     eax, [eax+esi]
cmp     ecx, eax
jnb     short loc_48f35d
mov     eax, 0ffffffffh
pop     edi
pop     esi
retn
sub     ecx, eax
pop     edi
pop     esi
cmp     ecx, 1
sbb     eax, eax
inc     eax
retn
movzx   eax, dx
mov     esi, [esp+8+arg_4]
mov     edx, [esp+8+arg_8]
add     esi, eax
add     edx, eax
xor     eax, eax
xor     ecx, ecx
mov     ax, [esi]
mov     cx, [edx]
sub     eax, ecx
jnz     short loc_48f3a7
add     esi, 2
add     edx, 2
xor     eax, eax
xor     ecx, ecx
mov     ax, [esi]
mov     cx, [edx]
sub     eax, ecx
jnz     short loc_48f3a7
xor     eax, eax
xor     ecx, ecx
mov     ax, [esi+2]
mov     cx, [edx+2]
sub     eax, ecx
pop     edi
pop     esi
retn
mov     ax, [esp+arg_4]
push    esi
movzx   edx, ax
shr     ax, 1
mov     esi, [esp+4+arg_0]
test    ax, ax
mov     [esi+4], edx
mov     word ptr [esi+0ch], 0
jz      short loc_48f3fc
shr     ax, 1
inc     word ptr [esi+0ch]
test    ax, ax
jnz     short loc_48f3ef
mov     cx, [esi+0ch]
mov     ax, 1
shl     ax, cl
movzx   eax, ax
cmp     eax, edx
jnb     short loc_48f414
inc     cx
mov     [esi+0ch], cx
mov     eax, 1
mov     cl, [esi+0ch]
shl     eax, cl
mov     [esi+8], eax
pop     esi
retn
push    edi
xor     eax, eax
mov     edi, [esp+4+arg_0]
mov     ecx, 7
rep stosd
stosw
mov     eax, 1
pop     edi
retn
sub     esp, 154h
xor     eax, eax
mov     ecx, 55h
push    edi
lea     edi, [esp+158h+pvparam]
push    eax
rep stosd
mov     [esp+15ch+pvparam], 154h
lea     eax, [esp+15ch+pvparam]
push    eax
push    0
push    29h
call    ds:systemparametersinfoa
mov     eax, [esp+158h+var_150]
pop     edi
add     esp, 154h
retn
call    sub_4892f0
test    eax, eax
jz      short loc_48f4a2
call    sub_48f450
add     eax, 2
retn
mov     eax, 1
retn
call    sub_4892f0
test    eax, eax
jz      short loc_48f4c2
call    sub_48f450
add     eax, 3
retn
mov     eax, 1
retn
sub     esp, 154h
push    edi
call    sub_4892f0
test    eax, eax
jz      short loc_48f50b
lea     edi, [esp+158h+pvparam]
xor     eax, eax
mov     ecx, 55h
push    eax
rep stosd
mov     [esp+15ch+pvparam], 154h
lea     eax, [esp+15ch+pvparam]
push    eax
push    0
push    29h
call    ds:systemparametersinfoa
mov     eax, [esp+158h+var_fc]
jmp     short loc_48f521
mov     eax, dword_4aeb48
test    eax, eax
jnz     short loc_48f521
push    8
push    0
call    sub_4494e0
add     esp, 8
inc     eax
pop     edi
mov     dword_4aeb48, eax
add     esp, 154h
retn
call    sub_48f4d0
mov     ecx, dword_4aeb40
test    ecx, ecx
jz      short loc_48f549
mov     edx, eax
sub     edx, ecx
mov     dword_4aeb44, edx
mov     dword_4aeb40, eax
retn
push    esi
mov     esi, [esp+4+hwnd]
push    esi
call    ds:iswindow
test    eax, eax
jz      short loc_48f577
push    offset awindoid
push    esi
call    ds:getpropa
test    eax, eax
jz      short loc_48f577
mov     eax, 1
pop     esi
retn
xor     eax, eax
pop     esi
retn
sub     esp, 18h
push    ebx
push    esi
mov     ebx, [esp+20h+arg_10]
push    edi
mov     esi, [esp+24h+hwnd]
push    ebp
push    esi
mov     dword ptr [ebx], 0
call    ds:iswindow
test    eax, eax
jnz     short loc_48f5aa
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     ebp, [esp+28h+msg]
lea     ecx, [ebp-0ch]
cmp     ecx, 95h
ja      short def_48f5c1
xor     eax, eax
mov     al, ds:byte_48f7d8[ecx]
jmp     ds:jpt_48f5c1[eax*4]
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
call    sub_4892f0
test    eax, eax
jz      short loc_48f5e5
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     edi, [esp+28h+lparam]
mov     eax, [esp+28h+wparam]
push    edi
push    eax
push    ebp
push    esi
call    ds:defwindowproca
call    sub_4892f0
test    eax, eax
jz      loc_48f7a0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
push    offset aactive
push    esi
call    ds:removepropa
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
call    sub_4892f0
test    eax, eax
jz      short loc_48f637
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     edi, [esp+28h+lparam]
push    0fffffff0h
push    esi
call    ds:getwindowlonga
test    eax, 40000h
jz      short loc_48f676
push    20h
mov     ebx, ds:getsystemmetrics
call    ebx
mov     esi, eax
push    21h
neg     esi
call    ebx
neg     eax
push    eax
push    esi
push    edi
call    ds:inflaterect
call    sub_48f4d0
dec     eax
add     [edi+4], eax
jmp     loc_48f7a9
call    sub_48f4d0
add     [edi+4], eax
call    sub_48f490
add     [edi], eax
call    sub_48f4b0
sub     [edi+0ch], eax
call    sub_48f490
sub     [edi+8], eax
jmp     loc_48f7a9
call    sub_4892f0
test    eax, eax
jz      short loc_48f6ad
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     edi, [esp+28h+lparam]
movsx   eax, di
shr     edi, 10h
mov     [esp+28h+rc.left], eax
movsx   eax, di
mov     edx, [esp+28h+rc.left]
push    eax
push    edx
push    esi
call    sub_4904d0
add     esp, 0ch
mov     [ebx], eax
jmp     loc_48f7a9
mov     eax, [esp+28h+wparam]
mov     ebp, ds:setpropa
push    eax
push    offset aactive
push    esi
call    ebp
call    sub_4892f0
test    eax, eax
jnz     short loc_48f6f9
push    esi
call    sub_48fac0
add     esp, 4
mov     dword ptr [ebx], 1
jmp     loc_48f7a9
call    sub_4892f0
test    eax, eax
jz      short loc_48f717
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
cmp     [esp+28h+wparam], 2
mov     edi, [esp+28h+lparam]
jnz     short loc_48f78c
movsx   eax, di
lea     edx, [esp+28h+rc]
mov     [esp+28h+pt.x], eax
mov     eax, edi
push    edx
shr     eax, 10h
push    esi
movsx   ecx, ax
mov     [esp+30h+pt.y], ecx
call    sub_490460
mov     edx, [esp+30h+pt.x]
mov     ecx, [esp+30h+pt.y]
lea     eax, [esp+30h+rc]
add     esp, 8
push    ecx
push    edx
push    eax
call    ds:ptinrect
test    eax, eax
jz      short loc_48f78c
mov     eax, [esp+28h+pt.x]
mov     ecx, [esp+28h+pt.y]
lea     edx, [esp+28h+rc]
push    ecx
push    eax
push    edx
push    esi
call    sub_490320
add     esp, 10h
test    eax, eax
jz      short loc_48f7a9
push    edi
push    0f060h
push    112h
push    esi
call    ds:sendmessagea
jmp     short loc_48f7a9
mov     eax, [esp+28h+wparam]
push    edi
push    eax
push    ebp
push    esi
mov     ebp, ds:defwindowproca
call    ebp
mov     [ebx], eax
jmp     short loc_48f7a9
push    esi
call    sub_48fac0
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+hwnd]
push    edi
push    ebp
push    esi
call    ds:iswindow
test    eax, eax
jnz     short loc_48f892
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
mov     edi, [esp+14h+msg]
cmp     edi, 86h
jnz     short loc_48f8ad
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
lea     eax, [esp+14h+var_4]
mov     ebp, [esp+14h+lparam]
mov     ebx, [esp+14h+wparam]
push    eax
push    ebp
push    ebx
push    edi
push    esi
call    sub_48f580
add     esp, 14h
test    eax, eax
jz      short loc_48f8d8
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
lea     ecx, [edi-18h]
cmp     ecx, 6ah
ja      short def_48f8e8
xor     eax, eax
mov     al, ds:byte_48fa08[ecx]
jmp     ds:jpt_48f8e8[eax*4]
test    ebx, ebx
jz      short def_48f8e8
push    offset ahidden
push    esi
call    ds:removepropa
push    ebp
push    ebx
push    edi
push    esi
call    ds:defwindowproca
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
push    4
push    esi
call    ds:getwindow
mov     edi, eax
test    ebx, ebx
jz      short loc_48f956
test    edi, edi
jz      short loc_48f931
push    edi
call    ds:isiconic
test    eax, eax
jnz     short loc_48f97e
push    offset ahidden
push    esi
call    ds:getpropa
test    eax, eax
jnz     short loc_48f97e
push    4
push    esi
call    ds:showwindow
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
push    esi
call    ds:iswindowvisible
test    eax, eax
jz      short loc_48f97e
push    0
push    esi
call    ds:showwindow
test    edi, edi
jz      short loc_48f97e
push    0
push    0
push    86h
push    edi
call    ds:sendmessagea
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
push    1
push    offset awindoid
push    esi
call    ds:setpropa
push    1
push    offset aactive
push    esi
call    ds:setpropa
push    ebp
push    ebx
push    edi
push    esi
call    ds:defwindowproca
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
push    offset awindoid
push    esi
call    ds:removepropa
push    offset ahidden
push    esi
call    ds:removepropa
push    offset aheight
push    esi
call    ds:removepropa
push    ebp
push    ebx
push    edi
push    esi
call    ds:defwindowproca
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    10h
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_c]
mov     dword ptr [esi], 0
cmp     dword ptr [eax], 0
jnz     short loc_48fab0
xor     ecx, ecx
mov     eax, [esp+4+arg_8]
mov     cx, [eax]
push    ecx
call    sub_48f550
add     esp, 4
test    eax, eax
jz      short loc_48fab0
mov     dword ptr [esi], 1
mov     eax, [esi]
pop     esi
retn
mov     eax, [esp+hwnd]
sub     esp, 0d4h
push    ebx
push    esi
push    edi
push    ebp
push    eax
call    ds:iswindowvisible
test    eax, eax
jz      loc_48fe0d
lea     eax, [esp+0e4h+rect]
mov     ecx, [esp+0e4h+hwnd]
push    eax
push    ecx
call    ds:getwindowrect
lea     ecx, [esp+0e4h+rc]
mov     eax, [esp+0e4h+hwnd]
push    ecx
push    eax
call    sub_490400
lea     ecx, [esp+0ech+var_a4]
mov     edx, [esp+0ech+hwnd]
add     esp, 8
push    ecx
push    edx
call    sub_490460
mov     ecx, [esp+0ech+hwnd]
add     esp, 8
push    offset aactive
push    ecx
call    ds:getpropa
mov     ecx, [esp+0e4h+hwnd]
mov     [esp+0e4h+var_c8], eax
push    ecx
call    ds:getwindowdc
mov     ebx, eax
push    0
mov     ecx, [esp+0e8h+rect.top]
mov     eax, [esp+0e8h+rect.left]
push    ecx
mov     ebp, ds:setwindoworgex
push    eax
push    ebx
call    ebp
push    6
call    ds:getsyscolor
push    eax
call    ds:createsolidbrush
mov     esi, eax
test    esi, esi
jz      loc_48fc15
mov     eax, [esp+0e4h+hwnd]
push    0fffffff0h
push    eax
mov     ebp, ds:getwindowlonga
call    ebp
test    eax, 40000h
jz      short loc_48fbcd
push    20h
mov     ebp, ds:getsystemmetrics
call    ebp
mov     edi, eax
push    21h
call    ebp
mov     ebp, eax
lea     ecx, [esp+0e4h+rect]
mov     eax, [esp+0e4h+var_c8]
push    eax
push    esi
push    ecx
push    ebx
call    sub_490040
add     esp, 10h
mov     eax, 1
sub     eax, ebp
lea     ecx, [esp+0e4h+rect]
push    eax
mov     eax, 1
sub     eax, edi
mov     edi, ds:inflaterect
push    eax
push    ecx
call    edi
jmp     short loc_48fbd3
mov     edi, ds:inflaterect
lea     eax, [esp+0e4h+rect]
push    esi
push    eax
mov     ebp, ds:framerect
push    ebx
call    ebp
lea     ecx, [esp+0e4h+rc]
push    esi
push    ecx
push    ebx
call    ebp
lea     eax, [esp+0e4h+var_a4]
push    1
push    1
push    eax
call    edi
lea     eax, [esp+0e4h+var_a4]
push    esi
push    eax
push    ebx
call    ebp
lea     eax, [esp+0e4h+var_a4]
push    0ffffffffh
push    0ffffffffh
push    eax
call    edi
push    esi
mov     esi, ds:deleteobject
call    esi
jmp     short loc_48fc21
mov     edi, ds:inflaterect
mov     esi, ds:deleteobject
lea     eax, [esp+0e4h+var_a4]
push    0
push    eax
push    ebx
call    sub_48fe20
lea     eax, [esp+0f0h+rc]
add     esp, 0ch
push    0ffffffffh
push    0ffffffffh
push    eax
call    edi
call    sub_48f4d0
dec     eax
add     [esp+0e4h+rc.left], eax
mov     eax, 3
cmp     [esp+0e4h+var_c8], 1
adc     eax, 0ffffffffh
push    eax
call    ds:getsyscolor
push    eax
call    ds:createsolidbrush
mov     edi, eax
test    edi, edi
jz      short loc_48fc79
lea     eax, [esp+0e4h+rc]
push    edi
push    eax
mov     ebp, ds:fillrect
push    ebx
call    ebp
push    edi
call    esi
lea     eax, [esp+0e4h+string]
push    40h
mov     ecx, [esp+0e8h+hwnd]
push    eax
push    ecx
mov     ebp, ds:getwindowtexta
call    ebp
mov     ebp, eax
test    ebp, ebp
jz      loc_48fdfe
lea     eax, [esp+0e4h+var_5c]
push    8
push    ebx
push    eax
call    sub_4492b0
lea     edi, [esp+0f0h+var_78]
add     esp, 0ch
mov     esi, eax
mov     ecx, 7
rep movsd
lea     esi, [esp+0e4h+var_78]
lea     edi, [esp+0e4h+var_94]
mov     ecx, 7
push    0
rep movsd
push    ebx
call    ds:settextalign
lea     eax, [esp+0e4h+string]
push    ebp
push    eax
push    ebx
call    sub_449fc0
mov     [esp+0f0h+var_d0], eax
mov     eax, [esp+0f0h+rc.right]
sub     eax, [esp+0f0h+rc.left]
add     esp, 0ch
sub     eax, 2
mov     [esp+0e4h+var_cc], eax
cmp     eax, [esp+0e4h+var_d0]
jge     loc_48fd9d
mov     eax, dword_4aeb4c
mov     dword ptr [esp+0e4h+var_78], eax
lea     eax, [esp+0e4h+var_78]
push    eax
call    ds:lstrlena
mov     [esp+0e4h+var_d2], ax
lea     ecx, [esp+ebp+0e4h+string]
mov     esi, ecx
mov     [esp+0e4h+var_5c], ecx
mov     eax, esi
lea     ecx, [esp+0e4h+string]
sub     eax, ecx
cmp     eax, 1
jle     short loc_48fd40
dec     esi
jmp     short loc_48fd47
lea     esi, [esp+0e4h+string]
lea     eax, [esp+0e4h+string]
cmp     esi, eax
jbe     short loc_48fd9d
movsx   edi, [esp+0e4h+var_d2]
mov     eax, [esp+0e4h+var_5c]
sub     eax, esi
cmp     eax, edi
jle     short loc_48fd2d
push    eax
lea     eax, [esp+0e8h+var_78]
push    eax
push    esi
call    sub_47f9f0
lea     ecx, [esp+0f0h+string]
add     esp, 0ch
mov     eax, esi
sub     eax, ecx
lea     ecx, [esp+0e4h+string]
lea     ebp, [eax+edi]
push    ebp
push    ecx
push    ebx
call    sub_449fc0
mov     [esp+0f0h+var_d0], eax
add     esp, 0ch
cmp     [esp+0e4h+var_cc], eax
jl      short loc_48fd2d
cmp     [esp+0e4h+var_c8], 1
sbb     eax, eax
and     eax, 0ah
add     eax, 9
push    eax
call    ds:getsyscolor
push    eax
push    ebx
call    ds:settextcolor
mov     ecx, [esp+0e4h+rc.top]
push    ebp
dec     cx
lea     eax, [esp+0e8h+string]
movsx   edx, cx
push    eax
push    edx
mov     eax, [esp+0f0h+rc.right]
sub     eax, [esp+0f0h+var_d0]
mov     ebp, ds:textouta
add     eax, [esp+0f0h+rc.left]
cdq
sub     eax, edx
sar     eax, 1
push    eax
push    ebx
call    ebp
lea     ecx, [esp+0e4h+var_94]
lea     eax, [esp+0e4h+var_5c]
push    ecx
push    ebx
push    eax
call    sub_449700
add     esp, 0ch
mov     eax, [esp+0e4h+hwnd]
push    ebx
push    eax
call    ds:releasedc
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0d4h
retn
sub     esp, 14h
push    ebx
push    esi
push    edi
push    ebp
push    0
call    ds:getstockobject
mov     ebx, eax
push    0fh
mov     esi, ds:getsyscolor
call    esi
push    eax
mov     edi, ds:createsolidbrush
call    edi
mov     [esp+24h+hbr], eax
push    10h
call    esi
push    eax
call    edi
mov     esi, eax
mov     ebp, [esp+24h+lprc]
mov     eax, [esp+24h+hbr]
mov     edi, [esp+24h+hdc]
push    eax
push    ebp
push    edi
call    ds:fillrect
cmp     [esp+24h+arg_8], 0
push    ebx
push    ebp
push    edi
jnz     short loc_48fe82
call    sub_48ffd0
add     esp, 0ch
push    esi
push    ebp
push    edi
call    sub_48ff60
jmp     short loc_48fe92
call    sub_48ff60
add     esp, 0ch
push    esi
push    ebp
push    edi
call    sub_48ffd0
lea     eax, [esp+30h+rc]
add     esp, 0ch
push    3
push    7
push    0
push    0
push    eax
call    ds:setrect
cmp     [esp+24h+arg_8], 0
jz      short loc_48febe
lea     eax, [esp+24h+rc]
push    1
push    1
push    eax
call    ds:offsetrect
mov     eax, [ebp+0ch]
sub     eax, [ebp+4]
sub     eax, 4
cdq
sub     eax, edx
sar     eax, 1
inc     eax
push    eax
mov     eax, [ebp+8]
sub     eax, [ebp+0]
lea     ecx, [esp+28h+rc]
sub     eax, 8
cdq
sub     eax, edx
sar     eax, 1
inc     eax
push    eax
push    ecx
call    ds:offsetrect
mov     ecx, [ebp+4]
mov     edx, [ebp+0]
lea     eax, [esp+24h+rc]
push    ecx
push    edx
push    eax
call    ds:offsetrect
lea     ecx, [esp+24h+rc]
push    esi
push    ecx
push    edi
call    ds:fillrect
lea     ecx, [esp+24h+rc]
push    0ffffffffh
push    0ffffffffh
push    ecx
call    ds:offsetrect
lea     ecx, [esp+24h+rc]
push    ebx
push    ecx
push    edi
call    ds:fillrect
push    4
call    ds:getstockobject
lea     ecx, [esp+24h+rc]
push    eax
push    ecx
push    edi
call    ds:framerect
mov     ecx, [esp+24h+hbr]
mov     edi, ds:deleteobject
push    ecx
call    edi
push    esi
call    edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 14h
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_4]
push    edi
push    ebp
mov     ecx, [esi+8]
mov     eax, [esi+0ch]
mov     edx, [esi+4]
push    eax
push    ecx
push    edx
dec     ecx
lea     eax, [esp+2ch+rc]
push    ecx
push    eax
call    ds:setrect
mov     ebp, [esp+20h+hbr]
lea     ecx, [esp+20h+rc]
mov     ebx, [esp+20h+hdc]
push    ebp
push    ecx
mov     edi, ds:fillrect
push    ebx
call    edi
mov     eax, [esi+0ch]
mov     ecx, [esi+8]
push    eax
mov     edx, [esi]
push    ecx
dec     eax
lea     ecx, [esp+28h+rc]
push    eax
push    edx
push    ecx
call    ds:setrect
lea     ecx, [esp+20h+rc]
push    ebp
push    ecx
push    ebx
call    edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_4]
push    edi
push    ebp
mov     ecx, [esi+4]
mov     edx, [esi+8]
lea     eax, [ecx+1]
push    eax
push    edx
lea     eax, [esp+28h+rc]
push    ecx
mov     ecx, [esi]
push    ecx
push    eax
call    ds:setrect
mov     ebp, [esp+20h+hbr]
lea     ecx, [esp+20h+rc]
mov     ebx, [esp+20h+hdc]
push    ebp
push    ecx
mov     edi, ds:fillrect
push    ebx
call    edi
mov     ecx, [esi]
mov     eax, [esi+0ch]
push    eax
mov     esi, [esi+4]
lea     edx, [ecx+1]
lea     eax, [esp+24h+rc]
push    edx
push    esi
push    ecx
push    eax
call    ds:setrect
lea     eax, [esp+20h+rc]
push    ebp
push    eax
push    ebx
call    edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     esi, ds:getsystemmetrics
push    ebp
push    20h
call    esi
mov     [esp+2ch+var_18], eax
push    21h
call    esi
mov     edi, [esp+2ch+lprc]
mov     esi, [esp+2ch+hdc]
mov     [esp+2ch+var_14], eax
mov     eax, [esp+2ch+hbr]
push    eax
push    edi
push    esi
call    ds:framerect
cmp     [esp+2ch+arg_c], 1
mov     eax, 0bh
adc     eax, 0ffffffffh
push    eax
call    ds:getsyscolor
push    eax
mov     ebp, ds:createsolidbrush
call    ebp
mov     ebx, eax
test    ebx, ebx
jz      loc_49030f
call    sub_48f4d0
mov     ecx, [esp+2ch+var_18]
lea     ebp, [ecx+eax-3]
call    sub_48f4d0
mov     ecx, [esp+2ch+var_14]
mov     edx, [edi+4]
lea     eax, [ecx+eax-3]
lea     ecx, [esp+2ch+rc]
mov     [esp+2ch+var_1c], eax
mov     eax, [edi]
mov     [ecx], eax
mov     eax, [edi+8]
mov     [ecx+4], edx
mov     edx, [edi+0ch]
push    0ffffffffh
mov     [ecx+8], eax
push    0ffffffffh
mov     [ecx+0ch], edx
mov     eax, [esp+34h+rc.top]
lea     ecx, [esp+34h+rc]
add     eax, [esp+34h+var_14]
push    ecx
mov     [esp+38h+rc.bottom], eax
call    ds:inflaterect
lea     ecx, [esp+2ch+rc]
push    ebx
push    ecx
push    esi
call    ds:fillrect
mov     ecx, [esp+2ch+rc.top]
push    0
mov     eax, [esp+30h+rc.left]
push    ecx
add     eax, ebp
push    eax
push    esi
call    ds:movetoex
mov     ecx, [esp+2ch+rc.bottom]
mov     eax, [esp+2ch+rc.left]
push    ecx
add     eax, ebp
push    eax
push    esi
call    ds:lineto
mov     ecx, [esp+2ch+rc.top]
push    0
mov     eax, [esp+30h+rc.right]
push    ecx
sub     eax, ebp
push    eax
push    esi
call    ds:movetoex
mov     ecx, [esp+2ch+rc.bottom]
mov     eax, [esp+2ch+rc.right]
push    ecx
sub     eax, ebp
push    eax
push    esi
call    ds:lineto
lea     ecx, [esp+2ch+rc]
mov     eax, [edi]
mov     edx, [edi+4]
mov     [ecx], eax
mov     eax, [edi+8]
mov     [ecx+4], edx
mov     edx, [edi+0ch]
push    0ffffffffh
push    0ffffffffh
mov     [ecx+8], eax
mov     [ecx+0ch], edx
lea     ecx, [esp+34h+rc]
mov     eax, [esp+34h+rc.left]
push    ecx
add     eax, [esp+38h+var_18]
mov     [esp+38h+rc.right], eax
call    ds:inflaterect
lea     ecx, [esp+2ch+rc]
push    ebx
push    ecx
push    esi
call    ds:fillrect
mov     eax, [esp+2ch+rc.top]
push    0
add     eax, [esp+30h+var_1c]
mov     ecx, [esp+30h+rc.left]
push    eax
push    ecx
push    esi
call    ds:movetoex
mov     eax, [esp+2ch+rc.top]
mov     ecx, [esp+2ch+rc.right]
add     eax, [esp+2ch+var_1c]
push    eax
push    ecx
push    esi
call    ds:lineto
mov     eax, [esp+2ch+rc.bottom]
push    0
sub     eax, [esp+30h+var_1c]
mov     ecx, [esp+30h+rc.left]
push    eax
push    ecx
push    esi
call    ds:movetoex
mov     eax, [esp+2ch+rc.bottom]
mov     ecx, [esp+2ch+rc.right]
sub     eax, [esp+2ch+var_1c]
push    eax
push    ecx
push    esi
call    ds:lineto
lea     ecx, [esp+2ch+rc]
mov     eax, [edi]
mov     edx, [edi+4]
mov     [ecx], eax
mov     eax, [edi+8]
mov     [ecx+4], edx
mov     edx, [edi+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
mov     eax, [esp+2ch+rc.bottom]
sub     eax, [esp+2ch+var_14]
lea     ecx, [esp+2ch+rc]
push    0ffffffffh
mov     [esp+30h+rc.top], eax
push    0ffffffffh
push    ecx
call    ds:inflaterect
lea     ecx, [esp+2ch+rc]
push    ebx
push    ecx
push    esi
call    ds:fillrect
mov     ecx, [esp+2ch+rc.top]
push    0
mov     eax, [esp+30h+rc.left]
push    ecx
add     eax, ebp
push    eax
push    esi
call    ds:movetoex
mov     ecx, [esp+2ch+rc.bottom]
mov     eax, [esp+2ch+rc.left]
push    ecx
add     eax, ebp
push    eax
push    esi
call    ds:lineto
mov     ecx, [esp+2ch+rc.top]
push    0
mov     eax, [esp+30h+rc.right]
push    ecx
sub     eax, ebp
push    eax
push    esi
call    ds:movetoex
mov     ecx, [esp+2ch+rc.bottom]
mov     eax, [esp+2ch+rc.right]
push    ecx
sub     eax, ebp
push    eax
push    esi
call    ds:lineto
lea     ecx, [esp+2ch+rc]
mov     eax, [edi]
mov     edx, [edi+4]
mov     ebp, [edi+8]
mov     [ecx], eax
mov     eax, [edi+0ch]
push    0ffffffffh
mov     [ecx+4], edx
push    0ffffffffh
mov     [ecx+8], ebp
mov     [ecx+0ch], eax
mov     eax, [esp+34h+rc.right]
sub     eax, [esp+34h+var_18]
mov     [esp+34h+rc.left], eax
lea     eax, [esp+34h+rc]
push    eax
call    ds:inflaterect
lea     ecx, [esp+2ch+rc]
push    ebx
push    ecx
push    esi
call    ds:fillrect
mov     eax, [esp+2ch+rc.top]
push    0
add     eax, [esp+30h+var_1c]
mov     ecx, [esp+30h+rc.left]
push    eax
push    ecx
push    esi
call    ds:movetoex
mov     eax, [esp+2ch+rc.top]
mov     ecx, [esp+2ch+rc.right]
add     eax, [esp+2ch+var_1c]
push    eax
push    ecx
push    esi
call    ds:lineto
mov     eax, [esp+2ch+rc.bottom]
push    0
sub     eax, [esp+30h+var_1c]
mov     ecx, [esp+30h+rc.left]
push    eax
push    ecx
push    esi
call    ds:movetoex
mov     eax, [esp+2ch+rc.bottom]
mov     ecx, [esp+2ch+rc.right]
sub     eax, [esp+2ch+var_1c]
push    eax
push    ecx
push    esi
call    ds:lineto
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn
sub     esp, 24h
push    ebx
push    esi
mov     esi, [esp+2ch+hwnd]
push    edi
push    ebp
push    esi
call    ds:getwindowdc
mov     edi, eax
lea     eax, [esp+34h+pt]
push    eax
push    edi
call    ds:getdcorgex
mov     ecx, [esp+34h+pt.y]
push    0
mov     eax, [esp+38h+pt.x]
push    ecx
push    eax
xor     ebx, ebx
push    edi
call    ds:setwindoworgex
mov     eax, [esp+34h+arg_8]
mov     ecx, [esp+34h+arg_c]
mov     [esp+34h+msg.pt.x], eax
push    esi
mov     [esp+38h+msg.pt.y], ecx
call    sub_490870
mov     ebp, [esp+38h+lprc]
add     esp, 4
mov     eax, [esp+34h+msg.pt.x]
mov     ecx, [esp+34h+msg.pt.y]
push    ecx
push    eax
push    ebp
call    ds:ptinrect
cmp     eax, ebx
jz      short loc_490399
cmp     ebx, 1
sbb     ebx, ebx
neg     ebx
push    ebx
push    ebp
push    edi
call    sub_48fe20
add     esp, 0ch
lea     eax, [esp+34h+msg]
push    0
push    0
push    esi
push    eax
call    ds:getmessagea
mov     eax, [esp+34h+msg.message]
cmp     eax, 1fh
jz      short loc_4903c6
cmp     eax, 202h
jz      short loc_4903c6
push    1
call    ds:getasynckeystate
test    ah, 80h
jnz     short loc_490372
test    ebx, ebx
jz      short loc_4903df
push    0
push    ebp
push    edi
call    sub_48fe20
add     esp, 0ch
cmp     [esp+34h+msg.message], 1fh
jnz     short loc_4903df
xor     ebx, ebx
call    sub_490890
push    edi
push    esi
call    ds:releasedc
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
push    ebx
push    esi
mov     esi, [esp+8+lprect]
push    edi
mov     edi, [esp+0ch+hwnd]
push    esi
push    edi
call    ds:getwindowrect
call    sub_48f4d0
mov     ecx, [esi+4]
push    0fffffff0h
add     ecx, eax
push    edi
mov     [esi+0ch], ecx
call    ds:getwindowlonga
test    eax, 40000h
jz      short loc_490458
push    20h
mov     edi, ds:getsystemmetrics
call    edi
lea     ebx, [eax-1]
push    21h
call    edi
neg     ebx
dec     eax
push    eax
push    0
push    esi
call    ds:offsetrect
push    0
push    ebx
push    esi
call    ds:inflaterect
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+lprect]
push    edi
mov     edi, [esp+0ch+hwnd]
push    esi
push    edi
call    ds:getwindowrect
call    sub_48f4d0
mov     ecx, [esi+4]
add     ecx, eax
dec     ecx
mov     [esi+0ch], ecx
call    sub_48f4d0
mov     ecx, [esi]
push    0fffffff0h
add     ecx, eax
push    edi
dec     ecx
inc     dword ptr [esi+4]
mov     [esi+8], ecx
inc     dword ptr [esi]
call    ds:getwindowlonga
test    eax, 40000h
jz      short loc_4904be
push    20h
mov     ebx, ds:getsystemmetrics
call    ebx
lea     edi, [eax-1]
push    21h
call    ebx
dec     eax
push    eax
push    edi
push    esi
call    ds:offsetrect
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
lea     eax, [esp+10h+rc]
push    ebx
push    esi
push    edi
mov     esi, [esp+1ch+hwnd]
push    ebp
push    eax
push    esi
call    sub_490400
mov     edx, [esp+28h+pt.x]
mov     ecx, [esp+28h+pt.y]
lea     eax, [esp+28h+rc]
add     esp, 8
mov     edi, ds:ptinrect
push    ecx
push    edx
push    eax
call    edi
mov     ebx, [esp+20h+pt.x]
test    eax, eax
jz      short loc_490515
mov     eax, 2
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
lea     eax, [esp+20h+rc]
mov     ebp, ds:getclientrect
push    eax
push    esi
call    ebp
lea     ecx, [esp+20h+rc]
mov     ebp, ds:clienttoscreen
push    ecx
push    esi
call    ebp
lea     ecx, [esp+20h+rc.right]
push    ecx
push    esi
call    ebp
mov     eax, [esp+20h+pt.x]
mov     ecx, [esp+20h+pt.y]
lea     edx, [esp+20h+rc]
push    ecx
push    eax
push    edx
call    edi
test    eax, eax
jz      short loc_49055b
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
lea     eax, [esp+20h+rc]
mov     ebp, ds:getwindowrect
push    eax
push    esi
call    ebp
mov     edx, [esp+20h+pt.x]
mov     ecx, [esp+20h+pt.y]
lea     eax, [esp+20h+rc]
push    ecx
push    edx
push    eax
call    edi
test    eax, eax
jz      loc_4906cb
push    0fffffff0h
push    esi
call    ds:getwindowlonga
test    eax, 40000h
jz      loc_4906be
push    20h
mov     edi, ds:getsystemmetrics
call    edi
mov     esi, eax
push    21h
call    edi
mov     edi, eax
call    sub_48f4d0
lea     ebp, [esi+eax-2]
call    sub_48f4d0
lea     ecx, [edi+eax-2]
mov     eax, [esp+20h+rc.top]
add     eax, edi
cmp     eax, [esp+20h+pt.y]
jl      short loc_4905fd
mov     eax, [esp+20h+rc.left]
add     eax, ebp
cmp     eax, ebx
jl      short loc_4905dd
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+rc.right]
sub     eax, ebp
cmp     eax, ebx
mov     eax, 0eh
jle     loc_4906d0
pop     ebp
mov     eax, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+rc.bottom]
sub     eax, edi
cmp     eax, [esp+20h+pt.y]
mov     eax, [esp+20h+rc.left]
jg      short loc_490640
add     eax, ebp
cmp     eax, ebx
jl      short loc_490620
mov     eax, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+rc.right]
sub     eax, ebp
cmp     eax, ebx
mov     eax, 11h
jle     loc_4906d0
pop     ebp
mov     eax, 0fh
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
add     eax, esi
cmp     eax, ebx
jl      short loc_49067d
mov     eax, [esp+20h+rc.top]
add     eax, ecx
cmp     eax, [esp+20h+pt.y]
jl      short loc_49065f
mov     eax, 0dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+rc.bottom]
sub     eax, ecx
cmp     eax, [esp+20h+pt.y]
mov     eax, 10h
jle     short loc_4906d0
pop     ebp
mov     eax, 0ah
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+rc.right]
sub     eax, esi
cmp     eax, ebx
jg      short loc_4906cb
mov     eax, [esp+20h+rc.top]
add     eax, ecx
cmp     eax, [esp+20h+pt.y]
jl      short loc_4906a0
mov     eax, 0eh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+rc.bottom]
sub     eax, ecx
cmp     eax, [esp+20h+pt.y]
mov     eax, 11h
jle     short loc_4906d0
pop     ebp
mov     eax, 0bh
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, 12h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    esi
push    0
push    0eh
push    offset dword_4a9f00
call    sub_48e770
add     esp, 0ch
mov     esi, eax
call    sub_48f530
mov     eax, esi
pop     esi
retn
mov     eax, [esp+arg_8]
sub     esp, 10h
mov     [esp+10h+var_10], eax
push    esi
mov     esi, [esp+14h+arg_0]
push    edi
mov     di, [esp+18h+arg_4]
lea     eax, [esp+18h+var_10]
mov     [esp+18h+var_c], di
push    eax
mov     [esp+1ch+var_a], esi
push    offset dword_4a9f00
mov     [esp+20h+var_6], 0
call    sub_48e920
add     esp, 8
cmp     di, 3
jz      short loc_49074b
cmp     di, 1
jz      short loc_49074b
cmp     di, 5
jnz     short loc_490754
push    esi
call    sub_467760
add     esp, 4
pop     edi
pop     esi
add     esp, 10h
retn
sub     esp, 10h
push    esi
mov     esi, [esp+14h+arg_0]
push    esi
call    sub_4907f0
add     esp, 4
cmp     ax, 3
jz      short loc_490783
cmp     ax, 1
jz      short loc_490783
cmp     ax, 5
jnz     short loc_49078c
push    esi
call    sub_4677a0
add     esp, 4
lea     eax, [esp+14h+var_10]
push    40006h
mov     [esp+18h+var_a], esi
push    eax
push    offset dword_4a9f00
call    sub_48eba0
add     esp, 0ch
pop     esi
add     esp, 10h
retn
mov     eax, [esp+arg_0]
sub     esp, 10h
lea     ecx, [esp+10h+var_10]
push    40006h
mov     [esp+14h+var_a], eax
push    ecx
lea     ecx, [esp+18h+var_10]
push    ecx
push    offset dword_4a9f00
call    sub_48eac0
add     esp, 10h
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, [esp+10h+var_10]
add     esp, 10h
retn
mov     eax, [esp+arg_0]
sub     esp, 10h
lea     ecx, [esp+10h+var_10]
push    40006h
mov     [esp+14h+var_a], eax
push    ecx
lea     ecx, [esp+18h+var_10]
push    ecx
push    offset dword_4a9f00
call    sub_48eac0
add     esp, 10h
mov     ecx, 0
cmp     eax, 1
adc     ecx, 0ffffffffh
and     cx, [esp+10h+var_c]
add     esp, 10h
mov     ax, cx
retn
mov     ax, [esp+arg_0]
sub     esp, 10h
mov     [esp+10h+var_c], ax
push    20004h
lea     ecx, [esp+14h+var_10]
push    ecx
lea     ecx, [esp+18h+var_10]
push    ecx
push    offset dword_4a9f00
call    sub_48eac0
add     esp, 10h
cmp     eax, 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, [esp+10h+var_a]
add     esp, 10h
retn
push    esi
mov     esi, [esp+4+hwnd]
push    esi
call    ds:setcapture
mov     ds:dword_4a9efc, esi
pop     esi
retn
call    ds:releasecapture
mov     ds:dword_4a9efc, 0
retn
push    esi
push    edi
mov     edi, [esp+8+hwnd]
push    0fffffff0h
push    edi
mov     esi, ds:getwindowlonga
call    esi
test    eax, 40000000h
jz      short loc_4908d0
push    0fffffff8h
push    edi
call    esi
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
sub     esp, 10h
lea     eax, [esp+10h+rect]
push    esi
mov     esi, [esp+14h+hwnd]
push    eax
push    esi
call    ds:getwindowrect
push    esi
call    sub_4908b0
add     esp, 4
test    eax, eax
jz      short loc_49090d
lea     ecx, [esp+14h+rect]
push    ecx
push    eax
call    ds:screentoclient
mov     eax, [esp+14h+rect.left]
mov     edx, [esp+14h+rect.top]
pop     esi
add     esp, 10h
retn
push    ebx
push    esi
mov     esi, [esp+8+hwnd]
push    edi
mov     edi, [esp+0ch+lprect]
push    edi
push    esi
call    ds:getwindowrect
push    esi
call    sub_4908b0
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_490953
push    edi
mov     ebx, ds:screentoclient
push    esi
call    ebx
lea     eax, [edi+8]
push    eax
push    esi
call    ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+hwnd]
push    esi
mov     esi, [esp+4+lprect]
push    esi
push    eax
call    ds:getclientrect
mov     eax, esi
pop     esi
retn
mov     ecx, [esp+hwnd]
sub     esp, 10h
lea     eax, [esp+10h+rect]
push    eax
push    ecx
call    ds:getclientrect
mov     eax, [esp+10h+rect.right]
mov     edx, [esp+10h+rect.bottom]
add     esp, 10h
retn
push    ebx
push    esi
push    edi
mov     esi, ds:getsystemmetrics
push    0
call    esi
mov     ebx, eax
push    1
call    esi
mov     esi, [esp+0ch+lprc]
mov     ecx, [esi+0ch]
cmp     eax, ecx
jge     short loc_4909ce
sub     eax, ecx
mov     edi, ds:offsetrect
push    eax
push    0
push    esi
call    edi
jmp     short loc_4909d4
mov     edi, ds:offsetrect
mov     eax, [esi+8]
cmp     ebx, eax
jge     short loc_4909e3
push    0
sub     ebx, eax
push    ebx
push    esi
call    edi
mov     eax, [esi+4]
test    eax, eax
jge     short loc_4909f2
neg     eax
push    eax
push    0
push    esi
call    edi
mov     eax, [esi]
test    eax, eax
jge     short loc_490a00
neg     eax
push    0
push    eax
push    esi
call    edi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
lea     eax, [esp+10h+rect]
push    esi
push    edi
push    eax
call    sub_490c90
mov     esi, [esp+1ch+lprc]
add     esp, 4
cmp     [esp+18h+arg_4], 0
jz      short loc_490a48
lea     eax, [esp+18h+rect]
push    esi
push    eax
call    sub_473dc0
add     esp, 8
test    eax, eax
jnz     short loc_490a48
push    esi
call    sub_4909a0
add     esp, 4
mov     ecx, [esi+4]
mov     eax, [esp+18h+rect.bottom]
sub     eax, 6
cmp     eax, ecx
jg      short loc_490a6d
mov     eax, [esp+18h+rect.bottom]
mov     edi, ds:offsetrect
sub     eax, ecx
sub     eax, 6
push    eax
push    0
push    esi
call    edi
jmp     short loc_490a73
mov     edi, ds:offsetrect
mov     eax, [esi+4]
cmp     [esp+18h+rect.top], eax
jle     short loc_490a88
mov     ecx, [esp+18h+rect.top]
sub     ecx, eax
push    ecx
push    0
push    esi
call    edi
mov     ecx, [esi]
mov     eax, [esp+18h+rect.right]
sub     eax, 6
cmp     eax, ecx
jg      short loc_490aa4
mov     eax, [esp+18h+rect.right]
push    0
sub     eax, ecx
sub     eax, 6
push    eax
push    esi
call    edi
mov     ecx, [esi+8]
mov     eax, [esp+18h+rect.left]
add     eax, 6
cmp     eax, ecx
jle     short loc_490ac1
mov     eax, [esp+18h+rect.left]
push    0
sub     eax, ecx
add     eax, 6
push    eax
push    esi
call    edi
pop     edi
pop     esi
add     esp, 10h
retn
mov     eax, [esp+ybottom]
push    esi
mov     ecx, [esp+4+xright]
push    eax
mov     esi, [esp+8+lprc]
push    ecx
push    0
push    0
push    esi
call    ds:setrect
mov     eax, [esp+4+bmenu]
mov     ecx, [esp+4+dwstyle]
push    eax
push    ecx
push    esi
call    ds:adjustwindowrect
mov     eax, [esp+4+arg_c]
sub     eax, [esi+4]
push    eax
mov     eax, [esp+8+arg_8]
sub     eax, [esi]
push    eax
push    esi
call    ds:offsetrect
mov     eax, esi
pop     esi
retn
mov     eax, [esp+ybottom]
push    esi
mov     ecx, [esp+4+xright]
push    eax
mov     esi, [esp+8+lprc]
push    ecx
push    0
push    0
push    esi
call    ds:setrect
mov     eax, [esp+4+bmenu]
mov     ecx, [esp+4+dwstyle]
push    eax
push    ecx
push    esi
call    ds:adjustwindowrect
mov     ecx, [esp+4+dy]
mov     edx, [esp+4+arg_8]
push    ecx
push    edx
push    esi
call    ds:offsetrect
mov     eax, esi
pop     esi
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+lprect]
push    edi
mov     edi, [esp+1ch+hwnd]
push    esi
push    edi
call    ds:getwindowrect
lea     eax, [esp+1ch+rect]
push    eax
push    edi
call    ds:getclientrect
lea     ecx, [esp+1ch+rect]
mov     ebx, ds:clienttoscreen
push    ecx
push    edi
call    ebx
lea     ecx, [esp+1ch+rect.right]
push    ecx
push    edi
call    ebx
mov     eax, [esp+1ch+rect.top]
mov     ecx, [esp+1ch+rect.bottom]
sub     eax, [esi+4]
mov     edx, [esp+1ch+rect.right]
mov     [esi+4], eax
sub     [esi+0ch], ecx
mov     eax, [esp+1ch+rect.left]
sub     [esi+8], edx
sub     eax, [esi]
pop     edi
mov     [esi], eax
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+hwnd]
push    0fffffff0h
push    eax
call    ds:getwindowlonga
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
call    sub_4892f0
test    eax, eax
jz      short loc_490c25
xor     ebx, ebx
mov     esi, [esp+20h+hwnd]
mov     edi, [esp+20h+x]
mov     ebp, [esp+20h+y]
push    15h
push    0
push    0
push    ebp
push    edi
push    0
push    esi
call    ds:setwindowpos
lea     eax, [esp+20h+rect]
push    eax
push    esi
call    ds:getwindowrect
cmp     edi, [esp+20h+rect.left]
jnz     short loc_490c17
cmp     ebp, [esp+20h+rect.top]
jz      short loc_490c42
inc     ebx
cmp     ebx, 5
jl      short loc_490bee
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     ebp, [esp+20h+y]
push    15h
mov     edi, [esp+24h+x]
push    0
mov     esi, [esp+28h+hwnd]
push    0
push    ebp
push    edi
push    0
push    esi
call    ds:setwindowpos
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+cy]
push    16h
mov     ecx, [esp+4+arg_4]
push    eax
mov     edx, [esp+8+hwnd]
push    ecx
push    0
push    0
push    0
push    edx
call    ds:setwindowpos
retn
push    esi
mov     eax, ds:hwndparent
mov     esi, [esp+4+lprect]
push    esi
push    eax
call    sub_490960
add     esp, 8
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, [esp+4+lprect]
push    esi
call    sub_490c70
add     esp, 4
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, [esp+4+hwnd]
push    esi
call    ds:bringwindowtotop
push    1
push    esi
call    ds:enablewindow
pop     esi
retn
mov     eax, [esp+hwndinsertafter]
test    eax, eax
jnz     short loc_490ce6
mov     eax, [esp+hwnd]
push    eax
call    sub_490cb0
add     esp, 4
retn
push    13h
push    0
push    0
push    0
push    0
push    eax
mov     eax, [esp+18h+hwnd]
push    eax
call    ds:setwindowpos
retn
push    ebx
push    esi
mov     esi, [esp+8+hwnd]
push    edi
mov     edi, [esp+0ch+arg_4]
push    ebp
mov     ebx, [esp+10h+benable]
mov     ebp, ds:enablewindow
push    2
push    esi
call    ds:getwindow
mov     esi, eax
test    esi, esi
jz      short loc_490d2f
cmp     edi, esi
jz      short loc_490d16
push    ebx
push    esi
call    ebp
jmp     short loc_490d16
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, ds:hwndparent
push    eax
call    ds:gettopwindow
retn
mov     eax, [esp+hwnd]
push    2
push    eax
call    ds:getwindow
retn
mov     eax, [esp+hwnd]
test    eax, eax
jz      short locret_490d8f
push    eax
call    ds:setfocus
retn
push    esi
push    edi
mov     edi, ds:dword_4a9ef8
mov     esi, [esp+8+hwnd]
cmp     edi, esi
jnz     short loc_490dab
push    0
push    esi
call    sub_490de0
add     esp, 8
push    esi
call    sub_490760
add     esp, 4
push    esi
call    ds:destroywindow
cmp     edi, esi
jnz     short loc_490dcf
push    1
call    sub_490d40
push    eax
call    sub_490de0
add     esp, 8
pop     edi
pop     esi
retn
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+wparam]
push    edi
mov     edi, [esp+10h+hwnd]
push    ebp
test    edi, edi
jz      short loc_490e24
test    ebx, ebx
jz      short loc_490e04
push    1
push    1
push    0
push    edi
call    ds:createcaret
push    0
mov     esi, ds:sendmessagea
push    ebx
push    464h
push    edi
call    esi
mov     ebp, eax
push    0
push    ebx
push    86h
push    edi
call    esi
jmp     short loc_490e28
mov     ebp, [esp+14h+var_4]
test    ebx, ebx
jz      short loc_490e49
mov     ds:dword_4a9ef8, edi
test    edi, edi
jz      short loc_490e5b
test    ebp, ebp
jnz     short loc_490e5b
push    edi
call    ds:setfocus
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     edi, ds:dword_4a9ef8
jnz     short loc_490e5b
mov     ds:dword_4a9ef8, 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
call    sub_490ed0
mov     eax, x
mov     ecx, y
mov     esi, [esp+4+hwnd]
push    ecx
push    eax
push    esi
call    sub_490bd0
add     esp, 0ch
mov     eax, dword_4aeb84
sub     eax, y
push    eax
mov     eax, dword_4aeb80
sub     eax, x
push    eax
push    esi
call    sub_490c50
add     esp, 0ch
pop     esi
retn
push    0fh
call    ds:getsystemmetrics
inc     ax
retn
mov     dword_4aeb70, 0
push    edi
call    sub_4892f0
test    eax, eax
jz      short loc_490f0b
mov     edi, offset dword_4a9f28
xor     eax, eax
mov     ecx, 55h
push    eax
rep stosd
mov     ds:dword_4a9f28, 154h
push    offset dword_4a9f28
push    eax
push    29h
call    ds:systemparametersinfoa
pop     edi
retn
sub     esp, 154h
push    esi
push    edi
call    sub_4892f0
test    eax, eax
jz      loc_490fd9
push    20a0204h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      loc_490fd4
xor     esi, esi
lea     edi, [esp+15ch+pvparam]
xor     eax, eax
mov     ecx, 55h
rep stosd
push    eax
mov     edi, ds:systemparametersinfoa
mov     [esp+160h+pvparam], 154h
lea     eax, [esp+160h+pvparam]
push    eax
push    esi
push    29h
call    edi
cmp     [esp+15ch+var_140], 14h
jz      short loc_490f85
mov     [esp+15ch+var_140], 14h
mov     esi, 1
cmp     [esp+15ch+var_b8], 11h
jz      short loc_490f9f
mov     [esp+15ch+var_b8], 11h
mov     esi, 1
mov     eax, 1
cmp     [esp+15ch+var_150], eax
jz      short loc_490fb0
mov     esi, eax
mov     [esp+15ch+var_150], eax
test    esi, esi
jz      short loc_490fd9
lea     eax, [esp+15ch+pvparam]
push    0
mov     dword_4aeb70, 1
push    eax
push    0
push    2ah
call    edi
pop     edi
pop     esi
add     esp, 154h
retn
call    sub_490ff0
pop     edi
pop     esi
add     esp, 154h
retn
sub     esp, 154h
cmp     dword_4aeb70, 0
push    ebx
push    esi
push    edi
jz      loc_49109f
call    sub_4892f0
test    eax, eax
jz      loc_49109f
xor     ebx, ebx
lea     edi, [esp+160h+pvparam]
xor     eax, eax
mov     ecx, 55h
rep stosd
push    eax
mov     esi, ds:systemparametersinfoa
mov     [esp+164h+pvparam], 154h
lea     eax, [esp+164h+pvparam]
push    eax
push    ebx
push    29h
call    esi
test    eax, eax
jz      short loc_491095
cmp     [esp+160h+var_140], 14h
jnz     short loc_491054
mov     eax, ds:dword_4a9f3c
mov     ebx, 1
mov     [esp+160h+var_140], eax
cmp     [esp+160h+var_b8], 11h
jnz     short loc_49106f
mov     eax, ds:dword_4a9fc4
mov     ebx, 1
mov     [esp+160h+var_b8], eax
cmp     [esp+160h+var_150], 1
jnz     short loc_491084
mov     eax, ds:dword_4a9f2c
mov     ebx, 1
mov     [esp+160h+var_150], eax
test    ebx, ebx
jz      short loc_491095
lea     eax, [esp+160h+pvparam]
push    0
push    eax
push    0
push    2ah
call    esi
mov     dword_4aeb70, 0
pop     edi
pop     esi
pop     ebx
add     esp, 154h
retn
sub     esp, 34h
push    esi
push    edi
call    sub_4892f0
test    eax, eax
jz      short loc_491130
lea     edi, [esp+3ch+pdata]
xor     eax, eax
mov     ecx, 9
rep stosd
lea     eax, [esp+3ch+pdata]
mov     esi, ds:shappbarmessage
mov     [esp+3ch+pdata.cbsize], 24h
push    eax
push    4
call    esi
test    al, 2
jz      short loc_491130
test    al, 1
jnz     short loc_491130
push    1
call    ds:getsystemmetrics
mov     edi, eax
mov     ecx, ds:hwndparent
lea     eax, [esp+3ch+rect]
push    eax
push    ecx
call    ds:getwindowrect
lea     ecx, [esp+3ch+pdata]
push    ecx
push    5
call    esi
mov     ecx, [esp+3ch+pdata.rc.top]
mov     eax, [esp+3ch+rect.bottom]
sub     ecx, [esp+3ch+pdata.rc.bottom]
sub     eax, [esp+3ch+rect.top]
add     ecx, edi
cmp     ecx, eax
jge     short loc_491130
mov     eax, 1
pop     edi
pop     esi
add     esp, 34h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 34h
retn
push    ebx
xor     eax, eax
mov     ax, ds:word_4a8518
push    2000102h
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4911c3
cmp     dword_4aeb6c, 0
jnz     short loc_4911c3
call    sub_4910b0
test    eax, eax
jz      short loc_4911c3
push    0fffffff0h
mov     eax, ds:hwndparent
push    eax
call    ds:getwindowlonga
or      eax, 10000h
mov     ecx, ds:hwndparent
push    eax
push    0fffffff0h
push    ecx
call    ds:setwindowlonga
push    3
mov     ecx, ds:hwndparent
mov     dword_4aeb68, 1
push    ecx
call    ds:showwindow
mov     dword_4aeb68, 0
mov     dword_4aeb6c, 1
pop     ebx
retn
push    2000102h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short locret_49122c
push    1
mov     eax, ds:hwndparent
push    eax
call    ds:showwindow
push    0fffffff0h
mov     ecx, ds:hwndparent
push    ecx
call    ds:getwindowlonga
and     eax, 0fffeffffh
mov     ecx, ds:hwndparent
push    eax
push    0fffffff0h
push    ecx
call    ds:setwindowlonga
mov     dword_4aeb6c, 0
retn
jmp     sub_467290
cmp     dword_4aeb68, 0
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+10h+arg_0]
jnz     loc_49130d
lea     ebx, [edi+8]
push    20h
mov     esi, ds:getsystemmetrics
call    esi
lea     ebp, ds:0[eax*2]
push    0
call    esi
add     ebp, eax
push    20h
mov     [ebx], ebp
call    esi
push    21h
sub     [edi+10h], eax
cmp     dword_4aeb6c, 0
jz      short loc_4912b0
call    esi
lea     ebp, ds:0[eax*2]
push    1
call    esi
add     ebp, eax
push    21h
mov     [edi+0ch], ebp
call    esi
neg     eax
mov     [edi+14h], eax
jmp     short loc_4912f1
call    esi
lea     ebp, ds:0[eax*2]
push    4
call    esi
add     ebp, eax
call    sub_490ec0
movsx   eax, ax
add     ebp, eax
push    1
call    esi
add     ebp, eax
dec     ebp
mov     [edi+0ch], ebp
call    sub_490ec0
mov     ebp, 1
push    4
movsx   eax, ax
sub     ebp, eax
call    esi
sub     ebp, eax
push    21h
call    esi
sub     ebp, eax
add     [edi+14h], ebp
mov     dword ptr [edi+18h], 0c8h
mov     dword ptr [edi+1ch], 32h
mov     eax, [ebx]
mov     ecx, [ebx+4]
mov     [edi+20h], eax
mov     [edi+24h], ecx
add     edi, 20h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 28h
lea     eax, [esp+28h+rect]
push    ebx
push    esi
push    edi
mov     esi, [esp+34h+hwnd]
push    eax
push    esi
call    sub_490920
add     esp, 8
xor     eax, eax
mov     ax, ds:word_4a8518
push    2000102h
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
mov     eax, 0
jnz     short loc_491377
push    esi
call    sub_490bc0
add     esp, 4
and     eax, 0c00000h
sub     eax, 0c00000h
cmp     eax, 1
sbb     eax, eax
neg     eax
test    eax, eax
jz      short loc_49138a
push    4
mov     ebx, ds:getsystemmetrics
call    ebx
lea     edi, [eax-1]
jmp     short loc_491393
xor     di, di
mov     ebx, ds:getsystemmetrics
push    1
call    ebx
push    eax
push    0
call    ebx
movsx   edi, di
push    eax
push    0
lea     eax, [esp+40h+rc]
push    0
push    eax
call    ds:setrect
lea     eax, [esp+34h+var_28]
lea     ecx, [esp+34h+rc]
add     [esp+34h+rect.top], edi
push    eax
push    ecx
call    sub_473c30
lea     ecx, [esp+3ch+rect]
lea     edx, [esp+3ch+var_28]
add     esp, 8
push    ecx
push    edx
call    sub_473bf0
lea     ecx, [esp+3ch+rect]
add     esp, 8
push    0
push    ecx
call    sub_490a10
sub     [esp+3ch+rect.top], edi
add     esp, 8
mov     edx, [esp+34h+rect.left]
mov     ecx, [esp+34h+rect.top]
push    ecx
push    edx
push    esi
call    sub_490bd0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
add     esp, 28h
retn
sub     esp, 38h
xor     ecx, ecx
mov     cx, ds:word_4a8518
push    ebx
shl     ecx, 10h
push    esi
push    edi
mov     cl, 1
push    ebp
mov     eax, ecx
shr     eax, 10h
mov     edx, dword_4ae1e0
movsx   eax, ax
shl     eax, 6
mov     ebx, [eax+edx+4]
xor     edx, edx
mov     dl, ch
mov     eax, [ebx]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_491454
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_49145d
push    ecx
call    sub_461250
add     esp, 4
lea     ecx, [esp+48h+var_38]
push    8
push    ecx
push    15h
push    eax
call    sub_45c8a0
add     esp, 10h
cmp     eax, 1
sbb     edi, edi
call    sub_47caa0
mov     esi, eax
push    2010640h
neg     edi
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_4914c2
push    2000204h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
mov     ecx, 0
test    ax, ax
jnz     short loc_4914c7
mov     ecx, 1
movsx   eax, [esp+48h+var_38]
movsx   edx, [esp+48h+var_36]
movsx   ebx, [esp+48h+var_34]
mov     [esp+48h+rc.left], eax
push    ecx
mov     [esp+4ch+rc.top], edx
push    esi
movsx   eax, [esp+50h+var_32]
mov     [esp+50h+rc.right], ebx
mov     [esp+50h+rc.bottom], eax
call    sub_47caf0
mov     ebp, [esp+50h+hwnd]
add     esp, 8
push    ebp
call    sub_490bc0
add     esp, 4
mov     esi, eax
xor     eax, eax
push    2000102h
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_49153d
mov     eax, esi
and     eax, 0c00000h
sub     eax, 0c00000h
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     [esp+48h+rect.left], eax
jmp     short loc_491545
mov     [esp+48h+rect.left], 0
push    2000102h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_49156b
and     esi, 0ffb7ffffh
lea     eax, [esp+48h+var_20]
push    eax
call    sub_491a10
add     esp, 4
call    sub_491f50
test    eax, eax
jz      loc_491639
push    0
mov     ebx, ds:getsystemmetrics
call    ebx
cmp     eax, [esp+48h+xright]
jg      short loc_4915a2
cmp     ds:dword_4a68c4, 1
sbb     eax, eax
mov     [esp+48h+var_20], eax
push    1
call    ebx
cmp     eax, [esp+48h+ybottom]
jg      short loc_4915b9
cmp     ds:dword_4a68c4, 1
sbb     eax, eax
mov     [esp+48h+dy], eax
push    2000102h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_4915fa
cmp     ds:dword_4a68c4, 0
jz      short loc_4915f2
call    sub_490ec0
movsx   eax, ax
neg     eax
mov     [esp+48h+dy], eax
jmp     short loc_4915fa
mov     [esp+48h+dy], 0ffffffffh
lea     eax, [esp+48h+rc]
mov     edx, [esp+48h+xright]
mov     ecx, [esp+48h+ybottom]
push    eax
mov     eax, [esp+4ch+var_20]
push    ecx
cmp     ds:dword_4a68c4, 0
push    edx
mov     edx, [esp+54h+dy]
push    edx
push    eax
push    0
push    esi
jz      short loc_49162c
call    sub_490b20
add     esp, 1ch
jmp     loc_4916e1
call    sub_490ad0
add     esp, 1ch
jmp     loc_4916e1
push    2000204h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_49169a
push    2010640h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_49168e
mov     ebx, 1
call    sub_490ec0
movsx   eax, ax
sub     ebx, eax
add     [esp+48h+ybottom], ebx
jmp     short loc_49169a
call    sub_490ec0
movsx   eax, ax
sub     [esp+48h+ybottom], eax
lea     eax, [esp+48h+rc]
mov     ecx, [esp+48h+xright]
mov     edx, [esp+48h+ybottom]
push    eax
mov     eax, [esp+4ch+var_20]
push    edx
push    ecx
mov     ecx, [esp+54h+dy]
push    ecx
push    eax
push    2000204h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
movzx   ecx, ax
push    ecx
push    esi
call    sub_490ad0
add     esp, 1ch
mov     ebx, ds:getsystemmetrics
push    ebp
call    ds:isiconic
test    eax, eax
jnz     loc_491844
mov     eax, [esp+48h+rc.left]
mov     ecx, [esp+48h+rc.top]
sub     [esp+48h+rc.right], eax
sub     [esp+48h+rc.bottom], ecx
cmp     [esp+48h+rect.left], 0
jz      short loc_49171f
mov     esi, 1
push    4
call    ebx
sub     esi, eax
push    4
add     [esp+4ch+rc.top], esi
call    ebx
dec     eax
add     [esp+48h+rc.bottom], eax
push    1
call    ebx
mov     ecx, [esp+48h+rc.bottom]
sub     ecx, [esp+48h+rc.top]
cmp     eax, ecx
jg      short loc_4917a9
push    0
call    ebx
mov     ecx, [esp+48h+rc.right]
sub     ecx, [esp+48h+rc.left]
cmp     eax, ecx
jg      short loc_4917a9
xor     edi, edi
push    2000102h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4917c9
call    sub_4892f0
test    eax, eax
jz      short loc_4917c9
mov     esi, 1
push    20h
call    ebx
sub     esi, eax
push    21h
mov     [esp+4ch+rc.left], esi
call    ebx
mov     esi, 1
push    20h
sub     esi, eax
mov     [esp+4ch+rc.top], esi
call    ebx
mov     esi, eax
push    edi
call    ebx
add     esi, eax
push    21h
mov     [esp+4ch+rc.right], esi
call    ebx
mov     esi, eax
push    1
call    ebx
add     esi, eax
mov     [esp+48h+rc.bottom], esi
jmp     short loc_4917c9
push    2080780h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
movzx   ecx, ax
add     esp, 8
or      edi, ecx
cmp     [esp+48h+arg_4], 0
mov     eax, 1
jz      short loc_491809
lea     eax, [esp+48h+rect]
push    eax
push    ebp
call    sub_490920
mov     eax, [esp+50h+rect.right]
sub     eax, [esp+50h+rc.right]
add     esp, 8
cmp     eax, [esp+48h+rect.left]
jnz     short loc_491804
mov     eax, [esp+48h+rect.bottom]
sub     eax, [esp+48h+rc.bottom]
cmp     eax, [esp+48h+rect.top]
mov     eax, 0
jz      short loc_491809
mov     eax, 1
test    eax, eax
jz      short loc_491844
test    edi, edi
jnz     short loc_491824
mov     eax, [esp+48h+rc.left]
mov     ecx, [esp+48h+rc.top]
push    ecx
push    eax
push    ebp
call    sub_490bd0
add     esp, 0ch
mov     eax, [esp+48h+rc.bottom]
mov     ecx, [esp+48h+rc.right]
push    eax
push    ecx
push    ebp
call    sub_490c50
add     esp, 0ch
test    edi, edi
jz      short loc_491844
push    ebp
call    sub_491320
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 38h
retn
push    2080780h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short locret_49187d
mov     eax, [esp+hwnd]
push    eax
call    sub_491320
add     esp, 4
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
call    sub_491a10
add     esp, 4
mov     edi, eax
xor     eax, eax
push    2000204h
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4918fd
push    2000102h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jnz     short loc_4918f2
push    20004f0h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
cmp     ax, 1
jz      short loc_4918fd
call    sub_490ec0
movsx   eax, ax
sub     [esi+0ch], eax
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 20h
xor     eax, eax
mov     ax, ds:word_4a8518
push    ebx
shl     eax, 10h
push    esi
push    edi
mov     al, 1
push    20004f0h
xor     edi, edi
push    eax
call    sub_462670
mov     bx, ax
lea     eax, [esp+34h+rect]
add     esp, 8
push    eax
call    sub_490c90
lea     eax, [esp+30h+var_20]
add     esp, 4
push    eax
push    ebx
call    sub_491e40
add     esp, 8
mov     esi, eax
cmp     esi, edi
jz      short loc_49195c
mov     edi, 1
test    esi, esi
jnz     short loc_491971
mov     [esp+2ch+var_20], 0ffffffffh
mov     eax, [esp+2ch+rect.top]
dec     eax
mov     [esp+2ch+var_1c], eax
call    sub_491f50
test    eax, eax
jz      short loc_491987
mov     eax, 0ffffffffh
mov     [esp+2ch+var_1c], eax
mov     [esp+2ch+var_20], eax
test    edi, edi
jz      short loc_491991
cmp     bx, 2
jz      short loc_4919df
push    2000102h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4919c4
mov     edi, 1
push    4
call    ds:getsystemmetrics
sub     edi, eax
add     [esp+2ch+var_14], edi
push    2000204h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
mov     ebx, [esp+2ch+var_1c]
mov     edi, [esp+2ch+var_18]
lea     ecx, [esp+2ch+var_20]
mov     edx, [esp+2ch+arg_0]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+0ch]
mov     [edx+4], ebx
mov     [edx+8], edi
pop     edi
mov     [edx+0ch], eax
mov     eax, esi
pop     esi
pop     ebx
add     esp, 20h
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_491910
add     esp, 4
retn
sub     esp, 10h
lea     eax, [esp+10h+var_10]
push    esi
push    edi
push    eax
call    sub_491a10
add     esp, 4
call    sub_491f50
test    eax, eax
jz      short loc_491a61
push    4
mov     esi, ds:getsystemmetrics
call    esi
mov     edi, eax
push    0fh
call    esi
add     edi, eax
sub     edi, 2
cmp     edi, [esp+18h+var_c]
jle     short loc_491a61
mov     eax, 1
pop     edi
pop     esi
add     esp, 10h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 10h
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     esi, ds:frequency
push    ebp
test    esi, esi
jz      loc_491b37
push    0fffffff0h
xor     ebx, ebx
push    esi
call    ds:getwindowlonga
mov     edi, eax
lea     eax, [esp+20h+x]
push    eax
push    esi
call    sub_490920
add     esp, 8
cmp     [esp+20h+arg_0], ebx
jz      short loc_491acb
test    edi, 400000h
jnz     short loc_491af3
or      edi, 80000h
mov     ebx, 0ffffffffh
or      edi, 400000h
push    edi
push    0fffffff0h
push    esi
call    ds:setwindowlonga
jmp     short loc_491af3
test    edi, 400000h
jz      short loc_491af3
push    esi
call    ds:getmenu
test    eax, eax
jnz     short loc_491af3
and     edi, 0ffb7ffffh
mov     ebx, 1
push    edi
push    0fffffff0h
push    esi
call    ds:setwindowlonga
test    ebx, ebx
jz      short loc_491b37
push    4
mov     edi, ds:getsystemmetrics
call    edi
mov     ebp, eax
push    6
call    edi
sub     ebp, eax
push    34h
imul    ebp, ebx
mov     eax, [esp+24h+var_4]
add     [esp+24h+y], ebp
sub     eax, [esp+24h+y]
mov     ecx, [esp+24h+y]
mov     edx, [esp+24h+x]
push    eax
mov     eax, [esp+28h+var_8]
sub     eax, [esp+28h+x]
push    eax
push    ecx
push    edx
push    0
push    esi
call    ds:setwindowpos
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 20h
cmp     [esp+20h+arg_4], 0
push    esi
jz      short loc_491b91
lea     eax, [esp+24h+var_10]
mov     ecx, ds:hwndparent
push    eax
push    ecx
call    sub_490b60
mov     ecx, [esp+2ch+var_10.left]
mov     esi, [esp+2ch+arg_0]
mov     eax, [esp+2ch+var_10.top]
add     esp, 8
add     [esi], ecx
add     [esi+4], eax
lea     ecx, [esp+24h+rect]
mov     edx, ds:hwndparent
push    ecx
push    edx
call    sub_490920
mov     ecx, [esp+2ch+rect.left]
mov     edx, [esp+2ch+rect.top]
add     esp, 8
add     [esi], ecx
add     [esi+4], edx
pop     esi
add     esp, 20h
retn
sub     esp, 8
push    esi
push    edi
mov     esi, [esp+10h+arg_0]
mov     edi, [esp+10h+arg_4]
push    edi
mov     eax, [esi]
mov     ecx, [esi+4]
mov     [esp+14h+var_8], eax
lea     eax, [esp+14h+var_8]
mov     [esp+14h+var_4], ecx
push    eax
call    sub_491b40
mov     eax, [esp+18h+var_8]
mov     ecx, [esp+18h+var_4]
add     esp, 8
mov     [esi], eax
mov     [esi+4], ecx
cmp     [esp+10h+arg_8], 0
jz      short loc_491c08
mov     eax, [esi+8]
mov     ecx, [esi+0ch]
add     esi, 8
push    edi
mov     [esp+14h+var_8], eax
lea     eax, [esp+14h+var_8]
mov     [esp+14h+var_4], ecx
push    eax
call    sub_491b40
mov     edx, [esp+18h+var_8]
mov     ecx, [esp+18h+var_4]
add     esp, 8
mov     [esi], edx
mov     [esi+4], ecx
pop     edi
pop     esi
add     esp, 8
retn
mov     ecx, [esp+arg_0]
sub     esp, 8
mov     eax, ecx
mov     edx, dword_4ae1e0
shr     eax, 10h
push    esi
movsx   eax, ax
shl     eax, 6
mov     esi, [eax+edx+4]
xor     edx, edx
mov     dl, ch
mov     eax, [esi]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_491c47
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_491c50
push    ecx
call    sub_461250
add     esp, 4
lea     ecx, [esp+0ch+var_8]
push    8
mov     edx, [esp+10h+arg_4]
push    ecx
push    edx
push    eax
call    sub_45c8a0
mov     ecx, [esp+1ch+arg_8]
add     esp, 10h
movsx   edx, [esp+0ch+var_6]
cmp     eax, 1
mov     [ecx+4], edx
movsx   eax, [esp+0ch+var_8]
sbb     esi, esi
mov     [ecx], eax
movsx   edx, [esp+0ch+var_2]
movsx   eax, [esp+0ch+var_4]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
mov     eax, [esp+0ch+arg_10]
mov     edx, [esp+0ch+arg_c]
push    eax
push    edx
push    ecx
call    sub_491ba0
add     esp, 0ch
lea     eax, [esi+1]
pop     esi
add     esp, 8
retn
movsx   eax, [esp+arg_0]
sub     esp, 18h
cmp     eax, 0fh
push    esi
ja      short def_491cbe
jmp     ds:jpt_491cbe[eax*4]
lea     eax, [esp+1ch+rect]
push    eax
call    sub_490c90
mov     eax, [esp+20h+rect.right]
add     esp, 4
mov     esi, ds:getsystemmetrics
sub     eax, [esp+1ch+rect.left]
mov     [esp+1ch+var_18], eax
push    20h
mov     eax, [esp+20h+rect.bottom]
sub     eax, [esp+20h+rect.top]
mov     [esp+20h+var_14], eax
call    esi
add     eax, eax
push    21h
sub     [esp+20h+var_18], eax
call    esi
add     eax, eax
sub     [esp+1ch+var_14], eax
jmp     loc_491de9
mov     [esp+1ch+var_18], 200h
mov     [esp+1ch+var_14], 156h
jmp     loc_491de9
push    0
mov     esi, ds:getsystemmetrics
call    esi
mov     [esp+1ch+var_18], eax
push    1
call    esi
mov     [esp+1ch+var_14], eax
jmp     loc_491de9
mov     [esp+1ch+var_18], 280h
mov     [esp+1ch+var_14], 1e0h
jmp     loc_491de9
mov     [esp+1ch+var_18], 280h
mov     [esp+1ch+var_14], 15eh
jmp     loc_491de9
mov     [esp+1ch+var_18], 320h
mov     [esp+1ch+var_14], 258h
jmp     short loc_491de9
mov     [esp+1ch+var_18], 400h
mov     [esp+1ch+var_14], 300h
jmp     short loc_491de9
mov     [esp+1ch+var_18], 200h
mov     [esp+1ch+var_14], 180h
jmp     short loc_491de9
mov     [esp+1ch+var_18], 280h
mov     [esp+1ch+var_14], 190h
jmp     short loc_491de9
mov     [esp+1ch+var_18], 280h
mov     [esp+1ch+var_14], 1e0h
jmp     short loc_491de9
mov     [esp+1ch+var_18], 280h
jmp     short loc_491de1
mov     [esp+1ch+var_18], 340h
mov     [esp+1ch+var_14], 270h
jmp     short loc_491de9
mov     [esp+1ch+var_18], 480h
mov     [esp+1ch+var_14], 366h
mov     eax, [esp+1ch+var_18]
mov     edx, [esp+1ch+var_14]
pop     esi
add     esp, 18h
retn
sub     esp, 18h
xor     ecx, ecx
mov     cx, ds:word_4a8518
push    esi
shl     ecx, 10h
mov     edx, dword_4ae1e0
mov     cl, 1
mov     eax, ecx
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     esi, [eax+edx+4]
xor     edx, edx
mov     dl, ch
mov     eax, [esi]
mov     eax, [eax+edx*4]
test    eax, eax
jz      short loc_491e81
mov     edx, [eax]
xor     eax, eax
mov     al, cl
mov     eax, [edx+eax*4]
add     eax, edx
jmp     short loc_491e8a
push    ecx
call    sub_461250
add     esp, 4
lea     ecx, [esp+1ch+var_18]
push    8
push    ecx
push    15h
push    eax
call    sub_45c8a0
add     esp, 10h
mov     esi, eax
test    esi, esi
jz      short loc_491ef5
movsx   eax, [esp+1ch+var_18]
movsx   ecx, [esp+1ch+var_16]
mov     [esp+1ch+var_10], eax
mov     [esp+1ch+var_c], ecx
movsx   edx, [esp+1ch+var_14]
movsx   eax, [esp+1ch+var_12]
mov     [esp+1ch+var_8], edx
mov     [esp+1ch+var_4], eax
mov     ax, [esp+1ch+arg_0]
cmp     ax, 2
jnz     short loc_491f0e
cmp     [esp+1ch+var_8], 0
jge     short loc_491ee2
mov     eax, [esp+1ch+var_8]
neg     eax
mov     [esp+1ch+var_8], eax
cmp     [esp+1ch+var_4], 0
jge     short loc_491f1f
mov     eax, [esp+1ch+var_4]
neg     eax
mov     [esp+1ch+var_4], eax
jmp     short loc_491f1f
mov     ax, [esp+1ch+arg_0]
cmp     ax, 2
jnz     short loc_491f04
mov     ax, 3
xor     ecx, ecx
mov     [esp+1ch+var_c], ecx
mov     [esp+1ch+var_10], ecx
push    eax
call    sub_491cb0
mov     [esp+20h+var_8], eax
mov     [esp+20h+var_4], edx
add     esp, 4
lea     ecx, [esp+1ch+var_10]
mov     edx, [esp+1ch+arg_4]
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
mov     [edx+8], eax
mov     eax, esi
mov     [edx+0ch], ecx
pop     esi
add     esp, 18h
retn
sub     esp, 10h
xor     eax, eax
mov     ax, ds:word_4a8518
push    ebx
shl     eax, 10h
push    esi
push    edi
xor     ebx, ebx
push    20004f0h
mov     al, 1
push    eax
call    sub_462670
add     esp, 8
cmp     ax, 2
jz      short loc_491fc0
lea     eax, [esp+1ch+var_10]
push    eax
push    20004f0h
xor     eax, eax
mov     ax, ds:word_4a8518
shl     eax, 10h
mov     al, 1
xor     ebx, ebx
push    eax
call    sub_462670
add     esp, 8
push    eax
call    sub_491e40
add     esp, 8
mov     esi, ds:getsystemmetrics
push    1
call    esi
mov     edi, eax
push    4
call    esi
sub     edi, eax
sub     edi, 5
cmp     edi, [esp+1ch+var_4]
setle   bl
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 4
mov     [esp+4+var_2], 0
push    ebx
push    esi
push    edi
push    ebp
call    sub_44f2d0
mov     edi, eax
test    edi, edi
jnz     short loc_491ff4
xor     ax, ax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    edi
call    sub_456780
add     esp, 4
push    offset awinmmdll
push    edi
call    sub_44f5b0
add     esp, 8
push    edi
call    sub_4922e0
add     esp, 4
test    eax, eax
jz      short loc_492085
push    edi
call    sub_412df0
mov     esi, [esp+18h+arg_0]
add     esp, 4
test    eax, eax
mov     [esi], eax
jnz     short loc_492034
mov     [esp+14h+var_2], 0fffch
jmp     short loc_49208c
xor     bx, bx
movsx   eax, bx
mov     ecx, lpprocname[eax*4]
lea     ebp, ds:0[eax*4]
push    ecx
mov     eax, [esi]
push    eax
call    ds:getprocaddress
mov     ss:dword_4aa080[ebp], eax
test    eax, eax
jz      short loc_49206b
inc     bx
cmp     bx, 9
jl      short loc_492037
call    sub_40cae0
jmp     short loc_49208c
mov     eax, [esi]
push    eax
call    sub_412ee0
add     esp, 4
mov     dword ptr [esi], 0
mov     [esp+14h+var_2], 0fffah
jmp     short loc_49208c
mov     [esp+14h+var_2], 0fffbh
push    edi
call    sub_44f4a0
mov     ax, [esp+18h+var_2]
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     di, [esi+204h]
push    ebp
cmp     [esi+206h], di
jle     short loc_49211d
mov     ebx, ds:globalalloc
movsx   eax, di
lea     ebp, [esi+eax*4]
cmp     dword ptr [ebp+0], 0
jnz     short loc_4920e6
push    20h
push    3002h
call    ebx
mov     [ebp+0], eax
cmp     dword ptr [ebp+80h], 0
jnz     short loc_492103
mov     eax, [esi+208h]
push    eax
push    3002h
call    ebx
mov     [ebp+80h], eax
cmp     dword ptr [ebp+0], 0
jz      short loc_49211d
cmp     dword ptr [ebp+80h], 0
jz      short loc_49211d
inc     di
cmp     [esi+206h], di
jg      short loc_4920ce
mov     ax, 0
mov     [esi+204h], di
cmp     di, 2
jge     short loc_492132
mov     ax, 7
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
xor     bx, bx
push    edi
mov     edi, [esp+0ch+arg_0]
push    ebp
cmp     [edi+204h], bx
jle     short loc_49218b
mov     esi, ds:globalfree
movsx   eax, bx
inc     bx
lea     ebp, [edi+eax*4]
mov     ecx, [ebp+0]
push    ecx
call    esi
mov     eax, [ebp+80h]
push    eax
call    esi
mov     dword ptr [ebp+80h], 0
mov     dword ptr [ebp+0], 0
cmp     [edi+204h], bx
jg      short loc_49215a
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
xor     bx, bx
push    edi
mov     edi, [esp+0ch+arg_0]
push    ebp
cmp     [edi+204h], bx
jle     short loc_4921d6
mov     esi, ds:globallock
movsx   eax, bx
inc     bx
lea     ebp, [edi+eax*4]
mov     ecx, [ebp+0]
push    ecx
call    esi
mov     [ebp+100h], eax
mov     eax, [ebp+80h]
push    eax
call    esi
mov     [ebp+180h], eax
cmp     [edi+204h], bx
jg      short loc_4921aa
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
xor     di, di
push    ebp
cmp     [esi+204h], di
jle     short loc_49221a
mov     ebx, ds:globalunlock
movsx   eax, di
inc     di
lea     ebp, [esi+eax*4]
mov     ecx, [ebp+0]
push    ecx
call    ebx
mov     eax, [ebp+80h]
push    eax
call    ebx
cmp     [esi+204h], di
jg      short loc_4921fa
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 140h
xor     eax, eax
mov     ecx, 10h
push    ebx
push    esi
push    edi
lea     edi, [esp+14ch+var_140]
push    ebp
rep stosd
xor     ebp, ebp
call    sub_48e750
test    eax, eax
jz      loc_4922cd
lea     ebx, [esp+150h+var_140]
lea     esi, [esp+150h+var_100]
mov     edi, [esp+150h+arg_0]
call    sub_48e730
cmp     ax, 1
jnz     short loc_492289
lea     eax, [ebp+1]
push    eax
call    sub_48e750
mov     ecx, [esp+154h+arg_4]
push    eax
push    esi
mov     eax, [ebx]
push    eax
mov     eax, [esp+160h+arg_8]
shr     eax, 1
push    eax
push    ecx
push    edi
call    sub_40c830
jmp     short loc_4922b8
call    sub_48e730
cmp     ax, 2
jnz     short loc_4922bb
lea     eax, [ebp+1]
push    eax
call    sub_48e750
mov     ecx, [esp+154h+arg_8]
push    eax
push    esi
mov     eax, [ebx]
mov     edx, [esp+15ch+arg_4]
push    eax
push    ecx
push    edx
push    edi
call    sub_40cbe0
add     esp, 1ch
mov     [ebx], esi
add     ebx, 4
add     esi, 10h
call    sub_48e750
inc     ebp
cmp     eax, ebp
ja      short loc_492255
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 140h
retn
mov     eax, [esp+arg_0]
push    eax
call    sub_44acb0
add     esp, 4
retn
mov     ecx, [esp+arg_4]
push    esi
push    edi
mov     edi, [esp+8+arg_8]
mov     eax, [edi]
push    eax
push    ecx
call    ds:dword_4aa0a0
cmp     ax, 8
mov     si, ax
jnz     short loc_492322
xor     si, si
mov     eax, [edi]
mov     dword_4aebbc, eax
call    sub_48dd40
mov     ax, si
pop     edi
pop     esi
retn
mov     ax, si
pop     edi
mov     dword_4aebbc, 0
pop     esi
retn
jmp     ds:dword_4aa080
sub     esp, 0ch
push    ebx
push    esi
mov     ebx, [esp+14h+arg_0]
push    edi
push    ebp
push    3ff00000h
mov     ebp, [esp+20h+arg_4]
push    0
mov     word ptr [ebp+0], 1
movzx   ax, byte ptr [ebx+18h]
mov     [ebp+2], ax
mov     al, [ebx+1bh]
mov     ecx, [ebx+20h]
mov     edx, [ebx+1ch]
push    ecx
push    edx
lea     ecx, [esp+2ch+var_8]
push    eax
push    ecx
call    sub_456330
add     esp, 18h
mov     ecx, eax
cmp     dword_4aebbc, 0
jz      loc_4924d9
cmp     dword_4aebbc, 6000h
jg      short loc_4923cf
fld     qword ptr [esp+1ch+var_8]
fcomp   ds:dbl_4ab8b0
fnstsw  ax
test    ah, 40h
jz      short loc_4923cf
mov     [esp+1ch+var_8], 0
mov     [esp+1ch+var_8+4], 40c58880h
jmp     loc_4924d9
cmp     dword_4aebbc, 0c000h
jg      short loc_49244d
fld     qword ptr [esp+1ch+var_8]
fcomp   ds:dbl_4ab8c0
fnstsw  ax
test    ah, 40h
jnz     short loc_4923fd
fld     qword ptr [esp+1ch+var_8]
fcomp   ds:dbl_4ab8b0
fnstsw  ax
test    ah, 40h
jz      short loc_49244d
fld     qword ptr [esp+1ch+var_8]
fcomp   ds:dbl_4ab8c0
fnstsw  ax
test    ah, 40h
jz      short loc_492423
mov     [esp+1ch+var_8], 0
mov     [esp+1ch+var_8+4], 40c58880h
jmp     loc_4924d9
fld     qword ptr [esp+1ch+var_8]
fcomp   ds:dbl_4ab8b0
fnstsw  ax
test    ah, 40h
jz      loc_4924d9
mov     [esp+1ch+var_8], 0
mov     [esp+1ch+var_8+4], 40d58880h
jmp     loc_4924d9
cmp     dword_4aebbc, 18000h
jl      short loc_49249b
cmp     dword_4aebbc, 30000h
jg      short loc_4924a7
fld     qword ptr [esp+1ch+var_8]
fcomp   ds:dbl_4ab8b8
fnstsw  ax
test    ah, 40h
jz      short loc_492488
mov     [esp+1ch+var_8], 0
mov     [esp+1ch+var_8+4], 40d58880h
jmp     short loc_4924d9
fld     qword ptr [esp+1ch+var_8]
fcomp   ds:dbl_4ab8c0
fnstsw  ax
test    ah, 40h
jz      short loc_4924d9
jmp     short loc_4924c9
cmp     dword_4aebbc, 30000h
jle     short loc_4924d9
fld     qword ptr [esp+1ch+var_8]
fcomp   ds:dbl_4ab8b8
fnstsw  ax
test    ah, 40h
jnz     short loc_4924c9
fld     qword ptr [esp+1ch+var_8]
fcomp   ds:dbl_4ab8c0
fnstsw  ax
test    ah, 40h
jz      short loc_4924d9
mov     [esp+1ch+var_8], 0
mov     [esp+1ch+var_8+4], 40e58880h
test    ecx, ecx
jnz     short loc_4924e6
cmp     dword_4aebbc, 0
jz      short loc_492537
mov     al, [ebx+1ah]
cmp     al, 8
jnz     short loc_492515
fld     qword ptr [esp+1ch+var_8]
mov     [esp+1ch+var_c], 0
mov     cl, [ebx+18h]
mov     byte ptr [esp+1ch+var_c], cl
call    __ftol
mov     ecx, [esp+1ch+var_c]
imul    ecx, eax
mov     [esp+1ch+var_c], ecx
mov     [ebp+8], ecx
jmp     short loc_49253d
cmp     al, 10h
jnz     short loc_492537
xor     eax, eax
mov     al, [ebx+18h]
mov     [esp+1ch+var_c], eax
fild    [esp+1ch+var_c]
fmul    qword ptr [esp+1ch+var_8]
fmul    ds:dbl_4ab8c8
call    __ftol
jmp     short loc_49253a
mov     eax, [ebx+26h]
mov     [ebp+8], eax
fld     qword ptr [esp+1ch+var_8]
call    __ftol
mov     [ebp+4], eax
cmp     byte ptr [ebx+14h], 3
jnz     short loc_492557
mov     word ptr [ebp+0ch], 1
jmp     short loc_492577
mov     ax, [ebx+24h]
test    ax, ax
jnz     short loc_492573
mov     al, [ebx+19h]
shr     al, 3
movzx   cx, byte ptr [ebx+18h]
movzx   ax, al
imul    ax, cx
mov     [ebp+0ch], ax
movzx   ax, byte ptr [ebx+1ah]
mov     [ebp+0eh], ax
mov     ax, [ebx+2eh]
test    ax, ax
jl      short loc_4925ad
mov     [ebp+10h], ax
mov     ax, [ebx+2eh]
test    ax, ax
jz      short loc_4925ad
lea     esi, [ebx+30h]
lea     edi, [ebp+12h]
movsx   eax, ax
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
xor     eax, eax
mov     al, [ebx+14h]
cmp     eax, 1
jz      short loc_4925cb
cmp     eax, 2
jz      short loc_4925c3
cmp     eax, 3
jz      short loc_4925cb
jmp     short loc_4925d1
mov     word ptr [ebp+0], 2
jmp     short loc_4925d1
mov     word ptr [ebp+0], 1
cmp     word ptr [ebp+2], 10h
jbe     short loc_4925ea
push    10h
push    3ch
call    sub_45c150
mov     word ptr [ebp+2], 10h
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    ebx
push    esi
push    edi
push    42h
mov     edi, [esp+10h+arg_0]
movsx   eax, word ptr [edi+2eh]
add     eax, 12h
push    eax
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_492628
mov     eax, 1
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    ds:globallock
push    eax
mov     ebx, eax
push    edi
call    sub_492350
add     esp, 8
cmp     dword_4aebb4, 0
jnz     short loc_492659
mov     eax, 1
pop     edi
mov     dword_4aebb4, esi
mov     dword_4aebb8, ebx
pop     esi
pop     ebx
retn
mov     eax, dword_4aebb4
push    eax
push    esi
call    sub_45bc50
add     esp, 8
test    eax, eax
jz      short loc_49268f
mov     eax, dword_4aebb4
push    eax
call    sub_45ba00
add     esp, 4
mov     eax, 1
mov     dword_4aebb4, esi
mov     dword_4aebb8, ebx
pop     edi
pop     esi
pop     ebx
retn
push    esi
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
cmp     dword_4aebb4, 0
jnz     short loc_4926b6
mov     eax, [esp+arg_4]
push    eax
call    sub_492600
add     esp, 4
push    0
mov     eax, dword_4aebb8
mov     ecx, [esp+4+arg_0]
push    0
push    0
push    eax
push    0ffffffffh
push    ecx
call    ds:dword_4aa088
retn
mov     eax, dword_4aebb4
test    eax, eax
jz      short loc_4926ec
push    eax
call    sub_45ba00
mov     dword_4aebb4, 0
add     esp, 4
mov     eax, [esp+arg_0]
push    eax
call    ds:dword_4aa08c
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_10]
mov     [ecx], eax
xor     eax, eax
push    20h
push    ecx
mov     [ecx+4], edx
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     [ecx+10h], eax
mov     [ecx+14h], eax
mov     ecx, [esp+8+arg_0]
push    ecx
call    ds:dword_4aa090
retn
mov     eax, [esp+arg_4]
push    20h
mov     ecx, [esp+4+arg_0]
push    eax
push    ecx
call    ds:dword_4aa094
retn
movsx   ecx, [esp+arg_4]
mov     eax, [esp+arg_8]
push    20h
mov     edx, [eax+ecx*4+100h]
mov     ecx, [esp+4+arg_0]
push    edx
push    ecx
call    ds:dword_4aa098
retn
mov     eax, [esp+arg_0]
push    eax
call    ds:dword_4aa09c
retn
mov     eax, [esp+arg_0]
mov     eax, [eax+10h]
and     eax, 1
retn
push    ebx
push    esi
mov     esi, [esp+8+psztext]
push    edi
movsx   edi, [esp+0ch+arg_4]
movsx   ebx, [esp+0ch+arg_8]
push    edi
mov     byte ptr [esi], 0
push    esi
push    ebx
call    ds:waveoutgeterrortexta
test    ax, ax
jz      loc_492858
add     ebx, 6
cmp     ebx, 29h
ja      short def_4927c6
xor     eax, eax
mov     al, ds:byte_4928b0[ebx]
jmp     ds:jpt_4927c6[eax*4]
xor     ax, ax
jmp     short loc_492848
mov     ax, 14h
jmp     short loc_492848
mov     ax, 13h
jmp     short loc_492848
mov     ax, 12h
jmp     short loc_492848
mov     ax, 11h
jmp     short loc_492848
mov     ax, 10h
jmp     short loc_492848
mov     ax, 0fh
jmp     short loc_492848
mov     ax, 1
jmp     short loc_492848
mov     ax, 2
jmp     short loc_492848
mov     ax, 3
jmp     short loc_492848
mov     ax, 4
jmp     short loc_492848
mov     ax, 5
jmp     short loc_492848
mov     ax, 6
jmp     short loc_492848
mov     ax, 7
jmp     short loc_492848
mov     ax, 8
jmp     short loc_492848
mov     ax, 9
jmp     short loc_492848
mov     ax, 0ah
jmp     short loc_492848
mov     ax, 0bh
jmp     short loc_492848
mov     ax, 0ch
jmp     short loc_492848
mov     ax, 0dh
jmp     short loc_492848
mov     ax, 0eh
push    eax
push    1b0ch
push    edi
push    esi
call    sub_47fe70
add     esp, 10h
pop     edi
pop     esi
pop     ebx
retn
mov     dword ptr [ecx+1ch], 0
add     ecx, 4
jmp     sub_459ce0
push    ebx
push    esi
xor     bx, bx
push    edi
mov     dword ptr [ecx], offset off_4ab250
push    ebp
mov     edi, ecx
movsx   ebp, bx
cmp     [edi+10h], ebp
jle     loc_4929c7
lea     esi, [edi+4]
push    ebp
mov     ecx, esi
call    sub_459dc0
test    eax, eax
jz      loc_4929c0
test    ebp, ebp
jz      short loc_492953
cmp     ebp, 1
jz      short loc_492976
push    ebp
mov     ecx, esi
cmp     ebp, 2
jz      short loc_4929a4
call    sub_459dc0
mov     esi, eax
test    esi, esi
jz      loc_4929c0
inc     bx
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
jmp     short loc_4928ff
push    ebp
mov     ecx, esi
call    sub_459dc0
mov     esi, eax
test    esi, esi
jz      short loc_4929c0
inc     bx
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
jmp     short loc_4928ff
push    ebp
mov     ecx, esi
call    sub_459dc0
mov     esi, eax
test    esi, esi
jz      short loc_4929c0
inc     bx
lea     ecx, [esi+14h]
call    sub_44d0d0
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
jmp     loc_4928ff
call    sub_459dc0
mov     esi, eax
test    esi, esi
jz      short loc_4929c0
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
inc     bx
jmp     loc_4928ff
mov     eax, [edi+18h]
test    eax, eax
jz      short loc_4929d7
push    eax
call    ??3@yaxpax@z
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
movsx   eax, [esp+arg_0]
push    esi
test    eax, eax
jz      short loc_492a39
cmp     eax, 1
jz      short loc_492a5f
cmp     eax, 2
jz      loc_492a93
push    1ch
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      loc_492ab9
lea     ecx, [esi+4]
mov     dword ptr [esi], offset off_4ab238
call    sub_44d050
mov     dword ptr [esi], offset off_4ab208
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi+18h], 0
mov     dword ptr [esi], offset off_4ab930
jmp     loc_492abb
push    14h
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_492ab9
lea     ecx, [esi+4]
mov     dword ptr [esi], offset off_4ab238
call    sub_44d050
mov     dword ptr [esi], offset off_4ab8d0
jmp     short loc_492abb
push    24h
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_492ab9
lea     ecx, [esi+4]
mov     dword ptr [esi], offset off_4ab238
call    sub_44d050
lea     ecx, [esi+14h]
mov     dword ptr [esi], offset off_4ab208
call    sub_44d050
mov     dword ptr [esi], offset off_4ab1d8
jmp     short loc_492abb
push    5eh
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_492ab9
lea     ecx, [esi+4]
mov     dword ptr [esi], offset off_4ab238
call    sub_44d050
mov     dword ptr [esi], offset off_4ab900
jmp     short loc_492abb
xor     esi, esi
test    esi, esi
jz      short loc_492ae1
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+18h]
test    eax, eax
jz      short loc_492ae1
test    esi, esi
jz      short loc_492adf
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
xor     esi, esi
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_8]
mov     edx, [esp+arg_4]
push    eax
push    edx
mov     eax, [ecx]
call    dword ptr [eax+8]
retn    0ch
xor     eax, eax
retn
xor     eax, eax
retn
mov     eax, [esp+arg_8]
mov     edx, [esp+arg_4]
push    eax
push    edx
mov     eax, [ecx]
call    dword ptr [eax+8]
retn    0ch
mov     eax, [esp+arg_8]
mov     edx, [esp+arg_4]
push    eax
push    edx
mov     eax, [ecx]
call    dword ptr [eax+8]
retn    0ch
mov     eax, [ecx+18h]
retn
xor     eax, eax
retn    4
xor     eax, eax
retn
sub     esp, 0ch
mov     [esp+0ch+var_8], ecx
push    ebx
push    esi
push    edi
push    ebp
call    sub_4928e0
mov     esi, eax
test    esi, esi
jnz     loc_492c8c
mov     ebx, [esp+1ch+arg_0]
test    ebx, ebx
jz      loc_492c8c
mov     eax, [esp+1ch+arg_4]
push    eax
push    ebx
call    sub_492ed0
add     esp, 8
cmp     eax, 1
jz      short loc_492c04
mov     eax, [esp+1ch+arg_4]
mov     ecx, [esp+1ch+var_8]
push    eax
push    ebx
push    0
mov     ebx, [ecx]
call    dword ptr [ebx+14h]
mov     esi, eax
test    esi, esi
jnz     loc_492c8c
mov     eax, [esp+1ch+var_8]
mov     dword ptr [eax+1ch], 1
jmp     loc_492c8c
lea     edi, [ebx+8]
mov     eax, [ebx+4]
xor     bx, bx
mov     [esp+1ch+var_4], eax
test    eax, eax
jle     short loc_492c8c
test    edi, edi
jz      short loc_492c8c
mov     ebp, [edi]
test    ebp, ebp
jz      short loc_492c77
cmp     ebp, [esp+1ch+arg_4]
jg      short loc_492c87
mov     eax, [esp+1ch+var_8]
push    ebx
add     eax, 4
mov     ecx, [esp+20h+var_8]
movsx   esi, bx
mov     [esp+20h+var_c], eax
call    sub_4929e0
mov     ecx, [esp+1ch+var_c]
push    eax
push    esi
call    sub_459df0
mov     ecx, [esp+1ch+var_c]
push    esi
call    sub_459dc0
test    eax, eax
jnz     short loc_492c5d
mov     esi, 8
jmp     short loc_492c75
mov     ecx, [esp+1ch+var_c]
push    esi
call    sub_459dc0
mov     esi, [eax]
mov     ecx, eax
push    ebp
lea     eax, [edi+4]
push    eax
call    dword ptr [esi+8]
mov     esi, eax
add     edi, ebp
inc     bx
add     edi, 4
movsx   eax, bx
cmp     eax, [esp+1ch+var_4]
jl      short loc_492c15
jmp     short loc_492c8c
mov     esi, 1f44h
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn    8
push    ebx
push    esi
xor     bx, bx
push    edi
push    ebp
mov     esi, ecx
mov     edi, 8
cmp     dword ptr [esi+10h], 0
jle     short loc_492ce3
movsx   ebp, bx
push    ebp
lea     ecx, [esi+4]
call    sub_459dc0
test    eax, eax
jz      short loc_492cd6
push    ebp
lea     ecx, [esi+4]
call    sub_459dc0
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+0ch]
add     edi, eax
inc     bx
add     edi, 4
movsx   eax, bx
cmp     eax, [esi+10h]
jl      short loc_492cb4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
cmp     [esp+4+arg_0], 0
push    ebx
push    esi
push    edi
push    ebp
mov     edi, ecx
jz      short loc_492d78
mov     ecx, [esp+14h+arg_0]
mov     [esp+14h+var_2], 0
lea     esi, [ecx+8]
mov     dword ptr [ecx], 1
mov     eax, [edi+10h]
mov     [ecx+4], eax
test    eax, eax
jle     short loc_492d78
movsx   ebx, [esp+14h+var_2]
push    ebx
lea     ecx, [edi+4]
call    sub_459dc0
test    eax, eax
jnz     short loc_492d38
mov     dword ptr [esi], 0
jmp     short loc_492d62
push    ebx
lea     ecx, [edi+4]
call    sub_459dc0
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+0ch]
mov     [esi], eax
mov     ebp, eax
push    ebx
lea     ecx, [edi+4]
call    sub_459dc0
mov     ebx, [eax]
mov     ecx, eax
lea     eax, [esi+4]
add     esi, ebp
push    eax
call    dword ptr [ebx+10h]
inc     [esp+14h+var_2]
add     esi, 4
mov     ecx, [esp+14h+arg_0]
movsx   eax, [esp+14h+var_2]
cmp     eax, [ecx+4]
jl      short loc_492d1e
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    4
push    ebx
push    esi
push    edi
xor     esi, esi
movsx   ebx, [esp+0ch+arg_4]
cmp     [ecx+10h], ebx
jge     short loc_492db5
add     ecx, 4
mov     eax, [esp+0ch+arg_0]
push    eax
push    ebx
call    sub_459df0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    8
lea     edi, [ecx+4]
push    ebx
mov     ecx, edi
call    sub_459dc0
test    eax, eax
jz      short loc_492dcc
push    ebx
mov     ecx, edi
call    sub_459e30
mov     eax, [esp+0ch+arg_0]
mov     ecx, edi
push    eax
push    ebx
call    sub_459df0
push    ebx
mov     ecx, edi
call    sub_459dc0
test    eax, eax
jnz     short loc_492dea
mov     esi, 8
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, [esp+arg_0]
push    1
push    eax
call    sub_492d90
retn    4
push    esi
mov     esi, ecx
mov     ecx, [esp+4+arg_0]
mov     eax, [ecx]
call    dword ptr [eax+5ch]
push    eax
mov     ecx, esi
call    sub_492e00
pop     esi
retn    4
push    ebx
mov     edx, [ecx+1ch]
mov     eax, [esp+4+arg_0]
push    esi
push    edi
xor     esi, esi
xor     edi, edi
lea     ebx, [ecx+4]
push    1
mov     [eax], edx
mov     [ecx+1ch], esi
mov     ecx, ebx
call    sub_459dc0
test    eax, eax
jz      short loc_492e60
push    1
mov     ecx, ebx
call    sub_459dc0
mov     esi, eax
jmp     short loc_492e97
push    0
mov     ecx, ebx
call    sub_459dc0
test    eax, eax
jnz     short loc_492e7e
push    2
mov     ecx, ebx
call    sub_459dc0
test    eax, eax
jz      short loc_492e92
push    2
jmp     short loc_492e80
push    0
mov     ecx, ebx
call    sub_459dc0
mov     ecx, eax
push    1
mov     eax, [ecx]
call    dword ptr [eax+20h]
mov     esi, eax
mov     edi, 1
test    esi, esi
jz      short loc_492ec5
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+28h]
mov     ebx, eax
test    edi, edi
jz      short loc_492ebd
test    esi, esi
jz      short loc_492ebd
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn    4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    4
mov     edx, [esp+arg_0]
sub     esp, 0ch
push    esi
xor     si, si
movsx   eax, si
inc     si
shl     eax, 2
cmp     si, 3
mov     ecx, [eax+edx]
mov     [esp+eax+10h+var_c], ecx
jl      short loc_492edb
mov     ecx, [esp+10h+var_8]
sub     ecx, [esp+10h+arg_4]
add     ecx, [esp+10h+var_4]
add     ecx, [esp+10h+var_c]
cmp     ecx, 0fffffff4h
jnz     short loc_492f0c
xor     eax, eax
pop     esi
add     esp, 0ch
retn
movsx   eax, word ptr [esp+10h+var_c]
pop     esi
add     esp, 0ch
retn
sub     esp, 4
mov     [esp+4+var_4], ecx
push    ebx
push    esi
push    edi
push    ebp
call    sub_4928e0
test    eax, eax
jnz     short loc_492fae
mov     ebp, [esp+14h+arg_4]
test    ebp, ebp
jz      short loc_492fae
xor     si, si
mov     edi, ebp
test    ebp, ebp
jz      short loc_492fae
mov     ebx, [ebp+0]
test    ebx, ebx
jz      short loc_492f92
cmp     [esp+14h+arg_8], ebx
jl      short loc_492fa9
mov     ecx, [esp+14h+var_4]
push    esi
call    sub_4929e0
test    eax, eax
jz      short loc_492f8b
mov     ecx, [esp+14h+var_4]
push    esi
push    eax
add     ebp, 4
call    sub_492d90
movsx   eax, si
mov     ecx, [esp+14h+var_4]
push    eax
add     ecx, 4
call    sub_459dc0
mov     ecx, eax
push    ebx
mov     eax, [ecx]
push    ebp
push    0
call    dword ptr [eax+14h]
jmp     short loc_492f90
mov     eax, 8
add     edi, ebx
inc     si
add     edi, 4
cmp     si, 3
mov     ebp, edi
jl      short loc_492f41
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    0ch
mov     eax, 1f44h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    0ch
mov     eax, [esp+arg_0]
add     ecx, 4
add     eax, 4
push    eax
call    sub_44d130
retn    4
push    esi
push    edi
mov     esi, ecx
push    14h
call    ??2@yapaxi@z
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_49300a
lea     ecx, [edi+4]
mov     dword ptr [edi], offset off_4ab238
call    sub_44d050
mov     dword ptr [edi], offset off_4ab8d0
jmp     short loc_49300c
xor     edi, edi
test    edi, edi
jz      short loc_493033
push    esi
mov     ecx, edi
call    sub_492fc0
test    eax, eax
jz      short loc_493033
test    edi, edi
jz      short loc_493031
lea     ecx, [edi+4]
call    sub_44d0d0
push    edi
call    ??3@yaxpax@z
add     esp, 4
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
lea     esi, [ecx+4]
mov     ecx, esi
call    sub_44d2f0
test    eax, eax
jz      short loc_493058
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0ch]
pop     esi
retn
xor     eax, eax
pop     esi
retn
add     ecx, 4
mov     eax, [esp+arg_0]
push    eax
mov     eax, [ecx]
call    dword ptr [eax+10h]
retn    4
add     ecx, 4
mov     eax, [esp+arg_4]
mov     edx, [esp+arg_0]
push    eax
push    edx
mov     eax, [ecx]
call    dword ptr [eax+8]
retn    8
push    ebx
push    esi
push    edi
lea     esi, [ecx+4]
mov     ecx, esi
call    sub_44d2f0
test    eax, eax
jz      short loc_4930d5
mov     ecx, esi
call    sub_44d310
mov     edi, [esp+0ch+arg_4]
mov     ecx, [esi+8]
movsx   eax, di
mov     ebx, [esp+0ch+lpstring1]
push    eax
push    ecx
push    ebx
call    sub_47f9d0
add     esp, 0ch
mov     ecx, esi
mov     byte ptr [ebx+edi-1], 0
call    sub_44d360
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     ebx, [esp+0ch+lpstring1]
xor     eax, eax
pop     edi
pop     esi
mov     byte ptr [ebx], 0
pop     ebx
retn    0ch
movsx   eax, [esp+arg_0]
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
cmp     eax, 1
jz      short loc_493110
cmp     eax, 2
jz      loc_493189
mov     eax, edi
pop     edi
pop     esi
retn    4
push    24h
call    ??2@yapaxi@z
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_493144
lea     ecx, [edi+4]
mov     dword ptr [edi], offset off_4ab238
call    sub_44d050
lea     ecx, [edi+14h]
mov     dword ptr [edi], offset off_4ab208
call    sub_44d050
mov     dword ptr [edi], offset off_4ab1d8
jmp     short loc_493146
xor     edi, edi
test    edi, edi
jz      short loc_4931a2
add     esi, 4
mov     ecx, esi
call    sub_44d2f0
test    eax, eax
jz      short loc_4931a2
push    esi
mov     eax, [edi]
mov     ecx, edi
call    dword ptr [eax+1ch]
mov     ecx, eax
call    sub_44d130
test    eax, eax
jz      short loc_4931a2
test    edi, edi
jz      short loc_493180
lea     ecx, [edi+4]
call    sub_44d0d0
push    edi
call    ??3@yaxpax@z
add     esp, 4
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
retn    4
add     esi, 4
mov     ecx, esi
call    sub_44d2f0
test    eax, eax
jz      short loc_4931a2
push    esi
call    sub_493910
add     esp, 4
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
retn    4
push    esi
push    edi
mov     esi, ecx
mov     edi, [esp+8+arg_0]
lea     eax, [edi+14h]
lea     ecx, [esi+14h]
push    eax
call    sub_44d130
test    eax, eax
jnz     short loc_4931d4
add     edi, 4
lea     ecx, [esi+4]
push    edi
call    sub_44d130
pop     edi
pop     esi
retn    4
push    esi
push    edi
mov     esi, ecx
push    24h
call    ??2@yapaxi@z
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_493218
lea     ecx, [edi+4]
mov     dword ptr [edi], offset off_4ab238
call    sub_44d050
lea     ecx, [edi+14h]
mov     dword ptr [edi], offset off_4ab208
call    sub_44d050
mov     dword ptr [edi], offset off_4ab1d8
jmp     short loc_49321a
xor     edi, edi
test    edi, edi
jz      short loc_493249
push    esi
mov     ecx, edi
call    sub_4931b0
test    eax, eax
jz      short loc_493249
test    edi, edi
jz      short loc_493247
lea     ecx, [edi+14h]
call    sub_44d0d0
lea     ecx, [edi+4]
call    sub_44d0d0
push    edi
call    ??3@yaxpax@z
add     esp, 4
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
lea     ecx, [ecx+14h]
call    sub_44d0b0
lea     ecx, [esi+4]
call    sub_44d0b0
xor     eax, eax
pop     esi
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
mov     edi, ecx
mov     esi, [ebx]
cmp     [esp+0ch+arg_4], esi
jge     short loc_49328c
mov     eax, 1388h
pop     edi
pop     esi
pop     ebx
retn    8
lea     ecx, [edi+4]
push    esi
lea     eax, [ebx+4]
push    eax
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jnz     short loc_4932b0
lea     eax, [esi+ebx+4]
lea     ecx, [edi+14h]
mov     edx, [eax]
add     eax, 4
mov     ebx, [ecx]
push    edx
push    eax
call    dword ptr [ebx+8]
pop     edi
pop     esi
pop     ebx
retn    8
push    esi
push    edi
lea     edi, [ecx+4]
mov     esi, ecx
mov     ecx, edi
call    sub_44d2f0
test    eax, eax
jz      short loc_4932ea
lea     ecx, [esi+14h]
mov     eax, [ecx]
call    dword ptr [eax+0ch]
mov     esi, eax
mov     ecx, edi
mov     eax, [edi]
call    dword ptr [eax+0ch]
lea     eax, [esi+eax+8]
pop     edi
pop     esi
retn
xor     eax, eax
pop     edi
pop     esi
retn
push    ebx
push    esi
lea     esi, [ecx+4]
push    edi
push    ebp
mov     ebx, ecx
mov     ecx, esi
call    sub_44d2f0
test    eax, eax
jz      short loc_493350
mov     ecx, esi
mov     eax, [esi]
call    dword ptr [eax+0ch]
mov     ebp, eax
mov     edi, [esp+10h+arg_0]
mov     ecx, esi
lea     eax, [edi+4]
push    eax
mov     esi, [esi]
add     ebx, 14h
mov     [edi], ebp
lea     edi, [ebp+edi+4]
call    dword ptr [esi+10h]
mov     ecx, ebx
call    sub_44d2f0
test    eax, eax
jz      short loc_49334a
mov     esi, [ebx]
mov     ecx, ebx
add     edi, 4
call    dword ptr [esi+0ch]
push    edi
mov     ecx, ebx
mov     [edi-4], eax
call    dword ptr [esi+10h]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    4
mov     dword ptr [edi], 0
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    4
movsx   eax, [esp+arg_0]
push    ebx
push    esi
push    edi
mov     ebx, ecx
push    ebp
xor     esi, esi
test    eax, eax
jz      short loc_493383
cmp     eax, 2
jz      loc_493409
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    4
push    14h
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_4933a9
lea     ecx, [esi+4]
mov     dword ptr [esi], offset off_4ab238
call    sub_44d050
mov     dword ptr [esi], offset off_4ab8d0
jmp     short loc_4933ab
xor     esi, esi
test    esi, esi
jz      loc_493444
xor     ebp, ebp
lea     edi, [ebx+14h]
mov     ecx, edi
call    sub_44d2f0
test    eax, eax
jz      short loc_4933c6
push    edi
jmp     short loc_4933d5
add     ebx, 4
mov     ecx, ebx
call    sub_44d2f0
test    eax, eax
jz      short loc_4933e5
push    ebx
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+1ch]
mov     ecx, eax
call    sub_44d130
mov     ebp, eax
test    ebp, ebp
jz      short loc_493444
test    esi, esi
jz      short loc_4933fe
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
xor     esi, esi
pop     ebp
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
lea     edi, [ebx+4]
mov     ecx, edi
call    sub_44d2f0
test    eax, eax
jz      short loc_49342b
push    edi
call    sub_493910
add     esp, 4
mov     esi, eax
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    4
add     ebx, 14h
mov     ecx, ebx
call    sub_44d2f0
test    eax, eax
jz      short loc_493444
push    ebx
call    sub_493910
add     esp, 4
mov     esi, eax
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 10h
push    esi
push    edi
mov     esi, ecx
lea     ecx, [esp+18h+var_10]
call    sub_44d050
mov     eax, [esp+18h+arg_8]
mov     ecx, [esp+18h+lpstring]
push    eax
push    ecx
lea     ecx, [esp+20h+var_10]
call    sub_44d480
mov     edi, eax
test    edi, edi
jnz     short loc_493488
lea     eax, [esp+18h+var_10]
lea     ecx, [esi+4]
push    eax
call    sub_44d130
mov     edi, eax
lea     ecx, [esp+18h+var_10]
call    sub_44d0d0
mov     eax, edi
pop     edi
pop     esi
add     esp, 10h
retn    0ch
sub     esp, 8
push    esi
push    edi
lea     edi, [ecx+4]
mov     esi, ecx
mov     ecx, edi
call    sub_44d2f0
test    eax, eax
jz      short loc_493508
mov     ecx, edi
add     esi, 14h
mov     [esp+10h+var_8], edi
call    sub_44d310
mov     ecx, esi
mov     [esp+10h+var_4], esi
call    sub_44d310
mov     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+var_8]
movsx   edx, [esp+10h+arg_4]
push    eax
push    ecx
mov     eax, [esp+18h+arg_0]
push    offset ass_1
push    edx
push    eax
call    sub_401800
add     esp, 14h
mov     ecx, esi
call    sub_44d360
mov     ecx, edi
call    sub_44d360
xor     eax, eax
pop     edi
pop     esi
add     esp, 8
retn    0ch
mov     eax, [esp+10h+arg_0]
pop     edi
pop     esi
mov     byte ptr [eax], 0
xor     eax, eax
add     esp, 8
retn    0ch
push    esi
push    edi
mov     esi, ecx
push    5eh
call    ??2@yapaxi@z
add     esp, 4
mov     edi, eax
test    edi, edi
jz      short loc_49354a
lea     ecx, [edi+4]
mov     dword ptr [edi], offset off_4ab238
call    sub_44d050
mov     dword ptr [edi], offset off_4ab900
jmp     short loc_49354c
xor     edi, edi
test    edi, edi
jz      short loc_493573
push    esi
mov     ecx, edi
call    sub_493590
test    eax, eax
jz      short loc_493573
test    edi, edi
jz      short loc_493571
lea     ecx, [edi+4]
call    sub_44d0d0
push    edi
call    ??3@yaxpax@z
add     esp, 4
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
retn
xor     eax, eax
mov     [ecx+14h], ax
mov     [ecx+16h], eax
mov     [ecx+1ah], al
mov     [ecx+5ah], eax
retn
mov     edx, [esp+arg_0]
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     eax, [edx+5ah]
lea     esi, [edx+14h]
lea     edi, [ebx+14h]
mov     ecx, 11h
add     edx, 4
push    edx
mov     [ebx+5ah], eax
rep movsd
movsw
lea     ecx, [ebx+4]
call    sub_44d130
pop     edi
pop     esi
pop     ebx
retn    4
push    ebx
push    esi
push    edi
mov     esi, ecx
xor     ebx, ebx
mov     edi, [esp+0ch+arg_0]
mov     eax, [edi]
push    eax
call    sub_485080
add     esp, 4
mov     [edi], eax
mov     ax, [edi+4]
push    eax
call    sub_485060
mov     [edi+4], ax
add     esp, 4
mov     eax, [edi]
mov     [esi+5ah], eax
cmp     [edi+4], bx
jnz     short loc_49363c
mov     ax, [edi+6]
push    eax
call    sub_485060
mov     [edi+6], ax
add     esp, 4
mov     eax, [edi+8]
push    eax
call    sub_485080
add     esp, 4
mov     [edi+8], eax
mov     ax, [edi+6]
add     edi, 0ch
mov     [esi+14h], ax
push    40h
mov     ecx, [edi-4]
push    edi
mov     [esi+16h], ecx
add     esi, 1ah
push    esi
call    sub_47f9f0
add     esp, 0ch
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn    8
lea     ecx, [esi+4]
mov     eax, [esp+0ch+arg_4]
sub     eax, 6
add     edi, 6
push    eax
mov     ebx, [ecx]
push    edi
call    dword ptr [ebx+8]
mov     ebx, eax
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
retn    8
push    esi
lea     esi, [ecx+4]
mov     ecx, esi
call    sub_44d2f0
test    eax, eax
jz      short loc_49367b
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0ch]
add     eax, 6
pop     esi
retn
mov     eax, 4ch
pop     esi
retn
push    ebx
push    esi
mov     eax, [ecx+5ah]
push    edi
push    ebp
mov     ebx, ecx
mov     esi, [esp+10h+arg_0]
lea     ebp, [ebx+4]
mov     ecx, ebp
lea     edi, [esi+4]
mov     [esi], eax
call    sub_44d2f0
test    eax, eax
jz      short loc_4936c3
mov     word ptr [edi], 1
lea     eax, [esi+6]
push    eax
mov     ebx, [ebp+0]
mov     ecx, ebp
call    dword ptr [ebx+10h]
jmp     short loc_493704
mov     word ptr [edi], 0
mov     ax, [ebx+14h]
mov     [esi+6], ax
mov     ecx, [ebx+16h]
mov     [esi+8], ecx
mov     ax, [esi+6]
push    eax
call    sub_485060
mov     [esi+6], ax
add     esp, 4
mov     ecx, [esi+8]
add     ebx, 1ah
push    ecx
call    sub_485080
add     esp, 4
lea     ecx, [esi+0ch]
mov     [esi+8], eax
push    ebx
push    ecx
call    ds:lstrcpya
mov     eax, [esi]
push    eax
call    sub_485080
add     esp, 4
mov     [esi], eax
mov     ax, [edi]
push    eax
call    sub_485060
mov     [edi], ax
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    4
push    ebx
push    esi
push    edi
mov     ebx, ecx
lea     edi, [ecx+4]
mov     ecx, edi
call    sub_44d2f0
test    eax, eax
jz      short loc_493777
mov     ecx, edi
call    sub_44d310
mov     esi, [esp+0ch+arg_4]
mov     ecx, [edi+8]
movsx   eax, si
mov     ebx, [esp+0ch+lpstring1]
push    eax
push    ecx
push    ebx
call    sub_47f9d0
add     esp, 0ch
mov     ecx, edi
mov     byte ptr [ebx+esi-1], 0
call    sub_44d360
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     esi, [esp+0ch+arg_4]
add     ebx, 1ah
movsx   eax, si
push    eax
push    ebx
mov     ebx, [esp+14h+lpstring1]
push    ebx
call    sub_47f9d0
add     esp, 0ch
xor     eax, eax
mov     byte ptr [ebx+esi-1], 0
pop     edi
pop     esi
pop     ebx
retn    0ch
sub     esp, 108h
push    ebx
push    esi
push    edi
mov     ebx, ecx
push    ebp
xor     esi, esi
movsx   eax, [esp+118h+arg_0]
xor     ebp, ebp
test    eax, eax
jz      short loc_4937c3
cmp     eax, 1
jz      short loc_4937e9
jmp     short loc_49381f
push    14h
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_49381d
lea     ecx, [esi+4]
mov     dword ptr [esi], offset off_4ab238
call    sub_44d050
mov     dword ptr [esi], offset off_4ab8d0
jmp     short loc_49381f
push    24h
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_49381d
lea     ecx, [esi+4]
mov     dword ptr [esi], offset off_4ab238
call    sub_44d050
lea     ecx, [esi+14h]
mov     dword ptr [esi], offset off_4ab208
call    sub_44d050
mov     dword ptr [esi], offset off_4ab1d8
jmp     short loc_49381f
xor     esi, esi
test    esi, esi
jz      loc_4938e6
lea     edi, [ebx+4]
mov     ecx, edi
call    sub_44d2f0
test    eax, eax
jz      loc_4938d2
mov     ecx, edi
call    sub_44d310
push    3ah
mov     eax, [edi+8]
push    eax
call    _strchr
mov     [esp+120h+string1], 0
add     esp, 8
cmp     eax, 1
sbb     ebx, ebx
inc     ebx
jz      short loc_493889
lea     eax, [esp+118h+string1]
push    105h
push    offset szdelim
push    eax
call    sub_47f9d0
lea     eax, [esp+124h+string1]
add     esp, 0ch
push    105h
push    offset szdelim
push    eax
call    sub_47f990
add     esp, 0ch
push    105h
mov     eax, [edi+8]
lea     ecx, [esp+11ch+string1]
push    eax
push    ecx
call    sub_47f990
add     esp, 0ch
test    ebx, ebx
jz      short loc_4938b4
lea     eax, [esp+118h+str]
push    5ch
push    3ah
push    eax
call    sub_47fdf0
add     esp, 0ch
lea     eax, [esp+118h+string1]
mov     ebx, [esi]
push    eax
mov     ecx, esi
call    dword ptr [ebx+1ch]
mov     ecx, eax
call    sub_44d0e0
mov     ebp, eax
mov     ecx, edi
call    sub_44d360
jmp     short loc_4938e6
add     ebx, 1ah
mov     eax, [esi]
push    ebx
mov     ecx, esi
call    dword ptr [eax+1ch]
mov     ecx, eax
call    sub_44d0e0
mov     ebp, eax
test    ebp, ebp
jz      short loc_493901
test    esi, esi
jz      short loc_4938ff
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
xor     esi, esi
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn    4
sub     esp, 108h
push    esi
push    edi
push    5eh
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_49393e
lea     ecx, [esi+4]
mov     dword ptr [esi], offset off_4ab238
call    sub_44d050
mov     dword ptr [esi], offset off_4ab900
jmp     short loc_493940
xor     esi, esi
test    esi, esi
jz      loc_4939f5
mov     edi, [esp+110h+arg_0]
mov     ecx, edi
call    sub_44d310
push    105h
mov     eax, [edi+8]
lea     ecx, [esp+114h+string1]
push    eax
push    ecx
call    sub_47f9d0
mov     [esp+11ch+var_4], 0
add     esp, 0ch
mov     ecx, edi
call    sub_44d360
cmp     [esp+110h+var_107], 5ch
lea     edi, [esp+110h+string1]
jz      short loc_493994
cmp     [esp+110h+var_107], 2fh
jz      short loc_493994
cmp     [esp+110h+var_107], 3ah
jnz     short loc_493998
lea     edi, [esp+110h+var_107]
test    edi, edi
jz      short loc_4939f5
mov     al, [edi]
cmp     al, 5ch
jz      short loc_4939aa
cmp     al, 2fh
jz      short loc_4939aa
cmp     al, 3ah
jnz     short loc_4939ad
inc     edi
jnz     short loc_49399c
test    edi, edi
jz      short loc_4939f5
push    3ah
push    5ch
push    edi
call    sub_47fdf0
add     esp, 0ch
push    3ah
push    2fh
push    edi
call    sub_47fdf0
add     esp, 0ch
mov     eax, [esi]
mov     ecx, esi
push    edi
call    dword ptr [eax+1ch]
mov     ecx, eax
call    sub_44d0e0
test    eax, eax
jz      short loc_4939f5
test    esi, esi
jz      short loc_4939f3
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
xor     esi, esi
mov     eax, esi
pop     edi
pop     esi
add     esp, 108h
retn
push    esi
push    edi
mov     edi, ecx
mov     esi, [esp+8+arg_0]
mov     eax, [esi+14h]
push    eax
call    sub_45bab0
add     esp, 4
mov     [edi+14h], eax
cmp     dword ptr [edi+14h], 1
mov     eax, [esi+18h]
mov     [edi+18h], eax
pop     edi
sbb     eax, eax
pop     esi
and     eax, 8
retn    4
push    esi
push    edi
mov     edi, ecx
push    1ch
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_493a6e
lea     ecx, [esi+4]
mov     dword ptr [esi], offset off_4ab238
call    sub_44d050
mov     dword ptr [esi], offset off_4ab208
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi+18h], 0
mov     dword ptr [esi], offset off_4ab930
jmp     short loc_493a70
xor     esi, esi
test    esi, esi
jz      short loc_493a97
push    edi
mov     ecx, esi
call    sub_493a00
test    eax, eax
jz      short loc_493a97
test    esi, esi
jz      short loc_493a95
lea     ecx, [esi+4]
call    sub_44d0d0
push    esi
call    ??3@yaxpax@z
add     esp, 4
xor     esi, esi
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
lea     ecx, [ecx+4]
call    sub_44d0b0
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_493abb
push    eax
call    sub_45ba00
add     esp, 4
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi+18h], 0
xor     eax, eax
pop     esi
retn
push    ebx
push    esi
mov     ebx, [ecx+14h]
push    edi
mov     esi, ecx
push    ebx
call    ds:globallock
mov     edx, [esi+18h]
mov     edi, [esp+0ch+arg_0]
mov     esi, eax
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
push    ebx
and     ecx, 3
rep movsb
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
retn    4
push    ebx
push    esi
push    edi
mov     esi, ecx
mov     ebx, [esp+0ch+dwbytes]
push    ebp
push    42h
push    ebx
call    sub_45b8f0
add     esp, 8
mov     ebp, eax
mov     [esi+14h], eax
test    ebp, ebp
jz      short loc_493b5c
push    ebp
call    ds:globallock
mov     edi, eax
mov     ecx, ebx
shr     ecx, 2
mov     [esi+18h], ebx
mov     esi, [esp+10h+arg_0]
rep movsd
mov     ecx, ebx
push    ebp
and     ecx, 3
rep movsb
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    8
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+lpstring1]
movsx   eax, di
push    eax
push    offset aunknown
push    esi
call    sub_47f9d0
add     esp, 0ch
xor     eax, eax
mov     byte ptr [esi+edi-1], 0
pop     edi
pop     esi
retn    0ch
cmp     ds:dword_4aa0a8, 0
jz      short loc_493baf
mov     eax, 1
retn
jmp     sub_493cf0
sub     esp, 1a4h
mov     [esp+1a4h+var_1a2], 0
mov     eax, [esp+1a4h+arg_0]
push    ebx
lea     ecx, [esp+1a8h+var_132]
push    esi
push    edi
push    ebp
push    105h
push    eax
push    ecx
call    sub_47f9f0
lea     ecx, [esp+1c0h+var_188]
mov     esi, [esp+1c0h+arg_4]
add     esp, 0ch
push    ecx
push    1
push    0
mov     ecx, esi
call    sub_412d30
call    eax
cmp     word ptr [esp+1b4h+var_188], 2
jz      short loc_493c14
xor     ax, ax
jmp     loc_493cdf
cmp     [esp+1b4h+var_184], 0
jz      loc_493cda
lea     ebx, [esp+1b4h+var_1a0]
lea     edi, [esp+1b4h+var_16c]
xor     ebp, ebp
mov     ax, [esp+1b4h+var_184]
push    ebx
mov     [esp+1b8h+var_1a0], ax
push    2
push    ebp
mov     ecx, esi
call    sub_412d30
call    eax
mov     ax, [esp+1b4h+var_1a0]
push    16h
mov     word ptr [esp+1b8h+var_2d], ax
lea     ecx, [esp+1b8h+var_19e]
lea     edx, [esp+1b8h+var_148]
push    ecx
push    edx
call    sub_47f9f0
add     esp, 0ch
mov     ecx, esi
push    edi
push    3
push    ebp
call    sub_412d30
call    eax
lea     ecx, [esp+1b4h+var_16c]
push    1eh
lea     edx, [esp+1b8h+var_2b]
push    ecx
push    edx
call    sub_47f9f0
lea     ecx, [esp+1c0h+var_14e]
lea     edx, [esp+1c0h+var_9]
add     esp, 0ch
push    4
push    ecx
push    edx
call    sub_47f9f0
lea     ecx, [esp+1c0h+var_148]
mov     [esp+1c0h+var_5], ebp
mov     [esp+1c0h+var_d], ebp
add     esp, 0ch
push    147h
push    ecx
push    offset dword_4aa1d8
call    sub_445f90
add     esp, 0ch
test    eax, eax
jz      short loc_493cd3
dec     [esp+1b4h+var_184]
jnz     loc_493c2a
jmp     short loc_493cda
mov     [esp+1b4h+var_1a2], 0ffffh
mov     ax, [esp+1b4h+var_1a2]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1a4h
retn    0ch
sub     esp, 14ch
push    esi
push    edi
mov     esi, 1
push    663h
push    663h
push    offset dword_4aa1d8
call    sub_445f40
add     esp, 0ch
test    eax, eax
jz      short loc_493d84
push    0
push    offset axmoentry
push    offset sub_493bc0
push    offset axmo
call    sub_48c2f0
cmp     ax, si
lea     edi, [esp+154h+var_148]
sbb     esi, esi
mov     ecx, 51h
xor     eax, eax
push    147h
neg     esi
rep stosd
stosw
stosb
lea     eax, [esp+158h+var_148]
push    eax
push    offset dword_4aa1d8
call    sub_445f90
add     esp, 0ch
test    eax, eax
jnz     short loc_493d6d
xor     esi, esi
pop     edi
mov     eax, esi
pop     esi
add     esp, 14ch
retn
lea     eax, [esp+154h+var_14c]
push    eax
push    offset dword_4aa1d8
call    sub_446030
add     esp, 8
mov     ds:dword_4aa0a8, eax
mov     eax, esi
pop     edi
pop     esi
add     esp, 14ch
retn
call    sub_494a60
push    offset dword_4aa1b8
call    sub_48e7d0
add     esp, 4
mov     eax, ds:dword_4aa0a8
test    eax, eax
jz      short locret_493db4
push    eax
call    sub_45ba00
add     esp, 4
retn
sub     esp, 158h
mov     al, windowname
mov     [esp+158h+string], al
push    ebx
push    esi
xor     eax, eax
push    edi
mov     ecx, 4ah
lea     edi, [esp+164h+var_12b]
push    ebp
rep stosd
stosw
stosb
mov     esi, [esp+168h+lpstring]
mov     [esi], al
call    sub_493ba0
test    eax, eax
jnz     short loc_493e02
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 158h
retn
mov     eax, [esp+168h+cchbuffermax]
push    5
push    1a6ch
push    eax
push    esi
call    sub_47fe70
add     esp, 10h
mov     eax, ds:dword_4aa0a8
push    eax
call    ds:globallock
push    eax
mov     edi, eax
call    ds:lstrlena
test    eax, eax
jz      loc_493f04
lea     eax, [edi+13fh]
lea     ecx, [edi+11dh]
lea     edx, [esp+168h+var_158]
push    eax
push    ecx
xor     ebx, ebx
push    offset ass_0
mov     ebp, 12ch
push    2ch
push    edx
call    sub_401800
lea     eax, [esp+17ch+string]
add     esp, 14h
push    eax
call    ds:lstrlena
sub     ebp, eax
lea     eax, [esp+168h+var_158]
push    eax
call    ds:lstrlena
cmp     ebp, eax
setnle  bl
test    ebx, ebx
jz      short loc_493e98
lea     eax, [esp+168h+var_158]
push    12ch
lea     ecx, [esp+16ch+string]
push    eax
push    ecx
call    sub_47f990
add     esp, 0ch
lea     eax, [edi+13fh]
lea     ecx, [esp+168h+var_158]
push    eax
xor     ebx, ebx
push    offset as_0
push    2ch
push    ecx
call    sub_401800
mov     ebp, [esp+178h+cchbuffermax]
add     esp, 10h
push    esi
call    ds:lstrlena
sub     ebp, eax
lea     eax, [esp+168h+var_158]
push    eax
call    ds:lstrlena
cmp     ebp, eax
setnle  bl
test    ebx, ebx
jz      short loc_493eef
mov     eax, [esp+168h+cchbuffermax]
lea     ecx, [esp+168h+var_158]
push    eax
push    ecx
push    esi
call    sub_47f990
add     esp, 0ch
add     edi, 147h
push    edi
call    ds:lstrlena
test    eax, eax
jnz     loc_493e37
cmp     [esp+168h+string], 0
jz      short loc_493f5a
cmp     byte ptr [esi], 0
jz      short loc_493f5a
xor     ebx, ebx
mov     edi, [esp+168h+cchbuffermax]
push    esi
call    ds:lstrlena
sub     edi, eax
lea     eax, [esp+168h+string]
push    eax
call    ds:lstrlena
cmp     edi, eax
setnle  bl
test    ebx, ebx
jz      short loc_493f5a
push    esi
call    ds:lstrlena
mov     byte ptr [eax+esi-1], 7ch
mov     eax, [esp+168h+cchbuffermax]
lea     ecx, [esp+168h+string]
push    eax
push    ecx
push    esi
call    sub_47f990
add     esp, 0ch
jmp     short loc_493f5d
mov     byte ptr [esi], 0
mov     eax, ds:dword_4aa0a8
push    eax
call    ds:globalunlock
movsx   eax, byte ptr [esi]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 158h
retn
mov     eax, [esp+arg_0]
push    esi
mov     esi, [esp+4+arg_4]
lea     ecx, [eax+8]
push    esi
push    0dh
push    ecx
mov     ecx, [eax+4]
call    sub_412d30
call    eax
test    ax, ax
jz      short loc_493fa3
xor     eax, eax
pop     esi
retn
test    esi, esi
jz      short loc_493fb1
push    1
call    sub_43e090
add     esp, 4
mov     eax, 1
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    105h
push    offset string1
push    esi
call    sub_44f640
mov     edi, [esp+14h+arg_4]
add     esp, 0ch
push    105h
mov     dword ptr [edi], offset string1
push    offset dword_4aa0b0
push    esi
call    sub_44f670
add     esp, 0ch
mov     dword ptr [edi+4], offset dword_4aa0b0
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_4]
sub     esp, 10h
lea     edx, [esp+10h+var_10]
push    ebx
push    esi
mov     eax, [ecx]
push    edi
mov     ebx, [ecx+4]
push    ebp
mov     [edx], eax
mov     ebp, [ecx+8]
mov     eax, [ecx+0ch]
mov     esi, [esp+20h+arg_0]
mov     [edx+4], ebx
mov     [edx+8], ebp
mov     ecx, [esi+34h]
push    ecx
mov     [edx+0ch], eax
call    ds:globallock
mov     ebx, [esp+20h+var_4]
mov     edi, [esp+20h+var_8]
mov     edx, [esp+20h+var_10]
test    eax, eax
jz      short loc_49409d
mov     ecx, [esi+14h]
sub     ecx, [esi+0ch]
add     ecx, edx
cmp     ecx, edi
jnz     short loc_49405d
mov     ecx, [esi+18h]
sub     ecx, [esi+10h]
add     ecx, [esp+20h+var_c]
cmp     ecx, ebx
jz      short loc_494093
cmp     dword ptr [esi+7ah], 0
jz      short loc_494069
movsx   ecx, word ptr [esi+7eh]
sub     ebx, ecx
movsx   ebp, word ptr [eax+8]
mov     ecx, edi
sub     ecx, ebp
cmp     ecx, edx
jnz     short loc_494083
movsx   ebp, word ptr [eax+0ah]
mov     ecx, ebx
sub     ecx, ebp
cmp     ecx, [esp+20h+var_c]
jz      short loc_494093
sub     di, dx
mov     [eax+8], di
sub     bx, word ptr [esp+20h+var_c]
mov     [eax+0ah], bx
mov     eax, [esi+34h]
push    eax
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    ebx
push    esi
push    edi
mov     esi, 1
push    eax
call    sub_408fc0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      loc_494169
push    36h
push    ebx
call    sub_4612e0
add     esp, 8
mov     edi, eax
mov     eax, ebx
mov     ecx, dword_4ae1e0
shr     eax, 10h
movsx   eax, ax
shl     eax, 6
mov     edx, [eax+ecx+4]
xor     eax, eax
mov     al, bh
mov     ecx, [edx]
mov     eax, [ecx+eax*4]
test    eax, eax
jz      short loc_49410e
mov     ecx, [eax]
xor     eax, eax
mov     al, bl
mov     eax, [ecx+eax*4]
add     eax, ecx
jmp     short loc_494117
push    ebx
call    sub_461250
add     esp, 4
push    36h
push    eax
call    sub_45c870
movzx   eax, ax
add     esp, 8
test    edi, edi
jz      short loc_494169
push    eax
push    edi
call    sub_44f210
add     esp, 8
mov     ebx, eax
push    edi
call    sub_45ba00
add     esp, 4
test    ebx, ebx
jz      short loc_494167
lea     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+arg_4]
push    eax
push    ecx
push    ebx
call    sub_44f320
add     esp, 0ch
push    ebx
call    sub_44f2a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
xor     esi, esi
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
sub     esp, 210h
lea     eax, [esp+210h+var_210]
push    esi
mov     esi, [esp+214h+arg_0]
push    edi
mov     [esp+218h+var_210], 0
push    eax
push    esi
call    sub_469560
add     esp, 8
test    eax, eax
jnz     loc_49427b
lea     eax, [esp+218h+var_190]
push    190h
push    eax
call    sub_493dc0
lea     eax, [esp+220h+string]
add     esp, 8
push    6
push    1a6ch
push    1eh
push    eax
call    sub_47fe70
lea     eax, [esp+228h+string]
lea     ecx, [esp+228h+var_190]
add     esp, 10h
push    190h
push    eax
push    ecx
call    sub_47f990
lea     edi, [esp+224h+var_1c0]
add     esp, 0ch
xor     eax, eax
mov     ecx, 0ch
rep stosd
mov     eax, 4
lea     ecx, [esp+218h+var_190]
lea     edx, [esp+218h+var_20c]
push    0
mov     [esp+21ch+var_1bc], eax
push    28h
mov     [esp+220h+var_1b0], ecx
mov     [esp+220h+var_1a0], eax
lea     eax, [esp+220h+var_1e8]
mov     [esp+220h+var_19c], edx
push    eax
push    esi
call    sub_44f860
lea     ecx, [esp+228h+var_1e8]
lea     edx, [esp+228h+var_1c0]
add     esp, 10h
push    ecx
push    edx
call    sub_47eeb0
add     esp, 8
cmp     eax, 1
jz      short loc_494259
xor     eax, eax
pop     edi
pop     esi
add     esp, 210h
retn
mov     eax, [esp+218h+var_20c]
push    eax
push    esi
mov     esi, 2
call    sub_44f430
mov     eax, [esp+220h+var_20c]
add     esp, 8
push    eax
call    sub_44f4a0
add     esp, 4
jmp     short loc_4942c1
xor     edi, edi
cmp     [esp+218h+var_210], edi
jz      short loc_4942bc
lea     eax, [esp+218h+var_190]
lea     ecx, [esp+218h+var_1c0]
mov     edx, [esp+218h+var_210]
push    eax
mov     [esp+21ch+var_1c0], edi
push    ecx
mov     dword ptr [esp+220h+var_190], edi
push    edx
call    sub_44f550
add     esp, 0ch
cmp     [esp+218h+var_1c0], edi
jz      short loc_4942bc
mov     eax, [esp+218h+var_1c0]
push    eax
push    esi
call    sub_44f4f0
add     esp, 8
mov     esi, 1
cmp     [esp+218h+var_210], 0
jz      short loc_4942d5
mov     eax, [esp+218h+var_210]
push    eax
call    sub_44f4a0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
add     esp, 210h
retn
sub     esp, 4
mov     [esp+4+var_4], 0
push    ebx
push    esi
mov     esi, [esp+0ch+arg_4]
push    edi
push    ebp
push    0
push    esi
call    sub_44f9e0
add     esp, 8
test    eax, eax
jz      short loc_49430c
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     ds:dword_4aa0a8, 0
jz      loc_4943a3
xor     edi, edi
mov     eax, ds:dword_4aa0a8
push    eax
call    ds:globallock
push    eax
mov     ebx, eax
call    ds:lstrlena
test    eax, eax
jz      short loc_494397
call    sub_44f2d0
mov     ebp, eax
test    ebp, ebp
jz      short loc_494366
mov     eax, [ebx+13fh]
push    eax
push    ebp
call    sub_44f6a0
add     esp, 8
push    ebp
push    esi
call    sub_44f9e0
add     esp, 8
test    eax, eax
jnz     short loc_49437a
push    ebp
call    sub_44f4a0
add     esp, 4
inc     edi
add     ebx, 147h
push    ebx
call    ds:lstrlena
test    eax, eax
jnz     short loc_494334
jmp     short loc_494397
mov     eax, [esp+14h+arg_0]
push    ebx
push    eax
mov     [eax], edi
call    sub_4943b0
mov     [esp+1ch+var_4], eax
add     esp, 8
push    ebp
call    sub_44f4a0
add     esp, 4
mov     eax, ds:dword_4aa0a8
push    eax
call    ds:globalunlock
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
push    ebp
xor     edi, edi
cmp     [esi+13bh], edi
jz      short loc_4943d4
cmp     [esi+143h], edi
jz      short loc_4943d4
mov     edi, 1
jmp     loc_49446c
mov     ecx, dword_4adc68
call    sub_44c020
mov     ebx, eax
test    ebx, ebx
jz      loc_49446c
push    ebx
call    sub_4566d0
add     esp, 4
lea     eax, [esi+16h]
mov     ebp, [ebx]
mov     ecx, ebx
push    eax
call    dword ptr [ebp+2ch]
push    6
mov     ebp, 0
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_494419
mov     ecx, eax
call    sub_412bc0
mov     ebp, eax
test    ebp, ebp
jz      short loc_494460
push    ebx
mov     ecx, ebp
call    sub_412bf0
test    eax, eax
jnz     short loc_494448
push    0
mov     ecx, ebp
push    0
push    offset axmoentry
call    sub_412cc0
mov     [esi+143h], eax
test    eax, eax
jz      short loc_494448
mov     edi, 1
test    edi, edi
jnz     short loc_494460
test    ebp, ebp
jz      short loc_494460
mov     ecx, ebp
call    sub_412bd0
push    ebp
call    ??3@yaxpax@z
add     esp, 4
push    ebx
mov     ecx, dword_4adc68
call    sub_44c050
test    edi, edi
jz      short loc_494483
mov     ecx, [esi+143h]
mov     eax, [esp+10h+arg_0]
mov     [eax+4], ecx
inc     dword ptr [esi+13bh]
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
mov     eax, ds:dword_4aa0a8
push    esi
push    edi
push    eax
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      short loc_49450d
mov     esi, [esp+0ch+arg_0]
mov     eax, [esi]
sub     edi, eax
mov     ecx, eax
lea     edx, [eax+eax*4]
lea     eax, [ecx+edx*8]
lea     edi, [edi+eax*8]
mov     eax, [esi+4]
test    eax, eax
jz      short loc_494501
cmp     [edi+143h], eax
jnz     short loc_494501
mov     eax, [edi+13bh]
dec     eax
mov     [edi+13bh], eax
jnz     short loc_494501
mov     ebx, [edi+143h]
test    ebx, ebx
jz      short loc_4944f0
mov     ecx, ebx
call    sub_412c90
push    ebx
call    ??3@yaxpax@z
add     esp, 4
mov     dword ptr [edi+143h], 0
mov     dword ptr [esi+4], 0
mov     eax, ds:dword_4aa0a8
push    eax
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
retn
call    sub_40bad0
mov     eax, [esp+arg_4]
push    eax
push    19h
mov     eax, [esp+8+arg_0]
lea     ecx, [eax+8]
push    ecx
mov     ecx, [eax+4]
call    sub_412d30
call    eax
retn
sub     esp, 0ch
push    ebx
push    esi
push    edi
xor     esi, esi
mov     ebx, [esp+18h+arg_0]
push    ebx
call    sub_494a20
add     esp, 4
test    eax, eax
jz      short loc_49458d
push    eax
mov     edi, ds:globallock
call    edi
test    eax, eax
jz      short loc_494593
lea     ecx, [esp+18h+var_c]
lea     edx, [eax+8]
push    ecx
push    1ah
push    edx
mov     ecx, [eax+4]
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_4945f7
mov     esi, dword ptr [esp+18h+var_c]
pop     edi
mov     eax, esi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     edi, ds:globallock
mov     word ptr [esp+18h+var_4], 0
mov     eax, [esp+18h+var_4]
push    eax
push    ebx
call    sub_43b150
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_4945f7
mov     eax, [ebx+94h]
test    eax, eax
jz      short loc_4945ea
push    eax
call    edi
test    eax, eax
jz      short loc_4945ea
lea     ecx, [esp+18h+var_c]
lea     edx, [eax+8]
push    ecx
push    1ah
push    edx
mov     ecx, [eax+4]
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_4945dd
mov     esi, dword ptr [esp+18h+var_c]
mov     eax, [ebx+94h]
push    eax
call    ds:globalunlock
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+34h]
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_494639
test    byte ptr [eax+0ch], 1
jz      short loc_49462f
mov     eax, [esp+4+arg_4]
push    0
push    29h
lea     ecx, [eax+8]
push    ecx
mov     ecx, [eax+4]
call    sub_412d30
call    eax
mov     eax, [esi+34h]
push    eax
call    ds:globalunlock
pop     esi
retn
mov     eax, [esp+arg_4]
mov     edx, [esp+arg_0]
mov     ecx, [eax]
sub     ecx, [edx]
cmp     ecx, 1
sbb     eax, eax
inc     eax
retn
sub     esp, 130h
mov     al, windowname
mov     [esp+130h+var_108], al
push    ebx
push    esi
xor     eax, eax
push    edi
mov     ecx, 41h
lea     edi, [esp+13ch+var_107]
push    ebp
rep stosd
push    offset dword_4aa1b8
call    sub_48e820
add     esp, 4
test    eax, eax
jnz     short loc_4946b6
push    offset sub_494640
push    8
push    offset dword_4aa1b8
call    sub_48e770
add     esp, 0ch
test    eax, eax
jnz     short loc_4946b6
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
lea     eax, [esp+140h+arg_0]
push    0
push    0
push    eax
push    offset dword_4aa1b8
call    sub_48eac0
add     esp, 10h
test    eax, eax
jz      short loc_4946e3
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
mov     word ptr [esp+140h+var_12c], 0
mov     eax, [esp+140h+arg_0]
mov     ecx, [esp+140h+var_12c]
push    ecx
push    eax
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_494742
mov     ecx, [esp+140h+arg_0]
push    offset dword_4a61c4
mov     [esp+144h+var_130], ecx
mov     eax, [eax+94h]
mov     [esp+144h+var_12c], eax
call    sub_412f60
lea     ecx, [esp+144h+var_130]
add     esp, 4
push    ecx
push    offset dword_4aa1b8
call    sub_48e920
add     esp, 8
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
call    sub_493ba0
test    eax, eax
jnz     short loc_494758
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
push    42h
push    12h
call    sub_45b8f0
add     esp, 8
mov     esi, eax
test    esi, esi
jnz     short loc_494777
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
push    esi
call    ds:globallock
mov     edi, eax
test    edi, edi
jnz     short loc_49479a
push    esi
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
call    sub_44f2d0
mov     ebx, eax
test    ebx, ebx
jnz     short loc_4947b9
push    esi
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
mov     eax, [esp+140h+arg_0]
push    ebx
push    eax
call    sub_4940b0
add     esp, 8
test    eax, eax
jz      loc_4948f9
push    ebx
call    sub_494180
add     esp, 4
test    eax, eax
jz      loc_4948f9
push    ebx
push    edi
call    sub_4942e0
add     esp, 8
test    eax, eax
jnz     short loc_49480e
push    ebx
call    sub_44f4a0
add     esp, 4
push    esi
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
mov     eax, ds:hinstance
mov     ecx, ds:hwndparent
mov     edx, [esp+140h+arg_0]
mov     [esp+140h+var_120], eax
mov     [esp+140h+var_11c], ecx
mov     [esp+140h+var_118], edx
lea     ebp, [edi+8]
lea     eax, [esp+140h+var_120]
mov     [esp+140h+var_114], offset sub_495be0
mov     [esp+140h+var_110], 1
mov     [esp+140h+var_10c], 0
push    eax
mov     ecx, [edi+4]
push    4
push    ebp
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_4948ca
lea     eax, [esp+140h+var_128]
push    eax
push    ebx
call    sub_493fc0
lea     eax, [esp+148h+var_128]
add     esp, 8
mov     ecx, [edi+4]
push    eax
push    0ah
push    ebp
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_4948c1
mov     eax, [esp+140h+arg_0]
mov     [esp+140h+var_130], eax
lea     eax, [esp+140h+var_130]
mov     [esp+140h+var_12c], esi
push    eax
push    offset dword_4aa1b8
call    sub_48e920
add     esp, 8
test    eax, eax
jz      short loc_4948c1
push    ebx
call    sub_44f4a0
add     esp, 4
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
push    edi
call    sub_4952e0
add     esp, 4
push    ebx
call    sub_44f4a0
add     esp, 4
push    edi
call    sub_494490
add     esp, 4
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
push    ebx
call    sub_44f4a0
add     esp, 4
push    esi
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 130h
retn
sub     esp, 10h
push    esi
push    edi
xor     esi, esi
cmp     [esp+18h+arg_0], 0ffffffffh
jnz     short loc_494939
call    sub_494a60
pop     edi
pop     esi
add     esp, 10h
retn
push    offset dword_4aa1b8
call    sub_48e820
add     esp, 4
test    eax, eax
jz      loc_494a09
lea     eax, [esp+18h+var_8]
push    0
lea     ecx, [esp+1ch+arg_0]
push    eax
push    ecx
push    offset dword_4aa1b8
call    sub_48eac0
add     esp, 10h
test    eax, eax
jz      loc_494a09
mov     word ptr [esp+18h+var_c], 0
mov     eax, [esp+18h+arg_0]
mov     ecx, [esp+18h+var_c]
push    ecx
push    eax
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_4949b5
lea     eax, [esp+18h+var_8]
push    0
push    eax
push    offset dword_4aa1b8
call    sub_48eba0
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
add     esp, 10h
retn
mov     eax, [esp+18h+hmem]
push    eax
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      short loc_494a09
push    edi
call    sub_4952e0
add     esp, 4
push    edi
call    sub_494490
mov     eax, [esp+1ch+hmem]
add     esp, 4
push    eax
call    ds:globalunlock
mov     ecx, [esp+18h+hmem]
push    ecx
call    sub_45ba00
lea     eax, [esp+1ch+var_8]
add     esp, 4
mov     esi, 1
push    0
push    eax
push    offset dword_4aa1b8
call    sub_48eba0
add     esp, 0ch
mov     eax, esi
pop     edi
pop     esi
add     esp, 10h
retn
sub     esp, 8
push    esi
push    offset dword_4aa1b8
xor     esi, esi
call    sub_48e820
add     esp, 4
test    eax, eax
jz      short loc_494a57
lea     eax, [esp+0ch+var_8]
push    esi
lea     ecx, [esp+10h+arg_0]
push    eax
push    ecx
push    offset dword_4aa1b8
call    sub_48eac0
add     esp, 10h
test    eax, eax
jz      short loc_494a57
mov     esi, [esp+0ch+var_4]
mov     eax, esi
pop     esi
add     esp, 8
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    ebp
push    offset dword_4aa1b8
call    sub_48e820
add     esp, 4
test    eax, eax
jz      loc_494b67
push    offset dword_4aa1b8
call    sub_48f140
add     esp, 4
mov     esi, eax
cmp     esi, ebx
jz      loc_494b67
mov     edi, 1
cmp     esi, edi
jl      loc_494b5a
lea     eax, [esp+20h+var_8]
push    eax
push    edi
push    offset dword_4aa1b8
call    sub_48ea00
add     esp, 0ch
test    eax, eax
jz      loc_494b51
mov     word ptr [esp+20h+var_c], 0
mov     eax, [esp+20h+var_8]
mov     ecx, [esp+20h+var_c]
push    ecx
push    eax
call    sub_43b150
add     esp, 8
test    eax, eax
jz      short loc_494afd
lea     eax, [esp+20h+var_8]
push    0
push    eax
push    offset dword_4aa1b8
call    sub_48eba0
add     esp, 0ch
push    offset dword_4a61c4
call    sub_412f60
add     esp, 4
jmp     short loc_494b51
mov     eax, [esp+20h+hmem]
push    eax
call    ds:globallock
mov     ebp, eax
test    ebp, ebp
jz      short loc_494b51
push    ebp
mov     ebx, 1
call    sub_4952e0
add     esp, 4
push    ebp
call    sub_494490
mov     eax, [esp+24h+hmem]
add     esp, 4
push    eax
call    ds:globalunlock
mov     eax, [esp+20h+hmem]
push    eax
call    sub_45ba00
lea     eax, [esp+24h+var_8]
add     esp, 4
push    0
push    eax
push    offset dword_4aa1b8
call    sub_48eba0
add     esp, 0ch
inc     edi
cmp     edi, esi
jle     loc_494aa2
push    offset dword_4aa1b8
call    sub_48f1a0
add     esp, 4
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 78h
mov     eax, [esp+78h+arg_0]
push    ebx
push    esi
push    edi
mov     edi, [esp+84h+arg_4]
push    ebp
push    eax
mov     dword ptr [edi+94h], 0
call    sub_494a20
add     esp, 4
mov     esi, eax
test    esi, esi
jz      short loc_494bbc
push    esi
call    ds:globallock
mov     ebp, eax
test    ebp, ebp
jnz     loc_494c96
call    sub_493ba0
test    eax, eax
jnz     short loc_494bcf
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 78h
retn
push    42h
push    12h
call    sub_45b8f0
add     esp, 8
mov     esi, eax
push    esi
call    ds:globallock
mov     ebp, eax
mov     ebx, [esp+88h+arg_8]
push    ebx
push    ebp
call    sub_4942e0
add     esp, 8
test    eax, eax
jnz     short loc_494c0c
push    esi
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 78h
retn
mov     eax, ds:hinstance
mov     ecx, ds:hwndparent
mov     edx, [esp+88h+arg_0]
mov     [esp+88h+var_68], eax
mov     [esp+88h+var_64], ecx
mov     [esp+88h+var_60], edx
lea     eax, [esp+88h+var_68]
lea     ecx, [ebp+8]
mov     [esp+88h+var_5c], offset sub_495be0
mov     [esp+88h+var_58], 1
mov     [esp+88h+var_54], 0
push    eax
push    4
push    ecx
mov     ecx, [ebp+4]
call    sub_412d30
call    eax
test    ax, ax
jnz     loc_494e11
push    ebp
push    edi
call    sub_494600
lea     eax, [esp+90h+var_70]
add     esp, 8
push    eax
push    ebx
call    sub_493fc0
lea     eax, [esp+90h+var_70]
add     esp, 8
lea     ecx, [ebp+8]
push    eax
push    0ah
push    ecx
mov     ecx, [ebp+4]
call    sub_412d30
call    eax
test    ax, ax
jnz     loc_494e08
lea     eax, [esp+88h+var_50]
lea     ecx, [ebp+8]
push    eax
push    7
push    ecx
mov     ecx, [ebp+4]
call    sub_412d30
call    eax
test    ax, ax
jnz     loc_494e08
mov     eax, [edi+34h]
push    eax
call    ds:globallock
mov     ebx, eax
test    ebx, ebx
jz      loc_494e08
lea     eax, [esp+88h+var_30]
lea     ecx, [ebp+8]
push    eax
push    0bh
push    ecx
mov     ecx, [ebp+4]
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_494ceb
mov     eax, [esp+88h+var_20]
mov     [edi+6eh], eax
jmp     short loc_494cf2
mov     dword ptr [edi+6eh], 1
mov     eax, [esp+88h+var_14]
mov     [edi+80h], eax
test    eax, eax
jz      short loc_494d29
mov     eax, [esp+88h+arg_0]
push    2060430h
push    eax
call    sub_462670
add     esp, 8
lea     ecx, [ebp+8]
movzx   eax, ax
push    eax
push    9
push    ecx
mov     ecx, [ebp+4]
call    sub_412d30
call    eax
cmp     [esp+88h+var_28], 0
jz      short loc_494d55
mov     word ptr [esp+88h+var_78], 0ffffh
call    sub_40acb0
lea     ecx, [ebp+8]
mov     [esp+88h+var_78+2], eax
lea     eax, [esp+88h+var_78]
push    eax
push    18h
push    ecx
mov     ecx, [ebp+4]
call    sub_412d30
call    eax
test    [esp+88h+var_34], 1
jz      short loc_494d63
or      byte ptr [edi+92h], 10h
cmp     [esp+88h+var_8], 0
jz      short loc_494d74
or      byte ptr [edi+92h], 20h
mov     eax, [esp+88h+var_1c]
mov     ecx, [esp+88h+var_10]
mov     edx, [esp+88h+var_c]
mov     [edi+72h], eax
mov     [edi+84h], ecx
mov     [edi+88h], edx
test    eax, eax
jz      short loc_494dc1
mov     eax, [edi+7ah]
test    eax, eax
jz      short loc_494dc1
lea     ecx, [ebp+8]
mov     [esp+88h+var_78], eax
lea     eax, [esp+88h+var_78]
push    eax
push    8
push    ecx
mov     ecx, [ebp+4]
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_494dc1
mov     ax, [esp+88h+var_74]
mov     [edi+7eh], ax
mov     eax, [esp+88h+var_40]
mov     [ebx+2], eax
dec     eax
fld     [esp+88h+var_3c]
mov     [edi+4ah], eax
call    __ftol
mov     [ebx+6], ax
mov     ecx, [esp+88h+arg_0]
mov     edx, [edi+34h]
mov     ebx, ds:globalunlock
push    edx
mov     [edi+0bch], ecx
call    ebx
push    esi
mov     [edi+94h], esi
call    ebx
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 78h
retn
push    ebp
call    sub_4952e0
add     esp, 4
push    ebp
call    sub_494490
add     esp, 4
push    esi
call    ds:globalunlock
push    esi
call    sub_45ba00
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 78h
retn
sub     esp, 120h
mov     [esp+120h+var_120], 0
push    ebx
push    esi
mov     esi, [esp+128h+arg_0]
push    edi
push    ebp
mov     eax, [esi+94h]
test    eax, eax
jz      loc_495084
push    eax
call    ds:globallock
mov     ebp, eax
test    ebp, ebp
jz      loc_495084
lea     ebx, [ebp+8]
lea     eax, [esp+130h+var_f0]
push    eax
mov     ecx, [ebp+4]
push    0bh
push    ebx
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_494ec4
mov     eax, [esp+130h+var_dc]
mov     [esi+72h], eax
test    eax, eax
jz      short loc_494ec4
mov     eax, [esi+7ah]
mov     [esp+130h+var_11c], eax
lea     eax, [esp+130h+var_11c]
push    eax
mov     ecx, [ebp+4]
push    8
push    ebx
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_494ec4
mov     ax, word ptr [esp+130h+var_118]
mov     [esi+7eh], ax
cmp     dword ptr [esi+76h], 0
jz      short loc_494f31
lea     edi, [esp+130h+var_c0]
xor     eax, eax
mov     ecx, 2fh
rep stosd
stosw
lea     eax, [esp+130h+rc]
push    eax
push    esi
call    sub_495b30
lea     edx, [esp+138h+rc]
add     esp, 8
mov     eax, [esi+10h]
mov     ecx, [esi+0ch]
push    eax
push    ecx
push    edx
call    ds:offsetrect
cmp     dword ptr [esi+7ah], 0
jz      short loc_494f11
movsx   eax, word ptr [esi+7eh]
add     [esp+130h+rc.bottom], eax
lea     eax, [esp+130h+var_c0]
push    eax
push    0bh
push    esi
call    dword ptr [esi+6]
add     esp, 0ch
push    0
push    8
push    esi
call    dword ptr [esi+6]
mov     dword ptr [esi+76h], 0
add     esp, 0ch
cmp     dword ptr [esi+80h], 0
jz      short loc_494f5f
push    2060430h
mov     eax, [esi+0bch]
push    eax
call    sub_462670
add     esp, 8
mov     ecx, [ebp+4]
movzx   eax, ax
push    eax
push    9
push    ebx
call    sub_412d30
call    eax
mov     edi, [esi+10h]
lea     edx, [esi+0ch]
lea     ecx, [esp+130h+var_114]
mov     eax, [edx]
push    ecx
mov     [ecx], eax
mov     eax, [edx+8]
mov     [ecx+4], edi
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
call    sub_474df0
lea     ecx, [esp+134h+var_10c]
add     esp, 4
push    ecx
call    sub_474df0
lea     edx, [esp+134h+var_114]
lea     ecx, [esp+134h+var_104]
add     esp, 4
mov     eax, [edx]
mov     edi, [edx+4]
mov     [ecx], eax
mov     eax, [edx+8]
mov     [ecx+4], edi
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     eax, 0
mov     [ecx+0ch], edx
cmp     dword ptr [esi+62h], 1
adc     eax, 0ffffffffh
mov     ecx, ds:frequency
and     eax, 3
mov     [esp+130h+var_f4], ecx
push    eax
push    ebp
call    sub_493f80
lea     eax, [esp+138h+var_104]
add     esp, 8
mov     ecx, [ebp+4]
push    eax
push    16h
lea     edi, [esi+66h]
push    ebx
call    sub_412d30
call    eax
cmp     dword ptr [esi+6ah], 0
jnz     short loc_495009
cmp     dword ptr [edi], 0
jz      short loc_49501f
call    sub_40ae80
cmp     eax, 1
sbb     eax, eax
neg     eax
mov     [esi+6ah], eax
test    eax, eax
jz      short loc_49501f
push    eax
jmp     short loc_495017
cmp     dword ptr [edi], 0
jnz     short loc_49501f
mov     dword ptr [esi+6ah], 0
push    0
call    sub_40ae60
add     esp, 4
lea     eax, [esp+130h+arg_4]
mov     ecx, [ebp+4]
push    eax
push    0fh
push    ebx
call    sub_412d30
call    eax
cmp     dword ptr [esi+6ah], 0
jz      short loc_495044
mov     eax, 1
cmp     dword ptr [edi], 0
jnz     short loc_495046
xor     eax, eax
push    eax
push    ebp
call    sub_494520
add     esp, 8
mov     eax, [esi+46h]
mov     ecx, [ebp+4]
push    eax
push    11h
push    ebx
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_495077
push    esi
call    sub_495a70
mov     [esp+134h+var_120], 1
add     esp, 4
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
mov     eax, [esp+130h+var_120]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 120h
retn
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+8+arg_0]
mov     eax, [edi+94h]
test    eax, eax
jz      short loc_4950e7
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_4950e7
lea     ecx, [esp+8+arg_4]
lea     edx, [eax+8]
push    ecx
push    0fh
push    edx
mov     ecx, [eax+4]
call    sub_412d30
call    eax
cmp     ax, 1
mov     eax, [edi+94h]
sbb     esi, esi
push    eax
neg     esi
call    ds:globalunlock
mov     eax, esi
pop     edi
pop     esi
retn
sub     esp, 24h
push    ebx
push    esi
mov     esi, [esp+2ch+arg_0]
push    edi
push    ebp
mov     eax, [esi+94h]
test    eax, eax
jz      loc_49521e
push    eax
call    ds:globallock
mov     ebx, eax
test    ebx, ebx
jz      loc_49521e
mov     edi, [esp+34h+arg_4]
test    edi, edi
jz      short loc_495196
test    byte ptr [esi+0ah], 20h
jz      short loc_49513d
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
mov     ebp, [esi+10h]
lea     edx, [esi+0ch]
lea     ecx, [esp+34h+var_24]
mov     eax, [edx]
push    ecx
mov     [ecx], eax
mov     eax, [edx+8]
mov     [ecx+4], ebp
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
call    sub_474df0
lea     ecx, [esp+38h+var_1c]
add     esp, 4
push    ecx
call    sub_474df0
lea     edx, [esp+38h+var_24]
lea     ecx, [esp+38h+var_14]
add     esp, 4
mov     eax, [edx]
mov     ebp, [edx+4]
mov     [ecx], eax
mov     eax, [edx+8]
mov     [ecx+4], ebp
mov     edx, [edx+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
mov     ecx, ds:frequency
jmp     short loc_4951cf
push    esi
call    sub_495a70
lea     eax, [esp+38h+var_24]
add     esp, 4
xor     ecx, ecx
lea     edx, [esp+34h+var_14]
mov     [esp+34h+var_24], ecx
mov     [esp+34h+var_20], ecx
mov     [esp+34h+var_1c], ecx
mov     [esp+34h+var_18], ecx
mov     ebp, [eax]
mov     [edx], ebp
mov     ebp, [eax+4]
mov     [edx+4], ebp
mov     ebp, [eax+8]
mov     eax, [eax+0ch]
mov     [edx+8], ebp
mov     [edx+0ch], eax
cmp     dword ptr [esi+62h], 0
mov     [esp+34h+var_4], ecx
jz      short loc_4951e2
mov     eax, 3
test    edi, edi
jnz     short loc_4951e4
xor     eax, eax
push    eax
lea     ebp, [ebx+8]
push    ebx
call    sub_493f80
lea     eax, [esp+3ch+var_14]
add     esp, 8
mov     ecx, [ebx+4]
push    eax
push    16h
push    ebp
call    sub_412d30
call    eax
push    edi
mov     ecx, [ebx+4]
push    0ch
push    ebp
call    sub_412d30
call    eax
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
xor     edi, edi
mov     eax, [esi+94h]
test    eax, eax
jz      loc_4952da
push    eax
call    ds:globallock
cmp     eax, edi
mov     ebx, eax
jz      loc_4952da
cmp     [esi+6ah], edi
jz      short loc_495277
push    edi
mov     [esi+6ah], edi
call    sub_40ae60
add     esp, 4
mov     eax, ds:frequency
push    eax
call    sub_40b070
add     esp, 4
mov     eax, [esi+0bch]
push    eax
call    sub_494a20
add     esp, 4
test    eax, eax
jnz     short loc_4952c3
push    ebx
call    sub_4952e0
add     esp, 4
test    eax, eax
jz      short loc_49529c
mov     edi, 1
push    ebx
call    sub_494490
add     esp, 4
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
mov     ecx, [esi+94h]
push    ecx
call    sub_45ba00
add     esp, 4
jmp     short loc_4952d0
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
mov     dword ptr [esi+94h], 0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
push    0
mov     edi, [esp+10h+arg_0]
push    5
lea     esi, [edi+8]
mov     ecx, [edi+4]
push    esi
call    sub_412d30
call    eax
push    0
mov     ecx, [edi+4]
movsx   ebx, ax
push    6
push    esi
call    sub_412d30
call    eax
movsx   eax, ax
or      ebx, eax
pop     edi
pop     esi
cmp     ebx, 1
sbb     eax, eax
pop     ebx
neg     eax
retn
sub     esp, 10h
push    ebx
push    esi
push    edi
xor     esi, esi
mov     edi, [esp+1ch+arg_0]
push    ebp
mov     eax, [edi+94h]
test    eax, eax
jz      loc_4953f7
cmp     [edi+84h], esi
jz      loc_4953f7
push    eax
call    ds:globallock
cmp     eax, esi
mov     ebp, eax
jz      loc_4953f7
mov     ebx, [esp+20h+arg_8]
cmp     [esp+20h+arg_4], 30h
mov     eax, [ebx]
mov     ecx, [ebx+4]
mov     [esp+20h+var_8], eax
mov     [esp+20h+var_4], ecx
jnz     short loc_4953cf
push    ecx
lea     edx, [edi+0ch]
push    eax
push    edx
call    ds:ptinrect
test    eax, eax
jz      short loc_4953ea
lea     eax, [esp+20h+var_8]
mov     ecx, [esp+20h+arg_c]
push    eax
lea     edx, [ebp+8]
push    ecx
push    edx
mov     ecx, [ebp+4]
call    sub_412d30
call    eax
movsx   ecx, ax
mov     [ebx+20h], ecx
cmp     [edi+80h], esi
jz      short loc_4953c6
push    2060430h
mov     eax, [edi+0bch]
push    eax
call    sub_462670
add     esp, 8
test    ax, ax
jz      short loc_4953c6
mov     dword ptr [ebx+20h], 0fffffffeh
cmp     dword ptr [ebx+20h], 1
sbb     esi, esi
inc     esi
jmp     short loc_4953ea
lea     eax, [esp+20h+var_8]
mov     ecx, [esp+20h+arg_c]
push    eax
lea     edx, [ebp+8]
push    ecx
push    edx
mov     ecx, [ebp+4]
call    sub_412d30
call    eax
movsx   esi, ax
mov     eax, [edi+94h]
push    eax
call    ds:globalunlock
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 44h
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     edi, [esp+50h+arg_4]
push    ebp
mov     [esp+54h+var_44], ebx
cmp     edi, 67h
ja      def_495432
xor     eax, eax
mov     al, ds:byte_4959bc[edi]
jmp     ds:jpt_495432[eax*4]
mov     esi, [esp+54h+arg_0]
mov     eax, [esi+94h]
test    eax, eax
jz      short loc_49549c
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_49549c
mov     ecx, [esp+54h+arg_8]
lea     edi, [esi+0ch]
mov     edx, [ecx+0ch]
mov     [esp+54h+var_14], edx
lea     edx, [esp+54h+var_10]
mov     ecx, [edi]
mov     [edx], ecx
mov     ebx, [edi+4]
mov     [edx+4], ebx
mov     ebp, [edi+8]
lea     ebx, [eax+8]
mov     [edx+8], ebp
mov     ecx, [edi+0ch]
mov     [edx+0ch], ecx
lea     edx, [esp+54h+var_14]
push    edx
mov     ecx, [eax+4]
push    17h
push    ebx
call    sub_412d30
call    eax
mov     ecx, [esi+94h]
push    ecx
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     esi, [esp+54h+arg_0]
lea     edx, [esp+54h+rc]
lea     ecx, [esi+0ch]
mov     eax, [ecx]
mov     [edx], eax
mov     ebx, [ecx+4]
mov     [edx+4], ebx
mov     ebp, [ecx+8]
mov     [edx+8], ebp
mov     eax, [ecx+0ch]
mov     [edx+0ch], eax
mov     eax, [esp+54h+arg_8]
mov     ecx, [eax]
mov     edx, [eax+4]
lea     eax, [esp+54h+rc]
push    edx
push    ecx
push    eax
call    ds:ptinrect
test    eax, eax
jz      short loc_4954f8
mov     ecx, [esp+54h+arg_8]
mov     eax, 0ffffffffh
pop     ebp
pop     edi
mov     [ecx+98h], esi
pop     esi
pop     ebx
add     esp, 44h
retn
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     eax, 24h
jmp     loc_4958a8
mov     eax, 1ch
jmp     loc_4958a8
mov     ecx, [esp+54h+arg_8]
cmp     word ptr [ecx+0ah], 1
sbb     eax, eax
and     eax, 0fffffffah
add     eax, 21h
jmp     loc_4958a8
mov     esi, [esp+54h+arg_0]
mov     eax, [esi+94h]
test    eax, eax
jz      loc_495944
push    eax
call    ds:globallock
mov     ebx, eax
test    ebx, ebx
jz      loc_495944
mov     ebp, [esp+54h+arg_8]
lea     ecx, [esp+54h+rc]
mov     eax, [ebp+10h]
mov     edx, [ebp+14h]
add     ebp, 10h
push    ecx
mov     [ecx], eax
mov     eax, [ebp+8]
mov     [ecx+4], edx
mov     edx, [ebp+0ch]
mov     [ecx+8], eax
mov     [ecx+0ch], edx
call    sub_474df0
lea     ecx, [esp+58h+rc.right]
add     esp, 4
push    ecx
call    sub_474df0
lea     eax, [esp+58h+rc]
lea     ecx, [esp+58h+var_28]
add     esp, 4
mov     edx, [eax]
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     eax, [eax+0ch]
mov     [ecx+8], edx
lea     edx, [esp+54h+var_28]
mov     [ecx+0ch], eax
mov     ecx, ds:frequency
push    edx
push    16h
lea     eax, [ebx+8]
mov     [esp+5ch+var_18], ecx
push    eax
mov     ecx, [ebx+4]
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_4955d3
push    ebp
push    esi
call    sub_494000
add     esp, 8
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
jmp     loc_495944
mov     esi, [esp+54h+arg_0]
cmp     dword ptr [esi+94h], 0
jz      short loc_495606
push    0
push    esi
call    sub_4950f0
add     esp, 8
push    esi
call    sub_495230
add     esp, 4
mov     eax, [esi+34h]
push    eax
call    sub_45ba00
mov     dword ptr [esi+34h], 0
add     esp, 4
jmp     loc_495944
cmp     ds:frequency, 0
jnz     short loc_495634
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     esi, [esp+54h+arg_0]
mov     eax, [esi+94h]
test    eax, eax
jz      loc_495829
push    eax
call    ds:globallock
mov     edi, eax
test    edi, edi
jz      loc_495829
lea     ebx, [edi+8]
push    0
push    14h
mov     ecx, [edi+4]
push    ebx
call    sub_412d30
call    eax
test    ax, ax
jz      loc_4957d6
cmp     dword ptr [esi+3ch], 0
jnz     loc_49577a
cmp     dword ptr [esi+38h], 0
jnz     loc_49577a
cmp     word ptr [esi+42h], 0
jz      short loc_4956df
cmp     word ptr [esi+40h], 2
jz      short loc_4956e6
mov     ax, [esi+44h]
lea     ecx, [eax+1]
mov     [esi+44h], cx
cmp     [esi+42h], ax
jg      short loc_4956df
lea     eax, [esp+54h+var_44]
mov     ecx, [edi+4]
push    eax
push    0eh
push    ebx
call    sub_412d30
call    eax
mov     eax, [esp+54h+var_44]
mov     [esi+46h], eax
mov     dword ptr [esi+38h], 1
mov     ecx, [esi+94h]
push    ecx
call    ds:globalunlock
mov     eax, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
cmp     word ptr [esi+40h], 2
jnz     short loc_4956f7
mov     word ptr [esi+40h], 0
cmp     word ptr [esi+42h], 0
jz      short loc_4956f7
inc     word ptr [esi+44h]
test    byte ptr [esi+92h], 8
jz      short loc_495720
push    esi
call    sub_495a70
add     esp, 4
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     eax, [esi+56h]
cmp     eax, 0ffffffffh
jnz     short loc_49572b
mov     eax, [esi+4eh]
push    eax
mov     ecx, [edi+4]
push    11h
push    ebx
call    sub_412d30
call    eax
test    ax, ax
jnz     loc_49581c
mov     eax, [esi+52h]
cmp     [esi+4eh], eax
mov     eax, 1
jl      short loc_495751
xor     eax, eax
mov     [esp+54h+var_3c], eax
mov     eax, [esi+52h]
mov     [esp+54h+var_40], eax
lea     eax, [esp+54h+var_40]
mov     dword ptr [esi+56h], 0ffffffffh
push    eax
mov     ecx, [edi+4]
push    10h
push    ebx
call    sub_412d30
call    eax
jmp     loc_49581c
cmp     word ptr [esi+40h], 2
jz      short loc_4957bf
push    esi
call    sub_495a70
lea     eax, [esp+58h+var_44]
add     esp, 4
mov     ecx, [edi+4]
push    eax
push    0eh
push    ebx
call    sub_412d30
call    eax
mov     eax, [esp+54h+var_44]
mov     [esi+56h], eax
mov     word ptr [esi+40h], 2
cmp     word ptr [esi+42h], 0
jz      short loc_4957bf
mov     ax, [esi+44h]
test    ax, ax
jle     short loc_4957bf
dec     ax
mov     [esi+44h], ax
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
cmp     dword ptr [esi+3ch], 0
jnz     short loc_4957e2
cmp     dword ptr [esi+38h], 0
jz      short loc_49581c
cmp     word ptr [esi+40h], 2
jz      short loc_49581c
push    esi
call    sub_495a70
lea     eax, [esp+58h+var_44]
add     esp, 4
mov     ecx, [edi+4]
push    eax
push    0eh
push    ebx
call    sub_412d30
call    eax
mov     eax, [esp+54h+var_44]
mov     [esi+56h], eax
mov     word ptr [esi+40h], 2
cmp     word ptr [esi+42h], 0
jz      short loc_49581c
dec     word ptr [esi+44h]
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
mov     eax, [esi+38h]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     esi, [esp+54h+arg_0]
push    0
push    esi
call    sub_4950f0
add     esp, 8
push    esi
call    sub_495230
add     esp, 4
jmp     loc_495944
mov     esi, [esp+54h+arg_0]
push    0
push    esi
call    sub_4950f0
add     esp, 8
jmp     loc_495944
mov     esi, [esp+54h+arg_0]
push    1
push    esi
call    sub_4950f0
add     esp, 8
jmp     loc_495944
mov     eax, 21h
jmp     short loc_4958a8
mov     eax, 1dh
jmp     short loc_4958a8
mov     eax, 1eh
jmp     short loc_4958a8
mov     eax, 1fh
jmp     short loc_4958a8
mov     eax, 20h
jmp     short loc_4958a8
mov     eax, 22h
jmp     short loc_4958a8
mov     eax, 23h
mov     ecx, [esp+54h+arg_8]
push    eax
mov     esi, [esp+58h+arg_0]
push    ecx
push    edi
push    esi
call    sub_495320
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     edi, 25h
jmp     short loc_4958de
mov     edi, 26h
jmp     short loc_4958de
mov     edi, 27h
jmp     short loc_4958de
mov     edi, 28h
mov     esi, [esp+54h+arg_0]
mov     eax, [esi+94h]
test    eax, eax
jz      short loc_495936
cmp     dword ptr [esi+88h], 0
jz      short loc_495936
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_495936
mov     ecx, [esp+54h+arg_8]
cmp     edi, 26h
jnz     short loc_49590e
add     ecx, 0ah
jmp     short loc_495914
add     ecx, 0bah
push    ecx
push    edi
lea     ecx, [eax+8]
push    ecx
mov     ecx, [eax+4]
call    sub_412d30
call    eax
movsx   ebx, ax
mov     eax, [esi+94h]
mov     ebp, ds:globalunlock
push    eax
call    ebp
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
mov     esi, [esp+54h+arg_0]
mov     ecx, [esp+54h+arg_8]
push    ecx
push    edi
push    esi
call    sub_40fd60
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 44h
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+94h]
test    eax, eax
jz      short loc_495a6e
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_495a6e
mov     ecx, ds:dword_4a68c4
lea     edx, [eax+8]
push    ecx
push    2ah
push    edx
mov     ecx, [eax+4]
call    sub_412d30
call    eax
mov     ecx, [esi+94h]
push    ecx
call    ds:globalunlock
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+94h]
test    eax, eax
jz      short loc_495aae
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_495aae
mov     ecx, ds:dword_4a68c4
lea     edx, [eax+8]
push    ecx
push    13h
push    edx
mov     ecx, [eax+4]
call    sub_412d30
call    eax
mov     ecx, [esi+94h]
push    ecx
call    ds:globalunlock
pop     esi
retn
sub     esp, 4
mov     [esp+4+var_4], 0
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
mov     eax, [esi+94h]
test    eax, eax
jz      short loc_495b1e
push    eax
call    ds:globallock
mov     ebx, eax
test    ebx, ebx
jz      short loc_495b1e
lea     edi, [ebx+8]
mov     eax, [esp+10h+arg_4]
push    eax
mov     ecx, [ebx+4]
push    11h
push    edi
call    sub_412d30
call    eax
lea     eax, [esp+10h+var_4]
mov     ecx, [ebx+4]
push    eax
push    0eh
push    edi
call    sub_412d30
call    eax
cmp     word ptr [esi+40h], 2
mov     eax, [esp+10h+var_4]
mov     [esi+46h], eax
jnz     short loc_495b11
mov     [esi+56h], eax
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+arg_0]
mov     eax, [esi+34h]
push    eax
call    ds:globallock
test    eax, eax
jz      short loc_495b6c
mov     edx, [esp+8+arg_4]
mov     [edx+4], edi
mov     [edx], edi
movsx   ecx, word ptr [eax+8]
mov     edi, 1
mov     [edx+8], ecx
movsx   eax, word ptr [eax+0ah]
mov     [edx+0ch], eax
mov     edx, [esi+34h]
push    edx
call    ds:globalunlock
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 4
mov     [esp+4+var_4], 0
push    esi
mov     esi, [esp+8+arg_0]
mov     eax, [esi+94h]
test    eax, eax
jz      short loc_495bd8
push    eax
call    ds:globallock
lea     ecx, [esp+8+var_4]
lea     edx, [eax+8]
push    ecx
push    0eh
push    edx
mov     ecx, [eax+4]
call    sub_412d30
call    eax
test    ax, ax
jnz     short loc_495bc4
mov     eax, [esp+8+var_4]
mov     [esi+46h], eax
jmp     short loc_495bcb
mov     dword ptr [esi+46h], 0ffffffffh
mov     eax, [esi+94h]
push    eax
call    ds:globalunlock
pop     esi
add     esp, 4
retn
sub     esp, 8
test    [esp+8+arg_0], 0ffffh
jnz     short loc_495c06
mov     word ptr [esp+8+var_4], 0
mov     eax, [esp+8+arg_4]
mov     ecx, [esp+8+var_4]
push    ecx
push    eax
call    sub_444580
add     esp, 8
xor     ax, ax
add     esp, 8
retn    8
sub     esp, 100h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [esp+110h+arg_14]
mov     eax, [esp+110h+arg_10]
push    308h
push    edi
mov     ebx, [edi+100h]
mov     ecx, [edi+204h]
add     ebx, 71234567h
add     ecx, 71234567h
mov     [eax], ecx
call    sub_495da0
add     esp, 8
xor     eax, 19280981h
cmp     eax, [edi+308h]
jz      short loc_495c64
xor     al, al
jmp     loc_495d3e
xor     dx, dx
movsx   eax, dx
inc     dx
mov     cl, [eax+edi]
mov     [esp+eax+110h+string2], cl
movsx   eax, dx
cmp     eax, 100h
jb      short loc_495c67
lea     eax, [esp+110h+string2]
push    ebx
push    eax
call    sub_495d80
mov     eax, [esp+118h+arg_0]
add     esp, 8
cmp     [esp+110h+string2], 1
sbb     cl, cl
neg     cl
mov     [eax], cl
mov     eax, [esp+110h+lpstring1]
test    eax, eax
jz      short loc_495cb8
lea     ecx, [esp+110h+string2]
mov     ebp, ds:lstrcpya
push    ecx
push    eax
call    ebp
jmp     short loc_495cbe
mov     ebp, ds:lstrcpya
mov     esi, [esp+110h+arg_8]
test    esi, esi
jz      short loc_495cfd
xor     cx, cx
movsx   edx, cx
inc     cx
mov     al, [edx+edi+104h]
mov     [esp+edx+110h+string2], al
movsx   edx, cx
cmp     edx, 100h
jb      short loc_495ccc
lea     eax, [esp+110h+string2]
push    ebx
push    eax
call    sub_495d80
lea     eax, [esp+118h+string2]
add     esp, 8
push    eax
push    esi
call    ebp
mov     esi, [esp+110h+arg_c]
test    esi, esi
jz      short loc_495d3c
xor     cx, cx
movsx   edx, cx
inc     cx
mov     al, [edx+edi+208h]
mov     [esp+edx+110h+string2], al
movsx   edx, cx
cmp     edx, 100h
jb      short loc_495d0b
lea     eax, [esp+110h+string2]
push    ebx
push    eax
call    sub_495d80
lea     eax, [esp+118h+string2]
add     esp, 8
push    eax
push    esi
call    ebp
mov     al, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 100h
retn    18h
mov     edx, [esp+arg_0]
push    esi
xor     si, si
xor     ecx, ecx
movsx   eax, si
mov     cx, si
inc     si
and     ecx, 3
mov     cl, [esp+ecx+4+arg_4]
xor     [eax+edx], cl
movsx   eax, si
cmp     eax, 100h
jb      short loc_495d58
pop     esi
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
push    ecx
call    sub_495d50
add     esp, 8
retn
mov     eax, [esp+arg_4]
push    esi
cdq
xor     si, si
push    edi
xor     edi, edi
and     edx, 3
add     eax, edx
sar     eax, 2
test    eax, eax
jle     short loc_495dcb
mov     edx, [esp+8+arg_0]
movsx   ecx, si
inc     si
add     edi, [edx+ecx*4]
movsx   ecx, si
cmp     ecx, eax
jl      short loc_495dbc
mov     eax, edi
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
mov     eax, [ecx]
cmp     [edx], eax
jnz     short loc_495dfe
mov     eax, [ecx+4]
cmp     [edx+4], eax
jnz     short loc_495dfe
mov     eax, [ecx+8]
cmp     [edx+8], eax
jnz     short loc_495dfe
mov     eax, [ecx+0ch]
cmp     [edx+0ch], eax
jnz     short loc_495dfe
mov     eax, 1
retn    8
xor     eax, eax
retn    8
mov     eax, [esp+arg_0]
mov     ecx, [eax+8]
test    ecx, ecx
jz      short loc_495e32
mov     eax, [esp+arg_4]
cmp     ecx, eax
ja      short loc_495e2c
mov     edx, [ecx+4]
add     edx, ecx
cmp     edx, eax
ja      short loc_495e37
mov     ecx, [ecx]
test    ecx, ecx
jnz     short loc_495e1f
xor     al, al
retn    8
mov     al, 1
retn    8
mov     eax, 80040004h
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+4]
inc     eax
mov     [ecx+4], eax
retn    4
push    ebx
push    esi
mov     esi, [esp+8+pmem]
push    edi
mov     ebx, [esi+4]
dec     ebx
mov     [esi+4], ebx
jnz     short loc_495e9a
mov     eax, [esi+8]
test    eax, eax
jz      short loc_495e88
mov     edi, [eax]
push    eax
call    sub_496fc0
add     esp, 4
mov     eax, edi
test    edi, edi
jnz     short loc_495e77
push    esi
call    sub_497640
add     esp, 4
push    esi
call    sub_496fc0
add     esp, 4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn    4
mov     eax, [esp+arg_4]
test    eax, eax
jz      short locret_495ed3
mov     ecx, [eax-4]
sub     eax, 4
test    ecx, ecx
jge     short loc_495ec4
neg     ecx
mov     [eax], ecx
test    ecx, ecx
jnz     short locret_495ed3
push    eax
call    sub_496fc0
add     esp, 4
retn    8
mov     eax, [esp+arg_4]
sub     esp, 18h
add     eax, 3
push    esi
push    edi
and     eax, 0fffffffch
add     eax, 4
mov     edx, [esp+20h+arg_0]
mov     [esp+20h+dwbytes], eax
cmp     [edx+18h], eax
jg      short loc_495f1d
push    eax
call    sub_496ff0
add     esp, 4
test    eax, eax
jz      short loc_495f1d
mov     dword ptr [eax], 0
add     eax, 4
pop     edi
pop     esi
add     esp, 18h
retn    8
mov     eax, [esp+20h+arg_0]
mov     ecx, [eax+0ch]
mov     [esp+20h+var_14], ecx
test    ecx, ecx
jz      loc_496002
mov     ecx, [ecx]
mov     [esp+20h+var_18], ecx
cmp     [esp+20h+dwbytes], ecx
jg      loc_496002
mov     eax, [esp+20h+arg_0]
mov     ecx, [eax+10h]
mov     [esp+20h+var_10], ecx
mov     eax, [esp+20h+arg_0]
add     eax, 0ch
mov     [esp+20h+var_4], eax
mov     dword ptr [eax], 0
mov     eax, [esp+20h+var_18]
add     eax, [esp+20h+var_14]
cmp     eax, [esp+20h+var_10]
jnb     short loc_495f8b
mov     eax, [esp+20h+var_18]
mov     ecx, [esp+20h+var_14]
mov     eax, [eax+ecx]
test    eax, eax
jle     short loc_495f8b
add     [esp+20h+var_18], eax
mov     eax, [esp+20h+var_18]
mov     [ecx], eax
add     eax, ecx
cmp     eax, [esp+20h+var_10]
jb      short loc_495f6a
mov     eax, [esp+20h+var_18]
cmp     [esp+20h+dwbytes], eax
jg      loc_4960f4
mov     eax, [esp+20h+dwbytes]
add     eax, 8
cmp     eax, [esp+20h+var_18]
jg      loc_4960c5
mov     eax, [esp+20h+var_14]
mov     ecx, [esp+20h+var_4]
mov     edx, [esp+20h+var_10]
mov     [ecx], eax
mov     eax, [esp+20h+arg_0]
mov     ecx, [esp+20h+dwbytes]
sub     [esp+20h+var_18], ecx
mov     [eax+10h], edx
mov     edx, [esp+20h+var_18]
mov     eax, [esp+20h+var_14]
add     [esp+20h+var_14], edx
mov     esi, [esp+20h+arg_4]
mov     [eax], edx
mov     eax, ecx
mov     ecx, [esp+20h+var_14]
neg     eax
lea     edx, [ecx+4]
mov     [ecx], eax
mov     edi, edx
xor     eax, eax
mov     ecx, esi
shr     ecx, 2
rep stosd
mov     ecx, esi
and     ecx, 3
rep stosb
mov     eax, edx
pop     edi
pop     esi
add     esp, 18h
retn    8
mov     eax, [esp+20h+arg_0]
mov     ecx, [eax+8]
mov     [esp+20h+var_8], ecx
cmp     [esp+20h+var_8], 0
jnz     short loc_496057
mov     eax, [esp+20h+arg_0]
add     eax, 14h
mov     [esp+20h+var_4], eax
mov     ecx, [eax]
push    ecx
call    sub_496ff0
mov     [esp+24h+var_8], eax
add     esp, 4
test    eax, eax
jz      short loc_496095
mov     edx, [esp+20h+arg_0]
mov     ecx, [esp+20h+var_8]
mov     eax, [edx+8]
add     edx, 8
mov     [ecx], eax
mov     eax, [esp+20h+var_4]
mov     [edx], ecx
mov     edx, [esp+20h+var_8]
mov     ecx, [eax]
mov     [edx+4], ecx
sub     ecx, 8
mov     [edx+8], ecx
mov     eax, [esp+20h+var_8]
add     eax, 8
mov     [esp+20h+var_14], eax
mov     eax, [esp+20h+var_8]
mov     eax, [eax+4]
add     eax, [esp+20h+var_8]
mov     [esp+20h+var_10], eax
mov     eax, [esp+20h+var_14]
cmp     [esp+20h+var_10], eax
jbe     loc_496101
mov     ecx, [eax]
mov     [esp+20h+var_18], ecx
test    ecx, ecx
jg      loc_495f4b
jz      short loc_496101
sub     [esp+20h+var_14], ecx
jmp     short loc_496071
mov     eax, [esp+20h+dwbytes]
push    eax
call    sub_496ff0
mov     [esp+24h+var_14], eax
add     esp, 4
test    eax, eax
jz      short loc_4960bb
mov     dword ptr [eax], 0
add     eax, 4
pop     edi
pop     esi
add     esp, 18h
retn    8
xor     eax, eax
pop     edi
pop     esi
add     esp, 18h
retn    8
mov     eax, [esp+20h+var_18]
mov     ecx, [esp+20h+var_14]
neg     eax
lea     edx, [ecx+4]
mov     esi, [esp+20h+arg_4]
mov     edi, edx
mov     [ecx], eax
xor     eax, eax
mov     ecx, esi
shr     ecx, 2
rep stosd
mov     ecx, esi
and     ecx, 3
rep stosb
mov     eax, edx
pop     edi
pop     esi
add     esp, 18h
retn    8
mov     eax, [esp+20h+var_18]
add     [esp+20h+var_14], eax
jmp     loc_496071
mov     eax, [esp+20h+var_8]
mov     ecx, [eax]
jmp     loc_496009
sub     esp, 8
push    ebx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
push    ebp
mov     eax, [esi]
push    eax
lea     ecx, [esi+10h]
mov     byte ptr [esi+2bh], 0
push    ecx
call    sub_4978c0
add     esp, 8
mov     ecx, [esi]
lea     edx, [esi+10h]
push    ecx
push    edx
call    sub_497820
add     esp, 8
test    eax, eax
jnz     short loc_4961ae
mov     ebx, [esi+1ch]
test    ebx, ebx
jz      short loc_4961ac
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+4ch]
mov     edi, eax
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+44h]
mov     ebp, eax
mov     eax, [esi+24h]
test    eax, eax
jz      short loc_496169
push    0
push    0
push    eax
mov     eax, [eax]
call    dword ptr [eax+18h]
test    ebp, ebp
jz      short loc_4961a6
lea     eax, [esp+18h+var_4]
push    eax
push    ebp
push    ebx
mov     ebp, [ebx]
call    dword ptr [ebp+30h]
test    eax, eax
jnz     short loc_4961a6
lea     eax, [esp+18h+var_5]
mov     ecx, [esp+18h+var_4]
push    eax
mov     edx, [esi]
push    ebx
mov     eax, [esi+10h]
push    ecx
push    edx
push    eax
call    sub_497840
add     esp, 14h
test    eax, eax
jnz     short loc_4961ae
cmp     [esp+18h+var_5], 0
jz      short loc_4961a6
mov     byte ptr [esi+2bh], 1
mov     ebx, edi
test    edi, edi
jnz     short loc_496148
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
sub     esp, 14h
push    esi
push    edi
mov     esi, [esp+1ch+arg_8]
push    offset dword_4ab3f8
push    esi
call    sub_495dd0
test    eax, eax
jz      short loc_4961e3
mov     eax, 80040005h
pop     edi
pop     esi
add     esp, 14h
retn
lea     eax, [esp+1ch+var_4]
lea     ecx, [esp+1ch+var_8]
lea     edx, [esp+1ch+var_c]
push    eax
mov     edi, [esp+20h+arg_4]
push    ecx
push    edx
push    esi
push    edi
mov     eax, [edi]
call    dword ptr [eax+1ch]
test    eax, eax
jnz     short loc_49624a
push    edi
mov     eax, [edi]
call    dword ptr [eax+28h]
mov     eax, [esp+1ch+arg_10]
push    eax
mov     eax, [esp+20h+arg_0]
mov     ecx, [eax]
mov     edx, [eax+4]
mov     eax, [esp+20h+arg_c]
push    ecx
mov     ecx, [esp+24h+var_4]
push    edx
mov     edx, [esp+28h+var_8]
push    eax
mov     eax, dword ptr [esp+2ch+var_c]
push    esi
push    ecx
push    edx
push    eax
push    edi
call    sub_497b50
mov     esi, eax
push    edi
mov     edi, [edi]
call    dword ptr [edi+2ch]
test    esi, esi
jz      loc_4962d0
mov     eax, esi
pop     edi
pop     esi
add     esp, 14h
retn
lea     eax, [esp+1ch+var_14]
push    eax
push    offset dword_4ab418
push    esi
push    edi
mov     esi, [edi]
call    dword ptr [esi+20h]
test    eax, eax
jnz     short loc_4962d2
lea     eax, [esp+1ch+var_10]
mov     ecx, [esp+1ch+var_14]
push    eax
push    offset dword_4ab448
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
test    eax, eax
jnz     short loc_4962a2
mov     eax, [esp+1ch+arg_0]
mov     edx, [esp+1ch+arg_10]
mov     ecx, [eax+4]
mov     eax, [esp+1ch+arg_c]
push    ecx
push    edx
mov     ecx, [esp+24h+var_10]
push    eax
mov     eax, [ecx]
push    0
push    ecx
call    dword ptr [eax+14h]
mov     esi, eax
mov     ecx, [esp+1ch+var_10]
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
jmp     short loc_4962ba
mov     eax, [esp+1ch+arg_10]
mov     ecx, [esp+1ch+arg_c]
mov     edx, [esp+1ch+var_14]
push    eax
push    ecx
push    0
push    edx
mov     eax, [edx]
call    dword ptr [eax+0ch]
mov     esi, eax
mov     eax, [esp+1ch+var_14]
push    eax
mov     edi, [eax]
call    dword ptr [edi+8]
test    esi, esi
jz      short loc_4962d0
mov     eax, esi
pop     edi
pop     esi
add     esp, 14h
retn
xor     eax, eax
pop     edi
pop     esi
add     esp, 14h
retn
sub     esp, 8
push    esi
push    0
mov     esi, [esp+10h+arg_0]
mov     eax, [esi+4]
push    eax
push    esi
call    sub_497da0
lea     eax, [esp+18h+var_8]
add     esp, 0ch
mov     ecx, [esi+0ch]
push    eax
push    offset dword_4ab408
push    ecx
push    esi
call    sub_496b00
test    eax, eax
jnz     short loc_496363
mov     eax, [esp+0ch+var_8]
mov     ecx, [esi+4]
push    eax
push    ecx
push    esi
call    sub_497da0
mov     ecx, [esp+18h+var_8]
add     esp, 0ch
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
lea     ecx, [esp+0ch+var_4]
mov     edx, [esi+0ch]
push    ecx
push    offset dword_4ab458
push    edx
push    esi
call    sub_496b00
test    eax, eax
jz      short loc_49634d
mov     eax, 80040012h
pop     esi
add     esp, 8
retn
mov     eax, [esp+0ch+var_4]
push    eax
mov     esi, [eax]
call    dword ptr [esi+8]
cmp     [esp+0ch+var_8], 1
sbb     eax, eax
and     eax, 80040002h
pop     esi
add     esp, 8
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
test    esi, esi
jnz     short loc_496380
mov     esi, 10000h
mov     edi, [esp+0ch+arg_4]
test    edi, edi
jnz     short loc_49638d
mov     edi, 1000h
push    1ch
call    sub_496ff0
add     esp, 4
mov     ebx, eax
test    ebx, ebx
jz      short loc_4963af
push    ebx
mov     dword ptr [ebx], offset off_4ab960
mov     [ebx+14h], esi
mov     [ebx+18h], edi
mov     eax, [ebx]
call    dword ptr [eax+4]
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, [esp+arg_c]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    eax
mov     eax, [esp+4+arg_0]
push    0
push    ecx
push    edx
push    eax
call    sub_4963e0
retn    10h
sub     esp, 30h
push    ebx
push    esi
mov     esi, [esp+38h+arg_0]
push    edi
push    ebp
test    esi, esi
jnz     short loc_49640d
push    0
push    0
call    sub_496370
mov     esi, eax
test    esi, esi
jnz     short loc_49640d
mov     eax, 80040002h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn    14h
mov     ebp, [esp+40h+arg_8]
push    offset dword_4ab3f8
push    ebp
call    sub_495dd0
test    eax, eax
jz      short loc_49642f
mov     eax, 80040005h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn    14h
lea     edi, [esp+40h+var_30]
xor     eax, eax
mov     ecx, 0ch
xor     ebx, ebx
rep stosd
mov     [esp+40h+var_30], esi
mov     [esp+40h+var_2c], ebx
mov     [esp+40h+var_24], ebp
mov     [esp+40h+var_28], ebx
mov     eax, [esp+40h+arg_c]
mov     [esp+40h+var_20], ebx
mov     [esp+40h+var_18], ebx
push    30h
mov     [esp+44h+var_14], ebx
push    esi
mov     [esp+48h+var_10], eax
mov     [esp+48h+var_5], bl
mov     ebp, [esi]
call    dword ptr [ebp+0ch]
cmp     eax, ebx
mov     ebp, eax
jnz     short loc_496483
mov     eax, 80040002h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn    14h
lea     esi, [esp+40h+var_30]
mov     edi, ebp
mov     ecx, 0ch
push    ebp
rep movsd
call    sub_497d60
add     esp, 4
mov     [ebp+4], eax
test    eax, eax
jnz     short loc_4964af
mov     eax, 80040002h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn    14h
mov     eax, [esp+40h+arg_4]
test    eax, eax
jz      short loc_4964da
push    eax
mov     eax, [ebp+0]
push    eax
call    sub_497060
add     esp, 8
mov     [ebp+14h], eax
test    eax, eax
jnz     short loc_4964e1
mov     eax, 80040002h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn    14h
mov     dword ptr [ebp+14h], 0
lea     esi, [ebp+18h]
push    esi
call    sub_49a870
add     esp, 4
test    eax, eax
jnz     short loc_496537
mov     eax, [esi]
mov     ecx, [ebp+4]
push    eax
mov     edx, [ebp+0]
push    ecx
push    edx
call    sub_49a6d0
add     esp, 0ch
mov     [ebp+8], eax
test    eax, eax
jnz     short loc_49651a
mov     eax, 80040002h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn    14h
xor     ebx, ebx
push    ebp
mov     [ebp+29h], bl
mov     [ebp+2ah], bl
call    sub_497010
add     esp, 4
test    eax, eax
jnz     short loc_496537
mov     eax, [esp+40h+arg_10]
mov     [eax], ebp
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 30h
retn    14h
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     ebx, 0
test    esi, esi
jz      short loc_496562
mov     ebx, [esi]
mov     edi, [ebx]
test    ebx, ebx
jz      loc_496615
push    ebx
call    sub_497040
add     esp, 4
mov     eax, [ebx+24h]
test    eax, eax
jz      short loc_496589
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     dword ptr [ebx+24h], 0
mov     ecx, [ebx+14h]
test    ecx, ecx
jz      short loc_4965a2
mov     eax, [ebx+8]
test    eax, eax
jz      short loc_4965a2
mov     edx, [ebx+18h]
push    edx
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+34h]
cmp     dword ptr [ebx+8], 0
jz      short loc_4965bc
mov     eax, [ebx+8]
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
test    eax, eax
jnz     short loc_4965a8
mov     dword ptr [ebx+8], 0
cmp     dword ptr [ebx+4], 0
jz      short loc_4965d6
mov     eax, [ebx+4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
test    eax, eax
jnz     short loc_4965c2
mov     dword ptr [ebx+4], 0
push    edi
lea     eax, [ebx+10h]
push    eax
call    sub_4978c0
add     esp, 8
push    ebx
call    sub_49b2d0
add     esp, 4
mov     eax, [ebx+14h]
push    eax
push    edi
mov     eax, [edi]
call    dword ptr [eax+10h]
lea     ecx, [ebx+18h]
push    ecx
call    sub_49a8b0
add     esp, 4
push    ebx
push    edi
mov     ebx, [edi]
call    dword ptr [ebx+10h]
push    edi
mov     ebx, [edi]
call    dword ptr [ebx+8]
mov     dword ptr [esi], 0
pop     edi
pop     esi
pop     ebx
retn    4
push    esi
mov     esi, [esp+4+arg_0]
cmp     byte ptr [esi+2ah], 0
jz      short loc_496634
mov     eax, 80040014h
pop     esi
retn    4
mov     byte ptr [esi+2ah], 1
cmp     byte ptr [esi+29h], 0
jnz     short loc_49665b
mov     ecx, [esi+14h]
test    ecx, ecx
jz      short loc_496657
mov     eax, [esi+8]
test    eax, eax
jz      short loc_496657
mov     edx, [esi+18h]
push    edx
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+30h]
mov     byte ptr [esi+29h], 1
mov     eax, [esi+8]
push    eax
mov     esi, [eax]
call    dword ptr [esi+38h]
mov     ecx, 0
pop     esi
cmp     eax, 1
adc     ecx, 0ffffffffh
and     ecx, eax
mov     eax, ecx
retn    4
mov     eax, [esp+arg_8]
push    0
mov     ecx, [esp+4+arg_4]
push    0
mov     edx, [esp+8+arg_0]
push    eax
push    ecx
push    edx
call    sub_496710
retn    0ch
mov     eax, [esp+arg_10]
push    ebx
push    esi
push    edi
mov     edi, [eax]
mov     esi, [edi+8]
test    esi, esi
jnz     short loc_4966bb
mov     eax, 80040014h
pop     edi
pop     esi
pop     ebx
retn    14h
mov     ecx, [eax+4]
test    ecx, ecx
jz      short loc_4966e8
mov     eax, [eax+8]
mov     edx, [esp+0ch+arg_c]
mov     ebx, [esp+0ch+arg_4]
push    eax
mov     eax, [esp+10h+arg_8]
push    edx
push    eax
push    ebx
mov     ebx, [esp+1ch+arg_0]
push    ebx
call    ecx
test    eax, eax
jz      short loc_4966ec
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    14h
mov     ebx, [esp+0ch+arg_0]
mov     eax, [edi+24h]
test    eax, eax
jz      short loc_4966fd
push    0
push    0
push    eax
mov     eax, [eax]
call    dword ptr [eax+18h]
push    ebx
mov     eax, [esi]
push    esi
call    dword ptr [eax+40h]
pop     edi
pop     esi
pop     ebx
retn    14h
mov     eax, [esp+arg_0]
sub     esp, 0ch
cmp     byte ptr [eax+2ah], 0
jnz     short loc_496728
mov     eax, 80040014h
add     esp, 0ch
retn    14h
mov     ecx, [esp+0ch+arg_10]
lea     edx, [esp+0ch+var_c]
mov     [esp+0ch+var_c], eax
push    edx
mov     eax, [esp+10h+arg_c]
push    offset sub_4966a0
mov     [esp+14h+var_8], eax
mov     [esp+14h+var_4], ecx
mov     eax, [esp+14h+arg_8]
mov     ecx, [esp+14h+arg_4]
push    eax
push    ecx
call    sub_4970c0
add     esp, 1ch
retn    14h
mov     eax, [esp+arg_8]
push    0
mov     ecx, [esp+4+arg_4]
push    0
mov     edx, [esp+8+arg_0]
push    eax
push    ecx
push    edx
call    sub_496810
retn    0ch
mov     eax, [esp+arg_10]
sub     esp, 4
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [eax]
mov     esi, [edi+8]
test    esi, esi
jnz     short loc_4967a3
mov     eax, 80040014h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    14h
mov     ecx, [eax+4]
test    ecx, ecx
jz      short loc_4967d4
mov     eax, [eax+8]
mov     ebp, [esp+14h+arg_c]
mov     ebx, [esp+14h+arg_4]
push    eax
mov     edx, [esp+18h+arg_8]
push    ebp
push    edx
push    ebx
mov     ebx, [esp+24h+arg_0]
push    ebx
call    ecx
test    eax, eax
jz      short loc_4967dc
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    14h
mov     ebx, [esp+14h+arg_0]
mov     ebp, [esp+14h+arg_c]
mov     eax, [edi+24h]
test    eax, eax
jz      short loc_4967ed
push    0
push    0
push    eax
mov     eax, [eax]
call    dword ptr [eax+18h]
lea     eax, [esp+14h+var_4]
mov     edx, [esp+14h+arg_4]
mov     ecx, [esp+14h+arg_8]
push    eax
push    ebp
mov     eax, [esi]
push    ecx
push    edx
push    ebx
push    esi
call    dword ptr [eax+3ch]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    14h
mov     eax, [esp+arg_0]
sub     esp, 0ch
cmp     byte ptr [eax+2ah], 0
jnz     short loc_496828
mov     eax, 80040014h
add     esp, 0ch
retn    14h
mov     ecx, [esp+0ch+arg_10]
lea     edx, [esp+0ch+var_c]
mov     [esp+0ch+var_c], eax
push    edx
mov     eax, [esp+10h+arg_c]
push    offset sub_496780
mov     [esp+14h+var_8], eax
mov     [esp+14h+var_4], ecx
mov     eax, [esp+14h+arg_8]
mov     ecx, [esp+14h+arg_4]
push    eax
push    ecx
call    sub_4970c0
add     esp, 1ch
retn    14h
sub     esp, 14h
xor     eax, eax
mov     [esp+14h+var_8], eax
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
mov     [esp+1ch+var_4], eax
mov     edi, [esi+8]
cmp     [esi+2ah], al
jnz     short loc_496888
mov     eax, 80040014h
pop     edi
pop     esi
add     esp, 14h
retn    18h
test    edi, edi
jnz     short loc_496899
mov     eax, 80040014h
pop     edi
pop     esi
add     esp, 14h
retn    18h
lea     eax, [esp+1ch+var_10]
mov     edx, [esp+1ch+var_8]
mov     ecx, [esp+1ch+var_4]
push    eax
push    0
mov     eax, [edi]
push    ecx
push    edx
push    0
push    edi
call    dword ptr [eax+3ch]
test    eax, eax
jnz     loc_49695d
lea     eax, [esp+1ch+var_14]
mov     ecx, [esp+1ch+arg_14]
mov     edx, [esp+1ch+arg_10]
push    eax
mov     eax, [esp+20h+arg_c]
push    ecx
mov     ecx, [esp+24h+arg_8]
push    edx
mov     edx, [esp+28h+arg_4]
push    eax
push    ecx
push    edx
push    esi
call    sub_49b250
add     esp, 1ch
test    eax, eax
jnz     short loc_49695d
lea     eax, [esp+1ch+var_c]
mov     ecx, [esp+1ch+var_14]
mov     edx, [esp+1ch+var_10]
push    eax
push    ecx
mov     eax, [edi]
push    edx
push    edi
call    dword ptr [eax+44h]
test    eax, eax
jnz     short loc_49695d
mov     eax, [esp+1ch+var_14]
push    eax
mov     edi, [eax]
call    dword ptr [edi+8]
cmp     byte ptr [esi+28h], 0
jnz     short loc_49694a
lea     edi, [esi+24h]
cmp     dword ptr [edi], 0
jnz     short loc_49694a
test    byte ptr [esi+20h], 1
jnz     short loc_49694a
push    edi
mov     eax, [esi+0ch]
mov     ecx, [esp+20h+var_14]
push    offset dword_4ab4b8
push    eax
push    ecx
push    esi
call    sub_4961c0
add     esp, 14h
test    eax, eax
jz      short loc_496940
mov     dword ptr [edi], 0
jmp     short loc_49694a
mov     eax, [edi]
push    0
push    eax
mov     edi, [eax]
call    dword ptr [edi+0ch]
mov     eax, [esi+24h]
test    eax, eax
jz      short loc_49695b
push    0
push    0
push    eax
mov     eax, [eax]
call    dword ptr [eax+18h]
xor     eax, eax
pop     edi
pop     esi
add     esp, 14h
retn    18h
mov     eax, [esp+arg_4]
push    offset dword_4ab488
push    eax
call    sub_495dd0
test    eax, eax
jnz     short loc_496986
xor     eax, eax
retn
mov     eax, [esp+arg_c]
inc     dword ptr [eax+4]
xor     eax, eax
retn
mov     eax, [esp+arg_4]
push    esi
push    edi
push    offset dword_4ab488
mov     edi, [esp+0ch+arg_c]
push    eax
mov     esi, [edi+8]
call    sub_495dd0
test    eax, eax
jnz     short loc_4969b1
xor     eax, eax
pop     edi
pop     esi
retn
cmp     dword ptr [esi+24h], 0
jz      short loc_4969cc
mov     edx, [edi]
lea     eax, [edx+1]
mov     [edi], eax
mov     edi, [edi+4]
mov     ecx, [esi+24h]
push    edi
mov     eax, [ecx]
push    edx
push    ecx
call    dword ptr [eax+18h]
mov     esi, [esi+8]
mov     eax, [esp+8+arg_0]
push    eax
mov     eax, [esp+0ch+arg_8]
push    eax
mov     edi, [eax]
call    dword ptr [edi+44h]
push    eax
push    esi
mov     esi, [esi]
call    dword ptr [esi+4ch]
pop     edi
pop     esi
retn
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [esp+14h+arg_0]
push    edi
push    ebp
cmp     byte ptr [esi+2ah], 0
jnz     short loc_496a10
mov     eax, 80040014h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn    0ch
mov     byte ptr [esi+2ah], 0
mov     eax, [esi+8]
push    esi
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+48h]
test    eax, eax
jnz     loc_496af4
push    esi
call    sub_49b300
add     esp, 4
push    esi
call    sub_496110
add     esp, 4
test    eax, eax
jnz     loc_496af4
push    esi
call    sub_4962e0
add     esp, 4
test    eax, eax
jnz     loc_496af4
xor     edi, edi
mov     [esp+1ch+var_4], esi
mov     [esp+1ch+var_c], edi
mov     [esp+1ch+var_8], edi
cmp     [esi+24h], edi
jz      short loc_496a7e
lea     eax, [esp+1ch+var_c]
mov     ecx, [esi+10h]
push    eax
push    offset sub_496970
push    ecx
call    sub_4979e0
add     esp, 0ch
test    eax, eax
jnz     short loc_496af4
lea     eax, [esp+1ch+var_c]
mov     ecx, [esi+10h]
push    eax
push    offset sub_496990
push    ecx
call    sub_4979e0
add     esp, 0ch
test    eax, eax
jnz     short loc_496af4
mov     eax, [esi+8]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+50h]
cmp     [esp+1ch+arg_4], 0
jz      short loc_496ad1
mov     edi, [esi+1ch]
test    edi, edi
jz      short loc_496ad1
mov     ebx, [esp+1ch+arg_8]
push    edi
mov     eax, [edi]
call    dword ptr [eax+4ch]
mov     ebp, eax
push    ebx
push    edi
mov     eax, [edi]
call    dword ptr [eax+44h]
push    eax
call    [esp+20h+arg_8]
test    eax, eax
jnz     short loc_496af4
mov     edi, ebp
test    ebp, ebp
jnz     short loc_496ab3
mov     byte ptr [esi+28h], 1
mov     eax, [esi+24h]
test    eax, eax
jz      short loc_496af2
push    eax
mov     eax, [eax]
call    dword ptr [eax+20h]
mov     eax, [esi+24h]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     dword ptr [esi+24h], 0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn    0ch
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
mov     ecx, [esi+10h]
test    ecx, ecx
jnz     short loc_496b1b
mov     eax, 80040014h
pop     esi
add     esp, 4
retn    10h
lea     eax, [esp+8+var_4]
mov     edx, [esp+8+arg_4]
push    eax
push    offset dword_4ab418
push    edx
push    ecx
call    sub_497920
add     esp, 10h
test    eax, eax
jnz     short loc_496b43
mov     eax, 80040005h
pop     esi
add     esp, 4
retn    10h
mov     ecx, [esp+8+arg_c]
mov     edx, [esp+8+arg_8]
push    ecx
push    edx
mov     ecx, [esp+10h+var_4]
push    ecx
push    eax
push    esi
call    sub_4961c0
add     esp, 14h
pop     esi
add     esp, 4
retn    10h
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi+8]
test    eax, eax
jz      short loc_496b82
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
mov     eax, [esi+8]
pop     esi
retn    4
mov     eax, [esp+arg_c]
mov     ecx, [esp+cbdata]
mov     edx, [esp+lpdata]
push    eax
mov     eax, [esp+4+arg_0]
push    ecx
push    edx
push    eax
call    sub_497400
add     esp, 10h
retn    10h
mov     eax, [esp+arg_0]
cmp     byte ptr [eax+2bh], 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, 80040016h
retn    4
mov     edx, [esp+arg_0]
push    edi
mov     edi, edx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
lea     eax, [edx+ecx-1]
cmp     byte ptr [eax-1], 5ch
jz      short loc_496bf3
mov     byte ptr [eax], 5ch
mov     byte ptr [eax+1], 0
pop     edi
retn
push    esi
mov     ecx, 0ffffffffh
push    edi
sub     eax, eax
mov     edi, [esp+8+arg_0]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
shr     ecx, 2
mov     esi, edi
mov     edx, [esp+8+arg_8]
mov     edi, edx
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     edi, edx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
lea     ecx, [ecx+edx-1]
cmp     ecx, edx
jbe     short loc_496c51
mov     eax, [esp+8+arg_4]
cmp     byte ptr [edx], 5ch
jnz     short loc_496c4c
test    eax, eax
jz      short loc_496c56
dec     eax
inc     edx
cmp     ecx, edx
ja      short loc_496c42
mov     al, 1
pop     edi
pop     esi
retn
mov     byte ptr [edx], 0
cmp     byte ptr [edx-1], 3ah
jnz     short loc_496c66
mov     byte ptr [edx], 5ch
mov     byte ptr [edx+1], 0
xor     al, al
pop     edi
pop     esi
retn
sub     esp, 104h
push    ebx
push    esi
mov     esi, [esp+10ch+arg_0]
push    edi
mov     edi, [esp+110h+arg_4]
push    ebp
xor     ebp, ebp
lea     eax, [esp+114h+filename]
push    eax
push    ebp
push    esi
call    sub_496c00
add     esp, 0ch
mov     bl, al
lea     eax, [esp+114h+filename]
push    edi
push    eax
call    sub_496cd0
add     esp, 8
test    eax, eax
jnz     short loc_496cbc
test    bl, bl
jnz     short loc_496cba
inc     ebp
cmp     ebp, 100h
jl      short loc_496c8a
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 104h
retn
push    esi
push    edi
xor     edi, edi
mov     esi, [esp+8+lpfilename]
push    esi
call    ds:getfileattributesa
cmp     eax, 0ffffffffh
jnz     short loc_496ce9
mov     edi, 1
test    edi, edi
jz      short loc_496d04
cmp     [esp+8+arg_4], 0
jz      short loc_496d04
push    0
push    esi
call    ds:createdirectorya
cmp     eax, 1
sbb     edi, edi
neg     edi
mov     eax, 0
cmp     edi, 1
adc     eax, 0ffffffffh
pop     edi
and     eax, 80040006h
pop     esi
retn
mov     eax, [esp+arg_0]
sub     esp, 8
mov     al, [eax]
push    0
mov     [esp+0ch+rootpathname], al
push    0
lea     ecx, [esp+10h+maximumcomponentlength]
push    0
mov     [esp+14h+var_7], 3ah
lea     eax, [esp+14h+rootpathname]
push    ecx
mov     [esp+18h+var_6], 5ch
mov     [esp+18h+var_5], 0
push    0
push    0
push    0
push    eax
call    ds:getvolumeinformationa
test    eax, eax
jnz     short loc_496d62
xor     al, al
add     esp, 8
retn
cmp     [esp+8+maximumcomponentlength], 0ch
jbe     short loc_496d79
call    sub_496dd0
cmp     eax, 2
jl      short loc_496d79
mov     al, 1
add     esp, 8
retn
xor     al, al
add     esp, 8
retn
mov     edx, [esp+arg_0]
push    edi
mov     edi, edx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
dec     ecx
cmp     ecx, 4
jle     short loc_496d9d
sub     ecx, 4
jmp     short loc_496d9f
xor     ecx, ecx
add     edx, ecx
cmp     byte ptr [edx], 2eh
jnz     short loc_496dc1
mov     al, [edx+1]
cmp     al, 78h
jz      short loc_496db1
cmp     al, 58h
jnz     short loc_496dc1
cmp     byte ptr [edx+2], 33h
jnz     short loc_496dc1
cmp     byte ptr [edx+3], 32h
jnz     short loc_496dc1
mov     al, 1
pop     edi
retn
xor     al, al
pop     edi
retn
call    ds:getversion
cmp     eax, 80000000h
jnb     short loc_496de3
mov     eax, 3
retn
cmp     al, 4
sbb     eax, eax
add     eax, 2
retn
mov     edx, [esp+arg_0]
push    esi
push    edi
mov     ecx, 0ffffffffh
mov     edi, edx
sub     eax, eax
repne scasb
mov     edi, offset alnk
sub     eax, eax
not     ecx
lea     esi, [ecx+edx-5]
mov     ecx, 5
repe cmpsb
jz      short loc_496e1c
sbb     eax, eax
sbb     eax, 0ffffffffh
pop     edi
test    eax, eax
setz    al
pop     esi
retn
sub     esp, 454h
push    ebx
push    esi
push    edi
xor     ebx, ebx
lea     eax, [esp+460h+ppv]
push    ebp
mov     ebp, [esp+464h+arg_4]
push    eax
mov     [esp+468h+ppv], ebx
push    offset stru_4abe10
mov     [esp+46ch+var_450], ebx
push    1
push    ebx
mov     [ebp+0], bl
push    offset rclsid
call    ds:cocreateinstance
mov     esi, eax
test    esi, esi
jl      loc_496f7f
lea     eax, [esp+464h+var_450]
mov     ecx, [esp+464h+ppv]
push    eax
push    offset dword_4ac330
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
mov     esi, eax
test    esi, esi
jl      loc_496f7f
lea     eax, [esp+464h+widecharstr]
push    104h
mov     ecx, [esp+468h+lpmultibytestr]
push    eax
push    0ffffffffh
push    ecx
push    ebx
push    ebx
call    ds:multibytetowidechar
lea     ecx, [esp+464h+widecharstr]
push    ebx
mov     eax, [esp+468h+var_450]
push    ecx
push    eax
mov     esi, [eax]
call    dword ptr [esi+14h]
mov     esi, eax
test    esi, esi
jl      loc_496f7f
push    3
call    ds:getactivewindow
push    eax
mov     eax, [esp+46ch+ppv]
push    eax
mov     esi, [eax]
call    dword ptr [esi+4ch]
mov     esi, eax
test    esi, esi
jl      loc_496f7f
lea     eax, [esp+464h+var_348]
push    2
lea     ecx, [esp+468h+var_44c]
push    eax
mov     edx, [esp+46ch+ppv]
push    104h
mov     eax, [edx]
push    ecx
push    edx
call    dword ptr [eax+0ch]
mov     esi, eax
test    esi, esi
jl      short loc_496f7f
lea     edi, [esp+464h+var_44c]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
shr     ecx, 2
mov     esi, edi
mov     edi, ebp
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     edx, [esp+464h+var_334]
mov     ecx, [esp+464h+arg_c]
mov     eax, [esp+464h+var_330]
mov     [ecx], edx
mov     edx, [esp+464h+var_450]
mov     [ecx+4], eax
mov     ecx, [esp+464h+var_348]
mov     eax, [esp+464h+arg_8]
and     ecx, 10h
push    edx
shr     ecx, 4
mov     [eax], cl
mov     eax, [edx]
call    dword ptr [eax+8]
mov     ecx, [esp+464h+ppv]
xor     esi, esi
mov     [esp+464h+var_450], ebx
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     [esp+464h+ppv], ebx
test    esi, esi
jge     short loc_496fa5
cmp     [esp+464h+var_450], 0
jz      short loc_496f90
mov     eax, [esp+464h+var_450]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
cmp     [esp+464h+ppv], 0
jz      short loc_496fa1
mov     eax, [esp+464h+ppv]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     byte ptr [ebp+0], 0
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 454h
retn
mov     eax, [esp+pmem]
push    esi
test    eax, eax
jz      short loc_496fe4
push    eax
call    ds:globalhandle
mov     esi, eax
test    esi, esi
jz      short loc_496fe4
push    esi
call    ds:globalunlock
push    esi
call    ds:globalfree
pop     esi
retn
mov     eax, [esp+dwbytes]
push    eax
push    40h
call    ds:globalalloc
test    eax, eax
jz      short loc_497009
push    eax
call    ds:globallock
retn
xor     eax, eax
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     byte ptr [esi+2ch], 0
test    byte ptr [esi+20h], 2
jnz     short loc_497034
push    0
call    ds:coinitialize
test    eax, eax
jz      short loc_497030
cmp     eax, 1
jnz     short loc_497034
mov     byte ptr [esi+2ch], 1
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     byte ptr [esi+2ch], 1
jnz     short loc_497055
call    ds:couninitialize
mov     byte ptr [esi+2ch], 0
xor     eax, eax
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_4]
test    esi, esi
jnz     short loc_49706f
xor     eax, eax
pop     edi
pop     esi
retn
mov     edi, esi
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
mov     eax, [esp+8+arg_0]
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+0ch]
mov     edx, eax
test    edx, edx
jz      short loc_4970ae
mov     edi, esi
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
shr     ecx, 2
mov     esi, edi
mov     edi, edx
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, edx
pop     edi
pop     esi
retn
sub     esp, 458h
cmp     [esp+458h+arg_0], 0
push    ebx
push    esi
push    edi
push    ebp
jnz     short loc_4970e1
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 458h
retn
mov     edi, [esp+468h+arg_0]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
shr     ecx, 2
mov     esi, edi
lea     edi, [esp+468h+filename]
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     edi, [esp+468h+arg_0]
mov     ecx, 0ffffffffh
sub     eax, eax
mov     edx, [esp+468h+arg_0]
repne scasb
not     ecx
cmp     byte ptr [ecx+edx-2], 5ch
jnz     short loc_497168
mov     edi, offset asc_4adc60
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     ecx, 0ffffffffh
lea     edi, [esp+468h+filename]
sub     eax, eax
repne scasb
dec     edi
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     byte ptr [esp+468h+var_456+1], 1
jmp     short loc_49716d
mov     byte ptr [esp+468h+var_456+1], 0
lea     eax, [esp+468h+findfiledata]
lea     ecx, [esp+468h+filename]
push    eax
push    ecx
call    ds:findfirstfilea
cmp     eax, 0ffffffffh
mov     ebp, eax
jz      loc_497334
mov     ebx, [esp+468h+arg_c]
lea     esi, [esp+468h+findfiledata.cfilename]
mov     edi, offset default
mov     ecx, 2
repe cmpsb
jz      loc_497316
lea     esi, [esp+468h+findfiledata.cfilename]
mov     edi, offset asc_4adc8c
mov     ecx, 3
repe cmpsb
jz      loc_497316
mov     edi, [esp+468h+arg_0]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
shr     ecx, 2
mov     esi, edi
lea     edi, [esp+468h+multibytestr]
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
cmp     byte ptr [esp+468h+var_456+1], 0
jz      short loc_49722a
lea     edi, [esp+468h+findfiledata.cfilename]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     ecx, 0ffffffffh
lea     edi, [esp+468h+multibytestr]
sub     eax, eax
repne scasb
dec     edi
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, [esp+468h+findfiledata.ftlastwritetime.dwlowdatetime]
mov     ecx, [esp+468h+findfiledata.ftlastwritetime.dwhighdatetime]
mov     [esp+468h+var_456+2], eax
mov     [esp+468h+var_450], ecx
mov     eax, [esp+468h+findfiledata.dwfileattributes]
lea     ecx, [esp+468h+multibytestr]
and     eax, 10h
push    ecx
shr     eax, 4
mov     byte ptr [esp+46ch+var_456], al
call    sub_496df0
add     esp, 4
test    al, al
jz      short loc_4972ad
lea     eax, [esp+468h+var_456+2]
lea     ecx, [esp+468h+var_456]
lea     edx, [esp+468h+var_348]
push    eax
lea     eax, [esp+46ch+multibytestr]
push    ecx
push    edx
push    eax
call    sub_496e30
add     esp, 10h
test    eax, eax
jl      short loc_4972ad
lea     edi, [esp+468h+var_348]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
shr     ecx, 2
mov     esi, edi
lea     edi, [esp+468h+multibytestr]
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
cmp     byte ptr [esp+468h+var_456], 0
jz      short loc_4972f9
cmp     [esp+468h+arg_4], 0
jle     short loc_497316
lea     eax, [esp+468h+multibytestr]
push    eax
call    sub_496bd0
mov     eax, [esp+46ch+arg_8]
lea     ecx, [esp+46ch+multibytestr]
add     esp, 4
push    ebx
push    eax
mov     eax, [esp+470h+arg_4]
dec     eax
push    eax
push    ecx
call    sub_4970c0
add     esp, 10h
test    eax, eax
jz      short loc_497316
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 458h
retn
mov     eax, [esp+468h+var_456+2]
push    ebx
mov     ecx, [esp+46ch+var_450]
push    0
lea     edx, [esp+470h+multibytestr]
push    ecx
push    eax
push    edx
call    [esp+47ch+arg_8]
test    eax, eax
jnz     short loc_497336
lea     eax, [esp+468h+findfiledata]
push    eax
push    ebp
call    ds:findnextfilea
test    eax, eax
jnz     loc_497195
push    ebp
call    ds:findclose
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 458h
retn
mov     eax, [esp+arg_4]
push    eax
call    sub_496d80
add     esp, 4
cmp     al, 1
sbb     ecx, ecx
mov     eax, [esp+arg_c]
inc     ecx
mov     [eax], ecx
xor     eax, eax
retn
mov     ecx, [esp+lpfilename]
sub     esp, 88h
lea     eax, [esp+88h+reopenbuff]
push    200h
push    eax
push    ecx
call    ds:openfile
cmp     eax, 0ffffffffh
jnz     short loc_49739e
xor     eax, eax
mov     ax, [esp+88h+reopenbuff.nerrcode]
add     esp, 88h
retn
xor     eax, eax
add     esp, 88h
retn
sub     esp, 88h
push    esi
mov     esi, [esp+8ch+lpfilename]
push    esi
call    sub_497370
lea     eax, [esp+90h+reopenbuff]
add     esp, 4
push    1011h
push    eax
push    esi
call    ds:openfile
cmp     eax, 0ffffffffh
jnz     short loc_4973ec
xor     eax, eax
mov     ax, [esp+8ch+reopenbuff.nerrcode]
pop     esi
add     esp, 88h
retn
push    eax
call    ds:_lclose
xor     eax, eax
pop     esi
add     esp, 88h
retn
sub     esp, 4
lea     eax, [esp+4+phkresult]
push    ebx
push    esi
push    edi
push    ebp
mov     esi, ds:regopenkeya
push    eax
push    offset subkey
push    80000002h
call    esi
mov     edi, eax
test    edi, edi
jnz     short loc_497453
lea     eax, [esp+14h+cbdata]
mov     ebx, [esp+14h+lpdata]
mov     ecx, [esp+14h+phkresult]
push    eax
push    ebx
push    0
push    0
push    offset valuename
push    ecx
call    ds:regqueryvalueexa
mov     edi, eax
mov     ebp, ds:regclosekey
mov     eax, [esp+14h+phkresult]
push    eax
call    ebp
jmp     short loc_49745d
mov     ebp, ds:regclosekey
mov     ebx, [esp+14h+lpdata]
test    edi, edi
jz      loc_4975dc
lea     eax, [esp+14h+phkresult]
push    eax
push    offset asoftwaremicros
push    80000002h
call    esi
test    eax, eax
jz      short loc_49749b
lea     eax, [esp+14h+phkresult]
push    eax
push    offset asoftwaremicros
push    80000002h
call    ds:regcreatekeya
test    eax, eax
jz      short loc_49749b
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
lea     eax, [esp+14h+cbdata]
mov     ecx, [esp+14h+phkresult]
push    eax
push    ebx
push    0
push    0
push    offset acommonfilesdir
push    ecx
call    ds:regqueryvalueexa
test    eax, eax
jz      loc_497545
mov     cx, word_4aed2c
mov     eax, offset word_4aed2c
mov     [ebx], cx
push    ebx
mov     al, [eax+2]
mov     [ebx+2], al
call    sub_496d20
add     esp, 4
test    al, al
jz      short loc_4974e6
mov     edi, offset aprogramfilesco
jmp     short loc_4974eb
mov     edi, offset aprogra1common1
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     ecx, 0ffffffffh
mov     edi, ebx
sub     eax, eax
repne scasb
dec     edi
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, ebx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
mov     eax, [esp+14h+phkresult]
push    ecx
push    ebx
push    1
push    0
push    offset acommonfilesdir
push    eax
call    ds:regsetvalueexa
test    eax, eax
jz      short loc_497545
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+14h+phkresult]
push    eax
call    ebp
push    ebx
call    sub_496bd0
add     esp, 4
push    ebx
call    sub_496d20
add     esp, 4
test    al, al
jz      short loc_497569
mov     edi, offset amacromediaxtra
jmp     short loc_49756e
mov     edi, offset amacrom1xtras
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     ecx, 0ffffffffh
mov     edi, ebx
sub     eax, eax
repne scasb
dec     edi
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
lea     eax, [esp+14h+phkresult]
push    eax
push    offset subkey
push    80000002h
call    ds:regcreatekeya
test    eax, eax
jnz     short loc_4975dc
mov     edi, ebx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
mov     eax, [esp+14h+phkresult]
push    ecx
push    ebx
push    1
push    0
push    offset valuename
push    eax
call    ds:regsetvalueexa
mov     eax, [esp+14h+phkresult]
push    eax
call    ebp
push    20h
push    ebx
call    _strchr
add     esp, 8
test    eax, eax
jz      short loc_49760a
push    ebx
call    sub_496d20
add     esp, 4
test    al, al
jnz     short loc_49760a
mov     esi, offset aprogra1common1_0
lea     edi, [ebx+1]
mov     ecx, 8
rep movsd
movsw
movsb
mov     eax, [esp+14h+arg_c]
push    eax
push    ebx
call    sub_496c70
add     esp, 8
test    eax, eax
jnz     short loc_497627
push    ebx
call    sub_496bd0
add     esp, 4
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, 80040017h
retn    4
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_4ab978
retn
sub     esp, 0ch
mov     [esp+0ch+var_a], 0
push    ebx
push    esi
mov     esi, [esp+14h+arg_4]
push    edi
push    ebp
push    offset dword_4ab418
mov     eax, [esi+4]
add     eax, 14h
push    eax
call    sub_495dd0
mov     ecx, [esi+4]
cmp     eax, 1
sbb     al, al
inc     al
cmp     dword ptr [ecx+10h], 0
mov     [esp+1ch+var_9], al
jz      loc_497754
mov     [esp+1ch+var_4], 3fdh
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+var_8], eax
xor     ebx, ebx
mov     eax, [esp+1ch+var_8]
mov     edi, [eax]
cmp     edi, ebx
jz      loc_497740
lea     ebp, [edi+4]
mov     eax, [ebp+0]
cmp     dword ptr [eax+10h], 0
jz      short loc_497734
mov     ecx, [esi+4]
push    ecx
push    eax
call    sub_495dd0
test    eax, eax
jz      short loc_497734
mov     edx, [ebp+0]
mov     eax, [esi+4]
mov     ecx, [edx+10h]
mov     eax, [eax+10h]
cmp     ecx, eax
jg      loc_4977a6
jge     short loc_497708
test    ebx, ebx
jz      short loc_4976e3
mov     eax, [edi]
mov     [ebx], eax
jmp     short loc_4976eb
mov     ecx, [edi]
mov     eax, [esp+1ch+var_8]
mov     [eax], ecx
mov     eax, [esp+1ch+arg_8]
push    edi
mov     ebp, [eax]
push    eax
mov     edi, ebx
call    dword ptr [ebp+10h]
test    ebx, ebx
jnz     short loc_497702
mov     eax, [esp+1ch+var_8]
mov     edi, [eax]
test    edi, edi
jnz     short loc_497734
jmp     short loc_497740
cmp     [esp+1ch+var_9], 0
jz      short loc_497734
push    offset dword_4ab418
add     edx, 14h
push    edx
call    sub_495dd0
test    eax, eax
jz      short loc_497734
mov     ecx, [ebp+0]
mov     eax, [esi+4]
mov     edx, [eax+24h]
cmp     [ecx+24h], edx
jnz     short loc_497734
mov     [esp+1ch+var_a], 1
mov     ebx, edi
mov     edi, [edi]
test    edi, edi
jnz     loc_4976a9
add     [esp+1ch+var_8], 4
dec     [esp+1ch+var_4]
cmp     [esp+1ch+var_4], 0
jnz     loc_497699
mov     ecx, [esi+4]
sub     edx, edx
mov     eax, [ecx+14h]
add     eax, [ecx]
mov     ecx, 3fdh
div     ecx
mov     eax, [esp+1ch+arg_0]
lea     edi, [eax+edx*4]
mov     ebx, [edi]
test    ebx, ebx
jz      loc_497801
mov     eax, [ebx+4]
mov     ecx, [esi+4]
push    eax
push    ecx
call    sub_495dd0
test    eax, eax
jz      short loc_49779e
mov     eax, [ebx+4]
add     eax, 14h
push    eax
mov     eax, [esi+4]
add     eax, 14h
push    eax
call    sub_495dd0
test    eax, eax
jnz     short loc_4977b3
mov     ebx, [ebx]
test    ebx, ebx
jnz     short loc_497776
jmp     short loc_497801
mov     eax, [esp+1ch+arg_8]
push    esi
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
jmp     short loc_49780b
mov     ecx, [ebx+4]
mov     eax, [esi+4]
mov     ebp, [ecx+10h]
mov     edx, [eax+10h]
cmp     ebp, edx
jg      short loc_4977f4
mov     ecx, [ecx+24h]
mov     eax, [eax+24h]
cmp     ecx, eax
jg      short loc_4977f4
test    edx, edx
jz      short loc_4977e2
cmp     ebp, edx
jnz     short loc_4977e2
test    eax, eax
jz      short loc_4977e2
cmp     ecx, eax
jnz     short loc_4977e2
mov     [esp+1ch+var_a], 1
mov     eax, [ebx]
mov     [esi], eax
mov     [ebx], eax
mov     ecx, [esi+4]
mov     [ebx+4], ecx
mov     edx, [esi+8]
mov     [ebx+8], edx
mov     eax, [esp+1ch+arg_8]
push    esi
mov     ebx, [eax]
push    eax
xor     esi, esi
call    dword ptr [ebx+10h]
test    esi, esi
jz      short loc_49780b
mov     eax, [edi]
mov     [esi], eax
mov     [edi], esi
mov     al, [esp+1ch+var_a]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+arg_4]
push    0ff4h
push    eax
mov     eax, [eax]
call    dword ptr [eax+0ch]
mov     ecx, [esp+arg_0]
cmp     eax, 1
mov     [ecx], eax
sbb     eax, eax
and     eax, 80040002h
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_8]
push    edi
push    ebp
push    offset dword_4ab3e8
mov     ebp, [esp+14h+arg_10]
push    ebx
mov     byte ptr [ebp+0], 0
call    sub_495dd0
test    eax, eax
jnz     short loc_4978a8
mov     esi, [esp+10h+arg_0]
mov     edi, [esp+10h+arg_4]
push    0ch
mov     eax, [edi]
push    edi
call    dword ptr [eax+0ch]
test    eax, eax
jz      short loc_4978af
mov     ecx, [esp+10h+arg_c]
push    edi
push    eax
mov     dword ptr [eax], 0
push    esi
mov     [eax+4], ebx
mov     [eax+8], ecx
call    sub_497650
add     esp, 0ch
test    al, al
jz      short loc_497896
mov     byte ptr [ebp+0], 1
add     ebx, 28h
push    offset dword_4ab3e8
push    ebx
call    sub_495dd0
test    eax, eax
jz      short loc_497867
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 80040002h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     [esp+arg_0], 0
push    ebx
push    esi
push    edi
push    ebp
jz      short loc_497906
mov     eax, [esp+10h+arg_0]
mov     esi, [eax]
test    esi, esi
jz      short loc_497906
mov     ebp, 3fdh
mov     edi, [esp+10h+arg_4]
mov     eax, [esi]
test    eax, eax
jz      short loc_4978f3
mov     ebx, [eax]
push    eax
push    edi
mov     eax, [edi]
call    dword ptr [eax+10h]
mov     eax, ebx
test    ebx, ebx
jnz     short loc_4978e4
add     esi, 4
dec     ebp
jnz     short loc_4978de
mov     eax, [esp+10h+arg_0]
mov     ebx, [edi]
mov     ecx, [eax]
push    ecx
push    edi
call    dword ptr [ebx+10h]
mov     eax, [esp+10h+arg_0]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 0
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
mov     edi, [esp+0ch+arg_8]
push    ebp
mov     ecx, 3fdh
sub     edx, edx
mov     eax, [edi]
mov     ebp, [esp+10h+arg_0]
add     eax, [ebx]
div     ecx
mov     esi, [ebp+edx*4+0]
test    esi, esi
jz      short loc_49796a
push    ebx
mov     eax, [esi+4]
push    eax
call    sub_495dd0
test    eax, eax
jz      short loc_497964
push    edi
mov     eax, [esi+4]
add     eax, 14h
push    eax
call    sub_495dd0
test    eax, eax
jnz     short loc_4979b3
mov     esi, [esi]
test    esi, esi
jnz     short loc_497945
mov     eax, [edi]
mov     ecx, 3fdh
add     eax, ds:dword_4ab3f8
sub     edx, edx
div     ecx
mov     esi, [ebp+edx*4+0]
test    esi, esi
jz      short loc_4979ac
push    offset dword_4ab3f8
mov     eax, [esi+4]
push    eax
call    sub_495dd0
test    eax, eax
jz      short loc_4979a6
push    edi
mov     eax, [esi+4]
add     eax, 14h
push    eax
call    sub_495dd0
test    eax, eax
jnz     short loc_4979c8
mov     esi, [esi]
test    esi, esi
jnz     short loc_497983
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+10h+arg_c]
test    eax, eax
jz      short loc_4979c0
mov     ecx, [esi+4]
mov     [eax], ecx
mov     eax, [esi+8]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+10h+arg_c]
test    eax, eax
jz      short loc_4979d6
mov     dword ptr [eax], offset dword_4ab3f8
mov     eax, [esi+8]
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
mov     [esp+4+var_4], 3fdh
push    ebx
push    esi
mov     ebx, [esp+0ch+arg_0]
push    edi
mov     esi, [esp+10h+arg_4]
push    ebp
mov     edi, [esp+14h+arg_8]
mov     ebp, [ebx]
test    ebp, ebp
jz      short loc_497a1e
mov     ecx, [ebp+4]
push    edi
mov     eax, [ebp+8]
lea     edx, [ecx+14h]
push    eax
push    edx
push    ecx
call    esi
add     esp, 10h
test    eax, eax
jnz     short loc_497a2e
mov     ebp, [ebp+0]
test    ebp, ebp
jnz     short loc_497a01
add     ebx, 4
dec     [esp+14h+var_4]
cmp     [esp+14h+var_4], 0
jnz     short loc_4979fb
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
push    offset dword_4ab408
push    ebx
call    sub_495dd0
mov     esi, [esp+0ch+arg_0]
test    eax, eax
jz      short loc_497a6e
mov     eax, [esp+0ch+arg_8]
push    esi
mov     [eax], esi
mov     ebx, [esi]
call    dword ptr [ebx+4]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     edi, [esi+4]
push    edi
mov     eax, [edi]
call    dword ptr [eax+38h]
test    eax, eax
jz      short loc_497a8d
push    0
mov     ecx, [esi+10h]
push    ebx
push    ecx
push    eax
call    sub_497920
add     esp, 10h
mov     edi, eax
test    edi, edi
jnz     short loc_497a9c
mov     eax, 80040004h
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     eax, [esp+0ch+arg_8]
mov     ecx, [esi+10h]
push    eax
push    ebx
push    ecx
mov     ebx, [edi]
push    esi
push    edi
call    dword ptr [ebx+24h]
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+14h]
inc     eax
mov     [ecx+14h], eax
retn    4
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, [esp+18h+arg_0]
mov     esi, [edi+14h]
dec     esi
mov     [edi+14h], esi
jnz     short loc_497b3a
mov     ebx, [edi+4]
lea     eax, [esp+18h+var_c]
lea     ecx, [esp+18h+var_8]
push    eax
lea     edx, [esp+1ch+var_4]
push    ecx
push    edx
mov     eax, [edi+10h]
push    eax
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+1ch]
test    eax, eax
jnz     short loc_497b21
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+28h]
inc     dword ptr [edi+14h]
cmp     dword ptr [esp+18h+var_c], 0
jz      short loc_497b18
push    edi
call    dword ptr [esp+1ch+var_c]
push    ebx
dec     dword ptr [edi+14h]
mov     eax, [ebx]
call    dword ptr [eax+2ch]
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+8]
push    edi
call    sub_497640
add     esp, 4
mov     eax, [edi+0ch]
push    edi
mov     ebx, [eax]
push    eax
call    dword ptr [ebx+10h]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn    4
mov     eax, [esp+arg_20]
push    ebx
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
push    ebp
push    esi
mov     dword ptr [eax], 0
mov     ebx, [esi]
call    dword ptr [ebx+4]
mov     eax, [esp+10h+arg_4]
mov     edi, [esp+10h+arg_1c]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+0ch]
mov     ebp, eax
test    ebp, ebp
jnz     short loc_497b84
mov     ebx, 80040002h
jmp     short loc_497bde
mov     eax, [esp+10h+arg_18]
mov     ecx, [esp+10h+arg_10]
mov     dword ptr [ebp+0], offset off_4ab9f0
mov     [ebp+4], esi
mov     ebx, 0
mov     [ebp+8], eax
mov     eax, [esp+10h+arg_8]
mov     [ebp+0ch], edi
test    eax, eax
mov     [ebp+10h], ecx
mov     dword ptr [ebp+14h], 1
jz      short loc_497bb8
push    ebp
call    eax
mov     ebx, eax
dec     dword ptr [ebp+14h]
test    ebx, ebx
jnz     short loc_497be2
mov     eax, [esp+10h+arg_20]
mov     ecx, [esp+10h+arg_14]
push    eax
mov     dword ptr [ebp+0], offset off_4ab9f0
push    ecx
inc     dword ptr [ebp+14h]
push    ebp
mov     ebx, [ebp+0]
call    dword ptr [ebx]
mov     ebx, eax
dec     dword ptr [ebp+14h]
test    ebx, ebx
jz      short loc_497c04
push    esi
mov     eax, [esi]
call    dword ptr [eax+8]
test    ebp, ebp
jz      short loc_497c04
mov     eax, [esp+10h+arg_c]
inc     dword ptr [ebp+14h]
test    eax, eax
jz      short loc_497bfa
push    ebp
call    eax
push    ebp
dec     dword ptr [ebp+14h]
push    edi
mov     eax, [edi]
call    dword ptr [eax+10h]
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    24h
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
push    ebp
push    offset dword_4ab408
push    ebx
call    sub_495dd0
test    eax, eax
jnz     short loc_497c8c
push    offset dword_4ab438
push    ebx
call    sub_495dd0
test    eax, eax
jnz     short loc_497c8c
mov     esi, [esp+10h+arg_0]
mov     eax, [esi+8]
test    eax, eax
jz      short loc_497c7e
mov     edi, [esp+10h+arg_8]
push    edi
push    ebx
push    eax
mov     eax, [eax]
call    dword ptr [eax]
mov     ebp, eax
test    ebp, ebp
jz      short loc_497c9e
push    offset dword_4ab428
push    ebx
call    sub_495dd0
test    eax, eax
jz      short loc_497c9e
mov     eax, [esi+4]
mov     ecx, [eax]
xor     ebp, ebp
mov     [edi], ecx
mov     eax, [esi+4]
mov     eax, [eax]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+4]
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     ebp, 80040004h
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     esi, [esp+10h+arg_0]
mov     edi, [esp+10h+arg_8]
mov     [edi], esi
mov     eax, [esi]
push    esi
xor     ebp, ebp
call    dword ptr [eax+4]
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+0ch]
inc     eax
mov     [ecx+0ch], eax
retn    4
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, [edi+0ch]
dec     esi
mov     [edi+0ch], esi
jnz     short loc_497cec
mov     eax, [edi+8]
test    eax, eax
jz      short loc_497cdc
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, [edi+4]
mov     eax, [eax]
test    eax, eax
jz      short loc_497cec
push    edi
push    eax
mov     eax, [eax]
call    dword ptr [eax+10h]
mov     eax, esi
pop     edi
pop     esi
retn    4
mov     eax, [esp+arg_c]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
push    eax
mov     eax, [esp+4+arg_0]
push    ecx
push    edx
mov     ecx, [eax+4]
push    ecx
call    sub_496b00
retn    10h
mov     eax, [esp+arg_0]
mov     ecx, [eax+4]
push    ecx
call    sub_496b70
retn    4
mov     eax, [esp+arg_4]
test    eax, eax
jnz     short loc_497d3d
xor     eax, eax
retn    0ch
mov     ecx, [esp+arg_8]
test    ecx, ecx
jz      short locret_497d4b
mov     dword ptr [ecx], 0
retn    0ch
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    10h
mov     eax, [esi]
push    eax
mov     edi, [eax]
call    dword ptr [edi+0ch]
mov     edi, eax
xor     eax, eax
test    edi, edi
jz      short loc_497d8d
push    edi
mov     dword ptr [edi], offset off_4aba00
mov     [edi+4], esi
mov     [edi+8], eax
mov     [edi+0ch], eax
mov     eax, [edi]
call    dword ptr [eax+4]
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_4]
test    esi, esi
jz      short loc_497dc7
mov     eax, [esi+8]
test    eax, eax
jz      short loc_497db6
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, [esp+4+arg_8]
mov     [esi+8], eax
test    eax, eax
jz      short loc_497dc7
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_8]
mov     edi, [esp+8+arg_0]
mov     byte ptr [esi], 0
cmp     dword ptr [edi+1ch], 0
jnz     short loc_497df7
push    offset adirspec
mov     eax, [edi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [edi+1ch], eax
mov     eax, [edi+1ch]
mov     ecx, [esp+8+arg_c]
push    eax
push    ecx
mov     eax, [esp+10h+arg_4]
push    esi
mov     esi, [eax]
push    8
push    eax
call    dword ptr [esi+14h]
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+1ch], 0
jnz     short loc_497e2f
push    offset adirspec
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+1ch], eax
mov     eax, [esi+1ch]
mov     ecx, [esp+4+arg_c]
mov     edx, [esp+4+arg_8]
push    eax
mov     eax, [esp+8+arg_4]
push    ecx
push    edx
push    8
push    eax
mov     esi, [eax]
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+20h], 0
jnz     short loc_497e72
push    offset artfiledictlist
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+20h], eax
mov     eax, [esi+20h]
lea     ecx, [esp+8+var_4]
push    eax
push    4
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    2
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_497e95
mov     dword ptr [esp+8+var_4], 0
mov     eax, dword ptr [esp+8+var_4]
pop     esi
add     esp, 4
retn
sub     esp, 4
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
cmp     dword ptr [esi+20h], 0
jnz     short loc_497ec3
push    offset artfiledictlist
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+20h], eax
mov     eax, [esi+20h]
lea     ecx, [esp+0ch+var_4]
mov     edi, [esp+0ch+arg_4]
push    eax
push    4
push    ecx
push    2
mov     eax, [edi]
push    edi
call    dword ptr [eax+14h]
test    eax, eax
jz      short loc_497f17
mov     eax, [esi+4]
push    eax
call    sub_49b520
mov     dword ptr [esp+10h+var_4], eax
add     esp, 4
test    eax, eax
jnz     short loc_497efa
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esi+20h]
lea     ecx, [esp+0ch+var_4]
push    eax
mov     esi, [edi]
push    4
push    ecx
push    2
push    edi
call    dword ptr [esi+18h]
mov     ecx, dword ptr [esp+0ch+var_4]
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     eax, dword ptr [esp+0ch+var_4]
pop     edi
pop     esi
add     esp, 4
retn
push    esi
push    edi
mov     esi, [esp+8+arg_8]
mov     edi, [esp+8+arg_0]
mov     byte ptr [esi], 0
cmp     dword ptr [edi+24h], 0
jnz     short loc_497f57
push    offset afilename
mov     eax, [edi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [edi+24h], eax
mov     eax, [edi+24h]
mov     ecx, [esp+8+arg_c]
push    eax
push    ecx
mov     eax, [esp+10h+arg_4]
push    esi
mov     esi, [eax]
push    9
push    eax
call    dword ptr [esi+14h]
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+24h], 0
jnz     short loc_497f8f
push    offset afilename
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+24h], eax
mov     eax, [esi+24h]
mov     ecx, [esp+4+arg_c]
mov     edx, [esp+4+arg_8]
push    eax
mov     eax, [esp+8+arg_4]
push    ecx
push    edx
push    9
push    eax
mov     esi, [eax]
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 8
push    esi
mov     esi, [esp+0ch+arg_0]
cmp     dword ptr [esi+28h], 0
jnz     short loc_497fd2
push    offset adate
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+28h], eax
mov     eax, [esi+28h]
lea     ecx, [esp+0ch+var_8]
push    eax
push    8
mov     eax, [esp+14h+arg_4]
push    ecx
mov     esi, [eax]
push    5
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_497ffe
lea     eax, [esp+0ch+var_8]
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
mov     eax, dword ptr [esp+0ch+var_8]
mov     edx, [esp+0ch+var_4]
pop     esi
add     esp, 8
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+28h], 0
jnz     short loc_49802f
push    offset adate
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+28h], eax
mov     eax, [esi+28h]
lea     ecx, [esp+4+arg_8]
push    eax
push    8
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    5
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+2ch], 0
jnz     short loc_498072
push    offset aostype
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+2ch], eax
mov     eax, [esi+2ch]
lea     ecx, [esp+8+var_4]
push    eax
push    4
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    3
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_498095
mov     dword ptr [esp+8+var_4], 0
mov     eax, dword ptr [esp+8+var_4]
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+2ch], 0
jnz     short loc_4980bf
push    offset aostype
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+2ch], eax
mov     eax, [esi+2ch]
lea     ecx, [esp+4+arg_8]
push    eax
push    4
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    3
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+30h], 0
jnz     short loc_498102
push    offset afilehasxtraent
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+30h], eax
mov     eax, [esi+30h]
lea     ecx, [esp+8+var_1]
push    eax
push    1
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    6
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_498122
mov     [esp+8+var_1], 0
mov     al, [esp+8+var_1]
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+30h], 0
jnz     short loc_49814f
push    offset afilehasxtraent
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+30h], eax
mov     eax, [esi+30h]
lea     ecx, [esp+4+arg_8]
push    eax
push    1
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    6
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+34h], 0
jnz     short loc_498192
push    offset artkeepincache
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+34h], eax
mov     eax, [esi+34h]
lea     ecx, [esp+8+var_1]
push    eax
push    1
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    6
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_4981b2
mov     [esp+8+var_1], 0
mov     al, [esp+8+var_1]
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+34h], 0
jnz     short loc_4981df
push    offset artkeepincache
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+34h], eax
mov     eax, [esi+34h]
lea     ecx, [esp+4+arg_8]
push    eax
push    1
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    6
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+38h], 0
jnz     short loc_498222
push    offset artxtradictlist
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+38h], eax
mov     eax, [esi+38h]
lea     ecx, [esp+8+var_4]
push    eax
push    4
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    2
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_498245
mov     dword ptr [esp+8+var_4], 0
mov     eax, dword ptr [esp+8+var_4]
pop     esi
add     esp, 4
retn
sub     esp, 4
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
cmp     dword ptr [esi+38h], 0
jnz     short loc_498273
push    offset artxtradictlist
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+38h], eax
mov     eax, [esi+38h]
lea     ecx, [esp+0ch+var_4]
mov     edi, [esp+0ch+arg_4]
push    eax
push    4
push    ecx
push    2
mov     eax, [edi]
push    edi
call    dword ptr [eax+14h]
test    eax, eax
jz      short loc_4982c7
mov     eax, [esi+4]
push    eax
call    sub_49b520
mov     dword ptr [esp+10h+var_4], eax
add     esp, 4
test    eax, eax
jnz     short loc_4982aa
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esi+38h]
lea     ecx, [esp+0ch+var_4]
push    eax
mov     esi, [edi]
push    4
push    ecx
push    2
push    edi
call    dword ptr [esi+18h]
mov     ecx, dword ptr [esp+0ch+var_4]
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     eax, dword ptr [esp+0ch+var_4]
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+3ch], 0
jnz     short loc_498302
push    offset artcalledregist
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+3ch], eax
mov     eax, [esi+3ch]
lea     ecx, [esp+8+var_1]
push    eax
push    1
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    6
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_498322
mov     [esp+8+var_1], 0
mov     al, [esp+8+var_1]
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+3ch], 0
jnz     short loc_49834f
push    offset artcalledregist
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+3ch], eax
mov     eax, [esi+3ch]
lea     ecx, [esp+4+arg_8]
push    eax
push    1
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    6
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+40h], 0
jnz     short loc_498392
push    offset aalwayscallregi
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+40h], eax
mov     eax, [esi+40h]
lea     ecx, [esp+8+var_1]
push    eax
push    1
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    6
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_4983b2
mov     [esp+8+var_1], 0
mov     al, [esp+8+var_1]
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+40h], 0
jnz     short loc_4983df
push    offset aalwayscallregi
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+40h], eax
mov     eax, [esi+40h]
lea     ecx, [esp+4+arg_8]
push    eax
push    1
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    6
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+44h], 0
jnz     short loc_498422
push    offset artxtraref
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+44h], eax
mov     eax, [esi+44h]
lea     ecx, [esp+8+var_4]
push    eax
push    4
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    2
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_498445
mov     dword ptr [esp+8+var_4], 0
mov     eax, dword ptr [esp+8+var_4]
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+44h], 0
jnz     short loc_49846f
push    offset artxtraref
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+44h], eax
mov     eax, [esi+44h]
lea     ecx, [esp+4+arg_8]
push    eax
push    4
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    2
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+48h], 0
jnz     short loc_4984b2
push    offset artneedsregistr
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+48h], eax
mov     eax, [esi+48h]
lea     ecx, [esp+8+var_1]
push    eax
push    1
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    6
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_4984d2
mov     [esp+8+var_1], 0
mov     al, [esp+8+var_1]
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+48h], 0
jnz     short loc_4984ff
push    offset artneedsregistr
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+48h], eax
mov     eax, [esi+48h]
lea     ecx, [esp+4+arg_8]
push    eax
push    1
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    6
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+4ch], 0
jnz     short loc_498542
push    offset artregdictlist
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+4ch], eax
mov     eax, [esi+4ch]
lea     ecx, [esp+8+var_4]
push    eax
push    4
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    2
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_498565
mov     dword ptr [esp+8+var_4], 0
mov     eax, dword ptr [esp+8+var_4]
pop     esi
add     esp, 4
retn
sub     esp, 4
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
cmp     dword ptr [esi+4ch], 0
jnz     short loc_498593
push    offset artregdictlist
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+4ch], eax
mov     eax, [esi+4ch]
lea     ecx, [esp+0ch+var_4]
mov     edi, [esp+0ch+arg_4]
push    eax
push    4
push    ecx
push    2
mov     eax, [edi]
push    edi
call    dword ptr [eax+14h]
test    eax, eax
jz      short loc_4985e7
mov     eax, [esi+4]
push    eax
call    sub_49b520
mov     dword ptr [esp+10h+var_4], eax
add     esp, 4
test    eax, eax
jnz     short loc_4985ca
xor     eax, eax
pop     edi
pop     esi
add     esp, 4
retn
mov     eax, [esi+4ch]
lea     ecx, [esp+0ch+var_4]
push    eax
mov     esi, [edi]
push    4
push    ecx
push    2
push    edi
call    dword ptr [esi+18h]
mov     ecx, dword ptr [esp+0ch+var_4]
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     eax, dword ptr [esp+0ch+var_4]
pop     edi
pop     esi
add     esp, 4
retn
sub     esp, 10h
push    esi
mov     esi, [esp+14h+arg_4]
cmp     dword ptr [esi+50h], 0
jnz     short loc_498622
push    offset aclassid
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+50h], eax
mov     eax, [esi+50h]
lea     ecx, [esp+14h+var_10]
push    eax
push    10h
mov     eax, [esp+1ch+arg_8]
push    ecx
mov     esi, [eax]
push    7
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_49864e
lea     ecx, [esp+14h+var_10]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     esi, [esp+14h+var_c]
lea     edx, [esp+14h+var_10]
mov     eax, [esp+14h+arg_0]
mov     ecx, [edx]
mov     [eax], ecx
mov     ecx, [edx+8]
mov     edx, [edx+0ch]
mov     [eax+4], esi
pop     esi
mov     [eax+8], ecx
mov     [eax+0ch], edx
add     esp, 10h
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+50h], 0
jnz     short loc_49869f
push    offset aclassid
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+50h], eax
mov     eax, [esi+50h]
lea     ecx, [esp+4+arg_8]
push    eax
push    10h
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    7
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 10h
push    esi
mov     esi, [esp+14h+arg_4]
cmp     dword ptr [esi+54h], 0
jnz     short loc_4986e2
push    offset ainterfaceid
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+54h], eax
mov     eax, [esi+54h]
lea     ecx, [esp+14h+var_10]
push    eax
push    10h
mov     eax, [esp+1ch+arg_8]
push    ecx
mov     esi, [eax]
push    7
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_49870e
lea     ecx, [esp+14h+var_10]
xor     eax, eax
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     esi, [esp+14h+var_c]
lea     edx, [esp+14h+var_10]
mov     eax, [esp+14h+arg_0]
mov     ecx, [edx]
mov     [eax], ecx
mov     ecx, [edx+8]
mov     edx, [edx+0ch]
mov     [eax+4], esi
pop     esi
mov     [eax+8], ecx
mov     [eax+0ch], edx
add     esp, 10h
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+54h], 0
jnz     short loc_49875f
push    offset ainterfaceid
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+54h], eax
mov     eax, [esi+54h]
lea     ecx, [esp+4+arg_8]
push    eax
push    10h
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    7
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
sub     esp, 4
push    esi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+58h], 0
jnz     short loc_4987a2
push    offset artsavedinstanc
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+58h], eax
mov     eax, [esi+58h]
lea     ecx, [esp+8+var_4]
push    eax
push    4
mov     eax, [esp+10h+arg_4]
push    ecx
mov     esi, [eax]
push    2
push    eax
call    dword ptr [esi+14h]
test    eax, eax
jz      short loc_4987c5
mov     dword ptr [esp+8+var_4], 0
mov     eax, dword ptr [esp+8+var_4]
pop     esi
add     esp, 4
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+58h], 0
jnz     short loc_4987ef
push    offset artsavedinstanc
mov     eax, [esi+0ch]
push    eax
call    sub_49a940
add     esp, 8
mov     [esi+58h], eax
mov     eax, [esi+58h]
lea     ecx, [esp+4+arg_8]
push    eax
push    4
mov     eax, [esp+0ch+arg_4]
push    ecx
mov     esi, [eax]
push    2
push    eax
call    dword ptr [esi+18h]
pop     esi
retn
push    esi
push    edi
mov     esi, [esp+8+arg_4]
test    esi, esi
jnz     short loc_498822
mov     eax, 80040001h
pop     edi
pop     esi
retn
mov     eax, [esp+8+arg_8]
push    eax
mov     eax, [esp+0ch+arg_0]
mov     ecx, [eax+0ch]
mov     edx, [eax+4]
push    ecx
push    edx
call    sub_49bfe0
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     short loc_498849
mov     eax, 80040002h
pop     edi
pop     esi
retn
push    edi
mov     eax, [esi]
push    esi
call    dword ptr [eax+10h]
push    edi
mov     eax, [edi]
call    dword ptr [eax+8]
mov     eax, [esp+8+arg_c]
mov     [eax], edi
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
sub     esp, 10h
mov     ecx, [esp+10h+arg_0]
push    ebx
push    esi
push    edi
push    ebp
push    eax
push    ecx
call    sub_498200
add     esp, 8
mov     esi, eax
cmp     [esp+20h+arg_4], 0
jz      loc_49894c
test    esi, esi
jz      loc_49893f
lea     eax, [esp+20h+var_8]
mov     ebx, [esi]
push    eax
push    esi
call    dword ptr [ebx+20h]
test    eax, eax
jnz     loc_498939
mov     edi, dword ptr [esp+20h+var_8]
mov     eax, [esp+20h+arg_0]
push    edi
push    eax
call    sub_498400
add     esp, 8
mov     ebx, eax
mov     eax, [esp+20h+arg_0]
push    edi
push    eax
call    sub_498520
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_49890f
lea     eax, [esp+20h+var_10]
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+20h]
test    eax, eax
jnz     short loc_498908
mov     eax, [esp+20h+var_10]
push    2
push    eax
call    sub_49bf90
lea     eax, [esp+28h+var_10]
add     esp, 8
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+24h]
test    eax, eax
jz      short loc_4988e9
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+0ch]
test    ebx, ebx
jz      short loc_49891b
push    0
mov     eax, [ebx]
push    ebx
call    dword ptr [eax+48h]
push    2
push    edi
call    sub_49bf90
lea     eax, [esp+28h+var_8]
add     esp, 8
mov     ebx, [esi]
push    eax
push    esi
call    dword ptr [ebx+24h]
test    eax, eax
jz      loc_4988b1
push    esi
mov     eax, [esi]
call    dword ptr [eax+0ch]
mov     eax, [esp+20h+arg_4]
push    eax
call    sub_49bf40
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     edx, [esp+arg_0]
push    ebx
push    esi
test    edx, edx
push    edi
push    ebp
jz      short loc_4989dc
mov     edi, edx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
lea     ebx, [ecx+edx-1]
cmp     byte ptr [ebx], 5ch
jz      short loc_49898c
cmp     ebx, edx
jbe     short loc_49898c
dec     ebx
cmp     byte ptr [ebx], 5ch
jnz     short loc_498982
mov     ebp, [esp+10h+arg_8]
test    ebp, ebp
jz      short loc_4989b6
lea     edi, [ebx+1]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
shr     ecx, 2
mov     esi, edi
mov     edi, ebp
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, [esp+10h+arg_4]
test    eax, eax
jz      short loc_4989f3
sub     ebx, edx
mov     edi, eax
inc     ebx
mov     esi, edx
mov     ecx, ebx
shr     ecx, 2
rep movsd
mov     ecx, ebx
pop     ebp
and     ecx, 3
rep movsb
pop     edi
mov     byte ptr [eax+ebx], 0
pop     esi
pop     ebx
retn
mov     ebp, [esp+10h+arg_8]
test    ebp, ebp
jz      short loc_4989e8
mov     byte ptr [ebp+0], 0
mov     eax, [esp+10h+arg_4]
test    eax, eax
jz      short loc_4989f3
mov     byte ptr [eax], 0
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_498a2c
or      dl, dl
jz      short loc_498a24
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_498a2c
add     eax, 2
add     ecx, 2
or      dl, dl
jnz     short loc_498a08
xor     eax, eax
test    eax, eax
setz    al
retn
sbb     eax, eax
sbb     eax, 0ffffffffh
test    eax, eax
setz    al
retn
mov     eax, [esp+arg_c]
sub     esp, 210h
lea     ecx, [esp+210h+var_104]
push    ebx
mov     edx, [esp+214h+arg_4]
push    esi
push    edi
push    ebp
push    eax
push    ecx
push    edx
call    sub_498960
mov     esi, [esp+22ch+arg_0]
add     esp, 0ch
mov     edi, [esi+14h]
test    edi, edi
jz      short loc_498ac4
lea     eax, [esp+220h+var_210]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+20h]
test    eax, eax
jnz     short loc_498ac4
mov     ebp, dword ptr [esp+220h+var_210]
push    104h
lea     eax, [esp+224h+var_208]
push    eax
push    ebp
push    esi
call    sub_497dd0
lea     eax, [esp+230h+var_208]
lea     ecx, [esp+230h+var_104]
add     esp, 10h
push    eax
push    ecx
call    sub_498a00
add     esp, 8
test    al, al
jnz     short loc_498b11
lea     eax, [esp+220h+var_210]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+24h]
test    eax, eax
jz      short loc_498a84
mov     ebx, [esp+220h+arg_8]
mov     eax, [esi+14h]
push    ebx
push    1
push    eax
push    esi
call    sub_498810
add     esp, 10h
test    eax, eax
jnz     short loc_498b06
lea     edi, [esp+220h+var_104]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
lea     eax, [esp+220h+var_104]
push    ecx
push    eax
mov     ecx, [ebx]
push    ecx
push    esi
call    sub_497e10
add     esp, 10h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 210h
retn
mov     ebx, [esp+220h+arg_8]
xor     eax, eax
mov     [ebx], ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 210h
retn
xor     eax, eax
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    edi
mov     edi, [esp+8+arg_18]
push    edi
push    6
push    eax
push    esi
call    sub_497ea0
add     esp, 8
push    eax
push    esi
call    sub_498810
add     esp, 10h
test    eax, eax
jnz     short loc_498ba5
mov     eax, [esp+8+arg_8]
push    0
push    eax
mov     ecx, [edi]
push    ecx
push    esi
call    sub_497f70
mov     edx, [esp+18h+arg_c]
mov     ecx, [esp+18h+arg_10]
add     esp, 10h
mov     eax, [edi]
push    ecx
push    edx
push    eax
push    esi
call    sub_498010
mov     ecx, [esp+18h+arg_14]
add     esp, 10h
mov     edx, [edi]
push    ecx
push    edx
push    esi
call    sub_4980a0
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
retn
mov     eax, [esp+lpsz]
push    eax
call    ds:charuppera
retn
mov     eax, [esp+arg_0]
sub     esp, 11ch
add     eax, 18h
push    ebx
mov     [esp+120h+var_11c], eax
push    esi
push    edi
push    ebp
push    eax
call    sub_49a8b0
mov     ecx, [esp+130h+var_11c]
add     esp, 4
push    ecx
call    sub_49a870
add     esp, 4
test    eax, eax
jnz     loc_498ccb
mov     eax, [esp+12ch+arg_0]
mov     ecx, [eax+14h]
mov     [esp+12ch+var_118], ecx
test    ecx, ecx
jz      loc_498cc9
lea     eax, [esp+12ch+var_10c]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_498cc9
mov     esi, dword ptr [esp+12ch+var_10c]
mov     eax, [esp+12ch+arg_0]
push    esi
push    eax
call    sub_497e50
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_498cb2
lea     eax, [esp+12ch+var_114]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+20h]
test    eax, eax
jnz     short loc_498cb2
mov     di, 0
mov     ebp, [esp+12ch+var_114]
lea     eax, [esp+12ch+sz]
push    104h
mov     ecx, [esp+130h+arg_0]
push    eax
push    ebp
push    esi
push    ecx
call    sub_498dc0
add     esp, 14h
test    eax, eax
jnz     short loc_498c8d
lea     edi, [esp+12ch+sz]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
mov     di, cx
lea     eax, [esp+12ch+sz]
push    eax
call    sub_498bb0
add     esp, 4
lea     eax, [esp+12ch+sz]
push    ebp
mov     ecx, [esp+130h+var_11c]
push    edi
push    eax
mov     edx, [ecx]
push    edx
call    sub_49a9f0
lea     ecx, [esp+13ch+var_114]
add     esp, 10h
mov     ebp, [ebx]
push    ecx
push    ebx
call    dword ptr [ebp+24h]
test    eax, eax
jz      short loc_498c46
lea     eax, [esp+12ch+var_10c]
mov     ecx, [esp+12ch+var_118]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_498c1c
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 11ch
retn
mov     eax, [esp+arg_0]
add     eax, 18h
push    eax
call    sub_49a8b0
add     esp, 4
retn
sub     esp, 108h
push    ebx
push    esi
mov     ebx, [esp+110h+arg_0]
push    edi
cmp     dword ptr [ebx+18h], 0
jnz     short loc_498d22
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
mov     esi, [esp+114h+arg_4]
test    esi, esi
jz      short loc_498d5f
mov     edi, esi
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
mov     eax, ecx
lea     edi, [esp+114h+sz]
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
lea     ecx, [esp+114h+sz]
push    ecx
call    sub_498bb0
lea     edx, [esp+118h+sz]
add     esp, 4
jmp     short loc_498d61
xor     edx, edx
mov     ecx, 0
test    edx, edx
jz      short loc_498d77
mov     edi, edx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
lea     eax, [esp+114h+var_108]
push    eax
push    ecx
push    edx
mov     ecx, [ebx+18h]
push    ecx
call    sub_49a9c0
add     esp, 10h
test    eax, eax
jnz     short loc_498d9a
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
cmp     [esp+114h+var_108], 1
mov     eax, 0
adc     eax, 0ffffffffh
and     eax, [esp+114h+var_108]
pop     edi
pop     esi
pop     ebx
add     esp, 108h
retn
sub     esp, 204h
lea     eax, [esp+204h+var_204]
push    ebx
mov     ecx, [esp+208h+arg_8]
push    esi
mov     esi, [esp+20ch+arg_0]
push    edi
push    100h
push    eax
push    ecx
push    esi
call    sub_497f30
add     esp, 10h
test    eax, eax
jnz     loc_498ec6
cmp     [esp+210h+var_204], 0
jnz     short loc_498e09
mov     eax, 0ffffffffh
pop     edi
pop     esi
pop     ebx
add     esp, 204h
retn
lea     eax, [esp+210h+var_104]
push    104h
mov     ecx, [esp+214h+arg_4]
push    eax
push    ecx
push    esi
call    sub_497dd0
lea     edi, [esp+220h+var_204]
add     esp, 10h
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
lea     edi, [esp+210h+var_104]
sub     eax, eax
lea     edx, [ecx-1]
mov     ecx, 0ffffffffh
repne scasb
not     ecx
lea     edx, [ecx+edx-1]
inc     edx
cmp     edx, [esp+210h+arg_10]
jle     short loc_498e68
mov     eax, 8004002dh
pop     edi
pop     esi
pop     ebx
add     esp, 204h
retn
lea     edi, [esp+210h+var_104]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
shr     ecx, 2
mov     esi, edi
mov     ebx, [esp+210h+arg_c]
mov     edi, ebx
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
lea     edi, [esp+210h+var_204]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     ecx, 0ffffffffh
mov     edi, ebx
sub     eax, eax
repne scasb
dec     edi
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 204h
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    eax
push    esi
call    sub_498250
mov     ecx, [esp+0ch+arg_8]
add     esp, 8
push    ecx
push    4
push    eax
push    esi
call    sub_498810
add     esp, 10h
mov     ecx, 0
cmp     eax, 1
pop     esi
adc     ecx, 0ffffffffh
and     ecx, eax
mov     eax, ecx
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    edi
push    eax
push    esi
call    sub_498570
mov     edi, [esp+10h+arg_10]
add     esp, 8
push    edi
push    6
push    eax
push    esi
call    sub_498810
add     esp, 10h
test    eax, eax
jnz     short loc_498f79
mov     ecx, [esp+8+arg_8]
mov     eax, [ecx+0ch]
mov     edx, [ecx+8]
push    eax
push    edx
mov     eax, [ecx+4]
mov     edx, [edi]
push    eax
mov     ecx, [ecx]
push    ecx
push    edx
push    esi
call    sub_498680
mov     ecx, [esp+20h+arg_c]
add     esp, 18h
mov     edx, [ecx+0ch]
mov     eax, [ecx+8]
push    edx
push    eax
mov     edx, [ecx+4]
mov     eax, [edi]
push    edx
mov     ecx, [ecx]
push    ecx
push    eax
push    esi
call    sub_498740
add     esp, 18h
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_498fb0
add     esp, 4
mov     eax, [esi+4]
push    eax
call    sub_49b520
add     esp, 4
mov     [esi+14h], eax
cmp     eax, 1
pop     esi
sbb     eax, eax
and     eax, 80040002h
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
push    ebp
mov     edi, [esi+14h]
test    edi, edi
jz      short loc_49903f
lea     eax, [esp+20h+var_8]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+20h]
test    eax, eax
jnz     short loc_49902d
mov     ebx, dword ptr [esp+20h+var_8]
push    ebx
push    esi
call    sub_497e50
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_499013
lea     eax, [esp+20h+var_10]
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+20h]
test    eax, eax
jnz     short loc_499013
mov     eax, [esp+20h+var_10]
push    eax
push    esi
call    sub_498870
lea     eax, [esp+28h+var_10]
add     esp, 8
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+24h]
test    eax, eax
jz      short loc_498ff5
push    2
push    ebx
call    sub_49bf90
lea     eax, [esp+28h+var_8]
add     esp, 8
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+24h]
test    eax, eax
jz      short loc_498fd1
mov     eax, [esi+14h]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+0ch]
mov     eax, [esi+14h]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     dword ptr [esi+14h], 0
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
push    esi
push    offset dword_4ab408
mov     esi, [esp+8+arg_4]
push    esi
call    sub_495dd0
test    eax, eax
jnz     short loc_49907c
push    offset dword_4ab478
push    esi
call    sub_495dd0
test    eax, eax
jnz     short loc_49907c
mov     eax, 80040004h
pop     esi
retn    0ch
mov     eax, [esp+4+arg_0]
mov     ecx, [esp+4+arg_8]
push    eax
mov     [ecx], eax
mov     esi, [eax]
call    dword ptr [esi+4]
xor     eax, eax
pop     esi
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+10h]
inc     eax
mov     [ecx+10h], eax
retn    4
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     edi, [esi+10h]
dec     edi
mov     [esi+10h], edi
jnz     short loc_4990e4
push    esi
call    sub_498fb0
add     esp, 4
push    esi
call    sub_498ce0
add     esp, 4
push    esi
call    sub_497640
add     esp, 4
mov     eax, [esi+4]
push    esi
push    eax
mov     esi, [eax]
call    dword ptr [esi+10h]
mov     eax, edi
pop     edi
pop     esi
retn    4
sub     esp, 12ch
push    ebx
push    esi
mov     esi, [esp+134h+arg_0]
push    edi
push    ebp
mov     eax, [esi+14h]
mov     [esp+13ch+var_128], eax
test    eax, eax
jz      loc_499202
lea     eax, [esp+13ch+var_10c]
mov     ecx, [esp+13ch+var_128]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_499202
mov     edi, [esp+13ch+arg_8]
mov     eax, dword ptr [esp+13ch+var_10c]
mov     [esp+13ch+var_12c], eax
push    eax
push    esi
call    sub_497e50
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_4991eb
lea     eax, [esp+13ch+var_114]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+20h]
test    eax, eax
jnz     loc_4991eb
mov     ebp, [esp+13ch+var_114]
push    104h
lea     eax, [esp+140h+var_104]
mov     ecx, [esp+140h+var_12c]
push    eax
push    ebp
push    ecx
push    esi
call    sub_498dc0
add     esp, 14h
test    eax, eax
jnz     short loc_4991ad
push    ebp
push    esi
call    sub_497fb0
mov     dword ptr [esp+144h+var_11c], eax
add     esp, 8
mov     [esp+13ch+var_118], edx
push    ebp
push    esi
call    sub_498050
mov     ecx, [esp+144h+var_118]
lea     edx, [esp+144h+var_104]
add     esp, 8
push    edi
push    eax
mov     eax, dword ptr [esp+144h+var_11c]
push    ecx
push    eax
push    edx
jmp     short loc_4991cc
mov     [esp+13ch+var_124], 0
mov     [esp+13ch+var_120], 0
mov     eax, [esp+13ch+var_124]
push    edi
mov     ecx, [esp+140h+var_120]
push    0
push    ecx
push    eax
push    0
push    ebp
call    [esp+154h+arg_4]
test    eax, eax
jnz     short loc_499204
lea     eax, [esp+13ch+var_114]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+24h]
test    eax, eax
jz      loc_49915d
lea     eax, [esp+13ch+var_10c]
mov     ecx, [esp+13ch+var_128]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_49912e
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 12ch
retn    0ch
mov     eax, [esp+arg_0]
sub     esp, 1ch
push    ebx
mov     ecx, [eax+14h]
mov     [esp+20h+var_1c], ecx
push    esi
push    edi
test    ecx, ecx
push    ebp
jz      loc_4992e6
lea     eax, [esp+2ch+var_8]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_4992e6
mov     esi, [esp+2ch+arg_4]
mov     edi, [esp+2ch+arg_8]
mov     eax, dword ptr [esp+2ch+var_8]
mov     ecx, [esp+2ch+arg_0]
push    eax
push    ecx
call    sub_497e50
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_4992cf
lea     eax, [esp+2ch+var_10]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+20h]
test    eax, eax
jnz     short loc_4992cf
mov     eax, [esp+2ch+var_10]
mov     ecx, [esp+2ch+arg_0]
push    eax
push    ecx
call    sub_498200
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_4992c0
lea     eax, [esp+2ch+var_18]
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+20h]
test    eax, eax
jnz     short loc_4992c0
mov     eax, dword ptr [esp+2ch+var_18]
push    edi
push    eax
call    esi
test    eax, eax
jnz     short loc_4992e8
lea     eax, [esp+2ch+var_18]
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+24h]
test    eax, eax
jz      short loc_4992a4
lea     eax, [esp+2ch+var_10]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+24h]
test    eax, eax
jz      short loc_49927c
lea     eax, [esp+2ch+var_8]
mov     ecx, [esp+2ch+var_1c]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_499255
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 1ch
retn    0ch
sub     esp, 68h
push    ebx
push    esi
mov     esi, [esp+70h+arg_0]
push    edi
push    ebp
mov     eax, [esi+14h]
mov     [esp+78h+var_64], eax
test    eax, eax
jz      loc_499480
lea     eax, [esp+78h+var_48]
mov     ecx, [esp+78h+var_64]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_499480
mov     eax, dword ptr [esp+78h+var_48]
push    eax
push    esi
call    sub_497e50
mov     dword ptr [esp+80h+var_68], eax
add     esp, 8
test    eax, eax
jz      loc_499469
lea     eax, [esp+78h+var_50]
mov     ecx, dword ptr [esp+78h+var_68]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_499469
mov     eax, [esp+78h+var_50]
push    eax
push    esi
call    sub_498200
add     esp, 8
mov     edi, eax
test    edi, edi
jz      loc_499452
lea     eax, [esp+78h+var_58]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+20h]
test    eax, eax
jnz     loc_499452
mov     eax, dword ptr [esp+78h+var_58]
push    eax
push    esi
call    sub_498520
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_49943f
lea     eax, [esp+78h+var_60]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+20h]
test    eax, eax
jnz     loc_49943f
mov     ebp, [esp+78h+var_60]
lea     eax, [esp+78h+var_20]
push    ebp
push    esi
push    eax
call    sub_498600
lea     ecx, [esp+84h+var_40]
add     esp, 0ch
mov     edx, [eax]
push    ebp
push    esi
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     [ecx+8], edx
mov     eax, [eax+0ch]
mov     [ecx+0ch], eax
lea     ecx, [esp+80h+var_10]
push    ecx
call    sub_4986c0
lea     ecx, [esp+84h+var_30]
add     esp, 0ch
mov     edx, [eax]
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     [ecx+8], edx
lea     edx, [esp+78h+var_30]
mov     eax, [eax+0ch]
mov     [ecx+0ch], eax
mov     ecx, [esp+78h+arg_8]
lea     eax, [esp+78h+var_40]
push    ecx
push    edx
push    eax
push    ebp
call    [esp+88h+arg_4]
test    eax, eax
jnz     short loc_499482
lea     eax, [esp+78h+var_60]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+24h]
test    eax, eax
jz      loc_4993b8
lea     eax, [esp+78h+var_58]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+24h]
test    eax, eax
jz      loc_49938d
lea     eax, [esp+78h+var_50]
mov     ecx, dword ptr [esp+78h+var_68]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_499362
lea     eax, [esp+78h+var_48]
mov     ecx, [esp+78h+var_64]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_499331
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 68h
retn    0ch
sub     esp, 5ch
mov     eax, [esp+5ch+arg_0]
push    ebx
push    esi
push    edi
mov     esi, [esp+68h+arg_10]
push    ebp
push    eax
mov     edi, [esi]
push    edi
call    sub_498d00
mov     [esp+74h+var_58], eax
add     esp, 8
test    eax, eax
jnz     short loc_4994c2
mov     eax, 80040006h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn    14h
mov     eax, [esp+6ch+var_58]
push    eax
push    edi
call    sub_498200
mov     [esp+74h+var_54], eax
add     esp, 8
test    eax, eax
jz      loc_4995e2
lea     eax, [esp+6ch+var_48]
mov     ecx, [esp+6ch+var_54]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_4995e2
mov     eax, dword ptr [esp+6ch+var_48]
mov     [esp+6ch+var_5c], eax
push    eax
push    edi
call    sub_498520
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_4995cb
lea     eax, [esp+6ch+var_50]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+20h]
test    eax, eax
jnz     loc_4995cb
mov     ebp, [esp+6ch+var_50]
lea     eax, [esp+6ch+var_20]
push    ebp
push    edi
push    eax
call    sub_498600
lea     ecx, [esp+78h+var_40]
add     esp, 0ch
mov     edx, [eax]
push    ebp
push    edi
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     [ecx+8], edx
mov     eax, [eax+0ch]
mov     [ecx+0ch], eax
lea     ecx, [esp+74h+var_10]
push    ecx
call    sub_4986c0
lea     ecx, [esp+78h+var_30]
add     esp, 0ch
mov     edx, [eax]
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     [ecx+8], edx
lea     edx, [esp+6ch+var_30]
mov     eax, [eax+0ch]
mov     [ecx+0ch], eax
mov     ecx, [esi+8]
lea     eax, [esp+6ch+var_40]
push    ecx
mov     ecx, [esp+70h+var_5c]
push    edx
mov     edx, [esp+74h+arg_c]
push    eax
mov     eax, [esp+78h+arg_4]
push    ebp
push    ecx
push    edx
mov     ecx, [esp+84h+arg_8]
mov     edx, [esp+84h+arg_0]
push    ecx
push    eax
mov     eax, [esp+8ch+var_58]
push    edx
push    eax
call    dword ptr [esi+4]
test    eax, eax
jnz     short loc_4995e4
lea     eax, [esp+6ch+var_50]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+24h]
test    eax, eax
jz      loc_499522
lea     eax, [esp+6ch+var_48]
mov     ecx, [esp+6ch+var_54]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_4994f3
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn    14h
sub     esp, 0ch
push    esi
mov     esi, [esp+10h+arg_0]
push    esi
call    sub_498bc0
add     esp, 4
test    eax, eax
jnz     short loc_499644
mov     eax, [esp+10h+arg_c]
mov     ecx, [esp+10h+arg_10]
lea     edx, [esp+10h+var_c]
mov     [esp+10h+var_c], esi
mov     [esp+10h+var_8], eax
push    edx
mov     eax, [esp+14h+arg_8]
push    offset sub_499490
mov     [esp+18h+var_4], ecx
push    eax
mov     ecx, [esp+1ch+arg_4]
push    ecx
call    sub_4970c0
add     esp, 10h
test    eax, eax
jnz     short loc_499644
push    esi
call    sub_498ce0
add     esp, 4
xor     eax, eax
pop     esi
add     esp, 0ch
retn    14h
mov     eax, [esp+arg_0]
sub     esp, 10h
push    ebx
push    esi
push    edi
push    ebp
mov     edi, [eax+14h]
test    edi, edi
jz      short loc_4996c2
lea     eax, [esp+20h+var_8]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+20h]
test    eax, eax
jnz     short loc_4996c2
mov     esi, [esp+20h+arg_4]
mov     ebx, dword ptr [esp+20h+var_8]
mov     eax, [esp+20h+arg_0]
push    ebx
push    eax
call    sub_497e50
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_4996b3
lea     eax, [esp+20h+var_10]
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+20h]
test    eax, eax
jnz     short loc_4996b3
cmp     esi, [esp+20h+var_10]
jz      short loc_4996d1
lea     eax, [esp+20h+var_10]
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+24h]
test    eax, eax
jz      short loc_49969d
lea     eax, [esp+20h+var_8]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+24h]
test    eax, eax
jz      short loc_499675
mov     eax, 80040001h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn    10h
mov     eax, [esp+20h+arg_c]
mov     ecx, [esp+20h+arg_8]
mov     edx, [esp+20h+arg_0]
push    eax
push    ecx
push    esi
push    ebx
push    edx
call    sub_498dc0
add     esp, 14h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn    10h
push    esi
push    edi
mov     esi, [esp+8+arg_4]
mov     edi, [esp+8+arg_0]
push    esi
push    edi
call    sub_498400
add     esp, 8
test    eax, eax
jnz     short loc_499722
mov     eax, 80040001h
pop     edi
pop     esi
retn    8
push    1
push    esi
push    edi
call    sub_4983c0
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
retn    8
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+arg_0]
push    edi
push    esi
call    sub_498400
add     esp, 8
test    eax, eax
jnz     short loc_499762
mov     eax, 80040001h
pop     edi
pop     esi
retn    14h
mov     eax, [esp+8+arg_10]
mov     ecx, [esp+8+arg_c]
mov     edx, [esp+8+arg_8]
push    eax
push    ecx
push    edx
push    edi
push    esi
call    sub_498f10
add     esp, 14h
pop     edi
pop     esi
retn    14h
sub     esp, 24h
push    ebx
push    esi
mov     esi, [esp+2ch+arg_0]
push    edi
mov     edi, [esp+30h+arg_4]
push    edi
push    esi
call    sub_498780
mov     [esp+38h+var_24], eax
add     esp, 8
lea     eax, [esp+30h+var_10]
push    edi
push    esi
push    eax
call    sub_4986c0
lea     edx, [esp+3ch+var_20]
add     esp, 0ch
mov     ecx, [eax]
mov     [edx], ecx
mov     ebx, [eax+4]
mov     [edx+4], ebx
mov     ecx, [eax+8]
mov     [edx+8], ecx
mov     eax, [eax+0ch]
mov     [edx+0ch], eax
mov     eax, [esp+30h+arg_8]
test    eax, eax
jnz     short loc_4997cf
mov     eax, edx
cmp     [esp+30h+var_24], 0
mov     ebx, [esp+30h+arg_c]
push    ebx
push    eax
jz      short loc_4997ee
mov     eax, [esp+38h+var_24]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx]
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn    10h
push    edi
push    esi
call    sub_499840
test    eax, eax
jnz     short loc_499831
mov     eax, [ebx]
mov     [esp+30h+var_24], eax
lea     eax, [esp+30h+var_24]
mov     ecx, [esp+30h+var_24]
push    eax
mov     eax, [ecx]
push    offset dword_4ab408
push    ecx
call    dword ptr [eax]
test    eax, eax
jnz     short loc_499831
mov     eax, [esp+30h+var_24]
push    eax
push    edi
push    esi
call    sub_4987d0
mov     eax, [esp+3ch+var_24]
add     esp, 0ch
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn    10h
sub     esp, 38h
push    ebx
push    esi
mov     ebx, [esp+40h+arg_0]
push    edi
mov     esi, [esp+44h+arg_4]
lea     eax, [esp+44h+var_10]
mov     edi, [ebx+8]
push    esi
push    ebx
push    eax
call    sub_498600
lea     edx, [esp+50h+var_30]
add     esp, 0ch
mov     ecx, [eax]
mov     [edx], ecx
mov     ecx, [eax+4]
push    esi
mov     [edx+4], ecx
mov     ecx, [eax+8]
push    ebx
mov     [edx+8], ecx
mov     eax, [eax+0ch]
mov     [edx+0ch], eax
lea     edx, [esp+4ch+var_10]
push    edx
call    sub_4986c0
lea     edx, [esp+50h+var_20]
add     esp, 0ch
mov     ecx, [eax]
mov     [edx], ecx
mov     ebx, [eax+4]
mov     [edx+4], ebx
mov     ecx, [eax+8]
mov     [edx+8], ecx
mov     eax, [eax+0ch]
mov     [edx+0ch], eax
mov     eax, [esp+44h+arg_8]
test    eax, eax
jnz     short loc_4998ad
mov     eax, edx
lea     ecx, [esp+44h+var_38]
mov     ebx, [edi]
push    ecx
push    eax
lea     eax, [esp+4ch+var_30]
push    eax
push    edi
call    dword ptr [ebx+0ch]
test    eax, eax
jnz     short loc_499915
lea     eax, [esp+44h+var_34]
mov     ecx, dword ptr [esp+44h+var_38]
push    eax
push    offset dword_4ab498
push    ecx
mov     eax, [ecx]
call    dword ptr [eax]
test    eax, eax
jnz     short loc_499909
mov     eax, [esp+44h+var_34]
push    esi
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+0ch]
mov     esi, eax
mov     eax, [esp+44h+var_34]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
test    esi, esi
jz      short loc_499909
mov     eax, dword ptr [esp+44h+var_38]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+8]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
add     esp, 38h
retn    10h
mov     ecx, dword ptr [esp+44h+var_38]
mov     eax, [esp+44h+arg_c]
mov     [eax], ecx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 38h
retn    10h
sub     esp, 24h
push    ebx
push    esi
mov     ebx, [esp+2ch+arg_0]
push    edi
push    ebp
push    ebx
call    sub_498f80
mov     eax, [esp+38h+arg_4]
add     esp, 4
mov     ecx, [ebx+4]
push    8000h
push    eax
push    ecx
call    sub_49c960
add     esp, 0ch
mov     ebp, eax
test    ebp, ebp
jnz     short loc_49995d
mov     [esp+34h+var_1c], 80040002h
jmp     loc_499b31
push    0
mov     eax, [ebp+0]
push    ebp
call    dword ptr [eax+0ch]
mov     [esp+34h+var_1c], eax
test    eax, eax
jnz     loc_499b31
lea     eax, [esp+34h+var_10]
push    10h
push    eax
mov     esi, [ebp+0]
push    ebp
call    dword ptr [esi+14h]
mov     [esp+34h+var_1c], eax
test    eax, eax
jnz     loc_499b31
lea     esi, [esp+34h+var_10]
mov     edi, offset amoacachewin323
mov     ecx, 10h
repe cmpsb
jz      short loc_4999ab
mov     [esp+34h+var_1c], 80040053h
jmp     loc_499b31
mov     esi, [esp+34h+arg_8]
push    ebp
push    esi
call    sub_49ac30
mov     [esp+3ch+var_1c], eax
add     esp, 8
test    eax, eax
jnz     loc_499b31
mov     eax, [ebx+4]
lea     ecx, [esp+34h+var_14]
push    eax
push    ebp
push    esi
push    ecx
call    sub_49c220
mov     [esp+44h+var_1c], eax
add     esp, 10h
test    eax, eax
jnz     loc_499b31
cmp     [esp+34h+var_14], 0
mov     eax, [ebx+14h]
jz      loc_499b17
mov     ecx, [esp+34h+var_14]
mov     edi, [eax]
push    ecx
push    eax
call    dword ptr [edi+10h]
mov     ecx, [esp+34h+var_14]
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     eax, [ebx+4]
lea     ecx, [esp+34h+var_18]
push    eax
push    ebp
push    esi
push    ecx
call    sub_49c220
mov     [esp+44h+var_1c], eax
add     esp, 10h
test    eax, eax
jnz     loc_499b31
cmp     dword ptr [esp+34h+var_18], 0
mov     eax, [esp+34h+var_14]
push    eax
push    ebx
jz      loc_499b04
call    sub_497ea0
mov     ecx, dword ptr [esp+3ch+var_18]
add     esp, 8
mov     edi, [eax]
push    ecx
push    eax
call    dword ptr [edi+10h]
mov     ecx, dword ptr [esp+34h+var_18]
xor     edi, edi
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     eax, [ebx+4]
lea     ecx, [esp+34h+var_24]
push    eax
push    ebp
push    esi
push    ecx
call    sub_49c220
mov     [esp+44h+var_1c], eax
add     esp, 10h
cmp     eax, edi
jnz     loc_499b31
mov     eax, dword ptr [esp+34h+var_18]
cmp     [esp+34h+var_24], edi
push    eax
push    ebx
jz      short loc_499af1
call    sub_498250
mov     ecx, [esp+3ch+var_24]
add     esp, 8
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+10h]
mov     ecx, [esp+34h+var_24]
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     eax, [ebx+4]
lea     ecx, [esp+34h+var_20]
push    eax
push    ebp
push    esi
push    ecx
call    sub_49c220
mov     [esp+44h+var_1c], eax
add     esp, 10h
cmp     eax, edi
jnz     short loc_499b31
mov     eax, [esp+34h+var_24]
cmp     [esp+34h+var_20], edi
push    eax
push    ebx
jz      short loc_499ade
call    sub_498570
mov     ecx, [esp+3ch+var_20]
add     esp, 8
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+10h]
mov     ecx, [esp+34h+var_20]
jmp     short loc_499a98
call    sub_498570
add     esp, 8
push    eax
mov     eax, [eax]
call    dword ptr [eax+14h]
jmp     loc_499a56
call    sub_498250
add     esp, 8
mov     edi, [eax]
push    eax
call    dword ptr [edi+14h]
jmp     loc_499a07
call    sub_497ea0
add     esp, 8
mov     edi, [eax]
push    eax
call    dword ptr [edi+14h]
jmp     loc_4999c5
push    eax
mov     esi, [eax]
call    dword ptr [esi+14h]
push    ebx
call    sub_498b30
add     esp, 4
mov     edi, [ebp+0]
push    ebp
call    dword ptr [edi+10h]
mov     [esp+34h+var_1c], eax
test    ebp, ebp
jz      short loc_499b3c
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+8]
cmp     [esp+34h+var_1c], 0
jz      short loc_499b4c
push    ebx
call    sub_498f80
add     esp, 4
mov     eax, [esp+34h+var_1c]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 24h
retn    0ch
mov     eax, [esp+arg_0]
sub     esp, 12ch
push    ebx
push    esi
push    edi
mov     esi, [eax+14h]
push    ebp
test    esi, esi
jz      loc_499c31
lea     eax, [esp+13ch+var_104]
mov     ebx, [esi]
push    eax
push    esi
call    dword ptr [ebx+20h]
test    eax, eax
jnz     loc_499c31
mov     eax, dword ptr [esp+13ch+var_104]
mov     ecx, [esp+13ch+arg_0]
push    eax
push    ecx
call    sub_497e50
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_499c1e
lea     eax, [esp+13ch+var_10c]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+20h]
test    eax, eax
jnz     short loc_499c1e
mov     eax, [esp+13ch+var_10c]
mov     ecx, [esp+13ch+arg_0]
push    eax
push    ecx
call    sub_498200
add     esp, 8
mov     edi, eax
test    edi, edi
jz      short loc_499c0f
lea     eax, [esp+13ch+var_114]
mov     ebp, [edi]
push    eax
push    edi
call    dword ptr [ebp+20h]
test    eax, eax
jnz     short loc_499c0f
mov     ebp, dword ptr [esp+13ch+var_114]
mov     eax, [esp+13ch+arg_0]
push    ebp
push    eax
call    sub_498400
add     esp, 8
test    eax, eax
jz      short loc_499c00
push    ebp
push    eax
mov     eax, [eax]
call    dword ptr [eax+34h]
lea     eax, [esp+13ch+var_114]
mov     ebp, [edi]
push    eax
push    edi
call    dword ptr [ebp+24h]
test    eax, eax
jz      short loc_499be0
lea     eax, [esp+13ch+var_10c]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+24h]
test    eax, eax
jz      short loc_499bb6
lea     eax, [esp+13ch+var_104]
mov     ebx, [esi]
push    eax
push    esi
call    dword ptr [ebx+24h]
test    eax, eax
jz      loc_499b8c
xor     esi, esi
mov     eax, [esp+13ch+lpfilename]
push    eax
call    sub_4973b0
add     esp, 4
mov     edi, eax
test    edi, edi
jnz     loc_499ea6
mov     eax, [esp+13ch+lpfilename]
push    8000h
mov     ecx, [esp+140h+arg_0]
push    eax
mov     edx, [ecx+4]
push    edx
call    sub_49c960
add     esp, 0ch
mov     esi, eax
test    esi, esi
jnz     short loc_499c7d
mov     edi, 80040002h
jmp     loc_499ea6
push    2
mov     eax, [esi]
push    esi
call    dword ptr [eax+0ch]
mov     edi, eax
test    edi, edi
jnz     loc_499ea6
push    10h
mov     eax, [esi]
push    offset amoacachewin323
push    esi
call    dword ptr [eax+18h]
mov     edi, eax
test    edi, edi
jnz     loc_499ea6
mov     eax, [esp+13ch+arg_8]
push    esi
push    eax
call    sub_49ab20
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     loc_499ea6
mov     eax, [esp+13ch+arg_0]
mov     ecx, [eax+14h]
mov     [esp+13ch+var_128], ecx
test    ecx, ecx
jz      loc_499e81
lea     eax, [esp+13ch+var_10c]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_499e81
mov     ebx, [esp+13ch+var_10c]
push    104h
lea     eax, [esp+140h+var_104]
mov     ecx, [esp+140h+arg_0]
push    eax
push    ebx
push    ecx
call    sub_497dd0
add     esp, 10h
cmp     [esp+13ch+var_104], 0
jz      loc_499e6a
push    esi
push    ebx
call    sub_49c080
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     loc_499ea6
mov     eax, [esp+13ch+arg_0]
push    ebx
push    eax
call    sub_497e50
mov     [esp+144h+var_12c], eax
add     esp, 8
test    eax, eax
jz      loc_499e59
lea     eax, [esp+13ch+var_114]
mov     ecx, [esp+13ch+var_12c]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_499e59
mov     ebx, dword ptr [esp+13ch+var_114]
push    esi
push    ebx
call    sub_49c080
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     loc_499ea6
mov     eax, [esp+13ch+arg_0]
push    ebx
push    eax
call    sub_498200
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_499e31
lea     eax, [esp+13ch+var_11c]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+20h]
test    eax, eax
jnz     loc_499e31
mov     ebp, [esp+13ch+var_11c]
push    esi
push    ebp
call    sub_49c080
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     loc_499ea6
mov     eax, [esp+13ch+arg_0]
push    ebp
push    eax
call    sub_498520
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_499e09
lea     eax, [esp+13ch+var_124]
mov     edi, [ebp+0]
push    eax
push    ebp
call    dword ptr [edi+20h]
test    eax, eax
jnz     short loc_499e09
mov     eax, dword ptr [esp+13ch+var_124]
push    esi
push    eax
call    sub_49c080
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     loc_499ea6
lea     eax, [esp+13ch+var_124]
mov     edi, [ebp+0]
push    eax
push    ebp
call    dword ptr [edi+24h]
test    eax, eax
jz      short loc_499de1
push    esi
push    0
call    sub_49c080
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     loc_499ea6
lea     eax, [esp+13ch+var_11c]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+24h]
test    eax, eax
jz      loc_499da2
push    esi
push    0
call    sub_49c080
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_499ea6
lea     eax, [esp+13ch+var_114]
mov     ecx, [esp+13ch+var_12c]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_499d5c
push    esi
push    0
call    sub_49c080
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_499ea6
lea     eax, [esp+13ch+var_10c]
mov     ecx, [esp+13ch+var_128]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_499cea
push    esi
push    0
call    sub_49c080
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_499ea6
push    esi
mov     eax, [esi]
call    dword ptr [eax+28h]
mov     edi, eax
test    edi, edi
jnz     short loc_499ea6
push    esi
mov     eax, [esi]
call    dword ptr [eax+10h]
mov     edi, eax
test    esi, esi
jz      short loc_499eb0
push    esi
mov     eax, [esi]
call    dword ptr [eax+8]
test    edi, edi
jz      short loc_499ec4
mov     eax, [esp+13ch+lpfilename]
push    eax
call    sub_497370
add     esp, 4
mov     eax, edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 12ch
retn    0ch
mov     eax, [esp+arg_0]
push    eax
call    sub_498bc0
add     esp, 4
retn    4
sub     esp, 110h
push    ebx
push    esi
mov     esi, [esp+118h+arg_0]
push    edi
cmp     dword ptr [esi+18h], 0
jnz     short loc_499f10
mov     eax, 80040014h
jmp     loc_49a0a1
mov     ebx, [esp+11ch+arg_4]
test    ebx, ebx
jz      loc_499ff7
push    ebx
push    esi
call    sub_498d00
mov     [esp+124h+var_110], eax
add     esp, 8
test    eax, eax
jz      loc_49a006
push    eax
push    esi
call    sub_497fb0
mov     [esp+124h+var_108], eax
add     esp, 8
mov     eax, edx
cmp     [esp+11ch+arg_c], eax
jg      short loc_499f65
jnz     loc_49a006
mov     eax, [esp+11ch+arg_8]
cmp     eax, [esp+11ch+var_108]
jbe     loc_49a006
mov     eax, [esp+11ch+var_110]
push    eax
push    esi
call    sub_498870
lea     eax, [esp+124h+var_100]
add     esp, 8
push    eax
push    0
push    ebx
call    sub_498960
lea     eax, [esp+128h+var_100]
mov     ecx, [esp+128h+var_110]
add     esp, 0ch
push    0
push    eax
push    ecx
push    esi
call    sub_497f70
mov     edx, [esp+12ch+arg_8]
mov     ecx, [esp+12ch+arg_c]
mov     eax, [esp+12ch+var_110]
add     esp, 10h
push    ecx
push    edx
push    eax
push    esi
call    sub_498010
mov     ecx, [esp+12ch+arg_10]
mov     edx, [esp+12ch+var_110]
add     esp, 10h
push    ecx
push    edx
push    esi
call    sub_4980a0
add     esp, 0ch
mov     ecx, 0
test    ebx, ebx
jz      short loc_499fe2
mov     edi, ebx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
mov     eax, [esp+11ch+var_110]
push    eax
push    ecx
push    ebx
mov     ecx, [esi+18h]
push    ecx
call    sub_49a9f0
add     esp, 10h
jmp     short loc_49a006
push    0
push    esi
call    sub_498d00
mov     [esp+124h+var_110], eax
add     esp, 8
cmp     [esp+11ch+var_110], 0
jnz     short loc_49a082
lea     eax, [esp+11ch+var_100]
lea     ecx, [esp+11ch+var_10c]
push    eax
push    ecx
push    ebx
push    esi
call    sub_498a40
add     esp, 10h
test    eax, eax
jnz     short loc_49a0a1
lea     eax, [esp+11ch+var_110]
mov     ecx, [esp+11ch+arg_10]
mov     edx, [esp+11ch+arg_8]
push    eax
mov     eax, [esp+120h+arg_c]
push    ecx
lea     ecx, [esp+124h+var_100]
push    eax
push    edx
push    ecx
mov     edx, [esp+130h+var_10c]
push    edx
push    esi
call    sub_498b40
add     esp, 1ch
test    eax, eax
jnz     short loc_49a0a1
mov     ecx, 0
test    ebx, ebx
jz      short loc_49a06f
mov     edi, ebx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
mov     eax, [esp+11ch+var_110]
push    eax
push    ecx
push    ebx
mov     ecx, [esi+18h]
push    ecx
call    sub_49a9f0
add     esp, 10h
mov     eax, [esp+11ch+var_110]
push    1
push    eax
push    esi
call    sub_4981c0
mov     ecx, [esp+128h+var_110]
mov     eax, [esp+128h+arg_14]
add     esp, 0ch
mov     [eax], ecx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 110h
retn    18h
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
push    ebp
cmp     dword ptr [esi+18h], 0
jnz     short loc_49a0d0
mov     eax, 80040014h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn    8
cmp     [esp+20h+arg_4], 0
jz      short loc_49a14a
mov     eax, [esp+20h+arg_4]
push    eax
push    esi
call    sub_498d00
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_49a14a
mov     edi, [esi+14h]
test    edi, edi
jz      short loc_49a14a
lea     eax, [esp+20h+var_8]
mov     ebp, [edi]
push    eax
push    edi
call    dword ptr [ebp+20h]
test    eax, eax
jnz     short loc_49a14a
mov     eax, dword ptr [esp+20h+var_8]
push    eax
push    esi
call    sub_497e50
add     esp, 8
mov     ebp, eax
test    ebp, ebp
jz      short loc_49a13b
lea     eax, [esp+20h+var_10]
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+20h]
test    eax, eax
jnz     short loc_49a13b
cmp     ebx, [esp+20h+var_10]
jz      short loc_49a159
lea     eax, [esp+20h+var_10]
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+24h]
test    eax, eax
jz      short loc_49a125
lea     eax, [esp+20h+var_8]
mov     ebp, [edi]
push    eax
push    edi
call    dword ptr [ebp+24h]
test    eax, eax
jz      short loc_49a101
mov     eax, 80040006h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn    8
push    ebx
push    esi
call    sub_498870
add     esp, 8
mov     eax, [ebp+0]
push    ebx
push    ebp
call    dword ptr [eax+18h]
cmp     [esp+20h+arg_4], 0
mov     ecx, 0
jz      short loc_49a186
mov     edi, [esp+20h+arg_4]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
mov     eax, [esp+20h+arg_4]
push    0
push    ecx
push    eax
mov     ecx, [esi+18h]
push    ecx
call    sub_49a9f0
add     esp, 10h
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn    8
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_c]
push    ebp
mov     esi, [esp+10h+arg_0]
push    edi
push    eax
push    esi
call    sub_498ed0
mov     ebp, [esp+1ch+arg_8]
add     esp, 0ch
mov     ebx, eax
test    ebp, ebp
jz      short loc_49a1ec
mov     eax, [edi]
push    eax
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+48h]
push    ebp
mov     ecx, [edi]
push    ecx
push    esi
call    sub_498450
add     esp, 0ch
mov     eax, ebx
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    10h
sub     esp, 13ch
push    ebx
push    esi
mov     esi, [esp+144h+arg_0]
push    edi
push    ebp
push    esi
call    sub_498ce0
add     esp, 4
mov     eax, [esi+14h]
test    eax, eax
mov     [esp+14ch+var_124], eax
jz      loc_49a477
lea     eax, [esp+14ch+var_10c]
mov     ecx, [esp+14ch+var_124]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_49a477
mov     eax, dword ptr [esp+14ch+var_10c]
mov     [esp+14ch+var_128], eax
push    eax
push    esi
call    sub_497e50
mov     dword ptr [esp+154h+var_12c], eax
add     esp, 8
test    eax, eax
jz      loc_49a460
lea     eax, [esp+14ch+var_114]
mov     ecx, dword ptr [esp+14ch+var_12c]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_49a460
mov     edi, [esp+14ch+var_114]
push    edi
push    esi
call    sub_498170
add     esp, 8
test    al, al
jnz     short loc_49a2a1
push    edi
push    esi
call    sub_498870
mov     eax, dword ptr [esp+154h+var_12c]
add     esp, 8
push    edi
mov     ebx, [eax]
push    eax
call    dword ptr [ebx+18h]
jmp     loc_49a449
lea     eax, [esp+14ch+var_104]
push    104h
mov     ecx, [esp+150h+var_128]
push    eax
push    edi
push    ecx
push    esi
call    sub_498dc0
add     esp, 14h
cmp     eax, 1
sbb     al, al
push    edi
neg     al
mov     byte ptr [esp+150h+var_13c+3], al
push    esi
call    sub_498050
add     esp, 8
mov     ebx, eax
push    edi
push    esi
call    sub_4980e0
add     esp, 8
test    al, al
jnz     short loc_49a33a
cmp     byte ptr [esp+14ch+var_13c+3], 0
jz      short loc_49a32e
lea     eax, [esp+14ch+var_130]
lea     ecx, [esp+14ch+var_104]
mov     edx, [esp+14ch+arg_4]
push    eax
push    ebx
push    ecx
push    edx
call    sub_497350
add     esp, 10h
test    eax, eax
jnz     loc_49a479
xor     ebx, ebx
cmp     [esp+14ch+var_130], ebx
jle     short loc_49a32e
lea     eax, [esp+14ch+var_120]
mov     ebp, [esi]
push    eax
push    0
push    edi
push    esi
call    dword ptr [ebp+44h]
test    eax, eax
jnz     loc_49a479
inc     ebx
cmp     ebx, [esp+14ch+var_130]
jl      short loc_49a311
push    1
push    edi
push    esi
call    sub_498130
add     esp, 0ch
mov     [esp+14ch+var_134], 0
push    edi
push    esi
call    sub_498200
add     esp, 8
mov     edi, eax
test    edi, edi
jz      loc_49a449
lea     eax, [esp+14ch+var_11c]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+20h]
test    eax, eax
jnz     loc_49a449
cmp     byte ptr [esp+14ch+var_13c+3], 0
mov     ebx, dword ptr [esp+14ch+var_11c]
jz      short loc_49a3d9
push    ebx
push    esi
call    sub_498400
mov     [esp+154h+var_138], eax
add     esp, 8
test    eax, eax
jnz     short loc_49a3d9
lea     eax, [esp+14ch+var_138]
mov     ecx, [esp+14ch+var_134]
lea     edx, [esp+14ch+var_104]
push    eax
mov     eax, [esp+150h+arg_4]
push    ecx
push    edx
push    eax
call    sub_49b1c0
add     esp, 10h
test    eax, eax
jnz     loc_49a479
mov     eax, [esp+14ch+var_138]
push    ebx
push    eax
mov     ebp, [eax]
call    dword ptr [ebp+48h]
mov     ecx, [esp+14ch+var_138]
push    ecx
push    ebx
push    esi
call    sub_498450
add     esp, 0ch
test    eax, eax
jnz     loc_49a479
mov     eax, [esp+14ch+var_138]
push    eax
mov     ebp, [eax]
call    dword ptr [ebp+8]
push    ebx
push    esi
call    sub_498520
add     esp, 8
mov     ebp, eax
push    ebx
push    esi
call    sub_498370
add     esp, 8
test    al, al
jz      short loc_49a40c
push    ebx
push    esi
call    sub_4982e0
add     esp, 8
test    al, al
jnz     short loc_49a40c
test    ebp, ebp
jz      short loc_49a422
push    ebp
mov     eax, [ebp+0]
call    dword ptr [eax+0ch]
test    ebp, ebp
jz      short loc_49a422
push    0
mov     eax, [ebp+0]
push    ebp
call    dword ptr [eax+20h]
test    eax, eax
mov     eax, 0
jz      short loc_49a427
mov     eax, 1
push    eax
push    ebx
push    esi
call    sub_4984e0
lea     eax, [esp+158h+var_11c]
inc     [esp+158h+var_134]
add     esp, 0ch
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+24h]
test    eax, eax
jz      loc_49a369
lea     eax, [esp+14ch+var_114]
mov     ecx, dword ptr [esp+14ch+var_12c]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_49a275
lea     eax, [esp+14ch+var_10c]
mov     ecx, [esp+14ch+var_124]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_49a240
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 13ch
retn    8
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
mov     edi, [esp+10h+arg_4]
mov     ebx, [esi+8]
test    edi, edi
jnz     short loc_49a4b0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    0ch
push    edi
push    esi
call    sub_498490
add     esp, 8
test    al, al
jnz     short loc_49a4c9
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    0ch
lea     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+arg_8]
push    eax
push    offset dword_4ab488
push    ecx
push    ebx
mov     ebx, [ebx]
call    dword ptr [ebx+0ch]
test    eax, eax
jnz     short loc_49a52b
mov     eax, dword ptr [esp+10h+var_4]
push    edi
mov     ebx, [eax]
push    esi
push    eax
call    dword ptr [ebx+0ch]
mov     ebx, eax
mov     eax, dword ptr [esp+10h+var_4]
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
test    ebx, ebx
jz      short loc_49a51d
push    edi
push    esi
call    sub_498520
add     esp, 8
test    eax, eax
jz      short loc_49a529
push    eax
mov     eax, [eax]
call    dword ptr [eax+0ch]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    0ch
push    1
push    edi
push    esi
call    sub_498330
add     esp, 0ch
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    0ch
sub     esp, 50h
push    ebx
push    esi
mov     esi, [esp+58h+arg_0]
push    edi
push    ebp
mov     eax, [esi+14h]
mov     [esp+60h+var_44], eax
test    eax, eax
jz      loc_49a6c2
lea     eax, [esp+60h+var_28]
mov     ecx, [esp+60h+var_44]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_49a6c2
mov     eax, dword ptr [esp+60h+var_28]
push    eax
push    esi
call    sub_497e50
mov     dword ptr [esp+68h+var_48], eax
add     esp, 8
test    eax, eax
jz      loc_49a6ab
lea     eax, [esp+60h+var_30]
mov     ecx, dword ptr [esp+60h+var_48]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+20h]
test    eax, eax
jnz     loc_49a6ab
mov     eax, [esp+60h+var_30]
push    eax
push    esi
call    sub_498200
add     esp, 8
mov     edi, eax
test    edi, edi
jz      loc_49a694
lea     eax, [esp+60h+var_38]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+20h]
test    eax, eax
jnz     loc_49a694
mov     ebx, dword ptr [esp+60h+var_38]
push    ebx
push    esi
call    sub_498400
mov     [esp+68h+var_4c], eax
add     esp, 8
push    ebx
push    esi
call    sub_498520
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      loc_49a681
lea     eax, [esp+60h+var_40]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+20h]
test    eax, eax
jnz     short loc_49a681
mov     ebp, [esp+60h+var_40]
lea     eax, [esp+60h+var_10]
push    ebp
push    esi
push    eax
call    sub_4986c0
lea     ecx, [esp+6ch+var_20]
add     esp, 0ch
mov     edx, [eax]
push    offset dword_4ab4d8
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     [ecx+8], edx
mov     eax, [eax+0ch]
mov     [ecx+0ch], eax
lea     ecx, [esp+64h+var_20]
push    ecx
call    sub_495dd0
test    eax, eax
jz      short loc_49a672
lea     eax, [esp+60h+var_50]
push    offset axtraloadcontro
push    4
push    eax
push    3
push    ebp
mov     ebp, [ebp+0]
call    dword ptr [ebp+14h]
test    eax, eax
jz      short loc_49a663
mov     [esp+60h+var_50], 0
mov     eax, [esp+60h+var_50]
mov     ecx, [esp+60h+var_4c]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+50h]
lea     eax, [esp+60h+var_40]
mov     ebp, [ebx]
push    eax
push    ebx
call    dword ptr [ebp+24h]
test    eax, eax
jz      short loc_49a602
lea     eax, [esp+60h+var_38]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+24h]
test    eax, eax
jz      loc_49a5cd
lea     eax, [esp+60h+var_30]
mov     ecx, dword ptr [esp+60h+var_48]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_49a5a2
lea     eax, [esp+60h+var_28]
mov     ecx, [esp+60h+var_44]
push    eax
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+24h]
test    eax, eax
jz      loc_49a571
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 50h
retn    4
push    ebx
push    edi
mov     ebx, [esp+8+arg_0]
push    5ch
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+0ch]
mov     edi, eax
test    edi, edi
jz      short loc_49a72b
mov     eax, [esp+8+arg_4]
mov     ecx, [esp+8+arg_8]
mov     dword ptr [edi], offset off_4aba20
push    edi
mov     [edi+4], ebx
mov     [edi+8], eax
mov     [edi+0ch], ecx
mov     dword ptr [edi+10h], 0
mov     dword ptr [edi+14h], 0
mov     dword ptr [edi+18h], 0
mov     ebx, [edi]
call    dword ptr [ebx+4]
push    edi
call    sub_498f80
add     esp, 4
test    eax, eax
jz      short loc_49a72b
push    edi
mov     eax, [edi]
xor     edi, edi
call    dword ptr [eax+8]
mov     eax, edi
pop     edi
pop     ebx
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
mov     si, [esp+0ch+arg_8]
mov     eax, [eax]
movsx   ebx, si
lea     ecx, [ebx+0bh]
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+0ch]
test    eax, eax
jz      short loc_49a76f
lea     edi, [eax+0ah]
mov     ecx, ebx
mov     dword ptr [eax+4], 0
shr     ecx, 2
mov     [eax+8], si
mov     esi, [esp+0ch+arg_4]
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+arg_0]
push    edi
push    ebp
lea     eax, [ebx+4]
mov     bp, [esp+14h+arg_8]
mov     [esp+14h+var_4], eax
cmp     bp, 104h
jle     short loc_49a7a8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     edx, [esp+14h+arg_4]
xor     eax, eax
test    bp, bp
lea     esi, [ebp-1]
jz      short loc_49a7cf
xor     ecx, ecx
mov     edi, eax
shl     edi, 5
mov     cl, [edx]
add     edi, eax
inc     edx
lea     eax, [ecx+edi]
mov     cx, si
dec     si
test    cx, cx
jnz     short loc_49a7b6
mov     ecx, 47h
sub     edx, edx
div     ecx
mov     eax, [esp+14h+var_4]
lea     ecx, [eax+edx*4]
mov     [esp+14h+var_4], ecx
mov     eax, [ecx]
test    eax, eax
jz      short loc_49a811
cmp     [eax+8], bp
jnz     short loc_49a80b
lea     esi, [eax+0ah]
mov     edi, [esp+14h+arg_4]
movsx   edx, bp
mov     ecx, edx
shr     ecx, 2
repe cmpsd
jnz     short loc_49a809
mov     ecx, edx
and     ecx, 3
repe cmpsb
jz      short loc_49a863
mov     eax, [eax]
test    eax, eax
jnz     short loc_49a7e9
mov     eax, [esp+14h+arg_4]
push    ebp
push    eax
push    ebx
call    sub_49a730
add     esp, 0ch
mov     esi, eax
test    esi, esi
jnz     short loc_49a830
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+14h+var_4]
mov     ecx, [eax]
mov     [esi], ecx
mov     [eax], esi
mov     ecx, [ebx+120h]
test    ecx, ecx
jz      short loc_49a861
mov     eax, [ebx]
push    ecx
push    eax
mov     ebp, [eax]
call    dword ptr [ebp+10h]
mov     dword ptr [ebx+120h], 0
mov     dword ptr [ebx+124h], 0
mov     eax, esi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    esi
push    100h
push    1000h
call    sub_496370
mov     esi, eax
test    esi, esi
jnz     short loc_49a88d
mov     eax, 80040002h
pop     esi
retn
push    128h
mov     eax, [esi]
push    esi
call    dword ptr [eax+0ch]
test    eax, eax
jnz     short loc_49a8a3
mov     eax, 80040002h
pop     esi
retn
mov     ecx, [esp+4+arg_0]
mov     [eax], esi
pop     esi
mov     [ecx], eax
xor     eax, eax
retn
sub     esp, 4
cmp     [esp+4+arg_0], 0
push    ebx
push    esi
push    edi
push    ebp
mov     edi, 0
jz      short loc_49a8c9
mov     eax, [esp+14h+arg_0]
mov     edi, [eax]
mov     esi, 0
test    edi, edi
jz      short loc_49a8d4
mov     esi, [edi]
test    edi, edi
jnz     short loc_49a8e2
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     [esp+14h+var_4], 47h
lea     ebx, [edi+4]
mov     eax, [ebx]
test    eax, eax
jz      short loc_49a902
mov     ebp, [eax]
push    eax
push    esi
mov     eax, [esi]
call    dword ptr [eax+10h]
mov     eax, ebp
test    ebp, ebp
jnz     short loc_49a8f3
add     ebx, 4
dec     [esp+14h+var_4]
jnz     short loc_49a8ed
mov     eax, [edi+120h]
mov     ebx, [esi]
push    eax
push    esi
call    dword ptr [ebx+10h]
push    edi
mov     ebx, [esi]
push    esi
call    dword ptr [ebx+10h]
push    esi
mov     ebx, [esi]
call    dword ptr [ebx+8]
mov     eax, [esp+14h+arg_0]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 0
xor     eax, eax
add     esp, 4
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
mov     esi, [esp+0ch+arg_0]
push    ebx
mov     eax, [esi]
push    eax
call    sub_495e10
test    al, al
jz      short loc_49a95e
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
retn
mov     edi, ebx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
push    ecx
push    ebx
push    esi
call    sub_49a780
add     esp, 0ch
test    eax, eax
jz      short loc_49a981
add     eax, 0ah
pop     edi
pop     esi
pop     ebx
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_8]
push    edi
mov     edx, [esp+4+arg_4]
push    eax
mov     edi, edx
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
push    ecx
push    edx
mov     ecx, [esp+10h+arg_0]
push    ecx
call    sub_49a9c0
add     esp, 10h
pop     edi
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
push    eax
push    ecx
push    edx
call    sub_49a780
add     esp, 0ch
test    eax, eax
jz      short loc_49a9ec
mov     ecx, [esp+arg_c]
test    ecx, ecx
jz      short loc_49a9e8
mov     edx, [eax+4]
mov     [ecx], edx
add     eax, 0ah
retn
xor     eax, eax
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
push    eax
push    ecx
push    edx
call    sub_49a780
add     esp, 0ch
test    eax, eax
jz      short loc_49aa16
mov     ecx, [esp+arg_c]
mov     [eax+4], ecx
add     eax, 0ah
retn
xor     eax, eax
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
test    esi, esi
jnz     short loc_49aa33
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
cmp     dword ptr [esi+120h], 0
jnz     loc_49aac2
lea     edi, [esi+4]
mov     ecx, 47h
mov     dword ptr [esi+124h], 0
mov     edx, edi
mov     eax, [edx]
test    eax, eax
jz      short loc_49aa73
mov     ebx, [eax]
mov     eax, [eax+4]
cmp     [esi+124h], eax
jge     short loc_49aa6d
mov     [esi+124h], eax
mov     eax, ebx
test    ebx, ebx
jnz     short loc_49aa5a
add     edx, 4
dec     ecx
jnz     short loc_49aa54
mov     eax, [esi+124h]
inc     eax
mov     [esi+124h], eax
shl     eax, 2
mov     ecx, [esi]
mov     ebx, [ecx]
push    eax
push    ecx
call    dword ptr [ebx+0ch]
mov     [esi+120h], eax
test    eax, eax
jz      short loc_49aac2
mov     edx, 47h
mov     eax, [edi]
test    eax, eax
jz      short loc_49aabc
mov     ecx, [eax]
mov     ebx, [eax+4]
mov     ebp, [esi+120h]
test    ecx, ecx
mov     [ebp+ebx*4+0], eax
mov     eax, ecx
jnz     short loc_49aaa7
add     edi, 4
dec     edx
jnz     short loc_49aaa1
mov     eax, [esi+120h]
test    eax, eax
jz      short loc_49aae7
mov     edi, [esp+10h+arg_4]
test    edi, edi
jl      short loc_49ab0c
cmp     [esi+124h], edi
jle     short loc_49ab0c
mov     eax, [eax+edi*4]
pop     ebp
add     eax, 0ah
pop     edi
pop     esi
pop     ebx
retn
xor     ecx, ecx
add     esi, 4
mov     edi, [esp+10h+arg_4]
mov     eax, [esi]
test    eax, eax
jz      short loc_49ab03
mov     edx, [eax]
cmp     [eax+4], edi
jz      short loc_49ab13
mov     eax, edx
test    edx, edx
jnz     short loc_49aaf6
add     esi, 4
inc     ecx
cmp     ecx, 47h
jl      short loc_49aaf0
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
add     eax, 0ah
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
push    ebx
push    esi
mov     esi, [esp+18h+arg_0]
push    edi
push    ebp
test    esi, esi
jnz     short loc_49ab3c
mov     eax, 80040014h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
mov     eax, [esi]
mov     ecx, [esi+120h]
push    ecx
lea     edi, [esi+4]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+10h]
mov     ecx, edi
mov     eax, 47h
mov     dword ptr [esi+120h], 0
mov     dword ptr [esi+124h], 0
mov     ebx, [ecx]
test    ebx, ebx
jz      short loc_49ab87
mov     ebp, [ebx]
mov     edx, [esi+124h]
inc     edx
test    ebp, ebp
mov     [esi+124h], edx
mov     [ebx+4], edx
mov     ebx, ebp
jnz     short loc_49ab6f
add     ecx, 4
dec     eax
jnz     short loc_49ab69
mov     eax, [esi+124h]
push    4
mov     esi, [esp+24h+arg_4]
mov     [esp+24h+var_4], eax
lea     eax, [esp+24h+var_4]
mov     ebx, [esi]
push    eax
push    esi
call    dword ptr [ebx+18h]
test    eax, eax
jnz     short loc_49ac24
mov     [esp+20h+var_c], 0
mov     [esp+20h+var_8], edi
mov     eax, [esp+20h+var_8]
mov     ebp, [eax]
test    ebp, ebp
jz      short loc_49ac12
mov     ebx, [ebp+0]
push    4
lea     eax, [ebp+4]
mov     edi, [esi]
push    eax
push    esi
call    dword ptr [edi+18h]
test    eax, eax
jnz     short loc_49ac24
add     ebp, 0ah
mov     ecx, 0ffffffffh
mov     edi, ebp
sub     eax, eax
repne scasb
not     ecx
mov     [esp+20h+var_e], cx
push    2
lea     ecx, [esp+24h+var_e]
mov     eax, [esi]
push    ecx
push    esi
call    dword ptr [eax+18h]
test    eax, eax
jnz     short loc_49ac24
movsx   eax, [esp+20h+var_e]
push    eax
push    ebp
push    esi
mov     ebp, [esi]
call    dword ptr [ebp+18h]
test    eax, eax
jnz     short loc_49ac24
mov     ebp, ebx
test    ebx, ebx
jnz     short loc_49abc2
add     [esp+20h+var_8], 4
inc     [esp+20h+var_c]
cmp     [esp+20h+var_c], 47h
jl      short loc_49abb8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn
sub     esp, 110h
mov     eax, 47h
push    ebx
push    esi
mov     esi, [esp+118h+arg_0]
push    edi
lea     ecx, [esi+4]
mov     edx, [ecx]
test    edx, edx
jz      short loc_49ac5b
xor     ebx, ebx
mov     edi, [edx]
mov     [edx+4], ebx
test    edi, edi
mov     edx, edi
jnz     short loc_49ac50
add     ecx, 4
dec     eax
jnz     short loc_49ac48
lea     eax, [esp+11ch+var_10e+2]
push    4
mov     edi, [esp+120h+arg_4]
push    eax
push    edi
mov     ebx, [edi]
call    dword ptr [ebx+14h]
test    eax, eax
jnz     short loc_49ace8
mov     eax, [esp+11ch+var_10e+2]
dec     [esp+11ch+var_10e+2]
test    eax, eax
jz      short loc_49ace6
lea     eax, [esp+11ch+var_108]
push    4
push    eax
mov     ebx, [edi]
push    edi
call    dword ptr [ebx+14h]
test    eax, eax
jnz     short loc_49ace8
lea     eax, [esp+11ch+var_10e]
push    2
push    eax
mov     ebx, [edi]
push    edi
call    dword ptr [ebx+14h]
test    eax, eax
jnz     short loc_49ace8
lea     ecx, [esp+11ch+var_104]
mov     ebx, [edi]
movsx   eax, word ptr [esp+11ch+var_10e]
push    eax
push    ecx
push    edi
call    dword ptr [ebx+14h]
test    eax, eax
jnz     short loc_49ace8
mov     eax, [esp+11ch+var_10e]
lea     ecx, [esp+11ch+var_104]
push    eax
push    ecx
push    esi
call    sub_49a780
add     esp, 0ch
test    eax, eax
jz      short loc_49acf2
mov     ecx, [esp+11ch+var_108]
mov     [eax+4], ecx
mov     eax, [esp+11ch+var_10e+2]
dec     [esp+11ch+var_10e+2]
test    eax, eax
jnz     short loc_49ac85
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 110h
retn
mov     eax, 80040002h
pop     edi
pop     esi
pop     ebx
add     esp, 110h
retn
mov     eax, 80040004h
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+4]
inc     eax
mov     [ecx+4], eax
retn    4
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, [edi+4]
dec     esi
mov     [edi+4], esi
jnz     short loc_49ad8f
mov     dword ptr [edi+34h], 0
push    edi
call    sub_49ae70
test    eax, eax
jnz     short loc_49ad56
push    edi
call    sub_49ae90
lea     eax, [edi+10h]
cmp     dword ptr [eax], 0
jz      short loc_49ad6b
push    eax
mov     eax, [edi+0ch]
push    eax
call    sub_49caf0
add     esp, 8
push    edi
call    sub_497640
add     esp, 4
mov     eax, [edi+0ch]
mov     ecx, [edi+30h]
mov     eax, [eax]
push    ecx
push    eax
mov     eax, [eax]
call    dword ptr [eax+10h]
mov     ecx, [edi+0ch]
push    edi
mov     eax, [ecx]
push    eax
mov     edi, [eax]
call    dword ptr [edi+10h]
mov     eax, esi
pop     edi
pop     esi
retn    4
push    esi
push    edi
mov     edi, [esp+8+arg_0]
push    edi
mov     esi, [edi+0ch]
call    sub_49ae70
test    eax, eax
jnz     short loc_49adba
xor     eax, eax
pop     edi
pop     esi
retn    4
mov     eax, [edi+10h]
test    eax, eax
jz      loc_49ae69
push    eax
push    esi
call    sub_49cb30
add     esp, 8
test    eax, eax
jnz     loc_49ae6b
lea     eax, [edi+14h]
mov     ecx, [edi+10h]
push    eax
push    offset adllgetclassobj
push    ecx
push    esi
call    sub_49cb70
add     esp, 10h
test    eax, eax
jnz     short loc_49ae6b
lea     eax, [edi+18h]
mov     ecx, [edi+10h]
push    eax
push    offset adllgetinterfac
push    ecx
push    esi
call    sub_49cb70
add     esp, 10h
test    eax, eax
jnz     short loc_49ae6b
lea     eax, [edi+1ch]
mov     ecx, [edi+10h]
push    eax
push    offset adllgetclassfor
push    ecx
push    esi
call    sub_49cb70
add     esp, 10h
test    eax, eax
jnz     short loc_49ae6b
lea     eax, [edi+20h]
mov     ecx, [edi+10h]
push    eax
push    offset adllcanunloadno
push    ecx
push    esi
call    sub_49cb70
add     esp, 10h
test    eax, eax
jnz     short loc_49ae6b
lea     eax, [edi+24h]
mov     ecx, [edi+10h]
push    eax
push    offset adllgetclassinf
push    ecx
push    esi
call    sub_49cb70
add     esp, 10h
mov     ecx, eax
mov     eax, 0
cmp     ecx, 1
adc     eax, 0ffffffffh
pop     edi
and     eax, ecx
pop     esi
retn    4
xor     eax, eax
pop     edi
pop     esi
retn    4
mov     eax, [esp+arg_0]
mov     ecx, [eax+0ch]
mov     eax, [eax+10h]
test    eax, eax
jz      short loc_49ae8b
push    eax
push    ecx
call    sub_49cb50
add     esp, 8
retn    4
xor     eax, eax
retn    4
push    esi
push    edi
mov     esi, [esp+8+arg_0]
push    esi
mov     edi, [esi+0ch]
call    sub_49ae70
test    eax, eax
jz      short loc_49aeaa
xor     eax, eax
pop     edi
pop     esi
retn    4
mov     eax, [esi+10h]
test    eax, eax
jz      short loc_49aec0
push    eax
push    edi
call    sub_49cbc0
add     esp, 8
pop     edi
pop     esi
retn    4
xor     eax, eax
pop     edi
pop     esi
retn    4
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+28h], 0
jle     short loc_49aee4
mov     eax, 80040003h
pop     esi
retn    4
push    esi
call    sub_49ae70
test    eax, eax
jz      short loc_49aef4
xor     eax, eax
pop     esi
retn    4
test    byte ptr [esi+34h], 2
jz      short loc_49af03
mov     eax, 80040003h
pop     esi
retn    4
mov     eax, [esi+20h]
test    eax, eax
jz      short loc_49af10
call    eax
pop     esi
retn    4
mov     eax, 80040003h
pop     esi
retn    4
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_49ada0
test    eax, eax
jnz     short loc_49af55
mov     ecx, [esi+1ch]
test    ecx, ecx
jz      short loc_49af50
mov     eax, [esp+4+arg_10]
mov     edx, [esp+4+arg_c]
mov     esi, [esp+4+arg_8]
push    eax
mov     eax, [esp+8+arg_4]
push    edx
push    esi
push    eax
call    ecx
pop     esi
retn    14h
mov     eax, 8004000ah
pop     esi
retn    14h
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_49ada0
test    eax, eax
jnz     short loc_49af90
mov     ecx, [esi+14h]
test    ecx, ecx
jz      short loc_49af8b
mov     eax, [esp+4+arg_c]
mov     edx, [esp+4+arg_8]
mov     esi, [esp+4+arg_4]
push    eax
push    edx
push    esi
call    ecx
pop     esi
retn    10h
mov     eax, 8004000ah
pop     esi
retn    10h
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_49ada0
test    eax, eax
jnz     short loc_49afd5
mov     ecx, [esi+18h]
test    ecx, ecx
jz      short loc_49afd0
mov     eax, [esp+4+arg_10]
mov     edx, [esp+4+arg_c]
mov     esi, [esp+4+arg_8]
push    eax
mov     eax, [esp+8+arg_4]
push    edx
push    esi
push    eax
call    ecx
pop     esi
retn    14h
mov     eax, 8004000ah
pop     esi
retn    14h
sub     esp, 4
push    ebx
push    esi
mov     ebx, [esp+0ch+arg_0]
push    edi
push    ebp
mov     edi, [ebx+0ch]
lea     esi, [ebx+30h]
cmp     dword ptr [esi], 0
jnz     short loc_49b01e
lea     eax, [esp+14h+var_4]
mov     ebp, [esp+14h+arg_4]
push    eax
push    esi
push    offset axtraclassinfo
push    ebp
call    sub_49be90
add     esp, 10h
test    eax, eax
jnz     short loc_49b032
push    offset axtraclassinfo
mov     eax, [ebp+0]
push    ebp
call    dword ptr [eax+1ch]
mov     ecx, [esi]
mov     eax, [esp+14h+arg_8]
mov     [eax], ecx
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    0ch
push    ebx
call    sub_49ada0
test    eax, eax
jnz     short loc_49b028
mov     eax, [ebx+24h]
test    eax, eax
jz      short loc_49b057
push    esi
mov     ecx, [edi]
push    ecx
call    eax
test    eax, eax
jz      short loc_49b01e
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    0ch
mov     eax, 8004000ah
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    0ch
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, [esi+30h]
test    edi, edi
jnz     short loc_49b089
mov     eax, 80040002h
pop     edi
pop     esi
pop     ebx
retn    8
mov     ebx, 28h
push    offset dword_4ab3e8
push    edi
call    sub_495dd0
test    eax, eax
jnz     short loc_49b0b2
add     ebx, 28h
add     edi, 28h
push    offset dword_4ab3e8
push    edi
call    sub_495dd0
test    eax, eax
jz      short loc_49b09d
push    offset axtraclassinfo
mov     eax, [esi+30h]
push    ebx
push    eax
mov     eax, [esp+18h+arg_4]
push    8
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+18h]
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, [esp+arg_0]
inc     dword ptr [eax+28h]
xor     eax, eax
retn    4
mov     eax, [esp+arg_0]
dec     dword ptr [eax+28h]
xor     eax, eax
retn    4
mov     eax, [esp+arg_0]
mov     ecx, [eax+0ch]
mov     eax, [ecx+10h]
retn    4
mov     eax, [esp+arg_0]
mov     eax, [eax+2ch]
retn    4
mov     ecx, [esp+arg_4]
mov     eax, [esp+arg_0]
mov     [eax+2ch], ecx
retn    8
mov     eax, [esp+arg_0]
mov     eax, [eax+8]
retn    4
mov     eax, [esp+arg_0]
mov     edx, [eax+0ch]
mov     ecx, [eax+10h]
test    ecx, ecx
jz      short loc_49b15a
mov     eax, [esp+arg_c]
push    eax
mov     eax, [esp+4+arg_8]
push    eax
mov     eax, [esp+8+arg_4]
push    eax
push    ecx
push    edx
call    sub_49cc00
add     esp, 14h
retn    10h
mov     eax, 80040006h
retn    10h
mov     eax, [esp+arg_0]
mov     edx, [eax+0ch]
mov     ecx, [eax+10h]
test    ecx, ecx
jz      short loc_49b190
mov     eax, [esp+arg_4]
push    eax
push    ecx
push    edx
call    sub_49cc40
add     esp, 0ch
retn    8
mov     eax, 80040006h
retn    8
mov     ecx, [esp+arg_4]
mov     eax, [esp+arg_0]
test    cl, 1
mov     [eax+34h], ecx
jz      short locret_49b1b6
push    eax
call    sub_49ada0
retn    8
sub     esp, 4
mov     [esp+4+var_4], 0
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    38h
mov     eax, [esi]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+0ch]
mov     edi, eax
test    edi, edi
jnz     short loc_49b1ee
mov     eax, 80040002h
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    edi
mov     dword ptr [edi], offset off_4aba78
mov     [edi+0ch], esi
mov     eax, [edi]
call    dword ptr [eax+4]
lea     eax, [esp+10h+var_4]
mov     ecx, [esp+10h+arg_8]
mov     edx, [esp+10h+arg_4]
push    eax
push    ecx
push    edx
push    esi
call    sub_49ca80
add     esp, 10h
mov     ebx, eax
test    ebx, ebx
jnz     short loc_49b226
mov     eax, [esp+10h+var_4]
test    ebx, ebx
mov     [edi+10h], eax
jz      short loc_49b22e
push    edi
mov     eax, [edi]
xor     edi, edi
call    dword ptr [eax+8]
test    edi, edi
jz      short loc_49b241
mov     eax, [esi+1ch]
push    edi
mov     [edi+8], eax
mov     [esi+1ch], edi
mov     esi, [edi]
call    dword ptr [esi+4]
mov     eax, [esp+10h+arg_c]
mov     [eax], edi
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
push    edi
push    38h
mov     edi, [esp+10h+arg_0]
mov     eax, [edi]
push    eax
mov     ebx, [eax]
call    dword ptr [ebx+0ch]
mov     esi, eax
test    esi, esi
jnz     short loc_49b270
mov     eax, 80040002h
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+0ch+arg_4]
mov     ecx, [esp+0ch+arg_8]
mov     edx, [esp+0ch+arg_c]
mov     dword ptr [esi], offset off_4aba78
mov     [esi+0ch], edi
mov     dword ptr [esi+10h], 0
mov     [esi+14h], eax
mov     eax, [esp+0ch+arg_10]
push    esi
mov     [esi+18h], ecx
mov     ecx, [esp+10h+arg_14]
mov     [esi+1ch], edx
mov     [esi+20h], eax
mov     [esi+24h], ecx
mov     dword ptr [esi+28h], 0
mov     ebx, [esi]
call    dword ptr [ebx+4]
test    esi, esi
jz      short loc_49b2c3
mov     eax, [edi+1ch]
push    esi
mov     [esi+8], eax
mov     [edi+1ch], esi
mov     ebx, [esi]
call    dword ptr [ebx+4]
mov     eax, [esp+0ch+arg_18]
pop     edi
mov     [eax], esi
xor     eax, eax
pop     esi
pop     ebx
retn
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     eax, [esi+1ch]
test    eax, eax
jz      short loc_49b2f3
mov     edi, [eax+8]
push    eax
mov     dword ptr [eax+8], 0
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, edi
test    edi, edi
jnz     short loc_49b2dd
mov     dword ptr [esi+1ch], 0
pop     edi
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
xor     edi, edi
mov     eax, [esi+1ch]
test    eax, eax
jz      short loc_49b33a
xor     ebp, ebp
mov     ebx, [eax+8]
cmp     [eax+2ch], ebp
jnz     short loc_49b332
test    edi, edi
jz      short loc_49b324
mov     [edi+8], ebx
jmp     short loc_49b327
mov     [esi+1ch], ebx
push    eax
mov     [eax+8], ebp
mov     eax, [eax]
call    dword ptr [eax+8]
jmp     short loc_49b334
mov     edi, eax
mov     eax, ebx
test    ebx, ebx
jnz     short loc_49b313
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, 80040004h
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+8]
inc     eax
mov     [ecx+8], eax
retn    4
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     edi, [esi+8]
dec     edi
mov     [esi+8], edi
jnz     short loc_49b388
push    esi
call    sub_49b390
push    esi
call    sub_497640
add     esp, 4
mov     eax, [esi+4]
push    esi
push    eax
mov     esi, [eax]
call    dword ptr [esi+10h]
mov     eax, edi
pop     edi
pop     esi
retn    4
push    esi
push    edi
mov     esi, [esp+8+arg_0]
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_49b3ac
mov     edi, [eax+8]
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
mov     eax, edi
test    edi, edi
jnz     short loc_49b39d
xor     eax, eax
pop     edi
mov     dword ptr [esi+0ch], 0
pop     esi
retn    4
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [esp+8+arg_0]
test    edi, edi
jz      short loc_49b3e4
mov     eax, [esi+0ch]
push    edi
mov     [edi+8], eax
mov     eax, [edi]
call    dword ptr [eax+4]
xor     eax, eax
mov     [esi+0ch], edi
pop     edi
pop     esi
retn    8
xor     eax, eax
mov     [esi+0ch], edi
pop     edi
pop     esi
retn    8
push    esi
xor     ecx, ecx
mov     eax, [esp+4+arg_0]
mov     edx, [eax+0ch]
test    edx, edx
jz      short loc_49b40c
mov     esi, [edx+8]
mov     [edx+8], ecx
test    esi, esi
mov     ecx, edx
mov     edx, esi
jnz     short loc_49b3fe
pop     esi
mov     [eax+0ch], ecx
xor     eax, eax
retn    4
mov     eax, [esp+arg_0]
push    esi
push    edi
xor     esi, esi
mov     edx, [eax+0ch]
mov     ecx, [esp+8+arg_4]
cmp     ecx, esi
jnz     short loc_49b43a
xor     eax, eax
pop     edi
pop     esi
retn    8
test    edx, edx
jz      short loc_49b44d
mov     edi, [edx+8]
cmp     edx, ecx
jz      short loc_49b457
mov     esi, edx
test    edi, edi
mov     edx, edi
jnz     short loc_49b43e
mov     eax, 0ffffffffh
pop     edi
pop     esi
retn    8
test    esi, esi
jz      short loc_49b460
mov     [esi+8], edi
jmp     short loc_49b463
mov     [eax+0ch], edi
push    ecx
mov     eax, [ecx]
call    dword ptr [eax+8]
xor     eax, eax
pop     edi
pop     esi
retn    8
xor     edx, edx
mov     eax, [esp+arg_0]
mov     ecx, [eax+0ch]
test    ecx, ecx
jz      short ?seekoff@streambuf@@uaejjw4seek_dir@ios@@h@z
mov     eax, [esp+arg_4]
cmp     ecx, eax
jz      short loc_49b495
inc     edx
mov     ecx, [ecx+8]
test    ecx, ecx
jnz     short loc_49b481
mov     eax, [esp+arg_8]
mov     [eax], edx
xor     eax, eax
retn    0ch
mov     edx, [esp+arg_4]
mov     ecx, [esp+arg_0]
test    edx, edx
jz      short loc_49b4d7
mov     eax, [ecx+0ch]
mov     [edx], eax
mov     eax, [ecx+0ch]
test    eax, eax
jz      short loc_49b4c7
mov     eax, [eax+8]
mov     [edx+4], eax
cmp     dword ptr [ecx+0ch], 1
sbb     eax, eax
retn    8
mov     dword ptr [edx+4], 0
cmp     dword ptr [ecx+0ch], 1
sbb     eax, eax
retn    8
cmp     dword ptr [ecx+0ch], 1
sbb     eax, eax
retn    8
mov     ecx, [esp+arg_4]
test    ecx, ecx
jz      short loc_49b50e
mov     eax, [ecx+4]
mov     [ecx], eax
test    eax, eax
jz      short loc_49b4ff
mov     edx, [eax+8]
cmp     eax, 1
sbb     eax, eax
mov     [ecx+4], edx
retn    8
mov     dword ptr [ecx+4], 0
cmp     eax, 1
sbb     eax, eax
retn    8
mov     eax, 0ffffffffh
retn    8
push    esi
push    edi
mov     edi, [esp+8+arg_0]
push    10h
push    edi
mov     eax, [edi]
call    dword ptr [eax+0ch]
mov     esi, eax
xor     eax, eax
test    esi, esi
jz      short loc_49b54b
push    esi
mov     dword ptr [esi], offset off_4abad0
mov     [esi+4], edi
mov     [esi+8], eax
mov     [esi+0ch], eax
mov     eax, [esi]
call    dword ptr [eax+4]
mov     eax, esi
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_4]
sub     esp, 10h
lea     eax, [esp+10h+src]
push    esi
mov     esi, [esp+14h+arg_0]
push    edi
push    eax
push    ecx
push    esi
call    sub_49b640
add     esp, 0ch
test    eax, eax
jz      short loc_49b5ae
lea     edx, [esp+18h+var_c]
mov     ecx, [eax]
mov     [edx], ecx
mov     edi, [eax+4]
mov     [edx+4], edi
mov     ecx, [eax+8]
mov     [edx+8], ecx
mov     edx, [esp+18h+arg_8]
mov     ecx, [edx]
mov     [eax], ecx
mov     edi, [edx+4]
mov     [eax+4], edi
mov     edx, [edx+8]
mov     [eax+8], edx
lea     eax, [esp+18h+var_c]
push    eax
push    esi
call    sub_49b780
add     esp, 8
mov     al, 1
pop     edi
pop     esi
add     esp, 10h
retn
mov     ax, [esi+16h]
cmp     [esi+14h], ax
jnz     short loc_49b5e2
lea     eax, [esp+18h+src]
push    eax
push    4
push    esi
call    sub_49b690
add     esp, 0ch
test    al, al
jnz     short loc_49b5e2
mov     eax, [esp+18h+arg_8]
push    eax
push    esi
call    sub_49b780
add     esp, 8
xor     al, al
pop     edi
pop     esi
add     esp, 10h
retn
mov     ax, [esi+16h]
mov     ecx, 0ch
movsx   edi, ax
inc     ax
mov     [esi+16h], ax
mov     eax, [esi+18h]
sub     eax, [esp+18h+src]
cdq
idiv    ecx
add     eax, edi
lea     eax, [eax+eax*2]
shl     eax, 2
test    eax, eax
jle     short loc_49b61b
push    eax
mov     eax, [esp+1ch+src]
push    eax
add     eax, ecx
push    eax
call    _memcpy
add     esp, 0ch
mov     ecx, [esp+18h+arg_8]
mov     edx, [esp+18h+src]
mov     eax, [ecx]
pop     edi
mov     [edx], eax
mov     al, 1
mov     esi, [ecx+4]
mov     [edx+4], esi
pop     esi
mov     ecx, [ecx+8]
mov     [edx+8], ecx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
push    ebx
push    esi
push    edi
push    ebp
mov     edx, [eax+18h]
movsx   edi, word ptr [eax+16h]
xor     esi, esi
test    edi, edi
jz      short loc_49b679
mov     ecx, [esp+10h+arg_4]
lea     ebx, [esi+edi]
dec     ebx
shr     ebx, 1
lea     eax, [ebx+ebx*2]
lea     eax, [edx+eax*4]
mov     ebp, [eax]
cmp     ecx, ebp
jbe     short loc_49b671
lea     esi, [ebx+1]
jmp     short loc_49b675
jnb     short loc_49b68b
mov     edi, ebx
cmp     edi, esi
ja      short loc_49b659
mov     eax, [esp+10h+arg_8]
test    eax, eax
jz      short loc_49b689
lea     ecx, [esi+esi*2]
lea     edx, [edx+ecx*4]
mov     [eax], edx
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
mov     ebx, [esp+10h+arg_8]
push    ebp
mov     ecx, [esi+4]
test    ebx, ebx
jz      short loc_49b6ad
mov     ebp, [ebx]
sub     ebp, [esi+18h]
jmp     short loc_49b6b1
mov     ebp, [esp+14h+var_4]
movsx   eax, word ptr [esi+14h]
mov     edi, [esp+14h+arg_4]
add     edi, eax
lea     eax, [eax+eax*2]
shl     eax, 2
lea     edx, [edi+edi*2]
shl     edx, 2
push    edx
push    eax
mov     eax, [esi+18h]
push    eax
push    ecx
call    sub_49b700
add     esp, 10h
test    eax, eax
jnz     short loc_49b6e4
xor     al, al
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     [esi+14h], di
mov     [esi+18h], eax
test    ebx, ebx
jz      short loc_49b6f3
add     eax, ebp
mov     [ebx], eax
mov     al, 1
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_c]
push    edi
mov     ebx, [esp+0ch+arg_0]
push    ebp
mov     eax, [ebx]
push    esi
push    ebx
call    dword ptr [eax+0ch]
mov     ebp, eax
test    ebp, ebp
jz      short loc_49b744
mov     eax, [esp+10h+arg_8]
cmp     esi, eax
jge     short loc_49b723
mov     eax, esi
mov     edx, [esp+10h+arg_4]
test    edx, edx
jz      short loc_49b744
mov     edi, ebp
mov     esi, edx
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
push    edx
and     ecx, 3
push    ebx
rep movsb
mov     ebx, [ebx]
call    dword ptr [ebx+10h]
mov     eax, ebp
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_4]
mov     al, [esi+0ah]
cmp     al, 1
jz      short loc_49b760
cmp     al, 2
jnz     short loc_49b76d
mov     eax, [esi+4]
test    eax, eax
jz      short loc_49b76d
push    eax
mov     eax, [eax]
call    dword ptr [eax+4]
inc     byte ptr [esi+0bh]
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
push    edi
mov     esi, [eax+4]
mov     edi, [esp+8+arg_4]
mov     al, [edi+0ah]
cmp     al, 1
jz      short loc_49b798
cmp     al, 2
jnz     short loc_49b7a5
mov     eax, [edi+4]
test    eax, eax
jz      short loc_49b7a5
push    eax
mov     eax, [eax]
call    dword ptr [eax+8]
dec     byte ptr [edi+0bh]
jnz     short loc_49b7bb
cmp     word ptr [edi+8], 4
jbe     short loc_49b7bb
mov     eax, [edi+4]
push    eax
push    esi
mov     esi, [esi]
call    dword ptr [esi+10h]
pop     edi
pop     esi
retn
mov     eax, [esp+arg_4]
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [esp+14h+arg_0]
push    edi
push    ebp
add     eax, esi
dec     esi
mov     edi, [esp+1ch+arg_4]
cdq
sub     eax, edx
inc     edi
sar     eax, 1
mov     edx, [esp+1ch+arg_8]
lea     ecx, [edi+edi*2]
lea     ebp, [edx+ecx*4]
lea     ecx, [eax+eax*2]
mov     ebx, [edx+ecx*4]
sub     ebp, 0ch
dec     edi
cmp     [ebp+0], ebx
ja      short loc_49b7ed
lea     ecx, [esi+esi*2]
lea     ecx, [edx+ecx*4]
add     ecx, 0ch
inc     esi
cmp     [ecx], ebx
jb      short loc_49b7fc
cmp     edi, esi
jle     short loc_49b876
cmp     eax, esi
jge     short loc_49b80e
mov     eax, esi
cmp     edi, eax
jge     short loc_49b814
mov     eax, edi
lea     ecx, [esi+esi*2]
lea     ebx, [edx+ecx*4]
lea     ecx, [esp+1ch+var_c]
mov     ebp, [ebx]
mov     [ecx], ebp
mov     ebp, [ebx+4]
mov     [ecx+4], ebp
mov     ebp, [ebx+8]
mov     [ecx+8], ebp
lea     ecx, [edi+edi*2]
lea     ebp, [edx+ecx*4]
mov     ecx, [ebp+0]
mov     [ebx], ecx
mov     ecx, [ebp+4]
mov     [ebx+4], ecx
mov     ecx, [ebp+8]
mov     [ebx+8], ecx
lea     ecx, [esp+1ch+var_c]
cmp     eax, esi
mov     ebx, [ecx]
mov     [ebp+0], ebx
mov     ebx, [ecx+4]
mov     ecx, [ecx+8]
mov     [ebp+4], ebx
mov     [ebp+8], ecx
jnz     short loc_49b866
mov     eax, edi
inc     edi
jmp     loc_49b7e1
cmp     edi, eax
jnz     loc_49b7e1
mov     eax, esi
dec     esi
jmp     loc_49b7e1
cmp     eax, [esp+1ch+arg_4]
jnz     short loc_49b87d
dec     eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, [esp+0ch+arg_4]
push    ebp
cmp     edi, esi
jle     short loc_49b8c3
mov     ebx, [esp+10h+arg_8]
push    ebx
push    edi
push    esi
call    sub_49b7c0
add     esp, 0ch
mov     ebp, eax
push    ebx
push    ebp
push    esi
call    sub_49b890
add     esp, 0ch
lea     esi, [ebp+1]
cmp     edi, esi
jg      short loc_49b8a4
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
sub     esp, 4
push    ebx
mov     edx, [eax+4]
cmp     [esp+8+arg_4], 8
push    esi
push    edi
push    ebp
jnz     short loc_49b8fd
mov     ecx, [esp+14h+arg_c]
mov     bx, cx
test    ecx, ecx
jg      short loc_49b962
mov     eax, 8004002dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     [esp+14h+arg_4], 9
jnz     short loc_49b936
mov     edi, [esp+14h+arg_8]
mov     ecx, 0ffffffffh
sub     eax, eax
repne scasb
not     ecx
mov     bx, cx
mov     ecx, [esp+14h+arg_c]
test    ecx, ecx
jz      short loc_49b962
mov     eax, ebx
and     eax, 0ffffh
cmp     eax, ecx
jle     short loc_49b962
mov     eax, 8004002dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     eax, [esp+14h+arg_4]
mov     ecx, [esp+14h+arg_c]
mov     bx, ds:word_4abaf8[eax*2]
test    ecx, ecx
jz      short loc_49b962
mov     eax, ebx
and     eax, 0ffffh
cmp     eax, ecx
jz      short loc_49b962
mov     eax, 8004002dh
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
cmp     bx, 4
jbe     short loc_49b9a4
mov     ebp, ebx
mov     eax, [edx]
and     ebp, 0ffffh
push    ebp
push    edx
call    dword ptr [eax+0ch]
mov     [esp+14h+var_4], eax
test    eax, eax
jnz     short loc_49b98c
mov     eax, 80040002h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
mov     edi, [esp+14h+var_4]
mov     esi, [esp+14h+arg_8]
mov     ecx, ebp
shr     ecx, 2
rep movsd
mov     ecx, ebp
and     ecx, 3
rep movsb
jmp     short loc_49b9d0
test    bx, bx
jz      short loc_49b9c8
mov     eax, ebx
lea     edi, [esp+14h+var_4]
and     eax, 0ffffh
mov     esi, [esp+14h+arg_8]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
jmp     short loc_49b9d0
mov     [esp+14h+var_4], 0
mov     eax, [esp+14h+arg_10]
mov     ecx, [esp+14h+arg_14]
mov     [ecx+8], bx
mov     dl, byte ptr [esp+14h+arg_4]
push    ecx
mov     [ecx], eax
mov     eax, [esp+18h+var_4]
mov     [ecx+0ah], dl
mov     byte ptr [ecx+0bh], 0
mov     [ecx+4], eax
mov     ecx, [esp+18h+arg_0]
push    ecx
call    sub_49b750
add     esp, 8
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     edi, [esp+0ch+arg_0]
push    esi
push    edi
call    sub_49b780
mov     ax, [edi+16h]
add     esp, 8
movsx   ebx, ax
dec     ax
mov     ecx, 0ch
mov     [edi+16h], ax
mov     eax, [edi+18h]
sub     eax, esi
cdq
idiv    ecx
add     eax, ebx
lea     eax, [eax+eax*2-3]
shl     eax, 2
test    eax, eax
jz      short loc_49ba5a
push    eax
lea     eax, [esi+0ch]
push    eax
push    esi
call    _memcpy
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    offset dword_4ab408
mov     esi, [esp+8+arg_4]
push    esi
call    sub_495dd0
test    eax, eax
jnz     short loc_49ba8c
push    offset dword_4ab468
push    esi
call    sub_495dd0
test    eax, eax
jnz     short loc_49ba8c
mov     eax, 80040004h
pop     esi
retn    0ch
mov     eax, [esp+4+arg_0]
mov     ecx, [esp+4+arg_8]
push    eax
mov     [ecx], eax
mov     esi, [eax]
call    dword ptr [esi+4]
xor     eax, eax
pop     esi
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+10h]
inc     eax
mov     [ecx+10h], eax
retn    4
sub     esp, 4
push    ebx
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
push    ebp
mov     eax, [esi+10h]
dec     eax
xor     ebp, ebp
mov     [esp+14h+var_4], eax
mov     [esi+10h], eax
cmp     eax, ebp
jnz     short loc_49bb1c
cmp     [esi+16h], bp
mov     edi, [esi+4]
jle     short loc_49bb02
xor     ebx, ebx
mov     eax, [esi+18h]
inc     ebp
add     eax, ebx
add     ebx, 0ch
push    eax
push    esi
call    sub_49b780
movsx   eax, word ptr [esi+16h]
add     esp, 8
cmp     eax, ebp
jg      short loc_49bae7
mov     eax, [esi+18h]
mov     ebx, [edi]
push    eax
push    edi
call    dword ptr [ebx+10h]
push    esi
call    sub_497640
add     esp, 4
mov     ebx, [edi]
push    esi
push    edi
call    dword ptr [ebx+10h]
mov     eax, [esp+14h+var_4]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 4
retn    4
mov     ecx, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     ax, [ecx+14h]
cmp     ax, dx
jge     short loc_49bb5e
movsx   eax, ax
push    0
sub     edx, eax
push    edx
push    ecx
call    sub_49b690
add     esp, 0ch
test    al, al
jnz     short loc_49bb5e
mov     eax, 80040002h
retn    8
xor     eax, eax
retn    8
mov     eax, [esp+arg_8]
sub     esp, 4
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
push    eax
mov     ecx, [esi+0ch]
push    ecx
call    sub_49a940
add     esp, 8
mov     edi, eax
test    edi, edi
jnz     short loc_49bb9d
mov     eax, 80040002h
pop     edi
pop     esi
add     esp, 4
retn    0ch
push    0
mov     eax, [esi+0ch]
push    eax
mov     ecx, [esi+4]
push    ecx
call    sub_49bfe0
mov     [esp+18h+var_4], eax
add     esp, 0ch
test    eax, eax
jnz     short loc_49bbc4
mov     eax, 80040002h
pop     edi
pop     esi
add     esp, 4
retn    0ch
lea     eax, [esp+0ch+var_4]
push    edi
push    4
push    eax
push    1
push    esi
call    sub_49bcb0
mov     esi, eax
mov     eax, [esp+0ch+var_4]
push    eax
mov     edi, [eax]
call    dword ptr [edi+8]
mov     eax, [esp+0ch+arg_4]
test    eax, eax
jz      short loc_49bbee
mov     ecx, [esp+0ch+var_4]
mov     [eax], ecx
mov     eax, esi
pop     edi
pop     esi
add     esp, 4
retn    0ch
mov     eax, [esp+arg_10]
push    esi
mov     esi, [esp+4+arg_0]
push    edi
push    eax
mov     ecx, [esi+0ch]
push    ecx
call    sub_49a940
add     esp, 8
test    eax, eax
jnz     short loc_49bc25
mov     eax, 80040002h
pop     edi
pop     esi
retn    14h
push    0
push    eax
push    esi
call    sub_49b640
add     esp, 0ch
test    eax, eax
jnz     short loc_49bc3f
mov     eax, 8004002ah
pop     edi
pop     esi
retn    14h
xor     edx, edx
mov     dl, [eax+0ah]
cmp     edx, [esp+8+arg_4]
jz      short loc_49bc54
mov     eax, 8004002bh
pop     edi
pop     esi
retn    14h
xor     edx, edx
mov     dx, [eax+8]
cmp     edx, [esp+8+arg_c]
jle     short loc_49bc6a
mov     eax, 8004002dh
pop     edi
pop     esi
retn    14h
cmp     edx, 4
ja      short loc_49bc8b
lea     esi, [eax+4]
mov     edi, [esp+8+arg_8]
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
xor     eax, eax
pop     edi
pop     esi
retn    14h
mov     edi, [esp+8+arg_8]
mov     esi, [eax+4]
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
xor     eax, eax
pop     edi
pop     esi
retn    14h
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, [esp+18h+arg_4]
test    edi, edi
jz      short loc_49bd2b
cmp     edi, 0dh
jnb     short loc_49bd2b
mov     eax, [esp+18h+arg_10]
mov     esi, [esp+18h+arg_0]
push    eax
mov     ecx, [esi+0ch]
push    ecx
call    sub_49a940
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jnz     short loc_49bcec
mov     eax, 80040002h
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn    14h
lea     eax, [esp+18h+var_c]
mov     ecx, [esp+18h+arg_c]
mov     edx, [esp+18h+arg_8]
push    eax
push    ebx
push    ecx
push    edx
push    edi
push    esi
call    sub_49b8d0
add     esp, 18h
test    eax, eax
jnz     short loc_49bd30
lea     eax, [esp+18h+var_c]
push    eax
push    ebx
push    esi
call    sub_49b550
add     esp, 0ch
cmp     al, 1
sbb     eax, eax
pop     edi
and     eax, 80040002h
pop     esi
pop     ebx
add     esp, 0ch
retn    14h
mov     eax, 8004002bh
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn    14h
mov     eax, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    eax
mov     ecx, [esi+0ch]
push    ecx
call    sub_49a940
add     esp, 8
test    eax, eax
jnz     short loc_49bd63
mov     eax, 80040002h
pop     esi
retn    8
push    0
push    eax
push    esi
call    sub_49b640
add     esp, 0ch
test    eax, eax
jnz     short loc_49bd7c
mov     eax, 8004002ah
pop     esi
retn    8
push    eax
push    esi
call    sub_49ba10
add     esp, 8
xor     eax, eax
pop     esi
retn    8
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
movsx   ecx, word ptr [eax+16h]
xor     eax, eax
mov     [edx], ecx
retn    8
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
cmp     [eax+16h], cx
jg      short loc_49bdc6
mov     eax, 8004002ah
retn    14h
mov     edx, [eax+18h]
lea     eax, [ecx+ecx*2]
lea     edx, [edx+eax*4]
mov     eax, [esp+arg_8]
test    eax, eax
jz      short loc_49bdde
xor     ecx, ecx
mov     cl, [edx+0ah]
mov     [eax], ecx
mov     eax, [esp+arg_c]
test    eax, eax
jz      short loc_49bdee
xor     ecx, ecx
mov     cx, [edx+8]
mov     [eax], ecx
mov     eax, [esp+arg_10]
test    eax, eax
jz      short loc_49bdfa
mov     ecx, [edx]
mov     [eax], ecx
xor     eax, eax
retn    14h
mov     eax, [esp+arg_c]
push    esi
mov     esi, [esp+4+arg_0]
push    eax
mov     ecx, [esi+0ch]
push    ecx
call    sub_49a940
add     esp, 8
test    eax, eax
jnz     short loc_49be23
mov     eax, 80040002h
pop     esi
retn    10h
push    0
push    eax
push    esi
call    sub_49b640
add     esp, 0ch
test    eax, eax
jnz     short loc_49be3c
mov     eax, 8004002ah
pop     esi
retn    10h
mov     ecx, [esp+4+arg_4]
test    ecx, ecx
jz      short loc_49be4b
xor     edx, edx
mov     dl, [eax+0ah]
mov     [ecx], edx
mov     ecx, [esp+4+arg_8]
test    ecx, ecx
jz      short loc_49be5e
mov     ax, [eax+8]
and     eax, 0ffffh
mov     [ecx], eax
xor     eax, eax
pop     esi
retn    10h
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    eax
mov     edx, [ecx+0ch]
push    edx
call    sub_49a940
add     esp, 8
retn    8
mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
mov     esi, [esp+0ch+arg_0]
push    eax
mov     ecx, [esi+0ch]
push    ecx
call    sub_49a940
add     esp, 8
test    eax, eax
jnz     short loc_49beb5
mov     eax, 80040002h
pop     edi
pop     esi
pop     ebx
retn
push    0
push    eax
push    esi
call    sub_49b640
add     esp, 0ch
mov     ebx, eax
test    ebx, ebx
jnz     short loc_49bed0
mov     eax, 8004002ah
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esi+4]
xor     ecx, ecx
mov     cx, [ebx+8]
mov     esi, [eax]
push    ecx
push    eax
call    dword ptr [esi+0ch]
mov     ecx, [esp+0ch+arg_8]
mov     edi, eax
test    edi, edi
mov     [ecx], eax
jnz     short loc_49bef5
mov     eax, 80040002h
pop     edi
pop     esi
pop     ebx
retn
mov     ax, [ebx+8]
cmp     ax, 4
ja      short loc_49bf09
and     eax, 0ffffh
lea     esi, [ebx+4]
jmp     short loc_49bf11
and     eax, 0ffffh
mov     esi, [ebx+4]
mov     ecx, eax
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
xor     ecx, ecx
mov     eax, [esp+0ch+arg_c]
mov     cx, [ebx+8]
pop     edi
pop     esi
mov     [eax], ecx
xor     eax, eax
pop     ebx
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    ebp
xor     ebp, ebp
cmp     [esi+16h], bp
mov     edi, [esi+18h]
jle     short loc_49bf78
xor     ebx, ebx
push    edi
inc     ebp
push    esi
add     edi, 0ch
call    sub_49b780
add     esp, 8
mov     [edi-0ch], ebx
mov     [edi-8], ebx
mov     [edi-4], bx
mov     [edi-2], bl
movsx   eax, word ptr [esi+16h]
cmp     eax, ebp
jg      short loc_49bf55
xor     eax, eax
pop     ebp
mov     word ptr [esi+16h], 0
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, [esp+0ch+arg_0]
push    ebp
cmp     [esi+16h], bx
mov     edi, [esi+18h]
jle     short loc_49bfcd
xor     ebp, ebp
xor     eax, eax
mov     al, [edi+0ah]
cmp     eax, [esp+10h+arg_4]
jnz     short loc_49bfc1
push    edi
push    esi
call    sub_49b780
add     esp, 8
mov     [edi+4], ebp
mov     [edi+8], bp
inc     ebx
add     edi, 0ch
movsx   eax, word ptr [esi+16h]
cmp     eax, ebx
jg      short loc_49bfa5
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
push    1ch
xor     edi, edi
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+0ch]
mov     esi, eax
test    esi, esi
jz      short loc_49c044
mov     eax, [esp+0ch+arg_4]
mov     dword ptr [esi], offset off_4abb18
push    esi
mov     [esi+4], ebx
mov     [esi+0ch], eax
mov     [esi+10h], edi
mov     [esi+14h], di
mov     [esi+16h], di
mov     [esi+18h], edi
mov     ebx, [esi]
call    dword ptr [ebx+4]
mov     eax, [esp+0ch+arg_8]
cmp     eax, edi
jnz     short loc_49c028
mov     eax, 4
push    0
push    eax
push    esi
call    sub_49b690
add     esp, 0ch
test    al, al
jnz     short loc_49c044
push    esi
mov     eax, [esi]
call    dword ptr [eax+8]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_0]
cmp     byte ptr [eax+0ah], 2
jnz     short loc_49c05d
mov     al, 1
retn
mov     eax, [eax]
cmp     byte ptr [eax], 5fh
jnz     short loc_49c079
cmp     byte ptr [eax+1], 72h
jnz     short loc_49c079
cmp     byte ptr [eax+2], 74h
jnz     short loc_49c079
cmp     byte ptr [eax+3], 5fh
jnz     short loc_49c079
mov     al, 1
retn
xor     al, al
retn
sub     esp, 18h
push    ebx
push    esi
mov     esi, [esp+20h+arg_0]
push    edi
push    ebp
test    esi, esi
jnz     short loc_49c0b0
lea     eax, [esp+28h+var_14]
push    4
mov     edi, [esp+2ch+arg_4]
push    eax
mov     [esp+30h+var_14], 0ffffffffh
push    edi
mov     ebx, [edi]
call    dword ptr [ebx+18h]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     edi, [esi+18h]
xor     ebx, ebx
mov     [esp+28h+var_14], ebx
cmp     [esi+16h], bx
jle     short loc_49c0dc
push    edi
call    sub_49c050
add     esp, 4
test    al, al
jnz     short loc_49c0d0
inc     [esp+28h+var_14]
inc     ebx
add     edi, 0ch
movsx   eax, word ptr [esi+16h]
cmp     eax, ebx
jg      short loc_49c0bf
lea     eax, [esp+28h+var_14]
push    4
mov     edi, [esp+2ch+arg_4]
push    eax
push    edi
mov     ebx, [edi]
call    dword ptr [ebx+18h]
test    eax, eax
jnz     loc_49c209
push    4
mov     ebx, [edi]
movsx   eax, word ptr [esi+14h]
mov     [esp+2ch+var_10], eax
lea     eax, [esp+2ch+var_10]
push    eax
push    edi
call    dword ptr [ebx+18h]
test    eax, eax
jnz     loc_49c209
mov     ebx, [esi+18h]
xor     ebp, ebp
cmp     [esi+16h], bp
jle     short loc_49c18c
push    ebx
call    sub_49c050
add     esp, 4
test    al, al
jnz     short loc_49c180
lea     ecx, [esp+28h+var_c]
mov     eax, [ebx]
mov     [ecx], eax
mov     edx, [ebx+4]
mov     [ecx+4], edx
mov     eax, [ebx+8]
mov     [ecx+8], eax
lea     ecx, [esp+28h+var_18]
mov     edx, [esp+28h+var_c]
push    ecx
push    edx
mov     eax, [esi+0ch]
push    eax
call    sub_49a990
mov     [esp+34h+var_c], eax
add     esp, 0ch
test    eax, eax
jz      short loc_49c1c3
cmp     [esp+28h+var_18], 0
jz      short loc_49c1d0
mov     eax, [esp+28h+var_18]
push    0ch
mov     [esp+2ch+var_c], eax
lea     eax, [esp+2ch+var_c]
push    eax
push    edi
mov     eax, [edi]
call    dword ptr [eax+18h]
test    eax, eax
jnz     loc_49c209
inc     ebp
add     ebx, 0ch
movsx   eax, word ptr [esi+16h]
cmp     eax, ebp
jg      short loc_49c11d
mov     ebx, [esi+18h]
xor     ebp, ebp
cmp     [esi+16h], bp
jle     short loc_49c207
push    ebx
call    sub_49c050
add     esp, 4
test    al, al
jnz     short loc_49c1fb
cmp     byte ptr [ebx+0ah], 1
jnz     short loc_49c1dd
push    edi
mov     eax, [ebx+4]
push    eax
call    sub_49c080
add     esp, 8
test    eax, eax
jz      short loc_49c1fb
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, 80040014h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     eax, 80040014h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
mov     ax, [ebx+8]
cmp     ax, 4
jbe     short loc_49c1fb
and     eax, 0ffffh
mov     ecx, [ebx+4]
push    eax
push    ecx
push    edi
mov     eax, [edi]
call    dword ptr [eax+18h]
test    eax, eax
jnz     short loc_49c209
inc     ebp
add     ebx, 0ch
movsx   eax, word ptr [esi+16h]
cmp     eax, ebp
jg      short loc_49c197
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 18h
retn
sub     esp, 8
lea     eax, [esp+8+var_8]
push    ebx
push    esi
push    edi
mov     esi, [esp+14h+arg_8]
push    ebp
push    4
push    eax
push    esi
mov     ebx, [esi]
call    dword ptr [ebx+14h]
test    eax, eax
jnz     loc_49c367
cmp     [esp+18h+var_8], 0ffffffffh
jnz     short loc_49c25b
mov     eax, [esp+18h+arg_0]
pop     ebp
pop     edi
pop     esi
pop     ebx
mov     dword ptr [eax], 0
xor     eax, eax
add     esp, 8
retn
lea     eax, [esp+18h+var_4]
push    4
push    eax
mov     ebx, [esi]
push    esi
call    dword ptr [ebx+14h]
test    eax, eax
jnz     loc_49c367
mov     eax, [esp+18h+var_4]
mov     ecx, [esp+18h+arg_4]
mov     ebx, [esp+18h+arg_c]
push    eax
push    ecx
push    ebx
call    sub_49bfe0
add     esp, 0ch
mov     edi, eax
test    edi, edi
jnz     short loc_49c29a
mov     eax, 80040002h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+18h+var_8]
mov     ecx, [edi+18h]
mov     ebp, [esi]
lea     eax, [eax+eax*2]
shl     eax, 2
push    eax
push    ecx
push    esi
call    dword ptr [ebp+14h]
test    eax, eax
jnz     loc_49c367
cmp     [esp+18h+var_8], 0
mov     ebp, [edi+18h]
jbe     loc_49c34b
mov     eax, [ebp+0]
mov     ecx, [esp+18h+arg_4]
push    eax
push    ecx
call    sub_49aa20
add     esp, 8
mov     [ebp+0], eax
test    eax, eax
jz      loc_49c36f
cmp     byte ptr [ebp+0ah], 1
jnz     short loc_49c306
lea     eax, [ebp+4]
push    ebx
mov     ecx, [esp+1ch+arg_4]
push    esi
push    ecx
push    eax
call    sub_49c220
add     esp, 10h
test    eax, eax
jz      short loc_49c335
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     ax, [ebp+8]
cmp     ax, 4
jbe     short loc_49c335
and     eax, 0ffffh
push    eax
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+0ch]
mov     [ebp+4], eax
test    eax, eax
jz      short loc_49c37c
xor     ecx, ecx
mov     cx, [ebp+8]
push    ecx
push    eax
push    esi
mov     eax, [esi]
call    dword ptr [eax+14h]
test    eax, eax
jnz     short loc_49c367
inc     word ptr [edi+16h]
add     ebp, 0ch
dec     [esp+18h+var_8]
cmp     [esp+18h+var_8], 0
ja      loc_49c2c5
mov     eax, [edi+18h]
push    eax
movsx   eax, word ptr [edi+16h]
dec     eax
push    eax
push    0
call    sub_49b890
mov     ecx, [esp+24h+arg_0]
add     esp, 0ch
xor     eax, eax
mov     [ecx], edi
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 80040014h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
mov     eax, 80040002h
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 8
retn
push    esi
mov     esi, [esp+4+dwbytes]
test    esi, esi
jle     short loc_49c3ad
push    esi
call    sub_496ff0
add     esp, 4
test    eax, eax
jnz     short loc_49c3bb
sar     esi, 1
test    esi, esi
jg      short loc_49c399
mov     ecx, [esp+4+arg_4]
xor     eax, eax
pop     esi
mov     dword ptr [ecx], 0
retn
mov     ecx, [esp+4+arg_4]
mov     [ecx], esi
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ecx, [eax+30h]
cmp     ecx, 0ffffffffh
jnz     short loc_49c3e2
mov     eax, 80040050h
retn
mov     eax, [esp+lbytes]
mov     edx, [esp+lpbuffer]
push    eax
push    edx
push    ecx
call    ds:_hread
cmp     eax, 0ffffffffh
jnz     short loc_49c3fe
mov     eax, 80040053h
retn
mov     ecx, [esp+arg_c]
test    ecx, ecx
jz      short loc_49c408
mov     [ecx], eax
xor     eax, eax
retn
mov     eax, [esp+arg_0]
push    esi
mov     eax, [eax+30h]
cmp     eax, 0ffffffffh
jnz     short loc_49c424
mov     eax, 80040050h
pop     esi
retn
mov     esi, [esp+4+lbytes]
mov     ecx, [esp+4+lpbuffer]
push    esi
push    ecx
push    eax
call    ds:_hwrite
cmp     eax, 0ffffffffh
jnz     short loc_49c441
mov     eax, 80040053h
pop     esi
retn
cmp     esi, eax
mov     eax, 80040053h
jg      short loc_49c44c
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
xor     ecx, ecx
mov     [eax+28h], ecx
mov     [eax+2ch], ecx
xor     eax, eax
retn
push    esi
xor     eax, eax
mov     esi, [esp+4+arg_0]
mov     edx, [esi+1ch]
test    edx, edx
jz      short loc_49c487
mov     ecx, [esi+24h]
test    ecx, ecx
jz      short loc_49c487
push    ecx
push    edx
push    esi
call    sub_49c410
mov     dword ptr [esi+24h], 0
add     esp, 0ch
pop     esi
retn
mov     eax, 80040004h
retn    0ch
mov     ecx, [esp+arg_0]
mov     eax, [ecx+8]
inc     eax
mov     [ecx+8], eax
retn    4
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
mov     edi, [esi+8]
dec     edi
mov     [esi+8], edi
jnz     short loc_49c4f2
mov     ebx, [esi+4]
push    esi
call    sub_49c660
mov     eax, [esi+1ch]
push    eax
call    sub_496fc0
add     esp, 4
mov     eax, [esi+20h]
push    eax
call    sub_496fc0
add     esp, 4
mov     eax, [esi+18h]
push    eax
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+10h]
push    esi
push    ebx
mov     ebx, [ebx]
call    dword ptr [ebx+10h]
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn    4
sub     esp, 88h
push    esi
mov     esi, [esp+8ch+arg_0]
cmp     dword ptr [esi+30h], 0ffffffffh
jz      short loc_49c523
mov     eax, 80040051h
pop     esi
add     esp, 88h
retn    8
mov     eax, [esp+8ch+arg_4]
test    eax, eax
jz      short loc_49c573
cmp     eax, 1
jz      short loc_49c5a0
cmp     eax, 2
jz      loc_49c5e9
mov     eax, dword ptr [esp+8ch+reopenbuff.cbytes]
xor     ecx, ecx
push    eax
lea     eax, [esp+90h+reopenbuff]
mov     edx, [esi+18h]
push    eax
mov     [esi+28h], ecx
push    edx
mov     [esi+2ch], ecx
mov     [esi+24h], ecx
call    ds:openfile
mov     [esi+30h], eax
cmp     eax, 0ffffffffh
jz      loc_49c619
xor     eax, eax
pop     esi
add     esp, 88h
retn    8
lea     eax, [esi+10h]
mov     ecx, [esi+0ch]
push    eax
push    ecx
call    sub_49c390
add     esp, 8
mov     [esi+20h], eax
test    eax, eax
jnz     short loc_49c599
mov     eax, 80040002h
pop     esi
add     esp, 88h
retn    8
mov     eax, 10h
jmp     short loc_49c540
lea     eax, [esi+10h]
mov     ecx, [esi+0ch]
push    eax
push    ecx
call    sub_49c390
add     esp, 8
lea     ecx, [esi+14h]
mov     edx, [esi+0ch]
mov     [esi+20h], eax
push    ecx
push    edx
call    sub_49c390
add     esp, 8
mov     [esi+1ch], eax
cmp     dword ptr [esi+20h], 0
jz      short loc_49c5da
test    eax, eax
jz      short loc_49c5da
mov     eax, 12h
jmp     loc_49c540
mov     eax, 80040002h
pop     esi
add     esp, 88h
retn    8
lea     eax, [esi+14h]
mov     ecx, [esi+0ch]
push    eax
push    ecx
call    sub_49c390
add     esp, 8
mov     [esi+1ch], eax
test    eax, eax
jnz     short loc_49c60f
mov     eax, 80040002h
pop     esi
add     esp, 88h
retn    8
mov     eax, 11h
jmp     loc_49c540
xor     eax, eax
mov     ax, [esp+8ch+reopenbuff.nerrcode]
cmp     eax, 5
jz      short loc_49c63e
cmp     eax, 8
jz      short loc_49c64d
cmp     eax, 0ch
jz      short loc_49c63e
mov     eax, 80040053h
pop     esi
add     esp, 88h
retn    8
mov     eax, 80040055h
pop     esi
add     esp, 88h
retn    8
mov     eax, 80040002h
pop     esi
add     esp, 88h
retn    8
push    esi
push    edi
mov     esi, [esp+8+arg_0]
cmp     dword ptr [esi+30h], 0ffffffffh
jnz     short loc_49c676
mov     eax, 80040050h
pop     edi
pop     esi
retn    4
push    esi
call    sub_49c460
add     esp, 4
mov     edi, eax
mov     eax, [esi+1ch]
push    eax
call    sub_496fc0
add     esp, 4
mov     eax, [esi+20h]
mov     dword ptr [esi+1ch], 0
push    eax
call    sub_496fc0
mov     dword ptr [esi+20h], 0
add     esp, 4
test    edi, edi
jnz     short loc_49c6b7
mov     eax, [esi+30h]
push    eax
call    ds:_lclose
mov     edi, eax
mov     eax, 0
cmp     edi, 1
adc     eax, 0ffffffffh
pop     edi
mov     dword ptr [esi+30h], 0ffffffffh
and     eax, 80040053h
pop     esi
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_4]
push    edi
mov     esi, [esp+0ch+arg_0]
push    ebp
cmp     dword ptr [esi+20h], 0
jnz     short loc_49c6fe
mov     eax, 80040055h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    0ch
push    esi
call    sub_49c460
add     esp, 4
test    eax, eax
jnz     short loc_49c773
mov     edi, [esp+10h+arg_8]
test    edi, edi
jz      short loc_49c771
lea     ebp, [esi+28h]
mov     eax, [esi+2ch]
mov     edx, [ebp+0]
sub     edx, eax
jz      short loc_49c746
cmp     edx, edi
jle     short loc_49c726
mov     edx, edi
sub     edi, edx
mov     ecx, [esi+20h]
add     ecx, eax
add     eax, edx
mov     [esi+2ch], eax
mov     eax, edx
dec     edx
test    eax, eax
jz      short loc_49c746
mov     al, [ecx]
inc     ecx
mov     [ebx], al
inc     ebx
mov     eax, edx
dec     edx
test    eax, eax
jnz     short loc_49c739
test    edi, edi
jz      short loc_49c771
push    ebp
mov     eax, [esi+10h]
push    eax
mov     ecx, [esi+20h]
push    ecx
push    esi
call    sub_49c3d0
add     esp, 10h
test    eax, eax
jnz     short loc_49c773
cmp     dword ptr [ebp+0], 0
jz      short loc_49c77a
mov     dword ptr [esi+2ch], 0
test    edi, edi
jnz     short loc_49c716
xor     eax, eax
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     eax, 80040054h
pop     ebp
pop     edi
pop     esi
pop     ebx
retn    0ch
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
cmp     dword ptr [edi+1ch], 0
jnz     short loc_49c7a8
mov     eax, 80040055h
pop     edi
pop     esi
pop     ebx
retn    0ch
push    edi
call    sub_49c450
mov     esi, [esp+10h+lbytes]
add     esp, 4
mov     eax, [edi+14h]
cmp     esi, eax
jle     short loc_49c7de
push    edi
call    sub_49c460
add     esp, 4
test    eax, eax
jnz     short loc_49c81b
mov     eax, [esp+0ch+lpbuffer]
push    esi
push    eax
push    edi
call    sub_49c410
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     ecx, [edi+24h]
add     ecx, esi
cmp     ecx, eax
jle     short loc_49c7f4
push    edi
call    sub_49c460
add     esp, 4
test    eax, eax
jnz     short loc_49c81b
mov     ebx, [edi+24h]
mov     ecx, [edi+1ch]
add     ecx, ebx
mov     edx, [esp+0ch+lpbuffer]
add     ebx, esi
mov     eax, esi
dec     esi
mov     [edi+24h], ebx
test    eax, eax
jz      short loc_49c819
mov     al, [edx]
inc     edx
mov     [ecx], al
inc     ecx
mov     eax, esi
dec     esi
test    eax, eax
jnz     short loc_49c80c
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    0ch
mov     eax, [esp+arg_0]
mov     eax, [eax+30h]
cmp     eax, 0ffffffffh
jnz     short loc_49c844
mov     eax, 80040050h
retn    8
push    1
push    0
push    eax
call    ds:_llseek
cmp     eax, 0ffffffffh
jnz     short loc_49c85c
mov     eax, 80040053h
retn    8
mov     ecx, [esp+arg_4]
test    eax, eax
mov     [ecx], eax
mov     eax, 0
jge     short loc_49c870
mov     eax, 0ffffffffh
mov     [ecx+4], eax
xor     eax, eax
retn    8
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_49c450
add     esp, 4
push    esi
call    sub_49c460
add     esp, 4
mov     edx, [esi+30h]
cmp     edx, 0ffffffffh
jnz     short loc_49c8a8
mov     eax, 80040050h
pop     esi
retn    8
mov     ecx, [esp+4+arg_4]
mov     eax, [ecx+4]
test    eax, eax
jnz     short loc_49c8b9
test    byte ptr [ecx+3], 80h
jz      short loc_49c8c4
cmp     eax, 0ffffffffh
jnz     short loc_49c8df
test    byte ptr [ecx+3], 80h
jz      short loc_49c8df
push    0
mov     eax, [ecx]
push    eax
push    edx
call    ds:_llseek
inc     eax
pop     esi
cmp     eax, 1
sbb     eax, eax
and     eax, 80040053h
retn    8
mov     eax, 80040056h
pop     esi
retn    8
mov     eax, [esp+arg_0]
mov     eax, [eax+30h]
cmp     eax, 0ffffffffh
jnz     short loc_49c904
mov     eax, 80040050h
retn    8
push    2
push    0
push    eax
call    ds:_llseek
cmp     eax, 0ffffffffh
jnz     short loc_49c91c
mov     eax, 80040053h
retn    8
mov     ecx, [esp+arg_4]
test    eax, eax
mov     [ecx], eax
mov     eax, 0
jge     short loc_49c930
mov     eax, 0ffffffffh
mov     [ecx+4], eax
xor     eax, eax
retn    8
mov     eax, [esp+arg_0]
push    eax
call    sub_49c460
add     esp, 4
xor     eax, eax
retn    4
push    ebx
push    esi
mov     ebx, [esp+8+arg_0]
push    edi
push    34h
xor     edi, edi
push    ebx
mov     eax, [ebx]
call    dword ptr [eax+0ch]
mov     esi, eax
test    esi, esi
jz      short loc_49c9c5
mov     eax, [esp+0ch+arg_4]
mov     dword ptr [esi], offset off_4abb48
push    eax
mov     [esi+4], ebx
push    ebx
call    sub_497060
add     esp, 8
mov     [esi+18h], eax
mov     [esi+8], edi
mov     eax, [esp+0ch+arg_8]
push    esi
mov     [esi+0ch], eax
mov     [esi+10h], edi
mov     [esi+14h], edi
mov     [esi+1ch], edi
mov     [esi+20h], edi
mov     dword ptr [esi+30h], 0ffffffffh
mov     ebx, [esi]
call    dword ptr [ebx+4]
cmp     [esi+18h], edi
jnz     short loc_49c9c5
push    esi
mov     eax, [esi]
call    dword ptr [eax+8]
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 208h
push    ebx
push    esi
mov     esi, [esp+210h+arg_0]
push    edi
cmp     dword ptr [esi], 0
jnz     loc_49ca70
lea     eax, [esp+214h+dstbuf]
push    104h
push    eax
lea     edi, [esi+5]
call    __getcwd
lea     eax, [esp+21ch+buffer]
add     esp, 8
push    104h
push    edi
push    eax
call    __fullpath
lea     eax, [esp+220h+buffer]
add     esp, 0ch
push    5ch
push    eax
call    _strrchr
add     esp, 8
mov     ebx, eax
test    ebx, ebx
jz      short loc_49ca39
lea     eax, [esp+214h+buffer]
mov     byte ptr [ebx], 0
push    eax
call    __chdir
add     esp, 4
push    edi
call    ds:loadlibrarya
mov     [esi], eax
test    ebx, ebx
jz      short loc_49ca56
lea     eax, [esp+214h+dstbuf]
push    eax
call    __chdir
add     esp, 4
cmp     dword ptr [esi], 20h
ja      short loc_49ca70
mov     eax, 80040009h
pop     edi
mov     dword ptr [esi], 0
pop     esi
pop     ebx
add     esp, 208h
retn
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 208h
retn
push    esi
mov     ecx, 0ffffffffh
mov     esi, [esp+4+arg_4]
push    edi
mov     edi, esi
sub     eax, eax
repne scasb
not     ecx
mov     eax, [esp+8+arg_0]
add     ecx, 8
push    ecx
mov     eax, [eax]
push    eax
mov     eax, [eax]
call    dword ptr [eax+0ch]
mov     edx, eax
test    edx, edx
jnz     short loc_49cab1
mov     eax, 80040002h
pop     edi
pop     esi
retn
mov     edi, esi
mov     ecx, 0ffffffffh
sub     eax, eax
mov     dword ptr [edx], 0
mov     byte ptr [edx+4], 0
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
shr     ecx, 2
mov     esi, edi
lea     edi, [edx+5]
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     ecx, [esp+8+arg_c]
xor     eax, eax
pop     edi
pop     esi
mov     [ecx], edx
retn
mov     eax, [esp+arg_4]
push    esi
mov     esi, 0
test    eax, eax
jz      short loc_49cb00
mov     esi, [eax]
test    esi, esi
jz      short loc_49cb1e
mov     eax, [esi]
test    eax, eax
jz      short loc_49cb11
push    eax
call    ds:freelibrary
mov     eax, [esp+4+arg_0]
push    esi
mov     eax, [eax]
push    eax
mov     esi, [eax]
call    dword ptr [esi+10h]
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_4]
push    esi
call    sub_49c9d0
add     esp, 4
test    eax, eax
jnz     short loc_49cb48
mov     byte ptr [esi+4], 1
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_4]
cmp     dword ptr [eax], 0
jz      short loc_49cb62
cmp     byte ptr [eax+4], 0
jz      short loc_49cb62
xor     eax, eax
retn
mov     eax, 8004000ah
retn
push    esi
mov     esi, [esp+4+arg_4]
test    esi, esi
jnz     short loc_49cb80
mov     eax, 80040001h
pop     esi
retn
mov     eax, [esp+4+arg_0]
push    esi
push    eax
call    sub_49cb50
add     esp, 8
cmp     eax, 8004000ah
jnz     short loc_49cb9c
mov     eax, 8004000ah
pop     esi
retn
mov     eax, [esp+4+lpprocname]
mov     ecx, [esi]
push    eax
push    ecx
call    ds:getprocaddress
mov     ecx, [esp+4+arg_c]
cmp     eax, 1
pop     esi
mov     [ecx], eax
sbb     eax, eax
and     eax, 80040008h
retn
push    esi
mov     esi, [esp+4+arg_4]
test    esi, esi
jnz     short loc_49cbd0
mov     eax, 80040001h
pop     esi
retn
mov     eax, [esp+4+arg_0]
push    esi
push    eax
call    sub_49cb50
add     esp, 8
cmp     eax, 8004000ah
jnz     short loc_49cbe9
xor     eax, eax
pop     esi
retn
mov     byte ptr [esi+4], 0
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_4]
push    esi
call    sub_49c9d0
add     esp, 4
test    eax, eax
jnz     short loc_49cc3c
mov     eax, [esp+4+arg_8]
test    eax, eax
jz      short loc_49cc1e
mov     ecx, [esi]
mov     [eax], ecx
mov     eax, [esp+4+arg_10]
test    eax, eax
jz      short loc_49cc2c
mov     dword ptr [eax], 0
mov     eax, [esp+4+arg_c]
test    eax, eax
jz      short loc_49cc3a
mov     dword ptr [eax], 80h
xor     eax, eax
pop     esi
retn
xor     eax, eax
retn
push    eax
mov     eax, [esp+8]
and     eax, 7f800000h
cmp     eax, 7f800000h
jz      short loc_49d4cc
fnstsw  ax
and     eax, 3800h
jz      short loc_49d4af
fld     dword ptr [esp+8]
call    unknown_libname_4
pop     eax
retn    4
fxch    st(1)
sub     esp, 0ch
fstp    tbyte ptr [esp]
fld     dword ptr [esp+14h]
call    unknown_libname_4
fld     tbyte ptr [esp]
fxch    st(1)
add     esp, 0ch
pop     eax
retn    4
fdiv    dword ptr [esp+8]
pop     eax
retn    4
push    eax
fnstsw  ax
and     eax, 3800h
jz      short loc_49d537
fild    word ptr [esp+8]
call    unknown_libname_4
pop     eax
retn    4
fxch    st(1)
sub     esp, 0ch
fstp    tbyte ptr [esp]
fild    word ptr [esp+14h]
call    unknown_libname_4
fld     tbyte ptr [esp]
fxch    st(1)
add     esp, 0ch
pop     eax
retn    4
push    eax
fnstsw  ax
and     eax, 3800h
jz      short loc_49d56b
fild    dword ptr [esp+8]
call    unknown_libname_4
pop     eax
retn    4
fxch    st(1)
sub     esp, 0ch
fstp    tbyte ptr [esp]
fild    dword ptr [esp+14h]
call    unknown_libname_4
fld     tbyte ptr [esp]
fxch    st(1)
add     esp, 0ch
pop     eax
retn    4
push    eax
mov     eax, [esp+8]
and     eax, 7f800000h
cmp     eax, 7f800000h
jz      short loc_49d5cc
fnstsw  ax
and     eax, 3800h
jz      short loc_49d5af
fld     dword ptr [esp+8]
call    unknown_libname_5
pop     eax
retn    4
fxch    st(1)
sub     esp, 0ch
fstp    tbyte ptr [esp]
fld     dword ptr [esp+14h]
call    unknown_libname_5
fld     tbyte ptr [esp]
fxch    st(1)
add     esp, 0ch
pop     eax
retn    4
fdivr   dword ptr [esp+8]
pop     eax
retn    4
push    eax
mov     eax, [esp+0ch]
and     eax, 7ff00000h
cmp     eax, 7ff00000h
jz      short loc_49d618
fnstsw  ax
and     eax, 3800h
jz      short loc_49d5fb
fld     qword ptr [esp+8]
call    unknown_libname_5
pop     eax
retn    8
fxch    st(1)
sub     esp, 0ch
fstp    tbyte ptr [esp]
fld     qword ptr [esp+14h]
call    unknown_libname_5
fld     tbyte ptr [esp]
fxch    st(1)
add     esp, 0ch
pop     eax
retn    8
fdivr   qword ptr [esp+8]
pop     eax
retn    8
push    eax
fnstsw  ax
and     eax, 3800h
jz      short loc_49d637
fild    word ptr [esp+8]
call    unknown_libname_5
pop     eax
retn    4
fxch    st(1)
sub     esp, 0ch
fstp    tbyte ptr [esp]
fild    word ptr [esp+14h]
call    unknown_libname_5
fld     tbyte ptr [esp]
fxch    st(1)
add     esp, 0ch
pop     eax
retn    4
push    eax
sub     esp, 2ch
fstp    tbyte ptr [esp]
fstp    tbyte ptr [esp+0ch]
call    unknown_libname_2
add     esp, 2ch
pop     eax
retn
call    unknown_libname_17
retn
call    unknown_libname_19
retn
mov     edx, offset dword_4af588
jmp     __cintrindisp1
mov     edx, offset dword_4af568
jmp     short loc_49df4d
mov     edx, offset dword_4af5a8
jmp     short loc_49df4d
mov     eax, [esp+arg_0]
mov     dword_4af2c8, eax
retn
add     esp, 4
retn
mov     edx, offset dword_4af98c
jmp     short loc_49eb07
mov     edx, offset dword_4af9ac
jmp     short loc_49eb07
mov     edx, offset dword_4af9cc
jmp     __cintrindisp2
retn
mov     edx, [esp+4]
push    ebx
cmp     byte ptr [edx], 0
jz      short loc_49f54a
mov     eax, off_4af13c
mov     al, [eax]
cmp     [edx], al
jz      short loc_49f54a
inc     edx
cmp     byte ptr [edx], 0
jnz     short loc_49f540
mov     eax, edx
inc     edx
cmp     byte ptr [eax], 0
jz      short loc_49f58c
cmp     byte ptr [edx], 0
jz      short loc_49f567
mov     al, [edx]
cmp     al, 65h
jz      short loc_49f567
cmp     al, 45h
jz      short loc_49f567
inc     edx
cmp     byte ptr [edx], 0
jnz     short loc_49f557
mov     eax, edx
dec     edx
cmp     byte ptr [edx], 30h
jnz     short loc_49f575
dec     edx
cmp     byte ptr [edx], 30h
jz      short loc_49f56f
mov     ecx, off_4af13c
mov     bl, [edx]
cmp     [ecx], bl
jnz     short loc_49f582
dec     edx
inc     edx
mov     cl, [eax]
inc     eax
mov     [edx], cl
test    cl, cl
jnz     short loc_49f582
pop     ebx
retn
fldz
mov     eax, [esp+4]
fcomp   qword ptr [eax]
fnstsw  ax
sahf
mov     eax, 1
jbe     short locret_49f5a2
xor     eax, eax
retn
fstp    st
fstp    st
fld     tbyte_4af4d4
mov     byte ptr [ebp-90h], 2
retn
fldln2
fxch    st(1)
ftst
fstsw   word ptr [ebp-0a0h]
wait
test    byte ptr [ebp-9fh], 41h
jnz     short negytoxerror
fyl2x
retn
fstp    st
fstp    st
fstp    st
fstp    st
fld     tbyte_4af4d4
mov     byte ptr [ebp-90h], 3
retn
call    __rttosnpopde
call    __rttosnpopde
jmp     short __rtnospop
or      cl, cl
jz      short chsifnegret
fchs
push    ebp
push    esi
inc     ebx
xor     dh, [eax]
pop     eax
inc     ebx
xor     [eax], dh
push    ebp
mov     ecx, [esp+arg_0]
mov     ebp, esp
sub     esp, 8
cmp     ecx, 0ffh
push    edi
jbe     short loc_4a2203
lea     edi, [ebp+var_8+2]
xor     eax, eax
mov     word ptr [ebp+var_8], 0
stosw
mov     eax, codepage
mov     [ebp+multibytestr], ch
mov     [ebp+var_1], cl
test    eax, eax
jnz     short loc_4a21cd
xor     eax, eax
jmp     short loc_4a2225
lea     edx, [ebp+var_8]
lea     ecx, [ebp+multibytestr]
push    dword_4afb28
push    eax
push    edx
push    2
push    ecx
push    1
call    ___crtgetstringtypea
add     esp, 18h
test    eax, eax
jnz     short loc_4a21f0
xor     eax, eax
jmp     short loc_4a2225
cmp     word ptr [ebp+var_8+2], 0
jnz     short loc_4a21ff
test    word ptr [ebp+var_8], 103h
jnz     short loc_4a2220
xor     eax, eax
jmp     short loc_4a2225
movzx   eax, cl
test    word ptr (__ctype+2)[eax*2], 103h
jnz     short loc_4a2220
test    byte_4afa21[eax], 1
mov     eax, 0
jz      short loc_4a2225
mov     eax, 1
pop     edi
mov     esp, ebp
pop     ebp
retn
add     esp, 4
retn
push    offset dword_4b01c8
push    [esp+4+arg_4]
push    [esp+8+arg_0]
call    __ld12cvt
add     esp, 0ch
retn
push    offset dword_4b01e0
push    [esp+4+arg_4]
push    [esp+8+arg_0]
call    __ld12cvt
add     esp, 0ch
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    0
lea     ecx, [ebp+var_4]
push    0
lea     edx, [ebp+var_10]
push    0
push    0
push    [ebp+arg_4]
push    ecx
push    edx
call    ___strgtold12
add     esp, 1ch
lea     edx, [ebp+var_10]
push    [ebp+arg_0]
push    edx
call    sub_4a2689
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    0
lea     ecx, [ebp+var_4]
push    0
lea     edx, [ebp+var_10]
push    0
push    0
push    [ebp+arg_4]
push    ecx
push    edx
call    ___strgtold12
add     esp, 1ch
lea     edx, [ebp+var_10]
push    [ebp+arg_0]
push    edx
call    sub_4a269f
mov     esp, ebp
pop     ebp
retn
add     esp, 4
retn
mov     dword_4b0540, 1
push    ebx
push    esi
push    edi
push    8000h
mov     edi, ds:seterrormode
call    edi
mov     ebx, eax
call    sub_4a4af0
mov     esi, eax
test    esi, esi
jnz     short loc_4a4adf
call    sub_4a4b60
mov     esi, eax
test    esi, esi
jz      short loc_4a4ac0
call    sub_4a4d20
push    ebx
call    edi
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
mov     esi, [esp+0ch+arg_0]
test    esi, esi
jz      short loc_4a4acf
call    sub_4a4c10
mov     [esi], eax
cmp     dword_4b054c, 1
jnz     short loc_4a4add
call    sub_4a52df
xor     esi, esi
push    ebx
call    edi
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
cmp     dword_4b0548, 0
jnz     short loc_4a4b56
push    offset aqtim32dll
call    ds:loadlibrarya
mov     dword_4b0548, eax
test    eax, eax
jz      short loc_4a4b3c
push    offset aentrypoint
push    eax
call    ds:getprocaddress
mov     off_4b0544, eax
test    eax, eax
jnz     short loc_4a4b56
mov     off_4b0544, offset sub_4a4fcc
mov     dword_4b0548, 0
mov     eax, 2
retn
mov     off_4b0544, offset sub_4a4fcc
mov     dword_4b0548, 0
mov     eax, 1
retn
xor     eax, eax
inc     dword_4b054c
retn
cmp     hlibmodule, 0
push    esi
jnz     loc_4a4bf7
push    offset acmgr32dll
call    ds:loadlibrarya
mov     hlibmodule, eax
test    eax, eax
jz      short loc_4a4bdc
push    offset aentrypoint
mov     esi, ds:getprocaddress
push    eax
call    esi
push    offset acmgrinitialize
mov     off_4b0550, eax
mov     eax, hlibmodule
push    eax
call    esi
cmp     off_4b0550, 0
jz      short loc_4a4bb5
test    eax, eax
jz      short loc_4a4bb5
call    eax
test    eax, eax
jz      short loc_4a4bf7
mov     off_4b0550, offset sub_4a4dec
mov     eax, hlibmodule
push    eax
call    ds:freelibrary
mov     eax, 2
pop     esi
mov     hlibmodule, 0
retn
mov     eax, 1
pop     esi
mov     off_4b0550, offset sub_4a4dec
mov     hlibmodule, 0
retn
xor     eax, eax
pop     esi
inc     dword_4b0558
retn
sub     esp, 914h
mov     [esp+914h+var_914], 0
push    ebx
push    esi
push    edi
push    ebp
push    offset aversiondll
call    ds:loadlibrarya
mov     esi, eax
test    esi, esi
jz      loc_4a4d0b
push    offset agetfileversion
mov     edi, ds:getprocaddress
push    esi
call    edi
mov     ebp, eax
push    offset agetfileversion_0
push    esi
call    edi
mov     ebx, eax
push    offset averqueryvaluea
push    esi
call    edi
mov     edi, eax
push    104h
lea     eax, [esp+928h+filename]
mov     ecx, dword_4b0548
push    eax
push    ecx
call    ds:getmodulefilenamea
test    eax, eax
jz      loc_4a4d04
test    ebp, ebp
jz      loc_4a4d04
test    ebx, ebx
jz      short loc_4a4d04
test    edi, edi
jz      short loc_4a4d04
lea     eax, [esp+924h+var_90c]
lea     ecx, [esp+924h+filename]
push    eax
push    ecx
call    ebp
test    eax, eax
jz      short loc_4a4d04
lea     ecx, [esp+924h+var_800]
lea     edx, [esp+924h+filename]
push    ecx
push    eax
mov     eax, dword ptr [esp+92ch+var_90c]
push    eax
push    edx
call    ebx
test    eax, eax
jz      short loc_4a4d04
lea     eax, [esp+924h+var_908]
lea     ecx, [esp+924h+var_910]
lea     edx, [esp+924h+var_800]
push    eax
push    ecx
push    offset szdelim
push    edx
call    edi
test    eax, eax
jz      short loc_4a4d04
mov     eax, [esp+924h+var_910]
mov     edx, [eax+10h]
mov     ecx, [eax+14h]
mov     eax, edx
shr     eax, 10h
movzx   edi, ax
shl     edi, 4
mov     eax, ecx
shr     eax, 10h
movzx   ebx, ax
movzx   eax, dx
add     edi, ebx
lea     edx, [eax+eax*4]
movzx   eax, cx
lea     edi, [edi+edx*2]
shl     edi, 8
add     eax, edi
mov     [esp+924h+var_914], eax
push    esi
call    ds:freelibrary
mov     eax, [esp+924h+var_914]
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 914h
retn
sub     esp, 94h
mov     eax, dword_4b054c
test    eax, eax
jle     short loc_4a4d83
dec     eax
mov     dword_4b054c, eax
jnz     short loc_4a4d83
call    sub_4a52ec
mov     [esp+94h+versioninformation.dwosversioninfosize], 94h
lea     eax, [esp+94h+versioninformation]
push    eax
call    ds:getversionexa
cmp     [esp+94h+versioninformation.dwplatformid], 2
jz      short loc_4a4d63
push    offset outputstring
call    ds:outputdebugstringa
jmp     short loc_4a4d6f
mov     eax, dword_4b0548
push    eax
call    ds:freelibrary
mov     dword_4b0548, 0
mov     off_4b0544, offset sub_4a4fcc
add     esp, 94h
retn
mov     eax, dword_4b0558
test    eax, eax
jle     short locret_4a4dd8
dec     eax
mov     dword_4b0558, eax
jnz     short locret_4a4dd8
push    offset acmgrterminate
mov     eax, hlibmodule
push    eax
call    ds:getprocaddress
test    eax, eax
jz      short loc_4a4db8
call    eax
mov     eax, hlibmodule
push    eax
call    ds:freelibrary
mov     hlibmodule, 0
mov     off_4b0550, offset sub_4a4dec
retn
call    sub_4a4d90
jmp     sub_4a4d20
cmp     word ptr dword_4b0540, 0
jnz     short loc_4a4e14
push    ax
push    bx
xor     cx, cx
push    cx
push    cx
call    sub_4a4a80
add     sp, 4
pop     bx
pop     ax
jmp     off_4b0550
mov     eax, 80008001h
retn
push    ebx
mov     bx, 0
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 1
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 2
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 3
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 4
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 5
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 6
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 7
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 8
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 9
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 0ah
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 0bh
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 0ch
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 0dh
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 0eh
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 0fh
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 10h
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 11h
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 12h
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 13h
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 14h
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 15h
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 16h
mov     ax, 1
call    off_4b0550
pop     ebx
retn
push    ebx
mov     bx, 17h
mov     ax, 1
call    off_4b0550
pop     ebx
retn
cmp     word ptr dword_4b0540, 0
jnz     short loc_4a4ff0
push    bx
xor     cx, cx
push    cx
push    cx
call    sub_4a4a80
add     sp, 4
pop     bx
jmp     off_4b0544
mov     dx, 8000h
mov     ax, 8001h
retn
push    ebx
mov     bx, 0
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 1
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 2
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 3
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 4
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 5
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 6
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 7
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 8
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 9
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 0ah
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 0bh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 0ch
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 0dh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 0eh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 0fh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 10h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 11h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 12h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 13h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 14h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 15h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 16h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 17h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 18h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 19h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 1ah
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 1bh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 1ch
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 1dh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 1eh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 1fh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 20h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 21h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 22h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 23h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 24h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 25h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 26h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 27h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 28h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 29h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 2ah
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 2bh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 2ch
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 2dh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 2eh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 2fh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 30h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 31h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 32h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 33h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 34h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 35h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 36h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 37h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 38h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 39h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 3ah
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 3bh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 3ch
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 3dh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 3eh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 3fh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 40h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 41h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 42h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 43h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 44h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 45h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 46h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 47h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 48h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 49h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 4ah
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 4bh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 4ch
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 4dh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 4eh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 4fh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 50h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 51h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 52h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 53h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 54h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 55h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 56h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 57h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 58h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 59h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 5ah
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 5bh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 5ch
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 5dh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 5eh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 5fh
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 60h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 61h
call    off_4b0544
pop     ebx
retn
push    ebx
mov     bx, 62h
call    off_4b0544
pop     ebx
retn