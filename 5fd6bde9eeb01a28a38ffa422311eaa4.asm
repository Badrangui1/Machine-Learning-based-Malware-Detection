push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     eax, [edx]
push    esi
mov     esi, [ecx]
cmp     eax, esi
jnb     short loc_10001019
mov     al, 1
pop     esi
pop     ebp
retn    8
jbe     short loc_10001022
xor     al, al
pop     esi
pop     ebp
retn    8
mov     eax, 10h
mov     esi, [edx]
cmp     esi, [ecx]
jnz     short loc_10001049
sub     eax, 4
add     ecx, 4
add     edx, 4
cmp     eax, 4
jnb     short loc_10001027
xor     eax, eax
xor     edx, edx
test    eax, eax
sets    al
pop     esi
pop     ebp
retn    8
movzx   esi, byte ptr [ecx]
movzx   eax, byte ptr [edx]
sub     eax, esi
jnz     short loc_10001075
movzx   eax, byte ptr [edx+1]
movzx   esi, byte ptr [ecx+1]
sub     eax, esi
jnz     short loc_10001075
movzx   eax, byte ptr [edx+2]
movzx   esi, byte ptr [ecx+2]
sub     eax, esi
jnz     short loc_10001075
movzx   eax, byte ptr [edx+3]
movzx   ecx, byte ptr [ecx+3]
sub     eax, ecx
sar     eax, 1fh
or      eax, 1
xor     edx, edx
test    eax, eax
sets    al
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+8]
cmp     byte ptr [ecx+21h], 0
jnz     short loc_100010ab
nop
mov     eax, ecx
mov     ecx, [eax+8]
cmp     byte ptr [ecx+21h], 0
jz      short loc_100010a0
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
cmp     byte ptr [ecx+21h], 0
jnz     short loc_100010ca
mov     edi, edi
mov     eax, ecx
mov     ecx, [eax]
cmp     byte ptr [ecx+21h], 0
jz      short loc_100010c0
pop     ebp
retn
mov     eax, ecx
mov     edx, [eax]
cmp     byte ptr [edx+21h], 0
jnz     short locret_1000111a
mov     ecx, [edx+8]
cmp     byte ptr [ecx+21h], 0
jnz     short loc_100010fd
mov     edx, [ecx]
cmp     byte ptr [edx+21h], 0
jnz     short loc_100010fa
jmp     short loc_100010f0
mov     ecx, edx
mov     edx, [ecx]
cmp     byte ptr [edx+21h], 0
jz      short loc_100010f0
mov     [eax], ecx
retn
mov     edx, [edx+4]
cmp     byte ptr [edx+21h], 0
jnz     short loc_10001118
mov     ecx, [eax]
cmp     ecx, [edx+8]
jnz     short loc_10001118
mov     [eax], edx
mov     edx, [edx+4]
cmp     byte ptr [edx+21h], 0
jz      short loc_10001106
mov     [eax], edx
retn
mov     eax, ecx
mov     ecx, [eax]
cmp     byte ptr [ecx+21h], 0
jz      short loc_10001130
mov     ecx, [ecx+8]
mov     [eax], ecx
retn
mov     edx, [ecx]
cmp     byte ptr [edx+21h], 0
jnz     short loc_1000114f
mov     ecx, [edx+8]
cmp     byte ptr [ecx+21h], 0
jnz     short loc_10001171
mov     edx, ecx
mov     ecx, [edx+8]
cmp     byte ptr [ecx+21h], 0
jz      short loc_10001141
mov     [eax], edx
retn
mov     edx, [ecx+4]
cmp     byte ptr [edx+21h], 0
jnz     short loc_10001169
mov     ecx, [eax]
cmp     ecx, [edx]
jnz     short loc_10001169
mov     [eax], edx
mov     edx, [edx+4]
cmp     byte ptr [edx+21h], 0
jz      short loc_10001158
mov     ecx, [eax]
cmp     byte ptr [ecx+21h], 0
jnz     short locret_10001173
mov     [eax], edx
retn
mov     dword ptr [ecx], offset ??_7bad_alloc@std@@6b@
jmp     ds:??1exception@std@@uae@xz
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7bad_alloc@std@@6b@
call    ds:??1exception@std@@uae@xz
test    [ebp+arg_0], 1
jz      short loc_100011b1
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     eax, [ecx+4]
push    eax
call    ??3@yaxpax@z
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ecx+4]
push    edi
mov     edi, [eax+4]
cmp     byte ptr [edi+21h], 0
mov     [ebp+var_4], eax
jnz     loc_1000127d
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
lea     ecx, [ecx+0]
mov     ecx, [edi+0ch]
mov     eax, [ebx]
lea     esi, [edi+0ch]
cmp     ecx, eax
jb      short loc_10001234
ja      short loc_1000126d
mov     ecx, 10h
mov     edx, ebx
mov     eax, [esi]
cmp     eax, [edx]
jnz     short loc_10001239
sub     ecx, 4
add     edx, 4
add     esi, 4
cmp     ecx, 4
jnb     short loc_10001215
xor     ecx, ecx
test    ecx, ecx
sets    cl
test    cl, cl
jz      short loc_1000126d
mov     edi, [edi+8]
jmp     short loc_10001272
movzx   ecx, al
movzx   eax, byte ptr [edx]
sub     ecx, eax
jnz     short loc_10001265
movzx   ecx, byte ptr [esi+1]
movzx   eax, byte ptr [edx+1]
sub     ecx, eax
jnz     short loc_10001265
movzx   ecx, byte ptr [esi+2]
movzx   eax, byte ptr [edx+2]
sub     ecx, eax
jnz     short loc_10001265
movzx   ecx, byte ptr [esi+3]
movzx   edx, byte ptr [edx+3]
sub     ecx, edx
sar     ecx, 1fh
or      ecx, 1
jmp     short loc_1000122b
mov     [ebp+var_4], edi
mov     edi, [edi]
cmp     byte ptr [edi+21h], 0
jz      short loc_10001200
mov     eax, [ebp+var_4]
pop     esi
pop     ebx
pop     edi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     eax, [edx+8]
push    esi
mov     esi, [eax]
mov     [edx+8], esi
mov     esi, [eax]
cmp     byte ptr [esi+21h], 0
jnz     short loc_100012aa
mov     [esi+4], edx
mov     esi, [edx+4]
mov     [eax+4], esi
mov     ecx, [ecx+4]
pop     esi
cmp     edx, [ecx+4]
jnz     short loc_100012c5
mov     [ecx+4], eax
mov     [eax], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     ecx, [edx+4]
cmp     edx, [ecx]
jnz     short loc_100012d7
mov     [ecx], eax
mov     [eax], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     [ecx+8], eax
mov     [eax], edx
mov     [edx+4], eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     eax, [edx]
push    esi
mov     esi, [eax+8]
mov     [edx], esi
mov     esi, [eax+8]
cmp     byte ptr [esi+21h], 0
jnz     short loc_1000130a
mov     [esi+4], edx
mov     esi, [edx+4]
mov     [eax+4], esi
mov     ecx, [ecx+4]
pop     esi
cmp     edx, [ecx+4]
jnz     short loc_10001326
mov     [ecx+4], eax
mov     [eax+8], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     ecx, [edx+4]
cmp     edx, [ecx+8]
jnz     short loc_1000133b
mov     [ecx+8], eax
mov     [eax+8], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     [ecx], eax
mov     [eax+8], edx
mov     [edx+4], eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
push    eax
mov     esi, ecx
call    ds:__imp_??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7bad_alloc@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
cmp     byte ptr [edi+21h], 0
mov     ebx, ecx
mov     esi, edi
jnz     short loc_100013a1
mov     eax, [esi+8]
push    eax
mov     ecx, ebx
call    sub_10001370
mov     esi, [esi]
push    edi
call    ??3@yaxpax@z
add     esp, 4
cmp     byte ptr [esi+21h], 0
mov     edi, esi
jz      short loc_10001383
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
mov     ebx, [ebp+arg_4]
cmp     byte ptr [ebx+21h], 0
push    esi
push    edi
mov     [ebp+var_4], ecx
jz      short loc_100013d0
push    offset ainvalidmapsett
call    ds:?_xout_of_range@std@@yaxpbd@z
lea     ecx, [ebp+arg_4]
mov     [ebp+var_8], ebx
call    sub_100010d0
mov     ecx, [ebx]
cmp     byte ptr [ecx+21h], 0
jz      short loc_100013e8
mov     edi, [ebx+8]
jmp     short loc_100013ff
mov     eax, [ebx+8]
cmp     byte ptr [eax+21h], 0
jz      short loc_100013f5
mov     edi, ecx
jmp     short loc_100013ff
mov     eax, [ebp+arg_4]
mov     edi, [eax+8]
cmp     eax, ebx
jnz     short loc_10001471
cmp     byte ptr [edi+21h], 0
mov     esi, [ebx+4]
jnz     short loc_1000140b
mov     [edi+4], esi
mov     ecx, [ebp+var_4]
mov     eax, [ecx+4]
cmp     [eax+4], ebx
jnz     short loc_1000141b
mov     [eax+4], edi
jmp     short loc_10001426
cmp     [esi], ebx
jnz     short loc_10001423
mov     [esi], edi
jmp     short loc_10001426
mov     [esi+8], edi
mov     eax, [ecx+4]
cmp     [eax], ebx
jnz     short loc_10001448
cmp     byte ptr [edi+21h], 0
jz      short loc_10001437
mov     eax, esi
jmp     short loc_10001443
push    edi
call    sub_100010b0
mov     ecx, [ebp+var_4]
add     esp, 4
mov     edx, [ecx+4]
mov     [edx], eax
mov     ecx, [ecx+4]
mov     [ebp+var_c], ecx
cmp     [ecx+8], ebx
jnz     short loc_100014cb
cmp     byte ptr [edi+21h], 0
jz      short loc_10001460
mov     eax, esi
mov     [ecx+8], eax
jmp     short loc_100014cb
push    edi
call    sub_10001090
mov     ecx, [ebp+var_c]
add     esp, 4
mov     [ecx+8], eax
jmp     short loc_100014cb
mov     [ecx+4], eax
mov     ecx, [ebx]
mov     [eax], ecx
cmp     eax, [ebx+8]
jnz     short loc_10001481
mov     esi, eax
jmp     short loc_1000149b
cmp     byte ptr [edi+21h], 0
mov     esi, [eax+4]
jnz     short loc_1000148d
mov     [edi+4], esi
mov     [esi], edi
mov     ecx, [ebx+8]
mov     [eax+8], ecx
mov     edx, [ebx+8]
mov     [edx+4], eax
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+4]
cmp     [ecx+4], ebx
jnz     short loc_100014ab
mov     [ecx+4], eax
jmp     short loc_100014b9
mov     ecx, [ebx+4]
cmp     [ecx], ebx
jnz     short loc_100014b6
mov     [ecx], eax
jmp     short loc_100014b9
mov     [ecx+8], eax
mov     edx, [ebx+4]
mov     [eax+4], edx
mov     dl, [ebx+20h]
mov     cl, [eax+20h]
mov     [eax+20h], dl
mov     [ebx+20h], cl
mov     eax, [ebp+var_8]
mov     bl, 1
cmp     [eax+20h], bl
jnz     loc_100015db
mov     ecx, [ebp+var_4]
mov     edx, [ecx+4]
cmp     edi, [edx+4]
jz      loc_100015d8
jmp     short loc_100014f0
cmp     [edi+20h], bl
jnz     loc_100015d8
mov     eax, [esi]
cmp     edi, eax
jnz     short loc_10001564
mov     eax, [esi+8]
cmp     byte ptr [eax+20h], 0
jnz     short loc_1000151b
mov     [eax+20h], bl
push    esi
mov     byte ptr [esi+20h], 0
call    sub_10001290
mov     eax, [esi+8]
mov     ecx, [ebp+var_4]
cmp     byte ptr [eax+21h], 0
jnz     short loc_10001595
mov     edx, [eax]
cmp     [edx+20h], bl
jnz     short loc_10001530
mov     edx, [eax+8]
cmp     [edx+20h], bl
jz      short loc_10001591
mov     edx, [eax+8]
cmp     [edx+20h], bl
jnz     short loc_1000154d
mov     edx, [eax]
mov     [edx+20h], bl
push    eax
mov     byte ptr [eax+20h], 0
call    sub_100012f0
mov     eax, [esi+8]
mov     ecx, [ebp+var_4]
mov     dl, [esi+20h]
mov     [eax+20h], dl
mov     [esi+20h], bl
mov     eax, [eax+8]
push    esi
mov     [eax+20h], bl
call    sub_10001290
jmp     short loc_100015d8
cmp     byte ptr [eax+20h], 0
jnz     short loc_1000157c
mov     [eax+20h], bl
push    esi
mov     byte ptr [esi+20h], 0
call    sub_100012f0
mov     eax, [esi]
mov     ecx, [ebp+var_4]
cmp     byte ptr [eax+21h], 0
jnz     short loc_10001595
mov     edx, [eax+8]
cmp     [edx+20h], bl
jnz     short loc_100015a8
mov     edx, [eax]
cmp     [edx+20h], bl
jnz     short loc_100015a8
mov     byte ptr [eax+20h], 0
mov     eax, [ecx+4]
mov     edi, esi
mov     esi, [esi+4]
cmp     edi, [eax+4]
jnz     loc_100014f0
jmp     short loc_100015d8
mov     edx, [eax]
cmp     [edx+20h], bl
jnz     short loc_100015c4
mov     edx, [eax+8]
mov     [edx+20h], bl
push    eax
mov     byte ptr [eax+20h], 0
call    sub_10001290
mov     eax, [esi]
mov     ecx, [ebp+var_4]
mov     dl, [esi+20h]
mov     [eax+20h], dl
mov     [esi+20h], bl
mov     eax, [eax]
push    esi
mov     [eax+20h], bl
call    sub_100012f0
mov     [edi+20h], bl
mov     ecx, [ebp+var_8]
push    ecx
call    ??3@yaxpax@z
mov     ecx, [ebp+var_4]
mov     eax, [ecx+8]
add     esp, 4
pop     edi
pop     esi
pop     ebx
test    eax, eax
jz      short loc_100015f8
dec     eax
mov     [ecx+8], eax
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     [eax], edx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ecx+8]
cmp     eax, 0ccccccbh
jb      short loc_10001634
mov     eax, [ebp+arg_c]
push    eax
call    ??3@yaxpax@z
add     esp, 4
push    offset amapsetttoolong
call    ds:?_xlength_error@std@@yaxpbd@z
inc     eax
push    ebx
mov     [ecx+8], eax
mov     eax, [ebp+arg_8]
push    edi
mov     edi, [ebp+arg_c]
mov     [edi+4], eax
mov     edx, [ecx+4]
xor     bl, bl
cmp     eax, edx
jnz     short loc_1000165c
mov     [edx+4], edi
mov     edx, [ecx+4]
mov     [edx], edi
mov     eax, [ecx+4]
mov     [eax+8], edi
jmp     short loc_1000167c
cmp     [ebp+arg_4], bl
jz      short loc_1000166e
mov     [eax], edi
mov     edx, [ecx+4]
cmp     eax, [edx]
jnz     short loc_1000167c
mov     [edx], edi
jmp     short loc_1000167c
mov     [eax+8], edi
mov     edx, [ecx+4]
cmp     eax, [edx+8]
jnz     short loc_1000167c
mov     [edx+8], edi
mov     edx, [edi+4]
mov     eax, edi
cmp     [edx+20h], bl
jnz     loc_10001820
push    esi
jmp     short loc_10001690
mov     edx, [eax+4]
mov     esi, [edx+4]
cmp     edx, [esi]
jnz     loc_1000175f
mov     esi, [esi+8]
cmp     [esi+20h], bl
jnz     short loc_100016c2
mov     byte ptr [edx+20h], 1
mov     byte ptr [esi+20h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+20h], bl
mov     eax, [eax+4]
mov     eax, [eax+4]
jmp     loc_10001813
cmp     eax, [edx+8]
jnz     short loc_10001701
mov     eax, edx
mov     edx, [eax+8]
mov     esi, [edx]
mov     [eax+8], esi
mov     esi, [edx]
cmp     [esi+21h], bl
jnz     short loc_100016db
mov     [esi+4], eax
mov     esi, [eax+4]
mov     [edx+4], esi
mov     esi, [ecx+4]
cmp     eax, [esi+4]
jnz     short loc_100016ee
mov     [esi+4], edx
jmp     short loc_100016fc
mov     esi, [eax+4]
cmp     eax, [esi]
jnz     short loc_100016f9
mov     [esi], edx
jmp     short loc_100016fc
mov     [esi+8], edx
mov     [edx], eax
mov     [eax+4], edx
mov     edx, [eax+4]
mov     byte ptr [edx+20h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+20h], bl
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     esi, [edx]
mov     edi, [esi+8]
mov     [edx], edi
mov     edi, [esi+8]
cmp     [edi+21h], bl
jnz     short loc_10001729
mov     [edi+4], edx
mov     edi, [edx+4]
mov     [esi+4], edi
mov     edi, [ecx+4]
cmp     edx, [edi+4]
jnz     short loc_10001742
mov     [edi+4], esi
mov     [esi+8], edx
jmp     loc_1000180d
mov     edi, [edx+4]
cmp     edx, [edi+8]
jnz     short loc_10001755
mov     [edi+8], esi
mov     [esi+8], edx
jmp     loc_1000180d
mov     [edi], esi
mov     [esi+8], edx
jmp     loc_1000180d
mov     esi, [esi]
cmp     [esi+20h], bl
jnz     short loc_10001782
mov     byte ptr [edx+20h], 1
mov     byte ptr [esi+20h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+20h], bl
mov     eax, [eax+4]
mov     eax, [eax+4]
jmp     loc_10001813
cmp     eax, [edx]
jnz     short loc_100017c2
mov     eax, edx
mov     edx, [eax]
mov     esi, [edx+8]
mov     [eax], esi
mov     esi, [edx+8]
cmp     [esi+21h], bl
jnz     short loc_1000179a
mov     [esi+4], eax
mov     esi, [eax+4]
mov     [edx+4], esi
mov     esi, [ecx+4]
cmp     eax, [esi+4]
jnz     short loc_100017ad
mov     [esi+4], edx
jmp     short loc_100017bc
mov     esi, [eax+4]
cmp     eax, [esi+8]
jnz     short loc_100017ba
mov     [esi+8], edx
jmp     short loc_100017bc
mov     [esi], edx
mov     [edx+8], eax
mov     [eax+4], edx
mov     edx, [eax+4]
mov     byte ptr [edx+20h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+20h], bl
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     esi, [edx+8]
mov     edi, [esi]
mov     [edx+8], edi
mov     edi, [esi]
cmp     [edi+21h], bl
jnz     short loc_100017ea
mov     [edi+4], edx
mov     edi, [edx+4]
mov     [esi+4], edi
mov     edi, [ecx+4]
cmp     edx, [edi+4]
jnz     short loc_100017fd
mov     [edi+4], esi
jmp     short loc_1000180b
mov     edi, [edx+4]
cmp     edx, [edi]
jnz     short loc_10001808
mov     [edi], esi
jmp     short loc_1000180b
mov     [edi+8], esi
mov     [esi], edx
mov     edi, [ebp+arg_c]
mov     [edx+4], esi
mov     edx, [eax+4]
cmp     [edx+20h], bl
jz      loc_10001690
pop     esi
mov     eax, [ecx+4]
mov     ecx, [eax+4]
mov     eax, [ebp+arg_0]
mov     [eax], edi
pop     edi
mov     byte ptr [ecx+20h], 1
pop     ebx
pop     ebp
retn    10h
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     eax, [edi+4]
mov     ebx, [eax+4]
cmp     byte ptr [ebx+21h], 0
mov     esi, ebx
jnz     short loc_10001871
mov     ecx, [esi+8]
push    ecx
mov     ecx, edi
call    sub_10001370
mov     esi, [esi]
push    ebx
call    ??3@yaxpax@z
add     esp, 4
cmp     byte ptr [esi+21h], 0
mov     ebx, esi
jz      short loc_10001853
mov     eax, [edi+4]
mov     [eax+4], eax
mov     eax, [edi+4]
mov     [eax], eax
mov     eax, [edi+4]
mov     [eax+8], eax
mov     dword ptr [edi+8], 0
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ebp+arg_8]
push    esi
mov     esi, ecx
mov     eax, [esi+4]
mov     ecx, [ebp+arg_4]
cmp     ecx, [eax]
jnz     short loc_100018c0
cmp     edx, eax
jnz     short loc_100018c0
mov     ecx, esi
call    sub_10001840
mov     eax, [esi+4]
mov     ecx, [eax]
mov     eax, [ebp+arg_0]
mov     [eax], ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
cmp     ecx, edx
jz      short loc_10001922
cmp     byte ptr [ecx+21h], 0
mov     edx, ecx
jnz     short loc_1000190e
mov     eax, [ecx+8]
cmp     byte ptr [eax+21h], 0
jnz     short loc_100018ef
mov     ecx, eax
mov     eax, [ecx]
cmp     byte ptr [eax+21h], 0
jnz     short loc_100018ea
nop
mov     ecx, eax
mov     eax, [ecx]
cmp     byte ptr [eax+21h], 0
jz      short loc_100018e0
mov     [ebp+arg_4], ecx
jmp     short loc_1000190e
mov     eax, [ecx+4]
cmp     byte ptr [eax+21h], 0
jnz     short loc_1000190b
cmp     ecx, [eax+8]
jnz     short loc_1000190b
mov     ecx, eax
mov     [ebp+arg_4], ecx
mov     eax, [eax+4]
cmp     byte ptr [eax+21h], 0
jz      short loc_100018f8
mov     [ebp+arg_4], eax
push    edx
lea     edx, [ebp+var_4]
push    edx
mov     ecx, esi
call    sub_100013b0
mov     ecx, [ebp+arg_4]
cmp     ecx, [ebp+arg_8]
jnz     short loc_100018c4
mov     eax, [ebp+arg_0]
mov     [eax], ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     eax, [edi+4]
mov     esi, [eax+4]
cmp     byte ptr [esi+21h], 0
mov     ecx, [ebp+arg_4]
mov     ebx, eax
mov     al, 1
mov     [ebp+var_4], al
jnz     short loc_1000198f
nop
cmp     byte ptr [ebp+arg_8], 0
lea     eax, [ecx+0ch]
mov     ebx, esi
mov     ecx, edi
jz      short loc_1000196e
push    eax
lea     eax, [esi+0ch]
push    eax
call    sub_10001000
test    al, al
setz    al
jmp     short loc_10001978
lea     edx, [esi+0ch]
push    edx
push    eax
call    sub_10001000
mov     [ebp+var_4], al
test    al, al
jz      short loc_10001983
mov     esi, [esi]
jmp     short loc_10001986
mov     esi, [esi+8]
cmp     byte ptr [esi+21h], 0
mov     ecx, [ebp+arg_4]
jz      short loc_10001950
mov     esi, ebx
mov     [ebp+arg_8], esi
test    al, al
jz      short loc_100019d0
mov     eax, [edi+4]
cmp     ebx, [eax]
jnz     short loc_100019c2
push    ecx
push    ebx
push    1
lea     ecx, [ebp+arg_8]
push    ecx
mov     ecx, edi
call    sub_10001610
mov     edx, [eax]
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     [eax], edx
mov     byte ptr [eax+4], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
lea     ecx, [ebp+arg_8]
call    sub_10001120
mov     esi, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
lea     eax, [ecx+0ch]
push    eax
lea     eax, [esi+0ch]
push    eax
mov     ecx, edi
call    sub_10001000
test    al, al
jz      short loc_10001a0b
mov     ecx, [ebp+arg_4]
mov     edx, dword ptr [ebp+var_4]
push    ecx
push    ebx
push    edx
lea     eax, [ebp+arg_8]
push    eax
mov     ecx, edi
call    sub_10001610
mov     ecx, [eax]
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     [eax], ecx
mov     byte ptr [eax+4], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     edx, [ebp+arg_4]
push    edx
call    ??3@yaxpax@z
mov     eax, [ebp+arg_0]
add     esp, 4
pop     edi
mov     [eax], esi
pop     esi
mov     byte ptr [eax+4], 0
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
push    ebx
mov     esi, ecx
call    sub_100011e0
mov     edi, [esi+4]
mov     [ebp+arg_4], eax
cmp     eax, edi
jz      short loc_10001a6f
add     eax, 0ch
push    eax
push    ebx
mov     ecx, esi
call    sub_10001000
test    al, al
jnz     short loc_10001a6f
lea     eax, [ebp+arg_4]
mov     ecx, [eax]
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     [eax], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     [ebp+var_4], edi
lea     eax, [ebp+var_4]
mov     ecx, [eax]
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     [eax], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
mov     esi, ecx
cmp     dword ptr [esi+8], 0
mov     eax, [esi+4]
push    edi
lea     ecx, [ebx+0ch]
jnz     short loc_10001ac4
mov     edi, [ebp+arg_0]
push    ebx
push    eax
push    1
push    edi
mov     ecx, esi
call    sub_10001610
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     edi, [ebp+arg_4]
cmp     edi, [eax]
jnz     short loc_10001af9
lea     edx, [edi+0ch]
push    edx
push    ecx
mov     ecx, esi
call    sub_10001000
test    al, al
jz      loc_10001c12
push    ebx
push    edi
mov     edi, [ebp+arg_0]
push    1
push    edi
mov     ecx, esi
call    sub_10001610
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
cmp     edi, eax
jnz     short loc_10001b2e
mov     edi, [eax+8]
push    ecx
lea     eax, [edi+0ch]
push    eax
mov     ecx, esi
call    sub_10001000
test    al, al
jz      loc_10001c12
push    ebx
push    edi
mov     edi, [ebp+arg_0]
push    0
push    edi
mov     ecx, esi
call    sub_10001610
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
lea     eax, [edi+0ch]
push    eax
push    ecx
mov     ecx, esi
call    sub_10001000
test    al, al
jz      short loc_10001b9c
lea     ecx, [ebp+arg_8]
mov     [ebp+arg_8], edi
call    sub_10001120
mov     ecx, [ebp+arg_8]
lea     eax, [ebx+0ch]
add     ecx, 0ch
push    eax
push    ecx
mov     ecx, esi
call    sub_10001000
test    al, al
jz      short loc_10001b9c
mov     eax, [ebp+arg_8]
mov     edx, [eax+8]
cmp     byte ptr [edx+21h], 0
push    ebx
mov     ecx, esi
jz      short loc_10001b85
mov     edi, [ebp+arg_0]
push    eax
push    0
push    edi
call    sub_10001610
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    edi
mov     edi, [ebp+arg_0]
push    1
push    edi
call    sub_10001610
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
lea     eax, [ebx+0ch]
push    eax
lea     eax, [edi+0ch]
push    eax
mov     ecx, esi
call    sub_10001000
test    al, al
jz      short loc_10001c12
lea     ecx, [ebp+arg_8]
mov     [ebp+arg_8], edi
call    sub_100010d0
mov     eax, [ebp+arg_8]
cmp     eax, [esi+4]
jz      short loc_10001bd8
add     eax, 0ch
push    eax
lea     eax, [ebx+0ch]
push    eax
mov     ecx, esi
call    sub_10001000
test    al, al
jz      short loc_10001c12
mov     eax, [ebp+arg_8]
mov     ecx, [edi+8]
cmp     byte ptr [ecx+21h], 0
push    ebx
mov     ecx, esi
jz      short loc_10001bfb
push    edi
mov     edi, [ebp+arg_0]
push    0
push    edi
call    sub_10001610
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     edi, [ebp+arg_0]
push    eax
push    1
push    edi
call    sub_10001610
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    0
push    ebx
lea     edx, [ebp+var_8]
push    edx
mov     ecx, esi
call    sub_10001930
mov     ecx, [eax]
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     [eax], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
push    24h
mov     esi, ecx
call    ??2@yapaxi@z
xor     edx, edx
add     esp, 4
cmp     eax, edx
jz      short loc_10001c8b
mov     ecx, [esi+4]
mov     [eax], ecx
mov     ecx, [esi+4]
mov     [eax+4], ecx
mov     ecx, [esi+4]
mov     [eax+8], ecx
lea     ecx, [eax+0ch]
mov     [eax+20h], dx
cmp     ecx, edx
jz      short loc_10001c84
mov     edx, [ebp+arg_0]
mov     esi, [edx]
mov     [ecx], esi
mov     esi, [edx+4]
mov     [ecx+4], esi
mov     esi, [edx+8]
mov     [ecx+8], esi
mov     esi, [edx+0ch]
mov     [ecx+0ch], esi
mov     edx, [edx+10h]
mov     [ecx+10h], edx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
lea     eax, [ebp+arg_0]
push    eax
lea     ecx, [ebp+pexceptionobject]
mov     [ebp+arg_0], edx
call    ds:??0exception@std@@qae@abqbd@z
push    offset __ti2?avbad_alloc@std@@
lea     ecx, [ebp+pexceptionobject]
push    ecx
mov     [ebp+pexceptionobject], offset ??_7bad_alloc@std@@6b@
call    _cxxthrowexception
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001cc0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_10], esi
mov     eax, [esi+4]
mov     ecx, [eax]
push    eax
push    ecx
lea     eax, [ebp+var_14]
push    eax
mov     ecx, esi
mov     [ebp+var_4], 0
call    sub_10001890
mov     ecx, [esi+4]
push    ecx
call    ??3@yaxpax@z
add     esp, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001cc0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
lea     esi, [ecx+4]
mov     dword ptr [ecx], offset ??_7cqpobjcenter@@6b@
mov     [ebp+var_10], esi
mov     eax, [esi+4]
mov     ecx, [eax]
push    eax
push    ecx
lea     eax, [ebp+var_14]
push    eax
mov     ecx, esi
mov     [ebp+var_4], 0
call    sub_10001890
mov     ecx, [esi+4]
push    ecx
call    ??3@yaxpax@z
add     esp, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    esi
mov     edi, ecx
call    sub_100011e0
mov     ebx, eax
cmp     ebx, [edi+4]
jz      short loc_10001dbb
lea     eax, [ebx+0ch]
push    eax
push    esi
mov     ecx, edi
call    sub_10001000
test    al, al
jz      short loc_10001e00
mov     ecx, [esi]
mov     edx, [esi+4]
mov     eax, [esi+8]
mov     [ebp+var_14], ecx
mov     ecx, [esi+0ch]
mov     [ebp+var_10], edx
lea     edx, [ebp+var_14]
mov     [ebp+var_8], ecx
push    edx
mov     ecx, edi
mov     [ebp+var_c], eax
mov     [ebp+var_4], 0
call    sub_10001c30
push    eax
push    ebx
lea     eax, [ebp+arg_0]
push    eax
mov     ecx, edi
call    sub_10001a90
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
add     eax, 1ch
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
pop     edi
pop     esi
lea     eax, [ebx+1ch]
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001e10
mov     eax, large fs:0
push    eax
sub     esp, 14h
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+var_14], edi
mov     dword ptr [edi], offset ??_7cqpobjcenter@@6b@
push    24h
mov     dword ptr [edi+0ch], 0
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_10001e98
mov     [edi+8], eax
mov     [eax], eax
mov     eax, [edi+8]
mov     [eax+4], eax
mov     eax, [edi+8]
mov     [eax+8], eax
mov     ecx, [edi+8]
mov     al, 1
mov     [ecx+20h], al
mov     edx, [edi+8]
mov     [edx+21h], al
lea     ecx, [edi+4]
mov     [ebp+var_4], 0
call    sub_10001840
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
lea     eax, [ebp+var_10]
push    eax
lea     ecx, [ebp+pexceptionobject]
mov     [ebp+var_10], 0
call    ds:??0exception@std@@qae@abqbd@z
push    offset __ti2?avbad_alloc@std@@
lea     ecx, [ebp+pexceptionobject]
push    ecx
mov     [ebp+pexceptionobject], offset ??_7bad_alloc@std@@6b@
call    _cxxthrowexception
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001ed0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
lea     esi, [edi+4]
mov     dword ptr [edi], offset ??_7cqpobjcenter@@6b@
mov     [ebp+var_10], esi
mov     eax, [esi+4]
mov     ecx, [eax]
push    eax
push    ecx
lea     eax, [ebp+var_14]
push    eax
mov     ecx, esi
mov     [ebp+var_4], 0
call    sub_10001890
mov     ecx, [esi+4]
push    ecx
call    ??3@yaxpax@z
add     esp, 4
test    byte ptr [ebp+arg_0], 1
jz      short loc_10001f39
push    edi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_8]
mov     esi, ecx
test    edi, edi
jz      loc_10002020
cmp     [ebp+lpmodulename], 0
jz      loc_10002020
mov     eax, [ebp+arg_0]
push    ebx
push    eax
lea     ecx, [ebp+arg_8]
lea     ebx, [esi+4]
push    ecx
mov     ecx, ebx
mov     dword ptr [edi], 0
call    sub_10001a30
mov     eax, [ebp+arg_8]
cmp     eax, [esi+8]
jz      short loc_10001f9e
mov     edx, [eax+1ch]
mov     [edi], edx
pop     ebx
pop     edi
mov     eax, 1
pop     esi
pop     ebp
retn    0ch
mov     esi, [ebp+lpmodulename]
push    esi
call    ds:getmodulehandlew
test    eax, eax
jnz     short loc_10001fc6
push    esi
call    ds:loadlibraryw
test    eax, eax
jnz     short loc_10001fc6
call    ds:getlasterror
pop     ebx
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn    0ch
push    offset agetclassfactor
push    eax
call    ds:getprocaddress
test    eax, eax
jz      short loc_10001f92
lea     ecx, [ebp+lpmodulename]
push    ecx
mov     [ebp+lpmodulename], 0
call    eax
mov     ecx, [ebp+lpmodulename]
add     esp, 4
test    ecx, ecx
jz      short loc_10001ff8
mov     edx, [ecx]
mov     eax, [ebp+arg_0]
mov     edx, [edx]
push    edi
push    eax
call    edx
test    eax, eax
jnz     short loc_10002005
pop     ebx
mov     [edi], eax
pop     edi
pop     esi
pop     ebp
retn    0ch
mov     eax, [ebp+arg_0]
push    eax
mov     ecx, ebx
call    sub_10001d90
mov     ecx, [edi]
pop     ebx
pop     edi
mov     [eax], ecx
mov     eax, 1
pop     esi
pop     ebp
retn    0ch
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
test    ecx, ecx
jz      short loc_1000204c
mov     eax, dword_10013588
test    eax, eax
jz      short loc_1000204c
mov     [ecx], eax
mov     eax, 1
pop     ebp
retn
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10002050
mov     eax, large fs:0
push    eax
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
test    byte ptr dword_100135a0, 1
jnz     short loc_100020a0
or      dword_100135a0, 1
mov     ecx, offset dword_1001358c
mov     [ebp+var_4], 0
call    sub_10001e10
push    offset sub_1000e4d0
call    _atexit
add     esp, 4
mov     eax, 1
mov     dword_10013588, offset dword_1001358c
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+pexceptionobject]
push    offset __ti1?avcatlexception@atl@@
lea     ecx, [ebp+pexceptionobject]
push    ecx
mov     [ebp+pexceptionobject], eax
call    _cxxthrowexception
call    ds:getlasterror
test    eax, eax
jle     short loc_100020f4
and     eax, 0ffffh
or      eax, 80070000h
push    eax
call    sub_100020c0
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+hmodule]
push    edi
mov     edi, [ebp+hresinfo]
push    edi
push    ebx
call    ds:loadresource
test    eax, eax
jnz     short loc_1000211b
pop     edi
pop     ebx
pop     ebp
retn
push    esi
push    eax
call    ds:lockresource
mov     esi, eax
test    esi, esi
jz      short loc_10002152
push    edi
push    ebx
call    ds:sizeofresource
mov     ecx, [ebp+arg_8]
add     eax, esi
and     ecx, 0fh
jbe     short loc_1000214e
jmp     short loc_10002140
cmp     esi, eax
jnb     short loc_10002152
dec     ecx
movzx   edx, word ptr [esi]
lea     esi, [esi+edx*2+2]
jnz     short loc_10002140
cmp     esi, eax
jb      short loc_10002159
pop     esi
pop     edi
xor     eax, eax
pop     ebx
pop     ebp
retn
movzx   eax, word ptr [esi]
neg     eax
sbb     eax, eax
and     eax, esi
pop     esi
pop     edi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
xor     edi, edi
push    edi
mov     ecx, offset dword_10013848
call    sub_1000cd06
mov     esi, eax
mov     [ebp+var_4], 1
test    esi, esi
jz      short loc_100021db
mov     ebx, [ebp+arg_0]
test    edi, edi
jnz     short loc_100021db
mov     eax, dword ptr [ebp+wlanguage]
mov     ecx, ebx
shr     ecx, 4
inc     ecx
push    eax
movzx   edx, cx
push    edx
push    6
push    esi
call    ds:findresourceexw
test    eax, eax
jz      short loc_100021c4
push    ebx
push    eax
push    esi
call    sub_10002100
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     short loc_100021e4
mov     eax, [ebp+var_4]
push    eax
mov     ecx, offset dword_10013848
call    sub_1000cd06
inc     [ebp+var_4]
mov     esi, eax
test    esi, esi
jnz     short loc_10002194
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    ds:getlasterror
test    eax, eax
jle     short locret_10002204
and     eax, 0ffffh
or      eax, 80070000h
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     edx, [ebp+arg_4]
mov     eax, [ebp+ldistancetomove]
mov     [ebp+distancetomovehigh], edx
mov     edx, [ebp+dwmovemethod]
push    edx
lea     edx, [ebp+distancetomovehigh]
push    edx
push    eax
mov     [ebp+var_8], eax
mov     eax, [ecx]
push    eax
call    ds:setfilepointer
cmp     eax, 0ffffffffh
jnz     short loc_10002242
call    sub_100021f0
test    eax, eax
js      short loc_10002244
xor     eax, eax
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
xor     eax, eax
lea     edx, [ebp+fileinformation]
push    edx
push    eax
push    ecx
mov     [ebp+fileinformation], eax
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
mov     [ebp+var_1c], eax
mov     [ebp+var_18], eax
mov     [ebp+var_14], eax
mov     [ebp+var_10], eax
mov     [ebp+var_c], eax
mov     [ebp+var_8], eax
call    ds:getfileattributesexw
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_c]
mov     eax, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
cmp     dword ptr [esi], 0
jz      short loc_100022f4
push    offset modulename
call    ds:getmodulehandlew
test    eax, eax
jz      short loc_1000231f
push    offset procname
push    eax
call    ds:getprocaddress
test    eax, eax
jz      short loc_1000231f
mov     ecx, [esi]
mov     edx, [ebp+arg_18]
push    0
push    0
push    ecx
mov     ecx, [ebp+dwflagsandattributes]
push    edx
mov     edx, [ebp+dwcreationdisposition]
push    ecx
mov     ecx, [ebp+lpsecurityattributes]
push    edx
mov     edx, [ebp+dwsharemode]
push    ecx
mov     ecx, [ebp+dwdesiredaccess]
push    edx
mov     edx, [ebp+lpfilename]
push    ecx
push    edx
call    eax
pop     esi
pop     ebp
retn    1ch
cmp     dword ptr [esi+4], 0
jz      short loc_1000231f
mov     eax, [ebp+dwflagsandattributes]
mov     ecx, [ebp+dwcreationdisposition]
mov     edx, [ebp+lpsecurityattributes]
push    0
push    eax
mov     eax, [ebp+dwsharemode]
push    ecx
mov     ecx, [ebp+dwdesiredaccess]
push    edx
mov     edx, [ebp+lpfilename]
push    eax
push    ecx
push    edx
call    ds:createfilew
pop     esi
pop     ebp
retn    1ch
or      eax, 0ffffffffh
pop     esi
pop     ebp
retn    1ch
push    esi
mov     esi, ecx
mov     ecx, [esi]
xor     eax, eax
test    ecx, ecx
jz      short loc_10002351
push    ecx
call    ds:regclosekey
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
pop     esi
retn
mov     [esi+4], eax
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     ebx, ecx
mov     esi, [ebx+8]
push    edi
mov     edi, [ebp+samdesired]
mov     [ebp+phkresult], 0
test    esi, esi
jz      short loc_100023ca
cmp     dword ptr [esi], 0
jz      short loc_100023bd
push    offset aadvapi32dll_0
call    ds:getmodulehandlew
test    eax, eax
jnz     short loc_10002395
mov     eax, 1
jmp     short loc_100023df
push    offset aregopenkeytran
push    eax
call    ds:getprocaddress
test    eax, eax
jz      short loc_100023c3
mov     ecx, [esi]
push    0
push    ecx
mov     ecx, [ebp+lpsubkey]
lea     edx, [ebp+phkresult]
push    edx
mov     edx, [ebp+hkey]
push    edi
push    0
push    ecx
push    edx
call    eax
jmp     short loc_100023df
cmp     dword ptr [esi+4], 0
jnz     short loc_100023ca
mov     eax, 1
jmp     short loc_100023df
mov     ecx, [ebp+lpsubkey]
mov     edx, [ebp+hkey]
lea     eax, [ebp+phkresult]
push    eax
push    edi
push    0
push    ecx
push    edx
call    ds:regopenkeyexw
test    eax, eax
jnz     short loc_10002404
mov     ecx, [ebx]
test    ecx, ecx
jz      short loc_100023f6
push    ecx
call    ds:regclosekey
mov     dword ptr [ebx], 0
mov     ecx, [ebp+phkresult]
and     edi, 300h
mov     [ebx], ecx
mov     [ebx+4], edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    8007000eh
call    sub_100020c0
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ecx]
mov     ebx, [esi-0ch]
sub     esi, 10h
mov     [ebp+var_4], ecx
mov     ecx, [esi]
mov     eax, [ecx]
mov     edx, [eax+10h]
push    edi
call    edx
mov     ecx, [ebp+arg_0]
mov     edx, [eax]
mov     edx, [edx]
push    2
push    ecx
mov     ecx, eax
call    edx
mov     edi, eax
test    edi, edi
jnz     short loc_10002454
call    sub_10002410
mov     eax, [ebp+arg_0]
cmp     ebx, eax
jge     short loc_1000245d
mov     eax, ebx
lea     eax, [eax+eax+2]
push    eax
lea     edx, [esi+10h]
push    edx
lea     ecx, [edi+10h]
push    eax
push    ecx
mov     [ebp+arg_0], ecx
call    ds:memcpy_s
add     esp, 10h
mov     [edi+4], ebx
lea     eax, [esi+0ch]
or      ecx, 0ffffffffh
lock xadd [eax], ecx
dec     ecx
test    ecx, ecx
jg      short loc_10002493
mov     ecx, [esi]
mov     edx, [ecx]
mov     eax, [edx+4]
push    esi
call    eax
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+var_4]
pop     edi
pop     esi
mov     [edx], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    esi
mov     esi, ecx
mov     eax, [esi]
mov     ecx, [eax-10h]
sub     eax, 10h
cmp     [eax+8], edx
jge     short loc_100024db
test    edx, edx
jle     short loc_100024db
push    edi
mov     edi, [ecx]
push    2
push    edx
push    eax
mov     eax, [edi+8]
call    eax
pop     edi
test    eax, eax
jnz     short loc_100024e0
call    sub_10002410
add     eax, 10h
mov     [esi], eax
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ecx]
mov     ebx, [esi-0ch]
sub     esi, 10h
mov     [ebp+var_4], ecx
mov     ecx, [esi]
mov     eax, [ecx]
mov     edx, [eax+10h]
push    edi
call    edx
mov     ecx, [ebp+arg_0]
mov     edx, [eax]
mov     edx, [edx]
push    1
push    ecx
mov     ecx, eax
call    edx
mov     edi, eax
test    edi, edi
jnz     short loc_10002524
call    sub_10002410
mov     eax, [ebp+arg_0]
cmp     ebx, eax
jge     short loc_1000252d
mov     eax, ebx
inc     eax
push    eax
lea     edx, [esi+10h]
push    edx
lea     ecx, [edi+10h]
push    eax
push    ecx
mov     [ebp+arg_0], ecx
call    ds:memcpy_s
add     esp, 10h
mov     [edi+4], ebx
lea     eax, [esi+0ch]
or      ecx, 0ffffffffh
lock xadd [eax], ecx
dec     ecx
test    ecx, ecx
jg      short loc_10002560
mov     ecx, [esi]
mov     edx, [ecx]
mov     eax, [edx+4]
push    esi
call    eax
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+var_4]
pop     edi
pop     esi
mov     [edx], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    esi
mov     esi, ecx
mov     eax, [esi]
mov     ecx, [eax-10h]
sub     eax, 10h
cmp     [eax+8], edx
jge     short loc_100025ab
test    edx, edx
jle     short loc_100025ab
push    edi
mov     edi, [ecx]
push    1
push    edx
push    eax
mov     eax, [edi+8]
call    eax
pop     edi
test    eax, eax
jnz     short loc_100025b0
call    sub_10002410
add     eax, 10h
mov     [esi], eax
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
test    esi, esi
jnz     short loc_100025d6
push    80070057h
call    sub_100020c0
mov     ecx, [ebp+count]
test    ecx, ecx
jns     short loc_100025e7
push    80070057h
call    sub_100020c0
mov     edi, [ebp+arg_8]
test    edi, edi
jnz     short loc_100025f8
push    80070057h
call    sub_100020c0
mov     eax, [esi]
cmp     eax, edi
jz      short loc_1000263b
cmp     ecx, [ebp+arg_c]
jle     short loc_1000261e
push    2
push    ecx
push    eax
call    ds:_recalloc
add     esp, 0ch
test    eax, eax
jnz     short loc_1000264c
push    8007000eh
call    sub_100020c0
push    eax
call    ds:__imp_free
add     esp, 4
mov     [esi], edi
cmp     dword ptr [esi], 0
pop     edi
pop     esi
jnz     short loc_10002650
push    8007000eh
call    sub_100020c0
cmp     ecx, [ebp+arg_c]
jle     short loc_10002628
push    2
push    ecx
call    ds:calloc
add     esp, 8
mov     [esi], eax
jmp     short loc_1000262a
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
test    esi, esi
jnz     short loc_10002676
push    80070057h
call    sub_100020c0
mov     ecx, [ebp+count]
test    ecx, ecx
jns     short loc_10002687
push    80070057h
call    sub_100020c0
mov     edi, [ebp+arg_8]
test    edi, edi
jnz     short loc_10002698
push    80070057h
call    sub_100020c0
mov     eax, [esi]
cmp     eax, edi
jz      short loc_100026db
cmp     ecx, [ebp+arg_c]
jle     short loc_100026be
push    1
push    ecx
push    eax
call    ds:_recalloc
add     esp, 0ch
test    eax, eax
jnz     short loc_100026ec
push    8007000eh
call    sub_100020c0
push    eax
call    ds:__imp_free
add     esp, 4
mov     [esi], edi
cmp     dword ptr [esi], 0
pop     edi
pop     esi
jnz     short loc_100026f0
push    8007000eh
call    sub_100020c0
cmp     ecx, [ebp+arg_c]
jle     short loc_100026c8
push    1
push    ecx
call    ds:calloc
add     esp, 8
mov     [esi], eax
jmp     short loc_100026ca
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+n]
push    esi
mov     esi, [ebp+s2]
cmp     eax, 0ffffffffh
jnz     short loc_10002724
mov     eax, esi
lea     edx, [eax+2]
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_10002714
sub     eax, edx
sar     eax, 1
inc     eax
mov     ecx, [ebp+s1]
push    eax
mov     eax, [ebp+n1]
push    esi
push    eax
push    ecx
call    wmemcpy_s
add     esp, 10h
pop     esi
cmp     eax, 50h
ja      short def_10002743
movzx   edx, ds:byte_1000277c[eax]
jmp     ds:jpt_10002743[edx*4]
push    8007000eh
call    sub_100020c0
push    80070057h
call    sub_100020c0
push    80004005h
call    sub_100020c0
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+dwflagsandattributes]
push    esi
mov     esi, ecx
mov     ecx, [esi+4]
test    ecx, ecx
jz      short loc_10002800
mov     eax, [ebp+htemplatefile]
push    eax
mov     eax, [ebp+dwcreationdisposition]
push    edx
mov     edx, [ebp+lpsecurityattributes]
push    eax
mov     eax, [ebp+dwsharemode]
push    edx
mov     edx, [ebp+dwdesiredaccess]
push    eax
mov     eax, [ebp+lpfilename]
push    edx
push    eax
call    sub_100022a0
jmp     short loc_1000281f
mov     ecx, [ebp+htemplatefile]
mov     eax, [ebp+dwcreationdisposition]
push    ecx
mov     ecx, [ebp+lpsecurityattributes]
push    edx
mov     edx, [ebp+dwsharemode]
push    eax
mov     eax, [ebp+dwdesiredaccess]
push    ecx
mov     ecx, [ebp+lpfilename]
push    edx
push    eax
push    ecx
call    ds:createfilew
cmp     eax, 0ffffffffh
jnz     short loc_1000282e
call    sub_100021f0
pop     esi
pop     ebp
retn    1ch
mov     [esi], eax
xor     eax, eax
pop     esi
pop     ebp
retn    1ch
mov     eax, [ecx]
add     ecx, 4
cmp     eax, ecx
jz      short locret_10002851
push    eax
call    ds:__imp_free
pop     ecx
retn
mov     eax, [ecx]
sub     eax, 10h
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short locret_1000287e
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+lpstring]
mov     ebx, ecx
test    esi, esi
jnz     short loc_10002896
mov     [ebx], esi
pop     esi
pop     ebx
pop     ebp
retn    8
push    edi
push    esi
call    ds:lstrlena
lea     edi, [eax+1]
push    80h
lea     eax, [ebx+4]
push    eax
push    edi
push    ebx
call    sub_100025c0
mov     eax, [ebx]
mov     ecx, [ebp+codepage]
add     esp, 10h
push    edi
push    eax
push    edi
push    esi
push    0
push    ecx
call    ds:multibytetowidechar
mov     esi, eax
neg     esi
sbb     esi, esi
inc     esi
jz      short loc_10002929
call    ds:getlasterror
cmp     eax, 7ah
jnz     short loc_10002920
mov     edx, [ebp+lpstring]
mov     eax, [ebp+codepage]
push    0
push    0
push    edi
push    edx
push    0
push    eax
call    ds:multibytetowidechar
mov     esi, eax
push    80h
lea     eax, [ebx+4]
push    eax
push    esi
push    ebx
call    sub_100025c0
mov     ecx, [ebx]
mov     edx, [ebp+lpstring]
mov     eax, [ebp+codepage]
add     esp, 10h
push    esi
push    ecx
push    edi
push    edx
push    0
push    eax
call    ds:multibytetowidechar
mov     esi, eax
neg     esi
sbb     esi, esi
inc     esi
test    esi, esi
jz      short loc_10002929
call    sub_100020e0
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+lpstring]
push    ebx
mov     ebx, ecx
test    eax, eax
jnz     short loc_10002944
mov     [ebx], eax
pop     ebx
pop     ebp
retn    8
push    esi
push    edi
push    eax
call    ds:lstrlenw
lea     edi, [eax+1]
push    80h
lea     eax, [ebx+4]
push    eax
lea     esi, ds:0[edi*4]
push    esi
push    ebx
call    sub_10002660
mov     eax, [ebx]
mov     ecx, [ebp+lpstring]
mov     edx, [ebp+codepage]
add     esp, 10h
push    0
push    0
push    esi
push    eax
push    edi
push    ecx
push    0
push    edx
call    ds:widechartomultibyte
mov     esi, eax
neg     esi
sbb     esi, esi
inc     esi
jz      short loc_100029ee
call    ds:getlasterror
cmp     eax, 7ah
jnz     short loc_100029e5
mov     eax, [ebp+lpstring]
mov     ecx, [ebp+codepage]
push    0
push    0
push    0
push    0
push    edi
push    eax
push    0
push    ecx
call    ds:widechartomultibyte
mov     esi, eax
push    80h
lea     eax, [ebx+4]
push    eax
push    esi
push    ebx
call    sub_10002660
mov     edx, [ebx]
mov     eax, [ebp+lpstring]
mov     ecx, [ebp+codepage]
add     esp, 10h
push    0
push    0
push    esi
push    edx
push    edi
push    eax
push    0
push    ecx
call    ds:widechartomultibyte
mov     esi, eax
neg     esi
sbb     esi, esi
inc     esi
test    esi, esi
jz      short loc_100029ee
call    sub_100020e0
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
push    esi
mov     esi, ecx
mov     ecx, [esi]
cmp     dword ptr [ecx-0ch], 0
lea     eax, [ecx-10h]
push    edi
mov     edi, [eax]
jz      short loc_10002a5d
cmp     dword ptr [eax+0ch], 0
lea     edx, [eax+0ch]
jge     short loc_10002a39
cmp     dword ptr [ecx-8], 0
jge     short loc_10002a2a
push    80070057h
call    sub_100020c0
mov     dword ptr [ecx-0ch], 0
mov     eax, [esi]
pop     edi
mov     byte ptr [eax], 0
pop     esi
retn
or      ecx, 0ffffffffh
lock xadd [edx], ecx
dec     ecx
test    ecx, ecx
jg      short loc_10002a4f
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     edx, [edi]
mov     eax, [edx+0ch]
mov     ecx, edi
call    eax
add     eax, 10h
mov     [esi], eax
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jz      short loc_10002a76
push    eax
call    ds:regclosekey
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     ecx, [esi]
mov     eax, [ecx]
mov     edx, [eax+10h]
push    edi
call    edx
cmp     dword ptr [esi+0ch], 0
lea     ecx, [esi+0ch]
jl      short loc_10002aaf
cmp     eax, [esi]
jnz     short loc_10002aaf
mov     edi, esi
mov     eax, 1
lock xadd [ecx], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
mov     ecx, [esi+4]
mov     edx, [eax]
mov     edx, [edx]
push    1
push    ecx
mov     ecx, eax
call    edx
mov     edi, eax
test    edi, edi
jnz     short loc_10002ac8
call    sub_10002410
mov     eax, [esi+4]
mov     [edi+4], eax
mov     eax, [esi+4]
inc     eax
push    eax
add     esi, 10h
push    esi
push    eax
lea     ecx, [edi+10h]
push    ecx
call    ds:memcpy_s
add     esp, 10h
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ecx, [ebp+arg_8]
test    ecx, ecx
jnz     short loc_10002b09
push    80004005h
call    sub_100020c0
mov     ebx, [ebp+source]
mov     esi, [ebp+arg_4]
test    ebx, ebx
jnz     short loc_10002b21
test    esi, esi
jz      short loc_10002b21
push    80070057h
call    sub_100020c0
mov     eax, [ecx]
mov     edx, [eax]
push    2
push    esi
call    edx
test    eax, eax
jnz     short loc_10002b33
call    sub_10002410
add     eax, 10h
mov     [edi], eax
test    esi, esi
js      short loc_10002b17
cmp     esi, [eax-8]
jg      short loc_10002b17
mov     [eax-0ch], esi
mov     ecx, [edi]
lea     eax, [esi+esi]
push    eax
xor     edx, edx
push    ebx
push    eax
mov     [eax+ecx], dx
mov     eax, [edi]
push    eax
call    ds:memcpy_s
add     esp, 10h
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    esi
mov     esi, ecx
mov     ecx, [esi]
cmp     dword ptr [ecx-0ch], 0
lea     eax, [ecx-10h]
push    edi
mov     edi, [eax]
jz      short loc_10002bcf
cmp     dword ptr [eax+0ch], 0
lea     edx, [eax+0ch]
jge     short loc_10002bab
cmp     dword ptr [ecx-8], 0
jge     short loc_10002b9a
push    80070057h
call    sub_100020c0
mov     dword ptr [ecx-0ch], 0
mov     eax, [esi]
xor     ecx, ecx
pop     edi
mov     [eax], cx
pop     esi
retn
or      ecx, 0ffffffffh
lock xadd [edx], ecx
dec     ecx
test    ecx, ecx
jg      short loc_10002bc1
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     edx, [edi]
mov     eax, [edx+0ch]
mov     ecx, edi
call    eax
add     eax, 10h
mov     [esi], eax
pop     edi
pop     esi
retn
push    ebp
mov     ebp, esp
mov     eax, [ecx]
mov     edx, [eax-0ch]
push    edi
mov     edi, [ebp+arg_0]
cmp     edx, edi
jle     short loc_10002bf2
mov     edi, edx
cmp     dword ptr [eax-4], 1
jle     short loc_10002c03
push    edi
call    sub_10002420
pop     edi
pop     ebp
retn    4
mov     eax, [eax-8]
cmp     eax, edi
jge     short loc_10002c31
push    esi
mov     esi, eax
cmp     esi, 40000000h
jle     short loc_10002c1d
add     esi, 100000h
jmp     short loc_10002c24
cdq
sub     eax, edx
sar     eax, 1
add     esi, eax
cmp     esi, edi
jge     short loc_10002c2a
mov     esi, edi
push    esi
call    sub_100024b0
pop     esi
pop     edi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     ecx, [esi]
mov     eax, [ecx]
mov     edx, [eax+10h]
push    edi
call    edx
cmp     dword ptr [esi+0ch], 0
lea     ecx, [esi+0ch]
jl      short loc_10002c6f
cmp     eax, [esi]
jnz     short loc_10002c6f
mov     edi, esi
mov     eax, 1
lock xadd [ecx], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
mov     ecx, [esi+4]
mov     edx, [eax]
mov     edx, [edx]
push    2
push    ecx
mov     ecx, eax
call    edx
mov     edi, eax
test    edi, edi
jnz     short loc_10002c88
call    sub_10002410
mov     eax, [esi+4]
mov     [edi+4], eax
mov     eax, [esi+4]
lea     eax, [eax+eax+2]
push    eax
add     esi, 10h
push    esi
push    eax
lea     ecx, [edi+10h]
push    ecx
call    ds:memcpy_s
add     esp, 10h
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ecx]
mov     edx, [eax-0ch]
push    edi
mov     edi, [ebp+arg_0]
cmp     edx, edi
jle     short loc_10002cc2
mov     edi, edx
cmp     dword ptr [eax-4], 1
jle     short loc_10002cd3
push    edi
call    sub_100024f0
pop     edi
pop     ebp
retn    4
mov     eax, [eax-8]
cmp     eax, edi
jge     short loc_10002d01
push    esi
mov     esi, eax
cmp     esi, 40000000h
jle     short loc_10002ced
add     esi, 100000h
jmp     short loc_10002cf4
cdq
sub     eax, edx
sar     eax, 1
add     esi, eax
cmp     esi, edi
jge     short loc_10002cfa
mov     esi, edi
push    esi
call    sub_10002580
pop     esi
pop     edi
pop     ebp
retn    4
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jz      short loc_10002d26
push    eax
call    ds:closehandle
mov     dword ptr [esi], 0
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    esi
push    edi
push    20019h
push    offset subkey
push    80000002h
lea     ecx, [ebp+hkey]
mov     dword ptr [ebp+data], 0ffffffffh
mov     [ebp+hkey], 0
mov     [ebp+var_14], 0
mov     [ebp+var_10], 0
call    sub_10002360
mov     esi, [ebp+hkey]
test    eax, eax
jnz     short loc_10002d93
lea     eax, [ebp+cbdata]
push    eax
lea     ecx, [ebp+data]
push    ecx
lea     edx, [ebp+type]
push    edx
push    0
push    offset aqpdebugviewlog
push    esi
mov     [ebp+cbdata], 4
call    ds:regqueryvalueexw
mov     edi, dword ptr [ebp+data]
test    esi, esi
jz      short loc_10002da1
push    esi
call    ds:regclosekey
xor     eax, eax
cmp     edi, 0ffffffffh
pop     edi
setnz   al
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
push    20019h
xor     ebx, ebx
push    offset subkey
push    80000002h
lea     ecx, [ebp+hkey]
mov     dword ptr [ebp+data], 0ffffffffh
mov     [ebp+hkey], ebx
mov     [ebp+var_14], ebx
mov     [ebp+var_10], ebx
call    sub_10002360
mov     esi, [ebp+hkey]
test    eax, eax
jnz     short loc_10002e08
lea     eax, [ebp+cbdata]
push    eax
lea     ecx, [ebp+data]
push    ecx
lea     edx, [ebp+type]
push    edx
push    ebx
push    offset valuename
push    esi
mov     [ebp+cbdata], 4
call    ds:regqueryvalueexw
push    edi
mov     edi, dword ptr [ebp+data]
cmp     esi, ebx
jz      short loc_10002e17
push    esi
call    ds:regclosekey
cmp     edi, 1
pop     edi
mov     al, 1
jz      short loc_10002e21
mov     al, bl
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, ecx
mov     [ebp+var_4], 0
test    esi, esi
jns     short loc_10002e48
xor     esi, esi
mov     eax, [edi]
cmp     esi, [eax-0ch]
jl      short loc_10002e6b
add     eax, 0fffffff0h
push    eax
call    sub_10002c40
add     esp, 4
lea     ecx, [eax+10h]
mov     eax, [ebp+arg_0]
pop     edi
mov     [eax], ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [eax-10h]
test    ecx, ecx
jz      short loc_10002e7d
mov     edx, [ecx]
mov     eax, [edx+10h]
call    eax
test    eax, eax
jnz     short loc_10002e8d
mov     edx, off_10013544
mov     eax, [edx+10h]
mov     ecx, offset off_10013544
call    eax
mov     ecx, [edi]
push    eax
push    esi
mov     esi, [ebp+arg_0]
push    ecx
mov     ecx, esi
call    sub_10002af0
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+sourcesize]
push    ebx
mov     ebx, [ebp+destinationsize]
push    esi
lea     esi, [ebx+eax]
push    edi
test    esi, esi
jns     short loc_10002ecd
push    80070057h
call    sub_100020c0
mov     edi, [ebp+arg_0]
mov     eax, [edi]
mov     edx, [eax-8]
mov     ecx, 1
sub     ecx, [eax-4]
sub     edx, esi
or      ecx, edx
jge     short loc_10002eeb
push    esi
mov     ecx, edi
call    sub_10002cb0
mov     ecx, [ebp+source]
mov     eax, [edi]
push    ebx
push    ecx
push    ebx
push    eax
mov     [ebp+destinationsize], eax
call    ds:memcpy_s
mov     eax, [ebp+sourcesize]
mov     edx, [ebp+arg_c]
push    eax
push    edx
push    eax
mov     eax, [ebp+destinationsize]
add     eax, ebx
push    eax
call    ds:memcpy_s
mov     eax, [edi]
add     esp, 20h
cmp     esi, [eax-8]
jg      short loc_10002ec3
mov     [eax-0ch], esi
mov     ecx, [edi]
pop     edi
mov     byte ptr [esi+ecx], 0
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_4]
mov     ebx, ecx
mov     [ebp+var_4], 0
test    edi, edi
jns     short loc_10002f49
xor     edi, edi
mov     esi, [ebp+arg_8]
test    esi, esi
jns     short loc_10002f52
xor     esi, esi
mov     eax, 7fffffffh
sub     eax, edi
cmp     eax, esi
jl      short loc_10002f98
mov     ecx, [ebx]
mov     eax, [ecx-0ch]
lea     edx, [edi+esi]
cmp     edx, eax
jle     short loc_10002f6d
mov     esi, eax
sub     esi, edi
cmp     edi, eax
jle     short loc_10002f73
xor     esi, esi
test    edi, edi
jnz     short loc_10002fa2
cmp     esi, eax
jnz     short loc_10002fa2
lea     eax, [ecx-10h]
push    eax
call    sub_10002c40
add     esp, 4
pop     edi
lea     ecx, [eax+10h]
mov     eax, [ebp+arg_0]
pop     esi
mov     [eax], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    80070216h
call    sub_100020c0
mov     ecx, [ecx-10h]
test    ecx, ecx
jz      short loc_10002fb4
mov     edx, [ecx]
mov     eax, [edx+10h]
call    eax
test    eax, eax
jnz     short loc_10002fc4
mov     edx, off_10013544
mov     eax, [edx+10h]
mov     ecx, offset off_10013544
call    eax
mov     ecx, [ebx]
push    eax
push    esi
mov     esi, [ebp+arg_0]
lea     edx, [ecx+edi*2]
push    edx
mov     ecx, esi
call    sub_10002af0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_10]
push    ebx
push    esi
mov     esi, [ebp+arg_8]
lea     ecx, [esi+eax]
mov     [ebp+arg_8], ecx
test    ecx, ecx
jns     short loc_1000300f
push    80070057h
call    sub_100020c0
mov     ebx, [ebp+arg_0]
mov     eax, [ebx]
mov     edx, 1
sub     edx, [eax-4]
mov     eax, [eax-8]
sub     eax, ecx
or      edx, eax
jge     short loc_1000302d
push    ecx
mov     ecx, ebx
call    sub_10002be0
mov     ecx, [ebp+source]
push    edi
mov     edi, [ebx]
add     esi, esi
push    esi
push    ecx
push    esi
push    edi
call    ds:memcpy_s
mov     eax, [ebp+arg_10]
mov     edx, [ebp+arg_c]
add     eax, eax
push    eax
push    edx
push    eax
add     esi, edi
push    esi
call    ds:memcpy_s
mov     eax, [ebx]
mov     ecx, [ebp+arg_8]
add     esp, 20h
pop     edi
cmp     ecx, [eax-8]
jg      short loc_10003005
mov     [eax-0ch], ecx
mov     eax, [ebx]
xor     edx, edx
pop     esi
mov     [eax+ecx*2], dx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+sourcesize]
mov     ebx, ecx
test    esi, esi
jnz     short loc_10003089
call    sub_10002a00
pop     esi
pop     ebx
pop     ebp
retn    8
mov     ecx, [ebp+source]
test    ecx, ecx
jnz     short loc_1000309a
push    80070057h
call    sub_100020c0
mov     eax, [ebx]
mov     edx, [eax-0ch]
push    edi
mov     edi, ecx
sub     edi, eax
mov     [ebp+sourcesize], edx
test    esi, esi
jns     short loc_100030b5
push    80070057h
call    sub_100020c0
mov     edx, 1
sub     edx, [eax-4]
mov     eax, [eax-8]
sub     eax, esi
or      edx, eax
jge     short loc_100030d1
push    esi
mov     ecx, ebx
call    sub_10002cb0
mov     ecx, [ebp+source]
mov     eax, [ebx]
push    esi
cmp     edi, [ebp+sourcesize]
ja      short loc_100030ea
mov     edx, [eax-8]
lea     ecx, [eax+edi]
push    ecx
push    edx
push    eax
call    ds:memmove_s
jmp     short loc_100030f6
push    ecx
mov     ecx, [eax-8]
push    ecx
push    eax
call    ds:memcpy_s
mov     eax, [ebx]
add     esp, 10h
pop     edi
cmp     esi, [eax-8]
jg      short loc_10003090
mov     [eax-0ch], esi
mov     edx, [ebx]
mov     byte ptr [esi+edx], 0
pop     esi
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    edi
mov     edi, [ebp+arg_4]
mov     ebx, ecx
mov     [ebp+var_4], ebx
test    edi, edi
jnz     short loc_1000312f
call    sub_10002b70
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    esi
mov     esi, [ebp+source]
test    esi, esi
jnz     short loc_10003141
push    80070057h
call    sub_100020c0
mov     eax, [ebx]
mov     ecx, [eax-0ch]
sub     esi, eax
sar     esi, 1
mov     [ebp+arg_4], ecx
test    edi, edi
jns     short loc_1000315b
push    80070057h
call    sub_100020c0
mov     edx, 1
sub     edx, [eax-4]
mov     eax, [eax-8]
sub     eax, edi
or      edx, eax
jge     short loc_10003174
push    edi
mov     ecx, ebx
call    sub_10002be0
mov     eax, [ebx]
mov     edx, [eax-8]
lea     ebx, [edi+edi]
add     edx, edx
push    ebx
cmp     esi, [ebp+arg_4]
ja      short loc_10003192
lea     ecx, [eax+esi*2]
push    ecx
push    edx
push    eax
call    ds:memmove_s
jmp     short loc_1000319e
mov     ecx, [ebp+source]
push    ecx
push    edx
push    eax
call    ds:memcpy_s
mov     ecx, [ebp+var_4]
mov     eax, [ecx]
add     esp, 10h
pop     esi
cmp     edi, [eax-8]
jg      short loc_10003137
mov     [eax-0ch], edi
mov     eax, [ecx]
xor     ecx, ecx
pop     edi
mov     [ebx+eax], cx
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+lpwidecharstr]
mov     eax, esi
shr     eax, 4
push    edi
mov     edi, [ebp+hmodule]
inc     eax
mov     ebx, ecx
movzx   ecx, ax
push    6
push    ecx
push    edi
call    ds:findresourcew
test    eax, eax
jz      short loc_100031f6
push    esi
push    eax
push    edi
call    sub_10002100
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     short loc_100031ff
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn    8
movzx   eax, word ptr [edi]
push    0
push    0
push    0
push    0
push    eax
lea     ecx, [edi+2]
push    ecx
push    0
push    3
mov     [ebp+lpwidecharstr], ecx
call    ds:widechartomultibyte
mov     esi, eax
test    esi, esi
jns     short loc_1000322c
push    80070057h
call    sub_100020c0
mov     eax, [ebx]
mov     edx, 1
sub     edx, [eax-4]
mov     eax, [eax-8]
sub     eax, esi
or      edx, eax
jge     short loc_10003247
push    esi
mov     ecx, ebx
call    sub_10002cb0
mov     ecx, [ebx]
movzx   edx, word ptr [edi]
mov     eax, [ebp+lpwidecharstr]
push    0
push    0
push    esi
push    ecx
push    edx
push    eax
push    0
push    3
call    ds:widechartomultibyte
mov     eax, [ebx]
cmp     esi, [eax-8]
jg      short loc_10003222
mov     [eax-0ch], esi
mov     ecx, [ebx]
pop     edi
mov     byte ptr [esi+ecx], 0
pop     esi
mov     eax, 1
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
mov     eax, [esi]
mov     ecx, [ebp+source]
mov     ebx, [eax-0ch]
push    edi
mov     edi, ecx
sub     edi, eax
mov     eax, [ebp+maxcount]
sar     edi, 1
mov     [ebp+var_4], ebx
test    eax, eax
jns     short loc_100032ab
push    80070057h
call    sub_100020c0
test    ecx, ecx
jnz     short loc_100032b3
xor     eax, eax
jmp     short loc_100032be
push    eax
push    ecx
call    ds:wcsnlen
add     esp, 8
mov     ecx, 7fffffffh
sub     ecx, eax
mov     [ebp+maxcount], eax
cmp     ecx, ebx
jge     short loc_100032d6
push    80070057h
call    sub_100020c0
add     ebx, eax
jns     short loc_100032e4
push    80070057h
call    sub_100020c0
mov     eax, [esi]
mov     edx, 1
sub     edx, [eax-4]
mov     eax, [eax-8]
sub     eax, ebx
or      edx, eax
jge     short loc_100032ff
push    ebx
mov     ecx, esi
call    sub_10002be0
mov     edx, [ebp+var_4]
mov     ecx, [esi]
cmp     edi, edx
lea     edi, [ecx+edi*2]
jbe     short loc_1000330e
mov     edi, [ebp+source]
mov     eax, [ebp+maxcount]
add     eax, eax
push    eax
push    edi
push    eax
lea     ecx, [ecx+edx*2]
push    ecx
call    ds:memcpy_s
mov     eax, [esi]
add     esp, 10h
cmp     ebx, [eax-8]
jg      loc_100032a1
mov     [eax-0ch], ebx
mov     edx, [esi]
pop     edi
xor     eax, eax
pop     esi
mov     [edx+ebx*2], ax
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+format]
push    esi
push    edi
mov     edi, ecx
test    ebx, ebx
jnz     short loc_10003369
push    80070057h
call    sub_100020c0
mov     eax, [ebp+arglist]
push    eax
push    ebx
call    ds:_vscprintf
mov     esi, eax
add     esp, 8
test    esi, esi
jns     short loc_10003387
push    80004005h
call    sub_100020c0
mov     eax, [edi]
mov     edx, [eax-8]
mov     ecx, 1
sub     ecx, [eax-4]
sub     edx, esi
or      ecx, edx
jge     short loc_100033a2
push    esi
mov     ecx, edi
call    sub_10002cb0
mov     eax, [ebp+arglist]
mov     edx, [edi]
push    eax
push    ebx
lea     ecx, [esi+1]
push    ecx
push    edx
call    ds:vsprintf_s
mov     eax, [edi]
add     esp, 10h
cmp     esi, [eax-8]
jg      short loc_1000335f
mov     [eax-0ch], esi
mov     eax, [edi]
pop     edi
mov     byte ptr [esi+eax], 0
pop     esi
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003540
mov     eax, large fs:0
push    eax
push    ecx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, [ebp+arg_4]
mov     [ebp+var_10], 0
mov     eax, [edi]
mov     ecx, [eax-10h]
mov     [ebp+var_4], 0
test    ecx, ecx
jz      short loc_1000341a
mov     edx, [ecx]
mov     eax, [edx+10h]
call    eax
test    eax, eax
jnz     short loc_1000342a
mov     edx, off_10013544
mov     eax, [edx+10h]
mov     ecx, offset off_10013544
call    eax
xor     ecx, ecx
test    eax, eax
setnz   cl
test    ecx, ecx
jnz     short loc_1000343f
push    80004005h
call    sub_100020c0
mov     edx, [eax]
mov     ecx, eax
mov     eax, [edx+0ch]
call    eax
mov     esi, [ebp+arg_0]
add     eax, 10h
mov     [esi], eax
mov     ecx, [ebp+arg_8]
mov     eax, [ecx]
mov     edx, [eax-0ch]
mov     ecx, [edi]
mov     edi, [ecx-0ch]
push    edx
push    eax
push    edi
push    ecx
push    esi
mov     [ebp+var_4], 0
mov     [ebp+var_10], 1
call    sub_10002eb0
add     esp, 14h
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ecx]
mov     edx, [eax-0ch]
mov     eax, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
sub     edx, eax
push    edx
push    eax
push    esi
mov     [ebp+var_4], 0
call    sub_10002f30
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+format]
push    esi
push    edi
mov     edi, ecx
test    ebx, ebx
jnz     short loc_100034d9
push    80070057h
call    sub_100020c0
mov     eax, [ebp+arglist]
push    eax
push    ebx
call    ds:_vscwprintf
mov     esi, eax
add     esp, 8
test    esi, esi
jns     short loc_100034f7
push    80004005h
call    sub_100020c0
mov     eax, [edi]
mov     edx, [eax-8]
mov     ecx, 1
sub     ecx, [eax-4]
sub     edx, esi
or      ecx, edx
jge     short loc_10003512
push    esi
mov     ecx, edi
call    sub_10002be0
mov     eax, [ebp+arglist]
mov     edx, [edi]
push    eax
push    ebx
lea     ecx, [esi+1]
push    ecx
push    edx
call    ds:vswprintf_s
mov     eax, [edi]
add     esp, 10h
cmp     esi, [eax-8]
jg      short loc_100034cf
mov     [eax-0ch], esi
mov     eax, [edi]
xor     ecx, ecx
pop     edi
mov     [eax+esi*2], cx
pop     esi
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003540
mov     eax, large fs:0
push    eax
push    ecx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, [ebp+arg_4]
mov     [ebp+var_10], 0
mov     eax, [edi]
mov     ecx, [eax-10h]
mov     [ebp+var_4], 0
test    ecx, ecx
jz      short loc_1000358a
mov     edx, [ecx]
mov     eax, [edx+10h]
call    eax
test    eax, eax
jnz     short loc_1000359a
mov     edx, off_10013544
mov     eax, [edx+10h]
mov     ecx, offset off_10013544
call    eax
xor     ecx, ecx
test    eax, eax
setnz   cl
test    ecx, ecx
jnz     short loc_100035af
push    80004005h
call    sub_100020c0
mov     edx, [eax]
mov     ecx, eax
mov     eax, [edx+0ch]
call    eax
mov     esi, [ebp+arg_0]
add     eax, 10h
mov     [esi], eax
mov     ecx, [ebp+arg_8]
mov     eax, [ecx]
mov     edx, [eax-0ch]
mov     ecx, [edi]
mov     edi, [ecx-0ch]
push    edx
push    eax
push    edi
push    ecx
push    esi
mov     [ebp+var_4], 0
mov     [ebp+var_10], 1
call    sub_10002ff0
add     esp, 14h
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003540
mov     eax, large fs:0
push    eax
push    ecx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_10], 0
mov     ecx, [eax]
mov     ecx, [ecx-10h]
mov     [ebp+var_4], 0
test    ecx, ecx
jz      short loc_1000364a
mov     edx, [ecx]
mov     eax, [edx+10h]
call    eax
test    eax, eax
jnz     short loc_1000365a
mov     edx, off_10013544
mov     eax, [edx+10h]
mov     ecx, offset off_10013544
call    eax
xor     ecx, ecx
test    eax, eax
setnz   cl
test    ecx, ecx
jnz     short loc_1000366f
push    80004005h
call    sub_100020c0
mov     edx, [eax]
mov     ecx, eax
mov     eax, [edx+0ch]
call    eax
mov     esi, [ebp+arg_0]
add     eax, 10h
mov     [esi], eax
mov     edi, [ebp+arg_8]
mov     [ebp+var_4], 0
mov     [ebp+var_10], 1
test    edi, edi
jnz     short loc_10003699
xor     eax, eax
jmp     short loc_100036af
mov     eax, edi
lea     edx, [eax+2]
mov     edi, edi
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_100036a0
sub     eax, edx
sar     eax, 1
mov     ecx, [ebp+arg_4]
mov     ecx, [ecx]
mov     edx, [ecx-0ch]
push    eax
push    edi
push    edx
push    ecx
push    esi
call    sub_10002ff0
add     esp, 14h
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
push    edi
mov     edi, ecx
mov     ecx, [eax]
mov     esi, [edi]
lea     eax, [ecx-10h]
sub     esi, 10h
cmp     eax, esi
jz      short loc_10003748
cmp     dword ptr [esi+0ch], 0
push    ebx
lea     ebx, [esi+0ch]
jl      short loc_1000373b
mov     edx, [eax]
cmp     edx, [esi]
jnz     short loc_1000373b
push    eax
call    sub_10002a80
mov     [ebp+arg_0], eax
add     esp, 4
or      eax, 0ffffffffh
lock xadd [ebx], eax
dec     eax
test    eax, eax
jg      short loc_1000372a
mov     ecx, [esi]
mov     edx, [ecx]
mov     eax, [edx+4]
push    esi
call    eax
mov     ecx, [ebp+arg_0]
add     ecx, 10h
pop     ebx
mov     [edi], ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
mov     edx, [ecx-0ch]
push    edx
push    ecx
mov     ecx, edi
call    sub_10003070
pop     ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+hmodule]
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     eax, esi
shr     eax, 4
inc     eax
mov     edi, ecx
movzx   ecx, ax
push    6
push    ecx
push    ebx
call    ds:findresourcew
test    eax, eax
jz      short loc_10003786
push    esi
push    eax
push    ebx
call    sub_10002100
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_1000378f
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn    8
movzx   esi, word ptr [ebx]
test    esi, esi
jns     short loc_100037a0
push    80070057h
call    sub_100020c0
mov     eax, [edi]
mov     edx, 1
sub     edx, [eax-4]
mov     eax, [eax-8]
sub     eax, esi
or      edx, eax
jge     short loc_100037bb
push    esi
mov     ecx, edi
call    sub_10002be0
movzx   ecx, word ptr [ebx]
mov     edx, [edi]
push    ecx
add     ebx, 2
push    ebx
push    esi
push    edx
call    sub_10002700
mov     eax, [edi]
add     esp, 10h
cmp     esi, [eax-8]
jg      short loc_10003796
mov     [eax-0ch], esi
mov     eax, [edi]
xor     ecx, ecx
pop     edi
mov     [eax+esi*2], cx
pop     esi
lea     eax, [ecx+1]
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
push    edi
mov     edi, ecx
mov     ecx, [eax]
mov     esi, [edi]
lea     eax, [ecx-10h]
sub     esi, 10h
cmp     eax, esi
jz      short loc_10003858
cmp     dword ptr [esi+0ch], 0
push    ebx
lea     ebx, [esi+0ch]
jl      short loc_1000384b
mov     edx, [eax]
cmp     edx, [esi]
jnz     short loc_1000384b
push    eax
call    sub_10002c40
mov     [ebp+arg_0], eax
add     esp, 4
or      eax, 0ffffffffh
lock xadd [ebx], eax
dec     eax
test    eax, eax
jg      short loc_1000383a
mov     ecx, [esi]
mov     edx, [ecx]
mov     eax, [edx+4]
push    esi
call    eax
mov     ecx, [ebp+arg_0]
add     ecx, 10h
pop     ebx
mov     [edi], ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
mov     edx, [ecx-0ch]
push    edx
push    ecx
mov     ecx, edi
call    sub_10003110
pop     ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+format]
lea     eax, [ebp+arglist]
push    eax
push    ecx
mov     ecx, [ebp+arg_0]
call    sub_10003350
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+format]
lea     eax, [ebp+arglist]
push    eax
push    ecx
mov     ecx, [ebp+arg_0]
call    sub_100034c0
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100038a0
mov     eax, large fs:0
push    eax
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    esi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, [ebp+arg_0]
mov     [ebp+var_24], 0
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     ecx, offset off_10013544
mov     [ebp+var_4], 0
mov     [ebp+var_28], esi
call    edx
add     eax, 10h
mov     [esi], eax
lea     eax, [ebp+systemtime]
push    eax
mov     [ebp+var_4], 0
mov     [ebp+var_24], 1
call    ds:getlocaltime
movzx   ecx, [ebp+systemtime.wmilliseconds]
movzx   edx, [ebp+systemtime.wsecond]
movzx   eax, [ebp+systemtime.wminute]
push    ecx
movzx   ecx, [ebp+systemtime.whour]
push    edx
movzx   edx, [ebp+systemtime.wday]
push    eax
movzx   eax, [ebp+systemtime.wmonth]
push    ecx
push    edx
push    eax
push    offset a02u02u02u02u02
push    esi
call    sub_10003860
add     esp, 20h
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, ecx
mov     eax, [esi]
mov     ebx, [eax-0ch]
push    edi
lea     edi, [ebx+1]
test    edi, edi
jns     short loc_1000397e
push    80070057h
call    sub_100020c0
mov     edx, [eax-8]
mov     ecx, 1
sub     ecx, [eax-4]
sub     edx, edi
or      ecx, edx
jge     short loc_10003997
push    edi
mov     ecx, esi
call    sub_10002cb0
mov     eax, [esi]
mov     cl, [ebp+arg_0]
mov     [ebx+eax], cl
mov     eax, [esi]
cmp     edi, [eax-8]
jg      short loc_10003974
mov     [eax-0ch], edi
mov     edx, [esi]
mov     byte ptr [edi+edx], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, ecx
mov     eax, [esi]
mov     ebx, [eax-0ch]
push    edi
lea     edi, [ebx+1]
test    edi, edi
jns     short loc_100039de
push    80070057h
call    sub_100020c0
mov     edx, [eax-8]
mov     ecx, 1
sub     ecx, [eax-4]
sub     edx, edi
or      ecx, edx
jge     short loc_100039f7
push    edi
mov     ecx, esi
call    sub_10002be0
mov     eax, [esi]
mov     cx, [ebp+arg_0]
mov     [eax+ebx*2], cx
mov     eax, [esi]
cmp     edi, [eax-8]
jg      short loc_100039d4
mov     [eax-0ch], edi
mov     edx, [esi]
xor     eax, eax
mov     [edx+edi*2], ax
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003a20
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
xor     ebx, ebx
mov     [ebp+var_10], ebx
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     ecx, offset off_10013544
mov     [ebp+var_4], ebx
call    edx
mov     esi, [ebp+arg_0]
add     eax, 10h
mov     [esi], eax
mov     ecx, 1
mov     [ebp+var_10], ecx
sub     ecx, [eax-4]
mov     eax, [eax-8]
mov     edi, 106h
sub     eax, edi
or      eax, ecx
mov     [ebp+var_4], ebx
jge     short loc_10003a8b
push    edi
mov     ecx, esi
call    sub_10002be0
mov     eax, [esi]
cmp     [eax-8], edi
jge     short loc_10003a9c
push    80070057h
call    sub_100020c0
push    104h
mov     [eax-0ch], edi
mov     ecx, [esi]
push    eax
mov     eax, [ebp+hmodule]
xor     edx, edx
push    eax
mov     [ecx+20ch], dx
call    ds:getmodulefilenamew
mov     eax, [esi]
mov     ecx, [eax-8]
cmp     eax, ebx
jnz     short loc_10003ac7
xor     eax, eax
jmp     short loc_10003ad6
push    ecx
push    eax
call    ds:wcsnlen
add     esp, 8
cmp     eax, ebx
jl      short loc_10003a92
mov     ecx, [esi]
cmp     eax, [ecx-8]
jg      short loc_10003a92
mov     edi, ds:wcsrchr
mov     [ecx-0ch], eax
mov     ecx, [esi]
xor     edx, edx
mov     [ecx+eax*2], dx
mov     eax, [esi]
push    5ch
push    eax
call    edi
add     esp, 8
cmp     eax, ebx
jnz     short loc_10003b01
or      eax, 0ffffffffh
jmp     short loc_10003b05
sub     eax, [esi]
sar     eax, 1
inc     eax
push    eax
lea     eax, [ebp+var_14]
push    eax
mov     ecx, esi
call    sub_10003490
push    eax
mov     ecx, esi
mov     [ebp+var_4], 1
call    sub_100037f0
mov     eax, [ebp+var_14]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], bl
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_10003b43
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [esi]
push    2eh
push    eax
call    edi
add     esp, 8
cmp     eax, ebx
jz      short loc_10003b97
sub     eax, [esi]
sar     eax, 1
cmp     eax, 0ffffffffh
jz      short loc_10003b97
push    eax
lea     ecx, [ebp+var_14]
push    ecx
mov     ecx, esi
call    sub_10002e30
push    eax
mov     ecx, esi
mov     [ebp+var_4], 2
call    sub_100037f0
mov     eax, [ebp+var_14]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], bl
lea     edx, [eax+0ch]
or      ecx, 0ffffffffh
lock xadd [edx], ecx
dec     ecx
test    ecx, ecx
jg      short loc_10003b97
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004120
mov     eax, large fs:0
push    eax
push    ecx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_10], esi
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     ecx, offset off_10013544
call    edx
add     eax, 10h
mov     [esi], eax
mov     edx, [ebp+source]
mov     [ebp+var_4], 0
test    edx, edx
jz      short loc_10003c21
test    edx, 0ffff0000h
jnz     short loc_10003c25
movzx   edi, dx
push    0
push    edi
call    sub_10002170
add     esp, 8
test    eax, eax
jz      short loc_10003c42
push    edi
push    eax
mov     ecx, esi
call    sub_100031c0
jmp     short loc_10003c42
xor     eax, eax
jmp     short loc_10003c39
mov     eax, edx
lea     edi, [eax+1]
lea     ebx, [ebx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10003c30
sub     eax, edi
push    eax
push    edx
mov     ecx, esi
call    sub_10003070
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+source]
push    edi
mov     edi, ecx
test    edx, edx
jnz     short loc_10003c7d
xor     eax, eax
push    eax
push    edx
call    sub_10003110
mov     eax, edi
pop     edi
pop     ebp
retn    4
mov     eax, edx
push    esi
lea     esi, [eax+2]
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_10003c83
sub     eax, esi
pop     esi
sar     eax, 1
push    eax
push    edx
mov     ecx, edi
call    sub_10003110
mov     eax, edi
pop     edi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+source]
push    edi
mov     edi, ecx
test    edx, edx
jnz     short loc_10003ccd
xor     eax, eax
push    eax
push    edx
call    sub_10003280
mov     eax, edi
pop     edi
pop     ebp
retn    4
mov     eax, edx
push    esi
lea     esi, [eax+2]
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_10003cd3
sub     eax, esi
pop     esi
sar     eax, 1
push    eax
push    edx
mov     ecx, edi
call    sub_10003280
mov     eax, edi
pop     edi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003d00
mov     eax, large fs:0
push    eax
push    ecx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], 0
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     ecx, offset off_10013544
mov     [ebp+var_4], 0
call    edx
mov     esi, [ebp+arg_0]
add     eax, 10h
mov     [esi], eax
mov     ecx, 1
mov     [ebp+var_10], ecx
sub     ecx, [eax-4]
mov     eax, [eax-8]
sub     eax, 105h
or      eax, ecx
mov     [ebp+var_4], 0
jge     short loc_10003d73
push    105h
mov     ecx, esi
call    sub_10002be0
mov     eax, [esi]
cmp     dword ptr [eax-8], 105h
jge     short loc_10003d88
push    80070057h
call    sub_100020c0
push    1
push    23h
mov     dword ptr [eax-0ch], 105h
mov     ecx, [esi]
xor     edx, edx
push    eax
push    edx
mov     [ecx+20ah], dx
call    ds:shgetspecialfolderpathw
mov     eax, [esi]
mov     ecx, [eax-8]
test    eax, eax
jz      short loc_10003dbe
push    ecx
push    eax
call    ds:wcsnlen
add     esp, 8
test    eax, eax
js      short loc_10003d7e
mov     ecx, [esi]
cmp     eax, [ecx-8]
jg      short loc_10003d7e
mov     [ecx-0ch], eax
mov     ecx, [esi]
xor     edx, edx
mov     [ecx+eax*2], dx
mov     ecx, [esi]
mov     eax, [ecx-0ch]
test    eax, eax
jle     short loc_10003df4
lea     edx, [eax-1]
test    edx, edx
js      short loc_10003d7e
cmp     edx, eax
jg      short loc_10003d7e
cmp     word ptr [ecx+edx*2], 5ch
jz      short loc_10003df4
push    5ch
mov     ecx, esi
call    sub_100039c0
push    1bh
push    offset source
mov     ecx, esi
call    sub_10003280
mov     eax, [esi]
push    eax
call    ds:pathfileexistsw
test    eax, eax
jnz     short loc_10003e1c
mov     eax, [esi]
push    0
push    eax
push    0
call    ds:shcreatedirectoryexw
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003e30
mov     eax, large fs:0
push    eax
sub     esp, 18h
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
xor     esi, esi
lea     eax, [ebp+string1]
push    esi
push    eax
mov     [ebp+var_18], esi
call    sub_10003a20
lea     ecx, [ebp+var_18]
push    10000000h
push    ecx
mov     [ebp+var_4], esi
call    sub_10003a20
mov     edx, [ebp+string1]
push    offset string2
push    edx
mov     byte ptr [ebp+var_4], 1
call    ds:_wcsicmp
add     esp, 18h
cmp     eax, esi
jnz     short loc_10003ea0
push    7
push    offset aqqpcmgr
lea     ecx, [ebp+string1]
call    sub_10003110
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     ecx, offset off_10013544
call    edx
add     eax, 10h
mov     [ebp+string], eax
push    offset asc_1000f47c
lea     eax, [ebp+string1]
push    eax
lea     ecx, [ebp+var_24]
push    ecx
mov     byte ptr [ebp+var_4], 2
call    sub_10003600
lea     edx, [ebp+var_18]
push    edx
push    eax
lea     eax, [ebp+var_20]
push    eax
mov     byte ptr [ebp+var_4], 3
call    sub_10003540
push    offset alog
push    eax
lea     ecx, [ebp+var_1c]
push    ecx
mov     byte ptr [ebp+var_4], 4
call    sub_10003600
add     esp, 24h
push    eax
lea     ecx, [ebp+string]
mov     byte ptr [ebp+var_4], 5
call    sub_100037f0
mov     eax, [ebp+var_1c]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], 4
lea     edx, [eax+0ch]
or      ecx, 0ffffffffh
lock xadd [edx], ecx
dec     ecx
test    ecx, ecx
jg      short loc_10003f23
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+var_20]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], 3
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_10003f46
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+var_24]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], 2
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_10003f69
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     esi, [ebp+string]
mov     edi, [esi-0ch]
test    edi, edi
jns     short loc_10003f7d
push    80070057h
call    sub_100020c0
mov     eax, [esi-8]
mov     ecx, 1
sub     ecx, [esi-4]
sub     eax, edi
or      eax, ecx
jge     short loc_10003f9a
push    edi
lea     ecx, [ebp+string]
call    sub_10002be0
mov     esi, [ebp+string]
lea     ecx, [edi+1]
push    ecx
push    esi
call    ds:_wcslwr_s
add     esp, 8
cmp     edi, [esi-8]
jg      short loc_10003f73
mov     [esi-0ch], edi
xor     edx, edx
mov     [esi+edi*2], dx
add     esi, 0fffffff0h
push    esi
call    sub_10002c40
mov     edi, [ebp+arg_0]
add     eax, 10h
mov     [edi], eax
add     esp, 4
mov     byte ptr [ebp+var_4], 1
lea     eax, [esi+0ch]
or      ecx, 0ffffffffh
lock xadd [eax], ecx
dec     ecx
test    ecx, ecx
jg      short loc_10003fe7
mov     ecx, [esi]
mov     edx, [ecx]
mov     eax, [edx+4]
push    esi
call    eax
mov     eax, [ebp+var_18]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], 0
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000400a
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+string1]
add     eax, 0fffffff0h
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_10004030
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004050
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
xor     ebx, ebx
mov     [ebp+var_10], ebx
mov     esi, [ebp+arg_0]
push    esi
mov     [ebp+var_4], ebx
call    sub_10003d00
add     esp, 4
mov     edx, [ebp+source]
mov     edi, 1
mov     [ebp+var_4], ebx
mov     [ebp+var_10], edi
cmp     edx, ebx
jz      short loc_100040cd
mov     eax, edx
lea     edi, [eax+2]
mov     cx, [eax]
add     eax, 2
cmp     cx, bx
jnz     short loc_100040a1
sub     eax, edi
sar     eax, 1
push    eax
push    edx
mov     ecx, esi
call    sub_10003280
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     eax, [ebp+source]
push    eax
call    sub_10003e30
add     esp, 4
mov     eax, [eax]
mov     ecx, [eax-0ch]
push    ecx
push    eax
mov     ecx, esi
mov     [ebp+var_4], edi
call    sub_10003280
mov     eax, [ebp+source]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], bl
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000410c
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004120
mov     eax, large fs:0
push    eax
push    ecx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+var_10], edi
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     ecx, offset off_10013544
call    edx
add     eax, 10h
mov     [edi], eax
mov     edx, [ebp+source]
mov     [ebp+var_4], 0
test    edx, edx
jz      short loc_10004191
test    edx, 0ffff0000h
jnz     short loc_10004195
movzx   esi, dx
push    0
push    esi
call    sub_10002170
add     esp, 8
test    eax, eax
jz      short loc_100041b8
push    esi
push    eax
mov     ecx, edi
call    sub_10003750
jmp     short loc_100041b8
xor     eax, eax
jmp     short loc_100041af
mov     eax, edx
lea     esi, [eax+2]
lea     ebx, [ebx+0]
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_100041a0
sub     eax, esi
sar     eax, 1
push    eax
push    edx
mov     ecx, edi
call    sub_10003110
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100041d0
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
xor     ebx, ebx
cmp     hfile, ebx
jz      loc_1000435e
call    ds:gettickcount
sub     eax, dword_100137c8
cmp     eax, 927c0h
jb      loc_1000435e
mov     eax, addend
cmp     eax, 400000h
jg      loc_1000435e
mov     edi, ds:interlockedexchangeadd
push    800000h
push    offset addend
call    edi
mov     esi, eax
cmp     esi, 400000h
jz      short loc_10004276
cmp     esi, ebx
jz      short loc_10004276
cmp     esi, 400000h
jle     short loc_1000425f
push    0ff800000h
jmp     loc_10004357
dec     esi
cmp     esi, 3ffffeh
ja      loc_1000435e
push    0ffc00000h
jmp     loc_10004357
call    ds:gettickcount
cmp     dword_10013074, 0ffffffffh
mov     dword_100137c8, eax
jz      loc_1000434f
mov     ecx, offset filename
call    sub_10002250
mov     edi, dword_10013074
xor     ecx, ecx
cmp     edx, ecx
jb      loc_10004349
ja      short loc_100042b2
cmp     eax, edi
jb      loc_10004349
push    offset filename
lea     ecx, [ebp+lpfilename]
call    sub_10004120
push    offset aold
lea     ecx, [ebp+lpfilename]
mov     [ebp+var_4], ebx
call    sub_10003cb0
mov     ecx, [ebp+lpfilename]
push    ecx
call    ds:deletefilew
mov     edx, hfile
push    edx
call    ds:closehandle
mov     eax, [ebp+lpfilename]
push    eax
push    offset filename
mov     hfile, ebx
call    ds:movefilew
push    ebx
push    ebx
push    80h
push    2
push    1
push    40000000h
push    offset filename
lea     ecx, [ebp+var_18]
mov     [ebp+var_18], ebx
mov     [ebp+var_14], ebx
call    sub_100027d0
test    eax, eax
js      short loc_10004339
push    2
push    ebx
push    ebx
lea     ecx, [ebp+var_18]
call    sub_10002210
mov     eax, [ebp+var_18]
mov     [ebp+var_18], ebx
mov     hfile, eax
lea     ecx, [ebp+var_18]
call    sub_10002d10
lea     ecx, [ebp+lpfilename]
call    sub_10002860
mov     edi, ds:interlockedexchangeadd
mov     ecx, 0ff800000h
sub     ecx, esi
push    ecx
push    offset addend
call    edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004370
mov     eax, large fs:0
push    eax
sub     esp, 40h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, [ebp+lpfilename]
push    offset dword_100137bc
call    ds:interlockedincrement
cmp     eax, 1
jnz     loc_10004573
mov     edi, [ebp+arg_4]
xor     ebx, ebx
cmp     edi, ebx
jnz     short loc_100043c0
mov     edi, 0c800000h
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     ecx, offset off_10013544
mov     dword_10013074, edi
mov     [ebp+var_35], bl
call    edx
add     eax, 10h
mov     [ebp+var_44], eax
mov     [ebp+var_4], ebx
cmp     esi, ebx
jnz     short loc_10004424
lea     eax, [ebp+lpnewfilename]
push    ebx
push    eax
call    sub_10004050
add     esp, 8
push    eax
lea     ecx, [ebp+var_44]
mov     byte ptr [ebp+var_4], 1
call    sub_100037f0
mov     eax, [ebp+lpnewfilename]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], bl
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_10004421
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     esi, [ebp+var_44]
push    esi
push    offset format
push    104h
push    offset filename
call    ds:swprintf_s
add     esp, 10h
cmp     edi, 0ffffffffh
jz      loc_100044d2
xor     eax, eax
lea     ecx, [ebp+fileinformation]
push    ecx
push    ebx
push    esi
mov     [ebp+fileinformation], ebx
mov     [ebp+var_30], eax
mov     [ebp+var_2c], eax
mov     [ebp+var_28], eax
mov     [ebp+var_24], eax
mov     [ebp+var_20], eax
mov     [ebp+var_1c], eax
mov     [ebp+var_18], eax
mov     [ebp+var_14], eax
call    ds:getfileattributesexw
mov     ecx, [ebp+var_14]
cmp     [ebp+var_18], ebx
jb      short loc_100044d2
ja      short loc_1000447d
cmp     ecx, edi
jb      short loc_100044d2
push    esi
lea     ecx, [ebp+lpnewfilename]
call    sub_10004120
push    offset aold
lea     ecx, [ebp+lpnewfilename]
mov     byte ptr [ebp+var_4], 2
call    sub_10003cb0
mov     edx, [ebp+lpnewfilename]
push    edx
call    ds:deletefilew
mov     eax, [ebp+lpnewfilename]
push    eax
push    esi
call    ds:movefilew
mov     eax, [ebp+lpnewfilename]
add     eax, 0fffffff0h
mov     [ebp+var_35], 1
mov     byte ptr [ebp+var_4], bl
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_100044d2
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
xor     edi, edi
mov     [ebp+var_48], ebx
xor     eax, eax
cmp     [ebp+var_35], bl
push    ebx
setz    al
push    80h
mov     byte ptr [ebp+var_4], 3
lea     eax, [eax+eax+2]
push    eax
push    ebx
push    1
push    40000000h
push    esi
call    ds:createfilew
cmp     eax, 0ffffffffh
jnz     loc_1000458f
call    sub_100021f0
cmp     eax, ebx
jl      short loc_1000454d
push    2
lea     ecx, [ebp+lpnewfilename]
push    ecx
push    ebx
push    edi
mov     [ebp+var_40], ebx
mov     [ebp+lpnewfilename], ebx
call    ds:setfilepointer
cmp     eax, 0ffffffffh
jnz     short loc_1000452d
call    sub_100021f0
mov     [ebp+var_4c], ebx
mov     hfile, edi
cmp     byte_10013062, bl
jz      short loc_1000454d
push    offset abegain
push    ebx
push    ebx
call    sub_100048c0
add     esp, 0ch
mov     eax, [ebp+var_44]
add     eax, 0fffffff0h
mov     [ebp+var_4], 0ffffffffh
lea     edx, [eax+0ch]
or      ecx, 0ffffffffh
lock xadd [edx], ecx
dec     ecx
test    ecx, ecx
jg      short loc_10004573
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     edi, eax
jmp     loc_1000450f
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100045a0
mov     eax, large fs:0
push    eax
sub     esp, 11ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    esi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     esi, [ebp+arg_8]
mov     ecx, offset off_10013544
call    edx
add     eax, 10h
mov     [ebp+var_118], eax
mov     [ebp+var_4], 0
call    ds:getcurrentthreadid
push    eax
lea     eax, [ebp+var_118]
push    offset atidd
push    eax
call    sub_10003860
mov     edx, [esi]
mov     eax, [edx-0ch]
add     esp, 0ch
test    eax, eax
jle     short loc_10004636
lea     ecx, [eax-1]
test    ecx, ecx
js      loc_100047da
cmp     ecx, eax
jg      loc_100047da
mov     cl, [edx+ecx]
cmp     cl, 0ah
jz      short loc_10004636
push    0ah
mov     ecx, esi
call    sub_10003960
lea     ecx, [ebp+var_124]
push    ecx
call    sub_100038a0
lea     edx, [ebp+var_118]
push    edx
push    eax
lea     eax, [ebp+var_11c]
push    eax
mov     byte ptr [ebp+var_4], 1
call    sub_100033d0
push    esi
push    eax
lea     ecx, [ebp+var_128]
push    ecx
mov     byte ptr [ebp+var_4], 2
call    sub_100033d0
add     esp, 1ch
push    eax
mov     ecx, esi
mov     byte ptr [ebp+var_4], 3
call    sub_100036e0
mov     eax, [ebp+var_128]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], 2
lea     edx, [eax+0ch]
or      ecx, 0ffffffffh
lock xadd [edx], ecx
dec     ecx
test    ecx, ecx
jg      short loc_100046a1
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+var_11c]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], 1
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_100046c7
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+var_124]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], 0
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_100046ed
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
cmp     byte_100137c5, 0
jz      short loc_1000473c
mov     eax, [esi]
lea     ecx, [ebp+var_110]
push    0fde9h
mov     [ebp+lpoutputstring], ecx
push    eax
lea     ecx, [ebp+lpoutputstring]
call    sub_10002880
mov     edx, [ebp+lpoutputstring]
push    edx
call    ds:outputdebugstringw
mov     eax, [ebp+lpoutputstring]
lea     ecx, [ebp+var_110]
cmp     eax, ecx
jz      short loc_1000473c
push    eax
call    ds:__imp_free
add     esp, 4
call    sub_100041d0
mov     edx, addend
cmp     edx, 400000h
jge     short loc_10004797
push    offset addend
call    ds:interlockedincrement
cmp     eax, 400000h
jge     short loc_1000478c
mov     ecx, hfile
test    ecx, ecx
jz      short loc_1000478c
mov     esi, [esi]
push    0
lea     edx, [ebp+numberofbyteswritten]
push    edx
mov     [ebp+numberofbyteswritten], 0
mov     eax, [esi-0ch]
push    eax
push    esi
push    ecx
call    ds:writefile
push    offset addend
call    ds:interlockeddecrement
mov     eax, [ebp+var_118]
add     eax, 0fffffff0h
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_100047c0
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    80070057h
call    sub_100020c0
cmp     byte_100137c4, 0
jz      short locret_1000480f
push    0c800000h
push    0
mov     byte_10013062, 1
call    sub_10004370
add     esp, 8
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004810
mov     eax, large fs:0
push    eax
push    ecx
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
cmp     byte_10013062, 0
jz      short loc_100048a4
cmp     hfile, 0
jnz     short loc_100048a4
cmp     byte_100137cc, 0
jnz     short loc_100048a4
lea     eax, [ebp+var_10]
push    0
push    eax
mov     byte_100137cc, 1
call    sub_10004050
mov     eax, [eax]
push    0c800000h
push    eax
mov     [ebp+var_4], 0
call    sub_10004370
mov     eax, [ebp+var_10]
add     eax, 0fffffff0h
add     esp, 10h
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000489d
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     byte_100137c4, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100048c0
mov     eax, large fs:0
push    eax
sub     esp, 90h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
call    sub_10004810
cmp     hfile, 0
mov     esi, [ebp+arg_0]
jnz     short loc_10004906
test    esi, esi
jz      loc_100049e6
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     ecx, offset off_10013544
call    edx
add     eax, 10h
mov     [ebp+lpstring], eax
mov     ecx, [ebp+format]
lea     eax, [ebp+arglist]
push    eax
push    ecx
lea     ecx, [ebp+lpstring]
mov     [ebp+var_4], 0
call    sub_100034c0
mov     edi, [ebp+lpstring]
push    0fde9h
lea     edx, [ebp+var_90]
push    edi
lea     ecx, [ebp+block]
mov     [ebp+block], edx
call    sub_10002930
mov     eax, [ebp+block]
push    eax
lea     ecx, [ebp+var_9c]
mov     byte ptr [ebp+var_4], 1
call    sub_10003bb0
mov     ecx, [ebp+arg_4]
push    eax
push    ecx
push    esi
mov     byte ptr [ebp+var_4], 2
call    sub_100045a0
mov     eax, [ebp+var_9c]
add     eax, 0fffffff0h
add     esp, 0ch
mov     byte ptr [ebp+var_4], 1
lea     edx, [eax+0ch]
or      ecx, 0ffffffffh
lock xadd [edx], ecx
dec     ecx
test    ecx, ecx
jg      short loc_100049a9
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+block]
lea     ecx, [ebp+var_90]
cmp     eax, ecx
jz      short loc_100049c3
push    eax
call    ds:__imp_free
add     esp, 4
lea     eax, [edi-10h]
mov     [ebp+var_4], 0ffffffffh
lea     edx, [eax+0ch]
or      ecx, 0ffffffffh
lock xadd [edx], ecx
dec     ecx
test    ecx, ecx
jg      short loc_100049e6
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    offset dword_100137bc
call    ds:interlockeddecrement
test    eax, eax
jnz     short locret_10004a7d
push    ebx
xor     ebx, ebx
cmp     hfile, ebx
jz      short loc_10004a59
cmp     byte_10013062, bl
jz      short loc_10004a41
push    offset aend
push    ebx
push    ebx
call    sub_100048c0
add     esp, 0ch
mov     eax, hfile
push    eax
mov     byte_10013062, bl
call    ds:closehandle
mov     hfile, ebx
mov     ecx, hlibmodule
test    ecx, ecx
jz      short loc_10004a7c
mov     edx, hlibmodule
push    edx
mov     dword_100137b8, ebx
call    ds:freelibrary
mov     hlibmodule, ebx
pop     ebx
retn
jmp     sub_10004a10
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
mov     eax, 10h
push    esi
nop
mov     esi, [edx]
cmp     esi, [ecx]
jnz     short loc_10004ac2
sub     eax, 4
add     ecx, 4
add     edx, 4
cmp     eax, 4
jnb     short loc_10004aa0
xor     eax, eax
xor     edx, edx
test    eax, eax
setz    dl
pop     esi
mov     eax, edx
pop     ebp
retn
movzx   eax, byte ptr [edx]
movzx   esi, byte ptr [ecx]
sub     eax, esi
jnz     short loc_10004aee
movzx   eax, byte ptr [edx+1]
movzx   esi, byte ptr [ecx+1]
sub     eax, esi
jnz     short loc_10004aee
movzx   eax, byte ptr [edx+2]
movzx   esi, byte ptr [ecx+2]
sub     eax, esi
jnz     short loc_10004aee
movzx   eax, byte ptr [edx+3]
movzx   ecx, byte ptr [ecx+3]
sub     eax, ecx
sar     eax, 1fh
or      eax, 1
xor     edx, edx
test    eax, eax
setz    dl
pop     esi
mov     eax, edx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mul     [ebp+arg_8]
test    edx, edx
jnz     short loc_10004b12
cmp     eax, 0ffffffffh
jbe     short loc_10004b19
mov     eax, 80070216h
pop     ebp
retn
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+lpstring]
push    esi
call    ds:lstrlenw
mov     ecx, [ebp+arg_4]
lea     eax, [eax+eax+2]
push    eax
mov     eax, [ebp+destination]
push    esi
lea     edx, [ecx+ecx]
push    edx
push    eax
call    ds:memcpy_s
add     esp, 10h
neg     eax
sbb     eax, eax
inc     eax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+sourcesize]
mov     ecx, [ebp+source]
mov     edx, [ebp+destinationsize]
push    eax
mov     eax, [ebp+destination]
push    ecx
push    edx
push    eax
call    ds:memcpy_s
add     esp, 10h
cmp     eax, 50h
ja      short def_10004b88
movzx   ecx, ds:byte_10004bc0[eax]
jmp     ds:jpt_10004b88[ecx*4]
push    8007000eh
call    sub_100020c0
push    80070057h
call    sub_100020c0
push    80004005h
call    sub_100020c0
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+source]
mov     ecx, [ebp+sizeinwords]
mov     edx, [ebp+destination]
push    eax
push    ecx
push    edx
call    ds:wcscpy_s
add     esp, 0ch
cmp     eax, 50h
ja      short def_10004c44
movzx   eax, ds:byte_10004c7c[eax]
jmp     ds:jpt_10004c44[eax*4]
push    8007000eh
call    sub_100020c0
push    80070057h
call    sub_100020c0
push    80004005h
call    sub_100020c0
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+maxcount]
mov     ecx, [ebp+source]
mov     edx, [ebp+sizeinwords]
push    eax
mov     eax, [ebp+destination]
push    ecx
push    edx
push    eax
call    ds:wcsncpy_s
add     esp, 10h
cmp     eax, 50h
ja      short def_10004cf8
movzx   ecx, ds:byte_10004d30[eax]
jmp     ds:jpt_10004cf8[ecx*4]
push    8007000eh
call    sub_100020c0
push    80070057h
call    sub_100020c0
push    80004005h
call    sub_100020c0
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+source]
mov     ecx, [ebp+sizeinwords]
mov     edx, [ebp+destination]
push    eax
push    ecx
push    edx
call    ds:wcscat_s
add     esp, 0ch
cmp     eax, 50h
ja      short def_10004db4
movzx   eax, ds:byte_10004dec[eax]
jmp     ds:jpt_10004db4[eax*4]
push    8007000eh
call    sub_100020c0
push    80070057h
call    sub_100020c0
push    80004005h
call    sub_100020c0
pop     ebp
retn
push    esi
xor     esi, esi
push    esi
push    ecx
call    ds:initializecriticalsectionandspincount
test    eax, eax
jnz     short loc_10004e65
call    ds:getlasterror
test    eax, eax
jle     short loc_10004e67
and     eax, 0ffffh
or      eax, 80070000h
pop     esi
retn
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jle     short loc_10004e84
and     eax, 0ffffh
or      eax, 80070000h
pop     ebp
retn
mov     eax, [ecx]
push    eax
call    ds:sysfreestring
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
cmp     dword ptr [esi], 0
jz      short loc_10004efa
push    offset aadvapi32dll_0
call    ds:getmodulehandlew
test    eax, eax
jz      short loc_10004f08
push    offset aregcreatekeytr
push    eax
call    ds:getprocaddress
test    eax, eax
jz      short loc_10004f08
mov     ecx, [esi]
mov     edx, [ebp+arg_20]
push    0
push    ecx
mov     ecx, [ebp+arg_1c]
push    edx
mov     edx, [ebp+arg_18]
push    ecx
mov     ecx, [ebp+arg_14]
push    edx
mov     edx, [ebp+arg_10]
push    ecx
mov     ecx, [ebp+arg_c]
push    edx
mov     edx, [ebp+arg_8]
push    ecx
mov     ecx, [ebp+arg_4]
push    edx
mov     edx, [ebp+arg_0]
push    ecx
push    edx
call    eax
pop     esi
pop     ebp
retn    24h
cmp     dword ptr [esi+4], 0
jz      short loc_10004f08
pop     esi
pop     ebp
jmp     ds:regcreatekeyexw
mov     eax, 1
pop     esi
pop     ebp
retn    24h
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
cmp     dword ptr [esi], 0
jz      short loc_10004f62
push    offset aadvapi32dll_0
call    ds:getmodulehandlew
test    eax, eax
jz      short loc_10004f70
push    offset aregdeletekeytr
push    eax
call    ds:getprocaddress
test    eax, eax
jz      short loc_10004f70
mov     ecx, [esi]
mov     edx, [ebp+arg_4]
push    0
push    ecx
mov     ecx, [ebp+arg_0]
push    0
push    0
push    edx
push    ecx
call    eax
pop     esi
pop     ebp
retn    8
cmp     dword ptr [esi+4], 0
jz      short loc_10004f70
pop     esi
pop     ebp
jmp     ds:regdeletekeyw
mov     eax, 1
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
test    ecx, ecx
jz      short loc_10004fd3
push    esi
push    edi
lea     edi, [ecx-1]
mov     ecx, [ebp+arg_0]
xor     eax, eax
test    edi, edi
jz      short loc_10004fcc
mov     esi, [ebp+arg_8]
jmp     short loc_10004fa0
movzx   edx, word ptr [esi]
test    dx, dx
jz      short loc_10004fcc
mov     [ecx], dx
add     ecx, 2
cmp     word ptr [esi], 27h
jnz     short loc_10004fc4
inc     eax
cmp     eax, edi
jnb     short loc_10004fc4
mov     edx, 27h
mov     [ecx], dx
add     ecx, 2
inc     eax
add     esi, 2
cmp     eax, edi
jb      short loc_10004fa0
xor     eax, eax
pop     edi
mov     [ecx], ax
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     ecx, [esi+8]
test    ecx, ecx
jz      short loc_10004ffe
mov     eax, [ebp+lpsubkey]
mov     edx, [esi]
push    eax
push    edx
call    sub_10004f20
pop     esi
pop     ebp
retn    4
cmp     byte_100137f4, 0
jnz     short loc_1000502e
push    offset aadvapi32dll_0
call    ds:getmodulehandlew
test    eax, eax
jz      short loc_10005027
push    offset aregdeletekeyex
push    eax
call    ds:getprocaddress
mov     dword_100137f0, eax
mov     byte_100137f4, 1
mov     eax, dword_100137f0
mov     edx, [ebp+lpsubkey]
test    eax, eax
jz      short loc_1000504b
mov     ecx, [esi+4]
push    0
push    ecx
mov     ecx, [esi]
push    edx
push    ecx
call    eax
pop     esi
pop     ebp
retn    4
mov     eax, [esi]
push    edx
push    eax
call    ds:regdeletekeyw
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, ecx
mov     ecx, [esi+8]
push    edi
mov     edi, [ebp+samdesired]
mov     [ebp+phkresult], 0
lea     edx, [ebp+phkresult]
test    ecx, ecx
jz      short loc_1000509f
lea     eax, [ebp+lpsecurityattributes]
push    eax
mov     eax, [ebp+lpsecurityattributes]
push    edx
mov     edx, [ebp+dwoptions]
push    eax
mov     eax, [ebp+lpclass]
push    edi
push    edx
mov     edx, [ebp+lpsubkey]
push    eax
mov     eax, [ebp+hkey]
push    0
push    edx
push    eax
call    sub_10004ea0
jmp     short loc_100050c1
mov     eax, [ebp+lpsecurityattributes]
lea     ecx, [ebp+lpsecurityattributes]
push    ecx
mov     ecx, [ebp+dwoptions]
push    edx
mov     edx, [ebp+lpclass]
push    eax
mov     eax, [ebp+lpsubkey]
push    edi
push    ecx
mov     ecx, [ebp+hkey]
push    edx
push    0
push    eax
push    ecx
call    ds:regcreatekeyexw
mov     ecx, [ebp+arg_18]
test    ecx, ecx
jz      short loc_100050cd
mov     edx, [ebp+lpsecurityattributes]
mov     [ecx], edx
test    eax, eax
jnz     short loc_100050f2
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_100050e4
push    ecx
call    ds:regclosekey
mov     dword ptr [esi], 0
mov     ecx, [ebp+phkresult]
and     edi, 300h
mov     [esi], ecx
mov     [esi+4], edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    1ch
push    ebp
mov     ebp, esp
mov     edx, [ebp+lpvaluename]
push    4
lea     eax, [ebp+data]
push    eax
mov     eax, [ecx]
push    4
push    0
push    edx
push    eax
call    ds:regsetvalueexw
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+lpstring]
push    edi
mov     edi, ecx
test    esi, esi
jnz     short loc_10005137
pop     edi
lea     eax, [esi+0dh]
pop     esi
pop     ebp
retn    0ch
push    esi
call    ds:lstrlenw
mov     ecx, [ebp+dwtype]
mov     edx, [ebp+lpvaluename]
lea     eax, [eax+eax+2]
push    eax
mov     eax, [edi]
push    esi
push    ecx
push    0
push    edx
push    eax
call    ds:regsetvalueexw
pop     edi
pop     esi
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebp+lpstring]
mov     [ebp+var_4], ecx
test    esi, esi
jnz     short loc_10005179
lea     eax, [esi+0dh]
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebx
mov     ebx, ds:lstrlenw
push    edi
xor     edi, edi
push    esi
call    ebx
inc     eax
lea     esi, [esi+eax*2]
lea     edi, [edi+eax*2]
cmp     eax, 1
jnz     short loc_10005183
mov     eax, [ebp+lpstring]
mov     ecx, [ebp+lpvaluename]
mov     edx, [ebp+var_4]
push    edi
push    eax
mov     eax, [edx]
push    7
push    0
push    ecx
push    eax
call    ds:regsetvalueexw
pop     edi
pop     ebx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [ecx]
mov     ecx, 27h
cmp     cx, [eax]
jnz     short loc_100051e3
push    eax
call    ds:charnextw
mov     edx, 27h
cmp     dx, [eax]
jz      short loc_100051e3
mov     eax, 1
retn
xor     eax, eax
retn
mov     eax, [ecx+8]
push    eax
call    ds:cotaskmemfree
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     eax, [esi]
push    edi
mov     edi, [ebp+arg_4]
lea     ecx, [eax+edi+1]
cmp     ecx, eax
jle     loc_100052a2
cmp     ecx, edi
jle     loc_100052a2
cmp     ecx, [esi+4]
jl      short loc_1000525d
mov     eax, [esi+4]
cmp     eax, 3fffffffh
jg      short loc_100052a2
add     eax, eax
mov     [esi+4], eax
cmp     ecx, eax
jge     short loc_10005225
mov     edx, [esi+8]
xor     ecx, ecx
shld    ecx, eax, 1
add     eax, eax
test    ecx, ecx
ja      short loc_100052a2
jb      short loc_1000524e
cmp     eax, 0ffffffffh
ja      short loc_100052a2
push    eax
push    edx
call    ds:cotaskmemrealloc
test    eax, eax
jz      short loc_100052a2
mov     [esi+8], eax
mov     eax, [esi]
test    eax, eax
js      short loc_100052a2
mov     edx, [esi+4]
cmp     eax, edx
jge     short loc_100052a2
mov     ecx, edx
sub     ecx, eax
cmp     ecx, edx
jg      short loc_100052a2
lea     edx, [edi+edi]
push    edx
mov     edx, [ebp+source]
push    edx
mov     edx, [esi+8]
add     ecx, ecx
push    ecx
lea     eax, [edx+eax*2]
push    eax
call    sub_10004b60
add     [esi], edi
mov     eax, [esi]
mov     ecx, [esi+8]
add     esp, 10h
xor     edx, edx
pop     edi
mov     [ecx+eax*2], dx
lea     eax, [edx+1]
pop     esi
pop     ebp
retn    8
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
test    byte ptr dword_10013818, 1
jnz     short loc_10005319
or      dword_10013818, 1
mov     eax, 8
mov     word_100137fc, ax
mov     ecx, 4008h
mov     edx, 13h
mov     eax, 11h
mov     lpstring2, offset as
mov     dword_10013800, offset am
mov     word_10013804, cx
mov     dword_10013808, offset ad
mov     word_1001380c, dx
mov     dword_10013810, offset ab
mov     word_10013814, ax
push    ebx
mov     ebx, ds:lstrcmpiw
push    esi
push    edi
mov     edi, [ebp+lpstring1]
xor     esi, esi
mov     ecx, lpstring2[esi*8]
push    ecx
push    edi
call    ebx
test    eax, eax
jz      short loc_10005343
inc     esi
cmp     esi, 4
jb      short loc_10005327
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn
mov     dx, word_100137fc[esi*8]
mov     eax, [ebp+arg_4]
pop     edi
pop     esi
mov     [eax], dx
mov     eax, 1
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
movzx   ecx, [ebp+arg_0]
lea     eax, [ecx-30h]
cmp     eax, 36h
ja      short def_10005376
movzx   edx, ds:byte_1000539c[eax]
jmp     ds:jpt_10005376[edx*4]
lea     eax, [ecx-37h]
pop     ebp
retn
lea     eax, [ecx-57h]
pop     ebp
retn
xor     al, al
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+lpsz]
push    ebx
xor     ebx, ebx
test    eax, eax
jnz     short loc_100053f0
pop     ebx
pop     ebp
retn
movzx   ecx, word ptr [eax]
test    cx, cx
jz      short loc_1000541f
push    esi
mov     esi, ds:charnextw
push    edi
mov     di, [ebp+arg_4]
cmp     cx, di
jz      short loc_1000541b
push    eax
call    esi
movzx   ecx, word ptr [eax]
test    cx, cx
jnz     short loc_10005404
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn
pop     edi
mov     ebx, eax
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn
push    esi
push    edi
mov     edi, ds:charnextw
mov     esi, ecx
lea     ebx, [ebx+0]
mov     eax, [esi]
movzx   ecx, word ptr [eax]
add     ecx, 0fffffff7h
cmp     ecx, 17h
ja      short def_10005454
movzx   ecx, ds:byte_10005470[ecx]
jmp     ds:jpt_10005454[ecx*4]
push    eax
call    edi
mov     [esi], eax
jmp     short loc_10005440
pop     edi
pop     esi
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, ecx
call    sub_10005430
mov     ecx, [ebx]
movzx   eax, word ptr [ecx]
xor     edx, edx
cmp     dx, ax
jnz     short loc_100054b1
mov     eax, 80020009h
pop     ebx
pop     ebp
retn    4
push    esi
mov     esi, [ebp+arg_0]
mov     edx, 27h
push    edi
mov     [ebp+arg_0], esi
cmp     dx, ax
jnz     loc_10005570
mov     edi, ds:charnextw
push    ecx
call    edi
xor     ecx, ecx
mov     [ebx], eax
cmp     cx, [eax]
jz      short loc_1000554c
mov     eax, [ebx]
mov     edx, 27h
cmp     dx, [eax]
jnz     short loc_100054f2
push    eax
call    edi
mov     ecx, 27h
cmp     cx, [eax]
jnz     short loc_1000554c
mov     eax, [ebx]
mov     edx, 27h
cmp     dx, [eax]
jnz     short loc_10005503
push    eax
call    edi
mov     [ebx], eax
mov     edi, [ebx]
push    edi
call    ds:charnextw
mov     edx, [ebp+arg_0]
mov     [ebx], eax
sub     eax, edi
sar     eax, 1
lea     ecx, [esi+eax*2+2]
add     edx, 2000h
cmp     ecx, edx
jnb     loc_100055d4
test    eax, eax
jle     short loc_1000553d
sub     edi, esi
lea     ecx, [ecx+0]
mov     cx, [edi+esi]
mov     [esi], cx
add     esi, 2
dec     eax
jnz     short loc_10005530
mov     edx, [ebx]
mov     edi, ds:charnextw
xor     eax, eax
cmp     ax, [edx]
jmp     short loc_100054d7
mov     ecx, [ebx]
xor     edx, edx
cmp     dx, [ecx]
jz      short loc_100055d4
xor     eax, eax
mov     [esi], ax
mov     ecx, [ebx]
push    ecx
call    edi
pop     edi
mov     [ebx], eax
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn    4
mov     edi, [ebx]
movzx   eax, word ptr [edi]
add     eax, 0fffffff7h
cmp     eax, 17h
ja      short def_10005584
movzx   edx, ds:byte_100055e8[eax]
jmp     ds:jpt_10005584[edx*4]
push    edi
call    ds:charnextw
mov     edx, [ebp+arg_0]
mov     [ebx], eax
sub     eax, edi
sar     eax, 1
lea     ecx, [esi+eax*2+2]
add     edx, 2000h
cmp     ecx, edx
jnb     short loc_100055d4
test    eax, eax
jle     short loc_100055bd
sub     edi, esi
nop
mov     cx, [edi+esi]
mov     [esi], cx
add     esi, 2
dec     eax
jnz     short loc_100055b0
mov     edx, [ebx]
xor     eax, eax
cmp     ax, [edx]
jnz     short loc_10005570
xor     ecx, ecx
pop     edi
mov     [esi], cx
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn    4
pop     edi
pop     esi
mov     eax, 80020009h
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, ds:lstrcmpiw
push    esi
push    edi
mov     edi, [ebp+lpstring1]
mov     esi, offset off_1000f704
mov     eax, [esi]
push    eax
push    edi
call    ebx
test    eax, eax
jz      short loc_10005635
add     esi, 4
cmp     esi, offset dword_1000f734
jl      short loc_10005614
pop     edi
pop     esi
mov     eax, 1
pop     ebx
pop     ebp
retn    4
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+hkey]
push    0
push    0
push    0
push    0
push    0
push    0
push    0
lea     eax, [ebp+csubkeys]
push    eax
push    0
push    0
push    0
push    ecx
mov     [ebp+csubkeys], 0
call    ds:regqueryinfokeyw
test    eax, eax
jz      short loc_10005679
xor     eax, eax
mov     esp, ebp
pop     ebp
retn    4
xor     edx, edx
cmp     edx, [ebp+csubkeys]
sbb     eax, eax
neg     eax
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, 2004h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
push    edi
mov     edi, [ebp+arg_0]
cmp     word ptr [edi], 3dh
mov     esi, ecx
jnz     short loc_100056e3
push    edi
call    sub_10005490
test    eax, eax
js      short loc_100056e5
mov     ecx, esi
call    sub_10005430
lea     eax, [ebp+var_2004]
push    eax
mov     ecx, esi
call    sub_10005490
test    eax, eax
js      short loc_100056e5
push    edi
mov     ecx, esi
call    sub_10005490
test    eax, eax
js      short loc_100056e5
xor     eax, eax
mov     ecx, [ebp+var_4]
pop     edi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
test    eax, eax
jnz     short loc_10005705
retn
movzx   ecx, word ptr [eax]
push    esi
xor     esi, esi
test    cx, cx
jz      short loc_1000573c
push    edi
mov     edi, ds:charnextw
movzx   ecx, cx
cmp     ecx, 2eh
jz      short loc_10005728
cmp     ecx, 5ch
jnz     short loc_1000572a
xor     esi, esi
jmp     short loc_1000572a
mov     esi, eax
push    eax
call    edi
movzx   ecx, word ptr [eax]
test    cx, cx
jnz     short loc_10005717
pop     edi
test    esi, esi
jz      short loc_1000573c
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
test    ebx, ebx
jnz     short loc_1000574e
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
cmp     word ptr [ebx], 0
push    esi
mov     [ebp+var_4], ebx
mov     esi, ebx
jz      short loc_10005782
push    edi
mov     edi, ds:charnextw
push    esi
call    edi
movzx   ecx, word ptr [esi]
cmp     ecx, 5ch
jz      short loc_10005776
cmp     ecx, 2fh
jz      short loc_10005776
cmp     ecx, 3ah
jnz     short loc_10005779
mov     [ebp+var_4], eax
cmp     word ptr [eax], 0
mov     esi, eax
jnz     short loc_10005761
pop     edi
mov     eax, [ebp+var_4]
sub     eax, ebx
sar     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+nnumberofarguments]
push    esi
test    ebx, ebx
jnz     short loc_100057ab
push    ebx
push    ebx
push    1
push    0c0000005h
call    ds:raiseexception
mov     esi, [ebx+8]
test    esi, esi
jz      short loc_100057ce
push    edi
mov     eax, [esi+4]
mov     ecx, [esi]
push    eax
call    ecx
mov     edi, [esi+8]
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     esi, edi
test    edi, edi
jnz     short loc_100057b3
pop     edi
pop     esi
mov     dword ptr [ebx+8], 0
pop     ebx
pop     ebp
retn    4
push    esi
mov     esi, ecx
cmp     dword ptr [esi], 0
jz      short loc_10005802
push    edi
mov     edi, ds:__imp_free
nop
mov     eax, [esi]
mov     ecx, [eax]
push    eax
mov     [esi], ecx
call    edi
add     esp, 4
cmp     dword ptr [esi], 0
jnz     short loc_100057f0
pop     edi
pop     esi
retn
mov     eax, [ecx]
push    eax
call    ds:__imp_free
pop     ecx
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+size]
push    esi
push    eax
mov     esi, ecx
call    ds:malloc
add     esp, 4
test    eax, eax
jnz     short loc_10005841
push    8007000eh
call    sub_100020c0
mov     [esi], eax
pop     esi
pop     ebp
retn    4
mov     eax, dword_1001381c
mov     edx, [eax+0ch]
mov     ecx, offset dword_1001381c
call    edx
neg     eax
sbb     eax, eax
neg     eax
retn
push    esi
mov     esi, ecx
lea     eax, [esi+10h]
xor     ecx, ecx
mov     [eax], ecx
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
push    edi
xor     edi, edi
mov     [eax+14h], ecx
push    edi
mov     [esi+4], edi
mov     [esi+0ch], edi
mov     [esi+8], edi
mov     dword_100137dc, esi
push    eax
mov     [esi+28h], edi
call    ds:initializecriticalsectionandspincount
test    eax, eax
jnz     short loc_100058ce
call    ds:getlasterror
cmp     eax, edi
jle     short loc_100058c0
and     eax, 0ffffh
or      eax, 80070000h
cmp     eax, edi
jge     short loc_100058ce
pop     edi
mov     eax, esi
mov     byte_100137cd, 1
pop     esi
retn
pop     edi
mov     dword ptr [esi+4], 24h
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 220h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+lpsubkey]
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ecx, [edi+4]
mov     edx, [edi]
or      ecx, 2001fh
push    ecx
xor     esi, esi
push    eax
push    edx
lea     ecx, [ebp+hkey]
mov     [ebp+var_218], eax
mov     [ebp+hkey], esi
mov     [ebp+var_20c], esi
mov     [ebp+var_208], esi
call    sub_10002360
mov     ebx, eax
cmp     ebx, esi
jz      short loc_1000595a
mov     eax, [ebp+hkey]
cmp     eax, esi
jz      short loc_10005945
push    eax
call    ds:regclosekey
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
lea     eax, [ebp+ftlastwritetime]
push    eax
mov     eax, [ebp+hkey]
push    esi
push    esi
push    esi
lea     ecx, [ebp+cchname]
push    ecx
lea     edx, [ebp+name]
push    edx
push    esi
push    eax
mov     [ebp+cchname], 100h
call    ds:regenumkeyexw
test    eax, eax
jnz     short loc_100059dc
mov     edi, edi
lea     ecx, [ebp+name]
push    ecx
lea     ecx, [ebp+hkey]
call    sub_100058e0
mov     ebx, eax
cmp     ebx, esi
jnz     short loc_10005934
lea     edx, [ebp+ftlastwritetime]
push    edx
mov     edx, [ebp+hkey]
push    esi
push    esi
push    esi
lea     eax, [ebp+cchname]
push    eax
lea     ecx, [ebp+name]
push    ecx
push    esi
push    edx
mov     [ebp+cchname], 100h
call    ds:regenumkeyexw
test    eax, eax
jz      short loc_10005990
mov     eax, [ebp+hkey]
mov     ebx, ds:regclosekey
cmp     eax, esi
jz      short loc_100059f5
push    eax
call    ebx
mov     [ebp+hkey], esi
mov     eax, [ebp+var_218]
push    eax
mov     ecx, edi
mov     [ebp+var_20c], esi
call    sub_10004fe0
mov     edi, eax
mov     eax, [ebp+hkey]
cmp     eax, esi
jz      short loc_10005a18
push    eax
call    ebx
mov     ecx, [ebp+var_4]
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
cmp     [esi+8], edi
jle     short loc_10005a71
jmp     short loc_10005a40
test    edi, edi
js      short loc_10005aa9
cmp     edi, [esi+8]
jge     short loc_10005aa9
mov     eax, [esi]
mov     ecx, [eax+edi*4]
push    ecx
call    ??_v@yaxpax@z
add     esp, 4
cmp     edi, [esi+8]
jge     short loc_10005aa9
mov     edx, [esi+4]
mov     eax, [edx+edi*4]
push    eax
call    ??_v@yaxpax@z
inc     edi
add     esp, 4
cmp     edi, [esi+8]
jl      short loc_10005a40
mov     eax, [esi]
mov     edi, ds:__imp_free
test    eax, eax
jz      short loc_10005a89
push    eax
call    edi
add     esp, 4
mov     dword ptr [esi], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_10005a9d
push    eax
call    edi
add     esp, 4
mov     dword ptr [esi+4], 0
pop     edi
mov     dword ptr [esi+8], 0
xor     eax, eax
pop     esi
retn
push    0
push    0
push    1
push    0c000008ch
call    ds:raiseexception
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10005ac0
mov     eax, large fs:0
push    eax
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     esi, [ebp+lpstring]
xor     eax, eax
cmp     esi, eax
jnz     short loc_10005b02
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     [ebp+lpstring], eax
push    esi
mov     [ebp+var_4], eax
call    ds:lstrlenw
push    eax
push    esi
mov     ecx, edi
call    sub_10005200
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
add     ecx, 4
call    sub_10005a30
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 238h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_8]
mov     eax, [ebp+hmodule]
push    ebx
mov     ebx, [ebp+lpstring]
push    edi
mov     edi, [ebp+pptlib]
mov     [ebp+var_234], ecx
test    ecx, ecx
jz      loc_10005d17
test    edi, edi
jz      loc_10005d17
push    esi
mov     dword ptr [ecx], 0
push    104h
lea     ecx, [ebp+filename]
push    ecx
push    eax
mov     dword ptr [edi], 0
mov     [ebp+var_230], 0
call    ds:getmodulefilenamew
mov     esi, eax
test    esi, esi
jnz     short loc_10005bde
call    sub_100021f0
mov     esi, eax
lea     ecx, [ebp+var_230]
call    sub_100057e0
mov     eax, esi
pop     esi
pop     edi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
cmp     esi, 104h
jnz     short loc_10005c09
lea     ecx, [ebp+var_230]
call    sub_100057e0
pop     esi
pop     edi
mov     eax, 8007007ah
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
lea     eax, [ebp+filename]
call    sub_10005700
mov     [ebp+destination], eax
test    ebx, ebx
jz      short loc_10005c51
push    ebx
call    ds:lstrlenw
lea     ecx, [eax+esi]
cmp     ecx, esi
jb      short loc_10005ca4
cmp     ecx, eax
jb      short loc_10005ca4
cmp     ecx, 10eh
jnb     short loc_10005ca4
mov     edx, 10eh
push    ebx
sub     edx, esi
push    edx
lea     eax, [ebp+esi*2+filename]
push    eax
call    sub_10004c20
add     esp, 0ch
mov     ebx, ds:loadtypelib
push    edi
lea     ecx, [ebp+filename]
push    ecx
call    ebx
mov     esi, eax
test    esi, esi
jns     loc_10005cf0
mov     cx, ds:word_1000f988
mov     edx, ds:dword_1000f980
mov     eax, ds:dword_1000f984
mov     [ebp+var_c], eax
mov     [ebp+var_8], cx
mov     ecx, [ebp+destination]
mov     dword ptr [ebp+source], edx
lea     edx, [ebp+filename]
mov     eax, ecx
sub     eax, edx
sar     eax, 1
lea     edx, [eax+5]
cmp     edx, 104h
jbe     short loc_10005cc7
lea     ecx, [ebp+var_230]
call    sub_100057e0
pop     esi
pop     edi
mov     eax, 80004005h
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
lea     edx, [ebp+source]
push    edx
mov     edx, 10eh
sub     edx, eax
push    edx
push    ecx
call    sub_10004c20
add     esp, 0ch
push    edi
lea     eax, [ebp+filename]
push    eax
call    ebx
mov     esi, eax
test    esi, esi
js      loc_10005bbe
lea     ecx, [ebp+filename]
push    ecx
call    ds:sysallocstring
mov     edx, [ebp+var_234]
mov     [edx], eax
test    eax, eax
jnz     loc_10005bbe
mov     esi, 8007000eh
jmp     loc_10005bbe
mov     ecx, [ebp+var_4]
pop     edi
xor     ecx, ebp
mov     eax, 80004003h
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, ecx
xor     esi, esi
cmp     [edi+8], esi
jle     short loc_10005d69
mov     ebx, [ebp+arg_0]
mov     eax, [ebx]
mov     ecx, [edi]
mov     ecx, [ecx+esi*4]
push    eax
push    ecx
call    ds:lstrcmpiw
test    eax, eax
jz      short loc_10005d64
inc     esi
cmp     esi, [edi+8]
jl      short loc_10005d42
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn    4
cmp     esi, 0ffffffffh
jnz     short loc_10005d72
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn    4
test    esi, esi
js      short loc_10005d88
cmp     esi, [edi+8]
jge     short loc_10005d88
mov     edx, [edi+4]
mov     eax, [edx+esi*4]
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    0
push    0
push    1
push    0c000008ch
call    ds:raiseexception
push    esi
mov     esi, ecx
mov     eax, [esi]
push    eax
call    ??_v@yaxpax@z
add     esp, 4
mov     dword ptr [esi], 0
pop     esi
retn
lea     eax, [ecx+4]
cmp     [ecx], eax
jz      short locret_10005dcc
jmp     sub_10005810
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+fdwreason]
mov     eax, ecx
dec     eax
jnz     short loc_10005de2
call    sub_10002050
jmp     short loc_10005de7
cmp     ecx, 1
jnz     short loc_10005df6
cmp     byte_100137cd, 0
jz      short loc_10005df6
xor     eax, eax
pop     ebp
retn    0ch
mov     eax, 1
pop     ebp
retn    0ch
push    esi
lea     esi, [ecx+4]
mov     dword ptr [ecx], offset ??_7cregobject@atl@@6b@
push    edi
mov     ecx, esi
call    sub_10005a30
mov     ecx, esi
call    sub_10005a30
mov     eax, [esi]
mov     edi, ds:__imp_free
test    eax, eax
jz      short loc_10005e31
push    eax
call    edi
add     esp, 4
mov     dword ptr [esi], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_10005e45
push    eax
call    edi
add     esp, 4
mov     dword ptr [esi+4], 0
pop     edi
mov     dword ptr [esi+8], 0
pop     esi
retn
mov     eax, 80004001h
retn    0ch
mov     eax, 1
retn    4
xor     eax, eax
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, ecx
lea     ecx, [edi+4]
mov     dword ptr [edi], offset ??_7cregobject@atl@@6b@
call    sub_10005a30
lea     ecx, [edi+4]
call    sub_10005a30
mov     eax, [edi+4]
mov     ebx, ds:__imp_free
test    eax, eax
jz      short loc_10005eb8
push    eax
call    ebx
add     esp, 4
mov     dword ptr [edi+4], 0
mov     eax, [edi+8]
test    eax, eax
jz      short loc_10005ecc
push    eax
call    ebx
add     esp, 4
mov     dword ptr [edi+8], 0
test    [ebp+arg_0], 1
mov     dword ptr [edi+0ch], 0
jz      short loc_10005ee2
push    edi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10005f00
mov     eax, large fs:0
push    eax
sub     esp, 68h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, [ebp+lpstring]
mov     ebx, [ebp+arg_4]
mov     esi, ecx
mov     [ebp+var_70], ebx
test    edi, edi
jz      loc_100061a0
test    ebx, ebx
jz      loc_100061a0
push    edi
mov     dword ptr [ebx], 0
call    ds:lstrlenw
add     eax, eax
cmp     eax, 64h
jge     short loc_10005f5f
mov     eax, 3e8h
xor     ecx, ecx
shld    ecx, eax, 1
xor     edx, edx
mov     [ebp+var_68], eax
add     eax, eax
mov     [ebp+var_6c], edx
cmp     ecx, edx
ja      short loc_10005f78
cmp     eax, 0ffffffffh
jbe     short loc_10005f7c
xor     eax, eax
jmp     short loc_10005f85
push    eax
call    ds:cotaskmemalloc
xor     edx, edx
mov     [ebp+pv], eax
cmp     eax, edx
jz      short loc_10005f91
xor     ecx, ecx
mov     [eax], cx
mov     [ebp+var_4], edx
cmp     eax, edx
jnz     short loc_10005fa9
push    edx
call    ds:cotaskmemfree
mov     eax, 8007000eh
jmp     loc_100061a5
mov     [esi], edi
mov     al, byte_100137d8
mov     [ebp+var_59], al
mov     [ebp+var_58], edx
mov     [ebp+var_60], edx
mov     [ebp+var_52], 0
mov     [ebp+var_51], 0
cmp     [edi], dx
jz      loc_1000614a
mov     ebx, ds:charnextw
cmp     [ebp+var_59], 1
jnz     loc_100060a7
cmp     [ebp+var_60], 0
jnz     short loc_10006028
mov     eax, [esi]
push    offset substr
push    eax
call    ds:wcsstr
add     esp, 8
test    eax, eax
jz      short loc_10006028
mov     ecx, [esi]
cmp     eax, ecx
jnz     short loc_10006028
push    ecx
call    ebx
push    eax
mov     [esi], eax
call    ebx
push    eax
mov     [esi], eax
call    ebx
push    eax
mov     [esi], eax
call    ebx
push    offset string
lea     ecx, [ebp+var_6c]
mov     [esi], eax
call    sub_10005ac0
test    eax, eax
jz      loc_1000615e
mov     [ebp+var_52], 1
mov     ecx, [esi]
mov     edx, 27h
cmp     dx, [ecx]
jnz     short loc_1000606b
cmp     [ebp+var_51], 0
jnz     short loc_10006040
mov     [ebp+var_51], 1
jmp     short loc_100060a7
mov     ecx, esi
call    sub_100051c0
test    eax, eax
jz      short loc_10006051
mov     [ebp+var_51], 0
jmp     short loc_10006071
mov     eax, [esi]
push    eax
call    ebx
push    1
push    eax
lea     ecx, [ebp+var_6c]
mov     [esi], eax
call    sub_10005200
test    eax, eax
jz      loc_1000615e
cmp     [ebp+var_51], 0
jnz     short loc_100060a7
mov     ecx, [esi]
movzx   eax, word ptr [ecx]
cmp     eax, 7bh
jnz     short loc_1000607e
inc     [ebp+var_60]
cmp     eax, 7dh
jnz     short loc_100060a7
dec     [ebp+var_60]
jnz     short loc_100060a7
cmp     [ebp+var_52], 1
jnz     short loc_100060a7
push    offset asc_1000f9a8
lea     ecx, [ebp+var_6c]
call    sub_10005ac0
test    eax, eax
jz      loc_1000615e
mov     [ebp+var_52], 0
mov     eax, [esi]
cmp     word ptr [eax], 25h
jnz     short loc_10006125
push    eax
call    ebx
mov     [esi], eax
cmp     word ptr [eax], 25h
jz      short loc_10006125
push    25h
push    eax
call    sub_100053e0
mov     edi, eax
add     esp, 8
test    edi, edi
jz      loc_10006174
mov     ecx, [esi]
sub     eax, ecx
sar     eax, 1
cmp     eax, 1fh
jg      loc_1000618a
push    eax
push    ecx
lea     edx, [ebp+destination]
push    20h
push    edx
call    sub_10004cd0
lea     eax, [ebp+destination]
add     esp, 10h
mov     [ebp+var_74], eax
mov     eax, [esi+4]
lea     ecx, [ebp+var_74]
push    ecx
lea     ecx, [eax+4]
call    sub_10005d30
test    eax, eax
jz      short loc_10006174
push    eax
lea     ecx, [ebp+var_6c]
call    sub_10005ac0
test    eax, eax
jz      short loc_1000615e
cmp     [esi], edi
jz      short loc_10006134
mov     edx, [esi]
push    edx
call    ebx
mov     [esi], eax
cmp     eax, edi
jnz     short loc_10006118
jmp     short loc_10006134
push    1
push    eax
lea     ecx, [ebp+var_6c]
call    sub_10005200
test    eax, eax
jz      short loc_1000615e
mov     eax, [esi]
push    eax
call    ebx
mov     [esi], eax
cmp     word ptr [eax], 0
jnz     loc_10005fd0
mov     ebx, [ebp+var_70]
xor     edx, edx
mov     eax, [ebp+pv]
push    edx
mov     [ebp+pv], edx
mov     [ebx], eax
call    ds:cotaskmemfree
mov     eax, [ebp+var_58]
jmp     short loc_100061a5
mov     edx, [ebp+pv]
push    edx
mov     [ebp+var_58], 8007000eh
call    ds:cotaskmemfree
mov     eax, [ebp+var_58]
jmp     short loc_100061a5
mov     edx, [ebp+pv]
push    edx
mov     [ebp+var_58], 80020009h
call    ds:cotaskmemfree
mov     eax, [ebp+var_58]
jmp     short loc_100061a5
mov     edx, [ebp+pv]
push    edx
mov     [ebp+var_58], 80004005h
call    ds:cotaskmemfree
mov     eax, [ebp+var_58]
jmp     short loc_100061a5
mov     eax, 80004003h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 1b8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [ebp+rguid]
push    edi
xor     edi, edi
mov     [ebp+ppv], edi
cmp     ebx, edi
jz      loc_100064a0
mov     eax, [esi]
cmp     eax, ds:dword_10010ab0
jnz     short loc_1000622b
mov     ecx, [esi+4]
cmp     ecx, ds:dword_10010ab4
jnz     short loc_1000622b
mov     edx, [esi+8]
cmp     edx, ds:dword_10010ab8
jnz     short loc_1000622b
mov     eax, [esi+0ch]
cmp     eax, ds:dword_10010abc
jz      loc_100064a0
lea     ecx, [ebp+ppv]
push    ecx
push    offset riid
push    1
push    edi
push    offset rclsid
call    ds:cocreateinstance
test    eax, eax
js      loc_1000648e
cmp     [ebx], edi
jz      short loc_100062c2
mov     eax, [ebx+4]
mov     ecx, [eax]
mov     [ebp+var_194], ecx
mov     edx, [eax+4]
mov     [ebp+var_190], edx
mov     ecx, [eax+8]
mov     [ebp+var_18c], ecx
mov     edx, [eax+0ch]
mov     eax, [ebp+ppv]
mov     [ebp+var_188], edx
mov     ecx, [eax]
lea     edx, [ebp+var_194]
push    edx
push    1
push    esi
push    eax
cmp     [ebp+arg_8], edi
jz      short loc_100062ac
cmp     dword ptr [ebx], 1
jnz     short loc_10006299
mov     eax, [ecx+14h]
jmp     short loc_1000629c
mov     eax, [ecx+1ch]
call    eax
mov     edi, eax
test    edi, edi
js      loc_100064b5
xor     edi, edi
jmp     short loc_100062bb
cmp     dword ptr [ebx], 1
jnz     short loc_100062b6
mov     eax, [ecx+18h]
jmp     short loc_100062b9
mov     eax, [ecx+20h]
call    eax
add     ebx, 8
cmp     [ebx], edi
jnz     short loc_10006251
cmp     [ebp+arg_8], edi
jnz     loc_1000648e
push    40h
lea     eax, [ebp+sz]
push    eax
push    esi
call    ds:stringfromguid2
push    offset aclsid
lea     ecx, [ebp+subkey]
push    80h
push    ecx
mov     [ebp+var_1b8], edi
call    sub_10004c20
lea     edx, [ebp+sz]
push    edx
lea     eax, [ebp+subkey]
push    80h
push    eax
call    sub_10004d90
push    offset arequiredcatego
lea     ecx, [ebp+subkey]
push    80h
push    ecx
call    sub_10004d90
add     esp, 24h
push    20019h
lea     edx, [ebp+subkey]
push    edx
push    80000000h
lea     ecx, [ebp+hkey]
mov     [ebp+var_1b4], 80000000h
mov     [ebp+var_1b0], edi
mov     [ebp+var_1ac], edi
mov     [ebp+hkey], edi
mov     [ebp+var_1a4], edi
mov     [ebp+var_1a0], edi
mov     [ebp+csubkeys], edi
call    sub_10002360
mov     ebx, ds:regqueryinfokeyw
test    eax, eax
jnz     short loc_100063c1
mov     ecx, [ebp+hkey]
push    edi
push    edi
push    edi
push    edi
push    edi
push    edi
push    edi
lea     eax, [ebp+csubkeys]
push    eax
push    edi
push    edi
push    edi
push    ecx
call    ebx
lea     ecx, [ebp+hkey]
mov     esi, eax
call    sub_10002330
cmp     esi, edi
jnz     short loc_100063c1
cmp     [ebp+csubkeys], edi
jnz     short loc_100063c1
lea     edx, [ebp+subkey]
push    edx
lea     ecx, [ebp+var_1b4]
call    sub_10004fe0
push    offset aclsid
lea     eax, [ebp+subkey]
push    80h
push    eax
call    sub_10004c20
lea     ecx, [ebp+sz]
push    ecx
lea     edx, [ebp+subkey]
push    80h
push    edx
call    sub_10004d90
push    offset aimplementedcat
lea     eax, [ebp+subkey]
push    80h
push    eax
call    sub_10004d90
add     esp, 24h
push    20019h
lea     ecx, [ebp+subkey]
push    ecx
push    80000000h
lea     ecx, [ebp+hkey]
call    sub_10002360
test    eax, eax
jnz     short loc_1000646d
mov     eax, [ebp+hkey]
push    edi
push    edi
push    edi
push    edi
push    edi
push    edi
push    edi
lea     edx, [ebp+csubkeys]
push    edx
push    edi
push    edi
push    edi
push    eax
call    ebx
lea     ecx, [ebp+hkey]
mov     esi, eax
call    sub_10002330
cmp     esi, edi
jnz     short loc_1000646d
cmp     [ebp+csubkeys], edi
jnz     short loc_1000646d
lea     ecx, [ebp+subkey]
push    ecx
lea     ecx, [ebp+var_1b4]
call    sub_10004fe0
lea     ecx, [ebp+hkey]
call    sub_10002a60
lea     ecx, [ebp+var_1b4]
call    sub_10002a60
lea     ecx, [ebp+var_1b8]
call    sub_100057e0
mov     eax, [ebp+ppv]
cmp     eax, edi
jz      short loc_100064a0
mov     edx, [eax]
push    eax
mov     eax, [edx+8]
call    eax
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, [ebp+ppv]
test    eax, eax
jz      short loc_100064c7
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     ecx, [ebp+var_4]
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 8
mov     edx, [ebp+lpstring]
push    esi
lea     eax, [ebp+pptlib]
push    eax
mov     eax, [ebp+hmodule]
lea     ecx, [ebp+bstrstring]
push    ecx
push    edx
push    eax
mov     [ebp+bstrstring], 0
mov     [ebp+pptlib], 0
call    sub_10005b50
mov     esi, eax
test    esi, esi
js      short loc_1000657b
mov     eax, [ebp+pptlib]
mov     ecx, [eax]
lea     edx, [ebp+lpstring]
push    edx
push    eax
mov     eax, [ecx+1ch]
call    eax
mov     esi, eax
test    esi, esi
js      short loc_1000657b
cmp     byte_100137d8, 1
jnz     short loc_1000654d
push    offset aoleaut32dll_0
call    ds:getmodulehandlew
test    eax, eax
jz      short loc_1000654d
push    offset aunregistertype
push    eax
call    ds:getprocaddress
test    eax, eax
jnz     short loc_10006552
mov     eax, ds:unregistertypelib
mov     ecx, [ebp+lpstring]
mov     edx, [ecx+14h]
push    edx
mov     edx, [ecx+10h]
push    edx
movzx   edx, word ptr [ecx+1ah]
push    edx
movzx   edx, word ptr [ecx+18h]
push    edx
push    ecx
call    eax
mov     edx, [ebp+lpstring]
mov     esi, eax
mov     eax, [ebp+pptlib]
mov     ecx, [eax]
push    edx
push    eax
mov     eax, [ecx+30h]
call    eax
mov     eax, [ebp+pptlib]
test    eax, eax
jz      short loc_1000658a
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     eax, [ebp+bstrstring]
push    eax
call    ds:sysfreestring
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 218h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+lpstring]
mov     eax, [ebp+hmodule]
push    esi
lea     edx, [ebp+pptlib]
push    edx
lea     edx, [ebp+bstrstring]
push    edx
push    ecx
push    eax
mov     [ebp+bstrstring], 0
mov     [ebp+pptlib], 0
call    sub_10005b50
mov     esi, eax
test    esi, esi
js      loc_100066ac
mov     eax, [ebp+pptlib]
xor     esi, esi
lea     edx, [ebp+pbstr]
push    edx
push    esi
push    esi
push    esi
mov     [ebp+pbstr], esi
mov     ecx, [eax]
push    0ffffffffh
push    eax
mov     eax, [ecx+24h]
call    eax
test    eax, eax
js      short loc_1000665f
mov     eax, [ebp+pbstr]
test    eax, eax
jz      short loc_1000665f
push    ebx
push    eax
call    ds:sysstringlen
mov     ecx, [ebp+pbstr]
push    eax
push    ecx
lea     edx, [ebp+destination]
push    104h
push    edx
call    sub_10004cd0
xor     eax, eax
add     esp, 10h
lea     ebx, [ebp+destination]
mov     [ebp+var_6], ax
call    sub_10005740
xor     ecx, ecx
mov     esi, ebx
mov     [ebp+eax*2+destination], cx
pop     ebx
cmp     byte_100137d8, 1
jnz     short loc_10006687
push    offset aoleaut32dll_0
call    ds:getmodulehandlew
test    eax, eax
jz      short loc_10006687
push    offset aregistertypeli
push    eax
call    ds:getprocaddress
test    eax, eax
jnz     short loc_1000668c
mov     eax, ds:registertypelib
mov     edx, [ebp+bstrstring]
mov     ecx, [ebp+pptlib]
push    esi
push    edx
push    ecx
call    eax
mov     edx, [ebp+pbstr]
push    edx
mov     esi, eax
call    ds:sysfreestring
mov     eax, [ebp+pptlib]
test    eax, eax
jz      short loc_100066be
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
mov     eax, [ebp+bstrstring]
push    eax
call    ds:sysfreestring
mov     ecx, [ebp+var_4]
mov     eax, esi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jnz     short loc_100066f3
mov     eax, 80070057h
pop     ebp
retn    0ch
push    ebx
mov     ebx, [eax+8]
push    esi
push    edi
xor     edi, edi
cmp     ebx, [eax+0ch]
jnb     short loc_1000674f
mov     esi, [ebx]
test    esi, esi
jz      short loc_10006743
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_1000671d
mov     ecx, [esi]
push    ecx
push    eax
call    sub_10004a90
add     esp, 8
test    eax, eax
jz      short loc_10006740
mov     edx, [esi+4]
push    1
call    edx
mov     edi, eax
test    edi, edi
js      short loc_10006762
mov     eax, [esi+1ch]
push    1
call    eax
mov     ecx, [esi]
push    eax
push    ecx
call    sub_100061d0
mov     edi, eax
test    edi, edi
js      short loc_10006762
mov     eax, [ebp+arg_0]
add     ebx, 4
cmp     ebx, [eax+0ch]
jb      short loc_10006700
test    edi, edi
js      short loc_10006762
cmp     [ebp+arg_4], 0
jz      short loc_10006762
mov     edx, [eax+4]
push    0
push    edx
call    sub_100065a0
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jnz     short loc_10006783
mov     eax, 80070057h
pop     ebp
retn    0ch
push    ebx
mov     ebx, [eax+8]
push    esi
push    edi
xor     edi, edi
cmp     ebx, [eax+0ch]
jnb     short loc_100067df
mov     esi, [ebx]
test    esi, esi
jz      short loc_100067d3
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_100067ad
mov     ecx, [esi]
push    ecx
push    eax
call    sub_10004a90
add     esp, 8
test    eax, eax
jz      short loc_100067d0
mov     edx, [esi+1ch]
push    0
call    edx
push    eax
mov     eax, [esi]
push    eax
call    sub_100061d0
mov     edi, eax
test    edi, edi
js      short loc_100067f2
mov     ecx, [esi+4]
push    0
call    ecx
mov     edi, eax
test    edi, edi
js      short loc_100067f2
mov     eax, [ebp+arg_0]
add     ebx, 4
cmp     ebx, [eax+0ch]
jb      short loc_10006790
test    edi, edi
js      short loc_100067f2
cmp     [ebp+arg_4], 0
jz      short loc_100067f2
mov     edx, [eax+4]
push    0
push    edx
call    sub_100064e0
mov     edi, eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_c]
sub     esp, 8
test    eax, eax
jnz     short loc_10006818
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn    10h
mov     dword ptr [eax], 0
mov     eax, [ebp+arg_0]
test    eax, eax
jnz     short loc_10006830
mov     eax, 80070057h
mov     esp, ebp
pop     ebp
retn    10h
cmp     dword ptr [eax], 0
jnz     short loc_10006840
mov     eax, 8000ffffh
mov     esp, ebp
pop     ebp
retn    10h
mov     ecx, [eax+8]
push    ebx
push    esi
push    edi
mov     edi, [eax+0ch]
mov     [ebp+var_4], 0
cmp     ecx, edi
jnb     loc_10006908
mov     edx, [ebp+arg_4]
jmp     short loc_10006860
mov     esi, [ecx]
test    esi, esi
jz      short loc_1000688c
cmp     dword ptr [esi+8], 0
jz      short loc_1000688c
mov     eax, [esi]
mov     ebx, [edx]
cmp     ebx, [eax]
jnz     short loc_1000688c
mov     ebx, [edx+4]
cmp     ebx, [eax+4]
jnz     short loc_1000688c
mov     ebx, [edx+8]
cmp     ebx, [eax+8]
jnz     short loc_1000688c
mov     ebx, [edx+0ch]
cmp     ebx, [eax+0ch]
jz      short loc_100068a3
add     ecx, 4
cmp     ecx, edi
jb      short loc_10006860
pop     edi
mov     ebx, 80040111h
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
cmp     dword ptr [esi+10h], 0
lea     edi, [esi+10h]
jnz     short loc_100068e1
mov     eax, [ebp+arg_0]
add     eax, 10h
push    eax
mov     [ebp+var_8], eax
call    ds:entercriticalsection
xor     ebx, ebx
mov     byte ptr [ebp+var_4], 1
cmp     [edi], ebx
jnz     short loc_100068d7
mov     eax, [esi+0ch]
mov     ecx, [esi+8]
push    edi
push    offset dword_1000facc
push    eax
call    ecx
mov     ebx, eax
lea     ecx, [ebp+var_8]
call    sub_100088b0
jmp     short loc_100068e4
mov     ebx, [ebp+var_4]
cmp     dword ptr [edi], 0
jz      short loc_100068fc
mov     eax, [ebp+arg_c]
mov     edi, [edi]
mov     ecx, [ebp+arg_8]
mov     edx, [edi]
mov     edx, [edx]
push    eax
push    ecx
push    edi
call    edx
mov     ebx, eax
mov     eax, [ebp+arg_c]
cmp     dword ptr [eax], 0
jnz     short loc_1000690d
test    ebx, ebx
jnz     short loc_1000690d
mov     ebx, 80040111h
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     eax, [esi+8]
mov     ecx, [esi]
push    edi
mov     edi, ds:_recalloc
push    4
inc     eax
push    eax
push    ecx
call    edi
add     esp, 0ch
test    eax, eax
jnz     short loc_10006948
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn    8
mov     edx, [esi+8]
push    4
inc     edx
mov     [esi], eax
mov     eax, [esi+4]
push    edx
push    eax
call    edi
add     esp, 0ch
test    eax, eax
jz      short loc_10006940
mov     [esi+4], eax
mov     eax, [esi+8]
lea     ecx, ds:0[eax*4]
mov     eax, [esi]
add     eax, ecx
jz      short loc_10006978
mov     edx, [ebp+arg_0]
mov     edx, [edx]
mov     [eax], edx
mov     eax, [esi+4]
add     eax, ecx
jz      short loc_10006986
mov     ecx, [ebp+arg_4]
mov     edx, [ecx]
mov     [eax], edx
inc     dword ptr [esi+8]
pop     edi
mov     eax, 1
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
xor     ecx, ecx
shld    ecx, eax, 1
add     eax, eax
test    ecx, ecx
jnz     short loc_100069ba
cmp     eax, 0ffffffffh
jbe     short loc_100069c4
push    80070216h
call    sub_100020c0
cmp     eax, 400h
jbe     short loc_100069da
push    eax
mov     ecx, esi
call    sub_10005820
mov     eax, [esi]
pop     esi
pop     ebp
retn    4
lea     eax, [esi+4]
mov     [esi], eax
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
xor     ecx, ecx
shld    ecx, eax, 1
add     eax, eax
test    ecx, ecx
jnz     short loc_10006a0a
cmp     eax, 0ffffffffh
jbe     short loc_10006a14
push    80070216h
call    sub_100020c0
cmp     eax, 100h
jbe     short loc_10006a2a
push    eax
mov     ecx, esi
call    sub_10005820
mov     eax, [esi]
pop     esi
pop     ebp
retn    4
lea     eax, [esi+4]
mov     [esi], eax
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+size]
push    esi
mov     esi, ecx
xor     ecx, ecx
ja      short loc_10006a52
cmp     eax, 0ffffffffh
jbe     short loc_10006a5c
push    80070216h
call    sub_100020c0
cmp     eax, 100h
jbe     short loc_10006a72
push    eax
mov     ecx, esi
call    sub_10005820
mov     eax, [esi]
pop     esi
pop     ebp
retn    4
lea     eax, [esi+4]
mov     [esi], eax
pop     esi
pop     ebp
retn    4
push    esi
push    edi
mov     edi, ecx
call    sub_10005870
mov     eax, ds:dword_10010a80
mov     esi, dword_10013894
mov     ecx, ds:dword_10010a84
mov     edx, ds:dword_10010a88
mov     dword_100137e0, eax
mov     eax, ds:dword_10010a8c
mov     dword_100137e4, ecx
mov     dword_100137e8, edx
mov     dword_100137ec, eax
cmp     esi, dword_10013898
jnb     short loc_10006adb
mov     eax, [esi]
test    eax, eax
jz      short loc_10006ad0
mov     ecx, [eax+20h]
push    1
call    ecx
add     esi, 4
cmp     esi, dword_10013898
jb      short loc_10006ac3
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
mov     esi, dword_10013894
push    edi
mov     edi, ecx
cmp     esi, dword_10013898
jnb     short loc_10006b0a
mov     eax, [esi]
test    eax, eax
jz      short loc_10006aff
mov     eax, [eax+20h]
push    0
call    eax
add     esi, 4
cmp     esi, dword_10013898
jb      short loc_10006af2
cmp     dword ptr [edi+4], 0
lea     esi, [edi+4]
jz      short loc_10006b45
cmp     dword ptr [edi+0ch], 0
jz      short loc_10006b26
push    esi
call    sub_10005790
mov     dword ptr [edi+0ch], 0
mov     eax, [edi+28h]
test    eax, eax
jz      short loc_10006b35
mov     ecx, [eax]
mov     edx, [ecx+8]
push    eax
call    edx
add     edi, 10h
push    edi
call    ds:deletecriticalsection
mov     dword ptr [esi], 0
pop     edi
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10006b50
mov     eax, large fs:0
push    eax
sub     esp, 20h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     [ebp+var_2c], ecx
mov     eax, [ebp+lpstring]
xor     ebx, ebx
cmp     eax, ebx
jz      loc_10006cb4
cmp     [ebp+arg_4], ebx
jz      loc_10006cb4
push    eax
mov     [ebp+var_1c], ebx
call    ds:lstrlenw
lea     eax, [eax+eax+2]
xor     ecx, ecx
mov     [ebp+destinationsize], eax
mov     edx, 2
mul     edx
seto    cl
mov     [ebp+var_14], ebx
mov     [ebp+var_4], ebx
neg     ecx
or      ecx, eax
push    ecx
call    ??_u@yapaxi@z
mov     edi, eax
add     esp, 4
mov     [ebp+var_14], edi
jmp     short loc_10006bd6
mov     eax, offset loc_10006bd1
retn
mov     edi, [ebp+var_14]
xor     ebx, ebx
mov     eax, [ebp+arg_4]
push    eax
mov     [ebp+var_4], 2
mov     [ebp+var_20], edi
call    ds:lstrlenw
lea     esi, [eax+eax+2]
xor     ecx, ecx
mov     eax, esi
mov     edx, 2
mul     edx
seto    cl
mov     [ebp+var_24], esi
mov     [ebp+var_18], ebx
mov     byte ptr [ebp+var_4], 3
neg     ecx
or      ecx, eax
push    ecx
call    ??_u@yapaxi@z
mov     ebx, eax
add     esp, 4
mov     [ebp+var_18], ebx
mov     [ebp+var_4], 2
jmp     short loc_10006c37
mov     [ebp+var_4], 2
mov     eax, offset loc_10006c2e
retn
mov     edi, [ebp+var_14]
mov     esi, [ebp+var_24]
mov     ebx, [ebp+var_18]
mov     byte ptr [ebp+var_4], 5
mov     [ebp+var_24], ebx
test    edi, edi
jz      short loc_10006c78
test    ebx, ebx
jz      short loc_10006c78
mov     eax, [ebp+destinationsize]
mov     ecx, [ebp+lpstring]
push    eax
push    ecx
push    eax
push    edi
call    sub_10004b60
mov     edx, [ebp+arg_4]
push    esi
push    edx
push    esi
push    ebx
call    sub_10004b60
add     esp, 20h
lea     eax, [ebp+var_18]
push    eax
lea     ecx, [ebp+var_14]
push    ecx
mov     ecx, [ebp+var_2c]
call    sub_10006920
test    eax, eax
jnz     short loc_10006c81
mov     [ebp+var_1c], 8007000eh
jmp     short loc_10006c86
xor     ebx, ebx
mov     [ebp+var_20], ebx
push    ebx
call    ??_v@yaxpax@z
mov     edx, [ebp+var_20]
push    edx
call    ??_v@yaxpax@z
xor     eax, eax
add     esp, 8
cmp     [ebp+var_1c], eax
setnl   al
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10006cd0
mov     eax, large fs:0
push    eax
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ecx, [ebp+lpstring]
xor     edx, edx
cmp     ecx, edx
jz      short loc_10006d34
mov     eax, [ebp+arg_8]
cmp     eax, edx
jz      short loc_10006d34
mov     [ebp+lpstring], edx
push    eax
push    ecx
mov     ecx, [ebp+arg_0]
add     ecx, 4
mov     [ebp+var_4], edx
call    sub_10006b50
neg     eax
sbb     eax, eax
and     eax, 7ff8fff2h
add     eax, 8007000eh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, 80070057h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10006d60
mov     eax, large fs:0
push    eax
push    ecx
mov     eax, 2120h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     eax, [ebp+arg_8]
mov     esi, [ebp+arg_0]
mov     edi, [ebp+arg_4]
mov     ebx, ecx
lea     ecx, [ebp+string]
push    ecx
mov     ecx, ebx
mov     [ebp+var_2130], ebx
mov     [ebp+var_2120], esi
mov     [ebp+lpvaluename], edi
mov     [ebp+var_212c], eax
mov     [ebp+var_211c], 0
call    sub_10005490
test    eax, eax
js      loc_100070b5
lea     edx, [ebp+var_211c]
push    edx
lea     eax, [ebp+string]
push    eax
call    sub_100052b0
add     esp, 8
test    eax, eax
jnz     short loc_10006dfd
mov     eax, 80020009h
jmp     loc_100070b5
mov     ecx, ebx
call    sub_10005430
lea     ecx, [ebp+string]
push    ecx
mov     ecx, ebx
call    sub_10005490
test    eax, eax
js      loc_100070b5
movzx   eax, word ptr [ebp+var_211c]
cmp     eax, 13h
jg      loc_10006fbc
jz      loc_10006f79
cmp     eax, 8
jz      loc_10006f61
cmp     eax, 11h
jnz     loc_1000709d
lea     edx, [ebp+string]
push    edx
call    ds:lstrlenw
mov     ebx, eax
mov     [ebp+pulout], ebx
test    bl, 1
jnz     short loc_10006ebd
cdq
sub     eax, edx
mov     edi, eax
sar     edi, 1
mov     [ebp+var_211c], edi
mov     [ebp+lpdata], 0
mov     [ebp+var_4], 3
push    edi
lea     ecx, [ebp+lpdata]
mov     byte ptr [ebp+var_4], 4
call    sub_10006a40
jmp     short loc_10006e9e
mov     eax, offset loc_10006e92
retn
mov     ebx, [ebp+pulout]
mov     edi, [ebp+var_211c]
mov     eax, [ebp+lpdata]
test    eax, eax
jnz     short loc_10006ec7
lea     eax, [ebp+var_2114]
test    eax, eax
jz      short loc_10006ebd
lea     ecx, [ebp+lpdata]
call    sub_10005810
mov     eax, 80004005h
jmp     loc_100070b5
push    edi
push    0
push    eax
call    memset
add     esp, 0ch
xor     esi, esi
test    ebx, ebx
jle     short loc_10006f1b
lea     esp, [esp+0]
movzx   eax, [ebp+esi*2+string]
mov     edi, esi
shr     edi, 1
add     edi, [ebp+lpdata]
push    eax
call    sub_10005360
mov     ecx, esi
and     ecx, 1
add     ecx, ecx
lea     edx, [ecx+ecx]
mov     ecx, 4
sub     ecx, edx
shl     al, cl
inc     esi
add     esp, 4
or      [edi], al
cmp     esi, ebx
jl      short loc_10006ee0
mov     edi, [ebp+var_211c]
mov     ecx, [ebp+lpdata]
mov     edx, [ebp+lpvaluename]
mov     eax, [ebp+var_2120]
mov     eax, [eax]
push    edi
push    ecx
push    3
push    0
push    edx
push    eax
call    ds:regsetvalueexw
mov     esi, eax
lea     eax, [ebp+var_2114]
cmp     [ebp+lpdata], eax
jz      loc_10007088
lea     ecx, [ebp+lpdata]
call    sub_10005810
jmp     loc_10007088
push    1
lea     ecx, [ebp+string]
push    ecx
push    edi
mov     ecx, esi
call    sub_10005120
mov     esi, eax
jmp     loc_10007088
lea     edx, [ebp+pulout]
push    edx
push    0
push    0
lea     eax, [ebp+string]
push    eax
mov     [ebp+var_2120], 0
call    ds:varui4fromstr
mov     ecx, [ebp+pulout]
push    ecx
push    edi
mov     ecx, esi
call    sub_10005100
lea     ecx, [ebp+var_2120]
mov     esi, eax
call    sub_100057e0
jmp     loc_10007088
cmp     eax, 4008h
jnz     loc_1000709d
lea     edx, [ebp+string]
push    edx
call    ds:lstrlenw
xor     ecx, ecx
add     eax, 2
mov     [ebp+lpdata], ecx
mov     [ebp+var_4], ecx
push    eax
lea     ecx, [ebp+lpdata]
mov     byte ptr [ebp+var_4], 1
call    sub_100069f0
mov     edi, [ebp+lpdata]
test    edi, edi
jz      short loc_1000706e
cmp     [ebp+string], 0
lea     esi, [ebp+string]
jz      short loc_10007047
mov     ebx, ds:charnextw
push    esi
call    ebx
movzx   ecx, word ptr [esi]
cmp     ecx, 5ch
jnz     short loc_10007038
cmp     word ptr [eax], 30h
jnz     short loc_10007038
xor     ecx, ecx
mov     [edi], cx
push    eax
add     edi, 2
call    ebx
mov     esi, eax
jmp     short loc_10007041
mov     eax, offset loc_10006ff2
retn
mov     [edi], cx
add     edi, 2
add     esi, 2
cmp     word ptr [esi], 0
jnz     short loc_10007012
xor     edx, edx
mov     [edi], edx
mov     ecx, [ebp+lpdata]
mov     edx, [ebp+lpvaluename]
push    ecx
mov     ecx, [ebp+var_2120]
push    edx
call    sub_10005160
mov     edi, [ebp+lpdata]
mov     esi, eax
jmp     short loc_10007073
mov     esi, 0eh
lea     eax, [ebp+var_2114]
cmp     edi, eax
jz      short loc_10007088
lea     ecx, [ebp+lpdata]
call    sub_10005810
test    esi, esi
jz      short loc_10007097
push    esi
call    sub_10004e70
add     esp, 4
jmp     short loc_100070b5
mov     ebx, [ebp+var_2130]
mov     ecx, [ebp+var_212c]
push    ecx
mov     ecx, ebx
call    sub_10005490
xor     edx, edx
test    eax, eax
setns   dl
dec     edx
and     eax, edx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100070e0
mov     eax, large fs:0
push    eax
mov     eax, 2260h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_4]
mov     edi, [ebp+lpstring1]
xor     ebx, ebx
mov     [ebp+var_221c], ecx
mov     [ebp+var_2230], eax
mov     [ebp+var_2228], ebx
mov     [ebp+var_2224], ebx
mov     [ebp+var_2220], ebx
mov     edx, [ebp+arg_c]
push    edi
mov     [ebp+var_4], ebx
mov     [ebp+var_2244], edx
call    sub_10005490
mov     esi, eax
cmp     esi, ebx
jl      loc_10007792
cmp     word ptr [edi], 7dh
jz      loc_10007790
mov     edi, edi
mov     esi, ds:lstrcmpiw
push    offset adelete
push    edi
mov     [ebp+var_2240], 1
call    esi
neg     eax
push    offset aforceremove
sbb     ebx, ebx
push    edi
inc     ebx
call    esi
test    eax, eax
jz      short loc_10007191
test    ebx, ebx
jz      loc_100072dd
mov     ecx, [ebp+var_221c]
push    edi
call    sub_10005490
mov     esi, eax
test    esi, esi
js      loc_1000777f
xor     edx, edx
cmp     [ebp+arg_8], edx
jz      loc_100072dd
movzx   ecx, word ptr [edi]
mov     [ebp+var_223c], edx
mov     [ebp+var_2238], edx
mov     [ebp+var_2234], edx
mov     eax, edi
cmp     cx, dx
jz      short loc_100071ef
mov     esi, ds:charnextw
cmp     cx, 5ch
jz      short loc_100071e7
push    eax
call    esi
movzx   ecx, word ptr [eax]
test    cx, cx
jnz     short loc_100071d4
jmp     short loc_100071ef
test    eax, eax
jnz     loc_10007757
mov     esi, offset off_1000f704
mov     eax, [esi]
push    eax
push    edi
call    ds:lstrcmpiw
test    eax, eax
jz      short loc_10007245
add     esi, 4
cmp     esi, offset dword_1000f734
jl      short loc_100071f4
mov     ecx, [ebp+var_2230]
xor     esi, esi
mov     [ebp+var_223c], ecx
push    edi
lea     ecx, [ebp+var_223c]
mov     [ebp+var_2238], esi
mov     [ebp+var_2234], esi
call    sub_100058e0
mov     [ebp+var_223c], esi
mov     [ebp+var_2238], esi
mov     [ebp+var_2234], esi
test    ebx, ebx
jz      loc_100072d3
mov     ebx, [ebp+var_221c]
push    edi
mov     ecx, ebx
call    sub_10005490
mov     esi, eax
test    esi, esi
js      loc_10007774
push    edi
mov     ecx, ebx
call    sub_10005690
mov     esi, eax
test    esi, esi
js      loc_10007774
mov     [ebp+var_2238], 0
cmp     word ptr [edi], 7bh
jnz     short loc_100072c4
push    edi
call    ds:lstrlenw
cmp     eax, 1
jnz     short loc_100072c4
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+var_2228]
push    0
push    eax
push    ecx
push    edi
mov     ecx, ebx
call    sub_100070e0
mov     esi, eax
test    esi, esi
js      loc_1000777f
push    edi
mov     ecx, ebx
call    sub_10005490
mov     esi, eax
test    esi, esi
js      loc_1000777f
cmp     word ptr [edi], 7dh
jnz     loc_10007160
jmp     loc_1000777f
mov     [ebp+var_2238], 0
push    offset anoremove
push    edi
call    ds:lstrcmpiw
test    eax, eax
jnz     short loc_10007309
mov     ecx, [ebp+var_221c]
push    edi
mov     [ebp+var_2240], eax
call    sub_10005490
mov     esi, eax
test    esi, esi
js      loc_1000777f
push    offset aval
push    edi
call    ds:lstrcmpiw
test    eax, eax
jnz     loc_10007458
mov     ecx, [ebp+var_221c]
lea     edx, [ebp+valuename]
push    edx
call    sub_10005490
mov     esi, eax
test    esi, esi
js      loc_1000777f
mov     ecx, [ebp+var_221c]
push    edi
call    sub_10005490
mov     esi, eax
test    esi, esi
js      loc_1000777f
cmp     word ptr [edi], 3dh
jnz     loc_10007762
xor     ebx, ebx
cmp     [ebp+arg_8], ebx
jz      short loc_100073c6
mov     eax, [ebp+var_2230]
push    edi
lea     ecx, [ebp+valuename]
push    ecx
mov     ecx, [ebp+var_221c]
lea     edx, [ebp+var_2250]
push    edx
mov     byte ptr [ebp+var_4], 1
mov     [ebp+var_2250], eax
mov     [ebp+var_224c], ebx
mov     [ebp+var_2248], ebx
call    sub_10006d60
mov     esi, eax
mov     [ebp+var_2250], ebx
mov     [ebp+var_224c], ebx
mov     [ebp+var_2248], ebx
cmp     esi, ebx
jl      loc_100077b0
mov     byte ptr [ebp+var_4], bl
mov     [ebp+var_224c], ebx
mov     ebx, [ebp+var_221c]
jmp     loc_10007281
cmp     [ebp+arg_c], ebx
jnz     short loc_1000743d
cmp     [ebp+var_2240], ebx
jz      short loc_1000743d
mov     eax, [ebp+var_2230]
push    20006h
push    ebx
push    eax
lea     ecx, [ebp+hkey]
mov     [ebp+hkey], ebx
mov     [ebp+var_2258], ebx
mov     [ebp+var_2254], ebx
call    sub_10002360
cmp     eax, ebx
jnz     loc_100077c8
mov     esi, [ebp+hkey]
lea     ecx, [ebp+valuename]
push    ecx
push    esi
call    ds:regdeletevaluew
cmp     eax, ebx
jz      short loc_10007426
cmp     eax, 2
jnz     loc_100077c8
cmp     esi, ebx
jz      short loc_10007437
push    esi
call    ds:regclosekey
mov     [ebp+hkey], ebx
mov     [ebp+var_2258], ebx
mov     ecx, [ebp+var_221c]
push    edi
call    sub_10005690
mov     esi, eax
cmp     esi, ebx
jl      loc_1000777f
jmp     loc_100072c4
movzx   ecx, word ptr [edi]
mov     eax, edi
test    cx, cx
jz      short loc_10007481
cmp     cx, 5ch
jz      short loc_10007479
push    eax
call    ds:charnextw
movzx   ecx, word ptr [eax]
test    cx, cx
jnz     short loc_10007462
jmp     short loc_10007481
test    eax, eax
jnz     loc_10007762
cmp     [ebp+arg_8], 0
jz      loc_10007523
mov     esi, [ebp+var_2230]
push    2001fh
push    edi
push    esi
lea     ecx, [ebp+var_2228]
call    sub_10002360
test    eax, eax
jz      short loc_100074e1
push    20019h
push    edi
push    esi
lea     ecx, [ebp+var_2228]
call    sub_10002360
test    eax, eax
jz      short loc_100074e1
push    0
push    0
push    2001fh
push    0
push    0
push    edi
push    esi
lea     ecx, [ebp+var_2228]
call    sub_10005060
mov     esi, eax
test    esi, esi
jnz     loc_100077db
mov     ebx, [ebp+var_221c]
push    edi
mov     ecx, ebx
call    sub_10005490
mov     esi, eax
test    esi, esi
js      loc_1000777f
cmp     word ptr [edi], 3dh
jnz     loc_10007281
push    edi
push    0
lea     edx, [ebp+var_2228]
push    edx
mov     ecx, ebx
call    sub_10006d60
mov     esi, eax
test    esi, esi
js      loc_1000777f
jmp     loc_10007281
cmp     [ebp+arg_c], 0
jnz     short loc_10007583
mov     eax, [ebp+var_2230]
push    20019h
push    edi
push    eax
lea     ecx, [ebp+var_2228]
call    sub_10002360
mov     ebx, eax
mov     [ebp+var_222c], ebx
test    ebx, ebx
jz      short loc_10007554
mov     [ebp+arg_c], 1
push    0ffffffffh
push    edi
lea     ecx, [ebp+destination]
push    104h
push    ecx
call    ds:wcsncpy_s
add     esp, 10h
cmp     eax, 50h
ja      def_1000757c
movzx   edx, ds:byte_10007850[eax]
jmp     ds:jpt_1000757c[edx*4]
mov     [ebp+var_222c], 2
mov     ebx, [ebp+var_222c]
jmp     short loc_1000754d
mov     ecx, [ebp+var_221c]
push    edi
call    sub_10005490
mov     esi, eax
test    esi, esi
js      loc_1000777f
mov     ecx, [ebp+var_221c]
push    edi
call    sub_10005690
mov     esi, eax
test    esi, esi
js      loc_1000777f
cmp     word ptr [edi], 7bh
jnz     short loc_10007616
push    edi
call    ds:lstrlenw
cmp     eax, 1
jnz     short loc_10007616
mov     ebx, [ebp+arg_c]
mov     eax, [ebp+var_2228]
mov     ecx, [ebp+var_221c]
push    ebx
push    0
push    eax
push    edi
call    sub_100070e0
mov     esi, eax
test    esi, esi
jns     short loc_100075fa
test    ebx, ebx
jz      loc_1000777f
mov     ecx, [ebp+var_221c]
push    edi
call    sub_10005490
mov     esi, eax
test    esi, esi
js      loc_1000777f
mov     ebx, [ebp+var_222c]
mov     ecx, [ebp+var_2244]
mov     [ebp+arg_c], ecx
cmp     ebx, 2
jz      loc_100072c4
test    ebx, ebx
jz      short loc_10007644
test    ecx, ecx
jnz     loc_100072c4
push    ebx
call    sub_10004e70
add     esp, 4
mov     esi, eax
jmp     loc_1000777f
mov     ebx, [ebp+var_2228]
test    ecx, ecx
jz      short loc_1000769c
mov     ecx, [ebp+var_221c]
push    ebx
call    sub_10005640
test    eax, eax
jz      short loc_1000769c
mov     ecx, [ebp+var_221c]
lea     edx, [ebp+destination]
push    edx
call    sub_10005600
test    eax, eax
jz      loc_100072c4
cmp     [ebp+var_2240], 0
jz      loc_100072c4
lea     eax, [ebp+destination]
push    eax
lea     ecx, [ebp+var_2228]
call    sub_100058e0
jmp     loc_100072c4
mov     ecx, [ebp+var_221c]
push    ebx
call    sub_10005640
mov     [ebp+var_226c], eax
mov     [ebp+var_222c], 0
test    ebx, ebx
jz      short loc_100076d3
push    ebx
call    ds:regclosekey
mov     [ebp+var_222c], eax
mov     [ebp+var_2228], 0
mov     ebx, [ebp+var_222c]
mov     [ebp+var_2224], 0
test    ebx, ebx
jnz     loc_10007805
cmp     [ebp+var_2240], ebx
jz      loc_100072c4
cmp     [ebp+var_226c], ebx
jnz     loc_100072c4
mov     ecx, [ebp+var_2230]
lea     edx, [ebp+destination]
mov     [ebp+var_2268], ecx
push    edx
lea     ecx, [ebp+var_2268]
mov     [ebp+var_2264], ebx
mov     [ebp+var_2260], ebx
call    sub_10004fe0
mov     [ebp+var_2268], ebx
mov     [ebp+var_2264], ebx
mov     [ebp+var_2260], ebx
cmp     eax, ebx
jnz     loc_1000781e
lea     ecx, [ebp+var_2268]
call    sub_10002a60
jmp     loc_100072c4
lea     ecx, [ebp+var_223c]
call    sub_10002a60
lea     ecx, [ebp+var_2228]
call    sub_10002a60
mov     eax, 80020009h
jmp     short loc_10007792
lea     ecx, [ebp+var_223c]
call    sub_10002a60
mov     eax, [ebp+var_2228]
test    eax, eax
jz      short loc_10007790
push    eax
call    ds:regclosekey
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
lea     ecx, [ebp+var_2250]
call    sub_10002a60
lea     ecx, [ebp+var_2228]
call    sub_10002a60
jmp     short loc_10007790
push    eax
call    sub_10004e70
add     esp, 4
mov     esi, eax
lea     ecx, [ebp+hkey]
jmp     short loc_1000777a
lea     ecx, [ebp+var_2228]
call    sub_10002a60
push    esi
call    sub_10004e70
add     esp, 4
jmp     short loc_10007792
push    8007000eh
call    sub_100020c0
push    80070057h
call    sub_100020c0
lea     ecx, [ebp+var_2228]
call    sub_10002a60
push    ebx
call    sub_10004e70
add     esp, 4
jmp     loc_10007792
push    eax
call    sub_10004e70
add     esp, 4
mov     esi, eax
lea     ecx, [ebp+var_2268]
jmp     loc_1000777a
push    80004005h
call    sub_100020c0
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     edx, [ecx+0ch]
push    offset ae893196b706e42
push    offset aappid
push    eax
call    edx
pop     ebp
retn    4
add     ecx, 8
push    ecx
call    ds:interlockedincrement
retn
add     ecx, 8
push    ecx
call    ds:interlockeddecrement
retn
mov     eax, [ecx+8]
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
test    ebx, ebx
jnz     short loc_10007915
mov     eax, 80004003h
pop     ebx
pop     ebp
retn    4
push    esi
push    edi
xor     edi, edi
cmp     [ecx+28h], edi
lea     esi, [ecx+28h]
jnz     short loc_1000793b
push    esi
push    offset stru_1000fb04
push    1
push    edi
push    offset stru_10010ac0
call    ds:cocreateinstance
mov     edi, eax
test    edi, edi
js      short loc_10007949
mov     eax, [esi]
mov     [ebx], eax
mov     esi, [esi]
mov     ecx, [esi]
mov     edx, [ecx+4]
push    esi
call    edx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_10006ae0
test    [ebp+arg_0], 1
jz      short loc_1000797a
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, 200ch
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+lpstring]
push    esi
mov     esi, ecx
push    edi
lea     ecx, [ebp+pv]
push    ecx
push    eax
mov     ecx, esi
mov     [ebp+pv], 0
call    sub_10005f00
mov     edi, eax
test    edi, edi
js      loc_10007aa5
mov     eax, [ebp+pv]
xor     edx, edx
mov     [esi], eax
cmp     dx, [eax]
jz      loc_10007a96
push    ebx
lea     eax, [ebp+string1]
push    eax
mov     ecx, esi
call    sub_10005490
mov     edi, eax
test    edi, edi
js      loc_10007a95
xor     edi, edi
nop
mov     ecx, ds:off_1000f7c8[edi*8]
push    ecx
lea     edx, [ebp+string1]
push    edx
call    ds:lstrcmpiw
test    eax, eax
jz      short loc_10007a26
inc     edi
cmp     edi, 0eh
jb      short loc_10007a00
mov     edi, 80020009h
jmp     short loc_10007a95
mov     ebx, ds:dword_1000f7cc[edi*8]
test    ebx, ebx
jz      short loc_10007a1f
lea     eax, [ebp+string1]
push    eax
mov     ecx, esi
call    sub_10005490
mov     edi, eax
test    edi, edi
js      short loc_10007a95
mov     ecx, 7bh
cmp     cx, [ebp+string1]
jnz     short loc_10007a1f
mov     eax, [ebp+arg_4]
push    0
test    eax, eax
jz      short loc_10007ab7
mov     edx, [esi]
push    eax
push    ebx
lea     eax, [ebp+string1]
push    eax
mov     ecx, esi
mov     [ebp+var_200c], edx
call    sub_100070e0
mov     edi, eax
test    edi, edi
jns     short loc_10007ad0
mov     edx, [ebp+var_200c]
push    0
push    0
push    ebx
lea     eax, [ebp+string1]
push    eax
mov     ecx, esi
mov     [esi], edx
call    sub_100070e0
pop     ebx
mov     ecx, [ebp+pv]
push    ecx
call    ds:cotaskmemfree
mov     eax, edi
mov     ecx, [ebp+var_4]
pop     edi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    0
push    ebx
lea     ecx, [ebp+string1]
push    ecx
mov     ecx, esi
call    sub_100070e0
mov     edi, eax
test    edi, edi
js      short loc_10007a95
mov     edi, edi
mov     eax, [esi]
movzx   ecx, word ptr [eax]
add     ecx, 0fffffff7h
cmp     ecx, 17h
ja      short def_10007ae4
movzx   edx, ds:byte_10007b0c[ecx]
jmp     ds:jpt_10007ae4[edx*4]
push    eax
call    ds:charnextw
mov     [esi], eax
jmp     short loc_10007ad0
xor     ecx, ecx
cmp     cx, [eax]
jnz     loc_100079e5
jmp     short loc_10007a95
push    ebp
mov     ebp, esp
mov     eax, [ebp+ppv]
mov     ecx, [ebp+riid]
mov     edx, [ebp+rclsid]
push    eax
push    ecx
push    edx
push    offset dword_1001388c
call    sub_10006800
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10007b50
mov     eax, large fs:0
push    eax
sub     esp, 424h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     eax, [ebp+lplibfilename]
mov     edi, [ebp+lpname]
mov     ebx, [ebp+lptype]
xor     edx, edx
mov     [ebp+var_430], edx
mov     [ebp+var_4], edx
mov     [ebp+var_428], ecx
mov     [ebp+var_42c], edx
mov     [ebp+lpwidecharstr], edx
push    2
push    edx
push    eax
mov     byte ptr [ebp+var_4], 1
call    ds:loadlibraryexw
mov     esi, eax
mov     [ebp+var_420], esi
test    esi, esi
jnz     short loc_10007bcd
call    sub_100021f0
mov     edi, eax
jmp     loc_10007cb2
push    ebx
push    edi
push    esi
call    ds:findresourcew
mov     edi, eax
test    edi, edi
jnz     short loc_10007be6
call    sub_100021f0
jmp     loc_10007ca9
push    edi
push    esi
call    ds:loadresource
mov     ebx, eax
mov     [ebp+var_424], ebx
test    ebx, ebx
jnz     short loc_10007c04
call    sub_100021f0
jmp     loc_10007ca9
push    edi
push    esi
call    ds:sizeofresource
mov     edi, eax
lea     eax, [edi+1]
mov     [ebp+var_41c], edi
cmp     eax, edi
jnb     short loc_10007c25
mov     edi, 8007000eh
jmp     loc_10007cab
push    eax
lea     ecx, [ebp+lpwidecharstr]
mov     byte ptr [ebp+var_4], 2
call    sub_100069a0
mov     [ebp+var_4], 1
jmp     short loc_10007c5d
mov     [ebp+var_4], 1
mov     eax, offset loc_10007c4b
retn
mov     esi, [ebp+var_420]
mov     ebx, [ebp+var_424]
mov     edi, [ebp+var_41c]
mov     eax, [ebp+lpwidecharstr]
test    eax, eax
jnz     short loc_10007c6e
mov     edi, 8007000eh
jmp     short loc_10007cab
push    edi
push    eax
push    edi
push    ebx
push    0
push    3
call    ds:multibytetowidechar
test    eax, eax
jnz     short loc_10007c87
call    sub_100021f0
jmp     short loc_10007ca9
mov     edx, [ebp+lpwidecharstr]
xor     ecx, ecx
mov     [edx+eax*2], cx
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+lpwidecharstr]
push    eax
push    ecx
lea     ecx, [ebp+var_42c]
call    sub_10007990
mov     edi, eax
push    esi
call    ds:freelibrary
lea     edx, [ebp+var_414]
cmp     [ebp+lpwidecharstr], edx
jz      short loc_10007cd0
lea     ecx, [ebp+lpwidecharstr]
call    sub_10005810
jmp     short loc_10007cd0
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10007d50
mov     eax, large fs:0
push    eax
push    ecx
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
xor     eax, eax
mov     [ebp+var_10], eax
movzx   ecx, [ebp+arg_8]
mov     edx, [ebp+lplibfilename]
push    1
mov     [ebp+var_4], eax
mov     eax, [ebp+lptype]
push    eax
push    ecx
mov     ecx, [ebp+arg_0]
push    edx
call    sub_10007b50
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10007d50
mov     eax, large fs:0
push    eax
push    ecx
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
xor     eax, eax
mov     [ebp+var_10], eax
movzx   ecx, [ebp+arg_8]
mov     edx, [ebp+lplibfilename]
push    eax
mov     [ebp+var_4], eax
mov     eax, [ebp+lptype]
push    eax
push    ecx
mov     ecx, [ebp+arg_0]
push    edx
call    sub_10007b50
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 0a4ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_c]
push    edi
xor     edi, edi
mov     [ebp+var_a4c], offset ??_7cregobject@atl@@6b@
mov     [ebp+var_a48], edi
mov     [ebp+var_a44], edi
mov     [ebp+var_a40], edi
cmp     esi, edi
jz      short loc_10007e1a
mov     eax, [esi]
cmp     eax, edi
jz      short loc_10007e1a
mov     ecx, [esi+4]
cmp     eax, edi
jz      short loc_10007e10
cmp     ecx, edi
jz      short loc_10007e10
push    ecx
push    eax
lea     ecx, [ebp+var_a48]
call    sub_10006b50
lea     esp, [esp+0]
mov     eax, [esi+8]
add     esi, 8
cmp     eax, edi
jnz     short loc_10007df4
mov     eax, [ebx]
mov     edx, [eax+14h]
lea     ecx, [ebp+var_a4c]
push    ecx
mov     ecx, ebx
call    edx
mov     esi, eax
cmp     esi, edi
jl      loc_10007fb9
mov     esi, hmodule
push    104h
lea     eax, [ebp+filename]
push    eax
push    esi
mov     [ebp+var_a38], edi
call    ds:getmodulefilenamew
cmp     eax, edi
jnz     short loc_10007e61
call    sub_100021f0
jmp     loc_10007fac
cmp     eax, 104h
jnz     short loc_10007e96
lea     ecx, [ebp+var_a38]
call    sub_100057e0
lea     ecx, [ebp+var_a4c]
call    sub_10005e00
pop     edi
pop     esi
mov     eax, 8007007ah
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
lea     ecx, [ebp+filename]
push    ecx
lea     edx, [ebp+var_a34]
push    208h
push    edx
call    sub_10004f80
add     esp, 0ch
cmp     esi, edi
jz      short loc_10007ecb
push    edi
call    ds:getmodulehandlew
cmp     esi, eax
jz      short loc_10007ecb
lea     eax, [ebp+var_a34]
jmp     loc_10007f4e
lea     eax, [ebp+var_a34]
push    eax
lea     ecx, [ebp+destination]
mov     edx, 22h
push    20bh
push    ecx
mov     [ebp+string], dx
call    sub_10004b30
add     esp, 0ch
test    al, al
jnz     short loc_10007f24
lea     ecx, [ebp+var_a38]
call    sub_100057e0
lea     ecx, [ebp+var_a4c]
call    sub_10005e00
pop     edi
pop     esi
mov     eax, 80004005h
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
lea     edx, [ebp+string]
push    edx
call    ds:lstrlenw
mov     ecx, 22h
xor     edx, edx
mov     [ebp+eax*2+string], cx
mov     [ebp+eax*2+destination], dx
lea     eax, [ebp+string]
push    eax
push    offset amodule
lea     ecx, [ebp+var_a4c]
push    ecx
call    sub_10006cd0
mov     esi, eax
cmp     esi, edi
jl      short loc_10007fae
lea     edx, [ebp+var_a34]
push    edx
push    offset amoduleraw
lea     eax, [ebp+var_a4c]
push    eax
call    sub_10006cd0
mov     esi, eax
cmp     esi, edi
jl      short loc_10007fae
mov     ecx, dword ptr [ebp+arg_4]
push    offset type
push    ecx
lea     edx, [ebp+filename]
lea     eax, [ebp+var_a4c]
push    edx
push    eax
cmp     [ebp+arg_8], edi
jz      short loc_10007fa7
call    sub_10007cf0
jmp     short loc_10007fac
call    sub_10007d50
mov     esi, eax
lea     ecx, [ebp+var_a38]
call    sub_100057e0
lea     ecx, [ebp+var_a4c]
call    sub_10005e00
mov     ecx, [ebp+var_4]
pop     edi
mov     eax, esi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
call    ds:getthreadlocale
push    800h
mov     ebx, eax
call    ds:setthreadlocale
mov     ecx, dword_100137dc
lea     eax, [ebp+var_10]
push    eax
push    1
push    65h
push    ecx
mov     [ebp+var_10], offset aappid
mov     [ebp+var_c], offset ae893196b706e42
mov     [ebp+var_8], 0
mov     [ebp+var_4], 0
call    sub_10007db0
mov     esi, eax
test    esi, esi
js      short loc_1000806c
mov     edx, [ebp+arg_0]
push    0
push    edx
push    offset dword_1001388c
call    sub_100066e0
test    eax, eax
js      short loc_1000806a
mov     ecx, dword_100137d0
test    ecx, ecx
jz      short loc_1000806a
mov     eax, hmodule
push    eax
call    ecx
add     esp, 4
mov     esi, eax
push    ebx
call    ds:setthreadlocale
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
call    ds:getthreadlocale
mov     ebx, ds:setthreadlocale
push    800h
mov     edi, eax
call    ebx
mov     eax, dword_100137d4
test    eax, eax
jz      short loc_100080ad
call    eax
test    eax, eax
js      short loc_100080bd
mov     eax, [ebp+arg_0]
push    0
push    eax
push    offset dword_1001388c
call    sub_10006770
xor     ecx, ecx
mov     esi, eax
cmp     eax, ecx
jl      short loc_100080ed
mov     eax, dword_100137dc
lea     edx, [ebp+var_10]
push    edx
push    ecx
push    65h
push    eax
mov     [ebp+var_10], offset aappid
mov     [ebp+var_c], offset ae893196b706e42
mov     [ebp+var_8], ecx
mov     [ebp+var_4], ecx
call    sub_10007db0
mov     esi, eax
push    edi
call    ebx
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    1
mov     ecx, offset dword_1001381c
call    sub_10007ff0
retn
push    1
mov     ecx, offset dword_1001381c
call    sub_10008080
retn
push    esi
mov     esi, ecx
cmp     byte ptr [esi+0ch], 0
mov     dword ptr [esi], offset ??_7databuf@svrlib@@6b@
jz      short loc_10008146
mov     eax, [esi+8]
push    eax
call    ??_v@yaxpax@z
add     esp, 4
mov     dword ptr [esi+8], 0
mov     byte ptr [esi+0ch], 0
pop     esi
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_4]
cmp     edx, [ecx+18h]
ja      short loc_100081af
test    edx, edx
jz      short loc_10008174
mov     eax, [ecx+4]
jmp     short loc_10008176
xor     eax, eax
push    edi
mov     edi, [ebp+arg_0]
mov     [edi], eax
mov     eax, [ecx+18h]
pop     edi
cmp     edx, eax
jb      short loc_1000819e
mov     eax, [ecx+8]
mov     [ecx+4], eax
mov     dword ptr [ecx+18h], 0
mov     dword ptr [ecx+10h], 0
mov     al, 1
pop     ebp
retn    8
add     [ecx+4], edx
add     [ecx+10h], edx
sub     eax, edx
mov     [ecx+18h], eax
mov     al, 1
pop     ebp
retn    8
xor     al, al
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
cmp     byte ptr [esi+0ch], 0
mov     dword ptr [esi], offset ??_7databuf@svrlib@@6b@
jz      short loc_100081e9
mov     eax, [esi+8]
push    eax
call    ??_v@yaxpax@z
add     esp, 4
mov     dword ptr [esi+8], 0
mov     byte ptr [esi+0ch], 0
test    [ebp+arg_0], 1
jz      short loc_100081f8
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    esi
movzx   esi, byte ptr [ecx]
dec     esi
xor     eax, eax
xor     edx, edx
cmp     esi, 10h
ja      def_10008212
jmp     ds:jpt_10008212[esi*4]
mov     eax, [ecx+6]
movsx   eax, byte ptr [eax]
cdq
pop     esi
retn
mov     ecx, [ecx+6]
movzx   eax, byte ptr [ecx]
cdq
pop     esi
retn
mov     edx, [ecx+6]
movsx   eax, word ptr [edx]
cdq
pop     esi
retn
mov     ecx, [ecx+6]
mov     eax, [ecx]
cdq
pop     esi
retn
mov     edx, [ecx+6]
mov     eax, [edx]
xor     edx, edx
pop     esi
retn
mov     eax, [ecx+6]
fld     dword ptr [eax]
pop     esi
jmp     __ftol2
mov     ecx, [ecx+6]
fld     qword ptr [ecx]
pop     esi
jmp     __ftol2
mov     esi, [ecx+2]
cmp     esi, 1
jnz     short loc_1000826c
mov     edx, [ecx+6]
movzx   eax, byte ptr [edx]
cdq
pop     esi
retn
cmp     esi, 2
jnz     short loc_1000827a
mov     eax, [ecx+6]
movzx   eax, word ptr [eax]
cdq
pop     esi
retn
cmp     esi, 4
jnz     short loc_10008288
mov     ecx, [ecx+6]
mov     eax, [ecx]
xor     edx, edx
pop     esi
retn
cmp     esi, 8
jb      short def_10008212
mov     ecx, [ecx+6]
mov     edx, [ecx+4]
mov     eax, [ecx]
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
xor     ebx, ebx
cmp     byte_10013062, bl
jz      short loc_1000830a
push    offset aproxysecurityg
push    offset acommon
push    offset assenter
push    ebx
push    ebx
call    sub_100048c0
add     esp, 14h
push    offset libfilename
mov     [ebp+var_8], ebx
call    ds:loadlibraryw
cmp     eax, ebx
jz      loc_100083b7
push    edi
push    offset agetextendedtcp
push    eax
call    ds:getprocaddress
mov     edi, eax
cmp     edi, ebx
jz      loc_100083b6
push    ebx
push    5
push    2
push    1
lea     eax, [ebp+size]
push    eax
push    ebx
mov     [ebp+size], ebx
call    edi
cmp     eax, ebx
jz      short loc_10008351
cmp     eax, 7ah
jnz     short loc_100083b6
mov     eax, [ebp+size]
cmp     eax, ebx
jz      short loc_100083b6
push    esi
push    eax
call    ds:malloc
mov     esi, eax
add     esp, 4
cmp     esi, ebx
jz      short loc_100083b5
push    ebx
push    5
push    2
push    1
lea     ecx, [ebp+size]
push    ecx
push    esi
call    edi
test    eax, eax
jnz     short loc_100083ab
xor     edi, edi
cmp     [esi], ebx
jbe     short loc_100083ab
lea     ebx, [esi+0ch]
movzx   edx, word ptr [ebx]
push    edx
call    ds:ntohs
cmp     [ebp+arg_0], ax
jz      short loc_1000839e
inc     edi
add     ebx, 18h
cmp     edi, [esi]
jb      short loc_10008384
jmp     short loc_100083a8
lea     eax, [edi+edi*2+3]
mov     ecx, [esi+eax*8]
mov     [ebp+var_8], ecx
mov     ebx, [ebp+var_8]
push    esi
call    ds:__imp_free
add     esp, 4
pop     esi
pop     edi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
cmp     byte_10013062, 0
jz      short loc_100083eb
mov     eax, [ebp+arg_4]
push    eax
push    offset aclsptloginplug
push    offset acommon
push    offset asscookieu
push    0
push    0
call    sub_100048c0
add     esp, 18h
push    esi
mov     esi, [ebp+arg_0]
mov     ecx, [esi+28h]
test    ecx, ecx
jz      short loc_10008404
mov     edx, [ecx]
mov     eax, [edx+4]
call    eax
mov     dword ptr [esi+28h], 0
xor     eax, eax
pop     esi
pop     ebp
retn    8
mov     eax, [ecx+10h]
push    eax
call    ds:sysfreestring
retn
xor     eax, eax
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+8]
cmp     byte ptr [ecx+39h], 0
jnz     short loc_1000844b
nop
mov     eax, ecx
mov     ecx, [eax+8]
cmp     byte ptr [ecx+39h], 0
jz      short loc_10008440
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
cmp     byte ptr [ecx+39h], 0
jnz     short loc_1000846a
mov     edi, edi
mov     eax, ecx
mov     ecx, [eax]
cmp     byte ptr [ecx+39h], 0
jz      short loc_10008460
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
cmp     byte ptr [ecx+15h], 0
jnz     short loc_1000849a
mov     edi, edi
mov     eax, ecx
mov     ecx, [eax]
cmp     byte ptr [ecx+15h], 0
jz      short loc_10008490
pop     ebp
retn
mov     eax, ecx
mov     edx, [eax]
cmp     byte ptr [edx+39h], 0
jnz     short locret_100084ea
mov     ecx, [edx+8]
cmp     byte ptr [ecx+39h], 0
jnz     short loc_100084cd
mov     edx, [ecx]
cmp     byte ptr [edx+39h], 0
jnz     short loc_100084ca
jmp     short loc_100084c0
mov     ecx, edx
mov     edx, [ecx]
cmp     byte ptr [edx+39h], 0
jz      short loc_100084c0
mov     [eax], ecx
retn
mov     edx, [edx+4]
cmp     byte ptr [edx+39h], 0
jnz     short loc_100084e8
mov     ecx, [eax]
cmp     ecx, [edx+8]
jnz     short loc_100084e8
mov     [eax], edx
mov     edx, [edx+4]
cmp     byte ptr [edx+39h], 0
jz      short loc_100084d6
mov     [eax], edx
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+8]
cmp     byte ptr [ecx+15h], 0
jnz     short loc_1000850b
nop
mov     eax, ecx
mov     ecx, [eax+8]
cmp     byte ptr [ecx+15h], 0
jz      short loc_10008500
pop     ebp
retn
mov     eax, ecx
mov     ecx, [eax]
cmp     byte ptr [ecx+15h], 0
jz      short loc_10008520
mov     ecx, [ecx+8]
mov     [eax], ecx
retn
mov     edx, [ecx]
cmp     byte ptr [edx+15h], 0
jnz     short loc_1000853f
mov     ecx, [edx+8]
cmp     byte ptr [ecx+15h], 0
jnz     short loc_10008561
mov     edx, ecx
mov     ecx, [edx+8]
cmp     byte ptr [ecx+15h], 0
jz      short loc_10008531
mov     [eax], edx
retn
mov     edx, [ecx+4]
cmp     byte ptr [edx+15h], 0
jnz     short loc_10008559
mov     ecx, [eax]
cmp     ecx, [edx]
jnz     short loc_10008559
mov     [eax], edx
mov     edx, [edx+4]
cmp     byte ptr [edx+15h], 0
jz      short loc_10008548
mov     ecx, [eax]
cmp     byte ptr [ecx+15h], 0
jnz     short locret_10008563
mov     [eax], edx
retn
mov     eax, ecx
mov     ecx, [eax]
cmp     byte ptr [ecx+39h], 0
jz      short loc_10008580
mov     ecx, [ecx+8]
mov     [eax], ecx
retn
mov     edx, [ecx]
cmp     byte ptr [edx+39h], 0
jnz     short loc_1000859f
mov     ecx, [edx+8]
cmp     byte ptr [ecx+39h], 0
jnz     short loc_100085c1
mov     edx, ecx
mov     ecx, [edx+8]
cmp     byte ptr [ecx+39h], 0
jz      short loc_10008591
mov     [eax], edx
retn
mov     edx, [ecx+4]
cmp     byte ptr [edx+39h], 0
jnz     short loc_100085b9
mov     ecx, [eax]
cmp     ecx, [edx]
jnz     short loc_100085b9
mov     [eax], edx
mov     edx, [edx+4]
cmp     byte ptr [edx+39h], 0
jz      short loc_100085a8
mov     ecx, [eax]
cmp     byte ptr [ecx+39h], 0
jnz     short locret_100085c3
mov     [eax], edx
retn
mov     eax, [ecx+20h]
push    eax
call    ds:sysfreestring
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ecx, [ebp+arg_8]
test    ecx, ecx
jnz     short loc_100085f9
push    80004005h
call    sub_100020c0
mov     ebx, [ebp+source]
mov     esi, [ebp+destinationsize]
test    ebx, ebx
jnz     short loc_10008611
test    esi, esi
jz      short loc_10008611
push    80070057h
call    sub_100020c0
mov     eax, [ecx]
mov     edx, [eax]
push    1
push    esi
call    edx
test    eax, eax
jnz     short loc_10008623
call    sub_10002410
add     eax, 10h
mov     [edi], eax
test    esi, esi
js      short loc_10008607
cmp     esi, [eax-8]
jg      short loc_10008607
mov     [eax-0ch], esi
mov     eax, [edi]
push    esi
push    ebx
mov     byte ptr [esi+eax], 0
mov     ecx, [edi]
push    esi
push    ecx
call    ds:memcpy_s
add     esp, 10h
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     eax, ecx
mov     edx, [eax]
cmp     byte ptr [edx+15h], 0
jnz     short locret_100086aa
mov     ecx, [edx+8]
cmp     byte ptr [ecx+15h], 0
jnz     short loc_1000868d
mov     edx, [ecx]
cmp     byte ptr [edx+15h], 0
jnz     short loc_1000868a
jmp     short loc_10008680
mov     ecx, edx
mov     edx, [ecx]
cmp     byte ptr [edx+15h], 0
jz      short loc_10008680
mov     [eax], ecx
retn
mov     edx, [edx+4]
cmp     byte ptr [edx+15h], 0
jnz     short loc_100086a8
mov     ecx, [eax]
cmp     ecx, [edx+8]
jnz     short loc_100086a8
mov     [eax], edx
mov     edx, [edx+4]
cmp     byte ptr [edx+15h], 0
jz      short loc_10008696
mov     [eax], edx
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     eax, [edx]
push    esi
mov     esi, [eax+8]
mov     [edx], esi
mov     esi, [eax+8]
cmp     byte ptr [esi+39h], 0
jnz     short loc_100086ca
mov     [esi+4], edx
mov     esi, [edx+4]
mov     [eax+4], esi
mov     ecx, [ecx+4]
pop     esi
cmp     edx, [ecx+4]
jnz     short loc_100086e6
mov     [ecx+4], eax
mov     [eax+8], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     ecx, [edx+4]
cmp     edx, [ecx+8]
jnz     short loc_100086fb
mov     [ecx+8], eax
mov     [eax+8], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     [ecx], eax
mov     [eax+8], edx
mov     [edx+4], eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ecx+4]
mov     ecx, [eax+4]
cmp     byte ptr [ecx+39h], 0
jnz     short loc_1000874d
mov     edx, [ebp+arg_0]
push    esi
mov     esi, [edx]
mov     edx, [edx+4]
push    edi
lea     esp, [esp+0]
cmp     [ecx+14h], edx
ja      short loc_10008741
jb      short loc_1000873c
cmp     [ecx+10h], esi
jnb     short loc_10008741
mov     ecx, [ecx+8]
jmp     short loc_10008745
mov     eax, ecx
mov     ecx, [ecx]
cmp     byte ptr [ecx+39h], 0
jz      short loc_10008730
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     eax, [edx+8]
push    esi
mov     esi, [eax]
mov     [edx+8], esi
mov     esi, [eax]
cmp     byte ptr [esi+15h], 0
jnz     short loc_1000877a
mov     [esi+4], edx
mov     esi, [edx+4]
mov     [eax+4], esi
mov     ecx, [ecx+4]
pop     esi
cmp     edx, [ecx+4]
jnz     short loc_10008795
mov     [ecx+4], eax
mov     [eax], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     ecx, [edx+4]
cmp     edx, [ecx]
jnz     short loc_100087a7
mov     [ecx], eax
mov     [eax], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     [ecx+8], eax
mov     [eax], edx
mov     [edx+4], eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     eax, [edx]
push    esi
mov     esi, [eax+8]
mov     [edx], esi
mov     esi, [eax+8]
cmp     byte ptr [esi+15h], 0
jnz     short loc_100087da
mov     [esi+4], edx
mov     esi, [edx+4]
mov     [eax+4], esi
mov     ecx, [ecx+4]
pop     esi
cmp     edx, [ecx+4]
jnz     short loc_100087f6
mov     [ecx+4], eax
mov     [eax+8], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     ecx, [edx+4]
cmp     edx, [ecx+8]
jnz     short loc_1000880b
mov     [ecx+8], eax
mov     [eax+8], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     [ecx], eax
mov     [eax+8], edx
mov     [edx+4], eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
lea     eax, [ebp+pclsid]
push    eax
push    offset sz
mov     [ebp+var_18], 0
call    ds:clsidfromstring
mov     edx, dword ptr [ebp+pclsid.data2]
mov     ecx, [ebp+pclsid.data1]
mov     eax, dword ptr [ebp+pclsid.data4]
mov     [ebp+var_10], edx
mov     [ebp+var_14], ecx
mov     ecx, dword ptr [ebp+pclsid.data4+4]
lea     edx, [ebp+var_1c]
push    edx
mov     [ebp+var_c], eax
mov     [ebp+var_8], ecx
mov     [ebp+var_1c], 0
call    ?getcore@@yahpapax@z
add     esp, 4
test    eax, eax
jz      short loc_10008890
mov     ecx, [ebp+var_1c]
test    ecx, ecx
jz      short loc_10008890
mov     eax, [ecx]
mov     eax, [eax+4]
lea     edx, [ebp+var_18]
push    edx
push    offset aqqprotectengin
lea     edx, [ebp+var_14]
push    edx
call    eax
mov     ecx, [ebp+var_4]
mov     eax, [ebp+var_18]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, ecx
cmp     byte ptr [esi+4], 0
jz      short loc_100088c6
mov     eax, [esi]
push    eax
call    ds:leavecriticalsection
mov     byte ptr [esi+4], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     eax, [esi+10h]
mov     ecx, [ebp+arg_0]
push    edi
cmp     eax, ecx
jnb     short loc_100088ec
push    offset ainvalidstringp
call    ds:?_xout_of_range@std@@yaxpbd@z
mov     edi, [ebp+arg_4]
sub     eax, ecx
cmp     eax, edi
jnb     short loc_100088f7
mov     edi, eax
test    edi, edi
jz      short loc_1000894c
mov     edx, [esi+14h]
push    ebx
cmp     edx, 10h
jb      short loc_10008908
mov     ebx, [esi]
jmp     short loc_1000890a
mov     ebx, esi
cmp     edx, 10h
jb      short loc_10008913
mov     edx, [esi]
jmp     short loc_10008915
mov     edx, esi
sub     eax, edi
add     ebx, ecx
push    eax
add     ebx, edi
add     edx, ecx
push    ebx
push    edx
call    ds:memmove
mov     eax, [esi+10h]
add     esp, 0ch
sub     eax, edi
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], eax
pop     ebx
jb      short loc_10008946
mov     ecx, [esi]
mov     byte ptr [ecx+eax], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
mov     ecx, esi
mov     byte ptr [ecx+eax], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
sub     esp, 0ch
xor     eax, eax
test    ecx, ecx
jz      short loc_100089aa
cmp     ecx, 0ffffffffh
ja      short loc_10008981
push    ecx
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jnz     short loc_100089aa
lea     eax, [ebp+arg_0]
push    eax
lea     ecx, [ebp+pexceptionobject]
mov     [ebp+arg_0], 0
call    ds:??0exception@std@@qae@abqbd@z
push    offset __ti2?avbad_alloc@std@@
lea     ecx, [ebp+pexceptionobject]
push    ecx
mov     [ebp+pexceptionobject], offset ??_7bad_alloc@std@@6b@
call    _cxxthrowexception
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
cmp     byte_10013062, 0
jz      short loc_100089dd
mov     eax, [ebp+arg_4]
push    67h
push    eax
push    offset aclsptloginplug_0
push    offset acommon
push    offset asscookieuservi
push    0
push    0
call    sub_100048c0
add     esp, 1ch
mov     eax, [ebp+arg_8]
test    eax, eax
jnz     short loc_100089ed
mov     eax, 80070057h
pop     ebp
retn    0ch
push    esi
mov     dword ptr [eax], 67h
call    sub_10008820
mov     esi, [ebp+arg_0]
mov     [esi+28h], eax
test    eax, eax
jnz     short loc_10008a1c
cmp     byte_10013062, al
jz      short loc_10008a81
push    offset aclsptloginplug_0
push    offset acommon
push    offset assgetinsptrine
jmp     short loc_10008a75
cmp     byte_10013062, 0
jz      short loc_10008a41
push    eax
push    offset aclsptloginplug_0
push    offset acommon
push    offset assgetinsptrine_0
push    0
push    0
call    sub_100048c0
add     esp, 18h
lea     ecx, [esi-4]
test    ecx, ecx
jz      short loc_10008a4d
lea     eax, [esi+4]
jmp     short loc_10008a4f
xor     eax, eax
mov     ecx, [esi+28h]
mov     edx, [ecx]
push    eax
mov     eax, [edx]
call    eax
test    eax, eax
jns     short loc_10008a8b
cmp     byte_10013062, 0
jz      short loc_10008a81
push    offset aclsptloginplug_0
push    offset acommon
push    offset assmpinetworkpt
push    0
push    0
call    sub_100048c0
add     esp, 14h
mov     eax, 80004005h
pop     esi
pop     ebp
retn    0ch
xor     eax, eax
pop     esi
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi]
push    edi
mov     edi, ecx
mov     [edi], eax
mov     ecx, [esi+4]
mov     [edi+4], ecx
mov     edx, [esi+8]
mov     [edi+8], edx
mov     eax, [esi+0ch]
mov     [edi+0ch], eax
mov     eax, [edi+10h]
cmp     eax, [esi+10h]
jz      short loc_10008aff
push    eax
call    ds:sysfreestring
mov     eax, [esi+10h]
test    eax, eax
jz      short loc_10008ae8
push    eax
call    ds:sysstringbytelen
mov     ecx, [esi+10h]
push    eax
push    ecx
call    ds:sysallocstringbytelen
mov     [edi+10h], eax
cmp     dword ptr [esi+10h], 0
jz      short loc_10008aff
test    eax, eax
jnz     short loc_10008aff
push    8007000eh
call    sub_100020c0
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     dword ptr [eax], 0
jnz     short loc_10008b3c
cmp     dword ptr [eax+4], 0
jnz     short loc_10008b3c
cmp     dword ptr [eax+8], 0c0h
jnz     short loc_10008b3c
cmp     dword ptr [eax+0ch], 46000000h
jnz     short loc_10008b3c
mov     eax, 1
pop     ebp
retn    4
xor     eax, eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_c]
mov     eax, 80004003h
test    ecx, ecx
jz      short loc_10008ba0
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_8]
mov     dword ptr [ecx], 0
test    edx, edx
jz      short loc_10008b95
cmp     dword ptr [eax], 0
jnz     short loc_10008b8c
cmp     dword ptr [eax+4], 0
jnz     short loc_10008b8c
cmp     dword ptr [eax+8], 0c0h
jnz     short loc_10008b8c
cmp     dword ptr [eax+0ch], 46000000h
jz      short loc_10008b95
mov     eax, 80040110h
pop     ebp
retn    10h
push    ecx
push    eax
mov     eax, [ebp+arg_0]
mov     ecx, [eax+24h]
push    edx
call    ecx
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
cmp     [ebp+arg_4], 0
mov     ecx, dword_100137dc
mov     eax, [ecx]
jz      short loc_10008bcc
mov     edx, [eax+4]
call    edx
xor     eax, eax
pop     ebp
retn    8
mov     edx, [eax+8]
call    edx
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     eax, [edx+8]
push    esi
mov     esi, [eax]
mov     [edx+8], esi
mov     esi, [eax]
cmp     byte ptr [esi+39h], 0
jnz     short loc_10008bfa
mov     [esi+4], edx
mov     esi, [edx+4]
mov     [eax+4], esi
mov     ecx, [ecx+4]
pop     esi
cmp     edx, [ecx+4]
jnz     short loc_10008c15
mov     [ecx+4], eax
mov     [eax], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     ecx, [edx+4]
cmp     edx, [ecx]
jnz     short loc_10008c27
mov     [ecx], eax
mov     [eax], edx
mov     [edx+4], eax
pop     ebp
retn    4
mov     [ecx+8], eax
mov     [eax], edx
mov     [edx+4], eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
lea     eax, [esi+8]
mov     dword ptr [esi], offset ??_7ccomclassfactory@atl@@6b@
cmp     byte ptr [eax+18h], 0
jz      short loc_10008c60
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_10008c6f
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
cmp     dword ptr [esi+18h], 4
push    edi
jb      loc_10008d11
mov     eax, [esi+4]
mov     eax, [eax]
mov     edi, [ebp+arg_4]
push    eax
mov     [edi], eax
call    ds:ntohl
mov     [edi], eax
mov     eax, [esi+18h]
xor     edx, edx
cmp     eax, 4
ja      short loc_10008cbc
mov     ecx, [esi+8]
mov     [esi+18h], edx
mov     [esi+4], ecx
mov     [esi+10h], edx
jmp     short loc_10008cca
add     dword ptr [esi+4], 4
add     dword ptr [esi+10h], 4
add     eax, 0fffffffch
mov     [esi+18h], eax
mov     eax, [edi]
cmp     eax, [esi+18h]
ja      short loc_10008d11
cmp     eax, edx
jbe     short loc_10008cda
mov     eax, [esi+4]
jmp     short loc_10008cdc
xor     eax, eax
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
mov     eax, [edi]
mov     ecx, [esi+18h]
cmp     eax, ecx
jb      short loc_10008cfe
mov     eax, [esi+8]
mov     [esi+4], eax
pop     edi
mov     [esi+18h], edx
mov     [esi+10h], edx
mov     al, 1
pop     esi
pop     ebp
retn    8
add     [esi+4], eax
add     [esi+10h], eax
sub     ecx, eax
pop     edi
mov     [esi+18h], ecx
mov     al, 1
pop     esi
pop     ebp
retn    8
pop     edi
xor     al, al
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
mov     ecx, [eax]
mov     [esi], ecx
mov     edx, [eax+4]
mov     [esi+4], edx
mov     ecx, [eax+8]
mov     [esi+8], ecx
mov     edx, [eax+0ch]
mov     [esi+0ch], edx
push    edi
mov     edi, [ebp+arg_4]
mov     eax, [edi]
mov     [esi+10h], eax
mov     ecx, [edi+4]
mov     [esi+14h], ecx
mov     edx, [edi+8]
mov     [esi+18h], edx
mov     eax, [edi+0ch]
mov     [esi+1ch], eax
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_10008d73
push    eax
call    ds:sysstringbytelen
mov     ecx, [edi+10h]
push    eax
push    ecx
call    ds:sysallocstringbytelen
mov     [esi+20h], eax
cmp     dword ptr [edi+10h], 0
jz      short loc_10008d8a
test    eax, eax
jnz     short loc_10008d8a
push    8007000eh
call    sub_100020c0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10008da0
mov     eax, large fs:0
push    eax
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     edi, ecx
mov     [ebp+var_14], edi
mov     eax, [ebp+arg_0]
mov     esi, eax
or      esi, 0fh
cmp     esi, 0fffffffeh
jbe     short loc_10008de1
mov     esi, eax
jmp     short loc_10008e08
mov     ebx, [edi+14h]
mov     eax, 0aaaaaaabh
mul     esi
mov     ecx, ebx
shr     ecx, 1
shr     edx, 1
cmp     ecx, edx
jbe     short loc_10008e08
mov     eax, 0fffffffeh
sub     eax, ecx
lea     esi, [ecx+ebx]
cmp     ebx, eax
jbe     short loc_10008e08
mov     esi, 0fffffffeh
xor     eax, eax
lea     ecx, [esi+1]
mov     [ebp+var_4], eax
cmp     ecx, eax
jbe     short loc_10008e26
cmp     ecx, 0ffffffffh
ja      short loc_10008e2b
push    ecx
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_10008e2b
mov     [ebp+arg_0], eax
jmp     short loc_10008e7d
lea     ecx, [ebp+var_18]
push    ecx
lea     ecx, [ebp+pexceptionobject]
mov     [ebp+var_18], 0
call    ds:??0exception@std@@qae@abqbd@z
push    offset __ti2?avbad_alloc@std@@
lea     edx, [ebp+pexceptionobject]
push    edx
mov     [ebp+pexceptionobject], offset ??_7bad_alloc@std@@6b@
call    _cxxthrowexception
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_14]
mov     [ebp+var_1c], eax
inc     eax
mov     [ebp+var_10], esp
push    eax
add     ecx, 18h
mov     byte ptr [ebp+var_4], 2
call    sub_10008960
mov     [ebp+arg_0], eax
mov     eax, offset loc_10008e77
retn
mov     edi, [ebp+var_14]
mov     esi, [ebp+var_1c]
mov     ebx, [ebp+size]
test    ebx, ebx
jz      short loc_10008e9e
cmp     dword ptr [edi+14h], 10h
jb      short loc_10008e8e
mov     eax, [edi]
jmp     short loc_10008e90
mov     eax, edi
push    ebx
push    eax
mov     eax, [ebp+arg_0]
push    eax
call    memcpy
add     esp, 0ch
cmp     dword ptr [edi+14h], 10h
jb      short loc_10008eaf
mov     ecx, [edi]
push    ecx
call    ??3@yaxpax@z
add     esp, 4
mov     eax, [ebp+arg_0]
mov     byte ptr [edi], 0
mov     [edi], eax
mov     [edi+14h], esi
mov     [edi+10h], ebx
cmp     esi, 10h
jb      short loc_10008ec4
mov     edi, eax
mov     byte ptr [edi+ebx], 0
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     esi, [ebp+var_14]
cmp     dword ptr [esi+14h], 10h
jb      short loc_10008ef0
mov     edx, [esi]
push    edx
call    ??3@yaxpax@z
add     esp, 4
push    0
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
push    0
mov     byte ptr [esi], 0
call    _cxxthrowexception
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     edx, [ebp+arg_0]
xor     eax, eax
mov     [ebp+var_10], al
mov     [ebp+var_c], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_1c], offset ??_7databuf@svrlib@@6b@
mov     [ebp+var_14], edx
mov     [ebp+var_18], edx
mov     [ebp+var_8], eax
mov     [ebp+var_4], eax
cmp     eax, 1
jb      short loc_10008f6c
push    ebx
mov     bl, [edx]
push    esi
push    edi
mov     [ecx], bl
ja      short loc_10008f61
xor     eax, eax
mov     esi, edx
xor     edi, edi
cmp     eax, 1
jb      short loc_10008fc1
mov     bl, [esi]
mov     [ecx+1], bl
ja      short loc_10008f74
xor     eax, eax
mov     [ebp+var_18], edx
mov     [ebp+var_c], eax
jmp     short loc_10008f7d
lea     esi, [edx+1]
mov     edi, 1
dec     eax
jmp     short loc_10008f4b
xor     al, al
mov     esp, ebp
pop     ebp
retn    0ch
inc     esi
inc     edi
mov     [ebp+var_18], esi
mov     [ebp+var_c], edi
dec     eax
mov     [ebp+var_4], eax
movzx   eax, byte ptr [ecx]
cmp     eax, 13h
ja      short loc_10008fa5
mov     eax, size[eax*4]
test    eax, eax
jle     short loc_10008fa5
mov     [ecx+2], eax
add     ecx, 6
push    eax
push    ecx
lea     ecx, [ebp+var_1c]
call    sub_10008160
jmp     short loc_10008fb5
lea     eax, [ecx+2]
add     ecx, 6
push    eax
push    ecx
lea     ecx, [ebp+var_1c]
call    sub_10008c80
test    al, al
jnz     short loc_10008fcc
lea     ecx, [ebp+var_1c]
call    sub_10008120
pop     edi
pop     esi
xor     al, al
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_10008fd8
mov     ecx, [ebp+var_c]
mov     [eax], ecx
cmp     [ebp+var_10], 0
jz      short loc_10008fea
mov     edx, [ebp+var_14]
push    edx
call    ??_v@yaxpax@z
add     esp, 4
pop     edi
pop     esi
mov     al, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_4]
mov     ebx, ecx
mov     [ebp+var_4], 0
test    edi, edi
jns     short loc_10009019
xor     edi, edi
mov     esi, [ebp+destinationsize]
test    esi, esi
jns     short loc_10009022
xor     esi, esi
mov     eax, 7fffffffh
sub     eax, edi
cmp     eax, esi
jl      short loc_10009068
mov     ecx, [ebx]
mov     eax, [ecx-0ch]
lea     edx, [edi+esi]
cmp     edx, eax
jle     short loc_1000903d
mov     esi, eax
sub     esi, edi
cmp     edi, eax
jle     short loc_10009043
xor     esi, esi
test    edi, edi
jnz     short loc_10009072
cmp     esi, eax
jnz     short loc_10009072
lea     eax, [ecx-10h]
push    eax
call    sub_10002a80
add     esp, 4
pop     edi
lea     ecx, [eax+10h]
mov     eax, [ebp+arg_0]
pop     esi
mov     [eax], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    80070216h
call    sub_100020c0
mov     ecx, [ecx-10h]
test    ecx, ecx
jz      short loc_10009084
mov     edx, [ecx]
mov     eax, [edx+10h]
call    eax
test    eax, eax
jnz     short loc_10009094
mov     edx, off_10013544
mov     eax, [edx+10h]
mov     ecx, offset off_10013544
call    eax
mov     ecx, [ebx]
push    eax
push    esi
mov     esi, [ebp+arg_0]
add     ecx, edi
push    ecx
mov     ecx, esi
call    sub_100085e0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
cmp     [ebp+arg_0], 0
push    esi
jz      loc_1000918d
mov     esi, [ebp+arg_4]
test    esi, esi
jz      loc_1000918d
push    ebx
mov     ebx, [ebp+arg_c]
test    ebx, ebx
jnz     short loc_100090dc
pop     ebx
mov     eax, 80004003h
pop     esi
pop     ebp
retn    10h
push    edi
mov     edi, [ebp+arg_8]
push    edi
mov     dword ptr [ebx], 0
call    sub_10008b10
test    eax, eax
jz      short loc_10009109
mov     esi, [esi+4]
add     esi, [ebp+arg_0]
mov     eax, [esi]
mov     ecx, [eax+4]
push    esi
call    ecx
mov     [ebx], esi
xor     eax, eax
pop     edi
pop     ebx
pop     esi
pop     ebp
retn    10h
mov     ecx, [esi+8]
test    ecx, ecx
jz      short loc_10009165
mov     eax, [esi]
xor     ebx, ebx
test    eax, eax
setz    bl
test    ebx, ebx
jnz     short loc_1000913b
mov     edx, [eax]
cmp     edx, [edi]
jnz     short loc_1000915b
mov     edx, [eax+4]
cmp     edx, [edi+4]
jnz     short loc_1000915b
mov     edx, [eax+8]
cmp     edx, [edi+8]
jnz     short loc_1000915b
mov     eax, [eax+0ch]
cmp     eax, [edi+0ch]
jnz     short loc_1000915b
cmp     ecx, 1
jz      short loc_10009171
mov     edx, [esi+4]
mov     eax, [ebp+arg_c]
push    edx
mov     edx, [ebp+arg_0]
push    eax
push    edi
push    edx
call    ecx
test    eax, eax
jz      short loc_10009102
test    ebx, ebx
jnz     short loc_1000915b
test    eax, eax
js      short loc_10009102
mov     ecx, [esi+14h]
add     esi, 0ch
test    ecx, ecx
jnz     short loc_10009110
pop     edi
pop     ebx
mov     eax, 80004002h
pop     esi
pop     ebp
retn    10h
mov     esi, [esi+4]
add     esi, [ebp+arg_0]
mov     eax, [esi]
mov     ecx, [eax+4]
push    esi
call    ecx
mov     edx, [ebp+arg_c]
pop     edi
pop     ebx
mov     [edx], esi
xor     eax, eax
pop     esi
pop     ebp
retn    10h
mov     eax, 80070057h
pop     esi
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
add     eax, 4
push    eax
call    ds:interlockedincrement
mov     esi, eax
cmp     esi, 2
jnz     short loc_100091c7
mov     ecx, dword_100137dc
mov     edx, [ecx]
mov     eax, [edx+4]
call    eax
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
lea     eax, [edi+4]
push    eax
call    ds:interlockeddecrement
mov     esi, eax
test    esi, esi
jnz     short loc_100091ff
test    edi, edi
jz      short loc_10009213
mov     edx, [edi]
mov     eax, [edx+14h]
push    1
mov     ecx, edi
call    eax
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    4
cmp     esi, 1
jnz     short loc_10009213
mov     ecx, dword_100137dc
mov     edx, [ecx]
mov     eax, [edx+8]
call    eax
mov     eax, esi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    eax
push    ecx
push    offset off_10010100
push    edx
call    sub_100090b0
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
lea     eax, [esi+8]
mov     dword ptr [esi+4], 0c0000001h
mov     dword ptr [esi], offset ??_7ccomclassfactory@atl@@6b@
cmp     byte ptr [eax+18h], 0
jz      short loc_10009267
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_10009276
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
mov     edx, [ebp+string]
push    esi
mov     esi, ecx
mov     eax, [esi]
mov     ecx, edx
sub     ecx, eax
push    edi
mov     edi, [eax-0ch]
mov     eax, [ebp+maxcount]
mov     [ebp+var_4], ecx
mov     [ebp+var_8], edi
test    eax, eax
jns     short loc_100092ad
push    80070057h
call    sub_100020c0
push    ebx
test    edx, edx
jnz     short loc_100092b6
xor     ebx, ebx
jmp     short loc_100092c3
push    eax
push    edx
call    ds:strnlen
add     esp, 8
mov     ebx, eax
mov     eax, 7fffffffh
sub     eax, ebx
cmp     eax, edi
jge     short loc_100092d8
push    80070057h
call    sub_100020c0
add     edi, ebx
jns     short loc_100092e6
push    80070057h
call    sub_100020c0
mov     eax, [esi]
mov     edx, [eax-8]
mov     ecx, 1
sub     ecx, [eax-4]
sub     edx, edi
or      ecx, edx
jge     short loc_10009301
push    edi
mov     ecx, esi
call    sub_10002cb0
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     eax, [esi]
cmp     ecx, edx
ja      short loc_10009311
add     ecx, eax
jmp     short loc_10009314
mov     ecx, [ebp+string]
push    ebx
push    ecx
add     eax, edx
push    ebx
push    eax
call    ds:memcpy_s
mov     eax, [esi]
add     esp, 10h
pop     ebx
cmp     edi, [eax-8]
jg      loc_100092a3
mov     [eax-0ch], edi
mov     eax, [esi]
mov     byte ptr [edi+eax], 0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
cmp     byte ptr [edi+15h], 0
mov     ebx, ecx
mov     esi, edi
jnz     short loc_10009371
mov     eax, [esi+8]
push    eax
mov     ecx, ebx
call    sub_10009340
mov     esi, [esi]
push    edi
call    ??3@yaxpax@z
add     esp, 4
cmp     byte ptr [esi+15h], 0
mov     edi, esi
jz      short loc_10009353
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
mov     ebx, [ebp+arg_4]
cmp     byte ptr [ebx+15h], 0
push    esi
push    edi
mov     [ebp+var_4], ecx
jz      short loc_100093a0
push    offset ainvalidmapsett
call    ds:?_xout_of_range@std@@yaxpbd@z
lea     ecx, [ebp+arg_4]
mov     [ebp+var_8], ebx
call    sub_10008660
mov     ecx, [ebx]
cmp     byte ptr [ecx+15h], 0
jz      short loc_100093b8
mov     edi, [ebx+8]
jmp     short loc_100093cf
mov     eax, [ebx+8]
cmp     byte ptr [eax+15h], 0
jz      short loc_100093c5
mov     edi, ecx
jmp     short loc_100093cf
mov     eax, [ebp+arg_4]
mov     edi, [eax+8]
cmp     eax, ebx
jnz     short loc_10009441
cmp     byte ptr [edi+15h], 0
mov     esi, [ebx+4]
jnz     short loc_100093db
mov     [edi+4], esi
mov     ecx, [ebp+var_4]
mov     eax, [ecx+4]
cmp     [eax+4], ebx
jnz     short loc_100093eb
mov     [eax+4], edi
jmp     short loc_100093f6
cmp     [esi], ebx
jnz     short loc_100093f3
mov     [esi], edi
jmp     short loc_100093f6
mov     [esi+8], edi
mov     eax, [ecx+4]
cmp     [eax], ebx
jnz     short loc_10009418
cmp     byte ptr [edi+15h], 0
jz      short loc_10009407
mov     eax, esi
jmp     short loc_10009413
push    edi
call    sub_10008480
mov     ecx, [ebp+var_4]
add     esp, 4
mov     edx, [ecx+4]
mov     [edx], eax
mov     ecx, [ecx+4]
mov     [ebp+var_c], ecx
cmp     [ecx+8], ebx
jnz     short loc_1000949b
cmp     byte ptr [edi+15h], 0
jz      short loc_10009430
mov     eax, esi
mov     [ecx+8], eax
jmp     short loc_1000949b
push    edi
call    sub_100084f0
mov     ecx, [ebp+var_c]
add     esp, 4
mov     [ecx+8], eax
jmp     short loc_1000949b
mov     [ecx+4], eax
mov     ecx, [ebx]
mov     [eax], ecx
cmp     eax, [ebx+8]
jnz     short loc_10009451
mov     esi, eax
jmp     short loc_1000946b
cmp     byte ptr [edi+15h], 0
mov     esi, [eax+4]
jnz     short loc_1000945d
mov     [edi+4], esi
mov     [esi], edi
mov     ecx, [ebx+8]
mov     [eax+8], ecx
mov     edx, [ebx+8]
mov     [edx+4], eax
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+4]
cmp     [ecx+4], ebx
jnz     short loc_1000947b
mov     [ecx+4], eax
jmp     short loc_10009489
mov     ecx, [ebx+4]
cmp     [ecx], ebx
jnz     short loc_10009486
mov     [ecx], eax
jmp     short loc_10009489
mov     [ecx+8], eax
mov     edx, [ebx+4]
mov     [eax+4], edx
mov     dl, [ebx+14h]
mov     cl, [eax+14h]
mov     [eax+14h], dl
mov     [ebx+14h], cl
mov     eax, [ebp+var_8]
mov     bl, 1
cmp     [eax+14h], bl
jnz     loc_100095ab
mov     ecx, [ebp+var_4]
mov     edx, [ecx+4]
cmp     edi, [edx+4]
jz      loc_100095a8
jmp     short loc_100094c0
cmp     [edi+14h], bl
jnz     loc_100095a8
mov     eax, [esi]
cmp     edi, eax
jnz     short loc_10009534
mov     eax, [esi+8]
cmp     byte ptr [eax+14h], 0
jnz     short loc_100094eb
mov     [eax+14h], bl
push    esi
mov     byte ptr [esi+14h], 0
call    sub_10008760
mov     eax, [esi+8]
mov     ecx, [ebp+var_4]
cmp     byte ptr [eax+15h], 0
jnz     short loc_10009565
mov     edx, [eax]
cmp     [edx+14h], bl
jnz     short loc_10009500
mov     edx, [eax+8]
cmp     [edx+14h], bl
jz      short loc_10009561
mov     edx, [eax+8]
cmp     [edx+14h], bl
jnz     short loc_1000951d
mov     edx, [eax]
mov     [edx+14h], bl
push    eax
mov     byte ptr [eax+14h], 0
call    sub_100087c0
mov     eax, [esi+8]
mov     ecx, [ebp+var_4]
mov     dl, [esi+14h]
mov     [eax+14h], dl
mov     [esi+14h], bl
mov     eax, [eax+8]
push    esi
mov     [eax+14h], bl
call    sub_10008760
jmp     short loc_100095a8
cmp     byte ptr [eax+14h], 0
jnz     short loc_1000954c
mov     [eax+14h], bl
push    esi
mov     byte ptr [esi+14h], 0
call    sub_100087c0
mov     eax, [esi]
mov     ecx, [ebp+var_4]
cmp     byte ptr [eax+15h], 0
jnz     short loc_10009565
mov     edx, [eax+8]
cmp     [edx+14h], bl
jnz     short loc_10009578
mov     edx, [eax]
cmp     [edx+14h], bl
jnz     short loc_10009578
mov     byte ptr [eax+14h], 0
mov     eax, [ecx+4]
mov     edi, esi
mov     esi, [esi+4]
cmp     edi, [eax+4]
jnz     loc_100094c0
jmp     short loc_100095a8
mov     edx, [eax]
cmp     [edx+14h], bl
jnz     short loc_10009594
mov     edx, [eax+8]
mov     [edx+14h], bl
push    eax
mov     byte ptr [eax+14h], 0
call    sub_10008760
mov     eax, [esi]
mov     ecx, [ebp+var_4]
mov     dl, [esi+14h]
mov     [eax+14h], dl
mov     [esi+14h], bl
mov     eax, [eax]
push    esi
mov     [eax+14h], bl
call    sub_100087c0
mov     [edi+14h], bl
mov     ecx, [ebp+var_8]
push    ecx
call    ??3@yaxpax@z
mov     ecx, [ebp+var_4]
mov     eax, [ecx+8]
add     esp, 4
pop     edi
pop     esi
pop     ebx
test    eax, eax
jz      short loc_100095c8
dec     eax
mov     [ecx+8], eax
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     [eax], edx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ecx+4]
mov     eax, [edx+4]
cmp     byte ptr [eax+15h], 0
push    edi
mov     edi, [ebp+arg_4]
jnz     short loc_1000960e
push    esi
movzx   esi, word ptr [edi]
cmp     [eax+0ch], si
jnb     short loc_10009603
mov     eax, [eax+8]
jmp     short loc_10009607
mov     edx, eax
mov     eax, [eax]
cmp     byte ptr [eax+15h], 0
jz      short loc_100095f8
pop     esi
mov     eax, [ecx+4]
mov     [ebp+arg_4], edx
cmp     edx, eax
jz      short loc_10009632
mov     cx, [edi]
cmp     cx, [edx+0ch]
jb      short loc_10009632
lea     eax, [ebp+arg_4]
mov     edx, [eax]
mov     eax, [ebp+arg_0]
mov     [eax], edx
pop     edi
mov     esp, ebp
pop     ebp
retn    8
mov     [ebp+var_4], eax
lea     eax, [ebp+var_4]
mov     edx, [eax]
mov     eax, [ebp+arg_0]
mov     [eax], edx
pop     edi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ecx+8]
cmp     eax, 1ffffffeh
jb      short loc_10009674
mov     eax, [ebp+arg_c]
push    eax
call    ??3@yaxpax@z
add     esp, 4
push    offset amapsetttoolong
call    ds:?_xlength_error@std@@yaxpbd@z
inc     eax
push    ebx
mov     [ecx+8], eax
mov     eax, [ebp+arg_8]
push    edi
mov     edi, [ebp+arg_c]
mov     [edi+4], eax
mov     edx, [ecx+4]
xor     bl, bl
cmp     eax, edx
jnz     short loc_1000969c
mov     [edx+4], edi
mov     edx, [ecx+4]
mov     [edx], edi
mov     eax, [ecx+4]
mov     [eax+8], edi
jmp     short loc_100096bc
cmp     [ebp+arg_4], bl
jz      short loc_100096ae
mov     [eax], edi
mov     edx, [ecx+4]
cmp     eax, [edx]
jnz     short loc_100096bc
mov     [edx], edi
jmp     short loc_100096bc
mov     [eax+8], edi
mov     edx, [ecx+4]
cmp     eax, [edx+8]
jnz     short loc_100096bc
mov     [edx+8], edi
mov     edx, [edi+4]
mov     eax, edi
cmp     [edx+14h], bl
jnz     loc_10009860
push    esi
jmp     short loc_100096d0
mov     edx, [eax+4]
mov     esi, [edx+4]
cmp     edx, [esi]
jnz     loc_1000979f
mov     esi, [esi+8]
cmp     [esi+14h], bl
jnz     short loc_10009702
mov     byte ptr [edx+14h], 1
mov     byte ptr [esi+14h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+14h], bl
mov     eax, [eax+4]
mov     eax, [eax+4]
jmp     loc_10009853
cmp     eax, [edx+8]
jnz     short loc_10009741
mov     eax, edx
mov     edx, [eax+8]
mov     esi, [edx]
mov     [eax+8], esi
mov     esi, [edx]
cmp     [esi+15h], bl
jnz     short loc_1000971b
mov     [esi+4], eax
mov     esi, [eax+4]
mov     [edx+4], esi
mov     esi, [ecx+4]
cmp     eax, [esi+4]
jnz     short loc_1000972e
mov     [esi+4], edx
jmp     short loc_1000973c
mov     esi, [eax+4]
cmp     eax, [esi]
jnz     short loc_10009739
mov     [esi], edx
jmp     short loc_1000973c
mov     [esi+8], edx
mov     [edx], eax
mov     [eax+4], edx
mov     edx, [eax+4]
mov     byte ptr [edx+14h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+14h], bl
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     esi, [edx]
mov     edi, [esi+8]
mov     [edx], edi
mov     edi, [esi+8]
cmp     [edi+15h], bl
jnz     short loc_10009769
mov     [edi+4], edx
mov     edi, [edx+4]
mov     [esi+4], edi
mov     edi, [ecx+4]
cmp     edx, [edi+4]
jnz     short loc_10009782
mov     [edi+4], esi
mov     [esi+8], edx
jmp     loc_1000984d
mov     edi, [edx+4]
cmp     edx, [edi+8]
jnz     short loc_10009795
mov     [edi+8], esi
mov     [esi+8], edx
jmp     loc_1000984d
mov     [edi], esi
mov     [esi+8], edx
jmp     loc_1000984d
mov     esi, [esi]
cmp     [esi+14h], bl
jnz     short loc_100097c2
mov     byte ptr [edx+14h], 1
mov     byte ptr [esi+14h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+14h], bl
mov     eax, [eax+4]
mov     eax, [eax+4]
jmp     loc_10009853
cmp     eax, [edx]
jnz     short loc_10009802
mov     eax, edx
mov     edx, [eax]
mov     esi, [edx+8]
mov     [eax], esi
mov     esi, [edx+8]
cmp     [esi+15h], bl
jnz     short loc_100097da
mov     [esi+4], eax
mov     esi, [eax+4]
mov     [edx+4], esi
mov     esi, [ecx+4]
cmp     eax, [esi+4]
jnz     short loc_100097ed
mov     [esi+4], edx
jmp     short loc_100097fc
mov     esi, [eax+4]
cmp     eax, [esi+8]
jnz     short loc_100097fa
mov     [esi+8], edx
jmp     short loc_100097fc
mov     [esi], edx
mov     [edx+8], eax
mov     [eax+4], edx
mov     edx, [eax+4]
mov     byte ptr [edx+14h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+14h], bl
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     esi, [edx+8]
mov     edi, [esi]
mov     [edx+8], edi
mov     edi, [esi]
cmp     [edi+15h], bl
jnz     short loc_1000982a
mov     [edi+4], edx
mov     edi, [edx+4]
mov     [esi+4], edi
mov     edi, [ecx+4]
cmp     edx, [edi+4]
jnz     short loc_1000983d
mov     [edi+4], esi
jmp     short loc_1000984b
mov     edi, [edx+4]
cmp     edx, [edi]
jnz     short loc_10009848
mov     [edi], esi
jmp     short loc_1000984b
mov     [edi+8], esi
mov     [esi], edx
mov     edi, [ebp+arg_c]
mov     [edx+4], esi
mov     edx, [eax+4]
cmp     [edx+14h], bl
jz      loc_100096d0
pop     esi
mov     eax, [ecx+4]
mov     ecx, [eax+4]
mov     eax, [ebp+arg_0]
mov     [eax], edi
pop     edi
mov     byte ptr [ecx+14h], 1
pop     ebx
pop     ebp
retn    10h
push    ebx
push    esi
mov     esi, ecx
cmp     dword ptr [esi+6ch], 10h
jb      short loc_10009896
mov     eax, [esi+58h]
push    eax
call    ??3@yaxpax@z
add     esp, 4
xor     ebx, ebx
mov     dword ptr [esi+6ch], 0fh
mov     [esi+68h], ebx
mov     [esi+58h], bl
cmp     dword ptr [esi+50h], 10h
jb      short loc_100098b7
mov     ecx, [esi+3ch]
push    ecx
call    ??3@yaxpax@z
add     esp, 4
mov     dword ptr [esi+50h], 0fh
mov     [esi+4ch], ebx
mov     [esi+3ch], bl
cmp     dword ptr [esi+34h], 10h
jb      short loc_100098d6
mov     edx, [esi+20h]
push    edx
call    ??3@yaxpax@z
add     esp, 4
mov     [esi+30h], ebx
mov     dword ptr [esi+34h], 0fh
mov     [esi+20h], bl
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100098f0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     eax, [ebp+arg_8]
xor     ebx, ebx
cmp     eax, ebx
jnz     short loc_1000993d
mov     eax, 80004003h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     edi, 8007000eh
push    28h
mov     [eax], ebx
mov     [ebp+var_14], edi
mov     [ebp+var_4], ebx
call    ??2@yapaxi@z
add     esp, 4
cmp     eax, ebx
jz      short loc_1000997c
mov     [eax+4], ebx
xor     ecx, ecx
mov     [eax+8], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+18h], ecx
mov     [eax+1ch], ecx
mov     [eax+20h], cl
mov     dword ptr [eax], offset ??_7?$ccomobjectcached@vccomclassfactory@atl@@@atl@@6b@
mov     esi, eax
jmp     short loc_1000997e
xor     esi, esi
mov     [ebp+var_4], 0ffffffffh
cmp     esi, ebx
jz      short loc_100099ed
mov     eax, [ebp+arg_0]
xor     edi, edi
push    edi
lea     ebx, [esi+8]
push    ebx
mov     [esi+24h], eax
call    ds:initializecriticalsectionandspincount
test    eax, eax
jnz     short loc_100099ba
call    ds:getlasterror
test    eax, eax
jle     short loc_100099b4
and     eax, 0ffffh
or      eax, 80070000h
mov     edi, eax
test    edi, edi
js      short loc_100099d7
mov     byte ptr [ebx+18h], 1
test    edi, edi
js      short loc_100099d7
mov     edx, [ebp+arg_8]
mov     eax, [ebp+arg_4]
mov     ecx, [esi]
mov     ecx, [ecx]
push    edx
push    eax
push    esi
call    ecx
mov     edi, eax
test    edi, edi
jz      short loc_100099ed
mov     edx, [esi]
mov     eax, [edx+14h]
push    1
mov     ecx, esi
call    eax
jmp     short loc_100099ed
mov     eax, offset loc_100099ea
retn
mov     edi, [ebp+var_14]
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     eax, [edi+4]
mov     ebx, [eax+4]
cmp     byte ptr [ebx+15h], 0
mov     esi, ebx
jnz     short loc_10009a41
mov     ecx, [esi+8]
push    ecx
mov     ecx, edi
call    sub_10009340
mov     esi, [esi]
push    ebx
call    ??3@yaxpax@z
add     esp, 4
cmp     byte ptr [esi+15h], 0
mov     ebx, esi
jz      short loc_10009a23
mov     eax, [edi+4]
mov     [eax+4], eax
mov     eax, [edi+4]
mov     [eax], eax
mov     eax, [edi+4]
mov     [eax+8], eax
mov     dword ptr [edi+8], 0
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ebp+arg_8]
push    esi
mov     esi, ecx
mov     eax, [esi+4]
mov     ecx, [ebp+arg_4]
cmp     ecx, [eax]
jnz     short loc_10009a90
cmp     edx, eax
jnz     short loc_10009a90
mov     ecx, esi
call    sub_10009a10
mov     eax, [esi+4]
mov     ecx, [eax]
mov     eax, [ebp+arg_0]
mov     [eax], ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
cmp     ecx, edx
jz      short loc_10009af2
cmp     byte ptr [ecx+15h], 0
mov     edx, ecx
jnz     short loc_10009ade
mov     eax, [ecx+8]
cmp     byte ptr [eax+15h], 0
jnz     short loc_10009abf
mov     ecx, eax
mov     eax, [ecx]
cmp     byte ptr [eax+15h], 0
jnz     short loc_10009aba
nop
mov     ecx, eax
mov     eax, [ecx]
cmp     byte ptr [eax+15h], 0
jz      short loc_10009ab0
mov     [ebp+arg_4], ecx
jmp     short loc_10009ade
mov     eax, [ecx+4]
cmp     byte ptr [eax+15h], 0
jnz     short loc_10009adb
cmp     ecx, [eax+8]
jnz     short loc_10009adb
mov     ecx, eax
mov     [ebp+arg_4], ecx
mov     eax, [eax+4]
cmp     byte ptr [eax+15h], 0
jz      short loc_10009ac8
mov     [ebp+arg_4], eax
push    edx
lea     edx, [ebp+var_4]
push    edx
mov     ecx, esi
call    sub_10009380
mov     ecx, [ebp+arg_4]
cmp     ecx, [ebp+arg_8]
jnz     short loc_10009a94
mov     eax, [ebp+arg_0]
mov     [eax], ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, ecx
mov     ecx, [ebx+4]
mov     eax, [ecx+4]
cmp     byte ptr [eax+15h], 0
push    esi
mov     esi, ecx
mov     cl, 1
push    edi
mov     [ebp+var_4], cl
jnz     short loc_10009b4f
movzx   edi, word ptr [edx+0ch]
cmp     byte ptr [ebp+arg_8], 0
mov     esi, eax
jz      short loc_10009b34
cmp     [eax+0ch], di
setnb   cl
jmp     short loc_10009b3b
cmp     di, [eax+0ch]
setb    cl
mov     [ebp+var_4], cl
test    cl, cl
jz      short loc_10009b46
mov     eax, [eax]
jmp     short loc_10009b49
mov     eax, [eax+8]
cmp     byte ptr [eax+15h], 0
jz      short loc_10009b23
mov     edi, esi
mov     [ebp+arg_8], edi
test    cl, cl
jz      short loc_10009b8d
mov     eax, [ebx+4]
lea     ecx, [ebp+arg_8]
cmp     esi, [eax]
jnz     short loc_10009b82
push    edx
push    esi
push    1
push    ecx
mov     ecx, ebx
call    sub_10009650
mov     edx, [eax]
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     [eax], edx
mov     byte ptr [eax+4], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
call    sub_10008510
mov     edi, [ebp+arg_8]
mov     edx, [ebp+arg_4]
mov     ax, [edi+0ch]
push    edx
cmp     ax, [edx+0ch]
jnb     short loc_10009bbc
mov     ecx, dword ptr [ebp+var_4]
push    esi
push    ecx
lea     edx, [ebp+arg_8]
push    edx
mov     ecx, ebx
call    sub_10009650
mov     ecx, [eax]
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     [eax], ecx
mov     byte ptr [eax+4], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
call    ??3@yaxpax@z
mov     eax, [ebp+arg_0]
add     esp, 4
mov     [eax], edi
pop     edi
pop     esi
mov     byte ptr [eax+4], 0
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ecx+8]
push    ebx
push    esi
push    edi
cmp     eax, 6666665h
jb      short loc_10009c11
mov     esi, [ebp+arg_c]
mov     eax, [esi+30h]
push    eax
call    ds:sysfreestring
push    esi
call    ??3@yaxpax@z
add     esp, 4
push    offset amapsetttoolong
call    ds:?_xlength_error@std@@yaxpbd@z
mov     edi, [ebp+arg_c]
inc     eax
mov     [ecx+8], eax
mov     eax, [ebp+arg_8]
mov     [edi+4], eax
mov     edx, [ecx+4]
xor     bl, bl
cmp     eax, edx
jnz     short loc_10009c37
mov     [edx+4], edi
mov     edx, [ecx+4]
mov     [edx], edi
mov     eax, [ecx+4]
mov     [eax+8], edi
jmp     short loc_10009c57
cmp     [ebp+arg_4], bl
jz      short loc_10009c49
mov     [eax], edi
mov     edx, [ecx+4]
cmp     eax, [edx]
jnz     short loc_10009c57
mov     [edx], edi
jmp     short loc_10009c57
mov     [eax+8], edi
mov     edx, [ecx+4]
cmp     eax, [edx+8]
jnz     short loc_10009c57
mov     [edx+8], edi
mov     edx, [edi+4]
mov     eax, edi
cmp     [edx+38h], bl
jnz     loc_10009df4
mov     edx, [eax+4]
mov     esi, [edx+4]
cmp     edx, [esi]
jnz     loc_10009d34
mov     esi, [esi+8]
cmp     [esi+38h], bl
jnz     short loc_10009c97
mov     byte ptr [edx+38h], 1
mov     byte ptr [esi+38h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+38h], bl
mov     eax, [eax+4]
mov     eax, [eax+4]
jmp     loc_10009de8
cmp     eax, [edx+8]
jnz     short loc_10009cd6
mov     eax, edx
mov     edx, [eax+8]
mov     esi, [edx]
mov     [eax+8], esi
mov     esi, [edx]
cmp     [esi+39h], bl
jnz     short loc_10009cb0
mov     [esi+4], eax
mov     esi, [eax+4]
mov     [edx+4], esi
mov     esi, [ecx+4]
cmp     eax, [esi+4]
jnz     short loc_10009cc3
mov     [esi+4], edx
jmp     short loc_10009cd1
mov     esi, [eax+4]
cmp     eax, [esi]
jnz     short loc_10009cce
mov     [esi], edx
jmp     short loc_10009cd1
mov     [esi+8], edx
mov     [edx], eax
mov     [eax+4], edx
mov     edx, [eax+4]
mov     byte ptr [edx+38h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+38h], bl
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     esi, [edx]
mov     edi, [esi+8]
mov     [edx], edi
mov     edi, [esi+8]
cmp     [edi+39h], bl
jnz     short loc_10009cfe
mov     [edi+4], edx
mov     edi, [edx+4]
mov     [esi+4], edi
mov     edi, [ecx+4]
cmp     edx, [edi+4]
jnz     short loc_10009d17
mov     [edi+4], esi
mov     [esi+8], edx
jmp     loc_10009de2
mov     edi, [edx+4]
cmp     edx, [edi+8]
jnz     short loc_10009d2a
mov     [edi+8], esi
mov     [esi+8], edx
jmp     loc_10009de2
mov     [edi], esi
mov     [esi+8], edx
jmp     loc_10009de2
mov     esi, [esi]
cmp     [esi+38h], bl
jnz     short loc_10009d57
mov     byte ptr [edx+38h], 1
mov     byte ptr [esi+38h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+38h], bl
mov     eax, [eax+4]
mov     eax, [eax+4]
jmp     loc_10009de8
cmp     eax, [edx]
jnz     short loc_10009d97
mov     eax, edx
mov     edx, [eax]
mov     esi, [edx+8]
mov     [eax], esi
mov     esi, [edx+8]
cmp     [esi+39h], bl
jnz     short loc_10009d6f
mov     [esi+4], eax
mov     esi, [eax+4]
mov     [edx+4], esi
mov     esi, [ecx+4]
cmp     eax, [esi+4]
jnz     short loc_10009d82
mov     [esi+4], edx
jmp     short loc_10009d91
mov     esi, [eax+4]
cmp     eax, [esi+8]
jnz     short loc_10009d8f
mov     [esi+8], edx
jmp     short loc_10009d91
mov     [esi], edx
mov     [edx+8], eax
mov     [eax+4], edx
mov     edx, [eax+4]
mov     byte ptr [edx+38h], 1
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     [edx+38h], bl
mov     edx, [eax+4]
mov     edx, [edx+4]
mov     esi, [edx+8]
mov     edi, [esi]
mov     [edx+8], edi
mov     edi, [esi]
cmp     [edi+39h], bl
jnz     short loc_10009dbf
mov     [edi+4], edx
mov     edi, [edx+4]
mov     [esi+4], edi
mov     edi, [ecx+4]
cmp     edx, [edi+4]
jnz     short loc_10009dd2
mov     [edi+4], esi
jmp     short loc_10009de0
mov     edi, [edx+4]
cmp     edx, [edi]
jnz     short loc_10009ddd
mov     [edi], esi
jmp     short loc_10009de0
mov     [edi+8], esi
mov     [esi], edx
mov     edi, [ebp+arg_c]
mov     [edx+4], esi
mov     edx, [eax+4]
cmp     [edx+38h], bl
jz      loc_10009c65
mov     eax, [ecx+4]
mov     ecx, [eax+4]
mov     eax, [ebp+arg_0]
mov     [eax], edi
pop     edi
pop     esi
mov     byte ptr [ecx+38h], 1
pop     ebx
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_0]
push    edi
mov     edi, [ecx+10h]
cmp     edi, ebx
jnb     short loc_10009e30
push    offset ainvalidstringp
call    ds:?_xout_of_range@std@@yaxpbd@z
mov     eax, [ebp+arg_8]
sub     edi, ebx
cmp     eax, edi
jnb     short loc_10009e3b
mov     edi, eax
cmp     esi, ecx
jnz     short loc_10009e5e
push    0ffffffffh
add     edi, ebx
push    edi
mov     ecx, esi
call    sub_100088d0
push    ebx
push    0
mov     ecx, esi
call    sub_100088d0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
cmp     edi, 0fffffffeh
jbe     short loc_10009e6e
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
mov     eax, [esi+14h]
cmp     eax, edi
jnb     short loc_10009e9d
mov     eax, [esi+10h]
push    eax
push    edi
mov     ecx, esi
call    sub_10008da0
mov     ecx, [ebp+arg_0]
test    edi, edi
jz      short loc_10009ef0
mov     eax, 10h
cmp     [ecx+14h], eax
jb      short loc_10009e94
mov     ecx, [ecx]
cmp     [esi+14h], eax
jb      short loc_10009ec3
mov     eax, [esi]
jmp     short loc_10009ec5
test    edi, edi
jnz     short loc_10009e88
mov     [esi+10h], edi
cmp     eax, 10h
jb      short loc_10009eb7
mov     eax, [esi]
pop     edi
mov     byte ptr [eax], 0
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
pop     edi
mov     eax, esi
pop     esi
mov     byte ptr [eax], 0
pop     ebx
pop     ebp
retn    0ch
mov     eax, esi
push    edi
add     ecx, ebx
push    ecx
push    eax
call    memcpy
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], edi
jb      short loc_10009eea
mov     eax, [esi]
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     eax, esi
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    ebx
push    esi
mov     esi, ecx
mov     eax, [esi+8]
mov     ecx, [eax]
push    edi
mov     [esi+30h], ecx
cmp     ecx, eax
jz      loc_10009f94
mov     eax, [esi+30h]
mov     edi, [eax+10h]
xor     ebx, ebx
cmp     edi, ebx
jz      short loc_10009f42
cmp     [edi+0ah], bl
jz      short loc_10009f39
mov     eax, [edi+6]
cmp     eax, ebx
jz      short loc_10009f39
push    eax
call    ??_v@yaxpax@z
add     esp, 4
mov     [edi+6], ebx
push    edi
call    ??3@yaxpax@z
add     esp, 4
mov     ecx, [esi+30h]
mov     [ecx+10h], ebx
mov     eax, [esi+30h]
cmp     [eax+15h], bl
jnz     short loc_10009f8c
mov     ecx, [eax+8]
cmp     [ecx+15h], bl
jnz     short loc_10009f6e
mov     eax, [ecx]
cmp     [eax+15h], bl
jnz     short loc_10009f69
nop
mov     ecx, eax
mov     eax, [ecx]
cmp     [eax+15h], bl
jz      short loc_10009f60
mov     [esi+30h], ecx
jmp     short loc_10009f8c
mov     eax, [eax+4]
cmp     [eax+15h], bl
jnz     short loc_10009f89
mov     edx, [esi+30h]
cmp     edx, [eax+8]
jnz     short loc_10009f89
mov     [esi+30h], eax
mov     eax, [eax+4]
cmp     [eax+15h], bl
jz      short loc_10009f76
mov     [esi+30h], eax
mov     ecx, [esi+30h]
cmp     ecx, [esi+8]
jnz     short loc_10009f15
mov     edx, [esi+8]
mov     ebx, [edx+4]
cmp     byte ptr [ebx+15h], 0
lea     edi, [esi+4]
mov     esi, ebx
jnz     short loc_10009fc3
mov     eax, [esi+8]
push    eax
mov     ecx, edi
call    sub_10009340
mov     esi, [esi]
push    ebx
call    ??3@yaxpax@z
add     esp, 4
cmp     byte ptr [esi+15h], 0
mov     ebx, esi
jz      short loc_10009fa5
mov     eax, [edi+4]
mov     [eax+4], eax
mov     eax, [edi+4]
mov     [eax], eax
mov     eax, [edi+4]
mov     [eax+8], eax
mov     dword ptr [edi+8], 0
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
mov     ebx, [ebp+arg_4]
cmp     byte ptr [ebx+39h], 0
push    esi
push    edi
mov     [ebp+var_4], ecx
jz      short loc_1000a000
push    offset ainvalidmapsett
call    ds:?_xout_of_range@std@@yaxpbd@z
lea     ecx, [ebp+arg_4]
mov     [ebp+var_8], ebx
call    sub_100084a0
mov     ecx, [ebx]
cmp     byte ptr [ecx+39h], 0
jz      short loc_1000a018
mov     edi, [ebx+8]
jmp     short loc_1000a02f
mov     eax, [ebx+8]
cmp     byte ptr [eax+39h], 0
jz      short loc_1000a025
mov     edi, ecx
jmp     short loc_1000a02f
mov     eax, [ebp+arg_4]
mov     edi, [eax+8]
cmp     eax, ebx
jnz     short loc_1000a0a1
cmp     byte ptr [edi+39h], 0
mov     esi, [ebx+4]
jnz     short loc_1000a03b
mov     [edi+4], esi
mov     ecx, [ebp+var_4]
mov     eax, [ecx+4]
cmp     [eax+4], ebx
jnz     short loc_1000a04b
mov     [eax+4], edi
jmp     short loc_1000a056
cmp     [esi], ebx
jnz     short loc_1000a053
mov     [esi], edi
jmp     short loc_1000a056
mov     [esi+8], edi
mov     eax, [ecx+4]
cmp     [eax], ebx
jnz     short loc_1000a078
cmp     byte ptr [edi+39h], 0
jz      short loc_1000a067
mov     eax, esi
jmp     short loc_1000a073
push    edi
call    sub_10008450
mov     ecx, [ebp+var_4]
add     esp, 4
mov     edx, [ecx+4]
mov     [edx], eax
mov     ecx, [ecx+4]
mov     [ebp+var_c], ecx
cmp     [ecx+8], ebx
jnz     short loc_1000a0fb
cmp     byte ptr [edi+39h], 0
jz      short loc_1000a090
mov     eax, esi
mov     [ecx+8], eax
jmp     short loc_1000a0fb
push    edi
call    sub_10008430
mov     ecx, [ebp+var_c]
add     esp, 4
mov     [ecx+8], eax
jmp     short loc_1000a0fb
mov     [ecx+4], eax
mov     ecx, [ebx]
mov     [eax], ecx
cmp     eax, [ebx+8]
jnz     short loc_1000a0b1
mov     esi, eax
jmp     short loc_1000a0cb
cmp     byte ptr [edi+39h], 0
mov     esi, [eax+4]
jnz     short loc_1000a0bd
mov     [edi+4], esi
mov     [esi], edi
mov     ecx, [ebx+8]
mov     [eax+8], ecx
mov     edx, [ebx+8]
mov     [edx+4], eax
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+4]
cmp     [ecx+4], ebx
jnz     short loc_1000a0db
mov     [ecx+4], eax
jmp     short loc_1000a0e9
mov     ecx, [ebx+4]
cmp     [ecx], ebx
jnz     short loc_1000a0e6
mov     [ecx], eax
jmp     short loc_1000a0e9
mov     [ecx+8], eax
mov     edx, [ebx+4]
mov     [eax+4], edx
mov     dl, [ebx+38h]
mov     cl, [eax+38h]
mov     [eax+38h], dl
mov     [ebx+38h], cl
mov     eax, [ebp+var_8]
mov     bl, 1
cmp     [eax+38h], bl
jnz     loc_1000a20b
mov     ecx, [ebp+var_4]
mov     edx, [ecx+4]
cmp     edi, [edx+4]
jz      loc_1000a208
jmp     short loc_1000a120
cmp     [edi+38h], bl
jnz     loc_1000a208
mov     eax, [esi]
cmp     edi, eax
jnz     short loc_1000a194
mov     eax, [esi+8]
cmp     byte ptr [eax+38h], 0
jnz     short loc_1000a14b
mov     [eax+38h], bl
push    esi
mov     byte ptr [esi+38h], 0
call    sub_10008be0
mov     eax, [esi+8]
mov     ecx, [ebp+var_4]
cmp     byte ptr [eax+39h], 0
jnz     short loc_1000a1c5
mov     edx, [eax]
cmp     [edx+38h], bl
jnz     short loc_1000a160
mov     edx, [eax+8]
cmp     [edx+38h], bl
jz      short loc_1000a1c1
mov     edx, [eax+8]
cmp     [edx+38h], bl
jnz     short loc_1000a17d
mov     edx, [eax]
mov     [edx+38h], bl
push    eax
mov     byte ptr [eax+38h], 0
call    sub_100086b0
mov     eax, [esi+8]
mov     ecx, [ebp+var_4]
mov     dl, [esi+38h]
mov     [eax+38h], dl
mov     [esi+38h], bl
mov     eax, [eax+8]
push    esi
mov     [eax+38h], bl
call    sub_10008be0
jmp     short loc_1000a208
cmp     byte ptr [eax+38h], 0
jnz     short loc_1000a1ac
mov     [eax+38h], bl
push    esi
mov     byte ptr [esi+38h], 0
call    sub_100086b0
mov     eax, [esi]
mov     ecx, [ebp+var_4]
cmp     byte ptr [eax+39h], 0
jnz     short loc_1000a1c5
mov     edx, [eax+8]
cmp     [edx+38h], bl
jnz     short loc_1000a1d8
mov     edx, [eax]
cmp     [edx+38h], bl
jnz     short loc_1000a1d8
mov     byte ptr [eax+38h], 0
mov     eax, [ecx+4]
mov     edi, esi
mov     esi, [esi+4]
cmp     edi, [eax+4]
jnz     loc_1000a120
jmp     short loc_1000a208
mov     edx, [eax]
cmp     [edx+38h], bl
jnz     short loc_1000a1f4
mov     edx, [eax+8]
mov     [edx+38h], bl
push    eax
mov     byte ptr [eax+38h], 0
call    sub_10008be0
mov     eax, [esi]
mov     ecx, [ebp+var_4]
mov     dl, [esi+38h]
mov     [eax+38h], dl
mov     [esi+38h], bl
mov     eax, [eax]
push    esi
mov     [eax+38h], bl
call    sub_100086b0
mov     [edi+38h], bl
mov     ecx, [ebp+var_8]
mov     edx, [ecx+30h]
push    edx
call    ds:sysfreestring
mov     eax, [ebp+var_8]
push    eax
call    ??3@yaxpax@z
mov     ecx, [ebp+var_4]
mov     eax, [ecx+8]
add     esp, 4
pop     edi
pop     esi
pop     ebx
test    eax, eax
jz      short loc_1000a235
dec     eax
mov     [ecx+8], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     [eax], ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
cmp     byte ptr [edi+39h], 0
mov     ebx, ecx
mov     esi, edi
jnz     short loc_1000a28b
mov     eax, [esi+8]
push    eax
mov     ecx, ebx
call    sub_1000a250
mov     ecx, [edi+30h]
mov     esi, [esi]
push    ecx
call    ds:sysfreestring
push    edi
call    ??3@yaxpax@z
add     esp, 4
cmp     byte ptr [esi+39h], 0
mov     edi, esi
jz      short loc_1000a263
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_4]
mov     edx, ecx
mov     ecx, [edx+4]
mov     eax, [ecx+4]
cmp     byte ptr [eax+39h], 0
push    esi
push    edi
mov     edi, ecx
mov     cl, 1
mov     [ebp+var_4], edx
mov     byte ptr [ebp+arg_4], cl
jnz     short loc_1000a31e
cmp     byte ptr [ebp+arg_8], 0
mov     edi, eax
jz      short loc_1000a2f5
mov     ecx, [eax+14h]
cmp     ecx, [ebx+14h]
ja      short loc_1000a2e3
jb      short loc_1000a2dc
mov     ecx, [eax+10h]
cmp     ecx, [ebx+10h]
jnb     short loc_1000a2e3
mov     ecx, 1
jmp     short loc_1000a2e5
xor     ecx, ecx
test    cl, cl
setz    cl
mov     byte ptr [ebp+arg_4], cl
test    cl, cl
jz      short loc_1000a315
mov     eax, [eax]
jmp     short loc_1000a318
mov     ecx, [ebx+14h]
cmp     ecx, [eax+14h]
ja      short loc_1000a310
jb      short loc_1000a307
mov     ecx, [ebx+10h]
cmp     ecx, [eax+10h]
jnb     short loc_1000a310
mov     eax, [eax]
mov     cl, 1
mov     byte ptr [ebp+arg_4], cl
jmp     short loc_1000a318
xor     cl, cl
mov     byte ptr [ebp+arg_4], cl
mov     eax, [eax+8]
cmp     byte ptr [eax+39h], 0
jz      short loc_1000a2c2
mov     esi, edi
mov     [ebp+arg_8], esi
test    cl, cl
jz      short loc_1000a35c
mov     eax, [edx+4]
lea     ecx, [ebp+arg_8]
cmp     edi, [eax]
jnz     short loc_1000a351
push    ebx
push    edi
push    1
push    ecx
mov     ecx, edx
call    sub_10009be0
mov     edx, [eax]
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     [eax], edx
mov     byte ptr [eax+4], 1
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
call    sub_10008570
mov     esi, [ebp+arg_8]
mov     edx, [ebp+var_4]
mov     eax, [esi+14h]
cmp     eax, [ebx+14h]
ja      short loc_1000a379
jb      short loc_1000a36e
mov     ecx, [esi+10h]
cmp     ecx, [ebx+10h]
jnb     short loc_1000a379
mov     eax, [ebp+arg_4]
push    ebx
push    edi
push    eax
lea     ecx, [ebp+arg_8]
jmp     short loc_1000a335
mov     eax, [ebx+30h]
push    eax
call    ds:sysfreestring
push    ebx
call    ??3@yaxpax@z
mov     eax, [ebp+arg_0]
add     esp, 4
pop     edi
mov     [eax], esi
pop     esi
mov     byte ptr [eax+4], 0
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
push    18h
mov     esi, ecx
call    ??2@yapaxi@z
xor     edx, edx
add     esp, 4
cmp     eax, edx
jz      short loc_1000a3eb
mov     ecx, [esi+4]
mov     [eax], ecx
mov     ecx, [esi+4]
mov     [eax+4], ecx
mov     ecx, [esi+4]
mov     [eax+8], ecx
lea     ecx, [eax+0ch]
mov     [eax+14h], dx
cmp     ecx, edx
jz      short loc_1000a3e4
mov     edx, [ebp+arg_0]
mov     si, [edx]
mov     [ecx], si
mov     edx, [edx+4]
mov     [ecx+4], edx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
lea     eax, [ebp+arg_0]
push    eax
lea     ecx, [ebp+pexceptionobject]
mov     [ebp+arg_0], edx
call    ds:??0exception@std@@qae@abqbd@z
push    offset __ti2?avbad_alloc@std@@
lea     ecx, [ebp+pexceptionobject]
push    ecx
mov     [ebp+pexceptionobject], offset ??_7bad_alloc@std@@6b@
call    _cxxthrowexception
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+src]
push    esi
mov     esi, ecx
test    ebx, ebx
jz      short loc_1000a487
mov     ecx, [esi+14h]
cmp     ecx, 10h
jb      short loc_1000a43a
mov     eax, [esi]
jmp     short loc_1000a43c
mov     eax, esi
cmp     ebx, eax
jb      short loc_1000a487
cmp     ecx, 10h
jb      short loc_1000a449
mov     eax, [esi]
jmp     short loc_1000a44b
mov     eax, esi
mov     edx, [esi+10h]
add     edx, eax
cmp     edx, ebx
jbe     short loc_1000a487
cmp     ecx, 10h
jb      short loc_1000a470
mov     eax, [esi]
mov     ecx, [ebp+size]
push    ecx
sub     ebx, eax
push    ebx
push    esi
mov     ecx, esi
call    sub_10009e10
pop     esi
pop     ebx
pop     ebp
retn    8
mov     ecx, [ebp+size]
mov     eax, esi
push    ecx
sub     ebx, eax
push    ebx
push    esi
mov     ecx, esi
call    sub_10009e10
pop     esi
pop     ebx
pop     ebp
retn    8
push    edi
mov     edi, [ebp+size]
cmp     edi, 0fffffffeh
jbe     short loc_1000a49b
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
mov     eax, [esi+14h]
cmp     eax, edi
jnb     short loc_1000a4bc
mov     edx, [esi+10h]
push    edx
push    edi
mov     ecx, esi
call    sub_10008da0
test    edi, edi
jz      short loc_1000a50d
cmp     dword ptr [esi+14h], 10h
jb      short loc_1000a4e2
mov     eax, [esi]
jmp     short loc_1000a4e4
test    edi, edi
jnz     short loc_1000a4b2
mov     [esi+10h], edi
cmp     eax, 10h
jb      short loc_1000a4d6
mov     eax, [esi]
pop     edi
mov     byte ptr [eax], 0
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
pop     edi
mov     eax, esi
pop     esi
mov     byte ptr [eax], 0
pop     ebx
pop     ebp
retn    8
mov     eax, esi
push    edi
push    ebx
push    eax
call    memcpy
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], edi
jb      short loc_1000a507
mov     eax, [esi]
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
mov     eax, esi
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, dword_100137dc
push    0
push    eax
push    66h
push    ecx
call    sub_10007db0
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000a540
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
call    ds:gettickcount
mov     ebx, eax
mov     eax, [esi+28h]
add     eax, 2bf20h
cmp     eax, ebx
ja      short loc_1000a5d9
push    esi
mov     [ebp+var_1c], esi
call    ds:entercriticalsection
mov     [ebp+var_18], 1
mov     ecx, [esi+1ch]
mov     eax, [ecx]
mov     [ebp+var_4], 0
mov     [ebp+var_10], eax
cmp     eax, ecx
jz      short loc_1000a5d2
mov     ecx, [eax+18h]
add     ecx, 2bf20h
cmp     ecx, ebx
lea     ecx, [ebp+var_10]
jnb     short loc_1000a5c5
mov     edi, eax
call    sub_100084a0
push    edi
lea     edx, [ebp+var_14]
push    edx
lea     ecx, [esi+18h]
call    sub_10009fe0
jmp     short loc_1000a5ca
call    sub_100084a0
mov     eax, [ebp+var_10]
cmp     eax, [esi+1ch]
jnz     short loc_1000a59f
push    esi
call    ds:leavecriticalsection
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ebp+arg_8]
push    esi
mov     esi, ecx
mov     eax, [esi+4]
mov     ecx, [ebp+arg_4]
cmp     ecx, [eax]
jnz     short loc_1000a63c
cmp     edx, eax
jnz     short loc_1000a63c
mov     eax, [eax+4]
push    eax
mov     ecx, esi
call    sub_1000a250
mov     eax, [esi+4]
mov     [eax+4], eax
mov     eax, [esi+4]
mov     [eax], eax
mov     eax, [esi+4]
mov     [eax+8], eax
mov     ecx, [esi+4]
mov     eax, [ebp+arg_0]
mov     dword ptr [esi+8], 0
mov     edx, [ecx]
mov     [eax], edx
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
cmp     ecx, edx
jz      short loc_1000a6a2
cmp     byte ptr [ecx+39h], 0
mov     edx, ecx
jnz     short loc_1000a68e
mov     eax, [ecx+8]
cmp     byte ptr [eax+39h], 0
jnz     short loc_1000a66f
mov     ecx, eax
mov     eax, [ecx]
cmp     byte ptr [eax+39h], 0
jnz     short loc_1000a66a
jmp     short loc_1000a660
mov     ecx, eax
mov     eax, [ecx]
cmp     byte ptr [eax+39h], 0
jz      short loc_1000a660
mov     [ebp+arg_4], ecx
jmp     short loc_1000a68e
mov     eax, [ecx+4]
cmp     byte ptr [eax+39h], 0
jnz     short loc_1000a68b
cmp     ecx, [eax+8]
jnz     short loc_1000a68b
mov     ecx, eax
mov     [ebp+arg_4], ecx
mov     eax, [eax+4]
cmp     byte ptr [eax+39h], 0
jz      short loc_1000a678
mov     [ebp+arg_4], eax
push    edx
lea     eax, [ebp+var_4]
push    eax
mov     ecx, esi
call    sub_10009fe0
mov     ecx, [ebp+arg_4]
cmp     ecx, [ebp+arg_8]
jnz     short loc_1000a640
mov     eax, [ebp+arg_0]
mov     [eax], ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000a6b0
mov     eax, large fs:0
push    eax
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     edi, ecx
push    40h
call    ??2@yapaxi@z
mov     esi, eax
xor     eax, eax
add     esp, 4
mov     [ebp+var_14], esi
cmp     esi, eax
jz      short loc_1000a753
mov     ecx, [edi+4]
mov     [esi], ecx
mov     edx, [edi+4]
mov     [esi+4], edx
mov     ecx, [edi+4]
mov     [esi+8], ecx
lea     ecx, [esi+10h]
mov     [esi+38h], ax
mov     [ebp+var_4], eax
mov     [ebp+var_18], ecx
mov     [ebp+var_1c], ecx
mov     byte ptr [ebp+var_4], 1
cmp     ecx, eax
jz      short loc_1000a728
mov     eax, [ebp+arg_0]
lea     edx, [eax+10h]
push    edx
push    eax
call    sub_10008d20
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [ebp+var_14]
push    eax
call    ??3@yaxpax@z
add     esp, 4
xor     eax, eax
push    eax
push    eax
call    _cxxthrowexception
lea     ecx, [ebp+arg_0]
push    ecx
lea     ecx, [ebp+pexceptionobject]
mov     [ebp+arg_0], eax
call    ds:??0exception@std@@qae@abqbd@z
push    offset __ti2?avbad_alloc@std@@
lea     edx, [ebp+pexceptionobject]
push    edx
mov     [ebp+pexceptionobject], offset ??_7bad_alloc@std@@6b@
call    _cxxthrowexception
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     esi, ecx
cmp     byte ptr [esi+20h], 0
push    edi
mov     edi, [ebp+arg_0]
jz      short loc_1000a7ae
mov     eax, [esi+1ch]
cmp     eax, edi
jz      short loc_1000a7ae
push    eax
call    ??_v@yaxpax@z
add     esp, 4
xor     ebx, ebx
mov     [esi+1ch], ebx
mov     [esi+20h], bl
jmp     short loc_1000a7b0
xor     ebx, ebx
mov     eax, [ebp+arg_4]
mov     ecx, esi
mov     [esi+1ch], edi
mov     [esi+18h], edi
mov     [esi+24h], ebx
mov     [esi+28h], eax
mov     [esi+2ch], eax
call    sub_10009f00
mov     edi, 4
mov     [ebp+arg_0], ebx
cmp     [esi+2ch], edi
jb      loc_1000a965
mov     eax, [esi+18h]
mov     eax, [eax]
push    eax
call    ds:ntohl
mov     ecx, eax
mov     eax, [esi+2ch]
mov     [ebp+var_4], ecx
cmp     eax, edi
ja      short loc_1000a800
mov     edx, [esi+1ch]
mov     [esi+2ch], ebx
mov     [esi+18h], edx
mov     [esi+24h], ebx
jmp     short loc_1000a80c
add     [esi+18h], edi
add     [esi+24h], edi
add     eax, 0fffffffch
mov     [esi+2ch], eax
mov     [ebp+arg_4], ebx
cmp     ecx, ebx
jbe     loc_1000a8f0
cmp     [esi+2ch], ebx
jbe     loc_1000a8f0
mov     edi, 2
cmp     [esi+2ch], edi
jb      loc_1000a965
mov     eax, [esi+18h]
movzx   eax, word ptr [eax]
push    eax
call    ds:ntohs
movzx   ebx, ax
mov     eax, [esi+2ch]
cmp     eax, edi
ja      short loc_1000a855
mov     ecx, [esi+1ch]
xor     edi, edi
mov     [esi+2ch], edi
mov     [esi+18h], ecx
mov     [esi+24h], edi
jmp     short loc_1000a863
add     [esi+18h], edi
add     [esi+24h], edi
add     eax, 0fffffffeh
mov     [esi+2ch], eax
xor     edi, edi
push    0bh
call    ??2@yapaxi@z
add     esp, 4
cmp     eax, edi
jz      short loc_1000a882
mov     [eax+2], edi
mov     [eax+6], edi
mov     word ptr [eax], 100h
mov     byte ptr [eax+0ah], 0
mov     edi, eax
mov     eax, [esi+2ch]
mov     ecx, [esi+18h]
lea     edx, [ebp+arg_0]
push    edx
push    eax
push    ecx
mov     ecx, edi
call    sub_10008f10
test    al, al
jz      loc_1000a93b
push    0
lea     eax, [ebp+var_c]
push    eax
lea     ecx, [esi+4]
mov     [ebp+var_c], bx
mov     [ebp+var_8], edi
call    sub_1000a3a0
push    eax
lea     ecx, [ebp+var_14]
push    ecx
lea     ecx, [esi+4]
call    sub_10009b00
mov     edx, [esi+18h]
mov     ecx, [ebp+arg_0]
add     edx, ecx
cmp     [esi+1ch], edx
ja      short loc_1000a8de
mov     eax, [esi+2ch]
cmp     ecx, eax
jg      short loc_1000a8de
add     [esi+24h], ecx
sub     eax, ecx
mov     [esi+18h], edx
mov     [esi+2ch], eax
mov     eax, [ebp+arg_4]
inc     eax
xor     ebx, ebx
mov     [ebp+arg_4], eax
cmp     eax, [ebp+var_4]
jb      loc_1000a817
mov     eax, [esi+8]
mov     ecx, [eax]
mov     eax, [ebp+arg_8]
mov     [esi+30h], ecx
cmp     eax, ebx
jz      short loc_1000a904
mov     edx, [esi+24h]
mov     [eax], edx
cmp     byte ptr [esi+20h], 0
jz      short loc_1000a921
mov     eax, [esi+1ch]
cmp     eax, ebx
jz      short loc_1000a921
push    eax
call    ??_v@yaxpax@z
add     esp, 4
mov     [esi+1ch], ebx
mov     byte ptr [esi+20h], 0
pop     edi
mov     [esi+1ch], ebx
mov     [esi+18h], ebx
mov     [esi+24h], ebx
mov     [esi+28h], ebx
mov     [esi+2ch], ebx
pop     esi
mov     al, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
test    edi, edi
jz      short loc_1000a965
cmp     byte ptr [edi+0ah], 0
jz      short loc_1000a95c
mov     eax, [edi+6]
test    eax, eax
jz      short loc_1000a95c
push    eax
call    ??_v@yaxpax@z
add     esp, 4
mov     dword ptr [edi+6], 0
push    edi
call    ??3@yaxpax@z
add     esp, 4
pop     edi
pop     esi
xor     al, al
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000aa60
mov     eax, large fs:0
push    eax
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
call    sub_1000a540
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     ebx, [eax+4]
mov     [ebp+var_28], ecx
mov     [ebp+var_24], ebx
call    ds:gettickcount
push    esi
mov     [ebp+var_20], eax
mov     [ebp+var_18], esi
call    ds:entercriticalsection
mov     [ebp+var_14], 1
lea     edx, [ebp+var_28]
push    edx
lea     ecx, [esi+18h]
mov     [ebp+var_4], 0
call    sub_10008710
mov     ecx, [esi+1ch]
mov     [ebp+arg_0], eax
cmp     eax, ecx
jz      short loc_1000a9f5
cmp     ebx, [eax+14h]
jb      short loc_1000a9f5
ja      short loc_1000a9f0
mov     edx, [ebp+var_28]
cmp     edx, [eax+10h]
jb      short loc_1000a9f5
lea     eax, [ebp+arg_0]
jmp     short loc_1000a9fb
mov     [ebp+var_10], ecx
lea     eax, [ebp+var_10]
mov     ebx, [eax]
cmp     ecx, ebx
jz      short loc_1000aa3d
mov     ecx, [ebp+arg_4]
lea     eax, [ebx+20h]
push    eax
call    sub_10008aa0
cmp     [ebp+arg_8], 0
jz      short loc_1000aa20
push    ebx
lea     ecx, [ebp+arg_8]
push    ecx
lea     ecx, [esi+18h]
call    sub_10009fe0
push    esi
call    ds:leavecriticalsection
mov     al, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    esi
call    ds:leavecriticalsection
xor     al, al
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000aa60
mov     eax, large fs:0
push    eax
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
call    sub_1000a540
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     ebx, [eax+4]
mov     [ebp+var_28], ecx
mov     [ebp+var_24], ebx
call    ds:gettickcount
push    esi
mov     [ebp+var_20], eax
mov     [ebp+var_18], esi
call    ds:entercriticalsection
mov     [ebp+var_14], 1
lea     edx, [ebp+var_28]
push    edx
lea     ecx, [esi+18h]
mov     [ebp+var_4], 0
call    sub_10008710
mov     edi, [esi+1ch]
mov     [ebp+arg_0], eax
cmp     eax, edi
jz      short loc_1000aae5
cmp     ebx, [eax+14h]
jb      short loc_1000aae5
ja      short loc_1000aae0
mov     ecx, [ebp+var_28]
cmp     ecx, [eax+10h]
jb      short loc_1000aae5
lea     eax, [ebp+arg_0]
jmp     short loc_1000aaeb
mov     [ebp+var_10], edi
lea     eax, [ebp+var_10]
mov     eax, [eax]
cmp     edi, eax
jz      short loc_1000ab1a
mov     edx, [ebp+arg_4]
push    edx
lea     ecx, [eax+20h]
call    sub_10008aa0
push    esi
call    ds:leavecriticalsection
mov     al, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    esi
call    ds:leavecriticalsection
xor     al, al
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001cc0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_10], esi
mov     eax, [esi+4]
mov     ecx, [eax]
push    eax
push    ecx
lea     eax, [ebp+var_14]
push    eax
mov     ecx, esi
mov     [ebp+var_4], 0
call    sub_10009a60
mov     ecx, [esi+4]
push    ecx
call    ??3@yaxpax@z
add     esp, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000aba0
mov     eax, large fs:0
push    eax
sub     esp, 18h
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+bstrstring], 0
mov     eax, [ebp+arg_0]
mov     esi, [ebp+psz]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_8]
mov     [ebp+var_24], eax
mov     eax, [ebp+arg_c]
mov     [ebp+var_4], 0
mov     [ebp+var_20], ecx
mov     [ebp+var_1c], edx
mov     [ebp+var_18], eax
test    esi, esi
jz      short loc_1000ac16
push    0
call    ds:sysfreestring
push    esi
call    ds:sysallocstring
mov     [ebp+bstrstring], eax
test    eax, eax
jnz     short loc_1000ac16
push    8007000eh
call    sub_100020c0
push    1
lea     ecx, [ebp+var_24]
push    ecx
lea     edx, [ebp+arg_0]
push    edx
lea     ecx, [edi+28h]
call    sub_1000aa60
test    al, al
jz      short loc_1000ac46
cmp     byte_10013062, 0
jz      short loc_1000ac6a
push    offset aclsptloginplug_1
push    offset acommon
push    offset asscacheupdates
jmp     short loc_1000ac5e
cmp     byte_10013062, 0
jz      short loc_1000ac6a
push    offset aclsptloginplug_1
push    offset acommon
push    offset asscacheupdatef
push    0
push    0
call    sub_100048c0
add     esp, 14h
mov     eax, [ebp+bstrstring]
push    eax
call    ds:sysfreestring
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    18h
push    esi
mov     esi, ecx
mov     eax, [esi+18h]
mov     ecx, [esi+4]
mov     edx, [esi+8]
push    eax
push    ecx
push    edx
call    ds:memmove
mov     eax, [esi+8]
add     esp, 0ch
mov     [esi+4], eax
mov     dword ptr [esi+10h], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, ecx
cmp     ebx, 400000h
jbe     short loc_1000acdb
pop     esi
or      eax, 0ffffffffh
pop     ebx
pop     ebp
retn    4
mov     edx, [esi+18h]
mov     ecx, [esi+10h]
lea     eax, [ecx+edx]
push    edi
mov     edi, [esi+14h]
add     eax, ebx
cmp     edi, eax
jnb     loc_1000ad78
cmp     ecx, ebx
jb      short loc_1000ad1e
mov     eax, [esi+4]
mov     ecx, [esi+8]
push    edx
push    eax
push    ecx
call    ds:memmove
mov     edx, [esi+8]
add     esp, 0ch
pop     edi
mov     [esi+4], edx
mov     dword ptr [esi+10h], 0
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn    4
cmp     edi, 80h
jnb     short loc_1000ad2b
mov     edi, 80h
cmp     edi, eax
jnb     short loc_1000ad36
nop
add     edi, edi
cmp     edi, eax
jb      short loc_1000ad30
mov     eax, [esi+8]
test    eax, eax
jz      short loc_1000ad43
cmp     byte ptr [esi+0ch], 0
jz      short loc_1000ad61
cmp     eax, [esi+4]
jz      short loc_1000ad4f
mov     ecx, esi
call    sub_1000ac90
mov     eax, [esi+4]
push    edi
push    eax
call    ds:realloc
add     esp, 8
test    eax, eax
jnz     short loc_1000ad6b
pop     edi
pop     esi
or      eax, 0ffffffffh
pop     ebx
pop     ebp
retn    4
mov     byte ptr [esi+0ch], 1
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+14h], edi
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
cmp     edi, 80h
jnb     short loc_1000ada8
mov     edi, 80h
mov     al, [esi+0ch]
xor     ebx, ebx
cmp     al, bl
jz      short loc_1000addb
cmp     [esi+14h], edi
jb      short loc_1000adcb
mov     eax, [esi+8]
pop     edi
mov     [esi+4], eax
mov     [esi+10h], ebx
mov     [esi+18h], ebx
pop     esi
mov     al, 1
pop     ebx
pop     ebp
retn    4
cmp     al, bl
jz      short loc_1000addb
mov     ecx, [esi+8]
push    ecx
call    ??_v@yaxpax@z
add     esp, 4
push    edi
call    ??_u@yapaxi@z
add     esp, 4
mov     [esi+8], eax
cmp     eax, ebx
jz      short loc_1000ae04
mov     [esi+14h], edi
pop     edi
mov     [esi+4], eax
mov     [esi+10h], ebx
mov     [esi+18h], ebx
mov     byte ptr [esi+0ch], 1
pop     esi
mov     al, 1
pop     ebx
pop     ebp
retn    4
pop     edi
pop     esi
xor     al, al
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+hostlong]
lea     eax, [edi+4]
push    eax
mov     esi, ecx
call    sub_1000acc0
test    eax, eax
jns     short loc_1000ae2f
pop     edi
xor     al, al
pop     esi
pop     ebp
retn    8
push    4
mov     ecx, esi
call    sub_1000acc0
test    eax, eax
js      short loc_1000ae50
push    edi
call    ds:htonl
mov     edx, [esi+18h]
mov     ecx, [esi+4]
mov     [ecx+edx], eax
add     dword ptr [esi+18h], 4
mov     ecx, [esi+4]
mov     eax, [ebp+src]
add     ecx, [esi+18h]
push    edi
push    eax
push    ecx
call    memcpy
add     esp, 0ch
add     [esi+18h], edi
pop     edi
mov     al, 1
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, ecx
mov     ebx, 1
push    ebx
mov     ecx, esi
call    sub_1000acc0
test    eax, eax
js      short loc_1000aef4
mov     eax, [esi+18h]
mov     ecx, [esi+4]
mov     dl, [edi]
mov     [eax+ecx], dl
add     [esi+18h], ebx
push    ebx
mov     ecx, esi
call    sub_1000acc0
test    eax, eax
js      short loc_1000aef4
mov     eax, [esi+18h]
mov     dl, [edi+1]
mov     ecx, [esi+4]
mov     [eax+ecx], dl
add     [esi+18h], ebx
movzx   eax, byte ptr [edi]
cmp     eax, 13h
ja      short loc_1000aefd
mov     ebx, size[eax*4]
test    ebx, ebx
jle     short loc_1000aefd
mov     edi, [edi+6]
push    ebx
mov     ecx, esi
call    sub_1000acc0
test    eax, eax
js      short loc_1000aef4
mov     eax, [esi+18h]
add     eax, [esi+4]
push    ebx
push    edi
push    eax
call    memcpy
add     esp, 0ch
add     [esi+18h], ebx
pop     edi
pop     esi
mov     al, 1
pop     ebx
pop     ebp
retn    4
pop     edi
pop     esi
xor     al, al
pop     ebx
pop     ebp
retn    4
mov     ecx, [edi+2]
mov     edx, [edi+6]
push    ecx
push    edx
mov     ecx, esi
call    sub_1000ae10
test    al, al
jz      short loc_1000aef4
pop     edi
pop     esi
mov     al, 1
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, [ebp+arg_4]
mov     esi, ecx
mov     [ebp+var_4], esi
test    edi, edi
jnz     short loc_1000af49
mov     eax, [esi+1ch]
lea     edi, [esi+14h]
mov     [edi+4], eax
mov     dword ptr [edi+10h], 0
mov     dword ptr [edi+18h], 0
mov     ecx, [edi+14h]
sub     ecx, [edi+18h]
jnz     short loc_1000af5d
push    80h
mov     ecx, edi
call    sub_1000acc0
mov     esi, [esi+0ch]
push    4
mov     ecx, edi
call    sub_1000acc0
test    eax, eax
js      short loc_1000af81
push    esi
call    ds:htonl
mov     ecx, [edi+18h]
mov     edx, [edi+4]
mov     [edx+ecx], eax
add     dword ptr [edi+18h], 4
mov     edx, [ebp+var_4]
mov     eax, [edx+8]
mov     esi, [eax]
cmp     esi, eax
jz      loc_1000b00f
push    2
mov     ecx, edi
call    sub_1000acc0
test    eax, eax
js      short loc_1000afba
movzx   eax, word ptr [esi+0ch]
push    eax
call    ds:htons
mov     edx, [edi+18h]
mov     ecx, [edi+4]
movzx   eax, ax
mov     [ecx+edx], ax
add     dword ptr [edi+18h], 2
mov     ecx, [esi+10h]
push    edi
call    sub_1000ae70
test    al, al
jz      short loc_1000b00f
cmp     byte ptr [esi+15h], 0
jnz     short loc_1000b007
mov     eax, [esi+8]
cmp     byte ptr [eax+15h], 0
jnz     short loc_1000afec
mov     esi, eax
mov     eax, [esi]
cmp     byte ptr [eax+15h], 0
jnz     short loc_1000b007
mov     esi, eax
mov     eax, [esi]
cmp     byte ptr [eax+15h], 0
jz      short loc_1000afe0
jmp     short loc_1000b007
mov     eax, [esi+4]
cmp     byte ptr [eax+15h], 0
jnz     short loc_1000b005
cmp     esi, [eax+8]
jnz     short loc_1000b005
mov     esi, eax
mov     eax, [eax+4]
cmp     byte ptr [eax+15h], 0
jz      short loc_1000aff5
mov     esi, eax
mov     eax, [ebp+var_4]
cmp     esi, [eax+8]
jnz     short loc_1000af91
mov     ecx, [ebp+var_4]
cmp     esi, [ecx+8]
jnz     short loc_1000b02a
mov     edx, [edi+4]
mov     eax, [ebp+arg_0]
mov     [eax], edx
mov     eax, [edi+18h]
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+arg_0]
pop     edi
mov     dword ptr [ecx], 0
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, ecx
mov     eax, [esi+1ch]
mov     [esi+18h], eax
xor     eax, eax
push    edi
mov     [esi+24h], eax
mov     [esi+2ch], eax
call    sub_10009f00
mov     ebx, [ebp+size]
push    ebx
lea     ecx, [esi+14h]
call    sub_1000ad90
mov     ecx, [ebp+src]
mov     edx, [esi+18h]
push    ebx
push    ecx
push    edx
call    memcpy
mov     eax, [esi+18h]
mov     edx, [esi]
add     esp, 0ch
push    0
push    ebx
push    eax
mov     eax, [edx+8]
mov     ecx, esi
call    eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000b090
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7?$ckeyvalue@g@svrlib@@6b@
mov     [ebp+var_4], 1
call    sub_10009f00
cmp     byte ptr [esi+20h], 0
mov     dword ptr [esi+14h], offset ??_7databuf@svrlib@@6b@
jz      short loc_1000b0f1
mov     eax, [esi+1ch]
push    eax
call    ??_v@yaxpax@z
add     esp, 4
mov     dword ptr [esi+1ch], 0
mov     byte ptr [esi+20h], 0
add     esi, 4
mov     [ebp+var_10], esi
mov     eax, [esi+4]
mov     ecx, [eax]
push    eax
push    ecx
lea     eax, [ebp+var_14]
push    eax
mov     ecx, esi
mov     [ebp+var_4], 2
call    sub_10009a60
mov     ecx, [esi+4]
push    ecx
call    ??3@yaxpax@z
add     esp, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000b130
mov     eax, large fs:0
push    eax
sub     esp, 48h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
call    sub_1000a540
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     ebx, [eax+4]
mov     [ebp+var_2c], ecx
mov     [ebp+var_28], ebx
call    ds:gettickcount
push    esi
mov     [ebp+var_24], eax
mov     [ebp+var_1c], esi
call    ds:entercriticalsection
mov     [ebp+var_18], 1
lea     edx, [ebp+var_2c]
push    edx
lea     ecx, [esi+18h]
mov     [ebp+var_4], 0
call    sub_10008710
mov     ecx, [esi+1ch]
mov     [ebp+arg_0], eax
cmp     eax, ecx
jz      short loc_1000b1b5
cmp     ebx, [eax+14h]
jb      short loc_1000b1b5
ja      short loc_1000b1b0
mov     edx, [ebp+var_2c]
cmp     edx, [eax+10h]
jb      short loc_1000b1b5
lea     eax, [ebp+arg_0]
jmp     short loc_1000b1bb
mov     [ebp+var_10], ecx
lea     eax, [ebp+var_10]
mov     eax, [eax]
cmp     ecx, eax
jz      short loc_1000b1d4
cmp     [ebp+arg_8], 0
jz      short loc_1000b22b
push    eax
lea     eax, [ebp+arg_8]
push    eax
lea     ecx, [esi+18h]
call    sub_10009fe0
mov     ecx, [ebp+arg_4]
push    ecx
lea     edx, [ebp+var_2c]
push    edx
lea     ecx, [ebp+var_54]
call    sub_10008d20
push    0
lea     eax, [ebp+var_54]
push    eax
lea     ecx, [esi+18h]
mov     byte ptr [ebp+var_4], 1
call    sub_1000a6b0
push    eax
lea     ecx, [ebp+var_14]
push    ecx
lea     ecx, [esi+18h]
call    sub_1000a2a0
mov     edx, [ebp+bstrstring]
push    edx
call    ds:sysfreestring
push    esi
call    ds:leavecriticalsection
mov     al, byte ptr [ebp+var_10]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    esi
call    ds:leavecriticalsection
xor     al, al
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_1000b090
test    [ebp+arg_0], 1
jz      short loc_1000b26a
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     [ebp+var_4], ecx
lea     eax, [ebp+var_8]
push    eax
lea     ecx, [ebp+arg_0]
push    ecx
lea     ecx, [edi+4]
mov     [ebp+var_8], 7d1h
call    sub_100095e0
mov     eax, [ebp+arg_0]
mov     esi, 4
cmp     eax, [edi+8]
jz      short loc_1000b2cf
mov     ecx, [eax+10h]
mov     al, [ecx]
cmp     al, 5
jz      short loc_1000b2c5
cmp     [ecx+2], esi
jz      short loc_1000b2c5
cmp     al, 5
jnb     short loc_1000b2cf
call    sub_10008200
mov     edx, [ebp+var_4]
mov     [edx], eax
lea     eax, [ebp+arg_0]
push    eax
lea     ecx, [ebp+var_8]
push    ecx
lea     ecx, [edi+4]
mov     [ebp+arg_0], 7d2h
call    sub_100095e0
mov     eax, [ebp+var_8]
cmp     eax, [edi+8]
jz      short loc_1000b306
mov     eax, [eax+10h]
cmp     byte ptr [eax], 12h
jz      short loc_1000b2fb
cmp     [eax+2], esi
jnz     short loc_1000b306
mov     edx, [eax+6]
mov     eax, [edx]
mov     ecx, [ebp+var_4]
mov     [ecx+4], eax
lea     edx, [ebp+arg_0]
push    edx
lea     eax, [ebp+var_8]
push    eax
lea     ecx, [edi+4]
mov     [ebp+arg_0], 7d3h
call    sub_100095e0
mov     eax, [ebp+var_8]
cmp     eax, [edi+8]
jz      short loc_1000b33d
mov     eax, [eax+10h]
cmp     byte ptr [eax], 12h
jz      short loc_1000b332
cmp     [eax+2], esi
jnz     short loc_1000b33d
mov     ecx, [eax+6]
mov     edx, [ecx]
mov     eax, [ebp+var_4]
mov     [eax+8], edx
lea     ecx, [ebp+arg_0]
push    ecx
lea     edx, [ebp+var_8]
push    edx
lea     ecx, [edi+4]
mov     [ebp+arg_0], 7d4h
call    sub_100095e0
mov     eax, [ebp+var_8]
cmp     eax, [edi+8]
jz      short loc_1000b37d
mov     ecx, [eax+10h]
mov     al, [ecx]
cmp     al, 8
jz      short loc_1000b36f
cmp     dword ptr [ecx+2], 8
jz      short loc_1000b36f
cmp     al, 8
jnb     short loc_1000b37d
call    sub_10008200
mov     ecx, [ebp+var_4]
mov     [ecx+10h], eax
mov     [ecx+14h], edx
lea     eax, [ebp+arg_0]
push    eax
lea     ecx, [ebp+var_8]
push    ecx
lea     ecx, [edi+4]
mov     [ebp+arg_0], 7d5h
call    sub_100095e0
mov     eax, [ebp+var_8]
cmp     eax, [edi+8]
jz      short loc_1000b3b9
mov     ecx, [eax+10h]
mov     al, [ecx]
cmp     al, 6
jz      short loc_1000b3ae
cmp     [ecx+2], esi
jz      short loc_1000b3ae
cmp     al, 6
jnb     short loc_1000b3b9
call    sub_10008200
mov     edx, [ebp+var_4]
mov     [edx+18h], eax
lea     eax, [ebp+arg_0]
push    eax
lea     ecx, [ebp+var_8]
push    ecx
lea     ecx, [edi+4]
mov     [ebp+arg_0], 7d6h
call    sub_100095e0
mov     eax, [ebp+var_8]
cmp     eax, [edi+8]
jz      short loc_1000b3f5
mov     ecx, [eax+10h]
mov     al, [ecx]
cmp     al, 6
jz      short loc_1000b3ea
cmp     [ecx+2], esi
jz      short loc_1000b3ea
cmp     al, 6
jnb     short loc_1000b3f5
call    sub_10008200
mov     edx, [ebp+var_4]
mov     [edx+1ch], eax
lea     eax, [ebp+arg_0]
push    eax
lea     ecx, [ebp+var_8]
push    ecx
lea     ecx, [edi+4]
mov     [ebp+arg_0], 7d7h
call    sub_100095e0
mov     eax, [ebp+var_8]
cmp     eax, [edi+8]
jz      short loc_1000b43e
mov     eax, [eax+10h]
cmp     byte ptr [eax], 0dh
jnz     short loc_1000b43e
mov     edx, [eax+6]
test    edx, edx
jz      short loc_1000b43e
mov     eax, edx
lea     esi, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_1000b428
mov     ecx, [ebp+var_4]
sub     eax, esi
push    eax
push    edx
add     ecx, 20h
call    sub_1000a420
lea     edx, [ebp+arg_0]
push    edx
lea     eax, [ebp+var_8]
push    eax
lea     ecx, [edi+4]
mov     [ebp+arg_0], 7d8h
call    sub_100095e0
mov     eax, [ebp+var_8]
cmp     eax, [edi+8]
jz      short loc_1000b487
mov     eax, [eax+10h]
cmp     byte ptr [eax], 0dh
jnz     short loc_1000b487
mov     edx, [eax+6]
test    edx, edx
jz      short loc_1000b487
mov     eax, edx
lea     esi, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_1000b471
mov     ecx, [ebp+var_4]
sub     eax, esi
push    eax
push    edx
add     ecx, 3ch
call    sub_1000a420
lea     ecx, [ebp+arg_0]
push    ecx
lea     edx, [ebp+var_8]
push    edx
lea     ecx, [edi+4]
mov     [ebp+arg_0], 7d9h
call    sub_100095e0
mov     eax, [ebp+var_8]
cmp     eax, [edi+8]
jz      short loc_1000b4d6
mov     eax, [eax+10h]
cmp     byte ptr [eax], 0dh
jnz     short loc_1000b4d6
mov     edx, [eax+6]
test    edx, edx
jz      short loc_1000b4d6
mov     eax, edx
lea     esi, [eax+1]
lea     ebx, [ebx+0]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_1000b4c0
mov     ecx, [ebp+var_4]
sub     eax, esi
push    eax
push    edx
add     ecx, 58h
call    sub_1000a420
lea     eax, [ebp+arg_0]
push    eax
lea     ecx, [ebp+var_8]
push    ecx
lea     ecx, [edi+4]
mov     [ebp+arg_0], 7dah
call    sub_100095e0
mov     eax, [ebp+var_8]
cmp     eax, [edi+8]
pop     edi
pop     esi
pop     ebx
jz      short loc_1000b517
mov     ecx, [eax+10h]
mov     al, [ecx]
cmp     al, 4
jz      short loc_1000b50b
cmp     dword ptr [ecx+2], 2
jz      short loc_1000b50b
cmp     al, 4
jnb     short loc_1000b517
call    sub_10008200
mov     edx, [ebp+var_4]
mov     [edx+74h], ax
mov     al, 1
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 234h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
xor     esi, esi
mov     [ebp+var_234], eax
test    ebx, ebx
jz      loc_1000b5f5
push    edi
push    esi
push    2
call    createtoolhelp32snapshot
mov     edi, eax
cmp     edi, 0ffffffffh
jz      loc_1000b5e2
push    228h
lea     ecx, [ebp+pe.cntusage]
push    esi
push    ecx
call    memset
add     esp, 0ch
lea     edx, [ebp+pe]
push    edx
push    edi
mov     [ebp+pe.dwsize], 22ch
call    process32firstw
test    eax, eax
jz      short loc_1000b5db
nop
cmp     [ebp+pe.th32processid], ebx
jz      short loc_1000b5ab
lea     eax, [ebp+pe]
push    eax
push    edi
call    process32nextw
test    eax, eax
jnz     short loc_1000b590
jmp     short loc_1000b5db
lea     eax, [ebp+pe.szexefile]
lea     edx, [eax+2]
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_1000b5b4
sub     eax, edx
sar     eax, 1
push    eax
lea     ecx, [ebp+pe.szexefile]
push    ecx
mov     ecx, [ebp+var_234]
call    sub_10003110
mov     esi, 1
push    edi
call    ds:closehandle
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
mov     eax, esi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001cc0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_10], esi
mov     eax, [esi+4]
mov     ecx, [eax]
push    eax
push    ecx
lea     eax, [ebp+var_14]
push    eax
mov     ecx, esi
mov     [ebp+var_4], 0
call    sub_1000a5f0
mov     ecx, [esi+4]
push    ecx
call    ??3@yaxpax@z
add     esp, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000b670
mov     eax, large fs:0
push    eax
sub     esp, 27ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+source]
mov     edi, [ebp+arg_0]
xor     ebx, ebx
push    eax
lea     ecx, [ebp+lpcommandline]
mov     [ebp+var_228], edi
mov     [ebp+lpcommandline], ebx
call    sub_10004120
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     ecx, offset off_10013544
mov     [ebp+var_4], ebx
call    edx
lea     esi, [eax+10h]
mov     [ebp+var_220], esi
mov     eax, [esi-8]
mov     ecx, 1
sub     ecx, [esi-4]
sub     eax, 2800h
or      eax, ecx
mov     byte ptr [ebp+var_4], 1
jge     short loc_1000b707
push    2800h
lea     ecx, [ebp+var_220]
call    sub_10002cb0
mov     esi, [ebp+var_220]
push    ebx
lea     eax, [ebp+pipeattributes]
push    eax
lea     ecx, [ebp+hwritepipe]
push    ecx
lea     edx, [ebp+hreadpipe]
mov     [ebp+pipeattributes.lpsecuritydescriptor], ebx
mov     [ebp+pipeattributes.binherithandle], ebx
push    edx
mov     [ebp+hreadpipe], ebx
mov     [ebp+hwritepipe], ebx
mov     [ebp+pipeattributes.nlength], 0ch
mov     [ebp+pipeattributes.lpsecuritydescriptor], ebx
mov     [ebp+pipeattributes.binherithandle], 1
call    ds:createpipe
test    eax, eax
jnz     short loc_1000b77f
add     esi, 0fffffff0h
push    esi
call    sub_10002a80
add     eax, 10h
mov     [edi], eax
add     esp, 4
mov     byte ptr [ebp+var_4], bl
lea     eax, [esi+0ch]
or      ecx, 0ffffffffh
lock xadd [eax], ecx
dec     ecx
test    ecx, ecx
jmp     loc_1000b966
push    40h
lea     ecx, [ebp+startupinfo.lpreserved]
push    ebx
push    ecx
call    memset
add     esp, 0ch
lea     edx, [ebp+startupinfo]
push    edx
mov     [ebp+processinformation.hprocess], ebx
mov     [ebp+processinformation.hthread], ebx
mov     [ebp+processinformation.dwprocessid], ebx
mov     [ebp+processinformation.dwthreadid], ebx
mov     [ebp+startupinfo.cb], 44h
call    ds:getstartupinfow
mov     eax, [ebp+hwritepipe]
lea     ecx, [ebp+processinformation]
push    ecx
lea     edx, [ebp+startupinfo]
push    edx
push    ebx
push    ebx
push    ebx
push    1
mov     [ebp+startupinfo.hstderror], eax
mov     [ebp+startupinfo.hstdoutput], eax
xor     eax, eax
push    ebx
mov     [ebp+startupinfo.wshowwindow], ax
mov     eax, [ebp+lpcommandline]
push    ebx
push    eax
push    ebx
mov     [ebp+startupinfo.dwflags], 181h
call    ds:createprocessw
mov     ecx, [ebp+hwritepipe]
push    ecx
test    eax, eax
jnz     short loc_1000b850
mov     edi, ds:closehandle
call    edi
mov     edx, [ebp+hreadpipe]
push    edx
call    edi
add     esi, 0fffffff0h
push    esi
call    sub_10002a80
mov     edi, [ebp+var_228]
add     eax, 10h
mov     [edi], eax
add     esp, 4
mov     byte ptr [ebp+var_4], bl
lea     eax, [esi+0ch]
or      ecx, 0ffffffffh
lock xadd [eax], ecx
dec     ecx
test    ecx, ecx
jmp     loc_1000b966
call    ds:closehandle
push    200h
lea     edx, [ebp+buffer]
push    ebx
push    edx
mov     [ebp+hwritepipe], ebx
call    memset
mov     edx, [ebp+hreadpipe]
mov     edi, ds:readfile
add     esp, 0ch
push    ebx
lea     eax, [ebp+numberofbytesread]
push    eax
push    1ffh
lea     ecx, [ebp+buffer]
push    ecx
push    edx
mov     [ebp+numberofbytesread], ebx
call    edi
test    eax, eax
jz      loc_1000b91e
mov     eax, [ebp+numberofbytesread]
cmp     eax, ebx
jz      short loc_1000b918
mov     [ebp+eax+buffer], bl
lea     eax, [ebp+buffer]
lea     edx, [eax+1]
lea     esp, [esp+0]
mov     cl, [eax]
inc     eax
cmp     cl, bl
jnz     short loc_1000b8c0
sub     eax, edx
push    eax
lea     eax, [ebp+buffer]
push    eax
lea     ecx, [ebp+var_220]
call    sub_10009280
push    200h
lea     ecx, [ebp+buffer]
push    ebx
push    ecx
call    memset
mov     ecx, [ebp+hreadpipe]
add     esp, 0ch
push    ebx
lea     edx, [ebp+numberofbytesread]
push    edx
push    1ffh
lea     eax, [ebp+buffer]
push    eax
push    ecx
mov     [ebp+numberofbytesread], ebx
call    edi
test    eax, eax
jnz     short loc_1000b8a2
mov     esi, [ebp+var_220]
mov     edx, [ebp+hreadpipe]
mov     edi, ds:closehandle
push    edx
call    edi
mov     eax, [ebp+processinformation.hprocess]
push    eax
call    edi
mov     ecx, [ebp+processinformation.hthread]
push    ecx
call    edi
add     esi, 0fffffff0h
push    esi
call    sub_10002a80
mov     edi, [ebp+var_228]
add     eax, 10h
mov     [edi], eax
add     esp, 4
mov     byte ptr [ebp+var_4], bl
lea     edx, [esi+0ch]
or      eax, 0ffffffffh
lock xadd [edx], eax
dec     eax
test    eax, eax
jg      short loc_1000b972
mov     ecx, [esi]
mov     edx, [ecx]
mov     eax, [edx+4]
push    esi
call    eax
mov     eax, [ebp+lpcommandline]
add     eax, 0fffffff0h
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000b99b
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000b9c0
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
cmp     byte_10013062, 0
jz      short loc_1000ba0c
push    offset aproxysecurityg_0
push    offset acommon
push    offset assenter
push    0
push    0
call    sub_100048c0
add     esp, 14h
mov     eax, off_10013544
mov     edx, [eax+0ch]
xor     ebx, ebx
mov     ecx, offset off_10013544
mov     [ebp+string], ebx
call    edx
add     eax, 10h
mov     [ebp+source], eax
movzx   edi, word ptr [ebp+arg_0]
push    edi
lea     eax, [ebp+source]
push    offset acmdcnetstatano
push    eax
mov     [ebp+var_4], ebx
call    sub_10003880
mov     ecx, [ebp+source]
push    ecx
lea     edx, [ebp+str]
push    edx
call    sub_1000b670
add     esp, 14h
mov     esi, [ebp+str]
mov     byte ptr [ebp+var_4], 1
cmp     [esi-0ch], ebx
jz      loc_1000bbb8
mov     eax, off_10013544
mov     edx, [eax+0ch]
mov     ecx, offset off_10013544
call    edx
add     eax, 10h
mov     [ebp+substr], eax
push    edi
lea     eax, [ebp+substr]
push    offset au
push    eax
mov     byte ptr [ebp+var_4], 2
call    sub_10003860
mov     eax, [ebp+substr]
add     esp, 0ch
cmp     eax, ebx
jz      loc_1000bb95
cmp     [esi-0ch], ebx
jl      loc_1000bb95
mov     ebx, ds:_mbsstr
push    eax
push    esi
call    ebx
add     esp, 8
test    eax, eax
jz      loc_1000bb95
sub     eax, esi
mov     edi, eax
cmp     edi, 0ffffffffh
jz      loc_1000bb95
lea     ecx, [ecx+0]
cmp     byte ptr [edi+esi-1], 20h
lea     eax, [edi-1]
jz      short loc_1000bad7
lea     ebx, [ebx+0]
dec     eax
cmp     byte ptr [eax+esi], 20h
jnz     short loc_1000bad0
push    3
lea     ecx, [esi+eax-6]
push    offset str2
push    ecx
call    ds:strncmp
mov     ecx, [esi-0ch]
add     esp, 0ch
test    eax, eax
lea     eax, [edi+1]
jz      short loc_1000bb21
test    eax, eax
js      loc_1000bb95
cmp     eax, ecx
jg      loc_1000bb95
mov     edx, [ebp+substr]
push    edx
add     eax, esi
push    eax
call    ebx
add     esp, 8
test    eax, eax
jz      short loc_1000bb95
sub     eax, esi
mov     edi, eax
cmp     edi, 0ffffffffh
jnz     short loc_1000bac0
jmp     short loc_1000bb95
test    eax, eax
js      short loc_1000bb3e
cmp     eax, ecx
jg      short loc_1000bb3e
add     eax, esi
push    offset substr
push    eax
call    ebx
add     esp, 8
test    eax, eax
jz      short loc_1000bb3e
sub     eax, esi
jmp     short loc_1000bb41
or      eax, 0ffffffffh
cmp     byte ptr [eax+esi], 20h
mov     ecx, eax
jz      short loc_1000bb57
lea     esp, [esp+0]
dec     ecx
cmp     byte ptr [ecx+esi], 20h
jnz     short loc_1000bb50
sub     eax, ecx
dec     eax
push    eax
inc     ecx
push    ecx
lea     eax, [ebp+string]
push    eax
lea     ecx, [ebp+str]
call    sub_10009000
mov     edi, [ebp+string]
push    edi
call    ds:atoi
mov     [ebp+string], eax
lea     eax, [edi-10h]
add     esp, 4
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000bb95
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+substr]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], 1
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000bbb8
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
lea     eax, [esi-10h]
mov     byte ptr [ebp+var_4], 0
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000bbd8
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+source]
add     eax, 0fffffff0h
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000bbfe
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+string]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000bc20
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, [ebp+string1]
xor     ecx, ecx
xor     eax, eax
cmp     cx, bx
jz      loc_1000bd72
push    ebx
call    sub_100082e0
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_1000bc6f
push    ebx
call    sub_1000b9c0
add     esp, 4
mov     esi, eax
mov     edx, off_10013544
mov     eax, [edx+0ch]
mov     ecx, offset off_10013544
call    eax
add     eax, 10h
mov     [ebp+string1], eax
lea     ecx, [ebp+string1]
push    ecx
push    esi
mov     [ebp+var_4], 0
call    sub_1000b520
mov     edi, [ebp+string1]
add     esp, 8
test    eax, eax
jz      short loc_1000bcf1
cmp     dword ptr [edi-0ch], 0
jz      short loc_1000bcf1
cmp     byte_10013062, 0
jz      short loc_1000bcd0
push    edi
push    esi
movzx   edx, bx
push    edx
push    offset aproxysecurityi
push    offset acommon
push    offset assportupidupro
push    0
push    0
call    sub_100048c0
add     esp, 20h
mov     ebx, ds:_wcsicmp
xor     esi, esi
mov     eax, ds:off_1000fd68[esi]
push    eax
push    edi
call    ebx
add     esp, 8
test    eax, eax
jz      short loc_1000bd24
add     esi, 4
cmp     esi, 1ch
jb      short loc_1000bcd8
lea     eax, [edi-10h]
or      edx, 0ffffffffh
lea     ecx, [eax+0ch]
mov     [ebp+var_4], edx
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000bd10
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     byte_10013062, 0
jz      short loc_1000bd48
push    offset aproxysecurityi
push    offset acommon
push    offset assisproxyproce
push    0
push    0
call    sub_100048c0
add     esp, 14h
lea     eax, [edi-10h]
mov     esi, 1
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000bd70
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0fffffffeh
push    offset stru_10011da0
push    offset __except_handler4
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     [ebp+ms_exc.registration.scopetable], eax
xor     eax, ebp
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     [ebp+ms_exc.registration.trylevel], 0
mov     eax, [ebp+string1]
push    eax
call    sub_1000bc20
add     esp, 4
jmp     short loc_1000bde3
mov     eax, 1
retn
mov     esp, [ebp+ms_exc.old_esp]
xor     eax, eax
mov     [ebp+var_1c], eax
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000be00
mov     eax, large fs:0
push    eax
sub     esp, 3f8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+arg_10]
mov     [ebp+psz], eax
mov     eax, [ebp+arg_14]
xor     ebx, ebx
mov     [ebp+var_3d0], ecx
mov     [ebp+var_3cc], edx
mov     [ebp+var_3c8], eax
cmp     byte_10013062, bl
jz      short loc_1000be75
push    offset aclsptloginplug_2
push    offset acommon
push    offset assenter
push    ebx
push    ebx
call    sub_100048c0
add     esp, 14h
push    offset dword_10010988
lea     ecx, [ebp+var_398]
mov     [ebp+var_3ac], ebx
mov     dword ptr [ebp+var_3a0], 3
xor     esi, esi
call    sub_10004120
mov     edx, off_10013544
mov     eax, [edx+0ch]
mov     ecx, offset off_10013544
mov     [ebp+var_4], ebx
call    eax
add     eax, 10h
mov     [ebp+var_3a4], eax
push    0ffffffffh
lea     ecx, [ebp+var_3a4]
push    offset astatus0serverr
push    ecx
mov     byte ptr [ebp+var_4], 1
call    sub_10003880
mov     edi, [ebp+arg_4]
add     esp, 0ch
cmp     edi, ebx
jz      loc_1000c66b
cmp     [ebp+arg_8], ebx
jz      loc_1000c66b
cmp     [ebp+var_3d0], ebx
jz      loc_1000c66b
cmp     [ebp+var_3cc], ebx
jz      loc_1000c66b
cmp     [ebp+var_3c8], ebx
jz      loc_1000c66b
mov     eax, 0fh
xor     edx, edx
mov     [ebp+var_88], ebx
mov     [ebp+var_84], ebx
mov     [ebp+var_80], 3
mov     [ebp+var_78], ebx
mov     [ebp+var_74], ebx
mov     [ebp+var_70], ebx
mov     [ebp+var_6c], ebx
mov     [ebp+var_54], eax
mov     [ebp+var_58], ebx
mov     byte ptr [ebp+var_68], bl
mov     [ebp+var_38], eax
mov     [ebp+var_3c], ebx
mov     byte ptr [ebp+var_4c], bl
mov     [ebp+var_1c], eax
mov     [ebp+var_20], ebx
mov     byte ptr [ebp+lpstring], bl
mov     word ptr [ebp+string1], dx
push    18h
mov     byte ptr [ebp+var_4], 2
mov     [ebp+var_404], offset ??_7?$ckeyvalue@g@svrlib@@6b@
mov     [ebp+var_3f8], ebx
call    ??2@yapaxi@z
add     esp, 4
cmp     eax, ebx
jz      loc_1000c637
mov     [ebp+var_3fc], eax
mov     [eax], eax
mov     eax, [ebp+var_3fc]
mov     [eax+4], eax
mov     eax, [ebp+var_3fc]
mov     [eax+8], eax
mov     eax, [ebp+var_3fc]
mov     byte ptr [eax+14h], 1
mov     ecx, [ebp+var_3fc]
mov     byte ptr [ecx+15h], 1
mov     edx, [ebp+var_3fc]
mov     [ebp+var_3f0], offset ??_7databuf@svrlib@@6b@
mov     [ebp+var_3e4], bl
mov     [ebp+var_3ec], ebx
mov     [ebp+var_3e8], ebx
mov     [ebp+var_3d8], ebx
mov     [ebp+var_3dc], ebx
mov     [ebp+var_3e0], ebx
mov     eax, [edx]
mov     [ebp+var_3d4], eax
mov     ecx, [ebp+arg_8]
push    ebx
push    ecx
push    edi
lea     ecx, [ebp+var_404]
mov     byte ptr [ebp+var_4], 3
call    sub_1000a780
test    al, al
jz      loc_1000c5e7
lea     edx, [ebp+var_404]
push    edx
lea     ecx, [ebp+var_88]
call    sub_1000b280
test    al, al
jz      loc_1000c5e7
lea     edi, [esi+10h]
cmp     byte_10013062, bl
jz      loc_1000c141
mov     eax, [ebp+lpstring]
cmp     [ebp+var_1c], edi
jnb     short loc_1000c02b
lea     eax, [ebp+lpstring]
lea     ecx, [ebp+var_188]
push    0fde9h
mov     [ebp+var_18c], ecx
push    eax
lea     ecx, [ebp+var_18c]
call    sub_10002880
mov     eax, [ebp+var_4c]
mov     byte ptr [ebp+var_4], 4
cmp     [ebp+var_38], edi
jnb     short loc_1000c057
lea     eax, [ebp+var_4c]
push    0fde9h
lea     edx, [ebp+var_28c]
push    eax
lea     ecx, [ebp+var_290]
mov     [ebp+var_290], edx
call    sub_10002880
mov     eax, [ebp+var_68]
mov     byte ptr [ebp+var_4], 5
cmp     [ebp+var_54], edi
jnb     short loc_1000c083
lea     eax, [ebp+var_68]
lea     ecx, [ebp+var_390]
push    0fde9h
mov     [ebp+block], ecx
push    eax
lea     ecx, [ebp+block]
call    sub_10002880
mov     edx, [ebp+var_18c]
mov     eax, [ebp+var_290]
mov     ecx, [ebp+block]
push    edx
movzx   edx, word ptr [ebp+string1]
push    eax
mov     eax, [ebp+var_84]
push    ecx
mov     ecx, [ebp+var_80]
push    edx
mov     edx, [ebp+var_6c]
push    eax
mov     eax, [ebp+var_88]
push    ecx
mov     ecx, [ebp+var_74]
push    edx
mov     edx, [ebp+var_78]
push    eax
push    ecx
push    edx
push    offset aclsptloginplug_2
push    offset acommon
push    offset asssessionidi64
push    ebx
push    ebx
mov     byte ptr [ebp+var_4], 6
call    sub_100048c0
mov     eax, [ebp+block]
mov     esi, ds:__imp_free
lea     ecx, [ebp+var_390]
add     esp, 3ch
cmp     eax, ecx
jz      short loc_1000c111
push    eax
call    esi
add     esp, 4
mov     eax, [ebp+var_290]
lea     edx, [ebp+var_28c]
cmp     eax, edx
jz      short loc_1000c127
push    eax
call    esi
add     esp, 4
mov     eax, [ebp+var_18c]
lea     ecx, [ebp+var_188]
mov     byte ptr [ebp+var_4], 3
cmp     eax, ecx
jz      short loc_1000c141
push    eax
call    esi
add     esp, 4
mov     esi, [ebp+var_6c]
cmp     byte_10013062, bl
jz      short loc_1000c165
push    offset aclsptloginplug_3
push    offset acommon
push    offset assenter
push    ebx
push    ebx
call    sub_100048c0
add     esp, 14h
cmp     esi, 65h
jz      short loc_1000c1c7
push    offset anotsup
lea     ecx, [ebp+var_398]
mov     esi, 0ch
call    sub_10003c60
cmp     byte_10013062, bl
jz      short loc_1000c1a4
mov     edx, [ebp+var_6c]
push    edx
push    offset aclsptloginplug_2
push    offset acommon
push    offset assisnotsupport
push    ebx
push    ebx
call    sub_100048c0
add     esp, 18h
lea     ecx, [ebp+var_404]
mov     byte ptr [ebp+var_4], 2
call    sub_1000b090
lea     ecx, [ebp+var_88]
mov     byte ptr [ebp+var_4], 1
call    sub_10009880
jmp     loc_1000c6a0
mov     eax, [ebp+var_80]
dec     eax
jz      loc_1000c3ce
dec     eax
jz      loc_1000c2c4
dec     eax
jz      short loc_1000c217
cmp     byte_10013062, bl
jz      short loc_1000c1fc
push    offset aclsptloginplug_2
push    offset acommon
push    offset assinvalidorunk
push    ebx
push    ebx
call    sub_100048c0
add     esp, 14h
push    ebx
push    offset dword_10010988
lea     ecx, [ebp+var_398]
mov     esi, 8
call    sub_10003110
jmp     loc_1000c503
mov     eax, [ebp+psz]
cmp     [eax+28h], ebx
jz      short loc_1000c279
mov     ecx, [ebp+string1]
push    ecx
call    sub_1000bd90
add     esp, 4
test    eax, eax
jnz     short loc_1000c279
cmp     byte_10013062, bl
jz      short loc_1000c257
mov     edx, [ebp+var_6c]
push    edx
push    offset aclsptloginplug_2
push    offset acommon
push    offset assissupportcmd
push    ebx
push    ebx
call    sub_100048c0
add     esp, 18h
push    3
mov     esi, 1
push    offset asup
lea     ecx, [ebp+var_398]
mov     dword ptr [ebp+var_3a0], esi
call    sub_10003110
jmp     loc_1000c503
cmp     byte_10013062, bl
jz      short loc_1000c29e
mov     eax, [ebp+var_6c]
push    eax
push    offset aclsptloginplug_2
push    offset acommon
push    offset assisnotsupport
push    ebx
push    ebx
call    sub_100048c0
add     esp, 18h
push    7
push    offset anotsup
lea     ecx, [ebp+var_398]
mov     dword ptr [ebp+var_3a0], 3
mov     esi, 0fh
call    sub_10003110
jmp     loc_1000c503
mov     [ebp+pbstr], ebx
mov     [ebp+var_3c4], ebx
mov     [ebp+var_3c0], ebx
mov     dword ptr [ebp+arglist], ebx
mov     [ebp+pexceptionobject], 0ffffffffh
push    ebx
lea     ecx, [ebp+var_3c4]
push    ecx
mov     ecx, [ebp+psz]
lea     edx, [ebp+var_78]
push    edx
add     ecx, 2ch
mov     byte ptr [ebp+var_4], 7
call    sub_1000a970
mov     edi, [ebp+pbstr]
test    al, al
jz      short loc_1000c37e
mov     esi, 1
push    edi
mov     dword ptr [ebp+var_3a0], esi
call    ds:sysstringlen
mov     ecx, dword ptr [ebp+arglist]
test    eax, eax
mov     eax, [ebp+pexceptionobject]
lea     edx, [ebp+var_3a4]
jz      short loc_1000c349
push    edi
push    eax
push    ecx
push    offset astatususerverr
push    edx
call    sub_10003880
add     esp, 14h
jmp     short loc_1000c359
push    eax
push    ecx
push    offset astatususerverr_0
push    edx
call    sub_10003880
add     esp, 10h
cmp     byte_10013062, bl
jz      short loc_1000c3c2
mov     eax, [ebp+var_6c]
mov     ecx, [ebp+var_74]
mov     edx, [ebp+var_78]
push    eax
push    ecx
push    edx
push    offset aclsptloginplug_2
push    offset acommon
push    offset assgetsessioni6
jmp     short loc_1000c3b8
push    13h
push    offset adataisnoneorex
lea     ecx, [ebp+var_398]
mov     esi, 0dh
call    sub_10003110
cmp     byte_10013062, bl
jz      short loc_1000c3c2
mov     eax, [ebp+var_6c]
mov     ecx, [ebp+var_74]
mov     edx, [ebp+var_78]
push    eax
push    ecx
push    edx
push    offset aclsptloginplug_2
push    offset acommon
push    offset assgetsessioni6_0
push    ebx
push    ebx
call    sub_100048c0
add     esp, 20h
push    edi
call    ds:sysfreestring
jmp     loc_1000c4fe
mov     eax, [ebp+string1]
push    eax
call    sub_1000bd90
add     esp, 4
test    eax, eax
jz      short loc_1000c41f
push    5
push    offset aproxy
lea     ecx, [ebp+var_398]
mov     esi, 0fh
call    sub_10003110
cmp     byte_10013062, bl
jz      loc_1000c503
push    offset aclsptloginplug_2
push    offset acommon
push    offset assisexistproxy
push    ebx
push    ebx
call    sub_100048c0
add     esp, 14h
jmp     loc_1000c503
mov     [ebp+pbstr], ebx
mov     [ebp+pexceptionobject], 0ffffffffh
mov     ecx, [ebp+var_78]
mov     edx, [ebp+var_74]
mov     esi, [ebp+psz]
push    1
mov     [ebp+var_3c4], ecx
lea     eax, [ebp+var_3c4]
push    eax
lea     ecx, [ebp+var_78]
push    ecx
lea     ecx, [esi+2ch]
mov     byte ptr [ebp+var_4], 8
mov     [ebp+var_3c0], edx
mov     dword ptr [ebp+arglist], 2
call    sub_1000b130
mov     [ebp+var_3a8], ebx
mov     byte ptr [ebp+var_4], 9
cmp     [esi+28h], ebx
jz      short loc_1000c4b9
mov     eax, [ebp+var_74]
mov     ecx, [esi+28h]
mov     edx, [ecx]
mov     edx, [edx+8]
push    ebx
push    eax
mov     eax, [ebp+var_78]
push    eax
call    edx
lea     ecx, [ebp+var_398]
cmp     eax, ebx
jl      short loc_1000c4b5
push    3
mov     esi, 1
push    offset asuc
mov     dword ptr [ebp+var_3a0], esi
call    sub_10003110
mov     eax, dword ptr [ebp+arglist]
jmp     short loc_1000c4d5
mov     esi, eax
jmp     short loc_1000c4c4
mov     esi, 0a0040001h
lea     ecx, [ebp+var_398]
push    6
push    offset afailed
call    sub_10003110
mov     eax, 3
push    0ffffffffh
push    eax
lea     eax, [ebp+var_3a4]
push    offset astatususerverr_0
push    eax
call    sub_10003880
mov     edi, ds:sysfreestring
add     esp, 10h
push    ebx
call    edi
mov     ecx, [ebp+pbstr]
push    ecx
call    edi
mov     edi, 10h
mov     [ebp+var_404], offset ??_7?$ckeyvalue@g@svrlib@@6b@
lea     ecx, [ebp+var_404]
mov     byte ptr [ebp+var_4], 0bh
call    sub_10009f00
mov     [ebp+var_3f0], offset ??_7databuf@svrlib@@6b@
cmp     [ebp+var_3e4], bl
jz      short loc_1000c549
mov     edx, [ebp+var_3e8]
push    edx
call    ??_v@yaxpax@z
add     esp, 4
mov     [ebp+var_3e8], ebx
mov     [ebp+var_3e4], bl
lea     eax, [ebp+var_400]
mov     [ebp+var_3a8], eax
mov     eax, [ebp+var_3fc]
mov     ecx, [eax]
push    eax
push    ecx
lea     ecx, [ebp+psz]
push    ecx
lea     ecx, [ebp+var_400]
mov     byte ptr [ebp+var_4], 0ch
call    sub_10009a60
mov     edx, [ebp+var_3fc]
push    edx
call    ??3@yaxpax@z
add     esp, 4
mov     byte ptr [ebp+var_4], 1
cmp     [ebp+var_1c], edi
jb      short loc_1000c599
mov     eax, [ebp+lpstring]
push    eax
call    ??3@yaxpax@z
add     esp, 4
mov     [ebp+var_1c], 0fh
mov     [ebp+var_20], ebx
mov     byte ptr [ebp+lpstring], bl
cmp     [ebp+var_38], edi
jb      short loc_1000c5b7
mov     ecx, [ebp+var_4c]
push    ecx
call    ??3@yaxpax@z
add     esp, 4
mov     [ebp+var_38], 0fh
mov     [ebp+var_3c], ebx
mov     byte ptr [ebp+var_4c], bl
cmp     [ebp+var_54], edi
jb      short loc_1000c5d5
mov     edx, [ebp+var_68]
push    edx
call    ??3@yaxpax@z
add     esp, 4
mov     [ebp+var_54], 0fh
mov     [ebp+var_58], ebx
mov     byte ptr [ebp+var_68], bl
jmp     loc_1000c6a0
cmp     byte_10013062, bl
jz      short loc_1000c608
push    offset aclsptloginplug_2
push    offset acommon
push    offset assunpackdatafa
push    ebx
push    ebx
call    sub_100048c0
add     esp, 14h
lea     ecx, [ebp+var_404]
mov     esi, 2
mov     [ebp+var_3ac], 80070057h
mov     byte ptr [ebp+var_4], 2
call    sub_1000b090
lea     ecx, [ebp+var_88]
mov     byte ptr [ebp+var_4], 1
call    sub_10009880
jmp     short loc_1000c696
lea     eax, [ebp+var_3a8]
push    eax
lea     ecx, [ebp+pexceptionobject]
mov     [ebp+var_3a8], ebx
call    ds:??0exception@std@@qae@abqbd@z
push    offset __ti2?avbad_alloc@std@@
lea     ecx, [ebp+pexceptionobject]
push    ecx
mov     [ebp+pexceptionobject], offset ??_7bad_alloc@std@@6b@
call    _cxxthrowexception
cmp     byte_10013062, bl
jz      short loc_1000c68c
push    offset aclsptloginplug_2
push    offset acommon
push    offset assinvalidparam
push    ebx
push    ebx
call    sub_100048c0
add     esp, 14h
mov     [ebp+var_3ac], 80070057h
mov     dword ptr [ebp+var_3a0], 3
mov     edx, off_10013544
mov     eax, [edx+0ch]
mov     ecx, offset off_10013544
call    eax
add     eax, 10h
mov     [ebp+psz], eax
mov     ecx, [ebp+var_3a4]
mov     edx, [ebp+var_398]
mov     eax, dword ptr [ebp+var_3a0]
push    ecx
push    edx
push    esi
push    eax
lea     ecx, [ebp+psz]
push    offset aresultuerrorco
push    ecx
mov     byte ptr [ebp+var_4], 0dh
call    sub_10003880
add     esp, 18h
cmp     [ebp+psz], ebx
jnz     loc_1000c7fc
xor     edi, edi
mov     [ebp+var_3a8], edi
mov     byte ptr [ebp+var_4], 0eh
cmp     byte_10013062, bl
jz      short loc_1000c72f
mov     eax, [ebp+psz]
mov     ecx, dword ptr [ebp+var_3a0]
push    eax
push    esi
push    ecx
push    offset aclsptloginplug_2
push    offset acommon
push    offset assreturndatare
push    ebx
push    ebx
call    sub_100048c0
add     esp, 20h
mov     eax, [ebp+var_3d0]
cmp     eax, ebx
jz      short loc_1000c741
mov     edx, dword ptr [ebp+var_3a0]
mov     [eax], edx
mov     eax, [ebp+var_3cc]
cmp     eax, ebx
jz      short loc_1000c74d
mov     [eax], esi
cmp     edi, ebx
jz      short loc_1000c75d
mov     ecx, [ebp+var_3c8]
mov     eax, edi
xor     edi, edi
mov     [ecx], eax
push    edi
call    ds:sysfreestring
mov     eax, [ebp+psz]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], 1
lea     edx, [eax+0ch]
or      ecx, 0ffffffffh
lock xadd [edx], ecx
dec     ecx
test    ecx, ecx
jg      short loc_1000c78a
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+var_3a4]
add     eax, 0fffffff0h
mov     byte ptr [ebp+var_4], bl
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000c7af
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+var_398]
add     eax, 0fffffff0h
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [eax+0ch]
or      edx, 0ffffffffh
lock xadd [ecx], edx
dec     edx
test    edx, edx
jg      short loc_1000c7d8
mov     ecx, [eax]
mov     edx, [ecx]
push    eax
mov     eax, [edx+4]
call    eax
mov     eax, [ebp+var_3ac]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    18h
mov     edx, [ebp+psz]
push    edx
call    ds:sysallocstring
mov     edi, eax
mov     [ebp+var_3a8], edi
cmp     edi, ebx
jnz     loc_1000c6fb
push    8007000eh
call    sub_100020c0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000c910
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+var_10], edi
mov     [ebp+var_4], 0
push    edi
mov     [ebp+var_1c], edi
call    ds:entercriticalsection
mov     [ebp+var_18], 1
mov     eax, [edi+1ch]
mov     ecx, [eax+4]
lea     esi, [edi+18h]
push    ecx
mov     ecx, esi
mov     byte ptr [ebp+var_4], 2
call    sub_1000a250
mov     eax, [esi+4]
mov     [eax+4], eax
mov     eax, [esi+4]
mov     [eax], eax
mov     eax, [esi+4]
mov     [eax+8], eax
push    edi
mov     dword ptr [esi+8], 0
call    ds:leavecriticalsection
mov     [ebp+var_14], esi
mov     eax, [esi+4]
mov     ecx, [eax]
push    eax
push    ecx
lea     edx, [ebp+var_18]
push    edx
mov     ecx, esi
mov     byte ptr [ebp+var_4], 3
call    sub_1000a5f0
mov     eax, [esi+4]
push    eax
call    ??3@yaxpax@z
add     esp, 4
push    edi
call    ds:deletecriticalsection
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
push    esi
mov     esi, ecx
mov     [esi+0ch], eax
mov     [esi+10h], eax
mov     [esi+14h], eax
mov     [esi+18h], eax
mov     [esi+1ch], eax
mov     [esi+20h], eax
mov     [esi+24h], eax
mov     [esi+28h], al
lea     ecx, [esi+30h]
mov     dword ptr [esi+8], offset ??_7inetworkptloginresponse@ptlogin@@6b@
call    sub_1000c830
mov     dword ptr [esi], offset ??_7?$ccomobject@vclsptloginpluginimp@@@atl@@6b@
mov     dword ptr [esi+4], offset ??_7?$ccomobject@vclsptloginpluginimp@@@atl@@6b@_0
mov     dword ptr [esi+8], offset ??_7?$ccomobject@vclsptloginpluginimp@@@atl@@6b@_1
mov     ecx, dword_100137dc
mov     eax, [ecx]
mov     edx, [eax+4]
call    edx
mov     eax, esi
pop     esi
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
add     eax, 0ch
push    eax
call    ds:interlockedincrement
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
lea     eax, [esi+0ch]
push    eax
call    ds:interlockeddecrement
mov     edi, eax
test    edi, edi
jnz     short loc_1000ca79
test    esi, esi
jz      short loc_1000ca79
mov     edx, [esi]
mov     eax, [edx+0ch]
push    1
mov     ecx, esi
call    eax
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
push    eax
push    ecx
push    offset off_10010a0c
push    edx
call    sub_100090b0
pop     ebp
retn    0ch
sub     [esp+arg_0], 4
jmp     sub_1000ca30
sub     [esp+arg_0], 4
jmp     sub_1000ca80
sub     [esp+arg_0], 4
jmp     sub_1000ca50
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7?$ccomobject@vclsptloginpluginimp@@@atl@@6b@
mov     dword ptr [esi+4], offset ??_7?$ccomobject@vclsptloginpluginimp@@@atl@@6b@_0
mov     dword ptr [esi+8], offset ??_7?$ccomobject@vclsptloginpluginimp@@@atl@@6b@_1
mov     dword ptr [esi+0ch], 0c0000001h
call    sub_10004a80
mov     ecx, dword_100137dc
mov     eax, [ecx]
mov     edx, [eax+8]
call    edx
lea     ecx, [esi+30h]
call    sub_1000c910
cmp     byte ptr [esi+28h], 0
lea     eax, [esi+10h]
jz      short loc_1000cb1f
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_1000cb2e
push    esi
call    ??3@yaxpax@z
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000cb40
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     eax, [ebp+arg_8]
test    eax, eax
jnz     short loc_1000cb8b
mov     eax, 80004003h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     edi, 8007000eh
push    5ch
mov     dword ptr [eax], 0
mov     [ebp+var_14], edi
mov     [ebp+var_4], 0
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_1000cbbd
mov     ecx, [ebp+arg_0]
push    ecx
mov     ecx, eax
call    sub_1000c9d0
mov     esi, eax
jmp     short loc_1000cbbf
xor     esi, esi
mov     [ebp+var_4], 0ffffffffh
test    esi, esi
jz      short loc_1000cc47
lea     eax, [esi+0ch]
push    eax
call    ds:interlockedincrement
xor     edi, edi
push    edi
lea     ebx, [esi+10h]
push    ebx
call    ds:initializecriticalsectionandspincount
test    eax, eax
jnz     short loc_1000cbff
call    ds:getlasterror
test    eax, eax
jle     short loc_1000cbf9
and     eax, 0ffffh
or      eax, 80070000h
mov     edi, eax
test    edi, edi
js      short loc_1000cc0e
mov     byte ptr [ebx+18h], 1
test    edi, edi
js      short loc_1000cc0e
call    sub_100047f0
xor     edi, edi
lea     eax, [esi+0ch]
push    eax
call    ds:interlockeddecrement
test    edi, edi
jnz     short loc_1000cc31
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
mov     edx, [esi]
mov     edx, [edx]
push    eax
push    ecx
push    esi
call    edx
mov     edi, eax
test    edi, edi
jz      short loc_1000cc47
mov     eax, [esi]
mov     edx, [eax+0ch]
push    1
mov     ecx, esi
call    edx
jmp     short loc_1000cc47
mov     eax, offset loc_1000cc44
retn
mov     edi, [ebp+var_14]
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
cmp     [ebp+arg_0], 0
mov     eax, [ebp+arg_8]
jnz     short loc_1000cc7c
mov     ecx, [ebp+arg_4]
push    eax
push    ecx
push    0
call    sub_1000cb40
pop     ebp
retn    0ch
test    eax, eax
jnz     short loc_1000cc89
mov     eax, 80004003h
pop     ebp
retn    0ch
mov     dword ptr [eax], 0
mov     eax, 80040110h
pop     ebp
retn    0ch
mov     edi, edi
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jz      short loc_1000ccbf
push    eax
call    free
and     dword ptr [esi], 0
pop     ecx
and     dword ptr [esi+4], 0
and     dword ptr [esi+8], 0
pop     esi
retn
mov     edi, edi
push    esi
mov     esi, ecx
push    18h
lea     eax, [esi+14h]
push    0
push    eax
call    memset
and     dword ptr [esi+2ch], 0
and     dword ptr [esi+30h], 0
and     dword ptr [esi+34h], 0
add     esp, 0ch
mov     eax, esi
pop     esi
retn
mov     edi, edi
push    esi
mov     esi, ecx
lea     eax, [esi+14h]
push    eax
call    ds:deletecriticalsection
lea     ecx, [esi+2ch]
pop     esi
jmp     loc_1000ccaa
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     esi, ecx
lea     edi, [esi+14h]
push    edi
call    ds:entercriticalsection
mov     ecx, [esi+30h]
mov     eax, [ebp+arg_0]
cmp     eax, ecx
jg      short loc_1000cd54
test    eax, eax
js      short loc_1000cd54
cmp     eax, ecx
jnz     short loc_1000cd39
mov     esi, [esi+8]
push    edi
call    ds:leavecriticalsection
mov     eax, esi
jmp     short loc_1000cd5d
jge     short loc_1000cd43
mov     ecx, [esi+2ch]
mov     esi, [ecx+eax*4]
jmp     short loc_1000cd2e
push    0
push    0
push    1
push    0c000008ch
call    ds:raiseexception
push    edi
call    ds:leavecriticalsection
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    esi
mov     esi, ecx
call    sub_1000ccc9
mov     eax, 10000000h
lea     ecx, [esi+14h]
mov     dword ptr [esi], 38h
mov     [esi+8], eax
mov     [esi+4], eax
mov     dword ptr [esi+0ch], 0a00h
mov     dword ptr [esi+10h], offset dword_10010af0
call    sub_10004e40
test    eax, eax
jns     short loc_1000cd9f
mov     byte_100137cd, 1
mov     eax, esi
pop     esi
retn
cmp     byte ptr [ecx+8], 0
mov     dword ptr [ecx], offset off_10010b00
jz      short locret_1000cdbd
mov     ecx, [ecx+4]
test    ecx, ecx
jz      short locret_1000cdbd
push    ecx
call    ds:heapdestroy
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+dwbytes]
push    0
push    dword ptr [ecx+4]
call    ds:heapalloc
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     [ebp+lpmem], 0
jz      short loc_1000cdee
push    [ebp+lpmem]
push    0
push    dword ptr [ecx+4]
call    ds:heapfree
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
xor     eax, eax
cmp     [ebp+lpmem], eax
jnz     short loc_1000ce07
push    [ebp+dwbytes]
mov     eax, [ecx]
call    dword ptr [eax]
jmp     short loc_1000ce28
cmp     [ebp+dwbytes], eax
jnz     short loc_1000ce18
push    [ebp+lpmem]
mov     eax, [ecx]
call    dword ptr [eax+4]
xor     eax, eax
jmp     short loc_1000ce28
push    [ebp+dwbytes]
push    [ebp+lpmem]
push    eax
push    dword ptr [ecx+4]
call    ds:heaprealloc
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+lpmem]
push    0
push    dword ptr [ecx+4]
call    ds:heapsize
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_1000cda3
test    [ebp+arg_0], 1
jz      short loc_1000ce5d
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ecx+4]
mov     eax, [ecx]
pop     ebp
jmp     dword ptr [eax+4]
xor     edx, edx
lea     eax, [ecx+14h]
inc     edx
lock xadd [eax], edx
lea     eax, [ecx+8]
retn
mov     eax, ecx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_10010b14
jz      short loc_1000ce9e
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
or      edx, 0ffffffffh
sub     edx, eax
cmp     edx, ecx
jnb     short loc_1000cec0
mov     eax, 80070216h
pop     ebp
retn
add     eax, ecx
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
xor     eax, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    [ebp+arg_4]
add     esi, 8
and     esi, 0fffffff8h
lea     eax, [ebp+arg_0]
push    esi
push    eax
mov     edi, ecx
call    sub_10004b00
add     esp, 0ch
test    eax, eax
js      short loc_1000cf27
push    [ebp+arg_0]
lea     eax, [ebp+arg_0]
push    10h
push    eax
call    sub_1000cea5
add     esp, 0ch
test    eax, eax
js      short loc_1000cf27
mov     ecx, [edi+4]
push    [ebp+arg_0]
mov     eax, [ecx]
call    dword ptr [eax]
test    eax, eax
jz      short loc_1000cf27
dec     esi
and     dword ptr [eax+4], 0
mov     [eax], edi
mov     dword ptr [eax+0ch], 1
mov     [eax+8], esi
jmp     short loc_1000cf29
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
push    edi
push    [ebp+arg_8]
add     esi, 8
and     esi, 0fffffff8h
lea     eax, [ebp+arg_4]
push    esi
push    eax
mov     edi, ecx
call    sub_10004b00
add     esp, 0ch
test    eax, eax
js      short loc_1000cf82
push    [ebp+arg_4]
lea     eax, [ebp+arg_4]
push    10h
push    eax
call    sub_1000cea5
add     esp, 0ch
test    eax, eax
js      short loc_1000cf82
push    [ebp+arg_4]
mov     ecx, [edi+4]
push    [ebp+arg_0]
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_1000cf82
dec     esi
mov     [eax+8], esi
jmp     short loc_1000cf84
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn    0ch
mov     edi, edi
push    esi
mov     esi, ecx
cmp     dword ptr [esi], 0
jz      short loc_1000cfcc
push    ebx
mov     ebx, [esi+8]
cmp     ebx, [esi+0ch]
jnb     short loc_1000cfbe
push    edi
mov     edi, [ebx]
test    edi, edi
jz      short loc_1000cfb5
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_1000cfb1
mov     ecx, [eax]
push    eax
call    dword ptr [ecx+8]
and     dword ptr [edi+10h], 0
add     ebx, 4
cmp     ebx, [esi+0ch]
jb      short loc_1000cf9e
pop     edi
lea     eax, [esi+10h]
push    eax
call    ds:deletecriticalsection
and     dword ptr [esi], 0
pop     ebx
pop     esi
retn
mov     edi, edi
push    esi
mov     esi, ecx
push    18h
lea     eax, [esi+10h]
push    0
push    eax
call    memset
add     esp, 0ch
mov     eax, esi
pop     esi
retn
mov     edi, edi
push    esi
mov     esi, ecx
call    sub_1000cfce
and     dword ptr [esi], 0
lea     ecx, [esi+10h]
mov     dword ptr [esi+4], 10000000h
mov     dword ptr [esi+8], offset off_10011fc8
mov     dword ptr [esi+0ch], offset dword_10011fcc
call    sub_10004e40
test    eax, eax
jns     short loc_1000d01e
mov     byte_100137cd, 1
jmp     short loc_1000d024
mov     dword ptr [esi], 28h
mov     eax, esi
pop     esi
retn
cmp     dword_10013bec, 0
jz      short __ftol2
sub     esp, 4
fnstcw  word ptr [esp]
pop     eax
and     ax, 7fh
cmp     ax, 7fh
jz      short __ftol2_pentium4
push    esi
push    80h
call    ds:_malloc_crt
pop     ecx
mov     esi, eax
push    esi
call    ds:encodepointer
mov     ptr, eax
mov     dword_10013bf4, eax
test    esi, esi
jnz     short loc_1000d389
xor     eax, eax
inc     eax
pop     esi
retn
and     dword ptr [esi], 0
call    sub_1000d892
push    offset byte_1000d8b8
call    _atexit
mov     dword ptr [esp], offset sub_1000d886
call    _atexit
pop     ecx
xor     eax, eax
pop     esi
retn
push    0ah
call    ds:isprocessorfeaturepresent
mov     dword_10013bec, eax
xor     eax, eax
retn
push    offset dword_10013bdc
call    __clean_type_info_names_internal
pop     ecx
retn
mov     edi, edi
push    esi
mov     eax, offset dword_10011474
mov     esi, offset dword_10011474
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_1000d8b5
mov     eax, [edi]
test    eax, eax
jz      short loc_1000d8ae
call    eax
add     edi, 4
cmp     edi, esi
jb      short loc_1000d8a6
pop     edi
pop     esi
retn
push    esi
mov     eax, offset dword_1001147c
mov     esi, offset dword_1001147c
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_1000d8db
mov     eax, [edi]
test    eax, eax
jz      short loc_1000d8d4
call    eax
add     edi, 4
cmp     edi, esi
jb      short loc_1000d8cc
pop     edi
pop     esi
retn
mov     ecx, [ebp+var_14]
add     ecx, 4
jmp     sub_10001cc0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_100114dc
jmp     __cxxframehandler3
mov     ecx, [ebp+var_10]
jmp     loc_100011d0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011508
jmp     __cxxframehandler3
mov     eax, dword_100135a0
and     eax, 0fffffffeh
mov     dword_100135a0, eax
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011534
jmp     __cxxframehandler3
mov     eax, [ebp+var_10]
and     eax, 1
jz      locret_1000dba8
and     [ebp+var_10], 0fffffffeh
mov     ecx, [ebp+arg_0]
jmp     sub_10002860
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011594
jmp     __cxxframehandler3
mov     eax, [ebp+var_24]
and     eax, 1
jz      locret_1000dbe8
and     [ebp+var_24], 0fffffffeh
mov     ecx, [ebp+var_28]
jmp     sub_10002860
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_100115c0
jmp     __cxxframehandler3
mov     eax, [ebp+var_10]
and     eax, 1
jz      locret_1000dc28
and     [ebp+var_10], 0fffffffeh
mov     ecx, [ebp+arg_0]
jmp     sub_10002860
retn
lea     ecx, [ebp+var_14]
jmp     sub_10002860
lea     ecx, [ebp+var_14]
jmp     sub_10002860
mov     edx, [esp-4+hmodule]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_100115fc
jmp     __cxxframehandler3
mov     ecx, [ebp+var_10]
jmp     sub_10002860
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011628
jmp     __cxxframehandler3
mov     eax, [ebp+var_10]
and     eax, 1
jz      locret_1000dca8
and     [ebp+var_10], 0fffffffeh
mov     ecx, [ebp+arg_0]
jmp     sub_10002860
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011654
jmp     __cxxframehandler3
lea     ecx, [ebp+string1]
jmp     sub_10002860
lea     ecx, [ebp+var_18]
jmp     sub_10002860
lea     ecx, [ebp+string]
jmp     sub_10002860
lea     ecx, [ebp+var_24]
jmp     sub_10002860
lea     ecx, [ebp+var_20]
jmp     sub_10002860
lea     ecx, [ebp+var_1c]
jmp     sub_10002860
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011678
jmp     __cxxframehandler3
mov     eax, [ebp+var_10]
and     eax, 1
jz      locret_1000dd38
and     [ebp+var_10], 0fffffffeh
mov     ecx, [ebp+arg_0]
jmp     sub_10002860
retn
lea     ecx, [ebp+source]
jmp     sub_10002860
mov     edx, [esp-4+source]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_100116dc
jmp     __cxxframehandler3
lea     ecx, [ebp+lpfilename]
jmp     sub_10002860
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011708
jmp     __cxxframehandler3
lea     ecx, [ebp+var_44]
jmp     sub_10002860
lea     ecx, [ebp+lpnewfilename]
jmp     sub_10002860
lea     ecx, [ebp+lpnewfilename]
jmp     sub_10002860
lea     ecx, [ebp+var_4c]
jmp     sub_10002d10
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-50h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001174c
jmp     __cxxframehandler3
lea     ecx, [ebp+var_118]
jmp     sub_10002860
lea     ecx, [ebp+var_124]
jmp     sub_10002860
lea     ecx, [ebp+var_11c]
jmp     sub_10002860
lea     ecx, [ebp+var_128]
jmp     sub_10002860
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-124h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011790
jmp     __cxxframehandler3
lea     ecx, [ebp+var_10]
jmp     sub_10002860
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_100117bc
jmp     __cxxframehandler3
lea     ecx, [ebp+lpstring]
jmp     sub_10002860
lea     ecx, [ebp+block]
jmp     loc_10002840
lea     ecx, [ebp+var_9c]
jmp     sub_10002860
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-9ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_100117f8
jmp     __cxxframehandler3
lea     ecx, [ebp+lpstring]
jmp     sub_100057e0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011824
jmp     __cxxframehandler3
lea     ecx, [ebp+var_6c]
jmp     loc_100051f0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-78h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011850
jmp     __cxxframehandler3
lea     ecx, [ebp+var_20]
jmp     loc_10005da0
lea     ecx, [ebp+var_24]
jmp     loc_10005da0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-30h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011894
jmp     __cxxframehandler3
lea     ecx, [ebp+lpstring]
jmp     sub_100057e0
mov     edx, [esp-4+lpstring]
lea     eax, [edx+0ch]
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011918
jmp     __cxxframehandler3
lea     ecx, [ebp+lpdata]
jmp     loc_10005dc0
lea     ecx, [ebp+lpdata]
jmp     loc_10005dc0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2134h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001195c
jmp     __cxxframehandler3
lea     ecx, [ebp+var_2228]
jmp     sub_10002a60
lea     ecx, [ebp+var_2250]
jmp     sub_10002a60
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2270h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_100119e8
jmp     __cxxframehandler3
lea     ecx, [ebp+var_430]
jmp     sub_100057e0
lea     ecx, [ebp+lpwidecharstr]
jmp     loc_10005dc0
mov     edx, [esp-4+lpname]
lea     eax, [edx+0ch]
mov     ecx, [edx-434h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011a50
jmp     __cxxframehandler3
lea     ecx, [ebp+var_10]
jmp     sub_100057e0
mov     edx, [esp-4+lplibfilename]
lea     eax, [edx+0ch]
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011a7c
jmp     __cxxframehandler3
mov     edx, [esp-4+size]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011ae0
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011b60
jmp     __cxxframehandler3
lea     ecx, [ebp+var_1c]
jmp     sub_100088b0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011b8c
jmp     __cxxframehandler3
mov     eax, [ebp+var_18]
push    eax
mov     ecx, [ebp+var_1c]
push    ecx
call    nullsub_1
add     esp, 8
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011bec
jmp     __cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     sub_100088b0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011c18
jmp     __cxxframehandler3
lea     ecx, [ebp+var_24]
jmp     loc_10008410
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011c44
jmp     __cxxframehandler3
mov     ecx, [ebp+var_10]
add     ecx, 4
jmp     sub_1000ab40
mov     ecx, [ebp+var_10]
add     ecx, 14h
jmp     sub_10008120
mov     ecx, [ebp+var_10]
jmp     loc_100011d0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011c80
jmp     __cxxframehandler3
lea     ecx, [ebp+var_1c]
jmp     sub_100088b0
lea     ecx, [ebp+var_54]
jmp     loc_100085d0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-58h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011cb4
jmp     __cxxframehandler3
mov     ecx, [ebp+var_10]
jmp     loc_100011d0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011ce0
jmp     __cxxframehandler3
lea     ecx, [ebp+lpcommandline]
jmp     sub_10002860
lea     ecx, [ebp+var_220]
jmp     sub_10002860
mov     edx, [esp-4+source]
lea     eax, [edx+0ch]
mov     ecx, [edx-28ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011d14
jmp     __cxxframehandler3
lea     ecx, [ebp+source]
jmp     sub_10002860
lea     ecx, [ebp+str]
jmp     sub_10002860
lea     ecx, [ebp+substr]
jmp     sub_10002860
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011d50
jmp     __cxxframehandler3
lea     ecx, [ebp+string1]
jmp     sub_10002860
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011d7c
jmp     __cxxframehandler3
lea     ecx, [ebp+var_398]
jmp     sub_10002860
lea     ecx, [ebp+var_3a4]
jmp     sub_10002860
lea     ecx, [ebp+var_88]
jmp     sub_10009880
lea     ecx, [ebp+var_404]
jmp     sub_1000b090
lea     ecx, [ebp+var_18c]
jmp     loc_10002840
lea     ecx, [ebp+var_290]
jmp     loc_10002840
lea     ecx, [ebp+block]
jmp     loc_10002840
lea     ecx, [ebp+var_3c4]
jmp     loc_10008410
lea     ecx, [ebp+var_3c4]
jmp     loc_10008410
lea     ecx, [ebp+var_3a8]
jmp     loc_10004e90
lea     ecx, [ebp+var_400]
jmp     sub_1000ab40
lea     ecx, [ebp+var_3f0]
jmp     sub_10008120
mov     ecx, [ebp+var_3a8]
jmp     loc_100011d0
lea     ecx, [ebp+psz]
jmp     sub_10002860
lea     ecx, [ebp+var_3a8]
jmp     loc_10004e90
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-408h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011dbc
jmp     __cxxframehandler3
mov     ecx, [ebp+var_10]
jmp     unknown_libname_1
mov     ecx, [ebp+var_10]
add     ecx, 18h
jmp     sub_1000b610
lea     ecx, [ebp+var_1c]
jmp     sub_100088b0
mov     ecx, [ebp+var_14]
jmp     loc_100011d0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011ea4
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_10011efc
jmp     __cxxframehandler3
call    sub_10002db0
mov     byte_100137c4, al
retn
call    sub_10002d30
mov     byte_100137c5, al
retn
call    ds:gettickcount
mov     dword_100137c8, eax
retn
mov     ecx, offset dword_1001381c
call    sub_10006a80
push    offset sub_1000e4e0
mov     dword_1001381c, offset ??_7clsptloginpluginmodule@@6b@
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_10013848
call    sub_1000cd63
push    offset sub_1000e4ea
call    _atexit
pop     ecx
retn
call    ds:getprocessheap
push    offset sub_1000e4f4
mov     dword_10013880, offset off_10010b00
mov     dword_10013884, eax
mov     byte_10013888, 0
call    _atexit
pop     ecx
retn
push    offset sub_1000e4fe
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_1001388c
call    sub_1000cfe7
push    offset sub_1000e509
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_1001358c
jmp     sub_10001d20
mov     ecx, offset dword_1001381c
jmp     sub_10006ae0
mov     ecx, offset dword_10013848
jmp     loc_1000ccee
mov     ecx, offset dword_10013880
jmp     sub_1000cda3
mov     off_10013544, offset off_10010b14
retn
mov     ecx, offset dword_1001388c
jmp     loc_1000cf8a
offset __cta2?avbad_alloc@std@@>