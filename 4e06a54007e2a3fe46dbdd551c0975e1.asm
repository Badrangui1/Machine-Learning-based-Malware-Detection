push    ebp
mov     ebp, esp
cmp     [ebp+src], 0
jnz     short loc_401010
mov     eax, 3
pop     ebp
retn
push    esi
mov     esi, [ebp+arg_8]
test    esi, esi
jnz     short loc_40101e
lea     eax, [esi+4]
pop     esi
pop     ebp
retn
mov     eax, block
test    eax, eax
jz      short loc_401046
xorps   xmm0, xmm0
movq    qword ptr [eax], xmm0
movq    qword ptr [eax+8], xmm0
movq    qword ptr [eax+10h], xmm0
push    eax
movq    qword ptr [eax+18h], xmm0
call    j__free
add     esp, 4
mov     eax, src
test    eax, eax
jz      short loc_401064
xorps   xmm0, xmm0
movq    qword ptr [eax], xmm0
push    eax
movq    qword ptr [eax+8], xmm0
call    j__free
add     esp, 4
push    20h
mov     dword_43d16c, 0
mov     dword_43d178, 1
mov     byte_43d17c, 2
call    ??2@yapaxi@z
mov     ecx, dword_43d16c
add     esp, 4
mov     edx, eax
mov     block, edx
mov     dword_43d18c, 4
sub     ecx, 0
jz      short loc_4010df
dec     ecx
jz      short loc_4010c4
mov     eax, 20h
mov     dword_43d184, 0eh
mov     dword_43d188, 8
jmp     short loc_4010f8
mov     eax, 18h
mov     dword_43d184, 0ch
mov     dword_43d188, 6
jmp     short loc_4010f8
mov     eax, 10h
mov     dword_43d184, 0ah
mov     dword_43d188, 4
test    eax, eax
jz      short loc_401109
push    eax
push    [ebp+src]
push    edx
call    _memmove_0
add     esp, 0ch
push    10h
call    ??2@yapaxi@z
add     esp, 4
mov     src, eax
sub     esi, eax
mov     edx, 10h
nop
mov     cl, [esi+eax]
mov     [eax], cl
lea     eax, [eax+1]
dec     edx
jnz     short loc_401120
mov     eax, dword_43d184
inc     eax
imul    eax, dword_43d18c
xor     ecx, ecx
mov     edx, 4
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     dword_43d174, eax
call    sub_402d60
mov     byte_43d17d, 1
xor     eax, eax
pop     esi
pop     ebp
retn
cmp     byte_43d17d, 0
jnz     short loc_40117f
mov     eax, 5
retn
mov     edx, dword_43d174
test    edx, edx
jz      short loc_4011ac
mov     ecx, dword_43d184
inc     ecx
imul    ecx, dword_43d18c
test    ecx, ecx
jz      short loc_4011a3
push    edi
xor     eax, eax
mov     edi, edx
rep stosd
pop     edi
push    edx
call    j__free
add     esp, 4
mov     eax, block
mov     dword_43d174, 0
test    eax, eax
jz      short loc_4011de
xorps   xmm0, xmm0
movq    qword ptr [eax], xmm0
movq    qword ptr [eax+8], xmm0
movq    qword ptr [eax+10h], xmm0
push    eax
movq    qword ptr [eax+18h], xmm0
call    j__free
add     esp, 4
mov     eax, src
mov     block, 0
test    eax, eax
jz      short loc_401206
xorps   xmm0, xmm0
movq    qword ptr [eax], xmm0
push    eax
movq    qword ptr [eax+8], xmm0
call    j__free
add     esp, 4
mov     src, 0
mov     dword_43d16c, 0
mov     dword_43d178, 0
mov     byte_43d17c, 0
mov     byte_43d17d, 0
xor     eax, eax
retn
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    ebx
xor     ebx, ebx
push    esi
mov     [ebp+var_24], eax
mov     [eax], ebx
mov     eax, dword_43d178
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
mov     [ebp+var_20], esi
mov     [ebp+var_18], edi
mov     [ebp+var_1c], ebx
cmp     eax, 3
ja      def_401279
jmp     ds:jpt_401279[eax*4]
mov     eax, [ebp+var_18]
sub     eax, esi
mov     [ebp+var_20], ebx
mov     edi, esi
mov     [ebp+var_28], eax
lea     ecx, [ecx+0]
add     eax, edi
push    eax
mov     edx, 10h
mov     ecx, edi
call    sub_4018b0
add     esp, 4
test    eax, eax
jnz     loc_4015ff
mov     eax, [ebp+var_20]
inc     eax
add     ebx, 10h
add     edi, 10h
mov     [ebp+var_20], eax
cmp     eax, 0bh
mov     eax, [ebp+var_28]
jb      short loc_401290
mov     eax, [ebp+var_18]
add     eax, 0b0h
lea     ecx, [esi+0b0h]
mov     edx, 0eh
push    eax
call    sub_4018b0
add     esp, 4
test    eax, eax
jnz     loc_4015ff
mov     ecx, [ebp+var_24]
lea     eax, [ebx+10h]
pop     edi
pop     esi
mov     [ecx], eax
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     edx, src
sub     edx, esi
lea     eax, [ebp+src]
xor     edi, edi
sub     ecx, eax
mov     [ebp+var_2c], edx
mov     [ebp+var_28], ecx
mov     ebx, [ebp+var_18]
xor     eax, eax
test    edi, edi
jnz     short loc_40132f
lea     esi, [ebp+src]
add     esi, eax
add     ecx, esi
mov     dl, [ecx+edx]
xor     dl, [ecx]
mov     [esi], dl
mov     esi, [ebp+var_20]
jmp     short loc_401344
mov     edx, edi
shl     edx, 4
lea     ecx, [edx+ebx]
add     edx, eax
mov     cl, [ecx+eax-10h]
xor     cl, [edx+esi]
mov     [ebp+eax+src], cl
mov     edx, [ebp+var_2c]
mov     ecx, [ebp+var_28]
inc     eax
cmp     eax, 10h
jb      short loc_401318
mov     ebx, [ebp+var_1c]
mov     eax, edi
shl     eax, 4
add     eax, [ebp+var_18]
mov     edx, 10h
push    eax
lea     ecx, [ebp+src]
call    sub_4018b0
add     esp, 4
test    eax, eax
jnz     loc_4015ff
mov     edx, [ebp+var_2c]
mov     ecx, [ebp+var_28]
add     ebx, 10h
inc     edi
mov     [ebp+var_1c], ebx
cmp     edi, 0bh
jb      short loc_401313
mov     edx, [ebp+var_18]
xor     ecx, ecx
jmp     short loc_401390
mov     al, [edx+ecx+0a0h]
xor     al, [esi+ecx+0b0h]
inc     ecx
mov     byte ptr [ebp+ecx+var_18+3], al
cmp     ecx, 0eh
jb      short loc_401390
mov     ah, byte_43d17c
mov     ecx, 0eh
mov     al, [edx+ecx+0a0h]
xor     al, ah
mov     [ebp+ecx+src], al
inc     ecx
cmp     ecx, 10h
jb      short loc_4013b3
lea     eax, [edx+0b0h]
mov     edx, 10h
lea     ecx, [ebp+src]
jmp     loc_4012d2
xor     esi, esi
jmp     short loc_4013e3
mov     edi, [ebp+var_18]
lea     eax, [ebp+src]
mov     edx, 10h
push    eax
test    esi, esi
jnz     short loc_4013f8
mov     ecx, src
jmp     short loc_401402
mov     ecx, esi
shl     ecx, 4
add     ecx, 0fffffff0h
add     ecx, edi
call    sub_4018b0
add     esp, 4
test    eax, eax
jnz     loc_4015ff
mov     eax, esi
shl     eax, 4
xor     ecx, ecx
lea     edx, [eax+edi]
mov     edi, [ebp+var_20]
mov     ebx, edi
sub     ebx, [ebp+var_18]
add     edi, eax
mov     al, [ebx+edx]
xor     al, [ebp+ecx+src]
add     ecx, 4
mov     [edx], al
mov     al, [edi+ecx-3]
xor     al, byte ptr [ebp+ecx+var_18+1]
lea     edx, [edx+4]
mov     [edx-3], al
mov     al, [edi+ecx-2]
xor     al, byte ptr [ebp+ecx+var_18+2]
mov     [edx-2], al
mov     al, [edi+ecx-1]
xor     al, byte ptr [ebp+ecx+var_18+3]
mov     [edx-1], al
cmp     ecx, 10h
jb      short loc_401426
add     [ebp+var_1c], 10h
inc     esi
cmp     esi, 0bh
jb      loc_4013e0
lea     eax, [ebp+src]
mov     edx, 10h
push    eax
test    esi, esi
jnz     short loc_401486
mov     ecx, src
call    sub_4018b0
mov     edi, [ebp+var_18]
jmp     short loc_401498
mov     edi, [ebp+var_18]
mov     eax, esi
shl     eax, 4
lea     ecx, [edi-10h]
add     ecx, eax
call    sub_4018b0
add     esp, 4
test    eax, eax
jnz     loc_4015ff
mov     ebx, [ebp+var_20]
shl     esi, 4
add     esi, edi
xor     ecx, ecx
mov     edx, esi
sub     ebx, edi
mov     al, [edx+ebx]
xor     al, [ebp+ecx+src]
inc     ecx
mov     [edx], al
inc     edx
cmp     ecx, 0eh
jb      short loc_4014b1
mov     dl, byte_43d17c
mov     ebx, [ebp+var_1c]
mov     ecx, 0eh
nop
mov     al, [ebp+ecx+src]
xor     al, dl
mov     [esi+ecx], al
inc     ecx
cmp     ecx, 10h
jb      short loc_4014d0
mov     ecx, [ebp+var_24]
lea     eax, [ebx+10h]
pop     edi
pop     esi
mov     [ecx], eax
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
xor     esi, esi
jmp     short loc_401503
mov     edi, [ebp+var_18]
mov     ecx, src
lea     eax, [ebp+src]
mov     edx, 10h
push    eax
test    esi, esi
jz      short loc_401518
mov     ecx, eax
call    sub_4018b0
add     esp, 4
test    eax, eax
jnz     loc_4015ff
mov     eax, esi
shl     eax, 4
xor     ecx, ecx
lea     edx, [eax+edi]
mov     edi, [ebp+var_20]
mov     ebx, edi
sub     ebx, [ebp+var_18]
add     edi, eax
lea     esp, [esp+0]
mov     al, [edx+ebx]
xor     al, [ebp+ecx+src]
add     ecx, 4
mov     [edx], al
mov     al, [edi+ecx-3]
xor     al, byte ptr [ebp+ecx+var_18+1]
lea     edx, [edx+4]
mov     [edx-3], al
mov     al, [edi+ecx-2]
xor     al, byte ptr [ebp+ecx+var_18+2]
mov     [edx-2], al
mov     al, [edi+ecx-1]
xor     al, byte ptr [ebp+ecx+var_18+3]
mov     [edx-1], al
cmp     ecx, 10h
jb      short loc_401540
add     [ebp+var_1c], 10h
inc     esi
cmp     esi, 0bh
jb      short loc_401500
mov     ecx, src
lea     eax, [ebp+src]
mov     edx, 10h
push    eax
test    esi, esi
jz      short loc_401594
mov     ecx, eax
call    sub_4018b0
add     esp, 4
test    eax, eax
jnz     short loc_4015ff
mov     ebx, [ebp+var_20]
shl     esi, 4
add     esi, [ebp+var_18]
xor     ecx, ecx
sub     ebx, [ebp+var_18]
mov     edx, esi
mov     al, [edx+ebx]
xor     al, [ebp+ecx+src]
inc     ecx
mov     [edx], al
inc     edx
cmp     ecx, 0eh
jb      short loc_4015b0
mov     dl, byte_43d17c
mov     ebx, [ebp+var_1c]
mov     ecx, 0eh
mov     edi, edi
mov     al, [ebp+ecx+src]
xor     al, dl
mov     [esi+ecx], al
inc     ecx
cmp     ecx, 10h
jb      short loc_4015d0
mov     ecx, [ebp+var_24]
lea     eax, [ebx+10h]
pop     edi
pop     esi
mov     [ecx], eax
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+var_1c], eax
mov     dword ptr [eax], 0
mov     eax, dword_43d178
mov     ebx, ecx
push    edi
mov     [ebp+var_24], ebx
mov     [ebp+var_20], esi
cmp     eax, 3
ja      def_401658
jmp     ds:jpt_401658[eax*4]
sub     esi, ebx
mov     edi, 10h
lea     edx, [esi+ebx]
mov     ecx, ebx
call    sub_402ec0
add     ebx, 10h
dec     edi
jnz     short loc_401666
mov     eax, [ebp+var_1c]
pop     edi
pop     esi
mov     dword ptr [eax], 100h
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, src
sub     eax, esi
mov     [ebp+var_2c], eax
mov     eax, esi
lea     ecx, [ebp+src]
xor     edi, edi
sub     eax, ecx
mov     [ebp+var_18], eax
mov     eax, [ebp+var_24]
mov     ebx, edi
shl     ebx, 4
add     eax, ebx
lea     edx, [ebp+src]
mov     ecx, eax
mov     [ebp+var_28], eax
call    sub_402ec0
xor     eax, eax
test    edi, edi
jnz     short loc_4016de
mov     esi, [ebp+var_18]
mov     ecx, [ebp+var_2c]
lea     edx, [ebp+src]
add     edx, eax
add     esi, edx
mov     cl, [esi+ecx]
xor     cl, [edx]
mov     [esi], cl
mov     esi, [ebp+var_20]
jmp     short loc_4016ef
mov     ecx, [ebp+var_28]
mov     dl, [ecx+eax-10h]
xor     dl, byte ptr [ebp+eax+src]
lea     ecx, [ebx+esi]
mov     [ecx+eax], dl
inc     eax
cmp     eax, 10h
jb      short loc_4016c1
inc     edi
cmp     edi, 10h
jb      short loc_4016a8
mov     eax, [ebp+var_1c]
pop     edi
pop     esi
mov     dword ptr [eax], 100h
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
xor     esi, esi
lea     esp, [esp+0]
lea     eax, [ebp+src]
mov     edx, 10h
push    eax
test    esi, esi
jnz     short loc_401735
mov     ecx, src
jmp     short loc_40173f
mov     ecx, esi
shl     ecx, 4
add     ecx, 0fffffff0h
add     ecx, ebx
call    sub_4018b0
add     esp, 4
test    eax, eax
jnz     loc_40188a
mov     edi, [ebp+var_20]
mov     eax, esi
add     eax, eax
mov     [ebp+var_18], ebx
xor     ecx, ecx
sub     [ebp+var_18], edi
lea     edx, [edi+eax*8]
lea     edi, [ebx+eax*8]
mov     ebx, [ebp+var_18]
jmp     short loc_401770
movzx   eax, byte ptr [ebx+edx]
xor     al, byte ptr [ebp+ecx+src]
add     ecx, 4
mov     [edx], al
movzx   eax, byte ptr [edi+ecx-3]
xor     al, byte ptr [ebp+ecx+var_18+1]
lea     edx, [edx+4]
mov     [edx-3], al
movzx   eax, byte ptr [edi+ecx-2]
xor     al, byte ptr [ebp+ecx+var_18+2]
mov     [edx-2], al
movzx   eax, byte ptr [edi+ecx-1]
xor     al, byte ptr [ebp+ecx+var_18+3]
mov     [edx-1], al
cmp     ecx, 10h
jb      short loc_401770
mov     ebx, [ebp+var_24]
inc     esi
cmp     esi, 10h
jb      loc_401720
mov     eax, [ebp+var_1c]
pop     edi
pop     esi
mov     dword ptr [eax], 100h
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
xor     edi, edi
jmp     short loc_4017e0
mov     ecx, src
lea     eax, [ebp+src]
mov     edx, 10h
push    eax
test    edi, edi
jz      short loc_4017f5
mov     ecx, eax
call    sub_4018b0
add     esp, 4
test    eax, eax
jnz     loc_40188a
mov     eax, edi
add     eax, eax
mov     [ebp+var_18], ebx
xor     ecx, ecx
sub     [ebp+var_18], esi
lea     edx, [esi+eax*8]
lea     esi, [ebx+eax*8]
mov     ebx, [ebp+var_18]
lea     ebx, [ebx+0]
movzx   eax, byte ptr [ebx+edx]
xor     al, byte ptr [ebp+ecx+src]
add     ecx, 4
mov     [edx], al
movzx   eax, byte ptr [esi+ecx-3]
xor     al, byte ptr [ebp+ecx+var_18+1]
lea     edx, [edx+4]
mov     [edx-3], al
movzx   eax, byte ptr [esi+ecx-2]
xor     al, byte ptr [ebp+ecx+var_18+2]
mov     [edx-2], al
movzx   eax, byte ptr [esi+ecx-1]
xor     al, byte ptr [ebp+ecx+var_18+3]
mov     [edx-1], al
cmp     ecx, 10h
jb      short loc_401820
mov     ebx, [ebp+var_24]
mov     esi, [ebp+var_20]
inc     edi
cmp     edi, 10h
jb      loc_4017e0
mov     eax, [ebp+var_1c]
pop     edi
pop     esi
mov     dword ptr [eax], 100h
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, edx
mov     [ebp+var_28], eax
xor     eax, eax
push    edi
test    esi, esi
jz      short loc_4018e1
push    esi
push    ecx
lea     eax, [ebp+var_24]
push    eax
call    _memmove_0
add     esp, 0ch
mov     eax, esi
cmp     eax, 10h
jnb     short loc_40190d
lea     edi, [ebp+var_24]
add     edi, eax
mov     ecx, 10h
sub     ecx, eax
movzx   eax, byte_43d17c
imul    eax, 1010101h
mov     esi, ecx
shr     ecx, 2
rep stosd
mov     ecx, esi
and     ecx, 3
rep stosb
mov     edi, dword_43d174
movq    xmm0, [ebp+var_24]
mov     eax, [edi]
mov     ebx, dword_43d184
movq    [ebp+var_14], xmm0
xor     dword ptr [ebp+var_14], eax
mov     eax, [edi+4]
xor     dword ptr [ebp+var_14+4], eax
movq    xmm0, [ebp+var_1c]
mov     eax, [edi+8]
movq    [ebp+var_c], xmm0
xor     dword ptr [ebp+var_c], eax
mov     eax, [edi+0ch]
xor     dword ptr [ebp+var_c+4], eax
cmp     ebx, 1
jbe     loc_401a0e
lea     esi, [edi+18h]
lea     edi, [ebx-1]
lea     ecx, [ebp+var_14]
call    sub_401ae0
movq    xmm0, [ebp+var_14]
movq    [ebp+var_24], xmm0
movq    xmm0, [ebp+var_c]
movzx   eax, byte ptr [ebp+var_24]
mov     byte ptr [ebp+var_14], al
movzx   eax, byte ptr [ebp+var_24+5]
mov     byte ptr [ebp+var_14+1], al
movq    [ebp+var_1c], xmm0
movzx   eax, byte ptr [ebp+var_1c+2]
mov     byte ptr [ebp+var_14+2], al
movzx   eax, byte ptr [ebp+var_1c+7]
mov     byte ptr [ebp+var_14+3], al
movzx   eax, byte ptr [ebp+var_24+4]
mov     byte ptr [ebp+var_14+4], al
movzx   eax, byte ptr [ebp+var_1c+1]
mov     byte ptr [ebp+var_14+5], al
movzx   eax, byte ptr [ebp+var_1c+6]
mov     byte ptr [ebp+var_14+6], al
movzx   eax, byte ptr [ebp+var_24+3]
mov     byte ptr [ebp+var_14+7], al
movzx   eax, byte ptr [ebp+var_1c]
mov     byte ptr [ebp+var_c], al
movzx   eax, byte ptr [ebp+var_1c+5]
mov     byte ptr [ebp+var_c+1], al
movzx   eax, byte ptr [ebp+var_24+2]
mov     byte ptr [ebp+var_c+2], al
movzx   eax, byte ptr [ebp+var_24+7]
mov     byte ptr [ebp+var_c+3], al
movzx   eax, byte ptr [ebp+var_1c+4]
mov     byte ptr [ebp+var_c+4], al
movzx   eax, byte ptr [ebp+var_24+1]
mov     byte ptr [ebp+var_c+5], al
movzx   eax, byte ptr [ebp+var_24+6]
mov     byte ptr [ebp+var_c+6], al
movzx   eax, byte ptr [ebp+var_1c+3]
lea     ecx, [ebp+var_14]
mov     byte ptr [ebp+var_c+7], al
call    sub_401b80
mov     eax, [esi-8]
xor     dword ptr [ebp+var_14], eax
mov     eax, [esi-4]
xor     dword ptr [ebp+var_14+4], eax
mov     eax, [esi]
xor     dword ptr [ebp+var_c], eax
mov     eax, [esi+4]
xor     dword ptr [ebp+var_c+4], eax
lea     esi, [esi+10h]
dec     edi
jnz     loc_401953
mov     edi, dword_43d174
lea     ecx, [ebp+var_14]
call    sub_401ae0
movq    xmm0, [ebp+var_14]
movq    [ebp+var_24], xmm0
movq    xmm0, [ebp+var_c]
movzx   eax, byte ptr [ebp+var_24]
mov     byte ptr [ebp+var_14], al
movzx   eax, byte ptr [ebp+var_24+5]
mov     byte ptr [ebp+var_14+1], al
movq    [ebp+var_1c], xmm0
movzx   eax, byte ptr [ebp+var_1c+2]
mov     byte ptr [ebp+var_14+2], al
movzx   eax, byte ptr [ebp+var_1c+7]
mov     byte ptr [ebp+var_14+3], al
movzx   eax, byte ptr [ebp+var_24+4]
mov     byte ptr [ebp+var_14+4], al
movzx   eax, byte ptr [ebp+var_1c+1]
mov     byte ptr [ebp+var_14+5], al
movzx   eax, byte ptr [ebp+var_1c+6]
mov     byte ptr [ebp+var_14+6], al
movzx   eax, byte ptr [ebp+var_24+3]
mov     byte ptr [ebp+var_14+7], al
movzx   eax, byte ptr [ebp+var_1c]
mov     byte ptr [ebp+var_c], al
movzx   eax, byte ptr [ebp+var_1c+5]
mov     byte ptr [ebp+var_c+1], al
movzx   eax, byte ptr [ebp+var_24+2]
mov     byte ptr [ebp+var_c+2], al
movzx   eax, byte ptr [ebp+var_24+7]
mov     byte ptr [ebp+var_c+3], al
movzx   eax, byte ptr [ebp+var_1c+4]
mov     byte ptr [ebp+var_c+4], al
movzx   eax, byte ptr [ebp+var_24+1]
mov     byte ptr [ebp+var_c+5], al
movzx   eax, byte ptr [ebp+var_24+6]
mov     ecx, [ebp+var_4]
mov     byte ptr [ebp+var_c+6], al
movzx   eax, byte ptr [ebp+var_1c+3]
mov     byte ptr [ebp+var_c+7], al
add     ebx, ebx
xor     ecx, ebp
mov     eax, [edi+ebx*8]
xor     dword ptr [ebp+var_14], eax
mov     eax, [edi+ebx*8+4]
xor     dword ptr [ebp+var_14+4], eax
mov     eax, [edi+ebx*8+8]
xor     dword ptr [ebp+var_c], eax
mov     eax, [edi+ebx*8+0ch]
xor     dword ptr [ebp+var_c+4], eax
mov     eax, [ebp+var_28]
movq    xmm0, [ebp+var_14]
movq    qword ptr [eax], xmm0
movq    xmm0, [ebp+var_c]
pop     edi
pop     esi
movq    qword ptr [eax+8], xmm0
xor     eax, eax
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
movq    xmm0, qword ptr [ecx]
push    ebx
push    esi
push    edi
lea     esi, [ebp+var_14]
lea     edi, [ebp+var_14+1]
lea     ebx, [ebp+var_14+2]
lea     eax, [ebp+var_14+3]
movq    [ebp+var_14], xmm0
movq    xmm0, qword ptr [ecx+8]
sub     esi, ecx
sub     edi, ecx
sub     ebx, ecx
sub     eax, ecx
movq    [ebp+var_c], xmm0
mov     [ebp+var_18], eax
mov     edx, 4
movzx   eax, byte ptr [esi+ecx]
lea     ecx, [ecx+4]
movzx   eax, byte_4356e8[eax]
mov     [ecx-4], al
movzx   eax, byte ptr [edi+ecx-4]
movzx   eax, byte_4356e8[eax]
mov     [ecx-3], al
movzx   eax, byte ptr [ebx+ecx-4]
movzx   eax, byte_4356e8[eax]
mov     [ecx-2], al
mov     eax, [ebp+var_18]
movzx   eax, byte ptr [eax+ecx-4]
movzx   eax, byte_4356e8[eax]
mov     [ecx-1], al
dec     edx
jnz     short loc_401b22
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, ecx
movq    xmm0, qword ptr [esi]
movq    [ebp+var_14], xmm0
mov     dh, byte ptr [ebp+var_14]
movq    xmm0, qword ptr [esi+8]
mov     ah, dh
add     ah, ah
mov     al, dh
and     al, 80h
movq    [ebp+var_c], xmm0
mov     ch, ah
mov     [ebp+var_16], al
jz      short loc_401bbc
xor     ch, 1bh
mov     al, byte ptr [ebp+var_14+1]
mov     bl, al
add     bl, bl
and     al, 80h
mov     bh, bl
mov     [ebp+var_15], al
jz      short loc_401bcf
xor     bh, 1bh
mov     dl, byte ptr [ebp+var_14+3]
mov     cl, byte ptr [ebp+var_14+2]
mov     al, dl
xor     al, cl
xor     al, byte ptr [ebp+var_14+1]
xor     al, bh
xor     al, ch
cmp     [ebp+var_15], 0
mov     [esi], al
jz      short loc_401beb
xor     bl, 1bh
mov     ch, cl
add     ch, ch
mov     al, cl
and     al, 80h
mov     bh, ch
mov     [ebp+var_15], al
jz      short loc_401bfd
xor     bh, 1bh
mov     al, dl
xor     al, cl
xor     al, dh
xor     al, bh
xor     al, bl
cmp     [ebp+var_15], 0
mov     [esi+1], al
jz      short loc_401c13
xor     ch, 1bh
mov     al, dl
add     al, al
mov     bl, dl
and     bl, 80h
mov     bh, al
mov     [ebp+var_15], bl
jz      short loc_401c26
xor     bh, 1bh
mov     bl, byte ptr [ebp+var_14+1]
xor     dl, bl
xor     dl, dh
xor     dl, bh
xor     dl, ch
cmp     [ebp+var_16], 0
mov     [esi+2], dl
jz      short loc_401c3d
xor     ah, 1bh
xor     dh, ah
cmp     [ebp+var_15], 0
jz      short loc_401c47
xor     al, 1bh
xor     cl, bl
xor     cl, al
xor     cl, dh
mov     dh, byte ptr [ebp+var_14+4]
mov     ch, dh
add     ch, ch
mov     al, dh
and     al, 80h
mov     [esi+3], cl
mov     ah, ch
mov     [ebp+var_16], al
jz      short loc_401c65
xor     ah, 1bh
mov     al, byte ptr [ebp+var_14+5]
mov     bl, al
add     bl, bl
and     al, 80h
mov     bh, bl
mov     [ebp+var_15], al
jz      short loc_401c78
xor     bh, 1bh
mov     dl, byte ptr [ebp+var_14+7]
mov     cl, byte ptr [ebp+var_14+6]
mov     al, dl
xor     al, cl
xor     al, byte ptr [ebp+var_14+5]
xor     al, bh
xor     al, ah
cmp     [ebp+var_15], 0
mov     [esi+4], al
jz      short loc_401c95
xor     bl, 1bh
mov     ah, cl
add     ah, ah
mov     al, cl
and     al, 80h
mov     bh, ah
mov     [ebp+var_15], al
jz      short loc_401ca7
xor     bh, 1bh
mov     al, dl
xor     al, cl
xor     al, dh
xor     al, bh
xor     al, bl
cmp     [ebp+var_15], 0
mov     [esi+5], al
jz      short loc_401cbd
xor     ah, 1bh
mov     al, dl
add     al, al
mov     bl, dl
and     bl, 80h
mov     bh, al
mov     [ebp+var_15], bl
jz      short loc_401cd0
xor     bh, 1bh
mov     bl, byte ptr [ebp+var_14+5]
xor     dl, bl
xor     dl, dh
xor     dl, bh
xor     dl, ah
cmp     [ebp+var_16], 0
mov     [esi+6], dl
jz      short loc_401ce7
xor     ch, 1bh
xor     dh, ch
cmp     [ebp+var_15], 0
jz      short loc_401cf1
xor     al, 1bh
xor     cl, bl
xor     cl, al
xor     cl, dh
mov     dh, byte ptr [ebp+var_c]
mov     ch, dh
add     ch, ch
mov     al, dh
and     al, 80h
mov     [esi+7], cl
mov     ah, ch
mov     [ebp+var_16], al
jz      short loc_401d0f
xor     ah, 1bh
mov     al, byte ptr [ebp+var_c+1]
mov     bl, al
add     bl, bl
and     al, 80h
mov     bh, bl
mov     [ebp+var_15], al
jz      short loc_401d22
xor     bh, 1bh
mov     dl, byte ptr [ebp+var_c+3]
mov     cl, byte ptr [ebp+var_c+2]
mov     al, dl
xor     al, cl
xor     al, byte ptr [ebp+var_c+1]
xor     al, bh
xor     al, ah
cmp     [ebp+var_15], 0
mov     [esi+8], al
jz      short loc_401d3f
xor     bl, 1bh
mov     ah, cl
add     ah, ah
mov     al, cl
and     al, 80h
mov     bh, ah
mov     [ebp+var_15], al
jz      short loc_401d51
xor     bh, 1bh
mov     al, dl
xor     al, cl
xor     al, dh
xor     al, bh
xor     al, bl
cmp     [ebp+var_15], 0
mov     [esi+9], al
jz      short loc_401d67
xor     ah, 1bh
mov     al, dl
add     al, al
mov     bl, dl
and     bl, 80h
mov     bh, al
mov     [ebp+var_15], bl
jz      short loc_401d7a
xor     bh, 1bh
mov     bl, byte ptr [ebp+var_c+1]
xor     dl, bl
xor     dl, dh
xor     dl, bh
xor     dl, ah
cmp     [ebp+var_16], 0
mov     [esi+0ah], dl
jz      short loc_401d91
xor     ch, 1bh
xor     dh, ch
cmp     [ebp+var_15], 0
jz      short loc_401d9b
xor     al, 1bh
mov     ah, byte ptr [ebp+var_c+4]
xor     cl, bl
xor     cl, al
xor     cl, dh
mov     dh, ah
add     dh, dh
mov     al, ah
and     al, 80h
mov     [esi+0bh], cl
mov     ch, dh
mov     [ebp+var_17], al
jz      short loc_401db9
xor     ch, 1bh
mov     bh, byte ptr [ebp+var_c+5]
mov     bl, bh
add     bl, bl
mov     cl, bh
mov     al, bl
and     cl, 80h
mov     [ebp+var_16], al
mov     [ebp+var_15], cl
jz      short loc_401dd4
xor     al, 1bh
mov     [ebp+var_16], al
mov     dl, byte ptr [ebp+var_c+7]
mov     cl, byte ptr [ebp+var_c+6]
mov     al, dl
xor     al, cl
xor     al, bh
xor     al, [ebp+var_16]
xor     al, ch
cmp     [ebp+var_15], 0
mov     [esi+0ch], al
jz      short loc_401df1
xor     bl, 1bh
mov     ch, cl
add     ch, ch
mov     [ebp+var_16], cl
and     [ebp+var_16], 80h
mov     al, ch
mov     [ebp+var_15], ch
jz      short loc_401e08
xor     al, 1bh
mov     [ebp+var_15], al
mov     al, dl
xor     al, cl
xor     al, ah
xor     al, [ebp+var_15]
xor     al, bl
cmp     [ebp+var_16], 0
mov     [esi+0dh], al
jz      short loc_401e1f
xor     ch, 1bh
mov     al, dl
add     al, al
mov     [ebp+var_16], dl
and     [ebp+var_16], 80h
mov     bl, al
jz      short loc_401e31
xor     bl, 1bh
xor     dl, bh
xor     dl, ah
xor     dl, bl
xor     dl, ch
cmp     [ebp+var_17], 0
mov     [esi+0eh], dl
jz      short loc_401e45
xor     dh, 1bh
xor     ah, dh
cmp     [ebp+var_16], 0
jz      short loc_401e4f
xor     al, 1bh
xor     cl, bh
xor     cl, al
xor     cl, ah
mov     [esi+0fh], cl
mov     ecx, [ebp+var_4]
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
movq    xmm0, qword ptr [ecx]
push    ebx
push    esi
push    edi
lea     esi, [ebp+var_14]
lea     edi, [ebp+var_14+1]
lea     ebx, [ebp+var_14+2]
lea     eax, [ebp+var_14+3]
movq    [ebp+var_14], xmm0
movq    xmm0, qword ptr [ecx+8]
sub     esi, ecx
sub     edi, ecx
sub     ebx, ecx
sub     eax, ecx
movq    [ebp+var_c], xmm0
mov     [ebp+var_18], eax
mov     edx, 4
movzx   eax, byte ptr [esi+ecx]
lea     ecx, [ecx+4]
movzx   eax, byte_4357e8[eax]
mov     [ecx-4], al
movzx   eax, byte ptr [edi+ecx-4]
movzx   eax, byte_4357e8[eax]
mov     [ecx-3], al
movzx   eax, byte ptr [ebx+ecx-4]
movzx   eax, byte_4357e8[eax]
mov     [ecx-2], al
mov     eax, [ebp+var_18]
movzx   eax, byte ptr [eax+ecx-4]
movzx   eax, byte_4357e8[eax]
mov     [ecx-1], al
dec     edx
jnz     short loc_401eb2
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, ecx
movq    xmm0, qword ptr [esi]
movq    [ebp+var_14], xmm0
mov     al, byte ptr [ebp+var_14]
movq    xmm0, qword ptr [esi+8]
mov     dh, al
add     dh, dh
mov     bl, al
and     bl, 80h
movq    [ebp+var_c], xmm0
mov     cl, dh
mov     [ebp+var_1c], bl
jz      short loc_401f4d
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_401f57
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_401f62
xor     dl, 1bh
mov     al, dh
test    bl, bl
jz      short loc_401f6a
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_401f75
xor     cl, 1bh
mov     al, dh
test    bl, bl
jz      short loc_401f7d
xor     al, 1bh
mov     ah, byte ptr [ebp+var_14+1]
xor     cl, al
mov     bh, ah
xor     cl, dl
add     bh, bh
mov     bl, ah
and     bl, 80h
mov     dl, bh
mov     [ebp+var_18], bl
jz      short loc_401f97
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_401fa1
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_401fac
xor     dl, 1bh
mov     al, bh
test    bl, bl
jz      short loc_401fb4
xor     al, 1bh
xor     ah, dl
xor     ah, al
mov     al, byte ptr [ebp+var_14+2]
mov     ch, al
add     ch, ch
and     al, 80h
mov     [ebp+var_15], ch
mov     dl, ch
mov     [ebp+var_19], al
jz      short loc_401fce
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_401fd8
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_401fe3
xor     bl, 1bh
cmp     [ebp+var_19], 0
mov     al, ch
jz      short loc_401fed
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_401ff8
xor     dl, 1bh
xor     dl, byte ptr [ebp+var_14+2]
mov     ch, byte ptr [ebp+var_14+3]
xor     dl, bl
mov     al, ch
add     al, al
mov     bl, ch
and     bl, 80h
mov     [ebp+var_17], al
mov     [ebp+var_16], bl
jz      short loc_402013
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_40201e
xor     bl, 1bh
mov     al, bl
add     al, al
test    bl, bl
jns     short loc_402028
xor     al, 1bh
xor     al, ch
xor     al, dl
xor     al, ah
xor     al, cl
cmp     [ebp+var_1c], 0
mov     [esi], al
mov     cl, dh
jz      short loc_40203d
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402047
xor     al, 1bh
mov     ch, al
add     ch, ch
test    al, al
jns     short loc_402052
xor     ch, 1bh
mov     dl, [ebp+var_18]
xor     ch, byte ptr [ebp+var_14]
mov     cl, bh
test    dl, dl
jz      short loc_402061
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_40206b
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402076
xor     cl, 1bh
mov     al, bh
test    dl, dl
jz      short loc_40207e
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_402089
xor     ah, 1bh
mov     al, bh
test    dl, dl
jz      short loc_402091
xor     al, 1bh
mov     bl, [ebp+var_19]
mov     dl, [ebp+var_15]
xor     ah, al
xor     ah, cl
mov     cl, dl
test    bl, bl
jz      short loc_4020a4
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4020ae
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_4020b9
xor     cl, 1bh
mov     al, dl
test    bl, bl
jz      short loc_4020c1
xor     al, 1bh
mov     dl, [ebp+var_17]
xor     cl, al
xor     cl, byte ptr [ebp+var_14+2]
cmp     [ebp+var_16], 0
jz      short loc_4020d2
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_4020dc
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_4020e7
xor     bl, 1bh
cmp     [ebp+var_16], 0
mov     dl, [ebp+var_17]
jz      short loc_4020f3
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_4020fd
xor     al, 1bh
mov     dl, [ebp+var_1c]
xor     al, bl
xor     al, cl
xor     al, ah
xor     al, ch
xor     al, byte ptr [ebp+var_14+3]
mov     cl, dh
mov     [esi+1], al
test    dl, dl
jz      short loc_402117
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402121
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_40212c
xor     cl, 1bh
mov     al, dh
test    dl, dl
jz      short loc_402134
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_40213f
xor     bl, 1bh
xor     bl, cl
xor     bl, byte ptr [ebp+var_14]
cmp     [ebp+var_18], 0
mov     cl, bh
jz      short loc_40214f
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402159
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_402164
xor     ah, 1bh
mov     dl, [ebp+var_19]
xor     ah, byte ptr [ebp+var_14+1]
mov     ch, [ebp+var_15]
mov     cl, ch
test    dl, dl
jz      short loc_402176
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402180
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_40218b
xor     cl, 1bh
mov     al, ch
test    dl, dl
jz      short loc_402193
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_40219e
xor     dl, 1bh
cmp     [ebp+var_19], 0
mov     al, ch
jz      short loc_4021a8
xor     al, 1bh
mov     ch, [ebp+var_17]
xor     dl, al
xor     dl, cl
cmp     [ebp+var_16], 0
mov     al, ch
jz      short loc_4021b9
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_4021c4
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4021ce
xor     al, 1bh
cmp     [ebp+var_16], 0
mov     cl, ch
jz      short loc_4021d9
xor     cl, 1bh
xor     al, cl
xor     al, dl
mov     dl, [ebp+var_1c]
xor     al, ah
xor     al, bl
xor     al, byte ptr [ebp+var_14+3]
mov     cl, dh
mov     [esi+2], al
test    dl, dl
jz      short loc_4021f3
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4021fd
xor     al, 1bh
mov     ch, al
add     ch, ch
test    al, al
jns     short loc_402208
xor     ch, 1bh
test    dl, dl
jz      short loc_40220f
xor     dh, 1bh
mov     dl, [ebp+var_18]
xor     ch, dh
xor     ch, byte ptr [ebp+var_14]
mov     cl, bh
test    dl, dl
jz      short loc_402220
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_40222a
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402235
xor     cl, 1bh
test    dl, dl
jz      short loc_40223c
xor     bh, 1bh
mov     dl, bh
add     dl, dl
test    bh, bh
jns     short loc_402247
xor     dl, 1bh
xor     dl, cl
xor     dl, byte ptr [ebp+var_14+1]
cmp     [ebp+var_19], 0
mov     cl, [ebp+var_15]
jz      short loc_402258
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402262
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_40226d
xor     cl, 1bh
mov     bh, [ebp+var_16]
xor     cl, byte ptr [ebp+var_14+2]
mov     dh, [ebp+var_17]
mov     bl, dh
test    bh, bh
jz      short loc_40227f
xor     bl, 1bh
mov     al, bl
add     al, al
test    bl, bl
jns     short loc_402289
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_402294
xor     bl, 1bh
mov     ah, dh
test    bh, bh
jz      short loc_40229d
xor     ah, 1bh
mov     al, ah
add     al, al
test    ah, ah
jns     short loc_4022a7
xor     al, 1bh
test    bh, bh
jz      short loc_4022ae
xor     dh, 1bh
xor     al, dh
xor     al, bl
xor     al, cl
xor     al, dl
xor     al, ch
mov     [esi+3], al
mov     al, byte ptr [ebp+var_14+4]
mov     ch, al
add     ch, ch
mov     bl, al
and     bl, 80h
mov     [ebp+var_15], al
mov     [ebp+var_1d], ch
mov     cl, ch
mov     [ebp+var_18], bl
jz      short loc_4022d7
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4022e1
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_4022ec
xor     dl, 1bh
mov     al, ch
test    bl, bl
jz      short loc_4022f4
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_4022ff
xor     cl, 1bh
mov     al, ch
test    bl, bl
jz      short loc_402307
xor     al, 1bh
mov     ah, byte ptr [ebp+var_14+5]
xor     cl, al
mov     dh, ah
xor     cl, dl
add     dh, dh
mov     bl, ah
and     bl, 80h
mov     [ebp+var_1b], ah
mov     dl, dh
mov     [ebp+var_1c], bl
jz      short loc_402324
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_40232e
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_402339
xor     dl, 1bh
mov     al, dh
test    bl, bl
jz      short loc_402341
xor     al, 1bh
xor     dl, al
mov     al, byte ptr [ebp+var_14+6]
mov     bh, al
add     bh, bh
xor     dl, ah
mov     [ebp+var_1a], al
and     al, 80h
mov     bl, bh
mov     [ebp+var_19], al
jz      short loc_40235b
xor     bl, 1bh
mov     al, bl
add     al, al
test    bl, bl
jns     short loc_402365
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_402370
xor     ah, 1bh
cmp     [ebp+var_19], 0
mov     al, bh
jz      short loc_40237a
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_402385
xor     bl, 1bh
xor     bl, ah
mov     ah, byte ptr [ebp+var_14+7]
xor     bl, [ebp+var_1a]
mov     al, ah
add     al, al
and     ah, 80h
mov     [ebp+var_16], al
mov     [ebp+var_17], ah
jz      short loc_40239e
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_4023a9
xor     ah, 1bh
mov     al, ah
add     al, al
test    ah, ah
jns     short loc_4023b3
xor     al, 1bh
xor     al, bl
xor     al, dl
xor     al, cl
xor     al, byte ptr [ebp+var_14+7]
cmp     [ebp+var_18], 0
mov     [esi+4], al
mov     cl, ch
jz      short loc_4023ca
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4023d4
xor     al, 1bh
mov     ch, al
add     ch, ch
test    al, al
jns     short loc_4023df
xor     ch, 1bh
mov     dl, [ebp+var_1c]
xor     ch, [ebp+var_15]
mov     cl, dh
test    dl, dl
jz      short loc_4023ee
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4023f8
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402403
xor     cl, 1bh
mov     al, dh
test    dl, dl
jz      short loc_40240b
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_402416
xor     ah, 1bh
mov     al, dh
test    dl, dl
jz      short loc_40241e
xor     al, 1bh
mov     dl, [ebp+var_19]
xor     ah, al
xor     ah, cl
mov     cl, bh
test    dl, dl
jz      short loc_40242e
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402438
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402443
xor     cl, 1bh
mov     al, bh
test    dl, dl
jz      short loc_40244b
xor     al, 1bh
mov     dl, [ebp+var_16]
xor     cl, al
xor     cl, [ebp+var_1a]
cmp     [ebp+var_17], 0
jz      short loc_40245c
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_402466
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_402471
xor     bl, 1bh
cmp     [ebp+var_17], 0
mov     dl, [ebp+var_16]
jz      short loc_40247d
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_402487
xor     al, 1bh
mov     dl, [ebp+var_18]
xor     al, bl
xor     al, cl
xor     al, ah
xor     al, ch
xor     al, byte ptr [ebp+var_14+7]
mov     ch, [ebp+var_1d]
mov     [esi+5], al
mov     cl, ch
test    dl, dl
jz      short loc_4024a4
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4024ae
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_4024b9
xor     cl, 1bh
mov     al, ch
test    dl, dl
jz      short loc_4024c1
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_4024cc
xor     bl, 1bh
xor     bl, cl
xor     bl, [ebp+var_15]
cmp     [ebp+var_1c], 0
mov     cl, dh
jz      short loc_4024dc
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4024e6
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_4024f1
xor     ah, 1bh
xor     ah, [ebp+var_1b]
cmp     [ebp+var_19], 0
mov     cl, bh
jz      short loc_4024ff
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402509
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_402514
xor     dl, 1bh
cmp     [ebp+var_19], 0
mov     cl, bh
jz      short loc_40251f
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402529
xor     al, 1bh
cmp     [ebp+var_19], 0
mov     cl, bh
jz      short loc_402534
xor     cl, 1bh
xor     al, cl
xor     al, dl
cmp     [ebp+var_17], 0
mov     dl, [ebp+var_16]
jz      short loc_402544
xor     dl, 1bh
mov     cl, dl
add     cl, cl
test    dl, dl
jns     short loc_40254f
xor     cl, 1bh
mov     dl, cl
add     dl, dl
test    cl, cl
jns     short loc_40255a
xor     dl, 1bh
cmp     [ebp+var_17], 0
mov     cl, [ebp+var_16]
jz      short loc_402566
xor     cl, 1bh
xor     al, ah
xor     al, bl
xor     al, byte ptr [ebp+var_14+7]
xor     al, dl
mov     dl, [ebp+var_18]
xor     al, cl
mov     [esi+6], al
mov     cl, ch
test    dl, dl
jz      short loc_402580
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_40258a
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402595
xor     cl, 1bh
test    dl, dl
jz      short loc_40259c
xor     ch, 1bh
mov     al, [ebp+var_15]
mov     dl, [ebp+var_1c]
xor     al, cl
xor     al, ch
mov     [ebp+var_15], al
mov     cl, dh
test    dl, dl
jz      short loc_4025b2
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4025bc
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_4025c7
xor     cl, 1bh
test    dl, dl
jz      short loc_4025ce
xor     dh, 1bh
mov     al, dh
add     al, al
test    dh, dh
jns     short loc_4025d8
xor     al, 1bh
mov     ch, [ebp+var_1b]
xor     ch, al
xor     ch, cl
cmp     [ebp+var_19], 0
jz      short loc_4025e8
xor     bh, 1bh
mov     al, bh
add     al, al
test    bh, bh
jns     short loc_4025f2
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_4025fd
xor     cl, 1bh
mov     dh, [ebp+var_1a]
mov     ah, [ebp+var_17]
mov     bl, [ebp+var_16]
xor     dh, cl
mov     cl, bl
test    ah, ah
jz      short loc_402611
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_40261b
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402626
xor     cl, 1bh
mov     dl, bl
test    ah, ah
jz      short loc_40262f
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_402639
xor     al, 1bh
test    ah, ah
jz      short loc_402640
xor     bl, 1bh
xor     al, bl
xor     al, cl
xor     al, dh
xor     al, ch
xor     al, [ebp+var_15]
mov     [esi+7], al
mov     al, byte ptr [ebp+var_c]
mov     ch, al
add     ch, ch
mov     bl, al
and     bl, 80h
mov     [ebp+var_1b], ch
mov     cl, ch
mov     [ebp+var_1a], bl
jz      short loc_402667
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402671
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_40267c
xor     dl, 1bh
mov     al, ch
test    bl, bl
jz      short loc_402684
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_40268f
xor     cl, 1bh
mov     al, ch
test    bl, bl
jz      short loc_402697
xor     al, 1bh
mov     ah, byte ptr [ebp+var_c+1]
xor     cl, al
mov     dh, ah
xor     cl, dl
add     dh, dh
mov     bl, ah
and     bl, 80h
mov     dl, dh
mov     [ebp+var_18], bl
jz      short loc_4026b1
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_4026bb
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_4026c6
xor     dl, 1bh
mov     al, dh
test    bl, bl
jz      short loc_4026ce
xor     al, 1bh
xor     dl, al
mov     al, byte ptr [ebp+var_c+2]
mov     bh, al
add     bh, bh
xor     dl, ah
and     al, 80h
mov     bl, bh
mov     [ebp+var_17], al
jz      short loc_4026e5
xor     bl, 1bh
mov     al, bl
add     al, al
test    bl, bl
jns     short loc_4026ef
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_4026fa
xor     ah, 1bh
cmp     [ebp+var_17], 0
mov     al, bh
jz      short loc_402704
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_40270f
xor     bl, 1bh
xor     bl, ah
mov     ah, byte ptr [ebp+var_c+3]
xor     bl, byte ptr [ebp+var_c+2]
mov     al, ah
add     al, al
and     ah, 80h
mov     [ebp+var_16], al
mov     [ebp+var_15], ah
jz      short loc_402728
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_402733
xor     ah, 1bh
mov     al, ah
add     al, al
test    ah, ah
jns     short loc_40273d
xor     al, 1bh
xor     al, bl
xor     al, dl
xor     al, cl
xor     al, byte ptr [ebp+var_c+3]
cmp     [ebp+var_1a], 0
mov     [esi+8], al
mov     cl, ch
jz      short loc_402754
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_40275e
xor     al, 1bh
mov     ch, al
add     ch, ch
test    al, al
jns     short loc_402769
xor     ch, 1bh
mov     dl, [ebp+var_18]
xor     ch, byte ptr [ebp+var_c]
mov     cl, dh
test    dl, dl
jz      short loc_402778
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402782
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_40278d
xor     cl, 1bh
mov     al, dh
test    dl, dl
jz      short loc_402795
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_4027a0
xor     ah, 1bh
mov     al, dh
test    dl, dl
jz      short loc_4027a8
xor     al, 1bh
mov     dl, [ebp+var_17]
xor     ah, al
xor     ah, cl
mov     cl, bh
test    dl, dl
jz      short loc_4027b8
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4027c2
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_4027cd
xor     cl, 1bh
mov     al, bh
test    dl, dl
jz      short loc_4027d5
xor     al, 1bh
mov     dl, [ebp+var_16]
xor     cl, al
xor     cl, byte ptr [ebp+var_c+2]
cmp     [ebp+var_15], 0
jz      short loc_4027e6
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_4027f0
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_4027fb
xor     bl, 1bh
cmp     [ebp+var_15], 0
mov     dl, [ebp+var_16]
jz      short loc_402807
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_402811
xor     al, 1bh
mov     dl, [ebp+var_1b]
xor     al, bl
mov     bl, [ebp+var_1a]
xor     al, cl
xor     al, ah
xor     al, ch
xor     al, byte ptr [ebp+var_c+3]
mov     cl, dl
mov     [esi+9], al
test    bl, bl
jz      short loc_40282e
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402838
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402843
xor     cl, 1bh
mov     al, dl
test    bl, bl
jz      short loc_40284b
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_402856
xor     bl, 1bh
xor     bl, cl
xor     bl, byte ptr [ebp+var_c]
cmp     [ebp+var_18], 0
mov     cl, dh
jz      short loc_402866
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402870
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_40287b
xor     ah, 1bh
mov     ch, [ebp+var_17]
xor     ah, byte ptr [ebp+var_c+1]
mov     cl, bh
test    ch, ch
jz      short loc_40288a
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402894
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_40289f
xor     cl, 1bh
mov     al, bh
test    ch, ch
jz      short loc_4028a7
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_4028b2
xor     dl, 1bh
mov     al, bh
test    ch, ch
jz      short loc_4028ba
xor     al, 1bh
mov     ch, [ebp+var_16]
xor     dl, al
xor     dl, cl
cmp     [ebp+var_15], 0
mov     al, ch
jz      short loc_4028cb
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_4028d6
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4028e0
xor     al, 1bh
cmp     [ebp+var_15], 0
mov     cl, ch
jz      short loc_4028eb
xor     cl, 1bh
xor     al, cl
xor     al, dl
mov     dl, [ebp+var_1b]
xor     al, ah
xor     al, bl
xor     al, byte ptr [ebp+var_c+3]
mov     bl, [ebp+var_1a]
mov     [esi+0ah], al
mov     cl, dl
test    bl, bl
jz      short loc_402908
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402912
xor     al, 1bh
mov     ch, al
add     ch, ch
test    al, al
jns     short loc_40291d
xor     ch, 1bh
test    bl, bl
jz      short loc_402924
xor     dl, 1bh
xor     ch, dl
mov     dl, [ebp+var_18]
xor     ch, byte ptr [ebp+var_c]
mov     cl, dh
test    dl, dl
jz      short loc_402935
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_40293f
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_40294a
xor     cl, 1bh
test    dl, dl
jz      short loc_402951
xor     dh, 1bh
mov     dl, dh
add     dl, dl
test    dh, dh
jns     short loc_40295c
xor     dl, 1bh
xor     dl, cl
xor     dl, byte ptr [ebp+var_c+1]
cmp     [ebp+var_17], 0
jz      short loc_40296a
xor     bh, 1bh
mov     al, bh
add     al, al
test    bh, bh
jns     short loc_402974
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_40297f
xor     cl, 1bh
mov     bh, [ebp+var_15]
xor     cl, byte ptr [ebp+var_c+2]
mov     dh, [ebp+var_16]
mov     bl, dh
test    bh, bh
jz      short loc_402991
xor     bl, 1bh
mov     al, bl
add     al, al
test    bl, bl
jns     short loc_40299b
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_4029a6
xor     bl, 1bh
mov     ah, dh
test    bh, bh
jz      short loc_4029af
xor     ah, 1bh
mov     al, ah
add     al, al
test    ah, ah
jns     short loc_4029b9
xor     al, 1bh
test    bh, bh
jz      short loc_4029c0
xor     dh, 1bh
xor     al, dh
xor     al, bl
xor     al, cl
xor     al, dl
xor     al, ch
mov     [esi+0bh], al
mov     al, byte ptr [ebp+var_c+4]
mov     ch, al
add     ch, ch
mov     bl, al
and     bl, 80h
mov     [ebp+var_1b], ch
mov     cl, ch
mov     [ebp+var_1a], bl
jz      short loc_4029e6
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_4029f0
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_4029fb
xor     dl, 1bh
mov     al, ch
test    bl, bl
jz      short loc_402a03
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402a0e
xor     cl, 1bh
mov     al, ch
test    bl, bl
jz      short loc_402a16
xor     al, 1bh
mov     ah, byte ptr [ebp+var_c+5]
xor     cl, al
mov     dh, ah
xor     cl, dl
add     dh, dh
mov     bl, ah
and     bl, 80h
mov     dl, dh
mov     [ebp+var_18], bl
jz      short loc_402a30
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_402a3a
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_402a45
xor     dl, 1bh
mov     al, dh
test    bl, bl
jz      short loc_402a4d
xor     al, 1bh
xor     dl, al
mov     al, byte ptr [ebp+var_c+6]
mov     bh, al
add     bh, bh
xor     dl, ah
and     al, 80h
mov     bl, bh
mov     [ebp+var_17], al
jz      short loc_402a64
xor     bl, 1bh
mov     al, bl
add     al, al
test    bl, bl
jns     short loc_402a6e
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_402a79
xor     ah, 1bh
cmp     [ebp+var_17], 0
mov     al, bh
jz      short loc_402a83
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_402a8e
xor     bl, 1bh
xor     bl, ah
mov     ah, byte ptr [ebp+var_c+7]
xor     bl, byte ptr [ebp+var_c+6]
mov     al, ah
add     al, al
and     ah, 80h
mov     [ebp+var_16], al
mov     [ebp+var_15], ah
jz      short loc_402aa7
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_402ab2
xor     ah, 1bh
mov     al, ah
add     al, al
test    ah, ah
jns     short loc_402abc
xor     al, 1bh
xor     al, bl
xor     al, dl
xor     al, cl
xor     al, byte ptr [ebp+var_c+7]
cmp     [ebp+var_1a], 0
mov     [esi+0ch], al
mov     cl, ch
jz      short loc_402ad3
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402add
xor     al, 1bh
mov     ch, al
add     ch, ch
test    al, al
jns     short loc_402ae8
xor     ch, 1bh
mov     dl, [ebp+var_18]
xor     ch, byte ptr [ebp+var_c+4]
mov     cl, dh
test    dl, dl
jz      short loc_402af7
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402b01
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402b0c
xor     cl, 1bh
mov     al, dh
test    dl, dl
jz      short loc_402b14
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_402b1f
xor     ah, 1bh
mov     al, dh
test    dl, dl
jz      short loc_402b27
xor     al, 1bh
mov     dl, [ebp+var_17]
xor     ah, al
xor     ah, cl
mov     cl, bh
test    dl, dl
jz      short loc_402b37
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402b41
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402b4c
xor     cl, 1bh
mov     al, bh
test    dl, dl
jz      short loc_402b54
xor     al, 1bh
mov     dl, [ebp+var_16]
xor     cl, al
xor     cl, byte ptr [ebp+var_c+6]
cmp     [ebp+var_15], 0
jz      short loc_402b65
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_402b6f
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_402b7a
xor     bl, 1bh
cmp     [ebp+var_15], 0
mov     dl, [ebp+var_16]
jz      short loc_402b86
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_402b90
xor     al, 1bh
mov     dl, [ebp+var_1b]
xor     al, bl
mov     bl, [ebp+var_1a]
xor     al, cl
xor     al, ah
xor     al, ch
xor     al, byte ptr [ebp+var_c+7]
mov     cl, dl
mov     [esi+0dh], al
test    bl, bl
jz      short loc_402bad
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402bb7
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402bc2
xor     cl, 1bh
mov     al, dl
test    bl, bl
jz      short loc_402bca
xor     al, 1bh
mov     bl, al
add     bl, bl
test    al, al
jns     short loc_402bd5
xor     bl, 1bh
xor     bl, cl
xor     bl, byte ptr [ebp+var_c+4]
cmp     [ebp+var_18], 0
mov     cl, dh
jz      short loc_402be5
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402bef
xor     al, 1bh
mov     ah, al
add     ah, ah
test    al, al
jns     short loc_402bfa
xor     ah, 1bh
mov     ch, [ebp+var_17]
xor     ah, byte ptr [ebp+var_c+5]
mov     cl, bh
test    ch, ch
jz      short loc_402c09
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402c13
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402c1e
xor     cl, 1bh
mov     al, bh
test    ch, ch
jz      short loc_402c26
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_402c31
xor     dl, 1bh
mov     al, bh
test    ch, ch
jz      short loc_402c39
xor     al, 1bh
mov     ch, [ebp+var_16]
xor     dl, al
xor     dl, cl
cmp     [ebp+var_15], 0
mov     al, ch
jz      short loc_402c4a
xor     al, 1bh
mov     cl, al
add     cl, cl
test    al, al
jns     short loc_402c55
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402c5f
xor     al, 1bh
cmp     [ebp+var_15], 0
mov     cl, ch
jz      short loc_402c6a
xor     cl, 1bh
xor     al, cl
xor     al, dl
mov     dl, [ebp+var_1b]
xor     al, ah
xor     al, bl
xor     al, byte ptr [ebp+var_c+7]
mov     bl, [ebp+var_1a]
mov     [esi+0eh], al
mov     cl, dl
test    bl, bl
jz      short loc_402c87
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402c91
xor     al, 1bh
mov     ch, al
add     ch, ch
test    al, al
jns     short loc_402c9c
xor     ch, 1bh
test    bl, bl
jz      short loc_402ca3
xor     dl, 1bh
mov     bl, [ebp+var_18]
xor     ch, dl
xor     ch, byte ptr [ebp+var_c+4]
mov     cl, dh
test    bl, bl
jz      short loc_402cb4
xor     cl, 1bh
mov     al, cl
add     al, al
test    cl, cl
jns     short loc_402cbe
xor     al, 1bh
mov     dl, al
add     dl, dl
test    al, al
jns     short loc_402cc9
xor     dl, 1bh
test    bl, bl
jz      short loc_402cd0
xor     dh, 1bh
mov     cl, dh
add     cl, cl
test    dh, dh
jns     short loc_402cdb
xor     cl, 1bh
xor     cl, dl
xor     cl, byte ptr [ebp+var_c+5]
cmp     [ebp+var_17], 0
jz      short loc_402ce9
xor     bh, 1bh
mov     dl, bh
add     dl, dl
test    bh, bh
jns     short loc_402cf4
xor     dl, 1bh
mov     al, dl
add     al, al
test    dl, dl
jns     short loc_402cfe
xor     al, 1bh
mov     bh, [ebp+var_15]
xor     al, byte ptr [ebp+var_c+6]
mov     dh, [ebp+var_16]
mov     bl, dh
test    bh, bh
jz      short loc_402d10
xor     bl, 1bh
mov     dl, bl
add     dl, dl
test    bl, bl
jns     short loc_402d1b
xor     dl, 1bh
mov     bl, dl
add     bl, bl
test    dl, dl
jns     short loc_402d26
xor     bl, 1bh
mov     ah, dh
test    bh, bh
jz      short loc_402d2f
xor     ah, 1bh
mov     dl, ah
add     dl, dl
test    ah, ah
jns     short loc_402d3a
xor     dl, 1bh
test    bh, bh
jz      short loc_402d41
xor     dh, 1bh
xor     al, cl
xor     al, ch
mov     ecx, [ebp+var_4]
xor     al, dl
xor     al, dh
xor     al, bl
mov     [esi+0fh], al
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
mov     ebx, dword_43d174
push    esi
push    edi
mov     edi, dword_43d188
test    edi, edi
jz      short loc_402db9
mov     ecx, block
lea     eax, [ebx+1]
lea     edx, [ecx+3]
sub     ecx, ebx
mov     esi, edi
mov     ebx, ecx
jmp     short loc_402d90
movzx   ecx, byte ptr [edx-3]
mov     [eax-1], cl
movzx   ecx, byte ptr [ebx+eax]
mov     [eax], cl
movzx   ecx, byte ptr [edx-1]
mov     [eax+1], cl
movzx   ecx, byte ptr [edx]
mov     [eax+2], cl
lea     edx, [edx+4]
lea     eax, [eax+4]
dec     esi
jnz     short loc_402d90
mov     ebx, dword_43d174
mov     eax, dword_43d184
inc     eax
imul    eax, dword_43d18c
mov     esi, edi
mov     [ebp+var_18], eax
cmp     edi, eax
jnb     loc_402eaf
mov     [ebp+var_c], ebx
xor     edx, edx
mov     eax, esi
div     edi
mov     ebx, [ebx+esi*4-4]
mov     [ebp+var_10], ebx
mov     ecx, eax
imul    ecx, edi
mov     [ebp+var_14], eax
cmp     ecx, esi
jnz     short loc_402e3f
mov     ecx, ebx
shr     ecx, 8
movzx   eax, cl
mov     edx, ebx
movzx   eax, byte_4356e8[eax]
mov     byte ptr [ebp+var_4], al
shr     edx, 10h
movzx   eax, dl
shr     ebx, 18h
movzx   eax, byte_4356e8[eax]
mov     byte ptr [ebp+var_4+1], al
movzx   eax, byte_4356e8[ebx]
mov     ebx, [ebp+var_14]
mov     byte ptr [ebp+var_4+2], al
mov     eax, [ebp+var_10]
mov     ebx, dword_4356b8[ebx*4]
movzx   eax, al
movzx   eax, byte_4356e8[eax]
mov     byte ptr [ebp+var_4+3], al
xor     ebx, [ebp+var_4]
jmp     short loc_402e8e
cmp     edi, 6
jbe     short loc_402e8e
mov     eax, esi
sub     eax, ecx
cmp     eax, 4
jnz     short loc_402e8e
movzx   eax, bl
movzx   eax, byte_4356e8[eax]
mov     byte ptr [ebp+var_8], al
mov     eax, ebx
shr     eax, 8
movzx   eax, al
movzx   eax, byte_4356e8[eax]
mov     byte ptr [ebp+var_8+1], al
mov     eax, ebx
shr     eax, 10h
movzx   eax, al
shr     ebx, 18h
movzx   eax, byte_4356e8[eax]
mov     byte ptr [ebp+var_8+2], al
movzx   eax, byte_4356e8[ebx]
mov     byte ptr [ebp+var_8+3], al
mov     ebx, [ebp+var_8]
mov     ecx, [ebp+var_c]
inc     esi
mov     eax, [ecx]
xor     eax, ebx
mov     ebx, dword_43d174
add     ecx, 4
mov     [ebx+esi*4-4], eax
mov     [ebp+var_c], ecx
cmp     esi, [ebp+var_18]
jb      loc_402dd6
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
movq    xmm0, qword ptr [ecx]
push    ebx
mov     ebx, dword_43d174
push    esi
mov     esi, dword_43d184
movq    [ebp+var_14], xmm0
movq    xmm0, qword ptr [ecx+8]
mov     ecx, esi
shl     ecx, 4
add     ecx, ebx
movq    [ebp+var_c], xmm0
mov     eax, [ecx]
xor     dword ptr [ebp+var_14], eax
mov     eax, [ecx+4]
xor     dword ptr [ebp+var_14+4], eax
mov     eax, [ecx+8]
xor     dword ptr [ebp+var_c], eax
mov     eax, [ecx+0ch]
xor     dword ptr [ebp+var_c+4], eax
push    edi
lea     edi, [esi-1]
mov     [ebp+var_28], edx
test    edi, edi
jz      loc_402fe5
mov     eax, edi
shl     eax, 4
lea     esi, [ebx+8]
add     esi, eax
jmp     short loc_402f30
movq    xmm0, [ebp+var_14]
movq    [ebp+var_24], xmm0
movq    xmm0, [ebp+var_c]
movzx   eax, byte ptr [ebp+var_24]
mov     byte ptr [ebp+var_14], al
movq    [ebp+var_1c], xmm0
movzx   eax, byte ptr [ebp+var_1c+5]
mov     byte ptr [ebp+var_14+1], al
movzx   eax, byte ptr [ebp+var_1c+2]
mov     byte ptr [ebp+var_14+2], al
movzx   eax, byte ptr [ebp+var_24+7]
mov     byte ptr [ebp+var_14+3], al
movzx   eax, byte ptr [ebp+var_24+4]
mov     byte ptr [ebp+var_14+4], al
movzx   eax, byte ptr [ebp+var_24+1]
mov     byte ptr [ebp+var_14+5], al
movzx   eax, byte ptr [ebp+var_1c+6]
mov     byte ptr [ebp+var_14+6], al
movzx   eax, byte ptr [ebp+var_1c+3]
mov     byte ptr [ebp+var_14+7], al
movzx   eax, byte ptr [ebp+var_1c]
mov     byte ptr [ebp+var_c], al
movzx   eax, byte ptr [ebp+var_24+5]
mov     byte ptr [ebp+var_c+1], al
movzx   eax, byte ptr [ebp+var_24+2]
mov     byte ptr [ebp+var_c+2], al
movzx   eax, byte ptr [ebp+var_1c+7]
mov     byte ptr [ebp+var_c+3], al
movzx   eax, byte ptr [ebp+var_1c+4]
mov     byte ptr [ebp+var_c+4], al
movzx   eax, byte ptr [ebp+var_1c+1]
mov     byte ptr [ebp+var_c+5], al
movzx   eax, byte ptr [ebp+var_24+6]
mov     byte ptr [ebp+var_c+6], al
movzx   eax, byte ptr [ebp+var_24+3]
lea     ecx, [ebp+var_14]
mov     byte ptr [ebp+var_c+7], al
call    sub_401e70
mov     eax, [esi-8]
xor     dword ptr [ebp+var_14], eax
mov     eax, [esi-4]
xor     dword ptr [ebp+var_14+4], eax
mov     eax, [esi]
xor     dword ptr [ebp+var_c], eax
mov     eax, [esi+4]
xor     dword ptr [ebp+var_c+4], eax
lea     ecx, [ebp+var_14]
call    sub_401f10
lea     esi, [esi-10h]
dec     edi
jnz     loc_402f30
movq    xmm0, [ebp+var_14]
movq    [ebp+var_24], xmm0
movq    xmm0, [ebp+var_c]
movzx   eax, byte ptr [ebp+var_24]
mov     byte ptr [ebp+var_14], al
movq    [ebp+var_1c], xmm0
movzx   eax, byte ptr [ebp+var_1c+5]
mov     byte ptr [ebp+var_14+1], al
movzx   eax, byte ptr [ebp+var_1c+2]
mov     byte ptr [ebp+var_14+2], al
movzx   eax, byte ptr [ebp+var_24+7]
mov     byte ptr [ebp+var_14+3], al
movzx   eax, byte ptr [ebp+var_24+4]
mov     byte ptr [ebp+var_14+4], al
movzx   eax, byte ptr [ebp+var_24+1]
mov     byte ptr [ebp+var_14+5], al
movzx   eax, byte ptr [ebp+var_1c+6]
mov     byte ptr [ebp+var_14+6], al
movzx   eax, byte ptr [ebp+var_1c+3]
mov     byte ptr [ebp+var_14+7], al
movzx   eax, byte ptr [ebp+var_1c]
mov     byte ptr [ebp+var_c], al
movzx   eax, byte ptr [ebp+var_24+5]
mov     byte ptr [ebp+var_c+1], al
movzx   eax, byte ptr [ebp+var_24+2]
mov     byte ptr [ebp+var_c+2], al
movzx   eax, byte ptr [ebp+var_1c+7]
mov     byte ptr [ebp+var_c+3], al
movzx   eax, byte ptr [ebp+var_1c+4]
mov     byte ptr [ebp+var_c+4], al
movzx   eax, byte ptr [ebp+var_1c+1]
mov     byte ptr [ebp+var_c+5], al
movzx   eax, byte ptr [ebp+var_24+6]
mov     byte ptr [ebp+var_c+6], al
movzx   eax, byte ptr [ebp+var_24+3]
lea     ecx, [ebp+var_14]
mov     byte ptr [ebp+var_c+7], al
call    sub_401e70
mov     eax, [ebx]
xor     dword ptr [ebp+var_14], eax
mov     eax, [ebx+4]
xor     dword ptr [ebp+var_14+4], eax
mov     eax, [ebx+8]
xor     dword ptr [ebp+var_c], eax
mov     eax, [ebx+0ch]
xor     dword ptr [ebp+var_c+4], eax
mov     eax, [ebp+var_28]
movq    xmm0, [ebp+var_14]
mov     ecx, [ebp+var_4]
pop     edi
movq    qword ptr [eax], xmm0
movq    xmm0, [ebp+var_c]
pop     esi
xor     ecx, ebp
movq    qword ptr [eax+8], xmm0
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
xor     edx, edx
mov     esi, ecx
call    sub_403480
mov     ecx, esi
call    sub_4031b0
mov     ecx, esi
call    sub_403270
mov     ecx, esi
call    sub_403430
mov     ecx, esi
call    sub_4031b0
mov     ecx, esi
call    sub_403270
mov     edx, 1000h
mov     ecx, esi
call    sub_403480
mov     ecx, esi
call    sub_4031b0
mov     ecx, esi
call    sub_403270
mov     ecx, esi
call    sub_403430
mov     ecx, esi
call    sub_4031b0
mov     ecx, esi
call    sub_403270
mov     edx, 2000h
mov     ecx, esi
call    sub_403480
mov     ecx, esi
call    sub_4031b0
mov     ecx, esi
call    sub_403270
mov     ecx, esi
call    sub_403430
mov     ecx, esi
call    sub_4031b0
mov     ecx, esi
call    sub_403270
mov     edx, 3000h
mov     ecx, esi
call    sub_403480
mov     ecx, esi
call    sub_4031b0
mov     ecx, esi
call    sub_403270
mov     ecx, esi
call    sub_403430
mov     ecx, esi
call    sub_4031b0
mov     ecx, esi
call    sub_403270
mov     edx, 4000h
mov     ecx, esi
call    sub_403480
mov     ecx, esi
call    sub_4031b0
mov     ecx, esi
call    sub_403270
mov     ecx, esi
call    sub_403430
mov     ecx, esi
call    sub_4031b0
mov     ecx, esi
call    sub_403270
mov     edx, 5000h
mov     ecx, esi
call    sub_403480
mov     ecx, esi
pop     esi
jmp     sub_4031b0
push    esi
mov     esi, ecx
movzx   edx, byte ptr [esi+0dh]
movzx   eax, byte ptr [esi+9]
movzx   ecx, byte ptr [esi+0eh]
shl     edx, 8
add     edx, eax
movzx   eax, byte ptr [esi+5]
shl     edx, 8
add     edx, eax
movzx   eax, byte ptr [esi+1]
shl     edx, 8
add     edx, eax
ror     edx, 8
shl     ecx, 8
mov     eax, edx
shr     eax, 8
mov     [esi+5], al
mov     eax, edx
shr     eax, 10h
mov     [esi+9], al
movzx   eax, byte ptr [esi+0ah]
add     ecx, eax
movzx   eax, byte ptr [esi+6]
shl     ecx, 8
add     ecx, eax
movzx   eax, byte ptr [esi+2]
shl     ecx, 8
add     ecx, eax
ror     ecx, 10h
mov     eax, ecx
shr     eax, 8
mov     [esi+2], cl
mov     [esi+6], al
mov     eax, ecx
shr     ecx, 18h
mov     [esi+0eh], cl
movzx   ecx, byte ptr [esi+0fh]
shr     eax, 10h
mov     [esi+0ah], al
movzx   eax, byte ptr [esi+0bh]
shl     ecx, 8
add     ecx, eax
movzx   eax, byte ptr [esi+7]
shl     ecx, 8
add     ecx, eax
movzx   eax, byte ptr [esi+3]
shl     ecx, 8
add     ecx, eax
ror     ecx, 18h
mov     eax, ecx
shr     eax, 8
mov     [esi+7], al
mov     eax, ecx
mov     [esi+1], dl
mov     [esi+3], cl
shr     edx, 18h
shr     eax, 10h
shr     ecx, 18h
mov     [esi+0dh], dl
mov     [esi+0bh], al
mov     [esi+0fh], cl
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     dl, [edi]
mov     bl, [edi+1]
mov     al, [edi+3]
mov     bh, [edi+2]
mov     [ebp+var_2], al
mov     dh, al
xor     dh, bh
movzx   esi, dl
xor     dh, bl
xor     dh, dl
movzx   ecx, bl
mov     eax, esi
xor     eax, ecx
mov     [ebp+var_1], dh
mov     al, byte_43b8e8[eax]
xor     al, dh
xor     al, dl
mov     [edi], al
movzx   edx, bh
mov     eax, edx
xor     eax, ecx
movzx   ecx, [ebp+var_2]
mov     al, byte_43b8e8[eax]
mov     ah, [ebp+var_1]
xor     al, ah
xor     al, bl
mov     [edi+1], al
mov     bl, [edi+5]
xor     edx, ecx
xor     esi, ecx
mov     al, byte_43b8e8[edx]
mov     dl, [edi+4]
xor     al, ah
xor     al, bh
mov     bh, [edi+6]
mov     [edi+2], al
mov     al, byte_43b8e8[esi]
xor     al, ah
xor     al, [ebp+var_2]
movzx   esi, dl
mov     [edi+3], al
mov     al, [edi+7]
mov     dh, al
mov     [ebp+var_1], al
movzx   ecx, bl
xor     dh, bh
xor     dh, bl
mov     eax, esi
xor     eax, ecx
xor     dh, dl
mov     al, byte_43b8e8[eax]
xor     al, dh
xor     al, dl
mov     [edi+4], al
mov     [ebp+var_2], dh
movzx   edx, bh
mov     eax, edx
xor     eax, ecx
movzx   ecx, [ebp+var_1]
mov     al, byte_43b8e8[eax]
mov     ah, [ebp+var_2]
xor     al, ah
xor     al, bl
mov     bl, [edi+9]
mov     [edi+5], al
xor     edx, ecx
xor     esi, ecx
mov     al, byte_43b8e8[edx]
mov     dl, [edi+8]
xor     al, ah
xor     al, bh
mov     bh, [edi+0ah]
mov     [edi+6], al
mov     al, byte_43b8e8[esi]
xor     al, ah
xor     al, [ebp+var_1]
mov     [edi+7], al
mov     al, [edi+0bh]
mov     [ebp+var_1], al
mov     dh, al
xor     dh, bh
movzx   esi, dl
xor     dh, bl
xor     dh, dl
movzx   ecx, bl
mov     eax, esi
xor     eax, ecx
mov     [ebp+var_2], dh
mov     al, byte_43b8e8[eax]
xor     al, dh
xor     al, dl
mov     [edi+8], al
movzx   edx, bh
mov     eax, edx
xor     eax, ecx
movzx   ecx, [ebp+var_1]
mov     al, byte_43b8e8[eax]
mov     ah, [ebp+var_2]
xor     al, ah
xor     al, bl
mov     [edi+9], al
mov     bl, [edi+0dh]
xor     edx, ecx
xor     esi, ecx
mov     al, byte_43b8e8[edx]
mov     dl, [edi+0ch]
xor     al, ah
xor     al, bh
mov     bh, [edi+0eh]
mov     [edi+0ah], al
mov     al, byte_43b8e8[esi]
xor     al, ah
xor     al, [ebp+var_1]
movzx   esi, dl
mov     [edi+0bh], al
mov     al, [edi+0fh]
mov     dh, al
mov     [ebp+var_1], al
movzx   ecx, bl
xor     dh, bh
mov     eax, esi
xor     eax, ecx
xor     dh, bl
mov     al, byte_43b8e8[eax]
xor     dh, dl
xor     al, dh
xor     al, dl
mov     [edi+0ch], al
mov     [ebp+var_2], dh
movzx   edx, bh
mov     eax, edx
xor     eax, ecx
movzx   ecx, [ebp+var_1]
mov     al, byte_43b8e8[eax]
mov     ah, [ebp+var_2]
xor     al, ah
xor     al, bl
mov     [edi+0dh], al
xor     edx, ecx
xor     esi, ecx
mov     al, byte_43b8e8[edx]
xor     al, ah
xor     al, bh
mov     [edi+0eh], al
mov     al, byte_43b8e8[esi]
xor     al, ah
xor     al, [ebp+var_1]
mov     [edi+0fh], al
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     eax, [ecx+1]
mov     edx, 4
jmp     short loc_403440
movzx   ecx, byte ptr [eax-1]
lea     eax, [eax+4]
movzx   ecx, byte_43b9e8[ecx]
mov     [eax-5], cl
movzx   ecx, byte ptr [eax-4]
movzx   ecx, byte_43b9e8[ecx]
mov     [eax-4], cl
movzx   ecx, byte ptr [eax-3]
movzx   ecx, byte_43b9e8[ecx]
mov     [eax-3], cl
movzx   ecx, byte ptr [eax-2]
movzx   ecx, byte_43b9e8[ecx]
mov     [eax-2], cl
dec     edx
jnz     short loc_403440
retn
push    esi
xor     esi, esi
push    edi
lea     eax, [ecx+1]
lea     edi, [esi+4]
lea     ebx, [ebx+0]
movzx   ecx, byte ptr [eax-1]
add     ecx, esi
lea     eax, [eax+4]
movzx   ecx, byte_4358e8[ecx+edx]
mov     [eax-5], cl
movzx   ecx, byte ptr [eax-4]
add     ecx, esi
movzx   ecx, byte_4359e8[ecx+edx]
mov     [eax-4], cl
movzx   ecx, byte ptr [eax-3]
add     ecx, esi
movzx   ecx, byte_435ae8[ecx+edx]
mov     [eax-3], cl
movzx   ecx, byte ptr [eax-2]
add     ecx, esi
add     esi, 400h
movzx   ecx, byte_435be8[ecx+edx]
mov     [eax-2], cl
dec     edi
jnz     short loc_403490
pop     edi
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_41054f
test    [ebp+arg_0], 1
jz      short loc_40350a
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
jmp     sub_41054f
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_403530
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_10], esi
push    0
call    ??0_lockit@std@@qae@h@z
mov     [ebp+var_4], 0
mov     dword ptr [esi+4], 0
mov     byte ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
mov     byte ptr [esi+10h], 0
xor     eax, eax
mov     dword ptr [esi+14h], 0
mov     [esi+18h], ax
mov     [esi+1ch], eax
mov     [esi+20h], ax
mov     [esi+24h], eax
mov     [esi+28h], al
mov     [esi+2ch], eax
mov     [esi+30h], al
mov     byte ptr [ebp+var_4], 6
mov     eax, [ebp+locale]
test    eax, eax
jnz     short loc_4035d2
lea     eax, [ebp+locale]
push    eax
lea     ecx, [ebp+pexceptionobject]
mov     [ebp+locale], offset abadlocalename
call    ??0exception@std@@qae@abqbd@z
push    offset __ti2?avruntime_error@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
mov     [ebp+pexceptionobject], offset ??_7runtime_error@std@@6b@
call    __cxxthrowexception@8
push    eax
push    esi
call    ?_locinfo_ctor@_locinfo@std@@saxpav12@pbd@z
add     esp, 8
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    esi
mov     esi, ecx
push    esi
call    ?_locinfo_dtor@_locinfo@std@@saxpav12@@z
mov     eax, [esi+2ch]
add     esp, 4
test    eax, eax
jz      short loc_40360c
push    eax
call    _free
add     esp, 4
mov     dword ptr [esi+2ch], 0
mov     eax, [esi+24h]
test    eax, eax
jz      short loc_403623
push    eax
call    _free
add     esp, 4
mov     dword ptr [esi+24h], 0
mov     eax, [esi+1ch]
test    eax, eax
jz      short loc_40363a
push    eax
call    _free
add     esp, 4
mov     dword ptr [esi+1ch], 0
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_403651
push    eax
call    _free
add     esp, 4
mov     dword ptr [esi+14h], 0
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_403668
push    eax
call    _free
add     esp, 4
mov     dword ptr [esi+0ch], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_40367f
push    eax
call    _free
add     esp, 4
mov     dword ptr [esi+4], 0
mov     ecx, esi
pop     esi
jmp     ??1_lockit@std@@qae@xz
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7runtime_error@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7_facet_base@std@@6b@
jz      short loc_4036cb
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
add     ecx, 4
mov     eax, 1
lock xadd [ecx], eax
retn
lea     eax, [ecx+4]
or      edx, 0ffffffffh
lock xadd [eax], edx
mov     eax, 0
cmovz   eax, ecx
retn
mov     dword ptr [ecx], offset ??_7_facet_base@std@@6b@
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_403740
mov     eax, large fs:0
push    eax
sub     esp, 40h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+4ch+var_14], eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+5ch+var_c]
mov     large fs:0, eax
mov     esi, [ebp+arg_0]
mov     [esp+5ch+var_48], 0
mov     eax, [ecx]
test    eax, eax
jnz     short loc_4037a1
mov     [esp+5ch+var_18], 0fh
mov     [esp+5ch+var_1c], eax
mov     byte ptr [esp+5ch+src], al
lea     edi, [esp+5ch+src]
lea     ebx, [eax+1]
jmp     short loc_4037ed
mov     edx, [eax+18h]
test    edx, edx
jnz     short loc_4037ab
lea     edx, [eax+1ch]
mov     [esp+5ch+var_30], 0fh
mov     [esp+5ch+var_34], 0
mov     byte ptr [esp+5ch+block], 0
cmp     byte ptr [edx], 0
jnz     short loc_4037c9
xor     ecx, ecx
jmp     short loc_4037d9
mov     ecx, edx
lea     edi, [ecx+1]
mov     edi, edi
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_4037d0
sub     ecx, edi
push    ecx
push    edx
lea     ecx, [esp+64h+block]
call    sub_408010
lea     edi, [esp+5ch+block]
mov     ebx, 2
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
cmp     dword ptr [edi+14h], 10h
jnb     short loc_403817
mov     eax, [edi+10h]
inc     eax
jz      short loc_403821
push    eax
push    edi
push    esi
call    _memmove
add     esp, 0ch
jmp     short loc_403821
mov     eax, [edi]
mov     [esi], eax
mov     dword ptr [edi], 0
mov     eax, [edi+10h]
mov     [esi+10h], eax
mov     eax, [edi+14h]
or      ebx, 4
mov     [esi+14h], eax
mov     dword ptr [edi+14h], 0fh
mov     dword ptr [edi+10h], 0
mov     byte ptr [edi], 0
test    bl, 2
jz      short loc_403871
and     ebx, 0fffffffdh
cmp     [esp+5ch+var_30], 10h
jb      short loc_40385c
push    [esp+5ch+block]
call    j__free
add     esp, 4
mov     [esp+5ch+var_30], 0fh
mov     [esp+5ch+var_34], 0
mov     byte ptr [esp+5ch+block], 0
test    bl, 1
jz      short loc_403889
cmp     [esp+5ch+var_18], 10h
jb      short loc_403889
push    [esp+5ch+src]
call    j__free
add     esp, 4
mov     eax, esi
mov     ecx, [esp+5ch+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+4ch+var_14]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4038b0
mov     eax, large fs:0
push    eax
sub     esp, 4ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, [ebp+block]
xor     ebx, ebx
mov     [ebp+var_10], ebx
test    edi, edi
jz      loc_403969
cmp     [edi], ebx
jnz     short loc_403969
push    18h
call    ??2@yapaxi@z
mov     esi, eax
add     esp, 4
mov     [ebp+block], esi
mov     [ebp+var_4], ebx
test    esi, esi
jz      short loc_403958
mov     eax, [ebp+arg_4]
mov     ecx, [eax]
test    ecx, ecx
jnz     short loc_403912
mov     eax, offset locale
jmp     short loc_40391c
mov     eax, [ecx+18h]
test    eax, eax
jnz     short loc_40391c
lea     eax, [ecx+1ch]
push    eax
lea     ecx, [ebp+var_54]
call    sub_403530
lea     eax, [ebp+var_20]
push    eax
mov     ebx, 1
mov     dword ptr [esi+4], 0
mov     dword ptr [esi], offset ??_7?$ctype@d@std@@6b@
call    __getctype
movq    xmm0, qword ptr [eax]
movq    qword ptr [esi+8], xmm0
movq    xmm0, qword ptr [eax+8]
add     esp, 4
movq    qword ptr [esi+10h], xmm0
jmp     short loc_40395a
xor     esi, esi
mov     [edi], esi
test    bl, 1
jz      short loc_403969
lea     ecx, [ebp+var_54]
call    sub_4035f0
mov     eax, 2
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
lea     eax, [ecx+8]
push    eax
movzx   eax, [ebp+arg_0]
push    eax
call    __tolower
add     esp, 8
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
cmp     esi, edi
jz      short loc_4039c8
push    ebx
lea     ebx, [ecx+8]
movzx   eax, byte ptr [esi]
push    ebx
push    eax
call    __tolower
mov     [esi], al
inc     esi
add     esp, 8
cmp     esi, edi
jnz     short loc_4039b3
pop     ebx
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
lea     eax, [ecx+8]
push    eax
movzx   eax, [ebp+arg_0]
push    eax
call    __toupper
add     esp, 8
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
cmp     esi, edi
jz      short loc_403a18
push    ebx
lea     ebx, [ecx+8]
movzx   eax, byte ptr [esi]
push    ebx
push    eax
call    __toupper
mov     [esi], al
inc     esi
add     esp, 8
cmp     esi, edi
jnz     short loc_403a03
pop     ebx
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     edx, [ebp+src]
mov     ecx, [ebp+arg_4]
sub     ecx, edx
push    ecx
push    edx
push    [ebp+arg_8]
call    _memmove_0
mov     eax, [ebp+arg_4]
add     esp, 0ch
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     edx, [ebp+src]
mov     ecx, [ebp+arg_4]
sub     ecx, edx
push    ecx
push    edx
push    [ebp+arg_c]
call    _memmove_0
mov     eax, [ebp+arg_4]
add     esp, 0ch
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     eax, [esi+10h]
mov     dword ptr [esi], offset ??_7?$ctype@d@std@@6b@
test    eax, eax
jle     short loc_403a9d
push    dword ptr [esi+0ch]
call    _free
jmp     short loc_403aa7
jns     short loc_403aaa
push    dword ptr [esi+0ch]
call    j_j__free
add     esp, 4
push    dword ptr [esi+14h]
call    _free
add     esp, 4
test    [ebp+arg_0], 1
mov     dword ptr [esi], offset ??_7_facet_base@std@@6b@
jz      short loc_403aca
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7error_category@std@@6b@
jz      short loc_403afb
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ecx]
sub     esp, 8
lea     edx, [ebp+var_8]
push    [ebp+arg_0]
push    edx
call    dword ptr [eax+0ch]
mov     edx, [ebp+arg_4]
mov     ecx, [eax+4]
cmp     ecx, [edx+4]
jnz     short loc_403b5b
mov     eax, [eax]
cmp     eax, [edx]
jnz     short loc_403b5b
mov     al, 1
mov     esp, ebp
pop     ebp
retn    8
xor     al, al
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     ecx, [eax+4]
jnz     short loc_403b88
mov     eax, [eax]
cmp     eax, [ebp+arg_4]
jnz     short loc_403b88
mov     al, 1
pop     ebp
retn    8
xor     al, al
pop     ebp
retn    8
mov     eax, offset ageneric
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    [ebp+arg_4]
mov     [ebp+var_4], 0
call    sub_4217ea
mov     esi, [ebp+arg_0]
add     esp, 4
test    eax, eax
mov     edx, offset aunknownerror
cmovnz  edx, eax
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
cmp     byte ptr [edx], 0
jnz     short loc_403bee
xor     ecx, ecx
push    ecx
push    edx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, edx
push    edi
lea     edi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_403bf4
sub     ecx, edi
pop     edi
push    ecx
push    edx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     eax, offset aiostream
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+var_4], 0
cmp     eax, 1
jnz     short loc_403c5f
push    15h
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
push    offset aiostreamstream
mov     ecx, esi
mov     byte ptr [esi], 0
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    eax
push    esi
call    sub_403ba0
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     eax, offset asystem
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    [ebp+arg_4]
mov     [ebp+var_4], 0
call    sub_421814
mov     esi, [ebp+arg_0]
add     esp, 4
test    eax, eax
mov     edx, offset aunknownerror
cmovnz  edx, eax
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
cmp     byte ptr [edx], 0
jnz     short loc_403cce
xor     ecx, ecx
push    ecx
push    edx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, edx
push    edi
lea     edi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_403cd4
sub     ecx, edi
pop     edi
push    ecx
push    edx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
push    esi
call    sub_4217ea
add     esp, 4
test    eax, eax
mov     eax, [ebp+arg_0]
mov     [eax], esi
jz      short loc_403d15
mov     dword ptr [eax+4], offset off_43c0ec
pop     esi
pop     ebp
retn    8
mov     dword ptr [eax+4], offset off_43c0e8
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_403d30
mov     eax, large fs:0
push    eax
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     edx, [ebp+src]
mov     [ebp+var_14], 0fh
cmp     byte ptr [edx], 0
mov     [ebp+var_18], 0
mov     byte ptr [ebp+block], 0
jnz     short loc_403d7b
xor     eax, eax
jmp     short loc_403d89
mov     eax, edx
lea     esi, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_403d80
sub     eax, esi
push    eax
push    edx
lea     ecx, [ebp+block]
call    sub_408010
mov     eax, [ebp+arg_4]
mov     [ebp+var_4], 0
mov     esi, [eax]
mov     edi, [eax+4]
cmp     [ebp+var_14], 10h
lea     eax, [ebp+block]
cmovnb  eax, [ebp+block]
mov     [ebp+var_2c], eax
lea     eax, [ebp+var_2c]
push    eax
mov     ecx, ebx
call    ??0exception@std@@qae@abqbd@z
cmp     [ebp+var_14], 10h
mov     dword ptr [ebx], offset ??_7system_error@std@@6b@
mov     [ebx+0ch], esi
mov     [ebx+10h], edi
jb      short loc_403dd8
push    [ebp+block]
call    j__free
add     esp, 4
mov     eax, ebx
mov     dword ptr [ebx], offset ??_7failure@ios_base@std@@6b@
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 24h
cmp     [ebp+arg_0], 0
jnz     short loc_403e31
mov     eax, [ecx+10h]
and     eax, [ecx+0ch]
mov     [ebp+var_c], 1
mov     [ebp+var_8], offset off_43c0f0
lea     ecx, [ebp+pexceptionobject]
test    al, 4
jnz     short loc_403e3a
test    al, 2
lea     eax, [ebp+var_c]
push    eax
jnz     short loc_403e56
jmp     short loc_403e6e
push    0
push    0
call    __cxxthrowexception@8
lea     eax, [ebp+var_c]
push    eax
push    offset aiosbasebadbits
call    sub_403d30
push    offset __ti4?avfailure@ios_base@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
push    offset aiosbasefailbit
call    sub_403d30
push    offset __ti4?avfailure@ios_base@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
push    offset aiosbaseeofbits
call    sub_403d30
push    offset __ti4?avfailure@ios_base@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
mov     eax, [ecx+30h]
push    esi
mov     ecx, [eax]
mov     esi, [ebp+arg_0]
mov     [esi], ecx
mov     edx, [ecx]
call    dword ptr [edx+4]
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ecx
push    esi
mov     esi, ecx
push    edi
push    4
mov     dword ptr [esi+30h], 0
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 201h
mov     dword ptr [esi+18h], 6
mov     dword ptr [esi+1ch], 0
mov     dword ptr [esi+20h], 0
mov     dword ptr [esi+24h], 0
mov     dword ptr [esi+28h], 0
mov     dword ptr [esi+2ch], 0
mov     dword ptr [esi+0ch], 0
call    ??2@yapaxi@z
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_403f25
push    1
call    ?_init@locale@std@@capav_locimp@12@_n@z
mov     [edi], eax
add     esp, 4
mov     [esi+30h], edi
pop     edi
pop     esi
pop     ecx
retn
pop     edi
mov     dword ptr [esi+30h], 0
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    esi
mov     edi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [edi], offset ??_7system_error@std@@6b@
mov     eax, [esi+0ch]
mov     [edi+0ch], eax
mov     eax, [esi+10h]
mov     [edi+10h], eax
mov     dword ptr [edi], offset ??_7failure@ios_base@std@@6b@
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    esi
mov     edi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [edi], offset ??_7system_error@std@@6b@
mov     eax, [esi+0ch]
mov     [edi+0ch], eax
mov     eax, [esi+10h]
mov     [edi+10h], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
push    esi
mov     dword ptr [esi], offset ??_7ios_base@std@@6b@
call    ?_ios_base_dtor@ios_base@std@@caxpav12@@z
add     esp, 4
test    [ebp+arg_0], 1
jz      short loc_403fb4
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7_node_base@std@@6b@
jz      short loc_403fdb
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, ecx
mov     esi, [edi+14h]
mov     dword ptr [edi], offset ??_7_node_assert@std@@6b@
test    esi, esi
jz      short loc_40401b
lea     eax, [esi+0ch]
mov     ecx, esi
mov     esi, [eax]
mov     dword ptr [eax], 0
mov     eax, [ecx]
push    1
call    dword ptr [eax]
test    esi, esi
jnz     short loc_404004
test    [ebp+arg_0], 1
mov     dword ptr [edi], offset ??_7_node_base@std@@6b@
jz      short loc_404030
push    edi
call    j__free
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    edi
mov     edi, [ecx+18h]
mov     [ebp+var_4], ecx
mov     dword ptr [ecx], offset ??_7_node_if@std@@6b@
test    edi, edi
jz      short loc_404094
push    ebx
push    esi
lea     eax, [edi+18h]
mov     esi, edi
mov     edi, [eax]
mov     dword ptr [eax], 0
mov     ebx, [ecx+14h]
cmp     esi, ebx
jz      short loc_40408e
jmp     short loc_404070
test    esi, esi
jz      short loc_40408b
lea     eax, [esi+0ch]
mov     ecx, esi
mov     esi, [eax]
mov     dword ptr [eax], 0
mov     eax, [ecx]
push    1
call    dword ptr [eax]
cmp     esi, ebx
jnz     short loc_404070
mov     ecx, [ebp+var_4]
test    edi, edi
jnz     short loc_404057
pop     esi
pop     ebx
mov     dword ptr [ecx], offset ??_7_node_base@std@@6b@
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_404040
test    [ebp+arg_0], 1
jz      short loc_4040ba
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
cmp     [ebp+arg_4], 5ch
jge     short loc_4040e0
mov     eax, 1
pop     ebp
retn
push    [ebp+arg_10]
mov     eax, [ebp+arg_8]
push    [ebp+arg_c]
cmp     byte ptr [eax+2], 4
push    eax
jnz     short loc_4040fa
call    sub_404110
add     esp, 0ch
pop     ebp
retn
call    sub_404310
add     esp, 0ch
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 30h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    ebx
push    esi
mov     [ebp+var_30], eax
mov     eax, [ebp+arg_8]
push    edi
push    8eh
mov     [ebp+var_2c], eax
call    ??2@yapaxi@z
push    8eh
push    0
push    eax
mov     [ebp+block], eax
call    _memset
push    9eh
call    _malloc
push    9eh
mov     ebx, eax
push    0
push    ebx
call    _memset
mov     edx, [ebp+block]
mov     esi, off_43bae8
mov     dword ptr [edx], 40000h
mov     dword ptr [edx+4], 62h
lea     edi, [edx+8]
mov     ecx, 18h
rep movsd
mov     ecx, [ebp+arg_0]
movsw
movq    xmm0, qword ptr [ecx+40h]
movq    qword ptr [edx+6ah], xmm0
movq    xmm0, qword ptr [ecx+48h]
movq    qword ptr [edx+72h], xmm0
mov     eax, [ecx+54h]
mov     [edx+7ah], eax
mov     eax, [ecx+58h]
mov     [edx+7eh], eax
mov     dword ptr [edx+82h], 1ah
mov     dword ptr [edx+86h], 78h
mov     dword ptr [edx+8ah], 2760h
mov     ecx, 23h
mov     esi, edx
mov     edi, ebx
rep movsd
movsw
xorps   xmm0, xmm0
add     esp, 20h
mov     byte ptr [ebp+var_14], 0
movq    [ebp+var_14+1], xmm0
mov     [ebp+var_b], 0
mov     [ebp+var_7], 0
mov     [ebp+var_5], 0
lea     esi, [ebx+1]
mov     edi, 8
lea     ebx, [ebx+0]
xor     eax, eax
movzx   ecx, byte ptr [esi+eax-1]
xor     byte ptr [ebp+eax+var_14], cl
movzx   ecx, byte ptr [esi+eax]
xor     byte ptr [ebp+eax+var_14+1], cl
movzx   ecx, byte ptr [esi+eax+1]
xor     byte ptr [ebp+eax+var_14+2], cl
movzx   ecx, byte ptr [esi+eax+2]
xor     byte ptr [ebp+eax+var_14+3], cl
add     eax, 4
cmp     eax, 10h
jl      short loc_404202
lea     ecx, [ebp+var_14]
call    sub_4030b0
add     esi, 10h
dec     edi
jnz     short loc_404200
mov     eax, [ebx+88h]
xorps   xmm0, xmm0
movq    [ebp+var_23], xmm0
movq    xmm0, qword ptr [ebx+80h]
mov     [ebp+var_1b], edi
mov     dword ptr [ebp+var_23+7], eax
mov     ax, [ebx+8ch]
mov     [ebp+var_17], di
mov     [ebp+var_17+1], 80h
movq    qword ptr [ebp-24h], xmm0
mov     word ptr [ebp+var_1b+3], ax
xor     ecx, ecx
jmp     short loc_404280
movzx   eax, [ebp+ecx+var_24]
xor     byte ptr [ebp+ecx+var_14], al
movzx   eax, byte ptr [ebp+ecx+var_23]
xor     byte ptr [ebp+ecx+var_14+1], al
movzx   eax, byte ptr [ebp+ecx+var_23+1]
xor     byte ptr [ebp+ecx+var_14+2], al
movzx   eax, byte ptr [ebp+ecx+var_23+2]
xor     byte ptr [ebp+ecx+var_14+3], al
add     ecx, 4
cmp     ecx, 10h
jl      short loc_404280
lea     ecx, [ebp+var_14]
call    sub_4030b0
movq    xmm0, [ebp+var_14]
mov     eax, [ebp+var_30]
movq    qword ptr [ebx+8eh], xmm0
movq    xmm0, qword ptr [ebp-0ch]
movq    qword ptr [ebx+96h], xmm0
mov     dword ptr [eax], 9eh
mov     eax, [ebp+var_2c]
push    offset aactivationresp
mov     [eax], ebx
call    sub_41184e
mov     eax, [ebp+block]
push    eax
call    j__free
mov     ecx, [ebp+var_4]
add     esp, 8
xor     ecx, ebp
pop     edi
pop     esi
xor     eax, eax
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     [ebp+var_2c], eax
mov     eax, [ebp+arg_8]
push    edi
push    0d4h
mov     [ebp+var_28], eax
mov     dword ptr [ebp+src], 6f797ecdh
mov     dword ptr [ebp+src+4], 0cb5db22ah
mov     dword ptr [ebp+var_c], 0efc8ff55h
mov     dword ptr [ebp+var_c+4], 70c46483h
call    ??2@yapaxi@z
push    0d4h
mov     esi, eax
push    0
push    esi
mov     [ebp+block], esi
call    _memset
push    400h
call    _malloc
push    400h
push    0
push    eax
mov     [ebp+var_24], eax
call    _memset
movq    xmm0, qword ptr [ebx+4]
lea     edi, [ebx+4]
add     esp, 20h
lea     eax, [ebp+src]
push    edi
movq    qword ptr [esi+4], xmm0
movq    xmm0, qword ptr [edi+8]
push    eax
push    ecx
mov     [ebp+var_20], edi
movq    qword ptr [esi+0ch], xmm0
call    sub_401000
push    100h
call    ??_u@yapaxi@z
push    100h
mov     esi, eax
push    edi
push    esi
call    _memmove_0
lea     eax, [ebp+var_1c]
push    eax
push    edi
mov     ecx, esi
call    sub_401620
push    esi
call    j_j__free
mov     eax, [ebp+block]
mov     esi, off_43bae8
mov     dword ptr [eax], 50000h
mov     dword ptr [eax+14h], 50000h
mov     dword ptr [eax+18h], 62h
lea     edi, [eax+1ch]
mov     edx, [ebp+var_20]
mov     ecx, 18h
rep movsd
movsw
movq    xmm0, qword ptr [ebx+54h]
mov     edi, eax
add     esp, 28h
movq    qword ptr [edi+7eh], xmm0
movq    xmm0, qword ptr [ebx+5ch]
movq    qword ptr [edi+86h], xmm0
mov     eax, [ebx+68h]
mov     [edi+8eh], eax
mov     eax, [ebx+6ch]
mov     [edi+92h], eax
mov     dword ptr [edi+96h], 1ah
mov     dword ptr [edi+9ah], 78h
mov     dword ptr [edi+9eh], 2760h
lea     eax, [edi+5]
sub     edi, ebx
mov     esi, 4
jmp     short loc_404460
movzx   ecx, byte ptr [edi+edx]
xor     cl, [edx]
lea     edx, [edx+4]
xor     cl, 61h
mov     [eax+9dh], cl
movzx   ecx, byte ptr [edx-3]
xor     cl, [eax]
lea     eax, [eax+4]
xor     cl, 61h
mov     [eax+9ah], cl
movzx   ecx, byte ptr [edx-2]
xor     cl, [eax-3]
xor     cl, 61h
mov     [eax+9bh], cl
movzx   ecx, byte ptr [edx-1]
xor     cl, [eax-2]
xor     cl, 61h
mov     [eax+9ch], cl
dec     esi
jnz     short loc_404460
mov     edi, [ebp+block]
mov     dword ptr [ebp+src], 0ceea0b0ch
mov     dword ptr [ebp+src+4], 0bf7b87f8h
movq    xmm0, [ebp+src]
movq    qword ptr [edi+0b2h], xmm0
mov     dword ptr [ebp+var_c], 0eb1624h
mov     dword ptr [ebp+var_c+4], 96dcb5f2h
movq    xmm0, [ebp+var_c]
movq    qword ptr [edi+0bah], xmm0
mov     dword ptr [ebp+src], 0dd264e35h
mov     dword ptr [ebp+src+4], 7351f51dh
movq    xmm0, [ebp+src]
movq    qword ptr [edi+0c2h], xmm0
mov     dword ptr [ebp+var_c], 129b4520h
mov     dword ptr [ebp+var_c+4], 8c0f8636h
movq    xmm0, [ebp+var_c]
movq    qword ptr [edi+0cah], xmm0
push    0beh
mov     word ptr [edi+0d2h], 202h
call    ??_u@yapaxi@z
push    0beh
lea     ebx, [edi+14h]
mov     esi, eax
push    ebx
push    esi
call    _memmove_0
lea     eax, [ebp+var_20]
push    eax
push    ebx
mov     ecx, esi
call    sub_401240
push    esi
call    j_j__free
call    sub_401170
mov     eax, [ebp+var_24]
mov     esi, edi
mov     edi, eax
mov     ecx, 35h
rep movsd
mov     ecx, [ebp+var_2c]
push    offset aactivationresp_0
mov     dword ptr [ecx], 0d4h
mov     ecx, [ebp+var_28]
mov     [ecx], eax
call    sub_41184e
mov     esi, [ebp+block]
push    esi
call    j__free
mov     ecx, [ebp+var_4]
add     esp, 24h
xor     ecx, ebp
pop     edi
pop     esi
xor     eax, eax
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset _main_seh
mov     eax, large fs:0
push    eax
sub     esp, 3a0h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+3ach+var_14], eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+3bch+var_c]
mov     large fs:0, eax
mov     edi, [ebp+argc]
mov     esi, [ebp+argv]
mov     [esp+3bch+var_3a4], esi
cmp     edi, 2
jl      loc_404683
push    offset string2
push    dword ptr [esi+4]
call    __stricmp
add     esp, 8
test    eax, eax
jz      short loc_404683
push    ecx
push    offset a09
lea     ecx, [esp+3c4h+var_3a0]
call    sub_405d60
mov     [esp+3bch+var_4], 0
push    ecx
mov     ecx, [esi+4]
mov     edx, eax
call    sub_409250
add     esp, 4
lea     ecx, [esp+3bch+var_3a0]
mov     bl, al
mov     [esp+3bch+var_4], 0ffffffffh
call    sub_405e00
push    dword ptr [esi+4]
test    bl, bl
jz      loc_4049a9
call    sub_41157d
add     esp, 4
test    eax, eax
js      loc_404991
push    dword ptr [esi+4]
call    sub_41157d
add     esp, 4
cmp     eax, 0ffffh
jg      loc_404991
mov     ecx, [esi+4]
call    sub_405430
mov     endpoint, eax
cmp     edi, 3
jl      loc_404ee9
push    offset adefaultkmspid
push    dword ptr [esi+8]
call    __stricmp
add     esp, 8
test    eax, eax
jz      loc_404ee9
push    offset arandomkmspid
push    dword ptr [esi+8]
call    __stricmp
add     esp, 8
test    eax, eax
jnz     loc_404fa2
push    eax
call    __time64
add     esp, 4
push    eax
call    _srand
add     esp, 4
lea     ecx, [esp+3bch+lpmultibytestr]
push    offset a5504100168305x
call    sub_405530
sub     esp, 8
lea     ecx, [esp+3c4h+var_390]
mov     [esp+3c4h+var_4], 1
call    sub_405e50
mov     esi, 6
mov     byte ptr [esp+3bch+var_4], 2
lea     edi, [esi+4]
call    _rand
xor     edx, edx
div     edi
lea     ecx, [esp+3bch+var_380]
mov     dl, ds:byte_430544[edx]
call    sub_409310
dec     esi
jnz     short loc_404706
lea     eax, [esp+3bch+var_268]
push    eax
lea     ecx, [esp+3c0h+var_390]
call    sub_405f80
mov     byte ptr [esp+3bch+var_4], 3
push    esi
push    offset byte_42fb7a
lea     ecx, [esp+3c4h+block]
mov     [esp+3c4h+var_2cc], 0fh
mov     [esp+3c4h+var_2d0], esi
mov     byte ptr [esp+3c4h+block], 0
call    sub_408010
lea     eax, [esp+3bch+block]
push    eax
lea     ecx, [esp+3c0h+var_378]
mov     byte ptr [esp+3c0h+var_4], 4
call    sub_4072f0
mov     byte ptr [esp+3bch+var_4], 3
cmp     [esp+3bch+var_2cc], 10h
jb      short loc_4047a0
push    [esp+3bch+block]
call    j__free
add     esp, 4
call    _rand
mov     edi, eax
and     edi, 80000003h
jns     short loc_4047b4
dec     edi
or      edi, 0fffffffch
inc     edi
push    0
lea     eax, [esp+3c0h+var_3a0]
push    4
push    eax
add     edi, 7d9h
call    ?setw@std@@ya?au?$_smanip@_j@1@_j@z
mov     ecx, [esp+3c8h+var_380]
add     esp, 0ch
push    dword ptr [eax+0ch]
mov     ecx, [ecx+4]
push    dword ptr [eax+8]
mov     eax, [eax]
lea     ecx, [esp+ecx+3c4h+var_380]
push    ecx
call    eax
mov     eax, [esp+3c8h+var_380]
add     esp, 0ch
mov     eax, [eax+4]
push    edi
lea     ecx, [esp+3c0h+var_380]
mov     [esp+eax+3c0h+var_340], 30h
call    sub_405760
lea     eax, [esp+3bch+var_250]
push    eax
lea     ecx, [esp+3c0h+var_390]
call    sub_405f80
mov     byte ptr [esp+3bch+var_4], 5
push    0
push    offset byte_42fb7b
lea     ecx, [esp+3c4h+block]
mov     [esp+3c4h+var_2cc], 0fh
mov     [esp+3c4h+var_2d0], 0
mov     byte ptr [esp+3c4h+block], 0
call    sub_408010
lea     eax, [esp+3bch+block]
push    eax
lea     ecx, [esp+3c0h+var_378]
mov     byte ptr [esp+3c0h+var_4], 6
call    sub_4072f0
cmp     [esp+3bch+var_2cc], 10h
jb      short loc_404879
push    [esp+3bch+block]
call    j__free
add     esp, 4
mov     [esp+3bch+var_26c], 0fh
mov     [esp+3bch+var_270], 0
mov     byte ptr [esp+3bch+var_280], 0
mov     eax, edi
mov     byte ptr [esp+3bch+var_4], 7
and     eax, 80000003h
jns     short loc_4048ad
dec     eax
or      eax, 0fffffffch
inc     eax
jnz     loc_4049be
mov     eax, 51eb851fh
imul    edi
sar     edx, 5
mov     esi, edx
shr     esi, 1fh
add     esi, edx
imul    esi, 64h
mov     ecx, edi
sub     ecx, esi
jnz     short loc_4048ec
mov     eax, 51eb851fh
imul    edi
sar     edx, 7
mov     eax, edx
shr     eax, 1fh
add     eax, edx
imul    eax, 190h
sub     edi, eax
jnz     loc_4049be
push    0
lea     eax, [esp+3c0h+var_3a0]
push    3
push    eax
call    ?setw@std@@ya?au?$_smanip@_j@1@_j@z
mov     ecx, [esp+3c8h+var_380]
add     esp, 0ch
push    dword ptr [eax+0ch]
mov     ecx, [ecx+4]
push    dword ptr [eax+8]
mov     eax, [eax]
lea     edx, [esp+3c4h+var_380]
add     ecx, edx
push    ecx
call    eax
mov     eax, [esp+3c8h+var_380]
add     esp, 0ch
mov     eax, [eax+4]
mov     [esp+eax+3bch+var_340], 30h
call    _rand
cdq
mov     ecx, 16eh
idiv    ecx
lea     ecx, [esp+3bch+var_380]
inc     edx
push    edx
call    sub_405760
lea     eax, [esp+3bch+block]
push    eax
lea     ecx, [esp+3c0h+var_390]
call    sub_405f80
push    eax
lea     ecx, [esp+3c0h+var_280]
call    sub_405600
cmp     [esp+3bch+var_2cc], 10h
jb      short loc_404973
push    [esp+3bch+block]
call    j__free
add     esp, 4
push    offset byte_42fc09
lea     ecx, [esp+3c0h+block]
call    sub_405530
mov     byte ptr [esp+3bch+var_4], 8
jmp     loc_404a7e
push    dword ptr [esi+4]
push    offset ainvalidportran
call    sub_41184e
add     esp, 8
or      eax, 0ffffffffh
jmp     loc_40537b
push    offset ainvalidportsis
call    sub_41184e
add     esp, 8
or      eax, 0ffffffffh
jmp     loc_40537b
push    0
lea     eax, [esp+3c0h+var_3a0]
push    3
push    eax
call    ?setw@std@@ya?au?$_smanip@_j@1@_j@z
mov     ecx, [esp+3c8h+var_380]
add     esp, 0ch
push    dword ptr [eax+0ch]
mov     ecx, [ecx+4]
push    dword ptr [eax+8]
mov     eax, [eax]
lea     edx, [esp+3c4h+var_380]
add     ecx, edx
push    ecx
call    eax
mov     eax, [esp+3c8h+var_380]
add     esp, 0ch
mov     eax, [eax+4]
mov     [esp+eax+3bch+var_340], 30h
call    _rand
cdq
mov     ecx, 16dh
idiv    ecx
lea     ecx, [esp+3bch+var_380]
inc     edx
push    edx
call    sub_405760
lea     eax, [esp+3bch+block]
push    eax
lea     ecx, [esp+3c0h+var_390]
call    sub_405f80
push    eax
lea     ecx, [esp+3c0h+var_280]
call    sub_405600
cmp     [esp+3bch+var_2cc], 10h
jb      short loc_404a45
push    [esp+3bch+block]
call    j__free
add     esp, 4
push    0
push    offset word_42fc0a
lea     ecx, [esp+3c4h+block]
mov     [esp+3c4h+var_2cc], 0fh
mov     [esp+3c4h+var_2d0], 0
mov     byte ptr [esp+3c4h+block], 0
call    sub_408010
mov     byte ptr [esp+3bch+var_4], 9
lea     eax, [esp+3bch+block]
push    eax
lea     ecx, [esp+3c0h+var_378]
call    sub_4072f0
cmp     [esp+3bch+var_2cc], 10h
jb      short loc_404aa8
push    [esp+3bch+block]
call    j__free
add     esp, 4
mov     [esp+3bch+var_29c], 0fh
mov     [esp+3bch+var_2a0], 0
mov     byte ptr [esp+3bch+var_2b0], 0
mov     byte ptr [esp+3bch+var_4], 0ah
call    _rand
mov     esi, eax
and     esi, 80000003h
jns     short loc_404ae2
dec     esi
or      esi, 0fffffffch
inc     esi
call    _rand
cdq
mov     ecx, 3
idiv    ecx
cmp     esi, ecx
ja      short def_404af3
jmp     ds:jpt_404af3[esi*4]
push    offset a3790
jmp     short loc_404b44
test    edx, edx
jnz     short loc_404b0c
push    offset a6000
jmp     short loc_404b44
lea     ecx, [esp+3bch+var_2b0]
cmp     edx, 1
jnz     short loc_404b1f
push    offset a6001
jmp     short loc_404b4b
push    offset a6002
jmp     short loc_404b4b
lea     ecx, [esp+3bch+var_2b0]
test    edx, edx
jnz     short loc_404b38
push    offset a7600
jmp     short loc_404b4b
push    offset a7601
jmp     short loc_404b4b
push    offset a9200
lea     ecx, [esp+3c0h+var_2b0]
call    sub_4056b0
push    6
push    offset axxxxxx
lea     ecx, [esp+3c4h+block]
mov     [esp+3c4h+var_2cc], 0fh
mov     [esp+3c4h+var_2d0], 0
mov     byte ptr [esp+3c4h+block], 0
call    sub_408010
lea     eax, [esp+3bch+var_268]
push    eax
lea     edx, [esp+3c0h+block]
lea     ecx, [esp+3c0h+lpmultibytestr]
mov     byte ptr [esp+3c0h+var_4], 0bh
call    sub_4053d0
add     esp, 4
mov     byte ptr [esp+3bch+var_4], 0ah
cmp     [esp+3bch+var_2cc], 10h
jb      short loc_404bc8
push    [esp+3bch+block]
call    j__free
add     esp, 4
push    4
push    offset avvvv
lea     ecx, [esp+3c4h+block]
mov     [esp+3c4h+var_2cc], 0fh
mov     [esp+3c4h+var_2d0], 0
mov     byte ptr [esp+3c4h+block], 0
call    sub_408010
lea     eax, [esp+3bch+var_2b0]
push    eax
lea     edx, [esp+3c0h+block]
lea     ecx, [esp+3c0h+lpmultibytestr]
mov     byte ptr [esp+3c0h+var_4], 0ch
call    sub_4053d0
add     esp, 4
mov     byte ptr [esp+3bch+var_4], 0ah
cmp     [esp+3bch+var_2cc], 10h
jb      short loc_404c40
push    [esp+3bch+block]
call    j__free
add     esp, 4
push    3
push    offset addd
lea     ecx, [esp+3c4h+block]
mov     [esp+3c4h+var_2cc], 0fh
mov     [esp+3c4h+var_2d0], 0
mov     byte ptr [esp+3c4h+block], 0
call    sub_408010
lea     eax, [esp+3bch+var_280]
push    eax
lea     edx, [esp+3c0h+block]
lea     ecx, [esp+3c0h+lpmultibytestr]
mov     byte ptr [esp+3c0h+var_4], 0dh
call    sub_4053d0
add     esp, 4
mov     byte ptr [esp+3bch+var_4], 0ah
cmp     [esp+3bch+var_2cc], 10h
jb      short loc_404cb8
push    [esp+3bch+block]
call    j__free
add     esp, 4
push    4
push    offset ayyyy
lea     ecx, [esp+3c4h+block]
mov     [esp+3c4h+var_2cc], 0fh
mov     [esp+3c4h+var_2d0], 0
mov     byte ptr [esp+3c4h+block], 0
call    sub_408010
lea     eax, [esp+3bch+var_250]
push    eax
lea     edx, [esp+3c0h+block]
lea     ecx, [esp+3c0h+lpmultibytestr]
mov     byte ptr [esp+3c0h+var_4], 0eh
call    sub_4053d0
add     esp, 4
mov     byte ptr [esp+3bch+var_4], 0ah
cmp     [esp+3bch+var_2cc], 10h
jb      short loc_404d30
push    [esp+3bch+block]
call    j__free
add     esp, 4
cmp     [esp+3bch+var_284], 10h
mov     ebx, ds:multibytetowidechar
push    0
push    0
push    0ffffffffh
lea     eax, [esp+3c8h+lpmultibytestr]
cmovnb  eax, [esp+3c8h+lpmultibytestr]
push    eax
push    0
push    0fde9h
mov     [esp+3d4h+var_3a8], eax
call    ebx
xor     ecx, ecx
mov     edi, eax
mov     edx, 2
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx
call    ??_u@yapaxi@z
add     esp, 4
mov     esi, eax
push    edi
push    esi
push    0ffffffffh
push    [esp+3c8h+var_3a8]
push    0
push    0fde9h
call    ebx
cmp     [esp+3bch+var_29c], 10h
mov     off_43bae8, esi
jb      short loc_404dae
push    [esp+3bch+var_2b0]
call    j__free
add     esp, 4
cmp     [esp+3bch+var_26c], 10h
mov     [esp+3bch+var_29c], 0fh
mov     [esp+3bch+var_2a0], 0
mov     byte ptr [esp+3bch+var_2b0], 0
jb      short loc_404de5
push    [esp+3bch+var_280]
call    j__free
add     esp, 4
cmp     [esp+3bch+var_23c], 10h
mov     [esp+3bch+var_26c], 0fh
mov     [esp+3bch+var_270], 0
mov     byte ptr [esp+3bch+var_280], 0
jb      short loc_404e1c
push    [esp+3bch+var_250]
call    j__free
add     esp, 4
cmp     [esp+3bch+var_254], 10h
mov     [esp+3bch+var_23c], 0fh
mov     [esp+3bch+var_240], 0
mov     byte ptr [esp+3bch+var_250], 0
jb      short loc_404e53
push    [esp+3bch+var_268]
call    j__free
add     esp, 4
lea     ecx, [esp+3bch+var_328]
mov     [esp+3bch+var_254], 0fh
mov     [esp+3bch+var_258], 0
mov     byte ptr [esp+3bch+var_268], 0
mov     byte ptr [esp+3bch+var_4], 1
call    sub_405f00
lea     eax, [esp+3bch+var_328]
push    eax
mov     [esp+3c0h+var_328], offset ??_7ios_base@std@@6b@
call    ?_ios_base_dtor@ios_base@std@@caxpav12@@z
add     esp, 4
mov     [esp+3bch+var_4], 0ffffffffh
cmp     [esp+3bch+var_284], 10h
jb      short loc_404ec4
push    [esp+3bch+lpmultibytestr]
call    j__free
add     esp, 4
mov     esi, [esp+3bch+var_3a4]
mov     edi, [ebp+argc]
mov     [esp+3bch+var_284], 0fh
mov     [esp+3bch+var_288], 0
mov     byte ptr [esp+3bch+lpmultibytestr], 0
cmp     edi, 4
jl      short loc_404f15
push    offset akillprocessonp
push    dword ptr [esi+0ch]
call    __stricmp
movzx   ecx, byte_43d17e
add     esp, 8
mov     edx, 1
test    eax, eax
cmovz   ecx, edx
mov     byte_43d17e, cl
push    0
push    endpoint
push    0ah
push    offset protseq
call    ds:rpcserveruseprotseqepw
mov     esi, eax
test    esi, esi
jz      loc_4052f9
cmp     esi, 6cch
jnz     loc_405333
cmp     byte_43d17e, 1
jnz     loc_405333
lea     eax, [esp+3bch+versioninformation]
push    eax
mov     [esp+3c0h+versioninformation.dwosversioninfosize], 114h
call    ds:getversionexw
mov     [esp+3bch+var_2cc], 0fh
mov     [esp+3bch+var_2d0], 0
mov     byte ptr [esp+3bch+block], 0
mov     [esp+3bch+var_4], 10h
mov     eax, [esp+3bch+versioninformation.dwmajorversion]
cmp     eax, 5
jnz     short loc_40500e
push    offset aforftokens4del
jmp     short loc_405018
push    ecx
push    offset a09509509309609
lea     ecx, [esp+3c4h+var_3a0]
call    sub_405d60
mov     [esp+3bch+var_4], 0fh
push    ecx
mov     ecx, [esi+8]
mov     edx, eax
call    sub_409250
add     esp, 4
lea     ecx, [esp+3bch+var_3a0]
mov     bl, al
mov     [esp+3bch+var_4], 0ffffffffh
call    sub_405e00
test    bl, bl
jz      short loc_404ff6
mov     ecx, [esi+8]
call    sub_405430
mov     off_43bae8, eax
jmp     loc_404ee9
push    dword ptr [esi+8]
push    offset ainvalidpidsisn
call    sub_41184e
add     esp, 8
or      eax, 0ffffffffh
jmp     loc_40537b
cmp     eax, 6
jb      short loc_405024
push    offset aforftokens5del
lea     ecx, [esp+3c0h+block]
call    sub_4056b0
push    4
push    0
push    offset a1688
lea     ecx, [esp+3c8h+block]
call    sub_406df0
mov     edi, eax
call    sub_405490
mov     edx, eax
cmp     byte ptr [edx], 0
jnz     short loc_40504b
xor     ecx, ecx
jmp     short loc_405059
mov     ecx, edx
lea     esi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_405050
sub     ecx, esi
push    ecx
push    edx
push    5
push    edi
lea     ecx, [esp+3cch+block]
call    sub_406c00
cmp     [esp+3bch+var_2cc], 10h
lea     eax, [esp+3bch+block]
cmovnb  eax, [esp+3bch+block]
push    offset mode
push    eax
call    __popen
mov     edi, eax
push    edi
lea     eax, [esp+3c8h+buffer]
push    104h
push    eax
call    _fgets
add     esp, 14h
test    eax, eax
jz      loc_4052b7
mov     ebx, ds:openprocess
cmp     [esp+3bch+buffer], 0
mov     [esp+3bch+var_2b4], 0fh
mov     [esp+3bch+var_2b8], 0
mov     byte ptr [esp+3bch+string], 0
jnz     short loc_4050de
xor     ecx, ecx
jmp     short loc_4050f1
lea     ecx, [esp+3bch+buffer]
lea     edx, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_4050e8
sub     ecx, edx
push    ecx
lea     eax, [esp+3c0h+buffer]
push    eax
lea     ecx, [esp+3c4h+string]
call    sub_408010
sub     esp, 8
lea     eax, [esp+3c4h+buf]
mov     byte ptr [esp+3c4h+var_4], 11h
push    eax
lea     ecx, [esp+3c8h+string]
mov     [esp+3c8h+buf], 20h
call    sub_406f60
inc     eax
cmp     [esp+3bch+var_2b8], eax
jb      loc_405329
cmp     [esp+3bch+var_2b4], 10h
lea     ecx, [esp+3bch+string]
cmovnb  ecx, [esp+3bch+string]
mov     [esp+3bch+var_2b8], eax
mov     byte ptr [eax+ecx], 0
sub     esp, 8
lea     eax, [esp+3c4h+buf]
push    eax
lea     ecx, [esp+3c8h+string]
mov     [esp+3c8h+buf], 20h
call    sub_406ef0
push    ecx
inc     eax
push    eax
lea     eax, [esp+3c4h+var_268]
push    eax
lea     ecx, [esp+3c8h+string]
call    sub_4056f0
mov     esi, eax
lea     eax, [esp+3bch+string]
cmp     eax, esi
jz      loc_405223
cmp     [esp+3bch+var_2b4], 10h
jb      short loc_4051b1
push    [esp+3bch+string]
call    j__free
add     esp, 4
mov     [esp+3bch+var_2b4], 0fh
mov     [esp+3bch+var_2b8], 0
mov     byte ptr [esp+3bch+string], 0
cmp     dword ptr [esi+14h], 10h
jnb     short loc_4051ef
mov     eax, [esi+10h]
inc     eax
jz      short loc_4051fe
push    eax
lea     eax, [esp+3c0h+string]
push    esi
push    eax
call    _memmove
add     esp, 0ch
jmp     short loc_4051fe
mov     eax, [esi]
mov     [esp+3bch+string], eax
mov     dword ptr [esi], 0
mov     eax, [esi+10h]
mov     [esp+3bch+var_2b8], eax
mov     eax, [esi+14h]
mov     [esp+3bch+var_2b4], eax
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
cmp     [esp+3bch+var_254], 10h
jb      short loc_40523c
push    [esp+3bch+var_268]
call    j__free
add     esp, 4
cmp     [esp+3bch+var_2b4], 10h
lea     eax, [esp+3bch+string]
cmovnb  eax, [esp+3bch+string]
push    eax
call    sub_41157d
add     esp, 4
push    eax
push    0
push    1fffffh
call    ebx
mov     esi, eax
push    0
push    esi
call    ds:terminateprocess
push    esi
call    ds:closehandle
mov     byte ptr [esp+3bch+var_4], 10h
cmp     [esp+3bch+var_2b4], 10h
jb      short loc_405299
push    [esp+3bch+string]
call    j__free
add     esp, 4
push    edi
lea     eax, [esp+3c0h+buffer]
push    104h
push    eax
call    _fgets
add     esp, 0ch
test    eax, eax
jnz     loc_4050b2
push    edi
call    __pclose
add     esp, 4
push    1388h
call    ds:sleep
push    0
push    endpoint
push    0ah
push    offset ancacniptcp_0
call    ds:rpcserveruseprotseqepw
cmp     [esp+3bch+var_2cc], 10h
jb      short loc_4052f9
push    [esp+3bch+block]
call    j__free
add     esp, 4
push    0
push    4d2h
push    11h
push    0
push    0
push    offset dword_42fb88
call    ds:rpcserverregisterifex
mov     esi, eax
test    esi, esi
jz      short loc_405345
push    esi
push    offset arpcserverregis
call    sub_41184e
add     esp, 8
mov     eax, esi
jmp     short loc_40537b
push    offset ainvalidstringp
call    ?_xout_of_range@std@@yaxpbd@z
push    esi
push    offset arpcserverusepr
call    sub_41184e
add     esp, 8
mov     eax, esi
jmp     short loc_40537b
push    offset akmsserveremula
call    sub_41184e
add     esp, 4
push    0
push    4d2h
push    1
call    ds:rpcserverlisten
mov     esi, eax
test    esi, esi
jz      short loc_405379
push    esi
push    offset arpcserverliste
call    sub_41184e
add     esp, 8
mov     eax, esi
jmp     short loc_40537b
xor     eax, eax
mov     ecx, [esp+3bch+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+3ach+var_14]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
lea     esi, [ecx+68h]
mov     ecx, esi
call    sub_405f00
push    esi
mov     dword ptr [esi], offset ??_7ios_base@std@@6b@
call    ?_ios_base_dtor@ios_base@std@@caxpav12@@z
add     esp, 4
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, edx
mov     [ebp+var_4], ecx
cmp     dword ptr [esi+10h], 0
jz      short loc_40541f
push    ebx
mov     ebx, [ebp+arg_0]
push    edi
xor     edi, edi
cmp     dword ptr [esi+14h], 10h
jb      short loc_4053f1
mov     eax, [esi]
jmp     short loc_4053f3
mov     eax, esi
push    dword ptr [esi+10h]
push    edi
push    eax
call    sub_406df0
mov     edi, eax
cmp     edi, 0ffffffffh
jz      short loc_40541d
mov     ecx, [ebp+var_4]
push    0ffffffffh
push    0
push    ebx
push    dword ptr [esi+10h]
push    edi
call    sub_406870
add     edi, [ebx+10h]
mov     ecx, [ebp+var_4]
jmp     short loc_4053e7
pop     edi
pop     ebx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
push    0
push    0
push    0ffffffffh
mov     eax, ecx
push    eax
push    0
push    0fde9h
mov     [ebp+lpmultibytestr], eax
call    ds:multibytetowidechar
xor     ecx, ecx
mov     edi, eax
mov     edx, 2
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx
call    ??_u@yapaxi@z
add     esp, 4
mov     esi, eax
push    edi
push    esi
push    0ffffffffh
push    [ebp+lpmultibytestr]
push    0
push    0fde9h
call    ds:multibytetowidechar
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, endpoint
push    esi
push    edi
push    0
push    0
push    0
push    0
push    0ffffffffh
push    eax
push    0
push    0fde9h
mov     [ebp+lpwidecharstr], eax
call    ds:widechartomultibyte
mov     esi, eax
push    esi
call    ??_u@yapaxi@z
add     esp, 4
mov     edi, eax
push    0
push    0
push    esi
push    edi
push    0ffffffffh
push    [ebp+lpwidecharstr]
push    0
push    0fde9h
call    ds:widechartomultibyte
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    [ebp+size]
call    _malloc
add     esp, 4
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+block]
call    _free
add     esp, 4
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     ecx, [ebp+src]
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
cmp     byte ptr [ecx], 0
jnz     short loc_405561
xor     edx, edx
push    edx
push    ecx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     edx, ecx
push    edi
lea     edi, [edx+1]
mov     al, [edx]
inc     edx
test    al, al
jnz     short loc_405567
sub     edx, edi
pop     edi
push    edx
push    ecx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+src]
push    edi
mov     edi, ecx
mov     dword ptr [edi+14h], 0fh
mov     dword ptr [edi+10h], 0
mov     byte ptr [edi], 0
cmp     dword ptr [esi+14h], 10h
jnb     short loc_4055c4
mov     eax, [esi+10h]
inc     eax
jz      short loc_4055ce
push    eax
push    esi
push    edi
call    _memmove
add     esp, 0ch
jmp     short loc_4055ce
mov     eax, [esi]
mov     [edi], eax
mov     dword ptr [esi], 0
mov     eax, [esi+10h]
mov     [edi+10h], eax
mov     eax, [esi+14h]
mov     [edi+14h], eax
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     eax, edi
pop     edi
mov     byte ptr [esi], 0
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+src]
mov     esi, ecx
cmp     esi, edi
jz      short loc_40566f
cmp     dword ptr [esi+14h], 10h
jb      short loc_40561e
push    dword ptr [esi]
call    j__free
add     esp, 4
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
cmp     dword ptr [edi+14h], 10h
jnb     short loc_405648
mov     eax, [edi+10h]
inc     eax
jz      short loc_405652
push    eax
push    edi
push    esi
call    _memmove
add     esp, 0ch
jmp     short loc_405652
mov     eax, [edi]
mov     [esi], eax
mov     dword ptr [edi], 0
mov     eax, [edi+10h]
mov     [esi+10h], eax
mov     eax, [edi+14h]
mov     [esi+14h], eax
mov     dword ptr [edi+14h], 0fh
mov     dword ptr [edi+10h], 0
mov     byte ptr [edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    esi
mov     esi, ecx
cmp     dword ptr [esi+14h], 10h
jb      short loc_405693
push    dword ptr [esi]
call    j__free
add     esp, 4
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+src]
cmp     byte ptr [esi], 0
jnz     short loc_4056ca
xor     edx, edx
push    edx
push    esi
call    sub_408010
pop     esi
pop     ebp
retn    4
mov     edx, esi
push    edi
lea     edi, [edx+1]
mov     al, [edx]
inc     edx
test    al, al
jnz     short loc_4056d0
sub     edx, edi
pop     edi
push    edx
push    esi
call    sub_408010
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebp+arg_0]
push    0ffffffffh
push    [ebp+arg_4]
mov     dword ptr [esi+14h], 0fh
push    ecx
mov     dword ptr [esi+10h], 0
mov     ecx, esi
mov     [ebp+var_4], 0
mov     byte ptr [esi], 0
call    sub_407ee0
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jz      short loc_405742
push    eax
call    _free
add     esp, 4
mov     dword ptr [esi], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_405760
mov     eax, large fs:0
push    eax
sub     esp, 28h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     esi, ecx
mov     [ebp+var_18], esi
mov     eax, [esi]
xor     edi, edi
mov     eax, [eax+4]
mov     [ebp+var_24], edi
mov     ecx, [eax+esi+38h]
mov     [ebp+var_2c], esi
test    ecx, ecx
jz      short loc_4057aa
mov     eax, [ecx]
call    dword ptr [eax+4]
mov     [ebp+var_4], 0
mov     eax, [esi]
mov     eax, [eax+4]
cmp     dword ptr [eax+esi+0ch], 0
jnz     short loc_4057ca
mov     ecx, [eax+esi+3ch]
test    ecx, ecx
jz      short loc_4057ca
call    sub_405910
mov     eax, [esi]
mov     ecx, [eax+4]
add     ecx, esi
cmp     dword ptr [ecx+0ch], 0
setz    al
mov     [ebp+var_28], al
mov     [ebp+var_4], 1
test    al, al
jz      loc_40589a
lea     eax, [ebp+var_1c]
push    eax
call    sub_403e90
push    eax
mov     byte ptr [ebp+var_4], 2
call    sub_409640
mov     byte ptr [ebp+var_4], 1
mov     ecx, [ebp+var_1c]
add     esp, 4
mov     ebx, eax
test    ecx, ecx
jz      short loc_40581e
mov     edx, [ecx]
call    dword ptr [edx+8]
test    eax, eax
jz      short loc_40581e
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     eax, [esi]
push    [ebp+arg_0]
mov     ecx, [eax+4]
add     ecx, esi
mov     byte ptr [ebp+var_4], 3
mov     byte ptr [ebp+var_34], 0
mov     al, [ecx+40h]
mov     byte ptr [ebp+var_20], al
push    [ebp+var_20]
mov     eax, [ebx]
push    ecx
push    dword ptr [ecx+38h]
lea     ecx, [ebp+var_34]
push    [ebp+var_34]
push    ecx
mov     ecx, ebx
call    dword ptr [eax+24h]
cmp     byte ptr [ebp+var_34], 0
mov     eax, 4
cmovnz  edi, eax
jmp     short loc_405893
mov     ecx, [ebp+var_18]
mov     eax, [ecx]
mov     edx, [eax+4]
mov     eax, [edx+ecx+0ch]
add     edx, ecx
or      eax, 4
cmp     dword ptr [edx+38h], 0
jnz     short loc_405873
or      eax, 4
and     eax, 17h
mov     [edx+0ch], eax
test    [edx+10h], eax
jz      short loc_405887
push    1
mov     ecx, edx
call    sub_403e00
mov     eax, offset loc_40588d
retn
mov     esi, [ebp+var_18]
mov     edi, [ebp+var_24]
mov     [ebp+var_4], 1
mov     eax, [esi]
mov     ecx, [eax+4]
add     ecx, esi
test    edi, edi
jz      short loc_4058c5
mov     eax, [ecx+0ch]
or      eax, edi
cmp     dword ptr [ecx+38h], 0
jnz     short loc_4058b3
or      eax, 4
and     eax, 17h
mov     [ecx+0ch], eax
test    [ecx+10h], eax
jz      short loc_4058c5
push    0
call    sub_403e00
mov     [ebp+var_4], 0ffffffffh
call    j_?__uncaught_exception@@ya_nxz
test    al, al
jnz     short loc_4058dc
mov     ecx, esi
call    sub_408220
mov     eax, [esi]
mov     eax, [eax+4]
mov     ecx, [eax+esi+38h]
test    ecx, ecx
jz      short loc_4058ee
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_405910
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    esi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+24h+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     eax, [esi]
mov     eax, [eax+4]
cmp     dword ptr [eax+esi+38h], 0
jz      loc_4059d1
push    esi
lea     ecx, [esp+28h+var_18]
call    sub_407380
mov     [esp+24h+var_4], 0
cmp     [esp+24h+var_14], 0
jz      short loc_4059a1
mov     eax, [esi]
mov     eax, [eax+4]
mov     ecx, [eax+esi+38h]
mov     eax, [ecx]
call    dword ptr [eax+34h]
cmp     eax, 0ffffffffh
jnz     short loc_4059a1
mov     eax, [esi]
mov     ecx, [eax+4]
mov     eax, [ecx+esi+0ch]
add     ecx, esi
or      eax, 4
cmp     dword ptr [ecx+38h], 0
jnz     short loc_40598f
or      eax, 4
and     eax, 17h
mov     [ecx+0ch], eax
test    [ecx+10h], eax
jz      short loc_4059a1
push    0
call    sub_403e00
mov     [esp+24h+var_4], 0ffffffffh
call    j_?__uncaught_exception@@ya_nxz
test    al, al
jnz     short loc_4059bb
mov     ecx, [esp+24h+var_18]
call    sub_408220
mov     ecx, [esp+24h+var_18]
mov     eax, [ecx]
mov     eax, [eax+4]
mov     ecx, [eax+ecx+38h]
test    ecx, ecx
jz      short loc_4059d1
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     eax, esi
mov     ecx, [esp+24h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ecx
mov     dword ptr [ecx], offset ??_7ios_base@std@@6b@
call    ?_ios_base_dtor@ios_base@std@@caxpav12@@z
pop     ecx
retn
mov     eax, [ecx-18h]
mov     eax, [eax+4]
mov     dword ptr [eax+ecx-18h], offset ??_7?$basic_istream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [ecx-18h]
mov     edx, [eax+4]
lea     eax, [edx-18h]
mov     [edx+ecx-1ch], eax
retn
push    esi
mov     esi, [ecx+34h]
mov     dword ptr [ecx], offset ??_7?$basic_streambuf@du?$char_traits@d@std@@@std@@6b@
test    esi, esi
jz      short loc_405a4e
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_405a45
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_405a45
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
push    esi
call    j__free
add     esp, 4
pop     esi
retn
or      eax, 0ffffffffh
retn    4
xor     eax, eax
xor     edx, edx
retn
or      eax, 0ffffffffh
retn
push    esi
mov     esi, ecx
mov     eax, [esi]
call    dword ptr [eax+18h]
cmp     eax, 0ffffffffh
jnz     short loc_405a91
or      eax, eax
pop     esi
retn
mov     eax, [esi+2ch]
dec     dword ptr [eax]
mov     ecx, [esi+1ch]
pop     esi
mov     edx, [ecx]
lea     eax, [edx+1]
mov     [ecx], eax
movzx   eax, byte ptr [edx]
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
xorps   xmm0, xmm0
push    edi
mov     [esp+20h+var_c], ecx
movlpd  [esp+20h+var_8], xmm0
test    ebx, ebx
jl      loc_405ba3
mov     edi, [ebp+arg_4]
jg      short loc_405ae1
test    edi, edi
jz      loc_405ba3
mov     edx, dword ptr [esp+20h+var_8+4]
mov     eax, dword ptr [esp+20h+var_8]
mov     [esp+20h+var_14], edx
mov     [esp+20h+var_10], eax
call    sub_4070a0
mov     esi, eax
mov     eax, edx
mov     dword ptr [esp+20h+var_8], eax
test    eax, eax
jl      short loc_405b54
jg      short loc_405b08
test    esi, esi
jz      short loc_405b54
cmp     ebx, eax
jg      short loc_405b18
jl      short loc_405b12
cmp     edi, esi
jnb     short loc_405b18
mov     esi, edi
mov     dword ptr [esp+20h+var_8], ebx
test    esi, esi
jz      short loc_405b31
mov     ecx, [esp+20h+var_c]
push    esi
mov     eax, [ecx+1ch]
push    dword ptr [eax]
push    [ebp+arg_0]
call    _memmove_0
add     esp, 0ch
add     [ebp+arg_0], esi
add     [esp+20h+var_10], esi
mov     eax, dword ptr [esp+20h+var_8]
mov     ecx, [esp+20h+var_c]
adc     [esp+20h+var_14], eax
sub     edi, esi
sbb     ebx, eax
mov     eax, [ecx+2ch]
sub     [eax], esi
mov     eax, [ecx+1ch]
add     [eax], esi
jmp     short loc_405b80
mov     ecx, [esp+20h+var_c]
mov     eax, [ecx]
call    dword ptr [eax+1ch]
cmp     eax, 0ffffffffh
jz      short loc_405b92
mov     ecx, [ebp+arg_0]
inc     ecx
add     [esp+20h+var_10], 1
mov     [ecx-1], al
mov     [ebp+arg_0], ecx
adc     [esp+20h+var_14], 0
mov     ecx, [esp+20h+var_c]
add     edi, 0ffffffffh
adc     ebx, 0ffffffffh
test    ebx, ebx
jg      loc_405af1
jl      short loc_405b92
test    edi, edi
jnz     loc_405af1
mov     edx, [esp+20h+var_14]
mov     eax, [esp+20h+var_10]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     edx, dword ptr [esp+20h+var_8+4]
mov     eax, dword ptr [esp+20h+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
xorps   xmm0, xmm0
push    edi
mov     [esp+20h+var_c], ecx
movlpd  [esp+20h+var_8], xmm0
test    ebx, ebx
jl      loc_405cb4
mov     edi, [ebp+arg_4]
jg      short loc_405bf1
test    edi, edi
jz      loc_405cb4
mov     edx, dword ptr [esp+20h+var_8+4]
mov     eax, dword ptr [esp+20h+var_8]
mov     [esp+20h+var_14], edx
mov     [esp+20h+var_10], eax
call    sub_4070c0
mov     esi, eax
mov     eax, edx
mov     dword ptr [esp+20h+var_8], eax
test    eax, eax
jl      short loc_405c64
jg      short loc_405c18
test    esi, esi
jz      short loc_405c64
cmp     ebx, eax
jg      short loc_405c28
jl      short loc_405c22
cmp     edi, esi
jnb     short loc_405c28
mov     esi, edi
mov     dword ptr [esp+20h+var_8], ebx
test    esi, esi
jz      short loc_405c41
mov     ecx, [esp+20h+var_c]
push    esi
mov     eax, [ecx+20h]
push    [ebp+src]
push    dword ptr [eax]
call    _memmove_0
add     esp, 0ch
add     [ebp+src], esi
add     [esp+20h+var_10], esi
mov     eax, dword ptr [esp+20h+var_8]
mov     ecx, [esp+20h+var_c]
adc     [esp+20h+var_14], eax
sub     edi, esi
sbb     ebx, eax
mov     eax, [ecx+30h]
sub     [eax], esi
mov     eax, [ecx+20h]
add     [eax], esi
jmp     short loc_405c91
mov     esi, [ebp+src]
mov     ecx, [esp+20h+var_c]
movzx   eax, byte ptr [esi]
mov     edx, [ecx]
push    eax
call    dword ptr [edx+0ch]
cmp     eax, 0ffffffffh
jz      short loc_405ca3
mov     ecx, [esp+20h+var_c]
inc     esi
add     [esp+20h+var_10], 1
mov     [ebp+src], esi
adc     [esp+20h+var_14], 0
add     edi, 0ffffffffh
adc     ebx, 0ffffffffh
test    ebx, ebx
jg      loc_405c01
jl      short loc_405ca3
test    edi, edi
jnz     loc_405c01
mov     edx, [esp+20h+var_14]
mov     eax, [esp+20h+var_10]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     edx, dword ptr [esp+20h+var_8+4]
mov     eax, dword ptr [esp+20h+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, ds:dword_42f778
mov     [eax], ecx
mov     ecx, ds:dword_42f77c
mov     [eax+4], ecx
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, ds:dword_42f778
mov     [eax], ecx
mov     ecx, ds:dword_42f77c
mov     [eax+4], ecx
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
pop     ebp
retn    20h
mov     eax, ecx
retn    0ch
xor     eax, eax
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_405d60
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], 0
push    1
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
call    ?_init@locale@std@@capav_locimp@12@_n@z
add     esp, 4
mov     [esi+0ch], eax
mov     [ebp+var_4], 0
mov     edx, [ebp+arg_0]
test    edx, edx
jnz     short loc_405dc2
push    0dh
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
cmp     byte ptr [edx], 0
jnz     short loc_405dcb
xor     ecx, ecx
jmp     short loc_405dd9
mov     ecx, edx
lea     edi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_405dd0
sub     ecx, edi
push    [ebp+arg_0]
lea     eax, [ecx+edx]
push    ecx
push    eax
push    edx
mov     ecx, esi
call    sub_409880
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    edi
mov     edi, ecx
mov     eax, [edi]
test    eax, eax
jz      short loc_405e2d
dec     dword ptr [eax+20h]
jnz     short loc_405e2d
push    esi
mov     esi, [edi]
test    esi, esi
jz      short loc_405e2c
lea     eax, [esi+0ch]
mov     ecx, esi
mov     esi, [eax]
mov     dword ptr [eax], 0
mov     eax, [ecx]
push    1
call    dword ptr [eax]
test    esi, esi
jnz     short loc_405e15
pop     esi
mov     dword ptr [edi], 0
mov     ecx, [edi+0ch]
pop     edi
test    ecx, ecx
jz      short locret_405e4c
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short locret_405e4c
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_405e50
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+var_14], edi
mov     [ebp+var_10], 0
mov     dword ptr [edi], offset dword_430424
mov     dword ptr [edi+10h], offset dword_43044c
mov     dword ptr [edi+68h], offset ??_7?$basic_ios@du?$char_traits@d@std@@@std@@6b@
push    ecx
lea     esi, [edi+18h]
mov     [ebp+var_4], 0
push    esi
mov     [ebp+var_10], 1
call    sub_4070e0
mov     [ebp+var_4], 1
mov     eax, [edi]
mov     eax, [eax+4]
mov     dword ptr [edi+eax], offset ??_7?$basic_stringstream@du?$char_traits@d@std@@v?$allocator@d@2@@std@@6b@
mov     eax, [edi]
mov     ecx, [eax+4]
lea     eax, [ecx-68h]
mov     [ecx+edi-4], eax
mov     ecx, esi
call    sub_4082c0
mov     dword ptr [esi], offset ??_7?$basic_stringbuf@du?$char_traits@d@std@@v?$allocator@d@2@@std@@6b@
mov     dword ptr [esi+38h], 0
mov     dword ptr [esi+3ch], 0
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    esi
mov     esi, ecx
mov     eax, [esi-68h]
lea     ecx, [esi-50h]
mov     eax, [eax+4]
mov     dword ptr [eax+esi-68h], offset ??_7?$basic_stringstream@du?$char_traits@d@std@@v?$allocator@d@2@@std@@6b@
mov     eax, [esi-68h]
mov     edx, [eax+4]
lea     eax, [edx-68h]
mov     [edx+esi-6ch], eax
call    sub_406000
mov     eax, [esi-68h]
mov     eax, [eax+4]
mov     dword ptr [eax+esi-68h], offset ??_7?$basic_iostream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [esi-68h]
mov     ecx, [eax+4]
lea     eax, [ecx-20h]
mov     [ecx+esi-6ch], eax
mov     eax, [esi-58h]
mov     eax, [eax+4]
mov     dword ptr [eax+esi-58h], offset ??_7?$basic_ostream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [esi-58h]
mov     ecx, [eax+4]
lea     eax, [ecx-8]
mov     [ecx+esi-5ch], eax
mov     eax, [esi-68h]
mov     eax, [eax+4]
mov     dword ptr [eax+esi-68h], offset ??_7?$basic_istream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [esi-68h]
mov     ecx, [eax+4]
lea     eax, [ecx-18h]
mov     [ecx+esi-6ch], eax
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
push    [ebp+arg_0]
add     ecx, 18h
mov     [ebp+var_4], 0
call    sub_407190
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [ecx-20h]
mov     eax, [eax+4]
mov     dword ptr [eax+ecx-20h], offset ??_7?$basic_iostream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [ecx-20h]
mov     edx, [eax+4]
lea     eax, [edx-20h]
mov     [edx+ecx-24h], eax
mov     eax, [ecx-10h]
lea     edx, [ecx-8]
mov     eax, [eax+4]
mov     dword ptr [eax+edx-8], offset ??_7?$basic_ostream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [edx-8]
mov     ecx, [eax+4]
lea     eax, [ecx-8]
mov     [ecx+edx-0ch], eax
mov     eax, [edx-18h]
mov     eax, [eax+4]
mov     dword ptr [eax+edx-18h], offset ??_7?$basic_istream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [edx-18h]
mov     ecx, [eax+4]
lea     eax, [ecx-18h]
mov     [ecx+edx-1ch], eax
retn
push    esi
mov     esi, ecx
test    byte ptr [esi+3ch], 1
mov     dword ptr [esi], offset ??_7?$basic_stringbuf@du?$char_traits@d@std@@v?$allocator@d@2@@std@@6b@
jz      short loc_40601c
mov     eax, [esi+0ch]
push    dword ptr [eax]
call    j__free
add     esp, 4
mov     eax, [esi+0ch]
mov     dword ptr [eax], 0
mov     eax, [esi+1ch]
mov     dword ptr [eax], 0
mov     eax, [esi+2ch]
mov     dword ptr [eax], 0
mov     eax, [esi+10h]
mov     dword ptr [eax], 0
mov     eax, [esi+20h]
mov     dword ptr [eax], 0
mov     eax, [esi+30h]
mov     dword ptr [eax], 0
and     dword ptr [esi+3ch], 0fffffffeh
mov     dword ptr [esi+38h], 0
mov     dword ptr [esi], offset ??_7?$basic_streambuf@du?$char_traits@d@std@@@std@@6b@
mov     esi, [esi+34h]
test    esi, esi
jz      short loc_40608a
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_406081
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_406081
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
push    esi
call    j__free
add     esp, 4
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
mov     esi, ecx
mov     eax, [esi+3ch]
test    al, 2
jz      short loc_4060aa
or      eax, 0ffffffffh
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebx
mov     ebx, [ebp+arg_0]
cmp     ebx, 0ffffffffh
jnz     short loc_4060bd
pop     ebx
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    edi
test    al, 8
jz      short loc_4060e5
mov     eax, [esi+20h]
mov     edx, [eax]
test    edx, edx
jz      short loc_4060e5
mov     edi, [esi+38h]
cmp     edx, edi
jnb     short loc_4060e5
mov     eax, [esi+30h]
mov     ecx, [eax]
mov     eax, [esi+20h]
add     ecx, edx
mov     [eax], edi
mov     eax, [esi+30h]
sub     ecx, edi
mov     [eax], ecx
mov     eax, [esi+20h]
mov     edx, [eax]
test    edx, edx
jz      short loc_406118
mov     edi, [esi+30h]
mov     ecx, [edi]
lea     eax, [ecx+edx]
cmp     edx, eax
jnb     short loc_406114
dec     ecx
mov     [edi], ecx
mov     edx, [esi+20h]
pop     edi
mov     esi, [edx]
mov     eax, ebx
lea     ecx, [esi+1]
mov     [edx], ecx
mov     [esi], bl
pop     ebx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
test    edx, edx
jnz     short loc_40611c
xor     edi, edi
jmp     short loc_406128
mov     eax, [esi+30h]
mov     ecx, [esi+0ch]
mov     edi, [eax]
sub     edi, [ecx]
add     edi, edx
mov     ecx, edi
shr     ecx, 1
cmp     ecx, 20h
jnb     short loc_406138
mov     ecx, 20h
jmp     short loc_406140
test    ecx, ecx
jz      short loc_406153
lea     esp, [esp+0]
mov     eax, 7fffffffh
sub     eax, ecx
cmp     eax, edi
jnb     short loc_40614f
shr     ecx, 1
jnz     short loc_406140
test    ecx, ecx
jnz     short loc_40615f
pop     edi
pop     ebx
or      eax, 0ffffffffh
pop     esi
mov     esp, ebp
pop     ebp
retn    4
lea     eax, [ecx+edi]
xor     ebx, ebx
mov     [ebp+var_8], eax
test    eax, eax
jz      short loc_406187
cmp     eax, 0ffffffffh
ja      loc_40627d
push    eax
call    ??2@yapaxi@z
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_40627d
mov     eax, [esi+0ch]
mov     ecx, [eax]
mov     [ebp+block], ecx
test    edi, edi
jz      short loc_4061a5
push    edi
push    ecx
push    ebx
call    _memmove_0
mov     ecx, [ebp+block]
add     esp, 0ch
test    edi, edi
jnz     short loc_4061e5
mov     eax, [esi+10h]
mov     edx, [ebp+var_8]
mov     edi, [ebp+block]
mov     [esi+38h], ebx
mov     [eax], ebx
mov     eax, [esi+20h]
mov     [eax], ebx
mov     eax, [esi+30h]
mov     [eax], edx
mov     eax, [esi+0ch]
test    byte ptr [esi+3ch], 4
mov     [eax], ebx
mov     eax, [esi+1ch]
jz      short loc_4061d8
mov     dword ptr [eax], 0
mov     eax, [esi+2ch]
mov     [eax], ebx
jmp     short loc_40624d
mov     [eax], ebx
mov     eax, [esi+2ch]
mov     dword ptr [eax], 1
jmp     short loc_40624d
mov     edi, [ebp+block]
mov     eax, ebx
sub     eax, ecx
add     [esi+38h], eax
mov     eax, [esi+20h]
mov     edx, [eax]
sub     edx, ecx
mov     ecx, [esi+10h]
mov     eax, ebx
sub     eax, edi
add     [ecx], eax
mov     eax, [esi+20h]
add     edx, ebx
mov     ecx, ebx
mov     [eax], edx
mov     eax, [esi+30h]
sub     ecx, edx
add     ecx, [ebp+var_8]
mov     [eax], ecx
test    byte ptr [esi+3ch], 4
jz      short loc_40622d
mov     eax, [esi+0ch]
mov     [eax], ebx
mov     eax, [esi+1ch]
mov     dword ptr [eax], 0
mov     eax, [esi+2ch]
mov     [eax], ebx
jmp     short loc_40624d
mov     eax, [esi+20h]
mov     edx, [eax]
mov     eax, [esi+1ch]
mov     ecx, [eax]
mov     eax, [esi+0ch]
sub     ecx, edi
mov     [eax], ebx
mov     eax, [esi+1ch]
add     ecx, ebx
mov     [eax], ecx
mov     eax, [esi+2ch]
sub     edx, ecx
inc     edx
mov     [eax], edx
test    byte ptr [esi+3ch], 1
jz      short loc_40625c
push    edi
call    j__free
add     esp, 4
mov     eax, [esi+30h]
or      dword ptr [esi+3ch], 1
dec     dword ptr [eax]
mov     ecx, [esi+20h]
pop     edi
mov     edx, [ecx]
pop     ebx
lea     eax, [edx+1]
mov     [ecx], eax
mov     eax, [ebp+arg_0]
mov     [edx], al
pop     esi
mov     esp, ebp
pop     ebp
retn    4
call    unknown_libname_5
push    ebp
mov     ebp, esp
mov     edx, ecx
push    esi
mov     eax, [edx+1ch]
mov     esi, [eax]
test    esi, esi
jz      short loc_4062df
mov     eax, [edx+0ch]
cmp     esi, [eax]
jbe     short loc_4062df
mov     ecx, [ebp+arg_0]
cmp     ecx, 0ffffffffh
jz      short loc_4062b9
cmp     cl, [esi-1]
jz      short loc_4062b9
test    byte ptr [edx+3ch], 2
jnz     short loc_4062df
mov     eax, [edx+2ch]
inc     dword ptr [eax]
mov     eax, [edx+1ch]
dec     dword ptr [eax]
cmp     ecx, 0ffffffffh
jz      short loc_4062d6
mov     eax, [edx+1ch]
pop     esi
mov     eax, [eax]
mov     [eax], cl
mov     eax, ecx
pop     ebp
retn    4
xor     ecx, ecx
mov     eax, ecx
pop     esi
pop     ebp
retn    4
or      eax, 0ffffffffh
pop     esi
pop     ebp
retn    4
push    esi
mov     esi, [ecx+1ch]
mov     edx, [esi]
test    edx, edx
jnz     short loc_4062ff
or      eax, 0ffffffffh
pop     esi
retn
push    edi
mov     edi, [ecx+2ch]
mov     eax, [edi]
add     eax, edx
cmp     edx, eax
jnb     short loc_406311
movzx   eax, byte ptr [edx]
pop     edi
pop     esi
retn
test    byte ptr [ecx+3ch], 4
jnz     short loc_406343
mov     eax, [ecx+20h]
mov     eax, [eax]
test    eax, eax
jz      short loc_406343
cmp     eax, edx
ja      short loc_406329
cmp     [ecx+38h], edx
jbe     short loc_406343
cmp     [ecx+38h], eax
jnb     short loc_406331
mov     [ecx+38h], eax
mov     eax, [ecx+38h]
sub     eax, [esi]
mov     [edi], eax
mov     eax, [ecx+1ch]
pop     edi
mov     eax, [eax]
pop     esi
movzx   eax, byte ptr [eax]
retn
pop     edi
or      eax, 0ffffffffh
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, ecx
push    esi
mov     edx, [ebx+20h]
push    edi
mov     eax, [edx]
test    eax, eax
jz      short loc_40636a
cmp     [ebx+38h], eax
jnb     short loc_40636a
mov     [ebx+38h], eax
mov     ecx, [ebp+arg_10]
test    cl, 1
jz      loc_40644f
mov     eax, [ebx+1ch]
mov     esi, [eax]
mov     [ebp+var_4], esi
test    esi, esi
jz      loc_40644f
mov     eax, [ebp+arg_c]
cmp     eax, 2
jnz     short loc_4063a3
mov     ecx, [ebx+0ch]
mov     eax, [ebx+38h]
sub     eax, [ecx]
mov     esi, [ebp+arg_4]
mov     edi, [ebp+arg_8]
cdq
add     esi, eax
adc     edi, edx
jmp     short loc_4063d9
cmp     eax, 1
jnz     short loc_4063c1
test    cl, 2
jnz     short loc_4063c5
mov     ecx, [ebx+0ch]
mov     edi, [ebp+arg_8]
mov     eax, esi
sub     eax, [ecx]
mov     esi, [ebp+arg_4]
cdq
add     esi, eax
adc     edi, edx
jmp     short loc_4063d9
test    eax, eax
jz      short loc_4063d3
mov     esi, ds:dword_42f778
mov     edi, ds:dword_42f77c
jmp     short loc_4063d9
mov     edi, [ebp+arg_8]
mov     esi, [ebp+arg_4]
test    edi, edi
jl      loc_4064eb
jg      short loc_4063eb
test    esi, esi
jb      loc_4064eb
mov     eax, [ebx+0ch]
mov     ecx, [eax]
mov     eax, [ebx+38h]
sub     eax, ecx
cdq
cmp     edi, edx
jg      loc_4064eb
jl      short loc_406408
cmp     esi, eax
ja      loc_4064eb
sub     ecx, [ebp+var_4]
mov     eax, [ebx+2ch]
add     ecx, esi
sub     [eax], ecx
mov     eax, [ebx+1ch]
add     [eax], ecx
test    byte ptr [ebp+arg_10], 2
jz      loc_4064f7
mov     eax, [ebx+20h]
mov     eax, [eax]
mov     [ebp+arg_10], eax
test    eax, eax
jz      loc_4064f7
mov     eax, [ebx+1ch]
mov     edx, [eax]
mov     eax, [ebx+30h]
mov     ecx, [eax]
mov     eax, [ebx+20h]
add     ecx, [ebp+arg_10]
mov     [eax], edx
mov     eax, [ebx+30h]
sub     ecx, edx
mov     [eax], ecx
jmp     loc_4064f7
test    cl, 2
jz      loc_4064df
mov     edx, [edx]
mov     [ebp+arg_10], edx
test    edx, edx
jz      short loc_4064df
mov     eax, [ebp+arg_c]
cmp     eax, 2
jnz     short loc_40647e
mov     ecx, [ebx+0ch]
mov     eax, [ebx+38h]
sub     eax, [ecx]
mov     esi, [ebp+arg_4]
mov     edi, [ebp+arg_8]
cdq
add     esi, eax
adc     edi, edx
jmp     short loc_4064af
cmp     eax, 1
jnz     short loc_406497
mov     ecx, [ebx+0ch]
mov     esi, [ebp+arg_4]
mov     edi, [ebp+arg_8]
mov     eax, edx
sub     eax, [ecx]
cdq
add     esi, eax
adc     edi, edx
jmp     short loc_4064af
test    eax, eax
jz      short loc_4064a9
mov     esi, ds:dword_42f778
mov     edi, ds:dword_42f77c
jmp     short loc_4064af
mov     edi, [ebp+arg_8]
mov     esi, [ebp+arg_4]
test    edi, edi
jl      short loc_4064eb
jg      short loc_4064b9
test    esi, esi
jb      short loc_4064eb
mov     eax, [ebx+0ch]
mov     ecx, [eax]
mov     eax, [ebx+38h]
sub     eax, ecx
cdq
cmp     edi, edx
jg      short loc_4064eb
jl      short loc_4064ce
cmp     esi, eax
ja      short loc_4064eb
sub     ecx, [ebp+arg_10]
mov     eax, [ebx+30h]
add     ecx, esi
sub     [eax], ecx
mov     eax, [ebx+20h]
add     [eax], ecx
jmp     short loc_4064f7
mov     esi, [ebp+arg_4]
mov     edi, [ebp+arg_8]
mov     eax, esi
or      eax, edi
jz      short loc_4064f7
mov     esi, ds:dword_42f778
mov     edi, ds:dword_42f77c
mov     eax, [ebp+arg_0]
mov     [eax+4], edi
pop     edi
mov     [eax], esi
pop     esi
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
pop     ebx
mov     esp, ebp
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
mov     ebx, [ebp+arg_10]
push    esi
mov     esi, [ebp+arg_c]
add     esi, [ebp+arg_4]
push    edi
adc     ebx, [ebp+arg_8]
mov     edi, ecx
mov     edx, [edi+20h]
mov     eax, [edx]
test    eax, eax
jz      short loc_40654b
cmp     [edi+38h], eax
jnb     short loc_40654b
mov     [edi+38h], eax
mov     eax, ds:dword_42f77c
cmp     esi, ds:dword_42f778
jnz     short loc_406560
cmp     ebx, eax
jz      loc_406624
mov     ecx, [ebp+arg_1c]
test    cl, 1
jz      short loc_4065e0
mov     eax, [edi+1ch]
mov     eax, [eax]
mov     [esp+18h+var_8], eax
test    eax, eax
jz      short loc_4065db
test    ebx, ebx
jl      short loc_4065d3
jg      short loc_40657f
test    esi, esi
jb      short loc_4065d3
mov     eax, [edi+0ch]
mov     ecx, [eax]
mov     eax, [edi+38h]
sub     eax, ecx
cdq
cmp     ebx, edx
jg      short loc_4065d3
jl      short loc_406594
cmp     esi, eax
ja      short loc_4065d3
sub     ecx, [esp+18h+var_8]
mov     eax, [edi+2ch]
add     ecx, esi
sub     [eax], ecx
mov     eax, [edi+1ch]
add     [eax], ecx
test    byte ptr [ebp+arg_1c], 2
jz      short loc_406624
mov     eax, [edi+20h]
mov     eax, [eax]
mov     [esp+18h+var_8], eax
test    eax, eax
jz      short loc_406624
mov     eax, [edi+1ch]
mov     edx, [eax]
mov     eax, [edi+30h]
mov     ecx, [eax]
mov     eax, [edi+20h]
add     ecx, [esp+18h+var_8]
mov     [eax], edx
mov     eax, [edi+30h]
sub     ecx, edx
mov     [eax], ecx
jmp     short loc_406624
mov     ebx, ds:dword_42f77c
jmp     short loc_40661e
mov     eax, ds:dword_42f77c
test    cl, 2
jz      short loc_40661c
cmp     dword ptr [edx], 0
jz      short loc_40661c
test    ebx, ebx
jl      short loc_4065d3
jg      short loc_4065f4
test    esi, esi
jb      short loc_4065d3
mov     eax, [edi+0ch]
mov     ecx, [eax]
mov     eax, [edi+38h]
sub     eax, ecx
cdq
cmp     ebx, edx
jg      short loc_4065d3
jl      short loc_406609
cmp     esi, eax
ja      short loc_4065d3
mov     eax, [edi+20h]
sub     ecx, [eax]
mov     eax, [edi+30h]
add     ecx, esi
sub     [eax], ecx
mov     eax, [edi+20h]
add     [eax], ecx
jmp     short loc_406624
mov     ebx, eax
mov     esi, ds:dword_42f778
mov     eax, [ebp+arg_0]
pop     edi
mov     [eax], esi
pop     esi
mov     [eax+4], ebx
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
pop     ebx
mov     esp, ebp
pop     ebp
retn    20h
push    ebp
mov     ebp, esp
push    esi
lea     esi, [ecx-8]
mov     eax, [esi]
lea     edx, [esi+8]
mov     eax, [eax+4]
push    edx
mov     dword ptr [eax+edx-8], offset ??_7?$basic_ostream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [edx-8]
mov     ecx, [eax+4]
lea     eax, [ecx-8]
mov     [ecx+edx-0ch], eax
mov     dword ptr [edx], offset ??_7ios_base@std@@6b@
call    ?_ios_base_dtor@ios_base@std@@caxpav12@@z
add     esp, 4
test    [ebp+arg_0], 1
jz      short loc_406692
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
lea     esi, [ecx-18h]
mov     eax, [esi]
lea     edx, [esi+18h]
mov     eax, [eax+4]
push    edx
mov     dword ptr [eax+edx-18h], offset ??_7?$basic_istream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [edx-18h]
mov     ecx, [eax+4]
lea     eax, [ecx-18h]
mov     [ecx+edx-1ch], eax
mov     dword ptr [edx], offset ??_7ios_base@std@@6b@
call    ?_ios_base_dtor@ios_base@std@@caxpav12@@z
add     esp, 4
test    [ebp+arg_0], 1
jz      short loc_4066e2
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
push    edi
mov     edi, [esi+34h]
mov     dword ptr [esi], offset ??_7?$basic_streambuf@du?$char_traits@d@std@@@std@@6b@
test    edi, edi
jz      short loc_406724
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_40671b
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40671b
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
push    edi
call    j__free
add     esp, 4
test    [ebp+arg_0], 1
jz      short loc_406733
push    esi
call    j__free
add     esp, 4
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     ecx, [ecx+8]
test    ecx, ecx
jz      short locret_406758
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short locret_406758
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
lea     edi, [ecx-68h]
lea     esi, [edi+68h]
mov     ecx, esi
call    sub_405f00
push    esi
mov     dword ptr [esi], offset ??_7ios_base@std@@6b@
call    ?_ios_base_dtor@ios_base@std@@caxpav12@@z
add     esp, 4
test    [ebp+arg_0], 1
jz      short loc_406790
push    edi
call    j__free
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
lea     esi, [ecx-20h]
mov     ecx, esi
call    sub_406800
test    [ebp+arg_0], 1
jz      short loc_4067bd
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_406000
test    [ebp+arg_0], 1
jz      short loc_4067ea
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     eax, [ecx]
lea     edx, [ecx+20h]
mov     eax, [eax+4]
push    edx
mov     dword ptr [eax+edx-20h], offset ??_7?$basic_iostream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [edx-20h]
mov     ecx, [eax+4]
lea     eax, [ecx-20h]
mov     [ecx+edx-24h], eax
mov     eax, [edx-10h]
mov     eax, [eax+4]
mov     dword ptr [eax+edx-10h], offset ??_7?$basic_ostream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [edx-10h]
mov     ecx, [eax+4]
lea     eax, [ecx-8]
mov     [ecx+edx-14h], eax
mov     eax, [edx-20h]
mov     eax, [eax+4]
mov     dword ptr [eax+edx-20h], offset ??_7?$basic_istream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [edx-20h]
mov     ecx, [eax+4]
lea     eax, [ecx-18h]
mov     [ecx+edx-24h], eax
mov     dword ptr [edx], offset ??_7ios_base@std@@6b@
call    ?_ios_base_dtor@ios_base@std@@caxpav12@@z
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, ecx
push    edi
mov     edx, [esi+10h]
mov     edi, [ebp+arg_0]
cmp     edx, edi
jb      loc_406be8
mov     eax, [ebp+arg_8]
push    ebx
mov     ebx, [eax+10h]
cmp     ebx, [ebp+arg_c]
jb      loc_406be8
mov     eax, [ebp+arg_4]
mov     ecx, edx
sub     ecx, edi
cmp     ecx, eax
cmovb   eax, ecx
sub     ebx, [ebp+arg_c]
mov     [ebp+arg_4], eax
mov     [ebp+size], ebx
mov     ebx, [ebp+arg_10]
cmp     [ebp+size], ebx
mov     [ebp+arg_10], edx
cmovb   ebx, [ebp+size]
sub     [ebp+arg_10], eax
or      eax, 0ffffffffh
sub     eax, ebx
cmp     eax, [ebp+arg_10]
jbe     loc_406bd4
mov     eax, [ebp+arg_10]
sub     ecx, [ebp+arg_4]
add     eax, ebx
mov     [ebp+size], ecx
mov     [ebp+arg_10], eax
cmp     edx, eax
jnb     short loc_406917
cmp     eax, 0fffffffeh
ja      loc_406bde
mov     eax, [esi+14h]
cmp     eax, [ebp+arg_10]
jnb     short loc_4068fc
push    edx
push    [ebp+arg_10]
mov     ecx, esi
call    sub_408fb0
mov     ecx, [ebp+size]
jmp     short loc_406917
cmp     [ebp+arg_10], 0
jnz     short loc_406917
mov     dword ptr [esi+10h], 0
cmp     eax, 10h
jb      short loc_406912
mov     eax, [esi]
jmp     short loc_406914
mov     eax, esi
mov     byte ptr [eax], 0
mov     eax, [ebp+arg_8]
cmp     esi, eax
jz      short loc_40698c
mov     edx, [esi+14h]
cmp     edx, 10h
jb      short loc_406930
mov     edi, [esi]
mov     [ebp+size], edi
mov     edi, [ebp+arg_0]
jmp     short loc_406933
mov     [ebp+size], esi
cmp     edx, 10h
jb      short loc_40693c
mov     edx, [esi]
jmp     short loc_40693e
mov     edx, esi
test    ecx, ecx
jz      short loc_40695d
mov     eax, [ebp+size]
add     eax, edi
add     eax, [ebp+arg_4]
push    ecx
push    eax
lea     eax, [edx+edi]
add     eax, ebx
push    eax
call    _memmove
mov     eax, [ebp+arg_8]
add     esp, 0ch
cmp     dword ptr [eax+14h], 10h
jb      short loc_406965
mov     eax, [eax]
cmp     dword ptr [esi+14h], 10h
jb      short loc_40696f
mov     ecx, [esi]
jmp     short loc_406971
mov     ecx, esi
test    ebx, ebx
jz      loc_406ba9
add     eax, [ebp+arg_c]
push    ebx
push    eax
lea     eax, [ecx+edi]
push    eax
call    _memmove_0
jmp     loc_406ba6
mov     edx, [ebp+arg_4]
cmp     ebx, edx
ja      short loc_406a06
mov     eax, [esi+14h]
cmp     eax, 10h
jb      short loc_4069a2
mov     ecx, [esi]
mov     [ebp+arg_0], ecx
jmp     short loc_4069a5
mov     [ebp+arg_0], esi
cmp     eax, 10h
jb      short loc_4069ae
mov     ecx, [esi]
jmp     short loc_4069b0
mov     ecx, esi
test    ebx, ebx
jz      short loc_4069cb
mov     eax, [ebp+arg_0]
add     eax, [ebp+arg_c]
push    ebx
push    eax
lea     eax, [ecx+edi]
push    eax
call    _memmove
mov     edx, [ebp+arg_4]
add     esp, 0ch
mov     eax, [esi+14h]
cmp     eax, 10h
jb      short loc_4069da
mov     ecx, [esi]
mov     [ebp+arg_4], ecx
jmp     short loc_4069dd
mov     [ebp+arg_4], esi
cmp     eax, 10h
jb      short loc_4069e6
mov     ecx, [esi]
jmp     short loc_4069e8
mov     ecx, esi
mov     eax, [ebp+size]
test    eax, eax
jz      loc_406ba9
push    eax
mov     eax, [ebp+arg_4]
add     eax, edi
add     eax, edx
push    eax
lea     eax, [ecx+edi]
add     eax, ebx
jmp     loc_406ba0
cmp     [ebp+arg_c], edi
ja      short loc_406a7c
mov     eax, [esi+14h]
cmp     eax, 10h
jb      short loc_406a1d
mov     edx, [esi]
mov     [ebp+arg_0], edx
mov     edx, [ebp+arg_4]
jmp     short loc_406a20
mov     [ebp+arg_0], esi
cmp     eax, 10h
jb      short loc_406a2c
mov     eax, [esi]
mov     [ebp+arg_4], eax
jmp     short loc_406a2f
mov     [ebp+arg_4], esi
test    ecx, ecx
jz      short loc_406a4c
mov     eax, [ebp+arg_0]
add     eax, edi
add     eax, edx
push    ecx
push    eax
mov     eax, [ebp+arg_4]
add     eax, edi
add     eax, ebx
push    eax
call    _memmove
add     esp, 0ch
mov     eax, [esi+14h]
cmp     eax, 10h
jb      short loc_406a58
mov     edx, [esi]
jmp     short loc_406a5a
mov     edx, esi
cmp     eax, 10h
jb      short loc_406a63
mov     ecx, [esi]
jmp     short loc_406a65
mov     ecx, esi
test    ebx, ebx
jz      loc_406ba9
mov     eax, [ebp+arg_c]
add     eax, edx
push    ebx
push    eax
lea     eax, [ecx+edi]
jmp     loc_406ba0
lea     eax, [edi+edx]
cmp     eax, [ebp+arg_c]
mov     eax, [esi+14h]
ja      short loc_406afa
cmp     eax, 10h
jb      short loc_406a96
mov     edx, [esi]
mov     [ebp+arg_0], edx
mov     edx, [ebp+arg_4]
jmp     short loc_406a99
mov     [ebp+arg_0], esi
cmp     eax, 10h
jb      short loc_406aa5
mov     eax, [esi]
mov     [ebp+arg_8], eax
jmp     short loc_406aa8
mov     [ebp+arg_8], esi
test    ecx, ecx
jz      short loc_406ac8
mov     eax, [ebp+arg_0]
add     eax, edi
add     eax, edx
push    ecx
push    eax
mov     eax, [ebp+arg_8]
add     eax, edi
add     eax, ebx
push    eax
call    _memmove
mov     edx, [ebp+arg_4]
add     esp, 0ch
mov     ecx, [esi+14h]
cmp     ecx, 10h
jb      short loc_406ad4
mov     eax, [esi]
jmp     short loc_406ad6
mov     eax, esi
cmp     ecx, 10h
jb      short loc_406adf
mov     ecx, [esi]
jmp     short loc_406ae1
mov     ecx, esi
test    ebx, ebx
jz      loc_406ba9
sub     eax, edx
add     eax, [ebp+arg_c]
push    ebx
add     eax, ebx
push    eax
lea     eax, [ecx+edi]
jmp     loc_406ba0
cmp     eax, 10h
jb      short loc_406b06
mov     ecx, [esi]
mov     [ebp+arg_8], ecx
jmp     short loc_406b09
mov     [ebp+arg_8], esi
cmp     eax, 10h
jb      short loc_406b12
mov     ecx, [esi]
jmp     short loc_406b14
mov     ecx, esi
test    edx, edx
jz      short loc_406b2f
mov     eax, [ebp+arg_8]
add     eax, [ebp+arg_c]
push    edx
push    eax
lea     eax, [ecx+edi]
push    eax
call    _memmove
mov     edx, [ebp+arg_4]
add     esp, 0ch
mov     eax, [esi+14h]
cmp     eax, 10h
jb      short loc_406b3e
mov     ecx, [esi]
mov     [ebp+arg_8], ecx
jmp     short loc_406b41
mov     [ebp+arg_8], esi
cmp     eax, 10h
jb      short loc_406b4a
mov     ecx, [esi]
jmp     short loc_406b4c
mov     ecx, esi
mov     eax, [ebp+size]
test    eax, eax
jz      short loc_406b6a
push    eax
mov     eax, [ebp+arg_8]
add     eax, edi
add     eax, edx
push    eax
lea     eax, [ecx+edi]
add     eax, ebx
push    eax
call    _memmove
add     esp, 0ch
mov     eax, [esi+14h]
cmp     eax, 10h
jb      short loc_406b79
mov     ecx, [esi]
mov     [ebp+arg_8], ecx
jmp     short loc_406b7c
mov     [ebp+arg_8], esi
cmp     eax, 10h
jb      short loc_406b85
mov     edx, [esi]
jmp     short loc_406b87
mov     edx, esi
mov     ecx, [ebp+arg_4]
mov     eax, ebx
sub     eax, ecx
jz      short loc_406ba9
push    eax
mov     eax, [ebp+arg_8]
add     eax, [ebp+arg_c]
add     eax, ebx
push    eax
mov     eax, edi
add     eax, edx
add     eax, ecx
push    eax
call    _memmove
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
mov     ecx, [ebp+arg_10]
mov     [esi+10h], ecx
pop     ebx
jb      short loc_406bc6
mov     eax, [esi]
pop     edi
mov     byte ptr [eax+ecx], 0
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    14h
mov     eax, esi
pop     edi
mov     byte ptr [eax+ecx], 0
pop     esi
mov     esp, ebp
pop     ebp
retn    14h
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    offset ainvalidstringp
call    ?_xout_of_range@std@@yaxpbd@z
push    ebp
mov     ebp, esp
mov     edx, [ebp+src]
sub     esp, 8
push    esi
push    edi
mov     esi, ecx
test    edx, edx
jz      short loc_406c5e
mov     ecx, [esi+14h]
cmp     ecx, 10h
jb      short loc_406c1d
mov     eax, [esi]
jmp     short loc_406c1f
mov     eax, esi
cmp     edx, eax
jb      short loc_406c5e
cmp     ecx, 10h
jb      short loc_406c2c
mov     edi, [esi]
jmp     short loc_406c2e
mov     edi, esi
mov     eax, [esi+10h]
add     eax, edi
cmp     eax, edx
jbe     short loc_406c5e
cmp     ecx, 10h
jb      short loc_406c40
mov     eax, [esi]
jmp     short loc_406c42
mov     eax, esi
push    [ebp+arg_c]
sub     edx, eax
push    edx
push    esi
push    [ebp+arg_4]
mov     ecx, esi
push    [ebp+arg_0]
call    sub_406870
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    10h
mov     ecx, [esi+10h]
mov     eax, [ebp+arg_0]
cmp     ecx, eax
jb      loc_406dd1
mov     edx, [ebp+arg_c]
mov     edi, ecx
sub     edi, eax
push    ebx
mov     ebx, [ebp+arg_4]
cmp     edi, ebx
cmovb   ebx, edi
or      eax, 0ffffffffh
sub     ecx, ebx
sub     eax, edx
cmp     eax, ecx
jbe     loc_406ddb
sub     edi, ebx
mov     [ebp+size], edi
cmp     edx, ebx
jnb     short loc_406cd7
mov     eax, [esi+14h]
cmp     eax, 10h
jb      short loc_406ca3
mov     ecx, [esi]
mov     [ebp+arg_4], ecx
jmp     short loc_406ca6
mov     [ebp+arg_4], esi
cmp     eax, 10h
jb      short loc_406cb2
mov     eax, [esi]
mov     [ebp+var_4], eax
jmp     short loc_406cb5
mov     [ebp+var_4], esi
test    edi, edi
jz      short loc_406cd7
mov     eax, [ebp+arg_4]
add     eax, [ebp+arg_0]
push    edi
add     eax, ebx
push    eax
mov     eax, [ebp+var_4]
add     eax, [ebp+arg_0]
add     eax, edx
push    eax
call    _memmove
mov     edx, [ebp+arg_c]
add     esp, 0ch
test    edx, edx
jnz     short loc_406ce3
test    ebx, ebx
jz      loc_406dc6
mov     ecx, [esi+10h]
mov     edi, ecx
sub     edi, ebx
add     edi, edx
cmp     edi, 0fffffffeh
ja      loc_406de5
mov     eax, [esi+14h]
cmp     eax, edi
jnb     short loc_406d23
push    ecx
push    edi
mov     ecx, esi
call    sub_408fb0
mov     edx, [ebp+arg_c]
test    edi, edi
jz      loc_406dc6
cmp     ebx, edx
jnb     short loc_406d84
mov     eax, [esi+14h]
cmp     eax, 10h
jb      short loc_406d4d
mov     ecx, [esi]
mov     [ebp+arg_4], ecx
jmp     short loc_406d50
test    edi, edi
jnz     short loc_406d10
mov     [esi+10h], edi
cmp     eax, 10h
jb      short loc_406d3f
mov     eax, [esi]
pop     ebx
mov     byte ptr [eax], 0
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    10h
pop     ebx
mov     eax, esi
pop     edi
mov     byte ptr [eax], 0
pop     esi
mov     esp, ebp
pop     ebp
retn    10h
mov     [ebp+arg_4], esi
cmp     eax, 10h
jb      short loc_406d5c
mov     ecx, [esi]
mov     [ebp+var_4], ecx
jmp     short loc_406d5f
mov     [ebp+var_4], esi
mov     eax, [ebp+size]
test    eax, eax
jz      short loc_406d84
push    eax
mov     eax, [ebp+arg_4]
add     eax, [ebp+arg_0]
add     eax, ebx
push    eax
mov     eax, [ebp+var_4]
add     eax, [ebp+arg_0]
add     eax, edx
push    eax
call    _memmove
mov     edx, [ebp+arg_c]
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
jb      short loc_406d8e
mov     ecx, [esi]
jmp     short loc_406d90
mov     ecx, esi
test    edx, edx
jz      short loc_406da6
mov     eax, [ebp+arg_0]
push    edx
push    [ebp+src]
add     eax, ecx
push    eax
call    _memmove_0
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], edi
jb      short loc_406dc0
mov     eax, [esi]
pop     ebx
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    10h
mov     eax, esi
mov     byte ptr [eax+edi], 0
pop     ebx
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    10h
push    offset ainvalidstringp
call    ?_xout_of_range@std@@yaxpbd@z
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_8]
mov     [ebp+var_4], ecx
test    esi, esi
jnz     short loc_406e10
cmp     edx, [ecx+10h]
ja      short loc_406e10
mov     eax, edx
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    ebx
push    edi
mov     edi, [ecx+10h]
cmp     edx, edi
jnb     loc_406ee0
sub     edi, edx
cmp     esi, edi
ja      loc_406ee0
mov     eax, 1
sub     eax, esi
add     edi, eax
cmp     dword ptr [ecx+14h], 10h
jb      short loc_406e3a
mov     eax, [ecx]
jmp     short loc_406e3c
mov     eax, ecx
lea     ecx, [eax+edx]
mov     [ebp+arg_4], ecx
test    edi, edi
jz      loc_406ee0
mov     eax, [ebp+arg_0]
push    edi
movsx   eax, byte ptr [eax]
push    eax
push    ecx
call    _memchr
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jz      short loc_406ee0
test    esi, esi
jz      short loc_406ec8
mov     ecx, [ebp+arg_8]
mov     esi, [ebp+arg_0]
mov     edx, ebx
sub     ecx, 4
jb      short loc_406e83
mov     eax, [edx]
cmp     eax, [esi]
jnz     short loc_406e88
add     edx, 4
add     esi, 4
sub     ecx, 4
jnb     short loc_406e72
cmp     ecx, 0fffffffch
jz      short loc_406ec8
mov     al, [edx]
cmp     al, [esi]
jnz     short loc_406eb5
cmp     ecx, 0fffffffdh
jz      short loc_406ec8
mov     al, [edx+1]
cmp     al, [esi+1]
jnz     short loc_406eb5
cmp     ecx, 0fffffffeh
jz      short loc_406ec8
mov     al, [edx+2]
cmp     al, [esi+2]
jnz     short loc_406eb5
cmp     ecx, 0ffffffffh
jz      short loc_406ec8
mov     al, [edx+3]
cmp     al, [esi+3]
jz      short loc_406ec8
mov     ecx, [ebp+arg_4]
mov     esi, [ebp+arg_8]
sub     ecx, ebx
dec     ecx
add     edi, ecx
lea     ecx, [ebx+1]
jmp     loc_406e3f
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+14h], 10h
jb      short loc_406ed3
mov     eax, [eax]
sub     ebx, eax
pop     edi
mov     eax, ebx
pop     ebx
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
pop     edi
pop     ebx
or      eax, 0ffffffffh
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, ecx
or      ecx, 0ffffffffh
mov     eax, [edi+10h]
cmp     eax, 1
jb      short loc_406f51
dec     eax
cmp     eax, ecx
cmova   eax, ecx
cmp     dword ptr [edi+14h], 10h
jb      short loc_406f13
mov     ecx, [edi]
jmp     short loc_406f15
mov     ecx, edi
lea     esi, [ecx+eax]
mov     ecx, [ebp+arg_0]
mov     bl, [ecx]
lea     ecx, [ecx+0]
cmp     [esi], bl
jnz     short loc_406f2a
mov     al, [esi]
cmp     al, [ecx]
jz      short loc_406f3b
mov     ecx, edi
call    unknown_libname_1
cmp     esi, eax
jz      short loc_406f4e
mov     ecx, [ebp+arg_0]
dec     esi
jmp     short loc_406f20
cmp     dword ptr [edi+14h], 10h
jb      short loc_406f43
mov     edi, [edi]
sub     esi, edi
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
or      ecx, 0ffffffffh
pop     edi
pop     esi
mov     eax, ecx
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_406fbc
cmp     eax, 0ffffffffh
jbe     short loc_406f79
or      eax, 0ffffffffh
jmp     short loc_406f7a
dec     eax
cmp     dword ptr [edi+14h], 10h
jb      short loc_406f82
mov     ecx, [edi]
mov     ebx, [ebp+buf]
lea     esi, [ecx+eax]
movsx   eax, byte ptr [esi]
push    1
push    eax
push    ebx
call    _memchr
add     esp, 0ch
test    eax, eax
jz      short loc_406fa9
mov     ecx, edi
call    unknown_libname_1
cmp     esi, eax
jz      short loc_406fbc
dec     esi
jmp     short loc_406f88
cmp     dword ptr [edi+14h], 10h
jb      short loc_406fb1
mov     edi, [edi]
sub     esi, edi
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
pop     edi
pop     esi
or      eax, 0ffffffffh
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_406fe0
mov     eax, large fs:0
push    eax
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
call    sub_403eb0
mov     eax, [ebp+arg_0]
mov     [esi+38h], eax
lea     eax, [ebp+arg_0]
push    eax
mov     ecx, esi
mov     dword ptr [esi+3ch], 0
call    sub_403e90
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+arg_0]
add     esp, 4
mov     edi, eax
test    ecx, ecx
jz      short loc_407054
mov     edx, [ecx]
call    dword ptr [edx+8]
test    eax, eax
jz      short loc_407054
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     eax, [edi]
push    20h
mov     eax, [eax+20h]
mov     ecx, edi
call    eax
cmp     dword ptr [esi+38h], 0
mov     [esi+40h], al
jnz     short loc_407082
mov     eax, [esi+0ch]
or      eax, 4
and     eax, 17h
mov     [esi+0ch], eax
test    [esi+10h], eax
jz      short loc_407082
push    0
mov     ecx, esi
call    sub_403e00
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [ecx+1ch]
cmp     dword ptr [eax], 0
jz      short loc_4070af
mov     eax, [ecx+2ch]
mov     eax, [eax]
cdq
retn
xor     eax, eax
cdq
retn
mov     eax, [ecx+20h]
cmp     dword ptr [eax], 0
jz      short loc_4070cf
mov     eax, [ecx+30h]
mov     eax, [eax]
cdq
retn
xor     eax, eax
cdq
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4070e0
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_10], esi
mov     [ebp+var_14], 0
mov     eax, [esi]
push    ecx
mov     eax, [eax+4]
push    [ebp+arg_0]
mov     dword ptr [esi+eax], offset ??_7?$basic_istream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [esi]
mov     edx, [eax+4]
lea     eax, [edx-18h]
mov     [edx+esi-4], eax
mov     eax, [esi]
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
mov     ecx, [eax+4]
add     ecx, esi
call    sub_406fe0
mov     eax, [esi+10h]
mov     eax, [eax+4]
mov     dword ptr [esi+eax+10h], offset ??_7?$basic_ostream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [esi+10h]
mov     ecx, [eax+4]
lea     eax, [ecx-8]
mov     [ecx+esi+0ch], eax
mov     eax, [esi]
mov     eax, [eax+4]
mov     dword ptr [esi+eax], offset ??_7?$basic_iostream@du?$char_traits@d@std@@@std@@6b@
mov     eax, [esi]
mov     ecx, [eax+4]
lea     eax, [ecx-20h]
mov     [ecx+esi-4], eax
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     edx, ecx
push    esi
mov     ecx, [edx+3ch]
mov     esi, [ebp+arg_0]
push    edi
mov     [ebp+var_24], 0
test    cl, 2
jnz     short loc_40721e
mov     eax, [edx+20h]
mov     eax, [eax]
test    eax, eax
jz      short loc_40721e
mov     ecx, [edx+38h]
cmp     ecx, eax
cmovb   ecx, eax
mov     eax, [edx+10h]
mov     eax, [eax]
sub     ecx, eax
push    ecx
push    eax
lea     ecx, [ebp+src]
mov     [ebp+var_c], 0fh
mov     [ebp+var_10], 0
mov     byte ptr [ebp+src], 0
call    sub_408010
lea     eax, [ebp+src]
push    eax
mov     ecx, esi
call    sub_405590
cmp     [ebp+var_c], 10h
jb      loc_4072d8
push    [ebp+src]
call    j__free
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
test    cl, 4
jnz     short loc_407286
mov     eax, [edx+1ch]
mov     edi, [eax]
test    edi, edi
jz      short loc_407286
mov     eax, [edx+2ch]
mov     ecx, [eax]
mov     eax, [edx+0ch]
add     ecx, edi
mov     eax, [eax]
sub     ecx, eax
push    ecx
push    eax
lea     ecx, [ebp+src]
mov     [ebp+var_c], 0fh
mov     [ebp+var_10], 0
mov     byte ptr [ebp+src], 0
call    sub_408010
lea     eax, [ebp+src]
push    eax
mov     ecx, esi
call    sub_405590
cmp     [ebp+var_c], 10h
jb      short loc_4072d8
push    [ebp+src]
call    j__free
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
mov     [ebp+var_c], 0fh
mov     [ebp+var_10], 0
mov     byte ptr [ebp+src], 0
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
mov     ecx, [ebp+var_c]
cmp     ecx, 10h
jnb     short loc_4072ca
mov     eax, [ebp+var_10]
inc     eax
jz      short loc_4072cf
push    eax
lea     eax, [ebp+src]
push    eax
push    esi
call    _memmove
mov     ecx, [ebp+var_c]
add     esp, 0ch
jmp     short loc_4072cf
mov     eax, [ebp+src]
mov     [esi], eax
mov     eax, [ebp+var_10]
mov     [esi+10h], eax
mov     [esi+14h], ecx
mov     ecx, [ebp+var_8]
pop     edi
mov     eax, esi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
test    byte ptr [esi+3ch], 1
jz      short loc_407309
mov     eax, [esi+0ch]
push    dword ptr [eax]
call    j__free
add     esp, 4
mov     eax, [esi+0ch]
mov     dword ptr [eax], 0
mov     eax, [esi+1ch]
mov     dword ptr [eax], 0
mov     eax, [esi+2ch]
mov     dword ptr [eax], 0
mov     eax, [esi+10h]
mov     dword ptr [eax], 0
mov     eax, [esi+20h]
mov     dword ptr [eax], 0
mov     eax, [esi+30h]
mov     dword ptr [eax], 0
mov     eax, [ebp+src]
and     dword ptr [esi+3ch], 0fffffffeh
mov     edx, [esi+3ch]
mov     dword ptr [esi+38h], 0
cmp     dword ptr [eax+14h], 10h
mov     ecx, [eax+10h]
jb      short loc_40735b
mov     eax, [eax]
mov     dword ptr [esi+38h], 0
mov     [esi+3ch], edx
test    ecx, ecx
jz      short loc_407372
push    ecx
push    eax
mov     ecx, esi
call    sub_408350
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_407380
mov     eax, large fs:0
push    eax
push    ecx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+var_10], edi
mov     esi, [ebp+arg_0]
mov     [edi], esi
mov     eax, [esi]
mov     eax, [eax+4]
mov     ecx, [eax+esi+38h]
test    ecx, ecx
jz      short loc_4073c1
mov     eax, [ecx]
call    dword ptr [eax+4]
mov     [ebp+var_4], 0
mov     eax, [esi]
mov     eax, [eax+4]
cmp     dword ptr [eax+esi+0ch], 0
jnz     short loc_4073e1
mov     ecx, [eax+esi+3ch]
test    ecx, ecx
jz      short loc_4073e1
call    sub_405910
mov     eax, [esi]
mov     eax, [eax+4]
cmp     dword ptr [eax+esi+0ch], 0
setz    al
mov     [edi+4], al
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    esi
mov     esi, ecx
call    j_?__uncaught_exception@@ya_nxz
test    al, al
jnz     short loc_407423
mov     ecx, [esi]
call    sub_408220
mov     ecx, [esi]
mov     eax, [ecx]
mov     eax, [eax+4]
mov     ecx, [eax+ecx+38h]
test    ecx, ecx
jz      short loc_407438
mov     eax, [ecx]
pop     esi
jmp     dword ptr [eax+8]
pop     esi
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_407440
mov     eax, large fs:0
push    eax
sub     esp, 48h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+54h+var_14], eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+64h+var_c]
mov     large fs:0, eax
mov     [esp+64h+var_50], ecx
mov     esi, [ebp+arg_c]
mov     al, [ebp+arg_10]
test    dword ptr [esi+14h], 4000h
mov     ebx, [ebp+arg_0]
mov     byte ptr [esp+64h+var_54], al
jnz     short loc_4074ac
movzx   eax, [ebp+arg_14]
mov     edx, [ecx]
push    eax
push    [esp+68h+var_54]
push    esi
push    [ebp+arg_8]
push    [ebp+arg_4]
push    ebx
call    dword ptr [edx+24h]
jmp     loc_407607
lea     eax, [esp+64h+var_4c]
push    eax
mov     ecx, esi
call    sub_403e90
push    eax
mov     [esp+68h+var_4], 0
call    sub_409760
mov     [esp+68h+var_4], 0ffffffffh
mov     ecx, [esp+68h+var_4c]
add     esp, 4
mov     edi, eax
test    ecx, ecx
jz      short loc_4074ec
mov     edx, [ecx]
call    dword ptr [edx+8]
test    eax, eax
jz      short loc_4074ec
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     [esp+64h+var_30], 0fh
mov     [esp+64h+var_34], 0
mov     byte ptr [esp+64h+var_44], 0
cmp     [ebp+arg_14], 0
lea     eax, [esp+64h+block]
mov     [esp+64h+var_4], 1
mov     ecx, edi
push    eax
jz      short loc_40751d
call    sub_407d30
jmp     short loc_407522
call    sub_407d10
push    eax
lea     ecx, [esp+68h+var_44]
call    sub_405600
cmp     [esp+64h+var_18], 10h
jb      short loc_40753f
push    [esp+64h+block]
call    j__free
add     esp, 4
cmp     dword ptr [esi+24h], 0
mov     ecx, [esp+64h+var_34]
jl      short loc_40755c
jg      short loc_407551
cmp     dword ptr [esi+20h], 0
jbe     short loc_40755c
mov     edi, [esi+20h]
cmp     edi, ecx
jbe     short loc_40755c
sub     edi, ecx
jmp     short loc_40755e
xor     edi, edi
mov     eax, [esi+14h]
and     eax, 1c0h
cmp     eax, 40h
jz      short loc_40759a
push    edi
push    [esp+68h+var_54]
lea     eax, [esp+6ch+var_4c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    eax
push    [esp+78h+var_50]
call    sub_408d40
mov     edx, [eax]
mov     ecx, [esp+7ch+var_34]
mov     [ebp+arg_4], edx
mov     eax, [eax+4]
add     esp, 18h
mov     [ebp+arg_8], eax
xor     edi, edi
jmp     short loc_4075a0
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_4]
cmp     [esp+64h+var_30], 10h
mov     [esp+64h+var_4c], eax
push    ecx
lea     eax, [esp+68h+var_44]
cmovnb  eax, [esp+68h+var_44]
push    eax
push    [esp+6ch+var_4c]
lea     eax, [esp+70h+var_4c]
push    edx
push    eax
push    [esp+78h+var_50]
call    sub_408cd0
mov     ecx, [eax]
push    edi
push    [esp+80h+var_54]
mov     [ebp+arg_4], ecx
mov     eax, [eax+4]
push    eax
push    ecx
push    ebx
push    [esp+90h+var_50]
mov     [ebp+arg_8], eax
mov     dword ptr [esi+20h], 0
mov     dword ptr [esi+24h], 0
call    sub_408d40
add     esp, 30h
cmp     [esp+64h+var_30], 10h
jb      short loc_407607
push    [esp+64h+var_44]
call    j__free
add     esp, 4
mov     eax, ebx
mov     ecx, dword ptr [esp+64h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+54h+var_14]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    18h
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 54h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+54h+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_c]
push    edi
push    [ebp+arg_14]
lea     eax, [esp+64h+var_50]
push    dword ptr [esi+14h]
mov     edi, ecx
push    offset ald
push    eax
push    edi
call    sub_4088a0
add     esp, 10h
push    eax
lea     eax, [esp+68h+buffer]
push    40h
push    eax
call    _sprintf_s
push    eax
lea     eax, [esp+74h+buffer]
push    eax
push    [ebp+arg_10]
push    esi
push    [ebp+arg_8]
push    [ebp+arg_4]
push    ebx
push    edi
call    sub_408930
mov     ecx, [esp+90h+var_4]
add     esp, 30h
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    18h
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 54h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+54h+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_c]
push    edi
push    [ebp+arg_14]
lea     eax, [esp+64h+var_50]
push    dword ptr [esi+14h]
mov     edi, ecx
push    offset alu
push    eax
push    edi
call    sub_4088a0
add     esp, 10h
push    eax
lea     eax, [esp+68h+buffer]
push    40h
push    eax
call    _sprintf_s
push    eax
lea     eax, [esp+74h+buffer]
push    eax
push    [ebp+arg_10]
push    esi
push    [ebp+arg_8]
push    [ebp+arg_4]
push    ebx
push    edi
call    sub_408930
mov     ecx, [esp+90h+var_4]
add     esp, 30h
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    18h
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 54h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+54h+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_c]
push    edi
push    [ebp+arg_18]
lea     eax, [esp+64h+var_50]
push    [ebp+arg_14]
mov     edi, ecx
push    dword ptr [esi+14h]
push    offset ald_0
push    eax
push    edi
call    sub_4088a0
add     esp, 10h
push    eax
lea     eax, [esp+6ch+buffer]
push    40h
push    eax
call    _sprintf_s
push    eax
lea     eax, [esp+78h+buffer]
push    eax
push    [ebp+arg_10]
push    esi
push    [ebp+arg_8]
push    [ebp+arg_4]
push    ebx
push    edi
call    sub_408930
mov     ecx, [esp+94h+var_4]
add     esp, 34h
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    1ch
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 54h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+54h+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_c]
push    edi
push    [ebp+arg_18]
lea     eax, [esp+64h+var_50]
push    [ebp+arg_14]
mov     edi, ecx
push    dword ptr [esi+14h]
push    offset alu_0
push    eax
push    edi
call    sub_4088a0
add     esp, 10h
push    eax
lea     eax, [esp+6ch+buffer]
push    40h
push    eax
call    _sprintf_s
push    eax
lea     eax, [esp+78h+buffer]
push    eax
push    [ebp+arg_10]
push    esi
push    [ebp+arg_8]
push    [ebp+arg_4]
push    ebx
push    edi
call    sub_408930
mov     ecx, [esp+94h+var_4]
add     esp, 34h
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    1ch
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 98h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+98h+var_4], eax
mov     eax, [ebp+arg_0]
push    esi
mov     [esp+9ch+var_88], eax
mov     eax, [ebp+arg_c]
push    edi
mov     edi, [eax+1ch]
mov     esi, [eax+18h]
mov     [esp+0a0h+var_84], ecx
mov     [esp+0a0h+var_8c], eax
test    edi, edi
jg      short loc_407889
jl      short loc_40786e
test    esi, esi
jnz     short loc_40787e
test    dword ptr [eax+14h], 2000h
jnz     short loc_40787e
mov     esi, 6
xor     edi, edi
test    edi, edi
jl      short loc_407894
jg      short loc_407889
cmp     esi, 24h
jbe     short loc_407894
mov     eax, 24h
mov     [esp+0a0h+var_90], eax
jmp     short loc_40789a
mov     eax, esi
mov     [esp+0a0h+var_90], esi
movsd   xmm1, [ebp+arg_14]
cdq
sub     esi, eax
mov     eax, [esp+0a0h+var_8c]
sbb     edi, edx
mov     eax, [eax+14h]
xor     edx, edx
xor     ecx, ecx
and     eax, 3000h
mov     [esp+0a0h+size], edx
mov     [esp+0a0h+var_94], ecx
cmp     eax, 2000h
jnz     loc_407975
movapd  xmm0, xmm1
mulsd   xmm0, ds:qword_430568
ucomisd xmm0, xmm1
lahf
test    ah, 44h
jnp     loc_407975
movsd   xmm4, ds:qword_430580
xorps   xmm3, xmm3
comisd  xmm3, xmm1
setnbe  al
test    al, al
jz      short loc_4078fb
xorpd   xmm1, xmm4
movsd   xmm0, ds:qword_430578
comisd  xmm1, xmm0
movsd   xmm2, ds:qword_430570
jb      short loc_40792a
cmp     edx, 1388h
jnb     short loc_407926
divsd   xmm1, xmm2
add     edx, 0ah
comisd  xmm1, xmm0
jnb     short loc_407911
mov     [esp+0a0h+size], edx
comisd  xmm1, xmm3
jbe     short loc_40796d
test    edi, edi
jl      short loc_40796d
jg      short loc_40793b
cmp     esi, 0ah
jb      short loc_40796d
movsd   xmm0, ds:qword_430560
comisd  xmm0, xmm1
jb      short loc_407969
cmp     ecx, 1388h
jnb     short loc_407969
add     esi, 0fffffff6h
adc     edi, 0ffffffffh
add     ecx, 0ah
mulsd   xmm1, xmm2
test    edi, edi
jg      short loc_407943
jl      short loc_407969
cmp     esi, 0ah
jnb     short loc_407943
mov     [esp+0a0h+var_94], ecx
test    al, al
jz      short loc_407975
xorpd   xmm1, xmm4
mov     edi, [esp+0a0h+var_8c]
mov     [esp+0a0h+format], 25h
mov     edx, [edi+14h]
lea     eax, [esp+0a0h+var_7f]
test    dl, 20h
jz      short loc_407993
mov     [esp+0a0h+var_7f], 2bh
lea     eax, [esp+0a0h+var_7e]
test    dl, 10h
jz      short loc_40799c
mov     byte ptr [eax], 23h
inc     eax
mov     ecx, edx
and     ecx, 3000h
mov     word ptr [eax], 2a2eh
test    dl, 4
jz      short loc_4079d4
cmp     ecx, 2000h
jz      short loc_4079dc
cmp     ecx, 3000h
jnz     short loc_4079c2
mov     cl, 41h
jmp     short loc_4079fc
cmp     ecx, 1000h
setnz   cl
lea     ecx, ds:45h[ecx*2]
jmp     short loc_4079fc
cmp     ecx, 2000h
jnz     short loc_4079e0
mov     cl, 66h
jmp     short loc_4079fc
cmp     ecx, 3000h
jnz     short loc_4079ec
mov     cl, 61h
jmp     short loc_4079fc
cmp     ecx, 1000h
setnz   cl
lea     ecx, ds:65h[ecx*2]
mov     [eax+2], cl
sub     esp, 8
add     eax, 3
movsd   [esp+0a8h+var_a8], xmm1
push    [esp+0a8h+var_90]
mov     byte ptr [eax], 0
lea     eax, [esp+0ach+format]
push    eax
lea     eax, [esp+0b0h+buffer]
push    6ch
push    eax
call    _sprintf_s
push    eax
push    esi
push    [esp+0c0h+var_94]
mov     esi, [esp+0c4h+var_88]
push    [esp+0c4h+size]
lea     eax, [esp+0c8h+buffer]
push    eax
push    [ebp+arg_10]
push    edi
push    [ebp+arg_8]
push    [ebp+arg_4]
push    esi
push    [esp+0e0h+var_84]
call    sub_408420
mov     ecx, [esp+0e4h+var_4]
add     esp, 44h
mov     eax, esi
pop     edi
pop     esi
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    1ch
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 98h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+98h+var_4], eax
mov     eax, [ebp+arg_0]
push    esi
mov     [esp+9ch+var_88], eax
mov     eax, [ebp+arg_c]
push    edi
mov     edi, [eax+1ch]
mov     esi, [eax+18h]
mov     [esp+0a0h+var_84], ecx
mov     [esp+0a0h+var_8c], eax
test    edi, edi
jg      short loc_407ac9
jl      short loc_407aae
test    esi, esi
jnz     short loc_407abe
test    dword ptr [eax+14h], 2000h
jnz     short loc_407abe
mov     esi, 6
xor     edi, edi
test    edi, edi
jl      short loc_407ad4
jg      short loc_407ac9
cmp     esi, 24h
jbe     short loc_407ad4
mov     eax, 24h
mov     [esp+0a0h+var_90], eax
jmp     short loc_407ada
mov     eax, esi
mov     [esp+0a0h+var_90], esi
movsd   xmm0, [ebp+arg_14]
cdq
sub     esi, eax
mov     eax, [esp+0a0h+var_8c]
sbb     edi, edx
mov     eax, [eax+14h]
xor     edx, edx
xor     ecx, ecx
and     eax, 3000h
mov     [esp+0a0h+size], edx
mov     [esp+0a0h+var_94], ecx
cmp     eax, 2000h
jnz     loc_407ba2
movsd   xmm4, ds:qword_430580
xorps   xmm3, xmm3
comisd  xmm3, xmm0
setnbe  al
test    al, al
jz      short loc_407b21
xorpd   xmm0, xmm4
movsd   xmm1, ds:qword_430578
comisd  xmm0, xmm1
movsd   xmm2, ds:qword_430570
jb      short loc_407b50
cmp     edx, 1388h
jnb     short loc_407b4c
divsd   xmm0, xmm2
add     edx, 0ah
comisd  xmm0, xmm1
jnb     short loc_407b37
mov     [esp+0a0h+size], edx
comisd  xmm0, xmm3
jbe     short loc_407b9a
test    edi, edi
jl      short loc_407b9a
jg      short loc_407b61
cmp     esi, 0ah
jb      short loc_407b9a
movsd   xmm1, ds:qword_430560
lea     esp, [esp+0]
comisd  xmm1, xmm0
jb      short loc_407b96
cmp     ecx, 1388h
jnb     short loc_407b96
add     esi, 0fffffff6h
adc     edi, 0ffffffffh
add     ecx, 0ah
mulsd   xmm0, xmm2
test    edi, edi
jg      short loc_407b70
jl      short loc_407b96
cmp     esi, 0ah
jnb     short loc_407b70
mov     [esp+0a0h+var_94], ecx
test    al, al
jz      short loc_407ba2
xorpd   xmm0, xmm4
mov     edi, [esp+0a0h+var_8c]
mov     [esp+0a0h+format], 25h
mov     edx, [edi+14h]
lea     eax, [esp+0a0h+var_7f]
test    dl, 20h
jz      short loc_407bc0
mov     [esp+0a0h+var_7f], 2bh
lea     eax, [esp+0a0h+var_7e]
test    dl, 10h
jz      short loc_407bc9
mov     byte ptr [eax], 23h
inc     eax
mov     ecx, edx
and     ecx, 3000h
mov     word ptr [eax], 2a2eh
mov     byte ptr [eax+2], 4ch
test    dl, 4
jz      short loc_407c05
cmp     ecx, 2000h
jz      short loc_407c0d
cmp     ecx, 3000h
jnz     short loc_407bf3
mov     cl, 41h
jmp     short loc_407c2d
cmp     ecx, 1000h
setnz   cl
lea     ecx, ds:45h[ecx*2]
jmp     short loc_407c2d
cmp     ecx, 2000h
jnz     short loc_407c11
mov     cl, 66h
jmp     short loc_407c2d
cmp     ecx, 3000h
jnz     short loc_407c1d
mov     cl, 61h
jmp     short loc_407c2d
cmp     ecx, 1000h
setnz   cl
lea     ecx, ds:65h[ecx*2]
mov     [eax+3], cl
sub     esp, 8
add     eax, 4
movsd   [esp+0a8h+var_a8], xmm0
push    [esp+0a8h+var_90]
mov     byte ptr [eax], 0
lea     eax, [esp+0ach+format]
push    eax
lea     eax, [esp+0b0h+buffer]
push    6ch
push    eax
call    _sprintf_s
push    eax
push    esi
push    [esp+0c0h+var_94]
mov     esi, [esp+0c4h+var_88]
push    [esp+0c4h+size]
lea     eax, [esp+0c8h+buffer]
push    eax
push    [ebp+arg_10]
push    edi
push    [ebp+arg_8]
push    [ebp+arg_4]
push    esi
push    [esp+0e0h+var_84]
call    sub_408420
mov     ecx, [esp+0e4h+var_4]
add     esp, 44h
mov     eax, esi
pop     edi
pop     esi
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    1ch
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 4ch
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+4ch+var_4], eax
mov     eax, [ebp+arg_14]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_c]
push    edi
push    eax
push    offset format
lea     eax, [esp+60h+buffer]
push    40h
push    eax
mov     edi, ecx
call    _sprintf_s
push    eax
lea     eax, [esp+6ch+buffer]
push    eax
push    [ebp+arg_10]
push    esi
push    [ebp+arg_8]
push    [ebp+arg_4]
push    ebx
push    edi
call    sub_408930
mov     ecx, [esp+88h+var_4]
add     esp, 30h
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    18h
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ecx]
push    [ebp+arg_0]
mov     [ebp+var_4], 0
call    dword ptr [edx+18h]
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ecx]
push    [ebp+arg_0]
mov     [ebp+var_4], 0
call    dword ptr [edx+1ch]
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    4
mov     al, [ecx+0ch]
retn
mov     al, [ecx+0dh]
retn
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ecx+8]
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+var_4], 0
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
cmp     byte ptr [edx], 0
jnz     short loc_407dac
xor     ecx, ecx
push    ecx
push    edx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, edx
push    edi
lea     edi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_407db2
sub     ecx, edi
pop     edi
push    ecx
push    edx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ecx+10h]
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+var_4], 0
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
cmp     byte ptr [edx], 0
jnz     short loc_407e0c
xor     ecx, ecx
push    ecx
push    edx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, edx
push    edi
lea     edi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_407e12
sub     ecx, edi
pop     edi
push    ecx
push    edx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ecx+14h]
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+var_4], 0
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
cmp     byte ptr [edx], 0
jnz     short loc_407e6c
xor     ecx, ecx
push    ecx
push    edx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, edx
push    edi
lea     edi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_407e72
sub     ecx, edi
pop     edi
push    ecx
push    edx
mov     ecx, esi
call    sub_408010
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
push    dword ptr [esi+8]
mov     dword ptr [esi], offset ??_7?$numpunct@d@std@@6b@
call    j_j__free
push    dword ptr [esi+10h]
call    j_j__free
push    dword ptr [esi+14h]
call    j_j__free
add     esp, 0ch
test    [ebp+arg_0], 1
mov     dword ptr [esi], offset ??_7_facet_base@std@@6b@
jz      short loc_407ecc
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, [ebx+10h]
mov     esi, ecx
mov     ecx, [ebp+arg_4]
cmp     edi, ecx
jb      loc_407fe2
sub     edi, ecx
cmp     [ebp+size], edi
cmovb   edi, [ebp+size]
cmp     esi, ebx
jnz     short loc_407f4d
lea     eax, [edi+ecx]
cmp     [esi+10h], eax
jb      loc_407fec
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], eax
jb      short loc_407f34
mov     edx, [esi]
push    ecx
push    0
mov     ecx, esi
mov     byte ptr [eax+edx], 0
call    sub_408ec0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    ecx
mov     edx, esi
push    0
mov     ecx, esi
mov     byte ptr [eax+edx], 0
call    sub_408ec0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
cmp     edi, 0fffffffeh
ja      loc_407ff6
mov     eax, [esi+14h]
cmp     eax, edi
jnb     short loc_407f81
push    dword ptr [esi+10h]
mov     ecx, esi
push    edi
call    sub_408fb0
mov     ecx, [ebp+arg_4]
test    edi, edi
jz      short loc_407fd9
cmp     dword ptr [ebx+14h], 10h
jb      short loc_407f77
mov     ebx, [ebx]
cmp     dword ptr [esi+14h], 10h
jb      short loc_407fa7
mov     edx, [esi]
jmp     short loc_407fa9
test    edi, edi
jnz     short loc_407f6f
mov     [esi+10h], edi
cmp     eax, 10h
jb      short loc_407f9b
mov     eax, [esi]
pop     edi
mov     byte ptr [eax], 0
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
pop     edi
mov     eax, esi
pop     esi
mov     byte ptr [eax], 0
pop     ebx
pop     ebp
retn    0ch
mov     edx, esi
test    edi, edi
jz      short loc_407fbb
push    edi
lea     eax, [ebx+ecx]
push    eax
push    edx
call    _memmove_0
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], edi
jb      short loc_407fd3
mov     eax, [esi]
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     eax, esi
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    offset ainvalidstringp
call    ?_xout_of_range@std@@yaxpbd@z
push    offset ainvalidstringp
call    ?_xout_of_range@std@@yaxpbd@z
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+src]
push    esi
mov     esi, ecx
test    ebx, ebx
jz      short loc_408075
mov     ecx, [esi+14h]
cmp     ecx, 10h
jb      short loc_40802a
mov     eax, [esi]
jmp     short loc_40802c
mov     eax, esi
cmp     ebx, eax
jb      short loc_408075
cmp     ecx, 10h
jb      short loc_408039
mov     edx, [esi]
jmp     short loc_40803b
mov     edx, esi
mov     eax, [esi+10h]
add     eax, edx
cmp     eax, ebx
jbe     short loc_408075
cmp     ecx, 10h
jb      short loc_40805f
mov     eax, [esi]
push    [ebp+size]
sub     ebx, eax
push    ebx
push    esi
mov     ecx, esi
call    sub_407ee0
pop     esi
pop     ebx
pop     ebp
retn    8
push    [ebp+size]
mov     eax, esi
sub     ebx, eax
push    ebx
push    esi
mov     ecx, esi
call    sub_407ee0
pop     esi
pop     ebx
pop     ebp
retn    8
push    edi
mov     edi, [ebp+size]
cmp     edi, 0fffffffeh
ja      short loc_4080fc
mov     eax, [esi+14h]
cmp     eax, edi
jnb     short loc_40809e
push    dword ptr [esi+10h]
mov     ecx, esi
push    edi
call    sub_408fb0
test    edi, edi
jz      short loc_4080f3
cmp     dword ptr [esi+14h], 10h
jb      short loc_4080c4
mov     eax, [esi]
jmp     short loc_4080c6
test    edi, edi
jnz     short loc_408094
mov     [esi+10h], edi
cmp     eax, 10h
jb      short loc_4080b8
mov     eax, [esi]
pop     edi
mov     byte ptr [eax], 0
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
pop     edi
mov     eax, esi
pop     esi
mov     byte ptr [eax], 0
pop     ebx
pop     ebp
retn    8
mov     eax, esi
test    edi, edi
jz      short loc_4080d5
push    edi
push    ebx
push    eax
call    _memmove_0
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], edi
jb      short loc_4080ed
mov     eax, [esi]
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
mov     eax, esi
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    ebx
push    esi
mov     esi, ecx
mov     ecx, [esi+10h]
cmp     ecx, edx
jb      loc_4081fa
mov     ebx, [ebp+size]
or      eax, 0ffffffffh
sub     eax, ecx
cmp     eax, ebx
jbe     loc_408204
test    ebx, ebx
jz      loc_4081f2
push    edi
lea     edi, [ecx+ebx]
cmp     edi, 0fffffffeh
ja      loc_40820e
mov     eax, [esi+14h]
cmp     eax, edi
jnb     short loc_408174
push    ecx
push    edi
mov     ecx, esi
call    sub_408fb0
mov     edx, [ebp+arg_0]
test    edi, edi
jz      loc_4081f1
mov     eax, [esi+14h]
cmp     eax, 10h
jb      short loc_40819a
mov     ecx, [esi]
mov     [ebp+size], ecx
jmp     short loc_40819d
test    edi, edi
jnz     short loc_408165
mov     [esi+10h], edi
cmp     eax, 10h
jb      short loc_40818e
mov     eax, [esi]
pop     edi
mov     byte ptr [eax], 0
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
pop     edi
mov     eax, esi
pop     esi
mov     byte ptr [eax], 0
pop     ebx
pop     ebp
retn    0ch
mov     [ebp+size], esi
cmp     eax, 10h
jb      short loc_4081a6
mov     ecx, [esi]
jmp     short loc_4081a8
mov     ecx, esi
mov     eax, [esi+10h]
sub     eax, edx
jz      short loc_4081c7
push    eax
mov     eax, [ebp+size]
add     eax, edx
push    eax
lea     eax, [ecx+edx]
add     eax, ebx
push    eax
call    _memmove
mov     edx, [ebp+arg_0]
add     esp, 0ch
push    dword ptr [ebp+arg_8]
mov     ecx, esi
push    ebx
push    edx
call    sub_408f60
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], edi
jb      short loc_4081eb
mov     eax, [esi]
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     eax, esi
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    offset ainvalidstringp
call    ?_xout_of_range@std@@yaxpbd@z
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_408220
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     esi, ecx
mov     [ebp+var_4], 0
mov     eax, [esi]
mov     eax, [eax+4]
cmp     dword ptr [eax+esi+0ch], 0
jnz     short loc_40829c
test    byte ptr [eax+esi+14h], 2
jz      short loc_40829c
mov     ecx, [eax+esi+38h]
mov     eax, [ecx]
call    dword ptr [eax+34h]
cmp     eax, 0ffffffffh
jnz     short loc_40829c
mov     eax, [esi]
mov     ecx, [eax+4]
mov     eax, [ecx+esi+0ch]
add     ecx, esi
or      eax, 4
cmp     dword ptr [ecx+38h], 0
jnz     short loc_40828a
or      eax, 4
and     eax, 17h
mov     [ecx+0ch], eax
test    [ecx+10h], eax
jz      short loc_40829c
push    0
call    sub_403e00
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset loc_40829c
retn
push    esi
mov     esi, ecx
push    edi
push    4
mov     dword ptr [esi], offset ??_7?$basic_streambuf@du?$char_traits@d@std@@@std@@6b@
call    ??2@yapaxi@z
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_4082e8
push    1
call    ?_init@locale@std@@capav_locimp@12@_n@z
add     esp, 4
mov     [edi], eax
jmp     short loc_4082ea
xor     edi, edi
lea     eax, [esi+4]
mov     [esi+0ch], eax
lea     eax, [esi+14h]
mov     [esi+1ch], eax
lea     eax, [esi+18h]
mov     [esi+20h], eax
mov     [esi+34h], edi
lea     eax, [esi+24h]
mov     [esi+2ch], eax
lea     ecx, [esi+8]
mov     [esi+10h], ecx
lea     eax, [esi+28h]
mov     [esi+30h], eax
mov     dword ptr [ecx], 0
mov     eax, [esi+20h]
pop     edi
mov     dword ptr [eax], 0
mov     eax, [esi+30h]
mov     dword ptr [eax], 0
mov     eax, [esi+0ch]
mov     dword ptr [eax], 0
mov     eax, [esi+1ch]
mov     dword ptr [eax], 0
mov     eax, [esi+2ch]
mov     dword ptr [eax], 0
mov     eax, esi
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     eax, [esi+3ch]
and     eax, 6
cmp     al, 6
jz      loc_4083ed
push    ebx
mov     ebx, [ebp+size]
push    edi
cmp     ebx, 0ffffffffh
ja      loc_4083f2
push    ebx
call    ??2@yapaxi@z
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_4083f2
push    ebx
push    [ebp+src]
push    edi
call    _memmove_0
add     esp, 0ch
test    byte ptr [esi+3ch], 4
lea     ecx, [edi+ebx]
mov     [esi+38h], ecx
jnz     short loc_4083a9
mov     eax, [esi+0ch]
mov     [eax], edi
mov     eax, [esi+1ch]
mov     [eax], edi
mov     eax, [esi+2ch]
mov     [eax], ebx
mov     eax, [esi+3ch]
test    al, 2
jnz     short loc_4083e7
test    al, 10h
mov     eax, [esi+10h]
mov     edx, edi
mov     [eax], edi
mov     eax, [esi+20h]
cmovnz  edx, ecx
mov     [eax], edx
mov     eax, [esi+30h]
mov     ecx, edi
sub     ecx, edx
add     ecx, ebx
mov     [eax], ecx
mov     eax, [esi+1ch]
cmp     dword ptr [eax], 0
jnz     short loc_4083e7
mov     eax, [esi+0ch]
mov     [eax], edi
mov     eax, [esi+1ch]
mov     dword ptr [eax], 0
mov     eax, [esi+2ch]
mov     [eax], edi
or      dword ptr [esi+3ch], 1
pop     edi
pop     ebx
pop     esi
pop     ebp
retn    8
call    unknown_libname_5
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_408420
mov     eax, large fs:0
push    eax
sub     esp, 68h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+74h+var_14], eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+84h+var_c]
mov     large fs:0, eax
mov     ecx, [ebp+arg_28]
mov     eax, [ebp+arg_4]
mov     esi, [ebp+arg_10]
mov     ebx, [ebp+str]
mov     [esp+84h+var_48], eax
mov     [esp+84h+var_64], esi
mov     [esp+84h+var_58], ecx
test    ecx, ecx
jz      short loc_408484
mov     al, [ebx]
cmp     al, 2bh
jz      short loc_40847d
cmp     al, 2dh
jnz     short loc_408484
mov     edi, 1
jmp     short loc_408486
xor     edi, edi
mov     eax, [esi+14h]
and     eax, 3000h
mov     [esp+84h+var_74], edi
cmp     eax, 3000h
jz      short loc_4084a0
mov     edx, offset control
jmp     short loc_4084c6
lea     eax, [edi+2]
mov     edx, offset app
cmp     eax, ecx
ja      short loc_4084c6
cmp     byte ptr [ebx+edi], 30h
jnz     short loc_4084c6
mov     cl, [ebx+edi+1]
cmp     cl, 78h
jz      short loc_4084c0
cmp     cl, 58h
jnz     short loc_4084c6
mov     edi, eax
mov     [esp+84h+var_74], edi
push    edx
push    ebx
call    _strcspn
mov     [esp+8ch+var_50], eax
mov     eax, 2eh
mov     word ptr [esp+8ch+control], ax
call    _localeconv
mov     eax, [eax]
mov     al, [eax]
mov     [esp+8ch+control], al
lea     eax, [esp+8ch+control]
push    eax
push    ebx
call    _strcspn
add     esp, 10h
mov     [esp+84h+var_68], eax
lea     eax, [esp+84h+var_5c]
push    eax
mov     ecx, esi
call    sub_403e90
push    eax
mov     [esp+88h+var_4], 0
call    sub_409130
mov     [esp+88h+var_4], 0ffffffffh
mov     ecx, [esp+88h+var_5c]
add     esp, 4
mov     [esp+84h+var_6c], eax
test    ecx, ecx
jz      short loc_408542
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     ecx, eax
test    ecx, ecx
jz      short loc_408542
mov     eax, [ecx]
push    1
call    dword ptr [eax]
mov     ecx, [esp+84h+var_6c]
push    30h
mov     eax, [ecx]
mov     eax, [eax+20h]
call    eax
push    0
push    [esp+88h+var_58]
lea     ecx, [esp+8ch+var_44]
mov     [esp+8ch+var_4c], al
mov     [esp+8ch+var_30], 0fh
mov     [esp+8ch+var_34], 0
mov     byte ptr [esp+8ch+var_44], 0
call    sub_408df0
mov     ecx, [esp+84h+var_6c]
mov     [esp+84h+var_4], 1
cmp     [esp+84h+var_30], 10h
mov     edx, [ecx]
lea     eax, [esp+84h+var_44]
cmovnb  eax, [esp+84h+var_44]
push    eax
mov     eax, [esp+88h+var_58]
add     eax, ebx
push    eax
push    ebx
call    dword ptr [edx+1ch]
lea     eax, [esp+84h+var_5c]
push    eax
mov     ecx, esi
call    sub_403e90
push    eax
mov     byte ptr [esp+88h+var_4], 2
call    sub_409760
mov     byte ptr [esp+88h+var_4], 1
mov     ecx, [esp+88h+var_5c]
add     esp, 4
mov     ebx, eax
mov     [esp+84h+var_6c], ebx
test    ecx, ecx
jz      short loc_4085e6
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     ecx, eax
test    ecx, ecx
jz      short loc_4085e6
mov     eax, [ecx]
push    1
call    dword ptr [eax]
lea     eax, [esp+84h+block]
push    eax
mov     ecx, ebx
call    sub_408db0
mov     byte ptr [esp+84h+var_4], 3
mov     eax, [ebx]
mov     ecx, ebx
mov     eax, [eax+10h]
call    eax
mov     ecx, [esp+84h+var_50]
mov     [esp+84h+var_54], al
mov     eax, [esp+84h+var_68]
cmp     eax, [esp+84h+var_58]
jnz     short loc_40862c
push    dword ptr [esp+84h+var_4c]
mov     eax, [ebp+size]
push    eax
lea     ebx, [ecx+eax]
push    ecx
lea     ecx, [esp+90h+var_44]
call    sub_408110
jmp     short loc_408689
mov     esi, dword ptr [esp+84h+var_4c]
mov     edi, [ebp+size]
push    esi
push    [ebp+arg_24]
lea     ebx, [eax+edi]
push    ecx
lea     ecx, [esp+90h+var_44]
call    sub_408110
mov     eax, [esp+84h+var_68]
push    esi
push    [ebp+arg_20]
inc     eax
push    eax
lea     ecx, [esp+90h+var_44]
call    sub_408110
mov     ecx, [esp+84h+var_6c]
mov     eax, [ecx]
mov     eax, [eax+0ch]
call    eax
cmp     [esp+84h+var_30], 10h
mov     edx, [esp+84h+var_68]
mov     cl, al
lea     eax, [esp+84h+var_44]
cmovnb  eax, [esp+84h+var_44]
push    esi
push    edi
mov     [eax+edx], cl
push    edx
lea     ecx, [esp+90h+var_44]
call    sub_408110
mov     edi, [esp+84h+var_74]
cmp     dword ptr [esp+84h+var_18], 10h
lea     esi, [esp+84h+block]
cmovnb  esi, [esp+84h+block]
mov     al, [esi]
cmp     al, 7fh
jz      short loc_4086d1
lea     ecx, [ecx+0]
test    al, al
jle     short loc_4086d1
movsx   ecx, al
mov     eax, ebx
sub     eax, edi
cmp     ecx, eax
jnb     short loc_4086d1
push    dword ptr [esp+84h+var_54]
sub     ebx, ecx
push    1
push    ebx
lea     ecx, [esp+90h+var_44]
call    sub_408110
cmp     byte ptr [esi+1], 0
lea     eax, [esi+1]
cmovg   esi, eax
mov     al, [esi]
cmp     al, 7fh
jnz     short loc_4086a0
mov     ebx, [esp+84h+var_64]
mov     eax, [esp+84h+var_34]
cmp     dword ptr [ebx+24h], 0
mov     dword ptr [esp+84h+var_54], eax
jl      short loc_4086f6
jg      short loc_4086eb
cmp     dword ptr [ebx+20h], 0
jbe     short loc_4086f6
mov     esi, [ebx+20h]
cmp     esi, eax
jbe     short loc_4086f6
sub     esi, eax
jmp     short loc_4086f8
xor     esi, esi
mov     eax, [ebx+14h]
and     eax, 1c0h
cmp     eax, 40h
jz      loc_4087aa
cmp     eax, 100h
jz      short loc_40875d
push    esi
push    [ebp+arg_14]
lea     eax, [esp+8ch+var_64]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    eax
push    [ebp+arg_0]
call    sub_408d40
mov     ecx, eax
xor     esi, esi
mov     eax, [ecx]
cmp     [esp+9ch+var_30], 10h
mov     [ebp+arg_8], eax
mov     eax, [ecx+4]
mov     [ebp+arg_c], eax
push    edi
lea     eax, [esp+0a0h+var_44]
cmovnb  eax, [esp+0a0h+var_44]
push    eax
push    dword ptr [ecx+4]
lea     eax, [esp+0a8h+var_64]
push    dword ptr [ecx]
push    eax
push    [ebp+arg_0]
call    sub_408cd0
add     esp, 30h
jmp     short loc_4087d0
cmp     [esp+84h+var_30], 10h
push    edi
lea     eax, [esp+88h+var_44]
cmovnb  eax, [esp+88h+var_44]
push    eax
push    [ebp+arg_c]
lea     eax, [esp+90h+var_64]
push    [ebp+arg_8]
push    eax
push    [ebp+arg_0]
call    sub_408cd0
mov     ecx, eax
push    esi
mov     eax, [ecx]
push    [ebp+arg_14]
mov     [ebp+arg_8], eax
mov     eax, [ecx+4]
mov     [ebp+arg_c], eax
push    dword ptr [ecx+4]
lea     eax, [esp+0a8h+var_64]
push    dword ptr [ecx]
push    eax
push    [ebp+arg_0]
call    sub_408d40
add     esp, 30h
xor     esi, esi
jmp     short loc_4087d0
cmp     [esp+84h+var_30], 10h
push    edi
lea     eax, [esp+88h+var_44]
cmovnb  eax, [esp+88h+var_44]
push    eax
push    [ebp+arg_c]
lea     eax, [esp+90h+var_64]
push    [ebp+arg_8]
push    eax
push    [ebp+arg_0]
call    sub_408cd0
add     esp, 18h
mov     edx, [eax]
cmp     [esp+84h+var_30], 10h
mov     ecx, dword ptr [esp+84h+var_54]
mov     [ebp+arg_8], edx
mov     eax, [eax+4]
mov     [esp+84h+var_74], eax
mov     [ebp+arg_c], eax
lea     eax, [esp+84h+var_44]
cmovnb  eax, [esp+84h+var_44]
sub     ecx, edi
push    ecx
add     eax, edi
mov     edi, [ebp+arg_0]
push    eax
push    [esp+8ch+var_74]
lea     eax, [esp+90h+var_64]
push    edx
push    eax
push    edi
call    sub_408cd0
mov     ecx, [eax]
push    esi
push    [ebp+arg_14]
mov     [ebp+arg_8], ecx
mov     eax, [eax+4]
push    eax
mov     dword ptr [ebx+20h], 0
mov     dword ptr [ebx+24h], 0
mov     ebx, [esp+0a8h+var_48]
push    ecx
push    ebx
push    edi
mov     [ebp+arg_c], eax
call    sub_408d40
add     esp, 30h
cmp     dword ptr [esp+84h+var_18], 10h
jb      short loc_40884a
push    [esp+84h+block]
call    j__free
add     esp, 4
cmp     [esp+84h+var_30], 10h
mov     dword ptr [esp+84h+var_18], 0fh
mov     dword ptr [esp+84h+var_1c], 0
mov     byte ptr [esp+84h+block], 0
jb      short loc_408872
push    [esp+84h+var_44]
call    j__free
add     esp, 4
mov     eax, ebx
mov     ecx, [esp+84h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+74h+var_14]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_c]
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     byte ptr [esi], 25h
lea     eax, [esi+1]
test    cl, 20h
jz      short loc_4088ba
mov     byte ptr [eax], 2bh
inc     eax
test    cl, 8
jz      short loc_4088c3
mov     byte ptr [eax], 23h
inc     eax
mov     edi, [ebp+arg_8]
mov     dl, [edi]
cmp     dl, 4ch
jz      short loc_4088d2
mov     [eax], dl
inc     eax
jmp     short loc_4088de
mov     word ptr [eax], 3649h
mov     byte ptr [eax+2], 34h
add     eax, 3
mov     edx, ecx
and     edx, 0e00h
cmp     edx, 400h
jnz     short loc_4088fc
mov     cl, 6fh
mov     [eax], cl
mov     byte ptr [eax+1], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
cmp     edx, 800h
jz      short loc_408913
mov     cl, [edi+1]
mov     [eax], cl
mov     byte ptr [eax+1], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
shl     cl, 3
not     cl
and     cl, 20h
or      cl, 58h
mov     [eax], cl
mov     byte ptr [eax+1], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_408930
mov     eax, large fs:0
push    eax
sub     esp, 50h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+5ch+var_14], eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+6ch+var_c]
mov     large fs:0, eax
mov     edi, [ebp+size]
mov     eax, [ebp+arg_4]
mov     esi, [ebp+arg_10]
mov     ecx, [ebp+arg_18]
mov     [esp+6ch+var_48], eax
mov     [esp+6ch+var_54], esi
mov     dword ptr [esp+6ch+var_5c], ecx
test    edi, edi
jz      short loc_408994
mov     al, [ecx]
cmp     al, 2bh
jz      short loc_40898d
cmp     al, 2dh
jnz     short loc_408994
mov     ebx, 1
jmp     short loc_408996
xor     ebx, ebx
mov     eax, [esi+14h]
and     eax, 0e00h
cmp     eax, 800h
jnz     short loc_4089c2
lea     eax, [ebx+2]
cmp     eax, edi
ja      short loc_4089c2
cmp     byte ptr [ecx+ebx], 30h
jnz     short loc_4089c2
mov     cl, [ecx+ebx+1]
cmp     cl, 78h
jz      short loc_4089c0
cmp     cl, 58h
jnz     short loc_4089c2
mov     ebx, eax
lea     eax, [esp+6ch+var_4c]
push    eax
mov     ecx, esi
call    sub_403e90
push    eax
mov     [esp+70h+var_4], 0
call    sub_409130
mov     [esp+70h+var_4], 0ffffffffh
mov     ecx, [esp+70h+var_4c]
add     esp, 4
mov     [esp+6ch+var_58], eax
test    ecx, ecx
jz      short loc_408a04
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_408a04
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
push    0
push    edi
lea     ecx, [esp+74h+var_44]
mov     [esp+74h+var_30], 0fh
mov     [esp+74h+var_34], 0
mov     byte ptr [esp+74h+var_44], 0
call    sub_408df0
mov     [esp+6ch+var_4], 1
cmp     [esp+6ch+var_30], 10h
mov     ecx, dword ptr [esp+6ch+var_5c]
mov     edx, [esp+6ch+var_58]
lea     eax, [esp+6ch+var_44]
cmovnb  eax, [esp+6ch+var_44]
mov     edx, [edx]
push    eax
lea     eax, [edi+ecx]
push    eax
push    ecx
mov     ecx, [esp+78h+var_58]
call    dword ptr [edx+1ch]
lea     eax, [esp+6ch+var_5c]
push    eax
mov     ecx, esi
call    sub_403e90
push    eax
mov     byte ptr [esp+70h+var_4], 2
call    sub_409760
mov     byte ptr [esp+70h+var_4], 1
mov     ecx, dword ptr [esp+70h+var_5c]
add     esp, 4
mov     esi, eax
mov     [esp+6ch+var_4c], esi
test    ecx, ecx
jz      short loc_408a90
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_408a90
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
lea     eax, [esp+6ch+block]
push    eax
mov     ecx, esi
call    sub_408db0
mov     byte ptr [esp+6ch+var_4], 3
cmp     dword ptr [esp+6ch+var_18], 10h
lea     esi, [esp+6ch+block]
cmovnb  esi, [esp+6ch+block]
mov     al, [esi]
cmp     al, 7fh
jz      short loc_408b01
test    al, al
jle     short loc_408b01
mov     ecx, [esp+6ch+var_4c]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
mov     [esp+6ch+var_5c], al
mov     al, [esi]
cmp     al, 7fh
jz      short loc_408b01
mov     edi, edi
test    al, al
jle     short loc_408b01
movsx   ecx, al
mov     eax, edi
sub     eax, ebx
cmp     ecx, eax
jnb     short loc_408b01
push    dword ptr [esp+6ch+var_5c]
sub     edi, ecx
push    1
push    edi
lea     ecx, [esp+78h+var_44]
call    sub_408110
cmp     byte ptr [esi+1], 0
lea     eax, [esi+1]
cmovg   esi, eax
mov     al, [esi]
cmp     al, 7fh
jnz     short loc_408ad0
mov     esi, [esp+6ch+var_54]
mov     eax, [esp+6ch+var_34]
cmp     dword ptr [esi+24h], 0
mov     dword ptr [esp+6ch+var_5c], eax
jl      short loc_408b26
jg      short loc_408b1b
cmp     dword ptr [esi+20h], 0
jbe     short loc_408b26
mov     edi, [esi+20h]
cmp     edi, eax
jbe     short loc_408b26
sub     edi, eax
jmp     short loc_408b28
xor     edi, edi
mov     eax, [esi+14h]
and     eax, 1c0h
cmp     eax, 40h
jz      loc_408bda
cmp     eax, 100h
jz      short loc_408b8d
push    edi
push    [ebp+arg_14]
lea     eax, [esp+74h+var_54]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    eax
push    [ebp+arg_0]
call    sub_408d40
mov     edx, eax
xor     edi, edi
mov     eax, [edx]
cmp     [esp+84h+var_30], 10h
mov     [ebp+arg_8], eax
mov     eax, [edx+4]
push    ebx
lea     ecx, [esp+88h+var_44]
cmovnb  ecx, [esp+88h+var_44]
push    ecx
mov     [ebp+arg_c], eax
push    dword ptr [edx+4]
lea     eax, [esp+90h+var_54]
push    dword ptr [edx]
push    eax
push    [ebp+arg_0]
call    sub_408cd0
add     esp, 30h
jmp     short loc_408c00
cmp     [esp+6ch+var_30], 10h
push    ebx
lea     eax, [esp+70h+var_44]
cmovnb  eax, [esp+70h+var_44]
push    eax
push    [ebp+arg_c]
lea     eax, [esp+78h+var_54]
push    [ebp+arg_8]
push    eax
push    [ebp+arg_0]
call    sub_408cd0
mov     ecx, eax
push    edi
mov     eax, [ecx]
push    [ebp+arg_14]
mov     [ebp+arg_8], eax
mov     eax, [ecx+4]
mov     [ebp+arg_c], eax
push    dword ptr [ecx+4]
lea     eax, [esp+90h+var_54]
push    dword ptr [ecx]
push    eax
push    [ebp+arg_0]
call    sub_408d40
add     esp, 30h
xor     edi, edi
jmp     short loc_408c00
cmp     [esp+6ch+var_30], 10h
push    ebx
lea     eax, [esp+70h+var_44]
cmovnb  eax, [esp+70h+var_44]
push    eax
push    [ebp+arg_c]
lea     eax, [esp+78h+var_54]
push    [ebp+arg_8]
push    eax
push    [ebp+arg_0]
call    sub_408cd0
add     esp, 18h
mov     edx, [eax]
cmp     [esp+6ch+var_30], 10h
mov     ecx, dword ptr [esp+6ch+var_5c]
mov     [ebp+arg_8], edx
mov     eax, [eax+4]
mov     [esp+6ch+var_58], eax
mov     [ebp+arg_c], eax
lea     eax, [esp+6ch+var_44]
cmovnb  eax, [esp+6ch+var_44]
sub     ecx, ebx
push    ecx
add     eax, ebx
mov     ebx, [ebp+arg_0]
push    eax
push    [esp+74h+var_58]
lea     eax, [esp+78h+var_54]
push    edx
push    eax
push    ebx
call    sub_408cd0
mov     ecx, [eax]
push    edi
push    [ebp+arg_14]
mov     [ebp+arg_8], ecx
mov     eax, [eax+4]
push    eax
mov     dword ptr [esi+20h], 0
mov     dword ptr [esi+24h], 0
mov     esi, [esp+90h+var_48]
push    ecx
push    esi
push    ebx
mov     [ebp+arg_c], eax
call    sub_408d40
add     esp, 30h
cmp     dword ptr [esp+6ch+var_18], 10h
jb      short loc_408c7a
push    [esp+6ch+block]
call    j__free
add     esp, 4
cmp     [esp+6ch+var_30], 10h
mov     dword ptr [esp+6ch+var_18], 0fh
mov     [esp+6ch+var_1c], 0
mov     byte ptr [esp+6ch+block], 0
jb      short loc_408ca2
push    [esp+6ch+var_44]
call    j__free
add     esp, 4
mov     eax, esi
mov     ecx, dword ptr [esp+6ch+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+5ch+var_14]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_14]
push    edi
mov     edi, [ebp+arg_c]
test    esi, esi
jz      short loc_408d30
push    ebx
mov     ebx, [ebp+arg_10]
test    edi, edi
jz      short loc_408d27
mov     eax, [edi+20h]
mov     cl, [ebx]
cmp     dword ptr [eax], 0
mov     byte ptr [ebp+arg_14+3], cl
jz      short loc_408d14
mov     edx, [edi+30h]
mov     eax, [edx]
test    eax, eax
jle     short loc_408d14
dec     eax
mov     [edx], eax
mov     ecx, [edi+20h]
mov     edx, [ecx]
lea     eax, [edx+1]
mov     [ecx], eax
mov     al, byte ptr [ebp+arg_14+3]
mov     [edx], al
movzx   eax, al
jmp     short loc_408d1f
mov     edx, [edi]
movzx   eax, cl
push    eax
mov     ecx, edi
call    dword ptr [edx+0ch]
mov     edi, [ebp+arg_c]
cmp     eax, 0ffffffffh
jnz     short loc_408d2b
mov     byte ptr [ebp+arg_8], 1
inc     ebx
dec     esi
jnz     short loc_408ce3
pop     ebx
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [eax+4], edi
pop     edi
mov     [eax], ecx
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_c]
push    edi
mov     edi, [ebp+arg_14]
test    edi, edi
jz      short loc_408d97
push    ebx
mov     bl, [ebp+arg_10]
test    esi, esi
jz      short loc_408d8f
mov     eax, [esi+20h]
cmp     dword ptr [eax], 0
jz      short loc_408d7c
mov     ecx, [esi+30h]
mov     eax, [ecx]
test    eax, eax
jle     short loc_408d7c
dec     eax
mov     [ecx], eax
mov     ecx, [esi+20h]
mov     edx, [ecx]
lea     eax, [edx+1]
mov     [ecx], eax
mov     [edx], bl
movzx   eax, bl
jmp     short loc_408d87
mov     edx, [esi]
movzx   eax, bl
push    eax
mov     ecx, esi
call    dword ptr [edx+0ch]
mov     esi, [ebp+arg_c]
cmp     eax, 0ffffffffh
jnz     short loc_408d93
mov     byte ptr [ebp+arg_8], 1
dec     edi
jnz     short loc_408d53
pop     ebx
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
pop     edi
mov     [eax+4], esi
mov     [eax], ecx
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ecx]
push    [ebp+arg_0]
mov     [ebp+var_4], 0
call    dword ptr [edx+14h]
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+size]
mov     esi, ecx
cmp     edi, 0ffffffffh
jz      loc_408ea1
cmp     edi, 0fffffffeh
ja      loc_408eab
mov     eax, [esi+14h]
cmp     eax, edi
jnb     short loc_408e34
push    dword ptr [esi+10h]
push    edi
call    sub_408fb0
test    edi, edi
jz      short loc_408e99
cmp     edi, 1
jnz     short loc_408e61
cmp     dword ptr [esi+14h], 10h
jb      short loc_408e58
mov     ecx, [esi]
mov     al, [ebp+arg_4]
mov     [ecx], al
jmp     short loc_408e7c
test    edi, edi
jnz     short loc_408e20
mov     [esi+10h], edi
cmp     eax, 10h
jb      short loc_408e4d
mov     eax, [esi]
pop     edi
mov     byte ptr [eax], 0
mov     eax, esi
pop     esi
pop     ebp
retn    8
mov     eax, esi
pop     edi
mov     byte ptr [eax], 0
pop     esi
pop     ebp
retn    8
mov     al, [ebp+arg_4]
mov     ecx, esi
mov     [ecx], al
jmp     short loc_408e7c
cmp     dword ptr [esi+14h], 10h
jb      short loc_408e6b
mov     ecx, [esi]
jmp     short loc_408e6d
mov     ecx, esi
movsx   eax, [ebp+arg_4]
push    edi
push    eax
push    ecx
call    _memset
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], edi
jb      short loc_408e93
mov     eax, [esi]
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
mov     eax, esi
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_0]
push    edi
mov     edi, [esi+10h]
cmp     edi, ecx
jb      short loc_408f4f
mov     edx, [ebp+arg_4]
mov     eax, edi
sub     eax, ecx
cmp     eax, edx
ja      short loc_408eff
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], ecx
jb      short loc_408ef3
mov     eax, [esi]
pop     edi
mov     byte ptr [eax+ecx], 0
mov     eax, esi
pop     esi
pop     ebp
retn    8
mov     eax, esi
pop     edi
mov     byte ptr [eax+ecx], 0
pop     esi
pop     ebp
retn    8
test    edx, edx
jz      short loc_408f47
cmp     dword ptr [esi+14h], 10h
jb      short loc_408f0d
mov     eax, [esi]
jmp     short loc_408f0f
mov     eax, esi
sub     edi, edx
push    ebx
lea     ebx, [eax+ecx]
mov     eax, edi
sub     eax, ecx
jz      short loc_408f29
push    eax
lea     eax, [ebx+edx]
push    eax
push    ebx
call    _memmove
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], edi
pop     ebx
jb      short loc_408f41
mov     eax, [esi]
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
mov     eax, esi
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
push    offset ainvalidstringp
call    ?_xout_of_range@std@@yaxpbd@z
push    ebp
mov     ebp, esp
mov     eax, [ebp+size]
mov     edx, ecx
cmp     eax, 1
jnz     short loc_408f82
cmp     dword ptr [edx+14h], 10h
jb      short loc_408f75
mov     edx, [edx]
mov     eax, [ebp+arg_0]
mov     cl, [ebp+arg_8]
mov     [edx+eax], cl
pop     ebp
retn    0ch
cmp     dword ptr [edx+14h], 10h
jb      short loc_408f8a
mov     edx, [edx]
push    eax
movsx   eax, [ebp+arg_8]
push    eax
mov     eax, [ebp+arg_0]
add     eax, edx
push    eax
call    _memset
add     esp, 0ch
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_408fb0
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     esi, ecx
mov     [ebp+var_18], esi
mov     eax, [ebp+arg_0]
mov     edi, eax
or      edi, 0fh
cmp     edi, 0fffffffeh
jbe     short loc_408ff1
mov     edi, eax
jmp     short loc_409018
mov     ebx, [esi+14h]
mov     eax, 0aaaaaaabh
mul     edi
mov     ecx, ebx
shr     ecx, 1
shr     edx, 1
cmp     ecx, edx
jbe     short loc_409018
mov     eax, 0fffffffeh
sub     eax, ecx
lea     edi, [ecx+ebx]
cmp     ebx, eax
jbe     short loc_409018
mov     edi, 0fffffffeh
lea     ecx, [edi+1]
xor     eax, eax
mov     [ebp+var_4], 0
mov     [ebp+var_14], eax
test    ecx, ecx
jz      short loc_409071
cmp     ecx, 0ffffffffh
ja      short loc_409040
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     [ebp+var_14], eax
test    eax, eax
jnz     short loc_409071
call    unknown_libname_5
mov     eax, [ebp+arg_0]
mov     [ebp+var_14], eax
inc     eax
mov     [ebp+var_10], esp
push    eax
lea     ecx, [ebp+arg_0+3]
mov     byte ptr [ebp+var_4], 2
call    sub_409100
mov     [ebp+arg_0], eax
mov     eax, offset loc_409065
retn
mov     eax, [ebp+arg_0]
mov     edi, [ebp+var_14]
mov     esi, [ebp+var_18]
mov     [ebp+var_14], eax
mov     ebx, [ebp+size]
test    ebx, ebx
jz      short loc_4090c0
cmp     dword ptr [esi+14h], 10h
jb      short loc_4090af
mov     ecx, [esi]
jmp     short loc_4090b1
mov     esi, [ebp+var_18]
cmp     dword ptr [esi+14h], 10h
jb      short loc_409095
push    dword ptr [esi]
call    j__free
add     esp, 4
push    0
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
push    0
mov     byte ptr [esi], 0
call    __cxxthrowexception@8
mov     ecx, esi
test    ebx, ebx
jz      short loc_4090c0
push    ebx
push    ecx
push    eax
call    _memmove_0
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
jb      short loc_4090d0
push    dword ptr [esi]
call    j__free
add     esp, 4
mov     eax, [ebp+var_14]
mov     byte ptr [esi], 0
mov     [esi], eax
mov     [esi+14h], edi
mov     [esi+10h], ebx
cmp     edi, 10h
jb      short loc_4090e5
mov     esi, eax
mov     byte ptr [esi+ebx], 0
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+size]
xor     ecx, ecx
test    eax, eax
jz      short loc_409120
cmp     eax, 0ffffffffh
ja      short loc_409126
push    eax
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      short loc_409126
mov     eax, ecx
pop     ebp
retn    4
call    unknown_libname_5
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409130
mov     eax, large fs:0
push    eax
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    0
lea     ecx, [ebp+var_18]
call    ??0_lockit@std@@qae@h@z
mov     [ebp+var_4], 0
mov     edi, dword_43cef0
mov     ebx, dword_43d19c
mov     [ebp+block], ebx
test    edi, edi
jnz     short loc_4091ab
push    edi
lea     ecx, [ebp+var_14]
call    ??0_lockit@std@@qae@h@z
cmp     dword_43cef0, edi
jnz     short loc_40919d
mov     eax, dword_43cee0
inc     eax
mov     dword_43cee0, eax
mov     dword_43cef0, eax
lea     ecx, [ebp+var_14]
call    ??1_lockit@std@@qae@xz
mov     edi, dword_43cef0
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx]
cmp     edi, [ecx+0ch]
jnb     short loc_4091c1
mov     eax, [ecx+8]
mov     esi, [eax+edi*4]
test    esi, esi
jnz     short loc_40922d
jmp     short loc_4091c3
xor     esi, esi
cmp     byte ptr [ecx+14h], 0
jz      short loc_4091d9
call    sub_42197a
cmp     edi, [eax+0ch]
jnb     short loc_4091dd
mov     eax, [eax+8]
mov     esi, [eax+edi*4]
test    esi, esi
jnz     short loc_40922d
test    ebx, ebx
jz      short loc_4091e5
mov     esi, ebx
jmp     short loc_40922d
push    [ebp+arg_0]
lea     eax, [ebp+block]
push    eax
call    sub_4038b0
add     esp, 8
cmp     eax, 0ffffffffh
jnz     short loc_409214
push    offset abadcast
lea     ecx, [ebp+pexceptionobject]
call    sub_4104d0
push    offset __ti2?avbad_cast@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
mov     esi, [ebp+block]
mov     dword_43d19c, esi
mov     edx, [esi]
mov     ecx, esi
call    dword ptr [edx+4]
push    esi
call    ?_facet_register@std@@yaxpav_facet_base@1@@z
add     esp, 4
lea     ecx, [ebp+var_18]
call    ??1_lockit@std@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409250
mov     eax, large fs:0
push    eax
sub     esp, 88h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
cmp     byte ptr [esi], 0
jnz     short loc_409286
xor     eax, eax
jmp     short loc_409299
mov     eax, esi
lea     edi, [eax+1]
jmp     short loc_409290
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_409290
sub     eax, edi
lea     ecx, [eax+esi]
mov     eax, [edx]
test    eax, eax
jnz     short loc_4092b6
xor     al, al
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    10h
push    dword ptr [eax+14h]
push    dword ptr [eax+1ch]
push    eax
lea     eax, [edx+4]
push    eax
push    ecx
push    esi
lea     ecx, [ebp+var_94]
call    sub_40a000
sub     esp, 8
lea     ecx, [ebp+var_94]
mov     [ebp+var_4], 0
call    sub_40a490
lea     ecx, [ebp+var_94]
mov     bl, al
call    sub_409e90
mov     al, bl
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409310
mov     eax, large fs:0
push    eax
sub     esp, 64h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     [ebp+var_12], dl
mov     [ebp+var_18], ecx
mov     eax, [ecx]
xor     esi, esi
mov     eax, [eax+4]
mov     ebx, ecx
mov     edx, [eax+ecx+38h]
mov     [ebp+var_1c], esi
mov     [ebp+var_24], ebx
test    edx, edx
jz      short loc_409361
mov     eax, [edx]
mov     ecx, edx
call    dword ptr [eax+4]
mov     ecx, ebx
mov     [ebp+var_4], 0
mov     eax, [ecx]
mov     eax, [eax+4]
cmp     dword ptr [eax+ecx+0ch], 0
jnz     short loc_409386
mov     eax, [eax+ecx+3ch]
test    eax, eax
jz      short loc_409386
mov     ecx, eax
call    sub_405910
mov     ecx, [ebp+var_18]
mov     eax, [ecx]
mov     edx, [eax+4]
add     edx, ecx
cmp     dword ptr [edx+0ch], 0
setz    al
mov     [ebp+var_20], al
mov     [ebp+var_4], 1
test    al, al
jz      loc_40954d
mov     ebx, [edx+24h]
mov     edi, [edx+20h]
test    ebx, ebx
jg      short loc_4093c7
jl      short loc_4093b7
cmp     edi, 1
ja      short loc_4093c7
xorps   xmm0, xmm0
movlpd  qword ptr [ebp+var_30], xmm0
mov     ebx, [ebp+var_30+4]
mov     edi, [ebp+var_30]
jmp     short loc_4093cd
sub     edi, 1
sbb     ebx, 0
mov     byte ptr [ebp+var_4], 2
mov     eax, [edx+14h]
and     eax, 1c0h
cmp     eax, 40h
jz      short loc_40944f
mov     edi, edi
test    esi, esi
jnz     loc_409543
test    ebx, ebx
jl      short loc_40944f
jg      short loc_4093f2
test    edi, edi
jz      short loc_40944f
mov     eax, [ecx]
mov     eax, [eax+4]
mov     dl, [eax+ecx+40h]
mov     ecx, [eax+ecx+38h]
mov     [ebp+var_11], dl
mov     eax, [ecx+20h]
cmp     dword ptr [eax], 0
jz      short loc_40942d
mov     edx, [ecx+30h]
mov     eax, [edx]
test    eax, eax
jle     short loc_40942a
dec     eax
mov     [edx], eax
mov     ecx, [ecx+20h]
mov     edx, [ecx]
lea     eax, [edx+1]
mov     [ecx], eax
mov     al, [ebp+var_11]
mov     [edx], al
movzx   eax, al
jmp     short loc_409436
mov     dl, [ebp+var_11]
movzx   eax, dl
mov     edx, [ecx]
push    eax
call    dword ptr [edx+0ch]
mov     ecx, [ebp+var_18]
cmp     eax, 0ffffffffh
mov     edx, 4
cmovz   esi, edx
add     edi, 0ffffffffh
mov     [ebp+var_1c], esi
adc     ebx, 0ffffffffh
jmp     short loc_4093e0
mov     eax, [ecx]
mov     eax, [eax+4]
mov     ecx, [eax+ecx+38h]
mov     eax, [ecx+20h]
cmp     dword ptr [eax], 0
jz      short loc_409480
mov     edx, [ecx+30h]
mov     eax, [edx]
test    eax, eax
jle     short loc_409480
dec     eax
mov     [edx], eax
mov     ecx, [ecx+20h]
mov     edx, [ecx]
lea     eax, [edx+1]
mov     [ecx], eax
mov     al, [ebp+var_12]
mov     [edx], al
movzx   eax, al
jmp     short loc_40948a
movzx   eax, [ebp+var_12]
mov     edx, [ecx]
push    eax
call    dword ptr [edx+0ch]
cmp     eax, 0ffffffffh
mov     eax, 4
cmovz   esi, eax
mov     [ebp+var_1c], esi
test    esi, esi
jnz     loc_409543
test    ebx, ebx
jl      loc_409543
jg      short loc_4094b2
test    edi, edi
jz      loc_409543
mov     ecx, [ebp+var_18]
mov     eax, [ecx]
mov     eax, [eax+4]
mov     dl, [eax+ecx+40h]
mov     ecx, [eax+ecx+38h]
mov     [ebp+var_12], dl
mov     eax, [ecx+20h]
cmp     dword ptr [eax], 0
jz      short loc_4094f0
mov     edx, [ecx+30h]
mov     eax, [edx]
test    eax, eax
jle     short loc_4094ed
dec     eax
mov     [edx], eax
mov     ecx, [ecx+20h]
mov     edx, [ecx]
lea     eax, [edx+1]
mov     [ecx], eax
mov     al, [ebp+var_12]
mov     [edx], al
movzx   eax, al
jmp     short loc_4094f9
mov     dl, [ebp+var_12]
movzx   eax, dl
mov     edx, [ecx]
push    eax
call    dword ptr [edx+0ch]
cmp     eax, 0ffffffffh
mov     eax, 4
cmovz   esi, eax
add     edi, 0ffffffffh
adc     ebx, 0ffffffffh
jmp     short loc_409495
mov     ecx, [ebp+var_18]
mov     eax, [ecx]
mov     edx, [eax+4]
mov     eax, [edx+ecx+0ch]
add     edx, ecx
or      eax, 4
cmp     dword ptr [edx+38h], 0
jnz     short loc_409526
or      eax, 4
and     eax, 17h
mov     [edx+0ch], eax
test    [edx+10h], eax
jz      short loc_40953a
push    1
mov     ecx, edx
call    sub_403e00
mov     eax, offset loc_409540
retn
mov     esi, [ebp+var_1c]
mov     [ebp+var_4], 1
mov     ebx, [ebp+var_24]
mov     edi, [ebp+var_18]
mov     eax, [edi]
mov     eax, [eax+4]
mov     dword ptr [eax+edi+20h], 0
mov     dword ptr [eax+edi+24h], 0
mov     eax, [edi]
mov     ecx, [eax+4]
add     ecx, edi
test    esi, esi
jz      loc_4095fc
mov     eax, [ecx+0ch]
or      eax, esi
cmp     dword ptr [ecx+38h], 0
jnz     short loc_409582
or      eax, 4
and     eax, 17h
mov     [ecx+0ch], eax
mov     ecx, [ecx+10h]
and     ecx, eax
jz      short loc_4095fc
lea     eax, [ebp+var_30]
mov     [ebp+var_30], 1
mov     [ebp+var_30+4], offset off_43c0f0
push    eax
test    cl, 4
jz      short loc_4095c1
push    offset aiosbasebadbits
lea     ecx, [ebp+pexceptionobject]
call    sub_403d30
push    offset __ti4?avfailure@ios_base@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
test    cl, 2
jz      short loc_4095e1
push    offset aiosbasefailbit
lea     ecx, [ebp+var_58]
call    sub_403d30
push    offset __ti4?avfailure@ios_base@std@@
lea     eax, [ebp+var_58]
push    eax
call    __cxxthrowexception@8
push    offset aiosbaseeofbits
lea     ecx, [ebp+var_6c]
call    sub_403d30
push    offset __ti4?avfailure@ios_base@std@@
lea     eax, [ebp+var_6c]
push    eax
call    __cxxthrowexception@8
mov     [ebp+var_4], 0ffffffffh
call    j_?__uncaught_exception@@ya_nxz
test    al, al
jnz     short loc_409613
mov     ecx, ebx
call    sub_408220
mov     eax, [ebx]
mov     eax, [eax+4]
mov     ecx, [eax+ebx+38h]
test    ecx, ecx
jz      short loc_409625
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409130
mov     eax, large fs:0
push    eax
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    0
lea     ecx, [ebp+var_18]
call    ??0_lockit@std@@qae@h@z
mov     [ebp+var_4], 0
mov     edi, dword_43d1b8
mov     ebx, dword_43d1a4
mov     [ebp+block], ebx
test    edi, edi
jnz     short loc_4096bb
push    edi
lea     ecx, [ebp+var_14]
call    ??0_lockit@std@@qae@h@z
cmp     dword_43d1b8, edi
jnz     short loc_4096ad
mov     eax, dword_43cee0
inc     eax
mov     dword_43cee0, eax
mov     dword_43d1b8, eax
lea     ecx, [ebp+var_14]
call    ??1_lockit@std@@qae@xz
mov     edi, dword_43d1b8
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx]
cmp     edi, [ecx+0ch]
jnb     short loc_4096d1
mov     eax, [ecx+8]
mov     esi, [eax+edi*4]
test    esi, esi
jnz     short loc_40973d
jmp     short loc_4096d3
xor     esi, esi
cmp     byte ptr [ecx+14h], 0
jz      short loc_4096e9
call    sub_42197a
cmp     edi, [eax+0ch]
jnb     short loc_4096ed
mov     eax, [eax+8]
mov     esi, [eax+edi*4]
test    esi, esi
jnz     short loc_40973d
test    ebx, ebx
jz      short loc_4096f5
mov     esi, ebx
jmp     short loc_40973d
push    [ebp+arg_0]
lea     eax, [ebp+block]
push    eax
call    sub_4099a0
add     esp, 8
cmp     eax, 0ffffffffh
jnz     short loc_409724
push    offset abadcast
lea     ecx, [ebp+pexceptionobject]
call    sub_4104d0
push    offset __ti2?avbad_cast@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
mov     esi, [ebp+block]
mov     dword_43d1a4, esi
mov     edx, [esi]
mov     ecx, esi
call    dword ptr [edx+4]
push    esi
call    ?_facet_register@std@@yaxpav_facet_base@1@@z
add     esp, 4
lea     ecx, [ebp+var_18]
call    ??1_lockit@std@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409130
mov     eax, large fs:0
push    eax
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    0
lea     ecx, [ebp+var_18]
call    ??0_lockit@std@@qae@h@z
mov     [ebp+var_4], 0
mov     edi, dword_43d1b4
mov     ebx, dword_43d1a0
mov     [ebp+block], ebx
test    edi, edi
jnz     short loc_4097db
push    edi
lea     ecx, [ebp+var_14]
call    ??0_lockit@std@@qae@h@z
cmp     dword_43d1b4, edi
jnz     short loc_4097cd
mov     eax, dword_43cee0
inc     eax
mov     dword_43cee0, eax
mov     dword_43d1b4, eax
lea     ecx, [ebp+var_14]
call    ??1_lockit@std@@qae@xz
mov     edi, dword_43d1b4
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx]
cmp     edi, [ecx+0ch]
jnb     short loc_4097f1
mov     eax, [ecx+8]
mov     esi, [eax+edi*4]
test    esi, esi
jnz     short loc_40985d
jmp     short loc_4097f3
xor     esi, esi
cmp     byte ptr [ecx+14h], 0
jz      short loc_409809
call    sub_42197a
cmp     edi, [eax+0ch]
jnb     short loc_40980d
mov     eax, [eax+8]
mov     esi, [eax+edi*4]
test    esi, esi
jnz     short loc_40985d
test    ebx, ebx
jz      short loc_409815
mov     esi, ebx
jmp     short loc_40985d
push    [ebp+arg_0]
lea     eax, [ebp+block]
push    eax
call    sub_409a50
add     esp, 8
cmp     eax, 0ffffffffh
jnz     short loc_409844
push    offset abadcast
lea     ecx, [ebp+pexceptionobject]
call    sub_4104d0
push    offset __ti2?avbad_cast@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
mov     esi, [ebp+block]
mov     dword_43d1a0, esi
mov     edx, [esi]
mov     ecx, esi
call    dword ptr [edx+4]
push    esi
call    ?_facet_register@std@@yaxpav_facet_base@1@@z
add     esp, 4
lea     ecx, [ebp+var_18]
call    ??1_lockit@std@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409880
mov     eax, large fs:0
push    eax
sub     esp, 5ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
push    ecx
push    [ebp+arg_4]
lea     eax, [edi+4]
push    [ebp+arg_0]
lea     ecx, [ebp+var_68]
push    eax
call    sub_409ca0
lea     ecx, [ebp+var_68]
mov     [ebp+var_4], 0
call    sub_409d80
mov     ebx, eax
test    ebx, ebx
jz      short loc_4098d5
inc     dword ptr [ebx+20h]
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_4098fd
dec     dword ptr [ecx+20h]
jnz     short loc_4098fd
mov     esi, [edi]
test    esi, esi
jz      short loc_4098fd
lea     eax, [esi+0ch]
mov     ecx, esi
mov     esi, [eax]
mov     dword ptr [eax], 0
mov     eax, [ecx]
push    1
call    dword ptr [eax]
test    esi, esi
jnz     short loc_4098e6
mov     eax, [ebp+block]
mov     [edi], ebx
mov     [ebp+var_48], 0
test    eax, eax
jz      short loc_409916
push    eax
call    j__free
add     esp, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    esi
mov     esi, ecx
mov     dword ptr [esi+20h], 0
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_40995f
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi+18h], 0
mov     dword ptr [esi+1ch], 0
pop     esi
retn
push    esi
mov     esi, ecx
mov     dword ptr [esi+0ch], 0
mov     eax, [esi]
test    eax, eax
jz      short loc_40999d
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4099a0
mov     eax, large fs:0
push    eax
sub     esp, 38h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, [ebp+block]
xor     ebx, ebx
mov     [ebp+var_10], ebx
test    edi, edi
jz      short loc_409a36
cmp     [edi], ebx
jnz     short loc_409a36
push    8
call    ??2@yapaxi@z
mov     esi, eax
add     esp, 4
mov     [ebp+block], esi
mov     [ebp+var_4], ebx
test    esi, esi
jz      short loc_409a25
mov     ecx, [ebp+arg_4]
mov     ecx, [ecx]
test    ecx, ecx
jnz     short loc_4099fe
mov     eax, offset locale
jmp     short loc_409a08
mov     eax, [ecx+18h]
test    eax, eax
jnz     short loc_409a08
lea     eax, [ecx+1ch]
push    eax
lea     ecx, [ebp+var_44]
call    sub_403530
mov     ebx, 1
mov     dword ptr [esi+4], 0
mov     dword ptr [esi], offset ??_7?$num_put@dv?$ostreambuf_iterator@du?$char_traits@d@std@@@std@@@std@@6b@
jmp     short loc_409a27
xor     esi, esi
mov     [edi], esi
test    bl, 1
jz      short loc_409a36
lea     ecx, [ebp+var_44]
call    sub_4035f0
mov     eax, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409a50
mov     eax, large fs:0
push    eax
sub     esp, 38h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
xor     ebx, ebx
mov     [ebp+var_10], ebx
mov     edi, [ebp+block]
test    edi, edi
jz      short loc_409af9
cmp     [edi], ebx
jnz     short loc_409af9
push    18h
call    ??2@yapaxi@z
mov     esi, eax
add     esp, 4
mov     [ebp+block], esi
mov     [ebp+var_4], ebx
test    esi, esi
jz      short loc_409ae8
mov     eax, [ebp+arg_4]
mov     ecx, [eax]
test    ecx, ecx
jnz     short loc_409aae
mov     eax, offset locale
jmp     short loc_409ab8
mov     eax, [ecx+18h]
test    eax, eax
jnz     short loc_409ab8
lea     eax, [ecx+1ch]
push    eax
lea     ecx, [ebp+var_44]
call    sub_403530
mov     ebx, 1
mov     [ebp+var_10], ebx
mov     dword ptr [esi+4], 0
push    ebx
mov     [ebp+var_4], 2
push    eax
mov     ecx, esi
mov     dword ptr [esi], offset ??_7?$numpunct@d@std@@6b@
call    sub_409b40
jmp     short loc_409aea
xor     esi, esi
mov     [edi], esi
test    bl, 1
jz      short loc_409af9
lea     ecx, [ebp+var_44]
call    sub_4035f0
mov     eax, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jz      short loc_409b36
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409b40
mov     eax, large fs:0
push    eax
sub     esp, 38h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     ebx, ecx
mov     [ebp+var_14], ebx
call    _localeconv
mov     esi, eax
lea     eax, [ebp+var_44]
push    eax
mov     [ebp+var_18], esi
call    __getcvt
add     esp, 4
cmp     [ebp+arg_4], 0
mov     dword ptr [ebx+8], 0
mov     dword ptr [ebx+10h], 0
mov     dword ptr [ebx+14h], 0
mov     [ebp+var_4], 0
jz      short loc_409baf
mov     esi, offset locale
jmp     short loc_409bb2
mov     esi, [esi+8]
lea     eax, [ebp+var_44]
push    eax
call    __getcvt
mov     edi, esi
add     esp, 4
lea     ecx, [edi+1]
mov     al, [edi]
inc     edi
test    al, al
jnz     short loc_409bc3
sub     edi, ecx
inc     edi
push    edi
call    ??_u@yapaxi@z
add     esp, 4
mov     edx, eax
test    edi, edi
jz      short loc_409beb
mov     ecx, edx
sub     ecx, esi
mov     al, [esi]
mov     [ecx+esi], al
lea     esi, [esi+1]
dec     edi
jnz     short loc_409be0
mov     edi, 6
push    edi
mov     [ebx+8], edx
mov     esi, offset afalse
call    ??_u@yapaxi@z
mov     edx, eax
add     esp, 4
sub     edx, esi
mov     cl, [esi]
mov     [edx+esi], cl
lea     esi, [esi+1]
dec     edi
jnz     short loc_409c05
mov     edi, 5
push    edi
mov     [ebx+10h], eax
mov     esi, offset atrue
call    ??_u@yapaxi@z
mov     edx, eax
add     esp, 4
sub     edx, esi
lea     ebx, [ebx+0]
mov     cl, [esi]
mov     [edx+esi], cl
lea     esi, [esi+1]
dec     edi
jnz     short loc_409c30
cmp     [ebp+arg_4], 0
mov     [ebx+14h], eax
jz      short loc_409c5e
mov     word ptr [ebx+0ch], 2c2eh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+var_18]
mov     eax, [ecx]
movzx   eax, byte ptr [eax]
mov     [ebx+0ch], al
mov     eax, [ecx+4]
movzx   eax, byte ptr [eax]
mov     [ebx+0dh], al
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+var_14]
call    unknown_libname_3
push    0
push    0
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409ca0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+var_10], edi
mov     eax, [ebp+arg_4]
mov     [edi], eax
mov     [edi+4], eax
mov     eax, [ebp+arg_8]
mov     [edi+8], eax
lea     eax, [ebp+arg_4]
mov     dword ptr [edi+0ch], 0
mov     dword ptr [edi+10h], 0
push    eax
push    0
lea     ecx, [edi+14h]
mov     [ebp+arg_4], 0
mov     dword ptr [edi+14h], 0
mov     dword ptr [edi+18h], 0
mov     dword ptr [edi+1ch], 0
call    sub_40a320
mov     dword ptr [edi+20h], 0
mov     eax, [edi+18h]
mov     ecx, [edi+14h]
mov     edx, eax
sub     edx, ecx
sar     edx, 2
test    edx, edx
jz      short loc_409d38
push    eax
push    ecx
lea     eax, [ebp+arg_4]
push    eax
lea     ecx, [edi+14h]
call    sub_40a240
mov     dword ptr [edi+20h], 0
mov     esi, [ebp+arg_0]
push    ecx
push    esi
lea     ecx, [edi+24h]
mov     [ebp+var_4], 1
call    sub_40a7e0
mov     ecx, edi
mov     [edi+3ch], esi
mov     dword ptr [edi+40h], 1
mov     dword ptr [edi+50h], 8775dfbh
call    sub_40a510
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409d80
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     edi, ecx
mov     [ebp+var_14], edi
push    18h
mov     [ebp+var_4], 0
call    ??2@yapaxi@z
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_409df2
mov     dword ptr [esi+4], 0dh
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi], offset ??_7_node_capture@std@@6b@
mov     dword ptr [esi+14h], 0
jmp     short loc_409df4
xor     esi, esi
mov     eax, [edi+28h]
mov     [esi+10h], eax
mov     eax, [edi+28h]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_409e10
mov     [esi+0ch], eax
mov     eax, [edi+28h]
mov     eax, [eax+0ch]
mov     [eax+10h], esi
mov     eax, [edi+28h]
mov     ecx, edi
mov     [eax+0ch], esi
mov     [edi+28h], esi
call    sub_40a6c0
mov     eax, [edi]
cmp     eax, [edi+8]
jz      short loc_409e2e
push    0eh
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    esi
lea     ecx, [edi+24h]
call    sub_40a860
lea     ecx, [edi+24h]
call    sub_40a970
mov     ecx, [edi+40h]
mov     [eax+14h], ecx
mov     ecx, [edi+0ch]
inc     ecx
mov     [eax+1ch], ecx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+var_14]
mov     esi, [edi+24h]
test    esi, esi
jz      short loc_409e7f
lea     eax, [esi+0ch]
mov     ecx, esi
mov     esi, [eax]
mov     dword ptr [eax], 0
mov     eax, [ecx]
push    1
call    dword ptr [eax]
test    esi, esi
jnz     short loc_409e68
push    0
push    0
mov     dword ptr [edi+24h], 0
call    __cxxthrowexception@8
push    esi
mov     esi, ecx
mov     eax, [esi+40h]
test    eax, eax
jz      short loc_409eb8
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi+40h], 0
mov     dword ptr [esi+44h], 0
mov     dword ptr [esi+48h], 0
mov     eax, [esi+34h]
test    eax, eax
jz      short loc_409edd
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi+34h], 0
mov     dword ptr [esi+38h], 0
mov     dword ptr [esi+3ch], 0
mov     dword ptr [esi+30h], 0
mov     eax, [esi+24h]
test    eax, eax
jz      short loc_409f09
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi+24h], 0
mov     dword ptr [esi+28h], 0
mov     dword ptr [esi+2ch], 0
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_409f2e
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi+18h], 0
mov     dword ptr [esi+1ch], 0
mov     dword ptr [esi+10h], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_409f5a
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
pop     esi
retn
push    esi
mov     esi, ecx
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_409f88
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi+18h], 0
mov     dword ptr [esi+1ch], 0
mov     dword ptr [esi+10h], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_409fb4
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
pop     esi
retn
push    esi
mov     esi, ecx
mov     dword ptr [esi+10h], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_409fef
push    eax
call    j__free
add     esp, 4
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40a000
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+var_14], edi
lea     eax, [ebp+var_10]
push    eax
push    0
lea     ecx, [edi+4]
mov     [ebp+var_10], 0
mov     dword ptr [edi+4], 0
mov     dword ptr [edi+8], 0
mov     dword ptr [edi+0ch], 0
call    sub_40a320
mov     dword ptr [edi+10h], 0
mov     dword ptr [edi+14h], 0
mov     dword ptr [edi+18h], 0
mov     dword ptr [edi+1ch], 0
lea     eax, [ebp+var_10]
mov     [ebp+var_4], 0
push    eax
push    0
lea     ecx, [edi+24h]
mov     [ebp+var_10], 0
mov     dword ptr [edi+24h], 0
mov     dword ptr [edi+28h], 0
mov     dword ptr [edi+2ch], 0
call    sub_40a320
mov     dword ptr [edi+30h], 0
mov     dword ptr [edi+34h], 0
mov     dword ptr [edi+38h], 0
mov     dword ptr [edi+3ch], 0
lea     ecx, [edi+40h]
mov     dword ptr [ecx], 0
mov     dword ptr [ecx+4], 0
mov     dword ptr [ecx+8], 0
mov     eax, [ebp+arg_4]
mov     esi, [ebp+arg_c]
mov     edx, [ebp+arg_18]
mov     byte ptr [ebp+var_4], 2
mov     [edi+50h], eax
mov     eax, [ebp+arg_0]
mov     [edi+54h], eax
mov     eax, [ebp+arg_14]
mov     [edi+5ch], eax
mov     eax, [ebp+arg_10]
mov     [edi+58h], esi
mov     [edi+60h], edx
mov     byte ptr [edi+64h], 0
mov     [edi+68h], eax
test    byte ptr [esi+8], 8
jz      short loc_40a114
test    dl, 10h
jnz     short loc_40a114
mov     eax, 1
jmp     short loc_40a116
xor     eax, eax
mov     [edi+6ch], al
mov     eax, [ebp+arg_8]
mov     [edi+70h], eax
push    dword ptr [esi+18h]
call    sub_40a1b0
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    1ch
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, ecx
cmp     esi, 0ffffffffh
ja      short loc_40a197
mov     ecx, [edi+4]
mov     edx, [edi]
mov     eax, ecx
sub     eax, edx
lea     ebx, [esi+1fh]
shr     ebx, 5
sar     eax, 2
cmp     ebx, eax
jnb     short loc_40a176
push    ecx
lea     eax, [edx+ebx*4]
push    eax
lea     eax, [ebp+arg_0]
push    eax
mov     ecx, edi
call    sub_40a240
mov     [edi+0ch], esi
and     esi, 1fh
jbe     short loc_40a190
mov     eax, [edi]
mov     ecx, esi
lea     edx, [eax+ebx*4]
mov     eax, 1
shl     eax, cl
dec     eax
and     [edx-4], eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    offset avectorbooltool
call    ?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, ecx
mov     esi, [edi+4]
mov     eax, [edi]
mov     edx, esi
sub     edx, eax
sar     edx, 3
cmp     edx, ebx
jbe     short loc_40a1fe
lea     edx, [eax+ebx*8]
cmp     edx, eax
jz      short loc_40a235
cmp     edx, esi
jz      short loc_40a238
mov     eax, esi
cmp     esi, esi
jz      short loc_40a1f4
lea     esp, [esp+0]
mov     ecx, [eax]
mov     [edx], ecx
mov     ecx, [eax+4]
mov     [edx+4], ecx
add     eax, 8
add     edx, 8
cmp     eax, esi
jnz     short loc_40a1e0
mov     [edi+4], edx
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
jnb     short loc_40a238
mov     eax, ebx
sub     eax, edx
push    eax
call    sub_40a2a0
mov     ecx, [edi+4]
push    [ebp+arg_0]
mov     eax, ecx
sub     eax, [edi]
mov     edx, ebx
sar     eax, 3
sub     esp, 8
sub     edx, eax
call    sub_40c080
mov     ecx, [edi+4]
mov     eax, ecx
sub     eax, [edi]
add     esp, 0ch
sar     eax, 3
sub     ebx, eax
lea     eax, [ecx+ebx*8]
mov     [edi+4], eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+src]
push    ebx
mov     ebx, ecx
push    edi
mov     ecx, [ebx]
mov     edi, [ebp+arg_4]
cmp     edi, ecx
jnz     short loc_40a266
cmp     eax, [ebx+4]
jnz     short loc_40a266
mov     [ebx+4], ecx
mov     eax, [ebp+arg_0]
mov     [eax], edi
pop     edi
pop     ebx
pop     ebp
retn    0ch
cmp     edi, eax
jz      short loc_40a25b
mov     ecx, [ebx+4]
sub     ecx, eax
push    esi
sar     ecx, 2
lea     esi, ds:0[ecx*4]
push    esi
push    eax
push    edi
call    _memmove
mov     ecx, [ebp+arg_4]
add     esp, 0ch
lea     eax, [esi+edi]
mov     [ebx+4], eax
mov     eax, [ebp+arg_0]
pop     esi
pop     edi
mov     [eax], ecx
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     edx, [ecx+8]
push    esi
mov     esi, [ecx+4]
mov     eax, edx
sub     eax, esi
push    edi
mov     edi, [ebp+arg_0]
sar     eax, 3
cmp     eax, edi
jnb     short loc_40a302
sub     esi, [ecx]
push    ebx
mov     ebx, 1fffffffh
sar     esi, 3
mov     eax, ebx
sub     eax, esi
cmp     eax, edi
jb      short loc_40a308
sub     edx, [ecx]
add     esi, edi
sar     edx, 3
mov     eax, edx
shr     eax, 1
sub     ebx, eax
cmp     ebx, edx
pop     ebx
jnb     short loc_40a2f0
xor     edx, edx
cmp     edx, esi
pop     edi
cmovb   edx, esi
pop     esi
mov     [ebp+arg_0], edx
pop     ebp
jmp     sub_40a3a0
add     edx, eax
cmp     edx, esi
pop     edi
cmovb   edx, esi
pop     esi
mov     [ebp+arg_0], edx
pop     ebp
jmp     sub_40a3a0
pop     edi
pop     esi
pop     ebp
retn    4
push    offset avectorttoolong
call    ?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, ecx
mov     dword ptr [edi], 0
mov     dword ptr [edi+4], 0
mov     dword ptr [edi+8], 0
test    esi, esi
jz      short loc_40a380
cmp     esi, 3fffffffh
ja      short loc_40a386
push    ebx
lea     ebx, ds:0[esi*4]
push    ebx
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      short loc_40a390
add     ebx, ecx
mov     [edi], ecx
mov     [edi+4], ecx
mov     [edi+8], ebx
test    esi, esi
jz      short loc_40a37c
mov     edx, [ebp+arg_4]
mov     eax, [edx]
mov     [ecx], eax
lea     ecx, [ecx+4]
dec     esi
jnz     short loc_40a372
mov     [edi+4], ebx
pop     ebx
pop     edi
pop     esi
pop     ebp
retn    8
push    offset avectorttoolong
call    ?_xlength_error@std@@yaxpbd@z
call    unknown_libname_5
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
xor     esi, esi
mov     ebx, ecx
test    edi, edi
jz      short loc_40a3cf
cmp     edi, 1fffffffh
ja      short loc_40a415
lea     eax, ds:0[edi*8]
push    eax
call    ??2@yapaxi@z
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_40a415
push    [ebp+arg_0]
mov     edx, [ebx+4]
mov     ecx, [ebx]
sub     esp, 8
push    esi
call    sub_40ceb0
mov     ecx, [ebx]
mov     eax, [ebx+4]
sub     eax, ecx
sar     eax, 3
add     esp, 10h
mov     [ebp+arg_0], eax
test    ecx, ecx
jz      short loc_40a3fd
push    ecx
call    j__free
add     esp, 4
lea     eax, [esi+edi*8]
mov     [ebx+8], eax
mov     eax, [ebp+arg_0]
pop     edi
lea     eax, [esi+eax*8]
mov     [ebx], esi
pop     esi
mov     [ebx+4], eax
pop     ebx
pop     ebp
retn    4
call    unknown_libname_5
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
test    eax, eax
jnz     short loc_40a448
xor     al, al
pop     esi
pop     ebp
retn    4
cmp     eax, 3fffffffh
ja      short loc_40a476
push    edi
lea     edi, ds:0[eax*4]
push    edi
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40a480
mov     [esi], eax
mov     [esi+4], eax
add     eax, edi
mov     [esi+8], eax
pop     edi
mov     al, 1
pop     esi
pop     ebp
retn    4
push    offset avectorttoolong
call    ?_xlength_error@std@@yaxpbd@z
call    unknown_libname_5
push    esi
mov     esi, ecx
push    ecx
mov     eax, [esi+54h]
push    dword ptr [esi+68h]
lea     ecx, [esi+4]
mov     [esi+4ch], eax
mov     [esi], eax
call    sub_40aa20
push    dword ptr [esi+68h]
lea     ecx, [esi+14h]
call    sub_40a1b0
push    dword ptr [esi+58h]
mov     ecx, esi
mov     word ptr [esi+64h], 0
mov     byte ptr [esi+74h], 1
mov     dword ptr [esi+78h], 989680h
mov     dword ptr [esi+7ch], 3e8h
call    sub_40b4a0
test    al, al
jnz     short loc_40a4f7
test    byte ptr [esi+60h], 80h
jz      short loc_40a4fd
mov     eax, [esi+50h]
cmp     [esi], eax
jnz     short loc_40a4fd
cmp     [esi+54h], eax
jz      short loc_40a4fd
push    esi
lea     ecx, [esi+20h]
call    sub_40a9e0
mov     byte ptr [esi+64h], 1
mov     al, 1
pop     esi
retn    8
xor     al, al
pop     esi
retn    8
push    esi
mov     esi, ecx
mov     eax, [esi]
cmp     eax, [esi+8]
jnz     short loc_40a527
mov     dword ptr [esi+4ch], 0ffffffffh
mov     byte ptr [esi+48h], 0ffh
jmp     short loc_40a54c
mov     al, [eax]
mov     [esi+48h], al
movsx   eax, al
push    eax
push    offset str
call    _strchr
add     esp, 8
test    eax, eax
jz      short loc_40a547
movsx   eax, byte ptr [esi+48h]
jmp     short loc_40a549
xor     eax, eax
mov     [esi+4ch], eax
movsx   eax, byte ptr [esi+48h]
add     eax, 0fffffff6h
cmp     eax, 73h
ja      def_40a563
movzx   eax, ds:byte_40a640[eax]
jmp     ds:jpt_40a563[eax*4]
mov     ecx, esi
call    sub_40b9a0
test    al, al
jz      def_40a563
mov     eax, [esi]
mov     al, [eax+1]
mov     [esi+48h], al
movsx   eax, al
mov     [esi+4ch], eax
pop     esi
retn
test    byte ptr [esi+50h], 4
jz      def_40a563
cmp     dword ptr [esi+10h], 0
jnz     short def_40a563
mov     dword ptr [esi+4ch], 7ch
pop     esi
retn
test    byte ptr [esi+50h], 8
jmp     short loc_40a60a
test    byte ptr [esi+50h], 10h
jmp     short loc_40a60a
test    dword ptr [esi+50h], 4000000h
jz      short def_40a563
lea     ecx, [esi+24h]
call    sub_40be70
test    al, al
jz      short def_40a563
mov     dword ptr [esi+4ch], 0
pop     esi
retn
test    dword ptr [esi+50h], 2000000h
jz      short def_40a563
lea     ecx, [esi+24h]
call    sub_40be70
test    al, al
jmp     short loc_40a60a
test    dword ptr [esi+50h], 2000000h
jz      short def_40a563
mov     eax, [esi]
inc     eax
cmp     eax, [esi+8]
jz      short def_40a563
cmp     byte ptr [eax], 0ah
jz      short def_40a563
mov     dword ptr [esi+4ch], 0
pop     esi
retn
test    byte ptr [esi+50h], 1
jmp     short loc_40a60a
test    byte ptr [esi+50h], 2
jnz     short def_40a563
mov     dword ptr [esi+4ch], 0
pop     esi
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ebx, [edi+28h]
call    sub_40ba30
test    al, al
jnz     short loc_40a6f3
cmp     dword ptr [edi+4ch], 7ch
jnz     loc_40a7d3
lea     ecx, [edi+24h]
call    sub_40beb0
push    eax
lea     ecx, [edi+24h]
call    sub_40a860
push    ebx
lea     ecx, [edi+24h]
call    sub_40bf20
cmp     dword ptr [edi+4ch], 7ch
mov     [esp+10h+var_4], eax
jnz     loc_40a7d3
lea     ebx, [ebx+0]
mov     ecx, [edi]
mov     eax, [edi+8]
cmp     ecx, eax
jz      short loc_40a748
cmp     byte ptr [ecx], 5ch
jnz     short loc_40a746
inc     ecx
cmp     ecx, eax
jz      short loc_40a746
mov     eax, [edi+50h]
test    al, 8
jnz     short loc_40a736
mov     dl, [ecx]
cmp     dl, 28h
jz      short loc_40a744
cmp     dl, 29h
jz      short loc_40a744
test    al, 10h
jnz     short loc_40a746
mov     al, [ecx]
cmp     al, 7bh
jz      short loc_40a744
cmp     al, 7dh
jnz     short loc_40a746
mov     [edi], ecx
inc     dword ptr [edi]
mov     ecx, edi
call    sub_40a510
mov     ecx, edi
call    sub_40ba30
test    al, al
jnz     short loc_40a7bc
push    14h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40a78c
mov     dword ptr [eax], offset ??_7_node_base@std@@6b@
mov     dword ptr [eax+4], 8
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
jmp     short loc_40a78e
xor     eax, eax
mov     ecx, [edi+28h]
mov     [eax+10h], ecx
mov     ecx, [edi+28h]
mov     ecx, [ecx+0ch]
test    ecx, ecx
jz      short loc_40a7aa
mov     [eax+0ch], ecx
mov     ecx, [edi+28h]
mov     ecx, [ecx+0ch]
mov     [ecx+10h], eax
mov     ecx, [edi+28h]
push    eax
mov     [ecx+0ch], eax
lea     ecx, [edi+24h]
mov     [edi+28h], eax
call    sub_40a860
push    [esp+10h+var_4]
lea     ecx, [edi+24h]
push    ebx
call    sub_40bfe0
cmp     dword ptr [edi+4ch], 7ch
jz      loc_40a710
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
push    24h
mov     esi, ecx
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40a82d
mov     dword ptr [eax+4], 14h
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
mov     dword ptr [eax], offset ??_7_root_node@std@@6b@
mov     dword ptr [eax+18h], 0
mov     dword ptr [eax+1ch], 0
mov     dword ptr [eax+20h], 0
jmp     short loc_40a82f
xor     eax, eax
mov     [esi], eax
mov     [esi+4], eax
mov     eax, [ebp+arg_0]
mov     [esi+0ch], eax
mov     dword ptr [esi+8], 1
mov     dword ptr [esi+10h], 100h
mov     dword ptr [esi+14h], 4
mov     eax, esi
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
mov     eax, [edi+4]
cmp     eax, 8
jnz     short loc_40a878
lea     ebx, [eax+1]
jmp     short loc_40a891
cmp     eax, 0ah
jnz     short loc_40a882
lea     ebx, [eax+2]
jmp     short loc_40a891
xor     ebx, ebx
cmp     eax, 0bh
setnz   bl
lea     ebx, ds:0ch[ebx*2]
push    18h
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      short loc_40a8c4
mov     [ecx+4], ebx
mov     dword ptr [ecx+8], 0
mov     dword ptr [ecx+0ch], 0
mov     dword ptr [ecx+10h], 0
mov     dword ptr [ecx], offset ??_7_node_end_group@std@@6b@
mov     [ecx+14h], edi
jmp     short loc_40a8c6
xor     ecx, ecx
mov     eax, [esi+4]
mov     [ecx+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40a8e2
mov     [ecx+0ch], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
mov     [eax+10h], ecx
mov     eax, [esi+4]
pop     edi
mov     [eax+0ch], ecx
mov     [esi+4], ecx
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    18h
mov     esi, ecx
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
test    edx, edx
jz      short loc_40a940
mov     eax, [ebp+arg_0]
mov     dword ptr [edx+4], 0dh
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     dword ptr [edx+10h], 0
mov     dword ptr [edx], offset ??_7_node_capture@std@@6b@
mov     [edx+14h], eax
jmp     short loc_40a942
xor     edx, edx
mov     eax, [esi+4]
mov     [edx+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40a95e
mov     [edx+0ch], eax
mov     ecx, [esi+4]
mov     ecx, [ecx+0ch]
mov     [ecx+10h], edx
mov     ecx, [esi+4]
mov     eax, edx
mov     [ecx+0ch], edx
mov     [esi+4], edx
pop     esi
pop     ebp
retn    4
push    esi
push    14h
mov     esi, ecx
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
test    edx, edx
jz      short loc_40a9a7
mov     dword ptr [edx], offset ??_7_node_base@std@@6b@
mov     dword ptr [edx+4], 15h
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     dword ptr [edx+10h], 0
jmp     short loc_40a9a9
xor     edx, edx
mov     eax, [esi+4]
mov     [edx+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40a9c5
mov     [edx+0ch], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
mov     [eax+10h], edx
mov     eax, [esi+4]
mov     [eax+0ch], edx
mov     eax, [esi]
mov     [esi+4], edx
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     eax, [esi]
mov     edi, ecx
lea     edx, [esi+4]
mov     [edi], eax
mov     eax, [edx+0ch]
lea     ecx, [edi+4]
push    edx
mov     [ecx+0ch], eax
call    sub_40af30
lea     eax, [esi+14h]
push    eax
lea     ecx, [edi+14h]
call    sub_40ab50
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, ecx
push    edi
mov     edi, [ebx+0ch]
mov     [ebp+var_4], 0
cmp     esi, edi
jbe     short loc_40aa8d
mov     ecx, [ebx]
xor     edx, edx
test    edi, edi
jz      short loc_40aa70
mov     edx, edi
test    edx, edx
jns     short loc_40aa65
mov     eax, edx
neg     eax
jz      short loc_40aa65
or      ecx, 0ffffffffh
sub     ecx, edx
shr     ecx, 5
shl     ecx, 2
mov     eax, 0fffffffch
sub     eax, ecx
mov     ecx, [ebx]
add     ecx, eax
jmp     short loc_40aa6d
mov     eax, edx
shr     eax, 5
lea     ecx, [ecx+eax*4]
and     edx, 1fh
push    edx
push    ecx
lea     eax, [ebp+var_4]
push    eax
sub     esi, edi
push    esi
lea     eax, [ebp+var_c]
push    eax
mov     ecx, ebx
call    sub_40ae30
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
jnb     short loc_40aae0
lea     eax, [ebp+var_c]
push    eax
call    sub_40ac40
mov     edx, [ebx]
mov     edi, eax
mov     [ebp+var_10], 0
test    esi, esi
jns     short loc_40aac3
mov     eax, esi
neg     eax
jz      short loc_40aac3
or      ecx, 0ffffffffh
sub     ecx, esi
shr     ecx, 5
shl     ecx, 2
mov     eax, 0fffffffch
sub     eax, ecx
add     edx, eax
jmp     short loc_40aacb
mov     eax, esi
shr     eax, 5
lea     edx, [edx+eax*4]
push    dword ptr [edi+4]
and     esi, 1fh
push    dword ptr [edi]
lea     eax, [ebp+var_14]
push    esi
push    edx
push    eax
mov     ecx, ebx
call    sub_40aca0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 8
mov     edx, [ebp+arg_4]
push    esi
mov     esi, [ecx]
mov     [ebp+var_4], 0
test    edx, edx
jns     short loc_40ab33
mov     eax, edx
neg     eax
jz      short loc_40ab33
or      ecx, 0ffffffffh
sub     ecx, edx
shr     ecx, 5
shl     ecx, 2
mov     eax, 0fffffffch
sub     eax, ecx
add     esi, eax
mov     eax, [ebp+arg_0]
and     edx, 1fh
mov     [eax], esi
mov     [eax+4], edx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     eax, edx
shr     eax, 5
and     edx, 1fh
lea     esi, [esi+eax*4]
mov     eax, [ebp+arg_0]
mov     [eax], esi
mov     [eax+4], edx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [ebp+arg_0]
push    edi
mov     edi, ecx
cmp     edi, ebx
jz      loc_40ac31
mov     ecx, [ebx]
push    esi
mov     esi, [ebx+4]
cmp     ecx, esi
jnz     short loc_40ab7f
mov     eax, [edi]
mov     [edi+4], eax
pop     esi
mov     eax, edi
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     edx, [edi]
mov     ebx, [edi+4]
mov     eax, esi
sub     ebx, edx
sub     eax, ecx
sar     ebx, 3
sar     eax, 3
mov     [ebp+var_8], ebx
cmp     eax, ebx
mov     ebx, [ebp+arg_0]
mov     [ebp+var_4], eax
ja      short loc_40abd0
cmp     ecx, esi
jz      short loc_40abb5
mov     eax, [ecx]
mov     [edx], eax
mov     eax, [ecx+4]
add     ecx, 8
mov     [edx+4], eax
lea     edx, [edx+8]
cmp     ecx, esi
jnz     short loc_40aba1
mov     ecx, [ebx+4]
sub     ecx, [ebx]
mov     eax, [edi]
sar     ecx, 3
pop     esi
lea     eax, [eax+ecx*8]
mov     [edi+4], eax
mov     eax, edi
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [edi+8]
sub     eax, edx
sar     eax, 3
cmp     [ebp+var_4], eax
ja      short loc_40abf9
mov     eax, [ebp+var_8]
push    edx
lea     esi, [ecx+eax*8]
mov     edx, esi
call    sub_40c0a0
add     esp, 4
push    [ebp+arg_0]
push    ecx
push    dword ptr [edi+4]
mov     ecx, esi
jmp     short loc_40ac22
test    edx, edx
jz      short loc_40ac06
push    edx
call    j__free
add     esp, 4
mov     eax, [ebx+4]
sub     eax, [ebx]
mov     ecx, edi
sar     eax, 3
push    eax
call    sub_40b040
test    al, al
jz      short loc_40ac30
push    [ebp+arg_0]
push    ecx
push    dword ptr [edi]
mov     ecx, [ebx]
mov     edx, [ebx+4]
call    sub_40ceb0
add     esp, 0ch
mov     [edi+4], eax
pop     esi
mov     eax, edi
pop     edi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ecx+0ch]
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ecx]
mov     [esi], edi
mov     dword ptr [esi+4], 0
test    edx, edx
jz      short loc_40ac93
jns     short loc_40ac83
mov     eax, edx
neg     eax
jz      short loc_40ac83
or      ecx, 0ffffffffh
sub     ecx, edx
shr     ecx, 5
mov     eax, esi
lea     ecx, ds:4[ecx*4]
sub     edi, ecx
mov     [esi], edi
and     edx, 1fh
pop     edi
mov     [esi+4], edx
pop     esi
pop     ebp
retn    4
mov     eax, edx
shr     eax, 5
and     edx, 1fh
lea     eax, [edi+eax*4]
mov     [esi], eax
mov     [esi+4], edx
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     edi, ecx
xor     edx, edx
mov     ecx, [edi]
mov     esi, ecx
or      ebx, 0ffffffffh
mov     [ebp+var_18], edi
mov     [ebp+var_10], ecx
mov     [ebp+var_c], esi
cmp     [edi+0ch], edx
jbe     short loc_40acfe
mov     edx, [ebp+arg_4]
sub     edx, ecx
sar     edx, 2
shl     edx, 5
add     edx, [ebp+arg_8]
jns     short loc_40acf0
mov     eax, edx
neg     eax
jz      short loc_40acf0
mov     ecx, ebx
sub     ecx, edx
shr     ecx, 5
shl     ecx, 2
mov     eax, 0fffffffch
sub     eax, ecx
mov     ecx, [ebp+var_10]
add     esi, eax
jmp     short loc_40acf8
mov     eax, edx
shr     eax, 5
lea     esi, [esi+eax*4]
and     edx, 1fh
mov     [ebp+var_c], esi
mov     eax, [ebp+var_18]
xor     edi, edi
mov     [ebp+var_8], ecx
cmp     [eax+0ch], edi
jbe     short loc_40ad4e
mov     edi, [ebp+arg_c]
sub     edi, ecx
sar     edi, 2
shl     edi, 5
add     edi, [ebp+arg_10]
jns     short loc_40ad3a
mov     eax, edi
neg     eax
jz      short loc_40ad3a
mov     ecx, ebx
sub     ecx, edi
shr     ecx, 5
shl     ecx, 2
mov     eax, 0fffffffch
sub     eax, ecx
add     [ebp+var_8], eax
mov     ecx, [ebp+var_10]
jmp     short loc_40ad4b
mov     esi, [ebp+var_8]
mov     eax, edi
shr     eax, 5
lea     esi, [esi+eax*4]
mov     [ebp+var_8], esi
mov     esi, [ebp+var_c]
and     edi, 1fh
mov     eax, [ebp+var_8]
sub     esi, ecx
sar     esi, 2
shl     esi, 5
add     esi, edx
cmp     [ebp+var_c], eax
jnz     short loc_40ad64
cmp     edx, edi
jz      short loc_40add3
mov     ecx, [ebp+var_18]
xor     ebx, ebx
mov     eax, [ecx+0ch]
mov     ecx, [ebp+var_10]
test    eax, eax
jz      short loc_40ada1
mov     ebx, eax
test    ebx, ebx
jns     short loc_40ad96
neg     eax
jz      short loc_40ad96
or      ecx, 0ffffffffh
sub     ecx, ebx
shr     ecx, 5
shl     ecx, 2
mov     eax, 0fffffffch
sub     eax, ecx
mov     ecx, [ebp+var_10]
add     ecx, eax
jmp     short loc_40ad9e
mov     eax, ebx
shr     eax, 5
lea     ecx, [ecx+eax*4]
and     ebx, 1fh
push    edx
push    [ebp+var_c]
push    ebx
push    ecx
push    edi
push    [ebp+var_8]
lea     ecx, [ebp+var_14]
push    [ebp+arg_0]
call    sub_40e680
mov     ecx, [ebp+var_18]
mov     eax, [ebp+var_14]
sub     eax, [ecx]
add     esp, 1ch
sar     eax, 2
shl     eax, 5
add     eax, [ebp+var_10]
push    eax
call    sub_40a140
or      ebx, 0ffffffffh
mov     eax, [ebp+var_18]
mov     [ebp+arg_8], 0
mov     ecx, [eax]
test    esi, esi
jns     short loc_40ae0e
mov     eax, esi
neg     eax
jz      short loc_40ae0e
sub     ebx, esi
shr     ebx, 5
shl     ebx, 2
mov     eax, 0fffffffch
sub     eax, ebx
add     ecx, eax
mov     eax, [ebp+arg_0]
and     esi, 1fh
mov     [eax], ecx
mov     [eax+4], esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    14h
mov     eax, esi
shr     eax, 5
and     esi, 1fh
lea     ecx, [ecx+eax*4]
mov     eax, [ebp+arg_0]
pop     edi
mov     [eax+4], esi
pop     esi
mov     [eax], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
push    [ebp+arg_10]
mov     ebx, ecx
push    [ebp+arg_c]
mov     [ebp+var_8], ebx
push    esi
call    sub_40b110
mov     ecx, [ebx]
mov     edi, eax
or      ebx, 0ffffffffh
lea     edx, [edi+esi]
mov     [ebp+var_4], ecx
mov     [ebp+arg_4], ecx
mov     [ebp+var_c], 0
lea     esi, [ebx-3]
test    edx, edx
jns     short loc_40ae84
mov     eax, edx
neg     eax
jz      short loc_40ae84
mov     ecx, ebx
sub     ecx, edx
shr     ecx, 5
shl     ecx, 2
mov     eax, esi
sub     eax, ecx
add     [ebp+arg_4], eax
jmp     short loc_40ae92
mov     ecx, [ebp+arg_4]
mov     eax, edx
shr     eax, 5
lea     ecx, [ecx+eax*4]
mov     [ebp+arg_4], ecx
mov     ecx, [ebp+var_4]
and     edx, 1fh
mov     [ebp+var_c], 0
test    edi, edi
jns     short loc_40aebc
mov     eax, edi
neg     eax
jz      short loc_40aebc
mov     ecx, ebx
sub     ecx, edi
shr     ecx, 5
shl     ecx, 2
sub     esi, ecx
mov     ecx, [ebp+var_4]
add     ecx, esi
jmp     short loc_40aec4
mov     eax, edi
shr     eax, 5
lea     ecx, [ecx+eax*4]
push    edx
push    [ebp+arg_4]
mov     esi, edi
and     esi, 1fh
mov     eax, esi
push    eax
push    ecx
mov     ecx, [ebp+arg_8]
call    sub_40cee0
mov     ecx, [ebp+var_8]
add     esp, 10h
mov     ecx, [ecx]
mov     [ebp+arg_10], 0
test    edi, edi
jns     short loc_40af14
mov     eax, edi
neg     eax
jz      short loc_40af14
sub     ebx, edi
shr     ebx, 5
shl     ebx, 2
mov     eax, 0fffffffch
sub     eax, ebx
add     ecx, eax
mov     eax, [ebp+arg_0]
mov     [eax], ecx
mov     [eax+4], esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    14h
mov     eax, [ebp+arg_0]
shr     edi, 5
mov     [eax+4], esi
lea     ecx, [ecx+edi*4]
pop     edi
pop     esi
mov     [eax], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, ecx
cmp     ebx, esi
jz      loc_40b036
mov     eax, [esi+4]
push    edi
mov     edi, [esi]
cmp     edi, eax
jnz     short loc_40af5d
mov     eax, [ebx]
pop     edi
mov     [ebx+4], eax
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, [ebx]
mov     esi, [ebx+4]
mov     edx, eax
sub     esi, ecx
sub     edx, edi
sar     esi, 2
sar     edx, 2
mov     [ebp+var_4], esi
cmp     edx, esi
mov     esi, [ebp+arg_0]
ja      short loc_40afa3
sub     eax, edi
and     eax, 0fffffffch
push    eax
push    edi
push    ecx
call    _memmove
mov     ecx, [esi+4]
sub     ecx, [esi]
mov     eax, [ebx]
add     esp, 0ch
sar     ecx, 2
pop     edi
lea     eax, [eax+ecx*4]
mov     [ebx+4], eax
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [ebx+8]
sub     eax, ecx
sar     eax, 2
cmp     edx, eax
ja      short loc_40aff2
mov     eax, [ebp+var_4]
mov     edx, [esi]
lea     edi, [edi+eax*4]
mov     eax, edi
sub     eax, edx
and     eax, 0fffffffch
push    eax
push    edx
push    ecx
call    _memmove
mov     eax, [esi+4]
sub     eax, edi
sar     eax, 2
lea     esi, ds:0[eax*4]
push    esi
push    edi
push    dword ptr [ebx+4]
call    _memmove
add     esp, 18h
add     eax, esi
pop     edi
mov     [ebx+4], eax
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
test    ecx, ecx
jz      short loc_40afff
push    ecx
call    j__free
add     esp, 4
mov     eax, [esi+4]
sub     eax, [esi]
mov     ecx, ebx
sar     eax, 2
push    eax
call    sub_40a420
test    al, al
jz      short loc_40b035
mov     ecx, [esi]
mov     eax, [esi+4]
sub     eax, ecx
sar     eax, 2
lea     esi, ds:0[eax*4]
push    esi
push    ecx
push    dword ptr [ebx]
call    _memmove
add     esp, 0ch
add     eax, esi
mov     [ebx+4], eax
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
test    eax, eax
jnz     short loc_40b068
xor     al, al
pop     esi
pop     ebp
retn    4
cmp     eax, 1fffffffh
ja      short loc_40b096
push    edi
lea     edi, ds:0[eax*8]
push    edi
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40b0a0
mov     [esi], eax
mov     [esi+4], eax
add     eax, edi
mov     [esi+8], eax
pop     edi
mov     al, 1
pop     esi
pop     ebp
retn    4
push    offset avectorttoolong
call    ?_xlength_error@std@@yaxpbd@z
call    unknown_libname_5
push    ebp
mov     ebp, esp
mov     edx, [ecx+4]
push    esi
mov     esi, [ecx]
mov     ecx, [ebp+arg_4]
test    ecx, ecx
jns     short loc_40b0ee
mov     eax, ecx
neg     eax
cmp     edx, eax
jnb     short loc_40b0ee
add     edx, ecx
or      ecx, 0ffffffffh
sub     ecx, edx
shr     ecx, 5
shl     ecx, 2
mov     eax, 0fffffffch
sub     eax, ecx
add     esi, eax
mov     eax, [ebp+arg_0]
and     edx, 1fh
mov     [eax], esi
mov     [eax+4], edx
pop     esi
pop     ebp
retn    8
add     edx, ecx
mov     eax, edx
shr     eax, 5
and     edx, 1fh
lea     esi, [esi+eax*4]
mov     eax, [ebp+arg_0]
mov     [eax], esi
mov     [eax+4], edx
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 28h
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, ecx
push    edi
sub     ebx, [esi]
mov     edi, [ebp+arg_0]
sar     ebx, 2
shl     ebx, 5
add     ebx, [ebp+arg_8]
test    edi, edi
jz      loc_40b1c6
mov     ecx, [esi+0ch]
or      eax, 0ffffffffh
sub     eax, ecx
cmp     eax, edi
jb      loc_40b1d1
lea     eax, [ebp+arg_0]
push    eax
lea     eax, [edi+1fh]
add     eax, ecx
shr     eax, 5
push    eax
mov     ecx, esi
mov     [ebp+arg_0], 0
call    sub_40b1e0
mov     eax, [esi+0ch]
test    eax, eax
jnz     short loc_40b174
mov     [esi+0ch], edi
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
lea     eax, [ebp+var_14]
push    eax
mov     ecx, esi
call    sub_40ac40
mov     eax, [esi]
add     [esi+0ch], edi
mov     [ebp+var_c], eax
lea     eax, [ebp+var_1c]
push    eax
mov     ecx, esi
mov     [ebp+var_8], 0
call    sub_40ac40
mov     edi, [eax]
mov     esi, [eax+4]
push    ebx
lea     eax, [ebp+var_24]
push    eax
lea     ecx, [ebp+var_c]
call    sub_40b0b0
push    esi
push    edi
push    [ebp+var_10]
lea     ecx, [ebp+var_14]
push    [ebp+var_14]
push    dword ptr [eax+4]
push    dword ptr [eax]
push    [ebp+arg_0]
call    sub_40e700
add     esp, 1ch
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    offset avectorbooltool
call    ?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, ecx
push    esi
mov     eax, [ebx+4]
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebx]
mov     edx, eax
sub     edx, edi
sar     edx, 2
cmp     edx, esi
jbe     short loc_40b236
lea     esi, [edi+esi*4]
cmp     esi, edi
jnz     short loc_40b20c
mov     [ebx+4], edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
cmp     esi, eax
jz      short loc_40b248
mov     ecx, eax
sub     ecx, eax
sar     ecx, 2
lea     edi, ds:0[ecx*4]
push    edi
push    eax
push    esi
call    _memmove
add     esp, 0ch
lea     eax, [edi+esi]
pop     edi
pop     esi
mov     [ebx+4], eax
pop     ebx
pop     ebp
retn    8
jnb     short loc_40b248
push    [ebp+arg_4]
sub     esi, edx
push    esi
push    eax
lea     eax, [ebp+arg_0]
push    eax
call    sub_40b250
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+src]
push    ebx
push    edi
mov     ebx, ecx
mov     edi, eax
sub     edi, [ebx]
sar     edi, 2
mov     [ebp+var_c], edi
mov     edi, [ebp+arg_8]
test    edi, edi
jz      loc_40b46f
mov     edx, [ebx+4]
push    esi
mov     esi, [ebx+8]
mov     ecx, esi
sub     ecx, edx
sar     ecx, 2
mov     [ebp+var_8], edx
cmp     ecx, edi
jnb     loc_40b387
sub     edx, [ebx]
mov     ecx, 3fffffffh
sar     edx, 2
sub     ecx, edx
cmp     ecx, edi
jb      loc_40b484
sub     esi, [ebx]
lea     ecx, [edx+edi]
sar     esi, 2
mov     [ebp+var_8], ecx
mov     ecx, esi
shr     ecx, 1
mov     edx, 3fffffffh
sub     edx, ecx
cmp     edx, esi
jnb     short loc_40b2bd
xor     esi, esi
jmp     short loc_40b2bf
add     esi, ecx
cmp     esi, [ebp+var_8]
cmovb   esi, [ebp+var_8]
xor     edx, edx
mov     [ebp+var_4], edx
test    esi, esi
jz      short loc_40b2fb
cmp     esi, 3fffffffh
ja      loc_40b48e
lea     eax, ds:0[esi*4]
push    eax
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
mov     [ebp+var_4], eax
test    edx, edx
jz      loc_40b48e
mov     eax, [ebp+src]
mov     ecx, eax
sub     ecx, [ebx]
sar     ecx, 2
mov     [ebp+var_8], ecx
mov     ecx, edi
mov     edi, [ebp+var_8]
lea     edx, [edx+edi*4]
mov     edi, ecx
test    edi, edi
jz      short loc_40b326
mov     edi, [ebp+arg_c]
mov     eax, [edi]
mov     [edx], eax
lea     edx, [edx+4]
dec     ecx
jnz     short loc_40b316
mov     eax, [ebp+src]
mov     edi, [ebp+arg_8]
mov     ecx, [ebx]
sub     eax, ecx
and     eax, 0fffffffch
push    eax
push    ecx
push    [ebp+var_4]
call    _memmove
mov     eax, [ebp+src]
mov     ecx, [ebx+4]
sub     ecx, eax
and     ecx, 0fffffffch
push    ecx
mov     ecx, [ebp+var_4]
push    eax
mov     eax, [ebp+var_8]
add     eax, edi
lea     eax, [ecx+eax*4]
push    eax
call    _memmove
mov     ecx, [ebx]
mov     eax, [ebx+4]
sub     eax, ecx
sar     eax, 2
add     esp, 18h
add     edi, eax
test    ecx, ecx
jz      short loc_40b371
push    ecx
call    j__free
add     esp, 4
mov     ecx, [ebp+var_4]
mov     [ebx], ecx
lea     eax, [ecx+esi*4]
mov     [ebx+8], eax
lea     eax, [ecx+edi*4]
mov     [ebx+4], eax
jmp     loc_40b46e
mov     esi, edx
sub     esi, eax
sar     esi, 2
cmp     esi, edi
jnb     short loc_40b3fb
mov     ecx, [ebp+arg_c]
lea     edx, ds:0[edi*4]
mov     ecx, [ecx]
mov     [ebp+arg_8], ecx
lea     ecx, ds:0[esi*4]
push    ecx
push    eax
add     eax, edx
push    eax
mov     [ebp+arg_c], edx
call    _memmove
mov     eax, [ebx+4]
mov     edx, [ebp+src]
mov     esi, [ebp+arg_8]
sub     eax, edx
sar     eax, 2
add     esp, 0ch
sub     edi, eax
jz      short loc_40b3d6
mov     ecx, edi
mov     edi, [ebx+4]
mov     eax, esi
rep stosd
mov     edx, [ebp+src]
mov     ecx, [ebp+arg_c]
add     [ebx+4], ecx
mov     eax, [ebx+4]
sub     eax, ecx
cmp     edx, eax
jz      loc_40b46e
lea     esp, [esp+0]
mov     [edx], esi
add     edx, 4
cmp     edx, eax
jnz     short loc_40b3f0
jmp     short loc_40b46e
mov     eax, [ebp+arg_c]
mov     eax, [eax]
mov     [ebp+arg_c], eax
lea     eax, ds:0[edi*4]
mov     [ebp+arg_8], eax
mov     edi, edx
sub     edi, eax
mov     eax, edx
sub     eax, edi
sar     eax, 2
lea     esi, ds:0[eax*4]
push    esi
push    edi
push    edx
call    _memmove
add     eax, esi
mov     [ebx+4], eax
mov     eax, [ebp+src]
sub     edi, eax
sar     edi, 2
lea     ecx, ds:0[edi*4]
push    ecx
push    eax
mov     eax, [ebp+var_8]
sub     eax, ecx
push    eax
call    _memmove
mov     ecx, [ebp+src]
mov     edx, [ebp+arg_8]
add     esp, 18h
lea     eax, [edx+ecx]
cmp     ecx, eax
jz      short loc_40b46e
mov     esi, [ebp+arg_c]
jmp     short loc_40b460
mov     [ecx], esi
mov     eax, [ebp+src]
add     ecx, 4
add     eax, edx
cmp     ecx, eax
jnz     short loc_40b460
pop     esi
mov     eax, [ebx]
mov     ecx, [ebp+var_c]
pop     edi
lea     ecx, [eax+ecx*4]
mov     eax, [ebp+arg_0]
pop     ebx
mov     [eax], ecx
mov     esp, ebp
pop     ebp
retn    10h
push    offset avectorttoolong
call    ?_xlength_error@std@@yaxpbd@z
call    unknown_libname_5
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_40b4a0
mov     eax, large fs:0
push    eax
sub     esp, 38h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+54h+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     eax, [edi+7ch]
test    eax, eax
jle     short loc_40b4e4
dec     eax
mov     [edi+7ch], eax
test    eax, eax
jg      short loc_40b4e4
push    0ch
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
mov     eax, [edi+78h]
test    eax, eax
jle     short loc_40b4fa
dec     eax
mov     [edi+78h], eax
test    eax, eax
jg      short loc_40b4fa
push    0bh
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
mov     ebx, [ebp+arg_0]
mov     byte ptr [esp+54h+var_40], 0
test    ebx, ebx
jz      loc_40b731
mov     esi, 1
nop
mov     ecx, [ebx+4]
lea     eax, [ecx-1]
cmp     eax, 14h
ja      def_40b51f
jmp     ds:jpt_40b51f[eax*4]
mov     ecx, [edi+60h]
mov     eax, ecx
and     eax, 101h
cmp     eax, 1
jz      short loc_40b574
test    ecx, 100h
jnz     short loc_40b548
mov     eax, [edi]
cmp     eax, [edi+4ch]
jz      loc_40b717
mov     eax, [edi]
cmp     byte ptr [eax-1], 0ah
setnz   al
mov     [esp+54h+var_40], eax
jmp     loc_40b71b
test    byte ptr [edi+60h], 2
jnz     short loc_40b574
mov     eax, [edi]
cmp     eax, [edi+50h]
jz      loc_40b717
cmp     byte ptr [eax], 0ah
jz      loc_40b717
mov     bl, 1
jmp     loc_40b735
mov     ecx, [edi+60h]
test    cl, 4
jz      short loc_40b58a
mov     eax, [edi]
cmp     eax, [edi+4ch]
jz      short loc_40b596
test    cl, 8
jz      short loc_40b59a
mov     eax, [edi]
cmp     eax, [edi+50h]
jnz     short loc_40b59a
xor     cl, cl
jmp     short loc_40b5f5
mov     eax, [edi]
cmp     eax, [edi+4ch]
jnz     short loc_40b5b0
test    ecx, 100h
jnz     short loc_40b5b0
mov     [esp+54h+var_41], 0
jmp     short loc_40b5cb
mov     al, [eax-1]
movsx   eax, al
push    eax
push    offset aabcdefghijklmn
call    _strchr
add     esp, 8
test    eax, eax
setnz   [esp+54h+var_41]
mov     eax, [edi]
cmp     eax, [edi+50h]
jnz     short loc_40b5d6
xor     al, al
jmp     short loc_40b5ee
mov     al, [eax]
movsx   eax, al
push    eax
push    offset aabcdefghijklmn
call    _strchr
add     esp, 8
test    eax, eax
setnz   al
cmp     [esp+54h+var_41], al
setnz   cl
mov     al, [ebx+8]
and     al, 1
cmp     cl, al
jz      loc_40b574
jmp     loc_40b717
mov     eax, [edi]
cmp     eax, [edi+50h]
jz      loc_40b574
mov     cl, [eax]
cmp     cl, 0ah
jz      loc_40b574
cmp     cl, 0dh
jz      loc_40b574
inc     eax
mov     [edi], eax
jmp     loc_40b717
mov     eax, [edi+60h]
mov     edx, [ebx+1ch]
mov     ecx, [ebx+18h]
and     eax, 80h
setnz   al
movzx   eax, al
push    eax
push    dword ptr [edi+5ch]
lea     eax, [ecx+edx]
push    dword ptr [edi+70h]
mov     ecx, [edi]
push    eax
push    edx
mov     edx, [edi+50h]
call    sub_40c840
add     esp, 14h
cmp     eax, [edi]
jz      loc_40b574
mov     [edi], eax
jmp     loc_40b717
mov     eax, [edi]
cmp     eax, [edi+50h]
jz      loc_40b574
push    ebx
mov     ecx, edi
call    sub_40c560
test    al, al
jz      loc_40b574
mov     byte ptr [esp+54h+var_40], 0
jmp     loc_40b71f
mov     eax, [edi]
cmp     ecx, 0bh
lea     esi, [edi+4]
push    esi
lea     ecx, [esp+58h+block]
mov     [esp+58h+var_38], eax
setz    bl
mov     [esp+58h+var_24], eax
call    sub_40c0d0
mov     eax, [esi+0ch]
mov     [esp+54h+var_3c], eax
mov     [esp+54h+var_14], eax
mov     eax, [ebp+arg_0]
mov     [esp+54h+var_4], 0
push    dword ptr [eax+14h]
mov     ecx, edi
call    sub_40b4a0
cmp     al, bl
jnz     short loc_40b6f0
mov     eax, [esp+54h+var_24]
mov     [edi], eax
mov     eax, [esp+54h+var_3c]
mov     [esi+0ch], eax
lea     eax, [esp+54h+block]
push    eax
mov     ecx, esi
call    sub_40af30
mov     byte ptr [esp+54h+var_40], 1
jmp     short loc_40b6f6
mov     eax, [esp+54h+var_38]
mov     [edi], eax
mov     [esp+54h+var_4], 0ffffffffh
mov     eax, [esp+54h+block]
test    eax, eax
jz      short loc_40b70f
push    eax
call    j__free
add     esp, 4
mov     ebx, [ebp+arg_0]
mov     esi, 1
mov     eax, [esp+54h+var_40]
test    al, al
jnz     short loc_40b731
test    ebx, ebx
jz      short loc_40b731
mov     ebx, [ebx+0ch]
mov     [ebp+arg_0], ebx
test    ebx, ebx
jnz     loc_40b510
mov     ebx, [esp+54h+var_40]
mov     eax, [edi+7ch]
test    eax, eax
jle     short loc_40b740
inc     eax
mov     [edi+7ch], eax
xor     eax, eax
test    bl, bl
setz    al
mov     ecx, [esp+54h+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     edx, [ebx+14h]
mov     ecx, [edi+14h]
mov     eax, [edi]
mov     [ecx+edx*8], eax
mov     eax, [edi+10h]
cmp     [ebx+14h], eax
jnb     short loc_40b717
nop
dec     eax
mov     esi, [edi+4]
jns     short loc_40b78f
mov     ecx, eax
neg     ecx
jz      short loc_40b78f
or      ecx, 0ffffffffh
sub     ecx, eax
shr     ecx, 5
lea     ecx, ds:4[ecx*4]
sub     esi, ecx
jmp     short loc_40b797
mov     ecx, eax
shr     ecx, 5
lea     esi, [esi+ecx*4]
mov     ecx, eax
and     ecx, 1fh
mov     edx, 1
shl     edx, cl
not     edx
and     [esi], edx
cmp     [ebx+14h], eax
jb      short loc_40b770
jmp     loc_40b712
cmp     byte ptr [edi+65h], 0
mov     eax, [ebx+14h]
mov     [esp+54h+var_38], eax
jnz     short loc_40b7c8
cmp     dword ptr [eax+14h], 0
jz      loc_40b717
push    dword ptr [eax+14h]
lea     eax, [esp+58h+var_34]
lea     ecx, [edi+4]
push    eax
call    sub_40aaf0
mov     ecx, [eax+4]
mov     esi, [eax]
mov     edx, 1
shl     edx, cl
or      [esi], edx
mov     edx, [esp+54h+var_38]
mov     ecx, [edi+14h]
mov     edx, [edx+14h]
mov     eax, [edi]
mov     [ecx+edx*8+4], eax
jmp     loc_40b712
mov     esi, [ebx+14h]
push    esi
lea     eax, [esp+58h+var_2c]
lea     ecx, [edi+4]
push    eax
call    sub_40aaf0
mov     ecx, [eax+4]
mov     eax, [eax]
mov     edx, 1
shl     edx, cl
test    [eax], edx
jz      loc_40b712
mov     eax, [edi+14h]
mov     ecx, [edi]
mov     edx, [eax+esi*8]
mov     esi, [eax+esi*8+4]
cmp     edx, esi
jz      short loc_40b85c
mov     eax, [edi+60h]
and     eax, 80h
setnz   al
movzx   eax, al
push    eax
push    dword ptr [edi+5ch]
push    dword ptr [edi+70h]
push    esi
push    edx
mov     edx, [edi+50h]
call    sub_40c840
mov     ecx, eax
add     esp, 14h
cmp     ecx, [edi]
jz      loc_40b574
mov     [edi], ecx
jmp     loc_40b712
push    ebx
mov     ecx, edi
call    sub_40c170
mov     ebx, [esp+54h+var_40]
movzx   ebx, bl
test    al, al
cmovz   ebx, esi
mov     [esp+54h+var_40], ebx
xor     ebx, ebx
jmp     loc_40b717
mov     eax, [ebx+8]
shr     eax, 1
and     al, 1
movzx   eax, al
push    0
push    eax
push    ebx
mov     ecx, edi
call    sub_40c320
mov     edx, [esp+54h+var_40]
movzx   ecx, dl
test    al, al
cmovz   ecx, esi
mov     byte ptr [esp+54h+var_40], cl
xor     ebx, ebx
jmp     loc_40b717
mov     edx, [ebx+14h]
mov     eax, [edi+40h]
cmp     dword ptr [edx+24h], 0
mov     ecx, [edx+20h]
jnz     short loc_40b8a7
push    dword ptr [eax+ecx*8]
mov     eax, [edx+8]
shr     eax, 1
and     al, 1
movzx   eax, al
push    eax
push    edx
jmp     short loc_40b890
test    dword ptr [edi+60h], 2020h
jz      short loc_40b8de
mov     eax, [edi+4ch]
cmp     eax, [edi]
jz      short loc_40b8eb
cmp     byte ptr [edi+74h], 0
jz      short loc_40b8f7
mov     eax, [edi]
cmp     eax, [edi+50h]
jz      short loc_40b8f7
mov     byte ptr [esp+54h+var_40], 1
xor     ebx, ebx
jmp     loc_40b717
cmp     byte ptr [edi+64h], 0
jz      short loc_40b908
mov     ecx, edi
call    sub_40c740
test    al, al
jz      short loc_40b8a7
mov     eax, [edi]
lea     edx, [edi+4]
mov     [edi+20h], eax
mov     eax, [edx+0ch]
lea     ecx, [edi+24h]
push    edx
mov     [ecx+0ch], eax
call    sub_40af30
lea     eax, [edi+14h]
push    eax
lea     ecx, [edi+34h]
call    sub_40ab50
mov     byte ptr [edi+64h], 1
xor     ebx, ebx
jmp     loc_40b717
push    0dh
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
mov     eax, [ecx]
inc     eax
cmp     eax, [ecx+8]
jz      short loc_40b9ce
mov     ecx, [ecx+50h]
test    cl, 8
jnz     short loc_40b9bc
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40b9cb
cmp     dl, 29h
jz      short loc_40b9cb
test    cl, 10h
jnz     short loc_40b9ce
mov     al, [eax]
cmp     al, 7bh
jz      short loc_40b9cb
cmp     al, 7dh
jnz     short loc_40b9ce
mov     al, 1
retn
xor     al, al
retn
mov     eax, [ecx]
mov     edx, [ecx+8]
cmp     eax, edx
jz      short loc_40ba1e
cmp     byte ptr [eax], 5ch
jnz     short loc_40ba1c
inc     eax
cmp     eax, edx
jz      short loc_40ba1c
mov     edx, [ecx+50h]
push    ebx
test    dl, 8
jnz     short loc_40ba08
mov     bl, [eax]
cmp     bl, 28h
jz      short loc_40ba19
cmp     bl, 29h
jz      short loc_40ba19
test    dl, 10h
jnz     short loc_40ba1b
mov     dl, [eax]
cmp     dl, 7bh
jz      short loc_40ba19
cmp     dl, 7dh
jnz     short loc_40ba1b
mov     [ecx], eax
pop     ebx
inc     dword ptr [ecx]
jmp     sub_40a510
push    ecx
push    ebx
push    esi
mov     esi, ecx
xor     cl, cl
cmp     dword ptr [esi+4ch], 0ffffffffh
jz      loc_40be41
mov     eax, [esi+4ch]
cmp     eax, 7ch
jz      loc_40be41
cmp     eax, 29h
jnz     short loc_40ba69
cmp     dword ptr [esi+10h], 0
jnz     loc_40be41
test    dword ptr [esi+50h], 10000000h
jz      loc_40be47
cmp     eax, 2eh
jnz     loc_40bb15
push    14h
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      short loc_40baa6
mov     dword ptr [ecx], offset ??_7_node_base@std@@6b@
mov     dword ptr [ecx+4], 5
mov     dword ptr [ecx+8], 0
mov     dword ptr [ecx+0ch], 0
mov     dword ptr [ecx+10h], 0
jmp     short loc_40baa8
xor     ecx, ecx
mov     eax, [esi+28h]
mov     [ecx+10h], eax
mov     eax, [esi+28h]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40bac4
mov     [ecx+0ch], eax
mov     eax, [esi+28h]
mov     eax, [eax+0ch]
mov     [eax+10h], ecx
mov     eax, [esi+28h]
mov     [eax+0ch], ecx
mov     [esi+28h], ecx
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40bb09
cmp     byte ptr [eax], 5ch
jnz     short loc_40bb07
inc     eax
cmp     eax, ecx
jz      short loc_40bb07
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40baf4
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40bb05
cmp     dl, 29h
jz      short loc_40bb05
test    cl, 10h
jnz     short loc_40bb07
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40bb05
cmp     cl, 7dh
jnz     short loc_40bb07
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
jmp     loc_40be2e
cmp     eax, 5ch
jnz     loc_40bc2e
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40bb5a
cmp     byte ptr [eax], 5ch
jnz     short loc_40bb58
inc     eax
cmp     eax, ecx
jz      short loc_40bb58
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40bb45
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40bb56
cmp     dl, 29h
jz      short loc_40bb56
test    cl, 10h
jnz     short loc_40bb58
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40bb56
cmp     cl, 7dh
jnz     short loc_40bb58
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
mov     eax, [esi+50h]
and     eax, 80h
jz      short loc_40bbc1
cmp     byte ptr [esi+48h], 62h
jnz     short loc_40bbc1
lea     ecx, [esi+24h]
call    sub_40cd40
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40bbb5
cmp     byte ptr [eax], 5ch
jnz     short loc_40bbb3
inc     eax
cmp     eax, ecx
jz      short loc_40bbb3
mov     edx, [esi+50h]
test    dl, 8
jnz     short loc_40bba0
mov     cl, [eax]
cmp     cl, 28h
jz      short loc_40bbb1
cmp     cl, 29h
jz      short loc_40bbb1
test    dl, 10h
jnz     short loc_40bbb3
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40bbb1
cmp     cl, 7dh
jnz     short loc_40bbb3
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
jmp     loc_40be35
test    eax, eax
jz      short loc_40bc22
cmp     byte ptr [esi+48h], 42h
jnz     short loc_40bc22
lea     ecx, [esi+24h]
call    sub_40cd40
mov     eax, [esi+28h]
xor     dword ptr [eax+8], 1
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40bc16
cmp     byte ptr [eax], 5ch
jnz     short loc_40bc14
inc     eax
cmp     eax, ecx
jz      short loc_40bc14
mov     edx, [esi+50h]
test    dl, 8
jnz     short loc_40bc01
mov     cl, [eax]
cmp     cl, 28h
jz      short loc_40bc12
cmp     cl, 29h
jz      short loc_40bc12
test    dl, 10h
jnz     short loc_40bc14
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40bc12
cmp     cl, 7dh
jnz     short loc_40bc14
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
jmp     loc_40be35
mov     ecx, esi
call    sub_40c9e0
jmp     loc_40be2e
cmp     eax, 5bh
jnz     loc_40bcd3
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40bc73
cmp     byte ptr [eax], 5ch
jnz     short loc_40bc71
inc     eax
cmp     eax, ecx
jz      short loc_40bc71
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40bc5e
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40bc6f
cmp     dl, 29h
jz      short loc_40bc6f
test    cl, 10h
jnz     short loc_40bc71
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40bc6f
cmp     cl, 7dh
jnz     short loc_40bc71
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
mov     ecx, esi
call    sub_40c900
cmp     dword ptr [esi+4ch], 5dh
jnz     loc_40be4e
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40bcc7
cmp     byte ptr [eax], 5ch
jnz     short loc_40bcc5
inc     eax
cmp     eax, ecx
jz      short loc_40bcc5
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40bcb2
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40bcc3
cmp     dl, 29h
jz      short loc_40bcc3
test    cl, 10h
jnz     short loc_40bcc5
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40bcc3
cmp     cl, 7dh
jnz     short loc_40bcc5
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
jmp     loc_40be2e
cmp     eax, 28h
jnz     loc_40bd82
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40bd18
cmp     byte ptr [eax], 5ch
jnz     short loc_40bd16
inc     eax
cmp     eax, ecx
jz      short loc_40bd16
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40bd03
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40bd14
cmp     dl, 29h
jz      short loc_40bd14
test    cl, 10h
jnz     short loc_40bd16
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40bd14
cmp     cl, 7dh
jnz     short loc_40bd16
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
mov     ecx, esi
call    sub_40cab0
cmp     dword ptr [esi+4ch], 29h
mov     bl, al
jnz     loc_40be47
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40bd6e
cmp     byte ptr [eax], 5ch
jnz     short loc_40bd6c
inc     eax
cmp     eax, ecx
jz      short loc_40bd6c
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40bd59
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40bd6a
cmp     dl, 29h
jz      short loc_40bd6a
test    cl, 10h
jnz     short loc_40bd6c
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40bd6a
cmp     cl, 7dh
jnz     short loc_40bd6c
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
test    bl, bl
jz      loc_40be35
jmp     loc_40be2e
cmp     eax, 5eh
jnz     short loc_40bdd4
lea     ecx, [esi+24h]
call    sub_40cc80
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40bdcb
cmp     byte ptr [eax], 5ch
jnz     short loc_40bdc9
inc     eax
cmp     eax, ecx
jz      short loc_40bdc9
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40bdb6
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40bdc7
cmp     dl, 29h
jz      short loc_40bdc7
test    cl, 10h
jnz     short loc_40bdc9
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40bdc7
cmp     cl, 7dh
jnz     short loc_40bdc9
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
jmp     short loc_40be35
cmp     eax, 24h
jnz     short loc_40bdea
lea     ecx, [esi+24h]
call    sub_40cce0
mov     ecx, esi
call    sub_40b9e0
jmp     short loc_40be35
cmp     eax, 2ah
jz      short loc_40be5c
cmp     eax, 2bh
jz      short loc_40be5c
cmp     eax, 3fh
jz      short loc_40be5c
cmp     eax, 7bh
jz      short loc_40be5c
cmp     eax, 7dh
jnz     short loc_40be0c
test    dword ptr [esi+50h], 10000000h
jz      short loc_40be55
cmp     eax, 5dh
jnz     short loc_40be1a
test    dword ptr [esi+50h], 10000000h
jz      short loc_40be4e
movzx   eax, byte ptr [esi+48h]
lea     ecx, [esi+24h]
push    eax
call    sub_40cda0
mov     ecx, esi
call    sub_40b9e0
mov     ecx, esi
call    sub_40cb50
cmp     dword ptr [esi+4ch], 0ffffffffh
mov     cl, 1
jnz     loc_40ba41
pop     esi
mov     al, cl
pop     ebx
pop     ecx
retn
push    5
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    4
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    6
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    0ah
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
mov     ecx, [ecx+4]
mov     eax, [ecx+4]
cmp     eax, 14h
jz      short loc_40bea2
cmp     eax, 8
jz      short loc_40bea2
cmp     eax, 0dh
jz      short loc_40bea2
cmp     eax, 2
jnz     short loc_40be9f
mov     eax, [ecx+10h]
mov     eax, [eax+4]
cmp     eax, 14h
jz      short loc_40bea2
cmp     eax, 8
jz      short loc_40bea2
cmp     eax, 0dh
jz      short loc_40bea2
xor     al, al
retn
mov     al, 1
retn
push    esi
push    14h
mov     esi, ecx
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
test    edx, edx
jz      short loc_40bee7
mov     dword ptr [edx], offset ??_7_node_base@std@@6b@
mov     dword ptr [edx+4], 8
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     dword ptr [edx+10h], 0
jmp     short loc_40bee9
xor     edx, edx
mov     eax, [esi+4]
mov     [edx+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40bf05
mov     [edx+0ch], eax
mov     ecx, [esi+4]
mov     ecx, [ecx+0ch]
mov     [ecx+10h], edx
mov     ecx, [esi+4]
mov     eax, edx
mov     [ecx+0ch], edx
mov     [esi+4], edx
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
push    14h
mov     edi, ecx
call    ??2@yapaxi@z
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_40bf5b
mov     dword ptr [esi+4], 11h
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi], offset ??_7_node_endif@std@@6b@
jmp     short loc_40bf5d
xor     esi, esi
mov     eax, [edi+4]
mov     [esi+10h], eax
mov     eax, [edi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40bf79
mov     [esi+0ch], eax
mov     eax, [edi+4]
mov     eax, [eax+0ch]
mov     [eax+10h], esi
mov     eax, [edi+4]
push    1ch
mov     [eax+0ch], esi
mov     [edi+4], esi
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40bfbe
mov     dword ptr [eax+4], 10h
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
mov     dword ptr [eax], offset ??_7_node_if@std@@6b@
mov     [eax+14h], esi
mov     dword ptr [eax+18h], 0
jmp     short loc_40bfc0
xor     eax, eax
mov     ecx, [ebp+arg_0]
pop     edi
mov     edx, [ecx+0ch]
mov     ecx, [edx+10h]
mov     [eax+10h], ecx
mov     ecx, [edx+10h]
mov     [ecx+0ch], eax
mov     [eax+0ch], edx
mov     [edx+10h], eax
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [eax+0ch]
push    edi
mov     edi, [ebp+arg_4]
mov     ebx, [edi+0ch]
mov     dword ptr [edi+0ch], 0
mov     eax, [ecx+4]
mov     [ecx+4], edi
mov     dword ptr [edi+0ch], 0
mov     [eax+0ch], edi
cmp     dword ptr [esi+18h], 0
lea     eax, [esi+18h]
jz      short loc_40c01d
mov     esi, [eax]
cmp     dword ptr [esi+18h], 0
lea     eax, [esi+18h]
jnz     short loc_40c012
push    1ch
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40c06a
mov     [eax+14h], edi
mov     dword ptr [eax+4], 10h
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
mov     dword ptr [eax], offset ??_7_node_if@std@@6b@
mov     dword ptr [eax+18h], 0
mov     [esi+18h], eax
mov     [eax+0ch], ebx
mov     eax, [esi+18h]
pop     edi
pop     esi
mov     [ebx+10h], eax
pop     ebx
pop     ebp
retn    8
xor     eax, eax
mov     [esi+18h], eax
mov     [eax+0ch], ebx
mov     eax, [esi+18h]
pop     edi
pop     esi
mov     [ebx+10h], eax
pop     ebx
pop     ebp
retn    8
test    edx, edx
jz      short locret_40c095
test    ecx, ecx
jz      short loc_40c08f
xorps   xmm0, xmm0
movq    qword ptr [ecx], xmm0
add     ecx, 8
dec     edx
jnz     short loc_40c084
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, edx
cmp     ecx, esi
jz      short loc_40c0c4
lea     ecx, [ecx+0]
mov     edx, [ecx]
mov     [eax], edx
mov     edx, [ecx+4]
mov     [eax+4], edx
add     ecx, 8
add     eax, 8
cmp     ecx, esi
jnz     short loc_40c0b0
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
push    edi
mov     edi, [ebp+arg_0]
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
mov     eax, [edi+4]
sub     eax, [edi]
mov     dword ptr [esi], 0
sar     eax, 2
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
test    eax, eax
jz      short loc_40c14b
cmp     eax, 3fffffffh
ja      short loc_40c153
push    ebx
lea     ebx, ds:0[eax*4]
push    ebx
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40c15d
push    [ebp+arg_0]
lea     ecx, [ebx+eax]
mov     [esi+8], ecx
mov     [esi], eax
mov     [esi+4], eax
push    dword ptr [edi+4]
mov     ecx, eax
push    dword ptr [edi]
call    sub_40f5c0
add     esp, 0ch
mov     [esi+4], eax
pop     ebx
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    offset avectorttoolong
call    ?_xlength_error@std@@yaxpbd@z
call    unknown_libname_5
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40c170
mov     eax, large fs:0
push    eax
sub     esp, 50h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     eax, [ebx]
lea     esi, [ebx+4]
push    esi
lea     ecx, [ebp+var_34]
mov     [ebp+var_38], eax
call    sub_40c0d0
mov     eax, [esi+0ch]
mov     [ebp+var_28], eax
lea     edi, [ebx+14h]
push    edi
lea     ecx, [ebp+var_24]
mov     [ebp+var_4], 0
call    sub_40d0f0
mov     [ebp+var_4], 1
mov     eax, [ebx]
push    esi
lea     ecx, [ebp+var_54]
mov     [ebp+var_58], eax
call    sub_40c0d0
mov     eax, [esi+0ch]
mov     [ebp+var_48], eax
push    edi
lea     ecx, [ebp+block]
mov     byte ptr [ebp+var_4], 2
call    sub_40d0f0
mov     edi, [ebp+arg_0]
xor     al, al
mov     byte ptr [ebp+var_4], 3
mov     [ebp+var_11], al
mov     [ebp+var_18], 0ffffffffh
test    edi, edi
jz      loc_40c287
mov     eax, [ebp+var_38]
mov     [ebx], eax
mov     eax, [ebp+var_28]
mov     [esi+0ch], eax
lea     eax, [ebp+var_34]
push    eax
mov     ecx, esi
call    sub_40af30
lea     eax, [ebp+var_24]
push    eax
lea     eax, [ebx+14h]
mov     ecx, eax
call    sub_40ab50
push    dword ptr [edi+0ch]
mov     ecx, ebx
call    sub_40b4a0
test    al, al
jz      short loc_40c27d
cmp     byte ptr [ebx+6ch], 0
jz      loc_40c30d
mov     eax, [ebx]
mov     esi, eax
sub     esi, [ebp+var_38]
cmp     [ebp+var_18], esi
jge     short loc_40c273
lea     ecx, [ebx+4]
mov     [ebp+var_58], eax
mov     eax, [ecx+0ch]
push    ecx
lea     ecx, [ebp+var_54]
mov     [ebp+var_48], eax
call    sub_40af30
lea     eax, [ebx+14h]
push    eax
lea     ecx, [ebp+block]
call    sub_40ab50
mov     [ebp+var_18], esi
mov     al, 1
mov     [ebp+var_11], al
lea     esi, [ebx+4]
jmp     short loc_40c280
mov     al, [ebp+var_11]
mov     edi, [edi+18h]
test    edi, edi
jnz     short loc_40c207
test    al, al
lea     ecx, [ebp+var_38]
lea     esi, [ebp+var_58]
cmovz   esi, ecx
lea     ecx, [ebx+4]
mov     eax, [esi]
lea     edx, [esi+4]
mov     [ebx], eax
mov     eax, [edx+0ch]
push    edx
mov     [ecx+0ch], eax
call    sub_40af30
lea     eax, [esi+14h]
push    eax
lea     ecx, [ebx+14h]
call    sub_40ab50
mov     bl, [ebp+var_11]
mov     eax, [ebp+block]
test    eax, eax
jz      short loc_40c2c7
push    eax
call    j__free
add     esp, 4
mov     eax, [ebp+var_54]
test    eax, eax
jz      short loc_40c2d7
push    eax
call    j__free
add     esp, 4
mov     eax, [ebp+var_24]
test    eax, eax
jz      short loc_40c2e7
push    eax
call    j__free
add     esp, 4
mov     eax, [ebp+var_34]
test    eax, eax
jz      short loc_40c2f7
push    eax
call    j__free
add     esp, 4
mov     al, bl
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     bl, 1
jmp     short loc_40c2b7
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40c320
mov     eax, large fs:0
push    eax
sub     esp, 30h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     esi, [ebp+arg_0]
cmp     dword ptr [esi+24h], 0
jge     short loc_40c383
mov     edx, [esi+0ch]
mov     eax, [edx+4]
cmp     eax, 13h
jz      short loc_40c375
mov     edi, edi
cmp     eax, 10h
jz      short loc_40c375
cmp     eax, 12h
jz      short loc_40c375
mov     edx, [edx+0ch]
mov     eax, [edx+4]
cmp     eax, 13h
jnz     short loc_40c360
xor     eax, eax
cmp     dword ptr [edx+4], 13h
setz    al
mov     [esi+24h], eax
test    eax, eax
jle     short loc_40c3a2
push    [ebp+arg_4]
push    esi
call    sub_40d5f0
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, [edi]
mov     [ebp+var_3c], eax
lea     eax, [edi+4]
push    eax
lea     ecx, [ebp+var_38]
xor     bl, bl
call    sub_40c0d0
mov     eax, [edi+10h]
mov     [ebp+var_2c], eax
lea     eax, [edi+14h]
push    eax
lea     ecx, [ebp+block]
mov     [ebp+var_4], 0
call    sub_40d0f0
mov     [ebp+var_4], 1
mov     eax, [edi+40h]
mov     ecx, [esi+20h]
mov     edx, [edi]
lea     ecx, [eax+ecx*8]
mov     [ebp+arg_0], ecx
mov     eax, [ecx]
mov     [ebp+var_1c], eax
mov     eax, [ecx+4]
mov     [ebp+var_18], eax
mov     eax, [ebp+arg_8]
mov     [ebp+var_14], edx
test    eax, eax
jz      short loc_40c406
mov     ecx, [ebp+var_18]
cmp     [ecx], edx
mov     ecx, [ebp+arg_0]
jnz     short loc_40c406
xor     bh, bh
jmp     short loc_40c408
mov     bh, 1
mov     edx, [esi+18h]
test    edx, edx
js      short loc_40c417
cmp     edx, eax
jle     loc_40c4e6
cmp     eax, [esi+14h]
jge     short loc_40c435
test    bh, bh
jz      loc_40c4e6
inc     eax
mov     [ecx], eax
lea     eax, [ebp+var_14]
mov     [ecx+4], eax
push    dword ptr [esi+0ch]
jmp     loc_40c4ec
cmp     byte ptr [ebp+arg_4], 0
jnz     short loc_40c491
mov     eax, [esi+1ch]
mov     ecx, edi
push    dword ptr [eax+0ch]
call    sub_40b4a0
mov     bl, al
test    bl, bl
jnz     loc_40c51c
test    bh, bh
jz      loc_40c4f9
mov     eax, [ebp+var_3c]
mov     ecx, [ebp+var_2c]
mov     [edi], eax
mov     [edi+10h], ecx
lea     ecx, [ebp+var_38]
push    ecx
lea     ecx, [edi+4]
call    sub_40af30
lea     eax, [ebp+block]
push    eax
lea     ecx, [edi+14h]
call    sub_40ab50
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
inc     eax
mov     [ecx], eax
lea     eax, [ebp+var_14]
mov     [ecx+4], eax
push    dword ptr [esi+0ch]
jmp     short loc_40c4ec
test    bh, bh
jz      short loc_40c4b3
inc     eax
mov     [ecx], eax
lea     eax, [ebp+var_14]
mov     [ecx+4], eax
push    dword ptr [esi+0ch]
mov     ecx, edi
call    sub_40b4a0
mov     bl, al
test    bl, bl
jnz     short loc_40c51c
mov     ecx, [ebp+arg_0]
jmp     short loc_40c4b8
cmp     eax, 1
jg      short loc_40c4f9
mov     eax, [ebp+var_1c]
mov     [ecx], eax
mov     eax, [ebp+var_18]
mov     [ecx+4], eax
mov     eax, [ebp+var_3c]
mov     ecx, [ebp+var_2c]
mov     [edi], eax
mov     [edi+10h], ecx
lea     ecx, [ebp+var_38]
push    ecx
lea     ecx, [edi+4]
call    sub_40af30
lea     eax, [ebp+block]
push    eax
lea     ecx, [edi+14h]
call    sub_40ab50
mov     eax, [esi+1ch]
push    dword ptr [eax+0ch]
mov     ecx, edi
call    sub_40b4a0
mov     bl, al
test    bl, bl
jnz     short loc_40c51c
mov     eax, [ebp+var_3c]
mov     ecx, [ebp+var_2c]
mov     [edi], eax
mov     [edi+10h], ecx
lea     ecx, [ebp+var_38]
push    ecx
lea     ecx, [edi+4]
call    sub_40af30
lea     eax, [ebp+block]
push    eax
lea     ecx, [edi+14h]
call    sub_40ab50
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_1c]
mov     [eax], ecx
mov     ecx, [ebp+var_18]
mov     [eax+4], ecx
mov     eax, [ebp+block]
test    eax, eax
jz      short loc_40c53a
push    eax
call    j__free
add     esp, 4
mov     eax, [ebp+var_38]
test    eax, eax
jz      short loc_40c54a
push    eax
call    j__free
add     esp, 4
mov     al, bl
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40c560
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
test    dword ptr [esi+5ch], 100h
mov     eax, [esi]
mov     bl, [eax]
mov     byte ptr [ebp+var_14], bl
jz      short loc_40c5f2
mov     edi, [esi+70h]
cmp     dword ptr [edi+4], 0
jnz     short loc_40c5e0
lea     eax, [ebp+var_18]
push    eax
mov     ecx, edi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_18]
add     esp, 4
mov     [edi+4], eax
test    ecx, ecx
jz      short loc_40c5e0
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40c5e0
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [edi+4]
push    [ebp+var_14]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
mov     bl, al
mov     byte ptr [ebp+var_14], bl
mov     eax, [esi]
mov     edi, [ebp+arg_0]
lea     ecx, [eax+1]
mov     [ebp+var_10], ecx
mov     ecx, [edi+14h]
test    ecx, ecx
jz      short loc_40c61f
mov     edx, [esi+50h]
push    ecx
mov     ecx, eax
call    sub_40d840
add     esp, 4
cmp     eax, [esi]
jz      short loc_40c61f
mov     edx, eax
mov     cl, 1
jmp     loc_40c705
cmp     dword ptr [edi+20h], 0
jz      short loc_40c66a
test    dword ptr [esi+5ch], 800h
jz      short loc_40c63e
push    [ebp+var_14]
mov     ecx, [esi+70h]
call    sub_40cf30
movsx   ecx, al
jmp     short loc_40c641
movsx   ecx, bl
mov     edx, [edi+20h]
xor     eax, eax
mov     [ebp+var_1c], edx
cmp     [edx+4], eax
jle     short loc_40c66a
mov     edx, [edx+8]
cmp     [edx+eax], cl
jg      short loc_40c65c
cmp     cl, [edx+eax+1]
jle     short loc_40c698
mov     edi, [ebp+var_1c]
add     eax, 2
cmp     eax, [edi+4]
mov     edi, [ebp+arg_0]
jl      short loc_40c651
movsx   edx, bl
cmp     dword_43d194, edx
jg      short loc_40c69c
cmp     edx, 100h
jge     short loc_40c69c
mov     ebx, [edi+18h]
test    ebx, ebx
jz      short loc_40c700
mov     ecx, edx
and     ecx, 7
mov     eax, 1
shl     eax, cl
shr     edx, 3
test    [edx+ebx], al
jz      short loc_40c700
mov     cl, 1
jmp     short loc_40c702
mov     edx, [edi+1ch]
test    edx, edx
jz      short loc_40c6c7
mov     ecx, [edx+8]
mov     eax, [edx+4]
add     eax, ecx
cmp     ecx, eax
jz      short loc_40c6b9
nop
cmp     [ecx], bl
jz      short loc_40c6b9
inc     ecx
cmp     ecx, eax
jnz     short loc_40c6b0
mov     eax, [edx+8]
add     eax, [edx+4]
cmp     ecx, eax
jz      short loc_40c6c7
mov     cl, 1
jmp     short loc_40c702
movzx   eax, word ptr [edi+24h]
test    ax, ax
jz      short loc_40c6e4
mov     ecx, [esi+70h]
push    eax
push    [ebp+var_14]
call    sub_40d000
test    al, al
jz      short loc_40c6e4
mov     cl, 1
jmp     short loc_40c702
mov     edx, [edi+28h]
test    edx, edx
jz      short loc_40c700
push    dword ptr [esi+70h]
mov     cl, bl
call    sub_40d8b0
add     esp, 4
test    al, al
jz      short loc_40c700
mov     cl, 1
jmp     short loc_40c702
xor     cl, cl
mov     edx, [ebp+var_10]
mov     eax, [edi+8]
and     eax, 1
cmp     cl, al
jnz     short loc_40c725
xor     al, al
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     [esi], edx
mov     al, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebx
mov     ebx, ecx
xor     eax, eax
push    esi
push    edi
cmp     [ebx+68h], eax
jle     loc_40c7e5
mov     edx, [ebx+24h]
test    eax, eax
jns     short loc_40c772
mov     ecx, eax
neg     ecx
jz      short loc_40c772
or      ecx, 0ffffffffh
sub     ecx, eax
shr     ecx, 5
mov     edi, edx
lea     ecx, ds:4[ecx*4]
sub     edi, ecx
jmp     short loc_40c77a
mov     ecx, eax
shr     ecx, 5
lea     edi, [edx+ecx*4]
mov     esi, eax
and     esi, 1fh
mov     ecx, esi
mov     edx, 1
shl     edx, cl
test    [edi], edx
jz      short loc_40c7db
mov     edi, [ebx+4]
test    eax, eax
jns     short loc_40c7ac
mov     ecx, eax
neg     ecx
jz      short loc_40c7ac
or      ecx, 0ffffffffh
sub     ecx, eax
shr     ecx, 5
lea     ecx, ds:4[ecx*4]
sub     edi, ecx
jmp     short loc_40c7b4
mov     edx, eax
shr     edx, 5
lea     edi, [edi+edx*4]
mov     edx, 1
mov     ecx, esi
shl     edx, cl
test    [edi], edx
jz      short loc_40c7db
mov     ecx, [ebx+34h]
lea     edx, [ecx+eax*8]
mov     ecx, [ebx+14h]
lea     esi, [ecx+eax*8]
mov     ecx, [edx]
cmp     ecx, [esi]
jnz     short loc_40c811
mov     ecx, [edx+4]
cmp     ecx, [esi+4]
jnz     short loc_40c7eb
inc     eax
cmp     eax, [ebx+68h]
jl      loc_40c750
xor     al, al
pop     edi
pop     esi
pop     ebx
retn
lea     ecx, ds:0[eax*8]
mov     eax, [ebx+34h]
mov     esi, [eax+ecx+4]
mov     eax, [ebx+14h]
sub     esi, [ebx+4ch]
mov     ecx, [eax+ecx+4]
sub     ecx, [ebx+4ch]
xor     eax, eax
cmp     esi, ecx
setl    al
pop     edi
pop     esi
pop     ebx
retn
lea     ecx, ds:0[eax*8]
mov     eax, [ebx+34h]
pop     edi
mov     esi, [eax+ecx]
mov     eax, [ebx+14h]
sub     esi, [ebx+4ch]
mov     ecx, [eax+ecx]
sub     ecx, [ebx+4ch]
xor     eax, eax
cmp     esi, ecx
pop     esi
setl    al
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_c]
push    [ebp+arg_10]
test    eax, 800h
jz      short loc_40c865
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_40db30
add     esp, 10h
pop     ecx
pop     ebp
retn
test    eax, 100h
jz      short loc_40c880
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_40dd10
add     esp, 10h
pop     ecx
pop     ebp
retn
mov     byte ptr [ebp+arg_c], 0
push    [ebp+arg_c]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_40de60
add     esp, 10h
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ecx+4ch]
cmp     eax, [ebp+arg_0]
jnz     short loc_40c8f2
mov     eax, [ecx]
mov     edx, [ecx+8]
cmp     eax, edx
jz      short loc_40c8e9
cmp     byte ptr [eax], 5ch
jnz     short loc_40c8e7
inc     eax
cmp     eax, edx
jz      short loc_40c8e7
mov     edx, [ecx+50h]
push    ebx
test    dl, 8
jnz     short loc_40c8d3
mov     bl, [eax]
cmp     bl, 28h
jz      short loc_40c8e4
cmp     bl, 29h
jz      short loc_40c8e4
test    dl, 10h
jnz     short loc_40c8e6
mov     dl, [eax]
cmp     dl, 7bh
jz      short loc_40c8e4
cmp     dl, 7dh
jnz     short loc_40c8e6
mov     [ecx], eax
pop     ebx
inc     dword ptr [ecx]
call    sub_40a510
pop     ebp
retn    8
push    [ebp+arg_4]
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    ecx
push    esi
mov     esi, ecx
push    edi
lea     ecx, [esi+24h]
call    sub_40e3c0
cmp     dword ptr [esi+4ch], 5eh
jnz     short loc_40c95d
mov     eax, [esi+28h]
xor     dword ptr [eax+8], 1
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40c956
cmp     byte ptr [eax], 5ch
jnz     short loc_40c954
inc     eax
cmp     eax, ecx
jz      short loc_40c954
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40c941
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40c952
cmp     dl, 29h
jz      short loc_40c952
test    cl, 10h
jnz     short loc_40c954
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40c952
cmp     cl, 7dh
jnz     short loc_40c954
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
test    dword ptr [esi+50h], 20000000h
jz      short loc_40c9c9
cmp     dword ptr [esi+4ch], 5dh
jnz     short loc_40c9c9
cmp     dword_43d190, 5dh
push    5dh
lea     ecx, [esi+24h]
jg      short loc_40c981
call    sub_40f3c0
jmp     short loc_40c986
call    sub_40f4b0
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40c9c2
cmp     byte ptr [eax], 5ch
jnz     short loc_40c9c0
inc     eax
cmp     eax, ecx
jz      short loc_40c9c0
mov     edx, [esi+50h]
test    dl, 8
jnz     short loc_40c9ad
mov     cl, [eax]
cmp     cl, 28h
jz      short loc_40c9be
cmp     cl, 29h
jz      short loc_40c9be
test    dl, 10h
jnz     short loc_40c9c0
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40c9be
cmp     cl, 7dh
jnz     short loc_40c9c0
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
mov     ecx, esi
call    sub_40dfa0
pop     edi
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
mov     esi, ecx
push    edi
test    dword ptr [esi+50h], 100h
jz      short loc_40ca57
push    7fffffffh
push    0ah
call    sub_40eb70
cmp     eax, 7fffffffh
jz      short loc_40ca57
mov     edi, [esi+44h]
test    edi, edi
jnz     short loc_40ca18
test    dword ptr [esi+50h], 100000h
jnz     short loc_40ca62
jmp     short loc_40ca8d
test    dword ptr [esi+50h], 200h
jz      short loc_40ca26
cmp     edi, 9
jg      short loc_40ca94
cmp     [esi+0ch], edi
jl      short loc_40ca94
push    edi
lea     eax, [ebp+var_8]
push    eax
lea     ecx, [esi+14h]
call    sub_40aaf0
mov     ecx, [eax+4]
mov     eax, [eax]
mov     edx, 1
shl     edx, cl
test    [eax], edx
jz      short loc_40ca94
push    edi
lea     ecx, [esi+24h]
call    sub_40e450
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, esi
call    sub_40e130
test    al, al
jz      short loc_40ca75
movzx   eax, byte ptr [esi+44h]
push    eax
lea     ecx, [esi+24h]
call    sub_40cda0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
test    dword ptr [esi+50h], 20000h
jz      short loc_40ca9b
push    1
mov     ecx, esi
call    sub_40ded0
test    al, al
jnz     short loc_40ca51
jmp     short loc_40ca9b
push    2
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    3
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    2
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    ecx
push    esi
mov     esi, ecx
push    edi
mov     eax, [esi+50h]
inc     dword ptr [esi+10h]
test    eax, 8000000h
jnz     short loc_40cac8
cmp     dword ptr [esi+4ch], 29h
jz      short loc_40cb3b
test    al, 20h
jz      short loc_40cb24
cmp     dword ptr [esi+4ch], 3fh
jnz     short loc_40cb24
call    sub_40b9e0
mov     edi, [esi+4ch]
mov     ecx, esi
call    sub_40b9e0
cmp     edi, 3ah
jnz     short loc_40caf6
mov     ecx, esi
call    sub_40e310
dec     dword ptr [esi+10h]
mov     al, 1
pop     edi
pop     esi
pop     ecx
retn
cmp     edi, 21h
jnz     short loc_40cb0d
push    1
mov     ecx, esi
call    sub_40e390
dec     dword ptr [esi+10h]
xor     al, al
pop     edi
pop     esi
pop     ecx
retn
cmp     edi, 3dh
jnz     short loc_40cb42
push    0
mov     ecx, esi
call    sub_40e390
dec     dword ptr [esi+10h]
xor     al, al
pop     edi
pop     esi
pop     ecx
retn
test    dword ptr [esi+40h], 200h
jnz     short loc_40cae8
call    sub_40e280
dec     dword ptr [esi+10h]
pop     edi
mov     al, 1
pop     esi
pop     ecx
retn
push    5
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    0eh
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     eax, [esi+4ch]
xor     ebx, ebx
or      edi, 0ffffffffh
cmp     eax, 2ah
jz      short loc_40cb6a
cmp     eax, 2bh
jnz     short loc_40cbe2
lea     ebx, [edi+2]
mov     eax, [esi+28h]
or      dword ptr [eax+8], 4
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40cbad
cmp     byte ptr [eax], 5ch
jnz     short loc_40cbab
inc     eax
cmp     eax, ecx
jz      short loc_40cbab
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40cb98
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40cba9
cmp     dl, 29h
jz      short loc_40cba9
test    cl, 10h
jnz     short loc_40cbab
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40cba9
cmp     cl, 7dh
jnz     short loc_40cbab
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
test    dword ptr [esi+50h], 400h
jz      loc_40cc4f
cmp     dword ptr [esi+4ch], 3fh
jnz     loc_40cc4f
mov     ecx, esi
call    sub_40b9e0
push    0
push    edi
push    ebx
lea     ecx, [esi+24h]
call    sub_40e4c0
pop     edi
pop     esi
pop     ebx
retn
cmp     eax, 3fh
jnz     short loc_40cbef
lea     edi, [eax-3eh]
jmp     loc_40cb6a
cmp     eax, 7bh
jnz     short loc_40cc5b
call    sub_40b9e0
push    7fffffffh
push    0ah
mov     ecx, esi
call    sub_40eb70
cmp     eax, 7fffffffh
jz      short loc_40cc5f
cmp     dword ptr [esi+4ch], 2ch
mov     ebx, [esi+44h]
jz      short loc_40cc1b
mov     edi, ebx
jmp     short loc_40cc36
mov     ecx, esi
call    sub_40b9e0
cmp     dword ptr [esi+4ch], 7dh
jz      short loc_40cc3c
mov     ecx, esi
call    sub_40deb0
test    al, al
jz      short loc_40cc66
mov     edi, [esi+44h]
cmp     dword ptr [esi+4ch], 7dh
jnz     short loc_40cc6d
cmp     edi, 0ffffffffh
jz      loc_40cb6a
cmp     edi, ebx
jge     loc_40cb6a
jmp     short loc_40cc6d
push    1
push    edi
push    ebx
lea     ecx, [esi+24h]
call    sub_40e4c0
pop     edi
pop     esi
pop     ebx
retn
push    7
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    7
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    7
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    esi
push    14h
mov     esi, ecx
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
test    edx, edx
jz      short loc_40ccb7
mov     dword ptr [edx], offset ??_7_node_base@std@@6b@
mov     dword ptr [edx+4], 2
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     dword ptr [edx+10h], 0
jmp     short loc_40ccb9
xor     edx, edx
mov     eax, [esi+4]
mov     [edx+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40ccd5
mov     [edx+0ch], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
mov     [eax+10h], edx
mov     eax, [esi+4]
mov     [eax+0ch], edx
mov     [esi+4], edx
pop     esi
retn
push    esi
push    14h
mov     esi, ecx
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
test    edx, edx
jz      short loc_40cd17
mov     dword ptr [edx], offset ??_7_node_base@std@@6b@
mov     dword ptr [edx+4], 3
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     dword ptr [edx+10h], 0
jmp     short loc_40cd19
xor     edx, edx
mov     eax, [esi+4]
mov     [edx+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40cd35
mov     [edx+0ch], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
mov     [eax+10h], edx
mov     eax, [esi+4]
mov     [eax+0ch], edx
mov     [esi+4], edx
pop     esi
retn
push    esi
push    14h
mov     esi, ecx
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
test    edx, edx
jz      short loc_40cd77
mov     dword ptr [edx], offset ??_7_node_base@std@@6b@
mov     dword ptr [edx+4], 4
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     dword ptr [edx+10h], 0
jmp     short loc_40cd79
xor     edx, edx
mov     eax, [esi+4]
mov     [edx+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40cd95
mov     [edx+0ch], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
mov     [eax+10h], edx
mov     eax, [esi+4]
mov     [eax+0ch], edx
mov     [esi+4], edx
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40cda0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     eax, [esi+4]
cmp     dword ptr [eax+4], 6
jnz     short loc_40cdd9
test    byte ptr [eax+8], 4
jz      short loc_40cdde
call    sub_40e600
mov     eax, [esi+8]
test    eax, 100h
jz      short loc_40ce3f
mov     edi, [esi+0ch]
cmp     dword ptr [edi+4], 0
jnz     short loc_40ce2e
lea     eax, [ebp+var_10]
push    eax
mov     ecx, edi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_10]
add     esp, 4
mov     [edi+4], eax
test    ecx, ecx
jz      short loc_40ce2e
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40ce2e
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [edi+4]
push    [ebp+arg_0]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
mov     bl, al
jmp     short loc_40ce58
test    eax, 800h
jz      short loc_40ce55
push    [ebp+arg_0]
mov     ecx, [esi+0ch]
call    sub_40cf30
mov     bl, al
jmp     short loc_40ce58
mov     bl, byte ptr [ebp+arg_0]
mov     esi, [esi+4]
mov     eax, [esi+18h]
cmp     [esi+14h], eax
ja      short loc_40ce81
lea     edi, [eax+10h]
push    edi
push    dword ptr [esi+1ch]
call    _realloc
add     esp, 8
test    eax, eax
jnz     short loc_40ce7b
call    unknown_libname_5
mov     [esi+1ch], eax
mov     [esi+14h], edi
mov     eax, [esi+18h]
mov     ecx, [esi+1ch]
mov     [ecx+eax], bl
inc     dword ptr [esi+18h]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
cmp     esi, edx
jz      short loc_40ced8
lea     ecx, [ecx+0]
test    eax, eax
jz      short loc_40cece
mov     ecx, [esi]
mov     [eax], ecx
mov     ecx, [esi+4]
mov     [eax+4], ecx
add     esi, 8
add     eax, 8
cmp     esi, edx
jnz     short loc_40cec0
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_4]
lea     esp, [esp+0]
cmp     edx, [ebp+arg_8]
jnz     short loc_40cefa
cmp     ecx, [ebp+arg_c]
jz      short loc_40cf2c
mov     eax, 1
shl     eax, cl
cmp     byte ptr [esi], 0
jz      short loc_40cf0a
or      [edx], eax
jmp     short loc_40cf0e
not     eax
and     [edx], eax
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
cmp     ecx, 1fh
jnb     short loc_40cf1f
inc     ecx
mov     [ebp+arg_4], ecx
jmp     short loc_40cef0
xor     ecx, ecx
add     edx, 4
mov     [ebp+arg_4], ecx
mov     [ebp+arg_0], edx
jmp     short loc_40cef0
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40cf30
mov     eax, large fs:0
push    eax
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
cmp     dword ptr [esi], 0
jnz     short loc_40cf9b
lea     eax, [ebp+var_30]
push    eax
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_40e790
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_30]
add     esp, 4
mov     [esi], eax
test    ecx, ecx
jz      short loc_40cf9b
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40cf9b
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [esi]
lea     eax, [ebp+arg_0+1]
push    eax
lea     eax, [ebp+arg_0]
push    eax
lea     eax, [ebp+block]
push    eax
call    sub_40d2e0
cmp     [ebp+var_1c], 1
mov     ecx, [ebp+var_18]
mov     edx, [ebp+block]
jnz     short loc_40cfc7
lea     eax, [ebp+block]
cmp     ecx, 10h
cmovnb  eax, edx
mov     bl, [eax]
jmp     short loc_40cfca
mov     bl, byte ptr [ebp+arg_0]
cmp     ecx, 10h
jb      short loc_40cfd8
push    edx
call    j__free
add     esp, 4
mov     al, bl
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40d000
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     di, word ptr [ebp+arg_4]
cmp     di, 0ffffh
jz      short loc_40d09c
cmp     dword ptr [esi+4], 0
jnz     short loc_40d072
lea     eax, [ebp+arg_4]
push    eax
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+arg_4]
add     esp, 4
mov     [esi+4], eax
test    ecx, ecx
jz      short loc_40d072
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40d072
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     eax, [esi+4]
movzx   ecx, byte ptr [ebp+arg_0]
mov     eax, [eax+0ch]
test    [eax+ecx*2], di
mov     eax, 0
setnz   al
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     bl, byte ptr [ebp+arg_0]
cmp     bl, 5fh
jz      short loc_40d0d0
call    sub_40d260
mov     eax, [eax+0ch]
movzx   ecx, bl
mov     edx, 107h
test    [eax+ecx*2], dx
jnz     short loc_40d0d0
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
push    edi
mov     edi, [ebp+arg_0]
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
mov     eax, [edi+4]
sub     eax, [edi]
mov     dword ptr [esi], 0
sar     eax, 3
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
test    eax, eax
jz      short loc_40d16b
cmp     eax, 1fffffffh
ja      short loc_40d173
push    ebx
lea     ebx, ds:0[eax*8]
push    ebx
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40d17d
push    [ebp+arg_0]
lea     ecx, [ebx+eax]
mov     [esi+8], ecx
mov     [esi], eax
mov     [esi+4], eax
push    dword ptr [edi+4]
mov     ecx, eax
push    dword ptr [edi]
call    sub_40f8d0
add     esp, 0ch
mov     [esi+4], eax
pop     ebx
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    offset avectorttoolong
call    ?_xlength_error@std@@yaxpbd@z
call    unknown_libname_5
push    ebx
mov     ebx, ecx
push    esi
push    edi
mov     edi, [ebx+14h]
mov     dword ptr [ebx], offset ??_7?$_node_class@dv?$regex_traits@d@std@@@std@@6b@
test    edi, edi
jz      short loc_40d1bc
mov     esi, edi
mov     edi, [edi+10h]
push    dword ptr [esi+0ch]
call    _free
push    esi
call    j__free
add     esp, 8
test    edi, edi
jnz     short loc_40d1a2
push    dword ptr [ebx+18h]
call    j__free
mov     esi, [ebx+1ch]
add     esp, 4
test    esi, esi
jz      short loc_40d1df
push    dword ptr [esi+8]
call    _free
push    esi
call    j__free
add     esp, 8
mov     esi, [ebx+20h]
test    esi, esi
jz      short loc_40d1f7
push    dword ptr [esi+8]
call    _free
push    esi
call    j__free
add     esp, 8
mov     edi, [ebx+28h]
test    edi, edi
jz      short loc_40d21a
mov     edi, edi
mov     esi, edi
mov     edi, [edi+10h]
push    dword ptr [esi+0ch]
call    _free
push    esi
call    j__free
add     esp, 8
test    edi, edi
jnz     short loc_40d200
pop     edi
pop     esi
mov     dword ptr [ebx], offset ??_7_node_base@std@@6b@
pop     ebx
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_40d190
test    [ebp+arg_0], 1
jz      short loc_40d24a
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40d260
mov     eax, large fs:0
push    eax
push    ecx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
cmp     dword ptr [esi+4], 0
jnz     short loc_40d2c7
lea     eax, [ebp+var_10]
push    eax
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_10]
add     esp, 4
mov     [esi+4], eax
test    ecx, ecx
jz      short loc_40d2ca
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40d2c7
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     eax, [esi+4]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    [ebp+arg_8]
mov     eax, [ecx]
push    [ebp+arg_4]
mov     [ebp+var_4], 0
push    [ebp+arg_0]
call    dword ptr [eax+10h]
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
lea     eax, [ecx+8]
push    eax
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    __strcoll
mov     ecx, eax
add     esp, 14h
test    ecx, ecx
jns     short loc_40d338
or      eax, 0ffffffffh
pop     ebp
retn    10h
xor     eax, eax
test    ecx, ecx
setnz   al
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40d350
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], 0
mov     esi, [ebp+arg_0]
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
mov     ebx, [ebp+arg_8]
mov     eax, ebx
mov     [ebp+var_4], 0
mov     [ebp+var_10], 1
sub     eax, [ebp+arg_4]
jz      short loc_40d415
add     ecx, 8
mov     [ebp+arg_8], ecx
nop
mov     ecx, [esi+10h]
cmp     eax, ecx
ja      short loc_40d3d0
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], eax
jb      short loc_40d3c8
mov     ecx, [esi]
mov     byte ptr [ecx+eax], 0
jmp     short loc_40d3dc
mov     ecx, esi
mov     byte ptr [ecx+eax], 0
jmp     short loc_40d3dc
sub     eax, ecx
push    0
push    eax
mov     ecx, esi
call    sub_40d500
mov     eax, [esi+14h]
cmp     eax, 10h
jb      short loc_40d3e8
mov     edx, [esi]
jmp     short loc_40d3ea
mov     edx, esi
mov     edi, [esi+10h]
cmp     eax, 10h
jb      short loc_40d3f6
mov     ecx, [esi]
jmp     short loc_40d3f8
mov     ecx, esi
push    [ebp+arg_8]
lea     eax, [edx+edi]
push    ebx
push    [ebp+arg_4]
push    eax
push    ecx
call    __strxfrm
add     esp, 14h
cmp     eax, [esi+10h]
jbe     short loc_40d415
test    eax, eax
jnz     short loc_40d3b0
mov     ecx, [esi+10h]
cmp     eax, ecx
ja      short loc_40d435
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], eax
jb      short loc_40d42d
mov     ecx, [esi]
mov     byte ptr [ecx+eax], 0
jmp     short loc_40d441
mov     ecx, esi
mov     byte ptr [ecx+eax], 0
jmp     short loc_40d441
sub     eax, ecx
push    0
push    eax
mov     ecx, esi
call    sub_40d500
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [ebp+arg_0]
mov     edx, 811c9dc5h
mov     ecx, 0
sub     esi, edi
jz      short loc_40d491
lea     esp, [esp+0]
movzx   eax, byte ptr [ecx+edi]
xor     edx, eax
inc     ecx
imul    edx, 1000193h
cmp     ecx, esi
jb      short loc_40d480
pop     edi
mov     eax, edx
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
push    dword ptr [esi+0ch]
mov     dword ptr [esi], offset ??_7?$collate@d@std@@6b@
call    _free
add     esp, 4
test    [ebp+arg_0], 1
mov     dword ptr [esi], offset ??_7_facet_base@std@@6b@
jz      short loc_40d4cc
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ecx+8]
push    esi
mov     esi, [ebp+arg_0]
mov     [esi], ecx
mov     edx, [ecx]
call    dword ptr [edx+4]
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+size]
push    esi
mov     esi, ecx
or      eax, 0ffffffffh
mov     ecx, [esi+10h]
sub     eax, ecx
cmp     eax, ebx
jbe     loc_40d5d4
test    ebx, ebx
jz      loc_40d5cc
push    edi
lea     edi, [ecx+ebx]
cmp     edi, 0fffffffeh
ja      loc_40d5de
mov     eax, [esi+14h]
cmp     eax, edi
jnb     short loc_40d55f
push    ecx
push    edi
mov     ecx, esi
call    sub_408fb0
test    edi, edi
jz      loc_40d5cb
mov     edx, [esi+10h]
cmp     ebx, 1
jnz     short loc_40d58f
cmp     dword ptr [esi+14h], 10h
jb      short loc_40d585
mov     ecx, [esi]
mov     al, [ebp+arg_4]
mov     [ecx+edx], al
jmp     short loc_40d5ad
test    edi, edi
jnz     short loc_40d547
mov     [esi+10h], edi
cmp     eax, 10h
jb      short loc_40d579
mov     eax, [esi]
pop     edi
mov     byte ptr [eax], 0
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
pop     edi
mov     eax, esi
pop     esi
mov     byte ptr [eax], 0
pop     ebx
pop     ebp
retn    8
mov     al, [ebp+arg_4]
mov     ecx, esi
mov     [ecx+edx], al
jmp     short loc_40d5ad
cmp     dword ptr [esi+14h], 10h
jb      short loc_40d599
mov     ecx, [esi]
jmp     short loc_40d59b
mov     ecx, esi
movsx   eax, [ebp+arg_4]
push    ebx
push    eax
lea     eax, [ecx+edx]
push    eax
call    _memset
add     esp, 0ch
cmp     dword ptr [esi+14h], 10h
mov     [esi+10h], edi
jb      short loc_40d5c5
mov     eax, [esi]
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
mov     eax, esi
mov     byte ptr [eax+edi], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    offset astringtoolong
call    ?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40d5f0
mov     eax, large fs:0
push    eax
sub     esp, 4ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     eax, [edi]
lea     ebx, [edi+4]
push    ebx
lea     ecx, [ebp+var_50]
xor     esi, esi
mov     [ebp+var_54], eax
call    sub_40c0d0
mov     eax, [ebx+0ch]
mov     [ebp+var_44], eax
lea     eax, [edi+14h]
push    eax
lea     ecx, [ebp+var_40]
mov     [ebp+var_4], esi
call    sub_40d0f0
mov     ebx, [ebp+arg_0]
mov     [ebp+var_4], 1
cmp     [ebx+14h], esi
jle     short loc_40d679
mov     eax, [edi]
push    dword ptr [ebx+0ch]
mov     ecx, edi
mov     [ebp+arg_0], eax
call    sub_40b4a0
test    al, al
jz      loc_40d782
mov     eax, [ebp+arg_0]
cmp     eax, [edi]
jnz     short loc_40d673
mov     esi, [ebx+14h]
dec     esi
inc     esi
cmp     esi, [ebx+14h]
jl      short loc_40d651
mov     eax, [edi]
mov     [ebp+var_34], eax
lea     eax, [edi+4]
push    eax
lea     ecx, [ebp+var_30]
call    sub_40c0d0
mov     eax, [edi+10h]
mov     [ebp+var_24], eax
lea     eax, [edi+14h]
push    eax
lea     ecx, [ebp+block]
mov     byte ptr [ebp+var_4], 2
call    sub_40d0f0
xor     al, al
mov     byte ptr [ebp+var_4], 3
mov     ecx, [edi]
mov     byte ptr [ebp+arg_0+3], al
mov     eax, [ebx+1ch]
mov     [ebp+var_10], ecx
push    dword ptr [eax+0ch]
mov     ecx, edi
call    sub_40b4a0
test    al, al
jz      short loc_40d6f0
cmp     [ebp+arg_4], 0
jz      loc_40d7a9
mov     eax, [edi]
lea     ecx, [edi+4]
mov     [ebp+var_34], eax
mov     eax, [ecx+0ch]
push    ecx
lea     ecx, [ebp+var_30]
mov     [ebp+var_24], eax
call    sub_40af30
lea     eax, [edi+14h]
push    eax
lea     ecx, [ebp+block]
call    sub_40ab50
mov     byte ptr [ebp+arg_0+3], 1
mov     eax, [ebp+var_10]
mov     ecx, [ebx+18h]
cmp     ecx, 0ffffffffh
jz      short loc_40d709
mov     eax, esi
inc     esi
cmp     eax, ecx
jge     loc_40d7ad
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_44]
mov     [edi], eax
mov     [edi+10h], ecx
lea     ecx, [ebp+var_50]
push    ecx
lea     ecx, [edi+4]
call    sub_40af30
push    dword ptr [ebx+0ch]
mov     ecx, edi
call    sub_40b4a0
test    al, al
jz      loc_40d7ad
mov     eax, [edi]
mov     [ebp+var_14], eax
mov     eax, [ebx+1ch]
mov     ecx, edi
push    dword ptr [eax+0ch]
call    sub_40b4a0
test    al, al
jz      short loc_40d772
cmp     [ebp+arg_4], 0
jz      short loc_40d7a9
mov     eax, [edi]
lea     ecx, [edi+4]
mov     [ebp+var_34], eax
mov     eax, [ecx+0ch]
push    ecx
lea     ecx, [ebp+var_30]
mov     [ebp+var_24], eax
call    sub_40af30
lea     eax, [edi+14h]
push    eax
lea     ecx, [ebp+block]
call    sub_40ab50
mov     byte ptr [ebp+arg_0+3], 1
mov     eax, [ebp+var_14]
cmp     [ebp+var_10], eax
jz      short loc_40d7ad
mov     [ebp+var_10], eax
jmp     loc_40d6f3
mov     eax, [ebp+var_54]
mov     [edi], eax
mov     eax, [ebp+var_44]
lea     ecx, [edi+4]
mov     [ecx+0ch], eax
lea     eax, [ebp+var_50]
push    eax
call    sub_40af30
lea     eax, [ebp+var_40]
push    eax
lea     ecx, [edi+14h]
call    sub_40ab50
xor     bl, bl
jmp     short loc_40d7fd
mov     bl, 1
jmp     short loc_40d7dd
mov     bl, byte ptr [ebp+arg_0+3]
lea     eax, [ebp+var_54]
lea     esi, [ebp+var_34]
test    bl, bl
cmovz   esi, eax
mov     eax, [esi]
lea     ecx, [esi+4]
mov     [edi], eax
mov     eax, [ecx+0ch]
push    ecx
lea     ecx, [edi+4]
mov     [edi+10h], eax
call    sub_40af30
lea     eax, [esi+14h]
push    eax
lea     ecx, [edi+14h]
call    sub_40ab50
mov     eax, [ebp+block]
test    eax, eax
jz      short loc_40d7ed
push    eax
call    j__free
add     esp, 4
mov     eax, [ebp+var_30]
test    eax, eax
jz      short loc_40d7fd
push    eax
call    j__free
add     esp, 4
mov     eax, [ebp+var_40]
test    eax, eax
jz      short loc_40d80d
push    eax
call    j__free
add     esp, 4
mov     eax, [ebp+var_50]
test    eax, eax
jz      short loc_40d81d
push    eax
call    j__free
add     esp, 4
mov     al, bl
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
push    ebx
mov     [ebp+var_8], edx
push    esi
mov     edx, ecx
push    edi
mov     [ebp+var_c], edx
test    eax, eax
jz      short loc_40d8a0
mov     ecx, [eax+8]
xor     ebx, ebx
mov     [ebp+var_4], ecx
test    ecx, ecx
jle     short loc_40d896
mov     edi, [eax]
mov     esi, edx
xor     edx, edx
test    edi, edi
jz      short loc_40d886
mov     eax, [eax+0ch]
add     eax, ebx
mov     cl, [esi]
inc     esi
cmp     cl, [eax]
jnz     short loc_40d880
inc     edx
inc     eax
cmp     edx, edi
jb      short loc_40d873
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
cmp     esi, edx
jz      short loc_40d8a0
mov     edx, [ebp+var_c]
add     ebx, edi
cmp     ebx, ecx
jl      short loc_40d866
mov     eax, [eax+10h]
mov     [ebp+arg_0], eax
test    eax, eax
jnz     short loc_40d858
pop     edi
pop     esi
mov     eax, edx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40d8b0
mov     eax, large fs:0
push    eax
sub     esp, 60h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, edx
mov     [ebp+var_64], edx
mov     edi, [ebp+arg_0]
mov     [ebp+var_68], edi
mov     [ebp+var_18], 0fh
mov     [ebp+var_1c], 0
mov     byte ptr [ebp+var_2c], 0
mov     [ebp+var_4], 0
mov     [ebp+var_30], 0fh
mov     byte ptr [ebp+var_44], cl
mov     [ebp+var_34], 1
mov     byte ptr [ebp+var_44+1], 0
lea     eax, [ebp+var_44+1]
push    eax
lea     eax, [ebp+var_44]
push    eax
lea     eax, [ebp+block]
push    eax
mov     ecx, edi
mov     byte ptr [ebp+var_4], 1
call    sub_40e9f0
push    eax
lea     ecx, [ebp+var_44]
call    sub_405600
cmp     [ebp+var_48], 10h
jb      short loc_40d945
push    [ebp+block]
call    j__free
add     esp, 4
test    ebx, ebx
jz      loc_40dac9
lea     ecx, [ecx+0]
xor     ecx, ecx
mov     [ebp+var_60], ecx
cmp     [ebx+8], ecx
jle     loc_40dabb
mov     edi, edi
mov     eax, [ebx+0ch]
push    dword ptr [ebx]
add     eax, ecx
push    eax
lea     ecx, [ebp+var_2c]
call    sub_408010
cmp     [ebp+var_18], 10h
mov     eax, [ebp+var_1c]
lea     ecx, [ebp+var_2c]
cmovnb  ecx, [ebp+var_2c]
add     eax, ecx
cmp     [ebp+var_18], 10h
push    eax
lea     ecx, [ebp+var_2c]
cmovnb  ecx, [ebp+var_2c]
push    ecx
lea     eax, [ebp+block]
push    eax
mov     ecx, edi
call    sub_40e9f0
mov     esi, eax
lea     eax, [ebp+var_2c]
cmp     eax, esi
jz      short loc_40da08
cmp     [ebp+var_18], 10h
jb      short loc_40d9b2
push    [ebp+var_2c]
call    j__free
add     esp, 4
mov     [ebp+var_18], 0fh
mov     [ebp+var_1c], 0
mov     byte ptr [ebp+var_2c], 0
cmp     dword ptr [esi+14h], 10h
jnb     short loc_40d9e0
mov     eax, [esi+10h]
inc     eax
jz      short loc_40d9eb
push    eax
lea     eax, [ebp+var_2c]
push    esi
push    eax
call    _memmove
add     esp, 0ch
jmp     short loc_40d9eb
mov     eax, [esi]
mov     [ebp+var_2c], eax
mov     dword ptr [esi], 0
mov     eax, [esi+10h]
mov     [ebp+var_1c], eax
mov     eax, [esi+14h]
mov     [ebp+var_18], eax
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     byte ptr [esi], 0
cmp     [ebp+var_48], 10h
jb      short loc_40da19
push    [ebp+block]
call    j__free
add     esp, 4
cmp     [ebp+var_30], 10h
mov     edi, [ebp+var_34]
mov     ebx, [ebp+var_1c]
lea     edx, [ebp+var_44]
cmovnb  edx, [ebp+var_44]
cmp     [ebp+var_18], 10h
lea     eax, [ebp+var_2c]
cmovnb  eax, [ebp+var_2c]
cmp     ebx, edi
mov     esi, edi
cmovb   esi, ebx
test    esi, esi
jz      short loc_40da95
sub     esi, 4
jb      short loc_40da56
mov     ecx, [eax]
cmp     ecx, [edx]
jnz     short loc_40da5b
add     eax, 4
add     edx, 4
sub     esi, 4
jnb     short loc_40da45
cmp     esi, 0fffffffch
jz      short loc_40da8f
mov     cl, [eax]
cmp     cl, [edx]
jnz     short loc_40da88
cmp     esi, 0fffffffdh
jz      short loc_40da8f
mov     cl, [eax+1]
cmp     cl, [edx+1]
jnz     short loc_40da88
cmp     esi, 0fffffffeh
jz      short loc_40da8f
mov     cl, [eax+2]
cmp     cl, [edx+2]
jnz     short loc_40da88
cmp     esi, 0ffffffffh
jz      short loc_40da8f
mov     al, [eax+3]
cmp     al, [edx+3]
jz      short loc_40da8f
sbb     eax, eax
or      eax, 1
jmp     short loc_40da91
xor     eax, eax
test    eax, eax
jnz     short loc_40daa4
cmp     ebx, edi
jb      short loc_40daa4
xor     eax, eax
cmp     ebx, edi
setnz   al
test    eax, eax
jz      short loc_40db1d
mov     ebx, [ebp+var_64]
mov     ecx, [ebp+var_60]
add     ecx, [ebx]
mov     edi, [ebp+var_68]
mov     [ebp+var_60], ecx
cmp     ecx, [ebx+8]
jl      loc_40d960
mov     ebx, [ebx+10h]
mov     [ebp+var_64], ebx
test    ebx, ebx
jnz     loc_40d950
xor     bl, bl
cmp     [ebp+var_30], 10h
jb      short loc_40dadc
push    [ebp+var_44]
call    j__free
add     esp, 4
cmp     [ebp+var_18], 10h
mov     [ebp+var_30], 0fh
mov     [ebp+var_34], 0
mov     byte ptr [ebp+var_44], 0
jb      short loc_40daff
push    [ebp+var_2c]
call    j__free
add     esp, 4
mov     al, bl
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     bl, 1
jmp     short loc_40dacb
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40db30
mov     eax, large fs:0
push    eax
sub     esp, 54h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, edx
mov     [ebp+var_5c], eax
mov     esi, ecx
mov     ebx, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     edx, esi
mov     [ebp+var_54], edx
cmp     esi, eax
jz      loc_40dcd5
cmp     ebx, ecx
jz      loc_40dce5
mov     al, [ebx]
mov     edi, [ebp+arg_8]
mov     [ebp+var_41], al
movzx   eax, byte ptr [esi]
mov     [ebp+var_4c], al
cmp     dword ptr [edi], 0
jnz     short loc_40dbcc
lea     eax, [ebp+var_58]
push    eax
mov     ecx, edi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_40e790
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_58]
add     esp, 4
mov     [edi], eax
test    ecx, ecx
jz      short loc_40dbcc
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40dbcc
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [edi]
lea     eax, [ebp+var_4b]
push    eax
lea     eax, [ebp+var_4c]
push    eax
lea     eax, [ebp+block]
push    eax
call    sub_40d2e0
cmp     [ebp+var_30], 1
mov     ecx, [ebp+var_2c]
mov     edx, [ebp+block]
jnz     short loc_40dbf8
lea     eax, [ebp+block]
cmp     ecx, 10h
cmovnb  eax, edx
mov     al, [eax]
jmp     short loc_40dbfb
mov     al, [ebp+var_4c]
mov     [ebp+var_4d], al
cmp     ecx, 10h
jb      short loc_40dc0c
push    edx
call    j__free
add     esp, 4
mov     al, [ebp+var_41]
mov     edi, [ebp+arg_8]
mov     [ebp+var_2c], 0fh
mov     [ebp+var_30], 0
mov     byte ptr [ebp+block], 0
mov     [ebp+var_48], al
cmp     dword ptr [edi], 0
jnz     short loc_40dc68
lea     eax, [ebp+var_60]
push    eax
mov     ecx, edi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 1
call    sub_40e790
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_60]
add     esp, 4
mov     [edi], eax
test    ecx, ecx
jz      short loc_40dc68
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40dc68
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [edi]
lea     eax, [ebp+var_47]
push    eax
lea     eax, [ebp+var_48]
push    eax
lea     eax, [ebp+var_28]
push    eax
call    sub_40d2e0
cmp     [ebp+var_18], 1
mov     ecx, [ebp+var_14]
mov     edx, [ebp+var_28]
jnz     short loc_40dc94
lea     eax, [ebp+var_28]
cmp     ecx, 10h
cmovnb  eax, edx
mov     al, [eax]
jmp     short loc_40dc97
mov     al, [ebp+var_48]
mov     [ebp+var_41], al
cmp     ecx, 10h
jb      short loc_40dca8
push    edx
call    j__free
add     esp, 4
mov     al, [ebp+var_4d]
inc     esi
inc     ebx
mov     [ebp+var_14], 0fh
mov     [ebp+var_18], 0
mov     byte ptr [ebp+var_28], 0
cmp     al, [ebp+var_41]
jnz     short loc_40dd03
mov     eax, [ebp+var_5c]
mov     ecx, [ebp+arg_4]
cmp     esi, eax
jnz     loc_40db75
mov     edx, [ebp+var_54]
cmp     ebx, ecx
jz      short loc_40dce5
cmp     [ebp+arg_c], 0
jz      short loc_40dce3
cmp     esi, eax
jz      short loc_40dce5
mov     esi, edx
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_54]
jmp     short loc_40dce7
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40dd10
mov     eax, large fs:0
push    eax
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, edx
mov     [ebp+var_28], eax
mov     edi, ecx
mov     ecx, [ebp+arg_4]
mov     ebx, [ebp+arg_0]
mov     edx, edi
mov     [ebp+var_14], edx
cmp     edi, eax
jz      loc_40de25
cmp     ebx, ecx
jz      loc_40de35
mov     al, [ebx]
mov     esi, [ebp+arg_8]
mov     byte ptr [ebp+var_24], al
cmp     dword ptr [esi+4], 0
mov     al, [edi]
mov     byte ptr [ebp+var_1c], al
jnz     short loc_40ddaa
lea     eax, [ebp+var_18]
push    eax
mov     ecx, esi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_18]
add     esp, 4
mov     [esi+4], eax
test    ecx, ecx
jz      short loc_40ddaa
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40ddaa
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [esi+4]
push    [ebp+var_1c]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
mov     esi, [ebp+arg_8]
mov     [ebp+var_d], al
cmp     dword ptr [esi+4], 0
jnz     short loc_40de00
lea     eax, [ebp+var_20]
push    eax
mov     ecx, esi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 1
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_20]
add     esp, 4
mov     [esi+4], eax
test    ecx, ecx
jz      short loc_40de00
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40de00
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [esi+4]
push    [ebp+var_24]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
inc     edi
inc     ebx
cmp     [ebp+var_d], al
jnz     short loc_40de49
mov     eax, [ebp+var_28]
mov     ecx, [ebp+arg_4]
cmp     edi, eax
jnz     loc_40dd52
mov     edx, [ebp+var_14]
cmp     ebx, ecx
jz      short loc_40de35
cmp     [ebp+arg_c], 0
jz      short loc_40de33
cmp     edi, eax
jz      short loc_40de35
mov     edi, edx
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, ecx
mov     eax, esi
push    edi
mov     edi, [ebp+arg_0]
mov     [ebp+var_4], eax
cmp     esi, edx
jz      short loc_40de8d
cmp     edi, ebx
jz      short loc_40de9d
mov     cl, [esi]
mov     al, [edi]
inc     esi
inc     edi
cmp     cl, al
jnz     short loc_40dea6
cmp     esi, edx
jnz     short loc_40de78
mov     eax, [ebp+var_4]
cmp     edi, ebx
jz      short loc_40de9d
cmp     [ebp+arg_c], 0
jz      short loc_40de9b
cmp     esi, edx
jz      short loc_40de9d
mov     esi, eax
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    7fffffffh
push    0ah
call    sub_40eb70
xor     ecx, ecx
cmp     eax, 7fffffffh
setnz   al
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, ecx
push    edi
mov     ecx, [esi]
cmp     ecx, [esi+8]
jz      loc_40df8c
mov     eax, [esi+40h]
and     eax, 100h
setnz   al
movzx   eax, al
push    eax
lea     eax, [ecx+1]
push    eax
push    ecx
mov     ecx, [esi+3ch]
call    sub_40efa0
movzx   edi, ax
test    di, di
jz      loc_40df8c
cmp     [ebp+arg_0], 0
jz      short loc_40df19
lea     ecx, [esi+24h]
call    sub_40e3c0
push    dword ptr [esi+30h]
push    edi
push    dword ptr [esi+28h]
call    sub_40f850
movzx   eax, byte ptr [esi+48h]
mov     ecx, [esi+3ch]
push    1
push    eax
call    sub_40d000
test    al, al
jz      short loc_40df3f
mov     eax, [esi+28h]
xor     dword ptr [eax+8], 1
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40df7b
cmp     byte ptr [eax], 5ch
jnz     short loc_40df79
inc     eax
cmp     eax, ecx
jz      short loc_40df79
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40df66
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40df77
cmp     dl, 29h
jz      short loc_40df77
test    cl, 10h
jnz     short loc_40df79
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40df77
cmp     cl, 7dh
jnz     short loc_40df79
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
pop     edi
mov     al, 1
pop     esi
mov     esp, ebp
pop     ebp
retn    4
pop     edi
xor     al, al
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, ecx
call    sub_40ec50
test    eax, eax
jz      loc_40e118
cmp     eax, 2
jz      loc_40e0b5
cmp     dword ptr [esi+44h], 0
jnz     short loc_40dfd3
test    dword ptr [esi+50h], 100000h
jz      loc_40e11e
cmp     dword ptr [esi+4ch], 2dh
jnz     loc_40e088
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40e019
cmp     byte ptr [eax], 5ch
jnz     short loc_40e017
inc     eax
cmp     eax, ecx
jz      short loc_40e017
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40e004
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40e015
cmp     dl, 29h
jz      short loc_40e015
test    cl, 10h
jnz     short loc_40e017
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40e015
cmp     cl, 7dh
jnz     short loc_40e017
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
mov     bl, [esi+44h]
mov     ecx, esi
mov     byte ptr [ebp+var_4], bl
call    sub_40ec50
test    eax, eax
jz      loc_40e0ca
cmp     eax, 2
jz      loc_40e125
test    dword ptr [esi+40h], 800h
jz      short loc_40e06a
movzx   eax, byte ptr [esi+44h]
mov     ecx, [esi+3ch]
push    eax
call    sub_40cf30
mov     ecx, [esi+3ch]
push    [ebp+var_4]
movsx   eax, al
mov     [esi+44h], eax
call    sub_40cf30
mov     bl, al
mov     byte ptr [ebp+var_4], bl
movsx   eax, bl
cmp     [esi+44h], eax
jl      loc_40e125
movzx   eax, byte ptr [esi+44h]
push    eax
push    [ebp+var_4]
lea     ecx, [esi+24h]
call    sub_40f050
jmp     short loc_40e0b5
mov     al, [esi+44h]
mov     byte ptr [ebp+var_8], al
movsx   eax, al
lea     ecx, [esi+24h]
cmp     dword_43d190, eax
jg      short loc_40e0ad
cmp     eax, 100h
jge     short loc_40e0ad
push    [ebp+var_8]
call    sub_40f3c0
jmp     short loc_40e0b5
push    [ebp+var_8]
call    sub_40f4b0
mov     ecx, esi
call    sub_40ec50
test    eax, eax
jnz     loc_40dfb7
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     al, [esi+44h]
mov     byte ptr [ebp+var_8], al
movsx   eax, al
add     esi, 24h
cmp     dword_43d190, eax
jg      short loc_40e0f1
cmp     eax, 100h
jge     short loc_40e0f1
push    [ebp+var_8]
mov     ecx, esi
call    sub_40f3c0
jmp     short loc_40e0fb
push    [ebp+var_8]
mov     ecx, esi
call    sub_40f4b0
cmp     dword_43d190, 2dh
push    2dh
mov     ecx, esi
jg      short loc_40e113
call    sub_40f3c0
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    sub_40f4b0
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    2
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    8
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    esi
mov     esi, ecx
test    dword ptr [esi+50h], 10000h
jz      short loc_40e14a
movzx   eax, byte ptr [esi+48h]
push    eax
call    sub_40ef20
test    al, al
jnz     short loc_40e161
mov     eax, [esi+50h]
test    eax, 8000h
jz      short loc_40e1a9
cmp     byte ptr [esi+48h], 61h
jnz     short loc_40e1a9
mov     dword ptr [esi+44h], 7
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40e19d
cmp     byte ptr [eax], 5ch
jnz     short loc_40e19b
inc     eax
cmp     eax, ecx
jz      short loc_40e19b
mov     edx, [esi+50h]
test    dl, 8
jnz     short loc_40e188
mov     cl, [eax]
cmp     cl, 28h
jz      short loc_40e199
cmp     cl, 29h
jz      short loc_40e199
test    dl, 10h
jnz     short loc_40e19b
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40e199
cmp     cl, 7dh
jnz     short loc_40e19b
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
jmp     loc_40e250
mov     cl, [esi+48h]
cmp     cl, 63h
jnz     short loc_40e1f8
test    eax, 40000h
jz      short loc_40e1f8
mov     ecx, esi
call    sub_40b9e0
movzx   eax, byte ptr [esi+48h]
mov     ecx, [esi+3ch]
push    103h
push    eax
call    sub_40d000
test    al, al
jz      loc_40e269
movsx   eax, byte ptr [esi+48h]
and     eax, 8000001fh
jns     short loc_40e1e9
dec     eax
or      eax, 0ffffffe0h
inc     eax
movsx   eax, al
mov     ecx, esi
mov     [esi+44h], eax
call    sub_40b9e0
jmp     short loc_40e250
cmp     cl, 78h
jnz     short loc_40e21c
test    eax, 1000h
jz      short loc_40e21c
mov     ecx, esi
call    sub_40b9e0
push    2
push    10h
mov     ecx, esi
call    sub_40eb70
test    eax, eax
jz      short loc_40e250
jmp     short loc_40e270
cmp     cl, 75h
jnz     short loc_40e233
test    eax, 800h
jz      short loc_40e233
mov     ecx, esi
call    sub_40b9e0
push    4
jmp     short loc_40e20d
test    eax, 2000h
jz      short loc_40e261
push    3
push    8
mov     ecx, esi
call    sub_40eb70
cmp     eax, 3
jz      short loc_40e261
cmp     dword ptr [esi+44h], 0
jz      short loc_40e270
mov     eax, [esi+44h]
cmp     eax, 0ffffff80h
jl      short loc_40e269
cmp     eax, 7fh
jg      short loc_40e269
mov     al, 1
pop     esi
retn
mov     ecx, esi
pop     esi
jmp     sub_40edb0
push    2
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    2
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
mov     ebx, ecx
push    esi
inc     dword ptr [ebx+0ch]
push    edi
push    dword ptr [ebx+0ch]
lea     ecx, [ebx+24h]
call    sub_40a900
mov     ecx, ebx
mov     edi, eax
call    sub_40a6c0
push    edi
lea     ecx, [ebx+24h]
call    sub_40a860
push    ecx
mov     ecx, [ebx+0ch]
inc     ecx
push    ecx
lea     ecx, [ebx+14h]
call    sub_40aa20
mov     edx, [edi+14h]
mov     esi, [ebx+14h]
mov     [ebp+var_4], 0
test    edx, edx
jns     short loc_40e2e6
mov     eax, edx
neg     eax
jz      short loc_40e2e6
or      ecx, 0ffffffffh
sub     ecx, edx
shr     ecx, 5
shl     ecx, 2
mov     eax, 0fffffffch
sub     eax, ecx
add     esi, eax
jmp     short loc_40e2ee
mov     eax, edx
shr     eax, 5
lea     esi, [esi+eax*4]
and     edx, 1fh
mov     eax, 1
mov     ecx, edx
shl     eax, cl
pop     edi
or      [esi], eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
push    14h
mov     ebx, ecx
call    ??2@yapaxi@z
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_40e349
mov     dword ptr [esi], offset ??_7_node_base@std@@6b@
mov     dword ptr [esi+4], 8
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
mov     dword ptr [esi+10h], 0
jmp     short loc_40e34b
xor     esi, esi
mov     eax, [ebx+28h]
mov     [esi+10h], eax
mov     eax, [ebx+28h]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40e367
mov     [esi+0ch], eax
mov     eax, [ebx+28h]
mov     eax, [eax+0ch]
mov     [eax+10h], esi
mov     eax, [ebx+28h]
mov     ecx, ebx
mov     [eax+0ch], esi
mov     [ebx+28h], esi
call    sub_40a6c0
push    esi
lea     ecx, [ebx+24h]
call    sub_40a860
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
push    [ebp+arg_0]
mov     edi, ecx
lea     ecx, [edi+24h]
call    sub_40f2b0
mov     ecx, edi
mov     esi, eax
call    sub_40a6c0
push    esi
lea     ecx, [edi+24h]
call    sub_40a860
mov     [edi+28h], esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    esi
push    2ch
mov     esi, ecx
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
test    edx, edx
jz      short loc_40e41c
xor     eax, eax
mov     dword ptr [edx+4], 7
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     dword ptr [edx+10h], 0
mov     dword ptr [edx], offset ??_7?$_node_class@dv?$regex_traits@d@std@@@std@@6b@
mov     dword ptr [edx+14h], 0
mov     dword ptr [edx+18h], 0
mov     dword ptr [edx+1ch], 0
mov     dword ptr [edx+20h], 0
mov     [edx+24h], ax
mov     [edx+28h], eax
jmp     short loc_40e41e
xor     edx, edx
mov     eax, [esi+4]
mov     [edx+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40e43a
mov     [edx+0ch], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
mov     [eax+10h], edx
mov     eax, [esi+4]
mov     [eax+0ch], edx
mov     [esi+4], edx
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
push    18h
mov     esi, ecx
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
test    edx, edx
jz      short loc_40e490
mov     ecx, [ebp+arg_0]
mov     dword ptr [edx+4], 0fh
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     dword ptr [edx+10h], 0
mov     dword ptr [edx], offset ??_7_node_back@std@@6b@
mov     [edx+14h], ecx
jmp     short loc_40e492
xor     edx, edx
mov     eax, [esi+4]
mov     [edx+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40e4ae
mov     [edx+0ch], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
mov     [eax+10h], edx
mov     eax, [esi+4]
mov     [eax+0ch], edx
mov     [esi+4], edx
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     eax, [esi+4]
mov     [ebp+var_4], esi
cmp     dword ptr [eax+4], 6
jnz     short loc_40e4f2
cmp     dword ptr [eax+18h], 1
jz      short loc_40e4f2
dec     dword ptr [eax+18h]
mov     ecx, [eax+18h]
mov     eax, [eax+1ch]
movzx   eax, byte ptr [eax+ecx]
push    eax
mov     ecx, esi
call    sub_40cda0
mov     eax, [esi+4]
push    18h
mov     [ebp+var_8], eax
call    ??2@yapaxi@z
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_40e533
mov     dword ptr [edi+4], 13h
mov     dword ptr [edi+8], 0
mov     dword ptr [edi+0ch], 0
mov     dword ptr [edi+10h], 0
mov     dword ptr [edi], offset ??_7_node_end_rep@std@@6b@
mov     dword ptr [edi+14h], 0
jmp     short loc_40e535
xor     edi, edi
push    28h
call    ??2@yapaxi@z
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      short loc_40e599
mov     edx, [esi]
xor     eax, eax
mov     esi, [edx+18h]
cmp     [ebp+arg_8], al
lea     ecx, [esi+1]
mov     [edx+18h], ecx
mov     ecx, 2
cmovnz  eax, ecx
mov     [ebx+8], eax
mov     eax, [ebp+arg_0]
mov     [ebx+14h], eax
mov     eax, [ebp+arg_4]
mov     [ebx+20h], esi
mov     esi, [ebp+var_4]
mov     dword ptr [ebx+4], 12h
mov     dword ptr [ebx+0ch], 0
mov     dword ptr [ebx+10h], 0
mov     dword ptr [ebx], offset ??_7_node_rep@std@@6b@
mov     [ebx+18h], eax
mov     [ebx+1ch], edi
mov     dword ptr [ebx+24h], 0ffffffffh
jmp     short loc_40e59b
xor     ebx, ebx
mov     [edi+14h], ebx
mov     eax, [esi+4]
mov     [edi+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40e5ba
mov     [edi+0ch], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
mov     [eax+10h], edi
mov     eax, [esi+4]
mov     ecx, [ebp+var_8]
mov     [eax+0ch], edi
mov     [esi+4], edi
mov     eax, [ecx+4]
cmp     eax, 9
jz      short loc_40e5d3
cmp     eax, 0eh
jnz     short loc_40e5d6
mov     ecx, [ecx+14h]
mov     eax, [ecx+10h]
pop     edi
mov     [eax+0ch], ebx
mov     eax, [ecx+10h]
mov     [ebx+10h], eax
mov     [ecx+10h], ebx
pop     esi
mov     [ebx+0ch], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    esi
push    20h
mov     esi, ecx
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
test    edx, edx
jz      short loc_40e64c
mov     dword ptr [edx+4], 6
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     dword ptr [edx+10h], 0
mov     dword ptr [edx], offset ??_7?$_node_str@d@std@@6b@
mov     dword ptr [edx+14h], 0
mov     dword ptr [edx+18h], 0
mov     dword ptr [edx+1ch], 0
jmp     short loc_40e64e
xor     edx, edx
mov     eax, [esi+4]
mov     [edx+10h], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40e66a
mov     [edx+0ch], eax
mov     eax, [esi+4]
mov     eax, [eax+0ch]
mov     [eax+10h], edx
mov     eax, [esi+4]
mov     [eax+0ch], edx
mov     [esi+4], edx
pop     esi
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_18]
push    ebx
push    esi
mov     esi, [ebp+arg_14]
push    edi
mov     edi, [ebp+arg_4]
mov     ebx, ecx
mov     ecx, [ebp+arg_8]
cmp     edi, [ebp+arg_c]
jnz     short loc_40e69e
cmp     ecx, [ebp+arg_10]
jz      short loc_40e6f3
mov     eax, 1
shl     eax, cl
mov     ecx, edx
test    [edi], eax
mov     eax, 1
jz      short loc_40e6b6
shl     eax, cl
or      [esi], eax
jmp     short loc_40e6bc
shl     eax, cl
not     eax
and     [esi], eax
mov     edx, [ebp+arg_18]
mov     esi, [ebp+arg_14]
cmp     edx, 1fh
jnb     short loc_40e6ca
inc     edx
jmp     short loc_40e6d2
xor     edx, edx
add     esi, 4
mov     [ebp+arg_14], esi
mov     ecx, [ebp+arg_8]
mov     edi, [ebp+arg_4]
mov     [ebp+arg_18], edx
cmp     ecx, 1fh
jnb     short loc_40e6e6
inc     ecx
mov     [ebp+arg_8], ecx
jmp     short loc_40e694
xor     ecx, ecx
add     edi, 4
mov     [ebp+arg_8], ecx
mov     [ebp+arg_4], edi
jmp     short loc_40e694
pop     edi
mov     [ebx], esi
pop     esi
mov     [ebx+4], edx
mov     eax, ebx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     ebx, ecx
jmp     short loc_40e710
mov     edi, [ebp+arg_c]
mov     ecx, [ebp+arg_10]
cmp     [ebp+arg_4], edi
jnz     short loc_40e720
cmp     [ebp+arg_8], ecx
jz      short loc_40e770
test    ecx, ecx
jz      short loc_40e727
dec     ecx
jmp     short loc_40e732
sub     edi, 4
mov     ecx, 1fh
mov     [ebp+arg_c], edi
mov     edx, [ebp+arg_18]
mov     esi, [ebp+arg_14]
mov     [ebp+arg_10], ecx
test    edx, edx
jz      short loc_40e742
dec     edx
jmp     short loc_40e74d
sub     esi, 4
mov     edx, 1fh
mov     [ebp+arg_14], esi
mov     eax, 1
shl     eax, cl
mov     [ebp+arg_18], edx
mov     ecx, edx
test    [edi], eax
mov     eax, 1
jz      short loc_40e768
shl     eax, cl
or      [esi], eax
jmp     short loc_40e710
shl     eax, cl
not     eax
and     [esi], eax
jmp     short loc_40e710
mov     eax, [ebp+arg_14]
mov     [ebx], eax
mov     eax, [ebp+arg_18]
pop     edi
mov     [ebx+4], eax
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_409130
mov     eax, large fs:0
push    eax
sub     esp, 18h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    0
lea     ecx, [ebp+var_18]
call    ??0_lockit@std@@qae@h@z
mov     [ebp+var_4], 0
mov     edi, dword_43d1bc
mov     ebx, dword_43d198
mov     [ebp+var_10], ebx
test    edi, edi
jnz     short loc_40e80b
push    edi
lea     ecx, [ebp+var_14]
call    ??0_lockit@std@@qae@h@z
cmp     dword_43d1bc, edi
jnz     short loc_40e7fd
mov     eax, dword_43cee0
inc     eax
mov     dword_43cee0, eax
mov     dword_43d1bc, eax
lea     ecx, [ebp+var_14]
call    ??1_lockit@std@@qae@xz
mov     edi, dword_43d1bc
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx]
cmp     edi, [ecx+0ch]
jnb     short loc_40e821
mov     eax, [ecx+8]
mov     esi, [eax+edi*4]
test    esi, esi
jnz     short loc_40e88d
jmp     short loc_40e823
xor     esi, esi
cmp     byte ptr [ecx+14h], 0
jz      short loc_40e839
call    sub_42197a
cmp     edi, [eax+0ch]
jnb     short loc_40e83d
mov     eax, [eax+8]
mov     esi, [eax+edi*4]
test    esi, esi
jnz     short loc_40e88d
test    ebx, ebx
jz      short loc_40e845
mov     esi, ebx
jmp     short loc_40e88d
push    [ebp+arg_0]
lea     eax, [ebp+var_10]
push    eax
call    sub_40e8b0
add     esp, 8
cmp     eax, 0ffffffffh
jnz     short loc_40e874
push    offset abadcast
lea     ecx, [ebp+pexceptionobject]
call    sub_4104d0
push    offset __ti2?avbad_cast@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
mov     esi, [ebp+var_10]
mov     dword_43d198, esi
mov     edx, [esi]
mov     ecx, esi
call    dword ptr [edx+4]
push    esi
call    ?_facet_register@std@@yaxpav_facet_base@1@@z
add     esp, 4
lea     ecx, [ebp+var_18]
call    ??1_lockit@std@@qae@xz
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    0ffffffffh
push    offset seh_40e8b0
mov     eax, large fs:0
push    eax
sub     esp, 60h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+6ch+var_14], eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, esp
push    eax
lea     eax, [esp+7ch+var_c]
mov     large fs:0, eax
mov     edi, [ebp+arg_0]
mov     eax, [ebp+arg_4]
xor     ebx, ebx
mov     [esp+7ch+var_6c], eax
mov     [esp+7ch+var_68], ebx
test    edi, edi
jz      loc_40e998
cmp     [edi], ebx
jnz     loc_40e998
push    10h
call    ??2@yapaxi@z
mov     esi, eax
add     esp, 4
mov     [esp+7ch+var_64], esi
mov     [esp+7ch+var_4], ebx
test    esi, esi
jz      short loc_40e96b
mov     ecx, [esp+7ch+var_6c]
lea     eax, [esp+7ch+block]
push    eax
call    sub_403740
mov     byte ptr [esp+7ch+var_4], 1
cmp     dword ptr [eax+14h], 10h
mov     [esp+7ch+var_68], 1
jb      short loc_40e942
mov     eax, [eax]
push    eax
lea     ecx, [esp+80h+var_60]
call    sub_403530
mov     ebx, 3
mov     dword ptr [esi+4], 0
mov     dword ptr [esi], offset ??_7?$collate@d@std@@6b@
call    __getcoll
mov     [esi+8], eax
mov     [esi+0ch], edx
jmp     short loc_40e96d
xor     esi, esi
mov     [edi], esi
test    bl, 2
jz      short loc_40e980
lea     ecx, [esp+7ch+var_60]
and     ebx, 0fffffffdh
call    sub_4035f0
test    bl, 1
jz      short loc_40e998
cmp     [esp+7ch+var_18], 10h
jb      short loc_40e998
push    [esp+7ch+block]
call    j__free
add     esp, 4
mov     eax, 1
mov     ecx, [esp+7ch+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+6ch+var_14]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
push    dword ptr [esi+1ch]
call    _free
add     esp, 4
test    [ebp+arg_0], 1
mov     dword ptr [esi], offset ??_7_node_base@std@@6b@
jz      short loc_40e9e6
push    esi
call    j__free
add     esp, 4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40e9f0
mov     eax, large fs:0
push    eax
sub     esp, 40h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     esi, [ebp+arg_0]
mov     [ebp+var_38], 0
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     [ebp+var_48], esi
mov     byte ptr [esi], 0
mov     [ebp+var_4], 0
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
mov     [ebp+var_38], 1
cmp     eax, ecx
jz      loc_40eb47
push    ecx
push    eax
lea     ecx, [ebp+var_44]
mov     [ebp+var_44], 0
mov     [ebp+var_40], 0
mov     [ebp+var_3c], 0
call    sub_40f9f0
mov     [ebp+var_4], 1
mov     ecx, [ebp+var_40]
mov     edi, [ebp+var_44]
sub     ecx, edi
cmp     dword ptr [ebx+4], 0
mov     [ebp+var_34], ecx
jnz     short loc_40eac5
lea     eax, [ebp+var_30]
push    eax
mov     ecx, ebx
call    sub_40d4e0
push    eax
mov     byte ptr [ebp+var_4], 2
call    sub_409130
mov     byte ptr [ebp+var_4], 1
mov     ecx, [ebp+var_30]
add     esp, 4
mov     [ebx+4], eax
test    ecx, ecx
jz      short loc_40eac5
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40eac5
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     eax, [ebp+var_34]
mov     ecx, [ebx+4]
add     eax, edi
mov     edx, [ecx]
push    eax
push    edi
call    dword ptr [edx+0ch]
cmp     dword ptr [ebx], 0
jnz     short loc_40eb0f
lea     eax, [ebp+var_30]
push    eax
mov     ecx, ebx
call    sub_40d4e0
push    eax
mov     byte ptr [ebp+var_4], 3
call    sub_40e790
mov     byte ptr [ebp+var_4], 1
mov     ecx, [ebp+var_30]
add     esp, 4
mov     [ebx], eax
test    ecx, ecx
jz      short loc_40eb0f
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40eb0f
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     eax, [ebp+var_34]
mov     ecx, [ebx]
add     eax, edi
push    eax
push    edi
lea     eax, [ebp+block]
push    eax
call    sub_40d2e0
push    eax
mov     ecx, esi
call    sub_405600
cmp     [ebp+var_18], 10h
jb      short loc_40eb3a
push    [ebp+block]
call    j__free
add     esp, 4
test    edi, edi
jz      short loc_40eb47
push    edi
call    j__free
add     esp, 4
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_4]
mov     esi, ecx
mov     dword ptr [esi+44h], 0
test    edi, edi
jz      loc_40ec3b
push    ebx
mov     ebx, [ebp+arg_0]
lea     ecx, [ecx+0]
mov     cl, [esi+48h]
cmp     ebx, 8
jz      short loc_40ebc9
cmp     cl, 30h
jl      short loc_40eba2
cmp     cl, 39h
jle     short loc_40ebd0
cmp     ebx, 10h
jnz     loc_40ec32
lea     eax, [ecx-61h]
cmp     al, 5
ja      short loc_40ebba
movsx   ecx, cl
sub     ecx, 57h
jmp     short loc_40ebd6
lea     eax, [ecx-41h]
cmp     al, 5
ja      short loc_40ec32
movsx   ecx, cl
sub     ecx, 37h
jmp     short loc_40ebd6
lea     eax, [ecx-30h]
cmp     al, 7
ja      short loc_40ec32
movsx   ecx, cl
sub     ecx, 30h
cmp     ecx, 0ffffffffh
jz      short loc_40ec32
mov     eax, [esi+44h]
imul    eax, ebx
add     eax, ecx
mov     ecx, [esi+8]
mov     [esi+44h], eax
mov     eax, [esi]
dec     edi
cmp     eax, ecx
jz      short loc_40ec23
cmp     byte ptr [eax], 5ch
jnz     short loc_40ec21
inc     eax
cmp     eax, ecx
jz      short loc_40ec21
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40ec0e
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40ec1f
cmp     dl, 29h
jz      short loc_40ec1f
test    cl, 10h
jnz     short loc_40ec21
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40ec1f
cmp     cl, 7dh
jnz     short loc_40ec21
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
test    edi, edi
jnz     loc_40eb90
pop     ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    8
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    8
push    ecx
push    esi
mov     esi, ecx
push    edi
mov     eax, [esi+4ch]
cmp     eax, 5ch
jnz     loc_40ed07
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40ec9d
cmp     byte ptr [eax], 5ch
jnz     short loc_40ec9b
inc     eax
cmp     eax, ecx
jz      short loc_40ec9b
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40ec88
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40ec99
cmp     dl, 29h
jz      short loc_40ec99
test    cl, 10h
jnz     short loc_40ec9b
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40ec99
cmp     cl, 7dh
jnz     short loc_40ec9b
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
mov     eax, [esi+50h]
test    eax, 200000h
jz      short loc_40ecba
push    ecx
mov     ecx, esi
call    sub_40f790
pop     edi
pop     esi
pop     ecx
retn
test    eax, 10000h
jz      short loc_40ecd1
movzx   eax, byte ptr [esi+48h]
push    eax
mov     ecx, esi
call    sub_40ef20
test    al, al
jnz     short loc_40ece7
test    dword ptr [esi+50h], 8000h
jz      short loc_40ecf7
cmp     byte ptr [esi+48h], 61h
jnz     short loc_40ecf7
mov     dword ptr [esi+44h], 7
mov     ecx, esi
call    sub_40b9e0
mov     eax, 1
pop     edi
pop     esi
pop     ecx
retn
mov     dword ptr [esi+44h], 5ch
mov     eax, 1
pop     edi
pop     esi
pop     ecx
retn
cmp     eax, 5bh
jnz     short loc_40ed89
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40ed48
cmp     byte ptr [eax], 5ch
jnz     short loc_40ed46
inc     eax
cmp     eax, ecx
jz      short loc_40ed46
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40ed33
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40ed44
cmp     dl, 29h
jz      short loc_40ed44
test    cl, 10h
jnz     short loc_40ed46
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40ed44
cmp     cl, 7dh
jnz     short loc_40ed46
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
mov     edi, [esi+4ch]
cmp     edi, 3ah
jz      short loc_40ed71
cmp     edi, 3dh
jz      short loc_40ed71
cmp     edi, 2eh
jz      short loc_40ed71
mov     dword ptr [esi+44h], 5bh
mov     eax, 1
pop     edi
pop     esi
pop     ecx
retn
mov     ecx, esi
call    sub_40b9e0
push    edi
mov     ecx, esi
call    sub_40f5f0
mov     eax, 2
pop     edi
pop     esi
pop     ecx
retn
cmp     eax, 5dh
jz      short loc_40eda8
cmp     eax, 0ffffffffh
jz      short loc_40eda8
movsx   eax, byte ptr [esi+48h]
mov     [esi+44h], eax
call    sub_40b9e0
mov     eax, 1
pop     edi
pop     esi
pop     ecx
retn
pop     edi
xor     eax, eax
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40edb0
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
test    dword ptr [esi+50h], 400000h
jz      short loc_40ee4a
mov     edi, [esi+3ch]
mov     bl, [esi+48h]
cmp     dword ptr [edi+4], 0
jnz     short loc_40ee2a
lea     eax, [ebp+var_10]
push    eax
mov     ecx, edi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_10]
add     esp, 4
mov     [edi+4], eax
test    ecx, ecx
jz      short loc_40ee2a
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40ee2a
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     eax, [edi+4]
movzx   ecx, bl
mov     eax, [eax+0ch]
mov     edx, 107h
test    [eax+ecx*2], dx
setnz   al
test    al, al
jnz     short loc_40ee4a
mov     al, [esi+48h]
cmp     al, 5fh
jnz     short loc_40eeaa
mov     ecx, [esi+50h]
test    ecx, 400000h
jnz     short loc_40ee74
mov     al, [esi+48h]
cmp     al, 2eh
jz      short loc_40eeaa
cmp     al, 5bh
jz      short loc_40eeaa
cmp     al, 5ch
jz      short loc_40eeaa
cmp     al, 2ah
jz      short loc_40eeaa
cmp     al, 7ch
jz      short loc_40eeaa
cmp     al, 5eh
jz      short loc_40eeaa
cmp     al, 24h
jz      short loc_40eeaa
test    ecx, 800000h
jz      short loc_40ee97
mov     al, [esi+48h]
cmp     al, 28h
jz      short loc_40eeaa
cmp     al, 29h
jz      short loc_40eeaa
cmp     al, 2bh
jz      short loc_40eeaa
cmp     al, 3fh
jz      short loc_40eeaa
cmp     al, 7bh
jz      short loc_40eeaa
cmp     al, 7dh
jz      short loc_40eeaa
test    ecx, 1000000h
jz      short loc_40ef07
mov     al, [esi+48h]
cmp     al, 22h
jz      short loc_40eeaa
cmp     al, 2fh
jnz     short loc_40ef07
mov     ecx, [esi+8]
movsx   eax, al
mov     [esi+44h], eax
mov     eax, [esi]
cmp     eax, ecx
jz      short loc_40eeec
cmp     byte ptr [eax], 5ch
jnz     short loc_40eeea
inc     eax
cmp     eax, ecx
jz      short loc_40eeea
mov     edx, [esi+50h]
test    dl, 8
jnz     short loc_40eed7
mov     cl, [eax]
cmp     cl, 28h
jz      short loc_40eee8
cmp     cl, 29h
jz      short loc_40eee8
test    dl, 10h
jnz     short loc_40eeea
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40eee8
cmp     cl, 7dh
jnz     short loc_40eeea
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
mov     al, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     al, al
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     al, [ebp+arg_0]
cmp     al, 62h
jnz     short loc_40ef37
mov     dword ptr [ecx+44h], 8
mov     al, 1
pop     ebp
retn    4
cmp     al, 66h
jnz     short loc_40ef48
mov     dword ptr [ecx+44h], 0ch
mov     al, 1
pop     ebp
retn    4
cmp     al, 6eh
jnz     short loc_40ef59
mov     dword ptr [ecx+44h], 0ah
mov     al, 1
pop     ebp
retn    4
cmp     al, 72h
jnz     short loc_40ef6a
mov     dword ptr [ecx+44h], 0dh
mov     al, 1
pop     ebp
retn    4
cmp     al, 74h
jnz     short loc_40ef7b
mov     dword ptr [ecx+44h], 9
mov     al, 1
pop     ebp
retn    4
cmp     al, 76h
jnz     short loc_40ef8c
mov     dword ptr [ecx+44h], 0bh
mov     al, 1
pop     ebp
retn    4
xor     al, al
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
xor     edx, edx
mov     [ebp+var_4], edx
cmp     ds:off_430478, edx
jz      short loc_40f024
mov     eax, [ebp+arg_4]
push    esi
push    ebx
mov     [ebp+var_8], ecx
xor     ecx, ecx
mov     esi, offset off_430478
push    edi
mov     esi, [esi]
mov     ebx, ds:dword_43047c[ecx]
mov     edi, [ebp+arg_0]
add     ebx, esi
cmp     edi, eax
jz      short loc_40effc
cmp     esi, ebx
jz      short loc_40eff5
mov     al, [esi]
mov     cl, [edi]
push    eax
push    ecx
lea     ecx, [ebp+var_8]
call    sub_40f900
inc     edi
inc     esi
test    al, al
jz      short loc_40f002
mov     eax, [ebp+arg_4]
cmp     edi, eax
jnz     short loc_40efd4
jmp     short loc_40eff9
cmp     edi, eax
jnz     short loc_40f002
mov     edx, [ebp+var_4]
cmp     esi, ebx
jz      short loc_40f021
jmp     short loc_40f005
mov     edx, [ebp+var_4]
mov     eax, [ebp+arg_4]
inc     edx
mov     [ebp+var_4], edx
lea     ecx, [edx+edx*2]
shl     ecx, 2
cmp     ds:off_430478[ecx], 0
lea     esi, off_430478[ecx]
jnz     short loc_40efc3
pop     edi
pop     ebx
pop     esi
lea     ecx, [edx+edx*2]
xor     eax, eax
cmp     ds:off_430478[ecx*4], eax
jz      short loc_40f03a
movzx   eax, ds:word_430480[ecx*4]
cmp     [ebp+arg_8], 0
jz      short loc_40f047
test    al, 3
jz      short loc_40f047
or      eax, 3
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40f050
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
test    dword ptr [edi+8], 100h
jz      loc_40f136
mov     esi, [edi+0ch]
cmp     dword ptr [esi+4], 0
jnz     short loc_40f0cd
lea     eax, [ebp+var_10]
push    eax
mov     ecx, esi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_10]
add     esp, 4
mov     [esi+4], eax
test    ecx, ecx
jz      short loc_40f0cd
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40f0cd
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [esi+4]
push    [ebp+arg_0]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
mov     esi, [edi+0ch]
mov     bl, al
cmp     dword ptr [esi+4], 0
mov     byte ptr [ebp+arg_0], bl
jnz     short loc_40f125
lea     eax, [ebp+var_14]
push    eax
mov     ecx, esi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 1
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_14]
add     esp, 4
mov     [esi+4], eax
test    ecx, ecx
jz      short loc_40f125
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40f125
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [esi+4]
push    [ebp+arg_4]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
mov     bh, al
jmp     short loc_40f13c
mov     bl, byte ptr [ebp+arg_0]
mov     bh, byte ptr [ebp+arg_4]
mov     esi, [edi+4]
test    bl, bl
js      loc_40f1f5
cmp     bl, bh
jg      short loc_40f1ad
movsx   eax, bh
mov     [ebp+arg_4], eax
cmp     eax, [edi+10h]
jge     short loc_40f1aa
cmp     dword ptr [esi+18h], 0
jnz     short loc_40f187
push    20h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40f182
xorps   xmm0, xmm0
movq    qword ptr [eax], xmm0
movq    qword ptr [eax+8], xmm0
movq    qword ptr [eax+10h], xmm0
movq    qword ptr [eax+18h], xmm0
jmp     short loc_40f184
xor     eax, eax
mov     [esi+18h], eax
mov     edx, [esi+18h]
movsx   ecx, bl
mov     eax, ecx
shr     eax, 3
add     edx, eax
and     ecx, 7
mov     al, 1
shl     al, cl
or      [edx], al
cmp     bl, bh
jz      short loc_40f1aa
mov     eax, [ebp+arg_4]
inc     bl
cmp     bl, bh
jle     short loc_40f151
mov     byte ptr [ebp+arg_0], bl
test    bl, bl
js      short loc_40f1f5
movsx   eax, bl
movsx   ecx, bh
sub     ecx, eax
cmp     ecx, [edi+14h]
jge     short loc_40f1f5
cmp     bl, bh
jg      loc_40f290
push    [ebp+arg_0]
mov     ecx, edi
call    sub_40f4b0
cmp     bl, bh
jz      loc_40f290
inc     bl
mov     byte ptr [ebp+arg_0], bl
cmp     bl, bh
jle     short loc_40f1c6
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
cmp     dword ptr [esi+20h], 0
jnz     short loc_40f224
push    0ch
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40f21f
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+8], 0
jmp     short loc_40f221
xor     eax, eax
mov     [esi+20h], eax
mov     edi, [esi+20h]
mov     eax, [edi+4]
cmp     [edi], eax
ja      short loc_40f251
add     eax, 10h
push    eax
push    dword ptr [edi+8]
mov     [ebp+arg_0], eax
call    _realloc
add     esp, 8
test    eax, eax
jnz     short loc_40f249
call    unknown_libname_5
mov     [edi+8], eax
mov     eax, [ebp+arg_0]
mov     [edi], eax
mov     eax, [edi+4]
mov     ecx, [edi+8]
mov     [ecx+eax], bl
inc     dword ptr [edi+4]
mov     esi, [esi+20h]
mov     edi, [esi+4]
cmp     [esi], edi
ja      short loc_40f284
add     edi, 10h
push    edi
push    dword ptr [esi+8]
call    _realloc
add     esp, 8
test    eax, eax
jnz     short loc_40f27f
call    unknown_libname_5
mov     [esi+8], eax
mov     [esi], edi
mov     eax, [esi+4]
mov     ecx, [esi+8]
mov     [ecx+eax], bh
inc     dword ptr [esi+4]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40f2b0
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     edi, ecx
push    18h
call    ??2@yapaxi@z
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_40f31d
xor     eax, eax
cmp     byte ptr [ebp+arg_0], al
mov     dword ptr [esi+8], 0
setnz   al
mov     dword ptr [esi+0ch], 0
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi], offset ??_7_node_assert@std@@6b@
mov     dword ptr [esi+14h], 0
add     eax, 0ah
mov     [esi+4], eax
jmp     short loc_40f31f
xor     esi, esi
push    14h
mov     [ebp+arg_0], esi
mov     [ebp+var_4], 0
call    ??2@yapaxi@z
mov     edx, eax
add     esp, 4
test    edx, edx
jz      short loc_40f35d
mov     dword ptr [edx], offset ??_7_node_base@std@@6b@
mov     dword ptr [edx+4], 1
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     dword ptr [edx+10h], 0
jmp     short loc_40f35f
xor     edx, edx
mov     eax, [edi+4]
mov     [esi+10h], eax
mov     eax, [edi+4]
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_40f37b
mov     [esi+0ch], eax
mov     ecx, [edi+4]
mov     ecx, [ecx+0ch]
mov     [ecx+10h], esi
mov     ecx, [edi+4]
mov     eax, esi
mov     [ecx+0ch], esi
mov     [esi+14h], edx
mov     [edx+10h], esi
mov     [edi+4], edx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, [ebp+arg_0]
test    ecx, ecx
jz      short loc_40f3ad
mov     eax, [ecx]
push    1
call    dword ptr [eax]
push    0
push    0
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40edb0
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
test    dword ptr [esi+8], 100h
jz      short loc_40f448
mov     edi, [esi+0ch]
cmp     dword ptr [edi+4], 0
jnz     short loc_40f437
lea     eax, [ebp+var_10]
push    eax
mov     ecx, edi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_10]
add     esp, 4
mov     [edi+4], eax
test    ecx, ecx
jz      short loc_40f437
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40f437
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [edi+4]
push    [ebp+arg_0]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
mov     bl, al
jmp     short loc_40f44b
mov     bl, byte ptr [ebp+arg_0]
mov     esi, [esi+4]
cmp     dword ptr [esi+18h], 0
jnz     short loc_40f47f
push    20h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40f47a
xorps   xmm0, xmm0
movq    qword ptr [eax], xmm0
movq    qword ptr [eax+8], xmm0
movq    qword ptr [eax+10h], xmm0
movq    qword ptr [eax+18h], xmm0
jmp     short loc_40f47c
xor     eax, eax
mov     [esi+18h], eax
mov     edx, [esi+18h]
movsx   ecx, bl
mov     eax, ecx
shr     eax, 3
add     edx, eax
and     ecx, 7
mov     al, 1
shl     al, cl
or      [edx], al
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40edb0
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
test    dword ptr [esi+8], 100h
jz      short loc_40f538
mov     edi, [esi+0ch]
cmp     dword ptr [edi+4], 0
jnz     short loc_40f527
lea     eax, [ebp+var_10]
push    eax
mov     ecx, edi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_10]
add     esp, 4
mov     [edi+4], eax
test    ecx, ecx
jz      short loc_40f527
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40f527
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [edi+4]
push    [ebp+arg_0]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
mov     bl, al
jmp     short loc_40f53b
mov     bl, byte ptr [ebp+arg_0]
mov     esi, [esi+4]
cmp     dword ptr [esi+1ch], 0
jnz     short loc_40f56d
push    0ch
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40f568
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+8], 0
jmp     short loc_40f56a
xor     eax, eax
mov     [esi+1ch], eax
mov     esi, [esi+1ch]
mov     eax, [esi+4]
cmp     [esi], eax
ja      short loc_40f594
lea     edi, [eax+10h]
push    edi
push    dword ptr [esi+8]
call    _realloc
add     esp, 8
test    eax, eax
jnz     short loc_40f58f
call    unknown_libname_5
mov     [esi+8], eax
mov     [esi], edi
mov     eax, [esi+4]
mov     ecx, [esi+8]
mov     [ecx+eax], bl
inc     dword ptr [esi+4]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_4]
cmp     eax, edx
jz      short loc_40f5e6
push    esi
mov     edi, edi
test    ecx, ecx
jz      short loc_40f5d8
mov     esi, [eax]
mov     [ecx], esi
add     eax, 4
add     ecx, 4
mov     [ebp+arg_0], eax
cmp     eax, edx
jnz     short loc_40f5d0
pop     esi
mov     eax, ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
cmp     edi, 3ah
jnz     short loc_40f60c
mov     [ebp+arg_0], 1
jmp     short loc_40f62a
cmp     edi, 3dh
jnz     short loc_40f61a
mov     [ebp+arg_0], 0
jmp     short loc_40f62a
xor     ecx, ecx
mov     eax, 0eh
cmp     edi, 2eh
cmovz   eax, ecx
mov     [ebp+arg_0], eax
mov     edx, [esi]
xor     ebx, ebx
cmp     dword ptr [esi+4ch], 3ah
mov     [ebp+var_4], edx
jz      short loc_40f696
mov     eax, [esi+4ch]
cmp     eax, 3dh
jz      short loc_40f693
cmp     eax, 2eh
jz      short loc_40f693
cmp     eax, 0ffffffffh
jz      short loc_40f693
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40f685
cmp     byte ptr [eax], 5ch
jnz     short loc_40f683
inc     eax
cmp     eax, ecx
jz      short loc_40f683
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40f670
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40f681
cmp     dl, 29h
jz      short loc_40f681
test    cl, 10h
jnz     short loc_40f683
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40f681
cmp     cl, 7dh
jnz     short loc_40f683
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
inc     ebx
cmp     dword ptr [esi+4ch], 3ah
jnz     short loc_40f637
mov     edx, [ebp+var_4]
cmp     [esi+4ch], edi
jnz     loc_40f766
cmp     edi, 3ah
jnz     short loc_40f6d8
mov     eax, [esi+40h]
mov     ecx, [esi+3ch]
and     eax, 100h
setnz   al
movzx   eax, al
push    eax
push    dword ptr [esi]
push    edx
call    sub_40efa0
movzx   eax, ax
test    ax, ax
jz      loc_40f76e
push    dword ptr [esi+30h]
push    eax
push    dword ptr [esi+28h]
call    sub_40f850
jmp     short loc_40f70e
cmp     edi, 3dh
jnz     short loc_40f6f4
mov     eax, [esi]
cmp     edx, eax
jz      loc_40f775
lea     ecx, [esi+24h]
push    ecx
push    eax
push    edx
call    sub_40fa60
jmp     short loc_40f70e
cmp     edi, 2eh
jnz     short loc_40f70e
mov     ecx, [esi]
cmp     edx, ecx
jz      short loc_40f77c
mov     eax, [esi+28h]
add     eax, 14h
push    eax
push    ebx
push    ecx
push    edx
call    sub_40fc00
mov     eax, [esi]
mov     ecx, [esi+8]
cmp     eax, ecx
jz      short loc_40f74a
cmp     byte ptr [eax], 5ch
jnz     short loc_40f748
inc     eax
cmp     eax, ecx
jz      short loc_40f748
mov     ecx, [esi+50h]
test    cl, 8
jnz     short loc_40f735
mov     dl, [eax]
cmp     dl, 28h
jz      short loc_40f746
cmp     dl, 29h
jz      short loc_40f746
test    cl, 10h
jnz     short loc_40f748
mov     cl, [eax]
cmp     cl, 7bh
jz      short loc_40f746
cmp     cl, 7dh
jnz     short loc_40f748
mov     [esi], eax
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
push    [ebp+arg_0]
mov     ecx, esi
push    5dh
call    sub_40c8a0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    [ebp+arg_0]
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    1
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    0
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    0
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    esi
mov     esi, ecx
mov     eax, [esi+50h]
test    eax, 4000h
jz      short loc_40f7ef
cmp     byte ptr [esi+48h], 5ch
jnz     short loc_40f7ef
mov     ecx, [esi]
mov     edx, [esi+8]
mov     dword ptr [esi+44h], 5ch
cmp     ecx, edx
jz      short loc_40f7df
cmp     byte ptr [ecx], 5ch
jnz     short loc_40f7dd
inc     ecx
cmp     ecx, edx
jz      short loc_40f7dd
test    al, 8
jnz     short loc_40f7cd
mov     dl, [ecx]
cmp     dl, 28h
jz      short loc_40f7db
cmp     dl, 29h
jz      short loc_40f7db
test    al, 10h
jnz     short loc_40f7dd
mov     al, [ecx]
cmp     al, 7bh
jz      short loc_40f7db
cmp     al, 7dh
jnz     short loc_40f7dd
mov     [esi], ecx
inc     dword ptr [esi]
mov     ecx, esi
call    sub_40a510
mov     eax, 1
pop     esi
retn    4
test    eax, 20000h
jz      short loc_40f80a
push    0
call    sub_40ded0
test    al, al
jz      short loc_40f80a
mov     eax, 2
pop     esi
retn    4
push    7fffffffh
push    0ah
mov     ecx, esi
call    sub_40eb70
cmp     eax, 7fffffffh
jz      short loc_40f827
cmp     dword ptr [esi+44h], 0
jz      short loc_40f7e6
jmp     short loc_40f83b
mov     ecx, esi
call    sub_40e130
xor     ecx, ecx
test    al, al
setnz   cl
pop     esi
mov     eax, ecx
retn    4
push    2
call    ?_xregex_error@std@@yaxw4error_type@regex_constants@1@@z
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
push    edi
mov     edi, [ebp+arg_0]
xor     esi, esi
mov     edi, edi
push    [ebp+arg_4]
mov     ecx, ebx
push    esi
call    sub_40d000
test    al, al
jz      short loc_40f8b3
cmp     dword ptr [edi+18h], 0
jnz     short loc_40f8a0
push    20h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40f89b
xorps   xmm0, xmm0
movq    qword ptr [eax], xmm0
movq    qword ptr [eax+8], xmm0
movq    qword ptr [eax+10h], xmm0
movq    qword ptr [eax+18h], xmm0
jmp     short loc_40f89d
xor     eax, eax
mov     [edi+18h], eax
mov     ecx, esi
mov     edx, esi
and     ecx, 7
shr     edx, 3
add     edx, [edi+18h]
mov     al, 1
shl     al, cl
or      [edx], al
inc     esi
cmp     esi, 100h
jl      short loc_40f860
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_4]
cmp     eax, edx
jz      short loc_40f8fc
push    esi
mov     edi, edi
test    ecx, ecx
jz      short loc_40f8ee
mov     esi, [eax]
mov     [ecx], esi
mov     esi, [eax+4]
mov     [ecx+4], esi
add     eax, 8
add     ecx, 8
mov     [ebp+arg_0], eax
cmp     eax, edx
jnz     short loc_40f8e0
pop     esi
mov     eax, ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40f900
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     esi, [edi]
cmp     dword ptr [esi+4], 0
jnz     short loc_40f96d
lea     eax, [ebp+var_10]
push    eax
mov     ecx, esi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 0
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_10]
add     esp, 4
mov     [esi+4], eax
test    ecx, ecx
jz      short loc_40f96d
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40f96d
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [esi+4]
push    [ebp+arg_0]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
mov     esi, [edi]
mov     bl, al
cmp     dword ptr [esi+4], 0
jnz     short loc_40f9c1
lea     eax, [ebp+arg_0]
push    eax
mov     ecx, esi
call    sub_40d4e0
push    eax
mov     [ebp+var_4], 1
call    sub_409130
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+arg_0]
add     esp, 4
mov     [esi+4], eax
test    ecx, ecx
jz      short loc_40f9c1
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40f9c1
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     ecx, [esi+4]
push    [ebp+arg_4]
mov     eax, [ecx]
mov     eax, [eax+10h]
call    eax
xor     ecx, ecx
cmp     bl, al
setz    cl
mov     al, cl
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40f9f0
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     [ebp+var_14], ecx
mov     [ebp+var_4], 0
push    [ebp+arg_4]
push    [ebp+arg_4]
push    [ebp+arg_0]
push    dword ptr [ecx]
call    sub_40fdf0
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+var_14]
call    sub_409b10
push    0
push    0
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40fa60
mov     eax, large fs:0
push    eax
sub     esp, 48h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+var_54], edi
mov     eax, [ebp+arg_4]
mov     edx, [ebp+arg_0]
mov     esi, [edi+4]
mov     ecx, [edi+0ch]
push    eax
push    edx
lea     eax, [ebp+var_2c]
push    eax
mov     [ebp+var_4c], esi
call    sub_40fc70
mov     [ebp+var_4], 0
xor     ebx, ebx
mov     ecx, [edi+0ch]
lea     eax, [ebp+var_45+1]
push    eax
lea     eax, [ebp+var_45]
push    eax
lea     eax, [ebp+var_45+1]
push    eax
mov     byte ptr [ebp+var_45], bl
call    sub_40fc70
cmp     [ebp+var_18], 10h
mov     ecx, [eax+10h]
lea     esi, [ebp+var_2c]
cmovnb  esi, [ebp+var_2c]
cmp     dword ptr [eax+14h], 10h
mov     [ebp+var_50], ecx
jb      short loc_40fae3
mov     eax, [eax]
mov     edi, [ebp+var_1c]
cmp     ecx, edi
mov     edx, edi
cmovb   edx, ecx
test    edx, edx
jz      short loc_40fb49
sub     edx, 4
jb      short loc_40fb07
mov     ecx, [eax]
cmp     ecx, [esi]
jnz     short loc_40fb0c
add     eax, 4
add     esi, 4
sub     edx, 4
jnb     short loc_40faf6
cmp     edx, 0fffffffch
jz      short loc_40fb40
mov     cl, [eax]
cmp     cl, [esi]
jnz     short loc_40fb39
cmp     edx, 0fffffffdh
jz      short loc_40fb40
mov     cl, [eax+1]
cmp     cl, [esi+1]
jnz     short loc_40fb39
cmp     edx, 0fffffffeh
jz      short loc_40fb40
mov     cl, [eax+2]
cmp     cl, [esi+2]
jnz     short loc_40fb39
cmp     edx, 0ffffffffh
jz      short loc_40fb40
mov     al, [eax+3]
cmp     al, [esi+3]
jz      short loc_40fb40
sbb     eax, eax
or      eax, 1
jmp     short loc_40fb42
xor     eax, eax
test    eax, eax
jnz     short loc_40fb5b
mov     ecx, [ebp+var_50]
cmp     ecx, edi
jnb     short loc_40fb52
or      eax, 0ffffffffh
jmp     short loc_40fb59
xor     eax, eax
cmp     ecx, edi
setnz   al
test    eax, eax
setz    al
cmp     [ebp+var_30], 10h
mov     [ebp+var_46], al
jb      short loc_40fb75
push    [ebp+var_45+1]
call    j__free
mov     al, [ebp+var_46]
add     esp, 4
test    al, al
jz      short loc_40fbc0
mov     edi, [ebp+var_4c]
cmp     dword ptr [edi+18h], 0
jnz     short loc_40fbad
push    20h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40fba8
xorps   xmm0, xmm0
movq    qword ptr [eax], xmm0
movq    qword ptr [eax+8], xmm0
movq    qword ptr [eax+10h], xmm0
movq    qword ptr [eax+18h], xmm0
jmp     short loc_40fbaa
xor     eax, eax
mov     [edi+18h], eax
mov     ecx, ebx
mov     edx, ebx
and     ecx, 7
shr     edx, 3
add     edx, [edi+18h]
mov     al, 1
shl     al, cl
or      [edx], al
mov     edi, [ebp+var_54]
inc     ebx
cmp     ebx, 100h
jl      loc_40fab3
cmp     [ebp+var_18], 10h
jb      short loc_40fbe1
push    [ebp+var_2c]
call    j__free
add     esp, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_c]
push    edi
mov     ebx, [esi]
mov     edi, [ebp+arg_8]
test    ebx, ebx
jz      short loc_40fc2b
mov     eax, [esi]
cmp     edi, [eax]
jnb     short loc_40fc21
cmp     dword ptr [eax+10h], 0
lea     esi, [eax+10h]
jnz     short loc_40fc12
mov     ebx, [esi]
test    ebx, ebx
jz      short loc_40fc2b
cmp     edi, [ebx]
jz      short loc_40fc59
push    14h
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_40fc52
mov     [eax], edi
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
jmp     short loc_40fc54
xor     eax, eax
mov     [esi], eax
mov     [eax+10h], ebx
push    [ebp+arg_4]
mov     ecx, [esi]
push    [ebp+arg_0]
add     ecx, 4
call    sub_40ff30
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40e9f0
mov     eax, large fs:0
push    eax
sub     esp, 40h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     esi, [ebp+arg_0]
mov     eax, [ebp+src]
mov     ecx, [ebp+size]
mov     [ebp+var_38], 0
mov     dword ptr [esi+14h], 0fh
mov     dword ptr [esi+10h], 0
mov     [ebp+var_48], esi
mov     byte ptr [esi], 0
mov     [ebp+var_4], 0
mov     [ebp+var_38], 1
cmp     eax, ecx
jz      loc_40fdc7
push    ecx
push    eax
lea     ecx, [ebp+var_44]
mov     [ebp+var_44], 0
mov     [ebp+var_40], 0
mov     [ebp+var_3c], 0
call    sub_40ff90
mov     [ebp+var_4], 1
mov     ecx, [ebp+var_40]
mov     edi, [ebp+var_44]
sub     ecx, edi
cmp     dword ptr [ebx+4], 0
mov     [ebp+var_34], ecx
jnz     short loc_40fd45
lea     eax, [ebp+var_30]
push    eax
mov     ecx, ebx
call    sub_40d4e0
push    eax
mov     byte ptr [ebp+var_4], 2
call    sub_409130
mov     byte ptr [ebp+var_4], 1
mov     ecx, [ebp+var_30]
add     esp, 4
mov     [ebx+4], eax
test    ecx, ecx
jz      short loc_40fd45
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40fd45
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     eax, [ebp+var_34]
mov     ecx, [ebx+4]
add     eax, edi
mov     edx, [ecx]
push    eax
push    edi
call    dword ptr [edx+0ch]
cmp     dword ptr [ebx], 0
jnz     short loc_40fd8f
lea     eax, [ebp+var_30]
push    eax
mov     ecx, ebx
call    sub_40d4e0
push    eax
mov     byte ptr [ebp+var_4], 3
call    sub_40e790
mov     byte ptr [ebp+var_4], 1
mov     ecx, [ebp+var_30]
add     esp, 4
mov     [ebx], eax
test    ecx, ecx
jz      short loc_40fd8f
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_40fd8f
mov     edx, [eax]
push    1
mov     ecx, eax
call    dword ptr [edx]
mov     eax, [ebp+var_34]
mov     ecx, [ebx]
add     eax, edi
push    eax
push    edi
lea     eax, [ebp+block]
push    eax
call    sub_40d2e0
push    eax
mov     ecx, esi
call    sub_405600
cmp     [ebp+var_18], 10h
jb      short loc_40fdba
push    [ebp+block]
call    j__free
add     esp, 4
test    edi, edi
jz      short loc_40fdc7
push    edi
call    j__free
add     esp, 4
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_4]
push    ebx
push    esi
mov     esi, eax
sub     esi, edx
mov     ebx, ecx
mov     [ebp+var_8], esi
jz      loc_40ff0a
push    edi
mov     edi, [ebx+8]
mov     ecx, edi
sub     ecx, [ebx+4]
cmp     ecx, esi
mov     ecx, [ebx+4]
jnb     loc_40fedc
mov     edx, [ebx]
mov     eax, edx
sub     eax, ecx
dec     eax
cmp     eax, esi
jb      loc_40ff12
sub     ecx, edx
sub     edi, edx
mov     edx, edi
shr     edx, 1
or      eax, 0ffffffffh
sub     eax, edx
add     ecx, esi
cmp     eax, edi
jnb     short loc_40fe47
xor     edi, edi
jmp     short loc_40fe49
add     edi, edx
cmp     edi, ecx
cmovb   edi, ecx
xor     ecx, ecx
mov     [ebp+var_4], ecx
test    edi, edi
jz      short loc_40fe76
cmp     edi, 0ffffffffh
ja      loc_40ff1c
push    edi
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
mov     [ebp+var_4], eax
test    ecx, ecx
jz      loc_40ff1c
mov     eax, [ebx]
mov     esi, [ebp+src]
sub     esi, eax
push    esi
push    eax
push    ecx
call    _memmove
push    [ebp+src]
lea     ecx, [eax+esi]
push    [ebp+arg_8]
push    [ebp+arg_4]
call    sub_410000
mov     ecx, [ebp+src]
mov     edx, [ebx+4]
sub     edx, ecx
push    edx
push    ecx
push    eax
call    _memmove
mov     ecx, [ebx]
mov     eax, [ebx+4]
mov     esi, [ebp+var_8]
sub     eax, ecx
add     esp, 24h
add     esi, eax
test    ecx, ecx
jz      short loc_40fec2
push    ecx
call    j__free
add     esp, 4
mov     ecx, [ebp+var_4]
mov     [ebx], ecx
lea     eax, [ecx+edi]
mov     [ebx+8], eax
pop     edi
lea     eax, [ecx+esi]
pop     esi
mov     [ebx+4], eax
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    [ebp+src]
push    eax
push    edx
call    sub_410000
mov     edx, [ebx+4]
mov     ecx, [ebp+src]
add     esp, 0ch
lea     eax, [edx+esi]
cmp     ecx, edx
jz      short loc_40ff06
cmp     edx, eax
jz      short loc_40ff06
sub     esp, 8
push    eax
call    sub_410030
add     esp, 0ch
add     [ebx+4], esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    offset avectorttoolong
call    ?_xlength_error@std@@yaxpbd@z
call    unknown_libname_5
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
cmp     edi, [ebp+arg_4]
jz      short loc_40ff7a
push    ebx
mov     eax, [esi+4]
mov     bl, [edi]
cmp     [esi], eax
ja      short loc_40ff67
add     eax, 10h
push    eax
push    dword ptr [esi+8]
mov     [ebp+arg_0], eax
call    _realloc
add     esp, 8
test    eax, eax
jz      short loc_40ff80
mov     [esi+8], eax
mov     eax, [ebp+arg_0]
mov     [esi], eax
mov     eax, [esi+4]
mov     ecx, [esi+8]
inc     edi
mov     [ecx+eax], bl
inc     dword ptr [esi+4]
cmp     edi, [ebp+arg_4]
jnz     short loc_40ff40
pop     ebx
pop     edi
pop     esi
pop     ebp
retn    8
call    unknown_libname_5
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_40ff90
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     [ebp+var_14], ecx
mov     [ebp+var_4], 0
push    [ebp+size]
push    [ebp+size]
push    [ebp+src]
push    dword ptr [ecx]
call    sub_410100
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+var_14]
call    sub_409b10
push    0
push    0
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_4]
cmp     eax, edx
jz      short loc_410022
push    ebx
mov     edi, edi
test    ecx, ecx
jz      short loc_410018
mov     bl, [eax]
mov     [ecx], bl
inc     eax
inc     ecx
mov     [ebp+arg_0], eax
cmp     eax, edx
jnz     short loc_410010
pop     ebx
mov     eax, ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     edi, edx
mov     edx, ecx
mov     ecx, [ebp+arg_0]
sub     edi, edx
mov     eax, ecx
sub     eax, edx
mov     [ebp+var_4], edx
mov     [ebp+var_14], edi
mov     [ebp+var_10], eax
mov     ebx, eax
mov     [ebp+var_c], eax
mov     esi, edi
test    edi, edi
jz      short loc_410076
lea     ebx, [ebx+0]
mov     eax, ebx
cdq
idiv    esi
mov     ebx, esi
mov     esi, edx
test    edx, edx
jnz     short loc_410060
mov     edx, [ebp+var_4]
mov     eax, [ebp+var_10]
mov     [ebp+var_c], ebx
cmp     ebx, eax
jge     short loc_4100f7
test    ebx, ebx
jle     short loc_4100f7
mov     eax, edx
neg     eax
mov     [ebp+var_1c], eax
mov     eax, edi
neg     eax
mov     [ebp+var_10], eax
mov     eax, ecx
neg     eax
mov     [ebp+var_18], eax
add     ebx, edx
lea     eax, [ebx+edi]
cmp     eax, ecx
cmovz   eax, [ebp+var_4]
mov     edx, ebx
mov     esi, eax
mov     [ebp+var_8], edx
neg     esi
mov     edi, [ebp+var_8]
mov     cl, [eax]
mov     dl, [edx]
mov     [edi], cl
mov     ecx, [ebp+arg_0]
mov     edi, [ebp+var_14]
mov     [eax], dl
add     ecx, esi
mov     edx, eax
mov     [ebp+var_8], edx
cmp     edi, ecx
jge     short loc_4100ca
add     eax, edi
add     esi, [ebp+var_10]
jmp     short loc_4100e4
sub     esi, [ebp+var_18]
mov     edx, [ebp+var_10]
mov     ecx, edi
sub     ecx, [ebp+arg_0]
add     edx, esi
add     ecx, [ebp+var_4]
mov     esi, [ebp+var_1c]
add     eax, ecx
add     esi, edx
mov     edx, [ebp+var_8]
cmp     eax, ebx
jnz     short loc_4100a7
mov     eax, [ebp+var_c]
mov     ecx, [ebp+arg_0]
dec     eax
dec     ebx
mov     [ebp+var_c], eax
test    eax, eax
jg      short loc_410095
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     edx, [ebp+src]
push    ebx
push    esi
mov     esi, [ebp+size]
sub     esi, edx
mov     ebx, ecx
mov     [ebp+size], esi
jz      loc_410210
mov     ecx, [ebx+4]
push    edi
mov     edi, [ebx+8]
mov     eax, edi
sub     eax, ecx
cmp     eax, esi
jnb     loc_4101e4
mov     edx, [ebx]
mov     eax, edx
sub     eax, ecx
dec     eax
cmp     eax, esi
jb      loc_410218
sub     ecx, edx
sub     edi, edx
mov     edx, edi
shr     edx, 1
or      eax, 0ffffffffh
sub     eax, edx
add     ecx, esi
cmp     eax, edi
jnb     short loc_410152
xor     edi, edi
jmp     short loc_410154
add     edi, edx
cmp     edi, ecx
cmovb   edi, ecx
xor     ecx, ecx
mov     [ebp+var_4], ecx
test    edi, edi
jz      short loc_410181
cmp     edi, 0ffffffffh
ja      loc_410222
push    edi
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
mov     [ebp+var_4], eax
test    ecx, ecx
jz      loc_410222
mov     eax, [ebx]
mov     esi, [ebp+arg_0]
sub     esi, eax
push    esi
push    eax
push    ecx
call    _memmove
add     eax, esi
mov     esi, [ebp+size]
push    esi
push    [ebp+src]
push    eax
call    _memmove
mov     ecx, [ebp+arg_0]
mov     edx, [ebx+4]
sub     edx, ecx
push    edx
add     eax, esi
push    ecx
push    eax
call    _memmove
mov     ecx, [ebx]
mov     eax, [ebx+4]
sub     eax, ecx
add     esp, 24h
add     esi, eax
test    ecx, ecx
jz      short loc_4101ca
push    ecx
call    j__free
add     esp, 4
mov     ecx, [ebp+var_4]
mov     [ebx], ecx
lea     eax, [ecx+edi]
mov     [ebx+8], eax
pop     edi
lea     eax, [ecx+esi]
pop     esi
mov     [ebx+4], eax
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    esi
push    edx
push    ecx
call    _memmove
mov     edx, [ebx+4]
mov     ecx, [ebp+arg_0]
add     esp, 0ch
lea     eax, [edx+esi]
cmp     ecx, edx
jz      short loc_41020c
cmp     edx, eax
jz      short loc_41020c
sub     esp, 8
push    eax
call    sub_410030
add     esp, 0ch
add     [ebx+4], esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    offset avectorttoolong
call    ?_xlength_error@std@@yaxpbd@z
call    unknown_libname_5
sub     ecx, [ecx-4]
jmp     sub_406760
sub     ecx, [ecx-4]
jmp     nullsub_1
sub     ecx, [ecx-4]
jmp     sub_4067a0
sub     ecx, [ecx-4]
sub     ecx, 8
jmp     nullsub_1
sub     ecx, [ecx-4]
jmp     sub_406650
sub     ecx, [ecx-4]
sub     ecx, 50h
jmp     nullsub_1
sub     ecx, [ecx-4]
jmp     sub_4066a0
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7bad_alloc@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     dword ptr [ecx], offset ??_7bad_alloc@std@@6b@
jmp     sub_41054f
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7bad_alloc@std@@6b@
call    sub_41054f
test    [ebp+arg_0], 1
jz      short loc_410313
push    esi
call    j__free
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7bad_cast@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
lea     eax, [ebp+arg_0]
push    eax
mov     esi, ecx
call    ??0exception@std@@qae@abqbd@z
mov     dword ptr [esi], offset ??_7bad_cast@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     dword ptr [ecx], offset ??_7exception@std@@6b@
jmp     ?_tidy@exception@std@@aaexxz
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7exception@std@@6b@
call    ?_tidy@exception@std@@aaexxz
test    [ebp+arg_0], 1
jz      short loc_4105ab
push    esi
call    j__free
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
pop     ebp
jmp     $+5
push    ebp
mov     ebp, esp
push    0ah
push    0
push    [ebp+string]
call    _strtol
add     esp, 0ch
pop     ebp
retn
push    0ch
push    offset stru_431638
call    __seh_prolog4
xor     eax, eax
cmp     [ebp+arg_0], eax
setnz   al
test    eax, eax
jnz     short loc_41187b
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     short loc_4118de
call    sub_416bdb
add     eax, 20h
push    eax
push    1
call    __lock_file2
pop     ecx
pop     ecx
and     [ebp+ms_exc.registration.trylevel], 0
call    sub_416bdb
add     eax, 20h
push    eax
call    __stbuf
pop     ecx
mov     esi, eax
lea     eax, [ebp+arg_4]
push    eax
push    0
push    [ebp+arg_0]
call    sub_416bdb
add     eax, 20h
push    eax
call    sub_414215
mov     edi, eax
mov     [ebp+var_1c], edi
call    sub_416bdb
add     eax, 20h
push    eax
push    esi
call    __ftbuf
add     esp, 18h
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_4118e7
mov     eax, edi
call    __seh_epilog4
retn
mov     edi, [ebp+var_1c]
call    sub_416bdb
add     eax, 20h
push    eax
push    1
call    __unlock_file2
pop     ecx
pop     ecx
retn
push    ecx
mov     dword ptr [ecx], offset ??_7type_info@@6b@
call    unknown_libname_4
pop     ecx
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_411a51
test    [ebp+arg_0], 1
jz      short loc_411a95
push    esi
call    j__free
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_43c440, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_43c444, eax
pop     ebp
retn
jmp     short loc_4128f6
jmp     short loc_4136f9
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+stream]
push    edi
push    esi
call    __fileno
pop     ecx
mov     ecx, [esi+0ch]
mov     edi, eax
test    cl, 82h
jnz     short loc_413fbb
call    __errno
mov     dword ptr [eax], 9
or      dword ptr [esi+0ch], 20h
or      eax, 0ffffffffh
jmp     loc_4140d4
test    cl, 40h
jz      short loc_413fcd
call    __errno
mov     dword ptr [eax], 22h
jmp     short loc_413faf
push    ebx
xor     ebx, ebx
test    cl, 1
jz      short loc_413fe8
mov     [esi+4], ebx
test    cl, 10h
jz      short loc_41405a
mov     eax, [esi+8]
and     ecx, 0fffffffeh
mov     [esi], eax
mov     [esi+0ch], ecx
mov     eax, [esi+0ch]
and     eax, 0ffffffefh
or      eax, 2
mov     [esi+0ch], eax
mov     [esi+4], ebx
test    eax, 10ch
jnz     short loc_414028
call    sub_416bdb
add     eax, 20h
cmp     esi, eax
jz      short loc_414016
call    sub_416bdb
add     eax, 40h
cmp     esi, eax
jnz     short loc_414021
push    edi
call    __isatty
pop     ecx
test    eax, eax
jnz     short loc_414028
push    esi
call    __getbuf
pop     ecx
test    dword ptr [esi+0ch], 108h
jz      short loc_4140ab
mov     edx, [esi+8]
mov     ecx, [esi]
lea     eax, [edx+1]
mov     [esi], eax
mov     eax, [esi+18h]
sub     ecx, edx
dec     eax
mov     [ebp+stream], ecx
mov     [esi+4], eax
test    ecx, ecx
jle     short loc_414062
push    ecx
push    edx
push    edi
call    sub_41ca3b
add     esp, 0ch
mov     ebx, eax
jmp     short loc_4140a1
or      ecx, 20h
mov     [esi+0ch], ecx
jmp     short loc_4140ca
cmp     edi, 0ffffffffh
jz      short loc_414082
cmp     edi, 0fffffffeh
jz      short loc_414082
mov     ecx, edi
mov     eax, edi
and     ecx, 1fh
sar     eax, 5
shl     ecx, 6
add     ecx, dword_43c5d0[eax*4]
jmp     short loc_414087
mov     ecx, offset dword_434ab0
test    byte ptr [ecx+4], 20h
jz      short loc_4140a1
push    2
push    ebx
push    ebx
push    edi
call    __lseeki64
and     eax, edx
add     esp, 10h
cmp     eax, 0ffffffffh
jz      short loc_4140c6
mov     ecx, [esi+8]
mov     al, [ebp+arg_0]
mov     [ecx], al
jmp     short loc_4140c1
xor     eax, eax
inc     eax
push    eax
mov     [ebp+stream], eax
lea     eax, [ebp+arg_0]
push    eax
push    edi
call    sub_41ca3b
add     esp, 0ch
mov     ebx, eax
cmp     ebx, [ebp+stream]
jz      short loc_4140cf
or      dword ptr [esi+0ch], 20h
or      eax, 0ffffffffh
jmp     short loc_4140d3
movzx   eax, [ebp+arg_0]
pop     ebx
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 280h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [ebp+arg_c]
push    [ebp+arg_8]
mov     [ebp+stream], eax
xor     eax, eax
mov     ebx, eax
lea     ecx, [ebp+locale]
mov     [ebp+var_210], esi
mov     [ebp+var_21c], edi
mov     [ebp+var_250], eax
mov     [ebp+var_218], ebx
mov     [ebp+var_238], eax
mov     [ebp+var_228], eax
mov     [ebp+var_234], eax
mov     [ebp+var_248], eax
mov     [ebp+var_23c], eax
call    ??0_localeupdate@@qae@paulocaleinfo_struct@@@z
call    __errno
mov     [ebp+var_254], eax
mov     eax, [ebp+stream]
test    eax, eax
jz      loc_414d66
test    byte ptr [eax+0ch], 40h
jnz     short loc_414304
push    eax
call    __fileno
pop     ecx
mov     ecx, eax
cmp     ecx, 0ffffffffh
jz      short loc_4142c8
cmp     ecx, 0fffffffeh
jz      short loc_4142c8
mov     edx, ecx
and     edx, 1fh
sar     eax, 5
shl     edx, 6
add     edx, dword_43c5d0[eax*4]
jmp     short loc_4142cd
mov     edx, offset dword_434ab0
test    byte ptr [edx+24h], 7fh
jnz     loc_414d66
cmp     ecx, 0ffffffffh
jz      short loc_4142f5
cmp     ecx, 0fffffffeh
jz      short loc_4142f5
mov     eax, ecx
and     ecx, 1fh
sar     eax, 5
shl     ecx, 6
add     ecx, dword_43c5d0[eax*4]
jmp     short loc_4142fa
mov     ecx, offset dword_434ab0
test    byte ptr [ecx+24h], 80h
jnz     loc_414d66
test    esi, esi
jz      loc_414d66
mov     cl, [esi]
xor     eax, eax
mov     edx, eax
mov     [ebp+var_220], edx
mov     [ebp+sizeconverted], eax
mov     [ebp+var_244], eax
mov     [ebp+block], eax
mov     [ebp+var_211], cl
mov     [ebp+var_24c], cl
test    cl, cl
jz      loc_414d42
mov     esi, [ebp+var_264]
mov     eax, [ebp+var_210]
inc     eax
mov     [ebp+var_210], eax
test    edx, edx
js      loc_414d42
lea     eax, [ecx-20h]
cmp     al, 58h
ja      short loc_41436f
movsx   eax, cl
movsx   eax, ds:byte_429798[eax]
and     eax, 0fh
jmp     short loc_414371
xor     eax, eax
mov     edi, [ebp+var_244]
movsx   edi, ds:byte_4297b8[edi+eax*8]
mov     eax, edi
sar     eax, 4
mov     [ebp+var_244], edi
mov     edi, [ebp+var_21c]
mov     [ebp+var_244], eax
cmp     eax, 7
ja      def_41439f
jmp     ds:jpt_41439f[eax*4]
xor     eax, eax
or      [ebp+var_228], 0ffffffffh
mov     ebx, eax
mov     [ebp+var_260], eax
mov     [ebp+var_248], eax
mov     [ebp+var_238], eax
mov     [ebp+var_234], eax
mov     [ebp+var_218], ebx
mov     [ebp+var_23c], eax
jmp     def_41439f
movsx   eax, cl
sub     eax, 20h
jz      short loc_414428
sub     eax, 3
jz      short loc_414420
sub     eax, 8
jz      short loc_41441b
dec     eax
dec     eax
jz      short loc_41440d
sub     eax, 3
mov     eax, [ebp+var_210]
jnz     loc_414d2c
or      ebx, 8
mov     [ebp+var_218], ebx
jmp     loc_414d2c
or      ebx, 4
mov     [ebp+var_218], ebx
jmp     def_41439f
or      ebx, 1
jmp     short loc_414410
or      ebx, 80h
jmp     short loc_414410
or      ebx, 2
jmp     short loc_414410
cmp     cl, 2ah
jnz     short loc_414461
mov     eax, [edi]
add     edi, 4
mov     [ebp+var_21c], edi
mov     [ebp+var_238], eax
test    eax, eax
jns     def_41439f
or      ebx, 4
neg     eax
mov     [ebp+var_218], ebx
mov     [ebp+var_238], eax
jmp     def_41439f
mov     eax, [ebp+var_238]
imul    eax, 0ah
mov     [ebp+var_238], eax
movsx   eax, cl
mov     ecx, [ebp+var_238]
add     ecx, 0ffffffd0h
add     ecx, eax
mov     [ebp+var_238], ecx
jmp     def_41439f
xor     eax, eax
mov     [ebp+var_228], eax
jmp     def_41439f
cmp     cl, 2ah
jnz     short loc_4144c6
mov     eax, [edi]
add     edi, 4
mov     [ebp+var_228], eax
test    eax, eax
mov     eax, [ebp+var_210]
mov     [ebp+var_21c], edi
jns     loc_414d2c
or      [ebp+var_228], 0ffffffffh
jmp     loc_414d2c
mov     edx, [ebp+var_228]
imul    edx, 0ah
movsx   eax, cl
add     edx, 0ffffffd0h
add     edx, eax
mov     [ebp+var_228], edx
jmp     loc_414d20
cmp     cl, 49h
jz      short loc_41452c
cmp     cl, 68h
jz      short loc_414524
mov     eax, [ebp+var_210]
cmp     cl, 6ch
jz      short loc_41450b
cmp     cl, 77h
jnz     loc_414d2c
or      ebx, 800h
jmp     loc_414402
cmp     byte ptr [eax], 6ch
jnz     short loc_41451c
inc     eax
or      ebx, 1000h
jmp     loc_414402
or      ebx, 10h
jmp     loc_414402
or      ebx, 20h
jmp     loc_414410
mov     eax, [ebp+var_210]
mov     al, [eax]
cmp     al, 36h
jnz     short loc_414554
mov     edi, [ebp+var_210]
cmp     byte ptr [edi+1], 34h
jnz     short loc_414554
mov     eax, edi
add     eax, 2
or      ebx, 8000h
jmp     loc_414402
cmp     al, 33h
jnz     short loc_414574
mov     edi, [ebp+var_210]
cmp     byte ptr [edi+1], 32h
jnz     short loc_414574
mov     eax, edi
add     eax, 2
and     ebx, 0ffff7fffh
jmp     loc_414402
cmp     al, 64h
jz      def_41439f
cmp     al, 69h
jz      def_41439f
cmp     al, 6fh
jz      def_41439f
cmp     al, 75h
jz      def_41439f
cmp     al, 78h
jz      def_41439f
cmp     al, 58h
jz      def_41439f
xor     eax, eax
mov     [ebp+var_244], eax
jmp     short loc_4145b0
xor     eax, eax
mov     [ebp+var_23c], eax
lea     eax, [ebp+locale]
push    eax
movzx   eax, cl
push    eax
call    __isleadbyte_l
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_414604
lea     eax, [ebp+var_220]
push    eax
push    [ebp+stream]
push    dword ptr [ebp+var_24c]
call    _write_char
mov     ecx, [ebp+var_210]
add     esp, 0ch
mov     al, [ecx]
inc     ecx
mov     [ebp+var_24c], al
mov     [ebp+var_210], ecx
test    al, al
jz      loc_414d66
lea     eax, [ebp+var_220]
push    eax
push    [ebp+stream]
push    dword ptr [ebp+var_24c]
call    _write_char
add     esp, 0ch
jmp     loc_414d20
movsx   eax, cl
cmp     eax, 64h
jg      loc_4147fd
jz      loc_414887
cmp     eax, 53h
jg      loc_41472c
jz      short loc_4146bd
sub     eax, 41h
jz      short loc_414656
dec     eax
dec     eax
jz      short loc_4146a0
dec     eax
dec     eax
jz      short loc_414656
dec     eax
dec     eax
jnz     loc_414b6e
add     cl, 20h
mov     [ebp+var_260], 1
mov     [ebp+var_211], cl
mov     eax, [ebp+var_228]
or      ebx, 40h
mov     edx, 200h
mov     [ebp+var_218], ebx
lea     esi, [ebp+mbch]
mov     [ebp+var_240], edx
test    eax, eax
jns     loc_4148c3
mov     [ebp+var_228], 6
jmp     loc_414920
test    ebx, 830h
jnz     loc_41474a
or      ebx, 800h
mov     [ebp+var_218], ebx
jmp     loc_41474a
test    ebx, 830h
jnz     short loc_4146d1
or      ebx, 800h
mov     [ebp+var_218], ebx
mov     edx, [ebp+var_228]
mov     ecx, 7fffffffh
cmp     edx, 0ffffffffh
jz      short loc_4146e3
mov     ecx, edx
mov     esi, [edi]
add     edi, 4
mov     [ebp+var_21c], edi
test    ebx, 810h
jz      loc_414b4d
test    esi, esi
jnz     short loc_414704
mov     esi, off_434984
mov     [ebp+var_23c], 1
mov     eax, esi
test    ecx, ecx
jz      short loc_414723
xor     edx, edx
dec     ecx
cmp     [eax], dx
jz      short loc_414723
add     eax, 2
test    ecx, ecx
jnz     short loc_414716
sub     eax, esi
sar     eax, 1
jmp     loc_414b68
sub     eax, 58h
jz      loc_4149e5
dec     eax
dec     eax
jz      short loc_4147a9
sub     eax, 7
jz      loc_414669
dec     eax
dec     eax
jnz     loc_414b6e
add     edi, 4
mov     [ebp+var_21c], edi
test    ebx, 810h
jz      short loc_41478b
movzx   eax, word ptr [edi-4]
push    eax
push    200h
lea     eax, [ebp+mbch]
push    eax
lea     eax, [ebp+sizeconverted]
push    eax
call    _wctomb_s
add     esp, 10h
test    eax, eax
jz      short loc_41479e
mov     [ebp+var_248], 1
jmp     short loc_41479e
mov     al, [edi-4]
mov     [ebp+mbch], al
mov     [ebp+sizeconverted], 1
lea     esi, [ebp+mbch]
jmp     loc_414b6e
mov     eax, [edi]
add     edi, 4
mov     [ebp+var_21c], edi
test    eax, eax
jz      short loc_4147eb
mov     esi, [eax+4]
test    esi, esi
jz      short loc_4147eb
movsx   eax, word ptr [eax]
test    ebx, 800h
jz      short loc_4147de
cdq
sub     eax, edx
sar     eax, 1
mov     [ebp+var_23c], 1
jmp     loc_414b68
xor     ecx, ecx
mov     [ebp+var_23c], ecx
jmp     loc_414b68
mov     esi, off_434980
push    esi
call    _strlen
pop     ecx
jmp     loc_414b68
cmp     eax, 70h
jg      loc_4149e9
jz      loc_4149db
cmp     eax, 65h
jl      loc_414b6e
cmp     eax, 67h
jle     loc_414669
cmp     eax, 69h
jz      short loc_414887
cmp     eax, 6eh
jz      short loc_41484d
cmp     eax, 6fh
jnz     loc_414b6e
mov     [ebp+sizeconverted], 8
test    bl, bl
jns     short loc_41489a
or      ebx, 200h
mov     [ebp+var_218], ebx
jmp     short loc_41489a
add     edi, 4
mov     [ebp+var_21c], edi
mov     edi, [edi-4]
call    __get_printf_count_output
test    eax, eax
jz      loc_414d66
mov     eax, [ebp+var_220]
test    bl, 20h
jz      short loc_414876
mov     [edi], ax
jmp     short loc_414878
mov     [edi], eax
mov     [ebp+var_248], 1
jmp     loc_414d01
or      ebx, 40h
mov     [ebp+var_218], ebx
mov     [ebp+sizeconverted], 0ah
test    ebx, 8000h
jnz     short loc_4148ae
test    ebx, 1000h
jz      loc_414a3c
mov     ecx, [edi]
add     edi, 8
mov     [ebp+var_21c], edi
mov     edi, [edi-4]
xor     esi, esi
jmp     loc_414a71
jnz     short loc_4148d6
cmp     cl, 67h
jnz     short loc_414920
mov     [ebp+var_228], 1
jmp     short loc_414920
cmp     eax, edx
jle     short loc_4148e2
mov     eax, edx
mov     [ebp+var_228], eax
cmp     eax, 0a3h
jle     short loc_414920
lea     edi, [eax+15dh]
push    edi
call    __malloc_crt
pop     ecx
mov     cl, [ebp+var_211]
mov     [ebp+block], eax
test    eax, eax
jz      short loc_414910
mov     esi, eax
mov     [ebp+var_240], edi
jmp     short loc_41491a
mov     [ebp+var_228], 0a3h
mov     edi, [ebp+var_21c]
mov     eax, [edi]
add     edi, 8
mov     [ebp+var_280], eax
mov     eax, [edi-4]
mov     [ebp+var_27c], eax
lea     eax, [ebp+locale]
push    eax
push    [ebp+var_260]
movsx   eax, cl
push    [ebp+var_228]
mov     [ebp+var_21c], edi
push    eax
push    [ebp+var_240]
lea     eax, [ebp+var_280]
push    esi
push    eax
push    off_434da8
call    ds:decodepointer
call    eax
mov     edi, ebx
add     esp, 1ch
and     edi, 80h
jz      short loc_41499b
cmp     [ebp+var_228], 0
jnz     short loc_41499b
lea     eax, [ebp+locale]
push    eax
push    esi
push    off_434db4
call    ds:decodepointer
call    eax
pop     ecx
pop     ecx
cmp     [ebp+var_211], 67h
jnz     short loc_4149c0
test    edi, edi
jnz     short loc_4149c0
lea     eax, [ebp+locale]
push    eax
push    esi
push    off_434db0
call    ds:decodepointer
call    eax
pop     ecx
pop     ecx
cmp     byte ptr [esi], 2dh
jnz     loc_4147f1
or      ebx, 100h
mov     [ebp+var_218], ebx
inc     esi
jmp     loc_4147f1
mov     [ebp+var_228], 8
push    7
jmp     short loc_414a05
sub     eax, 73h
jz      loc_4146d1
dec     eax
dec     eax
jz      loc_414890
sub     eax, 3
jnz     loc_414b6e
push    27h
pop     eax
mov     [ebp+var_250], eax
mov     [ebp+sizeconverted], 10h
test    bl, bl
jns     loc_41489a
add     al, 51h
mov     byte ptr [ebp+var_22c], 30h
mov     byte ptr [ebp+var_22c+1], al
mov     [ebp+var_234], 2
jmp     loc_41489a
add     edi, 4
xor     esi, esi
mov     [ebp+var_21c], edi
test    bl, 20h
jz      short loc_414a5d
test    bl, 40h
jz      short loc_414a57
movsx   eax, word ptr [edi-4]
jmp     short loc_414a65
movzx   eax, word ptr [edi-4]
jmp     short loc_414a65
test    bl, 40h
jz      short loc_414a6c
mov     eax, [edi-4]
cdq
mov     ecx, eax
mov     edi, edx
jmp     short loc_414a71
mov     ecx, [edi-4]
mov     edi, esi
test    bl, 40h
jz      short loc_414a92
cmp     edi, esi
jg      short loc_414a92
jl      short loc_414a80
cmp     ecx, esi
jnb     short loc_414a92
neg     ecx
adc     edi, esi
neg     edi
or      ebx, 100h
mov     [ebp+var_218], ebx
test    ebx, 9000h
jnz     short loc_414a9c
mov     edi, esi
mov     edx, [ebp+var_228]
test    edx, edx
jns     short loc_414aab
xor     edx, edx
inc     edx
jmp     short loc_414abf
and     ebx, 0fffffff7h
mov     eax, 200h
mov     [ebp+var_218], ebx
cmp     edx, eax
jle     short loc_414abf
mov     edx, eax
mov     eax, ecx
or      eax, edi
jnz     short loc_414acb
mov     [ebp+var_234], esi
lea     esi, [ebp+var_d]
mov     eax, edx
dec     edx
mov     [ebp+var_228], edx
test    eax, eax
jg      short loc_414ae1
mov     eax, ecx
or      eax, edi
jz      short loc_414b1e
mov     eax, [ebp+sizeconverted]
cdq
push    edx
push    eax
push    edi
push    ecx
call    __aulldvrm
add     ecx, 30h
mov     [ebp+var_264], ebx
mov     [ebp+var_240], eax
mov     edi, edx
cmp     ecx, 39h
jle     short loc_414b0d
add     ecx, [ebp+var_250]
mov     edx, [ebp+var_228]
mov     [esi], cl
mov     ecx, [ebp+var_240]
dec     esi
jmp     short loc_414ace
mov     ebx, [ebp+var_218]
lea     eax, [ebp+var_d]
sub     eax, esi
inc     esi
mov     [ebp+sizeconverted], eax
test    ebx, 200h
jz      short loc_414b6e
test    eax, eax
jz      short loc_414b41
cmp     byte ptr [esi], 30h
jz      short loc_414b6e
dec     esi
inc     [ebp+sizeconverted]
mov     byte ptr [esi], 30h
jmp     short loc_414b6e
test    esi, esi
jnz     short loc_414b57
mov     esi, off_434980
mov     eax, esi
jmp     short loc_414b62
dec     ecx
cmp     byte ptr [eax], 0
jz      short loc_414b66
inc     eax
test    ecx, ecx
jnz     short loc_414b5b
sub     eax, esi
mov     [ebp+sizeconverted], eax
cmp     [ebp+var_248], 0
jnz     loc_414d01
test    bl, 40h
jz      short loc_414bb5
test    ebx, 100h
jz      short loc_414b91
mov     byte ptr [ebp+var_22c], 2dh
jmp     short loc_414bab
test    bl, 1
jz      short loc_414b9f
mov     byte ptr [ebp+var_22c], 2bh
jmp     short loc_414bab
test    bl, 2
jz      short loc_414bb5
mov     byte ptr [ebp+var_22c], 20h
mov     [ebp+var_234], 1
mov     edi, [ebp+var_238]
sub     edi, [ebp+sizeconverted]
mov     eax, [ebp+var_234]
sub     edi, eax
test    bl, 0ch
jnz     short loc_414bec
lea     eax, [ebp+var_220]
push    eax
push    [ebp+stream]
push    edi
push    20h
call    _write_multi_char
mov     eax, [ebp+var_234]
add     esp, 10h
push    [ebp+var_254]
lea     ecx, [ebp+var_220]
push    ecx
push    [ebp+stream]
push    eax
lea     eax, [ebp+var_22c]
push    eax
call    _write_string
add     esp, 14h
test    bl, 8
jz      short loc_414c31
test    bl, 4
jnz     short loc_414c31
lea     eax, [ebp+var_220]
push    eax
push    [ebp+stream]
push    edi
push    30h
call    _write_multi_char
add     esp, 10h
cmp     [ebp+var_23c], 0
mov     eax, [ebp+sizeconverted]
jz      short loc_414cbd
test    eax, eax
jle     short loc_414cbd
mov     ecx, esi
dec     eax
mov     [ebp+var_240], eax
movzx   eax, word ptr [ecx]
push    eax
push    6
lea     eax, [ebp+var_c]
push    eax
lea     eax, [ebp+var_25c]
add     ecx, 2
push    eax
mov     [ebp+var_264], ecx
call    _wctomb_s
add     esp, 10h
test    eax, eax
jnz     short loc_414cb2
cmp     [ebp+var_25c], eax
jz      short loc_414cb2
push    [ebp+var_254]
lea     eax, [ebp+var_220]
push    eax
push    [ebp+stream]
lea     eax, [ebp+var_c]
push    [ebp+var_25c]
push    eax
call    _write_string
mov     eax, [ebp+var_240]
mov     ecx, [ebp+var_264]
add     esp, 14h
test    eax, eax
jnz     short loc_414c46
jmp     short loc_414cda
or      edx, 0ffffffffh
mov     [ebp+var_220], edx
jmp     short loc_414ce0
push    [ebp+var_254]
lea     ecx, [ebp+var_220]
push    ecx
push    [ebp+stream]
push    eax
push    esi
call    _write_string
add     esp, 14h
mov     edx, [ebp+var_220]
test    edx, edx
js      short loc_414d07
test    bl, 4
jz      short loc_414d07
lea     eax, [ebp+var_220]
push    eax
push    [ebp+stream]
push    edi
push    20h
call    _write_multi_char
add     esp, 10h
mov     edx, [ebp+var_220]
mov     eax, [ebp+block]
test    eax, eax
jz      short def_41439f
push    eax
call    _free
xor     eax, eax
pop     ecx
mov     [ebp+block], eax
mov     edx, [ebp+var_220]
mov     eax, [ebp+var_210]
mov     cl, [eax]
mov     [ebp+var_211], cl
mov     [ebp+var_24c], cl
test    cl, cl
jnz     loc_41434a
mov     eax, edx
cmp     [ebp+var_26c], 0
pop     edi
pop     esi
pop     ebx
jz      short loc_414d5a
mov     ecx, [ebp+var_270]
and     dword ptr [ecx+70h], 0fffffffdh
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
leave
retn
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     short loc_414d44
push    10h
push    offset stru_4317e0
call    __seh_prolog4
mov     esi, [ebp+filehandle]
cmp     esi, 0fffffffeh
jnz     short loc_415485
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 9
jmp     loc_41551a
test    esi, esi
js      short loc_415502
cmp     esi, dword_43e254
jnb     short loc_415502
mov     ebx, esi
sar     ebx, 5
mov     edi, esi
and     edi, 1fh
shl     edi, 6
mov     eax, dword_43c5d0[ebx*4]
movsx   eax, byte ptr [eax+edi+4]
and     eax, 1
jz      short loc_415502
push    esi
call    ___lock_fhandle
pop     ecx
and     [ebp+ms_exc.registration.trylevel], 0
mov     eax, dword_43c5d0[ebx*4]
test    byte ptr [eax+edi+4], 1
jz      short loc_4154d3
push    esi
call    __close_nolock
pop     ecx
mov     edi, eax
jmp     short loc_4154e1
call    __errno
mov     dword ptr [eax], 9
or      edi, 0ffffffffh
mov     [ebp+var_1c], edi
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_4154fa
mov     eax, edi
jmp     short loc_41551d
mov     esi, [ebp+filehandle]
mov     edi, [ebp+var_1c]
push    esi
call    __unlock_fhandle
pop     ecx
retn
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 9
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
call    __seh_epilog4
retn
push    2ch
push    offset stru_431800
call    __seh_prolog4
xor     ebx, ebx
mov     [ebp+var_1c], ebx
xor     eax, eax
mov     ecx, [ebp+arg_0]
test    ecx, ecx
setnz   al
test    eax, eax
jnz     short loc_4155fb
call    ___doserrno
mov     [eax], ebx
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_415840
or      dword ptr [ecx+4], 0ffffffffh
or      dword ptr [ecx], 0ffffffffh
mov     edx, [ebp+arg_8]
mov     eax, edx
and     eax, 0ffff3f7fh
neg     eax
sbb     eax, eax
inc     eax
jz      short loc_4155dc
mov     eax, edx
mov     esi, 0c000h
and     eax, esi
xor     ecx, ecx
cmp     eax, esi
setnz   cl
test    ecx, ecx
jz      short loc_4155dc
mov     [ebp+pipeattributes.nlength], 0ch
mov     [ebp+pipeattributes.lpsecuritydescriptor], ebx
test    dl, 80h
push    0
pop     eax
setz    al
mov     [ebp+pipeattributes.binherithandle], eax
push    [ebp+nsize]
lea     eax, [ebp+pipeattributes]
push    eax
lea     eax, [ebp+hwritepipe]
push    eax
lea     eax, [ebp+hreadpipe]
push    eax
call    ds:createpipe
test    eax, eax
jnz     short loc_415665
call    ds:getlasterror
push    eax
call    __dosmaperr
pop     ecx
jmp     short loc_4155f3
call    sub_41e7f2
mov     esi, eax
mov     [ebp+var_20], esi
cmp     esi, 0ffffffffh
jz      loc_415805
mov     [ebp+ms_exc.registration.trylevel], ebx
mov     edx, esi
sar     edx, 5
mov     ecx, esi
and     ecx, 1fh
shl     ecx, 6
mov     eax, dword_43c5d0[edx*4]
mov     byte ptr [eax+ecx+4], 89h
mov     eax, dword_43c5d0[edx*4]
and     byte ptr [eax+ecx+24h], 80h
mov     eax, dword_43c5d0[edx*4]
and     byte ptr [eax+ecx+24h], 7fh
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_4157c4
call    sub_41e7f2
mov     edi, eax
mov     [ebp+var_28], edi
cmp     edi, 0ffffffffh
jz      loc_4157eb
mov     [ebp+var_24], ebx
mov     [ebp+ms_exc.registration.trylevel], 1
mov     edx, edi
sar     edx, 5
mov     ecx, edi
and     ecx, 1fh
shl     ecx, 6
mov     eax, dword_43c5d0[edx*4]
mov     byte ptr [ecx+eax+4], 89h
mov     eax, dword_43c5d0[edx*4]
and     byte ptr [ecx+eax+24h], 80h
mov     eax, dword_43c5d0[edx*4]
and     byte ptr [ecx+eax+24h], 7fh
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_4157d4
lea     eax, [ebp+var_24]
push    eax
call    sub_41eb2c
pop     ecx
test    eax, eax
jnz     loc_4157e1
mov     eax, 8000h
mov     edx, [ebp+arg_8]
test    eax, edx
jnz     short loc_41573d
test    edx, 4000h
jnz     short loc_41576f
cmp     [ebp+var_24], eax
jnz     short loc_41576f
mov     eax, esi
sar     eax, 5
mov     ecx, esi
and     ecx, 1fh
shl     ecx, 6
mov     eax, dword_43c5d0[eax*4]
and     byte ptr [eax+ecx+4], 7fh
mov     eax, edi
sar     eax, 5
mov     ecx, edi
and     ecx, 1fh
shl     ecx, 6
mov     eax, dword_43c5d0[eax*4]
and     byte ptr [eax+ecx+4], 7fh
test    dl, dl
jns     short loc_4157a5
mov     eax, esi
sar     eax, 5
mov     ecx, esi
and     ecx, 1fh
shl     ecx, 6
mov     eax, dword_43c5d0[eax*4]
or      byte ptr [eax+ecx+4], 10h
mov     eax, edi
sar     eax, 5
mov     ecx, edi
and     ecx, 1fh
shl     ecx, 6
mov     eax, dword_43c5d0[eax*4]
or      byte ptr [eax+ecx+4], 10h
push    [ebp+hreadpipe]
push    esi
call    __set_osfhnd
push    [ebp+hwritepipe]
push    edi
call    __set_osfhnd
add     esp, 10h
mov     eax, [ebp+var_1c]
jmp     short loc_41580b
xor     ebx, ebx
mov     esi, [ebp+var_20]
push    esi
call    __unlock_fhandle
pop     ecx
retn
xor     ebx, ebx
mov     esi, [ebp+var_20]
mov     edi, [ebp+var_28]
cmp     edi, 0ffffffffh
jz      short loc_4157e0
push    edi
call    __unlock_fhandle
pop     ecx
retn
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
call    __invoke_watson
mov     eax, esi
sar     eax, 5
mov     ecx, esi
and     ecx, 1fh
shl     ecx, 6
mov     eax, dword_43c5d0[eax*4]
mov     [eax+ecx+4], bl
jmp     short loc_415808
mov     edi, [ebp+var_28]
xor     eax, eax
inc     eax
test    eax, eax
jz      short loc_415836
call    __errno
mov     dword ptr [eax], 18h
push    [ebp+hreadpipe]
mov     esi, ds:closehandle
call    esi
push    [ebp+hwritepipe]
call    esi
call    ___doserrno
mov     [eax], ebx
jmp     loc_4155f3
mov     eax, [ebp+arg_0]
mov     [eax], esi
mov     [eax+4], edi
xor     eax, eax
call    __seh_epilog4
retn
mov     eax, offset off_434af0
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_43cd48, eax
pop     ebp
retn
push    offset ?__cxxunhandledexceptionfilter@@ygjpau_exception_pointers@@@z
call    ___crtsetunhandledexceptionfilter
pop     ecx
xor     eax, eax
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_43c708, eax
pop     ebp
retn
push    esi
push    edi
mov     esi, offset dword_431574
mov     edi, offset dword_431574
jmp     short loc_417700
mov     eax, [esi]
test    eax, eax
jz      short loc_4176fd
call    eax
add     esi, 4
cmp     esi, edi
jb      short loc_4176f5
pop     edi
pop     esi
retn
push    esi
push    edi
mov     esi, offset dword_43157c
mov     edi, offset dword_43157c
jmp     short loc_417720
mov     eax, [esi]
test    eax, eax
jz      short loc_41771d
call    eax
add     esi, 4
cmp     esi, edi
jb      short loc_417715
pop     edi
pop     esi
retn
and     dword_43d234, 0
retn
xor     eax, eax
retn
push    ebp
mov     ebp, esp
push    esi
call    __getptd
mov     esi, eax
push    dword ptr [esi+9ch]
call    _wcslen
sub     eax, 3
neg     eax
sbb     eax, eax
inc     eax
pop     ecx
mov     [esi+0ach], eax
jz      short loc_41c041
push    2
pop     eax
jmp     short loc_41c04d
push    dword ptr [esi+9ch]
call    _getprimarylen_0
pop     ecx
push    1
push    offset sub_41c28b
mov     [esi+0a8h], eax
call    ds:enumsystemlocalesw
mov     eax, [ebp+arg_0]
pop     esi
test    byte ptr [eax], 4
jnz     short loc_41c06c
and     dword ptr [eax], 0
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    esi
movzx   ecx, word ptr [edx]
xor     esi, esi
test    cx, cx
jz      short loc_41c3ae
push    edi
push    5
pop     edi
lea     eax, [ecx-61h]
lea     edx, [edx+2]
cmp     ax, di
ja      short loc_41c38c
add     ecx, 0ffd9h
jmp     short loc_41c39a
lea     eax, [ecx-41h]
cmp     ax, di
ja      short loc_41c39a
add     ecx, 0fff9h
movzx   ecx, cx
add     ecx, 0ffffffd0h
shl     esi, 4
add     esi, ecx
movzx   ecx, word ptr [edx]
test    cx, cx
jnz     short loc_41c379
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
call    __getptd
mov     esi, [ebp+arg_0]
push    2
mov     edi, eax
lea     eax, [ebp+lcdata]
push    eax
mov     ecx, esi
and     ecx, 3ffh
push    20000001h
or      ecx, 400h
push    ecx
call    ds:getlocaleinfow
test    eax, eax
jnz     short loc_41c498
xor     eax, eax
jmp     short loc_41c4c4
cmp     esi, dword ptr [ebp+lcdata]
jz      short loc_41c4c1
cmp     [ebp+arg_4], 0
jz      short loc_41c4c1
push    dword ptr [edi+9ch]
call    _getprimarylen_0
push    dword ptr [edi+9ch]
mov     esi, eax
call    _wcslen
pop     ecx
pop     ecx
cmp     esi, eax
jz      short loc_41c494
xor     eax, eax
inc     eax
pop     edi
pop     esi
leave
retn
push    10h
push    offset stru_4318a8
call    __seh_prolog4
mov     esi, [ebp+arg_0]
cmp     esi, 0fffffffeh
jnz     short loc_41ca67
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 9
jmp     loc_41cb14
test    esi, esi
js      loc_41cafc
cmp     esi, dword_43e254
jnb     loc_41cafc
mov     ebx, esi
sar     ebx, 5
mov     edi, esi
and     edi, 1fh
shl     edi, 6
mov     eax, dword_43c5d0[ebx*4]
movsx   eax, byte ptr [eax+edi+4]
and     eax, 1
jz      short loc_41cafc
push    esi
call    ___lock_fhandle
pop     ecx
and     [ebp+ms_exc.registration.trylevel], 0
mov     eax, dword_43c5d0[ebx*4]
test    byte ptr [eax+edi+4], 1
jz      short loc_41cac5
push    [ebp+nnumberofbytestowrite]
push    [ebp+arg_4]
push    esi
call    sub_41cb1d
add     esp, 0ch
mov     edi, eax
jmp     short loc_41cadb
call    __errno
mov     dword ptr [eax], 9
call    ___doserrno
and     dword ptr [eax], 0
or      edi, 0ffffffffh
mov     [ebp+var_1c], edi
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_41caf4
mov     eax, edi
jmp     short loc_41cb17
mov     esi, [ebp+arg_0]
mov     edi, [ebp+var_1c]
push    esi
call    __unlock_fhandle
pop     ecx
retn
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 9
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
call    __seh_epilog4
retn
push    ebp
mov     ebp, esp
mov     eax, 1af0h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
xor     edx, edx
push    edi
mov     edi, edx
mov     [ebp+filehandle], eax
mov     [ebp+lpbuffer], ecx
mov     dword ptr [ebp+widecharstr], edi
mov     [ebp+var_1ad4], edx
cmp     [ebp+nnumberofbytestowrite], edx
jnz     short loc_41cb63
xor     eax, eax
jmp     loc_41d33a
test    ecx, ecx
jnz     short loc_41cb86
call    ___doserrno
and     [eax], edi
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_41d33a
push    ebx
push    esi
mov     ecx, eax
sar     ecx, 5
mov     esi, eax
and     esi, 1fh
shl     esi, 6
mov     [ebp+var_1ad0], ecx
mov     ecx, dword_43c5d0[ecx*4]
mov     [ebp+var_1aec], esi
mov     bl, [esi+ecx+24h]
add     bl, bl
sar     bl, 1
cmp     bl, 2
jz      short loc_41cbba
cmp     bl, 1
jnz     short loc_41cbe5
mov     eax, [ebp+nnumberofbytestowrite]
not     eax
test    al, 1
jnz     short loc_41cbdf
call    ___doserrno
and     [eax], edi
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
jmp     loc_41d32b
mov     eax, [ebp+filehandle]
test    byte ptr [esi+ecx+4], 20h
jz      short loc_41cbf9
push    2
push    edx
push    edx
push    eax
call    __lseeki64_nolock
add     esp, 10h
push    [ebp+filehandle]
call    __isatty
pop     ecx
test    eax, eax
jz      loc_41cf25
mov     eax, [ebp+var_1ad0]
mov     eax, dword_43c5d0[eax*4]
test    byte ptr [esi+eax+4], 80h
jz      loc_41cf25
call    __getptd
mov     eax, [eax+6ch]
xor     ecx, ecx
cmp     [eax+0a8h], ecx
lea     eax, [ebp+mode]
push    eax
mov     eax, [ebp+var_1ad0]
setz    cl
mov     eax, dword_43c5d0[eax*4]
push    dword ptr [esi+eax]
mov     [ebp+filehandle], ecx
call    ds:getconsolemode
test    eax, eax
jz      loc_41cf25
cmp     [ebp+filehandle], edi
jz      short loc_41cc73
test    bl, bl
jz      loc_41cf25
call    ds:getconsolecp
mov     edx, [ebp+lpbuffer]
and     [ebp+numberofbyteswritten], edi
mov     ecx, edx
mov     [ebp+codepage], eax
mov     [ebp+srcch], ecx
cmp     [ebp+nnumberofbytestowrite], edi
jbe     loc_41cf1a
xor     eax, eax
mov     [ebp+var_1ac8], eax
mov     [ebp+var_1ae8], 0ah
test    bl, bl
jnz     loc_41ce45
mov     cl, [ecx]
xor     eax, eax
cmp     cl, 0ah
setz    al
mov     [ebp+filehandle], eax
mov     eax, [ebp+var_1ad0]
mov     edx, dword_43c5d0[eax*4]
cmp     dword ptr [esi+edx+38h], 0
jz      short loc_41ccf1
mov     al, [esi+edx+34h]
mov     [ebp+multibytestr], al
push    2
lea     eax, [ebp+multibytestr]
mov     [ebp+var_b], cl
and     dword ptr [esi+edx+38h], 0
push    eax
jmp     short loc_41cd4b
movsx   eax, cl
push    eax
call    _isleadbyte
pop     ecx
test    eax, eax
jz      short loc_41cd43
mov     eax, [ebp+lpbuffer]
mov     edx, [ebp+srcch]
sub     eax, edx
add     eax, [ebp+nnumberofbytestowrite]
cmp     eax, 1
jbe     loc_41ceec
push    2
push    edx
lea     eax, [ebp+widecharstr]
push    eax
call    _mbtowc
add     esp, 0ch
cmp     eax, 0ffffffffh
jz      loc_41cf0f
mov     eax, [ebp+srcch]
inc     eax
inc     [ebp+var_1ac8]
jmp     short loc_41cd69
push    1
push    [ebp+srcch]
lea     eax, [ebp+widecharstr]
push    eax
call    _mbtowc
add     esp, 0ch
cmp     eax, 0ffffffffh
jz      loc_41cf0f
mov     eax, [ebp+srcch]
xor     ecx, ecx
push    ecx
push    ecx
inc     eax
inc     [ebp+var_1ac8]
push    5
mov     [ebp+srcch], eax
lea     eax, [ebp+multibytestr]
push    eax
push    1
lea     eax, [ebp+widecharstr]
push    eax
push    ecx
push    [ebp+codepage]
call    ds:widechartomultibyte
mov     [ebp+mode], eax
test    eax, eax
jz      loc_41cf0f
push    0
lea     ecx, [ebp+numberofbyteswritten]
push    ecx
push    eax
lea     eax, [ebp+multibytestr]
push    eax
mov     eax, [ebp+var_1ad0]
mov     eax, dword_43c5d0[eax*4]
push    dword ptr [esi+eax]
call    ds:writefile
test    eax, eax
jz      loc_41d2bb
mov     edi, [ebp+var_1ac8]
mov     eax, [ebp+mode]
add     edi, [ebp+var_1ad4]
cmp     [ebp+numberofbyteswritten], eax
jl      loc_41cf0f
cmp     [ebp+filehandle], 0
jz      loc_41ced5
push    0
lea     eax, [ebp+numberofbyteswritten]
push    eax
push    1
lea     eax, [ebp+multibytestr]
push    eax
mov     eax, [ebp+var_1ad0]
mov     [ebp+multibytestr], 0dh
mov     eax, dword_43c5d0[eax*4]
push    dword ptr [esi+eax]
call    ds:writefile
test    eax, eax
jz      loc_41d2bb
cmp     [ebp+numberofbyteswritten], 1
jl      loc_41cf0f
inc     [ebp+var_1ad4]
inc     edi
jmp     loc_41ced5
cmp     bl, 1
jz      short loc_41ce4f
cmp     bl, 2
jnz     short loc_41ce82
movzx   eax, word ptr [ecx]
xor     edx, edx
cmp     ax, word ptr [ebp+var_1ae8]
mov     dword ptr [ebp+widecharstr], eax
mov     eax, [ebp+var_1ac8]
setz    dl
add     ecx, 2
add     eax, 2
mov     [ebp+srcch], ecx
mov     [ebp+var_1ac8], eax
mov     [ebp+filehandle], edx
cmp     bl, 1
jz      short loc_41ce8c
cmp     bl, 2
jnz     short loc_41cee1
push    dword ptr [ebp+widecharstr]
call    __putwch_nolock
pop     ecx
cmp     ax, [ebp+widecharstr]
jnz     loc_41d2bb
add     edi, 2
cmp     [ebp+filehandle], 0
jz      short loc_41ced5
push    0dh
pop     eax
push    eax
mov     dword ptr [ebp+widecharstr], eax
call    __putwch_nolock
pop     ecx
cmp     ax, [ebp+widecharstr]
jnz     loc_41d2bb
inc     edi
inc     [ebp+var_1ad4]
mov     eax, [ebp+var_1ac8]
mov     ecx, [ebp+srcch]
cmp     eax, [ebp+nnumberofbytestowrite]
jb      loc_41ccae
jmp     short loc_41cf0f
mov     ebx, [ebp+var_1ad0]
mov     al, [edx]
mov     ecx, dword_43c5d0[ebx*4]
inc     edi
mov     [esi+ecx+34h], al
mov     eax, dword_43c5d0[ebx*4]
mov     dword ptr [esi+eax+38h], 1
mov     esi, [ebp+filehandle]
jmp     loc_41d2c3
mov     esi, [ebp+filehandle]
jmp     loc_41d2cd
mov     eax, [ebp+var_1ad0]
mov     eax, dword_43c5d0[eax*4]
test    byte ptr [esi+eax+4], 80h
jz      loc_41d292
mov     edx, [ebp+lpbuffer]
xor     esi, esi
mov     [ebp+var_1ac8], esi
test    bl, bl
jnz     loc_41d034
mov     eax, edx
mov     dword ptr [ebp+widecharstr], eax
cmp     [ebp+nnumberofbytestowrite], esi
jbe     loc_41d2f5
xor     ecx, ecx
sub     eax, edx
mov     edx, dword ptr [ebp+widecharstr]
lea     ebx, [ebp+buffer]
mov     [ebp+filehandle], ecx
cmp     eax, [ebp+nnumberofbytestowrite]
jnb     short loc_41cfc3
mov     cl, [edx]
inc     edx
inc     eax
mov     [ebp+var_1add], cl
cmp     cl, 0ah
mov     ecx, [ebp+filehandle]
mov     dword ptr [ebp+widecharstr], edx
jnz     short loc_41cfa5
inc     [ebp+var_1ad4]
mov     byte ptr [ebx], 0dh
inc     ebx
inc     ecx
mov     dl, [ebp+var_1add]
mov     [ebx], dl
mov     edx, dword ptr [ebp+widecharstr]
inc     ebx
inc     ecx
mov     [ebp+filehandle], ecx
cmp     ecx, 13ffh
jb      short loc_41cf7a
mov     ecx, [ebp+var_1aec]
lea     eax, [ebp+buffer]
sub     ebx, eax
push    0
lea     eax, [ebp+var_1ad8]
push    eax
push    ebx
lea     eax, [ebp+buffer]
push    eax
mov     eax, [ebp+var_1ad0]
mov     eax, dword_43c5d0[eax*4]
push    dword ptr [ecx+eax]
call    ds:writefile
test    eax, eax
jz      loc_41d2bb
add     edi, [ebp+var_1ad8]
mov     edx, [ebp+lpbuffer]
cmp     [ebp+var_1ad8], ebx
jl      loc_41d2c9
mov     eax, dword ptr [ebp+widecharstr]
sub     eax, edx
cmp     eax, [ebp+nnumberofbytestowrite]
mov     eax, dword ptr [ebp+widecharstr]
jb      loc_41cf64
jmp     loc_41d2c9
mov     ecx, edx
cmp     bl, 2
jnz     loc_41d13d
mov     [ebp+filehandle], ecx
cmp     [ebp+nnumberofbytestowrite], esi
jbe     loc_41d2f5
mov     [ebp+var_1ae8], 0ah
and     [ebp+mode], 0
mov     edi, [ebp+var_1ad4]
mov     eax, ecx
sub     eax, edx
mov     edx, [ebp+mode]
lea     ebx, [ebp+buffer]
cmp     eax, [ebp+nnumberofbytestowrite]
jnb     short loc_41d0b8
movzx   esi, word ptr [ecx]
add     ecx, 2
add     eax, 2
mov     [ebp+filehandle], ecx
cmp     si, word ptr [ebp+var_1ae8]
jnz     short loc_41d0a7
push    0dh
pop     ecx
mov     [ebx], cx
mov     ecx, [ebp+filehandle]
add     edi, 2
add     ebx, 2
add     edx, 2
mov     [ebx], si
add     edx, 2
add     ebx, 2
cmp     edx, 13feh
jb      short loc_41d075
mov     ecx, [ebp+var_1aec]
lea     eax, [ebp+buffer]
sub     ebx, eax
push    0
lea     eax, [ebp+var_1ad8]
push    eax
push    ebx
lea     eax, [ebp+buffer]
push    eax
mov     eax, [ebp+var_1ad0]
mov     [ebp+var_1ad4], edi
mov     eax, dword_43c5d0[eax*4]
push    dword ptr [ecx+eax]
call    ds:writefile
mov     esi, [ebp+var_1ac8]
mov     edi, dword ptr [ebp+widecharstr]
test    eax, eax
jz      loc_41d2bb
add     edi, [ebp+var_1ad8]
mov     edx, [ebp+lpbuffer]
mov     dword ptr [ebp+widecharstr], edi
cmp     [ebp+var_1ad8], ebx
jl      loc_41d2c9
mov     ecx, [ebp+filehandle]
mov     eax, ecx
sub     eax, edx
cmp     eax, [ebp+nnumberofbytestowrite]
jb      loc_41d058
jmp     loc_41d2c9
mov     ebx, [ebp+nnumberofbytestowrite]
mov     [ebp+numberofbyteswritten], ecx
test    ebx, ebx
jz      loc_41d2f5
mov     [ebp+var_1ae8], 0ah
and     [ebp+mode], 0
mov     esi, [ebp+numberofbyteswritten]
sub     ecx, edx
mov     edx, [ebp+mode]
lea     eax, [ebp+var_6b8]
cmp     ecx, ebx
jnb     short loc_41d1b2
movzx   edi, word ptr [esi]
add     esi, 2
add     ecx, 2
mov     [ebp+numberofbyteswritten], esi
cmp     di, word ptr [ebp+var_1ae8]
jnz     short loc_41d1a1
push    0dh
pop     esi
mov     [eax], si
mov     esi, [ebp+numberofbyteswritten]
add     eax, 2
add     edx, 2
mov     [eax], di
add     edx, 2
add     eax, 2
cmp     edx, 6a8h
jb      short loc_41d173
xor     esi, esi
push    esi
push    esi
push    0d55h
lea     ecx, [ebp+var_1410]
push    ecx
lea     ecx, [ebp+var_6b8]
sub     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
push    eax
mov     eax, ecx
push    eax
push    esi
push    0fde9h
call    ds:widechartomultibyte
mov     esi, [ebp+var_1ac8]
mov     edi, dword ptr [ebp+widecharstr]
mov     [ebp+srcch], eax
test    eax, eax
jz      loc_41d2bb
xor     ecx, ecx
mov     [ebp+filehandle], ecx
push    0
sub     eax, ecx
lea     edx, [ebp+var_1ad8]
push    edx
push    eax
lea     eax, [ebp+var_1410]
add     eax, ecx
mov     ecx, [ebp+var_1aec]
push    eax
mov     eax, [ebp+var_1ad0]
mov     eax, dword_43c5d0[eax*4]
push    dword ptr [ecx+eax]
call    ds:writefile
test    eax, eax
jz      short loc_41d254
mov     ecx, [ebp+filehandle]
add     ecx, [ebp+var_1ad8]
mov     eax, [ebp+srcch]
mov     [ebp+filehandle], ecx
cmp     eax, ecx
jg      short loc_41d201
jmp     short loc_41d26e
call    ds:getlasterror
mov     ecx, [ebp+filehandle]
mov     esi, eax
mov     eax, [ebp+srcch]
mov     [ebp+var_1ac8], esi
cmp     eax, ecx
jg      short loc_41d2c3
mov     ecx, [ebp+numberofbyteswritten]
mov     edx, [ebp+lpbuffer]
mov     edi, ecx
sub     edi, edx
mov     dword ptr [ebp+widecharstr], edi
cmp     edi, ebx
jb      loc_41d158
jmp     short loc_41d2c9
push    0
lea     ecx, [ebp+var_1ad8]
push    ecx
push    [ebp+nnumberofbytestowrite]
push    [ebp+lpbuffer]
push    dword ptr [esi+eax]
call    ds:writefile
test    eax, eax
jz      short loc_41d2bb
mov     edi, [ebp+var_1ad8]
xor     esi, esi
jmp     short loc_41d2c3
call    ds:getlasterror
mov     esi, eax
mov     edx, [ebp+lpbuffer]
test    edi, edi
jnz     short loc_41d330
test    esi, esi
jz      short loc_41d2f5
push    5
pop     ebx
cmp     esi, ebx
jnz     short loc_41d2ec
call    __errno
mov     dword ptr [eax], 9
call    ___doserrno
mov     [eax], ebx
jmp     short loc_41d32b
push    esi
call    __dosmaperr
pop     ecx
jmp     short loc_41d32b
mov     eax, [ebp+var_1ad0]
mov     ecx, [ebp+var_1aec]
mov     eax, dword_43c5d0[eax*4]
test    byte ptr [ecx+eax+4], 40h
jz      short loc_41d318
cmp     byte ptr [edx], 1ah
jnz     short loc_41d318
xor     eax, eax
jmp     short loc_41d338
call    __errno
mov     dword ptr [eax], 1ch
call    ___doserrno
and     dword ptr [eax], 0
or      eax, 0ffffffffh
jmp     short loc_41d338
sub     edi, [ebp+var_1ad4]
mov     eax, edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     edi
call    @__security_check_cookie@4
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 280h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_4]
push    ebx
xor     eax, eax
push    esi
mov     esi, [ebp+stream]
push    edi
mov     edi, [ebp+arg_c]
push    [ebp+arg_8]
mov     [ebp+var_234], ecx
mov     ebx, eax
lea     ecx, [ebp+locale]
mov     [ebp+var_22c], esi
mov     [ebp+var_218], edi
mov     [ebp+var_254], eax
mov     [ebp+var_214], ebx
mov     [ebp+var_238], eax
mov     [ebp+var_220], eax
mov     [ebp+var_230], eax
mov     [ebp+var_248], eax
mov     [ebp+var_244], eax
call    ??0_localeupdate@@qae@paulocaleinfo_struct@@@z
call    __errno
mov     [ebp+var_258], eax
test    esi, esi
jz      loc_41e00c
test    byte ptr [esi+0ch], 40h
jnz     short loc_41d5e8
push    esi
call    __fileno
pop     ecx
mov     ecx, eax
or      eax, 0ffffffffh
mov     esi, offset dword_434ab0
cmp     ecx, eax
jz      short loc_41d5b3
cmp     ecx, 0fffffffeh
jz      short loc_41d5b3
mov     edx, ecx
and     edx, 1fh
mov     eax, ecx
sar     eax, 5
shl     edx, 6
add     edx, dword_43c5d0[eax*4]
or      eax, 0ffffffffh
jmp     short loc_41d5b5
mov     edx, esi
test    byte ptr [edx+24h], 7fh
jnz     loc_41e00c
cmp     ecx, eax
jz      short loc_41d5dc
cmp     ecx, 0fffffffeh
jz      short loc_41d5dc
mov     eax, ecx
and     ecx, 1fh
sar     eax, 5
shl     ecx, 6
add     ecx, dword_43c5d0[eax*4]
jmp     short loc_41d5de
mov     ecx, esi
test    byte ptr [ecx+24h], 80h
jnz     loc_41e00c
mov     edx, [ebp+var_234]
test    edx, edx
jz      loc_41e00c
xor     ecx, ecx
mov     eax, ecx
mov     [ebp+sizeconverted], ecx
mov     [ebp+var_23c], ecx
mov     [ebp+block], ecx
mov     cl, [edx]
mov     [ebp+var_224], eax
mov     [ebp+var_20d], cl
mov     [ebp+var_24c], cl
test    cl, cl
jz      loc_41e01f
mov     esi, [ebp+var_264]
inc     edx
mov     [ebp+var_234], edx
test    eax, eax
js      loc_41dffd
lea     eax, [ecx-20h]
cmp     al, 58h
ja      short loc_41d653
movsx   eax, cl
movzx   eax, ds:byte_42dbd8[eax]
and     eax, 0fh
jmp     short loc_41d655
xor     eax, eax
mov     edi, [ebp+var_23c]
imul    eax, 9
movzx   edi, ds:byte_42dbf8[eax+edi]
mov     eax, edi
shr     eax, 4
mov     [ebp+var_23c], edi
mov     edi, [ebp+var_218]
mov     [ebp+var_23c], eax
cmp     eax, 8
jz      loc_41e00c
cmp     eax, 7
ja      def_41d68f
jmp     ds:jpt_41d68f[eax*4]
xor     eax, eax
or      [ebp+var_220], 0ffffffffh
mov     ebx, eax
mov     [ebp+var_260], eax
mov     [ebp+var_248], eax
mov     [ebp+var_238], eax
mov     [ebp+var_230], eax
mov     [ebp+var_214], ebx
mov     [ebp+var_244], eax
jmp     def_41d68f
movsx   eax, cl
sub     eax, 20h
jz      short loc_41d700
sub     eax, 3
jz      short loc_41d6f8
sub     eax, 8
jz      short loc_41d6f3
dec     eax
dec     eax
jz      short loc_41d6ee
sub     eax, 3
jnz     def_41d68f
or      ebx, 8
jmp     short loc_41d703
or      ebx, 4
jmp     short loc_41d703
or      ebx, 1
jmp     short loc_41d703
or      ebx, 80h
jmp     short loc_41d703
or      ebx, 2
mov     [ebp+var_214], ebx
jmp     def_41d68f
cmp     cl, 2ah
jnz     short loc_41d742
mov     eax, [edi]
add     edi, 4
mov     [ebp+var_218], edi
mov     [ebp+var_238], eax
test    eax, eax
jns     def_41d68f
or      ebx, 4
neg     eax
mov     [ebp+var_214], ebx
mov     [ebp+var_238], eax
jmp     def_41d68f
mov     eax, [ebp+var_238]
imul    eax, 0ah
mov     [ebp+var_238], eax
movsx   eax, cl
mov     ecx, [ebp+var_238]
add     ecx, 0ffffffd0h
add     ecx, eax
mov     [ebp+var_238], ecx
jmp     def_41d68f
xor     eax, eax
mov     [ebp+var_220], eax
jmp     def_41d68f
cmp     cl, 2ah
jnz     short loc_41d7a1
mov     eax, [edi]
add     edi, 4
mov     [ebp+var_218], edi
mov     [ebp+var_220], eax
test    eax, eax
jns     def_41d68f
or      [ebp+var_220], 0ffffffffh
jmp     def_41d68f
mov     edx, [ebp+var_220]
imul    edx, 0ah
movsx   eax, cl
add     edx, 0ffffffd0h
add     edx, eax
mov     [ebp+var_220], edx
jmp     loc_41dfdb
cmp     cl, 49h
jz      short loc_41d801
cmp     cl, 68h
jz      short loc_41d7f9
cmp     cl, 6ch
jz      short loc_41d7e0
cmp     cl, 77h
jnz     def_41d68f
or      ebx, 800h
jmp     loc_41d703
cmp     byte ptr [edx], 6ch
jnz     short loc_41d7f1
inc     edx
or      ebx, 1000h
jmp     loc_41d703
or      ebx, 10h
jmp     loc_41d703
or      ebx, 20h
jmp     loc_41d703
mov     al, [edx]
cmp     al, 36h
jnz     short loc_41d81b
cmp     byte ptr [edx+1], 34h
jnz     short loc_41d81b
add     edx, 2
or      ebx, 8000h
jmp     loc_41d703
cmp     al, 33h
jnz     short loc_41d833
cmp     byte ptr [edx+1], 32h
jnz     short loc_41d833
add     edx, 2
and     ebx, 0ffff7fffh
jmp     loc_41d703
cmp     al, 64h
jz      def_41d68f
cmp     al, 69h
jz      def_41d68f
cmp     al, 6fh
jz      def_41d68f
cmp     al, 75h
jz      def_41d68f
cmp     al, 78h
jz      def_41d68f
cmp     al, 58h
jz      def_41d68f
xor     eax, eax
mov     [ebp+var_23c], eax
jmp     short loc_41d86f
xor     eax, eax
mov     [ebp+var_244], eax
lea     eax, [ebp+locale]
push    eax
movzx   eax, cl
push    eax
call    __isleadbyte_l
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_41d8c3
lea     eax, [ebp+var_224]
push    eax
push    [ebp+var_22c]
push    dword ptr [ebp+var_24c]
call    _write_char
mov     ecx, [ebp+var_234]
add     esp, 0ch
mov     al, [ecx]
inc     ecx
mov     [ebp+var_24c], al
mov     [ebp+var_234], ecx
test    al, al
jz      loc_41e00c
lea     eax, [ebp+var_224]
push    eax
push    [ebp+var_22c]
push    dword ptr [ebp+var_24c]
call    _write_char
add     esp, 0ch
jmp     loc_41dfdb
movsx   eax, cl
cmp     eax, 64h
jg      loc_41dabc
jz      loc_41db46
cmp     eax, 53h
jg      loc_41d9eb
jz      short loc_41d97c
sub     eax, 41h
jz      short loc_41d915
dec     eax
dec     eax
jz      short loc_41d95f
dec     eax
dec     eax
jz      short loc_41d915
dec     eax
dec     eax
jnz     loc_41de2d
add     cl, 20h
mov     [ebp+var_260], 1
mov     [ebp+var_20d], cl
mov     eax, [ebp+var_220]
or      ebx, 40h
mov     edx, 200h
mov     [ebp+var_214], ebx
lea     esi, [ebp+mbch]
mov     [ebp+var_240], edx
test    eax, eax
jns     loc_41db82
mov     [ebp+var_220], 6
jmp     loc_41dbdf
test    ebx, 830h
jnz     loc_41da09
or      ebx, 800h
mov     [ebp+var_214], ebx
jmp     loc_41da09
test    ebx, 830h
jnz     short loc_41d990
or      ebx, 800h
mov     [ebp+var_214], ebx
mov     edx, [ebp+var_220]
mov     ecx, 7fffffffh
cmp     edx, 0ffffffffh
jz      short loc_41d9a2
mov     ecx, edx
mov     esi, [edi]
add     edi, 4
mov     [ebp+var_218], edi
test    ebx, 810h
jz      loc_41de0c
test    esi, esi
jnz     short loc_41d9c3
mov     esi, off_434984
mov     [ebp+var_244], 1
mov     eax, esi
test    ecx, ecx
jz      short loc_41d9e2
xor     edx, edx
dec     ecx
cmp     [eax], dx
jz      short loc_41d9e2
add     eax, 2
test    ecx, ecx
jnz     short loc_41d9d5
sub     eax, esi
sar     eax, 1
jmp     loc_41de27
sub     eax, 58h
jz      loc_41dca4
dec     eax
dec     eax
jz      short loc_41da68
sub     eax, 7
jz      loc_41d928
dec     eax
dec     eax
jnz     loc_41de2d
add     edi, 4
mov     [ebp+var_218], edi
test    ebx, 810h
jz      short loc_41da4a
movzx   eax, word ptr [edi-4]
push    eax
push    200h
lea     eax, [ebp+mbch]
push    eax
lea     eax, [ebp+sizeconverted]
push    eax
call    _wctomb_s
add     esp, 10h
test    eax, eax
jz      short loc_41da5d
mov     [ebp+var_248], 1
jmp     short loc_41da5d
mov     al, [edi-4]
mov     [ebp+mbch], al
mov     [ebp+sizeconverted], 1
lea     esi, [ebp+mbch]
jmp     loc_41de2d
mov     eax, [edi]
add     edi, 4
mov     [ebp+var_218], edi
test    eax, eax
jz      short loc_41daaa
mov     esi, [eax+4]
test    esi, esi
jz      short loc_41daaa
movsx   eax, word ptr [eax]
test    ebx, 800h
jz      short loc_41da9d
cdq
sub     eax, edx
sar     eax, 1
mov     [ebp+var_244], 1
jmp     loc_41de27
xor     ecx, ecx
mov     [ebp+var_244], ecx
jmp     loc_41de27
mov     esi, off_434980
push    esi
call    _strlen
pop     ecx
jmp     loc_41de27
cmp     eax, 70h
jg      loc_41dca8
jz      loc_41dc9a
cmp     eax, 65h
jl      loc_41de2d
cmp     eax, 67h
jle     loc_41d928
cmp     eax, 69h
jz      short loc_41db46
cmp     eax, 6eh
jz      short loc_41db0c
cmp     eax, 6fh
jnz     loc_41de2d
mov     [ebp+sizeconverted], 8
test    bl, bl
jns     short loc_41db59
or      ebx, 200h
mov     [ebp+var_214], ebx
jmp     short loc_41db59
add     edi, 4
mov     [ebp+var_218], edi
mov     edi, [edi-4]
call    __get_printf_count_output
test    eax, eax
jz      loc_41e00c
mov     eax, [ebp+var_224]
test    bl, 20h
jz      short loc_41db35
mov     [edi], ax
jmp     short loc_41db37
mov     [edi], eax
mov     [ebp+var_248], 1
jmp     loc_41dfc0
or      ebx, 40h
mov     [ebp+var_214], ebx
mov     [ebp+sizeconverted], 0ah
test    ebx, 8000h
jnz     short loc_41db6d
test    ebx, 1000h
jz      loc_41dcfb
mov     ecx, [edi]
add     edi, 8
mov     [ebp+var_218], edi
mov     edi, [edi-4]
xor     esi, esi
jmp     loc_41dd30
jnz     short loc_41db95
cmp     cl, 67h
jnz     short loc_41dbdf
mov     [ebp+var_220], 1
jmp     short loc_41dbdf
cmp     eax, edx
jle     short loc_41dba1
mov     eax, edx
mov     [ebp+var_220], eax
cmp     eax, 0a3h
jle     short loc_41dbdf
lea     edi, [eax+15dh]
push    edi
call    __malloc_crt
pop     ecx
mov     cl, [ebp+var_20d]
mov     [ebp+block], eax
test    eax, eax
jz      short loc_41dbcf
mov     esi, eax
mov     [ebp+var_240], edi
jmp     short loc_41dbd9
mov     [ebp+var_220], 0a3h
mov     edi, [ebp+var_218]
mov     eax, [edi]
add     edi, 8
mov     [ebp+var_280], eax
mov     eax, [edi-4]
mov     [ebp+var_27c], eax
lea     eax, [ebp+locale]
push    eax
push    [ebp+var_260]
movsx   eax, cl
push    [ebp+var_220]
mov     [ebp+var_218], edi
push    eax
push    [ebp+var_240]
lea     eax, [ebp+var_280]
push    esi
push    eax
push    off_434da8
call    ds:decodepointer
call    eax
mov     edi, ebx
add     esp, 1ch
and     edi, 80h
jz      short loc_41dc5a
cmp     [ebp+var_220], 0
jnz     short loc_41dc5a
lea     eax, [ebp+locale]
push    eax
push    esi
push    off_434db4
call    ds:decodepointer
call    eax
pop     ecx
pop     ecx
cmp     [ebp+var_20d], 67h
jnz     short loc_41dc7f
test    edi, edi
jnz     short loc_41dc7f
lea     eax, [ebp+locale]
push    eax
push    esi
push    off_434db0
call    ds:decodepointer
call    eax
pop     ecx
pop     ecx
cmp     byte ptr [esi], 2dh
jnz     loc_41dab0
or      ebx, 100h
mov     [ebp+var_214], ebx
inc     esi
jmp     loc_41dab0
mov     [ebp+var_220], 8
push    7
jmp     short loc_41dcc4
sub     eax, 73h
jz      loc_41d990
dec     eax
dec     eax
jz      loc_41db4f
sub     eax, 3
jnz     loc_41de2d
push    27h
pop     eax
mov     [ebp+var_254], eax
mov     [ebp+sizeconverted], 10h
test    bl, bl
jns     loc_41db59
add     al, 51h
mov     byte ptr [ebp+var_228], 30h
mov     byte ptr [ebp+var_228+1], al
mov     [ebp+var_230], 2
jmp     loc_41db59
add     edi, 4
xor     esi, esi
mov     [ebp+var_218], edi
test    bl, 20h
jz      short loc_41dd1c
test    bl, 40h
jz      short loc_41dd16
movsx   eax, word ptr [edi-4]
jmp     short loc_41dd24
movzx   eax, word ptr [edi-4]
jmp     short loc_41dd24
test    bl, 40h
jz      short loc_41dd2b
mov     eax, [edi-4]
cdq
mov     ecx, eax
mov     edi, edx
jmp     short loc_41dd30
mov     ecx, [edi-4]
mov     edi, esi
test    bl, 40h
jz      short loc_41dd51
cmp     edi, esi
jg      short loc_41dd51
jl      short loc_41dd3f
cmp     ecx, esi
jnb     short loc_41dd51
neg     ecx
adc     edi, esi
neg     edi
or      ebx, 100h
mov     [ebp+var_214], ebx
test    ebx, 9000h
jnz     short loc_41dd5b
mov     edi, esi
mov     edx, [ebp+var_220]
test    edx, edx
jns     short loc_41dd6a
xor     edx, edx
inc     edx
jmp     short loc_41dd7e
and     ebx, 0fffffff7h
mov     eax, 200h
mov     [ebp+var_214], ebx
cmp     edx, eax
jle     short loc_41dd7e
mov     edx, eax
mov     eax, ecx
or      eax, edi
jnz     short loc_41dd8a
mov     [ebp+var_230], esi
lea     esi, [ebp+var_d]
mov     eax, edx
dec     edx
mov     [ebp+var_220], edx
test    eax, eax
jg      short loc_41dda0
mov     eax, ecx
or      eax, edi
jz      short loc_41dddd
mov     eax, [ebp+sizeconverted]
cdq
push    edx
push    eax
push    edi
push    ecx
call    __aulldvrm
add     ecx, 30h
mov     [ebp+var_264], ebx
mov     [ebp+var_240], eax
mov     edi, edx
cmp     ecx, 39h
jle     short loc_41ddcc
add     ecx, [ebp+var_254]
mov     edx, [ebp+var_220]
mov     [esi], cl
mov     ecx, [ebp+var_240]
dec     esi
jmp     short loc_41dd8d
mov     ebx, [ebp+var_214]
lea     eax, [ebp+var_d]
sub     eax, esi
inc     esi
mov     [ebp+sizeconverted], eax
test    ebx, 200h
jz      short loc_41de2d
test    eax, eax
jz      short loc_41de00
cmp     byte ptr [esi], 30h
jz      short loc_41de2d
dec     esi
inc     [ebp+sizeconverted]
mov     byte ptr [esi], 30h
jmp     short loc_41de2d
test    esi, esi
jnz     short loc_41de16
mov     esi, off_434980
mov     eax, esi
jmp     short loc_41de21
dec     ecx
cmp     byte ptr [eax], 0
jz      short loc_41de25
inc     eax
test    ecx, ecx
jnz     short loc_41de1a
sub     eax, esi
mov     [ebp+sizeconverted], eax
cmp     [ebp+var_248], 0
jnz     loc_41dfc0
test    bl, 40h
jz      short loc_41de74
test    ebx, 100h
jz      short loc_41de50
mov     byte ptr [ebp+var_228], 2dh
jmp     short loc_41de6a
test    bl, 1
jz      short loc_41de5e
mov     byte ptr [ebp+var_228], 2bh
jmp     short loc_41de6a
test    bl, 2
jz      short loc_41de74
mov     byte ptr [ebp+var_228], 20h
mov     [ebp+var_230], 1
mov     edi, [ebp+var_238]
sub     edi, [ebp+sizeconverted]
mov     eax, [ebp+var_230]
sub     edi, eax
test    bl, 0ch
jnz     short loc_41deab
lea     eax, [ebp+var_224]
push    eax
push    [ebp+var_22c]
push    edi
push    20h
call    _write_multi_char
mov     eax, [ebp+var_230]
add     esp, 10h
push    [ebp+var_258]
lea     ecx, [ebp+var_224]
push    ecx
push    [ebp+var_22c]
push    eax
lea     eax, [ebp+var_228]
push    eax
call    _write_string
add     esp, 14h
test    bl, 8
jz      short loc_41def0
test    bl, 4
jnz     short loc_41def0
lea     eax, [ebp+var_224]
push    eax
push    [ebp+var_22c]
push    edi
push    30h
call    _write_multi_char
add     esp, 10h
cmp     [ebp+var_244], 0
mov     eax, [ebp+sizeconverted]
jz      short loc_41df7c
test    eax, eax
jle     short loc_41df7c
mov     ecx, esi
dec     eax
mov     [ebp+var_240], eax
movzx   eax, word ptr [ecx]
push    eax
push    6
lea     eax, [ebp+var_c]
push    eax
lea     eax, [ebp+var_25c]
add     ecx, 2
push    eax
mov     [ebp+var_264], ecx
call    _wctomb_s
add     esp, 10h
test    eax, eax
jnz     short loc_41df71
cmp     [ebp+var_25c], eax
jz      short loc_41df71
push    [ebp+var_258]
lea     eax, [ebp+var_224]
push    eax
push    [ebp+var_22c]
lea     eax, [ebp+var_c]
push    [ebp+var_25c]
push    eax
call    _write_string
mov     eax, [ebp+var_240]
mov     ecx, [ebp+var_264]
add     esp, 14h
test    eax, eax
jnz     short loc_41df05
jmp     short loc_41df99
or      eax, 0ffffffffh
mov     [ebp+var_224], eax
jmp     short loc_41df9f
push    [ebp+var_258]
lea     ecx, [ebp+var_224]
push    ecx
push    [ebp+var_22c]
push    eax
push    esi
call    _write_string
add     esp, 14h
mov     eax, [ebp+var_224]
test    eax, eax
js      short loc_41dfc0
test    bl, 4
jz      short loc_41dfc0
lea     eax, [ebp+var_224]
push    eax
push    [ebp+var_22c]
push    edi
push    20h
call    _write_multi_char
add     esp, 10h
mov     eax, [ebp+block]
test    eax, eax
jz      short loc_41dfdb
push    eax
call    _free
xor     eax, eax
pop     ecx
mov     ecx, eax
mov     [ebp+block], ecx
mov     edx, [ebp+var_234]
mov     cl, [edx]
mov     eax, [ebp+var_224]
mov     [ebp+var_20d], cl
mov     [ebp+var_24c], cl
test    cl, cl
jnz     loc_41d62e
mov     ecx, [ebp+var_23c]
test    ecx, ecx
jz      short loc_41e01f
cmp     ecx, 7
jz      short loc_41e01f
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
cmp     [ebp+var_26c], 0
pop     edi
pop     esi
pop     ebx
jz      short loc_41e035
mov     ecx, [ebp+var_270]
and     dword ptr [ecx+70h], 0fffffffdh
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
leave
retn
push    1
call    _flsall
pop     ecx
retn
push    18h
push    offset stru_431930
call    __seh_prolog4
or      esi, 0ffffffffh
mov     [ebp+var_1c], esi
and     [ebp+var_24], 0
push    0bh
call    __mtinitlocknum
pop     ecx
test    eax, eax
jnz     short loc_41e81b
or      eax, esi
jmp     loc_41e985
push    0bh
call    __lock
pop     ecx
and     [ebp+ms_exc.registration.trylevel], 0
xor     ebx, ebx
mov     [ebp+var_28], ebx
cmp     ebx, 40h
jge     loc_41e977
mov     edi, dword_43c5d0[ebx*4]
test    edi, edi
jz      loc_41e8fe
mov     [ebp+var_20], edi
mov     eax, dword_43c5d0[ebx*4]
add     eax, 800h
cmp     edi, eax
jnb     loc_41e8f3
test    byte ptr [edi+4], 1
jnz     short loc_41e8b8
cmp     dword ptr [edi+8], 0
jnz     short loc_41e897
push    0ah
call    __lock
pop     ecx
mov     [ebp+ms_exc.registration.trylevel], 1
cmp     dword ptr [edi+8], 0
jnz     short loc_41e88e
push    0fa0h
lea     eax, [edi+0ch]
push    eax
call    ds:initializecriticalsectionandspincount
inc     dword ptr [edi+8]
and     [ebp+ms_exc.registration.trylevel], 0
call    loc_41e8c6
mov     eax, [ebp+var_24]
test    eax, eax
jnz     short loc_41e8b8
lea     eax, [edi+0ch]
push    eax
call    ds:entercriticalsection
test    byte ptr [edi+4], 1
jz      short loc_41e8cf
lea     eax, [edi+0ch]
push    eax
call    ds:leavecriticalsection
add     edi, 40h
jmp     short loc_41e844
mov     esi, [ebp+var_1c]
mov     ebx, [ebp+var_28]
mov     edi, [ebp+var_20]
push    0ah
call    __unlock
pop     ecx
retn
mov     eax, [ebp+var_24]
test    eax, eax
jnz     short loc_41e8b8
mov     byte ptr [edi+4], 1
or      dword ptr [edi], 0ffffffffh
mov     esi, edi
sub     esi, dword_43c5d0[ebx*4]
sar     esi, 6
mov     eax, ebx
shl     eax, 5
add     esi, eax
mov     [ebp+var_1c], esi
cmp     esi, 0ffffffffh
jnz     short loc_41e977
inc     ebx
jmp     loc_41e829
push    40h
push    20h
call    __calloc_crt
pop     ecx
pop     ecx
mov     ecx, eax
mov     [ebp+var_20], ecx
test    ecx, ecx
jz      short loc_41e977
mov     dword_43c5d0[ebx*4], ecx
add     dword_43e254, 20h
mov     eax, dword_43c5d0[ebx*4]
add     eax, 800h
cmp     ecx, eax
jnb     short loc_41e945
mov     word ptr [ecx+4], 0a00h
or      dword ptr [ecx], 0ffffffffh
and     dword ptr [ecx+8], 0
add     ecx, 40h
mov     [ebp+var_20], ecx
jmp     short loc_41e920
mov     esi, ebx
shl     esi, 5
mov     [ebp+var_1c], esi
mov     eax, esi
sar     eax, 5
mov     ecx, esi
and     ecx, 1fh
shl     ecx, 6
mov     eax, dword_43c5d0[eax*4]
mov     byte ptr [eax+ecx+4], 1
push    esi
call    ___lock_fhandle
pop     ecx
test    eax, eax
jnz     short loc_41e977
or      esi, 0ffffffffh
mov     [ebp+var_1c], esi
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_41e98e
mov     eax, esi
call    __seh_epilog4
retn
mov     esi, [ebp+var_1c]
push    0bh
call    __unlock
pop     ecx
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
test    ecx, ecx
jnz     short loc_41eb4b
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
push    16h
pop     eax
pop     ebp
retn
mov     eax, dword_43ced8
mov     [ecx], eax
xor     eax, eax
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_43ce70, eax
pop     ebp
retn
push    dword_43ce7c
call    ds:decodepointer
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, ds:encodepointer
push    esi
push    edi
mov     [ebp+lpoutputstring], eax
mov     eax, [ebp+arg_4]
xor     edi, edi
push    edi
mov     [ebp+var_20], eax
call    ebx
mov     esi, eax
mov     [ebp+var_18], esi
call    ___crtispackagedapp
mov     [ebp+var_14], eax
cmp     dword_43ce88, edi
jnz     loc_41f48a
push    800h
push    edi
push    offset libfilename
call    ds:loadlibraryexw
mov     esi, eax
test    esi, esi
jnz     short loc_41f417
call    ds:getlasterror
cmp     eax, 57h
jnz     loc_41f56a
push    offset libfilename
call    ds:loadlibraryw
mov     esi, eax
test    esi, esi
jz      loc_41f56a
push    offset amessageboxw
push    esi
call    ds:getprocaddress
test    eax, eax
jz      loc_41f56a
push    eax
call    ebx
push    offset agetactivewindo
push    esi
mov     dword_43ce88, eax
call    ds:getprocaddress
push    eax
call    ebx
push    offset agetlastactivep
push    esi
mov     dword_43ce8c, eax
call    ds:getprocaddress
push    eax
call    ebx
push    offset agetuserobjecti
push    esi
mov     dword_43ce90, eax
call    ds:getprocaddress
push    eax
call    ebx
mov     dword_43ce98, eax
test    eax, eax
jz      short loc_41f487
push    offset agetprocesswind
push    esi
call    ds:getprocaddress
push    eax
call    ebx
mov     dword_43ce94, eax
mov     esi, [ebp+var_18]
call    ds:isdebuggerpresent
test    eax, eax
jz      short loc_41f4af
mov     eax, [ebp+lpoutputstring]
test    eax, eax
jz      short loc_41f4a2
push    eax
call    ds:outputdebugstringw
cmp     [ebp+var_14], edi
jz      short loc_41f4c4
push    4
pop     eax
jmp     loc_41f56c
cmp     [ebp+var_14], edi
jz      short loc_41f4c4
push    dword_43ce88
call    ds:decodepointer
push    3
jmp     short loc_41f4a9
mov     eax, dword_43ce94
mov     ebx, ds:decodepointer
cmp     eax, esi
jz      short loc_41f522
cmp     dword_43ce98, esi
jz      short loc_41f522
push    eax
call    ebx
push    dword_43ce98
mov     [ebp+var_14], eax
call    ebx
mov     ecx, [ebp+var_14]
mov     [ebp+var_18], eax
test    ecx, ecx
jz      short loc_41f522
test    eax, eax
jz      short loc_41f522
call    ecx
test    eax, eax
jz      short loc_41f517
lea     ecx, [ebp+var_24]
push    ecx
push    0ch
lea     ecx, [ebp+var_10]
push    ecx
push    1
push    eax
call    [ebp+var_18]
test    eax, eax
jz      short loc_41f517
test    [ebp+var_8], 1
jnz     short loc_41f522
mov     esi, [ebp+arg_8]
or      esi, 200000h
jmp     short loc_41f552
mov     eax, dword_43ce8c
cmp     eax, esi
jz      short loc_41f54f
push    eax
call    ebx
test    eax, eax
jz      short loc_41f54f
call    eax
mov     edi, eax
test    edi, edi
jz      short loc_41f54f
mov     eax, dword_43ce90
cmp     eax, esi
jz      short loc_41f54f
push    eax
call    ebx
test    eax, eax
jz      short loc_41f54f
push    edi
call    eax
mov     edi, eax
mov     esi, [ebp+arg_8]
push    dword_43ce88
call    ebx
test    eax, eax
jz      short loc_41f56a
push    esi
push    [ebp+var_20]
push    [ebp+lpoutputstring]
push    edi
call    eax
jmp     short loc_41f56c
xor     eax, eax
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
push    10h
push    offset stru_4319f8
call    __seh_prolog4
mov     esi, [ebp+filehandle]
cmp     esi, 0fffffffeh
jnz     short loc_41f5e0
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 9
jmp     loc_41f6b3
test    esi, esi
js      loc_41f69b
cmp     esi, dword_43e254
jnb     loc_41f69b
mov     ebx, esi
sar     ebx, 5
mov     edi, esi
and     edi, 1fh
shl     edi, 6
mov     eax, dword_43c5d0[ebx*4]
movsx   eax, byte ptr [eax+edi+4]
and     eax, 1
jz      loc_41f69b
mov     eax, 7fffffffh
cmp     eax, [ebp+nnumberofbytestoread]
sbb     eax, eax
inc     eax
jnz     short loc_41f638
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 16h
jmp     short loc_41f6ae
push    esi
call    ___lock_fhandle
pop     ecx
and     [ebp+ms_exc.registration.trylevel], 0
mov     eax, dword_43c5d0[ebx*4]
test    byte ptr [eax+edi+4], 1
jz      short loc_41f664
push    [ebp+nnumberofbytestoread]
push    [ebp+lpwidecharstr]
push    esi
call    sub_41f6bc
add     esp, 0ch
mov     edi, eax
jmp     short loc_41f67a
call    __errno
mov     dword ptr [eax], 9
call    ___doserrno
and     dword ptr [eax], 0
or      edi, 0ffffffffh
mov     [ebp+var_1c], edi
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_41f693
mov     eax, edi
jmp     short loc_41f6b6
mov     esi, [ebp+filehandle]
mov     edi, [ebp+var_1c]
push    esi
call    __unlock_fhandle
pop     ecx
retn
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 9
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
call    __seh_epilog4
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, [ebp+filehandle]
push    ebx
push    esi
mov     esi, [ebp+nnumberofbytestoread]
push    edi
push    0fffffffeh
pop     ecx
xor     edi, edi
mov     [ebp+mode], edi
mov     [ebp+var_18], ecx
mov     [ebp+var_28], esi
cmp     eax, ecx
jnz     short loc_41f6f4
call    ___doserrno
mov     [eax], edi
call    __errno
mov     dword ptr [eax], 9
jmp     loc_41fe43
test    eax, eax
js      loc_41fe2c
cmp     eax, dword_43e254
jnb     loc_41fe2c
mov     ecx, eax
sar     ecx, 5
mov     ebx, eax
mov     edx, dword_43c5d0[ecx*4]
and     ebx, 1fh
shl     ebx, 6
mov     [ebp+var_c], ecx
mov     al, [edx+ebx+4]
mov     [ebp+var_24], ebx
test    al, 1
jz      loc_41fe2c
cmp     esi, 7fffffffh
jbe     short loc_41f74d
call    ___doserrno
mov     [eax], edi
call    __errno
mov     dword ptr [eax], 16h
jmp     loc_41fe3e
test    esi, esi
jz      loc_41fe28
test    al, 2
jnz     loc_41fe28
cmp     [ebp+lpwidecharstr], edi
jnz     short loc_41f76b
call    ___doserrno
and     [eax], edi
jmp     short loc_41f73d
mov     al, [edx+ebx+24h]
add     al, al
sar     al, 1
mov     byte ptr [ebp+nnumberofbytestoread+3], al
movsx   eax, al
dec     eax
jz      short loc_41f792
dec     eax
jnz     short loc_41f78a
mov     eax, esi
not     eax
test    al, 1
jz      short loc_41f762
and     esi, 0fffffffeh
mov     eax, [ebp+lpwidecharstr]
mov     [ebp+lpmultibytestr], eax
jmp     short loc_41f7f6
mov     eax, esi
not     eax
test    al, 1
jz      short loc_41f762
shr     esi, 1
cmp     esi, 4
jnb     short loc_41f7a4
push    4
pop     esi
push    esi
call    __malloc_crt
pop     ecx
mov     [ebp+lpmultibytestr], eax
test    eax, eax
jnz     short loc_41f7cd
call    __errno
mov     dword ptr [eax], 0ch
call    ___doserrno
mov     dword ptr [eax], 8
jmp     loc_41fe43
push    1
push    0
push    0
push    [ebp+filehandle]
call    __lseeki64_nolock
mov     ecx, [ebp+var_c]
add     esp, 10h
mov     ecx, dword_43c5d0[ecx*4]
mov     [ecx+ebx+28h], eax
mov     eax, [ebp+lpmultibytestr]
mov     [ecx+ebx+2ch], edx
mov     ecx, [ebp+var_c]
mov     edx, dword_43c5d0[ecx*4]
mov     ecx, [ebp+var_c]
test    byte ptr [edx+ebx+4], 48h
mov     [ebp+lpbuffer], eax
jz      loc_41f893
mov     dl, [edx+ebx+5]
cmp     dl, 0ah
jz      short loc_41f893
test    esi, esi
jz      short loc_41f893
mov     [eax], dl
xor     edi, edi
lea     edx, [eax+1]
mov     eax, dword_43c5d0[ecx*4]
inc     edi
dec     esi
cmp     byte ptr [ebp+nnumberofbytestoread+3], 0
mov     [ebp+lpbuffer], edx
mov     byte ptr [eax+ebx+5], 0ah
jz      short loc_41f893
mov     eax, dword_43c5d0[ecx*4]
mov     al, [eax+ebx+25h]
cmp     al, 0ah
jz      short loc_41f893
test    esi, esi
jz      short loc_41f893
mov     [edx], al
mov     eax, dword_43c5d0[ecx*4]
inc     edx
push    2
dec     esi
cmp     byte ptr [ebp+nnumberofbytestoread+3], 1
mov     [ebp+lpbuffer], edx
pop     edi
mov     byte ptr [eax+ebx+25h], 0ah
jnz     short loc_41f893
mov     eax, dword_43c5d0[ecx*4]
mov     al, [eax+ebx+26h]
cmp     al, 0ah
jz      short loc_41f893
test    esi, esi
jz      short loc_41f893
push    3
pop     edi
mov     [edx], al
mov     eax, dword_43c5d0[ecx*4]
push    0ah
inc     edx
pop     ecx
mov     [ebp+lpbuffer], edx
dec     esi
mov     [eax+ebx+26h], cl
push    [ebp+filehandle]
call    __isatty
test    eax, eax
mov     eax, [ebp+var_c]
pop     ecx
jz      short loc_41f914
mov     ecx, dword_43c5d0[eax*4]
test    byte ptr [ecx+ebx+4], 80h
jz      short loc_41f914
lea     eax, [ebp+mode]
push    eax
push    dword ptr [ecx+ebx]
call    ds:getconsolemode
mov     [ebp+mode], eax
test    eax, eax
jz      short loc_41f911
cmp     byte ptr [ebp+nnumberofbytestoread+3], 2
jnz     short loc_41f911
push    0
lea     eax, [ebp+numberofcharsread]
push    eax
mov     eax, [ebp+var_c]
shr     esi, 1
mov     eax, dword_43c5d0[eax*4]
push    esi
push    [ebp+lpbuffer]
push    dword ptr [eax+ebx]
call    ds:readconsolew
test    eax, eax
jnz     short loc_41f906
call    ds:getlasterror
push    eax
call    __dosmaperr
pop     ecx
or      ebx, 0ffffffffh
mov     eax, [ebp+lpmultibytestr]
jmp     loc_41fbbe
mov     eax, [ebp+numberofcharsread]
lea     ecx, [eax+eax]
mov     [ebp+numberofcharsread], ecx
jmp     short loc_41f949
mov     eax, [ebp+var_c]
mov     eax, dword_43c5d0[eax*4]
push    0
lea     ecx, [ebp+numberofcharsread]
push    ecx
push    esi
push    [ebp+lpbuffer]
push    dword ptr [eax+ebx]
call    ds:readfile
test    eax, eax
jz      loc_41fdf4
mov     ecx, [ebp+numberofcharsread]
test    ecx, ecx
js      loc_41fdf4
cmp     ecx, esi
ja      loc_41fdf4
mov     edx, [ebp+var_c]
add     edi, ecx
mov     esi, dword_43c5d0[edx*4]
mov     al, [esi+ebx+4]
test    al, al
jns     loc_41fbb8
cmp     byte ptr [ebp+nnumberofbytestoread+3], 2
jz      loc_41fbd8
test    ecx, ecx
jz      short loc_41f97b
mov     ecx, [ebp+lpmultibytestr]
cmp     byte ptr [ecx], 0ah
jnz     short loc_41f97b
or      al, 4
jmp     short loc_41f97d
and     al, 0fbh
mov     [esi+ebx+4], al
mov     eax, [ebp+lpmultibytestr]
mov     esi, eax
lea     ecx, [eax+edi]
mov     [ebp+mode], eax
mov     [ebp+lpbuffer], ecx
cmp     eax, ecx
jnb     loc_41faa5
push    0dh
pop     ecx
mov     edi, eax
mov     al, [edi]
cmp     al, 1ah
jz      loc_41fa89
cmp     al, cl
jz      short loc_41f9b3
mov     [esi], al
inc     esi
inc     edi
jmp     loc_41fa4f
mov     eax, [ebp+lpbuffer]
dec     eax
cmp     edi, eax
jnb     short loc_41f9d7
lea     eax, [edi+1]
cmp     byte ptr [eax], 0ah
jnz     short loc_41f9d0
push    0ah
pop     eax
add     edi, 2
mov     [esi], al
jmp     loc_41fa7b
mov     [esi], cl
inc     esi
mov     edi, eax
jmp     short loc_41fa4f
push    0
lea     eax, [ebp+numberofcharsread]
push    eax
push    1
lea     eax, [ebp+buffer]
push    eax
mov     eax, dword_43c5d0[edx*4]
inc     edi
push    dword ptr [eax+ebx]
call    ds:readfile
test    eax, eax
jnz     short loc_41fa02
call    ds:getlasterror
test    eax, eax
jnz     short loc_41fa7e
cmp     [ebp+numberofcharsread], 0
jz      short loc_41fa7e
mov     edx, [ebp+var_c]
mov     eax, dword_43c5d0[edx*4]
test    byte ptr [eax+ebx+4], 48h
jz      short loc_41fa3c
push    0ah
pop     eax
push    0dh
cmp     [ebp+buffer], al
jnz     short loc_41fa28
mov     [esi], al
inc     esi
jmp     short loc_41fa4e
mov     byte ptr [esi], 0dh
mov     ecx, dword_43c5d0[edx*4]
mov     al, [ebp+buffer]
inc     esi
mov     [ecx+ebx+5], al
jmp     short loc_41fa4e
cmp     esi, [ebp+lpmultibytestr]
jnz     short loc_41fa5a
push    0ah
pop     eax
cmp     [ebp+buffer], al
jnz     short loc_41fa5a
mov     [esi], al
inc     esi
push    0dh
pop     ecx
cmp     edi, [ebp+lpbuffer]
jb      loc_41f99c
jmp     short loc_41faa5
push    1
push    0ffffffffh
push    0ffffffffh
push    [ebp+filehandle]
call    __lseeki64_nolock
mov     edx, [ebp+var_c]
add     esp, 10h
push    0ah
pop     eax
cmp     [ebp+buffer], al
jz      short loc_41fa4c
push    0dh
pop     ecx
mov     [esi], cl
inc     esi
jmp     short loc_41fa4f
mov     edx, [ebp+var_c]
push    0dh
pop     ecx
mov     [esi], cl
inc     esi
jmp     short loc_41fa4f
mov     ecx, dword_43c5d0[edx*4]
mov     al, [ecx+ebx+4]
test    al, 40h
jnz     short loc_41faa0
or      al, 2
mov     [ecx+ebx+4], al
jmp     short loc_41faa5
mov     al, [edi]
mov     [esi], al
inc     esi
mov     eax, [ebp+lpmultibytestr]
mov     edi, esi
sub     edi, eax
cmp     byte ptr [ebp+nnumberofbytestoread+3], 1
jnz     loc_41fbbb
test    edi, edi
jz      loc_41fbbb
dec     esi
mov     al, [esi]
test    al, al
js      short loc_41facb
inc     esi
jmp     loc_41fb7a
movzx   eax, al
xor     edx, edx
inc     edx
cmp     byte_434dc0[eax], 0
jnz     short loc_41faf7
mov     ebx, [ebp+lpmultibytestr]
cmp     edx, 4
jg      short loc_41faf4
cmp     esi, ebx
jb      short loc_41faf4
dec     esi
inc     edx
movzx   eax, byte ptr [esi]
cmp     byte_434dc0[eax], 0
jz      short loc_41fadd
mov     ebx, [ebp+var_24]
movzx   eax, byte ptr [esi]
movsx   eax, byte_434dc0[eax]
test    eax, eax
jnz     short loc_41fb15
call    __errno
mov     dword ptr [eax], 2ah
jmp     loc_41f8fb
inc     eax
cmp     eax, edx
jnz     short loc_41fb1e
add     esi, edx
jmp     short loc_41fb7a
mov     eax, [ebp+var_c]
mov     ecx, dword_43c5d0[eax*4]
test    byte ptr [ecx+ebx+4], 48h
jz      short loc_41fb66
mov     al, [esi]
inc     esi
mov     [ecx+ebx+5], al
mov     eax, [ebp+var_c]
cmp     edx, 2
jl      short loc_41fb4f
mov     ecx, dword_43c5d0[eax*4]
mov     al, [esi]
mov     [ecx+ebx+25h], al
mov     eax, [ebp+var_c]
inc     esi
cmp     edx, 3
jnz     short loc_41fb62
mov     ecx, dword_43c5d0[eax*4]
mov     al, [esi]
mov     [ecx+ebx+26h], al
inc     esi
sub     esi, edx
jmp     short loc_41fb7a
neg     edx
mov     eax, edx
cdq
push    1
push    edx
push    eax
push    [ebp+filehandle]
call    __lseeki64_nolock
add     esp, 10h
mov     eax, [ebp+var_28]
mov     edi, [ebp+lpmultibytestr]
shr     eax, 1
push    eax
push    [ebp+lpwidecharstr]
sub     esi, edi
push    esi
push    edi
push    0
push    0fde9h
call    ds:multibytetowidechar
mov     edi, eax
test    edi, edi
jz      loc_41f8ee
mov     eax, [ebp+var_c]
xor     ecx, ecx
mov     eax, dword_43c5d0[eax*4]
cmp     edi, esi
setnz   cl
add     edi, edi
mov     [eax+ebx+30h], ecx
mov     eax, [ebp+lpmultibytestr]
mov     ebx, [ebp+var_18]
cmp     eax, [ebp+lpwidecharstr]
jz      short loc_41fbca
push    eax
call    _free
pop     ecx
cmp     ebx, 0fffffffeh
jz      short loc_41fbd1
mov     edi, ebx
mov     eax, edi
jmp     loc_41fe46
cmp     [ebp+mode], 0
jz      short loc_41fc57
mov     esi, [ebp+lpmultibytestr]
mov     eax, edi
cdq
sub     eax, edx
sar     eax, 1
mov     edi, esi
mov     ecx, esi
lea     edx, [edi+eax*2]
cmp     edi, edx
jnb     short loc_41fc48
push    0dh
mov     [ebp+nnumberofbytestoread], 1ah
pop     edi
movzx   eax, word ptr [ecx]
cmp     ax, word ptr [ebp+nnumberofbytestoread]
jz      short loc_41fc39
cmp     ax, di
jz      short loc_41fc16
mov     [esi], ax
add     esi, 2
add     ecx, 2
jmp     short loc_41fc33
lea     eax, [edx-2]
cmp     ecx, eax
jnb     short loc_41fc33
push    0ah
add     ecx, 2
pop     eax
cmp     [ecx], ax
jz      short loc_41fc2d
push    0dh
pop     eax
push    eax
pop     edi
mov     [esi], ax
add     esi, 2
cmp     ecx, edx
jb      short loc_41fbfd
jmp     short loc_41fc48
mov     eax, [ebp+var_c]
mov     eax, dword_43c5d0[eax*4]
or      byte ptr [eax+ebx+4], 2
mov     eax, [ebp+lpmultibytestr]
mov     edi, esi
sub     edi, eax
and     edi, 0fffffffeh
jmp     loc_41fbbb
test    ecx, ecx
jz      short loc_41fc6d
mov     ecx, [ebp+lpmultibytestr]
push    0ah
pop     edx
cmp     [ecx], dx
mov     edx, [ebp+var_c]
jnz     short loc_41fc6d
or      al, 4
jmp     short loc_41fc6f
and     al, 0fbh
mov     [esi+ebx+4], al
mov     eax, [ebp+lpmultibytestr]
mov     esi, eax
lea     ecx, [eax+edi]
mov     [ebp+var_28], eax
mov     [ebp+mode], ecx
cmp     eax, ecx
jnb     loc_41fde8
push    0dh
pop     ecx
mov     [ebp+nnumberofbytestoread], 1ah
mov     edi, eax
movzx   eax, word ptr [edi]
cmp     ax, word ptr [ebp+nnumberofbytestoread]
jz      loc_41fdc8
cmp     ax, cx
jz      short loc_41fcac
mov     [esi], ax
jmp     short loc_41fcd3
mov     eax, [ebp+mode]
add     eax, 0fffffffeh
cmp     edi, eax
jnb     short loc_41fcde
push    0ah
pop     edx
cmp     [edi+2], dx
mov     edx, [ebp+var_c]
jnz     short loc_41fcd0
push    0ah
pop     eax
add     edi, 4
mov     [esi], ax
jmp     loc_41fdb5
mov     [esi], cx
add     esi, 2
add     edi, 2
jmp     loc_41fd71
push    0
lea     eax, [ebp+numberofcharsread]
push    eax
push    2
lea     eax, [ebp+var_8]
push    eax
mov     eax, dword_43c5d0[edx*4]
add     edi, 2
push    dword ptr [eax+ebx]
call    ds:readfile
test    eax, eax
jnz     short loc_41fd0f
call    ds:getlasterror
test    eax, eax
jnz     loc_41fdba
cmp     [ebp+numberofcharsread], 0
jz      loc_41fdba
mov     edx, [ebp+var_c]
mov     eax, dword_43c5d0[edx*4]
test    byte ptr [eax+ebx+4], 48h
jz      short loc_41fd7c
push    0ah
pop     eax
push    0dh
cmp     [ebp+var_8], ax
jnz     short loc_41fd3d
mov     [esi], ax
add     esi, 2
jmp     short loc_41fd70
pop     eax
mov     [esi], ax
mov     ecx, dword_43c5d0[edx*4]
mov     al, byte ptr [ebp+var_8]
mov     [ecx+ebx+5], al
mov     ecx, dword_43c5d0[edx*4]
mov     al, byte ptr [ebp+var_8+1]
mov     [ecx+ebx+25h], al
mov     eax, dword_43c5d0[edx*4]
push    0ah
pop     ecx
add     esi, 2
mov     [eax+ebx+26h], cl
push    0dh
pop     ecx
cmp     edi, [ebp+mode]
jb      loc_41fc95
jmp     short loc_41fde8
cmp     esi, [ebp+lpmultibytestr]
jnz     short loc_41fd92
push    0ah
pop     eax
cmp     [ebp+var_8], ax
jnz     short loc_41fd92
mov     [esi], ax
add     esi, 2
jmp     short loc_41fd6e
push    1
push    0ffffffffh
push    0fffffffeh
push    [ebp+filehandle]
call    __lseeki64_nolock
mov     edx, [ebp+var_c]
add     esp, 10h
push    0ah
pop     eax
cmp     [ebp+var_8], ax
jz      short loc_41fd6e
push    0dh
pop     ecx
mov     [esi], cx
add     esi, 2
jmp     short loc_41fd71
mov     edx, [ebp+var_c]
push    0dh
pop     ecx
mov     [esi], cx
add     esi, 2
jmp     short loc_41fd71
mov     ecx, dword_43c5d0[edx*4]
mov     al, [ecx+ebx+4]
test    al, 40h
jnz     short loc_41fddf
or      al, 2
mov     [ecx+ebx+4], al
jmp     short loc_41fde8
mov     ax, [edi]
mov     [esi], ax
add     esi, 2
mov     eax, [ebp+lpmultibytestr]
mov     edi, esi
sub     edi, eax
jmp     loc_41fbbb
call    ds:getlasterror
push    5
pop     esi
cmp     eax, esi
jnz     short loc_41fe18
call    __errno
mov     dword ptr [eax], 9
call    ___doserrno
mov     [eax], esi
jmp     loc_41f8fb
cmp     eax, 6dh
jnz     loc_41f8f4
xor     ebx, ebx
jmp     loc_41f8fe
xor     eax, eax
jmp     short loc_41fe46
call    ___doserrno
mov     [eax], edi
call    __errno
mov     dword ptr [eax], 9
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebx
leave
retn
pop     ecx
retn
push    14h
push    offset stru_431a38
call    __seh_prolog4
mov     edi, [ebp+filehandle]
cmp     edi, 0fffffffeh
jnz     short loc_420828
call    __errno
mov     dword ptr [eax], 9
jmp     loc_4208e1
test    edi, edi
js      loc_4208d1
cmp     edi, dword_43e254
jnb     loc_4208d1
mov     eax, edi
sar     eax, 5
mov     [ebp+var_20], eax
mov     ebx, edi
and     ebx, 1fh
shl     ebx, 6
mov     eax, dword_43c5d0[eax*4]
movsx   eax, byte ptr [ebx+eax+4]
and     eax, 1
jz      short loc_4208d1
push    edi
call    ___lock_fhandle
pop     ecx
xor     esi, esi
mov     [ebp+ms_exc.registration.trylevel], esi
mov     eax, [ebp+var_20]
mov     eax, dword_43c5d0[eax*4]
test    byte ptr [ebx+eax+4], 1
jz      short loc_4208a2
push    edi
call    __get_osfhandle
pop     ecx
push    eax
call    ds:flushfilebuffers
test    eax, eax
jnz     short loc_420894
call    ds:getlasterror
mov     esi, eax
mov     [ebp+var_1c], esi
test    esi, esi
jz      short loc_4208b3
call    ___doserrno
mov     [eax], esi
call    __errno
mov     dword ptr [eax], 9
or      esi, 0ffffffffh
mov     [ebp+var_1c], esi
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_4208c9
mov     eax, esi
jmp     short loc_4208e4
mov     edi, [ebp+filehandle]
mov     esi, [ebp+var_1c]
push    edi
call    __unlock_fhandle
pop     ecx
retn
call    __errno
mov     dword ptr [eax], 9
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
call    __seh_epilog4
retn
mov     eax, hobject
cmp     eax, 0ffffffffh
jz      short locret_421383
cmp     eax, 0fffffffeh
jz      short locret_421383
push    eax
call    ds:closehandle
retn
push    ebp
mov     ebp, esp
cmp     ds:off_42e674, 0
mov     eax, offset dword_42e670
jz      short loc_42180b
mov     ecx, [ebp+arg_0]
cmp     [eax], ecx
jz      short loc_42180f
add     eax, 8
cmp     dword ptr [eax+4], 0
jnz     short loc_4217fe
xor     eax, eax
pop     ebp
retn
mov     eax, [eax+4]
pop     ebp
retn
push    ebp
mov     ebp, esp
cmp     ds:off_42e41c, 0
mov     eax, offset dword_42e418
jz      short loc_421835
mov     ecx, [ebp+arg_0]
cmp     [eax], ecx
jz      short loc_421839
add     eax, 8
cmp     dword ptr [eax+4], 0
jnz     short loc_421828
xor     eax, eax
pop     ebp
retn
mov     eax, [eax+4]
pop     ebp
retn
mov     eax, dword_43cee8
retn
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7length_error@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7logic_error@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7out_of_range@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    esi
mov     edi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [edi], offset ??_7regex_error@std@@6b@
mov     eax, [esi+0ch]
mov     [edi+0ch], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
jmp     sub_41054f
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_41054f
test    [ebp+arg_0], 1
jz      short loc_421c3a
push    esi
call    j__free
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    offset addend
call    ds:interlockeddecrement
test    eax, eax
jns     short locret_421edc
push    esi
mov     esi, offset criticalsection
push    esi
call    __mtxdst
add     esi, 18h
pop     ecx
cmp     esi, offset dword_43cfb8
jl      short loc_421ec9
pop     esi
retn
push    ebp
mov     ebp, esp
push    [ebp+lpcriticalsection]
call    ds:entercriticalsection
pop     ebp
retn
push    ebp
mov     ebp, esp
push    [ebp+lpcriticalsection]
call    ds:leavecriticalsection
pop     ebp
retn
pop     ebx
leave
retn    8
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7bad_exception@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     dword ptr [ecx], offset ??_7bad_exception@std@@6b@
jmp     sub_41054f
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7bad_exception@std@@6b@
call    sub_41054f
test    [ebp+arg_0], 1
jz      short loc_422a73
push    esi
call    j__free
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
cmp     byte ptr [edx+0eh], 5
jnz     short cwdefault
mov     bx, [ebp-0a4h]
or      bh, 2
and     bh, 0feh
mov     bl, 3fh
jmp     short setcw
mov     bx, 133fh
mov     [ebp-0a2h], bx
fldcw   word ptr [ebp-0a2h]
mov     ebx, offset dword_42fadc
fxam
mov     [ebp-94h], edx
fstsw   word ptr [ebp-0a0h]
mov     byte ptr [ebp-90h], 0
fxch    st(1)
mov     cl, [ebp-9fh]
fxam
fstsw   word ptr [ebp-0a0h]
fxch    st(1)
mov     ch, [ebp-9fh]
shl     ch, 1
sar     ch, 1
rol     ch, 1
mov     al, ch
and     al, 0fh
xlat
mov     ah, al
shl     cl, 1
sar     cl, 1
rol     cl, 1
mov     al, cl
and     al, 0fh
xlat
shl     ah, 1
shl     ah, 1
or      al, ah
movsx   eax, al
and     ecx, 404h
mov     ebx, edx
add     ebx, eax
add     ebx, 10h
jmp     dword ptr [ebx]
call    __rttosnpopde
fxch    st(1)
fstp    st
call    __rttosnpopde
jmp     short __rtnospop
fstp    st
fstp    st
fldz
retn
fstp    st
fstp    st
fld1
retn
fstp    tbyte ptr [ebp-9eh]
fld     tbyte ptr [ebp-9eh]
test    byte ptr [ebp-97h], 40h
jz      short _tossnan1
mov     byte ptr [ebp-90h], 7
retn
mov     byte ptr [ebp-90h], 1
fadd    ds:dbl_42fad4
retn
fxch    st(1)
fstp    tbyte ptr [ebp-9eh]
fld     tbyte ptr [ebp-9eh]
test    byte ptr [ebp-97h], 40h
jz      short _tossnan2
mov     byte ptr [ebp-90h], 7
jmp     short _tosnan2ret
mov     byte ptr [ebp-90h], 1
faddp   st(1), st
retn
fstp    tbyte ptr [ebp-9eh]
fld     tbyte ptr [ebp-9eh]
test    byte ptr [ebp-97h], 40h
jz      short _snan2
fxch    st(1)
fstp    tbyte ptr [ebp-9eh]
fld     tbyte ptr [ebp-9eh]
test    byte ptr [ebp-97h], 40h
jz      short _snan2
mov     byte ptr [ebp-90h], 7
jmp     short _nan2ret
mov     byte ptr [ebp-90h], 1
faddp   st(1), st
retn
fstp    st
fstp    st
fld     ds:tbyte_42fac0
cmp     byte ptr [ebp-90h], 0
jg      short retj
or      cl, cl
jz      short chsifnegret
fchs
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
push    [ebp+arg_8]
mov     edi, [ebp+arg_0]
lea     ecx, [ebp+var_28]
call    ??0_localeupdate@@qae@paulocaleinfo_struct@@@z
lea     eax, [ebp+var_28]
push    eax
xor     ebx, ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    esi
lea     eax, [ebp+var_18]
push    eax
lea     eax, [ebp+var_10]
push    eax
call    ___strgtold12_l
mov     [ebp+var_14], eax
lea     eax, [ebp+var_10]
push    edi
push    eax
call    sub_425b45
mov     ecx, eax
mov     eax, [ebp+var_14]
add     esp, 28h
test    al, 3
jnz     short loc_4256cf
cmp     ecx, 1
jz      short loc_4256d7
cmp     ecx, 2
jnz     short loc_4256da
push    4
jmp     short loc_4256d9
test    al, 1
jnz     short loc_4256cb
test    al, 2
jz      short loc_4256da
push    3
pop     ebx
cmp     [ebp+var_1c], 0
jz      short loc_4256e7
mov     ecx, [ebp+var_20]
and     dword ptr [ecx+70h], 0fffffffdh
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
mov     eax, ebx
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
push    [ebp+arg_8]
mov     edi, [ebp+arg_0]
lea     ecx, [ebp+var_28]
call    ??0_localeupdate@@qae@paulocaleinfo_struct@@@z
lea     eax, [ebp+var_28]
push    eax
xor     ebx, ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    esi
lea     eax, [ebp+var_18]
push    eax
lea     eax, [ebp+var_10]
push    eax
call    ___strgtold12_l
mov     [ebp+var_14], eax
lea     eax, [ebp+var_10]
push    edi
push    eax
call    sub_4260b5
mov     ecx, eax
mov     eax, [ebp+var_14]
add     esp, 28h
test    al, 3
jnz     short loc_42575b
cmp     ecx, 1
jz      short loc_425763
cmp     ecx, 2
jnz     short loc_425766
push    4
jmp     short loc_425765
test    al, 1
jnz     short loc_425757
test    al, 2
jz      short loc_425766
push    3
pop     ebx
cmp     [ebp+var_1c], 0
jz      short loc_425773
mov     ecx, [ebp+var_20]
and     dword ptr [ecx+70h], 0fffffffdh
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
mov     eax, ebx
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 44h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_0]
push    ebx
movzx   eax, word ptr [ecx+0ah]
mov     edx, eax
and     eax, 8000h
mov     [ebp+var_44], eax
mov     eax, [ecx+6]
mov     [ebp+var_10], eax
mov     eax, [ecx+2]
mov     [ebp+var_c], eax
movzx   eax, word ptr [ecx]
and     edx, 7fffh
push    esi
sub     edx, 3fffh
push    edi
mov     edi, [ebp+arg_4]
shl     eax, 10h
xor     ebx, ebx
mov     [ebp+var_40], edi
mov     [ebp+var_20], edx
mov     [ebp+var_8], eax
cmp     edx, 0ffffc001h
jnz     short loc_425bc2
mov     esi, ebx
mov     eax, ebx
cmp     [ebp+eax*4+var_10], ebx
jnz     short loc_425bb2
inc     eax
cmp     eax, 3
jl      short loc_425ba1
jmp     loc_42606b
xor     eax, eax
lea     edi, [ebp+var_10]
stosd
stosd
stosd
push    2
pop     ebx
jmp     loc_426068
mov     eax, dword_4353d0
lea     esi, [ebp+var_10]
lea     edi, [ebp+var_1c]
movsd
dec     eax
movsd
lea     ecx, [eax+1]
mov     [ebp+var_24], edx
mov     [ebp+var_34], eax
mov     eax, ecx
cdq
push    1fh
movsd
pop     esi
and     edx, esi
add     edx, eax
sar     edx, 5
mov     [ebp+var_2c], ebx
mov     [ebp+var_3c], edx
and     ecx, 8000001fh
jns     short loc_425bfa
dec     ecx
or      ecx, 0ffffffe0h
inc     ecx
sub     esi, ecx
xor     eax, eax
inc     eax
mov     ecx, esi
shl     eax, cl
push    3
or      edi, 0ffffffffh
mov     [ebp+var_30], esi
pop     esi
test    [ebp+edx*4+var_10], eax
jz      loc_425cba
mov     eax, edi
shl     eax, cl
not     eax
test    [ebp+edx*4+var_10], eax
jmp     short loc_425c26
cmp     [ebp+edx*4+var_10], ebx
jnz     short loc_425c32
inc     edx
cmp     edx, esi
jl      short loc_425c22
jmp     loc_425cb7
mov     eax, [ebp+var_34]
cdq
push    1fh
pop     ecx
and     edx, ecx
add     edx, eax
mov     eax, [ebp+var_34]
sar     edx, 5
and     eax, 8000001fh
jns     short loc_425c4f
dec     eax
or      eax, 0ffffffe0h
inc     eax
sub     ecx, eax
xor     eax, eax
inc     eax
shl     eax, cl
push    0ffffffffh
mov     [ebp+var_2c], ebx
pop     edi
mov     [ebp+var_38], eax
mov     eax, [ebp+edx*4+var_10]
mov     ecx, [ebp+var_38]
add     ecx, eax
mov     [ebp+var_28], ecx
cmp     ecx, eax
mov     eax, [ebp+var_28]
mov     ecx, ebx
jb      short loc_425c79
cmp     eax, [ebp+var_38]
jnb     short loc_425c7f
xor     ecx, ecx
inc     ecx
mov     [ebp+var_2c], ecx
dec     edx
mov     [ebp+edx*4+var_c], eax
js      short loc_425cb4
test    ecx, ecx
jz      short loc_425cb1
mov     eax, [ebp+edx*4+var_10]
mov     ecx, ebx
lea     edi, [eax+1]
cmp     edi, eax
mov     [ebp+var_2c], ebx
mov     [ebp+var_28], edi
mov     eax, edi
jb      short loc_425ca4
cmp     eax, 1
jnb     short loc_425caa
xor     ecx, ecx
inc     ecx
mov     [ebp+var_2c], ecx
dec     edx
mov     [ebp+edx*4+var_c], eax
jns     short loc_425c86
or      edi, 0ffffffffh
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_3c]
mov     eax, edi
shl     eax, cl
and     [ebp+edx*4+var_10], eax
lea     eax, [edx+1]
cmp     eax, esi
jge     short loc_425cda
lea     edi, [ebp+var_10]
mov     ecx, esi
lea     edi, [edi+eax*4]
sub     ecx, eax
xor     eax, eax
rep stosd
or      edi, 0ffffffffh
mov     ecx, [ebp+var_20]
cmp     [ebp+var_2c], ebx
jz      short loc_425ce3
inc     ecx
mov     edx, dword_4353cc
mov     eax, edx
sub     eax, dword_4353d0
cmp     ecx, eax
jge     short loc_425d04
xor     eax, eax
lea     edi, [ebp+var_10]
stosd
stosd
stosd
mov     esi, ebx
jmp     loc_425bba
cmp     ecx, edx
jg      loc_425f25
sub     edx, [ebp+var_24]
lea     esi, [ebp+var_1c]
mov     [ebp+var_30], edx
mov     eax, edx
cdq
lea     edi, [ebp+var_10]
movsd
and     edx, 1fh
add     eax, edx
sar     eax, 5
movsd
mov     [ebp+var_3c], eax
mov     eax, [ebp+var_30]
movsd
and     eax, 8000001fh
jns     short loc_425d38
dec     eax
or      eax, 0ffffffe0h
inc     eax
mov     [ebp+var_30], eax
or      edi, 0ffffffffh
mov     eax, edi
mov     edi, [ebp+var_30]
mov     ecx, edi
shl     eax, cl
push    20h
mov     [ebp+var_20], ebx
not     eax
mov     [ebp+var_28], eax
pop     eax
sub     eax, edi
push    3
mov     [ebp+var_38], eax
pop     esi
mov     edx, [ebp+ebx*4+var_10]
mov     eax, edx
and     eax, [ebp+var_28]
mov     ecx, edi
shr     edx, cl
mov     ecx, [ebp+var_38]
shl     eax, cl
or      edx, [ebp+var_20]
inc     ebx
mov     [ebp+ebx*4+var_14], edx
mov     [ebp+var_20], eax
cmp     ebx, esi
jl      short loc_425d5a
mov     eax, [ebp+var_3c]
shl     eax, 2
lea     edx, [ebp+var_8]
push    2
sub     edx, eax
mov     eax, [ebp+var_3c]
xor     ebx, ebx
pop     ecx
or      edi, 0ffffffffh
cmp     ecx, eax
jl      short loc_425da0
mov     eax, [edx]
mov     [ebp+ecx*4+var_10], eax
mov     eax, [ebp+var_3c]
jmp     short loc_425da4
mov     [ebp+ecx*4+var_10], ebx
sub     edx, 4
dec     ecx
jns     short loc_425d91
mov     ecx, [ebp+var_34]
inc     ecx
mov     eax, ecx
cdq
and     edx, 1fh
add     edx, eax
sar     edx, 5
mov     [ebp+var_2c], edx
and     ecx, 8000001fh
jns     short loc_425dc9
dec     ecx
or      ecx, 0ffffffe0h
inc     ecx
push    1fh
pop     eax
sub     eax, ecx
mov     [ebp+var_30], eax
mov     ecx, [ebp+var_30]
xor     eax, eax
inc     eax
shl     eax, cl
test    [ebp+edx*4+var_10], eax
jz      loc_425e75
mov     eax, edi
shl     eax, cl
not     eax
test    [ebp+edx*4+var_10], eax
jmp     short loc_425df3
cmp     [ebp+edx*4+var_10], ebx
jnz     short loc_425dfc
inc     edx
cmp     edx, esi
jl      short loc_425def
jmp     short loc_425e72
mov     edi, [ebp+var_34]
mov     eax, edi
cdq
push    1fh
pop     ecx
and     edx, ecx
add     edx, eax
sar     edx, 5
and     edi, 8000001fh
jns     short loc_425e19
dec     edi
or      edi, 0ffffffe0h
inc     edi
mov     eax, [ebp+edx*4+var_10]
sub     ecx, edi
xor     edi, edi
inc     edi
shl     edi, cl
push    0ffffffffh
mov     ecx, ebx
mov     [ebp+var_24], edi
add     edi, eax
mov     [ebp+var_20], edi
cmp     edi, eax
mov     eax, [ebp+var_20]
pop     edi
jb      short loc_425e3d
cmp     eax, [ebp+var_24]
jnb     short loc_425e40
xor     ecx, ecx
inc     ecx
dec     edx
mov     [ebp+edx*4+var_c], eax
js      short loc_425e6f
test    ecx, ecx
jz      short loc_425e6c
mov     eax, [ebp+edx*4+var_10]
mov     ecx, ebx
lea     edi, [eax+1]
cmp     edi, eax
mov     [ebp+var_20], edi
mov     eax, edi
jb      short loc_425e62
cmp     eax, 1
jnb     short loc_425e65
xor     ecx, ecx
inc     ecx
dec     edx
mov     [ebp+edx*4+var_c], eax
jns     short loc_425e47
or      edi, 0ffffffffh
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_2c]
mov     eax, edi
shl     eax, cl
and     [ebp+edx*4+var_10], eax
inc     edx
cmp     edx, esi
jge     short loc_425e93
lea     edi, [ebp+var_10]
mov     ecx, esi
lea     edi, [edi+edx*4]
sub     ecx, edx
xor     eax, eax
rep stosd
or      edi, 0ffffffffh
mov     ecx, dword_4353d4
inc     ecx
mov     eax, ecx
cdq
and     edx, 1fh
add     eax, edx
sar     eax, 5
mov     [ebp+var_28], eax
and     ecx, 8000001fh
jns     short loc_425eb5
dec     ecx
or      ecx, 0ffffffe0h
inc     ecx
mov     [ebp+var_24], ecx
shl     edi, cl
mov     eax, ebx
push    20h
mov     [ebp+var_20], ebx
mov     ebx, [ebp+var_24]
pop     ecx
sub     ecx, ebx
not     edi
mov     [ebp+var_34], eax
mov     [ebp+var_24], ecx
mov     edx, [ebp+eax*4+var_10]
mov     eax, edx
mov     ecx, ebx
shr     edx, cl
mov     ecx, [ebp+var_34]
and     eax, edi
or      edx, [ebp+var_20]
mov     [ebp+ecx*4+var_10], edx
mov     ecx, [ebp+var_24]
shl     eax, cl
mov     [ebp+var_20], eax
mov     eax, [ebp+var_34]
inc     eax
mov     [ebp+var_34], eax
cmp     eax, esi
jl      short loc_425ecf
mov     esi, [ebp+var_28]
mov     eax, esi
shl     eax, 2
lea     edx, [ebp+var_8]
push    2
sub     edx, eax
pop     ecx
xor     ebx, ebx
cmp     ecx, esi
jl      short loc_425f16
mov     eax, [edx]
mov     [ebp+ecx*4+var_10], eax
jmp     short loc_425f1a
mov     [ebp+ecx*4+var_10], ebx
sub     edx, 4
dec     ecx
jns     short loc_425f0a
jmp     loc_425cfd
cmp     ecx, dword_4353c8
jl      loc_425fd3
mov     ecx, dword_4353d4
xor     eax, eax
lea     edi, [ebp+var_10]
stosd
stosd
stosd
or      [ebp+var_10], 80000000h
mov     eax, ecx
cdq
and     edx, 1fh
add     eax, edx
sar     eax, 5
mov     [ebp+var_34], eax
and     ecx, 8000001fh
jns     short loc_425f61
dec     ecx
or      ecx, 0ffffffe0h
inc     ecx
or      edi, 0ffffffffh
shl     edi, cl
push    20h
pop     eax
sub     eax, ecx
mov     [ebp+var_38], ecx
not     edi
mov     [ebp+var_20], ebx
mov     [ebp+var_28], eax
mov     edx, [ebp+ebx*4+var_10]
mov     eax, edx
shr     edx, cl
mov     ecx, [ebp+var_28]
and     eax, edi
shl     eax, cl
or      edx, [ebp+var_20]
mov     ecx, [ebp+var_38]
mov     [ebp+ebx*4+var_10], edx
inc     ebx
mov     [ebp+var_20], eax
cmp     ebx, esi
jl      short loc_425f76
mov     esi, [ebp+var_34]
mov     eax, esi
shl     eax, 2
lea     edx, [ebp+var_8]
push    2
sub     edx, eax
pop     ecx
xor     ebx, ebx
cmp     ecx, esi
jl      short loc_425fb5
mov     eax, [edx]
mov     [ebp+ecx*4+var_10], eax
jmp     short loc_425fb9
mov     [ebp+ecx*4+var_10], ebx
sub     edx, 4
dec     ecx
jns     short loc_425fa9
mov     esi, dword_4353dc
add     esi, dword_4353c8
xor     ebx, ebx
inc     ebx
jmp     loc_426068
mov     esi, dword_4353dc
and     [ebp+var_10], 7fffffffh
add     esi, ecx
mov     ecx, dword_4353d4
mov     eax, ecx
cdq
and     edx, 1fh
add     eax, edx
sar     eax, 5
mov     [ebp+var_38], esi
mov     [ebp+var_28], eax
and     ecx, 8000001fh
jns     short loc_426006
dec     ecx
or      ecx, 0ffffffe0h
inc     ecx
shl     edi, cl
push    20h
mov     [ebp+var_20], ebx
mov     esi, ebx
pop     eax
mov     ebx, ecx
sub     eax, ebx
mov     [ebp+var_24], ecx
not     edi
mov     [ebp+var_24], eax
mov     edx, [ebp+esi*4+var_10]
mov     eax, edx
mov     ecx, ebx
shr     edx, cl
mov     ecx, [ebp+var_24]
and     eax, edi
shl     eax, cl
or      edx, [ebp+var_20]
inc     esi
mov     [ebp+esi*4+var_14], edx
mov     [ebp+var_20], eax
cmp     esi, 3
jl      short loc_42601c
mov     edi, [ebp+var_28]
mov     esi, [ebp+var_38]
mov     eax, edi
shl     eax, 2
lea     edx, [ebp+var_8]
push    2
sub     edx, eax
pop     ecx
xor     ebx, ebx
cmp     ecx, edi
jl      short loc_42605e
mov     eax, [edx]
mov     [ebp+ecx*4+var_10], eax
jmp     short loc_426062
mov     [ebp+ecx*4+var_10], ebx
sub     edx, 4
dec     ecx
jns     short loc_426052
mov     edi, [ebp+var_40]
push    1fh
pop     eax
sub     eax, dword_4353d4
mov     ecx, eax
mov     eax, [ebp+var_44]
shl     esi, cl
neg     eax
sbb     eax, eax
and     eax, 80000000h
or      esi, eax
mov     eax, dword_4353d8
or      esi, [ebp+var_10]
cmp     eax, 40h
jnz     short loc_42609d
mov     eax, [ebp+var_c]
mov     [edi+4], esi
mov     [edi], eax
jmp     short loc_4260a4
cmp     eax, 20h
jnz     short loc_4260a4
mov     [edi], esi
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
mov     eax, ebx
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 44h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_0]
push    ebx
movzx   eax, word ptr [ecx+0ah]
mov     edx, eax
and     eax, 8000h
mov     [ebp+var_44], eax
mov     eax, [ecx+6]
mov     [ebp+var_10], eax
mov     eax, [ecx+2]
mov     [ebp+var_c], eax
movzx   eax, word ptr [ecx]
and     edx, 7fffh
push    esi
sub     edx, 3fffh
push    edi
mov     edi, [ebp+arg_4]
shl     eax, 10h
xor     ebx, ebx
mov     [ebp+var_40], edi
mov     [ebp+var_20], edx
mov     [ebp+var_8], eax
cmp     edx, 0ffffc001h
jnz     short loc_426132
mov     esi, ebx
mov     eax, ebx
cmp     [ebp+eax*4+var_10], ebx
jnz     short loc_426122
inc     eax
cmp     eax, 3
jl      short loc_426111
jmp     loc_4265db
xor     eax, eax
lea     edi, [ebp+var_10]
stosd
stosd
stosd
push    2
pop     ebx
jmp     loc_4265d8
mov     eax, dword_4353e8
lea     esi, [ebp+var_10]
lea     edi, [ebp+var_1c]
movsd
dec     eax
movsd
lea     ecx, [eax+1]
mov     [ebp+var_24], edx
mov     [ebp+var_34], eax
mov     eax, ecx
cdq
push    1fh
movsd
pop     esi
and     edx, esi
add     edx, eax
sar     edx, 5
mov     [ebp+var_2c], ebx
mov     [ebp+var_3c], edx
and     ecx, 8000001fh
jns     short loc_42616a
dec     ecx
or      ecx, 0ffffffe0h
inc     ecx
sub     esi, ecx
xor     eax, eax
inc     eax
mov     ecx, esi
shl     eax, cl
push    3
or      edi, 0ffffffffh
mov     [ebp+var_30], esi
pop     esi
test    [ebp+edx*4+var_10], eax
jz      loc_42622a
mov     eax, edi
shl     eax, cl
not     eax
test    [ebp+edx*4+var_10], eax
jmp     short loc_426196
cmp     [ebp+edx*4+var_10], ebx
jnz     short loc_4261a2
inc     edx
cmp     edx, esi
jl      short loc_426192
jmp     loc_426227
mov     eax, [ebp+var_34]
cdq
push    1fh
pop     ecx
and     edx, ecx
add     edx, eax
mov     eax, [ebp+var_34]
sar     edx, 5
and     eax, 8000001fh
jns     short loc_4261bf
dec     eax
or      eax, 0ffffffe0h
inc     eax
sub     ecx, eax
xor     eax, eax
inc     eax
shl     eax, cl
push    0ffffffffh
mov     [ebp+var_2c], ebx
pop     edi
mov     [ebp+var_38], eax
mov     eax, [ebp+edx*4+var_10]
mov     ecx, [ebp+var_38]
add     ecx, eax
mov     [ebp+var_28], ecx
cmp     ecx, eax
mov     eax, [ebp+var_28]
mov     ecx, ebx
jb      short loc_4261e9
cmp     eax, [ebp+var_38]
jnb     short loc_4261ef
xor     ecx, ecx
inc     ecx
mov     [ebp+var_2c], ecx
dec     edx
mov     [ebp+edx*4+var_c], eax
js      short loc_426224
test    ecx, ecx
jz      short loc_426221
mov     eax, [ebp+edx*4+var_10]
mov     ecx, ebx
lea     edi, [eax+1]
cmp     edi, eax
mov     [ebp+var_2c], ebx
mov     [ebp+var_28], edi
mov     eax, edi
jb      short loc_426214
cmp     eax, 1
jnb     short loc_42621a
xor     ecx, ecx
inc     ecx
mov     [ebp+var_2c], ecx
dec     edx
mov     [ebp+edx*4+var_c], eax
jns     short loc_4261f6
or      edi, 0ffffffffh
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_3c]
mov     eax, edi
shl     eax, cl
and     [ebp+edx*4+var_10], eax
lea     eax, [edx+1]
cmp     eax, esi
jge     short loc_42624a
lea     edi, [ebp+var_10]
mov     ecx, esi
lea     edi, [edi+eax*4]
sub     ecx, eax
xor     eax, eax
rep stosd
or      edi, 0ffffffffh
mov     ecx, [ebp+var_20]
cmp     [ebp+var_2c], ebx
jz      short loc_426253
inc     ecx
mov     edx, dword_4353e4
mov     eax, edx
sub     eax, dword_4353e8
cmp     ecx, eax
jge     short loc_426274
xor     eax, eax
lea     edi, [ebp+var_10]
stosd
stosd
stosd
mov     esi, ebx
jmp     loc_42612a
cmp     ecx, edx
jg      loc_426495
sub     edx, [ebp+var_24]
lea     esi, [ebp+var_1c]
mov     [ebp+var_30], edx
mov     eax, edx
cdq
lea     edi, [ebp+var_10]
movsd
and     edx, 1fh
add     eax, edx
sar     eax, 5
movsd
mov     [ebp+var_3c], eax
mov     eax, [ebp+var_30]
movsd
and     eax, 8000001fh
jns     short loc_4262a8
dec     eax
or      eax, 0ffffffe0h
inc     eax
mov     [ebp+var_30], eax
or      edi, 0ffffffffh
mov     eax, edi
mov     edi, [ebp+var_30]
mov     ecx, edi
shl     eax, cl
push    20h
mov     [ebp+var_20], ebx
not     eax
mov     [ebp+var_28], eax
pop     eax
sub     eax, edi
push    3
mov     [ebp+var_38], eax
pop     esi
mov     edx, [ebp+ebx*4+var_10]
mov     eax, edx
and     eax, [ebp+var_28]
mov     ecx, edi
shr     edx, cl
mov     ecx, [ebp+var_38]
shl     eax, cl
or      edx, [ebp+var_20]
inc     ebx
mov     [ebp+ebx*4+var_14], edx
mov     [ebp+var_20], eax
cmp     ebx, esi
jl      short loc_4262ca
mov     eax, [ebp+var_3c]
shl     eax, 2
lea     edx, [ebp+var_8]
push    2
sub     edx, eax
mov     eax, [ebp+var_3c]
xor     ebx, ebx
pop     ecx
or      edi, 0ffffffffh
cmp     ecx, eax
jl      short loc_426310
mov     eax, [edx]
mov     [ebp+ecx*4+var_10], eax
mov     eax, [ebp+var_3c]
jmp     short loc_426314
mov     [ebp+ecx*4+var_10], ebx
sub     edx, 4
dec     ecx
jns     short loc_426301
mov     ecx, [ebp+var_34]
inc     ecx
mov     eax, ecx
cdq
and     edx, 1fh
add     edx, eax
sar     edx, 5
mov     [ebp+var_2c], edx
and     ecx, 8000001fh
jns     short loc_426339
dec     ecx
or      ecx, 0ffffffe0h
inc     ecx
push    1fh
pop     eax
sub     eax, ecx
mov     [ebp+var_30], eax
mov     ecx, [ebp+var_30]
xor     eax, eax
inc     eax
shl     eax, cl
test    [ebp+edx*4+var_10], eax
jz      loc_4263e5
mov     eax, edi
shl     eax, cl
not     eax
test    [ebp+edx*4+var_10], eax
jmp     short loc_426363
cmp     [ebp+edx*4+var_10], ebx
jnz     short loc_42636c
inc     edx
cmp     edx, esi
jl      short loc_42635f
jmp     short loc_4263e2
mov     edi, [ebp+var_34]
mov     eax, edi
cdq
push    1fh
pop     ecx
and     edx, ecx
add     edx, eax
sar     edx, 5
and     edi, 8000001fh
jns     short loc_426389
dec     edi
or      edi, 0ffffffe0h
inc     edi
mov     eax, [ebp+edx*4+var_10]
sub     ecx, edi
xor     edi, edi
inc     edi
shl     edi, cl
push    0ffffffffh
mov     ecx, ebx
mov     [ebp+var_24], edi
add     edi, eax
mov     [ebp+var_20], edi
cmp     edi, eax
mov     eax, [ebp+var_20]
pop     edi
jb      short loc_4263ad
cmp     eax, [ebp+var_24]
jnb     short loc_4263b0
xor     ecx, ecx
inc     ecx
dec     edx
mov     [ebp+edx*4+var_c], eax
js      short loc_4263df
test    ecx, ecx
jz      short loc_4263dc
mov     eax, [ebp+edx*4+var_10]
mov     ecx, ebx
lea     edi, [eax+1]
cmp     edi, eax
mov     [ebp+var_20], edi
mov     eax, edi
jb      short loc_4263d2
cmp     eax, 1
jnb     short loc_4263d5
xor     ecx, ecx
inc     ecx
dec     edx
mov     [ebp+edx*4+var_c], eax
jns     short loc_4263b7
or      edi, 0ffffffffh
mov     ecx, [ebp+var_30]
mov     edx, [ebp+var_2c]
mov     eax, edi
shl     eax, cl
and     [ebp+edx*4+var_10], eax
inc     edx
cmp     edx, esi
jge     short loc_426403
lea     edi, [ebp+var_10]
mov     ecx, esi
lea     edi, [edi+edx*4]
sub     ecx, edx
xor     eax, eax
rep stosd
or      edi, 0ffffffffh
mov     ecx, dword_4353ec
inc     ecx
mov     eax, ecx
cdq
and     edx, 1fh
add     eax, edx
sar     eax, 5
mov     [ebp+var_28], eax
and     ecx, 8000001fh
jns     short loc_426425
dec     ecx
or      ecx, 0ffffffe0h
inc     ecx
mov     [ebp+var_24], ecx
shl     edi, cl
mov     eax, ebx
push    20h
mov     [ebp+var_20], ebx
mov     ebx, [ebp+var_24]
pop     ecx
sub     ecx, ebx
not     edi
mov     [ebp+var_34], eax
mov     [ebp+var_24], ecx
mov     edx, [ebp+eax*4+var_10]
mov     eax, edx
mov     ecx, ebx
shr     edx, cl
mov     ecx, [ebp+var_34]
and     eax, edi
or      edx, [ebp+var_20]
mov     [ebp+ecx*4+var_10], edx
mov     ecx, [ebp+var_24]
shl     eax, cl
mov     [ebp+var_20], eax
mov     eax, [ebp+var_34]
inc     eax
mov     [ebp+var_34], eax
cmp     eax, esi
jl      short loc_42643f
mov     esi, [ebp+var_28]
mov     eax, esi
shl     eax, 2
lea     edx, [ebp+var_8]
push    2
sub     edx, eax
pop     ecx
xor     ebx, ebx
cmp     ecx, esi
jl      short loc_426486
mov     eax, [edx]
mov     [ebp+ecx*4+var_10], eax
jmp     short loc_42648a
mov     [ebp+ecx*4+var_10], ebx
sub     edx, 4
dec     ecx
jns     short loc_42647a
jmp     loc_42626d
cmp     ecx, dword_4353e0
jl      loc_426543
mov     ecx, dword_4353ec
xor     eax, eax
lea     edi, [ebp+var_10]
stosd
stosd
stosd
or      [ebp+var_10], 80000000h
mov     eax, ecx
cdq
and     edx, 1fh
add     eax, edx
sar     eax, 5
mov     [ebp+var_34], eax
and     ecx, 8000001fh
jns     short loc_4264d1
dec     ecx
or      ecx, 0ffffffe0h
inc     ecx
or      edi, 0ffffffffh
shl     edi, cl
push    20h
pop     eax
sub     eax, ecx
mov     [ebp+var_38], ecx
not     edi
mov     [ebp+var_20], ebx
mov     [ebp+var_28], eax
mov     edx, [ebp+ebx*4+var_10]
mov     eax, edx
shr     edx, cl
mov     ecx, [ebp+var_28]
and     eax, edi
shl     eax, cl
or      edx, [ebp+var_20]
mov     ecx, [ebp+var_38]
mov     [ebp+ebx*4+var_10], edx
inc     ebx
mov     [ebp+var_20], eax
cmp     ebx, esi
jl      short loc_4264e6
mov     esi, [ebp+var_34]
mov     eax, esi
shl     eax, 2
lea     edx, [ebp+var_8]
push    2
sub     edx, eax
pop     ecx
xor     ebx, ebx
cmp     ecx, esi
jl      short loc_426525
mov     eax, [edx]
mov     [ebp+ecx*4+var_10], eax
jmp     short loc_426529
mov     [ebp+ecx*4+var_10], ebx
sub     edx, 4
dec     ecx
jns     short loc_426519
mov     esi, dword_4353f4
add     esi, dword_4353e0
xor     ebx, ebx
inc     ebx
jmp     loc_4265d8
mov     esi, dword_4353f4
and     [ebp+var_10], 7fffffffh
add     esi, ecx
mov     ecx, dword_4353ec
mov     eax, ecx
cdq
and     edx, 1fh
add     eax, edx
sar     eax, 5
mov     [ebp+var_38], esi
mov     [ebp+var_28], eax
and     ecx, 8000001fh
jns     short loc_426576
dec     ecx
or      ecx, 0ffffffe0h
inc     ecx
shl     edi, cl
push    20h
mov     [ebp+var_20], ebx
mov     esi, ebx
pop     eax
mov     ebx, ecx
sub     eax, ebx
mov     [ebp+var_24], ecx
not     edi
mov     [ebp+var_24], eax
mov     edx, [ebp+esi*4+var_10]
mov     eax, edx
mov     ecx, ebx
shr     edx, cl
mov     ecx, [ebp+var_24]
and     eax, edi
shl     eax, cl
or      edx, [ebp+var_20]
inc     esi
mov     [ebp+esi*4+var_14], edx
mov     [ebp+var_20], eax
cmp     esi, 3
jl      short loc_42658c
mov     edi, [ebp+var_28]
mov     esi, [ebp+var_38]
mov     eax, edi
shl     eax, 2
lea     edx, [ebp+var_8]
push    2
sub     edx, eax
pop     ecx
xor     ebx, ebx
cmp     ecx, edi
jl      short loc_4265ce
mov     eax, [edx]
mov     [ebp+ecx*4+var_10], eax
jmp     short loc_4265d2
mov     [ebp+ecx*4+var_10], ebx
sub     edx, 4
dec     ecx
jns     short loc_4265c2
mov     edi, [ebp+var_40]
push    1fh
pop     eax
sub     eax, dword_4353ec
mov     ecx, eax
mov     eax, [ebp+var_44]
shl     esi, cl
neg     eax
sbb     eax, eax
and     eax, 80000000h
or      esi, eax
mov     eax, dword_4353f0
or      esi, [ebp+var_10]
cmp     eax, 40h
jnz     short loc_42660d
mov     eax, [ebp+var_c]
mov     [edi+4], esi
mov     [edi], eax
jmp     short loc_426614
cmp     eax, 20h
jnz     short loc_426614
mov     [edi], esi
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
mov     eax, ebx
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
leave
retn
lea     ecx, [ebp+var_24]
jmp     unknown_libname_2
lea     ecx, [ebp+var_24]
jmp     loc_407410
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-74h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432470
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_58]
jmp     ??1locale@std@@qae@xz
lea     ecx, [ebp+var_60]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-64h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432030
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     ??1locale@std@@qae@xz
lea     ecx, [ebp+var_20]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_431ffc
jmp     ___cxxframehandler3
mov     edx, [esp-4+size]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_431db4
jmp     ___cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_431e38
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_2c]
jmp     loc_405680
lea     ecx, [ebp+var_44]
jmp     loc_405680
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-70h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432064
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_68]
jmp     loc_409930
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-6ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432418
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_94]
jmp     sub_409e90
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-98h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4324d8
jmp     ___cxxframehandler3
mov     eax, [ebp+var_38]
and     eax, 1
jz      locret_427f68
and     [ebp+var_38], 0fffffffeh
mov     ecx, [ebp+var_48]
jmp     loc_405680
retn
lea     ecx, [ebp+var_44]
jmp     sub_409b10
lea     ecx, [ebp+var_30]
jmp     ??1locale@std@@qae@xz
lea     ecx, [ebp+var_30]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-50h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_431f7c
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     ??1_lockit@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-28h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432444
jmp     ___cxxframehandler3
mov     ecx, [ebp+var_14]
jmp     loc_409f60
mov     ecx, [ebp+var_14]
add     ecx, 20h
jmp     loc_409f60
mov     ecx, [ebp+var_14]
add     ecx, 40h
jmp     sub_409b10
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432288
jmp     ___cxxframehandler3
mov     ecx, [ebp+var_14]
jmp     sub_409b10
mov     ecx, [ebp+var_10]
add     ecx, 14h
jmp     loc_409970
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_43231c
jmp     ___cxxframehandler3
mov     ecx, [ebp+var_10]
add     ecx, 18h
jmp     loc_405a00
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4326d0
jmp     ___cxxframehandler3
mov     ecx, [ebp+var_10]
add     ecx, 4
jmp     loc_406740
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_43277c
jmp     ___cxxframehandler3
mov     eax, [ebp+var_10]
and     eax, 1
jz      locret_4280cb
and     [ebp+var_10], 0fffffffeh
mov     ecx, [ebp+var_14]
add     ecx, 68h
jmp     loc_4059f0
retn
mov     ecx, [ebp+var_14]
add     ecx, 20h
jmp     loc_405fa0
mov     ecx, [ebp+var_18]
jmp     loc_405a20
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432740
jmp     ___cxxframehandler3
mov     ecx, [ebp+var_10]
jmp     ??1_lockit@std@@qae@xz
mov     ecx, [ebp+var_10]
add     ecx, 4
jmp     loc_405730
mov     ecx, [ebp+var_10]
add     ecx, 0ch
jmp     loc_405730
mov     ecx, [ebp+var_10]
add     ecx, 14h
jmp     loc_405730
mov     ecx, [ebp+var_10]
add     ecx, 1ch
jmp     loc_405730
mov     ecx, [ebp+var_10]
add     ecx, 24h
jmp     loc_405730
mov     ecx, [ebp+var_10]
add     ecx, 2ch
jmp     loc_405730
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432984
jmp     ___cxxframehandler3
lea     ecx, [ebp+block]
jmp     loc_405680
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-34h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432900
jmp     ___cxxframehandler3
mov     ecx, [ebp+var_10]
jmp     unknown_libname_2
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4326a4
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_2c]
jmp     unknown_libname_2
lea     ecx, [ebp+var_2c]
jmp     loc_407410
lea     ecx, [ebp+var_1c]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-38h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4327d4
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_10]
jmp     ??1locale@std@@qae@xz
lea     ecx, [ebp+arg_0]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_431e90
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_10]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_43218c
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_10]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_431ec4
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_2c]
jmp     loc_405680
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-58h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_431e0c
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_10]
jmp     ??1locale@std@@qae@xz
lea     ecx, [ebp+var_14]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_431f48
jmp     ___cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_431ef0
jmp     ___cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4322c4
jmp     ___cxxframehandler3
mov     edx, [esp-4+size]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432504
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4321b8
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_38]
jmp     loc_409fc0
lea     ecx, [ebp+var_38]
jmp     loc_409f60
lea     ecx, [ebp+var_58]
jmp     loc_409fc0
lea     ecx, [ebp+var_58]
jmp     loc_409f60
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-60h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432218
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_54]
jmp     loc_409fc0
lea     ecx, [ebp+var_54]
jmp     loc_409f60
lea     ecx, [ebp+var_34]
jmp     loc_409fc0
lea     ecx, [ebp+var_34]
jmp     loc_409f60
mov     edx, dword ptr [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-5ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432098
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_3c]
jmp     loc_409fc0
lea     ecx, [ebp+var_3c]
jmp     loc_409f60
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-40h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4321e4
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_5c]
jmp     ??1locale@std@@qae@xz
lea     ecx, [ebp+var_44]
jmp     loc_405680
lea     ecx, [ebp+var_5c]
jmp     ??1locale@std@@qae@xz
lea     ecx, [ebp+block]
jmp     loc_405680
mov     edx, [esp-4+arg_4]
lea     eax, [edx-74h]
mov     ecx, [edx-78h]
xor     ecx, eax
call    @__security_check_cookie@4
add     eax, 0ch
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4325d4
jmp     ___cxxframehandler3
mov     eax, [ebp+var_64]
push    eax
call    j__free
pop     ecx
retn
mov     eax, [ebp+var_68]
and     eax, 1
jz      locret_4284b3
and     [ebp+var_68], 0fffffffeh
lea     ecx, [ebp+block]
jmp     loc_405680
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx-6ch]
mov     ecx, [edx-70h]
xor     ecx, eax
call    @__security_check_cookie@4
add     eax, 0ch
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_431fc0
jmp     ___cxxframehandler3
mov     eax, [ebp+block]
push    eax
call    j__free
pop     ecx
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-5ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_43292c
jmp     ___cxxframehandler3
mov     eax, [ebp+block]
push    eax
call    j__free
pop     ecx
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-48h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4323ec
jmp     ___cxxframehandler3
mov     eax, [ebp+block]
push    eax
call    j__free
pop     ecx
retn
mov     eax, [ebp+var_10]
and     eax, 1
jz      locret_428563
and     [ebp+var_10], 0fffffffeh
lea     ecx, [ebp+var_44]
jmp     sub_4035f0
retn
mov     ecx, [ebp+block]
jmp     loc_403710
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-48h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4323a8
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_10]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432108
jmp     ___cxxframehandler3
mov     edx, dword ptr [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-48h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432350
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_4c]
jmp     ??1locale@std@@qae@xz
lea     ecx, [ebp+var_44]
jmp     loc_405680
lea     ecx, [ebp+var_5c]
jmp     ??1locale@std@@qae@xz
lea     ecx, [ebp+block]
jmp     loc_405680
mov     edx, [esp-4+arg_4]
lea     eax, [edx-5ch]
mov     ecx, [edx-60h]
xor     ecx, eax
call    @__security_check_cookie@4
add     eax, 0ch
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432590
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_24]
jmp     loc_409fc0
mov     edx, [esp-4+arg_4]
lea     eax, [edx-44h]
mov     ecx, [edx-48h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_43225c
jmp     ___cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432618
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_4c]
jmp     ??1locale@std@@qae@xz
lea     ecx, [ebp+var_44]
jmp     loc_405680
mov     edx, [esp-4+arg_4]
lea     eax, [edx-54h]
mov     ecx, [edx-58h]
xor     ecx, eax
call    @__security_check_cookie@4
add     eax, 0ch
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432670
jmp     ___cxxframehandler3
mov     eax, [ebp+var_10]
and     eax, 1
jz      locret_4286d8
and     [ebp+var_10], 0fffffffeh
mov     ecx, [ebp+arg_0]
jmp     loc_405680
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4320dc
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     loc_407410
mov     edx, [esp-4+arg_4]
lea     eax, [edx-14h]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4327a8
jmp     ___cxxframehandler3
lea     ecx, [ebp+arg_0]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432714
jmp     ___cxxframehandler3
lea     ecx, [ebp+arg_4]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432134
jmp     ___cxxframehandler3
mov     eax, [ebp+var_48]
and     eax, 1
jz      locret_4287a8
and     [ebp+var_48], 0fffffffeh
lea     ecx, [ebp+src]
jmp     loc_405680
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx-4ch]
mov     ecx, [edx-50h]
xor     ecx, eax
call    @__security_check_cookie@4
add     eax, 0ch
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432958
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_30]
jmp     ??1locale@std@@qae@xz
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-30h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432160
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_3a0]
jmp     sub_405e00
lea     ecx, [ebp+lpmultibytestr]
jmp     loc_405680
lea     ecx, [ebp+var_390]
jmp     loc_4053b0
lea     ecx, [ebp+var_268]
jmp     loc_405680
lea     ecx, [ebp+block]
jmp     loc_405680
lea     ecx, [ebp+var_250]
jmp     loc_405680
lea     ecx, [ebp+block]
jmp     loc_405680
lea     ecx, [ebp+var_280]
jmp     loc_405680
lea     ecx, [ebp+block]
jmp     loc_405680
lea     ecx, [ebp+block]
jmp     loc_405680
lea     ecx, [ebp+var_2b0]
jmp     loc_405680
lea     ecx, [ebp+block]
jmp     loc_405680
lea     ecx, [ebp+block]
jmp     loc_405680
lea     ecx, [ebp+block]
jmp     loc_405680
lea     ecx, [ebp+block]
jmp     loc_405680
lea     ecx, [ebp+block]
jmp     loc_405680
lea     ecx, [ebp+var_3a0]
jmp     sub_405e00
lea     ecx, [ebp+string]
jmp     loc_405680
mov     edx, [esp-4+argv]
lea     eax, [edx-3ach]
mov     ecx, [edx-3b0h]
xor     ecx, eax
call    @__security_check_cookie@4
add     eax, 0ch
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_432848
jmp     ___cxxframehandler3
push    offset sub_4289b0
call    _atexit
pop     ecx
retn
push    offset sub_4289a0
call    _atexit
pop     ecx
retn
push    offset sub_428990
call    _atexit
pop     ecx
retn
push    offset sub_4289bb
call    _atexit
pop     ecx
retn
push    offset sub_4289c5
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_43cf50
call    ??0_init_locks@std@@qae@xz
push    offset sub_4289cf
call    _atexit
pop     ecx
retn
push    offset sub_4289d9
call    _atexit
pop     ecx
retn
mov     ecx, offset byte_43d000
call    ??0_init_locks@std@@qae@xz
push    offset sub_4289e3
call    _atexit
pop     ecx
retn
mov     off_43c0e8, offset ??_7error_category@std@@6b@
retn
mov     off_43c0f0, offset ??_7error_category@std@@6b@
retn
mov     off_43c0ec, offset ??_7error_category@std@@6b@
retn
mov     ecx, offset word_43cefa
jmp     ??1_fac_tidy_reg_t@std@@qae@xz
mov     ecx, offset dword_43cf04
jmp     ??1locale@std@@qae@xz
mov     ecx, offset dword_43cf50
jmp     unknown_libname_6
mov     ecx, offset byte_43d003
jmp     ??1_init_atexit@@qae@xz
mov     ecx, offset byte_43d000
jmp     unknown_libname_6
offset __cta3?avlength_error@std@@>
offset __cta3?avout_of_range@std@@>
offset __cta3?avregex_error@std@@>
offset __catch$?callunexpected@@yaxpbu_s_estypelist@@@z$0>
offset __cta2?avbad_exception@std@@>
offset __cta2?avruntime_error@std@@>
offset __cta4?avfailure@ios_base@std@@>