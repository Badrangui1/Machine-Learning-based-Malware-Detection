import numpy as np
from tensorflow.keras.models import load_model
from sklearn.metrics import classification_report, confusion_matrix
import pickle

# Load preprocessed test data
X_test = np.load('X_test.npy')
y_test = np.load('y_test.npy')

# Load tokenizer
with open('tokenizer.pickle', 'rb') as handle:
    tokenizer = pickle.load(handle)

# Load CNN model
cnn_model = load_model('cnn_model.h5')

# Load RNN model
rnn_model = load_model('rnn_model.h5')

# Evaluate CNN model
cnn_predictions = cnn_model.predict(X_test)
cnn_predictions = (cnn_predictions > 0.5).astype(int).flatten()  # Convert probabilities to binary output

cnn_report = classification_report(y_test, cnn_predictions)
cnn_confusion = confusion_matrix(y_test, cnn_predictions)

print("CNN Model Evaluation:")
print(cnn_report)
print("Confusion Matrix:")
print(cnn_confusion)
print("\n")

# Evaluate RNN model
rnn_predictions = rnn_model.predict(X_test)
rnn_predictions = (rnn_predictions > 0.5).astype(int).flatten()  # Convert probabilities to binary output

rnn_report = classification_report(y_test, rnn_predictions)
rnn_confusion = confusion_matrix(y_test, rnn_predictions)

print("RNN Model Evaluation:")
print(rnn_report)
print("Confusion Matrix:")
print(rnn_confusion)
