mov     edi, edi
push    ebp
mov     ebp, esp
xor     eax, eax
cmp     [ebp+cchdest], eax
jnz     short loc_1001622
mov     eax, 80070057h
jmp     short loc_1001648
mov     edx, [ebp+pszdest]
push    esi
mov     esi, [ebp+pcchnewdestlength]
mov     cl, [esi]
test    cl, cl
jz      short loc_1001638
mov     [edx], cl
inc     edx
inc     esi
dec     [ebp+cchdest]
jnz     short loc_1001629
cmp     [ebp+cchdest], 0
pop     esi
jnz     short loc_1001645
dec     edx
mov     eax, 8007007ah
mov     byte ptr [edx], 0
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+cchmax]
xor     eax, eax
cmp     esi, eax
mov     ecx, esi
jz      short loc_1001671
mov     edx, [ebp+psz]
cmp     [edx], al
jz      short loc_100166d
inc     edx
dec     esi
jnz     short loc_1001665
cmp     esi, eax
jnz     short loc_1001678
mov     eax, 80070057h
jmp     short loc_1001683
mov     edx, [ebp+pcchlength]
cmp     edx, eax
jz      short loc_1001683
sub     ecx, esi
mov     [edx], ecx
pop     esi
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     [ebp+arg_4], eax
jb      short loc_10016a9
mov     ecx, [ebp+arg_4]
sub     ecx, eax
cmp     [ebp+arg_0], ecx
jb      short loc_10016a9
sub     eax, [ebp+arg_4]
add     eax, [ebp+arg_0]
jmp     short loc_10016ab
xor     eax, eax
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, ___security_cookie
push    ebx
xor     ebx, ebx
push    esi
mov     esi, [ebp+arg_0]
push    offset libfilename
mov     [ebp+stackcookie], eax
mov     [ebp+var_10], ebx
mov     [ebp+pidentifierauthority.value], bl
mov     [ebp+pidentifierauthority.value+1], bl
mov     [ebp+pidentifierauthority.value+2], bl
mov     [ebp+pidentifierauthority.value+3], bl
mov     [ebp+pidentifierauthority.value+4], bl
mov     [ebp+pidentifierauthority.value+5], 5
call    ds:__imp__loadlibrarya@4
cmp     eax, ebx
mov     [ebp+hlibmodule], eax
jz      short loc_100174a
push    edi
push    offset procname
push    eax
call    ds:__imp__getprocaddress@8
mov     edi, eax
cmp     edi, ebx
jz      short loc_1001740
lea     eax, [ebp+psid]
push    eax
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    220h
push    20h
push    2
lea     eax, [ebp+pidentifierauthority]
push    eax
mov     [ebp+var_10], 1
mov     [esi], ebx
call    ds:__imp__allocateandinitializesid@44
test    eax, eax
jz      short loc_1001740
push    esi
push    [ebp+psid]
push    ebx
call    edi
push    [ebp+psid]
call    ds:__imp__freesid@4
push    [ebp+hlibmodule]
call    ds:__imp__freelibrary@4
pop     edi
mov     ecx, [ebp+stackcookie]
mov     eax, [ebp+var_10]
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     eax, ___security_cookie
mov     [ebp+stackcookie], eax
mov     eax, dword_100b1fc
push    ebx
xor     ebx, ebx
cmp     eax, 2
mov     [ebp+pidentifierauthority.value], bl
mov     [ebp+pidentifierauthority.value+1], bl
mov     [ebp+pidentifierauthority.value+2], bl
mov     [ebp+pidentifierauthority.value+3], bl
mov     [ebp+pidentifierauthority.value+4], bl
mov     [ebp+pidentifierauthority.value+5], 5
mov     [ebp+var_10], ebx
jnz     loc_100188d
lea     eax, [ebp+var_10]
push    eax
call    _checktoken@4
test    eax, eax
jnz     loc_100187b
lea     eax, [ebp+tokenhandle]
push    eax
push    8
call    ds:__imp__getcurrentprocess@0
push    eax
call    ds:__imp__openprocesstoken@12
test    eax, eax
jz      loc_100188d
push    edi
mov     edi, ds:__imp__gettokeninformation@20
lea     eax, [ebp+returnlength]
push    eax
push    ebx
push    ebx
push    2
push    [ebp+tokenhandle]
call    edi
test    eax, eax
jnz     loc_100186f
call    ds:__imp__getlasterror@0
cmp     eax, 7ah
jnz     loc_100186f
push    esi
push    [ebp+returnlength]
push    ebx
call    ds:__imp__localalloc@8
mov     esi, eax
cmp     esi, ebx
jz      short loc_100186e
lea     eax, [ebp+returnlength]
push    eax
push    [ebp+returnlength]
push    esi
push    2
push    [ebp+tokenhandle]
call    edi
test    eax, eax
jz      short loc_1001867
lea     eax, [ebp+psid]
push    eax
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    ebx
push    220h
push    20h
push    2
lea     eax, [ebp+pidentifierauthority]
push    eax
call    ds:__imp__allocateandinitializesid@44
test    eax, eax
jz      short loc_1001867
cmp     [esi], ebx
jbe     short loc_100185e
lea     edi, [esi+4]
push    [ebp+psid]
push    dword ptr [edi]
call    ds:__imp__equalsid@8
test    eax, eax
jnz     short loc_1001853
inc     ebx
add     edi, 8
cmp     ebx, [esi]
jb      short loc_100183a
jmp     short loc_100185e
xor     eax, eax
inc     eax
mov     dword_100b1fc, eax
mov     [ebp+var_10], eax
push    [ebp+psid]
call    ds:__imp__freesid@4
push    esi
call    ds:__imp__localfree@4
pop     esi
push    [ebp+tokenhandle]
call    ds:__imp__closehandle@4
pop     edi
jmp     short loc_100188a
cmp     [ebp+var_10], ebx
jz      short loc_100188a
mov     dword_100b1fc, 1
mov     eax, [ebp+var_10]
mov     ecx, [ebp+stackcookie]
pop     ebx
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 204h
mov     eax, ___security_cookie
mov     [ebp+stackcookie], eax
mov     eax, [ebp+arg_4]
sub     eax, 110h
push    esi
mov     esi, [ebp+hdlg]
jz      short loc_10018e3
dec     eax
jz      short loc_10018c5
xor     eax, eax
jmp     short loc_1001930
cmp     [ebp+nresult], 83dh
jb      short loc_10018c1
cmp     [ebp+nresult], 83eh
ja      short loc_10018c1
push    [ebp+nresult]
push    esi
call    ds:__imp__enddialog@8
jmp     short loc_100192d
call    ds:__imp__getdesktopwindow@0
push    eax
push    esi
call    _centerwindow@8
push    200h
lea     eax, [ebp+buffer]
push    eax
push    [ebp+uid]
mov     [ebp+buffer], 0
push    _g_hinst
call    ds:__imp__loadstringa@16
lea     eax, [ebp+buffer]
push    eax
push    83fh
push    esi
call    ds:__imp__setdlgitemtexta@12
push    0ffffffffh
call    ds:__imp__messagebeep@4
xor     eax, eax
inc     eax
mov     ecx, [ebp+stackcookie]
pop     esi
call    @__security_check_cookie@4
leave
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, [ebx]
push    edi
xor     edi, edi
jmp     short loc_1001959
cmp     byte ptr [esi], 0
jz      short loc_1001972
inc     esi
movsx   ax, byte ptr [esi]
push    eax
push    [ebp+lpsz]
call    _ansistrchr@8
test    eax, eax
jnz     short loc_1001953
mov     [ebx], esi
movsx   ax, byte ptr [esi]
jmp     short loc_1001982
xor     eax, eax
jmp     short loc_100199b
cmp     byte ptr [edi+esi], 0
jz      short loc_100198f
inc     edi
movsx   ax, byte ptr [edi+esi]
push    eax
push    [ebp+lpsz]
call    _ansistrchr@8
test    eax, eax
jz      short loc_1001976
lea     eax, [edi+esi]
cmp     byte ptr [eax], 0
jz      short loc_100199b
mov     byte ptr [eax], 0
inc     eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
xor     eax, eax
push    eax
push    40h
push    eax
push    offset pszcabpath
push    521h
push    eax
call    _msgbox2param@24
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
push    esi
lea     eax, [ebp+tokenhandle]
push    eax
push    28h
call    ds:__imp__getcurrentprocess@0
push    eax
call    ds:__imp__openprocesstoken@12
xor     esi, esi
test    eax, eax
jnz     short loc_10019f1
push    esi
push    10h
push    esi
push    esi
push    4f5h
jmp     short loc_1001a46
lea     eax, [ebp+newstate.privileges]
push    eax
push    offset name
push    esi
call    ds:__imp__lookupprivilegevaluea@12
push    esi
push    esi
push    esi
lea     eax, [ebp+newstate]
push    eax
push    esi
push    [ebp+tokenhandle]
mov     [ebp+newstate.privilegecount], 1
mov     [ebp+newstate.privileges.attributes], 2
call    ds:__imp__adjusttokenprivileges@24
test    eax, eax
push    esi
jnz     short loc_1001a30
push    10h
push    esi
push    esi
push    4f6h
jmp     short loc_1001a46
push    2
call    ds:__imp__exitwindowsex@8
test    eax, eax
jnz     short loc_1001a50
push    esi
push    10h
push    esi
push    esi
push    4f7h
push    esi
call    _msgbox2param@24
xor     eax, eax
jmp     short loc_1001a53
xor     eax, eax
inc     eax
pop     esi
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
cmp     _g_szregvalname, 0
jz      short locret_1001aa0
lea     eax, [ebp+phkresult]
push    eax
push    20006h
push    0
push    offset subkey
push    80000002h
call    ds:__imp__regopenkeyexa@20
test    eax, eax
jnz     short locret_1001aa0
push    offset _g_szregvalname
push    [ebp+phkresult]
call    ds:__imp__regdeletevaluea@8
push    [ebp+phkresult]
call    ds:__imp__regclosekey@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 220h
mov     eax, ___security_cookie
push    edi
push    40h
pop     ecx
mov     [ebp+stackcookie], eax
xor     eax, eax
mov     [ebp+filename], 0
lea     edi, [ebp+var_107]
rep stosd
stosw
push    40h
pop     ecx
stosb
xor     eax, eax
mov     [ebp+buffer], 0
lea     edi, [ebp+var_20b]
rep stosd
stosw
stosb
lea     eax, [ebp+dwdisposition]
push    eax
xor     edi, edi
lea     eax, [ebp+phkresult]
push    eax
push    edi
push    2001fh
push    edi
push    edi
push    edi
push    offset subkey
push    80000002h
mov     [ebp+var_218], edi
call    ds:__imp__regcreatekeyexa@36
test    eax, eax
jnz     loc_1001ce4
push    ebx
push    esi
mov     [ebp+hlibmodule], edi
mov     esi, offset _g_szregvalname
mov     ebx, 0c8h
push    [ebp+hlibmodule]
push    offset awextractcleanu
push    esi
call    ds:__imp__wsprintfa
add     esp, 0ch
lea     eax, [ebp+cbdata]
push    eax
push    edi
push    edi
push    edi
push    esi
push    [ebp+phkresult]
call    ds:__imp__regqueryvalueexa@24
test    eax, eax
jnz     short loc_1001b70
inc     [ebp+hlibmodule]
cmp     [ebp+hlibmodule], ebx
jl      short loc_1001b32
cmp     [ebp+hlibmodule], ebx
jnz     short loc_1001b90
push    [ebp+phkresult]
call    ds:__imp__regclosekey@4
mov     _g_szregvalname, 0
jmp     loc_1001ce2
mov     ebx, ds:__imp__getsystemdirectorya@8
mov     esi, 104h
push    esi
lea     eax, [ebp+buffer]
push    eax
call    ebx
push    offset pszsrc
push    esi
lea     eax, [ebp+buffer]
push    eax
call    _addpath@12
lea     eax, [ebp+buffer]
push    eax
call    ds:__imp__loadlibrarya@4
cmp     eax, edi
mov     [ebp+hlibmodule], eax
jz      short loc_1001c1a
push    offset adelnoderundll3
push    eax
call    ds:__imp__getprocaddress@8
push    [ebp+hlibmodule]
mov     edi, eax
neg     edi
sbb     edi, edi
neg     edi
mov     [ebp+var_218], edi
call    ds:__imp__freelibrary@4
test    edi, edi
jz      short loc_1001c1a
push    esi
lea     eax, [ebp+filename]
push    eax
call    ebx
test    eax, eax
jz      short loc_1001c32
push    offset pszcabpath
push    esi
lea     eax, [ebp+filename]
push    eax
call    _addpath@12
jmp     short loc_1001c32
push    esi
lea     eax, [ebp+filename]
push    eax
push    _g_hinst
call    ds:__imp__getmodulefilenamea@12
test    eax, eax
jz      short loc_1001c70
mov     esi, ds:__imp__lstrlena@4
mov     edi, offset filename
push    edi
call    esi
mov     ebx, eax
lea     eax, [ebp+filename]
push    eax
call    esi
lea     eax, [ebx+eax+50h]
push    eax
push    40h
call    ds:__imp__localalloc@8
mov     ebx, eax
xor     eax, eax
cmp     ebx, eax
jnz     short loc_1001c7e
push    eax
push    10h
push    eax
push    eax
push    4b5h
push    eax
call    _msgbox2param@24
push    [ebp+phkresult]
call    ds:__imp__regclosekey@4
jmp     short loc_1001ce2
xor     ecx, ecx
cmp     [ebp+var_218], eax
setz    cl
cmp     [ebp+var_218], eax
mov     eax, offset arundll32exesad
mov     _g_bconvertrunonce, ecx
jnz     short loc_1001ca1
mov     eax, offset asds
push    edi
lea     ecx, [ebp+filename]
push    ecx
push    eax
push    ebx
call    ds:__imp__wsprintfa
add     esp, 10h
push    ebx
call    esi
inc     eax
push    eax
push    ebx
push    1
push    0
push    offset _g_szregvalname
push    [ebp+phkresult]
call    ds:__imp__regsetvalueexa@24
push    [ebp+phkresult]
call    ds:__imp__regclosekey@4
push    ebx
call    ds:__imp__localfree@4
pop     esi
pop     ebx
mov     ecx, [ebp+stackcookie]
pop     edi
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 348h
mov     eax, ___security_cookie
push    ebx
xor     ebx, ebx
cmp     _g_szregvalname, bl
mov     [ebp+stackcookie], eax
jz      loc_1001e03
lea     eax, [ebp+phkresult]
push    eax
push    2001fh
push    ebx
push    offset subkey
push    80000002h
call    ds:__imp__regopenkeyexa@20
test    eax, eax
jnz     loc_1001e03
push    esi
lea     eax, [ebp+cbdata]
push    eax
lea     eax, [ebp+data]
push    eax
push    ebx
push    ebx
mov     esi, offset _g_szregvalname
push    esi
push    [ebp+phkresult]
mov     [ebp+cbdata], 238h
call    ds:__imp__regqueryvalueexa@24
test    eax, eax
jnz     loc_1001df6
push    edi
push    40h
pop     ecx
mov     [ebp+buffer], bl
lea     edi, [ebp+var_107]
rep stosd
stosw
stosb
mov     edi, 104h
push    edi
lea     eax, [ebp+buffer]
push    eax
call    ds:__imp__getsystemdirectorya@8
test    eax, eax
jz      short loc_1001dae
push    offset pszcabpath
push    edi
lea     eax, [ebp+buffer]
push    eax
call    _addpath@12
push    offset filename
lea     eax, [ebp+buffer]
push    eax
lea     eax, [ebp+data]
push    offset arundll32exesad
push    eax
call    ds:__imp__wsprintfa
add     esp, 10h
lea     eax, [ebp+data]
push    eax
call    ds:__imp__lstrlena@4
inc     eax
push    eax
lea     eax, [ebp+data]
push    eax
push    1
push    ebx
push    esi
push    [ebp+phkresult]
call    ds:__imp__regsetvalueexa@24
pop     edi
push    [ebp+phkresult]
call    ds:__imp__regclosekey@4
pop     esi
mov     ecx, [ebp+stackcookie]
pop     ebx
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+lpstring]
test    esi, esi
jz      short loc_1001e47
push    esi
call    ds:__imp__lstrlena@4
cmp     eax, 3
jl      short loc_1001e47
mov     al, [esi+1]
cmp     al, 3ah
jnz     short loc_1001e39
cmp     byte ptr [esi+2], 5ch
jz      short loc_1001e42
cmp     byte ptr [esi], 5ch
jnz     short loc_1001e47
cmp     al, 5ch
jnz     short loc_1001e47
xor     eax, eax
inc     eax
jmp     short loc_1001e49
xor     eax, eax
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 108h
mov     eax, ___security_cookie
push    esi
push    edi
mov     [ebp+stackcookie], eax
mov     esi, 104h
push    esi
lea     eax, [ebp+buffer]
push    eax
xor     edi, edi
call    ds:__imp__getwindowsdirectorya@8
test    eax, eax
jz      short loc_1001ecc
push    offset awininitini
push    esi
lea     eax, [ebp+buffer]
push    eax
call    _addpath@12
lea     eax, [ebp+buffer]
push    eax
push    edi
push    edi
push    edi
call    ds:__imp__writeprivateprofilestringa@16
push    40h
lea     eax, [ebp+buffer]
push    eax
call    ds:__imp___lopen@8
mov     esi, eax
cmp     esi, 0ffffffffh
jz      short loc_1001ecc
push    2
push    edi
push    esi
call    ds:__imp___llseek@12
push    esi
mov     edi, eax
call    ds:__imp___lclose@4
mov     ecx, [ebp+stackcookie]
mov     eax, edi
pop     edi
pop     esi
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    esi
lea     eax, [ebp+lpsubkey]
push    eax
push    20019h
xor     esi, esi
push    esi
push    [ebp+lpsubkey]
mov     [ebp+cbdata], esi
push    80000002h
call    ds:__imp__regopenkeyexa@20
test    eax, eax
jnz     short loc_1001f2a
lea     eax, [ebp+cbdata]
push    eax
push    esi
push    esi
push    esi
push    [ebp+lpvaluename]
push    [ebp+lpsubkey]
call    ds:__imp__regqueryvalueexa@24
test    eax, eax
jz      short loc_1001f21
mov     [ebp+cbdata], esi
push    [ebp+lpsubkey]
call    ds:__imp__regclosekey@4
mov     eax, [ebp+cbdata]
pop     esi
leave
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    esi
lea     eax, [ebp+lpsubkey]
push    eax
push    20019h
xor     esi, esi
push    esi
push    [ebp+lpsubkey]
mov     [ebp+cvalues], esi
push    80000002h
call    ds:__imp__regopenkeyexa@20
test    eax, eax
jnz     short loc_1001f86
push    esi
push    esi
push    esi
push    esi
lea     eax, [ebp+cvalues]
push    eax
push    esi
push    esi
push    esi
push    esi
push    esi
push    esi
push    [ebp+lpsubkey]
call    ds:__imp__regqueryinfokeya@48
test    eax, eax
jz      short loc_1001f7d
mov     [ebp+cvalues], esi
push    [ebp+lpsubkey]
call    ds:__imp__regclosekey@4
mov     eax, [ebp+cvalues]
pop     esi
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
movzx   ecx, [ebp+arg_0]
xor     eax, eax
test    ecx, ecx
jz      short loc_1001fcb
cmp     ecx, 1
jz      short loc_1001fbf
jle     short loc_1001fd0
cmp     ecx, 3
jg      short loc_1001fd0
push    offset valuename
push    offset asystemcurrentc
call    _getregvaluesize@8
jmp     short loc_1001fd0
push    offset asystemcurrentc_0
call    _getnumberofvalues@4
jmp     short loc_1001fd0
call    _getwininitsize@0
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_4]
call    _needrebootinit@4
xor     ecx, ecx
cmp     [ebp+dwrebootcheck], eax
setnz   cl
mov     eax, ecx
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+lpfilename]
call    ds:__imp__getfileattributesa@4
cmp     eax, 0ffffffffh
jnz     short loc_1002019
push    0
push    [ebp+lpfilename]
call    ds:__imp__createdirectorya@8
jmp     short loc_100201c
and     eax, 10h
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 108h
mov     eax, ___security_cookie
mov     [ebp+stackcookie], eax
push    104h
lea     eax, [ebp+buffer]
push    eax
call    ds:__imp__getwindowsdirectorya@8
test    eax, eax
jnz     short loc_100205e
push    eax
push    10h
push    eax
push    eax
push    4f0h
push    eax
call    _msgbox2param@24
mov     ecx, [ebp+arg_0]
mov     cl, [ecx]
xor     eax, eax
cmp     cl, [ebp+buffer]
mov     ecx, [ebp+stackcookie]
setz    al
call    @__security_check_cookie@4
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_0]
push    offset alu
push    [ebp+arg_4]
call    ds:__imp__wsprintfa
mov     eax, [ebp+arg_4]
add     esp, 0ch
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, ___security_cookie
push    esi
push    edi
xor     edi, edi
xor     esi, esi
cmp     [ebp+arg_0], 1
mov     [ebp+stackcookie], eax
mov     eax, [ebp+arg_c]
mov     _g_dwexitcode, 70h
jnz     short loc_10020f1
mov     ecx, [ebp+arg_8]
push    edi
push    10h
push    edi
lea     eax, [ebp+var_10]
push    eax
mov     eax, [ebp+arg_4]
add     eax, ecx
push    eax
call    _myultoa@8
push    eax
push    4fah
push    edi
call    _msgbox2param@24
jmp     short loc_100215a
cmp     [ebp+arg_0], 4
jnz     short loc_1002126
mov     ecx, [ebp+arg_4]
push    5
push    20h
push    edi
lea     eax, [ebp+var_10]
push    eax
mov     eax, [ebp+arg_8]
add     ecx, eax
push    ecx
call    _myultoa@8
push    eax
push    4bdh
push    edi
call    _msgbox2param@24
mov     esi, eax
sub     esi, 4
neg     esi
sbb     esi, esi
inc     esi
jmp     short loc_100215a
cmp     [ebp+arg_0], 2
jnz     short loc_100215a
push    104h
push    40h
push    eax
lea     eax, [ebp+var_10]
push    eax
push    [ebp+arg_8]
call    _myultoa@8
push    eax
push    4cch
push    edi
call    _msgbox2param@24
cmp     eax, 6
jnz     short loc_100215a
xor     esi, esi
inc     esi
mov     _g_dwexitcode, edi
mov     ecx, [ebp+stackcookie]
pop     edi
mov     eax, esi
pop     esi
call    @__security_check_cookie@4
leave
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    al, 1
jz      short loc_1002182
mov     eax, 104h
jmp     short loc_100218d
and     al, 2
neg     al
sbb     eax, eax
and     eax, 101h
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     eax, [ebp+arg_8]
jnb     short loc_10021a8
or      eax, 0ffffffffh
jmp     short loc_10021bb
jbe     short loc_10021af
xor     eax, eax
inc     eax
jmp     short loc_10021bb
mov     eax, [ebp+arg_4]
cmp     [ebp+arg_c], eax
ja      short loc_10021a3
sbb     eax, eax
neg     eax
pop     ebp
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     [ebp+cchdest], 7fffffffh
jbe     short loc_10021db
mov     eax, 80070057h
pop     ebp
retn    0ch
pop     ebp
jmp     _stringcopyworkera@12
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+cchmax]
push    edi
mov     edi, [ebp+psz]
lea     eax, [ebp+cchmax]
push    eax
push    esi
push    edi
call    _stringlengthworkera@12
test    eax, eax
jl      short loc_1002213
push    [ebp+pcchnewdestlength]
mov     eax, [ebp+cchmax]
sub     esi, eax
push    esi
add     eax, edi
push    eax
call    _stringcopyworkera@12
pop     edi
pop     esi
pop     ebp
retn    0ch
mov     edi, edi
push    esi
or      esi, 0ffffffffh
cmp     _g_uinfrebooton, 0
jnz     short loc_1002245
xor     eax, eax
mov     ax, _g_wosver
push    eax
push    _g_dwrebootcheck
call    _needreboot@8
test    eax, eax
jz      short loc_1002248
push    2
pop     esi
mov     eax, esi
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 2
jnz     short loc_1002266
call    _checkreboot@0
cmp     eax, 2
jnz     short loc_10022a3
test    [ebp+arg_0], 4
jnz     short loc_1002288
push    4
push    40h
push    0
push    offset pszcabpath
push    522h
push    0
call    _msgbox2param@24
cmp     eax, 6
jnz     short loc_10022a3
cmp     _g_wosver, 0
jnz     short loc_100229e
push    0
push    2
call    ds:__imp__exitwindowsex@8
jmp     short loc_10022a3
call    _myntreboot@0
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 118h
mov     eax, ___security_cookie
and     [ebp+var_10c], 0
push    ebx
push    esi
mov     esi, [ebp+lpdata]
push    edi
mov     edi, [ebp+arg_8]
mov     byte ptr [esi], 0
cmp     byte ptr [edi], 23h
mov     [ebp+stackcookie], eax
jnz     loc_10023dc
inc     edi
movsx   eax, byte ptr [edi]
push    eax
call    ds:__imp__charuppera@4
push    edi
mov     edi, ds:__imp__charnexta@4
mov     bl, al
call    edi
push    eax
call    edi
cmp     bl, 53h
mov     edi, eax
jz      loc_10023dc
cmp     bl, 57h
jz      loc_10023d0
push    offset string2
lea     eax, [ebp+string1]
mov     ebx, 104h
push    eax
mov     [ebp+cbdata], ebx
call    ds:__imp__lstrcpya@8
push    edi
push    ebx
lea     eax, [ebp+string1]
push    eax
call    _addpath@12
lea     eax, [ebp+phkresult]
push    eax
push    20019h
push    0
lea     eax, [ebp+string1]
push    eax
push    80000002h
call    ds:__imp__regopenkeyexa@20
test    eax, eax
jnz     loc_10023ef
lea     eax, [ebp+cbdata]
push    eax
push    esi
lea     eax, [ebp+type]
push    eax
push    0
push    offset pszcabpath
push    [ebp+phkresult]
call    ds:__imp__regqueryvalueexa@24
test    eax, eax
jnz     short loc_10023c2
cmp     [ebp+type], 2
jnz     short loc_10023af
push    ebx
lea     eax, [ebp+string1]
push    eax
push    esi
call    ds:__imp__expandenvironmentstringsa@12
test    eax, eax
jz      short loc_10023af
lea     eax, [ebp+string1]
push    eax
push    [ebp+cchdest]
push    esi
call    _stringcchcopya@12
jmp     short loc_10023b8
cmp     [ebp+type], 1
jnz     short loc_10023c2
mov     [ebp+var_10c], 1
push    [ebp+phkresult]
call    ds:__imp__regclosekey@4
jmp     short loc_10023e6
push    [ebp+cchdest]
push    esi
call    ds:__imp__getwindowsdirectorya@8
jmp     short loc_10023ef
push    [ebp+cchdest]
push    esi
call    ds:__imp__getsystemdirectorya@8
cmp     [ebp+var_10c], 0
jnz     short loc_10023f9
push    edi
push    [ebp+cchdest]
push    esi
call    _addpath@12
mov     ecx, [ebp+stackcookie]
pop     edi
xor     eax, eax
pop     esi
inc     eax
pop     ebx
call    @__security_check_cookie@4
leave
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 30h
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     edi, [ebp+arg_0]
cmp     [edi+7ch], ebx
mov     [ebp+hmem], ebx
mov     [ebp+var_10], ebx
mov     [ebp+var_8], ebx
jle     loc_1002551
mov     [ebp+var_c], ebx
jmp     short loc_1002439
xor     ebx, ebx
mov     eax, [ebp+var_c]
mov     ecx, [edi+80h]
add     eax, edi
lea     esi, [eax+ecx+84h]
mov     eax, [esi+38h]
lea     eax, [eax+edi+84h]
push    eax
push    [ebp+cchdest]
push    [ebp+lptstrfilename]
call    _getfiletobechecked@12
test    eax, eax
jz      loc_1002558
lea     eax, [ebp+dwhandle]
push    eax
push    [ebp+lptstrfilename]
call    _getfileversioninfosizea@8
cmp     eax, ebx
mov     [ebp+dwlen], eax
jz      loc_1002535
push    eax
push    42h
call    ds:__imp__globalalloc@8
cmp     eax, ebx
mov     [ebp+hmem], eax
jz      loc_1002558
push    eax
call    ds:__imp__globallock@4
mov     ebx, eax
test    ebx, ebx
jz      loc_1002558
push    ebx
push    [ebp+dwlen]
push    [ebp+dwhandle]
push    [ebp+lptstrfilename]
call    _getfileversioninfoa@16
test    eax, eax
jz      short loc_100252a
lea     eax, [ebp+pulen]
push    eax
lea     eax, [ebp+lpbuffer]
push    eax
push    offset subblock
push    ebx
call    _verqueryvaluea@16
test    eax, eax
jz      short loc_100252a
cmp     [ebp+pulen], 0
jz      short loc_100252a
mov     eax, [ebp+lpbuffer]
mov     edi, [eax+0ch]
mov     ebx, [eax+8]
lea     ecx, [esi+10h]
xor     edx, edx
push    dword ptr [ecx-0ch]
push    dword ptr [ecx-10h]
push    edi
push    ebx
call    _compareversion@16
push    dword ptr [ecx]
mov     [ebp+edx+var_28], eax
push    dword ptr [ecx-4]
push    edi
push    ebx
call    _compareversion@16
mov     [ebp+edx+var_30], eax
add     edx, 4
add     ecx, 18h
cmp     edx, 8
jl      short loc_10024e3
cmp     [ebp+var_28], 0
jl      short loc_100251b
cmp     [ebp+var_30], 0
jle     short loc_1002527
cmp     [ebp+var_24], 0
jl      short loc_1002579
cmp     [ebp+var_2c], 0
jg      short loc_1002579
mov     edi, [ebp+arg_0]
push    [ebp+hmem]
call    ds:__imp__globalunlock@4
jmp     short loc_100253e
cmp     [esi], ebx
jnz     short loc_1002558
cmp     [esi+4], ebx
jnz     short loc_1002558
inc     [ebp+var_8]
mov     eax, [ebp+var_8]
add     [ebp+var_c], 3ch
cmp     eax, [edi+7ch]
jl      loc_1002437
mov     [ebp+var_10], 1
cmp     [ebp+hmem], 0
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
mov     [eax], ecx
pop     ebx
jz      short loc_1002572
push    [ebp+hmem]
call    ds:__imp__globalfree@4
mov     eax, [ebp+var_10]
leave
retn    10h
push    [ebp+hmem]
call    ds:__imp__globalunlock@4
jmp     short loc_1002558
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10ch
mov     eax, ___security_cookie
push    esi
mov     esi, [ebp+lpsz]
test    esi, esi
push    edi
mov     edi, [ebp+pszdest]
mov     [ebp+stackcookie], eax
mov     [ebp+var_10c], edi
mov     byte ptr [edi], 0
jz      loc_10026ad
cmp     byte ptr [esi], 0
jz      loc_10026ad
push    104h
lea     eax, [ebp+filename]
push    eax
push    _g_hinst
call    ds:__imp__getmodulefilenamea@12
xor     eax, eax
mov     al, [esi]
test    al, al
jz      loc_10026aa
push    ebx
mov     ebx, ds:__imp__lstrlena@4
push    eax
call    ds:__imp__isdbcsleadbyte@4
test    eax, eax
mov     al, [esi]
mov     [edi], al
jz      short loc_10025fe
mov     al, [esi+1]
mov     [edi+1], al
cmp     byte ptr [esi], 23h
jnz     loc_100268d
push    esi
call    ds:__imp__charnexta@4
mov     esi, eax
movsx   eax, byte ptr [esi]
push    eax
call    ds:__imp__charuppera@4
cmp     al, 44h
jnz     short loc_1002656
lea     eax, [ebp+filename]
push    eax
call    _getparentdir@4
lea     eax, [ebp+filename]
push    eax
call    ebx
lea     eax, [ebp+eax+filename]
push    eax
lea     eax, [ebp+filename]
push    eax
call    ds:__imp__charpreva@8
test    eax, eax
jz      short loc_1002664
cmp     byte ptr [eax], 5ch
jnz     short loc_1002664
mov     byte ptr [eax], 0
jmp     short loc_1002664
movsx   eax, byte ptr [esi]
push    eax
call    ds:__imp__charuppera@4
cmp     al, 45h
jnz     short loc_1002688
lea     eax, [ebp+filename]
push    eax
mov     eax, [ebp+var_10c]
push    edi
push    [ebp+arg_8]
call    sub_100168d
push    eax
push    edi
call    _stringcchcopya@12
push    edi
call    ebx
add     edi, eax
jmp     short loc_1002696
cmp     byte ptr [esi], 23h
jnz     short loc_1002696
push    edi
call    ds:__imp__charnexta@4
mov     edi, eax
push    esi
call    ds:__imp__charnexta@4
mov     esi, eax
mov     al, [esi]
test    al, al
jnz     loc_10025e9
pop     ebx
mov     byte ptr [edi], 0
mov     ecx, [ebp+stackcookie]
pop     edi
pop     esi
call    @__security_check_cookie@4
leave
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     [ebp+cchdest], 7fffffffh
jbe     short loc_10026d7
mov     eax, 80070057h
pop     ebp
retn    0ch
pop     ebp
jmp     _stringcatworkera@12
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 620h
mov     eax, ___security_cookie
mov     ecx, [ebp+arg_8]
push    ebx
push    esi
mov     [ebp+stackcookie], eax
mov     eax, [ebp+pcchnewdestlength]
push    edi
push    eax
mov     [ebp+var_61c], eax
mov     esi, 104h
mov     [ebp+var_620], ecx
mov     ecx, [ebp+arg_c]
push    esi
lea     eax, [ebp+pszdest]
push    eax
mov     [ebp+var_618], ecx
call    _stringcopyworkera@12
cmp     [ebp+pszdest], 22h
jnz     short loc_100273c
lea     eax, [ebp+var_20b]
push    offset asc_1001340
jmp     short loc_1002747
lea     eax, [ebp+pszdest]
push    offset asc_100133c
mov     [ebp+lpstring2], eax
lea     eax, [ebp+lpstring2]
push    eax
call    _extractfield@8
mov     edi, [ebp+lpstring2]
push    edi
mov     [ebp+var_614], eax
call    _isrootpath@4
test    eax, eax
lea     eax, [ebp+string1]
jnz     short loc_1002791
push    offset filename
push    eax
call    ds:__imp__lstrcpya@8
push    edi
push    esi
lea     eax, [ebp+string1]
push    eax
call    _addpath@12
jmp     short loc_1002799
push    edi
push    eax
call    ds:__imp__lstrcpya@8
push    2eh
push    edi
call    _ansistrrchr@8
mov     esi, ds:__imp__lstrcmpia@8
xor     ebx, ebx
cmp     eax, ebx
jz      loc_1002959
push    offset ainf
push    eax
call    esi
test    eax, eax
jnz     loc_1002959
lea     eax, [ebp+string1]
push    eax
call    _fileexists@4
test    eax, eax
jnz     short loc_10027e6
push    ebx
push    10h
push    ebx
lea     eax, [ebp+string1]
push    eax
push    525h
jmp     loc_10029e4
mov     eax, [ebp+var_614]
mov     [ebp+lpstring2], eax
push    offset asc_1001330
lea     eax, [ebp+lpstring2]
push    eax
call    _extractfield@8
mov     esi, ds:__imp__lstrlena@4
push    offset adefaultinstall
mov     edi, eax
call    esi
cmp     edi, ebx
jz      short loc_1002840
cmp     [edi], bl
jz      short loc_1002820
mov     [ebp+lpstring2], edi
push    offset asc_100132c
lea     eax, [ebp+lpstring2]
push    eax
call    _extractfield@8
mov     edi, [ebp+lpstring2]
cmp     [edi], bl
jz      short loc_1002846
push    edi
call    esi
jmp     short loc_1002846
mov     edi, [ebp+lpstring2]
push    200h
push    40h
call    ds:__imp__localalloc@8
cmp     eax, ebx
mov     [ebp+lpstring2], eax
jz      loc_10029da
cmp     [edi], bl
mov     esi, offset adefaultinstall
mov     eax, edi
jnz     short loc_100286e
mov     eax, esi
lea     ecx, [ebp+string1]
push    ecx
push    ebx
push    offset keyname
push    eax
call    ds:__imp__getprivateprofileinta@16
mov     _g_uinfrebooton, eax
mov     eax, [ebp+var_618]
mov     dword ptr [eax], 1
lea     eax, [ebp+string1]
push    eax
push    8
push    [ebp+lpstring2]
push    offset pszcabpath
push    offset aadvancedinf
push    offset appname
call    ds:__imp__getprivateprofilestringa@24
test    eax, eax
jbe     short loc_10028f3
or      dword_100c494, 4
cmp     [edi], bl
jnz     short loc_10028c8
mov     edi, esi
push    edi
push    [ebp+cchdest]
push    [ebp+var_61c]
call    _stringcchcopya@12
lea     eax, [ebp+string1]
push    eax
push    200h
push    [ebp+lpstring2]
call    _stringcchcopya@12
jmp     loc_1002a71
and     dword_100c494, 0fffffffbh
cmp     _g_wosver, bx
jnz     short loc_1002922
push    104h
lea     eax, [ebp+string1]
push    eax
push    eax
mov     [ebp+var_614], offset asetupxdll
call    ds:__imp__getshortpathnamea@12
jmp     short loc_100292c
mov     [ebp+var_614], offset asetupapidll
cmp     [edi], bl
jnz     short loc_1002932
mov     edi, esi
lea     eax, [ebp+string1]
push    eax
push    edi
push    [ebp+var_614]
push    offset arundll32exesin
push    [ebp+lpstring2]
call    ds:__imp__wsprintfa
add     esp, 14h
jmp     loc_1002a71
push    2eh
push    edi
call    _ansistrrchr@8
cmp     eax, ebx
jz      short loc_10029c2
push    offset abat
push    eax
call    esi
test    eax, eax
jnz     short loc_10029c2
mov     esi, ds:__imp__lstrlena@4
mov     edi, offset acommandcomcs
push    edi
call    esi
lea     ecx, [ebp+string1]
push    ecx
mov     [ebp+var_618], eax
call    esi
mov     ecx, [ebp+var_618]
lea     eax, [ecx+eax+8]
push    eax
push    40h
call    ds:__imp__localalloc@8
cmp     eax, ebx
mov     [ebp+lpstring2], eax
jz      short loc_10029da
lea     ecx, [ebp+string1]
push    ecx
push    edi
push    eax
call    ds:__imp__wsprintfa
add     esp, 0ch
jmp     loc_1002a71
mov     esi, 400h
push    esi
push    40h
call    ds:__imp__localalloc@8
cmp     eax, ebx
mov     [ebp+lpstring2], eax
jnz     short loc_10029f1
push    ebx
push    10h
push    ebx
push    ebx
push    4b5h
push    ebx
call    _msgbox2param@24
xor     eax, eax
jmp     loc_1002a82
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__getfileattributesa@4
cmp     eax, 0ffffffffh
jz      short loc_1002a4b
test    al, 10h
jnz     short loc_1002a4b
lea     eax, [ebp+string1]
push    eax
push    esi
lea     eax, [ebp+sz]
push    eax
call    _stringcopyworkera@12
mov     edi, [ebp+var_614]
cmp     edi, ebx
jz      short loc_1002a5e
cmp     [edi], bl
jz      short loc_1002a5e
push    offset asc_100133c
push    esi
lea     eax, [ebp+sz]
push    eax
call    _stringcatworkera@12
push    edi
push    esi
lea     eax, [ebp+sz]
push    eax
call    _stringcatworkera@12
jmp     short loc_1002a5e
push    [ebp+var_61c]
lea     eax, [ebp+sz]
push    esi
push    eax
call    _stringcopyworkera@12
push    esi
push    [ebp+lpstring2]
lea     eax, [ebp+sz]
push    eax
call    _expandcmdparams@12
mov     eax, [ebp+var_620]
mov     ecx, [ebp+lpstring2]
mov     [eax], ecx
xor     eax, eax
inc     eax
mov     ecx, [ebp+stackcookie]
pop     edi
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 24ch
mov     eax, ___security_cookie
push    edi
mov     edi, [ebp+pcchnewdestlength]
test    edi, edi
mov     [ebp+stackcookie], eax
jz      loc_1002bda
cmp     byte ptr [edi], 0
jz      loc_1002bda
push    esi
push    edi
mov     esi, 104h
push    esi
lea     eax, [ebp+pszdest]
push    eax
call    _stringcopyworkera@12
push    offset asc_100134c
push    esi
lea     eax, [ebp+pszdest]
push    eax
call    _stringcatworkera@12
lea     eax, [ebp+findfiledata]
push    eax
lea     eax, [ebp+pszdest]
push    eax
call    ds:__imp__findfirstfilea@8
cmp     eax, 0ffffffffh
mov     [ebp+hfindfile], eax
jz      loc_1002bd9
push    ebx
mov     ebx, ds:__imp__lstrcmpa@8
push    edi
push    esi
lea     eax, [ebp+pszdest]
push    eax
call    _stringcopyworkera@12
test    byte ptr [ebp+findfiledata.dwfileattributes], 10h
lea     eax, [ebp+findfiledata.cfilename]
jz      short loc_1002b7d
push    offset asc_1001348
push    eax
call    ebx
test    eax, eax
jz      short loc_1002baa
push    offset pathname
lea     eax, [ebp+findfiledata.cfilename]
push    eax
call    ebx
test    eax, eax
jz      short loc_1002baa
lea     eax, [ebp+findfiledata.cfilename]
push    eax
push    esi
lea     eax, [ebp+pszdest]
push    eax
call    _stringcatworkera@12
push    offset pszcabpath
push    esi
lea     eax, [ebp+pszdest]
push    eax
call    _addpath@12
lea     eax, [ebp+pszdest]
push    eax
call    _deletemydir@4
jmp     short loc_1002baa
push    eax
push    esi
lea     eax, [ebp+pszdest]
push    eax
call    _stringcatworkera@12
push    80h
lea     eax, [ebp+pszdest]
push    eax
call    ds:__imp__setfileattributesa@8
lea     eax, [ebp+pszdest]
push    eax
call    ds:__imp__deletefilea@4
lea     eax, [ebp+findfiledata]
push    eax
push    [ebp+hfindfile]
call    ds:__imp__findnextfilea@8
test    eax, eax
jnz     loc_1002b0e
push    [ebp+hfindfile]
call    ds:__imp__findclose@4
push    edi
call    ds:__imp__removedirectorya@4
pop     ebx
pop     esi
mov     ecx, [ebp+stackcookie]
pop     edi
call    @__security_check_cookie@4
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    0fffffffch
push    [ebp+hwnd]
call    ds:__imp__getwindowlonga@8
push    [ebp+dwnewlong]
mov     _g_lpfnoldmeditwndproc, eax
push    0fffffffch
push    [ebp+hwnd]
call    ds:__imp__setwindowlonga@12
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     [ebp+msg], 0b1h
jnz     short loc_1002c36
cmp     [ebp+wparam], 0
jnz     short loc_1002c36
cmp     [ebp+lparam], 0fffffffeh
jnz     short loc_1002c36
xor     eax, eax
jmp     short loc_1002c4e
push    [ebp+lparam]
push    [ebp+wparam]
push    [ebp+msg]
push    [ebp+hwnd]
push    _g_lpfnoldmeditwndproc
call    ds:__imp__callwindowproca@20
pop     ebp
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+lpstring]
test    esi, esi
jz      short loc_1002c85
push    esi
call    ds:__imp__lstrlena@4
cmp     eax, 3
jl      short loc_1002c85
mov     al, [esi+1]
cmp     al, 3ah
jz      short loc_1002c80
cmp     byte ptr [esi], 5ch
jnz     short loc_1002c85
cmp     al, 5ch
jnz     short loc_1002c85
xor     eax, eax
inc     eax
jmp     short loc_1002c87
xor     eax, eax
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
push    esi
mov     esi, ds:__imp__peekmessagea@20
push    edi
xor     edi, edi
xor     ebx, ebx
mov     [ebp+var_4], edi
inc     ebx
push    0ffh
push    0ffffffffh
push    edi
lea     eax, [ebp+phandles]
push    eax
push    ebx
call    ds:__imp__msgwaitformultipleobjects@20
test    eax, eax
jz      short loc_1002cf7
push    ebx
push    edi
push    edi
push    edi
lea     eax, [ebp+msg]
push    eax
call    esi
test    eax, eax
jz      short loc_1002caa
cmp     [ebp+msg.message], 12h
jnz     short loc_1002cda
mov     [ebp+var_4], ebx
jmp     short loc_1002ce4
lea     eax, [ebp+msg]
push    eax
call    ds:__imp__dispatchmessagea@4
push    ebx
push    edi
push    edi
push    edi
lea     eax, [ebp+msg]
push    eax
call    esi
test    eax, eax
jnz     short loc_1002ccf
cmp     [ebp+var_4], edi
jz      short loc_1002caa
pop     edi
pop     esi
pop     ebx
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
test    byte ptr dword_100c494+1, 8
jz      short loc_1002d16
mov     eax, [ebp+arg_0]
jmp     short loc_1002d40
call    _checkreboot@0
cmp     eax, 2
jz      short loc_1002d47
mov     eax, [ebp+arg_0]
mov     ecx, eax
and     ecx, 0ff000000h
cmp     ecx, 0aa000000h
jnz     short loc_1002d37
test    al, 1
jnz     short loc_1002d47
test    byte ptr dword_100c494+1, 2
jz      short loc_1002d51
mov     _g_dwexitcode, eax
jmp     short loc_1002d51
mov     _g_dwexitcode, 0bc2h
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
dec     eax
jnz     short loc_1002d78
push    [ebp+lparam]
push    1
push    466h
push    [ebp+hwnd]
call    ds:__imp__sendmessagea@16
xor     eax, eax
pop     ebp
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 2ch
push    ebx
push    esi
push    edi
mov     edi, ds:__imp__getwindowrect@8
lea     eax, [ebp+rect]
push    eax
push    [ebp+hwnd]
call    edi
mov     esi, [ebp+rect.right]
mov     ebx, [ebp+rect.bottom]
sub     esi, [ebp+rect.left]
sub     ebx, [ebp+rect.top]
lea     eax, [ebp+var_1c]
push    eax
push    [ebp+arg_4]
call    edi
mov     eax, [ebp+var_1c.bottom]
sub     eax, [ebp+var_1c.top]
mov     edi, [ebp+var_1c.right]
push    [ebp+hwnd]
sub     edi, [ebp+var_1c.left]
mov     [ebp+var_8], eax
call    ds:__imp__getdc@4
push    8
push    eax
mov     [ebp+arg_4], eax
call    ds:__imp__getdevicecaps@8
push    0ah
push    [ebp+arg_4]
mov     [ebp+var_4], eax
call    ds:__imp__getdevicecaps@8
push    [ebp+arg_4]
mov     [ebp+var_c], eax
push    [ebp+hwnd]
call    ds:__imp__releasedc@8
mov     eax, edi
sub     eax, esi
cdq
sub     eax, edx
mov     ecx, eax
sar     ecx, 1
add     ecx, [ebp+var_1c.left]
push    0
pop     edi
jns     short loc_1002e0a
xor     ecx, ecx
jmp     short loc_1002e18
mov     eax, [ebp+var_4]
lea     edx, [ecx+esi]
cmp     edx, eax
jle     short loc_1002e18
sub     eax, esi
mov     ecx, eax
mov     eax, [ebp+var_8]
sub     eax, ebx
cdq
sub     eax, edx
sar     eax, 1
add     eax, [ebp+var_1c.top]
jns     short loc_1002e2b
xor     eax, eax
jmp     short loc_1002e39
mov     edx, [ebp+var_c]
lea     esi, [eax+ebx]
cmp     esi, edx
jle     short loc_1002e39
sub     edx, ebx
mov     eax, edx
push    5
push    edi
push    edi
push    eax
push    ecx
push    edi
push    [ebp+hwnd]
call    ds:__imp__setwindowpos@28
pop     edi
pop     esi
pop     ebx
leave
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, ds:__imp__findresourcea@12
push    edi
push    0ah
push    [ebp+lpname]
xor     edi, edi
push    edi
call    esi
push    eax
push    edi
call    ds:__imp__sizeofresource@8
mov     ebx, eax
cmp     ebx, [ebp+arg_8]
ja      short loc_1002ec0
cmp     [ebp+arg_4], edi
jz      short loc_1002ec0
cmp     ebx, edi
jz      short loc_1002ea0
push    0ah
push    [ebp+lpname]
push    edi
call    esi
push    eax
push    edi
call    ds:__imp__loadresource@8
push    eax
call    ds:__imp__lockresource@4
cmp     eax, edi
jnz     short loc_1002ea4
xor     eax, eax
jmp     short loc_1002ec2
mov     edi, [ebp+arg_4]
mov     ecx, ebx
mov     edx, ecx
shr     ecx, 2
mov     esi, eax
rep movsd
mov     ecx, edx
and     ecx, 3
push    eax
rep movsb
call    ds:__imp__freeresource@4
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+lpbuffer]
test    esi, esi
jz      short loc_1002ef1
push    [ebp+cchbuffermax]
mov     byte ptr [esi], 0
push    esi
push    [ebp+uid]
push    _g_hinst
call    ds:__imp__loadstringa@16
mov     eax, esi
pop     esi
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, ds:__imp__lstrlena@4
push    edi
push    [ebp+lpstring]
call    esi
push    [ebp+lpstring2]
mov     edi, eax
call    esi
lea     eax, [edi+eax+1]
cmp     eax, [ebp+arg_4]
jl      short loc_1002f23
xor     eax, eax
jmp     short loc_1002f60
push    [ebp+lpstring]
mov     edi, [ebp+lpstring1]
push    edi
call    ds:__imp__lstrcpya@8
push    edi
call    esi
cmp     byte ptr [eax+edi-1], 5ch
jz      short loc_1002f53
push    edi
call    esi
cmp     byte ptr [eax+edi-1], 2fh
jz      short loc_1002f53
push    edi
call    esi
push    edi
mov     byte ptr [eax+edi], 5ch
call    esi
mov     byte ptr [eax+edi+1], 0
push    [ebp+lpstring2]
push    edi
call    ds:__imp__lstrcata@8
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebp
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    edi
mov     edi, [ebp+lppathname]
mov     cl, [edi]
xor     ebx, ebx
cmp     cl, bl
jz      short loc_1002fda
push    esi
lea     esi, [edi+1]
mov     al, [esi]
cmp     al, 3ah
mov     [ebp+lppathname], ebx
jnz     short loc_1002f95
cmp     byte ptr [edi+2], 5ch
jnz     short loc_1002f95
lea     esi, [edi+3]
jmp     short loc_1002fd5
cmp     cl, 5ch
jnz     short loc_1002fd5
cmp     al, cl
jnz     short loc_1002fd5
lea     esi, [edi+2]
mov     [ebp+lppathname], 2
jmp     short loc_1002fd5
cmp     byte ptr [esi], 5ch
jnz     short loc_1002fcc
cmp     byte ptr [esi-1], 3ah
jz      short loc_1002fcc
cmp     [ebp+lppathname], ebx
jz      short loc_1002fbf
dec     [ebp+lppathname]
jmp     short loc_1002fcc
push    ebx
push    edi
mov     [esi], bl
call    ds:__imp__createdirectorya@8
mov     byte ptr [esi], 5ch
push    esi
call    ds:__imp__charnexta@4
mov     esi, eax
cmp     [esi], bl
jnz     short loc_1002faa
pop     esi
pop     edi
pop     ebx
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+hf]
lea     eax, [eax+eax*2]
shl     eax, 3
mov     ecx, dword_100c4c4[eax]
sub     ecx, 0
jz      short loc_1003042
dec     ecx
jnz     short loc_1003068
mov     edx, dword_100c4d0[eax]
push    ebx
push    esi
push    edi
mov     edi, dword_100c4cc[eax]
sub     edx, edi
cmp     [ebp+nnumberofbytestoread], edx
jnb     short loc_100301a
mov     edx, [ebp+nnumberofbytestoread]
mov     esi, dword_100c4c8[eax]
add     esi, edi
mov     edi, [ebp+lpbuffer]
mov     ecx, edx
mov     ebx, ecx
shr     ecx, 2
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
add     dword_100c4cc[eax], edx
pop     edi
pop     esi
mov     eax, edx
pop     ebx
pop     ebp
retn
push    0
lea     ecx, [ebp+nnumberofbytestoread]
push    ecx
push    [ebp+nnumberofbytestoread]
push    [ebp+lpbuffer]
push    hfile[eax]
call    ds:__imp__readfile@20
test    eax, eax
jnz     short loc_1003063
or      eax, 0ffffffffh
pop     ebp
retn
mov     eax, [ebp+nnumberofbytestoread]
pop     ebp
retn
mov     eax, [ebp+hf]
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    _g_hcancelevent
call    _waitforobject@4
cmp     dword_100bc38, 0
jz      short loc_1003090
or      eax, 0ffffffffh
pop     ebp
retn
push    edi
push    0
lea     eax, [ebp+nnumberofbytestowrite]
push    eax
push    [ebp+nnumberofbytestowrite]
mov     eax, [ebp+hf]
push    [ebp+lpbuffer]
lea     eax, [eax+eax*2]
push    hfile[eax*8]
call    ds:__imp__writefile@20
test    eax, eax
jnz     short loc_10030b9
or      edi, 0ffffffffh
jmp     short loc_10030fe
mov     edi, [ebp+nnumberofbytestowrite]
cmp     edi, 0ffffffffh
jz      short loc_10030fe
add     dword_100be60, edi
cmp     _g_fossupportsfullui, 0
jz      short loc_10030fe
mov     ecx, _g_hwndextractdlg
test    ecx, ecx
jz      short loc_10030fe
mov     eax, dword_100be60
imul    eax, 64h
xor     edx, edx
div     dword_100be58
push    0
push    eax
push    402h
push    83ah
push    ecx
call    ds:__imp__senddlgitemmessagea@20
mov     eax, edi
pop     edi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+hf]
push    esi
push    edi
xor     edi, edi
lea     esi, [eax+eax*2]
shl     esi, 3
inc     edi
cmp     dword_100c4c4[esi], edi
jnz     short loc_100313f
xor     eax, eax
mov     _g_filetable[esi], edi
mov     dword_100c4c8[esi], eax
mov     dword_100c4d0[esi], eax
mov     dword_100c4cc[esi], eax
jmp     short loc_100315c
push    hfile[esi]
call    ds:__imp__closehandle@4
test    eax, eax
jz      short loc_1003159
xor     eax, eax
mov     _g_filetable[esi], edi
jmp     short loc_100315c
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+hf]
mov     ecx, [ebp+seektype]
lea     eax, [eax+eax*2]
shl     eax, 3
cmp     dword_100c4c4[eax], 1
jnz     short loc_10031b1
sub     ecx, 0
jz      short loc_10031a0
dec     ecx
jz      short loc_1003195
dec     ecx
jnz     short loc_10031e4
mov     ecx, dword_100c4d0[eax]
add     ecx, [ebp+ldistancetomove]
jmp     short loc_10031a3
mov     ecx, [ebp+ldistancetomove]
add     dword_100c4cc[eax], ecx
jmp     short loc_10031a9
mov     ecx, [ebp+ldistancetomove]
mov     dword_100c4cc[eax], ecx
mov     eax, dword_100c4cc[eax]
pop     ebp
retn
sub     ecx, 0
jz      short loc_10031c6
dec     ecx
jz      short loc_10031c1
dec     ecx
jnz     short loc_10031ca
push    2
pop     ecx
jmp     short loc_10031cd
xor     ecx, ecx
inc     ecx
jmp     short loc_10031cd
xor     ecx, ecx
jmp     short loc_10031cd
mov     ecx, [ebp+hf]
push    ecx
push    0
push    [ebp+ldistancetomove]
push    hfile[eax]
call    ds:__imp__setfilepointer@16
cmp     eax, 0ffffffffh
jnz     short loc_10031e7
or      eax, 0ffffffffh
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_0]
push    esi
lea     esi, [eax+eax*2]
shl     esi, 3
cmp     dword_100c4c4[esi], 1
jnz     short loc_100320d
xor     eax, eax
jmp     short loc_100324b
lea     eax, [ebp+filetime]
push    eax
push    dword ptr [ebp+wfattime]
push    dword ptr [ebp+wfatdate]
call    ds:__imp__dosdatetimetofiletime@12
test    eax, eax
jz      short loc_1003209
lea     eax, [ebp+creationtime]
push    eax
lea     eax, [ebp+filetime]
push    eax
call    ds:__imp__localfiletimetofiletime@8
test    eax, eax
jz      short loc_1003209
lea     eax, [ebp+creationtime]
push    eax
push    eax
push    eax
push    hfile[esi]
call    ds:__imp__setfiletime@16
neg     eax
sbb     eax, eax
neg     eax
pop     esi
leave
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    ax, ax
jnz     short loc_1003269
mov     eax, 80h
jmp     short loc_100326c
and     eax, 27h
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+dwbytes]
push    0
call    ds:__imp__globalalloc@8
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+hmem]
call    ds:__imp__globalfree@4
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     eax, offset string1
mov     esi, eax
mov     ecx, 0c4h
mov     edi, offset dword_100be6c
rep movsd
mov     esi, [ebp+arg_0]
push    dword ptr [esi+0ch]
mov     edi, ds:__imp__lstrcpya@8
push    eax
call    edi
push    dword ptr [esi+4]
push    offset byte_100c280
call    edi
push    dword ptr [esi+8]
push    offset byte_100c384
call    edi
mov     ax, [esi+1eh]
mov     word_100c488, ax
mov     ax, [esi+20h]
pop     edi
mov     word_100c48a, ax
xor     eax, eax
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    esi
push    0
push    0
mov     esi, offset acabinet
push    esi
call    _getresource@12
push    0ah
push    esi
push    0
mov     dword_100bba4, eax
call    ds:__imp__findresourcea@12
push    eax
push    0
call    ds:__imp__loadresource@8
push    eax
call    ds:__imp__lockresource@4
xor     ecx, ecx
test    eax, eax
setnz   cl
mov     _g_sess, eax
pop     esi
mov     eax, ecx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 108h
mov     eax, ___security_cookie
push    ebx
push    esi
mov     esi, hmem
test    esi, esi
mov     [ebp+stackcookie], eax
mov     ebx, esi
jz      short loc_10033a6
push    edi
mov     edi, ds:__imp__localfree@4
cmp     dword_100c884, 0
jnz     short loc_1003395
cmp     dword_100c490, 0
jnz     short loc_1003395
push    80h
push    dword ptr [esi]
call    ds:__imp__setfileattributesa@8
push    dword ptr [esi]
call    ds:__imp__deletefilea@4
push    dword ptr [ebx]
mov     esi, [esi+4]
call    edi
push    ebx
call    edi
test    esi, esi
mov     ebx, esi
jnz     short loc_100336e
pop     edi
xor     eax, eax
cmp     _g_cmd, eax
pop     esi
pop     ebx
jz      short loc_1003400
cmp     dword_100c884, eax
jnz     short loc_1003400
cmp     dword_100c490, eax
jnz     short loc_1003400
push    offset filename
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__lstrcpya@8
test    byte ptr dword_100c494, 20h
jz      short loc_10033e9
lea     eax, [ebp+string1]
push    eax
call    _getparentdir@4
push    offset pathname
call    ds:__imp__setcurrentdirectorya@4
lea     eax, [ebp+string1]
push    eax
call    _deletemydir@4
cmp     _g_wosver, 1
jz      short loc_1003418
cmp     _g_cmd, 0
jz      short loc_1003418
call    _cleanregrunonce@0
mov     ecx, [ebp+stackcookie]
and     _g_cmd, 0
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 110h
mov     eax, ___security_cookie
push    ebx
mov     [ebp+stackcookie], eax
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [ebp+lpstring1]
xor     ebx, ebx
push    edi
mov     [ebp+lpstring2], eax
mov     [ebp+var_10c], ebx
push    ebx
lea     eax, [ebp+pszsrc]
push    offset aixp03dtmp
push    eax
call    ds:__imp__wsprintfa
add     esp, 0ch
push    [ebp+lpstring2]
inc     ebx
push    esi
call    ds:__imp__lstrcpya@8
lea     eax, [ebp+pszsrc]
push    eax
push    [ebp+cchdest]
push    esi
call    _addpath@12
push    esi
call    ds:__imp__removedirectorya@4
push    esi
call    ds:__imp__getfileattributesa@4
cmp     eax, 0ffffffffh
mov     edi, ds:__imp__createdirectorya@8
jz      short loc_10034af
cmp     ebx, 190h
jl      short loc_1003458
jmp     short loc_10034cf
push    0
push    esi
call    edi
test    eax, eax
jz      short loc_10034c8
xor     eax, eax
inc     eax
mov     _g_cmd, eax
mov     [ebp+var_10c], eax
jmp     short loc_10034fd
and     [ebp+var_10c], 0
push    esi
push    0
push    offset prefixstring
push    [ebp+lpstring2]
call    ds:__imp__gettempfilenamea@16
test    eax, eax
jz      short loc_10034fd
push    esi
mov     [ebp+var_10c], 1
call    ds:__imp__deletefilea@4
push    0
push    esi
call    edi
mov     ecx, [ebp+stackcookie]
mov     eax, [ebp+var_10c]
pop     edi
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     al, [esi]
push    edi
xor     edi, edi
jmp     short loc_1003544
cmp     al, 20h
jz      short loc_1003540
cmp     al, 9
jz      short loc_1003540
cmp     al, 0dh
jz      short loc_1003540
cmp     al, 0ah
jz      short loc_1003540
cmp     al, 0bh
jz      short loc_1003540
cmp     al, 0ch
jnz     short loc_1003548
inc     edi
mov     al, [edi+esi]
test    al, al
jnz     short loc_1003528
lea     ebx, [edi+esi]
cmp     byte ptr [ebx], 0
jnz     short loc_1003554
xor     eax, eax
jmp     short loc_1003590
push    ebx
call    ds:__imp__lstrlena@4
jmp     short loc_100357e
mov     cl, [ebx+eax]
cmp     cl, 20h
jz      short loc_100357e
cmp     cl, 9
jz      short loc_100357e
cmp     cl, 0dh
jz      short loc_100357e
cmp     cl, 0ah
jz      short loc_100357e
cmp     cl, 0bh
jz      short loc_100357e
cmp     cl, 0ch
jnz     short loc_1003581
dec     eax
jns     short loc_100355d
add     eax, edi
mov     byte ptr [eax+esi+1], 0
mov     eax, [ebp+arg_4]
mov     [eax], edi
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 110h
mov     eax, ___security_cookie
push    ebx
push    esi
push    edi
xor     edi, edi
mov     [ebp+stackcookie], eax
mov     eax, [ebp+lpsz]
inc     edi
test    eax, eax
mov     [ebp+var_10c], edi
jz      loc_1003a8b
cmp     byte ptr [eax], 0
jz      loc_1003a8b
mov     ebx, eax
cmp     [ebp+var_10c], 0
jz      loc_10036a4
mov     eax, ebx
mov     cl, [eax]
cmp     cl, 20h
jz      short loc_1003600
cmp     cl, 9
jz      short loc_1003600
cmp     cl, 0dh
jz      short loc_1003600
cmp     cl, 0ah
jz      short loc_1003600
cmp     cl, 0bh
jz      short loc_1003600
cmp     cl, 0ch
jnz     short loc_1003609
push    eax
call    ds:__imp__charnexta@4
jmp     short loc_10035e0
cmp     byte ptr [eax], 0
jz      loc_10036a4
xor     ecx, ecx
xor     edx, edx
mov     ebx, eax
xor     esi, esi
test    edx, edx
jnz     short loc_100363a
mov     al, [ebx]
cmp     al, 20h
jz      short loc_100368d
cmp     al, 9
jz      short loc_100368d
cmp     al, 0dh
jz      short loc_100368d
cmp     al, 0ah
jz      short loc_100368d
cmp     al, 0bh
jz      short loc_100368d
cmp     al, 0ch
jz      short loc_100368d
jmp     short loc_100363e
test    esi, esi
jnz     short loc_100368d
mov     al, [ebx]
cmp     al, 22h
jnz     short loc_1003673
lea     eax, [ebx+1]
cmp     byte ptr [eax], 22h
jz      short loc_100365a
test    edx, edx
jnz     short loc_1003654
mov     edx, edi
jmp     short loc_1003656
mov     esi, edi
mov     ebx, eax
jmp     short loc_1003688
cmp     ecx, 103h
jnb     loc_10039a1
mov     [ebp+ecx+string], 22h
inc     ecx
inc     ebx
inc     ebx
jmp     short loc_1003688
cmp     ecx, 103h
jnb     loc_10039a1
mov     [ebp+ecx+string], al
inc     ecx
inc     ebx
cmp     byte ptr [ebx], 0
jnz     short loc_100361a
test    edx, edx
mov     [ebp+ecx+string], 0
jz      short loc_10036ee
test    esi, esi
jnz     short loc_10036f2
and     [ebp+var_10c], 0
cmp     dword_100c88c, 0
jz      loc_1003a83
cmp     sz, 0
jnz     loc_1003a83
push    104h
mov     esi, offset sz
push    esi
push    _g_hinst
call    ds:__imp__getmodulefilenamea@12
test    eax, eax
jz      loc_1003a7c
push    5ch
push    esi
call    _ansistrrchr@8
mov     byte ptr [eax+1], 0
jmp     loc_1003a83
test    esi, esi
jnz     short loc_100369d
cmp     [ebp+string], 2fh
jz      short loc_1003708
cmp     [ebp+string], 2dh
jnz     loc_10039a1
movsx   eax, [ebp+string2]
mov     esi, ds:__imp__charuppera@4
push    eax
call    esi
movsx   eax, al
sub     eax, 3fh
jz      loc_1003a5f
sub     eax, 4
jz      loc_10039a8
dec     eax
jz      loc_10038fb
sub     eax, 0ah
jz      loc_1003882
push    3
pop     ecx
sub     eax, ecx
jz      loc_1003838
dec     eax
jz      short loc_1003768
dec     eax
dec     eax
jz      loc_10038fb
and     [ebp+var_10c], 0
cmp     byte ptr [ebx], 0
jnz     loc_10035d1
jmp     loc_10036a4
cmp     [ebp+var_106], 0
jnz     short loc_100377f
mov     dword_100c48c, ecx
mov     dword_100c888, edi
jmp     short loc_100375a
cmp     [ebp+var_106], 3ah
jnz     loc_1003819
cmp     [ebp+var_105], 0
mov     dword_100c48c, edi
jz      short loc_100375a
lea     esi, [ebp+var_105]
movsx   eax, byte ptr [esi]
push    eax
call    ds:__imp__charuppera@4
movsx   eax, al
inc     esi
sub     eax, 41h
jz      short loc_1003802
sub     eax, 3
jz      short loc_10037f9
sub     eax, 5
jz      short loc_10037f0
sub     eax, 5
jz      short loc_10037e7
dec     eax
dec     eax
jz      short loc_10037de
sub     eax, 3
jz      short loc_10037d5
and     [ebp+var_10c], 0
jmp     short loc_100380f
or      dword_100c48c, 4
jmp     short loc_1003809
or      byte ptr dword_100cba8, 80h
jmp     short loc_100380f
and     dword_100c48c, 0fffffffeh
jmp     short loc_1003809
and     dword_100c48c, 0fffffffdh
jmp     short loc_1003809
or      dword_100cba8, 40h
jmp     short loc_100380f
or      dword_100c48c, 2
mov     dword_100c888, edi
cmp     byte ptr [esi], 0
jnz     short loc_10037a1
jmp     loc_100375a
lea     eax, [ebp+string2]
push    eax
push    offset aregserver
call    ds:__imp__lstrcmpia@8
test    eax, eax
jz      loc_100375a
jmp     loc_1003753
cmp     [ebp+var_106], 0
jz      short loc_1003868
cmp     [ebp+var_106], 3ah
jnz     loc_1003753
movsx   eax, [ebp+var_105]
push    eax
call    esi
cmp     al, 31h
jz      short loc_1003868
cmp     al, 41h
jz      short loc_1003876
cmp     al, 55h
jnz     loc_1003753
mov     word_100c898, 2
jmp     loc_100375a
mov     word_100c898, di
jmp     loc_100375a
cmp     [ebp+var_106], 0
jnz     short loc_1003896
mov     dword_100c88c, edi
jmp     loc_100375a
cmp     [ebp+var_106], 3ah
jnz     loc_1003753
cmp     [ebp+var_105], 0
jz      loc_100375a
lea     esi, [ebp+var_105]
movsx   eax, byte ptr [esi]
push    eax
call    ds:__imp__charuppera@4
movsx   eax, al
inc     esi
sub     eax, 45h
jz      short loc_10038eb
dec     eax
dec     eax
jz      short loc_10038e3
sub     eax, 0fh
jz      short loc_10038db
and     [ebp+var_10c], 0
jmp     short loc_10038f1
mov     dword_100c894, edi
jmp     short loc_10038f1
mov     dword_100c890, edi
jmp     short loc_10038f1
mov     dword_100c88c, edi
cmp     byte ptr [esi], 0
jnz     short loc_10038b6
jmp     loc_100375a
cmp     [ebp+var_106], 3ah
jnz     loc_1003753
xor     eax, eax
cmp     [ebp+var_105], 22h
setz    al
add     eax, 3
mov     esi, eax
lea     edi, [ebp+esi+string]
push    edi
call    ds:__imp__lstrlena@4
test    eax, eax
jz      loc_1003a33
lea     eax, [ebp+var_110]
push    eax
push    edi
mov     [ebp+var_110], esi
call    _removeleadtailblanks@8
test    eax, eax
jz      loc_1003a33
movsx   eax, [ebp+string2]
push    eax
call    ds:__imp__charuppera@4
cmp     al, 54h
mov     eax, [ebp+var_110]
jnz     short loc_100396b
add     eax, esi
mov     esi, offset sz
jmp     short loc_1003972
add     eax, esi
mov     esi, offset pcchnewdestlength
lea     eax, [ebp+eax+string]
push    eax
push    esi
call    ds:__imp__lstrcpya@8
push    offset pszcabpath
push    104h
push    esi
call    _addpath@12
mov     eax, esi
push    eax
call    _isfullpath@4
test    eax, eax
jnz     loc_1003a3a
xor     eax, eax
jmp     loc_1003a8d
cmp     [ebp+var_106], 0
jnz     short loc_10039bc
mov     dword_100c884, edi
jmp     loc_100375a
cmp     [ebp+var_106], 3ah
jnz     loc_1003753
xor     eax, eax
cmp     [ebp+var_105], 22h
setz    al
add     eax, 3
mov     esi, eax
lea     edi, [ebp+esi+string]
push    edi
call    ds:__imp__lstrlena@4
test    eax, eax
jz      short loc_1003a33
push    5bh
push    edi
call    _ansistrchr@8
test    eax, eax
jz      short loc_1003a04
push    5dh
push    edi
call    _ansistrchr@8
test    eax, eax
jz      short loc_1003a33
push    5dh
push    edi
call    _ansistrchr@8
test    eax, eax
jz      short loc_1003a1c
push    5bh
push    edi
call    _ansistrchr@8
test    eax, eax
jz      short loc_1003a33
lea     eax, [ebp+var_110]
push    eax
push    edi
mov     [ebp+var_110], esi
call    _removeleadtailblanks@8
test    eax, eax
jnz     short loc_1003a42
and     [ebp+var_10c], 0
xor     edi, edi
inc     edi
jmp     loc_100375a
mov     eax, [ebp+var_110]
add     eax, esi
lea     eax, [ebp+eax+string]
push    eax
push    offset byte_100caa2
call    ds:__imp__lstrcpya@8
jmp     short loc_1003a3a
call    _displayhelp@0
mov     eax, _g_hmutex
test    eax, eax
jz      short loc_1003a74
push    eax
call    ds:__imp__closehandle@4
push    0
call    ds:__imp__exitprocess@4
and     [ebp+var_10c], 0
mov     eax, [ebp+var_10c]
jmp     short loc_1003a8d
mov     eax, edi
mov     ecx, [ebp+stackcookie]
pop     edi
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn    4
mov     edi, edi
push    esi
mov     esi, ds:__imp__getlasterror@0
call    esi
test    eax, eax
jg      short loc_1003ab4
call    esi
pop     esi
retn
call    esi
and     eax, 0ffffh
or      eax, 80070000h
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, ___security_cookie
push    ebx
mov     ebx, ds:__imp__wsprintfa
push    edi
mov     [ebp+stackcookie], eax
mov     eax, [ebp+arg_0]
xor     edi, edi
push    edi
mov     [ebp+var_28], eax
lea     eax, [ebp+name]
push    offset aupdfilelu
push    eax
mov     [ebp+var_1c], 1
mov     [ebp+var_20], edi
call    ebx
add     esp, 0ch
push    0ah
lea     eax, [ebp+name]
push    eax
push    edi
call    ds:__imp__findresourcea@12
cmp     eax, edi
jz      loc_1003ba0
push    esi
jmp     short loc_1003b1a
xor     edi, edi
push    eax
push    edi
call    ds:__imp__loadresource@8
push    eax
call    ds:__imp__lockresource@4
mov     esi, eax
cmp     esi, edi
jz      short loc_1003b86
mov     eax, [esi]
mov     [ebp+var_2c], eax
mov     eax, [esi+4]
lea     edi, [esi+8]
push    edi
mov     [ebp+var_24], eax
call    ds:__imp__lstrlena@4
lea     eax, [eax+edi+1]
push    eax
push    edi
push    [ebp+var_24]
push    [ebp+var_2c]
call    [ebp+var_28]
test    eax, eax
push    esi
jz      short loc_1003b95
call    ds:__imp__freeresource@4
inc     [ebp+var_20]
push    [ebp+var_20]
lea     eax, [ebp+name]
push    offset aupdfilelu
push    eax
call    ebx
add     esp, 0ch
push    0ah
lea     eax, [ebp+name]
push    eax
push    0
call    ds:__imp__findresourcea@12
test    eax, eax
jnz     short loc_1003b18
jmp     short loc_1003b9f
mov     _g_dwexitcode, 80070714h
mov     [ebp+var_1c], edi
jmp     short loc_1003b9f
and     [ebp+var_1c], 0
call    ds:__imp__freeresource@4
pop     esi
mov     ecx, [ebp+stackcookie]
mov     eax, [ebp+var_1c]
pop     edi
pop     ebx
call    @__security_check_cookie@4
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, 200h
xor     ecx, ecx
mov     eax, [ebp+arg_0]
xor     edx, edx
div     esi
neg     edx
sbb     edx, edx
imul    eax, esi
and     edx, esi
add     edx, eax
add     _g_dwfilesizes[ecx], edx
add     ecx, 4
shl     esi, 1
cmp     ecx, 20h
jb      short loc_1003bc3
xor     eax, eax
inc     eax
pop     esi
pop     ebp
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 110h
mov     eax, ___security_cookie
push    ebx
mov     ebx, [ebp+lpbuffer]
push    esi
push    edi
mov     edi, [ebp+pszsrc]
mov     [ebp+stackcookie], eax
push    offset filename
lea     eax, [ebp+string1]
xor     esi, esi
push    eax
mov     [ebp+var_10c], 1
mov     [ebp+numberofbyteswritten], esi
call    ds:__imp__lstrcpya@8
push    edi
push    104h
lea     eax, [ebp+string1]
push    eax
call    _addpath@12
push    esi
push    80h
push    2
push    esi
push    esi
push    40000000h
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__createfilea@28
mov     edi, eax
cmp     edi, 0ffffffffh
jnz     short loc_1003c79
mov     _g_dwexitcode, 80070052h
mov     [ebp+var_10c], esi
jmp     short loc_1003cb2
push    esi
lea     eax, [ebp+numberofbyteswritten]
push    eax
push    [ebp+nnumberofbytestowrite]
push    ebx
push    edi
call    ds:__imp__writefile@20
test    eax, eax
jz      short loc_1003c9b
mov     eax, [ebp+nnumberofbytestowrite]
cmp     eax, [ebp+numberofbyteswritten]
jz      short loc_1003cab
mov     _g_dwexitcode, 80070052h
mov     [ebp+var_10c], esi
push    edi
call    ds:__imp__closehandle@4
mov     ecx, [ebp+stackcookie]
mov     eax, [ebp+var_10c]
pop     edi
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 108h
mov     eax, ___security_cookie
push    esi
mov     esi, [ebp+lplibfilename]
mov     [ebp+stackcookie], eax
push    offset filename
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__lstrcpya@8
push    esi
push    104h
lea     eax, [ebp+string1]
push    eax
call    _addpath@12
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__getfileattributesa@4
cmp     eax, 0ffffffffh
jz      short loc_1003d30
test    al, 10h
jnz     short loc_1003d30
push    8
push    0
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__loadlibraryexa@12
jmp     short loc_1003d37
push    esi
call    ds:__imp__loadlibrarya@4
mov     ecx, [ebp+stackcookie]
pop     esi
call    @__security_check_cookie@4
leave
retn    4
xor     eax, eax
retn
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
sub     eax, 0fh
jz      loc_1003dee
dec     eax
jz      short loc_1003d89
sub     eax, 100h
jz      short loc_1003d9c
dec     eax
jnz     loc_1003e1d
cmp     [ebp+arg_8], 6
jnz     short loc_1003d83
push    1
jmp     short loc_1003d8b
cmp     [ebp+arg_8], 7
jnz     short loc_1003d94
push    0
push    [ebp+hdlg]
call    ds:__imp__enddialog@8
xor     eax, eax
inc     eax
jmp     loc_1003e1f
push    esi
push    edi
call    ds:__imp__getdesktopwindow@0
mov     edi, [ebp+hdlg]
push    eax
push    edi
call    _centerwindow@8
push    _g_szlicense
mov     esi, 834h
push    esi
push    edi
call    ds:__imp__setdlgitemtexta@12
push    offset string
push    edi
call    ds:__imp__setwindowtexta@8
push    edi
call    ds:__imp__setforegroundwindow@4
push    offset _meditsubproc@16
push    esi
push    edi
call    ds:__imp__getdlgitem@8
push    eax
call    _meditsubclasswnd@8
xor     eax, eax
pop     edi
inc     eax
pop     esi
jmp     short loc_1003e1f
cmp     dword_100ba58, 0
jnz     short loc_1003e1d
push    0
push    0ffffffffh
push    0b1h
push    834h
push    [ebp+hdlg]
call    ds:__imp__senddlgitemmessagea@20
mov     dword_100b840, eax
mov     dword_100ba58, 1
xor     eax, eax
pop     ebp
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
sub     eax, 10h
push    esi
jz      short loc_1003ea6
sub     eax, 100h
jz      short loc_1003e6f
dec     eax
jz      short loc_1003e44
xor     eax, eax
jmp     short loc_1003eb4
mov     eax, [ebp+nresult]
cmp     eax, 6
jb      short loc_1003eb1
xor     esi, esi
inc     esi
cmp     eax, 7
jbe     short loc_1003e61
cmp     eax, 839h
jnz     short loc_1003eb1
mov     dword_100bc3c, esi
push    eax
push    [ebp+hdlg]
call    ds:__imp__enddialog@8
mov     eax, esi
jmp     short loc_1003eb4
call    ds:__imp__getdesktopwindow@0
mov     esi, [ebp+hdlg]
push    eax
push    esi
call    _centerwindow@8
push    offset string
push    esi
call    ds:__imp__setwindowtexta@8
push    lpstring
push    838h
push    esi
call    ds:__imp__setdlgitemtexta@12
push    esi
call    ds:__imp__setforegroundwindow@4
jmp     short loc_1003eb1
push    2
push    [ebp+hdlg]
call    ds:__imp__enddialog@8
xor     eax, eax
inc     eax
pop     esi
pop     ebp
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 244h
test    byte ptr word_100c898, 1
mov     eax, ___security_cookie
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
push    edi
push    0dh
pop     ecx
mov     esi, offset aloadstringerro
lea     edi, [ebp+text]
rep movsd
mov     [ebp+stackcookie], eax
mov     eax, [ebp+arg_0]
mov     [ebp+hwnd], eax
mov     eax, [ebp+arg_c]
mov     [ebp+lpstring], eax
movsb
jnz     loc_1004088
push    200h
lea     eax, [ebp+string]
push    eax
push    [ebp+uid]
call    _loadsz@12
cmp     [ebp+string], 0
jnz     short loc_1003f69
call    _runningonwin95bidiloc@0
test    eax, eax
jz      short loc_1003f44
push    1
push    10h
push    _g_hinst
call    _isbidilocalizedbinary@12
test    eax, eax
jz      short loc_1003f44
mov     eax, 180000h
jmp     short loc_1003f46
xor     eax, eax
or      eax, 10010h
push    eax
push    offset string
lea     eax, [ebp+text]
push    eax
push    [ebp+hwnd]
call    ds:__imp__messageboxa@16
or      eax, 0ffffffffh
jmp     loc_100408b
cmp     [ebp+lpstring], 0
jz      short loc_1003fbd
push    [ebp+lpstring]
mov     esi, ds:__imp__lstrlena@4
call    esi
push    ebx
mov     edi, eax
call    esi
add     edi, eax
lea     eax, [ebp+string]
push    eax
call    esi
lea     eax, [edi+eax+64h]
push    eax
push    40h
call    ds:__imp__localalloc@8
mov     esi, eax
test    esi, esi
jz      short loc_1003f61
push    [ebp+lpstring]
lea     eax, [ebp+string]
push    ebx
push    eax
push    esi
call    ds:__imp__wsprintfa
add     esp, 10h
jmp     short loc_100402f
test    ebx, ebx
jz      short loc_1004000
mov     esi, ds:__imp__lstrlena@4
push    ebx
call    esi
mov     edi, eax
lea     eax, [ebp+string]
push    eax
call    esi
lea     eax, [edi+eax+64h]
push    eax
push    40h
call    ds:__imp__localalloc@8
mov     esi, eax
test    esi, esi
jz      loc_1003f61
push    ebx
lea     eax, [ebp+string]
push    eax
push    esi
call    ds:__imp__wsprintfa
add     esp, 0ch
jmp     short loc_100402f
lea     eax, [ebp+string]
push    eax
call    ds:__imp__lstrlena@4
inc     eax
push    eax
push    40h
call    ds:__imp__localalloc@8
mov     esi, eax
test    esi, esi
jz      loc_1003f61
lea     eax, [ebp+string]
push    eax
push    esi
call    ds:__imp__lstrcpya@8
push    [ebp+utype]
call    ds:__imp__messagebeep@4
call    _runningonwin95bidiloc@0
test    eax, eax
jz      short loc_100405b
push    1
push    10h
push    _g_hinst
call    _isbidilocalizedbinary@12
test    eax, eax
jz      short loc_100405b
mov     eax, 180000h
jmp     short loc_100405d
xor     eax, eax
or      eax, [ebp+utype]
or      eax, [ebp+arg_14]
or      eax, 10000h
push    eax
push    offset string
push    esi
push    [ebp+hwnd]
call    ds:__imp__messageboxa@16
push    esi
mov     edi, eax
call    ds:__imp__localfree@4
mov     eax, edi
jmp     short loc_100408b
xor     eax, eax
inc     eax
mov     ecx, [ebp+stackcookie]
pop     edi
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn    18h
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, ds:__imp__localalloc@8
push    8
push    40h
call    edi
mov     esi, eax
xor     ebx, ebx
cmp     esi, ebx
jnz     short loc_10040d2
push    ebx
push    10h
push    ebx
push    ebx
push    4b5h
push    _g_hwndextractdlg
call    _msgbox2param@24
jmp     short loc_1004103
push    [ebp+lpstring]
call    ds:__imp__lstrlena@4
inc     eax
push    eax
push    40h
call    edi
cmp     eax, ebx
mov     [esi], eax
jnz     short loc_1004107
push    ebx
push    10h
push    ebx
push    ebx
push    4b5h
push    _g_hwndextractdlg
call    _msgbox2param@24
push    esi
call    ds:__imp__localfree@4
xor     eax, eax
jmp     short loc_1004122
push    [ebp+lpstring]
push    eax
call    ds:__imp__lstrcpya@8
mov     eax, hmem
mov     [esi+4], eax
xor     eax, eax
mov     hmem, esi
inc     eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+dwcreationdisposition]
test    al, 8
jz      short loc_1004143
or      eax, 0ffffffffh
jmp     locret_10041cf
test    al, 3
mov     [ebp+dwdesiredaccess], 80000000h
jz      short loc_1004155
mov     [ebp+dwdesiredaccess], 40000000h
test    ah, 1
jz      short loc_1004179
test    ah, 4
jz      short loc_1004168
mov     [ebp+dwcreationdisposition], 1
jmp     short loc_100418b
and     eax, 200h
neg     eax
sbb     eax, eax
and     eax, 0fffffffeh
add     eax, 4
jmp     short loc_1004188
and     eax, 200h
neg     eax
sbb     eax, eax
and     eax, 2
add     eax, 3
mov     [ebp+dwcreationdisposition], eax
push    ebx
push    esi
mov     esi, ds:__imp__createfilea@28
push    edi
xor     ebx, ebx
push    ebx
mov     edi, 80h
push    edi
push    [ebp+dwcreationdisposition]
push    ebx
push    ebx
push    [ebp+dwdesiredaccess]
push    [ebp+lpfilename]
call    esi
cmp     eax, 0ffffffffh
jnz     short loc_10041cc
cmp     [ebp+dwcreationdisposition], 3
jz      short loc_10041cc
push    [ebp+lpfilename]
call    _makedirectory@4
push    ebx
push    edi
push    [ebp+dwcreationdisposition]
push    ebx
push    ebx
push    [ebp+dwdesiredaccess]
push    [ebp+lpfilename]
call    esi
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
xor     ebx, ebx
xor     esi, esi
mov     eax, offset _g_filetable
cmp     dword ptr [eax], 1
jz      short loc_10041f8
add     eax, 18h
inc     esi
cmp     eax, offset _g_cmd
jl      short loc_10041e8
cmp     esi, 28h
jnz     short loc_1004219
push    ebx
push    10h
push    ebx
push    ebx
push    4bbh
push    _g_hwndextractdlg
call    _msgbox2param@24
or      eax, 0ffffffffh
pop     esi
pop     ebx
pop     ebp
retn
push    offset pszcabinet
push    [ebp+lpstring1]
call    ds:__imp__lstrcmpa@8
test    eax, eax
jnz     short loc_100426d
test    byte ptr [ebp+oflag+1], 1
jnz     short loc_1004212
test    byte ptr [ebp+oflag], 0bh
jnz     short loc_1004212
mov     ecx, _g_sess
lea     eax, [esi+esi*2]
shl     eax, 3
mov     dword_100c4c8[eax], ecx
mov     ecx, dword_100bba4
mov     _g_filetable[eax], ebx
mov     dword_100c4c4[eax], 1
mov     dword_100c4d0[eax], ecx
mov     dword_100c4cc[eax], ebx
jmp     short loc_1004298
push    [ebp+pmode]
push    [ebp+oflag]
push    [ebp+lpstring1]
call    _win32open@12
lea     ecx, [esi+esi*2]
shl     ecx, 3
cmp     eax, 0ffffffffh
mov     hfile[ecx], eax
jz      short loc_1004212
mov     _g_filetable[ecx], ebx
mov     dword_100c4c4[ecx], ebx
mov     eax, esi
jmp     loc_1004215
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 24h
push    edi
push    6
pop     ecx
xor     eax, eax
lea     edi, [ebp+pfdici]
rep stosd
lea     eax, [ebp+perf]
push    eax
push    1
push    offset _seekfunc
push    offset _closefunc
push    offset _writefunc
push    offset _readfunc
push    offset _openfunc
push    offset _freefunc
push    offset _allocfunc
call    _fdicreate
mov     edi, eax
add     esp, 24h
test    edi, edi
jz      short loc_1004354
push    esi
push    180h
push    8000h
push    offset pszcabinet
call    _openfunc
mov     esi, eax
add     esp, 0ch
cmp     esi, 0ffffffffh
jz      short loc_1004351
lea     eax, [ebp+pfdici]
push    eax
push    esi
push    edi
call    _fdiiscabinet
add     esp, 0ch
test    eax, eax
jz      short loc_1004351
mov     eax, [ebp+pfdici.cbcabinet]
cmp     eax, dword_100bba4
jnz     short loc_1004351
cmp     [ebp+pfdici.hasprev], 0
jnz     short loc_1004351
cmp     [ebp+pfdici.hasnext], 0
jnz     short loc_1004351
push    esi
call    _closefunc
cmp     eax, 0ffffffffh
pop     ecx
jz      short loc_1004351
push    edi
call    _fdidestroy
neg     eax
sbb     eax, eax
pop     ecx
neg     eax
jmp     short loc_1004353
xor     eax, eax
pop     esi
pop     edi
leave
retn    4
mov     edi, edi
push    esi
push    24h
push    offset _g_dwfilesizes
push    offset afilesizes
call    _getresource@12
xor     esi, esi
cmp     eax, 24h
jz      short loc_1004395
push    esi
push    10h
push    esi
push    esi
push    4b1h
push    esi
call    _msgbox2param@24
mov     _g_dwexitcode, 80070714h
jmp     short loc_10043de
mov     eax, dword_100cbe0
cmp     eax, esi
mov     dword_100be58, eax
jnz     short loc_10043af
push    esi
push    10h
push    esi
push    esi
push    4c6h
jmp     short loc_1004383
push    4
push    offset dword_100c498
push    offset apackinstspace
call    _getresource@12
push    offset _processupdatedfile_size@16
call    _travelupdatedfiles@4
test    eax, eax
jnz     short loc_10043e2
push    esi
push    10h
push    esi
push    esi
push    4c6h
push    esi
call    _msgbox2param@24
xor     eax, eax
pop     esi
retn
xor     eax, eax
inc     eax
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
xor     edi, edi
push    edi
push    edi
mov     esi, offset auprompt
push    esi
call    _getresource@12
mov     [ebp+var_4], eax
inc     eax
push    eax
push    40h
call    ds:__imp__localalloc@8
mov     ebx, eax
cmp     ebx, edi
jnz     short loc_1004433
push    edi
push    10h
push    edi
push    edi
push    4b5h
push    edi
call    _msgbox2param@24
call    _mygetlasterror@0
mov     _g_dwexitcode, eax
jmp     short loc_10044b1
push    [ebp+var_4]
push    ebx
push    esi
call    _getresource@12
test    eax, eax
jnz     short loc_1004464
push    edi
push    10h
push    edi
push    edi
push    4b1h
push    edi
call    _msgbox2param@24
push    ebx
call    ds:__imp__localfree@4
mov     _g_dwexitcode, 80070714h
jmp     short loc_10044b1
push    offset anone
push    ebx
call    ds:__imp__lstrcmpa@8
test    eax, eax
jnz     short loc_1004480
push    ebx
call    ds:__imp__localfree@4
xor     eax, eax
inc     eax
jmp     short loc_10044b3
push    4
push    20h
push    edi
push    ebx
push    3e9h
push    edi
call    _msgbox2param@24
push    ebx
mov     esi, eax
call    ds:__imp__localfree@4
cmp     esi, 6
jnz     short loc_10044a7
mov     _g_dwexitcode, edi
jmp     short loc_100447b
mov     _g_dwexitcode, 800704c7h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
push    [ebp+lpstring]
call    ds:__imp__lstrlena@4
mov     esi, eax
add     esi, 14h
push    esi
push    40h
call    ds:__imp__localalloc@8
mov     edi, eax
xor     ebx, ebx
cmp     edi, ebx
jnz     short loc_1004507
push    ebx
push    10h
push    ebx
push    ebx
push    4b5h
push    ebx
call    _msgbox2param@24
call    _mygetlasterror@0
mov     _g_dwexitcode, eax
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    [ebp+lpstring]
push    edi
call    ds:__imp__lstrcpya@8
push    offset atmp4351tmp
push    esi
push    edi
call    _addpath@12
push    ebx
push    4000080h
push    1
push    ebx
push    ebx
push    40000000h
push    edi
call    ds:__imp__createfilea@28
push    edi
mov     esi, eax
call    ds:__imp__localfree@4
cmp     esi, 0ffffffffh
jz      short loc_10044f4
push    esi
call    ds:__imp__closehandle@4
push    [ebp+lpstring]
call    ds:__imp__getfileattributesa@4
cmp     eax, 0ffffffffh
jz      short loc_10044f4
test    al, 10h
jz      short loc_10044f4
xor     eax, eax
mov     _g_dwexitcode, ebx
inc     eax
jmp     short loc_1004500
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 324h
mov     eax, ___security_cookie
push    ebx
xor     ebx, ebx
cmp     [ebp+arg_4], ebx
push    edi
mov     edi, [ebp+lppathname]
mov     [ebp+stackcookie], eax
mov     [ebp+var_31c], edi
mov     [ebp+var_318], ebx
jnz     short loc_100459d
xor     eax, eax
inc     eax
jmp     loc_10047a0
push    esi
lea     eax, [ebp+buffer]
push    eax
push    104h
call    ds:__imp__getcurrentdirectorya@8
mov     esi, ds:__imp__setcurrentdirectorya@4
push    edi
call    esi
test    eax, eax
jnz     short loc_10045de
push    ebx
push    10h
push    ebx
push    ebx
push    4bch
push    ebx
call    _msgbox2param@24
call    _mygetlasterror@0
mov     _g_dwexitcode, eax
xor     eax, eax
jmp     loc_100479f
lea     eax, [ebp+var_318]
push    eax
push    ebx
call    _getdrvfreespaceandclustersize@8
cmp     eax, ebx
mov     [ebp+var_314], eax
jnz     short loc_100464d
push    7fh
mov     [ebp+var_20c], bl
xor     eax, eax
pop     ecx
lea     edi, [ebp+var_20b]
rep stosd
stosw
stosb
call    _mygetlasterror@0
push    ebx
mov     _g_dwexitcode, eax
push    200h
lea     eax, [ebp+var_20c]
push    eax
push    ebx
call    ds:__imp__getlasterror@0
push    eax
push    ebx
push    1000h
call    ds:__imp__formatmessagea@28
push    ebx
push    10h
lea     eax, [ebp+var_20c]
push    eax
push    [ebp+var_31c]
push    4b0h
jmp     short loc_10046bf
push    ebx
push    ebx
lea     eax, [ebp+filesystemflags]
push    eax
lea     eax, [ebp+maximumcomponentlength]
push    eax
push    ebx
push    ebx
push    ebx
push    ebx
call    ds:__imp__getvolumeinformationa@32
test    eax, eax
jnz     short loc_10046d3
push    7fh
mov     [ebp+var_20c], bl
pop     ecx
lea     edi, [ebp+var_20b]
rep stosd
stosw
stosb
call    _mygetlasterror@0
push    ebx
mov     _g_dwexitcode, eax
push    200h
lea     eax, [ebp+var_20c]
push    eax
push    ebx
call    ds:__imp__getlasterror@0
push    eax
push    ebx
push    1000h
call    ds:__imp__formatmessagea@28
push    ebx
push    10h
lea     eax, [ebp+var_20c]
push    eax
push    [ebp+var_31c]
push    4f9h
push    ebx
call    _msgbox2param@24
lea     eax, [ebp+buffer]
push    eax
call    esi
jmp     loc_10045d7
lea     eax, [ebp+buffer]
push    eax
call    esi
push    3
push    edi
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__lstrcpyna@12
mov     ecx, 200h
xor     eax, eax
cmp     [ebp+var_318], ecx
jz      short loc_1004701
shl     ecx, 1
inc     eax
cmp     ax, 8
jb      short loc_10046f0
cmp     ax, 8
jnz     short loc_100471c
push    ebx
push    10h
push    ebx
push    ebx
push    4c5h
push    ebx
call    _msgbox2param@24
jmp     loc_10045d7
test    byte ptr dword_100c494, 8
jz      short loc_1004749
test    byte ptr [ebp+filesystemflags+1], 80h
jz      short loc_1004749
mov     edx, dword_100c498
movzx   eax, ax
mov     eax, _g_dwfilesizes[eax*4]
mov     ecx, edx
shr     ecx, 2
shl     eax, 1
add     ecx, edx
jmp     short loc_1004759
mov     ecx, dword_100c498
movzx   eax, ax
mov     eax, _g_dwfilesizes[eax*4]
mov     esi, [ebp+arg_4]
and     esi, 1
jz      short loc_1004782
test    byte ptr [ebp+arg_4], 2
jz      short loc_1004782
lea     edx, [ecx+eax]
cmp     edx, [ebp+var_314]
jbe     short loc_1004796
lea     edx, [ebp+string1]
push    edx
push    ecx
push    eax
push    [ebp+arg_8]
call    _diskspaceerrmsg@16
jmp     short loc_100479f
cmp     esi, ebx
jz      short loc_100478e
cmp     eax, [ebp+var_314]
jmp     short loc_1004770
cmp     ecx, [ebp+var_314]
jmp     short loc_1004770
xor     eax, eax
mov     _g_dwexitcode, ebx
inc     eax
pop     esi
mov     ecx, [ebp+stackcookie]
pop     edi
pop     ebx
call    @__security_check_cookie@4
leave
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 108h
mov     eax, ___security_cookie
mov     [ebp+stackcookie], eax
push    104h
lea     eax, [ebp+buffer]
push    eax
call    ds:__imp__getwindowsdirectorya@8
test    eax, eax
jnz     short loc_10047fa
push    eax
push    10h
push    eax
push    eax
push    4f0h
push    eax
call    _msgbox2param@24
call    _mygetlasterror@0
mov     _g_dwexitcode, eax
xor     eax, eax
jmp     short loc_100480a
push    2
push    2
lea     eax, [ebp+buffer]
push    eax
call    _isenoughspace@12
mov     ecx, [ebp+stackcookie]
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+hmodule]
push    edi
push    5
push    [ebp+lpname]
push    esi
call    ds:__imp__findresourcea@12
xor     ebx, ebx
cmp     eax, ebx
jz      short loc_100486b
push    eax
push    esi
call    ds:__imp__loadresource@8
mov     edi, eax
cmp     edi, ebx
jz      short loc_100486b
cmp     [ebp+dwinitparam], ebx
jnz     short loc_100484c
push    ebx
jmp     short loc_100484f
push    [ebp+dwinitparam]
push    [ebp+lpdialogfunc]
push    [ebp+hwndparent]
push    edi
push    esi
call    ds:__imp__dialogboxindirectparama@20
push    edi
mov     esi, eax
call    ds:__imp__freeresource@4
cmp     esi, 0ffffffffh
jnz     short loc_100487e
push    ebx
push    10h
push    ebx
push    ebx
push    4fbh
push    ebx
call    _msgbox2param@24
mov     esi, [ebp+arg_14]
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    18h
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 1b8h
mov     eax, ___security_cookie
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+stackcookie], eax
push    edi
lea     eax, [ebp+versioninformation]
xor     edi, edi
push    eax
mov     [ebp+var_1a4], esi
mov     [ebp+uid], edi
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    ds:__imp__getversionexa@4
test    eax, eax
jnz     short loc_10048ed
mov     [ebp+uid], 4b4h
push    edi
push    10h
push    edi
push    edi
push    [ebp+uid]
push    edi
call    _msgbox2param@24
jmp     loc_1004baa
mov     eax, [ebp+versioninformation.dwplatformid]
dec     eax
mov     edx, [ebp+versioninformation.dwmajorversion]
jz      short loc_100495b
dec     eax
jz      short loc_100490b
mov     [ebp+uid], 4cah
jmp     short loc_10048d7
xor     ecx, ecx
push    3
inc     ecx
pop     eax
cmp     edx, eax
mov     _g_fossupportsfullui, ecx
mov     _g_fossupportsinfinstalls, ecx
mov     _g_wosver, 2
ja      short loc_100494e
mov     _g_wosver, cx
jb      short loc_1004940
cmp     edx, eax
jnz     short loc_100496f
cmp     [ebp+versioninformation.dwminorversion], 33h
jnb     short loc_100496f
mov     _g_fossupportsfullui, edi
mov     _g_fossupportsinfinstalls, edi
jmp     short loc_100496f
cmp     edx, 5
jb      short loc_100496f
mov     _g_wosver, ax
jmp     short loc_100496f
xor     eax, eax
inc     eax
mov     _g_wosver, di
mov     _g_fossupportsfullui, eax
mov     _g_fossupportsinfinstalls, eax
cmp     dword_100c894, edi
jnz     loc_1004baa
cmp     esi, edi
jz      loc_1004baa
cmp     _g_wosver, di
jnz     short loc_1004991
add     esi, 40h
jmp     short loc_1004994
add     esi, 4
xor     ecx, ecx
push    ebx
mov     ebx, [ebp+versioninformation.dwbuildnumber]
mov     [ebp+var_1a8], ecx
lea     eax, [ecx+ecx*2]
lea     eax, [esi+eax*8]
push    dword ptr [eax+4]
push    dword ptr [eax]
push    [ebp+versioninformation.dwminorversion]
push    [ebp+versioninformation.dwmajorversion]
call    _compareversion@16
mov     ecx, [ebp+var_1a8]
mov     [ebp+ecx*4+var_1b0], eax
lea     eax, [ecx+ecx*2]
lea     eax, [esi+eax*8]
push    dword ptr [eax+10h]
push    dword ptr [eax+0ch]
push    [ebp+versioninformation.dwminorversion]
push    [ebp+versioninformation.dwmajorversion]
call    _compareversion@16
mov     ecx, [ebp+var_1a8]
mov     edx, [ebp+ecx*4+var_1b0]
test    edx, edx
mov     [ebp+ecx*4+var_1b8], eax
mov     edi, 54dh
jl      loc_1004b39
test    eax, eax
jg      loc_1004b39
test    edx, edx
jnz     loc_1004b0e
test    eax, eax
jnz     short loc_1004a38
lea     eax, [ecx+ecx*2]
movzx   edx, bx
lea     eax, [esi+eax*8]
cmp     edx, [eax+8]
jb      loc_1004b26
cmp     edx, [eax+14h]
jmp     loc_1004b20
test    edx, edx
jnz     loc_1004b0e
movzx   edx, bx
lea     eax, [ecx+ecx*2]
cmp     edx, [esi+eax*8+8]
jb      loc_1004b26
mov     eax, [ebp+var_1a4]
cmp     dword ptr [eax+7ch], 0
jz      loc_1004ba9
lea     ecx, [ebp+var_1a8]
push    ecx
push    104h
lea     ecx, [ebp+tstrfilename]
push    ecx
push    eax
call    _checkfileversion@16
test    eax, eax
jnz     loc_1004ba9
mov     ecx, [ebp+var_1a8]
mov     [ebp+uid], edi
mov     eax, [ebp+var_1a4]
xor     ebx, ebx
cmp     [ebp+uid], edi
jnz     short loc_1004ab5
mov     edx, [eax+80h]
imul    ecx, 3ch
add     edx, ecx
lea     esi, [edx+eax+84h]
lea     ebx, [ebp+tstrfilename]
mov     ecx, [esi+34h]
push    dword ptr [esi+30h]
lea     edi, [ecx+eax+84h]
call    _getmsgboxflag@4
test    byte ptr word_100c898, 1
mov     [ebp+var_1a4], eax
jnz     loc_1004b92
cmp     byte ptr [edi], 0
jz      loc_1004b92
push    0
call    ds:__imp__messagebeep@4
call    _runningonwin95bidiloc@0
test    eax, eax
jz      short loc_1004b53
push    1
push    10h
push    _g_hinst
call    _isbidilocalizedbinary@12
test    eax, eax
jz      short loc_1004b53
mov     eax, 180000h
jmp     short loc_1004b55
test    eax, eax
jnz     loc_1004a50
movzx   edx, bx
lea     eax, [ecx+ecx*2]
cmp     edx, [esi+eax*8+14h]
jbe     loc_1004a50
test    ecx, ecx
jz      short loc_1004b3e
mov     [ebp+uid], 54ch
jmp     loc_1004a8d
cmp     ecx, 1
jz      short loc_1004b2a
inc     ecx
cmp     ecx, 2
mov     [ebp+var_1a8], ecx
jl      loc_10049a3
jmp     loc_1004a50
xor     eax, eax
or      eax, [ebp+var_1a4]
or      eax, 30h
push    eax
push    offset string
push    edi
push    0
call    ds:__imp__messageboxa@16
test    byte ptr [ebp+var_1a4], 4
jz      short loc_1004b84
cmp     eax, 6
jnz     short loc_1004ba9
and     [ebp+uid], 0
jmp     short loc_1004ba9
test    byte ptr [ebp+var_1a4], 1
jz      short loc_1004ba9
cmp     eax, 1
jmp     short loc_1004b79
push    0
push    30h
push    ebx
push    offset string
push    [ebp+uid]
push    0
call    _msgbox2param@24
pop     ebx
mov     ecx, [ebp+stackcookie]
xor     eax, eax
cmp     [ebp+uid], eax
pop     edi
setz    al
pop     esi
call    @__security_check_cookie@4
leave
retn    4
mov     edi, edi
push    ebx
push    esi
push    edi
xor     edi, edi
push    edi
push    edi
mov     esi, offset alicense
push    esi
call    _getresource@12
mov     ebx, eax
lea     eax, [ebx+1]
push    eax
push    40h
call    ds:__imp__localalloc@8
cmp     eax, edi
mov     _g_szlicense, eax
jnz     short loc_1004c0f
push    edi
push    10h
push    edi
push    edi
push    4b5h
push    edi
call    _msgbox2param@24
call    _mygetlasterror@0
mov     _g_dwexitcode, eax
jmp     short loc_1004c8c
push    ebx
push    eax
push    esi
call    _getresource@12
test    eax, eax
jnz     short loc_1004c43
push    edi
push    10h
push    edi
push    edi
push    4b1h
push    edi
call    _msgbox2param@24
push    _g_szlicense
call    ds:__imp__localfree@4
mov     _g_dwexitcode, 80070714h
jmp     short loc_1004c8c
push    offset anone
push    _g_szlicense
call    ds:__imp__lstrcmpa@8
test    eax, eax
jz      short loc_1004c90
push    edi
push    edi
push    offset _licensedlgproc@16
push    edi
push    7d1h
push    _g_hinst
call    _mydialogbox@24
push    _g_szlicense
mov     esi, eax
call    ds:__imp__localfree@4
cmp     esi, edi
jnz     short loc_1004c9c
mov     _g_dwexitcode, 800704c7h
xor     eax, eax
jmp     short loc_1004ca5
push    _g_szlicense
call    ds:__imp__localfree@4
xor     eax, eax
mov     _g_dwexitcode, edi
inc     eax
pop     edi
pop     esi
pop     ebx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 21ch
mov     eax, ___security_cookie
mov     ecx, [ebp+lpstartupinfo]
push    ebx
mov     ebx, [ebp+lpcommandline]
push    esi
mov     [ebp+stackcookie], eax
xor     esi, esi
xor     eax, eax
cmp     ebx, esi
mov     [ebp+var_208], 1
jz      loc_1004dd2
push    edi
lea     edi, [ebp+processinformation]
stosd
stosd
stosd
stosd
lea     eax, [ebp+processinformation]
push    eax
push    ecx
push    esi
push    esi
push    20h
push    esi
push    esi
push    esi
push    ebx
push    esi
call    ds:__imp__createprocessa@40
test    eax, eax
jz      short loc_1004d84
push    0ffffffffh
push    [ebp+processinformation.hprocess]
call    ds:__imp__waitforsingleobject@8
lea     eax, [ebp+exitcode]
push    eax
push    [ebp+processinformation.hprocess]
call    ds:__imp__getexitcodeprocess@8
cmp     dword_100c888, esi
mov     ecx, [ebp+exitcode]
jnz     short loc_1004d55
mov     al, byte ptr dword_100c48c
test    al, 1
jz      short loc_1004d55
test    al, 2
jnz     short loc_1004d55
mov     eax, ecx
and     eax, 0ff000000h
cmp     eax, 0aa000000h
jnz     short loc_1004d55
mov     dword_100c48c, ecx
push    ecx
call    _savappexitcode@4
push    [ebp+processinformation.hthread]
mov     edi, ds:__imp__closehandle@4
call    edi
push    [ebp+processinformation.hprocess]
call    edi
test    byte ptr dword_100c494+1, 4
jz      short loc_1004dcb
cmp     [ebp+exitcode], esi
jge     short loc_1004dcb
jmp     short loc_1004dc5
call    _mygetlasterror@0
push    esi
mov     _g_dwexitcode, eax
push    200h
lea     eax, [ebp+buffer]
push    eax
push    esi
call    ds:__imp__getlasterror@0
push    eax
push    esi
push    1000h
call    ds:__imp__formatmessagea@28
push    esi
push    10h
lea     eax, [ebp+buffer]
push    eax
push    ebx
push    4c4h
push    esi
call    _msgbox2param@24
mov     [ebp+var_208], esi
mov     eax, [ebp+var_208]
pop     edi
mov     ecx, [ebp+stackcookie]
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
xor     edi, edi
push    edi
push    edi
mov     esi, offset afinishmsg
push    esi
call    _getresource@12
mov     ebx, eax
lea     eax, [ebx+1]
push    eax
push    40h
call    ds:__imp__localalloc@8
cmp     eax, edi
mov     [ebp+lpstring1], eax
jnz     short loc_1004e24
push    edi
push    10h
push    edi
push    edi
push    4b5h
push    edi
call    _msgbox2param@24
jmp     short loc_1004e69
push    ebx
push    eax
push    esi
call    _getresource@12
test    eax, eax
jnz     short loc_1004e3c
push    edi
push    10h
push    edi
push    edi
push    4b1h
jmp     short loc_1004e5a
push    offset anone
push    [ebp+lpstring1]
call    ds:__imp__lstrcmpa@8
test    eax, eax
jz      short loc_1004e60
push    edi
push    40h
push    edi
push    [ebp+lpstring1]
push    3e9h
push    edi
call    _msgbox2param@24
push    [ebp+lpstring1]
call    ds:__imp__localfree@4
pop     edi
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 34h
push    ebx
push    esi
push    edi
push    offset ashell32dll
call    ds:__imp__loadlibrarya@4
mov     edi, eax
xor     ebx, ebx
cmp     edi, ebx
mov     [ebp+hlibmodule], edi
jz      loc_1004f8f
mov     esi, ds:__imp__getprocaddress@8
push    offset ashbrowseforfol
push    edi
call    esi
cmp     eax, ebx
mov     [ebp+var_8], eax
jz      loc_1004f7c
push    0c3h
push    edi
call    esi
cmp     eax, ebx
mov     [ebp+var_10], eax
jz      loc_1004f7c
push    offset ashgetpathfromi
push    edi
call    esi
cmp     eax, ebx
mov     [ebp+var_c], eax
jz      loc_1004f7c
cmp     _g_szbrowsepath, bl
mov     esi, offset _g_szbrowsepath
jnz     short loc_1004f19
push    esi
push    104h
call    ds:__imp__gettemppatha@8
push    esi
call    ds:__imp__lstrlena@4
mov     edi, ds:__imp__charpreva@8
add     eax, esi
push    eax
push    esi
call    edi
cmp     byte ptr [eax], 5ch
mov     [ebp+var_4], eax
jnz     short loc_1004f19
push    eax
push    esi
call    edi
cmp     byte ptr [eax], 3ah
jz      short loc_1004f19
mov     eax, [ebp+var_4]
mov     [eax], bl
mov     eax, [ebp+arg_0]
mov     edi, [ebp+lpstring1]
mov     [ebp+var_34], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_28], eax
lea     eax, [ebp+var_34]
push    eax
mov     [edi], bl
mov     [ebp+var_30], ebx
mov     [ebp+var_2c], ebx
mov     [ebp+var_24], 1
mov     [ebp+var_20], offset _browsecallback@16
mov     [ebp+var_1c], esi
call    [ebp+var_8]
cmp     eax, ebx
mov     [ebp+arg_0], eax
jz      short loc_1004f6a
push    esi
push    eax
call    [ebp+var_c]
cmp     _g_szbrowsepath, bl
jz      short loc_1004f64
push    esi
push    edi
call    ds:__imp__lstrcpya@8
push    [ebp+arg_0]
call    [ebp+var_10]
push    [ebp+hlibmodule]
call    ds:__imp__freelibrary@4
xor     eax, eax
cmp     [edi], bl
setnz   al
jmp     short loc_1004fa3
push    edi
call    ds:__imp__freelibrary@4
push    ebx
push    10h
push    ebx
push    ebx
push    4c1h
jmp     short loc_1004f99
push    ebx
push    10h
push    ebx
push    ebx
push    4c2h
push    [ebp+arg_0]
call    _msgbox2param@24
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+lpfilename]
xor     ebx, ebx
push    esi
inc     ebx
call    _fileexists@4
test    eax, eax
jz      short loc_100501d
cmp     dword_100bc3c, 0
jnz     short loc_1005011
test    byte ptr word_100c898, bl
jnz     short loc_1005011
push    6
push    0
push    offset _overwritedlgproc@16
push    _g_hwndextractdlg
mov     lpstring, esi
push    7d3h
push    _g_hinst
call    _mydialogbox@24
sub     eax, 6
jz      short loc_1005011
dec     eax
jz      short loc_1005025
sub     eax, 832h
jnz     short loc_1005011
mov     dword_100bc3c, ebx
push    80h
push    esi
call    ds:__imp__setfileattributesa@8
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
xor     ebx, ebx
jmp     short loc_100501d
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 108h
cmp     dword_100bc38, 0
mov     eax, ___security_cookie
push    esi
mov     esi, [ebp+pfdin]
mov     [ebp+stackcookie], eax
jz      short loc_1005065
cmp     [ebp+fdint], 3
jnz     short loc_100505d
push    dword ptr [esi+14h]
call    _closefunc
pop     ecx
or      eax, 0ffffffffh
jmp     loc_1005180
mov     eax, [ebp+fdint]
sub     eax, 0
jz      loc_100517a
dec     eax
jz      short loc_100507d
dec     eax
jz      short loc_10050eb
dec     eax
jz      short loc_1005084
dec     eax
jz      short loc_100505d
xor     eax, eax
jmp     loc_1005180
push    dword ptr [esi+4]
lea     eax, [ebp+filename]
push    offset filename
push    104h
push    eax
call    _catdirandfile@16
test    eax, eax
jz      short loc_100505d
xor     eax, eax
mov     ax, [esi+1ah]
push    eax
xor     eax, eax
mov     ax, [esi+18h]
push    eax
push    dword ptr [esi+14h]
call    _adjustfiletime@12
test    eax, eax
jz      short loc_100505d
push    dword ptr [esi+14h]
call    _closefunc
xor     eax, eax
mov     ax, [esi+1ch]
pop     ecx
push    eax
call    _attr32fromattrfat@4
push    eax
lea     eax, [ebp+filename]
push    eax
call    ds:__imp__setfileattributesa@8
neg     eax
sbb     eax, eax
and     eax, 2
dec     eax
jmp     loc_1005180
mov     eax, _g_hwndextractdlg
test    eax, eax
jz      short loc_1005103
push    dword ptr [esi+4]
push    837h
push    eax
call    ds:__imp__setdlgitemtexta@12
push    dword ptr [esi+4]
lea     eax, [ebp+filename]
push    offset filename
push    104h
push    eax
call    _catdirandfile@16
test    eax, eax
jz      loc_100505d
lea     eax, [ebp+filename]
push    eax
call    _checkoverwrite@4
test    eax, eax
jz      loc_100507d
push    180h
lea     eax, [ebp+filename]
push    8302h
push    eax
call    _openfunc
mov     esi, eax
add     esp, 0ch
cmp     esi, 0ffffffffh
jz      loc_100505d
lea     eax, [ebp+filename]
push    eax
call    _addfile@4
test    eax, eax
jz      loc_100505d
inc     dword_100be54
mov     eax, esi
jmp     short loc_1005180
push    esi
call    _updatecabinetinfo@4
mov     ecx, [ebp+stackcookie]
pop     esi
call    @__security_check_cookie@4
leave
retn
call    _getcabinet@0
test    eax, eax
jnz     short loc_100519a
retn
mov     eax, _g_hwndextractdlg
push    ebx
push    esi
xor     esi, esi
cmp     eax, esi
push    edi
jz      short loc_10051d2
mov     edi, ds:__imp__getdlgitem@8
push    esi
push    842h
push    eax
call    edi
mov     ebx, ds:__imp__showwindow@8
push    eax
call    ebx
push    5
push    841h
push    _g_hwndextractdlg
call    edi
push    eax
call    ebx
push    _g_sess
call    _verifycabinet@4
test    eax, eax
jnz     short loc_10051ed
push    esi
push    10h
push    esi
push    esi
push    4bah
jmp     short loc_1005265
push    offset perf
push    1
push    offset _seekfunc
push    offset _closefunc
push    offset _writefunc
push    offset _readfunc
push    offset _openfunc
push    offset _freefunc
push    offset _allocfunc
call    _fdicreate
mov     ebx, eax
add     esp, 24h
cmp     ebx, esi
jz      short loc_1005255
push    offset _g_sess
push    esi
push    offset _fdinotifyextract
push    esi
push    offset pszcabpath
push    offset pszcabinet
push    ebx
call    _fdicopy
mov     edi, eax
add     esp, 1ch
cmp     edi, esi
jz      short loc_1005272
push    ebx
call    _fdidestroy
test    eax, eax
pop     ecx
jnz     short loc_1005272
mov     eax, perf.erfoper
push    esi
push    10h
push    esi
add     eax, 514h
push    esi
push    eax
push    _g_hwndextractdlg
call    _msgbox2param@24
xor     edi, edi
mov     eax, _g_sess
cmp     eax, esi
jz      short loc_1005288
push    eax
call    ds:__imp__freeresource@4
mov     _g_sess, esi
cmp     edi, esi
jnz     short loc_10052a4
cmp     dword_100bc38, esi
jnz     short loc_10052a4
push    esi
push    10h
push    esi
push    esi
push    4f8h
push    esi
call    _msgbox2param@24
test    byte ptr word_100c898, 1
jnz     short loc_10052c9
test    byte ptr dword_100c494, 1
jnz     short loc_10052c9
push    esi
push    edi
push    0fa1h
push    _g_hwndextractdlg
call    ds:__imp__sendmessagea@16
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 12ch
mov     eax, ___security_cookie
push    ebx
xor     ebx, ebx
cmp     [ebp+arg_4], ebx
push    esi
mov     [ebp+stackcookie], eax
mov     eax, [ebp+lpstring2]
push    edi
jz      loc_100537f
mov     edi, 104h
push    edi
lea     ecx, [ebp+string2]
push    ecx
push    eax
call    _getnewtempdir@12
test    eax, eax
jz      loc_10053e4
lea     eax, [ebp+string2]
push    eax
mov     esi, offset filename
push    esi
call    ds:__imp__lstrcpya@8
test    byte ptr dword_100c494, 20h
jz      short loc_1005371
lea     eax, [ebp+systeminfo]
push    eax
call    ds:__imp__getsysteminfo@4
movzx   eax, word ptr [ebp+systeminfo.anonymous_0]
sub     eax, ebx
jz      short loc_1005365
dec     eax
jz      short loc_100535e
dec     eax
jz      short loc_1005357
dec     eax
jnz     short loc_1005371
push    offset appc
jmp     short loc_100536a
push    offset aalpha
jmp     short loc_100536a
push    offset amips
jmp     short loc_100536a
push    offset ai386
push    edi
push    esi
call    _addpath@12
push    offset pszcabpath
push    edi
push    esi
call    _addpath@12
jmp     short loc_100538c
push    eax
mov     esi, offset filename
push    esi
call    ds:__imp__lstrcpya@8
push    esi
call    _isgoodtempdir@4
xor     edi, edi
inc     edi
test    eax, eax
jnz     short loc_10053ab
push    ebx
push    esi
call    ds:__imp__createdirectorya@8
test    eax, eax
jz      short loc_10053c3
mov     _g_cmd, edi
push    ebx
push    [ebp+arg_8]
push    esi
call    _isenoughspace@12
test    eax, eax
jz      short loc_10053cf
mov     _g_dwexitcode, ebx
mov     eax, edi
jmp     short loc_10053e6
call    _mygetlasterror@0
mov     _g_dwexitcode, eax
jmp     short loc_10053e4
cmp     _g_cmd, ebx
jz      short loc_10053e4
push    esi
mov     _g_cmd, ebx
call    ds:__imp__removedirectorya@4
xor     eax, eax
mov     ecx, [ebp+stackcookie]
pop     edi
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 114h
mov     eax, ___security_cookie
mov     ecx, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     [ebp+lpsz], ecx
mov     [ebp+stackcookie], eax
mov     eax, [ebp+arg_0]
mov     [ebp+hmodule], eax
mov     _g_hinst, eax
xor     eax, eax
mov     ecx, 23fh
mov     edi, offset _g_sess
rep stosd
push    41h
mov     ecx, 0cbh
mov     edi, offset _g_cmd
rep stosd
pop     ecx
mov     edi, offset _g_szbrowsepath
rep stosd
push    7fh
mov     esi, offset string
xor     edi, edi
push    esi
xor     ebx, ebx
inc     edi
push    offset atitle
mov     [ebp+var_10c], ebx
mov     dword_100be4c, edi
call    _getresource@12
cmp     eax, ebx
jz      loc_100564a
cmp     eax, 80h
ja      loc_100564a
push    ebx
push    edi
push    edi
push    ebx
call    ds:__imp__createeventa@16
push    eax
mov     _g_hcancelevent, eax
call    ds:__imp__setevent@4
push    4
push    offset dword_100c494
push    offset aextractopt
call    _getresource@12
test    eax, eax
jz      short loc_10054d3
test    byte ptr dword_100c494, 0c0h
jz      loc_1005563
push    104h
lea     eax, [ebp+name]
push    eax
push    offset ainstancecheck
call    _getresource@12
test    eax, eax
jnz     short loc_10054f2
push    ebx
push    10h
push    ebx
push    ebx
push    4b1h
push    ebx
call    _msgbox2param@24
mov     _g_dwexitcode, 80070714h
jmp     loc_100565a
lea     eax, [ebp+name]
push    eax
push    edi
push    ebx
call    ds:__imp__createmutexa@12
cmp     eax, ebx
mov     _g_hmutex, eax
jz      short loc_1005563
call    ds:__imp__getlasterror@0
cmp     eax, 0b7h
jnz     short loc_1005563
test    byte ptr dword_100c494, 80h
jz      short loc_1005532
push    ebx
push    10h
push    ebx
push    esi
push    54bh
push    ebx
call    _msgbox2param@24
jmp     short loc_1005548
push    4
push    20h
push    ebx
push    esi
push    524h
push    ebx
call    _msgbox2param@24
cmp     eax, 6
jz      short loc_1005563
push    _g_hmutex
call    ds:__imp__closehandle@4
mov     _g_dwexitcode, 800700b7h
jmp     loc_100565a
push    [ebp+lpsz]
mov     _g_uinfrebooton, ebx
call    _parsecmdline@4
test    eax, eax
jnz     short loc_1005587
push    ebx
push    10h
push    ebx
push    ebx
push    520h
jmp     loc_1005654
cmp     pcchnewdestlength, bl
jz      short loc_100559e
push    offset pcchnewdestlength
call    _deletemydir@4
jmp     loc_100565a
push    0ah
push    offset avercheck
push    [ebp+hmodule]
call    ds:__imp__findresourcea@12
cmp     eax, ebx
jz      short loc_10055c8
push    eax
push    [ebp+hmodule]
call    ds:__imp__loadresource@8
mov     [ebp+var_10c], eax
cmp     _g_fossupportsfullui, ebx
jz      short loc_10055d6
call    ds:__imp__initcommoncontrols@0
cmp     dword_100c884, ebx
jnz     short loc_1005646
push    [ebp+var_10c]
call    _checkosversion@4
test    eax, eax
jz      short loc_100565a
mov     ax, _g_wosver
cmp     ax, di
jz      short loc_1005604
cmp     ax, 2
jz      short loc_1005604
cmp     ax, 3
jnz     short loc_1005646
test    byte ptr dword_100c494+1, 1
jz      short loc_1005646
test    byte ptr word_100c898, 1
jnz     short loc_1005646
call    _isntadmin@0
test    eax, eax
jnz     short loc_1005646
push    83eh
push    547h
push    offset _warningdlgproc@16
push    ebx
push    7d6h
push    _g_hinst
call    _mydialogbox@24
cmp     eax, 83dh
jnz     short loc_100565a
mov     eax, edi
jmp     short loc_100565c
push    ebx
push    10h
push    ebx
push    ebx
push    4b1h
push    ebx
call    _msgbox2param@24
xor     eax, eax
mov     ecx, [ebp+stackcookie]
pop     edi
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
sub     eax, 10h
push    ebx
push    esi
push    edi
jz      loc_1005881
sub     eax, 100h
jz      loc_100582a
dec     eax
jz      short loc_1005699
xor     eax, eax
jmp     loc_100588f
mov     eax, [ebp+arg_8]
dec     eax
jz      loc_100574f
dec     eax
jz      loc_1005735
sub     eax, 834h
jnz     loc_100588c
push    200h
mov     edi, offset buffer
push    edi
push    3e8h
push    _g_hinst
call    ds:__imp__loadstringa@16
test    eax, eax
jnz     short loc_10056ef
xor     edi, edi
push    edi
push    10h
push    edi
push    edi
push    4b1h
push    [ebp+hdlg]
call    _msgbox2param@24
push    edi
jmp     loc_1005883
mov     ebx, [ebp+hdlg]
mov     esi, offset byte_100b338
push    esi
push    edi
push    ebx
call    _browsefordir@12
test    eax, eax
jz      loc_100588c
push    esi
push    835h
push    ebx
call    ds:__imp__setdlgitemtexta@12
test    eax, eax
jnz     loc_100588c
xor     edi, edi
push    edi
push    10h
push    edi
push    edi
push    4c0h
push    ebx
call    _msgbox2param@24
push    edi
push    ebx
jmp     loc_1005886
push    0
push    [ebp+hdlg]
call    ds:__imp__enddialog@8
mov     _g_dwexitcode, 800704c7h
jmp     loc_100588c
mov     ebx, 104h
push    ebx
mov     esi, offset filename
push    esi
push    835h
push    [ebp+hdlg]
call    ds:__imp__getdlgitemtexta@16
test    eax, eax
jz      loc_1005814
push    esi
call    _isfullpath@4
test    eax, eax
jz      loc_1005814
push    esi
call    ds:__imp__getfileattributesa@4
xor     edi, edi
cmp     eax, 0ffffffffh
jnz     short loc_10057c1
push    4
push    20h
push    edi
push    esi
push    54ah
push    [ebp+hdlg]
call    _msgbox2param@24
cmp     eax, 6
jnz     loc_100588c
push    edi
push    esi
call    ds:__imp__createdirectorya@8
test    eax, eax
jnz     short loc_10057c1
push    edi
push    10h
push    edi
push    esi
push    4cbh
jmp     short loc_1005820
push    offset pszcabpath
push    ebx
push    esi
call    _addpath@12
push    esi
call    _isgoodtempdir@4
test    eax, eax
jnz     short loc_10057e3
push    edi
push    10h
push    edi
push    edi
push    4beh
jmp     short loc_1005820
xor     ebx, ebx
inc     ebx
cmp     filename, 5ch
jnz     short loc_10057f8
cmp     byte_100bc45, 5ch
jz      short loc_10057fa
mov     edi, ebx
push    ebx
push    edi
push    esi
call    _isenoughspace@12
test    eax, eax
jz      short loc_1005810
push    ebx
push    [ebp+hdlg]
call    ds:__imp__enddialog@8
mov     eax, ebx
jmp     short loc_100588f
xor     edi, edi
push    edi
push    10h
push    edi
push    edi
push    4bfh
push    [ebp+hdlg]
call    _msgbox2param@24
jmp     short loc_100588c
call    ds:__imp__getdesktopwindow@0
mov     esi, [ebp+hdlg]
push    eax
push    esi
call    _centerwindow@8
push    offset string
push    esi
call    ds:__imp__setwindowtexta@8
xor     edi, edi
push    edi
push    103h
push    0c5h
push    835h
push    esi
call    ds:__imp__senddlgitemmessagea@20
xor     ebx, ebx
inc     ebx
cmp     _g_wosver, bx
jnz     short loc_1005810
push    edi
push    836h
push    esi
call    ds:__imp__getdlgitem@8
push    eax
call    ds:__imp__enablewindow@8
jmp     short loc_1005810
push    0
push    [ebp+hdlg]
call    ds:__imp__enddialog@8
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
sub     eax, 10h
push    esi
jz      loc_1005a16
sub     eax, 0f2h
jz      loc_1005a0b
sub     eax, 0eh
jz      loc_1005964
dec     eax
jz      short loc_10058f4
sub     eax, 0e90h
jz      short loc_10058d2
xor     eax, eax
jmp     loc_1005a2c
push    0
push    phandles
call    ds:__imp__terminatethread@8
push    [ebp+nresult]
push    [ebp+hdlg]
call    ds:__imp__enddialog@8
xor     eax, eax
inc     eax
jmp     loc_1005a2c
xor     esi, esi
inc     esi
cmp     [ebp+nresult], 2
jnz     loc_1005a2a
push    _g_hcancelevent
call    ds:__imp__resetevent@4
push    4
push    20h
push    0
push    offset pszcabpath
push    4b2h
push    _g_hwndextractdlg
call    _msgbox2param@24
cmp     eax, 6
jz      short loc_1005942
cmp     eax, esi
jz      short loc_1005942
push    _g_hcancelevent
call    ds:__imp__setevent@4
jmp     loc_1005a2a
push    _g_hcancelevent
mov     dword_100bc38, esi
call    ds:__imp__setevent@4
push    phandles
call    _waitforobject@4
jmp     loc_1005a1f
push    edi
mov     edi, [ebp+hdlg]
mov     _g_hwndextractdlg, edi
call    ds:__imp__getdesktopwindow@0
push    eax
push    edi
call    _centerwindow@8
xor     esi, esi
cmp     _g_fossupportsfullui, esi
jz      short loc_10059c4
push    ebx
push    0bb9h
push    esi
mov     esi, ds:__imp__getdlgitem@8
push    464h
mov     ebx, 83bh
push    ebx
push    edi
call    esi
mov     edi, ds:__imp__sendmessagea@16
push    eax
call    edi
push    0ffff0000h
push    0ffffffffh
push    465h
push    ebx
push    [ebp+hdlg]
call    esi
push    eax
call    edi
mov     edi, [ebp+hdlg]
xor     esi, esi
pop     ebx
push    offset string
push    edi
call    ds:__imp__setwindowtexta@8
push    offset threadid
push    esi
push    esi
push    offset _extractthread@0
push    esi
push    esi
call    ds:__imp__createthread@24
cmp     eax, esi
mov     phandles, eax
jnz     short loc_1005a05
push    esi
push    10h
push    esi
push    esi
push    4b8h
push    edi
call    _msgbox2param@24
push    esi
push    edi
call    ds:__imp__enddialog@8
xor     eax, eax
inc     eax
pop     edi
jmp     short loc_1005a2c
xor     esi, esi
inc     esi
cmp     [ebp+nresult], 1bh
jnz     short loc_1005a2a
jmp     short loc_1005a19
xor     esi, esi
inc     esi
mov     dword_100bc38, esi
push    0
push    [ebp+hdlg]
call    ds:__imp__enddialog@8
mov     eax, esi
pop     esi
pop     ebp
retn    10h
mov     edi, edi
push    ebx
xor     ebx, ebx
xor     eax, eax
inc     ebx
mov     _g_filetable[eax], ebx
add     eax, 18h
cmp     eax, 3c0h
jb      short loc_1005a3e
test    byte ptr word_100c898, bl
jnz     short loc_1005a85
test    byte ptr dword_100c494, bl
jnz     short loc_1005a85
mov     eax, _g_fossupportsfullui
push    0
push    0
neg     eax
push    offset _extractdlgproc@16
sbb     eax, eax
push    0
add     eax, 7d5h
push    eax
push    _g_hinst
call    _mydialogbox@24
jmp     short loc_1005a8a
call    _extractthread@0
test    eax, eax
jnz     short loc_1005a9a
mov     _g_dwexitcode, 8007042bh
jmp     short loc_1005aa8
push    offset _processupdatedfile_write@16
call    _travelupdatedfiles@4
test    eax, eax
jnz     short loc_1005aac
xor     eax, eax
pop     ebx
retn
and     _g_dwexitcode, 0
mov     eax, ebx
pop     ebx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 188h
mov     eax, ___security_cookie
push    ebx
xor     ebx, ebx
cmp     dword_100c888, ebx
mov     [ebp+stackcookie], eax
mov     [ebp+var_114], ebx
mov     [ebp+var_120], ebx
mov     [ebp+var_124], ebx
mov     _g_dwexitcode, ebx
jnz     short loc_1005b2d
push    4
push    offset dword_100c48c
push    offset areboot
call    _getresource@12
cmp     eax, ebx
jz      short loc_1005b0c
cmp     eax, 4
jbe     short loc_1005b2d
push    ebx
push    10h
push    ebx
push    ebx
push    4b1h
push    ebx
call    _msgbox2param@24
mov     _g_dwexitcode, 80070714h
xor     eax, eax
jmp     loc_1005e8f
push    esi
mov     esi, ds:__imp__localfree@4
mov     [ebp+var_110], ebx
push    edi
push    11h
xor     eax, eax
cmp     byte_100caa2, bl
pop     ecx
lea     edi, [ebp+startupinfo]
rep stosd
mov     [ebp+var_114], ebx
mov     [ebp+startupinfo.cb], 44h
jnz     loc_1005c7b
push    4
lea     eax, [ebp+var_118]
push    eax
push    offset ashowwindow
call    _getresource@12
cmp     eax, ebx
jz      loc_1005c5a
cmp     eax, 4
ja      loc_1005c5a
xor     edi, edi
inc     edi
cmp     [ebp+var_118], edi
jnz     short loc_1005b9c
mov     [ebp+startupinfo.wshowwindow], bx
jmp     short loc_1005bc2
cmp     [ebp+var_118], 2
jnz     short loc_1005bb0
mov     [ebp+startupinfo.wshowwindow], 6
jmp     short loc_1005bc2
cmp     [ebp+var_118], 3
jnz     short loc_1005bc8
mov     [ebp+startupinfo.wshowwindow], 3
mov     [ebp+startupinfo.dwflags], edi
cmp     [ebp+var_110], ebx
jnz     loc_1005c90
mov     ax, word_100c898
cmp     ax, bx
jz      short loc_1005c34
test    al, 1
jz      short loc_1005bef
mov     [ebp+lpname], offset aadmqcmd
jmp     short loc_1005bfd
test    al, 2
jz      short loc_1005bfd
mov     [ebp+lpname], offset ausrqcmd
push    104h
lea     eax, [ebp+string1]
push    eax
push    [ebp+lpname]
call    _getresource@12
test    eax, eax
jz      short loc_1005c5a
push    offset anone
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__lstrcmpia@8
test    eax, eax
jz      short loc_1005c34
mov     [ebp+var_120], edi
cmp     [ebp+var_120], ebx
jnz     loc_1005cd8
push    104h
lea     eax, [ebp+string1]
push    eax
push    offset arunprogram
call    _getresource@12
test    eax, eax
jnz     short loc_1005c90
push    ebx
push    10h
push    ebx
push    ebx
push    4b1h
push    ebx
call    _msgbox2param@24
mov     _g_dwexitcode, 80070714h
xor     eax, eax
jmp     loc_1005e8d
push    offset byte_100caa2
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__lstrcpya@8
xor     edi, edi
inc     edi
cmp     [ebp+var_110], edi
jnz     short loc_1005cd8
push    104h
lea     eax, [ebp+string1]
push    eax
push    offset apostrunprogram
call    _getresource@12
test    eax, eax
jz      short loc_1005c5a
cmp     byte_100caa2, bl
jnz     loc_1005e7e
push    offset anone
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__lstrcmpia@8
test    eax, eax
jz      loc_1005e7e
lea     eax, [ebp+var_114]
push    eax
lea     eax, [ebp+hmem]
push    eax
push    104h
lea     eax, [ebp+string1]
push    eax
call    _analyzecmd@16
test    eax, eax
jz      loc_1005c74
cmp     [ebp+var_124], ebx
jnz     short loc_1005d2b
cmp     _g_wosver, di
jz      short loc_1005d2b
cmp     _g_cmd, ebx
jz      short loc_1005d2b
cmp     [ebp+var_114], ebx
jnz     short loc_1005d37
mov     [ebp+var_124], edi
call    _addregrunonce@0
cmp     [ebp+var_114], ebx
jz      loc_1005e46
cmp     _g_fossupportsinfinstalls, ebx
jz      loc_1005e9a
cmp     [ebp+var_114], ebx
jz      loc_1005e46
test    byte ptr dword_100c494, 4
jz      loc_1005e46
push    offset pszsrc
call    _myloadlibrary@4
mov     edi, eax
cmp     edi, ebx
jz      loc_1005ec1
push    offset adoinfinstall
push    edi
call    ds:__imp__getprocaddress@8
cmp     eax, ebx
jz      loc_1005ed7
cmp     dword_100c890, ebx
mov     ecx, [ebp+hmem]
mov     [ebp+var_13c], ecx
lea     ecx, [ebp+string1]
mov     [ebp+var_134], ecx
mov     cx, _g_wosver
mov     [ebp+var_130], cx
movzx   ecx, word_100c898
mov     [ebp+var_144], ebx
mov     [ebp+var_140], offset string
mov     [ebp+var_138], offset filename
mov     [ebp+var_12c], ecx
jz      short loc_1005de0
or      byte ptr [ebp+var_12c+2], 1
mov     cl, byte ptr dword_100c494
test    cl, 8
jz      short loc_1005df2
or      byte ptr [ebp+var_12c+2], 2
test    cl, 10h
jz      short loc_1005dfe
or      byte ptr [ebp+var_12c+2], 4
mov     cl, byte ptr dword_100cba8
test    cl, 40h
jz      short loc_1005e10
or      byte ptr [ebp+var_12c+2], 8
test    cl, cl
jns     short loc_1005e1b
or      byte ptr [ebp+var_12c+2], 10h
mov     ecx, dword_100c498
mov     [ebp+var_128], ecx
lea     ecx, [ebp+var_144]
push    ecx
call    eax
cmp     eax, ebx
mov     _g_dwexitcode, eax
push    edi
jl      loc_1005f09
call    ds:__imp__freelibrary@4
jmp     short loc_1005e60
lea     eax, [ebp+startupinfo]
push    eax
push    [ebp+hmem]
call    _runapps@8
test    eax, eax
jz      loc_1005f0f
push    [ebp+hmem]
call    esi
inc     [ebp+var_110]
cmp     [ebp+var_110], 2
jb      loc_1005b3b
xor     edi, edi
inc     edi
cmp     _g_bconvertrunonce, ebx
jz      short loc_1005e8b
call    _convertregrunonce@0
mov     eax, edi
pop     edi
pop     esi
mov     ecx, [ebp+stackcookie]
pop     ebx
call    @__security_check_cookie@4
leave
retn
push    ebx
push    10h
push    ebx
push    ebx
push    4c7h
push    ebx
call    _msgbox2param@24
push    [ebp+hmem]
call    esi
mov     _g_dwexitcode, 8007042bh
jmp     loc_1005c74
push    ebx
push    10h
push    ebx
push    offset pszsrc
push    4c8h
push    ebx
call    _msgbox2param@24
jmp     short loc_1005ef2
push    ebx
push    10h
push    ebx
push    offset adoinfinstall
push    4c9h
push    ebx
call    _msgbox2param@24
push    edi
call    ds:__imp__freelibrary@4
push    [ebp+hmem]
call    esi
call    _mygetlasterror@0
mov     _g_dwexitcode, eax
jmp     loc_1005c74
call    ds:__imp__freelibrary@4
push    [ebp+hmem]
call    esi
jmp     loc_1005c74
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 108h
mov     eax, ___security_cookie
push    ebx
push    esi
push    edi
push    0
push    0
mov     esi, offset arunprogram
push    esi
mov     [ebp+stackcookie], eax
call    _getresource@12
mov     edi, eax
lea     eax, [edi+1]
push    eax
push    40h
call    ds:__imp__localalloc@8
mov     ebx, eax
xor     eax, eax
cmp     ebx, eax
jnz     short loc_1005f7d
push    eax
push    10h
push    eax
push    eax
push    4b5h
push    eax
call    _msgbox2param@24
call    _mygetlasterror@0
mov     _g_dwexitcode, eax
xor     eax, eax
jmp     loc_10061f3
push    edi
push    ebx
push    esi
call    _getresource@12
test    eax, eax
jnz     short loc_1005fac
push    eax
push    10h
push    eax
push    eax
push    4b1h
push    eax
call    _msgbox2param@24
push    ebx
call    ds:__imp__localfree@4
mov     _g_dwexitcode, 80070714h
jmp     short loc_1005f76
push    offset anone
push    ebx
call    ds:__imp__lstrcmpa@8
xor     edi, edi
inc     edi
test    eax, eax
jnz     short loc_1005fc5
mov     dword_100c490, edi
push    ebx
call    ds:__imp__localfree@4
mov     al, sz
test    al, al
jz      short loc_1006010
cmp     al, 5ch
jnz     short loc_1005fe7
cmp     byte_100c99f, al
jnz     short loc_1005fe7
xor     esi, esi
xor     eax, eax
jmp     short loc_1005feb
mov     eax, edi
xor     esi, esi
push    eax
push    esi
push    offset sz
call    _createandvalidatesubdir@12
test    eax, eax
jnz     short loc_1006062
push    esi
push    10h
push    esi
push    esi
push    4beh
push    esi
call    _msgbox2param@24
jmp     loc_1005f76
xor     eax, eax
cmp     dword_100c884, eax
jnz     loc_10061d5
cmp     dword_100c490, eax
jnz     loc_10061d5
mov     esi, offset filename
push    esi
push    104h
call    ds:__imp__gettemppatha@8
test    eax, eax
jz      short loc_1006069
push    3
push    edi
push    esi
call    _createandvalidatesubdir@12
test    eax, eax
jnz     short loc_1006062
push    esi
call    _iswindowsdrive@4
test    eax, eax
jnz     short loc_1006069
push    edi
push    edi
push    esi
call    _createandvalidatesubdir@12
test    eax, eax
jz      short loc_1006069
mov     eax, edi
jmp     loc_10061f3
mov     edi, ds:__imp__lstrcpya@8
push    offset aa
lea     eax, [ebp+string1]
push    eax
call    edi
jmp     loc_1006194
push    eax
call    ds:__imp__getdrivetypea@4
mov     ebx, eax
cmp     ebx, 6
jz      short loc_1006095
cmp     ebx, 3
jnz     short loc_10060a7
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__getfileattributesa@4
cmp     eax, 0ffffffffh
jnz     short loc_10060e0
cmp     ebx, 2
jnz     short loc_10060d5
cmp     [ebp+string1], 41h
jz      short loc_10060d5
cmp     [ebp+string1], 42h
jz      short loc_10060d5
lea     eax, [ebp+string1]
push    eax
call    _getspace@4
test    eax, eax
jz      short loc_10060d5
cmp     eax, 19000h
jnb     short loc_10060e0
inc     [ebp+string1]
jmp     loc_1006194
xor     ebx, ebx
push    ebx
push    3
lea     eax, [ebp+string1]
push    eax
call    _isenoughspace@12
test    eax, eax
jnz     short loc_1006118
lea     eax, [ebp+string1]
push    eax
call    _iswindowsdrive@4
test    eax, eax
jnz     short loc_10060d5
push    ebx
push    1
lea     eax, [ebp+string1]
push    eax
call    _isenoughspace@12
test    eax, eax
jz      short loc_10060d5
lea     eax, [ebp+string1]
push    eax
call    _iswindowsdrive@4
test    eax, eax
jz      short loc_100613a
push    104h
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__getwindowsdirectorya@8
push    offset amsdownldtmp
push    104h
lea     eax, [ebp+string1]
push    eax
call    _addpath@12
lea     eax, [ebp+string1]
push    eax
call    _ifnotexistcreatedir@4
test    eax, eax
jnz     short loc_100616e
inc     [ebp+string1]
mov     [ebp+var_105], al
jmp     short loc_1006194
push    2
lea     eax, [ebp+string1]
push    eax
call    ds:__imp__setfileattributesa@8
lea     eax, [ebp+string1]
push    eax
push    esi
call    edi
push    ebx
push    1
push    esi
call    _createandvalidatesubdir@12
test    eax, eax
jnz     short loc_10061d0
cmp     [ebp+string1], 5ah
lea     eax, [ebp+string1]
jle     loc_1006082
push    104h
push    eax
call    ds:__imp__getwindowsdirectorya@8
push    4
push    3
lea     eax, [ebp+string1]
push    eax
call    _isenoughspace@12
test    eax, eax
jnz     loc_100606f
jmp     loc_1005f76
xor     eax, eax
inc     eax
jmp     short loc_10061f3
push    eax
push    eax
push    offset _tempdirdlgproc@16
push    eax
push    7d2h
push    _g_hinst
call    _mydialogbox@24
neg     eax
sbb     eax, eax
neg     eax
mov     ecx, [ebp+stackcookie]
pop     edi
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10ch
mov     eax, ___security_cookie
push    edi
xor     edi, edi
cmp     word_100c898, di
mov     [ebp+stackcookie], eax
jnz     short loc_1006247
cmp     dword_100c884, edi
jnz     short loc_100623e
call    _getuserspermission@0
test    eax, eax
jz      short loc_1006259
cmp     word_100c898, di
jnz     short loc_1006247
call    _displaylicense@0
test    eax, eax
jz      short loc_1006259
call    _getfilelist@0
test    eax, eax
jz      short loc_1006259
call    _gettempdirectory@0
test    eax, eax
jnz     short loc_1006260
xor     eax, eax
jmp     loc_100636a
push    ebx
push    esi
mov     esi, 105h
push    esi
lea     eax, [ebp+buffer]
push    eax
call    ds:__imp__getsystemdirectorya@8
push    offset libfilename
push    esi
lea     eax, [ebp+buffer]
push    eax
call    _addpath@12
lea     eax, [ebp+buffer]
push    eax
call    ds:__imp__loadlibrarya@4
mov     esi, eax
cmp     esi, edi
mov     ebx, offset filename
jz      short loc_10062b3
push    offset adecryptfilea
push    esi
call    ds:__imp__getprocaddress@8
cmp     eax, edi
jz      short loc_10062b3
push    edi
push    ebx
call    eax
push    esi
call    ds:__imp__freelibrary@4
cmp     dword_100c884, edi
jnz     short loc_10062da
cmp     dword_100c490, edi
jnz     short loc_10062da
call    _checkwindir@0
test    eax, eax
jnz     short loc_10062da
xor     eax, eax
jmp     loc_1006368
push    ebx
call    ds:__imp__setcurrentdirectorya@4
test    eax, eax
jnz     short loc_1006301
push    edi
push    10h
push    edi
push    edi
push    4bch
push    edi
call    _msgbox2param@24
call    _mygetlasterror@0
mov     _g_dwexitcode, eax
jmp     short loc_10062d3
cmp     dword_100c88c, edi
jnz     short loc_1006312
call    _extractfiles@0
test    eax, eax
jz      short loc_10062d3
test    byte ptr dword_100cba8, 0c0h
jnz     short loc_1006330
xor     eax, eax
mov     ax, _g_wosver
push    eax
call    _needrebootinit@4
mov     _g_dwrebootcheck, eax
jmp     short loc_1006336
mov     _g_dwrebootcheck, edi
cmp     dword_100c884, edi
jnz     short loc_100634f
cmp     dword_100c490, edi
jnz     short loc_100634f
call    _runinstallcommand@0
test    eax, eax
jz      short loc_10062d3
cmp     word_100c898, di
jnz     short loc_1006365
cmp     dword_100c884, edi
jnz     short loc_1006365
call    _finishmessage@0
xor     eax, eax
inc     eax
pop     esi
pop     ebx
mov     ecx, [ebp+stackcookie]
pop     edi
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+nshowcmd]
and     _g_dwexitcode, 0
push    [ebp+lpcmdline]
push    [ebp+hinstance]
call    _init@12
test    eax, eax
jz      short loc_10063c2
push    esi
call    _domain@0
mov     esi, eax
call    _deleteextractedfiles@0
test    esi, esi
pop     esi
jz      short loc_10063c2
cmp     pcchnewdestlength, 0
jnz     short loc_10063c2
mov     eax, dword_100c48c
test    al, 1
jz      short loc_10063c2
push    eax
call    _myrestartdialog@4
mov     eax, _g_hmutex
test    eax, eax
jz      short loc_10063d2
push    eax
call    ds:__imp__closehandle@4
mov     eax, _g_dwexitcode
pop     ebp
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 44h
push    esi
call    ds:__imp__getcommandlinea@0
mov     esi, eax
mov     al, [esi]
cmp     al, 22h
jnz     short loc_1006409
inc     esi
mov     al, [esi]
test    al, al
jz      short loc_1006402
cmp     al, 22h
jnz     short loc_10063f7
cmp     byte ptr [esi], 22h
jnz     short loc_100641a
jmp     short loc_1006419
cmp     al, 20h
jle     short loc_100641a
inc     esi
cmp     byte ptr [esi], 20h
jg      short loc_100640d
jmp     short loc_100641a
cmp     al, 20h
jg      short loc_1006420
inc     esi
mov     al, [esi]
test    al, al
jnz     short loc_1006415
and     [ebp+startupinfo.dwflags], 0
lea     eax, [ebp+startupinfo]
push    eax
call    ds:__imp__getstartupinfoa@4
test    byte ptr [ebp+startupinfo.dwflags], 1
jz      short loc_100643a
movzx   eax, [ebp+startupinfo.wshowwindow]
jmp     short loc_100643d
push    0ah
pop     eax
push    eax
push    esi
push    0
push    0
call    ds:__imp__getmodulehandlea@4
push    eax
call    _winmain@16
push    eax
call    ds:__imp__exitprocess@4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, ___security_cookie
test    eax, eax
jz      short loc_1006483
cmp     eax, 0bb40h
jnz     short loc_10064d0
push    esi
lea     eax, [ebp+systemtimeasfiletime]
push    eax
call    ds:__imp__getsystemtimeasfiletime@4
mov     esi, [ebp+systemtimeasfiletime.dwhighdatetime]
xor     esi, [ebp+systemtimeasfiletime.dwlowdatetime]
call    ds:__imp__getcurrentprocessid@0
xor     esi, eax
call    ds:__imp__getcurrentthreadid@0
xor     esi, eax
call    ds:__imp__gettickcount@0
xor     esi, eax
lea     eax, [ebp+performancecount]
push    eax
call    ds:__imp__queryperformancecounter@4
mov     eax, dword ptr [ebp+performancecount+4]
xor     eax, dword ptr [ebp+performancecount]
xor     eax, esi
and     eax, 0ffffh
pop     esi
jnz     short loc_10064cb
mov     eax, 0bb40h
mov     ___security_cookie, eax
not     eax
mov     ___security_cookie_complement, eax
leave
retn
cmp     ecx, ___security_cookie
jnz     short loc_10064ef
test    ecx, 0ffff0000h
jnz     short loc_10064ef
retn
jmp     ___report_gsfailure
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 330h
push    edi
mov     [ebp+var_228], eax
mov     [ebp+var_22c], ecx
mov     [ebp+var_230], edx
mov     [ebp+var_234], ebx
mov     [ebp+var_238], esi
mov     [ebp+var_23c], edi
mov     [ebp+var_210], ss
mov     [ebp+var_21c], cs
mov     [ebp+var_240], ds
mov     [ebp+var_244], es
mov     [ebp+var_248], fs
mov     [ebp+var_24c], gs
pushf
pop     [ebp+var_218]
mov     [ebp+var_2d8], 10001h
mov     eax, [ebp+4]
mov     [ebp+var_220], eax
lea     eax, [ebp+4]
mov     [ebp+var_214], eax
lea     eax, [ebp+4]
mov     eax, [eax-4]
mov     [ebp+var_224], eax
push    14h
pop     ecx
xor     eax, eax
lea     edi, [ebp+var_330]
rep stosd
mov     [ebp+var_330], 0c0000409h
mov     eax, [ebp+4]
mov     [ebp+var_324], eax
lea     eax, [ebp+var_330]
mov     [ebp+exceptioninfo.exceptionrecord], eax
lea     eax, [ebp+var_2d8]
mov     [ebp+exceptioninfo.contextrecord], eax
mov     eax, ___security_cookie
mov     [ebp+var_2e0], eax
mov     eax, ___security_cookie_complement
mov     [ebp+var_2dc], eax
push    0
call    ds:__imp__setunhandledexceptionfilter@4
lea     eax, [ebp+exceptioninfo]
push    eax
call    ds:__imp__unhandledexceptionfilter@4
push    502h
call    ds:__imp__getcurrentprocess@0
push    eax
call    ds:__imp__terminateprocess@8
pop     edi
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, dword ptr [ebp+testchar]
cmp     bl, byte ptr [ebp+arg_4]
jnz     short loc_100661e
push    ebx
call    ds:__imp__isdbcsleadbyte@4
test    eax, eax
jz      short loc_100661a
xor     eax, eax
cmp     bx, [ebp+arg_4]
setnz   al
jmp     short loc_1006621
xor     eax, eax
jmp     short loc_1006621
xor     eax, eax
inc     eax
pop     ebx
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+lpsz]
jmp     short loc_1006651
push    dword ptr [ebp+arg_4]
xor     eax, eax
mov     ax, [esi]
push    eax
call    _chrcmpa_inline@8
test    eax, eax
jz      short loc_100665d
push    esi
call    ds:__imp__charnexta@4
mov     esi, eax
cmp     byte ptr [esi], 0
jnz     short loc_1006636
xor     eax, eax
pop     esi
pop     ebp
retn    8
mov     eax, esi
jmp     short loc_1006658
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
and     [ebp+var_4], 0
push    ebx
mov     ebx, [ebp+lpstring]
push    esi
push    edi
push    ebx
call    ds:__imp__lstrlena@4
mov     esi, ds:__imp__charpreva@8
add     eax, ebx
push    eax
push    ebx
call    esi
push    eax
jmp     short loc_1006692
cmp     byte ptr [edi], 5ch
jz      short loc_10066a0
push    edi
push    ebx
call    esi
mov     edi, eax
cmp     edi, ebx
ja      short loc_100668c
cmp     byte ptr [edi], 5ch
jnz     short loc_10066c0
cmp     edi, ebx
jz      short loc_10066ad
push    edi
push    ebx
call    esi
cmp     byte ptr [eax], 3ah
jnz     short loc_10066b6
push    edi
call    ds:__imp__charnexta@4
mov     edi, eax
mov     byte ptr [edi], 0
mov     [ebp+var_4], 1
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+lpstring]
push    edi
call    ds:__imp__lstrlena@4
lea     ecx, [eax+1]
cmp     ecx, [ebp+cchdest]
jb      short loc_10066ee
mov     eax, 8007007ah
jmp     short loc_1006720
push    esi
lea     esi, [eax+edi]
cmp     esi, edi
jbe     short loc_1006707
push    esi
push    edi
call    ds:__imp__charpreva@8
cmp     byte ptr [eax], 5ch
jz      short loc_1006707
mov     byte ptr [esi], 5ch
inc     esi
mov     eax, [ebp+pszsrc]
mov     byte ptr [esi], 0
pop     esi
jmp     short loc_1006711
inc     eax
cmp     byte ptr [eax], 20h
jz      short loc_1006710
push    eax
push    [ebp+cchdest]
push    edi
call    _stringcchcata@12
pop     edi
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+lpfilename]
call    ds:__imp__getfileattributesa@4
cmp     eax, 0ffffffffh
jnz     short loc_1006741
xor     eax, eax
jmp     short loc_1006749
shr     eax, 4
not     eax
and     eax, 1
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+lpsz]
push    edi
xor     edi, edi
jmp     short loc_100677d
push    dword ptr [ebp+arg_4]
xor     eax, eax
mov     ax, [esi]
push    eax
call    _chrcmpa_inline@8
test    eax, eax
jnz     short loc_1006774
mov     edi, esi
push    esi
call    ds:__imp__charnexta@4
mov     esi, eax
cmp     byte ptr [esi], 0
jnz     short loc_1006760
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+lpsz]
push    esi
xor     esi, esi
mov     cl, [eax]
cmp     cl, 30h
jl      short loc_10067ae
cmp     cl, 39h
jg      short loc_10067ae
add     esi, 0fffffffdh
movsx   ecx, cl
jmp     short loc_10067c6
cmp     cl, 61h
jl      short loc_10067b6
add     cl, 0e0h
movsx   ecx, cl
sub     ecx, 37h
cmp     ecx, 0ah
jl      short loc_10067d4
cmp     ecx, 0fh
jg      short loc_10067d4
shl     esi, 4
push    eax
add     esi, ecx
call    ds:__imp__charnexta@4
jmp     short loc_100679a
mov     ecx, [ebp+arg_4]
mov     [ecx], esi
xor     ecx, ecx
cmp     eax, [ebp+lpsz]
pop     esi
setnz   cl
mov     eax, ecx
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+lparam]
mov     edx, [ebp+lptype]
xor     eax, eax
inc     eax
cmp     edx, [ecx+8]
jnz     short loc_1006819
mov     edx, dword ptr [ebp+wlanguage]
push    esi
mov     esi, edx
and     si, 3ffh
cmp     [ecx], si
pop     esi
jnz     short loc_1006819
mov     [ecx+4], eax
mov     [ecx], dx
xor     eax, eax
pop     ebp
retn    14h
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     ax, [ebp+arg_c]
and     [ebp+var_8], 0
lea     ecx, [ebp+lparam]
push    ecx
push    offset _enumreslangproc@20
push    [ebp+lpname]
mov     word ptr [ebp+lparam], ax
mov     eax, [ebp+lptype]
push    eax
push    [ebp+hmodule]
mov     [ebp+var_4], eax
call    ds:__imp__enumresourcelanguagesa@20
mov     eax, [ebp+var_8]
leave
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
cmp     dword_100b2d8, 0fffffffeh
jnz     short loc_10068a5
and     dword_100b2d8, 0
push    1
push    [ebp+lpname]
push    [ebp+lptype]
push    [ebp+hmodule]
call    _getresourcelanguage@16
test    eax, eax
jnz     short loc_100689b
push    0dh
push    [ebp+lpname]
push    [ebp+lptype]
push    [ebp+hmodule]
call    _getresourcelanguage@16
test    eax, eax
jz      short loc_10068a5
mov     dword_100b2d8, 1
mov     eax, dword_100b2d8
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0b4h
mov     eax, ___security_cookie
and     [ebp+var_a8], 0
cmp     dword_100b2dc, 0fffffffeh
mov     [ebp+stackcookie], eax
mov     [ebp+cbdata], 0ch
jnz     loc_10069d6
and     dword_100b2dc, 0
lea     eax, [ebp+versioninformation]
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    ds:__imp__getversionexa@4
test    eax, eax
jz      loc_10069d6
cmp     [ebp+versioninformation.dwplatformid], 1
jnz     loc_10069d6
cmp     [ebp+versioninformation.dwmajorversion], 4
jnz     loc_10069d6
cmp     [ebp+versioninformation.dwminorversion], 0ah
jnb     loc_10069d6
push    4ah
call    ds:__imp__getsystemmetrics@4
test    eax, eax
jz      loc_10069d6
lea     eax, [ebp+phkresult]
push    eax
push    20019h
push    0
push    offset acontrolpanelde
push    80000001h
call    ds:__imp__regopenkeyexa@20
test    eax, eax
jnz     short loc_10069d6
push    edi
lea     eax, [ebp+cbdata]
push    eax
lea     eax, [ebp+data]
push    eax
lea     eax, [ebp+type]
push    eax
push    0
push    offset pszcabpath
push    [ebp+phkresult]
call    ds:__imp__regqueryvalueexa@24
push    [ebp+phkresult]
mov     edi, eax
call    ds:__imp__regclosekey@4
test    edi, edi
pop     edi
jnz     short loc_10069d6
lea     eax, [ebp+var_a8]
push    eax
lea     eax, [ebp+data]
push    eax
call    _converthexstringtointa@8
test    eax, eax
jz      short loc_10069d6
and     [ebp+var_a8], 3ffh
cmp     [ebp+var_a8], 1
jz      short loc_10069cc
cmp     [ebp+var_a8], 0dh
jnz     short loc_10069d6
mov     dword_100b2dc, 1
mov     ecx, [ebp+stackcookie]
mov     eax, dword_100b2dc
call    @__security_check_cookie@4
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     ecx, [ebp+lprootpathname]
xor     eax, eax
cmp     [ecx], al
mov     [ebp+sectorspercluster], eax
mov     [ebp+bytespersector], eax
mov     [ebp+numberoffreeclusters], eax
mov     [ebp+totalnumberofclusters], eax
jz      short loc_1006a22
lea     eax, [ebp+totalnumberofclusters]
push    eax
lea     eax, [ebp+numberoffreeclusters]
push    eax
lea     eax, [ebp+bytespersector]
push    eax
lea     eax, [ebp+sectorspercluster]
push    eax
push    ecx
call    ds:__imp__getdiskfreespacea@20
test    eax, eax
jnz     short loc_1006a26
xor     eax, eax
jmp     short locret_1006a3c
mov     eax, [ebp+bytespersector]
imul    eax, [ebp+sectorspercluster]
push    400h
push    [ebp+numberoffreeclusters]
push    eax
call    ds:__imp__muldiv@12
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
and     [ebp+sectorspercluster], 0
and     [ebp+bytespersector], 0
and     [ebp+numberoffreeclusters], 0
and     [ebp+totalnumberofclusters], 0
lea     eax, [ebp+totalnumberofclusters]
push    eax
lea     eax, [ebp+numberoffreeclusters]
push    eax
lea     eax, [ebp+bytespersector]
push    eax
lea     eax, [ebp+sectorspercluster]
push    eax
push    [ebp+lprootpathname]
call    ds:__imp__getdiskfreespacea@20
test    eax, eax
jz      short locret_1006a9b
push    esi
mov     esi, [ebp+bytespersector]
imul    esi, [ebp+sectorspercluster]
push    400h
push    [ebp+numberoffreeclusters]
push    esi
call    ds:__imp__muldiv@12
mov     ecx, [ebp+arg_4]
test    ecx, ecx
jz      short loc_1006a9a
mov     [ecx], esi
pop     esi
leave
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+pfnalloc]
push    804h
call    esi
pop     ecx
xor     ecx, ecx
cmp     eax, ecx
jnz     short loc_1006aca
push    ecx
push    5
push    [ebp+perf]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_1006b33
mov     edx, [ebp+pfnfree]
or      dword ptr [eax+88h], 0ffffffffh
or      dword ptr [eax+84h], 0ffffffffh
mov     [eax+4], edx
mov     edx, [ebp+pfnopen]
mov     [eax+0ch], edx
mov     edx, [ebp+pfnread]
mov     [eax+10h], edx
mov     edx, [ebp+pfnwrite]
mov     [eax+14h], edx
mov     edx, [ebp+pfnclose]
mov     [eax+18h], edx
mov     edx, [ebp+pfnseek]
mov     [eax+1ch], edx
mov     edx, [ebp+cputype]
mov     [eax+20h], edx
mov     edx, [ebp+perf]
mov     [eax+48h], ecx
mov     [eax+44h], ecx
mov     [eax+4ch], ecx
mov     ecx, 0ffffh
mov     [eax+8], esi
mov     [eax], edx
mov     word ptr [eax+0b2h], 0fh
mov     [eax+0a0h], ecx
mov     [eax+0a8h], ecx
mov     [eax+0a4h], ecx
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 24h
push    esi
mov     esi, [ebp+hfdi]
push    24h
lea     eax, [ebp+var_24]
push    eax
push    [ebp+hf]
call    dword ptr [esi+10h]
add     esp, 0ch
cmp     eax, 24h
jnz     short loc_1006b7a
cmp     [ebp+var_24], 4643534dh
jnz     short loc_1006b7a
cmp     [ebp+var_c], 103h
jz      short loc_1006b7e
movzx   eax, [ebp+var_c]
push    eax
push    3
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_1006bc6
mov     eax, [ebp+pfdici]
mov     ecx, [ebp+var_1c]
mov     [eax], ecx
mov     cx, [ebp+var_a]
mov     [eax+4], cx
mov     cx, [ebp+var_8]
mov     [eax+6], cx
mov     cx, [ebp+var_4]
mov     [eax+8], cx
mov     cx, [ebp+var_2]
mov     [eax+0ah], cx
movzx   ecx, [ebp+var_6]
mov     edx, ecx
shr     edx, 2
and     edx, 1
mov     [eax+0ch], edx
mov     edx, ecx
and     edx, 1
and     ecx, 2
mov     [eax+10h], edx
mov     [eax+14h], ecx
xor     eax, eax
inc     eax
pop     esi
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
lea     eax, [esi+7bch]
lea     ecx, [esi+3b7h]
mov     [eax+4], ecx
lea     ecx, [esi+4b8h]
mov     [eax+8], ecx
lea     ecx, [esi+5b9h]
mov     [eax+0ch], ecx
mov     ecx, [esi+38h]
mov     [eax+10h], ecx
mov     cx, [esi+70h]
push    edi
mov     [eax+1eh], cx
mov     cx, [esi+72h]
push    eax
xor     ebx, ebx
push    ebx
lea     edi, [esi+7e4h]
mov     [eax+20h], cx
call    dword ptr [esi+24h]
cmp     eax, 0ffffffffh
pop     ecx
pop     ecx
jz      short loc_1006c5b
cmp     [esi+28h], ebx
jz      short loc_1006c69
mov     [edi], ebx
mov     eax, [esi+38h]
mov     [edi+4], eax
mov     eax, [esi+4ch]
mov     [edi+8], eax
mov     ax, [esi+0a0h]
mov     [edi+0ch], ax
mov     ax, [esi+70h]
mov     [edi+0eh], ax
movzx   eax, word ptr [esi+72h]
push    edi
mov     [edi+10h], eax
call    dword ptr [esi+28h]
cmp     eax, 0ffffffffh
pop     ecx
jnz     short loc_1006c69
push    ebx
push    0bh
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_1006c6c
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    dword ptr [esi+0a8h]
lea     edi, [esi+7e4h]
push    dword ptr [esi+48h]
push    dword ptr [esi+84h]
call    dword ptr [esi+10h]
add     esp, 0ch
cmp     [esi+0a8h], eax
jnz     loc_1006d9f
mov     eax, [esi+48h]
movzx   eax, word ptr [eax+4]
mov     ebx, [ebp+arg_4]
add     eax, ebx
cmp     eax, [esi+98h]
ja      loc_1006d9f
mov     eax, [esi+48h]
movzx   eax, word ptr [eax+4]
push    eax
mov     eax, [esi+3ch]
add     eax, ebx
push    eax
push    dword ptr [esi+84h]
call    dword ptr [esi+10h]
mov     ecx, [esi+48h]
movzx   ecx, word ptr [ecx+4]
add     esp, 0ch
cmp     ecx, eax
jnz     loc_1006d9f
mov     eax, [esi+48h]
xor     ecx, ecx
cmp     [eax], ecx
jz      short loc_1006d25
movzx   eax, word ptr [eax+4]
push    ecx
push    eax
mov     eax, [esi+3ch]
add     eax, ebx
push    eax
call    _csumcompute@12
push    eax
mov     eax, [esi+0a8h]
sub     eax, 4
push    eax
mov     eax, [esi+48h]
add     eax, 4
push    eax
call    _csumcompute@12
mov     ecx, [esi+48h]
cmp     eax, [ecx]
jnz     short loc_1006d9f
xor     ecx, ecx
mov     eax, [esi+48h]
add     [eax+4], bx
cmp     ebx, ecx
ja      short loc_1006d3d
mov     eax, [esi+48h]
cmp     [eax+6], cx
jz      short loc_1006d3d
xor     edx, edx
jmp     short loc_1006d40
xor     edx, edx
inc     edx
cmp     [esi+28h], ecx
jz      short loc_1006d9a
mov     dword ptr [edi], 2
mov     eax, [esi+38h]
mov     [edi+4], eax
mov     ax, [esi+0a8h]
sub     ax, 8
mov     [edi+0ch], ax
jz      short loc_1006d6d
mov     eax, [esi+48h]
add     eax, 8
mov     [edi+8], eax
jmp     short loc_1006d70
mov     [edi+8], ecx
mov     eax, [esi+3ch]
add     eax, ebx
mov     [edi+10h], eax
mov     eax, [esi+48h]
mov     ax, [eax+4]
push    edi
mov     [edi+14h], ax
mov     [edi+18h], edx
mov     [edi+1ch], bx
call    dword ptr [esi+28h]
cmp     eax, 0ffffffffh
pop     ecx
jnz     short loc_1006d9a
push    0
push    0bh
jmp     short loc_1006da3
xor     eax, eax
inc     eax
jmp     short loc_1006dac
push    0
push    4
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_8]
push    edi
push    1
push    0
push    dword ptr [esi+88h]
call    dword ptr [esi+1ch]
mov     ebx, [ebp+arg_4]
mov     edi, [ebp+arg_0]
push    ebx
push    edi
push    dword ptr [esi+88h]
mov     [ebp+arg_8], eax
call    dword ptr [esi+10h]
add     esp, 18h
test    eax, eax
jle     short loc_1006e28
mov     cl, [edi+ebx-1]
mov     eax, edi
mov     byte ptr [edi+ebx-1], 0
lea     edi, [eax+1]
mov     dl, [eax]
inc     eax
test    dl, dl
jnz     short loc_1006df9
sub     eax, edi
lea     edx, [eax+1]
cmp     edx, ebx
jl      short loc_1006e0d
test    cl, cl
jnz     short loc_1006e28
mov     ecx, [ebp+arg_8]
push    0
lea     eax, [eax+ecx+1]
push    eax
push    dword ptr [esi+88h]
call    dword ptr [esi+1ch]
add     esp, 0ch
cmp     eax, 0ffffffffh
jnz     short loc_1006e37
push    0
push    4
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_1006e3a
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    1
push    0
push    dword ptr [esi+88h]
call    dword ptr [esi+1ch]
mov     ebx, eax
add     esp, 0ch
cmp     ebx, 0ffffffffh
jnz     short loc_1006e76
push    0
push    4
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_1006eee
mov     ax, [esi+0ach]
push    edi
mov     [esi+7deh], ax
mov     ax, [esi+70h]
lea     edi, [esi+7bch]
mov     [esi+7dah], ax
mov     eax, [esi+38h]
push    edi
push    5
mov     [edi], ebx
mov     [esi+7cch], eax
call    dword ptr [esi+24h]
cmp     eax, 0ffffffffh
pop     ecx
pop     ecx
jnz     short loc_1006ebd
push    0
push    0bh
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_1006eed
mov     ax, [esi+7deh]
test    ax, ax
mov     [esi+0ach], ax
jz      short loc_1006eea
mov     edi, [edi]
cmp     edi, ebx
jz      short loc_1006eea
push    0
push    edi
push    dword ptr [esi+88h]
call    dword ptr [esi+1ch]
add     esp, 0ch
cmp     eax, 0ffffffffh
jz      short loc_1006eae
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
xor     eax, eax
mov     al, [esi+0b2h]
push    edi
xor     edi, edi
and     eax, 0fh
sub     eax, edi
jz      short loc_1006f56
dec     eax
jz      short loc_1006f44
dec     eax
jz      short loc_1006f3a
dec     eax
jz      short loc_1006f30
sub     eax, 0ch
jz      short loc_1006f64
push    edi
push    6
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_1006f67
push    dword ptr [esi+34h]
call    _ldidestroydecompression
jmp     short loc_1006f4c
push    dword ptr [esi+34h]
call    _qdidestroydecompression
jmp     short loc_1006f4c
push    dword ptr [esi+34h]
call    _qdidestroydecompression
test    eax, eax
pop     ecx
jz      short loc_1006f56
push    edi
push    7
jmp     short loc_1006f25
push    dword ptr [esi+3ch]
call    dword ptr [esi+4]
push    dword ptr [esi+40h]
call    dword ptr [esi+4]
pop     ecx
pop     ecx
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
movzx   ecx, word ptr [esi+0b2h]
mov     eax, ecx
push    edi
and     eax, 0fh
xor     edi, edi
sub     eax, edi
lea     edx, [esi+94h]
mov     dword ptr [edx], 8000h
jz      loc_100702f
dec     eax
jz      short loc_100700e
dec     eax
jz      short loc_1006fe4
dec     eax
jz      short loc_1006fb8
sub     eax, 0ch
jz      loc_100712b
push    6
jmp     short loc_1007027
push    edi
push    edi
push    edi
push    edi
xor     eax, eax
push    edi
shr     ecx, 8
inc     eax
push    edi
and     ecx, 1fh
shl     eax, cl
lea     ebx, [esi+98h]
push    ebx
push    edi
mov     [ebp+var_10], eax
push    edi
lea     eax, [ebp+var_10]
push    eax
push    edx
call    _ldicreatedecompression
add     esp, 2ch
jmp     short loc_1007021
mov     eax, [esi+20h]
push    edi
push    edi
push    edi
push    edi
push    edi
push    edi
lea     ebx, [esi+98h]
push    ebx
push    edi
mov     [ebp+var_4], eax
push    edi
lea     eax, [ebp+var_8]
shr     ecx, 8
push    eax
and     ecx, 1fh
push    edx
mov     [ebp+var_8], ecx
call    _mdicreatedecompression
jmp     short loc_1006fdf
push    edi
lea     ebx, [esi+98h]
push    ebx
push    edi
push    edi
push    edx
call    _mdicreatedecompression
add     esp, 14h
test    eax, eax
jz      short loc_100703b
push    7
pop     eax
push    edi
push    eax
jmp     loc_1007117
lea     ebx, [esi+98h]
mov     dword ptr [ebx], 8000h
push    dword ptr [ebx]
call    dword ptr [esi+8]
cmp     eax, edi
pop     ecx
mov     [esi+3ch], eax
jnz     short loc_1007050
push    edi
push    5
jmp     loc_1007117
push    dword ptr [esi+94h]
call    dword ptr [esi+8]
cmp     eax, edi
pop     ecx
mov     [esi+40h], eax
jnz     short loc_100706a
push    dword ptr [esi+3ch]
call    dword ptr [esi+4]
pop     ecx
jmp     short loc_1007048
xor     eax, eax
mov     al, [esi+0b2h]
and     eax, 0fh
dec     eax
jz      short loc_10070dd
dec     eax
jz      short loc_10070ae
dec     eax
jnz     loc_100712b
push    dword ptr [esi+1ch]
lea     eax, [esi+34h]
push    dword ptr [esi+18h]
push    dword ptr [esi+14h]
push    dword ptr [esi+10h]
push    dword ptr [esi+0ch]
push    eax
push    ebx
push    dword ptr [esi+4]
lea     eax, [ebp+var_10]
push    dword ptr [esi+8]
push    eax
lea     eax, [esi+94h]
push    eax
call    _ldicreatedecompression
jmp     short loc_10070d8
push    dword ptr [esi+1ch]
lea     eax, [esi+34h]
push    dword ptr [esi+18h]
push    dword ptr [esi+14h]
push    dword ptr [esi+10h]
push    dword ptr [esi+0ch]
push    eax
push    ebx
push    dword ptr [esi+4]
lea     eax, [ebp+var_8]
push    dword ptr [esi+8]
push    eax
lea     eax, [esi+94h]
push    eax
call    _mdicreatedecompression
add     esp, 2ch
jmp     short loc_10070f7
lea     eax, [esi+34h]
push    eax
push    ebx
push    dword ptr [esi+4]
lea     eax, [esi+94h]
push    dword ptr [esi+8]
push    eax
call    _mdicreatedecompression
add     esp, 14h
cmp     eax, edi
jz      short loc_100712b
push    dword ptr [esi+3ch]
xor     ebx, ebx
cmp     eax, 1
setnz   bl
lea     ebx, [ebx+ebx+5]
call    dword ptr [esi+4]
push    dword ptr [esi+40h]
call    dword ptr [esi+4]
pop     ecx
pop     ecx
push    edi
push    ebx
push    dword ptr [esi]
call    _erfsetcodes@12
mov     word ptr [esi+0b2h], 0fh
xor     eax, eax
jmp     short loc_100712e
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebx
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
xor     eax, eax
mov     al, [esi+0b2h]
push    edi
xor     edi, edi
and     eax, 0fh
sub     eax, edi
jz      short loc_1007197
dec     eax
jz      short loc_1007185
dec     eax
jz      short loc_100717b
dec     eax
jz      short loc_1007171
sub     eax, 0ch
jz      short loc_1007197
push    edi
push    6
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_100719a
push    dword ptr [esi+34h]
call    _ldiresetdecompression
jmp     short loc_100718d
push    dword ptr [esi+34h]
call    _qdidestroydecompression
jmp     short loc_100718d
push    dword ptr [esi+34h]
call    _qdidestroydecompression
test    eax, eax
pop     ecx
jz      short loc_1007197
push    edi
push    7
jmp     short loc_1007166
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
xor     eax, eax
mov     al, [edi+0b2h]
xor     ebx, ebx
and     eax, 0fh
sub     eax, ebx
jz      loc_100726b
dec     eax
jz      short loc_1007235
dec     eax
jz      short loc_1007210
dec     eax
jz      short loc_10071d6
push    ebx
push    6
jmp     loc_10072a2
mov     esi, [ebp+arg_4]
movzx   eax, word ptr [esi]
mov     [ebp+arg_0], eax
lea     eax, [ebp+arg_0]
push    eax
mov     eax, [edi+48h]
push    dword ptr [edi+40h]
movzx   eax, word ptr [eax+4]
push    eax
push    dword ptr [edi+3ch]
push    dword ptr [edi+34h]
call    _ldidecompress
add     esp, 14h
test    eax, eax
jnz     loc_100729f
mov     ax, word ptr [ebp+arg_0]
mov     [esi], ax
jmp     loc_100729a
mov     esi, [ebp+arg_4]
movzx   eax, word ptr [esi]
mov     [ebp+arg_0], eax
lea     eax, [ebp+arg_0]
push    eax
mov     eax, [edi+48h]
push    dword ptr [edi+40h]
movzx   eax, word ptr [eax+4]
push    eax
push    dword ptr [edi+3ch]
push    dword ptr [edi+34h]
call    _qdidestroydecompression
jmp     short loc_10071f9
mov     eax, [edi+94h]
mov     [ebp+arg_0], eax
lea     eax, [ebp+arg_0]
push    eax
mov     eax, [edi+48h]
push    dword ptr [edi+40h]
movzx   eax, word ptr [eax+4]
push    eax
push    dword ptr [edi+3ch]
push    dword ptr [edi+34h]
call    _qdidestroydecompression
add     esp, 14h
test    eax, eax
jnz     short loc_100729f
mov     eax, [ebp+arg_4]
mov     cx, word ptr [ebp+arg_0]
mov     [eax], cx
jmp     short loc_100729a
mov     eax, [edi+48h]
mov     ax, [eax+4]
movzx   ecx, ax
cmp     ecx, [edi+94h]
ja      short loc_100729f
mov     ecx, [ebp+arg_4]
mov     [ecx], ax
mov     esi, [edi+3ch]
mov     edi, [edi+40h]
movzx   ecx, ax
mov     eax, ecx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
xor     eax, eax
inc     eax
jmp     short loc_10072ab
push    ebx
push    7
push    dword ptr [edi]
call    _erfsetcodes@12
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    10h
lea     eax, [esi+74h]
push    eax
push    dword ptr [esi+88h]
call    dword ptr [esi+10h]
add     esp, 0ch
cmp     eax, 10h
jnz     short loc_10072f2
push    esi
push    100h
lea     eax, [esi+0b4h]
push    eax
call    _fdireadpsz@12
test    eax, eax
jz      short loc_10072f2
xor     eax, eax
inc     eax
jmp     short loc_10072ff
push    0
push    4
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     di, [ebp+arg_0]
cmp     di, [esi+0b2h]
jnz     short loc_1007325
xor     eax, eax
inc     eax
jmp     short loc_1007350
push    esi
call    _mdidestroydecompressionglobal@4
test    eax, eax
jnz     short loc_100733d
push    eax
push    7
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_1007350
push    esi
mov     [esi+0b2h], di
call    _mdicreatedecompressionglobal@4
neg     eax
sbb     eax, eax
neg     eax
pop     edi
pop     esi
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+hfdi]
push    esi
push    0fh
call    _setdecompressiontype@8
mov     eax, [esi+4ch]
test    eax, eax
jz      short loc_1007378
push    eax
call    dword ptr [esi+4]
pop     ecx
mov     eax, [esi+44h]
test    eax, eax
jz      short loc_1007384
push    eax
call    dword ptr [esi+4]
pop     ecx
mov     eax, [esi+48h]
test    eax, eax
jz      short loc_1007390
push    eax
call    dword ptr [esi+4]
pop     ecx
mov     eax, [esi+88h]
cmp     eax, 0ffffffffh
jz      short loc_10073a0
push    eax
call    dword ptr [esi+18h]
pop     ecx
mov     eax, [esi+84h]
cmp     eax, 0ffffffffh
jz      short loc_10073b0
push    eax
call    dword ptr [esi+18h]
pop     ecx
push    esi
call    dword ptr [esi+4]
pop     ecx
xor     eax, eax
inc     eax
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 24h
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
lea     eax, [ebx+5b9h]
push    eax
mov     esi, 101h
push    esi
lea     edi, [ebx+6bah]
push    edi
call    _stringcopyworkera@12
push    [ebp+arg_4]
push    esi
push    edi
call    _stringcatworkera@12
mov     edi, 180h
push    edi
mov     esi, 8000h
lea     eax, [ebx+6bah]
push    esi
push    eax
call    dword ptr [ebx+0ch]
add     esp, 0ch
cmp     eax, 0ffffffffh
mov     [ebx+88h], eax
jz      loc_1007652
push    edi
lea     eax, [ebx+6bah]
push    esi
push    eax
call    dword ptr [ebx+0ch]
add     esp, 0ch
cmp     eax, 0ffffffffh
mov     [ebx+84h], eax
jz      loc_1007652
push    24h
lea     eax, [ebp+var_24]
push    eax
push    dword ptr [ebx+88h]
call    dword ptr [ebx+10h]
add     esp, 0ch
cmp     eax, 24h
jz      short loc_1007455
push    0
jmp     loc_1007523
cmp     [ebp+var_24], 4643534dh
jnz     short loc_100744e
cmp     [ebp+var_c], 103h
jz      short loc_1007472
movzx   eax, [ebp+var_c]
push    eax
push    3
jmp     loc_1007656
mov     ax, [ebp+arg_c]
cmp     ax, 0ffffh
jz      short loc_1007495
mov     cx, [ebp+arg_8]
cmp     cx, [ebp+var_4]
jnz     short loc_100748c
cmp     ax, [ebp+var_2]
jz      short loc_1007495
push    0
push    0ah
jmp     loc_1007656
push    9
lea     edi, [ebx+50h]
pop     ecx
lea     esi, [ebp+var_24]
rep movsd
xor     edi, edi
test    byte ptr [ebx+6eh], 4
mov     word ptr [ebp+arg_0], di
mov     byte ptr [ebp+arg_0+2], 0
mov     byte ptr [ebp+arg_0+3], 0
jz      short loc_10074cb
push    4
lea     eax, [ebp+arg_0]
push    eax
push    dword ptr [ebx+88h]
call    dword ptr [ebx+10h]
add     esp, 0ch
cmp     eax, 4
jnz     short loc_1007522
movzx   eax, word ptr [ebp+arg_0]
cmp     [ebx+0a0h], eax
jz      short loc_1007500
mov     eax, [ebx+4ch]
cmp     eax, edi
jz      short loc_10074e6
push    eax
call    dword ptr [ebx+4]
pop     ecx
mov     [ebx+4ch], edi
movzx   eax, word ptr [ebp+arg_0]
cmp     eax, edi
mov     [ebx+0a0h], eax
jbe     short loc_1007500
push    eax
call    dword ptr [ebx+8]
cmp     eax, edi
pop     ecx
mov     [ebx+4ch], eax
jz      short loc_1007570
mov     eax, [ebx+0a0h]
cmp     eax, edi
jbe     short loc_100752a
push    eax
push    dword ptr [ebx+4ch]
push    dword ptr [ebx+88h]
call    dword ptr [ebx+10h]
add     esp, 0ch
cmp     [ebx+0a0h], eax
jz      short loc_100752a
push    edi
push    2
jmp     loc_1007656
movzx   eax, byte ptr [ebp+arg_0+2]
add     eax, 8
cmp     [ebx+44h], edi
jnz     short loc_100754a
push    eax
mov     [ebx+0a4h], eax
call    dword ptr [ebx+8]
cmp     eax, edi
pop     ecx
mov     [ebx+44h], eax
jnz     short loc_1007552
jmp     short loc_1007570
cmp     eax, [ebx+0a4h]
jnz     short loc_1007580
movzx   eax, byte ptr [ebp+arg_0+3]
add     eax, 8
cmp     [ebx+48h], edi
jnz     short loc_1007578
push    eax
mov     [ebx+0a8h], eax
call    dword ptr [ebx+8]
cmp     eax, edi
pop     ecx
mov     [ebx+48h], eax
jnz     short loc_1007588
push    edi
push    5
jmp     loc_1007656
cmp     eax, [ebx+0a8h]
jz      short loc_1007588
push    edi
push    9
jmp     loc_1007656
test    byte ptr [ebx+6eh], 1
mov     esi, 100h
jz      short loc_10075c0
push    ebx
push    esi
lea     eax, [ebx+1b5h]
push    eax
call    _fdireadpsz@12
test    eax, eax
jz      loc_100765d
push    ebx
push    esi
lea     eax, [ebx+2b6h]
push    eax
call    _fdireadpsz@12
test    eax, eax
jnz     short loc_10075ce
jmp     loc_100765d
mov     byte ptr [ebx+1b5h], 0
mov     byte ptr [ebx+2b6h], 0
test    byte ptr [ebx+6eh], 2
jz      short loc_10075fa
push    ebx
push    esi
lea     eax, [ebx+3b7h]
push    eax
call    _fdireadpsz@12
test    eax, eax
jz      short loc_100765d
push    ebx
push    esi
lea     eax, [ebx+4b8h]
push    eax
call    _fdireadpsz@12
test    eax, eax
jnz     short loc_1007608
jmp     short loc_100765d
mov     byte ptr [ebx+3b7h], 0
mov     byte ptr [ebx+4b8h], 0
push    1
push    edi
push    dword ptr [ebx+88h]
call    dword ptr [ebx+1ch]
add     esp, 0ch
cmp     eax, 0ffffffffh
mov     [ebx+2ch], eax
push    edi
jz      short loc_1007635
push    dword ptr [ebx+60h]
push    dword ptr [ebx+88h]
call    dword ptr [ebx+1ch]
add     esp, 0ch
cmp     eax, 0ffffffffh
jnz     short loc_1007639
push    edi
push    4
jmp     short loc_1007656
mov     ax, [ebx+6ch]
push    ebx
mov     [ebx+0ach], ax
call    _docabinetinfonotify@4
neg     eax
sbb     eax, eax
neg     eax
jmp     short loc_100765f
push    0
push    1
push    dword ptr [ebx]
call    _erfsetcodes@12
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn    10h
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+0a4h]
imul    eax, ebx
add     eax, [esi+2ch]
push    edi
push    0
push    eax
push    dword ptr [esi+84h]
lea     edi, [esi+7e4h]
mov     [esi+90h], ebx
call    dword ptr [esi+1ch]
add     esp, 0ch
cmp     eax, 0ffffffffh
jz      loc_100774a
push    dword ptr [esi+0a4h]
push    dword ptr [esi+44h]
push    dword ptr [esi+84h]
call    dword ptr [esi+10h]
add     esp, 0ch
cmp     [esi+0a4h], eax
jnz     loc_100774a
mov     eax, [esi+44h]
push    0
push    dword ptr [eax]
push    dword ptr [esi+84h]
call    dword ptr [esi+1ch]
add     esp, 0ch
cmp     eax, 0ffffffffh
jz      short loc_100774a
mov     eax, [esi+44h]
mov     cx, [eax+4]
mov     [esi+0b0h], cx
movzx   eax, word ptr [eax+6]
push    esi
push    eax
call    _setdecompressiontype@8
test    eax, eax
jz      short loc_1007755
cmp     dword ptr [esi+28h], 0
jz      short loc_1007745
mov     dword ptr [edi], 1
mov     eax, [esi+38h]
mov     [edi+4], eax
mov     ax, [esi+0a4h]
sub     ax, 8
mov     [edi+0ch], ax
jz      short loc_100772d
mov     eax, [esi+44h]
add     eax, 8
mov     [edi+8], eax
jmp     short loc_1007731
and     dword ptr [edi+8], 0
push    edi
mov     [edi+0eh], bx
call    dword ptr [esi+28h]
cmp     eax, 0ffffffffh
pop     ecx
jnz     short loc_1007745
push    0
push    0bh
jmp     short loc_100774e
xor     eax, eax
inc     eax
jmp     short loc_1007757
push    0
push    4
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     bx, [esi+72h]
xor     eax, eax
mov     ax, [esi+70h]
push    edi
lea     edi, [esi+7bch]
lea     ecx, [esi+3b7h]
mov     [edi+4], ecx
lea     ecx, [esi+4b8h]
mov     [edi+8], ecx
lea     ecx, [esi+5b9h]
inc     bx
mov     [edi+0ch], ecx
mov     ecx, [esi+38h]
and     dword ptr [edi+24h], 0
mov     [ebp+var_4], eax
mov     [edi+10h], ecx
mov     [edi+1eh], ax
mov     [edi+20h], bx
mov     eax, [esi+84h]
and     [ebp+arg_0], 0
cmp     eax, 0ffffffffh
jz      short loc_10077c9
push    eax
call    dword ptr [esi+18h]
test    eax, eax
pop     ecx
jnz     short loc_1007841
mov     eax, [esi+88h]
cmp     eax, 0ffffffffh
jz      short loc_10077dd
push    eax
call    dword ptr [esi+18h]
test    eax, eax
pop     ecx
jnz     short loc_1007841
or      dword ptr [esi+88h], 0ffffffffh
or      dword ptr [esi+84h], 0ffffffffh
push    edi
push    4
call    dword ptr [esi+24h]
cmp     eax, 0ffffffffh
pop     ecx
pop     ecx
jz      short loc_1007850
push    ebx
push    [ebp+var_4]
lea     eax, [esi+3b7h]
push    eax
push    esi
call    _logincabinet@16
test    eax, eax
jz      short loc_1007819
push    0
push    esi
call    _seekfolder@8
test    eax, eax
jnz     short loc_1007827
mov     eax, [esi]
cmp     dword ptr [eax], 0bh
jz      short loc_100784c
mov     [ebp+arg_0], 1
cmp     [ebp+arg_0], 0
mov     eax, [esi]
mov     eax, [eax]
mov     [edi+24h], eax
jnz     loc_10077b1
inc     word ptr [esi+0aeh]
jmp     short loc_100786e
push    0
push    4
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_1007881
push    0
push    0bh
jmp     short loc_1007845
dec     word ptr [esi+0ach]
dec     word ptr [esi+0aeh]
push    esi
call    _fdireadcffileentry@4
test    eax, eax
jz      short loc_100784c
cmp     word ptr [esi+0aeh], 0
jnz     short loc_1007856
xor     eax, eax
inc     eax
mov     [esi+9ch], eax
pop     edi
pop     esi
pop     ebx
leave
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+48h]
movzx   eax, word ptr [eax+6]
add     [esi+30h], eax
cmp     word ptr [esi+0b0h], 0
jnz     short loc_10078b4
push    esi
call    _switchtonewcab@4
test    eax, eax
jz      short loc_1007924
dec     word ptr [esi+0b0h]
push    0
push    esi
call    _fdireadcfdataentry@8
test    eax, eax
jz      short loc_1007924
mov     eax, [esi+48h]
cmp     word ptr [eax+6], 0
jnz     short loc_10078f4
push    esi
call    _switchtonewcab@4
test    eax, eax
jz      short loc_1007924
mov     eax, [esi+48h]
movzx   eax, word ptr [eax+4]
push    eax
push    esi
call    _fdireadcfdataentry@8
test    eax, eax
jz      short loc_1007924
dec     word ptr [esi+0b0h]
mov     eax, [esi+48h]
movzx   eax, word ptr [eax+6]
mov     [ebp+arg_0], eax
lea     eax, [ebp+arg_0]
push    eax
push    esi
call    _mdidecompressglobal@8
test    eax, eax
jz      short loc_1007924
mov     eax, [esi+48h]
mov     cx, word ptr [ebp+arg_0]
cmp     cx, [eax+6]
jz      short loc_1007928
push    0
push    7
push    dword ptr [esi]
call    _erfsetcodes@12
xor     eax, eax
jmp     short loc_100792b
xor     eax, eax
inc     eax
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_0]
cmp     dword ptr [edi+9ch], 0
jz      short loc_100794c
xor     eax, eax
inc     eax
jmp     short loc_1007995
push    esi
mov     esi, [ebp+arg_4]
mov     eax, 0fffeh
mov     ecx, esi
and     ecx, eax
cmp     ecx, eax
jnz     short loc_1007962
movzx   esi, word ptr [edi+6ah]
dec     esi
cmp     [edi+90h], esi
jz      short loc_1007991
push    edi
call    _mdiresetdecompressionglobal@4
test    eax, eax
jz      short loc_1007989
push    esi
push    edi
call    _seekfolder@8
test    eax, eax
jz      short loc_1007989
push    edi
call    _fdigetdatablock@4
test    eax, eax
jnz     short loc_100798d
xor     eax, eax
jmp     short loc_1007994
and     dword ptr [edi+30h], 0
xor     eax, eax
inc     eax
pop     esi
pop     edi
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+74h]
test    eax, eax
push    edi
jz      loc_1007a5c
mov     ebx, [esi+78h]
cmp     ebx, [esi+30h]
mov     [ebp+arg_0], eax
jnb     short loc_10079ca
mov     dword ptr [esi+90h], 0ffffh
movzx   eax, word ptr [esi+7ch]
push    eax
push    esi
call    _initfolder@8
jmp     short loc_10079dd
push    esi
call    _fdigetdatablock@4
test    eax, eax
jz      short loc_1007a40
mov     eax, [esi+48h]
movzx   eax, word ptr [eax+6]
add     eax, [esi+30h]
cmp     ebx, eax
jnb     short loc_10079d7
cmp     [ebp+arg_0], 0
jz      short loc_1007a5c
mov     ecx, [esi+48h]
movzx   edi, word ptr [ecx+6]
mov     eax, ebx
sub     eax, [esi+30h]
sub     edi, eax
cmp     edi, [ebp+arg_0]
jbe     short loc_1007a0b
mov     edi, [ebp+arg_0]
mov     ecx, [esi+40h]
push    edi
add     ecx, eax
push    ecx
push    dword ptr [esi+8ch]
call    dword ptr [esi+14h]
add     esp, 0ch
cmp     edi, eax
jnz     short loc_1007a35
add     ebx, edi
sub     [ebp+arg_0], edi
jz      short loc_1007a5c
push    esi
call    _fdigetdatablock@4
test    eax, eax
jnz     short loc_10079f5
jmp     short loc_1007a40
push    0
push    8
push    dword ptr [esi]
call    _erfsetcodes@12
lea     edi, [esi+8ch]
mov     eax, [edi]
cmp     eax, 0ffffffffh
jz      short loc_1007a55
push    eax
call    dword ptr [esi+18h]
or      dword ptr [edi], 0ffffffffh
pop     ecx
xor     eax, eax
jmp     loc_1007ae9
lea     eax, [esi+7bch]
lea     ecx, [esi+0b4h]
mov     [eax+4], ecx
mov     ecx, [esi+8ch]
mov     [eax+14h], ecx
mov     cx, [esi+7eh]
mov     [eax+18h], cx
mov     cx, [esi+80h]
mov     [eax+1ah], cx
mov     cx, [esi+82h]
mov     [eax+1ch], cx
mov     ecx, [esi+38h]
mov     [eax+10h], ecx
mov     cx, [esi+7ch]
and     dword ptr [eax], 0
xor     edi, edi
mov     [eax+22h], cx
mov     cx, [eax+1ch]
inc     edi
test    cl, 40h
jz      short loc_1007aba
and     cx, 0ffbfh
mov     [eax], edi
mov     [eax+1ch], cx
push    eax
push    3
call    dword ptr [esi+24h]
or      dword ptr [esi+8ch], 0ffffffffh
cmp     eax, 0ffffffffh
pop     ecx
pop     ecx
jnz     short loc_1007ade
push    0
push    0bh
push    dword ptr [esi]
call    _erfsetcodes@12
jmp     loc_1007a55
test    eax, eax
jnz     short loc_1007ae7
push    eax
push    8
jmp     short loc_1007ad2
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+pvuser]
and     [ebp+var_4], 0
push    ebx
push    esi
mov     esi, [ebp+hfdi]
and     word ptr [esi+0aeh], 0
mov     [esi+38h], eax
mov     eax, [ebp+pfnfdin]
push    edi
push    [ebp+pszcabpath]
mov     [esi+24h], eax
mov     eax, [ebp+pfnfdid]
mov     [esi+28h], eax
mov     ebx, 101h
lea     eax, [esi+5b9h]
push    ebx
push    eax
lea     edi, [esi+7bch]
call    _stringcopyworkera@12
push    0ffffh
push    0
push    [ebp+pszcabinet]
push    esi
call    _logincabinet@16
test    eax, eax
jz      loc_1007ca6
push    [ebp+pszcabpath]
and     dword ptr [esi+9ch], 0
push    ebx
lea     eax, [esi+5b9h]
push    eax
mov     dword ptr [esi+90h], 0ffffh
call    _stringcopyworkera@12
push    esi
call    _fdicallenumerate@4
test    eax, eax
jz      loc_1007ca6
xor     ebx, ebx
jmp     loc_1007c8b
dec     word ptr [esi+0ach]
push    esi
call    _fdireadcffileentry@4
test    eax, eax
jz      loc_1007ca6
lea     eax, [esi+0b4h]
mov     [edi+4], eax
mov     eax, [esi+74h]
mov     [edi], eax
lea     eax, [esi+1b5h]
mov     [edi+8], eax
lea     eax, [esi+2b6h]
mov     [edi+0ch], eax
mov     ax, [esi+7eh]
mov     [edi+18h], ax
mov     ax, [esi+80h]
mov     [edi+1ah], ax
mov     ax, [esi+82h]
mov     [edi+1ch], ax
mov     eax, [esi+38h]
mov     [edi+10h], eax
mov     ax, [esi+7ch]
mov     [edi+22h], ax
mov     ax, [esi+7ch]
and     ax, 0fffdh
cmp     ax, 0fffdh
jnz     short loc_1007c32
cmp     [esi+9ch], ebx
push    edi
jnz     short loc_1007c4b
push    1
call    [ebp+pfnfdin]
cmp     eax, 0ffffffffh
pop     ecx
pop     ecx
jnz     short loc_1007c74
push    ebx
push    0bh
push    dword ptr [esi]
call    _erfsetcodes@12
jmp     loc_1007ca6
mov     ax, [esi+7ch]
and     ax, 0fffeh
cmp     ax, 0fffeh
jnz     short loc_1007c74
inc     word ptr [esi+0aeh]
jmp     short loc_1007c74
cmp     [esi+9ch], ebx
jnz     short loc_1007c6d
mov     ax, [edi+22h]
cmp     ax, [esi+6ah]
jb      short loc_1007c4a
cmp     ax, 0fffch
jb      short loc_1007c74
push    edi
push    2
call    [ebp+pfnfdin]
cmp     eax, 0ffffffffh
pop     ecx
pop     ecx
mov     [esi+8ch], eax
jz      short loc_1007c0c
cmp     eax, ebx
jz      short loc_1007c1b
push    esi
call    _fdigetfile@4
test    eax, eax
jz      short loc_1007ca6
jmp     short loc_1007c74
mov     [esi+0ach], bx
cmp     [esi+0ach], bx
jnz     loc_1007b88
push    esi
call    _fdicallenumerate@4
test    eax, eax
jz      short loc_1007ca6
cmp     [esi+0ach], bx
jnz     loc_1007b88
dec     word ptr [esi+0ach]
mov     [ebp+var_4], 1
mov     eax, [esi+88h]
or      ebx, 0ffffffffh
cmp     eax, ebx
jz      short loc_1007cb8
push    eax
call    dword ptr [esi+18h]
pop     ecx
lea     edi, [esi+84h]
mov     eax, [edi]
cmp     eax, ebx
jz      short loc_1007cc9
push    eax
call    dword ptr [esi+18h]
pop     ecx
mov     eax, [ebp+var_4]
mov     [edi], ebx
pop     edi
mov     [esi+88h], ebx
pop     esi
pop     ebx
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     [eax], ecx
mov     ecx, [ebp+arg_8]
mov     [eax+4], ecx
mov     dword ptr [eax+8], 1
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
mov     eax, esi
shr     eax, 2
test    eax, eax
push    edi
mov     edi, [ebp+arg_8]
jle     short loc_1007d3e
push    ebx
movzx   edx, byte ptr [ecx]
xor     ebx, ebx
inc     ecx
mov     bh, [ecx]
or      edx, ebx
inc     ecx
movzx   ebx, byte ptr [ecx]
shl     ebx, 10h
or      edx, ebx
inc     ecx
movzx   ebx, byte ptr [ecx]
shl     ebx, 18h
or      edx, ebx
inc     ecx
xor     edi, edx
dec     eax
jnz     short loc_1007d1b
pop     ebx
and     esi, 3
xor     eax, eax
dec     esi
jz      short loc_1007d5a
dec     esi
jz      short loc_1007d53
dec     esi
jnz     short loc_1007d5f
movzx   eax, byte ptr [ecx]
shl     eax, 10h
inc     ecx
xor     edx, edx
mov     dh, [ecx]
or      eax, edx
inc     ecx
movzx   ecx, byte ptr [ecx]
or      eax, ecx
xor     eax, edi
pop     edi
pop     esi
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax]
mov     ecx, [ebp+arg_10]
add     eax, 1800h
mov     [ecx], eax
mov     eax, [ebp+arg_14]
test    eax, eax
jnz     short loc_1007d89
pop     ebp
retn
and     dword ptr [eax], 0
push    esi
push    edi
mov     edi, [ebp+arg_8]
push    2ch
call    edi
mov     esi, eax
test    esi, esi
pop     ecx
jz      short loc_1007db3
push    2efch
call    edi
test    eax, eax
pop     ecx
mov     [ebp+arg_10], eax
mov     [esi+28h], eax
jnz     short loc_1007db8
push    esi
call    [ebp+arg_c]
pop     ecx
xor     eax, eax
inc     eax
jmp     short loc_1007e25
mov     eax, [ebp+arg_1c]
mov     edx, [ebp+arg_18]
mov     ecx, [ebp+arg_4]
push    ebx
push    [ebp+arg_28]
mov     ebx, [ebp+arg_c]
push    [ebp+arg_24]
mov     [esi+10h], eax
mov     eax, [ebp+arg_20]
push    [ebp+arg_20]
mov     [esi+14h], eax
mov     eax, [ebp+arg_24]
push    [ebp+arg_1c]
mov     [esi+18h], eax
mov     eax, [ebp+arg_28]
mov     [esi+1ch], eax
mov     eax, [ebp+arg_0]
mov     [esi+4], edi
mov     [esi+8], ebx
mov     [esi+0ch], edx
mov     eax, [eax]
push    edx
push    ebx
mov     [esi+20h], eax
mov     eax, [ecx+4]
push    edi
mov     [esi+24h], eax
mov     dword ptr [esi], 4349444ch
push    dword ptr [ecx]
push    [ebp+arg_10]
call    _lzx_decodeinit@36
test    eax, eax
jnz     short loc_1007e1d
push    esi
call    ebx
xor     eax, eax
pop     ecx
inc     eax
jmp     short loc_1007e24
mov     eax, [ebp+arg_14]
mov     [eax], esi
xor     eax, eax
pop     ebx
pop     edi
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
and     [ebp+var_4], 0
cmp     dword ptr [ecx], 4349444ch
jz      short loc_1007e48
push    2
pop     eax
leave
retn
push    esi
mov     esi, [ebp+arg_10]
mov     eax, [esi]
cmp     eax, [ecx+20h]
jbe     short loc_1007e58
push    3
pop     eax
jmp     short loc_1007e7b
lea     edx, [ebp+var_4]
push    edx
push    eax
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    eax
push    dword ptr [ecx+28h]
call    _lzx_decode@28
mov     ecx, [ebp+var_4]
neg     eax
sbb     eax, eax
mov     [esi], ecx
and     eax, 4
pop     esi
leave
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
cmp     dword ptr [eax], 4349444ch
jz      short loc_1007e98
push    2
pop     eax
pop     ebp
retn
push    dword ptr [eax+28h]
call    _lzx_decodenewgroup@4
xor     eax, eax
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
cmp     dword ptr [esi], 4349444ch
jz      short loc_1007ebf
push    2
pop     eax
jmp     short loc_1007ed8
push    dword ptr [esi+28h]
call    _lzx_decodefree@4
push    dword ptr [esi+28h]
and     dword ptr [esi], 0
call    dword ptr [esi+8]
push    esi
call    dword ptr [esi+8]
pop     ecx
pop     ecx
xor     eax, eax
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
pop     ebp
jmp     _free_decompression_memory@4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    esi
call    _reset_decoder_trees@4
push    esi
call    _decoder_misc_init@4
push    esi
call    _init_decoder_translation@4
and     dword ptr [esi+2ecch], 0
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_c]
push    esi
mov     esi, [ebp+arg_0]
mov     [esi+2b04h], eax
lea     eax, [eax+ecx+4]
mov     [esi+2b08h], eax
mov     eax, [ebp+arg_10]
push    esi
mov     [esi+2b0ch], eax
call    _init_decoder_input@4
push    [ebp+arg_4]
push    esi
call    _decode_data@8
inc     dword ptr [esi+2ecch]
test    eax, eax
jge     short loc_1007f68
mov     eax, [ebp+arg_18]
and     dword ptr [eax], 0
xor     eax, eax
inc     eax
jmp     short loc_1007f75
mov     ecx, [ebp+arg_18]
mov     [ecx], eax
add     [esi+2b10h], eax
xor     eax, eax
pop     esi
pop     ebp
retn    1ch
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_8]
push    esi
mov     esi, [ebp+arg_0]
mov     [esi+2ee0h], eax
mov     eax, [ebp+arg_c]
mov     [esi+2ee4h], eax
mov     eax, [ebp+arg_10]
mov     [esi+2ee8h], eax
mov     eax, [ebp+arg_14]
mov     [esi+2eech], eax
mov     eax, [ebp+arg_18]
mov     [esi+2ef0h], eax
mov     eax, [ebp+arg_1c]
mov     [esi+2ef4h], eax
mov     eax, [ebp+arg_20]
mov     [esi+2ef8h], eax
mov     eax, [ebp+arg_4]
lea     ecx, [eax-1]
test    eax, ecx
mov     [esi+4], eax
mov     [esi+8], ecx
jnz     short loc_1007fe1
push    esi
call    _allocate_decompression_memory@4
test    eax, eax
jnz     short loc_1007fe5
xor     eax, eax
jmp     short loc_1007fee
push    esi
call    _lzx_decodenewgroup@4
xor     eax, eax
inc     eax
pop     esi
pop     ebp
retn    24h
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     edx, [esi+4]
push    edi
push    4
mov     byte ptr [esi+2eb5h], 4
pop     edi
mov     al, [esi+2eb5h]
movzx   ecx, al
mov     cl, ds:_dec_extra_bits[ecx]
xor     ebx, ebx
inc     ebx
shl     ebx, cl
add     edi, ebx
inc     al
cmp     edi, edx
mov     [esi+2eb5h], al
jb      short loc_1008010
add     edx, 105h
push    edx
call    dword ptr [esi+2ee0h]
pop     ecx
xor     ecx, ecx
test    eax, eax
setnz   cl
pop     edi
mov     [esi], eax
pop     esi
pop     ebx
mov     eax, ecx
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi]
test    eax, eax
jz      short loc_1008071
push    eax
call    dword ptr [esi+2ee4h]
and     dword ptr [esi], 0
pop     ecx
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
movzx   eax, byte ptr [edx+2eb5h]
push    esi
lea     eax, ds:100h[eax*8]
mov     esi, 2a0h
cmp     eax, esi
push    edi
jl      short loc_100809e
mov     eax, esi
mov     ecx, eax
push    ebx
mov     ebx, ecx
shr     ecx, 2
xor     eax, eax
lea     edi, [edx+0a18h]
rep stosd
mov     ecx, ebx
and     ecx, 3
rep stosb
movzx   eax, byte ptr [edx+2eb5h]
lea     eax, ds:100h[eax*8]
cmp     eax, esi
pop     ebx
jl      short loc_10080cc
mov     eax, esi
mov     ecx, eax
mov     esi, ecx
shr     ecx, 2
xor     eax, eax
lea     edi, [edx+2b14h]
rep stosd
mov     ecx, esi
and     ecx, 3
rep stosb
push    3eh
pop     ecx
xor     eax, eax
lea     edi, [edx+0cb8h]
rep stosd
stosb
push    3eh
pop     ecx
xor     eax, eax
lea     edi, [edx+2db4h]
rep stosd
stosb
pop     edi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
xor     ecx, ecx
inc     ecx
xor     edx, edx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     [eax+2ec0h], edx
mov     [eax+2b10h], edx
mov     [eax+2edch], ecx
mov     [eax+2ed4h], edx
mov     [eax+2ed8h], edx
mov     [eax+2eb8h], ecx
mov     [eax+2ec4h], edx
mov     [eax+2ebch], edx
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
and     dword ptr [eax+2ec8h], 0
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, ___security_cookie
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_8]
cmp     ebx, 6
mov     [ebp+stackcookie], eax
jg      short loc_100819c
add     [ecx+2ec8h], ebx
jmp     loc_1008225
push    esi
push    edi
lea     eax, [edx+ebx]
lea     esi, [eax-6]
lea     edi, [ebp+var_c]
movsd
mov     [ebp+var_10], eax
movsw
mov     edi, [ebp+var_10]
add     edi, 0fffffffah
mov     eax, 0e8e8e8e8h
stosd
stosw
mov     eax, [ecx+2ec8h]
lea     ebx, [eax+ebx-0ah]
mov     [ebp+var_14], ebx
jmp     short loc_10081d1
inc     edx
inc     dword ptr [ecx+2ec8h]
cmp     byte ptr [edx], 0e8h
jnz     short loc_10081ca
mov     edi, [ecx+2ec8h]
inc     edx
cmp     edi, ebx
jnb     short loc_100820e
mov     eax, [edx]
mov     esi, [ecx+2ec4h]
cmp     eax, esi
jnb     short loc_10081f3
sub     eax, edi
mov     [edx], eax
jmp     short loc_10081ff
mov     ebx, eax
neg     ebx
cmp     ebx, edi
ja      short loc_10081ff
add     esi, eax
mov     [edx], esi
mov     ebx, [ebp+var_14]
add     edx, 4
add     dword ptr [ecx+2ec8h], 5
jmp     short loc_10081d1
mov     edi, [ebp+var_10]
add     ebx, 0ah
add     edi, 0fffffffah
mov     [ecx+2ec8h], ebx
lea     esi, [ebp+var_c]
movsd
movsw
pop     edi
pop     esi
mov     ecx, [ebp+stackcookie]
pop     ebx
call    @__security_check_cookie@4
leave
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
xor     edi, edi
mov     [ebp+var_4], edi
jmp     loc_1008423
cmp     dword ptr [ebx+2edch], 1
jnz     loc_10083fe
lea     eax, [ebx+2eb8h]
cmp     [eax], edi
jz      short loc_1008297
push    1
push    ebx
mov     [eax], edi
call    _getbits@8
test    eax, eax
jz      short loc_1008291
push    10h
push    ebx
call    _getbits@8
push    10h
push    ebx
mov     esi, eax
call    _getbits@8
shl     esi, 10h
or      eax, esi
mov     [ebx+2ec4h], eax
jmp     short loc_1008297
mov     [ebx+2ec4h], edi
cmp     dword ptr [ebx+2ed8h], 3
jnz     short loc_10082c8
test    byte ptr [ebx+2ed0h], 1
jz      short loc_10082bc
lea     eax, [ebx+2b04h]
mov     ecx, [eax]
cmp     ecx, [ebx+2b08h]
jnb     short loc_10082bc
inc     ecx
mov     [eax], ecx
push    ebx
mov     [ebx+2ed8h], edi
call    _initialise_decoder_bitbuf@4
push    3
push    ebx
call    _getbits@8
push    8
push    ebx
mov     [ebx+2ed8h], eax
call    _getbits@8
push    8
push    ebx
mov     esi, eax
call    _getbits@8
push    8
push    ebx
mov     edi, eax
call    _getbits@8
shl     esi, 8
add     esi, edi
shl     esi, 8
add     eax, esi
cmp     dword ptr [ebx+2ed8h], 2
mov     [ebx+2ed0h], eax
mov     [ebx+2ed4h], eax
jnz     short loc_1008317
push    ebx
call    _read_aligned_offset_tree@4
mov     eax, [ebx+2ed8h]
cmp     eax, 1
jz      short loc_100833e
cmp     eax, 2
jz      short loc_100833e
cmp     eax, 3
jnz     short loc_1008336
push    ebx
call    _handle_beginning_of_uncompressed_block@4
test    eax, eax
jnz     short loc_1008389
or      eax, 0ffffffffh
jmp     loc_1008456
movzx   ecx, byte ptr [ebx+2eb5h]
lea     ecx, ds:100h[ecx*8]
mov     eax, 2a0h
cmp     ecx, eax
jl      short loc_1008357
mov     ecx, eax
mov     eax, ecx
shr     ecx, 2
lea     esi, [ebx+0a18h]
lea     edi, [ebx+2b14h]
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
push    3eh
pop     ecx
lea     esi, [ebx+0cb8h]
lea     edi, [ebx+2db4h]
rep movsd
push    ebx
movsb
call    _read_main_and_secondary_trees@4
mov     dword ptr [ebx+2edch], 2
xor     edi, edi
jmp     short loc_10083fe
cmp     [ebp+arg_4], edi
jle     short loc_1008406
mov     esi, [ebx+2ed4h]
cmp     esi, [ebp+arg_4]
jl      short loc_10083aa
mov     esi, [ebp+arg_4]
cmp     esi, edi
jz      short loc_1008336
mov     ecx, [ebx+2ed8h]
cmp     ecx, 2
mov     eax, [ebx+2ec0h]
jnz     short loc_10083c9
push    esi
push    eax
push    ebx
call    _decode_aligned_offset_block@12
jmp     short loc_10083ea
cmp     ecx, 1
jnz     short loc_10083d8
push    esi
push    eax
push    ebx
call    _decode_verbatim_block@12
jmp     short loc_10083ea
cmp     ecx, 3
jnz     short loc_10083e7
push    esi
push    eax
push    ebx
call    _decode_uncompressed_block@12
jmp     short loc_10083ea
or      eax, 0ffffffffh
cmp     eax, edi
jnz     loc_1008336
sub     [ebx+2ed4h], esi
sub     [ebp+arg_4], esi
add     [ebp+var_4], esi
cmp     [ebx+2ed4h], edi
jg      short loc_1008397
cmp     [ebx+2ed4h], edi
jnz     short loc_1008418
mov     dword ptr [ebx+2edch], 1
cmp     [ebp+arg_4], edi
jnz     short loc_1008426
push    ebx
call    _initialise_decoder_bitbuf@4
cmp     [ebp+arg_4], edi
jg      loc_100824d
mov     eax, [ebx+2ec0h]
cmp     eax, edi
jnz     short loc_1008439
mov     eax, [ebx+4]
sub     eax, [ebp+var_4]
mov     ecx, 9800h
add     eax, [ebx]
cmp     [ebp+var_4], ecx
jge     short loc_100844b
mov     ecx, [ebp+var_4]
push    eax
push    ecx
push    ebx
call    _copy_data_to_output@12
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
leave
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
cmp     dword ptr [ecx+2ed8h], 3
jz      short loc_10084b4
mov     eax, [ecx+2b04h]
push    esi
lea     esi, [eax+4]
cmp     esi, [ecx+2b08h]
ja      short loc_10084b3
xor     edx, edx
mov     dh, [eax+1]
push    edi
movzx   edi, byte ptr [eax+3]
mov     dl, [eax]
movzx   eax, byte ptr [eax+2]
mov     byte ptr [ecx+2eb4h], 10h
mov     [ecx+2b04h], esi
shl     edx, 8
or      edx, edi
shl     edx, 8
or      edx, eax
mov     [ecx+2eb0h], edx
pop     edi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
pop     ebp
jmp     _initialise_decoder_bitbuf@4
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
sub     [eax+2eb4h], cl
shl     dword ptr [eax+2eb0h], cl
mov     dl, [eax+2eb4h]
test    dl, dl
push    edi
mov     edi, [eax+2eb0h]
jg      loc_100857f
push    esi
mov     esi, [eax+2b04h]
cmp     esi, [eax+2b08h]
jb      short loc_1008514
mov     dword ptr [eax+2ebch], 1
jmp     short loc_100857e
push    ebx
xor     ebx, ebx
mov     bh, [esi+1]
xor     ecx, ecx
mov     cl, dl
add     dl, 10h
mov     bl, [esi]
add     esi, 2
neg     ecx
mov     [eax+2b04h], esi
mov     [eax+2eb4h], dl
shl     ebx, cl
or      ebx, edi
test    dl, dl
mov     [eax+2eb0h], ebx
jg      short loc_100857d
cmp     esi, [eax+2b08h]
jb      short loc_1008556
mov     dword ptr [eax+2ebch], 1
jmp     short loc_100857d
xor     ebx, ebx
mov     bh, [esi+1]
xor     ecx, ecx
mov     cl, dl
mov     bl, [esi]
add     esi, 2
neg     ecx
mov     [eax+2b04h], esi
shl     ebx, cl
or      [eax+2eb0h], ebx
add     dl, 10h
mov     [eax+2eb4h], dl
pop     ebx
pop     esi
pop     edi
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [eax+2eb0h]
push    20h
pop     ecx
push    [ebp+arg_4]
sub     ecx, [ebp+arg_4]
push    eax
shr     esi, cl
call    _fillbuf@8
mov     eax, esi
pop     esi
pop     ebp
retn    8
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+2b04h]
push    ebx
push    esi
mov     esi, [ebp+arg_4]
push    edi
lea     edi, [esi+eax]
cmp     esi, edi
mov     ebx, esi
mov     [ebp+arg_4], ebx
jge     short loc_10085fc
cmp     edx, [ecx+2b08h]
jnb     short loc_1008613
mov     eax, [ecx+4]
add     eax, 105h
cmp     esi, eax
jge     short loc_1008613
mov     bl, [edx]
mov     eax, [ecx]
mov     [esi+eax], bl
inc     esi
inc     edx
cmp     esi, edi
jl      short loc_10085d8
mov     ebx, [ebp+arg_4]
mov     eax, 101h
cmp     edi, eax
mov     [ecx+2b04h], edx
mov     [ebp+arg_4], eax
jg      short loc_1008626
mov     [ebp+arg_4], edi
jmp     short loc_1008626
or      eax, 0ffffffffh
jmp     short loc_100863a
mov     eax, [ecx]
mov     edx, [ecx+4]
add     edx, eax
mov     al, [eax+ebx]
mov     [edx+ebx], al
inc     ebx
cmp     ebx, [ebp+arg_4]
jb      short loc_1008618
mov     eax, [ecx+8]
and     eax, esi
mov     [ecx+2ec0h], eax
mov     eax, esi
sub     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
add     dword ptr [eax+2b04h], 0fffffffeh
mov     ecx, [eax+2b04h]
add     ecx, 4
cmp     ecx, [eax+2b08h]
jb      short loc_100866a
xor     eax, eax
jmp     short loc_10086a7
push    ebx
push    esi
push    edi
push    3
lea     esi, [eax+0ch]
pop     edi
mov     ecx, [eax+2b04h]
movzx   ebx, byte ptr [ecx+1]
xor     edx, edx
mov     dh, [ecx+3]
mov     dl, [ecx+2]
movzx   ecx, byte ptr [ecx]
shl     edx, 8
or      edx, ebx
shl     edx, 8
or      edx, ecx
mov     [esi], edx
add     dword ptr [eax+2b04h], 4
add     esi, 4
dec     edi
jnz     short loc_1008673
pop     edi
xor     eax, eax
pop     esi
inc     eax
pop     ebx
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     ecx, [edx+2eb0h]
mov     al, [edx+2eb4h]
mov     [ebp+var_8], ecx
mov     ecx, [edx+2b04h]
mov     [ebp+var_c], ecx
mov     ecx, [edx+2b08h]
push    ebx
push    esi
mov     esi, [ebp+arg_4]
mov     [ebp+var_10], ecx
mov     ecx, [ebp+arg_0]
add     esi, ecx
cmp     ecx, esi
push    edi
mov     [ebp+var_1], al
mov     [ebp+var_14], esi
jge     loc_100899c
mov     ecx, [ebp+var_8]
xor     esi, esi
shr     ecx, 16h
inc     esi
cmp     ecx, 400h
jnb     short loc_100870a
movsx   ebx, word ptr [edx+ecx*2+18h]
jmp     short loc_1008712
mov     [edx+2ebch], esi
xor     ebx, ebx
test    ebx, ebx
jge     short loc_100875d
mov     ecx, 200000h
mov     edi, [ebp+var_8]
neg     ebx
test    edi, ecx
jz      short loc_100873a
lea     edi, [ebx+ebx+1]
cmp     edi, 0a80h
jnb     short loc_100874f
movsx   ebx, word ptr [edx+ebx*4+0e3eh]
jmp     short loc_1008757
lea     edi, [ebx+ebx]
cmp     edi, 0a80h
jnb     short loc_100874f
movsx   ebx, word ptr [edx+ebx*4+0e3ch]
jmp     short loc_1008757
xor     ebx, ebx
mov     [edx+2ebch], esi
shr     ecx, 1
test    ebx, ebx
jl      short loc_100871b
cmp     dword ptr [edx+2ebch], 0
jnz     short loc_10087ac
mov     ecx, [ebp+var_10]
cmp     [ebp+var_c], ecx
jnb     loc_10089bd
mov     cl, [ebx+edx+0a18h]
shl     [ebp+var_8], cl
sub     al, cl
test    al, al
mov     [ebp+var_1], al
jg      short loc_10087ac
mov     esi, [ebp+var_c]
xor     ecx, ecx
mov     ch, [esi+1]
add     [ebp+var_c], 2
mov     cl, [esi]
mov     [ebp+arg_4], ecx
xor     ecx, ecx
mov     cl, al
mov     eax, [ebp+arg_4]
neg     ecx
shl     eax, cl
or      [ebp+var_8], eax
mov     al, [ebp+var_1]
add     al, 10h
mov     [ebp+var_1], al
mov     esi, 100h
sub     ebx, esi
jns     short loc_10087ce
mov     ecx, [ebp+arg_0]
mov     esi, [edx]
mov     [ecx+esi], bl
mov     esi, [edx+4]
add     esi, [edx]
mov     [esi+ecx], bl
inc     ecx
mov     [ebp+arg_0], ecx
jmp     loc_1008990
mov     edi, ebx
and     edi, 7
cmp     edi, 7
jnz     loc_10088a6
mov     ecx, [ebp+var_8]
shr     ecx, 18h
cmp     ecx, esi
jnb     short loc_10087f0
movsx   edi, word ptr [edx+ecx*2+818h]
jmp     short loc_10087fc
mov     dword ptr [edx+2ebch], 1
xor     edi, edi
test    edi, edi
jge     short loc_100884b
mov     ecx, 800000h
mov     esi, [ebp+var_8]
neg     edi
test    esi, ecx
jz      short loc_1008824
lea     esi, [edi+edi+1]
cmp     esi, 3e4h
jnb     short loc_1008839
movsx   edi, word ptr [edx+edi*4+233eh]
jmp     short loc_1008845
lea     esi, [edi+edi]
cmp     esi, 3e4h
jnb     short loc_1008839
movsx   edi, word ptr [edx+edi*4+233ch]
jmp     short loc_1008845
xor     edi, edi
mov     dword ptr [edx+2ebch], 1
shr     ecx, 1
test    edi, edi
jl      short loc_1008805
cmp     dword ptr [edx+2ebch], 0
jnz     short loc_1008896
mov     ecx, [ebp+var_10]
cmp     [ebp+var_c], ecx
jnb     loc_10089bd
mov     cl, [edi+edx+0cb8h]
shl     [ebp+var_8], cl
sub     al, cl
test    al, al
mov     [ebp+var_1], al
jg      short loc_1008896
mov     esi, [ebp+var_c]
xor     ecx, ecx
mov     ch, [esi+1]
add     [ebp+var_c], 2
mov     cl, [esi]
mov     [ebp+arg_4], ecx
xor     ecx, ecx
mov     cl, al
mov     eax, [ebp+arg_4]
neg     ecx
shl     eax, cl
or      [ebp+var_8], eax
add     [ebp+var_1], 10h
add     edi, 7
cmp     dword ptr [edx+2ebch], 0
jnz     loc_10089bd
sar     ebx, 3
cmp     bl, 2
jle     loc_1008942
cmp     bl, 3
jle     short loc_1008931
mov     esi, [ebp+var_8]
movsx   ebx, bl
movzx   eax, ds:_dec_extra_bits[ebx]
push    20h
pop     ecx
sub     ecx, eax
shr     esi, cl
mov     ecx, eax
mov     al, ds:_dec_extra_bits[ebx]
sub     [ebp+var_1], al
shl     [ebp+var_8], cl
cmp     [ebp+var_1], 0
jg      short loc_1008928
xor     eax, eax
mov     ecx, eax
mov     eax, [ebp+var_c]
mov     ch, [eax+1]
mov     cl, [eax]
mov     eax, ecx
xor     ecx, ecx
mov     cl, [ebp+var_1]
add     [ebp+var_1], 10h
neg     ecx
shl     eax, cl
or      [ebp+var_8], eax
mov     eax, [ebp+var_c]
inc     eax
inc     eax
cmp     [ebp+var_1], 0
mov     [ebp+var_c], eax
jg      short loc_1008928
xor     ecx, ecx
mov     ch, [eax+1]
add     [ebp+var_c], 2
mov     cl, [eax]
mov     eax, ecx
xor     ecx, ecx
mov     cl, [ebp+var_1]
neg     ecx
shl     eax, cl
or      [ebp+var_8], eax
add     [ebp+var_1], 10h
add     esi, ds:_mp_pos_minus2[ebx*4]
jmp     short loc_1008934
xor     esi, esi
inc     esi
mov     eax, [edx+10h]
mov     [edx+14h], eax
mov     eax, [edx+0ch]
mov     [edx+10h], eax
jmp     short loc_1008954
test    bl, bl
movsx   eax, bl
lea     ecx, [edx+eax*4+0ch]
mov     esi, [ecx]
jz      short loc_1008957
mov     eax, [edx+0ch]
mov     [ecx], eax
mov     [edx+0ch], esi
mov     ecx, [ebp+arg_0]
inc     edi
inc     edi
sub     ecx, esi
mov     eax, [edx]
mov     esi, ecx
and     esi, [edx+8]
mov     bl, [esi+eax]
mov     esi, [ebp+arg_0]
cmp     esi, 101h
mov     [eax+esi], bl
jge     short loc_1008983
mov     eax, [edx]
mov     ebx, [edx+4]
add     ebx, eax
mov     al, [eax+esi]
mov     [ebx+esi], al
inc     esi
inc     ecx
dec     edi
test    edi, edi
mov     [ebp+arg_0], esi
jg      short loc_100895e
mov     al, [ebp+var_1]
mov     ecx, [ebp+arg_0]
cmp     ecx, [ebp+var_14]
jl      loc_10086f2
mov     [edx+2eb4h], al
mov     eax, [ebp+var_8]
mov     [edx+2eb0h], eax
mov     eax, [ebp+var_c]
mov     [edx+2b04h], eax
mov     eax, ecx
pop     edi
pop     esi
pop     ebx
leave
retn    8
or      eax, 0ffffffffh
jmp     short loc_10089b6
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     edx, [ebp+arg_0]
mov     al, [edx+2eb4h]
mov     ecx, [edx+2eb0h]
push    ebx
mov     ebx, [edx+2b04h]
mov     byte ptr [ebp+arg_0+3], al
mov     eax, [edx+2b08h]
push    esi
mov     esi, [ebp+arg_8]
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_4]
add     esi, eax
cmp     eax, esi
push    edi
mov     [ebp+var_4], ecx
mov     [ebp+var_c], ebx
mov     [ebp+var_14], esi
jge     loc_1008ca7
xor     esi, esi
inc     esi
jmp     short loc_1008a14
mov     ecx, [ebp+var_4]
mov     eax, ecx
shr     eax, 16h
cmp     eax, 400h
jnb     short loc_1008a27
movsx   edi, word ptr [edx+eax*2+18h]
jmp     short loc_1008a2f
mov     [edx+2ebch], esi
xor     edi, edi
test    edi, edi
mov     [ebp+var_8], edi
jge     short loc_1008a7f
mov     [ebp+arg_8], 200000h
neg     edi
test    [ebp+arg_8], ecx
jz      short loc_1008a59
lea     eax, [edi+edi+1]
cmp     eax, 0a80h
jnb     short loc_1008a6d
movsx   edi, word ptr [edx+edi*4+0e3eh]
jmp     short loc_1008a75
lea     eax, [edi+edi]
cmp     eax, 0a80h
jnb     short loc_1008a6d
movsx   edi, word ptr [edx+edi*4+0e3ch]
jmp     short loc_1008a75
xor     edi, edi
mov     [edx+2ebch], esi
shr     [ebp+arg_8], 1
test    edi, edi
jl      short loc_1008a3d
mov     [ebp+var_8], edi
cmp     dword ptr [edx+2ebch], 0
jnz     loc_1008cd4
cmp     ebx, [ebp+var_10]
jnb     loc_1008cd4
mov     cl, [edi+edx+0a18h]
mov     al, byte ptr [ebp+arg_0+3]
shl     [ebp+var_4], cl
sub     al, cl
test    al, al
mov     byte ptr [ebp+arg_8+3], cl
mov     byte ptr [ebp+arg_0+3], al
jg      short loc_1008ad3
xor     ecx, ecx
mov     ch, [ebx+1]
mov     cl, [ebx]
mov     [ebp+arg_8], ecx
xor     ecx, ecx
mov     cl, al
mov     eax, [ebp+arg_8]
neg     ecx
shl     eax, cl
or      [ebp+var_4], eax
mov     al, byte ptr [ebp+arg_0+3]
inc     ebx
inc     ebx
add     al, 10h
mov     [ebp+var_c], ebx
mov     byte ptr [ebp+arg_0+3], al
sub     [ebp+var_8], 100h
jns     short loc_1008af3
mov     ecx, [edx]
mov     eax, [ebp+arg_4]
mov     [ebp+arg_8], edx
mov     dl, byte ptr [ebp+var_8]
mov     [eax+ecx], dl
mov     edx, [ebp+arg_8]
inc     eax
jmp     loc_1008c9b
mov     edi, [ebp+var_8]
and     edi, 7
cmp     edi, 7
jnz     loc_1008bc5
mov     ecx, [ebp+var_4]
shr     ecx, 18h
cmp     ecx, 100h
jnb     short loc_1008b1a
movsx   edi, word ptr [edx+ecx*2+818h]
jmp     short loc_1008b22
mov     [edx+2ebch], esi
xor     edi, edi
test    edi, edi
jge     short loc_1008b6f
mov     ecx, 800000h
neg     edi
test    [ebp+var_4], ecx
jz      short loc_1008b48
lea     esi, [edi+edi+1]
cmp     esi, 3e4h
jnb     short loc_1008b5d
movsx   edi, word ptr [edx+edi*4+233eh]
jmp     short loc_1008b69
lea     esi, [edi+edi]
cmp     esi, 3e4h
jnb     short loc_1008b5d
movsx   edi, word ptr [edx+edi*4+233ch]
jmp     short loc_1008b69
xor     edi, edi
mov     dword ptr [edx+2ebch], 1
shr     ecx, 1
test    edi, edi
jl      short loc_1008b2b
cmp     dword ptr [edx+2ebch], 0
jnz     short loc_1008bb5
cmp     ebx, [ebp+var_10]
jnb     loc_1008cd4
mov     cl, [edi+edx+0cb8h]
shl     [ebp+var_4], cl
sub     al, cl
test    al, al
mov     byte ptr [ebp+arg_0+3], al
jg      short loc_1008bb5
xor     ecx, ecx
mov     ch, [ebx+1]
mov     cl, [ebx]
mov     [ebp+arg_8], ecx
xor     ecx, ecx
mov     cl, al
mov     eax, [ebp+arg_8]
neg     ecx
shl     eax, cl
or      [ebp+var_4], eax
inc     ebx
inc     ebx
add     byte ptr [ebp+arg_0+3], 10h
mov     [ebp+var_c], ebx
add     edi, 7
cmp     dword ptr [edx+2ebch], 0
jnz     loc_1008cd4
mov     ecx, [ebp+var_8]
sar     ecx, 3
cmp     cl, 2
jle     loc_1008c65
cmp     cl, 3
jle     short loc_1008c51
mov     esi, [ebp+var_4]
movsx   eax, cl
mov     [ebp+arg_8], eax
movzx   eax, ds:_dec_extra_bits[eax]
push    20h
pop     ecx
sub     ecx, eax
shr     esi, cl
mov     ecx, eax
mov     eax, [ebp+arg_8]
mov     al, ds:_dec_extra_bits[eax]
sub     byte ptr [ebp+arg_0+3], al
shl     [ebp+var_4], cl
cmp     byte ptr [ebp+arg_0+3], 0
jg      short loc_1008c45
xor     eax, eax
mov     ah, [ebx+1]
xor     ecx, ecx
mov     cl, byte ptr [ebp+arg_0+3]
add     byte ptr [ebp+arg_0+3], 10h
mov     al, [ebx]
neg     ecx
shl     eax, cl
or      [ebp+var_4], eax
inc     ebx
inc     ebx
cmp     byte ptr [ebp+arg_0+3], 0
mov     [ebp+var_c], ebx
jg      short loc_1008c45
xor     eax, eax
mov     ah, [ebx+1]
xor     ecx, ecx
mov     cl, byte ptr [ebp+arg_0+3]
mov     al, [ebx]
neg     ecx
shl     eax, cl
or      [ebp+var_4], eax
inc     ebx
inc     ebx
add     byte ptr [ebp+arg_0+3], 10h
mov     [ebp+var_c], ebx
mov     eax, [ebp+arg_8]
add     esi, ds:_mp_pos_minus2[eax*4]
jmp     short loc_1008c57
mov     esi, ds:dword_1001524
mov     eax, [edx+10h]
mov     [edx+14h], eax
mov     eax, [edx+0ch]
mov     [edx+10h], eax
jmp     short loc_1008c77
test    cl, cl
movsx   eax, cl
lea     eax, [edx+eax*4+0ch]
mov     esi, [eax]
jz      short loc_1008c7a
mov     ecx, [edx+0ch]
mov     [eax], ecx
mov     [edx+0ch], esi
mov     eax, [ebp+arg_4]
inc     edi
mov     ecx, eax
sub     ecx, esi
inc     edi
and     ecx, [edx+8]
mov     esi, [edx]
mov     bl, [esi+ecx]
mov     [esi+eax], bl
inc     eax
inc     ecx
dec     edi
test    edi, edi
jg      short loc_1008c86
mov     ebx, [ebp+var_c]
xor     esi, esi
inc     esi
cmp     eax, [ebp+var_14]
mov     [ebp+arg_4], eax
jl      loc_1008a11
mov     cl, byte ptr [ebp+arg_0+3]
mov     [edx+2eb4h], cl
mov     ecx, [ebp+var_4]
mov     [edx+2eb0h], ecx
mov     ecx, [edx+8]
and     ecx, eax
sub     eax, [ebp+var_14]
mov     [edx+2b04h], ebx
mov     [edx+2ec0h], ecx
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
or      eax, 0ffffffffh
jmp     short loc_1008ccd
mov     edi, edi
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
mov     eax, 101h
cmp     esi, eax
jge     short loc_1008d1c
sub     eax, esi
cmp     eax, [ebp+arg_8]
jl      short loc_1008cfd
mov     eax, [ebp+arg_8]
push    eax
push    esi
call    sub_10086b0
sub     esi, eax
add     [ebp+arg_8], esi
cmp     [ebp+arg_8], 0
mov     esi, eax
mov     [edx+2ec0h], eax
jg      short loc_1008d1c
mov     eax, [ebp+arg_8]
jmp     short loc_1008d26
push    [ebp+arg_8]
push    esi
push    edx
call    _fast_decode_verbatim_block@12
pop     esi
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     al, [edx+2eb4h]
mov     ecx, [ebp+arg_0]
mov     [ebp+var_1], al
mov     eax, [edx+2b08h]
mov     [ebp+var_10], eax
mov     eax, [edx]
mov     [ebp+var_14], eax
mov     eax, [ebp+arg_4]
push    ebx
push    esi
mov     esi, [edx+2eb0h]
add     eax, ecx
cmp     ecx, eax
push    edi
mov     edi, [edx+2b04h]
mov     [ebp+var_18], eax
jge     loc_10090c6
mov     eax, esi
shr     eax, 16h
cmp     eax, 400h
jnb     short loc_1008d87
movsx   ebx, word ptr [edx+eax*2+18h]
xor     eax, eax
inc     eax
jmp     short loc_1008d92
xor     eax, eax
inc     eax
mov     [edx+2ebch], eax
xor     ebx, ebx
test    ebx, ebx
jge     short loc_1008dde
mov     [ebp+arg_4], 200000h
neg     ebx
test    [ebp+arg_4], esi
jz      short loc_1008dba
lea     ecx, [ebx+ebx+1]
cmp     ecx, 0a80h
jnb     short loc_1008dcf
movsx   ebx, word ptr [edx+ebx*4+0e3eh]
jmp     short loc_1008dd7
lea     ecx, [ebx+ebx]
cmp     ecx, 0a80h
jnb     short loc_1008dcf
movsx   ebx, word ptr [edx+ebx*4+0e3ch]
jmp     short loc_1008dd7
xor     ebx, ebx
mov     [edx+2ebch], eax
shr     [ebp+arg_4], 1
test    ebx, ebx
jl      short loc_1008d9d
cmp     dword ptr [edx+2ebch], 0
jnz     loc_10090e5
cmp     edi, [ebp+var_10]
jnb     loc_10090e5
mov     cl, [ebx+edx+0a18h]
shl     esi, cl
xor     ecx, ecx
mov     cl, [ebp+var_1]
sub     cl, [ebx+edx+0a18h]
mov     [ebp+var_8], esi
test    cl, cl
mov     [ebp+var_1], cl
jg      short loc_1008e27
xor     eax, eax
mov     ah, [edi+1]
neg     ecx
mov     al, [edi]
shl     eax, cl
or      [ebp+var_8], eax
inc     edi
inc     edi
add     [ebp+var_1], 10h
mov     ecx, 100h
sub     ebx, ecx
jns     short loc_1008e4a
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+var_14]
mov     [eax+ecx], bl
mov     esi, [edx+4]
add     esi, eax
mov     [esi+ecx], bl
inc     ecx
mov     [ebp+arg_0], ecx
jmp     loc_10090ba
mov     eax, ebx
and     eax, 7
cmp     eax, 7
mov     [ebp+var_c], eax
jnz     loc_1008f29
mov     eax, [ebp+var_8]
shr     eax, 18h
cmp     eax, ecx
jnb     short loc_1008e6f
movsx   eax, word ptr [edx+eax*2+818h]
jmp     short loc_1008e7b
mov     dword ptr [edx+2ebch], 1
xor     eax, eax
test    eax, eax
mov     [ebp+var_c], eax
jge     short loc_1008ed0
mov     ecx, 800000h
mov     esi, [ebp+var_8]
neg     eax
test    esi, ecx
jz      short loc_1008ea6
lea     esi, [eax+eax+1]
cmp     esi, 3e4h
jnb     short loc_1008ebb
movsx   eax, word ptr [edx+eax*4+233eh]
jmp     short loc_1008ec7
lea     esi, [eax+eax]
cmp     esi, 3e4h
jnb     short loc_1008ebb
movsx   eax, word ptr [edx+eax*4+233ch]
jmp     short loc_1008ec7
xor     eax, eax
mov     dword ptr [edx+2ebch], 1
shr     ecx, 1
test    eax, eax
jl      short loc_1008e87
mov     [ebp+var_c], eax
cmp     dword ptr [edx+2ebch], 0
jnz     short loc_1008f16
cmp     edi, [ebp+var_10]
jnb     loc_10090e5
mov     cl, [eax+edx+0cb8h]
shl     [ebp+var_8], cl
xor     ecx, ecx
mov     cl, [ebp+var_1]
sub     cl, [eax+edx+0cb8h]
test    cl, cl
mov     [ebp+var_1], cl
jg      short loc_1008f13
xor     eax, eax
mov     ah, [edi+1]
neg     ecx
mov     al, [edi]
shl     eax, cl
or      [ebp+var_8], eax
inc     edi
inc     edi
add     [ebp+var_1], 10h
mov     eax, [ebp+var_c]
add     eax, 7
cmp     dword ptr [edx+2ebch], 0
mov     [ebp+var_c], eax
jnz     loc_10090e5
sar     ebx, 3
cmp     bl, 2
jle     loc_100906b
movsx   ebx, bl
mov     cl, ds:_dec_extra_bits[ebx]
cmp     cl, 3
mov     byte ptr [ebp+arg_4+3], cl
jb      loc_1009009
movzx   esi, cl
lea     ecx, [esi-3]
test    ecx, ecx
jz      loc_1009005
push    23h
pop     ecx
sub     ecx, esi
mov     esi, [ebp+var_8]
shr     esi, cl
cmp     edi, [ebp+var_10]
jnb     loc_10090e5
xor     ecx, ecx
mov     cl, ds:_dec_extra_bits[ebx]
mov     al, 3
sub     al, ds:_dec_extra_bits[ebx]
add     [ebp+var_1], al
sub     ecx, 3
shl     [ebp+var_8], cl
cmp     [ebp+var_1], 0
jg      short loc_1008fa3
xor     eax, eax
mov     ah, [edi+1]
xor     ecx, ecx
mov     cl, [ebp+var_1]
mov     al, [edi]
neg     ecx
shl     eax, cl
or      [ebp+var_8], eax
inc     edi
inc     edi
add     [ebp+var_1], 10h
mov     eax, [ebp+var_c]
mov     ecx, ds:_mp_pos_minus2[ebx*4]
lea     esi, [ecx+esi*8]
mov     ecx, [ebp+var_8]
shr     ecx, 19h
cmp     edi, [ebp+var_10]
movsx   ecx, byte ptr [ecx+edx+0db4h]
mov     [ebp+arg_4], ecx
jnb     loc_10090e5
mov     cl, [ecx+edx+0e34h]
shl     [ebp+var_8], cl
mov     ecx, [ebp+arg_4]
mov     cl, [ecx+edx+0e34h]
sub     [ebp+var_1], cl
cmp     [ebp+var_1], 0
jg      short loc_1009000
xor     ebx, ebx
mov     bh, [edi+1]
xor     ecx, ecx
mov     cl, [ebp+var_1]
mov     bl, [edi]
neg     ecx
shl     ebx, cl
or      [ebp+var_8], ebx
inc     edi
inc     edi
add     [ebp+var_1], 10h
add     esi, [ebp+arg_4]
jmp     short loc_100905d
xor     esi, esi
jmp     short loc_1008fa6
test    cl, cl
jz      short loc_100905a
mov     esi, [ebp+var_8]
push    20h
pop     ecx
sub     ecx, [ebp+arg_4+3]
shr     esi, cl
cmp     edi, [ebp+var_10]
jnb     loc_10090e5
mov     cl, ds:_dec_extra_bits[ebx]
shl     [ebp+var_8], cl
mov     al, cl
sub     [ebp+var_1], al
cmp     [ebp+var_1], 0
jg      short loc_100904e
xor     eax, eax
mov     ah, [edi+1]
xor     ecx, ecx
mov     cl, [ebp+var_1]
mov     al, [edi]
neg     ecx
shl     eax, cl
or      [ebp+var_8], eax
inc     edi
inc     edi
add     [ebp+var_1], 10h
add     esi, ds:_mp_pos_minus2[ebx*4]
mov     eax, [ebp+var_c]
jmp     short loc_100905d
xor     esi, esi
inc     esi
mov     ecx, [edx+10h]
mov     [edx+14h], ecx
mov     ecx, [edx+0ch]
mov     [edx+10h], ecx
jmp     short loc_100907d
test    bl, bl
movsx   ecx, bl
lea     ecx, [edx+ecx*4+0ch]
mov     esi, [ecx]
jz      short loc_1009080
mov     ebx, [edx+0ch]
mov     [ecx], ebx
mov     [edx+0ch], esi
mov     ebx, [ebp+arg_0]
inc     eax
mov     ecx, ebx
inc     eax
sub     ecx, esi
mov     [ebp+arg_0], ecx
mov     ecx, [ebp+arg_0]
and     ecx, [edx+8]
cmp     ebx, 101h
mov     esi, [ebp+var_14]
mov     cl, [ecx+esi]
mov     [esi+ebx], cl
jge     short loc_10090ac
mov     esi, [edx+4]
add     esi, [ebp+var_14]
mov     [esi+ebx], cl
inc     ebx
inc     [ebp+arg_0]
dec     eax
test    eax, eax
jg      short loc_100908c
mov     [ebp+arg_0], ebx
mov     ecx, ebx
cmp     ecx, [ebp+var_18]
mov     esi, [ebp+var_8]
jl      loc_1008d71
mov     al, [ebp+var_1]
mov     [edx+2eb4h], al
mov     eax, [ebp+arg_0]
mov     [edx+2eb0h], esi
mov     [edx+2b04h], edi
pop     edi
pop     esi
pop     ebx
leave
retn    8
or      eax, 0ffffffffh
jmp     short loc_10090de
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     edx, [ebp+arg_0]
mov     al, [edx+2eb4h]
mov     ecx, [ebp+arg_8]
mov     byte ptr [ebp+arg_0+3], al
mov     eax, [edx+2eb0h]
mov     [ebp+var_4], eax
mov     eax, [edx+2b08h]
mov     [ebp+var_8], eax
mov     eax, [edx]
push    ebx
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_4]
add     ecx, eax
cmp     eax, ecx
push    esi
push    edi
mov     edi, [edx+2b04h]
mov     [ebp+var_14], ecx
jge     loc_1009457
mov     eax, [ebp+var_4]
xor     ecx, ecx
shr     eax, 16h
inc     ecx
cmp     eax, 400h
jnb     short loc_100914d
movsx   eax, word ptr [edx+eax*2+18h]
jmp     short loc_1009155
mov     [edx+2ebch], ecx
xor     eax, eax
test    eax, eax
jge     short loc_10091a0
mov     esi, 200000h
mov     ebx, [ebp+var_4]
neg     eax
test    ebx, esi
jz      short loc_100917d
lea     ebx, [eax+eax+1]
cmp     ebx, 0a80h
jnb     short loc_1009192
movsx   eax, word ptr [edx+eax*4+0e3eh]
jmp     short loc_100919a
lea     ebx, [eax+eax]
cmp     ebx, 0a80h
jnb     short loc_1009192
movsx   eax, word ptr [edx+eax*4+0e3ch]
jmp     short loc_100919a
xor     eax, eax
mov     [edx+2ebch], ecx
shr     esi, 1
test    eax, eax
jl      short loc_100915e
cmp     dword ptr [edx+2ebch], 0
jnz     short loc_10091de
cmp     edi, [ebp+var_8]
jnb     loc_1009484
mov     cl, [eax+edx+0a18h]
sub     byte ptr [ebp+arg_0+3], cl
shl     [ebp+var_4], cl
cmp     byte ptr [ebp+arg_0+3], 0
jg      short loc_10091de
xor     ebx, ebx
mov     bh, [edi+1]
xor     ecx, ecx
mov     cl, byte ptr [ebp+arg_0+3]
mov     bl, [edi]
neg     ecx
shl     ebx, cl
or      [ebp+var_4], ebx
inc     edi
inc     edi
add     byte ptr [ebp+arg_0+3], 10h
mov     esi, 100h
sub     eax, esi
mov     [ebp+arg_8], eax
jns     short loc_10091fb
mov     esi, [ebp+arg_4]
mov     ecx, [ebp+var_10]
inc     [ebp+arg_4]
mov     [ecx+esi], al
jmp     loc_100944b
mov     ebx, eax
and     ebx, 7
cmp     ebx, 7
mov     [ebp+var_c], ebx
jnz     loc_10092cd
mov     ecx, [ebp+var_4]
shr     ecx, 18h
cmp     ecx, esi
jnb     short loc_1009220
movsx   ebx, word ptr [edx+ecx*2+818h]
jmp     short loc_100922c
mov     dword ptr [edx+2ebch], 1
xor     ebx, ebx
test    ebx, ebx
jge     short loc_100927b
mov     ecx, 800000h
mov     esi, [ebp+var_4]
neg     ebx
test    esi, ecx
jz      short loc_1009254
lea     esi, [ebx+ebx+1]
cmp     esi, 3e4h
jnb     short loc_1009269
movsx   ebx, word ptr [edx+ebx*4+233eh]
jmp     short loc_1009275
lea     esi, [ebx+ebx]
cmp     esi, 3e4h
jnb     short loc_1009269
movsx   ebx, word ptr [edx+ebx*4+233ch]
jmp     short loc_1009275
xor     ebx, ebx
mov     dword ptr [edx+2ebch], 1
shr     ecx, 1
test    ebx, ebx
jl      short loc_1009235
mov     esi, [edx+2ebch]
test    esi, esi
jnz     short loc_10092bf
cmp     edi, [ebp+var_8]
jnb     loc_1009484
mov     cl, [ebx+edx+0cb8h]
shl     [ebp+var_4], cl
mov     al, cl
sub     byte ptr [ebp+arg_0+3], al
cmp     byte ptr [ebp+arg_0+3], 0
jg      short loc_10092bc
xor     eax, eax
mov     ah, [edi+1]
xor     ecx, ecx
mov     cl, byte ptr [ebp+arg_0+3]
mov     al, [edi]
neg     ecx
shl     eax, cl
or      [ebp+var_4], eax
inc     edi
inc     edi
add     byte ptr [ebp+arg_0+3], 10h
mov     eax, [ebp+arg_8]
add     ebx, 7
test    esi, esi
mov     [ebp+var_c], ebx
jnz     loc_1009484
sar     eax, 3
cmp     al, 2
jle     loc_100940d
movsx   eax, al
mov     cl, ds:_dec_extra_bits[eax]
cmp     cl, 3
mov     byte ptr [ebp+arg_8+3], cl
jb      loc_10093a9
movzx   esi, cl
lea     ecx, [esi-3]
test    ecx, ecx
jz      loc_10093a5
push    23h
pop     ecx
sub     ecx, esi
mov     esi, [ebp+var_4]
shr     esi, cl
cmp     edi, [ebp+var_8]
jnb     loc_1009484
xor     ecx, ecx
mov     cl, ds:_dec_extra_bits[eax]
sub     ecx, 3
shl     [ebp+var_4], cl
mov     cl, 3
sub     cl, ds:_dec_extra_bits[eax]
add     byte ptr [ebp+arg_0+3], cl
cmp     byte ptr [ebp+arg_0+3], 0
jg      short loc_1009346
xor     ebx, ebx
mov     bh, [edi+1]
xor     ecx, ecx
mov     cl, byte ptr [ebp+arg_0+3]
mov     bl, [edi]
neg     ecx
shl     ebx, cl
or      [ebp+var_4], ebx
inc     edi
inc     edi
add     byte ptr [ebp+arg_0+3], 10h
mov     ebx, [ebp+var_c]
mov     eax, ds:_mp_pos_minus2[eax*4]
lea     esi, [eax+esi*8]
mov     eax, [ebp+var_4]
shr     eax, 19h
cmp     edi, [ebp+var_8]
movsx   eax, byte ptr [eax+edx+0db4h]
mov     [ebp+arg_8], eax
jnb     loc_1009484
mov     cl, [eax+edx+0e34h]
mov     al, [eax+edx+0e34h]
sub     byte ptr [ebp+arg_0+3], al
shl     [ebp+var_4], cl
cmp     byte ptr [ebp+arg_0+3], 0
jg      short loc_10093a0
xor     eax, eax
mov     ah, [edi+1]
xor     ecx, ecx
mov     cl, byte ptr [ebp+arg_0+3]
mov     al, [edi]
neg     ecx
shl     eax, cl
or      [ebp+var_4], eax
inc     edi
inc     edi
add     byte ptr [ebp+arg_0+3], 10h
add     esi, [ebp+arg_8]
jmp     short loc_10093ff
xor     esi, esi
jmp     short loc_1009349
test    cl, cl
jz      short loc_10093f8
mov     esi, [ebp+var_4]
push    20h
pop     ecx
sub     ecx, [ebp+arg_8+3]
shr     esi, cl
cmp     edi, [ebp+var_8]
jnb     loc_1009484
mov     cl, ds:_dec_extra_bits[eax]
sub     byte ptr [ebp+arg_0+3], cl
shl     [ebp+var_4], cl
cmp     byte ptr [ebp+arg_0+3], 0
jg      short loc_10093ec
xor     ebx, ebx
mov     bh, [edi+1]
xor     ecx, ecx
mov     cl, byte ptr [ebp+arg_0+3]
mov     bl, [edi]
neg     ecx
shl     ebx, cl
or      [ebp+var_4], ebx
inc     edi
inc     edi
add     byte ptr [ebp+arg_0+3], 10h
add     esi, ds:_mp_pos_minus2[eax*4]
mov     ebx, [ebp+var_c]
jmp     short loc_10093ff
mov     esi, ds:_mp_pos_minus2[eax*4]
mov     eax, [edx+10h]
mov     [edx+14h], eax
mov     eax, [edx+0ch]
mov     [edx+10h], eax
jmp     short loc_100941f
test    al, al
movsx   ecx, al
lea     ecx, [edx+ecx*4+0ch]
mov     esi, [ecx]
jz      short loc_1009422
mov     eax, [edx+0ch]
mov     [ecx], eax
mov     [edx+0ch], esi
mov     ecx, [ebp+arg_4]
sub     ecx, esi
and     ecx, [edx+8]
mov     esi, [ebp+var_10]
inc     ebx
inc     ebx
add     ecx, esi
mov     [ebp+arg_8], ecx
mov     al, [ecx]
mov     ecx, [ebp+arg_4]
inc     [ebp+arg_4]
mov     [esi+ecx], al
mov     ecx, [ebp+arg_8]
inc     ecx
dec     ebx
test    ebx, ebx
mov     [ebp+arg_8], ecx
jg      short loc_1009434
mov     eax, [ebp+arg_4]
cmp     eax, [ebp+var_14]
jl      loc_1009136
mov     cl, byte ptr [ebp+arg_0+3]
mov     [edx+2eb4h], cl
mov     ecx, [ebp+var_4]
mov     [edx+2eb0h], ecx
mov     ecx, [edx+8]
and     ecx, eax
sub     eax, [ebp+var_14]
mov     [edx+2b04h], edi
mov     [edx+2ec0h], ecx
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
or      eax, 0ffffffffh
jmp     short loc_100947d
mov     edi, edi
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
mov     eax, 101h
cmp     esi, eax
jge     short loc_10094df
sub     eax, esi
cmp     eax, [ebp+arg_8]
jl      short loc_10094ad
mov     eax, [ebp+arg_8]
push    eax
push    esi
call    sub_1008d30
cmp     eax, 0ffffffffh
jnz     short loc_10094c7
mov     dword ptr [edx+2ebch], 1
or      eax, eax
jmp     short loc_10094e9
sub     esi, eax
add     [ebp+arg_8], esi
cmp     [ebp+arg_8], 0
mov     esi, eax
mov     [edx+2ec0h], eax
jg      short loc_10094df
mov     eax, [ebp+arg_8]
jmp     short loc_10094e9
push    [ebp+arg_8]
push    esi
push    edx
call    _fast_decode_aligned_offset_block@12
pop     esi
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    edi
mov     edi, [eax+2b0ch]
test    edi, edi
jz      short loc_100953e
mov     ecx, [ebp+arg_4]
mov     edx, ecx
push    esi
mov     esi, [ebp+arg_8]
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
cmp     dword ptr [eax+2ec4h], 0
pop     esi
jz      short loc_100953e
cmp     dword ptr [eax+2ecch], 8000h
jnb     short loc_100953e
push    edx
push    dword ptr [eax+2b0ch]
push    eax
call    _decoder_translate_e8@12
pop     edi
pop     ebp
retn    0ch
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 2e8h
mov     eax, ___security_cookie
push    esi
mov     [ebp+stackcookie], eax
mov     eax, [ebp+arg_8]
push    edi
mov     edi, ecx
mov     [ebp+var_2e8], edi
mov     [ebp+var_2e0], eax
xor     esi, esi
push    4
push    edi
call    _getbits@8
mov     [ebp+esi+var_1c], al
inc     esi
cmp     esi, 14h
jl      short loc_1009570
cmp     dword ptr [edi+2ebch], 0
jz      short loc_1009592
xor     eax, eax
jmp     loc_100984b
push    ebx
lea     eax, [ebp+var_d8]
push    eax
lea     eax, [ebp+var_2d8]
push    eax
push    8
lea     eax, [ebp+var_1c]
push    eax
push    14h
push    edi
call    _make_table@24
xor     esi, esi
cmp     [ebp+arg_0], esi
jle     loc_100983f
mov     eax, [edi+2eb0h]
xor     ecx, ecx
shr     eax, 18h
inc     ecx
cmp     eax, 100h
jnb     short loc_10095d7
mov     bx, [ebp+eax*2+var_2d8]
jmp     short loc_10095df
mov     [edi+2ebch], ecx
xor     ebx, ebx
test    bx, bx
jge     short loc_100962a
mov     edx, 800000h
neg     ebx
test    [edi+2eb0h], edx
movsx   eax, bx
jz      short loc_1009609
lea     ebx, [eax+eax+1]
cmp     ebx, 5eh
jnb     short loc_100961b
mov     bx, [ebp+eax*4+var_d6]
jmp     short loc_1009623
lea     ebx, [eax+eax]
cmp     ebx, 5eh
jnb     short loc_100961b
mov     bx, [ebp+eax*4+var_d8]
jmp     short loc_1009623
xor     ebx, ebx
mov     [edi+2ebch], ecx
shr     edx, 1
test    bx, bx
jl      short loc_10095e9
cmp     bx, 18h
jnb     short loc_1009656
test    bx, bx
jl      short loc_1009656
cmp     dword ptr [edi+2ebch], 0
jnz     loc_1009859
movsx   eax, bx
movzx   eax, [ebp+eax+var_1c]
push    eax
push    edi
call    _fillbuf@8
xor     ecx, ecx
inc     ecx
jmp     short loc_100965c
mov     [edi+2ebch], ecx
cmp     dword ptr [edi+2ebch], 0
jnz     loc_1009859
cmp     bx, 11h
jnz     short loc_10096b7
push    4
push    edi
call    _getbits@8
movzx   edx, al
add     edx, 4
lea     eax, [edx+esi]
cmp     eax, [ebp+arg_0]
jl      short loc_100968a
mov     edx, [ebp+arg_0]
sub     edx, esi
test    edx, edx
jle     short loc_10096b1
mov     eax, [ebp+var_2e0]
mov     ecx, edx
mov     ebx, ecx
shr     ecx, 2
lea     edi, [eax+esi]
xor     eax, eax
rep stosd
mov     ecx, ebx
and     ecx, 3
rep stosb
mov     edi, [ebp+var_2e8]
add     esi, edx
dec     esi
jmp     loc_1009835
cmp     bx, 12h
jnz     short loc_10096cd
push    5
push    edi
call    _getbits@8
movzx   edx, al
add     edx, 14h
jmp     short loc_100967d
cmp     bx, 13h
jnz     loc_1009817
push    ecx
push    edi
call    _getbits@8
movzx   ebx, al
add     ebx, 4
lea     eax, [ebx+esi]
cmp     eax, [ebp+arg_0]
jl      short loc_10096f1
mov     ebx, [ebp+arg_0]
sub     ebx, esi
mov     eax, [edi+2eb0h]
xor     ecx, ecx
shr     eax, 18h
inc     ecx
cmp     eax, 100h
jnb     short loc_1009715
mov     ax, [ebp+eax*2+var_2d8]
mov     word ptr [ebp+var_2dc], ax
jmp     short loc_1009722
and     [ebp+var_2dc], 0
mov     [edi+2ebch], ecx
cmp     word ptr [ebp+var_2dc], 0
jge     short loc_100979a
mov     [ebp+var_2e4], 800000h
mov     eax, [ebp+var_2e4]
neg     [ebp+var_2dc]
test    [edi+2eb0h], eax
movsx   eax, word ptr [ebp+var_2dc]
jz      short loc_1009764
lea     edx, [eax+eax+1]
cmp     edx, 5eh
jnb     short loc_100977d
mov     ax, [ebp+eax*4+var_d6]
jmp     short loc_1009774
lea     edx, [eax+eax]
cmp     edx, 5eh
jnb     short loc_100977d
mov     ax, [ebp+eax*4+var_d8]
mov     word ptr [ebp+var_2dc], ax
jmp     short loc_100978a
and     [ebp+var_2dc], 0
mov     [edi+2ebch], ecx
shr     [ebp+var_2e4], 1
cmp     word ptr [ebp+var_2dc], 0
jl      short loc_1009736
cmp     word ptr [ebp+var_2dc], 18h
jnb     short loc_10097d0
cmp     word ptr [ebp+var_2dc], 0
jl      short loc_10097d0
cmp     dword ptr [edi+2ebch], 0
jnz     loc_1009859
movsx   eax, word ptr [ebp+var_2dc]
movzx   eax, [ebp+eax+var_1c]
push    eax
push    edi
call    _fillbuf@8
jmp     short loc_10097d6
mov     [edi+2ebch], ecx
cmp     dword ptr [edi+2ebch], 0
jnz     short loc_1009859
mov     eax, [ebp+arg_4]
movzx   eax, byte ptr [esi+eax]
movsx   ecx, word ptr [ebp+var_2dc]
sub     eax, ecx
add     eax, 11h
push    11h
cdq
pop     ecx
idiv    ecx
jmp     short loc_100980e
dec     ebx
cmp     esi, [ebp+arg_0]
jge     loc_10096b1
mov     eax, [ebp+var_2e0]
mov     [eax+esi], dl
inc     esi
test    ebx, ebx
jg      short loc_10097fa
jmp     loc_10096b1
mov     eax, [ebp+arg_4]
movzx   eax, byte ptr [esi+eax]
movsx   ecx, bx
sub     eax, ecx
add     eax, 11h
cdq
push    11h
pop     ecx
idiv    ecx
mov     eax, [ebp+var_2e0]
mov     [eax+esi], dl
inc     esi
cmp     esi, [ebp+arg_0]
jl      loc_10095ba
xor     eax, eax
cmp     [edi+2ebch], eax
setz    al
pop     ebx
mov     ecx, [ebp+stackcookie]
pop     edi
pop     esi
call    @__security_check_cookie@4
leave
retn    0ch
xor     eax, eax
jmp     short loc_100984a
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
lea     edi, [esi+0a18h]
push    edi
lea     eax, [esi+2b14h]
push    eax
push    100h
mov     ecx, esi
call    sub_1009548
test    eax, eax
jnz     short loc_1009891
xor     eax, eax
jmp     loc_1009926
lea     eax, [esi+0b18h]
push    eax
lea     eax, [esi+2c14h]
push    eax
movzx   eax, byte ptr [esi+2eb5h]
shl     eax, 3
push    eax
mov     ecx, esi
call    sub_1009548
test    eax, eax
jz      short loc_100988a
movzx   ecx, byte ptr [esi+2eb5h]
lea     ecx, ds:100h[ecx*8]
mov     eax, 2a0h
cmp     ecx, eax
jge     short loc_10098ce
mov     eax, ecx
lea     ecx, [esi+0e3ch]
push    ecx
lea     ecx, [esi+18h]
push    ecx
push    0ah
push    edi
push    eax
push    esi
call    _make_table@24
test    eax, eax
jz      short loc_100988a
push    ebx
lea     ebx, [esi+0cb8h]
push    ebx
lea     eax, [esi+2db4h]
push    eax
mov     edi, 0f9h
push    edi
mov     ecx, esi
call    sub_1009548
test    eax, eax
jz      short loc_1009925
lea     eax, [esi+233ch]
push    eax
lea     eax, [esi+818h]
push    eax
push    8
push    ebx
push    edi
push    esi
call    _make_table@24
neg     eax
sbb     eax, eax
neg     eax
pop     ebx
pop     edi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
xor     ebx, ebx
lea     edi, [esi+0e34h]
push    3
push    esi
call    _getbits@8
mov     [edi+ebx], al
inc     ebx
cmp     ebx, 8
jl      short loc_1009944
cmp     dword ptr [esi+2ebch], 0
jz      short loc_1009962
xor     eax, eax
jmp     short loc_1009976
lea     eax, [esi+0db4h]
push    eax
push    edi
push    esi
call    _make_table_8bit@12
neg     eax
sbb     eax, eax
neg     eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0a0h
push    esi
push    edi
push    10h
xor     eax, eax
pop     ecx
lea     edi, [ebp+var_9c]
rep stosd
xor     esi, esi
xor     ecx, ecx
cmp     [ebp+arg_4], esi
jbe     short loc_10099bb
mov     eax, [ebp+arg_8]
movzx   eax, byte ptr [ecx+eax]
lea     eax, [ebp+eax*4+var_a0]
inc     dword ptr [eax]
inc     ecx
cmp     ecx, [ebp+arg_4]
jb      short loc_10099a5
xor     edx, edx
inc     edx
mov     [ebp+var_58], esi
mov     eax, edx
mov     edi, [ebp+eax*4+var_a0]
push    10h
pop     ecx
sub     ecx, eax
shl     edi, cl
add     edi, [ebp+eax*4+var_5c]
inc     eax
cmp     eax, 10h
mov     [ebp+eax*4+var_5c], edi
jbe     short loc_10099c3
cmp     [ebp+var_18], 10000h
jz      short loc_1009a19
cmp     [ebp+var_18], esi
jnz     short loc_1009a12
mov     cl, [ebp+arg_c]
mov     edi, [ebp+arg_10]
mov     eax, edx
shl     eax, cl
shl     eax, 1
mov     ecx, eax
mov     esi, ecx
shr     ecx, 2
xor     eax, eax
rep stosd
mov     ecx, esi
and     ecx, 3
rep stosb
mov     eax, edx
jmp     loc_1009b84
xor     eax, eax
jmp     loc_1009b84
movzx   esi, [ebp+arg_c]
push    ebx
mov     bl, 10h
sub     bl, [ebp+arg_c]
cmp     esi, edx
mov     eax, edx
mov     [ebp+var_10], esi
jb      short loc_1009a51
lea     edi, [esi-1]
movzx   ecx, bl
lea     edx, [ebp+eax*4+var_5c]
shr     dword ptr [edx], cl
xor     edx, edx
inc     edx
mov     ecx, edi
shl     edx, cl
inc     eax
dec     edi
cmp     eax, esi
mov     [ebp+eax*4+var_a4], edx
jbe     short loc_1009a2f
cmp     eax, 10h
ja      short loc_1009a69
push    10h
pop     ecx
sub     ecx, eax
xor     edx, edx
inc     edx
shl     edx, cl
inc     eax
dec     ecx
cmp     eax, 10h
mov     [ebp+eax*4+var_a4], edx
jbe     short loc_1009a56
mov     edx, [ebp+esi*4+var_58]
movzx   ecx, bl
mov     ebx, [ebp+arg_10]
shr     edx, cl
mov     [ebp+var_14], ecx
cmp     edx, 10000h
jz      short loc_1009aa0
xor     eax, eax
inc     eax
mov     ecx, esi
shl     eax, cl
lea     edi, [ebx+edx*2]
sub     eax, edx
shl     eax, 1
mov     ecx, eax
mov     edx, ecx
shr     ecx, 2
xor     eax, eax
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     ecx, [ebp+arg_4]
xor     eax, eax
test    ecx, ecx
mov     [ebp+var_8], ecx
mov     [ebp+var_c], eax
jle     loc_1009b80
mov     ecx, [ebp+arg_8]
mov     al, [eax+ecx]
test    al, al
jz      loc_1009b70
movzx   ecx, al
shl     ecx, 2
mov     edx, [ebp+ecx+var_a0]
lea     esi, [ebp+ecx+var_5c]
mov     edi, [esi]
add     edx, edi
cmp     al, [ebp+arg_c]
ja      short loc_1009b16
mov     ecx, [ebp+var_10]
xor     eax, eax
inc     eax
shl     eax, cl
cmp     edx, eax
ja      loc_1009b8a
cmp     edi, edx
jnb     short loc_1009b12
mov     eax, [ebp+var_c]
lea     ebx, [ebx+edi*2]
mov     ecx, edx
sub     ecx, edi
mov     edi, ebx
mov     bx, ax
shl     ebx, 10h
mov     bx, ax
shr     ecx, 1
mov     eax, ebx
mov     ebx, [ebp+arg_10]
rep stosd
adc     ecx, ecx
rep stosw
mov     [esi], edx
jmp     short loc_1009b70
mov     ecx, [ebp+var_14]
sub     al, [ebp+arg_c]
mov     [esi], edx
mov     edx, edi
shr     edx, cl
mov     ecx, [ebp+var_10]
mov     [ebp+var_1], al
shl     edi, cl
lea     edx, [ebx+edx*2]
mov     ecx, [ebp+arg_14]
xor     esi, esi
cmp     [edx], si
jnz     short loc_1009b51
mov     eax, [ebp+var_8]
shl     eax, 2
mov     [eax+ecx+2], si
mov     [eax+ecx], si
mov     eax, [ebp+var_8]
neg     eax
inc     [ebp+var_8]
mov     [edx], ax
movsx   eax, word ptr [edx]
shl     eax, 2
sub     ecx, eax
cmp     di, si
jge     short loc_1009b60
inc     ecx
inc     ecx
shl     edi, 1
dec     [ebp+var_1]
mov     edx, ecx
jnz     short loc_1009b2d
mov     ax, word ptr [ebp+var_c]
mov     [edx], ax
mov     eax, [ebp+var_c]
inc     eax
cmp     eax, [ebp+arg_4]
mov     [ebp+var_c], eax
jl      loc_1009ab3
xor     eax, eax
inc     eax
pop     ebx
pop     edi
pop     esi
leave
retn    18h
xor     eax, eax
jmp     short loc_1009b83
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 5ch
mov     eax, ___security_cookie
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_8]
push    edi
push    8
pop     edx
mov     [ebp+stackcookie], eax
mov     ecx, edx
xor     eax, eax
lea     edi, [ebp+var_4a]
rep stosd
mov     [ebp+var_54], ebx
mov     [ebp+var_58], esi
mov     ecx, ebx
movzx   eax, byte ptr [ecx]
lea     eax, [ebp+eax*2+var_4c]
inc     word ptr [eax]
inc     ecx
dec     edx
jnz     short loc_1009bc0
push    0fh
pop     ecx
xor     eax, eax
push    10h
mov     [ebp+var_26], ax
pop     edx
mov     di, [ebp+eax+var_4a]
shl     di, cl
add     di, [ebp+eax+var_26]
dec     ecx
mov     [ebp+eax+var_24], di
inc     eax
inc     eax
dec     edx
jnz     short loc_1009bda
xor     eax, eax
cmp     [ebp+var_6], ax
jnz     loc_1009cbb
push    6
pop     ecx
push    7
pop     edx
shr     [ebp+eax+var_26], 9
xor     edi, edi
inc     edi
shl     edi, cl
dec     ecx
inc     eax
inc     eax
dec     edx
mov     [ebp+eax+var_4c], di
jnz     short loc_1009c04
push    8
pop     ecx
push    9
lea     eax, [ebp+var_3c]
pop     edx
xor     edi, edi
inc     edi
shl     edi, cl
dec     ecx
mov     [eax], di
inc     eax
inc     eax
dec     edx
jnz     short loc_1009c23
push    20h
xor     eax, eax
pop     ecx
mov     edi, esi
rep stosd
mov     [ebp+var_4d], al
movzx   eax, [ebp+var_4d]
mov     al, [eax+ebx]
test    al, al
jz      short loc_1009ca0
movzx   eax, al
shl     eax, 1
lea     ecx, [ebp+eax+var_28]
mov     dx, [ecx]
xor     esi, esi
mov     si, [ebp+eax+var_4c]
add     si, dx
cmp     si, 80h
mov     [ebp+var_5c], ecx
ja      short loc_1009cbb
cmp     dx, si
jnb     short loc_1009c9d
mov     eax, esi
sub     eax, edx
movzx   ecx, ax
mov     al, [ebp+var_4d]
mov     bl, al
mov     bh, bl
movzx   edi, dx
add     edi, [ebp+var_58]
mov     edx, ecx
shr     ecx, 2
mov     eax, ebx
shl     eax, 10h
mov     ax, bx
mov     ebx, [ebp+var_54]
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     ecx, [ebp+var_5c]
mov     [ecx], si
inc     [ebp+var_4d]
cmp     [ebp+var_4d], 8
jb      short loc_1009c3d
xor     eax, eax
inc     eax
mov     ecx, [ebp+stackcookie]
pop     edi
pop     esi
pop     ebx
call    @__security_check_cookie@4
leave
retn    0ch
xor     eax, eax
jmp     short loc_1009cac