push    ebx
sub     esp, 18h
mov     [esp+1ch+size], 80h
call    malloc
mov     ebx, eax
mov     [esp+1ch+size], eax
call    sub_6321a210
test    ebx, ebx
mov     ds:dword_6322fd6c, eax
mov     ds:dword_6322fd68, eax
mov     eax, 1
jz      short loc_63201035
mov     dword ptr [ebx], 0
xor     al, al
add     esp, 18h
pop     ebx
retn
push    esi
push    ebx
sub     esp, 14h
mov     edx, [esp+1ch+arg_4]
test    edx, edx
jnz     short loc_632010c6
mov     edx, ds:dword_6322f000
xor     eax, eax
test    edx, edx
jle     short loc_632010be
sub     edx, 1
mov     ebx, ds:sleep
mov     ds:dword_6322f000, edx
jmp     short loc_6320107c
mov     [esp+1ch+dwmilliseconds], 3e8h
call    ebx
sub     esp, 4
mov     [esp+1ch+var_14], 0
mov     [esp+1ch+last], 1
mov     [esp+1ch+dwmilliseconds], offset dword_6322fd70
call    sub_6321be20
sub     esp, 0ch
test    eax, eax
jnz     short loc_63201070
mov     eax, ds:dword_6322fd74
cmp     eax, 2
jz      loc_63201183
mov     [esp+1ch+dwmilliseconds], 1fh
call    _amsg_exit
mov     eax, 1
add     esp, 14h
pop     ebx
pop     esi
retn    0ch
cmp     edx, 1
mov     eax, 1
jnz     short loc_632010be
mov     eax, large fs:18h
mov     esi, ds:sleep
mov     ebx, [eax+4]
jmp     short loc_632010f5
cmp     eax, ebx
jz      loc_632011f7
mov     [esp+1ch+dwmilliseconds], 3e8h
call    esi
sub     esp, 4
mov     [esp+1ch+var_14], 0
mov     [esp+1ch+last], ebx
mov     [esp+1ch+dwmilliseconds], offset dword_6322fd70
call    sub_6321be20
sub     esp, 0ch
test    eax, eax
jnz     short loc_632010e1
xor     ebx, ebx
mov     eax, ds:dword_6322fd74
cmp     eax, 1
jz      loc_63201224
mov     eax, ds:dword_6322fd74
test    eax, eax
jz      loc_63201201
mov     eax, ds:dword_6322fd74
cmp     eax, 1
jz      loc_63201235
test    ebx, ebx
jnz     short loc_6320114a
lock xchg ebx, ds:dword_6322fd70
mov     eax, ds:off_6322ddc0
test    eax, eax
jz      short loc_6320116f
mov     edx, [esp+1ch+arg_8]
mov     [esp+1ch+last], 2
mov     [esp+1ch+var_14], edx
mov     edx, [esp+1ch+arg_0]
mov     [esp+1ch+dwmilliseconds], edx
call    eax
sub     esp, 0ch
add     ds:dword_6322f000, 1
add     esp, 14h
mov     eax, 1
pop     ebx
pop     esi
retn    0ch
mov     eax, ds:dword_6322fd6c
mov     [esp+1ch+dwmilliseconds], eax
call    sub_6321a200
test    eax, eax
mov     ebx, eax
jz      short loc_632011d7
mov     eax, ds:dword_6322fd68
mov     [esp+1ch+dwmilliseconds], eax
call    sub_6321a200
mov     esi, eax
sub     esi, 4
cmp     ebx, esi
ja      short loc_632011bb
mov     eax, [esi]
test    eax, eax
jz      short loc_632011a5
sub     esi, 4
call    eax
cmp     ebx, esi
jbe     short loc_632011ac
mov     [esp+1ch+dwmilliseconds], ebx
call    free
mov     ds:dword_6322fd68, 0
mov     ds:dword_6322fd6c, 0
mov     ds:dword_6322fd74, 0
xor     eax, eax
lock xchg eax, ds:dword_6322fd70
add     esp, 14h
mov     eax, 1
pop     ebx
pop     esi
retn    0ch
mov     ebx, 1
jmp     loc_63201116
mov     [esp+1ch+last], offset last
mov     [esp+1ch+dwmilliseconds], offset first
mov     ds:dword_6322fd74, 1
call    _initterm
jmp     loc_63201131
mov     [esp+1ch+dwmilliseconds], 1fh
call    _amsg_exit
jmp     loc_63201131
mov     [esp+1ch+last], offset dword_63232004
mov     [esp+1ch+dwmilliseconds], offset dword_63232000
call    _initterm
mov     ds:dword_6322fd74, 2
jmp     loc_6320113f
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, dword_63229a88
test    eax, eax
jz      short locret_632014ab
mov     dword ptr [esp], offset modulename
call    ds:getmodulehandlea
mov     edx, 0
sub     esp, 4
test    eax, eax
jz      short loc_6320149e
mov     dword ptr [esp+4], offset procname
mov     [esp], eax
call    ds:getprocaddress
sub     esp, 8
mov     edx, eax
test    edx, edx
jz      short locret_632014ab
mov     dword ptr [esp], offset dword_63229a88
call    edx
leave
retn
push    ebp
mov     ebp, esp
pop     ebp
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 34h
mov     edi, [esp+44h+arg_0]
mov     ecx, [esp+44h+arg_4]
mov     edx, [esp+44h+arg_8]
mov     eax, [edi+34h]
add     eax, 1
mov     [esp+44h+var_1c], eax
mov     eax, [edi+30h]
cmp     [esp+44h+var_1c], 1
lea     ebx, [eax+1]
mov     [esp+44h+var_40], ebx
jle     loc_632016ff
lea     ebp, [edx+1]
lea     esi, [edx+2]
shl     eax, 2
mov     [esp+44h+var_28], ebp
mov     [esp+44h+var_24], esi
mov     [esp+44h+var_20], edx
mov     [esp+44h+var_18], 1
mov     [esp+44h+var_14], eax
mov     [esp+44h+var_3c], edi
mov     esi, [esp+44h+var_3c]
mov     ebx, [esp+44h+var_18]
mov     edi, [ecx+5ch]
mov     ebp, [ecx+74h]
imul    ebx, [esi+90h]
mov     edx, ebx
mov     eax, ebx
mov     ebx, [esi+88h]
sar     edx, 1fh
mov     esi, [ecx+18h]
idiv    [esp+44h+var_1c]
xor     edx, edx
add     ebx, eax
mov     eax, [ecx+6ch]
imul    eax, ebx
div     esi
xor     edx, edx
imul    eax, [ecx+64h]
add     eax, edi
mov     edi, [ecx+8ch]
mov     [esp+44h+var_2c], eax
mov     eax, [ecx+84h]
imul    eax, ebx
div     esi
xor     edx, edx
imul    eax, [ecx+7ch]
add     eax, ebp
mov     [esp+44h+var_34], eax
mov     eax, [ecx+9ch]
imul    eax, ebx
div     esi
mov     edx, [esp+44h+var_3c]
imul    eax, [ecx+94h]
add     eax, edi
cmp     byte ptr [edx+2ch], 0
mov     [esp+44h+var_30], eax
jz      short loc_632015a7
mov     ebp, [esp+44h+var_34]
mov     edi, [esp+44h+var_30]
mov     [esp+44h+var_30], ebp
mov     [esp+44h+var_34], edi
cmp     [esp+44h+var_40], 1
jle     loc_632016e8
mov     ebx, 1
mov     edi, [esp+44h+var_3c]
mov     esi, ebx
mov     ebp, [esp+44h+var_34]
imul    esi, [edi+8ch]
mov     edx, esi
mov     eax, esi
mov     esi, [edi+84h]
sar     edx, 1fh
mov     edi, [esp+44h+var_30]
idiv    [esp+44h+var_40]
xor     edx, edx
add     esi, eax
mov     eax, [ecx+88h]
imul    eax, esi
div     dword ptr [ecx+14h]
xor     edx, edx
movzx   ebp, byte ptr [ebp+eax+0]
mov     eax, [ecx+0a0h]
add     ebp, 0ffffff80h
imul    eax, esi
div     dword ptr [ecx+14h]
imul    edx, ebp, 0fffffe6fh
imul    ebp, 812h
add     ebp, 200h
movzx   edi, byte ptr [edi+eax]
add     edi, 0ffffff80h
imul    eax, edi, 0fffffcc0h
lea     eax, [edx+eax+200h]
xor     edx, edx
mov     [esp+44h+var_38], eax
mov     eax, [ecx+70h]
imul    eax, esi
div     dword ptr [ecx+14h]
mov     edx, [esp+44h+var_2c]
movzx   esi, byte ptr [edx+eax]
imul    eax, edi, 662h
imul    edx, esi, 4a8h
mov     esi, 0ffffffffh
sub     edx, 4a80h
lea     eax, [edx+eax+200h]
sar     eax, 0ah
cmp     eax, 0ffh
jg      short loc_63201672
test    eax, eax
mov     esi, 0
cmovns  esi, eax
mov     edi, [esp+44h+var_24]
mov     eax, esi
mov     esi, 0ffffffffh
mov     [edi+ebx*4-4], al
mov     eax, [esp+44h+var_38]
add     eax, edx
sar     eax, 0ah
cmp     eax, 0ffh
jg      short loc_6320169b
test    eax, eax
mov     esi, 0
cmovns  esi, eax
mov     eax, esi
mov     esi, [esp+44h+var_28]
add     ebp, edx
sar     ebp, 0ah
mov     edx, 0ffffffffh
cmp     ebp, 0ffh
mov     [esi+ebx*4-4], al
jg      short loc_632016c1
test    ebp, ebp
mov     edx, 0
cmovns  edx, ebp
mov     esi, [esp+44h+var_20]
mov     [esi+ebx*4-4], dl
add     ebx, 1
cmp     [esp+44h+var_40], ebx
jg      loc_632015b7
mov     ebx, [esp+44h+var_14]
add     [esp+44h+var_24], ebx
add     [esp+44h+var_28], ebx
add     esi, ebx
mov     [esp+44h+var_20], esi
add     [esp+44h+var_18], 1
mov     ebp, [esp+44h+var_18]
cmp     [esp+44h+var_1c], ebp
jg      loc_63201517
mov     edi, [esp+44h+var_3c]
cmp     byte ptr [edi+25h], 0
jz      loc_63201a39
cmp     [esp+44h+var_1c], 1
jle     loc_63201a39
mov     [esp+44h+var_44], 1
nop
lea     esi, [esi+0]
mov     eax, [esp+44h+var_44]
imul    eax, [edi+90h]
mov     ebp, [ecx+64h]
mov     edx, eax
sar     edx, 1fh
idiv    [esp+44h+var_1c]
xor     edx, edx
add     eax, [edi+88h]
imul    eax, [ecx+6ch]
div     dword ptr [ecx+18h]
imul    ebp, eax
add     ebp, [ecx+5ch]
cmp     [esp+44h+var_40], 1
jle     loc_63201a28
mov     eax, [edi+8ch]
mov     ebx, 2
mov     esi, [esp+44h+var_40]
mov     edx, eax
sar     edx, 1fh
sub     esi, 2
idiv    [esp+44h+var_40]
xor     edx, edx
and     esi, 7
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
cmp     [esp+44h+var_40], 2
mov     byte ptr [ebp+eax+0], 0ffh
jle     loc_63201a28
test    esi, esi
jz      loc_632018f2
cmp     esi, 1
jz      loc_632018bf
cmp     esi, 2
jz      loc_63201896
cmp     esi, 3
jz      loc_6320186d
cmp     esi, 4
jz      loc_63201844
cmp     esi, 5
jz      short loc_6320181b
cmp     esi, 6
jz      short loc_632017f2
imul    eax, [edi+8ch], 2
mov     ebx, 3
mov     edx, eax
sar     edx, 1fh
idiv    [esp+44h+var_40]
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
mov     eax, [edi+8ch]
imul    eax, ebx
add     ebx, 1
mov     edx, eax
sar     edx, 1fh
idiv    [esp+44h+var_40]
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
mov     eax, [edi+8ch]
imul    eax, ebx
add     ebx, 1
mov     edx, eax
sar     edx, 1fh
idiv    [esp+44h+var_40]
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
mov     eax, [edi+8ch]
imul    eax, ebx
add     ebx, 1
mov     edx, eax
sar     edx, 1fh
idiv    [esp+44h+var_40]
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
mov     eax, [edi+8ch]
imul    eax, ebx
add     ebx, 1
mov     edx, eax
sar     edx, 1fh
idiv    [esp+44h+var_40]
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
mov     eax, [edi+8ch]
imul    eax, ebx
add     ebx, 1
mov     edx, eax
sar     edx, 1fh
idiv    [esp+44h+var_40]
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
mov     eax, [edi+8ch]
imul    eax, ebx
add     ebx, 1
mov     edx, eax
sar     edx, 1fh
idiv    [esp+44h+var_40]
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
cmp     [esp+44h+var_40], ebx
mov     byte ptr [ebp+eax+0], 0ffh
jle     loc_63201a28
mov     esi, [esp+44h+var_40]
mov     eax, [edi+8ch]
imul    eax, ebx
mov     edx, eax
sar     edx, 1fh
idiv    esi
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
lea     eax, [ebx+1]
imul    eax, [edi+8ch]
mov     edx, eax
sar     edx, 1fh
idiv    esi
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
lea     eax, [ebx+2]
imul    eax, [edi+8ch]
mov     edx, eax
sar     edx, 1fh
idiv    esi
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
lea     eax, [ebx+3]
imul    eax, [edi+8ch]
mov     edx, eax
sar     edx, 1fh
idiv    esi
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
lea     eax, [ebx+4]
imul    eax, [edi+8ch]
mov     edx, eax
sar     edx, 1fh
idiv    esi
add     eax, [edi+84h]
imul    eax, [ecx+70h]
xor     edx, edx
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
lea     eax, [ebx+5]
imul    eax, [edi+8ch]
mov     edx, eax
sar     edx, 1fh
idiv    esi
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
lea     eax, [ebx+6]
imul    eax, [edi+8ch]
mov     edx, eax
sar     edx, 1fh
idiv    esi
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
mov     byte ptr [ebp+eax+0], 0ffh
lea     eax, [ebx+7]
add     ebx, 8
imul    eax, [edi+8ch]
mov     edx, eax
sar     edx, 1fh
idiv    esi
xor     edx, edx
add     eax, [edi+84h]
imul    eax, [ecx+70h]
div     dword ptr [ecx+14h]
cmp     esi, ebx
mov     byte ptr [ebp+eax+0], 0ffh
jg      loc_632018f6
add     [esp+44h+var_44], 1
mov     esi, [esp+44h+var_44]
cmp     [esp+44h+var_1c], esi
jg      loc_63201720
add     esp, 34h
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
jmp     short sub_63201a50
sub     esp, 2ch
mov     [esp+2ch+var_8], ebx
mov     ebx, [eax+1ch]
mov     [esp+2ch+var_4], esi
mov     esi, edx
mov     [esp+2ch+var_1c], edx
mov     [esp+2ch+var_2c], eax
mov     [esp+2ch+var_20], offset aatmosetlivesou_0
mov     [esp+2ch+var_24], offset aatmo
mov     [esp+2ch+var_28], 3
call    vlc_log
mov     edx, [ebx+50h]
xor     eax, eax
test    edx, edx
jz      short loc_63201aa0
mov     ebx, [esp+2ch+var_8]
mov     esi, [esp+2ch+var_4]
add     esp, 2ch
retn
mov     edx, [ebx+0a8h]
test    edx, edx
jz      short loc_63201a8d
mov     [esp+2ch+var_2c], esi
call    edx
mov     ebx, [esp+2ch+var_8]
mov     esi, [esp+2ch+var_4]
add     esp, 2ch
retn
push    esi
mov     esi, eax
push    ebx
sub     esp, 14h
mov     ebx, [eax+1ch]
mov     [esp+1ch+block], ebx
call    vlc_mutex_lock
mov     ecx, [ebx+4ch]
test    ecx, ecx
jz      short loc_63201b30
mov     [esp+1ch+block], esi
mov     [esp+1ch+var_10], offset akillstillrunni
mov     [esp+1ch+var_14], offset aatmo
mov     [esp+1ch+var_18], 3
call    vlc_log
mov     ecx, [ebx+4ch]
mov     dword ptr [ecx+8], 1
lock or [esp+1ch+block], 0
mov     [esp+1ch+var_18], 0
mov     esi, [ebx+4ch]
mov     edx, [esi+4]
mov     [esp+1ch+block], edx
call    vlc_join
mov     eax, [ebx+4ch]
mov     [esp+1ch+block], eax
call    free
mov     dword ptr [ebx+4ch], 0
mov     [esp+1ch+block], ebx
call    vlc_mutex_unlock
add     esp, 14h
pop     ebx
pop     esi
retn
sub     esp, 4ch
mov     [esp+4ch+var_c], esi
mov     esi, [esp+4ch+arg_18]
mov     [esp+4ch+var_10], ebx
mov     eax, [esp+4ch+arg_8]
mov     edx, [esp+4ch+arg_10]
mov     [esp+4ch+var_8], edi
mov     ecx, [esp+4ch+arg_c]
mov     ebx, [esi+1ch]
mov     [esp+4ch+var_4], ebp
mov     edi, [esp+4ch+arg_14]
mov     [esp+4ch+var_20], eax
mov     ebp, edx
cmp     byte ptr [ebx+3ch], 0
jz      short loc_63201b7c
cmp     byte ptr [ebx+1ch], 0
jnz     short loc_63201b92
xor     eax, eax
mov     ebx, [esp+4ch+var_10]
mov     esi, [esp+4ch+var_c]
mov     edi, [esp+4ch+var_8]
mov     ebp, [esp+4ch+var_4]
add     esp, 4ch
retn
mov     [esp+4ch+var_3c], eax
mov     [esp+4ch+var_38], ecx
mov     [esp+4ch+var_24], ecx
mov     [esp+4ch+var_34], edx
mov     [esp+4ch+var_30], edi
mov     [esp+4ch+var_40], offset astatechangefro
mov     [esp+4ch+var_44], offset aatmo
mov     [esp+4ch+size], 3
mov     [esp+4ch+count], esi
call    vlc_log
mov     eax, ebp
mov     ecx, [esp+4ch+var_24]
xor     eax, 3
or      eax, edi
jz      short loc_63201bf2
xor     ebp, 2
or      ebp, edi
jnz     short loc_63201b7c
mov     ebp, [esp+4ch+var_20]
xor     ebp, 3
or      ebp, ecx
jnz     short loc_63201b7c
mov     eax, esi
call    sub_63201ac0
mov     byte ptr [ebx+24h], 0
jmp     short loc_63201b7c
mov     edx, [esp+4ch+var_20]
xor     edx, 2
or      edx, ecx
jnz     loc_63201b7c
mov     eax, esi
mov     byte ptr [ebx+24h], 1
call    sub_63201ac0
mov     [esp+4ch+count], ebx
call    vlc_mutex_lock
mov     edi, [ebx+4ch]
test    edi, edi
jz      short loc_63201c28
mov     [esp+4ch+count], ebx
call    vlc_mutex_unlock
jmp     loc_63201b7c
mov     [esp+4ch+size], 14h
mov     [esp+4ch+count], 1
call    calloc
mov     [ebx+4ch], eax
mov     [eax], esi
movzx   edx, byte ptr [ebx+3dh]
mov     [eax+0ch], dl
mov     ecx, [ebx+4ch]
movzx   eax, byte ptr [ebx+3eh]
mov     [ecx+0dh], al
mov     edi, [ebx+4ch]
movzx   edx, byte ptr [ebx+3fh]
mov     [edi+0eh], dl
mov     ebp, [ebx+4ch]
mov     eax, [ebx+40h]
mov     dword ptr [ebp+8], 0
mov     [ebp+10h], eax
lock or [esp+4ch+count], 0
mov     ecx, [ebx+4ch]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+size], offset sub_63202860
mov     [esp+4ch+var_44], ecx
add     ecx, 4
mov     [esp+4ch+count], ecx
call    vlc_clone
test    eax, eax
jz      short loc_63201c1b
mov     [esp+4ch+count], esi
mov     [esp+4ch+var_40], offset acannotcreatefa
mov     [esp+4ch+var_44], offset aatmo
mov     [esp+4ch+size], 1
call    vlc_log
mov     esi, [ebx+4ch]
mov     [esp+4ch+count], esi
call    free
mov     dword ptr [ebx+4ch], 0
jmp     loc_63201c1b
sub     esp, 1ch
mov     [esp+1ch+var_c], ebx
mov     ebx, eax
mov     eax, [eax+1ch]
mov     [esp+1ch+var_8], esi
mov     [esp+1ch+var_4], edi
mov     ecx, [eax+50h]
test    ecx, ecx
jz      loc_63201e01
cmp     edx, 1
jz      short loc_63201d04
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
mov     esi, [eax+54h]
test    esi, esi
jz      short loc_63201cf4
mov     [esp+1ch+var_1c], esi
call    sub_6320b670
mov     edi, [esi+8]
mov     dword ptr [esi+8], 0
test    edi, edi
jz      short loc_63201d51
mov     [esp+1ch+var_1c], edi
call    sub_6320d890
mov     eax, [edi]
mov     [esp+1ch+var_1c], edi
call    dword ptr [eax+8]
mov     [esp+1ch+var_10], offset ainputthreaddie
mov     [esp+1ch+var_14], offset aatmo
mov     [esp+1ch+var_18], 3
mov     [esp+1ch+var_1c], ebx
call    vlc_log
mov     edi, [esi]
mov     dword ptr [esi], 0
test    edi, edi
jz      short loc_63201d8d
mov     [esp+1ch+var_1c], edi
call    sub_6320d890
mov     edx, [edi]
mov     [esp+1ch+var_1c], edi
call    dword ptr [edx+8]
mov     [esp+1ch+var_10], offset aeffectthreaddi
mov     [esp+1ch+var_14], offset aatmo
mov     [esp+1ch+var_18], 3
mov     [esp+1ch+var_1c], ebx
call    vlc_log
mov     edi, [esi+4]
mov     dword ptr [esi+4], 0
test    edi, edi
jz      short loc_63201dcb
mov     [esp+1ch+var_1c], edi
call    sub_63213610
mov     [esp+1ch+var_1c], edi
call    sub_63222db0
mov     [esp+1ch+var_10], offset apacketqueuerem
mov     [esp+1ch+var_14], offset aatmo
mov     [esp+1ch+var_18], 3
mov     [esp+1ch+var_1c], ebx
call    vlc_log
mov     ebx, [esi+10h]
mov     dword ptr [esi+10h], 0
test    ebx, ebx
jz      short loc_63201de9
mov     ecx, [ebx]
mov     [esp+1ch+var_1c], ebx
call    dword ptr [ecx+0ch]
mov     edi, [ebx]
mov     [esp+1ch+var_1c], ebx
call    dword ptr [edi+4]
mov     [esp+1ch+var_1c], esi
call    sub_6320b680
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
mov     eax, [eax+0a0h]
test    eax, eax
jz      loc_63201cf4
mov     [esp+1ch+var_1c], edx
call    eax
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
sub     esp, 6ch
mov     [esp+6ch+var_4], ebp
mov     ebp, [esp+6ch+arg_8]
mov     [esp+6ch+var_10], ebx
mov     edx, [esp+6ch+arg_10]
mov     ebx, [esp+6ch+arg_c]
mov     [esp+6ch+var_c], esi
mov     [esp+6ch+var_24], ebp
mov     ebp, [esp+6ch+arg_18]
mov     [esp+6ch+var_8], edi
mov     edi, offset aatmoshowdots
mov     [esp+6ch+var_20], ebx
mov     ebx, [esp+6ch+arg_14]
mov     [esp+6ch+var_28], edx
mov     eax, [ebp+1ch]
mov     [esp+6ch+var_2c], eax
mov     [esp+6ch+var_6c], eax
call    vlc_mutex_lock
mov     esi, [esp+6ch+arg_4]
mov     ecx, 0eh
repe cmpsb
jnz     short loc_63201e99
movzx   eax, byte ptr [esp+6ch+var_28]
mov     ecx, [esp+6ch+var_2c]
mov     [ecx+25h], al
mov     esi, [esp+6ch+var_2c]
mov     edx, [esi+50h]
test    edx, edx
jz      loc_63202020
mov     esi, [esp+6ch+var_28]
mov     edi, offset aatmofiltermode
mov     ecx, [esp+6ch+var_24]
mov     eax, [esp+6ch+var_20]
mov     [esp+6ch+var_4c], ebx
mov     ebx, [esp+6ch+arg_4]
mov     [esp+6ch+var_50], esi
mov     [esp+6ch+var_58], ecx
mov     [esp+6ch+var_54], eax
mov     [esp+6ch+var_30], edx
mov     esi, ebx
mov     [esp+6ch+var_5c], ebx
mov     [esp+6ch+var_60], offset aapplyatmosetti
mov     [esp+6ch+var_64], offset aatmo
mov     [esp+6ch+var_68], 3
mov     [esp+6ch+var_6c], ebp
call    vlc_log
mov     eax, 10h
mov     edx, [esp+6ch+var_30]
mov     ecx, eax
repe cmpsb
jz      loc_63202042
mov     esi, [esp+6ch+arg_4]
mov     edi, offset aatmopercentnew
mov     ecx, eax
repe cmpsb
jz      loc_63202060
mov     esi, [esp+6ch+arg_4]
mov     edi, offset aatmomeanlength
mov     ecx, eax
repe cmpsb
jz      loc_63202050
mov     esi, [esp+6ch+arg_4]
mov     ebp, 13h
mov     edi, offset aatmomeanthresh
mov     ecx, ebp
repe cmpsb
jz      loc_63202070
mov     esi, [esp+6ch+arg_4]
mov     ecx, 14h
mov     edi, offset aatmoedgeweight
repe cmpsb
jz      loc_63202090
mov     esi, [esp+6ch+arg_4]
mov     edi, offset aatmobrightness
mov     ecx, eax
repe cmpsb
jz      loc_63202080
mov     esi, [esp+6ch+arg_4]
mov     edi, offset aatmodarknessli
mov     ecx, ebp
repe cmpsb
jz      loc_632020a0
mov     esi, [esp+6ch+arg_4]
mov     edi, offset aatmohuewinsize
mov     ecx, eax
repe cmpsb
jz      loc_632020af
mov     esi, [esp+6ch+arg_4]
mov     edi, offset aatmosatwinsize
mov     ecx, eax
repe cmpsb
jz      loc_632020be
mov     esi, [esp+6ch+arg_4]
mov     eax, 10h
mov     edi, offset aatmoframedelay
mov     ecx, eax
repe cmpsb
jz      loc_632020cd
mov     esi, [esp+6ch+arg_4]
mov     ecx, 0eh
mov     edi, offset aatmowhiteadj
repe cmpsb
jz      loc_632020dc
mov     esi, [esp+6ch+arg_4]
mov     ecx, 0fh
mov     edi, offset aatmowhitered
repe cmpsb
jz      loc_632020e9
mov     esi, [esp+6ch+arg_4]
mov     ecx, 11h
mov     edi, offset aatmowhitegreen
repe cmpsb
jz      loc_632020f5
mov     esi, [esp+6ch+arg_4]
mov     edi, offset aatmowhiteblue
mov     ecx, eax
repe cmpsb
jnz     short loc_63202020
mov     ebx, [esp+6ch+var_28]
mov     [edx+2ch], ebx
lea     esi, [esi+0]
mov     edx, [esp+6ch+var_2c]
mov     [esp+6ch+var_6c], edx
call    vlc_mutex_unlock
xor     eax, eax
mov     ebx, [esp+6ch+var_10]
mov     esi, [esp+6ch+var_c]
mov     edi, [esp+6ch+var_8]
mov     ebp, [esp+6ch+var_4]
add     esp, 6ch
retn
mov     ebp, [esp+6ch+var_28]
mov     [edx+0b8h], ebp
jmp     short loc_63202020
mov     eax, [esp+6ch+var_28]
mov     [edx+0c0h], eax
jmp     short loc_63202020
mov     ebx, [esp+6ch+var_28]
mov     [edx+0bch], ebx
jmp     short loc_63202020
mov     ebp, [esp+6ch+var_28]
mov     [edx+0c4h], ebp
jmp     short loc_63202020
mov     eax, [esp+6ch+var_28]
mov     [edx+0d4h], eax
jmp     short loc_63202020
mov     ebx, [esp+6ch+var_28]
mov     [edx+0d0h], ebx
jmp     short loc_63202020
mov     ebp, [esp+6ch+var_28]
mov     [edx+0d8h], ebp
jmp     loc_63202020
mov     ebx, [esp+6ch+var_28]
mov     [edx+0dch], ebx
jmp     loc_63202020
mov     eax, [esp+6ch+var_28]
mov     [edx+0e0h], eax
jmp     loc_63202020
mov     ebp, [esp+6ch+var_28]
mov     [edx+0f4h], ebp
jmp     loc_63202020
movzx   ebx, byte ptr [esp+6ch+var_28]
mov     [edx+21h], bl
jmp     loc_63202020
mov     eax, [esp+6ch+var_28]
mov     [edx+24h], eax
jmp     loc_63202020
mov     ebp, [esp+6ch+var_28]
mov     [edx+28h], ebp
jmp     loc_63202020
jmp     short sub_63202110
sub     esp, 2ch
mov     [esp+2ch+var_8], ebx
mov     ebx, [eax+1ch]
mov     [esp+2ch+var_4], esi
mov     esi, edx
mov     [esp+2ch+var_2c], eax
mov     [esp+2ch+var_1c], edx
mov     [esp+2ch+var_20], offset aatmoswitcheffe_0
mov     [esp+2ch+var_24], offset aatmo
mov     [esp+2ch+var_28], 3
call    vlc_log
mov     eax, [ebx+50h]
test    eax, eax
jz      short loc_63202170
mov     [esp+2ch+var_28], 2
mov     edx, [ebx+54h]
mov     [esp+2ch+var_2c], edx
call    sub_6320e5a0
mov     ebx, [esp+2ch+var_8]
mov     esi, [esp+2ch+var_4]
add     esp, 2ch
retn
mov     edx, [ebx+0a4h]
xor     eax, eax
test    edx, edx
jz      short loc_6320215e
mov     [esp+2ch+var_2c], esi
call    edx
mov     ebx, [esp+2ch+var_8]
mov     esi, [esp+2ch+var_4]
add     esp, 2ch
retn
push    edi
push    esi
push    ebx
sub     esp, 10h
mov     ebx, [esp+20h]
mov     edi, [ebx+1ch]
mov     dword ptr [esp+0ch], offset adestroyatmofil
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], ebx
call    vlc_log
mov     [esp], ebx
call    pl_get
mov     [esp], eax
call    playlist_currentinput
test    eax, eax
mov     esi, eax
jz      short loc_632021f7
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201b40
mov     dword ptr [esp+4], offset astate
mov     [esp], eax
call    var_delcallback
mov     [esp], esi
call    vlc_object_release
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmofiltermode
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmopercentnew
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmomeanlength
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmomeanthresh
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmoedgeweight
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmobrightness
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmodarknessli
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmohuewinsize
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmosatwinsize
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmoframedelay
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmowhiteadj
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmowhitered
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmowhitegreen
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmowhiteblue
mov     [esp], ebx
call    var_delcallback
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmoshowdots
mov     [esp], ebx
call    var_delcallback
mov     esi, [ebx+1ch]
cmp     byte ptr [esi+1ch], 0
jnz     short loc_632023f7
mov     eax, [edi+98h]
test    eax, eax
jz      short loc_632023ba
mov     [esp], eax
call    ds:freelibrary
sub     esp, 4
mov     ebx, [edi+54h]
test    ebx, ebx
jz      short loc_632023d1
mov     [esp], ebx
call    sub_6320b660
mov     [esp], ebx
call    sub_63222db0
mov     eax, [edi+50h]
test    eax, eax
jz      short loc_632023e0
mov     ebx, [eax]
mov     [esp], eax
call    dword ptr [ebx+4]
mov     [esp], edi
call    vlc_mutex_destroy
mov     [esp+20h], edi
add     esp, 10h
pop     ebx
pop     esi
pop     edi
jmp     free
mov     dword ptr [esp+0ch], offset ashutdownatmo
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], ebx
call    vlc_log
mov     eax, ebx
call    sub_63201ac0
mov     [esp], esi
call    vlc_mutex_lock
mov     byte ptr [esi+24h], 1
mov     dword ptr [esp+4], 14h
mov     dword ptr [esp], 1
call    calloc
mov     [esi+4ch], eax
mov     [eax], ebx
movzx   edx, byte ptr [esi+44h]
mov     [eax+0ch], dl
movzx   eax, byte ptr [esi+45h]
mov     ecx, [esi+4ch]
mov     [ecx+0dh], al
mov     eax, [esi+4ch]
movzx   edx, byte ptr [esi+46h]
mov     [eax+0eh], dl
mov     eax, [esi+4ch]
cmp     dword ptr [esi+38h], 31h
jle     loc_63202500
mov     ecx, [esi+48h]
mov     [eax+10h], ecx
mov     dword ptr [eax+8], 0
lock or dword ptr [esp], 0
mov     eax, [esi+4ch]
mov     dword ptr [esp+0ch], 0
mov     dword ptr [esp+4], offset sub_63202860
mov     [esp+8], eax
add     eax, 4
mov     [esp], eax
call    vlc_clone
test    eax, eax
jz      short loc_63202510
mov     dword ptr [esp+0ch], offset acannotcreatefa
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], ebx
call    vlc_log
mov     edx, [esi+4ch]
mov     [esp], edx
call    free
mov     dword ptr [esi+4ch], 0
mov     [esp], esi
call    vlc_mutex_unlock
mov     ecx, [esi+50h]
test    ecx, ecx
jz      short loc_63202542
mov     edx, 1
mov     eax, ebx
call    sub_63201cd0
mov     byte ptr [esi+1ch], 0
jmp     loc_632023a4
mov     dword ptr [eax+10h], 1
jmp     loc_63202471
mov     [esp], esi
call    vlc_mutex_unlock
mov     dword ptr [esp+4], 0
mov     edx, [esi+4ch]
mov     eax, [edx+4]
mov     [esp], eax
call    vlc_join
mov     ecx, [esi+4ch]
mov     [esp], ecx
call    free
mov     dword ptr [esi+4ch], 0
jmp     short loc_632024dd
mov     edx, [esi+20h]
cmp     edx, 2
jz      short loc_63202553
mov     eax, ebx
call    sub_63202110
jmp     short loc_632024e4
xor     edx, edx
mov     eax, ebx
call    sub_63201a50
lea     esi, [esi+0]
jmp     short loc_632024e4
sub     esp, 1ch
mov     [esp+1ch+var_4], edi
mov     edi, [eax+1ch]
mov     [esp+1ch+var_c], ebx
mov     ebx, eax
mov     [esp+1ch+var_8], esi
mov     eax, [edi+50h]
test    eax, eax
jz      short loc_632025e0
test    dl, dl
mov     esi, 0ffffffffh
jnz     short loc_632025c8
mov     [esp+1ch+var_10], offset aopenatmodevice
mov     [esp+1ch+var_14], offset aatmo
mov     [esp+1ch+var_18], 3
mov     [esp+1ch+var_1c], ebx
call    vlc_log
mov     edx, [edi+54h]
mov     [esp+1ch+var_1c], edx
call    sub_6320db60
test    al, al
jz      short loc_63202600
mov     esi, 1
mov     eax, esi
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
mov     eax, [edi+9ch]
test    eax, eax
jz      short loc_63202622
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
jmp     eax
mov     [esp+1ch+var_10], offset afailedtoopenat
mov     [esp+1ch+var_14], offset aatmo
mov     [esp+1ch+var_18], 1
mov     [esp+1ch+var_1c], ebx
call    vlc_log
jmp     short loc_632025c8
mov     esi, 0ffffffffh
jmp     short loc_632025c8
sub     esp, 1ch
mov     edx, [eax+1ch]
mov     ecx, [edx+50h]
test    ecx, ecx
jz      short loc_63202658
mov     ecx, [edx+80h]
test    ecx, ecx
jz      short loc_63202658
mov     eax, [edx+54h]
test    eax, eax
jz      short loc_63202654
cmp     dword ptr [eax+0ch], 2
jz      short loc_63202667
add     esp, 1ch
retn
mov     edx, [edx+0b4h]
test    edx, edx
jz      short loc_63202685
add     esp, 1ch
jmp     edx
mov     eax, [eax+8]
test    eax, eax
jz      short loc_63202654
add     edx, 58h
mov     [esp+1ch+var_14], ecx
mov     [esp+1ch+var_18], edx
mov     [esp+1ch+var_1c], eax
call    sub_6320c030
add     esp, 1ch
retn
mov     [esp+1ch+var_10], offset aatmosendpixeld_0
mov     [esp+1ch+var_14], offset aatmo
mov     [esp+1ch+var_18], 2
mov     [esp+1ch+var_1c], eax
call    vlc_log
jmp     short loc_63202654
sub     esp, 3ch
mov     [esp+3ch+var_4], ebp
mov     ebp, [esp+3ch+arg_4]
mov     [esp+3ch+var_8], edi
mov     edi, [esp+3ch+arg_0]
mov     [esp+3ch+var_10], ebx
xor     ebx, ebx
mov     [esp+3ch+var_c], esi
test    ebp, ebp
mov     esi, [edi+1ch]
jz      loc_632027ac
mov     [esp+3ch+var_3c], edi
call    dword ptr [edi+2a8h]
test    eax, eax
mov     ebx, eax
jz      loc_632027c2
mov     [esp+3ch+var_3c], eax
mov     [esp+3ch+var_38], ebp
call    picture_copypixels
mov     [esp+3ch+var_3c], esi
call    vlc_mutex_lock
cmp     byte ptr [esi+1ch], 0
jz      loc_63202790
mov     eax, [esi+94h]
test    eax, eax
jz      short loc_63202790
cmp     byte ptr [esi+24h], 0
jnz     short loc_63202790
mov     edx, [edi+90h]
mov     ecx, [edi+94h]
mov     eax, [edi+98h]
mov     [esi+84h], edx
mov     edx, [edi+9ch]
mov     [esi+88h], ecx
mov     [esi+8ch], eax
mov     [esi+90h], edx
mov     edx, [edi+1ch]
mov     ecx, [edx+50h]
test    ecx, ecx
jz      loc_632027f0
mov     eax, [edx+80h]
test    eax, eax
jz      loc_63202810
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_38], ebx
mov     [esp+3ch+var_3c], edx
mov     [esp+3ch+var_20], edx
call    dword ptr [edx+94h]
mov     eax, [esp+3ch+var_20]
add     dword ptr [eax+38h], 1
mov     eax, edi
call    sub_63202630
lea     esi, [esi+0]
mov     [esp+3ch+var_3c], esi
call    vlc_mutex_unlock
mov     [esp+3ch+var_38], ebp
mov     [esp+3ch+var_3c], ebx
call    picture_copyproperties
mov     [esp+3ch+var_3c], ebp
call    picture_release
mov     eax, ebx
mov     esi, [esp+3ch+var_c]
mov     ebx, [esp+3ch+var_10]
mov     edi, [esp+3ch+var_8]
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
retn
mov     [esp+3ch+var_30], offset acantgetoutputp
mov     [esp+3ch+var_34], offset aatmo
mov     [esp+3ch+var_38], 2
mov     [esp+3ch+var_3c], edi
call    vlc_log
mov     [esp+3ch+var_3c], ebp
call    picture_release
jmp     short loc_632027ac
mov     eax, [edx+0b0h]
test    eax, eax
jz      short loc_63202810
mov     [esp+3ch+var_20], edx
call    eax
mov     edx, [esp+3ch+var_20]
jmp     loc_6320275d
mov     [esp+3ch+var_3c], edi
mov     [esp+3ch+var_30], offset aatmolightnotra
mov     [esp+3ch+var_34], offset aatmo
mov     [esp+3ch+var_38], 1
mov     [esp+3ch+var_20], edx
call    vlc_log
mov     edi, [esp+3ch+var_20]
mov     byte ptr [edi+1ch], 0
jmp     loc_63202790
jmp     short sub_63202850
mov     eax, 9c40h
xor     edx, edx
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 3ch
mov     ebx, [esp+4ch+arg_0]
mov     eax, [ebx]
mov     esi, [eax+1ch]
call    vlc_savecancel
mov     edx, 1
mov     [esp+4ch+var_20], eax
mov     eax, [ebx]
call    sub_63202570
mov     edi, [ebx]
mov     eax, [edi+1ch]
mov     edx, [eax+50h]
test    edx, edx
jz      loc_63202dbc
mov     edi, [eax+80h]
test    edi, edi
jz      loc_63202db5
mov     ecx, [esi+30h]
movzx   eax, byte ptr [ebx+0ch]
movzx   edx, byte ptr [ebx+0eh]
movzx   ebp, byte ptr [ebx+0dh]
shl     ecx, 2
imul    ecx, [esi+34h]
mov     [esp+4ch+var_2c], eax
mov     [esp+4ch+var_28], edx
mov     [esp+4ch+var_24], ebp
mov     [esp+4ch+var_34], ecx
mov     [esp+4ch+size], ecx
call    malloc
test    eax, eax
mov     esi, eax
jz      loc_63202dab
mov     ecx, [esp+4ch+var_34]
mov     [esp+4ch+src], edi
mov     [esp+4ch+size], eax
mov     [esp+4ch+var_44], ecx
call    memcpy
mov     eax, [ebx]
call    sub_63202630
mov     [esp+4ch+var_38], 0
xchg    ax, ax
lock or [esp+4ch+size], 0
mov     ecx, [ebx+8]
test    ecx, ecx
jnz     short loc_63202956
mov     edi, [esp+4ch+var_38]
cmp     edi, [ebx+10h]
mov     edi, [ebx]
jge     short loc_63202958
mov     eax, [edi+1ch]
mov     ebp, [eax+50h]
test    ebp, ebp
jz      loc_63202d94
mov     ecx, [eax+80h]
test    ecx, ecx
jz      short loc_63202956
mov     edi, [esp+4ch+var_34]
add     [esp+4ch+var_38], 1
test    edi, edi
jg      short loc_63202980
mov     eax, [ebx]
call    sub_63202630
call    sub_63202850
mov     [esp+4ch+size], eax
mov     [esp+4ch+src], edx
call    msleep
jmp     short loc_63202900
mov     edi, [ebx]
mov     [esp+4ch+size], esi
call    free
mov     eax, edi
xor     edx, edx
call    sub_63201cd0
mov     ebx, [esp+4ch+var_20]
mov     [esp+4ch+size], ebx
call    vlc_restorecancel
add     esp, 3ch
xor     eax, eax
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     edx, [esp+4ch+var_34]
sub     edx, 1
shr     edx, 2
and     edx, 3
mov     [esp+4ch+var_30], edx
lock or [esp+4ch+size], 0
mov     ebp, [ebx+8]
test    ebp, ebp
jnz     short loc_6320293c
movzx   edi, byte ptr [esi]
movzx   ebp, byte ptr [esi+1]
mov     edx, edi
movzx   eax, dl
mov     edx, [esp+4ch+var_28]
sub     edx, eax
mov     eax, [esp+4ch+var_38]
imul    eax, edx
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
mov     edx, ebp
add     eax, edi
mov     edi, [esp+4ch+var_24]
mov     [ecx], al
movzx   eax, dl
sub     edi, eax
mov     eax, [esp+4ch+var_38]
imul    eax, edi
mov     edi, [esp+4ch+var_2c]
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     eax, ebp
movzx   ebp, byte ptr [esi+2]
mov     [ecx+1], al
mov     eax, [esp+4ch+var_38]
sub     edi, ebp
imul    eax, edi
mov     edi, 4
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+2]
cmp     [esp+4ch+var_34], 4
mov     [ecx+2], al
jle     loc_6320293c
mov     ebp, [esp+4ch+var_30]
test    ebp, ebp
jz      loc_63202ba6
cmp     [esp+4ch+var_30], 1
jz      loc_63202b22
cmp     [esp+4ch+var_30], 2
jz      short loc_63202aa8
lock or [esp+4ch+size], 0
mov     edi, [ebx+8]
test    edi, edi
jnz     loc_6320293c
movzx   edi, byte ptr [esi+4]
movzx   ebp, byte ptr [esi+5]
mov     edx, edi
movzx   eax, dl
mov     edx, [esp+4ch+var_28]
sub     edx, eax
mov     eax, [esp+4ch+var_38]
imul    eax, edx
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
mov     edx, ebp
add     eax, edi
mov     edi, [esp+4ch+var_24]
mov     [ecx+4], al
movzx   eax, dl
sub     edi, eax
mov     eax, [esp+4ch+var_38]
imul    eax, edi
movzx   edi, byte ptr [esi+6]
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     eax, ebp
mov     ebp, [esp+4ch+var_2c]
mov     [ecx+5], al
mov     eax, [esp+4ch+var_38]
sub     ebp, edi
mov     edi, 8
imul    eax, ebp
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+6]
mov     [ecx+6], al
lock or [esp+4ch+size], 0
mov     ebp, [ebx+8]
test    ebp, ebp
jnz     loc_6320293c
movzx   ebp, byte ptr [esi+edi]
mov     edx, ebp
movzx   eax, dl
mov     edx, [esp+4ch+var_28]
sub     edx, eax
mov     eax, [esp+4ch+var_38]
imul    eax, edx
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     eax, ebp
mov     ebp, [esp+4ch+var_24]
mov     [ecx+edi], al
movzx   eax, byte ptr [esi+edi+1]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     ebp, [esp+4ch+var_2c]
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+1]
mov     [ecx+edi+1], al
movzx   eax, byte ptr [esi+edi+2]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+2]
mov     [ecx+edi+2], al
add     edi, 4
lock or [esp+4ch+size], 0
mov     ebp, [ebx+8]
test    ebp, ebp
jnz     loc_6320293c
movzx   ebp, byte ptr [esi+edi]
mov     edx, ebp
movzx   eax, dl
mov     edx, [esp+4ch+var_28]
sub     edx, eax
mov     eax, [esp+4ch+var_38]
imul    eax, edx
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     eax, ebp
mov     ebp, [esp+4ch+var_24]
mov     [ecx+edi], al
movzx   eax, byte ptr [esi+edi+1]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     ebp, [esp+4ch+var_2c]
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+1]
mov     [ecx+edi+1], al
movzx   eax, byte ptr [esi+edi+2]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+2]
mov     [ecx+edi+2], al
add     edi, 4
cmp     [esp+4ch+var_34], edi
jle     loc_6320293c
lock or [esp+4ch+size], 0
mov     eax, [ebx+8]
test    eax, eax
jnz     loc_6320293c
movzx   ebp, byte ptr [esi+edi]
mov     edx, ebp
movzx   eax, dl
mov     edx, [esp+4ch+var_28]
sub     edx, eax
mov     eax, [esp+4ch+var_38]
imul    eax, edx
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     eax, ebp
mov     ebp, [esp+4ch+var_24]
mov     [ecx+edi], al
movzx   eax, byte ptr [esi+edi+1]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     ebp, [esp+4ch+var_2c]
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+1]
mov     [ecx+edi+1], al
movzx   eax, byte ptr [esi+edi+2]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
lea     ebp, [edi+4]
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+2]
mov     [ecx+edi+2], al
lock or [esp+4ch+size], 0
mov     edx, [ebx+8]
test    edx, edx
jnz     loc_6320293c
movzx   eax, byte ptr [esi+edi+4]
mov     edx, [esp+4ch+var_28]
sub     edx, eax
mov     eax, [esp+4ch+var_38]
imul    eax, edx
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
mov     edx, [esp+4ch+var_24]
add     al, [esi+edi+4]
mov     [ecx+edi+4], al
movzx   eax, byte ptr [esi+ebp+1]
sub     edx, eax
mov     eax, [esp+4ch+var_38]
imul    eax, edx
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
mov     edx, [esp+4ch+var_2c]
add     al, [esi+ebp+1]
mov     [ecx+ebp+1], al
movzx   eax, byte ptr [esi+ebp+2]
sub     edx, eax
mov     eax, [esp+4ch+var_38]
imul    eax, edx
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+ebp+2]
mov     [ecx+ebp+2], al
lock or [esp+4ch+size], 0
mov     ebp, [ebx+8]
test    ebp, ebp
jnz     loc_6320293c
movzx   eax, byte ptr [esi+edi+8]
mov     ebp, [esp+4ch+var_28]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     ebp, [esp+4ch+var_24]
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+8]
mov     [ecx+edi+8], al
movzx   eax, byte ptr [esi+edi+9]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     ebp, [esp+4ch+var_2c]
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+9]
mov     [ecx+edi+9], al
movzx   eax, byte ptr [esi+edi+0ah]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+0ah]
mov     [ecx+edi+0ah], al
lock or [esp+4ch+size], 0
mov     ebp, [ebx+8]
test    ebp, ebp
jnz     loc_6320293c
movzx   eax, byte ptr [esi+edi+0ch]
mov     ebp, [esp+4ch+var_28]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     ebp, [esp+4ch+var_24]
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+0ch]
mov     [ecx+edi+0ch], al
movzx   eax, byte ptr [esi+edi+0dh]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     ebp, [esp+4ch+var_2c]
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+0dh]
mov     [ecx+edi+0dh], al
movzx   eax, byte ptr [esi+edi+0eh]
sub     ebp, eax
mov     eax, [esp+4ch+var_38]
imul    eax, ebp
mov     edx, eax
sar     edx, 1fh
idiv    dword ptr [ebx+10h]
add     al, [esi+edi+0eh]
mov     [ecx+edi+0eh], al
add     edi, 10h
cmp     [esp+4ch+var_34], edi
jle     loc_6320293c
jmp     loc_63202ba6
mov     eax, [eax+0b0h]
test    eax, eax
jz      loc_63202958
call    eax
mov     ecx, eax
jmp     loc_6320292b
mov     eax, [ebx]
lea     esi, [esi+0]
call    sub_63202630
mov     edi, [ebx]
jmp     loc_63202960
mov     eax, [eax+0b0h]
test    eax, eax
jz      loc_63202960
call    eax
mov     edi, eax
jmp     loc_6320289b
push    ebp
mov     ebp, esp
push    edi
push    ebx
sub     esp, 2f0h
lea     edx, [ebp+var_8]
lea     eax, [ebp+var_21c]
mov     [ebp+var_1fc], edx
mov     [esp], eax
mov     [ebp+var_204], offset sub_63223ad0
mov     [ebp+var_200], offset dword_632241bc
mov     [ebp+var_1f8], offset sub_63205ca4
mov     [ebp+var_1f4], esp
call    sub_6321b240
mov     dword ptr [esp], 0bch
call    malloc
mov     ecx, [ebp+arg_0]
test    eax, eax
mov     edx, eax
mov     [ecx+1ch], eax
jz      loc_63205a85
mov     edi, edx
xor     eax, eax
mov     ecx, 2fh
rep stosd
mov     [esp], edx
mov     [ebp+var_218], 0ffffffffh
call    vlc_mutex_init
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset acreateatmofilt
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], eax
call    vlc_log
mov     edi, [ebp+arg_0]
mov     ecx, [edi+29ch]
mov     dword ptr [edi+2a0h], offset sub_632026b0
mov     dword ptr [esp+8], offset off_6322c300
mov     dword ptr [esp+4], offset aatmo_0
mov     [esp+0ch], ecx
mov     [esp], edi
call    config_chainparse
mov     ebx, [ebp+arg_0]
mov     [esp], ebx
call    pl_get
mov     [esp], eax
call    playlist_currentinput
test    eax, eax
mov     [ebp+var_240], eax
jz      short loc_63202f01
mov     ecx, [ebp+arg_0]
mov     ebx, [ebp+var_240]
mov     dword ptr [esp+8], offset sub_63201b40
mov     dword ptr [esp+4], offset astate
mov     [esp+0ch], ecx
mov     [esp], ebx
call    var_addcallback
mov     edx, [ebp+var_240]
mov     [esp], edx
call    vlc_object_release
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmofiltermode
mov     [ebp+var_218], 0ffffffffh
mov     [esp+0ch], ecx
mov     [esp], ecx
call    var_addcallback
mov     ebx, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmopercentnew
mov     [esp+0ch], ebx
mov     [esp], ebx
call    var_addcallback
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmomeanlength
mov     [esp+0ch], edx
mov     [esp], edx
call    var_addcallback
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmomeanthresh
mov     [esp+0ch], eax
mov     [esp], eax
call    var_addcallback
mov     edi, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmoedgeweight
mov     [esp+0ch], edi
mov     [esp], edi
call    var_addcallback
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmobrightness
mov     [esp+0ch], ecx
mov     [esp], ecx
call    var_addcallback
mov     ebx, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmodarknessli
mov     [esp+0ch], ebx
mov     [esp], ebx
call    var_addcallback
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmohuewinsize
mov     [esp+0ch], edx
mov     [esp], edx
call    var_addcallback
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmosatwinsize
mov     [esp+0ch], eax
mov     [esp], eax
call    var_addcallback
mov     edi, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmoframedelay
mov     [esp+0ch], edi
mov     [esp], edi
call    var_addcallback
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmowhiteadj
mov     [esp+0ch], ecx
mov     [esp], ecx
call    var_addcallback
mov     ebx, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmowhitered
mov     [esp+0ch], ebx
mov     [esp], ebx
call    var_addcallback
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmowhitegreen
mov     [esp+0ch], edx
mov     [esp], edx
call    var_addcallback
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmowhiteblue
mov     [esp+0ch], eax
mov     [esp], eax
call    var_addcallback
mov     edi, [ebp+arg_0]
mov     dword ptr [esp+8], offset sub_63201e30
mov     dword ptr [esp+4], offset aatmoshowdots
mov     [esp+0ch], edi
mov     [esp], edi
call    var_addcallback
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_0]
mov     ebx, [ecx+1ch]
mov     byte ptr [ebx+1ch], 0
mov     dword ptr [ebx+30h], 40h
mov     dword ptr [ebx+34h], 30h
mov     [ebp+var_228], ebx
mov     [esp], edx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmodevice
call    var_create
mov     edi, [ebp+arg_0]
lea     eax, [ebp+var_180]
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmodevice
mov     [esp], edi
call    var_getchecked
test    eax, eax
jnz     loc_63204190
mov     eax, [ebp+var_180]
mov     edi, [ebp+var_228]
test    eax, eax
mov     [edi+28h], eax
jz      loc_6320419d
test    eax, eax
jle     loc_63203c45
mov     ecx, [ebp+arg_0]
mov     [esp+10h], eax
mov     dword ptr [esp+0ch], offset atryusebuildind
mov     dword ptr [esp+8], offset aatmo
mov     [esp], ecx
mov     dword ptr [esp+4], 3
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     dword ptr [esp], 144h
call    sub_63222e50
mov     [ebp+var_218], 2
mov     [ebp+var_25c], eax
mov     [esp], eax
call    sub_6320ac40
mov     edi, [ebp+var_25c]
mov     ecx, [ebp+var_228]
mov     [ecx+50h], edi
mov     dword ptr [esp], 38h
mov     [ebp+var_218], 0ffffffffh
call    sub_63222e50
mov     edx, [ebp+arg_0]
mov     [ebp+var_260], eax
mov     eax, [ebp+var_228]
mov     edi, [ebp+var_260]
mov     ebx, [eax+50h]
mov     [esp+4], edx
mov     [esp], edi
mov     [ebp+var_218], 1
mov     [esp+8], ebx
call    sub_6320b620
mov     ecx, [ebp+var_228]
lea     ebx, [ebp+var_170]
mov     edx, [ebp+var_260]
mov     eax, [ebp+arg_0]
mov     edi, [ecx+50h]
mov     [ecx+54h], edx
mov     dword ptr [esp+8], 0a040h
mov     dword ptr [esp+4], offset aatmoserialdev
mov     [ebp+var_22c], edi
mov     [esp], eax
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     edx, [ebp+arg_0]
mov     [ebp+var_170], 0
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], 40h
mov     dword ptr [esp+4], offset aatmoserialdev
mov     [esp], edx
call    var_getchecked
test    eax, eax
jnz     loc_6320462f
mov     edx, [ebp+var_170]
test    edx, edx
mov     [ebp+block], edx
mov     [ebp+var_c], edx
jz      short loc_6320329d
cmp     byte ptr [edx], 0
jnz     loc_63205237
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset anoserialdevice
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], edx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     ecx, [ebp+block]
lea     ebx, [ebp+var_168]
mov     [esp], ecx
call    free
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmozonestop
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edx
call    var_create
mov     edi, [ebp+arg_0]
mov     [esp+0ch], ebx
lea     ebx, [ebp+var_160]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmozonestop
mov     [esp], edi
call    var_getchecked
mov     ecx, [ebp+var_22c]
test    eax, eax
mov     eax, 0
cmovz   eax, [ebp+var_168]
mov     [ecx+0a4h], eax
mov     [esp], ecx
mov     [ebp+var_218], 0ffffffffh
call    sub_6320a6d0
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmozonesbotto
mov     [esp], edx
call    var_create
mov     edi, [ebp+arg_0]
mov     [esp+0ch], ebx
lea     ebx, [ebp+var_158]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmozonesbotto
mov     [esp], edi
call    var_getchecked
mov     ecx, [ebp+var_22c]
test    eax, eax
mov     eax, 0
cmovz   eax, [ebp+var_160]
mov     [ecx+0a8h], eax
mov     [esp], ecx
mov     [ebp+var_218], 0ffffffffh
call    sub_6320a6d0
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmozoneslr
mov     [esp], edx
call    var_create
mov     edi, [ebp+arg_0]
mov     [esp+0ch], ebx
lea     ebx, [ebp+var_150]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmozoneslr
mov     [esp], edi
call    var_getchecked
mov     ecx, [ebp+var_22c]
test    eax, eax
mov     eax, 0
cmovz   eax, [ebp+var_158]
mov     [ecx+0ach], eax
mov     [esp], ecx
mov     [ebp+var_218], 0ffffffffh
call    sub_6320a6d0
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a020h
mov     dword ptr [esp+4], offset aatmozonesummar
mov     [esp], edx
call    var_create
mov     edi, [ebp+arg_0]
mov     [esp+0ch], ebx
mov     [ebp+var_150], 0
mov     dword ptr [esp+8], 20h
mov     [esp], edi
lea     edi, [ebp+var_148]
mov     dword ptr [esp+4], offset aatmozonesummar
call    var_getchecked
movzx   ecx, [ebp+var_150]
mov     edx, [ebp+var_22c]
test    eax, eax
mov     eax, 0
cmovnz  ecx, eax
mov     [edx+0b4h], cl
mov     [esp], edx
mov     [ebp+var_218], 0ffffffffh
call    sub_6320a6d0
mov     ebx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmofiltermode
mov     [esp], ebx
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_140]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmofiltermode
mov     [esp], eax
call    var_getchecked
mov     ecx, [ebp+var_22c]
mov     edx, 0
mov     ebx, [ebp+arg_0]
test    eax, eax
cmovz   edx, [ebp+var_148]
mov     [ecx+0b8h], edx
mov     [esp], ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmopercentnew
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_138]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmopercentnew
mov     [esp], eax
call    var_getchecked
mov     ecx, [ebp+var_22c]
mov     edx, 0
mov     ebx, [ebp+arg_0]
test    eax, eax
cmovz   edx, [ebp+var_140]
mov     [ecx+0bch], edx
mov     [esp], ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmomeanlength
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_130]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmomeanlength
mov     [esp], eax
call    var_getchecked
mov     ecx, [ebp+var_22c]
mov     edx, 0
mov     ebx, [ebp+arg_0]
test    eax, eax
cmovz   edx, [ebp+var_138]
mov     [ecx+0c0h], edx
mov     [esp], ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmomeanthresh
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_128]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmomeanthresh
mov     [esp], eax
call    var_getchecked
mov     ecx, [ebp+var_22c]
mov     edx, 0
mov     ebx, [ebp+arg_0]
test    eax, eax
cmovz   edx, [ebp+var_130]
mov     [ecx+0c4h], edx
mov     [esp], ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmoedgeweight
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_120]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmoedgeweight
mov     [esp], eax
call    var_getchecked
mov     ecx, [ebp+var_22c]
mov     edx, 0
mov     ebx, [ebp+arg_0]
test    eax, eax
cmovz   edx, [ebp+var_128]
mov     [ecx+0d0h], edx
mov     [esp], ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmobrightness
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_118]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmobrightness
mov     [esp], eax
call    var_getchecked
mov     ecx, [ebp+var_22c]
mov     edx, 0
mov     ebx, [ebp+arg_0]
test    eax, eax
cmovz   edx, [ebp+var_120]
mov     [ecx+0d4h], edx
mov     [esp], ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmodarknessli
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_110]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmodarknessli
mov     [esp], eax
call    var_getchecked
mov     ecx, [ebp+var_22c]
mov     edx, 0
mov     ebx, [ebp+arg_0]
test    eax, eax
cmovz   edx, [ebp+var_118]
mov     [ecx+0d8h], edx
mov     [esp], ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmohuewinsize
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_108]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmohuewinsize
mov     [esp], eax
call    var_getchecked
mov     ecx, [ebp+var_22c]
mov     edx, 0
mov     ebx, [ebp+arg_0]
test    eax, eax
cmovz   edx, [ebp+var_110]
mov     [ecx+0dch], edx
mov     [esp], ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmosatwinsize
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_100]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmosatwinsize
mov     [esp], eax
call    var_getchecked
mov     edx, [ebp+var_22c]
mov     ecx, 0
mov     ebx, [ebp+arg_0]
mov     dword ptr [edx+0e4h], 0
test    eax, eax
cmovz   ecx, [ebp+var_108]
mov     [edx+0e0h], ecx
mov     [esp], ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmoframedelay
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_f8]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmoframedelay
mov     [esp], eax
call    var_getchecked
mov     ecx, [ebp+var_22c]
mov     edx, 0
mov     ebx, [ebp+arg_0]
test    eax, eax
cmovz   edx, [ebp+var_100]
mov     [ecx+0f4h], edx
mov     [esp], ebx
mov     dword ptr [esp+8], 0a020h
mov     dword ptr [esp+4], offset aatmowhiteadj
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], edi
mov     [ebp+var_f8], 0
mov     dword ptr [esp+8], 20h
mov     dword ptr [esp+4], offset aatmowhiteadj
mov     [esp], eax
call    var_getchecked
movzx   ebx, [ebp+var_f8]
mov     edx, 0
mov     ecx, [ebp+var_22c]
mov     edi, [ebp+arg_0]
test    eax, eax
cmovnz  ebx, edx
mov     [ecx+21h], bl
mov     [esp], edi
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmowhitered
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+var_f0]
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmowhitered
mov     [esp], ebx
call    var_getchecked
mov     edx, [ebp+var_22c]
mov     ecx, 0
mov     edi, [ebp+arg_0]
test    eax, eax
cmovz   ecx, [ebp+var_f0]
mov     [edx+24h], ecx
mov     [esp], edi
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmowhitegreen
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+var_e8]
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmowhitegreen
mov     [esp], ebx
call    var_getchecked
mov     edx, [ebp+var_22c]
mov     ecx, 0
mov     edi, [ebp+arg_0]
test    eax, eax
cmovz   ecx, [ebp+var_e8]
mov     [edx+28h], ecx
mov     [esp], edi
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmowhiteblue
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+var_e0]
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmowhiteblue
mov     [esp], ebx
call    var_getchecked
mov     edx, [ebp+var_22c]
mov     ecx, 0
mov     edi, [ebp+arg_0]
test    eax, eax
cmovz   ecx, [ebp+var_e0]
mov     [edx+2ch], ecx
mov     [esp], edi
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmodmxchannel
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+var_d8]
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmodmxchannel
mov     [esp], ebx
call    var_getchecked
mov     edx, [ebp+var_22c]
mov     ecx, 0
mov     edi, [ebp+arg_0]
test    eax, eax
cmovz   ecx, [ebp+var_d8]
mov     [edx+120h], ecx
mov     dword ptr [esp+8], 0a040h
mov     dword ptr [esp+4], offset aatmodmxchbase
mov     [esp], edi
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+var_d0]
mov     [ebp+var_d0], 0
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 40h
mov     dword ptr [esp+4], offset aatmodmxchbase
mov     [esp], ebx
call    var_getchecked
mov     [ebp+var_248], 0
test    eax, eax
jnz     short loc_63203aff
mov     edx, [ebp+var_d0]
test    edx, edx
mov     [ebp+var_248], edx
jz      short loc_63203aff
cmp     byte ptr [edx], 0
jz      short loc_63203aff
mov     eax, [ebp+var_22c]
mov     [esp+4], edx
mov     [esp], eax
call    sub_6320ade0
mov     ebx, [ebp+var_248]
mov     [esp], ebx
mov     ebx, 0
call    free
mov     edi, [ebp+arg_0]
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmomomochanne
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edi
call    var_create
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+var_c8]
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmomomochanne
mov     [esp], ecx
call    var_getchecked
mov     edx, [ebp+var_22c]
mov     edi, [ebp+arg_0]
test    eax, eax
cmovz   ebx, [ebp+var_c8]
mov     [edx+124h], ebx
mov     ebx, 0
mov     [esp], edi
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmofnordlicht
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+var_c0]
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmofnordlicht
mov     [esp], ecx
call    var_getchecked
mov     edi, [ebp+var_228]
mov     edx, [ebp+var_22c]
test    eax, eax
mov     eax, [edi+28h]
cmovz   ebx, [ebp+var_c0]
cmp     eax, 5
mov     [edx+128h], ebx
jbe     loc_63204430
mov     edx, [ebp+arg_0]
mov     [esp+10h], eax
mov     dword ptr [esp+0ch], offset ainvaliddevicet
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 2
mov     [esp], edx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset abuildindriverc
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], ecx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     eax, [ebp+arg_0]
mov     eax, [eax+84h]
cmp     eax, 30323449h
jz      loc_632043e6
cmp     eax, 32315659h
jz      loc_63204170
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset ainitfilterunsu
mov     dword ptr [esp+8], offset aatmo
add     eax, 84h
mov     [esp+10h], eax
mov     dword ptr [esp+4], 2
mov     [esp], ecx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     edx, [ebp+var_228]
mov     dword ptr [edx+94h], 0
mov     ebx, [ebp+arg_0]
mov     edi, 0
mov     dword ptr [esp+8], 0a020h
mov     dword ptr [esp+4], offset aatmoshowdots
mov     [ebp+var_218], 0ffffffffh
mov     [esp], ebx
call    var_create
mov     edx, [ebp+arg_0]
lea     eax, [ebp+var_b8]
mov     [ebp+var_b8], 0
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 20h
mov     [esp], edx
mov     dword ptr [esp+4], offset aatmoshowdots
call    var_getchecked
movzx   ebx, [ebp+var_b8]
mov     ecx, [ebp+var_228]
test    eax, eax
mov     eax, [ebp+arg_0]
cmovnz  ebx, edi
mov     edi, 0
mov     [ecx+25h], bl
lea     ebx, [ebp+var_b0]
mov     dword ptr [esp+8], 0a020h
mov     dword ptr [esp+4], offset aatmousepauseco
mov     [esp], eax
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     edx, [ebp+arg_0]
mov     [esp+0ch], ebx
mov     [ebp+var_b0], 0
mov     dword ptr [esp+8], 20h
mov     [esp], edx
mov     dword ptr [esp+4], offset aatmousepauseco
call    var_getchecked
mov     ecx, [ebp+var_228]
mov     ebx, [ebp+arg_0]
test    eax, eax
movzx   eax, [ebp+var_b0]
cmovnz  eax, edi
mov     [ecx+3ch], al
mov     [esp], ebx
xor     ebx, ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmopcolorred
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     edi, [ebp+arg_0]
lea     edx, [ebp+var_a8]
mov     [esp+0ch], edx
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmopcolorred
mov     [esp], edi
call    var_getchecked
mov     ecx, [ebp+var_228]
mov     edx, [ebp+arg_0]
test    eax, eax
movzx   eax, [ebp+var_a8]
cmovz   ebx, eax
mov     [ecx+3dh], bl
lea     ebx, [ebp+var_a0]
mov     [esp], edx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmopcolorgree
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     edi, [ebp+arg_0]
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmopcolorgree
mov     [esp], edi
call    var_getchecked
xor     edx, edx
mov     ecx, [ebp+var_228]
mov     ebx, [ebp+arg_0]
test    eax, eax
movzx   eax, [ebp+var_a0]
cmovz   edx, eax
mov     [ecx+3eh], dl
mov     [esp], ebx
xor     ebx, ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmopcolorblue
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     edi, [ebp+arg_0]
lea     edx, [ebp+var_98]
mov     [esp+0ch], edx
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmopcolorblue
mov     [esp], edi
call    var_getchecked
mov     ecx, [ebp+var_228]
mov     edx, [ebp+arg_0]
test    eax, eax
movzx   eax, [ebp+var_98]
cmovz   ebx, eax
mov     [ecx+3fh], bl
lea     ebx, [ebp+var_90]
mov     [esp], edx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmofadesteps
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     edi, [ebp+arg_0]
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmofadesteps
mov     [esp], edi
call    var_getchecked
test    eax, eax
jnz     loc_63204417
mov     eax, [ebp+var_90]
mov     ecx, [ebp+var_228]
test    eax, eax
mov     [ecx+40h], eax
jle     loc_63204417
mov     edi, [ebp+var_228]
mov     [esp+20h], eax
movzx   ecx, byte ptr [edi+3fh]
mov     [esp+1ch], ecx
movzx   edx, byte ptr [edi+3eh]
mov     ecx, [ebp+arg_0]
mov     [esp+18h], edx
movzx   ebx, byte ptr [edi+3dh]
mov     [esp+14h], ebx
movzx   eax, byte ptr [edi+3ch]
lea     ebx, [ebp+var_88]
mov     [esp], ecx
mov     dword ptr [esp+0ch], offset ausepausecolord
mov     dword ptr [esp+8], offset aatmo
mov     [esp+10h], eax
mov     dword ptr [esp+4], 3
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmoecolorred
mov     [esp], edx
call    var_create
mov     edi, [ebp+arg_0]
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmoecolorred
mov     [esp], edi
call    var_getchecked
xor     edx, edx
mov     ecx, [ebp+var_228]
mov     ebx, [ebp+arg_0]
test    eax, eax
movzx   eax, [ebp+var_88]
cmovz   edx, eax
mov     [ecx+44h], dl
mov     [esp], ebx
xor     ebx, ebx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmoecolorgree
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     edi, [ebp+arg_0]
lea     edx, [ebp+var_80]
mov     [esp+0ch], edx
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmoecolorgree
mov     [esp], edi
call    var_getchecked
mov     ecx, [ebp+var_228]
mov     edx, [ebp+arg_0]
test    eax, eax
movzx   eax, [ebp+var_80]
cmovz   ebx, eax
mov     [ecx+45h], bl
lea     ebx, [ebp+var_78]
mov     [esp], edx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmoecolorblue
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     edi, [ebp+arg_0]
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmoecolorblue
mov     [esp], edi
call    var_getchecked
xor     edx, edx
mov     ecx, [ebp+var_228]
mov     ebx, [ebp+arg_0]
test    eax, eax
movzx   eax, [ebp+var_78]
cmovz   edx, eax
mov     [ecx+46h], dl
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmoefadesteps
mov     [esp], ebx
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     edx, [ebp+arg_0]
lea     eax, [ebp+var_70]
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmoefadesteps
mov     [esp], edx
call    var_getchecked
test    eax, eax
jnz     loc_63204400
mov     eax, [ebp+var_70]
mov     edi, [ebp+var_228]
test    eax, eax
mov     [edi+48h], eax
jle     loc_63204400
mov     ecx, [ebp+var_228]
mov     [esp+1ch], eax
mov     ebx, [ebp+arg_0]
movzx   eax, byte ptr [ecx+46h]
mov     [esp+18h], eax
movzx   edi, byte ptr [ecx+45h]
mov     [esp+14h], edi
movzx   edx, byte ptr [ecx+44h]
mov     dword ptr [esp+0ch], offset auseendecolorrg
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp+10h], edx
mov     [esp], ebx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     eax, [ebp+arg_0]
xor     edx, edx
call    sub_63202570
cmp     eax, 1
jz      loc_63204724
mov     edx, [ebp+var_228]
mov     [ebp+var_250], 0
mov     ebx, [edx+28h]
test    ebx, ebx
jz      loc_63204437
lea     eax, [ebp+var_21c]
mov     [esp], eax
call    sub_6321b300
mov     eax, [ebp+var_250]
lea     esp, [ebp-8]
pop     ebx
pop     edi
pop     ebp
retn
mov     ebx, [ebp+var_228]
mov     dword ptr [ebx+94h], offset sub_632014c0
mov     byte ptr [ebx+2ch], 1
jmp     loc_63203cad
mov     edx, [ebp+var_228]
mov     dword ptr [edx+28h], 0
mov     dword ptr [esp], offset libfilename
mov     [ebp+var_218], 0ffffffffh
call    ds:loadlibrarya
mov     edx, [ebp+var_228]
sub     esp, 4
test    eax, eax
mov     [edx+98h], eax
jz      loc_63205848
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aloadlibraryok
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], eax
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     edx, [ebp+var_228]
mov     dword ptr [esp+4], offset aatmoinitialize
mov     edi, [edx+98h]
mov     [esp], edi
call    ds:getprocaddress
mov     ecx, [ebp+var_228]
sub     esp, 8
test    eax, eax
mov     [ecx+9ch], eax
jz      loc_63205a94
mov     edx, [ebp+var_228]
mov     dword ptr [esp+4], offset aatmofinalize
mov     edi, [edx+98h]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edi
call    ds:getprocaddress
mov     ecx, [ebp+var_228]
sub     esp, 8
test    eax, eax
mov     [ecx+0a0h], eax
jz      loc_63205b97
mov     edi, [ebp+var_228]
mov     dword ptr [esp+4], offset aatmoswitcheffe
mov     ecx, [edi+98h]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], ecx
call    ds:getprocaddress
mov     ebx, [ebp+var_228]
sub     esp, 8
test    eax, eax
mov     [ebx+0a4h], eax
jz      loc_63205bbf
mov     ecx, [ebp+var_228]
mov     dword ptr [esp+4], offset aatmosetlivesou
mov     eax, [ecx+98h]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], eax
call    ds:getprocaddress
mov     ebx, [ebp+var_228]
sub     esp, 8
test    eax, eax
mov     [ebx+0a8h], eax
jz      loc_63205af7
mov     eax, [ebp+var_228]
mov     dword ptr [esp+4], offset aatmocreatetran
mov     ebx, [eax+98h]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], ebx
call    ds:getprocaddress
mov     edx, [ebp+var_228]
sub     esp, 8
test    eax, eax
mov     [edx+0ach], eax
jz      loc_63205b1f
mov     ebx, [ebp+var_228]
mov     dword ptr [esp+4], offset aatmolocktransf
mov     edx, [ebx+98h]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edx
call    ds:getprocaddress
mov     edi, [ebp+var_228]
sub     esp, 8
test    eax, eax
mov     [edi+0b0h], eax
jz      loc_63205b47
mov     edx, [ebp+var_228]
mov     dword ptr [esp+4], offset aatmosendpixeld
mov     edi, [edx+98h]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edi
call    ds:getprocaddress
mov     ecx, [ebp+var_228]
sub     esp, 8
test    eax, eax
mov     [ecx+0b4h], eax
jz      loc_63205b6f
mov     ecx, [ebp+var_228]
mov     dword ptr [esp+4], offset aatmowingetimag
mov     eax, [ecx+98h]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], eax
call    ds:getprocaddress
mov     ecx, [ebp+var_228]
sub     esp, 8
test    eax, eax
mov     [ecx+0b8h], eax
jz      loc_63205abc
mov     eax, [ecx+28h]
jmp     loc_63203159
mov     edi, [ebp+var_228]
mov     dword ptr [edi+94h], offset sub_632014c0
mov     byte ptr [edi+2ch], 0
jmp     loc_63203cad
mov     eax, [ebp+var_228]
mov     dword ptr [eax+48h], 1
mov     eax, 1
jmp     loc_632040d6
mov     edi, [ebp+var_228]
mov     eax, 1
mov     dword ptr [edi+40h], 1
jmp     loc_63203f0f
jmp     ds:jpt_63204430[eax*4]
mov     edx, [ebp+arg_0]
lea     ebx, [ebp+lpmultibytestr]
mov     dword ptr [esp+8], 0a040h
mov     dword ptr [esp+4], offset aatmoatmowinexe
mov     [esp], edx
call    var_create
mov     eax, [ebp+arg_0]
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], 40h
mov     dword ptr [esp+4], offset aatmoatmowinexe
mov     [esp], eax
mov     [ebp+lpmultibytestr], 0
call    var_getchecked
mov     edi, [ebp+var_250]
mov     ecx, ds:multibytetowidechar
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+10h], 0
mov     dword ptr [esp+0ch], 0ffffffffh
mov     dword ptr [esp+4], 0
test    eax, eax
cmovz   edi, [ebp+lpmultibytestr]
mov     dword ptr [esp], 0fde9h
mov     [ebp+var_224], ecx
mov     [ebp+var_270], edi
mov     [esp+8], edi
mov     [ebp+var_218], 0ffffffffh
call    ecx
mov     [ebp+lpapplicationname], 0
sub     esp, 18h
test    eax, eax
mov     [ebp+var_280], eax
jz      short loc_63204539
add     eax, eax
mov     [esp], eax
call    malloc
test    eax, eax
mov     [ebp+lpapplicationname], eax
jz      short loc_63204539
mov     eax, [ebp+var_280]
mov     edi, [ebp+lpapplicationname]
mov     ecx, [ebp+var_270]
mov     dword ptr [esp+0ch], 0ffffffffh
mov     [esp+14h], eax
mov     [esp+10h], edi
mov     [esp+8], ecx
mov     dword ptr [esp+4], 0
mov     dword ptr [esp], 0fde9h
call    [ebp+var_224]
sub     esp, 18h
mov     ebx, [ebp+var_270]
mov     [ebp+var_250], 0
test    ebx, ebx
jz      loc_63204153
lea     ebx, [ebp+startupinfo]
xor     eax, eax
mov     ecx, 11h
mov     edi, ebx
rep stosd
mov     ecx, [ebp+lpapplicationname]
lea     edi, [ebp+processinformation]
mov     [ebp+startupinfo.cb], 44h
mov     [esp+24h], edi
mov     [esp+20h], ebx
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+10h], 0
mov     dword ptr [esp+0ch], 0
mov     dword ptr [esp+8], 0
mov     dword ptr [esp+4], 0
mov     [esp], ecx
mov     [ebp+var_218], 0ffffffffh
call    ds:createprocessw
mov     edx, [ebp+var_270]
sub     esp, 28h
cmp     eax, 1
mov     [esp+10h], edx
jz      loc_632046ae
mov     ebx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset afailedtolaunch
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], ebx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     edx, [ebp+var_270]
mov     [esp], edx
call    free
mov     eax, [ebp+lpapplicationname]
mov     [esp], eax
call    free
jmp     loc_63204153
mov     [ebp+var_c], 0
mov     [ebp+block], 0
jmp     loc_6320329d
mov     ebx, [ebp+var_228]
mov     edi, [ebx+50h]
mov     dword ptr [edi+18h], 7
jmp     loc_63203c18
mov     eax, [ebp+var_228]
mov     ecx, [eax+50h]
mov     dword ptr [ecx+18h], 6
jmp     loc_63203c18
mov     edx, [ebp+var_228]
mov     ebx, [edx+50h]
mov     dword ptr [ebx+18h], 2
jmp     loc_63203c18
mov     edi, [ebp+var_228]
mov     eax, [edi+50h]
mov     dword ptr [eax+18h], 4
jmp     loc_63203c18
mov     ecx, [ebp+var_228]
mov     edx, [ecx+50h]
mov     dword ptr [edx+18h], 0
jmp     loc_63203c18
mov     edi, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset alaunchedatmowi
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], edi
call    vlc_log
mov     ecx, [ebp+processinformation.hprocess]
mov     dword ptr [esp+4], 1388h
mov     [esp], ecx
call    ds:waitforinputidle
mov     eax, [ebp+arg_0]
xor     edx, edx
sub     esp, 8
call    sub_63202570
mov     ebx, [ebp+var_270]
mov     [esp], ebx
mov     [ebp+var_2b8], eax
call    free
mov     edx, [ebp+lpapplicationname]
mov     [esp], edx
call    free
cmp     [ebp+var_2b8], 1
jnz     loc_63204153
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aatmoinitialize_0
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], ecx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     edi, [ebp+arg_0]
mov     edx, [ebp+arg_0]
mov     ebx, [edi+1ch]
mov     [esp], edx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmowidth
mov     [ebp+var_274], ebx
mov     ebx, 0
call    var_create
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+var_60]
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmowidth
mov     [esp], ecx
call    var_getchecked
mov     edi, [ebp+var_274]
mov     edx, [ebp+arg_0]
test    eax, eax
cmovz   ebx, [ebp+var_60]
mov     [edi+30h], ebx
mov     [esp], edx
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmoheight
mov     [ebp+var_218], 0ffffffffh
call    var_create
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+var_58]
mov     [esp+0ch], eax
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmoheight
mov     [esp], ecx
call    var_getchecked
mov     ecx, [ebp+var_274]
mov     edi, [ecx+50h]
test    eax, eax
mov     eax, 0
cmovz   eax, [ebp+var_58]
test    edi, edi
mov     [ecx+34h], eax
jz      loc_632053ad
mov     ebx, [ebp+var_274]
mov     [esp+14h], eax
mov     ecx, [ebp+arg_0]
mov     eax, [ebx+30h]
mov     dword ptr [esp+0ch], offset asampleimagesiz
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp+10h], eax
mov     [esp], ecx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     edi, [ebp+var_228]
mov     edx, [edi+28h]
test    edx, edx
jle     loc_63205101
mov     eax, [ebp+arg_0]
mov     ecx, [eax+1ch]
mov     edi, [ecx+54h]
mov     [ebp+var_284], ecx
mov     [esp], edi
lea     edi, [ebp+var_50]
call    sub_6320b670
mov     edx, [ebp+var_284]
mov     ecx, [ebp+arg_0]
mov     ebx, [edx+50h]
mov     eax, [ebx+70h]
mov     [ebp+var_258], ebx
mov     ebx, 0
mov     [esp], ecx
mov     dword ptr [esp+8], 0a030h
mov     [ebp+var_244], eax
mov     dword ptr [esp+4], offset aatmochannel0
call    var_create
mov     edx, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_48]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmochannel0
mov     [esp], edx
call    var_getchecked
mov     dword ptr [esp+4], 0
mov     [ebp+var_218], 0ffffffffh
test    eax, eax
mov     eax, [ebp+var_244]
cmovz   ebx, [ebp+var_50]
mov     [esp], eax
mov     [esp+8], ebx
mov     ebx, 0
call    sub_6320fdf0
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmochannel1
mov     [esp], ecx
call    var_create
mov     edx, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_40]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmochannel1
mov     [esp], edx
call    var_getchecked
mov     dword ptr [esp+4], 1
mov     [ebp+var_218], 0ffffffffh
test    eax, eax
mov     eax, [ebp+var_244]
cmovz   ebx, [ebp+var_48]
mov     [esp], eax
mov     [esp+8], ebx
mov     ebx, 0
call    sub_6320fdf0
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmochannel2
mov     [esp], ecx
call    var_create
mov     edx, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_38]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmochannel2
mov     [esp], edx
call    var_getchecked
mov     dword ptr [esp+4], 2
mov     [ebp+var_218], 0ffffffffh
test    eax, eax
mov     eax, [ebp+var_244]
cmovz   ebx, [ebp+var_40]
mov     [esp], eax
mov     [esp+8], ebx
mov     ebx, 0
call    sub_6320fdf0
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmochannel3
mov     [esp], ecx
call    var_create
mov     edx, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_30]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmochannel3
mov     [esp], edx
call    var_getchecked
mov     dword ptr [esp+4], 3
mov     [ebp+var_218], 0ffffffffh
test    eax, eax
mov     eax, [ebp+var_244]
cmovz   ebx, [ebp+var_38]
mov     [esp], eax
mov     [esp+8], ebx
mov     ebx, 0
call    sub_6320fdf0
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a030h
mov     dword ptr [esp+4], offset aatmochannel4
mov     [esp], ecx
call    var_create
mov     edx, [ebp+arg_0]
mov     [esp+0ch], edi
lea     edi, [ebp+var_28]
mov     dword ptr [esp+8], 30h
mov     dword ptr [esp+4], offset aatmochannel4
mov     [esp], edx
call    var_getchecked
mov     dword ptr [esp+4], 4
mov     [ebp+var_218], 0ffffffffh
test    eax, eax
mov     eax, [ebp+var_244]
cmovz   ebx, [ebp+var_30]
mov     [esp], eax
mov     [esp+8], ebx
call    sub_6320fdf0
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+8], 0a040h
mov     dword ptr [esp+4], offset aatmochannels
mov     [esp], ecx
call    var_create
mov     edx, [ebp+arg_0]
mov     [ebp+var_28], 0
mov     [esp+0ch], edi
mov     dword ptr [esp+8], 40h
mov     dword ptr [esp+4], offset aatmochannels
mov     [esp], edx
call    var_getchecked
mov     [ebp+string], 0
test    eax, eax
jnz     short loc_63204b16
mov     edx, [ebp+var_28]
test    edx, edx
mov     [ebp+string], edx
jz      short loc_63204b16
cmp     byte ptr [edx], 0
jnz     loc_632053e4
mov     eax, [ebp+string]
mov     [esp], eax
call    free
mov     ecx, [ebp+var_244]
mov     edx, [ecx+4]
test    edx, edx
jle     short loc_63204bab
mov     [ebp+var_234], 0
nop
lea     esi, [esi+0]
mov     ebx, [ebp+var_234]
mov     eax, [ebp+var_244]
mov     [ebp+var_218], 0ffffffffh
mov     [esp+4], ebx
mov     [esp], eax
call    sub_6320fdc0
mov     ecx, [ebp+var_234]
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset amapzonedtohard
mov     dword ptr [esp+8], offset aatmo
mov     [esp+14h], ecx
mov     dword ptr [esp+4], 0
mov     [esp+10h], eax
mov     [esp], edx
call    vlc_log
mov     ebx, [ebp+var_244]
add     [ebp+var_234], 1
mov     edi, [ebp+var_234]
cmp     edi, [ebx+4]
jl      short loc_63204b40
mov     eax, [ebp+var_284]
mov     edx, [ebp+var_244]
mov     ecx, [eax+54h]
mov     edi, [ecx+10h]
mov     ebx, [edi]
mov     [esp+4], edx
mov     [esp], edi
lea     edi, [ebp+processinformation]
mov     eax, [ebx+24h]
lea     ebx, [ebp+processinformation]
mov     [ebp+var_218], 0ffffffffh
call    eax
mov     ecx, [ebp+var_284]
mov     edx, [ecx+54h]
mov     [esp], edx
call    sub_6320b690
mov     [esp], edi
mov     dword ptr [esp+8], 0
mov     dword ptr [esp+4], offset aatmogradientzo
call    sub_63221da0
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+8], 0a040h
mov     [esp+4], ebx
mov     [esp], eax
call    var_create
mov     edi, [ebp+arg_0]
lea     ecx, [ebp+var_20]
lea     edx, [ebp+processinformation]
mov     [ebp+var_20], 0
mov     [esp+0ch], ecx
mov     dword ptr [esp+8], 40h
mov     [esp+4], edx
mov     [esp], edi
call    var_getchecked
mov     [ebp+var_29c], 0
test    eax, eax
jnz     short loc_63204c70
mov     edx, [ebp+var_20]
test    edx, edx
mov     [ebp+var_29c], edx
jz      short loc_63204c70
cmp     byte ptr [edx], 0
jnz     loc_63205742
mov     edi, [ebp+var_29c]
lea     ebx, [ebp+processinformation]
mov     [esp], edi
lea     edi, [ebp+processinformation]
call    free
mov     [esp], ebx
mov     dword ptr [esp+8], 1
mov     dword ptr [esp+4], offset aatmogradientzo
call    sub_63221da0
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+processinformation]
mov     dword ptr [esp+8], 0a040h
mov     [esp+4], eax
mov     [ebp+var_218], 0ffffffffh
mov     [esp], ecx
call    var_create
mov     ebx, [ebp+arg_0]
lea     edx, [ebp+var_20]
mov     [ebp+var_20], 0
mov     [esp+0ch], edx
mov     dword ptr [esp+8], 40h
mov     [esp+4], edi
mov     [esp], ebx
call    var_getchecked
mov     [ebp+var_28c], 0
test    eax, eax
jnz     short loc_63204d12
mov     edx, [ebp+var_20]
test    edx, edx
mov     [ebp+var_28c], edx
jz      short loc_63204d12
cmp     byte ptr [edx], 0
jnz     loc_632056a5
mov     ecx, [ebp+var_28c]
lea     edi, [ebp+processinformation]
lea     ebx, [ebp+var_20]
mov     [esp], ecx
call    free
lea     edx, [ebp+processinformation]
mov     [esp], edx
mov     dword ptr [esp+8], 2
mov     dword ptr [esp+4], offset aatmogradientzo
call    sub_63221da0
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+8], 0a040h
mov     [esp+4], edi
mov     [ebp+var_218], 0ffffffffh
mov     [esp], eax
call    var_create
mov     edx, [ebp+arg_0]
lea     ecx, [ebp+processinformation]
mov     [ebp+var_20], 0
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], 40h
mov     [esp+4], ecx
mov     [esp], edx
call    var_getchecked
mov     [ebp+var_298], 0
test    eax, eax
jnz     short loc_63204db4
mov     edx, [ebp+var_20]
test    edx, edx
mov     [ebp+var_298], edx
jz      short loc_63204db4
cmp     byte ptr [edx], 0
jnz     loc_63205608
mov     eax, [ebp+var_298]
lea     ebx, [ebp+processinformation]
lea     edi, [ebp+var_20]
mov     [esp], eax
call    free
mov     [esp], ebx
mov     dword ptr [esp+8], 3
mov     dword ptr [esp+4], offset aatmogradientzo
call    sub_63221da0
mov     edx, [ebp+arg_0]
lea     ecx, [ebp+processinformation]
mov     [esp+4], ecx
mov     dword ptr [esp+8], 0a040h
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edx
call    var_create
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+processinformation]
mov     [ebp+var_20], 0
mov     [esp+0ch], edi
mov     dword ptr [esp+8], 40h
mov     [esp+4], eax
mov     [esp], ebx
call    var_getchecked
mov     [ebp+var_2a0], 0
test    eax, eax
jnz     short loc_63204e56
mov     edx, [ebp+var_20]
test    edx, edx
mov     [ebp+var_2a0], edx
jz      short loc_63204e56
cmp     byte ptr [edx], 0
jnz     loc_6320556b
mov     edx, [ebp+var_2a0]
lea     edi, [ebp+processinformation]
mov     [esp], edx
call    free
mov     [esp], edi
mov     dword ptr [esp+8], 4
mov     dword ptr [esp+4], offset aatmogradientzo
call    sub_63221da0
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+processinformation]
mov     dword ptr [esp+8], 0a040h
mov     [esp+4], eax
mov     [ebp+var_218], 0ffffffffh
mov     [esp], ebx
call    var_create
mov     edi, [ebp+arg_0]
lea     ecx, [ebp+var_20]
lea     edx, [ebp+processinformation]
mov     [ebp+var_20], 0
mov     [esp+0ch], ecx
mov     dword ptr [esp+8], 40h
mov     [esp+4], edx
mov     [esp], edi
call    var_getchecked
mov     [ebp+var_2a4], 0
test    eax, eax
jnz     short loc_63204ef8
mov     edx, [ebp+var_20]
test    edx, edx
mov     [ebp+var_2a4], edx
jz      short loc_63204ef8
cmp     byte ptr [edx], 0
jnz     loc_632054ce
mov     eax, [ebp+var_2a4]
lea     ebx, [ebp+var_18]
mov     [esp], eax
call    free
mov     edi, [ebp+arg_0]
mov     dword ptr [esp+8], 0a040h
mov     dword ptr [esp+4], offset aatmogradientpa
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edi
call    var_create
mov     ecx, [ebp+arg_0]
mov     [ebp+var_18], 0
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], 40h
mov     dword ptr [esp+4], offset aatmogradientpa
mov     [esp], ecx
call    var_getchecked
test    eax, eax
jnz     loc_63205c3f
mov     edx, [ebp+var_18]
test    edx, edx
mov     [ebp+str], edx
jz      short loc_63204f72
cmp     byte ptr [edx], 0
jnz     loc_632050d8
mov     edx, [ebp+str]
mov     [esp], edx
call    strlen
add     eax, 10h
mov     [esp], eax
call    malloc
test    eax, eax
mov     [ebp+var_268], eax
jz      loc_63205c4e
mov     [ebp+var_23c], 0
jmp     short loc_63204fec
cmp     eax, 1
jbe     short loc_63204fe5
mov     ebx, [ebp+var_268]
mov     ecx, [ebp+arg_0]
mov     [esp+14h], eax
mov     dword ptr [esp+0ch], offset afailedtoloadgr
mov     [esp+10h], ebx
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], ecx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
add     [ebp+var_23c], 1
mov     edi, [ebp+var_258]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edi
call    sub_6320a710
cmp     [ebp+var_23c], eax
jge     loc_632050ca
mov     ebx, [ebp+var_23c]
mov     ecx, [ebp+var_258]
mov     [ebp+var_218], 0ffffffffh
mov     [esp+4], ebx
mov     [esp], ecx
call    sub_6320a6a0
test    eax, eax
mov     [ebp+var_254], eax
jz      short loc_63204fe5
mov     ecx, [ebp+str]
mov     edx, [ebp+var_268]
mov     ebx, [ebp+var_23c]
mov     dword ptr [esp+0ch], offset asc_6322aa7c
mov     [esp+8], ecx
mov     [esp], edx
mov     [esp+10h], ebx
mov     dword ptr [esp+4], offset asszonedbmp
call    sub_63221da0
mov     eax, [ebp+var_268]
mov     edi, [ebp+var_254]
mov     [esp+4], eax
mov     [esp], edi
call    sub_6320f6c0
test    eax, eax
jnz     loc_63204fa5
mov     edx, [ebp+var_23c]
mov     eax, [ebp+var_268]
mov     edi, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aloadedgradient
mov     [esp+14h], edx
mov     [esp+10h], eax
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], edi
call    vlc_log
jmp     loc_63204fe5
mov     eax, [ebp+var_268]
mov     [esp], eax
call    free
mov     ebx, [ebp+str]
mov     [esp], ebx
call    free
mov     ecx, [ebp+var_284]
mov     edx, [ecx+54h]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edx
call    sub_6320b680
mov     ecx, [ebp+var_228]
mov     eax, [ebp+arg_0]
mov     edi, [ebp+var_228]
mov     edx, [ecx+30h]
mov     ecx, [eax+1ch]
mov     ebx, [edi+34h]
mov     [ebp+var_294], edx
mov     edi, [ecx+50h]
mov     [ebp+var_290], ebx
mov     [ebp+var_264], ecx
test    edi, edi
jz      loc_63205365
mov     edx, [ecx+80h]
mov     ebx, 28h
mov     [esp], edx
call    free
mov     eax, [ebp+var_294]
shl     eax, 2
imul    eax, [ebp+var_290]
mov     [esp], eax
call    malloc
mov     edx, [ebp+var_264]
mov     [edx+80h], eax
add     edx, 58h
test    dl, 1
jnz     loc_63205c29
test    dl, 2
jnz     loc_63205be7
mov     ecx, ebx
xor     eax, eax
shr     ecx, 2
mov     edi, edx
test    bl, 2
rep stosd
jz      short loc_6320519a
mov     word ptr [edi], 0
add     edi, 2
and     ebx, 1
jz      short loc_632051a2
mov     byte ptr [edi], 0
mov     ebx, [ebp+var_264]
mov     edx, [ebp+var_294]
mov     edi, [ebp+var_290]
mov     dword ptr [ebx+58h], 28h
mov     [ebx+5ch], edx
mov     [ebx+60h], edi
mov     word ptr [ebx+66h], 20h
mov     dword ptr [ebx+68h], 0
mov     eax, [ebp+arg_0]
mov     edx, 2
mov     [ebp+var_218], 0ffffffffh
call    sub_63202110
mov     ecx, [ebp+var_228]
mov     edx, 1
mov     [ecx+20h], eax
mov     eax, [ebp+arg_0]
call    sub_63201a50
mov     edx, [ebp+var_228]
mov     eax, [ebp+arg_0]
mov     byte ptr [edx+1ch], 1
mov     dword ptr [esp+0ch], offset aatmofilterenab
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], eax
call    vlc_log
mov     [ebp+var_250], 0
jmp     loc_63204153
mov     ebx, [ebp+arg_0]
mov     [esp+10h], edx
mov     dword ptr [esp+0ch], offset auseportss
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], ebx
call    vlc_log
mov     [ebp+var_238], 0
lea     edi, [ebp+var_c]
mov     dword ptr [esp+4], offset asc_6322a60d
mov     [esp], edi
mov     [ebp+var_218], 0ffffffffh
call    sub_63213720
test    eax, eax
mov     [ebp+var_230], eax
jz      loc_632032ca
cmp     [ebp+var_238], 4
jz      loc_632032ca
movzx   eax, byte ptr [eax]
xor     ecx, ecx
mov     edx, [ebp+var_230]
cmp     al, 20h
jnz     short loc_632052bb
nop
add     ecx, 1
movzx   eax, byte ptr [edx+ecx]
cmp     al, 20h
jz      short loc_632052b0
test    al, al
jz      short loc_63205268
add     ecx, [ebp+var_230]
xor     edx, edx
movzx   eax, byte ptr [ecx]
cmp     al, 20h
jz      short loc_632052f2
test    al, al
jz      short loc_632052f2
mov     ebx, [ebp+var_230]
jmp     short loc_632052e4
test    al, al
jz      short loc_632052f2
mov     [ebx+edx], al
add     edx, 1
movzx   eax, byte ptr [ecx+edx]
cmp     al, 20h
jnz     short loc_632052e0
mov     eax, [ebp+var_230]
mov     ebx, [ebp+var_238]
mov     byte ptr [eax+edx], 0
mov     edx, [ebp+arg_0]
mov     [esp+14h], eax
mov     [esp+10h], ebx
mov     dword ptr [esp+0ch], offset aserialdeviceds
mov     [esp], edx
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     ecx, [ebp+var_230]
mov     edi, [ebp+var_238]
mov     eax, [ebp+var_22c]
mov     [esp+8], ecx
mov     [esp+4], edi
mov     [esp], eax
call    sub_6320ad30
add     [ebp+var_238], 1
jmp     loc_63205268
mov     ecx, [ebp+var_264]
mov     eax, [ecx+0ach]
test    eax, eax
jz      loc_632051ce
mov     edi, [ebp+var_290]
mov     ebx, [ebp+var_294]
mov     dword ptr [esp+4], 4
mov     dword ptr [esp], 0
mov     [esp+0ch], edi
mov     [esp+8], ebx
mov     [ebp+var_218], 0ffffffffh
call    eax
jmp     loc_632051ce
mov     edx, [ecx+0b8h]
test    edx, edx
jz      loc_63204814
mov     ebx, ecx
add     ebx, 34h
mov     [esp+4], ebx
sub     ebx, 4
mov     [esp], ebx
mov     [ebp+var_218], 0ffffffffh
call    edx
mov     eax, [ebp+var_274]
mov     eax, [eax+34h]
jmp     loc_63204814
mov     ebx, [ebp+arg_0]
mov     [esp+10h], edx
mov     dword ptr [esp+0ch], offset adealwithnewzon
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], ebx
call    vlc_log
mov     edx, [ebp+string]
movzx   eax, byte ptr [edx]
test    al, al
jz      loc_63204b16
add     edx, 1
mov     [ebp+var_26c], edx
mov     edx, [ebp+string]
mov     [ebp+var_2b4], 0
jmp     short loc_63205456
mov     edx, [ebp+var_2a8]
add     [ebp+var_26c], 1
mov     eax, [ebp+var_26c]
movzx   eax, byte ptr [eax-1]
test    al, al
jz      loc_632057df
cmp     al, 3bh
jz      short loc_6320545e
cmp     al, 2ch
jnz     short loc_6320543d
mov     edi, [ebp+var_26c]
mov     byte ptr [edi-1], 0
cmp     byte ptr [edx], 0
mov     [ebp+var_2a8], edi
jz      short loc_63205437
mov     [esp], edx
call    atoi
mov     edx, [ebp+var_244]
mov     edx, [edx+4]
cmp     eax, 0ffffffffh
jl      short loc_63205491
cmp     eax, edx
jl      loc_63205bf7
mov     ecx, [ebp+arg_0]
sub     edx, 1
mov     [esp+14h], edx
mov     [esp+10h], eax
mov     dword ptr [esp+0ch], offset azonedoutofrang
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 2
mov     [esp], ecx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
jmp     loc_63205437
mov     ebx, [ebp+arg_0]
mov     [esp+10h], edx
mov     dword ptr [esp+14h], 4
mov     dword ptr [esp+0ch], offset aloadinggradien
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], ebx
call    vlc_log
mov     ecx, [ebp+var_258]
mov     dword ptr [esp+4], 4
mov     [esp], ecx
call    sub_6320a6a0
test    eax, eax
jz      loc_63204ef8
mov     edi, [ebp+var_2a4]
mov     [esp], eax
mov     [esp+4], edi
call    sub_6320f6c0
test    eax, eax
jz      loc_63204ef8
mov     [esp+14h], eax
mov     edx, [ebp+var_2a4]
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset afailedtoloadgr
mov     dword ptr [esp+8], offset aatmo
mov     [esp+10h], edx
mov     dword ptr [esp+4], 1
mov     [esp], eax
call    vlc_log
jmp     loc_63204ef8
mov     [esp+10h], edx
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+14h], 3
mov     dword ptr [esp+0ch], offset aloadinggradien
mov     dword ptr [esp+8], offset aatmo
mov     [esp], edx
mov     dword ptr [esp+4], 3
call    vlc_log
mov     edi, [ebp+var_258]
mov     dword ptr [esp+4], 3
mov     [esp], edi
call    sub_6320a6a0
test    eax, eax
jz      loc_63204e56
mov     ecx, [ebp+var_2a0]
mov     [esp], eax
mov     [esp+4], ecx
call    sub_6320f6c0
test    eax, eax
jz      loc_63204e56
mov     [esp+14h], eax
mov     ebx, [ebp+arg_0]
mov     eax, [ebp+var_2a0]
mov     dword ptr [esp+0ch], offset afailedtoloadgr
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp+10h], eax
mov     [esp], ebx
call    vlc_log
jmp     loc_63204e56
mov     eax, [ebp+arg_0]
mov     [esp+10h], edx
mov     dword ptr [esp+14h], 2
mov     dword ptr [esp+0ch], offset aloadinggradien
mov     [esp], eax
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
call    vlc_log
mov     ebx, [ebp+var_258]
mov     dword ptr [esp+4], 2
mov     [esp], ebx
call    sub_6320a6a0
test    eax, eax
jz      loc_63204db4
mov     edi, [ebp+var_298]
mov     [esp], eax
mov     [esp+4], edi
call    sub_6320f6c0
test    eax, eax
jz      loc_63204db4
mov     ecx, [ebp+var_298]
mov     edx, [ebp+arg_0]
mov     [esp+14h], eax
mov     dword ptr [esp+0ch], offset afailedtoloadgr
mov     [esp+10h], ecx
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], edx
call    vlc_log
jmp     loc_63204db4
mov     ecx, [ebp+arg_0]
mov     [esp+10h], edx
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+0ch], offset aloadinggradien
mov     [esp], ecx
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
call    vlc_log
mov     edx, [ebp+var_258]
mov     dword ptr [esp+4], 1
mov     [esp], edx
call    sub_6320a6a0
test    eax, eax
jz      loc_63204d12
mov     ebx, [ebp+var_28c]
mov     [esp], eax
mov     [esp+4], ebx
call    sub_6320f6c0
test    eax, eax
jz      loc_63204d12
mov     [esp+14h], eax
mov     edi, [ebp+var_28c]
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset afailedtoloadgr
mov     dword ptr [esp+8], offset aatmo
mov     [esp+10h], edi
mov     dword ptr [esp+4], 1
mov     [esp], eax
call    vlc_log
jmp     loc_63204d12
mov     edi, [ebp+arg_0]
mov     [esp+10h], edx
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+0ch], offset aloadinggradien
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], edi
call    vlc_log
mov     ebx, [ebp+var_258]
mov     dword ptr [esp+4], 0
mov     [esp], ebx
call    sub_6320a6a0
test    eax, eax
jz      loc_63204c70
mov     edx, [ebp+var_29c]
mov     [esp], eax
mov     [esp+4], edx
call    sub_6320f6c0
test    eax, eax
jz      loc_63204c70
mov     [esp+14h], eax
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+var_29c]
mov     dword ptr [esp+0ch], offset afailedtoloadgr
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp+10h], eax
mov     [esp], ecx
call    vlc_log
jmp     loc_63204c70
cmp     byte ptr [edx], 0
jz      loc_63204b16
mov     [esp], edx
nop
lea     esi, [esi+0]
call    atoi
mov     ebx, [ebp+var_244]
mov     edx, [ebx+4]
cmp     eax, 0ffffffffh
jl      short loc_6320580b
cmp     eax, edx
jl      loc_63205c79
mov     edi, [ebp+arg_0]
sub     edx, 1
mov     [esp+14h], edx
mov     [esp+10h], eax
mov     dword ptr [esp+0ch], offset azonedoutofrang
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 2
mov     [esp], edi
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
jmp     loc_63204b16
mov     ecx, [ebp+arg_0]
lea     ebx, [ebp+var_178]
mov     dword ptr [esp+8], 0a040h
mov     dword ptr [esp+4], offset aatmoatmowinexe
mov     [esp], ecx
call    var_create
mov     eax, [ebp+arg_0]
mov     [ebp+var_178], 0
mov     [esp+0ch], ebx
mov     dword ptr [esp+8], 40h
mov     dword ptr [esp+4], offset aatmoatmowinexe
mov     [esp], eax
call    var_getchecked
mov     [ebp+var_2ac], 0
test    eax, eax
jnz     loc_63205a1f
mov     ecx, [ebp+var_178]
test    ecx, ecx
mov     [ebp+var_2ac], ecx
jz      loc_63205a1f
cmp     byte ptr [ecx], 0
jz      loc_63205a1f
mov     dword ptr [esp+4], 5ch
mov     [esp], ecx
call    strrchr
test    eax, eax
jz      loc_63205a1f
mov     edx, [ebp+var_2ac]
lea     edi, [ebp+var_c]
mov     byte ptr [eax], 0
mov     [ebp+var_c], 0
mov     dword ptr [esp+4], offset asatmoctrllibdl
mov     [esp+8], edx
mov     [esp], edi
call    sub_63213770
mov     edx, [ebp+var_c]
xor     eax, eax
test    edx, edx
jz      loc_63205a17
mov     ecx, [ebp+arg_0]
mov     [esp+10h], edx
mov     dword ptr [esp+0ch], offset atryloadings
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 3
mov     [esp], ecx
call    vlc_log
mov     ebx, [ebp+var_c]
mov     eax, ds:multibytetowidechar
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+10h], 0
mov     [ebp+var_2c0], ebx
mov     dword ptr [esp+0ch], 0ffffffffh
mov     [esp+8], ebx
mov     dword ptr [esp+4], 0
mov     dword ptr [esp], 0fde9h
mov     [ebp+var_220], eax
call    eax
mov     [ebp+lplibfilename], 0
sub     esp, 18h
test    eax, eax
mov     [ebp+var_2bc], eax
jz      short loc_632059de
add     eax, eax
mov     [esp], eax
call    malloc
test    eax, eax
mov     [ebp+lplibfilename], eax
jz      short loc_632059de
mov     eax, [ebp+var_2bc]
mov     edx, [ebp+lplibfilename]
mov     edi, [ebp+var_2c0]
mov     dword ptr [esp+0ch], 0ffffffffh
mov     [esp+14h], eax
mov     [esp+10h], edx
mov     [esp+8], edi
mov     dword ptr [esp+4], 0
mov     dword ptr [esp], 0fde9h
call    [ebp+var_220]
sub     esp, 18h
mov     edi, [ebp+lplibfilename]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edi
call    ds:loadlibraryw
mov     ecx, [ebp+var_228]
mov     ebx, [ebp+lplibfilename]
mov     [ecx+98h], eax
sub     esp, 4
mov     [esp], ebx
call    free
mov     eax, [ebp+var_c]
mov     [esp], eax
call    free
mov     ebx, [ebp+var_2ac]
mov     [esp], ebx
call    free
mov     eax, [ebp+var_228]
mov     edx, [eax+98h]
test    edx, edx
jnz     loc_632041cb
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aatmoctrllibdll_0
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 2
mov     [esp], eax
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     ebx, [ebp+var_228]
mov     eax, 1
mov     dword ptr [ebx+28h], 1
jmp     loc_63203161
mov     [ebp+var_250], 0fffffffeh
jmp     loc_63204153
mov     ebx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aexportatmoinit
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], ebx
call    vlc_log
jmp     loc_6320422c
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aexportatmowing
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], edx
mov     [ebp+var_218], 0ffffffffh
call    vlc_log
mov     edi, [ebp+var_228]
mov     eax, [edi+28h]
jmp     loc_63203159
mov     edi, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aexportatmosetl
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], edi
call    vlc_log
jmp     loc_632042e6
mov     ecx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aexportatmocrea
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], ecx
call    vlc_log
jmp     loc_63204324
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aexportatmolock
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], eax
call    vlc_log
jmp     loc_63204362
mov     ebx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aexportatmosend
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], ebx
call    vlc_log
jmp     loc_632043a0
mov     eax, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aexportatmofina
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], eax
call    vlc_log
jmp     loc_6320426a
mov     edx, [ebp+arg_0]
mov     dword ptr [esp+0ch], offset aexportatmoswit
mov     dword ptr [esp+8], offset aatmo
mov     dword ptr [esp+4], 1
mov     [esp], edx
call    vlc_log
jmp     loc_632042a8
mov     word ptr [edx], 0
sub     ebx, 2
add     edx, 2
jmp     loc_63205182
mov     ebx, [ebp+var_2b4]
mov     ecx, [ebp+var_244]
mov     [esp+8], eax
mov     [ebp+var_218], 0ffffffffh
mov     [esp+4], ebx
mov     [esp], ecx
call    sub_6320fdf0
add     [ebp+var_2b4], 1
jmp     loc_63205437
mov     ecx, [ebp+var_264]
mov     bl, 27h
mov     edx, ecx
mov     byte ptr [ecx+58h], 0
add     edx, 59h
jmp     loc_63205179
mov     [ebp+str], 0
jmp     loc_63204f72
mov     dword ptr [esp+8], 551h
mov     dword ptr [esp+4], offset aextraspackagew
mov     dword ptr [esp], offset apszfilename
mov     [ebp+var_218], 0ffffffffh
call    sub_6321bea0
jmp     loc_63204f99
mov     [esp+8], eax
mov     edi, [ebp+var_244]
mov     eax, [ebp+var_2b4]
mov     [ebp+var_218], 0ffffffffh
mov     [esp], edi
mov     [esp+4], eax
call    sub_6320fdf0
jmp     loc_63204b16
add     ebp, 8
mov     eax, [ebp-218h]
mov     ebx, [ebp-214h]
test    eax, eax
mov     [ebp-2c4h], ebx
jz      short loc_63205cc4
cmp     eax, 1
jz      short loc_63205cea
mov     eax, [ebp-260h]
mov     [esp+0], eax
call    sub_63222db0
mov     edi, [ebp-2c4h]
mov     dword ptr [ebp-218h], 0ffffffffh
mov     [esp+0], edi
call    sub_6321b600
mov     eax, [ebp-25ch]
jmp     short loc_63205cca
push    ebp
mov     ebp, 0ffffffffh
push    edi
push    esi
push    ebx
sub     esp, 3ch
mov     esi, [esp+4ch+arg_4]
lea     eax, [esp+4ch+var_28]
mov     ebx, [esp+4ch+arg_0]
mov     [esp+4ch+var_24], 0
mov     [esp+4ch+var_40], eax
mov     [esp+4ch+var_44], 0
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
test    eax, eax
jnz     loc_63205e86
mov     edx, [esp+4ch+var_28]
mov     [esp+4ch+var_40], offset aatmo
mov     [esp+4ch+var_44], 107h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
test    eax, eax
jnz     loc_63205e86
mov     ecx, [esp+4ch+var_28]
mov     [esp+4ch+var_40], offset aatmolightfilte
mov     [esp+4ch+var_44], 109h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
test    eax, eax
jnz     loc_63205e86
mov     edi, [esp+4ch+var_28]
mov     [esp+4ch+var_40], offset athismoduleallo
mov     [esp+4ch+var_44], 10ah
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edi
call    ebx
test    eax, eax
jnz     loc_63205e86
mov     eax, [esp+4ch+var_28]
mov     [esp+4ch+var_40], offset aatmolight
mov     [esp+4ch+var_44], 108h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
test    eax, eax
jnz     loc_63205e86
lea     edi, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 6
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 3
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 7
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 12fh
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_28]
mov     [esp+4ch+var_40], offset avideofilter2
mov     [esp+4ch+var_44], 102h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
test    eax, eax
jz      short loc_63205e90
add     esp, 3ch
mov     eax, ebp
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     edx, [esp+4ch+var_28]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_44], 103h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
test    eax, eax
jnz     short loc_63205e86
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset achoosedevicety
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset achooseyourpref
mov     [esp+4ch+var_40], offset adevicetype
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmodevice
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], offset off_6322bff4
mov     [esp+4ch+var_3c], offset dword_6322bf8c
mov     [esp+4ch+var_40], 6
mov     [esp+4ch+var_44], 100fh
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 80h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset anameoftheseria
mov     [esp+4ch+var_40], offset aserialportdevi
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmoserialdev
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset acom1
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8ch
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset aifyouwanttheat
mov     [esp+4ch+var_40], offset afilenameofatmo
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmoatmowinexe
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset ailluminatether
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 60h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset asetthecolortos
mov     [esp+4ch+var_40], offset acolorwhenpause
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmousepauseco
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset aredcomponentof
mov     [esp+4ch+var_40], offset apausered
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmopcolorred
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0ffh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset agreencomponent
mov     [esp+4ch+var_40], offset apausegreen
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmopcolorgree
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0ffh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset abluecomponento
mov     [esp+4ch+var_40], offset apauseblue
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmopcolorblue
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0c0h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0ffh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset anumberofstepst
mov     [esp+4ch+var_40], offset apausefadesteps
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmofadesteps
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 32h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0fah
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset ailluminatether_0
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset aredcomponentof_0
mov     [esp+4ch+var_40], offset aendred
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmoecolorred
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0c0h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0ffh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset agreencomponent_0
mov     [esp+4ch+var_40], offset aendgreen
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmoecolorgree
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0c0h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0ffh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset abluecomponento_0
mov     [esp+4ch+var_40], offset aendblue
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmoecolorblue
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0c0h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0ffh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset anumberofstepst_0
mov     [esp+4ch+var_40], offset aendfadesteps
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmoefadesteps
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 32h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0fah
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset admxoptions
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset ahowmanyatmolig
mov     [esp+4ch+var_40], offset acountofatmolig
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmodmxchannel
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 5
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 40h
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 80h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset adefineherethed
mov     [esp+4ch+var_40], offset admxaddressfore
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmodmxchbase
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset a036912
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset amomolightoptio
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset adependingonyou
mov     [esp+4ch+var_40], offset acountofchannel
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmomomochanne
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 3
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 4
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 3
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset afnordlichtopti
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset adependingonthe
mov     [esp+4ch+var_40], offset acountoffnordli
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmofnordlicht
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 2
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0feh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset azonelayoutfort
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset anumberofzoneso
mov     [esp+4ch+var_40], offset anumberofzoneso_0
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmozonestop
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 10h
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset anumberofzoneso_1
mov     [esp+4ch+var_40], offset anumberofzoneso_2
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmozonesbotto
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 10h
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset aleftandrightsi
mov     [esp+4ch+var_40], offset azonesonleftrig
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmozoneslr
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 10h
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 60h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset aitcontainsthea
mov     [esp+4ch+var_40], offset acalculateaaver
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmozonesummar
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset asettingsforthe
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset aincreasingthis
mov     [esp+4ch+var_40], offset aedgeweightning
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmoedgeweight
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 3
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 1eh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset aoverallbrightn
mov     [esp+4ch+var_40], offset abrightness
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmobrightness
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 64h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 12ch
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 32h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset apixelswithasat
mov     [esp+4ch+var_40], offset adarknesslimit
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmodarknessli
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 3
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0ah
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset ausedforstatist
mov     [esp+4ch+var_40], offset ahuewindowing
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmohuewinsize
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 3
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 5
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset ausedforstatist
mov     [esp+4ch+var_40], offset asatwindowing
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmosatwinsize
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 3
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 5
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset adefinesthehowt
mov     [esp+4ch+var_40], offset aoutputcolorfil
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmofiltermode
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], offset off_6322c038
mov     [esp+4ch+var_3c], offset dword_6322c00c
mov     [esp+4ch+var_40], 3
mov     [esp+4ch+var_44], 100fh
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset atimeittakesunt
mov     [esp+4ch+var_40], offset afilterlengthms
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmomeanlength
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 12ch
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 1388h
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 12ch
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset ahowmuchacolorh
mov     [esp+4ch+var_40], offset afilterthreshol
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmomeanthresh
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 28h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 64h
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset afiltersmoothne
mov     [esp+4ch+var_40], offset afiltersmoothne_0
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmopercentnew
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 32h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 64h
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset ahelpstogetthev
mov     [esp+4ch+var_40], offset aframedelayms
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmoframedelay
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 12h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0c8h
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset achangechannela
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset amapsthehardwar
mov     [esp+4ch+var_40], offset achannel0summar
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmochannel0
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 4
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], offset off_6322c0a8
mov     [esp+4ch+var_3c], offset dword_6322c044
mov     [esp+4ch+var_40], 6
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_44], 100fh
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset amapsthehardwar
mov     [esp+4ch+var_40], offset achannel1left
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmochannel1
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 3
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], offset off_6322c0a8
mov     [esp+4ch+var_3c], offset dword_6322c044
mov     [esp+4ch+var_40], 6
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_44], 100fh
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset amapsthehardwar
mov     [esp+4ch+var_40], offset achannel2right
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmochannel2
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], offset off_6322c0a8
mov     [esp+4ch+var_3c], offset dword_6322c044
mov     [esp+4ch+var_40], 6
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_44], 100fh
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset amapsthehardwar
mov     [esp+4ch+var_40], offset achannel3top
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmochannel3
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], offset off_6322c0a8
mov     [esp+4ch+var_3c], offset dword_6322c044
mov     [esp+4ch+var_40], 6
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_44], 100fh
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset amapsthehardwar
mov     [esp+4ch+var_40], offset achannel4bottom
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmochannel4
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 2
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], offset off_6322c0a8
mov     [esp+4ch+var_3c], offset dword_6322c044
mov     [esp+4ch+var_40], 6
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_44], 100fh
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 80h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset afordeviceswith
mov     [esp+4ch+var_40], offset achannelzoneass
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmochannels
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset byte_6322bad5
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset aadjustthewhite
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 60h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset ashouldthebuild
mov     [esp+4ch+var_40], offset ausesoftwarewhi
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmowhiteadj
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset aredvalueofapur
mov     [esp+4ch+var_40], offset awhitered
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmowhitered
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0ffh
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0ffh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset agreenvalueofap
mov     [esp+4ch+var_40], offset awhitegreen
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmowhitegreen
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0ffh
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0ffh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset abluevalueofapu
mov     [esp+4ch+var_40], offset awhiteblue
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmowhiteblue
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0ffh
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], edx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 0ffh
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_40], offset achangegradient
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8ch
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset adefinesasmallb
mov     [esp+4ch+var_40], offset azone0topgradie
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_44], 1003h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmogradientzo_0
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8ch
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset adefinesasmallb
mov     [esp+4ch+var_40], offset azone1rightgrad
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_44], 1003h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmogradientzo_1
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8ch
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset adefinesasmallb
mov     [esp+4ch+var_40], offset azone2bottomgra
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_44], 1003h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmogradientzo_2
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8ch
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset adefinesasmallb
mov     [esp+4ch+var_40], offset azone3leftgradi
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_44], 1003h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmogradientzo_3
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8ch
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset adefinesasmallb
mov     [esp+4ch+var_40], offset azone4summarygr
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_44], 1003h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmogradientzo_4
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ecx
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 8eh
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset anowpreferredop
mov     [esp+4ch+var_40], offset agradientbitmap
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmogradientpa
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset athewidthofthem
mov     [esp+4ch+var_40], offset aextractedimage
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_44], 1003h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebp
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmowidth
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], eax
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 200h
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 40h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset atheheightofthe
mov     [esp+4ch+var_40], offset aextractedimage_0
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], ebp
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_44], 1003h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     eax, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmoheight
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], eax
call    ebx
mov     ecx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], 30h
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1001h
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
mov     ebp, [esp+4ch+var_24]
mov     [esp+4ch+var_38], 180h
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_40], 30h
mov     [esp+4ch+var_48], ebp
mov     ebp, 0ffffffffh
mov     [esp+4ch+var_3c], 0
mov     [esp+4ch+var_44], 1002h
mov     [esp+4ch+var_4c], esi
call    ebx
mov     [esp+4ch+var_3c], edi
mov     [esp+4ch+var_40], 60h
mov     [esp+4ch+var_44], 1
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edi, [esp+4ch+var_24]
mov     [esp+4ch+var_3c], offset amakesthesample
mov     [esp+4ch+var_40], offset amarkanalyzedpi
mov     [esp+4ch+var_44], 100ch
mov     [esp+4ch+var_48], edi
mov     [esp+4ch+var_4c], esi
call    ebx
mov     edx, [esp+4ch+var_24]
mov     [esp+4ch+var_40], offset aatmoshowdots
mov     [esp+4ch+var_44], 1000h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edx
call    ebx
mov     ecx, [esp+4ch+var_28]
lea     eax, [esp+4ch+var_20]
mov     [esp+4ch+var_20], offset aatmo
mov     [esp+4ch+var_3c], eax
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_44], 101h
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], esi
call    ebx
test    eax, eax
jnz     loc_63205e86
mov     edi, [esp+4ch+var_28]
mov     [esp+4ch+var_40], offset sub_63202de0
mov     [esp+4ch+var_44], 104h
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edi
call    ebx
test    eax, eax
jnz     loc_63205e86
mov     ebp, [esp+4ch+var_28]
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_40], offset loc_63202190
mov     [esp+4ch+var_44], 105h
mov     [esp+4ch+var_48], ebp
call    ebx
cmp     eax, 1
sbb     ebp, ebp
add     esp, 3ch
not     ebp
pop     ebx
mov     eax, ebp
pop     esi
pop     edi
pop     ebp
retn
mov     eax, offset acopyrightcthev
retn
mov     eax, offset alicensedundert
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     dword ptr [eax+4], 0
mov     [eax], edx
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
mov     dword ptr [eax+14h], 0
mov     dword ptr [eax+18h], 0
mov     dword ptr [eax+1ch], 0
mov     dword ptr [eax+20h], 0
mov     dword ptr [eax+24h], 0
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+28h], 0
mov     dword ptr [eax+2ch], 0
mov     dword ptr [eax+30h], 0ffffffffh
mov     dword ptr [eax+34h], 0ffffffffh
mov     dword ptr [eax+38h], 0ffffffffh
mov     dword ptr [eax+3ch], 0ffffffffh
mov     dword ptr [eax+40h], 0ffffffffh
mov     dword ptr [eax+44h], 0ffffffffh
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_632083f7
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_63208406
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
mov     eax, [ebx+10h]
test    eax, eax
jz      short loc_63208415
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
mov     eax, [ebx+14h]
test    eax, eax
jz      short loc_63208424
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
mov     eax, [ebx+18h]
test    eax, eax
jz      short loc_63208433
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
mov     eax, [ebx+1ch]
test    eax, eax
jz      short loc_63208442
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
mov     eax, [ebx+20h]
test    eax, eax
jz      short loc_63208451
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
mov     eax, [ebx+24h]
test    eax, eax
jz      short loc_63208460
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
mov     eax, [ebx+8]
test    eax, eax
jz      short loc_6320846f
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_6320847e
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
mov     eax, [ebx+2ch]
test    eax, eax
jz      short loc_63208492
mov     [esp+1ch+arg_0], eax
add     esp, 18h
pop     ebx
jmp     sub_63222da0
add     esp, 18h
pop     ebx
retn
rep retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 1ch
mov     edx, [esp+2ch+arg_4]
mov     esi, [esp+2ch+arg_8]
mov     ebx, [esp+2ch+arg_c]
mov     [esp+2ch+val], 0
shl     edx, 2
mov     [esp+2ch+size], edx
mov     [esp+2ch+var_2c], esi
call    memset
mov     eax, [esp+2ch+arg_4]
xor     ecx, ecx
test    eax, eax
jle     loc_63208583
xor     edx, edx
xor     eax, eax
lea     esi, [esi+0]
mov     edi, [ebx+edx*4]
cmp     edi, eax
jle     short loc_632084fc
mov     [esi+ecx*4], edx
mov     eax, edi
add     edx, 1
mov     edi, [ebx+edx*4]
cmp     edi, eax
jle     short loc_6320850b
mov     [esi+ecx*4], edx
mov     eax, edi
lea     ebp, [edx+1]
mov     edi, [ebx+ebp*4]
cmp     edi, eax
jle     short loc_6320851a
mov     [esi+ecx*4], ebp
mov     eax, edi
lea     ebp, [edx+2]
mov     edi, [ebx+ebp*4]
cmp     edi, eax
jle     short loc_63208529
mov     [esi+ecx*4], ebp
mov     eax, edi
lea     ebp, [edx+3]
mov     edi, [ebx+ebp*4]
cmp     edi, eax
jle     short loc_63208538
mov     [esi+ecx*4], ebp
mov     eax, edi
lea     ebp, [edx+4]
mov     edi, [ebx+ebp*4]
cmp     edi, eax
jle     short loc_63208547
mov     [esi+ecx*4], ebp
mov     eax, edi
lea     ebp, [edx+5]
mov     edi, [ebx+ebp*4]
cmp     edi, eax
jle     short loc_63208556
mov     [esi+ecx*4], ebp
mov     eax, edi
lea     ebp, [edx+6]
mov     edi, [ebx+ebp*4]
cmp     edi, eax
jle     short loc_63208565
mov     [esi+ecx*4], ebp
mov     eax, edi
add     edx, 7
cmp     edx, 100h
jnz     short loc_632084f0
add     ebx, 400h
add     ecx, 1
cmp     ecx, [esp+2ch+arg_4]
jnz     loc_632084e8
add     esp, 1ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     esp, 1ch
mov     [esp+1ch+var_10], ebx
movzx   ebx, [esp+1ch+arg_5]
mov     [esp+1ch+var_c], esi
movzx   esi, [esp+1ch+arg_4]
mov     [esp+1ch+var_8], edi
movzx   edi, [esp+1ch+arg_6]
mov     [esp+1ch+var_4], ebp
mov     ebp, [esp+1ch+arg_0]
cmp     ebx, esi
mov     ecx, esi
cmovge  ecx, ebx
mov     eax, esi
cmp     ecx, edi
cmovl   ecx, edi
cmp     ebx, esi
cmovle  eax, ebx
mov     edx, ecx
cmp     eax, edi
cmovg   eax, edi
sub     edx, eax
mov     [ebp+2], cl
mov     [esp+1ch+var_1c], edx
jz      short loc_63208651
mov     eax, [esp+1ch+var_1c]
shl     eax, 8
sub     eax, [esp+1ch+var_1c]
mov     edx, eax
sar     edx, 1fh
idiv    ecx
mov     [esp+1ch+var_18], eax
mov     eax, ecx
sar     eax, 1
cmp     edx, eax
mov     eax, [esp+1ch+var_1c]
setnl   dl
add     dl, byte ptr [esp+1ch+var_18]
lea     eax, [eax+eax*2]
mov     [ebp+1], dl
mov     edx, ecx
sub     edx, ebx
add     edx, eax
mov     [esp+1ch+var_14], edx
mov     edx, ecx
sub     edx, edi
add     edx, eax
cmp     ecx, esi
mov     [esp+1ch+var_18], edx
lea     edx, [eax+eax]
mov     [esp+1ch+var_1c], edx
jz      short loc_63208660
mov     edx, ecx
sub     edx, esi
add     eax, edx
cmp     ecx, ebx
jz      short loc_632086a0
xor     edx, edx
cmp     ecx, edi
jz      loc_632086c8
mov     [ebp+0], dl
mov     eax, ebp
mov     ebx, [esp+1ch+var_10]
mov     esi, [esp+1ch+var_c]
mov     edi, [esp+1ch+var_8]
mov     ebp, [esp+1ch+var_4]
add     esp, 1ch
retn    4
mov     byte ptr [ebp+1], 0
xor     edx, edx
jmp     short loc_63208636
mov     esi, [esp+1ch+var_18]
sub     esi, [esp+1ch+var_14]
mov     ebx, [esp+1ch+var_1c]
mov     eax, esi
shl     eax, 8
sub     eax, esi
mov     edx, eax
sar     edx, 1fh
idiv    [esp+1ch+var_1c]
sar     ebx, 1
cmp     edx, ebx
setnl   cl
movzx   edx, cl
add     edx, eax
test    edx, edx
js      short loc_63208697
cmp     edx, 0ffh
jle     short loc_63208636
add     edx, 1
jmp     short loc_63208636
sub     edx, 1
jmp     short loc_63208636
mov     esi, eax
mov     ebx, [esp+1ch+var_1c]
sub     esi, [esp+1ch+var_18]
mov     eax, esi
shl     eax, 8
sub     eax, esi
mov     edx, eax
sar     edx, 1fh
idiv    [esp+1ch+var_1c]
sar     ebx, 1
cmp     edx, ebx
setnl   cl
movzx   edi, cl
lea     edx, [eax+edi+55h]
jmp     short loc_63208686
mov     esi, [esp+1ch+var_14]
mov     ebx, [esp+1ch+var_1c]
sub     esi, eax
mov     eax, esi
shl     eax, 8
sub     eax, esi
mov     edx, eax
sar     edx, 1fh
idiv    [esp+1ch+var_1c]
sar     ebx, 1
cmp     edx, ebx
setnl   cl
movzx   edi, cl
lea     edx, [eax+edi+0aah]
jmp     short loc_63208686
sub     esp, 14h
mov     eax, [esp+14h+arg_0]
movzx   edx, [esp+14h+arg_5]
movzx   ecx, [esp+14h+arg_4]
mov     byte ptr [eax], 0
mov     byte ptr [eax+1], 0
mov     byte ptr [eax+2], 0
mov     [esp+14h+var_e], dx
movzx   edx, [esp+14h+arg_6]
fild    [esp+14h+var_e]
fld     ds:flt_6322c3e0
fmul    st(1), st
mov     [esp+14h+var_e], dx
fild    [esp+14h+var_e]
fmulp   st(1), st
fldz
fcomip  st, st(2)
jz      loc_632088c0
movzx   ecx, cl
mov     [esp+14h+var_e], cx
fild    [esp+14h+var_e]
fmul    ds:flt_6322c3ec
fld     ds:flt_6322c3f0
fcomip  st, st(1)
jz      loc_63208840
fnstcw  [esp+14h+var_6]
movzx   edx, [esp+14h+var_6]
mov     dh, 0ch
mov     [esp+14h+var_8], dx
fldcw   [esp+14h+var_8]
fist    [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     edx, [esp+14h+var_c]
mov     [esp+14h+var_c], edx
test    edx, edx
fild    [esp+14h+var_c]
fsubp   st(1), st
fld1
fld     st
fsub    st, st(4)
fmul    st, st(3)
fld1
fchs
fadd    st, st(3)
fmul    st, st(5)
fadd    st, st(2)
fmul    st, st(4)
jz      loc_6320885c
fxch    st(5)
fmulp   st(3), st
fxch    st(1)
cmp     edx, 1
fsubrp  st(2), st
fxch    st(1)
fmul    st, st(2)
jz      loc_63208900
cmp     edx, 2
jz      loc_63208961
cmp     edx, 3
jz      loc_632089c0
cmp     edx, 4
jz      loc_63208a20
fstp    st(3)
fxch    st(1)
fxch    st(2)
fld     ds:flt_6322c3e4
fmul    st(3), st
fld     ds:flt_6322c3e8
fadd    st(4), st
fxch    st(4)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     edx, [esp+14h+var_c]
fmul    st(2), st
fxch    st(2)
mov     [eax], dl
fadd    st, st(3)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     ecx, [esp+14h+var_c]
fmulp   st(1), st
mov     [eax+1], cl
faddp   st(1), st
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     edx, [esp+14h+var_c]
mov     [eax+2], dl
add     esp, 14h
retn    4
fstp    st
fld1
fsubrp  st(2), st
fnstcw  [esp+14h+var_6]
fmul    st(1), st
movzx   ecx, [esp+14h+var_6]
mov     ch, 0ch
fld     st(1)
mov     [esp+14h+var_8], cx
jmp     short loc_63208862
fstp    st(3)
fstp    st(4)
fstp    st
fld     ds:flt_6322c3e4
fmul    st(2), st
fld     ds:flt_6322c3e8
fadd    st(3), st
fxch    st(3)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     ecx, [esp+14h+var_c]
fmul    st(1), st
fxch    st(1)
mov     [eax], cl
fadd    st, st(2)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     edx, [esp+14h+var_c]
fmulp   st(2), st
mov     [eax+1], dl
faddp   st(1), st
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     ecx, [esp+14h+var_c]
mov     [eax+2], cl
add     esp, 14h
retn    4
fstp    st(1)
fmul    ds:flt_6322c3e4
fnstcw  [esp+14h+var_6]
movzx   edx, [esp+14h+var_6]
fadd    ds:flt_6322c3e8
mov     dh, 0ch
mov     [esp+14h+var_8], dx
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     ecx, [esp+14h+var_c]
mov     [eax], cl
mov     [eax+1], cl
mov     [eax+2], cl
add     esp, 14h
retn    4
fstp    st(3)
fxch    st(1)
fxch    st(2)
fld     ds:flt_6322c3e4
fmul    st(1), st
fld     ds:flt_6322c3e8
fadd    st(2), st
fxch    st(2)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     edx, [esp+14h+var_c]
fmul    st(3), st
fxch    st(3)
mov     [eax], dl
fadd    st, st(1)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
fxch    st(1)
mov     ecx, [esp+14h+var_c]
fmulp   st(2), st
mov     [eax+1], cl
faddp   st(1), st
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     edx, [esp+14h+var_c]
mov     [eax+2], dl
jmp     loc_632088b6
fstp    st
fld     ds:flt_6322c3e4
fmul    st(1), st
fld     ds:flt_6322c3e8
fadd    st(2), st
fxch    st(2)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     ecx, [esp+14h+var_c]
fmul    st(2), st
fxch    st(2)
mov     [eax], cl
fadd    st, st(1)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
fxch    st(2)
mov     edx, [esp+14h+var_c]
fmulp   st(1), st
mov     [eax+1], dl
faddp   st(1), st
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     ecx, [esp+14h+var_c]
mov     [eax+2], cl
jmp     loc_632088b6
fstp    st(3)
fxch    st(1)
fxch    st(2)
fld     ds:flt_6322c3e4
fmul    st(2), st
fld     ds:flt_6322c3e8
fadd    st(3), st
fxch    st(3)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     edx, [esp+14h+var_c]
fmul    st(1), st
fxch    st(1)
mov     [eax], dl
fadd    st, st(2)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     ecx, [esp+14h+var_c]
fmulp   st(2), st
mov     [eax+1], cl
faddp   st(1), st
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     edx, [esp+14h+var_c]
mov     [eax+2], dl
jmp     loc_632088b6
fstp    st
fld     ds:flt_6322c3e4
fmul    st(3), st
fld     ds:flt_6322c3e8
fadd    st(4), st
fxch    st(4)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     ecx, [esp+14h+var_c]
fmul    st(1), st
fxch    st(1)
mov     [eax], cl
fadd    st, st(3)
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     edx, [esp+14h+var_c]
fmulp   st(1), st
mov     [eax+1], dl
faddp   st(1), st
fldcw   [esp+14h+var_8]
fistp   [esp+14h+var_c]
fldcw   [esp+14h+var_6]
mov     ecx, [esp+14h+var_c]
mov     [eax+2], cl
jmp     loc_632088b6
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 9ch
mov     ebx, [esp+0ach+arg_0]
mov     eax, [ebx]
mov     esi, [eax+0d8h]
mov     edx, [eax+0d0h]
mov     ecx, [eax+0e4h]
mov     edi, [eax+0d4h]
mov     ebp, [eax+0e0h]
mov     [esp+0ach+var_50], esi
mov     [esp+0ach+var_64], edx
mov     [esp+0ach+var_68], ecx
mov     [esp+0ach+var_38], edi
mov     [esp+0ach+var_48], ebp
mov     [esp+0ach+var_ac], eax
call    sub_6320a710
mov     esi, eax
shl     esi, 2
cmp     eax, [ebx+44h]
mov     [esp+0ach+var_5c], eax
jz      loc_63208d90
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_63208aee
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_63208afd
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     eax, [ebx+10h]
test    eax, eax
jz      short loc_63208b0c
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     eax, [ebx+14h]
test    eax, eax
jz      short loc_63208b1b
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     eax, [ebx+18h]
test    eax, eax
jz      short loc_63208b2a
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     eax, [ebx+1ch]
test    eax, eax
jz      short loc_63208b39
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     eax, [ebx+20h]
test    eax, eax
jz      short loc_63208b48
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     eax, [ebx+24h]
test    eax, eax
jz      short loc_63208b57
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     eax, [ebx+8]
test    eax, eax
jz      short loc_63208b66
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_63208b75
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     eax, [ebx+2ch]
test    eax, eax
jz      short loc_63208b84
mov     [esp+0ach+var_ac], eax
call    sub_63222da0
mov     edi, [esp+0ach+var_5c]
lea     eax, [edi+edi*2]
shl     eax, 0ch
mov     [esp+0ach+var_ac], eax
call    sub_63222dd0
mov     esi, [esp+0ach+var_5c]
shl     esi, 2
mov     [ebx+4], eax
mov     [esp+0ach+var_ac], esi
call    sub_63222dd0
mov     ebp, [esp+0ach+var_5c]
test    ebp, ebp
mov     [ebx+8], eax
jle     loc_63208d08
mov     edi, [esp+0ach+var_5c]
xor     edx, edx
xor     ecx, ecx
sub     edi, 1
and     edi, 7
jz      loc_63208ced
mov     ebp, [ebx+4]
cmp     edi, 1
mov     ecx, 1
mov     [eax+edx*4], ebp
mov     edx, 3000h
mov     eax, [ebx+8]
jz      loc_63208ced
cmp     edi, 2
jz      short loc_63208c62
cmp     edi, 3
jz      short loc_63208c4e
cmp     edi, 4
jz      short loc_63208c3a
cmp     edi, 5
jz      short loc_63208c26
cmp     edi, 6
xchg    ax, ax
jz      short loc_63208c12
add     edx, [ebx+4]
mov     [eax+ecx*4], edx
mov     eax, [ebx+8]
mov     cl, 2
mov     edx, 6000h
mov     edi, [ebx+4]
add     edi, edx
add     edx, 3000h
mov     [eax+ecx*4], edi
mov     eax, [ebx+8]
add     ecx, 1
mov     ebp, [ebx+4]
add     ebp, edx
add     edx, 3000h
mov     [eax+ecx*4], ebp
mov     eax, [ebx+8]
add     ecx, 1
mov     edi, [ebx+4]
add     edi, edx
add     edx, 3000h
mov     [eax+ecx*4], edi
mov     eax, [ebx+8]
add     ecx, 1
mov     ebp, [ebx+4]
add     ebp, edx
add     edx, 3000h
mov     [eax+ecx*4], ebp
mov     eax, [ebx+8]
add     ecx, 1
mov     edi, [ebx+4]
add     edi, edx
add     edx, 3000h
mov     [eax+ecx*4], edi
add     ecx, 1
mov     eax, [ebx+8]
jmp     short loc_63208ced
mov     edi, [ebx+8]
add     ebp, [ebx+4]
mov     [edi+eax*4], ebp
mov     eax, [ebx+8]
lea     ebp, [edx+6000h]
add     ebp, [ebx+4]
mov     [eax+ecx*4+8], ebp
mov     edi, [ebx+8]
lea     eax, [edx+9000h]
add     eax, [ebx+4]
mov     [edi+ecx*4+0ch], eax
mov     ebp, [ebx+8]
lea     eax, [edx+0c000h]
add     eax, [ebx+4]
mov     [ebp+ecx*4+10h], eax
mov     edi, [ebx+8]
lea     ebp, [edx+0f000h]
add     ebp, [ebx+4]
mov     [edi+ecx*4+14h], ebp
mov     eax, [ebx+8]
lea     ebp, [edx+12000h]
add     ebp, [ebx+4]
mov     [eax+ecx*4+18h], ebp
mov     edi, [ebx+8]
lea     eax, [edx+15000h]
add     eax, [ebx+4]
add     edx, 18000h
mov     [edi+ecx*4+1ch], eax
mov     eax, [ebx+8]
add     ecx, 8
mov     ebp, [ebx+4]
add     ebp, edx
mov     [eax+ecx*4], ebp
lea     eax, [ecx+1]
cmp     eax, [esp+0ach+var_5c]
lea     ebp, [edx+3000h]
jnz     loc_63208c78
mov     ebp, [esp+0ach+var_5c]
shl     ebp, 0ah
mov     [esp+0ach+var_ac], ebp
call    sub_63222dd0
mov     [ebx+0ch], eax
mov     [esp+0ach+var_ac], ebp
call    sub_63222dd0
mov     [ebx+10h], eax
mov     [esp+0ach+var_ac], esi
call    sub_63222dd0
mov     [ebx+14h], eax
mov     [esp+0ach+var_ac], esi
call    sub_63222dd0
mov     edx, [ebx+14h]
mov     [ebx+18h], eax
mov     [esp+0ach+var_ac], edx
mov     [esp+0ach+size], esi
mov     [esp+0ach+val], 0
call    memset
mov     [esp+0ach+var_ac], ebp
call    sub_63222dd0
mov     [ebx+1ch], eax
mov     [esp+0ach+var_ac], ebp
call    sub_63222dd0
mov     [ebx+20h], eax
mov     [esp+0ach+var_ac], esi
call    sub_63222dd0
mov     [ebx+24h], eax
mov     [esp+0ach+var_ac], esi
call    sub_63222dd0
mov     [ebx+28h], eax
mov     [esp+0ach+var_ac], esi
call    sub_63222dd0
mov     ecx, [esp+0ach+var_5c]
mov     [ebx+44h], ecx
mov     [ebx+2ch], eax
mov     eax, [esp+0ach+var_64]
cmp     [ebx+30h], eax
jz      loc_6320a126
mov     eax, [ebx]
mov     ecx, [esp+0ach+var_5c]
xor     edi, edi
test    ecx, ecx
jle     loc_63208f62
mov     ebp, [esp+0ach+var_5c]
sub     ebp, 1
and     ebp, 3
jz      loc_6320a119
mov     [esp+0ach+val], 0
mov     [esp+0ach+var_ac], eax
call    sub_6320a6a0
test    eax, eax
jz      short loc_63208df2
mov     edx, [esp+0ach+var_64]
mov     ecx, [esp+0ach+var_68]
mov     [esp+0ach+var_a0], edx
mov     [esp+0ach+size], ecx
mov     edi, [ebx+8]
mov     edx, [edi]
mov     [esp+0ach+var_ac], eax
mov     [esp+0ach+val], edx
call    sub_6320f990
cmp     ebp, 1
mov     edi, 1
mov     eax, [ebx]
jz      loc_6320a119
cmp     ebp, 2
jz      short loc_63208e42
mov     [esp+0ach+val], 1
mov     [esp+0ach+var_ac], eax
call    sub_6320a6a0
test    eax, eax
jz      short loc_63208e3d
mov     ebp, [esp+0ach+var_64]
mov     edx, [esp+0ach+var_68]
mov     [esp+0ach+var_a0], ebp
mov     [esp+0ach+size], edx
mov     ecx, [ebx+8]
mov     ebp, [ecx+edi*4]
mov     [esp+0ach+var_ac], eax
mov     [esp+0ach+val], ebp
call    sub_6320f990
mov     eax, [ebx]
add     edi, 1
mov     [esp+0ach+val], edi
mov     [esp+0ach+var_ac], eax
call    sub_6320a6a0
test    eax, eax
jz      short loc_63208e74
mov     ecx, [esp+0ach+var_64]
mov     ebp, [esp+0ach+var_68]
mov     [esp+0ach+var_a0], ecx
mov     [esp+0ach+size], ebp
mov     edx, [ebx+8]
mov     ecx, [edx+edi*4]
mov     [esp+0ach+var_ac], eax
mov     [esp+0ach+val], ecx
call    sub_6320f990
add     edi, 1
mov     eax, [ebx]
mov     [esp+0ach+var_60], esi
mov     ebp, [esp+0ach+var_68]
jmp     loc_63208f21
mov     eax, [ebx]
mov     [esp+0ach+val], edi
mov     [esp+0ach+var_ac], eax
call    sub_6320a6a0
test    eax, eax
jz      short loc_63208eb6
mov     ecx, [esp+0ach+var_64]
mov     [esp+0ach+size], ebp
mov     [esp+0ach+var_a0], ecx
mov     edx, [ebx+8]
mov     esi, [edx+edi*4]
mov     [esp+0ach+var_ac], eax
mov     [esp+0ach+val], esi
call    sub_6320f990
mov     eax, [ebx]
lea     esi, [edi+1]
mov     [esp+0ach+val], esi
mov     [esp+0ach+var_ac], eax
call    sub_6320a6a0
test    eax, eax
jz      short loc_63208ee9
mov     ecx, [esp+0ach+var_64]
mov     [esp+0ach+size], ebp
mov     [esp+0ach+var_a0], ecx
mov     edx, [ebx+8]
mov     esi, [edx+esi*4]
mov     [esp+0ach+var_ac], eax
mov     [esp+0ach+val], esi
call    sub_6320f990
mov     eax, [ebx]
lea     esi, [edi+2]
mov     [esp+0ach+val], esi
mov     [esp+0ach+var_ac], eax
call    sub_6320a6a0
test    eax, eax
jz      short loc_63208f1c
mov     ecx, [esp+0ach+var_64]
mov     [esp+0ach+size], ebp
mov     [esp+0ach+var_a0], ecx
mov     edx, [ebx+8]
mov     esi, [edx+esi*4]
mov     [esp+0ach+var_ac], eax
mov     [esp+0ach+val], esi
call    sub_6320f990
mov     eax, [ebx]
add     edi, 3
mov     [esp+0ach+val], edi
mov     [esp+0ach+var_ac], eax
call    sub_6320a6a0
test    eax, eax
jz      short loc_63208f4f
mov     ecx, [esp+0ach+var_64]
mov     [esp+0ach+size], ebp
mov     [esp+0ach+var_a0], ecx
mov     edx, [ebx+8]
mov     esi, [edx+edi*4]
mov     [esp+0ach+var_ac], eax
mov     [esp+0ach+val], esi
call    sub_6320f990
add     edi, 1
cmp     edi, [esp+0ach+var_5c]
jnz     loc_63208e86
mov     esi, [esp+0ach+var_60]
mov     eax, [ebx]
mov     ebp, [esp+0ach+var_64]
mov     dword ptr [eax+140h], 0
mov     edx, [eax+0a4h]
mov     edi, [eax+0a8h]
mov     ecx, [esp+0ach+var_68]
mov     [ebx+30h], ebp
mov     ebp, [eax+0ach]
mov     [ebx+38h], edx
mov     [ebx+3ch], edi
mov     [ebx+34h], ecx
mov     [ebx+40h], ebp
mov     eax, [esp+0ach+var_50]
mov     ecx, [esp+0ach+var_5c]
mov     edx, [ebx+0ch]
mov     [esp+0ach+val], 0
lea     ebp, [eax+eax*4]
shl     ecx, 0ah
add     ebp, ebp
mov     [esp+0ach+var_3c], ecx
mov     [esp+0ach+size], ecx
mov     [esp+0ach+var_ac], edx
mov     [esp+0ach+var_50], ebp
call    memset
mov     edi, [ebx+28h]
mov     [esp+0ach+size], esi
mov     [esp+0ach+val], 0
mov     [esp+0ach+var_ac], edi
call    memset
mov     eax, [ebx+2ch]
mov     [esp+0ach+size], esi
mov     [esp+0ach+val], 0
mov     [esp+0ach+var_ac], eax
call    memset
mov     esi, [esp+0ach+var_5c]
mov     eax, [esp+0ach+arg_4]
mov     [esp+0ach+var_4c], 0
shl     esi, 2
mov     [esp+0ach+var_58], esi
lea     esi, [esi+0]
mov     esi, [esp+0ach+var_4c]
lea     edx, [eax+0c0h]
mov     [esp+0ach+var_54], edx
mov     [esp+0ach+var_64], esi
movzx   ecx, byte ptr [eax+2]
movzx   esi, cl
cmp     [esp+0ach+var_50], esi
mov     [esp+0ach+var_60], esi
jge     loc_632092a6
mov     edi, [esp+0ach+var_5c]
test    edi, edi
jle     loc_632092a6
mov     edx, [esp+0ach+var_58]
xor     edi, edi
mov     ebp, [ebx+0ch]
mov     esi, [ebx+8]
sub     edx, 4
shr     edx, 2
and     edx, 3
mov     [esp+0ach+var_44], ebp
mov     [esp+0ach+var_68], edx
jz      loc_6320a092
mov     ecx, [esi]
mov     edx, [esp+0ach+var_64]
movzx   edi, byte ptr [eax]
mov     ebp, [esp+0ach+var_44]
mov     ecx, [ecx+edx]
mov     edx, [esp+0ach+var_60]
imul    edx, ecx
add     [ebp+edi*4+0], edx
test    ecx, ecx
jle     short loc_63209095
mov     ebp, [ebx+28h]
mov     edi, [ebx+2ch]
movzx   ecx, byte ptr [eax+2]
add     [ebp+0], ecx
add     dword ptr [edi], 1
cmp     [esp+0ach+var_68], 1
mov     edi, 4
movzx   ecx, byte ptr [eax+2]
jz      loc_6320a092
cmp     [esp+0ach+var_68], 2
jz      short loc_632090fc
movzx   ebp, byte ptr [eax]
movzx   ecx, cl
mov     edx, [esi+4]
mov     [esp+0ach+var_68], ebp
mov     ebp, [esp+0ach+var_64]
mov     edx, [edx+ebp]
mov     ebp, [esp+0ach+var_44]
imul    ecx, edx
mov     [esp+0ach+var_60], edx
mov     edx, [esp+0ach+var_68]
add     [ebp+edx*4+400h], ecx
mov     edx, [esp+0ach+var_60]
test    edx, edx
jle     short loc_632090f5
mov     edx, [ebx+28h]
mov     ecx, [ebx+2ch]
movzx   ebp, byte ptr [eax+2]
add     edx, edi
add     ecx, edi
add     [edx], ebp
add     dword ptr [ecx], 1
movzx   ecx, byte ptr [eax+2]
add     edi, 4
movzx   edx, byte ptr [eax]
mov     ebp, edi
movzx   ecx, cl
shl     ebp, 6
add     ebp, edx
mov     edx, [esi+edi]
mov     [esp+0ach+var_68], ebp
mov     ebp, [esp+0ach+var_64]
mov     edx, [edx+ebp]
mov     ebp, [esp+0ach+var_44]
imul    ecx, edx
mov     [esp+0ach+var_60], edx
mov     edx, [esp+0ach+var_68]
add     [ebp+edx*4+0], ecx
mov     ecx, [esp+0ach+var_60]
test    ecx, ecx
jle     short loc_63209145
mov     edx, [ebx+28h]
mov     ecx, [ebx+2ch]
movzx   ebp, byte ptr [eax+2]
add     edx, edi
add     ecx, edi
add     [edx], ebp
add     dword ptr [ecx], 1
movzx   ecx, byte ptr [eax+2]
add     edi, 4
mov     edx, [esp+0ach+var_44]
mov     [esp+0ach+var_68], ebx
mov     byte ptr [esp+0ach+var_44], cl
jmp     loc_6320924c
movzx   ebp, byte ptr [eax]
mov     ebx, ecx
shl     ebx, 6
add     ebp, ebx
mov     ebx, [esi+edi+4]
mov     edi, [esp+0ach+var_64]
mov     ebx, [ebx+edi]
movzx   edi, byte ptr [eax+2]
imul    edi, ebx
add     [edx+ebp*4], edi
test    ebx, ebx
jle     short loc_6320919f
mov     edi, [esp+0ach+var_68]
movzx   ebx, byte ptr [eax+2]
mov     ebp, [edi+28h]
mov     edi, [esp+0ach+var_68]
add     ebp, ecx
add     [ebp+0], ebx
mov     ebx, [edi+2ch]
add     ebx, ecx
add     dword ptr [ebx], 1
movzx   ebp, byte ptr [eax]
lea     ebx, [ecx+4]
mov     edi, ebx
shl     edi, 6
add     edi, ebp
mov     ebp, [esp+0ach+var_64]
mov     [esp+0ach+var_44], edi
mov     edi, [esi+ecx+4]
mov     edi, [edi+ebp]
movzx   ebp, byte ptr [eax+2]
mov     [esp+0ach+var_60], edi
mov     edi, [esp+0ach+var_44]
imul    ebp, [esp+0ach+var_60]
add     [edx+edi*4], ebp
mov     ebp, [esp+0ach+var_60]
test    ebp, ebp
jle     short loc_632091f0
mov     ebp, [esp+0ach+var_68]
mov     edi, ebx
add     edi, [ebp+28h]
movzx   ebp, byte ptr [eax+2]
add     [edi], ebp
mov     edi, [esp+0ach+var_68]
add     ebx, [edi+2ch]
add     dword ptr [ebx], 1
movzx   ebp, byte ptr [eax]
lea     ebx, [ecx+8]
mov     edi, ebx
shl     edi, 6
add     edi, ebp
mov     ebp, [esp+0ach+var_64]
mov     [esp+0ach+var_44], edi
mov     edi, [esi+ecx+8]
mov     edi, [edi+ebp]
movzx   ebp, byte ptr [eax+2]
mov     [esp+0ach+var_60], edi
mov     edi, [esp+0ach+var_44]
imul    ebp, [esp+0ach+var_60]
add     [edx+edi*4], ebp
mov     edi, [esp+0ach+var_60]
test    edi, edi
jle     short loc_63209241
mov     ebp, [esp+0ach+var_68]
mov     edi, ebx
add     edi, [ebp+28h]
movzx   ebp, byte ptr [eax+2]
add     [edi], ebp
mov     edi, [esp+0ach+var_68]
add     ebx, [edi+2ch]
add     dword ptr [ebx], 1
lea     edi, [ecx+0ch]
movzx   ecx, byte ptr [eax+2]
mov     byte ptr [esp+0ach+var_44], cl
movzx   ebp, byte ptr [eax]
mov     ecx, edi
shl     ecx, 6
mov     ebx, [esi+edi]
add     ebp, ecx
mov     ecx, [esp+0ach+var_64]
mov     ebx, [ebx+ecx]
movzx   ecx, byte ptr [esp+0ach+var_44]
mov     [esp+0ach+var_60], ebx
mov     ebx, [esp+0ach+var_60]
imul    ecx, [esp+0ach+var_60]
add     [edx+ebp*4], ecx
test    ebx, ebx
jle     short loc_63209295
mov     ebx, [esp+0ach+var_68]
mov     ecx, edi
movzx   ebp, byte ptr [eax+2]
add     ecx, [ebx+28h]
mov     ebx, [esp+0ach+var_68]
add     [ecx], ebp
mov     ebp, edi
add     ebp, [ebx+2ch]
add     dword ptr [ebp+0], 1
lea     ecx, [edi+4]
cmp     ecx, [esp+0ach+var_58]
jnz     loc_63209160
mov     ebx, [esp+0ach+var_68]
add     eax, 3
add     [esp+0ach+var_64], 4
cmp     eax, [esp+0ach+var_54]
jnz     loc_63209022
add     [esp+0ach+var_4c], 100h
cmp     [esp+0ach+var_4c], 3000h
jnz     loc_63209010
mov     edi, [ebx+10h]
mov     esi, [esp+0ach+var_3c]
mov     [esp+0ach+val], 0
mov     [esp+0ach+var_ac], edi
mov     [esp+0ach+size], esi
call    memset
mov     ebp, [ebx]
mov     [esp+0ach+var_44], 0
mov     [esp+0ach+var_60], ebx
mov     ecx, [ebp+0dch]
mov     [esp+0ach+var_58], ecx
mov     eax, [esp+0ach+var_58]
neg     ecx
mov     [esp+0ach+var_40], ecx
add     eax, 1
mov     [esp+0ach+var_4c], eax
mov     edi, [esp+0ach+var_40]
cmp     [esp+0ach+var_58], edi
jl      loc_63209527
mov     ebx, [esp+0ach+var_44]
mov     ebp, [esp+0ach+var_44]
mov     [esp+0ach+var_64], edi
shl     ebx, 2
add     ebp, edi
mov     [esp+0ach+var_54], ebx
test    ebp, ebp
lea     edi, [ebp+100h]
js      short loc_6320934e
lea     edi, [ebp-100h]
cmp     ebp, 100h
cmovl   edi, ebp
mov     edx, [esp+0ach+var_5c]
test    edx, edx
jle     loc_63209511
mov     ebx, [esp+0ach+var_64]
mov     edx, [esp+0ach+var_60]
mov     eax, [esp+0ach+var_64]
mov     ecx, [esp+0ach+var_54]
sar     ebx, 1fh
mov     esi, [edx+0ch]
xor     eax, ebx
sub     eax, ebx
mov     ebx, [esp+0ach+var_4c]
add     ecx, [edx+10h]
lea     edi, [esi+edi*4]
mov     esi, [esp+0ach+var_5c]
lea     edx, [edi+400h]
sub     ebx, eax
mov     eax, [edi]
mov     [esp+0ach+var_68], ecx
sub     esi, 1
and     esi, 7
imul    eax, ebx
add     [ecx], eax
mov     ecx, 1
mov     eax, [esp+0ach+var_68]
add     eax, 400h
cmp     ecx, [esp+0ach+var_5c]
jz      loc_63209511
test    esi, esi
jz      loc_63209489
cmp     esi, 1
jz      loc_6320946a
cmp     esi, 2
jz      loc_63209455
cmp     esi, 3
jz      short loc_63209440
cmp     esi, 4
jz      short loc_6320942b
cmp     esi, 5
jz      short loc_63209416
cmp     esi, 6
nop
jz      short loc_63209401
mov     edx, [edi+400h]
mov     ecx, 2
imul    edx, ebx
add     [eax], edx
mov     eax, [esp+0ach+var_68]
lea     edx, [edi+800h]
add     eax, 800h
mov     edi, [edx]
add     ecx, 1
add     edx, 400h
imul    edi, ebx
add     [eax], edi
add     eax, 400h
mov     esi, [edx]
add     ecx, 1
add     edx, 400h
imul    esi, ebx
add     [eax], esi
add     eax, 400h
mov     edi, [edx]
add     ecx, 1
add     edx, 400h
imul    edi, ebx
add     [eax], edi
add     eax, 400h
mov     esi, [edx]
add     ecx, 1
add     edx, 400h
imul    esi, ebx
add     [eax], esi
add     eax, 400h
mov     edi, [edx]
add     ecx, 1
add     edx, 400h
imul    edi, ebx
add     [eax], edi
add     eax, 400h
mov     esi, [edx]
add     ecx, 1
add     edx, 400h
imul    esi, ebx
add     [eax], esi
add     eax, 400h
cmp     ecx, [esp+0ach+var_5c]
jz      loc_63209511
mov     esi, [edx]
add     ecx, 8
imul    esi, ebx
add     [eax], esi
mov     edi, [edx+400h]
imul    edi, ebx
add     [eax+400h], edi
mov     esi, [edx+800h]
imul    esi, ebx
add     [eax+800h], esi
mov     edi, [edx+0c00h]
imul    edi, ebx
add     [eax+0c00h], edi
mov     esi, [edx+1000h]
imul    esi, ebx
add     [eax+1000h], esi
mov     edi, [edx+1400h]
imul    edi, ebx
add     [eax+1400h], edi
mov     esi, [edx+1800h]
imul    esi, ebx
add     [eax+1800h], esi
mov     edi, [edx+1c00h]
add     edx, 2000h
imul    edi, ebx
add     [eax+1c00h], edi
add     eax, 2000h
cmp     ecx, [esp+0ach+var_5c]
jnz     loc_63209489
add     [esp+0ach+var_64], 1
add     ebp, 1
mov     ecx, [esp+0ach+var_58]
cmp     [esp+0ach+var_64], ecx
jle     loc_63209335
add     [esp+0ach+var_44], 1
cmp     [esp+0ach+var_44], 100h
jnz     loc_63209312
mov     ebx, [esp+0ach+var_60]
mov     edx, [esp+0ach+var_5c]
mov     edi, [ebx+10h]
mov     [esp+0ach+var_a0], edi
mov     eax, [ebx+18h]
mov     [esp+0ach+val], edx
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+size], eax
call    sub_632084b0
mov     ebp, [esp+0ach+var_5c]
test    ebp, ebp
jle     loc_63209769
mov     esi, [esp+0ach+var_5c]
xor     eax, eax
mov     edi, [ebx+14h]
mov     edx, [ebx+18h]
mov     ebp, [ebx+10h]
sub     esi, 1
fld     ds:flt_6322c3f4
and     esi, 3
mov     ecx, [edi]
mov     [esp+0ach+var_64], esi
mov     esi, [edx]
fild    dword ptr [ebp+ecx*4+0]
fild    dword ptr [ebp+esi*4+0]
fdivp   st(1), st
fcomip  st, st(1)
jbe     loc_6320a0a3
mov     [edx+eax*4], ecx
mov     eax, 1
cmp     eax, [esp+0ach+var_5c]
jz      loc_63209763
mov     esi, [esp+0ach+var_64]
test    esi, esi
jz      loc_63209671
cmp     [esp+0ach+var_64], 1
jz      short loc_6320962a
cmp     [esp+0ach+var_64], 2
jz      short loc_632095ed
mov     ecx, [edi+eax*4]
mov     esi, [edx+eax*4]
fild    dword ptr [ebp+ecx*4+400h]
fild    dword ptr [ebp+esi*4+400h]
fdivp   st(1), st
fcomip  st, st(1)
ja      loc_6320a111
mov     [edi+eax*4], esi
add     eax, 1
mov     ecx, [edx+eax*4]
mov     esi, eax
shl     esi, 8
mov     [esp+0ach+var_64], esi
mov     esi, [edi+eax*4]
mov     [esp+0ach+var_68], ecx
mov     ecx, [esp+0ach+var_64]
add     ecx, esi
fild    dword ptr [ebp+ecx*4+0]
mov     ecx, [esp+0ach+var_68]
add     ecx, [esp+0ach+var_64]
fild    dword ptr [ebp+ecx*4+0]
fdivp   st(1), st
fcomip  st, st(1)
ja      loc_6320a0b3
mov     ecx, [esp+0ach+var_68]
mov     [edi+eax*4], ecx
add     eax, 1
mov     ecx, [edx+eax*4]
mov     esi, eax
shl     esi, 8
mov     [esp+0ach+var_64], esi
mov     esi, [edi+eax*4]
mov     [esp+0ach+var_68], ecx
mov     ecx, [esp+0ach+var_64]
add     ecx, esi
fild    dword ptr [ebp+ecx*4+0]
mov     ecx, [esp+0ach+var_68]
add     ecx, [esp+0ach+var_64]
fild    dword ptr [ebp+ecx*4+0]
fdivp   st(1), st
fcomip  st, st(1)
ja      loc_6320a0ab
mov     ecx, [esp+0ach+var_68]
mov     [edi+eax*4], ecx
add     eax, 1
cmp     eax, [esp+0ach+var_5c]
jz      loc_63209767
mov     [esp+0ach+var_60], ebx
mov     ebx, eax
mov     ecx, [edx+eax*4]
shl     ebx, 8
mov     [esp+0ach+var_64], ebx
mov     ebx, [edi+eax*4]
mov     esi, [esp+0ach+var_64]
add     esi, ebx
fild    dword ptr [ebp+esi*4+0]
mov     esi, [esp+0ach+var_64]
add     esi, ecx
fild    dword ptr [ebp+esi*4+0]
fdivp   st(1), st
fcomip  st, st(1)
jbe     loc_6320a0bb
mov     [edx+eax*4], ebx
add     eax, 1
mov     ecx, [edi+eax*4]
mov     esi, eax
shl     esi, 8
mov     ebx, [edx+eax*4]
mov     [esp+0ach+var_64], esi
add     esi, ecx
fild    dword ptr [ebp+esi*4+0]
mov     esi, [esp+0ach+var_64]
add     esi, ebx
fild    dword ptr [ebp+esi*4+0]
fdivp   st(1), st
fcomip  st, st(1)
jbe     loc_6320a0c5
mov     [edx+eax*4], ecx
lea     ecx, [eax+1]
mov     esi, [edx+ecx*4]
mov     ebx, ecx
shl     ebx, 8
mov     [esp+0ach+var_64], ebx
mov     ebx, [edi+ecx*4]
mov     [esp+0ach+var_68], esi
mov     esi, [esp+0ach+var_64]
add     esi, ebx
fild    dword ptr [ebp+esi*4+0]
mov     esi, [esp+0ach+var_68]
add     esi, [esp+0ach+var_64]
fild    dword ptr [ebp+esi*4+0]
fdivp   st(1), st
fcomip  st, st(1)
ja      loc_6320a0d5
mov     esi, [esp+0ach+var_68]
mov     [edi+ecx*4], esi
lea     ecx, [eax+2]
mov     esi, [edx+ecx*4]
mov     ebx, ecx
shl     ebx, 8
mov     [esp+0ach+var_64], ebx
mov     ebx, [edi+ecx*4]
mov     [esp+0ach+var_68], esi
mov     esi, [esp+0ach+var_64]
add     esi, ebx
fild    dword ptr [ebp+esi*4+0]
mov     esi, [esp+0ach+var_68]
add     esi, [esp+0ach+var_64]
fild    dword ptr [ebp+esi*4+0]
fdivp   st(1), st
fcomip  st, st(1)
ja      loc_6320a0cd
mov     esi, [esp+0ach+var_68]
mov     [edi+ecx*4], esi
add     eax, 3
cmp     eax, [esp+0ach+var_5c]
jnz     loc_63209675
fstp    st
mov     ebx, [esp+0ach+var_60]
jmp     short loc_63209769
fstp    st
jmp     short loc_63209769
fstp    st
mov     ecx, [ebx+1ch]
mov     ebp, [esp+0ach+var_3c]
mov     [esp+0ach+val], 0
mov     [esp+0ach+var_ac], ecx
mov     [esp+0ach+size], ebp
call    memset
mov     edx, [esp+0ach+arg_4]
mov     ecx, [esp+0ach+var_58]
mov     [esp+0ach+var_4c], 0
mov     [esp+0ach+var_68], ebx
nop
lea     esi, [esi+0]
mov     eax, [esp+0ach+var_4c]
lea     esi, [edx+0c0h]
mov     [esp+0ach+var_58], esi
mov     [esp+0ach+var_40], ecx
mov     [esp+0ach+var_64], eax
movzx   ecx, byte ptr [edx+2]
cmp     [esp+0ach+var_50], ecx
jge     loc_63209af0
mov     edi, [esp+0ach+var_5c]
movzx   eax, byte ptr [edx]
test    edi, edi
jle     loc_63209af0
mov     ebx, [esp+0ach+var_68]
mov     edi, [esp+0ach+var_5c]
mov     ebx, [ebx+18h]
sub     edi, 1
and     edi, 3
mov     esi, [ebx]
mov     ebp, esi
sub     ebp, [esp+0ach+var_40]
cmp     eax, ebp
jle     short loc_63209829
mov     ebp, [esp+0ach+var_40]
add     ebp, esi
cmp     eax, ebp
jge     short loc_63209829
mov     esi, [esp+0ach+var_68]
movzx   ebp, byte ptr [edx+1]
mov     esi, [esi+1ch]
shl     ebp, 2
add     ebp, esi
mov     esi, [esp+0ach+var_68]
mov     [esp+0ach+var_60], ebp
mov     ebp, [esi+8]
mov     esi, [esp+0ach+var_64]
mov     ebp, [ebp+0]
mov     esi, [ebp+esi+0]
imul    esi, ecx
mov     ecx, [esp+0ach+var_60]
add     [ecx], esi
mov     esi, 1
cmp     esi, [esp+0ach+var_5c]
jz      loc_63209af0
test    edi, edi
jz      loc_6320996b
cmp     edi, 1
jz      loc_63209902
cmp     edi, 2
jz      short loc_632098a3
mov     edi, [ebx+4]
mov     ecx, edi
sub     ecx, [esp+0ach+var_40]
cmp     eax, ecx
jle     short loc_632098a0
add     edi, [esp+0ach+var_40]
cmp     eax, edi
jge     short loc_632098a0
mov     ebp, [esp+0ach+var_68]
movzx   edi, byte ptr [edx+1]
mov     ecx, [ebp+1ch]
mov     ebp, [esp+0ach+var_68]
lea     edi, ds:400h[edi*4]
add     edi, ecx
mov     ecx, [ebp+8]
mov     [esp+0ach+var_60], edi
mov     ebp, [esp+0ach+var_64]
mov     edi, [ecx+4]
mov     [esp+0ach+var_54], edi
mov     ecx, [esp+0ach+var_54]
movzx   edi, byte ptr [edx+2]
imul    edi, [ecx+ebp]
mov     ebp, [esp+0ach+var_60]
add     [ebp+0], edi
add     esi, 1
mov     edi, [ebx+esi*4]
lea     ebp, ds:0[esi*4]
mov     [esp+0ach+var_60], ebp
mov     ecx, edi
sub     ecx, [esp+0ach+var_40]
cmp     eax, ecx
jle     short loc_632098ff
add     edi, [esp+0ach+var_40]
cmp     eax, edi
jge     short loc_632098ff
movzx   edi, byte ptr [edx+1]
mov     ecx, esi
mov     ebp, [esp+0ach+var_68]
shl     ecx, 8
add     edi, ecx
mov     ecx, [ebp+1ch]
shl     edi, 2
mov     ebp, [esp+0ach+var_68]
add     edi, ecx
mov     ecx, [esp+0ach+var_60]
mov     [esp+0ach+var_54], edi
mov     edi, [ebp+8]
mov     ebp, [edi+ecx]
mov     ecx, [esp+0ach+var_64]
movzx   edi, byte ptr [edx+2]
imul    edi, [ebp+ecx+0]
mov     ecx, [esp+0ach+var_54]
add     [ecx], edi
add     esi, 1
lea     edi, ds:0[esi*4]
mov     [esp+0ach+var_60], edi
mov     edi, [ebx+esi*4]
mov     ebp, edi
sub     ebp, [esp+0ach+var_40]
cmp     eax, ebp
jle     short loc_6320995e
add     edi, [esp+0ach+var_40]
cmp     eax, edi
jge     short loc_6320995e
movzx   edi, byte ptr [edx+1]
mov     ecx, esi
mov     ebp, [esp+0ach+var_68]
shl     ecx, 8
add     edi, ecx
mov     ecx, [ebp+1ch]
shl     edi, 2
mov     ebp, [esp+0ach+var_68]
add     edi, ecx
mov     ecx, [esp+0ach+var_60]
mov     [esp+0ach+var_54], edi
mov     edi, [ebp+8]
mov     ebp, [edi+ecx]
mov     ecx, [esp+0ach+var_64]
movzx   edi, byte ptr [edx+2]
imul    edi, [ebp+ecx+0]
mov     ecx, [esp+0ach+var_54]
add     [ecx], edi
add     esi, 1
cmp     esi, [esp+0ach+var_5c]
jz      loc_63209af0
mov     ecx, [esp+0ach+var_40]
mov     [esp+0ach+var_60], edx
mov     edx, [ebx+esi*4]
lea     ebp, ds:0[esi*4]
mov     edi, edx
sub     edi, ecx
cmp     eax, edi
jle     short loc_632099d2
add     edx, ecx
cmp     eax, edx
jge     short loc_632099d2
mov     edi, esi
mov     edx, [esp+0ach+var_60]
shl     edi, 8
mov     [esp+0ach+var_54], edi
mov     edi, [esp+0ach+var_68]
movzx   edx, byte ptr [edx+1]
add     edx, [esp+0ach+var_54]
mov     edi, [edi+1ch]
shl     edx, 2
add     edx, edi
mov     [esp+0ach+var_40], edx
mov     edx, [esp+0ach+var_68]
mov     edi, [edx+8]
mov     edx, [esp+0ach+var_60]
mov     ebp, [edi+ebp]
mov     edi, [esp+0ach+var_64]
movzx   edx, byte ptr [edx+2]
imul    edx, [ebp+edi+0]
mov     ebp, [esp+0ach+var_40]
add     [ebp+0], edx
add     esi, 1
mov     edx, [ebx+esi*4]
mov     ebp, edx
sub     ebp, ecx
cmp     eax, ebp
jle     short loc_63209a29
add     edx, ecx
cmp     eax, edx
jge     short loc_63209a29
mov     ebp, [esp+0ach+var_60]
mov     edi, esi
shl     edi, 8
movzx   edx, byte ptr [ebp+1]
add     edx, edi
mov     edi, [esp+0ach+var_68]
shl     edx, 2
mov     edi, [edi+1ch]
add     edx, edi
mov     edi, [esp+0ach+var_68]
mov     [esp+0ach+var_40], edx
mov     edx, [edi+8]
mov     edi, [edx+esi*4]
mov     [esp+0ach+var_54], edi
movzx   edi, byte ptr [ebp+2]
mov     edx, [esp+0ach+var_54]
mov     ebp, [esp+0ach+var_64]
imul    edi, [edx+ebp]
mov     edx, [esp+0ach+var_40]
add     [edx], edi
lea     edx, [esi+1]
mov     edi, [ebx+edx*4]
mov     ebp, edi
sub     ebp, ecx
cmp     eax, ebp
jle     short loc_63209a82
add     edi, ecx
cmp     eax, edi
jge     short loc_63209a82
mov     ebp, edx
mov     edi, [esp+0ach+var_60]
shl     ebp, 8
mov     [esp+0ach+var_54], ebp
mov     ebp, [esp+0ach+var_68]
movzx   edi, byte ptr [edi+1]
add     edi, [esp+0ach+var_54]
mov     ebp, [ebp+1ch]
shl     edi, 2
add     edi, ebp
mov     ebp, [esp+0ach+var_68]
mov     [esp+0ach+var_40], edi
mov     edi, [ebp+8]
mov     ebp, [esp+0ach+var_64]
mov     edi, [edi+edx*4]
mov     edx, [esp+0ach+var_60]
movzx   edx, byte ptr [edx+2]
imul    edx, [edi+ebp]
mov     edi, [esp+0ach+var_40]
add     [edi], edx
lea     edx, [esi+2]
mov     edi, [ebx+edx*4]
mov     ebp, edi
sub     ebp, ecx
cmp     eax, ebp
jle     short loc_63209adb
add     edi, ecx
cmp     eax, edi
jge     short loc_63209adb
mov     ebp, edx
mov     edi, [esp+0ach+var_60]
shl     ebp, 8
mov     [esp+0ach+var_54], ebp
mov     ebp, [esp+0ach+var_68]
movzx   edi, byte ptr [edi+1]
add     edi, [esp+0ach+var_54]
mov     ebp, [ebp+1ch]
shl     edi, 2
add     edi, ebp
mov     ebp, [esp+0ach+var_68]
mov     [esp+0ach+var_40], edi
mov     edi, [ebp+8]
mov     ebp, [esp+0ach+var_64]
mov     edi, [edi+edx*4]
mov     edx, [esp+0ach+var_60]
movzx   edx, byte ptr [edx+2]
imul    edx, [edi+ebp]
mov     edi, [esp+0ach+var_40]
add     [edi], edx
add     esi, 3
cmp     esi, [esp+0ach+var_5c]
jnz     loc_63209973
mov     edx, [esp+0ach+var_60]
mov     [esp+0ach+var_40], ecx
add     edx, 3
add     [esp+0ach+var_64], 4
cmp     [esp+0ach+var_58], edx
jnz     loc_632097b6
add     [esp+0ach+var_4c], 100h
cmp     [esp+0ach+var_4c], 3000h
mov     ecx, [esp+0ach+var_40]
mov     edx, [esp+0ach+var_58]
jnz     loc_632097a0
mov     ebx, [esp+0ach+var_68]
mov     ebp, [esp+0ach+var_3c]
mov     edi, [ebx+20h]
mov     [esp+0ach+size], ebp
mov     [esp+0ach+val], 0
mov     [esp+0ach+var_ac], edi
call    memset
mov     edx, [esp+0ach+var_48]
mov     ecx, [esp+0ach+var_48]
mov     [esp+0ach+var_4c], 0
mov     [esp+0ach+var_60], ebx
neg     edx
add     ecx, 1
mov     [esp+0ach+var_44], edx
mov     [esp+0ach+var_54], ecx
mov     eax, [esp+0ach+var_44]
cmp     [esp+0ach+var_48], eax
jl      loc_63209d77
mov     ebp, [esp+0ach+var_4c]
mov     [esp+0ach+var_64], eax
add     ebp, eax
mov     eax, [esp+0ach+var_4c]
shl     eax, 2
mov     [esp+0ach+var_58], eax
test    ebp, ebp
lea     edi, [ebp+100h]
js      short loc_63209b9c
lea     edi, [ebp-100h]
cmp     ebp, 100h
cmovl   edi, ebp
mov     esi, [esp+0ach+var_5c]
test    esi, esi
jle     loc_63209d61
mov     ebx, [esp+0ach+var_64]
mov     edx, [esp+0ach+var_60]
mov     ecx, [esp+0ach+var_64]
mov     esi, [esp+0ach+var_58]
sar     ebx, 1fh
mov     eax, [edx+1ch]
xor     ecx, ebx
sub     ecx, ebx
mov     ebx, [esp+0ach+var_54]
add     esi, [edx+20h]
lea     edi, [eax+edi*4]
sub     ebx, ecx
mov     ecx, [edi]
mov     [esp+0ach+var_68], esi
mov     esi, [esp+0ach+var_5c]
mov     edx, [esp+0ach+var_68]
imul    ecx, ebx
sub     esi, 1
mov     eax, edx
and     esi, 7
add     [edx], ecx
add     eax, 400h
mov     ecx, 1
cmp     ecx, [esp+0ach+var_5c]
lea     edx, [edi+400h]
jz      loc_63209d61
test    esi, esi
jz      loc_63209cd9
cmp     esi, 1
jz      loc_63209cba
cmp     esi, 2
jz      loc_63209ca5
cmp     esi, 3
jz      short loc_63209c90
cmp     esi, 4
jz      short loc_63209c7b
cmp     esi, 5
jz      short loc_63209c66
cmp     esi, 6
nop
jz      short loc_63209c51
mov     esi, [edi+400h]
mov     ecx, 2
lea     edx, [edi+800h]
imul    esi, ebx
add     [eax], esi
mov     eax, [esp+0ach+var_68]
add     eax, 800h
mov     edi, [edx]
add     ecx, 1
add     edx, 400h
imul    edi, ebx
add     [eax], edi
add     eax, 400h
mov     esi, [edx]
add     ecx, 1
add     edx, 400h
imul    esi, ebx
add     [eax], esi
add     eax, 400h
mov     edi, [edx]
add     ecx, 1
add     edx, 400h
imul    edi, ebx
add     [eax], edi
add     eax, 400h
mov     esi, [edx]
add     ecx, 1
add     edx, 400h
imul    esi, ebx
add     [eax], esi
add     eax, 400h
mov     edi, [edx]
add     ecx, 1
add     edx, 400h
imul    edi, ebx
add     [eax], edi
add     eax, 400h
mov     esi, [edx]
add     ecx, 1
add     edx, 400h
imul    esi, ebx
add     [eax], esi
add     eax, 400h
cmp     ecx, [esp+0ach+var_5c]
jz      loc_63209d61
mov     esi, [edx]
add     ecx, 8
imul    esi, ebx
add     [eax], esi
mov     edi, [edx+400h]
imul    edi, ebx
add     [eax+400h], edi
mov     esi, [edx+800h]
imul    esi, ebx
add     [eax+800h], esi
mov     edi, [edx+0c00h]
imul    edi, ebx
add     [eax+0c00h], edi
mov     esi, [edx+1000h]
imul    esi, ebx
add     [eax+1000h], esi
mov     edi, [edx+1400h]
imul    edi, ebx
add     [eax+1400h], edi
mov     esi, [edx+1800h]
imul    esi, ebx
add     [eax+1800h], esi
mov     edi, [edx+1c00h]
add     edx, 2000h
imul    edi, ebx
add     [eax+1c00h], edi
add     eax, 2000h
cmp     ecx, [esp+0ach+var_5c]
jnz     loc_63209cd9
add     [esp+0ach+var_64], 1
add     ebp, 1
mov     eax, [esp+0ach+var_48]
cmp     [esp+0ach+var_64], eax
jle     loc_63209b83
add     [esp+0ach+var_4c], 1
cmp     [esp+0ach+var_4c], 100h
jnz     loc_63209b60
mov     ebx, [esp+0ach+var_60]
mov     ecx, [esp+0ach+var_5c]
mov     esi, [ebx+20h]
mov     [esp+0ach+var_a0], esi
mov     edi, [ebx+24h]
mov     [esp+0ach+val], ecx
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+size], edi
call    sub_632084b0
mov     edx, [esp+0ach+var_5c]
lea     ebp, [edx+edx*2+8]
mov     [esp+0ach+var_ac], ebp
call    sub_63222dd0
mov     ebp, eax
mov     eax, [esp+0ach+var_5c]
test    eax, eax
mov     [ebp+0], eax
jle     loc_6320a085
mov     edi, eax
mov     eax, [ebx+2ch]
fild    [esp+0ach+var_38]
sub     edi, 1
fld     ds:dbl_6322c3f8
and     edi, 1
fmulp   st(1), st
mov     esi, [eax]
test    esi, esi
jle     loc_6320a0ed
mov     ecx, [ebx+28h]
mov     eax, [ecx]
mov     edx, eax
sar     edx, 1fh
idiv    esi
mov     [ecx], eax
mov     esi, [ebx+28h]
fild    dword ptr [esi]
fnstcw  [esp+0ach+var_2e]
fmul    st, st(1)
movzx   eax, [esp+0ach+var_2e]
mov     ah, 0ch
mov     [esp+0ach+var_30], ax
xor     eax, eax
fldcw   [esp+0ach+var_30]
fistp   dword ptr [esi]
fldcw   [esp+0ach+var_2e]
mov     edx, [ecx]
test    edx, edx
jle     short loc_63209e33
cmp     edx, 0ffh
mov     eax, 0ffh
cmovle  eax, edx
mov     edx, [ebx+18h]
mov     esi, [ebx+24h]
mov     [esp+0ach+var_1d], al
mov     ecx, [edx]
mov     edx, [esi]
fstp    [esp+0ach+var_7c]
mov     esi, 1
mov     byte ptr [esp+0ach+val+2], al
mov     byte ptr [esp+0ach+var_1f], cl
mov     byte ptr [esp+0ach+var_1f+1], dl
movzx   ecx, [esp+0ach+var_1f]
lea     edx, [ebp+4]
mov     [esp+0ach+var_ac], edx
mov     word ptr [esp+0ach+val], cx
call    sub_63208700
sub     esp, 4
cmp     esi, [esp+0ach+var_5c]
fld     [esp+0ach+var_7c]
jz      loc_6320a083
test    edi, edi
jz      loc_63209f11
mov     ecx, [ebx+2ch]
mov     edi, 4
mov     eax, [ecx+edi]
mov     ecx, [ebx+28h]
mov     [esp+0ach+var_64], eax
add     ecx, edi
test    eax, eax
jle     loc_6320a106
mov     eax, [ecx]
mov     edx, eax
sar     edx, 1fh
idiv    [esp+0ach+var_64]
mov     [ecx], eax
mov     edx, [ebx+28h]
add     edx, edi
fild    dword ptr [edx]
fnstcw  [esp+0ach+var_2e]
fmul    st, st(1)
movzx   eax, [esp+0ach+var_2e]
mov     ah, 0ch
mov     [esp+0ach+var_30], ax
xor     eax, eax
fldcw   [esp+0ach+var_30]
fistp   dword ptr [edx]
fldcw   [esp+0ach+var_2e]
mov     edx, [ecx]
test    edx, edx
jle     short loc_63209ef2
cmp     edx, 0ffh
mov     eax, 0ffh
cmovle  eax, edx
mov     ecx, [ebx+18h]
mov     [esp+0ach+var_1d], al
mov     edx, [ecx+edi]
mov     ecx, [ebx+24h]
mov     byte ptr [esp+0ach+var_1f], dl
mov     edx, [ecx+edi]
jmp     loc_6320a040
mov     ecx, [ebx+2ch]
lea     edi, ds:0[esi*4]
mov     edx, [ecx+esi*4]
mov     ecx, [ebx+28h]
mov     [esp+0ach+var_64], edx
add     ecx, edi
test    edx, edx
jle     loc_6320a0fb
mov     eax, [ecx]
mov     edx, eax
sar     edx, 1fh
idiv    [esp+0ach+var_64]
mov     [ecx], eax
mov     eax, [ebx+28h]
add     eax, edi
fild    dword ptr [eax]
fnstcw  [esp+0ach+var_2e]
fmul    st, st(1)
movzx   edx, [esp+0ach+var_2e]
mov     dh, 0ch
mov     [esp+0ach+var_30], dx
fldcw   [esp+0ach+var_30]
fistp   dword ptr [eax]
fldcw   [esp+0ach+var_2e]
xor     eax, eax
mov     edx, [ecx]
test    edx, edx
jle     short loc_63209f75
cmp     edx, 0ffh
mov     eax, 0ffh
cmovle  eax, edx
mov     ecx, [ebx+18h]
mov     [esp+0ach+var_1d], al
mov     edx, [ecx+edi]
mov     ecx, [ebx+24h]
mov     byte ptr [esp+0ach+var_1f], dl
mov     edx, [ecx+edi]
lea     ecx, [esi+esi*2]
add     esi, 1
lea     edi, [ebp+ecx+4]
mov     byte ptr [esp+0ach+val+2], al
fstp    [esp+0ach+var_7c]
mov     [esp+0ach+var_ac], edi
lea     edi, ds:0[esi*4]
mov     byte ptr [esp+0ach+var_1f+1], dl
movzx   edx, [esp+0ach+var_1f]
mov     word ptr [esp+0ach+val], dx
call    sub_63208700
mov     eax, [ebx+2ch]
mov     ecx, [eax+esi*4]
sub     esp, 4
fld     [esp+0ach+var_7c]
test    ecx, ecx
mov     [esp+0ach+var_64], ecx
jle     loc_6320a0dd
mov     ecx, [ebx+28h]
add     ecx, edi
mov     eax, [ecx]
mov     edx, eax
sar     edx, 1fh
idiv    [esp+0ach+var_64]
mov     [ecx], eax
add     edi, [ebx+28h]
fild    dword ptr [edi]
fnstcw  [esp+0ach+var_2e]
fmul    st, st(1)
movzx   eax, [esp+0ach+var_2e]
mov     ah, 0ch
mov     [esp+0ach+var_30], ax
xor     eax, eax
fldcw   [esp+0ach+var_30]
fistp   dword ptr [edi]
fldcw   [esp+0ach+var_2e]
mov     edx, [ecx]
test    edx, edx
jle     short loc_6320a026
cmp     edx, 0ffh
mov     eax, 0ffh
cmovle  eax, edx
mov     edx, [ebx+18h]
mov     edi, [ebx+24h]
mov     [esp+0ach+var_1d], al
mov     ecx, [edx+esi*4]
mov     edx, [edi+esi*4]
mov     byte ptr [esp+0ach+var_1f], cl
mov     byte ptr [esp+0ach+var_1f+1], dl
movzx   ecx, [esp+0ach+var_1f]
lea     edx, [esi+esi*2]
lea     edi, [ebp+edx+4]
add     esi, 1
fstp    [esp+0ach+var_7c]
mov     byte ptr [esp+0ach+val+2], al
mov     word ptr [esp+0ach+val], cx
mov     [esp+0ach+var_ac], edi
call    sub_63208700
sub     esp, 4
cmp     esi, [esp+0ach+var_5c]
fld     [esp+0ach+var_7c]
jnz     loc_63209f11
fstp    st
jmp     short loc_6320a085
fstp    st
add     esp, 9ch
mov     eax, ebp
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     edx, [esp+0ach+var_44]
mov     [esp+0ach+var_68], ebx
mov     byte ptr [esp+0ach+var_44], cl
jmp     loc_6320924c
mov     [edi+eax*4], esi
jmp     loc_632095a0
mov     [edx+eax*4], esi
jmp     loc_63209664
mov     [edx+eax*4], esi
jmp     loc_63209627
mov     [edi+eax*4], ecx
xchg    ax, ax
jmp     loc_632096a5
mov     [edi+eax*4], ebx
jmp     loc_632096d4
mov     [edx+ecx*4], ebx
jmp     loc_6320974e
mov     [edx+ecx*4], ebx
jmp     loc_63209711
mov     ecx, [ebx+28h]
mov     eax, [esp+0ach+var_50]
add     ecx, edi
mov     [ecx], eax
jmp     loc_63209fef
mov     ecx, [ebx+28h]
mov     esi, [esp+0ach+var_50]
mov     [ecx], esi
jmp     loc_63209dfc
mov     eax, [esp+0ach+var_50]
mov     [ecx], eax
jmp     loc_63209f3c
mov     edx, [esp+0ach+var_50]
mov     [ecx], edx
jmp     loc_63209eb9
mov     [edx+eax*4], ecx
jmp     loc_632095ea
mov     [esp+0ach+var_60], esi
mov     ebp, [esp+0ach+var_68]
jmp     loc_63208f21
mov     edi, [esp+0ach+var_68]
cmp     [ebx+34h], edi
mov     eax, [ebx]
jnz     loc_63208d9f
mov     ebp, [eax+0a4h]
cmp     [ebx+38h], ebp
jnz     loc_63208d9f
mov     edx, [eax+0a8h]
cmp     [ebx+3ch], edx
jnz     loc_63208d9f
mov     edi, [eax+0ach]
cmp     [ebx+40h], edi
jnz     loc_63208d9f
mov     ecx, [eax+140h]
test    ecx, ecx
jnz     loc_63208d9f
jmp     loc_63208f95
mov     edx, [esp+4]
xor     eax, eax
mov     ecx, [edx+70h]
test    ecx, ecx
setnz   al
cmp     dword ptr [edx+74h], 1
sbb     eax, 0ffffffffh
cmp     dword ptr [edx+78h], 1
sbb     eax, 0ffffffffh
cmp     dword ptr [edx+7ch], 1
sbb     eax, 0ffffffffh
cmp     dword ptr [edx+80h], 1
sbb     eax, 0ffffffffh
cmp     dword ptr [edx+84h], 1
sbb     eax, 0ffffffffh
cmp     dword ptr [edx+88h], 1
sbb     eax, 0ffffffffh
cmp     dword ptr [edx+8ch], 1
sbb     eax, 0ffffffffh
cmp     dword ptr [edx+90h], 1
sbb     eax, 0ffffffffh
cmp     dword ptr [edx+94h], 1
sbb     eax, 0ffffffffh
retn
push    esi
push    ebx
sub     esp, 14h
mov     ebx, [esp+1ch+arg_0]
mov     esi, [ebx+74h]
test    esi, esi
jz      short loc_6320a200
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+78h]
mov     dword ptr [ebx+74h], 0
test    esi, esi
jz      short loc_6320a21e
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+7ch]
mov     dword ptr [ebx+78h], 0
test    esi, esi
jz      short loc_6320a23c
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+80h]
mov     dword ptr [ebx+7ch], 0
test    esi, esi
jz      short loc_6320a25d
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+84h]
mov     dword ptr [ebx+80h], 0
test    esi, esi
jz      short loc_6320a281
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+88h]
mov     dword ptr [ebx+84h], 0
test    esi, esi
jz      short loc_6320a2a5
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+8ch]
mov     dword ptr [ebx+88h], 0
test    esi, esi
jz      short loc_6320a2c9
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+90h]
mov     dword ptr [ebx+8ch], 0
test    esi, esi
jz      short loc_6320a2ed
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+94h]
mov     dword ptr [ebx+90h], 0
test    esi, esi
jz      short loc_6320a311
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     dword ptr [ebx+94h], 0
add     esp, 14h
pop     ebx
pop     esi
retn
push    esi
push    ebx
sub     esp, 14h
mov     ebx, [esp+1ch+arg_0]
mov     esi, [ebx+70h]
test    esi, esi
jz      short loc_6320a350
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+74h]
mov     dword ptr [ebx+70h], 0
test    esi, esi
jz      short loc_6320a36e
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+78h]
mov     dword ptr [ebx+74h], 0
test    esi, esi
jz      short loc_6320a38c
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+7ch]
mov     dword ptr [ebx+78h], 0
test    esi, esi
jz      short loc_6320a3aa
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+80h]
mov     dword ptr [ebx+7ch], 0
test    esi, esi
jz      short loc_6320a3cb
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+84h]
mov     dword ptr [ebx+80h], 0
test    esi, esi
jz      short loc_6320a3ef
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+88h]
mov     dword ptr [ebx+84h], 0
test    esi, esi
jz      short loc_6320a413
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+8ch]
mov     dword ptr [ebx+88h], 0
test    esi, esi
jz      short loc_6320a437
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+90h]
mov     dword ptr [ebx+8ch], 0
test    esi, esi
jz      short loc_6320a45b
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     esi, [ebx+94h]
mov     dword ptr [ebx+90h], 0
test    esi, esi
jz      short loc_6320a47f
mov     [esp+1ch+block], esi
call    sub_6320fc20
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     dword ptr [ebx+94h], 0
add     esp, 14h
pop     ebx
pop     esi
retn
push    edi
push    esi
push    ebx
sub     esp, 10h
mov     edi, [esp+1ch+arg_0]
mov     dword ptr [edi], offset off_6322e890
mov     [esp+1ch+block], edi
call    sub_6320a330
mov     eax, [edi+9ch]
test    eax, eax
jz      short loc_6320a4fa
mov     ebx, [edi+0a0h]
test    ebx, ebx
jle     short loc_6320a4e8
xor     ebx, ebx
xchg    ax, ax
mov     esi, [eax+ebx*4]
test    esi, esi
jz      short loc_6320a4dd
mov     [esp+1ch+block], esi
call    nullsub_3
mov     [esp+1ch+block], esi
call    sub_63222db0
mov     eax, [edi+9ch]
add     ebx, 1
cmp     [edi+0a0h], ebx
jg      short loc_6320a4c0
mov     [esp+1ch+block], eax
call    sub_63222db0
mov     dword ptr [edi+9ch], 0
mov     eax, [edi+38h]
test    eax, eax
jz      short loc_6320a509
mov     [esp+1ch+block], eax
call    sub_63222da0
mov     eax, [edi+3ch]
test    eax, eax
jz      short loc_6320a518
mov     [esp+1ch+block], eax
call    sub_63222da0
mov     eax, [edi+40h]
test    eax, eax
jz      short loc_6320a527
mov     [esp+1ch+block], eax
call    sub_63222da0
mov     ebx, [edi+11ch]
mov     [esp+1ch+block], ebx
call    free
mov     esi, [edi+8]
mov     [esp+1ch+block], esi
call    free
mov     ecx, [edi+0ch]
mov     [esp+1ch+block], ecx
call    free
mov     edx, [edi+10h]
mov     [esp+1ch+block], edx
call    free
mov     eax, [edi+14h]
mov     [esp+1ch+arg_0], eax
add     esp, 10h
pop     ebx
pop     esi
pop     edi
jmp     free
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_6320a490
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
mov     eax, [esp+4]
mov     ecx, [eax+70h]
test    ecx, ecx
jz      short loc_6320a600
mov     edx, [eax+74h]
test    edx, edx
jz      short loc_6320a604
mov     ecx, [eax+78h]
test    ecx, ecx
jz      short loc_6320a610
mov     edx, [eax+7ch]
test    edx, edx
jz      short loc_6320a617
mov     ecx, [eax+80h]
test    ecx, ecx
jz      short loc_6320a620
mov     edx, [eax+84h]
test    edx, edx
jz      short loc_6320a627
mov     ecx, [eax+88h]
test    ecx, ecx
jz      short loc_6320a630
mov     edx, [eax+8ch]
test    edx, edx
jz      short loc_6320a637
mov     ecx, [eax+90h]
test    ecx, ecx
jz      short loc_6320a640
mov     edx, [eax+94h]
test    edx, edx
jz      short loc_6320a5f0
rep retn
mov     edx, 9
mov     ecx, [esp+8]
mov     [eax+edx*4+70h], ecx
retn
xor     edx, edx
jmp     short loc_6320a5f5
mov     edx, 1
jmp     short loc_6320a5f5
mov     edx, 2
jmp     short loc_6320a5f5
mov     edx, 3
jmp     short loc_6320a5f5
mov     edx, 4
jmp     short loc_6320a5f5
mov     edx, 5
jmp     short loc_6320a5f5
mov     edx, 6
jmp     short loc_6320a5f5
mov     edx, 7
jmp     short loc_6320a5f5
mov     edx, 8
jmp     short loc_6320a5f5
sub     esp, 1ch
mov     [esp+18h], edi
mov     edi, [esp+24h]
mov     [esp+14h], esi
mov     esi, [esp+20h]
mov     [esp+10h], ebx
add     edi, 1ch
mov     ebx, [esi+edi*4]
test    ebx, ebx
jz      short loc_6320a681
mov     [esp], ebx
call    sub_6320fc20
mov     [esp], ebx
call    sub_63222db0
mov     eax, [esp+28h]
mov     ebx, [esp+10h]
mov     [esi+edi*4], eax
mov     esi, [esp+14h]
mov     edi, [esp+18h]
add     esp, 1ch
retn
mov     edx, [esp+arg_4]
xor     eax, eax
mov     ecx, [esp+arg_0]
test    edx, edx
js      short locret_6320a6bf
cmp     edx, [ecx+0a0h]
jge     short locret_6320a6bf
mov     eax, [ecx+9ch]
mov     eax, [eax+edx*4]
rep retn
mov     eax, [esp+arg_0]
mov     edx, [eax+0a4h]
mov     ecx, [eax+0ach]
add     edx, [eax+0a8h]
cmp     byte ptr [eax+0b4h], 0
lea     edx, [edx+ecx*2]
mov     [eax+0b0h], edx
jz      short locret_6320a701
add     edx, 1
mov     [eax+0b0h], edx
rep retn
mov     eax, [esp+arg_0]
mov     eax, [eax+0b0h]
retn
push    ebp
mov     ebp, esp
push    ebx
sub     esp, 64h
lea     edx, [ebp+var_8]
lea     eax, [ebp+var_3c]
mov     [ebp+var_1c], edx
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_632241c4
mov     [ebp+var_18], offset sub_6320a899
mov     [ebp+var_14], esp
mov     [esp], eax
call    sub_6321b240
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+0b0h]
mov     ebx, ecx
mov     ecx, [ecx+0a0h]
cmp     ecx, edx
jz      loc_6320a888
mov     eax, [ebx+9ch]
test    eax, eax
jz      short loc_6320a7dd
test    ecx, ecx
jle     short loc_6320a7c2
mov     [ebp+var_48], 0
xchg    ax, ax
mov     ebx, [ebp+var_48]
mov     edx, [eax+ebx*4]
test    edx, edx
mov     [ebp+var_4c], edx
jz      short loc_6320a7b0
mov     [esp], edx
mov     [ebp+var_38], 0ffffffffh
call    nullsub_3
mov     eax, [ebp+var_4c]
mov     [esp], eax
call    sub_63222db0
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+9ch]
mov     edx, [ebp+arg_0]
add     [ebp+var_48], 1
mov     ebx, [ebp+var_48]
cmp     [edx+0a0h], ebx
jg      short loc_6320a780
mov     [esp], eax
call    sub_63222db0
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+0b0h]
mov     dword ptr [ecx+9ch], 0
mov     eax, [ebp+arg_0]
test    edx, edx
mov     [eax+0a0h], edx
jle     loc_6320a888
shl     edx, 2
mov     [esp], edx
mov     [ebp+var_38], 0ffffffffh
call    sub_63222dd0
mov     ebx, [ebp+arg_0]
mov     edx, [ebx+0a0h]
mov     [ebx+9ch], eax
test    edx, edx
jle     short loc_6320a888
mov     [ebp+var_40], 0
lea     esi, [esi+0]
mov     dword ptr [esp], 0c04h
mov     [ebp+var_38], 0ffffffffh
call    sub_63222e50
mov     [ebp+var_38], 1
mov     [ebp+var_44], eax
mov     [esp], eax
call    nullsub_2
mov     ecx, [ebp+arg_0]
mov     ebx, [ebp+var_40]
mov     edx, [ebp+var_44]
mov     eax, [ecx+9ch]
mov     [eax+ebx*4], edx
mov     dword ptr [esp+4], 0ffh
mov     edx, [ecx+9ch]
mov     eax, [edx+ebx*4]
add     ebx, 1
mov     [ebp+var_38], 0ffffffffh
mov     [esp], eax
call    sub_6320f240
mov     ecx, [ebp+arg_0]
mov     [ebp+var_40], ebx
cmp     [ecx+0a0h], ebx
jg      short loc_6320a820
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
add     esp, 64h
pop     ebx
pop     ebp
retn
add     ebp, 8
mov     ebx, [ebp-34h]
mov     ecx, [ebp-44h]
mov     [esp+0], ecx
call    sub_63222db0
mov     [esp+0], ebx
mov     dword ptr [ebp-38h], 0ffffffffh
call    sub_6321b600
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     eax, [ebp+var_3c]
lea     ecx, [ebp+var_8]
mov     [esp], eax
mov     [ebp+var_1c], ecx
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset word_632241ca
mov     [ebp+var_18], offset sub_6320ac18
mov     [ebp+var_14], esp
call    sub_6321b240
mov     edx, [ebp+arg_0]
mov     ecx, [edx+8]
mov     [esp], ecx
call    free
mov     eax, [ebp+arg_0]
mov     edx, [eax+0ch]
mov     [esp], edx
call    free
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+10h]
mov     [esp], eax
call    free
mov     edx, [ebp+arg_0]
mov     ecx, [edx+14h]
mov     [esp], ecx
call    free
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
mov     dword ptr [eax+14h], 0
mov     dword ptr [eax+1ch], 0
mov     byte ptr [eax+20h], 0
mov     dword ptr [eax+140h], 0
mov     dword ptr [eax+12ch], 0
mov     dword ptr [eax+130h], 0ah
mov     dword ptr [eax+134h], 0ah
mov     dword ptr [eax+138h], 0ah
mov     dword ptr [eax+13ch], 0ah
mov     dword ptr [eax+24h], 0ffh
mov     dword ptr [eax+28h], 0ffh
mov     dword ptr [eax+2ch], 0ffh
mov     byte ptr [eax+21h], 1
mov     byte ptr [eax+30h], 0
mov     dword ptr [eax+34h], 0
mov     eax, [eax+38h]
test    eax, eax
jz      short loc_6320a9c0
mov     [esp], eax
call    sub_63222da0
mov     edx, [ebp+arg_0]
mov     eax, [edx+3ch]
test    eax, eax
jz      short loc_6320a9d2
mov     [esp], eax
call    sub_63222da0
mov     eax, [ebp+arg_0]
mov     eax, [eax+40h]
test    eax, eax
jz      short loc_6320a9e4
mov     [esp], eax
call    sub_63222da0
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+38h], 0
mov     dword ptr [eax+3ch], 0
mov     dword ptr [eax+40h], 0
mov     dword ptr [eax+54h], 32h
mov     dword ptr [eax+58h], 19h
mov     dword ptr [eax+5ch], 32h
mov     dword ptr [eax+60h], 19h
mov     dword ptr [eax+44h], 1
mov     dword ptr [eax+48h], 0
mov     dword ptr [eax+4ch], 0
mov     dword ptr [eax+50h], 0
mov     dword ptr [eax+64h], 7fh
mov     dword ptr [eax+68h], 0c0h
mov     dword ptr [eax+6ch], 0ffh
mov     dword ptr [eax+0b8h], 1
mov     dword ptr [eax+0bch], 32h
mov     dword ptr [eax+0c0h], 12ch
mov     dword ptr [eax+0c4h], 28h
mov     byte ptr [eax+0c8h], 0
mov     dword ptr [eax+0d0h], 8
mov     dword ptr [eax+0d4h], 64h
mov     dword ptr [eax+0d8h], 5
mov     dword ptr [eax+0dch], 3
mov     dword ptr [eax+0e0h], 3
mov     dword ptr [eax+0e4h], 0
mov     dword ptr [eax+0e8h], 0
mov     dword ptr [eax+0ech], 0
mov     dword ptr [eax+0f0h], 0
mov     dword ptr [eax+0f4h], 1eh
mov     dword ptr [eax+0f8h], 19h
mov     dword ptr [eax+0cch], 0
mov     dword ptr [eax+0fch], 80h
mov     dword ptr [eax+100h], 64h
mov     dword ptr [eax+104h], 64h
mov     dword ptr [eax+108h], 64h
mov     dword ptr [eax+10ch], 64h
mov     dword ptr [eax+110h], 16h
mov     dword ptr [eax+114h], 16h
mov     dword ptr [eax+118h], 16h
mov     dword ptr [esp], offset string
mov     [ebp+var_38], 0ffffffffh
call    _strdup
mov     edx, [ebp+arg_0]
mov     dword ptr [edx+120h], 5
mov     dword ptr [edx+124h], 3
mov     [edx+11ch], eax
mov     dword ptr [edx+128h], 2
mov     dword ptr [edx+0a4h], 1
mov     dword ptr [edx+0a8h], 1
mov     dword ptr [edx+0ach], 1
mov     byte ptr [edx+0b4h], 0
mov     dword ptr [edx+0b0h], 4
mov     [esp], edx
call    sub_6320a330
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx+98h], 0
mov     dword ptr [esp], 10h
call    sub_63222e50
mov     [ebp+var_38], 1
mov     [ebp+var_40], eax
mov     [esp], eax
call    sub_6320fbf0
mov     ecx, [ebp+var_40]
mov     byte ptr [ecx+0ch], 1
mov     [esp], ecx
mov     dword ptr [esp+4], offset astandard
mov     [ebp+var_38], 0ffffffffh
call    sub_6320fc30
mov     edx, [ebp+arg_0]
mov     eax, [ebp+var_40]
mov     [edx+70h], eax
mov     [esp], edx
call    sub_6320a720
lea     ecx, [ebp+var_3c]
mov     [esp], ecx
call    sub_6321b300
leave
retn
add     ebp, 8
mov     ecx, [ebp-34h]
mov     eax, [ebp-40h]
mov     [ebp-44h], ecx
mov     [esp+0], eax
call    sub_63222db0
mov     edx, [ebp-44h]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], edx
call    sub_6321b600
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322e890
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+18h], 0
mov     dword ptr [eax+70h], 0
mov     dword ptr [eax+74h], 0
mov     dword ptr [eax+78h], 0
mov     dword ptr [eax+7ch], 0
mov     dword ptr [eax+80h], 0
mov     dword ptr [eax+84h], 0
mov     dword ptr [eax+88h], 0
mov     dword ptr [eax+8ch], 0
mov     dword ptr [eax+90h], 0
mov     dword ptr [eax+94h], 0
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
mov     dword ptr [eax+14h], 0
mov     dword ptr [eax+9ch], 0
mov     dword ptr [eax+0a0h], 0ffffffffh
mov     dword ptr [eax+11ch], 0
mov     dword ptr [eax+38h], 0
mov     dword ptr [eax+3ch], 0
mov     dword ptr [eax+40h], 0
jmp     sub_6320a8c0
mov     eax, [esp+arg_4]
mov     edx, [esp+arg_0]
test    eax, eax
jz      short loc_6320ad21
mov     eax, [edx+eax*4+8]
retn
mov     eax, [edx+8]
retn
sub     esp, 1ch
mov     [esp+1ch+var_8], esi
mov     esi, [esp+1ch+arg_4]
mov     [esp+1ch+var_c], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_4], edi
mov     edi, [esp+1ch+string]
test    esi, esi
jnz     short loc_6320ad80
mov     eax, [ebx+8]
mov     [esp+1ch+block], eax
call    free
test    edi, edi
jz      short loc_6320adc8
mov     [esp+1ch+block], edi
call    _strdup
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
mov     [ebx+8], eax
mov     ebx, [esp+1ch+var_c]
add     esp, 1ch
retn
sub     esi, 1
mov     edx, [ebx+esi*4+0ch]
mov     [esp+1ch+block], edx
call    free
test    edi, edi
jz      short loc_6320adb0
mov     [esp+1ch+block], edi
call    _strdup
mov     edi, [esp+1ch+var_4]
mov     [ebx+esi*4+0ch], eax
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
add     esp, 1ch
retn
mov     dword ptr [ebx+esi*4+0ch], 0
mov     edi, [esp+1ch+var_4]
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
add     esp, 1ch
retn
mov     dword ptr [ebx+8], 0
mov     esi, [esp+1ch+var_8]
mov     ebx, [esp+1ch+var_c]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     edx, [ebx+11ch]
mov     [esp+1ch+block], edx
call    free
mov     eax, [esp+1ch+string]
mov     [esp+1ch+block], eax
call    _strdup
mov     [ebx+11ch], eax
add     esp, 18h
pop     ebx
retn
push    ebp
mov     ebp, esp
push    esi
push    ebx
sub     esp, 60h
lea     eax, [ebp-3ch]
lea     esi, [ebp-8]
mov     [esp], eax
mov     [ebp-1ch], esi
mov     dword ptr [ebp-24h], offset sub_63223ad0
mov     dword ptr [ebp-20h], offset dword_632241d0
mov     dword ptr [ebp-18h], offset loc_6320b34e
mov     [ebp-14h], esp
call    sub_6321b240
mov     ecx, [ebp+0ch]
mov     ebx, [ebp+8]
mov     edx, [ecx+8]
mov     [esp], ebx
mov     dword ptr [esp+4], 0
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+8], edx
call    sub_6320ad30
mov     ebx, [ebp+0ch]
mov     esi, [ebx+0ch]
mov     dword ptr [esp+4], 1
mov     [esp+8], esi
mov     esi, [ebp+8]
mov     [esp], esi
call    sub_6320ad30
mov     eax, [ebx+10h]
mov     dword ptr [esp+4], 2
mov     [esp], esi
mov     [esp+8], eax
call    sub_6320ad30
mov     ecx, [ebx+14h]
mov     dword ptr [esp+4], 3
mov     [esp], esi
mov     [esp+8], ecx
call    sub_6320ad30
mov     eax, [ebx+1ch]
mov     edx, [ebx+18h]
mov     ecx, [ebx+24h]
mov     [esi+1ch], eax
mov     eax, [ebx+2ch]
mov     [esi+18h], edx
mov     edx, [ebx+28h]
mov     [esi+24h], ecx
movzx   ecx, byte ptr [ebx+21h]
mov     [esi+2ch], eax
mov     eax, [ebx+34h]
mov     [esi+28h], edx
movzx   edx, byte ptr [ebx+30h]
mov     [esi+21h], cl
mov     [esi+34h], eax
mov     eax, [esi+38h]
mov     [esi+30h], dl
test    eax, eax
jz      short loc_6320aef1
mov     [esp], eax
call    sub_63222da0
mov     ebx, [ebp+8]
mov     eax, [ebx+3ch]
test    eax, eax
jz      short loc_6320af03
mov     [esp], eax
call    sub_63222da0
mov     edx, [ebp+8]
mov     eax, [edx+40h]
test    eax, eax
jz      short loc_6320af15
mov     [esp], eax
call    sub_63222da0
mov     ebx, [ebp+8]
mov     eax, [ebx+34h]
test    eax, eax
jle     loc_6320b331
shl     eax, 2
mov     [esp], eax
mov     dword ptr [ebp-38h], 0ffffffffh
call    sub_63222dd0
mov     [ebx+38h], eax
mov     eax, [ebx+34h]
shl     eax, 2
mov     [esp], eax
call    sub_63222dd0
mov     esi, [ebx+34h]
shl     esi, 2
mov     [ebx+3ch], eax
mov     [esp], esi
call    sub_63222dd0
mov     esi, [ebp+0ch]
mov     ecx, [ebx+34h]
mov     edx, [esi+38h]
shl     ecx, 2
mov     [ebx+40h], eax
mov     eax, [ebx+38h]
mov     [esp+8], ecx
mov     [esp+4], edx
mov     [esp], eax
call    memcpy
mov     ecx, [ebx+34h]
mov     edx, [esi+3ch]
mov     eax, [ebx+3ch]
shl     ecx, 2
mov     [esp+8], ecx
mov     [esp+4], edx
mov     [esp], eax
call    memcpy
mov     ecx, [ebx+34h]
mov     eax, [ebx+40h]
mov     esi, [esi+40h]
shl     ecx, 2
mov     [esp+8], ecx
mov     [esp+4], esi
mov     [esp], eax
call    memcpy
mov     edx, [ebp+0ch]
mov     ecx, [ebp+8]
mov     ebx, [edx+44h]
mov     esi, [edx+48h]
mov     eax, [edx+4ch]
mov     [ecx+44h], ebx
mov     ebx, [edx+50h]
mov     [ecx+48h], esi
mov     esi, [edx+54h]
mov     [ecx+4ch], eax
mov     eax, [edx+58h]
mov     [ecx+50h], ebx
mov     ebx, [edx+5ch]
mov     [ecx+54h], esi
mov     esi, [edx+60h]
mov     [ecx+58h], eax
mov     eax, [edx+64h]
mov     [ecx+5ch], ebx
mov     ebx, [edx+68h]
mov     [ecx+60h], esi
mov     esi, [edx+6ch]
mov     [ecx+64h], eax
mov     eax, [edx+0b8h]
mov     [ecx+68h], ebx
mov     ebx, [edx+0bch]
mov     [ecx+6ch], esi
mov     esi, [edx+0c0h]
mov     [ecx+0b8h], eax
mov     eax, [edx+0c4h]
mov     [ecx+0bch], ebx
movzx   ebx, byte ptr [edx+0c8h]
mov     [ecx+0c0h], esi
mov     [ecx+0c4h], eax
mov     [ecx+0c8h], bl
mov     ebx, [edx+0d8h]
mov     esi, [edx+0d0h]
mov     eax, [edx+0d4h]
mov     [ecx+0d8h], ebx
mov     ebx, [edx+0e4h]
mov     [ecx+0d0h], esi
mov     esi, [edx+0dch]
mov     [ecx+0d4h], eax
mov     eax, [edx+0e0h]
mov     [ecx+0e4h], ebx
mov     ebx, [edx+0f0h]
mov     [ecx+0dch], esi
mov     esi, [edx+0e8h]
mov     [ecx+0e0h], eax
mov     eax, [edx+0ech]
mov     [ecx+0f0h], ebx
mov     ebx, [edx+0cch]
mov     [ecx+0e8h], esi
mov     esi, [edx+0f4h]
mov     [ecx+0ech], eax
mov     eax, [edx+0f8h]
mov     [ecx+0cch], ebx
mov     ebx, [edx+0a4h]
mov     [ecx+0f4h], esi
mov     esi, [ebp+8]
mov     [ecx+0f8h], eax
mov     eax, edx
movzx   eax, byte ptr [eax+0b4h]
mov     [ecx+0a4h], ebx
mov     ecx, [edx+0a8h]
mov     edx, [edx+0ach]
mov     [esi+0a8h], ecx
add     ecx, ebx
test    al, al
mov     [esi+0ach], edx
mov     esi, [ebp+8]
lea     edx, [ecx+edx*2]
mov     [esi+0b4h], al
mov     [esi+0b0h], edx
jz      short loc_6320b117
add     edx, 1
mov     [esi+0b0h], edx
mov     ebx, [ebp+0ch]
mov     esi, [ebp+8]
mov     ecx, [ebx+12ch]
mov     eax, [ebx+130h]
mov     edx, [ebx+134h]
mov     [esi+12ch], ecx
mov     ecx, [ebx+138h]
mov     [esi+130h], eax
mov     eax, [ebx+13ch]
mov     [esi+134h], edx
mov     edx, [ebx+11ch]
mov     [esi+138h], ecx
mov     [esi+13ch], eax
mov     [esp+4], edx
mov     [esp], esi
mov     dword ptr [ebp-38h], 0ffffffffh
call    sub_6320ade0
mov     esi, [ebp+0ch]
mov     edx, [ebp+8]
mov     ecx, [esi+120h]
mov     ebx, [esi+124h]
mov     eax, [esi+128h]
mov     [edx+120h], ecx
mov     ecx, [esi+98h]
mov     [edx+124h], ebx
mov     [edx+128h], eax
mov     [edx+98h], ecx
mov     [esp], edx
call    sub_6320a1e0
mov     dword ptr [ebp-4ch], 1
mov     edx, [ebp+0ch]
xor     ebx, ebx
mov     esi, [edx+70h]
test    esi, esi
setnz   bl
cmp     dword ptr [edx+74h], 1
sbb     ebx, 0ffffffffh
cmp     dword ptr [edx+78h], 1
sbb     ebx, 0ffffffffh
cmp     dword ptr [edx+7ch], 1
sbb     ebx, 0ffffffffh
cmp     dword ptr [edx+80h], 1
sbb     ebx, 0ffffffffh
cmp     dword ptr [edx+84h], 1
sbb     ebx, 0ffffffffh
cmp     dword ptr [edx+88h], 1
sbb     ebx, 0ffffffffh
cmp     dword ptr [edx+8ch], 1
sbb     ebx, 0ffffffffh
cmp     dword ptr [edx+90h], 1
sbb     ebx, 0ffffffffh
cmp     dword ptr [edx+94h], 1
sbb     ebx, 0ffffffffh
cmp     [ebp-4ch], ebx
jge     loc_6320b30d
mov     eax, [ebp-4ch]
mov     ebx, [ebp+0ch]
mov     [ebp-50h], eax
mov     esi, [ebx+eax*4+70h]
test    esi, esi
mov     [ebp-48h], esi
jz      loc_6320b2cd
mov     ecx, [ebp+8]
mov     edx, [ecx+eax*4+70h]
test    edx, edx
mov     [ebp-44h], edx
jz      loc_6320b2d6
mov     esi, [ebp-48h]
mov     eax, [ebp-44h]
mov     ebx, [esi+4]
mov     [esp], eax
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+4], ebx
call    sub_6320fc90
mov     ecx, [ebp-48h]
mov     esi, [ebp-44h]
mov     edx, [ecx]
mov     [esp], esi
mov     [esp+4], edx
call    sub_6320fc30
mov     ecx, [ebp-44h]
mov     ebx, [ebp-48h]
mov     edx, [ecx+4]
movzx   eax, byte ptr [ebx+0ch]
test    edx, edx
mov     [ecx+0ch], al
jle     short loc_6320b2cd
mov     dword ptr [ebp-40h], 0
mov     ebx, [ebp-40h]
mov     eax, [ebp-48h]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+4], ebx
mov     [esp], eax
call    sub_6320fdc0
mov     ecx, [ebp-44h]
mov     [esp+4], ebx
add     ebx, 1
mov     [esp], ecx
mov     [esp+8], eax
call    sub_6320fdf0
mov     edx, [ebp-44h]
mov     [ebp-40h], ebx
cmp     [edx+4], ebx
jg      short loc_6320b293
add     dword ptr [ebp-4ch], 1
jmp     loc_6320b1b7
mov     dword ptr [esp], 10h
mov     dword ptr [ebp-38h], 0ffffffffh
call    sub_63222e50
mov     dword ptr [ebp-38h], 1
mov     [ebp-44h], eax
mov     [esp], eax
call    sub_6320fbf0
mov     eax, [ebp-44h]
mov     ebx, [ebp-50h]
mov     esi, [ebp+8]
mov     [esi+ebx*4+70h], eax
jmp     loc_6320b248
mov     eax, [ebp+8]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp], eax
call    sub_6320a720
lea     ecx, [ebp-3ch]
mov     [esp], ecx
call    sub_6321b300
add     esp, 60h
pop     ebx
pop     esi
pop     ebp
retn
mov     ebx, [ebp+8]
mov     dword ptr [ebx+38h], 0
mov     dword ptr [ebx+3ch], 0
mov     dword ptr [ebx+40h], 0
jmp     loc_6320afb1
add     ebp, 8
mov     ebx, [ebp-34h]
mov     esi, [ebp-44h]
mov     [esp], esi
call    sub_63222db0
mov     [esp], ebx
mov     dword ptr [ebp-38h], 0ffffffffh
call    sub_6321b600
sub     esp, 0ch
mov     edx, [esp+10h]
mov     eax, [esp+14h]
mov     [esp], ebx
mov     ecx, [esp+20h]
mov     [esp+4], esi
mov     ebx, [esp+1ch]
cmp     [edx+34h], eax
mov     [esp+8], edi
mov     esi, [esp+18h]
jle     short loc_6320b3c0
mov     edi, [edx+38h]
mov     edi, [edi+eax*4]
mov     [esi], edi
mov     edi, [edx+3ch]
mov     edx, [edx+40h]
mov     esi, [edi+eax*4]
mov     edi, [esp+8]
mov     [ebx], esi
mov     eax, [edx+eax*4]
mov     ebx, [esp]
mov     esi, [esp+4]
mov     [ecx], eax
add     esp, 0ch
retn
mov     dword ptr [esi], 100h
mov     edi, [esp+8]
mov     dword ptr [ebx], 100h
mov     esi, [esp+4]
mov     dword ptr [ecx], 100h
mov     ebx, [esp]
add     esp, 0ch
retn
sub     esp, 3ch
mov     [esp+2ch], ebx
mov     ebx, [esp+40h]
mov     [esp+30h], esi
mov     esi, [esp+44h]
mov     [esp+34h], edi
mov     [esp+38h], ebp
cmp     [ebx+34h], esi
jle     short loc_6320b443
mov     edi, [ebx+40h]
mov     ecx, [ebx+38h]
mov     ebp, [ebx+3ch]
mov     edx, [esp+48h]
mov     ebx, [esp+50h]
mov     eax, [esp+4ch]
mov     [ecx+esi*4], edx
mov     [ebp+esi*4+0], eax
mov     ebp, [esp+38h]
mov     [edi+esi*4], ebx
mov     ebx, [esp+2ch]
mov     esi, [esp+30h]
mov     edi, [esp+34h]
add     esp, 3ch
retn
lea     ebp, [esi+1]
lea     edi, ds:0[ebp*4]
mov     [esp], edi
call    sub_63222dd0
mov     [esp+1ch], eax
mov     eax, [ebx+38h]
test    eax, eax
jz      short loc_6320b489
mov     edx, [ebx+34h]
mov     [esp+4], eax
mov     eax, [esp+1ch]
shl     edx, 2
mov     [esp+8], edx
mov     [esp], eax
call    memcpy
mov     eax, [ebx+38h]
test    eax, eax
jz      short loc_6320b489
mov     [esp], eax
call    sub_63222da0
mov     ecx, [esp+1ch]
mov     [ebx+38h], ecx
mov     [esp], edi
call    sub_63222dd0
mov     [esp+1ch], eax
mov     eax, [ebx+3ch]
test    eax, eax
jz      short loc_6320b4cc
mov     edx, [ebx+34h]
mov     [esp+4], eax
mov     eax, [esp+1ch]
shl     edx, 2
mov     [esp+8], edx
mov     [esp], eax
call    memcpy
mov     eax, [ebx+3ch]
test    eax, eax
jz      short loc_6320b4cc
mov     [esp], eax
call    sub_63222da0
mov     ecx, [esp+1ch]
mov     [ebx+3ch], ecx
mov     [esp], edi
call    sub_63222dd0
mov     edi, eax
mov     eax, [ebx+40h]
test    eax, eax
jz      short loc_6320b509
mov     edx, [ebx+34h]
mov     [esp+4], eax
mov     [esp], edi
shl     edx, 2
mov     [esp+8], edx
call    memcpy
mov     eax, [ebx+40h]
test    eax, eax
jz      short loc_6320b509
mov     [esp], eax
call    sub_63222da0
mov     [ebx+40h], edi
mov     [ebx+34h], ebp
jmp     loc_6320b413
sub     esp, 1ch
mov     [esp+1ch+var_4], edi
mov     edi, [esp+1ch+arg_4]
mov     [esp+1ch+var_c], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_8], esi
test    edi, edi
jz      short loc_6320b580
lea     esi, [ebx+8]
mov     [esp+1ch+var_1c], esi
call    vlc_mutex_lock
mov     edx, [ebx+24h]
mov     [esp+1ch+var_1c], edx
call    sub_63222db0
lea     eax, [ebx+28h]
mov     [esp+1ch+var_1c], edi
mov     [esp+1ch+var_18], eax
call    sub_6320fd00
mov     edi, [esp+1ch+var_4]
mov     [ebx+24h], eax
mov     ebx, [esp+1ch+var_c]
mov     [esp+1ch+arg_0], esi
mov     esi, [esp+1ch+var_8]
add     esp, 1ch
jmp     vlc_mutex_unlock
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322e8c8
add     eax, 8
mov     [esp+arg_0], eax
jmp     vlc_mutex_destroy
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_6320b590
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     dword ptr [eax], offset off_6322e8c8
mov     [eax+4], edx
mov     dword ptr [eax+24h], 0
mov     dword ptr [eax+28h], 0
add     eax, 8
mov     [esp+arg_0], eax
jmp     vlc_mutex_init
add     [esp+arg_0], 8
jmp     vlc_mutex_lock
add     [esp+arg_0], 8
jmp     vlc_mutex_unlock
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_8]
mov     dword ptr [eax+10h], 0
mov     [eax+18h], ecx
mov     [eax+14h], edx
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 2
add     eax, 1ch
mov     [esp+arg_0], eax
jmp     vlc_mutex_init
add     [esp+arg_0], 1ch
jmp     vlc_mutex_destroy
add     [esp+arg_0], 1ch
jmp     vlc_mutex_lock
add     [esp+arg_0], 1ch
jmp     vlc_mutex_unlock
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 3ch
mov     ebx, [esp+4ch+arg_0]
mov     eax, [ebx+14h]
test    eax, eax
jz      loc_6320bdde
mov     [esp+4ch+var_4c], eax
call    sub_6320a720
mov     eax, [ebx+14h]
mov     edi, [eax+0a8h]
mov     ebp, [eax+0ach]
mov     esi, [eax+0a4h]
mov     [esp+4ch+var_34], edi
xor     edi, edi
mov     [esp+4ch+var_38], ebp
jmp     short loc_6320b6f9
mov     [esp+4ch+var_48], edi
mov     eax, [ebx+14h]
mov     [esp+4ch+var_4c], eax
call    sub_6320a6a0
test    eax, eax
jz      short loc_6320b6f3
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], eax
call    sub_6320f240
mov     eax, [ebx+14h]
add     edi, 1
mov     [esp+4ch+var_4c], eax
call    sub_6320a710
cmp     edi, eax
jl      short loc_6320b6d0
test    esi, esi
mov     [esp+4ch+var_2c], 0
jle     loc_6320b8d4
mov     [esp+4ch+var_48], 0
mov     edx, [ebx+14h]
lea     ecx, [esi-1]
and     ecx, 1
mov     edi, 1
mov     [esp+4ch+var_3c], ecx
mov     [esp+4ch+var_4c], edx
call    sub_6320a6a0
test    eax, eax
mov     ecx, eax
jz      short loc_6320b76b
mov     eax, 40h
mov     ebp, 40h
mov     edx, eax
sar     edx, 1fh
idiv    esi
mov     [esp+4ch+var_48], 0
mov     [esp+4ch+var_4c], ecx
lea     edx, [eax+2]
cmp     eax, 3dh
cmovle  ebp, edx
mov     [esp+4ch+var_44], ebp
call    sub_6320f4a0
cmp     edi, esi
mov     ebp, 40h
jge     loc_6320b8d0
mov     ecx, [esp+4ch+var_3c]
test    ecx, ecx
jz      short loc_6320b7f4
mov     [esp+4ch+var_48], 1
mov     edi, [ebx+14h]
mov     [esp+4ch+var_4c], edi
mov     edi, 2
call    sub_6320a6a0
test    eax, eax
mov     ecx, eax
jz      short loc_6320b7e9
mov     edx, ebp
mov     eax, ebp
sar     edx, 1fh
idiv    esi
mov     [esp+4ch+var_4c], ecx
mov     [esp+4ch+var_3c], eax
mov     eax, 80h
mov     edx, eax
sar     edx, 1fh
idiv    esi
cmp     eax, 3dh
lea     edx, [eax+2]
mov     eax, 40h
cmovle  eax, edx
mov     edx, 0
mov     [esp+4ch+var_44], eax
mov     eax, [esp+4ch+var_3c]
sub     eax, 2
cmp     [esp+4ch+var_3c], 3
cmovl   eax, edx
mov     [esp+4ch+var_48], eax
call    sub_6320f4a0
add     ebp, 40h
cmp     edi, esi
jge     loc_6320b8d0
mov     [esp+4ch+var_3c], ebp
mov     [esp+4ch+var_48], edi
mov     ebp, [ebx+14h]
add     edi, 1
mov     [esp+4ch+var_4c], ebp
call    sub_6320a6a0
test    eax, eax
mov     ecx, eax
jz      short loc_6320b855
mov     eax, [esp+4ch+var_3c]
mov     [esp+4ch+var_4c], ecx
mov     edx, eax
sar     edx, 1fh
idiv    esi
mov     ebp, eax
mov     eax, edi
shl     eax, 6
mov     edx, eax
sar     edx, 1fh
idiv    esi
lea     edx, [eax+2]
cmp     eax, 3dh
mov     eax, 40h
cmovle  eax, edx
cmp     ebp, 3
lea     edx, [ebp-2]
mov     ebp, 0
cmovl   edx, ebp
mov     [esp+4ch+var_44], eax
mov     [esp+4ch+var_48], edx
call    sub_6320f4a0
mov     ebp, [esp+4ch+var_3c]
mov     [esp+4ch+var_48], edi
mov     ecx, [ebx+14h]
add     edi, 1
add     ebp, 40h
mov     [esp+4ch+var_4c], ecx
mov     [esp+4ch+var_3c], ebp
call    sub_6320a6a0
test    eax, eax
mov     ecx, eax
jz      short loc_6320b8bd
mov     eax, [esp+4ch+var_3c]
mov     [esp+4ch+var_4c], ecx
mov     edx, eax
sar     edx, 1fh
idiv    esi
mov     ebp, eax
mov     eax, edi
shl     eax, 6
mov     edx, eax
sar     edx, 1fh
idiv    esi
lea     edx, [eax+2]
cmp     eax, 3dh
mov     eax, 40h
cmovle  eax, edx
cmp     ebp, 3
lea     edx, [ebp-2]
mov     ebp, 0
cmovl   edx, ebp
mov     [esp+4ch+var_44], eax
mov     [esp+4ch+var_48], edx
call    sub_6320f4a0
mov     ecx, [esp+4ch+var_3c]
add     ecx, 40h
cmp     edi, esi
mov     [esp+4ch+var_3c], ecx
jl      loc_6320b7f8
mov     [esp+4ch+var_2c], esi
mov     edi, [esp+4ch+var_38]
mov     esi, [esp+4ch+var_38]
sub     edi, 1
test    esi, esi
mov     [esp+4ch+var_28], edi
jle     loc_6320b99b
mov     esi, [esp+4ch+var_2c]
xor     edi, edi
mov     ebp, 1
jmp     short loc_6320b958
mov     edx, edi
mov     eax, edi
sar     edx, 1fh
add     edi, 30h
idiv    [esp+4ch+var_38]
mov     edx, edi
mov     [esp+4ch+var_30], ebp
mov     [esp+4ch+var_4c], ecx
sar     edx, 1fh
mov     [esp+4ch+var_3c], eax
mov     eax, edi
idiv    [esp+4ch+var_38]
cmp     eax, 2dh
lea     edx, [eax+2]
mov     eax, 30h
cmovle  eax, edx
mov     edx, [esp+4ch+var_3c]
mov     [esp+4ch+var_44], eax
mov     eax, 0
sub     edx, 2
cmp     [esp+4ch+var_3c], 3
cmovl   edx, eax
add     ebp, 1
mov     [esp+4ch+var_48], edx
call    sub_6320f390
mov     ecx, [esp+4ch+var_30]
cmp     [esp+4ch+var_38], ecx
jle     short loc_6320b984
mov     [esp+4ch+var_48], esi
mov     eax, [ebx+14h]
add     esi, 1
mov     [esp+4ch+var_4c], eax
call    sub_6320a6a0
test    eax, eax
mov     ecx, eax
jnz     short loc_6320b8f8
mov     [esp+4ch+var_30], ebp
mov     ecx, [esp+4ch+var_30]
add     edi, 30h
add     ebp, 1
cmp     [esp+4ch+var_38], ecx
jg      short loc_6320b958
mov     esi, [esp+4ch+var_38]
mov     edi, [esp+4ch+var_2c]
sub     esi, 1
lea     ebp, [edi+esi+1]
mov     [esp+4ch+var_28], esi
mov     [esp+4ch+var_2c], ebp
mov     ebp, [esp+4ch+var_34]
sub     ebp, 1
mov     [esp+4ch+var_24], ebp
js      loc_6320bbb6
and     ebp, 1
mov     ecx, [esp+4ch+var_34]
mov     [esp+4ch+var_20], ebp
mov     ebp, [esp+4ch+var_2c]
shl     ecx, 6
mov     [esp+4ch+var_48], ebp
mov     edx, [ebx+14h]
add     ebp, 1
mov     [esp+4ch+var_3c], ecx
mov     [esp+4ch+var_4c], edx
call    sub_6320a6a0
mov     ecx, eax
mov     eax, [esp+4ch+var_3c]
sub     eax, 40h
test    ecx, ecx
mov     [esp+4ch+var_30], eax
jz      short loc_6320ba2d
mov     eax, [esp+4ch+var_30]
mov     [esp+4ch+var_4c], ecx
mov     edx, eax
sar     edx, 1fh
idiv    [esp+4ch+var_34]
mov     esi, eax
mov     eax, [esp+4ch+var_3c]
lea     edi, [esi-2]
mov     edx, eax
sar     edx, 1fh
idiv    [esp+4ch+var_34]
cmp     eax, 3dh
lea     edx, [eax+2]
mov     eax, 40h
cmovg   edx, eax
cmp     esi, 3
mov     esi, 0
cmovl   edi, esi
mov     [esp+4ch+var_44], edx
mov     [esp+4ch+var_48], edi
call    sub_6320f5b0
mov     esi, [esp+4ch+var_24]
mov     edi, [esp+4ch+var_30]
sub     esi, 1
cmp     esi, 0ffffffffh
jz      loc_6320bba6
mov     ecx, [esp+4ch+var_20]
test    ecx, ecx
jz      short loc_6320bac2
mov     [esp+4ch+var_48], ebp
mov     eax, [ebx+14h]
add     ebp, 1
mov     [esp+4ch+var_4c], eax
call    sub_6320a6a0
mov     edi, [esp+4ch+var_3c]
lea     edi, [edi-80h]
test    eax, eax
mov     ecx, eax
jz      short loc_6320bab6
mov     edx, edi
mov     eax, edi
sar     edx, 1fh
idiv    [esp+4ch+var_34]
mov     [esp+4ch+var_4c], ecx
mov     [esp+4ch+var_3c], eax
mov     eax, [esp+4ch+var_30]
mov     edx, eax
sar     edx, 1fh
idiv    [esp+4ch+var_34]
cmp     eax, 3dh
lea     edx, [eax+2]
mov     eax, 40h
cmovle  eax, edx
mov     edx, 0
mov     [esp+4ch+var_44], eax
mov     eax, [esp+4ch+var_3c]
sub     eax, 2
cmp     [esp+4ch+var_3c], 3
cmovl   eax, edx
mov     [esp+4ch+var_48], eax
call    sub_6320f5b0
sub     esi, 1
cmp     esi, 0ffffffffh
jz      loc_6320bba6
mov     [esp+4ch+var_48], ebp
mov     eax, [ebx+14h]
add     ebp, 1
mov     [esp+4ch+var_4c], eax
call    sub_6320a6a0
mov     ecx, eax
test    ecx, ecx
lea     eax, [edi-40h]
mov     [esp+4ch+var_3c], eax
jz      short loc_6320bb2b
mov     edx, eax
sar     edx, 1fh
idiv    [esp+4ch+var_34]
mov     edx, edi
mov     [esp+4ch+var_4c], ecx
sar     edx, 1fh
mov     [esp+4ch+var_30], eax
mov     eax, edi
mov     edi, 0
idiv    [esp+4ch+var_34]
cmp     eax, 3dh
lea     edx, [eax+2]
mov     eax, 40h
cmovle  eax, edx
mov     edx, [esp+4ch+var_30]
mov     [esp+4ch+var_44], eax
sub     edx, 2
cmp     [esp+4ch+var_30], 3
cmovl   edx, edi
mov     [esp+4ch+var_48], edx
call    sub_6320f5b0
mov     [esp+4ch+var_48], ebp
lea     edi, [esi-1]
mov     esi, [ebx+14h]
add     ebp, 1
mov     [esp+4ch+var_4c], esi
call    sub_6320a6a0
test    eax, eax
mov     ecx, eax
jz      short loc_6320bb93
mov     esi, [esp+4ch+var_3c]
mov     [esp+4ch+var_4c], ecx
sub     esi, 40h
mov     edx, esi
mov     eax, esi
sar     edx, 1fh
idiv    [esp+4ch+var_34]
mov     esi, eax
mov     eax, [esp+4ch+var_3c]
mov     edx, eax
sar     edx, 1fh
idiv    [esp+4ch+var_34]
lea     edx, [eax+2]
cmp     eax, 3dh
mov     eax, 40h
cmovle  eax, edx
cmp     esi, 3
lea     edx, [esi-2]
mov     esi, 0
cmovl   edx, esi
mov     [esp+4ch+var_44], eax
mov     [esp+4ch+var_48], edx
call    sub_6320f5b0
mov     ecx, [esp+4ch+var_3c]
lea     esi, [edi-1]
cmp     esi, 0ffffffffh
lea     edi, [ecx-40h]
jnz     loc_6320bac2
mov     ecx, [esp+4ch+var_2c]
mov     edi, [esp+4ch+var_24]
lea     ebp, [ecx+edi+1]
mov     [esp+4ch+var_2c], ebp
mov     eax, [esp+4ch+var_28]
test    eax, eax
js      loc_6320bdd2
mov     esi, [esp+4ch+var_2c]
mov     edi, [esp+4ch+var_28]
mov     ebp, [esp+4ch+var_28]
mov     [esp+4ch+var_48], esi
mov     edx, [ebx+14h]
lea     ecx, [edi+edi*2]
shl     ecx, 4
and     ebp, 1
mov     [esp+4ch+var_34], ecx
mov     [esp+4ch+var_3c], ebp
mov     ebp, esi
mov     [esp+4ch+var_4c], edx
add     ebp, 1
call    sub_6320a6a0
test    eax, eax
mov     ecx, eax
jz      short loc_6320bc44
mov     eax, [esp+4ch+var_34]
mov     [esp+4ch+var_4c], ecx
mov     edx, eax
sar     edx, 1fh
idiv    [esp+4ch+var_38]
mov     esi, eax
mov     eax, [esp+4ch+var_34]
lea     edi, [esi-2]
add     eax, 30h
mov     edx, eax
sar     edx, 1fh
idiv    [esp+4ch+var_38]
cmp     eax, 2dh
lea     edx, [eax+2]
mov     eax, 30h
cmovg   edx, eax
cmp     esi, 3
mov     esi, 0
cmovl   edi, esi
mov     [esp+4ch+var_44], edx
mov     [esp+4ch+var_48], edi
call    sub_6320f280
mov     edi, [esp+4ch+var_28]
mov     esi, [esp+4ch+var_34]
sub     edi, 1
sub     esi, 30h
cmp     edi, 0ffffffffh
jz      loc_6320bdc2
mov     ecx, [esp+4ch+var_3c]
test    ecx, ecx
jz      short loc_6320bcd8
mov     [esp+4ch+var_48], ebp
mov     eax, [ebx+14h]
add     ebp, 1
mov     [esp+4ch+var_4c], eax
call    sub_6320a6a0
test    eax, eax
mov     ecx, eax
jz      short loc_6320bcc9
mov     edx, esi
mov     eax, esi
sar     edx, 1fh
idiv    [esp+4ch+var_38]
mov     [esp+4ch+var_4c], ecx
mov     [esp+4ch+var_3c], eax
mov     eax, [esp+4ch+var_34]
mov     edx, eax
sar     edx, 1fh
idiv    [esp+4ch+var_38]
cmp     eax, 2dh
lea     edx, [eax+2]
mov     eax, 30h
cmovle  eax, edx
mov     edx, 0
mov     [esp+4ch+var_44], eax
mov     eax, [esp+4ch+var_3c]
sub     eax, 2
cmp     [esp+4ch+var_3c], 3
cmovl   eax, edx
mov     [esp+4ch+var_48], eax
call    sub_6320f280
sub     edi, 1
sub     esi, 30h
cmp     edi, 0ffffffffh
jz      loc_6320bdc2
mov     [esp+4ch+var_48], ebp
mov     eax, [ebx+14h]
add     ebp, 1
mov     [esp+4ch+var_4c], eax
call    sub_6320a6a0
mov     [esp+4ch+var_3c], ebp
test    eax, eax
mov     ecx, eax
jz      short loc_6320bd39
mov     edx, esi
mov     eax, esi
sar     edx, 1fh
idiv    [esp+4ch+var_38]
mov     [esp+4ch+var_4c], ecx
mov     ebp, eax
lea     eax, [esi+30h]
mov     edx, eax
sar     edx, 1fh
idiv    [esp+4ch+var_38]
lea     edx, [eax+2]
cmp     eax, 2dh
mov     eax, 30h
cmovle  eax, edx
cmp     ebp, 3
lea     edx, [ebp-2]
mov     ebp, 0
cmovl   edx, ebp
mov     [esp+4ch+var_44], eax
mov     [esp+4ch+var_48], edx
call    sub_6320f280
sub     edi, 1
mov     [esp+4ch+var_30], edi
mov     edi, [esp+4ch+var_3c]
lea     ebp, [esi-30h]
mov     [esp+4ch+var_34], ebp
mov     [esp+4ch+var_48], edi
mov     ecx, [ebx+14h]
mov     ebp, edi
add     ebp, 1
mov     [esp+4ch+var_4c], ecx
call    sub_6320a6a0
test    eax, eax
mov     ecx, eax
jz      short loc_6320bdab
mov     eax, [esp+4ch+var_34]
mov     [esp+4ch+var_4c], ecx
mov     edx, eax
sar     edx, 1fh
idiv    [esp+4ch+var_38]
mov     edx, esi
sar     edx, 1fh
mov     edi, eax
mov     eax, esi
idiv    [esp+4ch+var_38]
lea     edx, [edi-2]
cmp     eax, 2dh
lea     esi, [eax+2]
mov     eax, 30h
cmovle  eax, esi
cmp     edi, 3
mov     edi, 0
cmovl   edx, edi
mov     [esp+4ch+var_44], eax
mov     [esp+4ch+var_48], edx
call    sub_6320f280
mov     edi, [esp+4ch+var_30]
mov     esi, [esp+4ch+var_34]
sub     edi, 1
sub     esi, 30h
cmp     edi, 0ffffffffh
jnz     loc_6320bcd8
mov     eax, [esp+4ch+var_2c]
mov     edx, [esp+4ch+var_28]
lea     esi, [eax+edx+1]
mov     [esp+4ch+var_2c], esi
mov     eax, [ebx+14h]
cmp     byte ptr [eax+0b4h], 0
jnz     short loc_6320bde6
add     esp, 3ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     ebx, [esp+4ch+var_2c]
mov     [esp+4ch+var_4c], eax
mov     [esp+4ch+var_48], ebx
call    sub_6320a6a0
test    eax, eax
jz      short loc_6320bdde
mov     [esp+4ch+var_48], 0ffh
mov     [esp+4ch+var_4c], eax
call    sub_6320f240
add     esp, 3ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     esp, 1ch
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], eax
call    sub_6320d890
mov     eax, 1
add     esp, 1ch
retn
sub     esp, 1ch
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], eax
call    sub_6320d900
mov     eax, 1
add     esp, 1ch
retn
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     ecx, [ebp+var_8]
lea     eax, [ebp+var_3c]
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_632241d8
mov     [ebp+var_1c], ecx
mov     [ebp+var_18], offset sub_6320bf11
mov     [ebp+var_14], esp
mov     [esp], eax
call    sub_6321b240
mov     edx, [ebp+arg_0]
mov     dword ptr [edx], offset off_6322ea88
add     edx, 48h
mov     [ebp+var_40], edx
mov     [esp], edx
mov     [ebp+var_38], 1
call    vlc_mutex_lock
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+90h]
mov     [esp], eax
call    free
mov     edx, [ebp+var_40]
mov     [esp], edx
call    vlc_mutex_unlock
mov     edx, [ebp+arg_0]
add     edx, 40h
mov     [esp], edx
call    vlc_cond_destroy
mov     eax, [ebp+var_40]
mov     [esp], eax
call    vlc_mutex_destroy
mov     edx, [ebp+arg_0]
mov     [ebp+var_38], 0ffffffffh
mov     [esp], edx
call    sub_6320c860
lea     ecx, [ebp+var_3c]
mov     [esp], ecx
call    sub_6321b300
leave
retn
add     ebp, 8
mov     edx, [ebp-34h]
mov     ecx, [ebp+8]
mov     dword ptr [ebp-38h], 0
mov     [ebp-44h], edx
mov     [esp+0], ecx
call    sub_6320c860
mov     eax, [ebp-44h]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], eax
call    sub_6321b600
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_6320be70
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     edx, [ebp+var_3c]
lea     ecx, [ebp+var_8]
mov     [esp], edx
mov     [ebp+var_1c], ecx
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset word_632241de
mov     [ebp+var_18], offset sub_6320bff9
mov     [ebp+var_14], esp
call    sub_6321b240
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
mov     [ebp+var_38], 0ffffffffh
mov     [esp+4], eax
mov     [esp], ecx
call    sub_6320c930
mov     edx, [ebp+arg_0]
mov     eax, edx
mov     dword ptr [edx], offset off_6322ea88
add     eax, 40h
mov     [esp], eax
mov     [ebp+var_38], 1
call    vlc_cond_init
mov     eax, [ebp+arg_0]
add     eax, 48h
mov     [esp], eax
call    vlc_mutex_init
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
mov     dword ptr [ecx+90h], 0
mov     ecx, [edx+18h]
lea     edx, [ebp+var_3c]
mov     [eax+64h], ecx
mov     [esp], edx
call    sub_6321b300
leave
retn
add     ebp, 8
mov     ecx, [ebp-34h]
mov     edx, [ebp+8]
mov     dword ptr [ebp-38h], 0
mov     [ebp-40h], ecx
mov     [esp+0], edx
call    sub_6320c860
mov     eax, [ebp-40h]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], eax
call    sub_6321b600
sub     esp, 2ch
mov     [esp+2ch+var_10], ebx
mov     ebx, [esp+2ch+arg_0]
mov     [esp+2ch+var_c], esi
mov     [esp+2ch+var_8], edi
mov     edi, [esp+2ch+arg_8]
mov     [esp+2ch+var_4], ebp
mov     ebp, [esp+2ch+arg_4]
lea     esi, [ebx+48h]
mov     [esp+2ch+var_2c], esi
call    vlc_mutex_lock
mov     eax, [ebx+90h]
test    eax, eax
jz      short loc_6320c090
add     ebx, 40h
mov     [esp+2ch+var_2c], ebx
call    vlc_cond_signal
mov     ebx, [esp+2ch+var_10]
mov     [esp+2ch+arg_0], esi
mov     edi, [esp+2ch+var_8]
mov     esi, [esp+2ch+var_c]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
jmp     vlc_mutex_unlock
mov     edx, [ebp+0]
lea     ecx, [ebx+68h]
mov     [esp+2ch+src], ebp
mov     [esp+2ch+var_2c], ecx
mov     [esp+2ch+size], edx
call    memcpy
mov     eax, [ebx+6ch]
movzx   edx, word ptr [ebx+76h]
imul    eax, [ebx+70h]
cmp     dx, 18h
lea     ebp, [eax+eax*2]
jz      short loc_6320c0d1
cmp     dx, 20h
lea     ebp, ds:0[eax*4]
jz      short loc_6320c0d1
lea     ebp, [eax+eax]
cmp     dx, 10h
cmovnz  ebp, eax
mov     [esp+2ch+var_2c], ebp
call    malloc
mov     [ebx+90h], eax
mov     [esp+2ch+size], ebp
mov     [esp+2ch+src], edi
mov     [esp+2ch+var_2c], eax
call    memcpy
jmp     loc_6320c064
push    ebp
mov     eax, 245ch
push    edi
push    esi
push    ebx
call    sub_6321b810
sub     esp, eax
mov     ebx, [esp+10h+arg_245c]
lea     eax, [esp+10h+arg_39]
mov     [esp+10h+size], 2400h
mov     [esp+10h+val], 0
mov     [esp+10h+block], eax
call    memset
cmp     dword ptr [ebx+6ch], 40h
jz      short loc_6320c181
mov     esi, [ebx+90h]
mov     [esp+10h+block], esi
call    free
lea     eax, [esp+10h+arg_39]
mov     dword ptr [ebx+90h], 0
mov     [esp+10h+val], eax
mov     edx, [ebx+3ch]
mov     [esp+10h+block], edx
call    sub_63208a80
mov     [esp+10h+val], eax
mov     esi, [ebx+38h]
mov     edi, [esi+4]
mov     [esp+10h+block], edi
call    sub_632130e0
add     esp, 245ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
cmp     dword ptr [ebx+70h], 30h
jnz     short loc_6320c139
mov     eax, [ebx+78h]
cmp     eax, 49565348h
jz      loc_6320c7a6
test    eax, eax
jnz     short loc_6320c139
movzx   eax, word ptr [ebx+76h]
cmp     ax, 10h
jz      loc_6320c67b
cmp     ax, 18h
jz      loc_6320c429
cmp     ax, 20h
jnz     short loc_6320c139
mov     [esp+10h+arg_10], 100h
mov     edx, ebx
mov     [esp+10h+arg_14], 0
lea     esi, [esi+0]
mov     edi, [edx+90h]
mov     eax, [esp+10h+arg_14]
mov     ebx, [esp+10h+arg_14]
mov     ebp, [esp+10h+arg_10]
movzx   ecx, byte ptr [edi+eax*4]
shl     ebx, 2
movzx   esi, byte ptr [edi+ebx+1]
sub     ebp, ebx
sub     ebp, 4
mov     byte ptr [esp+10h+arg_c], cl
shr     ebp, 2
mov     [esp+10h+arg_243b], cl
movzx   ecx, byte ptr [edi+ebx+2]
and     ebp, 1
mov     eax, esi
mov     edi, [esp+10h+arg_14]
mov     byte ptr [esp+10h+arg_2439+1], al
lea     esi, [ebx+4]
mov     [esp+10h+arg_0], edx
mov     byte ptr [esp+10h+arg_2439], cl
movzx   eax, [esp+10h+arg_2439]
lea     edi, [edi+edi*2]
lea     ecx, [esp+edi+10h+arg_39]
mov     [esp+10h+arg_8], ecx
mov     word ptr [esp+10h+val], ax
movzx   eax, byte ptr [esp+10h+arg_c]
mov     byte ptr [esp+10h+val+2], al
lea     eax, [esp+10h+arg_1c]
mov     [esp+10h+block], eax
call    sub_63208590
sub     esp, 4
movzx   ecx, [esp+10h+arg_1c]
mov     [esp+edi+10h+arg_39], cx
mov     edi, [esp+10h+arg_8]
movzx   eax, [esp+10h+arg_1e]
mov     [edi+2], al
mov     edi, [esp+10h+arg_14]
mov     edx, [esp+10h+arg_0]
add     edi, 1
cmp     esi, [esp+10h+arg_10]
jz      loc_6320c407
test    ebp, ebp
jz      loc_6320c311
mov     eax, [edx+90h]
movzx   ecx, byte ptr [eax+ebx+4]
movzx   ebp, byte ptr [eax+esi+1]
movzx   eax, byte ptr [eax+esi+2]
lea     esi, [ebx+8]
lea     ebx, [edi+edi*2]
mov     byte ptr [esp+10h+arg_c], cl
mov     [esp+10h+arg_243b], cl
mov     ecx, ebp
mov     byte ptr [esp+10h+arg_2439+1], cl
movzx   ecx, byte ptr [esp+10h+arg_c]
lea     ebp, [esp+ebx+10h+arg_39]
mov     byte ptr [esp+10h+arg_2439], al
movzx   edi, [esp+10h+arg_2439]
lea     eax, [esp+10h+arg_1c]
mov     [esp+10h+arg_0], edx
mov     [esp+10h+block], eax
mov     byte ptr [esp+10h+val+2], cl
mov     word ptr [esp+10h+val], di
call    sub_63208590
sub     esp, 4
movzx   edi, [esp+10h+arg_1c]
mov     [esp+ebx+10h+arg_39], di
mov     edi, [esp+10h+arg_14]
movzx   ecx, [esp+10h+arg_1e]
add     edi, 2
cmp     esi, [esp+10h+arg_10]
mov     [ebp+2], cl
mov     edx, [esp+10h+arg_0]
jz      loc_6320c407
mov     ebp, [edx+90h]
movzx   ebx, byte ptr [ebp+esi+1]
movzx   ecx, byte ptr [ebp+esi+2]
movzx   eax, byte ptr [ebp+esi+0]
lea     ebp, [edi+edi*2]
mov     [esp+10h+arg_0], edx
mov     byte ptr [esp+10h+arg_2439+1], bl
lea     ebx, [esp+ebp+10h+arg_39]
mov     byte ptr [esp+10h+arg_2439], cl
movzx   ecx, [esp+10h+arg_2439]
mov     [esp+10h+arg_c], ebx
lea     ebx, [esp+10h+arg_1c]
mov     [esp+10h+arg_243b], al
mov     byte ptr [esp+10h+val+2], al
mov     word ptr [esp+10h+val], cx
mov     [esp+10h+block], ebx
call    sub_63208590
sub     esp, 4
movzx   edx, [esp+10h+arg_1c]
mov     ecx, [esp+10h+arg_c]
mov     [esp+ebp+10h+arg_39], dx
movzx   eax, [esp+10h+arg_1e]
mov     [ecx+2], al
mov     ebx, [esp+10h+arg_0]
mov     eax, [ebx+90h]
movzx   ebp, byte ptr [eax+esi+5]
movzx   edx, byte ptr [eax+esi+4]
movzx   ebx, byte ptr [eax+esi+6]
add     esi, 8
mov     ecx, ebp
mov     byte ptr [esp+10h+arg_c], dl
movzx   eax, byte ptr [esp+10h+arg_c]
mov     byte ptr [esp+10h+arg_2439+1], cl
lea     ecx, [esp+10h+arg_1c]
mov     byte ptr [esp+10h+arg_2439], bl
lea     ebx, [edi+edi*2+3]
add     edi, 2
mov     [esp+10h+arg_243b], dl
movzx   edx, [esp+10h+arg_2439]
lea     ebp, [esp+ebx+10h+arg_39]
mov     byte ptr [esp+10h+val+2], al
mov     [esp+10h+block], ecx
mov     word ptr [esp+10h+val], dx
call    sub_63208590
sub     esp, 4
movzx   edx, [esp+10h+arg_1c]
cmp     esi, [esp+10h+arg_10]
mov     [esp+ebx+10h+arg_39], dx
movzx   ebx, [esp+10h+arg_1e]
mov     [ebp+2], bl
mov     edx, [esp+10h+arg_0]
jnz     loc_6320c311
add     [esp+10h+arg_14], 40h
add     [esp+10h+arg_10], 100h
cmp     [esp+10h+arg_14], 0c00h
jnz     loc_6320c1d0
mov     ebx, edx
jmp     loc_6320c139
mov     [esp+10h+arg_14], 0
lea     ebp, [esp+10h+arg_1c]
mov     [esp+10h+arg_18], 0
lea     esi, [esi+0]
mov     esi, [esp+10h+arg_14]
mov     edi, [esp+10h+arg_18]
add     [esp+10h+arg_14], 0c0h
mov     eax, [ebx+90h]
movzx   edx, byte ptr [eax+esi]
movzx   ecx, byte ptr [eax+esi+1]
mov     byte ptr [esp+10h+arg_10], dl
mov     [esp+10h+arg_243b], dl
movzx   edx, byte ptr [eax+esi+2]
lea     eax, [esi+3]
mov     byte ptr [esp+10h+arg_2439+1], cl
mov     [esp+10h+arg_4], eax
mov     [esp+10h+block], ebp
mov     byte ptr [esp+10h+arg_2439], dl
lea     edx, [edi+edi*2]
lea     ecx, [esp+edx+10h+arg_39]
mov     [esp+10h+arg_c], ecx
movzx   ecx, [esp+10h+arg_2439]
mov     [esp+10h+arg_0], edx
mov     word ptr [esp+10h+val], cx
movzx   ecx, byte ptr [esp+10h+arg_10]
mov     byte ptr [esp+10h+val+2], cl
call    sub_63208590
sub     esp, 4
movzx   edx, [esp+10h+arg_1c]
mov     eax, [esp+10h+arg_0]
mov     ecx, [esp+10h+arg_c]
mov     [esp+eax+10h+arg_39], dx
movzx   edx, [esp+10h+arg_1e]
mov     [ecx+2], dl
mov     ecx, [ebx+90h]
movzx   eax, byte ptr [ecx+esi+3]
mov     byte ptr [esp+10h+arg_10], al
mov     [esp+10h+arg_243b], al
mov     eax, [esp+10h+arg_4]
movzx   edx, byte ptr [ecx+eax+1]
movzx   ecx, byte ptr [ecx+eax+2]
lea     eax, [esi+6]
mov     [esp+10h+arg_4], eax
mov     [esp+10h+block], ebp
mov     byte ptr [esp+10h+arg_2439+1], dl
mov     byte ptr [esp+10h+arg_2439], cl
lea     ecx, [edi+edi*2+3]
lea     edx, [esp+ecx+10h+arg_39]
mov     [esp+10h+arg_c], edx
movzx   edx, [esp+10h+arg_2439]
mov     [esp+10h+arg_8], ecx
mov     word ptr [esp+10h+val], dx
movzx   edx, byte ptr [esp+10h+arg_10]
mov     byte ptr [esp+10h+val+2], dl
call    sub_63208590
sub     esp, 4
mov     edx, [esp+10h+arg_8]
movzx   eax, [esp+10h+arg_1c]
mov     ecx, [esp+10h+arg_c]
mov     [esp+edx+10h+arg_39], ax
movzx   edx, [esp+10h+arg_1e]
mov     [ecx+2], dl
mov     ecx, [ebx+90h]
movzx   eax, byte ptr [ecx+esi+6]
mov     byte ptr [esp+10h+arg_10], al
mov     [esp+10h+arg_243b], al
mov     eax, [esp+10h+arg_4]
movzx   edx, byte ptr [ecx+eax+1]
movzx   ecx, byte ptr [ecx+eax+2]
lea     eax, [esi+9]
mov     [esp+10h+arg_4], eax
mov     [esp+10h+block], ebp
mov     byte ptr [esp+10h+arg_2439+1], dl
mov     byte ptr [esp+10h+arg_2439], cl
lea     ecx, [edi+edi*2+6]
lea     edx, [esp+ecx+10h+arg_39]
mov     [esp+10h+arg_c], edx
movzx   edx, [esp+10h+arg_2439]
mov     [esp+10h+arg_8], ecx
mov     word ptr [esp+10h+val], dx
movzx   edx, byte ptr [esp+10h+arg_10]
mov     byte ptr [esp+10h+val+2], dl
call    sub_63208590
sub     esp, 4
movzx   eax, [esp+10h+arg_1c]
mov     edx, [esp+10h+arg_8]
mov     ecx, [esp+10h+arg_c]
mov     [esp+edx+10h+arg_39], ax
movzx   edx, [esp+10h+arg_1e]
mov     [ecx+2], dl
mov     edx, [ebx+90h]
movzx   eax, byte ptr [edx+esi+9]
add     esi, 0ch
mov     byte ptr [esp+10h+arg_c], al
mov     [esp+10h+arg_243b], al
mov     eax, [esp+10h+arg_4]
movzx   ecx, byte ptr [edx+eax+1]
movzx   edx, byte ptr [edx+eax+2]
lea     eax, [edi+edi*2+9]
add     edi, 4
mov     [esp+10h+arg_4], eax
mov     [esp+10h+block], ebp
mov     byte ptr [esp+10h+arg_2439+1], cl
mov     byte ptr [esp+10h+arg_2439], dl
movzx   ecx, [esp+10h+arg_2439]
lea     edx, [esp+eax+10h+arg_39]
mov     [esp+10h+arg_0], edx
mov     word ptr [esp+10h+val], cx
movzx   ecx, byte ptr [esp+10h+arg_c]
mov     byte ptr [esp+10h+val+2], cl
call    sub_63208590
sub     esp, 4
mov     eax, [esp+10h+arg_4]
movzx   ecx, [esp+10h+arg_1c]
cmp     esi, [esp+10h+arg_14]
mov     [esp+eax+10h+arg_39], cx
movzx   eax, [esp+10h+arg_1e]
mov     edx, [esp+10h+arg_0]
mov     [edx+2], al
jnz     loc_6320c450
add     [esp+10h+arg_18], 40h
cmp     [esp+10h+arg_18], 0c00h
jnz     loc_6320c440
jmp     loc_6320c139
xor     esi, esi
mov     ebp, [ebx+90h]
mov     [esp+10h+arg_c], ebx
mov     ebx, esi
lea     esi, [esi+0]
lea     edi, [ebx+40h]
movzx   edx, word ptr [ebp+ebx*2+0]
lea     esi, [ebx+ebx*2]
movzx   ecx, dx
lea     eax, ds:0[ecx*8]
shr     dx, 0ah
sar     ecx, 5
shl     ecx, 3
shl     edx, 2
mov     byte ptr [esp+10h+arg_2439], dl
lea     edx, [esp+esi+10h+arg_39]
mov     byte ptr [esp+10h+arg_2439+1], cl
movzx   ecx, [esp+10h+arg_2439]
mov     [esp+10h+arg_243b], al
mov     byte ptr [esp+10h+val+2], al
lea     eax, [esp+10h+arg_1c]
mov     [esp+10h+block], eax
mov     word ptr [esp+10h+val], cx
mov     [esp+10h+arg_0], edx
call    sub_63208590
sub     esp, 4
movzx   ecx, [esp+10h+arg_1c]
mov     [esp+esi+10h+arg_39], cx
movzx   eax, [esp+10h+arg_1e]
mov     edx, [esp+10h+arg_0]
mov     [edx+2], al
lea     eax, [ebx+1]
add     ebx, 2
movzx   esi, word ptr [ebp+eax*2+0]
lea     edx, ds:0[esi*8]
sar     esi, 5
shl     esi, 3
mov     ecx, esi
mov     byte ptr [esp+10h+arg_2439+1], cl
movzx   ecx, word ptr [ebp+eax*2+0]
lea     esi, [eax+eax*2]
lea     eax, [esp+esi+10h+arg_39]
mov     [esp+10h+arg_243b], dl
mov     byte ptr [esp+10h+val+2], dl
shr     cx, 0ah
shl     ecx, 2
mov     byte ptr [esp+10h+arg_2439], cl
movzx   ecx, [esp+10h+arg_2439]
mov     [esp+10h+arg_4], eax
mov     word ptr [esp+10h+val], cx
lea     ecx, [esp+10h+arg_1c]
mov     [esp+10h+block], ecx
call    sub_63208590
sub     esp, 4
cmp     edi, ebx
movzx   edx, [esp+10h+arg_1c]
mov     [esp+esi+10h+arg_39], dx
movzx   eax, [esp+10h+arg_1e]
mov     ecx, [esp+10h+arg_4]
mov     [ecx+2], al
jnz     loc_6320c693
cmp     edi, 0c00h
mov     ebx, edi
jnz     loc_6320c690
mov     ebx, [esp+10h+arg_c]
mov     esi, [ebx+90h]
jmp     loc_6320c13f
mov     esi, [ebx+90h]
lea     edx, [esp+10h+arg_39]
mov     [esp+10h+size], 2400h
mov     [esp+10h+block], edx
mov     [esp+10h+val], esi
call    memcpy
jmp     loc_6320c13f
push    edi
push    esi
push    ebx
sub     esp, 10h
mov     ebx, [esp+1ch+arg_0]
movzx   eax, byte ptr [ebx+34h]
test    al, al
jnz     short loc_6320c833
lea     esi, [ebx+48h]
lea     edi, [ebx+40h]
mov     [esp+1ch+var_1c], esi
call    vlc_mutex_lock
call    mdate
mov     [esp+1ch+var_18], esi
mov     [esp+1ch+var_1c], edi
add     eax, 124f8h
adc     edx, 0
mov     [esp+1ch+var_10], edx
mov     [esp+1ch+var_14], eax
call    vlc_cond_timedwait
mov     edx, [ebx+90h]
test    edx, edx
jz      short loc_6320c823
mov     [esp+1ch+var_1c], ebx
call    sub_6320c100
mov     [esp+1ch+var_1c], esi
call    vlc_mutex_unlock
movzx   ecx, byte ptr [ebx+34h]
test    cl, cl
jz      short loc_6320c7e8
mov     [esp+1ch+var_10], offset adwordcatmoexte
mov     [esp+1ch+var_14], offset aatmo_5
mov     [esp+1ch+var_18], 3
mov     ebx, [ebx+64h]
mov     [esp+1ch+var_1c], ebx
call    vlc_log
add     esp, 10h
xor     eax, eax
pop     ebx
pop     esi
pop     edi
retn
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     ecx, [ebp+var_8]
lea     edx, [ebp+var_3c]
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_632241e4
mov     [ebp+var_1c], ecx
mov     [ebp+var_18], offset sub_6320c8db
mov     [ebp+var_14], esp
mov     [esp], edx
call    sub_6321b240
mov     eax, [ebp+arg_0]
mov     dword ptr [eax], offset off_6322e870
mov     eax, [eax+3ch]
test    eax, eax
mov     [ebp+var_40], eax
jz      short loc_6320c8bc
mov     [esp], eax
mov     [ebp+var_38], 1
call    sub_632083e0
mov     eax, [ebp+var_40]
mov     [esp], eax
call    sub_63222db0
mov     ecx, [ebp+arg_0]
mov     [ebp+var_38], 0ffffffffh
mov     [esp], ecx
call    sub_6320d7e0
lea     edx, [ebp+var_3c]
mov     [esp], edx
call    sub_6321b300
leave
retn
add     ebp, 8
mov     eax, [ebp-34h]
mov     ecx, [ebp+8]
mov     dword ptr [ebp-38h], 0
mov     [ebp-44h], eax
mov     [esp+0], ecx
call    sub_6320d7e0
mov     eax, [ebp-44h]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], eax
call    sub_6321b600
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_6320c860
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     eax, [ebp+var_8]
lea     edx, [ebp+var_3c]
mov     [ebp+var_1c], eax
mov     [esp], edx
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset word_632241ea
mov     [ebp+var_18], offset sub_6320c9d5
mov     [ebp+var_14], esp
call    sub_6321b240
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
mov     eax, [ecx+18h]
mov     [esp], edx
mov     [ebp+var_38], 0ffffffffh
mov     [esp+4], eax
call    sub_6320d850
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
mov     edx, [eax+14h]
mov     dword ptr [ecx], offset off_6322e870
mov     [ecx+38h], eax
mov     dword ptr [esp], 48h
mov     [ebp+var_44], edx
mov     [ebp+var_38], 1
call    sub_63222e50
mov     [ebp+var_40], eax
mov     edx, [ebp+var_44]
mov     ecx, [ebp+var_40]
mov     [ebp+var_38], 2
mov     [esp+4], edx
mov     [esp], ecx
call    sub_63208350
mov     ecx, [ebp+var_40]
lea     eax, [ebp+var_3c]
mov     edx, [ebp+arg_0]
mov     [edx+3ch], ecx
mov     [esp], eax
call    sub_6321b300
leave
retn
add     ebp, 8
mov     eax, [ebp-38h]
mov     ecx, [ebp-34h]
test    eax, eax
mov     [ebp-48h], ecx
jz      short loc_6320c9f7
sub     eax, 1
jz      short loc_6320c9ec
mov     eax, [ebp-40h]
mov     [esp+0], eax
call    sub_63222db0
mov     eax, [ebp+8]
mov     dword ptr [ebp-38h], 0
mov     [esp+0], eax
call    sub_6320d7e0
mov     edx, [ebp-48h]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], edx
call    sub_6321b600
rep retn
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322e8a8
jmp     sub_6320d7e0
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_6320ca30
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
mov     eax, 2710h
xor     edx, edx
retn
push    ebp
mov     ebp, esp
sub     esp, 0c8h
lea     ecx, [ebp+var_8]
lea     eax, [ebp+var_4c]
mov     [ebp+var_2c], ecx
mov     [esp], eax
mov     [ebp+var_34], offset sub_63223ad0
mov     [ebp+var_30], offset dword_632241f4
mov     [ebp+var_28], offset sub_6320cfc5
mov     [ebp+var_24], esp
call    sub_6321b240
mov     edx, [ebp+arg_0]
mov     eax, [edx+38h]
mov     ecx, [eax+18h]
mov     eax, [eax+10h]
mov     [ebp+var_74], ecx
test    eax, eax
mov     [ebp+var_6c], eax
jz      loc_6320cd90
mov     ecx, [eax]
mov     [esp], eax
mov     eax, [ecx+10h]
mov     [ebp+var_48], 0ffffffffh
call    eax
test    al, al
jz      loc_6320cd90
mov     eax, [ebp+arg_0]
mov     edx, [eax+38h]
mov     ecx, [edx+14h]
mov     dword ptr [esp], 18h
mov     [ebp+var_48], 0ffffffffh
mov     [ebp+var_70], ecx
call    sub_63222e50
mov     [ebp+var_48], 1
mov     [ebp+var_84], eax
mov     eax, [ebp+var_70]
mov     edx, [ebp+var_84]
mov     [esp+4], eax
mov     [esp], edx
call    sub_6320d760
mov     edx, [ebp+arg_0]
mov     ecx, [edx+38h]
mov     edx, [ebp+var_70]
mov     eax, [ecx+4]
imul    ecx, [edx+0f4h], 3e8h
mov     [ebp+var_48], 0ffffffffh
mov     [ebp+var_78], eax
mov     [ebp+var_88], ecx
call    mdate
mov     dword ptr [esp+4], 0bb8h
mov     [ebp+var_90], eax
mov     eax, [ebp+var_78]
mov     [ebp+var_8c], edx
mov     [esp], eax
call    sub_632134f0
test    al, al
jnz     loc_6320cf40
mov     edx, [ebp+var_88]
mov     [ebp+var_54], 0
mov     [ebp+var_58], 0ffffffffh
mov     ecx, edx
sar     ecx, 1fh
mov     [ebp+var_80], edx
mov     [ebp+var_7c], ecx
mov     eax, [ebp+arg_0]
movzx   ecx, byte ptr [eax+34h]
test    cl, cl
jnz     loc_6320cd31
add     [ebp+var_58], 1
cmp     [ebp+var_58], 32h
jz      loc_6320cda0
mov     eax, [ebp+var_58]
xor     ecx, ecx
test    eax, eax
setz    cl
mov     [ebp+var_60], ecx
mov     [ebp+var_48], 0ffffffffh
call    mdate
lea     ecx, [ebp+var_10]
mov     [esp+14h], ecx
mov     ecx, [ebp+var_74]
sub     eax, [ebp+var_80]
sbb     edx, [ebp+var_7c]
mov     [esp+10h], ecx
mov     ecx, [ebp+var_60]
mov     [esp+4], eax
mov     [esp+8], edx
mov     edx, [ebp+var_78]
mov     [esp+0ch], ecx
mov     [esp], edx
call    sub_63213350
test    eax, eax
mov     [ebp+src], eax
jz      loc_6320cdc7
mov     eax, [ebp+var_54]
test    eax, eax
jz      short loc_6320cc0d
mov     edx, [ebp+var_54]
mov     ecx, [ebp+src]
mov     eax, [edx]
cmp     eax, [ecx]
jz      loc_6320ce30
mov     ecx, [ebp+var_54]
mov     [esp], ecx
call    sub_63222db0
mov     edx, [ebp+src]
mov     eax, [edx]
mov     [ebp+var_48], 0ffffffffh
lea     ecx, [eax+eax*2+8]
mov     [esp], ecx
call    sub_63222dd0
mov     ecx, [ebp+src]
mov     edx, [ecx]
mov     [esp+4], ecx
mov     [ebp+var_54], eax
lea     eax, [edx+edx*2+8]
mov     edx, [ebp+var_54]
mov     [esp+8], eax
mov     [esp], edx
call    memcpy
mov     [ebp+var_48], 0ffffffffh
call    mdate
mov     [ebp+var_68], eax
mov     [ebp+var_64], edx
mov     ecx, [ebp+var_84]
mov     eax, [ebp+src]
mov     [ebp+var_48], 0ffffffffh
mov     [esp], ecx
mov     [esp+4], eax
call    sub_6320d6d0
mov     edx, [ebp+var_70]
mov     [esp], edx
mov     [esp+4], eax
call    sub_6320e2a0
mov     ecx, [ebp+var_70]
cmp     byte ptr [ecx+21h], 0
mov     [ebp+var_5c], eax
jnz     loc_6320cdb3
mov     edx, [ebp+var_6c]
mov     ecx, [ebp+var_5c]
mov     eax, [edx]
mov     [esp], edx
mov     [esp+4], ecx
mov     eax, [eax+14h]
mov     [ebp+var_48], 0ffffffffh
call    eax
mov     edx, [ebp+var_5c]
mov     [esp], edx
call    sub_63222db0
mov     [ebp+var_48], 0ffffffffh
call    mdate
mov     dword ptr [esp+8], 3e8h
mov     dword ptr [esp+0ch], 0
sub     eax, [ebp+var_68]
sbb     edx, [ebp+var_64]
add     eax, 3e7h
adc     edx, 0
mov     [esp], eax
mov     [esp+4], edx
call    sub_6321b840
cmp     edx, 0
jg      loc_6320cb87
jl      short loc_6320cd0c
cmp     eax, 27h
ja      loc_6320cb87
mov     edx, 28h
sub     edx, eax
mov     eax, [ebp+arg_0]
mov     [esp+4], edx
mov     [ebp+var_48], 0ffffffffh
mov     [esp], eax
call    sub_6320d970
test    al, al
jnz     loc_6320cb87
mov     ecx, [ebp+var_74]
mov     dword ptr [esp+0ch], offset adwordcatmolive
mov     dword ptr [esp+8], offset aatmo_1
mov     dword ptr [esp+4], 3
mov     [esp], ecx
mov     [ebp+var_48], 0ffffffffh
call    vlc_log
mov     edx, [ebp+var_74]
mov     eax, [ebp+var_78]
mov     [esp+4], edx
mov     [esp], eax
call    sub_63213210
mov     ecx, [ebp+var_54]
mov     [esp], ecx
call    sub_63222db0
mov     edx, [ebp+var_84]
test    edx, edx
jz      short loc_6320cd90
mov     edx, [ebp+var_84]
mov     eax, [edx]
mov     [esp], edx
call    dword ptr [eax+4]
lea     ecx, [ebp+var_4c]
mov     [esp], ecx
call    sub_6321b300
xor     eax, eax
leave
retn
mov     [ebp+var_60], 1
mov     [ebp+var_58], 0
jmp     loc_6320cbb1
mov     [esp+4], eax
mov     [esp], ecx
call    sub_6320e0b0
mov     [ebp+var_5c], eax
jmp     loc_6320cc9c
mov     eax, [ebp+var_58]
test    eax, eax
jz      loc_6320ce50
mov     edx, [ebp+var_54]
test    edx, edx
jz      loc_6320cf26
mov     eax, [ebp+var_54]
mov     ecx, [eax]
mov     [ebp+var_48], 0ffffffffh
lea     edx, [ecx+ecx*2+8]
mov     [esp], edx
call    sub_63222dd0
mov     edx, [ebp+var_54]
mov     [ebp+src], eax
mov     eax, [edx]
mov     [esp+4], edx
lea     ecx, [eax+eax*2+8]
mov     eax, [ebp+src]
mov     [esp+8], ecx
mov     [esp], eax
call    memcpy
call    mdate
mov     ecx, [ebp+src]
test    ecx, ecx
mov     [ebp+var_68], eax
mov     [ebp+var_64], edx
jz      loc_6320ccc2
jmp     loc_6320cc61
lea     eax, [eax+eax*2+8]
mov     [esp+8], eax
mov     [esp+4], ecx
mov     [esp], edx
call    memcpy
jmp     loc_6320cc4f
mov     ecx, [ebp+var_74]
mov     dword ptr [esp+0ch], offset awaitfordelayed
mov     dword ptr [esp+8], offset aatmo_1
mov     dword ptr [esp+4], 3
mov     [esp], ecx
mov     [ebp+var_48], 0ffffffffh
call    vlc_log
call    mdate
mov     dword ptr [esp+4], 0c8h
mov     [ebp+var_94], edx
mov     edx, [ebp+var_78]
mov     [ebp+var_98], eax
mov     [esp], edx
call    sub_632134f0
test    al, al
jz      loc_6320cdd2
mov     eax, [ebp+var_88]
test    eax, eax
jle     short loc_6320cec2
mov     ecx, [ebp+var_80]
mov     edx, [ebp+var_7c]
mov     [esp], ecx
mov     [esp+4], edx
call    msleep
mov     [ebp+var_48], 0ffffffffh
call    mdate
mov     dword ptr [esp+8], 3e8h
mov     dword ptr [esp+0ch], 0
sub     eax, [ebp+var_98]
sbb     edx, [ebp+var_94]
mov     [esp], eax
mov     [esp+4], edx
call    sub_6321b840
mov     dword ptr [esp+0ch], offset agotdelayedpack
mov     dword ptr [esp+8], offset aatmo_1
mov     dword ptr [esp+4], 3
mov     [esp+10h], eax
mov     eax, [ebp+var_74]
mov     [esp+14h], edx
mov     [esp], eax
call    vlc_log
jmp     loc_6320cb87
mov     [ebp+var_48], 0ffffffffh
call    mdate
mov     [ebp+var_68], eax
mov     [ebp+var_64], edx
jmp     loc_6320ccc2
mov     eax, [ebp+var_88]
test    eax, eax
jle     short loc_6320cf61
mov     edx, [ebp+var_88]
mov     ecx, edx
sar     ecx, 1fh
mov     [esp], edx
mov     [esp+4], ecx
call    msleep
mov     [ebp+var_48], 0ffffffffh
call    mdate
mov     dword ptr [esp+8], 3e8h
mov     dword ptr [esp+0ch], 0
sub     eax, [ebp+var_90]
sbb     edx, [ebp+var_8c]
mov     [esp], eax
mov     [esp+4], edx
call    sub_6321b840
mov     dword ptr [esp+0ch], offset afirstpacketgot
mov     dword ptr [esp+8], offset aatmo_1
mov     dword ptr [esp+4], 3
mov     [esp+10h], eax
mov     eax, [ebp+var_74]
mov     [esp+14h], edx
mov     [esp], eax
call    vlc_log
jmp     loc_6320cb68
add     ebp, 8
mov     ecx, [ebp-44h]
mov     [ebp-9ch], ecx
mov     ecx, [ebp-84h]
mov     [esp+0], ecx
call    sub_63222db0
mov     eax, [ebp-9ch]
mov     dword ptr [ebp-48h], 0ffffffffh
mov     [esp+0], eax
call    sub_6321b600
sub     esp, 1ch
mov     [esp+1ch+var_4], esi
mov     esi, [esp+1ch+arg_4]
mov     [esp+1ch+var_8], ebx
mov     ebx, [esp+1ch+arg_0]
mov     eax, [esi+18h]
mov     [esp+1ch+var_1c], ebx
mov     [esp+1ch+var_18], eax
call    sub_6320d850
mov     [ebx+38h], esi
mov     esi, [esp+1ch+var_4]
mov     dword ptr [ebx], offset off_6322e8a8
mov     ebx, [esp+1ch+var_8]
add     esp, 1ch
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [ebx+4]
mov     dword ptr [ebx], offset off_6322e948
test    eax, eax
jz      short loc_6320d05d
mov     [esp+1ch+var_1c], eax
call    sub_63222db0
mov     eax, [ebx+8]
test    eax, eax
jz      short loc_6320d06c
mov     [esp+1ch+var_1c], eax
call    sub_63222db0
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_6320d07b
mov     [esp+1ch+var_1c], eax
call    sub_63222db0
mov     eax, [ebx+10h]
test    eax, eax
jz      short loc_6320d090
mov     [esp+1ch+arg_0], eax
add     esp, 18h
pop     ebx
jmp     sub_63222db0
add     esp, 18h
pop     ebx
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_6320d040
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 3ch
cmp     [esp+4ch+arg_8], 0
mov     ebx, [esp+4ch+arg_0]
mov     esi, [esp+4ch+arg_4]
jnz     loc_6320d250
mov     edx, [ebx+4]
test    edx, edx
jz      short loc_6320d0e7
mov     eax, [esi]
cmp     [edx], eax
jz      short loc_6320d120
mov     [esp+4ch+var_4c], edx
call    sub_63222db0
mov     edi, [esi]
lea     eax, [edi+edi*2+8]
mov     [esp+4ch+var_4c], eax
call    sub_63222dd0
mov     ecx, [esi]
lea     edx, [ecx+ecx*2]
mov     [ebx+4], eax
mov     [eax], ecx
add     eax, 4
mov     [esp+4ch+size], edx
mov     [esp+4ch+val], 0
mov     [esp+4ch+var_4c], eax
call    memset
mov     eax, [esi]
mov     ebp, [ebx+14h]
lea     ecx, [eax+eax*2+8]
mov     edi, [ebp+0bch]
mov     [esp+4ch+var_4c], ecx
mov     [esp+4ch+var_30], edi
call    sub_63222dd0
mov     edx, [esi]
mov     [esp+4ch+var_28], edx
mov     [eax], edx
mov     ebp, [esi]
mov     [esp+4ch+src], eax
test    ebp, ebp
mov     [esp+4ch+var_24], ebp
jle     loc_6320d216
mov     edx, [esp+4ch+var_30]
mov     edi, esi
mov     ebp, eax
mov     [esp+4ch+var_2c], 64h
sub     [esp+4ch+var_2c], edx
mov     [esp+4ch+var_38], 0
mov     [esp+4ch+var_20], esi
mov     esi, [esp+4ch+var_38]
mov     eax, [ebx+4]
movzx   ecx, byte ptr [edi+4]
imul    ecx, [esp+4ch+var_2c]
lea     esi, [esi+esi*2]
add     eax, esi
movzx   edx, byte ptr [eax+4]
mov     eax, 51eb851fh
imul    edx, [esp+4ch+var_30]
add     [esp+4ch+var_38], 1
add     ecx, edx
imul    ecx
sar     ecx, 1fh
sar     edx, 5
sub     edx, ecx
mov     [ebp+4], dl
mov     eax, [ebx+4]
movzx   ecx, byte ptr [edi+5]
imul    ecx, [esp+4ch+var_2c]
add     eax, esi
movzx   edx, byte ptr [eax+5]
mov     eax, 51eb851fh
imul    edx, [esp+4ch+var_30]
add     ecx, edx
imul    ecx
mov     eax, 51eb851fh
sar     ecx, 1fh
sar     edx, 5
sub     edx, ecx
mov     [ebp+5], dl
movzx   edx, byte ptr [edi+6]
add     edi, 3
add     esi, [ebx+4]
imul    edx, [esp+4ch+var_2c]
movzx   ecx, byte ptr [esi+6]
imul    ecx, [esp+4ch+var_30]
mov     esi, [esp+4ch+var_24]
add     ecx, edx
imul    ecx
sar     ecx, 1fh
sar     edx, 5
sub     edx, ecx
mov     [ebp+6], dl
add     ebp, 3
cmp     [esp+4ch+var_38], esi
jnz     loc_6320d173
mov     esi, [esp+4ch+var_20]
mov     ecx, [esp+4ch+var_28]
mov     ebx, [ebx+4]
mov     edi, [esp+4ch+src]
lea     ebp, [ecx+ecx*2+8]
mov     [esp+4ch+size], ebp
mov     [esp+4ch+val], edi
mov     [esp+4ch+var_4c], ebx
call    memcpy
mov     [esp+4ch+var_4c], esi
call    sub_63222db0
mov     eax, [esp+4ch+src]
add     esp, 3ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [ebx+4]
test    eax, eax
jz      short loc_6320d25f
mov     [esp+4ch+var_4c], eax
call    sub_63222db0
mov     dword ptr [ebx+4], 0
mov     [esp+4ch+src], 0
mov     eax, [esp+4ch+src]
add     esp, 3ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 4ch
mov     ebx, [esp+5ch+arg_0]
cmp     [esp+5ch+arg_8], 0
mov     esi, [esp+5ch+arg_4]
mov     eax, [ebx+8]
jnz     loc_6320d676
test    eax, eax
jz      short loc_6320d2a7
mov     edx, [esi]
cmp     [eax], edx
jz      short loc_6320d2de
mov     [esp+5ch+var_5c], eax
call    sub_63222db0
mov     ebp, [esi]
lea     eax, [ebp+ebp*2+8]
mov     [esp+5ch+var_5c], eax
call    sub_63222dd0
mov     edi, [esi]
lea     ecx, [edi+edi*2]
mov     [ebx+8], eax
mov     [eax], edi
add     eax, 4
mov     [esp+5ch+size], ecx
mov     [esp+5ch+val], 0
mov     [esp+5ch+var_5c], eax
call    memset
mov     eax, [ebx+0ch]
test    eax, eax
jz      short loc_6320d2eb
mov     edx, [esi]
cmp     [eax], edx
jz      short loc_6320d322
mov     [esp+5ch+var_5c], eax
call    sub_63222db0
mov     ebp, [esi]
lea     eax, [ebp+ebp*2+8]
mov     [esp+5ch+var_5c], eax
call    sub_63222dd0
mov     edi, [esi]
lea     ecx, [edi+edi*2]
mov     [ebx+0ch], eax
mov     [eax], edi
add     eax, 4
mov     [esp+5ch+size], ecx
mov     [esp+5ch+val], 0
mov     [esp+5ch+var_5c], eax
call    memset
mov     edx, [ebx+10h]
test    edx, edx
jz      short loc_6320d32f
mov     eax, [esi]
cmp     [edx], eax
jz      short loc_6320d372
mov     [esp+5ch+var_5c], edx
call    sub_63222db0
mov     ebp, [esi]
lea     eax, [ebp+ebp*2+0]
lea     edi, ds:10h[eax*4]
mov     [esp+5ch+var_5c], edi
call    sub_63222dd0
mov     ecx, [esi]
lea     edx, [ecx+ecx*2]
shl     edx, 2
mov     [ebx+10h], eax
mov     [eax], ecx
add     eax, 4
mov     [esp+5ch+size], edx
mov     [esp+5ch+val], 0
mov     [esp+5ch+var_5c], eax
call    memset
mov     eax, [esi]
lea     eax, [eax+eax*2+8]
mov     [esp+5ch+var_5c], eax
call    sub_63222dd0
mov     ecx, [ebx+14h]
mov     edi, [ecx+0bch]
mov     ebp, [ecx+0c4h]
mov     [esp+5ch+src], eax
mov     eax, [esi]
mov     edx, [esp+5ch+src]
mov     [esp+5ch+var_34], edi
mov     edi, ds:dword_6322f004
mov     [edx], eax
mov     edx, [ecx+0c0h]
mov     ecx, 14h
cmp     edx, 13h
cmovg   ecx, edx
cmp     dword ptr [esi], 0
mov     ds:dword_6322f004, ecx
jle     loc_6320d5b0
mov     [esp+5ch+var_20], ebp
cmp     edi, edx
mov     edx, [esp+5ch+src]
fild    [esp+5ch+var_20]
mov     ebp, 66666667h
mov     eax, ecx
fmul    ds:flt_6322c4d8
mov     edi, esi
setnz   [esp+5ch+var_21]
sar     ecx, 1fh
mov     [esp+5ch+var_38], edx
imul    ebp
mov     ebp, [esp+5ch+var_34]
mov     [esp+5ch+var_30], 64h
sub     [esp+5ch+var_30], ebp
fmul    st, st
mov     [esp+5ch+var_44], 0
sar     edx, 3
sub     edx, ecx
mov     [esp+5ch+var_48], edx
mov     [esp+5ch+var_28], esi
mov     esi, [esp+5ch+var_44]
mov     ecx, [ebx+0ch]
mov     edx, [ebx+10h]
lea     esi, [esi+esi*2]
add     ecx, esi
lea     eax, ds:0[esi*4]
movzx   ebp, byte ptr [ecx+4]
mov     [esp+5ch+var_40], eax
add     edx, eax
movzx   eax, byte ptr [edi+4]
sub     eax, ebp
add     eax, [edx+4]
mov     [edx+4], eax
mov     edx, eax
sar     edx, 1fh
idiv    [esp+5ch+var_48]
mov     edx, 0ffh
cmp     eax, 0ffh
cmovg   eax, edx
mov     dl, 0
test    eax, eax
cmovs   eax, edx
mov     edx, [esp+5ch+var_40]
mov     [ecx+4], al
mov     ecx, [ebx+0ch]
movzx   eax, byte ptr [edi+5]
add     edx, [ebx+10h]
add     ecx, esi
movzx   ebp, byte ptr [ecx+5]
sub     eax, ebp
add     eax, [edx+8]
mov     [edx+8], eax
mov     edx, eax
sar     edx, 1fh
idiv    [esp+5ch+var_48]
mov     edx, 0ffh
cmp     eax, 0ffh
cmovg   eax, edx
mov     dl, 0
test    eax, eax
cmovs   eax, edx
mov     edx, [esp+5ch+var_40]
mov     [ecx+5], al
mov     ecx, [ebx+0ch]
movzx   eax, byte ptr [edi+6]
add     edx, [ebx+10h]
add     ecx, esi
movzx   ebp, byte ptr [ecx+6]
sub     eax, ebp
add     eax, [edx+0ch]
mov     [edx+0ch], eax
mov     edx, eax
sar     edx, 1fh
idiv    [esp+5ch+var_48]
mov     edx, 0ffh
cmp     eax, 0ffh
cmovg   eax, edx
mov     dl, 0
test    eax, eax
cmovs   eax, edx
mov     [ecx+6], al
mov     eax, [ebx+0ch]
mov     [esp+5ch+var_40], eax
add     eax, esi
movzx   ecx, byte ptr [eax+4]
mov     [esp+5ch+var_2c], ecx
movzx   edx, byte ptr [edi+4]
mov     ecx, [esp+5ch+var_2c]
movzx   ebp, byte ptr [edi+5]
sub     ecx, edx
movzx   edx, byte ptr [eax+5]
movzx   eax, byte ptr [eax+6]
imul    ecx, ecx
sub     edx, ebp
movzx   ebp, byte ptr [edi+6]
imul    edx, edx
sub     eax, ebp
imul    eax, eax
add     edx, ecx
add     edx, eax
mov     [esp+5ch+var_20], edx
fild    [esp+5ch+var_20]
fcomip  st, st(1)
ja      short loc_6320d52c
cmp     [esp+5ch+var_21], 0
jz      loc_6320d5e0
mov     ebp, [esp+5ch+var_44]
mov     eax, [esp+5ch+var_40]
movzx   edx, word ptr [edi+4]
lea     ebp, [ebp+ebp*2+0]
add     eax, ebp
mov     [eax+4], dx
movzx   ecx, byte ptr [edi+6]
mov     [eax+6], cl
mov     edx, [ebx+0ch]
mov     eax, [esp+5ch+var_38]
add     edx, ebp
movzx   esi, word ptr [edx+4]
mov     [eax+4], si
movzx   ecx, byte ptr [edx+6]
mov     [eax+6], cl
mov     esi, [ebx+10h]
movzx   eax, byte ptr [edi+4]
imul    eax, [esp+5ch+var_48]
lea     ecx, [esi+ebp*4]
mov     [ecx+4], eax
movzx   ebp, byte ptr [edi+5]
imul    ebp, [esp+5ch+var_48]
mov     [ecx+8], ebp
movzx   edx, byte ptr [edi+6]
imul    edx, [esp+5ch+var_48]
mov     [ecx+0ch], edx
mov     esi, [esp+5ch+var_28]
add     edi, 3
add     [esp+5ch+var_44], 1
mov     ecx, [esp+5ch+var_44]
add     [esp+5ch+var_38], 3
cmp     [esi], ecx
jg      loc_6320d415
fstp    st
mov     edi, [esp+5ch+src]
mov     eax, [edi]
mov     ebx, [ebx+8]
lea     ebp, [eax+eax*2+8]
mov     eax, [esp+5ch+src]
mov     [esp+5ch+size], ebp
mov     [esp+5ch+var_5c], ebx
mov     [esp+5ch+val], eax
call    memcpy
mov     [esp+5ch+var_5c], esi
call    sub_63222db0
mov     eax, [esp+5ch+src]
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     edx, [ebx+8]
mov     ecx, [esp+5ch+var_2c]
imul    ecx, [esp+5ch+var_30]
add     edx, esi
movzx   ebp, byte ptr [edx+4]
imul    ebp, [esp+5ch+var_34]
add     ecx, ebp
mov     ebp, 51eb851fh
mov     eax, ecx
imul    ebp
mov     eax, [esp+5ch+var_38]
sar     ecx, 1fh
sar     edx, 5
sub     edx, ecx
mov     [eax+4], dl
mov     ecx, [ebx+0ch]
mov     eax, [ebx+8]
add     ecx, esi
add     eax, esi
movzx   ecx, byte ptr [ecx+5]
movzx   edx, byte ptr [eax+5]
imul    edx, [esp+5ch+var_34]
imul    ecx, [esp+5ch+var_30]
add     ecx, edx
mov     eax, ecx
imul    ebp
mov     eax, [esp+5ch+var_38]
sar     ecx, 1fh
sar     edx, 5
sub     edx, ecx
mov     [eax+5], dl
mov     ecx, [ebx+0ch]
add     ecx, esi
add     esi, [ebx+8]
movzx   ecx, byte ptr [ecx+6]
imul    ecx, [esp+5ch+var_30]
movzx   edx, byte ptr [esi+6]
imul    edx, [esp+5ch+var_34]
mov     esi, [esp+5ch+var_38]
add     ecx, edx
mov     eax, ecx
imul    ebp
sar     ecx, 1fh
sar     edx, 5
sub     edx, ecx
mov     [esi+6], dl
jmp     loc_6320d58b
test    eax, eax
jz      short loc_6320d682
mov     [esp+5ch+var_5c], eax
call    sub_63222db0
mov     eax, [ebx+0ch]
mov     dword ptr [ebx+8], 0
test    eax, eax
jz      short loc_6320d698
mov     [esp+5ch+var_5c], eax
call    sub_63222db0
mov     eax, [ebx+10h]
mov     dword ptr [ebx+0ch], 0
test    eax, eax
jz      short loc_6320d6ae
mov     [esp+5ch+var_5c], eax
call    sub_63222db0
mov     dword ptr [ebx+10h], 0
mov     [esp+5ch+src], 0
mov     eax, [esp+5ch+src]
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     esp, 1ch
mov     ecx, [esp+1ch+arg_0]
mov     eax, [esp+1ch+arg_4]
mov     edx, [ecx+14h]
mov     edx, [edx+0b8h]
cmp     edx, 1
jz      short loc_6320d706
cmp     edx, 2
jnz     short loc_6320d702
mov     [esp+1ch+var_14], 0
mov     [esp+1ch+var_18], eax
mov     [esp+1ch+var_1c], ecx
call    sub_6320d0c0
add     esp, 1ch
retn
mov     [esp+1ch+var_14], 0
mov     [esp+1ch+var_18], eax
mov     [esp+1ch+var_1c], ecx
call    sub_6320d280
add     esp, 1ch
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_14], 1
mov     [esp+1ch+var_18], 0
mov     [esp+1ch+var_1c], ebx
call    sub_6320d280
mov     [esp+1ch+var_1c], ebx
mov     [esp+1ch+var_14], 1
mov     [esp+1ch+var_18], 0
call    sub_6320d0c0
add     esp, 18h
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     dword ptr [eax], offset off_6322e948
mov     [eax+14h], edx
mov     dword ptr [eax+4], 0
mov     dword ptr [eax+8], 0
mov     dword ptr [eax+0ch], 0
mov     dword ptr [eax+10h], 0
jmp     short loc_6320d720
xor     eax, eax
retn
sub     esp, 1ch
mov     [esp+1ch+var_8], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_4], esi
call    vlc_savecancel
mov     esi, eax
mov     eax, [ebx]
mov     [esp+1ch+var_1c], ebx
call    dword ptr [eax]
mov     [esp+1ch+var_1c], esi
call    vlc_restorecancel
xor     eax, eax
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
add     esp, 1ch
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
cmp     byte ptr [ebx+2ch], 0
mov     dword ptr [ebx], offset off_6322eaa8
jnz     short loc_6320d810
lea     eax, [ebx+4]
add     ebx, 20h
mov     [esp+1ch+var_1c], eax
call    vlc_mutex_destroy
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     vlc_cond_destroy
mov     [esp+1ch+var_14], 2fh
mov     [esp+1ch+var_18], offset aextraspackagew_0
mov     [esp+1ch+var_1c], offset amhasthreadatmo
call    sub_6321bea0
jmp     short loc_6320d7f4
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_6320d7e0
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
lea     ecx, [ebx+4]
mov     dword ptr [ebx], offset off_6322eaa8
mov     byte ptr [ebx+34h], 0
mov     [esp+1ch+var_1c], ecx
call    vlc_mutex_init
lea     edx, [ebx+20h]
mov     [esp+1ch+var_1c], edx
call    vlc_cond_init
mov     eax, [esp+1ch+arg_4]
mov     byte ptr [ebx+2ch], 0
mov     [ebx+28h], eax
add     esp, 18h
pop     ebx
retn
sub     esp, 1ch
mov     [esp+1ch+var_8], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_4], esi
cmp     byte ptr [ebx+2ch], 0
jz      short loc_6320d8e5
lea     esi, [ebx+4]
mov     [esp+1ch+var_1c], esi
call    vlc_mutex_lock
lea     ecx, [ebx+20h]
mov     byte ptr [ebx+34h], 1
mov     [esp+1ch+var_1c], ecx
call    vlc_cond_signal
mov     [esp+1ch+var_1c], esi
call    vlc_mutex_unlock
mov     edx, [ebx+30h]
mov     [esp+1ch+var_1c], edx
call    vlc_cancel
mov     [esp+1ch+var_18], 0
mov     eax, [ebx+30h]
mov     [esp+1ch+var_1c], eax
call    vlc_join
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
add     esp, 1ch
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     byte ptr [ebx+34h], 0
lea     eax, [ebx+30h]
mov     [esp+1ch+var_10], 0
mov     [esp+1ch+var_14], ebx
mov     [esp+1ch+var_18], offset sub_6320d7a0
mov     [esp+1ch+var_1c], eax
call    vlc_clone
test    eax, eax
jnz     short loc_6320d938
mov     byte ptr [ebx+2ch], 1
add     esp, 18h
pop     ebx
retn
mov     byte ptr [ebx+2ch], 0
mov     [esp+1ch+var_10], offset acannotlaunchon
mov     [esp+1ch+var_14], offset aatmo_2
mov     [esp+1ch+var_18], 1
mov     edx, [ebx+28h]
mov     [esp+1ch+var_1c], edx
call    vlc_log
add     esp, 18h
pop     ebx
retn
sub     esp, 2ch
mov     [esp+2ch+var_c], esi
mov     esi, [esp+2ch+arg_0]
mov     [esp+2ch+var_10], ebx
mov     [esp+2ch+var_8], edi
mov     [esp+2ch+var_4], ebp
xor     ebp, ebp
lea     ebx, [esi+4]
mov     [esp+2ch+var_2c], ebx
call    vlc_mutex_lock
call    mdate
imul    edi, [esp+2ch+arg_4], 3e8h
mov     [esp+2ch+var_28], ebx
add     eax, edi
adc     edx, ebp
mov     [esp+2ch+var_24], eax
lea     eax, [esi+20h]
mov     [esp+2ch+var_20], edx
mov     [esp+2ch+var_2c], eax
call    vlc_cond_timedwait
movzx   esi, byte ptr [esi+34h]
mov     [esp+2ch+var_2c], ebx
call    vlc_mutex_unlock
mov     ebx, [esp+2ch+var_10]
mov     edi, [esp+2ch+var_8]
mov     eax, esi
mov     ebp, [esp+2ch+var_4]
xor     eax, 1
mov     esi, [esp+2ch+var_c]
add     esp, 2ch
retn
rep retn
rep retn
push    ebp
mov     ebp, esp
sub     esp, 68h
lea     eax, [ebp-8]
lea     edx, [ebp-3ch]
mov     [ebp-1ch], eax
mov     [esp], edx
mov     dword ptr [ebp-24h], offset sub_63223ad0
mov     dword ptr [ebp-20h], offset dword_632241fc
mov     dword ptr [ebp-18h], offset loc_6320db2e
mov     [ebp-14h], esp
call    sub_6321b240
mov     ecx, [ebp+8]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp], ecx
call    sub_6320b670
mov     eax, [ebp+8]
mov     ecx, [ebp+0ch]
mov     edx, [eax+0ch]
mov     [ebp-48h], edx
mov     edx, [ebp+8]
mov     eax, [edx+14h]
mov     [edx+0ch], ecx
cmp     dword ptr [eax+1ch], 2
jz      short loc_6320da90
mov     eax, [ebp+8]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp], eax
call    sub_6320b680
lea     edx, [ebp-3ch]
mov     [esp], edx
call    sub_6321b300
mov     eax, [ebp-48h]
leave
retn
mov     ecx, [edx]
test    ecx, ecx
jz      short loc_6320da6c
mov     eax, [edx+4]
test    eax, eax
jz      short loc_6320da6c
mov     edx, [edx+8]
mov     ecx, [ebp+8]
test    edx, edx
mov     [ebp-44h], edx
mov     dword ptr [ecx+8], 0
jz      short loc_6320dacd
mov     eax, [edx]
mov     [esp], edx
call    dword ptr [eax+10h]
mov     edx, [ebp-44h]
mov     ecx, [edx]
mov     [esp], edx
call    dword ptr [ecx+8]
mov     eax, [ebp+8]
mov     edx, [eax+0ch]
mov     [ebp+0ch], edx
cmp     dword ptr [ebp+0ch], 2
jz      short loc_6320db00
mov     dword ptr [ebp-40h], 0
mov     edx, [ebp-40h]
mov     eax, [ebp+8]
test    edx, edx
mov     [eax+8], edx
jz      short loc_6320da6c
mov     ecx, [edx]
mov     [esp], edx
mov     eax, [ecx+0ch]
mov     dword ptr [ebp-38h], 0ffffffffh
call    eax
jmp     loc_6320da6c
mov     dword ptr [esp], 94h
mov     dword ptr [ebp-38h], 0ffffffffh
call    sub_63222e50
mov     ecx, [ebp+8]
mov     dword ptr [ebp-38h], 1
mov     [esp+4], ecx
mov     [ebp-40h], eax
mov     [esp], eax
call    sub_6320bf60
jmp     short loc_6320dada
add     ebp, 8
mov     ecx, [ebp-34h]
mov     edx, [ebp-40h]
mov     [ebp-4ch], ecx
mov     [esp], edx
call    sub_63222db0
mov     ecx, [ebp-4ch]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp], ecx
call    sub_6321b600
push    ebp
mov     ebp, esp
push    ebx
sub     esp, 0a4h
lea     edx, [ebp+var_8]
lea     ebx, [ebp+var_3c]
mov     [ebp+var_1c], edx
mov     [esp], ebx
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset word_63224202
mov     [ebp+var_18], offset sub_6320e05c
mov     [ebp+var_14], esp
call    sub_6321b240
mov     eax, [ebp+arg_0]
mov     [ebp+var_38], 0ffffffffh
mov     [esp], eax
call    sub_6320b670
mov     edx, [ebp+arg_0]
mov     ecx, [ebp+arg_0]
mov     ebx, [edx+14h]
mov     ecx, [ecx+10h]
mov     edx, [ebp+arg_0]
mov     eax, [ebx+18h]
test    ecx, ecx
mov     [ebp+var_40], ecx
mov     [ebp+var_44], ebx
mov     [ebp+var_48], eax
mov     dword ptr [edx+10h], 0
jz      short loc_6320dbde
mov     ebx, [ecx]
mov     [esp], ecx
call    dword ptr [ebx+0ch]
mov     ecx, [ebp+var_40]
mov     eax, [ecx]
mov     [esp], ecx
call    dword ptr [eax+4]
cmp     [ebp+var_48], 7
jbe     short loc_6320dc18
mov     ebx, [ebp+arg_0]
mov     [ebp+var_38], 0ffffffffh
mov     [esp], ebx
call    sub_6320b680
mov     [ebp+var_49], 0
lea     esi, [esi+0]
lea     edx, [ebp+var_3c]
mov     [esp], edx
call    sub_6321b300
movzx   eax, [ebp+var_49]
add     esp, 0a4h
pop     ebx
pop     ebp
retn
mov     edx, [ebp+var_48]
jmp     ds:jpt_6320dc1b[edx*4]
mov     dword ptr [esp], 34h
mov     [ebp+var_38], 0ffffffffh
call    sub_63222e50
mov     ebx, [ebp+var_44]
mov     [ebp+var_38], 5
mov     [esp+4], ebx
mov     [ebp+var_60], eax
mov     [esp], eax
call    sub_63212b40
mov     ebx, [ebp+var_60]
mov     edx, [ebx]
mov     [esp], ebx
mov     eax, [edx+8]
mov     [ebp+var_38], 0ffffffffh
call    eax
test    al, al
jz      loc_6320e004
mov     ebx, [ebp+arg_0]
mov     ecx, [ebp+var_60]
mov     [ebx+10h], ecx
mov     [esp], ebx
mov     [ebp+var_38], 0ffffffffh
call    nullsub_1
mov     edx, [ebp+var_44]
mov     eax, [ebp+var_60]
mov     ebx, [ebp+var_60]
mov     ecx, [edx+70h]
mov     eax, [eax]
mov     [esp], ebx
mov     [esp+4], ecx
call    dword ptr [eax+34h]
mov     edx, [ebp+var_44]
mov     eax, [ebp+arg_0]
mov     ebx, [ebp+arg_0]
mov     ecx, [edx+98h]
mov     edx, [eax+14h]
mov     eax, [ebx+10h]
mov     [ebp+var_84], ecx
mov     ebx, [ebp+var_84]
mov     [ebp+var_88], edx
test    eax, eax
mov     edx, [edx+ebx*4+70h]
jnz     loc_6320e037
lea     esi, [esi+0]
mov     eax, [ebp+arg_0]
mov     [ebp+var_38], 0ffffffffh
mov     [esp], eax
call    sub_6320b680
mov     [ebp+var_49], 1
jmp     loc_6320dc00
mov     dword ptr [esp], 34h
mov     [ebp+var_38], 0ffffffffh
call    sub_63222e50
mov     ecx, [ebp+var_44]
mov     [ebp+var_38], 1
mov     [esp+4], ecx
mov     [ebp+var_50], eax
mov     eax, [ebp+var_50]
mov     [esp], eax
call    sub_63210300
mov     edx, [ebp+var_50]
mov     eax, [edx]
mov     [esp], edx
mov     ebx, [eax+8]
mov     [ebp+var_38], 0ffffffffh
call    ebx
test    al, al
mov     eax, [ebp+var_50]
jz      loc_6320e020
mov     ebx, [ebp+arg_0]
mov     [ebx+10h], eax
mov     [esp], ebx
mov     [ebp+var_38], 0ffffffffh
call    nullsub_1
mov     edx, [ebp+var_44]
mov     eax, [ebp+var_50]
mov     ebx, [ebp+var_50]
mov     ecx, [edx+70h]
mov     eax, [eax]
mov     [esp], ebx
mov     [esp+4], ecx
call    dword ptr [eax+34h]
mov     edx, [ebp+var_44]
mov     eax, [ebp+arg_0]
mov     ebx, [ebp+arg_0]
mov     ecx, [edx+98h]
mov     edx, [eax+14h]
mov     eax, [ebx+10h]
mov     [ebp+var_64], ecx
mov     ebx, [ebp+var_64]
mov     [ebp+var_68], edx
test    eax, eax
mov     edx, [edx+ebx*4+70h]
jz      loc_6320dcd0
test    edx, edx
jz      loc_6320dcd0
mov     ecx, [eax]
mov     [esp+4], edx
mov     [esp], eax
call    dword ptr [ecx+24h]
mov     ecx, [ebp+var_68]
mov     [ecx+98h], ebx
jmp     loc_6320dcd0
mov     dword ptr [esp], 70h
mov     [ebp+var_38], 0ffffffffh
call    sub_63222e50
mov     ebx, [ebp+var_44]
mov     [ebp+var_38], 3
mov     [esp+4], ebx
mov     [ebp+var_58], eax
mov     [esp], eax
call    sub_63211480
mov     ebx, [ebp+var_58]
mov     edx, [ebx]
mov     [esp], ebx
mov     eax, [edx+8]
mov     [ebp+var_38], 0ffffffffh
call    eax
test    al, al
jz      loc_6320e004
mov     ebx, [ebp+arg_0]
mov     ecx, [ebp+var_58]
mov     [ebx+10h], ecx
mov     [esp], ebx
mov     [ebp+var_38], 0ffffffffh
call    nullsub_1
mov     edx, [ebp+var_44]
mov     eax, [ebp+var_58]
mov     ebx, [ebp+var_58]
mov     ecx, [edx+70h]
mov     eax, [eax]
mov     [esp], ebx
mov     [esp+4], ecx
call    dword ptr [eax+34h]
mov     edx, [ebp+var_44]
mov     eax, [ebp+arg_0]
mov     ebx, [ebp+arg_0]
mov     ecx, [edx+98h]
mov     edx, [eax+14h]
mov     eax, [ebx+10h]
mov     [ebp+var_74], ecx
mov     ebx, [ebp+var_74]
mov     [ebp+var_78], edx
test    eax, eax
mov     edx, [edx+ebx*4+70h]
jz      loc_6320dcd0
test    edx, edx
jz      loc_6320dcd0
mov     ecx, [eax]
mov     [esp+4], edx
mov     [esp], eax
call    dword ptr [ecx+24h]
mov     edx, [ebp+var_78]
mov     [edx+98h], ebx
jmp     loc_6320dcd0
mov     dword ptr [esp], 13ch
mov     [ebp+var_38], 0ffffffffh
call    sub_63222e50
mov     edx, [ebp+var_44]
mov     [ebp+var_38], 2
mov     [esp+4], edx
mov     [ebp+var_54], eax
mov     [esp], eax
call    sub_63210850
mov     ebx, [ebp+var_54]
mov     ecx, [ebx]
mov     [esp], ebx
mov     eax, [ecx+8]
mov     [ebp+var_38], 0ffffffffh
call    eax
test    al, al
jz      loc_6320e004
mov     ebx, [ebp+arg_0]
mov     ecx, [ebp+var_54]
mov     [ebx+10h], ecx
mov     [esp], ebx
mov     [ebp+var_38], 0ffffffffh
call    nullsub_1
mov     edx, [ebp+var_44]
mov     eax, [ebp+var_54]
mov     ebx, [ebp+var_54]
mov     ecx, [edx+70h]
mov     eax, [eax]
mov     [esp], ebx
mov     [esp+4], ecx
call    dword ptr [eax+34h]
mov     edx, [ebp+var_44]
mov     eax, [ebp+arg_0]
mov     ebx, [ebp+arg_0]
mov     ecx, [edx+98h]
mov     edx, [eax+14h]
mov     eax, [ebx+10h]
mov     [ebp+var_6c], ecx
mov     ebx, [ebp+var_6c]
mov     [ebp+var_70], edx
test    eax, eax
mov     edx, [edx+ebx*4+70h]
jz      loc_6320dcd0
test    edx, edx
jz      loc_6320dcd0
mov     ecx, [eax]
mov     [esp+4], edx
mov     [esp], eax
call    dword ptr [ecx+24h]
mov     edx, [ebp+var_70]
mov     [edx+98h], ebx
jmp     loc_6320dcd0
mov     dword ptr [esp], 34h
mov     [ebp+var_38], 0ffffffffh
call    sub_63222e50
mov     ebx, [ebp+var_44]
mov     [ebp+var_38], 4
mov     [esp+4], ebx
mov     [ebp+var_5c], eax
mov     [esp], eax
call    sub_63212900
mov     ebx, [ebp+var_5c]
mov     edx, [ebx]
mov     [esp], ebx
mov     eax, [edx+8]
mov     [ebp+var_38], 0ffffffffh
call    eax
test    al, al
jz      short loc_6320e004
mov     ebx, [ebp+arg_0]
mov     ecx, [ebp+var_5c]
mov     [ebx+10h], ecx
mov     [esp], ebx
mov     [ebp+var_38], 0ffffffffh
call    nullsub_1
mov     edx, [ebp+var_44]
mov     eax, [ebp+var_5c]
mov     ebx, [ebp+var_5c]
mov     ecx, [edx+70h]
mov     eax, [eax]
mov     [esp], ebx
mov     [esp+4], ecx
call    dword ptr [eax+34h]
mov     edx, [ebp+var_44]
mov     eax, [ebp+arg_0]
mov     ebx, [ebp+arg_0]
mov     ecx, [edx+98h]
mov     edx, [eax+14h]
mov     eax, [ebx+10h]
mov     [ebp+var_7c], ecx
mov     ebx, [ebp+var_7c]
mov     [ebp+var_80], edx
test    eax, eax
mov     edx, [edx+ebx*4+70h]
jz      loc_6320dcd0
test    edx, edx
jz      loc_6320dcd0
mov     ecx, [eax]
mov     [esp+4], edx
mov     [esp], eax
call    dword ptr [ecx+24h]
mov     edx, [ebp+var_80]
mov     [edx+98h], ebx
jmp     loc_6320dcd0
mov     ecx, [ebp+arg_0]
mov     [ecx+10h], ebx
mov     [esp], ecx
call    sub_6320b680
mov     [ebp+var_49], 0
jmp     loc_6320dc00
mov     ecx, [ebp+arg_0]
mov     [ecx+10h], eax
mov     [esp], ecx
call    sub_6320b680
mov     [ebp+var_49], 0
jmp     loc_6320dc00
test    edx, edx
jz      loc_6320dcd0
mov     ecx, [eax]
mov     [esp+4], edx
mov     [esp], eax
call    dword ptr [ecx+24h]
mov     edx, [ebp+var_88]
mov     [edx+98h], ebx
jmp     loc_6320dcd0
add     ebp, 8
mov     ebx, [ebp-34h]
mov     ecx, [ebp-38h]
mov     [ebp-8ch], ebx
jmp     ds:jpt_6320e06b[ecx*4]
mov     eax, [ebp-60h]
mov     [esp+0], eax
call    sub_63222db0
mov     eax, [ebp-8ch]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], eax
call    sub_6321b600
mov     eax, [ebp-50h]
jmp     short loc_6320e075
mov     eax, [ebp-54h]
jmp     short loc_6320e075
mov     eax, [ebp-58h]
nop
jmp     short loc_6320e075
mov     eax, [ebp-5ch]
jmp     short loc_6320e075
sub     esp, 20h
mov     [esp+20h+var_10], ebx
mov     ecx, [esp+20h+arg_4]
mov     ebx, [esp+20h+arg_0]
mov     [esp+20h+var_c], esi
mov     [esp+20h+var_8], edi
mov     [esp+20h+var_4], ebp
mov     esi, [ebx+24h]
mov     edx, [ebx+28h]
mov     eax, [ebx+2ch]
mov     ebx, [ecx]
mov     [esp+20h+var_20], esi
mov     [esp+20h+var_1c], edx
mov     [esp+20h+var_18], eax
test    ebx, ebx
jle     loc_6320e283
movzx   edi, byte ptr [ecx+4]
mov     eax, 80808081h
imul    edi, [esp+20h+var_20]
movzx   esi, byte ptr [ecx+5]
lea     ebp, [ebx-1]
imul    esi, [esp+20h+var_1c]
and     ebp, 1
imul    edi
mov     eax, 80808081h
add     edx, edi
sar     edx, 7
sar     edi, 1fh
sub     edx, edi
movzx   edi, byte ptr [ecx+6]
mov     [ecx+4], dl
imul    esi
mov     eax, 80808081h
imul    edi, [esp+20h+var_18]
add     edx, esi
sar     edx, 7
sar     esi, 1fh
sub     edx, esi
mov     [ecx+5], dl
imul    edi
lea     esi, [ecx+3]
add     edx, edi
sar     edx, 7
sar     edi, 1fh
sub     edx, edi
mov     edi, 1
cmp     edi, ebx
mov     [ecx+6], dl
jz      loc_6320e283
test    ebp, ebp
jz      short loc_6320e1bf
movzx   ebp, byte ptr [esi+4]
mov     eax, 80808081h
imul    ebp, [esp+20h+var_20]
movzx   edi, byte ptr [esi+5]
imul    edi, [esp+20h+var_1c]
imul    ebp
mov     eax, 80808081h
add     edx, ebp
sar     edx, 7
sar     ebp, 1fh
sub     edx, ebp
movzx   ebp, byte ptr [esi+6]
mov     [esi+4], dl
imul    edi
mov     eax, 80808081h
imul    ebp, [esp+20h+var_18]
add     edx, edi
sar     edx, 7
sar     edi, 1fh
sub     edx, edi
mov     edi, 2
mov     [esi+5], dl
imul    ebp
add     edx, ebp
sar     edx, 7
sar     ebp, 1fh
sub     edx, ebp
cmp     edi, ebx
mov     [esi+6], dl
lea     esi, [ecx+6]
jz      loc_6320e283
mov     [esp+20h+var_14], ebx
mov     ebp, ecx
movzx   ebx, byte ptr [esi+4]
mov     eax, 80808081h
imul    ebx, [esp+20h+var_20]
movzx   ecx, byte ptr [esi+5]
imul    ecx, [esp+20h+var_1c]
imul    ebx
mov     eax, 80808081h
add     edx, ebx
sar     edx, 7
sar     ebx, 1fh
sub     edx, ebx
movzx   ebx, byte ptr [esi+6]
mov     [esi+4], dl
imul    ecx
mov     eax, 80808081h
imul    ebx, [esp+20h+var_18]
add     edx, ecx
sar     edx, 7
sar     ecx, 1fh
sub     edx, ecx
movzx   ecx, byte ptr [esi+7]
mov     [esi+5], dl
imul    ebx
mov     eax, 80808081h
imul    ecx, [esp+20h+var_20]
add     edx, ebx
sar     edx, 7
sar     ebx, 1fh
sub     edx, ebx
movzx   ebx, byte ptr [esi+8]
mov     [esi+6], dl
imul    ecx
mov     eax, 80808081h
imul    ebx, [esp+20h+var_1c]
add     edx, ecx
sar     edx, 7
sar     ecx, 1fh
sub     edx, ecx
movzx   ecx, byte ptr [esi+9]
mov     [esi+7], dl
imul    ebx
mov     eax, 80808081h
imul    ecx, [esp+20h+var_18]
add     edx, ebx
sar     edx, 7
sar     ebx, 1fh
sub     edx, ebx
mov     [esi+8], dl
imul    ecx
add     edx, ecx
sar     edx, 7
add     edi, 2
sar     ecx, 1fh
sub     edx, ecx
mov     [esi+9], dl
add     esi, 6
cmp     edi, [esp+20h+var_14]
jnz     loc_6320e1c5
mov     ecx, ebp
mov     eax, ecx
mov     ebx, [esp+20h+var_10]
mov     esi, [esp+20h+var_c]
mov     edi, [esp+20h+var_8]
mov     ebp, [esp+20h+var_4]
add     esp, 20h
retn
sub     esp, 7ch
mov     edx, [esp+7ch+arg_0]
mov     [esp+7ch+var_10], ebx
mov     ebx, [esp+7ch+arg_4]
mov     [esp+7ch+var_c], esi
mov     [esp+7ch+var_8], edi
mov     eax, [edx+12ch]
mov     [esp+7ch+var_4], ebp
cmp     eax, 1
jz      short loc_6320e2f8
cmp     eax, 2
jnz     short loc_6320e2e2
jmp     loc_6320e455
fstp    st
jmp     short loc_6320e2e2
fstp    st
mov     eax, ebx
mov     esi, [esp+7ch+var_c]
mov     ebx, [esp+7ch+var_10]
mov     edi, [esp+7ch+var_8]
mov     ebp, [esp+7ch+var_4]
add     esp, 7ch
retn
fild    dword ptr [edx+130h]
fld     ds:flt_6322c614
fdivr   st(1), st
mov     eax, [ebx]
test    eax, eax
fild    dword ptr [edx+134h]
fdivr   st, st(1)
fstp    [esp+7ch+var_3c]
fild    dword ptr [edx+138h]
fdivp   st(1), st
fstp    [esp+7ch+var_34]
jle     short loc_6320e2d6
mov     esi, ebx
xor     ebp, ebp
mov     edi, 0ffh
fst     [esp+7ch+var_74]
movzx   ecx, byte ptr [esi+4]
mov     [esp+7ch+var_60], eax
mov     [esp+7ch+var_1e], cx
fild    [esp+7ch+var_1e]
fld     ds:dbl_6322c618
fmul    st(1), st
fxch    st(1)
fstp    [esp+7ch+var_7c]
fstp    [esp+7ch+var_5c]
fstp    [esp+7ch+var_4c]
call    sub_6321c160
fnstcw  [esp+7ch+var_20]
fmul    ds:dbl_6322c620
movzx   eax, [esp+7ch+var_20]
mov     ah, 0ch
mov     [esp+7ch+var_22], ax
fldcw   [esp+7ch+var_22]
fistp   [esp+7ch+var_28]
fldcw   [esp+7ch+var_20]
mov     edx, [esp+7ch+var_28]
fld     [esp+7ch+var_3c]
cmp     edx, 0ffh
cmovg   edx, edi
mov     [esi+4], dl
fstp    [esp+7ch+var_74]
movzx   ecx, byte ptr [esi+5]
mov     [esp+7ch+var_1e], cx
fild    [esp+7ch+var_1e]
fld     [esp+7ch+var_5c]
fmulp   st(1), st
fstp    [esp+7ch+var_7c]
call    sub_6321c160
fnstcw  [esp+7ch+var_20]
fmul    ds:dbl_6322c620
movzx   eax, [esp+7ch+var_20]
mov     ah, 0ch
mov     [esp+7ch+var_22], ax
fldcw   [esp+7ch+var_22]
fistp   [esp+7ch+var_28]
fldcw   [esp+7ch+var_20]
mov     edx, [esp+7ch+var_28]
fld     [esp+7ch+var_34]
cmp     edx, 0ffh
cmovg   edx, edi
mov     [esi+5], dl
fstp    [esp+7ch+var_74]
movzx   ecx, byte ptr [esi+6]
mov     [esp+7ch+var_1e], cx
fild    [esp+7ch+var_1e]
fld     [esp+7ch+var_5c]
fmulp   st(1), st
fstp    [esp+7ch+var_7c]
call    sub_6321c160
fnstcw  [esp+7ch+var_20]
fmul    ds:dbl_6322c620
movzx   eax, [esp+7ch+var_20]
mov     ah, 0ch
mov     [esp+7ch+var_22], ax
fldcw   [esp+7ch+var_22]
fistp   [esp+7ch+var_28]
fldcw   [esp+7ch+var_20]
mov     edx, [esp+7ch+var_28]
cmp     edx, 0ffh
cmovg   edx, edi
add     ebp, 1
mov     [esi+6], dl
mov     eax, [esp+7ch+var_60]
add     esi, 3
fld     [esp+7ch+var_4c]
cmp     ebp, eax
jnz     loc_6320e32d
fstp    st
jmp     loc_6320e2e2
mov     eax, [ebx]
fild    dword ptr [edx+13ch]
fdivr   ds:flt_6322c614
test    eax, eax
jle     loc_6320e2e0
mov     esi, ebx
xor     ebp, ebp
mov     edi, 0ffh
fst     [esp+7ch+var_74]
movzx   ecx, byte ptr [esi+4]
mov     [esp+7ch+var_60], eax
mov     [esp+7ch+var_1e], cx
fild    [esp+7ch+var_1e]
fld     ds:dbl_6322c618
fmul    st(1), st
fxch    st(1)
fstp    [esp+7ch+var_7c]
fxch    st(1)
fstp    [esp+7ch+var_5c]
fstp    [esp+7ch+var_4c]
call    sub_6321c160
fnstcw  [esp+7ch+var_20]
fmul    ds:dbl_6322c620
movzx   eax, [esp+7ch+var_20]
mov     ah, 0ch
mov     [esp+7ch+var_22], ax
fldcw   [esp+7ch+var_22]
fistp   [esp+7ch+var_28]
fldcw   [esp+7ch+var_20]
mov     edx, [esp+7ch+var_28]
cmp     edx, 0ffh
cmovg   edx, edi
mov     [esi+4], dl
fld     [esp+7ch+var_5c]
fstp    [esp+7ch+var_74]
movzx   ecx, byte ptr [esi+5]
mov     [esp+7ch+var_1e], cx
fild    [esp+7ch+var_1e]
fld     [esp+7ch+var_4c]
fmulp   st(1), st
fstp    [esp+7ch+var_7c]
call    sub_6321c160
fnstcw  [esp+7ch+var_20]
fmul    ds:dbl_6322c620
movzx   eax, [esp+7ch+var_20]
mov     ah, 0ch
mov     [esp+7ch+var_22], ax
fldcw   [esp+7ch+var_22]
fistp   [esp+7ch+var_28]
fldcw   [esp+7ch+var_20]
mov     edx, [esp+7ch+var_28]
cmp     edx, 0ffh
cmovg   edx, edi
mov     [esi+5], dl
fld     [esp+7ch+var_5c]
fstp    [esp+7ch+var_74]
movzx   ecx, byte ptr [esi+6]
mov     [esp+7ch+var_1e], cx
fild    [esp+7ch+var_1e]
fld     [esp+7ch+var_4c]
fmulp   st(1), st
fstp    [esp+7ch+var_7c]
call    sub_6321c160
fnstcw  [esp+7ch+var_20]
fmul    ds:dbl_6322c620
movzx   eax, [esp+7ch+var_20]
mov     ah, 0ch
mov     [esp+7ch+var_22], ax
fldcw   [esp+7ch+var_22]
fistp   [esp+7ch+var_28]
fldcw   [esp+7ch+var_20]
mov     edx, [esp+7ch+var_28]
cmp     edx, 0ffh
cmovg   edx, edi
add     ebp, 1
mov     [esi+6], dl
mov     eax, [esp+7ch+var_60]
add     esi, 3
fld     [esp+7ch+var_5c]
cmp     ebp, eax
jnz     loc_6320e474
fstp    st
jmp     loc_6320e2e2
push    ebp
mov     ebp, esp
push    edi
push    esi
push    ebx
sub     esp, 9ch
lea     ecx, [ebp+var_18]
lea     eax, [ebp+var_4c]
mov     [ebp+var_34], offset sub_63223ad0
mov     [ebp+var_30], offset dword_63224210
mov     [ebp+var_2c], ecx
mov     [ebp+var_28], offset sub_6320ecc3
mov     [ebp+var_24], esp
mov     [esp], eax
call    sub_6321b240
mov     edx, [ebp+arg_0]
test    edx, edx
jz      loc_6320eca0
mov     edi, [ebp+arg_0]
mov     [ebp+var_48], 0ffffffffh
mov     [esp], edi
call    sub_6320b670
mov     esi, [ebp+arg_0]
mov     ebx, [esi+14h]
test    ebx, ebx
mov     [ebp+var_50], ebx
jz      loc_6320ecac
mov     ecx, [ebp+arg_0]
mov     ebx, [ebp+var_50]
mov     edx, [ebp+arg_0]
mov     esi, [ebp+arg_0]
mov     eax, [ecx+10h]
mov     ecx, [ebp+arg_0]
mov     ebx, [ebx+1ch]
mov     edi, [edx]
mov     [ebp+var_60], eax
mov     esi, [esi+8]
mov     eax, [ecx+4]
cmp     ebx, 2
mov     [ebp+var_5c], ebx
mov     [ebp+var_58], edi
mov     [ebp+var_54], esi
mov     [ebp+var_64], eax
jz      loc_6320e790
mov     esi, [ebp+var_58]
mov     ecx, [ebp+arg_0]
test    esi, esi
mov     dword ptr [ecx], 0
jz      short loc_6320e662
mov     ebx, [ebp+var_58]
mov     [ebp+var_48], 0ffffffffh
mov     [esp], ebx
call    sub_6320d890
mov     edi, [ebx]
mov     [esp], ebx
call    dword ptr [edi+8]
cmp     [ebp+var_5c], 2
jz      loc_6320e750
mov     edi, [ebp+var_60]
test    edi, edi
jz      short loc_6320e68b
mov     edx, [ebp+var_60]
mov     eax, [edx]
mov     [esp], edx
mov     ebx, [eax+10h]
mov     [ebp+var_48], 0ffffffffh
call    ebx
test    al, al
jnz     short loc_6320e6f0
mov     esi, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+var_50]
mov     ebx, [ebp+var_64]
mov     eax, [ebp+var_54]
mov     [edx+1ch], ecx
mov     [esi+4], ebx
mov     dword ptr [esi], 0
mov     [esi+8], eax
mov     ecx, [ebp+var_54]
test    ecx, ecx
jz      short loc_6320e6c4
mov     eax, [ebp+var_54]
mov     esi, [eax]
mov     [esp], eax
mov     edi, [esi+0ch]
mov     [ebp+var_48], 0ffffffffh
call    edi
mov     ebx, [ebp+arg_0]
mov     [ebp+var_48], 0ffffffffh
mov     [esp], ebx
call    sub_6320b680
lea     edx, [ebp+var_4c]
mov     [esp], edx
call    sub_6321b300
mov     eax, [ebp+var_5c]
add     esp, 9ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
cmp     [ebp+arg_4], 1
jz      loc_6320e853
cmp     [ebp+arg_4], 2
jz      loc_6320e7c7
mov     [ebp+var_68], 0
mov     ebx, [ebp+arg_4]
mov     eax, [ebp+var_50]
mov     ecx, [ebp+arg_0]
mov     esi, [ebp+var_64]
mov     edi, [ebp+var_68]
mov     [eax+1ch], ebx
mov     ebx, [ebp+var_68]
mov     edx, [ebp+var_54]
mov     [ecx+4], esi
mov     [ecx], edi
test    ebx, ebx
mov     [ecx+8], edx
jz      loc_6320e6a9
mov     edx, [ebp+var_68]
mov     [ebp+var_48], 0ffffffffh
mov     [esp], edx
call    sub_6320d900
jmp     loc_6320e6a9
mov     edx, [ebp+var_64]
mov     eax, [ebp+arg_0]
test    edx, edx
mov     dword ptr [eax+4], 0
jz      loc_6320e66c
mov     ecx, [ebp+var_64]
mov     [ebp+var_48], 0ffffffffh
mov     [esp], ecx
call    sub_63213610
mov     esi, [ebp+var_64]
mov     [esp], esi
call    sub_63222db0
mov     [ebp+var_64], 0
jmp     loc_6320e66c
test    esi, esi
jz      loc_6320e638
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+8], 0
mov     edx, [esi]
mov     [esp], esi
mov     ebx, [edx+10h]
mov     [ebp+var_48], 0ffffffffh
call    ebx
mov     edi, [esi]
mov     [esp], esi
call    dword ptr [edi+8]
mov     [ebp+var_54], 0
jmp     loc_6320e638
mov     dword ptr [esp], 3ch
mov     [ebp+var_48], 0ffffffffh
call    sub_63222e50
mov     edi, [ebp+arg_0]
mov     [ebp+var_48], 1
mov     [esp+4], edi
mov     [ebp+var_68], eax
mov     [esp], eax
call    sub_6320d000
mov     dword ptr [esp], 64h
mov     [ebp+var_48], 0ffffffffh
call    sub_63222e50
mov     [ebp+var_48], 2
mov     [ebp+var_64], eax
mov     [esp], eax
call    sub_63213000
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+0ch], 2
mov     dword ptr [esp], 94h
mov     [ebp+var_48], 0ffffffffh
call    sub_63222e50
mov     esi, [ebp+arg_0]
mov     [ebp+var_48], 3
mov     [esp+4], esi
mov     [ebp+var_54], eax
mov     [esp], eax
call    sub_6320bf60
jmp     loc_6320e70b
mov     edi, [ebp+var_50]
mov     [ebp+var_48], 0ffffffffh
mov     [esp], edi
call    sub_6320a710
lea     esi, [eax+eax*2+8]
mov     [esp], esi
call    sub_63222dd0
mov     esi, [ebp+var_50]
mov     [esp], esi
mov     [ebp+var_70], eax
call    sub_6320a710
mov     ecx, [ebp+var_70]
test    eax, eax
mov     [ecx], eax
jle     loc_6320ea90
mov     edx, [esi+64h]
lea     ebx, [eax-1]
mov     ecx, [ebp+var_70]
and     ebx, 7
mov     [ecx+4], dl
mov     edx, [esi+68h]
mov     [ecx+5], dl
mov     edx, [esi+6ch]
mov     [ecx+6], dl
mov     edx, [ebp+var_70]
mov     ecx, 1
add     edx, 3
cmp     [ebp+arg_4], eax
jz      loc_6320ea90
test    ebx, ebx
jz      loc_6320e9b1
cmp     ebx, 1
jz      loc_6320e98e
cmp     ebx, 2
nop
jz      loc_6320e973
cmp     ebx, 3
jz      short loc_6320e958
cmp     ebx, 4
xchg    ax, ax
jz      short loc_6320e93d
cmp     ebx, 5
jz      short loc_6320e922
cmp     ebx, 6
jz      short loc_6320e907
mov     edi, [ebp+var_50]
add     ecx, 1
mov     ebx, [edi+64h]
mov     [edx+4], bl
mov     ebx, [edi+68h]
mov     [edx+5], bl
mov     ebx, [edi+6ch]
mov     [edx+6], bl
add     edx, 3
mov     esi, [ebp+var_50]
add     ecx, 1
mov     ebx, [esi+64h]
mov     [edx+4], bl
mov     ebx, [esi+68h]
mov     [edx+5], bl
mov     ebx, [esi+6ch]
mov     [edx+6], bl
add     edx, 3
mov     edi, [ebp+var_50]
add     ecx, 1
mov     ebx, [edi+64h]
mov     [edx+4], bl
mov     ebx, [edi+68h]
mov     [edx+5], bl
mov     ebx, [edi+6ch]
mov     [edx+6], bl
add     edx, 3
mov     esi, [ebp+var_50]
add     ecx, 1
mov     ebx, [esi+64h]
mov     [edx+4], bl
mov     ebx, [esi+68h]
mov     [edx+5], bl
mov     ebx, [esi+6ch]
mov     [edx+6], bl
add     edx, 3
mov     edi, [ebp+var_50]
add     ecx, 1
mov     ebx, [edi+64h]
mov     [edx+4], bl
mov     ebx, [edi+68h]
mov     [edx+5], bl
mov     ebx, [edi+6ch]
mov     [edx+6], bl
add     edx, 3
mov     esi, [ebp+var_50]
add     ecx, 1
mov     ebx, [esi+64h]
mov     [edx+4], bl
mov     ebx, [esi+68h]
mov     [edx+5], bl
mov     ebx, [esi+6ch]
mov     [edx+6], bl
add     edx, 3
mov     edi, [ebp+var_50]
add     ecx, 1
mov     ebx, [edi+64h]
mov     [edx+4], bl
mov     ebx, [edi+68h]
mov     [edx+5], bl
mov     ebx, [edi+6ch]
mov     [edx+6], bl
add     edx, 3
cmp     ecx, eax
jz      loc_6320ea90
mov     ebx, [ebp+var_50]
mov     [ebp+var_90], eax
mov     edi, [ebx+64h]
add     ecx, 8
mov     eax, edi
mov     [edx+4], al
mov     esi, [ebx+68h]
mov     eax, esi
mov     [edx+5], al
mov     edi, [ebx+6ch]
mov     eax, edi
mov     [edx+6], al
mov     esi, [ebx+64h]
mov     eax, esi
mov     [edx+7], al
mov     edi, [ebx+68h]
mov     eax, edi
mov     [edx+8], al
mov     esi, [ebx+6ch]
mov     eax, esi
mov     [edx+9], al
mov     edi, [ebx+64h]
mov     eax, edi
mov     [edx+0ah], al
mov     esi, [ebx+68h]
mov     eax, esi
mov     [edx+0bh], al
mov     edi, [ebx+6ch]
mov     eax, edi
mov     [edx+0ch], al
mov     esi, [ebx+64h]
mov     eax, esi
mov     [edx+0dh], al
mov     edi, [ebx+68h]
mov     eax, edi
mov     [edx+0eh], al
mov     esi, [ebx+6ch]
mov     eax, esi
mov     [edx+0fh], al
mov     edi, [ebx+64h]
mov     eax, edi
mov     [edx+10h], al
mov     esi, [ebx+68h]
mov     eax, esi
mov     [edx+11h], al
mov     edi, [ebx+6ch]
mov     eax, edi
mov     [edx+12h], al
mov     esi, [ebx+64h]
mov     eax, esi
mov     [edx+13h], al
mov     edi, [ebx+68h]
mov     eax, edi
mov     [edx+14h], al
mov     esi, [ebx+6ch]
mov     eax, esi
mov     [edx+15h], al
mov     edi, [ebx+64h]
mov     eax, edi
mov     [edx+16h], al
mov     esi, [ebx+68h]
mov     eax, esi
mov     [edx+17h], al
mov     edi, [ebx+6ch]
mov     eax, edi
mov     [edx+18h], al
mov     esi, [ebx+64h]
mov     eax, esi
mov     [edx+19h], al
mov     edi, [ebx+68h]
mov     eax, edi
mov     [edx+1ah], al
mov     esi, [ebx+6ch]
mov     eax, esi
mov     [edx+1bh], al
add     edx, 18h
cmp     ecx, [ebp+var_90]
jnz     loc_6320e9ba
lea     esi, [esi+0]
mov     ecx, [ebp+var_70]
mov     ebx, [ebp+var_50]
mov     [esp+4], ecx
mov     [esp], ebx
call    sub_6320e2a0
mov     ecx, [ebp+var_50]
cmp     byte ptr [ecx+21h], 0
mov     [ebp+var_6c], eax
jz      loc_6320ec73
mov     esi, [ecx+28h]
mov     edx, [ebp+var_50]
mov     ebx, [eax]
mov     edi, [ecx+24h]
mov     [ebp+var_78], esi
mov     esi, [edx+2ch]
test    ebx, ebx
mov     [ebp+var_74], edi
mov     [ebp+var_7c], esi
jle     loc_6320ec73
lea     ecx, [ebx-1]
movzx   edx, byte ptr [eax+4]
mov     edi, 80808081h
and     ecx, 1
mov     [ebp+var_80], ecx
mov     ecx, [ebp+var_74]
imul    ecx, edx
mov     eax, ecx
imul    edi
mov     eax, [ebp+var_6c]
add     edx, ecx
sar     edx, 7
sar     ecx, 1fh
sub     edx, ecx
mov     ecx, [ebp+var_78]
mov     [eax+4], dl
movzx   edx, byte ptr [eax+5]
imul    ecx, edx
mov     eax, ecx
imul    edi
mov     eax, [ebp+var_6c]
add     edx, ecx
sar     edx, 7
sar     ecx, 1fh
sub     edx, ecx
mov     ecx, esi
mov     [eax+5], dl
movzx   edx, byte ptr [eax+6]
mov     esi, 1
imul    ecx, edx
mov     eax, ecx
imul    edi
mov     eax, [ebp+var_6c]
add     edx, ecx
sar     edx, 7
sar     ecx, 1fh
sub     edx, ecx
mov     ecx, eax
add     ecx, 3
cmp     esi, ebx
mov     [eax+6], dl
jz      loc_6320ec73
mov     eax, [ebp+var_80]
test    eax, eax
jz      short loc_6320ebb5
movzx   edx, byte ptr [ecx+4]
mov     esi, [ebp+var_74]
imul    esi, edx
mov     eax, esi
imul    edi
add     edx, esi
sar     edx, 7
sar     esi, 1fh
sub     edx, esi
mov     esi, [ebp+var_78]
mov     [ecx+4], dl
movzx   edx, byte ptr [ecx+5]
imul    esi, edx
mov     eax, esi
imul    edi
add     edx, esi
sar     edx, 7
sar     esi, 1fh
sub     edx, esi
mov     esi, [ebp+var_7c]
mov     [ecx+5], dl
movzx   edx, byte ptr [ecx+6]
imul    esi, edx
mov     eax, esi
imul    edi
add     edx, esi
sar     edx, 7
sar     esi, 1fh
sub     edx, esi
mov     esi, 2
mov     [ecx+6], dl
mov     ecx, [ebp+var_6c]
add     ecx, 6
cmp     esi, ebx
jz      loc_6320ec73
mov     [ebp+var_88], ebx
mov     [ebp+var_84], esi
movzx   ebx, byte ptr [ecx+4]
imul    ebx, [ebp+var_74]
movzx   esi, byte ptr [ecx+5]
imul    esi, [ebp+var_78]
mov     eax, ebx
imul    edi
mov     eax, esi
add     edx, ebx
sar     edx, 7
sar     ebx, 1fh
sub     edx, ebx
movzx   ebx, byte ptr [ecx+6]
mov     [ecx+4], dl
imul    edi
imul    ebx, [ebp+var_7c]
add     edx, esi
sar     edx, 7
mov     eax, ebx
sar     esi, 1fh
sub     edx, esi
movzx   esi, byte ptr [ecx+7]
mov     [ecx+5], dl
imul    edi
imul    esi, [ebp+var_74]
add     edx, ebx
sar     edx, 7
mov     eax, esi
sar     ebx, 1fh
sub     edx, ebx
movzx   ebx, byte ptr [ecx+8]
mov     [ecx+6], dl
imul    edi
imul    ebx, [ebp+var_78]
add     edx, esi
sar     edx, 7
mov     eax, ebx
sar     esi, 1fh
sub     edx, esi
movzx   esi, byte ptr [ecx+9]
mov     [ecx+7], dl
imul    edi
imul    esi, [ebp+var_7c]
add     edx, ebx
sar     edx, 7
mov     eax, esi
sar     ebx, 1fh
sub     edx, ebx
mov     ebx, [ebp+var_88]
mov     [ecx+8], dl
imul    edi
add     edx, esi
sar     edx, 7
sar     esi, 1fh
sub     edx, esi
add     [ebp+var_84], 2
mov     [ecx+9], dl
add     ecx, 6
cmp     [ebp+var_84], ebx
jnz     loc_6320ebc1
mov     edx, [ebp+var_60]
mov     ecx, [ebp+var_6c]
mov     ebx, [edx]
mov     [esp+4], ecx
mov     [esp], edx
mov     esi, [ebx+14h]
mov     [ebp+var_48], 0ffffffffh
call    esi
mov     edi, [ebp+var_6c]
mov     [esp], edi
call    sub_63222db0
jmp     loc_6320e68b
mov     [ebp+var_5c], 0ffffffffh
jmp     loc_6320e6d6
mov     edx, [ebp+arg_0]
mov     [esp], edx
call    sub_6320b680
mov     [ebp+var_5c], 0ffffffffh
jmp     loc_6320e6d6
add     ebp, 18h
mov     eax, [ebp-48h]
mov     ecx, [ebp-44h]
cmp     eax, 1
mov     [ebp-8ch], ecx
jz      short loc_6320ece2
cmp     eax, 2
jz      short loc_6320ed07
test    eax, eax
jz      short loc_6320ed02
mov     eax, [ebp-64h]
mov     [esp+0], eax
call    sub_63222db0
mov     edi, [ebp-8ch]
mov     dword ptr [ebp-48h], 0ffffffffh
mov     [esp+0], edi
call    sub_6321b600
mov     eax, [ebp-68h]
jmp     short loc_6320ece5
mov     eax, [ebp-54h]
jmp     short loc_6320ece5
sub     esp, 4ch
mov     [esp+3ch], ebx
mov     ebx, [esp+50h]
mov     [esp+40h], esi
mov     [esp+48h], ebp
mov     [esp+44h], edi
mov     [esp], ebx
call    sub_6320b670
mov     ebp, [ebx+14h]
mov     esi, [ebx+10h]
test    ebp, ebp
jz      loc_6320f198
test    esi, esi
jz      loc_6320f198
mov     eax, [ebp+44h]
test    eax, eax
jz      loc_6320f198
mov     [esp], ebp
call    sub_6320a710
lea     edx, [eax+eax*2+8]
mov     [esp], edx
call    sub_63222dd0
mov     [esp], ebp
mov     edi, eax
call    sub_6320a710
test    eax, eax
mov     [esp+1ch], eax
mov     [edi], eax
jle     loc_6320ef67
mov     ecx, [ebp+48h]
sub     eax, 1
and     eax, 7
mov     [edi+4], cl
mov     edx, [ebp+4ch]
mov     [edi+5], dl
mov     ecx, [ebp+50h]
lea     edx, [edi+3]
mov     [edi+6], cl
mov     ecx, 1
cmp     ecx, [esp+1ch]
jz      loc_6320ef67
test    eax, eax
jz      loc_6320ee9a
cmp     eax, 1
jz      loc_6320ee75
cmp     eax, 2
jz      loc_6320ee5a
cmp     eax, 3
jz      short loc_6320ee3f
cmp     eax, 4
jz      short loc_6320ee24
cmp     eax, 5
jz      short loc_6320ee09
cmp     eax, 6
jz      short loc_6320edee
mov     ecx, [ebp+48h]
mov     [edx+4], cl
mov     eax, [ebp+4ch]
mov     [edx+5], al
mov     ecx, [ebp+50h]
mov     [edx+6], cl
mov     ecx, 2
add     edx, 3
movzx   eax, byte ptr [ebp+48h]
add     ecx, 1
mov     [edx+4], al
movzx   eax, byte ptr [ebp+4ch]
mov     [edx+5], al
movzx   eax, byte ptr [ebp+50h]
mov     [edx+6], al
add     edx, 3
movzx   eax, byte ptr [ebp+48h]
add     ecx, 1
mov     [edx+4], al
movzx   eax, byte ptr [ebp+4ch]
mov     [edx+5], al
movzx   eax, byte ptr [ebp+50h]
mov     [edx+6], al
add     edx, 3
movzx   eax, byte ptr [ebp+48h]
add     ecx, 1
mov     [edx+4], al
movzx   eax, byte ptr [ebp+4ch]
mov     [edx+5], al
movzx   eax, byte ptr [ebp+50h]
mov     [edx+6], al
add     edx, 3
movzx   eax, byte ptr [ebp+48h]
add     ecx, 1
mov     [edx+4], al
movzx   eax, byte ptr [ebp+4ch]
mov     [edx+5], al
movzx   eax, byte ptr [ebp+50h]
mov     [edx+6], al
add     edx, 3
movzx   eax, byte ptr [ebp+48h]
add     ecx, 1
mov     [edx+4], al
movzx   eax, byte ptr [ebp+4ch]
mov     [edx+5], al
movzx   eax, byte ptr [ebp+50h]
mov     [edx+6], al
add     edx, 3
movzx   eax, byte ptr [ebp+48h]
add     ecx, 1
mov     [edx+4], al
movzx   eax, byte ptr [ebp+4ch]
mov     [edx+5], al
movzx   eax, byte ptr [ebp+50h]
mov     [edx+6], al
add     edx, 3
cmp     ecx, [esp+1ch]
jz      loc_6320ef67
mov     eax, [esp+1ch]
mov     [esp+20h], esi
mov     [esp+1ch], ebx
mov     esi, [ebp+48h]
add     ecx, 8
mov     ebx, esi
mov     [edx+4], bl
mov     esi, [ebp+4ch]
mov     ebx, esi
mov     [edx+5], bl
mov     esi, [ebp+50h]
mov     ebx, esi
mov     [edx+6], bl
movzx   ebx, byte ptr [ebp+48h]
mov     [edx+7], bl
movzx   ebx, byte ptr [ebp+4ch]
mov     [edx+8], bl
movzx   ebx, byte ptr [ebp+50h]
mov     [edx+9], bl
movzx   ebx, byte ptr [ebp+48h]
mov     [edx+0ah], bl
movzx   ebx, byte ptr [ebp+4ch]
mov     [edx+0bh], bl
movzx   ebx, byte ptr [ebp+50h]
mov     [edx+0ch], bl
movzx   ebx, byte ptr [ebp+48h]
mov     [edx+0dh], bl
movzx   ebx, byte ptr [ebp+4ch]
mov     [edx+0eh], bl
movzx   ebx, byte ptr [ebp+50h]
mov     [edx+0fh], bl
movzx   ebx, byte ptr [ebp+48h]
mov     [edx+10h], bl
movzx   ebx, byte ptr [ebp+4ch]
mov     [edx+11h], bl
movzx   ebx, byte ptr [ebp+50h]
mov     [edx+12h], bl
movzx   ebx, byte ptr [ebp+48h]
mov     [edx+13h], bl
movzx   ebx, byte ptr [ebp+4ch]
mov     [edx+14h], bl
movzx   ebx, byte ptr [ebp+50h]
mov     [edx+15h], bl
movzx   ebx, byte ptr [ebp+48h]
mov     [edx+16h], bl
movzx   ebx, byte ptr [ebp+4ch]
mov     [edx+17h], bl
movzx   ebx, byte ptr [ebp+50h]
mov     [edx+18h], bl
movzx   ebx, byte ptr [ebp+48h]
mov     [edx+19h], bl
movzx   ebx, byte ptr [ebp+4ch]
mov     [edx+1ah], bl
movzx   ebx, byte ptr [ebp+50h]
mov     [edx+1bh], bl
add     edx, 18h
cmp     ecx, eax
jnz     loc_6320eea6
mov     esi, [esp+20h]
mov     ebx, [esp+1ch]
mov     [esp+4], edi
mov     [esp], ebp
call    sub_6320e2a0
cmp     byte ptr [ebp+21h], 0
mov     edi, eax
jz      loc_6320f184
mov     edx, [ebp+24h]
mov     eax, [ebp+28h]
mov     ebp, [ebp+2ch]
mov     [esp+18h], edx
mov     [esp+20h], eax
mov     [esp+28h], ebp
mov     ebp, [edi]
test    ebp, ebp
jle     loc_6320f184
movzx   ecx, byte ptr [edi+4]
lea     edx, [ebp-1]
mov     eax, 80808081h
imul    ecx, [esp+18h]
and     edx, 1
mov     [esp+24h], edx
mov     dword ptr [esp+1ch], 1
imul    ecx
mov     eax, 80808081h
add     edx, ecx
sar     edx, 7
sar     ecx, 1fh
sub     edx, ecx
movzx   ecx, byte ptr [edi+5]
imul    ecx, [esp+20h]
mov     [edi+4], dl
imul    ecx
mov     eax, 80808081h
add     edx, ecx
sar     edx, 7
sar     ecx, 1fh
sub     edx, ecx
movzx   ecx, byte ptr [edi+6]
imul    ecx, [esp+28h]
mov     [edi+5], dl
imul    ecx
add     edx, ecx
sar     edx, 7
sar     ecx, 1fh
sub     edx, ecx
cmp     [esp+1ch], ebp
mov     [edi+6], dl
lea     ecx, [edi+3]
jz      loc_6320f184
mov     edx, [esp+24h]
test    edx, edx
jz      loc_6320f0b0
movzx   edx, byte ptr [ecx+4]
mov     eax, 80808081h
imul    edx, [esp+18h]
mov     [esp+1ch], edx
imul    dword ptr [esp+1ch]
mov     eax, [esp+1ch]
add     edx, [esp+1ch]
sar     eax, 1fh
sar     edx, 7
sub     edx, eax
mov     eax, 80808081h
mov     [ecx+4], dl
movzx   edx, byte ptr [ecx+5]
imul    edx, [esp+20h]
mov     [esp+1ch], edx
imul    dword ptr [esp+1ch]
mov     eax, [esp+1ch]
add     edx, [esp+1ch]
sar     eax, 1fh
sar     edx, 7
sub     edx, eax
mov     eax, 80808081h
mov     [ecx+5], dl
movzx   edx, byte ptr [ecx+6]
imul    edx, [esp+28h]
mov     [esp+1ch], edx
imul    dword ptr [esp+1ch]
mov     eax, [esp+1ch]
add     edx, [esp+1ch]
mov     dword ptr [esp+1ch], 2
sar     edx, 7
sar     eax, 1fh
sub     edx, eax
cmp     [esp+1ch], ebp
mov     [ecx+6], dl
lea     ecx, [edi+6]
jz      loc_6320f184
mov     [esp+24h], ebp
mov     ebp, edi
mov     [esp+2ch], esi
movzx   edi, byte ptr [ecx+4]
mov     eax, 80808081h
imul    edi, [esp+18h]
movzx   esi, byte ptr [ecx+5]
imul    esi, [esp+20h]
imul    edi
mov     eax, 80808081h
add     edx, edi
sar     edx, 7
sar     edi, 1fh
sub     edx, edi
movzx   edi, byte ptr [ecx+6]
mov     [ecx+4], dl
imul    esi
mov     eax, 80808081h
imul    edi, [esp+28h]
add     edx, esi
sar     edx, 7
sar     esi, 1fh
sub     edx, esi
movzx   esi, byte ptr [ecx+7]
mov     [ecx+5], dl
imul    edi
mov     eax, 80808081h
imul    esi, [esp+18h]
add     edx, edi
sar     edx, 7
sar     edi, 1fh
sub     edx, edi
movzx   edi, byte ptr [ecx+8]
mov     [ecx+6], dl
imul    esi
mov     eax, 80808081h
imul    edi, [esp+20h]
add     edx, esi
sar     edx, 7
sar     esi, 1fh
sub     edx, esi
movzx   esi, byte ptr [ecx+9]
mov     [ecx+7], dl
imul    edi
mov     eax, 80808081h
imul    esi, [esp+28h]
add     edx, edi
sar     edx, 7
sar     edi, 1fh
sub     edx, edi
mov     edi, [esp+24h]
mov     [ecx+8], dl
imul    esi
add     edx, esi
sar     edx, 7
sar     esi, 1fh
sub     edx, esi
add     dword ptr [esp+1ch], 2
mov     [ecx+9], dl
add     ecx, 6
cmp     [esp+1ch], edi
jnz     loc_6320f0ba
mov     esi, [esp+2ch]
mov     edi, ebp
mov     ebp, [esi]
mov     [esp+4], edi
mov     [esp], esi
call    dword ptr [ebp+14h]
mov     [esp], edi
call    sub_63222db0
mov     [esp+50h], ebx
mov     esi, [esp+40h]
mov     ebx, [esp+3ch]
mov     edi, [esp+44h]
mov     ebp, [esp+48h]
add     esp, 4ch
jmp     sub_6320b680
sub     esp, 1ch
mov     eax, [esp+20h]
mov     [esp+10h], ebx
mov     [esp+14h], esi
mov     esi, [esp+24h]
mov     [esp+18h], edi
mov     ebx, [eax+14h]
mov     ecx, [eax+10h]
mov     edx, [ebx+esi*4+70h]
mov     edi, [ebx+98h]
test    edx, edx
jnz     short loc_6320f200
mov     eax, edi
mov     ebx, [esp+10h]
mov     esi, [esp+14h]
mov     edi, [esp+18h]
add     esp, 1ch
retn
test    ecx, ecx
jz      short loc_6320f1eb
mov     eax, [ecx]
mov     [esp+4], edx
mov     [esp], ecx
call    dword ptr [eax+24h]
mov     [ebx+98h], esi
jmp     short loc_6320f1eb
mov     ecx, [esp+arg_0]
xor     eax, eax
movzx   edx, [esp+arg_4]
nop
lea     esi, [esi+0]
mov     [ecx+eax+4], dl
mov     [ecx+eax+5], dl
mov     [ecx+eax+6], dl
mov     [ecx+eax+7], dl
mov     [ecx+eax+8], dl
mov     [ecx+eax+9], dl
mov     [ecx+eax+0ah], dl
mov     [ecx+eax+0bh], dl
add     eax, 8
cmp     eax, 0c00h
jnz     short loc_6320f250
rep retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 4
mov     ebp, [esp+14h+arg_4]
mov     eax, [esp+14h+arg_8]
cmp     ebp, eax
jge     loc_6320f386
shl     eax, 6
mov     edi, 82082083h
shl     ebp, 6
mov     [esp+14h+var_14], eax
mov     ecx, [esp+14h+arg_0]
lea     ebx, [ecx+ebp+4]
mov     ecx, 3ec1h
mov     eax, ecx
mov     esi, ecx
imul    edi
sar     esi, 1fh
add     edx, ecx
sar     edx, 5
sub     edx, esi
lea     esi, [ecx-0ffh]
mov     eax, esi
mov     [ebx], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx-1feh]
mov     eax, esi
mov     [ebx+1], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx-2fdh]
mov     eax, esi
mov     [ebx+2], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx-3fch]
mov     eax, esi
mov     [ebx+3], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx-4fbh]
mov     eax, esi
mov     [ebx+4], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx-5fah]
mov     eax, esi
mov     [ebx+5], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx-6f9h]
sub     ecx, 7f8h
mov     eax, esi
mov     [ebx+6], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
mov     [ebx+7], dl
add     ebx, 8
cmp     ecx, 0ffffff01h
jnz     loc_6320f2b2
add     ebp, 40h
cmp     ebp, [esp+14h+var_14]
jnz     loc_6320f2a5
add     esp, 4
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 4
mov     ebp, [esp+14h+arg_4]
mov     eax, [esp+14h+arg_8]
cmp     ebp, eax
jge     loc_6320f494
shl     eax, 6
mov     edi, 82082083h
shl     ebp, 6
mov     [esp+14h+var_14], eax
mov     ecx, [esp+14h+arg_0]
lea     ebx, [ecx+ebp+4]
xor     ecx, ecx
nop
mov     eax, ecx
mov     esi, ecx
imul    edi
sar     esi, 1fh
add     edx, ecx
sar     edx, 5
sub     edx, esi
lea     esi, [ecx+0ffh]
mov     eax, esi
mov     [ebx], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx+1feh]
mov     eax, esi
mov     [ebx+1], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx+2fdh]
mov     eax, esi
mov     [ebx+2], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx+3fch]
mov     eax, esi
mov     [ebx+3], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx+4fbh]
mov     eax, esi
mov     [ebx+4], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx+5fah]
mov     eax, esi
mov     [ebx+5], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
lea     esi, [ecx+6f9h]
add     ecx, 7f8h
mov     eax, esi
mov     [ebx+6], dl
imul    edi
add     edx, esi
sar     edx, 5
sar     esi, 1fh
sub     edx, esi
mov     [ebx+7], dl
add     ebx, 8
cmp     ecx, 3fc0h
jnz     loc_6320f3c0
add     ebp, 40h
cmp     ebp, [esp+14h+var_14]
jnz     loc_6320f3b5
add     esp, 4
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    ebp
push    edi
push    esi
mov     esi, 2ed1h
push    ebx
sub     esp, 4
mov     ebx, [esp+14h+arg_8]
mov     ecx, [esp+14h+arg_0]
mov     [esp+14h+var_14], ebx
mov     eax, 0ae4c415dh
mov     ebx, [esp+14h+var_14]
imul    esi
mov     eax, esi
sar     eax, 1fh
lea     edi, [edx+esi]
sar     edi, 5
sub     edi, eax
cmp     [esp+14h+arg_4], ebx
mov     edx, edi
jge     loc_6320f58a
mov     ebp, [esp+14h+arg_4]
not     ebp
add     ebp, ebx
mov     ebx, [esp+14h+arg_4]
and     ebp, 7
mov     eax, ebx
add     eax, 1
cmp     eax, [esp+14h+var_14]
mov     [ecx+ebx+4], dl
jz      loc_6320f58a
test    ebp, ebp
jz      short loc_6320f557
cmp     ebp, 1
jz      short loc_6320f54b
cmp     ebp, 2
jz      short loc_6320f544
cmp     ebp, 3
jz      short loc_6320f53d
cmp     ebp, 4
jz      short loc_6320f536
cmp     ebp, 5
jz      short loc_6320f52f
cmp     ebp, 6
jz      short loc_6320f528
mov     [ecx+eax+4], dl
mov     eax, [esp+14h+arg_4]
add     eax, 2
mov     [ecx+eax+4], dl
add     eax, 1
mov     [ecx+eax+4], dl
add     eax, 1
mov     [ecx+eax+4], dl
add     eax, 1
mov     [ecx+eax+4], dl
add     eax, 1
mov     [ecx+eax+4], dl
add     eax, 1
mov     [ecx+eax+4], dl
add     eax, 1
cmp     eax, [esp+14h+var_14]
jz      short loc_6320f58a
mov     ebx, [esp+14h+var_14]
lea     esi, [esi+0]
mov     [ecx+eax+4], dl
mov     [ecx+eax+5], dl
mov     [ecx+eax+6], dl
mov     [ecx+eax+7], dl
mov     [ecx+eax+8], dl
mov     [ecx+eax+9], dl
mov     [ecx+eax+0ah], dl
mov     [ecx+eax+0bh], dl
add     eax, 8
cmp     eax, ebx
jnz     short loc_6320f560
mov     [esp+14h+var_14], ebx
sub     esi, 0ffh
add     ecx, 40h
cmp     esi, 0ffffff01h
jnz     loc_6320f4b7
add     esp, 4
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    ebp
push    edi
push    esi
xor     esi, esi
push    ebx
sub     esp, 4
mov     ebx, [esp+14h+arg_8]
mov     ecx, [esp+14h+arg_0]
mov     [esp+14h+var_14], ebx
mov     eax, 0ae4c415dh
mov     ebx, [esp+14h+var_14]
imul    esi
mov     eax, esi
sar     eax, 1fh
lea     edi, [edx+esi]
sar     edi, 5
sub     edi, eax
cmp     [esp+14h+arg_4], ebx
mov     edx, edi
jge     loc_6320f69a
mov     ebp, [esp+14h+arg_4]
not     ebp
add     ebp, ebx
mov     ebx, [esp+14h+arg_4]
and     ebp, 7
mov     eax, ebx
add     eax, 1
cmp     eax, [esp+14h+var_14]
mov     [ecx+ebx+4], dl
jz      loc_6320f69a
test    ebp, ebp
jz      short loc_6320f666
cmp     ebp, 1
jz      short loc_6320f65a
cmp     ebp, 2
jz      short loc_6320f653
cmp     ebp, 3
jz      short loc_6320f64c
cmp     ebp, 4
xchg    ax, ax
jz      short loc_6320f645
cmp     ebp, 5
jz      short loc_6320f63e
cmp     ebp, 6
jz      short loc_6320f637
mov     [ecx+eax+4], dl
mov     eax, [esp+14h+arg_4]
add     eax, 2
mov     [ecx+eax+4], dl
add     eax, 1
mov     [ecx+eax+4], dl
add     eax, 1
mov     [ecx+eax+4], dl
add     eax, 1
mov     [ecx+eax+4], dl
add     eax, 1
mov     [ecx+eax+4], dl
add     eax, 1
mov     [ecx+eax+4], dl
add     eax, 1
cmp     eax, [esp+14h+var_14]
jz      short loc_6320f69a
mov     ebx, [esp+14h+var_14]
lea     esi, [esi+0]
mov     [ecx+eax+4], dl
mov     [ecx+eax+5], dl
mov     [ecx+eax+6], dl
mov     [ecx+eax+7], dl
mov     [ecx+eax+8], dl
mov     [ecx+eax+9], dl
mov     [ecx+eax+0ah], dl
mov     [ecx+eax+0bh], dl
add     eax, 8
cmp     eax, ebx
jnz     short loc_6320f670
mov     [esp+14h+var_14], ebx
add     esi, 0ffh
add     ecx, 40h
cmp     esi, 2fd0h
jnz     loc_6320f5c4
add     esp, 4
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     esp, 7ch
mov     eax, [esp+7ch+arg_4]
mov     [esp+7ch+var_10], ebx
mov     [esp+7ch+var_c], esi
mov     [esp+7ch+var_8], edi
mov     [esp+7ch+var_4], ebp
mov     [esp+7ch+mode], offset mode
mov     [esp+7ch+filename], eax
call    fopen
mov     ebx, eax
mov     eax, 1
test    ebx, ebx
jz      short loc_6320f727
lea     edx, [esp+7ch+buffer]
mov     [esp+7ch+stream], ebx
mov     [esp+7ch+elementcount], 1
mov     [esp+7ch+mode], 0eh
mov     [esp+7ch+filename], edx
call    fread
cmp     eax, 1
jz      short loc_6320f740
mov     [esp+7ch+filename], ebx
call    fclose
mov     eax, 2
mov     ebx, [esp+7ch+var_10]
mov     esi, [esp+7ch+var_c]
mov     edi, [esp+7ch+var_8]
mov     ebp, [esp+7ch+var_4]
add     esp, 7ch
retn
cmp     [esp+7ch+buffer], 4d42h
jz      short loc_6320f758
mov     [esp+7ch+filename], ebx
call    fclose
mov     eax, 3
jmp     short loc_6320f727
lea     ecx, [esp+7ch+var_56]
mov     [esp+7ch+stream], ebx
mov     [esp+7ch+elementcount], 1
mov     [esp+7ch+mode], 2ch
mov     [esp+7ch+filename], ecx
call    fread
cmp     eax, 1
jnz     short loc_6320f71a
mov     esi, [esp+7ch+var_46]
test    esi, esi
jnz     loc_6320f822
movzx   eax, [esp+7ch+var_48]
cmp     ax, 18h
jnz     loc_6320f818
mov     esi, [esp+7ch+var_4e]
mov     ebp, esi
sar     ebp, 1fh
mov     edi, ebp
xor     edi, esi
sub     edi, ebp
cmp     edi, 30h
jnz     loc_6320f71a
cmp     [esp+7ch+var_52], 40h
jnz     loc_6320f71a
mov     edx, [esp+7ch+offset]
mov     [esp+7ch+elementcount], 0
mov     [esp+7ch+filename], ebx
mov     [esp+7ch+mode], edx
call    fseek
movzx   eax, [esp+7ch+var_48]
lea     edi, [eax+eax*2]
shl     edi, 7
mov     [esp+7ch+filename], edi
call    malloc
mov     [esp+7ch+stream], ebx
mov     [esp+7ch+elementcount], 1
mov     [esp+7ch+mode], edi
mov     [esp+7ch+block], eax
mov     [esp+7ch+filename], eax
call    fread
cmp     eax, 1
jz      short loc_6320f834
mov     ecx, [esp+7ch+block]
mov     [esp+7ch+filename], ecx
call    free
jmp     loc_6320f71a
cmp     ax, 8
jz      loc_6320f798
mov     [esp+7ch+filename], ebx
call    fclose
mov     eax, 4
jmp     loc_6320f727
test    esi, esi
setnle  al
mov     edi, eax
movzx   eax, [esp+7ch+var_48]
cmp     ax, 8
jz      short loc_6320f86b
cmp     ax, 18h
jz      loc_6320f8f1
mov     esi, [esp+7ch+block]
mov     [esp+7ch+filename], esi
call    free
mov     [esp+7ch+filename], ebx
call    fclose
xor     eax, eax
jmp     loc_6320f727
mov     edx, [esp+7ch+block]
xor     ebp, ebp
mov     esi, ebx
mov     eax, edi
mov     ecx, 2fh
mov     ebx, [esp+7ch+arg_0]
sub     ecx, ebp
test    al, al
cmovz   ecx, ebp
xor     eax, eax
shl     ecx, 6
lea     ecx, [ebx+ecx]
movzx   ebx, byte ptr [edx+eax]
mov     [ecx+eax+4], bl
movzx   ebx, byte ptr [edx+eax+1]
mov     [eax+ecx+5], bl
movzx   ebx, byte ptr [edx+eax+2]
mov     [eax+ecx+6], bl
movzx   ebx, byte ptr [edx+eax+3]
mov     [eax+ecx+7], bl
movzx   ebx, byte ptr [edx+eax+4]
mov     [eax+ecx+8], bl
movzx   ebx, byte ptr [edx+eax+5]
mov     [eax+ecx+9], bl
movzx   ebx, byte ptr [edx+eax+6]
mov     [eax+ecx+0ah], bl
movzx   ebx, byte ptr [edx+eax+7]
mov     [eax+ecx+0bh], bl
add     eax, 8
cmp     eax, 40h
jnz     short loc_6320f890
add     ebp, 1
add     edx, 40h
cmp     ebp, 30h
jnz     short loc_6320f873
mov     ebx, esi
jmp     loc_6320f850
mov     ebp, [esp+7ch+block]
xor     esi, esi
mov     [esp+7ch+var_60], ebx
add     ebp, 1
mov     edx, edi
mov     ecx, 2fh
mov     ebx, [esp+7ch+arg_0]
sub     ecx, esi
test    dl, dl
cmovz   ecx, esi
mov     edx, ebp
shl     ecx, 6
xor     eax, eax
lea     ecx, [ebx+ecx]
lea     esi, [esi+0]
movzx   ebx, byte ptr [edx]
mov     [ecx+eax+4], bl
movzx   ebx, byte ptr [edx+3]
mov     [eax+ecx+5], bl
movzx   ebx, byte ptr [edx+6]
mov     [eax+ecx+6], bl
movzx   ebx, byte ptr [edx+9]
mov     [eax+ecx+7], bl
movzx   ebx, byte ptr [edx+0ch]
mov     [eax+ecx+8], bl
movzx   ebx, byte ptr [edx+0fh]
mov     [eax+ecx+9], bl
movzx   ebx, byte ptr [edx+12h]
mov     [eax+ecx+0ah], bl
movzx   ebx, byte ptr [edx+15h]
add     edx, 18h
mov     [eax+ecx+0bh], bl
add     eax, 8
cmp     eax, 40h
jnz     short loc_6320f920
add     esi, 1
add     ebp, 0c0h
cmp     esi, 30h
jnz     short loc_6320f8fe
mov     ebx, [esp+7ch+var_60]
jmp     loc_6320f850
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 3ch
mov     edi, [esp+4ch+arg_8]
mov     esi, [esp+4ch+arg_4]
mov     ebp, [esp+4ch+arg_0]
fild    [esp+4ch+arg_c]
mov     [esp+4ch+var_28], 0fffffff9h
fstp    [esp+4ch+var_34]
xor     ebx, ebx
jmp     loc_6320fb1c
fld     [esp+4ch+var_34]
fstp    [esp+4ch+var_44]
movzx   edx, byte ptr [ebp+ebx+4]
mov     [esp+4ch+var_1e], dx
fild    [esp+4ch+var_1e]
fmul    ds:dbl_6322c630
fstp    [esp+4ch+var_4c]
call    sub_6321c160
fnstcw  [esp+4ch+var_20]
fld     ds:dbl_6322c638
fmulp   st(1), st
movzx   eax, [esp+4ch+var_20]
mov     ah, 0ch
mov     [esp+4ch+var_22], ax
fldcw   [esp+4ch+var_22]
fistp   dword ptr [esi+ebx*4]
fldcw   [esp+4ch+var_20]
add     ebx, 1
cmp     edi, 1
jz      loc_6320fb43
fld     [esp+4ch+var_34]
fstp    [esp+4ch+var_44]
movzx   eax, byte ptr [ebp+ebx+4]
mov     [esp+4ch+var_1e], ax
fild    [esp+4ch+var_1e]
fmul    ds:dbl_6322c630
fstp    [esp+4ch+var_4c]
call    sub_6321c160
cmp     edi, 1
lea     eax, [ebx+1]
fnstcw  [esp+4ch+var_20]
fld     ds:dbl_6322c638
fmulp   st(1), st
movzx   ecx, [esp+4ch+var_20]
mov     ch, 0ch
mov     [esp+4ch+var_22], cx
fldcw   [esp+4ch+var_22]
fistp   dword ptr [esi+ebx*4]
fldcw   [esp+4ch+var_20]
jz      loc_6320fb61
fld     [esp+4ch+var_34]
fstp    [esp+4ch+var_44]
movzx   edx, byte ptr [ebp+eax+4]
mov     [esp+4ch+var_38], eax
mov     [esp+4ch+var_1e], dx
fild    [esp+4ch+var_1e]
fmul    ds:dbl_6322c630
fstp    [esp+4ch+var_4c]
call    sub_6321c160
mov     edx, [esp+4ch+var_38]
cmp     edi, 1
lea     eax, [ebx+2]
fnstcw  [esp+4ch+var_20]
fld     ds:dbl_6322c638
fmulp   st(1), st
movzx   ecx, [esp+4ch+var_20]
mov     ch, 0ch
mov     [esp+4ch+var_22], cx
fldcw   [esp+4ch+var_22]
fistp   dword ptr [esi+edx*4]
fldcw   [esp+4ch+var_20]
jz      loc_6320fb80
fld     [esp+4ch+var_34]
add     ebx, 3
fstp    [esp+4ch+var_44]
movzx   edx, byte ptr [ebp+eax+4]
mov     [esp+4ch+var_38], eax
mov     [esp+4ch+var_1e], dx
fild    [esp+4ch+var_1e]
fmul    ds:dbl_6322c630
fstp    [esp+4ch+var_4c]
call    sub_6321c160
mov     eax, [esp+4ch+var_38]
cmp     ebx, 40h
fnstcw  [esp+4ch+var_20]
fld     ds:dbl_6322c638
fmulp   st(1), st
movzx   ecx, [esp+4ch+var_20]
mov     ch, 0ch
mov     [esp+4ch+var_22], cx
fldcw   [esp+4ch+var_22]
fistp   dword ptr [esi+eax*4]
fldcw   [esp+4ch+var_20]
jz      loc_6320fba0
cmp     edi, 1
jnz     loc_6320f9c0
cmp     [esp+4ch+var_28], 22h
jbe     loc_6320f9c0
mov     dword ptr [esi+ebx*4], 0
add     ebx, 1
cmp     edi, 1
jnz     loc_6320fa13
cmp     [esp+4ch+var_28], 22h
jbe     loc_6320fa13
cmp     edi, 1
mov     dword ptr [esi+ebx*4], 0
lea     eax, [ebx+1]
jnz     loc_6320fa66
cmp     [esp+4ch+var_28], 22h
jbe     loc_6320fa66
cmp     edi, 1
mov     dword ptr [esi+eax*4], 0
lea     eax, [ebx+2]
jnz     loc_6320fac1
nop
cmp     [esp+4ch+var_28], 22h
jbe     loc_6320fac1
add     ebx, 3
cmp     ebx, 40h
mov     dword ptr [esi+eax*4], 0
jnz     loc_6320fb1c
xchg    ax, ax
add     [esp+4ch+var_28], 1
add     esi, 100h
add     ebp, 40h
cmp     [esp+4ch+var_28], 29h
jnz     loc_6320f9b3
add     esp, 3ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     edx, [esp+8]
mov     eax, [esp+4]
mov     [eax], edx
retn
mov     eax, [esp+4]
mov     eax, [eax]
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+string], offset byte_6322c640
call    _strdup
mov     dword ptr [ebx+8], 0
mov     dword ptr [ebx+4], 0
mov     byte ptr [ebx+0ch], 0
mov     [ebx], eax
add     esp, 18h
pop     ebx
retn
mov     edx, [esp+block]
mov     eax, [edx]
mov     [esp+block], eax
jmp     free
sub     esp, 1ch
mov     [esp+1ch+var_8], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_4], esi
mov     esi, [esp+1ch+string]
mov     eax, [ebx]
mov     [esp+1ch+block], eax
call    free
test    esi, esi
jz      short loc_6320fc67
mov     [esp+1ch+block], esi
call    _strdup
mov     esi, [esp+1ch+var_4]
mov     [ebx], eax
mov     ebx, [esp+1ch+var_8]
add     esp, 1ch
retn
mov     [esp+1ch+block], offset byte_6322c640
call    _strdup
mov     esi, [esp+1ch+var_4]
mov     [ebx], eax
mov     ebx, [esp+1ch+var_8]
add     esp, 1ch
retn
sub     esp, 1ch
mov     [esp+1ch+var_8], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_4], esi
mov     esi, [esp+1ch+arg_4]
cmp     [ebx+4], esi
jz      short loc_6320fced
mov     eax, [ebx+8]
test    eax, eax
jz      short loc_6320fcb7
mov     [esp+1ch+var_1c], eax
call    sub_63222da0
test    esi, esi
mov     dword ptr [ebx+8], 0
mov     [ebx+4], esi
jle     short loc_6320fced
shl     esi, 2
mov     [esp+1ch+var_1c], esi
call    sub_63222dd0
mov     edx, [ebx+4]
shl     edx, 2
mov     [ebx+8], eax
mov     [esp+1ch+size], edx
mov     [esp+1ch+val], 0
mov     [esp+1ch+var_1c], eax
call    memset
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
add     esp, 1ch
retn
sub     esp, 1ch
mov     [esp+1ch+var_8], ebx
mov     ebx, [esp+1ch+arg_0]
mov     edx, [esp+1ch+arg_4]
mov     [esp+1ch+var_4], esi
xor     esi, esi
mov     eax, [ebx+4]
test    eax, eax
mov     [edx], eax
jz      short loc_6320fd47
mov     esi, [ebx+4]
shl     esi, 2
mov     [esp+1ch+var_1c], esi
call    sub_63222dd0
mov     ecx, [ebx+8]
mov     esi, eax
mov     eax, [ebx+4]
mov     [esp+1ch+src], ecx
mov     [esp+1ch+var_1c], esi
shl     eax, 2
mov     [esp+1ch+size], eax
call    memcpy
mov     eax, esi
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
add     esp, 1ch
retn
sub     esp, 1ch
mov     [esp+14h], ebx
mov     ebx, [esp+20h]
mov     [esp+18h], esi
mov     esi, [esp+24h]
mov     dword ptr [ebx+4], 0
lea     ecx, [ebx+4]
mov     dword ptr [ebx], 0
mov     [esp+4], ecx
mov     [esp], esi
call    sub_6320fd00
mov     [ebx+8], eax
mov     edx, [esi]
mov     [esp], ebx
mov     [esp+4], edx
call    sub_6320fc30
movzx   eax, byte ptr [esi+0ch]
mov     esi, [esp+18h]
mov     [ebx+0ch], al
mov     ebx, [esp+14h]
add     esp, 1ch
retn
push    ebx
mov     edx, [esp+4+arg_4]
mov     eax, 0ffffffffh
mov     ecx, [esp+4+arg_0]
test    edx, edx
mov     ebx, [ecx+8]
js      short loc_6320fde1
test    ebx, ebx
jz      short loc_6320fde1
cmp     edx, [ecx+4]
jge     short loc_6320fde1
mov     eax, [ebx+edx*4]
pop     ebx
retn
mov     eax, [esp+arg_4]
mov     edx, [esp+arg_0]
test    eax, eax
mov     ecx, [edx+8]
js      short locret_6320fe0f
test    ecx, ecx
jz      short locret_6320fe0f
cmp     eax, [edx+4]
jge     short locret_6320fe0f
mov     edx, [esp+arg_8]
mov     [ecx+eax*4], edx
rep retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+2ch], 0ffffffffh
setnz   al
retn
push    ebx
xor     eax, eax
sub     esp, 18h
mov     ebx, [esp+1ch+arg_4]
test    ebx, ebx
jz      loc_6320fecf
mov     [esp+1ch+var_18], 5
mov     [esp+1ch+var_1c], ebx
call    sub_6320fc90
mov     [esp+1ch+var_14], 4
mov     [esp+1ch+var_18], 0
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     [esp+1ch+var_14], 3
mov     [esp+1ch+var_18], 1
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     [esp+1ch+var_14], 1
mov     [esp+1ch+var_18], 2
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     [esp+1ch+var_14], 0
mov     [esp+1ch+var_18], 3
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     [esp+1ch+var_14], 2
mov     [esp+1ch+var_18], 4
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     eax, 1
add     esp, 18h
pop     ebx
retn
sub     esp, 4ch
mov     eax, [esp+4ch+arg_0]
movzx   ecx, [esp+4ch+arg_24]
mov     edx, [eax+2ch]
xor     eax, eax
cmp     edx, 0ffffffffh
jz      loc_6320ff90
mov     eax, [esp+4ch+arg_4]
cmp     cl, 1
sbb     ecx, ecx
not     ecx
and     ecx, 0ffffffc7h
mov     [esp+4ch+var_1c], al
mov     eax, [esp+4ch+arg_c]
mov     [esp+4ch+var_14], cl
lea     ecx, [esp+4ch+buffer]
mov     [esp+4ch+buffer], 0ffh
mov     [esp+4ch+var_1f], 0
mov     [esp+4ch+var_1b], al
mov     eax, [esp+4ch+arg_10]
mov     [esp+4ch+var_1e], 0
mov     [esp+4ch+var_1d], 65h
mov     [esp+4ch+lpoverlapped], 0
mov     [esp+4ch+var_1a], al
mov     eax, [esp+4ch+arg_14]
mov     [esp+4ch+nnumberofbytestowrite], 0dh
mov     [esp+4ch+lpbuffer], ecx
mov     [esp+4ch+hfile], edx
mov     [esp+4ch+var_19], al
mov     eax, [esp+4ch+arg_18]
mov     [esp+4ch+var_18], al
mov     eax, [esp+4ch+arg_1c]
mov     [esp+4ch+var_17], al
mov     eax, [esp+4ch+arg_20]
mov     [esp+4ch+var_16], al
mov     eax, [esp+4ch+arg_8]
mov     [esp+4ch+var_15], al
lea     eax, [esp+4ch+numberofbyteswritten]
mov     [esp+4ch+lpnumberofbyteswritten], eax
call    ds:writefile
sub     esp, 14h
cmp     [esp+4ch+numberofbyteswritten], 0dh
setz    al
add     esp, 4ch
retn
push    esi
xor     eax, eax
push    ebx
sub     esp, 44h
mov     ebx, [esp+4ch+arg_0]
mov     esi, [esp+4ch+arg_4]
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      loc_63210125
mov     [esp+4ch+buffer], 0ffh
mov     [esp+4ch+var_22], 0
mov     [esp+4ch+var_21], 0
mov     [esp+4ch+var_20], 0fh
mov     [esp+4ch+hfile], ebx
call    sub_6320b600
mov     eax, [ebx+24h]
test    eax, eax
jz      short loc_6320ffe7
mov     edx, [ebx+28h]
test    edx, edx
jg      loc_63210130
test    eax, eax
mov     [esp+4ch+var_1f], 0
mov     [esp+4ch+var_1e], 0
mov     [esp+4ch+var_1d], 0
jz      loc_63210170
cmp     dword ptr [ebx+28h], 1
jle     loc_63210170
mov     edx, [eax+4]
test    edx, edx
js      loc_63210170
cmp     edx, [esi]
jge     loc_63210170
lea     edx, [edx+edx*2]
add     edx, esi
movzx   ecx, byte ptr [edx+4]
mov     [esp+4ch+var_1c], cl
movzx   ecx, byte ptr [edx+5]
movzx   edx, byte ptr [edx+6]
mov     [esp+4ch+var_1b], cl
mov     [esp+4ch+var_1a], dl
cmp     dword ptr [ebx+28h], 2
jle     loc_63210187
mov     edx, [eax+8]
test    edx, edx
js      loc_63210187
cmp     edx, [esi]
jge     loc_63210187
lea     edx, [edx+edx*2]
add     edx, esi
movzx   ecx, byte ptr [edx+4]
mov     [esp+4ch+var_19], cl
movzx   ecx, byte ptr [edx+5]
movzx   edx, byte ptr [edx+6]
mov     [esp+4ch+var_18], cl
mov     [esp+4ch+var_17], dl
cmp     dword ptr [ebx+28h], 3
jle     loc_632101a0
mov     edx, [eax+0ch]
test    edx, edx
js      loc_632101a0
cmp     edx, [esi]
jge     loc_632101a0
lea     edx, [edx+edx*2]
add     edx, esi
movzx   ecx, byte ptr [edx+4]
mov     [esp+4ch+var_16], cl
movzx   ecx, byte ptr [edx+5]
movzx   edx, byte ptr [edx+6]
mov     [esp+4ch+var_15], cl
mov     [esp+4ch+var_14], dl
cmp     dword ptr [ebx+28h], 4
jle     loc_632101b7
mov     eax, [eax+10h]
test    eax, eax
js      loc_632101b7
cmp     eax, [esi]
jge     loc_632101b7
lea     eax, [eax+eax*2]
add     esi, eax
movzx   ecx, byte ptr [esi+4]
movzx   edx, byte ptr [esi+5]
movzx   eax, byte ptr [esi+6]
mov     [esp+4ch+var_13], cl
mov     [esp+4ch+var_12], dl
mov     [esp+4ch+var_11], al
lea     ecx, [esp+4ch+numberofbyteswritten]
lea     edx, [esp+4ch+buffer]
mov     [esp+4ch+lpnumberofbyteswritten], ecx
mov     [esp+4ch+lpbuffer], edx
mov     [esp+4ch+lpoverlapped], 0
mov     [esp+4ch+nnumberofbytestowrite], 13h
mov     esi, [ebx+2ch]
mov     [esp+4ch+hfile], esi
call    ds:writefile
sub     esp, 14h
mov     [esp+4ch+hfile], ebx
call    sub_6320b610
cmp     [esp+4ch+numberofbyteswritten], 13h
setz    al
add     esp, 44h
pop     ebx
pop     esi
retn
mov     edx, [eax]
test    edx, edx
js      loc_6320ffe7
cmp     edx, [esi]
jge     loc_6320ffe7
lea     edx, [edx+edx*2]
add     edx, esi
movzx   ecx, byte ptr [edx+4]
cmp     dword ptr [ebx+28h], 1
mov     [esp+4ch+var_1f], cl
movzx   ecx, byte ptr [edx+5]
mov     [esp+4ch+var_1e], cl
movzx   ecx, byte ptr [edx+6]
mov     [esp+4ch+var_1d], cl
jg      loc_63210008
lea     esi, [esi+0]
test    eax, eax
mov     [esp+4ch+var_1c], 0
mov     [esp+4ch+var_1b], 0
mov     [esp+4ch+var_1a], 0
jnz     loc_63210038
test    eax, eax
mov     [esp+4ch+var_19], 0
mov     [esp+4ch+var_18], 0
mov     [esp+4ch+var_17], 0
jnz     loc_63210072
xchg    ax, ax
test    eax, eax
mov     [esp+4ch+var_16], 0
mov     [esp+4ch+var_15], 0
mov     [esp+4ch+var_14], 0
jnz     loc_632100ac
mov     [esp+4ch+var_13], 0
mov     [esp+4ch+var_12], 0
mov     [esp+4ch+var_11], 0
jmp     loc_632100e6
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [ebx+2ch]
cmp     eax, 0ffffffffh
jz      short loc_632101f3
mov     [esp+1ch+hobject], eax
call    ds:closehandle
mov     dword ptr [ebx+2ch], 0ffffffffh
sub     esp, 4
add     esp, 18h
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322ea08
jmp     sub_6320b590
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_63210200
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
sub     esp, 4ch
mov     [esp+4ch+var_c], ebx
mov     ebx, [esp+4ch+arg_0]
mov     [esp+4ch+var_4], edi
mov     [esp+4ch+var_8], esi
xor     esi, esi
mov     eax, [ebx+4]
mov     edi, [eax+8]
test    edi, edi
jz      loc_632102ea
mov     edx, [ebx]
mov     [esp+4ch+lpfilename], ebx
call    dword ptr [edx+0ch]
mov     [esp+4ch+htemplatefile], 0
mov     [esp+4ch+dwflagsandattributes], 0
mov     [esp+4ch+dwcreationdisposition], 3
mov     [esp+4ch+lpsecurityattributes], 0
mov     [esp+4ch+dwsharemode], 0
mov     [esp+4ch+dwdesiredaccess], 40000000h
mov     [esp+4ch+lpfilename], edi
call    ds:createfilea
sub     esp, 1ch
cmp     eax, 0ffffffffh
mov     [ebx+2ch], eax
jz      short loc_632102ea
lea     esi, [esp+4ch+dcb]
mov     [esp+4ch+dwdesiredaccess], esi
mov     [esp+4ch+dcb.dcblength], 1ch
mov     [esp+4ch+lpfilename], eax
call    ds:getcommstate
sub     esp, 8
mov     [esp+4ch+dwdesiredaccess], esi
mov     ecx, [ebx+2ch]
mov     esi, 1
mov     [esp+4ch+dcb.baudrate], 9600h
mov     [esp+4ch+dcb.bytesize], 8
mov     [esp+4ch+dcb.parity], 0
mov     [esp+4ch+dcb.stopbits], 0
mov     [esp+4ch+lpfilename], ecx
call    ds:setcommstate
sub     esp, 8
mov     eax, esi
mov     ebx, [esp+4ch+var_c]
mov     esi, [esp+4ch+var_8]
mov     edi, [esp+4ch+var_4]
add     esp, 4ch
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [esp+1ch+arg_4]
mov     [esp+1ch+var_1c], ebx
mov     [esp+1ch+var_18], eax
call    sub_6320b5d0
mov     dword ptr [ebx], offset off_6322ea08
mov     dword ptr [ebx+2ch], 0ffffffffh
add     esp, 18h
pop     ebx
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+2ch], 0ffffffffh
setnz   al
retn
mov     edx, [esp+arg_0]
mov     eax, [edx+4]
mov     eax, [eax+120h]
retn
push    edi
xor     eax, eax
push    esi
push    ebx
sub     esp, 10h
mov     edi, [esp+1ch+arg_4]
mov     esi, [esp+1ch+arg_0]
test    edi, edi
jz      short loc_632103a4
mov     eax, [esi]
xor     ebx, ebx
mov     [esp+1ch+var_1c], esi
call    dword ptr [eax+28h]
mov     [esp+1ch+var_1c], edi
mov     [esp+1ch+var_18], eax
call    sub_6320fc90
jmp     short loc_63210393
mov     [esp+1ch+var_14], ebx
mov     [esp+1ch+var_18], ebx
add     ebx, 1
mov     [esp+1ch+var_1c], edi
call    sub_6320fdf0
mov     eax, [esi]
mov     [esp+1ch+var_1c], esi
call    dword ptr [eax+28h]
cmp     ebx, eax
jl      short loc_63210380
mov     eax, 1
add     esp, 10h
pop     ebx
pop     esi
pop     edi
retn
push    esi
push    ebx
sub     esp, 34h
mov     ebx, [esp+3ch+arg_0]
mov     esi, [esp+3ch+arg_4]
mov     [esp+3ch+hfile], ebx
call    sub_6320b600
movzx   ecx, [esp+3ch+arg_8]
movzx   edx, [esp+3ch+arg_9]
movzx   eax, [esp+3ch+arg_a]
mov     [ebx+esi+32h], cl
lea     ecx, [esp+3ch+numberofbyteswritten]
mov     [ebx+esi+33h], dl
lea     edx, [ebx+30h]
mov     [ebx+esi+34h], al
mov     [esp+3ch+lpnumberofbyteswritten], ecx
mov     [esp+3ch+lpbuffer], edx
mov     [esp+3ch+lpoverlapped], 0
mov     [esp+3ch+nnumberofbytestowrite], 103h
mov     eax, [ebx+2ch]
mov     [esp+3ch+hfile], eax
call    ds:writefile
sub     esp, 14h
mov     [esp+3ch+hfile], ebx
call    sub_6320b610
cmp     [esp+3ch+numberofbyteswritten], 103h
setz    al
add     esp, 34h
pop     ebx
pop     esi
retn
push    ebp
xor     eax, eax
push    edi
push    esi
push    ebx
sub     esp, 4ch
mov     ebx, [esp+5ch+arg_0]
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      loc_63210526
mov     [esp+5ch+hfile], ebx
xor     esi, esi
xor     edi, edi
call    sub_6320b600
mov     ebp, 2
jmp     short loc_63210488
mov     edx, [eax+esi*4]
test    edx, edx
js      short loc_632104a0
mov     ecx, [esp+5ch+arg_4]
lea     eax, ds:0[edi*4]
cmp     edx, [ecx]
jl      short loc_632104b0
add     eax, [ebx+134h]
cmp     dword ptr [eax], 80000000h
adc     edi, 0
add     esi, 1
mov     eax, [ebx]
mov     [esp+5ch+hfile], ebx
call    dword ptr [eax+28h]
cmp     esi, eax
jge     short loc_632104e5
mov     eax, [ebx+24h]
test    eax, eax
jz      short loc_632104a0
cmp     esi, [ebx+28h]
jl      short loc_63210460
lea     eax, ds:0[edi*4]
add     eax, [ebx+134h]
jmp     short loc_6321047c
add     eax, [ebx+134h]
add     ebp, 3
lea     edx, [edx+edx*2]
mov     ecx, [eax]
add     ecx, 2
cmp     dword ptr [eax], 0
cmovns  ebp, ecx
add     edx, [esp+5ch+arg_4]
movzx   ecx, byte ptr [edx+4]
mov     [ebx+ebp+30h], cl
movzx   ecx, byte ptr [edx+5]
mov     [ebx+ebp+31h], cl
movzx   edx, byte ptr [edx+6]
mov     [ebx+ebp+32h], dl
jmp     short loc_6321047c
lea     ebp, [esp+5ch+numberofbyteswritten]
lea     edi, [ebx+30h]
mov     [esp+5ch+lpoverlapped], 0
mov     [esp+5ch+lpnumberofbyteswritten], ebp
mov     [esp+5ch+nnumberofbytestowrite], 103h
mov     [esp+5ch+lpbuffer], edi
mov     esi, [ebx+2ch]
mov     [esp+5ch+hfile], esi
call    ds:writefile
sub     esp, 14h
mov     [esp+5ch+hfile], ebx
call    sub_6320b610
cmp     [esp+5ch+numberofbyteswritten], 103h
setz    al
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [ebx+2ch]
cmp     eax, 0ffffffffh
jz      short loc_63210553
mov     [esp+1ch+hobject], eax
call    ds:closehandle
mov     dword ptr [ebx+2ch], 0ffffffffh
sub     esp, 4
add     esp, 18h
pop     ebx
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [ebx+134h]
mov     dword ptr [ebx], offset off_6322ea48
mov     [esp+1ch+var_1c], eax
call    sub_63222db0
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_6320b590
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_63210560
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
push    edi
xor     eax, eax
push    esi
push    ebx
sub     esp, 30h
mov     edi, [esp+3ch+arg_4]
mov     ebx, [esp+3ch+arg_0]
mov     esi, [esp+3ch+arg_8]
test    edi, 1
jnz     loc_6321075e
test    esi, esi
jz      loc_6321075e
mov     [esp+3ch+hfile], ebx
call    sub_6320b600
test    edi, edi
jle     loc_6321071d
movzx   eax, byte ptr [esi]
lea     edx, [edi-1]
movzx   ecx, byte ptr [esi+1]
shr     edx, 1
and     edx, 7
cmp     edi, 2
mov     [ebx+eax+32h], cl
mov     eax, 2
jle     loc_6321071d
test    edx, edx
jz      loc_632106a7
cmp     edx, 1
jz      short loc_63210693
cmp     edx, 2
jz      short loc_63210683
cmp     edx, 3
xchg    ax, ax
jz      short loc_63210673
cmp     edx, 4
jz      short loc_63210663
cmp     edx, 5
jz      short loc_63210653
cmp     edx, 6
nop
jz      short loc_63210643
movzx   edx, byte ptr [esi+3]
mov     eax, 4
movzx   ecx, byte ptr [esi+2]
mov     [ebx+ecx+32h], dl
movzx   ecx, byte ptr [esi+eax+1]
movzx   edx, byte ptr [esi+eax]
add     eax, 2
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+1]
movzx   edx, byte ptr [esi+eax]
add     eax, 2
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+1]
movzx   edx, byte ptr [esi+eax]
add     eax, 2
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+1]
movzx   edx, byte ptr [esi+eax]
add     eax, 2
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+1]
movzx   edx, byte ptr [esi+eax]
add     eax, 2
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+1]
movzx   edx, byte ptr [esi+eax]
add     eax, 2
cmp     edi, eax
mov     [ebx+edx+32h], cl
jle     short loc_6321071d
movzx   ecx, byte ptr [esi+eax+1]
movzx   edx, byte ptr [esi+eax]
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+3]
movzx   edx, byte ptr [esi+eax+2]
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+5]
movzx   edx, byte ptr [esi+eax+4]
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+7]
movzx   edx, byte ptr [esi+eax+6]
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+9]
movzx   edx, byte ptr [esi+eax+8]
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+0bh]
movzx   edx, byte ptr [esi+eax+0ah]
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+0dh]
movzx   edx, byte ptr [esi+eax+0ch]
mov     [ebx+edx+32h], cl
movzx   ecx, byte ptr [esi+eax+0fh]
movzx   edx, byte ptr [esi+eax+0eh]
add     eax, 10h
cmp     edi, eax
mov     [ebx+edx+32h], cl
jg      short loc_632106a7
lea     eax, [esp+3ch+numberofbyteswritten]
lea     edi, [ebx+30h]
mov     [esp+3ch+lpoverlapped], 0
mov     [esp+3ch+lpnumberofbyteswritten], eax
mov     [esp+3ch+nnumberofbytestowrite], 103h
mov     [esp+3ch+lpbuffer], edi
mov     esi, [ebx+2ch]
mov     [esp+3ch+hfile], esi
call    ds:writefile
sub     esp, 14h
mov     [esp+3ch+hfile], ebx
call    sub_6320b610
cmp     [esp+3ch+numberofbyteswritten], 103h
setz    al
add     esp, 30h
pop     ebx
pop     esi
pop     edi
retn
sub     esp, 4ch
mov     [esp+4ch+var_c], ebx
mov     ebx, [esp+4ch+arg_0]
mov     [esp+4ch+var_4], edi
mov     [esp+4ch+var_8], esi
xor     esi, esi
mov     eax, [ebx+4]
mov     edi, [eax+8]
test    edi, edi
jz      loc_63210838
mov     edx, [ebx+134h]
test    edx, edx
jz      loc_63210838
mov     ecx, [ebx]
mov     [esp+4ch+lpfilename], ebx
call    dword ptr [ecx+0ch]
mov     [esp+4ch+htemplatefile], 0
mov     [esp+4ch+dwflagsandattributes], 0
mov     [esp+4ch+dwcreationdisposition], 3
mov     [esp+4ch+lpsecurityattributes], 0
mov     [esp+4ch+dwsharemode], 0
mov     [esp+4ch+dwdesiredaccess], 40000000h
mov     [esp+4ch+lpfilename], edi
call    ds:createfilea
sub     esp, 1ch
cmp     eax, 0ffffffffh
mov     [ebx+2ch], eax
jz      short loc_63210838
lea     esi, [esp+4ch+dcb]
mov     [esp+4ch+dwdesiredaccess], esi
mov     [esp+4ch+dcb.dcblength], 1ch
mov     [esp+4ch+lpfilename], eax
call    ds:getcommstate
sub     esp, 8
mov     [esp+4ch+dwdesiredaccess], esi
mov     ebx, [ebx+2ch]
mov     esi, 1
mov     [esp+4ch+dcb.baudrate], 1c200h
mov     [esp+4ch+dcb.bytesize], 8
mov     [esp+4ch+dcb.parity], 0
mov     [esp+4ch+dcb.stopbits], 0
mov     [esp+4ch+lpfilename], ebx
call    ds:setcommstate
sub     esp, 8
mov     eax, esi
mov     ebx, [esp+4ch+var_c]
mov     esi, [esp+4ch+var_8]
mov     edi, [esp+4ch+var_4]
add     esp, 4ch
retn
push    ebp
mov     ebp, esp
push    edi
push    ebx
sub     esp, 50h
lea     ecx, [ebp+var_3c]
lea     ebx, [ebp+var_8]
mov     [ebp+var_1c], ebx
mov     ebx, 103h
mov     [esp], ecx
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_6322421c
mov     [ebp+var_18], offset sub_63210957
mov     [ebp+var_14], esp
call    sub_6321b240
mov     edx, [ebp+arg_4]
mov     eax, [ebp+arg_0]
mov     [ebp+var_38], 0ffffffffh
mov     [esp+4], edx
mov     [esp], eax
call    sub_6320b5d0
mov     edx, [ebp+arg_0]
mov     dword ptr [edx], offset off_6322ea48
mov     dword ptr [edx+2ch], 0ffffffffh
add     edx, 30h
test    dl, 1
jnz     short loc_63210930
test    dl, 2
jnz     loc_63210947
mov     ecx, ebx
xor     eax, eax
shr     ecx, 2
mov     edi, edx
test    bl, 2
rep stosd
jz      short loc_632108d8
mov     word ptr [edi], 0
add     edi, 2
and     ebx, 1
jz      short loc_632108e0
mov     byte ptr [edi], 0
mov     ecx, [ebp+arg_0]
mov     ebx, [ebp+arg_4]
mov     byte ptr [ecx+30h], 5ah
mov     byte ptr [ecx+31h], 0a1h
mov     byte ptr [ecx+132h], 0a5h
mov     edi, [ebx+11ch]
mov     [esp+4], edi
mov     edx, [ebx+120h]
mov     [ebp+var_38], 1
mov     [esp], edx
call    sub_63210a70
mov     edx, [ebp+arg_0]
mov     [edx+134h], eax
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
add     esp, 50h
pop     ebx
pop     edi
pop     ebp
retn
mov     edi, [ebp+arg_0]
mov     bl, 2
mov     edx, edi
add     edx, 31h
test    dl, 2
mov     byte ptr [edi+30h], 0
jz      loc_632108c0
mov     word ptr [edx], 0
sub     ebx, 2
add     edx, 2
jmp     loc_632108c0
add     ebp, 8
mov     ecx, [ebp-34h]
mov     edi, [ebp+8]
mov     dword ptr [ebp-38h], 0
mov     [ebp-40h], ecx
mov     [esp+0], edi
call    sub_6320b590
mov     ebx, [ebp-40h]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], ebx
call    sub_6321b600
push    edi
push    esi
push    ebx
sub     esp, 20h
mov     ebx, [esp+30h]
test    ebx, ebx
jz      loc_63210a69
movzx   eax, byte ptr [ebx]
xor     esi, esi
test    al, al
jz      short loc_63210a08
xor     edx, edx
lea     edi, [esp+10h]
jmp     short loc_632109de
test    edx, edx
jz      short loc_632109d4
mov     byte ptr [esp+edx+10h], 0
mov     [esp], edi
call    atoi
cmp     eax, 0fdh
ja      loc_63210a4d
add     esi, 1
xor     edx, edx
add     ebx, 1
movzx   eax, byte ptr [ebx]
test    al, al
jz      short loc_63210a04
cmp     al, 3bh
jz      short loc_632109b3
cmp     al, 2ch
jz      short loc_632109b3
lea     ecx, [eax-30h]
cmp     cl, 9
ja      short loc_63210a11
cmp     edx, 2
jg      short loc_63210a5b
add     ebx, 1
mov     [esp+edx+10h], al
movzx   eax, byte ptr [ebx]
add     edx, 1
test    al, al
jnz     short loc_632109de
test    edx, edx
jg      short loc_63210a23
add     esp, 20h
mov     eax, esi
pop     ebx
pop     esi
pop     edi
retn
cmp     al, 20h
jz      short loc_632109d4
add     esp, 20h
mov     esi, 0fffffffch
mov     eax, esi
pop     ebx
pop     esi
pop     edi
retn
lea     eax, [esp+10h]
mov     byte ptr [esp+edx+10h], 0
mov     [esp], eax
call    atoi
lea     edx, [esi+1]
mov     esi, 0fffffffeh
cmp     eax, 0fdh
cmovbe  esi, edx
add     esp, 20h
mov     eax, esi
pop     ebx
pop     esi
pop     edi
retn
add     esp, 20h
mov     esi, 0fffffffeh
mov     eax, esi
pop     ebx
pop     esi
pop     edi
retn
add     esp, 20h
mov     esi, 0fffffffdh
mov     eax, esi
pop     ebx
pop     esi
pop     edi
retn
mov     esi, 0ffffffffh
jmp     short loc_63210a08
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 3ch
mov     ebx, [esp+4ch+arg_4]
test    ebx, ebx
jz      loc_63210e87
mov     eax, [esp+4ch+arg_0]
test    eax, eax
jz      loc_63210e87
mov     ecx, [esp+4ch+arg_0]
lea     edx, ds:4[ecx*4]
mov     [esp+4ch+string], edx
call    sub_63222dd0
mov     ebp, eax
movzx   eax, byte ptr [ebx]
test    al, al
jz      loc_63210eb1
mov     [esp+4ch+var_34], ebp
xor     esi, esi
xor     edi, edi
mov     [esp+4ch+var_30], 0
xor     ebp, ebp
cmp     al, 3bh
jz      short loc_63210ac9
cmp     al, 2ch
jnz     short loc_63210b02
test    esi, esi
jz      short loc_63210b02
lea     eax, [esp+4ch+var_2c]
mov     [esp+esi+4ch+var_2c], 0
mov     [esp+4ch+string], eax
call    atoi
cmp     eax, 0fdh
ja      loc_63210e93
mov     edx, [esp+4ch+var_34]
lea     ebp, [eax+3]
mov     [edx+edi*4], eax
add     edi, 1
cmp     edi, [esp+4ch+arg_0]
jz      loc_63210ea3
xor     esi, esi
movzx   eax, byte ptr [ebx]
lea     edx, [eax-30h]
cmp     dl, 9
ja      short loc_63210b19
cmp     esi, 2
jg      short loc_63210b23
mov     [esp+esi+4ch+var_2c], al
add     esi, 1
add     ebx, 1
movzx   eax, byte ptr [ebx]
test    al, al
jnz     short loc_63210ac1
mov     [esp+4ch+var_30], ebp
mov     ebp, [esp+4ch+var_34]
test    esi, esi
jg      loc_63210e50
lea     eax, ds:0[edi*4]
cmp     [esp+4ch+arg_0], edi
jle     loc_63210d37
mov     edx, edi
xor     ecx, ecx
not     edx
mov     eax, 3
add     edx, [esp+4ch+arg_0]
and     edx, 7
cmp     [esp+4ch+var_30], 0fdh
jle     loc_63210dd0
mov     [ebp+edi*4+0], ecx
add     edi, 1
cmp     edi, [esp+4ch+arg_0]
jz      loc_63210d30
test    edx, edx
jz      loc_63210c56
cmp     edx, 1
jz      loc_63210c35
cmp     edx, 2
jz      loc_63210c1e
cmp     edx, 3
jz      short loc_63210c07
cmp     edx, 4
jz      short loc_63210bee
cmp     edx, 5
jz      short loc_63210bd5
cmp     edx, 6
jz      short loc_63210bbc
cmp     eax, 0fdh
jle     loc_63210e30
mov     eax, 3
xor     edx, edx
mov     [ebp+edi*4+0], edx
add     edi, 1
cmp     eax, 0fdh
jle     loc_63210e10
mov     eax, 3
xor     edx, edx
mov     [ebp+edi*4+0], edx
add     edi, 1
cmp     eax, 0fdh
jle     loc_63210e40
mov     eax, 3
xor     edx, edx
mov     [ebp+edi*4+0], edx
add     edi, 1
cmp     eax, 0fdh
jle     loc_63210e20
mov     eax, 3
xor     edx, edx
mov     [ebp+edi*4+0], edx
add     edi, 1
cmp     eax, 0fdh
jg      loc_63210e00
mov     edx, eax
add     eax, 3
mov     [ebp+edi*4+0], edx
add     edi, 1
cmp     eax, 0fdh
jg      loc_63210df0
mov     edx, eax
add     eax, 3
mov     [ebp+edi*4+0], edx
add     edi, 1
cmp     eax, 0fdh
jg      loc_63210de0
mov     edx, eax
add     eax, 3
mov     [ebp+edi*4+0], edx
add     edi, 1
cmp     edi, [esp+4ch+arg_0]
jz      loc_63210d30
xor     edx, edx
cmp     eax, 0fdh
mov     ecx, 3
jle     loc_63210d90
mov     [ebp+edi*4+0], edx
xor     eax, eax
add     edi, 1
cmp     ecx, 0fdh
mov     edx, 3
jle     loc_63210d80
mov     [ebp+edi*4+0], eax
xor     eax, eax
cmp     edx, 0fdh
lea     ebx, [edi+1]
mov     ecx, 3
jle     loc_63210d72
mov     [ebp+ebx*4+0], eax
xor     eax, eax
cmp     ecx, 0fdh
lea     ebx, [edi+2]
mov     edx, 3
jle     loc_63210d68
mov     [ebp+ebx*4+0], eax
xor     eax, eax
cmp     edx, 0fdh
lea     ebx, [edi+3]
mov     ecx, 3
jle     loc_63210db0
mov     [ebp+ebx*4+0], eax
xor     eax, eax
cmp     ecx, 0fdh
lea     ebx, [edi+4]
mov     edx, 3
jle     loc_63210da0
mov     [ebp+ebx*4+0], eax
xor     eax, eax
cmp     edx, 0fdh
lea     ebx, [edi+5]
mov     ecx, 3
jle     loc_63210dc0
xor     edx, edx
cmp     ecx, 0fdh
mov     [ebp+ebx*4+0], eax
lea     ebx, [edi+6]
mov     eax, 3
jle     short loc_63210d50
add     edi, 7
cmp     edi, [esp+4ch+arg_0]
mov     [ebp+ebx*4+0], edx
jnz     loc_63210c56
nop
lea     esi, [esi+0]
lea     eax, ds:0[edi*4]
mov     dword ptr [ebp+eax+0], 0ffffffffh
add     esp, 3ch
mov     eax, ebp
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
add     edi, 7
mov     edx, ecx
cmp     edi, [esp+4ch+arg_0]
lea     eax, [ecx+3]
mov     [ebp+ebx*4+0], edx
jnz     loc_63210c56
jmp     short loc_63210d30
mov     eax, ecx
lea     edx, [ecx+3]
jmp     loc_63210cb6
mov     eax, edx
lea     ecx, [edx+3]
jmp     loc_63210c9c
mov     eax, ecx
lea     edx, [ecx+3]
jmp     loc_63210c82
mov     edx, eax
lea     ecx, [eax+3]
jmp     loc_63210c68
mov     eax, ecx
lea     edx, [ecx+3]
jmp     loc_63210cea
mov     eax, edx
lea     ecx, [edx+3]
jmp     loc_63210cd0
mov     eax, edx
lea     ecx, [edx+3]
jmp     loc_63210d04
mov     ecx, [esp+4ch+var_30]
lea     eax, [ecx+3]
jmp     loc_63210b64
mov     eax, 3
xor     edx, edx
jmp     loc_63210c45
mov     eax, 3
xor     edx, edx
jmp     loc_63210c2e
mov     eax, 3
xor     edx, edx
jmp     loc_63210c17
mov     edx, eax
add     eax, 3
jmp     loc_63210bce
mov     edx, eax
add     eax, 3
jmp     loc_63210c00
mov     edx, eax
add     eax, 3
jmp     loc_63210bb5
mov     edx, eax
add     eax, 3
jmp     loc_63210be7
test    al, al
jnz     loc_63210b33
lea     ebx, [esp+4ch+var_2c]
mov     [esp+esi+4ch+var_2c], 0
mov     [esp+4ch+string], ebx
call    atoi
cmp     eax, 0fdh
ja      loc_63210b33
lea     esi, [eax+3]
mov     [ebp+edi*4+0], eax
add     edi, 1
mov     [esp+4ch+var_30], esi
jmp     loc_63210b33
add     esp, 3ch
xor     ebp, ebp
pop     ebx
mov     eax, ebp
pop     esi
pop     edi
pop     ebp
retn
mov     [esp+4ch+var_30], ebp
mov     ebp, [esp+4ch+var_34]
movzx   eax, byte ptr [ebx]
jmp     loc_63210b2b
mov     [esp+4ch+var_30], ebp
mov     ebp, edx
movzx   eax, byte ptr [ebx]
jmp     loc_63210b2b
xor     eax, eax
xor     edi, edi
mov     [esp+4ch+var_30], 0
jmp     loc_63210b3a
push    ebp
xor     eax, eax
push    edi
push    esi
push    ebx
sub     esp, 43ch
cmp     dword ptr [esp+450h], 100h
mov     edi, [esp+454h]
jg      loc_632110f8
mov     edx, [esp+450h]
lea     ebp, [esp+2fh]
test    edx, edx
jle     loc_632110f0
mov     eax, [edi]
cmp     eax, 0ffffffffh
jz      loc_632110f0
mov     ecx, [esp+450h]
xor     esi, esi
mov     ebx, ebp
sub     ecx, 1
and     ecx, 3
jz      loc_63210ff0
mov     [esp+1ch], ecx
mov     esi, 1
mov     [esp+8], eax
mov     dword ptr [esp+4], offset ad
mov     [esp], ebp
call    sub_63221da0
mov     ecx, [esp+1ch]
test    eax, eax
lea     edx, [ebp+eax+0]
mov     eax, [edi+esi*4]
cmovle  edx, ebp
cmp     eax, 0ffffffffh
jz      loc_632110f0
mov     ebx, edx
add     ebx, 1
cmp     ecx, 1
mov     byte ptr [edx], 2ch
mov     byte ptr [edx+1], 0
jz      loc_63210ff0
cmp     ecx, 2
jz      short loc_63210fb4
mov     [esp+8], eax
mov     dword ptr [esp+4], offset ad
mov     [esp], ebx
call    sub_63221da0
test    eax, eax
lea     edx, [ebx+eax]
cmovle  edx, ebx
add     esi, 1
mov     eax, [edi+esi*4]
cmp     eax, 0ffffffffh
jz      loc_632110f0
test    esi, esi
mov     ebx, edx
jz      short loc_63210fb4
mov     byte ptr [edx], 2ch
add     ebx, 1
mov     byte ptr [edx+1], 0
mov     [esp+8], eax
mov     dword ptr [esp+4], offset ad
mov     [esp], ebx
call    sub_63221da0
test    eax, eax
lea     edx, [ebx+eax]
cmovle  edx, ebx
add     esi, 1
mov     eax, [edi+esi*4]
cmp     eax, 0ffffffffh
jz      loc_632110f0
test    esi, esi
mov     ebx, edx
jz      short loc_63210ff0
mov     byte ptr [edx], 2ch
add     ebx, 1
mov     byte ptr [edx+1], 0
nop
mov     [esp+8], eax
mov     dword ptr [esp+4], offset ad
mov     [esp], ebx
call    sub_63221da0
test    eax, eax
lea     edx, [ebx+eax]
cmovle  edx, ebx
add     esi, 1
cmp     esi, [esp+450h]
jz      loc_632110f0
mov     eax, [edi+esi*4]
cmp     eax, 0ffffffffh
jz      loc_632110f0
test    esi, esi
mov     ebx, edx
jz      short loc_63211038
mov     byte ptr [edx], 2ch
add     ebx, 1
mov     byte ptr [edx+1], 0
mov     [esp+8], eax
mov     dword ptr [esp+4], offset ad
mov     [esp], ebx
call    sub_63221da0
lea     ecx, [esi+1]
test    eax, eax
lea     edx, [ebx+eax]
mov     eax, [edi+ecx*4]
cmovle  edx, ebx
cmp     eax, 0ffffffffh
jz      loc_632110f0
test    ecx, ecx
mov     ebx, edx
jz      short loc_63211073
mov     byte ptr [edx], 2ch
add     ebx, 1
mov     byte ptr [edx+1], 0
mov     [esp+8], eax
mov     dword ptr [esp+4], offset ad
mov     [esp], ebx
call    sub_63221da0
lea     ecx, [esi+2]
test    eax, eax
lea     edx, [ebx+eax]
mov     eax, [edi+ecx*4]
cmovle  edx, ebx
cmp     eax, 0ffffffffh
jz      short loc_632110f0
test    ecx, ecx
mov     ebx, edx
jz      short loc_632110aa
mov     byte ptr [edx], 2ch
add     ebx, 1
mov     byte ptr [edx+1], 0
mov     [esp+8], eax
mov     dword ptr [esp+4], offset ad
mov     [esp], ebx
call    sub_63221da0
test    eax, eax
lea     edx, [ebx+eax]
cmovle  edx, ebx
add     esi, 3
mov     eax, [edi+esi*4]
cmp     eax, 0ffffffffh
jz      short loc_632110f0
test    esi, esi
mov     ebx, edx
jz      loc_63210ff0
mov     byte ptr [edx], 2ch
add     ebx, 1
mov     byte ptr [edx+1], 0
jmp     loc_63210ff0
mov     [esp], ebp
call    _strdup
add     esp, 43ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [esp+arg_0]
xor     ecx, ecx
cmp     dword ptr [eax+2ch], 0ffffffffh
setnz   cl
xor     edx, edx
cmp     dword ptr [eax+30h], 0ffffffffh
setnz   dl
add     edx, ecx
xor     ecx, ecx
cmp     dword ptr [eax+34h], 0ffffffffh
setnz   cl
add     edx, ecx
cmp     dword ptr [eax+38h], 0ffffffffh
setnz   cl
movzx   eax, cl
add     edx, eax
setnz   al
retn
push    ebp
xor     eax, eax
push    edi
push    esi
push    ebx
sub     esp, 1ch
mov     ebx, [esp+2ch+arg_4]
mov     edx, [esp+2ch+arg_0]
test    ebx, ebx
jz      loc_6321131e
mov     eax, [edx]
mov     [esp+2ch+var_2c], edx
call    dword ptr [eax+28h]
mov     [esp+2ch+var_2c], ebx
mov     ebp, eax
mov     [esp+2ch+var_28], eax
call    sub_6320fc90
test    ebp, ebp
mov     eax, 1
jle     loc_6321131e
lea     edi, [ebp-1]
mov     esi, 1
and     edi, 7
mov     [esp+2ch+var_24], 0
mov     [esp+2ch+var_28], 0
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
cmp     esi, ebp
jz      loc_63211319
test    edi, edi
jz      loc_63211279
cmp     edi, 1
jz      loc_6321125e
cmp     edi, 2
jz      short loc_6321124b
cmp     edi, 3
jz      short loc_63211238
cmp     edi, 4
jz      short loc_63211225
cmp     edi, 5
jz      short loc_63211212
cmp     edi, 6
nop
jz      short loc_632111ff
mov     [esp+2ch+var_24], 1
mov     esi, 2
mov     [esp+2ch+var_28], 1
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
mov     [esp+2ch+var_24], esi
mov     [esp+2ch+var_28], esi
add     esi, 1
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
mov     [esp+2ch+var_24], esi
mov     [esp+2ch+var_28], esi
add     esi, 1
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
mov     [esp+2ch+var_24], esi
mov     [esp+2ch+var_28], esi
add     esi, 1
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
mov     [esp+2ch+var_24], esi
mov     [esp+2ch+var_28], esi
add     esi, 1
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
mov     [esp+2ch+var_24], esi
mov     [esp+2ch+var_28], esi
add     esi, 1
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
mov     [esp+2ch+var_24], esi
mov     [esp+2ch+var_28], esi
add     esi, 1
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
cmp     esi, ebp
jz      loc_63211319
lea     edi, [esi+1]
mov     [esp+2ch+var_24], esi
mov     [esp+2ch+var_28], esi
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
mov     [esp+2ch+var_24], edi
mov     [esp+2ch+var_28], edi
lea     edi, [esi+5]
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
lea     ecx, [esi+2]
mov     [esp+2ch+var_24], ecx
mov     [esp+2ch+var_28], ecx
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
lea     edx, [esi+3]
mov     [esp+2ch+var_24], edx
mov     [esp+2ch+var_28], edx
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
lea     eax, [esi+4]
mov     [esp+2ch+var_24], eax
mov     [esp+2ch+var_28], eax
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
mov     [esp+2ch+var_24], edi
mov     [esp+2ch+var_28], edi
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
lea     ecx, [esi+6]
mov     [esp+2ch+var_24], ecx
mov     [esp+2ch+var_28], ecx
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
lea     edx, [esi+7]
add     esi, 8
mov     [esp+2ch+var_24], edx
mov     [esp+2ch+var_28], edx
mov     [esp+2ch+var_2c], ebx
call    sub_6320fdf0
cmp     esi, ebp
jnz     loc_63211279
mov     eax, 1
add     esp, 1ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    esi
push    ebx
xor     ebx, ebx
sub     esp, 14h
mov     esi, [esp+1ch+arg_0]
mov     [esp+1ch+var_18], 0
mov     eax, [esi+4]
mov     [esp+1ch+var_1c], eax
call    sub_6320ad10
test    eax, eax
jz      short loc_6321135c
cmp     byte ptr [eax], 1
sbb     ebx, ebx
not     ebx
and     ebx, 4
mov     [esp+1ch+var_18], 1
mov     edx, [esi+4]
mov     [esp+1ch+var_1c], edx
call    sub_6320ad10
test    eax, eax
jz      short loc_6321137c
cmp     byte ptr [eax], 0
lea     ecx, [ebx+4]
cmovnz  ebx, ecx
mov     [esp+1ch+var_18], 2
mov     eax, [esi+4]
mov     [esp+1ch+var_1c], eax
call    sub_6320ad10
test    eax, eax
jz      short loc_6321139c
cmp     byte ptr [eax], 0
lea     edx, [ebx+4]
cmovnz  ebx, edx
mov     [esp+1ch+var_18], 3
mov     esi, [esi+4]
mov     [esp+1ch+var_1c], esi
call    sub_6320ad10
test    eax, eax
jz      short loc_632113bc
cmp     byte ptr [eax], 0
lea     ecx, [ebx+4]
cmovnz  ebx, ecx
add     esp, 14h
mov     eax, ebx
pop     ebx
pop     esi
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [ebx+2ch]
cmp     eax, 0ffffffffh
jz      short loc_632113f3
mov     [esp+1ch+hobject], eax
call    ds:closehandle
mov     dword ptr [ebx+2ch], 0ffffffffh
sub     esp, 4
mov     eax, [ebx+30h]
cmp     eax, 0ffffffffh
jz      short loc_6321140e
mov     [esp+1ch+hobject], eax
call    ds:closehandle
mov     dword ptr [ebx+30h], 0ffffffffh
sub     esp, 4
mov     eax, [ebx+34h]
cmp     eax, 0ffffffffh
jz      short loc_63211429
mov     [esp+1ch+hobject], eax
call    ds:closehandle
mov     dword ptr [ebx+34h], 0ffffffffh
sub     esp, 4
mov     eax, [ebx+38h]
cmp     eax, 0ffffffffh
jz      short loc_63211444
mov     [esp+1ch+hobject], eax
call    ds:closehandle
mov     dword ptr [ebx+38h], 0ffffffffh
sub     esp, 4
add     esp, 18h
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322e968
jmp     sub_6320b590
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_63211450
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
push    edi
push    ebx
mov     ebx, 30h
sub     esp, 14h
mov     edi, [esp+1ch+arg_0]
mov     eax, [esp+1ch+arg_4]
mov     [esp+1ch+var_1c], edi
mov     [esp+1ch+var_18], eax
call    sub_6320b5d0
lea     edx, [edi+3ch]
test    dl, 1
mov     dword ptr [edi], offset off_6322e968
mov     dword ptr [edi+2ch], 0ffffffffh
mov     dword ptr [edi+30h], 0ffffffffh
mov     dword ptr [edi+34h], 0ffffffffh
mov     dword ptr [edi+38h], 0ffffffffh
jnz     short loc_632114f3
test    dl, 2
jnz     short loc_63211501
mov     ecx, ebx
xor     eax, eax
shr     ecx, 2
mov     edi, edx
test    bl, 2
rep stosd
jz      short loc_632114e5
mov     word ptr [edi], 0
add     edi, 2
and     ebx, 1
jz      short loc_632114ed
mov     byte ptr [edi], 0
add     esp, 14h
pop     ebx
pop     edi
retn
lea     edx, [edi+3dh]
mov     bl, 2fh
test    dl, 2
mov     byte ptr [edi+3ch], 0
jz      short loc_632114cd
mov     word ptr [edx], 0
sub     ebx, 2
add     edx, 2
jmp     short loc_632114cd
push    esi
push    ebx
sub     esp, 44h
mov     eax, [esp+4ch+arg_4]
mov     [esp+4ch+htemplatefile], 0
mov     [esp+4ch+dwflagsandattributes], 0
mov     [esp+4ch+dwcreationdisposition], 3
mov     [esp+4ch+lpsecurityattributes], 0
mov     [esp+4ch+dwsharemode], 0
mov     [esp+4ch+dwdesiredaccess], 40000000h
mov     [esp+4ch+lpfilename], eax
call    ds:createfilea
sub     esp, 1ch
cmp     eax, 0ffffffffh
mov     ebx, eax
jz      short loc_6321159f
lea     esi, [esp+4ch+dcb]
mov     [esp+4ch+dcb.dcblength], 1ch
mov     [esp+4ch+dwdesiredaccess], esi
mov     [esp+4ch+lpfilename], eax
call    ds:getcommstate
sub     esp, 8
mov     [esp+4ch+dcb.baudrate], 9600h
mov     [esp+4ch+dcb.bytesize], 8
mov     [esp+4ch+dcb.parity], 0
mov     [esp+4ch+dcb.stopbits], 0
mov     [esp+4ch+dwdesiredaccess], esi
mov     [esp+4ch+lpfilename], ebx
call    ds:setcommstate
sub     esp, 8
add     esp, 44h
mov     eax, ebx
pop     ebx
pop     esi
retn
sub     esp, 3ch
mov     [esp+3ch+var_10], ebx
mov     ebx, [esp+3ch+arg_0]
mov     [esp+3ch+var_38], 0
mov     [esp+3ch+var_c], esi
xor     esi, esi
mov     [esp+3ch+var_8], edi
mov     eax, [ebx+4]
mov     [esp+3ch+var_4], ebp
mov     [esp+3ch+hobject], eax
call    sub_6320ad10
test    eax, eax
jz      short loc_632115e5
cmp     byte ptr [eax], 0
jnz     short loc_63211654
mov     [esp+3ch+var_38], 1
mov     edx, [ebx+4]
mov     [esp+3ch+hobject], edx
call    sub_6320ad10
test    eax, eax
jz      short loc_63211601
cmp     byte ptr [eax], 0
jnz     short loc_63211673
mov     [esp+3ch+var_38], 2
mov     ecx, [ebx+4]
mov     [esp+3ch+hobject], ecx
call    sub_6320ad10
test    eax, eax
jz      short loc_6321161d
cmp     byte ptr [eax], 0
jnz     short loc_63211690
mov     [esp+3ch+var_38], 3
mov     edi, [ebx+4]
mov     [esp+3ch+hobject], edi
mov     edi, 1
call    sub_6320ad10
test    eax, eax
jz      short loc_6321163e
cmp     byte ptr [eax], 0
jnz     short loc_632116b0
mov     eax, edi
mov     ebx, [esp+3ch+var_10]
mov     esi, [esp+3ch+var_c]
mov     edi, [esp+3ch+var_8]
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
retn
mov     [esp+3ch+var_38], eax
xor     edi, edi
mov     [esp+3ch+hobject], ebx
call    sub_63211510
cmp     eax, 0ffffffffh
mov     [ebx+2ch], eax
jz      short loc_6321163e
mov     si, 1
jmp     loc_632115e5
mov     [esp+3ch+var_38], eax
mov     [esp+3ch+hobject], ebx
call    sub_63211510
cmp     eax, 0ffffffffh
mov     [ebx+esi*4+2ch], eax
jz      short loc_632116c9
add     esi, 1
jmp     loc_63211601
mov     [esp+3ch+var_38], eax
mov     [esp+3ch+hobject], ebx
call    sub_63211510
cmp     eax, 0ffffffffh
mov     [ebx+esi*4+2ch], eax
jz      short loc_632116c9
add     esi, 1
jmp     loc_6321161d
mov     [esp+3ch+var_38], eax
mov     [esp+3ch+hobject], ebx
call    sub_63211510
cmp     eax, 0ffffffffh
mov     [ebx+esi*4+2ch], eax
jnz     loc_6321163e
test    esi, esi
jz      loc_63211884
lea     edi, [esi-1]
mov     ebp, ds:closehandle
mov     eax, [ebx+edi*4+2ch]
mov     edx, edi
and     edx, 7
mov     [esp+3ch+var_20], edx
mov     [esp+3ch+hobject], eax
call    ebp
mov     dword ptr [ebx+edi*4+2ch], 0ffffffffh
sub     esp, 4
test    edi, edi
mov     edx, [esp+3ch+var_20]
jz      loc_63211884
test    edx, edx
jz      loc_632117db
cmp     edx, 1
jz      loc_632117bc
cmp     edx, 2
jz      loc_632117a5
cmp     edx, 3
jz      short loc_6321178e
cmp     edx, 4
jz      short loc_63211777
cmp     edx, 5
jz      short loc_63211760
cmp     edx, 6
nop
jz      short loc_63211749
lea     edi, [esi-2]
mov     edx, [ebx+edi*4+2ch]
mov     [esp+3ch+hobject], edx
call    ebp
mov     dword ptr [ebx+edi*4+2ch], 0ffffffffh
sub     esp, 4
sub     edi, 1
mov     eax, [ebx+edi*4+2ch]
mov     [esp+3ch+hobject], eax
call    ebp
mov     dword ptr [ebx+edi*4+2ch], 0ffffffffh
sub     esp, 4
sub     edi, 1
mov     esi, [ebx+edi*4+2ch]
mov     [esp+3ch+hobject], esi
call    ebp
mov     dword ptr [ebx+edi*4+2ch], 0ffffffffh
sub     esp, 4
sub     edi, 1
mov     ecx, [ebx+edi*4+2ch]
mov     [esp+3ch+hobject], ecx
call    ebp
mov     dword ptr [ebx+edi*4+2ch], 0ffffffffh
sub     esp, 4
sub     edi, 1
mov     edx, [ebx+edi*4+2ch]
mov     [esp+3ch+hobject], edx
call    ebp
mov     dword ptr [ebx+edi*4+2ch], 0ffffffffh
sub     esp, 4
sub     edi, 1
mov     eax, [ebx+edi*4+2ch]
mov     [esp+3ch+hobject], eax
call    ebp
mov     dword ptr [ebx+edi*4+2ch], 0ffffffffh
sub     esp, 4
sub     edi, 1
mov     esi, [ebx+edi*4+2ch]
mov     [esp+3ch+hobject], esi
call    ebp
mov     dword ptr [ebx+edi*4+2ch], 0ffffffffh
sub     esp, 4
test    edi, edi
jz      loc_63211884
lea     esi, [edi-1]
mov     ecx, [ebx+esi*4+2ch]
mov     [esp+3ch+hobject], ecx
call    ebp
mov     dword ptr [ebx+esi*4+2ch], 0ffffffffh
lea     esi, [edi-2]
mov     eax, [ebx+esi*4+2ch]
sub     esp, 4
mov     [esp+3ch+hobject], eax
call    ebp
mov     dword ptr [ebx+esi*4+2ch], 0ffffffffh
lea     esi, [edi-3]
mov     edx, [ebx+esi*4+2ch]
sub     esp, 4
mov     [esp+3ch+hobject], edx
call    ebp
mov     dword ptr [ebx+esi*4+2ch], 0ffffffffh
lea     esi, [edi-4]
mov     ecx, [ebx+esi*4+2ch]
sub     esp, 4
mov     [esp+3ch+hobject], ecx
call    ebp
mov     dword ptr [ebx+esi*4+2ch], 0ffffffffh
lea     esi, [edi-5]
mov     eax, [ebx+esi*4+2ch]
sub     esp, 4
mov     [esp+3ch+hobject], eax
call    ebp
mov     dword ptr [ebx+esi*4+2ch], 0ffffffffh
lea     esi, [edi-6]
mov     edx, [ebx+esi*4+2ch]
sub     esp, 4
mov     [esp+3ch+hobject], edx
call    ebp
mov     dword ptr [ebx+esi*4+2ch], 0ffffffffh
lea     esi, [edi-7]
sub     edi, 8
mov     ecx, [ebx+esi*4+2ch]
sub     esp, 4
mov     [esp+3ch+hobject], ecx
call    ebp
mov     dword ptr [ebx+esi*4+2ch], 0ffffffffh
sub     esp, 4
jmp     loc_632117bf
xor     edi, edi
jmp     loc_6321163e
sub     esp, 4ch
xor     eax, eax
mov     edx, [esp+4ch+arg_4]
movzx   ecx, [esp+4ch+arg_28]
cmp     edx, 0ffffffffh
jz      loc_6321193d
mov     eax, [esp+4ch+arg_8]
cmp     cl, 1
lea     ecx, [esp+4ch+numberofbyteswritten]
mov     [esp+4ch+buffer], 0ffh
mov     [esp+4ch+var_1f], 0
mov     [esp+4ch+var_1c], al
mov     eax, [esp+4ch+arg_10]
mov     [esp+4ch+var_1e], 0
mov     [esp+4ch+var_1d], 65h
mov     [esp+4ch+lpoverlapped], 0
mov     [esp+4ch+var_1b], al
mov     eax, [esp+4ch+arg_14]
mov     [esp+4ch+lpnumberofbyteswritten], ecx
mov     [esp+4ch+nnumberofbytestowrite], 0dh
mov     [esp+4ch+hfile], edx
mov     [esp+4ch+var_1a], al
mov     eax, [esp+4ch+arg_18]
mov     [esp+4ch+var_19], al
mov     eax, [esp+4ch+arg_1c]
mov     [esp+4ch+var_18], al
mov     eax, [esp+4ch+arg_20]
mov     [esp+4ch+var_17], al
mov     eax, [esp+4ch+arg_24]
mov     [esp+4ch+var_16], al
mov     eax, [esp+4ch+arg_c]
mov     [esp+4ch+var_15], al
sbb     eax, eax
not     eax
and     eax, 0ffffffc7h
mov     [esp+4ch+var_14], al
lea     eax, [esp+4ch+buffer]
mov     [esp+4ch+lpbuffer], eax
call    ds:writefile
sub     esp, 14h
cmp     [esp+4ch+numberofbyteswritten], 0dh
setz    al
add     esp, 4ch
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 4ch
mov     ebx, [esp+5ch+arg_0]
movzx   edx, [esp+5ch+arg_24]
mov     esi, [esp+5ch+arg_18]
mov     edi, [esp+5ch+arg_1c]
mov     eax, [ebx+2ch]
mov     ebp, [esp+5ch+arg_20]
mov     [esp+5ch+var_1d], dl
cmp     eax, 0ffffffffh
jz      short loc_632119cf
movzx   ecx, dl
mov     edx, [esp+5ch+arg_14]
mov     dword ptr [esp+5ch+var_34], ecx
mov     ecx, [esp+5ch+arg_10]
mov     [esp+5ch+var_38], ebp
mov     [esp+5ch+var_3c], edi
mov     [esp+5ch+var_44], edx
mov     edx, [esp+5ch+arg_c]
mov     [esp+5ch+var_48], ecx
mov     ecx, [esp+5ch+arg_8]
mov     [esp+5ch+var_40], esi
mov     [esp+5ch+var_58], eax
mov     [esp+5ch+var_4c], edx
mov     edx, [esp+5ch+arg_4]
mov     [esp+5ch+var_50], ecx
mov     [esp+5ch+var_5c], ebx
mov     [esp+5ch+var_54], edx
call    sub_63211890
xor     edx, edx
test    al, al
jz      loc_63211add
mov     eax, [ebx+30h]
cmp     eax, 0ffffffffh
jz      short loc_63211a2a
movzx   ecx, [esp+5ch+var_1d]
mov     edx, [esp+5ch+arg_14]
mov     [esp+5ch+var_38], ebp
mov     [esp+5ch+var_3c], edi
mov     dword ptr [esp+5ch+var_34], ecx
mov     ecx, [esp+5ch+arg_10]
mov     [esp+5ch+var_44], edx
mov     edx, [esp+5ch+arg_c]
mov     [esp+5ch+var_40], esi
mov     [esp+5ch+var_58], eax
mov     [esp+5ch+var_48], ecx
mov     ecx, [esp+5ch+arg_8]
mov     [esp+5ch+var_4c], edx
mov     edx, [esp+5ch+arg_4]
mov     [esp+5ch+var_5c], ebx
mov     [esp+5ch+var_50], ecx
mov     [esp+5ch+var_54], edx
call    sub_63211890
xor     edx, edx
test    al, al
jz      loc_63211add
mov     eax, [ebx+34h]
cmp     eax, 0ffffffffh
jz      short loc_63211a81
movzx   ecx, [esp+5ch+var_1d]
mov     edx, [esp+5ch+arg_14]
mov     [esp+5ch+var_38], ebp
mov     [esp+5ch+var_3c], edi
mov     dword ptr [esp+5ch+var_34], ecx
mov     ecx, [esp+5ch+arg_10]
mov     [esp+5ch+var_44], edx
mov     edx, [esp+5ch+arg_c]
mov     [esp+5ch+var_40], esi
mov     [esp+5ch+var_58], eax
mov     [esp+5ch+var_48], ecx
mov     ecx, [esp+5ch+arg_8]
mov     [esp+5ch+var_4c], edx
mov     edx, [esp+5ch+arg_4]
mov     [esp+5ch+var_5c], ebx
mov     [esp+5ch+var_50], ecx
mov     [esp+5ch+var_54], edx
call    sub_63211890
xor     edx, edx
test    al, al
jz      short loc_63211add
mov     eax, [ebx+38h]
cmp     eax, 0ffffffffh
jz      short loc_63211ad8
movzx   edx, [esp+5ch+var_1d]
mov     [esp+5ch+var_38], ebp
mov     ecx, [esp+5ch+arg_14]
mov     [esp+5ch+var_3c], edi
mov     ebp, [esp+5ch+arg_c]
mov     [esp+5ch+var_40], esi
mov     edi, [esp+5ch+arg_8]
mov     dword ptr [esp+5ch+var_34], edx
mov     esi, [esp+5ch+arg_4]
mov     edx, [esp+5ch+arg_10]
mov     [esp+5ch+var_44], ecx
mov     [esp+5ch+var_4c], ebp
mov     [esp+5ch+var_50], edi
mov     [esp+5ch+var_48], edx
mov     [esp+5ch+var_54], esi
mov     [esp+5ch+var_58], eax
mov     [esp+5ch+var_5c], ebx
call    sub_63211890
xor     edx, edx
test    al, al
jz      short loc_63211add
mov     edx, 1
add     esp, 4ch
mov     eax, edx
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     esp, 4ch
xor     eax, eax
mov     ecx, [esp+4ch+arg_0]
mov     edx, [esp+4ch+arg_8]
cmp     dword ptr [ecx+2ch], 0ffffffffh
jz      short loc_63211b72
mov     [esp+4ch+buffer], 0ffh
lea     eax, [esp+4ch+buffer]
mov     [esp+4ch+var_22], 0
mov     [esp+4ch+var_21], 0
mov     [esp+4ch+var_20], 0fh
mov     [esp+4ch+var_1f], 0
mov     [esp+4ch+var_1e], 0
mov     [esp+4ch+var_1d], 0
mov     ecx, [edx]
mov     [esp+4ch+var_1c], ecx
mov     ecx, [edx+4]
mov     [esp+4ch+var_18], ecx
mov     ecx, [edx+8]
lea     edx, [esp+4ch+numberofbyteswritten]
mov     [esp+4ch+lpbuffer], eax
mov     eax, [esp+4ch+arg_4]
mov     [esp+4ch+lpoverlapped], 0
mov     [esp+4ch+lpnumberofbyteswritten], edx
mov     [esp+4ch+var_14], ecx
mov     [esp+4ch+nnumberofbytestowrite], 13h
mov     [esp+4ch+hfile], eax
call    ds:writefile
sub     esp, 14h
cmp     [esp+4ch+numberofbyteswritten], 13h
setz    al
add     esp, 4ch
retn
push    ebp
push    edi
push    esi
xor     esi, esi
push    ebx
sub     esp, 1ch
mov     ebx, [esp+2ch+arg_0]
mov     ebp, [esp+2ch+arg_4]
mov     edi, [esp+2ch+arg_8]
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      loc_63211daf
test    ebp, 1
jnz     loc_63211daf
test    edi, edi
jz      loc_63211daf
mov     [esp+2ch+var_2c], ebx
call    sub_6320b600
test    ebp, ebp
jle     loc_63211d2e
movzx   eax, byte ptr [edi]
lea     edx, [ebp-1]
shr     edx, 1
and     edx, 7
cmp     eax, 2fh
jbe     loc_63211dc0
cmp     ebp, 2
mov     eax, 2
jle     loc_63211d2e
test    edx, edx
jz      loc_63211c89
cmp     edx, 1
jz      short loc_63211c6c
cmp     edx, 2
jz      short loc_63211c5c
cmp     edx, 3
jz      short loc_63211c4c
cmp     edx, 4
nop
jz      short loc_63211c3c
cmp     edx, 5
jz      short loc_63211c2c
cmp     edx, 6
jz      short loc_63211c1c
movzx   edx, byte ptr [edi+eax]
cmp     edx, 2fh
jbe     loc_63211e20
add     eax, 2
movzx   edx, byte ptr [edi+eax]
cmp     edx, 2fh
jbe     loc_63211e10
add     eax, 2
movzx   edx, byte ptr [edi+eax]
cmp     edx, 2fh
jbe     loc_63211e00
add     eax, 2
movzx   edx, byte ptr [edi+eax]
cmp     edx, 2fh
jbe     loc_63211df0
add     eax, 2
movzx   edx, byte ptr [edi+eax]
cmp     edx, 2fh
jbe     loc_63211de0
add     eax, 2
movzx   edx, byte ptr [edi+eax]
cmp     edx, 2fh
jbe     loc_63211dd0
add     eax, 2
movzx   edx, byte ptr [edi+eax]
cmp     edx, 2fh
ja      short loc_63211c7e
movzx   ecx, byte ptr [edi+eax+1]
mov     [ebx+edx+3ch], cl
add     eax, 2
cmp     ebp, eax
jle     loc_63211d2e
movzx   edx, byte ptr [edi+eax]
cmp     edx, 2fh
ja      short loc_63211c9b
movzx   ecx, byte ptr [edi+eax+1]
mov     [ebx+edx+3ch], cl
lea     edx, [eax+2]
movzx   eax, byte ptr [edi+eax+2]
cmp     eax, 2fh
ja      short loc_63211cb1
movzx   ecx, byte ptr [edi+edx+1]
mov     [ebx+eax+3ch], cl
movzx   eax, byte ptr [edi+edx+2]
cmp     eax, 2fh
ja      short loc_63211cc4
movzx   ecx, byte ptr [edi+edx+3]
mov     [ebx+eax+3ch], cl
movzx   eax, byte ptr [edi+edx+4]
cmp     eax, 2fh
ja      short loc_63211cd7
movzx   ecx, byte ptr [edi+edx+5]
mov     [ebx+eax+3ch], cl
movzx   eax, byte ptr [edi+edx+6]
cmp     eax, 2fh
ja      short loc_63211cea
movzx   ecx, byte ptr [edi+edx+7]
mov     [ebx+eax+3ch], cl
movzx   eax, byte ptr [edi+edx+8]
cmp     eax, 2fh
ja      short loc_63211cfd
movzx   ecx, byte ptr [edi+edx+9]
mov     [ebx+eax+3ch], cl
movzx   eax, byte ptr [edi+edx+0ah]
cmp     eax, 2fh
ja      short loc_63211d10
movzx   ecx, byte ptr [edi+edx+0bh]
mov     [ebx+eax+3ch], cl
movzx   eax, byte ptr [edi+edx+0ch]
cmp     eax, 2fh
ja      short loc_63211d23
movzx   ecx, byte ptr [edi+edx+0dh]
mov     [ebx+eax+3ch], cl
lea     eax, [edx+0eh]
cmp     ebp, eax
jg      loc_63211c89
mov     eax, [ebx+2ch]
mov     esi, 1
cmp     eax, 0ffffffffh
jz      short loc_63211d50
lea     esi, [ebx+3ch]
mov     [esp+2ch+var_24], esi
mov     [esp+2ch+var_28], eax
mov     [esp+2ch+var_2c], ebx
call    sub_63211af0
mov     esi, eax
mov     eax, [ebx+30h]
cmp     eax, 0ffffffffh
jz      short loc_63211d6d
lea     edi, [ebx+48h]
mov     [esp+2ch+var_24], edi
mov     [esp+2ch+var_28], eax
mov     [esp+2ch+var_2c], ebx
call    sub_63211af0
and     esi, eax
mov     eax, [ebx+34h]
cmp     eax, 0ffffffffh
jz      short loc_63211d8a
lea     ebp, [ebx+54h]
mov     [esp+2ch+var_24], ebp
mov     [esp+2ch+var_28], eax
mov     [esp+2ch+var_2c], ebx
call    sub_63211af0
and     esi, eax
mov     eax, [ebx+38h]
cmp     eax, 0ffffffffh
jz      short loc_63211da7
lea     edx, [ebx+60h]
mov     [esp+2ch+var_24], edx
mov     [esp+2ch+var_28], eax
mov     [esp+2ch+var_2c], ebx
call    sub_63211af0
and     esi, eax
mov     [esp+2ch+var_2c], ebx
call    sub_6320b610
add     esp, 1ch
mov     eax, esi
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
movzx   ecx, byte ptr [edi+1]
mov     [ebx+eax+3ch], cl
jmp     loc_63211bd7
movzx   ecx, byte ptr [edi+eax+1]
mov     [ebx+edx+3ch], cl
jmp     loc_63211c69
movzx   ecx, byte ptr [edi+eax+1]
mov     [ebx+edx+3ch], cl
jmp     loc_63211c59
movzx   ecx, byte ptr [edi+eax+1]
mov     [ebx+edx+3ch], cl
jmp     loc_63211c49
movzx   ecx, byte ptr [edi+eax+1]
mov     [ebx+edx+3ch], cl
jmp     loc_63211c39
movzx   ecx, byte ptr [edi+eax+1]
mov     [ebx+edx+3ch], cl
jmp     loc_63211c29
movzx   ecx, byte ptr [edi+eax+1]
mov     [ebx+edx+3ch], cl
jmp     loc_63211c19
sub     esp, 1ch
mov     [esp+1ch+var_c], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_8], esi
xor     esi, esi
mov     [esp+1ch+var_4], edi
mov     edi, [esp+1ch+arg_4]
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      loc_63211f12
test    edi, edi
js      loc_63211f12
mov     eax, [ebx]
mov     [esp+1ch+var_1c], ebx
call    dword ptr [eax+28h]
cmp     edi, eax
jge     loc_63211f12
mov     [esp+1ch+var_1c], ebx
mov     esi, 1
call    sub_6320b600
movzx   eax, [esp+1ch+arg_8]
lea     ecx, [edi+edi*2]
movzx   edx, [esp+1ch+arg_9]
mov     [ebx+ecx+3ch], al
movzx   eax, [esp+1ch+arg_a]
mov     [ebx+ecx+3dh], dl
mov     [ebx+ecx+3eh], al
mov     eax, [ebx+2ch]
cmp     eax, 0ffffffffh
jz      short loc_63211eb3
lea     esi, [ebx+3ch]
mov     [esp+1ch+var_14], esi
mov     [esp+1ch+var_18], eax
mov     [esp+1ch+var_1c], ebx
call    sub_63211af0
mov     esi, eax
mov     eax, [ebx+30h]
cmp     eax, 0ffffffffh
jz      short loc_63211ed0
lea     edi, [ebx+48h]
mov     [esp+1ch+var_14], edi
mov     [esp+1ch+var_18], eax
mov     [esp+1ch+var_1c], ebx
call    sub_63211af0
and     esi, eax
mov     eax, [ebx+34h]
cmp     eax, 0ffffffffh
jz      short loc_63211eed
lea     ecx, [ebx+54h]
mov     [esp+1ch+var_14], ecx
mov     [esp+1ch+var_18], eax
mov     [esp+1ch+var_1c], ebx
call    sub_63211af0
and     esi, eax
mov     eax, [ebx+38h]
cmp     eax, 0ffffffffh
jz      short loc_63211f0a
lea     edx, [ebx+60h]
mov     [esp+1ch+var_14], edx
mov     [esp+1ch+var_18], eax
mov     [esp+1ch+var_1c], ebx
call    sub_63211af0
and     esi, eax
mov     [esp+1ch+var_1c], ebx
call    sub_6320b610
mov     eax, esi
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
push    ebp
push    edi
xor     edi, edi
push    esi
push    ebx
sub     esp, 2ch
mov     ebx, [esp+3ch+arg_0]
mov     esi, [esp+3ch+arg_4]
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      loc_6321222f
mov     edi, [ebx]
mov     [esp+3ch+var_3c], ebx
call    dword ptr [edi+28h]
mov     [esp+3ch+var_3c], ebx
mov     [esp+3ch+var_20], eax
call    sub_6320b600
mov     eax, [esp+3ch+var_20]
test    eax, eax
jle     loc_632121ae
mov     edi, [esp+3ch+var_20]
lea     edx, [ebx+3ch]
mov     ecx, [ebx+24h]
sub     edi, 1
and     edi, 3
test    ecx, ecx
mov     [esp+3ch+var_24], ecx
jz      short loc_63211fb5
cmp     dword ptr [ebx+28h], 0
jle     short loc_63211fb5
mov     eax, [esp+3ch+var_24]
mov     ecx, [eax]
test    ecx, ecx
js      short loc_63211fb5
cmp     ecx, [esi]
jge     short loc_63211fb5
lea     eax, [ecx+ecx*2]
lea     eax, [esi+eax]
movzx   ebp, byte ptr [eax+4]
mov     ecx, ebp
mov     [edx], cl
movzx   ebp, byte ptr [eax+5]
mov     ecx, ebp
mov     [edx+1], cl
movzx   ecx, byte ptr [eax+6]
mov     [edx+2], cl
mov     ecx, 1
add     edx, 3
cmp     ecx, [esp+3ch+var_20]
jz      loc_632121ae
test    edi, edi
jz      loc_632120ac
cmp     edi, 1
jz      loc_63212061
cmp     edi, 2
jz      short loc_63212020
mov     edi, [esp+3ch+var_24]
test    edi, edi
jz      short loc_6321201a
cmp     dword ptr [ebx+28h], 1
jle     short loc_6321201a
mov     ebp, [esp+3ch+var_24]
mov     edi, [ebp+ecx*4+0]
test    edi, edi
js      short loc_6321201a
cmp     edi, [esi]
jge     short loc_6321201a
lea     edi, [edi+edi*2]
add     edi, esi
movzx   ebp, byte ptr [edi+4]
mov     eax, ebp
mov     [edx], al
movzx   ebp, byte ptr [edi+5]
mov     eax, ebp
mov     [edx+1], al
movzx   edi, byte ptr [edi+6]
mov     eax, edi
mov     [edx+2], al
add     ecx, 1
add     edx, 3
mov     edi, [esp+3ch+var_24]
test    edi, edi
jz      short loc_6321205b
cmp     [ebx+28h], ecx
jle     short loc_6321205b
mov     eax, [esp+3ch+var_24]
mov     edi, [eax+ecx*4]
test    edi, edi
js      short loc_6321205b
cmp     edi, [esi]
jge     short loc_6321205b
lea     edi, [edi+edi*2]
add     edi, esi
movzx   ebp, byte ptr [edi+4]
mov     eax, ebp
mov     [edx], al
movzx   ebp, byte ptr [edi+5]
mov     eax, ebp
mov     [edx+1], al
movzx   ebp, byte ptr [edi+6]
mov     eax, ebp
mov     [edx+2], al
add     ecx, 1
add     edx, 3
mov     edi, [esp+3ch+var_24]
test    edi, edi
jz      short loc_6321209c
cmp     [ebx+28h], ecx
jle     short loc_6321209c
mov     eax, [esp+3ch+var_24]
mov     edi, [eax+ecx*4]
test    edi, edi
js      short loc_6321209c
cmp     edi, [esi]
jge     short loc_6321209c
lea     edi, [edi+edi*2]
add     edi, esi
movzx   ebp, byte ptr [edi+4]
mov     eax, ebp
mov     [edx], al
movzx   ebp, byte ptr [edi+5]
mov     eax, ebp
mov     [edx+1], al
movzx   ebp, byte ptr [edi+6]
mov     eax, ebp
mov     [edx+2], al
add     ecx, 1
add     edx, 3
cmp     ecx, [esp+3ch+var_20]
jz      loc_632121ae
mov     eax, [esp+3ch+var_24]
mov     [esp+3ch+var_24], ebx
mov     ebx, edx
test    eax, eax
jz      short loc_632120ed
mov     edx, [esp+3ch+var_24]
cmp     [edx+28h], ecx
jle     short loc_632120ed
mov     edi, [eax+ecx*4]
test    edi, edi
js      short loc_632120ed
cmp     edi, [esi]
jge     short loc_632120ed
lea     edi, [edi+edi*2]
add     edi, esi
movzx   ebp, byte ptr [edi+4]
mov     edx, ebp
mov     [ebx], dl
movzx   ebp, byte ptr [edi+5]
mov     edx, ebp
mov     [ebx+1], dl
movzx   ebp, byte ptr [edi+6]
mov     edx, ebp
mov     [ebx+2], dl
add     ecx, 1
test    eax, eax
lea     edx, [ebx+3]
jz      short loc_6321212a
mov     ebx, [esp+3ch+var_24]
cmp     [ebx+28h], ecx
jle     short loc_6321212a
mov     edi, [eax+ecx*4]
test    edi, edi
js      short loc_6321212a
cmp     edi, [esi]
jge     short loc_6321212a
lea     edi, [edi+edi*2]
add     edi, esi
movzx   ebp, byte ptr [edi+4]
mov     ebx, ebp
mov     [edx], bl
movzx   ebp, byte ptr [edi+5]
mov     ebx, ebp
mov     [edx+1], bl
movzx   edi, byte ptr [edi+6]
mov     ebx, edi
mov     [edx+2], bl
test    eax, eax
lea     ebp, [ecx+1]
jz      short loc_63212162
mov     edi, [esp+3ch+var_24]
cmp     [edi+28h], ebp
jle     short loc_63212162
mov     ebp, [eax+ebp*4]
test    ebp, ebp
js      short loc_63212162
cmp     ebp, [esi]
jge     short loc_63212162
lea     edi, [ebp+ebp*2+0]
add     edi, esi
movzx   ebx, byte ptr [edi+4]
mov     [edx+3], bl
movzx   ebx, byte ptr [edi+5]
mov     [edx+4], bl
movzx   ebp, byte ptr [edi+6]
mov     ebx, ebp
mov     [edx+5], bl
test    eax, eax
lea     ebp, [ecx+2]
jz      short loc_6321219a
mov     edi, [esp+3ch+var_24]
cmp     [edi+28h], ebp
jle     short loc_6321219a
mov     ebp, [eax+ebp*4]
test    ebp, ebp
js      short loc_6321219a
cmp     ebp, [esi]
jge     short loc_6321219a
lea     edi, [ebp+ebp*2+0]
add     edi, esi
movzx   ebx, byte ptr [edi+4]
mov     [edx+6], bl
movzx   ebx, byte ptr [edi+5]
mov     [edx+7], bl
movzx   ebp, byte ptr [edi+6]
mov     ebx, ebp
mov     [edx+8], bl
add     ecx, 3
cmp     ecx, [esp+3ch+var_20]
lea     ebx, [edx+9]
jnz     loc_632120b6
mov     ebx, [esp+3ch+var_24]
mov     eax, [ebx+2ch]
mov     edi, 1
cmp     eax, 0ffffffffh
jz      short loc_632121d0
lea     ecx, [ebx+3ch]
mov     [esp+3ch+var_34], ecx
mov     [esp+3ch+var_38], eax
mov     [esp+3ch+var_3c], ebx
call    sub_63211af0
mov     edi, eax
mov     eax, [ebx+30h]
cmp     eax, 0ffffffffh
jz      short loc_632121ed
lea     edx, [ebx+48h]
mov     [esp+3ch+var_34], edx
mov     [esp+3ch+var_38], eax
mov     [esp+3ch+var_3c], ebx
call    sub_63211af0
and     edi, eax
mov     eax, [ebx+34h]
cmp     eax, 0ffffffffh
jz      short loc_6321220a
lea     ebp, [ebx+54h]
mov     [esp+3ch+var_34], ebp
mov     [esp+3ch+var_38], eax
mov     [esp+3ch+var_3c], ebx
call    sub_63211af0
and     edi, eax
mov     eax, [ebx+38h]
cmp     eax, 0ffffffffh
jz      short loc_63212227
lea     esi, [ebx+60h]
mov     [esp+3ch+var_34], esi
mov     [esp+3ch+var_38], eax
mov     [esp+3ch+var_3c], ebx
call    sub_63211af0
and     edi, eax
mov     [esp+3ch+var_3c], ebx
call    sub_6320b610
add     esp, 2ch
mov     eax, edi
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+2ch], 0ffffffffh
setnz   al
retn
mov     edx, [esp+arg_0]
mov     eax, [edx+4]
mov     eax, [eax+124h]
retn
push    ebx
xor     eax, eax
sub     esp, 18h
mov     ebx, [esp+1ch+arg_4]
mov     edx, [esp+1ch+arg_0]
test    ebx, ebx
jz      short loc_632122eb
mov     eax, [edx]
mov     [esp+1ch+var_1c], edx
call    dword ptr [eax+28h]
mov     [esp+1ch+var_1c], ebx
mov     [esp+1ch+var_18], eax
call    sub_6320fc90
mov     [esp+1ch+var_14], 0
mov     [esp+1ch+var_18], 0
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     [esp+1ch+var_14], 1
mov     [esp+1ch+var_18], 1
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     [esp+1ch+var_14], 2
mov     [esp+1ch+var_18], 2
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     [esp+1ch+var_14], 3
mov     [esp+1ch+var_18], 3
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     eax, 1
add     esp, 18h
pop     ebx
retn
push    ebp
xor     eax, eax
push    edi
push    esi
push    ebx
sub     esp, 5ch
mov     esi, [esp+6ch+arg_0]
mov     edi, [esp+6ch+arg_4]
cmp     dword ptr [esi+2ch], 0ffffffffh
jz      loc_632126ea
mov     ebx, [esi]
mov     [esp+6ch+hfile], esi
call    dword ptr [ebx+28h]
mov     ebp, eax
add     ebp, ebp
mov     [esp+6ch+var_3c], eax
add     eax, ebp
mov     [esp+6ch+var_30], eax
mov     [esp+6ch+hfile], eax
call    sub_63222dd0
mov     [esp+6ch+hfile], esi
mov     ebx, eax
call    sub_6320b600
mov     eax, [esp+6ch+var_3c]
test    eax, eax
jle     loc_632126a0
lea     edx, [ebp+1]
mov     ebp, [esp+6ch+var_3c]
mov     ecx, [esp+6ch+var_3c]
mov     eax, [esi+24h]
sub     ebp, 1
add     ecx, 1
and     ebp, 3
test    eax, eax
jz      short loc_63212364
cmp     dword ptr [esi+28h], 0
jg      loc_632126f2
mov     byte ptr [ebx], 0
mov     byte ptr [ebx+ecx-1], 0
mov     byte ptr [ebx+edx-1], 0
add     ecx, 1
mov     eax, 1
add     edx, 1
cmp     eax, [esp+6ch+var_3c]
mov     [esp+6ch+var_40], ecx
jz      loc_632126a0
test    ebp, ebp
jz      loc_632124d9
cmp     ebp, 1
jz      loc_6321246b
cmp     ebp, 2
xchg    ax, ax
jz      short loc_63212407
mov     ebp, [esi+24h]
test    ebp, ebp
jz      loc_63212783
cmp     dword ptr [esi+28h], 1
jle     loc_63212783
mov     ebp, [ebp+eax*4+0]
test    ebp, ebp
js      loc_63212783
cmp     ebp, [edi]
jge     loc_63212783
lea     ecx, [ebp+ebp*2+0]
add     ecx, edi
movzx   ebp, byte ptr [ecx+4]
mov     [esp+6ch+var_38], ecx
mov     ecx, ebp
mov     ebp, [esp+6ch+var_40]
mov     [ebx+eax], cl
mov     ecx, [esp+6ch+var_38]
movzx   ecx, byte ptr [ecx+5]
mov     [ebx+ebp-1], cl
mov     ecx, [esp+6ch+var_38]
movzx   ebp, byte ptr [ecx+6]
mov     ecx, ebp
mov     [ebx+edx-1], cl
add     [esp+6ch+var_40], 1
add     eax, 1
add     edx, 1
mov     ebp, [esi+24h]
test    ebp, ebp
jz      loc_632127b7
cmp     [esi+28h], eax
jle     loc_632127b7
mov     ebp, [ebp+eax*4+0]
test    ebp, ebp
js      loc_632127b7
cmp     ebp, [edi]
jge     loc_632127b7
lea     ecx, [ebp+ebp*2+0]
add     ecx, edi
movzx   ebp, byte ptr [ecx+4]
mov     [esp+6ch+var_38], ecx
mov     ecx, ebp
mov     ebp, [esp+6ch+var_40]
mov     [ebx+eax], cl
mov     ecx, [esp+6ch+var_38]
movzx   ecx, byte ptr [ecx+5]
mov     [ebx+ebp-1], cl
mov     ecx, [esp+6ch+var_38]
movzx   ebp, byte ptr [ecx+6]
mov     ecx, ebp
mov     [ebx+edx-1], cl
add     [esp+6ch+var_40], 1
add     eax, 1
add     edx, 1
mov     ebp, [esi+24h]
test    ebp, ebp
jz      loc_632127a0
cmp     [esi+28h], eax
jle     loc_632127a0
mov     ebp, [ebp+eax*4+0]
test    ebp, ebp
js      loc_632127a0
cmp     ebp, [edi]
jge     loc_632127a0
lea     ecx, [ebp+ebp*2+0]
add     ecx, edi
movzx   ebp, byte ptr [ecx+4]
mov     [esp+6ch+var_38], ecx
mov     ecx, ebp
mov     ebp, [esp+6ch+var_40]
mov     [ebx+eax], cl
mov     ecx, [esp+6ch+var_38]
movzx   ecx, byte ptr [ecx+5]
mov     [ebx+ebp-1], cl
mov     ecx, [esp+6ch+var_38]
movzx   ebp, byte ptr [ecx+6]
mov     ecx, ebp
mov     [ebx+edx-1], cl
add     eax, 1
add     edx, 1
add     [esp+6ch+var_40], 1
cmp     eax, [esp+6ch+var_3c]
jz      loc_632126a0
mov     ecx, [esp+6ch+var_40]
mov     [esp+6ch+var_40], edx
jmp     loc_63212678
mov     ebp, [ebp+eax*4+0]
test    ebp, ebp
js      loc_63212688
cmp     ebp, [edi]
jge     loc_63212688
lea     ebp, [ebp+ebp*2+0]
add     ebp, edi
movzx   edx, byte ptr [ebp+4]
mov     [ebx+eax], dl
movzx   edx, byte ptr [ebp+5]
mov     [ebx+ecx-1], dl
movzx   edx, byte ptr [ebp+6]
mov     ebp, [esp+6ch+var_40]
mov     [ebx+ebp-1], dl
mov     edx, [esp+6ch+var_40]
add     eax, 1
add     ecx, 1
add     edx, 1
mov     [esp+6ch+var_40], edx
mov     edx, [esi+24h]
test    edx, edx
jz      loc_63212750
cmp     [esi+28h], eax
jle     loc_63212750
mov     edx, [edx+eax*4]
test    edx, edx
js      loc_63212750
cmp     edx, [edi]
jge     loc_63212750
lea     edx, [edx+edx*2]
add     edx, edi
movzx   ebp, byte ptr [edx+4]
mov     [esp+6ch+var_38], edx
mov     edx, ebp
mov     [ebx+eax], dl
mov     edx, [esp+6ch+var_38]
movzx   ebp, byte ptr [edx+5]
mov     edx, ebp
mov     ebp, [esp+6ch+var_40]
mov     [ebx+ecx-1], dl
mov     edx, [esp+6ch+var_38]
movzx   edx, byte ptr [edx+6]
mov     [ebx+ebp-1], dl
lea     edx, [ecx+1]
mov     [esp+6ch+var_38], edx
mov     edx, [esp+6ch+var_40]
lea     ebp, [eax+1]
add     edx, 1
mov     [esp+6ch+var_34], edx
mov     edx, [esi+24h]
test    edx, edx
jz      loc_63212730
cmp     [esi+28h], ebp
jle     loc_63212730
mov     edx, [edx+ebp*4]
test    edx, edx
js      loc_63212730
cmp     edx, [edi]
jge     loc_63212730
lea     edx, [edx+edx*2]
add     edx, edi
movzx   ebp, byte ptr [edx+4]
mov     [esp+6ch+var_44], edx
mov     edx, ebp
mov     ebp, [esp+6ch+var_38]
mov     [ebx+eax+1], dl
mov     edx, [esp+6ch+var_44]
movzx   edx, byte ptr [edx+5]
mov     [ebx+ebp-1], dl
mov     edx, [esp+6ch+var_44]
mov     ebp, [esp+6ch+var_34]
movzx   edx, byte ptr [edx+6]
mov     [ebx+ebp-1], dl
lea     edx, [ecx+2]
mov     [esp+6ch+var_38], edx
mov     edx, [esp+6ch+var_40]
lea     ebp, [eax+2]
add     edx, 2
mov     [esp+6ch+var_34], edx
mov     edx, [esi+24h]
test    edx, edx
jz      loc_63212767
cmp     [esi+28h], ebp
jle     loc_63212767
mov     edx, [edx+ebp*4]
test    edx, edx
js      loc_63212767
cmp     edx, [edi]
jge     loc_63212767
lea     edx, [edx+edx*2]
add     edx, edi
movzx   ebp, byte ptr [edx+4]
mov     [esp+6ch+var_44], edx
mov     edx, ebp
mov     ebp, [esp+6ch+var_38]
mov     [ebx+eax+2], dl
mov     edx, [esp+6ch+var_44]
movzx   edx, byte ptr [edx+5]
mov     [ebx+ebp-1], dl
mov     edx, [esp+6ch+var_44]
mov     ebp, [esp+6ch+var_34]
movzx   edx, byte ptr [edx+6]
mov     [ebx+ebp-1], dl
mov     ebp, [esp+6ch+var_40]
add     eax, 3
add     ecx, 3
add     ebp, 3
cmp     eax, [esp+6ch+var_3c]
mov     [esp+6ch+var_40], ebp
jz      short loc_632126a0
mov     ebp, [esi+24h]
test    ebp, ebp
jz      short loc_63212688
cmp     [esi+28h], eax
jg      loc_632124e6
mov     ebp, [esp+6ch+var_40]
mov     byte ptr [ebx+eax], 0
mov     byte ptr [ebx+ecx-1], 0
mov     byte ptr [ebx+ebp-1], 0
jmp     loc_6321251b
mov     edi, [esp+6ch+var_30]
lea     eax, [esp+6ch+numberofbyteswritten]
mov     [esp+6ch+lpoverlapped], 0
mov     [esp+6ch+lpnumberofbyteswritten], eax
mov     [esp+6ch+lpbuffer], ebx
mov     [esp+6ch+nnumberofbytestowrite], edi
mov     ecx, [esi+2ch]
mov     [esp+6ch+hfile], ecx
call    ds:writefile
sub     esp, 14h
test    ebx, ebx
jz      short loc_632126d7
mov     [esp+6ch+hfile], ebx
call    sub_63222da0
mov     [esp+6ch+hfile], esi
call    sub_6320b610
mov     esi, [esp+6ch+var_30]
cmp     [esp+6ch+numberofbyteswritten], esi
setz    al
add     esp, 5ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [eax]
test    eax, eax
js      loc_63212364
cmp     eax, [edi]
jge     loc_63212364
lea     eax, [eax+eax*2]
add     eax, edi
mov     [esp+6ch+var_40], eax
movzx   eax, byte ptr [eax+4]
mov     [ebx], al
mov     eax, [esp+6ch+var_40]
movzx   eax, byte ptr [eax+5]
mov     [ebx+ecx-1], al
mov     eax, [esp+6ch+var_40]
movzx   eax, byte ptr [eax+6]
mov     [ebx+edx-1], al
jmp     loc_63212371
mov     edx, [esp+6ch+var_38]
mov     ebp, [esp+6ch+var_34]
mov     byte ptr [ebx+eax+1], 0
mov     byte ptr [ebx+edx-1], 0
mov     byte ptr [ebx+ebp-1], 0
jmp     loc_632125f2
mov     edx, [esp+6ch+var_40]
mov     byte ptr [ebx+eax], 0
mov     byte ptr [ebx+ecx-1], 0
mov     byte ptr [ebx+edx-1], 0
jmp     loc_63212583
mov     edx, [esp+6ch+var_38]
mov     ebp, [esp+6ch+var_34]
mov     byte ptr [ebx+eax+2], 0
mov     byte ptr [ebx+edx-1], 0
mov     byte ptr [ebx+ebp-1], 0
jmp     loc_63212661
mov     ebp, [esp+6ch+var_40]
mov     byte ptr [ebx+eax], 0
mov     byte ptr [ebx+ebp-1], 0
mov     byte ptr [ebx+edx-1], 0
jmp     loc_632123fc
mov     ebp, [esp+6ch+var_40]
mov     byte ptr [ebx+eax], 0
mov     byte ptr [ebx+ebp-1], 0
mov     byte ptr [ebx+edx-1], 0
jmp     loc_632124c4
mov     ebp, [esp+6ch+var_40]
mov     byte ptr [ebx+eax], 0
mov     byte ptr [ebx+ebp-1], 0
mov     byte ptr [ebx+edx-1], 0
jmp     loc_63212460
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [ebx+2ch]
cmp     eax, 0ffffffffh
jz      short loc_632127f3
mov     [esp+1ch+hobject], eax
call    ds:closehandle
mov     dword ptr [ebx+2ch], 0ffffffffh
sub     esp, 4
add     esp, 18h
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322e908
jmp     sub_6320b590
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_63212800
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
sub     esp, 4ch
mov     [esp+4ch+var_c], ebx
mov     ebx, [esp+4ch+arg_0]
mov     [esp+4ch+var_4], edi
mov     [esp+4ch+var_8], esi
xor     esi, esi
mov     eax, [ebx+4]
mov     edi, [eax+8]
test    edi, edi
jz      loc_632128ea
mov     edx, [ebx]
mov     [esp+4ch+lpfilename], ebx
call    dword ptr [edx+0ch]
mov     [esp+4ch+htemplatefile], 0
mov     [esp+4ch+dwflagsandattributes], 0
mov     [esp+4ch+dwcreationdisposition], 3
mov     [esp+4ch+lpsecurityattributes], 0
mov     [esp+4ch+dwsharemode], 0
mov     [esp+4ch+dwdesiredaccess], 40000000h
mov     [esp+4ch+lpfilename], edi
call    ds:createfilea
sub     esp, 1ch
cmp     eax, 0ffffffffh
mov     [ebx+2ch], eax
jz      short loc_632128ea
lea     esi, [esp+4ch+dcb]
mov     [esp+4ch+dwdesiredaccess], esi
mov     [esp+4ch+dcb.dcblength], 1ch
mov     [esp+4ch+lpfilename], eax
call    ds:getcommstate
sub     esp, 8
mov     [esp+4ch+dwdesiredaccess], esi
mov     ecx, [ebx+2ch]
mov     esi, 1
mov     [esp+4ch+dcb.baudrate], 2580h
mov     [esp+4ch+dcb.bytesize], 8
mov     [esp+4ch+dcb.parity], 0
mov     [esp+4ch+dcb.stopbits], 0
mov     [esp+4ch+lpfilename], ecx
call    ds:setcommstate
sub     esp, 8
mov     eax, esi
mov     ebx, [esp+4ch+var_c]
mov     esi, [esp+4ch+var_8]
mov     edi, [esp+4ch+var_4]
add     esp, 4ch
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [esp+1ch+arg_4]
mov     [esp+1ch+var_1c], ebx
mov     [esp+1ch+var_18], eax
call    sub_6320b5d0
mov     dword ptr [ebx], offset off_6322e908
mov     dword ptr [ebx+2ch], 0ffffffffh
add     esp, 18h
pop     ebx
retn
mov     eax, [esp+arg_0]
cmp     dword ptr [eax+2ch], 0ffffffffh
setnz   al
retn
mov     edx, [esp+arg_0]
mov     eax, [edx+4]
mov     eax, [eax+128h]
retn
push    ebp
xor     eax, eax
push    edi
push    esi
push    ebx
sub     esp, 5ch
mov     esi, [esp+6ch+arg_0]
mov     edi, [esp+6ch+arg_4]
cmp     dword ptr [esi+2ch], 0ffffffffh
jz      loc_63212a4b
mov     ebx, [esi]
mov     [esp+6ch+hfile], esi
call    dword ptr [ebx+38h]
mov     [esp+6ch+buffer], 0
mov     [esp+6ch+var_2b], 0
mov     [esp+6ch+var_27], 0
mov     [esp+6ch+var_23], 0
mov     [esp+6ch+var_21], 0
mov     [esp+6ch+var_40], eax
mov     [esp+6ch+hfile], esi
call    sub_6320b600
mov     eax, [esp+6ch+var_40]
mov     byte ptr [esp+6ch+buffer+1], 1
mov     byte ptr [esp+6ch+buffer+2], 80h
mov     byte ptr [esp+6ch+buffer+3], 1
test    eax, eax
jle     loc_63212a53
xor     eax, eax
xor     ebx, ebx
lea     ebp, [esp+6ch+buffer]
jmp     short loc_632129d4
add     ebx, 1
movzx   eax, bl
cmp     [esp+6ch+var_40], eax
jle     short loc_63212a53
mov     edx, [esi+24h]
test    edx, edx
jz      short loc_63212a0f
cmp     eax, [esi+28h]
jge     short loc_63212a0f
movzx   ecx, bl
mov     eax, [edx+ecx*4]
test    eax, eax
js      short loc_63212a0f
cmp     eax, [edi]
jg      short loc_63212a0f
lea     eax, [eax+eax*2]
add     eax, edi
movzx   edx, byte ptr [eax+4]
movzx   ecx, byte ptr [eax+5]
mov     byte ptr [esp+6ch+buffer], bl
mov     byte ptr [esp+6ch+var_2b], dl
movzx   edx, byte ptr [eax+6]
mov     byte ptr [esp+6ch+var_2b+1], cl
mov     byte ptr [esp+6ch+var_2b+2], dl
lea     ecx, [esp+6ch+numberofbyteswritten]
mov     [esp+6ch+lpoverlapped], 0
mov     [esp+6ch+lpnumberofbyteswritten], ecx
mov     [esp+6ch+nnumberofbytestowrite], 0fh
mov     [esp+6ch+lpbuffer], ebp
mov     eax, [esi+2ch]
mov     [esp+6ch+hfile], eax
call    ds:writefile
sub     esp, 14h
cmp     [esp+6ch+numberofbyteswritten], 0fh
jz      short loc_632129c8
mov     [esp+6ch+hfile], esi
call    sub_6320b610
xor     eax, eax
add     esp, 5ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     [esp+6ch+hfile], esi
call    sub_6320b610
add     esp, 5ch
mov     eax, 1
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    ebx
xor     eax, eax
sub     esp, 18h
mov     ebx, [esp+1ch+arg_4]
mov     edx, [esp+1ch+arg_0]
test    ebx, ebx
jz      short loc_63212afb
mov     eax, [edx]
mov     [esp+1ch+var_1c], edx
call    dword ptr [eax+38h]
mov     [esp+1ch+var_1c], ebx
mov     [esp+1ch+var_18], eax
call    sub_6320fc90
mov     [esp+1ch+var_14], 0
mov     [esp+1ch+var_18], 0
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     [esp+1ch+var_14], 1
mov     [esp+1ch+var_18], 1
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     [esp+1ch+var_14], 2
mov     [esp+1ch+var_18], 2
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     [esp+1ch+var_14], 3
mov     [esp+1ch+var_18], 3
mov     [esp+1ch+var_1c], ebx
call    sub_6320fdf0
mov     eax, 1
add     esp, 18h
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322e9a8
jmp     sub_6320b590
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_63212b00
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
mov     eax, 30d40h
xor     edx, edx
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [esp+1ch+arg_4]
mov     [esp+1ch+var_1c], ebx
mov     [esp+1ch+var_18], eax
call    sub_6320b5d0
mov     dword ptr [ebx], offset off_6322e9a8
mov     dword ptr [ebx+2ch], 0ffffffffh
add     esp, 18h
pop     ebx
retn
push    ebx
xor     eax, eax
sub     esp, 48h
mov     ebx, [esp+4ch+arg_0]
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      short loc_63212bf0
mov     [esp+4ch+hfile], ebx
call    sub_6320b600
lea     ecx, [esp+4ch+buffer]
lea     edx, [esp+4ch+numberofbyteswritten]
mov     [esp+4ch+lpnumberofbyteswritten], edx
mov     [esp+4ch+lpbuffer], ecx
mov     [esp+4ch+lpoverlapped], 0
mov     [esp+4ch+nnumberofbytestowrite], 10h
mov     eax, [ebx+2ch]
mov     [esp+4ch+buffer], 1b1b1b1bh
mov     [esp+4ch+var_1c], 1b1b1b1bh
mov     [esp+4ch+var_18], 1b1b1b1bh
mov     [esp+4ch+var_14], 1b1bh
mov     [esp+4ch+var_12], 1bh
mov     [esp+4ch+var_11], 0
mov     [esp+4ch+hfile], eax
call    ds:writefile
sub     esp, 14h
mov     [esp+4ch+hfile], ebx
call    sub_6320b610
cmp     [esp+4ch+numberofbyteswritten], 10h
setz    al
add     esp, 48h
pop     ebx
retn
sub     esp, 4ch
xor     eax, eax
mov     [esp+4ch+var_c], ebx
mov     ebx, [esp+4ch+arg_0]
mov     [esp+4ch+var_8], esi
mov     esi, [esp+4ch+arg_4]
mov     [esp+4ch+var_4], edi
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      short loc_63212c9a
lea     edi, [esp+4ch+buffer]
mov     [esp+4ch+buffer], 0
mov     [esp+4ch+var_1b], 0
mov     [esp+4ch+var_17], 0
mov     [esp+4ch+var_13], 0
mov     [esp+4ch+var_11], 0
mov     [esp+4ch+hfile], ebx
call    sub_6320b600
lea     edx, [esp+4ch+numberofbyteswritten]
mov     ecx, esi
mov     [esp+4ch+lpnumberofbyteswritten], edx
mov     [esp+4ch+lpoverlapped], 0
mov     [esp+4ch+nnumberofbytestowrite], 0fh
mov     [esp+4ch+lpbuffer], edi
mov     eax, [ebx+2ch]
mov     byte ptr [esp+4ch+buffer], cl
mov     byte ptr [esp+4ch+buffer+1], 8
mov     byte ptr [esp+4ch+buffer+2], 1
mov     [esp+4ch+hfile], eax
call    ds:writefile
sub     esp, 14h
mov     [esp+4ch+hfile], ebx
call    sub_6320b610
cmp     [esp+4ch+numberofbyteswritten], 0fh
setz    al
mov     ebx, [esp+4ch+var_c]
mov     esi, [esp+4ch+var_8]
mov     edi, [esp+4ch+var_4]
add     esp, 4ch
retn
sub     esp, 4ch
mov     [esp+4ch+var_c], ebx
mov     ebx, [esp+4ch+arg_0]
mov     [esp+4ch+var_4], edi
mov     [esp+4ch+var_8], esi
xor     esi, esi
mov     eax, [ebx+4]
mov     edi, [eax+8]
test    edi, edi
jz      loc_63212d71
mov     edx, [ebx]
mov     [esp+4ch+lpfilename], ebx
call    dword ptr [edx+0ch]
mov     [esp+4ch+htemplatefile], 0
mov     [esp+4ch+dwflagsandattributes], 0
mov     [esp+4ch+dwcreationdisposition], 3
mov     [esp+4ch+lpsecurityattributes], 0
mov     [esp+4ch+dwsharemode], 0
mov     [esp+4ch+dwdesiredaccess], 40000000h
mov     [esp+4ch+lpfilename], edi
call    ds:createfilea
sub     esp, 1ch
cmp     eax, 0ffffffffh
mov     [ebx+2ch], eax
jz      short loc_63212d71
lea     edi, [esp+4ch+dcb]
mov     [esp+4ch+dcb.dcblength], 1ch
mov     [esp+4ch+dwdesiredaccess], edi
mov     [esp+4ch+lpfilename], eax
call    ds:getcommstate
sub     esp, 8
mov     [esp+4ch+dwdesiredaccess], edi
mov     ecx, [ebx+2ch]
mov     [esp+4ch+dcb.baudrate], 4b00h
mov     [esp+4ch+dcb.bytesize], 8
mov     [esp+4ch+dcb.parity], 0
mov     [esp+4ch+lpfilename], ecx
mov     [esp+4ch+dcb.stopbits], 0
call    ds:setcommstate
sub     esp, 8
mov     [esp+4ch+lpfilename], ebx
call    sub_63212b70
test    al, al
jnz     short loc_63212d83
mov     eax, esi
mov     ebx, [esp+4ch+var_c]
mov     esi, [esp+4ch+var_8]
mov     edi, [esp+4ch+var_4]
add     esp, 4ch
retn
mov     [esp+4ch+dwdesiredaccess], 0ffh
mov     [esp+4ch+lpfilename], ebx
call    sub_63212c00
mov     esi, eax
jmp     short loc_63212d71
sub     esp, 4ch
xor     eax, eax
mov     [esp+4ch+var_c], ebx
mov     ebx, [esp+4ch+arg_0]
mov     [esp+4ch+var_8], esi
mov     esi, [esp+4ch+arg_4]
mov     [esp+4ch+var_4], edi
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      loc_63212e4d
lea     edi, [esp+4ch+buffer]
mov     [esp+4ch+buffer], 0
mov     [esp+4ch+var_1b], 0
mov     [esp+4ch+var_17], 0
mov     [esp+4ch+var_13], 0
mov     [esp+4ch+var_11], 0
mov     [esp+4ch+hfile], ebx
call    sub_6320b600
lea     edx, [esp+4ch+numberofbyteswritten]
mov     ecx, esi
mov     [esp+4ch+lpnumberofbyteswritten], edx
mov     [esp+4ch+lpoverlapped], 0
mov     [esp+4ch+nnumberofbytestowrite], 0fh
mov     [esp+4ch+lpbuffer], edi
mov     eax, [ebx+2ch]
mov     byte ptr [esp+4ch+buffer], cl
mov     byte ptr [esp+4ch+buffer+1], 80h
mov     byte ptr [esp+4ch+buffer+2], 6bh
mov     byte ptr [esp+4ch+buffer+3], 56h
mov     byte ptr [esp+4ch+var_1b], 27h
mov     byte ptr [esp+4ch+var_1b+1], 0fch
mov     [esp+4ch+hfile], eax
call    ds:writefile
sub     esp, 14h
mov     [esp+4ch+hfile], ebx
call    sub_6320b610
cmp     [esp+4ch+numberofbyteswritten], 0fh
setz    al
mov     ebx, [esp+4ch+var_c]
mov     esi, [esp+4ch+var_8]
mov     edi, [esp+4ch+var_4]
add     esp, 4ch
retn
sub     esp, 4ch
xor     eax, eax
mov     [esp+4ch+var_c], ebx
mov     ebx, [esp+4ch+arg_0]
mov     [esp+4ch+var_8], esi
mov     esi, [esp+4ch+arg_4]
mov     [esp+4ch+var_4], edi
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      short loc_63212ef5
lea     edi, [esp+4ch+buffer]
mov     [esp+4ch+buffer], 0
mov     [esp+4ch+var_1b], 0
mov     [esp+4ch+var_17], 0
mov     [esp+4ch+var_13], 0
mov     [esp+4ch+var_11], 0
mov     [esp+4ch+hfile], ebx
call    sub_6320b600
lea     edx, [esp+4ch+numberofbyteswritten]
mov     ecx, esi
mov     [esp+4ch+lpnumberofbyteswritten], edx
mov     [esp+4ch+lpoverlapped], 0
mov     [esp+4ch+nnumberofbytestowrite], 0fh
mov     [esp+4ch+lpbuffer], edi
mov     eax, [ebx+2ch]
mov     byte ptr [esp+4ch+buffer], cl
mov     byte ptr [esp+4ch+buffer+1], 87h
mov     [esp+4ch+hfile], eax
call    ds:writefile
sub     esp, 14h
mov     [esp+4ch+hfile], ebx
call    sub_6320b610
cmp     [esp+4ch+numberofbyteswritten], 0fh
setz    al
mov     ebx, [esp+4ch+var_c]
mov     esi, [esp+4ch+var_8]
mov     edi, [esp+4ch+var_4]
add     esp, 4ch
retn
sub     esp, 1ch
mov     [esp+1ch+var_8], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_4], esi
movzx   esi, byte ptr [esp+1ch+arg_4]
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      short loc_63212f46
mov     [esp+1ch+var_18], 0ffh
mov     [esp+1ch+var_1c], ebx
call    sub_63212c00
mov     [esp+1ch+var_1c], ebx
call    sub_63212b70
test    al, al
jnz     short loc_63212f54
xor     eax, eax
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
add     esp, 1ch
retn
and     esi, 0ffh
mov     [esp+1ch+var_18], esi
mov     [esp+1ch+var_1c], ebx
call    sub_63212da0
test    al, al
jz      short loc_63212f46
call    sub_63212b30
mov     [esp+1ch+var_1c], eax
mov     [esp+1ch+var_18], edx
call    msleep
mov     [esp+1ch+var_1c], ebx
call    sub_63212b70
test    al, al
jz      short loc_63212f46
mov     [esp+1ch+arg_4], esi
mov     esi, [esp+1ch+var_4]
mov     [esp+1ch+arg_0], ebx
mov     ebx, [esp+1ch+var_8]
add     esp, 1ch
jmp     sub_63212e60
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
cmp     dword ptr [ebx+2ch], 0ffffffffh
jz      short loc_63212fd4
mov     [esp+1ch+var_18], 0ffh
mov     [esp+1ch+hobject], ebx
call    sub_63212f10
mov     eax, [ebx+2ch]
mov     [esp+1ch+hobject], eax
call    ds:closehandle
mov     dword ptr [ebx+2ch], 0ffffffffh
sub     esp, 4
add     esp, 18h
pop     ebx
retn
rep retn
mov     eax, 2710h
xor     edx, edx
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
lea     ecx, [ebx+20h]
mov     dword ptr [ebx+18h], 0
mov     dword ptr [ebx], 0
mov     dword ptr [ebx+1ch], 0
mov     dword ptr [ebx+4], 0
mov     dword ptr [ebx+8], 0
mov     dword ptr [ebx+0ch], 0
mov     dword ptr [ebx+10h], 0
mov     dword ptr [ebx+14h], 0
mov     [esp+1ch+var_1c], ecx
call    vlc_cond_init
lea     edx, [ebx+28h]
mov     [esp+1ch+var_1c], edx
call    vlc_mutex_init
lea     eax, [ebx+48h]
mov     [esp+1ch+var_1c], eax
call    vlc_mutex_init
mov     byte ptr [ebx+44h], 0
add     esp, 18h
pop     ebx
retn
add     dword ptr [esp+4], 48h
jmp     vlc_mutex_lock
add     dword ptr [esp+4], 48h
jmp     vlc_mutex_unlock
sub     esp, 1ch
mov     [esp+1ch+var_8], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_4], esi
lea     esi, [ebx+28h]
mov     [esp+1ch+var_1c], esi
call    vlc_mutex_lock
mov     byte ptr [ebx+44h], 1
add     ebx, 20h
mov     [esp+1ch+var_1c], ebx
call    vlc_cond_signal
mov     ebx, [esp+1ch+var_8]
mov     [esp+1ch+arg_0], esi
mov     esi, [esp+1ch+var_4]
add     esp, 1ch
jmp     vlc_mutex_unlock
rep retn
sub     esp, 1ch
mov     [esp+1ch+var_c], ebx
mov     [esp+1ch+var_8], esi
mov     esi, [esp+1ch+arg_0]
mov     [esp+1ch+var_4], edi
mov     edi, [esp+1ch+arg_4]
mov     [esp+1ch+size], 18h
call    sub_63222e50
mov     [eax], edi
mov     ebx, eax
mov     dword ptr [eax+10h], 0
lea     edi, [esi+48h]
call    mdate
mov     [ebx+8], eax
mov     [ebx+0ch], edx
mov     [esp+1ch+size], edi
call    vlc_mutex_lock
mov     eax, [esi+1ch]
test    eax, eax
jz      short loc_63213154
mov     edx, [esi+1ch]
mov     [edx+10h], ebx
mov     [esi+1ch], ebx
mov     [esp+1ch+size], edi
call    vlc_mutex_unlock
mov     ebx, [esp+1ch+var_c]
mov     [esp+1ch+arg_0], esi
mov     edi, [esp+1ch+var_4]
mov     esi, [esp+1ch+var_8]
add     esp, 1ch
jmp     sub_63213090
mov     [esi+1ch], ebx
mov     [esi+18h], ebx
jmp     short loc_63213134
sub     esp, 1ch
mov     [esp+1ch+var_c], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_8], esi
mov     [esp+1ch+var_4], edi
lea     esi, [ebx+48h]
mov     [esp+1ch+var_1c], esi
call    vlc_mutex_lock
mov     eax, [ebx+18h]
test    eax, eax
jz      short loc_632131d0
mov     edi, [ebx+18h]
mov     eax, [ebx+18h]
mov     ecx, [eax+10h]
mov     [ebx+18h], ecx
mov     edx, [ebx+18h]
test    edx, edx
jz      short loc_632131c0
mov     dword ptr [edi+10h], 0
mov     [esp+1ch+var_1c], esi
call    vlc_mutex_unlock
mov     eax, edi
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
mov     dword ptr [ebx+1ch], 0
jmp     short loc_63213198
xor     edi, edi
jmp     short loc_6321319f
push    ebx
xor     ebx, ebx
sub     esp, 18h
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], eax
call    sub_63213160
test    eax, eax
jz      short loc_63213200
mov     ebx, [eax]
mov     [esp+1ch+var_1c], eax
call    sub_63222db0
add     esp, 18h
mov     eax, ebx
pop     ebx
retn
push    edi
push    esi
push    ebx
sub     esp, 20h
mov     ebx, [esp+2ch+arg_0]
mov     esi, [esp+2ch+arg_4]
mov     eax, [ebx+4]
mov     [esp+2ch+var_20], offset askippedpackets
mov     [esp+2ch+var_24], offset aatmo_3
mov     [esp+2ch+var_28], 3
mov     [esp+2ch+var_1c], eax
mov     [esp+2ch+var_2c], esi
call    vlc_log
mov     edi, [ebx+4]
test    edi, edi
jle     short loc_6321328a
mov     ecx, [ebx+14h]
xor     edx, edx
mov     [esp+2ch+var_20], offset aaveragedelaydm
mov     [esp+2ch+var_24], offset aatmo_3
mov     [esp+2ch+var_28], 3
mov     eax, ecx
div     edi
mov     edi, 10624dd3h
mov     [esp+2ch+var_2c], esi
mov     ecx, eax
imul    edi
sar     ecx, 1fh
sar     edx, 6
sub     edx, ecx
mov     [esp+2ch+var_1c], edx
call    vlc_log
mov     edi, [ebx]
mov     [esp+2ch+var_20], offset awaitedpacketsd
mov     [esp+2ch+var_24], offset aatmo_3
mov     [esp+2ch+var_28], 3
mov     [esp+2ch+var_1c], edi
mov     [esp+2ch+var_2c], esi
call    vlc_log
mov     edi, [ebx]
test    edi, edi
jle     short loc_632132f4
mov     ecx, [ebx+10h]
xor     edx, edx
mov     [esp+2ch+var_20], offset aaveragewaitdms
mov     [esp+2ch+var_24], offset aatmo_3
mov     [esp+2ch+var_28], 3
mov     eax, ecx
div     edi
mov     edi, 10624dd3h
mov     [esp+2ch+var_2c], esi
mov     ecx, eax
imul    edi
sar     ecx, 1fh
sar     edx, 6
sub     edx, ecx
mov     [esp+2ch+var_1c], edx
call    vlc_log
mov     edi, [ebx+8]
mov     [esp+2ch+var_2c], esi
mov     [esp+2ch+var_20], offset ausedpacketsd
mov     [esp+2ch+var_24], offset aatmo_3
mov     [esp+2ch+var_1c], edi
mov     [esp+2ch+var_28], 3
call    vlc_log
mov     ebx, [ebx+0ch]
mov     [esp+2ch+var_2c], esi
mov     [esp+2ch+var_20], offset anullpacketsd
mov     [esp+2ch+var_24], offset aatmo_3
mov     [esp+2ch+var_1c], ebx
mov     [esp+2ch+var_28], 3
call    vlc_log
add     esp, 20h
pop     ebx
pop     esi
pop     edi
retn
sub     esp, 4ch
mov     [esp+4ch+var_10], ebx
mov     ecx, [esp+4ch+arg_4]
mov     ebx, [esp+4ch+arg_0]
mov     edx, [esp+4ch+arg_10]
movzx   eax, [esp+4ch+arg_c]
mov     [esp+4ch+var_4], ebp
mov     ebp, [esp+4ch+arg_14]
mov     [esp+4ch+var_8], edi
lea     edi, [ebx+48h]
mov     [esp+4ch+var_c], esi
mov     [esp+4ch+var_28], ecx
mov     [esp+4ch+var_20], edx
mov     [esp+4ch+var_21], al
mov     [esp+4ch+var_4c], edi
call    vlc_mutex_lock
mov     esi, [ebx+18h]
test    esi, esi
jz      loc_632134c0
mov     esi, [ebx+18h]
mov     ecx, [ebx+18h]
mov     esi, [esi+8]
mov     edx, [ecx+0ch]
mov     eax, [ecx+8]
sub     esi, [esp+4ch+var_28]
mov     [ebp+4], edx
mov     [ebp+0], eax
mov     [esp+4ch+var_4c], edi
call    vlc_mutex_unlock
cmp     esi, 752fh
jg      short loc_63213400
cmp     esi, 0ffff8ad1h
jl      loc_63213467
cmp     [esp+4ch+var_21], 0
jz      short loc_632133de
cmp     esi, 3a98h
jg      short loc_63213410
add     dword ptr [ebx+8], 1
mov     esi, [esp+4ch+var_c]
mov     [esp+4ch+arg_0], ebx
mov     edi, [esp+4ch+var_8]
mov     ebx, [esp+4ch+var_10]
mov     ebp, [esp+4ch+var_4]
add     esp, 4ch
jmp     sub_632131e0
cmp     [esp+4ch+var_21], 0
jz      loc_632134c8
nop
lea     esi, [esi+0]
mov     eax, esi
mov     edi, 10624dd3h
mov     ebp, [esp+4ch+var_20]
imul    edi
mov     ecx, esi
sar     ecx, 1fh
mov     edi, esi
sar     edi, 1fh
mov     [esp+4ch+var_40], offset agetnextpackets
sar     edx, 6
sub     edx, ecx
mov     [esp+4ch+var_3c], edx
mov     [esp+4ch+var_44], offset aatmo_3
mov     [esp+4ch+var_48], 3
mov     [esp+4ch+var_4c], ebp
call    vlc_log
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], edi
call    msleep
add     [ebx+10h], esi
add     dword ptr [ebx], 1
jmp     loc_632133de
mov     eax, 10624dd3h
imul    esi
mov     eax, esi
sar     eax, 1fh
mov     [esp+4ch+var_40], offset agetnextpackets_0
mov     [esp+4ch+var_44], offset aatmo_3
sar     edx, 6
sub     edx, eax
mov     [esp+4ch+var_3c], edx
mov     edx, [esp+4ch+var_20]
mov     [esp+4ch+var_48], 3
mov     [esp+4ch+var_4c], edx
call    vlc_log
mov     [esp+4ch+var_4c], ebx
call    sub_632131e0
mov     [esp+4ch+var_4c], eax
call    sub_63222db0
add     dword ptr [ebx+4], 1
sub     [ebx+14h], esi
jmp     loc_63213387
mov     [esp+4ch+var_4c], edi
call    vlc_mutex_unlock
add     dword ptr [ebx+0ch], 1
xor     eax, eax
mov     ebx, [esp+4ch+var_10]
mov     esi, [esp+4ch+var_c]
mov     edi, [esp+4ch+var_8]
mov     ebp, [esp+4ch+var_4]
add     esp, 4ch
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 2ch
mov     ebp, [esp+3ch+arg_0]
call    mdate
imul    ecx, [esp+3ch+arg_4], 3e8h
lea     ebx, [ebp+28h]
mov     [esp+3ch+var_3c], ebx
mov     esi, eax
mov     edi, edx
xor     edx, edx
add     esi, ecx
adc     edi, edx
call    vlc_mutex_lock
lea     eax, [ebp+20h]
mov     byte ptr [ebp+44h], 0
mov     [esp+3ch+var_20], eax
mov     edx, [esp+3ch+var_20]
mov     [esp+3ch+var_34], esi
mov     [esp+3ch+var_30], edi
mov     [esp+3ch+var_38], ebx
mov     [esp+3ch+var_3c], edx
call    vlc_cond_timedwait
test    eax, eax
jnz     short loc_6321354d
call    mdate
cmp     edi, edx
jge     short loc_63213561
mov     [esp+3ch+var_3c], ebx
call    vlc_mutex_unlock
movzx   eax, byte ptr [ebp+44h]
add     esp, 2ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
jg      short loc_63213567
cmp     esi, eax
jbe     short loc_6321354d
movzx   eax, byte ptr [ebp+44h]
test    al, al
lea     esi, [esi+0]
jz      short loc_63213528
jmp     short loc_6321354d
push    edi
push    esi
push    ebx
sub     esp, 10h
mov     ebx, [esp+1ch+arg_0]
lea     edi, [ebx+48h]
mov     [esp+1ch+var_1c], edi
call    vlc_mutex_lock
mov     eax, [ebx+18h]
test    eax, eax
jz      short loc_632135c8
lea     esi, [esi+0]
mov     esi, [ebx+18h]
mov     edx, [ebx+18h]
mov     esi, [esi+10h]
mov     eax, [edx]
mov     [esp+1ch+var_1c], eax
call    sub_63222db0
mov     ecx, [ebx+18h]
mov     [esp+1ch+var_1c], ecx
call    sub_63222db0
mov     [ebx+18h], esi
mov     edx, [ebx+18h]
test    edx, edx
jnz     short loc_632135a0
mov     dword ptr [ebx+1ch], 0
mov     dword ptr [ebx], 0
mov     dword ptr [ebx+4], 0
mov     dword ptr [ebx+8], 0
mov     dword ptr [ebx+10h], 0
mov     dword ptr [ebx+14h], 0
mov     dword ptr [ebx+0ch], 0
mov     [esp+1ch+arg_0], edi
add     esp, 10h
pop     ebx
pop     esi
pop     edi
jmp     vlc_mutex_unlock
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_63213580
lea     eax, [ebx+20h]
add     ebx, 48h
mov     [esp+1ch+var_1c], eax
call    vlc_cond_destroy
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     vlc_mutex_destroy
sub     esp, 1ch
mov     [esp+1ch+var_4], esi
mov     esi, [esp+1ch+arg_0]
mov     [esp+1ch+var_8], ebx
mov     ebx, [esi]
test    ebx, ebx
jz      short loc_63213751
mov     eax, [esp+1ch+arg_4]
mov     [esp+1ch+str], ebx
mov     [esp+1ch+control], eax
call    strpbrk
test    eax, eax
jz      short loc_63213760
mov     byte ptr [eax], 0
add     eax, 1
mov     [esi], eax
mov     eax, ebx
mov     esi, [esp+1ch+var_4]
mov     ebx, [esp+1ch+var_8]
add     esp, 1ch
retn
mov     dword ptr [esi], 0
jmp     short loc_63213751
sub     esp, 1ch
mov     edx, [esp+1ch+arg_4]
lea     ecx, [esp+1ch+arg_8]
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+var_14], ecx
mov     [esp+1ch+var_18], edx
mov     [esp+1ch+var_1c], eax
call    sub_632137a0
add     esp, 1ch
retn
sub     esp, 2ch
mov     [esp+2ch+var_8], edi
mov     edi, [esp+2ch+arg_4]
mov     [esp+2ch+var_4], ebp
mov     ebp, [esp+2ch+arg_8]
mov     [esp+2ch+var_10], ebx
mov     [esp+2ch+var_c], esi
mov     [esp+2ch+var_24], edi
mov     [esp+2ch+var_20], ebp
mov     [esp+2ch+var_28], 0
mov     [esp+2ch+size], 0
call    sub_6321c770
mov     ebx, eax
lea     eax, [eax+1]
mov     [esp+2ch+size], eax
call    malloc
test    eax, eax
mov     esi, eax
jz      short loc_63213836
mov     [esp+2ch+var_24], ebp
mov     [esp+2ch+var_28], edi
mov     [esp+2ch+size], eax
call    sub_6321be60
cmp     ebx, eax
jz      short loc_6321381a
mov     [esp+2ch+var_24], 2eh
mov     [esp+2ch+var_28], offset aextraspackagew_1
mov     [esp+2ch+size], offset asc_6322c792
call    sub_6321bea0
mov     edx, [esp+2ch+arg_0]
mov     eax, ebx
mov     ebx, [esp+2ch+var_10]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
mov     [edx], esi
mov     esi, [esp+2ch+var_c]
add     esp, 2ch
retn
mov     esi, 41414141h
mov     ebx, 0ffffffffh
jmp     short loc_6321381a
sub     esp, 0ch
cmp     edx, 42h
mov     [esp+0ch+var_c], ebx
mov     ebx, eax
mov     [esp+0ch+var_4], edi
mov     edi, [esp+0ch+arg_0]
mov     [esp+0ch+var_8], esi
jbe     short loc_63213880
xor     eax, eax
mov     ebx, [esp+0ch+var_c]
mov     esi, [esp+0ch+var_8]
mov     edi, [esp+0ch+var_4]
add     esp, 0ch
retn
jmp     ds:jpt_63213880[edx*4]
test    edi, edi
jz      short def_63213880
mov     esi, [ebx+14h]
xor     eax, eax
cmp     esi, [ebx+18h]
jge     short loc_6321386b
lea     eax, [esi+esi*2]
add     esi, 1
shl     eax, 2
add     eax, [ebx+10h]
mov     [ebx+14h], esi
test    eax, eax
jz      short loc_6321386b
mov     [eax+4], ecx
mov     [eax+8], edi
mov     ebx, [esp+0ch+var_c]
mov     [eax], edx
mov     esi, [esp+0ch+var_8]
mov     edi, [esp+0ch+var_4]
add     esp, 0ch
retn
test    edi, edi
jz      short def_63213880
test    ecx, ecx
jz      short def_63213880
mov     esi, [ebx+14h]
xor     eax, eax
cmp     esi, [ebx+18h]
jge     short loc_6321386b
jmp     short loc_63213895
sub     esp, 8
mov     [esp+8+var_4], esi
mov     esi, [eax+14h]
cmp     esi, [eax+18h]
mov     [esp+8+var_8], ebx
mov     ebx, eax
jge     short loc_63213907
lea     eax, [esi+esi*2]
add     esi, 1
shl     eax, 2
add     eax, [ebx+10h]
mov     [ebx+14h], esi
test    eax, eax
jnz     short loc_63213914
xor     eax, eax
mov     ebx, [esp+8+var_8]
mov     esi, [esp+8+var_4]
add     esp, 8
retn
test    edx, edx
jz      short loc_63213907
test    ecx, ecx
jz      short loc_63213907
mov     [eax+4], edx
mov     [eax+8], ecx
mov     ebx, [esp+8+var_8]
mov     dword ptr [eax], 0
mov     esi, [esp+8+var_4]
add     esp, 8
retn
push    edi
mov     edi, ecx
push    esi
mov     esi, edx
push    ebx
mov     ebx, eax
sub     esp, 4
mov     eax, [eax+0ch]
movzx   eax, byte ptr [eax]
jmp     short loc_6321398e
test    dl, dl
jnz     short loc_6321399a
cmp     al, 4bh
jnz     short loc_632139ca
add     dword ptr [ebx+0ch], 1
cmp     edi, 1
sbb     edx, edx
add     dword ptr [ebx+30h], 6
and     edx, 0fffffffdh
add     edx, 1ch
xor     ecx, ecx
mov     eax, ebx
mov     [esp+10h+var_10], 0
call    sub_63213850
test    eax, eax
mov     [esi], eax
jz      short loc_632139c8
lea     esi, [eax+4]
mov     eax, [ebx+0ch]
movzx   eax, byte ptr [eax]
cmp     al, 72h
setz    dl
cmp     al, 56h
setz    cl
jnz     short loc_63213954
add     dword ptr [ebx+0ch], 1
test    dl, dl
jz      short loc_632139b3
cmp     edi, 1
sbb     edx, edx
and     edx, 0fffffffdh
add     edx, 1ah
add     dword ptr [ebx+30h], 9
jmp     short loc_6321396f
test    cl, cl
jz      short loc_63213960
cmp     edi, 1
sbb     edx, edx
and     edx, 0fffffffdh
add     edx, 1bh
add     dword ptr [ebx+30h], 9
jmp     short loc_6321396f
xor     esi, esi
add     esp, 4
mov     eax, esi
pop     ebx
pop     esi
pop     edi
retn
push    ebp
mov     ecx, eax
push    edi
mov     edi, edx
push    esi
push    ebx
mov     ebx, [eax+0ch]
xor     eax, eax
cmp     byte ptr [ebx], 53h
jz      short loc_632139f7
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
lea     eax, [ebx+1]
mov     [ecx+0ch], eax
movzx   eax, byte ptr [ebx+1]
test    al, al
jz      loc_63213aa0
add     ebx, 2
mov     [ecx+0ch], ebx
lea     ebx, [eax-30h]
cmp     bl, 9
ja      short loc_63213a8d
xor     ebx, ebx
xor     edx, edx
cmp     al, 5fh
jz      short loc_63213a73
lea     edx, [eax-30h]
cmp     dl, 9
ja      short loc_63213a57
lea     edx, [ebx+ebx*8]
movsx   eax, al
lea     edx, [eax+edx*4-30h]
cmp     ebx, edx
ja      loc_63213ac7
mov     ebx, [ecx+0ch]
movzx   eax, byte ptr [ebx]
test    al, al
jz      short loc_63213a4d
add     ebx, 1
cmp     al, 5fh
mov     [ecx+0ch], ebx
jz      short loc_63213a70
mov     ebx, edx
lea     edx, [eax-30h]
cmp     dl, 9
jbe     short loc_63213a27
lea     edx, [eax-41h]
cmp     dl, 19h
ja      short loc_63213ac7
lea     edx, [ebx+ebx*8]
movsx   eax, al
lea     edx, [eax+edx*4-37h]
jmp     short loc_63213a31
add     edx, 1
xor     eax, eax
cmp     edx, [ecx+20h]
jnb     loc_632139f2
mov     eax, [ecx+1ch]
add     dword ptr [ecx+28h], 1
pop     ebx
pop     esi
mov     eax, [eax+edx*4]
pop     edi
pop     ebp
retn
cmp     al, 5fh
jz      short loc_63213a17
lea     esi, [eax-41h]
xor     ebx, ebx
mov     edx, esi
cmp     dl, 19h
jbe     short loc_63213a1f
lea     esi, [esi+0]
xor     ebx, ebx
test    byte ptr [ecx+8], 8
setnz   bl
test    edi, edi
jnz     short loc_63213ad0
cmp     al, 74h
mov     edx, offset at
jnz     short loc_63213abc
jmp     short loc_63213ae7
cmp     al, [edx]
jz      short loc_63213ae7
add     edx, 1ch
cmp     edx, offset dword_6322d924
jb      short loc_63213ab8
pop     ebx
xor     eax, eax
pop     esi
pop     edi
pop     ebp
retn
test    ebx, ebx
jnz     short loc_63213aad
mov     edx, [ecx+0ch]
xor     ebx, ebx
movzx   edx, byte ptr [edx]
sub     edx, 43h
cmp     dl, 1
setbe   bl
jmp     short loc_63213aad
mov     edi, [edx+14h]
test    edi, edi
jz      short loc_63213b5d
mov     esi, [ecx+14h]
xor     eax, eax
cmp     esi, [ecx+18h]
mov     ebp, [edx+18h]
jge     short loc_63213b1a
lea     eax, [esi+esi*2]
add     esi, 1
shl     eax, 2
add     eax, [ecx+10h]
mov     [ecx+14h], esi
test    eax, eax
jz      short loc_63213b1a
mov     dword ptr [eax], 16h
mov     [eax+4], edi
mov     [eax+8], ebp
mov     [ecx+2ch], eax
test    ebx, ebx
jz      short loc_63213b62
mov     ebx, [edx+0ch]
mov     edx, [edx+10h]
add     [ecx+30h], edx
xor     eax, eax
cmp     esi, [ecx+18h]
jge     loc_632139f2
mov     edi, [ecx+10h]
lea     eax, [esi+esi*2]
add     esi, 1
mov     [ecx+14h], esi
lea     eax, [edi+eax*4]
test    eax, eax
jz      loc_632139f2
mov     dword ptr [eax], 16h
mov     [eax+4], ebx
mov     [eax+8], edx
jmp     loc_632139f2
mov     esi, [ecx+14h]
jmp     short loc_63213b1d
mov     ebx, [edx+4]
mov     edx, [edx+8]
jmp     short loc_63213b27
push    ebx
mov     ebx, edx
sub     esp, 28h
mov     ecx, [eax+104h]
cmp     ecx, 0ffh
lea     edx, [ecx+1]
jz      short loc_63213ba0
mov     [eax+ecx+4], bl
mov     [eax+104h], edx
mov     [eax+108h], bl
add     esp, 28h
pop     ebx
retn
mov     edx, [eax+110h]
mov     byte ptr [eax+103h], 0
mov     [esp+2ch+var_10], eax
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], edx
lea     edx, [eax+4]
mov     [esp+2ch+var_2c], edx
call    dword ptr [eax+10ch]
mov     eax, [esp+2ch+var_10]
mov     edx, 1
xor     ecx, ecx
add     dword ptr [eax+124h], 1
jmp     short loc_63213b87
push    esi
mov     esi, eax
push    ebx
xor     eax, eax
sub     esp, 4
test    edx, edx
mov     ebx, edx
jz      short loc_63213c12
cmp     dword ptr [ebx], 41h
jbe     short loc_63213c18
mov     edx, [ebx+4]
mov     eax, esi
call    sub_63213be0
test    eax, eax
jnz     short loc_63213c12
mov     ebx, [ebx+8]
test    ebx, ebx
jnz     short loc_63213bef
lea     esi, [esi+0]
xor     eax, eax
add     esp, 4
pop     ebx
pop     esi
retn
mov     eax, [ebx]
jmp     ds:jpt_63213c1a[eax*4]
mov     eax, [esi+114h]
test    eax, eax
jz      short loc_63213c88
mov     eax, [eax+4]
mov     ecx, [ebx+4]
mov     edx, [eax+8]
test    edx, edx
jz      short loc_63213c5c
xor     eax, eax
cmp     dword ptr [edx], 2bh
jnz     short loc_63213c12
test    ecx, ecx
jg      short loc_63213c52
jmp     short loc_63213c97
cmp     dword ptr [edx], 2bh
jnz     short loc_63213c10
test    ecx, ecx
lea     esi, [esi+0]
jz      short loc_63213c70
mov     edx, [edx+8]
sub     ecx, 1
test    edx, edx
jnz     short loc_63213c45
mov     eax, 1
test    ecx, ecx
jnz     short loc_63213c10
test    al, al
jnz     short loc_63213c10
lea     esi, [esi+0]
mov     eax, [edx+4]
test    eax, eax
jz      short loc_63213c12
cmp     dword ptr [eax], 2bh
mov     edx, 0
cmovnz  eax, edx
add     esp, 4
pop     ebx
pop     esi
retn
mov     dword ptr [esi+11ch], 1
jmp     loc_63213c12
xor     eax, eax
jmp     short loc_63213c61
push    edi
xor     edi, edi
push    esi
mov     esi, eax
push    ebx
mov     eax, [eax]
movzx   ebx, byte ptr [eax]
cmp     bl, 6eh
jz      short loc_63213ce8
lea     eax, [ebx-30h]
cmp     al, 9
ja      short loc_63213cf7
mov     edx, [esi]
xor     ecx, ecx
lea     esi, [esi+0]
add     edx, 1
movsx   ebx, bl
lea     eax, [ecx+ecx*4]
lea     ecx, [ebx+eax*2-30h]
mov     [esi], edx
movzx   ebx, byte ptr [edx]
lea     eax, [ebx-30h]
cmp     al, 9
jbe     short loc_63213cc0
mov     eax, ecx
neg     eax
test    edi, edi
cmovnz  ecx, eax
pop     ebx
mov     eax, ecx
pop     esi
pop     edi
retn
lea     edx, [eax+1]
mov     di, 1
mov     [esi], edx
movzx   ebx, byte ptr [eax+1]
jmp     short loc_63213cb1
xor     ecx, ecx
jmp     short loc_63213cd9
sub     esp, 8
mov     edx, [eax+0ch]
mov     [esp+8+var_8], ebx
mov     ebx, eax
mov     [esp+8+var_4], esi
movzx   eax, byte ptr [edx]
cmp     al, 5fh
jz      short loc_63213d40
cmp     al, 6eh
mov     esi, 0ffffffffh
jz      short loc_63213d2f
lea     eax, [ebx+0ch]
call    sub_63213ca0
mov     edx, [ebx+0ch]
cmp     byte ptr [edx], 5fh
jz      short loc_63213d55
mov     eax, esi
mov     ebx, [esp+8+var_8]
mov     esi, [esp+8+var_4]
add     esp, 8
retn
xor     esi, esi
add     edx, 1
mov     eax, esi
mov     esi, [esp+8+var_4]
mov     [ebx+0ch], edx
mov     ebx, [esp+8+var_8]
add     esp, 8
retn
lea     esi, [eax+1]
jmp     short loc_63213d42
sub     esp, 8
mov     [esp+8+var_8], ebx
mov     ebx, eax
mov     eax, [eax+0ch]
mov     [esp+8+var_4], esi
xor     esi, esi
cmp     byte ptr [eax], 54h
jz      short loc_63213d83
mov     eax, esi
mov     ebx, [esp+8+var_8]
mov     esi, [esp+8+var_4]
add     esp, 8
retn
add     eax, 1
mov     [ebx+0ch], eax
mov     eax, ebx
call    sub_63213d00
test    eax, eax
js      short loc_63213d76
mov     edx, [ebx+14h]
add     dword ptr [ebx+28h], 1
cmp     edx, [ebx+18h]
jge     short loc_63213d76
mov     ecx, [ebx+10h]
lea     esi, [edx+edx*2]
add     edx, 1
mov     [ebx+14h], edx
lea     esi, [ecx+esi*4]
test    esi, esi
jz      short loc_63213d76
mov     [esi+4], eax
mov     eax, esi
mov     ebx, [esp+8+var_8]
mov     dword ptr [esi], 5
mov     esi, [esp+8+var_4]
add     esp, 8
retn
sub     esp, 1ch
mov     [esp+1ch+var_c], ebx
mov     ebx, eax
lea     eax, [eax+0ch]
mov     [esp+1ch+var_4], edi
mov     [esp+1ch+var_8], esi
call    sub_63213ca0
mov     edi, eax
xor     eax, eax
test    edi, edi
jle     short loc_63213e38
mov     esi, [ebx+0ch]
mov     edx, [ebx+4]
sub     edx, esi
cmp     edi, edx
jg      short loc_63213e35
test    byte ptr [ebx+8], 4
lea     eax, [esi+edi]
mov     [ebx+0ch], eax
jnz     short loc_63213e48
cmp     edi, 9
jle     short loc_63213e2a
mov     [esp+1ch+size], 8
mov     [esp+1ch+buf2], offset aglobal
mov     [esp+1ch+buf1], esi
call    memcmp
test    eax, eax
jz      short loc_63213e55
mov     ecx, edi
mov     edx, esi
mov     eax, ebx
call    sub_632138e0
mov     [ebx+2ch], eax
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
cmp     byte ptr [eax], 24h
jnz     short loc_63213e09
add     eax, 1
mov     [ebx+0ch], eax
jmp     short loc_63213e09
movzx   eax, byte ptr [esi+8]
cmp     al, 5fh
jz      short loc_63213e65
cmp     al, 2eh
jz      short loc_63213e65
cmp     al, 24h
jnz     short loc_63213e2a
cmp     byte ptr [esi+9], 4eh
jnz     short loc_63213e2a
mov     eax, [ebx+30h]
mov     ecx, 15h
mov     edx, offset aanonymousnames
add     eax, 16h
sub     eax, edi
mov     [ebx+30h], eax
mov     eax, ebx
call    sub_632138e0
jmp     short loc_63213e35
sub     esp, 0ch
test    edx, edx
mov     [esp+0ch+var_c], ebx
mov     ebx, eax
mov     [esp+0ch+var_8], esi
mov     [esp+0ch+var_4], edi
jnz     short loc_63213eb9
mov     eax, [eax+0ch]
xor     esi, esi
movzx   edx, byte ptr [eax]
test    dl, dl
jz      short loc_63213ec5
add     eax, 1
movsx   edx, dl
mov     [ebx+0ch], eax
cmp     edx, 68h
jz      short loc_63213ef7
xor     esi, esi
cmp     edx, 76h
jz      short loc_63213ed6
mov     eax, esi
mov     ebx, [esp+0ch+var_c]
mov     esi, [esp+0ch+var_8]
mov     edi, [esp+0ch+var_4]
add     esp, 0ch
retn
lea     edi, [ebx+0ch]
mov     eax, edi
call    sub_63213ca0
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 5fh
jnz     short loc_63213ec5
add     eax, 1
mov     [ebx+0ch], eax
mov     eax, edi
call    sub_63213ca0
jmp     short loc_63213eff
lea     eax, [ebx+0ch]
call    sub_63213ca0
mov     eax, [ebx+0ch]
xor     esi, esi
cmp     byte ptr [eax], 5fh
jnz     short loc_63213ec5
add     eax, 1
mov     si, 1
mov     [ebx+0ch], eax
jmp     short loc_63213ec5
mov     ecx, eax
xor     eax, eax
test    edx, edx
push    ebx
jz      short loc_63213f42
mov     ebx, [ecx+20h]
cmp     ebx, [ecx+24h]
jge     short loc_63213f42
mov     eax, [ecx+1ch]
mov     [eax+ebx*4], edx
add     ebx, 1
mov     eax, 1
mov     [ecx+20h], ebx
pop     ebx
retn
sub     esp, 1ch
mov     [esp+1ch+var_8], esi
mov     esi, [esp+1ch+arg_8]
mov     [esp+1ch+var_4], edi
mov     edi, [esp+1ch+arg_4]
mov     [esp+1ch+var_c], ebx
mov     eax, [esi+4]
mov     ebx, [esi+8]
lea     eax, [edi+eax+1]
cmp     eax, ebx
ja      short loc_63213fc6
mov     ebx, [esi+0ch]
test    ebx, ebx
jz      short loc_63213f90
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
mov     eax, [esi]
mov     edx, [esp+1ch+arg_0]
add     eax, [esi+4]
mov     [esp+1ch+size], edi
mov     [esp+1ch+src], edx
mov     [esp+1ch+block], eax
call    memcpy
mov     eax, [esi]
add     eax, edi
add     eax, [esi+4]
mov     byte ptr [eax], 0
mov     ebx, [esp+1ch+var_c]
add     [esi+4], edi
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
mov     edx, [esi+0ch]
test    edx, edx
jnz     short loc_63213f7c
test    ebx, ebx
jnz     short loc_63213fd8
cmp     eax, 2
mov     bl, 2
jbe     short loc_63213fde
add     ebx, ebx
cmp     eax, ebx
ja      short loc_63213fd8
mov     [esp+1ch+src], ebx
mov     eax, [esi]
mov     [esp+1ch+block], eax
call    realloc
test    eax, eax
jz      short loc_63213ffa
mov     [esi], eax
mov     [esi+8], ebx
jmp     loc_63213f75
mov     eax, [esi]
mov     [esp+1ch+block], eax
call    free
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 1
jmp     loc_63213f7c
sub     esp, 4ch
mov     ecx, [eax+0ch]
mov     [esp+4ch+var_10], ebx
mov     ebx, eax
mov     [esp+4ch+var_c], esi
mov     [esp+4ch+var_8], edi
mov     [esp+4ch+var_4], ebp
movzx   eax, byte ptr [ecx]
cmp     al, 56h
jz      short loc_63214070
cmp     al, 72h
jz      short loc_63214070
cmp     al, 4bh
jz      short loc_63214070
lea     edx, [eax-30h]
cmp     dl, 4ah
jbe     short loc_63214063
xor     edi, edi
jmp     short loc_632140a4
movzx   edx, dl
jmp     ds:jpt_63214066[edx*4]
xor     ecx, ecx
mov     eax, ebx
lea     edx, [esp+4ch+var_24]
xor     edi, edi
call    sub_63213940
test    eax, eax
mov     esi, eax
jz      short loc_632140a4
mov     eax, ebx
call    sub_63214030
test    eax, eax
mov     [esi], eax
jz      short loc_632140a4
mov     edx, [esp+4ch+var_24]
mov     eax, ebx
call    sub_63213f20
test    eax, eax
cmovnz  edi, [esp+4ch+var_24]
mov     eax, edi
mov     ebx, [esp+4ch+var_10]
mov     esi, [esp+4ch+var_c]
mov     edi, [esp+4ch+var_8]
mov     ebp, [esp+4ch+var_4]
add     esp, 4ch
retn
mov     eax, ebx
call    sub_63214e90
mov     edi, eax
mov     [esp+4ch+var_24], eax
lea     esi, [esi+0]
mov     edx, edi
mov     eax, ebx
call    sub_63213f20
xor     edi, edi
test    eax, eax
cmovnz  edi, [esp+4ch+var_24]
jmp     short loc_632140a4
add     ecx, 1
mov     eax, ebx
mov     [ebx+0ch], ecx
call    sub_63214030
mov     edx, 21h
mov     [esp+4ch+var_4c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
mov     [esp+4ch+var_24], eax
jmp     short loc_632140d0
lea     eax, [ecx+1]
xor     edi, edi
mov     [ebx+0ch], eax
movzx   eax, byte ptr [ecx+1]
test    al, al
jz      short loc_632140a4
sub     eax, 46h
lea     edx, [ecx+2]
cmp     al, 30h
mov     [ebx+0ch], edx
ja      def_63214066
movzx   eax, al
jmp     ds:jpt_63214134[eax*4]
add     ecx, 1
mov     eax, ebx
mov     [ebx+0ch], ecx
call    sub_63214030
mov     edx, 22h
mov     [esp+4ch+var_4c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
mov     [esp+4ch+var_24], eax
jmp     loc_632140d0
add     ecx, 1
mov     eax, ebx
mov     [ebx+0ch], ecx
call    sub_63214030
mov     edx, 20h
mov     [esp+4ch+var_4c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
mov     [esp+4ch+var_24], eax
jmp     loc_632140d0
add     ecx, 1
mov     eax, ebx
mov     [ebx+0ch], ecx
call    sub_63214030
mov     edx, 1eh
mov     [esp+4ch+var_4c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
mov     [esp+4ch+var_24], eax
jmp     loc_632140d0
add     ecx, 1
mov     eax, ebx
mov     [ebx+0ch], ecx
call    sub_63214030
mov     edx, 1fh
mov     [esp+4ch+var_4c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
mov     [esp+4ch+var_24], eax
jmp     loc_632140d0
movzx   eax, byte ptr [ecx+1]
lea     edx, [eax-30h]
cmp     dl, 9
jbe     short loc_6321421b
cmp     al, 5fh
jz      short loc_6321421b
sub     eax, 41h
cmp     al, 19h
ja      loc_632147a3
xor     edx, edx
mov     eax, ebx
call    sub_632139e0
mov     [esp+4ch+var_24], eax
mov     edi, eax
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 49h
jnz     loc_632140a4
mov     eax, ebx
call    sub_63214da0
mov     ecx, [esp+4ch+var_24]
mov     edx, 4
mov     [esp+4ch+var_4c], eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
mov     [esp+4ch+var_24], eax
jmp     loc_632140d0
mov     eax, ebx
call    sub_63213d60
mov     [esp+4ch+var_24], eax
mov     edi, eax
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 49h
jnz     loc_632140d0
mov     edx, edi
mov     eax, ebx
call    sub_63213f20
xor     edi, edi
test    eax, eax
jnz     short loc_63214236
jmp     loc_632140a4
add     ecx, 1
mov     eax, ebx
mov     [ebx+0ch], ecx
call    sub_63213dd0
mov     esi, eax
mov     [esp+4ch+var_24], eax
mov     eax, ebx
call    sub_63214030
mov     edx, 1dh
mov     [esp+4ch+var_4c], esi
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
mov     [esp+4ch+var_24], edi
jmp     loc_632140d0
movsx   eax, al
lea     eax, [eax+eax*4]
lea     eax, off_6322ccac[eax*4]
test    eax, eax
jz      loc_632147e0
mov     edx, [ebx+14h]
cmp     edx, [ebx+18h]
jl      loc_63214771
mov     eax, large ds:4
xor     edi, edi
mov     eax, [eax+4]
add     [ebx+30h], eax
add     dword ptr [ebx+0ch], 1
jmp     loc_632140a4
add     ecx, 1
mov     eax, ebx
mov     [ebx+0ch], ecx
call    sub_63213dd0
mov     edx, 24h
mov     [esp+4ch+var_4c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
mov     [esp+4ch+var_24], eax
jmp     loc_632140d0
lea     eax, [ecx+1]
mov     [ebx+0ch], eax
cmp     byte ptr [ecx+1], 59h
jnz     short loc_63214342
add     ecx, 2
mov     [ebx+0ch], ecx
mov     edx, 1
mov     eax, ebx
call    sub_632148f0
mov     edi, eax
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 45h
jz      loc_6321445f
xor     edi, edi
jmp     loc_632142bd
add     ecx, 1
mov     eax, ebx
mov     [ebx+0ch], ecx
lea     esi, [esp+4ch+var_20]
xor     edi, edi
call    sub_63214030
mov     edx, esi
mov     ecx, 1
mov     ebp, eax
mov     eax, ebx
call    sub_63213940
test    eax, eax
mov     edx, eax
jz      loc_632142bd
mov     eax, ebx
mov     [esp+4ch+var_30], edx
call    sub_63214030
mov     edx, [esp+4ch+var_30]
test    eax, eax
mov     [edx], eax
jz      loc_632142bd
cmp     edx, esi
jz      short loc_632143c5
cmp     dword ptr [eax], 25h
jz      short loc_632143c5
mov     edx, [esp+4ch+var_20]
mov     eax, ebx
call    sub_63213f20
test    eax, eax
jz      loc_632142bd
mov     eax, [esp+4ch+var_20]
mov     ecx, ebp
mov     edx, 27h
mov     [esp+4ch+var_4c], eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
jmp     loc_632142bd
lea     ebp, [ecx+1]
mov     [ebx+0ch], ebp
movzx   eax, byte ptr [ecx+1]
cmp     al, 5fh
jz      loc_632147ea
sub     eax, 30h
cmp     al, 9
ja      loc_632147c6
lea     eax, [ecx+2]
mov     ecx, eax
mov     [ebx+0ch], eax
movzx   esi, byte ptr [ecx]
add     eax, 1
sub     esi, 30h
mov     edx, esi
cmp     dl, 9
jbe     short loc_63214401
sub     ecx, ebp
mov     edx, ebp
mov     eax, ebx
call    sub_632138e0
test    eax, eax
mov     esi, eax
jz      loc_6321435c
mov     ebp, [ebx+0ch]
xor     edi, edi
cmp     byte ptr [ebp+0], 5fh
jnz     loc_632142bd
lea     edx, [ebp+1]
mov     eax, ebx
mov     [ebx+0ch], edx
call    sub_63214030
mov     ecx, esi
mov     edx, 26h
mov     [esp+4ch+var_4c], eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
jmp     loc_632142bd
add     eax, 1
mov     [ebx+0ch], eax
jmp     loc_632142bd
cmp     byte ptr [ecx+2], 5fh
jz      loc_63214802
mov     eax, [ebx+14h]
xor     edi, edi
cmp     eax, [ebx+18h]
jge     loc_632140a4
mov     ebp, [ebx+10h]
lea     esi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     esi, [ebp+esi*4+0]
test    esi, esi
jz      loc_632140a4
mov     dword ptr [esi], 3ah
lea     eax, [ebx+0ch]
call    sub_63213ca0
mov     [esi+4], eax
mov     eax, [ebx+0ch]
xor     edi, edi
cmp     byte ptr [eax], 5fh
jnz     loc_632140a4
add     eax, 1
mov     [ebx+0ch], eax
mov     eax, ebx
call    sub_63214030
mov     ecx, esi
mov     edx, 29h
mov     [esp+4ch+var_4c], eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
jmp     loc_632140a4
mov     eax, [ebx+14h]
cmp     eax, [ebx+18h]
jge     loc_63214797
mov     esi, [ebx+10h]
lea     edi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     edi, [esi+edi*4]
test    edi, edi
jz      loc_63214820
mov     dword ptr [edi], 23h
mov     eax, offset off_6322d698
mov     dword ptr [edi+4], offset off_6322d698
mov     eax, [eax+4]
add     [ebx+30h], eax
jmp     loc_632140a4
mov     eax, ebx
call    sub_63214030
mov     edx, 41h
mov     [esp+4ch+var_4c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     edi, eax
jmp     loc_632140a4
mov     eax, [ebx+14h]
cmp     eax, [ebx+18h]
jge     loc_63214797
mov     ecx, [ebx+10h]
lea     edi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     edi, [ecx+edi*4]
test    edi, edi
jz      loc_63214820
mov     dword ptr [edi], 23h
mov     eax, offset off_6322d6c0
mov     dword ptr [edi+4], offset off_6322d6c0
jmp     short loc_63214513
mov     eax, [ebx+14h]
cmp     eax, [ebx+18h]
jge     loc_63214797
mov     ecx, [ebx+10h]
lea     edi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     edi, [ecx+edi*4]
test    edi, edi
jz      loc_63214820
mov     dword ptr [edi], 23h
mov     eax, offset off_6322d6ac
mov     dword ptr [edi+4], offset off_6322d6ac
jmp     loc_63214513
mov     eax, [ebx+14h]
cmp     eax, [ebx+18h]
jge     loc_63214797
mov     ebp, [ebx+10h]
lea     edi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     edi, [ebp+edi*4+0]
test    edi, edi
jz      loc_63214820
mov     dword ptr [edi], 23h
mov     eax, offset off_6322d684
mov     dword ptr [edi+4], offset off_6322d684
jmp     loc_63214513
mov     eax, [ebx+14h]
cmp     eax, [ebx+18h]
jge     loc_63214797
mov     esi, [ebx+10h]
lea     edi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     edi, [esi+edi*4]
test    edi, edi
jz      loc_63214820
mov     dword ptr [edi], 23h
mov     eax, offset off_6322d648
mov     dword ptr [edi+4], offset off_6322d648
jmp     loc_63214513
mov     eax, [ebx+14h]
cmp     eax, [ebx+18h]
jge     loc_63214797
mov     edx, [ebx+10h]
lea     edi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     edi, [edx+edi*4]
test    edi, edi
jz      loc_63214820
mov     dword ptr [edi], 23h
mov     eax, offset off_6322d670
mov     dword ptr [edi+4], offset off_6322d670
jmp     loc_63214513
mov     eax, [ebx+14h]
cmp     eax, [ebx+18h]
jge     loc_63214797
mov     ecx, [ebx+10h]
lea     edi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     edi, [ecx+edi*4]
test    edi, edi
jz      loc_63214820
mov     dword ptr [edi], 23h
mov     eax, offset off_6322d65c
mov     dword ptr [edi+4], offset off_6322d65c
jmp     loc_63214513
mov     eax, ebx
call    sub_632159d0
mov     edx, 3bh
mov     [esp+4ch+var_4c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
test    eax, eax
mov     edi, eax
mov     [esp+4ch+var_24], eax
jz      loc_632140a4
mov     edx, [ebx+0ch]
movzx   eax, byte ptr [edx]
test    al, al
jz      def_63214066
add     edx, 1
cmp     al, 45h
mov     [ebx+0ch], edx
jz      loc_632140a4
xor     edi, edi
jmp     loc_632140a4
mov     eax, [ebx+14h]
xor     esi, esi
cmp     eax, [ebx+18h]
jge     short loc_63214701
mov     edx, [ebx+10h]
lea     esi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     esi, [edx+esi*4]
mov     [esp+4ch+var_24], esi
mov     dword ptr [esi], 28h
movzx   eax, byte ptr [ecx+2]
sub     eax, 30h
cmp     al, 9
setbe   al
movzx   eax, al
test    ax, ax
mov     [esi+8], ax
jnz     loc_632147f1
mov     eax, ebx
xor     edi, edi
call    sub_63214030
mov     [esi+4], eax
mov     eax, [esp+4ch+var_24]
mov     eax, [eax+4]
test    eax, eax
jz      loc_632140a4
lea     eax, [ebx+0ch]
call    sub_63213ca0
mov     ecx, [ebx+0ch]
xor     eax, eax
movzx   edx, byte ptr [ecx]
test    dl, dl
jz      short loc_63214764
add     ecx, 1
xor     eax, eax
cmp     dl, 73h
mov     [ebx+0ch], ecx
setz    al
mov     edi, [esp+4ch+var_24]
mov     [edi+0ah], ax
jmp     loc_632140a4
mov     ebp, [ebx+10h]
lea     edi, [edx+edx*2]
add     edx, 1
mov     [ebx+14h], edx
lea     edi, [ebp+edi*4+0]
test    edi, edi
jz      loc_63214828
mov     dword ptr [edi], 23h
mov     [edi+4], eax
jmp     loc_632142ee
mov     eax, large ds:4
xor     edi, edi
jmp     loc_63214513
mov     eax, ebx
call    sub_63214e90
test    eax, eax
mov     edi, eax
mov     [esp+4ch+var_24], eax
jz      loc_632140d0
cmp     dword ptr [eax], 16h
jnz     loc_632140d0
jmp     loc_632140a4
mov     eax, ebx
call    sub_632159d0
test    eax, eax
mov     esi, eax
jnz     loc_6321442b
xor     edi, edi
jmp     loc_632142bd
mov     eax, [eax+4]
xor     edi, edi
jmp     loc_632142ee
xor     esi, esi
jmp     loc_6321443a
lea     eax, [ebx+0ch]
call    sub_63213ca0
mov     esi, [esp+4ch+var_24]
jmp     loc_63214727
add     ecx, 3
mov     eax, ebx
mov     [ebx+0ch], ecx
xor     edi, edi
call    sub_632159d0
test    eax, eax
mov     esi, eax
jnz     loc_632144ab
jmp     loc_632140a4
mov     eax, [edi+4]
jmp     loc_63214513
mov     eax, [edi+4]
nop
lea     esi, [esi+0]
jmp     loc_632142ee
push    esi
push    ebx
mov     ebx, eax
sub     esp, 24h
mov     eax, [eax+0ch]
mov     [esp+2ch+var_10], 0
movzx   edx, byte ptr [eax]
xor     eax, eax
test    dl, dl
jz      short loc_632148ad
cmp     dl, 45h
jz      short loc_632148ad
cmp     dl, 2eh
lea     esi, [esp+2ch+var_10]
jnz     short loc_632148a0
jmp     short loc_632148ad
mov     ecx, eax
mov     edx, 2ah
mov     eax, ebx
mov     [esp+2ch+var_2c], 0
call    sub_63213850
test    eax, eax
mov     [esi], eax
jz      short loc_632148ab
lea     esi, [eax+8]
mov     eax, [ebx+0ch]
movzx   eax, byte ptr [eax]
cmp     al, 45h
jz      short loc_632148b3
test    al, al
jz      short loc_632148b3
cmp     al, 2eh
jz      short loc_632148b3
mov     eax, ebx
call    sub_63214030
test    eax, eax
jnz     short loc_63214870
xor     eax, eax
add     esp, 24h
pop     ebx
pop     esi
retn
mov     eax, [esp+2ch+var_10]
test    eax, eax
jz      short loc_632148ad
mov     edx, [eax+8]
test    edx, edx
jnz     short loc_632148ad
mov     edx, [eax+4]
cmp     dword ptr [edx], 23h
jnz     short loc_632148ad
mov     edx, [edx+4]
cmp     dword ptr [edx+10h], 9
jnz     short loc_632148ad
mov     edx, [edx+4]
sub     [ebx+30h], edx
mov     dword ptr [eax+4], 0
jmp     short loc_632148ad
push    esi
push    ebx
mov     ebx, eax
sub     esp, 14h
mov     eax, [eax+0ch]
cmp     byte ptr [eax], 4ah
jz      short loc_63214930
xor     esi, esi
test    edx, edx
jnz     short loc_63214936
mov     eax, ebx
call    sub_63214840
mov     edx, eax
xor     eax, eax
test    edx, edx
jz      short loc_63214925
mov     [esp+1ch+var_1c], edx
mov     ecx, esi
mov     edx, 25h
mov     eax, ebx
call    sub_63213850
add     esp, 14h
pop     ebx
pop     esi
retn
add     eax, 1
mov     [ebx+0ch], eax
mov     eax, ebx
call    sub_63214030
test    eax, eax
mov     esi, eax
jnz     short loc_63214905
xor     eax, eax
jmp     short loc_63214925
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 2ch
mov     [esp+3ch+var_20], eax
mov     eax, [eax+0ch]
mov     [esp+3ch+var_21], 0
movzx   edi, byte ptr [eax]
mov     ecx, edi
test    cl, cl
jz      short loc_632149a3
mov     ebx, [esp+3ch+var_20]
lea     edx, [eax+1]
mov     [ebx+0ch], edx
movzx   edx, byte ptr [eax+1]
test    dl, dl
mov     [esp+3ch+var_21], dl
jz      short loc_63214988
add     eax, 2
mov     [ebx+0ch], eax
mov     ecx, edi
cmp     cl, 76h
jnz     loc_63214a12
movzx   eax, [esp+3ch+var_21]
sub     eax, 30h
cmp     al, 9
jbe     loc_63214a46
mov     ebx, 34h
xor     eax, eax
mov     [esp+3ch+var_28], ebx
jmp     short loc_632149c0
mov     ebx, edi
cmp     cl, bl
jle     short loc_632149ff
mov     [esp+3ch+var_28], edx
cmp     eax, [esp+3ch+var_28]
jz      short loc_63214a08
mov     edx, [esp+3ch+var_28]
mov     ebx, edi
sub     edx, eax
mov     ecx, edx
shr     ecx, 1fh
add     edx, ecx
sar     edx, 1
add     edx, eax
mov     ecx, edx
shl     ecx, 4
mov     esi, ds:off_6322da60[ecx]
lea     ebp, off_6322da60[ecx]
movzx   ecx, byte ptr [esi]
cmp     bl, cl
jnz     short loc_632149b0
movzx   ecx, byte ptr [esi+1]
cmp     [esp+3ch+var_21], cl
jz      loc_63214a93
cmp     cl, [esp+3ch+var_21]
jg      short loc_632149b6
lea     eax, [edx+1]
cmp     eax, [esp+3ch+var_28]
jnz     short loc_632149c0
xor     eax, eax
add     esp, 2ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
cmp     [esp+3ch+var_21], 76h
jnz     short loc_632149a3
cmp     cl, 63h
jnz     short loc_632149a3
mov     eax, [esp+3ch+var_20]
call    sub_63214030
mov     edx, 2eh
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, [esp+3ch+var_20]
call    sub_63213850
add     esp, 2ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [esp+3ch+var_20]
call    sub_63213dd0
mov     ebx, [esp+3ch+var_20]
mov     ecx, eax
mov     eax, [esp+3ch+var_20]
mov     edx, [eax+14h]
xor     eax, eax
cmp     edx, [ebx+18h]
jge     short loc_63214a0a
mov     esi, [ebx+10h]
lea     eax, [edx+edx*2]
add     edx, 1
mov     [ebx+14h], edx
lea     eax, [esi+eax*4]
test    eax, eax
jz      short loc_63214a0a
test    ecx, ecx
jz      short loc_63214a08
movsx   edx, [esp+3ch+var_21]
mov     dword ptr [eax], 2dh
mov     [eax+8], ecx
sub     edx, 30h
mov     [eax+4], edx
jmp     loc_63214a0a
mov     eax, [esp+3ch+var_20]
mov     ecx, [esp+3ch+var_20]
mov     edx, [eax+14h]
xor     eax, eax
cmp     edx, [ecx+18h]
jge     loc_63214a0a
mov     ebx, [ecx+10h]
lea     eax, [edx+edx*2]
add     edx, 1
mov     [ecx+14h], edx
lea     eax, [ebx+eax*4]
test    eax, eax
jz      loc_63214a0a
mov     dword ptr [eax], 2ch
mov     [eax+4], ebp
jmp     loc_63214a0a
sub     esp, 0ch
mov     edx, [eax+0ch]
mov     [esp+0ch+var_c], ebx
mov     ebx, eax
mov     [esp+0ch+var_8], esi
mov     [esp+0ch+var_4], edi
movzx   eax, byte ptr [edx]
lea     ecx, [eax-30h]
cmp     cl, 9
jbe     short loc_63214b54
lea     ecx, [eax-61h]
cmp     cl, 19h
jbe     short loc_63214b31
lea     ecx, [eax-43h]
cmp     cl, 1
jbe     loc_63214c11
cmp     al, 4ch
jz      short loc_63214b70
xor     esi, esi
cmp     al, 55h
jnz     short loc_63214b20
movzx   eax, byte ptr [edx+1]
cmp     al, 6ch
jz      loc_63214c93
cmp     al, 74h
jz      loc_63214bb0
mov     eax, esi
mov     ebx, [esp+0ch+var_c]
mov     esi, [esp+0ch+var_8]
mov     edi, [esp+0ch+var_4]
add     esp, 0ch
retn
mov     eax, ebx
call    sub_63214950
test    eax, eax
mov     esi, eax
jz      short loc_63214b20
cmp     dword ptr [eax], 2ch
jnz     short loc_63214b20
mov     edx, [eax+4]
mov     eax, [ebx+30h]
add     eax, [edx+8]
add     eax, 7
mov     [ebx+30h], eax
jmp     short loc_63214b20
mov     eax, ebx
mov     esi, [esp+0ch+var_8]
mov     ebx, [esp+0ch+var_c]
mov     edi, [esp+0ch+var_4]
add     esp, 0ch
jmp     sub_63213dd0
add     edx, 1
mov     eax, ebx
mov     [ebx+0ch], edx
call    sub_63213dd0
test    eax, eax
jz      loc_63214c37
mov     edx, [ebx+0ch]
mov     esi, eax
cmp     byte ptr [edx], 5fh
jnz     short loc_63214b20
add     edx, 1
mov     [ebx+0ch], edx
lea     eax, [ebx+0ch]
call    sub_63213ca0
test    eax, eax
mov     eax, 0
cmovs   esi, eax
jmp     loc_63214b20
lea     eax, [edx+1]
mov     [ebx+0ch], eax
cmp     byte ptr [edx+1], 74h
jnz     loc_63214b20
add     edx, 2
mov     eax, ebx
mov     [ebx+0ch], edx
call    sub_63213d00
test    eax, eax
js      loc_63214b20
mov     edx, [ebx+14h]
cmp     edx, [ebx+18h]
jge     short loc_63214bf9
mov     edi, [ebx+10h]
lea     esi, [edx+edx*2]
add     edx, 1
mov     [ebx+14h], edx
lea     esi, [edi+esi*4]
test    esi, esi
jz      short loc_63214bf9
mov     dword ptr [esi], 40h
mov     [esi+4], eax
mov     edx, esi
mov     eax, ebx
call    sub_63213f20
test    eax, eax
mov     eax, 0
cmovz   esi, eax
jmp     loc_63214b20
mov     ecx, [ebx+2ch]
test    ecx, ecx
jz      short loc_63214c2b
mov     esi, [ecx]
test    esi, esi
jz      loc_63214d11
cmp     esi, 16h
jz      loc_63214d11
cmp     al, 43h
jz      loc_63214d20
cmp     al, 44h
jz      short loc_63214c40
xor     esi, esi
jmp     loc_63214b20
movzx   eax, byte ptr [edx+1]
cmp     al, 31h
jz      loc_63214d85
cmp     al, 32h
jz      loc_63214d7b
cmp     al, 30h
mov     edi, 1
jnz     short loc_63214c37
mov     eax, [ebx+14h]
add     edx, 2
cmp     eax, [ebx+18h]
mov     [ebx+0ch], edx
jge     short loc_63214c37
mov     edx, [ebx+10h]
lea     esi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     esi, [edx+esi*4]
test    esi, esi
jz      short loc_63214c37
test    ecx, ecx
jz      short loc_63214c37
mov     dword ptr [esi], 8
mov     [esi+4], edi
mov     [esi+8], ecx
jmp     loc_63214b20
lea     eax, [edx+1]
mov     [ebx+0ch], eax
cmp     byte ptr [edx+1], 6ch
jnz     loc_63214b20
add     edx, 2
mov     eax, ebx
mov     [ebx+0ch], edx
call    sub_63214840
test    eax, eax
mov     edi, eax
jz      loc_63214b20
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 45h
jnz     loc_63214b20
add     eax, 1
mov     [ebx+0ch], eax
mov     eax, ebx
call    sub_63213d00
test    eax, eax
js      loc_63214b20
mov     edx, [ebx+14h]
xor     esi, esi
cmp     edx, [ebx+18h]
jge     loc_63214bf9
mov     ecx, [ebx+10h]
lea     esi, [edx+edx*2]
add     edx, 1
mov     [ebx+14h], edx
lea     esi, [ecx+esi*4]
test    esi, esi
jz      loc_63214bf9
mov     dword ptr [esi], 3eh
mov     [esi+4], edi
mov     [esi+8], eax
jmp     loc_63214bf9
mov     eax, [ecx+8]
add     [ebx+30h], eax
movzx   eax, byte ptr [edx]
jmp     loc_63214c2b
movzx   eax, byte ptr [edx+1]
cmp     al, 32h
jz      short loc_63214d96
cmp     al, 33h
jz      short loc_63214d8f
cmp     al, 31h
mov     edi, 1
jnz     loc_63214c37
mov     eax, [ebx+14h]
add     edx, 2
cmp     eax, [ebx+18h]
mov     [ebx+0ch], edx
jge     loc_63214c37
mov     edx, [ebx+10h]
lea     esi, [eax+eax*2]
add     eax, 1
mov     [ebx+14h], eax
lea     esi, [edx+esi*4]
test    esi, esi
jz      loc_63214c37
test    ecx, ecx
jz      loc_63214c37
mov     dword ptr [esi], 7
mov     [esi+4], edi
mov     [esi+8], ecx
jmp     loc_63214b20
mov     edi, 3
jmp     loc_63214c5d
mov     edi, 2
jmp     loc_63214c5d
mov     edi, 3
jmp     short loc_63214d39
mov     edi, 2
jmp     short loc_63214d39
push    edi
push    esi
push    ebx
mov     ebx, eax
sub     esp, 20h
mov     ecx, [eax+0ch]
mov     edi, [eax+2ch]
xor     eax, eax
cmp     byte ptr [ecx], 49h
jz      short loc_63214dc0
add     esp, 20h
pop     ebx
pop     esi
pop     edi
retn
lea     edx, [ecx+1]
mov     [ebx+0ch], edx
movzx   eax, byte ptr [ecx+1]
cmp     al, 45h
jz      loc_63214e6c
mov     [esp+2ch+var_10], 0
lea     esi, [esp+2ch+var_10]
jmp     short loc_63214e1b
cmp     al, 58h
jz      short loc_63214e32
cmp     al, 49h
jz      short loc_63214e28
mov     eax, ebx
call    sub_63214030
test    eax, eax
jz      short loc_63214e47
mov     ecx, eax
mov     edx, 2bh
mov     eax, ebx
mov     [esp+2ch+var_2c], 0
call    sub_63213850
test    eax, eax
mov     [esi], eax
jz      short loc_63214e47
mov     edx, [ebx+0ch]
lea     esi, [eax+8]
movzx   eax, byte ptr [edx]
cmp     al, 45h
jz      short loc_63214e58
cmp     al, 4ch
jnz     short loc_63214de0
mov     eax, ebx
call    sub_632158b0
jmp     short loc_63214def
mov     eax, ebx
call    sub_63214da0
nop
jmp     short loc_63214def
add     edx, 1
mov     eax, ebx
mov     [ebx+0ch], edx
call    sub_632159d0
mov     edx, [ebx+0ch]
cmp     byte ptr [edx], 45h
jz      short loc_63214e50
add     esp, 20h
xor     eax, eax
pop     ebx
pop     esi
pop     edi
retn
add     edx, 1
mov     [ebx+0ch], edx
jmp     short loc_63214def
add     edx, 1
mov     eax, [esp+2ch+var_10]
mov     [ebx+2ch], edi
mov     [ebx+0ch], edx
add     esp, 20h
pop     ebx
pop     esi
pop     edi
retn
add     ecx, 2
mov     edx, 2bh
mov     [ebx+0ch], ecx
mov     eax, ebx
xor     ecx, ecx
mov     [esp+2ch+var_2c], 0
call    sub_63213850
jmp     loc_63214db5
push    ebp
push    edi
push    esi
mov     esi, eax
push    ebx
sub     esp, 3ch
mov     edx, [eax+0ch]
movzx   eax, byte ptr [edx]
sub     eax, 4ch
cmp     al, 0eh
jbe     short loc_63214ec1
mov     eax, esi
call    sub_63214ad0
mov     edi, eax
mov     eax, [esi+0ch]
cmp     byte ptr [eax], 49h
jz      short loc_63214ef6
add     esp, 3ch
mov     eax, edi
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
movzx   eax, al
jmp     ds:jpt_63214ec4[eax*4]
cmp     byte ptr [edx+1], 74h
jz      loc_632150a4
xor     edx, edx
mov     eax, esi
call    sub_632139e0
mov     edx, 1
mov     edi, eax
mov     eax, [esi+0ch]
cmp     byte ptr [eax], 49h
jnz     short loc_63214eb7
test    edx, edx
jnz     short loc_63214f07
mov     edx, edi
mov     eax, esi
call    sub_63213f20
test    eax, eax
jz      loc_63215156
mov     eax, esi
call    sub_63214da0
mov     ecx, edi
mov     edx, 4
mov     [esp+4ch+var_4c], eax
mov     eax, esi
call    sub_63213850
mov     edi, eax
jmp     short loc_63214eb7
mov     eax, esi
call    sub_63214ad0
add     esp, 3ch
pop     ebx
pop     esi
mov     edi, eax
mov     eax, edi
pop     edi
pop     ebp
retn
add     edx, 1
mov     eax, esi
mov     [esi+0ch], edx
xor     edx, edx
xor     edi, edi
call    sub_63215220
mov     ebx, eax
mov     eax, [esi+0ch]
cmp     byte ptr [eax], 45h
jnz     loc_63214eb7
lea     edx, [eax+1]
mov     [esi+0ch], edx
movzx   ecx, byte ptr [eax+1]
cmp     cl, 73h
jz      loc_63215171
cmp     cl, 64h
mov     edx, 0ffffffffh
jz      loc_63215193
mov     eax, esi
mov     [esp+4ch+var_30], edx
call    sub_63214e90
mov     edx, [esp+4ch+var_30]
test    eax, eax
mov     ebp, eax
jz      short loc_63214fa3
mov     eax, [eax]
cmp     eax, 3eh
jz      short loc_63214fa3
cmp     eax, 40h
jz      short loc_63214fa3
mov     eax, [esi+0ch]
cmp     byte ptr [eax], 5fh
jz      loc_632151bc
cmp     edx, 0ffffffffh
mov     eax, ebp
jz      short loc_63214fd3
mov     ecx, [esi+14h]
xor     eax, eax
cmp     ecx, [esi+18h]
jge     short loc_63214fd3
mov     edi, [esi+10h]
lea     eax, [ecx+ecx*2]
add     ecx, 1
mov     [esi+14h], ecx
lea     eax, [edi+eax*4]
test    eax, eax
jz      short loc_63214fd3
mov     dword ptr [eax], 3fh
mov     [eax+8], edx
mov     [eax+4], ebp
mov     [esp+4ch+var_4c], eax
mov     ecx, ebx
mov     eax, esi
mov     edx, 2
call    sub_63213850
add     esp, 3ch
pop     ebx
pop     esi
mov     edi, eax
mov     eax, edi
pop     edi
pop     ebp
retn
add     edx, 1
mov     ecx, 1
mov     [esi+0ch], edx
mov     eax, esi
xor     edi, edi
lea     edx, [esp+4ch+var_20]
call    sub_63213940
test    eax, eax
mov     ebp, eax
jz      loc_63214eb7
mov     eax, [esi+0ch]
movzx   ebx, byte ptr [eax]
test    bl, bl
jz      short loc_63215096
lea     edx, [ebx-61h]
cmp     dl, 19h
jbe     loc_632150e2
lea     edx, [ebx-30h]
cmp     dl, 9
jbe     loc_632150e2
cmp     bl, 44h
jz      loc_632150e2
cmp     bl, 43h
jz      loc_632150e2
cmp     bl, 4ch
jz      loc_632150e2
cmp     bl, 55h
jz      loc_632150e2
cmp     bl, 53h
jz      loc_63215160
cmp     bl, 49h
jz      loc_63215140
cmp     bl, 54h
jz      loc_632151b0
cmp     bl, 45h
jz      loc_632151f4
cmp     bl, 4dh
nop
jnz     short loc_63215096
test    edi, edi
jz      short loc_63215096
lea     edx, [eax+1]
mov     [esi+0ch], edx
movzx   ebx, byte ptr [eax+1]
mov     eax, edx
test    bl, bl
jnz     short loc_6321501c
mov     dword ptr [ebp+0], 0
xor     edi, edi
jmp     loc_63214eb7
add     edx, 2
mov     eax, esi
mov     [esi+0ch], edx
call    sub_63214ad0
mov     ecx, 3
mov     edx, offset astd
mov     ebx, eax
mov     eax, esi
call    sub_632138e0
mov     edx, 1
mov     [esp+4ch+var_4c], ebx
mov     ecx, eax
mov     eax, esi
call    sub_63213850
xor     edx, edx
add     dword ptr [esi+30h], 3
mov     edi, eax
jmp     loc_63214eea
mov     eax, esi
call    sub_63214ad0
test    edi, edi
jz      short loc_63215135
mov     edx, 1
mov     [esp+4ch+var_4c], eax
mov     ecx, edi
mov     eax, esi
call    sub_63213850
mov     edi, eax
cmp     bl, 53h
jz      loc_63215012
mov     eax, [esi+0ch]
cmp     byte ptr [eax], 45h
jz      short loc_63215127
mov     edx, edi
mov     eax, esi
call    sub_63213f20
test    eax, eax
jnz     loc_63215012
jmp     loc_63215096
mov     ebx, 45h
lea     esi, [esi+0]
jmp     loc_6321501c
mov     edi, eax
jmp     short loc_63215100
test    edi, edi
jz      loc_63215096
mov     eax, esi
call    sub_63214da0
mov     edx, 4
jmp     short loc_632150f2
xor     edi, edi
jmp     loc_63214eb7
mov     edx, 1
mov     eax, esi
call    sub_632139e0
jmp     loc_632150e9
lea     edx, [eax+2]
mov     [esi+0ch], edx
cmp     byte ptr [eax+2], 5fh
jz      short loc_632151dd
mov     ecx, 0eh
mov     edx, offset astringliteral
mov     eax, esi
call    sub_632138e0
jmp     loc_63214fd3
add     eax, 2
mov     [esi+0ch], eax
mov     eax, esi
call    sub_63213d00
test    eax, eax
mov     edx, eax
jns     loc_63214f76
jmp     loc_63214eb7
mov     eax, esi
call    sub_63213d60
jmp     loc_632150e9
add     eax, 1
xor     edi, edi
mov     [esi+0ch], eax
lea     eax, [esi+0ch]
call    sub_63213ca0
mov     edx, [esp+4ch+var_30]
test    eax, eax
jns     loc_63214fa3
jmp     loc_63214eb7
add     eax, 3
mov     [esi+0ch], eax
lea     eax, [esi+0ch]
call    sub_63213ca0
test    eax, eax
jns     short loc_6321517d
jmp     loc_63214eb7
test    edi, edi
mov     [ebp+0], edi
jz      loc_63215156
mov     eax, [esi+0ch]
xor     edi, edi
cmp     byte ptr [eax], 45h
jnz     loc_63214eb7
add     eax, 1
mov     edi, [esp+4ch+var_20]
mov     [esi+0ch], eax
jmp     loc_63214eb7
sub     esp, 3ch
mov     [esp+3ch+var_10], ebx
mov     ebx, eax
mov     eax, [eax+0ch]
mov     [esp+3ch+var_8], edi
mov     edi, edx
mov     [esp+3ch+var_c], esi
mov     [esp+3ch+var_4], ebp
movzx   edx, byte ptr [eax]
cmp     dl, 54h
jz      loc_632152f5
cmp     dl, 47h
jz      loc_632152f5
mov     eax, ebx
call    sub_63214e90
test    eax, eax
mov     esi, eax
jnz     short loc_632152b0
mov     eax, [ebx+0ch]
test    esi, esi
movzx   eax, byte ptr [eax]
jz      loc_63215311
test    al, al
jz      loc_63215311
cmp     al, 45h
jz      loc_63215311
mov     eax, esi
mov     edx, [eax]
cmp     edx, 4
jz      loc_63215471
jnb     loc_63215327
xor     edx, edx
mov     eax, ebx
call    sub_632148f0
mov     ecx, esi
mov     edx, 3
mov     [esp+3ch+var_3c], eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     short loc_63215311
test    edi, edi
jz      short loc_6321525c
test    byte ptr [ebx+8], 1
jnz     short loc_6321525c
mov     eax, [esi]
lea     edx, [eax-1ah]
cmp     edx, 2
ja      short loc_632152d1
mov     esi, [esi+4]
mov     eax, [esi]
lea     edx, [eax-1ah]
cmp     edx, 2
jbe     short loc_632152c4
cmp     eax, 2
jnz     short loc_63215311
mov     eax, [esi+8]
mov     edx, [eax]
sub     edx, 1ah
cmp     edx, 2
ja      short loc_632152f0
mov     eax, [eax+4]
mov     edx, [eax]
sub     edx, 1ah
cmp     edx, 2
jbe     short loc_632152e3
mov     [esi+8], eax
jmp     short loc_63215311
mov     ecx, [ebx+30h]
lea     edx, [ecx+14h]
mov     [ebx+30h], edx
movzx   edx, byte ptr [eax]
cmp     dl, 54h
jz      loc_63215443
cmp     dl, 47h
jz      short loc_63215343
xor     esi, esi
mov     eax, esi
mov     ebx, [esp+3ch+var_10]
mov     esi, [esp+3ch+var_c]
mov     edi, [esp+3ch+var_8]
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
retn
sub     edx, 1ah
cmp     edx, 2
ja      loc_6321528d
mov     eax, [eax+4]
test    eax, eax
jnz     loc_6321527c
jmp     loc_6321528d
lea     edx, [eax+1]
xor     esi, esi
mov     [ebx+0ch], edx
movzx   edx, byte ptr [eax+1]
test    dl, dl
jz      short loc_63215311
add     eax, 2
cmp     dl, 52h
mov     [ebx+0ch], eax
jz      loc_63215730
jle     loc_632154b0
cmp     dl, 56h
jz      loc_63215709
cmp     dl, 72h
jnz     short def_6321546a
lea     eax, [ebx+0ch]
call    sub_63213ca0
cmp     eax, 1
jle     short loc_63215311
mov     edi, [ebx+0ch]
movzx   edx, byte ptr [edi]
test    dl, dl
jz      loc_63215311
add     edi, 1
cmp     dl, 5fh
mov     [ebx+0ch], edi
jnz     loc_63215311
lea     ebp, [eax-1]
mov     [esp+3ch+var_20], 0
nop
lea     esi, [esi+0]
movzx   eax, byte ptr [edi]
xor     esi, esi
test    al, al
jz      loc_63215311
cmp     al, 24h
jnz     short loc_632153d2
jmp     loc_632156cb
movzx   eax, byte ptr [edi+esi]
test    al, al
jz      short loc_632153d9
cmp     al, 24h
jz      short loc_632153d9
add     esi, 1
cmp     esi, ebp
jl      short loc_632153c6
mov     edx, edi
mov     ecx, esi
mov     eax, ebx
call    sub_632138e0
mov     edi, [ebx+0ch]
add     edi, esi
mov     [ebx+0ch], edi
test    eax, eax
jz      def_6321546a
sub     ebp, esi
mov     edx, [esp+3ch+var_20]
test    edx, edx
jz      loc_63215700
mov     ecx, [esp+3ch+var_20]
mov     edx, 38h
mov     [esp+3ch+var_3c], eax
mov     eax, ebx
call    sub_63213850
test    eax, eax
mov     [esp+3ch+var_20], eax
jz      def_6321546a
test    ebp, ebp
jg      short loc_632153b0
mov     ecx, [esp+3ch+var_20]
mov     edx, 37h
mov     eax, ebx
mov     [esp+3ch+var_3c], 0
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
lea     edx, [eax+1]
mov     [ebx+0ch], edx
movzx   edx, byte ptr [eax+1]
test    dl, dl
jz      def_6321546a
sub     edx, 43h
add     eax, 2
cmp     dl, 33h
mov     [ebx+0ch], eax
ja      def_6321546a
movzx   edx, dl
jmp     ds:jpt_6321546a[edx*4]
mov     eax, [eax+4]
mov     edx, 1
test    eax, eax
jz      loc_6321528f
cmp     dword ptr [eax], 2eh
jbe     short loc_63215490
mov     edx, 1
jmp     loc_6321528f
mov     edx, [eax]
jmp     ds:jpt_63215492[edx*4]
mov     eax, [eax+8]
test    eax, eax
jnz     short loc_63215481
jmp     short def_63215492
cmp     dl, 41h
jnz     def_6321546a
xor     edx, edx
mov     eax, ebx
call    sub_63215220
mov     edx, 15h
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
mov     eax, ebx
call    sub_63214030
mov     edx, 0eh
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
mov     eax, ebx
xor     esi, esi
call    sub_63214030
mov     edi, eax
lea     eax, [ebx+0ch]
call    sub_63213ca0
test    eax, eax
js      loc_63215311
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 5fh
jnz     loc_63215311
add     eax, 1
mov     [ebx+0ch], eax
mov     eax, ebx
call    sub_63214030
mov     edx, 0bh
add     dword ptr [ebx+30h], 5
mov     [esp+3ch+var_3c], edi
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
mov     edx, 76h
mov     eax, ebx
call    sub_63213e90
xor     esi, esi
test    eax, eax
jz      loc_63215311
xor     edx, edx
mov     eax, ebx
call    sub_63215220
mov     edx, 10h
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
mov     edx, 68h
mov     eax, ebx
call    sub_63213e90
xor     esi, esi
test    eax, eax
jz      loc_63215311
xor     edx, edx
mov     eax, ebx
call    sub_63215220
mov     edx, 0fh
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
xor     edx, edx
mov     eax, ebx
call    sub_63213e90
xor     esi, esi
test    eax, eax
jz      loc_63215311
xor     edx, edx
mov     eax, ebx
call    sub_63213e90
test    eax, eax
jz      loc_63215311
xor     edx, edx
mov     eax, ebx
call    sub_63215220
mov     edx, 11h
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
add     ecx, 0fh
mov     eax, ebx
mov     [ebx+30h], ecx
call    sub_63214030
mov     edx, 9
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
add     ecx, 0ah
mov     eax, ebx
mov     [ebx+30h], ecx
call    sub_63214030
mov     edx, 0ah
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
mov     eax, ebx
call    sub_63214030
mov     edx, 0dh
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
mov     eax, ebx
call    sub_63214030
mov     edx, 12h
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
mov     eax, ebx
call    sub_63214030
mov     edx, 0ch
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
movzx   eax, byte ptr [edi+1]
cmp     al, 53h
jz      loc_6321578a
cmp     al, 5fh
jz      loc_63215780
cmp     al, 24h
jnz     def_6321546a
mov     ecx, 24h
mov     edx, [ebx+14h]
cmp     edx, [ebx+18h]
jl      short loc_63215753
add     dword ptr [ebx+0ch], 2
jmp     def_6321546a
mov     [esp+3ch+var_20], eax
jmp     loc_63215421
mov     eax, ebx
call    sub_63214e90
mov     edx, 13h
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
mov     eax, ebx
call    sub_63214e90
mov     edx, 14h
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215311
mov     esi, [ebx+10h]
lea     eax, [edx+edx*2]
add     edx, 1
mov     [ebx+14h], edx
lea     eax, [esi+eax*4]
test    eax, eax
jz      short loc_632156f4
mov     [eax+4], ecx
mov     edi, [ebx+0ch]
sub     ebp, 2
mov     dword ptr [eax], 39h
add     edi, 2
mov     [ebx+0ch], edi
jmp     loc_632153f6
mov     ecx, 2eh
jmp     loc_632156ec
mov     ecx, 2fh
jmp     loc_632156ec
push    ebp
mov     ebp, eax
push    edi
mov     edi, edx
push    esi
push    ebx
sub     esp, 1ch
mov     edx, [eax+0ch]
movzx   eax, byte ptr [edx]
cmp     al, 5fh
jz      short loc_632157d0
xor     esi, esi
test    edi, edi
jnz     short loc_632157c1
xor     esi, esi
cmp     al, 5ah
jz      short loc_632157e2
add     esp, 1ch
mov     eax, esi
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
lea     ecx, [edx+1]
xor     esi, esi
mov     [ebp+0ch], ecx
movzx   eax, byte ptr [edx+1]
mov     edx, ecx
cmp     al, 5ah
jnz     short loc_632157c1
add     edx, 1
mov     eax, ebp
mov     [ebp+0ch], edx
mov     edx, edi
call    sub_63215220
test    edi, edi
mov     esi, eax
jz      short loc_632157c1
test    byte ptr [ebp+8], 1
jz      short loc_632157c1
lea     esi, [esi+0]
mov     edx, [ebp+0ch]
cmp     byte ptr [edx], 2eh
jnz     short loc_632157c1
movzx   eax, byte ptr [edx+1]
lea     ecx, [eax-61h]
cmp     cl, 19h
jbe     short loc_63215885
cmp     al, 5fh
jz      short loc_63215885
sub     eax, 30h
cmp     al, 9
ja      short loc_632157c1
movzx   ecx, byte ptr [edx]
mov     eax, edx
cmp     cl, 2eh
jnz     short loc_63215851
lea     esi, [esi+0]
movzx   ecx, byte ptr [eax+1]
sub     ecx, 30h
cmp     cl, 9
ja      short loc_63215851
movzx   ecx, byte ptr [eax+2]
lea     edi, [eax+2]
lea     eax, [ecx-30h]
cmp     al, 9
jbe     short loc_63215874
mov     eax, edi
cmp     cl, 2eh
jz      short loc_63215830
mov     ecx, eax
sub     ecx, edx
mov     [ebp+0ch], eax
mov     eax, ebp
call    sub_632138e0
mov     ecx, esi
mov     edx, 42h
mov     [esp+2ch+var_2c], eax
mov     eax, ebp
call    sub_63213850
mov     esi, eax
jmp     short loc_63215800
add     edi, 1
movzx   ecx, byte ptr [edi]
lea     eax, [ecx-30h]
cmp     al, 9
jbe     short loc_63215874
mov     eax, edi
jmp     short loc_6321584c
movzx   ecx, byte ptr [edx+2]
lea     eax, [edx+2]
lea     edi, [ecx-61h]
mov     ebx, edi
cmp     bl, 19h
ja      short loc_632158a6
add     eax, 1
movzx   ecx, byte ptr [eax]
lea     edi, [ecx-61h]
mov     ebx, edi
cmp     bl, 19h
jbe     short loc_63215896
cmp     cl, 5fh
jz      short loc_63215896
jmp     loc_63215824
sub     esp, 2ch
mov     [esp+2ch+var_10], ebx
mov     ebx, eax
mov     eax, [eax+0ch]
mov     [esp+2ch+var_4], ebp
xor     ebp, ebp
mov     [esp+2ch+var_c], esi
mov     [esp+2ch+var_8], edi
cmp     byte ptr [eax], 4ch
jz      short loc_632158e5
mov     eax, ebp
mov     ebx, [esp+2ch+var_10]
mov     esi, [esp+2ch+var_c]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
retn
lea     edx, [eax+1]
mov     [ebx+0ch], edx
movzx   eax, byte ptr [eax+1]
cmp     al, 5ah
jz      short loc_63215970
cmp     al, 5fh
jz      short loc_63215970
mov     eax, ebx
call    sub_63214030
test    eax, eax
mov     esi, eax
jz      short loc_632158cf
cmp     dword ptr [eax], 23h
jz      loc_632159a5
mov     edx, [ebx+0ch]
mov     edi, 35h
movzx   eax, byte ptr [edx]
cmp     al, 6eh
jz      short loc_63215990
cmp     al, 45h
jz      loc_632159be
xor     ebp, ebp
test    al, al
mov     ecx, edx
jnz     short loc_63215934
jmp     short loc_632158cf
test    al, al
jz      short loc_63215962
add     ecx, 1
mov     [ebx+0ch], ecx
movzx   eax, byte ptr [ecx]
cmp     al, 45h
jnz     short loc_63215930
sub     ecx, edx
mov     eax, ebx
call    sub_632138e0
mov     ecx, esi
mov     edx, edi
mov     [esp+2ch+var_2c], eax
mov     eax, ebx
call    sub_63213850
mov     ebp, eax
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 45h
jz      short loc_63215983
xor     ebp, ebp
jmp     loc_632158cf
xor     edx, edx
mov     eax, ebx
call    sub_632157a0
mov     ebp, eax
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 45h
jnz     short loc_63215962
add     eax, 1
mov     [ebx+0ch], eax
jmp     loc_632158cf
lea     ecx, [edx+1]
mov     di, 36h
mov     [ebx+0ch], ecx
movzx   eax, byte ptr [edx+1]
mov     edx, ecx
jmp     loc_6321591c
mov     eax, [eax+4]
mov     edi, [eax+10h]
test    edi, edi
jz      loc_6321590d
mov     eax, [eax+4]
sub     [ebx+30h], eax
jmp     loc_6321590d
xor     ecx, ecx
jmp     short loc_63215943
sub     esp, 3ch
mov     edx, [eax+0ch]
mov     [esp+3ch+var_10], ebx
mov     ebx, eax
mov     [esp+3ch+var_c], esi
mov     [esp+3ch+var_8], edi
mov     [esp+3ch+var_4], ebp
movzx   eax, byte ptr [edx]
cmp     al, 4ch
jz      loc_63215b21
cmp     al, 54h
jz      loc_63215b70
cmp     al, 73h
jz      loc_63215a82
cmp     al, 66h
jz      short loc_63215a42
lea     ecx, [eax-30h]
cmp     cl, 9
ja      loc_63215b02
mov     eax, ebx
call    sub_63214ad0
test    eax, eax
mov     esi, eax
jz      short loc_63215a2c
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 49h
jz      loc_63215b90
mov     eax, esi
mov     ebx, [esp+3ch+var_10]
mov     esi, [esp+3ch+var_c]
mov     edi, [esp+3ch+var_8]
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
retn
cmp     byte ptr [edx+1], 70h
jz      loc_63215ce0
mov     eax, ebx
call    sub_63214950
test    eax, eax
mov     ebp, eax
jz      short loc_63215a7b
mov     eax, [eax]
cmp     eax, 2ch
jz      loc_63215b40
cmp     eax, 2dh
jz      short loc_63215ac0
cmp     eax, 2eh
jz      loc_63215d30
cmp     eax, 2ch
jz      loc_63215c93
xor     esi, esi
lea     esi, [esi+0]
jmp     short loc_63215a2c
movzx   eax, byte ptr [edx+1]
cmp     al, 72h
jz      loc_63215ca0
cmp     al, 70h
jnz     short loc_63215a4c
add     edx, 2
mov     eax, ebx
mov     [ebx+0ch], edx
call    sub_632159d0
mov     edx, 41h
mov     [esp+3ch+var_3c], 0
mov     ecx, eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215a2c
mov     edx, [ebp+4]
cmp     edx, 2
jz      loc_63215bb0
cmp     edx, 3
jz      loc_63215c40
cmp     edx, 1
jnz     short loc_63215a7b
cmp     eax, 2eh
jz      loc_63215d30
mov     eax, ebx
call    sub_632159d0
mov     [esp+3ch+var_3c], eax
mov     ecx, ebp
mov     edx, 2fh
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215a2c
cmp     al, 6fh
jnz     loc_63215a4c
cmp     byte ptr [edx+1], 6eh
xchg    ax, ax
jnz     loc_63215a4c
add     edx, 2
mov     [ebx+0ch], edx
jmp     loc_63215a13
mov     eax, ebx
mov     esi, [esp+3ch+var_c]
mov     ebx, [esp+3ch+var_10]
mov     edi, [esp+3ch+var_8]
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
jmp     sub_632158b0
mov     edx, [ebp+4]
mov     edi, offset byte_6322cf20
mov     ecx, [edx+8]
mov     esi, [edx]
mov     [esp+3ch+var_20], edx
sub     ecx, 2
add     [ebx+30h], ecx
mov     ecx, 3
repe cmpsb
jz      loc_63215d60
mov     ecx, [esp+3ch+var_20]
mov     edx, [ecx+0ch]
jmp     loc_63215ac3
mov     eax, ebx
mov     esi, [esp+3ch+var_c]
mov     ebx, [esp+3ch+var_10]
mov     edi, [esp+3ch+var_8]
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
jmp     sub_63213d60
mov     eax, ebx
call    sub_63214da0
mov     ecx, esi
mov     edx, 4
mov     [esp+3ch+var_3c], eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215a2c
mov     eax, [ebp+4]
mov     edi, offset byte_6322cf23
mov     edx, [eax]
mov     eax, ebx
mov     [esp+3ch+var_24], edx
call    sub_632159d0
mov     edx, [esp+3ch+var_24]
mov     ecx, 3
mov     esi, edx
mov     [esp+3ch+var_20], eax
repe cmpsb
jz      loc_63215d50
mov     edi, offset word_6322cf26
mov     ecx, 3
mov     esi, edx
repe cmpsb
jz      short loc_63215c00
mov     edi, offset byte_6322cf29
mov     ecx, 3
mov     esi, edx
repe cmpsb
jnz     loc_63215d8c
mov     eax, ebx
call    sub_63214ad0
mov     esi, eax
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 49h
jz      loc_63215d9a
mov     ecx, [esp+3ch+var_20]
mov     edx, 31h
mov     eax, ebx
mov     [esp+3ch+var_3c], esi
call    sub_63213850
mov     ecx, ebp
mov     edx, 30h
mov     [esp+3ch+var_3c], eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215a2c
mov     eax, ebx
call    sub_632159d0
mov     esi, eax
mov     eax, ebx
call    sub_632159d0
mov     edi, eax
mov     eax, ebx
call    sub_632159d0
mov     ecx, edi
mov     edx, 34h
mov     [esp+3ch+var_3c], eax
mov     eax, ebx
call    sub_63213850
mov     ecx, esi
mov     edx, 33h
mov     [esp+3ch+var_3c], eax
mov     eax, ebx
call    sub_63213850
mov     ecx, ebp
mov     edx, 32h
mov     [esp+3ch+var_3c], eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215a2c
mov     edx, [ebp+4]
mov     [esp+3ch+var_20], edx
jmp     loc_63215b64
add     edx, 2
mov     eax, ebx
mov     [ebx+0ch], edx
call    sub_63214030
mov     esi, eax
mov     eax, ebx
call    sub_63214ad0
mov     edi, eax
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 49h
jz      loc_63215d6c
mov     [esp+3ch+var_3c], edi
mov     ecx, esi
mov     edx, 1
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215a2c
add     edx, 2
mov     eax, ebx
mov     [ebx+0ch], edx
xor     esi, esi
call    sub_63213d00
test    eax, eax
js      loc_63215a2c
mov     edx, [ebx+14h]
cmp     edx, [ebx+18h]
jge     loc_63215a2c
mov     ebp, [ebx+10h]
lea     esi, [edx+edx*2]
add     edx, 1
mov     [ebx+14h], edx
lea     esi, [ebp+esi*4+0]
test    esi, esi
jz      loc_63215a2c
mov     dword ptr [esi], 6
mov     [esi+4], eax
jmp     loc_63215a2c
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 5fh
jnz     loc_63215ae3
add     eax, 1
mov     [ebx+0ch], eax
mov     eax, ebx
call    sub_63215dc0
jmp     loc_63215aea
mov     eax, ebx
call    sub_63215dc0
mov     esi, eax
jmp     loc_63215c15
mov     eax, ebx
call    sub_63214030
jmp     loc_63215aea
mov     eax, ebx
call    sub_63214da0
mov     ecx, edi
mov     edx, 4
mov     [esp+3ch+var_3c], eax
mov     eax, ebx
call    sub_63213850
mov     [esp+3ch+var_3c], eax
jmp     loc_63215cc7
mov     eax, ebx
call    sub_632159d0
mov     esi, eax
jmp     loc_63215c15
mov     eax, ebx
call    sub_63214da0
mov     ecx, esi
mov     edx, 4
mov     [esp+3ch+var_3c], eax
mov     eax, ebx
call    sub_63213850
mov     esi, eax
jmp     loc_63215c15
push    esi
push    ebx
mov     ebx, eax
sub     esp, 24h
mov     eax, [eax+0ch]
mov     [esp+2ch+var_10], 0
lea     esi, [esp+2ch+var_10]
cmp     byte ptr [eax], 45h
jz      short loc_63215e30
nop
lea     esi, [esi+0]
mov     eax, ebx
call    sub_632159d0
test    eax, eax
jz      short loc_63215e21
mov     ecx, eax
mov     edx, 2ah
mov     eax, ebx
mov     [esp+2ch+var_2c], 0
call    sub_63213850
test    eax, eax
mov     [esi], eax
jz      short loc_63215e21
lea     esi, [eax+8]
mov     eax, [ebx+0ch]
cmp     byte ptr [eax], 45h
jnz     short loc_63215de0
add     eax, 1
mov     [ebx+0ch], eax
mov     eax, [esp+2ch+var_10]
add     esp, 24h
pop     ebx
pop     esi
retn
add     esp, 24h
xor     eax, eax
pop     ebx
pop     esi
retn
add     eax, 1
xor     ecx, ecx
mov     [ebx+0ch], eax
mov     edx, 2ah
mov     eax, ebx
mov     [esp+2ch+var_2c], 0
call    sub_63213850
jmp     short loc_63215e1b
push    ebp
push    edi
push    esi
mov     esi, edx
push    ebx
mov     ebx, eax
sub     esp, 2ch
mov     [esp+3ch+str], edx
call    strlen
test    eax, eax
jz      loc_63215ef0
lea     ecx, [ebx+4]
mov     edx, [ebx+104h]
xor     edi, edi
mov     [esp+3ch+var_20], ecx
jmp     short loc_63215e9c
mov     ebp, edx
add     edx, 1
add     edi, 1
cmp     edi, eax
mov     [ebx+ebp+4], cl
mov     [ebx+104h], edx
mov     [ebx+108h], cl
jz      short loc_63215ef0
cmp     edx, 0ffh
movzx   ecx, byte ptr [esi+edi]
jnz     short loc_63215e80
mov     edx, [ebx+110h]
xor     ebp, ebp
mov     [esp+3ch+var_28], eax
mov     [esp+3ch+var_24], cl
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_34], edx
mov     edx, [esp+3ch+var_20]
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+str], edx
call    dword ptr [ebx+10ch]
mov     edx, 1
movzx   ecx, [esp+3ch+var_24]
add     dword ptr [ebx+124h], 1
mov     eax, [esp+3ch+var_28]
jmp     short loc_63215e85
add     esp, 2ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, edx
push    edi
push    esi
push    ebx
mov     ebx, eax
sub     esp, 8ch
test    edx, edx
jz      short def_63215f38
mov     eax, [eax+11ch]
test    eax, eax
jnz     short def_632183b9
mov     eax, [edx]
cmp     eax, 42h
jbe     short loc_63215f38
mov     dword ptr [ebx+11ch], 1
add     esp, 8ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
jmp     ds:jpt_63215f38[eax*4]
mov     edx, [ebp+4]
mov     eax, ebx
call    sub_63215f00
add     esp, 8ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_63218180
mov     byte ptr [ebx+eax+4], 7eh
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 7eh
nop
lea     esi, [esi+0]
mov     edx, [ebp+8]
mov     eax, ebx
call    sub_63215f00
jmp     short def_632183b9
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63215fbd
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 1ah
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      short loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cfc6[esi]
jnz     short loc_63215fa0
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63215fa5
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216034
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 0fh
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cfe1[esi]
jnz     short loc_63216013
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216018
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_632160b1
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 13h
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cff1[esi]
jnz     short loc_63216090
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216095
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216128
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 18h
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d005[esi]
jnz     short loc_63216107
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_6321610c
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_632161a1
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 11h
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d01e[esi]
jnz     short loc_63216180
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216185
mov     edi, [edx+8]
mov     ebp, [edx+4]
test    edi, edi
jz      def_632183b9
lea     edx, [ebx+4]
mov     eax, [ebx+104h]
xor     esi, esi
mov     [esp+9ch+var_80], edx
jmp     short loc_63216230
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     edi, esi
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      def_632183b9
cmp     eax, 0ffh
movzx   edx, byte ptr [ebp+esi+0]
jnz     short loc_63216210
mov     eax, [ebx+110h]
mov     ecx, [esp+9ch+var_80]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], ecx
mov     [esp+9ch+format], 0ffh
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216215
mov     edi, [ebx+118h]
test    edi, edi
jz      short loc_632162b1
mov     edx, edi
mov     ecx, [edx+8]
test    ecx, ecx
jnz     short loc_632162a3
mov     ecx, [edx+4]
mov     ecx, [ecx]
lea     esi, [ecx-17h]
cmp     esi, 2
ja      short loc_632162b1
cmp     eax, ecx
jz      loc_63215f40
mov     edx, [edx]
test    edx, edx
jnz     short loc_63216287
jmp     short loc_632162b1
mov     edi, [ebx+118h]
lea     eax, [esp+9ch+var_64]
mov     [ebx+118h], eax
mov     eax, [ebx+114h]
mov     edx, [ebp+4]
mov     dword ptr [esp+9ch+var_64], edi
mov     [esp+9ch+var_60], ebp
mov     [esp+9ch+var_58], eax
mov     eax, ebx
mov     [esp+9ch+var_5c], 0
call    sub_63215f00
mov     edi, [esp+9ch+var_5c]
test    edi, edi
jz      short loc_63216332
mov     eax, dword ptr [esp+9ch+var_64]
mov     [ebx+118h], eax
jmp     def_632183b9
mov     eax, [ebx+118h]
mov     [esp+9ch+var_60], edx
mov     [esp+9ch+var_5c], 0
mov     dword ptr [esp+9ch+var_64], eax
lea     eax, [esp+9ch+var_64]
mov     [ebx+118h], eax
mov     eax, [ebx+114h]
mov     edx, [edx+8]
mov     [esp+9ch+var_58], eax
mov     eax, ebx
call    sub_63215f00
mov     eax, [esp+9ch+var_5c]
test    eax, eax
jnz     short loc_632162e7
mov     edx, ebp
mov     eax, ebx
call    sub_63218970
jmp     short loc_632162e7
cmp     word ptr [edx+0ah], 0
jnz     loc_6321801d
mov     edx, [ebp+4]
cmp     dword ptr [edx+4], offset off_6322d4e0
jz      loc_63217ff3
mov     eax, ebx
call    sub_63215f00
mov     edx, [ebx+104h]
cmp     edx, 0ffh
lea     eax, [edx+1]
jz      loc_63218424
mov     byte ptr [ebx+edx+4], 20h
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 20h
xor     esi, esi
cmp     word ptr [ebp+8], 0
lea     edi, [ebx+4]
jz      loc_63216423
jmp     short loc_632163b9
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 6
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      def_632183b9
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d036[esi]
jnz     short loc_63216398
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_6321639d
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 6
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      def_632183b9
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d03d[esi]
jnz     short loc_63216402
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216407
mov     edx, [edx+4]
test    edx, edx
jz      short loc_6321647a
mov     eax, ebx
call    sub_63215f00
mov     eax, [ebp+8]
test    eax, eax
jz      def_632183b9
mov     esi, [ebx+104h]
cmp     esi, 0fdh
ja      loc_63218101
lea     eax, [ebx+4]
xor     edi, edi
mov     [esp+9ch+var_80], ebp
mov     ebp, eax
jmp     short loc_632164c5
mov     edx, esi
add     esi, 1
add     edi, 1
cmp     edi, 2
mov     [ebx+edx+4], al
mov     [ebx+104h], esi
mov     [ebx+108h], al
jz      loc_63217d9a
cmp     esi, 0ffh
movzx   eax, ds:byte_6322d044[edi]
jnz     short loc_632164a4
mov     edx, [ebx+110h]
mov     esi, 1
mov     byte ptr [esp+9ch+var_84], al
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], edx
mov     [esp+9ch+buffer], ebp
call    dword ptr [ebx+10ch]
xor     edx, edx
movzx   eax, byte ptr [esp+9ch+var_84]
add     dword ptr [ebx+124h], 1
jmp     short loc_632164a9
test    byte ptr [ebx], 20h
jnz     loc_63218008
mov     esi, [ebp+4]
test    esi, esi
jz      loc_63217ffe
mov     eax, [ebx+118h]
mov     [esp+9ch+var_60], ebp
mov     [esp+9ch+var_5c], 0
mov     dword ptr [esp+9ch+var_64], eax
lea     eax, [esp+9ch+var_64]
mov     [ebx+118h], eax
mov     eax, [ebx+114h]
mov     edx, [ebp+4]
mov     [esp+9ch+var_58], eax
mov     eax, ebx
call    sub_63215f00
mov     ecx, [esp+9ch+var_5c]
mov     eax, dword ptr [esp+9ch+var_64]
test    ecx, ecx
mov     [ebx+118h], eax
jnz     def_632183b9
test    byte ptr [ebx], 20h
jnz     def_632183b9
mov     edx, [ebx+104h]
xor     eax, eax
cmp     edx, 0ffh
jz      loc_63218766
mov     byte ptr [ebx+edx+4], 20h
add     edx, 1
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 20h
test    eax, eax
jnz     def_632183b9
mov     ecx, [ebx+118h]
lea     edx, [ebp+8]
mov     eax, ebx
call    sub_632195c0
jmp     def_632183b9
mov     ecx, [ebx+118h]
lea     esi, [esp+9ch+var_64]
mov     eax, [ebx+114h]
mov     edi, esi
mov     [ebx+118h], esi
mov     [esp+9ch+var_60], edx
test    ecx, ecx
mov     [esp+9ch+var_7c], ecx
mov     dword ptr [esp+9ch+var_64], ecx
mov     [esp+9ch+var_5c], 0
mov     [esp+9ch+var_58], eax
jz      loc_63218628
mov     eax, [ecx+4]
mov     eax, [eax]
sub     eax, 17h
cmp     eax, 2
ja      loc_63218628
mov     eax, ecx
mov     ecx, 1
mov     [esp+9ch+var_78], 1
mov     [esp+9ch+var_74], edx
mov     [esp+9ch+var_80], esi
jmp     short loc_6321662d
mov     edx, [eax+4]
mov     edx, [edx]
sub     edx, 17h
cmp     edx, 2
ja      short loc_6321667e
mov     edx, [eax+8]
test    edx, edx
jnz     short loc_63216678
cmp     ecx, 3
ja      def_63215f38
mov     ebp, [eax]
mov     edx, ecx
add     ecx, 1
shl     edx, 4
lea     esi, [esp+edx+9ch+var_64]
mov     dword ptr [esp+edx+9ch+var_64], ebp
mov     ebp, [eax+4]
mov     [esi+4], ebp
mov     ebp, [eax+8]
mov     [esi+8], ebp
mov     ebp, [eax+0ch]
mov     [esi+0ch], ebp
mov     dword ptr [esp+edx+9ch+var_64], edi
mov     edi, [esp+9ch+var_80]
add     edi, edx
mov     [ebx+118h], edi
mov     dword ptr [eax+8], 1
mov     eax, [eax]
test    eax, eax
jnz     short loc_63216620
mov     ebp, [esp+9ch+var_74]
mov     esi, [esp+9ch+var_80]
mov     [esp+9ch+var_78], ecx
mov     edx, [ebp+8]
mov     eax, ebx
call    sub_63215f00
mov     eax, [esp+9ch+var_5c]
mov     ecx, [esp+9ch+var_7c]
test    eax, eax
mov     [ebx+118h], ecx
jnz     def_632183b9
cmp     [esp+9ch+var_78], 1
jz      short loc_632166e1
mov     edi, [esp+9ch+var_78]
sub     edi, 1
mov     eax, edi
shl     eax, 4
lea     esi, [esi+eax+4]
jmp     short loc_632166c6
sub     edi, 1
mov     edx, [esi]
mov     eax, ebx
sub     esi, 10h
call    sub_63218970
cmp     edi, 1
jnz     short loc_632166c3
mov     ecx, [ebx+118h]
mov     [esp+9ch+var_7c], ecx
mov     ecx, [esp+9ch+var_7c]
lea     edx, [ebp+4]
mov     eax, ebx
call    sub_63219340
jmp     def_632183b9
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216722
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 8
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_632179f5
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d047[esi]
jnz     short loc_63216701
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216706
test    byte ptr [ebx], 4
mov     eax, [edx+4]
jnz     loc_63217e0c
mov     edi, [eax+4]
mov     ebp, [eax]
test    edi, edi
jz      def_632183b9
lea     edx, [ebx+4]
mov     eax, [ebx+104h]
xor     esi, esi
mov     [esp+9ch+var_80], edx
jmp     short loc_632167b5
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     edi, esi
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      def_632183b9
cmp     eax, 0ffh
movzx   edx, byte ptr [ebp+esi+0]
jnz     short loc_63216795
mov     eax, [ebx+110h]
mov     ecx, [esp+9ch+var_80]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], ecx
mov     [esp+9ch+format], 0ffh
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_6321679a
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216831
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 0eh
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_632178c8
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d0e6[esi]
jnz     short loc_63216810
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216815
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_632168a8
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 9
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f80
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d050[esi]
jnz     short loc_63216887
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_6321688c
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216921
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 9
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63217a90
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d050[esi]
jnz     short loc_63216900
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216905
mov     edx, [edx+4]
cmp     dword ptr [edx], 2eh
jz      loc_6321809a
mov     eax, ebx
call    sub_63219a90
mov     edx, [ebp+8]
mov     eax, ebx
call    sub_63219b60
jmp     def_632183b9
mov     eax, [edx+8]
cmp     dword ptr [eax], 31h
jnz     def_63215f38
mov     edx, [edx+4]
cmp     dword ptr [edx], 2ch
jz      loc_63218539
mov     edx, [eax+4]
mov     eax, ebx
mov     edi, offset aix
call    sub_63219b60
mov     edx, [ebp+4]
mov     ecx, 3
mov     eax, [edx+4]
mov     eax, [eax]
mov     [esp+9ch+var_80], eax
mov     esi, eax
repe cmpsb
jz      loc_632184cc
mov     esi, [esp+9ch+var_80]
mov     edi, offset byte_6322cf23
mov     ecx, 3
repe cmpsb
jnz     loc_63218601
mov     eax, [ebp+8]
mov     edx, [eax+8]
mov     eax, ebx
call    sub_63219b60
mov     eax, [ebp+4]
cmp     dword ptr [eax], 2ch
jnz     def_632183b9
mov     eax, [eax+4]
cmp     dword ptr [eax+8], 1
jnz     def_632183b9
mov     eax, [eax+4]
cmp     byte ptr [eax], 3eh
jnz     def_632183b9
mov     edx, 29h
mov     eax, ebx
call    sub_63213b70
jmp     def_632183b9
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216a55
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 1ch
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d0bd[esi]
jnz     short loc_63216a34
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216a39
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216ad1
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 0bh
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cf39[esi]
jnz     short loc_63216ab0
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216ab5
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216b48
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 8
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cf45[esi]
jnz     short loc_63216b27
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216b2c
mov     edx, [edx+4]
mov     eax, ebx
call    sub_63213be0
test    eax, eax
jz      loc_632186a6
cmp     dword ptr [eax], 2bh
jnz     def_632183b9
mov     edi, [eax+4]
xor     esi, esi
test    edi, edi
jnz     short loc_63216bce
jmp     def_632183b9
cmp     dword ptr [eax], 2bh
jnz     short loc_63216bd8
mov     ecx, [eax+4]
test    ecx, ecx
jz      short loc_63216bd8
mov     esi, edx
mov     eax, [eax+8]
lea     edx, [esi+1]
test    eax, eax
jnz     short loc_63216bc0
mov     ebp, [ebp+4]
lea     ecx, [ebx+4]
xor     edi, edi
mov     [esp+9ch+var_80], edx
mov     [esp+9ch+var_78], ecx
mov     [esp+9ch+var_7c], ebp
jmp     short loc_63216bfd
add     edi, 1
cmp     edi, [esp+9ch+var_80]
jz      def_632183b9
mov     edx, [esp+9ch+var_7c]
mov     eax, ebx
mov     [ebx+120h], edi
call    sub_63215f00
cmp     edi, esi
jge     short loc_63216bf0
mov     eax, [ebx+104h]
xor     ebp, ebp
jmp     short loc_63216c3d
mov     ecx, eax
add     eax, 1
add     ebp, 1
cmp     ebp, 2
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      short loc_63216bf0
cmp     eax, 0ffh
movzx   edx, ss:byte_6322d044[ebp]
jnz     short loc_63216c20
mov     eax, [ebx+110h]
mov     ecx, [esp+9ch+var_78]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], ecx
mov     [esp+9ch+format], 0ffh
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216c25
mov     edx, [edx+4]
xor     esi, esi
cmp     dword ptr [edx], 23h
jnz     short loc_63216cb1
mov     edx, [edx+4]
mov     esi, [edx+10h]
cmp     esi, 1
jb      short loc_63216cb1
cmp     esi, 6
jbe     loc_63218390
cmp     esi, 7
jz      loc_63218349
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_63218311
mov     byte ptr [ebx+eax+4], 28h
mov     eax, ebx
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 28h
mov     edx, [ebp+4]
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_632182d9
mov     byte ptr [ebx+eax+4], 29h
mov     byte ptr [ebx+108h], 29h
cmp     dword ptr [ebp+0], 36h
mov     [ebx+104h], edx
jz      loc_632184a6
cmp     esi, 8
jnz     loc_63215f80
mov     eax, [ebx+104h]
cmp     eax, 0ffh
jz      loc_632187d1
mov     byte ptr [ebx+eax+4], 5bh
add     eax, 1
mov     [ebx+104h], eax
mov     eax, ebx
mov     byte ptr [ebx+108h], 5bh
mov     edx, [ebp+8]
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
jz      loc_63218733
mov     byte ptr [ebx+eax+4], 5dh
add     eax, 1
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 5dh
jmp     def_632183b9
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216da3
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 0eh
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d07a[esi]
jnz     short loc_63216d82
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216d87
mov     eax, [ebx+104h]
movzx   edx, byte ptr [edx+4]
cmp     eax, 0ffh
lea     ecx, [eax+1]
jz      loc_63218228
mov     [ebx+eax+4], dl
mov     [ebx+104h], ecx
mov     [ebx+108h], dl
jmp     def_632183b9
mov     eax, [edx+4]
lea     esi, [esp+9ch+var_64]
mov     [esp+9ch+format], offset format
mov     ebp, esi
mov     [esp+9ch+buffer], esi
mov     [esp+9ch+var_94], eax
call    sprintf
mov     edx, [ebp+0]
add     ebp, 4
lea     eax, [edx-1010101h]
not     edx
and     eax, edx
and     eax, 80808080h
jz      short loc_63216e36
mov     edx, eax
shr     edx, 10h
test    eax, 8080h
cmovz   eax, edx
lea     edx, [ebp+2]
cmovz   ebp, edx
add     al, al
sbb     ebp, 3
sub     ebp, esi
jz      def_632183b9
lea     edx, [ebx+4]
mov     eax, [ebx+104h]
xor     edi, edi
mov     [esp+9ch+var_80], edx
jmp     short loc_63216ea0
mov     ecx, eax
add     eax, 1
add     edi, 1
cmp     edi, ebp
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      def_632183b9
cmp     eax, 0ffh
movzx   edx, byte ptr [esi+edi]
jnz     short loc_63216e80
mov     eax, [ebx+110h]
mov     ecx, [esp+9ch+var_80]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], ecx
mov     [esp+9ch+format], 0ffh
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216e85
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216f18
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 0ah
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63217ab0
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d089[esi]
jnz     short loc_63216ef7
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216efc
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63216f91
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 1dh
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d09f[esi]
jnz     short loc_63216f70
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216f75
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63217008
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 15h
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cf9e[esi]
jnz     short loc_63216fe7
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63216fec
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63217081
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 11h
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cfb4[esi]
jnz     short loc_63217060
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217065
test    byte ptr [ebx], 4
jnz     loc_63217ec0
mov     edi, [edx+8]
mov     ebp, [edx+4]
test    edi, edi
jz      def_632183b9
lea     edx, [ebx+4]
mov     eax, [ebx+104h]
xor     esi, esi
mov     [esp+9ch+var_80], edx
jmp     short loc_63217112
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     edi, esi
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      def_632183b9
cmp     eax, 0ffh
movzx   edx, byte ptr [ebp+esi+0]
jnz     short loc_632170f2
mov     eax, [ebx+110h]
mov     ecx, [esp+9ch+var_80]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], ecx
mov     [esp+9ch+format], 0ffh
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_632170f7
mov     edx, [edx+4]
mov     eax, ebx
call    sub_63215f00
mov     eax, [ebx+104h]
test    byte ptr [ebx], 4
jnz     loc_63217e9b
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_632171a1
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 2
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f80
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cf2c[esi]
jnz     short loc_63217180
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217185
mov     ecx, [ebx+118h]
mov     dword ptr [ebx+118h], 0
mov     edi, [edx+4]
mov     [esp+9ch+var_7c], ecx
test    edi, edi
jz      def_63215f38
mov     eax, [ebx+114h]
lea     esi, [esp+9ch+var_64]
mov     dword ptr [esp+9ch+var_64], 0
mov     [ebx+118h], esi
mov     [esp+9ch+var_60], edi
mov     [esp+9ch+var_80], eax
mov     [esp+9ch+var_58], eax
mov     eax, [edi]
mov     [esp+9ch+var_5c], 0
sub     eax, 1ah
cmp     eax, 2
ja      loc_632188ff
lea     eax, [esp+9ch+var_54]
mov     ecx, 1
mov     edi, [edi+4]
test    edi, edi
jz      def_63215f38
cmp     ecx, 4
jz      def_63215f38
mov     edx, [ebx+118h]
mov     [eax+4], edi
mov     dword ptr [eax+8], 0
mov     [eax], edx
mov     edx, ecx
add     ecx, 1
shl     edx, 4
add     edx, esi
mov     [ebx+118h], edx
mov     edx, [esp+9ch+var_80]
mov     [eax+0ch], edx
mov     edx, [edi]
add     eax, 10h
sub     edx, 1ah
cmp     edx, 2
jbe     short loc_6321724c
mov     eax, [edi]
cmp     eax, 4
jz      loc_6321860d
cmp     eax, 2
jnz     loc_63217348
mov     edx, [edi+8]
cmp     dword ptr [edx], 3fh
jz      loc_63218837
mov     eax, [edx]
sub     eax, 1ah
cmp     eax, 2
ja      loc_63217348
cmp     ecx, 3
ja      def_63215f38
lea     eax, [ecx-1]
mov     [esp+9ch+var_78], eax
shl     eax, 4
mov     [esp+9ch+var_70], ebp
add     eax, esi
mov     ebp, [esp+9ch+var_78]
mov     [esp+9ch+var_74], edi
jmp     short loc_632172f6
add     eax, 10h
cmp     ecx, 4
jz      def_63215f38
lea     ebp, [ecx-1]
mov     edi, [eax+4]
mov     [eax+4], edx
mov     [eax+14h], edi
mov     edi, [eax+8]
mov     dword ptr [eax+8], 0
mov     [eax+18h], edi
mov     edi, [eax+0ch]
mov     [eax+1ch], edi
mov     edi, ebp
shl     edi, 4
add     edi, esi
mov     [eax+10h], edi
mov     edi, ecx
add     ecx, 1
shl     edi, 4
add     edi, esi
mov     [ebx+118h], edi
mov     edi, [esp+9ch+var_80]
mov     [eax+0ch], edi
mov     edx, [edx+4]
mov     edi, [edx]
sub     edi, 1ah
cmp     edi, 2
jbe     short loc_632172e7
mov     edi, [esp+9ch+var_74]
mov     ebp, [esp+9ch+var_70]
mov     edx, [ebp+8]
mov     eax, ebx
mov     [esp+9ch+var_84], ecx
call    sub_63215f00
mov     ecx, [esp+9ch+var_84]
cmp     dword ptr [edi], 4
jz      loc_632186c1
test    ecx, ecx
jz      loc_63218415
sub     ecx, 1
mov     eax, ecx
lea     edi, [ebx+4]
shl     eax, 4
mov     ebp, edi
lea     esi, [esi+eax+8]
mov     edi, ecx
jmp     short loc_6321738e
sub     esi, 10h
test    edi, edi
jz      loc_63218415
sub     edi, 1
mov     eax, [esi]
test    eax, eax
jnz     short loc_63217380
mov     eax, [ebx+104h]
cmp     eax, 0ffh
jz      loc_632186d0
mov     edx, [esi-4]
mov     byte ptr [ebx+eax+4], 20h
add     eax, 1
mov     [ebx+104h], eax
mov     eax, ebx
mov     byte ptr [ebx+108h], 20h
call    sub_63218970
jmp     short loc_63217380
mov     edi, [ebx+118h]
test    byte ptr [ebx], 4
mov     dword ptr [ebx+118h], 0
mov     edx, [edx+4]
mov     [esp+9ch+var_80], edi
jz      short loc_632173f2
mov     esi, [edx]
test    esi, esi
jnz     short loc_632173f2
cmp     dword ptr [edx+8], 6
jz      loc_6321859e
mov     eax, ebx
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     byte ptr [ebx+108h], 3ch
jz      loc_6321845c
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_632182a1
mov     byte ptr [ebx+eax+4], 3ch
mov     eax, ebx
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 3ch
mov     edx, [ebp+8]
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     byte ptr [ebx+108h], 3eh
jz      loc_63218481
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_63218269
mov     byte ptr [ebx+eax+4], 3eh
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 3eh
mov     eax, [esp+9ch+var_80]
mov     [ebx+118h], eax
jmp     def_632183b9
mov     esi, [ebx+114h]
test    esi, esi
jz      def_63215f38
mov     eax, [esi+4]
mov     edx, [edx+4]
mov     eax, [eax+8]
test    eax, eax
jz      short loc_632174bc
cmp     dword ptr [eax], 2bh
jnz     def_63215f38
test    edx, edx
jg      short loc_632174b2
jmp     loc_6321883f
cmp     dword ptr [eax], 2bh
jnz     def_63215f38
test    edx, edx
jz      short loc_632174d1
mov     eax, [eax+8]
sub     edx, 1
test    eax, eax
jnz     short loc_632174a5
mov     ecx, 1
test    edx, edx
jnz     def_63215f38
test    cl, cl
jnz     def_63215f38
mov     edx, [eax+4]
test    edx, edx
jz      def_63215f38
cmp     dword ptr [edx], 2bh
jz      loc_63218138
mov     eax, [esi]
mov     [ebx+114h], eax
mov     eax, ebx
call    sub_63215f00
mov     [ebx+114h], esi
jmp     def_632183b9
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63217531
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 6
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63217cc2
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d098[esi]
jnz     short loc_63217510
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217515
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_632175a8
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 18h
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63217c40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cf4e[esi]
jnz     short loc_63217587
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_6321758c
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63217621
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 0dh
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cf6c[esi]
jnz     short loc_63217600
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217605
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63217698
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 12h
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cf7a[esi]
jnz     short loc_63217677
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_6321767c
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63217711
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 10h
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f40
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cf8d[esi]
jnz     short loc_632176f0
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_632176f5
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63217788
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 8
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63217ae5
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d0da[esi]
jnz     short loc_63217767
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_6321776c
mov     edx, [edx+4]
mov     eax, ebx
xor     esi, esi
lea     edi, [ebx+4]
call    sub_63215f00
mov     eax, [ebx+104h]
jmp     short loc_63217809
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 8
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_632179c0
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d0f5[esi]
jnz     short loc_632177e8
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_632177ed
mov     edx, [edx+4]
mov     eax, ebx
call    sub_63215f00
mov     edx, [ebp+8]
mov     eax, ebx
call    sub_63215f00
jmp     def_632183b9
mov     eax, [edx+8]
cmp     dword ptr [eax], 33h
jnz     def_63215f38
mov     edx, [eax+8]
cmp     dword ptr [edx], 34h
jnz     def_63215f38
mov     edx, [eax+4]
mov     eax, ebx
call    sub_63219b60
mov     edx, [ebp+4]
mov     eax, ebx
call    sub_63219a90
mov     eax, [ebp+8]
mov     eax, [eax+8]
mov     edx, [eax+4]
mov     eax, ebx
call    sub_63219b60
mov     eax, ebx
mov     edx, offset asc_6322d05d
call    sub_63215e50
mov     eax, [ebp+8]
mov     eax, [eax+8]
mov     edx, [eax+8]
mov     eax, ebx
call    sub_63219b60
jmp     def_632183b9
mov     eax, [ebp+4]
lea     esi, [esp+9ch+var_64]
mov     [esp+9ch+format], offset format
mov     ebp, esi
mov     [esp+9ch+buffer], esi
add     eax, 1
mov     [esp+9ch+var_94], eax
call    sprintf
mov     edx, [ebp+0]
add     ebp, 4
lea     eax, [edx-1010101h]
not     edx
and     eax, edx
and     eax, 80808080h
jz      short loc_632178e8
mov     edx, eax
shr     edx, 10h
test    eax, 8080h
cmovz   eax, edx
lea     edx, [ebp+2]
cmovz   ebp, edx
add     al, al
mov     eax, [ebx+104h]
sbb     ebp, 3
sub     ebp, esi
jz      short loc_63217996
lea     edx, [ebx+4]
xor     edi, edi
mov     [esp+9ch+var_80], edx
jmp     short loc_6321794c
mov     ecx, eax
add     eax, 1
add     edi, 1
cmp     edi, ebp
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      short loc_63217996
cmp     eax, 0ffh
movzx   edx, byte ptr [esi+edi]
jnz     short loc_63217930
mov     eax, [ebx+110h]
mov     ecx, [esp+9ch+var_80]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], ecx
mov     [esp+9ch+format], 0ffh
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217935
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_63217dd4
mov     byte ptr [ebx+eax+4], 7dh
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 7dh
jmp     def_632183b9
mov     edx, [ebp+8]
mov     eax, ebx
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_632181b8
mov     byte ptr [ebx+eax+4], 5dh
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 5dh
jmp     def_632183b9
mov     edx, [ebp+4]
mov     edi, [edx+4]
movzx   ecx, byte ptr [edi]
sub     ecx, 61h
cmp     cl, 19h
jbe     loc_63217fb2
mov     ebp, [edx+8]
test    ebp, ebp
jz      def_632183b9
lea     edx, [ebx+4]
mov     eax, [ebx+104h]
xor     esi, esi
mov     [esp+9ch+var_80], edx
jmp     short loc_63217a46
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     ebp, esi
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      def_632183b9
cmp     eax, 0ffh
movzx   edx, byte ptr [edi+esi]
jnz     short loc_63217a26
mov     eax, [ebx+110h]
mov     ecx, [esp+9ch+var_80]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], ecx
mov     [esp+9ch+format], 0ffh
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217a2b
mov     edx, [ebp+4]
cmp     dword ptr [edx], 4
jnz     loc_63215f43
lea     edx, [ebp+4]
mov     eax, ebx
call    sub_632198a0
jmp     def_632183b9
mov     edx, [ebp+4]
mov     eax, ebx
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_632181f0
mov     byte ptr [ebx+eax+4], 29h
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 29h
jmp     def_632183b9
mov     edx, [ebp+4]
mov     eax, ebx
xor     si, si
lea     edi, [ebx+4]
call    sub_63215f00
mov     eax, [ebx+104h]
jmp     short loc_63217b1d
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 2
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      short loc_63217b66
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d0e3[esi]
jnz     short loc_63217b00
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217b05
mov     eax, [ebp+8]
lea     esi, [esp+9ch+var_64]
mov     [esp+9ch+format], offset format
mov     ebp, esi
mov     [esp+9ch+buffer], esi
add     eax, 1
mov     [esp+9ch+var_94], eax
call    sprintf
mov     edx, [ebp+0]
add     ebp, 4
lea     eax, [edx-1010101h]
not     edx
and     eax, edx
and     eax, 80808080h
jz      short loc_63217b86
mov     edx, eax
shr     edx, 10h
test    eax, 8080h
cmovz   eax, edx
lea     edx, [ebp+2]
cmovz   ebp, edx
add     al, al
mov     eax, [ebx+104h]
sbb     ebp, 3
sub     ebp, esi
jz      loc_63217996
lea     edx, [ebx+4]
xor     edi, edi
mov     [esp+9ch+var_80], edx
jmp     short loc_63217bf0
mov     ecx, eax
add     eax, 1
add     edi, 1
cmp     edi, ebp
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63217996
cmp     eax, 0ffh
movzx   edx, byte ptr [esi+edi]
jnz     short loc_63217bd0
mov     eax, [ebx+110h]
mov     ecx, [esp+9ch+var_80]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], ecx
mov     [esp+9ch+format], 0ffh
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217bd5
mov     edx, [ebp+4]
mov     eax, ebx
xor     si, si
lea     edi, [ebx+4]
call    sub_63215f00
mov     eax, [ebx+104h]
jmp     short loc_63217c79
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 4
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63215f80
cmp     eax, 0ffh
movzx   edx, ds:byte_6322cf67[esi]
jnz     short loc_63217c58
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217c5d
mov     eax, [ebp+4]
lea     esi, [esp+9ch+var_64]
mov     [esp+9ch+format], offset format
mov     ebp, esi
mov     [esp+9ch+buffer], esi
add     eax, 1
mov     [esp+9ch+var_94], eax
call    sprintf
mov     edx, [ebp+0]
add     ebp, 4
lea     eax, [edx-1010101h]
not     edx
and     eax, edx
and     eax, 80808080h
jz      short loc_63217ce2
mov     edx, eax
shr     edx, 10h
test    eax, 8080h
cmovz   eax, edx
lea     edx, [ebp+2]
cmovz   ebp, edx
add     al, al
mov     eax, [ebx+104h]
sbb     ebp, 3
sub     ebp, esi
jz      loc_63217996
lea     edx, [ebx+4]
xor     edi, edi
mov     [esp+9ch+var_80], edx
jmp     short loc_63217d50
mov     ecx, eax
add     eax, 1
add     edi, 1
cmp     edi, ebp
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63217996
cmp     eax, 0ffh
movzx   edx, byte ptr [esi+edi]
jnz     short loc_63217d30
mov     eax, [ebx+110h]
mov     ecx, [esp+9ch+var_80]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], ecx
mov     [esp+9ch+format], 0ffh
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217d35
mov     ebp, [esp+9ch+var_80]
mov     eax, ebx
mov     edi, [ebx+124h]
mov     edx, [ebp+8]
call    sub_63215f00
cmp     edi, [ebx+124h]
jnz     def_632183b9
cmp     [ebx+104h], esi
jnz     def_632183b9
sub     esi, 2
mov     [ebx+104h], esi
jmp     def_632183b9
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_632179a4
mov     edi, [eax+0ch]
mov     ebp, [eax+8]
test    edi, edi
jz      def_632183b9
lea     edx, [ebx+4]
mov     eax, [ebx+104h]
xor     esi, esi
mov     [esp+9ch+var_80], edx
jmp     short loc_63217e50
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     edi, esi
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      def_632183b9
cmp     eax, 0ffh
movzx   edx, byte ptr [ebp+esi+0]
jnz     short loc_63217e30
mov     eax, [ebx+110h]
mov     ecx, [esp+9ch+var_80]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], ecx
mov     [esp+9ch+format], 0ffh
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63217e35
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_63218566
mov     byte ptr [ebx+eax+4], 2eh
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 2eh
jmp     loc_63215f80
mov     esi, [edx+4]
mov     edi, [edx+8]
add     edi, esi
cmp     esi, edi
jnb     def_632183b9
lea     eax, [ebx+4]
mov     [esp+9ch+var_80], eax
jmp     short loc_63217f0c
mov     edx, [ebx+104h]
cmp     edx, 0ffh
lea     ecx, [edx+1]
jz      short loc_63217f70
mov     [ebx+edx+4], al
mov     [ebx+104h], ecx
mov     [ebx+108h], al
add     esi, 1
cmp     edi, esi
jbe     def_632183b9
mov     eax, edi
sub     eax, esi
cmp     eax, 3
movzx   eax, byte ptr [esi]
jle     short loc_63217ee0
cmp     al, 5fh
jnz     short loc_63217ee0
cmp     byte ptr [esi+1], 5fh
jnz     short loc_63217ee0
cmp     byte ptr [esi+2], 55h
jnz     short loc_63217ee0
lea     ebp, [esi+3]
cmp     edi, ebp
jbe     short loc_63217ee0
mov     [esp+9ch+var_7c], esi
xor     ecx, ecx
mov     esi, eax
jmp     short loc_63217f4f
movsx   eax, dl
sub     eax, 30h
shl     ecx, 4
add     ebp, 1
add     ecx, eax
cmp     ebp, edi
jz      loc_63218668
movzx   edx, byte ptr [ebp+0]
lea     eax, [edx-30h]
cmp     al, 9
jbe     short loc_63217f39
lea     eax, [edx-41h]
cmp     al, 5
ja      short loc_63217fdd
movsx   eax, dl
sub     eax, 37h
jmp     short loc_63217f3f
mov     edx, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], al
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], edx
mov     edx, [esp+9ch+var_80]
mov     [esp+9ch+buffer], edx
call    dword ptr [ebx+10ch]
mov     ecx, 1
xor     edx, edx
add     dword ptr [ebx+124h], 1
movzx   eax, byte ptr [esp+9ch+var_84]
jmp     loc_63217ef1
cmp     eax, 0ffh
jz      loc_632185ce
mov     byte ptr [ebx+eax+4], 20h
add     eax, 1
mov     byte ptr [ebx+108h], 20h
mov     [ebx+104h], eax
mov     edx, [ebp+4]
mov     edi, [edx+4]
jmp     loc_63217a0a
lea     eax, [edx-61h]
cmp     al, 5
ja      loc_632188ac
movsx   eax, dl
sub     eax, 57h
jmp     loc_63217f3f
mov     eax, [ebx+104h]
jmp     loc_63216386
mov     eax, [ebx]
and     eax, 20h
jmp     loc_6321659f
mov     ecx, [ebx+118h]
lea     edx, [edx+8]
mov     eax, ebx
call    sub_632195c0
jmp     loc_63216518
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63218051
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 5
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63216348
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d030[esi]
jnz     short loc_63218030
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     short loc_63218035
mov     eax, [ebx+104h]
cmp     eax, 0ffh
jz      loc_63218635
mov     byte ptr [ebx+eax+4], 28h
add     eax, 1
mov     byte ptr [ebx+108h], 28h
mov     [ebx+104h], eax
mov     eax, [ebp+4]
mov     edx, [eax+4]
cmp     dword ptr [edx], 4
jz      loc_6321852a
mov     eax, ebx
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
jz      loc_63218673
mov     byte ptr [ebx+eax+4], 29h
add     eax, 1
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 29h
jmp     loc_6321697d
mov     eax, [ebx+110h]
mov     byte ptr [ebx+esi+4], 0
mov     [esp+9ch+format], esi
xor     esi, esi
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     dword ptr [ebx+104h], 0
add     dword ptr [ebx+124h], 1
jmp     loc_63216497
mov     eax, [ebx+120h]
test    eax, eax
jg      short loc_63218152
jmp     short loc_6321815c
cmp     dword ptr [edx], 2bh
jnz     def_63215f38
test    eax, eax
nop
jz      short loc_6321816c
mov     edx, [edx+8]
sub     eax, 1
test    edx, edx
jnz     short loc_63218144
test    edx, edx
jz      def_63215f38
test    eax, eax
jnz     def_63215f38
mov     edx, [edx+4]
test    edx, edx
jnz     loc_632174e5
jmp     def_63215f38
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63215f69
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_632179de
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63217ace
mov     eax, [ebx+110h]
mov     byte ptr [esp+9ch+var_84], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     ecx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+9ch+var_84]
jmp     loc_63216e04
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63217457
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_6321741a
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63216cf5
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63216cc5
mov     edx, [ebp+8]
mov     ecx, [edx]
test    ecx, ecx
jnz     loc_63216cb1
cmp     dword ptr [edx+8], 1
jnz     loc_63216cb1
cmp     eax, 35h
jnz     loc_63216cb1
mov     eax, [edx+4]
movzx   eax, byte ptr [eax]
cmp     al, 30h
jz      loc_6321891d
cmp     al, 31h
jnz     loc_63216cb1
mov     edx, offset atrue
mov     eax, ebx
call    sub_63215e50
jmp     def_632183b9
mov     edx, [ebp+8]
mov     edi, [edx]
test    edi, edi
jnz     loc_63216cb1
cmp     eax, 36h
jz      loc_63218909
mov     eax, ebx
sub     esi, 2
call    sub_63215f00
cmp     esi, 4
ja      def_632183b9
jmp     ds:jpt_632183b9[esi*4]
mov     edx, offset all
mov     eax, ebx
call    sub_63215e50
jmp     def_632183b9
mov     edx, offset aul
mov     eax, ebx
call    sub_63215e50
jmp     def_632183b9
mov     edx, 6ch
mov     eax, ebx
call    sub_63213b70
jmp     def_632183b9
mov     edx, 75h
mov     eax, ebx
call    sub_63213b70
jmp     def_632183b9
mov     edx, offset aull
mov     eax, ebx
call    sub_63215e50
jmp     def_632183b9
mov     ecx, [esp+9ch+var_7c]
mov     [ebx+118h], ecx
jmp     def_632183b9
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [ebx+124h], 1
jmp     loc_63216374
cmp     eax, 0ffh
jz      loc_6321879e
mov     byte ptr [ebx+eax+4], 20h
add     eax, 1
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 20h
jmp     loc_6321740c
cmp     eax, 0ffh
jz      loc_63218804
mov     byte ptr [ebx+eax+4], 20h
add     eax, 1
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 20h
jmp     loc_63217449
cmp     edx, 0ffh
jz      loc_63218700
mov     byte ptr [ebx+edx+4], 2dh
add     edx, 1
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 2dh
jmp     loc_63216d11
mov     eax, [ebx+104h]
cmp     eax, 0ffh
jz      loc_63218879
mov     byte ptr [ebx+eax+4], 5bh
add     eax, 1
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 5bh
mov     eax, [ebp+8]
mov     edx, [eax+8]
mov     eax, ebx
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
jz      loc_63218846
mov     byte ptr [ebx+eax+4], 5dh
add     eax, 1
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 5dh
jmp     loc_632169f1
lea     edx, [eax+4]
mov     eax, ebx
call    sub_632198a0
jmp     loc_632180d6
mov     edx, [edx+4]
cmp     dword ptr [edx+8], 1
jnz     loc_632169a4
mov     edx, [edx+4]
cmp     byte ptr [edx], 3eh
jnz     loc_632169a4
mov     eax, ebx
mov     edx, 28h
call    sub_63213b70
mov     eax, [ebp+8]
jmp     loc_632169a4
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63217ea9
mov     esi, [edx+4]
mov     edi, offset ajarray
mov     ecx, 6
repe cmpsb
jnz     loc_632173f2
mov     edx, [ebp+8]
mov     eax, ebx
call    sub_63215f00
mov     edx, offset asc_6322cf36
mov     eax, ebx
call    sub_63215e50
jmp     loc_63217469
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63217fbd
mov     eax, ebx
call    sub_63219a90
jmp     loc_632169e4
mov     eax, [esp+9ch+var_80]
mov     [esp+9ch+var_20], edi
mov     [esp+9ch+var_24], eax
lea     eax, [esp+9ch+var_24]
mov     [ebx+114h], eax
jmp     loc_63217348
mov     [esp+9ch+var_78], 1
jmp     loc_6321668a
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_632180ab
mov     eax, esi
mov     esi, [esp+9ch+var_7c]
jmp     loc_63217ee0
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_632180e7
mov     edx, [ebp+4]
mov     eax, ebx
call    sub_63219b60
mov     edx, offset asc_6322d094
mov     eax, ebx
call    sub_63215e50
jmp     def_632183b9
mov     eax, [esp+9ch+var_24]
mov     [ebx+114h], eax
jmp     loc_63217363
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+buffer], ebp
mov     [esp+9ch+var_94], eax
call    dword ptr [ebx+10ch]
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_632173a5
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
xor     edx, edx
add     dword ptr [ebx+124h], 1
jmp     loc_632184b2
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63216d5b
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
mov     eax, [ebx]
xor     edx, edx
add     dword ptr [ebx+124h], 1
and     eax, 20h
jmp     loc_6321658a
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63218467
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63216d2b
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_6321848c
mov     edx, [edx+4]
jmp     loc_632172b6
xor     ecx, ecx
jmp     loc_632174c1
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63218510
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
lea     eax, [ebx+4]
mov     [esp+9ch+buffer], eax
call    dword ptr [ebx+10ch]
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_632184dd
cmp     edi, ebp
mov     eax, esi
mov     esi, [esp+9ch+var_7c]
jbe     loc_63217ee0
cmp     ecx, 0ffh
ja      loc_63217ee0
cmp     dl, 5fh
jnz     loc_63217ee0
cmp     dword ptr [ebx+104h], 0ffh
mov     esi, ecx
jz      short loc_6321892e
mov     eax, [ebx+104h]
mov     ecx, esi
mov     esi, ebp
mov     [ebx+108h], cl
mov     [ebx+eax+4], cl
add     eax, 1
mov     [ebx+104h], eax
jmp     loc_63217f01
mov     ecx, 1
jmp     loc_63217296
mov     edx, 2dh
mov     eax, ebx
call    sub_63213b70
mov     edx, [ebp+8]
jmp     loc_632183a6
mov     edx, offset afalse
mov     eax, ebx
call    sub_63215e50
jmp     def_632183b9
mov     eax, [ebx+110h]
mov     edx, [esp+9ch+var_80]
mov     byte ptr [ebx+103h], 0
mov     [esp+9ch+format], 0ffh
mov     [esp+9ch+var_94], eax
mov     [esp+9ch+buffer], edx
call    dword ptr [ebx+10ch]
mov     dword ptr [ebx+104h], 0
add     dword ptr [ebx+124h], 1
jmp     loc_632188dd
push    ebp
push    edi
push    esi
push    ebx
mov     ebx, eax
sub     esp, 2ch
mov     eax, [edx]
sub     eax, 3
cmp     eax, 26h
jbe     short loc_63218991
add     esp, 2ch
mov     eax, ebx
pop     ebx
pop     esi
pop     edi
pop     ebp
jmp     sub_63215f00
jmp     ds:jpt_63218991[eax*4]
mov     eax, [ebx+104h]
xor     esi, esi
lea     ebp, [ebx+4]
jmp     short loc_632189c6
mov     edi, eax
add     eax, 1
add     esi, 1
cmp     esi, 0ah
mov     [ebx+edi+4], cl
mov     [ebx+104h], eax
mov     [ebx+108h], cl
jz      loc_63218e20
cmp     eax, 0ffh
movzx   ecx, ds:byte_6322d256[esi]
jnz     short loc_632189a5
mov     eax, [ebx+110h]
xor     edi, edi
mov     [esp+3ch+var_24], edx
mov     [esp+3ch+var_20], cl
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_3c], ebp
call    dword ptr [ebx+10ch]
mov     eax, 1
movzx   ecx, [esp+3ch+var_20]
add     dword ptr [ebx+124h], 1
mov     edx, [esp+3ch+var_24]
jmp     short loc_632189aa
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63218a45
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 9
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63218bd0
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d220[esi]
jnz     short loc_63218a24
mov     eax, [ebx+110h]
mov     byte ptr [esp+3ch+var_24], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_3c], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+3ch+var_24]
jmp     short loc_63218a29
mov     edx, [edx+4]
jmp     def_63218991
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63218ac6
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 9
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63218bd0
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d22a[esi]
jnz     short loc_63218aa5
mov     eax, [ebx+110h]
mov     byte ptr [esp+3ch+var_24], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_3c], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+3ch+var_24]
jmp     short loc_63218aaa
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63218b41
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 6
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63218bd0
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d234[esi]
jnz     short loc_63218b20
mov     eax, [ebx+110h]
mov     byte ptr [esp+3ch+var_24], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_3c], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+3ch+var_24]
jmp     short loc_63218b25
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     ecx, [eax+1]
jz      loc_63218e80
mov     byte ptr [ebx+eax+4], 20h
mov     [ebx+104h], ecx
mov     byte ptr [ebx+108h], 20h
mov     edx, [edx+8]
jmp     def_63218991
test    byte ptr [ebx], 4
jz      loc_63218e55
lea     esi, [esi+0]
add     esp, 2ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_63218ec0
mov     byte ptr [ebx+eax+4], 26h
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 26h
jmp     short loc_63218bd0
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63218c2d
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 2
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      short loc_63218bd0
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d23b[esi]
jnz     short loc_63218c10
mov     eax, [ebx+110h]
mov     byte ptr [esp+3ch+var_24], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_3c], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+3ch+var_24]
jmp     short loc_63218c15
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63218ca4
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 8
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63218bd0
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d23e[esi]
jnz     short loc_63218c83
mov     eax, [ebx+110h]
mov     byte ptr [esp+3ch+var_24], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_3c], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+3ch+var_24]
jmp     short loc_63218c88
mov     eax, [ebx+104h]
xor     esi, esi
lea     edi, [ebx+4]
jmp     short loc_63218d21
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 0ah
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63218bd0
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d247[esi]
jnz     short loc_63218d00
mov     eax, [ebx+110h]
mov     byte ptr [esp+3ch+var_24], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_3c], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+3ch+var_24]
jmp     short loc_63218d05
cmp     byte ptr [ebx+108h], 28h
jz      short loc_63218d9f
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     ecx, [eax+1]
jz      loc_63218f30
mov     byte ptr [ebx+eax+4], 20h
mov     [ebx+104h], ecx
mov     byte ptr [ebx+108h], 20h
mov     edx, [edx+4]
mov     eax, ebx
xor     esi, esi
lea     edi, [ebx+4]
call    sub_63215f00
mov     eax, [ebx+104h]
jmp     short loc_63218dd7
mov     ecx, eax
add     eax, 1
add     esi, 1
cmp     esi, 3
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      loc_63218bd0
cmp     eax, 0ffh
movzx   edx, ds:byte_6322d252[esi]
jnz     short loc_63218db6
mov     eax, [ebx+110h]
mov     byte ptr [esp+3ch+var_24], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_3c], edi
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, byte ptr [esp+3ch+var_24]
jmp     short loc_63218dbb
mov     edx, [edx+4]
mov     eax, ebx
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_63218ef8
mov     byte ptr [ebx+eax+4], 29h
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 29h
jmp     loc_63218bd0
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_63218f70
mov     byte ptr [ebx+eax+4], 2ah
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 2ah
jmp     loc_63218bd0
mov     eax, [ebx+110h]
mov     [esp+3ch+var_24], edx
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
lea     eax, [ebx+4]
mov     [esp+3ch+var_3c], eax
call    dword ptr [ebx+10ch]
mov     ecx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
mov     edx, [esp+3ch+var_24]
jmp     loc_63218ba4
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
lea     eax, [ebx+4]
mov     [esp+3ch+var_3c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63218bec
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
lea     eax, [ebx+4]
mov     [esp+3ch+var_3c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63218e3e
mov     eax, [ebx+110h]
mov     [esp+3ch+var_24], edx
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
lea     eax, [ebx+4]
mov     [esp+3ch+var_3c], eax
call    dword ptr [ebx+10ch]
mov     ecx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
mov     edx, [esp+3ch+var_24]
jmp     loc_63218d8d
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
lea     eax, [ebx+4]
mov     [esp+3ch+var_3c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63218e69
push    ebp
mov     ebp, ecx
push    edi
push    esi
mov     esi, eax
push    ebx
mov     ebx, edx
sub     esp, 4ch
test    edx, edx
jnz     short loc_63219015
jmp     short loc_6321901f
mov     eax, [ebx+8]
test    eax, eax
jnz     short loc_6321900f
test    ebp, ebp
mov     edx, [ebx+4]
jnz     short loc_63218fdb
mov     eax, [edx]
sub     eax, 1ah
cmp     eax, 2
jbe     short loc_6321900f
mov     eax, [ebx+0ch]
mov     dword ptr [ebx+8], 1
mov     edi, [esi+114h]
mov     [esi+114h], eax
mov     eax, [edx]
cmp     eax, 25h
jz      short loc_63219027
cmp     eax, 26h
jz      short loc_63219041
cmp     eax, 2
jz      short loc_6321905b
mov     eax, esi
call    sub_63218970
mov     [esi+114h], edi
mov     ebx, [ebx]
test    ebx, ebx
jz      short loc_6321901f
mov     eax, [esi+11ch]
test    eax, eax
jz      short loc_63218fc3
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     ecx, [ebx]
mov     eax, esi
add     edx, 8
call    sub_632195c0
mov     [esi+114h], edi
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     ecx, [ebx]
mov     eax, esi
add     edx, 4
call    sub_63219340
mov     [esi+114h], edi
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     ebp, [esi+118h]
mov     eax, esi
mov     dword ptr [esi+118h], 0
mov     edx, [edx+4]
call    sub_63215f00
mov     eax, [esi+104h]
test    byte ptr [esi], 4
mov     [esi+118h], ebp
jnz     short loc_632190fa
lea     edx, [esi+4]
xor     ebp, ebp
mov     [esp+5ch+var_48], edx
mov     [esp+5ch+var_44], ebx
jmp     short loc_632190b6
mov     edx, eax
add     eax, 1
add     ebp, 1
cmp     ebp, 2
mov     [esi+edx+4], bl
mov     [esi+104h], eax
mov     [esi+108h], bl
jz      loc_63219149
cmp     eax, 0ffh
movzx   ebx, ss:byte_6322cf2c[ebp]
jnz     short loc_63219095
mov     eax, [esi+110h]
mov     byte ptr [esi+103h], 0
mov     [esp+5ch+format], 0ffh
mov     [esp+5ch+var_54], eax
mov     eax, [esp+5ch+var_48]
mov     [esp+5ch+buffer], eax
call    dword ptr [esi+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [esi+124h], 1
jmp     short loc_6321909a
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      short loc_6321914f
mov     byte ptr [esi+eax+4], 2eh
mov     [esi+104h], edx
mov     byte ptr [esi+108h], 2eh
mov     eax, [ebx+4]
mov     ebx, [eax+8]
mov     eax, [ebx]
cmp     eax, 3fh
jnz     short loc_6321912a
jmp     short loc_63219184
mov     ebx, [ebx+4]
mov     eax, [ebx]
sub     eax, 1ah
cmp     eax, 2
jbe     short loc_63219125
mov     edx, ebx
mov     eax, esi
call    sub_63215f00
mov     [esi+114h], edi
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     ebx, [esp+5ch+var_44]
jmp     short loc_63219116
mov     eax, [esi+110h]
mov     byte ptr [esi+103h], 0
mov     [esp+5ch+format], 0ffh
mov     [esp+5ch+var_54], eax
lea     eax, [esi+4]
mov     [esp+5ch+buffer], eax
call    dword ptr [esi+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [esi+124h], 1
jmp     short loc_63219104
mov     eax, [esi+104h]
xor     ebp, ebp
lea     ecx, [esi+4]
mov     [esp+5ch+var_48], ebx
jmp     short loc_632191b2
mov     edx, eax
add     eax, 1
add     ebp, 1
cmp     ebp, 0dh
mov     [esi+edx+4], bl
mov     [esi+104h], eax
mov     [esi+108h], bl
jz      short loc_632191fa
cmp     eax, 0ffh
movzx   ebx, ss:byte_6322d300[ebp]
jnz     short loc_63219195
mov     eax, [esi+110h]
mov     [esp+5ch+buffer], ecx
mov     [esp+5ch+str], ecx
mov     byte ptr [esi+103h], 0
mov     [esp+5ch+var_54], eax
mov     [esp+5ch+format], 0ffh
call    dword ptr [esi+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [esi+124h], 1
mov     ecx, [esp+5ch+str]
jmp     short loc_6321919a
mov     ebx, [esp+5ch+var_48]
lea     ecx, [esp+5ch+var_35]
mov     eax, [ebx+8]
mov     [esp+5ch+buffer], ecx
mov     [esp+5ch+str], ecx
mov     [esp+5ch+format], offset format
add     eax, 1
mov     [esp+5ch+var_54], eax
call    sprintf
mov     ecx, [esp+5ch+str]
mov     [esp+5ch+buffer], ecx
call    strlen
mov     ecx, [esp+5ch+str]
test    eax, eax
mov     [esp+5ch+var_48], eax
mov     eax, [esi+104h]
jz      short loc_632192b9
lea     edx, [esi+4]
xor     bp, bp
mov     [esp+5ch+var_44], edx
mov     [esp+5ch+var_40], ebx
jmp     short loc_6321926c
mov     edx, eax
add     eax, 1
add     ebp, 1
cmp     ebp, [esp+5ch+var_48]
mov     [esi+edx+4], bl
mov     [esi+104h], eax
mov     [esi+108h], bl
jz      short loc_632192b5
cmp     eax, 0ffh
movzx   ebx, byte ptr [ecx+ebp]
jnz     short loc_6321924e
mov     eax, [esi+110h]
mov     [esp+5ch+str], ecx
mov     byte ptr [esi+103h], 0
mov     [esp+5ch+format], 0ffh
mov     [esp+5ch+var_54], eax
mov     eax, [esp+5ch+var_44]
mov     [esp+5ch+buffer], eax
call    dword ptr [esi+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [esi+124h], 1
mov     ecx, [esp+5ch+str]
jmp     short loc_63219253
mov     ebx, [esp+5ch+var_40]
xor     ebp, ebp
lea     ecx, [esi+4]
mov     [esp+5ch+var_48], ebx
jmp     short loc_632192e1
mov     edx, eax
add     eax, 1
add     ebp, 1
cmp     ebp, 3
mov     [esi+edx+4], bl
mov     [esi+104h], eax
mov     [esi+108h], bl
jz      short loc_63219329
cmp     eax, 0ffh
movzx   ebx, ss:byte_6322d30e[ebp]
jnz     short loc_632192c4
mov     eax, [esi+110h]
mov     [esp+5ch+buffer], ecx
mov     [esp+5ch+str], ecx
mov     byte ptr [esi+103h], 0
mov     [esp+5ch+var_54], eax
mov     [esp+5ch+format], 0ffh
call    dword ptr [esi+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [esi+124h], 1
mov     ecx, [esp+5ch+str]
jmp     short loc_632192c9
mov     ebx, [esp+5ch+var_48]
mov     ebx, [ebx+4]
mov     eax, [ebx]
jmp     loc_6321912a
push    ebp
push    edi
mov     edi, ecx
push    esi
mov     esi, edx
push    ebx
mov     ebx, eax
sub     esp, 2ch
test    ecx, ecx
jz      short loc_6321937d
mov     eax, ecx
mov     ecx, [ecx+8]
test    ecx, ecx
jnz     short loc_6321936b
jmp     loc_63219400
mov     edx, [eax+8]
test    edx, edx
jz      loc_63219400
mov     eax, [eax]
test    eax, eax
nop
jnz     short loc_63219360
xor     ecx, ecx
mov     edx, edi
mov     eax, ebx
call    sub_63218fb0
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_632194c3
mov     byte ptr [ebx+eax+4], 20h
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 20h
cmp     edx, 0ffh
lea     eax, [edx+1]
jz      loc_63219570
mov     byte ptr [ebx+edx+4], 5bh
mov     byte ptr [ebx+108h], 5bh
mov     edx, [esi]
mov     [ebx+104h], eax
test    edx, edx
jz      short loc_632193d7
mov     eax, ebx
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_63219533
mov     byte ptr [ebx+eax+4], 5dh
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 5dh
add     esp, 2ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [eax+4]
cmp     dword ptr [eax], 26h
jz      loc_632195a8
lea     edx, [ebx+4]
mov     eax, [ebx+104h]
xor     ebp, ebp
mov     [esp+3ch+var_20], edx
jmp     short loc_6321943d
mov     ecx, eax
add     eax, 1
add     ebp, 1
cmp     ebp, 2
mov     [ebx+ecx+4], dl
mov     [ebx+104h], eax
mov     [ebx+108h], dl
jz      short loc_63219490
cmp     eax, 0ffh
movzx   edx, ss:byte_6322d312[ebp]
jnz     short loc_63219420
mov     eax, [ebx+110h]
mov     [esp+3ch+var_24], dl
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
mov     eax, [esp+3ch+var_20]
mov     [esp+3ch+var_3c], eax
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     ecx, ecx
add     dword ptr [ebx+124h], 1
movzx   edx, [esp+3ch+var_24]
jmp     short loc_63219425
xor     ecx, ecx
mov     edx, edi
mov     eax, ebx
call    sub_63218fb0
mov     edx, [ebx+104h]
cmp     edx, 0ffh
lea     eax, [edx+1]
jz      short loc_632194fb
mov     byte ptr [ebx+edx+4], 29h
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 29h
jmp     loc_63219383
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
lea     eax, [ebx+4]
mov     [esp+3ch+var_3c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63219391
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
lea     eax, [ebx+4]
mov     [esp+3ch+var_3c], eax
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [ebx+124h], 1
jmp     loc_632194ac
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
lea     eax, [ebx+4]
mov     [esp+3ch+var_3c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_632193e5
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], eax
lea     eax, [ebx+4]
mov     [esp+3ch+var_3c], eax
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [ebx+124h], 1
jmp     loc_632193b2
mov     edx, edi
xor     ecx, ecx
mov     eax, ebx
call    sub_63218fb0
mov     edx, [ebx+104h]
jmp     loc_632193a3
push    ebp
push    edi
mov     edi, edx
push    esi
mov     esi, ecx
push    ebx
mov     ebx, eax
sub     esp, 1ch
test    ecx, ecx
jz      loc_632196e8
mov     eax, [ecx+8]
test    eax, eax
jnz     loc_632196e8
mov     eax, ecx
mov     edx, 1
mov     ecx, [eax+4]
mov     ecx, [ecx]
sub     ecx, 17h
cmp     ecx, 10h
ja      loc_632196d7
mov     ebp, edx
shl     ebp, cl
test    ebp, 10c47h
mov     ecx, ebp
jnz     loc_63219775
and     ecx, 380h
jz      loc_632196d7
movzx   eax, byte ptr [ebx+108h]
cmp     al, 28h
jz      short loc_63219630
cmp     al, 2ah
jnz     loc_6321977c
lea     esi, [esi+0]
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_632197b9
mov     byte ptr [ebx+eax+4], 28h
mov     ebp, [ebx+118h]
xor     ecx, ecx
mov     [ebx+104h], edx
mov     eax, ebx
mov     edx, esi
mov     byte ptr [ebx+108h], 28h
mov     dword ptr [ebx+118h], 0
call    sub_63218fb0
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_63219829
cmp     edx, 0ffh
mov     byte ptr [ebx+eax+4], 29h
lea     eax, [edx+1]
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 29h
jnz     short loc_63219714
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [ebx+124h], 1
jmp     short loc_63219714
mov     eax, [eax]
test    eax, eax
jz      short loc_632196e8
mov     ebp, [eax+8]
test    ebp, ebp
jz      loc_632195e7
mov     ebp, [ebx+118h]
xor     ecx, ecx
mov     edx, esi
mov     eax, ebx
mov     dword ptr [ebx+118h], 0
call    sub_63218fb0
mov     edx, [ebx+104h]
cmp     edx, 0ffh
lea     eax, [edx+1]
jz      short loc_632196a2
mov     byte ptr [ebx+edx+4], 28h
mov     byte ptr [ebx+108h], 28h
mov     edx, [edi]
mov     [ebx+104h], eax
test    edx, edx
jz      short loc_63219739
mov     eax, ebx
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      loc_632197f1
mov     byte ptr [ebx+eax+4], 29h
mov     ecx, 1
mov     eax, ebx
mov     [ebx+104h], edx
mov     edx, esi
mov     byte ptr [ebx+108h], 29h
call    sub_63218fb0
mov     [ebx+118h], ebp
add     esp, 1ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
movzx   eax, byte ptr [ebx+108h]
cmp     al, 20h
jz      loc_63219630
mov     edx, [ebx+104h]
cmp     edx, 0ffh
lea     eax, [edx+1]
jz      loc_63219861
cmp     eax, 0ffh
mov     byte ptr [ebx+edx+4], 20h
lea     edx, [eax+1]
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 20h
jnz     loc_63219644
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63219644
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63219747
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63219685
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [ebx+124h], 1
jmp     loc_63219799
push    edi
push    esi
mov     esi, edx
push    ebx
mov     ebx, eax
sub     esp, 20h
mov     edi, [eax+118h]
mov     dword ptr [eax+118h], 0
mov     eax, [eax+114h]
mov     [esp+2ch+var_14], eax
lea     eax, [esp+2ch+var_14]
mov     [ebx+114h], eax
mov     eax, [edx]
mov     [esp+2ch+var_10], eax
mov     edx, [eax+4]
mov     eax, ebx
call    sub_63215f00
mov     eax, [esp+2ch+var_14]
cmp     byte ptr [ebx+108h], 3ch
mov     [ebx+114h], eax
jz      loc_632199f8
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      short loc_63219960
mov     byte ptr [ebx+eax+4], 3ch
mov     byte ptr [ebx+108h], 3ch
mov     eax, [esi]
mov     [ebx+104h], edx
mov     edx, [eax+8]
mov     eax, ebx
call    sub_63215f00
cmp     byte ptr [ebx+108h], 3eh
jz      loc_632199d0
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      short loc_63219998
mov     byte ptr [ebx+eax+4], 3eh
mov     [ebx+118h], edi
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 3eh
add     esp, 20h
pop     ebx
pop     esi
pop     edi
retn
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63219905
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63219940
mov     edx, [ebx+104h]
cmp     edx, 0ffh
lea     eax, [edx+1]
jz      short loc_63219a20
mov     byte ptr [ebx+edx+4], 20h
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 20h
jmp     loc_63219936
mov     edx, [ebx+104h]
cmp     edx, 0ffh
lea     eax, [edx+1]
jz      short loc_63219a55
mov     byte ptr [ebx+edx+4], 20h
mov     [ebx+104h], eax
mov     byte ptr [ebx+108h], 20h
jmp     loc_632198fb
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [ebx+124h], 1
jmp     short loc_632199e1
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     eax, 1
xor     edx, edx
add     dword ptr [ebx+124h], 1
jmp     loc_63219a09
sub     esp, 3ch
cmp     dword ptr [edx], 2ch
mov     [esp+3ch+var_10], ebx
mov     [esp+3ch+var_c], esi
mov     [esp+3ch+var_8], edi
mov     [esp+3ch+var_4], ebp
jz      short loc_63219ac0
mov     ebx, [esp+3ch+var_10]
mov     esi, [esp+3ch+var_c]
mov     edi, [esp+3ch+var_8]
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
jmp     sub_63215f00
mov     edx, [edx+4]
mov     edi, [edx+8]
mov     ebp, [edx+4]
test    edi, edi
jz      short loc_63219b48
lea     ecx, [eax+4]
mov     edx, [eax+104h]
xor     ebx, ebx
mov     [esp+3ch+var_20], ecx
mov     esi, eax
jmp     short loc_63219afc
mov     ecx, edx
add     edx, 1
add     ebx, 1
cmp     edi, ebx
mov     [esi+ecx+4], al
mov     [esi+104h], edx
mov     [esi+108h], al
jz      short loc_63219b48
cmp     edx, 0ffh
movzx   eax, byte ptr [ebp+ebx+0]
jnz     short loc_63219ae0
mov     edx, [esi+110h]
mov     byte ptr [esi+103h], 0
mov     [esp+3ch+var_24], al
mov     [esp+3ch+var_38], 0ffh
mov     [esp+3ch+var_34], edx
mov     edx, [esp+3ch+var_20]
mov     [esp+3ch+var_3c], edx
call    dword ptr [esi+10ch]
mov     edx, 1
xor     ecx, ecx
add     dword ptr [esi+124h], 1
movzx   eax, [esp+3ch+var_24]
jmp     short loc_63219ae5
mov     ebx, [esp+3ch+var_10]
mov     esi, [esp+3ch+var_c]
mov     edi, [esp+3ch+var_8]
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
retn
push    ebx
mov     ebx, eax
sub     esp, 28h
mov     eax, [edx]
cmp     eax, 6
jz      short loc_63219b71
test    eax, eax
jnz     short loc_63219b80
add     esp, 28h
mov     eax, ebx
pop     ebx
jmp     sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     ecx, [eax+1]
jz      short loc_63219bd0
mov     byte ptr [ebx+eax+4], 28h
mov     eax, ebx
mov     [ebx+104h], ecx
mov     byte ptr [ebx+108h], 28h
call    sub_63215f00
mov     eax, [ebx+104h]
cmp     eax, 0ffh
lea     edx, [eax+1]
jz      short loc_63219c10
mov     byte ptr [ebx+eax+4], 29h
mov     [ebx+104h], edx
mov     byte ptr [ebx+108h], 29h
add     esp, 28h
pop     ebx
retn
mov     eax, [ebx+110h]
mov     [esp+2ch+var_10], edx
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     ecx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
mov     edx, [esp+2ch+var_10]
jmp     short loc_63219b90
mov     eax, [ebx+110h]
mov     byte ptr [ebx+103h], 0
mov     [esp+2ch+var_28], 0ffh
mov     [esp+2ch+var_24], eax
lea     eax, [ebx+4]
mov     [esp+2ch+var_2c], eax
call    dword ptr [ebx+10ch]
mov     edx, 1
xor     eax, eax
add     dword ptr [ebx+124h], 1
jmp     loc_63219bb9
push    ebp
mov     ebp, esp
push    edi
push    esi
push    ebx
mov     ebx, eax
sub     esp, 18ch
cmp     byte ptr [eax], 5fh
mov     [ebp+var_17c], edx
mov     [ebp+var_180], ecx
jz      loc_63219e01
mov     esi, ebx
mov     edi, offset aglobal
mov     ecx, 8
repe cmpsb
setnbe  dl
setb    al
xor     esi, esi
cmp     dl, al
jnz     short loc_63219cc0
movzx   eax, byte ptr [ebx+8]
cmp     al, 5fh
jz      short loc_63219c9d
cmp     al, 2eh
jnz     loc_63219df4
movzx   eax, byte ptr [ebx+9]
cmp     al, 49h
setz    dl
jz      short loc_63219cae
xor     esi, esi
cmp     al, 44h
jnz     short loc_63219cc0
xor     esi, esi
cmp     byte ptr [ebx+0ah], 5fh
jz      loc_63219ea0
lea     esi, [esi+0]
mov     [esp], ebx
mov     edi, 10h
call    strlen
mov     [ebp+var_4c], ebx
mov     [ebp+var_44], 11h
mov     [ebp+str], ebx
mov     [ebp+var_38], 0
mov     [ebp+var_2c], 0
lea     edx, [ebx+eax]
lea     ecx, [eax+eax]
mov     [ebp+var_48], edx
lea     edx, ds:0[eax*4]
mov     [ebp+var_34], ecx
add     ecx, edx
mov     [ebp+var_28], eax
lea     eax, ds:1eh[ecx*4]
and     eax, 0fffffff0h
mov     [ebp+var_24], 0
mov     [ebp+var_20], 0
mov     [ebp+var_1c], 0
call    sub_6321b810
sub     esp, eax
lea     eax, [edx+1eh]
xor     edx, edx
div     edi
lea     ecx, [esp+1bh]
and     ecx, 0fffffff0h
shl     eax, 4
call    sub_6321b810
sub     esp, eax
lea     eax, [esp+1bh]
and     eax, 0fffffff0h
cmp     esi, 1
mov     [ebp+var_3c], ecx
mov     [ebp+var_30], eax
jz      loc_63219e86
jnb     loc_63219e15
lea     eax, [ebp+var_4c]
call    sub_63214030
mov     ebx, [ebp+str]
mov     edx, eax
xor     eax, eax
cmp     byte ptr [ebx], 0
jnz     short loc_63219dec
test    edx, edx
jz      short loc_63219dec
mov     eax, [ebp+var_17c]
mov     [ebp+var_174], 11h
mov     [ebp+var_70], 0
mov     [ebp+var_6c], 0
mov     [ebp+var_68], eax
mov     eax, [ebp+var_180]
mov     [ebp+var_60], 0
mov     [ebp+var_5c], 0
mov     [ebp+var_50], 0
mov     [ebp+var_64], eax
lea     eax, [ebp+var_174]
mov     [ebp+var_58], 0
call    sub_63215f00
mov     eax, [ebp+var_70]
mov     edx, [ebp+var_64]
mov     [ebp+eax+var_170], 0
mov     [esp+4], eax
lea     eax, [ebp+var_170]
mov     [esp+8], edx
mov     [esp], eax
call    [ebp+var_68]
mov     edx, [ebp+var_58]
xor     eax, eax
test    edx, edx
setz    al
lea     esp, [ebp-0ch]
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
cmp     al, 24h
jnz     loc_63219cc0
jmp     loc_63219c9d
cmp     byte ptr [eax+1], 5ah
mov     esi, 1
jnz     loc_63219c73
jmp     loc_63219cc0
cmp     esi, 3
ja      loc_63219d5a
lea     edi, [ebx+0bh]
mov     [ebp+str], edi
cmp     byte ptr [ebx+0bh], 5fh
jnz     short loc_63219e34
cmp     byte ptr [ebx+0ch], 5ah
jz      loc_63219eb0
mov     [esp], edi
lea     ebx, [ebp+var_4c]
call    strlen
mov     edx, edi
mov     ecx, eax
mov     eax, ebx
call    sub_632138e0
xor     edx, edx
cmp     esi, 2
setnz   dl
mov     ecx, eax
add     edx, 3ch
mov     eax, ebx
mov     dword ptr [esp], 0
call    sub_63213850
mov     ebx, [ebp+str]
mov     [esp], ebx
mov     [ebp+var_184], eax
call    strlen
mov     edx, [ebp+var_184]
add     ebx, eax
mov     [ebp+str], ebx
jmp     loc_63219d67
mov     edx, 1
lea     eax, [ebp+var_4c]
call    sub_632157a0
mov     ebx, [ebp+str]
mov     edx, eax
jmp     loc_63219d67
mov     esi, edx
shl     esi, 1fh
sar     esi, 1fh
add     esi, 3
jmp     loc_63219cc0
add     ebx, 0dh
xor     edx, edx
mov     [ebp+str], ebx
lea     ebx, [ebp+var_4c]
mov     eax, ebx
call    sub_63215220
jmp     short loc_63219e4a
sub     esp, 4ch
mov     eax, [esp+4ch+arg_0]
mov     [esp+4ch+var_10], ebx
mov     ebx, [esp+4ch+arg_c]
mov     [esp+4ch+var_c], esi
mov     esi, [esp+4ch+arg_8]
mov     [esp+4ch+var_8], edi
mov     edi, [esp+4ch+destination]
test    eax, eax
mov     [esp+4ch+var_4], ebp
jz      short loc_63219eff
test    esi, esi
jnz     short loc_63219f21
test    edi, edi
jz      short loc_63219f21
xor     ebp, ebp
test    ebx, ebx
jz      short loc_63219f0b
mov     dword ptr [ebx], 0fffffffdh
mov     eax, ebp
mov     ebx, [esp+4ch+var_10]
mov     esi, [esp+4ch+var_c]
mov     edi, [esp+4ch+var_8]
mov     ebp, [esp+4ch+var_4]
add     esp, 4ch
retn
lea     ecx, [esp+4ch+var_2c]
mov     edx, offset sub_63213f50
mov     [esp+4ch+var_2c], 0
mov     [esp+4ch+var_28], 0
mov     [esp+4ch+var_24], 0
mov     [esp+4ch+var_20], 0
call    sub_63219c50
test    eax, eax
jz      short loc_63219fb0
mov     ecx, [esp+4ch+var_20]
mov     edx, 1
mov     ebp, [esp+4ch+var_2c]
test    ecx, ecx
cmovz   edx, [esp+4ch+var_24]
test    ebp, ebp
jz      short loc_63219fbe
test    edi, edi
jz      loc_63219ff0
mov     [esp+4ch+str], ebp
mov     [esp+4ch+var_30], edx
call    strlen
mov     edx, [esp+4ch+var_30]
cmp     eax, [esi]
jnb     short loc_63219fd4
mov     [esp+4ch+source], ebp
mov     [esp+4ch+str], edi
call    strcpy
mov     [esp+4ch+str], ebp
mov     ebp, edi
call    free
test    ebx, ebx
jz      loc_63219f0b
mov     dword ptr [ebx], 0
jmp     loc_63219f0b
mov     eax, [esp+4ch+var_2c]
mov     [esp+4ch+str], eax
call    free
xor     edx, edx
test    ebx, ebx
jz      short loc_63219fe8
cmp     edx, 1
jz      short loc_63219ff8
mov     dword ptr [ebx], 0fffffffeh
xor     ebp, ebp
jmp     loc_63219f0b
mov     [esp+4ch+var_30], edx
mov     [esp+4ch+str], edi
call    free
mov     edx, [esp+4ch+var_30]
mov     [esi], edx
jmp     short loc_63219f9d
xor     ebp, ebp
jmp     loc_63219f0b
test    esi, esi
jz      short loc_63219f9d
mov     [esi], edx
jmp     short loc_63219f9d
mov     dword ptr [ebx], 0ffffffffh
xor     ebp, ebp
jmp     loc_63219f0b
sub     esp, 0ch
mov     edx, [esp+14h]
mov     eax, [esp+10h]
test    edx, edx
jz      short loc_6321a038
test    eax, eax
jz      short loc_6321a038
mov     ecx, [esp+18h]
call    sub_63219c50
cmp     eax, 1
sbb     eax, eax
and     eax, 0fffffffeh
add     esp, 0ch
retn
mov     eax, 0fffffffdh
jmp     short loc_6321a034
push    ebx
sub     esp, 28h
mov     eax, ds:dword_6322fd6c
mov     ebx, [esp+2ch+arg_0]
mov     [esp+2ch+func], eax
call    sub_6321a200
cmp     eax, 0ffffffffh
mov     [esp+2ch+var_14], eax
jz      loc_6321a0e0
mov     [esp+2ch+func], 8
call    _lock
mov     eax, ds:dword_6322fd6c
mov     [esp+2ch+func], eax
call    sub_6321a200
mov     [esp+2ch+var_14], eax
mov     eax, ds:dword_6322fd68
mov     [esp+2ch+func], eax
call    sub_6321a200
mov     [esp+2ch+func], ebx
mov     [esp+2ch+var_10], eax
lea     eax, [esp+2ch+var_10]
mov     [esp+2ch+var_24], eax
lea     eax, [esp+2ch+var_14]
mov     [esp+2ch+var_28], eax
call    __dllonexit
mov     ebx, eax
mov     eax, [esp+2ch+var_14]
mov     [esp+2ch+func], eax
call    sub_6321a210
mov     ds:dword_6322fd6c, eax
mov     eax, [esp+2ch+var_10]
mov     [esp+2ch+func], eax
call    sub_6321a210
mov     [esp+2ch+func], 8
mov     ds:dword_6322fd68, eax
call    _unlock
add     esp, 28h
mov     eax, ebx
pop     ebx
retn
mov     [esp+2ch+func], ebx
call    ds:_onexit
add     esp, 28h
mov     ebx, eax
mov     eax, ebx
pop     ebx
retn
sub     esp, 1ch
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], eax
call    sub_6321a040
cmp     eax, 1
sbb     eax, eax
add     esp, 1ch
retn
sub     esp, 1ch
mov     eax, [esp+1ch+arg_4]
test    eax, eax
jz      short loc_6321a140
cmp     eax, 3
jz      short loc_6321a140
mov     eax, 1
add     esp, 1ch
retn    0ch
mov     edx, [esp+1ch+arg_8]
mov     [esp+1ch+var_18], eax
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+var_14], edx
mov     [esp+1ch+var_1c], eax
call    sub_6321ab00
mov     eax, 1
add     esp, 1ch
retn    0ch
push    esi
push    ebx
sub     esp, 14h
cmp     dword_6322500c, 2
mov     eax, [esp+1ch+arg_4]
jz      short loc_6321a18c
mov     dword_6322500c, 2
cmp     eax, 2
jz      short loc_6321a1a3
cmp     eax, 1
jz      short loc_6321a1d0
add     esp, 14h
mov     eax, 1
pop     ebx
pop     esi
retn    0ch
mov     ebx, offset dword_63232028
mov     esi, offset dword_63232028
cmp     ebx, esi
jz      short loc_6321a196
mov     eax, [ebx]
test    eax, eax
jz      short loc_6321a1b9
call    eax
add     ebx, 4
cmp     esi, ebx
xchg    ax, ax
jnz     short loc_6321a1b1
add     esp, 14h
mov     eax, 1
pop     ebx
pop     esi
retn    0ch
mov     eax, [esp+1ch+arg_8]
mov     [esp+1ch+var_18], 1
mov     [esp+1ch+var_14], eax
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], eax
call    sub_6321ab00
jmp     short loc_6321a196
xor     eax, eax
retn
mov     eax, [esp+arg_0]
retn
mov     eax, [esp+arg_0]
retn
push    ebx
sub     esp, 18h
mov     eax, ds:_iob
mov     [esp+1ch+var_18], offset amingww64runtim
lea     ebx, [esp+1ch+arg_4]
add     eax, 40h
mov     [esp+1ch+var_1c], eax
call    sub_6321c7f0
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+var_14], ebx
mov     [esp+1ch+var_18], eax
mov     eax, ds:_iob
add     eax, 40h
mov     [esp+1ch+var_1c], eax
call    sub_6321c830
call    abort
jmp     short sub_6321a270
push    ebp
mov     ebp, ecx
push    edi
push    esi
push    ebx
mov     ebx, eax
sub     esp, 6ch
mov     ecx, ds:dword_6322f024
mov     [esp+7ch+src], edx
test    ecx, ecx
jle     loc_6321a452
mov     eax, ds:dword_6322f020
xor     esi, esi
mov     edx, [eax+4]
cmp     ebx, edx
jb      short loc_6321a2a9
mov     edi, [eax+8]
add     edx, [edi+8]
cmp     ebx, edx
jb      loc_6321a380
add     esi, 1
add     eax, 0ch
cmp     esi, ecx
jnz     short loc_6321a294
mov     [esp+7ch+lpaddress], ebx
call    sub_6321acb0
test    eax, eax
mov     edi, eax
jz      loc_6321a479
lea     edx, [esi+esi*2]
mov     esi, ds:dword_6322f020
shl     edx, 2
add     esi, edx
mov     [esi+8], eax
mov     dword ptr [esi], 0
mov     [esp+7ch+var_64], edx
call    sub_6321ad90
mov     edx, [esp+7ch+var_64]
add     eax, [edi+0ch]
mov     [esi+4], eax
lea     eax, [esp+7ch+buffer]
mov     esi, ds:virtualquery
mov     [esp+7ch+lpbuffer], eax
mov     eax, ds:dword_6322f020
mov     [esp+7ch+dwlength], 1ch
mov     eax, [eax+edx+4]
mov     [esp+7ch+lpaddress], eax
call    esi
sub     esp, 0ch
test    eax, eax
mov     edx, [esp+7ch+var_64]
jz      loc_6321a459
mov     eax, [esp+7ch+buffer.protect]
cmp     eax, 4
jnz     loc_6321a401
add     ds:dword_6322f024, 1
lea     eax, [esp+7ch+var_58]
mov     [esp+7ch+dwlength], 1ch
mov     [esp+7ch+lpbuffer], eax
mov     [esp+7ch+lpaddress], ebx
call    esi
sub     esp, 0ch
test    eax, eax
jz      loc_6321a489
mov     eax, [esp+7ch+var_58.protect]
cmp     eax, 4
jnz     short loc_6321a388
mov     eax, [esp+7ch+src]
mov     [esp+7ch+dwlength], ebp
mov     [esp+7ch+lpaddress], ebx
mov     [esp+7ch+lpbuffer], eax
call    memcpy
add     esp, 6ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     esi, ds:virtualquery
jmp     short loc_6321a336
cmp     eax, 40h
jz      short loc_6321a35f
mov     eax, [esp+7ch+var_58.regionsize]
lea     edi, [esp+7ch+floldprotect]
mov     esi, ds:virtualprotect
mov     [esp+7ch+lpfloldprotect], edi
mov     [esp+7ch+dwlength], 40h
mov     [esp+7ch+lpbuffer], eax
mov     eax, [esp+7ch+var_58.baseaddress]
mov     [esp+7ch+lpaddress], eax
call    esi
sub     esp, 10h
mov     eax, [esp+7ch+src]
mov     [esp+7ch+dwlength], ebp
mov     [esp+7ch+lpaddress], ebx
mov     [esp+7ch+lpbuffer], eax
call    memcpy
mov     eax, [esp+7ch+var_58.protect]
cmp     eax, 40h
jz      short loc_6321a373
cmp     eax, 4
jz      short loc_6321a373
mov     eax, [esp+7ch+floldprotect]
mov     [esp+7ch+lpfloldprotect], edi
mov     [esp+7ch+dwlength], eax
mov     eax, [esp+7ch+var_58.regionsize]
mov     [esp+7ch+lpbuffer], eax
mov     eax, [esp+7ch+var_58.baseaddress]
mov     [esp+7ch+lpaddress], eax
call    esi
sub     esp, 10h
add     esp, 6ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
cmp     eax, 40h
jz      loc_6321a32f
mov     eax, [esp+7ch+buffer.regionsize]
add     edx, ds:dword_6322f020
mov     [esp+7ch+dwlength], 40h
mov     [esp+7ch+lpbuffer], eax
mov     eax, [esp+7ch+buffer.baseaddress]
mov     [esp+7ch+lpfloldprotect], edx
mov     [esp+7ch+lpaddress], eax
call    ds:virtualprotect
sub     esp, 10h
test    eax, eax
jnz     loc_6321a32f
call    ds:getlasterror
mov     [esp+7ch+lpaddress], offset avirtualprotect
mov     [esp+7ch+lpbuffer], eax
call    sub_6321a220
xor     esi, esi
jmp     loc_6321a2b3
mov     eax, ds:dword_6322f020
mov     eax, [eax+edx+4]
mov     [esp+7ch+dwlength], eax
mov     eax, [edi+8]
mov     [esp+7ch+lpaddress], offset avirtualqueryfa
mov     [esp+7ch+lpbuffer], eax
call    sub_6321a220
mov     [esp+7ch+lpbuffer], ebx
mov     [esp+7ch+lpaddress], offset aaddressphasnoi
call    sub_6321a220
mov     [esp+7ch+dwlength], ebx
mov     [esp+7ch+lpbuffer], 1ch
mov     [esp+7ch+lpaddress], offset avirtualqueryfa
call    sub_6321a220
jmp     short sub_6321a4b0
push    ebp
mov     ebp, esp
push    edi
push    esi
push    ebx
sub     esp, 4ch
mov     eax, ds:dword_6322f01c
test    eax, eax
jz      short loc_6321a4d0
lea     esp, [ebp-0ch]
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     ds:dword_6322f01c, 1
call    sub_6321acf0
lea     eax, [eax+eax*2]
lea     eax, ds:1eh[eax*4]
and     eax, 0fffffff0h
call    sub_6321b810
mov     ds:dword_6322f024, 0
sub     esp, eax
lea     eax, [esp+1fh]
and     eax, 0fffffff0h
mov     ds:dword_6322f020, eax
mov     eax, offset dword_6322ec20
sub     eax, offset dword_6322ec20
cmp     eax, 7
jle     short loc_6321a4c2
cmp     eax, 0bh
mov     ebx, offset dword_6322ec20
jle     loc_6321a610
mov     eax, ds:dword_6322ec20
test    eax, eax
jnz     short loc_6321a540
mov     eax, ds:dword_6322ec24
test    eax, eax
jz      loc_6321a5fc
lea     esi, [esi+0]
cmp     ebx, offset dword_6322ec20
jnb     loc_6321a4c2
mov     esi, 63200000h
mov     eax, [ebx+4]
mov     ecx, 4
add     eax, esi
mov     edx, [eax]
add     edx, [ebx]
add     ebx, 8
mov     [ebp+floldprotect], edx
lea     edx, [ebp+floldprotect]
call    sub_6321a270
cmp     ebx, offset dword_6322ec20
jb      short loc_6321a551
mov     ecx, ds:dword_6322f024
test    ecx, ecx
jle     loc_6321a4c2
xor     ebx, ebx
xor     esi, esi
mov     edi, ds:virtualquery
jmp     short loc_6321a5a2
add     esi, 1
add     ebx, 0ch
cmp     esi, ds:dword_6322f024
jge     loc_6321a4c2
mov     eax, ds:dword_6322f020
add     eax, ebx
mov     edx, [eax]
test    edx, edx
jz      short loc_6321a590
lea     edx, [ebp+buffer]
mov     dword ptr [esp+8], 1ch
mov     [esp+4], edx
mov     eax, [eax+4]
mov     [esp], eax
call    edi
sub     esp, 0ch
test    eax, eax
jz      loc_6321a722
lea     eax, [ebp+floldprotect]
mov     [esp+0ch], eax
mov     eax, ds:dword_6322f020
mov     eax, [eax+ebx]
mov     [esp+8], eax
mov     eax, [ebp+buffer.regionsize]
mov     [esp+4], eax
mov     eax, [ebp+buffer.baseaddress]
mov     [esp], eax
call    ds:virtualprotect
sub     esp, 10h
jmp     short loc_6321a590
mov     eax, ds:dword_6322ec28
test    eax, eax
jnz     short loc_6321a625
mov     ebx, offset dword_6322ec2c
lea     esi, [esi+0]
mov     edi, [ebx]
test    edi, edi
jnz     loc_6321a540
mov     esi, [ebx+4]
test    esi, esi
jnz     loc_6321a540
mov     eax, [ebx+8]
cmp     eax, 1
jnz     loc_6321a745
add     ebx, 0ch
cmp     ebx, offset dword_6322ec20
jnb     loc_6321a4c2
movzx   edx, byte ptr [ebx+8]
mov     eax, 63200000h
mov     ecx, [ebx]
add     eax, [ebx+4]
cmp     edx, 10h
mov     esi, [ecx+63200000h]
jz      short loc_6321a69a
cmp     edx, 20h
jz      short loc_6321a6d0
cmp     edx, 8
jz      short loc_6321a67a
mov     [esp+4], edx
mov     dword ptr [esp], offset aunknownpseudor
mov     [ebp+var_20], 0
call    sub_6321a220
movzx   edi, byte ptr [eax]
test    edi, 80h
jz      short loc_6321a6a5
or      edi, 0ffffff00h
sub     edi, ecx
sub     edi, 63200000h
add     esi, edi
mov     [ebp+var_20], esi
jmp     short loc_6321a6c1
movzx   edi, word ptr [eax]
test    edi, 8000h
jnz     short loc_6321a700
sub     edi, ecx
sub     edi, 63200000h
add     esi, edi
cmp     edx, 10h
mov     [ebp+var_20], esi
jz      short loc_6321a713
cmp     edx, 20h
jz      short loc_6321a6df
cmp     edx, 8
jnz     short loc_6321a6ec
mov     ecx, 1
lea     edx, [ebp+var_20]
call    sub_6321a270
jmp     short loc_6321a6ec
mov     edx, [eax]
sub     edx, ecx
sub     edx, 63200000h
add     edx, esi
mov     [ebp+var_20], edx
mov     ecx, 4
lea     edx, [ebp+var_20]
call    sub_6321a270
add     ebx, 0ch
cmp     ebx, offset dword_6322ec20
jb      loc_6321a640
jmp     loc_6321a575
or      edi, 0ffff0000h
sub     edi, ecx
sub     edi, 63200000h
add     esi, edi
mov     [ebp+var_20], esi
mov     ecx, 2
lea     edx, [ebp+var_20]
call    sub_6321a270
jmp     short loc_6321a6ec
add     ebx, ds:dword_6322f020
mov     eax, [ebx+4]
mov     [esp+8], eax
mov     eax, [ebx+8]
mov     eax, [eax+8]
mov     dword ptr [esp], offset avirtualqueryfa
mov     [esp+4], eax
call    sub_6321a220
mov     [esp+4], eax
mov     dword ptr [esp], offset aunknownpseudor_0
call    sub_6321a220
sub     esp, 0ch
mov     eax, off_63225008
mov     eax, [eax]
test    eax, eax
jz      short loc_6321a787
xchg    ax, ax
call    eax
mov     eax, off_63225008
lea     edx, [eax+4]
mov     eax, [eax+4]
mov     off_63225008, edx
test    eax, eax
jnz     short loc_6321a770
add     esp, 0ch
retn
push    ebx
sub     esp, 18h
mov     ebx, ds:dword_632241a0
cmp     ebx, 0ffffffffh
jz      short loc_6321a7c3
test    ebx, ebx
jz      short loc_6321a7b2
call    ds:dword_632241a0[ebx*4]
sub     ebx, 1
lea     esi, [esi+0]
jnz     short loc_6321a7a3
mov     [esp+1ch+var_1c], offset sub_6321a760
call    sub_6321a100
add     esp, 18h
pop     ebx
retn
xor     ebx, ebx
jmp     short loc_6321a7c9
mov     ebx, eax
lea     eax, [ebx+1]
mov     edx, ds:dword_632241a0[eax*4]
test    edx, edx
jnz     short loc_6321a7c7
jmp     short loc_6321a79f
mov     ecx, ds:dword_6322f028
test    ecx, ecx
jz      short loc_6321a7f0
rep retn
mov     ds:dword_6322f028, 1
jmp     short loc_6321a790
sub     esp, 4ch
mov     eax, dword_63229a80
mov     [esp+4ch+var_10], ebx
mov     [esp+4ch+var_c], esi
mov     [esp+4ch+var_8], edi
cmp     eax, 0bb40e64eh
mov     [esp+4ch+var_4], ebp
mov     [esp+4ch+systemtimeasfiletime.dwlowdatetime], 0
mov     [esp+4ch+systemtimeasfiletime.dwhighdatetime], 0
jz      short loc_6321a850
not     eax
mov     dword_63229a84, eax
mov     ebx, [esp+4ch+var_10]
mov     esi, [esp+4ch+var_c]
mov     edi, [esp+4ch+var_8]
mov     ebp, [esp+4ch+var_4]
add     esp, 4ch
retn
lea     eax, [esp+4ch+systemtimeasfiletime]
mov     [esp+4ch+lpsystemtimeasfiletime], eax
call    ds:getsystemtimeasfiletime
sub     esp, 4
mov     eax, [esp+4ch+systemtimeasfiletime.dwhighdatetime]
mov     ebp, [esp+4ch+systemtimeasfiletime.dwlowdatetime]
mov     [esp+4ch+var_30], eax
call    ds:getcurrentprocessid
mov     edi, eax
call    ds:getcurrentthreadid
mov     esi, eax
call    ds:gettickcount
mov     ebx, eax
lea     eax, [esp+4ch+performancecount]
mov     [esp+4ch+lpsystemtimeasfiletime], eax
call    ds:queryperformancecounter
sub     esp, 4
xor     ebp, [esp+4ch+var_30]
xor     ebp, dword ptr [esp+4ch+performancecount]
xor     ebp, dword ptr [esp+4ch+performancecount+4]
xor     ebp, edi
xor     ebp, esi
xor     ebp, ebx
mov     eax, ebp
cmp     ebp, 0bb40e64eh
not     eax
jz      short loc_6321a8c2
mov     dword_63229a80, ebp
mov     dword_63229a84, eax
jmp     loc_6321a836
mov     eax, 44bf19b0h
mov     ebp, 0bb40e64fh
jmp     short loc_6321a8b2
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     eax, [ebp+4]
lea     edx, [ebp+4]
mov     ds:dword_6322f104, edx
mov     ds:dword_6322f320, 0c0000409h
mov     ds:dword_6322f324, 1
mov     ds:dword_6322f0f8, eax
mov     ds:dword_6322f32c, eax
mov     eax, [ebp+8]
mov     dword ptr [esp], 0
mov     ds:dword_6322f0ec, eax
mov     eax, dword_63229a80
mov     [ebp-10h], eax
mov     eax, dword_63229a84
mov     [ebp-0ch], eax
call    ds:setunhandledexceptionfilter
sub     esp, 4
mov     dword ptr [esp], offset off_6322debc
call    ds:unhandledexceptionfilter
sub     esp, 4
call    ds:getcurrentprocess
mov     dword ptr [esp+4], 0c0000409h
mov     [esp], eax
call    ds:terminateprocess
sub     esp, 8
call    abort
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 1ch
mov     [esp+2ch+lpcriticalsection], offset criticalsection
call    ds:entercriticalsection
mov     ebx, ds:dword_6322f39c
sub     esp, 4
test    ebx, ebx
jz      short loc_6321a9b5
mov     ebp, ds:tlsgetvalue
mov     edi, ds:getlasterror
lea     esi, [esi+0]
mov     eax, [ebx]
mov     [esp+2ch+lpcriticalsection], eax
call    ebp
sub     esp, 4
mov     esi, eax
call    edi
test    eax, eax
jnz     short loc_6321a9ae
test    esi, esi
jz      short loc_6321a9ae
mov     eax, [ebx+4]
mov     [esp+2ch+lpcriticalsection], esi
call    eax
mov     ebx, [ebx+8]
test    ebx, ebx
jnz     short loc_6321a990
mov     [esp+2ch+lpcriticalsection], offset criticalsection
call    ds:leavecriticalsection
sub     esp, 4
add     esp, 1ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     esp, 1ch
mov     eax, ds:dword_6322f380
mov     [esp+1ch+var_8], ebx
xor     ebx, ebx
mov     [esp+1ch+var_4], esi
test    eax, eax
jnz     short loc_6321a9f4
mov     eax, ebx
mov     esi, [esp+1ch+var_4]
mov     ebx, [esp+1ch+var_8]
add     esp, 1ch
retn
mov     [esp+1ch+size], 0ch
mov     [esp+1ch+count], 1
call    calloc
test    eax, eax
mov     esi, eax
jz      short loc_6321aa57
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+count], offset criticalsection
mov     [esi], eax
mov     eax, [esp+1ch+arg_4]
mov     [esi+4], eax
call    ds:entercriticalsection
mov     eax, ds:dword_6322f39c
mov     ds:dword_6322f39c, esi
mov     [esi+8], eax
sub     esp, 4
mov     [esp+1ch+count], offset criticalsection
call    ds:leavecriticalsection
mov     eax, ebx
sub     esp, 4
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
add     esp, 1ch
retn
mov     ebx, 0ffffffffh
jmp     short loc_6321a9e6
push    ebx
sub     esp, 18h
mov     eax, ds:dword_6322f380
mov     ebx, [esp+20h]
test    eax, eax
jnz     short loc_6321aa78
add     esp, 18h
xor     eax, eax
pop     ebx
retn
mov     dword ptr [esp], offset criticalsection
call    ds:entercriticalsection
mov     edx, ds:dword_6322f39c
sub     esp, 4
test    edx, edx
jz      short loc_6321aaaf
mov     eax, [edx]
cmp     eax, ebx
jnz     short loc_6321aaa8
jmp     short loc_6321aae6
mov     ecx, [eax]
cmp     ecx, ebx
jz      short loc_6321aac6
mov     edx, eax
mov     eax, [edx+8]
test    eax, eax
jnz     short loc_6321aaa0
mov     dword ptr [esp], offset criticalsection
call    ds:leavecriticalsection
sub     esp, 4
add     esp, 18h
xor     eax, eax
pop     ebx
retn
mov     ecx, [eax+8]
mov     [edx+8], ecx
mov     [esp], eax
call    free
mov     dword ptr [esp], offset criticalsection
call    ds:leavecriticalsection
sub     esp, 4
jmp     short loc_6321aabf
mov     eax, [edx+8]
mov     ds:dword_6322f39c, eax
mov     eax, edx
jmp     short loc_6321aacc
sub     esp, 1ch
mov     eax, [esp+1ch+arg_4]
cmp     eax, 1
jz      short loc_6321ab50
jb      short loc_6321ab20
cmp     eax, 3
jz      short loc_6321ab70
mov     eax, 1
add     esp, 1ch
retn
mov     eax, ds:dword_6322f380
test    eax, eax
jnz     short loc_6321ab92
mov     eax, ds:dword_6322f380
cmp     eax, 1
jnz     short loc_6321ab13
mov     ds:dword_6322f380, 0
mov     [esp+1ch+lpcriticalsection], offset criticalsection
call    ds:deletecriticalsection
sub     esp, 4
jmp     short loc_6321ab13
mov     eax, ds:dword_6322f380
test    eax, eax
jz      short loc_6321ab80
mov     ds:dword_6322f380, 1
mov     eax, 1
add     esp, 1ch
retn
mov     eax, ds:dword_6322f380
test    eax, eax
jz      short loc_6321ab13
call    sub_6321a960
jmp     short loc_6321ab13
mov     [esp+1ch+lpcriticalsection], offset criticalsection
call    ds:initializecriticalsection
sub     esp, 4
jmp     short loc_6321ab59
call    sub_6321a960
jmp     short loc_6321ab29
mov     edx, [esp+arg_0]
xor     eax, eax
cmp     word ptr [edx], 5a4dh
jz      short loc_6321abb0
rep retn
add     edx, [edx+3ch]
cmp     dword ptr [edx], 4550h
jnz     short locret_6321abad
xor     eax, eax
cmp     word ptr [edx+18h], 10bh
setz    al
retn
push    esi
xor     eax, eax
push    ebx
mov     edx, [esp+8+arg_0]
mov     ebx, [esp+8+arg_4]
add     edx, [edx+3ch]
movzx   esi, word ptr [edx+6]
movzx   ecx, word ptr [edx+14h]
test    esi, esi
jz      short loc_6321ac0e
movzx   ecx, cx
lea     eax, [edx+ecx+18h]
xor     edx, edx
mov     ecx, [eax+0ch]
cmp     ecx, ebx
ja      short loc_6321ac02
add     ecx, [eax+8]
cmp     ebx, ecx
jb      short loc_6321ac0e
add     edx, 1
add     eax, 28h
cmp     edx, esi
jb      short loc_6321abf4
xor     eax, eax
pop     ebx
pop     esi
retn
jmp     short loc_6321ac20
push    ebp
push    edi
push    esi
push    ebx
xor     ebx, ebx
sub     esp, 1ch
mov     edi, [esp+30h]
mov     [esp], edi
call    strlen
cmp     eax, 8
ja      short loc_6321ac93
mov     dword ptr [esp], 63200000h
call    sub_6321aba0
test    eax, eax
jz      short loc_6321ac93
mov     eax, ds:6320003ch
movzx   ebp, word ptr [eax+63200006h]
movzx   edx, word ptr [eax+63200014h]
add     eax, 63200000h
test    ebp, ebp
jz      short loc_6321ac93
movzx   edx, dx
xor     esi, esi
lea     ebx, [eax+edx+18h]
jmp     short loc_6321ac7b
add     esi, 1
add     ebx, 28h
cmp     esi, ebp
jnb     short loc_6321aca0
mov     dword ptr [esp+8], 8
mov     [esp+4], edi
mov     [esp], ebx
call    strncmp
test    eax, eax
jnz     short loc_6321ac71
add     esp, 1ch
mov     eax, ebx
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
add     esp, 1ch
xor     ebx, ebx
mov     eax, ebx
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     esp, 8
mov     [esp+8+var_8], 63200000h
call    sub_6321aba0
mov     edx, eax
xor     eax, eax
test    edx, edx
jz      short loc_6321ace0
mov     eax, [esp+8+arg_0]
mov     [esp+8+var_8], 63200000h
sub     eax, 63200000h
mov     [esp+8+var_4], eax
call    sub_6321abd0
add     esp, 8
retn
sub     esp, 4
mov     [esp+4+var_4], 63200000h
call    sub_6321aba0
xor     edx, edx
test    eax, eax
jz      short loc_6321ad11
mov     eax, ds:6320003ch
movzx   edx, word ptr [eax+63200006h]
mov     eax, edx
add     esp, 4
retn
push    esi
push    ebx
sub     esp, 4
mov     dword ptr [esp], 63200000h
mov     ebx, [esp+10h]
call    sub_6321aba0
xor     edx, edx
test    eax, eax
jz      short loc_6321ad79
mov     eax, ds:6320003ch
movzx   ecx, word ptr [eax+63200006h]
movzx   esi, word ptr [eax+63200014h]
add     eax, 63200000h
test    ecx, ecx
jz      short loc_6321ad79
movzx   esi, si
lea     edx, [eax+esi+18h]
xor     eax, eax
test    byte ptr [edx+27h], 20h
jz      short loc_6321ad6d
test    ebx, ebx
jz      short loc_6321ad79
sub     ebx, 1
add     eax, 1
add     edx, 28h
cmp     eax, ecx
jb      short loc_6321ad60
xor     edx, edx
add     esp, 4
mov     eax, edx
pop     ebx
pop     esi
retn
jmp     short sub_6321ad90
sub     esp, 4
mov     [esp+4+var_4], 63200000h
call    sub_6321aba0
xor     edx, edx
test    eax, eax
mov     eax, 63200000h
cmovnz  edx, eax
add     esp, 4
mov     eax, edx
retn
jmp     short loc_6321adc0
push    ebx
xor     ebx, ebx
sub     esp, 8
mov     dword ptr [esp], 63200000h
call    sub_6321aba0
test    eax, eax
jnz     short loc_6321ade0
add     esp, 8
mov     eax, ebx
pop     ebx
retn
mov     eax, [esp+10h]
mov     dword ptr [esp], 63200000h
sub     eax, 63200000h
mov     [esp+4], eax
call    sub_6321abd0
test    eax, eax
jz      short loc_6321add6
mov     ebx, [eax+24h]
add     esp, 8
not     ebx
shr     ebx, 1fh
mov     eax, ebx
pop     ebx
retn
push    edi
xor     edi, edi
push    esi
push    ebx
sub     esp, 8
mov     [esp+14h+var_14], 63200000h
mov     ebx, [esp+14h+arg_0]
call    sub_6321aba0
test    eax, eax
jz      short loc_6321ae81
mov     eax, ds:6320003ch
mov     esi, [eax+63200080h]
test    esi, esi
jz      short loc_6321ae81
mov     [esp+14h+var_10], esi
mov     [esp+14h+var_14], 63200000h
call    sub_6321abd0
test    eax, eax
jz      short loc_6321ae81
add     esi, 63200000h
jnz     short loc_6321ae66
jmp     short loc_6321ae81
sub     ebx, 1
add     esi, 14h
mov     edx, [esi+4]
test    edx, edx
jnz     short loc_6321ae74
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_6321ae90
test    ebx, ebx
jg      short loc_6321ae60
mov     edi, [esi+0ch]
add     edi, 63200000h
add     esp, 8
mov     eax, edi
pop     ebx
pop     esi
pop     edi
retn
add     esp, 8
xor     edi, edi
mov     eax, edi
pop     ebx
pop     esi
pop     edi
retn
push    ebx
sub     esp, 18h
mov     eax, ds:dword_6322f3a4
test    eax, eax
jz      short loc_6321aeb2
add     esp, 18h
pop     ebx
retn
xor     eax, eax
mov     [esp+1ch+lpmodulename], eax
lea     ebx, [eax+1]
call    sub_6321ae10
test    eax, eax
jz      short loc_6321af40
movzx   edx, byte ptr [eax]
cmp     dl, 4dh
jz      short loc_6321aed0
cmp     dl, 6dh
jnz     short loc_6321af20
movzx   edx, byte ptr [eax+1]
cmp     dl, 53h
jz      short loc_6321aede
cmp     dl, 73h
jnz     short loc_6321af20
movzx   edx, byte ptr [eax+2]
cmp     dl, 56h
jz      short loc_6321aeec
cmp     dl, 76h
jnz     short loc_6321af20
movzx   edx, byte ptr [eax+3]
cmp     dl, 43h
jz      short loc_6321aefa
cmp     dl, 63h
jnz     short loc_6321af20
movzx   edx, byte ptr [eax+4]
cmp     dl, 52h
jz      short loc_6321af08
cmp     dl, 72h
jnz     short loc_6321af20
movzx   edx, byte ptr [eax+5]
cmp     dl, 54h
jz      short loc_6321af24
cmp     dl, 74h
jz      short loc_6321af24
sub     edx, 30h
cmp     dl, 9
jbe     short loc_6321af24
xchg    ax, ax
mov     eax, ebx
jmp     short loc_6321aeb4
mov     [esp+1ch+lpmodulename], eax
call    ds:getmodulehandlea
sub     esp, 4
test    eax, eax
mov     ds:dword_6322f3a4, eax
jnz     loc_6321aead
lea     esi, [esi+0]
mov     [esp+1ch+lpmodulename], offset amsvcrtdll
call    ds:loadlibraryw
sub     esp, 4
mov     ds:dword_6322f3a4, eax
jmp     loc_6321aead
push    ebx
sub     esp, 18h
mov     ebx, dword_6322500c
test    ebx, ebx
jz      short loc_6321afbe
mov     ecx, dword_63225014
mov     eax, dword_63225010
test    ecx, ecx
jnz     short loc_6321afba
mov     eax, 1
lock xadd dword_63225018, eax
cmp     eax, 0ffffffffh
jz      short loc_6321afd0
mov     edx, dword_63225014
mov     ebx, ds:sleep
test    edx, edx
jnz     short loc_6321afb5
nop
mov     [esp+1ch+dwmilliseconds], 0
call    ebx
mov     eax, dword_63225014
sub     esp, 4
test    eax, eax
jz      short loc_6321afa0
mov     eax, dword_63225010
test    eax, eax
jns     short loc_6321afc8
mov     dword_63225010, 0
add     esp, 18h
pop     ebx
retn
call    ds:tlsalloc
cmp     eax, 0ffffffffh
jz      short loc_6321b009
mov     ds:dwtlsindex, eax
mov     [esp+1ch+var_18], 0
mov     [esp+1ch+dwmilliseconds], eax
call    sub_63221a70
test    eax, eax
setz    al
movzx   eax, al
mov     dword_63225010, eax
mov     dword_63225014, 1
jmp     short loc_6321afc8
call    ds:getlasterror
jmp     short loc_6321aff0
jmp     short sub_6321b020
push    edi
mov     edi, edx
push    esi
push    ebx
mov     ebx, eax
sub     esp, 20h
mov     edx, [edx]
jmp     short loc_6321b06f
test    eax, eax
jz      short loc_6321b065
mov     edx, [ebx]
mov     ecx, [ebx+4]
mov     [esp+2ch+var_18], edi
mov     [esp+2ch+var_1c], ebx
mov     [esp+2ch+var_24], edx
mov     edx, esi
or      edx, 2
mov     [esp+2ch+var_20], ecx
mov     [esp+2ch+var_28], edx
mov     [esp+2ch+var_2c], 1
call    eax
cmp     eax, 7
jz      short loc_6321b096
cmp     eax, 8
jnz     short loc_6321b091
test    esi, esi
jnz     short loc_6321b09d
mov     eax, [edi]
mov     edx, [eax]
mov     [edi], edx
xor     eax, eax
test    edx, edx
mov     ecx, 5
jz      short loc_6321b07f
mov     eax, [edx+18h]
xor     cl, cl
cmp     edx, [ebx+10h]
setz    dl
movzx   edx, dl
mov     esi, edx
shl     esi, 2
test    ecx, ecx
jz      short loc_6321b030
mov     eax, 2
add     esp, 20h
pop     ebx
pop     esi
pop     edi
retn
call    abort
push    ebp
mov     ebp, esp
push    esi
push    ebx
mov     ebx, eax
sub     esp, 10h
mov     esi, [eax]
mov     eax, dword_63225010
test    eax, eax
js      short loc_6321b10d
test    eax, eax
jnz     short loc_6321b0df
mov     ds:dword_6322f3ac, esi
mov     edx, [ebx]
lea     eax, [edx+20h]
mov     ecx, [eax+4]
mov     ebp, [edx+20h]
mov     esp, [eax+8]
jmp     ecx
mov     [esp+4], esi
mov     eax, ds:dwtlsindex
mov     [esp], eax
call    ds:tlssetvalue
test    eax, eax
push    esi
push    esi
jnz     short loc_6321b0cf
call    ds:getlasterror
mov     edx, [ebx]
lea     eax, [edx+20h]
mov     ecx, [eax+4]
mov     ebp, [edx+20h]
mov     esp, [eax+8]
jmp     ecx
call    sub_6321af60
mov     eax, dword_63225010
jmp     short loc_6321b0c5
push    ebp
push    edi
push    esi
mov     esi, eax
push    ebx
mov     ebx, edx
sub     esp, 3ch
mov     edx, [eax+0ch]
mov     [esp+4ch+var_24], edx
mov     edx, [eax+10h]
mov     eax, [ebx]
mov     [esp+4ch+var_20], edx
jmp     short loc_6321b14c
mov     ds:dword_6322f3ac, edi
mov     eax, [ebx]
mov     eax, [eax]
mov     [ebx], eax
test    eax, eax
jz      loc_6321b211
mov     ebp, [eax+18h]
xor     edi, edi
mov     eax, 0ah
mov     edx, [esp+4ch+var_20]
mov     ecx, [esi+4]
mov     [esp+4ch+var_38], ebx
mov     [esp+4ch+var_3c], esi
mov     [esp+4ch+var_34], edx
mov     edx, [esi]
mov     [esp+4ch+var_40], ecx
mov     [esp+4ch+lptlsvalue], eax
mov     [esp+4ch+dwtlsindex], 1
mov     [esp+4ch+var_44], edx
call    [esp+4ch+var_24]
test    eax, eax
jnz     loc_6321b230
cmp     edi, 5
jz      loc_6321b235
test    ebp, ebp
lea     esi, [esi+0]
jz      short loc_6321b1d4
mov     eax, [esi]
mov     edx, [esi+4]
mov     [esp+4ch+var_38], ebx
mov     [esp+4ch+var_3c], esi
mov     [esp+4ch+var_44], eax
mov     [esp+4ch+var_40], edx
mov     [esp+4ch+lptlsvalue], 0ah
mov     [esp+4ch+dwtlsindex], 1
call    ebp
cmp     eax, 7
mov     edi, eax
jz      short loc_6321b235
cmp     eax, 8
jnz     short loc_6321b230
mov     eax, [ebx]
mov     edi, [eax]
mov     eax, dword_63225010
test    eax, eax
js      short loc_6321b222
test    eax, eax
jz      loc_6321b140
mov     eax, ds:dwtlsindex
mov     [esp+4ch+lptlsvalue], edi
mov     [esp+4ch+dwtlsindex], eax
call    ds:tlssetvalue
sub     esp, 8
test    eax, eax
jnz     loc_6321b146
call    ds:getlasterror
jmp     loc_6321b146
xor     ebp, ebp
mov     edi, 5
mov     eax, 1ah
jmp     loc_6321b15e
call    sub_6321af60
mov     eax, dword_63225010
jmp     short loc_6321b1e1
mov     edi, 2
add     esp, 3ch
mov     eax, edi
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     esp, 2ch
mov     eax, dword_63225010
mov     [esp+2ch+var_10], ebx
mov     ebx, [esp+2ch+arg_0]
mov     [esp+2ch+var_c], esi
mov     [esp+2ch+var_8], edi
test    eax, eax
mov     [esp+2ch+var_4], ebp
js      loc_6321b2f0
test    eax, eax
jnz     short loc_6321b290
mov     eax, ds:dword_6322f3ac
mov     ds:dword_6322f3ac, ebx
mov     [ebx], eax
mov     ebx, [esp+2ch+var_10]
mov     esi, [esp+2ch+var_c]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
retn
mov     esi, ds:getlasterror
mov     ebp, ds:dwtlsindex
call    esi
mov     [esp+2ch+dwtlsindex], ebp
mov     edi, eax
call    ds:tlsgetvalue
sub     esp, 4
mov     ebp, eax
mov     [esp+2ch+dwtlsindex], edi
call    ds:setlasterror
mov     eax, ds:dwtlsindex
mov     [ebx], ebp
sub     esp, 4
mov     [esp+2ch+lptlsvalue], ebx
mov     [esp+2ch+dwtlsindex], eax
call    ds:tlssetvalue
sub     esp, 8
test    eax, eax
jnz     short loc_6321b275
mov     edx, esi
mov     ebx, [esp+2ch+var_10]
mov     esi, [esp+2ch+var_c]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
jmp     edx
call    sub_6321af60
mov     eax, dword_63225010
jmp     loc_6321b264
push    ebx
sub     esp, 18h
mov     eax, [esp+1ch+arg_0]
mov     ebx, [eax]
mov     eax, dword_63225010
test    eax, eax
js      short loc_6321b346
test    eax, eax
jnz     short loc_6321b322
mov     ds:dword_6322f3ac, ebx
add     esp, 18h
pop     ebx
retn
mov     eax, ds:dwtlsindex
mov     [esp+1ch+lptlsvalue], ebx
mov     [esp+1ch+dwtlsindex], eax
call    ds:tlssetvalue
sub     esp, 8
test    eax, eax
jnz     short loc_6321b31d
mov     eax, ds:getlasterror
add     esp, 18h
pop     ebx
jmp     eax
call    sub_6321af60
mov     eax, dword_63225010
jmp     short loc_6321b313
mov     eax, [esp+4]
mov     edx, [esp+8]
mov     eax, [eax]
mov     eax, [eax+edx*4+8]
retn
mov     eax, [esp+4]
mov     edx, [eax]
xor     eax, eax
test    edx, edx
jz      short locret_6321b37f
mov     eax, [edx+28h]
rep retn
jmp     short sub_6321b390
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_8]
mov     edx, [esp+arg_4]
mov     eax, [eax]
mov     [eax+edx*4+8], ecx
retn
mov     eax, [esp+4]
mov     eax, [eax]
mov     eax, [eax+4]
add     eax, 1
retn
mov     eax, [esp+arg_4]
mov     dword ptr [eax], 0
mov     eax, [esp+arg_0]
mov     edx, [eax]
xor     eax, eax
test    edx, edx
jz      short locret_6321b3dc
mov     eax, [edx+4]
add     eax, 1
rep retn
mov     eax, [esp+arg_0]
mov     edx, [esp+arg_4]
mov     eax, [eax]
sub     edx, 1
mov     [eax+4], edx
retn
jmp     short sub_6321b400
mov     eax, [esp+arg_0]
mov     eax, [eax]
mov     eax, [eax+1ch]
retn
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
push    edi
push    esi
push    ebx
sub     esp, 30h
mov     eax, dword_63225010
mov     ebx, [esp+3ch+arg_0]
test    eax, eax
js      loc_6321b533
test    eax, eax
mov     edi, ds:dword_6322f3ac
jnz     short loc_6321b4d1
test    edi, edi
mov     [esp+3ch+var_10], edi
jz      short loc_6321b4c5
mov     eax, edi
lea     esi, [esp+3ch+var_10]
nop
mov     ecx, [eax+18h]
test    ecx, ecx
jz      short loc_6321b4b7
mov     [esp+3ch+var_28], esi
mov     [esp+3ch+var_2c], ebx
mov     eax, [ebx]
mov     edx, [ebx+4]
mov     [esp+3ch+var_38], 1
mov     [esp+3ch+dwtlsindex], 1
mov     [esp+3ch+var_34], eax
mov     [esp+3ch+var_30], edx
call    ecx
cmp     eax, 6
jz      short loc_6321b500
cmp     eax, 8
jnz     short loc_6321b527
mov     eax, [esp+3ch+var_10]
mov     eax, [eax]
test    eax, eax
mov     [esp+3ch+var_10], eax
jnz     short loc_6321b480
mov     eax, 5
add     esp, 30h
pop     ebx
pop     esi
pop     edi
retn
mov     edi, ds:dwtlsindex
call    ds:getlasterror
mov     [esp+3ch+dwtlsindex], edi
mov     esi, eax
call    ds:tlsgetvalue
sub     esp, 4
mov     edi, eax
mov     [esp+3ch+dwtlsindex], esi
call    ds:setlasterror
sub     esp, 4
jmp     loc_6321b471
mov     eax, [esp+3ch+var_10]
mov     edx, esi
mov     dword ptr [ebx+0ch], 0
mov     [esp+3ch+var_10], edi
mov     [ebx+10h], eax
mov     eax, ebx
call    sub_6321b020
cmp     eax, 7
jnz     short loc_6321b4ca
mov     eax, esi
call    sub_6321b0b0
add     esp, 30h
mov     eax, 3
pop     ebx
pop     esi
pop     edi
retn
call    sub_6321af60
mov     eax, dword_63225010
jmp     loc_6321b467
sub     esp, 2ch
mov     edx, dword_63225010
mov     [esp+20h], ebx
mov     ebx, [esp+30h]
mov     [esp+24h], esi
mov     [esp+28h], edi
test    edx, edx
js      short loc_6321b5e0
test    edx, edx
mov     edi, ds:dword_6322f3ac
jnz     short loc_6321b5b0
mov     eax, [esp+34h]
lea     edx, [esp+1ch]
mov     [esp+1ch], edi
mov     [ebx+0ch], eax
mov     eax, [esp+38h]
mov     [ebx+10h], eax
mov     eax, ebx
call    sub_6321b120
cmp     eax, 7
jz      short loc_6321b5ed
mov     ebx, [esp+20h]
mov     esi, [esp+24h]
mov     edi, [esp+28h]
add     esp, 2ch
retn
mov     edi, ds:dwtlsindex
call    ds:getlasterror
mov     [esp], edi
mov     esi, eax
call    ds:tlsgetvalue
sub     esp, 4
mov     edi, eax
mov     [esp], esi
call    ds:setlasterror
sub     esp, 4
jmp     short loc_6321b577
call    sub_6321af60
mov     edx, dword_63225010
jmp     short loc_6321b56d
lea     eax, [esp+1ch]
call    sub_6321b0b0
lea     esi, [esi+0]
lea     edi, [edi+0]
push    edi
push    esi
push    ebx
sub     esp, 20h
mov     edx, dword_63225010
mov     ebx, [esp+2ch+arg_0]
test    edx, edx
js      short loc_6321b67b
test    edx, edx
mov     edi, ds:dword_6322f3ac
jnz     short loc_6321b655
mov     [esp+2ch+var_10], edi
mov     edi, [ebx+0ch]
lea     esi, [esp+2ch+var_10]
mov     edx, esi
mov     eax, ebx
test    edi, edi
jnz     short loc_6321b645
call    sub_6321b020
cmp     eax, 7
jz      short loc_6321b64c
nop
lea     esi, [esi+0]
call    abort
call    sub_6321b120
jmp     short loc_6321b636
mov     eax, esi
xchg    ax, ax
call    sub_6321b0b0
mov     edi, ds:dwtlsindex
call    ds:getlasterror
mov     [esp+2ch+dwtlsindex], edi
mov     esi, eax
call    ds:tlsgetvalue
push    edx
mov     edi, eax
mov     [esp+2ch+dwtlsindex], esi
call    ds:setlasterror
push    ecx
jmp     short loc_6321b61e
call    sub_6321af60
mov     edx, dword_63225010
jmp     short loc_6321b614
sub     esp, 2ch
mov     [esp+2ch+var_c], ebx
mov     ebx, [esp+2ch+arg_0]
mov     [esp+2ch+var_8], esi
mov     [esp+2ch+var_4], edi
mov     esi, [ebx+0ch]
test    esi, esi
jnz     short loc_6321b6c2
mov     [esp+2ch+dwtlsindex], ebx
call    sub_6321b450
mov     ebx, [esp+2ch+var_c]
mov     esi, [esp+2ch+var_8]
mov     edi, [esp+2ch+var_4]
add     esp, 2ch
retn
mov     edx, dword_63225010
test    edx, edx
js      short loc_6321b730
test    edx, edx
mov     edi, ds:dword_6322f3ac
jnz     short loc_6321b700
lea     edx, [esp+2ch+var_10]
mov     eax, ebx
mov     [esp+2ch+var_10], edi
call    sub_6321b120
cmp     eax, 7
jz      short loc_6321b6f0
call    abort
lea     eax, [esp+2ch+var_10]
call    sub_6321b0b0
lea     esi, [esi+0]
mov     edi, ds:dwtlsindex
call    ds:getlasterror
mov     [esp+2ch+dwtlsindex], edi
mov     esi, eax
call    ds:tlsgetvalue
sub     esp, 4
mov     edi, eax
mov     [esp+2ch+dwtlsindex], esi
call    ds:setlasterror
sub     esp, 4
jmp     short loc_6321b6d6
call    sub_6321af60
mov     edx, dword_63225010
jmp     short loc_6321b6cc
sub     esp, 1ch
mov     edx, [esp+1ch+arg_0]
mov     eax, [edx+8]
test    eax, eax
jz      short loc_6321b75b
mov     [esp+1ch+var_18], edx
mov     [esp+1ch+var_1c], 1
call    eax
add     esp, 1ch
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 3ch
mov     edx, dword_63225010
mov     edi, [esp+50h]
mov     ebp, [esp+54h]
test    edx, edx
js      loc_6321b800
test    edx, edx
mov     eax, ds:dword_6322f3ac
jnz     short loc_6321b7d0
mov     [esp+2ch], eax
lea     esi, [esp+2ch]
jmp     short loc_6321b79f
cmp     ebx, 5
jz      short loc_6321b7c0
mov     eax, [esp+2ch]
mov     eax, [eax]
mov     [esp+2ch], eax
cmp     eax, 1
sbb     ebx, ebx
mov     [esp+4], ebp
and     ebx, 5
mov     [esp], esi
call    edi
test    eax, eax
jz      short loc_6321b790
mov     ebx, 3
lea     esi, [esi+0]
add     esp, 3ch
mov     eax, ebx
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     esi, ds:dwtlsindex
call    ds:getlasterror
mov     [esp], esi
mov     ebx, eax
call    ds:tlsgetvalue
sub     esp, 4
mov     [esp+1ch], eax
mov     [esp], ebx
call    ds:setlasterror
sub     esp, 4
mov     eax, [esp+1ch]
jmp     short loc_6321b786
call    sub_6321af60
mov     edx, dword_63225010
jmp     loc_6321b77d
push    ecx
push    eax
cmp     eax, 1000h
lea     ecx, [esp+8+arg_0]
jb      short loc_6321b832
sub     ecx, 1000h
or      dword ptr [ecx], 0
sub     eax, 1000h
cmp     eax, 1000h
ja      short loc_6321b81d
sub     ecx, eax
or      dword ptr [ecx], 0
pop     eax
pop     ecx
retn
sub     esp, 2ch
mov     [esp+2ch+var_10], ebx
mov     ebx, [esp+2ch+arg_4]
mov     edx, [esp+2ch+arg_c]
mov     [esp+2ch+var_8], edi
mov     ecx, [esp+2ch+arg_0]
mov     [esp+2ch+var_c], esi
mov     eax, [esp+2ch+arg_8]
test    ebx, ebx
mov     [esp+2ch+var_4], ebp
mov     edi, edx
mov     [esp+2ch+var_28], 0
js      loc_6321b914
test    edi, edi
js      loc_6321b904
test    edx, edx
mov     edi, ebx
mov     [esp+2ch+var_24], ecx
mov     ebp, eax
mov     ebx, eax
jnz     short loc_6321b8c0
cmp     eax, edi
jbe     short loc_6321b8e3
mov     eax, ecx
mov     edx, edi
xor     ecx, ecx
div     ebp
mov     esi, eax
mov     edx, ecx
mov     ecx, [esp+2ch+var_28]
mov     eax, esi
test    ecx, ecx
jz      short loc_6321b8ac
neg     eax
adc     edx, 0
neg     edx
mov     ebx, [esp+2ch+var_10]
mov     esi, [esp+2ch+var_c]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
retn
xor     ecx, ecx
xor     esi, esi
cmp     edx, edi
ja      short loc_6321b899
bsr     ebx, edx
xor     ebx, 1fh
jnz     short loc_6321b928
cmp     eax, [esp+2ch+var_24]
jbe     short loc_6321b8da
cmp     edx, edi
jnb     short loc_6321b899
xor     ecx, ecx
mov     esi, 1
jmp     short loc_6321b899
test    eax, eax
jnz     short loc_6321b8f2
mov     eax, 1
xor     edx, edx
div     ebp
mov     ebx, eax
mov     eax, edi
xor     edx, edx
div     ebx
mov     edi, eax
mov     eax, ecx
mov     ecx, edi
div     ebx
mov     esi, eax
jmp     short loc_6321b899
neg     eax
adc     edx, 0
not     [esp+2ch+var_28]
neg     edx
jmp     loc_6321b87d
neg     ecx
adc     ebx, 0
neg     ebx
mov     [esp+2ch+var_28], 0ffffffffh
jmp     loc_6321b875
mov     eax, 20h
mov     ecx, ebx
sub     eax, ebx
mov     esi, ebp
shl     edx, cl
mov     ecx, eax
shr     esi, cl
mov     ecx, ebx
or      esi, edx
mov     edx, edi
mov     [esp+2ch+var_20], esi
mov     esi, [esp+2ch+var_24]
shl     ebp, cl
mov     ecx, eax
shr     edx, cl
mov     ecx, ebx
shl     edi, cl
mov     ecx, eax
shr     esi, cl
or      esi, edi
mov     eax, esi
div     [esp+2ch+var_20]
mov     edi, edx
mov     esi, eax
mul     ebp
cmp     edi, edx
jb      short loc_6321b984
mov     ebp, [esp+2ch+var_24]
mov     ecx, ebx
shl     ebp, cl
cmp     ebp, eax
jb      short loc_6321b980
xor     ecx, ecx
jmp     loc_6321b899
cmp     edi, edx
jnz     short loc_6321b973
sub     esi, 1
xor     ecx, ecx
jmp     loc_6321b899
sub     esp, 2ch
mov     edx, [esp+34h]
mov     [esp+24h], ebx
mov     ebx, [esp+30h]
mov     [esp+28h], esi
test    edx, edx
jnz     short loc_6321b9b8
mov     eax, 16h
mov     ebx, [esp+24h]
mov     esi, [esp+28h]
add     esp, 2ch
retn
test    ebx, ebx
jz      short loc_6321b9a7
mov     ecx, [ebx]
xor     eax, eax
test    ecx, ecx
jnz     short loc_6321b9ac
mov     ecx, 1
lock xadd [ebx+4], ecx
cmp     ecx, 0ffffffffh
jz      short loc_6321ba00
mov     edx, [ebx]
mov     esi, ds:sleep
test    edx, edx
jnz     short loc_6321b9ac
nop
mov     dword ptr [esp], 0
call    esi
mov     eax, [ebx]
sub     esp, 4
test    eax, eax
jz      short loc_6321b9e0
xor     eax, eax
mov     ebx, [esp+24h]
mov     esi, [esp+28h]
add     esp, 2ch
retn
mov     [esp+1ch], eax
call    edx
mov     eax, [esp+1ch]
mov     dword ptr [ebx], 1
jmp     short loc_6321b9ac
sub     esp, 0ch
mov     [esp+0ch+var_8], ebx
mov     ebx, [esp+0ch+arg_4]
mov     [esp+0ch+var_4], esi
mov     esi, [esp+0ch+arg_0]
call    ds:tlsalloc
cmp     eax, 0ffffffffh
jz      short loc_6321ba58
mov     [esi], eax
mov     esi, [esp+0ch+var_4]
mov     [esp+0ch+arg_4], ebx
mov     ebx, [esp+0ch+var_8]
mov     [esp+0ch+arg_0], eax
add     esp, 0ch
jmp     sub_63221a70
mov     eax, ds:getlasterror
mov     ebx, [esp+0ch+var_8]
mov     esi, [esp+0ch+var_4]
add     esp, 0ch
jmp     eax
sub     esp, 1ch
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+dwtlsindex], eax
call    ds:tlsfree
sub     esp, 4
test    eax, eax
jz      short loc_6321ba90
xor     eax, eax
add     esp, 1ch
retn
mov     eax, ds:getlasterror
add     esp, 1ch
jmp     eax
sub     esp, 1ch
mov     [esp+1ch+var_8], ebx
mov     [esp+1ch+var_4], esi
call    ds:getlasterror
mov     ebx, eax
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+dwtlsindex], eax
call    ds:tlsgetvalue
sub     esp, 4
mov     esi, eax
mov     [esp+1ch+dwtlsindex], ebx
call    ds:setlasterror
mov     eax, esi
sub     esp, 4
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
add     esp, 1ch
retn
sub     esp, 1ch
mov     eax, [esp+1ch+arg_4]
mov     [esp+1ch+lptlsvalue], eax
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+dwtlsindex], eax
call    ds:tlssetvalue
sub     esp, 8
test    eax, eax
jz      short loc_6321bb05
xor     eax, eax
add     esp, 1ch
retn
mov     eax, ds:getlasterror
add     esp, 1ch
jmp     eax
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     dword ptr [ebx], 0ffffffffh
mov     [esp+1ch+lpname], 0
mov     [esp+1ch+lmaximumcount], 0ffffh
mov     [esp+1ch+linitialcount], 0
mov     [esp+1ch+lpsemaphoreattributes], 0
call    ds:createsemaphorea
sub     esp, 10h
mov     [ebx+4], eax
add     esp, 18h
pop     ebx
retn
sub     esp, 1ch
mov     eax, [esp+1ch+arg_0]
mov     eax, [eax+4]
mov     [esp+1ch+hobject], eax
call    ds:closehandle
sub     esp, 4
add     esp, 1ch
retn
sub     esp, 1ch
mov     eax, 1
mov     [esp+1ch+var_8], ebx
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_4], esi
lock xadd [ebx], eax
xor     esi, esi
cmp     eax, 0ffffffffh
jz      short loc_6321bbb7
mov     [esp+1ch+dwmilliseconds], 0ffffffffh
mov     eax, [ebx+4]
mov     [esp+1ch+hhandle], eax
call    ds:waitforsingleobject
sub     esp, 8
test    eax, eax
jz      short loc_6321bbb7
mov     eax, 0ffffffffh
lock xadd [ebx], eax
mov     si, 1
mov     eax, esi
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
add     esp, 1ch
retn
mov     edx, [esp+4]
mov     eax, 0ffffffffh
xor     ecx, ecx
lock cmpxchg [edx], ecx
not     eax
shr     eax, 1fh
retn
sub     esp, 1ch
mov     edx, 0ffffffffh
mov     ecx, [esp+1ch+arg_0]
lock xadd [ecx], edx
xor     eax, eax
test    edx, edx
jle     short loc_6321bc2d
mov     [esp+1ch+lppreviouscount], 0
mov     [esp+1ch+lreleasecount], 1
mov     eax, [ecx+4]
mov     [esp+1ch+hsemaphore], eax
call    ds:releasesemaphore
sub     esp, 0ch
test    eax, eax
setz    al
movzx   eax, al
add     esp, 1ch
retn
jmp     short loc_6321bc40
push    ebx
sub     esp, 18h
mov     ebx, [esp+20h]
mov     dword ptr [ebx], 0ffffffffh
mov     dword ptr [ebx+4], 0
mov     dword ptr [ebx+8], 0
mov     dword ptr [esp+0ch], 0
mov     dword ptr [esp+8], 0ffffh
mov     dword ptr [esp+4], 0
mov     dword ptr [esp], 0
call    ds:createsemaphorea
sub     esp, 10h
mov     [ebx+0ch], eax
add     esp, 18h
pop     ebx
retn
sub     esp, 1ch
mov     [esp+14h], ebx
mov     ebx, [esp+20h]
mov     [esp+18h], esi
call    ds:getcurrentthreadid
mov     esi, eax
mov     eax, 1
lock xadd [ebx], eax
cmp     eax, 0ffffffffh
jz      short loc_6321bd10
cmp     esi, [ebx+8]
jz      short loc_6321bcf0
mov     dword ptr [esp+4], 0ffffffffh
mov     eax, [ebx+0ch]
mov     [esp], eax
call    ds:waitforsingleobject
sub     esp, 8
test    eax, eax
jz      short loc_6321bd28
mov     eax, 0ffffffffh
lock xadd [ebx], eax
mov     eax, 1
mov     ebx, [esp+14h]
mov     esi, [esp+18h]
add     esp, 1ch
retn
mov     eax, 0ffffffffh
lock xadd [ebx], eax
xor     eax, eax
mov     esi, [esp+18h]
add     dword ptr [ebx+4], 1
mov     ebx, [esp+14h]
add     esp, 1ch
retn
mov     [ebx+8], esi
xor     eax, eax
mov     esi, [esp+18h]
mov     dword ptr [ebx+4], 1
mov     ebx, [esp+14h]
add     esp, 1ch
retn
mov     [ebx+8], esi
mov     esi, [esp+18h]
mov     dword ptr [ebx+4], 1
mov     ebx, [esp+14h]
add     esp, 1ch
retn
push    ebx
sub     esp, 8
mov     ebx, [esp+10h]
call    ds:getcurrentthreadid
xor     edx, edx
mov     ecx, eax
mov     eax, 0ffffffffh
lock cmpxchg [ebx], edx
test    eax, eax
js      short loc_6321bd74
cmp     ecx, [ebx+8]
mov     eax, 1
jnz     short loc_6321bd6f
add     dword ptr [ebx+4], 1
xor     al, al
add     esp, 8
pop     ebx
retn
mov     dword ptr [ebx+4], 1
xor     eax, eax
mov     [ebx+8], ecx
add     esp, 8
pop     ebx
retn
sub     esp, 1ch
xor     eax, eax
mov     edx, [esp+20h]
mov     ecx, [edx+4]
sub     ecx, 1
test    ecx, ecx
mov     [edx+4], ecx
jnz     short loc_6321bde1
mov     dword ptr [edx+8], 0
mov     ecx, 0ffffffffh
lock xadd [edx], ecx
test    ecx, ecx
jle     short loc_6321bde1
mov     dword ptr [esp+8], 0
mov     dword ptr [esp+4], 1
mov     eax, [edx+0ch]
mov     [esp], eax
call    ds:releasesemaphore
sub     esp, 0ch
test    eax, eax
setz    al
movzx   eax, al
add     esp, 1ch
retn
mov     eax, [esp+0ch]
mov     edx, [esp+8]
mov     ecx, [esp+4]
lock cmpxchg [ecx], edx
retn
jmp     short sub_6321be20
mov     eax, [esp+arg_8]
mov     edx, [esp+arg_4]
mov     ecx, [esp+arg_0]
lock cmpxchg [ecx], edx
retn    0ch
mov     eax, 1
retn    0ch
mov     eax, 1
retn    0ch
push    ebx
sub     esp, 28h
mov     eax, [esp+2ch+arg_8]
mov     ebx, [esp+2ch+arg_0]
mov     [esp+2ch+var_24], 0
mov     [esp+2ch+var_2c], 4000h
mov     [esp+2ch+var_1c], eax
mov     eax, [esp+2ch+arg_4]
mov     [esp+2ch+var_28], ebx
mov     [esp+2ch+var_20], eax
call    sub_6321dec0
mov     byte ptr [ebx+eax], 0
add     esp, 28h
pop     ebx
retn
sub     esp, 24ch
mov     [esp+24ch+var_10], ebx
mov     ebx, [esp+24ch+arg_4]
mov     [esp+24ch+var_c], esi
mov     esi, [esp+24ch+arg_0]
mov     [esp+24ch+var_4], ebp
mov     [esp+24ch+var_8], edi
mov     [esp+24ch+size], 4000h
call    malloc
test    ebx, ebx
mov     ebp, eax
jz      loc_6321bfe0
cmp     word ptr [ebx], 0
mov     eax, offset source
cmovz   ebx, eax
test    esi, esi
jz      loc_6321bfd5
cmp     word ptr [esi], 0
mov     eax, offset asc_6322def0
cmovz   esi, eax
lea     edi, [esp+24ch+filename]
mov     [esp+24ch+nsize], 104h
mov     [esp+24ch+lpfilename], edi
mov     [esp+24ch+size], 0
call    ds:getmodulefilenamew
sub     esp, 0ch
test    eax, eax
jz      loc_6321bfc0
mov     eax, [esp+24ch+arg_8]
mov     [esp+24ch+var_234], esi
mov     [esp+24ch+var_23c], ebx
mov     [esp+24ch+utype], edi
mov     [esp+24ch+var_238], eax
mov     [esp+24ch+nsize], offset aassertionfaile
mov     [esp+24ch+lpfilename], 1fffh
mov     [esp+24ch+size], ebp
call    _snwprintf
mov     eax, ds:dword_6322f018
test    eax, eax
jz      loc_6321c007
mov     [esp+24ch+utype], 12012h
mov     [esp+24ch+nsize], offset caption
mov     [esp+24ch+lpfilename], ebp
mov     [esp+24ch+size], 0
call    ds:messageboxw
sub     esp, 10h
cmp     eax, 3
jz      short loc_6321bfef
cmp     eax, 5
jnz     short loc_6321bfea
mov     ebx, [esp+24ch+var_10]
mov     esi, [esp+24ch+var_c]
mov     edi, [esp+24ch+var_8]
mov     ebp, [esp+24ch+var_4]
add     esp, 24ch
retn
mov     [esp+24ch+lpfilename], offset source
mov     [esp+24ch+size], edi
call    wcscpy
jmp     loc_6321bf2e
mov     esi, offset asc_6322def0
jmp     loc_6321bf06
mov     ebx, offset source
jmp     loc_6321bef2
call    abort
mov     [esp+24ch+size], 16h
call    raise
mov     [esp+24ch+size], 3
call    _exit
mov     eax, ds:_iob
mov     [esp+24ch+nsize], ebp
mov     [esp+24ch+lpfilename], offset aws
add     eax, 40h
mov     [esp+24ch+size], eax
call    fwprintf
call    abort
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 2ch
mov     edi, [esp+40h]
mov     edx, [esp+48h]
mov     esi, [esp+44h]
mov     [esp], edi
mov     [esp+1ch], edx
call    strlen
lea     eax, [eax+eax+2]
mov     [esp], eax
call    malloc
mov     [esp], esi
mov     ebx, eax
call    strlen
lea     eax, [eax+eax+2]
mov     [esp], eax
call    malloc
movzx   ecx, byte ptr [edi]
xor     edx, edx
test    cl, cl
jz      short loc_6321c096
xor     ebp, ebp
lea     esi, [esi+0]
add     edx, 1
movzx   ecx, cl
mov     [ebx+ebp*2], cx
movzx   ecx, byte ptr [edi+edx]
mov     ebp, edx
test    cl, cl
jnz     short loc_6321c080
add     edx, edx
mov     word ptr [ebx+edx], 0
movzx   ecx, byte ptr [esi]
xor     edx, edx
test    cl, cl
jz      short loc_6321c0bd
xor     edi, edi
add     edx, 1
movzx   ecx, cl
mov     [eax+edi*2], cx
movzx   ecx, byte ptr [esi+edx]
mov     edi, edx
test    cl, cl
jnz     short loc_6321c0a7
add     edx, edx
mov     word ptr [eax+edx], 0
mov     edx, [esp+1ch]
mov     [esp+4], eax
mov     [esp+18h], eax
mov     [esp], ebx
mov     [esp+8], edx
call    sub_6321bea0
mov     [esp], ebx
call    free
mov     eax, [esp+18h]
mov     [esp+40h], eax
add     esp, 2ch
pop     ebx
pop     esi
pop     edi
pop     ebp
jmp     free
fld     [esp+arg_0]
fld     st
push    eax
sub     esp, 8
fnstcw  [esp+0ch+var_8]
movzx   eax, [esp+0ch+var_8]
or      ah, 0ch
mov     [esp+0ch+var_c], ax
fldcw   [esp+0ch+var_c]
frndint
fldcw   [esp+0ch+var_8]
add     esp, 8
pop     eax
test    eax, eax
fld     st
jz      short loc_6321c133
fxch    st(1)
fstp    qword ptr [eax]
jmp     short loc_6321c135
fstp    st(1)
fxch    st(1)
fxam
fstsw   ax
and     eax, 4500h
cmp     eax, 500h
jz      short loc_6321c150
fsubrp  st(1), st
retn
fstp    st
fstp    st
fldz
retn
push    ebx
sub     esp, 78h
fld     [esp+7ch+arg_0]
fld     [esp+7ch+arg_8]
fld     st(1)
fxam
fstsw   ax
fstp    st
mov     edx, eax
fld     st
fxam
fstsw   ax
fstp    st
and     eax, 4500h
cmp     eax, 4000h
jz      loc_6321c400
fld1
fld     st
fxch    st(3)
fucomi  st, st(3)
fstp    st(3)
jnp     loc_6321c310
fstp    st
and     edx, 4500h
cmp     eax, 100h
jz      loc_6321c325
cmp     edx, 100h
jz      loc_6321c325
cmp     edx, 4000h
jz      loc_6321c391
cmp     eax, 500h
jz      loc_6321c580
cmp     edx, 500h
jnz     loc_6321c410
fld     st(1)
fxam
fstsw   ax
fstp    st
test    ah, 2
lea     ebx, [esp+7ch+var_14]
jnz     loc_6321c4e4
fst     qword ptr [esp+7ch+var_7c]
fxch    st(1)
fstp    [esp+7ch+var_4c]
fstp    [esp+7ch+var_5c]
mov     dword ptr [esp+7ch+var_7c+8], 0ffffffffh
call    sub_6321ea20
mov     eax, ebx
fstp    qword ptr [esp+7ch+var_7c]
call    sub_6321c100
xor     eax, eax
mov     edx, 1
fldz
fld     st
fucomip st, st(2)
fstp    st(1)
setp    al
fld     [esp+7ch+var_4c]
cmovz   edx, eax
fld     st
fxam
fstsw   ax
fstp    st
test    ah, 2
fld     [esp+7ch+var_5c]
jz      short loc_6321c270
fld     st
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      short loc_6321c276
test    edx, edx
jz      loc_6321c2ef
fstp    st(2)
fxch    st(1)
jmp     short loc_6321c27a
fstp    st(2)
fxch    st(1)
jmp     short loc_6321c27a
fstp    st(2)
fxch    st(1)
fld     st(1)
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      short loc_6321c2a0
fld     st
fxam
fstsw   ax
fstp    st
test    ah, 2
jnz     short loc_6321c2a0
test    edx, edx
jnz     loc_6321c6ba
xchg    ax, ax
fld     st(1)
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      short loc_6321c2c4
fld     st
fxam
fstsw   ax
fstp    st
test    ah, 2
jnz     short loc_6321c2c4
test    edx, edx
jz      loc_6321c55e
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      loc_6321c6d0
test    edx, edx
jz      loc_6321c540
fxam
fstsw   ax
fstp    st
test    ah, 2
fldz
jz      short loc_6321c306
jmp     loc_6321c4dd
fstp    st
fstp    st
jmp     short loc_6321c306
fstp    st(1)
fstp    st(1)
jmp     short loc_6321c306
fstp    st
jmp     short loc_6321c306
fstp    st
add     esp, 78h
pop     ebx
retn
jz      short loc_6321c2f5
fstp    st
and     edx, 4500h
cmp     eax, 100h
jnz     loc_6321c1b9
fld     st(1)
fxam
fstsw   ax
fstp    st
test    ah, 2
jnz     short loc_6321c387
fld     ds:flt_6322dfbc
fxch    st(2)
fstp    [esp+7ch+var_4c]
fstp    [esp+7ch+var_5c]
fstp    [esp+7ch+var_3c]
call    _errno
fld     [esp+7ch+var_3c]
mov     dword ptr [eax], 21h
fstp    [esp+7ch+var_64]
fld     [esp+7ch+var_5c]
fstp    [esp+7ch+var_6c]
fld     [esp+7ch+var_4c]
fstp    qword ptr [esp+7ch+var_7c+8]
mov     dword ptr [esp+7ch+var_7c+4], offset apow
mov     dword ptr [esp+7ch+var_7c], 1
call    sub_63221a90
fld     [esp+7ch+var_3c]
add     esp, 78h
pop     ebx
retn
fld     ds:flt_6322dfc0
fxch    st(2)
jmp     short loc_6321c33b
cmp     eax, 500h
jz      loc_6321c530
fld     st(1)
fxam
fstsw   ax
fstp    st
test    ah, 2
lea     ebx, [esp+7ch+var_14]
jz      loc_6321c5d3
fst     qword ptr [esp+7ch+var_7c]
fxch    st(1)
mov     eax, ebx
fstp    [esp+7ch+var_4c]
fstp    [esp+7ch+var_5c]
call    sub_6321c100
fldz
fxch    st(1)
fucomip st, st(1)
fstp    st
fld     [esp+7ch+var_4c]
fld     [esp+7ch+var_5c]
jp      short loc_6321c3de
jz      loc_6321c5d3
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      loc_6321c544
fchs
fdivr   ds:flt_6322dfc4
jmp     loc_6321c306
fstp    st
fstp    st
fld1
add     esp, 78h
pop     ebx
retn
fst     qword ptr [esp+7ch+var_7c]
fxch    st(1)
fstp    [esp+7ch+var_4c]
lea     ebx, [esp+7ch+var_14]
fstp    [esp+7ch+var_5c]
mov     eax, ebx
call    sub_6321c100
fldz
fxch    st(1)
fucomip st, st(1)
fstp    st
fld     [esp+7ch+var_4c]
fld     [esp+7ch+var_5c]
jp      short loc_6321c440
jz      loc_6321c643
fld     st(1)
fxam
fstsw   ax
fstp    st
test    ah, 2
jnz     loc_6321c715
fld     ds:flt_6322dfd0
fxch    st(1)
fucomi  st, st(1)
fstp    st(1)
jp      short loc_6321c467
jmp     loc_6321c706
fstp    st
fld     st(1)
fabs
fstp    [esp+7ch+var_7c]
fxch    st(1)
fstp    [esp+7ch+var_4c]
fstp    [esp+7ch+var_5c]
call    sub_6321ea90
fld     [esp+7ch+var_5c]
fmulp   st(1), st
fstp    [esp+7ch+var_7c]
call    sub_6321eac8
fstp    [esp+7ch+var_24]
fld     [esp+7ch+var_24]
fld     [esp+7ch+var_4c]
fxam
fstsw   ax
fstp    st
test    ah, 2
fld     [esp+7ch+var_5c]
jz      loc_6321c300
fstp    qword ptr [esp+7ch+var_7c]
fstp    [esp+7ch+var_3c]
mov     dword ptr [esp+7ch+var_7c+8], 0ffffffffh
call    sub_6321ea20
mov     eax, ebx
fstp    qword ptr [esp+7ch+var_7c]
call    sub_6321c100
fldz
fxch    st(1)
fucomip st, st(1)
fstp    st
fld     [esp+7ch+var_3c]
jp      short loc_6321c4dd
jz      loc_6321c306
fchs
jmp     loc_6321c306
fst     qword ptr [esp+7ch+var_7c]
fxch    st(1)
mov     eax, ebx
fstp    [esp+7ch+var_4c]
fstp    [esp+7ch+var_5c]
call    sub_6321c100
fldz
fxch    st(1)
fucomip st, st(1)
fstp    st
fld     [esp+7ch+var_4c]
fld     [esp+7ch+var_5c]
jp      short loc_6321c510
jz      loc_6321c1fe
fxam
fstsw   ax
fstp    st
test    ah, 2
fchs
jz      loc_6321c306
fdivr   ds:flt_6322dfc4
jmp     loc_6321c306
fstp    st(1)
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      short loc_6321c546
jmp     short loc_6321c570
fstp    st
jmp     short loc_6321c546
fstp    st
fldz
jmp     loc_6321c306
fxam
fstsw   ax
fstp    st
test    ah, 2
jnz     short loc_6321c570
jmp     short loc_6321c546
fstp    st
fstp    st
jmp     short loc_6321c570
fstp    st
jmp     short loc_6321c570
fstp    st
jmp     short loc_6321c570
fstp    st
xchg    ax, ax
fld     ds:flt_6322dfc8
jmp     loc_6321c306
cmp     edx, 500h
jz      loc_6321c6e0
fld     st(1)
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      short loc_6321c5a0
fxch    st(1)
fchs
fxch    st(1)
fld1
fld     st
fxch    st(3)
fucomi  st, st(3)
fstp    st(3)
jnp     loc_6321c6f7
fstp    st
jmp     short loc_6321c5b6
fstp    st
fld1
fxch    st(2)
fucomip st, st(2)
fstp    st(1)
jbe     short loc_6321c550
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      short loc_6321c570
fldz
jmp     loc_6321c306
fst     qword ptr [esp+7ch+var_7c]
fxch    st(1)
fstp    [esp+7ch+var_4c]
fstp    [esp+7ch+var_5c]
mov     dword ptr [esp+7ch+var_7c+8], 0ffffffffh
call    sub_6321ea20
mov     eax, ebx
fstp    qword ptr [esp+7ch+var_7c]
call    sub_6321c100
xor     eax, eax
mov     edx, 1
fldz
fld     st
fucomip st, st(2)
fstp    st(1)
setp    al
fld     [esp+7ch+var_5c]
cmovz   edx, eax
fxam
fstsw   ax
fstp    st
test    ah, 2
fld     [esp+7ch+var_4c]
jnz     short loc_6321c690
test    edx, edx
jz      loc_6321c304
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      loc_6321c306
fstp    st
fldz
fchs
jmp     loc_6321c306
fld     [esp+7ch+var_14]
fld     ds:dbl_6322dfd8
fucomip st, st(1)
jb      loc_6321c465
fld     ds:flt_6322dfe0
fxch    st(1)
fucomip st, st(1)
fstp    st
jb      loc_6321c467
fnstcw  [esp+7ch+var_26]
movzx   eax, [esp+7ch+var_26]
mov     ah, 0ch
mov     [esp+7ch+var_28], ax
fldcw   [esp+7ch+var_28]
fistp   dword ptr [esp+7ch+var_7c+8]
fldcw   [esp+7ch+var_26]
fstp    qword ptr [esp+7ch+var_7c]
call    sub_6321eb20
jmp     loc_6321c306
fstp    st(1)
test    edx, edx
jz      loc_6321c564
fxam
fstsw   ax
test    ah, 2
jz      loc_6321c568
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      loc_6321c570
jmp     short loc_6321c6be
fstp    st
fstp    st
fld     ds:flt_6322dfcc
jmp     loc_6321c306
test    edx, edx
jz      loc_6321c56c
jmp     short loc_6321c6a8
fstp    st(1)
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      loc_6321c570
jmp     loc_6321c546
jnz     loc_6321c5b4
fstp    st(1)
fstp    st(1)
jmp     loc_6321c306
jnz     loc_6321c467
fstp    st
fsqrt
jmp     loc_6321c306
fxch    st(1)
fstp    [esp+7ch+var_4c]
fstp    [esp+7ch+var_5c]
call    _errno
fld     ds:flt_6322dfc0
mov     dword ptr [eax], 21h
fst     [esp+7ch+var_64]
mov     dword ptr [esp+7ch+var_7c+4], offset apow
fld     [esp+7ch+var_5c]
fstp    [esp+7ch+var_6c]
fld     [esp+7ch+var_4c]
fstp    qword ptr [esp+7ch+var_7c+8]
fstp    dword ptr [esp+7ch+var_3c]
mov     dword ptr [esp+7ch+var_7c], 1
call    sub_63221a90
fld     dword ptr [esp+7ch+var_3c]
jmp     loc_6321c306
sub     esp, 2ch
mov     [esp+2ch+var_4], esi
mov     esi, [esp+2ch+arg_4]
mov     [esp+2ch+var_8], ebx
mov     eax, [esp+2ch+arg_8]
mov     ebx, [esp+2ch+arg_0]
mov     edx, [esp+2ch+arg_c]
test    esi, esi
jz      short loc_6321c7c3
sub     esi, 1
mov     [esp+2ch+var_24], esi
mov     [esp+2ch+var_28], ebx
mov     [esp+2ch+var_1c], edx
mov     [esp+2ch+var_20], eax
mov     [esp+2ch+var_2c], 0
call    sub_6321dec0
cmp     eax, esi
cmovle  esi, eax
mov     byte ptr [ebx+esi], 0
mov     ebx, [esp+2ch+var_8]
mov     esi, [esp+2ch+var_4]
add     esp, 2ch
retn
mov     [esp+2ch+var_28], ebx
mov     [esp+2ch+var_1c], edx
mov     [esp+2ch+var_20], eax
mov     [esp+2ch+var_24], 0
mov     [esp+2ch+var_2c], 0
call    sub_6321dec0
mov     ebx, [esp+2ch+var_8]
mov     esi, [esp+2ch+var_4]
add     esp, 2ch
retn
sub     esp, 2ch
lea     eax, [esp+2ch+arg_8]
mov     [esp+2ch+var_1c], eax
mov     eax, [esp+2ch+arg_4]
mov     [esp+2ch+var_24], 0
mov     [esp+2ch+var_2c], 6000h
mov     [esp+2ch+var_20], eax
mov     eax, [esp+2ch+arg_0]
mov     [esp+2ch+var_28], eax
call    sub_6321dec0
add     esp, 2ch
retn
sub     esp, 2ch
mov     eax, [esp+2ch+arg_8]
mov     [esp+2ch+var_24], 0
mov     [esp+2ch+var_2c], 6000h
mov     [esp+2ch+var_1c], eax
mov     eax, [esp+2ch+arg_4]
mov     [esp+2ch+var_20], eax
mov     eax, [esp+2ch+arg_0]
mov     [esp+2ch+var_28], eax
call    sub_6321dec0
add     esp, 2ch
retn
push    ebx
mov     edx, eax
sub     esp, 48h
mov     eax, [esp+4ch+arg_0]
mov     dword ptr [esp+4ch+var_2c], eax
mov     eax, [esp+4ch+arg_4]
mov     dword ptr [esp+4ch+var_2c+4], eax
mov     eax, [esp+4ch+arg_8]
mov     dword ptr [esp+4ch+var_2c+8], eax
mov     eax, [esp+4ch+arg_c]
fld     [esp+4ch+var_2c]
mov     [esp+4ch+var_20], eax
fxam
fstsw   ax
fstp    st
movzx   eax, ax
test    ah, 1
jz      short loc_6321c8c3
test    ah, 4
jz      loc_6321c940
mov     [esp+4ch+var_14], 3
movsx   eax, word ptr [esp+4ch+var_2c+8]
xor     ecx, ecx
jmp     short loc_6321c8d7
test    ah, 4
jnz     short loc_6321c923
movsx   eax, word ptr [esp+4ch+var_2c+8]
xor     ecx, ecx
mov     [esp+4ch+var_14], 0
and     eax, 8000h
mov     ebx, [esp+4ch+arg_18]
mov     [ebx], eax
lea     eax, [esp+4ch+var_10]
mov     [esp+4ch+var_30], eax
mov     eax, [esp+4ch+arg_14]
mov     [esp+4ch+var_3c], edx
mov     [esp+4ch+var_48], ecx
mov     [esp+4ch+var_4c], offset dword_6322501c
mov     [esp+4ch+var_34], eax
mov     eax, [esp+4ch+arg_10]
mov     [esp+4ch+var_38], eax
lea     eax, [esp+4ch+var_14]
mov     [esp+4ch+var_40], eax
lea     eax, [esp+4ch+var_2c]
mov     [esp+4ch+var_44], eax
call    sub_6321ed60
add     esp, 48h
pop     ebx
retn
test    ah, 40h
jz      short loc_6321c950
mov     [esp+4ch+var_14], 2
movsx   eax, word ptr [esp+4ch+var_2c+8]
mov     ecx, 0ffffbfc3h
jmp     short loc_6321c8d7
mov     [esp+4ch+var_14], 4
xor     ecx, ecx
xor     eax, eax
jmp     short loc_6321c8dc
movsx   eax, word ptr [esp+4ch+var_2c+8]
mov     [esp+4ch+var_14], 1
mov     ecx, eax
and     ecx, 7fffh
sub     ecx, 403eh
jmp     loc_6321c8d7
push    ebx
sub     esp, 28h
mov     ecx, [edx+4]
test    ch, 40h
jnz     short loc_6321c984
mov     ebx, [edx+20h]
cmp     [edx+24h], ebx
jle     short loc_6321c994
and     ch, 20h
jnz     short loc_6321c9a0
mov     ebx, [edx]
mov     ecx, [edx+20h]
mov     [ebx+ecx], al
mov     ebx, [edx+20h]
add     ebx, 1
mov     [edx+20h], ebx
add     esp, 28h
pop     ebx
retn
mov     ecx, [edx]
mov     [esp+2ch+var_10], edx
mov     [esp+2ch+character], eax
mov     [esp+2ch+stream], ecx
call    fputc
mov     edx, [esp+2ch+var_10]
mov     ebx, [edx+20h]
add     ebx, 1
mov     [edx+20h], ebx
add     esp, 28h
pop     ebx
retn
push    ebp
mov     ebp, edx
push    edi
push    esi
mov     esi, ecx
push    ebx
mov     ebx, eax
sub     esp, 4ch
lea     eax, [esp+5ch+var_20]
lea     edi, [esp+5ch+var_30]
mov     [esp+5ch+var_54], eax
mov     [esp+5ch+var_58], 0
mov     [esp+5ch+var_5c], edi
call    sub_632203a0
mov     eax, [esi+0ch]
test    eax, eax
js      short loc_6321ca05
cmp     ebp, eax
cmovg   ebp, eax
mov     eax, [esi+8]
cmp     ebp, eax
jge     loc_6321ca97
sub     eax, ebp
test    eax, eax
mov     [esi+8], eax
jle     short loc_6321ca23
test    byte ptr [esi+5], 4
jz      loc_6321caa0
test    ebp, ebp
mov     [esp+5ch+var_40], esi
jle     short loc_6321ca70
movzx   eax, word ptr [ebx]
lea     edx, [esp+5ch+var_20]
add     ebx, 2
mov     [esp+5ch+var_54], edx
mov     [esp+5ch+var_5c], edi
mov     [esp+5ch+var_58], eax
call    sub_632203a0
test    eax, eax
jle     short loc_6321ca70
lea     ecx, [edi+eax]
mov     esi, edi
movsx   eax, byte ptr [esi]
add     esi, 1
mov     edx, [esp+5ch+var_40]
mov     [esp+5ch+var_44], ecx
call    sub_6321c970
mov     ecx, [esp+5ch+var_44]
cmp     esi, ecx
jnz     short loc_6321ca4e
sub     ebp, 1
test    ebp, ebp
jg      short loc_6321ca2b
mov     esi, [esp+5ch+var_40]
jmp     short loc_6321ca82
mov     edx, esi
mov     eax, 20h
call    sub_6321c970
mov     eax, [esi+8]
lea     edx, [eax-1]
test    eax, eax
mov     [esi+8], edx
jg      short loc_6321ca76
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     dword ptr [esi+8], 0ffffffffh
jmp     short loc_6321ca23
sub     eax, 1
mov     [esi+8], eax
mov     edx, esi
mov     eax, 20h
call    sub_6321c970
mov     eax, [esi+8]
lea     edx, [eax-1]
test    eax, eax
mov     [esi+8], edx
jnz     short loc_6321caa6
jmp     loc_6321ca23
push    edi
mov     edi, ecx
push    esi
mov     esi, edx
push    ebx
mov     ebx, eax
mov     eax, [ecx+0ch]
test    eax, eax
js      short loc_6321cae5
cmp     edx, eax
cmovg   esi, eax
mov     eax, [edi+8]
cmp     esi, eax
jge     short loc_6321cb60
sub     eax, esi
test    eax, eax
mov     [edi+8], eax
jle     short loc_6321cb1a
test    byte ptr [edi+5], 4
jnz     short loc_6321cb1a
sub     eax, 1
mov     [edi+8], eax
mov     edx, edi
mov     eax, 20h
call    sub_6321c970
mov     eax, [edi+8]
lea     edx, [eax-1]
test    eax, eax
mov     [edi+8], edx
jnz     short loc_6321cb01
test    esi, esi
jz      short loc_6321cb4c
xchg    ax, ax
movsx   eax, byte ptr [ebx]
mov     edx, edi
add     ebx, 1
call    sub_6321c970
sub     esi, 1
jnz     short loc_6321cb20
mov     eax, [edi+8]
lea     edx, [eax-1]
test    eax, eax
mov     [edi+8], edx
jle     short loc_6321cb59
nop
mov     edx, edi
mov     eax, 20h
call    sub_6321c970
mov     eax, [edi+8]
lea     edx, [eax-1]
test    eax, eax
mov     [edi+8], edx
jg      short loc_6321cb40
pop     ebx
pop     esi
pop     edi
retn
mov     dword ptr [edi+8], 0ffffffffh
jmp     short loc_6321cb1a
sub     esp, 2ch
test    eax, eax
mov     [esp+2ch+var_10], ebx
mov     [esp+2ch+var_c], esi
mov     [esp+2ch+var_8], edi
mov     [esp+2ch+var_4], ebp
mov     dword ptr [ecx+0ch], 0ffffffffh
jz      short loc_6321cbd5
mov     ebp, [ecx+4]
lea     edi, [esp+2ch+var_1f]
mov     [esp+2ch+var_20], 2dh
lea     eax, [esp+2ch+var_20]
and     ebp, 20h
xor     esi, esi
movzx   ebx, byte ptr [edx+esi]
and     ebx, 0ffffffdfh
or      ebx, ebp
mov     [edi+esi], bl
add     esi, 1
cmp     esi, 3
jnz     short loc_6321cba3
lea     edx, [edi+3]
sub     edx, eax
call    sub_6321cad0
mov     ebx, [esp+2ch+var_10]
mov     esi, [esp+2ch+var_c]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
retn
mov     ebp, [ecx+4]
test    ebp, 100h
jz      short loc_6321cbf0
mov     [esp+2ch+var_20], 2bh
lea     edi, [esp+2ch+var_1f]
lea     eax, [esp+2ch+var_20]
jmp     short loc_6321cb9e
lea     eax, [esp+2ch+var_20]
test    ebp, 40h
mov     edi, eax
jz      short loc_6321cb9e
mov     [esp+2ch+var_20], 20h
lea     edi, [esp+2ch+var_1f]
jmp     short loc_6321cb9e
push    ebp
mov     ebp, esp
push    edi
mov     edi, edx
push    esi
mov     esi, eax
push    ebx
sub     esp, 3ch
mov     [ebp+var_24], edx
mov     edx, [ecx+0ch]
mov     [ebp+var_28], eax
xor     eax, eax
test    edx, edx
cmovns  eax, [ecx+0ch]
lea     ebx, [eax+17h]
mov     eax, [ecx+4]
test    ah, 10h
mov     [ebp+var_20], eax
jz      short loc_6321cc47
cmp     word ptr [ecx+1ch], 0
jnz     loc_6321ce40
mov     eax, [ecx+8]
cmp     ebx, eax
cmovge  eax, ebx
add     eax, 1eh
and     eax, 0fffffff0h
call    sub_6321b810
sub     esp, eax
lea     eax, [esp+1fh]
and     eax, 0fffffff0h
test    byte ptr [ebp+var_20], 80h
mov     [ebp+var_1c], eax
jz      short loc_6321cc7f
mov     eax, [ebp+var_24]
test    eax, eax
js      loc_6321ceb0
mov     eax, [ebp+var_20]
and     al, 7fh
mov     [ecx+4], eax
mov     eax, [ebp+var_24]
or      eax, [ebp+var_28]
mov     ebx, [ebp+var_1c]
jz      loc_6321cd35
mov     ebx, [ebp+var_1c]
mov     [ebp+var_28], ecx
mov     [esp], esi
mov     [esp+4], edi
mov     dword ptr [esp+8], 0ah
mov     dword ptr [esp+0ch], 0
call    sub_63221b50
lea     ecx, [ebx+1]
add     eax, 30h
mov     [ebx], al
mov     [esp], esi
mov     [esp+4], edi
mov     dword ptr [esp+8], 0ah
mov     dword ptr [esp+0ch], 0
mov     [ebp+var_2c], ecx
call    sub_63221c90
mov     ecx, [ebp+var_2c]
mov     esi, eax
mov     eax, edx
or      eax, esi
mov     edi, edx
jz      short loc_6321cd30
cmp     [ebp+var_1c], ecx
jz      loc_6321ce23
mov     eax, [ebp+var_28]
test    byte ptr [eax+5], 10h
jz      short loc_6321cd16
cmp     word ptr [eax+1ch], 0
jz      short loc_6321cd16
mov     eax, ecx
sub     eax, [ebp+var_1c]
mov     edx, eax
sar     edx, 1fh
shr     edx, 1eh
add     eax, edx
and     eax, 3
sub     eax, edx
cmp     eax, 3
jz      short loc_6321cd20
mov     ebx, ecx
jmp     loc_6321cc94
lea     ecx, [ebx+2]
mov     byte ptr [ebx+1], 2ch
mov     ebx, ecx
jmp     loc_6321cc94
mov     ebx, ecx
mov     ecx, [ebp+var_28]
mov     eax, [ecx+0ch]
test    eax, eax
jle     short loc_6321cd5a
mov     edx, [ebp+var_1c]
sub     edx, ebx
add     eax, edx
test    eax, eax
jle     short loc_6321cd5a
add     eax, ebx
lea     esi, [esi+0]
mov     byte ptr [ebx], 30h
add     ebx, 1
cmp     ebx, eax
jnz     short loc_6321cd50
cmp     ebx, [ebp+var_1c]
jz      loc_6321cec2
mov     eax, [ecx+8]
test    eax, eax
jle     short loc_6321cdc2
mov     edx, [ebp+var_1c]
sub     edx, ebx
add     edx, eax
mov     eax, [ecx+4]
test    edx, edx
mov     [ecx+8], edx
jle     short loc_6321cdc5
test    eax, 1c0h
jz      short loc_6321cd88
sub     edx, 1
mov     [ecx+8], edx
mov     edx, [ecx+0ch]
test    edx, edx
js      loc_6321ce70
test    ah, 4
jnz     short loc_6321cdc5
mov     edx, [ecx+8]
lea     esi, [edx-1]
test    edx, edx
mov     [ecx+8], esi
jle     short loc_6321cdc5
mov     esi, ecx
mov     edx, esi
mov     eax, 20h
call    sub_6321c970
mov     eax, [esi+8]
lea     edx, [eax-1]
test    eax, eax
mov     [esi+8], edx
jg      short loc_6321cda7
mov     ecx, esi
mov     eax, [ecx+4]
test    al, 80h
jz      short loc_6321ce30
mov     byte ptr [ebx], 2dh
add     ebx, 1
cmp     ebx, [ebp+var_1c]
jbe     short loc_6321cdf3
mov     edi, [ebp+var_1c]
mov     esi, ecx
lea     esi, [esi+0]
sub     ebx, 1
mov     edx, esi
movsx   eax, byte ptr [ebx]
call    sub_6321c970
cmp     ebx, edi
jnz     short loc_6321cde0
mov     ecx, esi
mov     eax, [ecx+8]
lea     edx, [eax-1]
test    eax, eax
mov     [ecx+8], edx
jle     short loc_6321ce1b
mov     ebx, ecx
mov     edx, ebx
mov     eax, 20h
call    sub_6321c970
mov     eax, [ebx+8]
lea     edx, [eax-1]
test    eax, eax
mov     [ebx+8], edx
jg      short loc_6321ce02
lea     esp, [ebp-0ch]
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     ecx, [ebp+var_1c]
mov     ebx, ecx
jmp     loc_6321cc94
test    ah, 1
jz      short loc_6321ce57
mov     byte ptr [ebx], 2bh
add     ebx, 1
jmp     short loc_6321cdcf
mov     eax, ebx
mov     edx, 55555556h
imul    edx
mov     eax, ebx
sar     eax, 1fh
sub     edx, eax
add     ebx, edx
jmp     loc_6321cc47
test    al, 40h
jz      loc_6321cdcf
mov     byte ptr [ebx], 20h
add     ebx, 1
jmp     loc_6321cdcf
mov     edx, eax
and     edx, 600h
cmp     edx, 200h
jnz     loc_6321cd93
mov     edx, [ecx+8]
lea     esi, [edx-1]
test    edx, edx
mov     [ecx+8], esi
jle     loc_6321cdc5
mov     byte ptr [ebx], 30h
mov     eax, [ecx+8]
add     ebx, 1
lea     edx, [eax-1]
test    eax, eax
mov     [ecx+8], edx
jg      short loc_6321ce95
jmp     loc_6321cdc2
mov     esi, [ebp+var_28]
mov     edi, [ebp+var_24]
neg     esi
adc     edi, 0
neg     edi
jmp     loc_6321cc8e
mov     esi, [ecx+0ch]
test    esi, esi
jz      loc_6321cd63
mov     byte ptr [ebx], 30h
add     ebx, 1
jmp     loc_6321cd63
push    ebp
mov     ebp, esp
push    edi
push    esi
push    ebx
sub     esp, 2ch
mov     edi, [ebp+arg_0]
cmp     eax, 6fh
mov     [ebp+var_24], ecx
mov     [ebp+var_2c], ecx
setnz   cl
movzx   esi, cl
movzx   ecx, cl
mov     ebx, [edi+0ch]
lea     esi, ds:7[esi*8]
mov     [ebp+var_28], eax
mov     eax, 18h
mov     [ebp+var_1c], edx
mov     [ebp+var_30], edx
mov     edx, 12h
cmovz   edx, eax
xor     al, al
add     ecx, 3
test    ebx, ebx
cmovns  eax, [edi+0ch]
test    byte ptr [edi+5], 10h
lea     ebx, [edx+eax]
jz      short loc_6321cf3d
cmp     word ptr [edi+1ch], 0
jnz     loc_6321d160
mov     eax, [edi+8]
cmp     ebx, eax
cmovge  eax, ebx
add     eax, 1eh
and     eax, 0fffffff0h
call    sub_6321b810
sub     esp, eax
mov     eax, [ebp+var_24]
lea     edx, [esp+0fh]
and     edx, 0fffffff0h
or      eax, [ebp+var_1c]
mov     [ebp+var_20], edx
jz      loc_6321d1ac
mov     ebx, edx
movzx   edx, byte ptr [ebp+var_28]
mov     eax, [ebp+var_30]
mov     [ebp+var_30], edi
mov     edi, ecx
and     edx, 20h
mov     byte ptr [ebp+var_24], dl
mov     edx, esi
mov     byte ptr [ebp+var_1c], dl
mov     edx, [ebp+var_2c]
movzx   ecx, byte ptr [ebp+var_1c]
and     ecx, eax
mov     esi, ecx
lea     ecx, [esi+30h]
mov     [ebx], cl
add     ebx, 1
cmp     cl, 39h
jle     short loc_6321cfa2
lea     ecx, [esi+37h]
or      cl, byte ptr [ebp+var_24]
mov     [ebx-1], cl
mov     ecx, edi
xor     esi, esi
shrd    eax, edx, cl
shr     edx, cl
test    cl, 20h
cmovnz  eax, edx
cmovnz  edx, esi
mov     ecx, edx
or      ecx, eax
jnz     short loc_6321cf84
cmp     [ebp+var_20], ebx
mov     edi, [ebp+var_30]
jz      loc_6321d1af
mov     eax, [edi+0ch]
test    eax, eax
jle     loc_6321d177
mov     edx, [ebp+var_20]
sub     edx, ebx
add     eax, edx
test    eax, eax
jle     loc_6321d177
add     eax, ebx
mov     byte ptr [ebx], 30h
add     ebx, 1
cmp     ebx, eax
jnz     short loc_6321cfe2
cmp     ebx, [ebp+var_20]
jz      loc_6321d196
mov     edx, [edi+8]
mov     eax, ebx
sub     eax, [ebp+var_20]
cmp     edx, eax
jle     loc_6321d0a0
sub     edx, eax
test    edx, edx
mov     [ebp+var_1c], edx
mov     [edi+8], edx
jle     short loc_6321d02c
cmp     [ebp+var_28], 6fh
jz      short loc_6321d021
test    byte ptr [edi+5], 8
jnz     loc_6321d112
mov     eax, [edi+0ch]
test    eax, eax
js      loc_6321d12a
mov     esi, [ebp+var_1c]
sub     esi, 1
cmp     [ebp+var_28], 6fh
jz      short loc_6321d042
test    byte ptr [edi+5], 8
jnz     loc_6321d100
mov     eax, [ebp+var_1c]
test    eax, eax
jle     short loc_6321d04f
test    byte ptr [edi+5], 4
jz      short loc_6321d0b8
cmp     ebx, [ebp+var_20]
jbe     short loc_6321d074
mov     [ebp+var_28], esi
mov     esi, [ebp+var_20]
lea     esi, [esi+0]
sub     ebx, 1
mov     edx, edi
movsx   eax, byte ptr [ebx]
call    sub_6321c970
cmp     ebx, esi
jnz     short loc_6321d060
mov     esi, [ebp+var_28]
mov     ecx, [ebp+var_1c]
test    ecx, ecx
jle     short loc_6321d096
nop
lea     esi, [esi+0]
mov     eax, 20h
sub     esi, 1
mov     edx, edi
call    sub_6321c970
lea     eax, [esi+1]
test    eax, eax
jg      short loc_6321d080
lea     esp, [ebp-0ch]
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     dword ptr [edi+8], 0ffffffffh
mov     esi, 0fffffffeh
mov     [ebp+var_1c], 0ffffffffh
jmp     loc_6321d032
mov     [ebp+var_1c], ebx
mov     ebx, esi
lea     esi, [esi+0]
mov     eax, 20h
sub     ebx, 1
mov     edx, edi
call    sub_6321c970
lea     eax, [ebx+1]
test    eax, eax
jg      short loc_6321d0c0
xor     eax, eax
test    esi, esi
mov     ebx, [ebp+var_1c]
cmovns  eax, esi
lea     ecx, [esi-1]
sub     ecx, eax
mov     esi, ecx
mov     [ebp+var_1c], ecx
sub     esi, 1
jmp     loc_6321d04f
mov     esi, [ebp+var_1c]
mov     [ebp+var_1c], eax
sub     esi, 3
nop
lea     esi, [esi+0]
movzx   eax, byte ptr [ebp+var_28]
mov     byte ptr [ebx+1], 30h
mov     [ebx], al
add     ebx, 2
jmp     loc_6321d042
mov     eax, [ebp+var_1c]
sub     eax, 2
test    eax, eax
jle     short loc_6321d0f2
mov     [ebp+var_1c], eax
mov     eax, [edi+0ch]
test    eax, eax
jns     loc_6321d02c
mov     eax, [edi+4]
and     eax, 600h
cmp     eax, 200h
jnz     loc_6321d02c
mov     eax, [ebp+var_1c]
add     eax, ebx
mov     byte ptr [ebx], 30h
add     ebx, 1
cmp     ebx, eax
jnz     short loc_6321d142
mov     esi, 0fffffffeh
mov     [ebp+var_1c], 0ffffffffh
jmp     loc_6321d032
mov     eax, ebx
mov     edx, 55555556h
imul    edx
mov     eax, ebx
sar     eax, 1fh
sub     edx, eax
add     ebx, edx
jmp     loc_6321cf3d
cmp     [ebp+var_28], 6fh
jnz     loc_6321cfec
test    byte ptr [edi+5], 8
jz      loc_6321cfec
mov     byte ptr [ebx], 30h
add     ebx, 1
jmp     loc_6321cfec
mov     eax, [edi+0ch]
test    eax, eax
jz      loc_6321cff5
mov     byte ptr [ebx], 30h
add     ebx, 1
jmp     loc_6321cff5
mov     ebx, [ebp+var_20]
and     dword ptr [edi+4], 0fffff7ffh
jmp     loc_6321cfc6
push    ebp
mov     ebp, esp
push    edi
push    esi
mov     esi, eax
push    ebx
sub     esp, 3ch
cmp     dword ptr [eax+10h], 0fffffffdh
jz      loc_6321d262
movzx   edx, word ptr [eax+14h]
test    dx, dx
jz      short loc_6321d240
mov     eax, [esi+10h]
mov     [ebp+var_2c], esp
add     eax, 1eh
and     eax, 0fffffff0h
call    sub_6321b810
sub     esp, eax
lea     eax, [ebp+var_20]
mov     [ebp+var_20], 0
lea     ebx, [esp+1fh]
mov     [esp+8], eax
movzx   eax, word ptr [esi+14h]
and     ebx, 0fffffff0h
mov     [esp], ebx
mov     [esp+4], eax
call    sub_632203a0
test    eax, eax
jle     short loc_6321d254
lea     edi, [ebx+eax]
lea     esi, [esi+0]
movsx   eax, byte ptr [ebx]
mov     edx, esi
add     ebx, 1
call    sub_6321c970
cmp     ebx, edi
jnz     short loc_6321d220
mov     esp, [ebp+var_2c]
lea     esp, [ebp-0ch]
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     edx, esi
mov     eax, 2eh
call    sub_6321c970
lea     esp, [ebp-0ch]
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     edx, esi
mov     eax, 2eh
call    sub_6321c970
jmp     short loc_6321d231
mov     [ebp+var_20], 0
call    localeconv
lea     edx, [ebp+var_20]
mov     [esp+0ch], edx
mov     dword ptr [esp+8], 10h
mov     eax, [eax]
mov     [esp+4], eax
lea     eax, [ebp+var_1a]
mov     [esp], eax
call    sub_63220650
test    eax, eax
jle     short loc_6321d2a2
movzx   edx, [ebp+var_1a]
mov     [esi+14h], dx
mov     [esi+10h], eax
jmp     loc_6321d1d9
movzx   edx, word ptr [esi+14h]
jmp     short loc_6321d29a
push    ebp
mov     ebp, eax
push    edi
mov     edi, ecx
push    esi
mov     esi, edx
push    ebx
sub     esp, 1ch
test    edi, edi
mov     ebx, [esp+2ch+arg_0]
mov     ecx, [ebx+8]
jle     loc_6321d526
cmp     edi, ecx
jge     loc_6321d3f0
sub     ecx, edi
mov     [ebx+8], ecx
test    ecx, ecx
js      loc_6321d3f0
mov     eax, [ebx+0ch]
cmp     eax, ecx
jge     loc_6321d3f0
sub     ecx, eax
test    ecx, ecx
mov     [ebx+8], ecx
jle     loc_6321d3fc
test    eax, eax
jle     loc_6321d5a1
sub     ecx, 1
test    edi, edi
mov     [ebx+8], ecx
jg      loc_6321d404
nop
test    ecx, ecx
jle     short loc_6321d332
test    ebp, ebp
jz      loc_6321d4a7
sub     ecx, 1
test    ecx, ecx
mov     [ebx+8], ecx
jz      short loc_6321d332
mov     eax, [ebx+4]
test    ah, 6
jz      loc_6321d4be
test    ebp, ebp
jnz     loc_6321d4e5
mov     eax, [ebx+4]
test    ah, 1
jnz     loc_6321d540
test    al, 40h
jnz     loc_6321d590
mov     edx, [ebx+8]
test    edx, edx
jle     short loc_6321d368
mov     eax, [ebx+4]
and     eax, 600h
cmp     eax, 200h
jz      loc_6321d551
test    edi, edi
jle     loc_6321d578
lea     eax, [ebx+1ch]
mov     ebp, 55555556h
mov     [esp+2ch+var_20], eax
movzx   edx, byte ptr [esi]
mov     eax, 30h
test    dl, dl
jz      short loc_6321d38e
movsx   eax, dl
add     esi, 1
mov     edx, ebx
call    sub_6321c970
sub     edi, 1
jnz     loc_6321d467
mov     eax, [ebx+0ch]
test    eax, eax
jle     loc_6321d4f6
mov     eax, ebx
call    sub_6321d1c0
test    edi, edi
mov     eax, [ebx+0ch]
jz      short loc_6321d3dc
jmp     loc_6321d508
movzx   edx, byte ptr [esi]
mov     eax, 30h
test    dl, dl
jz      short loc_6321d3d2
movsx   eax, dl
add     esi, 1
mov     edx, ebx
call    sub_6321c970
mov     eax, [ebx+0ch]
lea     edx, [eax-1]
test    eax, eax
mov     [ebx+0ch], edx
jg      short loc_6321d3c0
add     esp, 1ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     dword ptr [ebx+8], 0ffffffffh
mov     ecx, 0ffffffffh
test    edi, edi
jle     loc_6321d310
test    byte ptr [ebx+5], 10h
jz      loc_6321d310
cmp     word ptr [ebx+1ch], 0
jz      loc_6321d310
lea     eax, [edi+2]
mov     edx, 55555556h
mov     [esp+2ch+var_20], eax
imul    edx
mov     eax, [esp+2ch+var_20]
sar     eax, 1fh
sub     edx, eax
cmp     edx, 1
jle     loc_6321d310
test    ecx, ecx
jle     loc_6321d332
mov     eax, ecx
sub     eax, edx
add     eax, 1
jmp     short loc_6321d458
test    ecx, ecx
jz      loc_6321d5b5
sub     ecx, 1
cmp     ecx, eax
jnz     short loc_6321d450
mov     [ebx+8], ecx
jmp     loc_6321d310
test    byte ptr [ebx+5], 10h
jz      loc_6321d37c
cmp     word ptr [ebx+1ch], 0
jz      loc_6321d37c
mov     eax, edi
imul    ebp
mov     eax, edi
sar     eax, 1fh
sub     edx, eax
lea     eax, [edx+edx*2]
cmp     edi, eax
jnz     loc_6321d37c
mov     eax, [esp+2ch+var_20]
mov     ecx, ebx
mov     edx, 1
call    sub_6321c9d0
jmp     loc_6321d37c
mov     eax, [ebx+4]
test    eax, 1c0h
jnz     loc_6321d31c
test    ah, 6
jnz     loc_6321d332
sub     ecx, 1
mov     [ebx+8], ecx
mov     edx, ebx
mov     eax, 20h
call    sub_6321c970
mov     eax, [ebx+8]
lea     edx, [eax-1]
test    eax, eax
mov     [ebx+8], edx
jg      short loc_6321d4c4
test    ebp, ebp
jz      loc_6321d33a
mov     edx, ebx
mov     eax, 2dh
call    sub_6321c970
jmp     loc_6321d34e
test    byte ptr [ebx+5], 8
jnz     loc_6321d3a9
test    edi, edi
jz      loc_6321d3dc
add     eax, edi
mov     [ebx+0ch], eax
lea     esi, [esi+0]
mov     edx, ebx
mov     eax, 30h
call    sub_6321c970
add     edi, 1
js      short loc_6321d510
jmp     loc_6321d3d9
test    ecx, ecx
jle     loc_6321d2d9
sub     ecx, 1
mov     [ebx+8], ecx
jmp     loc_6321d2e1
mov     edx, ebx
mov     eax, 2bh
call    sub_6321c970
jmp     loc_6321d34e
sub     edx, 1
mov     [ebx+8], edx
mov     edx, ebx
mov     eax, 30h
call    sub_6321c970
mov     eax, [ebx+8]
lea     edx, [eax-1]
test    eax, eax
mov     [ebx+8], edx
jg      short loc_6321d557
test    edi, edi
jg      loc_6321d370
mov     edx, ebx
mov     eax, 30h
call    sub_6321c970
jmp     loc_6321d39e
mov     edx, ebx
mov     eax, 20h
call    sub_6321c970
jmp     loc_6321d34e
test    byte ptr [ebx+5], 8
jz      loc_6321d3fc
nop
lea     esi, [esi+0]
jmp     loc_6321d301
mov     dword ptr [ebx+8], 0
jmp     loc_6321d332
jmp     short sub_6321d5d0
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 2ch
lea     ebx, [ecx-1]
mov     ecx, 66666667h
mov     ebp, [esp+3ch+arg_0]
mov     [esp+3ch+var_24], eax
mov     eax, ebx
mov     edi, ebx
mov     [esp+3ch+var_20], edx
imul    ecx
mov     eax, ebx
sar     eax, 1fh
mov     esi, ebx
sar     edi, 1fh
mov     ebx, 1
mov     ecx, edx
sar     ecx, 2
sub     ecx, eax
jz      short loc_6321d626
lea     esi, [esi+0]
mov     eax, 66666667h
add     ebx, 1
imul    ecx
sar     ecx, 1fh
sar     edx, 2
sub     edx, ecx
mov     ecx, edx
jnz     short loc_6321d610
mov     eax, [ebp+28h]
mov     edx, [ebp+8]
cmp     ebx, eax
cmovl   ebx, eax
lea     eax, [ebx+2]
cmp     edx, eax
jg      short loc_6321d690
mov     dword ptr [ebp+8], 0ffffffffh
mov     edx, [esp+3ch+var_20]
mov     ecx, 1
add     ebx, 1
mov     eax, [esp+3ch+var_24]
mov     [esp+3ch+var_3c], ebp
call    sub_6321d2b0
mov     eax, [ebp+28h]
mov     edx, ebp
mov     [ebp+0ch], eax
mov     eax, [ebp+4]
or      eax, 1c0h
mov     [ebp+4], eax
and     eax, 20h
or      eax, 45h
call    sub_6321c970
mov     ecx, ebp
mov     eax, esi
add     [ebp+8], ebx
mov     edx, edi
call    sub_6321cc10
add     esp, 2ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     edx, eax
mov     [ebp+8], edx
jmp     short loc_6321d63f
push    esi
mov     esi, eax
push    ebx
sub     esp, 44h
mov     eax, [eax+0ch]
test    eax, eax
js      loc_6321d734
add     eax, 1
mov     edx, [esp+4ch+arg_0]
mov     ecx, [esp+4ch+arg_4]
mov     [esp+4ch+var_3c], eax
mov     ebx, [esp+4ch+arg_8]
mov     [esp+4ch+var_24], edx
mov     eax, [esp+4ch+var_24]
lea     edx, [esp+4ch+var_14]
mov     [esp+4ch+var_20], ecx
mov     [esp+4ch+var_1c], ebx
mov     [esp+4ch+var_34], edx
lea     edx, [esp+4ch+var_10]
mov     [esp+4ch+var_4c], eax
mov     eax, [esp+4ch+var_20]
mov     [esp+4ch+var_38], edx
mov     [esp+4ch+var_48], eax
mov     eax, [esp+4ch+var_1c]
mov     [esp+4ch+var_44], eax
mov     eax, [esp+4ch+var_18]
mov     [esp+4ch+var_40], eax
mov     eax, 2
call    sub_6321c870
mov     ecx, [esp+4ch+var_10]
cmp     ecx, 0ffff8000h
mov     ebx, eax
jz      short loc_6321d745
mov     edx, eax
mov     eax, [esp+4ch+var_14]
mov     [esp+4ch+var_4c], esi
call    sub_6321d5d0
mov     [esp+4ch+var_4c], ebx
call    sub_632208a0
add     esp, 44h
pop     ebx
pop     esi
retn
mov     dword ptr [esi+0ch], 6
mov     eax, 7
jmp     loc_6321d6b5
mov     edx, eax
mov     eax, [esp+4ch+var_14]
mov     ecx, esi
call    sub_6321cb70
mov     [esp+4ch+var_4c], ebx
call    sub_632208a0
add     esp, 44h
pop     ebx
pop     esi
retn
push    ebp
push    edi
push    esi
push    ebx
mov     ebx, eax
sub     esp, 4ch
mov     eax, [eax+0ch]
test    eax, eax
js      loc_6321d810
mov     esi, [esp+5ch+arg_0]
lea     edx, [esp+5ch+var_24]
mov     edi, [esp+5ch+arg_4]
mov     [esp+5ch+var_4c], eax
mov     ebp, [esp+5ch+arg_8]
mov     [esp+5ch+var_44], edx
lea     edx, [esp+5ch+var_20]
mov     [esp+5ch+var_34], esi
mov     eax, [esp+5ch+var_34]
mov     [esp+5ch+var_30], edi
mov     [esp+5ch+var_2c], ebp
mov     [esp+5ch+var_48], edx
mov     [esp+5ch+var_5c], eax
mov     eax, [esp+5ch+var_30]
mov     [esp+5ch+var_58], eax
mov     eax, [esp+5ch+var_2c]
mov     [esp+5ch+var_54], eax
mov     eax, [esp+5ch+var_28]
mov     [esp+5ch+var_50], eax
mov     eax, 3
call    sub_6321c870
mov     ecx, [esp+5ch+var_20]
cmp     ecx, 0ffff8000h
mov     esi, eax
jz      short loc_6321d821
mov     edx, eax
mov     eax, [esp+5ch+var_24]
mov     [esp+5ch+var_5c], ebx
call    sub_6321d2b0
jmp     short loc_6321d7f3
mov     edx, ebx
mov     eax, 20h
call    sub_6321c970
mov     eax, [ebx+8]
lea     edx, [eax-1]
test    eax, eax
mov     [ebx+8], edx
jg      short loc_6321d7e7
mov     [esp+5ch+var_5c], esi
call    sub_632208a0
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     dword ptr [ebx+0ch], 6
mov     eax, 6
jmp     loc_6321d774
mov     edx, eax
mov     eax, [esp+5ch+var_24]
mov     ecx, ebx
call    sub_6321cb70
mov     [esp+5ch+var_5c], esi
call    sub_632208a0
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    ebp
push    edi
push    esi
push    ebx
mov     ebx, eax
sub     esp, 4ch
mov     eax, [eax+0ch]
cmp     eax, 0
jl      loc_6321d980
jz      loc_6321d964
mov     esi, [esp+5ch+arg_0]
lea     edx, [esp+5ch+var_24]
mov     edi, [esp+5ch+arg_4]
mov     [esp+5ch+var_4c], eax
mov     ebp, [esp+5ch+arg_8]
mov     [esp+5ch+var_44], edx
lea     edx, [esp+5ch+var_20]
mov     [esp+5ch+var_34], esi
mov     eax, [esp+5ch+var_34]
mov     [esp+5ch+var_30], edi
mov     [esp+5ch+var_2c], ebp
mov     [esp+5ch+var_48], edx
mov     [esp+5ch+str], eax
mov     eax, [esp+5ch+var_30]
mov     [esp+5ch+var_58], eax
mov     eax, [esp+5ch+var_2c]
mov     [esp+5ch+var_54], eax
mov     eax, [esp+5ch+var_28]
mov     [esp+5ch+var_50], eax
mov     eax, 2
call    sub_6321c870
mov     edi, [esp+5ch+var_20]
cmp     edi, 0ffff8000h
mov     esi, eax
jz      loc_6321d9a0
cmp     edi, 0fffffffdh
jl      short loc_6321d930
mov     eax, [ebx+0ch]
cmp     edi, eax
jg      short loc_6321d930
test    byte ptr [ebx+5], 8
jnz     loc_6321d991
mov     [esp+5ch+str], esi
call    strlen
sub     eax, edi
test    eax, eax
mov     [ebx+0ch], eax
js      loc_6321d9b0
mov     eax, [esp+5ch+var_24]
mov     ecx, edi
mov     edx, esi
mov     [esp+5ch+str], ebx
call    sub_6321d2b0
jmp     short loc_6321d90c
mov     edx, ebx
mov     eax, 20h
call    sub_6321c970
mov     eax, [ebx+8]
lea     edx, [eax-1]
test    eax, eax
mov     [ebx+8], edx
jg      short loc_6321d900
mov     [esp+5ch+str], esi
call    sub_632208a0
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
test    byte ptr [ebx+5], 8
jnz     short loc_6321d975
mov     [esp+5ch+str], esi
call    strlen
sub     eax, 1
mov     [ebx+0ch], eax
mov     eax, [esp+5ch+var_24]
mov     ecx, edi
mov     edx, esi
mov     [esp+5ch+str], ebx
call    sub_6321d5d0
mov     [esp+5ch+str], esi
call    sub_632208a0
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     dword ptr [ebx+0ch], 1
mov     eax, 1
jmp     loc_6321d85b
sub     dword ptr [ebx+0ch], 1
jmp     short loc_6321d944
mov     dword ptr [ebx+0ch], 6
mov     eax, 6
jmp     loc_6321d85b
sub     eax, edi
mov     [ebx+0ch], eax
jmp     loc_6321d8ed
mov     edx, eax
mov     eax, [esp+5ch+var_24]
mov     ecx, ebx
call    sub_6321cb70
jmp     short loc_6321d954
mov     edx, [ebx+8]
test    edx, edx
jle     loc_6321d8ed
add     eax, edx
mov     [ebx+8], eax
jmp     loc_6321d8ed
push    ebp
push    edi
push    esi
mov     esi, eax
push    ebx
sub     esp, 5ch
fld     [esp+6ch+arg_0]
fld     st
fstp    [esp+6ch+var_34]
fxam
fstsw   ax
and     eax, 4500h
cmp     eax, 100h
jz      loc_6321de71
movzx   edi, word ptr [esp+6ch+var_34+8]
mov     ebx, edi
and     ebx, 8000h
jnz     loc_6321dba0
fxam
fstsw   ax
fstp    st
and     eax, 4500h
cmp     eax, 500h
jz      loc_6321de87
and     di, 7fffh
jz      loc_6321dbb0
mov     eax, dword ptr [esp+6ch+var_34]
sub     di, 3fffh
mov     edx, dword ptr [esp+6ch+var_34+4]
mov     ebx, [esi+0ch]
cmp     ebx, 0eh
mov     [esp+6ch+var_5c], ebx
ja      loc_6321dae5
test    edx, edx
js      short loc_6321da5e
xchg    ax, ax
shld    edx, eax, 1
add     eax, eax
test    edx, edx
jns     short loc_6321da50
mov     [esp+6ch+var_5c], ebx
mov     ecx, eax
mov     ebx, edx
shrd    ecx, edx, 1
mov     eax, 4
mov     [esp+6ch+var_64], ecx
mov     ecx, 0eh
xor     edx, edx
sub     ecx, [esp+6ch+var_5c]
shr     ebx, 1
mov     [esp+6ch+var_60], ebx
xor     ebx, ebx
shl     ecx, 2
shld    edx, eax, cl
shl     eax, cl
test    cl, 20h
cmovnz  edx, eax
cmovnz  eax, ebx
add     [esp+6ch+var_64], eax
adc     [esp+6ch+var_60], edx
mov     ebp, [esp+6ch+var_60]
test    ebp, ebp
js      loc_6321de69
mov     eax, [esp+6ch+var_64]
mov     edx, [esp+6ch+var_60]
shld    edx, eax, 1
add     eax, eax
mov     [esp+6ch+var_64], eax
mov     [esp+6ch+var_60], edx
mov     eax, 0fh
mov     edx, [esp+6ch+var_60]
xor     ebp, ebp
sub     eax, [esp+6ch+var_5c]
lea     ecx, ds:0[eax*4]
mov     eax, [esp+6ch+var_64]
shrd    eax, edx, cl
shr     edx, cl
and     ecx, 20h
cmovnz  eax, edx
cmovnz  edx, ebp
mov     ecx, edx
or      ecx, eax
mov     ecx, [esi+4]
lea     ebx, [esp+6ch+var_4c]
mov     [esp+6ch+var_64], ebx
mov     [esp+6ch+var_54], ecx
jz      loc_6321de33
and     ecx, 800h
mov     ebp, esi
mov     [esp+6ch+var_58], ecx
movzx   ecx, byte ptr [esp+6ch+var_54]
and     ecx, 20h
mov     byte ptr [esp+6ch+var_5c], cl
jmp     short loc_6321db4b
mov     esi, [ebp+0ch]
test    esi, esi
jle     short loc_6321db25
sub     esi, 1
mov     [ebp+0ch], esi
shrd    eax, edx, 4
shr     edx, 4
test    ecx, ecx
jz      short loc_6321db88
cmp     ecx, 9
jle     short loc_6321db95
add     ecx, 37h
or      cl, byte ptr [esp+6ch+var_5c]
mov     [ebx], cl
add     ebx, 1
mov     ecx, edx
or      ecx, eax
jz      loc_6321dc02
mov     ecx, eax
and     ecx, 0fh
cmp     ecx, eax
jnz     short loc_6321db18
cmp     ebx, [esp+6ch+var_64]
ja      short loc_6321db70
mov     esi, [esp+6ch+var_58]
test    esi, esi
jnz     short loc_6321db70
mov     esi, [ebp+0ch]
test    esi, esi
jle     short loc_6321db76
lea     esi, [esi+0]
mov     byte ptr [ebx], 2eh
add     ebx, 1
cmp     edx, 0
ja      short loc_6321dbf4
cmp     eax, 1
ja      short loc_6321dbf4
xor     eax, eax
xor     edx, edx
test    ecx, ecx
jnz     short loc_6321db30
cmp     ebx, [esp+6ch+var_64]
ja      short loc_6321db95
mov     esi, [ebp+0ch]
test    esi, esi
js      short loc_6321db41
add     ecx, 30h
jmp     short loc_6321db3c
or      dword ptr [esi+4], 80h
jmp     loc_6321da0b
mov     edx, dword ptr [esp+6ch+var_34+4]
xor     edi, edi
mov     eax, dword ptr [esp+6ch+var_34]
mov     ecx, edx
or      ecx, eax
jz      loc_6321da3a
test    edx, edx
mov     edi, 0ffffc002h
js      loc_6321da3a
shld    edx, eax, 1
sub     edi, 1
add     eax, eax
test    edx, edx
js      loc_6321da3a
shld    edx, eax, 1
sub     edi, 1
add     eax, eax
test    edx, edx
jns     short loc_6321dbd1
jmp     loc_6321da3a
shrd    eax, edx, 1
sub     edi, 1
shr     edx, 1
jmp     loc_6321db76
cmp     ebx, [esp+6ch+var_64]
mov     esi, ebp
jz      loc_6321de2c
mov     ecx, [esp+6ch+var_54]
mov     [esp+6ch+var_58], ecx
mov     ecx, [esi+8]
movsx   edi, di
mov     ebp, 2
mov     [esp+6ch+var_5c], edi
test    ecx, ecx
mov     [esp+6ch+var_50], ecx
jle     loc_6321dcad
mov     edx, [esi+0ch]
mov     eax, ebx
sub     eax, [esp+6ch+var_64]
test    edx, edx
lea     ecx, [eax+edx]
mov     edx, [esp+6ch+var_54]
cmovg   eax, ecx
and     edx, 1c0h
cmp     edx, 1
sbb     edx, edx
lea     edi, [eax+edx+6]
mov     eax, [esp+6ch+var_5c]
mov     edx, 66666667h
imul    edx
mov     eax, [esp+6ch+var_5c]
sar     edx, 2
sar     eax, 1fh
mov     ecx, edx
sub     ecx, eax
jz      short loc_6321dc8c
mov     eax, 66666667h
add     edi, 1
imul    ecx
add     ebp, 1
sar     ecx, 1fh
sar     edx, 2
sub     edx, ecx
mov     ecx, edx
jnz     short loc_6321dc70
movsx   ebp, bp
cmp     edi, [esp+6ch+var_50]
jge     loc_6321ddc5
mov     eax, [esp+6ch+var_50]
sub     eax, edi
test    [esp+6ch+var_54], 600h
mov     [esi+8], eax
jz      loc_6321dde8
test    byte ptr [esp+6ch+var_58], 80h
jnz     loc_6321ddd7
test    [esp+6ch+var_58], 100h
jnz     loc_6321de1b
test    byte ptr [esp+6ch+var_58], 40h
jnz     loc_6321de58
mov     edx, esi
mov     eax, 30h
call    sub_6321c970
mov     eax, [esi+4]
mov     edx, esi
and     eax, 20h
or      eax, 58h
call    sub_6321c970
mov     eax, [esi+8]
test    eax, eax
jle     short loc_6321dd19
test    byte ptr [esi+5], 2
jz      short loc_6321dd19
sub     eax, 1
mov     [esi+8], eax
mov     edx, esi
mov     eax, 30h
call    sub_6321c970
mov     eax, [esi+8]
lea     edx, [eax-1]
test    eax, eax
mov     [esi+8], edx
jg      short loc_6321dd00
cmp     ebx, [esp+6ch+var_64]
mov     edi, [esp+6ch+var_64]
ja      short loc_6321dd37
jmp     short loc_6321dd5e
movzx   eax, word ptr [esi+1ch]
test    ax, ax
mov     [esp+6ch+var_1e], ax
jnz     short loc_6321ddb0
cmp     ebx, edi
jz      short loc_6321dd5e
sub     ebx, 1
movsx   eax, byte ptr [ebx]
cmp     eax, 2eh
jz      short loc_6321dda0
cmp     eax, 2ch
jz      short loc_6321dd25
mov     edx, esi
call    sub_6321c970
xchg    ax, ax
jmp     short loc_6321dd33
mov     edx, esi
mov     eax, 30h
call    sub_6321c970
mov     eax, [esi+0ch]
lea     edx, [eax-1]
test    eax, eax
mov     [esi+0ch], edx
jg      short loc_6321dd52
mov     eax, [esi+4]
mov     edx, esi
and     eax, 20h
or      eax, 50h
call    sub_6321c970
mov     eax, [esp+6ch+var_5c]
mov     ecx, esi
add     [esi+8], ebp
or      dword ptr [esi+4], 1c0h
mov     edx, eax
sar     edx, 1fh
call    sub_6321cc10
add     esp, 5ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, esi
call    sub_6321d1c0
jmp     short loc_6321dd33
mov     ecx, esi
mov     edx, 1
lea     eax, [esp+6ch+var_1e]
call    sub_6321c9d0
jmp     loc_6321dd33
test    byte ptr [esp+6ch+var_58], 80h
mov     dword ptr [esi+8], 0ffffffffh
jz      loc_6321dcb8
mov     edx, esi
mov     eax, 2dh
call    sub_6321c970
jmp     loc_6321dcd1
lea     edx, [eax-1]
test    eax, eax
mov     [esi+8], edx
jle     loc_6321dcad
mov     edx, esi
mov     eax, 20h
call    sub_6321c970
mov     eax, [esi+8]
lea     edx, [eax-1]
test    eax, eax
mov     [esi+8], edx
jg      short loc_6321ddf6
mov     ecx, [esi+4]
mov     [esp+6ch+var_58], ecx
jmp     loc_6321dcad
mov     edx, esi
mov     eax, 2bh
call    sub_6321c970
jmp     loc_6321dcd1
mov     ebx, [ebp+0ch]
mov     [esp+6ch+var_5c], ebx
mov     ebp, [esp+6ch+var_5c]
test    ebp, ebp
jle     short loc_6321de9a
mov     ecx, [esp+6ch+var_54]
mov     [esp+6ch+var_58], ecx
mov     [esp+6ch+var_4c], 2eh
lea     ebx, [esp+6ch+var_4a]
lea     eax, [esp+6ch+var_4b]
mov     byte ptr [eax], 30h
jmp     loc_6321dc16
mov     edx, esi
mov     eax, 20h
call    sub_6321c970
jmp     loc_6321dcd1
add     edi, 1
jmp     loc_6321dabd
fstp    st
mov     ecx, esi
mov     edx, offset dword_6322dfe8
xor     ax, ax
call    sub_6321cb70
jmp     loc_6321dd95
mov     ecx, esi
mov     edx, offset dword_6322dfec
mov     eax, ebx
call    sub_6321cb70
jmp     loc_6321dd95
mov     ebx, [esp+6ch+var_54]
test    [esp+6ch+var_54], 800h
mov     eax, [esp+6ch+var_64]
mov     [esp+6ch+var_58], ebx
lea     ebx, [esp+6ch+var_4b]
jz      short loc_6321de50
jmp     short loc_6321de43
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 7ch
mov     esi, [esp+8ch+arg_c]
call    _errno
and     [esp+8ch+arg_0], 6000h
mov     edi, [esp+8ch+arg_0]
mov     eax, [eax]
mov     [esp+8ch+var_54], edi
mov     [esp+8ch+var_50], 0ffffffffh
mov     [esp+8ch+var_4c], 0ffffffffh
mov     [esp+8ch+errormessage], eax
mov     eax, [esp+8ch+arg_4]
mov     [esp+8ch+var_48], 0fffffffdh
mov     [esp+8ch+var_44], 0
mov     [esp+8ch+var_40], 0
mov     [esp+8ch+var_58], eax
mov     eax, [esp+8ch+arg_8]
mov     [esp+8ch+var_3c], 0
mov     [esp+8ch+var_38], 0
mov     dword ptr [esp+8ch+var_8c], offset varname
mov     [esp+8ch+var_34], eax
call    getenv
test    eax, eax
jz      loc_6321e050
movsx   edx, byte ptr [eax]
mov     eax, 2
sub     edx, 30h
cmp     edx, 2
ja      loc_6321e050
mov     [esp+8ch+var_30], eax
movzx   eax, byte ptr [esi]
lea     esi, [esi+0]
movsx   eax, al
test    eax, eax
jz      loc_6321e040
lea     edi, [esi+1]
cmp     eax, 25h
mov     ebx, edi
jnz     loc_6321e062
mov     eax, [esp+8ch+arg_0]
lea     edx, [esp+8ch+var_50]
mov     [esp+8ch+var_4c], 0ffffffffh
mov     [esp+8ch+var_50], 0ffffffffh
mov     [esp+8ch+var_68], edx
xor     edx, edx
mov     [esp+8ch+var_54], eax
movzx   ecx, byte ptr [esi+1]
mov     [esp+8ch+var_6c], 0
test    cl, cl
jz      short loc_6321e030
movsx   eax, cl
sub     ecx, 20h
cmp     cl, 5ah
lea     ebp, [ebx+1]
jbe     loc_6321e076
cmp     eax, 39h
jg      loc_6321e926
cmp     edx, 3
ja      loc_6321e926
cmp     eax, 2fh
jle     loc_6321e926
test    edx, edx
lea     esi, [esi+0]
jnz     loc_6321e780
mov     edx, 1
mov     ecx, [esp+8ch+var_68]
test    ecx, ecx
jz      short loc_6321e026
mov     ecx, [esp+8ch+var_68]
mov     ecx, [ecx]
test    ecx, ecx
mov     [esp+8ch+var_60], ecx
js      loc_6321e894
mov     ecx, [esp+8ch+var_60]
lea     ecx, [ecx+ecx*4]
lea     eax, [eax+ecx*2-30h]
mov     ecx, [esp+8ch+var_68]
mov     [ecx], eax
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
test    cl, cl
jnz     short loc_6321dfbe
xor     eax, eax
mov     esi, ebx
movsx   eax, al
test    eax, eax
jnz     loc_6321df7b
nop
mov     eax, [esp+8ch+var_38]
add     esp, 7ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
call    sub_63220b50
and     eax, 1
neg     eax
add     eax, 3
jmp     loc_6321df63
lea     edx, [esp+8ch+var_58]
call    sub_6321c970
movzx   eax, byte ptr [esi+1]
mov     esi, edi
jmp     loc_6321df70
movzx   ecx, cl
jmp     ds:jpt_6321e079[ecx*4]
movzx   ecx, byte ptr [ebx+1]
mov     edx, 4
mov     ebx, ebp
mov     [esp+8ch+var_6c], 2
jmp     short loc_6321e02c
mov     edx, [esp+8ch+var_6c]
mov     eax, [esp+8ch+arg_10]
sub     edx, 2
cmp     edx, 1
jbe     loc_6321e790
mov     esi, [eax]
add     [esp+8ch+arg_10], 4
test    esi, esi
jz      loc_6321e1a6
mov     dword ptr [esp+8ch+var_8c], esi
call    strlen
mov     edx, eax
mov     eax, esi
mov     esi, ebp
lea     ecx, [esp+8ch+var_58]
call    sub_6321cad0
movzx   eax, byte ptr [ebx+1]
jmp     loc_6321df70
test    edx, edx
jnz     short loc_6321e0f5
mov     edi, [esp+8ch+arg_0]
cmp     [esp+8ch+var_54], edi
jz      loc_6321e910
mov     edi, [esp+8ch+arg_10]
lea     eax, [esp+8ch+var_58]
mov     esi, [esp+8ch+arg_10]
mov     edi, [edi]
mov     [esp+8ch+var_28], 0
mov     ecx, [esp+8ch+var_28]
add     esi, 4
mov     dword ptr [esp+8ch+var_8c], eax
mov     eax, 78h
mov     [esp+8ch+var_2c], edi
mov     edx, [esp+8ch+var_2c]
call    sub_6321cee0
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], esi
mov     esi, ebp
jmp     loc_6321df70
mov     edi, [esp+8ch+arg_10]
cmp     [esp+8ch+var_6c], 4
mov     edx, [esp+8ch+var_38]
mov     eax, [edi]
jz      loc_6321e85d
cmp     [esp+8ch+var_6c], 1
jz      loc_6321e8a8
cmp     [esp+8ch+var_6c], 2
jz      loc_6321e93f
cmp     [esp+8ch+var_6c], 3
mov     [eax], edx
jz      loc_6321e9f1
add     edi, 4
movzx   eax, byte ptr [ebx+1]
mov     esi, ebp
mov     [esp+8ch+arg_10], edi
jmp     loc_6321df70
mov     edi, [esp+8ch+errormessage]
mov     dword ptr [esp+8ch+var_8c], edi
call    strerror
test    eax, eax
mov     esi, eax
jnz     loc_6321e0be
mov     edx, 6
mov     esi, offset anull
jmp     loc_6321e0c8
movzx   ecx, byte ptr [ebx+1]
mov     edx, 4
mov     [esp+8ch+var_6c], 2
cmp     cl, 6ch
jnz     loc_6321e02a
lea     ebp, [ebx+2]
movzx   ecx, byte ptr [ebx+2]
mov     [esp+8ch+var_6c], 3
mov     ebx, ebp
jmp     loc_6321e02c
movzx   ecx, byte ptr [ebx+1]
mov     edx, 4
mov     ebx, ebp
mov     [esp+8ch+var_6c], 3
jmp     loc_6321e02c
movzx   ecx, byte ptr [ebx+1]
mov     edx, 4
mov     [esp+8ch+var_6c], 1
cmp     cl, 68h
jnz     loc_6321e02a
lea     ebp, [ebx+2]
movzx   ecx, byte ptr [ebx+2]
mov     [esp+8ch+var_6c], 4
mov     ebx, ebp
jmp     loc_6321e02c
mov     eax, [esp+8ch+var_54]
mov     esi, [esp+8ch+arg_10]
or      eax, 20h
test    al, 4
mov     [esp+8ch+var_54], eax
jz      loc_6321e703
mov     edi, [esp+8ch+arg_10]
add     esi, 0ch
mov     eax, [edi]
mov     edx, [edi+4]
mov     ecx, [edi+8]
mov     dword ptr [esp+8ch+var_8c], eax
mov     dword ptr [esp+8ch+var_8c+4], edx
mov     dword ptr [esp+8ch+var_8c+8], ecx
lea     eax, [esp+8ch+var_58]
call    sub_6321d840
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], esi
mov     esi, ebp
jmp     loc_6321df70
mov     eax, [esp+8ch+var_54]
mov     esi, [esp+8ch+arg_10]
or      eax, 20h
test    al, 4
mov     [esp+8ch+var_54], eax
jz      loc_6321e72a
mov     edi, [esp+8ch+arg_10]
add     esi, 0ch
mov     eax, [edi]
mov     edx, [edi+4]
mov     ecx, [edi+8]
mov     dword ptr [esp+8ch+var_8c], eax
mov     dword ptr [esp+8ch+var_8c+4], edx
mov     dword ptr [esp+8ch+var_8c+8], ecx
lea     eax, [esp+8ch+var_58]
call    sub_6321d760
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], esi
mov     esi, ebp
jmp     loc_6321df70
mov     eax, [esp+8ch+var_54]
mov     esi, [esp+8ch+arg_10]
or      eax, 20h
test    al, 4
mov     [esp+8ch+var_54], eax
jz      loc_6321e64b
mov     edi, [esp+8ch+arg_10]
add     esi, 0ch
mov     eax, [edi]
mov     edx, [edi+4]
mov     ecx, [edi+8]
mov     dword ptr [esp+8ch+var_8c], eax
mov     dword ptr [esp+8ch+var_8c+4], edx
mov     dword ptr [esp+8ch+var_8c+8], ecx
lea     eax, [esp+8ch+var_58]
call    sub_6321d6a0
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], esi
mov     esi, ebp
jmp     loc_6321df70
mov     edx, [esp+8ch+var_6c]
mov     eax, [esp+8ch+arg_10]
mov     [esp+8ch+var_4c], 0ffffffffh
sub     edx, 2
cmp     edx, 1
jbe     loc_6321e668
mov     eax, [eax]
lea     ecx, [esp+8ch+var_58]
mov     edx, 1
add     [esp+8ch+arg_10], 4
mov     esi, ebp
mov     byte ptr [esp+8ch+var_2c], al
lea     eax, [esp+8ch+var_2c]
call    sub_6321cad0
movzx   eax, byte ptr [ebx+1]
jmp     loc_6321df70
or      [esp+8ch+var_54], 80h
cmp     [esp+8ch+var_6c], 3
jz      loc_6321e7f7
cmp     [esp+8ch+var_6c], 2
jz      loc_6321e8c0
mov     edi, [esp+8ch+arg_10]
mov     eax, [esp+8ch+arg_10]
mov     edx, [edi]
add     eax, 4
mov     ecx, edx
sar     ecx, 1fh
cmp     [esp+8ch+var_6c], 1
mov     [esp+8ch+var_2c], edx
mov     [esp+8ch+var_28], ecx
jz      loc_6321e956
cmp     [esp+8ch+var_6c], 4
mov     [esp+8ch+arg_10], eax
jz      loc_6321e9da
mov     eax, [esp+8ch+var_2c]
lea     ecx, [esp+8ch+var_58]
mov     esi, ebp
mov     edx, [esp+8ch+var_28]
call    sub_6321cc10
movzx   eax, byte ptr [ebx+1]
jmp     loc_6321df70
cmp     [esp+8ch+var_6c], 3
jz      loc_6321e83a
cmp     [esp+8ch+var_6c], 2
jz      loc_6321e8e5
mov     edi, [esp+8ch+arg_10]
mov     edx, [esp+8ch+arg_10]
mov     edi, [edi]
add     edx, 4
cmp     [esp+8ch+var_6c], 1
mov     [esp+8ch+var_28], 0
mov     [esp+8ch+var_2c], edi
jz      loc_6321e974
cmp     [esp+8ch+var_6c], 4
mov     [esp+8ch+arg_10], edx
jz      loc_6321e9c4
cmp     eax, 75h
jz      short loc_6321e3cb
lea     edx, [esp+8ch+var_58]
mov     ecx, [esp+8ch+var_28]
mov     esi, ebp
mov     dword ptr [esp+8ch+var_8c], edx
mov     edx, [esp+8ch+var_2c]
call    sub_6321cee0
movzx   eax, byte ptr [ebx+1]
jmp     loc_6321df70
mov     eax, [esp+8ch+var_54]
mov     esi, [esp+8ch+arg_10]
or      eax, 20h
test    al, 4
mov     [esp+8ch+var_54], eax
jz      loc_6321e6b7
mov     edi, [esp+8ch+arg_10]
add     esi, 0ch
mov     eax, [edi]
mov     edx, [edi+4]
mov     ecx, [edi+8]
mov     dword ptr [esp+8ch+var_8c], eax
mov     dword ptr [esp+8ch+var_8c+4], edx
mov     dword ptr [esp+8ch+var_8c+8], ecx
lea     eax, [esp+8ch+var_58]
call    sub_6321d9d0
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], esi
mov     esi, ebp
jmp     loc_6321df70
or      [esp+8ch+var_54], 4
mov     edx, 4
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
jmp     loc_6321e02c
cmp     edx, 1
jbe     loc_6321e874
movzx   ecx, byte ptr [ebx+1]
mov     edx, 4
mov     ebx, ebp
jmp     loc_6321e02c
test    edx, edx
jnz     loc_6321e026
or      [esp+8ch+var_54], 400h
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
jmp     loc_6321e02c
test    edx, edx
jnz     loc_6321e026
or      [esp+8ch+var_54], 100h
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
jmp     loc_6321e02c
mov     eax, [esp+8ch+var_68]
test    eax, eax
jz      short loc_6321e4d0
test    edx, edx
setz    [esp+8ch+var_71]
cmp     edx, 2
jnz     loc_6321e7d4
mov     ecx, [esp+8ch+arg_10]
mov     eax, [esp+8ch+arg_10]
add     ecx, 4
mov     [esp+8ch+var_60], ecx
mov     ecx, [eax]
mov     eax, [esp+8ch+var_68]
test    ecx, ecx
mov     [eax], ecx
js      loc_6321e991
mov     eax, [esp+8ch+var_60]
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
mov     [esp+8ch+var_68], 0
mov     [esp+8ch+arg_10], eax
jmp     loc_6321e02c
test    edx, edx
jnz     loc_6321e026
mov     [esp+8ch+var_70], edx
or      [esp+8ch+var_54], 1000h
mov     [esp+8ch+var_24], 0
call    localeconv
lea     ecx, [esp+8ch+var_24]
mov     [esp+8ch+var_80], ecx
mov     dword ptr [esp+8ch+var_8c+8], 10h
mov     eax, [eax+4]
mov     dword ptr [esp+8ch+var_8c+4], eax
lea     eax, [esp+8ch+var_1e]
mov     dword ptr [esp+8ch+var_8c], eax
call    sub_63220650
mov     edx, [esp+8ch+var_70]
test    eax, eax
jle     short loc_6321e5d6
movzx   ecx, [esp+8ch+var_1e]
mov     [esp+8ch+var_3c], cx
mov     [esp+8ch+var_40], eax
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
jmp     loc_6321e02c
lea     edx, [esp+8ch+var_58]
mov     esi, ebp
call    sub_6321c970
movzx   eax, byte ptr [ebx+1]
jmp     loc_6321df70
test    edx, edx
jnz     loc_6321e026
or      [esp+8ch+var_54], 800h
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
jmp     loc_6321e02c
test    edx, edx
jnz     loc_6321e026
or      [esp+8ch+var_54], 40h
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
jmp     loc_6321e02c
mov     eax, [esp+8ch+var_54]
mov     esi, [esp+8ch+arg_10]
test    al, 4
jnz     loc_6321e2ee
mov     edi, [esp+8ch+arg_10]
add     esi, 8
fld     qword ptr [edi]
fstp    [esp+8ch+var_8c]
jmp     loc_6321e30b
mov     [esp+8ch+var_4c], 0ffffffffh
mov     edi, [esp+8ch+arg_10]
lea     ecx, [esp+8ch+var_58]
mov     edx, 1
mov     esi, [esp+8ch+arg_10]
mov     eax, [edi]
add     esi, 4
mov     [esp+8ch+var_1e], ax
lea     eax, [esp+8ch+var_1e]
call    sub_6321c9d0
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], esi
mov     esi, ebp
jmp     loc_6321df70
mov     eax, [esp+8ch+var_54]
mov     esi, [esp+8ch+arg_10]
test    al, 4
jnz     loc_6321e47a
mov     edi, [esp+8ch+arg_10]
add     esi, 8
fld     qword ptr [edi]
fstp    [esp+8ch+var_8c]
jmp     loc_6321e497
test    edx, edx
jnz     def_6321e079
or      [esp+8ch+var_54], 200h
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
jmp     loc_6321e02c
mov     eax, [esp+8ch+var_54]
mov     esi, [esp+8ch+arg_10]
test    al, 4
jnz     loc_6321e24a
mov     edi, [esp+8ch+arg_10]
add     esi, 8
fld     qword ptr [edi]
fstp    [esp+8ch+var_8c]
jmp     loc_6321e267
mov     eax, [esp+8ch+var_54]
mov     esi, [esp+8ch+arg_10]
test    al, 4
jnz     loc_6321e29c
mov     edi, [esp+8ch+arg_10]
add     esi, 8
fld     qword ptr [edi]
fstp    [esp+8ch+var_8c]
jmp     loc_6321e2b9
movzx   ecx, byte ptr [ebx+1]
mov     edx, 4
mov     [esp+8ch+var_6c], 2
cmp     cl, 36h
jz      loc_6321e81a
cmp     cl, 33h
jnz     loc_6321e02a
cmp     byte ptr [ebx+2], 32h
jnz     loc_6321e02a
lea     ebp, [ebx+3]
movzx   ecx, byte ptr [ebx+3]
mov     ebx, ebp
jmp     loc_6321e02c
cmp     edx, 2
mov     ecx, 3
cmovz   edx, ecx
jmp     loc_6321dffb
mov     eax, [esp+8ch+arg_10]
mov     edi, [esp+8ch+arg_10]
mov     esi, [eax]
mov     eax, offset anull_0
add     edi, 4
test    esi, esi
cmovz   esi, eax
mov     dword ptr [esp+8ch+var_8c], esi
call    wcslen
lea     ecx, [esp+8ch+var_58]
mov     edx, eax
mov     eax, esi
call    sub_6321c9d0
mov     esi, ebp
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], edi
jmp     loc_6321df70
cmp     [esp+8ch+var_71], 0
jnz     loc_6321e538
movzx   ecx, byte ptr [ebx+1]
mov     edx, 4
mov     ebx, ebp
mov     [esp+8ch+var_68], 0
jmp     loc_6321e02c
mov     edi, [esp+8ch+arg_10]
mov     eax, [edi]
mov     edx, [edi+4]
add     edi, 8
mov     [esp+8ch+arg_10], edi
mov     [esp+8ch+var_2c], eax
mov     [esp+8ch+var_28], edx
jmp     loc_6321e3cb
cmp     byte ptr [ebx+2], 34h
jnz     loc_6321e02a
lea     ebp, [ebx+3]
movzx   ecx, byte ptr [ebx+3]
mov     [esp+8ch+var_6c], 3
mov     ebx, ebp
jmp     loc_6321e02c
mov     edx, [esp+8ch+arg_10]
mov     esi, [edx]
mov     edi, [edx+4]
add     edx, 8
mov     [esp+8ch+arg_10], edx
mov     [esp+8ch+var_2c], esi
mov     [esp+8ch+var_28], edi
jmp     loc_6321e439
add     edi, 4
mov     esi, ebp
mov     [eax], dl
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], edi
jmp     loc_6321df70
lea     edx, [esp+8ch+var_4c]
mov     [esp+8ch+var_4c], 0
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
mov     [esp+8ch+var_68], edx
mov     edx, 2
jmp     loc_6321e02c
mov     ecx, [esp+8ch+var_68]
sub     eax, 30h
mov     [ecx], eax
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
jmp     loc_6321e02c
add     edi, 4
mov     esi, ebp
mov     [eax], dx
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], edi
jmp     loc_6321df70
mov     edi, [esp+8ch+arg_10]
mov     eax, [edi]
add     edi, 4
mov     [esp+8ch+arg_10], edi
mov     edx, eax
sar     edx, 1fh
mov     [esp+8ch+var_2c], eax
mov     [esp+8ch+var_28], edx
jmp     loc_6321e3cb
mov     edi, [esp+8ch+arg_10]
mov     edi, [edi]
mov     [esp+8ch+var_28], 0
mov     [esp+8ch+var_2c], edi
mov     edi, [esp+8ch+arg_10]
add     edi, 4
mov     [esp+8ch+arg_10], edi
jmp     loc_6321e439
mov     eax, edi
or      ah, 2
mov     [esp+8ch+var_54], eax
mov     [esp+8ch+var_4c], 8
jmp     loc_6321e0f5
mov     eax, 25h
lea     edx, [esp+8ch+var_58]
call    sub_6321c970
movzx   eax, byte ptr [esi+1]
mov     esi, edi
jmp     loc_6321df70
add     edi, 4
mov     esi, ebp
mov     [eax], edx
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], edi
jmp     loc_6321df70
movsx   edx, word ptr [esp+8ch+var_2c]
mov     [esp+8ch+arg_10], eax
mov     edi, edx
sar     edi, 1fh
mov     [esp+8ch+var_2c], edx
mov     [esp+8ch+var_28], edi
jmp     loc_6321e3cb
movzx   ecx, word ptr [esp+8ch+var_2c]
mov     [esp+8ch+var_28], 0
mov     [esp+8ch+arg_10], edx
mov     [esp+8ch+var_2c], ecx
jmp     loc_6321e439
cmp     [esp+8ch+var_71], 0
jz      short loc_6321ea0e
mov     edx, [esp+8ch+var_60]
or      [esp+8ch+var_54], 400h
neg     [esp+8ch+var_50]
movzx   ecx, byte ptr [ebx+1]
mov     ebx, ebp
mov     [esp+8ch+arg_10], edx
xor     edx, edx
mov     [esp+8ch+var_68], 0
jmp     loc_6321e02c
movzx   edx, byte ptr [esp+8ch+var_2c]
mov     [esp+8ch+var_28], 0
mov     [esp+8ch+var_2c], edx
jmp     loc_6321e439
movsx   eax, byte ptr [esp+8ch+var_2c]
mov     edx, eax
sar     edx, 1fh
mov     [esp+8ch+var_2c], eax
mov     [esp+8ch+var_28], edx
jmp     loc_6321e3cb
mov     ecx, edx
add     edi, 4
sar     ecx, 1fh
mov     esi, ebp
mov     [eax+4], ecx
movzx   eax, byte ptr [ebx+1]
mov     [esp+8ch+arg_10], edi
jmp     loc_6321df70
mov     [esp+8ch+var_4c], 0ffffffffh
jmp     loc_6321e55d
sub     esp, 1ch
fld     [esp+1ch+arg_0]
fxam
fstsw   ax
test    ah, 1
jnz     short loc_6321ea6c
fldz
fxch    st(1)
fucomi  st, st(1)
fstp    st(1)
jnp     short loc_6321ea70
fild    [esp+1ch+arg_8]
fxch    st(1)
fscale
fstp    st(1)
fxam
fstsw   ax
test    ah, 1
jnz     short loc_6321ea5b
fldz
fxch    st(1)
fucomi  st, st(1)
fstp    st(1)
jp      short loc_6321ea6c
jnz     short loc_6321ea6c
fstp    [esp+1ch+var_1c]
call    _errno
mov     dword ptr [eax], 22h
fld     [esp+1ch+var_1c]
add     esp, 1ch
retn
jnz     short loc_6321ea3b
jmp     short loc_6321ea6c
fld     ds:dbl_6321ea80
fld     [esp+arg_0]
fxam
fnstsw  ax
fld     st
sahf
jb      short loc_6321eac0
fsub    st, st(2)
fld     st
fabs
fcomp   ds:dbl_6321ea88
fnstsw  ax
and     ah, 45h
jz      short loc_6321eabb
fstp    st(1)
fyl2xp1
retn
fstp    st
fyl2x
retn
jp      short loc_6321eaa3
fstp    st(1)
fstp    st(1)
retn
fld     [esp+arg_0]
fxam
fstsw   ax
mov     dh, 45h
and     dh, ah
cmp     dh, 5
jz      short loc_6321eb0a
fld     st
sub     esp, 8
fnstcw  [esp+8+var_4]
movzx   eax, [esp+8+var_4]
or      ah, 0ch
mov     [esp+8+var_8], ax
fldcw   [esp+8+var_8]
frndint
fldcw   [esp+8+var_4]
add     esp, 8
fsub    st(1), st
fxch    st(1)
f2xm1
fld1
faddp   st(1), st
fscale
fstp    st(1)
retn
test    eax, 200h
jz      short locret_6321eb15
fstp    st
fldz
retn
push    ebx
sub     esp, 48h
fld     [esp+4ch+arg_0]
mov     ebx, [esp+4ch+arg_8]
fxam
fstsw   ax
test    ebx, ebx
jz      loc_6321ec46
fld1
fld     st
fxch    st(2)
fucomi  st, st(2)
fstp    st(2)
jnp     loc_6321ebd0
fstp    st
and     eax, 4500h
cmp     eax, 100h
jz      loc_6321ebe4
mov     edx, ebx
and     edx, 1
cmp     eax, 4000h
jz      loc_6321ec50
cmp     eax, 500h
jz      loc_6321ec77
fld     st
test    ebx, ebx
fabs
js      loc_6321ed10
cmp     ebx, 1
fld     st
jz      short loc_6321ebb0
test    bl, 1
jz      loc_6321ecf0
fxch    st(1)
sar     ebx, 1
test    bl, 1
fmul    st, st
jz      short loc_6321eb9f
fmul    st(1), st
sar     ebx, 1
test    ebx, ebx
jg      short loc_6321eb96
fstp    st
fxch    st(1)
jmp     short loc_6321ebb4
fstp    st(1)
fxch    st(1)
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      short loc_6321ebca
test    edx, edx
jz      short loc_6321ebca
fchs
jmp     short loc_6321ebca
fstp    st(1)
add     esp, 48h
pop     ebx
retn
jz      short loc_6321ebc8
fstp    st
and     eax, 4500h
cmp     eax, 100h
jnz     loc_6321eb5b
fxam
fstsw   ax
test    ah, 2
jnz     loc_6321ed00
fld     ds:flt_6322e194
fxch    st(1)
fstp    [esp+4ch+var_1c]
fstp    [esp+4ch+var_2c]
call    _errno
fld     [esp+4ch+var_2c]
mov     dword ptr [eax], 21h
fstp    [esp+4ch+var_34]
mov     [esp+4ch+var_10], ebx
fild    [esp+4ch+var_10]
fstp    [esp+4ch+var_3c]
fld     [esp+4ch+var_1c]
fstp    [esp+4ch+var_44]
mov     [esp+4ch+var_48], offset apowi
mov     [esp+4ch+var_4c], 1
call    sub_63221a90
fld     [esp+4ch+var_2c]
add     esp, 48h
pop     ebx
retn
fstp    st
fld1
add     esp, 48h
pop     ebx
retn
test    ebx, ebx
js      loc_6321ed20
test    edx, edx
jz      loc_6321ece6
fxam
fstsw   ax
fstp    st
test    ah, 2
fldz
jz      loc_6321ebca
jmp     loc_6321ebc4
fxam
fstsw   ax
test    ah, 2
jnz     short loc_6321ecd5
fxam
fstsw   ax
test    ah, 2
jz      short loc_6321ec96
test    edx, edx
lea     esi, [esi+0]
jnz     loc_6321ed32
fxam
fstsw   ax
test    ah, 2
xchg    ax, ax
jz      short loc_6321ecaa
test    edx, edx
jz      loc_6321ed47
test    ebx, ebx
lea     esi, [esi+0]
js      short loc_6321ec58
test    edx, edx
jz      short loc_6321ecc4
fxam
fstsw   ax
fstp    st
test    ah, 2
jz      short loc_6321ecca
jmp     short loc_6321ed3c
fstp    st
jmp     short loc_6321ecca
fstp    st
fld     ds:flt_6322e19c
jmp     loc_6321ebca
test    edx, edx
jnz     short loc_6321ec81
mov     eax, ebx
shr     eax, 1fh
test    al, al
jz      short loc_6321ec81
fstp    st
jmp     short loc_6321ece8
fstp    st
fldz
jmp     loc_6321ebca
fstp    st
fld1
jmp     loc_6321eb92
fld     ds:flt_6322e190
fxch    st(1)
jmp     loc_6321ebfa
fdivr   ds:flt_6322e198
neg     ebx
jmp     loc_6321eb82
test    edx, edx
jz      short loc_6321ecc8
fxam
fstsw   ax
test    ah, 2
jnz     short loc_6321ecb6
fstp    st
jmp     short loc_6321ecca
test    ebx, ebx
js      loc_6321ec96
fstp    st
fld     ds:flt_6322e1a0
jmp     loc_6321ebca
test    ebx, ebx
js      loc_6321ecaa
fstp    st
jmp     loc_6321ecca
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 9ch
mov     esi, [esp+0ach+arg_c]
mov     [esp+0ach+var_8c], 0
mov     eax, [esi]
mov     ebp, eax
and     eax, 7
and     ebp, 0ffffffcfh
cmp     eax, 4
mov     [esi], ebp
ja      def_6321ed8e
jmp     ds:jpt_6321ed8e[eax*4]
fld     st
mov     eax, [esp+0ach+var_68]
fadd    st, st(1)
fadd    ds:flt_6322e204
fstp    [esp+0ach+var_5c]
sub     dword ptr [esp+0ach+var_5c+4], 3400000h
test    eax, eax
jnz     loc_6321fd0f
fld     st
fsub    ds:flt_6322e208
fld     [esp+0ach+var_5c]
fxch    st(1)
fucomi  st, st(1)
ja      loc_6321fd22
fxch    st(1)
fchs
fucomip st, st(1)
fstp    st
mov     dword ptr [esp+0ach+var_74], 0
mov     dword ptr [esp+0ach+var_5c], 0
ja      loc_6321f738
jmp     short loc_6321edef
fstp    st
fstp    [esp+0ach+var_74]
mov     eax, [esp+0ach+var_60]
test    eax, eax
js      loc_6321f4f0
mov     edx, [esp+0ach+arg_0]
mov     ecx, [esp+0ach+var_78]
cmp     ecx, [edx+14h]
jg      loc_6321f4f0
mov     eax, [esp+0ach+var_68]
fld     ds:dbl_6322e240[ecx*8]
test    eax, eax
jg      loc_6321fa80
mov     eax, [esp+0ach+arg_14]
shr     eax, 1fh
test    al, al
jz      loc_6321fa80
mov     ebp, [esp+0ach+var_68]
test    ebp, ebp
jnz     loc_6321f724
fmul    ds:flt_6322e208
mov     dword ptr [esp+0ach+var_5c], 0
fld     [esp+0ach+var_74]
fxch    st(1)
fucomip st, st(1)
fstp    st
mov     dword ptr [esp+0ach+var_74], 0
jnb     loc_6321f740
add     ecx, 2
mov     [esp+0ach+var_84], ecx
mov     eax, [esp+0ach+var_8c]
xor     edi, edi
mov     [esp+0ach+var_88], 20h
mov     ebp, eax
mov     byte ptr [eax], 31h
add     ebp, 1
mov     eax, dword ptr [esp+0ach+var_74]
mov     [esp+0ach+var_ac], eax
call    sub_63220da0
mov     edx, dword ptr [esp+0ach+var_5c]
test    edx, edx
jz      short loc_6321eeb1
cmp     edi, dword ptr [esp+0ach+var_5c]
jnz     loc_6321f99c
mov     eax, dword ptr [esp+0ach+var_5c]
mov     [esp+0ach+var_ac], eax
call    sub_63220da0
mov     [esp+0ach+var_ac], ebx
call    sub_63220da0
mov     eax, [esp+0ach+arg_1c]
mov     ecx, [esp+0ach+var_84]
mov     edx, [esp+0ach+arg_18]
mov     byte ptr [ebp+0], 0
test    eax, eax
mov     [edx], ecx
jz      short loc_6321eede
mov     edx, [esp+0ach+arg_1c]
mov     [edx], ebp
mov     ecx, [esp+0ach+var_88]
or      [esi], ecx
mov     eax, [esp+0ach+var_8c]
add     esp, 9ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     edx, [esp+0ach+arg_0]
mov     edi, [edx]
xor     edx, edx
cmp     edi, 20h
jle     short loc_6321ef11
mov     eax, 20h
add     eax, eax
add     edx, 1
cmp     edi, eax
jg      short loc_6321ef08
mov     [esp+0ach+var_ac], edx
call    sub_63220ce0
mov     ecx, [esp+0ach+arg_8]
mov     ebx, eax
lea     eax, [edi-1]
sar     eax, 5
lea     eax, [ecx+eax*4]
mov     [esp+0ach+var_8c], eax
lea     eax, [ebx+14h]
mov     [esp+0ach+var_78], eax
mov     edx, eax
mov     eax, ecx
lea     esi, [esi+0]
mov     ecx, [eax]
add     eax, 4
mov     [edx], ecx
add     edx, 4
cmp     [esp+0ach+var_8c], eax
jnb     short loc_6321ef40
sub     edx, [esp+0ach+var_78]
sar     edx, 2
jmp     short loc_6321ef62
mov     edx, eax
lea     eax, [edx-1]
mov     ecx, [ebx+eax*4+14h]
test    ecx, ecx
jnz     loc_6321f440
test    eax, eax
jnz     short loc_6321ef60
mov     dword ptr [ebx+10h], 0
mov     [esp+0ach+var_6c], 0
mov     [esp+0ach+var_ac], ebx
call    sub_632217f0
mov     edx, [esp+0ach+arg_4]
mov     [esp+0ach+var_60], edx
test    eax, eax
mov     [esp+0ach+var_20], eax
jnz     loc_6321f410
mov     ecx, [ebx+10h]
test    ecx, ecx
jnz     loc_6321f076
mov     [esp+0ach+var_ac], ebx
call    sub_63220da0
mov     edx, [esp+0ach+arg_18]
mov     ecx, [esp+0ach+arg_1c]
mov     dword ptr [edx], 1
mov     [esp+0ach+size], 1
mov     [esp+0ach+src], ecx
mov     [esp+0ach+var_ac], offset a0
call    sub_63220850
mov     [esp+0ach+var_8c], eax
mov     eax, [esp+0ach+var_8c]
add     esp, 9ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     edx, [esp+0ach+arg_18]
mov     ecx, [esp+0ach+arg_1c]
mov     dword ptr [edx], 0ffff8000h
mov     [esp+0ach+size], 3
mov     [esp+0ach+src], ecx
mov     [esp+0ach+var_ac], offset anan
call    sub_63220850
mov     [esp+0ach+var_8c], eax
mov     eax, [esp+0ach+var_8c]
add     esp, 9ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     edx, [esp+0ach+arg_18]
mov     ecx, [esp+0ach+arg_1c]
mov     dword ptr [edx], 0ffff8000h
mov     [esp+0ach+size], 8
mov     [esp+0ach+src], ecx
mov     [esp+0ach+var_ac], offset ainfinity
call    sub_63220850
mov     [esp+0ach+var_8c], eax
mov     eax, [esp+0ach+var_8c]
add     esp, 9ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
lea     eax, [esp+0ach+var_20]
mov     [esp+0ach+src], eax
mov     [esp+0ach+var_ac], ebx
call    sub_63221490
mov     ecx, [esp+0ach+var_60]
mov     edx, [esp+0ach+var_6c]
lea     eax, [ecx+edx-1]
fstp    [esp+0ach+var_74]
mov     edx, dword ptr [esp+0ach+var_74+4]
mov     ecx, eax
mov     [esp+0ach+var_34], eax
sar     ecx, 1fh
mov     [esp+0ach+var_8c], ecx
xor     ecx, eax
sub     ecx, [esp+0ach+var_8c]
and     edx, 0fffffh
or      edx, 3ff00000h
mov     dword ptr [esp+0ach+var_74+4], edx
sub     ecx, 435h
fld     [esp+0ach+var_74]
test    ecx, ecx
fsub    ds:flt_6322e1cc
fmul    ds:dbl_6322e1d0
fadd    ds:dbl_6322e1d8
fild    [esp+0ach+var_34]
fmul    ds:dbl_6322e1e0
faddp   st(1), st
jle     short loc_6321f0fc
mov     [esp+0ach+var_34], ecx
fild    [esp+0ach+var_34]
fmul    ds:dbl_6322e1e8
faddp   st(1), st
fnstcw  [esp+0ach+var_2e]
movzx   ecx, [esp+0ach+var_2e]
mov     ch, 0ch
mov     [esp+0ach+var_30], cx
fldcw   [esp+0ach+var_30]
fist    [esp+0ach+var_78]
fldcw   [esp+0ach+var_2e]
fldz
fucomip st, st(1)
jbe     short loc_6321f131
fild    [esp+0ach+var_78]
fucomip st, st(1)
fstp    st
jp      short loc_6321f12a
jz      short loc_6321f133
sub     [esp+0ach+var_78], 1
jmp     short loc_6321f133
fstp    st
mov     ecx, eax
shl     ecx, 14h
add     ecx, edx
cmp     [esp+0ach+var_78], 16h
mov     dword ptr [esp+0ach+var_74+4], ecx
mov     [esp+0ach+var_44], 1
ja      short loc_6321f175
mov     edx, [esp+0ach+var_78]
fld     ds:dbl_6322e240[edx*8]
fld     [esp+0ach+var_74]
fxch    st(1)
fucomip st, st(1)
fstp    st
jbe     loc_6321f4e0
sub     [esp+0ach+var_78], 1
mov     [esp+0ach+var_44], 0
mov     edx, [esp+0ach+var_6c]
mov     [esp+0ach+var_50], 0
sub     edx, eax
sub     edx, 1
mov     [esp+0ach+var_64], edx
js      loc_6321f780
mov     edx, [esp+0ach+var_78]
test    edx, edx
js      loc_6321f760
mov     ecx, [esp+0ach+var_78]
add     [esp+0ach+var_64], ecx
mov     [esp+0ach+var_4c], 0
mov     [esp+0ach+var_48], ecx
cmp     [esp+0ach+arg_10], 9
ja      loc_6321f460
cmp     [esp+0ach+arg_10], 5
jle     loc_6321f46b
sub     [esp+0ach+arg_10], 4
xor     eax, eax
cmp     [esp+0ach+arg_10], 3
jz      loc_6321fa00
jg      loc_6321f480
cmp     [esp+0ach+arg_10], 2
jz      loc_6321f9b1
mov     [esp+0ach+var_34], edi
xor     edx, edx
fild    [esp+0ach+var_34]
fmul    ds:dbl_6322e1f0
mov     [esp+0ach+var_40], 1
mov     [esp+0ach+var_3c], 0ffffffffh
mov     [esp+0ach+var_68], 0ffffffffh
mov     [esp+0ach+arg_14], 0
fldcw   [esp+0ach+var_30]
fistp   [esp+0ach+var_34]
fldcw   [esp+0ach+var_2e]
mov     eax, [esp+0ach+var_34]
add     eax, 3
mov     [esp+0ach+var_20], eax
mov     byte ptr [esp+0ach+var_90], dl
mov     [esp+0ach+var_ac], eax
call    sub_63220810
mov     ecx, [esp+0ach+arg_0]
movzx   edx, byte ptr [esp+0ach+var_90]
mov     [esp+0ach+var_8c], eax
mov     eax, [ecx+0ch]
sub     eax, 1
cmp     eax, 0
mov     [esp+0ach+var_54], eax
jz      short loc_6321f290
mov     eax, 2
cmovge  eax, [esp+0ach+var_54]
and     ebp, 8
mov     [esp+0ach+var_54], eax
jz      short loc_6321f290
mov     eax, 3
sub     eax, [esp+0ach+var_54]
mov     [esp+0ach+var_54], eax
test    dl, dl
jz      loc_6321edf3
mov     edx, [esp+0ach+var_54]
or      edx, [esp+0ach+var_78]
jnz     loc_6321edf3
mov     edx, [esp+0ach+var_44]
mov     [esp+0ach+var_20], 0
fld     [esp+0ach+var_74]
test    edx, edx
jz      loc_6321ed95
mov     eax, [esp+0ach+var_68]
test    eax, eax
jle     loc_6321ed95
fld1
fucomip st, st(1)
jbe     loc_6321ed95
mov     eax, [esp+0ach+var_3c]
test    eax, eax
jle     loc_6321edef
fld     st
mov     ecx, [esp+0ach+var_3c]
fmul    ds:flt_6322e1fc
mov     [esp+0ach+var_38], 0ffffffffh
fst     [esp+0ach+var_74]
fld     st
fmul    ds:flt_6322e200
fadd    ds:flt_6322e204
fstp    [esp+0ach+var_5c]
sub     dword ptr [esp+0ach+var_5c+4], 3400000h
mov     eax, [esp+0ach+var_40]
test    eax, eax
jz      loc_6321fd45
fld     [esp+0ach+var_5c]
fld     ds:flt_6322e20c
fdiv    ds:dbl_6322e238[ecx*8]
fnstcw  [esp+0ach+var_2e]
mov     edx, [esp+0ach+var_8c]
mov     [esp+0ach+var_20], 0
movzx   eax, [esp+0ach+var_2e]
mov     ebp, edx
add     ebp, 1
mov     ah, 0ch
mov     [esp+0ach+var_30], ax
fsubrp  st(1), st
fxch    st(1)
fldcw   [esp+0ach+var_30]
fist    [esp+0ach+var_34]
fldcw   [esp+0ach+var_2e]
mov     eax, [esp+0ach+var_34]
mov     [esp+0ach+var_34], eax
add     eax, 30h
fild    [esp+0ach+var_34]
fsubp   st(1), st
fxch    st(1)
mov     [edx], al
fucomi  st, st(1)
ja      loc_63220121
fld     st(1)
fsubr   ds:flt_6322e1f8
fxch    st(1)
fucomi  st, st(1)
fstp    st(1)
ja      loc_63220302
fld     ds:flt_6322e1fc
jmp     short loc_6321f3ed
fld     st
fmul    st(2), st
fmulp   st(3), st
fxch    st(2)
fldcw   [esp+0ach+var_30]
fist    [esp+0ach+var_34]
fldcw   [esp+0ach+var_2e]
mov     eax, [esp+0ach+var_34]
mov     [esp+0ach+var_34], eax
add     eax, 30h
fild    [esp+0ach+var_34]
fsubp   st(1), st
fxch    st(1)
mov     [ebp+0], al
add     ebp, 1
fucomi  st, st(1)
ja      loc_63220127
fld     st(1)
fsubr   ds:flt_6322e1f8
fxch    st(1)
fucomi  st, st(1)
fstp    st(1)
ja      loc_6321ff0c
fxch    st(1)
fxch    st(2)
mov     eax, [esp+0ach+var_20]
add     eax, 1
cmp     ecx, eax
mov     [esp+0ach+var_20], eax
jg      short loc_6321f3a0
fstp    st
fstp    st
fstp    st
jmp     loc_6321edef
mov     [esp+0ach+src], eax
mov     [esp+0ach+var_ac], ebx
call    sub_632216e0
mov     eax, [esp+0ach+var_20]
mov     ecx, [esp+0ach+arg_4]
sub     [esp+0ach+var_6c], eax
add     ecx, eax
mov     [esp+0ach+var_60], ecx
jmp     loc_6321efa6
bsr     eax, [ebx+edx*4+10h]
mov     [ebx+10h], edx
shl     edx, 5
xor     eax, 1fh
sub     edx, eax
mov     [esp+0ach+var_6c], edx
jmp     loc_6321ef84
mov     [esp+0ach+arg_10], 0
add     eax, 3feh
cmp     eax, 7f7h
setbe   al
jmp     loc_6321f1d6
cmp     [esp+0ach+arg_10], 4
jz      loc_6321f9f2
cmp     [esp+0ach+arg_10], 5
jnz     loc_6321f1f8
mov     [esp+0ach+var_40], 1
mov     edx, [esp+0ach+arg_14]
add     edx, [esp+0ach+var_78]
mov     [esp+0ach+var_3c], edx
add     edx, 1
test    edx, edx
mov     [esp+0ach+var_68], edx
mov     [esp+0ach+var_20], edx
jle     loc_6321fc7e
cmp     edx, 0eh
setbe   dl
and     edx, eax
mov     eax, [esp+0ach+var_68]
jmp     loc_6321f245
mov     [esp+0ach+var_44], 0
jmp     loc_6321f175
mov     ecx, [esp+0ach+var_40]
test    ecx, ecx
jz      loc_6321f793
mov     ecx, [esp+0ach+arg_0]
sub     edi, [esp+0ach+var_6c]
mov     edx, [ecx+4]
lea     eax, [edi+1]
mov     ecx, [esp+0ach+var_60]
mov     [esp+0ach+var_20], eax
sub     ecx, edi
cmp     ecx, edx
jge     loc_6321f942
cmp     [esp+0ach+arg_10], 5
jz      loc_6321f942
cmp     [esp+0ach+arg_10], 3
jz      loc_6321f942
mov     eax, [esp+0ach+var_60]
sub     eax, edx
mov     edx, [esp+0ach+var_68]
add     eax, 1
mov     [esp+0ach+var_20], eax
test    edx, edx
jle     short loc_6321f56a
cmp     [esp+0ach+arg_10], 1
jle     short loc_6321f56a
cmp     [esp+0ach+var_68], eax
jl      loc_6321f958
mov     edi, [esp+0ach+var_4c]
mov     ebp, [esp+0ach+var_50]
add     [esp+0ach+var_50], eax
add     [esp+0ach+var_64], eax
mov     [esp+0ach+var_ac], 1
call    sub_63220ee0
mov     dword ptr [esp+0ach+var_5c], eax
mov     eax, [esp+0ach+var_64]
test    eax, eax
jle     short loc_6321f5b2
test    ebp, ebp
jle     short loc_6321f5b2
mov     eax, [esp+0ach+var_64]
cmp     [esp+0ach+var_64], ebp
cmovg   eax, ebp
sub     [esp+0ach+var_50], eax
sub     ebp, eax
sub     [esp+0ach+var_64], eax
mov     [esp+0ach+var_20], eax
mov     eax, [esp+0ach+var_4c]
test    eax, eax
jle     short loc_6321f608
mov     ecx, [esp+0ach+var_40]
test    ecx, ecx
jz      loc_6321fc67
test    edi, edi
jle     short loc_6321f5fc
mov     eax, dword ptr [esp+0ach+var_5c]
mov     [esp+0ach+src], edi
mov     [esp+0ach+var_ac], eax
call    sub_63221060
mov     [esp+0ach+src], ebx
mov     dword ptr [esp+0ach+var_5c], eax
mov     [esp+0ach+var_ac], eax
call    sub_63220f10
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+var_90], eax
call    sub_63220da0
mov     eax, [esp+0ach+var_90]
mov     ebx, eax
mov     eax, [esp+0ach+var_4c]
sub     eax, edi
jnz     loc_6321fcb2
mov     [esp+0ach+var_ac], 1
call    sub_63220ee0
mov     edx, [esp+0ach+var_48]
test    edx, edx
mov     dword ptr [esp+0ach+var_74], eax
jle     short loc_6321f634
mov     ecx, [esp+0ach+var_48]
mov     [esp+0ach+var_ac], eax
mov     [esp+0ach+src], ecx
call    sub_63221060
mov     dword ptr [esp+0ach+var_74], eax
cmp     [esp+0ach+arg_10], 1
mov     [esp+0ach+var_60], 0
jle     loc_6321fb66
mov     eax, [esp+0ach+var_48]
mov     edi, 1fh
test    eax, eax
jz      short loc_6321f666
mov     ecx, dword ptr [esp+0ach+var_74]
mov     eax, [ecx+10h]
bsr     edi, [ecx+eax*4+10h]
xor     edi, 1fh
sub     edi, [esp+0ach+var_64]
mov     eax, [esp+0ach+var_50]
sub     edi, 4
and     edi, 1fh
add     eax, edi
mov     edx, edi
test    eax, eax
mov     [esp+0ach+var_20], edi
jle     short loc_6321f698
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+src], eax
call    sub_63221190
mov     edx, [esp+0ach+var_20]
mov     ebx, eax
mov     eax, [esp+0ach+var_64]
add     eax, edx
test    eax, eax
jle     short loc_6321f6b6
mov     [esp+0ach+src], eax
mov     eax, dword ptr [esp+0ach+var_74]
mov     [esp+0ach+var_ac], eax
call    sub_63221190
mov     dword ptr [esp+0ach+var_74], eax
mov     eax, [esp+0ach+var_44]
test    eax, eax
jnz     loc_6321fa0d
mov     eax, [esp+0ach+var_68]
test    eax, eax
jg      loc_6321f7a8
cmp     [esp+0ach+arg_10], 2
jle     loc_6321f7a8
mov     eax, [esp+0ach+var_68]
test    eax, eax
jnz     short loc_6321f740
mov     eax, dword ptr [esp+0ach+var_74]
mov     [esp+0ach+size], 0
mov     [esp+0ach+src], 5
mov     [esp+0ach+var_ac], eax
call    sub_63220df0
mov     [esp+0ach+var_ac], ebx
mov     dword ptr [esp+0ach+var_74], eax
mov     [esp+0ach+src], eax
call    sub_632212a0
test    eax, eax
jle     short loc_6321f740
mov     edx, [esp+0ach+var_78]
add     edx, 2
mov     [esp+0ach+var_84], edx
jmp     loc_6321ee71
fstp    st
mov     dword ptr [esp+0ach+var_74], 0
mov     dword ptr [esp+0ach+var_5c], 0
jmp     short loc_6321f740
fstp    st
lea     esi, [esi+0]
mov     ecx, [esp+0ach+arg_14]
xor     edi, edi
mov     ebp, [esp+0ach+var_8c]
mov     [esp+0ach+var_88], 10h
neg     ecx
mov     [esp+0ach+var_84], ecx
jmp     loc_6321ee87
mov     edx, [esp+0ach+var_78]
sub     [esp+0ach+var_50], edx
mov     [esp+0ach+var_48], 0
neg     edx
mov     [esp+0ach+var_4c], edx
jmp     loc_6321f1b0
neg     edx
mov     [esp+0ach+var_50], edx
mov     [esp+0ach+var_64], 0
jmp     loc_6321f190
mov     edi, [esp+0ach+var_4c]
mov     ebp, [esp+0ach+var_50]
mov     dword ptr [esp+0ach+var_5c], 0
jmp     loc_6321f58a
mov     eax, [esp+0ach+var_40]
test    eax, eax
jz      loc_6321fba2
add     edi, ebp
test    edi, edi
jle     short loc_6321f7ce
mov     eax, dword ptr [esp+0ach+var_5c]
mov     [esp+0ach+src], edi
mov     [esp+0ach+var_ac], eax
call    sub_63221190
mov     dword ptr [esp+0ach+var_5c], eax
mov     edi, [esp+0ach+var_60]
mov     edx, dword ptr [esp+0ach+var_5c]
test    edi, edi
jnz     loc_6321ffcb
mov     ebp, [esp+0ach+var_8c]
mov     [esp+0ach+var_64], esi
mov     edi, dword ptr [esp+0ach+var_5c]
mov     esi, edx
mov     [esp+0ach+var_20], 1
mov     [esp+0ach+var_80], ebp
jmp     loc_6321f8d9
mov     [esp+0ach+var_90], eax
mov     [esp+0ach+var_ac], ebp
call    sub_63220da0
mov     eax, [esp+0ach+var_90]
mov     edx, [esp+0ach+arg_10]
or      edx, eax
jnz     short loc_6321f827
mov     edx, [esp+0ach+var_54]
test    edx, edx
jz      loc_6322017a
mov     ebp, [esp+0ach+var_84]
test    ebp, ebp
js      loc_6321fe25
mov     edx, [esp+0ach+var_84]
or      edx, [esp+0ach+arg_10]
jnz     short loc_6321f850
mov     ecx, [esp+0ach+arg_8]
test    byte ptr [ecx], 1
jz      loc_6321fe25
test    eax, eax
jg      loc_63220044
mov     edx, [esp+0ach+var_80]
movzx   eax, byte ptr [esp+0ach+var_7c]
mov     ecx, [esp+0ach+var_68]
mov     [edx], al
add     edx, 1
cmp     [esp+0ach+var_20], ecx
mov     [esp+0ach+var_80], edx
jz      loc_632200ac
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+size], 0
mov     [esp+0ach+src], 0ah
call    sub_63220df0
cmp     edi, esi
mov     [esp+0ach+size], 0
mov     [esp+0ach+src], 0ah
mov     [esp+0ach+var_ac], edi
mov     ebx, eax
jz      loc_6321f937
call    sub_63220df0
mov     [esp+0ach+var_ac], esi
mov     [esp+0ach+size], 0
mov     [esp+0ach+src], 0ah
mov     edi, eax
call    sub_63220df0
mov     esi, eax
add     [esp+0ach+var_20], 1
mov     eax, dword ptr [esp+0ach+var_74]
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+src], eax
call    sub_632208c0
mov     [esp+0ach+src], edi
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+var_6c], eax
add     eax, 30h
mov     [esp+0ach+var_7c], eax
call    sub_632212a0
mov     [esp+0ach+src], esi
mov     [esp+0ach+var_84], eax
mov     eax, dword ptr [esp+0ach+var_74]
mov     [esp+0ach+var_ac], eax
call    sub_63221310
mov     ebp, eax
mov     eax, 1
mov     ecx, [ebp+0ch]
test    ecx, ecx
jnz     loc_6321f800
mov     [esp+0ach+src], ebp
mov     [esp+0ach+var_ac], ebx
call    sub_632212a0
jmp     loc_6321f800
call    sub_63220df0
mov     edi, eax
mov     esi, eax
jmp     short loc_6321f8d1
cmp     [esp+0ach+arg_10], 1
mov     edi, [esp+0ach+var_4c]
mov     ebp, [esp+0ach+var_50]
jle     loc_6321f572
mov     eax, [esp+0ach+var_68]
sub     eax, 1
cmp     [esp+0ach+var_4c], eax
jl      loc_6321fcc5
mov     edi, [esp+0ach+var_4c]
sub     edi, eax
mov     edx, [esp+0ach+var_68]
mov     ebp, [esp+0ach+var_50]
test    edx, edx
mov     eax, edx
mov     [esp+0ach+var_20], edx
jns     loc_6321f572
sub     ebp, edx
xor     eax, eax
mov     [esp+0ach+var_20], 0
jmp     loc_6321f572
test    edi, edi
jz      loc_6321eea5
mov     [esp+0ach+var_ac], edi
call    sub_63220da0
jmp     loc_6321eea5
mov     [esp+0ach+var_40], 0
mov     ecx, [esp+0ach+arg_14]
test    ecx, ecx
jle     loc_6321fc9d
cmp     [esp+0ach+arg_14], 0eh
setbe   dl
mov     ecx, [esp+0ach+arg_14]
and     edx, eax
mov     [esp+0ach+var_20], ecx
mov     eax, ecx
mov     [esp+0ach+var_3c], ecx
mov     [esp+0ach+var_68], ecx
jmp     loc_6321f245
mov     [esp+0ach+var_40], 1
jmp     short loc_6321f9b9
mov     [esp+0ach+var_40], 0
jmp     loc_6321f4a4
mov     eax, dword ptr [esp+0ach+var_74]
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+src], eax
call    sub_632212a0
test    eax, eax
jns     loc_6321f6c2
sub     [esp+0ach+var_78], 1
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+size], 0
mov     [esp+0ach+src], 0ah
call    sub_63220df0
mov     edx, [esp+0ach+var_3c]
mov     [esp+0ach+var_68], edx
mov     ebx, eax
mov     eax, [esp+0ach+var_40]
test    eax, eax
jz      loc_6321f6c2
mov     eax, dword ptr [esp+0ach+var_5c]
mov     [esp+0ach+size], 0
mov     [esp+0ach+src], 0ah
mov     [esp+0ach+var_ac], eax
call    sub_63220df0
mov     dword ptr [esp+0ach+var_5c], eax
jmp     loc_6321f6c2
fld     [esp+0ach+var_74]
fld     st
mov     ecx, [esp+0ach+var_8c]
fdiv    st, st(2)
fnstcw  [esp+0ach+var_2e]
mov     [esp+0ach+var_20], 1
mov     ebp, ecx
movzx   eax, [esp+0ach+var_2e]
add     ebp, 1
mov     ah, 0ch
mov     [esp+0ach+var_30], ax
fldcw   [esp+0ach+var_30]
fistp   [esp+0ach+var_34]
fldcw   [esp+0ach+var_2e]
mov     eax, [esp+0ach+var_34]
mov     [esp+0ach+var_34], eax
lea     edx, [eax+30h]
fild    [esp+0ach+var_34]
fmul    st, st(2)
mov     [ecx], dl
fsubp   st(1), st
fldz
fxch    st(1)
fucomi  st, st(1)
fstp    st(1)
jnp     loc_63220270
mov     edx, [esp+0ach+var_20]
cmp     [esp+0ach+var_68], edx
jz      loc_6321fcdc
fld     ds:flt_6322e1fc
mov     ecx, [esp+0ach+var_68]
jmp     short loc_6321fb07
mov     edx, [esp+0ach+var_20]
cmp     ecx, edx
jz      loc_6321fcda
add     edx, 1
fmul    st(1), st
mov     [esp+0ach+var_20], edx
fld     st(1)
fdiv    st, st(3)
fldcw   [esp+0ach+var_30]
fistp   [esp+0ach+var_34]
fldcw   [esp+0ach+var_2e]
mov     eax, [esp+0ach+var_34]
mov     [esp+0ach+var_34], eax
lea     edx, [eax+30h]
fild    [esp+0ach+var_34]
fmul    st, st(3)
mov     [ebp+0], dl
add     ebp, 1
fsubp   st(2), st
fldz
fxch    st(2)
fucomi  st, st(2)
fstp    st(2)
jp      short loc_6321faf8
jnz     short loc_6321faf8
fstp    st
fstp    st
fstp    st
mov     edx, [esp+0ach+var_78]
mov     [esp+0ach+var_88], 0
add     edx, 1
mov     [esp+0ach+var_84], edx
jmp     loc_6321eeb1
cmp     [esp+0ach+var_6c], 1
jnz     loc_6321f64a
mov     edx, [esp+0ach+arg_0]
mov     eax, [edx+4]
add     eax, 1
cmp     [esp+0ach+arg_4], eax
jle     loc_6321f64a
add     [esp+0ach+var_50], 1
add     [esp+0ach+var_64], 1
mov     [esp+0ach+var_60], 1
jmp     loc_6321f64a
mov     [esp+0ach+var_88], esi
mov     ebp, [esp+0ach+var_8c]
mov     [esp+0ach+var_20], 1
mov     edi, [esp+0ach+var_68]
mov     esi, dword ptr [esp+0ach+var_74]
jmp     short loc_6321fbe2
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+size], 0
mov     [esp+0ach+src], 0ah
call    sub_63220df0
add     [esp+0ach+var_20], 1
mov     ebx, eax
mov     [esp+0ach+src], esi
mov     [esp+0ach+var_ac], ebx
call    sub_632208c0
add     eax, 30h
mov     [ebp+0], al
add     ebp, 1
cmp     edi, [esp+0ach+var_20]
jg      short loc_6321fbc0
mov     esi, [esp+0ach+var_88]
xor     edi, edi
mov     [esp+0ach+var_7c], eax
mov     eax, [esp+0ach+var_54]
test    eax, eax
jz      loc_6321ff62
cmp     [esp+0ach+var_54], 2
jz      loc_6321ff9a
cmp     dword ptr [ebx+10h], 1
jle     loc_632200f0
movzx   edx, byte ptr [ebp-1]
mov     ecx, [esp+0ach+var_8c]
jmp     short loc_6321fc3b
movzx   edx, byte ptr [eax-1]
mov     ebp, eax
cmp     dl, 39h
jnz     loc_6322008e
lea     eax, [ebp-1]
cmp     eax, ecx
jnz     short loc_6321fc35
mov     edx, [esp+0ach+var_78]
mov     byte ptr [ebp-1], 31h
mov     [esp+0ach+var_88], 20h
add     edx, 2
mov     [esp+0ach+var_84], edx
jmp     loc_6321ee87
mov     edx, [esp+0ach+var_4c]
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+src], edx
call    sub_63221060
mov     ebx, eax
jmp     loc_6321f608
cmp     [esp+0ach+var_68], 0eh
mov     [esp+0ach+var_20], 1
setbe   dl
and     edx, eax
mov     eax, 1
jmp     loc_6321f245
mov     edx, 1
mov     [esp+0ach+arg_14], 1
jmp     loc_6321f9d3
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+src], eax
call    sub_63221060
mov     ebx, eax
jmp     loc_6321f608
mov     edx, eax
xor     edi, edi
sub     edx, [esp+0ach+var_4c]
mov     [esp+0ach+var_4c], eax
add     [esp+0ach+var_48], edx
jmp     loc_6321f96f
fstp    st
mov     edi, [esp+0ach+var_54]
test    edi, edi
jz      loc_63220013
fstp    st
fstp    st
cmp     [esp+0ach+var_54], 1
jz      loc_63220231
mov     ecx, [esp+0ach+var_78]
mov     [esp+0ach+var_88], 10h
add     ecx, 1
mov     [esp+0ach+var_84], ecx
jmp     loc_6321eeb1
fld     st
mov     ecx, [esp+0ach+var_68]
mov     [esp+0ach+var_38], 0
jmp     loc_6321f315
fstp    st
fstp    st
fstp    st
mov     [esp+0ach+var_84], 2
mov     dword ptr [esp+0ach+var_74], 0
mov     dword ptr [esp+0ach+var_5c], 0
jmp     loc_6321ee71
fld     [esp+0ach+var_5c]
fnstcw  [esp+0ach+var_2e]
mov     ebp, [esp+0ach+var_8c]
fmul    ds:dbl_6322e238[ecx*8]
mov     [esp+0ach+var_20], 1
movzx   eax, [esp+0ach+var_2e]
fld     [esp+0ach+var_74]
mov     ah, 0ch
fld     ds:flt_6322e1fc
fxch    st(3)
mov     [esp+0ach+var_30], ax
jmp     short loc_6321fd8e
fmul    st, st(2)
add     edx, 1
mov     [esp+0ach+var_20], edx
fld     st
fldcw   [esp+0ach+var_30]
fist    [esp+0ach+var_34]
fldcw   [esp+0ach+var_2e]
mov     eax, [esp+0ach+var_34]
test    eax, eax
jz      short loc_6321fdb0
fstp    st(1)
mov     [esp+0ach+var_34], eax
fild    [esp+0ach+var_34]
fsubp   st(1), st
jmp     short loc_6321fdb2
fstp    st
add     eax, 30h
mov     [ebp+0], al
mov     edx, [esp+0ach+var_20]
add     ebp, 1
cmp     edx, ecx
jnz     short loc_6321fd80
fstp    st(2)
fxch    st(1)
fld     ds:flt_6322e20c
fld     st(2)
fadd    st, st(1)
fxch    st(2)
fucomi  st, st(2)
fstp    st(2)
ja      loc_6321ff16
fsubrp  st(2), st
fxch    st(1)
fucomip st, st(1)
jbe     loc_6321eded
fstp    st(1)
fldz
fxch    st(1)
fucomip st, st(1)
fstp    st
jp      short loc_6321fdfe
jz      loc_63220246
mov     [esp+0ach+var_88], 10h
jmp     short loc_6321fe0e
movzx   eax, byte ptr [edx-1]
mov     ebp, edx
cmp     al, 30h
lea     edx, [ebp-1]
jz      short loc_6321fe08
mov     eax, [esp+0ach+var_38]
add     eax, 1
mov     [esp+0ach+var_84], eax
jmp     loc_6321eeb1
mov     ecx, [esp+0ach+var_54]
mov     edx, esi
mov     ebp, [esp+0ach+var_80]
mov     esi, [esp+0ach+var_64]
test    ecx, ecx
jz      loc_632200c9
cmp     dword ptr [ebx+10h], 1
jle     loc_632200bf
cmp     [esp+0ach+var_54], 2
jz      loc_632200e3
mov     [esp+0ach+var_88], esi
mov     esi, edx
jmp     short loc_6321febb
movzx   eax, byte ptr [esp+0ach+var_7c]
mov     [ebp+0], al
add     ebp, 1
mov     [esp+0ach+var_ac], esi
mov     [esp+0ach+size], 0
mov     [esp+0ach+src], 0ah
call    sub_63220df0
cmp     edi, esi
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+size], 0
mov     [esp+0ach+src], 0ah
cmovz   edi, eax
mov     [esp+0ach+var_90], eax
call    sub_63220df0
mov     ebx, eax
mov     eax, dword ptr [esp+0ach+var_74]
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+src], eax
call    sub_632208c0
mov     edx, [esp+0ach+var_90]
mov     esi, edx
add     eax, 30h
mov     [esp+0ach+var_7c], eax
mov     eax, dword ptr [esp+0ach+var_74]
mov     [esp+0ach+src], esi
mov     [esp+0ach+var_ac], eax
call    sub_632212a0
test    eax, eax
jg      short loc_6321fe58
cmp     [esp+0ach+var_7c], 39h
mov     edx, esi
mov     esi, [esp+0ach+var_88]
jz      loc_63220108
add     [esp+0ach+var_7c], 1
mov     [esp+0ach+var_88], 20h
movzx   eax, byte ptr [esp+0ach+var_7c]
mov     [ebp+0], al
mov     ecx, [esp+0ach+var_78]
add     ebp, 1
mov     dword ptr [esp+0ach+var_5c], edx
add     ecx, 1
mov     [esp+0ach+var_84], ecx
jmp     loc_6321ee87
fstp    st
fstp    st
fstp    st
fstp    st
jmp     short loc_6321ff1e
fstp    st
fstp    st
fstp    st
fstp    st
mov     ecx, [esp+0ach+var_8c]
jmp     short loc_6321ff2a
movzx   eax, byte ptr [edx-1]
mov     ebp, edx
cmp     al, 39h
jnz     loc_63220159
lea     edx, [ebp-1]
cmp     edx, ecx
jnz     short loc_6321ff24
add     [esp+0ach+var_38], 1
mov     eax, 31h
mov     byte ptr [ebp-1], 30h
mov     ecx, [esp+0ach+var_38]
mov     [ebp-1], al
mov     [esp+0ach+var_88], 20h
add     ecx, 1
mov     [esp+0ach+var_84], ecx
jmp     loc_6321eeb1
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+src], 1
call    sub_63221190
mov     ebx, eax
mov     eax, dword ptr [esp+0ach+var_74]
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+src], eax
call    sub_632212a0
cmp     eax, 0
jg      loc_6321fc2b
jnz     short loc_6321ff9a
test    byte ptr [esp+0ach+var_7c], 1
jnz     loc_6321fc2b
cmp     dword ptr [ebx+10h], 1
xchg    ax, ax
jle     loc_632202c5
mov     [esp+0ach+var_88], 10h
jmp     short loc_6321ffb2
mov     ebp, eax
cmp     byte ptr [ebp-1], 30h
lea     eax, [ebp-1]
jz      short loc_6321ffb0
mov     edx, [esp+0ach+var_78]
add     edx, 1
mov     [esp+0ach+var_84], edx
jmp     loc_6321ee87
mov     eax, [edx+4]
mov     [esp+0ach+var_ac], eax
call    sub_63220ce0
mov     edx, dword ptr [esp+0ach+var_5c]
lea     ecx, [eax+0ch]
mov     edi, eax
mov     eax, [edx+10h]
add     edx, 0ch
mov     [esp+0ach+src], edx
mov     [esp+0ach+var_ac], ecx
lea     eax, ds:8[eax*4]
mov     [esp+0ach+size], eax
call    memcpy
mov     [esp+0ach+src], 1
mov     [esp+0ach+var_ac], edi
call    sub_63221190
mov     edx, eax
jmp     loc_6321f7de
fadd    st, st
fucomi  st, st(1)
ja      loc_63220161
fxch    st(1)
fucomip st, st(1)
fstp    st
jp      short loc_6322002b
jz      loc_63220253
mov     edx, [esp+0ach+var_78]
movzx   eax, byte ptr [ebp-1]
mov     [esp+0ach+var_88], 10h
mov     [esp+0ach+var_38], edx
jmp     loc_6321fe0e
cmp     [esp+0ach+var_54], 2
jz      loc_6321f858
cmp     [esp+0ach+var_7c], 39h
mov     edx, esi
mov     ebp, [esp+0ach+var_80]
mov     esi, [esp+0ach+var_64]
jz      loc_63220108
movzx   eax, byte ptr [esp+0ach+var_7c]
mov     ecx, [esp+0ach+var_78]
mov     dword ptr [esp+0ach+var_5c], edx
mov     [esp+0ach+var_88], 20h
add     eax, 1
add     ecx, 1
mov     [ebp+0], al
add     ebp, 1
mov     [esp+0ach+var_84], ecx
jmp     loc_6321ee87
mov     ecx, [esp+0ach+var_78]
add     edx, 1
mov     [ebp-1], dl
mov     [esp+0ach+var_88], 20h
add     ecx, 1
mov     [esp+0ach+var_84], ecx
jmp     loc_6321ee87
mov     edx, esi
mov     ebp, [esp+0ach+var_80]
mov     esi, [esp+0ach+var_64]
mov     dword ptr [esp+0ach+var_5c], edx
jmp     loc_6321fc0a
cmp     dword ptr [ebx+14h], 0
jnz     loc_6321fe45
test    eax, eax
jg      loc_632201c3
mov     [esp+0ach+var_88], 0
cmp     dword ptr [ebx+10h], 1
jle     loc_6322027f
mov     [esp+0ach+var_88], 10h
jmp     loc_6321feed
mov     ecx, [ebx+14h]
mov     [esp+0ach+var_88], 0
test    ecx, ecx
jz      loc_6321ffb2
jmp     loc_6321fc2b
mov     byte ptr [ebp+0], 39h
mov     ecx, [esp+0ach+var_8c]
add     ebp, 1
mov     dword ptr [esp+0ach+var_5c], edx
mov     edx, 39h
jmp     loc_6321fc3b
fstp    st
fstp    st(1)
jmp     short loc_6322012d
fstp    st
fstp    st(1)
fstp    st(1)
fldz
fxch    st(1)
fucomip st, st(1)
fstp    st
jp      loc_63220219
jnz     loc_63220219
mov     ecx, [esp+0ach+var_38]
mov     [esp+0ach+var_88], 0
add     ecx, 1
mov     [esp+0ach+var_84], ecx
jmp     loc_6321eeb1
add     eax, 1
jmp     loc_6321ff47
fstp    st
fstp    st
mov     ecx, [esp+0ach+var_78]
movzx   eax, byte ptr [ebp-1]
mov     [esp+0ach+var_38], ecx
mov     ecx, [esp+0ach+var_8c]
jmp     loc_6321ff2a
mov     ecx, [esp+0ach+arg_8]
test    byte ptr [ecx], 1
jnz     loc_6321f827
cmp     [esp+0ach+var_7c], 39h
mov     edx, esi
mov     ebp, [esp+0ach+var_80]
mov     esi, [esp+0ach+var_64]
jz      loc_63220108
mov     eax, [esp+0ach+var_84]
test    eax, eax
jle     loc_632202dc
mov     ecx, [esp+0ach+var_6c]
mov     [esp+0ach+var_88], 20h
add     ecx, 31h
mov     [esp+0ach+var_7c], ecx
jmp     loc_6321feed
mov     [esp+0ach+var_90], edx
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+src], 1
call    sub_63221190
mov     ebx, eax
mov     eax, dword ptr [esp+0ach+var_74]
mov     [esp+0ach+var_ac], ebx
mov     [esp+0ach+src], eax
call    sub_632212a0
mov     edx, [esp+0ach+var_90]
cmp     eax, 0
jle     loc_632202a7
cmp     [esp+0ach+var_7c], 39h
jz      loc_63220108
mov     ecx, [esp+0ach+var_6c]
mov     [esp+0ach+var_88], 20h
add     ecx, 31h
mov     [esp+0ach+var_7c], ecx
jmp     loc_632200d9
mov     eax, [esp+0ach+var_38]
mov     [esp+0ach+var_88], 10h
add     eax, 1
mov     [esp+0ach+var_84], eax
jmp     loc_6321eeb1
mov     edx, [esp+0ach+var_78]
movzx   eax, byte ptr [ebp-1]
mov     ecx, [esp+0ach+var_8c]
mov     [esp+0ach+var_38], edx
jmp     loc_6321ff2a
mov     [esp+0ach+var_88], 0
jmp     loc_6321fe0e
test    al, 1
movzx   eax, byte ptr [ebp-1]
jnz     short loc_63220296
mov     ecx, [esp+0ach+var_78]
mov     [esp+0ach+var_88], 10h
mov     [esp+0ach+var_38], ecx
jmp     loc_6321fe0e
jnz     loc_6321fadb
fstp    st
fstp    st
jmp     loc_6321fb4e
cmp     dword ptr [ebx+14h], 0
mov     eax, 10h
cmovz   eax, [esp+0ach+var_88]
mov     [esp+0ach+var_88], eax
jmp     loc_6321feed
mov     edx, [esp+0ach+var_78]
mov     ecx, [esp+0ach+var_8c]
mov     [esp+0ach+var_38], edx
jmp     loc_6321ff2a
mov     [esp+0ach+var_88], 20h
jnz     loc_632200d9
test    byte ptr [esp+0ach+var_7c], 1
jz      loc_632200d9
jmp     loc_632201f6
cmp     dword ptr [ebx+14h], 0
mov     [esp+0ach+var_88], 0
jnz     loc_6321ffa6
jmp     loc_6321ffb2
cmp     dword ptr [ebx+10h], 1
mov     [esp+0ach+var_88], 10h
jg      loc_6321feed
cmp     dword ptr [ebx+14h], 1
sbb     eax, eax
not     eax
and     eax, 10h
mov     [esp+0ach+var_88], eax
jmp     loc_6321feed
fstp    st
fstp    st
fstp    st
mov     ecx, edx
jmp     loc_6321ff2a
sub     esp, 4ch
test    ecx, ecx
mov     [esp+4ch+widecharstr], dx
jnz     short loc_63220330
cmp     dx, 0ffh
ja      short loc_63220384
mov     [eax], dl
mov     eax, 1
add     esp, 4ch
retn
lea     edx, [esp+4ch+useddefaultchar]
mov     [esp+4ch+lpuseddefaultchar], edx
mov     edx, [esp+4ch+arg_0]
mov     [esp+4ch+lpmultibytestr], eax
lea     eax, [esp+4ch+widecharstr]
mov     [esp+4ch+useddefaultchar], 0
mov     [esp+4ch+lpdefaultchar], 0
mov     [esp+4ch+cbmultibyte], edx
mov     [esp+4ch+cchwidechar], 1
mov     [esp+4ch+lpwidecharstr], eax
mov     [esp+4ch+dwflags], 0
mov     [esp+4ch+codepage], ecx
call    ds:widechartomultibyte
sub     esp, 20h
test    eax, eax
jz      short loc_63220384
mov     edx, [esp+4ch+useddefaultchar]
test    edx, edx
jz      short loc_6322032a
call    _errno
mov     dword ptr [eax], 2ah
mov     eax, 0ffffffffh
jmp     short loc_6322032a
sub     esp, 2ch
mov     eax, [esp+2ch+arg_0]
mov     [esp+2ch+var_c], ebx
lea     ebx, [esp+2ch+var_11]
mov     [esp+2ch+var_8], esi
mov     [esp+2ch+var_4], edi
movzx   edi, [esp+2ch+arg_4]
test    eax, eax
cmovnz  ebx, eax
mov     eax, ds:__mb_cur_max
mov     esi, [eax]
call    off_63225040
mov     edx, edi
mov     [esp+2ch+var_2c], esi
mov     ecx, eax
mov     eax, ebx
call    sub_63220310
mov     ebx, [esp+2ch+var_c]
mov     esi, [esp+2ch+var_8]
mov     edi, [esp+2ch+var_4]
add     esp, 2ch
retn
push    ebp
push    edi
xor     edi, edi
push    esi
push    ebx
sub     esp, 3ch
mov     ebx, [esp+50h]
call    off_63225040
mov     [esp+1ch], eax
mov     eax, ds:__mb_cur_max
mov     ebp, [eax]
mov     eax, [esp+54h]
mov     esi, [eax]
test    esi, esi
jz      short loc_63220453
test    ebx, ebx
jz      short loc_63220487
mov     ecx, [esp+58h]
test    ecx, ecx
jnz     short loc_63220439
jmp     short loc_63220460
add     ebx, eax
add     edi, eax
cmp     byte ptr [ebx-1], 0
jz      short loc_63220470
add     esi, 2
cmp     [esp+58h], edi
jbe     short loc_63220460
movzx   edx, word ptr [esi]
mov     eax, ebx
mov     ecx, [esp+1ch]
mov     [esp], ebp
call    sub_63220310
test    eax, eax
jg      short loc_63220426
mov     edi, 0ffffffffh
add     esp, 3ch
mov     eax, edi
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [esp+54h]
mov     [eax], esi
add     esp, 3ch
mov     eax, edi
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [esp+54h]
sub     edi, 1
mov     dword ptr [eax], 0
add     esp, 3ch
mov     eax, edi
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     ebx, [esp+58h]
test    ebx, ebx
jz      short loc_63220453
mov     ebx, [esp+1ch]
jmp     short loc_632204a7
add     edi, eax
cmp     byte ptr [esp+eax+2ah], 0
jz      short loc_632204be
add     esi, 2
cmp     [esp+58h], edi
jbe     short loc_63220453
movzx   edx, word ptr [esi]
mov     ecx, ebx
lea     eax, [esp+2bh]
mov     [esp], ebp
call    sub_63220310
test    eax, eax
jg      short loc_63220495
jmp     short loc_6322044e
sub     edi, 1
jmp     short loc_63220453
sub     esp, 5ch
mov     [esp+5ch+var_c], esi
xor     esi, esi
test    edx, edx
mov     [esp+5ch+var_10], ebx
mov     ebx, eax
mov     [esp+5ch+var_8], edi
mov     edi, [esp+5ch+arg_0]
mov     [esp+5ch+var_4], ebp
mov     ebp, [esp+5ch+arg_4]
jz      loc_6322059a
test    ecx, ecx
mov     esi, 0fffffffeh
jz      loc_6322059a
mov     eax, [edi]
mov     dword ptr [edi], 0
mov     [esp+5ch+var_20], eax
movzx   eax, byte ptr [edx]
test    al, al
jz      loc_632205c1
cmp     [esp+5ch+arg_8], 1
jbe     loc_632205b0
cmp     byte ptr [esp+5ch+var_20], 0
jnz     loc_632205d0
movzx   eax, al
mov     [esp+5ch+var_30], edx
mov     [esp+5ch+var_34], ecx
mov     dword ptr [esp+5ch+testchar], eax
mov     [esp+5ch+codepage], ebp
call    ds:isdbcsleadbyteex
sub     esp, 8
test    eax, eax
mov     edx, [esp+5ch+var_30]
mov     ecx, [esp+5ch+var_34]
jz      short loc_632205b0
cmp     ecx, 1
jbe     loc_63220641
mov     [esp+5ch+cchwidechar], 1
mov     [esp+5ch+lpwidecharstr], ebx
mov     [esp+5ch+cbmultibyte], 2
mov     [esp+5ch+lpmultibytestr], edx
mov     dword ptr [esp+5ch+testchar], 8
mov     [esp+5ch+codepage], ebp
call    ds:multibytetowidechar
sub     esp, 18h
test    eax, eax
jz      loc_6322062c
mov     esi, 2
mov     eax, esi
mov     ebx, [esp+5ch+var_10]
mov     esi, [esp+5ch+var_c]
mov     edi, [esp+5ch+var_8]
mov     ebp, [esp+5ch+var_4]
add     esp, 5ch
retn
test    ebp, ebp
jnz     short loc_632205f2
movzx   eax, byte ptr [edx]
mov     esi, 1
mov     [ebx], ax
jmp     short loc_6322059a
mov     word ptr [ebx], 0
xor     esi, esi
jmp     short loc_6322059a
mov     byte ptr [esp+5ch+var_20+1], al
lea     eax, [esp+5ch+var_20]
mov     [esp+5ch+cchwidechar], 1
mov     [esp+5ch+lpwidecharstr], ebx
mov     [esp+5ch+cbmultibyte], 2
mov     [esp+5ch+lpmultibytestr], eax
jmp     short loc_63220579
mov     [esp+5ch+cchwidechar], 1
mov     [esp+5ch+lpwidecharstr], ebx
mov     [esp+5ch+cbmultibyte], 1
mov     [esp+5ch+lpmultibytestr], edx
mov     dword ptr [esp+5ch+testchar], 8
mov     [esp+5ch+codepage], ebp
call    ds:multibytetowidechar
sub     esp, 18h
test    eax, eax
jz      short loc_6322062c
mov     esi, 1
jmp     loc_6322059a
call    _errno
mov     esi, 0ffffffffh
mov     dword ptr [eax], 2ah
jmp     loc_6322059a
movzx   eax, byte ptr [edx]
mov     [edi], al
jmp     loc_6322059a
sub     esp, 2ch
mov     eax, [esp+2ch+arg_0]
mov     [esp+2ch+var_c], ebx
lea     ebx, [esp+2ch+var_e]
mov     [esp+2ch+var_8], esi
mov     esi, [esp+2ch+arg_c]
mov     [esp+2ch+var_4], edi
test    eax, eax
cmovnz  ebx, eax
mov     eax, ds:__mb_cur_max
mov     [esp+2ch+var_e], 0
mov     edi, [eax]
call    off_63225040
test    esi, esi
mov     edx, offset dword_6322f3b0
cmovnz  edx, esi
mov     ecx, [esp+2ch+arg_8]
mov     [esp+2ch+var_2c], edx
mov     edx, [esp+2ch+arg_4]
mov     [esp+2ch+var_24], edi
mov     [esp+2ch+var_28], eax
mov     eax, ebx
call    sub_632204d0
mov     ebx, [esp+2ch+var_c]
mov     esi, [esp+2ch+var_8]
mov     edi, [esp+2ch+var_4]
add     esp, 2ch
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 3ch
mov     eax, [esp+5ch]
mov     dword ptr [esp+14h], offset dword_6322f3b4
mov     esi, [esp+54h]
mov     edi, [esp+50h]
mov     ebp, [esp+58h]
test    eax, eax
cmovz   eax, [esp+14h]
xor     ebx, ebx
mov     [esp+14h], eax
call    off_63225040
test    esi, esi
mov     [esp+18h], eax
mov     eax, ds:__mb_cur_max
mov     eax, [eax]
mov     [esp+1ch], eax
jz      short loc_63220758
mov     edx, [esi]
test    edx, edx
jz      short loc_63220758
test    edi, edi
jz      short loc_63220762
test    ebp, ebp
jnz     short loc_63220724
jmp     short loc_63220758
mov     edx, [esi]
add     ebx, eax
add     edi, 2
add     edx, eax
cmp     ebp, ebx
mov     [esi], edx
jbe     short loc_6322074a
mov     eax, [esp+1ch]
mov     ecx, ebp
sub     ecx, ebx
mov     [esp+8], eax
mov     eax, [esp+18h]
mov     [esp+4], eax
mov     eax, [esp+14h]
mov     [esp], eax
mov     eax, edi
call    sub_632204d0
test    eax, eax
jg      short loc_63220715
test    eax, eax
jnz     short loc_63220758
cmp     ebx, ebp
jnb     short loc_63220758
mov     dword ptr [esi], 0
add     esp, 3ch
mov     eax, ebx
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
test    ebp, ebp
mov     edi, [esp+1ch]
mov     word ptr [esp+2eh], 0
jnz     short loc_6322077f
jmp     short loc_63220758
mov     edx, [esi]
add     ebx, eax
add     edx, eax
cmp     ebp, ebx
mov     [esi], edx
jbe     short loc_63220758
mov     eax, [esp+18h]
mov     ecx, edi
mov     [esp+8], edi
mov     [esp+4], eax
mov     eax, [esp+14h]
mov     [esp], eax
lea     eax, [esp+2eh]
call    sub_632204d0
test    eax, eax
jg      short loc_63220773
jmp     short loc_63220758
sub     esp, 2ch
mov     eax, ds:__mb_cur_max
mov     [esp+24h], ebx
mov     ebx, [esp+38h]
mov     [esp+28h], esi
mov     word ptr [esp+1eh], 0
mov     esi, [eax]
call    off_63225040
test    ebx, ebx
mov     edx, offset dword_6322f3b8
cmovnz  edx, ebx
mov     ecx, [esp+34h]
mov     [esp], edx
mov     edx, [esp+30h]
mov     [esp+8], esi
mov     [esp+4], eax
lea     eax, [esp+1eh]
call    sub_632204d0
mov     ebx, [esp+24h]
mov     esi, [esp+28h]
add     esp, 2ch
retn
push    ebx
xor     ebx, ebx
sub     esp, 18h
mov     ecx, [esp+1ch+arg_0]
cmp     ecx, 13h
jle     short loc_63220830
mov     eax, 4
add     eax, eax
add     ebx, 1
lea     edx, [eax+0fh]
cmp     edx, ecx
jl      short loc_63220824
mov     [esp+1ch+var_1c], ebx
call    sub_63220ce0
mov     [eax], ebx
add     esp, 18h
add     eax, 4
pop     ebx
retn
push    esi
push    ebx
sub     esp, 14h
mov     eax, [esp+1ch+arg_8]
mov     ebx, [esp+1ch+arg_0]
mov     esi, [esp+1ch+arg_4]
mov     [esp+1ch+var_1c], eax
call    sub_63220810
movzx   ecx, byte ptr [ebx]
test    cl, cl
mov     [eax], cl
mov     edx, eax
jz      short loc_63220886
add     ebx, 1
movzx   ecx, byte ptr [ebx]
add     edx, 1
add     ebx, 1
test    cl, cl
mov     [edx], cl
jnz     short loc_63220877
test    esi, esi
jz      short loc_6322088c
mov     [esi], edx
add     esp, 14h
pop     ebx
pop     esi
retn
mov     eax, [esp+arg_0]
mov     edx, 1
mov     ecx, [eax-4]
shl     edx, cl
mov     [eax], ecx
mov     [eax+4], edx
sub     eax, 4
mov     [esp+arg_0], eax
jmp     sub_63220da0
push    ebp
xor     eax, eax
push    edi
push    esi
push    ebx
sub     esp, 5ch
mov     edi, [esp+6ch+arg_4]
mov     edx, [esp+6ch+arg_0]
mov     ecx, [edi+10h]
cmp     ecx, [edx+10h]
mov     [esp+6ch+var_30], ecx
jg      loc_63220ac1
add     edx, 14h
mov     eax, ecx
mov     [esp+6ch+var_2c], edx
mov     edx, [esp+6ch+arg_0]
add     eax, 3
mov     ebp, ecx
lea     ecx, [edi+eax*4+4]
sub     ebp, 1
mov     [esp+6ch+var_40], ecx
mov     ecx, [edi+eax*4+4]
lea     ebx, [edi+14h]
mov     eax, [edx+eax*4+4]
xor     edx, edx
add     ecx, 1
div     ecx
test    eax, eax
mov     [esp+6ch+var_34], eax
mov     [esp+6ch+var_28], eax
jz      loc_63220a15
mov     ecx, [esp+6ch+var_2c]
mov     esi, ebx
mov     [esp+6ch+var_24], ebx
mov     ebx, edi
mov     [esp+6ch+var_3c], 0
mov     [esp+6ch+var_38], 0
mov     [esp+6ch+var_4c], 0
mov     [esp+6ch+var_48], 0
mov     [esp+6ch+var_20], ebp
mov     eax, [esp+6ch+var_34]
mul     dword ptr [esi]
mov     [esp+6ch+var_54], eax
mov     eax, [esp+6ch+var_3c]
add     [esp+6ch+var_54], eax
mov     edi, [esp+6ch+var_54]
mov     [esp+6ch+var_50], edx
mov     edx, [esp+6ch+var_38]
adc     [esp+6ch+var_50], edx
add     esi, 4
mov     edx, [esp+6ch+var_50]
xor     ebp, ebp
mov     eax, edx
xor     edx, edx
mov     [esp+6ch+var_3c], eax
mov     eax, [ecx]
mov     [esp+6ch+var_38], edx
xor     edx, edx
sub     eax, edi
sbb     edx, ebp
sub     eax, [esp+6ch+var_4c]
sbb     edx, [esp+6ch+var_48]
mov     [esp+6ch+var_48], 0
mov     [ecx], eax
add     ecx, 4
and     edx, 1
cmp     [esp+6ch+var_40], esi
mov     [esp+6ch+var_4c], edx
jnb     short loc_63220950
mov     ebp, [esp+6ch+var_20]
mov     edi, ebx
mov     ecx, [esp+6ch+arg_0]
mov     ebx, [esp+6ch+var_24]
lea     eax, [ebp+4]
mov     edx, [ecx+eax*4+4]
test    edx, edx
jnz     short loc_63220a15
lea     ecx, [ecx+eax*4]
cmp     [esp+6ch+var_2c], ecx
lea     esi, [ecx+4]
jnb     short loc_63220a0e
mov     edx, [esp+6ch+arg_0]
mov     eax, [edx+eax*4]
test    eax, eax
jnz     short loc_63220a0e
mov     edx, [esp+6ch+var_2c]
mov     eax, [esp+6ch+var_30]
not     edx
add     edx, ecx
sub     eax, 2
shr     edx, 2
sub     eax, edx
mov     edx, [esp+6ch+var_30]
neg     edx
lea     edx, [esi+edx*4]
jmp     short loc_63220a07
mov     ecx, [edx+ebp*4]
test    ecx, ecx
jnz     short loc_63220a0e
sub     ebp, 1
cmp     ebp, eax
jnz     short loc_63220a00
mov     ecx, [esp+6ch+arg_0]
mov     [ecx+10h], ebp
mov     ecx, [esp+6ch+arg_0]
mov     [esp+6ch+var_68], edi
mov     [esp+6ch+var_6c], ecx
call    sub_632212a0
test    eax, eax
js      loc_63220abd
mov     eax, [esp+6ch+var_34]
mov     ecx, [esp+6ch+var_2c]
mov     [esp+6ch+var_54], 0
mov     [esp+6ch+var_50], 0
add     eax, 1
mov     [esp+6ch+var_28], eax
lea     esi, [esi+0]
mov     esi, [ebx]
xor     edi, edi
add     ebx, 4
mov     eax, [ecx]
xor     edx, edx
sub     eax, esi
sbb     edx, edi
sub     eax, [esp+6ch+var_54]
sbb     edx, [esp+6ch+var_50]
mov     [esp+6ch+var_50], 0
mov     [ecx], eax
add     ecx, 4
and     edx, 1
cmp     [esp+6ch+var_40], ebx
mov     [esp+6ch+var_54], edx
jnb     short loc_63220a50
mov     ecx, [esp+6ch+arg_0]
lea     edx, [ebp+4]
mov     esi, [ecx+edx*4+4]
test    esi, esi
jnz     short loc_63220abd
lea     eax, [ecx+edx*4]
cmp     [esp+6ch+var_2c], eax
jnb     short loc_63220ab6
mov     ebx, [ecx+edx*4]
test    ebx, ebx
jnz     short loc_63220ab6
mov     edx, [esp+6ch+var_2c]
jmp     short loc_63220aac
mov     ecx, [eax]
test    ecx, ecx
jnz     short loc_63220ab6
sub     eax, 4
sub     ebp, 1
cmp     edx, eax
jb      short loc_63220aa6
mov     ecx, [esp+6ch+arg_0]
mov     [ecx+10h], ebp
mov     eax, [esp+6ch+var_28]
add     esp, 5ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     esp, 1ch
mov     eax, dword_63225034
mov     [esp+14h], ebx
mov     ebx, ds:dword_6322f3bc
mov     [esp+18h], esi
mov     esi, [esp+20h]
test    eax, eax
jnz     short loc_63220b02
mov     ds:dword_6322f3bc, esi
mov     eax, ebx
mov     esi, [esp+18h]
mov     ebx, [esp+14h]
add     esp, 1ch
retn
call    sub_6321aea0
mov     dword ptr [esp+4], offset asetoutputforma
mov     [esp], eax
call    ds:getprocaddress
sub     esp, 8
test    eax, eax
jz      short loc_63220b41
mov     [esp], esi
call    eax
mov     esi, [esp+18h]
mov     dword_63225034, 1
mov     ds:dword_6322f3bc, eax
mov     eax, ebx
mov     ebx, [esp+14h]
add     esp, 1ch
retn
mov     dword_63225034, 0
jmp     short loc_63220aee
push    ebx
sub     esp, 18h
mov     edx, dword_63225038
mov     eax, ds:dword_6322f3bc
test    edx, edx
jnz     short loc_63220b68
add     esp, 18h
pop     ebx
retn
call    sub_6321aea0
mov     [esp+1ch+lpprocname], offset agetoutputforma
mov     [esp+1ch+hmodule], eax
call    ds:getprocaddress
mov     ebx, eax
sub     esp, 8
mov     eax, ds:dword_6322f3bc
test    ebx, ebx
jz      short loc_63220b93
call    ebx
mov     ds:dword_6322f3bc, eax
xor     edx, edx
test    ebx, ebx
setnz   dl
mov     dword_63225038, edx
add     esp, 18h
pop     ebx
retn
push    esi
push    ebx
mov     ebx, eax
sub     esp, 14h
mov     eax, ds:dword_6322fd00
cmp     eax, 2
jz      short loc_63220c06
test    eax, eax
jnz     short loc_63220c2c
mov     al, 1
lock xchg eax, ds:dword_6322fd00
test    eax, eax
jnz     short loc_63220c22
mov     esi, ds:initializecriticalsection
mov     [esp+1ch+lpcriticalsection], offset stru_6322fd20
call    esi
sub     esp, 4
mov     [esp+1ch+lpcriticalsection], offset stru_6322fd38
call    esi
sub     esp, 4
mov     [esp+1ch+lpcriticalsection], offset sub_63220ca0
call    sub_6321a100
mov     ds:dword_6322fd00, 2
lea     eax, [ebx+ebx*2]
lea     eax, stru_6322fd20.debuginfo[eax*8]
mov     [esp+1ch+lpcriticalsection], eax
call    ds:entercriticalsection
sub     esp, 4
add     esp, 14h
pop     ebx
pop     esi
retn
cmp     eax, 2
jz      short loc_63220c58
mov     eax, ds:dword_6322fd00
cmp     eax, 1
jnz     short loc_63220c4d
mov     esi, ds:sleep
mov     [esp+1ch+lpcriticalsection], 1
call    esi
mov     eax, ds:dword_6322fd00
sub     esp, 4
cmp     eax, 1
jz      short loc_63220c37
cmp     eax, 2
jz      short loc_63220c06
add     esp, 14h
pop     ebx
pop     esi
retn
mov     ds:dword_6322fd00, 2
jmp     short loc_63220c06
sub     esp, 1ch
cmp     ds:dword_6322fd00, 2
jz      short loc_63220c80
add     esp, 1ch
retn
lea     eax, [eax+eax*2]
lea     eax, stru_6322fd20.debuginfo[eax*8]
mov     [esp+1ch+lpcriticalsection], eax
call    ds:leavecriticalsection
sub     esp, 4
add     esp, 1ch
retn
push    ebx
mov     eax, 3
sub     esp, 18h
lock xchg eax, ds:dword_6322fd00
cmp     eax, 2
jnz     short loc_63220cd3
mov     ebx, ds:deletecriticalsection
mov     [esp+1ch+lpcriticalsection], offset stru_6322fd20
call    ebx
sub     esp, 4
mov     [esp+1ch+lpcriticalsection], offset stru_6322fd38
call    ebx
sub     esp, 4
add     esp, 18h
pop     ebx
retn
sub     esp, 1ch
xor     eax, eax
mov     [esp+1ch+var_4], edi
mov     edi, [esp+1ch+arg_0]
mov     [esp+1ch+var_c], ebx
mov     [esp+1ch+var_8], esi
call    sub_63220bb0
cmp     edi, 9
jg      short loc_63220d15
mov     esi, ds:dword_6322f3c0[edi*4]
test    esi, esi
jz      short loc_63220d66
mov     eax, [esi]
mov     ds:dword_6322f3c0[edi*4], eax
jmp     short loc_63220d3f
mov     ebx, 1
mov     ecx, edi
shl     ebx, cl
lea     eax, ds:1bh[ebx*4]
shr     eax, 3
shl     eax, 3
mov     [esp+1ch+size], eax
call    malloc
test    eax, eax
mov     esi, eax
jz      short loc_63220d54
mov     [esi+4], edi
mov     [esi+8], ebx
xor     eax, eax
call    sub_63220c70
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+0ch], 0
mov     eax, esi
mov     ebx, [esp+1ch+var_c]
mov     esi, [esp+1ch+var_8]
mov     edi, [esp+1ch+var_4]
add     esp, 1ch
retn
mov     esi, off_6322503c
mov     ebx, 1
mov     ecx, edi
shl     ebx, cl
lea     eax, ds:1bh[ebx*4]
shr     eax, 3
mov     edx, esi
sub     edx, offset dword_6322f400
sar     edx, 3
add     edx, eax
cmp     edx, 120h
ja      short loc_63220d28
lea     eax, [esi+eax*8]
mov     off_6322503c, eax
jmp     short loc_63220d39
push    ebx
sub     esp, 8
mov     ebx, [esp+0ch+arg_0]
test    ebx, ebx
jz      short loc_63220de0
cmp     dword ptr [ebx+4], 9
jg      short loc_63220dd7
xor     eax, eax
call    sub_63220bb0
mov     eax, [ebx+4]
mov     edx, ds:dword_6322f3c0[eax*4]
mov     ds:dword_6322f3c0[eax*4], ebx
xor     eax, eax
mov     [ebx], edx
add     esp, 8
pop     ebx
jmp     sub_63220c70
add     esp, 8
pop     ebx
jmp     free
add     esp, 8
pop     ebx
retn
push    ebp
xor     ecx, ecx
push    edi
push    esi
push    ebx
sub     esp, 2ch
mov     eax, [esp+3ch+arg_0]
mov     edi, [esp+3ch+arg_8]
mov     esi, [esp+3ch+arg_0]
mov     eax, [eax+10h]
mov     ebp, edi
add     esi, 14h
sar     ebp, 1fh
mov     [esp+3ch+var_20], eax
mov     eax, [esp+3ch+arg_4]
mov     edx, eax
sar     edx, 1fh
mov     [esp+3ch+var_2c], eax
mov     [esp+3ch+var_28], edx
mov     eax, [esi+ecx*4]
mov     ebx, [esp+3ch+var_28]
imul    ebx, eax
mul     [esp+3ch+var_2c]
add     edx, ebx
add     eax, edi
adc     edx, ebp
xor     ebp, ebp
mov     [esi+ecx*4], eax
add     ecx, 1
mov     edi, edx
cmp     [esp+3ch+var_20], ecx
jg      short loc_63220e25
mov     eax, ebp
or      eax, edx
jz      short loc_63220e74
mov     eax, [esp+3ch+arg_0]
mov     edx, [esp+3ch+var_20]
cmp     edx, [eax+8]
jge     short loc_63220e80
mov     edx, [esp+3ch+var_20]
mov     eax, [esp+3ch+arg_0]
mov     [eax+edx*4+14h], edi
mov     eax, edx
mov     edx, [esp+3ch+arg_0]
add     eax, 1
mov     [edx+10h], eax
mov     eax, [esp+3ch+arg_0]
add     esp, 2ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [eax+4]
add     eax, 1
mov     [esp+3ch+var_3c], eax
call    sub_63220ce0
test    eax, eax
mov     ebx, eax
jz      short loc_63220eca
mov     edx, [esp+3ch+arg_0]
lea     ecx, [eax+0ch]
mov     eax, [edx+10h]
add     edx, 0ch
mov     [esp+3ch+src], edx
mov     [esp+3ch+var_3c], ecx
lea     eax, ds:8[eax*4]
mov     [esp+3ch+size], eax
call    memcpy
mov     eax, [esp+3ch+arg_0]
mov     [esp+3ch+var_3c], eax
call    sub_63220da0
mov     [esp+3ch+arg_0], ebx
jmp     short loc_63220e5c
mov     [esp+3ch+arg_0], 0
jmp     short loc_63220e74
sub     esp, 1ch
mov     [esp+1ch+var_1c], 1
call    sub_63220ce0
test    eax, eax
jz      short loc_63220f01
mov     edx, [esp+1ch+arg_0]
mov     dword ptr [eax+10h], 1
mov     [eax+14h], edx
add     esp, 1ch
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 4ch
mov     ebp, [esp+5ch+arg_0]
mov     edi, [esp+5ch+arg_4]
mov     ebx, [ebp+10h]
mov     esi, [edi+10h]
cmp     ebx, esi
jge     short loc_63220f35
mov     eax, ebx
mov     ebx, esi
mov     esi, eax
mov     eax, ebp
mov     ebp, edi
mov     edi, eax
lea     ecx, [ebx+esi]
xor     eax, eax
cmp     ecx, [ebp+8]
mov     [esp+5ch+var_30], ecx
setnle  al
add     eax, [ebp+4]
mov     [esp+5ch+var_5c], eax
call    sub_63220ce0
test    eax, eax
mov     [esp+5ch+var_2c], eax
jz      loc_6322104e
mov     ecx, [esp+5ch+var_30]
mov     edx, eax
add     edx, 14h
add     ecx, 4
mov     [esp+5ch+var_20], ecx
lea     ecx, [eax+ecx*4+4]
cmp     edx, ecx
mov     [esp+5ch+var_24], ecx
jnb     short loc_63220f8d
mov     eax, edx
lea     esi, [esi+0]
mov     dword ptr [eax], 0
add     eax, 4
cmp     ecx, eax
ja      short loc_63220f80
lea     ecx, [ebp+14h]
mov     [esp+5ch+var_28], ecx
lea     ecx, [edi+14h]
lea     edi, [edi+esi*4+14h]
lea     ebp, [ebp+ebx*4+14h]
cmp     ecx, edi
mov     [esp+5ch+var_3c], ebp
mov     [esp+5ch+var_40], ecx
mov     [esp+5ch+var_34], edi
jnb     short loc_63221008
mov     [esp+5ch+var_38], edx
mov     ecx, [esp+5ch+var_40]
mov     ebp, [ecx]
add     ecx, 4
mov     [esp+5ch+var_40], ecx
test    ebp, ebp
jz      short loc_63220ff9
mov     esi, [esp+5ch+var_38]
xor     eax, eax
xor     edx, edx
mov     edi, [esp+5ch+var_28]
jmp     short loc_63220fd4
mov     esi, ecx
mov     ecx, [esi]
xor     ebx, ebx
add     ecx, eax
mov     eax, [edi]
adc     ebx, edx
mul     ebp
add     ecx, eax
adc     ebx, edx
add     edi, 4
xor     edx, edx
mov     eax, ebx
cmp     [esp+5ch+var_3c], edi
mov     [esi], ecx
lea     ecx, [esi+4]
ja      short loc_63220fd2
mov     [esi+4], ebx
mov     ecx, [esp+5ch+var_40]
add     [esp+5ch+var_38], 4
cmp     [esp+5ch+var_34], ecx
ja      short loc_63220fb3
mov     esi, [esp+5ch+var_30]
test    esi, esi
jle     short loc_63221043
mov     ecx, [esp+5ch+var_20]
mov     eax, [esp+5ch+var_2c]
mov     ebx, [eax+ecx*4]
test    ebx, ebx
jnz     short loc_63221043
mov     eax, [esp+5ch+var_30]
mov     ecx, [esp+5ch+var_24]
mov     edx, [esp+5ch+var_30]
neg     eax
lea     eax, [ecx+eax*4]
jmp     short loc_6322103a
mov     ecx, [eax+edx*4-4]
test    ecx, ecx
jnz     short loc_6322103f
sub     edx, 1
jnz     short loc_63221032
mov     [esp+5ch+var_30], edx
mov     ecx, [esp+5ch+var_30]
mov     eax, [esp+5ch+var_2c]
mov     [eax+10h], ecx
mov     eax, [esp+5ch+var_2c]
add     esp, 4ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 1ch
mov     ebx, [esp+2ch+arg_4]
mov     edi, [esp+2ch+arg_0]
mov     eax, ebx
and     eax, 3
jnz     short loc_632210f0
sar     ebx, 2
test    ebx, ebx
jz      short loc_632210c5
mov     esi, ds:dword_6322fd50
test    esi, esi
jnz     short loc_6322109c
jmp     loc_6322113f
sar     ebx, 1
jz      short loc_632210c5
mov     eax, [esi]
test    eax, eax
jz      short loc_632210d0
mov     esi, eax
test    bl, 1
jz      short loc_63221090
mov     [esp+2ch+var_28], esi
mov     [esp+2ch+var_2c], edi
call    sub_63220f10
test    eax, eax
mov     ebp, eax
jz      loc_63221133
mov     [esp+2ch+var_2c], edi
mov     edi, ebp
call    sub_63220da0
sar     ebx, 1
jnz     short loc_63221094
add     esp, 1ch
mov     eax, edi
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     al, 1
call    sub_63220bb0
mov     ebp, [esi]
test    ebp, ebp
jz      short loc_63221117
mov     eax, 1
mov     esi, ebp
call    sub_63220c70
jmp     short loc_6322109c
mov     eax, ds:dword_6322e364[eax*4]
mov     [esp+2ch+var_2c], edi
mov     [esp+2ch+var_24], 0
mov     [esp+2ch+var_28], eax
call    sub_63220df0
test    eax, eax
mov     edi, eax
jnz     loc_63221076
jmp     short loc_632210c5
mov     [esp+2ch+var_28], esi
mov     [esp+2ch+var_2c], esi
call    sub_63220f10
test    eax, eax
mov     ebp, eax
mov     [esi], eax
jz      short loc_63221133
mov     dword ptr [eax], 0
jmp     short loc_632210dd
add     esp, 1ch
xor     edi, edi
pop     ebx
mov     eax, edi
pop     esi
pop     edi
pop     ebp
retn
mov     eax, 1
call    sub_63220bb0
mov     esi, ds:dword_6322fd50
test    esi, esi
jz      short loc_63221162
mov     eax, 1
call    sub_63220c70
jmp     loc_6322109c
mov     [esp+2ch+var_2c], 271h
call    sub_63220ee0
test    eax, eax
mov     esi, eax
mov     ds:dword_6322fd50, eax
jz      short loc_63221133
mov     dword ptr [eax], 0
jmp     short loc_63221153
jmp     short sub_63221190
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 3ch
mov     ebp, [esp+4ch+arg_0]
mov     edi, [esp+4ch+arg_4]
mov     eax, [ebp+10h]
mov     esi, edi
mov     edx, [ebp+4]
sar     esi, 5
add     eax, esi
mov     ebx, eax
mov     [esp+4ch+var_28], eax
mov     eax, [ebp+8]
add     ebx, 1
cmp     ebx, eax
jle     short loc_632211c9
lea     esi, [esi+0]
add     eax, eax
add     edx, 1
cmp     ebx, eax
jg      short loc_632211c0
mov     [esp+4ch+var_4c], edx
call    sub_63220ce0
test    eax, eax
mov     [esp+4ch+var_30], eax
jz      loc_6322126d
add     eax, 14h
test    esi, esi
jle     short loc_632211fc
xor     edx, edx
mov     dword ptr [eax+edx*4], 0
add     edx, 1
cmp     edx, esi
jnz     short loc_632211e6
mov     ecx, [esp+4ch+var_30]
lea     eax, [ecx+edx*4+14h]
mov     ecx, [ebp+10h]
lea     edx, [ebp+14h]
lea     ecx, [ebp+ecx*4+14h]
mov     [esp+4ch+var_2c], ecx
mov     ecx, edi
and     ecx, 1fh
jz      short loc_63221280
mov     esi, 20h
xor     edi, edi
mov     [esp+4ch+var_20], ebp
sub     esi, ecx
mov     ebp, ecx
mov     [esp+4ch+var_24], ebx
jmp     short loc_63221228
mov     eax, ebx
mov     ebx, [edx]
mov     ecx, ebp
shl     ebx, cl
mov     ecx, esi
or      ebx, edi
mov     [eax], ebx
mov     edi, [edx]
add     edx, 4
lea     ebx, [eax+4]
shr     edi, cl
cmp     [esp+4ch+var_2c], edx
ja      short loc_63221226
mov     [eax+4], edi
mov     eax, [esp+4ch+var_28]
mov     ebx, [esp+4ch+var_24]
mov     ebp, [esp+4ch+var_20]
add     eax, 2
test    edi, edi
cmovnz  ebx, eax
mov     eax, [esp+4ch+var_30]
sub     ebx, 1
mov     [eax+10h], ebx
mov     [esp+4ch+var_4c], ebp
call    sub_63220da0
mov     eax, [esp+4ch+var_30]
add     esp, 3ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     esi, [esp+4ch+var_2c]
mov     ecx, [edx]
add     edx, 4
mov     [eax], ecx
add     eax, 4
cmp     esi, edx
ja      short loc_63221284
jmp     short loc_6322125b
sub     esp, 0ch
mov     [esp+0ch+var_8], esi
mov     ecx, [esp+0ch+arg_0]
mov     esi, [esp+0ch+arg_4]
mov     [esp+0ch+var_c], ebx
mov     [esp+0ch+var_4], edi
mov     eax, [ecx+10h]
mov     edx, [esi+10h]
sub     eax, edx
jnz     short loc_632212e3
lea     edi, ds:10h[edx*4]
lea     ebx, [ecx+14h]
lea     edx, [ecx+edi+4]
lea     ecx, [esi+edi+4]
sub     ecx, 4
mov     esi, [ecx]
cmp     [edx-4], esi
jnz     short loc_632212f2
sub     edx, 4
cmp     ebx, edx
jb      short loc_632212d2
mov     ebx, [esp+0ch+var_c]
mov     esi, [esp+0ch+var_8]
mov     edi, [esp+0ch+var_4]
add     esp, 0ch
retn
sbb     eax, eax
mov     ebx, [esp+0ch+var_c]
or      eax, 1
mov     esi, [esp+0ch+var_8]
mov     edi, [esp+0ch+var_4]
add     esp, 0ch
retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 3ch
mov     esi, [esp+4ch+arg_0]
mov     ebx, [esp+4ch+arg_4]
mov     [esp+4ch+var_4c], esi
mov     [esp+4ch+var_48], ebx
call    sub_632212a0
cmp     eax, 0
jz      loc_63221443
jl      loc_63221471
xor     edi, edi
mov     eax, [esi+4]
mov     [esp+4ch+var_4c], eax
call    sub_63220ce0
test    eax, eax
mov     [esp+4ch+var_28], eax
jz      loc_63221437
mov     [eax+0ch], edi
mov     edi, [esi+10h]
lea     ecx, [esi+14h]
mov     eax, [ebx+10h]
mov     [esp+4ch+var_34], 0
mov     [esp+4ch+var_30], 0
lea     ebp, [esi+edi*4+14h]
lea     eax, [ebx+eax*4+14h]
lea     esi, [ebx+14h]
mov     ebx, [esp+4ch+var_28]
mov     [esp+4ch+var_2c], eax
mov     [esp+4ch+var_24], ebp
mov     [esp+4ch+var_20], edi
add     ebx, 14h
lea     esi, [esi+0]
mov     eax, [ecx]
xor     edx, edx
xor     ebp, ebp
mov     edi, [esi]
sub     eax, edi
sbb     edx, ebp
sub     eax, [esp+4ch+var_34]
sbb     edx, [esp+4ch+var_30]
add     ecx, 4
add     esi, 4
mov     [ebx], eax
add     ebx, 4
and     edx, 1
cmp     [esp+4ch+var_2c], esi
mov     [esp+4ch+var_34], edx
mov     edx, eax
mov     [esp+4ch+var_30], 0
ja      short loc_63221390
mov     ebp, [esp+4ch+var_24]
mov     edi, [esp+4ch+var_20]
mov     [esp+4ch+var_2c], ecx
cmp     ebp, ecx
jbe     short loc_6322141a
mov     [esp+4ch+var_24], edi
mov     esi, [esp+4ch+var_34]
mov     edi, [esp+4ch+var_30]
mov     [esp+4ch+var_20], ebx
mov     eax, [ecx]
xor     edx, edx
sub     eax, esi
sbb     edx, edi
add     ecx, 4
mov     esi, edx
xor     edi, edi
and     esi, 1
mov     edx, eax
mov     [ebx], eax
add     ebx, 4
cmp     ebp, ecx
ja      short loc_632213e6
mov     eax, [esp+4ch+var_2c]
mov     esi, [esp+4ch+var_20]
mov     edi, [esp+4ch+var_24]
not     eax
add     eax, ebp
shr     eax, 2
lea     ebx, [esi+eax*4+4]
test    edx, edx
jnz     short loc_63221430
mov     eax, edi
neg     eax
lea     eax, [ebx+eax*4]
sub     edi, 1
mov     esi, [eax+edi*4-4]
test    esi, esi
jz      short loc_63221425
mov     eax, [esp+4ch+var_28]
mov     [eax+10h], edi
mov     eax, [esp+4ch+var_28]
add     esp, 3ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     [esp+4ch+var_4c], 0
call    sub_63220ce0
test    eax, eax
mov     [esp+4ch+var_28], eax
jz      short loc_63221437
mov     dword ptr [eax+10h], 1
mov     dword ptr [eax+14h], 0
mov     eax, [esp+4ch+var_28]
add     esp, 3ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, esi
mov     edi, 1
mov     esi, ebx
mov     ebx, eax
jmp     loc_6322133c
jmp     short sub_63221490
sub     esp, 24h
mov     ecx, 20h
mov     edx, [esp+24h+arg_0]
mov     [esp+24h+var_10], ebx
mov     [esp+24h+var_c], esi
mov     [esp+24h+var_4], ebp
mov     ebx, [edx+10h]
lea     eax, [edx+14h]
mov     [esp+24h+var_8], edi
mov     [esp+24h+var_18], eax
add     ebx, 4
mov     esi, [edx+ebx*4]
lea     ebp, [edx+ebx*4]
mov     [esp+24h+var_1c], ebp
mov     edi, ebp
mov     ebp, [esp+24h+arg_4]
bsr     eax, esi
xor     eax, 1fh
sub     ecx, eax
cmp     eax, 0ah
mov     [ebp+0], ecx
jg      short loc_63221528
mov     ecx, 0bh
mov     edi, esi
mov     ebp, [esp+24h+var_1c]
sub     ecx, eax
shr     edi, cl
or      edi, 3ff00000h
mov     dword ptr [esp+24h+var_24+4], edi
xor     edi, edi
cmp     [esp+24h+var_18], ebp
mov     dword ptr [esp+24h+var_24], 0
jnb     short loc_63221507
mov     edi, [edx+ebx*4-4]
shr     edi, cl
lea     ecx, [eax+15h]
shl     esi, cl
or      edi, esi
mov     dword ptr [esp+24h+var_24], edi
fld     [esp+24h+var_24]
mov     ebx, [esp+24h+var_10]
mov     esi, [esp+24h+var_c]
mov     edi, [esp+24h+var_8]
mov     ebp, [esp+24h+var_4]
add     esp, 24h
retn
xor     ebp, ebp
cmp     [esp+24h+var_18], edi
jnb     short loc_63221537
mov     ebp, [edx+ebx*4-4]
sub     edi, 4
mov     ebx, eax
sub     ebx, 0bh
jz      short loc_63221580
mov     edx, 2bh
mov     ecx, ebx
sub     edx, eax
mov     eax, ebp
shl     esi, cl
mov     ecx, edx
shr     eax, cl
or      esi, 3ff00000h
or      esi, eax
xor     eax, eax
cmp     edi, [esp+24h+var_18]
mov     dword ptr [esp+24h+var_24], 0
mov     dword ptr [esp+24h+var_24+4], esi
jbe     short loc_6322156f
mov     eax, [edi-4]
shr     eax, cl
mov     ecx, ebx
shl     ebp, cl
or      eax, ebp
mov     dword ptr [esp+24h+var_24], eax
jmp     short loc_63221511
or      esi, 3ff00000h
mov     dword ptr [esp+24h+var_24+4], esi
mov     dword ptr [esp+24h+var_24], ebp
jmp     short loc_63221511
sub     esp, 3ch
fld     qword ptr [esp+40h]
mov     [esp+38h], ebp
fstp    qword ptr [esp+18h]
mov     ebp, [esp+48h]
mov     [esp+2ch], ebx
mov     [esp+30h], esi
mov     [esp+34h], edi
mov     dword ptr [esp], 1
call    sub_63220ce0
test    eax, eax
jz      loc_6322164b
mov     ebx, [esp+1ch]
mov     edi, [esp+18h]
mov     edx, ebx
and     ebx, 7fffffffh
and     edx, 0fffffh
mov     ecx, edx
shr     ebx, 14h
or      ecx, 100000h
test    ebx, ebx
cmovnz  edx, ecx
test    edi, edi
jz      short loc_63221660
bsf     esi, edi
mov     ecx, esi
shr     edi, cl
test    esi, esi
mov     [esp+14h], edi
jz      loc_632216a0
mov     dword ptr [esp+18h], 20h
mov     edi, edx
sub     [esp+18h], esi
movzx   ecx, byte ptr [esp+18h]
shl     edi, cl
mov     ecx, [esp+14h]
or      edi, ecx
mov     ecx, esi
mov     [eax+14h], edi
shr     edx, cl
cmp     edx, 1
mov     [eax+18h], edx
sbb     edx, edx
add     edx, 2
test    ebx, ebx
mov     [eax+10h], edx
jz      short loc_6322167b
mov     edi, [esp+4ch]
lea     edx, [esi+ebx-433h]
mov     [ebp+0], edx
mov     edx, 35h
sub     edx, esi
mov     [edi], edx
mov     ebx, [esp+2ch]
mov     esi, [esp+30h]
mov     edi, [esp+34h]
mov     ebp, [esp+38h]
add     esp, 3ch
retn
bsf     ecx, edx
shr     edx, cl
test    ebx, ebx
mov     [eax+14h], edx
lea     esi, [ecx+20h]
mov     edx, 1
mov     dword ptr [eax+10h], 1
jnz     short loc_63221634
bsr     ecx, [eax+edx*4+10h]
sub     esi, 432h
mov     edi, [esp+4ch]
shl     edx, 5
mov     [ebp+0], esi
xor     ecx, 1fh
sub     edx, ecx
mov     [edi], edx
jmp     short loc_6322164b
mov     edi, [esp+14h]
mov     [eax+14h], edi
jmp     loc_63221622
mov     edx, [esp+8]
mov     eax, [esp+4]
movzx   ecx, byte ptr [edx]
test    cl, cl
mov     [eax], cl
jz      short locret_632216d3
add     edx, 1
movzx   ecx, byte ptr [edx]
add     eax, 1
add     edx, 1
test    cl, cl
mov     [eax], cl
jnz     short loc_632216c4
rep retn
push    ebp
push    edi
push    esi
push    ebx
sub     esp, 14h
mov     edi, [esp+24h+arg_0]
mov     ecx, [esp+24h+arg_4]
mov     edx, [edi+10h]
lea     eax, [edi+14h]
mov     [esp+24h+var_20], eax
mov     eax, ecx
sar     eax, 5
cmp     eax, edx
jge     loc_63221790
add     eax, 4
and     ecx, 1fh
lea     ebp, [edi+edx*4+14h]
lea     edx, [edi+eax*4]
lea     ebx, [edx+4]
mov     [esp+24h+var_1c], ebx
mov     [esp+24h+var_24], ecx
jz      loc_632217a6
mov     ecx, [esp+24h+var_24]
add     edx, 8
mov     ebx, [edi+eax*4+4]
mov     [esp+24h+var_18], 20h
mov     eax, [esp+24h+var_20]
sub     [esp+24h+var_18], ecx
shr     ebx, cl
cmp     ebp, edx
jbe     short loc_6322177e
mov     [esp+24h+var_14], edi
mov     edi, [esp+24h+var_18]
mov     esi, eax
lea     esi, [esi+0]
mov     eax, [edx]
mov     ecx, edi
shl     eax, cl
movzx   ecx, byte ptr [esp+24h+var_24]
or      eax, ebx
mov     [esi], eax
mov     ebx, [edx]
add     edx, 4
add     esi, 4
shr     ebx, cl
cmp     ebp, edx
ja      short loc_63221750
sub     ebp, [esp+24h+var_1c]
mov     edi, [esp+24h+var_14]
lea     eax, [ebp-5]
shr     eax, 2
lea     eax, [edi+eax*4+18h]
test    ebx, ebx
mov     [eax], ebx
jz      short loc_632217cd
add     eax, 4
sub     eax, [esp+24h+var_20]
sar     eax, 2
jmp     short loc_632217d4
mov     dword ptr [edi+10h], 0
mov     dword ptr [edi+14h], 0
add     esp, 14h
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
cmp     ebp, ebx
mov     edx, [esp+24h+var_20]
mov     eax, ebx
jbe     short loc_63221790
mov     ecx, [eax]
add     eax, 4
mov     [edx], ecx
add     edx, 4
cmp     ebp, eax
ja      short loc_632217b0
mov     eax, [esp+24h+var_1c]
not     eax
add     eax, ebp
shr     eax, 2
lea     eax, [edi+eax*4+18h]
sub     eax, [esp+24h+var_20]
sar     eax, 2
test    eax, eax
mov     [edi+10h], eax
jz      short loc_63221797
add     esp, 14h
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    ebx
mov     ecx, [esp+4+arg_0]
mov     eax, [ecx+10h]
lea     edx, [ecx+14h]
lea     ebx, [ecx+eax*4+14h]
xor     eax, eax
cmp     edx, ebx
jnb     short loc_63221820
mov     ecx, [ecx+14h]
test    ecx, ecx
jz      short loc_63221816
jmp     short loc_63221822
mov     ecx, [edx]
test    ecx, ecx
jnz     short loc_63221822
add     edx, 4
add     eax, 20h
cmp     ebx, edx
ja      short loc_63221810
pop     ebx
retn
bsf     ecx, ecx
add     eax, ecx
pop     ebx
retn
mov     eax, ds:dword_6322fd60
mov     eax, [eax]
retn
sub     esp, 1ch
mov     [esp+1ch+locale], 0
mov     [esp+1ch+category], 2
call    setlocale
mov     [esp+1ch+locale], 2eh
mov     [esp+1ch+category], eax
call    strchr
mov     edx, eax
xor     eax, eax
test    edx, edx
jz      short loc_6322187a
add     edx, 1
mov     [esp+1ch+category], edx
call    atoi
add     esp, 1ch
retn
sub     esp, 1ch
mov     [esp+1ch+var_8], ebx
mov     [esp+1ch+var_4], esi
call    sub_6321aea0
test    eax, eax
mov     ebx, eax
jz      short loc_632218c2
mov     esi, ds:getprocaddress
mov     [esp+1ch+lpprocname], offset alccodepagefunc
mov     [esp+1ch+hmodule], eax
call    esi
sub     esp, 8
test    eax, eax
mov     off_63225040, eax
jz      short loc_632218e0
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
add     esp, 1ch
jmp     eax
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
mov     off_63225040, offset sub_63221840
add     esp, 1ch
jmp     sub_63221840
mov     [esp+1ch+lpprocname], offset alccodepage
mov     [esp+1ch+hmodule], ebx
call    esi
sub     esp, 8
test    eax, eax
mov     ds:dword_6322fd60, eax
jz      short loc_632218c2
mov     ebx, [esp+1ch+var_8]
mov     esi, [esp+1ch+var_4]
mov     off_63225040, offset sub_63221830
add     esp, 1ch
jmp     sub_63221830
jmp     loc_6321aa60
mov     eax, [esp+arg_4]
test    eax, eax
jz      short loc_63221a80
jmp     sub_6321a9d0
xor     eax, eax
retn
sub     esp, 3ch
mov     eax, ds:dword_6322fd64
fld     [esp+3ch+arg_8]
fld     [esp+3ch+arg_10]
fld     [esp+3ch+arg_18]
test    eax, eax
jz      short loc_63221ad1
fxch    st(2)
mov     edx, [esp+3ch+arg_0]
fstp    [esp+3ch+var_24]
fstp    [esp+3ch+var_1c]
fstp    [esp+3ch+var_14]
mov     [esp+3ch+var_2c], edx
mov     edx, [esp+3ch+arg_4]
mov     [esp+3ch+var_28], edx
lea     edx, [esp+3ch+var_2c]
mov     [esp+3ch+var_3c], edx
call    eax
jmp     short loc_63221ad7
fstp    st
fstp    st
fstp    st
add     esp, 3ch
retn
mov     eax, [esp+4]
mov     ds:dword_6322fd64, eax
jmp     loc_63221d90
sub     esp, 3ch
mov     edx, offset aunknownerror
mov     eax, [esp+40h]
mov     ecx, [eax]
sub     ecx, 1
cmp     ecx, 5
ja      short loc_63221b0d
mov     edx, ds:off_6322e4c0[ecx*4]
fld     qword ptr [eax+18h]
fstp    qword ptr [esp+20h]
fld     qword ptr [eax+10h]
fstp    qword ptr [esp+18h]
fld     qword ptr [eax+8]
fstp    qword ptr [esp+10h]
mov     eax, [eax+4]
mov     [esp+8], edx
mov     dword ptr [esp+4], offset amatherrsinsggr
mov     [esp+0ch], eax
mov     eax, ds:_iob
add     eax, 40h
mov     [esp], eax
call    sub_6321c7f0
xor     eax, eax
add     esp, 3ch
retn
sub     esp, 2ch
mov     [esp+2ch+var_4], ebp
mov     ebp, [esp+2ch+arg_c]
mov     eax, [esp+2ch+arg_0]
mov     [esp+2ch+var_10], ebx
mov     ecx, [esp+2ch+arg_8]
mov     ebx, [esp+2ch+arg_4]
test    ebp, ebp
mov     [esp+2ch+var_c], esi
mov     esi, eax
mov     [esp+2ch+var_8], edi
mov     edi, ecx
mov     [esp+2ch+var_24], eax
mov     edx, ebx
jnz     short loc_63221ba0
cmp     ecx, ebx
jbe     short loc_63221bc2
div     ecx
mov     eax, edx
xor     edx, edx
mov     ebx, [esp+2ch+var_10]
mov     esi, [esp+2ch+var_c]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
retn
cmp     ebp, ebx
ja      short loc_63221be0
bsr     eax, ebp
xor     eax, 1fh
mov     [esp+2ch+var_28], eax
jnz     short loc_63221be4
cmp     ecx, esi
ja      loc_63221c78
mov     edx, ebx
sub     esi, ecx
sbb     edx, ebp
mov     eax, esi
jmp     short loc_63221b8b
test    ecx, ecx
jnz     short loc_63221bd1
mov     eax, 1
xor     edx, edx
div     ecx
mov     ecx, eax
mov     eax, ebx
xor     edx, edx
div     ecx
mov     eax, esi
div     ecx
jmp     short loc_63221b87
mov     edx, ebx
jmp     short loc_63221b8b
movzx   ecx, byte ptr [esp+2ch+var_28]
mov     esi, 20h
mov     eax, ebp
sub     esi, [esp+2ch+var_28]
mov     ebp, edi
mov     edx, ebx
shl     eax, cl
mov     ecx, esi
shr     ebp, cl
movzx   ecx, byte ptr [esp+2ch+var_28]
or      ebp, eax
mov     eax, [esp+2ch+var_24]
shl     edi, cl
mov     ecx, esi
shr     edx, cl
movzx   ecx, byte ptr [esp+2ch+var_28]
mov     [esp+2ch+var_20], edi
shl     ebx, cl
mov     ecx, esi
shr     eax, cl
movzx   ecx, byte ptr [esp+2ch+var_28]
or      eax, ebx
mov     ebx, [esp+2ch+var_24]
div     ebp
shl     ebx, cl
mov     [esp+2ch+var_24], ebx
mov     ebx, edx
mul     edi
cmp     ebx, edx
mov     edi, eax
mov     ecx, edx
jb      short loc_63221c6c
cmp     [esp+2ch+var_24], eax
jb      short loc_63221c68
mov     eax, [esp+2ch+var_24]
sub     eax, edi
sbb     ebx, ecx
movzx   ecx, byte ptr [esp+2ch+var_28]
mov     edx, ebx
shr     eax, cl
mov     ecx, esi
shl     edx, cl
movzx   ecx, byte ptr [esp+2ch+var_28]
or      eax, edx
mov     edx, ebx
shr     edx, cl
jmp     loc_63221b8b
cmp     ebx, edx
jnz     short loc_63221c43
mov     ecx, edx
mov     edi, eax
sub     edi, [esp+2ch+var_20]
sbb     ecx, ebp
jmp     short loc_63221c43
cmp     ebp, ebx
jb      loc_63221bb8
mov     eax, esi
jmp     loc_63221b8b
sub     esp, 2ch
mov     edx, [esp+2ch+arg_c]
mov     [esp+2ch+var_c], esi
mov     ecx, [esp+2ch+arg_8]
mov     esi, [esp+2ch+arg_0]
mov     [esp+2ch+var_10], ebx
mov     ebx, [esp+2ch+arg_4]
test    edx, edx
mov     [esp+2ch+var_8], edi
mov     edi, ecx
mov     [esp+2ch+var_4], ebp
mov     [esp+2ch+var_24], esi
jnz     short loc_63221cf8
cmp     ecx, ebx
ja      short loc_63221d20
test    ecx, ecx
jnz     short loc_63221cd0
mov     eax, 1
xor     edx, edx
div     ecx
mov     ecx, eax
mov     eax, ebx
xor     edx, edx
div     ecx
mov     ebx, eax
mov     eax, esi
div     ecx
mov     ecx, ebx
mov     esi, eax
mov     eax, esi
mov     edx, ecx
mov     ebx, [esp+2ch+var_10]
mov     esi, [esp+2ch+var_c]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
retn
xor     ecx, ecx
xor     esi, esi
cmp     edx, ebx
ja      short loc_63221ce0
bsr     ebp, edx
xor     ebp, 1fh
jnz     short loc_63221d30
cmp     edi, [esp+2ch+var_24]
jbe     short loc_63221d12
cmp     edx, ebx
jnb     short loc_63221ce0
xor     ecx, ecx
mov     esi, 1
jmp     short loc_63221ce0
mov     eax, esi
mov     edx, ebx
div     ecx
xor     ecx, ecx
mov     esi, eax
jmp     short loc_63221ce0
mov     eax, 20h
mov     ecx, ebp
sub     eax, ebp
mov     esi, edi
shl     edx, cl
mov     ecx, eax
shr     esi, cl
mov     ecx, ebp
or      esi, edx
mov     edx, ebx
mov     [esp+2ch+var_20], esi
mov     esi, [esp+2ch+var_24]
shl     edi, cl
mov     ecx, eax
shr     edx, cl
mov     ecx, ebp
shl     ebx, cl
mov     ecx, eax
shr     esi, cl
or      esi, ebx
mov     eax, esi
div     [esp+2ch+var_20]
mov     ebx, edx
mov     esi, eax
mul     edi
cmp     ebx, edx
jb      short loc_63221d7f
mov     edi, [esp+2ch+var_24]
mov     ecx, ebp
shl     edi, cl
cmp     edi, eax
jnb     short loc_63221d82
cmp     ebx, edx
jnz     short loc_63221d82
sub     esi, 1
xor     ecx, ecx
jmp     loc_63221ce0
jmp     ds:__setusermatherr
sub     esp, 1ch
mov     edx, [esp+1ch+arg_4]
lea     ecx, [esp+1ch+arg_8]
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+var_14], ecx
mov     [esp+1ch+var_18], edx
mov     [esp+1ch+var_1c], eax
call    sub_6321be60
add     esp, 1ch
retn
push    ebp
xor     ecx, ecx
push    edi
mov     ebp, edx
push    esi
xor     esi, esi
push    ebx
lea     esi, [esi+0]
movzx   ebx, byte ptr [eax]
add     eax, 1
movzx   edi, bl
mov     edx, edi
and     edx, 7fh
shl     edx, cl
add     ecx, 7
or      esi, edx
test    bl, bl
js      short loc_63221de0
cmp     ecx, 1fh
ja      short loc_63221e0c
and     edi, 40h
jz      short loc_63221e0c
mov     edx, 0ffffffffh
shl     edx, cl
or      esi, edx
mov     [ebp+0], esi
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
push    esi
push    ebx
sub     esp, 14h
mov     esi, [esp+1ch+arg_0]
test    esi, esi
jz      short loc_63221e57
mov     eax, [esi]
test    eax, eax
jnz     short loc_63221e37
jmp     short loc_63221e49
mov     eax, ebx
mov     ebx, [eax+10h]
add     eax, 30h
mov     [esp+1ch+var_1c], eax
call    sub_6321b740
test    ebx, ebx
jnz     short loc_63221e35
mov     [esp+1ch+arg_0], esi
add     esp, 14h
pop     ebx
pop     esi
jmp     free
add     esp, 14h
pop     ebx
pop     esi
retn
push    ebx
sub     esp, 28h
movzx   ecx, byte ptr [eax+14h]
cmp     cl, 0ffh
movzx   ebx, cl
jz      short loc_63221ec6
mov     ecx, ebx
and     ecx, 7
cmp     ecx, 2
jz      short loc_63221ec0
jle     short loc_63221e90
cmp     ecx, 3
jz      short loc_63221e94
cmp     ecx, 4
jz      short loc_63221eb8
call    abort
test    ecx, ecx
jnz     short loc_63221e86
shl     edx, 2
neg     edx
mov     ecx, [eax+0ch]
add     ecx, edx
mov     edx, [eax+8]
lea     eax, [esp+2ch+var_10]
mov     [esp+2ch+var_2c], eax
mov     eax, ebx
call    sub_632220f0
mov     eax, [esp+2ch+var_10]
add     esp, 28h
pop     ebx
retn
shl     edx, 3
neg     edx
jmp     short loc_63221e99
add     edx, edx
neg     edx
jmp     short loc_63221e99
xor     edx, edx
jmp     short loc_63221e99
push    ebp
push    edi
mov     edi, edx
push    esi
mov     esi, eax
push    ebx
xor     eax, eax
sub     esp, 1ch
test    esi, esi
mov     ebx, ecx
jz      short loc_63221eeb
mov     [esp+2ch+var_2c], esi
call    sub_6321b410
mov     [ebx], eax
movzx   edx, byte ptr [edi]
add     edi, 1
cmp     dl, 0ffh
jz      short loc_63221f75
movzx   ebp, dl
mov     edx, esi
mov     eax, ebp
call    sub_63222030
lea     edx, [ebx+4]
mov     ecx, edi
mov     [esp+2ch+var_2c], edx
mov     edx, eax
mov     eax, ebp
call    sub_632220f0
mov     edi, eax
movzx   eax, byte ptr [edi]
add     edi, 1
cmp     al, 0ffh
mov     [ebx+14h], al
jz      short loc_63221f85
xor     esi, esi
xor     ecx, ecx
movzx   edx, byte ptr [edi]
add     edi, 1
mov     eax, edx
and     eax, 7fh
shl     eax, cl
add     ecx, 7
or      esi, eax
test    dl, dl
js      short loc_63221f28
add     esi, edi
mov     [ebx+0ch], esi
movzx   eax, byte ptr [edi]
xor     esi, esi
add     edi, 1
xor     ecx, ecx
mov     [ebx+15h], al
movzx   eax, byte ptr [edi]
add     edi, 1
mov     edx, eax
and     edx, 7fh
shl     edx, cl
add     ecx, 7
or      esi, edx
test    al, al
js      short loc_63221f50
add     esi, edi
mov     eax, edi
mov     [ebx+10h], esi
add     esp, 1ch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     [ebx+4], eax
movzx   eax, byte ptr [edi]
add     edi, 1
cmp     al, 0ffh
mov     [ebx+14h], al
jnz     short loc_63221f24
mov     dword ptr [ebx+0ch], 0
jmp     short loc_63221f43
push    ebp
mov     ebp, ecx
push    edi
push    esi
push    ebx
mov     ebx, edx
sub     esp, 3ch
mov     esi, [esp+4ch+arg_0]
mov     [esp+4ch+var_30], eax
not     esi
add     esi, [eax+0ch]
xor     edi, edi
xor     ecx, ecx
lea     esi, [esi+0]
movzx   edx, byte ptr [esi]
add     esi, 1
mov     eax, edx
and     eax, 7fh
shl     eax, cl
add     ecx, 7
or      edi, eax
test    dl, dl
js      short loc_63221fb0
test    edi, edi
jz      short loc_6322201e
mov     eax, [esp+4ch+var_30]
mov     edx, edi
call    sub_63221e60
mov     [esp+4ch+var_20], ebp
mov     [esp+4ch+var_4c], ebx
mov     edi, eax
mov     eax, [ebx]
call    dword ptr [eax+8]
test    al, al
jz      short loc_63221ff1
mov     eax, [esp+4ch+var_20]
mov     eax, [eax]
mov     [esp+4ch+var_20], eax
mov     eax, [edi]
lea     edx, [esp+4ch+var_20]
mov     [esp+4ch+var_40], 1
mov     [esp+4ch+var_44], edx
mov     [esp+4ch+var_48], ebx
mov     [esp+4ch+var_4c], edi
call    dword ptr [eax+10h]
test    al, al
jz      short loc_63221fa8
add     esp, 3ch
mov     eax, 1
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
add     esp, 3ch
xor     eax, eax
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
sub     esp, 1ch
cmp     al, 0ffh
jz      short loc_6322205b
and     eax, 70h
cmp     eax, 20h
jz      short loc_63222080
jle     short loc_63222057
cmp     eax, 40h
jz      short loc_63222068
cmp     eax, 50h
jz      short loc_6322205b
cmp     eax, 30h
xchg    ax, ax
jz      short loc_63222090
call    abort
test    eax, eax
jnz     short loc_63222061
xor     eax, eax
add     esp, 1ch
retn
cmp     eax, 10h
jnz     short loc_63222052
jmp     short loc_6322205b
mov     [esp+1ch+var_1c], edx
nop
lea     esi, [esi+0]
call    sub_6321b410
add     esp, 1ch
retn
mov     [esp+1ch+var_1c], edx
call    sub_6321b440
add     esp, 1ch
retn
mov     [esp+1ch+var_1c], edx
call    sub_6321b430
add     esp, 1ch
retn
push    ebx
sub     esp, 18h
cmp     [esp+1ch+arg_0], 1
mov     eax, [esp+1ch+arg_4]
ja      short loc_632220e5
mov     edx, 0ffffffffh
lock xadd [eax-40h], edx
cmp     edx, 1
jnz     short loc_632220e0
mov     edx, [eax-2ch]
lea     ebx, [eax+20h]
test    edx, edx
jz      short loc_632220cd
mov     [esp+1ch+var_1c], ebx
call    edx
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63223710
add     esp, 18h
pop     ebx
retn
mov     eax, [eax-24h]
mov     [esp+1ch+var_1c], eax
call    sub_63222210
sub     esp, 3ch
cmp     al, 50h
mov     [esp+3ch+var_10], ebx
mov     ebx, ecx
mov     [esp+3ch+var_c], esi
mov     esi, eax
mov     [esp+3ch+var_8], edi
mov     edi, edx
mov     [esp+3ch+var_4], ebp
jz      loc_632221e0
movzx   ebp, al
mov     eax, ebp
and     eax, 0fh
cmp     eax, 0ch
jbe     short loc_63222123
call    abort
jmp     ds:jpt_63222123[eax*4]
mov     edx, [ecx]
lea     eax, [ecx+4]
test    edx, edx
jz      short loc_63222150
and     ebp, 70h
mov     ecx, esi
cmp     ebp, 10h
cmovz   edi, ebx
add     edx, edi
test    cl, cl
jns     short loc_63222150
mov     edx, [edx]
lea     esi, [esi+0]
mov     ecx, [esp+3ch+arg_0]
mov     ebx, [esp+3ch+var_10]
mov     esi, [esp+3ch+var_c]
mov     edi, [esp+3ch+var_8]
mov     [ecx], edx
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
retn
mov     edx, [ecx]
lea     eax, [ecx+8]
jmp     short loc_63222135
xor     edx, edx
mov     eax, ecx
mov     [esp+3ch+var_34], ebp
xor     ecx, ecx
mov     ebp, ebx
mov     [esp+3ch+var_30], edi
mov     edi, edx
lea     esi, [esi+0]
movzx   ebx, byte ptr [eax]
add     eax, 1
mov     edx, ebx
and     edx, 7fh
shl     edx, cl
add     ecx, 7
or      edi, edx
test    bl, bl
js      short loc_63222190
mov     edx, edi
mov     ebx, ebp
mov     edi, [esp+3ch+var_30]
mov     ebp, [esp+3ch+var_34]
jmp     short loc_63222135
lea     edx, [esp+3ch+var_20]
mov     eax, ecx
call    sub_63221dd0
mov     edx, [esp+3ch+var_20]
jmp     loc_63222135
movsx   edx, word ptr [ecx]
lea     eax, [ecx+2]
jmp     loc_63222135
movzx   edx, word ptr [ecx]
lea     eax, [ecx+2]
jmp     loc_63222135
lea     eax, [ecx+3]
and     eax, 0fffffffch
mov     edx, [eax]
add     eax, 4
jmp     loc_63222150
xor     eax, eax
retn
xor     eax, eax
retn
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     eax, [ebp+var_8]
mov     [ebp+var_1c], eax
lea     eax, [ebp+var_3c]
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_6322426c
mov     [ebp+var_18], offset sub_6322224e
mov     [ebp+var_14], esp
mov     [esp], eax
call    sub_6321b240
mov     [ebp+var_38], 1
call    [ebp+arg_0]
call    abort
add     ebp, 8
mov     eax, [ebp-34h]
mov     [ebp-40h], eax
mov     eax, [ebp-30h]
mov     [ebp-44h], eax
mov     eax, [ebp-38h]
test    eax, eax
jz      short loc_6322226b
sub     eax, 1
jz      short loc_63222282
mov     eax, [ebp-40h]
mov     [esp+0], eax
call    sub_632232b0
mov     dword ptr [ebp-38h], 2
call    abort
mov     dword ptr [ebp-38h], 0
call    sub_63223520
cmp     dword ptr [ebp-44h], 0ffffffffh
jz      short loc_632222a6
mov     eax, [ebp-40h]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], eax
call    sub_6321b600
mov     eax, [ebp-40h]
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], eax
call    sub_63223390
sub     esp, 0ch
call    [esp+0ch+arg_0]
call    sub_63222d90
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322eac0
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322eac0
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_63222310
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322eae8
jmp     sub_63222d20
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322eb28
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322eb28
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+var_1c], ebx
call    sub_63222360
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322eb48
jmp     sub_63222310
mov     eax, offset anone
retn
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
mov     eax, offset amomo
retn
mov     eax, offset amultiatmo
retn
mov     eax, offset afnordlicht
retn
mov     eax, offset aatmo_4
retn
mov     eax, 5
retn
mov     eax, offset admx
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     dword ptr [ebx], offset off_6322eb88
mov     [esp+1ch+var_1c], ebx
call    loc_63222d00
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322eb88
jmp     loc_63222d00
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     dword ptr [ebx], offset off_6322eba0
mov     [esp+1ch+var_1c], ebx
call    loc_63222d00
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322eba0
jmp     loc_63222d00
push    ebp
mov     ebp, esp
sub     esp, 78h
lea     eax, [ebp-8]
mov     [ebp-2ch], eax
lea     eax, [ebp-4ch]
mov     dword ptr [ebp-34h], offset sub_63223ad0
mov     dword ptr [ebp-30h], offset dword_632242e4
mov     dword ptr [ebp-28h], offset loc_63222670
mov     [ebp-24h], esp
mov     [esp+7ch+buffer], eax
call    sub_6321b240
cmp     byte_63229a78, 0
jnz     loc_6322262f
mov     byte_63229a78, 1
call    sub_632234f0
test    eax, eax
jz      loc_6322268a
mov     eax, [eax+4]
cmp     byte ptr [eax], 2ah
mov     [ebp-50h], eax
mov     dword ptr [ebp-0ch], 0ffffffffh
setz    al
movzx   eax, al
add     [ebp-50h], eax
lea     eax, [ebp-0ch]
mov     [esp+7ch+stream], eax
mov     eax, [ebp-50h]
mov     [esp+7ch+elementcount], 0
mov     [esp+7ch+elementsize], 0
mov     dword ptr [ebp-48h], 0ffffffffh
mov     [esp+7ch+buffer], eax
call    sub_63219ed0
mov     [esp+7ch+elementcount], 30h
mov     [esp+7ch+elementsize], 1
mov     [esp+7ch+buffer], offset aterminatecalle
mov     [ebp-54h], eax
mov     eax, ds:_iob
add     eax, 40h
mov     [esp+7ch+stream], eax
call    fwrite
mov     eax, ds:_iob
add     eax, 40h
cmp     dword ptr [ebp-0ch], 0
mov     [esp+7ch+elementsize], eax
jz      short loc_63222622
mov     eax, [ebp-50h]
mov     dword ptr [ebp-48h], 0ffffffffh
mov     [esp+7ch+buffer], eax
call    fputs
mov     eax, ds:_iob
mov     [esp+7ch+elementcount], 2
mov     [esp+7ch+elementsize], 1
mov     [esp+7ch+buffer], offset asc_6322c8cd
add     eax, 40h
mov     [esp+7ch+stream], eax
mov     dword ptr [ebp-48h], 0ffffffffh
call    fwrite
cmp     dword ptr [ebp-0ch], 0
jz      short loc_63222663
mov     dword ptr [ebp-48h], 1
call    sub_63223a10
mov     eax, [ebp-54h]
mov     [esp+7ch+buffer], eax
call    fputs
jmp     short loc_632225e1
mov     eax, ds:_iob
mov     [esp+7ch+elementcount], 1dh
mov     [esp+7ch+elementsize], 1
mov     [esp+7ch+buffer], offset aterminatecalle_0
add     eax, 40h
mov     [esp+7ch+stream], eax
mov     dword ptr [ebp-48h], 0ffffffffh
call    fwrite
call    abort
mov     eax, [ebp-54h]
mov     [esp+7ch+buffer], eax
call    free
jmp     short loc_63222616
add     ebp, 8
mov     eax, [ebp-44h]
mov     edx, [ebp-40h]
mov     [ebp-58h], eax
mov     eax, [ebp-48h]
test    eax, eax
jz      short loc_632226dc
sub     eax, 1
jz      short loc_632226c5
mov     eax, ds:_iob
mov     [esp+7ch+elementcount], 2dh
mov     [esp+7ch+elementsize], 1
mov     [esp+7ch+buffer], offset aterminatecalle_1
add     eax, 40h
mov     [esp+7ch+stream], eax
mov     dword ptr [ebp-48h], 0ffffffffh
call    fwrite
mov     dword ptr [ebp-48h], 0ffffffffh
call    abort
call    sub_63223520
mov     eax, [ebp-58h]
mov     dword ptr [ebp-48h], 0ffffffffh
mov     [esp+7ch+buffer], eax
call    sub_6321b600
mov     eax, [ebp-58h]
sub     edx, 1
mov     [esp+7ch+buffer], eax
jz      short loc_632226fa
call    sub_632232b0
mov     dword ptr [ebp-48h], 0ffffffffh
call    sub_63223520
jmp     short loc_632226b9
call    sub_632232b0
mov     edx, [eax]
mov     [esp+7ch+buffer], eax
call    dword ptr [edx+8]
mov     [esp+7ch+elementcount], 0bh
mov     [esp+7ch+elementsize], 1
mov     [esp+7ch+buffer], offset awhat
mov     dword ptr [ebp-48h], 2
mov     [ebp-5ch], eax
mov     eax, ds:_iob
add     eax, 40h
mov     [esp+7ch+stream], eax
call    fwrite
mov     eax, ds:_iob
add     eax, 40h
mov     [esp+7ch+elementsize], eax
mov     eax, [ebp-5ch]
mov     [esp+7ch+buffer], eax
call    fputs
mov     eax, ds:_iob
mov     [esp+7ch+buffer], 0ah
add     eax, 40h
mov     [esp+7ch+elementsize], eax
call    fputc
call    sub_63223520
jmp     loc_632226b9
sub     esp, 2ch
mov     [esp+2ch+var_10], ebx
mov     ebx, [esp+2ch+arg_4]
mov     [esp+2ch+var_c], esi
mov     esi, [esp+2ch+arg_0]
mov     [esp+2ch+var_8], edi
mov     edi, [esp+2ch+arg_c]
mov     [esp+2ch+var_4], ebp
mov     ebp, [esp+2ch+arg_8]
mov     [esp+2ch+var_28], ebx
mov     [esp+2ch+var_2c], esi
call    loc_63222c40
test    al, al
jnz     short loc_632227f6
cmp     edi, 3
jbe     short loc_632227d0
mov     ebx, [esp+2ch+var_10]
mov     esi, [esp+2ch+var_c]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
retn
mov     eax, [ebx]
mov     edi, [esp+2ch+var_8]
mov     [esp+2ch+arg_8], ebp
mov     ebp, [esp+2ch+var_4]
mov     [esp+2ch+arg_4], esi
mov     esi, [esp+2ch+var_c]
mov     [esp+2ch+arg_0], ebx
mov     ebx, [esp+2ch+var_10]
mov     eax, [eax+14h]
add     esp, 2ch
jmp     eax
mov     eax, 1
jmp     short loc_632227b8
push    ebx
sub     esp, 18h
mov     eax, [esp+1ch+arg_4]
mov     ebx, [esp+1ch+arg_c]
mov     [esp+1ch+str2], eax
mov     eax, [esp+1ch+arg_0]
mov     [esp+1ch+str1], eax
call    loc_63222c40
xor     edx, edx
test    al, al
jz      short loc_6322283b
mov     eax, [esp+1ch+arg_8]
mov     edx, 1
mov     dword ptr [ebx+0ch], 8
mov     dword ptr [ebx+4], 6
mov     [ebx], eax
add     esp, 18h
mov     eax, edx
pop     ebx
retn
push    ebx
sub     esp, 28h
mov     eax, [esp+2ch+arg_0]
lea     ecx, [esp+2ch+str1]
mov     ebx, [esp+2ch+arg_8]
mov     [esp+2ch+str1], 0
mov     [esp+2ch+str2], 0
mov     edx, [eax]
mov     [esp+2ch+var_20], ecx
mov     ecx, [ebx]
mov     [esp+2ch+var_14], 10h
mov     [esp+2ch+var_10], 0
mov     [esp+2ch+var_2c], eax
mov     [esp+2ch+var_24], ecx
mov     ecx, [esp+2ch+arg_4]
mov     [esp+2ch+var_28], ecx
call    dword ptr [edx+18h]
mov     edx, [esp+2ch+str2]
xor     eax, eax
and     edx, 6
cmp     edx, 6
jnz     short loc_632228b3
mov     eax, [esp+2ch+str1]
mov     [ebx], eax
mov     eax, 1
add     esp, 28h
pop     ebx
retn
sub     esp, 2ch
mov     [esp+2ch+var_10], ebx
mov     ebx, [esp+2ch+arg_10]
cmp     ebx, [esp+2ch+arg_18]
mov     [esp+2ch+var_c], esi
mov     esi, [esp+2ch+arg_0]
mov     [esp+2ch+var_8], edi
mov     edi, [esp+2ch+arg_1c]
mov     [esp+2ch+var_4], ebp
mov     ebp, [esp+2ch+arg_8]
jz      short loc_63222920
mov     eax, [esp+2ch+arg_c]
mov     [esp+2ch+var_2c], esi
mov     [esp+2ch+var_28], eax
call    loc_63222c40
test    al, al
jz      short loc_63222909
mov     [edi], ebx
mov     [edi+4], ebp
mov     dword ptr [edi+0ch], 1
xor     eax, eax
mov     ebx, [esp+2ch+var_10]
mov     esi, [esp+2ch+var_c]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
retn
mov     eax, [esp+2ch+arg_14]
mov     [esp+2ch+var_2c], esi
mov     [esp+2ch+var_28], eax
call    loc_63222c40
test    al, al
jz      short loc_632228e9
mov     [edi+8], ebp
jmp     short loc_63222909
mov     eax, [esp+arg_8]
cmp     [esp+arg_10], eax
setz    al
movzx   eax, al
lea     eax, [eax+eax*4+1]
retn
sub     esp, 2ch
mov     [esp+2ch+var_10], ebx
mov     ebx, [esp+2ch+arg_4]
mov     [esp+2ch+var_c], esi
mov     esi, [esp+2ch+arg_8]
mov     [esp+2ch+var_8], edi
mov     edi, [esp+2ch+arg_c]
mov     [esp+2ch+var_4], ebp
mov     ebp, [esp+2ch+arg_0]
mov     [esp+2ch+var_28], ebx
mov     [esp+2ch+var_24], esi
mov     [esp+2ch+var_20], edi
mov     [esp+2ch+var_2c], ebp
call    loc_63222800
test    al, al
jz      short loc_632229b4
mov     eax, 1
mov     ebx, [esp+2ch+var_10]
mov     esi, [esp+2ch+var_c]
mov     edi, [esp+2ch+var_8]
mov     ebp, [esp+2ch+var_4]
add     esp, 2ch
retn
mov     eax, [ebp+8]
mov     ebp, [esp+2ch+var_4]
mov     edx, [eax]
mov     [esp+2ch+arg_c], edi
mov     edi, [esp+2ch+var_8]
mov     [esp+2ch+arg_8], esi
mov     esi, [esp+2ch+var_c]
mov     [esp+2ch+arg_4], ebx
mov     ebx, [esp+2ch+var_10]
mov     [esp+2ch+arg_0], eax
mov     eax, [edx+18h]
add     esp, 2ch
jmp     eax
sub     esp, 3ch
mov     edx, [esp+3ch+arg_8]
mov     ecx, [esp+3ch+arg_14]
mov     [esp+3ch+var_8], edi
mov     edi, [esp+3ch+arg_0]
mov     [esp+3ch+var_10], ebx
mov     ebx, [esp+3ch+arg_1c]
mov     [esp+3ch+var_24], edx
mov     edx, [esp+3ch+arg_c]
mov     [esp+3ch+var_20], ecx
mov     ecx, [esp+3ch+arg_18]
mov     [esp+3ch+var_c], esi
mov     esi, [esp+3ch+arg_10]
mov     [esp+3ch+var_4], ebp
mov     ebp, [esp+3ch+arg_4]
mov     [esp+3ch+var_38], edx
mov     [esp+3ch+var_28], edx
mov     [esp+3ch+var_2c], ecx
mov     [esp+3ch+var_3c], edi
call    loc_63222c40
mov     edx, [esp+3ch+var_28]
mov     ecx, [esp+3ch+var_2c]
test    al, al
jz      short loc_63222a80
mov     edx, [esp+3ch+var_24]
test    ebp, ebp
mov     [ebx], esi
mov     [ebx+4], edx
js      short loc_63222ad0
add     esi, ebp
xor     eax, eax
cmp     ecx, esi
setz    al
lea     eax, [eax+eax*4+1]
mov     [ebx+0ch], eax
xor     eax, eax
mov     ebx, [esp+3ch+var_10]
mov     esi, [esp+3ch+var_c]
mov     edi, [esp+3ch+var_8]
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
retn
cmp     esi, ecx
jz      short loc_63222ae0
mov     eax, [edi+8]
mov     edi, [eax]
mov     [esp+3ch+arg_18], ecx
mov     ecx, [esp+3ch+var_20]
mov     [esp+3ch+arg_c], edx
mov     edx, [esp+3ch+var_24]
mov     [esp+3ch+arg_1c], ebx
mov     ebx, [esp+3ch+var_10]
mov     [esp+3ch+arg_10], esi
mov     esi, [esp+3ch+var_c]
mov     [esp+3ch+arg_4], ebp
mov     ebp, [esp+3ch+var_4]
mov     [esp+3ch+arg_14], ecx
mov     [esp+3ch+arg_8], edx
mov     [esp+3ch+arg_0], eax
mov     eax, [edi+1ch]
mov     edi, [esp+3ch+var_8]
add     esp, 3ch
jmp     eax
cmp     ebp, 0fffffffeh
jnz     short loc_63222a68
mov     dword ptr [ebx+0ch], 1
jmp     short loc_63222a68
mov     eax, [esp+3ch+var_20]
mov     [esp+3ch+var_28], edx
mov     [esp+3ch+var_2c], ecx
mov     [esp+3ch+var_3c], edi
mov     [esp+3ch+var_38], eax
call    loc_63222c40
mov     edx, [esp+3ch+var_28]
mov     ecx, [esp+3ch+var_2c]
test    al, al
jz      short loc_63222a84
mov     ecx, [esp+3ch+var_24]
mov     [ebx+8], ecx
jmp     loc_63222a68
sub     esp, 3ch
mov     [esp+3ch+var_10], ebx
mov     ebx, [esp+3ch+arg_8]
mov     [esp+3ch+var_c], esi
mov     esi, [esp+3ch+arg_10]
mov     [esp+3ch+var_8], edi
mov     edx, [esp+3ch+arg_4]
mov     [esp+3ch+var_4], ebp
mov     edi, [esp+3ch+arg_c]
mov     ebp, [esp+3ch+arg_0]
cmp     esi, ebx
jz      short loc_63222b70
mov     eax, [ebp+8]
mov     ebp, [esp+3ch+var_4]
mov     ecx, [eax]
mov     [esp+3ch+arg_10], esi
mov     esi, [esp+3ch+var_c]
mov     [esp+3ch+arg_c], edi
mov     edi, [esp+3ch+var_8]
mov     [esp+3ch+arg_8], ebx
mov     ebx, [esp+3ch+var_10]
mov     [esp+3ch+arg_4], edx
mov     [esp+3ch+arg_0], eax
mov     eax, [ecx+20h]
add     esp, 3ch
jmp     eax
mov     [esp+3ch+var_20], edx
mov     [esp+3ch+var_38], edi
mov     [esp+3ch+var_3c], ebp
call    loc_63222c40
mov     edx, [esp+3ch+var_20]
test    al, al
jz      short loc_63222b3b
mov     eax, 6
mov     ebx, [esp+3ch+var_10]
mov     esi, [esp+3ch+var_c]
mov     edi, [esp+3ch+var_8]
mov     ebp, [esp+3ch+var_4]
add     esp, 3ch
retn
mov     eax, offset agnucxxconcurre
retn
mov     eax, offset agnucxxconcurre_0
retn
mov     eax, offset astdbadexceptio
retn
mov     eax, offset astdbadalloc
retn
mov     eax, offset astdexception
retn
jmp     loc_63222c40
xor     eax, eax
retn
xor     eax, eax
retn
xor     eax, eax
retn
push    ebx
mov     eax, 1
sub     esp, 18h
mov     edx, [esp+1ch+arg_0]
mov     ecx, [esp+1ch+arg_4]
cmp     ecx, edx
jz      short loc_63222c88
mov     eax, [edx+4]
movzx   ebx, byte ptr [eax]
cmp     bl, 2ah
jz      short loc_63222c90
mov     edx, [ecx+4]
xor     ecx, ecx
cmp     byte ptr [edx], 2ah
setz    cl
add     edx, ecx
xor     ecx, ecx
cmp     bl, 2ah
setz    cl
add     eax, ecx
mov     [esp+1ch+str2], edx
mov     [esp+1ch+str1], eax
call    strcmp
test    eax, eax
setz    al
add     esp, 18h
pop     ebx
retn
cmp     byte ptr [eax+1], 2ah
jnz     short loc_63222c60
add     esp, 18h
xor     eax, eax
pop     ebx
retn
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322ebe8
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322ebe8
retn
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     [esp+1ch+str1], ebx
call    loc_63222ce0
mov     [esp+1ch+arg_0], ebx
add     esp, 18h
pop     ebx
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322ebd0
jmp     loc_63222d00
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322ebe8
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322ebe8
retn
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322ec08
jmp     sub_63222db0
mov     eax, [esp+arg_0]
mov     dword ptr [eax], offset off_6322ec08
retn
sub     esp, 0ch
call    off_63229a6c
call    sub_63222d90
mov     edx, [esp+4]
mov     eax, off_63229a68
mov     off_63229a68, edx
retn
mov     edx, [esp+4]
mov     eax, off_63229a6c
mov     off_63229a6c, edx
retn
mov     edx, [esp+4]
mov     eax, dword_63229a7c
mov     dword_63229a7c, edx
retn
sub     esp, 0ch
call    sub_63223870
mov     eax, [eax+4]
test    eax, eax
setnz   al
add     esp, 0ch
retn
sub     esp, 1ch
mov     eax, off_63229a68
mov     [esp+1ch+var_1c], eax
call    sub_63222210
jmp     sub_63222db0
mov     eax, [esp+arg_0]
test    eax, eax
jz      short locret_63222dc0
jmp     free
rep retn
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     eax, [ebp+var_8]
mov     [ebp+var_1c], eax
lea     eax, [ebp+var_3c]
mov     [esp], eax
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_63224258
mov     [ebp+var_18], offset sub_63222e24
mov     [ebp+var_14], esp
call    sub_6321b240
mov     eax, [ebp+size]
mov     [ebp+var_38], 1
mov     [esp], eax
call    sub_63222e50
mov     [ebp+var_40], eax
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
mov     eax, [ebp+var_40]
leave
retn
add     ebp, 8
mov     eax, [ebp-34h]
cmp     dword ptr [ebp-30h], 0ffffffffh
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], eax
jz      short loc_63222e3f
call    sub_6321b600
call    sub_63223390
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     eax, [ebp+var_8]
mov     [ebp+var_1c], eax
lea     eax, [ebp+var_3c]
mov     [esp], eax
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_63224244
mov     [ebp+var_18], offset sub_63222ef7
mov     [ebp+var_14], esp
call    sub_6321b240
mov     eax, [ebp+size]
test    eax, eax
mov     eax, 1
cmovnz  eax, [ebp+size]
mov     [ebp+size], eax
jmp     short loc_63222ea7
mov     eax, dword_63229a7c
test    eax, eax
jz      short loc_63222ec6
mov     [ebp+var_38], 1
call    eax
mov     eax, [ebp+size]
mov     [esp], eax
call    malloc
test    eax, eax
mov     [ebp+var_40], eax
jz      short loc_63222e92
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
mov     eax, [ebp+var_40]
leave
retn
mov     dword ptr [esp], 4
call    sub_632230e0
mov     dword ptr [eax], offset off_6322ebd0
mov     dword ptr [esp+8], offset loc_63222ce0
mov     dword ptr [esp+4], offset _ztist9bad_alloc
mov     [esp], eax
mov     [ebp+var_38], 1
call    sub_63223a70
add     ebp, 8
mov     eax, [ebp-34h]
cmp     dword ptr [ebp-30h], 0ffffffffh
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], eax
jz      short loc_63222f12
call    sub_6321b600
call    sub_63223390
push    ebp
mov     ebp, esp
lea     eax, [ebp+var_8]
push    edi
sub     esp, 54h
mov     [ebp+var_1c], eax
lea     eax, [ebp+var_3c]
mov     [esp], eax
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_632242c4
mov     [ebp+var_18], offset loc_6322309c
mov     [ebp+var_14], esp
call    sub_6321b240
mov     dword ptr [esp], 50h
call    malloc
test    eax, eax
mov     [ebp+var_40], eax
jz      short loc_63222fc0
call    sub_63223870
mov     edi, [ebp+var_40]
mov     edx, 50h
add     dword ptr [eax+4], 1
test    edi, 1
jnz     loc_63223070
test    edi, 2
jnz     loc_63223087
mov     ecx, edx
xor     eax, eax
shr     ecx, 2
test    dl, 2
rep stosd
jz      short loc_63222fa2
mov     word ptr [edi], 0
add     edi, 2
and     edx, 1
jz      short loc_63222faa
mov     byte ptr [edi], 0
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
mov     eax, [ebp+var_40]
add     esp, 54h
pop     edi
pop     ebp
retn
mov     eax, dword_6322500c
test    eax, eax
jz      short loc_63222fe4
mov     dword ptr [esp], offset dword_63229a70
mov     [ebp+var_38], 1
call    sub_6321bb70
test    eax, eax
jnz     loc_63223097
mov     edx, dword_63225050
xor     ecx, ecx
mov     eax, edx
jmp     short loc_63222ffe
add     ecx, 1
shr     eax, 1
cmp     ecx, 20h
jz      loc_632230b3
test    al, 1
jnz     short loc_63222ff0
mov     eax, 1
shl     eax, cl
or      eax, edx
mov     dword_63225050, eax
lea     eax, [ecx+ecx*4]
shl     eax, 4
add     eax, offset dword_63229060
mov     [ebp+var_40], eax
mov     eax, dword_6322500c
test    eax, eax
jz      loc_63222f63
mov     dword ptr [esp], offset dword_63229a70
mov     [ebp+var_38], 2
call    sub_6321bbf0
test    eax, eax
jz      loc_63222f63
mov     dword ptr [esp], 4
call    sub_632230e0
mov     dword ptr [eax], offset off_6322eba0
mov     dword ptr [esp+8], offset sub_632224f0
mov     dword ptr [esp+4], offset _ztin9__gnu_cxx26__concurrence_unlock_errore
mov     [esp], eax
call    sub_63223a70
mov     byte ptr [edi], 0
mov     edi, [ebp+var_40]
mov     dl, 4fh
add     edi, 1
test    edi, 2
jz      loc_63222f8c
mov     word ptr [edi], 0
sub     edx, 2
add     edi, 2
jmp     loc_63222f8c
call    sub_63224120
add     ebp, 8
mov     ecx, [ebp+var_38]
mov     eax, [ebp+var_34]
mov     edx, [ebp+var_30]
test    ecx, ecx
jz      short loc_632230b8
sub     ecx, 1
jz      short loc_632230b8
call    sub_63222d90
add     edx, 1
mov     [esp], eax
mov     [ebp+var_38], 0ffffffffh
jz      short loc_632230cc
call    sub_6321b600
call    sub_63223390
push    ebp
mov     ebp, esp
lea     eax, [ebp+var_8]
push    edi
sub     esp, 54h
mov     [ebp+var_1c], eax
lea     eax, [ebp+var_3c]
mov     [esp], eax
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_632242a4
mov     [ebp+var_18], offset sub_6322327c
mov     [ebp+var_14], esp
call    sub_6321b240
mov     eax, [ebp+arg_0]
add     eax, 60h
mov     [ebp+var_44], eax
mov     [esp], eax
call    malloc
test    eax, eax
mov     [ebp+var_40], eax
jz      short loc_63223190
call    sub_63223870
mov     edi, [ebp+var_40]
mov     edx, 60h
add     dword ptr [eax+4], 1
test    edi, 1
jnz     loc_63223250
test    edi, 2
jnz     loc_63223267
mov     ecx, edx
xor     eax, eax
shr     ecx, 2
test    dl, 2
rep stosd
jz      short loc_63223167
mov     word ptr [edi], 0
add     edi, 2
and     edx, 1
jz      short loc_6322316f
mov     byte ptr [edi], 0
mov     eax, [ebp+var_40]
add     eax, 60h
mov     [ebp+var_48], eax
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
mov     eax, [ebp+var_48]
add     esp, 54h
pop     edi
pop     ebp
retn
mov     ecx, dword_6322500c
test    ecx, ecx
jz      short loc_632231b5
mov     dword ptr [esp], offset dword_63229a70
mov     [ebp+var_38], 1
call    sub_6321bb70
test    eax, eax
jnz     loc_63223277
mov     edx, dword_6322504c
xor     ecx, ecx
cmp     [ebp+var_44], 200h
mov     eax, edx
jbe     short loc_632231da
call    sub_63222d90
add     ecx, 1
shr     eax, 1
cmp     ecx, 20h
jz      short loc_632231c8
test    al, 1
jnz     short loc_632231d0
mov     eax, 1
shl     eax, cl
or      eax, edx
mov     edx, dword_6322500c
shl     ecx, 9
add     ecx, offset dword_63225060
mov     dword_6322504c, eax
test    edx, edx
mov     [ebp+var_40], ecx
jz      loc_63223128
mov     dword ptr [esp], offset dword_63229a70
mov     [ebp+var_38], 2
call    sub_6321bbf0
test    eax, eax
jz      loc_63223128
mov     dword ptr [esp], 4
call    sub_632230e0
mov     dword ptr [eax], offset off_6322eba0
mov     dword ptr [esp+8], offset sub_632224f0
mov     dword ptr [esp+4], offset _ztin9__gnu_cxx26__concurrence_unlock_errore
mov     [esp], eax
call    sub_63223a70
mov     byte ptr [edi], 0
mov     edi, [ebp+var_40]
mov     dl, 5fh
add     edi, 1
test    edi, 2
jz      loc_63223151
mov     word ptr [edi], 0
sub     edx, 2
add     edi, 2
jmp     loc_63223151
call    sub_63224120
add     ebp, 8
mov     ecx, [ebp-38h]
mov     eax, [ebp-34h]
mov     edx, [ebp-30h]
test    ecx, ecx
jz      short loc_63223293
sub     ecx, 1
jz      short loc_63223293
add     edx, 1
mov     [esp+0], eax
mov     dword ptr [ebp-38h], 0ffffffffh
jz      short loc_632232a7
call    sub_6321b600
call    sub_63223390
sub     esp, 0ch
mov     [esp+0ch+var_c], ebx
mov     ebx, [esp+0ch+arg_0]
mov     [esp+0ch+var_8], esi
mov     [esp+0ch+var_4], edi
call    sub_63223870
mov     esi, [ebx]
lea     ecx, [ebx-30h]
mov     edi, [ebx+4]
add     esi, 0bcd4d500h
adc     edi, 0b8b1aabch
mov     edx, [eax]
cmp     edi, 0
ja      short loc_632232e7
cmp     esi, 1
jbe     short loc_63223300
test    edx, edx
jnz     short loc_63223339
mov     [eax], ecx
mov     ebx, [esp+0ch+var_c]
xor     eax, eax
mov     esi, [esp+0ch+var_8]
mov     edi, [esp+0ch+var_4]
add     esp, 0ch
retn
mov     esi, [ebx-1ch]
test    esi, esi
lea     edi, [esi+1]
js      short loc_63223330
mov     [ebx-1ch], edi
sub     dword ptr [eax+4], 1
cmp     ecx, edx
jz      short loc_6322331a
mov     [ebx-20h], edx
mov     [eax], ecx
mov     eax, [ebx-8]
mov     ebx, [esp+0ch+var_c]
mov     esi, [esp+0ch+var_8]
mov     edi, [esp+0ch+var_4]
add     esp, 0ch
retn
mov     edi, 1
sub     edi, esi
jmp     short loc_6322330a
call    sub_63222d90
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
test    ebx, ebx
jz      short loc_63223380
mov     [esp+1ch+var_1c], ebx
call    sub_632232b0
mov     eax, [ebx]
mov     edx, [ebx+4]
add     eax, 0bcd4d500h
adc     edx, 0b8b1aabch
cmp     edx, 0
ja      short loc_63223380
cmp     eax, 1
ja      short loc_63223380
mov     eax, [ebx-24h]
mov     [esp+1ch+var_1c], eax
call    sub_63222210
call    sub_63222d90
push    ebp
mov     ebp, esp
sub     esp, 88h
lea     eax, [ebp+var_8]
mov     [ebp+var_3c], eax
lea     eax, [ebp+var_5c]
mov     [esp], eax
mov     [ebp+var_44], offset sub_63223ad0
mov     [ebp+var_40], offset dword_63224234
mov     [ebp+var_38], offset sub_63223403
mov     [ebp+var_34], esp
call    sub_6321b240
mov     edx, [ebp+arg_0]
mov     [esp], edx
call    sub_632232b0
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_0]
mov     eax, [eax-10h]
mov     edx, [edx-18h]
mov     [ebp+var_64], eax
mov     eax, [ebp+arg_0]
mov     [ebp+var_60], edx
mov     edx, [ebp+arg_0]
mov     eax, [eax-24h]
mov     [ebp+var_68], eax
mov     eax, [edx-0ch]
mov     [ebp+var_18], eax
mov     eax, [edx-28h]
mov     [ebp+var_58], 1
mov     [esp], eax
call    sub_632222c0
add     ebp, 8
mov     eax, [ebp-58h]
mov     edx, [ebp-54h]
test    eax, eax
mov     [ebp-70h], edx
jz      short loc_6322341a
sub     eax, 1
jz      short loc_63223471
mov     eax, [ebp-70h]
mov     [esp+0], eax
call    sub_632232b0
call    sub_63223940
mov     eax, [eax]
test    byte ptr [eax+30h], 1
lea     edx, [eax+50h]
mov     [ebp-6ch], edx
jz      short loc_6322343d
mov     eax, [eax]
mov     [ebp-6ch], eax
mov     edx, [ebp-64h]
lea     ecx, [ebp-20h]
xor     eax, eax
mov     dword ptr [ebp-58h], 2
call    sub_63221ed0
mov     eax, [ebp-6ch]
mov     ecx, [ebp-6ch]
mov     edx, [eax-50h]
mov     eax, [ebp-60h]
mov     [esp+0], eax
lea     eax, [ebp-20h]
call    sub_63221f90
test    al, al
jz      short loc_63223494
call    sub_63223a10
mov     dword ptr [ebp-58h], 0
call    sub_63223520
call    sub_63223520
mov     eax, [ebp-70h]
mov     dword ptr [ebp-58h], 0ffffffffh
mov     [esp+0], eax
call    sub_6321b600
mov     edx, [ebp-60h]
xor     ecx, ecx
lea     eax, [ebp-20h]
mov     dword ptr [ebp-58h], 2
mov     [esp+0], edx
mov     edx, offset _ztist13bad_exception
call    sub_63221f90
test    al, al
jz      short loc_632234de
mov     dword ptr [esp+0], 4
call    sub_632230e0
mov     dword ptr [eax], offset off_6322ebb8
mov     [esp+arg_4], offset loc_63222cb0
mov     [esp+arg_0], offset _ztist13bad_exception
mov     [esp+0], eax
call    sub_63223a70
mov     eax, [ebp-68h]
mov     [esp+0], eax
call    sub_63222210
sub     esp, 0ch
call    sub_63223870
mov     eax, [eax]
test    eax, eax
jz      short loc_63223517
test    byte ptr [eax+30h], 1
jnz     short loc_63223510
mov     eax, [eax]
add     esp, 0ch
retn
mov     eax, [eax]
sub     eax, 50h
jmp     short loc_63223504
xor     eax, eax
jmp     short loc_63223506
push    ebx
sub     esp, 18h
call    sub_63223940
mov     edx, [eax]
test    edx, edx
jz      short loc_63223557
mov     ecx, [edx+30h]
mov     ebx, [edx+34h]
add     ecx, 0bcd4d500h
adc     ebx, 0b8b1aabch
cmp     ebx, 0
jbe     short loc_63223560
mov     dword ptr [eax], 0
add     edx, 30h
mov     [esp+1ch+var_1c], edx
call    sub_6321b740
add     esp, 18h
pop     ebx
retn
cmp     ecx, 1
ja      short loc_63223546
mov     ecx, [edx+14h]
test    ecx, ecx
js      short loc_63223580
sub     ecx, 1
jz      short loc_63223590
cmp     ecx, 0ffffffffh
jz      short loc_632235a2
mov     [edx+14h], ecx
add     esp, 18h
pop     ebx
retn
add     ecx, 1
jnz     short loc_63223576
mov     ebx, [edx+10h]
mov     [eax], ebx
jmp     short loc_63223576
mov     ecx, [edx+10h]
add     edx, 30h
mov     [eax], ecx
mov     [esp+1ch+var_1c], edx
call    sub_6321b740
jmp     short loc_63223557
call    sub_63222d90
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     eax, [ebp+var_8]
mov     [ebp+var_1c], eax
lea     eax, [ebp+var_3c]
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_632242d4
mov     [ebp+var_18], offset loc_632236c9
mov     [ebp+var_14], esp
mov     [esp], eax
call    sub_6321b240
cmp     [ebp+block], offset dword_63229060
jb      short loc_632235f1
cmp     [ebp+block], offset dword_63229a60
jb      short loc_63223610
mov     eax, [ebp+block]
mov     [esp], eax
call    free
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
leave
retn
mov     eax, dword_6322500c
test    eax, eax
jz      loc_632236a3
mov     dword ptr [esp], offset dword_63229a70
mov     [ebp+var_38], 1
call    sub_6321bb70
test    eax, eax
jnz     loc_632236e0
mov     eax, [ebp+block]
mov     edx, 0cccccccdh
sub     eax, offset dword_63229060
mul     edx
mov     eax, 0fffffffeh
shr     edx, 6
mov     ecx, edx
rol     eax, cl
and     dword_63225050, eax
mov     eax, dword_6322500c
test    eax, eax
jz      short loc_632235fc
mov     dword ptr [esp], offset dword_63229a70
mov     [ebp+var_38], 2
call    sub_6321bbf0
test    eax, eax
jz      short loc_632235fc
mov     dword ptr [esp], 4
call    sub_632230e0
mov     dword ptr [eax], offset off_6322eba0
mov     dword ptr [esp+8], offset sub_632224f0
mov     dword ptr [esp+4], offset _ztin9__gnu_cxx26__concurrence_unlock_errore
mov     [esp], eax
call    sub_63223a70
mov     eax, [ebp+block]
mov     edx, 0cccccccdh
sub     eax, offset dword_63229060
mul     edx
mov     eax, 0fffffffeh
shr     edx, 6
mov     ecx, edx
rol     eax, cl
and     dword_63225050, eax
jmp     loc_632235fc
add     ebp, 8
mov     ecx, [ebp+var_38]
mov     eax, [ebp+var_34]
mov     edx, [ebp+var_30]
test    ecx, ecx
jz      short loc_632236ec
sub     ecx, 1
jz      short loc_632236ec
mov     [ebp+var_38], 1
call    sub_63224120
add     edx, 1
mov     [esp], eax
mov     [ebp+var_38], 0ffffffffh
jz      short loc_63223700
call    sub_6321b600
call    sub_63223390
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     eax, [ebp+var_8]
mov     [ebp+var_1c], eax
lea     eax, [ebp+var_3c]
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_632242b4
mov     [ebp+var_18], offset loc_63223815
mov     [ebp+var_14], esp
mov     [esp], eax
call    sub_6321b240
cmp     [ebp+arg_0], offset dword_63225060
jb      short loc_63223751
cmp     [ebp+arg_0], offset dword_63229060
jb      short loc_63223770
mov     eax, [ebp+arg_0]
sub     eax, 60h
mov     [esp], eax
call    free
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
leave
retn
mov     eax, dword_6322500c
test    eax, eax
jz      short loc_632237f7
mov     dword ptr [esp], offset dword_63229a70
mov     [ebp+var_38], 1
call    sub_6321bb70
test    eax, eax
jnz     loc_6322382c
mov     ecx, [ebp+arg_0]
mov     eax, 0fffffffeh
sub     ecx, offset dword_63225060
shr     ecx, 9
rol     eax, cl
and     dword_6322504c, eax
mov     eax, dword_6322500c
test    eax, eax
jz      short loc_6322375f
mov     dword ptr [esp], offset dword_63229a70
mov     [ebp+var_38], 2
call    sub_6321bbf0
test    eax, eax
jz      short loc_6322375f
mov     dword ptr [esp], 4
call    sub_632230e0
mov     dword ptr [eax], offset off_6322eba0
mov     dword ptr [esp+8], offset sub_632224f0
mov     dword ptr [esp+4], offset _ztin9__gnu_cxx26__concurrence_unlock_errore
mov     [esp], eax
call    sub_63223a70
mov     ecx, [ebp+arg_0]
mov     eax, 0fffffffeh
sub     ecx, offset dword_63225060
shr     ecx, 9
rol     eax, cl
and     dword_6322504c, eax
jmp     loc_6322375f
add     ebp, 8
mov     ecx, [ebp+var_38]
mov     eax, [ebp+var_34]
mov     edx, [ebp+var_30]
test    ecx, ecx
jz      short loc_63223838
sub     ecx, 1
jz      short loc_63223838
mov     [ebp+var_38], 1
call    sub_63224120
add     edx, 1
mov     [esp], eax
mov     [ebp+var_38], 0ffffffffh
jz      short loc_6322384c
call    sub_6321b600
call    sub_63223390
mov     eax, [esp+4]
mov     eax, [eax-8]
retn
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     eax, [ebp+var_8]
mov     [ebp+var_1c], eax
lea     eax, [ebp+var_3c]
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_63224294
mov     [ebp+var_18], offset sub_6322391d
mov     [ebp+var_14], esp
mov     [esp], eax
call    sub_6321b240
cmp     byte_63229a64, 0
mov     [ebp+var_40], offset dword_63225044
jnz     short loc_632238c0
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
mov     eax, [ebp+var_40]
leave
retn
mov     eax, dword_63229a60
mov     [ebp+var_38], 1
mov     [esp], eax
call    sub_6321baa0
test    eax, eax
mov     [ebp+var_40], eax
jnz     short loc_632238af
mov     dword ptr [esp], 8
call    malloc
test    eax, eax
mov     [ebp+var_44], eax
jz      short loc_63223903
mov     [esp+4], eax
mov     eax, dword_63229a60
mov     [esp], eax
call    sub_6321bae0
test    eax, eax
jz      short loc_63223908
call    sub_63222d90
mov     eax, [ebp+var_44]
mov     dword ptr [eax], 0
mov     dword ptr [eax+4], 0
mov     [ebp+var_40], eax
jmp     short loc_632238af
add     ebp, 8
mov     eax, [ebp-34h]
cmp     dword ptr [ebp-30h], 0ffffffffh
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], eax
jz      short loc_63223938
call    sub_6321b600
call    sub_63223390
push    ebp
mov     ebp, esp
sub     esp, 58h
lea     eax, [ebp+var_8]
mov     [ebp+var_1c], eax
lea     eax, [ebp+var_3c]
mov     [ebp+var_24], offset sub_63223ad0
mov     [ebp+var_20], offset dword_63224284
mov     [ebp+var_18], offset sub_632239b7
mov     [ebp+var_14], esp
mov     [esp], eax
call    sub_6321b240
cmp     byte_63229a64, 0
mov     [ebp+var_40], offset dword_63225044
jnz     short loc_63223990
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
mov     eax, [ebp+var_40]
leave
retn
mov     eax, dword_63229a60
mov     [ebp+var_38], 1
mov     [esp], eax
call    sub_6321baa0
mov     [ebp+var_40], eax
lea     eax, [ebp+var_3c]
mov     [esp], eax
call    sub_6321b300
mov     eax, [ebp+var_40]
leave
retn
add     ebp, 8
mov     eax, [ebp-34h]
cmp     dword ptr [ebp-30h], 0ffffffffh
mov     dword ptr [ebp-38h], 0ffffffffh
mov     [esp+0], eax
jz      short loc_632239d2
call    sub_6321b600
call    sub_63223390
sub     esp, 1ch
mov     [esp+1ch+maxcharcount], 1bh
mov     [esp+1ch+buf], offset apurevirtualmet
mov     [esp+1ch+filehandle], 2
call    _write
call    sub_63222d90
push    edi
push    esi
push    ebx
sub     esp, 10h
call    sub_63223870
mov     ebx, [eax]
add     dword ptr [eax+4], 1
test    ebx, ebx
jz      short loc_63223a55
mov     esi, [ebx+30h]
mov     edi, [ebx+34h]
add     esi, 0bcd4d500h
adc     edi, 0b8b1aabch
cmp     edi, 0
jbe     short loc_63223a5a
mov     dword ptr [eax], 0
add     ebx, 30h
mov     [esp+1ch+var_1c], ebx
call    sub_6321b690
mov     [esp+1ch+var_1c], ebx
call    sub_632232b0
call    sub_63222d90
cmp     esi, 1
ja      short loc_63223a3c
neg     dword ptr [ebx+14h]
jmp     short loc_63223a42
push    ebx
sub     esp, 18h
mov     ebx, [esp+1ch+arg_0]
mov     eax, [esp+1ch+arg_4]
mov     dword ptr [ebx-60h], 1
mov     [ebx-50h], eax
mov     eax, [esp+1ch+arg_8]
mov     [ebx-4ch], eax
mov     eax, off_63229a6c
mov     [ebx-48h], eax
mov     eax, off_63229a68
mov     dword ptr [ebx-20h], 432b2b00h
mov     dword ptr [ebx-1ch], 474e5543h
mov     dword ptr [ebx-18h], offset sub_632220a0
mov     [ebx-44h], eax
sub     ebx, 20h
mov     [esp+1ch+var_1c], ebx
call    sub_6321b450
mov     [esp+1ch+var_1c], ebx
call    sub_632232b0
call    sub_63222d90
push    ebp
mov     ebp, esp
push    edi
push    esi
push    ebx
sub     esp, 0bch
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_c]
mov     [ebp+var_64], offset sub_63223ad0
mov     [ebp+var_60], offset dword_63224224
mov     [ebp+var_98], eax
lea     eax, [ebp+var_7c]
mov     [ebp+var_94], edx
lea     edx, [ebp+var_18]
mov     [ebp+var_5c], edx
mov     [ebp+var_58], offset loc_6322406e
mov     [ebp+var_54], esp
mov     [esp], eax
call    sub_6321b240
cmp     [ebp+arg_0], 1
mov     [ebp+var_28], 0
mov     [ebp+var_88], 3
jz      short loc_63223b50
lea     eax, [ebp+var_7c]
mov     [esp], eax
call    sub_6321b300
mov     eax, [ebp+var_88]
add     esp, 0bch
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
mov     eax, [ebp+var_98]
mov     edx, [ebp+var_94]
mov     [ebp+var_8d], 1
add     eax, 0bcd4d500h
adc     edx, 0b8b1aabch
cmp     edx, 0
jbe     loc_63223dc2
cmp     [ebp+arg_4], 6
jz      loc_63223dd6
mov     edx, [ebp+arg_14]
mov     [ebp+var_78], 0ffffffffh
mov     [esp], edx
call    sub_6321b400
test    eax, eax
mov     [ebp+var_9c], eax
jz      loc_63223e38
mov     edx, eax
mov     eax, [ebp+arg_14]
lea     ecx, [ebp+var_40]
call    sub_63221ed0
mov     edx, [ebp+arg_14]
mov     [ebp+var_b4], eax
movzx   eax, [ebp+var_2c]
call    sub_63222030
mov     [ebp+var_38], eax
lea     eax, [ebp+var_28]
mov     [esp+4], eax
mov     eax, [ebp+arg_14]
mov     [esp], eax
call    sub_6321b3c0
cmp     [ebp+var_28], 1
sbb     eax, 0
cmp     eax, 0
mov     [ebp+var_80], eax
jl      loc_63223e38
jz      loc_63223e47
mov     esi, [ebp+var_b4]
xor     edi, edi
xor     ecx, ecx
movzx   edx, byte ptr [esi]
add     esi, 1
mov     eax, edx
and     eax, 7fh
shl     eax, cl
add     ecx, 7
or      edi, eax
test    dl, dl
js      short loc_63223bf8
xor     ebx, ebx
xor     ecx, ecx
movzx   edx, byte ptr [esi]
add     esi, 1
mov     eax, edx
and     eax, 7fh
shl     eax, cl
add     ecx, 7
or      ebx, eax
test    dl, dl
js      short loc_63223c12
sub     [ebp+var_80], 1
jnz     short loc_63223bf4
add     edi, 1
test    ebx, ebx
mov     [ebp+var_a8], edi
mov     [ebp+var_8c], 0
jz      short loc_63223c57
sub     ebx, 1
mov     edx, [ebp+var_30]
mov     [ebp+var_8c], ebx
add     [ebp+var_8c], edx
mov     eax, [ebp+var_a8]
mov     [ebp+var_88], 8
test    eax, eax
jz      loc_63223b2e
mov     edi, [ebp+var_8c]
mov     [ebp+var_b0], 0
test    edi, edi
jz      loc_6322405a
mov     eax, [ebp+arg_4]
mov     [ebp+var_a0], offset _ztin10__cxxabiv115__forced_unwinde
and     eax, 8
mov     [ebp+var_b8], eax
jnz     short loc_63223ce4
cmp     [ebp+var_8d], 0
mov     [ebp+var_b0], eax
mov     [ebp+var_a0], offset _ztin10__cxxabiv119__foreign_exceptione
jnz     short loc_63223ce4
mov     edx, [ebp+arg_10]
mov     eax, [ebp+arg_10]
add     edx, 20h
test    byte ptr [eax], 1
mov     [ebp+var_b0], edx
jz      short loc_63223cd5
mov     edx, [eax-30h]
mov     [ebp+var_b0], edx
mov     eax, [ebp+var_b0]
mov     eax, [eax-50h]
mov     [ebp+var_a0], eax
mov     [ebp+var_8e], 0
nop
lea     esi, [esi+0]
mov     eax, [ebp+var_8c]
lea     edx, [ebp+var_24]
call    sub_63221dd0
lea     edx, [ebp+var_20]
mov     [ebp+var_84], eax
call    sub_63221dd0
mov     edx, [ebp+var_24]
cmp     edx, 0
jz      loc_63223f70
jle     loc_63223f93
lea     eax, [ebp+var_40]
mov     [ebp+var_78], 0ffffffffh
call    sub_63221e60
test    eax, eax
mov     [ebp+var_a4], eax
jz      short loc_63223daf
mov     esi, [ebp+var_a0]
test    esi, esi
jz      loc_63223f77
mov     edx, [ebp+var_b0]
mov     [ebp+var_1c], edx
mov     edx, [ebp+var_a0]
mov     eax, [edx]
mov     [esp], edx
call    dword ptr [eax+8]
test    al, al
jz      short loc_63223d68
mov     eax, [ebp+var_1c]
mov     eax, [eax]
mov     [ebp+var_1c], eax
mov     edx, [ebp+var_a4]
mov     eax, [edx]
lea     edx, [ebp+var_1c]
mov     [esp+8], edx
mov     edx, [ebp+var_a0]
mov     dword ptr [esp+0ch], 1
mov     [esp+4], edx
mov     edx, [ebp+var_a4]
mov     [esp], edx
mov     eax, [eax+10h]
mov     [ebp+var_78], 0ffffffffh
call    eax
test    al, al
jz      loc_63223f77
mov     eax, [ebp+var_1c]
mov     [ebp+var_b0], eax
mov     edx, [ebp+var_24]
mov     eax, 3
mov     [ebp+var_ac], edx
jmp     loc_63223e74
cmp     eax, 1
setnbe  [ebp+var_8d]
cmp     [ebp+arg_4], 6
jnz     loc_63223b81
cmp     [ebp+var_8d], 0
jnz     loc_63223b81
mov     eax, [ebp+arg_10]
mov     edx, [ebp+arg_10]
mov     eax, [eax-18h]
mov     edx, [edx-10h]
mov     [ebp+var_ac], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_9c], edx
mov     eax, [eax-0ch]
test    eax, eax
mov     [ebp+var_a8], eax
jnz     loc_63223f60
mov     eax, [ebp+arg_10]
mov     [esp], eax
call    sub_63223340
cmp     [ebp+var_8e], 0
mov     eax, 2
mov     [ebp+var_ac], 0
jnz     short loc_63223e74
mov     [ebp+var_88], 8
jmp     loc_63223b2e
mov     [ebp+var_b0], 0
mov     eax, 1
mov     [ebp+var_ac], 0
mov     [ebp+var_a8], 0
mov     [ebp+var_8c], 0
test    byte ptr [ebp+arg_4], 1
jnz     loc_63223f01
test    byte ptr [ebp+arg_4], 8
jz      loc_63223fe4
cmp     eax, 1
jz      loc_6322407c
mov     edx, [ebp+var_ac]
test    edx, edx
js      loc_63224081
mov     eax, [ebp+arg_10]
mov     edx, [ebp+arg_14]
mov     dword ptr [esp+4], 0
mov     [ebp+var_78], 0ffffffffh
mov     [esp+8], eax
mov     [esp], edx
call    sub_6321b390
mov     eax, [ebp+var_ac]
mov     edx, [ebp+arg_14]
mov     dword ptr [esp+4], 1
mov     [esp+8], eax
mov     [esp], edx
call    sub_6321b390
mov     eax, [ebp+var_a8]
mov     edx, [ebp+arg_14]
mov     [esp+4], eax
mov     [esp], edx
call    sub_6321b3e0
mov     [ebp+var_88], 7
jmp     loc_63223b2e
cmp     eax, 2
mov     [ebp+var_88], 8
jz      loc_63223b2e
cmp     [ebp+var_8d], 0
mov     [ebp+var_88], 6
jnz     loc_63223b2e
mov     eax, [ebp+arg_10]
mov     edx, [ebp+var_ac]
mov     [eax-18h], edx
mov     edx, [ebp+var_8c]
mov     [eax-14h], edx
mov     edx, [ebp+var_9c]
mov     [eax-10h], edx
mov     edx, [ebp+var_b0]
mov     [eax-8], edx
mov     edx, [ebp+var_a8]
mov     [eax-0ch], edx
jmp     loc_63223b2e
mov     eax, 3
jmp     loc_63223e7e
mov     [ebp+var_8e], 1
mov     eax, [ebp+var_20]
test    eax, eax
jz      loc_63223e20
add     eax, [ebp+var_84]
mov     [ebp+var_8c], eax
jmp     loc_63223cf0
mov     ebx, [ebp+var_a0]
test    ebx, ebx
jz      short loc_63223fb4
mov     ecx, [ebp+var_b8]
test    ecx, ecx
jnz     short loc_63223fb4
cmp     [ebp+var_8d], 0
jz      loc_63224037
not     edx
xor     esi, esi
add     edx, [ebp+var_34]
xor     ecx, ecx
lea     esi, [esi+0]
movzx   ebx, byte ptr [edx]
add     edx, 1
mov     eax, ebx
and     eax, 7fh
shl     eax, cl
add     ecx, 7
or      esi, eax
test    bl, bl
js      short loc_63223fc0
test    esi, esi
setz    al
test    al, al
jz      short loc_63223f77
jmp     loc_63223daf
cmp     [ebp+var_8d], 0
jnz     loc_63223e88
sub     eax, 1
jz      loc_63223e0f
mov     eax, [ebp+var_ac]
test    eax, eax
jns     loc_63223e9f
mov     edx, [ebp+var_9c]
lea     ecx, [ebp+var_40]
mov     eax, [ebp+arg_14]
mov     [ebp+var_78], 0ffffffffh
call    sub_63221ed0
mov     edx, [ebp+arg_14]
movzx   eax, [ebp+var_2c]
call    sub_63222030
mov     edx, [ebp+arg_10]
mov     [edx-0ch], eax
jmp     loc_63223e9f
mov     [esp], edx
mov     ecx, [ebp+var_b0]
lea     eax, [ebp+var_40]
mov     edx, [ebp+var_a0]
mov     [ebp+var_78], 0ffffffffh
call    sub_63221f90
xor     eax, 1
jmp     short loc_63223fdb
mov     [ebp+var_ac], 0
mov     eax, 2
jmp     loc_63223e74
add     ebp, 18h
mov     eax, [ebp+var_74]
mov     [esp], eax
call    sub_632232b0
call    sub_63222d90
mov     [ebp+var_78], 1
call    sub_63222d30
sub     esp, 1ch
cmp     byte_63229a64, 0
jnz     short loc_632240a7
mov     byte_63229a64, 0
add     esp, 1ch
retn
mov     eax, dword_63229a60
mov     [esp+1ch+var_1c], eax
call    sub_6321ba70
mov     byte_63229a64, 0
add     esp, 1ch
retn
sub     esp, 1ch
mov     eax, dword_6322500c
test    eax, eax
jz      short loc_632240d8
mov     [esp+1ch+var_1c], offset dword_63229a70
call    sub_6321bb50
add     esp, 1ch
retn
sub     esp, 1ch
mov     eax, dword_6322500c
mov     byte_63229a64, 0
test    eax, eax
jz      short loc_63224110
mov     [esp+1ch+var_18], offset sub_63221e20
mov     [esp+1ch+var_1c], offset dword_63229a60
call    sub_6321ba20
test    eax, eax
setz    byte_63229a64
mov     [esp+1ch+var_1c], offset sub_63224090
call    sub_6321a100
add     esp, 1ch
retn
sub     esp, 1ch
mov     [esp+1ch+var_1c], 4
call    sub_632230e0
mov     dword ptr [eax], offset off_6322eb88
mov     [esp+1ch+var_14], offset sub_632224b0
mov     [esp+1ch+var_18], offset _ztin9__gnu_cxx24__concurrence_lock_errore
mov     [esp+1ch+var_1c], eax
call    sub_63223a70
sub     esp, 1ch
mov     edx, dword_6322500c
test    edx, edx
jz      short loc_63224169
mov     [esp+1ch+var_1c], offset dword_63229a70
call    sub_6321bb10
mov     [esp+1ch+var_1c], offset sub_632240c0
call    sub_6321a100
add     esp, 1ch
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
call    sub_63201460
mov     dword ptr [esp], offset sub_632014b0
call    sub_6321a100
leave
retn