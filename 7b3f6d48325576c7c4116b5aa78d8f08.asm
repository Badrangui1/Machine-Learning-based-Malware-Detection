mov     ecx, offset dword_40916c
call    sub_4045c0
push    offset sub_405755
call    _atexit
pop     ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 854h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
mov     [ebp+var_850], eax
mov     eax, [ebp+arg_4]
mov     [ebp+lpstring1], edx
mov     [ebp+var_854], eax
test    esi, esi
jz      loc_401317
xor     eax, eax
cmp     ax, [esi]
jz      loc_401317
push    ebx
push    20ah
xor     ebx, ebx
lea     eax, [ebp+subblock]
push    ebx
push    eax
call    memset
push    20ah
lea     eax, [ebp+string1]
mov     [ebp+lpstring2], ebx
push    ebx
push    eax
mov     [ebp+var_838], ebx
mov     [ebp+pulen], ebx
mov     [ebp+lpbuffer], ebx
call    memset
push    20ah
lea     eax, [ebp+string2]
push    ebx
push    eax
call    memset
push    20ah
lea     eax, [ebp+var_834]
push    ebx
push    eax
call    memset
add     esp, 30h
push    ebx
push    esi
call    ds:getfileversioninfosizew
mov     [ebp+dwlen], eax
test    eax, eax
jnz     short loc_4010e9
pop     ebx
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    edi
push    offset dword_4091a8
push    eax
call    ??_u@yapaxiabunothrow_t@std@@@z
mov     edi, eax
add     esp, 8
test    edi, edi
jz      loc_401304
push    edi
push    [ebp+dwlen]
push    0
push    esi
call    ds:getfileversioninfow
test    eax, eax
jz      loc_4012fb
mov     esi, ds:verqueryvaluew
lea     eax, [ebp+pulen]
push    eax
lea     eax, [ebp+lpbuffer]
push    eax
push    offset subblock
push    edi
call    esi
test    eax, eax
jz      loc_4012fb
push    20ah
lea     eax, [ebp+subblock]
push    0
push    eax
call    memset
mov     ecx, [ebp+lpbuffer]
movzx   eax, word ptr [ecx+2]
push    eax
movzx   eax, word ptr [ecx]
push    eax
push    offset format
push    0ffffffffh
lea     eax, [ebp+subblock]
push    104h
push    eax
call    sub_401580
add     esp, 24h
lea     eax, [ebp+var_838]
push    eax
lea     eax, [ebp+lpstring2]
push    eax
lea     eax, [ebp+subblock]
push    eax
push    edi
call    esi
mov     esi, ds:lstrcpynw
test    eax, eax
jz      short loc_4011b9
cmp     [ebp+var_838], ebx
jbe     short loc_4011b9
push    104h
push    [ebp+lpstring2]
lea     eax, [ebp+string1]
push    eax
call    esi
push    20ah
lea     eax, [ebp+subblock]
push    0
push    eax
call    memset
mov     ecx, [ebp+lpbuffer]
movzx   eax, word ptr [ecx+2]
push    eax
movzx   eax, word ptr [ecx]
push    eax
push    offset astringfileinfo_0
push    0ffffffffh
lea     eax, [ebp+subblock]
push    104h
push    eax
call    sub_401580
mov     ebx, ds:verqueryvaluew
lea     eax, [ebp+var_838]
add     esp, 24h
push    eax
lea     eax, [ebp+lpstring2]
push    eax
lea     eax, [ebp+subblock]
push    eax
push    edi
call    ebx
test    eax, eax
jz      short loc_401235
cmp     [ebp+var_838], 0
jbe     short loc_401235
push    104h
push    [ebp+lpstring2]
lea     eax, [ebp+string2]
push    eax
call    esi
push    20ah
lea     eax, [ebp+subblock]
push    0
push    eax
call    memset
mov     ecx, [ebp+lpbuffer]
movzx   eax, word ptr [ecx+2]
push    eax
movzx   eax, word ptr [ecx]
push    eax
push    offset astringfileinfo_1
push    0ffffffffh
lea     eax, [ebp+subblock]
push    104h
push    eax
call    sub_401580
add     esp, 24h
lea     eax, [ebp+var_838]
push    eax
lea     eax, [ebp+lpstring2]
push    eax
lea     eax, [ebp+subblock]
push    eax
push    edi
call    ebx
test    eax, eax
jz      short loc_4012ab
cmp     [ebp+var_838], 0
jbe     short loc_4012ab
push    104h
push    [ebp+lpstring2]
lea     eax, [ebp+var_834]
push    eax
call    esi
mov     eax, [ebp+lpstring1]
test    eax, eax
jz      short loc_4012c4
push    104h
lea     ecx, [ebp+string1]
push    ecx
push    eax
call    esi
mov     eax, [ebp+var_850]
test    eax, eax
jz      short loc_4012dd
push    104h
lea     ecx, [ebp+string2]
push    ecx
push    eax
call    esi
mov     eax, [ebp+var_854]
test    eax, eax
jz      short loc_4012f6
push    104h
lea     ecx, [ebp+var_834]
push    ecx
push    eax
call    esi
mov     ebx, 1
push    edi
call    j_j_free
add     esp, 4
pop     edi
mov     eax, ebx
pop     ebx
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
xor     eax, eax
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_4], edx
test    esi, esi
jz      loc_4013d8
xor     eax, eax
cmp     ax, [esi]
jz      loc_4013d8
push    ebx
push    edi
mov     edi, ds:wcschr
push    2eh
push    esi
call    edi
mov     ebx, eax
add     esp, 8
xor     eax, eax
test    ebx, ebx
jz      short loc_4013a9
push    esi
mov     [ebx], ax
call    ds:_wtol
mov     ecx, [ebp+var_4]
add     esp, 4
mov     [ecx], ax
add     ebx, 2
jz      short loc_4013a7
push    2eh
push    ebx
call    edi
mov     esi, eax
add     esp, 8
xor     eax, eax
test    esi, esi
jz      short loc_4013a9
push    ebx
mov     ebx, ds:_wtol
mov     [esi], ax
call    ebx
mov     ecx, [ebp+arg_0]
add     esp, 4
mov     [ecx], ax
add     esi, 2
jnz     short loc_4013b0
xor     eax, eax
pop     edi
pop     ebx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    2eh
push    esi
call    edi
add     esp, 8
test    eax, eax
jz      short loc_4013c1
xor     ecx, ecx
mov     [eax], cx
push    esi
call    ebx
mov     ecx, [ebp+arg_4]
add     esp, 4
pop     edi
pop     ebx
mov     [ecx], eax
mov     eax, 1
pop     esi
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 840h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
push    20ah
lea     eax, [ebp+filename]
push    0
push    eax
call    memset
add     esp, 0ch
lea     eax, [ebp+filename]
push    104h
push    eax
push    0
call    ds:getmodulefilenamew
push    20ah
lea     eax, [ebp+string]
push    0
push    eax
call    memset
push    20ah
lea     eax, [ebp+var_628]
push    0
push    eax
call    memset
push    20ah
lea     eax, [ebp+var_834]
push    0
push    eax
call    memset
lea     eax, [ebp+var_834]
push    eax
lea     eax, [ebp+string]
push    eax
lea     edx, [ebp+var_628]
lea     ecx, [ebp+filename]
call    sub_401020
add     esp, 2ch
xor     esi, esi
xor     ecx, ecx
xor     edx, edx
cmp     si, [ebp+string]
mov     eax, 1
mov     [ebp+var_840], eax
mov     [ebp+var_83c], ecx
mov     [ebp+var_838], edx
pop     esi
jz      short loc_4014e3
lea     eax, [ebp+var_838]
push    eax
lea     eax, [ebp+var_83c]
push    eax
lea     edx, [ebp+var_840]
lea     ecx, [ebp+string]
call    sub_401330
add     esp, 8
test    eax, eax
jnz     short loc_4014d1
xor     ecx, ecx
mov     eax, 1
xor     edx, edx
jmp     short loc_4014e3
mov     edx, [ebp+var_838]
mov     ecx, [ebp+var_83c]
mov     eax, [ebp+var_840]
push    0ffffffffh
push    0
push    804h
push    1
push    1
push    edx
push    ecx
push    eax
call    ds:getcommandlinew
push    eax
lea     eax, [ebp+filename]
push    eax
lea     eax, [ebp+var_628]
push    eax
push    offset aqqpcmgr
call    ds:?initbugreport@txbugreport@@yaxpb_w000ggkhhkkp6ghpautagbugreportinfo@1@pbd200papaxpakpax@z@z
add     esp, 30h
call    ds:?validatebugreport@txbugreport@@yaxxz
mov     ecx, [ebp+var_4]
mov     eax, 1
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, offset dword_409508
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    [ebp+arglist]
push    [ebp+locale]
push    [ebp+format]
push    [ebp+maxcount]
push    edx
push    ecx
call    sub_401530
push    dword ptr [eax+4]
push    dword ptr [eax]
call    ds:__stdio_common_vsnwprintf_s
or      ecx, 0ffffffffh
add     esp, 20h
test    eax, eax
cmovs   eax, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+buffercount]
lea     eax, [ebp+arglist]
mov     ecx, [ebp+buffer]
push    eax
push    0
push    [ebp+format]
push    [ebp+maxcount]
call    sub_401540
add     esp, 10h
pop     ebp
retn
push    0
push    ecx
call    ds:initializecriticalsectionandspincount
test    eax, eax
jnz     short loc_4015c0
call    ds:getlasterror
test    eax, eax
jle     short locret_4015c2
movzx   eax, ax
or      eax, 80070000h
retn
xor     eax, eax
retn
mov     dword ptr [ecx], offset ??_7iqmnetworkmgr@network@@6b@
retn
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7iqmnetworkmgr@network@@6b@
jz      short loc_4015fd
push    4
push    esi
call    sub_404691
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 218h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
push    20ah
lea     eax, [ebp+filename]
mov     [ebp+var_218], 0
mov     esi, ecx
push    0
push    eax
mov     [ebp+var_214], esi
call    memset
add     esp, 0ch
lea     eax, [ebp+filename]
push    104h
push    eax
push    0
call    ds:getmodulefilenamew
test    eax, eax
jnz     short loc_401679
push    eax
mov     dword ptr [esi+14h], 7
mov     [esi+10h], eax
mov     [esi], ax
push    offset dword_406474
jmp     short loc_4016d7
lea     eax, [ebp+filename]
push    5ch
push    eax
call    ds:wcsrchr
add     esp, 8
test    eax, eax
jz      short loc_401694
xor     ecx, ecx
mov     [eax], cx
xor     eax, eax
mov     dword ptr [esi+14h], 7
mov     dword ptr [esi+10h], 0
mov     [esi], ax
cmp     [ebp+filename], ax
jnz     short loc_4016b4
xor     ecx, ecx
jmp     short loc_4016cf
lea     ecx, [ebp+filename]
lea     edx, [ecx+2]
nop     dword ptr [eax]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_4016c0
sub     ecx, edx
sar     ecx, 1
push    ecx
lea     eax, [ebp+filename]
push    eax
mov     ecx, esi
call    sub_402330
mov     ecx, [ebp+var_4]
mov     eax, esi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 210h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
push    20ah
lea     eax, [ebp+src]
mov     esi, ecx
push    0
push    eax
call    memset
mov     eax, dword_409784
add     esp, 0ch
test    eax, eax
jnz     short loc_40173b
push    offset aqmgetinstalldi
call    sub_402e20
add     esp, 4
mov     dword_409784, eax
test    eax, eax
jz      short loc_401796
push    104h
lea     ecx, [ebp+src]
push    ecx
call    eax
test    eax, eax
jz      short loc_401796
cmp     [ebp+src], 0
jnz     short loc_40175b
xor     ecx, ecx
jmp     short loc_401773
lea     ecx, [ebp+src]
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_401764
sub     ecx, edx
sar     ecx, 1
push    ecx
lea     eax, [ebp+src]
mov     ecx, esi
push    eax
call    sub_402330
mov     eax, 1
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
xor     eax, eax
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_4017b0
mov     eax, large fs:0
push    eax
sub     esp, 268h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+src], esi
mov     [ebp+var_274], esi
mov     [ebp+var_4], 0
lea     ecx, [ebp+lpfilename]
mov     dword ptr [esi+4], offset ??_7iqmnetworkmgr2@network@@6b@
xor     edi, edi
mov     dword ptr [esi], offset ??_7cqmnetworkmgr@network@@6b@
mov     dword ptr [esi+4], offset ??_7cqmnetworkmgr@network@@6b@_0
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi+10h], 0
mov     [ebp+var_270], edi
call    sub_401610
mov     byte ptr [ebp+var_4], 1
mov     ecx, [ebp+var_224]
test    ecx, ecx
jz      loc_40191c
cmp     [ebp+var_220], 8
lea     eax, [ebp+lpfilename]
cmovnb  eax, [ebp+lpfilename]
cmp     word ptr [eax+ecx*2-2], 5ch
jz      short loc_401871
sub     esp, 8
lea     ecx, [ebp+lpfilename]
call    sub_402550
push    10h
push    offset aqmnetworkmgrdl
lea     ecx, [ebp+lpfilename]
call    sub_402840
cmp     [ebp+var_220], 8
lea     eax, [ebp+lpfilename]
cmovnb  eax, [ebp+lpfilename]
push    eax
call    ds:getfileattributesw
cmp     eax, 0ffffffffh
jz      short loc_40191c
cmp     [ebp+var_220], 8
lea     eax, [ebp+lpfilename]
mov     edi, 1
cmovnb  eax, [ebp+lpfilename]
push    eax
mov     [ebp+var_270], edi
call    ds:loadlibraryw
mov     [esi+10h], eax
test    eax, eax
jnz     short loc_40191c
call    ds:getlasterror
push    2
mov     [ebp+src], eax
call    sub_402070
mov     ecx, eax
call    sub_403a10
test    eax, eax
jz      short loc_40191c
mov     eax, [ebp+src]
push    eax
push    offset aloadqmnetworkm
push    offset anetworkcqmnetw
push    2ch
push    offset aqmnetworkmgrcp
push    eax
push    2
push    offset dword_40977c
call    sub_402070
push    eax
call    sub_403ab0
add     esp, 24h
mov     byte ptr [ebp+var_4], 0
mov     eax, [ebp+var_220]
cmp     eax, 8
jb      short loc_401938
inc     eax
push    eax
push    [ebp+lpfilename]
call    sub_402670
cmp     dword ptr [esi+10h], 0
jnz     loc_401cd0
push    1ch
lea     eax, [ebp+buffer]
mov     [ebp+buffer.baseaddress], 0
xorps   xmm0, xmm0
push    eax
push    offset sub_402000
movups  xmmword ptr [ebp+buffer.allocationbase], xmm0
movq    qword ptr [ebp+buffer.protect], xmm0
call    ds:virtualquery
test    eax, eax
jz      loc_401a96
push    20ah
lea     eax, [ebp+filename]
push    0
push    eax
call    memset
add     esp, 0ch
lea     eax, [ebp+filename]
push    104h
push    eax
push    [ebp+buffer.allocationbase]
call    ds:getmodulefilenamew
lea     eax, [ebp+filename]
push    5ch
push    eax
call    ds:wcsrchr
add     esp, 8
test    eax, eax
jz      loc_401a96
xor     ecx, ecx
mov     [eax+2], cx
lea     eax, [ebp+filename]
push    eax
lea     ecx, [ebp+lpfilename]
call    sub_4022c0
push    10h
push    offset aqmnetworkmgrdl
lea     ecx, [ebp+lpfilename]
mov     byte ptr [ebp+var_4], 2
call    sub_402840
cmp     [ebp+var_220], 8
lea     eax, [ebp+lpfilename]
cmovnb  eax, [ebp+lpfilename]
push    eax
call    ds:getfileattributesw
cmp     eax, 0ffffffffh
jz      short loc_401a87
or      edi, 2
lea     eax, [ebp+lpfilename]
cmp     [ebp+var_220], 8
mov     [ebp+var_270], edi
cmovnb  eax, [ebp+lpfilename]
push    eax
call    ds:loadlibraryw
mov     [esi+10h], eax
test    eax, eax
jnz     short loc_401a87
call    ds:getlasterror
push    2
mov     [ebp+src], eax
call    sub_402070
mov     ecx, eax
call    sub_403a10
test    eax, eax
jz      short loc_401a87
mov     eax, [ebp+src]
push    eax
push    offset aloadqmnetworkm_0
push    offset anetworkcqmnetw
push    4dh
push    offset aqmnetworkmgrcp
push    eax
push    2
push    offset dword_409778
call    sub_402070
push    eax
call    sub_403ab0
add     esp, 24h
lea     ecx, [ebp+lpfilename]
mov     byte ptr [ebp+var_4], 0
call    sub_402200
cmp     dword ptr [esi+10h], 0
jnz     loc_401cd0
xor     eax, eax
mov     [ebp+var_238], 7
mov     [ebp+var_23c], 0
mov     word ptr [ebp+lplibfilename], ax
lea     ecx, [ebp+lplibfilename]
mov     byte ptr [ebp+var_4], 3
call    sub_4016f0
test    eax, eax
jnz     short loc_401af1
mov     ecx, [ebp+var_238]
cmp     ecx, 8
jb      loc_401cd7
inc     ecx
push    ecx
push    [ebp+lplibfilename]
call    sub_402670
jmp     loc_401cd7
push    ecx
lea     edx, [ebp+lplibfilename]
lea     ecx, [ebp+buffer.allocationbase]
call    sub_402c60
mov     edx, eax
mov     byte ptr [ebp+var_4], 4
lea     ecx, [ebp+lpfilename]
call    sub_402d30
add     esp, 4
mov     [ebp+src], eax
lea     ecx, [ebp+lplibfilename]
cmp     ecx, eax
jz      short loc_401b6d
mov     eax, [ebp+var_238]
cmp     eax, 8
jb      short loc_401b3f
inc     eax
push    eax
push    [ebp+lplibfilename]
call    sub_402670
push    [ebp+src]
xor     eax, eax
mov     [ebp+var_238], 7
lea     ecx, [ebp+lplibfilename]
mov     [ebp+var_23c], 0
mov     word ptr [ebp+lplibfilename], ax
call    sub_402600
mov     eax, [ebp+var_220]
cmp     eax, 8
jb      short loc_401b85
inc     eax
push    eax
push    [ebp+lpfilename]
call    sub_402670
xor     eax, eax
mov     byte ptr [ebp+var_4], 3
mov     word ptr [ebp+lpfilename], ax
mov     eax, [ebp+buffer.type]
mov     [ebp+var_220], 7
mov     [ebp+var_224], 0
cmp     eax, 8
jb      short loc_401bbe
inc     eax
push    eax
push    [ebp+buffer.allocationbase]
call    sub_402670
cmp     [ebp+var_238], 8
lea     eax, [ebp+lplibfilename]
cmovnb  eax, [ebp+lplibfilename]
push    eax
call    ds:loadlibraryw
cmp     [ebp+var_238], 8
mov     [esi+10h], eax
lea     eax, [ebp+lplibfilename]
cmovnb  eax, [ebp+lplibfilename]
push    eax
call    ds:getfileattributesw
cmp     eax, 0ffffffffh
jz      short loc_401c69
or      edi, 4
lea     eax, [ebp+lplibfilename]
cmp     [ebp+var_238], 8
mov     [ebp+var_270], edi
cmovnb  eax, [ebp+lplibfilename]
push    eax
call    ds:loadlibraryw
mov     [esi+10h], eax
test    eax, eax
jnz     short loc_401c69
call    ds:getlasterror
push    2
mov     edi, eax
call    sub_402070
mov     ecx, eax
call    sub_403a10
test    eax, eax
jz      short loc_401c69
push    edi
push    offset aloadqmnetworkm_1
push    offset anetworkcqmnetw
push    65h
push    offset aqmnetworkmgrcp
push    edi
push    2
push    offset dword_409774
call    sub_402070
push    eax
call    sub_403ab0
add     esp, 24h
mov     byte ptr [ebp+var_4], 0
mov     eax, [ebp+var_238]
cmp     eax, 8
jb      short loc_401c85
inc     eax
push    eax
push    [ebp+lplibfilename]
call    sub_402670
cmp     dword ptr [esi+10h], 0
jnz     short loc_401cd0
cmp     [ebp+var_270], 0
jnz     short loc_401cd7
push    2
call    sub_402070
mov     ecx, eax
call    sub_403a10
test    eax, eax
jz      short loc_401cd7
push    offset acantfindqmnetw
push    offset anetworkcqmnetw
push    6eh
push    offset aqmnetworkmgrcp
push    0
push    2
push    offset dword_409770
call    sub_402070
push    eax
call    sub_403ab0
add     esp, 20h
jmp     short loc_401cd7
mov     ecx, esi
call    sub_401d90
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_401d00
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     [ebp+var_4], 0
cmp     dword ptr [esi+10h], 0
mov     dword ptr [esi], offset ??_7cqmnetworkmgr@network@@6b@
mov     dword ptr [esi+4], offset ??_7cqmnetworkmgr@network@@6b@_0
jz      short loc_401d65
mov     eax, [esi+8]
test    eax, eax
jz      short loc_401d50
mov     ecx, [esi+0ch]
test    ecx, ecx
jz      short loc_401d50
push    eax
call    ecx
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
test    [ebp+arg_0], 1
mov     dword ptr [esi], offset ??_7iqmnetworkmgr@network@@6b@
jz      short loc_401d7c
push    18h
push    esi
call    sub_404691
add     esp, 8
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    edi
mov     edi, ecx
mov     eax, [edi+10h]
test    eax, eax
jz      short loc_401e0c
push    ebx
push    esi
mov     esi, ds:getprocaddress
push    offset procname
push    eax
call    esi
push    offset agetversion
push    dword ptr [edi+10h]
mov     [ebp+var_4], eax
call    esi
push    offset adestroyqmnetwo
push    dword ptr [edi+10h]
mov     ebx, eax
call    esi
mov     ecx, eax
mov     eax, [ebp+var_4]
mov     [edi+0ch], ecx
test    eax, eax
jz      short loc_401dfa
test    ecx, ecx
jz      short loc_401dfa
call    eax
mov     [edi+8], eax
test    ebx, ebx
jnz     short loc_401dee
pop     esi
pop     ebx
mov     dword ptr [edi+14h], 1
pop     edi
mov     esp, ebp
pop     ebp
retn
call    ebx
pop     esi
pop     ebx
mov     [edi+14h], eax
pop     edi
mov     esp, ebp
pop     ebp
retn
push    dword ptr [edi+10h]
call    ds:freelibrary
pop     esi
mov     dword ptr [edi+10h], 0
pop     ebx
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ecx+8]
test    ecx, ecx
jz      short loc_401e30
mov     eax, [ecx]
pop     ebp
jmp     dword ptr [eax+4]
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ecx+8]
test    ecx, ecx
jz      short loc_401e50
mov     eax, [ecx]
pop     ebp
jmp     dword ptr [eax+8]
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ecx+8]
test    ecx, ecx
jz      short loc_401e70
mov     eax, [ecx]
pop     ebp
jmp     dword ptr [eax+0ch]
xor     eax, eax
pop     ebp
retn    18h
push    ebp
mov     ebp, esp
mov     ecx, [ecx+8]
test    ecx, ecx
jz      short loc_401e90
mov     eax, [ecx]
pop     ebp
jmp     dword ptr [eax+10h]
xor     eax, eax
pop     ebp
retn    1ch
push    ebp
mov     ebp, esp
mov     ecx, [ecx+8]
test    ecx, ecx
jz      short loc_401eb0
mov     eax, [ecx]
pop     ebp
jmp     dword ptr [eax+14h]
xor     eax, eax
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
mov     ecx, [ecx+8]
test    ecx, ecx
jz      short loc_401ed0
mov     eax, [ecx]
pop     ebp
jmp     dword ptr [eax+18h]
xor     eax, eax
pop     ebp
retn    4
mov     ecx, [ecx+8]
test    ecx, ecx
jz      short locret_401eec
mov     eax, [ecx]
jmp     dword ptr [eax+1ch]
retn
push    ebp
mov     ebp, esp
mov     ecx, [ecx+8]
test    ecx, ecx
jz      short loc_401f00
mov     eax, [ecx]
pop     ebp
jmp     dword ptr [eax+20h]
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ecx-4]
add     ecx, 0fffffffch
mov     [ebp+var_4], 0
mov     edx, [eax+24h]
cmp     eax, offset ??_7cqmnetworkmgr@network@@6b@
jnz     short loc_401f47
mov     edx, [ecx+8]
test    edx, edx
jz      short loc_401f64
cmp     dword ptr [ecx+14h], 2
jb      short loc_401f64
lea     eax, [ebp+var_4]
mov     ecx, edx
push    eax
mov     eax, [edx]
push    2
call    dword ptr [eax+24h]
jmp     short loc_401f4f
lea     eax, [ebp+var_4]
push    eax
push    2
call    edx
test    eax, eax
js      short loc_401f64
mov     ecx, [ebp+var_4]
test    ecx, ecx
jz      short loc_401f64
push    [ebp+arg_4]
mov     eax, [ecx]
push    [ebp+arg_0]
call    dword ptr [eax]
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ecx-4]
add     ecx, 0fffffffch
mov     [ebp+var_4], 0
mov     edx, [eax+24h]
cmp     eax, offset ??_7cqmnetworkmgr@network@@6b@
jnz     short loc_401fa7
mov     edx, [ecx+8]
test    edx, edx
jz      short loc_401fc2
cmp     dword ptr [ecx+14h], 2
jb      short loc_401fc2
lea     eax, [ebp+var_4]
mov     ecx, edx
push    eax
mov     eax, [edx]
push    2
call    dword ptr [eax+24h]
jmp     short loc_401faf
lea     eax, [ebp+var_4]
push    eax
push    2
call    edx
test    eax, eax
js      short loc_401fc2
mov     ecx, [ebp+var_4]
test    ecx, ecx
jz      short loc_401fc2
mov     eax, [ecx]
push    [ebp+arg_0]
call    dword ptr [eax+4]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ecx+8]
test    edx, edx
jz      short loc_401fe8
cmp     dword ptr [ecx+14h], 2
jb      short loc_401fe8
mov     eax, [edx]
mov     ecx, edx
pop     ebp
jmp     dword ptr [eax+24h]
mov     eax, [ebp+arg_4]
mov     dword ptr [eax], 0
mov     eax, 80004002h
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_402000
mov     eax, large fs:0
push    eax
push    ecx
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    18h
call    ??2@yapaxi@z
add     esp, 4
mov     [ebp+block], eax
mov     ecx, eax
mov     [ebp+var_4], 0
call    sub_4017b0
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
test    ecx, ecx
jz      short loc_402060
mov     eax, [ecx]
push    1
call    dword ptr [eax]
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+src]
push    esi
mov     esi, ecx
cmp     word ptr [edx], 0
jnz     short loc_40217d
xor     eax, eax
push    eax
push    edx
call    sub_402840
pop     esi
pop     ebp
retn    4
mov     eax, edx
push    edi
lea     edi, [eax+2]
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_402183
sub     eax, edi
mov     ecx, esi
pop     edi
sar     eax, 1
push    eax
push    edx
call    sub_402840
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+src]
push    esi
mov     esi, ecx
cmp     word ptr [edx], 0
jnz     short loc_4021cd
xor     eax, eax
push    eax
push    edx
call    sub_402330
pop     esi
pop     ebp
retn    4
mov     eax, edx
push    edi
lea     edi, [eax+2]
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_4021d3
sub     eax, edi
mov     ecx, esi
pop     edi
sar     eax, 1
push    eax
push    edx
call    sub_402330
pop     esi
pop     ebp
retn    4
push    esi
mov     esi, ecx
mov     eax, [esi+14h]
cmp     eax, 8
jb      short loc_402214
inc     eax
push    eax
push    dword ptr [esi]
call    sub_402670
mov     dword ptr [esi+14h], 7
cmp     dword ptr [esi+14h], 8
mov     dword ptr [esi+10h], 0
jb      short loc_402231
mov     eax, [esi]
xor     ecx, ecx
pop     esi
mov     [eax], cx
retn
xor     eax, eax
mov     [esi], ax
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+src]
xor     eax, eax
push    edi
mov     edi, ecx
mov     dword ptr [edi+14h], 7
mov     dword ptr [edi+10h], 0
mov     [edi], ax
cmp     dword ptr [esi+14h], 8
jnb     short loc_40227b
mov     eax, [esi+10h]
add     eax, 1
jz      short loc_402285
add     eax, eax
push    eax
push    esi
push    edi
call    ds:memmove
add     esp, 0ch
jmp     short loc_402285
mov     eax, [esi]
mov     [edi], eax
mov     dword ptr [esi], 0
mov     eax, [esi+10h]
mov     [edi+10h], eax
mov     eax, [esi+14h]
mov     [edi+14h], eax
mov     dword ptr [esi+14h], 7
cmp     dword ptr [esi+14h], 8
mov     dword ptr [esi+10h], 0
jb      short loc_4022a7
mov     esi, [esi]
xor     eax, eax
mov     [esi], ax
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+src]
xor     eax, eax
push    esi
mov     esi, ecx
mov     dword ptr [esi+14h], 7
mov     dword ptr [esi+10h], 0
mov     [esi], ax
cmp     [edx], ax
jnz     short loc_4022f3
xor     ecx, ecx
push    ecx
push    edx
mov     ecx, esi
call    sub_402330
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     ecx, edx
push    edi
lea     edi, [ecx+2]
nop     dword ptr [eax+00000000h]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_402300
sub     ecx, edi
sar     ecx, 1
pop     edi
push    ecx
push    edx
mov     ecx, esi
call    sub_402330
mov     eax, esi
pop     esi
pop     ebp
retn    4
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+src]
push    esi
mov     esi, ecx
test    ebx, ebx
jz      short loc_402386
mov     ecx, [esi+14h]
cmp     ecx, 8
jb      short loc_40234a
mov     eax, [esi]
jmp     short loc_40234c
mov     eax, esi
cmp     ebx, eax
jb      short loc_402386
cmp     ecx, 8
jb      short loc_402359
mov     edx, [esi]
jmp     short loc_40235b
mov     edx, esi
mov     eax, [esi+10h]
lea     eax, [edx+eax*2]
cmp     eax, ebx
jbe     short loc_402386
cmp     ecx, 8
jb      short loc_40236e
mov     eax, [esi]
jmp     short loc_402370
mov     eax, esi
push    [ebp+arg_4]
sub     ebx, eax
mov     ecx, esi
sar     ebx, 1
push    ebx
push    esi
call    sub_402430
pop     esi
pop     ebx
pop     ebp
retn    8
push    edi
mov     edi, [ebp+arg_4]
cmp     edi, 7ffffffeh
jbe     short loc_40239d
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
cmp     [esi+14h], edi
jnb     short loc_4023bb
push    dword ptr [esi+10h]
mov     ecx, esi
push    edi
call    sub_402960
test    edi, edi
jz      short loc_40241c
cmp     dword ptr [esi+14h], 8
jb      short loc_4023e6
mov     ecx, [esi]
jmp     short loc_4023e8
test    edi, edi
jnz     short loc_4023b1
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], edi
jb      short loc_4023d8
mov     eax, [esi]
xor     ecx, ecx
pop     edi
mov     [eax], cx
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
mov     eax, esi
xor     ecx, ecx
pop     edi
pop     esi
pop     ebx
mov     [eax], cx
pop     ebp
retn    8
mov     ecx, esi
test    edi, edi
jz      short loc_4023fa
lea     eax, [edi+edi]
push    eax
push    ebx
push    ecx
call    memcpy
add     esp, 0ch
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], edi
jb      short loc_402414
mov     eax, [esi]
xor     ecx, ecx
mov     [eax+edi*2], cx
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    8
mov     eax, esi
xor     ecx, ecx
mov     [eax+edi*2], cx
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_4]
push    edi
mov     eax, [ebx+10h]
cmp     eax, ecx
jnb     short loc_402450
push    offset ainvalidstringp
call    ds:?_xout_of_range@std@@yaxpbd@z
mov     edi, [ebp+arg_8]
sub     eax, ecx
cmp     edi, eax
cmova   edi, eax
cmp     esi, ebx
jnz     short loc_402498
lea     eax, [ecx+edi]
cmp     [esi+10h], eax
jnb     short loc_402471
push    offset ainvalidstringp
call    ds:?_xout_of_range@std@@yaxpbd@z
mov     [esi+10h], eax
cmp     dword ptr [esi+14h], 8
jb      short loc_40247e
mov     edx, [esi]
jmp     short loc_402480
mov     edx, esi
xor     edi, edi
push    ecx
push    edi
mov     ecx, esi
mov     [edx+eax*2], di
call    sub_402790
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
cmp     edi, 7ffffffeh
jbe     short loc_4024ab
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
cmp     [esi+14h], edi
jnb     short loc_4024d4
push    dword ptr [esi+10h]
mov     ecx, esi
push    edi
call    sub_402960
mov     ecx, [ebp+arg_4]
test    edi, edi
jz      short loc_402538
cmp     dword ptr [ebx+14h], 8
jb      short loc_4024ca
mov     ebx, [ebx]
cmp     dword ptr [esi+14h], 8
jb      short loc_4024ff
mov     edx, [esi]
jmp     short loc_402501
test    edi, edi
jnz     short loc_4024c2
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], edi
jb      short loc_4024f1
mov     eax, [esi]
xor     ecx, ecx
pop     edi
mov     [eax], cx
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     eax, esi
xor     ecx, ecx
pop     edi
pop     esi
pop     ebx
mov     [eax], cx
pop     ebp
retn    0ch
mov     edx, esi
test    edi, edi
jz      short loc_402516
lea     eax, [edi+edi]
push    eax
lea     eax, [ebx+ecx*2]
push    eax
push    edx
call    memcpy
add     esp, 0ch
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], edi
jb      short loc_402530
mov     eax, [esi]
xor     ecx, ecx
mov     [eax+edi*2], cx
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     eax, esi
xor     ecx, ecx
mov     [eax+edi*2], cx
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    esi
mov     esi, ecx
push    edi
mov     ecx, [esi+10h]
mov     eax, ecx
not     eax
cmp     eax, 1
ja      short loc_40256b
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
lea     edi, [ecx+1]
cmp     edi, 7ffffffeh
jbe     short loc_402581
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
cmp     [esi+14h], edi
jnb     short loc_4025a0
push    ecx
push    edi
mov     ecx, esi
call    sub_402960
test    edi, edi
jz      short loc_4025f2
cmp     dword ptr [esi+14h], 8
mov     ecx, [esi+10h]
jb      short loc_4025c7
mov     eax, [esi]
jmp     short loc_4025c9
test    edi, edi
jnz     short loc_402593
mov     [esi+10h], edi
cmp     dword ptr [esi+14h], 8
jb      short loc_4025bb
mov     eax, [esi]
xor     ecx, ecx
pop     edi
mov     [eax], cx
mov     eax, esi
pop     esi
retn    8
mov     eax, esi
xor     ecx, ecx
pop     edi
pop     esi
mov     [eax], cx
retn    8
mov     eax, esi
mov     edx, 5ch
mov     [eax+ecx*2], dx
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], edi
jb      short loc_4025ea
mov     eax, [esi]
xor     ecx, ecx
mov     [eax+edi*2], cx
mov     eax, esi
pop     edi
pop     esi
retn    8
mov     eax, esi
xor     ecx, ecx
mov     [eax+edi*2], cx
pop     edi
mov     eax, esi
pop     esi
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+src]
push    edi
mov     edi, ecx
cmp     dword ptr [esi+14h], 8
jnb     short loc_402628
mov     eax, [esi+10h]
add     eax, 1
jz      short loc_402636
add     eax, eax
push    eax
push    esi
push    edi
call    ds:memmove
add     esp, 0ch
jmp     short loc_402636
test    edi, edi
jz      short loc_402630
mov     eax, [esi]
mov     [edi], eax
mov     dword ptr [esi], 0
mov     eax, [esi+10h]
mov     [edi+10h], eax
mov     eax, [esi+14h]
mov     [edi+14h], eax
mov     dword ptr [esi+14h], 7
cmp     dword ptr [esi+14h], 8
mov     dword ptr [esi+10h], 0
jb      short loc_402663
mov     eax, [esi]
xor     ecx, ecx
pop     edi
pop     esi
mov     [eax], cx
pop     ebp
retn    4
xor     eax, eax
pop     edi
mov     [esi], ax
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+block]
cmp     eax, 7fffffffh
jbe     short loc_402686
call    ds:_invalid_parameter_noinfo_noreturn
add     eax, eax
cmp     eax, 1000h
jb      short loc_4026c1
test    cl, 1fh
jz      short loc_40269a
call    ds:_invalid_parameter_noinfo_noreturn
mov     eax, [ecx-4]
cmp     eax, ecx
jb      short loc_4026a7
call    ds:_invalid_parameter_noinfo_noreturn
sub     ecx, eax
cmp     ecx, 4
jnb     short loc_4026b4
call    ds:_invalid_parameter_noinfo_noreturn
cmp     ecx, 23h
jbe     short loc_4026bf
call    ds:_invalid_parameter_noinfo_noreturn
mov     ecx, eax
push    ecx
call    j_free
add     esp, 4
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
cmp     edi, 7ffffffeh
jbe     short loc_4026ed
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
mov     eax, [esi+14h]
cmp     eax, edi
jnb     short loc_402708
push    dword ptr [esi+10h]
push    edi
call    sub_402960
test    edi, edi
pop     edi
setnz   al
pop     esi
pop     ebp
retn    8
cmp     byte ptr [ebp+arg_4], 0
jz      short loc_40276a
cmp     edi, 8
jnb     short loc_40276a
push    ebx
mov     ebx, [esi+10h]
cmp     edi, ebx
cmovb   ebx, edi
cmp     eax, 8
jb      short loc_402746
mov     ecx, [esi]
mov     [ebp+arg_4], ecx
test    ebx, ebx
jz      short loc_40273b
lea     eax, [ebx+ebx]
push    eax
push    ecx
push    esi
call    memcpy
mov     ecx, [ebp+arg_4]
add     esp, 0ch
mov     eax, [esi+14h]
inc     eax
push    eax
push    ecx
call    sub_402670
mov     dword ptr [esi+14h], 7
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], ebx
jb      short loc_402758
mov     esi, [esi]
xor     eax, eax
test    edi, edi
mov     [esi+ebx*2], ax
pop     ebx
pop     edi
setnz   al
pop     esi
pop     ebp
retn    8
test    edi, edi
jnz     short loc_40277f
mov     [esi+10h], edi
cmp     eax, 8
jb      short loc_402778
mov     esi, [esi]
xor     eax, eax
test    edi, edi
mov     [esi], ax
pop     edi
setnz   al
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_0]
push    edi
mov     edi, [esi+10h]
cmp     edi, ecx
jnb     short loc_4027ac
push    offset ainvalidstringp
call    ds:?_xout_of_range@std@@yaxpbd@z
mov     edx, [ebp+arg_4]
mov     eax, edi
sub     eax, ecx
cmp     eax, edx
ja      short loc_4027de
mov     [esi+10h], ecx
cmp     dword ptr [esi+14h], 8
jb      short loc_4027d0
mov     eax, [esi]
xor     edx, edx
pop     edi
mov     [eax+ecx*2], dx
mov     eax, esi
pop     esi
pop     ebp
retn    8
mov     eax, esi
xor     edx, edx
pop     edi
pop     esi
mov     [eax+ecx*2], dx
pop     ebp
retn    8
test    edx, edx
jz      short loc_40282d
cmp     dword ptr [esi+14h], 8
jb      short loc_4027ec
mov     eax, [esi]
jmp     short loc_4027ee
mov     eax, esi
sub     edi, edx
push    ebx
lea     ebx, [eax+ecx*2]
mov     eax, edi
sub     eax, ecx
jz      short loc_40280b
add     eax, eax
push    eax
lea     eax, [ebx+edx*2]
push    eax
push    ebx
call    ds:memmove
add     esp, 0ch
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], edi
pop     ebx
jb      short loc_402825
mov     eax, [esi]
xor     ecx, ecx
mov     [eax+edi*2], cx
mov     eax, esi
pop     edi
pop     esi
pop     ebp
retn    8
mov     eax, esi
xor     ecx, ecx
mov     [eax+edi*2], cx
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+src]
mov     esi, ecx
test    edi, edi
jz      short loc_402896
mov     ecx, [esi+14h]
cmp     ecx, 8
jb      short loc_40285a
mov     eax, [esi]
jmp     short loc_40285c
mov     eax, esi
cmp     edi, eax
jb      short loc_402896
cmp     ecx, 8
jb      short loc_402869
mov     edx, [esi]
jmp     short loc_40286b
mov     edx, esi
mov     eax, [esi+10h]
lea     eax, [edx+eax*2]
cmp     eax, edi
jbe     short loc_402896
cmp     ecx, 8
jb      short loc_40287e
mov     eax, [esi]
jmp     short loc_402880
mov     eax, esi
push    [ebp+arg_4]
sub     edi, eax
mov     ecx, esi
sar     edi, 1
push    edi
push    esi
call    sub_402b00
pop     edi
pop     esi
pop     ebp
retn    8
mov     edx, [esi+10h]
mov     eax, edx
mov     ecx, [ebp+arg_4]
not     eax
cmp     eax, ecx
ja      short loc_4028af
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
push    ebx
lea     ebx, [edx+ecx]
test    ecx, ecx
jz      loc_402954
cmp     ebx, 7ffffffeh
jbe     short loc_4028ce
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
cmp     [esi+14h], ebx
jnb     short loc_4028ed
push    edx
push    ebx
mov     ecx, esi
call    sub_402960
mov     ecx, [ebp+arg_4]
test    ebx, ebx
jz      short loc_402954
cmp     dword ptr [esi+14h], 8
jb      short loc_402918
mov     edx, [esi]
jmp     short loc_40291a
test    ebx, ebx
jnz     short loc_4028e3
mov     [esi+10h], ebx
cmp     dword ptr [esi+14h], 8
jb      short loc_40290a
mov     eax, [esi]
xor     ecx, ecx
pop     ebx
pop     edi
mov     [eax], cx
mov     eax, esi
pop     esi
pop     ebp
retn    8
mov     eax, esi
xor     ecx, ecx
pop     ebx
pop     edi
pop     esi
mov     [eax], cx
pop     ebp
retn    8
mov     edx, esi
test    ecx, ecx
jz      short loc_402932
lea     eax, [ecx+ecx]
push    eax
mov     eax, [esi+10h]
push    edi
lea     eax, [edx+eax*2]
push    eax
call    memcpy
add     esp, 0ch
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], ebx
jb      short loc_40294c
mov     eax, [esi]
xor     ecx, ecx
mov     [eax+ebx*2], cx
mov     eax, esi
pop     ebx
pop     edi
pop     esi
pop     ebp
retn    8
mov     eax, esi
xor     ecx, ecx
mov     [eax+ebx*2], cx
pop     ebx
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_402960
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     esi, ecx
mov     [ebp+var_14], esi
mov     eax, [ebp+arg_0]
mov     edi, eax
or      edi, 7
cmp     edi, 7ffffffeh
jbe     short loc_4029a4
mov     edi, eax
jmp     short loc_4029cb
mov     ebx, [esi+14h]
mov     eax, 0aaaaaaabh
mul     edi
mov     ecx, ebx
shr     ecx, 1
shr     edx, 1
cmp     ecx, edx
jbe     short loc_4029cb
mov     eax, 7ffffffeh
lea     edi, [ecx+ebx]
sub     eax, ecx
cmp     ebx, eax
jbe     short loc_4029cb
mov     edi, 7ffffffeh
lea     eax, [edi+1]
mov     [ebp+var_4], 0
test    eax, eax
jnz     short loc_4029dd
xor     ebx, ebx
jmp     short loc_402a47
cmp     eax, 7fffffffh
jbe     short loc_4029ea
call    ds:?_xbad_alloc@std@@yaxxz
add     eax, eax
cmp     eax, 1000h
jb      short loc_402a14
lea     ecx, [eax+23h]
cmp     ecx, eax
ja      short loc_402a00
call    ds:?_xbad_alloc@std@@yaxxz
push    ecx
call    ??2@yapaxi@z
add     esp, 4
lea     ebx, [eax+23h]
and     ebx, 0ffffffe0h
mov     [ebx-4], eax
jmp     short loc_402a47
push    eax
call    ??2@yapaxi@z
add     esp, 4
mov     ebx, eax
jmp     short loc_402a47
mov     eax, [ebp+arg_0]
mov     [ebp+arg_0], eax
inc     eax
mov     [ebp+var_10], esp
push    eax
mov     byte ptr [ebp+var_4], 2
call    sub_402c00
mov     [ebp+var_18], eax
mov     eax, offset loc_402a3e
retn
mov     esi, [ebp+var_14]
mov     edi, [ebp+arg_0]
mov     ebx, [ebp+var_18]
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_402a6b
cmp     dword ptr [esi+14h], 8
jb      short loc_402a58
mov     ecx, [esi]
jmp     short loc_402a5a
mov     ecx, esi
test    eax, eax
jz      short loc_402a6b
add     eax, eax
push    eax
push    ecx
push    ebx
call    memcpy
add     esp, 0ch
mov     eax, [esi+14h]
cmp     eax, 8
jb      short loc_402a7c
inc     eax
push    eax
push    dword ptr [esi]
call    sub_402670
mov     dword ptr [esi+14h], 7
cmp     dword ptr [esi+14h], 8
mov     dword ptr [esi+10h], 0
jb      short loc_402a94
mov     eax, [esi]
jmp     short loc_402a96
mov     eax, esi
xor     ecx, ecx
mov     [eax], cx
mov     eax, [ebp+arg_4]
mov     [esi], ebx
mov     [esi+14h], edi
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], eax
jb      short loc_402aae
mov     esi, ebx
xor     ecx, ecx
mov     [esi+eax*2], cx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     esi, [ebp+var_14]
mov     eax, [esi+14h]
cmp     eax, 8
jb      short loc_402adc
inc     eax
push    eax
push    dword ptr [esi]
call    sub_402670
mov     dword ptr [esi+14h], 7
cmp     dword ptr [esi+14h], 8
mov     dword ptr [esi+10h], 0
jb      short loc_402af2
mov     esi, [esi]
xor     eax, eax
push    eax
push    eax
mov     [esi], ax
call    _cxxthrowexception
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_4]
push    edi
mov     eax, [ebx+10h]
cmp     eax, ecx
jnb     short loc_402b20
push    offset ainvalidstringp
call    ds:?_xout_of_range@std@@yaxpbd@z
mov     edx, [esi+10h]
sub     eax, ecx
mov     ecx, [ebp+arg_8]
cmp     ecx, eax
cmova   ecx, eax
mov     eax, edx
not     eax
mov     [ebp+arg_8], ecx
cmp     eax, ecx
ja      short loc_402b43
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
lea     edi, [edx+ecx]
test    ecx, ecx
jz      loc_402bf5
cmp     edi, 7ffffffeh
jbe     short loc_402b61
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
cmp     [esi+14h], edi
jnb     short loc_402b88
push    edx
push    edi
mov     ecx, esi
call    sub_402960
mov     ecx, [ebp+arg_8]
test    edi, edi
jz      short loc_402bf5
cmp     dword ptr [ebx+14h], 8
jb      short loc_402b7e
mov     ebx, [ebx]
cmp     dword ptr [esi+14h], 8
jb      short loc_402bb3
mov     edx, [esi]
jmp     short loc_402bb5
test    edi, edi
jnz     short loc_402b76
mov     [esi+10h], edi
cmp     dword ptr [esi+14h], 8
jb      short loc_402ba5
mov     eax, [esi]
xor     ecx, ecx
pop     edi
mov     [eax], cx
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     eax, esi
xor     ecx, ecx
pop     edi
pop     esi
pop     ebx
mov     [eax], cx
pop     ebp
retn    0ch
mov     edx, esi
test    ecx, ecx
jz      short loc_402bd3
lea     eax, [ecx+ecx]
push    eax
mov     eax, [ebp+arg_4]
lea     eax, [ebx+eax*2]
push    eax
mov     eax, [esi+10h]
lea     eax, [edx+eax*2]
push    eax
call    memcpy
add     esp, 0ch
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], edi
jb      short loc_402bed
mov     eax, [esi]
xor     ecx, ecx
mov     [eax+edi*2], cx
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
mov     eax, esi
xor     ecx, ecx
mov     [eax+edi*2], cx
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
test    eax, eax
jnz     short loc_402c12
xor     ecx, ecx
mov     eax, ecx
pop     ebp
retn    4
cmp     eax, 7fffffffh
jbe     short loc_402c1f
call    ds:?_xbad_alloc@std@@yaxxz
add     eax, eax
cmp     eax, 1000h
jb      short loc_402c4d
lea     ecx, [eax+23h]
cmp     ecx, eax
ja      short loc_402c35
call    ds:?_xbad_alloc@std@@yaxxz
push    ecx
call    ??2@yapaxi@z
add     esp, 4
lea     ecx, [eax+23h]
and     ecx, 0ffffffe0h
mov     [ecx-4], eax
mov     eax, ecx
pop     ebp
retn    4
push    eax
call    ??2@yapaxi@z
add     esp, 4
mov     ecx, eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_402c60
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, edx
mov     esi, ecx
mov     [ebp+var_14], esi
mov     [ebp+var_10], 0
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi+14h], 7
cmp     dword ptr [esi+14h], 8
mov     dword ptr [esi+10h], 0
jb      short loc_402cbc
mov     eax, [esi]
jmp     short loc_402cbe
mov     eax, esi
xor     ecx, ecx
mov     [eax], cx
mov     [ebp+var_4], ecx
mov     eax, [ebx+10h]
mov     edi, [esi+10h]
inc     eax
mov     [ebp+var_10], 1
cmp     edi, eax
ja      short loc_402d00
cmp     [esi+14h], eax
jz      short loc_402d00
push    1
push    eax
mov     ecx, esi
call    sub_4026d0
test    al, al
jz      short loc_402d00
cmp     dword ptr [esi+14h], 8
mov     [esi+10h], edi
jb      short loc_402cf8
mov     eax, [esi]
jmp     short loc_402cfa
mov     eax, esi
xor     ecx, ecx
mov     [eax+edi*2], cx
push    0ffffffffh
push    0
push    ebx
mov     ecx, esi
call    sub_402b00
sub     esp, 8
mov     ecx, esi
call    sub_402550
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    esi
mov     esi, ecx
mov     [ebp+var_8], 0
push    10h
push    offset aqmnetworkmgrdl
mov     ecx, edx
mov     [ebp+var_4], esi
call    sub_402840
push    eax
mov     ecx, esi
call    sub_402240
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_402d70
mov     eax, large fs:0
push    eax
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    esi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
test    esi, esi
jz      short loc_402e05
xor     eax, eax
mov     [ebp+var_14], 7
mov     [ebp+var_18], 0
mov     word ptr [ebp+source], ax
lea     ecx, [ebp+source]
mov     [ebp+var_4], eax
call    sub_403000
mov     ecx, [ebp+var_18]
mov     eax, 104h
cmp     ecx, eax
cmova   ecx, eax
cmp     [ebp+var_14], 8
push    ecx
lea     eax, [ebp+source]
cmovnb  eax, [ebp+source]
push    eax
push    104h
push    esi
call    ds:wcsncpy_s
add     esp, 10h
push    offset src
push    esi
call    ds:pathappendw
mov     eax, [ebp+var_14]
cmp     eax, 8
jb      short loc_402e05
inc     eax
push    eax
push    [ebp+source]
call    sub_402670
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0fffffffeh
push    offset stru_407b30
push    offset __except_handler4
mov     eax, large fs:0
push    eax
sub     esp, 220h
mov     eax, ___security_cookie
xor     [ebp+ms_exc.registration.scopetable], eax
xor     eax, ebp
mov     [ebp+var_1c], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     edi, [ebp+lpprocname]
mov     [ebp+var_230], edi
mov     [ebp+var_22c], 0
cmp     hmodule, 0
jz      short loc_402ee0
mov     eax, exchange
cmp     hmodule, eax
jz      short loc_402ee0
mov     [ebp+ms_exc.registration.trylevel], 0
push    edi
mov     eax, hmodule
push    eax
call    ds:getprocaddress
mov     esi, eax
mov     [ebp+var_22c], esi
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
jmp     short loc_402ec3
mov     eax, 1
retn
mov     esp, [ebp+ms_exc.old_esp]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
mov     esi, [ebp+var_22c]
mov     edi, [ebp+var_230]
test    esi, esi
jnz     loc_402fe1
push    edi
push    offset agetfunctionsad
push    offset agetfunc
push    138h
jmp     loc_402fd4
mov     eax, exchange
push    0
push    eax
push    offset hmodule
call    ds:interlockedcompareexchange
test    eax, eax
jnz     short loc_402f5b
push    20ah
push    eax
lea     eax, [ebp+libfilename]
push    eax
call    memset
add     esp, 0ch
lea     ecx, [ebp+libfilename]
call    sub_402d70
lea     eax, [ebp+libfilename]
push    eax
call    ds:loadlibraryw
mov     esi, eax
push    esi
push    offset hmodule
call    ds:interlockedexchange
test    esi, esi
jnz     short loc_402f7f
lea     eax, [ebp+libfilename]
push    eax
push    offset aloadqmcommondl
push    offset agetfunc
push    145h
push    offset adjenkinstrunkw
call    sub_403e90
add     esp, 14h
jmp     short loc_402f7f
mov     eax, exchange
cmp     eax, hmodule
jnz     short loc_402f7f
mov     esi, ds:switchtothread
xchg    ax, ax
call    esi
mov     eax, exchange
cmp     eax, hmodule
jz      short loc_402f70
mov     [ebp+ms_exc.registration.trylevel], 1
push    edi
mov     eax, hmodule
push    eax
call    ds:getprocaddress
mov     esi, eax
mov     [ebp+var_22c], esi
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
jmp     short loc_402fc0
mov     eax, 1
retn
mov     esp, [ebp+ms_exc.old_esp]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
mov     esi, [ebp+var_22c]
mov     edi, [ebp+var_230]
test    esi, esi
jnz     short loc_402fe1
push    edi
push    offset agetfunctionsad
push    offset agetfunc
push    15ch
push    offset adjenkinstrunkw
call    sub_403e50
add     esp, 14h
mov     eax, esi
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_1c]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_403000
mov     eax, large fs:0
push    eax
sub     esp, 0a84h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
push    402h
lea     eax, [ebp+data]
mov     [ebp+phkresult], 0
push    0
push    eax
call    memset
add     esp, 0ch
mov     [ebp+cbdata], 200h
cmp     dword ptr [edi+14h], 8
mov     dword ptr [edi+10h], 0
jb      short loc_40306a
mov     eax, [edi]
jmp     short loc_40306c
mov     eax, edi
xor     ecx, ecx
push    20ah
mov     [eax], cx
lea     eax, [ebp+destination]
push    ecx
push    eax
call    memset
push    20ah
lea     eax, [ebp+filename]
push    0
push    eax
call    memset
mov     esi, ds:getmodulefilenamew
lea     eax, [ebp+filename]
add     esp, 18h
push    104h
push    eax
push    0
call    esi
test    eax, eax
jz      loc_403148
lea     eax, [ebp+filename]
push    eax
call    ds:pathremovefilespecw
lea     eax, [ebp+filename]
push    eax
lea     eax, [ebp+destination]
push    104h
push    eax
call    ds:wcscpy_s
add     esp, 0ch
lea     eax, [ebp+filename]
push    offset src
push    eax
call    ds:pathappendw
lea     eax, [ebp+filename]
push    eax
call    ds:pathfileexistsw
test    eax, eax
jz      short loc_403148
cmp     [ebp+destination], 0
jnz     short loc_403111
xor     ecx, ecx
jmp     short loc_40312f
lea     ecx, [ebp+destination]
lea     edx, [ecx+2]
nop     word ptr [eax+eax+00h]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_403120
sub     ecx, edx
sar     ecx, 1
push    ecx
lea     eax, [ebp+destination]
mov     ecx, edi
push    eax
call    sub_402330
mov     eax, 1
jmp     loc_403473
push    1ch
lea     eax, [ebp+buffer]
mov     [ebp+buffer.baseaddress], 0
xorps   xmm0, xmm0
push    eax
push    offset sub_402e20
movups  xmmword ptr [ebp+buffer.allocationbase], xmm0
movq    qword ptr [ebp+buffer.protect], xmm0
call    ds:virtualquery
test    eax, eax
jz      loc_4032ad
push    20ah
lea     eax, [ebp+str]
push    0
push    eax
call    memset
add     esp, 0ch
lea     eax, [ebp+str]
push    104h
push    eax
push    [ebp+buffer.allocationbase]
call    esi
lea     eax, [ebp+str]
push    5ch
push    eax
call    ds:wcsrchr
mov     esi, eax
add     esp, 8
test    esi, esi
jz      loc_4032ad
nop     word ptr [eax+eax+00000000h]
xor     eax, eax
mov     [esi], ax
mov     [ebp+var_a3c], 7
mov     [ebp+var_a40], eax
mov     word ptr [ebp+pszpath], ax
cmp     [ebp+str], ax
jnz     short loc_4031f9
xor     ecx, ecx
jmp     short loc_403211
lea     ecx, [ebp+str]
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_403202
sub     ecx, edx
sar     ecx, 1
push    ecx
lea     eax, [ebp+str]
push    eax
lea     ecx, [ebp+pszpath]
call    sub_402330
push    1
push    offset asc_406e5c
lea     ecx, [ebp+pszpath]
mov     [ebp+var_4], 0
call    sub_402840
push    0ch
push    offset src
lea     ecx, [ebp+pszpath]
call    sub_402840
cmp     [ebp+var_a3c], 8
lea     eax, [ebp+pszpath]
cmovnb  eax, [ebp+pszpath]
push    eax
call    ds:pathfileexistsw
test    eax, eax
jnz     loc_4032f2
lea     eax, [ebp+str]
push    5ch
push    eax
call    ds:wcsrchr
mov     esi, eax
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_a3c]
add     esp, 8
cmp     eax, 8
jb      short loc_4032a5
inc     eax
push    eax
push    [ebp+pszpath]
call    sub_402670
test    esi, esi
jnz     loc_4031d0
push    offset aiswow64process
push    offset modulename
mov     [ebp+var_a6c], 0
call    ds:getmodulehandlew
push    eax
call    ds:getprocaddress
mov     esi, eax
test    esi, esi
jz      short loc_403343
lea     eax, [ebp+var_a6c]
push    eax
call    ds:getcurrentprocess
push    eax
call    esi
mov     ecx, eax
neg     ecx
sbb     ecx, ecx
and     ecx, [ebp+var_a6c]
jmp     short loc_403349
cmp     [ebp+str], 0
jnz     short loc_403300
xor     ecx, ecx
jmp     short loc_40331f
lea     ecx, [ebp+str]
lea     edx, [ecx+2]
nop     dword ptr [eax+00000000h]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_403310
sub     ecx, edx
sar     ecx, 1
push    ecx
lea     eax, [ebp+str]
mov     ecx, edi
push    eax
call    sub_402330
lea     ecx, [ebp+pszpath]
call    sub_402200
mov     eax, 1
jmp     loc_403473
mov     ecx, [ebp+var_a6c]
test    ecx, ecx
mov     edx, 201h
lea     ecx, [ebp+phkresult]
mov     eax, 1
push    ecx
cmovnz  eax, edx
push    eax
push    0
push    offset subkey
push    80000002h
call    ds:regopenkeyexw
test    eax, eax
jnz     loc_403409
lea     eax, [ebp+cbdata]
push    eax
lea     eax, [ebp+data]
push    eax
push    0
push    0
push    offset valuename
push    [ebp+phkresult]
call    ds:regqueryvalueexw
test    eax, eax
jnz     short loc_4033f5
lea     eax, [ebp+data]
push    eax
lea     eax, [ebp+filename]
push    104h
push    eax
call    ds:wcscpy_s
add     esp, 0ch
lea     eax, [ebp+filename]
push    offset src
push    eax
call    ds:pathappendw
lea     eax, [ebp+filename]
push    eax
call    ds:pathfileexistsw
test    eax, eax
jz      short loc_4033f5
lea     eax, [ebp+data]
mov     ecx, edi
push    eax
call    sub_4021b0
mov     esi, 1
jmp     short loc_4033f7
xor     esi, esi
push    [ebp+phkresult]
call    ds:regclosekey
test    esi, esi
jz      short loc_40340b
jmp     short loc_403471
xor     esi, esi
xor     eax, eax
mov     [ebp+var_a54], 7
mov     [ebp+var_a58], 0
mov     word ptr [ebp+block], ax
lea     ecx, [ebp+block]
mov     [ebp+var_4], 1
call    sub_403490
test    eax, eax
jz      short loc_403459
lea     eax, [ebp+block]
cmp     edi, eax
jz      short loc_403454
push    0ffffffffh
push    0
push    eax
mov     ecx, edi
call    sub_402430
mov     esi, 1
mov     eax, [ebp+var_a54]
cmp     eax, 8
jb      short loc_403471
inc     eax
push    eax
push    [ebp+block]
call    sub_402670
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, 13c8h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
push    0fa0h
lea     eax, [ebp+dwprocessid]
mov     [ebp+var_13c8], ecx
push    0
push    eax
call    memset
push    208h
lea     eax, [ebp+string1]
mov     [ebp+var_13bc], 0
push    0
push    eax
call    memset
add     esp, 18h
mov     [ebp+var_13c0], 0
lea     eax, [ebp+var_13bc]
xor     esi, esi
push    eax
push    0fa0h
lea     eax, [ebp+dwprocessid]
push    eax
call    ds:enumprocesses
test    eax, eax
jz      loc_40369b
mov     eax, [ebp+var_13bc]
test    eax, eax
jz      loc_40369b
push    ebx
shr     eax, 2
xor     ebx, ebx
mov     [ebp+var_13c4], eax
push    edi
test    eax, eax
jz      loc_403611
push    [ebp+ebx*4+dwprocessid]
push    0
push    410h
call    ds:openprocess
mov     edi, eax
test    edi, edi
jz      loc_403604
push    208h
lea     eax, [ebp+string1]
mov     [ebp+var_13c0], 0
push    0
push    eax
call    memset
add     esp, 0ch
lea     eax, [ebp+var_13bc]
push    eax
push    4
lea     eax, [ebp+var_13c0]
push    eax
push    edi
call    ds:enumprocessmodules
test    eax, eax
jz      short loc_4035fd
push    104h
lea     eax, [ebp+string1]
push    eax
push    [ebp+var_13c0]
push    edi
call    ds:getmodulebasenamew
test    eax, eax
jz      short loc_4035fd
push    offset string2
lea     eax, [ebp+string1]
push    eax
call    ds:lstrcmpiw
test    eax, eax
jnz     short loc_4035c2
lea     esi, [eax+1]
jmp     short loc_4035f9
push    offset aqqpctrayexe
lea     eax, [ebp+string1]
push    eax
call    ds:lstrcmpiw
test    eax, eax
jnz     short loc_4035dd
lea     esi, [eax+1]
jmp     short loc_4035f9
push    offset aqqpcrtpexe
lea     eax, [ebp+string1]
push    eax
call    ds:lstrcmpiw
test    eax, eax
mov     eax, 1
cmovz   esi, eax
test    esi, esi
jnz     short loc_403624
push    edi
call    ds:closehandle
inc     ebx
cmp     ebx, [ebp+var_13c4]
jb      loc_403531
pop     edi
pop     ebx
xor     eax, eax
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    20ah
lea     eax, [ebp+pszpath]
push    0
push    eax
call    memset
add     esp, 0ch
lea     eax, [ebp+pszpath]
push    104h
push    eax
push    0
push    edi
call    ds:getmodulefilenameexw
lea     eax, [ebp+pszpath]
push    eax
call    ds:pathremovefilespecw
push    edi
call    ds:closehandle
lea     ecx, [ebp+pszpath]
push    ecx
mov     ecx, [ebp+var_13c8]
call    sub_4021b0
mov     ecx, [ebp+var_13c8]
push    offset asc_406e5c
call    sub_402160
pop     edi
pop     ebx
mov     eax, 1
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
xor     eax, eax
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    208h
push    0
push    offset str
mov     dword_409518, 0
mov     dword_40951c, 0
call    memset
add     esp, 0ch
push    104h
push    offset str
push    0
call    ds:getmodulefilenamew
test    eax, eax
jz      short loc_403707
push    5ch
push    offset str
call    ds:wcsrchr
add     esp, 8
test    eax, eax
jz      short loc_403707
xor     ecx, ecx
mov     [eax], cx
call    sub_4037d0
mov     eax, offset dword_409518
retn
push    ebp
mov     ebp, esp
push    0fffffffeh
push    offset stru_407b90
push    offset __except_handler4
mov     eax, large fs:0
push    eax
sub     esp, 8
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     [ebp+ms_exc.registration.scopetable], eax
xor     eax, ebp
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     ecx, dword_409518
test    ecx, ecx
jz      short loc_4037b5
cmp     dword_40951c, 0
jnz     short loc_4037b5
mov     [ebp+ms_exc.registration.trylevel], 0
mov     eax, [ecx]
push    [ebp+arg_4]
push    offset aglobalqqmaster
push    ecx
call    dword ptr [eax+0ch]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, offset dword_409518
call    sub_4039d0
retn
mov     esp, [ebp+ms_exc.old_esp]
mov     dword_40951c, 1
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
xor     eax, eax
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 210h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    208h
lea     eax, [ebp+filename]
push    0
push    eax
call    memset
add     esp, 0ch
mov     [ebp+phmodule], 0
lea     eax, [ebp+phmodule]
push    eax
push    offset sub_404150
push    6
call    ds:getmodulehandleexw
test    eax, eax
jz      short loc_403870
mov     eax, [ebp+phmodule]
test    eax, eax
jz      short loc_403870
push    104h
lea     ecx, [ebp+filename]
push    ecx
push    eax
call    ds:getmodulefilenamew
test    eax, eax
jz      short loc_403870
lea     eax, [ebp+filename]
push    5ch
push    eax
call    ds:wcsrchr
add     esp, 8
test    eax, eax
jz      short loc_403857
add     eax, 2
jmp     short loc_40385d
lea     eax, [ebp+filename]
push    0ffffffffh
push    eax
push    20h
push    offset destination
call    ds:wcsncpy_s
add     esp, 10h
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 220h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
lea     eax, [ecx+48h]
push    offset alastexceptiond
push    eax
lea     ecx, [ebp+filename]
call    sub_404180
add     esp, 8
test    eax, eax
jnz     short loc_4038bc
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
push    0
push    0
push    4
push    0
push    1
push    0c0000000h
lea     eax, [ebp+filename]
push    eax
call    ds:createfilew
mov     esi, eax
cmp     esi, 0ffffffffh
jnz     short loc_4038f1
xor     eax, eax
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    0
lea     eax, [ebp+numberofbytesread]
mov     [ebp+numberofbytesread], 0
push    eax
push    8
lea     eax, [ebp+buffer]
xorps   xmm0, xmm0
push    eax
push    esi
movlpd  [ebp+buffer], xmm0
call    ds:readfile
test    eax, eax
jz      short loc_40392c
cmp     [ebp+numberofbytesread], 8
jz      short loc_403937
xorps   xmm0, xmm0
movlpd  [ebp+buffer], xmm0
push    ebx
push    edi
xor     edi, edi
push    edi
call    ds:_time64
mov     ecx, dword ptr [ebp+buffer+4]
mov     ebx, eax
mov     eax, dword ptr [ebp+buffer]
add     esp, 4
add     eax, 0a8c0h
mov     [ebp+var_220], ebx
mov     [ebp+var_21c], edx
adc     ecx, edi
cmp     edx, ecx
jl      short loc_4039a9
jg      short loc_403970
cmp     ebx, eax
jb      short loc_4039a9
push    0
push    0
push    0
push    esi
call    ds:setfilepointer
push    0
lea     eax, [ebp+numberofbytesread]
push    eax
push    8
lea     eax, [ebp+var_220]
push    eax
push    esi
call    ds:writefile
test    eax, eax
jz      short loc_4039a9
cmp     [ebp+numberofbytesread], 8
mov     eax, 1
cmovz   edi, eax
push    esi
call    ds:closehandle
mov     ecx, [ebp+var_4]
mov     eax, edi
pop     edi
pop     ebx
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, ecx
call    ds:isdebuggerpresent
test    eax, eax
jz      short loc_4039f8
mov     eax, dword_409794
cmp     eax, 5
jle     short loc_4039ee
mov     eax, 1
pop     esi
retn
inc     eax
mov     dword_409794, eax
xor     eax, eax
pop     esi
retn
mov     ecx, esi
call    sub_403880
neg     eax
pop     esi
sbb     eax, eax
inc     eax
retn
push    ebp
mov     ebp, esp
push    0fffffffeh
push    offset stru_407bb0
push    offset __except_handler4
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     [ebp+ms_exc.registration.scopetable], eax
xor     eax, ebp
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     [ebp+var_1c], ecx
mov     edx, [ecx]
test    edx, edx
jz      short loc_403a9a
cmp     dword ptr [ecx+4], 0
jnz     short loc_403a9a
mov     [ebp+ms_exc.registration.trylevel], 0
mov     eax, [edx]
push    [ebp+arg_0]
push    edx
call    dword ptr [eax+1ch]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, [ebp+var_1c]
call    sub_4039d0
retn
mov     esp, [ebp+ms_exc.old_esp]
mov     eax, [ebp+var_1c]
mov     dword ptr [eax+4], 1
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
xor     eax, eax
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0fffffffeh
push    offset stru_407bd0
push    offset __except_handler4
mov     eax, large fs:0
push    eax
sub     esp, 34h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     [ebp+ms_exc.registration.scopetable], eax
xor     eax, ebp
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     esi, [ebp+arg_0]
mov     edi, [esi]
test    edi, edi
jz      loc_403b93
cmp     dword ptr [esi+4], 0
jnz     loc_403b93
mov     [ebp+ms_exc.registration.trylevel], 0
push    2ch
push    0
lea     eax, [ebp+var_44]
push    eax
call    memset
add     esp, 0ch
mov     [ebp+var_44], 2ch
mov     eax, [ebp+arg_4]
mov     [ebp+var_40], eax
mov     eax, [ebp+arg_8]
mov     [ebp+var_3c], eax
mov     eax, [ebp+arg_c]
mov     [ebp+var_38], eax
lea     eax, [esi+8]
mov     [ebp+var_34], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_30], eax
mov     eax, [ebp+arg_14]
mov     [ebp+var_2c], eax
mov     eax, [ebp+arg_18]
mov     [ebp+var_28], eax
mov     eax, [ebp+arg_1c]
mov     [ebp+var_24], eax
lea     eax, [ebp+arg_20]
mov     [ebp+var_1c], eax
mov     eax, [edi]
lea     ecx, [ebp+var_44]
push    ecx
push    edi
call    dword ptr [eax+20h]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
mov     eax, 1
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_0]
call    sub_4039d0
retn
mov     esp, [ebp+ms_exc.old_esp]
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+4], 1
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
xor     eax, eax
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0fffffffeh
push    offset stru_407bf0
push    offset __except_handler4
mov     eax, large fs:0
push    eax
sub     esp, 38h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     [ebp+ms_exc.registration.scopetable], eax
xor     eax, ebp
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     esi, ecx
mov     [ebp+var_1c], esi
mov     edi, [esi]
test    edi, edi
jz      loc_403c98
cmp     dword ptr [esi+4], 0
jnz     loc_403c98
mov     [ebp+ms_exc.registration.trylevel], 0
push    2ch
push    0
lea     eax, [ebp+var_48]
push    eax
call    memset
add     esp, 0ch
mov     [ebp+var_48], 2ch
mov     eax, [ebp+arg_0]
mov     [ebp+var_44], eax
mov     [ebp+var_40], 5
mov     eax, [ebp+arg_8]
mov     [ebp+var_3c], eax
lea     eax, [esi+8]
mov     [ebp+var_38], eax
mov     eax, [ebp+arg_c]
mov     [ebp+var_34], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_30], eax
mov     eax, [ebp+arg_14]
mov     [ebp+var_2c], eax
mov     eax, [ebp+arg_18]
mov     [ebp+var_28], eax
mov     eax, [ebp+arg_1c]
mov     [ebp+var_20], eax
mov     eax, [edi]
lea     ecx, [ebp+var_48]
push    ecx
push    edi
call    dword ptr [eax+20h]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
mov     eax, 1
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    20h
mov     ecx, [ebp+var_1c]
call    sub_4039d0
retn
mov     esp, [ebp+ms_exc.old_esp]
mov     eax, [ebp+var_1c]
mov     dword ptr [eax+4], 1
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
xor     eax, eax
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    20h
push    ebp
mov     ebp, esp
push    0fffffffeh
push    offset stru_407c10
push    offset __except_handler4
mov     eax, large fs:0
push    eax
sub     esp, 38h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     [ebp+ms_exc.registration.scopetable], eax
xor     eax, ebp
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+ms_exc.old_esp], esp
mov     esi, ecx
mov     [ebp+var_1c], esi
mov     edi, [esi]
test    edi, edi
jz      loc_403d98
cmp     dword ptr [esi+4], 0
jnz     loc_403d98
mov     [ebp+ms_exc.registration.trylevel], 0
push    2ch
push    0
lea     eax, [ebp+var_48]
push    eax
call    memset
add     esp, 0ch
mov     [ebp+var_48], 2ch
mov     eax, [ebp+arg_0]
mov     [ebp+var_44], eax
mov     [ebp+var_40], 5
mov     eax, [ebp+arg_8]
mov     [ebp+var_3c], eax
lea     eax, [esi+8]
mov     [ebp+var_38], eax
mov     eax, [ebp+arg_c]
mov     [ebp+var_34], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_30], eax
mov     eax, [ebp+arg_14]
mov     [ebp+var_2c], eax
mov     eax, [ebp+arg_18]
mov     [ebp+var_24], eax
mov     eax, [ebp+arg_1c]
mov     [ebp+var_20], eax
mov     eax, [edi]
lea     ecx, [ebp+var_48]
push    ecx
push    edi
call    dword ptr [eax+20h]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
mov     eax, 1
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    20h
mov     ecx, [ebp+var_1c]
call    sub_4039d0
retn
mov     esp, [ebp+ms_exc.old_esp]
mov     eax, [ebp+var_1c]
mov     dword ptr [eax+4], 1
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
xor     eax, eax
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    20h
push    esi
push    edi
call    sub_4036b0
mov     ecx, offset str
call    sub_404070
mov     esi, ds:freelibrary
mov     edi, eax
test    edi, edi
jz      short loc_403de6
push    offset agetqmlogex
push    edi
call    ds:getprocaddress
test    eax, eax
jz      short loc_403de3
call    eax
test    eax, eax
jnz     short loc_403e29
push    edi
call    esi
push    ecx
mov     edx, offset str
mov     dword_409518, 0
call    sub_403f90
add     esp, 4
mov     ecx, offset str
call    sub_404070
mov     edi, eax
test    edi, edi
jz      short loc_403e27
push    offset agetqmlogex
push    edi
call    ds:getprocaddress
test    eax, eax
jz      short loc_403e24
call    eax
test    eax, eax
jnz     short loc_403e29
push    edi
call    esi
xor     eax, eax
push    offset str
push    ecx
mov     dword_409518, eax
call    sub_403720
pop     edi
mov     eax, offset dword_409518
pop     esi
retn
push    ebp
mov     ebp, esp
push    5
call    sub_402070
mov     ecx, eax
call    sub_403a10
test    eax, eax
jz      short loc_403e86
lea     eax, [ebp+arg_10]
push    eax
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
push    0
push    ecx
push    0
call    sub_402070
mov     ecx, eax
call    sub_403cb0
pop     ebp
retn
push    ebp
mov     ebp, esp
push    5
call    sub_402070
mov     ecx, eax
call    sub_403a10
test    eax, eax
jz      short loc_403ec6
lea     eax, [ebp+arg_10]
push    eax
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
push    0
push    ecx
push    0
call    sub_402070
mov     ecx, eax
call    sub_403bb0
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
push    offset aiswow64process
xor     esi, esi
mov     [ebp+hkey], ecx
push    offset modulename
mov     ebx, edx
mov     [ebp+phkresult], esi
mov     [ebp+var_4], esi
call    ds:getmodulehandlew
push    eax
call    ds:getprocaddress
mov     edi, eax
test    edi, edi
jz      short loc_403f1b
lea     eax, [ebp+var_4]
push    eax
call    ds:getcurrentprocess
push    eax
call    edi
mov     ecx, eax
neg     ecx
sbb     ecx, ecx
and     ecx, [ebp+var_4]
jmp     short loc_403f1e
mov     ecx, [ebp+var_4]
lea     eax, [ebp+phkresult]
test    ecx, ecx
push    eax
mov     edx, 201h
mov     eax, 1
cmovnz  eax, edx
push    eax
push    0
push    ebx
push    [ebp+hkey]
call    ds:regopenkeyexw
test    eax, eax
jnz     short loc_403f78
mov     edi, [ebp+lpdata]
lea     eax, [ebp+hkey]
push    eax
push    edi
push    0
push    0
push    [ebp+lpvaluename]
mov     [ebp+hkey], 208h
push    [ebp+phkresult]
call    ds:regqueryvalueexw
test    eax, eax
jnz     short loc_403f6f
mov     [edi+206h], ax
lea     esi, [eax+1]
push    [ebp+phkresult]
call    ds:regclosekey
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 210h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, ds:wcsncmp
push    11h
push    offset ahkeycurrentuse
push    offset string1
mov     [ebp+var_210], edx
call    esi
add     esp, 0ch
test    eax, eax
jnz     short loc_403fd2
mov     ebx, 80000001h
mov     esi, (offset string1+24h)
jmp     short loc_403ff1
push    12h
push    offset ahkeylocalmachi_0
push    offset string1
call    esi
add     esp, 0ch
test    eax, eax
jnz     short loc_40405d
mov     ebx, 80000002h
mov     esi, (offset string1+26h)
push    edi
push    5ch
push    esi
call    ds:wcsrchr
mov     edi, eax
add     esp, 8
test    edi, edi
jnz     short loc_404015
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     eax, edi
sub     eax, esi
sar     eax, 1
push    eax
push    esi
lea     eax, [ebp+destination]
push    104h
push    eax
call    ds:wcsncpy_s
add     esp, 0ch
lea     eax, [edi+2]
lea     edx, [ebp+destination]
mov     ecx, ebx
push    [ebp+var_210]
push    eax
call    sub_403ed0
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
xor     eax, eax
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
test    ecx, ecx
jz      loc_404135
cmp     word ptr [ecx], 0
jz      loc_404135
push    esi
mov     esi, ecx
lea     edx, [esi+2]
nop     dword ptr [eax+eax+00h]
mov     ax, [esi]
add     esi, 2
test    ax, ax
jnz     short loc_4040a0
sub     esi, edx
sar     esi, 1
lea     eax, [esi+0dh]
cmp     eax, 104h
jb      short loc_4040ca
xor     eax, eax
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ecx
lea     eax, [ebp+destination]
push    104h
push    eax
call    ds:wcscpy_s
add     esp, 0ch
cmp     [ebp+esi*2+var_20e], 5ch
jz      short loc_4040f9
mov     eax, 5ch
mov     [ebp+esi*2+destination], ax
inc     esi
mov     eax, 104h
sub     eax, esi
push    offset source
push    eax
lea     eax, [ebp+destination]
lea     eax, [eax+esi*2]
push    eax
call    ds:wcscpy_s
add     esp, 0ch
lea     eax, [ebp+destination]
push    eax
call    ds:loadlibraryw
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_4]
xor     eax, eax
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
lea     eax, [ebp+phmodule]
mov     [ebp+phmodule], 0
push    eax
push    offset sub_404150
push    6
call    ds:getmodulehandleexw
neg     eax
sbb     eax, eax
and     eax, [ebp+phmodule]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    edi
mov     edi, [ebp+arg_4]
mov     ebx, ecx
test    edi, edi
jz      loc_404291
cmp     word ptr [edi], 0
jz      loc_404291
push    esi
mov     esi, edi
lea     ecx, [esi+2]
mov     ax, [esi]
add     esi, 2
test    ax, ax
jnz     short loc_4041a2
sub     esi, ecx
sar     esi, 1
cmp     esi, 104h
jnb     loc_40426d
mov     ecx, [ebp+source]
test    ecx, ecx
jz      short loc_404231
cmp     [ecx], ax
jz      short loc_404231
mov     edi, ecx
lea     edx, [edi+2]
xchg    ax, ax
mov     ax, [edi]
add     edi, 2
test    ax, ax
jnz     short loc_4041d0
sub     edi, edx
lea     eax, [esi+1]
sar     edi, 1
add     eax, edi
cmp     eax, 104h
jnb     loc_40426d
mov     esi, ds:wcscpy_s
push    ecx
push    104h
push    ebx
call    esi
add     esp, 0ch
cmp     word ptr [ebx+edi*2-2], 5ch
jz      short loc_404213
mov     eax, 5ch
mov     [ebx+edi*2], ax
inc     edi
push    [ebp+arg_4]
mov     eax, 104h
sub     eax, edi
push    eax
lea     eax, [ebx+edi*2]
push    eax
call    esi
add     esp, 0ch
mov     eax, 1
pop     esi
pop     edi
pop     ebx
pop     ebp
retn
push    104h
push    ebx
push    0
call    ds:getmodulefilenamew
test    eax, eax
jz      short loc_40426d
push    5ch
push    ebx
call    ds:wcsrchr
mov     ecx, eax
add     esp, 8
xor     eax, eax
test    ecx, ecx
jz      short loc_40426f
add     ecx, 2
mov     edx, ecx
sub     edx, ebx
sar     edx, 1
mov     [ecx], ax
lea     eax, [edx+esi]
cmp     eax, 104h
jb      short loc_404274
xor     eax, eax
pop     esi
pop     edi
pop     ebx
pop     ebp
retn
mov     eax, 104h
push    edi
sub     eax, edx
push    eax
push    ecx
call    ds:wcscpy_s
add     esp, 0ch
mov     eax, 1
pop     esi
pop     edi
pop     ebx
pop     ebp
retn
pop     edi
xor     eax, eax
pop     ebx
pop     ebp
retn
mov     eax, offset dword_4097a0
retn
push    offset @_guard_check_icall_nop@4
call    _set_invalid_parameter_handler
pop     ecx
retn
and     dword ptr [ecx+14h], 0
mov     eax, ecx
and     dword ptr [ecx+18h], 0
mov     dword ptr [ecx], 3e8h
mov     dword ptr [ecx+4], 3
mov     dword ptr [ecx+8], 2710h
mov     dword ptr [ecx+0ch], 2
mov     dword ptr [ecx+10h], 1
retn
push    esi
mov     esi, ecx
cmp     dword ptr [esi+8], 0
jnz     short loc_4042f0
call    sub_402000
mov     [esi+8], eax
xor     eax, eax
mov     ecx, 80004005h
cmp     [esi+8], eax
pop     esi
cmovz   eax, ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
push    esi
mov     esi, ecx
push    edi
push    dword ptr [esi+4]
call    ds:resetevent
xor     edi, edi
push    3
mov     [esi+0ch], edi
call    ds:htons
movzx   eax, ax
lea     ecx, [ebp+var_20]
mov     [ebp+var_4], eax
call    sub_4042b2
mov     eax, [ebp+arg_0]
lea     edx, [ebp+var_20]
mov     ecx, [esi+8]
neg     eax
push    edi
sbb     eax, eax
mov     [ebp+var_20], 1f4h
and     eax, 3
mov     [ebp+var_18], 5dch
mov     [ebp+var_1c], eax
mov     eax, [ebp+arg_4]
push    edi
neg     eax
push    edx
sbb     eax, eax
lea     edx, [ebp+var_4]
push    esi
and     eax, 2
push    2
mov     [ebp+var_14], eax
mov     eax, [ecx]
push    edx
push    44h
call    dword ptr [eax+10h]
test    eax, eax
jnz     short loc_40437c
mov     eax, [esi]
mov     ecx, esi
push    edi
push    3
push    edi
push    edi
push    edi
call    dword ptr [eax]
push    0ffffffffh
push    dword ptr [esi+4]
call    ds:waitforsingleobject
mov     eax, [esi+0ch]
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
cmp     [ebp+arg_c], 0
jnz     short loc_4043aa
cmp     [ebp+arg_8], 0
jbe     short loc_4043aa
mov     dword ptr [ecx+0ch], 1
jmp     short loc_4043ae
and     dword ptr [ecx+0ch], 0
push    dword ptr [ecx+4]
call    ds:setevent
pop     ebp
retn    14h
push    esi
mov     esi, ecx
mov     ecx, [esi+8]
test    ecx, ecx
jz      short loc_4043d8
mov     eax, [ecx]
push    esi
call    dword ptr [eax+18h]
push    dword ptr [esi+8]
call    sub_402050
and     dword ptr [esi+8], 0
pop     ecx
xor     eax, eax
pop     esi
retn
push    4
mov     eax, offset loc_405716
call    __eh_prolog3
mov     esi, ecx
mov     [ebp+var_10], esi
and     dword ptr [esi], 0
push    [ebp+lpname]
and     [ebp+var_4], 0
push    [ebp+binitialstate]
push    [ebp+bmanualreset]
push    [ebp+lpeventattributes]
call    sub_40447e
test    eax, eax
jnz     short loc_40440e
call    sub_404463
mov     eax, esi
call    __eh_epilog3
retn    10h
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7ccsping@@6b@
cmp     dword ptr [esi+4], 0
jz      short loc_404434
push    dword ptr [esi+4]
call    ds:closehandle
and     dword ptr [esi+4], 0
pop     esi
retn
push    esi
mov     esi, ecx
cmp     dword ptr [esi], 0
jz      short loc_404449
push    dword ptr [esi]
call    ds:closehandle
and     dword ptr [esi], 0
pop     esi
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+pexceptionobject]
mov     [ebp+pexceptionobject], eax
lea     eax, [ebp+pexceptionobject]
push    offset __ti1?avcatlexception@atl@@
push    eax
call    _cxxthrowexception
call    ds:getlasterror
movzx   ecx, ax
or      ecx, 80070000h
test    eax, eax
cmovle  ecx, eax
push    ecx
call    sub_40444b
push    ebp
mov     ebp, esp
push    esi
push    [ebp+lpname]
mov     esi, ecx
push    [ebp+binitialstate]
push    [ebp+bmanualreset]
push    [ebp+lpeventattributes]
call    ds:createeventw
xor     ecx, ecx
mov     [esi], eax
test    eax, eax
pop     esi
setnz   cl
mov     eax, ecx
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 194h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
lea     eax, [ebp+wsadata]
push    eax
push    202h
call    ds:wsastartup
test    eax, eax
jz      short loc_4044d3
xor     eax, eax
jmp     short loc_404529
push    ebx
mov     ebx, ds:socket
push    esi
push    edi
push    0
push    1
push    2
mov     esi, 3e8h
call    ebx
mov     edi, ds:closesocket
cmp     eax, 0ffffffffh
jz      short loc_4044f8
push    eax
call    edi
inc     esi
push    0
push    2
push    2
call    ebx
cmp     eax, 0ffffffffh
jz      short loc_40450b
push    eax
call    edi
add     esi, 0ah
push    0
push    3
push    2
call    ebx
cmp     eax, 0ffffffffh
jz      short loc_40451e
push    eax
call    edi
add     esi, 64h
call    ds:wsacleanup
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    esi
push    edi
lea     ecx, [ebp+var_1]
call    sub_4013e0
call    sub_4044a6
xor     edi, edi
mov     [ebp+var_14], offset ??_7ccsping@@6b@
push    edi
push    edi
push    1
push    edi
lea     ecx, [ebp+var_10]
mov     esi, eax
call    sub_4043dc
lea     ecx, [ebp+var_14]
mov     [ebp+var_c], edi
mov     [ebp+var_8], edi
call    sub_4042df
test    eax, eax
js      short loc_4045ae
push    edi
push    1
lea     ecx, [ebp+var_14]
add     esi, 0f4240h
call    sub_4042ff
test    eax, eax
jz      short loc_404591
add     esi, 186a0h
push    edi
push    1
lea     ecx, [ebp+var_14]
call    sub_4042ff
test    eax, eax
jz      short loc_4045a6
add     esi, 2710h
lea     ecx, [ebp+var_14]
call    sub_4043bb
lea     ecx, [ebp+var_14]
call    sub_404418
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    10h
push    esi
mov     esi, ecx
call    sub_404613
mov     eax, 400000h
mov     dword ptr [esi], 38h
lea     ecx, [esi+14h]
mov     [esi+8], eax
mov     [esi+4], eax
mov     dword ptr [esi+0ch], 0e00h
mov     dword ptr [esi+10h], offset dword_406238
call    sub_4015a0
test    eax, eax
jns     short loc_40460f
call    ds:isdebuggerpresent
test    eax, eax
jz      short loc_404608
push    offset outputstring
call    ds:outputdebugstringw
mov     byte_409514, 1
mov     eax, esi
pop     esi
retn
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
push    18h
push    edi
lea     eax, [esi+14h]
push    eax
call    memset
add     esp, 0ch
mov     [esi+2ch], edi
mov     [esi+30h], edi
mov     eax, esi
mov     [esi+34h], edi
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
lea     eax, [esi+14h]
push    eax
call    ds:deletecriticalsection
lea     ecx, [esi+2ch]
pop     esi
jmp     $+5
push    esi
mov     esi, ecx
cmp     dword ptr [esi], 0
jz      short loc_40465f
push    dword ptr [esi]
call    free
and     dword ptr [esi], 0
pop     ecx
and     dword ptr [esi+4], 0
and     dword ptr [esi+8], 0
pop     esi
retn
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7type_info@@6b@
jz      short loc_40468a
push    0ch
push    esi
call    sub_404691
pop     ecx
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+block]
call    j_free
pop     ecx
pop     ebp
retn
call    ___scrt_initialize_default_local_stdio_options
xor     eax, eax
retn
call    sub_404f0e
call    usermatherrorfunction
push    eax
call    _set_new_mode
pop     ecx
retn
xor     eax, eax
inc     eax
retn
push    offset ___scrt_unhandled_exception_filter@4
call    ds:setunhandledexceptionfilter
retn
xor     eax, eax
retn
push    offset listhead
call    ds:initializeslisthead
retn
xor     eax, eax
cmp     dword_409010, eax
setz    al
retn
mov     eax, offset dword_4097ac
retn
mov     eax, offset dword_4097a8
retn
push    ebx
push    esi
mov     esi, offset dword_407958
mov     ebx, offset dword_407958
cmp     esi, ebx
jnb     short loc_405242
push    edi
mov     edi, [esi]
test    edi, edi
jz      short loc_40523a
mov     ecx, edi
call    j_@_guard_check_icall_nop@4
call    edi
add     esi, 4
cmp     esi, ebx
jb      short loc_40522b
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, offset dword_407960
mov     ebx, offset dword_407960
cmp     esi, ebx
jnb     short loc_40526d
push    edi
mov     edi, [esi]
test    edi, edi
jz      short loc_405265
mov     ecx, edi
call    j_@_guard_check_icall_nop@4
call    edi
add     esi, 4
cmp     esi, ebx
jb      short loc_405256
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7bad_alloc@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
and     dword ptr [ecx+4], 0
mov     eax, ecx
and     dword ptr [ecx+8], 0
mov     dword ptr [ecx+4], offset abadallocation
mov     dword ptr [ecx], offset ??_7bad_alloc@std@@6b@
retn
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    ??0exception@std@@qae@abv01@@z
mov     dword ptr [esi], offset ??_7bad_array_new_length@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
and     dword ptr [ecx+4], 0
mov     eax, ecx
and     dword ptr [ecx+8], 0
mov     dword ptr [ecx+4], offset abadarraynewlen
mov     dword ptr [ecx], offset ??_7bad_array_new_length@std@@6b@
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     ecx, [ebp+pexceptionobject]
call    sub_4052dd
push    offset __ti2?avbad_alloc@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    _cxxthrowexception
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     ecx, [ebp+pexceptionobject]
call    sub_405310
push    offset __ti3?avbad_array_new_length@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    _cxxthrowexception
mov     al, 1
retn
mov     ecx, [ebp+var_274]
jmp     loc_4015d0
lea     ecx, [ebp+lpfilename]
jmp     sub_402200
lea     ecx, [ebp+lpfilename]
jmp     sub_402200
lea     ecx, [ebp+lplibfilename]
jmp     sub_402200
lea     ecx, [ebp+buffer.allocationbase]
jmp     sub_402200
call    ds:__std_terminate
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-274h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_407968
jmp     __cxxframehandler3
call    ds:__std_terminate
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4079bc
jmp     __cxxframehandler3
push    18h
mov     eax, [ebp+block]
push    eax
call    sub_404691
add     esp, 8
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_4079e8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_407a48
jmp     __cxxframehandler3
mov     eax, [ebp+var_10]
and     eax, 1
jz      locret_405678
and     [ebp+var_10], 0fffffffeh
mov     ecx, [ebp+var_14]
jmp     sub_402200
retn
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_407ad4
jmp     __cxxframehandler3
lea     ecx, [ebp+source]
jmp     sub_402200
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_407b00
jmp     __cxxframehandler3
lea     ecx, [ebp+pszpath]
jmp     sub_402200
lea     ecx, [ebp+block]
jmp     sub_402200
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0a90h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_407b58
jmp     __cxxframehandler3
mov     ecx, [ebp+var_10]
jmp     loc_404436
mov     edx, [esp-4+bmanualreset]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_407c34
jmp     __cxxframehandler3
mov     ecx, offset dword_40916c
jmp     loc_404636
offset __catch$??2@yapaxiabunothrow_t@std@@@z$0>
offset __cta2?avbad_alloc@std@@>
offset __cta3?avbad_array_new_length@std@@>