push    0
push    0
push    offset criticalsection
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_1000103c
call    ds:getlasterror
test    eax, eax
jle     short loc_10001027
movzx   eax, ax
or      eax, 80070000h
test    eax, eax
jns     short loc_1000103c
push    offset sub_10014f30
mov     byte_10020805, 1
call    _atexit
pop     ecx
retn
push    offset sub_10014f30
mov     dword_1001f194, 28h
call    _atexit
pop     ecx
retn
mov     dword_100207d8, offset sub_10005f90
mov     dword_100207dc, offset sub_10005fa0
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10014fe0
mov     eax, large fs:0
push    eax
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    0
push    0
mov     [ebp+var_4], 0
push    offset stru_1002086c
mov     dword_10020788, offset dword_1002085c
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_100010e5
call    ds:getlasterror
test    eax, eax
jle     short loc_100010da
movzx   eax, ax
or      eax, 80070000h
test    eax, eax
jns     short loc_100010e5
mov     byte_10020805, 1
jmp     short loc_100010ef
mov     dword_10020860, 24h
push    1
call    sub_100054c0
sub     esp, 8
mov     dword_1002085c, offset ??_7cschedulermodule@@6b@
call    sub_10006180
push    offset sub_10014fe0
call    _atexit
add     esp, 4
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
mov     ecx, offset dword_100203c0
call    sub_10012b66
push    offset sub_10015040
call    _atexit
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, [ebp+arg_4]
lea     ecx, [ebp+var_4]
mov     dword ptr [edi], 0
call    sub_10002b10
mov     esi, eax
test    esi, esi
jns     short loc_1000117f
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, [ebp+var_4]
push    ebx
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebx]
push    edi
push    [ebp+this]
mov     esi, [eax]
mov     ecx, esi
push    ebx
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebx]
mov     edi, eax
push    ebx
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     ebx
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, [ebp+arg_4]
lea     ecx, [ebp+var_4]
mov     dword ptr [edi], 0
call    sub_10002c30
mov     esi, eax
test    esi, esi
jns     short loc_100011ff
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, [ebp+var_4]
push    ebx
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebx]
push    edi
push    [ebp+this]
mov     esi, [eax]
mov     ecx, esi
push    ebx
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebx]
mov     edi, eax
push    ebx
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     ebx
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, dword ptr [ebp+arglist]
mov     ebx, ecx
push    edi
push    offset aversion
call    sub_10010e70
test    eax, eax
js      loc_10001332
push    ecx
lea     eax, [ebp+buffer]
mov     ecx, ebx
push    eax
call    sub_100110e0
test    eax, eax
js      loc_10001332
push    esi
push    offset au
push    [ebp+buffer]
call    sub_10010cc0
add     esp, 0ch
lea     edi, [eax-1]
neg     edi
sbb     edi, edi
and     edi, 80070057h
cmp     byte ptr [ebx+0fh], 0
jz      short loc_10001304
mov     ecx, [ebx]
mov     eax, [ecx]
mov     esi, [eax+18h]
lea     eax, [ebp+var_8]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_100012da
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     short loc_1000130d
cmp     [ebp+var_8], 0fh
jz      short loc_10001304
mov     ecx, [ebp+4]
mov     esi, 80004005h
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, ebx
call    sub_100111d0
mov     esi, eax
test    esi, esi
jns     short loc_10001330
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, edi
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001350
mov     eax, large fs:0
push    eax
sub     esp, 0ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     ecx, [ebp+arg_4]
mov     [ebp+var_14], 0
mov     [ebp+var_4], 0
mov     eax, [ecx]
mov     esi, [eax]
lea     eax, [ebp+var_14]
push    eax
push    offset dword_10017de0
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_100013b5
mov     [ebp+var_4], 1
jmp     short loc_10001401
mov     esi, [ebp+var_14]
mov     ecx, ebx
push    [ebp+arg_0]
mov     [ebp+var_18], esi
call    sub_10010e70
mov     edi, eax
test    edi, edi
js      short loc_100013fa
mov     eax, [esi]
push    dword ptr [ebx]
push    [ebp+var_18]
mov     esi, [eax+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_100013f1
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_100013fa
mov     ecx, ebx
call    sub_10010fc0
mov     edi, eax
mov     [ebp+var_4], 2
mov     ecx, [ebp+var_14]
test    ecx, ecx
jz      short loc_10001418
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, ecx
push    esi
push    edi
mov     edi, [ebp+lpiid]
mov     edx, [ebx]
push    0
push    offset aid
push    edx
mov     eax, [edx]
mov     esi, [eax+28h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10001483
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     short loc_100014bc
cmp     esi, 1
jnz     short loc_100014a2
mov     esi, 80070490h
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebx]
push    0
mov     eax, [ecx]
mov     esi, [eax+40h]
lea     eax, [ebp+lpsz]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_100014d5
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [ebp+lpsz]
test    eax, eax
jnz     short loc_100014f4
mov     eax, 80070057h
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    edi
push    eax
call    ds:iidfromstring
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10001510
mov     eax, large fs:0
push    eax
sub     esp, 10h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     [ebp+var_18], eax
mov     [ebp+var_14], 0
mov     [ebp+var_4], 0
mov     eax, [edx]
mov     esi, [eax]
lea     eax, [ebp+var_14]
push    eax
push    offset dword_10017de0
push    edx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000157b
mov     [ebp+var_4], 1
jmp     short loc_100015e4
mov     ecx, [ebx]
mov     eax, [ebp+var_14]
push    0
push    [ebp+var_18]
mov     [ebp+var_1c], eax
mov     eax, [ecx]
push    0
push    ecx
mov     esi, [eax+6ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_100015ac
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_100015dd
push    ecx
push    [ebp+var_1c]
mov     ecx, ebx
call    sub_100112b0
mov     edi, eax
test    edi, edi
jns     short loc_100015c9
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_100015dd
mov     eax, [ebx]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+3ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
mov     [ebp+var_4], 2
mov     ecx, [ebp+var_14]
test    ecx, ecx
jz      short loc_100015fb
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
movups  xmm0, xmmword ptr [eax+38h]
mov     eax, [ebp+arg_4]
movups  xmmword ptr [eax], xmm0
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
movups  xmm0, xmmword ptr [eax]
xor     eax, eax
movups  xmmword ptr [ecx+38h], xmm0
pop     ebp
retn    8
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+24h+var_4], eax
mov     eax, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, [edi-10h]
lea     ebx, [edi-10h]
mov     [esp+30h+var_24], eax
mov     eax, [ebx+4]
mov     [esp+30h+var_20], edi
mov     [esp+30h+var_1c], eax
cmp     esi, eax
jz      short loc_100016af
cmp     dword ptr [esi], 0
jz      short loc_100016a6
mov     ecx, esi
call    sub_100024b0
mov     eax, [esp+30h+var_1c]
add     esi, 4
cmp     esi, eax
jnz     short loc_10001696
mov     esi, [ebx]
push    [esp+30h+var_24]
lea     ecx, [esp+34h+var_18]
mov     [ebx+4], esi
mov     [esp+34h+var_10], 0
mov     [esp+34h+var_18], 0
mov     [esp+34h+var_14], 0
mov     [esp+34h+var_c], 101h
call    sub_10010d80
mov     esi, eax
test    esi, esi
js      loc_100017ae
lea     eax, [edi+24h]
push    eax
push    ecx
lea     ecx, [esp+38h+var_18]
call    sub_10001440
mov     esi, eax
test    esi, esi
js      loc_100017ae
lea     eax, [esp+30h+arglist]
push    eax
push    ecx
lea     ecx, [esp+38h+var_18]
call    sub_10001250
lea     ecx, [esp+30h+var_24]
call    sub_10002c30
mov     esi, eax
test    esi, esi
js      loc_100017a4
mov     edi, [esp+30h+var_24]
push    edi
mov     [esp+34h+var_1c], edi
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
push    edi
push    offset aaddtoqueueacti
lea     ecx, [esp+38h+var_18]
call    sub_10001350
test    eax, eax
js      short loc_10001781
mov     ecx, [esp+30h+var_20]
mov     eax, [ecx-0ch]
cmp     eax, [ecx-8]
jz      short loc_10001762
mov     [eax], edi
add     dword ptr [ebx+4], 4
jmp     short loc_10001710
lea     ecx, [esp+30h+var_1c]
push    ecx
push    eax
mov     ecx, ebx
call    sub_10002580
cmp     [esp+30h+var_1c], 0
jz      short loc_10001710
lea     ecx, [esp+30h+var_1c]
call    sub_100024b0
jmp     short loc_10001710
test    edi, edi
jz      short loc_1000178e
lea     ecx, [esp+30h+var_1c]
call    sub_100024b0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+24h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     ecx, [esp+30h+var_4]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 58h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+sz]
push    esi
push    edi
mov     edi, [ebp+arg_4]
push    27h
push    eax
lea     eax, [ebx+24h]
mov     [ebp+var_58], edi
push    eax
call    ds:stringfromguid2
test    eax, eax
jg      short loc_10001831
mov     ecx, [ebp+4]
mov     edx, 80004005h
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     esi, 80004005h
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [edi]
mov     esi, [eax+1ch]
lea     eax, [ebp+sz]
push    eax
push    0
push    offset aid
push    0
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10001873
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     esi, [ebx-10h]
mov     ebx, [ebx-0ch]
cmp     esi, ebx
jz      short loc_1000189d
nop     dword ptr [eax]
push    ecx
push    dword ptr [esi]
lea     ecx, [ebp+var_58]
push    offset aaddtoqueueacti
call    sub_10001510
mov     edi, eax
test    edi, edi
js      short loc_100018b2
add     esi, 4
cmp     esi, ebx
jnz     short loc_10001880
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     ecx, [ebp+var_4]
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    esi
push    edi
mov     edi, ecx
mov     esi, [edi]
test    esi, esi
jz      short loc_10001947
push    ebx
mov     ebx, [edi+4]
cmp     esi, ebx
jz      short loc_10001907
cmp     dword ptr [esi], 0
jz      short loc_100018fe
mov     ecx, esi
call    sub_100024b0
add     esi, 4
cmp     esi, ebx
jnz     short loc_100018f2
mov     esi, [edi]
mov     eax, [edi+8]
sub     eax, esi
and     eax, 0fffffffch
pop     ebx
cmp     eax, 1000h
jb      short loc_10001929
mov     ecx, [esi-4]
add     eax, 23h
sub     esi, ecx
add     esi, 0fffffffch
cmp     esi, 1fh
ja      short loc_1000194a
mov     esi, ecx
push    eax
push    esi
call    sub_10012c63
mov     dword ptr [edi], 0
add     esp, 8
mov     dword ptr [edi+4], 0
mov     dword ptr [edi+8], 0
pop     edi
pop     esi
retn
call    ds:_invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
mov     ecx, [eax+8]
mov     esi, [eax+4]
mov     eax, esi
push    edi
mov     edi, [ebp+arg_c]
cmp     esi, ecx
jz      short loc_1000199f
mov     edx, [ebp+arg_4]
nop     dword ptr [eax+00000000h]
cmp     [eax], edx
jz      short loc_1000199f
add     eax, 4
cmp     eax, ecx
jnz     short loc_10001990
xor     al, al
jmp     short loc_100019b0
cmp     eax, ecx
jnz     short loc_100019a7
xor     al, al
jmp     short loc_100019b0
sub     eax, esi
sar     eax, 2
mov     [ebx], eax
mov     al, 1
mov     ecx, [ebp+var_4]
mov     [edi], al
xor     ecx, ebp
pop     edi
pop     esi
xor     eax, eax
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_8]
push    edi
mov     dword ptr [ebx], 0
mov     edi, [eax+4]
mov     eax, [eax+8]
sub     eax, edi
sar     eax, 2
cmp     ecx, eax
jb      short loc_100019fe
pop     edi
mov     eax, 8000000bh
pop     ebx
pop     ebp
retn    0ch
mov     edi, [edi+ecx*4]
push    esi
push    edi
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
mov     [ebx], edi
xor     eax, eax
pop     edi
pop     ebx
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+8]
sub     ecx, [eax+4]
mov     eax, [ebp+arg_4]
sar     ecx, 2
mov     [eax], ecx
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 8
mov     ecx, [ebp+arg_0]
lea     edx, [ebp+var_8]
mov     eax, [ecx+8]
mov     [ebp+var_4], eax
mov     eax, [ecx+4]
mov     ecx, [ebp+arg_4]
mov     [ebp+var_8], eax
lea     eax, [ebp+var_4]
push    eax
call    sub_100026e0
add     esp, 4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
add     ecx, 0fffffff0h
push    esi
push    [ebp+arg_4]
mov     eax, [ecx]
push    ecx
mov     esi, [eax+1ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     eax, [ecx]
mov     [ebp+var_10], ecx
mov     esi, [eax+0ch]
lea     eax, [ebp+var_c]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10001af3
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     edx, [ebx-8]
sub     edx, [ebx-0ch]
mov     eax, [ebx-4]
sub     eax, [ebx-0ch]
mov     esi, [ebp+var_c]
sar     edx, 2
add     edx, esi
sar     eax, 2
cmp     edx, eax
jbe     short loc_10001b26
cmp     edx, 3fffffffh
ja      loc_10001bd9
push    edx
lea     ecx, [ebx-0ch]
call    sub_10002400
mov     esi, [ebp+var_c]
push    edi
xor     edi, edi
test    esi, esi
jz      short loc_10001b97
nop     dword ptr [eax]
mov     ecx, [ebp+var_10]
mov     [ebp+var_8], 0
mov     eax, [ecx]
mov     esi, [eax+10h]
lea     eax, [ebp+var_8]
push    eax
push    offset dword_10017dac
push    edi
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_10001bac
mov     eax, ebx
mov     ecx, [eax-8]
cmp     ecx, [eax-4]
jz      short loc_10001b76
mov     eax, [ebp+var_8]
mov     [ebp+var_8], 0
mov     [ecx], eax
add     dword ptr [ebx-8], 4
jmp     short loc_10001b83
lea     eax, [ebp+var_8]
push    eax
push    ecx
lea     ecx, [ebx-0ch]
call    sub_10002580
cmp     [ebp+var_8], 0
jz      short loc_10001b91
lea     ecx, [ebp+var_8]
call    sub_100024b0
inc     edi
cmp     edi, [ebp+var_c]
jb      short loc_10001b30
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
cmp     [ebp+var_8], 0
jz      short loc_10001bc4
lea     ecx, [ebp+var_8]
call    sub_100024b0
mov     ecx, [ebp+var_4]
mov     eax, esi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
call    sub_100023f0
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_4]
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [ecx]
mov     [ebp+var_8], 0
mov     esi, [eax]
lea     eax, [ebp+var_8]
push    eax
push    offset dword_10017dac
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10001c49
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
cmp     [ebp+var_8], 0
jz      short loc_10001c35
lea     ecx, [ebp+var_8]
call    sub_100024b0
pop     edi
mov     eax, esi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [edi-8]
cmp     ecx, [edi-4]
jz      short loc_10001c63
mov     eax, [ebp+var_8]
mov     [ebp+var_8], 0
mov     [ecx], eax
add     dword ptr [edi-8], 4
jmp     short loc_10001c70
lea     eax, [ebp+var_8]
push    eax
push    ecx
lea     ecx, [edi-0ch]
call    sub_10002580
cmp     [ebp+var_8], 0
jz      short loc_10001c7e
lea     ecx, [ebp+var_8]
call    sub_100024b0
mov     ecx, [ebp+var_4]
xor     eax, eax
pop     edi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_c]
mov     eax, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
mov     dword ptr [edx], 0
mov     ecx, [eax-0ch]
mov     eax, [eax-8]
sub     eax, ecx
sar     eax, 2
cmp     esi, eax
jb      short loc_10001ccc
mov     eax, 8000000bh
pop     esi
pop     ebp
retn    10h
mov     ecx, [ecx+esi*4]
push    edx
push    [ebp+arg_8]
mov     eax, [ecx]
push    ecx
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax-8]
sub     ecx, [eax-0ch]
mov     eax, [ebp+arg_4]
sar     ecx, 2
mov     [eax], ecx
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     ecx, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     eax, [ecx]
mov     [ebp+var_10], ecx
mov     esi, [eax+14h]
lea     eax, [ebp+var_c]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10001d63
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     edx, [ebx+8]
sub     edx, [ebx+4]
mov     eax, [ebx+0ch]
sub     eax, [ebx+4]
mov     esi, [ebp+var_c]
sar     edx, 2
add     edx, esi
sar     eax, 2
cmp     edx, eax
jbe     short loc_10001d96
cmp     edx, 3fffffffh
ja      loc_10001e44
push    edx
lea     ecx, [ebx+4]
call    sub_10002400
mov     esi, [ebp+var_c]
push    edi
xor     edi, edi
test    esi, esi
jz      short loc_10001e02
nop     dword ptr [eax]
mov     ecx, [ebp+var_10]
mov     [ebp+var_8], 0
mov     eax, [ecx]
mov     esi, [eax+18h]
lea     eax, [ebp+var_8]
push    eax
push    edi
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_10001e17
mov     eax, ebx
mov     ecx, [eax+8]
cmp     ecx, [eax+0ch]
jz      short loc_10001de1
mov     eax, [ebp+var_8]
mov     [ebp+var_8], 0
mov     [ecx], eax
add     dword ptr [ebx+8], 4
jmp     short loc_10001dee
lea     eax, [ebp+var_8]
push    eax
push    ecx
lea     ecx, [ebx+4]
call    sub_10002580
cmp     [ebp+var_8], 0
jz      short loc_10001dfc
lea     ecx, [ebp+var_8]
call    sub_100024b0
inc     edi
cmp     edi, [ebp+var_c]
jb      short loc_10001da0
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
cmp     [ebp+var_8], 0
jz      short loc_10001e2f
lea     ecx, [ebp+var_8]
call    sub_100024b0
mov     ecx, [ebp+var_4]
mov     eax, esi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
call    sub_100023f0
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
mov     ecx, [eax+8]
mov     edx, [eax+4]
push    ebx
lea     ebx, [eax+4]
mov     [ebp+var_18], eax
mov     eax, ecx
sub     eax, edx
push    esi
mov     esi, [ebp+arg_4]
sar     eax, 2
push    edi
mov     edi, [ebp+arg_8]
mov     [ebp+var_10], edi
cmp     esi, eax
jb      short loc_10001ea6
test    esi, esi
jnz     short loc_10001e8e
cmp     edx, ecx
jz      short loc_10001ea6
pop     edi
pop     esi
mov     eax, 80070057h
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, [edi]
mov     esi, [eax+14h]
lea     eax, [ebp+var_c]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10001edf
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, [ebx+4]
sub     eax, [ebx]
mov     esi, [ebp+var_c]
sar     eax, 2
mov     [ebp+var_14], eax
lea     edx, [eax+esi]
mov     eax, [ebx+8]
sub     eax, [ebx]
sar     eax, 2
cmp     edx, eax
jbe     short loc_10001f13
cmp     edx, 3fffffffh
ja      loc_10002038
push    edx
mov     ecx, ebx
call    sub_10002400
mov     esi, [ebp+var_c]
xor     edi, edi
test    esi, esi
jz      short loc_10001f86
nop     dword ptr [eax+00000000h]
mov     ecx, [ebp+var_10]
mov     [ebp+var_8], 0
mov     eax, [ecx]
mov     esi, [eax+18h]
lea     eax, [ebp+var_8]
push    eax
push    edi
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      loc_1000200b
mov     eax, [ebp+var_18]
mov     ecx, [eax+8]
cmp     ecx, [eax+0ch]
jz      short loc_10001f66
mov     eax, [ebp+var_8]
mov     [ebp+var_8], 0
mov     [ecx], eax
add     dword ptr [ebx+4], 4
jmp     short loc_10001f72
lea     eax, [ebp+var_8]
push    eax
push    ecx
mov     ecx, ebx
call    sub_10002580
cmp     [ebp+var_8], 0
jz      short loc_10001f80
lea     ecx, [ebp+var_8]
call    sub_100024b0
inc     edi
cmp     edi, [ebp+var_c]
jb      short loc_10001f20
mov     eax, [ebx]
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+var_18]
lea     esi, [eax+ecx*4]
mov     ecx, [ebp+var_14]
mov     edx, [edx+8]
mov     [ebp+var_10], esi
lea     edi, [eax+ecx*4]
cmp     esi, edi
jz      short loc_10001ff6
cmp     edi, edx
jz      short loc_10001ff6
mov     ebx, edi
sub     ebx, 4
cmp     esi, ebx
jz      short loc_10001fbd
mov     ecx, [esi]
mov     eax, [ebx]
mov     [esi], eax
add     esi, 4
mov     [ebx], ecx
cmp     esi, ebx
jnz     short loc_10001fa7
mov     esi, [ebp+var_10]
mov     ebx, edx
sub     ebx, 4
cmp     edi, ebx
jz      short loc_10001fd8
mov     ecx, [edi]
mov     eax, [ebx]
mov     [edi], eax
add     edi, 4
mov     [ebx], ecx
cmp     edi, ebx
jnz     short loc_10001fc2
cmp     esi, edx
jz      short loc_10001ff6
nop     dword ptr [eax+00h]
sub     edx, 4
cmp     esi, edx
jz      short loc_10001ff6
mov     ecx, [esi]
mov     eax, [edx]
mov     [esi], eax
add     esi, 4
mov     [edx], ecx
cmp     esi, edx
jnz     short loc_10001fe0
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
cmp     [ebp+var_8], 0
jz      short loc_10002023
lea     ecx, [ebp+var_8]
call    sub_100024b0
mov     ecx, [ebp+var_4]
mov     eax, esi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
call    sub_100023f0
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
mov     eax, [esi+4]
cmp     eax, [esi+8]
jnz     short loc_10002059
mov     eax, 80004005h
pop     esi
pop     ebp
retn    4
mov     eax, [esi+8]
cmp     dword ptr [eax-4], 0
lea     ecx, [eax-4]
jz      short loc_1000206d
call    sub_100024b0
mov     eax, [esi+8]
add     eax, 0fffffffch
mov     [esi+8], eax
xor     eax, eax
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
mov     [ebp+var_4], ecx
mov     eax, [ecx+8]
mov     edx, [ecx+4]
sub     eax, edx
sar     eax, 2
cmp     esi, eax
jb      short loc_100020a9
mov     eax, 80070057h
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebx
mov     ebx, [ecx+8]
lea     esi, [edx+esi*4]
push    edi
lea     edi, [esi+4]
mov     eax, ebx
cmp     edi, ebx
jz      short loc_100020eb
nop     word ptr [eax+eax+00h]
cmp     esi, edi
jz      short loc_100020da
cmp     dword ptr [esi], 0
jz      short loc_100020d0
mov     ecx, esi
call    sub_100024b0
mov     eax, [edi]
mov     dword ptr [edi], 0
mov     [esi], eax
mov     esi, edi
lea     edi, [esi+4]
cmp     edi, ebx
jnz     short loc_100020c0
mov     ecx, [ebp+var_4]
mov     ebx, [ecx+8]
mov     eax, ebx
cmp     dword ptr [ebx-4], 0
jz      short loc_100020ff
lea     ecx, [ebx-4]
call    sub_100024b0
mov     ecx, [ebp+var_4]
mov     eax, [ecx+8]
pop     edi
add     eax, 0fffffffch
pop     ebx
mov     [ecx+8], eax
xor     eax, eax
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10002110
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, [ebp+arg_0]
mov     ecx, [edi+8]
mov     eax, [edi+4]
sub     ecx, eax
sar     ecx, 2
cmp     [ebp+arg_4], ecx
jbe     short loc_10002164
mov     eax, 8000000bh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
mov     ebx, [ebp+arg_8]
xor     edx, edx
mov     [ebp+var_10], 0
mov     [ebp+var_14], edx
test    ebx, ebx
jz      short loc_100021a1
mov     [ebp+var_10], ebx
mov     [ebp+var_4], edx
mov     eax, [ebx]
push    ebx
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edx, ebx
mov     [ebp+var_4], 0ffffffffh
mov     eax, [edi+4]
lea     ebx, [edi+4]
mov     [ebp+var_14], edx
jmp     short loc_100021a4
lea     ebx, [edi+4]
mov     ecx, [ebp+arg_4]
mov     esi, [edi+8]
lea     ecx, [eax+ecx*4]
mov     [ebp+var_18], ecx
cmp     esi, [edi+0ch]
jz      short loc_1000222c
cmp     ecx, esi
jnz     short loc_100021c4
mov     [esi], edx
add     dword ptr [edi+8], 4
jmp     loc_10002246
mov     eax, [esi-4]
lea     ebx, [esi-4]
mov     dword ptr [ebx], 0
mov     [esi], eax
add     dword ptr [edi+8], 4
mov     [ebp+var_10], edx
cmp     ebx, ecx
jz      short loc_1000220d
lea     edi, [ebx-4]
sub     esi, 4
cmp     esi, edi
jz      short loc_10002200
cmp     dword ptr [esi], 0
jz      short loc_100021f6
mov     ecx, esi
call    sub_100024b0
mov     ecx, [ebp+var_18]
mov     eax, [edi]
mov     dword ptr [edi], 0
mov     [esi], eax
sub     ebx, 4
sub     edi, 4
cmp     ebx, ecx
jnz     short loc_100021e0
mov     edx, [ebp+var_14]
lea     eax, [ebp+var_10]
cmp     ecx, eax
jz      short loc_10002228
cmp     dword ptr [ecx], 0
jz      short loc_10002221
call    sub_100024b0
mov     ecx, [ebp+var_18]
mov     eax, [ebp+var_14]
mov     [ecx], eax
jmp     short loc_10002246
test    edx, edx
jmp     short loc_1000223c
lea     eax, [ebp+var_10]
push    eax
push    ecx
mov     ecx, ebx
call    sub_10002580
cmp     [ebp+var_10], 0
jz      short loc_10002246
lea     ecx, [ebp+var_10]
call    sub_100024b0
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10002260
mov     eax, large fs:0
push    eax
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     ecx, [eax+4]
mov     eax, [eax+8]
sub     eax, ecx
sar     eax, 2
cmp     edx, eax
jb      short loc_100022b1
mov     eax, 8000000bh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, [ecx+edx*4]
lea     edi, [ecx+edx*4]
mov     esi, [ebp+arg_8]
cmp     eax, esi
jz      short loc_100022e6
test    eax, eax
jz      short loc_100022c9
mov     ecx, edi
call    sub_100024b0
mov     [edi], esi
mov     [ebp+var_4], 0
test    esi, esi
jz      short loc_100022e6
mov     eax, [esi]
push    esi
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10002e70
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, [ebp+arg_0]
xor     edx, edx
mov     edi, [ebp+arg_4]
mov     [ebp+var_10], 0
lea     ecx, [ebx+4]
test    edi, edi
jz      short loc_1000235e
mov     [ebp+var_10], edi
mov     [ebp+var_4], edx
mov     eax, [edi]
push    edi
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [ebx+4]
mov     edx, edi
mov     eax, [ebx+8]
cmp     eax, [ebx+0ch]
jz      short loc_1000236e
mov     [eax], edx
add     dword ptr [ecx+4], 4
jmp     short loc_10002386
lea     edx, [ebp+var_10]
push    edx
push    eax
call    sub_10002580
cmp     [ebp+var_10], 0
jz      short loc_10002386
lea     ecx, [ebp+var_10]
call    sub_100024b0
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, [ebx-8]
mov     esi, [ebx-0ch]
cmp     esi, edi
jz      short loc_100023d5
cmp     dword ptr [esi], 0
jz      short loc_100023bf
mov     ecx, esi
call    sub_100024b0
add     esi, 4
cmp     esi, edi
jnz     short loc_100023b3
mov     eax, [ebx-0ch]
pop     edi
mov     [ebx-8], eax
xor     eax, eax
pop     esi
pop     ebx
pop     ebp
retn    4
pop     edi
mov     [ebx-8], esi
xor     eax, eax
pop     esi
pop     ebx
pop     ebp
retn    4
push    offset avectorttoolong
call    ds:?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
sub     esp, 8
mov     edx, [ebp+arg_0]
push    ebx
mov     ebx, ecx
mov     [ebp+var_4], edx
push    esi
push    edi
lea     ecx, ds:0[edx*4]
mov     eax, [ebx+4]
sub     eax, [ebx]
sar     eax, 2
mov     [ebp+var_8], eax
cmp     edx, 3fffffffh
jbe     short loc_10002430
or      ecx, 0ffffffffh
jmp     short loc_10002438
cmp     ecx, 1000h
jb      short loc_10002461
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_1000245b
lea     ecx, [eax+23h]
and     ecx, 0ffffffe0h
mov     [ecx-4], eax
jmp     short loc_10002474
call    ds:_invalid_parameter_noinfo_noreturn
test    ecx, ecx
jz      short loc_10002472
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     ecx, eax
jmp     short loc_10002474
xor     ecx, ecx
mov     edi, [ebx+4]
mov     esi, ecx
mov     edx, [ebx]
cmp     edx, edi
jz      short loc_10002495
nop
mov     eax, [edx]
lea     esi, [esi+4]
mov     dword ptr [edx], 0
add     edx, 4
mov     [esi-4], eax
cmp     edx, edi
jnz     short loc_10002480
push    [ebp+var_4]
push    [ebp+var_8]
push    ecx
mov     ecx, ebx
call    sub_10002500
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000fe10
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edx, [ecx]
mov     dword ptr [ecx], 0
push    edx
mov     eax, [edx]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, ecx
push    esi
mov     esi, [ebx]
test    esi, esi
jz      short loc_10002556
push    edi
mov     edi, [ebx+4]
cmp     esi, edi
jz      short loc_1000252a
cmp     dword ptr [esi], 0
jz      short loc_10002521
mov     ecx, esi
call    sub_100024b0
add     esi, 4
cmp     esi, edi
jnz     short loc_10002515
mov     esi, [ebx]
mov     eax, [ebx+8]
sub     eax, esi
and     eax, 0fffffffch
pop     edi
cmp     eax, 1000h
jb      short loc_1000254c
mov     ecx, [esi-4]
add     eax, 23h
sub     esi, ecx
add     esi, 0fffffffch
cmp     esi, 1fh
ja      short loc_10002573
mov     esi, ecx
push    eax
push    esi
call    sub_10012c63
add     esp, 8
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     [ebx], ecx
pop     esi
lea     eax, [ecx+eax*4]
mov     [ebx+4], eax
mov     eax, [ebp+arg_8]
lea     eax, [ecx+eax*4]
mov     [ebx+8], eax
pop     ebx
pop     ebp
retn    0ch
call    ds:_invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_4]
mov     edx, [ecx]
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+var_8], eax
mov     eax, [ecx+4]
push    edi
mov     edi, esi
mov     [ebp+var_4], ecx
sub     eax, edx
sub     edi, edx
sar     eax, 2
sar     edi, 2
cmp     eax, 3fffffffh
jz      loc_100026d5
mov     ecx, [ecx+8]
lea     ebx, [eax+1]
sub     ecx, edx
mov     [ebp+var_10], ebx
sar     ecx, 2
mov     eax, 3fffffffh
mov     edx, ecx
shr     edx, 1
sub     eax, edx
cmp     ecx, eax
jbe     short loc_100025d5
mov     eax, ebx
mov     [ebp+var_c], ebx
jmp     short loc_100025e0
lea     eax, [edx+ecx]
cmp     eax, ebx
cmovb   eax, ebx
mov     [ebp+var_c], eax
lea     ecx, ds:0[eax*4]
cmp     eax, 3fffffffh
jbe     short loc_100025f3
or      ecx, 0ffffffffh
jmp     short loc_100025fb
cmp     ecx, 1000h
jb      short loc_10002624
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      short loc_1000261e
lea     ebx, [eax+23h]
and     ebx, 0ffffffe0h
mov     [ebx-4], eax
jmp     short loc_10002637
call    ds:_invalid_parameter_noinfo_noreturn
test    ecx, ecx
jz      short loc_10002635
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     ebx, eax
jmp     short loc_10002637
xor     ebx, ebx
mov     ecx, [ebp+var_8]
mov     edx, ebx
mov     eax, [ecx]
mov     dword ptr [ecx], 0
lea     ecx, [ebx+edi*4]
mov     [ecx], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_8], ecx
mov     edi, [eax+4]
mov     eax, [eax]
cmp     esi, edi
jnz     short loc_10002690
cmp     eax, edi
jz      short loc_10002675
nop     dword ptr [eax+00h]
mov     ecx, [eax]
lea     edx, [edx+4]
mov     dword ptr [eax], 0
add     eax, 4
mov     [edx-4], ecx
cmp     eax, edi
jnz     short loc_10002660
mov     ecx, [ebp+var_4]
push    [ebp+var_c]
push    [ebp+var_10]
push    ebx
call    sub_10002500
mov     eax, [ebp+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
cmp     eax, esi
jz      short loc_100026b1
mov     ecx, [eax]
lea     edx, [edx+4]
mov     dword ptr [eax], 0
add     eax, 4
mov     [edx-4], ecx
cmp     eax, esi
jnz     short loc_10002694
mov     ecx, [ebp+var_4]
mov     edi, [ecx+4]
jmp     short loc_100026b4
mov     ecx, [ebp+var_4]
cmp     esi, edi
jz      short loc_10002678
mov     edx, [ebp+var_8]
sub     edx, esi
nop     dword ptr [eax]
mov     eax, [esi]
mov     dword ptr [esi], 0
mov     [edx+esi+4], eax
add     esi, 4
cmp     esi, edi
jnz     short loc_100026c0
jmp     short loc_10002678
call    sub_100023f0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100026e0
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, edx
mov     eax, ecx
mov     [ebp+var_1c], eax
mov     ebx, [ebp+arg_0]
lea     ecx, [ebp+var_10]
mov     dword ptr [eax], 0
call    sub_10002b10
mov     esi, eax
test    esi, esi
jns     short loc_10002744
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_10]
mov     [ebp+var_10], ecx
push    ecx
mov     eax, [ecx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, [ebx]
mov     edx, esi
mov     ebx, [ebp+var_10]
mov     eax, [edi]
sub     edx, eax
sar     edx, 2
mov     [ebp+var_18], esi
mov     edi, [ebx+8]
mov     ecx, [ebx+4]
sub     edi, ecx
sar     edi, 2
mov     [ebp+var_14], eax
cmp     edx, edi
jbe     short loc_100027e6
mov     eax, [ebx+0ch]
sub     eax, ecx
sar     eax, 2
cmp     edx, eax
jbe     short loc_10002797
push    edx
lea     ecx, [ebx+4]
call    sub_10002d40
mov     ecx, [ebx+4]
xor     edi, edi
mov     eax, [ebp+var_14]
push    ecx
mov     ecx, eax
lea     edi, [eax+edi*4]
mov     edx, edi
call    sub_10002e70
mov     ebx, [ebx+8]
add     esp, 4
cmp     edi, esi
jz      short loc_10002815
mov     ecx, [edi]
mov     [ebx], ecx
mov     [ebp+var_4], 0
test    ecx, ecx
jz      short loc_100027d3
mov     eax, [ecx]
push    ecx
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, [ebp+var_18]
add     edi, 4
mov     [ebp+var_4], 0ffffffffh
add     ebx, 4
cmp     edi, esi
jnz     short loc_100027b1
jmp     short loc_10002815
lea     ebx, [ecx+edx*4]
mov     edx, esi
push    ecx
mov     ecx, eax
call    sub_10002e70
mov     eax, [ebp+var_10]
add     esp, 4
mov     esi, ebx
mov     edi, [eax+8]
cmp     ebx, edi
jz      short loc_10002815
cmp     dword ptr [esi], 0
jz      short loc_1000280e
mov     ecx, esi
call    sub_100024b0
add     esi, 4
cmp     esi, edi
jnz     short loc_10002802
mov     ecx, [ebp+var_10]
mov     eax, [ebp+var_1c]
mov     [ecx+8], ebx
mov     [eax], ecx
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_10017d88
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
or      ebx, 0ffffffffh
lock xadd [eax+8], ebx
dec     ebx
jnz     short loc_100028be
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_100028a5
mov     eax, [edi]
push    1
mov     esi, [eax+34h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, 1
lock xadd [ecx+8], eax
inc     eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_10017dbc
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
or      ebx, 0ffffffffh
lock xadd [eax+18h], ebx
dec     ebx
jnz     short loc_1000296e
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_10002955
mov     eax, [edi]
push    1
mov     esi, [eax+40h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, 1
lock xadd [ecx+18h], eax
inc     eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d9e0
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcaddtoqueueaction@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vcaddtoqueueaction@scheduler@@@atl@@6b@_0
mov     dword ptr [ebx+8], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     [ebp+var_4], 0
mov     ecx, [ebx+38h]
test    ecx, ecx
jz      short loc_10002a10
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
cmp     byte ptr [ebx+24h], 0
lea     eax, [ebx+0ch]
jz      short loc_10002a24
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_10002a35
push    48h
push    ebx
call    sub_10012c63
add     esp, 8
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, ecx
push    esi
push    edi
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcaddtoqueueactions@scheduler@@@atl@@6b@
mov     dword ptr [ebx+10h], offset ??_7?$ccomobject@vcaddtoqueueactions@scheduler@@@atl@@6b@_0
mov     dword ptr [ebx+14h], offset ??_7?$ccomobject@vcaddtoqueueactions@scheduler@@@atl@@6b@_1
mov     dword ptr [ebx+18h], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
lea     ecx, [ebx+4]
call    sub_100018e0
cmp     byte ptr [ebx+34h], 0
lea     eax, [ebx+1ch]
jz      short loc_10002aa6
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_10002ab7
push    48h
push    ebx
call    sub_10012c63
add     esp, 8
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d740
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_4], 0
mov     ecx, [ecx]
test    ecx, ecx
jz      short loc_10002b00
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, ecx
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_10002b28
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
push    offset dword_100203fc
push    48h
mov     dword ptr [eax], 0
mov     edi, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_10002bc3
mov     dword ptr [ebx+18h], 0
lea     eax, [ebx+38h]
xorps   xmm0, xmm0
movups  xmmword ptr [ebx+1ch], xmm0
push    eax
movq    qword ptr [ebx+2ch], xmm0
mov     byte ptr [ebx+34h], 0
mov     dword ptr [ebx+4], 0
mov     dword ptr [ebx+8], 0
mov     dword ptr [ebx+0ch], 0
mov     dword ptr [ebx], offset ??_7?$ivectorobject_impl@vcaddtoqueueactions@scheduler@@uiaddtoqueueactions@2@uiaddtoqueueaction@2@v_noenumtype@com@@@com@@6b@
mov     dword ptr [ebx+10h], offset ??_7?$ivectorobject_impl@vcaddtoqueueactions@scheduler@@uiaddtoqueueactions@2@uiaddtoqueueaction@2@v_noenumtype@com@@@com@@6b@_0
call    ds:cocreateguid
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcaddtoqueueactions@scheduler@@@atl@@6b@
mov     dword ptr [ebx+10h], offset ??_7?$ccomobject@vcaddtoqueueactions@scheduler@@@atl@@6b@_0
mov     dword ptr [ebx+14h], offset ??_7?$ccomobject@vcaddtoqueueactions@scheduler@@@atl@@6b@_1
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, 8007000eh
jmp     short loc_10002bc5
xor     ebx, ebx
test    ebx, ebx
jz      short loc_10002c1f
xor     esi, esi
lea     edi, [ebx+1ch]
push    esi
push    esi
push    edi
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_10002bf0
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_10002bf2
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_10002bf8
mov     byte ptr [edi+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     edi, edi
test    eax, eax
cmovs   edi, eax
test    edi, edi
jz      short loc_10002c1f
mov     eax, [ebx]
push    1
mov     esi, [eax+40h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
xor     ebx, ebx
mov     eax, [ebp+var_4]
mov     [eax], ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, ecx
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_10002c48
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
push    offset dword_100203fc
push    48h
mov     dword ptr [eax], 0
mov     edi, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_10002cd6
mov     dword ptr [ebx+8], 0
lea     eax, [ebx+28h]
xorps   xmm0, xmm0
movups  xmmword ptr [ebx+0ch], xmm0
push    eax
movq    qword ptr [ebx+1ch], xmm0
mov     byte ptr [ebx+24h], 0
mov     dword ptr [ebx+38h], 0
mov     dword ptr [ebx+3ch], 1
mov     dword ptr [ebx+40h], 0
mov     dword ptr [ebx+44h], 1
call    ds:cocreateguid
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcaddtoqueueaction@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vcaddtoqueueaction@scheduler@@@atl@@6b@_0
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, 8007000eh
jmp     short loc_10002cd8
xor     ebx, ebx
test    ebx, ebx
jz      short loc_10002d32
xor     esi, esi
lea     edi, [ebx+0ch]
push    esi
push    esi
push    edi
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_10002d03
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_10002d05
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_10002d0b
mov     byte ptr [edi+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     edi, edi
test    eax, eax
cmovs   edi, eax
test    edi, edi
jz      short loc_10002d32
mov     eax, [ebx]
push    1
mov     esi, [eax+34h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
xor     ebx, ebx
mov     eax, [ebp+var_4]
mov     [eax], ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
cmp     [ebp+arg_0], 3fffffffh
push    ebx
push    esi
push    edi
mov     edi, ecx
ja      loc_10002e68
mov     ecx, [edi+8]
mov     eax, 3fffffffh
mov     esi, [edi]
mov     edx, ecx
sub     edx, esi
sar     edx, 2
mov     ebx, edx
shr     ebx, 1
sub     eax, ebx
cmp     edx, eax
ja      short loc_10002d7d
lea     eax, [ebx+edx]
cmp     eax, [ebp+arg_0]
cmovb   eax, [ebp+arg_0]
mov     [ebp+arg_0], eax
test    esi, esi
jz      short loc_10002ddd
mov     ebx, [edi+4]
cmp     esi, ebx
jz      short loc_10002da0
cmp     dword ptr [esi], 0
jz      short loc_10002d94
mov     ecx, esi
call    sub_100024b0
add     esi, 4
cmp     esi, ebx
jnz     short loc_10002d88
mov     ecx, [edi+8]
mov     esi, [edi]
sub     ecx, esi
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_10002dbf
mov     edx, [esi-4]
add     ecx, 23h
sub     esi, edx
lea     eax, [esi-4]
cmp     eax, 1fh
ja      short loc_10002e31
mov     esi, edx
push    ecx
push    esi
call    sub_10012c63
mov     dword ptr [edi], 0
add     esp, 8
mov     dword ptr [edi+4], 0
mov     dword ptr [edi+8], 0
mov     eax, [ebp+arg_0]
lea     esi, ds:0[eax*4]
mov     ecx, esi
cmp     eax, 3fffffffh
jbe     short loc_10002df5
or      ecx, 0ffffffffh
jmp     short loc_10002dfd
cmp     ecx, 1000h
jb      short loc_10002e37
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      short loc_10002e31
lea     eax, [ecx+23h]
and     eax, 0ffffffe0h
mov     [eax-4], ecx
mov     [edi], eax
mov     [edi+4], eax
add     eax, esi
mov     [edi+8], eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
call    ds:_invalid_parameter_noinfo_noreturn
test    ecx, ecx
jz      short loc_10002e55
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     [edi], eax
mov     [edi+4], eax
add     eax, esi
mov     [edi+8], eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
xor     eax, eax
mov     [edi], eax
mov     [edi+4], eax
mov     eax, esi
mov     [edi+8], eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
call    sub_100023f0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10002e70
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, edx
mov     [ebp+var_10], eax
mov     ebx, ecx
cmp     ebx, eax
jz      short loc_10002efa
mov     esi, [ebp+arg_0]
mov     edi, [ebx]
mov     eax, [esi]
cmp     eax, edi
jz      short loc_10002edb
test    eax, eax
jz      short loc_10002eb7
mov     ecx, esi
call    sub_100024b0
mov     [esi], edi
mov     [ebp+var_4], 0
test    edi, edi
jz      short loc_10002ed4
mov     eax, [edi]
push    edi
mov     edi, [eax+4]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     [ebp+var_4], 0ffffffffh
add     ebx, 4
add     esi, 4
cmp     ebx, [ebp+var_10]
jnz     short loc_10002ea4
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
sub     [esp+arg_0], 4
jmp     sub_100028d0
sub     [esp+arg_0], 4
jmp     sub_10002840
sub     [esp+arg_0], 4
jmp     sub_10002860
sub     [esp+arg_0], 10h
jmp     sub_100028f0
sub     [esp+arg_0], 14h
jmp     sub_100028f0
sub     [esp+arg_0], 10h
jmp     sub_10002910
sub     [esp+arg_0], 14h
jmp     sub_10002910
sub     [esp+arg_0], 10h
jmp     sub_10002980
sub     [esp+arg_0], 14h
jmp     sub_10002980
push    0
push    0
push    ecx
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_10002fc2
call    ds:getlasterror
test    eax, eax
jle     short locret_10002fc4
movzx   eax, ax
or      eax, 80070000h
retn
xor     eax, eax
retn
add     ecx, 4
cmp     byte ptr [ecx+18h], 0
jz      short locret_10002fe4
push    ecx
mov     byte ptr [ecx+18h], 0
call    ds:deletecriticalsection
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10008a80
mov     eax, large fs:0
push    eax
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+4]
push    edx
push    1
push    eax
push    0
push    0
push    0
xor     edx, edx
call    sub_100037f0
add     esp, 18h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
mov     dword_1002078c, ecx
mov     eax, 1
lock xadd dword_10020790, eax
inc     eax
retn
mov     dword_10020794, ecx
mov     eax, 1
lock xadd dword_10020798, eax
inc     eax
retn
mov     dword_1002079c, ecx
mov     eax, 1
lock xadd dword_100207a0, eax
inc     eax
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_100207a4, eax
mov     eax, 1
pop     ebp
retn
mov     ecx, 7
int     29h
retn
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_4]
mov     eax, ebx
push    esi
mov     esi, [ebp+buffer]
sub     eax, esi
sar     eax, 1
push    edi
jz      short loc_1000312a
cmp     eax, 7fffffffh
ja      short loc_1000312a
lea     edi, [eax-1]
lea     eax, [ebp+arglist]
push    eax
push    0
push    [ebp+format]
push    edi
push    esi
call    sub_10003930
mov     ecx, [eax]
push    dword ptr [eax+4]
or      ecx, 1
push    ecx
call    ds:__stdio_common_vswprintf
or      ecx, 0ffffffffh
add     esp, 1ch
test    eax, eax
cmovs   eax, ecx
test    eax, eax
js      short loc_10003122
cmp     eax, edi
ja      short loc_10003122
jnz     short loc_10003133
xor     eax, eax
mov     [esi+edi*2], ax
jmp     short loc_10003133
test    eax, eax
jz      short loc_10003133
xor     eax, eax
mov     [esi], ax
mov     eax, esi
cmp     ebx, esi
jz      short loc_10003152
lea     edx, [eax+2]
nop     dword ptr [eax+00h]
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_10003140
sub     eax, edx
sar     eax, 1
lea     eax, [esi+eax*2]
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003160
mov     eax, large fs:0
push    eax
sub     esp, 20ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, edx
mov     [ebp+var_218], eax
mov     esi, ecx
mov     edi, [ebp+arg_0]
test    eax, eax
jz      loc_10003371
test    esi, esi
jz      loc_10003371
mov     ebx, dword_100207c4
xor     ecx, ecx
mov     [esi], cx
test    ebx, ebx
jz      short loc_100031db
cmp     byte_100207c0, cl
jz      short loc_100031db
push    eax
push    esi
push    edi
mov     ecx, ebx
call    ds:___guard_check_icall_fptr
call    ebx
movzx   eax, word ptr [esi]
test    ax, ax
jnz     loc_10003371
mov     eax, [edi]
mov     dword ptr [ebp+arglist], offset dword_10017e04
cmp     eax, 3
ja      short def_100031ec
jmp     ds:jpt_100031ec[eax*4]
mov     dword ptr [ebp+arglist], offset aexception
jmp     short def_100031ec
mov     dword ptr [ebp+arglist], offset areturnhr
jmp     short def_100031ec
mov     dword ptr [ebp+arglist], offset aloghr
jmp     short def_100031ec
mov     dword ptr [ebp+arglist], offset afailfast
xor     eax, eax
push    eax
push    100h
mov     [ebp+buffer], ax
lea     eax, [ebp+buffer]
push    eax
push    400h
push    dword ptr [edi+4]
push    0
push    1200h
call    ds:formatmessagew
mov     eax, [ebp+var_218]
mov     edx, [edi+1ch]
mov     ecx, [edi+44h]
lea     ebx, [esi+eax*2]
mov     eax, [edi+48h]
push    eax
push    ecx
test    edx, edx
jz      short loc_10003279
push    dword ptr [edi+20h]
push    edx
push    offset ahsuhsp
push    ebx
push    esi
call    sub_100030d0
add     esp, 1ch
jmp     short loc_10003288
push    offset ahsp
push    ebx
push    esi
call    sub_100030d0
add     esp, 14h
mov     ecx, [edi+4ch]
mov     [ebp+var_218], eax
test    ecx, ecx
jz      short loc_100032ab
push    ecx
push    offset acallerp
push    ebx
push    eax
call    sub_100030d0
add     esp, 10h
mov     [ebp+var_218], eax
mov     esi, [edi+4]
call    ds:getcurrentthreadid
lea     ecx, [ebp+buffer]
push    ecx
push    esi
push    eax
push    dword ptr [edi+24h]
push    dword ptr [ebp+arglist]
push    offset ahsdtidx08xws
push    ebx
push    [ebp+var_218]
call    sub_100030d0
add     esp, 20h
cmp     dword ptr [edi+0ch], 0
jnz     short loc_100032f0
cmp     dword ptr [edi+28h], 0
jnz     short loc_100032f0
cmp     dword ptr [edi+18h], 0
jz      loc_10003371
push    offset asc_10017d10
push    ebx
push    eax
call    sub_100030d0
mov     ecx, [edi+0ch]
add     esp, 0ch
test    ecx, ecx
jz      short loc_10003316
push    ecx
push    offset amsgws
push    ebx
push    eax
call    sub_100030d0
add     esp, 10h
mov     ecx, [edi+28h]
test    ecx, ecx
jz      short loc_1000332d
push    ecx
push    offset acallcontexths
push    ebx
push    eax
call    sub_100030d0
add     esp, 10h
mov     ecx, [edi+14h]
test    ecx, ecx
jz      short loc_10003349
push    ecx
push    dword ptr [edi+18h]
push    offset ahshs
push    ebx
push    eax
call    sub_100030d0
add     esp, 14h
jmp     short loc_10003371
mov     ecx, [edi+18h]
test    ecx, ecx
jz      short loc_10003362
push    ecx
push    offset ahs
push    ebx
push    eax
call    sub_100030d0
add     esp, 10h
jmp     short loc_10003371
push    offset asc_10017d84
push    ebx
push    eax
call    sub_100030d0
add     esp, 0ch
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100033a0
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, edx
mov     [ebp+var_14], esi
mov     [ebp+var_18], ecx
mov     eax, [ebp+lpoutputstring]
xor     edx, edx
mov     [ebp+var_10], edx
mov     [eax], dx
mov     eax, [ebp+arg_28]
mov     [eax], dl
mov     edx, [ebp+arg_10]
cmp     edx, 3
ja      short def_100033e7
jmp     ds:jpt_100033e7[edx*4]
mov     edi, [ebp+arg_14]
mov     ecx, edi
call    sub_10003040
mov     [ebp+var_10], eax
jmp     short loc_10003455
mov     edi, [ebp+arg_14]
mov     ecx, edi
call    sub_10003060
mov     [ebp+var_10], eax
jmp     short loc_10003455
mov     edi, [ebp+arg_14]
test    edi, edi
js      short loc_10003435
push    8007029ch
push    2
push    [ebp+arg_c]
mov     edx, esi
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_100037f0
add     esp, 18h
mov     edi, 8007029ch
mov     ecx, edi
call    sub_10003080
mov     [ebp+var_10], eax
jmp     short loc_10003455
mov     edi, [ebp+arg_14]
push    edi
call    sub_100030a0
add     esp, 4
mov     [ebp+var_10], eax
jmp     short loc_10003455
mov     edi, [ebp+arg_14]
mov     esi, [ebp+arg_30]
mov     eax, [ebp+arg_10]
mov     [esi], eax
mov     eax, 1
mov     [esi+4], edi
lock xadd dword_100207d0, eax
inc     eax
mov     [esi+8], eax
mov     eax, [ebp+arg_18]
test    eax, eax
jz      short loc_1000347e
cmp     word ptr [eax], 0
jnz     short loc_10003480
xor     eax, eax
mov     [esi+0ch], eax
call    ds:getcurrentthreadid
mov     edi, dword_100207a8
xorps   xmm0, xmm0
mov     [esi+10h], eax
mov     eax, [ebp+arg_0]
mov     [esi+1ch], eax
mov     eax, [ebp+var_14]
mov     [esi+20h], eax
mov     eax, [ebp+var_10]
mov     [esi+24h], eax
mov     eax, [ebp+arg_8]
mov     [esi+14h], eax
mov     eax, [ebp+arg_4]
mov     [esi+18h], eax
mov     eax, [ebp+arg_c]
mov     [esi+48h], eax
mov     eax, [ebp+var_18]
mov     [esi+4ch], eax
mov     dword ptr [esi+28h], 0
movups  xmmword ptr [esi+2ch], xmm0
movq    qword ptr [esi+3ch], xmm0
test    edi, edi
jz      short loc_100034df
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
jmp     short loc_100034e1
xor     eax, eax
mov     edi, dword_100207ac
mov     [esi+44h], eax
test    edi, edi
jz      short loc_10003501
push    400h
push    [ebp+arg_28]
mov     ecx, edi
push    esi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, dword_100207b0
test    edi, edi
jz      short loc_10003516
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, dword_100207b4
test    edi, edi
jz      short loc_1000352b
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
cmp     dword ptr [esi+4], 0
jl      short loc_10003542
cmp     [ebp+arg_10], 3
jnz     loc_10003609
mov     dword ptr [esi+4], 8000ffffh
cmp     byte_100207b8, 0
jnz     short loc_10003595
mov     edi, dword_100207bc
test    edi, edi
jz      short loc_10003564
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
movzx   eax, al
jmp     short loc_10003570
call    ds:isdebuggerpresent
neg     eax
sbb     eax, eax
neg     eax
test    eax, eax
jnz     short loc_10003595
mov     edi, dword_100207c4
test    edi, edi
jz      short loc_100035db
cmp     byte_100207c0, al
jnz     short loc_100035db
push    eax
push    eax
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
jmp     short loc_100035db
mov     edi, dword_100207c4
test    edi, edi
jz      short loc_100035bb
cmp     byte_100207c0, 0
jnz     short loc_100035bb
push    800h
push    [ebp+lpoutputstring]
mov     ecx, edi
push    esi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, [ebp+lpoutputstring]
cmp     word ptr [edi], 0
jnz     short loc_100035d4
push    esi
mov     edx, 800h
mov     ecx, edi
call    sub_10003160
add     esp, 4
push    edi
call    ds:outputdebugstringw
cmp     byte_100207c8, 0
jz      short loc_100035f8
mov     esi, dword_100207cc
test    esi, esi
jz      short loc_100035f8
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
call    sub_100030c0
push    esi
mov     esi, dword_100207dc
test    esi, esi
jz      short loc_10003636
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, dword_100207e4
test    esi, esi
jz      short loc_1000365e
push    [ebp+arg_0]
push    0
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, 7
int     29h
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 50h
push    esi
push    edi
mov     edi, dword_100207e0
mov     esi, ecx
test    edi, edi
jz      short loc_1000368f
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     ecx, [esi+48h]
xorps   xmm0, xmm0
movlpd  [ebp+var_48], xmm0
movlpd  [ebp+var_38], xmm0
movlpd  [ebp+var_30], xmm0
movlpd  [ebp+var_28], xmm0
movlpd  [ebp+var_20], xmm0
movlpd  [ebp+var_18], xmm0
movlpd  [ebp+var_10], xmm0
movlpd  [ebp+var_8], xmm0
mov     [ebp+var_40], 1
mov     [ebp+var_50], 0c0000409h
mov     [ebp+var_4c], 1
mov     [ebp+var_3c], 7
test    ecx, ecx
jnz     short loc_100036e7
push    1
lea     ecx, [ebp+var_50]
call    sub_10003640
mov     eax, [esi+4]
mov     dword ptr [ebp+var_38], eax
mov     eax, [esi+20h]
mov     dword ptr [ebp+var_48+4], ecx
lea     ecx, [ebp+var_50]
push    0
mov     [ebp+var_40], 3
mov     dword ptr [ebp+var_38+4], eax
call    sub_10003640
push    ebp
mov     ebp, esp
mov     eax, 1464h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
cmp     [ebp+arg_10], 0
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, [ebp+arg_8]
push    esi
mov     [ebp+var_1460], ebx
mov     ebx, [ebp+arg_c]
push    edi
mov     edi, [ebp+arg_4]
mov     [ebp+var_145c], ebx
jnz     short loc_10003755
cmp     dword_100207d4, 0
jz      short loc_10003755
mov     bl, 1
jmp     short loc_10003757
xor     bl, bl
lea     esi, [ebp+var_1458]
push    esi
push    ecx
lea     esi, [ebp+var_408]
push    esi
push    ecx
lea     esi, [ebp+outputstring]
push    esi
mov     esi, [ebp+arg_10]
push    ecx
push    0
push    [ebp+arg_14]
push    esi
push    [ebp+var_145c]
push    [ebp+var_1460]
push    edi
push    eax
call    sub_100033a0
add     esp, 34h
cmp     esi, 3
jz      short loc_100037a8
test    esi, esi
jz      short loc_100037b3
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
lea     ecx, [ebp+var_1458]
call    sub_10003670
test    bl, bl
jz      short loc_100037d5
mov     esi, dword_100207d4
lea     eax, [ebp+outputstring]
push    eax
lea     eax, [ebp+var_1458]
mov     ecx, esi
push    eax
call    ds:___guard_check_icall_fptr
call    esi
lea     ecx, [ebp+var_1458]
call    sub_10003620
lea     ecx, [ebp+var_1458]
call    sub_10003670
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 8
push    [ebp+arg_14]
push    [ebp+arg_10]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_10003710
add     esp, 20h
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, ecx
mov     [ebp+var_4], eax
test    eax, eax
jz      loc_10003916
test    edx, edx
jz      loc_10003916
mov     ecx, [ebp+arg_4]
test    ecx, ecx
jnz     short loc_1000384d
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn    8
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
cmp     dword ptr [ebx], 0
jnz     short loc_10003877
cmp     dword ptr [ebx+4], 0
jnz     short loc_10003877
cmp     dword ptr [ebx+8], 0c0h
jnz     short loc_10003877
cmp     dword ptr [ebx+0ch], 46000000h
jnz     short loc_10003877
mov     edi, [edx+4]
add     edi, eax
jmp     short loc_100038f6
cmp     dword ptr [edx+8], 0
lea     edi, [edx+8]
jz      short loc_100038d9
mov     esi, [edi-8]
test    esi, esi
jz      short loc_100038a5
mov     eax, [esi]
cmp     eax, [ebx]
jnz     short loc_100038d1
mov     eax, [esi+4]
cmp     eax, [ebx+4]
jnz     short loc_100038d1
mov     eax, [esi+8]
cmp     eax, [ebx+8]
jnz     short loc_100038d1
mov     eax, [esi+0ch]
cmp     eax, [ebx+0ch]
jnz     short loc_100038d1
mov     eax, [edi]
mov     [ebp+var_8], eax
cmp     eax, 1
jz      short loc_100038f0
push    dword ptr [edi-4]
push    ecx
push    ebx
push    [ebp+var_4]
mov     ecx, eax
call    ds:___guard_check_icall_fptr
call    [ebp+var_8]
test    eax, eax
jz      short loc_1000390b
test    esi, esi
jz      short loc_100038ce
test    eax, eax
js      short loc_100038de
mov     ecx, [ebp+arg_4]
add     edi, 0ch
cmp     dword ptr [edi], 0
jnz     short loc_10003880
mov     eax, 80004002h
mov     ecx, [ebp+arg_4]
pop     edi
pop     esi
pop     ebx
mov     dword ptr [ecx], 0
mov     esp, ebp
pop     ebp
retn    8
mov     edi, [edi-4]
add     edi, [ebp+var_4]
mov     eax, [edi]
push    edi
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+arg_4]
mov     [ecx], edi
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     eax, 80070057h
mov     esp, ebp
pop     ebp
retn    8
mov     eax, offset dword_100207e8
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, [ebp+arg_4]
lea     ecx, [ebp+var_4]
mov     dword ptr [edi], 0
call    sub_10004f90
mov     esi, eax
test    esi, esi
jns     short loc_1000396f
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, [ebp+var_4]
push    ebx
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebx]
push    edi
push    [ebp+this]
mov     esi, [eax]
mov     ecx, esi
push    ebx
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebx]
mov     edi, eax
push    ebx
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     ebx
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, [ebp+arg_4]
lea     ecx, [ebp+var_4]
mov     dword ptr [edi], 0
call    sub_10005120
mov     esi, eax
test    esi, esi
jns     short loc_100039ef
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, [ebp+var_4]
push    ebx
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebx]
push    edi
push    [ebp+this]
mov     esi, [eax]
mov     ecx, esi
push    ebx
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebx]
mov     edi, eax
push    ebx
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     ebx
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003a40
mov     eax, large fs:0
push    eax
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     [ebp+var_4], 0
mov     [ebp+var_18], ecx
mov     edx, [eax+8]
lea     edi, [eax+4]
cmp     edx, [eax+0ch]
jz      short loc_10003aab
mov     byte ptr [ebp+var_4], 1
mov     [edx], ecx
test    ecx, ecx
jz      short loc_10003aa3
mov     eax, [ecx]
push    ecx
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
add     dword ptr [edi+4], 4
xor     eax, eax
jmp     short loc_10003b0f
lea     eax, [ebp+var_18]
mov     ecx, edi
push    eax
push    edx
call    sub_10004710
xor     eax, eax
jmp     short loc_10003b0f
mov     eax, [ebp+var_1c]
mov     eax, [eax]
mov     [ebp+var_18], eax
mov     eax, offset loc_10003b0c
retn
mov     eax, [ebp+var_20]
mov     eax, [eax+10h]
mov     [ebp+var_18], eax
mov     eax, offset loc_10003b0c
retn
mov     [ebp+var_18], 8007000eh
mov     eax, offset loc_10003b0c
retn
mov     [ebp+var_18], 80070057h
mov     eax, offset loc_10003b0c
retn
mov     [ebp+var_18], 8000000bh
mov     eax, offset loc_10003b0c
retn
mov     [ebp+var_18], 8007023eh
mov     eax, offset loc_10003b0c
retn
mov     eax, [ebp+var_18]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003b30
mov     eax, large fs:0
push    eax
sub     esp, 20h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     edi, [ebp+arg_4]
mov     eax, [ebp+arg_0]
mov     [ebp+var_20], eax
mov     [ebp+var_4], 0
mov     eax, [edi]
mov     [ebp+var_24], edi
mov     esi, [eax+0ch]
lea     eax, [ebp+var_1c]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10003b9c
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     loc_10003cb0
xor     ebx, ebx
xchg    ax, ax
cmp     ebx, [ebp+var_1c]
jnb     loc_10003c58
mov     [ebp+var_18], 0
mov     byte ptr [ebp+var_4], 1
mov     eax, [edi]
mov     esi, [eax+10h]
lea     eax, [ebp+var_18]
push    eax
push    offset dword_1001800c
push    ebx
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_10003c00
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 2
mov     ecx, [ebp+var_18]
test    ecx, ecx
jz      short loc_10003bf9
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
jmp     loc_10003cb0
mov     edi, [ebp+var_20]
mov     ecx, [edi+8]
cmp     ecx, [edi+0ch]
jz      short loc_10003c23
mov     dword ptr [ecx], 0
mov     eax, [ebp+var_18]
mov     [ebp+var_18], 0
mov     [ecx], eax
add     dword ptr [edi+8], 4
jmp     short loc_10003c30
lea     eax, [ebp+var_18]
push    eax
push    ecx
lea     ecx, [edi+4]
call    sub_10004930
mov     byte ptr [ebp+var_4], 3
mov     eax, [ebp+var_18]
test    eax, eax
jz      short loc_10003c4b
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, [ebp+var_24]
inc     ebx
mov     byte ptr [ebp+var_4], 0
jmp     loc_10003ba0
xor     eax, eax
jmp     short loc_10003cb0
mov     eax, [ebp+var_28]
mov     eax, [eax]
mov     [ebp+var_18], eax
mov     eax, offset loc_10003cad
retn
mov     eax, [ebp+var_2c]
mov     eax, [eax+10h]
mov     [ebp+var_18], eax
mov     eax, offset loc_10003cad
retn
mov     [ebp+var_18], 8007000eh
mov     eax, offset loc_10003cad
retn
mov     [ebp+var_18], 80070057h
mov     eax, offset loc_10003cad
retn
mov     [ebp+var_18], 8000000bh
mov     eax, offset loc_10003cad
retn
mov     [ebp+var_18], 8007023eh
mov     eax, offset loc_10003cad
retn
mov     eax, [ebp+var_18]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003cd0
mov     eax, large fs:0
push    eax
push    ecx
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     [ebp+var_10], edi
mov     ebx, [edi+8]
mov     eax, ebx
mov     ecx, [edi+4]
sub     eax, ecx
sar     eax, 2
cmp     edx, eax
jb      short loc_10003d29
mov     eax, 80070057h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
lea     ecx, [ecx+edx*4]
lea     esi, [ecx+4]
cmp     esi, ebx
jz      short loc_10003d6d
mov     edx, [esi]
cmp     [ecx], edx
jz      short loc_10003d5e
mov     dword ptr [esi], 0
mov     eax, [ecx]
mov     [ecx], edx
mov     [ebp+var_4], 0
test    eax, eax
jz      short loc_10003d5e
mov     ecx, [eax]
push    eax
mov     edi, [ecx+8]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     ecx, esi
lea     esi, [ecx+4]
cmp     esi, ebx
jnz     short loc_10003d33
mov     edi, [ebp+var_10]
mov     ebx, [edi+8]
mov     [ebp+var_4], 1
mov     ecx, [ebx-4]
test    ecx, ecx
jz      short loc_10003d8b
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
add     dword ptr [edi+8], 0fffffffch
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    ecx
mov     edx, [esi+8]
mov     ecx, [esi+4]
call    sub_10004b00
mov     eax, [esi+4]
add     esp, 4
mov     [esi+8], eax
xor     eax, eax
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_4]
mov     ecx, [eax+4]
mov     eax, [eax+8]
sub     eax, ecx
sar     eax, 2
cmp     edx, eax
jb      short loc_10003e01
mov     eax, 8000000bh
pop     ebp
retn    10h
mov     ecx, [ecx+edx*4]
push    esi
push    [ebp+arg_c]
mov     eax, [ecx]
push    [ebp+arg_8]
push    ecx
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
sub     esp, 8
push    ebx
push    esi
xor     esi, esi
push    edi
test    eax, eax
jz      loc_10003eba
mov     ebx, [ebp+arg_0]
mov     edx, [ebp+arg_c]
mov     [ebp+var_4], edx
mov     ecx, [ebx+8]
mov     eax, [ebx-8]
mov     edi, [ebx-0ch]
sub     eax, edi
sar     eax, 2
cmp     ecx, eax
jnb     short loc_10003eb7
mov     ecx, [edi+ecx*4]
push    edx
push    [ebp+arg_8]
mov     eax, [ecx]
push    ecx
mov     edi, [eax]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     [ebp+var_8], eax
test    eax, eax
js      short loc_10003e87
mov     edx, [ebp+var_4]
inc     esi
inc     dword ptr [ebx+8]
add     edx, 4
mov     eax, [ebp+arg_4]
mov     ecx, [ebx+8]
mov     [ebp+var_4], edx
cmp     esi, eax
jb      short loc_10003e42
jmp     short loc_10003eba
test    esi, esi
jz      short loc_10003ec9
nop     dword ptr [eax+eax+00h]
mov     eax, [ebp+arg_c]
mov     eax, [eax+esi*4]
push    eax
mov     ecx, [eax]
mov     edi, [ecx+8]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
sub     esi, 1
jnz     short loc_10003e90
mov     eax, [ebp+var_8]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    14h
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_10]
test    ecx, ecx
jz      short loc_10003ec3
mov     [ecx], esi
cmp     esi, eax
sbb     eax, eax
neg     eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     eax, [edx-8]
sub     eax, [edx-0ch]
mov     ecx, [edx+8]
add     ecx, [ebp+arg_4]
sar     eax, 2
cmp     ecx, eax
jb      short loc_10003f02
mov     eax, 80070057h
pop     ebp
retn    8
mov     [edx+8], ecx
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+8], 0
xor     eax, eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     dword ptr [eax], 0
mov     eax, 80004001h
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
push    esi
push    [ebp+arg_c]
add     ecx, 0fffffffch
push    [ebp+arg_8]
push    offset dword_1001800c
mov     eax, [ecx]
push    [ebp+arg_4]
push    ecx
mov     esi, [eax+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
movups  xmm0, xmmword ptr [eax+28h]
mov     eax, [ebp+arg_4]
movups  xmmword ptr [eax], xmm0
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
movups  xmm0, xmmword ptr [eax]
xor     eax, eax
movups  xmmword ptr [ecx+28h], xmm0
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10003fc0
mov     eax, large fs:0
push    eax
sub     esp, 30h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_3c], ecx
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_30]
push    eax
mov     [ebp+var_28], 0
mov     [ebp+var_30], 0
mov     [ebp+var_2c], 0
mov     [ebp+var_24], 101h
call    sub_10010d80
mov     esi, eax
test    esi, esi
jns     short loc_1000402d
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     loc_1000425a
lea     ecx, [ebp+var_18]
mov     [ebp+var_4], 0
call    sub_10005230
mov     esi, eax
test    esi, esi
jns     short loc_1000405d
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     loc_1000425a
mov     ebx, [ebp+var_18]
mov     [ebp+var_34], ebx
push    ebx
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
lea     ecx, [ebp+var_1c]
mov     byte ptr [ebp+var_4], 2
call    sub_10005120
mov     edi, eax
test    edi, edi
js      loc_1000422a
mov     edi, [ebp+var_1c]
push    edi
mov     [ebp+var_20], edi
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
push    edi
push    offset afilemonitor
lea     ecx, [ebp+var_30]
call    sub_10001350
test    eax, eax
js      short loc_1000411c
mov     eax, [ebx]
push    edi
push    ebx
mov     esi, [eax+14h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_20], eax
test    eax, eax
js      short loc_100040d5
mov     byte ptr [ebp+var_4], 8
mov     eax, [edi]
push    edi
mov     esi, [eax+8]
jmp     short loc_10004069
mov     ecx, [ebp+4]
mov     edx, eax
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 6
mov     ecx, [ebp+var_1c]
test    ecx, ecx
jz      short loc_100040fa
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 7
mov     eax, [ebp+var_18]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp+var_20]
jmp     loc_1000425a
mov     byte ptr [ebp+var_4], 5
test    edi, edi
jz      short loc_10004134
mov     eax, [edi]
push    edi
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, [ebp+var_3c]
add     edi, 38h
mov     byte ptr [ebp+var_4], 0ah
mov     ecx, [edi]
test    ecx, ecx
jz      loc_100041ca
mov     [ebp+var_18], 0
mov     [ebp+var_1c], 0
mov     eax, [ecx]
mov     esi, [eax]
lea     eax, [ebp+var_18]
push    eax
push    offset dword_1001800c
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebx]
mov     esi, [eax]
lea     eax, [ebp+var_1c]
push    eax
push    offset dword_1001800c
push    ebx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp+var_18]
mov     ecx, [ebp+var_1c]
cmp     eax, ecx
setz    [ebp+var_35]
mov     byte ptr [ebp+var_4], 0bh
test    ecx, ecx
jz      short loc_100041ad
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp+var_18]
mov     byte ptr [ebp+var_4], 0ch
test    eax, eax
jz      short loc_100041c5
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     al, [ebp+var_35]
jmp     short loc_100041cc
xor     al, al
mov     byte ptr [ebp+var_4], 9
test    al, al
jnz     short loc_1000420f
mov     eax, [edi]
mov     [ebp+var_3c], eax
mov     eax, [ebx]
push    edi
push    offset dword_10017f84
push    ebx
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
jns     short loc_100041f8
mov     dword ptr [edi], 0
mov     ecx, [ebp+var_3c]
test    ecx, ecx
jz      short loc_1000420f
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0dh
mov     eax, [ebx]
push    ebx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
xor     eax, eax
jmp     short loc_1000425a
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 4
mov     eax, [ebp+var_18]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+14h+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
lea     ecx, [esp+18h+var_14]
push    esi
push    edi
mov     edi, [ebp+arg_4]
push    edi
mov     [esp+24h+var_c], 0
mov     [esp+24h+var_14], 0
mov     [esp+24h+var_10], 0
mov     [esp+24h+var_8], 101h
call    sub_10010d80
mov     esi, eax
test    esi, esi
js      loc_10004359
lea     eax, [ebx+24h]
push    eax
push    ecx
lea     ecx, [esp+28h+var_14]
call    sub_10001440
mov     esi, eax
test    esi, esi
js      short loc_10004359
cmp     byte ptr [esp+20h+var_8+2], 0
jnz     short loc_10004345
mov     eax, [esp+20h+var_14]
mov     byte ptr [esp+20h+var_8+2], 1
push    eax
mov     ecx, [eax]
mov     esi, [ecx+2ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10004317
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     short loc_10004341
mov     eax, [esp+20h+var_14]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+50h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
jz      short loc_10004336
mov     byte ptr [esp+20h+var_8], 1
jmp     short loc_10004345
lea     ecx, [esp+20h+var_14]
call    sub_100111d0
mov     esi, eax
test    esi, esi
js      short loc_10004359
push    offset afilemonitors
lea     ecx, [esp+24h+var_14]
call    sub_10010e70
mov     esi, eax
test    esi, esi
jns     short loc_10004379
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+14h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    edi
lea     ecx, [ebx-4]
call    sub_10003fc0
lea     ecx, [esp+20h+var_14]
call    sub_10010fc0
mov     ecx, [esp+20h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100043a0
mov     eax, large fs:0
push    eax
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+var_24], edi
mov     eax, [ebp+arg_0]
push    0
mov     [ebp+var_1c], eax
push    offset afilemonitors
mov     edx, [eax]
push    0
push    edx
mov     eax, [edx]
mov     esi, [eax+6ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10004408
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     loc_1000452a
mov     ecx, [edi+38h]
test    ecx, ecx
jz      loc_10004515
mov     eax, [ecx]
mov     esi, [eax+0ch]
lea     eax, [ebp+var_18]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_100043f7
xor     ebx, ebx
cmp     [ebp+var_18], ebx
jbe     loc_10004515
nop     dword ptr [eax+eax+00000000h]
mov     [ebp+var_14], 0
mov     [ebp+var_4], 0
mov     ecx, [edi+38h]
mov     eax, [ecx]
mov     esi, [eax+10h]
lea     eax, [ebp+var_14]
push    eax
push    offset dword_10017de0
push    ebx
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      loc_10004548
mov     eax, [ebp+var_14]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_1c]
push    0
push    offset afilemonitor
push    0
mov     ecx, [eax]
push    ecx
mov     eax, [ecx]
mov     esi, [eax+6ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_100044ab
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_100044df
mov     esi, [ebp+var_1c]
push    ecx
push    [ebp+var_20]
mov     ecx, esi
call    sub_100112b0
mov     edi, eax
test    edi, edi
jns     short loc_100044cb
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_100044df
mov     eax, [esi]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+3ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      short loc_10004548
mov     [ebp+var_4], 3
mov     eax, [ebp+var_14]
test    eax, eax
jz      short loc_10004501
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, [ebp+var_24]
inc     ebx
mov     [ebp+var_4], 0ffffffffh
cmp     ebx, [ebp+var_18]
jb      loc_10004440
mov     eax, [ebp+var_1c]
mov     eax, [eax]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+3ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 2
mov     ecx, [ebp+var_14]
test    ecx, ecx
jz      short loc_10004570
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
jmp     short loc_1000452a
push    ebp
mov     ebp, esp
sub     esp, 58h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+sz]
push    esi
push    edi
mov     edi, [ebp+arg_4]
push    27h
push    eax
lea     eax, [ebx+24h]
mov     [ebp+var_58], edi
push    eax
call    ds:stringfromguid2
test    eax, eax
jg      short loc_100045e1
mov     ecx, [ebp+4]
mov     edx, 80004005h
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     esi, 80004005h
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [edi]
mov     esi, [eax+1ch]
lea     eax, [ebp+sz]
push    eax
push    0
push    offset aid
push    0
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10004623
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
lea     eax, [ebp+var_58]
push    eax
lea     ecx, [ebx-4]
call    sub_100043a0
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     ecx, [eax+38h]
mov     eax, [ebp+arg_4]
push    ecx
mov     [eax], ecx
mov     eax, [ecx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
xor     eax, eax
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004680
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, [ebp+arg_0]
mov     edi, [ebp+arg_4]
mov     ecx, [ebx+38h]
cmp     ecx, edi
jz      short loc_100046ee
mov     [ebp+var_4], 0
test    edi, edi
jz      short loc_100046d0
mov     eax, [edi]
push    edi
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebx+38h]
mov     [ebx+38h], edi
mov     [ebp+var_4], 1
test    ecx, ecx
jz      short loc_100046ee
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004710
mov     eax, large fs:0
push    eax
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, ecx
mov     [ebp+var_10], eax
mov     edi, [ebp+arg_0]
mov     esi, edi
mov     edx, [eax]
sub     esi, edx
mov     ecx, [eax+4]
sub     ecx, edx
sar     esi, 2
sar     ecx, 2
cmp     ecx, 3fffffffh
jz      loc_10004925
lea     ebx, [ecx+1]
mov     ecx, [eax+8]
sub     ecx, edx
mov     [ebp+var_18], ebx
sar     ecx, 2
mov     eax, 3fffffffh
mov     edx, ecx
shr     edx, 1
sub     eax, edx
cmp     ecx, eax
jbe     short loc_1000477e
mov     eax, ebx
jmp     short loc_10004786
lea     eax, [edx+ecx]
cmp     eax, ebx
cmovb   eax, ebx
lea     ecx, ds:0[eax*4]
mov     [ebp+var_1c], ecx
cmp     eax, 3fffffffh
jbe     short loc_1000479c
or      ecx, 0ffffffffh
jmp     short loc_100047a4
cmp     ecx, 1000h
jb      short loc_100047cb
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_1000491f
lea     ebx, [eax+23h]
and     ebx, 0ffffffe0h
mov     [ebx-4], eax
jmp     short loc_100047de
test    ecx, ecx
jz      short loc_100047dc
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     ebx, eax
jmp     short loc_100047de
xor     ebx, ebx
mov     eax, [ebp+arg_4]
lea     edx, [ebx+esi*4]
mov     [ebp+var_4], 0
mov     [ebp+var_14], edx
mov     ecx, [eax]
mov     byte ptr [ebp+var_4], 1
mov     [edx], ecx
test    ecx, ecx
jz      short loc_1000480a
mov     eax, [ecx]
push    ecx
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edx, [ebp+var_10]
mov     ecx, ebx
mov     esi, [edx+4]
mov     edx, [edx]
cmp     edi, esi
jnz     short loc_10004847
cmp     edx, esi
jz      short loc_1000483a
nop     dword ptr [eax+00h]
mov     dword ptr [ecx], 0
mov     eax, [edx]
mov     dword ptr [edx], 0
add     edx, 4
mov     [ecx], eax
add     ecx, 4
cmp     edx, esi
jnz     short loc_10004820
push    ecx
mov     edx, ecx
call    sub_10004b00
mov     esi, [ebp+var_10]
jmp     short loc_100048b2
cmp     edx, edi
jz      short loc_1000486a
nop     dword ptr [eax+eax+00h]
mov     dword ptr [ecx], 0
mov     eax, [edx]
mov     dword ptr [edx], 0
add     edx, 4
mov     [ecx], eax
add     ecx, 4
cmp     edx, edi
jnz     short loc_10004850
push    ecx
mov     edx, ecx
call    sub_10004b00
mov     esi, [ebp+var_10]
add     esp, 4
mov     ecx, [ebp+var_14]
add     ecx, 4
mov     edx, [esi+4]
cmp     edi, edx
jz      short loc_100048aa
nop     word ptr [eax+eax+00000000h]
mov     dword ptr [ecx], 0
mov     eax, [edi]
mov     dword ptr [edi], 0
add     edi, 4
mov     [ecx], eax
add     ecx, 4
cmp     edi, edx
jnz     short loc_10004890
push    ecx
mov     edx, ecx
call    sub_10004b00
mov     ecx, [esi]
add     esp, 4
test    ecx, ecx
jz      short loc_100048f5
mov     edx, [esi+4]
push    ecx
call    sub_10004b00
mov     ecx, [esi+8]
add     esp, 4
mov     eax, [esi]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_100048eb
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_1000491f
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
add     esp, 8
mov     ecx, [ebp+var_18]
mov     eax, [ebp+var_14]
mov     [esi], ebx
lea     ecx, [ebx+ecx*4]
mov     [esi+4], ecx
mov     ecx, [ebp+var_1c]
add     ecx, ebx
mov     [esi+8], ecx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
call    ds:_invalid_parameter_noinfo_noreturn
call    sub_100023f0
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_4]
push    ebx
mov     [ebp+var_8], eax
mov     ebx, ecx
push    esi
mov     esi, [ebp+arg_0]
mov     eax, esi
push    edi
mov     edx, [ebx]
sub     eax, edx
sar     eax, 2
mov     [ebp+var_4], eax
mov     eax, [ebx+4]
sub     eax, edx
sar     eax, 2
cmp     eax, 3fffffffh
jz      loc_10004afa
mov     ecx, [ebx+8]
lea     edi, [eax+1]
sub     ecx, edx
mov     [ebp+var_c], edi
sar     ecx, 2
mov     eax, 3fffffffh
mov     edx, ecx
shr     edx, 1
sub     eax, edx
cmp     ecx, eax
jbe     short loc_10004984
mov     eax, edi
jmp     short loc_1000498c
lea     eax, [edx+ecx]
cmp     eax, edi
cmovb   eax, edi
lea     ecx, ds:0[eax*4]
mov     [ebp+var_10], ecx
cmp     eax, 3fffffffh
jbe     short loc_100049a2
or      ecx, 0ffffffffh
jmp     short loc_100049aa
cmp     ecx, 1000h
jb      short loc_100049d1
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_10004af4
lea     edi, [eax+23h]
and     edi, 0ffffffe0h
mov     [edi-4], eax
jmp     short loc_100049e4
test    ecx, ecx
jz      short loc_100049e2
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     edi, eax
jmp     short loc_100049e4
xor     edi, edi
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_8]
lea     edx, [edi+eax*4]
mov     dword ptr [edx], 0
mov     [ebp+var_4], edx
mov     eax, [ecx]
mov     dword ptr [ecx], 0
mov     ecx, edi
mov     [edx], eax
mov     eax, [ebx+4]
mov     edx, [ebx]
cmp     esi, eax
jnz     short loc_10004a2d
mov     esi, eax
cmp     edx, esi
jz      short loc_10004a8a
mov     dword ptr [ecx], 0
mov     eax, [edx]
mov     dword ptr [edx], 0
add     edx, 4
mov     [ecx], eax
add     ecx, 4
cmp     edx, esi
jnz     short loc_10004a11
jmp     short loc_10004a8a
cmp     edx, esi
jz      short loc_10004a4b
mov     dword ptr [ecx], 0
mov     eax, [edx]
mov     dword ptr [edx], 0
add     edx, 4
mov     [ecx], eax
add     ecx, 4
cmp     edx, esi
jnz     short loc_10004a31
push    ecx
mov     edx, ecx
call    sub_10004b00
mov     ecx, [ebp+var_4]
add     esp, 4
mov     edx, [ebx+4]
add     ecx, 4
cmp     esi, edx
jz      short loc_10004a8a
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
mov     dword ptr [ecx], 0
mov     eax, [esi]
mov     dword ptr [esi], 0
add     esi, 4
mov     [ecx], eax
add     ecx, 4
cmp     esi, edx
jnz     short loc_10004a70
push    ecx
mov     edx, ecx
call    sub_10004b00
mov     ecx, [ebx]
add     esp, 4
test    ecx, ecx
jz      short loc_10004ad5
mov     edx, [ebx+4]
push    ecx
call    sub_10004b00
mov     ecx, [ebx+8]
add     esp, 4
mov     eax, [ebx]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_10004acb
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_10004af4
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
add     esp, 8
mov     eax, [ebp+var_c]
mov     [ebx], edi
lea     ecx, [edi+eax*4]
mov     eax, [ebp+var_4]
mov     [ebx+4], ecx
mov     ecx, [ebp+var_10]
add     ecx, edi
pop     edi
pop     esi
mov     [ebx+8], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
call    ds:_invalid_parameter_noinfo_noreturn
call    sub_100023f0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d9e0
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, edx
mov     esi, ecx
cmp     esi, ebx
jz      short loc_10004b5b
nop     dword ptr [eax]
mov     [ebp+var_4], 0
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_10004b4d
mov     eax, [ecx]
push    ecx
mov     edi, [eax+8]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
add     esi, 4
mov     [ebp+var_4], 0ffffffffh
cmp     esi, ebx
jnz     short loc_10004b30
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_10017f28
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
or      ebx, 0ffffffffh
lock xadd [eax+1ch], ebx
dec     ebx
jnz     short loc_10004bee
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_10004bd5
mov     eax, [edi]
push    1
mov     esi, [eax+24h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, 1
lock xadd [ecx+1ch], eax
inc     eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_10017fa4
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
or      ebx, 0ffffffffh
lock xadd [eax+8], ebx
dec     ebx
jnz     short loc_10004c9e
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_10004c85
mov     eax, [edi]
push    1
mov     esi, [eax+24h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_10017fd8
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
or      ebx, 0ffffffffh
lock xadd [eax+8], ebx
dec     ebx
jnz     short loc_10004d2e
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_10004d15
mov     eax, [edi]
push    1
mov     esi, [eax+1ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, ecx
push    esi
push    edi
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcenumerableobjectcollection@@@atl@@6b@
mov     dword ptr [ebx+10h], offset ??_7?$ccomobject@vcenumerableobjectcollection@@@atl@@6b@_0
mov     dword ptr [ebx+14h], offset ??_7?$ccomobject@vcenumerableobjectcollection@@@atl@@6b@_1
mov     dword ptr [ebx+1ch], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
lea     ecx, [ebx+4]
call    sub_10004f30
cmp     byte ptr [ebx+38h], 0
lea     eax, [ebx+20h]
jz      short loc_10004d96
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_10004da7
push    3ch
push    ebx
call    sub_10012c63
add     esp, 8
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcfilemonitordefinition@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vcfilemonitordefinition@scheduler@@@atl@@6b@_0
mov     dword ptr [ebx+8], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     ecx, ebx
call    sub_10004e10
test    [ebp+arg_0], 1
jz      short loc_10004dfb
push    54h
push    ebx
call    sub_10012c63
add     esp, 8
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    esi
mov     esi, ecx
mov     ecx, [esi+50h]
cmp     ecx, 8
jb      short loc_10004e49
mov     eax, [esi+3ch]
lea     ecx, ds:2[ecx*2]
cmp     ecx, 1000h
jb      short loc_10004e3f
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_10004e71
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
add     esp, 8
xor     eax, eax
mov     dword ptr [esi+4ch], 0
mov     dword ptr [esi+50h], 7
mov     [esi+3ch], ax
add     esi, 0ch
cmp     [esi+18h], al
jz      short loc_10004e6f
push    esi
mov     [esi+18h], al
call    ds:deletecriticalsection
pop     esi
retn
call    ds:_invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d9e0
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vccustomtask@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vccustomtask@scheduler@@@atl@@6b@_0
mov     dword ptr [ebx+8], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     [ebp+var_4], 0
mov     ecx, [ebx+38h]
test    ecx, ecx
jz      short loc_10004ef0
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
cmp     byte ptr [ebx+24h], 0
lea     eax, [ebx+0ch]
jz      short loc_10004f04
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_10004f15
push    3ch
push    ebx
call    sub_10012c63
add     esp, 8
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    esi
mov     esi, ecx
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_10004f87
mov     edx, [esi+4]
push    ecx
call    sub_10004b00
mov     ecx, [esi+8]
add     esp, 4
mov     eax, [esi]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_10004f69
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_10004f89
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
mov     dword ptr [esi], 0
add     esp, 8
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
pop     esi
retn
call    ds:_invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10004f90
mov     eax, large fs:0
push    eax
sub     esp, 8
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, ecx
mov     [ebp+var_14], eax
test    eax, eax
jnz     short loc_10004fd6
mov     eax, 80004003h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    offset dword_100203fc
push    3ch
mov     dword ptr [eax], 0
call    ??2@yapaxiabunothrow_t@std@@@z
mov     esi, eax
add     esp, 8
mov     [ebp+var_10], esi
test    esi, esi
jz      short loc_10005045
mov     dword ptr [esi+8], 0
lea     eax, [esi+28h]
xorps   xmm0, xmm0
movups  xmmword ptr [esi+0ch], xmm0
push    eax
movq    qword ptr [esi+1ch], xmm0
mov     byte ptr [esi+24h], 0
mov     dword ptr [esi+38h], 0
call    ds:cocreateguid
mov     edi, dword_10020788
mov     dword ptr [esi], offset ??_7?$ccomobject@vccustomtask@scheduler@@@atl@@6b@
mov     dword ptr [esi+4], offset ??_7?$ccomobject@vccustomtask@scheduler@@@atl@@6b@_0
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+var_10]
jmp     short loc_10005047
xor     edi, edi
mov     [ebp+var_4], 0ffffffffh
test    edi, edi
jz      loc_100050f6
lea     eax, [edi+8]
lock inc dword ptr [eax]
xor     esi, esi
lea     eax, [edi+0ch]
push    esi
push    esi
push    eax
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_10005087
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_10005085
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_1000508b
mov     byte ptr [edi+24h], 1
test    esi, esi
js      short loc_100050c8
lea     ecx, [ebp+var_10]
mov     dword ptr [edi+38h], 0
call    sub_10005230
mov     esi, eax
test    esi, esi
jns     short loc_100050b0
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     short loc_100050c8
mov     ecx, [ebp+var_10]
mov     [edi+38h], ecx
push    ecx
mov     eax, [ecx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
xor     esi, esi
xor     eax, eax
lea     ecx, [edi+8]
test    esi, esi
cmovs   eax, esi
mov     [ebp+var_10], eax
lock dec dword ptr [ecx]
test    eax, eax
jz      short loc_100050fb
mov     eax, [edi]
push    1
mov     esi, [eax+1ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     eax, [ebp+var_10]
xor     edi, edi
jmp     short loc_100050fb
mov     eax, 8007000eh
mov     ecx, [ebp+var_14]
mov     [ecx], edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, ecx
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_10005138
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
push    offset dword_100203fc
push    54h
mov     dword ptr [eax], 0
mov     edi, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_100051c5
mov     dword ptr [ebx+8], 0
xorps   xmm0, xmm0
movups  xmmword ptr [ebx+0ch], xmm0
xor     eax, eax
movq    qword ptr [ebx+1ch], xmm0
mov     byte ptr [ebx+24h], 0
mov     dword ptr [ebx+38h], 1
mov     [ebx+3ch], ax
lea     eax, [ebx+28h]
push    eax
mov     dword ptr [ebx+4ch], 0
mov     dword ptr [ebx+50h], 7
call    ds:cocreateguid
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcfilemonitordefinition@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vcfilemonitordefinition@scheduler@@@atl@@6b@_0
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, 8007000eh
jmp     short loc_100051c7
xor     ebx, ebx
test    ebx, ebx
jz      short loc_10005221
xor     esi, esi
lea     edi, [ebx+0ch]
push    esi
push    esi
push    edi
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_100051f2
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_100051f4
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_100051fa
mov     byte ptr [edi+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     edi, edi
test    eax, eax
cmovs   edi, eax
test    edi, edi
jz      short loc_10005221
mov     eax, [ebx]
push    1
mov     esi, [eax+24h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
xor     ebx, ebx
mov     eax, [ebp+var_4]
mov     [eax], ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, ecx
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_10005248
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
push    offset dword_100203fc
push    3ch
mov     dword ptr [eax], 0
mov     edi, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_100052d3
mov     edi, dword_10020788
xorps   xmm0, xmm0
mov     dword ptr [ebx+1ch], 0
movups  xmmword ptr [ebx+20h], xmm0
movq    qword ptr [ebx+30h], xmm0
mov     byte ptr [ebx+38h], 0
mov     dword ptr [ebx+4], 0
mov     dword ptr [ebx+8], 0
mov     dword ptr [ebx+0ch], 0
mov     dword ptr [ebx+18h], 0
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcenumerableobjectcollection@@@atl@@6b@
mov     dword ptr [ebx+10h], offset ??_7?$ccomobject@vcenumerableobjectcollection@@@atl@@6b@_0
mov     dword ptr [ebx+14h], offset ??_7?$ccomobject@vcenumerableobjectcollection@@@atl@@6b@_1
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, 8007000eh
jmp     short loc_100052d5
xor     ebx, ebx
test    ebx, ebx
jz      short loc_1000532f
xor     esi, esi
lea     edi, [ebx+20h]
push    esi
push    esi
push    edi
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_10005300
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_10005302
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_10005308
mov     byte ptr [edi+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     edi, edi
test    eax, eax
cmovs   edi, eax
test    edi, edi
jz      short loc_1000532f
mov     eax, [ebx]
push    1
mov     esi, [eax+24h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
xor     ebx, ebx
mov     eax, [ebp+var_4]
mov     [eax], ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
sub     [esp+arg_0], 10h
jmp     sub_10004b90
sub     [esp+arg_0], 10h
jmp     sub_10004b70
sub     [esp+arg_0], 14h
jmp     sub_10004b90
sub     [esp+arg_0], 14h
jmp     sub_10004b70
sub     [esp+arg_0], 4
jmp     sub_10004cb0
sub     [esp+arg_0], 4
jmp     sub_10003f10
sub     [esp+arg_0], 4
jmp     sub_10003ee0
sub     [esp+arg_0], 10h
jmp     sub_10004c00
sub     [esp+arg_0], 14h
jmp     sub_10004c00
sub     [esp+arg_0], 4
jmp     sub_10004cd0
sub     [esp+arg_0], 4
jmp     sub_10004c40
sub     [esp+arg_0], 4
jmp     sub_10004c20
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+size]
push    edi
mov     edi, edx
test    esi, esi
jnz     short loc_10005414
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn
test    ecx, ecx
jnz     short loc_10005433
call    ds:_errno
mov     dword ptr [eax], 16h
call    ds:_invalid_parameter_noinfo
pop     edi
mov     eax, 16h
pop     esi
pop     ebp
retn
push    ebx
mov     ebx, [ebp+src]
test    ebx, ebx
jz      short loc_10005451
cmp     edi, esi
jb      short loc_10005451
push    esi
push    ebx
push    ecx
call    memcpy
add     esp, 0ch
xor     eax, eax
pop     ebx
pop     edi
pop     esi
pop     ebp
retn
push    edi
push    0
push    ecx
call    memset
add     esp, 0ch
test    ebx, ebx
jnz     short loc_1000547d
call    ds:_errno
mov     dword ptr [eax], 16h
call    ds:_invalid_parameter_noinfo
pop     ebx
pop     edi
mov     eax, 16h
pop     esi
pop     ebp
retn
cmp     edi, esi
jnb     short loc_10005473
call    ds:_errno
mov     dword ptr [eax], 22h
call    ds:_invalid_parameter_noinfo
pop     ebx
pop     edi
mov     eax, 22h
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0
push    0
push    [ebp+dwexceptionflags]
push    [ebp+dwexceptioncode]
call    ds:raiseexception
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, off_1001f1a0
push    esi
mov     esi, off_1001f19c
cmp     esi, eax
jnb     short loc_100054fa
push    ebx
mov     ebx, [ebp+arg_0]
push    edi
mov     edi, [esi]
test    edi, edi
jz      short loc_100054f1
mov     edi, [edi+1ch]
mov     ecx, edi
push    ebx
call    ds:___guard_check_icall_fptr
call    edi
mov     eax, off_1001f1a0
add     esi, 4
cmp     esi, eax
jb      short loc_100054d8
pop     edi
pop     ebx
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d9e0
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     [ebp+var_4], 0
cmp     dword ptr [edi+4], 0
jz      short loc_1000559a
cmp     dword ptr [edi+0ch], 0
jz      short loc_10005572
mov     ebx, [edi+0ch]
test    ebx, ebx
jz      short loc_10005564
mov     esi, [ebx]
mov     ecx, esi
push    dword ptr [ebx+4]
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, [ebx+8]
push    0ch
push    ebx
call    sub_10012c63
add     esp, 8
mov     ebx, esi
test    esi, esi
jnz     short loc_10005541
mov     dword ptr [edi+0ch], 0
mov     dword ptr [edi+0ch], 0
mov     ecx, [edi+28h]
test    ecx, ecx
jz      short loc_10005589
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
lea     eax, [edi+10h]
push    eax
call    ds:deletecriticalsection
mov     dword ptr [edi+4], 0
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 1
lock xadd [ecx+8], eax
inc     eax
retn
or      eax, 0ffffffffh
lock xadd [ecx+8], eax
dec     eax
retn
mov     eax, [ecx+8]
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000a800
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, [ebp+arg_0]
test    ebx, ebx
jnz     short loc_10005625
mov     eax, 80004003h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
xor     edi, edi
lea     esi, [ecx+28h]
cmp     [esi], edi
jnz     short loc_10005648
push    esi
push    offset riid
push    1
push    edi
push    offset rclsid
call    ds:cocreateinstance
mov     edi, eax
test    edi, edi
js      short loc_1000565e
mov     ecx, [esi]
mov     [ebx], ecx
mov     ecx, [esi]
push    ecx
mov     edx, [ecx]
mov     esi, [edx+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
xorps   xmm0, xmm0
lea     eax, [esi+4]
push    eax
mov     dword ptr [esi], offset ??_7exception@std@@6b@
movq    qword ptr [eax], xmm0
mov     eax, [ebp+arg_0]
add     eax, 4
push    eax
call    ds:__std_exception_copy
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     ecx, [ecx+4]
mov     eax, offset aunknownexcepti
test    ecx, ecx
cmovnz  eax, ecx
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
lea     eax, [esi+4]
mov     dword ptr [esi], offset ??_7exception@std@@6b@
push    eax
call    ds:__imp___std_exception_destroy
add     esp, 4
test    [ebp+arg_0], 1
jz      short loc_100056ea
push    0ch
push    esi
call    sub_10012c63
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ebx
mov     ebx, [ebp+dwflags]
push    esi
push    edi
mov     edi, ecx
test    ebx, ebx
jnz     short loc_1000574c
mov     ecx, [edi]
test    ecx, ecx
jz      loc_100057bb
or      eax, 0ffffffffh
lock xadd [ecx], eax
jnz     short loc_10005734
mov     esi, [edi]
call    ds:getprocessheap
push    esi
push    ebx
push    eax
call    ds:heapfree
mov     dword ptr [edi], 0
mov     al, 1
mov     dword ptr [edi+4], 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
lea     eax, [ebx+4]
push    eax
push    0
call    ds:getprocessheap
push    eax
call    ds:heapalloc
mov     esi, eax
mov     [ebp+var_4], esi
test    esi, esi
jnz     short loc_10005773
pop     edi
pop     esi
xor     al, al
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [ebp+src]
mov     dword ptr [esi], 0
test    eax, eax
jz      short loc_1000578f
push    ebx
push    eax
lea     ecx, [esi+4]
mov     edx, ebx
call    sub_10005400
add     esp, 8
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_100057b3
or      eax, 0ffffffffh
lock xadd [ecx], eax
jnz     short loc_100057b3
mov     esi, [edi]
call    ds:getprocessheap
push    esi
push    0
push    eax
call    ds:heapfree
mov     esi, [ebp+var_4]
mov     [edi], esi
mov     [edi+4], ebx
lock inc dword ptr [esi]
pop     edi
pop     esi
mov     al, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+buffercount]
xor     eax, eax
push    edi
mov     edi, [ebp+buffer]
test    ecx, ecx
jz      short loc_100057e8
cmp     ecx, 7fffffffh
jbe     short loc_100057ed
mov     eax, 80070057h
test    eax, eax
js      short loc_10005841
push    ebx
push    esi
lea     eax, [ebp+arglist]
xor     ebx, ebx
push    eax
push    ebx
push    [ebp+format]
lea     esi, [ecx-1]
push    esi
push    ecx
push    edi
call    sub_10003930
push    dword ptr [eax+4]
push    dword ptr [eax]
call    ds:__stdio_common_vsnprintf_s
or      ecx, 0ffffffffh
add     esp, 20h
test    eax, eax
cmovs   eax, ecx
test    eax, eax
js      short loc_10005832
cmp     eax, esi
ja      short loc_10005832
jnz     short loc_1000583a
mov     [esi+edi], bl
mov     eax, ebx
pop     esi
pop     ebx
pop     edi
pop     ebp
retn
mov     [esi+edi], bl
mov     ebx, 8007007ah
pop     esi
mov     eax, ebx
pop     ebx
pop     edi
pop     ebp
retn
test    ecx, ecx
jz      short loc_10005848
mov     byte ptr [edi], 0
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     edx, [ebp+arg_0]
mov     eax, ecx
push    ebx
push    esi
push    edi
movups  xmm0, xmmword ptr [edx]
mov     [ebp+var_4], eax
movups  xmmword ptr [eax], xmm0
movups  xmm0, xmmword ptr [edx+10h]
movups  xmmword ptr [eax+10h], xmm0
movups  xmm0, xmmword ptr [edx+20h]
movups  xmmword ptr [eax+20h], xmm0
movups  xmm0, xmmword ptr [edx+30h]
movups  xmmword ptr [eax+30h], xmm0
movups  xmm0, xmmword ptr [edx+40h]
movups  xmmword ptr [eax+40h], xmm0
mov     ecx, [edx+0ch]
test    ecx, ecx
jnz     short loc_10005897
mov     [ebp+var_20], 2
jmp     short loc_100058b9
lea     esi, [ecx+2]
nop     word ptr [eax+eax+00h]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_100058a0
sub     ecx, esi
sar     ecx, 1
lea     eax, ds:2[ecx*2]
mov     [ebp+var_20], eax
mov     ecx, [edx+14h]
test    ecx, ecx
jnz     short loc_100058c9
mov     [ebp+src], 1
jmp     short loc_100058df
lea     esi, [ecx+1]
nop     dword ptr [eax+00h]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_100058d0
sub     ecx, esi
lea     eax, [ecx+1]
mov     [ebp+src], eax
mov     ecx, [edx+18h]
test    ecx, ecx
jnz     short loc_100058ef
mov     [ebp+var_18], 1
jmp     short loc_10005901
lea     esi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_100058f2
sub     ecx, esi
lea     eax, [ecx+1]
mov     [ebp+var_18], eax
mov     ecx, [edx+1ch]
test    ecx, ecx
jnz     short loc_10005911
mov     [ebp+var_14], 1
jmp     short loc_10005923
lea     esi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005914
sub     ecx, esi
lea     eax, [ecx+1]
mov     [ebp+var_14], eax
mov     ecx, [edx+28h]
test    ecx, ecx
jnz     short loc_10005933
mov     [ebp+var_10], 1
jmp     short loc_10005945
lea     esi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005936
sub     ecx, esi
lea     eax, [ecx+1]
mov     [ebp+var_10], eax
mov     ecx, [edx+44h]
test    ecx, ecx
jnz     short loc_10005955
mov     [ebp+var_c], 1
jmp     short loc_10005967
lea     esi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005958
sub     ecx, esi
lea     eax, [ecx+1]
mov     [ebp+var_c], eax
mov     ecx, [edx+3ch]
test    ecx, ecx
jnz     short loc_10005977
mov     [ebp+var_8], 1
jmp     short loc_1000598f
lea     esi, [ecx+1]
nop     word ptr [eax+eax+00h]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005980
sub     ecx, esi
lea     eax, [ecx+1]
mov     [ebp+var_8], eax
mov     ecx, [edx+40h]
test    ecx, ecx
jnz     short loc_1000599b
lea     ebx, [ecx+2]
jmp     short loc_100059b6
lea     esi, [ecx+2]
xchg    ax, ax
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_100059a0
sub     ecx, esi
sar     ecx, 1
lea     ebx, ds:2[ecx*2]
mov     ecx, [edx+30h]
test    ecx, ecx
jnz     short loc_100059c2
lea     edi, [ecx+1]
jmp     short loc_100059d1
lea     esi, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_100059c5
sub     ecx, esi
lea     edi, [ecx+1]
mov     ecx, [edx+34h]
test    ecx, ecx
jnz     short loc_100059df
mov     ecx, 2
jmp     short loc_100059f8
lea     esi, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_100059e2
sub     ecx, esi
sar     ecx, 1
lea     ecx, ds:2[ecx*2]
mov     eax, [ebp+var_4]
add     edi, ecx
mov     esi, [eax+50h]
add     edi, ebx
add     edi, [ebp+var_8]
lea     ebx, [eax+50h]
add     edi, [ebp+var_c]
add     edi, [ebp+var_10]
add     edi, [ebp+var_14]
add     edi, [ebp+var_18]
add     edi, [ebp+src]
add     edi, [ebp+var_20]
test    esi, esi
jz      short loc_10005a54
cmp     dword ptr [esi], 1
jnz     short loc_10005a28
cmp     [eax+54h], edi
jnb     short loc_10005a63
test    esi, esi
jz      short loc_10005a54
or      eax, 0ffffffffh
lock xadd [esi], eax
jnz     short loc_10005a47
mov     esi, [ebx]
call    ds:getprocessheap
push    esi
push    0
push    eax
call    ds:heapfree
mov     dword ptr [ebx], 0
mov     dword ptr [ebx+4], 0
push    edi
push    0
mov     ecx, ebx
call    sub_10005700
mov     esi, [ebx]
mov     edx, [ebp+arg_0]
mov     ecx, [ebx+4]
lea     eax, [esi+4]
neg     esi
sbb     esi, esi
and     esi, eax
mov     edi, esi
neg     edi
sbb     edi, edi
lea     eax, [esi+ecx]
and     edi, eax
test    esi, esi
jz      loc_10005d6f
mov     ebx, [ebp+var_4]
mov     ecx, esi
lea     eax, [ebx+0ch]
push    eax
push    dword ptr [edx+0ch]
mov     edx, edi
call    sub_100062e0
mov     edx, [ebp+arg_0]
mov     esi, eax
add     esp, 8
add     ebx, 14h
mov     eax, [edx+14h]
mov     [ebp+src], eax
cmp     esi, edi
jz      short loc_10005af4
test    eax, eax
jz      short loc_10005af4
cmp     byte ptr [eax], 0
jz      short loc_10005af4
mov     ecx, eax
lea     eax, [ecx+1]
mov     [ebp+var_20], eax
nop     dword ptr [eax+eax+00h]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005ac0
sub     ecx, [ebp+var_20]
mov     eax, edi
inc     ecx
sub     eax, esi
mov     [ebp+var_20], ecx
cmp     eax, ecx
jb      short loc_10005af4
push    ecx
push    [ebp+src]
mov     edx, eax
mov     ecx, esi
call    sub_10005400
add     esp, 8
test    ebx, ebx
jz      short loc_10005aec
mov     [ebx], esi
add     esi, [ebp+var_20]
mov     edx, [ebp+arg_0]
jmp     short loc_10005afe
test    ebx, ebx
jz      short loc_10005afe
mov     dword ptr [ebx], 0
mov     ebx, [ebp+var_4]
mov     eax, [edx+18h]
add     ebx, 18h
mov     [ebp+src], eax
cmp     esi, edi
jz      short loc_10005b54
test    eax, eax
jz      short loc_10005b54
cmp     byte ptr [eax], 0
jz      short loc_10005b54
mov     ecx, eax
lea     eax, [ecx+1]
mov     [ebp+var_20], eax
nop
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005b20
sub     ecx, [ebp+var_20]
mov     eax, edi
inc     ecx
sub     eax, esi
mov     [ebp+var_20], ecx
cmp     eax, ecx
jb      short loc_10005b54
push    ecx
push    [ebp+src]
mov     edx, eax
mov     ecx, esi
call    sub_10005400
add     esp, 8
test    ebx, ebx
jz      short loc_10005b4c
mov     [ebx], esi
add     esi, [ebp+var_20]
mov     edx, [ebp+arg_0]
jmp     short loc_10005b5e
test    ebx, ebx
jz      short loc_10005b5e
mov     dword ptr [ebx], 0
mov     ebx, [ebp+var_4]
mov     eax, [edx+1ch]
add     ebx, 1ch
mov     [ebp+src], eax
cmp     esi, edi
jz      short loc_10005bb4
test    eax, eax
jz      short loc_10005bb4
cmp     byte ptr [eax], 0
jz      short loc_10005bb4
mov     ecx, eax
lea     eax, [ecx+1]
mov     [ebp+var_20], eax
nop
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005b80
sub     ecx, [ebp+var_20]
mov     eax, edi
inc     ecx
sub     eax, esi
mov     [ebp+var_20], ecx
cmp     eax, ecx
jb      short loc_10005bb4
push    ecx
push    [ebp+src]
mov     edx, eax
mov     ecx, esi
call    sub_10005400
add     esp, 8
test    ebx, ebx
jz      short loc_10005bac
mov     [ebx], esi
add     esi, [ebp+var_20]
mov     edx, [ebp+arg_0]
jmp     short loc_10005bbe
test    ebx, ebx
jz      short loc_10005bbe
mov     dword ptr [ebx], 0
mov     ebx, [ebp+var_4]
mov     eax, [edx+28h]
add     ebx, 28h
mov     [ebp+src], eax
cmp     esi, edi
jz      short loc_10005c14
test    eax, eax
jz      short loc_10005c14
cmp     byte ptr [eax], 0
jz      short loc_10005c14
mov     ecx, eax
lea     eax, [ecx+1]
mov     [ebp+var_20], eax
nop
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005be0
sub     ecx, [ebp+var_20]
mov     eax, edi
inc     ecx
sub     eax, esi
mov     [ebp+var_20], ecx
cmp     eax, ecx
jb      short loc_10005c14
push    ecx
push    [ebp+src]
mov     edx, eax
mov     ecx, esi
call    sub_10005400
add     esp, 8
test    ebx, ebx
jz      short loc_10005c0c
mov     [ebx], esi
add     esi, [ebp+var_20]
mov     edx, [ebp+arg_0]
jmp     short loc_10005c1e
test    ebx, ebx
jz      short loc_10005c1e
mov     dword ptr [ebx], 0
mov     ebx, [ebp+var_4]
mov     edx, [edx+44h]
add     ebx, 44h
cmp     esi, edi
jz      short loc_10005c6f
test    edx, edx
jz      short loc_10005c6f
cmp     byte ptr [edx], 0
jz      short loc_10005c6f
mov     ecx, edx
lea     eax, [ecx+1]
mov     [ebp+var_20], eax
nop     dword ptr [eax+00h]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005c40
sub     ecx, [ebp+var_20]
mov     eax, edi
inc     ecx
sub     eax, esi
mov     [ebp+var_20], ecx
cmp     eax, ecx
jb      short loc_10005c6f
push    ecx
push    edx
mov     edx, eax
mov     ecx, esi
call    sub_10005400
add     esp, 8
test    ebx, ebx
jz      short loc_10005c6a
mov     [ebx], esi
add     esi, [ebp+var_20]
jmp     short loc_10005c79
test    ebx, ebx
jz      short loc_10005c79
mov     dword ptr [ebx], 0
mov     edx, [ebp+arg_0]
mov     ebx, [ebp+var_4]
add     ebx, 3ch
mov     edx, [edx+3ch]
cmp     esi, edi
jz      short loc_10005ccf
test    edx, edx
jz      short loc_10005ccf
cmp     byte ptr [edx], 0
jz      short loc_10005ccf
mov     ecx, edx
lea     eax, [ecx+1]
mov     [ebp+var_20], eax
nop     word ptr [eax+eax+00h]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005ca0
sub     ecx, [ebp+var_20]
mov     eax, edi
inc     ecx
sub     eax, esi
mov     [ebp+var_20], ecx
cmp     eax, ecx
jb      short loc_10005ccf
push    ecx
push    edx
mov     edx, eax
mov     ecx, esi
call    sub_10005400
add     esp, 8
test    ebx, ebx
jz      short loc_10005cca
mov     [ebx], esi
add     esi, [ebp+var_20]
jmp     short loc_10005cd9
test    ebx, ebx
jz      short loc_10005cd9
mov     dword ptr [ebx], 0
mov     ebx, [ebp+var_4]
mov     edx, edi
mov     ecx, esi
lea     eax, [ebx+40h]
push    eax
mov     eax, [ebp+arg_0]
push    dword ptr [eax+40h]
call    sub_100062e0
mov     esi, eax
add     esp, 8
mov     eax, [ebp+arg_0]
add     ebx, 30h
mov     edx, [eax+30h]
cmp     esi, edi
jz      short loc_10005d41
test    edx, edx
jz      short loc_10005d41
cmp     byte ptr [edx], 0
jz      short loc_10005d41
mov     ecx, edx
lea     eax, [ecx+1]
mov     [ebp+var_20], eax
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_10005d12
sub     ecx, [ebp+var_20]
mov     eax, edi
inc     ecx
sub     eax, esi
mov     [ebp+var_20], ecx
cmp     eax, ecx
jb      short loc_10005d41
push    ecx
push    edx
mov     edx, eax
mov     ecx, esi
call    sub_10005400
add     esp, 8
test    ebx, ebx
jz      short loc_10005d3c
mov     [ebx], esi
add     esi, [ebp+var_20]
jmp     short loc_10005d4b
test    ebx, ebx
jz      short loc_10005d4b
mov     dword ptr [ebx], 0
mov     eax, [ebp+var_4]
mov     edx, edi
add     eax, 34h
mov     ecx, esi
push    eax
mov     eax, [ebp+arg_0]
push    dword ptr [eax+34h]
call    sub_100062e0
sub     edi, eax
push    edi
push    0
push    eax
call    memset
add     esp, 14h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
xorps   xmm0, xmm0
lea     ecx, [esi+0ch]
movq    qword ptr [esi+4], xmm0
mov     dword ptr [esi], offset ??_7resultexception@wil@@6b@
mov     dword ptr [ecx+50h], 0
mov     dword ptr [ecx+54h], 0
call    sub_10005850
mov     dword ptr [esi+64h], 0
mov     eax, esi
mov     dword ptr [esi+68h], 0
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, 1404h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ecx+64h]
push    esi
lea     esi, [ecx+64h]
test    eax, eax
jnz     short loc_10005e4b
lea     eax, [ecx+0ch]
mov     edx, 800h
push    eax
lea     ecx, [ebp+arglist]
call    sub_10003160
lea     eax, [ebp+arglist]
push    eax
push    offset format
lea     eax, [ebp+src]
push    400h
push    eax
call    sub_100057d0
lea     eax, [ebp+src]
add     esp, 14h
lea     edx, [eax+1]
nop
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_10005e30
sub     eax, edx
mov     ecx, esi
inc     eax
push    eax
lea     eax, [ebp+src]
push    eax
call    sub_10005700
mov     eax, [esi]
lea     ecx, [eax+4]
neg     eax
pop     esi
sbb     eax, eax
and     eax, ecx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, ecx
or      ebx, 0ffffffffh
mov     ecx, [edi+64h]
test    ecx, ecx
jz      short loc_10005eab
mov     eax, ebx
lock xadd [ecx], eax
jnz     short loc_10005e9d
mov     esi, [edi+64h]
call    ds:getprocessheap
push    esi
push    0
push    eax
call    ds:heapfree
mov     dword ptr [edi+64h], 0
mov     dword ptr [edi+68h], 0
mov     eax, [edi+5ch]
test    eax, eax
jz      short loc_10005eda
lock xadd [eax], ebx
dec     ebx
jnz     short loc_10005ecc
mov     esi, [edi+5ch]
call    ds:getprocessheap
push    esi
push    0
push    eax
call    ds:heapfree
mov     dword ptr [edi+5ch], 0
mov     dword ptr [edi+60h], 0
lea     eax, [edi+4]
mov     dword ptr [edi], offset ??_7exception@std@@6b@
push    eax
call    ds:__imp___std_exception_destroy
add     esp, 4
test    [ebp+arg_0], 1
jz      short loc_10005efe
push    6ch
push    edi
call    sub_10012c63
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebx
push    esi
push    edi
mov     edi, ecx
or      ebx, 0ffffffffh
mov     ecx, [edi+64h]
test    ecx, ecx
jz      short loc_10005f48
mov     eax, ebx
lock xadd [ecx], eax
jnz     short loc_10005f3a
mov     esi, [edi+64h]
call    ds:getprocessheap
push    esi
push    0
push    eax
call    ds:heapfree
mov     dword ptr [edi+64h], 0
mov     dword ptr [edi+68h], 0
mov     eax, [edi+5ch]
test    eax, eax
jz      short loc_10005f77
lock xadd [eax], ebx
dec     ebx
jnz     short loc_10005f69
mov     esi, [edi+5ch]
call    ds:getprocessheap
push    esi
push    0
push    eax
call    ds:heapfree
mov     dword ptr [edi+5ch], 0
mov     dword ptr [edi+60h], 0
lea     eax, [edi+4]
mov     dword ptr [edi], offset ??_7exception@std@@6b@
push    eax
call    ds:__imp___std_exception_destroy
add     esp, 4
pop     edi
pop     esi
pop     ebx
retn
push    0
push    0
call    _cxxthrowexception
push    ebp
mov     ebp, esp
sub     esp, 6ch
lea     ecx, [ebp+pexceptionobject]
push    [ebp+arg_0]
call    sub_10005d80
push    offset __ti2?avresultexception@wil@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    _cxxthrowexception
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
xorps   xmm0, xmm0
push    edi
mov     edi, [ebp+arg_0]
lea     eax, [esi+4]
push    eax
mov     dword ptr [esi], offset ??_7exception@std@@6b@
movq    qword ptr [eax], xmm0
lea     eax, [edi+4]
push    eax
call    ds:__std_exception_copy
mov     dword ptr [esi], offset ??_7resultexception@wil@@6b@
add     esp, 8
movups  xmm0, xmmword ptr [edi+0ch]
movups  xmmword ptr [esi+0ch], xmm0
movups  xmm0, xmmword ptr [edi+1ch]
movups  xmmword ptr [esi+1ch], xmm0
movups  xmm0, xmmword ptr [edi+2ch]
movups  xmmword ptr [esi+2ch], xmm0
movups  xmm0, xmmword ptr [edi+3ch]
movups  xmmword ptr [esi+3ch], xmm0
movups  xmm0, xmmword ptr [edi+4ch]
movups  xmmword ptr [esi+4ch], xmm0
mov     dword ptr [esi+5ch], 0
mov     dword ptr [esi+60h], 0
mov     eax, [edi+5ch]
mov     ecx, [edi+60h]
test    eax, eax
jz      short loc_10006037
mov     [esi+5ch], eax
mov     [esi+60h], ecx
lock inc dword ptr [eax]
mov     dword ptr [esi+64h], 0
mov     dword ptr [esi+68h], 0
mov     eax, [edi+64h]
mov     ecx, [edi+68h]
test    eax, eax
jz      short loc_10006058
mov     [esi+64h], eax
mov     [esi+68h], ecx
lock inc dword ptr [eax]
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+callbackcontext]
test    ecx, ecx
jz      loc_10006128
mov     eax, [ebp+isenabled]
sub     eax, 0
jz      loc_1000612c
sub     eax, 1
jnz     loc_10006128
mov     al, [ebp+level]
mov     [ecx+28h], al
mov     eax, dword ptr [ebp+matchanykeyword]
mov     [ecx+10h], eax
mov     eax, dword ptr [ebp+matchanykeyword+4]
mov     [ecx+14h], eax
mov     eax, dword ptr [ebp+matchallkeyword]
mov     [ecx+18h], eax
mov     eax, dword ptr [ebp+matchallkeyword+4]
mov     [ecx+1ch], eax
xor     eax, eax
push    esi
xor     esi, esi
mov     dword ptr [ecx+24h], 1
cmp     ax, [ecx+2ah]
jnb     short loc_10006127
push    ebx
push    edi
mov     eax, [ecx+34h]
mov     dl, [ecx+28h]
cmp     [esi+eax], dl
jbe     short loc_100060c4
test    dl, dl
jnz     short loc_100060f6
mov     eax, [ecx+30h]
mov     edi, [eax+esi*8]
mov     ebx, [eax+esi*8+4]
mov     eax, edi
or      eax, ebx
jz      short loc_100060fa
mov     edx, edi
mov     eax, ebx
and     edx, [ecx+10h]
and     eax, [ecx+14h]
or      edx, eax
jz      short loc_100060f6
mov     eax, [ecx+18h]
and     eax, edi
mov     edi, [ecx+1ch]
and     edi, ebx
cmp     eax, [ecx+18h]
jnz     short loc_100060f6
cmp     edi, [ecx+1ch]
jz      short loc_100060fa
xor     bl, bl
jmp     short loc_100060fc
mov     bl, 1
mov     eax, [ecx+2ch]
mov     edx, esi
shr     edx, 5
mov     edi, esi
and     edi, 1fh
lea     edx, [eax+edx*4]
mov     eax, [edx]
test    bl, bl
jz      short loc_10006117
bts     eax, edi
jmp     short loc_1000611a
btr     eax, edi
mov     [edx], eax
inc     esi
movzx   eax, word ptr [ecx+2ah]
cmp     esi, eax
jb      short loc_100060b5
pop     edi
pop     ebx
pop     esi
pop     ebp
retn    24h
movzx   eax, word ptr [ecx+2ah]
mov     dword ptr [ecx+24h], 0
mov     byte ptr [ecx+28h], 0
mov     dword ptr [ecx+10h], 0
mov     dword ptr [ecx+14h], 0
mov     dword ptr [ecx+18h], 0
mov     dword ptr [ecx+1ch], 0
test    ax, ax
jz      short loc_10006128
dec     eax
cdq
and     edx, 1fh
add     eax, edx
sar     eax, 5
lea     eax, ds:4[eax*4]
push    eax
push    0
push    dword ptr [ecx+2ch]
call    memset
add     esp, 0ch
pop     ebp
retn    24h
mov     eax, dword ptr reghandle
or      eax, dword ptr reghandle+4
jz      short loc_10006192
xor     eax, eax
retn    8
push    offset reghandle
push    offset reghandle
push    offset enablecallback
push    offset providerid
call    ds:eventregister
retn    8
mov     edx, dword ptr reghandle
mov     eax, edx
mov     ecx, dword ptr reghandle+4
or      eax, ecx
jnz     short loc_100061c3
retn
push    ecx
push    edx
call    ds:eventunregister
xorps   xmm0, xmm0
movlpd  reghandle, xmm0
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d740
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     dword ptr [esi], offset ??_7cschedulermodule@@6b@
call    sub_100061b0
push    0
mov     [ebp+var_4], 0
call    sub_100054c0
mov     ecx, esi
call    sub_10005500
test    [ebp+arg_0], 1
jz      short loc_10006236
push    2ch
push    esi
call    sub_10012c63
add     esp, 8
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
cmp     [ebp+fdwreason], 1
jnz     short loc_10006270
cmp     byte_10020805, 0
mov     eax, [ebp+hinstdll]
mov     hdll, eax
jz      short loc_10006270
xor     eax, eax
pop     ebp
retn    0ch
mov     eax, 1
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000fe10
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ecx, [ebp+arg_0]
push    offset a43ea843fbe3d4d
push    offset aappid
push    ecx
mov     eax, [ecx]
mov     esi, [eax+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, edx
mov     esi, ecx
cmp     esi, edi
jz      short loc_1000633b
mov     edx, [ebp+src]
test    edx, edx
jz      short loc_1000633b
cmp     word ptr [edx], 0
jz      short loc_1000633b
mov     ecx, edx
lea     ebx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_10006300
sub     ecx, ebx
sub     edi, esi
sar     ecx, 1
lea     ebx, ds:2[ecx*2]
cmp     edi, ebx
jb      short loc_1000633b
push    ebx
push    edx
mov     edx, edi
mov     ecx, esi
call    sub_10005400
mov     eax, [ebp+arg_4]
add     esp, 8
test    eax, eax
jz      short loc_10006333
mov     [eax], esi
pop     edi
lea     eax, [ebx+esi]
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_10006348
mov     dword ptr [eax], 0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+38h]
mov     eax, [ebp+arg_4]
mov     [eax], ecx
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     [ecx+38h], eax
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
add     eax, 3ch
cmp     dword ptr [eax+14h], 8
jb      short loc_100063a1
mov     eax, [eax]
mov     [ebp+arg_0], eax
pop     ebp
jmp     ds:shstrdupw
push    ebp
mov     ebp, esp
mov     edx, [ebp+src]
mov     eax, edx
push    esi
lea     esi, [eax+2]
nop     dword ptr [eax+00h]
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_100063c0
mov     ecx, [ebp+arg_0]
sub     eax, esi
sar     eax, 1
push    eax
push    edx
lea     ecx, [ecx+3ch]
call    sub_10006790
xor     eax, eax
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+1ch+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
lea     ecx, [esp+20h+var_14]
push    esi
push    edi
mov     edi, [ebp+arg_4]
push    edi
mov     [esp+2ch+var_c], 0
mov     [esp+2ch+var_14], 0
mov     [esp+2ch+var_10], 0
mov     [esp+2ch+var_8], 101h
call    sub_10010d80
mov     esi, eax
test    esi, esi
js      loc_10006595
lea     eax, [ebx+24h]
push    eax
push    ecx
lea     ecx, [esp+30h+var_14]
call    sub_10001440
mov     esi, eax
test    esi, esi
js      loc_10006595
mov     ecx, [esp+28h+var_14]
push    0
push    offset atype
push    ecx
mov     eax, [ecx]
mov     esi, [eax+28h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10006486
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     short loc_100064af
cmp     esi, 1
jnz     short loc_10006492
mov     esi, 80070490h
jmp     short loc_100064d9
mov     ecx, [esp+28h+var_14]
push    0
mov     eax, [ecx]
mov     esi, [eax+40h]
lea     eax, [esp+2ch+buffer]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      loc_10006595
lea     eax, [ebx+34h]
push    eax
push    offset au
push    [esp+30h+buffer]
call    sub_10010cc0
add     esp, 0ch
lea     esi, [eax-1]
neg     esi
sbb     esi, esi
and     esi, 80070057h
test    esi, esi
js      loc_10006595
mov     eax, [edi]
push    edi
mov     esi, [eax+2ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      loc_10006595
mov     eax, [edi]
push    0
push    edi
mov     esi, [eax+18h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      loc_10006595
mov     eax, [edi]
push    0
mov     esi, [eax+40h]
lea     eax, [esp+2ch+src]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_10006595
mov     edx, [esp+28h+src]
mov     ecx, edx
lea     esi, [ecx+2]
nop     dword ptr [eax]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_10006540
sub     ecx, esi
sar     ecx, 1
push    ecx
push    edx
lea     ecx, [ebx+38h]
call    sub_10006790
cmp     byte ptr [esp+28h+var_8+2], 0
jz      short loc_10006576
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+1ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [esp+28h+var_14]
mov     byte ptr [esp+28h+var_8+2], 1
push    eax
mov     ecx, [eax]
mov     esi, [ecx+2ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_100065b5
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [esp+1ch+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [esp+28h+var_14]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+50h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
jnz     short loc_10006560
lea     ecx, [esp+28h+var_14]
call    sub_100111d0
mov     ecx, [esp+28h+var_4]
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 84h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+sz]
push    esi
push    edi
mov     edi, [ebp+arg_4]
push    27h
push    eax
lea     eax, [ebx+24h]
push    eax
call    ds:stringfromguid2
test    eax, eax
jg      short loc_10006651
mov     ecx, [ebp+4]
mov     edx, 80004005h
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     esi, 80004005h
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [edi]
mov     esi, [eax+1ch]
lea     eax, [ebp+sz]
push    eax
push    0
push    offset aid
push    0
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10006693
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    dword ptr [ebx+34h]
lea     eax, [ebp+buffer]
push    offset ad
push    40h
push    eax
call    sub_100112e0
mov     eax, [edi]
add     esp, 10h
mov     esi, [eax+1ch]
lea     eax, [ebp+buffer]
push    eax
push    0
push    offset atype
push    0
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_10006674
cmp     dword ptr [ebx+4ch], 8
mov     eax, [edi]
mov     esi, [eax+70h]
lea     eax, [ebx+38h]
jb      short loc_100066e2
mov     eax, [eax]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    offset astringtoolong
call    ds:?_xlength_error@std@@yaxpbd@z
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
lea     ecx, [eax+eax]
cmp     eax, 7fffffffh
jbe     short loc_10006735
or      ecx, 0ffffffffh
jmp     short loc_1000673d
cmp     ecx, 1000h
jb      short loc_1000676a
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      short loc_10006764
lea     eax, [ecx+23h]
and     eax, 0ffffffe0h
mov     [eax-4], ecx
pop     ebp
retn    4
call    ds:_invalid_parameter_noinfo_noreturn
test    ecx, ecx
jz      short loc_1000677b
push    ecx
call    ??2@yapaxi@z
add     esp, 4
pop     ebp
retn    4
xor     eax, eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_4]
mov     edx, [ebp+src]
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     [ebp+var_c], edx
mov     [ebp+var_8], eax
mov     ebx, [edi+14h]
cmp     eax, ebx
ja      short loc_100067e0
mov     [ebp+var_4], edi
cmp     ebx, 8
jb      short loc_100067bb
mov     ecx, [edi]
mov     [ebp+var_4], ecx
lea     esi, [eax+eax]
mov     [edi+10h], eax
push    esi
push    edx
push    ecx
call    memmove
mov     eax, [ebp+var_4]
add     esp, 0ch
xor     ecx, ecx
mov     [esi+eax], cx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
cmp     eax, 7ffffffeh
ja      loc_10006893
mov     esi, eax
or      esi, 7
cmp     esi, 7ffffffeh
jbe     short loc_100067ff
mov     esi, 7ffffffeh
jmp     short loc_1000681d
mov     ecx, ebx
mov     eax, 7ffffffeh
shr     ecx, 1
sub     eax, ecx
cmp     ebx, eax
jbe     short loc_10006815
mov     esi, 7ffffffeh
jmp     short loc_1000681d
lea     eax, [ecx+ebx]
cmp     esi, eax
cmovb   esi, eax
lea     eax, [esi+1]
push    eax
call    sub_10006720
mov     ecx, [ebp+var_8]
mov     [edi+14h], esi
mov     [ebp+var_4], eax
mov     [edi+10h], ecx
lea     esi, [ecx+ecx]
push    esi
push    [ebp+var_c]
push    eax
call    memcpy
mov     eax, [ebp+var_4]
xor     ecx, ecx
add     esp, 0ch
mov     [esi+eax], cx
cmp     ebx, 8
jb      short loc_10006880
mov     eax, [edi]
lea     ebx, ds:2[ebx*2]
cmp     ebx, 1000h
jb      short loc_10006873
mov     ecx, [eax-4]
add     ebx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_1000688d
mov     eax, ecx
push    ebx
push    eax
call    sub_10012c63
mov     eax, [ebp+var_4]
add     esp, 8
mov     [edi], eax
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
call    ds:_invalid_parameter_noinfo_noreturn
call    sub_10006710
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100068a0
mov     eax, large fs:0
push    eax
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, edx
mov     [ebp+var_30], eax
mov     dword ptr [eax], 0
mov     [ebp+var_1c], 0
mov     [ebp+var_4], 0
mov     eax, [ecx]
mov     esi, [eax+4ch]
lea     eax, [ebp+var_1c]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000690d
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_10006a6b
mov     [ebp+pbstr], 0
mov     byte ptr [ebp+var_4], 2
mov     eax, [ebp+var_1c]
mov     ecx, [eax]
mov     esi, [ecx+34h]
lea     ecx, [ebp+pbstr]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_10006944
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_10006a59
push    [ebp+pbstr]
call    ds:sysstringlen
test    eax, eax
jnz     short loc_1000695b
mov     edi, 80070490h
jmp     loc_10006a59
mov     byte ptr [ebp+var_4], 7
lea     ecx, [ebp+var_24]
mov     [ebp+var_20], 0
call    sub_10004f90
mov     edi, eax
test    edi, edi
jns     short loc_10006990
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp+var_20]
jmp     loc_10006a41
mov     ebx, [ebp+var_24]
push    ebx
mov     [ebp+var_20], ebx
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
push    [ebp+pbstr]
call    ds:sysstringbytelen
mov     [ebp+var_28], eax
mov     eax, [ebp+pbstr]
mov     [ebp+var_2c], eax
mov     [ebp+var_14], 0
mov     byte ptr [ebp+var_4], 0bh
mov     eax, [ebx]
mov     esi, [eax]
lea     eax, [ebp+var_14]
push    eax
push    offset dword_10017de0
push    ebx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_100069fe
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
cmp     [ebp+var_14], 0
jz      short loc_100069f9
lea     ecx, [ebp+var_14]
call    sub_100024b0
mov     ebx, [ebp+var_24]
jmp     short loc_10006a25
mov     edx, [ebp+var_28]
push    ecx
push    [ebp+var_14]
mov     ecx, [ebp+var_2c]
push    offset acustomtask
call    sub_10012440
add     esp, 0ch
mov     edi, eax
cmp     [ebp+var_14], 0
jz      short loc_10006a25
lea     ecx, [ebp+var_14]
call    sub_100024b0
test    edi, edi
jns     short loc_10006a38
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp+var_20]
jmp     short loc_10006a41
mov     ecx, [ebp+var_30]
xor     eax, eax
xor     edi, edi
mov     [ecx], ebx
mov     byte ptr [ebp+var_4], 0fh
test    eax, eax
jz      short loc_10006a59
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp+pbstr]
test    eax, eax
jz      short loc_10006a6b
push    eax
mov     byte ptr [ebp+var_4], 10h
call    ds:sysfreestring
mov     [ebp+var_4], 11h
mov     ecx, [ebp+var_1c]
test    ecx, ecx
jz      short loc_10006a89
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10006ab0
mov     eax, large fs:0
push    eax
sub     esp, 44h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_4c], ecx
mov     edi, [ebp+arg_0]
mov     [ebp+var_14], 0
lea     edx, [ebp+var_14]
mov     [ebp+var_4], 0
mov     ecx, edi
call    sub_100068a0
mov     ebx, eax
test    ebx, ebx
jns     short loc_10006b07
mov     esi, [ebp+var_14]
jmp     loc_10006d7c
mov     [ebp+bstrstring], 0
mov     byte ptr [ebp+var_4], 2
mov     eax, [edi]
mov     esi, [eax+20h]
lea     eax, [ebp+bstrstring]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
test    ebx, ebx
jns     short loc_10006b3e
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
mov     esi, [ebp+var_14]
jmp     loc_10006d6a
mov     [ebp+var_20], 0
mov     byte ptr [ebp+var_4], 5
mov     esi, [ebp+var_14]
mov     eax, [esi]
mov     edi, [eax+14h]
lea     eax, [ebp+var_20]
push    eax
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     ebx, eax
test    ebx, ebx
js      short loc_10006ba7
mov     eax, [ebp+var_20]
mov     ecx, [eax]
mov     edi, [ecx+0ch]
lea     ecx, [ebp+var_24]
push    ecx
push    eax
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     ebx, eax
test    ebx, ebx
js      short loc_10006ba7
cmp     [ebp+var_24], 0
jbe     loc_10006d4d
mov     eax, [esi]
mov     edi, [eax+0ch]
lea     eax, [ebp+var_40]
push    eax
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     ebx, eax
test    ebx, ebx
jns     short loc_10006bb9
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
mov     esi, [ebp+var_14]
jmp     loc_10006d4f
mov     ecx, [ebp+var_4c]
lea     eax, [ebp+var_40]
add     ecx, 4
push    eax
call    sub_100075b0
mov     [ebp+var_50], eax
mov     byte ptr [ebp+var_4], 0fh
lea     ecx, [ebp+var_48]
mov     eax, [ebp+bstrstring]
mov     [ebp+src], eax
mov     [ebp+var_30], 0
call    sub_10007a60
mov     ebx, eax
test    ebx, ebx
jns     short loc_10006c03
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
jmp     loc_10006dfa
mov     ebx, [ebp+var_48]
push    ebx
mov     eax, [ebx]
mov     edi, [eax+4]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edx, [ebp+src]
mov     ecx, edx
lea     edi, [ecx+2]
xchg    ax, ax
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_10006c20
sub     ecx, edi
sar     ecx, 1
push    ecx
push    edx
lea     ecx, [ebx+24h]
call    sub_10006790
xor     edx, edx
mov     [ebp+var_30], ebx
mov     [ebp+src], edx
cmp     [ebp+var_24], edx
jbe     loc_10006d39
nop     word ptr [eax+eax+00h]
mov     [ebp+var_1c], 0
mov     byte ptr [ebp+var_4], 14h
mov     eax, [ebp+var_20]
mov     ecx, [eax]
mov     edi, [ecx+10h]
lea     ecx, [ebp+var_1c]
push    ecx
push    offset dword_10017fc8
push    edx
push    eax
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     ebx, eax
test    ebx, ebx
js      loc_10006dd5
mov     [ebp+pv], 0
mov     byte ptr [ebp+var_4], 1ah
mov     eax, [ebp+var_1c]
mov     ecx, [eax]
mov     edi, [ecx+1ch]
lea     ecx, [ebp+pv]
push    ecx
push    eax
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     ebx, eax
test    ebx, ebx
js      loc_10006db7
mov     eax, [ebp+var_4c]
mov     ecx, [eax]
mov     eax, [ecx]
mov     edi, [eax+0ch]
lea     eax, [ebp+var_2c]
push    eax
push    [ebp+var_48]
push    [ebp+pv]
push    ecx
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     ebx, eax
test    ebx, ebx
js      loc_10006db7
mov     edx, [ebp+var_50]
mov     ecx, [edx+4]
cmp     ecx, [edx+8]
jz      short loc_10006ced
mov     eax, [ebp+var_2c]
mov     [ecx], eax
add     dword ptr [edx+4], 4
jmp     short loc_10006cf9
lea     eax, [ebp+var_2c]
push    eax
push    ecx
mov     ecx, edx
call    sub_10007770
mov     eax, [ebp+pv]
test    eax, eax
jz      short loc_10006d0b
push    eax
mov     byte ptr [ebp+var_4], 26h
call    ds:cotaskmemfree
mov     byte ptr [ebp+var_4], 27h
mov     eax, [ebp+var_1c]
test    eax, eax
jz      short loc_10006d26
mov     ecx, [eax]
push    eax
mov     edi, [ecx+8]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edx, [ebp+src]
inc     edx
mov     [ebp+src], edx
cmp     edx, [ebp+var_24]
jb      loc_10006c50
mov     ebx, [ebp+var_48]
mov     byte ptr [ebp+var_4], 28h
mov     eax, [ebx]
push    ebx
mov     edi, [eax+8]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
xor     ebx, ebx
mov     byte ptr [ebp+var_4], 29h
mov     eax, [ebp+var_20]
test    eax, eax
jz      short loc_10006d6a
mov     ecx, [eax]
push    eax
mov     edi, [ecx+8]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     eax, [ebp+bstrstring]
test    eax, eax
jz      short loc_10006d7c
push    eax
mov     byte ptr [ebp+var_4], 2ah
call    ds:sysfreestring
mov     [ebp+var_4], 2bh
test    esi, esi
jz      short loc_10006d97
mov     ecx, [esi]
push    esi
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
mov     eax, [ebp+pv]
test    eax, eax
jz      short loc_10006ddf
push    eax
mov     byte ptr [ebp+var_4], 20h
call    ds:cotaskmemfree
jmp     short loc_10006ddf
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 21h
mov     eax, [ebp+var_1c]
test    eax, eax
jz      short loc_10006dfa
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     byte ptr [ebp+var_4], 22h
mov     eax, [ebp+var_30]
test    eax, eax
jz      short loc_10006e15
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, [ebp+var_14]
jmp     loc_10006d4f
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10006e20
mov     eax, large fs:0
push    eax
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_2c], ecx
mov     ecx, [ebp+arg_0]
mov     [ebp+var_18], 0
lea     edx, [ebp+var_18]
mov     [ebp+var_4], 0
call    sub_100068a0
mov     ebx, eax
test    ebx, ebx
js      short loc_10006e94
mov     edi, [ebp+var_18]
mov     eax, [edi]
mov     esi, [eax+0ch]
lea     eax, [ebp+var_28]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
test    ebx, ebx
jns     short loc_10006e9c
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
mov     edi, [ebp+var_18]
jmp     loc_10006fae
mov     ebx, [ebp+var_2c]
lea     eax, [ebp+var_28]
push    eax
lea     eax, [ebp+block]
mov     [ebp+block], 0
push    eax
lea     ecx, [ebx+4]
call    sub_100074c0
mov     esi, [ebp+block]
cmp     esi, [ebx+8]
jnz     short loc_10006ec8
mov     ebx, 80070490h
jmp     loc_10006fae
mov     edx, [esi+18h]
mov     eax, [esi+1ch]
mov     [ebp+block], edx
mov     [ebp+var_30], eax
cmp     edx, eax
jz      short loc_10006f03
mov     ecx, [ebx]
push    dword ptr [edx]
push    ecx
mov     eax, [ecx]
mov     ebx, [eax+10h]
mov     ecx, ebx
call    ds:___guard_check_icall_fptr
call    ebx
mov     ebx, eax
test    ebx, ebx
js      short loc_10006e8a
mov     edx, [ebp+block]
mov     ebx, [ebp+var_2c]
add     edx, 4
mov     [ebp+block], edx
cmp     edx, [ebp+var_30]
jnz     short loc_10006ed8
lea     eax, [esi+8]
push    eax
call    sub_10007710
mov     ecx, eax
mov     eax, [ebx+10h]
and     ecx, [ebx+1ch]
lea     ecx, [eax+ecx*8]
mov     eax, [ecx]
cmp     [ecx+4], esi
jnz     short loc_10006f34
cmp     eax, esi
jnz     short loc_10006f2c
mov     eax, [ebx+8]
mov     [ecx], eax
mov     [ecx+4], eax
jmp     short loc_10006f3c
mov     eax, [esi+4]
mov     [ecx+4], eax
jmp     short loc_10006f3c
cmp     eax, esi
jnz     short loc_10006f3c
mov     eax, [esi]
mov     [ecx], eax
mov     ecx, [esi+4]
mov     eax, [esi]
mov     [ecx], eax
mov     ecx, [esi]
mov     eax, [esi+4]
mov     [ecx+4], eax
mov     ecx, [esi+18h]
test    ecx, ecx
jz      short loc_10006f9e
mov     eax, [esi+20h]
sub     eax, ecx
sar     eax, 2
lea     edx, ds:0[eax*4]
cmp     edx, 1000h
jb      short loc_10006f7f
mov     eax, [ecx-4]
add     edx, 23h
sub     ecx, eax
mov     [ebp+var_30], eax
lea     eax, [ecx-4]
cmp     eax, 1fh
ja      short loc_10006fe9
mov     ecx, [ebp+var_30]
push    edx
push    ecx
call    sub_10012c63
mov     dword ptr [esi+18h], 0
add     esp, 8
mov     dword ptr [esi+1ch], 0
mov     dword ptr [esi+20h], 0
push    24h
push    esi
call    sub_10012c63
dec     dword ptr [ebx+0ch]
add     esp, 8
xor     ebx, ebx
mov     [ebp+var_4], 5
test    edi, edi
jz      short loc_10006fc9
mov     ecx, [edi]
push    edi
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
call    ds:_invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10006ff0
mov     eax, large fs:0
push    eax
sub     esp, 30h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_4]
mov     edi, [ebp+arg_0]
mov     [ebp+var_38], eax
mov     byte ptr [eax], 0
mov     eax, [edi]
mov     esi, [eax+28h]
lea     eax, [ebp+var_1c]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10007052
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     loc_100072dd
cmp     [ebp+var_1c], 0
jnz     short loc_10007060
xor     eax, eax
jmp     loc_100072dd
mov     [ebp+var_18], 0
mov     [ebp+var_4], 0
mov     eax, [edi]
mov     esi, [eax+4ch]
lea     eax, [ebp+var_18]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_10007097
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_100072bd
mov     [ebp+var_14], 0
mov     byte ptr [ebp+var_4], 2
mov     eax, [ebp+var_18]
mov     ecx, [eax]
mov     esi, [ecx+3ch]
lea     ecx, [ebp+var_14]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_100070ce
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_100072a2
mov     eax, [ebp+var_14]
mov     ecx, [eax]
mov     esi, [ecx+34h]
lea     ecx, [ebp+var_30]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_100070fa
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_100072a2
lea     eax, [ebp+psessionid]
push    eax
call    ds:getcurrentprocessid
push    eax
call    ds:processidtosessionid
test    eax, eax
jnz     short loc_10007129
call    sub_10008ad0
mov     edi, eax
test    edi, edi
jns     short loc_10007129
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_100072a2
xor     ecx, ecx
cmp     [ebp+psessionid], ecx
setnz   cl
xor     eax, eax
cmp     [ebp+var_30], 3
setz    al
cmp     eax, ecx
jz      short loc_10007145
xor     edi, edi
jmp     loc_100072a2
mov     [ebp+string2], 0
mov     byte ptr [ebp+var_4], 0bh
mov     eax, [ebp+var_14]
mov     ecx, [eax]
mov     esi, [ecx+2ch]
lea     ecx, [ebp+string2]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000717c
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_10007290
mov     esi, [ebp+string2]
xor     bl, bl
mov     [ebp+var_34], esi
mov     [ebp+pv], 0
sub     esp, 48h
mov     byte ptr [ebp+var_4], 0fh
mov     ecx, esp
lea     eax, [ecx+8]
mov     dword ptr [eax], offset ??_7?$__func@v_lambda_1_@?1???$getusernameexw@v?$unique_any_t@v?$unique_storage@u?$resource_policy@pa_wp6gxpax@z$1?cotaskmemfree@@ygx0@zu?$integral_constant@i$0a@@wistd@@pa_wpa_w$0a@$$t@details@wil@@@details@wil@@@wil@@$0baa@@utility@shared@@yajw4extended_name_format@@aav?$unique_any_t@v?$unique_storage@u?$resource_policy@pa_wp6gxpax@z$1?cotaskmemfree@@ygx0@zu?$integral_constant@i$0a@@wistd@@pa_wpa_w$0a@$$t@details@wil@@@details@wil@@@wil@@@z@$$a6ajpa_wipai@z@__function@wistd@@6b@
mov     dword ptr [eax+4], 2
mov     [ecx+40h], eax
lea     ecx, [ebp+pv]
call    sub_10007b60
mov     edi, eax
add     esp, 48h
test    edi, edi
jns     short loc_100071e3
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp+pv]
test    eax, eax
jz      short loc_100071d4
push    eax
mov     byte ptr [ebp+var_4], 10h
call    ds:cotaskmemfree
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_10007290
push    esi
mov     esi, [ebp+pv]
push    esi
call    ds:_wcsicmp
add     esp, 8
test    eax, eax
jnz     short loc_100071f9
mov     bl, 1
jmp     short loc_1000721e
push    5ch
push    esi
call    ds:wcschr
add     esp, 8
test    eax, eax
jz      short loc_1000721e
push    [ebp+var_34]
add     eax, 2
push    eax
call    ds:_wcsicmp
add     esp, 8
test    eax, eax
setz    bl
test    esi, esi
jz      short loc_1000722d
push    esi
mov     byte ptr [ebp+var_4], 11h
call    ds:cotaskmemfree
test    bl, bl
jnz     short loc_10007235
xor     edi, edi
jmp     short loc_10007290
mov     [ebp+pbstr], 0
mov     byte ptr [ebp+var_4], 18h
mov     eax, [ebp+var_18]
mov     ecx, [eax]
mov     esi, [ecx+34h]
lea     ecx, [ebp+pbstr]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_10007269
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_1000727e
push    [ebp+pbstr]
call    ds:sysstringlen
xor     edi, edi
test    eax, eax
jz      short loc_1000727e
mov     eax, [ebp+var_38]
mov     byte ptr [eax], 1
mov     eax, [ebp+pbstr]
test    eax, eax
jz      short loc_10007290
push    eax
mov     byte ptr [ebp+var_4], 21h
call    ds:sysfreestring
mov     eax, [ebp+string2]
test    eax, eax
jz      short loc_100072a2
push    eax
mov     byte ptr [ebp+var_4], 22h
call    ds:sysfreestring
mov     byte ptr [ebp+var_4], 23h
mov     eax, [ebp+var_14]
test    eax, eax
jz      short loc_100072bd
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 24h
mov     ecx, [ebp+var_18]
test    ecx, ecx
jz      short loc_100072db
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10007300
mov     eax, large fs:0
push    eax
sub     esp, 2ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_28], ecx
mov     edx, [ebp+arg_0]
mov     [ebp+var_18], 0
mov     [ebp+var_4], 0
mov     eax, [edx]
mov     esi, [eax+38h]
lea     eax, [ebp+var_18]
push    eax
push    0
push    edx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_10007369
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_10007456
mov     eax, [ebp+var_18]
mov     ecx, [eax]
mov     esi, [ecx+1ch]
lea     ecx, [ebp+var_1c]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_10007395
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_10007456
mov     edx, 1
mov     [ebp+var_24], edx
cmp     [ebp+var_1c], edx
jl      loc_10007454
lea     edi, [edx+2]
nop     dword ptr [eax+00000000h]
mov     [ebp+var_14], 0
mov     eax, [ebp+var_18]
mov     ecx, [eax]
mov     word ptr [ebp+pvarg.anonymous_0], di
mov     dword ptr [ebp+pvarg.anonymous_0+8], edx
mov     esi, [ecx+20h]
lea     ecx, [ebp+var_14]
mov     byte ptr [ebp+var_4], 4
movups  xmm0, xmmword ptr [ebp+pvarg.anonymous_0]
push    ecx
sub     esp, 10h
mov     ecx, esp
push    eax
movups  xmmword ptr [ecx], xmm0
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
mov     byte ptr [ebp+var_4], 3
lea     eax, [ebp+pvarg]
push    eax
call    ds:variantclear
test    edi, edi
js      loc_10007493
lea     eax, [ebp+var_1d]
push    eax
push    [ebp+var_14]
call    sub_10006ff0
mov     edi, eax
test    edi, edi
js      loc_10007493
cmp     [ebp+var_1d], 0
jz      short loc_10007424
push    [ebp+var_14]
mov     ecx, [ebp+var_28]
call    sub_10006ab0
mov     byte ptr [ebp+var_4], 9
mov     eax, [ebp+var_14]
test    eax, eax
jz      short loc_1000743f
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edx, [ebp+var_24]
mov     edi, 3
inc     edx
mov     [ebp+var_24], edx
cmp     edx, [ebp+var_1c]
jle     loc_100073b0
xor     edi, edi
mov     [ebp+var_4], 0ah
mov     ecx, [ebp+var_18]
test    ecx, ecx
jz      short loc_10007474
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 7
mov     eax, [ebp+var_14]
test    eax, eax
jz      short loc_10007456
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_10007456
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_4]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    eax
mov     esi, ecx
mov     [ebp+var_8], ebx
mov     [ebp+var_10], eax
call    sub_10007710
mov     edx, eax
mov     eax, [esi+0ch]
and     edx, [esi+18h]
lea     ecx, [eax+edx*8]
mov     edx, [esi+4]
mov     eax, [ecx]
cmp     eax, edx
jz      loc_10007595
mov     ebx, [ebp+var_10]
mov     ecx, [ecx+4]
push    edi
lea     edi, [eax+8]
mov     [ebp+var_4], ebx
mov     [ebp+var_c], 0ch
mov     esi, [edi]
cmp     esi, [ebx]
jnz     short loc_10007521
add     ebx, 4
add     edi, 4
sub     [ebp+var_c], 4
mov     [ebp+var_4], ebx
jnb     short loc_10007508
xor     esi, esi
jmp     short loc_1000754b
mov     esi, [ebp+var_4]
mov     bl, [edi]
cmp     bl, [esi]
jnz     short loc_10007546
mov     bl, [edi+1]
cmp     bl, [esi+1]
jnz     short loc_10007546
mov     bl, [edi+2]
cmp     bl, [esi+2]
jnz     short loc_10007546
mov     bl, [edi+3]
cmp     bl, [esi+3]
jnz     short loc_10007546
xor     esi, esi
jmp     short loc_1000754b
sbb     esi, esi
or      esi, 1
test    esi, esi
jz      short loc_10007575
nop
cmp     eax, ecx
jz      short loc_10007585
mov     eax, [eax]
mov     esi, [ebp+var_10]
mov     [ebp+var_4], 0ch
lea     ebx, [eax+8]
mov     edi, [ebx]
cmp     edi, [esi]
jnz     short loc_10007550
add     ebx, 4
add     esi, 4
sub     [ebp+var_4], 4
jnb     short loc_10007563
mov     ecx, [ebp+var_8]
pop     edi
pop     esi
pop     ebx
mov     [ecx], eax
mov     eax, ecx
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+var_8]
mov     eax, ecx
pop     edi
pop     esi
pop     ebx
mov     [ecx], edx
mov     esp, ebp
pop     ebp
retn    8
mov     [ebx], eax
mov     eax, ebx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebx
mov     ebx, esp
sub     esp, 8
and     esp, 0fffffff8h
add     esp, 4
push    ebp
mov     ebp, [ebx+4]
mov     [esp+0ch+var_8], ebp
mov     ebp, esp
push    0ffffffffh
push    offset loc_100144d0
mov     eax, large fs:0
push    eax
push    ebx
sub     esp, 28h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp-14h], eax
push    esi
push    edi
push    eax
lea     eax, [ebp-0ch]
mov     large fs:0, eax
mov     edi, ecx
mov     eax, [ebx+8]
push    eax
mov     [ebp-2ch], eax
lea     eax, [ebp-18h]
push    eax
mov     dword ptr [ebp-18h], 0
call    sub_100074c0
mov     esi, [ebp-18h]
lea     eax, [edi+4]
cmp     esi, [eax]
jnz     loc_100076e2
mov     [ebp-1ch], eax
mov     dword ptr [ebp-18h], 0
mov     dword ptr [ebp-4], 0
mov     [ebp-34h], eax
mov     byte ptr [ebp-4], 1
push    24h
mov     dword ptr [ebp-30h], 0
call    ??2@yapaxi@z
mov     ecx, [ebp-2ch]
add     esp, 4
lea     esi, [eax+8]
movups  xmm0, xmmword ptr [ecx]
mov     byte ptr [ebp-4], 0
push    esi
movups  xmmword ptr [esi], xmm0
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 0
mov     dword ptr [esi+18h], 0
mov     [ebp-18h], eax
mov     byte ptr [ebp-25h], 0
call    sub_10007710
push    ecx
lea     ecx, [ebp-1ch]
push    ecx
push    esi
push    eax
lea     eax, [ebp-24h]
mov     ecx, edi
push    eax
call    sub_100081b0
mov     edi, [ebp-18h]
mov     esi, [ebp-24h]
test    edi, edi
jz      short loc_100076e2
mov     eax, [edi+18h]
test    eax, eax
jz      short loc_100076d7
mov     ecx, [edi+20h]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_100076b5
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_10007705
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
mov     dword ptr [edi+18h], 0
add     esp, 8
mov     dword ptr [edi+1ch], 0
mov     dword ptr [edi+20h], 0
mov     edi, [ebp-18h]
push    24h
push    edi
call    sub_10012c63
add     esp, 8
lea     eax, [esi+18h]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp-14h]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
mov     esp, ebx
pop     ebx
retn    4
call    ds:_invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     edx, 811c9dc5h
push    esi
inc     ecx
mov     esi, 4
movzx   eax, byte ptr [ecx-1]
lea     ecx, [ecx+4]
xor     eax, edx
imul    edx, eax, 1000193h
movzx   eax, byte ptr [ecx-4]
xor     edx, eax
movzx   eax, byte ptr [ecx-3]
imul    edx, 1000193h
xor     edx, eax
movzx   eax, byte ptr [ecx-2]
imul    edx, 1000193h
xor     edx, eax
imul    edx, 1000193h
sub     esi, 1
jnz     short loc_10007722
mov     eax, edx
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, ecx
mov     [ebp+src], ebx
mov     edx, [edi]
sub     ebx, edx
mov     eax, [edi+4]
sub     eax, edx
sar     ebx, 2
sar     eax, 2
cmp     eax, 3fffffffh
jz      loc_100078bf
mov     ecx, [edi+8]
lea     esi, [eax+1]
sub     ecx, edx
mov     [ebp+var_c], esi
sar     ecx, 2
mov     eax, 3fffffffh
mov     edx, ecx
shr     edx, 1
sub     eax, edx
cmp     ecx, eax
jbe     short loc_100077bc
mov     eax, esi
jmp     short loc_100077c4
lea     eax, [edx+ecx]
cmp     eax, esi
cmovb   eax, esi
lea     ecx, ds:0[eax*4]
mov     [ebp+var_10], ecx
cmp     eax, 3fffffffh
jbe     short loc_100077da
or      ecx, 0ffffffffh
jmp     short loc_100077e2
cmp     ecx, 1000h
jb      short loc_10007809
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_100078b9
lea     esi, [eax+23h]
and     esi, 0ffffffe0h
mov     [esi-4], eax
jmp     short loc_1000781c
test    ecx, ecx
jz      short loc_1000781a
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     esi, eax
jmp     short loc_1000781c
xor     esi, esi
mov     eax, [ebp+arg_4]
lea     ecx, [esi+ebx*4]
mov     ebx, [ebp+src]
mov     [ebp+var_4], ecx
mov     eax, [eax]
mov     [ecx], eax
mov     eax, [edi+4]
mov     ecx, [edi]
cmp     ebx, eax
jnz     short loc_10007847
sub     eax, ecx
push    eax
push    ecx
push    esi
call    memmove
mov     ebx, [ebp+var_4]
add     esp, 0ch
jmp     short loc_10007869
mov     eax, ebx
sub     eax, ecx
push    eax
push    ecx
push    esi
call    memmove
mov     eax, [edi+4]
sub     eax, ebx
push    eax
push    ebx
mov     ebx, [ebp+var_4]
lea     eax, [ebx+4]
push    eax
call    memmove
add     esp, 18h
mov     eax, [edi]
test    eax, eax
jz      short loc_1000789b
mov     ecx, [edi+8]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_10007891
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_100078b9
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
add     esp, 8
mov     eax, [ebp+var_c]
mov     [edi], esi
lea     ecx, [esi+eax*4]
mov     eax, ebx
mov     [edi+4], ecx
mov     ecx, [ebp+var_10]
add     ecx, esi
mov     [edi+8], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
call    ds:_invalid_parameter_noinfo_noreturn
call    sub_100023f0
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_100181a0
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
or      ebx, 0ffffffffh
lock xadd [eax+4], ebx
dec     ebx
jnz     short loc_1000794e
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_10007935
mov     eax, [edi]
push    1
mov     esi, [eax+10h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, 1
lock xadd [ecx+4], eax
inc     eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcfilemonitortaskstarter@@@atl@@6b@
mov     dword ptr [ebx+4], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     ecx, ebx
call    sub_100079d0
test    [ebp+arg_0], 1
jz      short loc_100079c4
push    44h
push    ebx
call    sub_10012c63
add     esp, 8
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    esi
mov     esi, ecx
mov     ecx, [esi+38h]
cmp     ecx, 8
jb      short loc_10007a09
mov     eax, [esi+24h]
lea     ecx, ds:2[ecx*2]
cmp     ecx, 1000h
jb      short loc_100079ff
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_10007a31
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
add     esp, 8
xor     eax, eax
mov     dword ptr [esi+34h], 0
mov     dword ptr [esi+38h], 7
mov     [esi+24h], ax
add     esi, 8
cmp     [esi+18h], al
jz      short loc_10007a2f
push    esi
mov     [esi+18h], al
call    ds:deletecriticalsection
pop     esi
retn
call    ds:_invalid_parameter_noinfo_noreturn
push    edi
mov     edi, [ecx+40h]
test    edi, edi
jz      short loc_10007a5b
mov     eax, [edi]
push    esi
mov     esi, [eax+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     esi
pop     edi
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, ecx
mov     [ebp+var_4], eax
test    eax, eax
jnz     short loc_10007a78
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn
push    ebx
push    esi
push    edi
push    offset dword_100203fc
push    44h
mov     dword ptr [eax], 0
mov     edi, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_10007af3
mov     edi, dword_10020788
xorps   xmm0, xmm0
mov     dword ptr [ebx+4], 0
xor     eax, eax
movups  xmmword ptr [ebx+8], xmm0
movq    qword ptr [ebx+18h], xmm0
mov     byte ptr [ebx+20h], 0
mov     dword ptr [ebx+34h], 0
mov     dword ptr [ebx+38h], 7
mov     [ebx+24h], ax
mov     [ebx+3ch], eax
mov     [ebx+40h], eax
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcfilemonitortaskstarter@@@atl@@6b@
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, 8007000eh
jmp     short loc_10007af5
xor     ebx, ebx
test    ebx, ebx
jz      short loc_10007b4f
xor     esi, esi
lea     edi, [ebx+8]
push    esi
push    esi
push    edi
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_10007b20
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_10007b22
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_10007b28
mov     byte ptr [edi+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     edi, edi
test    eax, eax
cmovs   edi, eax
test    edi, edi
jz      short loc_10007b4f
mov     eax, [ebx]
push    1
mov     esi, [eax+10h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
xor     ebx, ebx
mov     eax, [ebp+var_4]
mov     [eax], ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10007b60
mov     eax, large fs:0
push    eax
sub     esp, 220h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_22c], ecx
mov     [ebp+var_4], 0
mov     [ebp+pv], 0
mov     byte ptr [ebp+var_4], 1
xor     eax, eax
mov     edi, [ebp+arg_40]
mov     [ebp+src], ax
mov     [ebp+var_214], eax
lea     eax, [ebp+var_214]
mov     [ebp+var_21c], eax
lea     eax, [ebp+src]
mov     [ebp+var_218], 100h
mov     [ebp+var_220], eax
test    edi, edi
jz      loc_10007e43
mov     eax, [edi]
mov     esi, [eax+10h]
lea     eax, [ebp+var_21c]
push    eax
lea     eax, [ebp+var_218]
mov     ecx, esi
push    eax
lea     eax, [ebp+var_220]
push    eax
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     ebx, eax
test    ebx, ebx
jns     short loc_10007c30
mov     edi, [ebp+arg_40]
test    edi, edi
jz      short loc_10007c29
mov     edx, [edi]
mov     esi, [edx+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     eax, ebx
jmp     loc_10007e27
mov     eax, [ebp+var_214]
lea     ecx, [ebp+pv]
cmp     eax, 100h
ja      short loc_10007c9d
dec     eax
push    eax
lea     eax, [ebp+src]
push    eax
call    sub_10007eb0
mov     ebx, eax
test    ebx, ebx
jns     loc_10007daf
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 0
mov     ecx, [ebp+pv]
test    ecx, ecx
jz      short loc_10007c7e
push    ecx
mov     byte ptr [ebp+var_4], 3
call    ds:cotaskmemfree
mov     edi, [ebp+arg_40]
test    edi, edi
jz      short loc_10007c29
mov     eax, [edi]
mov     esi, [eax+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     eax, ebx
jmp     loc_10007e27
dec     eax
push    eax
push    0
call    sub_10007eb0
mov     ebx, eax
test    ebx, ebx
jns     short loc_10007cf2
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 0
mov     ecx, [ebp+pv]
test    ecx, ecx
jz      short loc_10007ccf
push    ecx
mov     byte ptr [ebp+var_4], 4
call    ds:cotaskmemfree
mov     edi, [ebp+arg_40]
test    edi, edi
jz      loc_10007c29
mov     eax, [edi]
mov     esi, [eax+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     eax, ebx
jmp     loc_10007e27
mov     eax, [ebp+var_214]
mov     edi, [ebp+arg_40]
mov     [ebp+var_218], eax
mov     eax, [ebp+pv]
mov     [ebp+var_224], eax
lea     eax, [ebp+var_21c]
mov     [ebp+var_21c], 0
mov     [ebp+var_220], eax
test    edi, edi
jz      loc_10007e48
mov     eax, [edi]
mov     esi, [eax+10h]
lea     eax, [ebp+var_220]
push    eax
lea     eax, [ebp+var_218]
mov     ecx, esi
push    eax
lea     eax, [ebp+var_224]
push    eax
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     ecx, [ebp+4]
mov     ebx, eax
test    ebx, ebx
jns     short loc_10007d9d
mov     edx, ebx
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 0
mov     ecx, [ebp+pv]
test    ecx, ecx
jz      short loc_10007d7a
push    ecx
mov     byte ptr [ebp+var_4], 5
call    ds:cotaskmemfree
mov     edi, [ebp+arg_40]
test    edi, edi
jz      loc_10007c29
mov     eax, [edi]
mov     esi, [eax+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     eax, ebx
jmp     loc_10007e27
mov     eax, [ebp+var_214]
cmp     eax, [ebp+var_21c]
jnz     loc_10007e4d
mov     ebx, [ebp+var_22c]
lea     eax, [ebp+var_224]
mov     edi, [ebp+pv]
mov     [ebp+pv], 0
cmp     ebx, eax
jz      short loc_10007dfe
mov     eax, [ebx]
mov     [ebp+var_22c], eax
test    eax, eax
jz      short loc_10007dfa
call    ds:getlasterror
mov     esi, eax
push    [ebp+var_22c]
mov     byte ptr [ebp+var_4], 6
call    ds:cotaskmemfree
push    esi
call    ds:setlasterror
mov     [ebx], edi
jmp     short loc_10007e0d
test    edi, edi
jz      short loc_10007e0d
push    edi
mov     byte ptr [ebp+var_4], 7
call    ds:cotaskmemfree
mov     edi, [ebp+arg_40]
test    edi, edi
jz      short loc_10007e25
mov     eax, [edi]
mov     esi, [eax+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
call    sub_100030c0
call    sub_100030c0
call    sub_10008a80
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10007e60
mov     eax, large fs:0
push    eax
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ecx]
test    eax, eax
jz      short loc_10007e96
push    eax
mov     [ebp+var_4], 0
call    ds:cotaskmemfree
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10007eb0
mov     eax, large fs:0
push    eax
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+pv], ecx
mov     ebx, [ebp+src]
mov     edx, [ebp+arg_4]
test    ebx, ebx
jnz     short loc_10007eee
cmp     edx, 0ffffffffh
jnz     short loc_10007eee
mov     al, 1
jmp     short loc_10007ef0
xor     al, al
mov     ecx, [ebp+4]
test    al, al
jnz     loc_10008001
mov     esi, edx
test    ebx, ebx
jz      short loc_10007f23
mov     eax, 7fffffffh
mov     esi, ebx
cmp     edx, eax
cmovb   eax, edx
test    eax, eax
jz      short loc_10007f1f
cmp     word ptr [esi], 0
jz      short loc_10007f1f
add     esi, 2
sub     eax, 1
jnz     short loc_10007f11
sub     esi, ebx
sar     esi, 1
cmp     edx, 0ffffffffh
mov     eax, esi
cmovnz  eax, edx
add     eax, eax
mov     [ebp+var_14], eax
add     eax, 2
push    eax
mov     [ebp+size], eax
call    ds:cotaskmemalloc
mov     edi, eax
test    edi, edi
jz      short loc_10007f99
test    ebx, ebx
jz      short loc_10007f8b
add     esi, esi
jz      short loc_10007f83
mov     eax, [ebp+size]
cmp     eax, esi
jb      short loc_10007f65
push    esi
push    ebx
push    edi
call    memcpy
add     esp, 0ch
xor     eax, eax
mov     [esi+edi], ax
jmp     short loc_10007f90
push    eax
push    0
push    edi
call    memset
add     esp, 0ch
call    ds:_errno
mov     dword ptr [eax], 22h
call    ds:_invalid_parameter_noinfo
xor     eax, eax
mov     [esi+edi], ax
jmp     short loc_10007f90
xor     eax, eax
mov     [edi], ax
mov     eax, [ebp+var_14]
xor     ecx, ecx
mov     [eax+edi], cx
mov     ebx, [ebp+pv]
lea     eax, [ebp+var_14]
cmp     ebx, eax
jz      short loc_10007fcf
mov     eax, [ebx]
mov     [ebp+pv], eax
test    eax, eax
jz      short loc_10007fcb
call    ds:getlasterror
mov     esi, eax
push    [ebp+pv]
mov     [ebp+var_4], 0
call    ds:cotaskmemfree
push    esi
call    ds:setlasterror
mov     [ebx], edi
jmp     short loc_10007fe1
test    edi, edi
jz      short loc_10007fe1
push    edi
mov     [ebp+var_4], 1
call    ds:cotaskmemfree
xor     ecx, ecx
mov     eax, 8007000eh
cmp     [ebx], ecx
cmovnz  eax, ecx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
call    sub_10008a80
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7?$__base@$$a6ajpa_wipai@z@__function@wistd@@6b@
jz      short loc_1000802d
push    8
push    esi
call    sub_10012c63
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7?$__base@$$a6ajpa_wipai@z@__function@wistd@@6b@
jz      short loc_1000805d
push    4
push    esi
call    sub_10012c63
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
mov     dword ptr [edx], offset ??_7?$__func@v_lambda_1_@?1???$getusernameexw@v?$unique_any_t@v?$unique_storage@u?$resource_policy@pa_wp6gxpax@z$1?cotaskmemfree@@ygx0@zu?$integral_constant@i$0a@@wistd@@pa_wpa_w$0a@$$t@details@wil@@@details@wil@@@wil@@$0baa@@utility@shared@@yajw4extended_name_format@@aav?$unique_any_t@v?$unique_storage@u?$resource_policy@pa_wp6gxpax@z$1?cotaskmemfree@@ygx0@zu?$integral_constant@i$0a@@wistd@@pa_wpa_w$0a@$$t@details@wil@@@details@wil@@@wil@@@z@$$a6ajpa_wipai@z@__function@wistd@@6b@
mov     eax, [ecx+4]
mov     [edx+4], eax
pop     ebp
retn    4
retn
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_8]
mov     edx, [ebp+arg_0]
push    esi
mov     esi, [ebp+arg_4]
push    edi
mov     edi, [eax]
mov     eax, [esi]
mov     [ebp+nsize], eax
lea     eax, [ebp+nsize]
push    eax
push    dword ptr [edx]
push    dword ptr [ecx+4]
call    ds:getusernameexw
test    al, al
jnz     short loc_100080fe
call    ds:getlasterror
cmp     eax, 0eah
jz      short loc_100080f9
call    sub_10008ad0
pop     edi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, [ebp+nsize]
jmp     short loc_10008102
mov     eax, [ebp+nsize]
inc     eax
mov     ecx, [ebp+var_4]
mov     [edi], eax
xor     ecx, ebp
pop     edi
xor     eax, eax
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    esi
push    edi
mov     edi, ecx
mov     esi, [edi+4]
test    esi, esi
jz      short loc_10008181
mov     eax, [esi+18h]
test    eax, eax
jz      short loc_10008176
mov     ecx, [esi+20h]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_10008154
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_10008184
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
mov     dword ptr [esi+18h], 0
add     esp, 8
mov     dword ptr [esi+1ch], 0
mov     dword ptr [esi+20h], 0
mov     esi, [edi+4]
push    24h
push    esi
call    sub_10012c63
add     esp, 8
pop     edi
pop     esi
retn
call    ds:_invalid_parameter_noinfo_noreturn
mov     eax, [ecx+4]
test    eax, eax
jz      short locret_100081a2
push    24h
push    eax
call    sub_10012c63
add     esp, 8
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 34h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+34h+var_4], eax
mov     eax, [ebp+arg_8]
mov     edx, ecx
mov     [esp+34h+var_20], eax
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [edx+18h]
and     eax, [ebp+arg_4]
mov     ecx, [edx+0ch]
push    esi
mov     [esp+3ch+var_10], eax
push    edi
mov     eax, [ecx+eax*8+4]
mov     edi, [ebp+arg_c]
mov     [esp+40h+var_8], edx
mov     [esp+40h+var_1c], edi
mov     [esp+40h+var_c], ecx
cmp     eax, [edx+4]
jnz     loc_10008320
mov     ecx, [edx+8]
cmp     ecx, 71c71c7h
jz      loc_10008402
mov     esi, [edi+4]
inc     ecx
mov     [esp+40h+var_20], ecx
add     esi, 8
mov     [esp+40h+var_1c], esi
mov     esi, [edx+1ch]
movd    xmm0, ecx
cvtdq2pd xmm0, xmm0
shr     ecx, 1fh
movss   xmm3, dword ptr [edx]
addsd   xmm0, ds:qword_10019a30[ecx*8]
mov     ecx, esi
shr     ecx, 1fh
cvtpd2ps xmm2, xmm0
movd    xmm0, esi
cvtdq2pd xmm0, xmm0
movaps  xmm1, xmm2
addsd   xmm0, ds:qword_10019a30[ecx*8]
cvtpd2ps xmm0, xmm0
divss   xmm1, xmm0
comiss  xmm3, xmm1
jb      short loc_100082a3
mov     ecx, [esp+40h+var_20]
mov     esi, [esp+40h+var_c]
mov     [edx+8], ecx
mov     ecx, [edi+4]
mov     edx, [eax+4]
mov     [ecx], eax
mov     ecx, [edi+4]
mov     [ecx+4], edx
mov     ecx, [edi+4]
mov     [eax+4], ecx
mov     ecx, [edi+4]
mov     [edx], ecx
mov     ecx, [edi+4]
mov     edx, [esp+40h+var_10]
mov     dword ptr [edi+4], 0
mov     [esi+edx*8], ecx
mov     [esi+edx*8+4], ecx
mov     [ebx], ecx
mov     byte ptr [ebx+4], 1
jmp     loc_100083dd
divss   xmm2, xmm3
sub     esp, 8
cvtps2pd xmm0, xmm2
movsd   [esp+48h+var_18], xmm0
fld     [esp+48h+var_18]
fstp    [esp+48h+x]
call    ceil
fstp    [esp+48h+var_18]
movsd   xmm0, [esp+48h+var_18]
add     esp, 8
cvtpd2ps xmm0, xmm0
call    __ftoui3
mov     ecx, 8
cmp     eax, ecx
cmova   ecx, eax
cmp     esi, ecx
jnb     short loc_100082f4
cmp     esi, 200h
jnb     short loc_100082f2
shl     esi, 3
cmp     esi, ecx
jnb     short loc_100082f4
mov     esi, ecx
mov     ecx, [esp+40h+var_8]
push    esi
call    sub_10008550
mov     ecx, [esp+40h+var_8]
lea     eax, [esp+40h+var_21]
push    eax
mov     eax, [ebp+arg_4]
push    edi
push    [esp+48h+var_1c]
mov     [esp+4ch+var_21], 0
push    eax
push    ebx
call    sub_100081b0
jmp     loc_100083dd
mov     edx, [esp+40h+var_20]
lea     esi, [eax+8]
mov     edi, 0ch
nop     dword ptr [eax+00h]
mov     ecx, [edx]
cmp     ecx, [esi]
jnz     short loc_10008345
add     edx, 4
add     esi, 4
sub     edi, 4
jnb     short loc_10008330
xor     ecx, ecx
jmp     short loc_1000836a
cmp     cl, [esi]
jnz     short loc_10008365
mov     cl, [edx+1]
cmp     cl, [esi+1]
jnz     short loc_10008365
mov     cl, [edx+2]
cmp     cl, [esi+2]
jnz     short loc_10008365
mov     cl, [edx+3]
cmp     cl, [esi+3]
jnz     short loc_10008365
xor     ecx, ecx
jmp     short loc_1000836a
sbb     ecx, ecx
or      ecx, 1
test    ecx, ecx
jz      short loc_100083d7
mov     esi, [esp+40h+var_c]
mov     edx, [esp+40h+var_10]
mov     ecx, [esi+edx*8]
mov     esi, eax
mov     dword ptr [esp+40h+var_18], ecx
nop
cmp     ecx, esi
jz      short loc_100083f3
mov     eax, [eax+4]
mov     edi, 0ch
mov     edx, [esp+40h+var_20]
lea     esi, [eax+8]
mov     ecx, [edx]
cmp     ecx, [esi]
jnz     short loc_100083a8
add     edx, 4
add     esi, 4
sub     edi, 4
jnb     short loc_10008393
xor     ecx, ecx
jmp     short loc_100083cd
cmp     cl, [esi]
jnz     short loc_100083c8
mov     cl, [edx+1]
cmp     cl, [esi+1]
jnz     short loc_100083c8
mov     cl, [edx+2]
cmp     cl, [esi+2]
jnz     short loc_100083c8
mov     cl, [edx+3]
cmp     cl, [esi+3]
jnz     short loc_100083c8
xor     ecx, ecx
jmp     short loc_100083cd
sbb     ecx, ecx
or      ecx, 1
test    ecx, ecx
mov     esi, eax
mov     ecx, dword ptr [esp+40h+var_18]
jnz     short loc_10008380
mov     [ebx], eax
mov     byte ptr [ebx+4], 0
mov     ecx, [esp+40h+var_4]
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    14h
mov     edx, [esp+40h+var_8]
mov     edi, [edx+8]
cmp     edi, 71c71c7h
jnz     short loc_1000840d
push    offset aunorderedmapse
call    ds:?_xlength_error@std@@yaxpbd@z
mov     ecx, [esp+40h+var_1c]
movss   xmm3, dword ptr [edx]
mov     ecx, [ecx+4]
add     ecx, 8
mov     [esp+40h+var_20], ecx
lea     ecx, [edi+1]
mov     edi, [edx+1ch]
movd    xmm0, ecx
cvtdq2pd xmm0, xmm0
mov     dword ptr [esp+40h+var_18], ecx
shr     ecx, 1fh
addsd   xmm0, ds:qword_10019a30[ecx*8]
mov     ecx, edi
shr     ecx, 1fh
cvtpd2ps xmm2, xmm0
movd    xmm0, edi
cvtdq2pd xmm0, xmm0
movaps  xmm1, xmm2
addsd   xmm0, ds:qword_10019a30[ecx*8]
cvtpd2ps xmm0, xmm0
divss   xmm1, xmm0
comiss  xmm3, xmm1
jb      short loc_100084c7
mov     edi, [esp+40h+var_1c]
mov     ecx, dword ptr [esp+40h+var_18]
mov     [edx+8], ecx
mov     edx, [eax+4]
mov     ecx, [edi+4]
mov     [ecx], eax
mov     ecx, [edi+4]
mov     [ecx+4], edx
mov     ecx, [edi+4]
mov     [eax+4], ecx
mov     eax, [edi+4]
mov     [edx], eax
mov     ecx, [edi+4]
mov     edx, [esp+40h+var_10]
mov     dword ptr [edi+4], 0
mov     edi, [esp+40h+var_c]
cmp     [edi+edx*8], esi
jnz     short loc_100084b0
mov     [edi+edx*8], ecx
mov     [ebx], ecx
mov     byte ptr [ebx+4], 1
jmp     loc_100083dd
mov     eax, [edi+edx*8+4]
cmp     [eax], ecx
jnz     short loc_100084bc
mov     [edi+edx*8+4], ecx
mov     [ebx], ecx
mov     byte ptr [ebx+4], 1
jmp     loc_100083dd
divss   xmm2, xmm3
sub     esp, 8
cvtps2pd xmm0, xmm2
movsd   [esp+48h+var_18], xmm0
fld     [esp+48h+var_18]
fstp    [esp+48h+x]
call    ceil
fstp    [esp+48h+var_18]
movsd   xmm0, [esp+48h+var_18]
add     esp, 8
cvtpd2ps xmm0, xmm0
call    __ftoui3
mov     ecx, 8
cmp     eax, ecx
cmova   ecx, eax
cmp     edi, ecx
jnb     short loc_10008518
cmp     edi, 200h
jnb     short loc_10008516
shl     edi, 3
cmp     edi, ecx
jnb     short loc_10008518
mov     edi, ecx
mov     ecx, [esp+40h+var_8]
push    edi
call    sub_10008550
mov     ecx, [esp+40h+var_8]
lea     eax, [esp+40h+var_21]
push    eax
push    [esp+44h+var_1c]
mov     eax, [ebp+arg_4]
push    [esp+48h+var_20]
mov     [esp+4ch+var_21], 0
push    eax
push    ebx
call    sub_100081b0
jmp     loc_100083dd
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, ecx
mov     eax, 1fffffffh
bsr     ecx, eax
push    esi
mov     esi, 1
mov     [ebp+var_18], ebx
mov     eax, esi
shl     eax, cl
mov     ecx, [ebp+arg_0]
push    edi
cmp     ecx, eax
jbe     short loc_1000858b
push    offset ainvalidhashbuc
call    ds:?_xlength_error@std@@yaxpbd@z
lea     eax, [ecx-1]
or      eax, 1
bsr     ecx, eax
mov     eax, [ebx+4]
mov     [ebp+var_8], eax
mov     eax, [ebx+14h]
sub     eax, [ebx+0ch]
lea     ecx, [ecx+1]
sar     eax, 2
shl     esi, cl
lea     ecx, [ebx+0ch]
lea     edi, [esi+esi]
cmp     edi, eax
jbe     short loc_100085c7
cmp     edi, 3fffffffh
ja      loc_10008723
push    edi
call    sub_100088f0
lea     ecx, [ebx+0ch]
lea     eax, [ebp+var_8]
push    eax
push    edi
call    sub_10008730
lea     eax, [esi-1]
mov     [ebx+1ch], esi
mov     [ebx+18h], eax
mov     esi, [ebx+4]
mov     esi, [esi]
mov     edi, esi
cmp     esi, [ebp+var_8]
jz      loc_10008710
nop     word ptr [eax+eax+00h]
mov     edi, [edi]
lea     ebx, [esi+8]
push    ebx
mov     [ebp+var_1c], edi
call    sub_10007710
mov     ecx, [ebp+var_18]
and     eax, [ecx+18h]
mov     ecx, [ecx+0ch]
lea     eax, [ecx+eax*8]
mov     ecx, [ebp+var_8]
mov     [ebp+var_14], eax
cmp     [eax], ecx
jnz     short loc_1000861e
mov     [eax], esi
mov     [eax+4], esi
jmp     loc_100086ff
mov     eax, [eax+4]
mov     [ebp+var_10], 0ch
lea     edx, [eax+8]
mov     [ebp+var_c], edx
xchg    ax, ax
mov     edi, [ebp+var_c]
mov     edx, [ebx]
cmp     edx, [edi]
mov     edi, [ebp+var_1c]
jnz     short loc_1000867b
add     [ebp+var_c], 4
add     ebx, 4
sub     [ebp+var_10], 4
jnb     short loc_10008630
mov     eax, [eax]
cmp     eax, esi
jz      short loc_10008670
mov     edx, [esi+4]
mov     [edx], edi
mov     edx, [edi+4]
mov     [edx], eax
mov     edx, [eax+4]
mov     [edx], esi
mov     ebx, [eax+4]
mov     edx, [edi+4]
mov     [eax+4], edx
mov     eax, [esi+4]
mov     [edi+4], eax
mov     [esi+4], ebx
mov     eax, [ebp+var_14]
mov     [eax+4], esi
jmp     loc_100086ff
mov     edx, [ebp+var_14]
cmp     [edx], eax
jz      short loc_100086d9
mov     eax, [eax+4]
lea     ebx, [esi+8]
mov     [ebp+var_10], ebx
mov     [ebp+var_c], 0ch
lea     edx, [eax+8]
mov     ebx, [ebx]
cmp     ebx, [edx]
jnz     short loc_100086d2
mov     ebx, [ebp+var_10]
add     edx, 4
add     ebx, 4
sub     [ebp+var_c], 4
mov     [ebp+var_10], ebx
jnb     short loc_10008695
mov     ebx, [eax]
mov     eax, [esi+4]
mov     [eax], edi
mov     eax, [edi+4]
mov     [eax], ebx
mov     eax, [ebx+4]
mov     [eax], esi
mov     eax, [edi+4]
mov     edx, [ebx+4]
mov     [ebx+4], eax
mov     eax, [esi+4]
mov     [edi+4], eax
mov     [esi+4], edx
jmp     short loc_100086ff
mov     edx, [ebp+var_14]
cmp     [edx], eax
jnz     short loc_10008682
mov     edx, [esi+4]
mov     [edx], edi
mov     edx, [edi+4]
mov     [edx], eax
mov     edx, [eax+4]
mov     [edx], esi
mov     ebx, [eax+4]
mov     edx, [edi+4]
mov     [eax+4], edx
mov     eax, [esi+4]
mov     [edi+4], eax
mov     eax, [ebp+var_14]
mov     [esi+4], ebx
mov     [eax], esi
mov     esi, edi
cmp     edi, ecx
jnz     loc_100085f0
nop     dword ptr [eax+00000000h]
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
call    sub_100023f0
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, ecx
mov     [ebp+var_4], edi
mov     eax, [edi+4]
mov     ecx, eax
mov     edx, [edi]
sub     ecx, edx
sar     ecx, 2
mov     [ebp+var_c], eax
mov     [ebp+var_10], ecx
cmp     esi, ecx
jbe     loc_1000887f
mov     ecx, [edi+8]
mov     ebx, [ebp+arg_4]
sub     ecx, edx
sar     ecx, 2
cmp     esi, ecx
jbe     loc_100087fe
cmp     esi, 3fffffffh
ja      loc_100088e7
mov     eax, ecx
shr     eax, 1
mov     [ebp+var_4], eax
mov     eax, 3fffffffh
sub     eax, [ebp+var_4]
cmp     ecx, eax
jbe     short loc_10008792
mov     [ebp+var_4], esi
jmp     short loc_1000879f
mov     eax, [ebp+var_4]
add     eax, ecx
cmp     eax, esi
cmovb   eax, esi
mov     [ebp+var_4], eax
test    edx, edx
jz      short loc_100087de
shl     ecx, 2
cmp     ecx, 1000h
jb      short loc_100087c0
mov     eax, [edx-4]
add     ecx, 23h
sub     edx, eax
add     edx, 0fffffffch
cmp     edx, 1fh
ja      short loc_100087f8
mov     edx, eax
push    ecx
push    edx
call    sub_10012c63
mov     dword ptr [edi], 0
add     esp, 8
mov     dword ptr [edi+4], 0
mov     dword ptr [edi+8], 0
push    [ebp+var_4]
call    sub_10008990
mov     ecx, [ebp+var_4]
mov     [edi], eax
mov     [edi+4], eax
lea     eax, [eax+ecx*4]
mov     [edi+8], eax
xor     eax, eax
jmp     short loc_10008860
call    ds:_invalid_parameter_noinfo_noreturn
mov     ecx, eax
mov     [ebp+var_8], 0
sub     ecx, edx
add     ecx, 3
shr     ecx, 2
cmp     edx, eax
cmova   ecx, [ebp+var_8]
test    ecx, ecx
jz      short loc_1000884b
cmp     ecx, 4
jb      short loc_1000884b
mov     eax, [ebx]
lea     edi, [edx-4]
lea     edi, [edi+ecx*4]
mov     [ebp+var_8], edi
mov     edi, [ebp+var_4]
cmp     edx, ebx
ja      short loc_10008835
cmp     [ebp+var_8], ebx
jnb     short loc_1000884b
and     ecx, 0fffffffch
mov     edi, edx
shl     ecx, 2
mov     [ebp+var_8], ecx
shr     ecx, 2
add     edx, [ebp+var_8]
rep stosd
mov     edi, [ebp+var_4]
mov     ecx, [ebp+var_c]
cmp     edx, ecx
jz      short loc_1000885d
mov     eax, [ebx]
mov     [edx], eax
add     edx, 4
cmp     edx, ecx
jnz     short loc_10008852
mov     eax, [ebp+var_10]
mov     ecx, [edi+4]
sub     esi, eax
jz      short loc_10008873
mov     eax, [ebx]
mov     [ecx], eax
add     ecx, 4
sub     esi, 1
jnz     short loc_10008867
mov     [edi+4], ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, [ebp+arg_4]
xor     eax, eax
shl     esi, 2
lea     ebx, [edx+esi]
shr     esi, 2
cmp     edx, ebx
cmova   esi, eax
test    esi, esi
jz      short loc_100088c9
cmp     esi, 4
jb      short loc_100088c9
mov     eax, [ecx]
lea     edi, [edx-4]
lea     edi, [edi+esi*4]
mov     [ebp+var_c], edi
mov     edi, [ebp+var_4]
cmp     edx, ecx
ja      short loc_100088b2
cmp     [ebp+var_c], ecx
jnb     short loc_100088c9
and     esi, 0fffffffch
mov     edi, edx
shl     esi, 2
mov     ecx, esi
shr     ecx, 2
add     edx, esi
rep stosd
mov     edi, [ebp+var_4]
mov     ecx, [ebp+arg_4]
cmp     edx, ebx
jz      short loc_100088db
nop     dword ptr [eax]
mov     eax, [ecx]
mov     [edx], eax
add     edx, 4
cmp     edx, ebx
jnz     short loc_100088d0
mov     [edi+4], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
call    sub_100023f0
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_0]
push    edi
push    ecx
mov     [ebp+var_8], ecx
mov     eax, [esi+4]
sub     eax, [esi]
sar     eax, 2
mov     [ebp+var_4], eax
call    sub_10008990
mov     ecx, [esi]
mov     ebx, eax
mov     edi, [esi+4]
mov     edx, ebx
cmp     ecx, edi
jz      short loc_10008931
nop
mov     eax, [ecx]
lea     edx, [edx+4]
add     ecx, 4
mov     [edx-4], eax
cmp     ecx, edi
jnz     short loc_10008920
mov     ecx, [esi]
test    ecx, ecx
jz      short loc_10008960
mov     eax, [esi+8]
sub     eax, ecx
and     eax, 0fffffffch
cmp     eax, 1000h
jb      short loc_10008956
mov     edx, [ecx-4]
add     eax, 23h
sub     ecx, edx
add     ecx, 0fffffffch
cmp     ecx, 1fh
ja      short loc_1000897d
mov     ecx, edx
push    eax
push    ecx
call    sub_10012c63
add     esp, 8
mov     eax, [ebp+var_4]
mov     [esi], ebx
pop     edi
lea     eax, [ebx+eax*4]
mov     [esi+4], eax
mov     eax, [ebp+var_8]
lea     eax, [ebx+eax*4]
mov     [esi+8], eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
call    ds:_invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
lea     ecx, ds:0[eax*4]
cmp     eax, 3fffffffh
jbe     short loc_100089a9
or      ecx, 0ffffffffh
jmp     short loc_100089b1
cmp     ecx, 1000h
jb      short loc_100089de
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      short loc_100089d8
lea     eax, [ecx+23h]
and     eax, 0ffffffe0h
mov     [eax-4], ecx
pop     ebp
retn    4
call    ds:_invalid_parameter_noinfo_noreturn
test    ecx, ecx
jz      short loc_100089ef
push    ecx
call    ??2@yapaxi@z
add     esp, 4
pop     ebp
retn    4
xor     eax, eax
pop     ebp
retn    4
mov     eax, [edx+4]
push    esi
mov     dword ptr [eax], 0
mov     esi, [edx]
test    esi, esi
jz      short loc_10008a6d
push    edi
mov     eax, [esi+18h]
mov     edi, [esi]
test    eax, eax
jz      short loc_10008a5b
mov     ecx, [esi+20h]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_10008a3c
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_10008a6f
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
mov     dword ptr [esi+18h], 0
add     esp, 8
mov     dword ptr [esi+1ch], 0
mov     dword ptr [esi+20h], 0
push    24h
push    esi
call    sub_10012c63
add     esp, 8
mov     esi, edi
test    edi, edi
jnz     short loc_10008a11
pop     edi
pop     esi
retn
call    ds:_invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10008a80
mov     eax, large fs:0
push    eax
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+4]
xor     edx, edx
push    8000ffffh
push    3
push    eax
push    0
push    0
push    0
call    sub_100037f0
add     esp, 18h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10011eb0
mov     eax, large fs:0
push    eax
push    ecx
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, [ebp+4]
mov     [ebp+var_4], 0
call    ds:getlasterror
test    eax, eax
jnz     short loc_10008b26
push    8007029ch
push    2
push    esi
push    eax
push    eax
push    eax
xor     edx, edx
xor     ecx, ecx
call    sub_100037f0
add     esp, 18h
mov     eax, 29ch
jmp     short loc_10008b28
jle     short loc_10008b30
movzx   eax, ax
or      eax, 80070000h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ecx
call    ds:variantclear
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10007e60
mov     eax, large fs:0
push    eax
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ecx]
test    eax, eax
jz      short loc_10008b86
push    eax
mov     [ebp+var_4], 0
call    ds:sysfreestring
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    [ebp+arg_0]
lea     ecx, [ebp+var_4]
call    unknown_libname_1
push    offset __ti1?avcatlexception@atl@@
mov     eax, ecx
push    eax
call    _cxxthrowexception
push    ebx
mov     ebx, esp
sub     esp, 8
and     esp, 0fffffff8h
add     esp, 4
push    ebp
mov     ebp, [ebx+4]
mov     [esp+0ch+var_8], ebp
mov     ebp, esp
push    0ffffffffh
push    offset loc_100145a0
mov     eax, large fs:0
push    eax
push    ebx
sub     esp, 30h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp-14h], eax
push    esi
push    edi
push    eax
lea     eax, [ebp-0ch]
mov     large fs:0, eax
mov     esi, [ebx+8]
lea     eax, [ebp-28h]
push    eax
mov     [ebp-2ch], esi
mov     dword ptr [ebp-28h], 0
mov     dword ptr [ebp-24h], 0
call    ds:getsystemtimeasfiletime
mov     edx, [esi+40h]
xor     ecx, ecx
or      ecx, [esi+3ch]
add     ecx, 4c4b40h
mov     dword ptr [ebp-18h], 0
adc     edx, 0
or      [ebp-18h], ecx
xor     edi, edi
or      edi, [ebp-28h]
cmp     [ebp-24h], edx
ja      short loc_10008c5f
jb      short loc_10008c58
cmp     edi, [ebp-18h]
jnb     short loc_10008c5f
xor     eax, eax
jmp     loc_10008e16
mov     eax, [ebp-28h]
lea     ecx, [ebp-18h]
mov     [esi+3ch], eax
mov     eax, [ebp-24h]
mov     [esi+40h], eax
mov     dword ptr [ebp-18h], 0
call    sub_100116d0
mov     edi, eax
test    edi, edi
jns     short loc_10008c8f
mov     ecx, [ebx+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_10008df6
push    offset psz
mov     dword ptr [ebp-20h], 0
call    ds:sysallocstring
mov     esi, eax
test    esi, esi
jnz     short loc_10008cc8
mov     ecx, [ebx+4]
mov     edx, 8007000eh
call    sub_10002ff0
mov     ecx, [ebx+4]
mov     edi, 8007000eh
mov     edx, edi
call    sub_10002ff0
jmp     loc_10008dd8
mov     eax, [ebp-18h]
mov     ecx, [eax]
mov     edi, [ecx+1ch]
lea     ecx, [ebp-20h]
push    ecx
push    esi
push    eax
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, eax
push    esi
mov     dword ptr [ebp-4], 1
call    ds:sysfreestring
mov     dword ptr [ebp-4], 0ffffffffh
test    edi, edi
jns     short loc_10008d0a
mov     ecx, [ebx+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_10008dd8
mov     edi, [ebp-20h]
mov     dword ptr [ebp-1ch], 0
mov     eax, [edi]
mov     eax, [eax+34h]
mov     [ebp-30h], eax
mov     eax, [ebp-2ch]
add     eax, 24h
cmp     dword ptr [eax+14h], 8
jb      short loc_10008d2a
mov     eax, [eax]
push    eax
call    ds:sysallocstring
mov     ecx, [ebx+4]
mov     [ebp-2ch], eax
mov     esi, [ebp-2ch]
test    esi, esi
jz      loc_10008e36
lea     eax, [ebp-1ch]
push    eax
push    esi
push    edi
mov     edi, [ebp-30h]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, eax
push    esi
mov     dword ptr [ebp-4], 2
call    ds:sysfreestring
mov     dword ptr [ebp-4], 0ffffffffh
test    edi, edi
jns     short loc_10008d7c
mov     ecx, [ebx+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_10008dba
mov     esi, [ebp-1ch]
xorps   xmm0, xmm0
mov     eax, [esi]
movups  xmmword ptr [ebp-40h], xmm0
mov     edi, [eax+30h]
lea     eax, [ebp-40h]
push    eax
call    ds:variantinit
movups  xmm0, xmmword ptr [ebp-40h]
push    0
sub     esp, 10h
mov     ecx, edi
mov     eax, esp
push    esi
movups  xmmword ptr [eax], xmm0
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, eax
lea     eax, [ebp-40h]
push    eax
call    ds:variantclear
mov     dword ptr [ebp-4], 4
mov     ecx, [ebp-1ch]
test    ecx, ecx
jz      short loc_10008dd8
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     dword ptr [ebp-4], 5
mov     eax, [ebp-20h]
test    eax, eax
jz      short loc_10008df6
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     dword ptr [ebp-4], 6
mov     eax, [ebp-18h]
test    eax, eax
jz      short loc_10008e14
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp-14h]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
mov     esp, ebx
pop     ebx
retn    4
call    sub_10008e40
push    ebp
mov     ebp, esp
mov     eax, [ebp+4]
xor     edx, edx
push    8007000eh
push    0
push    eax
push    0
push    0
push    0
call    sub_100037f0
add     esp, 18h
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0
push    [ebp+arg_0]
mov     edx, 6ch
call    sub_1000b640
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10008e80
mov     eax, large fs:0
push    eax
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_4]
mov     ebx, [ebp+bstr]
push    ebx
mov     [ebp+var_20], eax
call    ds:sysstringbytelen
test    eax, eax
jnz     short loc_10008ec9
mov     eax, 80070057h
jmp     loc_10009041
lea     ecx, [ebp+punk]
mov     [ebp+punk], 0
call    sub_10010510
mov     edi, eax
test    edi, edi
jns     short loc_10008f0e
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 0
mov     ecx, [ebp+punk]
test    ecx, ecx
jz      short loc_10008f06
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, [ebp+var_20]
jmp     loc_10008fd3
lea     eax, [ebp+ppvout]
mov     [ebp+ppvout], 0
push    eax
push    offset stru_100182dc
push    offset guidservice
push    [ebp+punk]
call    ds:iunknown_queryservice
mov     edi, eax
test    edi, edi
jns     short loc_10008f7d
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 1
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_10008f5a
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 2
mov     eax, [ebp+punk]
test    eax, eax
jz      short loc_10008f06
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, [ebp+var_20]
jmp     short loc_10008fd3
mov     eax, [ebp+ppvout]
push    ebx
mov     ebx, [ebp+var_20]
push    ebx
mov     ecx, [eax]
push    eax
mov     esi, [ecx+10h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
mov     [ebp+var_4], 3
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_10008fb5
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 4
mov     eax, [ebp+punk]
test    eax, eax
jz      short loc_10008fd3
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebx]
mov     [ebp+var_1c], 0
mov     esi, [eax]
lea     eax, [ebp+var_1c]
push    eax
push    offset dword_10018228
push    ebx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
test    ebx, ebx
jns     short loc_1000900b
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
jmp     short loc_10009021
mov     eax, [ebp+var_1c]
push    edi
push    eax
mov     ecx, [eax]
mov     esi, [ecx+10h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
mov     [ebp+var_4], 5
mov     ecx, [ebp+var_1c]
test    ecx, ecx
jz      short loc_1000903f
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
mov     eax, 80004001h
retn    8
mov     eax, 80004001h
retn    4
push    ebp
mov     ebp, esp
cmp     [ebp+arg_0], 0
jnz     short loc_10009098
push    [ebp+arg_8]
mov     edx, [ebp+arg_4]
call    sub_100091c0
pop     ebp
retn    0ch
mov     eax, [ebp+arg_8]
test    eax, eax
jnz     short loc_100090a8
mov     eax, 80004003h
pop     ebp
retn    0ch
mov     dword ptr [eax], 0
mov     eax, 80040110h
pop     ebp
retn    0ch
xor     eax, eax
retn
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_8]
test    eax, eax
jnz     short loc_100090e6
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn    0ch
push    ebx
push    edi
push    offset dword_100203fc
push    28h
mov     dword ptr [eax], 0
mov     ebx, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     edi, eax
add     esp, 8
mov     [ebp+var_4], edi
test    edi, edi
jz      short loc_1000912a
mov     dword ptr [edi+4], 0
xorps   xmm0, xmm0
movups  xmmword ptr [edi+8], xmm0
movq    qword ptr [edi+18h], xmm0
mov     byte ptr [edi+20h], 0
mov     dword ptr [edi], offset ??_7?$ccomobjectcached@vccomclassfactory@atl@@@atl@@6b@
jmp     short loc_1000912c
xor     edi, edi
test    edi, edi
jz      short loc_100091a7
mov     eax, [ebp+arg_0]
lea     ebx, [edi+8]
push    esi
xor     esi, esi
mov     [edi+24h], eax
push    esi
push    esi
push    ebx
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_1000915e
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_10009160
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_10009166
mov     byte ptr [ebx+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     ebx, ebx
test    eax, eax
cmovs   ebx, eax
test    ebx, ebx
jnz     short loc_10009193
push    [ebp+arg_8]
mov     eax, [edi]
push    [ebp+arg_4]
push    edi
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
test    ebx, ebx
jz      short loc_100091a6
mov     edx, [edi]
push    1
mov     esi, [edx+14h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     esi
pop     edi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_0]
mov     [ebp+var_4], edx
test    eax, eax
jnz     short loc_100091db
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn    4
push    ebx
push    esi
push    edi
push    offset dword_100203fc
push    28h
mov     dword ptr [eax], 0
mov     edi, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_10009243
mov     edi, dword_10020788
xorps   xmm0, xmm0
mov     dword ptr [ebx+8], 0
movups  xmmword ptr [ebx+0ch], xmm0
movq    qword ptr [ebx+1ch], xmm0
mov     byte ptr [ebx+24h], 0
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcqueueactionhandler@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vcqueueactionhandler@scheduler@@@atl@@6b@_0
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, 8007000eh
jmp     short loc_10009245
xor     ebx, ebx
test    ebx, ebx
jz      short loc_100092b8
xor     esi, esi
lea     edi, [ebx+0ch]
push    esi
push    esi
push    edi
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_10009270
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_10009272
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_10009278
mov     byte ptr [edi+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     edi, edi
test    eax, eax
cmovs   edi, eax
test    edi, edi
jnz     short loc_100092a5
push    [ebp+arg_0]
mov     eax, [ebx]
push    [ebp+var_4]
push    ebx
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jz      short loc_100092b8
mov     edx, [ebx]
push    1
mov     esi, [edx+1ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_100182b4
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
or      ebx, 0ffffffffh
lock xadd [edi+4], ebx
dec     ebx
jnz     short loc_10009324
test    edi, edi
jz      short loc_10009340
mov     edx, [edi]
push    1
mov     esi, [edx+14h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
cmp     ebx, 1
jnz     short loc_10009340
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
mov     ebx, 1
lock xadd [eax+4], ebx
inc     ebx
cmp     ebx, 2
jnz     short loc_10009382
push    esi
push    edi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
lea     eax, [esi+8]
mov     dword ptr [esi+4], 0c0000001h
mov     dword ptr [esi], offset ??_7ccomclassfactory@atl@@6b@
cmp     byte ptr [eax+18h], 0
jz      short loc_100093b7
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_100093c8
push    28h
push    esi
call    sub_10012c63
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_10018dd0
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcqueueactionhandler@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vcqueueactionhandler@scheduler@@@atl@@6b@_0
mov     dword ptr [ebx+8], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
cmp     byte ptr [ebx+24h], 0
lea     eax, [ebx+0ch]
jz      short loc_10009437
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_10009448
push    28h
push    ebx
call    sub_10012c63
add     esp, 8
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
sub     [esp+arg_0], 4
jmp     sub_100093d0
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_c]
test    edx, edx
jz      short loc_100094ca
cmp     [ebp+arg_4], 0
mov     ecx, [ebp+arg_8]
mov     dword ptr [edx], 0
jz      short loc_100094af
cmp     dword ptr [ecx], 0
jnz     short loc_100094a6
cmp     dword ptr [ecx+4], 0
jnz     short loc_100094a6
cmp     dword ptr [ecx+8], 0c0h
jnz     short loc_100094a6
cmp     dword ptr [ecx+0ch], 46000000h
jz      short loc_100094af
mov     eax, 80040110h
pop     ebp
retn    10h
mov     eax, [ebp+arg_0]
push    esi
push    edx
push    ecx
mov     esi, [eax+24h]
mov     ecx, esi
push    [ebp+arg_4]
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn    10h
mov     eax, 80004003h
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
cmp     [ebp+arg_4], 0
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
jz      short loc_1000950a
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn    8
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
lea     eax, [esi+8]
mov     dword ptr [esi], offset ??_7ccomclassfactory@atl@@6b@
cmp     byte ptr [eax+18h], 0
jz      short loc_10009550
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_10009561
push    28h
push    esi
call    sub_10012c63
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
retn    4
mov     eax, 80004001h
retn    0ch
mov     eax, 1
retn    4
xor     eax, eax
retn    4
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, ecx
lea     ecx, [edi+4]
mov     dword ptr [edi], offset ??_7cregobject@atl@@6b@
call    sub_10009620
lea     ecx, [edi+4]
call    sub_10009620
mov     eax, [edi+4]
test    eax, eax
jz      short loc_100095e5
push    eax
call    ds:__imp_free
add     esp, 4
mov     dword ptr [edi+4], 0
mov     eax, [edi+8]
test    eax, eax
jz      short loc_100095fd
push    eax
call    ds:__imp_free
add     esp, 4
mov     dword ptr [edi+8], 0
test    [ebp+arg_0], 1
mov     dword ptr [edi+0ch], 0
jz      short loc_10009615
push    14h
push    edi
call    sub_10012c63
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn    4
push    esi
mov     esi, ecx
push    edi
xor     edi, edi
mov     eax, [esi+8]
test    eax, eax
jle     short loc_10009659
cmp     edi, eax
jge     short loc_10009693
mov     eax, [esi]
push    dword ptr [eax+edi*4]
call    j_j_free
add     esp, 4
cmp     edi, [esi+8]
jge     short loc_10009693
mov     eax, [esi+4]
push    dword ptr [eax+edi*4]
call    j_j_free
mov     eax, [esi+8]
inc     edi
add     esp, 4
cmp     edi, eax
jl      short loc_10009631
mov     eax, [esi]
test    eax, eax
jz      short loc_1000966f
push    eax
call    ds:__imp_free
add     esp, 4
mov     dword ptr [esi], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_10009687
push    eax
call    ds:__imp_free
add     esp, 4
mov     dword ptr [esi+4], 0
pop     edi
mov     dword ptr [esi+8], 0
xor     eax, eax
pop     esi
retn
push    1
push    0c000008ch
call    sub_100054a0
int     3
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
lea     ecx, [ecx+4]
call    sub_10009620
pop     ebp
retn    4
push    esi
mov     esi, ecx
push    dword ptr [esi]
call    j_j_free
add     esp, 4
mov     dword ptr [esi], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100096e0
mov     eax, large fs:0
push    eax
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     eax, [ebp+arg_0]
mov     esi, [ebp+arg_4]
mov     [ebp+src], eax
mov     [ebp+var_28], esi
test    eax, eax
jz      loc_1000987c
test    esi, esi
jz      loc_1000987c
mov     ecx, eax
lea     edx, [ecx+2]
xchg    ax, ax
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_10009730
sub     ecx, edx
mov     edx, 2
sar     ecx, 1
push    offset dword_100203fc
lea     eax, ds:2[ecx*2]
xor     ecx, ecx
mov     [ebp+size], eax
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx
call    ??_u@yapaxiabunothrow_t@std@@@z
add     esp, 8
mov     edi, eax
mov     ecx, esi
mov     [ebp+var_4], 0
mov     [ebp+var_14], edi
lea     edx, [ecx+2]
nop     dword ptr [eax+eax+00000000h]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_10009780
sub     ecx, edx
mov     edx, 2
sar     ecx, 1
push    offset dword_100203fc
lea     eax, ds:2[ecx*2]
xor     ecx, ecx
mov     [ebp+var_24], eax
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx
call    ??_u@yapaxiabunothrow_t@std@@@z
add     esp, 8
mov     esi, eax
mov     byte ptr [ebp+var_4], 1
mov     [ebp+var_18], esi
test    edi, edi
jz      loc_10009867
test    esi, esi
jz      loc_10009867
mov     edx, [ebp+size]
mov     ecx, edi
push    edx
push    [ebp+src]
call    sub_10005400
push    eax
call    sub_1000a4b0
mov     edx, [ebp+var_24]
mov     ecx, esi
push    edx
push    [ebp+var_28]
call    sub_10005400
push    eax
call    sub_1000a4b0
mov     eax, [ebx+8]
xor     ecx, ecx
add     eax, 1
push    4
setb    cl
neg     ecx
or      ecx, eax
push    ecx
push    dword ptr [ebx]
call    ds:_recalloc
add     esp, 24h
test    eax, eax
jz      short loc_10009867
mov     [ebx], eax
xor     ecx, ecx
mov     eax, [ebx+8]
add     eax, 1
push    4
setb    cl
neg     ecx
or      ecx, eax
push    ecx
push    dword ptr [ebx+4]
call    ds:_recalloc
add     esp, 0ch
test    eax, eax
jz      short loc_10009867
mov     ecx, [ebx+8]
mov     [ebx+4], eax
lea     edx, ds:0[ecx*4]
mov     ecx, [ebx]
add     ecx, edx
jz      short loc_10009855
mov     [ecx], edi
mov     eax, [ebx+4]
add     eax, edx
jz      short loc_1000985b
mov     [eax], esi
inc     dword ptr [ebx+8]
xor     edi, edi
xor     esi, esi
lea     ebx, [edi+1]
jmp     short loc_10009869
xor     ebx, ebx
push    esi
call    j_j_free
push    edi
call    j_j_free
add     esp, 8
mov     eax, ebx
jmp     short loc_1000987e
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100098a0
mov     eax, large fs:0
push    eax
sub     esp, 8
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ecx, [ebp+arg_4]
mov     edx, [ebp+arg_0]
mov     eax, [ebp+arg_8]
test    ecx, ecx
jz      short loc_10009901
test    eax, eax
jz      short loc_10009901
mov     [ebp+var_14], 0
push    eax
push    ecx
lea     ecx, [edx+4]
mov     [ebp+var_4], 0
call    sub_100096e0
neg     eax
sbb     eax, eax
and     eax, 7ff8fff2h
add     eax, 8007000eh
jmp     short loc_10009906
mov     eax, 80070057h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    dword ptr [ecx]
call    ds:__imp_free
pop     ecx
retn
lea     eax, [ecx+4]
cmp     [ecx], eax
jnz     sub_10009930
retn
push    ebp
mov     ebp, esp
push    esi
push    [ebp+size]
mov     esi, ecx
call    ds:__imp_malloc
add     esp, 4
test    eax, eax
jz      short loc_1000996d
mov     [esi], eax
pop     esi
pop     ebp
retn    4
push    8007000eh
call    sub_10008bb0
call    ds:getlasterror
test    eax, eax
jle     short locret_10009992
movzx   eax, ax
or      eax, 80070000h
retn
push    dword ptr [ecx+8]
call    ds:cotaskmemfree
retn
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_4]
mov     esi, ecx
mov     ecx, [esi]
lea     edx, [edi+1]
add     edx, ecx
cmp     edx, ecx
jle     loc_10009a53
cmp     edx, edi
jle     loc_10009a53
mov     eax, [esi+4]
cmp     edx, eax
jl      short loc_10009a0d
cmp     eax, 3fffffffh
jg      short loc_10009a53
add     eax, eax
mov     [esi+4], eax
cmp     edx, eax
jge     short loc_100099d8
mov     ecx, 2
mul     ecx
test    edx, edx
ja      short loc_10009a53
jb      short loc_100099fa
cmp     eax, 0ffffffffh
ja      short loc_10009a53
push    eax
push    dword ptr [esi+8]
call    ds:cotaskmemrealloc
test    eax, eax
jz      short loc_10009a53
mov     ecx, [esi]
mov     [esi+8], eax
test    ecx, ecx
js      short loc_10009a53
mov     eax, [esi+4]
cmp     ecx, eax
jge     short loc_10009a53
mov     edx, eax
sub     edx, ecx
cmp     edx, eax
jg      short loc_10009a53
mov     eax, [esi+8]
add     edx, edx
lea     ecx, [eax+ecx*2]
lea     eax, [edi+edi]
push    eax
push    [ebp+src]
call    sub_10005400
push    eax
call    sub_1000a4b0
add     [esi], edi
add     esp, 0ch
mov     eax, [esi+8]
xor     edx, edx
mov     ecx, [esi]
pop     edi
pop     esi
mov     [eax+ecx*2], dx
lea     eax, [edx+1]
pop     ebp
retn    8
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10009a60
mov     eax, large fs:0
push    eax
sub     esp, 60h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     esi, [ebp+str]
mov     eax, [ebp+arg_4]
mov     [ebp+var_6c], eax
test    esi, esi
jz      loc_10009df1
test    eax, eax
jz      loc_10009df1
mov     ecx, esi
mov     dword ptr [eax], 0
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_10009ab1
sub     ecx, edx
mov     [ebp+pv], 0
sar     ecx, 1
xorps   xmm0, xmm0
movq    [ebp+var_60], xmm0
mov     dword ptr [ebp+var_60], 0
lea     eax, [ecx+ecx]
mov     ecx, 3e8h
cmp     eax, 64h
cmovl   eax, ecx
mov     ecx, 2
mov     dword ptr [ebp+var_60+4], eax
mul     ecx
test    edx, edx
ja      short loc_10009b0e
jb      short loc_10009af9
cmp     eax, 0ffffffffh
ja      short loc_10009b0e
push    eax
call    ds:cotaskmemalloc
mov     [ebp+pv], eax
test    eax, eax
jz      short loc_10009b13
xor     ecx, ecx
mov     [eax], cx
jmp     short loc_10009b13
xor     eax, eax
mov     [ebp+pv], eax
mov     [ebp+var_4], 0
test    eax, eax
jz      loc_10009ddf
xor     eax, eax
mov     [ebx], esi
mov     cl, byte_10020804
xor     dl, dl
mov     [ebp+var_63], cl
mov     [ebp+var_68], eax
mov     [ebp+var_62], al
mov     [ebp+var_61], dl
cmp     [esi], ax
jz      loc_10009dc1
mov     edi, eax
cmp     cl, 1
jnz     loc_10009c56
test    eax, eax
jnz     short loc_10009bb8
push    offset substr
push    esi
call    ds:wcsstr
add     esp, 8
test    eax, eax
jz      short loc_10009bb5
mov     ecx, [ebx]
cmp     eax, ecx
jnz     short loc_10009bb5
push    ecx
call    ds:charnextw
push    eax
mov     [ebx], eax
call    ds:charnextw
push    eax
mov     [ebx], eax
call    ds:charnextw
push    eax
mov     [ebx], eax
call    ds:charnextw
mov     [ebx], eax
mov     [ebp+var_54], edi
push    1fh
push    offset ahkcusoftwarecl
lea     ecx, [ebp+var_60]
mov     byte ptr [ebp+var_4], 1
call    sub_100099b0
mov     byte ptr [ebp+var_4], 0
test    eax, eax
jz      loc_10009ddf
mov     [ebp+var_62], 1
mov     dl, [ebp+var_61]
mov     eax, [ebx]
mov     esi, 27h
cmp     si, [eax]
jnz     short loc_10009c04
test    dl, dl
jnz     short loc_10009bd1
mov     [ebp+var_61], 1
jmp     loc_10009c56
push    eax
call    ds:charnextw
cmp     si, [eax]
jz      short loc_10009be4
xor     al, al
mov     [ebp+var_61], al
jmp     short loc_10009c08
push    dword ptr [ebx]
call    ds:charnextw
push    1
push    eax
lea     ecx, [ebp+var_60]
mov     [ebx], eax
call    sub_100099b0
test    eax, eax
jz      loc_10009ddf
mov     dl, [ebp+var_61]
test    dl, dl
jnz     short loc_10009c56
mov     eax, [ebx]
lea     ecx, [edi+1]
movzx   eax, word ptr [eax]
cmp     eax, 7bh
cmovnz  ecx, edi
mov     [ebp+var_68], ecx
cmp     eax, 7dh
jnz     short loc_10009c56
add     ecx, 0ffffffffh
mov     [ebp+var_68], ecx
jnz     short loc_10009c56
cmp     [ebp+var_62], 1
jnz     short loc_10009c56
mov     [ebp+var_54], 0
push    9
push    offset asc_10018eb0
lea     ecx, [ebp+var_60]
mov     byte ptr [ebp+var_4], 2
call    sub_100099b0
mov     byte ptr [ebp+var_4], 0
test    eax, eax
jz      loc_10009ddf
mov     [ebp+var_62], 0
mov     eax, [ebx]
cmp     word ptr [eax], 25h
jnz     loc_10009d80
push    eax
call    ds:charnextw
mov     esi, eax
mov     [ebx], esi
movzx   eax, word ptr [esi]
cmp     eax, 25h
jnz     short loc_10009c7d
push    1
push    esi
jmp     loc_10009d83
test    esi, esi
jz      short loc_10009ca1
test    ax, ax
jz      short loc_10009ca1
mov     ecx, eax
cmp     cx, 25h
jz      short loc_10009cb6
push    esi
call    ds:charnextw
mov     esi, eax
movzx   eax, word ptr [esi]
mov     ecx, eax
test    ax, ax
jnz     short loc_10009c88
push    [ebp+pv]
mov     ebx, 80020009h
call    ds:cotaskmemfree
mov     eax, ebx
jmp     loc_10009df6
test    esi, esi
jz      short loc_10009ca1
mov     ecx, [ebx]
mov     eax, esi
sub     eax, ecx
sar     eax, 1
cmp     eax, 1fh
jg      loc_10009daf
push    eax
push    ecx
lea     eax, [ebp+destination]
push    20h
push    eax
call    ds:wcsncpy_s
push    eax
call    sub_1000a4b0
mov     eax, [ebx+4]
xor     edi, edi
add     esp, 14h
mov     [ebp+var_54], eax
cmp     [eax+0ch], edi
jle     short loc_10009ca1
nop
mov     eax, [eax+4]
lea     ecx, [ebp+destination]
push    ecx
push    dword ptr [eax+edi*4]
call    ds:lstrcmpiw
test    eax, eax
jz      short loc_10009d0f
mov     eax, [ebp+var_54]
inc     edi
cmp     edi, [eax+0ch]
jl      short loc_10009cf0
jmp     short loc_10009ca1
cmp     edi, 0ffffffffh
jz      short loc_10009ca1
test    edi, edi
js      loc_10009e14
mov     eax, [ebp+var_54]
cmp     edi, [eax+0ch]
jge     loc_10009e14
mov     eax, [eax+8]
mov     edx, [eax+edi*4]
test    edx, edx
jz      loc_10009ca1
mov     [ebp+var_54], 0
mov     ecx, edx
mov     byte ptr [ebp+var_4], 3
lea     edi, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_10009d46
sub     ecx, edi
sar     ecx, 1
push    ecx
push    edx
lea     ecx, [ebp+var_60]
call    sub_100099b0
mov     byte ptr [ebp+var_4], 0
test    eax, eax
jz      loc_10009ddf
cmp     [ebx], esi
jz      short loc_10009d8f
nop
push    dword ptr [ebx]
call    ds:charnextw
mov     [ebx], eax
cmp     eax, esi
jnz     short loc_10009d70
jmp     short loc_10009d8f
push    1
push    eax
lea     ecx, [ebp+var_60]
call    sub_100099b0
test    eax, eax
jz      short loc_10009ddf
push    dword ptr [ebx]
call    ds:charnextw
mov     esi, eax
mov     [ebx], esi
cmp     word ptr [esi], 0
jz      short loc_10009dc1
mov     eax, [ebp+var_68]
mov     dl, [ebp+var_61]
mov     cl, [ebp+var_63]
jmp     loc_10009b43
push    [ebp+pv]
mov     ebx, 80004005h
call    ds:cotaskmemfree
mov     eax, ebx
jmp     short loc_10009df6
mov     eax, [ebp+pv]
xor     ebx, ebx
mov     ecx, [ebp+var_6c]
mov     [ebp+pv], 0
push    [ebp+pv]
mov     [ecx], eax
call    ds:cotaskmemfree
mov     eax, ebx
jmp     short loc_10009df6
push    [ebp+pv]
mov     ebx, 8007000eh
call    ds:cotaskmemfree
mov     eax, ebx
jmp     short loc_10009df6
mov     eax, 80004003h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    1
push    0c000008ch
call    sub_100054a0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000a5c0
mov     eax, large fs:0
push    eax
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, ecx
mov     edi, [esi+8]
mov     eax, [ebp+lpsubkey]
mov     ebx, [ebp+hkey]
mov     [ebp+var_1c], eax
mov     [ebp+phkresult], 0
test    edi, edi
jz      short loc_10009ed9
cmp     dword ptr [edi], 0
jz      short loc_10009ecc
push    offset modulename
call    ds:getmodulehandlew
test    eax, eax
jnz     short loc_10009e8f
mov     eax, 1
jmp     short loc_10009ef6
push    offset procname
push    eax
call    ds:getprocaddress
mov     [ebp+var_20], eax
test    eax, eax
jz      short loc_10009ed2
push    0
push    dword ptr [edi]
lea     ecx, [ebp+dwdisposition]
push    ecx
lea     ecx, [ebp+phkresult]
push    ecx
push    0
push    2001fh
push    0
push    0
push    0
push    [ebp+var_1c]
mov     ecx, eax
push    ebx
call    ds:___guard_check_icall_fptr
call    [ebp+var_20]
jmp     short loc_10009ef6
cmp     dword ptr [edi+4], 0
jnz     short loc_10009ed9
mov     eax, 1
jmp     short loc_10009ef6
lea     ecx, [ebp+dwdisposition]
push    ecx
lea     ecx, [ebp+phkresult]
push    ecx
push    0
push    2001fh
push    0
push    0
push    0
push    eax
push    ebx
call    ds:regcreatekeyexw
test    eax, eax
jnz     short loc_10009f19
mov     eax, [esi]
xor     edx, edx
test    eax, eax
jz      short loc_10009f0b
push    eax
call    ds:regclosekey
mov     edx, eax
mov     ecx, [ebp+phkresult]
mov     eax, edx
mov     [esi], ecx
mov     dword ptr [esi+4], 0
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    1ch
push    esi
mov     esi, ecx
cmp     dword ptr [esi], 0
jz      short loc_10009f5d
mov     ecx, [esi]
push    ecx
mov     eax, [ecx]
mov     [esi], eax
call    ds:__imp_free
add     esp, 4
cmp     dword ptr [esi], 0
jnz     short loc_10009f48
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10009f60
mov     eax, large fs:0
push    eax
push    ecx
mov     eax, 2128h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     [ebp+var_2124], ecx
mov     eax, [ebp+arg_8]
mov     edi, [ebp+arg_0]
mov     ebx, [ebp+arg_4]
mov     [ebp+var_2138], eax
lea     eax, [ebp+string1]
push    eax
mov     dword ptr [ebp+data], ecx
mov     [ebp+var_212c], edi
mov     [ebp+lpvaluename], ebx
call    sub_1000a950
test    eax, eax
js      loc_1000a43c
push    offset string2
lea     eax, [ebp+string1]
push    eax
call    ds:lstrcmpiw
test    eax, eax
jnz     short loc_10009fec
lea     esi, [eax+8]
jmp     short loc_1000a041
push    offset word_10018078
lea     eax, [ebp+string1]
push    eax
call    ds:lstrcmpiw
test    eax, eax
jnz     short loc_1000a009
mov     esi, 4008h
jmp     short loc_1000a041
push    offset word_1001807c
lea     eax, [ebp+string1]
push    eax
call    ds:lstrcmpiw
test    eax, eax
jnz     short loc_1000a024
lea     esi, [eax+13h]
jmp     short loc_1000a041
push    offset word_10018080
lea     eax, [ebp+string1]
push    eax
call    ds:lstrcmpiw
test    eax, eax
jnz     loc_1000a437
lea     esi, [eax+11h]
mov     ecx, [ebp+var_2124]
call    sub_1000b270
mov     ecx, [ebp+var_2124]
lea     eax, [ebp+string1]
push    eax
call    sub_1000a950
test    eax, eax
js      loc_1000a43c
cmp     esi, 13h
ja      loc_1000a29e
jz      loc_1000a255
cmp     esi, 8
jz      loc_1000a21a
cmp     esi, 11h
jnz     loc_1000a41b
lea     ebx, [ebp+string1]
lea     ecx, [ebx+2]
mov     ax, [ebx]
add     ebx, 2
test    ax, ax
jnz     short loc_1000a090
sub     ebx, ecx
sar     ebx, 1
mov     [ebp+var_2130], ebx
mov     [ebp+pulout], ebx
test    bl, 1
jnz     loc_1000a151
mov     eax, ebx
cdq
sub     eax, edx
mov     esi, eax
lea     eax, [ebp+lpdata]
push    104h
push    0
sar     esi, 1
push    eax
mov     [ebp+var_2134], esi
call    memset
add     esp, 0ch
mov     [ebp+lpdata], 0
mov     [ebp+var_4], 3
mov     byte ptr [ebp+var_4], 4
cmp     esi, 100h
jbe     short loc_1000a136
push    esi
lea     ecx, [ebp+lpdata]
call    sub_10009950
mov     eax, [ebp+lpdata]
jmp     short loc_1000a142
mov     eax, offset loc_1000a110
retn
mov     ebx, [ebp+pulout]
mov     ecx, dword ptr [ebp+data]
mov     esi, [ebp+var_2134]
mov     eax, [ebp+lpdata]
mov     [ebp+var_2130], ebx
mov     [ebp+var_2124], ecx
jmp     short loc_1000a142
lea     eax, [ebp+var_211c]
mov     [ebp+lpdata], eax
test    eax, eax
jnz     short loc_1000a15b
lea     ecx, [ebp+lpdata]
call    sub_10009930
mov     eax, 80004005h
jmp     loc_1000a43c
push    esi
push    0
push    eax
call    memset
add     esp, 0ch
xor     edi, edi
test    ebx, ebx
jle     short loc_1000a1d7
mov     esi, [ebp+var_2130]
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
movzx   ebx, [ebp+edi*2+string1]
lea     eax, [ebx-30h]
cmp     eax, 36h
ja      short def_1000a197
movzx   eax, ds:byte_1000a474[eax]
jmp     ds:jpt_1000a197[eax*4]
sub     bl, 30h
jmp     short loc_1000a1af
sub     bl, 37h
jmp     short loc_1000a1af
sub     bl, 57h
jmp     short loc_1000a1af
xor     bl, bl
mov     eax, edi
mov     edx, edi
and     eax, 1
shr     edx, 1
add     edx, [ebp+lpdata]
mov     ecx, 4
shl     eax, 2
inc     edi
sub     ecx, eax
shl     bl, cl
or      [edx], bl
cmp     edi, esi
jl      short loc_1000a180
mov     esi, [ebp+var_2134]
mov     eax, [ebp+var_212c]
push    esi
push    [ebp+lpdata]
push    3
push    0
push    [ebp+lpvaluename]
push    dword ptr [eax]
call    ds:regsetvalueexw
mov     edi, eax
lea     eax, [ebp+var_211c]
cmp     [ebp+lpdata], eax
jz      loc_1000a40e
lea     ecx, [ebp+lpdata]
call    sub_10009930
jmp     loc_1000a40e
lea     ecx, [ebp+string1]
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_1000a223
sub     ecx, edx
sar     ecx, 1
lea     eax, ds:2[ecx*2]
push    eax
lea     eax, [ebp+string1]
push    eax
push    1
push    0
push    ebx
push    dword ptr [edi]
call    ds:regsetvalueexw
mov     edi, eax
jmp     loc_1000a40e
lea     eax, [ebp+pulout]
push    eax
push    0
push    0
lea     eax, [ebp+string1]
push    eax
call    ds:varui4fromstr
test    eax, eax
js      loc_1000a43c
mov     eax, [ebp+pulout]
push    4
mov     dword ptr [ebp+data], eax
lea     eax, [ebp+data]
push    eax
push    4
push    0
push    ebx
push    dword ptr [edi]
call    ds:regsetvalueexw
mov     edi, eax
jmp     loc_1000a40e
cmp     esi, 4008h
jnz     loc_1000a41b
lea     ecx, [ebp+string1]
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_1000a2b3
sub     ecx, edx
lea     eax, [ebp+lpdata]
sar     ecx, 1
push    104h
push    0
push    eax
lea     esi, [ecx+2]
call    memset
add     esp, 0ch
mov     [ebp+lpdata], 0
mov     eax, esi
mov     [ebp+var_4], 0
mov     ecx, 2
mov     byte ptr [ebp+var_4], 1
mul     ecx
test    edx, edx
ja      loc_1000a45a
jb      short loc_1000a30c
cmp     eax, 0ffffffffh
ja      loc_1000a45a
cmp     eax, 100h
jbe     short loc_1000a321
push    eax
lea     ecx, [ebp+lpdata]
call    sub_10009950
jmp     short loc_1000a341
lea     esi, [ebp+var_211c]
mov     [ebp+lpdata], esi
jmp     short loc_1000a347
mov     eax, offset loc_1000a335
retn
mov     eax, dword ptr [ebp+data]
mov     [ebp+var_2124], eax
mov     esi, [ebp+lpdata]
test    esi, esi
jz      loc_1000a3f4
cmp     [ebp+string1], 0
lea     edi, [ebp+string1]
jz      short loc_1000a394
nop
push    edi
call    ds:charnextw
movzx   ecx, word ptr [edi]
cmp     ecx, 5ch
jnz     short loc_1000a385
cmp     word ptr [eax], 30h
jnz     short loc_1000a385
xor     ecx, ecx
push    eax
mov     [esi], cx
call    ds:charnextw
mov     edi, eax
jmp     short loc_1000a38b
mov     [esi], cx
add     edi, 2
add     esi, 2
cmp     word ptr [edi], 0
jnz     short loc_1000a360
xor     eax, eax
mov     [esi], eax
mov     esi, [ebp+lpdata]
test    esi, esi
jnz     short loc_1000a3a7
lea     edi, [eax+0dh]
jmp     short loc_1000a3f9
xor     edi, edi
mov     edx, esi
nop     dword ptr [eax+eax+00h]
mov     ecx, edx
lea     ebx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_1000a3b5
sub     ecx, ebx
sar     ecx, 1
inc     ecx
lea     edx, [edx+ecx*2]
lea     edi, [edi+ecx*2]
cmp     ecx, 1
jnz     short loc_1000a3b0
mov     eax, [ebp+var_212c]
push    edi
push    esi
push    7
push    0
push    [ebp+lpvaluename]
push    dword ptr [eax]
call    ds:regsetvalueexw
mov     esi, [ebp+lpdata]
mov     edi, eax
jmp     short loc_1000a3f9
mov     edi, 0eh
lea     eax, [ebp+var_211c]
cmp     esi, eax
jz      short loc_1000a40e
lea     ecx, [ebp+lpdata]
call    sub_10009930
test    edi, edi
jz      short loc_1000a41b
mov     ecx, edi
call    sub_1000a940
jmp     short loc_1000a43c
push    [ebp+var_2138]
mov     ecx, [ebp+var_2124]
call    sub_1000a950
xor     ecx, ecx
test    eax, eax
cmovs   ecx, eax
mov     eax, ecx
jmp     short loc_1000a43c
mov     eax, 80020009h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    80070216h
call    sub_10008bb0
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
cmp     ecx, 50h
ja      short def_1000a4c2
movzx   eax, ds:byte_1000a4fc[ecx]
jmp     ds:jpt_1000a4c2[eax*4]
mov     eax, ecx
pop     ebp
retn
push    80004005h
call    sub_10008bb0
push    8007000eh
call    sub_10008bb0
push    80070057h
call    sub_10008bb0
push    ebp
mov     ebp, esp
mov     eax, 2004h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
cmp     word ptr [edi], 3dh
jnz     short loc_1000a5a3
push    edi
call    sub_1000a950
test    eax, eax
js      short loc_1000a5a5
mov     ecx, esi
call    sub_1000b270
lea     eax, [ebp+var_2004]
mov     ecx, esi
push    eax
call    sub_1000a950
test    eax, eax
js      short loc_1000a5a5
push    edi
mov     ecx, esi
call    sub_1000a950
test    eax, eax
js      short loc_1000a5a5
xor     eax, eax
mov     ecx, [ebp+var_4]
pop     edi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000a5c0
mov     eax, large fs:0
push    eax
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     edi, [ebx+8]
mov     eax, [ebp+hkey]
mov     ecx, [ebp+lpsubkey]
mov     esi, [ebp+samdesired]
mov     [ebp+var_1c], eax
mov     [ebp+var_18], ecx
mov     [ebp+phkresult], 0
test    edi, edi
jz      short loc_1000a663
cmp     dword ptr [edi], 0
jz      short loc_1000a656
push    offset modulename
call    ds:getmodulehandlew
test    eax, eax
jnz     short loc_1000a625
mov     eax, 1
jmp     short loc_1000a672
push    offset aregopenkeytran
push    eax
call    ds:getprocaddress
mov     [ebp+var_20], eax
test    eax, eax
jz      short loc_1000a65c
push    0
push    dword ptr [edi]
lea     ecx, [ebp+phkresult]
push    ecx
push    esi
push    0
push    [ebp+var_18]
mov     ecx, eax
push    [ebp+var_1c]
call    ds:___guard_check_icall_fptr
call    [ebp+var_20]
jmp     short loc_1000a672
cmp     dword ptr [edi+4], 0
jnz     short loc_1000a663
mov     eax, 1
jmp     short loc_1000a672
lea     edx, [ebp+phkresult]
push    edx
push    esi
push    0
push    ecx
push    eax
call    ds:regopenkeyexw
test    eax, eax
jnz     short loc_1000a697
mov     eax, [ebx]
xor     edx, edx
test    eax, eax
jz      short loc_1000a687
push    eax
call    ds:regclosekey
mov     edx, eax
mov     ecx, [ebp+phkresult]
and     esi, 300h
mov     [ebx], ecx
mov     eax, edx
mov     [ebx+4], esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 224h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+224h+var_4], eax
push    ebx
mov     ebx, [ebp+lpsubkey]
push    esi
push    edi
mov     edi, ecx
mov     [esp+230h+hkey], 0
lea     ecx, [esp+230h+hkey]
mov     [esp+230h+var_21c], 0
mov     [esp+230h+var_218], 0
mov     eax, [edi+4]
or      eax, 2001fh
push    eax
push    ebx
push    dword ptr [edi]
call    sub_1000a5c0
mov     esi, eax
test    esi, esi
jnz     loc_1000a7a8
lea     eax, [esp+230h+ftlastwritetime]
mov     [esp+230h+cchname], 100h
push    eax
push    esi
push    esi
push    esi
lea     eax, [esp+240h+cchname]
push    eax
lea     eax, [esp+244h+name]
push    eax
push    esi
push    [esp+24ch+hkey]
call    ds:regenumkeyexw
test    eax, eax
jnz     short loc_1000a77f
lea     eax, [esp+230h+name]
push    eax
lea     ecx, [esp+234h+hkey]
call    sub_1000a6c0
mov     esi, eax
test    esi, esi
jnz     short loc_1000a7d0
lea     eax, [esp+230h+ftlastwritetime]
mov     [esp+230h+cchname], 100h
push    eax
push    esi
push    esi
push    esi
lea     eax, [esp+240h+cchname]
push    eax
lea     eax, [esp+244h+name]
push    eax
push    esi
push    [esp+24ch+hkey]
call    ds:regenumkeyexw
test    eax, eax
jz      short loc_1000a742
mov     eax, [esp+230h+hkey]
test    eax, eax
jz      short loc_1000a796
push    eax
call    ds:regclosekey
mov     [esp+230h+hkey], 0
push    ebx
mov     ecx, edi
mov     [esp+234h+var_21c], 0
call    sub_1000a800
mov     esi, eax
mov     ecx, [esp+230h+hkey]
test    ecx, ecx
jz      short loc_1000a7b7
push    ecx
call    ds:regclosekey
mov     ecx, [esp+230h+var_4]
mov     eax, esi
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [esp+230h+hkey]
test    eax, eax
jz      short loc_1000a7b7
push    eax
jmp     short loc_1000a7b1
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jz      short loc_1000a7f6
push    eax
call    ds:regclosekey
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000a800
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     esi, [edi+8]
test    esi, esi
jz      short loc_1000a8a8
cmp     dword ptr [esi], 0
mov     ebx, [edi]
jz      short loc_1000a880
push    offset modulename
call    ds:getmodulehandlew
test    eax, eax
jz      short loc_1000a88f
push    offset aregdeletekeytr
push    eax
call    ds:getprocaddress
mov     edi, eax
test    edi, edi
jz      short loc_1000a88f
push    0
push    dword ptr [esi]
mov     ecx, edi
push    0
push    0
push    [ebp+lpsubkey]
push    ebx
call    ds:___guard_check_icall_fptr
call    edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
cmp     dword ptr [esi+4], 0
jz      short loc_1000a88f
push    [ebp+lpsubkey]
push    ebx
jmp     loc_1000a923
mov     eax, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
cmp     byte_1002081c, 0
jnz     short loc_1000a8ec
push    offset modulename
call    ds:getmodulehandlew
test    eax, eax
jz      short loc_1000a8dd
push    offset aregdeletekeyex
push    eax
call    ds:getprocaddress
mov     esi, eax
mov     byte_1002081c, 1
mov     dword_10020818, esi
jmp     short loc_1000a8f2
mov     esi, dword_10020818
mov     byte_1002081c, 1
jmp     short loc_1000a8f2
mov     esi, dword_10020818
test    esi, esi
jz      short loc_1000a91e
push    0
push    dword ptr [edi+4]
mov     ecx, esi
push    [ebp+lpsubkey]
push    dword ptr [edi]
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    [ebp+lpsubkey]
push    dword ptr [edi]
call    ds:regdeletekeyw
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
test    ecx, ecx
jg      short loc_1000a947
mov     eax, ecx
retn
movzx   eax, cx
or      eax, 80070000h
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     [ebp+var_4], edi
call    sub_1000b270
mov     ebx, [edi]
xor     edx, edx
movzx   eax, word ptr [ebx]
cmp     dx, ax
jz      loc_1000aacf
mov     esi, [ebp+arg_0]
mov     edx, 27h
mov     [ebp+var_8], esi
cmp     dx, ax
jnz     loc_1000aa50
push    ebx
call    ds:charnextw
mov     edx, eax
mov     ebx, edi
xor     edi, edi
mov     [ebx], edx
movzx   ecx, word ptr [edx]
mov     eax, ecx
cmp     di, cx
jz      loc_1000aa24
mov     edi, 27h
cmp     di, ax
jnz     short loc_1000a9ba
push    edx
call    ds:charnextw
cmp     di, [eax]
jnz     short loc_1000aa24
mov     edi, [ebx]
mov     edx, 27h
cmp     dx, [edi]
jnz     short loc_1000a9d1
push    edi
call    ds:charnextw
mov     edi, eax
mov     [ebx], edi
push    edi
call    ds:charnextw
mov     edx, eax
mov     [ebp+var_c], eax
sub     edx, edi
mov     [ebx], eax
mov     eax, [ebp+var_8]
sar     edx, 1
add     eax, 2000h
lea     ecx, [edx+1]
lea     ecx, [esi+ecx*2]
cmp     ecx, eax
jnb     loc_1000aacf
test    edx, edx
jle     short loc_1000aa13
sub     edi, esi
nop
mov     ax, [edi+esi]
mov     [esi], ax
add     esi, 2
sub     edx, 1
jnz     short loc_1000aa00
mov     edx, [ebx]
jmp     short loc_1000aa16
mov     edx, [ebp+var_c]
movzx   eax, word ptr [edx]
xor     edi, edi
mov     ecx, eax
cmp     di, ax
jz      short loc_1000aa24
jmp     short loc_1000a9a4
mov     eax, [ebx]
xor     ecx, ecx
cmp     cx, [eax]
jz      loc_1000aacf
xor     eax, eax
mov     [esi], ax
push    dword ptr [ebx]
call    ds:charnextw
pop     edi
mov     [ebx], eax
xor     eax, eax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
movzx   eax, ax
add     eax, 0fffffff7h
cmp     eax, 17h
ja      short def_1000aa62
movzx   eax, ds:byte_1000aae8[eax]
jmp     ds:jpt_1000aa62[eax*4]
push    ebx
call    ds:charnextw
mov     ecx, [ebp+var_8]
mov     [edi], eax
add     ecx, 2000h
mov     edi, eax
mov     [ebp+var_c], eax
sub     edi, ebx
sar     edi, 1
lea     edx, [edi+1]
lea     edx, [esi+edx*2]
cmp     edx, ecx
jnb     short loc_1000aacf
test    edi, edi
jle     short loc_1000aaad
sub     ebx, esi
mov     ax, [ebx+esi]
mov     [esi], ax
add     esi, 2
sub     edi, 1
jnz     short loc_1000aa94
mov     edi, [ebp+var_4]
mov     eax, [edi]
mov     [ebp+var_c], eax
jmp     short loc_1000aab0
mov     edi, [ebp+var_4]
movzx   eax, word ptr [eax]
xor     edx, edx
mov     ebx, [ebp+var_c]
mov     ecx, eax
cmp     dx, ax
jz      short loc_1000aac1
jmp     short loc_1000aa50
xor     eax, eax
pop     edi
mov     [esi], ax
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
pop     edi
pop     esi
mov     eax, 80020009h
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000ab00
mov     eax, large fs:0
push    eax
mov     eax, 2258h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, ecx
mov     [ebp+var_225c], eax
mov     ecx, [ebp+arg_4]
xorps   xmm0, xmm0
mov     edi, [ebp+lpstring1]
movq    qword ptr [ebp+var_2258], xmm0
mov     [ebp+var_2250], 0
mov     [ebp+var_2260], ecx
mov     [ebp+var_2258], 0
mov     [ebp+var_2258+4], 0
mov     [ebp+var_2250], 0
push    edi
mov     ecx, eax
mov     [ebp+var_4], 0
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      loc_1000b24b
cmp     word ptr [edi], 7dh
jz      loc_1000b238
nop     dword ptr [eax+00h]
push    offset adelete
push    edi
mov     [ebp+var_2264], 1
call    ds:lstrcmpiw
neg     eax
push    offset aforceremove
sbb     ebx, ebx
push    edi
inc     ebx
call    ds:lstrcmpiw
test    eax, eax
jz      short loc_1000abd3
test    ebx, ebx
jz      loc_1000acd5
mov     ecx, [ebp+var_225c]
push    edi
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      loc_1000b238
cmp     [ebp+arg_8], 0
jz      loc_1000acd5
movzx   ecx, word ptr [edi]
mov     eax, edi
mov     [ebp+var_2234], 0
mov     [ebp+var_222c], 0
test    cx, cx
jz      short loc_1000ac34
mov     edx, ecx
cmp     dx, 5ch
jz      short loc_1000ac2c
push    eax
call    ds:charnextw
movzx   ecx, word ptr [eax]
mov     edx, ecx
test    cx, cx
jnz     short loc_1000ac13
jmp     short loc_1000ac34
test    eax, eax
jnz     loc_1000b228
mov     esi, offset off_10019174
nop     dword ptr [eax+00000000h]
push    dword ptr [esi]
push    edi
call    ds:lstrcmpiw
test    eax, eax
jz      short loc_1000ac8e
add     esi, 4
cmp     esi, offset aregopenkeytran
jl      short loc_1000ac40
mov     eax, [ebp+var_2260]
lea     ecx, [ebp+var_2234]
push    edi
mov     [ebp+var_2234], eax
mov     [ebp+var_2230], 0
call    sub_1000a6c0
mov     [ebp+var_2234], 0
mov     [ebp+var_222c], 0
test    ebx, ebx
jz      short loc_1000accb
mov     ebx, [ebp+var_225c]
mov     ecx, ebx
push    edi
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      loc_1000b238
push    edi
mov     ecx, ebx
call    sub_1000a550
mov     esi, eax
test    esi, esi
js      loc_1000b238
mov     [ebp+var_2230], 0
jmp     loc_1000af48
mov     [ebp+var_2230], 0
push    offset anoremove
push    edi
call    ds:lstrcmpiw
mov     ebx, [ebp+var_225c]
test    eax, eax
jnz     short loc_1000ad03
push    edi
mov     ecx, ebx
mov     [ebp+var_2264], eax
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      loc_1000b238
push    offset aval
push    edi
call    ds:lstrcmpiw
test    eax, eax
jnz     loc_1000ae91
lea     eax, [ebp+valuename]
mov     ecx, ebx
push    eax
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      loc_1000b238
push    edi
mov     ecx, ebx
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      loc_1000b238
cmp     word ptr [edi], 3dh
jnz     loc_1000b228
cmp     [ebp+arg_8], 0
jz      loc_1000addf
xorps   xmm0, xmm0
mov     [ebp+var_2220], 0
movq    qword ptr [ebp+var_2228], xmm0
mov     eax, [ebp+var_2260]
mov     ecx, ebx
mov     byte ptr [ebp+var_4], 1
mov     [ebp+var_2228], eax
lea     eax, [ebp+valuename]
push    edi
push    eax
lea     eax, [ebp+var_2228]
mov     [ebp+var_2228+4], 0
push    eax
mov     [ebp+var_2220], 0
call    sub_10009f60
mov     esi, eax
mov     [ebp+var_2228], 0
mov     [ebp+var_2228+4], 0
mov     [ebp+var_2220], 0
test    esi, esi
js      loc_1000b238
mov     byte ptr [ebp+var_4], 0
mov     [ebp+var_2228+4], 0
jmp     loc_1000af48
cmp     [ebp+arg_c], 0
jnz     loc_1000ae7a
cmp     [ebp+var_2264], 0
jz      loc_1000ae7a
push    20006h
push    0
push    [ebp+var_2260]
lea     ecx, [ebp+hkey]
mov     [ebp+hkey], 0
mov     [ebp+var_223c], 0
mov     [ebp+var_2238], 0
call    sub_1000a5c0
test    eax, eax
jnz     loc_1000b20c
mov     ebx, [ebp+hkey]
lea     eax, [ebp+valuename]
push    eax
push    ebx
call    ds:regdeletevaluew
test    eax, eax
jz      short loc_1000ae55
cmp     eax, 2
jnz     loc_1000b1f6
test    ebx, ebx
jz      short loc_1000ae6a
push    ebx
call    ds:regclosekey
mov     [ebp+hkey], 0
mov     ebx, [ebp+var_225c]
mov     [ebp+var_223c], 0
push    edi
mov     ecx, ebx
call    sub_1000a550
mov     esi, eax
test    esi, esi
js      loc_1000b238
jmp     loc_1000b1ea
movzx   ecx, word ptr [edi]
mov     eax, edi
test    cx, cx
jz      short loc_1000aec1
mov     edx, ecx
nop     dword ptr [eax]
cmp     dx, 5ch
jz      short loc_1000aeb9
push    eax
call    ds:charnextw
movzx   ecx, word ptr [eax]
mov     edx, ecx
test    cx, cx
jnz     short loc_1000aea0
jmp     short loc_1000aec1
test    eax, eax
jnz     loc_1000b228
cmp     [ebp+arg_8], 0
jz      loc_1000afa3
mov     esi, [ebp+var_2260]
lea     ecx, [ebp+var_2258]
push    2001fh
push    edi
push    esi
call    sub_1000a5c0
test    eax, eax
jz      short loc_1000af15
push    20019h
push    edi
push    esi
lea     ecx, [ebp+var_2258]
call    sub_1000a5c0
test    eax, eax
jz      short loc_1000af15
sub     esp, 14h
lea     ecx, [ebp+var_2258]
push    edi
push    esi
call    sub_10009e30
test    eax, eax
jnz     loc_1000b22f
push    edi
mov     ecx, ebx
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      loc_1000b238
cmp     word ptr [edi], 3dh
jnz     short loc_1000af48
push    edi
push    0
lea     eax, [ebp+var_2258]
mov     ecx, ebx
push    eax
call    sub_10009f60
mov     esi, eax
test    esi, esi
js      loc_1000b238
cmp     word ptr [edi], 7bh
jnz     loc_1000b1ea
mov     ecx, edi
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_1000af57
sub     ecx, edx
sar     ecx, 1
cmp     ecx, 1
jnz     loc_1000b1ea
push    0
push    [ebp+arg_8]
mov     ecx, ebx
push    [ebp+var_2258]
push    edi
call    sub_1000ab00
mov     esi, eax
test    esi, esi
js      loc_1000b238
push    edi
mov     ecx, ebx
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      loc_1000b238
jmp     loc_1000b1ea
mov     esi, [ebp+arg_c]
test    esi, esi
jnz     short loc_1000afc5
push    20019h
push    edi
push    [ebp+var_2260]
lea     ecx, [ebp+var_2258]
call    sub_1000a5c0
mov     ebx, eax
jmp     short loc_1000afca
mov     ebx, 2
test    ebx, ebx
mov     ecx, 1
push    0ffffffffh
mov     eax, esi
cmovnz  eax, ecx
push    edi
mov     [ebp+csubkeys], eax
lea     eax, [ebp+destination]
push    104h
push    eax
call    ds:wcsncpy_s
push    eax
call    sub_1000a4b0
mov     ecx, [ebp+var_225c]
add     esp, 14h
push    edi
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      loc_1000b238
mov     ecx, [ebp+var_225c]
push    edi
call    sub_1000a550
mov     esi, eax
test    esi, esi
js      loc_1000b238
cmp     word ptr [edi], 7bh
jnz     short loc_1000b088
mov     ecx, edi
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_1000b031
sub     ecx, edx
sar     ecx, 1
cmp     ecx, 1
jnz     short loc_1000b088
push    [ebp+csubkeys]
mov     ecx, [ebp+var_225c]
push    0
push    [ebp+var_2258]
push    edi
call    sub_1000ab00
mov     esi, eax
test    esi, esi
jns     short loc_1000b072
cmp     [ebp+csubkeys], 0
jz      loc_1000b238
mov     ecx, [ebp+var_225c]
push    edi
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      loc_1000b238
cmp     ebx, 2
jz      loc_1000b1ea
test    ebx, ebx
jz      short loc_1000b0a6
cmp     [ebp+arg_c], 0
jnz     loc_1000b1ea
mov     ecx, ebx
jmp     loc_1000b231
cmp     [ebp+arg_c], 0
jz      loc_1000b138
push    0
push    0
push    0
push    0
push    0
push    0
push    0
lea     eax, [ebp+csubkeys]
mov     [ebp+csubkeys], 0
push    eax
push    0
push    0
push    0
push    [ebp+var_2258]
call    ds:regqueryinfokeyw
test    eax, eax
jnz     short loc_1000b138
cmp     [ebp+csubkeys], eax
jbe     short loc_1000b138
mov     ebx, offset off_10019174
push    dword ptr [ebx]
lea     eax, [ebp+destination]
push    eax
call    ds:lstrcmpiw
test    eax, eax
jz      loc_1000b1ea
add     ebx, 4
cmp     ebx, offset aregopenkeytran
jl      short loc_1000b0f2
cmp     [ebp+var_2264], 0
jz      loc_1000b1ea
lea     eax, [ebp+destination]
push    eax
lea     ecx, [ebp+var_2258]
call    sub_1000a6c0
jmp     loc_1000b1ea
push    0
push    0
push    0
push    0
push    0
push    0
push    0
lea     eax, [ebp+csubkeys]
mov     [ebp+csubkeys], 0
push    eax
push    0
push    0
push    0
push    [ebp+var_2258]
call    ds:regqueryinfokeyw
test    eax, eax
jz      short loc_1000b171
xor     ebx, ebx
jmp     short loc_1000b17d
xor     eax, eax
cmp     eax, [ebp+csubkeys]
sbb     ebx, ebx
neg     ebx
mov     ecx, [ebp+var_2258]
xor     eax, eax
test    ecx, ecx
jz      short loc_1000b198
push    ecx
call    ds:regclosekey
xor     ecx, ecx
mov     [ebp+var_2258], ecx
mov     [ebp+var_2258+4], 0
test    eax, eax
jnz     loc_1000b22f
cmp     [ebp+var_2264], eax
jz      short loc_1000b1ea
test    ebx, ebx
jnz     short loc_1000b1ea
mov     eax, [ebp+var_2260]
lea     ecx, [ebp+var_224c]
mov     [ebp+var_224c], eax
lea     eax, [ebp+destination]
push    eax
mov     [ebp+var_2248], ebx
mov     [ebp+var_2244], ebx
call    sub_1000a800
mov     [ebp+var_224c], ebx
test    eax, eax
jnz     short loc_1000b22f
cmp     word ptr [edi], 7dh
jnz     loc_1000aba0
jmp     short loc_1000b238
mov     ecx, eax
call    sub_1000a940
mov     esi, eax
test    ebx, ebx
jz      short loc_1000b238
push    ebx
call    ds:regclosekey
jmp     short loc_1000b238
mov     ecx, eax
call    sub_1000a940
mov     esi, eax
mov     eax, [ebp+hkey]
test    eax, eax
jz      short loc_1000b238
push    eax
call    ds:regclosekey
jmp     short loc_1000b238
mov     esi, 80020009h
jmp     short loc_1000b238
mov     ecx, eax
call    sub_1000a940
mov     esi, eax
mov     eax, [ebp+var_2258]
test    eax, eax
jz      short loc_1000b249
push    eax
call    ds:regclosekey
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
push    esi
mov     esi, ecx
mov     edx, [esi]
movzx   eax, word ptr [edx]
add     eax, 0fffffff7h
cmp     eax, 17h
ja      short def_1000b287
movzx   eax, ds:byte_1000b2a4[eax]
jmp     ds:jpt_1000b287[eax*4]
push    edx
call    ds:charnextw
mov     [esi], eax
jmp     short loc_1000b273
pop     esi
retn
push    ebp
mov     ebp, esp
mov     eax, 2014h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+str]
push    ebx
push    esi
mov     ebx, ecx
mov     [ebp+pv], 0
push    edi
lea     ecx, [ebp+pv]
push    ecx
push    eax
mov     ecx, ebx
call    sub_10009a60
mov     esi, eax
test    esi, esi
js      short loc_1000b363
mov     eax, [ebp+pv]
xor     ecx, ecx
mov     [ebx], eax
cmp     cx, [eax]
jz      short loc_1000b355
nop     dword ptr [eax]
lea     eax, [ebp+string1]
mov     ecx, ebx
push    eax
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      short loc_1000b355
xor     edi, edi
xor     esi, esi
nop     dword ptr [eax+eax+00000000h]
push    ds:off_10019010[esi]
lea     eax, [ebp+string1]
push    eax
call    ds:lstrcmpiw
test    eax, eax
jz      short loc_1000b376
add     esi, 8
inc     edi
cmp     esi, 70h
jb      short loc_1000b330
mov     esi, 80020009h
push    [ebp+pv]
call    ds:cotaskmemfree
mov     eax, esi
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     edi, ds:dword_10019014[edi*8]
test    edi, edi
jz      short loc_1000b350
lea     eax, [ebp+string1]
mov     ecx, ebx
push    eax
call    sub_1000a950
mov     esi, eax
test    esi, esi
js      short loc_1000b355
mov     eax, 7bh
cmp     ax, [ebp+string1]
jnz     short loc_1000b350
mov     ecx, [ebp+arg_4]
push    0
test    ecx, ecx
jz      short loc_1000b3ea
mov     eax, [ebx]
push    ecx
mov     [ebp+var_2010], eax
mov     ecx, ebx
push    edi
lea     eax, [ebp+string1]
push    eax
call    sub_1000ab00
mov     esi, eax
test    esi, esi
jns     short loc_1000b405
mov     eax, [ebp+var_2010]
mov     ecx, ebx
push    0
push    0
mov     [ebx], eax
lea     eax, [ebp+string1]
push    edi
push    eax
call    sub_1000ab00
jmp     loc_1000b355
push    0
push    edi
lea     eax, [ebp+string1]
mov     ecx, ebx
push    eax
call    sub_1000ab00
mov     esi, eax
test    esi, esi
js      loc_1000b355
mov     ecx, ebx
call    sub_1000b270
mov     eax, [ebx]
xor     ecx, ecx
cmp     cx, [eax]
jnz     loc_1000b310
jmp     loc_1000b355
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000b420
mov     eax, large fs:0
push    eax
sub     esp, 42ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     eax, [ebp+arg_8]
mov     edi, [ebp+lplibfilename]
mov     ebx, [ebp+lpname]
mov     [ebp+lptype], eax
mov     [ebp+var_20], 0
push    404h
lea     eax, [ebp+lpwidecharstr]
mov     [ebp+var_4], 0
push    0
push    eax
mov     [ebp+var_18], ecx
mov     [ebp+var_1c], 0
call    memset
add     esp, 0ch
mov     [ebp+lpwidecharstr], 0
push    60h
push    0
push    edi
mov     byte ptr [ebp+var_4], 1
call    ds:loadlibraryexw
mov     esi, eax
mov     [ebp+var_430], esi
test    esi, esi
jnz     short loc_1000b4d5
push    2
push    eax
push    edi
call    ds:loadlibraryexw
mov     esi, eax
mov     [ebp+var_430], eax
test    esi, esi
jnz     short loc_1000b4d5
call    sub_10009980
mov     edi, eax
jmp     loc_1000b5ec
push    [ebp+lptype]
push    ebx
push    esi
call    ds:findresourcew
mov     edi, eax
test    edi, edi
jnz     short loc_1000b4f3
call    sub_10009980
jmp     loc_1000b5df
push    edi
push    esi
call    ds:loadresource
mov     ebx, eax
mov     [ebp+lptype], ebx
test    ebx, ebx
jnz     short loc_1000b511
call    sub_10009980
jmp     loc_1000b5df
push    edi
push    esi
call    ds:sizeofresource
mov     edi, eax
mov     [ebp+var_434], edi
lea     eax, [edi+1]
cmp     eax, edi
jnb     short loc_1000b532
mov     edi, 8007000eh
jmp     loc_1000b5e1
mov     ecx, 2
mov     byte ptr [ebp+var_4], 2
mul     ecx
test    edx, edx
ja      loc_1000b630
jb      short loc_1000b550
cmp     eax, 0ffffffffh
ja      loc_1000b630
cmp     eax, 400h
jbe     short loc_1000b565
push    eax
lea     ecx, [ebp+lpwidecharstr]
call    sub_10009950
jmp     short loc_1000b58b
lea     eax, [ebp+var_424]
mov     [ebp+lpwidecharstr], eax
jmp     short loc_1000b58b
mov     eax, offset loc_1000b579
retn
mov     esi, [ebp+var_430]
mov     ebx, [ebp+lptype]
mov     edi, [ebp+var_434]
mov     [ebp+var_4], 1
cmp     [ebp+lpwidecharstr], 0
jnz     short loc_1000b5a2
mov     edi, 8007000eh
jmp     short loc_1000b5e1
push    edi
push    [ebp+lpwidecharstr]
push    edi
push    ebx
push    0
push    3
call    ds:multibytetowidechar
mov     ecx, eax
test    ecx, ecx
jnz     short loc_1000b5c2
call    sub_10009980
jmp     short loc_1000b5df
mov     eax, [ebp+lpwidecharstr]
xor     edx, edx
push    [ebp+arg_c]
mov     [eax+ecx*2], dx
lea     ecx, [ebp+var_1c]
push    [ebp+lpwidecharstr]
call    sub_1000b2c0
mov     edi, eax
test    esi, esi
jz      short loc_1000b5ec
push    esi
call    ds:freelibrary
lea     eax, [ebp+var_424]
cmp     [ebp+lpwidecharstr], eax
jz      short loc_1000b610
lea     ecx, [ebp+lpwidecharstr]
call    sub_10009930
nop     word ptr [eax+eax+00000000h]
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
push    80070216h
call    sub_10008bb0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000b640
mov     eax, large fs:0
push    eax
sub     esp, 0a4ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, edx
mov     [ebp+var_a58], ebx
mov     esi, [ebp+arg_4]
mov     edi, dword_10020788
mov     [ebp+var_a44], 0
mov     [ebp+var_a54], offset ??_7cregobject@atl@@6b@
mov     [ebp+block], 0
mov     [ebp+var_a4c], 0
mov     [ebp+var_a48], 0
test    esi, esi
jz      short loc_1000b6e2
mov     eax, [esi]
test    eax, eax
jz      short loc_1000b6e2
nop     dword ptr [eax+eax+00h]
mov     ecx, [esi+4]
test    eax, eax
jz      short loc_1000b6d8
test    ecx, ecx
jz      short loc_1000b6d8
push    ecx
push    eax
lea     ecx, [ebp+block]
call    sub_100096e0
mov     eax, [esi+8]
add     esi, 8
test    eax, eax
jnz     short loc_1000b6c0
mov     eax, [edi]
mov     esi, [eax+14h]
lea     eax, [ebp+var_a54]
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     esi, eax
test    esi, esi
js      loc_1000b9c5
mov     edi, hmodule
lea     eax, [ebp+filename]
push    104h
push    eax
push    edi
call    ds:getmodulefilenamew
test    eax, eax
jnz     short loc_1000b72b
call    sub_10009980
jmp     loc_1000b9c3
cmp     eax, 104h
jnz     short loc_1000b78e
lea     ecx, [ebp+block]
mov     [ebp+var_a54], offset ??_7cregobject@atl@@6b@
call    sub_10009620
lea     ecx, [ebp+block]
call    sub_10009620
mov     eax, [ebp+block]
test    eax, eax
jz      short loc_1000b770
push    eax
call    ds:__imp_free
add     esp, 4
mov     [ebp+block], 0
mov     eax, [ebp+var_a4c]
test    eax, eax
jz      short loc_1000b784
push    eax
call    ds:__imp_free
add     esp, 4
mov     eax, 8007007ah
jmp     loc_1000ba19
xor     eax, eax
lea     esi, [ebp+filename]
lea     ecx, [ebp+src]
lea     ebx, [eax+27h]
nop
movzx   edx, word ptr [esi]
test    dx, dx
jz      short loc_1000b7cb
mov     [ecx], dx
add     ecx, 2
cmp     edx, ebx
jnz     short loc_1000b7c0
inc     eax
cmp     eax, 207h
jnb     short loc_1000b7c0
mov     [ecx], bx
add     ecx, 2
inc     eax
add     esi, 2
cmp     eax, 207h
jb      short loc_1000b7a0
mov     ebx, [ebp+var_a58]
xor     eax, eax
mov     [ecx], ax
test    edi, edi
jz      short loc_1000b7f0
push    eax
call    ds:getmodulehandlew
cmp     edi, eax
jz      short loc_1000b7f0
lea     eax, [ebp+src]
jmp     loc_1000b8da
mov     esi, 22h
lea     ecx, [ebp+src]
mov     [ebp+var_630], si
lea     edx, [ecx+2]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_1000b805
sub     ecx, edx
mov     edx, 416h
sar     ecx, 1
lea     eax, ds:2[ecx*2]
push    eax
lea     eax, [ebp+src]
push    eax
lea     ecx, [ebp+var_62e]
call    sub_10005400
add     esp, 8
test    eax, eax
jz      short loc_1000b896
lea     ecx, [ebp+block]
mov     [ebp+var_a54], offset ??_7cregobject@atl@@6b@
call    sub_10009620
lea     ecx, [ebp+block]
call    sub_10009620
mov     eax, [ebp+block]
test    eax, eax
jz      short loc_1000b878
push    eax
call    ds:__imp_free
add     esp, 4
mov     [ebp+block], 0
mov     eax, [ebp+var_a4c]
test    eax, eax
jz      short loc_1000b88c
push    eax
call    ds:__imp_free
add     esp, 4
mov     eax, 80004005h
jmp     loc_1000ba19
lea     ecx, [ebp+var_630]
lea     edx, [ecx+2]
nop
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_1000b8a0
sub     ecx, edx
sar     ecx, 1
mov     [ebp+ecx*2+var_630], si
lea     ecx, ds:2[ecx*2]
cmp     ecx, 418h
jnb     loc_1000ba37
xor     eax, eax
mov     [ebp+ecx+var_630], ax
lea     eax, [ebp+var_630]
push    eax
push    offset amodule
lea     ecx, [ebp+block]
call    sub_100096e0
mov     esi, eax
lea     ecx, [ebp+block]
neg     esi
sbb     esi, esi
and     esi, 7ff8fff2h
add     esi, 8007000eh
test    esi, esi
jns     short loc_1000b935
mov     [ebp+var_a54], offset ??_7cregobject@atl@@6b@
call    sub_10009620
lea     ecx, [ebp+block]
call    sub_10009620
mov     eax, [ebp+block]
test    eax, eax
jz      loc_1000ba03
push    eax
jmp     loc_1000b9f0
lea     eax, [ebp+src]
push    eax
push    offset amoduleraw
call    sub_100096e0
xor     ecx, ecx
mov     esi, 8007000eh
test    eax, eax
cmovnz  esi, ecx
jnz     short loc_1000b99f
lea     ecx, [ebp+block]
mov     [ebp+var_a54], offset ??_7cregobject@atl@@6b@
call    sub_10009620
lea     ecx, [ebp+block]
call    sub_10009620
mov     eax, [ebp+block]
test    eax, eax
jz      short loc_1000b992
push    eax
call    ds:__imp_free
add     esp, 4
mov     [ebp+block], 0
mov     ecx, [ebp+var_a4c]
test    ecx, ecx
jz      short loc_1000ba17
push    ecx
jmp     short loc_1000ba0e
xor     eax, eax
lea     ecx, [ebp+var_a54]
cmp     [ebp+arg_0], eax
setnz   al
push    eax
push    offset aregistry
movzx   eax, bx
push    eax
lea     eax, [ebp+filename]
push    eax
call    sub_1000b420
mov     esi, eax
lea     ecx, [ebp+block]
mov     [ebp+var_a54], offset ??_7cregobject@atl@@6b@
call    sub_10009620
lea     ecx, [ebp+block]
call    sub_10009620
mov     ecx, [ebp+block]
test    ecx, ecx
jz      short loc_1000ba03
push    ecx
call    ds:__imp_free
add     esp, 4
mov     [ebp+block], 0
mov     eax, [ebp+var_a4c]
test    eax, eax
jz      short loc_1000ba17
push    eax
call    ds:__imp_free
add     esp, 4
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
call    ___report_rangecheckfailure
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000ba40
mov     eax, large fs:0
push    eax
sub     esp, 44h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, edx
mov     edi, ecx
mov     dword ptr [ebx], 0
mov     [ebp+var_14], 0
lea     eax, [ebp+var_14]
mov     [ebp+var_4], 0
push    eax
push    offset dword_10019210
call    ds:?createinstance_transferqueueitem@transferqueue@@yajabu_guid@@papax@z
mov     esi, eax
add     esp, 8
test    esi, esi
jns     short loc_1000baaa
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [edi]
mov     esi, [eax+0ch]
lea     eax, [ebp+var_2c]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bad3
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [ebp+var_14]
push    [ebp+var_2c]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+10h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bafe
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [edi]
mov     esi, [eax+20h]
lea     eax, [ebp+var_50]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bb27
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [ebp+var_14]
push    [ebp+var_4c]
push    [ebp+var_50]
mov     ecx, [eax]
push    eax
mov     esi, [ecx+1ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bb55
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [edi]
mov     esi, [eax+28h]
lea     eax, [ebp+var_30]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bb7e
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [ebp+var_14]
push    [ebp+var_30]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+24h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bba9
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [edi]
mov     esi, [eax+78h]
lea     eax, [ebp+var_34]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bbd2
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [ebp+var_14]
push    [ebp+var_34]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+7ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bbfd
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [edi]
mov     esi, [eax+80h]
lea     eax, [ebp+var_38]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bc29
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [ebp+var_14]
push    [ebp+var_38]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+84h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bc57
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [edi]
mov     esi, [eax+88h]
lea     eax, [ebp+var_3c]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bc83
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [ebp+var_14]
push    [ebp+var_3c]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+8ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bcb1
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [edi]
mov     esi, [eax+9ch]
lea     eax, [ebp+var_40]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bcdd
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [ebp+var_14]
push    [ebp+var_40]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+0a0h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bd0b
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [edi]
mov     esi, [eax+0a4h]
lea     eax, [ebp+var_44]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bd37
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [ebp+var_14]
push    [ebp+var_44]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+0a8h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bd65
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [edi]
mov     esi, [eax+0cch]
lea     eax, [ebp+var_48]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bd91
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     eax, [ebp+var_14]
push    [ebp+var_48]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+0d0h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bdbf
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bffd
mov     [ebp+var_28], 0
mov     byte ptr [ebp+var_4], 1
mov     eax, [edi]
mov     esi, [eax+2ch]
lea     eax, [ebp+var_28]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bdf3
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bfef
mov     [ebp+var_24], 0
mov     byte ptr [ebp+var_4], 2
mov     eax, [ebp+var_14]
mov     ecx, [eax]
mov     esi, [ecx+2ch]
lea     ecx, [ebp+var_24]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000be2a
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bfe1
mov     eax, [ebp+var_24]
push    [ebp+var_28]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+28h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000be55
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bfe1
mov     [ebp+var_20], 0
mov     byte ptr [ebp+var_4], 3
mov     eax, [edi]
mov     esi, [eax+30h]
lea     eax, [ebp+var_20]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000be89
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bfd3
cmp     [ebp+var_20], 0
jz      short loc_1000bf02
mov     [ebp+ppv], 0
mov     byte ptr [ebp+var_4], 4
mov     eax, [ebp+var_14]
mov     ecx, [eax]
mov     esi, [ecx+30h]
lea     ecx, [ebp+ppv]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_1000bed3
mov     eax, [ebp+ppv]
push    [ebp+var_20]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+28h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bef4
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
cmp     [ebp+ppv], 0
jz      loc_1000bfd3
lea     ecx, [ebp+ppv]
call    sub_100024b0
jmp     loc_1000bfd3
cmp     [ebp+ppv], 0
jz      short loc_1000bf02
lea     ecx, [ebp+ppv]
call    sub_100024b0
mov     [ebp+var_1c], 0
mov     byte ptr [ebp+var_4], 5
mov     eax, [edi]
mov     esi, [eax+90h]
lea     eax, [ebp+var_1c]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bf39
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_1000bfc5
cmp     [ebp+var_1c], 0
jz      short loc_1000bfb7
mov     [ebp+ppv], 0
lea     eax, [ebp+ppv]
mov     byte ptr [ebp+var_4], 6
push    eax
push    offset stru_10019200
call    ds:pscreatememorypropertystore
mov     esi, eax
test    esi, esi
js      short loc_1000bf8f
mov     edx, [ebp+ppv]
mov     ecx, [ebp+var_1c]
call    sub_10011890
mov     esi, eax
test    esi, esi
js      short loc_1000bf8f
mov     eax, [ebp+var_14]
push    [ebp+ppv]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+94h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000bfa9
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
cmp     [ebp+ppv], 0
jz      short loc_1000bfc5
lea     ecx, [ebp+ppv]
call    sub_100024b0
jmp     short loc_1000bfc5
cmp     [ebp+ppv], 0
jz      short loc_1000bfb7
lea     ecx, [ebp+ppv]
call    sub_100024b0
mov     eax, [ebp+var_14]
xor     esi, esi
mov     [ebp+var_14], 0
mov     [ebx], eax
cmp     [ebp+var_1c], 0
jz      short loc_1000bfd3
lea     ecx, [ebp+var_1c]
call    sub_100024b0
cmp     [ebp+var_20], 0
jz      short loc_1000bfe1
lea     ecx, [ebp+var_20]
call    sub_100024b0
cmp     [ebp+var_24], 0
jz      short loc_1000bfef
lea     ecx, [ebp+var_24]
call    sub_100024b0
cmp     [ebp+var_28], 0
jz      short loc_1000bffd
lea     ecx, [ebp+var_28]
call    sub_100024b0
cmp     [ebp+var_14], 0
jz      short loc_1000c00b
lea     ecx, [ebp+var_14]
call    sub_100024b0
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000c030
mov     eax, large fs:0
push    eax
sub     esp, 58h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, ecx
mov     [ebp+var_58], eax
mov     edi, [ebp+arg_4]
push    edi
mov     [ebp+var_5c], edi
call    sub_1000c520
mov     esi, eax
test    esi, esi
jns     short loc_1000c082
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     loc_1000c502
mov     [ebp+var_28], 0
mov     [ebp+var_4], 0
mov     eax, [edi]
mov     esi, [eax+14h]
lea     eax, [ebp+var_28]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000c0b9
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_1000c4e2
mov     [ebp+var_24], 0
mov     byte ptr [ebp+var_4], 2
mov     eax, [ebp+var_28]
mov     ecx, [eax]
mov     esi, [ecx]
lea     ecx, [ebp+var_24]
push    ecx
push    offset dword_10019210
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000c0f4
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_1000c4c7
mov     [ebp+punk], 0
mov     byte ptr [ebp+var_4], 5
lea     edx, [ebp+punk]
mov     ecx, [ebp+var_24]
call    sub_1000ba40
mov     edi, eax
test    edi, edi
jns     short loc_1000c11f
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_1000c4ac
mov     ecx, [ebp+var_5c]
mov     eax, [ecx]
mov     esi, [eax+1ch]
lea     eax, [ebp+var_2c]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000c14b
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_1000c4ac
cmp     [ebp+var_2c], 0
jz      loc_1000c1eb
mov     [ebp+var_14], 0
mov     byte ptr [ebp+var_4], 0ch
mov     eax, [ebp+punk]
mov     ecx, [eax]
mov     esi, [ecx+98h]
lea     ecx, [ebp+var_14]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      short loc_1000c1b6
mov     eax, 0bh
mov     word ptr [ebp+pvar.anonymous_0], ax
mov     eax, [ebp+var_2c]
neg     eax
sbb     eax, eax
mov     word ptr [ebp+pvar.anonymous_0+8], ax
mov     eax, [ebp+var_14]
mov     ecx, [eax]
mov     esi, [ecx+18h]
lea     ecx, [ebp+pvar]
push    ecx
push    offset dword_10018214
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000c1cc
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 11h
mov     eax, [ebp+var_14]
jmp     loc_1000c498
mov     byte ptr [ebp+var_4], 15h
mov     eax, [ebp+var_14]
test    eax, eax
jz      short loc_1000c1e7
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     byte ptr [ebp+var_4], 5
mov     ecx, [ebp+var_5c]
mov     eax, [ecx]
mov     esi, [eax+24h]
lea     eax, [ebp+var_40]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000c217
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_1000c4ac
cmp     [ebp+var_40], 0
mov     edi, 0dh
jz      loc_1000c362
mov     ecx, [ebp+var_58]
mov     byte ptr [ebp+var_4], 19h
mov     [ebp+var_14], 0
mov     ecx, [ecx+8]
mov     eax, [ecx]
mov     esi, [eax+14h]
lea     eax, [ebp+pvar]
push    eax
push    offset dword_10018200
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
js      loc_1000c347
mov     ax, word ptr [ebp+pvar.anonymous_0]
mov     esi, 80004002h
mov     [ebp+var_14], 0
cmp     di, ax
jz      short loc_1000c273
cmp     ax, 42h
jnz     short loc_1000c290
mov     ecx, dword ptr [ebp+pvar.anonymous_0+8]
mov     eax, [ecx]
mov     esi, [eax]
lea     eax, [ebp+var_14]
push    eax
push    offset dword_10019210
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
lea     eax, [ebp+pvar]
push    eax
call    ds:propvariantclear
test    esi, esi
js      loc_1000c347
mov     eax, [ebp+var_14]
mov     ecx, [ebp+punk]
mov     [ebp+var_60], eax
mov     [ebp+var_64], ecx
mov     [ebp+var_18], 0
mov     byte ptr [ebp+var_4], 1ah
mov     eax, [ecx]
mov     esi, [eax+48h]
lea     eax, [ebp+var_18]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000c2df
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_1000c31f
mov     eax, [ebp+var_18]
push    [ebp+var_60]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+1ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000c307
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_1000c31f
mov     ecx, [ebp+var_60]
push    [ebp+var_64]
push    ecx
mov     eax, [ecx]
mov     esi, [eax+5ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
cmp     [ebp+var_18], 0
jz      short loc_1000c32d
lea     ecx, [ebp+var_18]
call    sub_100024b0
test    edi, edi
jns     short loc_1000c347
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 1bh
mov     eax, [ebp+var_14]
jmp     loc_1000c498
mov     byte ptr [ebp+var_4], 1fh
mov     eax, [ebp+var_14]
test    eax, eax
jz      short loc_1000c362
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_20], 0
mov     eax, [ebp+var_58]
mov     byte ptr [ebp+var_4], 20h
mov     ecx, [eax+4]
mov     eax, [ecx]
mov     esi, [eax+90h]
lea     eax, [ebp+var_20]
push    eax
push    [ebp+punk]
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      loc_1000c438
mov     ecx, [ebp+var_5c]
mov     eax, [ecx]
mov     esi, [eax+0ch]
lea     eax, [ebp+var_54]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      loc_1000c438
mov     eax, [ebp+var_20]
sub     esp, 10h
movups  xmm0, [ebp+var_54]
mov     ecx, [eax]
mov     esi, [ecx+14h]
mov     ecx, esp
push    eax
movups  xmmword ptr [ecx], xmm0
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      short loc_1000c438
mov     ecx, [ebp+var_5c]
mov     eax, [ecx]
mov     esi, [eax+2ch]
lea     eax, [ebp+var_44]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      short loc_1000c438
mov     eax, [ebp+var_44]
test    eax, eax
jnz     short loc_1000c411
mov     eax, [ebp+var_58]
mov     ecx, [eax+4]
mov     eax, [ecx]
mov     esi, [eax+0b0h]
jmp     short loc_1000c424
cmp     eax, 1
jnz     short loc_1000c444
mov     eax, [ebp+var_58]
mov     ecx, [eax+4]
mov     eax, [ecx]
mov     esi, [eax+0b4h]
push    [ebp+var_20]
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000c444
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_1000c491
mov     eax, [ebp+var_58]
xorps   xmm0, xmm0
movups  xmmword ptr [ebp+pvar.anonymous_0], xmm0
mov     edi, [eax+8]
mov     eax, [ebp+punk]
test    eax, eax
jz      short loc_1000c46c
push    eax
lea     eax, [ebp+pvar.anonymous_0+8]
mov     ecx, 0dh
push    eax
mov     word ptr [ebp+pvar.anonymous_0], cx
call    ds:iunknown_set
mov     eax, [edi]
mov     esi, [eax+18h]
lea     eax, [ebp+pvar]
push    eax
push    offset dword_10018200
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
lea     eax, [ebp+pvar]
push    eax
call    ds:propvariantclear
mov     byte ptr [ebp+var_4], 39h
mov     eax, [ebp+var_20]
test    eax, eax
jz      short loc_1000c4ac
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     byte ptr [ebp+var_4], 3ah
mov     eax, [ebp+punk]
test    eax, eax
jz      short loc_1000c4c7
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     byte ptr [ebp+var_4], 3bh
mov     eax, [ebp+var_24]
test    eax, eax
jz      short loc_1000c4e2
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 3ch
mov     ecx, [ebp+var_28]
test    ecx, ecx
jz      short loc_1000c500
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000c520
mov     eax, large fs:0
push    eax
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     esi, [eax+0ch]
lea     eax, [ebp+var_24]
push    eax
push    edx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000c578
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     short loc_1000c5f7
mov     [ebp+ppv], 0
mov     [ebp+var_4], 0
mov     ecx, [ebx]
mov     eax, [ecx]
mov     esi, [eax+0ch]
lea     eax, [ebp+ppv]
push    eax
push    offset stru_10019200
lea     eax, [ebp+var_24]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      short loc_1000c615
mov     ecx, [ebx+8]
mov     eax, [ebp+ppv]
cmp     ecx, eax
jz      short loc_1000c5da
mov     edx, eax
xor     eax, eax
mov     [ebp+ppv], eax
mov     [ebx+8], edx
mov     byte ptr [ebp+var_4], 1
test    ecx, ecx
jz      short loc_1000c5da
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp+ppv]
mov     [ebp+var_4], 5
test    eax, eax
jz      short loc_1000c5f5
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
cmp     edi, 80070490h
jnz     short loc_1000c5d7
lea     eax, [ebp+ppv]
push    eax
push    offset stru_10019200
call    ds:pscreatememorypropertystore
mov     edi, eax
test    edi, edi
js      short loc_1000c651
mov     ecx, [ebx]
push    [ebp+ppv]
mov     eax, [ecx]
mov     esi, [eax+10h]
lea     eax, [ebp+var_24]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000c660
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_1000c5d7
mov     ecx, [ebx+8]
mov     eax, [ebp+ppv]
cmp     ecx, eax
jz      short loc_1000c68f
mov     edx, eax
xor     eax, eax
mov     [ebp+ppv], eax
mov     [ebx+8], edx
mov     byte ptr [ebp+var_4], 4
test    ecx, ecx
jz      short loc_1000c68f
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp+ppv]
xor     edi, edi
jmp     loc_1000c5da
cmp     dword ptr [ecx], 0
jnz     sub_100024b0
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, dword ptr [ebp+arglist]
mov     ebx, ecx
push    edi
push    [ebp+arg_0]
call    sub_10010e70
test    eax, eax
js      loc_1000c790
push    ecx
lea     eax, [ebp+buffer]
mov     ecx, ebx
push    eax
call    sub_100110e0
test    eax, eax
js      loc_1000c790
push    esi
push    offset ad
push    [ebp+buffer]
call    sub_10010cc0
add     esp, 0ch
lea     edi, [eax-1]
neg     edi
sbb     edi, edi
and     edi, 80070057h
cmp     byte ptr [ebx+0fh], 0
jz      short loc_1000c762
mov     ecx, [ebx]
mov     eax, [ecx]
mov     esi, [eax+18h]
lea     eax, [ebp+var_8]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1000c738
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     short loc_1000c76b
cmp     [ebp+var_8], 0fh
jz      short loc_1000c762
mov     ecx, [ebp+4]
mov     esi, 80004005h
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, ebx
call    sub_100111d0
mov     esi, eax
test    esi, esi
jns     short loc_1000c78e
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, edi
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+3ch]
mov     eax, [ebp+arg_4]
mov     [eax], ecx
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     [ecx+3ch], eax
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+40h]
mov     eax, [ebp+arg_4]
mov     [eax], ecx
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     [ecx+40h], eax
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     ecx, [eax+44h]
mov     eax, [ebp+arg_4]
mov     [eax], ecx
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     [ecx+44h], eax
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000c870
mov     eax, large fs:0
push    eax
sub     esp, 8
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ecx, [ebp+arg_4]
mov     ebx, [ebp+arg_0]
mov     [ebp+var_14], 0
mov     eax, [ecx]
mov     esi, [eax]
lea     eax, [ebp+var_14]
push    eax
push    offset dword_10019210
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000c8d5
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp+var_14]
jmp     short loc_1000c909
mov     ecx, [ebx+38h]
mov     eax, [ebp+var_14]
cmp     ecx, eax
jz      short loc_1000c907
mov     edx, eax
xor     eax, eax
mov     [ebp+var_14], eax
mov     [ebx+38h], edx
mov     [ebp+var_4], 1
test    ecx, ecx
jz      short loc_1000c907
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp+var_14]
xor     edi, edi
mov     [ebp+var_4], 2
test    eax, eax
jz      short loc_1000c924
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000c950
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edx, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
mov     [ebp+var_4], 0
test    ecx, ecx
jnz     short loc_1000c99b
mov     eax, 80004003h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [edx+38h]
mov     [ecx], eax
mov     ecx, [edx+38h]
test    ecx, ecx
jz      short loc_1000c9b7
mov     eax, [ecx]
push    ecx
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000c9d0
mov     eax, large fs:0
push    eax
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, [ebp+arg_0]
mov     ebx, [ebp+arg_4]
mov     [ebp+var_4], 0
mov     ecx, [edi+34h]
test    ecx, ecx
jz      short loc_1000ca26
mov     dword ptr [edi+34h], 0
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_24]
push    ebx
mov     [ebp+var_1c], 0
mov     [ebp+var_24], 0
mov     [ebp+var_20], 0
mov     [ebp+var_18], 101h
call    sub_10010d80
mov     esi, eax
test    esi, esi
jns     short loc_1000ca69
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     loc_1000cb3c
lea     eax, [edi+24h]
push    eax
push    ecx
lea     ecx, [ebp+var_24]
call    sub_10001440
lea     eax, [ebp+arglist]
push    eax
push    ecx
lea     ecx, [ebp+var_24]
call    sub_10001250
lea     eax, [ebp+var_14]
mov     [ebp+var_14], 0
push    eax
push    offset dword_10019210
call    ds:?createinstance_transferqueueitem@transferqueue@@yajabu_guid@@papax@z
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jns     short loc_1000caae
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
jmp     short loc_1000cb1c
push    [ebp+var_14]
lea     ecx, [ebp+var_24]
push    offset aitem
call    sub_10001350
test    eax, eax
js      short loc_1000caf8
mov     eax, [edi+34h]
mov     ecx, [ebp+var_14]
cmp     eax, ecx
jz      short loc_1000caf8
mov     [ebp+var_14], 0
mov     [edi+34h], ecx
mov     [ebp+var_4], 2
test    eax, eax
jz      short loc_1000caf1
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ffffffffh
lea     eax, [edi+38h]
push    eax
push    offset ausefoldertree
lea     ecx, [ebp+var_24]
call    sub_1000c6b0
lea     eax, [edi+3ch]
push    eax
push    offset adependonprevio
lea     ecx, [ebp+var_24]
call    sub_1000c6b0
xor     ebx, ebx
mov     [ebp+var_4], 3
mov     ecx, [ebp+var_14]
test    ecx, ecx
jz      short loc_1000cb3a
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 88h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+sz]
push    esi
mov     esi, [ebp+arg_4]
push    edi
push    27h
push    eax
lea     eax, [ebx+24h]
mov     [ebp+var_88], esi
push    eax
call    ds:stringfromguid2
test    eax, eax
jg      short loc_1000cbc7
mov     ecx, [ebp+4]
mov     edx, 80004005h
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     edi, 80004005h
mov     edx, edi
call    sub_10002ff0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [esi]
mov     edi, [eax+1ch]
lea     eax, [ebp+sz]
push    eax
push    0
push    offset aid
push    0
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, eax
test    edi, edi
jns     short loc_1000cc09
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [ebx+34h]
test    eax, eax
jz      short loc_1000cc4d
push    ecx
push    eax
push    offset aitem
lea     ecx, [ebp+var_88]
call    sub_10001510
mov     esi, eax
test    esi, esi
jns     short loc_1000cc47
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     esi, [ebp+var_88]
cmp     dword ptr [ebx+38h], 0
jnz     short loc_1000cc95
push    0
push    offset ad
lea     eax, [ebp+buffer]
push    40h
push    eax
call    sub_100112e0
mov     eax, [esi]
add     esp, 10h
mov     edi, [eax+34h]
lea     eax, [ebp+buffer]
push    eax
push    0
push    offset ausefoldertree
push    0
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, eax
test    edi, edi
js      loc_1000cbea
mov     eax, [ebx+3ch]
test    eax, eax
jz      short loc_1000ccdd
push    eax
push    offset ad
lea     eax, [ebp+buffer]
push    40h
push    eax
call    sub_100112e0
mov     eax, [esi]
add     esp, 10h
mov     edi, [eax+34h]
lea     eax, [ebp+buffer]
push    eax
push    0
push    offset adependonprevio
push    0
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     esi, eax
test    esi, esi
js      loc_1000cc28
mov     ecx, [ebp+var_4]
xor     eax, eax
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, [ebp+arg_4]
lea     ecx, [ebp+var_4]
mov     dword ptr [edi], 0
call    sub_1000dc70
mov     esi, eax
test    esi, esi
jns     short loc_1000cd2f
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
pop     edi
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, [ebp+var_4]
push    ebx
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebx]
push    edi
push    [ebp+this]
mov     esi, [eax]
mov     ecx, esi
push    ebx
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebx]
mov     edi, eax
push    ebx
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     ebx
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, ecx
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset ?getaddtoqueueactions@scheduler@@yajpa_wpapauiaddtoqueueactions@1@@z_seh
mov     eax, large fs:0
push    eax
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+this]
mov     [ebp+bstr], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_28], eax
mov     dword ptr [eax], 0
mov     [ebp+var_4], 0
lea     ecx, [ebp+var_1c]
mov     [ebp+var_18], 0
call    sub_10002b10
mov     edi, eax
test    edi, edi
jns     short loc_1000ce05
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp+var_18]
jmp     loc_1000ceb0
mov     ebx, [ebp+var_1c]
push    ebx
mov     [ebp+var_18], ebx
mov     eax, [ebx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
push    [ebp+bstr]
call    ds:sysstringbytelen
mov     [ebp+var_24], eax
mov     [ebp+var_14], 0
mov     byte ptr [ebp+var_4], 1
lea     eax, [ebp+var_14]
mov     ecx, [ebx]
push    eax
push    offset dword_10017de0
push    ebx
mov     esi, [ecx]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000ce6d
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
cmp     [ebp+var_14], 0
jz      short loc_1000ce68
lea     ecx, [ebp+var_14]
call    sub_100024b0
mov     ebx, [ebp+var_1c]
jmp     short loc_1000ce94
mov     edx, [ebp+var_24]
push    ecx
push    [ebp+var_14]
mov     ecx, [ebp+bstr]
push    offset aqueueactions
call    sub_10012440
add     esp, 0ch
mov     edi, eax
cmp     [ebp+var_14], 0
jz      short loc_1000ce94
lea     ecx, [ebp+var_14]
call    sub_100024b0
test    edi, edi
jns     short loc_1000cea7
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp+var_18]
jmp     short loc_1000ceb0
mov     ecx, [ebp+var_28]
xor     eax, eax
xor     edi, edi
mov     [ecx], ebx
mov     [ebp+var_4], 2
test    eax, eax
jz      short loc_1000cecb
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
lea     ecx, [ecx-8]
call    sub_1000cf10
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000cf10
mov     eax, large fs:0
push    eax
sub     esp, 20h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, [ecx+30h]
lea     eax, [ecx+34h]
mov     ecx, [eax]
mov     [ebp+var_28], eax
cmp     ecx, edi
jz      short loc_1000cf86
mov     [ebp+var_4], 0
test    edi, edi
jz      short loc_1000cf69
mov     eax, [edi]
push    edi
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp+var_28]
mov     ecx, [eax]
mov     [eax], edi
mov     [ebp+var_4], 1
test    ecx, ecx
jz      short loc_1000cf86
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 2
mov     [ebp+var_1c], 0
mov     [ebp+var_14], 0
lea     ecx, [ebp+var_14]
mov     byte ptr [ebp+var_4], 3
call    sub_100116d0
mov     [ebp+var_24], eax
test    eax, eax
jns     short loc_1000cfcf
mov     ecx, [ebp+4]
mov     edx, eax
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 4
mov     ecx, [ebp+var_14]
test    ecx, ecx
jz      loc_1000d094
mov     eax, [ecx]
push    ecx
jmp     loc_1000d087
push    offset asmartftp
mov     [ebp+var_1c], 0
call    ds:sysallocstring
mov     esi, eax
mov     [ebp+var_20], esi
test    esi, esi
jnz     short loc_1000d003
mov     ecx, [ebp+4]
mov     edx, 8007000eh
call    sub_10002ff0
mov     edi, [ebp+var_14]
mov     [ebp+var_24], 8007000eh
jmp     short loc_1000d07c
mov     [ebp+var_18], 0
mov     byte ptr [ebp+var_4], 7
lea     ecx, [ebp+var_18]
mov     edi, [ebp+var_14]
push    ecx
push    esi
push    edi
mov     eax, [edi]
mov     eax, [eax+1ch]
mov     ecx, eax
mov     [ebp+var_24], eax
call    ds:___guard_check_icall_fptr
call    [ebp+var_24]
mov     [ebp+var_24], eax
test    eax, eax
js      short loc_1000d052
mov     eax, [ebp+var_18]
mov     [ebp+var_18], 0
mov     [ebp+var_1c], eax
push    esi
mov     byte ptr [ebp+var_4], 9
call    ds:sysfreestring
mov     [ebp+var_24], 0
jmp     short loc_1000d07c
mov     byte ptr [ebp+var_4], 17h
mov     eax, [ebp+var_18]
test    eax, eax
jz      short loc_1000d071
mov     ecx, [eax]
push    eax
mov     eax, [ecx+8]
mov     ecx, eax
mov     [ebp+var_2c], eax
call    ds:___guard_check_icall_fptr
call    [ebp+var_2c]
push    esi
mov     byte ptr [ebp+var_4], 18h
call    ds:sysfreestring
mov     byte ptr [ebp+var_4], 19h
test    edi, edi
jz      short loc_1000d094
mov     eax, [edi]
push    edi
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
cmp     [ebp+var_24], 0
mov     byte ptr [ebp+var_4], 2
jl      short loc_1000d0ad
push    [ebp+var_1c]
mov     ecx, [ebp+var_28]
call    sub_10007300
mov     edi, eax
jmp     short loc_1000d0af
xor     edi, edi
mov     [ebp+var_4], 1ah
mov     eax, [ebp+var_1c]
test    eax, eax
jz      short loc_1000d0cd
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d0f0
mov     eax, large fs:0
push    eax
sub     esp, 28h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_4]
mov     ebx, [ebp+arg_0]
mov     [ebp+var_1c], eax
mov     eax, [ebp+bstr]
push    eax
mov     [ebp+var_18], eax
call    ds:sysstringbytelen
test    eax, eax
jnz     short loc_1000d13f
mov     eax, 80070057h
jmp     loc_1000d46e
lea     eax, [ebp+ppvout]
mov     [ebp+ppvout], 0
push    eax
push    offset stru_10019314
push    offset rguid
push    dword ptr [ebx-4]
call    ds:iunknown_queryservice
mov     edi, eax
test    edi, edi
jns     short loc_1000d176
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 0
jmp     short loc_1000d1a7
mov     eax, [ebp+ppvout]
push    1
push    0
push    offset dword_10018320
mov     ecx, [eax]
push    eax
mov     esi, [ecx+40h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      short loc_1000d1a0
mov     eax, 80040112h
cmovnz  edi, eax
mov     [ebp+var_4], 1
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_1000d1be
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ffffffffh
test    edi, edi
jns     short loc_1000d1d8
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_1000d46c
mov     ecx, [ebp+var_1c]
mov     [ebp+var_24], 0
mov     eax, [ecx]
mov     esi, [eax]
lea     eax, [ebp+var_24]
push    eax
push    offset dword_10018228
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000d20f
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_1000d44e
lea     eax, [ebp+var_20]
mov     [ebp+var_20], 0
push    eax
push    offset stru_100192f4
push    offset stru_100192e4
push    dword ptr [ebx-4]
call    ds:iunknown_queryservice
mov     edi, eax
test    edi, edi
jns     short loc_1000d242
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_1000d430
mov     edi, [ebx+24h]
xor     eax, eax
mov     ebx, [ebp+var_20]
mov     [ebp+var_30], eax
mov     [ebp+var_2c], eax
mov     [ebp+var_28], eax
test    ebx, ebx
jz      short loc_1000d299
mov     [ebp+var_4], 2
mov     eax, [ebx]
push    ebx
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp+var_2c]
mov     [ebp+var_2c], ebx
mov     [ebp+var_4], 3
test    eax, eax
jz      short loc_1000d28f
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_30]
cmp     eax, edi
jz      short loc_1000d2e0
mov     [ebp+var_4], 4
test    edi, edi
jz      short loc_1000d2bb
mov     eax, [edi]
push    edi
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp+var_30]
mov     [ebp+var_30], edi
mov     [ebp+var_4], 5
test    eax, eax
jz      short loc_1000d2d9
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ffffffffh
lea     eax, [ebp+ppvout]
mov     [ebp+ppvout], 0
push    eax
push    [ebp+var_18]
call    ?getaddtoqueueactions@scheduler@@yajpa_wpapauiaddtoqueueactions@1@@z
mov     edi, eax
add     esp, 8
test    edi, edi
jns     short loc_1000d30e
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     esi, [ebp+ppvout]
jmp     loc_1000d3bb
mov     esi, [ebp+ppvout]
mov     eax, [ebp+var_24]
mov     [ebp+var_34], eax
mov     eax, [esi]
mov     edi, [eax+14h]
lea     eax, [ebp+var_1c]
push    eax
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, eax
test    edi, edi
jns     short loc_1000d340
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     esi, [ebp+ppvout]
jmp     short loc_1000d3bb
xor     ebx, ebx
cmp     [ebp+var_1c], ebx
jbe     short loc_1000d3b9
nop     word ptr [eax+eax+00000000h]
mov     eax, [esi]
mov     [ebp+var_18], 0
mov     edi, [eax+18h]
lea     eax, [ebp+var_18]
push    eax
push    ebx
push    esi
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, eax
test    edi, edi
js      loc_1000d49f
push    [ebp+var_18]
lea     ecx, [ebp+var_30]
push    [ebp+var_34]
call    sub_1000c030
mov     edi, eax
test    edi, edi
js      loc_1000d48c
mov     [ebp+var_4], 8
mov     eax, [ebp+var_18]
test    eax, eax
jz      short loc_1000d3ac
mov     ecx, [eax]
push    eax
mov     edi, [ecx+8]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
inc     ebx
mov     [ebp+var_4], 0ffffffffh
cmp     ebx, [ebp+var_1c]
jb      short loc_1000d350
xor     edi, edi
mov     [ebp+var_4], 9
test    esi, esi
jz      short loc_1000d3d6
mov     eax, [esi]
push    esi
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ah
mov     ecx, [ebp+var_28]
test    ecx, ecx
jz      short loc_1000d3f4
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0bh
mov     ecx, [ebp+var_2c]
test    ecx, ecx
jz      short loc_1000d412
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ch
mov     ecx, [ebp+var_30]
test    ecx, ecx
jz      short loc_1000d430
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0dh
mov     eax, [ebp+var_20]
test    eax, eax
jz      short loc_1000d44e
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0eh
mov     ecx, [ebp+var_24]
test    ecx, ecx
jz      short loc_1000d46c
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 7
jmp     short loc_1000d4b0
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 6
mov     eax, [ebp+var_18]
test    eax, eax
jz      short loc_1000d4c7
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, [ebp+ppvout]
jmp     loc_1000d3bb
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d4d0
mov     eax, large fs:0
push    eax
sub     esp, 10h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ecx, [ebp+arg_4]
mov     ebx, [ebp+arg_0]
mov     [ebp+var_14], 0
mov     eax, [ecx]
mov     esi, [eax]
lea     eax, [ebp+var_14]
push    eax
push    offset dword_100192d4
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000d532
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_1000d5aa
lea     edi, [ebx-8]
mov     ebx, [ebp+var_14]
mov     esi, edi
lea     eax, [edi+0ch]
neg     esi
sbb     esi, esi
and     esi, eax
jz      short loc_1000d54f
lea     eax, [esi+4]
push    eax
call    ds:entercriticalsection
lea     eax, [edi+34h]
push    ebx
mov     ecx, eax
mov     [ebp+var_1c], eax
call    sub_10006e20
lea     eax, [ebp+var_15]
push    eax
push    ebx
call    sub_10006ff0
mov     edi, eax
test    edi, edi
jns     short loc_1000d587
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
test    esi, esi
jz      short loc_1000d5aa
add     esi, 4
push    esi
call    ds:leavecriticalsection
jmp     short loc_1000d5aa
cmp     [ebp+var_15], 0
jz      short loc_1000d59a
mov     ecx, [ebp+var_1c]
push    ebx
call    sub_10006ab0
mov     edi, eax
jmp     short loc_1000d577
test    esi, esi
jz      short loc_1000d5a8
add     esi, 4
push    esi
call    ds:leavecriticalsection
xor     edi, edi
mov     [ebp+var_4], 1
mov     ecx, [ebp+var_14]
test    ecx, ecx
jz      short loc_1000d5c8
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d5f0
mov     eax, large fs:0
push    eax
sub     esp, 8
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ecx, [ebp+arg_4]
mov     ebx, [ebp+arg_0]
mov     [ebp+var_14], 0
mov     eax, [ecx]
mov     esi, [eax]
lea     eax, [ebp+var_14]
push    eax
push    offset dword_100192d4
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000d652
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_1000d688
lea     edi, [ebx-8]
mov     ebx, [ebp+var_14]
mov     esi, edi
lea     eax, [edi+0ch]
neg     esi
sbb     esi, esi
and     esi, eax
jz      short loc_1000d66f
lea     eax, [esi+4]
push    eax
call    ds:entercriticalsection
lea     ecx, [edi+34h]
push    ebx
call    sub_10006e20
mov     edi, eax
test    esi, esi
jz      short loc_1000d688
add     esi, 4
push    esi
call    ds:leavecriticalsection
mov     [ebp+var_4], 1
mov     ecx, [ebp+var_14]
test    ecx, ecx
jz      short loc_1000d6a6
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_8]
test    ecx, ecx
jz      short loc_1000d70c
mov     eax, [ebp+arg_0]
mov     edx, [eax+4]
test    edx, edx
jz      short loc_1000d6fd
mov     eax, [edx]
push    esi
push    ecx
push    [ebp+arg_4]
mov     esi, [eax]
mov     ecx, esi
push    edx
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn    0ch
mov     dword ptr [ecx], 0
mov     eax, 80004005h
pop     ebp
retn    0ch
mov     eax, 80004003h
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
push    [ebp+arg_4]
lea     ecx, [ecx+4]
call    sub_1000e1c0
xor     eax, eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d740
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_4], 0
mov     ecx, [ecx+4]
test    ecx, ecx
jz      short loc_1000d781
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ecx]
test    eax, eax
jz      short locret_1000d7b0
add     eax, 4
push    eax
call    ds:leavecriticalsection
retn
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_10019334
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
or      ebx, 0ffffffffh
lock xadd [eax+4], ebx
dec     ebx
jnz     short loc_1000d83e
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_1000d825
mov     eax, [edi]
push    1
mov     esi, [eax+1ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_10019368
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
or      ebx, 0ffffffffh
lock xadd [eax+0ch], ebx
dec     ebx
jnz     short loc_1000d8ce
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_1000d8b5
mov     eax, [edi]
push    1
mov     esi, [eax+14h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, 1
lock xadd [ecx+0ch], eax
inc     eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000e1c0
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcobjectcache@@@atl@@6b@
mov     dword ptr [ebx+4], 0c0000001h
mov     [ebp+var_4], 0
mov     ecx, [ebx+24h]
test    ecx, ecx
jz      short loc_1000d959
mov     dword ptr [ebx+24h], 0
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
lea     ecx, [ebx+28h]
call    sub_1000db50
mov     [ebp+var_4], 1
mov     ecx, [ebx+24h]
test    ecx, ecx
jz      short loc_1000d996
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
cmp     byte ptr [ebx+20h], 0
lea     eax, [ebx+8]
jz      short loc_1000d9aa
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_1000d9bb
push    48h
push    ebx
call    sub_10012c63
add     esp, 8
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d9e0
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     [ebp+var_4], 0
mov     eax, [ebx+30h]
mov     dword ptr [ebx], offset ??_7?$ccomobject@vschedulermanager@scheduler@@@atl@@6b@
mov     dword ptr [ebx+8], offset ??_7?$ccomobject@vschedulermanager@scheduler@@@atl@@6b@_0
mov     dword ptr [ebx+0ch], 0c0000001h
mov     edx, [eax]
push    eax
mov     esi, [edx+14h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     ecx, ebx
call    sub_1000da80
test    [ebp+arg_0], 1
jz      short loc_1000da64
push    58h
push    ebx
call    sub_10012c63
add     esp, 8
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000da80
mov     eax, large fs:0
push    eax
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
lea     ecx, [edi+38h]
call    sub_1000dbc0
mov     [ebp+var_4], 0
mov     ecx, [edi+34h]
test    ecx, ecx
jz      short loc_1000dacc
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 1
mov     ecx, [edi+30h]
test    ecx, ecx
jz      short loc_1000daea
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 2
mov     ecx, [edi+2ch]
test    ecx, ecx
jz      short loc_1000db08
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 3
mov     ecx, [edi+4]
test    ecx, ecx
jz      short loc_1000db26
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
add     edi, 10h
cmp     byte ptr [edi+18h], 0
jz      short loc_1000db3a
push    edi
mov     byte ptr [edi+18h], 0
call    ds:deletecriticalsection
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, ecx
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_1000db9b
mov     ecx, [esi+14h]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_1000db7c
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_1000dbb2
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
mov     dword ptr [esi+0ch], 0
add     esp, 8
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 0
mov     edx, [esi+4]
call    sub_1000e110
push    1ch
push    dword ptr [esi+4]
call    sub_10012c63
add     esp, 8
pop     esi
retn
call    ds:_invalid_parameter_noinfo_noreturn
push    esi
mov     esi, ecx
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_1000dc0b
mov     ecx, [esi+14h]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_1000dbec
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_1000dc22
mov     eax, edx
push    ecx
push    eax
call    sub_10012c63
mov     dword ptr [esi+0ch], 0
add     esp, 8
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 0
mov     edx, [esi+4]
call    sub_10008a00
push    24h
push    dword ptr [esi+4]
call    sub_10012c63
add     esp, 8
pop     esi
retn
call    ds:_invalid_parameter_noinfo_noreturn
push    esi
mov     esi, ecx
mov     edx, [esi]
call    sub_1000e110
push    1ch
push    dword ptr [esi]
call    sub_10012c63
add     esp, 8
pop     esi
retn
push    esi
mov     esi, ecx
mov     edx, [esi]
call    sub_10008a00
push    24h
push    dword ptr [esi]
call    sub_10012c63
add     esp, 8
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000dc70
mov     eax, large fs:0
push    eax
sub     esp, 24h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     eax, ecx
mov     [ebp+var_18], eax
mov     [ebp+var_14], eax
test    eax, eax
jnz     short loc_1000dcbe
mov     eax, 80004003h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset dword_100203fc
push    58h
mov     dword ptr [eax], 0
mov     [ebp+var_24], 8007000eh
mov     [ebp+var_28], 0
mov     [ebp+var_4], 0
call    ??2@yapaxiabunothrow_t@std@@@z
mov     esi, eax
add     esp, 8
mov     [ebp+block], esi
test    esi, esi
jz      loc_1000de01
mov     dword ptr [esi+0ch], 0
xorps   xmm0, xmm0
movups  xmmword ptr [esi+10h], xmm0
movq    qword ptr [esi+20h], xmm0
mov     byte ptr [esi+28h], 0
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+2ch], 0
mov     dword ptr [esi+30h], 0
lea     eax, [esi+34h]
mov     [ebp+var_2c], eax
mov     dword ptr [eax], 0
lea     edi, [eax+4]
mov     byte ptr [ebp+var_4], 6
mov     [ebp+var_30], edi
mov     dword ptr [edi], 0
push    24h
mov     dword ptr [edi+4], 0
mov     dword ptr [edi+8], 0
call    ??2@yapaxi@z
add     esp, 4
mov     [eax], eax
mov     [eax+4], eax
mov     [edi+4], eax
mov     byte ptr [ebp+var_4], 7
push    10h
mov     [ebp+var_1c], eax
mov     dword ptr [edi+0ch], 0
mov     dword ptr [edi+10h], 0
mov     dword ptr [edi+14h], 0
call    sub_10008990
mov     edx, [ebp+var_1c]
mov     ecx, 10h
mov     [edi+0ch], eax
add     eax, 40h
mov     [edi+14h], eax
mov     eax, [edi+0ch]
mov     [eax], edx
add     eax, 4
sub     ecx, 1
jnz     short loc_1000dd94
mov     [edi+10h], eax
mov     dword ptr [edi+18h], 7
mov     dword ptr [edi+1ch], 8
mov     dword ptr [edi], 3f800000h
mov     edi, dword_10020788
mov     dword ptr [esi], offset ??_7?$ccomobject@vschedulermanager@scheduler@@@atl@@6b@
mov     dword ptr [esi+8], offset ??_7?$ccomobject@vschedulermanager@scheduler@@@atl@@6b@_0
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+block]
jmp     short loc_1000de03
mov     eax, offset loc_1000dde4
retn
mov     ecx, [ebp+var_14]
mov     edi, [ebp+var_28]
mov     eax, [ebp+var_24]
mov     [ecx], edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     edi, edi
mov     [ebp+var_4], 0ffffffffh
test    edi, edi
jz      loc_1000dec2
xor     esi, esi
lea     eax, [edi+10h]
push    esi
push    esi
push    eax
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_1000de3d
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_1000de3b
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_1000de41
mov     byte ptr [edi+28h], 1
test    esi, esi
js      short loc_1000de9a
lea     ecx, [ebp+var_14]
mov     dword ptr [edi+2ch], 0
call    sub_1000dee0
mov     esi, eax
test    esi, esi
jns     short loc_1000de70
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     short loc_1000de9a
mov     ecx, [ebp+var_14]
mov     [edi+2ch], ecx
push    ecx
mov     eax, [ecx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
lea     eax, [edi+30h]
push    eax
push    offset dword_10019324
call    ds:?createinstance_filemonitor@transferqueue@@yajabu_guid@@papax@z
add     esp, 8
mov     esi, eax
xor     eax, eax
test    esi, esi
cmovs   eax, esi
mov     [ebp+var_14], eax
test    eax, eax
jz      short loc_1000dec7
mov     eax, [edi]
push    1
mov     esi, [eax+14h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     eax, [ebp+var_14]
xor     edi, edi
jmp     short loc_1000dec7
mov     eax, 8007000eh
mov     ecx, [ebp+var_18]
mov     [ecx], edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000dee0
mov     eax, large fs:0
push    eax
sub     esp, 20h
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     eax, ecx
mov     [ebp+var_14], eax
mov     [ebp+var_18], eax
test    eax, eax
jnz     short loc_1000df2e
mov     eax, 80004003h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    offset dword_100203fc
push    48h
mov     dword ptr [eax], 0
mov     [ebp+var_24], 8007000eh
mov     [ebp+var_28], 0
mov     [ebp+var_4], 0
call    ??2@yapaxiabunothrow_t@std@@@z
mov     esi, eax
add     esp, 8
mov     [ebp+block], esi
mov     byte ptr [ebp+var_4], 1
test    esi, esi
jz      loc_1000e056
mov     dword ptr [esi+4], 0
xorps   xmm0, xmm0
movups  xmmword ptr [esi+8], xmm0
movq    qword ptr [esi+18h], xmm0
mov     byte ptr [esi+20h], 0
mov     dword ptr [esi+24h], 0
mov     byte ptr [ebp+var_4], 3
lea     edi, [esi+28h]
mov     [ebp+var_2c], edi
mov     dword ptr [edi], 0
push    1ch
mov     dword ptr [edi+4], 0
mov     dword ptr [edi+8], 0
call    ??2@yapaxi@z
add     esp, 4
mov     [eax], eax
mov     [eax+4], eax
mov     [edi+4], eax
mov     byte ptr [ebp+var_4], 4
push    10h
mov     [ebp+var_1c], eax
mov     dword ptr [edi+0ch], 0
mov     dword ptr [edi+10h], 0
mov     dword ptr [edi+14h], 0
call    sub_10008990
mov     edx, [ebp+var_1c]
mov     ecx, 10h
mov     [edi+0ch], eax
add     eax, 40h
mov     [edi+14h], eax
mov     eax, [edi+0ch]
xchg    ax, ax
mov     [eax], edx
add     eax, 4
sub     ecx, 1
jnz     short loc_1000dff0
mov     [edi+10h], eax
mov     dword ptr [edi+18h], 7
mov     dword ptr [edi+1ch], 8
mov     dword ptr [edi], 3f800000h
mov     edi, dword_10020788
mov     dword ptr [esi], offset ??_7?$ccomobject@vcobjectcache@@@atl@@6b@
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+block]
jmp     short loc_1000e058
mov     eax, offset loc_1000e039
retn
mov     ecx, [ebp+var_18]
mov     edi, [ebp+var_28]
mov     eax, [ebp+var_24]
mov     [ecx], edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
xor     edi, edi
test    edi, edi
jz      loc_1000e0e5
lea     eax, [edi+4]
lock inc dword ptr [eax]
xor     esi, esi
lea     eax, [edi+8]
push    esi
push    esi
push    eax
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_1000e091
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_1000e08f
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_1000e095
mov     byte ptr [edi+20h], 1
test    esi, esi
js      short loc_1000e0b7
lea     eax, [edi+24h]
push    eax
mov     eax, [edi]
mov     esi, [eax+18h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
push    eax
call    ds:cocreatefreethreadedmarshaler
mov     esi, eax
xor     eax, eax
lea     ecx, [edi+4]
test    esi, esi
cmovs   eax, esi
mov     [ebp+var_18], eax
lock dec dword ptr [ecx]
test    eax, eax
jz      short loc_1000e0ea
mov     eax, [edi]
push    1
mov     esi, [eax+1ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     eax, [ebp+var_18]
xor     edi, edi
jmp     short loc_1000e0ea
mov     eax, 8007000eh
mov     ecx, [ebp+var_14]
mov     [ecx], edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000d9e0
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [edx+4]
mov     dword ptr [eax], 0
mov     esi, [edx]
test    esi, esi
jz      short loc_1000e17c
mov     ebx, [esi]
mov     [ebp+var_4], 0
mov     ecx, [esi+18h]
test    ecx, ecx
jz      short loc_1000e164
mov     eax, [ecx]
push    ecx
mov     edi, [eax+8]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
push    1ch
push    esi
mov     [ebp+var_4], 0ffffffffh
call    sub_10012c63
add     esp, 8
mov     esi, ebx
test    ebx, ebx
jnz     short loc_1000e144
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
sub     [esp+arg_0], 8
jmp     sub_1000d870
sub     [esp+arg_0], 8
jmp     sub_1000d8e0
sub     [esp+arg_0], 8
jmp     sub_1000d850
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000e1c0
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     edx, [ebx]
mov     edi, [ebp+arg_0]
cmp     edx, edi
jz      short loc_1000e242
mov     [ebp+var_4], 0
test    edi, edi
jz      short loc_1000e20d
mov     eax, [edi]
push    edi
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edx, [ebx]
mov     [ebx], edi
mov     [ebp+var_4], 1
test    edx, edx
jz      short loc_1000e22c
mov     eax, [edx]
push    edx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, [ebx]
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, edx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_c]
mov     eax, [ebp+arg_0]
mov     edx, [ebp+arg_8]
mov     ecx, [eax+ecx]
mov     dword ptr [edx], 0
test    ecx, ecx
jz      short loc_1000e292
mov     eax, [ecx]
push    esi
push    edx
push    [ebp+arg_4]
mov     esi, [eax]
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
pop     ebp
retn    10h
mov     eax, 80004002h
pop     ebp
retn    10h
push    offset ppsf
call    ds:ndrdllcanunloadnow
test    eax, eax
jnz     short locret_1000e2ce
mov     eax, dword_1002085c
push    esi
mov     esi, [eax+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, offset dword_1002085c
call    esi
neg     eax
pop     esi
sbb     eax, eax
neg     eax
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, ds:pproxyfilelist
mov     ecx, [ebp+riid]
push    ebx
mov     ebx, [ebp+ppv]
mov     eax, [eax+4]
push    esi
mov     esi, [ebp+rclsid]
mov     [ebp+var_10], ecx
mov     eax, [eax]
mov     [ebp+var_c], ebx
test    eax, eax
jz      short loc_1000e303
mov     eax, [eax]
jmp     short loc_1000e305
xor     eax, eax
push    offset ppsf
push    eax
push    offset pproxyfilelist
push    ebx
push    ecx
push    esi
call    ds:ndrdllgetclassobject
cmp     eax, 80040111h
jnz     loc_1000e445
test    ebx, ebx
jnz     short loc_1000e341
mov     esi, 80004003h
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
mov     dword ptr [ebx], 0
cmp     dword_1001f194, 0
jnz     short loc_1000e369
mov     esi, 8000ffffh
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
mov     ecx, off_1001f19c
mov     ebx, off_1001f1a0
push    edi
cmp     ecx, ebx
jnb     loc_1000e43d
xchg    ax, ax
mov     edi, [ecx]
test    edi, edi
jz      short loc_1000e3ac
cmp     dword ptr [edi+8], 0
jz      short loc_1000e3ac
mov     edx, [edi]
mov     eax, [esi]
cmp     eax, [edx]
jnz     short loc_1000e3ac
mov     eax, [esi+4]
cmp     eax, [edx+4]
jnz     short loc_1000e3ac
mov     eax, [esi+8]
cmp     eax, [edx+8]
jnz     short loc_1000e3ac
mov     eax, [esi+0ch]
cmp     eax, [edx+0ch]
jz      short loc_1000e3b8
add     ecx, 4
cmp     ecx, ebx
jb      short loc_1000e380
jmp     loc_1000e43d
mov     ebx, [edi+10h]
mov     eax, [ebx]
test    eax, eax
jnz     short loc_1000e410
push    offset criticalsection
call    ds:entercriticalsection
xor     esi, esi
cmp     [ebx], esi
jnz     short loc_1000e3ff
lea     eax, [ebp+ptr]
mov     [ebp+ptr], esi
mov     esi, [edi+8]
mov     ecx, esi
push    eax
push    offset dword_1001800c
push    dword ptr [edi+0ch]
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_1000e3ff
push    [ebp+ptr]
call    ds:encodepointer
mov     [ebx], eax
push    offset criticalsection
call    ds:leavecriticalsection
mov     eax, [ebx]
test    eax, eax
jz      short loc_1000e431
push    eax
call    ds:decodepointer
mov     edi, [ebp+var_c]
push    edi
push    [ebp+var_10]
mov     ecx, [eax]
push    eax
mov     esi, [ecx]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
jmp     short loc_1000e434
mov     edi, [ebp+var_c]
cmp     dword ptr [edi], 0
jnz     short loc_1000e442
test    esi, esi
jnz     short loc_1000e442
mov     esi, 80040111h
pop     edi
mov     eax, esi
mov     ecx, [ebp+var_4]
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dllinstall_seh
mov     eax, large fs:0
push    eax
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
call    ds:getthreadlocale
mov     ebx, eax
push    800h
mov     [ebp+var_24], ebx
call    ds:setthreadlocale
lea     eax, [ebp+var_20]
mov     [ebp+var_20], offset aappid
push    eax
push    1
mov     edx, 65h
mov     [ebp+var_1c], offset a43ea843fbe3d4d
mov     [ebp+var_18], 0
mov     [ebp+var_14], 0
call    sub_1000b640
mov     esi, eax
test    esi, esi
js      loc_1000e562
mov     [ebp+var_4], 0
xor     esi, esi
mov     edi, off_1001f19c
mov     eax, off_1001f1a0
cmp     edi, eax
jnb     short loc_1000e538
nop
mov     ebx, [edi]
test    ebx, ebx
jz      short loc_1000e52e
mov     esi, [ebx+4]
mov     ecx, esi
push    1
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_1000e535
mov     esi, [ebx+18h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebx]
mov     edx, eax
push    1
call    sub_1000e8d0
mov     esi, eax
test    esi, esi
js      short loc_1000e535
mov     eax, off_1001f1a0
add     edi, 4
cmp     edi, eax
jb      short loc_1000e4f0
mov     ebx, [ebp+var_24]
test    esi, esi
js      short loc_1000e55b
mov     edi, dword_10020808
test    edi, edi
jz      short loc_1000e55b
push    hmodule
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
add     esp, 4
mov     esi, eax
mov     [ebp+var_4], 0ffffffffh
push    ebx
call    ds:setthreadlocale
test    esi, esi
jns     short loc_1000e571
mov     eax, esi
jmp     short loc_1000e597
mov     eax, ds:pproxyfilelist
mov     eax, [eax+4]
mov     eax, [eax]
test    eax, eax
jz      short loc_1000e583
mov     eax, [eax]
jmp     short loc_1000e585
xor     eax, eax
push    eax
push    offset pproxyfilelist
push    hdll
call    ds:ndrdllregisterproxy
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dllunregisterserver_seh
mov     eax, large fs:0
push    eax
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
call    ds:getthreadlocale
mov     ebx, eax
push    800h
mov     [ebp+var_24], ebx
call    ds:setthreadlocale
mov     [ebp+var_4], 0
mov     esi, dword_1002080c
test    esi, esi
jz      short loc_1000e622
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_1000e67b
mov     edi, off_1001f19c
xor     esi, esi
mov     eax, off_1001f1a0
cmp     edi, eax
jnb     short loc_1000e67b
mov     ebx, [edi]
test    ebx, ebx
jz      short loc_1000e671
mov     esi, [ebx+18h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebx]
mov     edx, eax
push    0
call    sub_1000e8d0
mov     esi, eax
test    esi, esi
js      short loc_1000e678
mov     esi, [ebx+4]
mov     ecx, esi
push    0
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_1000e678
mov     eax, off_1001f1a0
add     edi, 4
cmp     edi, eax
jb      short loc_1000e633
mov     ebx, [ebp+var_24]
mov     [ebp+var_4], 0ffffffffh
test    esi, esi
js      short loc_1000e6b4
lea     eax, [ebp+var_20]
mov     [ebp+var_20], offset aappid
push    eax
push    0
mov     edx, 65h
mov     [ebp+var_1c], offset a43ea843fbe3d4d
mov     [ebp+var_18], 0
mov     [ebp+var_14], 0
call    sub_1000b640
mov     esi, eax
push    ebx
call    ds:setthreadlocale
test    esi, esi
jns     short loc_1000e6c3
mov     eax, esi
jmp     short loc_1000e713
mov     eax, ds:pproxyfilelist
mov     eax, [eax+4]
mov     eax, [eax]
test    eax, eax
jz      short loc_1000e6d5
mov     eax, [eax]
jmp     short loc_1000e6d7
xor     eax, eax
push    eax
push    offset pproxyfilelist
push    hdll
call    ds:ndrdllregisterproxy
test    eax, eax
js      short loc_1000e713
mov     eax, ds:pproxyfilelist
mov     eax, [eax+4]
mov     eax, [eax]
test    eax, eax
jz      short loc_1000e6ff
mov     eax, [eax]
jmp     short loc_1000e701
xor     eax, eax
push    eax
push    offset pproxyfilelist
push    hdll
call    ds:ndrdllunregisterproxy
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dllinstall_seh
mov     eax, large fs:0
push    eax
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+pszcmdline]
test    eax, eax
jz      short loc_1000e78a
push    5
push    offset auser
push    eax
call    ds:_wcsnicmp
movzx   ecx, byte_10020804
add     esp, 0ch
test    eax, eax
mov     edx, 1
cmovz   ecx, edx
mov     byte_10020804, cl
cmp     [ebp+binstall], 0
jz      loc_1000e8aa
call    ds:getthreadlocale
mov     ebx, eax
push    800h
mov     [ebp+var_24], ebx
call    ds:setthreadlocale
lea     eax, [ebp+var_20]
mov     [ebp+var_20], offset aappid
push    eax
push    1
mov     edx, 65h
mov     [ebp+var_1c], offset a43ea843fbe3d4d
mov     [ebp+var_18], 0
mov     [ebp+var_14], 0
call    sub_1000b640
mov     esi, eax
test    esi, esi
js      loc_1000e86a
mov     [ebp+var_4], 0
xor     esi, esi
mov     edi, off_1001f19c
mov     eax, off_1001f1a0
cmp     edi, eax
jnb     short loc_1000e840
mov     ebx, [edi]
test    ebx, ebx
jz      short loc_1000e836
mov     esi, [ebx+4]
mov     ecx, esi
push    1
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_1000e83d
mov     esi, [ebx+18h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebx]
mov     edx, eax
push    1
call    sub_1000e8d0
mov     esi, eax
test    esi, esi
js      short loc_1000e83d
mov     eax, off_1001f1a0
add     edi, 4
cmp     edi, eax
jb      short loc_1000e7f8
mov     ebx, [ebp+var_24]
test    esi, esi
js      short loc_1000e863
mov     edi, dword_10020808
test    edi, edi
jz      short loc_1000e863
push    hmodule
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
add     esp, 4
mov     esi, eax
mov     [ebp+var_4], 0ffffffffh
push    ebx
call    ds:setthreadlocale
test    esi, esi
js      short loc_1000e8a1
mov     eax, ds:pproxyfilelist
mov     eax, [eax+4]
mov     eax, [eax]
test    eax, eax
jz      short loc_1000e887
mov     eax, [eax]
jmp     short loc_1000e889
xor     eax, eax
push    eax
push    offset pproxyfilelist
push    hdll
call    ds:ndrdllregisterproxy
mov     esi, eax
test    esi, esi
jns     short loc_1000e8a6
call    dllunregisterserver
mov     eax, esi
jmp     short loc_1000e8af
call    dllunregisterserver
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebx
mov     ebx, esp
sub     esp, 8
and     esp, 0fffffff8h
add     esp, 4
push    ebp
mov     ebp, [ebx+4]
mov     [esp+0ch+var_8], ebp
mov     ebp, esp
push    0ffffffffh
push    offset loc_10014bd0
mov     eax, large fs:0
push    eax
push    ebx
sub     esp, 1c0h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp-14h], eax
push    esi
push    edi
push    eax
lea     eax, [ebp-0ch]
mov     large fs:0, eax
mov     edi, edx
mov     esi, ecx
mov     [ebp-1cch], esi
mov     dword ptr [ebp-1a0h], 0
test    edi, edi
jz      loc_1000ec48
mov     eax, [esi]
cmp     eax, ds:dword_100178e0
jnz     short loc_1000e95c
mov     eax, [esi+4]
cmp     eax, ds:dword_100178e4
jnz     short loc_1000e95c
mov     eax, [esi+8]
cmp     eax, ds:dword_100178e8
jnz     short loc_1000e95c
mov     eax, [esi+0ch]
cmp     eax, ds:dword_100178ec
jz      loc_1000ec48
lea     eax, [ebp-1a0h]
push    eax
push    offset stru_1001939c
push    1
push    0
push    offset stru_10017910
call    ds:cocreateinstance
test    eax, eax
js      loc_1000ec48
mov     ecx, [edi]
mov     edx, [ebx+8]
test    ecx, ecx
jz      loc_1000ea20
nop     dword ptr [eax+00h]
mov     eax, [edi+4]
movups  xmm0, xmmword ptr [eax]
mov     eax, [ebp-1a0h]
movups  xmmword ptr [ebp-1c8h], xmm0
test    edx, edx
jz      short loc_1000e9e0
cmp     ecx, 1
mov     ecx, [eax]
jnz     short loc_1000e9b3
mov     esi, [ecx+14h]
jmp     short loc_1000e9b6
mov     esi, [ecx+1ch]
lea     ecx, [ebp-1c8h]
push    ecx
push    1
push    dword ptr [ebp-1cch]
mov     ecx, esi
push    eax
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp-19ch], eax
test    eax, eax
js      loc_1000ec50
jmp     short loc_1000ea09
cmp     ecx, 1
mov     ecx, [eax]
jnz     short loc_1000e9ec
mov     esi, [ecx+18h]
jmp     short loc_1000e9ef
mov     esi, [ecx+20h]
lea     ecx, [ebp-1c8h]
push    ecx
push    1
push    dword ptr [ebp-1cch]
mov     ecx, esi
push    eax
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [edi+8]
add     edi, 8
mov     edx, [ebx+8]
test    ecx, ecx
jnz     loc_1000e990
mov     esi, [ebp-1cch]
test    edx, edx
jnz     loc_1000ec48
push    40h
lea     eax, [ebp-198h]
push    eax
push    esi
call    ds:stringfromguid2
test    eax, eax
jnz     short loc_1000ea46
mov     eax, 0dh
jmp     loc_1000ec4a
push    offset source
lea     eax, [ebp-118h]
push    80h
push    eax
call    ds:wcscpy_s
push    eax
call    sub_1000a4b0
lea     eax, [ebp-198h]
push    eax
lea     eax, [ebp-118h]
push    80h
push    eax
call    ds:wcscat_s
push    eax
call    sub_1000a4b0
push    offset arequiredcatego
lea     eax, [ebp-118h]
push    80h
push    eax
call    ds:wcscat_s
push    eax
call    sub_1000a4b0
add     esp, 30h
mov     dword ptr [ebp-1b8h], 80000000h
lea     eax, [ebp-118h]
mov     dword ptr [ebp-1b4h], 0
lea     ecx, [ebp-1ach]
mov     dword ptr [ebp-1b0h], 0
mov     dword ptr [ebp-1ach], 0
push    20019h
push    eax
push    80000000h
mov     dword ptr [ebp-1a8h], 0
mov     dword ptr [ebp-1a4h], 0
mov     dword ptr [ebp-19ch], 0
call    sub_1000a5c0
test    eax, eax
jnz     short loc_1000eb68
push    eax
mov     esi, [ebp-1ach]
push    eax
push    eax
push    eax
push    eax
push    eax
push    eax
lea     eax, [ebp-19ch]
push    eax
push    0
push    0
push    0
push    esi
call    ds:regqueryinfokeyw
mov     edi, eax
test    esi, esi
jz      short loc_1000eb40
push    esi
call    ds:regclosekey
mov     dword ptr [ebp-1ach], 0
mov     dword ptr [ebp-1a8h], 0
test    edi, edi
jnz     short loc_1000eb68
cmp     [ebp-19ch], edi
jnz     short loc_1000eb68
lea     eax, [ebp-118h]
push    eax
lea     ecx, [ebp-1b8h]
call    sub_1000a800
push    offset source
lea     eax, [ebp-118h]
push    80h
push    eax
call    ds:wcscpy_s
push    eax
call    sub_1000a4b0
lea     eax, [ebp-198h]
push    eax
lea     eax, [ebp-118h]
push    80h
push    eax
call    ds:wcscat_s
push    eax
call    sub_1000a4b0
push    offset aimplementedcat
lea     eax, [ebp-118h]
push    80h
push    eax
call    ds:wcscat_s
push    eax
call    sub_1000a4b0
add     esp, 30h
lea     eax, [ebp-118h]
lea     ecx, [ebp-1ach]
push    20019h
push    eax
push    80000000h
call    sub_1000a5c0
mov     esi, [ebp-1ach]
test    eax, eax
jnz     short loc_1000ec32
push    eax
push    eax
push    eax
push    eax
push    eax
push    eax
push    eax
lea     eax, [ebp-19ch]
push    eax
push    0
push    0
push    0
push    esi
call    ds:regqueryinfokeyw
mov     edi, eax
test    esi, esi
jz      short loc_1000ec14
push    esi
call    ds:regclosekey
xor     esi, esi
test    edi, edi
jnz     short loc_1000ec32
cmp     [ebp-19ch], edi
jnz     short loc_1000ec32
lea     eax, [ebp-118h]
push    eax
lea     ecx, [ebp-1b8h]
call    sub_1000a800
test    esi, esi
jz      short loc_1000ec3d
push    esi
call    ds:regclosekey
push    80000000h
call    ds:regclosekey
xor     eax, eax
mov     [ebp-19ch], eax
mov     dword ptr [ebp-4], 5
mov     ecx, [ebp-1a0h]
test    ecx, ecx
jz      short loc_1000ec77
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [ebp-19ch]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp-14h]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
mov     esp, ebx
pop     ebx
retn    4
push    ebp
mov     ebp, esp
push    0
push    [ebp+arg_0]
mov     edx, 6fh
call    sub_1000b640
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000f110
mov     eax, large fs:0
push    eax
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, [ebp+arg_4]
lea     ecx, [ebp+punk]
mov     [ebp+punk], 0
call    sub_10010510
mov     edi, eax
test    edi, edi
jns     short loc_1000ed2a
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 0
mov     ecx, [ebp+punk]
test    ecx, ecx
jz      loc_1000ee6a
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
jmp     loc_1000ee60
lea     eax, [ebp+ppvout]
mov     [ebp+ppvout], 0
push    eax
push    offset stru_100192f4
push    offset stru_100192e4
push    [ebp+punk]
call    ds:iunknown_queryservice
mov     edi, eax
test    edi, edi
jns     short loc_1000ed82
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 1
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_1000ed76
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 2
jmp     loc_1000ee53
mov     eax, [ebp+ppvout]
mov     ecx, [eax]
mov     esi, [ecx+20h]
lea     ecx, [ebp+var_20]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000edd3
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 3
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_1000edc7
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 4
jmp     loc_1000ee53
cmp     [ebp+var_20], 3
jnz     short loc_1000ee19
mov     [ebp+var_4], 5
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_1000edf7
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 6
mov     eax, [ebp+punk]
test    eax, eax
jz      short loc_1000ee15
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
xor     edi, edi
jmp     short loc_1000ee6a
mov     eax, [ebp+ppvout]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+5ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
mov     [ebp+var_4], 7
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_1000ee4c
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 8
mov     eax, [ebp+punk]
test    eax, eax
jz      short loc_1000ee6a
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebx]
mov     [ebp+var_1c], 0
mov     esi, [eax]
lea     eax, [ebp+var_1c]
push    eax
push    offset dword_10018228
push    ebx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
test    ebx, ebx
jns     short loc_1000eea2
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
jmp     short loc_1000eeb8
mov     eax, [ebp+var_1c]
push    edi
push    eax
mov     ecx, [eax]
mov     esi, [ecx+10h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
mov     [ebp+var_4], 9
mov     ecx, [ebp+var_1c]
test    ecx, ecx
jz      short loc_1000eed6
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
cmp     [ebp+arg_0], 0
jnz     short loc_1000ef18
push    [ebp+arg_8]
mov     edx, [ebp+arg_4]
call    sub_1000ef40
pop     ebp
retn    0ch
mov     eax, [ebp+arg_8]
test    eax, eax
jnz     short loc_1000ef28
mov     eax, 80004003h
pop     ebp
retn    0ch
mov     dword ptr [eax], 0
mov     eax, 80040110h
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_0]
mov     [ebp+var_4], edx
test    eax, eax
jnz     short loc_1000ef5b
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn    4
push    ebx
push    esi
push    edi
push    offset dword_100203fc
push    28h
mov     dword ptr [eax], 0
mov     edi, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_1000efc3
mov     edi, dword_10020788
xorps   xmm0, xmm0
mov     dword ptr [ebx+8], 0
movups  xmmword ptr [ebx+0ch], xmm0
movq    qword ptr [ebx+1ch], xmm0
mov     byte ptr [ebx+24h], 0
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcstartqueuetaskhandler@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vcstartqueuetaskhandler@scheduler@@@atl@@6b@_0
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, 8007000eh
jmp     short loc_1000efc5
xor     ebx, ebx
test    ebx, ebx
jz      short loc_1000f038
xor     esi, esi
lea     edi, [ebx+0ch]
push    esi
push    esi
push    edi
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_1000eff0
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_1000eff2
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_1000eff8
mov     byte ptr [edi+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     edi, edi
test    eax, eax
cmovs   edi, eax
test    edi, edi
jnz     short loc_1000f025
push    [ebp+arg_0]
mov     eax, [ebx]
push    [ebp+var_4]
push    ebx
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jz      short loc_1000f038
mov     edx, [ebx]
push    1
mov     esi, [edx+1ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_10019468
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcstartqueuetaskhandler@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vcstartqueuetaskhandler@scheduler@@@atl@@6b@_0
mov     dword ptr [ebx+8], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
cmp     byte ptr [ebx+24h], 0
lea     eax, [ebx+0ch]
jz      short loc_1000f0b7
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_1000f0c8
push    28h
push    ebx
call    sub_10012c63
add     esp, 8
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
sub     [esp+arg_0], 4
jmp     sub_1000f050
push    ebp
mov     ebp, esp
push    0
push    [ebp+arg_0]
mov     edx, 70h
call    sub_1000b640
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000f110
mov     eax, large fs:0
push    eax
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, [ebp+arg_4]
lea     ecx, [ebp+punk]
mov     [ebp+punk], 0
call    sub_10010510
mov     edi, eax
test    edi, edi
jns     short loc_1000f17a
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 0
mov     ecx, [ebp+punk]
test    ecx, ecx
jz      loc_1000f2ba
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
jmp     loc_1000f2b0
lea     eax, [ebp+ppvout]
mov     [ebp+ppvout], 0
push    eax
push    offset stru_100192f4
push    offset stru_100192e4
push    [ebp+punk]
call    ds:iunknown_queryservice
mov     edi, eax
test    edi, edi
jns     short loc_1000f1d2
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 1
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_1000f1c6
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 2
jmp     loc_1000f2a3
mov     eax, [ebp+ppvout]
mov     ecx, [eax]
mov     esi, [ecx+20h]
lea     ecx, [ebp+var_20]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_1000f223
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 3
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_1000f217
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 4
jmp     loc_1000f2a3
cmp     [ebp+var_20], 1
jnz     short loc_1000f269
mov     [ebp+var_4], 5
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_1000f247
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 6
mov     eax, [ebp+punk]
test    eax, eax
jz      short loc_1000f265
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
xor     edi, edi
jmp     short loc_1000f2ba
mov     eax, [ebp+ppvout]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+60h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
mov     [ebp+var_4], 7
mov     eax, [ebp+ppvout]
test    eax, eax
jz      short loc_1000f29c
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 8
mov     eax, [ebp+punk]
test    eax, eax
jz      short loc_1000f2ba
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebx]
mov     [ebp+var_1c], 0
mov     esi, [eax]
lea     eax, [ebp+var_1c]
push    eax
push    offset dword_10018228
push    ebx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
test    ebx, ebx
jns     short loc_1000f2f2
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
jmp     short loc_1000f308
mov     eax, [ebp+var_1c]
push    edi
push    eax
mov     ecx, [eax]
mov     esi, [ecx+10h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ebx, eax
mov     [ebp+var_4], 9
mov     ecx, [ebp+var_1c]
test    ecx, ecx
jz      short loc_1000f326
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, ebx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
cmp     [ebp+arg_0], 0
jnz     short loc_1000f368
push    [ebp+arg_8]
mov     edx, [ebp+arg_4]
call    sub_1000f390
pop     ebp
retn    0ch
mov     eax, [ebp+arg_8]
test    eax, eax
jnz     short loc_1000f378
mov     eax, 80004003h
pop     ebp
retn    0ch
mov     dword ptr [eax], 0
mov     eax, 80040110h
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_0]
mov     [ebp+var_4], edx
test    eax, eax
jnz     short loc_1000f3ab
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn    4
push    ebx
push    esi
push    edi
push    offset dword_100203fc
push    28h
mov     dword ptr [eax], 0
mov     edi, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_1000f413
mov     edi, dword_10020788
xorps   xmm0, xmm0
mov     dword ptr [ebx+8], 0
movups  xmmword ptr [ebx+0ch], xmm0
movq    qword ptr [ebx+1ch], xmm0
mov     byte ptr [ebx+24h], 0
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcstopqueuetaskhandler@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vcstopqueuetaskhandler@scheduler@@@atl@@6b@_0
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, 8007000eh
jmp     short loc_1000f415
xor     ebx, ebx
test    ebx, ebx
jz      short loc_1000f488
xor     esi, esi
lea     edi, [ebx+0ch]
push    esi
push    esi
push    edi
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_1000f440
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_1000f442
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_1000f448
mov     byte ptr [edi+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     edi, edi
test    eax, eax
cmovs   edi, eax
test    edi, edi
jnz     short loc_1000f475
push    [ebp+arg_0]
mov     eax, [ebx]
push    [ebp+var_4]
push    ebx
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jz      short loc_1000f488
mov     edx, [ebx]
push    1
mov     esi, [edx+1ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_100194e0
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vcstopqueuetaskhandler@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], offset ??_7?$ccomobject@vcstopqueuetaskhandler@scheduler@@@atl@@6b@_0
mov     dword ptr [ebx+8], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
cmp     byte ptr [ebx+24h], 0
lea     eax, [ebx+0ch]
jz      short loc_1000f507
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_1000f518
push    28h
push    ebx
call    sub_10012c63
add     esp, 8
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
sub     [esp+arg_0], 4
jmp     sub_1000f4a0
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 224h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+224h+var_4], eax
push    esi
push    104h
lea     eax, [esp+22ch+filename]
push    eax
push    hmodule
call    ds:getmodulefilenamew
test    eax, eax
jnz     short loc_1000f58f
call    sub_10008ad0
pop     esi
mov     ecx, [esp+224h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
push    104h
lea     eax, [esp+22ch+filename]
push    eax
call    ds:pathcchremovefilespec
mov     esi, eax
test    esi, esi
jns     short loc_1000f5c6
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     esi
mov     ecx, [esp+224h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
lea     eax, [esp+228h+filename]
mov     [esp+228h+var_220], offset amodulefolder
mov     [esp+228h+var_21c], eax
xorps   xmm0, xmm0
lea     eax, [esp+228h+var_220]
movq    [esp+228h+var_218], xmm0
push    eax
push    [ebp+arg_0]
mov     edx, 0cah
call    sub_1000b640
mov     ecx, [esp+228h+var_4]
pop     esi
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 48h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+48h+var_4], eax
mov     ecx, [ebp+arg_4]
xor     eax, eax
push    esi
push    edi
mov     edi, [ebp+arg_8]
test    ecx, ecx
jz      short loc_1000f65b
mov     [esp+50h+var_34], ecx
lea     edx, [ecx+2]
nop     dword ptr [eax+00000000h]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_1000f640
sub     ecx, edx
sar     ecx, 1
lea     eax, [ecx+ecx]
mov     [esp+50h+var_38], ax
lea     eax, [esp+50h+var_38]
lea     ecx, [esp+50h+policyhandle]
xorps   xmm0, xmm0
push    ecx
push    810h
lea     ecx, [esp+58h+objectattributes]
movaps  xmmword ptr [esp+58h+objectattributes.length], xmm0
push    ecx
push    eax
movq    qword ptr [esp+60h+objectattributes.securitydescriptor], xmm0
call    ds:lsaopenpolicy
test    eax, eax
jz      short loc_1000f69b
or      eax, 10000000h
pop     edi
pop     esi
mov     ecx, [esp+48h+var_4]
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
lea     eax, [esp+50h+accountsid]
mov     edx, edi
push    eax
xor     esi, esi
call    sub_100122e0
mov     edi, [esp+54h+accountsid]
add     esp, 4
test    eax, eax
jz      short loc_1000f707
mov     ecx, [ebp+arg_c]
test    ecx, ecx
jnz     short loc_1000f6c7
xor     eax, eax
mov     [esp+50h+var_3c], esi
mov     [esp+50h+accountsid], eax
jmp     short loc_1000f6e7
mov     [esp+50h+var_3c], ecx
lea     edx, [ecx+2]
xchg    ax, ax
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_1000f6d0
sub     ecx, edx
sar     ecx, 1
lea     eax, [ecx+ecx]
mov     word ptr [esp+50h+accountsid], ax
push    1
lea     eax, [esp+54h+accountsid]
push    eax
push    edi
push    [esp+5ch+policyhandle]
call    ds:lsaaddaccountrights
test    eax, eax
jz      short loc_1000f71c
mov     esi, eax
or      esi, 10000000h
jmp     short loc_1000f71c
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_1000f71c
movzx   esi, si
or      esi, 80070000h
push    [esp+50h+policyhandle]
call    ds:lsaclose
test    edi, edi
jz      short loc_1000f73a
call    ds:getprocessheap
push    edi
push    0
push    eax
call    ds:heapfree
mov     ecx, [esp+50h+var_4]
mov     eax, esi
pop     edi
pop     esi
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 264h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
push    edi
lea     eax, [ebp+nsize]
mov     [ebp+var_264], edx
push    eax
lea     eax, [ebp+buffer]
mov     [ebp+newacl], ecx
push    eax
mov     [ebp+nsize], 112h
call    ds:getcomputernamew
test    eax, eax
jnz     short loc_1000f7aa
call    sub_10008ad0
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     dword ptr [ebp+pobjectname], 5c005ch
lea     eax, [ebp+pobjectname]
mov     ecx, 114h
nop
cmp     word ptr [eax], 0
jz      short loc_1000f7ce
add     eax, 2
sub     ecx, 1
jnz     short loc_1000f7c0
mov     edx, 114h
mov     ebx, ecx
mov     eax, edx
mov     edi, 80070057h
sub     eax, ecx
neg     ebx
sbb     ebx, ebx
and     ebx, eax
xor     eax, eax
test    ecx, ecx
cmovnz  edi, eax
jz      loc_1000f9cd
mov     esi, edx
lea     ecx, [ebp+pobjectname]
lea     ecx, [ecx+ebx*2]
sub     esi, ebx
jz      short loc_1000f829
mov     ebx, offset psz
mov     eax, 7ffffffeh
sub     ebx, ecx
nop     dword ptr [eax+00h]
test    eax, eax
jz      short loc_1000f829
movzx   edi, word ptr [ebx+ecx]
test    di, di
jz      short loc_1000f829
mov     [ecx], di
dec     eax
add     ecx, 2
sub     esi, 1
jnz     short loc_1000f810
test    esi, esi
lea     eax, [ecx-2]
mov     edi, 8007007ah
cmovnz  eax, ecx
xor     ecx, ecx
mov     [eax], cx
xor     eax, eax
test    esi, esi
cmovnz  edi, eax
jz      loc_1000f9cd
mov     ecx, edx
lea     eax, [ebp+pobjectname]
cmp     word ptr [eax], 0
jz      short loc_1000f85e
add     eax, 2
sub     ecx, 1
jnz     short loc_1000f850
mov     eax, edx
mov     esi, ecx
sub     eax, ecx
mov     ebx, 80070057h
neg     esi
sbb     esi, esi
and     esi, eax
xor     eax, eax
test    ecx, ecx
cmovnz  ebx, eax
jz      loc_1000f9b0
lea     ecx, [ebp+pobjectname]
lea     ecx, [ecx+esi*2]
sub     edx, esi
jz      short loc_1000f8af
mov     ebx, [ebp+newacl]
mov     eax, 7ffffffeh
sub     ebx, ecx
test    eax, eax
jz      short loc_1000f8af
movzx   esi, word ptr [ebx+ecx]
test    si, si
jz      short loc_1000f8af
mov     [ecx], si
dec     eax
add     ecx, 2
sub     edx, 1
jnz     short loc_1000f896
test    edx, edx
lea     eax, [ecx-2]
mov     ebx, 8007007ah
cmovnz  eax, ecx
xor     ecx, ecx
mov     [eax], cx
xor     eax, eax
test    edx, edx
cmovnz  ebx, eax
jz      loc_1000f9b0
mov     [ebp+newacl], eax
lea     eax, [ebp+ppsecuritydescriptor]
push    eax
push    ecx
lea     eax, [ebp+ppdacl]
push    eax
push    ecx
push    ecx
push    4
push    2
lea     eax, [ebp+pobjectname]
push    eax
call    ds:getnamedsecurityinfow
mov     esi, eax
test    esi, esi
jnz     short loc_1000f97b
mov     [ebp+plistofexplicitentries.trustee.trusteetype], eax
xorps   xmm0, xmm0
mov     [ebp+plistofexplicitentries.grfinheritance], eax
mov     eax, [ebp+var_264]
mov     [ebp+plistofexplicitentries.trustee.ptstrname], eax
lea     eax, [ebp+newacl]
push    eax
push    [ebp+ppdacl]
lea     eax, [ebp+plistofexplicitentries]
movlpd  qword ptr [ebp+plistofexplicitentries.trustee.pmultipletrustee], xmm0
push    eax
push    1
mov     [ebp+plistofexplicitentries.grfaccesspermissions], 0f01ffh
mov     [ebp+plistofexplicitentries.grfaccessmode], 1
mov     [ebp+plistofexplicitentries.trustee.trusteeform], 1
call    ds:setentriesinaclw
mov     esi, eax
test    esi, esi
jnz     short loc_1000f97b
push    eax
push    [ebp+newacl]
push    eax
push    eax
push    4
push    2
lea     eax, [ebp+pobjectname]
push    eax
call    ds:setnamedsecurityinfow
mov     esi, eax
mov     eax, [ebp+ppsecuritydescriptor]
test    eax, eax
jz      short loc_1000f98c
push    eax
call    ds:localfree
mov     eax, [ebp+newacl]
test    eax, eax
jz      short loc_1000f99d
push    eax
call    ds:localfree
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+4]
mov     edx, ebx
call    sub_10002ff0
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     ecx, [ebp+var_4]
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000f9f0
mov     eax, large fs:0
push    eax
sub     esp, 4ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_8]
mov     edi, [ebp+lpservicestartname]
mov     esi, [ebp+lpservicename]
mov     [ebp+lpdisplayname], eax
mov     eax, [ebp+arg_c]
push    2
mov     [ebp+lpbinarypathname], eax
mov     eax, [ebp+arg_10]
push    0
mov     [ebp+var_54], eax
mov     eax, [ebp+arg_18]
push    0
mov     [ebp+var_58], edi
mov     [ebp+lppassword], eax
call    ds:openscmanagerw
mov     ebx, eax
test    ebx, ebx
jnz     short loc_1000fa58
call    sub_10008ad0
jmp     loc_1000fb60
push    [ebp+lppassword]
push    edi
push    0
push    0
push    0
push    [ebp+lpbinarypathname]
push    1
push    2
push    10h
push    12h
push    [ebp+lpdisplayname]
push    esi
push    ebx
call    ds:createservicew
mov     edi, eax
test    edi, edi
jnz     short loc_1000fa8a
call    sub_10008ad0
mov     esi, eax
jmp     loc_1000fb50
lea     eax, [ebp+info]
mov     [ebp+info], 1
push    eax
push    3
push    edi
call    ds:changeserviceconfig2w
test    eax, eax
jz      loc_1000fb3b
mov     eax, [ebp+var_54]
mov     [ebp+var_30], eax
lea     eax, [ebp+var_30]
push    eax
push    1
push    edi
call    ds:changeserviceconfig2w
test    eax, eax
jz      short loc_1000fb3b
lea     eax, [ebp+var_28]
mov     [ebp+var_28], 1
mov     [ebp+var_34], eax
lea     eax, [ebp+var_44]
push    eax
push    2
push    edi
mov     [ebp+var_24], 0ea60h
mov     [ebp+var_20], 1
mov     [ebp+var_1c], 0ea60h
mov     [ebp+var_18], 1
mov     [ebp+var_14], 0ea60h
mov     [ebp+var_44], 0ffffffffh
mov     [ebp+var_40], 0
mov     [ebp+var_3c], 0
mov     [ebp+var_38], 3
call    ds:changeserviceconfig2w
test    eax, eax
jz      short loc_1000fb3b
mov     edx, [ebp+var_58]
mov     ecx, esi
call    sub_1000f750
mov     esi, eax
test    esi, esi
jz      short loc_1000fb37
jle     short loc_1000fb42
movzx   esi, si
or      esi, 80070000h
jmp     short loc_1000fb42
xor     esi, esi
jmp     short loc_1000fb42
call    sub_10008ad0
mov     esi, eax
push    edi
mov     [ebp+var_4], 9
call    ds:closeservicehandle
push    ebx
mov     [ebp+var_4], 0ah
call    ds:closeservicehandle
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    1ch
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_4]
push    [ebp+arg_8]
test    ecx, ecx
jnz     short loc_1000fb99
call    sub_1000fcc0
pop     ebp
retn    0ch
call    sub_1000fbb0
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_0]
mov     [ebp+var_4], edx
push    esi
mov     esi, ecx
test    eax, eax
jnz     short loc_1000fbcf
mov     eax, 80004003h
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebx
push    edi
push    offset dword_100203fc
push    30h
mov     dword ptr [eax], 0
mov     edi, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_1000fc39
mov     edi, dword_10020788
xorps   xmm0, xmm0
mov     dword ptr [ebx+4], 0
mov     dword ptr [ebx], offset ??_7?$ccomaggobject@vsetuphelper@scheduler@@@atl@@6b@
movups  xmmword ptr [ebx+14h], xmm0
movq    qword ptr [ebx+24h], xmm0
mov     byte ptr [ebx+2ch], 0
mov     [ebx+10h], esi
mov     dword ptr [ebx+0ch], offset ??_7?$ccomcontainedobject@vsetuphelper@scheduler@@@atl@@6b@
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, 8007000eh
jmp     short loc_1000fc3b
xor     ebx, ebx
test    ebx, ebx
jz      short loc_1000fcb5
xor     esi, esi
lea     edi, [ebx+14h]
push    esi
push    esi
push    edi
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_1000fc66
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_1000fc68
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_1000fc6e
mov     byte ptr [edi+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     ecx, ecx
test    eax, eax
cmovs   ecx, eax
xor     edi, edi
test    ecx, ecx
cmovs   edi, ecx
test    edi, edi
jnz     short loc_1000fca2
push    [ebp+arg_0]
mov     eax, [ebx]
push    [ebp+var_4]
push    ebx
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jz      short loc_1000fcb5
mov     edx, [ebx]
push    1
mov     esi, [edx+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
mov     eax, edi
pop     edi
pop     ebx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, [ebp+arg_0]
mov     [ebp+var_4], edx
test    eax, eax
jnz     short loc_1000fcdb
mov     eax, 80004003h
mov     esp, ebp
pop     ebp
retn    4
push    ebx
push    esi
push    edi
push    offset dword_100203fc
push    24h
mov     dword ptr [eax], 0
mov     edi, 8007000eh
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
mov     [ebp+var_8], ebx
test    ebx, ebx
jz      short loc_1000fd3c
mov     edi, dword_10020788
xorps   xmm0, xmm0
mov     dword ptr [ebx+4], 0
movups  xmmword ptr [ebx+8], xmm0
movq    qword ptr [ebx+18h], xmm0
mov     byte ptr [ebx+20h], 0
mov     dword ptr [ebx], offset ??_7?$ccomobject@vsetuphelper@scheduler@@@atl@@6b@
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, 8007000eh
jmp     short loc_1000fd3e
xor     ebx, ebx
test    ebx, ebx
jz      short loc_1000fdb1
xor     esi, esi
lea     edi, [ebx+8]
push    esi
push    esi
push    edi
call    ds:initializecriticalsectionex
test    eax, eax
jnz     short loc_1000fd69
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_1000fd6b
movzx   esi, si
or      esi, 80070000h
test    esi, esi
js      short loc_1000fd71
mov     byte ptr [edi+18h], 1
xor     eax, eax
test    esi, esi
cmovs   eax, esi
xor     edi, edi
test    eax, eax
cmovs   edi, eax
test    edi, edi
jnz     short loc_1000fd9e
push    [ebp+arg_0]
mov     eax, [ebx]
push    [ebp+var_4]
push    ebx
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jz      short loc_1000fdb1
mov     edx, [ebx]
push    1
mov     esi, [edx+14h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, ebx
call    esi
mov     eax, edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000fe10
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_0]
push    [ebp+arg_8]
push    [ebp+arg_4]
mov     ecx, [eax+4]
push    ecx
mov     eax, [ecx]
mov     esi, [eax]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000fe10
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_1000fe10
mov     eax, large fs:0
push    eax
push    esi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_8]
test    edx, edx
jnz     short loc_1000fec3
mov     eax, 80004003h
pop     ebp
retn    0ch
mov     eax, [ebp+arg_4]
push    edi
xor     edi, edi
mov     dword ptr [edx], 0
cmp     [eax], edi
jnz     short loc_1000ff08
cmp     [eax+4], edi
jnz     short loc_1000ff08
cmp     dword ptr [eax+8], 0c0h
jnz     short loc_1000ff08
cmp     dword ptr [eax+0ch], 46000000h
jnz     short loc_1000ff08
mov     ecx, [ebp+arg_0]
mov     [edx], ecx
push    esi
push    ecx
mov     eax, [ecx]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
mov     eax, edi
pop     edi
pop     ebp
retn    0ch
mov     ecx, [ebp+arg_0]
push    edx
push    eax
mov     edx, offset off_1001958c
lea     ecx, [ecx+0ch]
call    sub_10003820
mov     edi, eax
pop     edi
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
or      ebx, 0ffffffffh
lock xadd [eax+4], ebx
dec     ebx
jnz     short loc_1000ff8e
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_1000ff75
mov     eax, [edi]
push    1
mov     esi, [eax+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+arg_8]
mov     ecx, [ebp+arg_0]
mov     edx, offset off_1001958c
push    [ebp+arg_4]
call    sub_10003820
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    ebx
or      ebx, 0ffffffffh
lock xadd [eax+4], ebx
dec     ebx
jnz     short loc_1001002e
push    esi
push    edi
mov     edi, dword_10020788
mov     eax, [edi]
mov     esi, [eax+4]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, [ebp+arg_0]
test    edi, edi
jz      short loc_10010015
mov     eax, [edi]
push    1
mov     esi, [eax+14h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
mov     edi, dword_10020788
mov     edx, [edi]
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomaggobject@vsetuphelper@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
cmp     byte ptr [ebx+2ch], 0
lea     eax, [ebx+14h]
jz      short loc_10010080
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_10010091
push    30h
push    ebx
call    sub_10012c63
add     esp, 8
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     edi, dword_10020788
mov     dword ptr [ebx], offset ??_7?$ccomobject@vsetuphelper@scheduler@@@atl@@6b@
mov     dword ptr [ebx+4], 0c0000001h
mov     eax, [edi]
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
cmp     byte ptr [ebx+20h], 0
lea     eax, [ebx+8]
jz      short loc_100100e0
push    eax
mov     byte ptr [eax+18h], 0
call    ds:deletecriticalsection
test    [ebp+arg_0], 1
jz      short loc_100100f1
push    24h
push    ebx
call    sub_10012c63
add     esp, 8
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     ebx, edx
xor     edi, edi
test    ebx, ebx
jz      short loc_10010116
cmp     ebx, 7fffffffh
jbe     short loc_1001011b
mov     edi, 80070057h
test    edi, edi
js      short loc_1001014d
mov     esi, ebx
mov     eax, ecx
test    ebx, ebx
jz      short loc_10010135
cmp     word ptr [eax], 0
jz      short loc_10010135
add     eax, 2
sub     esi, 1
jnz     short loc_10010127
xor     eax, eax
mov     edi, 80070057h
test    esi, esi
cmovnz  edi, eax
mov     eax, ebx
sub     eax, esi
neg     esi
sbb     esi, esi
and     esi, eax
jmp     short loc_1001014f
xor     esi, esi
test    edi, edi
js      short loc_100101a7
lea     ecx, [ecx+esi*2]
sub     edx, esi
jz      short loc_10010189
mov     edi, [ebp+arg_0]
mov     eax, edx
sub     eax, ebx
add     eax, 7ffffffeh
add     eax, esi
sub     edi, ecx
nop     word ptr [eax+eax+00h]
test    eax, eax
jz      short loc_10010189
movzx   esi, word ptr [edi+ecx]
test    si, si
jz      short loc_10010189
mov     [ecx], si
dec     eax
add     ecx, 2
sub     edx, 1
jnz     short loc_10010170
test    edx, edx
lea     eax, [ecx-2]
pop     edi
cmovnz  eax, ecx
xor     ecx, ecx
test    edx, edx
pop     esi
pop     ebx
mov     [eax], cx
mov     eax, 8007007ah
cmovnz  eax, ecx
pop     ebp
retn    4
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100101b0
mov     eax, large fs:0
push    eax
sub     esp, 46ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
push    1
push    0
push    0
call    ds:openscmanagerw
mov     ebx, eax
mov     [ebp+hscmanager], ebx
test    ebx, ebx
jnz     short loc_10010200
call    sub_10008ad0
jmp     loc_100103e3
lea     eax, [ebp+pcbbuffer]
mov     [ebp+pcbbuffer], 101h
push    eax
lea     eax, [ebp+buffer]
push    eax
call    ds:getusernamew
test    eax, eax
jnz     short loc_10010229
call    sub_10008ad0
jmp     short loc_1001026d
push    offset asmartftp_0
mov     edx, 101h
lea     ecx, [ebp+servicename]
call    sub_10010ce0
mov     esi, eax
test    esi, esi
jns     short loc_10010256
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     ebx, [ebp+hscmanager]
jmp     short loc_1001026f
lea     eax, [ebp+buffer]
mov     edx, 101h
push    eax
lea     ecx, [ebp+servicename]
call    sub_10010100
mov     esi, eax
test    esi, esi
jns     short loc_10010288
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     ebx, [ebp+hscmanager]
jmp     loc_100103d3
push    14h
lea     eax, [ebp+servicename]
push    eax
push    ebx
call    ds:openservicew
mov     esi, eax
mov     [ebp+hscmanager], esi
test    esi, esi
jnz     short loc_100102b0
call    sub_10008ad0
mov     esi, eax
jmp     loc_100103d3
lea     eax, [ebp+servicestatus]
push    eax
push    esi
call    ds:queryservicestatus
test    eax, eax
jz      short loc_100102ef
mov     eax, [ebp+servicestatus.dwcurrentstate]
cmp     eax, 4
jz      loc_100103be
cmp     eax, 1
jz      short loc_100102e0
mov     esi, 80004005h
jmp     loc_100103c0
push    0
push    0
push    esi
call    ds:startservicew
test    eax, eax
jnz     short loc_100102fb
call    sub_10008ad0
mov     esi, eax
jmp     loc_100103c0
push    38h
lea     eax, [ebp+pnotifybuffer.pfnnotifycallback]
mov     [ebp+pnotifybuffer.dwversion], 2
push    0
push    eax
call    memset
add     esp, 0ch
mov     [ebp+pnotifybuffer.pfnnotifycallback], offset nullsub_1
lea     eax, [ebp+pnotifybuffer]
push    eax
push    9
push    esi
call    ds:notifyservicestatuschangew
mov     esi, eax
test    esi, esi
jnz     loc_10010401
mov     esi, [ebp+pnotifybuffer.dwnotificationstatus]
test    esi, esi
jnz     loc_10010401
call    ds:gettickcount64
mov     edi, eax
mov     esi, edx
add     edi, 7530h
adc     esi, 0
cmp     [ebp+pnotifybuffer.servicestatus.dwcurrentstate], 4
mov     [ebp+pcbbuffer], esi
jz      short loc_100103be
nop     dword ptr [eax+00h]
call    ds:gettickcount64
mov     ecx, eax
cmp     edx, esi
ja      loc_1001040e
jb      short loc_1001038a
cmp     ecx, edi
jnb     loc_1001040e
mov     eax, edi
push    1
sub     eax, ecx
push    eax
call    ds:sleepex
mov     esi, eax
test    esi, esi
jz      short loc_1001040e
cmp     esi, 0c0h
jnz     short loc_100103ff
mov     esi, [ebp+pnotifybuffer.servicestatus.dwwin32exitcode]
test    esi, esi
jnz     short loc_10010401
cmp     [ebp+pnotifybuffer.servicestatus.dwcurrentstate], 4
mov     esi, [ebp+pcbbuffer]
jnz     short loc_10010370
xor     esi, esi
mov     [ebp+var_4], 0ch
push    [ebp+hscmanager]
call    ds:closeservicehandle
push    ebx
mov     [ebp+var_4], 0dh
call    ds:closeservicehandle
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    esi, esi
jle     short loc_100103c0
movzx   esi, si
or      esi, 80070000h
jmp     short loc_100103c0
mov     esi, 80070426h
jmp     short loc_100103c0
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, ecx
mov     ecx, 2
mul     ecx
test    edx, edx
ja      short loc_10010445
jb      short loc_1001043a
cmp     eax, 0ffffffffh
ja      short loc_10010445
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+arg_0]
mov     eax, 80070216h
mov     dword ptr [ecx], 0ffffffffh
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10010460
mov     eax, large fs:0
push    eax
sub     esp, 8
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
mov     dword ptr [ebx], 0
mov     [ebp+ppunk], 0
lea     eax, [ebp+ppunk]
mov     [ebp+var_4], 0
push    eax
push    0
push    offset rguid
call    ds:getactiveobject
mov     edi, eax
test    edi, edi
js      short loc_100104d2
mov     eax, [ebp+ppunk]
push    ebx
push    offset stru_10019314
push    eax
mov     ecx, [eax]
mov     esi, [ecx]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
mov     [ebp+var_4], 2
mov     ecx, [ebp+ppunk]
test    ecx, ecx
jz      short loc_100104f0
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10010510
mov     eax, large fs:0
push    eax
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, ecx
lea     eax, [ebp+psessionid]
push    eax
call    ds:getcurrentprocessid
push    eax
call    ds:processidtosessionid
test    eax, eax
jnz     short loc_1001056e
call    sub_10008ad0
mov     esi, eax
test    esi, esi
jns     short loc_1001056e
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     loc_10010781
cmp     [ebp+psessionid], 0
jnz     short loc_1001059a
mov     ecx, ebx
call    sub_10010460
test    eax, eax
jns     loc_1001077f
call    sub_100101b0
mov     esi, eax
test    esi, esi
js      short loc_1001055d
mov     ecx, ebx
call    sub_10010460
jmp     loc_10010781
mov     dword ptr [ebx], 0
mov     [ebp+ppbc], 0
lea     eax, [ebp+ppbc]
mov     [ebp+var_4], 0
push    eax
push    0
call    ds:createbindctx
mov     edi, eax
test    edi, edi
jns     short loc_100105e7
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 1
mov     ecx, [ebp+ppbc]
test    ecx, ecx
jz      loc_10010701
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
jmp     loc_100106f7
xorps   xmm0, xmm0
mov     [ebp+var_18], 0
movq    qword ptr [ebp+pv], xmm0
mov     [ebp+pv], 0
mov     [ebp+pv+4], 0
mov     [ebp+var_18], 0
push    1
push    offset asc_100195c8
lea     ecx, [ebp+pv]
mov     byte ptr [ebp+var_4], 2
call    sub_10010850
mov     edi, eax
test    edi, edi
jns     short loc_1001065d
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp+pv]
test    eax, eax
jz      short loc_10010643
push    eax
call    ds:cotaskmemfree
mov     [ebp+pv], 0
mov     [ebp+pv+4], 0
mov     [ebp+var_18], 0
mov     [ebp+var_4], 3
jmp     loc_100106ea
push    17h
push    offset asmartftpapplic
lea     ecx, [ebp+pv]
call    sub_100107d0
mov     edi, eax
test    edi, edi
jns     short loc_100106a8
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp+pv]
test    eax, eax
jz      short loc_10010691
push    eax
call    ds:cotaskmemfree
mov     [ebp+pv], 0
mov     [ebp+pv+4], 0
mov     [ebp+var_18], 0
mov     [ebp+var_4], 4
jmp     short loc_100106ea
lea     eax, [ebp+pv]
mov     edx, ebx
mov     [ebp+var_30], eax
lea     ecx, [ebp+var_30]
lea     eax, [ebp+ppbc]
mov     [ebp+var_2c], eax
call    sub_10010a00
mov     edi, eax
mov     eax, [ebp+pv]
test    eax, eax
jz      short loc_100106d5
push    eax
call    ds:cotaskmemfree
mov     [ebp+pv], 0
mov     [ebp+pv+4], 0
mov     [ebp+var_18], 0
mov     [ebp+var_4], 5
mov     eax, [ebp+ppbc]
test    eax, eax
jz      short loc_10010701
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 0ffffffffh
test    edi, edi
jns     short loc_1001077f
mov     ecx, ebx
call    sub_10010460
test    eax, eax
jns     short loc_1001077f
mov     [ebp+var_24], 0
lea     eax, [ebp+var_24]
mov     [ebp+var_4], 6
push    eax
call    sub_100115d0
mov     edi, eax
add     esp, 4
test    edi, edi
jns     short loc_10010743
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_1001075d
mov     eax, [ebp+var_24]
push    ebx
push    offset stru_10019314
push    eax
mov     ecx, [eax]
mov     esi, [ecx]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
mov     [ebp+var_4], 8
mov     ecx, [ebp+var_24]
test    ecx, ecx
jz      short loc_1001077b
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
jmp     short loc_10010781
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jz      short loc_100107b6
push    eax
call    ds:cotaskmemfree
mov     dword ptr [esi], 0
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+4], 0
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     eax, [esi+4]
cmp     eax, 0ffffffffh
jnz     short loc_10010802
mov     eax, [esi]
test    eax, eax
jnz     short loc_100107ec
mov     [esi+4], eax
jmp     short loc_10010802
lea     edx, [eax+2]
nop
mov     cx, [eax]
add     eax, 2
test    cx, cx
jnz     short loc_100107f0
sub     eax, edx
sar     eax, 1
mov     [esi+4], eax
mov     ebx, [ebp+arg_4]
mov     ecx, esi
add     eax, ebx
push    eax
call    sub_100108f0
mov     edi, eax
test    edi, edi
js      short loc_1001083b
mov     edx, [esi+4]
lea     ecx, [ebx+ebx]
push    ecx
mov     ecx, [esi]
push    [ebp+src]
lea     eax, [ecx+edx*2]
push    eax
call    memcpy
add     [esi+4], ebx
add     esp, 0ch
mov     ecx, [esi+4]
xor     edx, edx
mov     eax, [esi]
mov     [eax+ecx*2], dx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
pop     ecx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+src]
push    ebx
mov     ebx, ecx
push    esi
push    edi
test    eax, eax
jz      short loc_100108b6
mov     esi, [ebp+arg_4]
cmp     esi, 0ffffffffh
jnz     short loc_1001087f
mov     esi, eax
lea     ecx, [esi+2]
nop     dword ptr [eax]
mov     ax, [esi]
add     esi, 2
test    ax, ax
jnz     short loc_10010870
sub     esi, ecx
sar     esi, 1
push    esi
mov     ecx, ebx
call    sub_100108f0
mov     [ebp+var_4], eax
test    eax, eax
js      short loc_100108d9
lea     edi, [esi+esi]
push    edi
push    [ebp+src]
push    dword ptr [ebx]
call    memcpy
mov     eax, [ebx]
add     esp, 0ch
xor     ecx, ecx
mov     [edi+eax], cx
mov     eax, [ebp+var_4]
mov     [ebx+4], esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [ebx]
test    eax, eax
jz      short loc_100108c9
push    eax
call    ds:cotaskmemfree
mov     dword ptr [ebx], 0
mov     dword ptr [ebx+4], 0
xor     eax, eax
mov     dword ptr [ebx+8], 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
sub     esp, 8
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     edi, [esi+8]
cmp     edi, 0ffffffffh
jnz     short loc_10010948
mov     ecx, [esi+4]
cmp     ecx, edi
jnz     short loc_10010932
mov     ecx, [esi]
test    ecx, ecx
jnz     short loc_10010918
mov     [esi+4], ecx
jmp     short loc_10010932
lea     edi, [ecx+2]
nop     dword ptr [eax+eax+00h]
mov     ax, [ecx]
add     ecx, 2
test    ax, ax
jnz     short loc_10010920
sub     ecx, edi
sar     ecx, 1
mov     [esi+4], ecx
cmp     dword ptr [esi], 0
jz      short loc_1001093f
lea     edi, [ecx+1]
mov     [esi+8], edi
jmp     short loc_10010948
mov     dword ptr [esi+8], 0
xor     edi, edi
lea     ebx, [edx+1]
test    edi, edi
jnz     short loc_10010976
lea     eax, ds:4[edx*4]
push    eax
call    ds:cotaskmemalloc
mov     [esi], eax
test    eax, eax
jz      short loc_100109da
xor     ecx, ecx
mov     [eax], cx
xor     eax, eax
mov     [esi+8], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
cmp     ebx, edi
jbe     short loc_100109ed
lea     eax, [ebp+var_8]
mov     ecx, edi
push    eax
call    sub_10010420
add     esp, 4
mov     [ebp+var_4], eax
test    eax, eax
jns     short loc_100109a5
mov     ecx, [ebp+4]
mov     edx, eax
call    sub_10002ff0
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [ebp+var_8]
lea     ecx, [edi+800h]
sub     eax, edi
cmp     eax, 800h
cmovbe  ecx, edi
cmp     ebx, ecx
cmovbe  ebx, ecx
mov     ecx, [esi]
lea     eax, [ebx+ebx]
push    eax
test    ecx, ecx
jz      short loc_100109d0
push    ecx
call    ds:cotaskmemrealloc
jmp     short loc_100109d6
call    ds:cotaskmemalloc
test    eax, eax
jnz     short loc_100109e8
mov     eax, 8007000eh
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     [esi], eax
mov     [esi+8], ebx
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10010a00
mov     eax, large fs:0
push    eax
sub     esp, 20h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, edx
mov     [ebp+var_2c], eax
mov     ebx, ecx
mov     [ebp+var_28], ebx
mov     dword ptr [eax], 0
mov     [ebp+pprot], 0
lea     eax, [ebp+pprot]
mov     [ebp+var_4], 0
push    eax
push    0
call    ds:getrunningobjecttable
mov     edi, eax
test    edi, edi
jns     short loc_10010a6a
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_10010bcb
mov     [ebp+var_1c], 0
mov     byte ptr [ebp+var_4], 2
mov     eax, [ebp+pprot]
mov     ecx, [eax]
mov     esi, [ecx+24h]
lea     ecx, [ebp+var_1c]
push    ecx
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_10010aa1
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     loc_10010bb0
mov     [ebp+var_18], 0
mov     byte ptr [ebp+var_4], 5
mov     eax, [ebp+var_1c]
push    0
mov     ecx, [eax]
mov     esi, [ecx+0ch]
lea     ecx, [ebp+var_18]
push    ecx
push    1
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
jnz     loc_10010b90
nop
mov     [ebp+pv], 0
mov     byte ptr [ebp+var_4], 6
lea     edx, [ebp+pv]
mov     eax, [ebp+var_18]
push    edx
push    0
mov     ecx, [eax]
mov     esi, [ecx+50h]
mov     ecx, [ebx+4]
push    dword ptr [ecx]
mov     ecx, esi
push    eax
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
js      short loc_10010b35
mov     eax, [ebx]
lea     ecx, [ebp+arglist]
push    ecx
push    dword ptr [eax]
push    [ebp+pv]
call    sub_10010cc0
add     esp, 0ch
cmp     eax, 1
mov     eax, [ebp+pv]
setz    bl
test    eax, eax
jz      short loc_10010b28
push    eax
mov     byte ptr [ebp+var_4], 7
call    ds:cotaskmemfree
test    bl, bl
jnz     loc_10010c07
mov     ebx, [ebp+var_28]
jmp     short loc_10010b47
mov     eax, [ebp+pv]
test    eax, eax
jz      short loc_10010b47
push    eax
mov     byte ptr [ebp+var_4], 8
call    ds:cotaskmemfree
mov     byte ptr [ebp+var_4], 12h
mov     ecx, [ebp+var_18]
test    ecx, ecx
jz      short loc_10010b69
mov     [ebp+var_18], 0
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     byte ptr [ebp+var_4], 5
mov     eax, [ebp+var_1c]
push    0
mov     ecx, [eax]
mov     esi, [ecx+0ch]
lea     ecx, [ebp+var_18]
push    ecx
push    1
push    eax
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
jz      loc_10010ad0
mov     edi, 80070490h
mov     byte ptr [ebp+var_4], 13h
mov     eax, [ebp+var_18]
test    eax, eax
jz      short loc_10010bb0
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     byte ptr [ebp+var_4], 14h
mov     eax, [ebp+var_1c]
test    eax, eax
jz      short loc_10010bcb
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     [ebp+var_4], 15h
mov     ecx, [ebp+pprot]
test    ecx, ecx
jz      short loc_10010be9
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     [ebp+pv], 0
mov     byte ptr [ebp+var_4], 9
mov     eax, [ebp+pprot]
mov     ecx, [eax]
mov     esi, [ecx+18h]
lea     ecx, [ebp+pv]
push    ecx
push    [ebp+var_18]
mov     ecx, esi
push    eax
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_10010c3e
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_10010c5a
mov     eax, [ebp+pv]
push    [ebp+var_2c]
push    offset stru_10019314
mov     ecx, [eax]
push    eax
mov     esi, [ecx]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
mov     byte ptr [ebp+var_4], 0eh
mov     eax, [ebp+pv]
test    eax, eax
jz      loc_10010b95
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
jmp     loc_10010b95
mov     eax, offset dword_10020840
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    [ebp+arglist]
push    0
push    edx
push    0ffffffffh
push    ecx
call    sub_10010c80
mov     ecx, [eax]
push    dword ptr [eax+4]
or      ecx, 1
push    ecx
call    ds:__stdio_common_vswscanf
add     esp, 1ch
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+buffer]
lea     eax, [ebp+arglist]
mov     edx, [ebp+format]
push    eax
push    ecx
call    sub_10010c90
add     esp, 8
pop     ebp
retn
push    ebp
mov     ebp, esp
xor     eax, eax
test    edx, edx
jz      short loc_10010cf1
cmp     edx, 7fffffffh
jbe     short loc_10010cf6
mov     eax, 80070057h
test    eax, eax
js      short loc_10010d48
test    edx, edx
jz      short loc_10010d2d
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, 7ffffffeh
sub     esi, edx
sub     edi, ecx
nop     dword ptr [eax+00h]
lea     eax, [esi+edx]
test    eax, eax
jz      short loc_10010d2b
movzx   eax, word ptr [edi+ecx]
test    ax, ax
jz      short loc_10010d2b
mov     [ecx], ax
add     ecx, 2
sub     edx, 1
jnz     short loc_10010d10
pop     edi
pop     esi
test    edx, edx
lea     eax, [ecx-2]
cmovnz  eax, ecx
xor     ecx, ecx
test    edx, edx
mov     [eax], cx
mov     eax, 8007007ah
cmovnz  eax, ecx
pop     ebp
retn    4
test    edx, edx
jz      short loc_10010d51
xor     edx, edx
mov     [ecx], dx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    offset ppsf
push    [ebp+this]
call    ds:ndrcstdstubbuffer_release
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     edi, ecx
push    ebx
mov     word ptr [edi+0ch], 0
mov     byte ptr [edi+0eh], 0
mov     [edi], ebx
mov     eax, [ebx]
mov     esi, [eax+64h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
setnz   cl
mov     [edi+0dh], cl
test    eax, eax
jnz     loc_10010e55
mov     eax, [ebx]
mov     esi, [eax+1ch]
lea     eax, [ebp+var_8]
push    eax
push    ebx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10010dfd
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
cmp     [ebp+var_8], 1
jz      short loc_10010e1b
mov     eax, 80070057h
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [edi]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+50h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
setnz   cl
mov     [edi+0ch], cl
test    eax, eax
jnz     short loc_10010e55
mov     ecx, [edi]
mov     eax, [ecx]
mov     esi, [eax+60h]
lea     eax, [edi+8]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_10010dde
mov     ecx, [ebp+var_4]
xor     eax, eax
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, ecx
cmp     byte ptr [edi+0eh], 0
jnz     short loc_10010ec7
mov     eax, [edi]
mov     byte ptr [edi+0eh], 1
push    eax
mov     edx, [eax]
mov     esi, [edx+2ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10010ea9
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_10010f68
mov     eax, [edi]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+50h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
jz      loc_10010f5f
mov     byte ptr [edi+0ch], 1
cmp     byte ptr [edi+0dh], 0
jnz     loc_10010fae
cmp     byte ptr [edi+0ch], 0
jnz     loc_10010fae
mov     eax, [edi]
lea     ebx, [edi+4]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+2ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_10010f11
mov     ecx, [edi]
push    0
push    ebx
push    ecx
mov     eax, [ecx]
mov     esi, [eax+38h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10010f83
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
test    esi, esi
js      loc_10010fb3
mov     ecx, [ebp+arg_0]
mov     eax, [ebx]
mov     dx, [eax]
cmp     dx, [ecx]
jnz     short loc_10010f96
test    dx, dx
jz      short loc_10010f4a
mov     dx, [eax+2]
cmp     dx, [ecx+2]
jnz     short loc_10010f96
add     eax, 4
add     ecx, 4
test    dx, dx
jnz     short loc_10010f28
xor     esi, esi
neg     esi
sbb     esi, esi
and     esi, 80070490h
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
mov     ecx, edi
call    sub_100111d0
mov     esi, eax
test    esi, esi
jns     loc_10010ec7
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
cmp     dword ptr [ebx], 0
jnz     short loc_10010f23
mov     esi, 80004005h
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
sbb     esi, esi
or      esi, 1
neg     esi
sbb     esi, esi
and     esi, 80070490h
mov     eax, esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
mov     esi, 80070490h
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
push    edi
mov     edi, ecx
mov     ecx, [edi]
mov     eax, [ecx]
mov     esi, [eax+60h]
lea     eax, [ebp+var_c]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_1001100c
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [edi+8]
mov     edx, [ebp+var_c]
lea     eax, [ecx+1]
cmp     edx, eax
jnz     short loc_10011097
mov     eax, [edi]
push    eax
mov     edx, [eax]
mov     esi, [edx+50h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
jz      short loc_10011046
mov     ecx, edi
call    sub_100111d0
pop     edi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [edi]
mov     eax, [ecx]
mov     esi, [eax+1ch]
lea     eax, [ebp+var_8]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_10010ff0
mov     eax, [ebp+var_8]
cmp     eax, 0fh
jnz     short loc_10011080
mov     byte ptr [edi+0ch], 1
xor     eax, eax
pop     edi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
cmp     eax, 1
jnz     short loc_100110c8
xor     eax, eax
pop     edi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
lea     eax, [ecx+2]
cmp     edx, eax
jnz     short loc_100110c8
mov     ecx, [edi]
mov     eax, [ecx]
mov     esi, [eax+1ch]
lea     eax, [ebp+var_8]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      loc_10010ff0
cmp     [ebp+var_8], 0fh
jz      loc_1001102f
mov     ecx, [ebp+var_4]
mov     eax, 80004005h
pop     edi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, ecx
push    ebx
mov     [ebp+var_c], eax
push    esi
mov     ebx, [eax]
mov     byte ptr [eax+0fh], 0
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [ebx]
push    ebx
mov     esi, [eax+50h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
jz      short loc_10011130
mov     dword ptr [edi], offset value
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [ebx]
mov     esi, [eax+18h]
lea     eax, [ebp+var_8]
push    eax
push    ebx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10011169
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [ebp+var_8]
cmp     eax, 0fh
jz      short loc_10011115
cmp     eax, 3
jz      short loc_10011198
cmp     eax, 4
jz      short loc_10011198
cmp     eax, 0dh
jz      short loc_10011198
mov     eax, 80004005h
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [ebp+var_c]
push    0
push    edi
push    ebx
mov     byte ptr [eax+0fh], 1
mov     eax, [ebx]
mov     esi, [eax+40h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 8
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
push    edi
mov     edi, ecx
mov     eax, [edi]
push    eax
mov     edx, [eax]
mov     esi, [edx+64h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
setnz   cl
mov     [edi+0dh], cl
test    eax, eax
jnz     loc_10011299
mov     ecx, [edi]
mov     eax, [ecx]
mov     esi, [eax+18h]
lea     eax, [ebp+var_8]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_10011279
mov     eax, [ebp+var_8]
cmp     eax, 0fh
jz      short loc_10011295
mov     ecx, [edi]
mov     esi, [ecx]
cmp     eax, 1
jz      short loc_1001125f
mov     esi, [esi+64h]
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
setnz   cl
mov     [edi+0dh], cl
test    eax, eax
jz      short loc_10011206
xor     eax, eax
pop     edi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     esi, [esi+38h]
lea     eax, [edi+4]
push    0
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_10011299
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     byte ptr [edi+0ch], 1
mov     ecx, [ebp+var_4]
xor     eax, eax
pop     edi
xor     ecx, ebp
pop     esi
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     edx, [ebp+arg_0]
push    esi
push    dword ptr [ecx]
mov     eax, [edx]
push    edx
mov     esi, [eax+10h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+buffer]
lea     ecx, [ebp+arglist]
push    ecx
push    0
push    [ebp+format]
push    [ebp+buffercount]
push    eax
call    sub_10003930
push    dword ptr [eax+4]
push    dword ptr [eax]
call    ds:__stdio_common_vswprintf_s
or      ecx, 0ffffffffh
add     esp, 1ch
test    eax, eax
cmovs   eax, ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 2f8h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+subkey]
push    ebx
push    esi
mov     [ebp+var_2f8], eax
mov     esi, offset source
mov     dword ptr [eax], 0
mov     edx, 3bh
mov     eax, ecx
push    edi
sub     esi, eax
nop     dword ptr [eax+00000000h]
lea     eax, [edx+7fffffc3h]
test    eax, eax
jz      short loc_1001136e
movzx   eax, word ptr [esi+ecx]
test    ax, ax
jz      short loc_1001136e
mov     [ecx], ax
add     ecx, 2
sub     edx, 1
jnz     short loc_10011350
test    edx, edx
lea     eax, [ecx-2]
mov     esi, 8007007ah
cmovnz  eax, ecx
xor     ecx, ecx
mov     [eax], cx
xor     eax, eax
test    edx, edx
cmovnz  esi, eax
jnz     short loc_10011398
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     loc_10011467
push    35h
lea     eax, [ebp+sz]
push    eax
push    offset rguid
call    ds:stringfromguid2
test    eax, eax
jnz     short loc_100113cf
mov     ecx, [ebp+4]
mov     esi, 80004005h
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
lea     ecx, [ebp+var_2c]
mov     esi, offset alocalserver32
mov     eax, ecx
mov     edx, 0fh
sub     esi, eax
lea     eax, [edx+7fffffefh]
test    eax, eax
jz      short loc_100113fe
movzx   eax, word ptr [esi+ecx]
test    ax, ax
jz      short loc_100113fe
mov     [ecx], ax
add     ecx, 2
sub     edx, 1
jnz     short loc_100113e0
test    edx, edx
lea     eax, [ecx-2]
mov     esi, 8007007ah
cmovnz  eax, ecx
xor     ecx, ecx
mov     [eax], cx
xor     eax, eax
test    edx, edx
cmovnz  esi, eax
jnz     short loc_10011425
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
jmp     short loc_10011467
lea     eax, [ebp+pcbdata]
mov     [ebp+pcbdata], 208h
push    eax
lea     eax, [ebp+pvdata]
push    eax
push    0
push    2
push    offset value
lea     eax, [ebp+subkey]
push    eax
push    80000000h
call    ds:reggetvaluew
mov     esi, eax
test    esi, esi
jle     short loc_10011469
movzx   esi, si
or      esi, 80070000h
test    esi, esi
jns     short loc_10011488
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
cmp     [ebp+pvdata], 0
jnz     short loc_100114a8
mov     eax, 80004005h
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_8]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
lea     esi, [ebp+pvdata]
mov     [ebp+lpcommandline], 0
mov     [ebp+var_298], 0
lea     ecx, [esi+2]
mov     [ebp+var_294], 0
nop
mov     ax, [esi]
add     esi, 2
test    ax, ax
jnz     short loc_100114d0
sub     esi, ecx
lea     ecx, [ebp+lpcommandline]
sar     esi, 1
push    esi
call    sub_100108f0
mov     edi, eax
test    edi, edi
js      loc_10011594
mov     ebx, [ebp+lpcommandline]
lea     eax, [ebp+pvdata]
add     esi, esi
push    esi
push    eax
push    ebx
call    memcpy
add     esp, 0ch
xor     eax, eax
mov     [esi+ebx], ax
mov     [ebp+startupinfo.cb], 44h
push    40h
push    eax
lea     eax, [ebp+startupinfo.lpreserved]
push    eax
call    memset
add     esp, 0ch
mov     [ebp+startupinfo.dwflags], 41h
mov     eax, 0ah
mov     [ebp+startupinfo.wshowwindow], ax
lea     eax, [ebp+processinformation]
push    eax
lea     eax, [ebp+startupinfo]
push    eax
push    0
push    0
push    8
push    0
push    0
push    0
push    ebx
push    0
call    ds:createprocessw
test    eax, eax
jnz     short loc_10011576
call    sub_10008ad0
mov     edi, eax
jmp     short loc_100115a4
mov     ecx, [ebp+var_2f8]
mov     eax, [ebp+processinformation.hprocess]
push    [ebp+processinformation.hthread]
mov     [ecx], eax
call    ds:closehandle
xor     edi, edi
jmp     short loc_100115a4
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     ebx, [ebp+lpcommandline]
test    ebx, ebx
jz      short loc_100115af
push    ebx
call    ds:cotaskmemfree
mov     ecx, [ebp+var_8]
mov     eax, edi
pop     edi
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100115d0
mov     eax, large fs:0
push    eax
sub     esp, 1ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     eax, [ebp+arg_0]
mov     [ebp+ppunk], eax
mov     dword ptr [eax], 0
lea     eax, [ebp+phandles]
push    eax
call    sub_10011310
mov     esi, eax
add     esp, 4
test    esi, esi
jns     short loc_1001162a
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     loc_100116b2
mov     esi, [ebp+phandles]
xor     ebx, ebx
nop
call    ds:gettickcount64
mov     edi, eax
mov     [ebp+var_1c], edx
nop     dword ptr [eax+eax+00h]
lea     eax, [ebp+dwindex]
push    eax
lea     eax, [ebp+phandles]
push    eax
push    1
push    3e8h
push    0
call    ds:cowaitformultiplehandles
test    eax, eax
js      short loc_10011661
cmp     [ebp+dwindex], 0
jz      short loc_10011694
call    ds:gettickcount64
sub     eax, edi
sbb     edx, [ebp+var_1c]
mov     [ebp+var_24], edx
jnz     short loc_10011678
cmp     eax, 3e8h
jb      short loc_10011640
push    [ebp+ppunk]
push    0
push    offset rguid
call    ds:getactiveobject
mov     edi, eax
test    edi, edi
jns     short loc_10011699
inc     ebx
cmp     ebx, 1eh
jb      short loc_10011630
mov     edi, 80004002h
test    esi, esi
jz      short loc_100116b0
cmp     esi, 0ffffffffh
jz      short loc_100116b0
push    esi
mov     [ebp+var_4], 0
call    ds:closehandle
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebx
mov     ebx, esp
sub     esp, 8
and     esp, 0fffffff8h
add     esp, 4
push    ebp
mov     ebp, [ebx+4]
mov     [esp+0ch+var_8], ebp
mov     ebp, esp
push    0ffffffffh
push    offset loc_10014da8
mov     eax, large fs:0
push    eax
push    ebx
sub     esp, 80h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp-14h], eax
push    esi
push    edi
push    eax
lea     eax, [ebp-0ch]
mov     large fs:0, eax
mov     eax, ecx
mov     [ebp-1ch], eax
mov     dword ptr [eax], 0
mov     dword ptr [ebp-18h], 0
lea     eax, [ebp-18h]
mov     dword ptr [ebp-4], 0
push    eax
push    offset stru_10019760
push    17h
push    0
push    offset stru_10017a94
call    ds:cocreateinstance
mov     edi, eax
test    edi, edi
js      loc_10011823
mov     esi, [ebp-18h]
xorps   xmm0, xmm0
mov     eax, [esi]
movups  xmmword ptr [ebp-60h], xmm0
mov     edi, [eax+28h]
lea     eax, [ebp-60h]
push    eax
call    ds:variantinit
movups  xmm0, xmmword ptr [ebp-60h]
lea     eax, [ebp-50h]
push    eax
movups  xmmword ptr [ebp-70h], xmm0
xorps   xmm0, xmm0
movups  xmmword ptr [ebp-50h], xmm0
call    ds:variantinit
movups  xmm0, xmmword ptr [ebp-50h]
lea     eax, [ebp-40h]
push    eax
movups  xmmword ptr [ebp-80h], xmm0
xorps   xmm0, xmm0
movups  xmmword ptr [ebp-40h], xmm0
call    ds:variantinit
movups  xmm0, xmmword ptr [ebp-40h]
lea     eax, [ebp-30h]
push    eax
movups  xmmword ptr [ebp-90h], xmm0
xorps   xmm0, xmm0
movups  xmmword ptr [ebp-30h], xmm0
call    ds:variantinit
mov     byte ptr [ebp-4], 4
sub     esp, 10h
movups  xmm0, xmmword ptr [ebp-70h]
mov     eax, esp
mov     ecx, edi
sub     esp, 10h
movups  xmmword ptr [eax], xmm0
mov     eax, esp
sub     esp, 10h
movups  xmm0, xmmword ptr [ebp-80h]
movups  xmmword ptr [eax], xmm0
mov     eax, esp
sub     esp, 10h
movups  xmm0, xmmword ptr [ebp-90h]
movups  xmmword ptr [eax], xmm0
mov     eax, esp
movups  xmm0, xmmword ptr [ebp-30h]
push    esi
movups  xmmword ptr [eax], xmm0
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, eax
lea     eax, [ebp-30h]
push    eax
call    ds:variantclear
lea     eax, [ebp-40h]
push    eax
call    ds:variantclear
lea     eax, [ebp-50h]
push    eax
call    ds:variantclear
lea     eax, [ebp-60h]
push    eax
call    ds:variantclear
test    edi, edi
jns     short loc_10011832
mov     ecx, [ebx+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp-18h]
jmp     short loc_10011841
mov     edx, [ebp-1ch]
xor     eax, eax
mov     ecx, [ebp-18h]
xor     edi, edi
mov     [ebp-18h], eax
mov     [edx], ecx
mov     dword ptr [ebp-4], 5
test    eax, eax
jz      short loc_1001185c
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp-14h]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
mov     esp, ebx
pop     ebx
retn
push    ecx
call    ds:propvariantclear
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10011890
mov     eax, large fs:0
push    eax
sub     esp, 34h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_40], edx
mov     [ebp+var_3c], ecx
mov     eax, [ecx]
mov     esi, [eax+0ch]
lea     eax, [ebp+var_14]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
jns     short loc_100118eb
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
mov     eax, esi
jmp     loc_10011992
mov     eax, [ebp+var_14]
test    eax, eax
jz      loc_10011990
xor     edi, edi
test    eax, eax
jz      loc_10011990
mov     ecx, [ebp+var_3c]
mov     eax, [ecx]
mov     esi, [eax+10h]
lea     eax, [ebp+var_38]
push    eax
push    edi
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_100118da
xorps   xmm0, xmm0
movups  xmmword ptr [ebp+pvar.anonymous_0], xmm0
mov     ecx, [ebp+var_3c]
mov     [ebp+var_4], 0
mov     eax, [ecx]
mov     esi, [eax+14h]
lea     eax, [ebp+pvar]
push    eax
lea     eax, [ebp+var_38]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_100119ad
cmp     word ptr [ebp+pvar.anonymous_0], 0
jz      short loc_10011975
mov     ecx, [ebp+var_40]
mov     eax, [ecx]
mov     esi, [eax+18h]
lea     eax, [ebp+pvar]
push    eax
lea     eax, [ebp+var_38]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     esi, eax
test    esi, esi
js      short loc_100119ad
lea     eax, [ebp+pvar]
mov     [ebp+var_4], 0ffffffffh
push    eax
call    ds:propvariantclear
inc     edi
cmp     edi, [ebp+var_14]
jb      loc_10011900
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+4]
mov     edx, esi
call    sub_10002ff0
lea     eax, [ebp+pvar]
push    eax
call    ds:propvariantclear
mov     eax, esi
jmp     short loc_10011992
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_100119d0
mov     eax, large fs:0
push    eax
sub     esp, 24h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     edi, [ebp+arg_0]
mov     esi, edi
mov     eax, [ebp+arg_4]
neg     esi
mov     ebx, [ebp+arg_c]
mov     [ebp+var_20], eax
sbb     esi, esi
mov     eax, [ebp+arg_8]
mov     [ebp+var_24], eax
lea     eax, [edi+4]
mov     dword ptr [ebx], 0
mov     [ebp+var_4], 0
and     esi, eax
jz      short loc_10011a34
lea     eax, [esi+4]
push    eax
call    ds:entercriticalsection
mov     [ebp+var_1c], esi
push    [ebp+var_20]
lea     eax, [ebp+var_18]
mov     byte ptr [ebp+var_4], 1
lea     ecx, [edi+28h]
mov     [ebp+var_18], 0
push    eax
call    sub_100074c0
mov     eax, [ebp+var_18]
cmp     eax, [edi+2ch]
jz      loc_10011aec
mov     ecx, [eax+18h]
push    ebx
push    [ebp+var_24]
mov     eax, [ecx]
push    ecx
mov     edi, [eax]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, eax
test    esi, esi
jz      short loc_10011a83
add     esi, 4
push    esi
call    ds:leavecriticalsection
mov     eax, edi
jmp     short loc_10011aff
mov     eax, [ebp+var_28]
mov     eax, [eax]
mov     [ebp+var_18], eax
mov     eax, offset loc_10011ae7
retn
mov     eax, [ebp+var_2c]
mov     eax, [eax+10h]
mov     [ebp+var_18], eax
mov     eax, offset loc_10011ae7
retn
mov     eax, [ebp+var_30]
mov     eax, [eax+8]
mov     [ebp+var_18], eax
mov     eax, offset loc_10011ae7
retn
mov     [ebp+var_18], 8007000eh
mov     eax, offset loc_10011ae7
retn
mov     [ebp+var_18], 80070057h
mov     eax, offset loc_10011ae7
retn
mov     [ebp+var_18], 8000000bh
mov     eax, offset loc_10011ae7
retn
mov     [ebp+var_18], 8007023eh
mov     eax, offset loc_10011ae7
retn
mov     eax, [ebp+var_18]
jmp     short loc_10011aff
test    esi, esi
jz      short loc_10011afa
add     esi, 4
push    esi
call    ds:leavecriticalsection
mov     eax, 80070490h
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10011b20
mov     eax, large fs:0
push    eax
sub     esp, 2ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_14], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_10], esp
mov     esi, [ebp+arg_0]
mov     edi, esi
mov     ecx, [ebp+arg_4]
neg     edi
mov     ebx, [ebp+arg_8]
sbb     edi, edi
mov     [ebp+var_20], ecx
lea     eax, [esi+4]
mov     [ebp+var_4], 0
and     edi, eax
jz      short loc_10011b7b
lea     eax, [edi+4]
push    eax
call    ds:entercriticalsection
mov     ecx, [ebp+var_20]
mov     [ebp+var_18], edi
mov     byte ptr [ebp+var_4], 1
lea     eax, [esi+28h]
mov     [ebp+var_1c], eax
test    ebx, ebx
jz      short loc_10011c09
push    ecx
mov     ecx, eax
call    sub_10011d80
push    ebx
mov     ecx, eax
call    sub_1000e1c0
jmp     loc_10011cce
mov     eax, [ebp+var_30]
mov     eax, [eax]
mov     [ebp+var_1c], eax
mov     eax, offset loc_10011c01
retn
mov     eax, [ebp+var_34]
mov     eax, [eax+10h]
mov     [ebp+var_1c], eax
mov     eax, offset loc_10011c01
retn
mov     eax, [ebp+var_38]
mov     eax, [eax+8]
mov     [ebp+var_1c], eax
mov     eax, offset loc_10011c01
retn
mov     [ebp+var_1c], 8007000eh
mov     eax, offset loc_10011c01
retn
mov     [ebp+var_1c], 80070057h
mov     eax, offset loc_10011c01
retn
mov     [ebp+var_1c], 8000000bh
mov     eax, offset loc_10011c01
retn
mov     [ebp+var_1c], 8007023eh
mov     eax, offset loc_10011c01
retn
mov     eax, [ebp+var_1c]
jmp     loc_10011cde
mov     ebx, [ebp+var_20]
push    ebx
call    sub_10007710
mov     ecx, [ebp+var_1c]
and     eax, [ecx+18h]
mov     esi, [ecx+0ch]
lea     edx, ds:0[eax*8]
mov     esi, [edx+esi]
mov     [ebp+var_28], edx
cmp     esi, [ecx+4]
jz      loc_10011cce
mov     eax, [ecx+0ch]
add     eax, edx
mov     [ebp+var_24], 0ch
mov     [ebp+var_2c], eax
lea     edx, [esi+8]
mov     eax, [eax+4]
mov     ecx, [edx]
cmp     ecx, [ebx]
jnz     short loc_10011c72
add     edx, 4
add     ebx, 4
sub     [ebp+var_24], 4
jnb     short loc_10011c46
mov     edx, [ebp+var_2c]
mov     ecx, [edx]
cmp     eax, esi
jnz     short loc_10011c8b
cmp     ecx, esi
jnz     short loc_10011c83
mov     eax, [ebp+var_1c]
mov     eax, [eax+4]
mov     [edx], eax
mov     [edx+4], eax
jmp     short loc_10011c93
cmp     esi, eax
jz      short loc_10011cce
mov     esi, [esi]
mov     ecx, [ebp+var_1c]
mov     ebx, [ebp+var_20]
mov     edx, [ebp+var_28]
jmp     short loc_10011c31
mov     eax, [esi+4]
mov     [edx+4], eax
jmp     short loc_10011c93
cmp     ecx, esi
jnz     short loc_10011c93
mov     eax, [esi]
mov     [edx], eax
mov     ecx, [esi+4]
mov     eax, [esi]
mov     [ecx], eax
mov     ecx, [esi]
mov     eax, [esi+4]
mov     [ecx+4], eax
mov     byte ptr [ebp+var_4], 2
mov     ecx, [esi+18h]
test    ecx, ecx
jz      short loc_10011cbd
mov     eax, [ecx]
push    ecx
mov     ebx, [eax+8]
mov     ecx, ebx
call    ds:___guard_check_icall_fptr
call    ebx
push    1ch
push    esi
call    sub_10012c63
mov     eax, [ebp+var_1c]
add     esp, 8
dec     dword ptr [eax+8]
test    edi, edi
jz      short loc_10011cdc
add     edi, 4
push    edi
call    ds:leavecriticalsection
xor     eax, eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_14]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, edi
neg     esi
sbb     esi, esi
lea     eax, [edi+4]
and     esi, eax
jz      short loc_10011d1f
lea     eax, [esi+4]
push    eax
call    ds:entercriticalsection
mov     edx, [edi+2ch]
push    ebx
call    sub_1000e110
mov     eax, [edi+2ch]
mov     [eax], eax
mov     eax, [edi+2ch]
mov     [eax+4], eax
xor     eax, eax
mov     dword ptr [edi+30h], 0
mov     ebx, [edi+34h]
mov     ecx, [edi+38h]
sub     ecx, ebx
add     ecx, 3
shr     ecx, 2
cmp     ebx, [edi+38h]
cmova   ecx, eax
test    ecx, ecx
jz      short loc_10011d5b
mov     eax, [edi+2ch]
mov     edi, ebx
rep stosd
pop     ebx
test    esi, esi
jz      short loc_10011d6a
add     esi, 4
push    esi
call    ds:leavecriticalsection
pop     edi
xor     eax, eax
pop     esi
pop     ebp
retn    4
push    ebx
mov     ebx, esp
sub     esp, 8
and     esp, 0fffffff8h
add     esp, 4
push    ebp
mov     ebp, [ebx+4]
mov     [esp+0ch+var_8], ebp
mov     ebp, esp
push    0ffffffffh
push    offset loc_10014e70
mov     eax, large fs:0
push    eax
push    ebx
sub     esp, 28h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp-14h], eax
push    esi
push    edi
push    eax
lea     eax, [ebp-0ch]
mov     large fs:0, eax
mov     edi, ecx
mov     eax, [ebx+8]
push    eax
mov     [ebp-2ch], eax
lea     eax, [ebp-18h]
push    eax
mov     dword ptr [ebp-18h], 0
call    sub_100074c0
mov     eax, [ebp-18h]
lea     ecx, [edi+4]
cmp     eax, [ecx]
jnz     loc_10011e86
mov     [ebp-1ch], ecx
mov     dword ptr [ebp-18h], 0
mov     dword ptr [ebp-4], 0
mov     [ebp-34h], ecx
mov     byte ptr [ebp-4], 1
push    1ch
mov     dword ptr [ebp-30h], 0
call    ??2@yapaxi@z
mov     ecx, [ebp-2ch]
add     esp, 4
lea     esi, [eax+8]
movups  xmm0, xmmword ptr [ecx]
mov     byte ptr [ebp-4], 0
push    esi
movups  xmmword ptr [esi], xmm0
mov     dword ptr [esi+10h], 0
mov     [ebp-18h], eax
mov     byte ptr [ebp-25h], 0
call    sub_10007710
push    ecx
lea     ecx, [ebp-1ch]
push    ecx
push    esi
push    eax
lea     eax, [ebp-24h]
mov     ecx, edi
push    eax
call    sub_10011f40
mov     esi, [ebp-24h]
mov     dword ptr [ebp-4], 0ffffffffh
mov     eax, [ebp-18h]
test    eax, eax
jz      short loc_10011e81
mov     dword ptr [ebp-4], 2
mov     ecx, [eax+18h]
test    ecx, ecx
jz      short loc_10011e76
mov     eax, [ecx]
push    ecx
mov     edi, [eax+8]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     eax, [ebp-18h]
push    1ch
push    eax
call    sub_10012c63
add     esp, 8
lea     eax, [esi+18h]
jmp     short loc_10011e89
add     eax, 18h
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     ecx, [ebp-14h]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
mov     esp, ebx
pop     ebx
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10011eb0
mov     eax, large fs:0
push    eax
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     edi, ecx
mov     eax, [edi+4]
test    eax, eax
jz      short loc_10011f09
mov     [ebp+var_4], 0
mov     ecx, [eax+18h]
test    ecx, ecx
jz      short loc_10011efe
mov     eax, [ecx]
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, [edi+4]
push    1ch
push    eax
call    sub_10012c63
add     esp, 8
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ecx+4]
test    eax, eax
jz      short locret_10011f32
push    1ch
push    eax
call    sub_10012c63
add     esp, 8
retn
push    ebp
mov     ebp, esp
and     esp, 0ffffffc0h
sub     esp, 34h
mov     eax, ___security_cookie
xor     eax, esp
mov     [esp+34h+var_4], eax
mov     eax, [ebp+arg_8]
mov     edx, ecx
mov     [esp+34h+var_20], eax
push    ebx
mov     ebx, [ebp+arg_0]
mov     eax, [edx+18h]
and     eax, [ebp+arg_4]
mov     ecx, [edx+0ch]
push    esi
mov     [esp+3ch+var_10], eax
push    edi
mov     eax, [ecx+eax*8+4]
mov     edi, [ebp+arg_c]
mov     [esp+40h+var_8], edx
mov     [esp+40h+var_1c], edi
mov     [esp+40h+var_c], ecx
cmp     eax, [edx+4]
jnz     loc_100120b0
mov     ecx, [edx+8]
cmp     ecx, 9249249h
jz      loc_10012192
mov     esi, [edi+4]
inc     ecx
mov     [esp+40h+var_20], ecx
add     esi, 8
mov     [esp+40h+var_1c], esi
mov     esi, [edx+1ch]
movd    xmm0, ecx
cvtdq2pd xmm0, xmm0
shr     ecx, 1fh
movss   xmm3, dword ptr [edx]
addsd   xmm0, ds:qword_10019a30[ecx*8]
mov     ecx, esi
shr     ecx, 1fh
cvtpd2ps xmm2, xmm0
movd    xmm0, esi
cvtdq2pd xmm0, xmm0
movaps  xmm1, xmm2
addsd   xmm0, ds:qword_10019a30[ecx*8]
cvtpd2ps xmm0, xmm0
divss   xmm1, xmm0
comiss  xmm3, xmm1
jb      short loc_10012033
mov     ecx, [esp+40h+var_20]
mov     esi, [esp+40h+var_c]
mov     [edx+8], ecx
mov     ecx, [edi+4]
mov     edx, [eax+4]
mov     [ecx], eax
mov     ecx, [edi+4]
mov     [ecx+4], edx
mov     ecx, [edi+4]
mov     [eax+4], ecx
mov     ecx, [edi+4]
mov     [edx], ecx
mov     ecx, [edi+4]
mov     edx, [esp+40h+var_10]
mov     dword ptr [edi+4], 0
mov     [esi+edx*8], ecx
mov     [esi+edx*8+4], ecx
mov     [ebx], ecx
mov     byte ptr [ebx+4], 1
jmp     loc_1001216d
divss   xmm2, xmm3
sub     esp, 8
cvtps2pd xmm0, xmm2
movsd   [esp+48h+var_18], xmm0
fld     [esp+48h+var_18]
fstp    [esp+48h+x]
call    ceil
fstp    [esp+48h+var_18]
movsd   xmm0, [esp+48h+var_18]
add     esp, 8
cvtpd2ps xmm0, xmm0
call    __ftoui3
mov     ecx, 8
cmp     eax, ecx
cmova   ecx, eax
cmp     esi, ecx
jnb     short loc_10012084
cmp     esi, 200h
jnb     short loc_10012082
shl     esi, 3
cmp     esi, ecx
jnb     short loc_10012084
mov     esi, ecx
mov     ecx, [esp+40h+var_8]
push    esi
call    sub_10008550
mov     ecx, [esp+40h+var_8]
lea     eax, [esp+40h+var_21]
push    eax
mov     eax, [ebp+arg_4]
push    edi
push    [esp+48h+var_1c]
mov     [esp+4ch+var_21], 0
push    eax
push    ebx
call    sub_10011f40
jmp     loc_1001216d
mov     edx, [esp+40h+var_20]
lea     esi, [eax+8]
mov     edi, 0ch
nop     dword ptr [eax+00h]
mov     ecx, [edx]
cmp     ecx, [esi]
jnz     short loc_100120d5
add     edx, 4
add     esi, 4
sub     edi, 4
jnb     short loc_100120c0
xor     ecx, ecx
jmp     short loc_100120fa
cmp     cl, [esi]
jnz     short loc_100120f5
mov     cl, [edx+1]
cmp     cl, [esi+1]
jnz     short loc_100120f5
mov     cl, [edx+2]
cmp     cl, [esi+2]
jnz     short loc_100120f5
mov     cl, [edx+3]
cmp     cl, [esi+3]
jnz     short loc_100120f5
xor     ecx, ecx
jmp     short loc_100120fa
sbb     ecx, ecx
or      ecx, 1
test    ecx, ecx
jz      short loc_10012167
mov     esi, [esp+40h+var_c]
mov     edx, [esp+40h+var_10]
mov     ecx, [esi+edx*8]
mov     esi, eax
mov     dword ptr [esp+40h+var_18], ecx
nop
cmp     ecx, esi
jz      short loc_10012183
mov     eax, [eax+4]
mov     edi, 0ch
mov     edx, [esp+40h+var_20]
lea     esi, [eax+8]
mov     ecx, [edx]
cmp     ecx, [esi]
jnz     short loc_10012138
add     edx, 4
add     esi, 4
sub     edi, 4
jnb     short loc_10012123
xor     ecx, ecx
jmp     short loc_1001215d
cmp     cl, [esi]
jnz     short loc_10012158
mov     cl, [edx+1]
cmp     cl, [esi+1]
jnz     short loc_10012158
mov     cl, [edx+2]
cmp     cl, [esi+2]
jnz     short loc_10012158
mov     cl, [edx+3]
cmp     cl, [esi+3]
jnz     short loc_10012158
xor     ecx, ecx
jmp     short loc_1001215d
sbb     ecx, ecx
or      ecx, 1
test    ecx, ecx
mov     esi, eax
mov     ecx, dword ptr [esp+40h+var_18]
jnz     short loc_10012110
mov     [ebx], eax
mov     byte ptr [ebx+4], 0
mov     ecx, [esp+40h+var_4]
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
xor     ecx, esp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn    14h
mov     edx, [esp+40h+var_8]
mov     edi, [edx+8]
cmp     edi, 9249249h
jnz     short loc_1001219d
push    offset aunorderedmapse
call    ds:?_xlength_error@std@@yaxpbd@z
mov     ecx, [esp+40h+var_1c]
movss   xmm3, dword ptr [edx]
mov     ecx, [ecx+4]
add     ecx, 8
mov     [esp+40h+var_20], ecx
lea     ecx, [edi+1]
mov     edi, [edx+1ch]
movd    xmm0, ecx
cvtdq2pd xmm0, xmm0
mov     dword ptr [esp+40h+var_18], ecx
shr     ecx, 1fh
addsd   xmm0, ds:qword_10019a30[ecx*8]
mov     ecx, edi
shr     ecx, 1fh
cvtpd2ps xmm2, xmm0
movd    xmm0, edi
cvtdq2pd xmm0, xmm0
movaps  xmm1, xmm2
addsd   xmm0, ds:qword_10019a30[ecx*8]
cvtpd2ps xmm0, xmm0
divss   xmm1, xmm0
comiss  xmm3, xmm1
jb      short loc_10012257
mov     edi, [esp+40h+var_1c]
mov     ecx, dword ptr [esp+40h+var_18]
mov     [edx+8], ecx
mov     edx, [eax+4]
mov     ecx, [edi+4]
mov     [ecx], eax
mov     ecx, [edi+4]
mov     [ecx+4], edx
mov     ecx, [edi+4]
mov     [eax+4], ecx
mov     eax, [edi+4]
mov     [edx], eax
mov     ecx, [edi+4]
mov     edx, [esp+40h+var_10]
mov     dword ptr [edi+4], 0
mov     edi, [esp+40h+var_c]
cmp     [edi+edx*8], esi
jnz     short loc_10012240
mov     [edi+edx*8], ecx
mov     [ebx], ecx
mov     byte ptr [ebx+4], 1
jmp     loc_1001216d
mov     eax, [edi+edx*8+4]
cmp     [eax], ecx
jnz     short loc_1001224c
mov     [edi+edx*8+4], ecx
mov     [ebx], ecx
mov     byte ptr [ebx+4], 1
jmp     loc_1001216d
divss   xmm2, xmm3
sub     esp, 8
cvtps2pd xmm0, xmm2
movsd   [esp+48h+var_18], xmm0
fld     [esp+48h+var_18]
fstp    [esp+48h+x]
call    ceil
fstp    [esp+48h+var_18]
movsd   xmm0, [esp+48h+var_18]
add     esp, 8
cvtpd2ps xmm0, xmm0
call    __ftoui3
mov     ecx, 8
cmp     eax, ecx
cmova   ecx, eax
cmp     edi, ecx
jnb     short loc_100122a8
cmp     edi, 200h
jnb     short loc_100122a6
shl     edi, 3
cmp     edi, ecx
jnb     short loc_100122a8
mov     edi, ecx
mov     ecx, [esp+40h+var_8]
push    edi
call    sub_10008550
mov     ecx, [esp+40h+var_8]
lea     eax, [esp+40h+var_21]
push    eax
push    [esp+44h+var_1c]
mov     eax, [ebp+arg_4]
push    [esp+48h+var_20]
mov     [esp+4ch+var_21], 0
push    eax
push    ebx
call    sub_10011f40
jmp     loc_1001216d
push    ebp
mov     ebp, esp
push    0fffffffeh
push    offset stru_1001d390
push    offset __except_handler4
mov     eax, large fs:0
push    eax
sub     esp, 2ch
mov     eax, ___security_cookie
xor     [ebp+ms_exc.registration.scopetable], eax
xor     eax, ebp
mov     [ebp+var_1c], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+ms_exc.registration]
mov     large fs:0, eax
mov     [ebp+lpaccountname], edx
mov     edi, [ebp+arg_0]
mov     [ebp+var_38], edi
mov     [ebp+var_3c], edi
xor     ebx, ebx
mov     [ebp+var_30], ebx
mov     [ebp+cbsid], 80h
mov     [ebp+dwbytes], 32h
mov     [ebp+var_2c], ebx
mov     [ebp+ms_exc.registration.trylevel], ebx
call    ds:getprocessheap
push    80h
push    ebx
push    eax
call    ds:heapalloc
mov     [edi], eax
test    eax, eax
jz      loc_100123d8
mov     esi, [ebp+dwbytes]
call    ds:getprocessheap
push    esi
push    ebx
push    eax
call    ds:heapalloc
mov     ebx, eax
test    ebx, ebx
mov     [ebp+var_30], ebx
jz      short loc_100123d8
lea     eax, [ebp+peuse]
push    eax
lea     eax, [ebp+dwbytes]
push    eax
push    ebx
lea     eax, [ebp+cbsid]
push    eax
push    dword ptr [edi]
push    [ebp+lpaccountname]
push    0
call    ds:lookupaccountnamew
test    eax, eax
jnz     short loc_100123ce
call    ds:getlasterror
cmp     eax, 7ah
jnz     short loc_100123d8
mov     esi, [ebp+cbsid]
mov     edi, [edi]
call    ds:getprocessheap
push    esi
push    edi
push    0
push    eax
call    ds:heaprealloc
mov     edi, [ebp+var_38]
mov     [edi], eax
test    eax, eax
jz      short loc_100123d8
mov     esi, [ebp+dwbytes]
call    ds:getprocessheap
push    esi
push    ebx
push    0
push    eax
call    ds:heaprealloc
jmp     short loc_10012367
mov     esi, 1
mov     [ebp+var_2c], esi
jmp     short loc_100123db
mov     esi, [ebp+var_2c]
mov     [ebp+ms_exc.registration.trylevel], 0fffffffeh
call    loc_1001240e
mov     eax, esi
mov     ecx, [ebp+ms_exc.registration.next]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_1c]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
mov     ebx, [ebp+var_30]
mov     edi, [ebp+var_3c]
mov     esi, [ebp+var_2c]
push    ebx
push    0
call    ds:getprocessheap
push    eax
call    ds:heapfree
test    esi, esi
jnz     short loc_10012439
mov     ebx, [edi]
test    ebx, ebx
jz      short loc_10012439
call    ds:getprocessheap
push    ebx
push    esi
push    eax
call    ds:heapfree
mov     [edi], esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10012440
mov     eax, large fs:0
push    eax
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     esi, edx
mov     edi, ecx
mov     eax, [ebp+arg_4]
mov     [ebp+var_20], eax
push    offset dword_100203fc
mov     [ebp+var_4], 0
push    20h
mov     [ebp+pinputstream], 0
call    ??2@yapaxiabunothrow_t@std@@@z
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jz      loc_100125b5
mov     dword ptr [ebx], offset ??_7creadonlymemorystream@@6b@
mov     dword ptr [ebx+4], 1
mov     eax, [ebx]
mov     [ebx+10h], esi
mov     [ebx+8], edi
mov     dword ptr [ebx+14h], 0
mov     esi, [eax]
lea     eax, [ebp+pinputstream]
push    eax
push    offset dword_10019780
push    ebx
mov     ecx, esi
mov     dword ptr [ebx+18h], 0
mov     dword ptr [ebx+1ch], 0
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
mov     eax, [ebx]
push    ebx
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    edi, edi
js      loc_100125ba
mov     [ebp+ppinput], 0
lea     eax, [ebp+ppinput]
push    eax
push    0
push    0
push    offset pwszencodingname
push    0
push    [ebp+pinputstream]
call    ds:createxmlreaderinputwithencodingname
mov     edi, eax
test    edi, edi
jns     short loc_10012527
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_10012598
mov     [ebp+var_14], 0
mov     edx, [ebp+arg_0]
lea     eax, [ebp+var_14]
mov     byte ptr [ebp+var_4], 5
mov     ecx, [ebp+ppinput]
push    eax
call    sub_10012600
mov     edi, eax
add     esp, 4
test    edi, edi
jns     short loc_10012567
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     byte ptr [ebp+var_4], 6
mov     eax, [ebp+var_14]
test    eax, eax
jz      short loc_10012598
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
jmp     short loc_1001258e
mov     ecx, [ebp+var_20]
mov     esi, [ebp+var_14]
push    esi
push    ecx
mov     eax, [ecx]
mov     edi, [eax+0ch]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     edi, eax
mov     byte ptr [ebp+var_4], 7
test    esi, esi
jz      short loc_10012598
mov     eax, [esi]
push    esi
mov     esi, [eax+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     byte ptr [ebp+var_4], 8
mov     eax, [ebp+ppinput]
test    eax, eax
jz      short loc_100125c4
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
jmp     short loc_100125c4
mov     edi, 8007000eh
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     [ebp+var_4], 9
mov     ecx, [ebp+pinputstream]
test    ecx, ecx
jz      short loc_100125e2
mov     edx, [ecx]
push    ecx
mov     esi, [edx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10012600
mov     eax, large fs:0
push    eax
sub     esp, 14h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_10], eax
push    ebx
push    esi
push    edi
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     ebx, edx
mov     [ebp+var_1c], ecx
mov     eax, [ebp+arg_0]
mov     [ebp+var_20], eax
mov     [ebp+ppvobject], 0
mov     dword ptr [eax], 0
push    0
lea     eax, [ebp+ppvobject]
mov     [ebp+var_4], 0
push    eax
push    offset stru_10019770
call    ds:createxmlreader
mov     edi, eax
test    edi, edi
jns     short loc_10012673
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp+ppvobject]
jmp     loc_100127b0
mov     eax, [ebp+ppvobject]
push    [ebp+var_1c]
push    eax
mov     ecx, [eax]
mov     esi, [ecx+0ch]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_100126a1
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
mov     eax, [ebp+ppvobject]
jmp     loc_100127b0
mov     ecx, [ebp+ppvobject]
mov     [ebp+var_1c], ecx
mov     eax, [ecx]
mov     esi, [eax+1ch]
lea     eax, [ebp+var_18]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      short loc_10012729
cmp     [ebp+var_18], 1
jz      short loc_100126fe
mov     edi, [ebp+var_1c]
push    edi
mov     eax, [edi]
mov     esi, [eax+64h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
test    eax, eax
jnz     short loc_10012743
mov     eax, [edi]
mov     esi, [eax+18h]
lea     eax, [ebp+var_18]
push    eax
push    edi
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
js      short loc_10012729
cmp     [ebp+var_18], 1
jnz     short loc_100126c7
mov     ecx, [ebp+var_1c]
push    0
mov     eax, [ecx]
mov     esi, [eax+38h]
lea     eax, [ebp+var_1c]
push    eax
push    ecx
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     edi, eax
test    edi, edi
jns     short loc_10012754
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_10012798
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
test    edi, edi
jns     short loc_100126fe
mov     ecx, [ebp+4]
mov     edx, edi
call    sub_10002ff0
jmp     short loc_10012798
mov     ecx, [ebp+4]
mov     edi, 80004005h
mov     edx, edi
call    sub_10002ff0
jmp     short loc_10012798
mov     eax, [ebp+var_1c]
test    eax, eax
jz      short loc_10012793
nop     dword ptr [eax+eax+00h]
mov     cx, [ebx]
cmp     cx, [eax]
jnz     short loc_10012786
test    cx, cx
jz      short loc_10012782
mov     cx, [ebx+2]
cmp     cx, [eax+2]
jnz     short loc_10012786
add     ebx, 4
add     eax, 4
test    cx, cx
jnz     short loc_10012760
xor     eax, eax
jmp     short loc_1001278b
sbb     eax, eax
or      eax, 1
test    eax, eax
jnz     short loc_10012793
xor     edi, edi
jmp     short loc_10012798
mov     edi, 80004005h
test    edi, edi
jns     short loc_100127a1
mov     eax, [ebp+ppvobject]
jmp     short loc_100127b0
mov     edx, [ebp+var_20]
xor     eax, eax
mov     ecx, [ebp+ppvobject]
xor     edi, edi
mov     [ebp+ppvobject], eax
mov     [edx], ecx
mov     [ebp+var_4], 1
test    eax, eax
jz      short loc_100127cb
mov     ecx, [eax]
push    eax
mov     esi, [ecx+8]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
call    esi
mov     eax, edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+var_10]
xor     ecx, ebp
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
jz      short loc_10012807
push    20h
push    esi
call    sub_10012c63
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+4]
inc     eax
mov     [ecx+4], eax
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    edi
mov     edi, [ebp+arg_0]
dec     dword ptr [edi+4]
mov     eax, [edi+4]
test    eax, eax
jg      short loc_10012858
mov     eax, [edi]
push    esi
push    1
mov     esi, [eax+38h]
mov     ecx, esi
call    ds:___guard_check_icall_fptr
mov     ecx, edi
call    esi
xor     eax, eax
pop     esi
pop     edi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
mov     edx, ecx
push    esi
push    edi
mov     esi, offset dword_1001800c
mov     edi, 0ch
mov     eax, [edx]
cmp     eax, [esi]
jnz     short loc_10012898
add     edx, 4
add     esi, 4
sub     edi, 4
jnb     short loc_10012874
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_8]
pop     edi
pop     esi
inc     dword ptr [ecx+4]
mov     [eax], ecx
xor     eax, eax
pop     ebp
retn    0ch
mov     edx, ecx
mov     esi, offset dword_10019780
mov     edi, 0ch
mov     eax, [edx]
cmp     eax, [esi]
jnz     short loc_100128c8
add     edx, 4
add     esi, 4
sub     edi, 4
jnb     short loc_100128a4
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_8]
pop     edi
pop     esi
inc     dword ptr [ecx+4]
mov     [eax], ecx
xor     eax, eax
pop     ebp
retn    0ch
mov     edx, offset dword_10019790
mov     esi, 0ch
mov     eax, [ecx]
cmp     eax, [edx]
jnz     short loc_100128f6
add     ecx, 4
add     edx, 4
sub     esi, 4
jnb     short loc_100128d2
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_8]
pop     edi
pop     esi
inc     dword ptr [ecx+4]
mov     [eax], ecx
xor     eax, eax
pop     ebp
retn    0ch
mov     eax, [ebp+arg_8]
pop     edi
pop     esi
mov     dword ptr [eax], 0
mov     eax, 80004002h
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_c]
push    esi
mov     esi, [ebp+arg_0]
mov     [ebp+var_4], eax
push    edi
mov     edi, ecx
mov     eax, [esi+10h]
mov     edx, [esi+18h]
sub     eax, edx
cmp     eax, ecx
cmovb   edi, eax
test    edi, edi
jz      short loc_1001294e
mov     eax, [esi+8]
push    edi
add     eax, edx
push    eax
push    [ebp+var_4]
call    memcpy
mov     ecx, [ebp+arg_8]
add     esp, 0ch
test    ebx, ebx
jz      short loc_10012954
mov     [ebx], edi
add     [esi+18h], edi
adc     dword ptr [esi+1ch], 0
cmp     edi, ecx
pop     edi
sbb     eax, eax
pop     esi
neg     eax
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
mov     eax, 80070005h
retn    10h
mov     eax, 80004001h
retn    18h
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_c]
sub     eax, 0
jz      short loc_100129d0
sub     eax, 1
jz      short loc_100129b9
sub     eax, 1
jz      short loc_100129ae
mov     eax, 80070057h
pop     ebp
retn    14h
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+10h]
mov     edx, [ecx+14h]
jmp     short loc_100129d9
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
add     [ecx+18h], eax
mov     eax, [ebp+arg_8]
adc     [ecx+1ch], eax
mov     eax, [ecx+18h]
mov     edx, [ecx+1ch]
jmp     short loc_100129df
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     edx, [ebp+arg_8]
mov     [ecx+1ch], edx
mov     [ecx+18h], eax
cmp     edx, [ecx+14h]
jb      short loc_100129fd
ja      short loc_100129eb
cmp     eax, [ecx+10h]
jb      short loc_100129fd
mov     eax, [ecx+10h]
mov     edx, [ecx+14h]
add     eax, 0ffffffffh
mov     [ecx+18h], eax
adc     edx, 0ffffffffh
mov     [ecx+1ch], edx
mov     ecx, [ebp+arg_10]
test    ecx, ecx
jz      short loc_10012a09
mov     [ecx], eax
mov     [ecx+4], edx
xor     eax, eax
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
push    48h
push    0
push    esi
call    memset
mov     ecx, [ebp+arg_0]
add     esp, 0ch
mov     eax, [ecx+10h]
mov     [esi+8], eax
mov     eax, [ecx+14h]
mov     [esi+0ch], eax
xor     eax, eax
mov     dword ptr [esi+4], 2
pop     esi
pop     ebp
retn    0ch
push    esi
mov     esi, ecx
call    sub_10012bb9
mov     eax, 10000000h
mov     dword ptr [esi], 38h
lea     ecx, [esi+14h]
mov     [esi+8], eax
mov     [esi+4], eax
mov     dword ptr [esi+0ch], 0e00h
mov     dword ptr [esi+10h], offset dword_10017920
call    sub_10002fa0
test    eax, eax
jns     short loc_10012bb5
call    ds:isdebuggerpresent
test    eax, eax
jz      short loc_10012bae
push    offset outputstring
call    ds:outputdebugstringw
mov     byte_10020805, 1
mov     eax, esi
pop     esi
retn
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
push    18h
push    edi
lea     eax, [esi+14h]
push    eax
call    memset
add     esp, 0ch
mov     [esi+2ch], edi
mov     [esi+30h], edi
mov     eax, esi
mov     [esi+34h], edi
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
lea     eax, [esi+14h]
push    eax
call    ds:deletecriticalsection
lea     ecx, [esi+2ch]
pop     esi
jmp     $+5
push    esi
mov     esi, ecx
cmp     dword ptr [esi], 0
jz      short loc_10012c05
push    dword ptr [esi]
call    free
and     dword ptr [esi], 0
pop     ecx
and     dword ptr [esi+4], 0
and     dword ptr [esi+8], 0
pop     esi
retn
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7type_info@@6b@
jz      short loc_10012c5c
push    0ch
push    esi
call    sub_10012c63
pop     ecx
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    [ebp+block]
call    j_free
pop     ecx
pop     ebp
retn
call    sub_10013c6e
test    al, al
jnz     short loc_10012e37
xor     al, al
retn
call    sub_10013c6e
test    al, al
jnz     short loc_10012e47
call    sub_10013c6e
jmp     short loc_10012e34
mov     al, 1
retn
call    sub_10013c6e
call    sub_10013c6e
mov     al, 1
retn
push    0
call    sub_10013c6e
pop     ecx
jmp     sub_10013c6e
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    sub_10005680
mov     dword ptr [esi], offset ??_7bad_alloc@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
and     dword ptr [ecx+4], 0
mov     eax, ecx
and     dword ptr [ecx+8], 0
mov     dword ptr [ecx+4], offset abadallocation
mov     dword ptr [ecx], offset ??_7bad_alloc@std@@6b@
retn
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    sub_10005680
mov     dword ptr [esi], offset ??_7bad_array_new_length@std@@6b@
mov     eax, esi
pop     esi
pop     ebp
retn    4
and     dword ptr [ecx+4], 0
mov     eax, ecx
and     dword ptr [ecx+8], 0
mov     dword ptr [ecx+4], offset abadarraynewlen
mov     dword ptr [ecx], offset ??_7bad_array_new_length@std@@6b@
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     ecx, [ebp+pexceptionobject]
call    sub_1001369b
push    offset __ti2?avbad_alloc@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    _cxxthrowexception
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     ecx, [ebp+pexceptionobject]
call    sub_100136db
push    offset __ti3?avbad_array_new_length@std@@
lea     eax, [ebp+pexceptionobject]
push    eax
call    _cxxthrowexception
and     dword_10020770, 0
retn
xor     eax, eax
inc     eax
retn
mov     ecx, [ebp-10h]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
push    ecx
bnd retn
push    offset listhead
call    ds:initializeslisthead
retn
push    offset listhead
call    __std_type_info_destroy_list
pop     ecx
retn
mov     eax, offset dword_10020894
retn
push    ebx
push    esi
mov     esi, offset dword_1001bb28
mov     ebx, offset dword_1001bb28
cmp     esi, ebx
jnb     short loc_10013ba7
push    edi
mov     edi, [esi]
test    edi, edi
jz      short loc_10013b9f
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
add     esi, 4
cmp     esi, ebx
jb      short loc_10013b8f
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, offset dword_1001bb30
mov     ebx, offset dword_1001bb30
cmp     esi, ebx
jnb     short loc_10013bd3
push    edi
mov     edi, [esi]
test    edi, edi
jz      short loc_10013bcb
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
add     esi, 4
cmp     esi, ebx
jb      short loc_10013bbb
pop     edi
pop     esi
pop     ebx
retn
jmp     ds:__imp___std_terminate
mov     al, 1
retn
movd    eax, xmm0
shl     eax, 1
jb      short _ftoul3_neg
cmp     eax, 9e000000h
jnb     short _ftoul3_notsafe
cvttss2si eax, xmm0
xor     edx, edx
retn
cmp     eax, 0bf000000h
jnb     short _ftoul3_nan
mov     ecx, eax
bts     eax, 18h
shr     ecx, 18h
shl     eax, 7
sub     cl, 0beh
jns     short _ftoul3_bigshift
xor     edx, edx
shld    edx, eax, cl
shl     eax, cl
retn
mov     edx, eax
xor     eax, eax
retn
cmp     eax, 7f000000h
jb      short _ftoul3_cvt
cvttss2si ecx, ds:dword_10019a40
cmc
sbb     eax, eax
cdq
retn
movd    eax, xmm0
cdq
shl     eax, 1
cmp     eax, 9e000000h
jnb     short _ftol3_notsafe
cvttss2si eax, xmm0
cdq
retn
cmp     eax, 0be000000h
jnb     short _ftol3_mincheck
mov     ecx, eax
bts     eax, 18h
shr     ecx, 18h
shl     eax, 7
sub     cl, 0beh
xor     eax, edx
sub     eax, edx
shld    edx, eax, cl
shl     eax, cl
retn
jnz     short _ftol3_nan
test    edx, edx
js      short _ftol3_retmin
cvttss2si ecx, ds:dword_10019a40
mov     edx, 80000000h
xor     eax, eax
retn
mov     ecx, esp
add     esp, 0fffffff8h
and     esp, 0fffffff8h
movsd   qword ptr [esp], xmm0
mov     eax, [esp]
mov     edx, [esp+4]
mov     esp, ecx
btr     edx, 1fh
jb      short _dtoui3_neg
cmp     edx, 41e00000h
jnb     short _dtoui3_notsafe
cvttsd2si eax, xmm0
retn
cmp     edx, 41f00000h
jnb     short _dtoui3_nan
test    eax, 1fffffh
jz      short _dtoui3_exact
cvttss2si ecx, ds:dword_10019a44
shrd    eax, edx, 15h
bts     eax, 1fh
retn
cmp     edx, 3ff00000h
jnb     short _dtoui3_nan
cvttsd2si eax, xmm0
xor     eax, eax
retn
cvttss2si ecx, ds:dword_10019a40
xor     eax, eax
dec     eax
retn
mov     ecx, esp
add     esp, 0fffffff8h
and     esp, 0fffffff8h
movsd   qword ptr [esp], xmm0
mov     eax, [esp]
mov     edx, [esp+4]
mov     esp, ecx
btr     edx, 1fh
jb      short _dtoul3_neg
cmp     edx, 41e00000h
jnb     short _dtoul3_notsafe
cvttsd2si eax, xmm0
xor     edx, edx
retn
mov     ecx, edx
bts     edx, 14h
shr     ecx, 14h
and     edx, 1fffffh
sub     ecx, 433h
jge     short _dtoul3_large
neg     ecx
push    ebx
xor     ebx, ebx
shrd    ebx, eax, cl
jz      short _dtoul3_exact
cvttss2si ebx, ds:dword_10019a44
pop     ebx
shrd    eax, edx, cl
shr     edx, cl
retn
cmp     ecx, 0ch
jnb     short _dtoul3_nan
shld    edx, eax, cl
shl     eax, cl
retn
cmp     edx, 3ff00000h
jnb     short _dtoul3_nan
cvttsd2si eax, xmm0
xor     eax, eax
xor     edx, edx
retn
cvttss2si ecx, ds:dword_10019a40
xor     eax, eax
dec     eax
cdq
retn
mov     ecx, esp
add     esp, 0fffffff8h
and     esp, 0fffffff8h
movsd   qword ptr [esp], xmm0
mov     eax, [esp]
mov     edx, [esp+4]
mov     esp, ecx
btr     edx, 1fh
sbb     ecx, ecx
cmp     edx, 41e00000h
jnb     short _dtol3_notsafe
cvttsd2si eax, xmm0
cdq
retn
cmp     edx, 43e00000h
jnb     short _dtol3_large
test    ecx, ecx
jz      short _dtol3_getbits
call    _dtol3_getbits
neg     eax
adc     edx, 0
neg     edx
retn
jecxz   short _dtol3_nan
ja      short _dtol3_nan
test    eax, eax
jz      short _dtol3_retmin
cvttss2si ecx, ds:dword_10019a40
mov     edx, 80000000h
xor     eax, eax
retn
xorps   xmm0, xmm0
cvtsi2sd xmm0, ecx
shr     ecx, 1fh
addsd   xmm0, ds:qword_10019a48[ecx*8]
test    edx, edx
jz      short _ultod3_uint32
xorps   xmm1, xmm1
cvtsi2sd xmm1, edx
shr     edx, 1fh
addsd   xmm1, ds:qword_10019a48[edx*8]
mulsd   xmm1, ds:qword_10019a50
addsd   xmm0, xmm1
xorps   xmm1, xmm1
cvtsi2sd xmm1, edx
xorps   xmm0, xmm0
cvtsi2sd xmm0, ecx
shr     ecx, 1fh
mulsd   xmm1, ds:qword_10019a50
addsd   xmm0, ds:qword_10019a48[ecx*8]
addsd   xmm0, xmm1
retn
lea     ecx, [ebp+var_14]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bb40
jmp     __cxxframehandler3
lea     ecx, [ebp+var_14]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bb7c
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbb8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbb8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbb8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbe4
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbb8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bc08
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bc08
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbe4
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-21ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbe4
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbe4
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bc38
jmp     __cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-30h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bce8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bda8
jmp     __cxxframehandler3
lea     ecx, [ebp+var_34]
jmp     sub_10002ac0
lea     ecx, [ebp+var_20]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-40h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bde0
jmp     __cxxframehandler3
lea     ecx, [ebp+var_14]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-28h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001be78
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bda8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bebc
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-14h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bef8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbb8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbe4
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbb8
jmp     __cxxframehandler3
lea     ecx, [ebp+var_1c]
jmp     sub_10002ac0
lea     ecx, [ebp+pbstr]
jmp     sub_10008b50
lea     ecx, [ebp+var_20]
jmp     sub_10002ac0
lea     ecx, [ebp+var_14]
jmp     loc_1000c6a0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-34h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bf30
jmp     __cxxframehandler3
lea     ecx, [ebp+var_14]
jmp     sub_10002ac0
lea     ecx, [ebp+bstrstring]
jmp     sub_10008b50
lea     ecx, [ebp+var_20]
jmp     sub_10002ac0
lea     ecx, [ebp+var_30]
jmp     sub_10002ac0
lea     ecx, [ebp+var_1c]
jmp     sub_10002ac0
lea     ecx, [ebp+pv]
jmp     sub_10007e60
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-54h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bfe8
jmp     __cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-34h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c170
jmp     __cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     sub_10002ac0
lea     ecx, [ebp+var_14]
jmp     sub_10002ac0
lea     ecx, [ebp+string2]
jmp     sub_10008b50
lea     ecx, [ebp+pv]
jmp     sub_10007e60
lea     ecx, [ebp+pbstr]
jmp     sub_10008b50
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-40h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c1c8
jmp     __cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     sub_10002ac0
lea     ecx, [ebp+var_14]
jmp     sub_10002ac0
lea     ecx, [ebp+pvarg]
jmp     loc_10008b40
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-38h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c318
jmp     __cxxframehandler3
lea     ecx, [ebp-1ch]
jmp     loc_10008120
lea     ecx, [ebp-34h]
jmp     loc_10008190
mov     edx, [esp+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-38h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c398
jmp     __cxxframehandler3
lea     ecx, [ebp+arg_0]
jmp     loc_10007a40
lea     ecx, [ebp+pv]
jmp     sub_10007e60
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-230h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c3d0
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bc08
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bda8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bc08
jmp     __cxxframehandler3
mov     edx, [esp+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-40h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c440
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c49c
jmp     __cxxframehandler3
lea     ecx, [ebp+var_14]
jmp     loc_100096c0
lea     ecx, [ebp+var_18]
jmp     loc_100096c0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c4f0
jmp     __cxxframehandler3
lea     ecx, [ebp+var_14]
jmp     loc_10009f40
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c524
jmp     __cxxframehandler3
lea     ecx, [ebp+var_60]
jmp     loc_100099a0
lea     ecx, [ebp+var_54]
jmp     loc_10009f40
lea     ecx, [ebp+var_54]
jmp     loc_10009f40
lea     ecx, [ebp+var_54]
jmp     loc_10009f40
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-70h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c550
jmp     __cxxframehandler3
mov     edx, [esp-4+lpsubkey]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbe4
jmp     __cxxframehandler3
lea     ecx, [ebp+lpdata]
jmp     loc_10009940
lea     ecx, [ebp+lpdata]
jmp     loc_10009940
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-213ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c594
jmp     __cxxframehandler3
lea     ecx, [ebp+var_2258]
jmp     loc_1000a7e0
lea     ecx, [ebp+var_2228]
jmp     loc_1000a7e0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2268h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c630
jmp     __cxxframehandler3
lea     ecx, [ebp+var_20]
jmp     loc_10009f40
lea     ecx, [ebp+lpwidecharstr]
jmp     loc_10009940
mov     edx, [esp-4+lpname]
lea     eax, [edx+0ch]
mov     ecx, [edx-43ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c664
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0a5ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbe4
jmp     __cxxframehandler3
lea     ecx, [ebp+var_14]
jmp     loc_1000c6a0
lea     ecx, [ebp+var_28]
jmp     loc_1000c6a0
lea     ecx, [ebp+var_24]
jmp     loc_1000c6a0
lea     ecx, [ebp+var_20]
jmp     loc_1000c6a0
lea     ecx, [ebp+ppv]
jmp     loc_1000c6a0
lea     ecx, [ebp+var_1c]
jmp     loc_1000c6a0
lea     ecx, [ebp+ppv]
jmp     loc_1000c6a0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-54h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c6cc
jmp     __cxxframehandler3
lea     ecx, [ebp+var_28]
jmp     sub_10002ac0
lea     ecx, [ebp+var_24]
jmp     sub_10002ac0
lea     ecx, [ebp+punk]
jmp     sub_10002ac0
lea     ecx, [ebp+var_14]
jmp     sub_10002ac0
lea     ecx, [ebp+var_14]
jmp     sub_10002ac0
lea     ecx, [ebp+var_18]
jmp     loc_1000c6a0
lea     ecx, [ebp+var_20]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-64h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c728
jmp     __cxxframehandler3
lea     ecx, [ebp+ppv]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-28h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c938
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c98c
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbb8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001c9c8
jmp     __cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     sub_10002ac0
lea     ecx, [ebp+var_14]
jmp     loc_1000c6a0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001ca0c
jmp     __cxxframehandler3
lea     ecx, [ebp+var_1c]
jmp     sub_10002ac0
lea     ecx, [ebp+var_14]
jmp     sub_10002ac0
lea     ecx, [ebp+var_20]
jmp     sub_10008b50
lea     ecx, [ebp+var_18]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001ca48
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-38h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cb48
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-20h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cbe8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cbe8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-10h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cc1c
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-0ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cc50
jmp     __cxxframehandler3
push    offset dword_100203fc
mov     eax, [ebp+block]
push    eax
call    sub_10012c63
add     esp, 8
retn
mov     ecx, [ebp+block]
add     ecx, 0ch
jmp     loc_10002fd0
mov     ecx, [ebp+block]
jmp     sub_1000d740
mov     ecx, [ebp+block]
add     ecx, 2ch
jmp     sub_10002ac0
mov     ecx, [ebp+block]
add     ecx, 30h
jmp     sub_10002ac0
mov     ecx, [ebp+var_2c]
jmp     sub_10002ac0
mov     ecx, [ebp+var_30]
add     ecx, 4
jmp     loc_1000dc50
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-34h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cc98
jmp     __cxxframehandler3
push    offset dword_100203fc
mov     eax, [ebp+block]
push    eax
call    sub_10012c63
add     esp, 8
retn
mov     ecx, [ebp+block]
add     ecx, 4
jmp     loc_10002fd0
mov     ecx, [ebp+block]
add     ecx, 24h
jmp     sub_10002ac0
mov     ecx, [ebp+var_2c]
add     ecx, 4
jmp     loc_1000dc30
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-30h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cd28
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-28h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbb8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-28h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cda0
jmp     __cxxframehandler3
mov     edx, [esp+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-1d0h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cddc
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001ce30
jmp     __cxxframehandler3
mov     edx, [esp-4+lpservicename]
lea     eax, [edx+0ch]
mov     ecx, [edx-5ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cea8
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-47ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cf28
jmp     __cxxframehandler3
lea     ecx, [ebp+ppunk]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-18h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001cfc0
jmp     __cxxframehandler3
lea     ecx, [ebp+ppbc]
jmp     sub_10002ac0
lea     ecx, [ebp+pv]
jmp     loc_100107a0
lea     ecx, [ebp+var_24]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-34h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001d000
jmp     __cxxframehandler3
lea     ecx, [ebp+pprot]
jmp     sub_10002ac0
lea     ecx, [ebp+var_1c]
jmp     sub_10002ac0
lea     ecx, [ebp+var_18]
jmp     sub_10002ac0
lea     ecx, [ebp+pv]
jmp     sub_10007e60
lea     ecx, [ebp+pv]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-30h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001d070
jmp     __cxxframehandler3
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-2ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001bbb8
jmp     __cxxframehandler3
lea     ecx, [ebp-18h]
jmp     sub_10002ac0
lea     ecx, [ebp-60h]
jmp     loc_10008b40
lea     ecx, [ebp-50h]
jmp     loc_10008b40
lea     ecx, [ebp-40h]
jmp     loc_10008b40
lea     ecx, [ebp-30h]
jmp     loc_10008b40
mov     edx, [esp+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-90h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001d148
jmp     __cxxframehandler3
lea     ecx, [ebp+pvar]
jmp     loc_10011880
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-40h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001d19c
jmp     __cxxframehandler3
lea     ecx, [ebp+var_1c]
jmp     loc_1000d7a0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-34h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001d1c8
jmp     __cxxframehandler3
lea     ecx, [ebp+var_18]
jmp     loc_1000d7a0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-3ch]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001d288
jmp     __cxxframehandler3
lea     ecx, [ebp-1ch]
jmp     sub_10011eb0
lea     ecx, [ebp-34h]
jmp     loc_10011f20
mov     edx, [esp+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-38h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-8]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001d350
jmp     __cxxframehandler3
lea     ecx, [ebp+pinputstream]
jmp     sub_10002ac0
lea     ecx, [ebp+ppinput]
jmp     sub_10002ac0
lea     ecx, [ebp+var_14]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001d3b0
jmp     __cxxframehandler3
lea     ecx, [ebp+ppvobject]
jmp     sub_10002ac0
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0ch]
mov     ecx, [edx-24h]
xor     ecx, eax
call    @__security_check_cookie@4
mov     ecx, [edx-4]
xor     ecx, eax
call    @__security_check_cookie@4
mov     eax, offset stru_1001d428
jmp     __cxxframehandler3
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10014f30
mov     eax, large fs:0
push    eax
push    ebx
push    esi
push    edi
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     [ebp+var_4], 0
cmp     dword_1001f194, 0
jz      short loc_10014fc3
mov     esi, off_1001f19c
mov     ecx, off_1001f1a0
cmp     esi, ecx
jnb     short loc_10014fae
mov     eax, [esi]
test    eax, eax
jz      short loc_10014fa7
mov     ebx, [eax+10h]
mov     eax, [ebx]
test    eax, eax
jz      short loc_10014fa7
push    eax
call    ds:decodepointer
push    eax
mov     ecx, [eax]
mov     edi, [ecx+8]
mov     ecx, edi
call    ds:___guard_check_icall_fptr
call    edi
mov     dword ptr [ebx], 0
mov     ecx, off_1001f1a0
add     esi, 4
cmp     esi, ecx
jb      short loc_10014f75
push    offset criticalsection
call    ds:deletecriticalsection
mov     dword_1001f194, 0
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_10014fe0
mov     eax, large fs:0
push    eax
mov     eax, ___security_cookie
xor     eax, ebp
push    eax
lea     eax, [ebp+var_c]
mov     large fs:0, eax
mov     dword_1002085c, offset ??_7cschedulermodule@@6b@
call    sub_100061b0
push    0
mov     [ebp+var_4], 0
call    sub_100054c0
mov     ecx, offset dword_1002085c
call    sub_10005500
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
mov     ecx, offset dword_100203c0
jmp     loc_10012bdc
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     [ebp+var_4], 0ffffffffh
push    10h
mov     eax, 4
shl     eax, 3
mov     ecx, ds:off_10018730[eax]
mov     edx, [ecx+4]
push    edx
mov     eax, [ebp+buf1]
push    eax
call    memcmp
add     esp, 0ch
mov     [ebp+var_c], eax
mov     ecx, [ebp+var_c]
mov     [ebp+var_8], ecx
cmp     [ebp+var_8], 0
jle     short loc_10016045
mov     [ebp+var_4], 1
jmp     short loc_10016057
cmp     [ebp+var_8], 0
jnz     short loc_10016057
mov     [ebp+var_4], 8
jmp     loc_1001614c
push    10h
mov     edx, [ebp+var_4]
mov     eax, ds:off_10018740[edx*4]
mov     ecx, [eax+4]
push    ecx
mov     edx, [ebp+buf1]
push    edx
call    memcmp
add     esp, 0ch
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_8], eax
cmp     [ebp+var_8], 0
jl      short loc_10016096
mov     ecx, [ebp+var_4]
add     ecx, 4
mov     [ebp+var_4], ecx
cmp     [ebp+var_8], 0
jnz     short loc_10016096
jmp     loc_1001614c
push    10h
mov     edx, [ebp+var_4]
mov     eax, ds:off_10018738[edx*4]
mov     ecx, [eax+4]
push    ecx
mov     edx, [ebp+buf1]
push    edx
call    memcmp
add     esp, 0ch
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_8], eax
cmp     [ebp+var_8], 0
jl      short loc_100160d2
mov     ecx, [ebp+var_4]
add     ecx, 2
mov     [ebp+var_4], ecx
cmp     [ebp+var_8], 0
jnz     short loc_100160d2
jmp     short loc_1001614c
push    10h
mov     edx, [ebp+var_4]
mov     eax, ds:off_10018734[edx*4]
mov     ecx, [eax+4]
push    ecx
mov     edx, [ebp+buf1]
push    edx
call    memcmp
add     esp, 0ch
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_8], eax
cmp     [ebp+var_8], 0
jl      short loc_1001610e
mov     ecx, [ebp+var_4]
add     ecx, 1
mov     [ebp+var_4], ecx
cmp     [ebp+var_8], 0
jnz     short loc_1001610e
jmp     short loc_1001614c
mov     edx, [ebp+var_4]
add     edx, 1
mov     [ebp+var_4], edx
cmp     [ebp+var_4], 9
jl      short loc_1001611f
jmp     short loc_1001615b
push    10h
mov     eax, [ebp+var_4]
mov     ecx, ds:off_10018730[eax*4]
mov     edx, [ecx+4]
push    edx
mov     eax, [ebp+buf1]
push    eax
call    memcmp
add     esp, 0ch
mov     [ebp+var_1c], eax
mov     ecx, [ebp+var_1c]
mov     [ebp+var_8], ecx
cmp     [ebp+var_8], 0
jz      short loc_1001614c
jmp     short loc_1001615b
mov     edx, [ebp+arg_4]
mov     eax, [ebp+var_4]
mov     [edx], eax
mov     eax, 1
jmp     short loc_1001615d
xor     eax, eax
mov     esp, ebp
pop     ebp
retn    8
offset loc_10003abb>
offset loc_10003ac9>
offset loc_10003ad8>
offset loc_10003ae5>
offset loc_10003af2>
offset loc_10003aff>
offset loc_10003c5c>
offset loc_10003c6a>
offset loc_10003c79>
offset loc_10003c86>
offset loc_10003c93>
offset loc_10003ca0>
offset loc_10011a87>
offset loc_10011a95>
offset loc_10011aa4>
offset loc_10011ab3>
offset loc_10011ac0>
offset loc_10011acd>
offset loc_10011ada>
offset loc_10011ba1>
offset loc_10011baf>
offset loc_10011bbe>
offset loc_10011bcd>
offset loc_10011bda>
offset loc_10011be7>
offset loc_10011bf4>
offset __catch$??2@yapaxiabunothrow_t@std@@@z$0>
offset __cta2?avbad_alloc@std@@>
offset __cta3?avbad_array_new_length@std@@>
offset __cta2?avresultexception@wil@@>