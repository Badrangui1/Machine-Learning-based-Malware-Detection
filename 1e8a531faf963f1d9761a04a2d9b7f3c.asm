push    esi
mov     esi, ecx
call    sub_418f4c
mov     dword ptr [esi], offset off_4235e0
mov     eax, esi
pop     esi
retn
mov     dword ptr [ecx], offset off_4235e0
jmp     sub_41830b
mov     eax, offset off_4235c0
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     eax, [ebp+arg_0]
and     [ebp+var_8], 0
mov     [ebp+lparam], eax
lea     eax, [ebp+lparam]
push    eax
push    2
push    449h
mov     [ebp+var_4], offset sub_40105a
push    dword ptr [ecx+1ch]
call    ds:sendmessagea
lea     ecx, [ebp+arg_0]
call    sub_41c5b1
leave
retn    4
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
mov     eax, [ebx]
mov     ecx, [eax-8]
mov     eax, [ebp+arg_c]
cmp     ecx, edx
jge     short loc_401090
mov     edi, [ebp+arg_4]
mov     [eax], ecx
mov     esi, [ebx]
mov     eax, ecx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     ecx, ebx
call    ?empty@cstring@@qaexxz
jmp     short loc_4010ca
mov     edi, [ebp+arg_4]
mov     ecx, edx
mov     [eax], edx
mov     esi, [ebx]
mov     eax, ecx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, [ebx]
mov     ecx, ebx
mov     eax, [eax-8]
sub     eax, edx
push    eax
lea     eax, [ebp+arg_c]
push    eax
call    sub_417d41
push    eax
mov     ecx, ebx
call    sub_41c69e
lea     ecx, [ebp+arg_c]
call    sub_41c5b1
pop     edi
pop     esi
xor     eax, eax
pop     ebx
pop     ebp
retn    10h
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_4235e0
call    sub_41830b
test    [esp+4+arg_0], 1
jz      short loc_4010ef
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    0
push    dword ptr [ecx+1ch]
call    ds:enablewindow
retn
push    esi
push    edi
mov     esi, ecx
call    sub_418f4c
mov     dword ptr [esi], offset ??_7cstatic@@6b@
mov     eax, off_42b8a0
mov     [esi+40h], eax
and     dword ptr [esi+64h], 0
lea     ecx, [esi+68h]
mov     dword ptr [esi+60h], offset off_423818
call    ??0cdc@@qae@xz_0
mov     eax, off_42b8a0
lea     edi, [esi+0a0h]
mov     ecx, esi
mov     [edi], eax
mov     dword ptr [esi], offset off_423760
call    sub_401c44
call    avifileinit
call    drawdibopen
push    offset dword_42ce74
mov     ecx, edi
mov     [esi+7ch], eax
call    ??4cstring@@qaeabv0@pbd@z
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
mov     eax, [esi+94h]
mov     dword ptr [esi], offset off_423760
test    eax, eax
jz      short loc_40118c
push    eax
call    ds:timekillevent
mov     ecx, esi
call    sub_401c75
mov     eax, [esi+7ch]
test    eax, eax
jz      short loc_4011a0
push    eax
call    drawdibclose
call    avifileexit
lea     ecx, [esi+0a0h]
call    sub_41c5b1
lea     ecx, [esi+68h]
call    sub_41f4b6
lea     ecx, [esi+60h]
mov     dword ptr [ecx], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
lea     ecx, [esi+40h]
call    sub_41c5b1
mov     ecx, esi
call    sub_420b23
pop     esi
retn
mov     eax, offset off_423698
retn
push    esi
mov     esi, ecx
lea     eax, [esp+4+arg_0]
push    eax
lea     ecx, [esi+0a0h]
call    sub_41c69e
push    0
push    100h
push    0
mov     ecx, esi
call    sub_41bb8f
lea     ecx, [esp+4+arg_0]
call    sub_41c5b1
pop     esi
retn    4
push    esi
mov     esi, ecx
xor     ecx, ecx
mov     eax, [esi+0a0h]
cmp     [eax-8], ecx
jz      short loc_40122e
push    1
push    ecx
push    ecx
push    eax
push    offset aopen_1
push    ecx
call    ds:shellexecutea
mov     ecx, esi
call    sub_4192d4
pop     esi
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 0b4h
mov     eax, [ebp+arg_c]
push    ebx
push    esi
push    edi
push    [ebp+szfile]
mov     esi, ecx
lea     ecx, [esi+40h]
mov     [esi+9ch], eax
call    ??4cstring@@qaeabv0@pbd@z
push    dword ptr [esi+1ch]
call    ds:iswindow
test    eax, eax
jnz     short loc_401272
mov     eax, 80004005h
jmp     loc_4014c1
lea     edi, [esi+98h]
xor     ebx, ebx
cmp     [edi], ebx
jz      short loc_40128c
mov     ecx, esi
call    sub_401c75
mov     ecx, esi
call    sub_401c44
push    ebx
push    10h
push    ebx
push    73646976h
push    [ebp+szfile]
push    edi
call    avistreamopenfromfilea
cmp     eax, ebx
mov     [ebp+var_28], eax
jge     short loc_4012ac
mov     [edi], ebx
jmp     loc_4014c1
mov     eax, [ebp+arg_4]
push    ebx
push    dword ptr [edi]
mov     [esi+3ch], eax
mov     eax, [ebp+arg_8]
mov     [esi+78h], eax
call    avistreamgetframeopen
push    dword ptr [edi]
mov     [esi+8ch], eax
call    avistreamlength
push    dword ptr [edi]
mov     [esi+84h], eax
call    avistreamlength
push    dword ptr [edi]
mov     ebx, eax
call    avistreamstart
add     ebx, eax
push    ebx
push    dword ptr [edi]
call    avistreamsampletotime
cdq
idiv    dword ptr [esi+84h]
mov     ecx, [esi+3ch]
test    cl, 1
mov     [esi+80h], eax
jz      short loc_401306
add     eax, eax
jmp     short loc_40130d
test    cl, 2
jz      short loc_401313
shr     eax, 1
mov     [esi+80h], eax
lea     eax, [ebp+rect]
push    eax
push    dword ptr [esi+1ch]
call    ds:getclientrect
lea     eax, [ebp+psi]
push    8ch
push    eax
push    dword ptr [edi]
call    avistreaminfoa
mov     eax, [ebp+rect.right]
mov     edi, [ebp+psi.rcframe.right]
sub     edi, [ebp+psi.rcframe.left]
mov     ebx, [ebp+psi.rcframe.bottom]
sub     ebx, [ebp+psi.rcframe.top]
mov     ecx, eax
sub     ecx, [ebp+rect.left]
cmp     ecx, edi
mov     [ebp+arg_8], ecx
jle     short loc_40135f
sub     eax, edi
sub     eax, [ebp+rect.left]
cdq
sub     eax, edx
mov     ecx, eax
sar     ecx, 1
mov     [ebp+arg_c], ecx
jmp     short loc_401366
and     [ebp+arg_c], 0
mov     ecx, [ebp+arg_c]
mov     edx, [ebp+rect.bottom]
sub     edx, [ebp+rect.top]
cmp     edx, ebx
mov     [ebp+arg_4], edx
jle     short loc_401384
mov     eax, edx
sub     eax, ebx
cdq
sub     eax, edx
mov     edx, [ebp+arg_4]
sar     eax, 1
mov     [ebp+szfile], eax
jmp     short loc_401388
and     [ebp+szfile], 0
mov     eax, [ebp+arg_8]
mov     [esi+44h], edx
mov     [esi+48h], eax
mov     eax, [esi+3ch]
test    al, 4
jz      short loc_4013a9
mov     eax, [ebp+szfile]
mov     [esi+50h], ecx
mov     [esi+4ch], eax
mov     [esi+48h], edi
mov     [esi+44h], ebx
jmp     short loc_401422
test    al, 8
jnz     short loc_401422
push    1eh
push    ebx
push    edi
push    0ffffffffh
push    0ffffffffh
push    0
mov     ecx, esi
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
test    byte ptr [esi+3ch], 10h
mov     [esi+48h], edi
mov     [esi+44h], ebx
jz      short loc_401422
lea     eax, [ebp+rc]
push    eax
push    dword ptr [esi+1ch]
call    ds:getwindowrect
push    dword ptr [esi+1ch]
call    ds:getparent
push    eax
call    sub_41936d
test    eax, eax
jz      short loc_401422
lea     ecx, [ebp+rc]
push    ecx
mov     ecx, eax
call    ?screentoclient@cwnd@@qbexpautagrect@@@z
push    [ebp+szfile]
lea     eax, [ebp+rc]
push    [ebp+arg_c]
push    eax
call    ds:offsetrect
mov     eax, [ebp+rc.bottom]
push    0
sub     eax, [ebp+rc.top]
mov     ecx, esi
push    eax
mov     eax, [ebp+rc.right]
sub     eax, [ebp+rc.left]
push    eax
push    [ebp+rc.top]
push    [ebp+rc.left]
call    ?movewindow@cwnd@@qaexhhhhh@z
mov     eax, [esi+3ch]
test    al, 40h
jz      short loc_4014a1
push    esi
lea     ecx, [ebp+var_14]
call    sub_41f9d0
lea     eax, [ebp+var_14]
lea     ebx, [esi+68h]
neg     eax
sbb     eax, eax
and     eax, [ebp+rc.left]
push    eax
call    ds:createcompatibledc
push    eax
mov     ecx, ebx
call    sub_41f438
mov     eax, [ebp+rect.bottom]
mov     ecx, [ebp+rect.right]
sub     eax, [ebp+rect.top]
sub     ecx, [ebp+rect.left]
lea     edi, [esi+60h]
push    eax
push    ecx
push    [ebp+rc.left]
call    ds:createcompatiblebitmap
push    eax
mov     ecx, edi
call    sub_41fbc4
test    edi, edi
jz      short loc_401477
mov     edi, [edi+4]
push    edi
push    dword ptr [esi+6ch]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
push    5
mov     [esi+5ch], eax
call    ds:getsyscolor
push    eax
lea     eax, [ebp+rect]
push    eax
mov     ecx, ebx
call    ?fillsolidrect@cdc@@qaexpbutagrect@@k@z
lea     ecx, [ebp+var_14]
call    sub_41fa42
jmp     short loc_4014af
test    al, 80h
jz      short loc_4014af
mov     ecx, esi
call    sub_401c05
mov     [esi+78h], eax
test    byte ptr [esi+3ch], 20h
jz      short loc_4014be
push    0
mov     ecx, esi
call    sub_4014c8
mov     eax, [ebp+var_28]
pop     edi
pop     esi
pop     ebx
leave
retn    10h
push    esi
mov     esi, ecx
xor     eax, eax
cmp     [esi+98h], eax
jz      short loc_4014ea
mov     ecx, [esp+4+arg_0]
cmp     [esi+90h], eax
mov     [esi+54h], ecx
jz      short loc_4014ee
mov     [esi+88h], eax
xor     eax, eax
jmp     short loc_401521
push    edi
push    1
pop     edi
push    edi
push    eax
push    dword ptr [esi+1ch]
call    ds:invalidaterect
push    edi
push    esi
push    offset fptc
push    3ch
push    dword ptr [esi+80h]
call    ds:timesetevent
mov     [esi+94h], eax
mov     [esi+90h], edi
mov     eax, edi
pop     edi
pop     esi
retn    4
push    esi
push    edi
xor     edi, edi
mov     esi, ecx
cmp     [esp+8+arg_0], edi
jz      short loc_401550
push    dword ptr [esi+1ch]
mov     [esi+88h], edi
call    ds:iswindow
test    eax, eax
jz      short loc_401550
push    1
push    edi
push    dword ptr [esi+1ch]
call    ds:invalidaterect
cmp     [esi+90h], edi
jz      short loc_40156f
mov     eax, [esi+94h]
cmp     eax, edi
jz      short loc_401569
push    eax
call    ds:timekillevent
mov     [esi+90h], edi
push    1
pop     eax
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
push    edi
cmp     dword ptr [esi+90h], 0
lea     edi, [esi+90h]
jz      short loc_40159e
mov     eax, [esi+94h]
test    eax, eax
jz      short loc_40159b
push    eax
call    ds:timekillevent
and     dword ptr [edi], 0
mov     eax, [esi+84h]
cmp     [esp+0ch], eax
jbe     short loc_4015ae
mov     eax, [esp+0ch]
push    1
push    0
push    dword ptr [esi+1ch]
mov     [esi+88h], eax
call    ds:invalidaterect
pop     edi
pop     esi
retn    4
push    ebp
mov     ebp, esp
sub     esp, 54h
push    esi
mov     esi, ecx
push    esi
lea     ecx, [ebp-54h]
call    ??0cpaintdc@@qae@pavcwnd@@@z
cmp     dword ptr [esi+98h], 0
jz      short loc_4015ec
lea     eax, [ebp-54h]
mov     ecx, esi
push    eax
call    sub_4016a4
lea     ecx, [ebp-54h]
call    ??1cpaintdc@@uae@xz
pop     esi
leave
retn
cmp     dword ptr [ecx+58h], 0
jz      short loc_401606
and     dword ptr [ecx+58h], 0
call    sub_401a7d
push    1
pop     eax
retn    4
mov     eax, [esp+4]
test    byte ptr [eax+18h], 0c0h
jnz     short loc_40161d
mov     dword ptr [ecx+58h], 1
call    sub_4192d4
retn    4
push    ebp
mov     ebp, esp
sub     esp, 10h
push    esi
mov     esi, ecx
call    sub_41adc5
cmp     dword ptr [esi+6ch], 0
jz      short loc_401661
test    byte ptr [esi+3ch], 40h
jz      short loc_401661
lea     eax, [ebp-10h]
push    eax
push    dword ptr [esi+1ch]
call    ds:getclientrect
push    5
call    ds:getsyscolor
push    eax
lea     eax, [ebp-10h]
push    eax
lea     ecx, [esi+68h]
call    ?fillsolidrect@cdc@@qaexpbutagrect@@k@z
pop     esi
leave
retn
mov     ecx, [esp+dwuser]
inc     dword ptr [ecx+88h]
mov     edx, [ecx+88h]
cmp     edx, [ecx+84h]
lea     eax, [ecx+88h]
jb      short loc_401694
and     dword ptr [eax], 0
cmp     dword ptr [ecx+54h], 0
jz      short loc_401694
push    1
call    sub_401525
jmp     short locret_4016a1
push    1
push    0
push    dword ptr [ecx+1ch]
call    ds:invalidaterect
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 30h
push    esi
lea     eax, [ebp+rect]
push    edi
mov     esi, ecx
push    eax
push    dword ptr [esi+1ch]
call    ds:getclientrect
push    dword ptr [esi+88h]
push    dword ptr [esi+8ch]
call    avistreamgetframe
xor     edi, edi
mov     [ebp+lpbi], eax
cmp     eax, edi
jz      loc_40182d
push    ebx
lea     ecx, [ebp+cy]
call    ??0cdc@@qae@xz_0
lea     ecx, [ebp+var_10]
call    sub_401d9e
mov     ebx, [ebp+arg_0]
mov     [ebp+var_10], offset off_423818
cmp     ebx, edi
jnz     short loc_4016fc
xor     eax, eax
jmp     short loc_4016ff
mov     eax, [ebx+4]
push    eax
call    ds:createcompatibledc
push    eax
lea     ecx, [ebp+cy]
call    sub_41f438
mov     eax, [ebp+rect.bottom]
mov     ecx, [ebp+rect.right]
sub     eax, [ebp+rect.top]
sub     ecx, [ebp+rect.left]
push    eax
push    ecx
push    dword ptr [ebx+4]
call    ds:createcompatiblebitmap
push    eax
lea     ecx, [ebp+var_10]
call    sub_41fbc4
lea     eax, [ebp+var_10]
neg     eax
sbb     eax, eax
and     eax, [ebp+var_c]
push    eax
push    [ebp+hdc]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
mov     ecx, [ebp+rect.right]
mov     [ebp+var_8], eax
mov     eax, [ebp+rect.bottom]
sub     ecx, [ebp+rect.left]
sub     eax, [ebp+rect.top]
lea     edx, [esi+68h]
cmp     edx, edi
jnz     short loc_40175c
xor     edx, edx
jmp     short loc_40175f
mov     edx, [edx+4]
push    0cc0020h
push    edi
push    edi
mov     ebx, ds:bitblt
push    edx
push    eax
push    ecx
push    edi
push    edi
push    [ebp+hdc]
call    ebx
push    edi
push    0ffffffffh
push    0ffffffffh
push    edi
mov     ecx, [esi+4ch]
push    edi
push    edi
lea     eax, [ebp+cy]
push    [ebp+lpbi]
neg     eax
push    dword ptr [esi+44h]
sbb     eax, eax
add     ecx, [ebp+rect.top]
push    dword ptr [esi+48h]
and     eax, [ebp+hdc]
push    ecx
mov     ecx, [esi+50h]
add     ecx, [ebp+rect.left]
push    ecx
push    eax
push    dword ptr [esi+7ch]
call    drawdibdraw
cmp     [esi+9ch], edi
jz      short loc_4017d4
push    [ebp+arg_0]
lea     eax, [ebp+cy]
mov     ecx, esi
push    eax
mov     eax, [ebp+rect.bottom]
sub     eax, [ebp+rect.top]
push    eax
mov     eax, [ebp+rect.right]
sub     eax, [ebp+rect.left]
push    eax
push    [ebp+rect.top]
push    [ebp+rect.left]
call    sub_401833
jmp     short loc_401802
mov     ecx, [ebp+rect.bottom]
mov     edx, [ebp+rect.right]
sub     ecx, [ebp+rect.top]
sub     edx, [ebp+rect.left]
lea     eax, [ebp+cy]
push    0cc0020h
neg     eax
sbb     eax, eax
push    edi
and     eax, [ebp+hdc]
push    edi
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    edx
push    [ebp+rect.top]
push    [ebp+rect.left]
push    dword ptr [eax+4]
call    ebx
mov     eax, [ebp+var_8]
pop     ebx
cmp     eax, edi
jz      short loc_40180d
mov     edi, [eax+4]
push    edi
push    [ebp+hdc]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
lea     ecx, [ebp+var_10]
mov     [ebp+var_10], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
lea     ecx, [ebp+cy]
call    sub_41f4b6
pop     edi
pop     esi
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 38h
push    ebx
push    esi
mov     esi, ecx
push    edi
lea     ecx, [ebp+var_38]
call    ??0cdc@@qae@xz_0
lea     ecx, [ebp+var_28]
call    ??0cdc@@qae@xz_0
lea     ecx, [ebp+var_18]
call    sub_401d9e
mov     edi, offset off_423818
lea     ecx, [ebp+var_10]
mov     [ebp+var_18], edi
call    sub_401d9e
mov     ebx, [ebp+cy]
mov     [ebp+var_10], edi
test    ebx, ebx
jnz     short loc_401874
xor     eax, eax
jmp     short loc_401877
mov     eax, [ebx+4]
mov     edi, ds:createcompatibledc
push    eax
call    edi
push    eax
lea     ecx, [ebp+var_38]
call    sub_41f438
push    0
push    1
push    1
push    [ebp+nheight]
push    [ebp+nwidth]
call    ds:createbitmap
push    eax
lea     ecx, [ebp+var_18]
call    sub_41fbc4
lea     eax, [ebp+var_18]
neg     eax
sbb     eax, eax
and     eax, [ebp+var_14]
push    eax
push    [ebp+var_34]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
mov     [ebp+var_8], eax
mov     eax, [ebp+hdc]
test    eax, eax
jz      short loc_4018c4
mov     eax, [eax+4]
push    eax
call    edi
push    eax
lea     ecx, [ebp+var_28]
call    sub_41f438
push    [ebp+nheight]
mov     eax, [ebp+hdc]
push    [ebp+nwidth]
push    dword ptr [eax+4]
call    ds:createcompatiblebitmap
push    eax
lea     ecx, [ebp+var_10]
call    sub_41fbc4
lea     eax, [ebp+var_10]
neg     eax
sbb     eax, eax
and     eax, [ebp+var_c]
push    eax
push    [ebp+var_24]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
mov     [ebp+var_4], eax
lea     eax, [esi+68h]
xor     ecx, ecx
cmp     eax, ecx
jnz     short loc_40190e
xor     eax, eax
jmp     short loc_401911
mov     eax, [eax+4]
push    0cc0020h
push    ecx
push    ecx
push    eax
push    [ebp+nheight]
mov     edi, ds:bitblt
push    [ebp+nwidth]
push    ecx
push    ecx
push    [ebp+var_24]
call    edi
mov     eax, [ebx]
push    dword ptr [esi+78h]
mov     ecx, ebx
call    dword ptr [eax+2ch]
mov     eax, [esi+4ch]
mov     ecx, [esi+50h]
test    ebx, ebx
jnz     short loc_401944
xor     edx, edx
jmp     short loc_401947
mov     edx, [ebx+4]
push    0cc0020h
push    eax
push    ecx
push    edx
push    dword ptr [esi+44h]
push    dword ptr [esi+48h]
push    eax
push    ecx
push    [ebp+var_34]
call    edi
mov     eax, [ebx]
push    0
mov     ecx, ebx
call    dword ptr [eax+2ch]
mov     eax, [ebx]
push    0ffffffh
mov     ecx, ebx
call    dword ptr [eax+30h]
mov     ecx, [esi+4ch]
mov     edx, [esi+50h]
lea     eax, [ebp+var_38]
push    8800c6h
neg     eax
sbb     eax, eax
push    ecx
and     eax, [ebp+var_34]
push    edx
push    eax
push    [ebp+nheight]
push    [ebp+nwidth]
push    ecx
push    edx
push    dword ptr [ebx+4]
call    edi
push    0ffffffh
lea     ecx, [ebp+var_28]
call    sub_41f634
push    0
lea     ecx, [ebp+var_28]
call    sub_41f691
mov     eax, [esi+44h]
mov     ecx, [esi+4ch]
mov     edx, [esi+50h]
mov     [ebp+cy], eax
lea     eax, [ebp+var_38]
mov     esi, [esi+48h]
neg     eax
sbb     eax, eax
push    8800c6h
and     eax, [ebp+var_34]
push    ecx
push    edx
push    eax
push    [ebp+cy]
push    esi
push    ecx
push    edx
push    [ebp+var_24]
call    edi
xor     esi, esi
cmp     ebx, esi
jnz     short loc_4019e3
xor     ebx, ebx
jmp     short loc_4019e6
mov     ebx, [ebx+4]
push    0ee0086h
push    esi
push    esi
push    ebx
push    [ebp+nheight]
push    [ebp+nwidth]
push    esi
push    esi
push    [ebp+var_24]
call    edi
lea     eax, [ebp+var_28]
push    0cc0020h
neg     eax
sbb     eax, eax
push    esi
and     eax, [ebp+var_24]
push    esi
push    eax
mov     eax, [ebp+hdc]
push    [ebp+nheight]
push    [ebp+nwidth]
push    [ebp+y]
push    [ebp+x]
push    dword ptr [eax+4]
call    edi
mov     eax, [ebp+var_4]
cmp     eax, esi
jnz     short loc_401a2c
xor     eax, eax
jmp     short loc_401a2f
mov     eax, [eax+4]
push    eax
push    [ebp+var_24]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
mov     eax, [ebp+var_8]
cmp     eax, esi
jz      short loc_401a42
mov     esi, [eax+4]
push    esi
push    [ebp+var_34]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
mov     esi, offset ??_7cgdiobject@@6b@
lea     ecx, [ebp+var_10]
mov     [ebp+var_10], esi
call    sub_41fc1b
lea     ecx, [ebp+var_18]
mov     [ebp+var_18], esi
call    sub_41fc1b
lea     ecx, [ebp+var_28]
call    sub_41f4b6
lea     ecx, [ebp+var_38]
call    sub_41f4b6
pop     edi
pop     esi
pop     ebx
leave
retn    18h
push    ebp
mov     ebp, esp
sub     esp, 38h
push    ebx
mov     ebx, ecx
cmp     dword ptr [ebx+98h], 0
jz      loc_401c02
test    byte ptr [ebx+3ch], 40h
jnz     loc_401c02
push    dword ptr [ebx+1ch]
call    ds:getparent
push    eax
call    sub_41936d
test    eax, eax
mov     [ebp+hwnd], eax
jz      loc_401c02
push    esi
lea     eax, [ebp+rect]
push    edi
push    eax
push    dword ptr [ebx+1ch]
call    ds:getwindowrect
mov     ecx, ebx
call    sub_41bb75
test    ax, 201h
jz      short loc_401ae3
mov     esi, ds:getsystemmetrics
push    2eh
call    esi
mov     edi, eax
push    2dh
jmp     short loc_401aff
mov     ecx, ebx
call    sub_41bb5b
test    eax, 800000h
jz      short loc_401b0d
mov     esi, ds:getsystemmetrics
push    6
call    esi
mov     edi, eax
push    5
call    esi
push    edi
push    eax
lea     eax, [ebp+rect]
push    eax
call    ds:offsetrect
lea     esi, [ebp+rect]
lea     edi, [ebp+x1]
movsd
movsd
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+x1]
movsd
push    eax
movsd
call    ?screentoclient@cwnd@@qbexpautagrect@@@z
lea     eax, [ebp+rect]
push    eax
push    dword ptr [ebx+1ch]
call    ds:getclientrect
push    [ebp+hwnd]
lea     ecx, [ebp+var_38]
call    sub_41f9d0
mov     eax, [ebx+5ch]
test    eax, eax
jz      short loc_401b64
jnz     short loc_401b48
xor     eax, eax
jmp     short loc_401b4b
mov     eax, [eax+4]
push    eax
push    dword ptr [ebx+6ch]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
lea     ecx, [ebx+68h]
call    sub_41f4a0
lea     ecx, [ebx+60h]
call    sub_41fc1b
lea     eax, [ebp+var_38]
neg     eax
sbb     eax, eax
and     eax, [ebp+hdc]
push    eax
call    ds:createcompatibledc
push    eax
lea     ecx, [ebx+68h]
call    sub_41f438
mov     eax, [ebp+rect.bottom]
mov     ecx, [ebp+rect.right]
sub     eax, [ebp+rect.top]
sub     ecx, [ebp+rect.left]
lea     esi, [ebx+60h]
push    eax
push    ecx
push    [ebp+hdc]
call    ds:createcompatiblebitmap
push    eax
mov     ecx, esi
call    sub_41fbc4
test    esi, esi
jz      short loc_401ba7
mov     esi, [esi+4]
push    esi
push    dword ptr [ebx+6ch]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
push    0
mov     ecx, ebx
mov     [ebx+5ch], eax
call    sub_41bcd7
mov     ecx, [ebp+rect.bottom]
mov     edx, [ebp+rect.right]
sub     ecx, [ebp+rect.top]
sub     edx, [ebp+rect.left]
lea     eax, [ebp+var_38]
push    0cc0020h
push    [ebp+y1]
neg     eax
push    [ebp+x1]
sbb     eax, eax
and     eax, [ebp+hdc]
push    eax
push    ecx
push    edx
push    [ebp+rect.top]
push    [ebp+rect.left]
push    dword ptr [ebx+6ch]
call    ds:bitblt
push    9
mov     ecx, ebx
call    sub_41bcd7
lea     ecx, [ebp+var_38]
call    sub_41fa42
pop     edi
pop     esi
pop     ebx
leave
retn
push    0
push    dword ptr [ecx+8ch]
call    avistreamgetframe
test    eax, eax
jz      short loc_401c3e
cmp     word ptr [eax+0eh], 8
jnz     short loc_401c3e
mov     ecx, [eax+20h]
mov     edx, [eax]
lea     ecx, [edx+ecx*4]
movzx   ecx, byte ptr [ecx+eax]
lea     eax, [eax+ecx*4+28h]
xor     ecx, ecx
mov     ch, [eax]
mov     cl, [eax+1]
movzx   eax, byte ptr [eax+2]
shl     ecx, 8
or      eax, ecx
retn
mov     eax, 0ff00h
retn
xor     eax, eax
mov     dword ptr [ecx+58h], 1
mov     [ecx+98h], eax
mov     [ecx+8ch], eax
mov     [ecx+5ch], eax
mov     [ecx+94h], eax
mov     [ecx+88h], eax
mov     [ecx+4ch], eax
mov     [ecx+50h], eax
mov     [ecx+90h], eax
retn
push    ebx
push    esi
mov     esi, ecx
push    edi
xor     ebx, ebx
cmp     [esi+90h], ebx
lea     edi, [esi+90h]
jz      short loc_401c9d
mov     eax, [esi+94h]
cmp     eax, ebx
jz      short loc_401c9b
push    eax
call    ds:timekillevent
mov     [edi], ebx
mov     eax, [esi+8ch]
lea     edi, [esi+8ch]
cmp     eax, ebx
jz      short loc_401cb5
push    eax
call    avistreamgetframeclose
mov     [edi], ebx
mov     eax, [esi+98h]
cmp     eax, ebx
jz      short loc_401cc5
push    eax
call    avistreamrelease
mov     eax, [esi+5ch]
cmp     eax, ebx
jz      short loc_401cde
jnz     short loc_401cd2
xor     eax, eax
jmp     short loc_401cd5
mov     eax, [eax+4]
push    eax
push    dword ptr [esi+6ch]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
cmp     [esi+6ch], ebx
jz      short loc_401ceb
lea     ecx, [esi+68h]
call    sub_41f4a0
cmp     [esi+64h], ebx
jz      short loc_401cf8
lea     ecx, [esi+60h]
call    sub_41fc1b
mov     eax, [esi+40h]
add     esi, 40h
cmp     [eax-8], ebx
jz      short loc_401d11
push    eax
call    ds:deletefilea
mov     ecx, esi
call    ?empty@cstring@@qaexxz
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, ecx
call    ?ondestroy@cwnd@@iaexxz
mov     eax, [esi+94h]
test    eax, eax
jz      short loc_401d2e
push    eax
call    ds:timekillevent
mov     ecx, esi
call    sub_401c75
mov     esi, [esi+7ch]
test    esi, esi
jz      short loc_401d42
push    esi
call    drawdibclose
call    avifileexit
pop     esi
retn
mov     eax, [ecx+0a0h]
cmp     dword ptr [eax-8], 0
jz      short loc_401d7a
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+0ch]
push    8dh
push    eax
call    ds:loadcursora
push    eax
call    ds:setcursor
push    1
pop     eax
jmp     short locret_401d7f
call    sub_4192d4
retn    0ch
push    esi
mov     esi, ecx
call    sub_401172
test    [esp+4+arg_0], 1
jz      short loc_401d98
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, ecx
and     dword ptr [eax+4], 0
mov     dword ptr [eax], offset ??_7cgdiobject@@6b@
retn
push    esi
mov     esi, ecx
call    sub_420b23
test    [esp+4+arg_0], 1
jz      short loc_401dc1
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
call    sub_418f4c
mov     dword ptr [esi], offset ??_7cstatic@@6b@
mov     eax, off_42b8a0
mov     [esi+3ch], eax
mov     dword ptr [esi], offset off_423890
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ecx
lea     ecx, [esi+3ch]
mov     dword ptr [esi], offset off_423890
call    sub_41c5b1
mov     ecx, esi
call    sub_420b23
pop     esi
retn
mov     eax, offset off_423828
retn
lea     eax, [esp+arg_0]
add     ecx, 3ch
push    eax
call    sub_41c69e
lea     ecx, [esp+arg_0]
call    sub_41c5b1
retn    4
push    esi
mov     esi, ecx
mov     eax, [esi+3ch]
cmp     dword ptr [eax-8], 0
jz      short loc_401e36
push    5
push    eax
call    sub_401e7d
pop     ecx
pop     ecx
mov     ecx, esi
call    sub_4192d4
pop     esi
retn    0ch
mov     eax, [ecx+3ch]
cmp     dword ptr [eax-8], 0
jz      short loc_401e6f
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+0ch]
push    8dh
push    eax
call    ds:loadcursora
push    eax
call    ds:setcursor
push    1
pop     eax
jmp     short locret_401e74
call    sub_4192d4
retn    0ch
push    1
pop     eax
retn    8
push    ebp
mov     ebp, esp
sub     esp, 20ch
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    [ebp+nshowcmd]
push    ebx
push    ebx
push    [ebp+lpfile]
push    offset operation
push    ebx
call    ds:shellexecutea
cmp     eax, 20h
mov     [ebp+var_4], eax
ja      loc_401f67
lea     eax, [ebp+string1]
mov     edi, 80000000h
push    eax
push    offset ahtm
push    edi
call    sub_401f6f
add     esp, 0ch
test    eax, eax
jnz     loc_401f67
mov     esi, ds:lstrcata
lea     eax, [ebp+string1]
push    offset ashellopencomma
push    eax
call    esi
lea     eax, [ebp+string1]
push    eax
lea     eax, [ebp+string1]
push    eax
push    edi
call    sub_401f6f
add     esp, 0ch
test    eax, eax
jnz     short loc_401f67
lea     eax, [ebp+string1]
push    offset substr
push    eax
call    _strstr
mov     edi, eax
pop     ecx
cmp     edi, ebx
pop     ecx
jnz     short loc_401f44
lea     eax, [ebp+string1]
push    offset a1_0
push    eax
call    _strstr
mov     edi, eax
pop     ecx
cmp     edi, ebx
pop     ecx
jnz     short loc_401f44
lea     eax, [ebp+string1]
push    eax
call    ds:lstrlena
lea     edi, [ebp+eax+var_20d]
jmp     short loc_401f46
mov     [edi], bl
push    offset asc_42b148
push    edi
call    esi
push    [ebp+lpfile]
push    edi
call    esi
push    [ebp+nshowcmd]
lea     eax, [ebp+string1]
push    eax
call    ds:winexec
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 104h
lea     eax, [ebp+lpsubkey]
push    esi
push    eax
push    1
push    0
push    [ebp+lpsubkey]
push    [ebp+hkey]
call    ds:regopenkeyexa
mov     esi, eax
test    esi, esi
jnz     short loc_401fc8
lea     eax, [ebp+hkey]
mov     [ebp+hkey], 104h
push    eax
lea     eax, [ebp+data]
push    eax
push    esi
push    [ebp+lpsubkey]
call    ds:regqueryvaluea
lea     eax, [ebp+data]
push    eax
push    [ebp+lpstring1]
call    ds:lstrcpya
push    [ebp+lpsubkey]
call    ds:regclosekey
mov     eax, esi
pop     esi
leave
retn
push    esi
mov     esi, ecx
lea     ecx, [esi+3ch]
mov     dword ptr [esi], offset off_423890
call    sub_41c5b1
mov     ecx, esi
call    sub_420b23
test    [esp+4+arg_0], 1
jz      short loc_401ff3
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
push    edi
push    [esp+8+arg_0]
mov     esi, ecx
push    81h
call    ??0cdialog@@qae@ipavcwnd@@@z
lea     edi, [esi+5ch]
mov     ecx, edi
call    sub_418f4c
lea     ecx, [esi+98h]
mov     dword ptr [edi], offset ??_7cstatic@@6b@
call    sub_403402
mov     eax, off_42b8a0
xor     edx, edx
mov     [esi+108h], eax
mov     eax, off_42b8a0
mov     [esi+10ch], eax
lea     eax, [esi+11ch]
mov     ecx, offset off_423818
mov     [eax+4], edx
mov     [eax], ecx
lea     eax, [esi+124h]
mov     [eax+4], edx
mov     [eax], ecx
lea     eax, [esi+12ch]
mov     [eax+4], edx
mov     [eax], ecx
mov     eax, off_42b8a0
lea     ecx, [esi+160h]
mov     [esi+13ch], eax
call    ??0ctooltipctrl@@qae@xz
mov     dword ptr [esi], offset off_423a70
mov     eax, esi
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
lea     eax, [esi+5ch]
push    eax
push    3efh
push    [esp+0ch+arg_0]
call    ?ddx_control@@ygxpavcdataexchange@@haavcwnd@@@z
add     esi, 98h
push    esi
push    3e8h
push    [esp+0ch+arg_0]
call    ?ddx_control@@ygxpavcdataexchange@@haavcwnd@@@z
pop     esi
retn    4
mov     eax, offset off_423948
retn
sub     esp, 18h
push    ebx
push    ebp
push    esi
push    edi
mov     ebp, ecx
call    ?oninitdialog@cdialog@@uaehxz
mov     eax, dword_42f868
xor     ebx, ebx
mov     [ebp+0ech], eax
mov     eax, dword_42f3a8
cmp     ebp, ebx
mov     [ebp+0f0h], eax
jnz     short loc_4020e9
xor     eax, eax
jmp     short loc_4020ec
mov     eax, [ebp+1ch]
mov     ecx, dword_42f868
cmp     ebp, ebx
mov     dword_42ce78[ecx*4], eax
jnz     short loc_402105
mov     hdlg, ebx
jmp     short loc_40210d
mov     eax, [ebp+1ch]
mov     hdlg, eax
mov     eax, nnumberofbytestoread
mov     [ebp+0fch], eax
mov     eax, dword_42d348
mov     [ebp+104h], eax
mov     eax, [ebp+0fch]
shl     eax, 2
push    eax
call    _malloc
push    dword ptr [ebp+0fch]
mov     [ebp+0f4h], eax
call    _malloc
mov     ecx, [ebp+0fch]
mov     edi, [ebp+0f4h]
shl     ecx, 2
mov     [ebp+0f8h], eax
mov     esi, lpbuffer
mov     eax, ecx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     ecx, [ebp+0fch]
mov     esi, dword_42d354
mov     edi, [ebp+0f8h]
mov     eax, ecx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, [ebp+104h]
shl     eax, 4
push    eax
call    _malloc
mov     ecx, [ebp+104h]
mov     [ebp+100h], eax
mov     esi, dword_42d34c
mov     edi, eax
shl     ecx, 4
mov     eax, ecx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
push    dword_42d354
call    _free
push    lpbuffer
mov     dword_42d354, ebx
call    _free
push    dword_42d34c
mov     lpbuffer, ebx
call    _free
add     esp, 18h
mov     esi, 3e8h
mov     ecx, ebp
mov     dword_42d34c, ebx
push    20h
push    dword_42f860
push    ebx
push    esi
call    sub_41bad0
mov     ecx, eax
call    sub_41bb8f
push    20h
mov     ecx, ebp
push    dword_42f864
push    ebx
push    esi
call    sub_41bad0
mov     ecx, eax
call    sub_41bbc0
lea     edi, [ebp+98h]
push    1
mov     ecx, edi
call    ?showwindow@cwnd@@qaehh@z
mov     eax, dword_42d2e4
push    offset dword_42d330
mov     [ebp+15ch], eax
lea     ecx, [ebp+108h]
call    sub_41c69e
push    offset dword_42d32c
lea     ecx, [ebp+10ch]
call    sub_41c69e
mov     eax, dword_42d328
push    offset dword_42d6a8
mov     [ebp+110h], eax
mov     eax, dword_42d324
mov     [ebp+118h], eax
mov     [ebp+114h], ebx
mov     eax, dword_42d690
lea     ecx, [ebp+13ch]
mov     [ebp+134h], eax
mov     al, byte_42d6a0
mov     [ebp+138h], al
mov     al, byte_42d6ac
mov     [ebp+154h], al
call    sub_41c69e
mov     eax, dword_42d6a4
mov     ebx, ds:getsyscolor
mov     [ebp+140h], eax
cmp     byte_42d2e8, 1
jnz     short loc_4022ed
push    2dh
call    ds:getsystemmetrics
push    eax
push    12h
call    ebx
push    eax
push    12h
call    ebx
push    eax
push    0fh
call    ebx
push    eax
push    ebp
push    esi
mov     ecx, edi
call    sub_403434
cmp     byte_42d2e8, 0
jnz     short loc_402319
push    2dh
call    ds:getsystemmetrics
push    eax
push    12h
call    ebx
push    eax
mov     ecx, edi
push    dword_42d2ec
push    dword_42d2f0
push    ebp
push    esi
call    sub_403434
push    dword_42d2e4
mov     ecx, edi
call    unknown_libname_7
cmp     dword ptr [ebp+134h], 1
jnz     loc_4023e2
push    dword_42d69c
lea     ecx, [ebp+11ch]
call    sub_41fbc4
push    dword_42d698
lea     ecx, [ebp+124h]
call    sub_41fbc4
push    dword_42d694
lea     ecx, [ebp+12ch]
call    sub_41fbc4
xor     ebx, ebx
lea     eax, [ebp+11ch]
cmp     eax, ebx
jnz     short loc_402376
xor     eax, eax
jmp     short loc_402379
mov     eax, [eax+4]
push    eax
push    ebx
push    172h
push    dword ptr [ebp+78h]
call    ds:sendmessagea
lea     eax, [esp+28h+pv]
push    eax
push    18h
push    dword ptr [ebp+120h]
call    ds:getobjecta
push    2
mov     ecx, ebp
push    [esp+2ch+cy]
push    [esp+30h+var_14]
push    ebx
push    ebx
push    ebx
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
push    5
lea     ecx, [ebp+5ch]
call    sub_41bcd7
push    ebx
mov     ecx, edi
call    sub_41bcd7
cmp     ebp, ebx
jnz     short loc_4023ca
xor     eax, eax
jmp     short loc_4023cd
mov     eax, [ebp+1ch]
mov     ecx, dword_42f854
inc     dword_42f854
mov     dword_42d370[ecx*4], eax
jmp     short loc_4023f7
push    0
lea     ecx, [ebp+5ch]
call    sub_41bcd7
push    5
mov     ecx, edi
call    sub_41bcd7
xor     ebx, ebx
lea     edi, [ebp+160h]
push    ebx
push    ebp
mov     ecx, edi
call    sub_41839e
push    ebx
push    1
push    401h
push    dword ptr [ebp+17ch]
call    ds:sendmessagea
mov     eax, dword_42d2f4
cmp     [eax-8], ebx
jz      short loc_402437
push    ebx
push    ebx
push    eax
push    esi
mov     ecx, ebp
call    sub_41bad0
push    eax
mov     ecx, edi
call    ?addtool@ctooltipctrl@@qaehpavcwnd@@pbdpbutagrect@@i@z
push    1
pop     eax
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 18h
retn
retn
call    sub_4192d4
retn    0ch
push    ebx
push    ebp
push    esi
mov     esi, ecx
mov     ebp, 3e8h
push    edi
mov     eax, [esi+0f0h]
cmp     eax, ebp
jz      short loc_40246f
push    5
push    pszsound[eax*4]
call    ds:sndplaysounda
mov     al, [esi+138h]
cmp     al, 1
jnz     short loc_402484
xor     ebx, ebx
push    ebx
push    ebx
push    8fdh
jmp     short loc_4024b4
cmp     al, 2
jnz     short loc_402493
xor     ebx, ebx
push    ebx
push    ebx
push    8f8h
jmp     short loc_4024b4
cmp     al, 3
jnz     short loc_4024a7
push    0
push    dword ptr [esi+140h]
push    dword ptr [esi+13ch]
jmp     short loc_40250d
cmp     al, 4
jnz     short loc_4024c5
xor     ebx, ebx
push    ebx
push    ebx
push    8f7h
push    lparam
call    ds:sendmessagea
jmp     loc_402629
xor     ebx, ebx
xor     eax, eax
cmp     [esi+114h], ebx
setz    al
cmp     [esi+110h], ebx
mov     [esi+114h], eax
jnz     short loc_402539
push    ebx
mov     ecx, esi
call    sub_402a89
cmp     eax, 1
jnz     short loc_402517
cmp     dword_42f6d4, ebx
jz      loc_402629
cmp     dword_42b260, ebx
jz      loc_402629
push    ebx
push    ebx
push    lptext
call    sub_4205e1
jmp     loc_402629
cmp     dword_42f6dc, ebx
jz      loc_402629
cmp     dword_42b260, ebx
jz      loc_402629
push    ebx
push    ebx
push    dword_42f6d8
jmp     short loc_40250d
mov     eax, [esi+0ech]
cmp     byte_42f70c[eax], bl
jbe     short loc_40258f
xor     edi, edi
cmp     dword_42f868, ebx
jle     short loc_40258f
mov     ebp, offset dword_42ce78
mov     eax, [esi+0ech]
mov     cl, byte_42f70c[edi]
cmp     cl, byte_42f70c[eax]
jnz     short loc_40257e
cmp     edi, eax
jz      short loc_40257e
push    ebx
push    ebx
push    149eh
push    dword ptr [ebp+0]
call    ds:sendmessagea
inc     edi
add     ebp, 4
cmp     edi, dword_42f868
jl      short loc_402556
mov     ebp, 3e8h
cmp     [esi+114h], ebx
jz      short loc_4025f4
push    1
pop     edi
cmp     [esi+118h], edi
jnz     short loc_4025ae
push    edi
lea     ecx, [esi+98h]
call    sub_403426
push    105h
push    ebx
push    ebx
push    dword ptr [esi+0b4h]
call    ds:redrawwindow
push    dword ptr [esi+108h]
mov     ecx, esi
push    ebp
call    sub_41bad0
mov     ecx, eax
call    sub_41bbf1
movzx   eax, byte ptr [esi+154h]
imul    eax, 64h
push    ebx
push    eax
push    edi
mov     [esi+158h], edi
push    dword ptr [esi+1ch]
call    ds:settimer
jmp     short loc_402629
cmp     dword ptr [esi+118h], 1
jnz     short loc_402609
push    ebx
lea     ecx, [esi+98h]
call    sub_403426
push    dword ptr [esi+10ch]
mov     ecx, esi
push    ebp
call    sub_41bad0
mov     ecx, eax
call    sub_41bbf1
push    1
push    dword ptr [esi+1ch]
call    ds:killtimer
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
cmp     dword ptr [esp+4], 1
push    esi
mov     esi, ecx
jnz     short loc_40263f
push    1
call    sub_402a89
mov     ecx, esi
call    sub_4192d4
pop     esi
retn    4
push    esi
mov     esi, ecx
push    [esp+4+lparam]
push    0
push    407h
push    dword ptr [esi+17ch]
call    ds:sendmessagea
push    [esp+4+lparam]
mov     ecx, esi
call    ?pretranslatemessage@cdialog@@uaehpautagmsg@@@z
pop     esi
retn    4
push    esi
mov     esi, ecx
cmp     dword ptr [esi+134h], 1
jnz     short loc_4026bb
push    edi
lea     edi, [esi+144h]
push    edi
push    dword ptr [esi+78h]
call    ds:getwindowrect
lea     eax, [esp+10h]
push    eax
push    dword ptr [esi+1ch]
call    ds:clienttoscreen
push    dword ptr [esp+14h]
push    dword ptr [esp+14h]
push    edi
call    ds:ptinrect
test    eax, eax
pop     edi
jz      short loc_4026bb
push    0
mov     ecx, esi
call    sub_402924
mov     ecx, esi
call    sub_4192d4
pop     esi
retn    0ch
push    esi
mov     esi, ecx
cmp     dword ptr [esi+134h], 1
jnz     short loc_402732
push    edi
lea     edi, [esi+144h]
push    edi
push    dword ptr [esi+78h]
call    ds:getwindowrect
lea     eax, [esp+10h]
push    eax
push    dword ptr [esi+1ch]
call    ds:clienttoscreen
push    dword ptr [esp+14h]
push    dword ptr [esp+14h]
push    edi
call    ds:ptinrect
test    eax, eax
pop     edi
jz      short loc_40270c
mov     ecx, esi
call    sub_40244b
cmp     dword ptr [esi+114h], 1
jnz     short loc_402729
cmp     dword ptr [esi+118h], 1
jnz     short loc_402729
push    0
mov     ecx, esi
call    sub_402924
jmp     short loc_402732
push    1
mov     ecx, esi
call    sub_40285d
mov     ecx, esi
call    sub_4192d4
pop     esi
retn    0ch
push    esi
push    edi
push    1
mov     esi, ecx
pop     edi
cmp     [esi+134h], edi
jnz     loc_4027d7
push    ebx
lea     ebx, [esi+144h]
push    ebx
push    dword ptr [esi+78h]
call    ds:getwindowrect
lea     eax, [esp+14h]
push    eax
push    dword ptr [esi+1ch]
call    ds:clienttoscreen
push    dword ptr [esp+18h]
push    dword ptr [esp+18h]
push    ebx
call    ds:ptinrect
test    eax, eax
pop     ebx
jz      short loc_4027ae
cmp     [esi+114h], edi
jnz     short loc_40279e
cmp     [esi+118h], edi
jnz     short loc_40279e
push    0
mov     ecx, esi
call    sub_402924
jmp     short loc_4027d7
cmp     [esp+0ch], edi
jz      short loc_4027d7
push    edi
mov     ecx, esi
call    sub_4028bc
jmp     short loc_4027d7
cmp     [esi+114h], edi
jnz     short loc_4027cf
cmp     [esi+118h], edi
jnz     short loc_4027cf
push    0
mov     ecx, esi
call    sub_402924
call    ds:releasecapture
jmp     short loc_4027d7
push    edi
mov     ecx, esi
call    sub_40285d
mov     ecx, esi
call    sub_4192d4
pop     edi
pop     esi
retn    0ch
push    esi
mov     esi, ecx
cmp     dword ptr [esi+134h], 1
jnz     short loc_40282b
push    edi
lea     edi, [esi+144h]
push    edi
push    dword ptr [esi+78h]
call    ds:getwindowrect
lea     eax, [esp+10h]
push    eax
push    dword ptr [esi+1ch]
call    ds:clienttoscreen
push    dword ptr [esp+14h]
push    dword ptr [esp+14h]
push    edi
call    ds:ptinrect
test    eax, eax
pop     edi
jz      short loc_40282b
push    0
mov     ecx, esi
call    sub_402924
mov     ecx, esi
call    sub_4192d4
pop     esi
retn    0ch
cmp     dword ptr [ecx+114h], 1
jnz     short ?onupdatetabs@cmdiclientareawnd@@iaejij@z
cmp     dword ptr [ecx+118h], 1
jnz     short ?onupdatetabs@cmdiclientareawnd@@iaejij@z
push    0
call    sub_402924
jmp     short loc_402858
push    ebp
mov     ebp, esp
sub     esp, 18h
push    esi
mov     esi, ecx
lea     eax, [esi+11ch]
test    eax, eax
jz      short loc_402873
mov     eax, [eax+4]
push    eax
push    0
push    172h
push    dword ptr [esi+78h]
call    ds:sendmessagea
lea     eax, [ebp+pv]
push    eax
push    18h
push    dword ptr [esi+120h]
call    ds:getobjecta
push    2
mov     ecx, esi
push    [ebp+cy]
push    [ebp+var_14]
push    0
push    0
push    0
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
cmp     [ebp+arg_0], 1
pop     esi
jnz     short locret_4028b8
call    ds:releasecapture
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 18h
push    esi
mov     esi, ecx
lea     eax, [esi+124h]
test    eax, eax
jz      short loc_4028d2
mov     eax, [eax+4]
push    eax
push    0
push    172h
push    dword ptr [esi+78h]
call    ds:sendmessagea
lea     eax, [ebp+pv]
push    eax
push    18h
push    dword ptr [esi+128h]
call    ds:getobjecta
push    2
mov     ecx, esi
push    [ebp+cy]
push    [ebp+var_14]
push    0
push    0
push    0
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
cmp     [ebp+arg_0], 1
jnz     short loc_40291f
push    dword ptr [esi+1ch]
call    ds:setcapture
push    eax
call    sub_41936d
pop     esi
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 18h
push    esi
mov     esi, ecx
lea     eax, [esi+12ch]
test    eax, eax
jz      short loc_40293a
mov     eax, [eax+4]
push    eax
push    0
push    172h
push    dword ptr [esi+78h]
call    ds:sendmessagea
lea     eax, [ebp+pv]
push    eax
push    18h
push    dword ptr [esi+130h]
call    ds:getobjecta
push    2
mov     ecx, esi
push    [ebp+cy]
push    [ebp+var_14]
push    0
push    0
push    0
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
cmp     [ebp+arg_0], 1
jnz     short loc_402987
push    dword ptr [esi+1ch]
call    ds:setcapture
push    eax
call    sub_41936d
pop     esi
leave
retn    4
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
cmp     [esi+110h], edi
jnz     short loc_4029aa
cmp     dword_42f6d4, edi
jnz     short loc_4029cd
cmp     dword_42f6dc, edi
jnz     short loc_4029cd
cmp     [esi+15ch], edi
jz      short loc_4029cd
cmp     [esi+134h], edi
jnz     short loc_4029cd
push    3e8h
mov     ecx, esi
call    sub_41bad0
mov     ecx, eax
call    sub_41bd40
mov     ecx, esi
call    sub_40244b
push    1
pop     eax
cmp     [esi+134h], eax
jnz     short loc_402a01
cmp     [esi+114h], eax
jnz     short loc_4029f9
cmp     [esi+118h], eax
jnz     short loc_4029f9
push    edi
mov     ecx, esi
call    sub_402924
jmp     short loc_402a01
push    eax
mov     ecx, esi
call    sub_40285d
pop     edi
xor     eax, eax
pop     esi
retn    8
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
cmp     [esi+114h], ebx
jz      short loc_402a82
cmp     [esi+118h], ebx
mov     [esi+114h], ebx
jz      short loc_402a30
push    ebx
lea     ecx, [esi+98h]
call    sub_403426
push    dword ptr [esi+10ch]
mov     ecx, esi
push    3e8h
call    sub_41bad0
mov     ecx, eax
call    sub_41bbf1
push    1
push    dword ptr [esi+1ch]
call    ds:killtimer
cmp     dword ptr [esi+134h], 1
jnz     short loc_402a82
cmp     dword ptr [esi+114h], 1
jnz     short loc_402a79
cmp     dword ptr [esi+118h], 1
jnz     short loc_402a79
push    ebx
mov     ecx, esi
call    sub_402924
jmp     short loc_402a82
push    1
mov     ecx, esi
call    sub_40285d
pop     esi
xor     eax, eax
pop     ebx
retn    8
push    ebp
mov     ebp, esp
sub     esp, 30h
push    ebx
push    esi
push    edi
push    1
pop     eax
mov     esi, ecx
push    eax
mov     [ebp+var_20], eax
call    _malloc
mov     [ebp+block], eax
mov     al, byte_42f85c
push    eax
push    offset azweipetexe
call    sub_40d3d8
add     esp, 0ch
push    eax
push    0
push    30h
call    ds:openprocess
test    eax, eax
mov     [ebp+hprocess], eax
jz      loc_402f69
mov     ebx, ds:writeprocessmemory
xor     edi, edi
cmp     [esi+0fch], edi
mov     [ebp+var_14], edi
jbe     loc_402b98
mov     ecx, [esi+0f4h]
mov     eax, [ebp+var_14]
mov     ecx, [ecx+eax*4]
mov     [ebp+var_1c], ecx
mov     ecx, [esi+0f8h]
movzx   eax, byte ptr [eax+ecx]
mov     [ebp+numberofbyteswritten], eax
lea     eax, [edi+1]
push    eax
mov     [ebp+nsize], eax
push    [ebp+block]
call    _realloc
pop     ecx
mov     edx, [ebp+var_14]
pop     ecx
mov     [ebp+block], eax
mov     cl, byte ptr [ebp+numberofbyteswritten]
mov     [edi+eax], cl
mov     ecx, [ebp+var_1c]
mov     eax, [esi+0f4h]
inc     ecx
cmp     [eax+edx*4+4], ecx
jz      short loc_402b81
mov     eax, [ebp+var_1c]
lea     ecx, [ebp+numberofbyteswritten]
push    ecx
and     [ebp+numberofbyteswritten], 0
push    [ebp+nsize]
sub     eax, edi
mov     [ebp+var_1c], eax
push    [ebp+block]
push    eax
push    [ebp+hprocess]
call    ebx
test    esi, esi
jnz     short loc_402b50
xor     eax, eax
jmp     short loc_402b53
mov     eax, [esi+1ch]
push    [ebp+nsize]
xor     edi, edi
push    [ebp+var_1c]
push    eax
push    edi
push    1
push    [ebp+numberofbyteswritten]
push    [ebp+block]
call    sub_40469c
push    [ebp+block]
call    _free
push    1
call    _malloc
add     esp, 24h
mov     [ebp+block], eax
jmp     short loc_402b84
mov     edi, [ebp+nsize]
inc     [ebp+var_14]
mov     eax, [ebp+var_14]
cmp     eax, [esi+0fch]
jb      loc_402ae3
xor     edi, edi
cmp     [esi+104h], edi
mov     [ebp+numberofbyteswritten], edi
mov     [ebp+var_1c], edi
jbe     loc_402f57
xor     edi, edi
mov     eax, [esi+100h]
add     eax, edi
movzx   ecx, byte ptr [eax+1]
dec     ecx
jz      loc_402e8c
dec     ecx
jz      loc_402dd6
dec     ecx
jz      loc_402d1d
dec     ecx
jz      loc_402c7c
dec     ecx
jnz     loc_402f42
fldz
lea     ecx, [ebp+numberofbyteswritten]
fstp    [ebp+buffer]
mov     eax, [eax+4]
push    ecx
lea     ecx, [ebp+buffer]
push    8
push    ecx
push    eax
push    [ebp+hprocess]
mov     [ebp+nsize], eax
call    ds:readprocessmemory
mov     eax, [esi+100h]
add     eax, edi
movzx   ecx, byte ptr [eax]
dec     ecx
jz      short loc_402c55
dec     ecx
jz      short loc_402c4d
dec     ecx
jnz     loc_402f42
cmp     [ebp+arg_0], 0
jz      loc_402f42
cmp     dword ptr [esi+158h], 0
jz      short loc_402c2d
fld     [ebp+buffer]
fstp    qword ptr [eax+8]
jmp     short loc_402c33
fld     qword ptr [eax+8]
fstp    [ebp+buffer]
lea     eax, [ebp+numberofbyteswritten]
push    eax
lea     eax, [ebp+buffer]
push    8
push    eax
push    [ebp+nsize]
push    [ebp+hprocess]
call    ebx
test    esi, esi
jnz     short loc_402c5d
xor     eax, eax
jmp     short loc_402c60
fld     [ebp+buffer]
fsub    qword ptr [eax+8]
jmp     short loc_402c30
fld     [ebp+buffer]
fadd    qword ptr [eax+8]
jmp     short loc_402c30
mov     eax, [esi+1ch]
mov     ecx, [esi+100h]
push    8
push    dword ptr [edi+ecx+4]
push    eax
push    0
push    1
lea     eax, [ebp+buffer]
push    [ebp+numberofbyteswritten]
jmp     loc_402f39
fldz
lea     ecx, [ebp+numberofbyteswritten]
fstp    [ebp+var_14]
mov     eax, [eax+4]
push    ecx
lea     ecx, [ebp+var_14]
push    4
push    ecx
push    eax
push    [ebp+hprocess]
mov     [ebp+nsize], eax
call    ds:readprocessmemory
mov     eax, [esi+100h]
add     eax, edi
movzx   ecx, byte ptr [eax]
dec     ecx
jz      short loc_402cf6
dec     ecx
jz      short loc_402cee
dec     ecx
jnz     loc_402f42
cmp     [ebp+arg_0], 0
jz      loc_402f42
cmp     dword ptr [esi+158h], 0
jz      short loc_402cce
fld     [ebp+var_14]
fstp    qword ptr [eax+8]
jmp     short loc_402cd4
fld     qword ptr [eax+8]
fstp    [ebp+var_14]
lea     eax, [ebp+numberofbyteswritten]
push    eax
lea     eax, [ebp+var_14]
push    4
push    eax
push    [ebp+nsize]
push    [ebp+hprocess]
call    ebx
test    esi, esi
jnz     short loc_402cfe
xor     eax, eax
jmp     short loc_402d01
fld     qword ptr [eax+8]
fsubr   [ebp+var_14]
jmp     short loc_402cd1
fld     qword ptr [eax+8]
fadd    [ebp+var_14]
jmp     short loc_402cd1
mov     eax, [esi+1ch]
mov     ecx, [esi+100h]
push    4
push    dword ptr [edi+ecx+4]
push    eax
push    0
push    1
lea     eax, [ebp+var_14]
push    [ebp+numberofbyteswritten]
jmp     loc_402f39
and     [ebp+var_14], 0
mov     eax, [eax+4]
lea     ecx, [ebp+numberofbyteswritten]
mov     [ebp+nsize], eax
push    ecx
lea     ecx, [ebp+var_14]
push    4
push    ecx
push    eax
push    [ebp+hprocess]
call    ds:readprocessmemory
mov     eax, [esi+100h]
add     eax, edi
movzx   ecx, byte ptr [eax]
dec     ecx
jz      short loc_402daa
dec     ecx
jz      short loc_402d9d
dec     ecx
jnz     loc_402f42
cmp     [ebp+arg_0], 0
jz      loc_402f42
cmp     dword ptr [esi+158h], 0
jz      short loc_402d78
mov     ecx, [ebp+var_14]
and     dword ptr [ebp+var_30+4], 0
mov     dword ptr [ebp+var_30], ecx
fild    [ebp+var_30]
fstp    qword ptr [eax+8]
jmp     short loc_402d83
fld     qword ptr [eax+8]
call    __ftol
mov     [ebp+var_14], eax
lea     eax, [ebp+numberofbyteswritten]
push    eax
lea     eax, [ebp+var_14]
push    4
push    eax
push    [ebp+nsize]
push    [ebp+hprocess]
call    ebx
test    esi, esi
jnz     short loc_402db7
xor     eax, eax
jmp     short loc_402dba
fld     qword ptr [eax+8]
call    __ftol
sub     [ebp+var_14], eax
jmp     short loc_402d83
fld     qword ptr [eax+8]
call    __ftol
add     [ebp+var_14], eax
jmp     short loc_402d83
mov     eax, [esi+1ch]
mov     ecx, [esi+100h]
push    4
push    dword ptr [edi+ecx+4]
push    eax
push    0
push    1
lea     eax, [ebp+var_14]
push    [ebp+numberofbyteswritten]
jmp     loc_402f39
and     [ebp+var_14], 0
mov     eax, [eax+4]
lea     ecx, [ebp+numberofbyteswritten]
mov     [ebp+nsize], eax
push    ecx
lea     ecx, [ebp+var_14]
push    2
push    ecx
push    eax
push    [ebp+hprocess]
call    ds:readprocessmemory
mov     eax, [esi+100h]
add     eax, edi
movzx   ecx, byte ptr [eax]
dec     ecx
jz      short loc_402e60
dec     ecx
jz      short loc_402e53
dec     ecx
jnz     loc_402f42
cmp     [ebp+arg_0], 0
jz      loc_402f42
cmp     dword ptr [esi+158h], 0
jz      short loc_402e2e
movzx   ecx, word ptr [ebp+var_14]
mov     dword ptr [ebp+buffer+4], ecx
fild    dword ptr [ebp+buffer+4]
fstp    qword ptr [eax+8]
jmp     short loc_402e39
fld     qword ptr [eax+8]
call    __ftol
mov     [ebp+var_14], eax
lea     eax, [ebp+numberofbyteswritten]
push    eax
lea     eax, [ebp+var_14]
push    2
push    eax
push    [ebp+nsize]
push    [ebp+hprocess]
call    ebx
test    esi, esi
jnz     short loc_402e6d
xor     eax, eax
jmp     short loc_402e70
fld     qword ptr [eax+8]
call    __ftol
sub     [ebp+var_14], eax
jmp     short loc_402e39
fld     qword ptr [eax+8]
call    __ftol
add     [ebp+var_14], eax
jmp     short loc_402e39
mov     eax, [esi+1ch]
mov     ecx, [esi+100h]
push    2
push    dword ptr [edi+ecx+4]
push    eax
push    0
push    1
lea     eax, [ebp+var_14]
push    [ebp+numberofbyteswritten]
jmp     loc_402f39
and     [ebp+var_1], 0
mov     eax, [eax+4]
lea     ecx, [ebp+numberofbyteswritten]
mov     [ebp+nsize], eax
push    ecx
lea     ecx, [ebp+var_1]
push    1
push    ecx
push    eax
push    [ebp+hprocess]
call    ds:readprocessmemory
mov     eax, [esi+100h]
add     eax, edi
movzx   ecx, byte ptr [eax]
dec     ecx
jz      short loc_402f12
dec     ecx
jz      short loc_402eed
dec     ecx
jnz     loc_402f42
cmp     [ebp+arg_0], 0
jz      short loc_402f42
cmp     dword ptr [esi+158h], 0
jz      short loc_402ee0
movzx   ecx, [ebp+var_1]
mov     dword ptr [ebp+buffer+4], ecx
fild    dword ptr [ebp+buffer+4]
fstp    qword ptr [eax+8]
jmp     short loc_402ef8
fld     qword ptr [eax+8]
call    __ftol
mov     [ebp+var_1], al
jmp     short loc_402ef8
fld     qword ptr [eax+8]
call    __ftol
sub     [ebp+var_1], al
lea     eax, [ebp+numberofbyteswritten]
push    eax
lea     eax, [ebp+var_1]
push    1
push    eax
push    [ebp+nsize]
push    [ebp+hprocess]
call    ebx
test    esi, esi
jnz     short loc_402f1f
xor     eax, eax
jmp     short loc_402f22
fld     qword ptr [eax+8]
call    __ftol
add     [ebp+var_1], al
jmp     short loc_402ef8
mov     eax, [esi+1ch]
mov     ecx, [esi+100h]
push    1
push    dword ptr [edi+ecx+4]
push    eax
push    0
push    1
lea     eax, [ebp+var_1]
push    [ebp+numberofbyteswritten]
push    eax
call    sub_40469c
add     esp, 1ch
inc     [ebp+var_1c]
add     edi, 10h
mov     eax, [ebp+var_1c]
cmp     eax, [esi+104h]
jb      loc_402bac
push    [ebp+hprocess]
and     dword ptr [esi+158h], 0
call    ds:closehandle
jmp     short loc_402f97
test    esi, esi
jz      short loc_402f70
mov     esi, [esi+1ch]
mov     edx, offset acantfoundthega
or      ecx, 0ffffffffh
mov     edi, edx
xor     eax, eax
xor     ebx, ebx
repne scasb
push    ebx
push    ebx
not     ecx
push    esi
push    1
dec     ecx
push    1
push    ecx
push    edx
call    sub_40469c
add     esp, 1ch
mov     [ebp+var_20], ebx
push    [ebp+block]
call    _free
mov     eax, [ebp+var_20]
pop     ecx
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    esi
mov     esi, ecx
call    sub_402fc6
test    [esp+4+arg_0], 1
jz      short loc_402fc0
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
push    edi
lea     ecx, [esi+160h]
call    ??1ctooltipctrl@@uae@xz
lea     ecx, [esi+13ch]
call    sub_41c5b1
lea     ecx, [esi+12ch]
mov     edi, offset ??_7cgdiobject@@6b@
mov     [ecx], edi
call    sub_41fc1b
lea     ecx, [esi+124h]
mov     [ecx], edi
call    sub_41fc1b
lea     ecx, [esi+11ch]
mov     [ecx], edi
call    sub_41fc1b
lea     ecx, [esi+10ch]
call    sub_41c5b1
lea     ecx, [esi+108h]
call    sub_41c5b1
lea     ecx, [esi+98h]
call    sub_40341b
lea     ecx, [esi+5ch]
call    sub_420b23
mov     ecx, esi
call    sub_41cb2f
pop     edi
pop     esi
retn
mov     eax, [ecx]
jmp     dword ptr [eax+0d0h]
mov     eax, [ecx]
jmp     dword ptr [eax+0d4h]
mov     eax, [ecx]
jmp     dword ptr [eax+0d8h]
push    ebp
mov     ebp, esp
sub     esp, 94h
push    edi
xor     edi, edi
cmp     [ebp+h], edi
mov     [ebp+hrgndst], edi
jz      loc_4033f6
push    edi
call    ds:createcompatibledc
cmp     eax, edi
mov     [ebp+hdc], eax
jz      loc_4033f6
push    ebx
lea     eax, [ebp+pv]
push    esi
mov     esi, ds:getobjecta
push    eax
push    18h
push    [ebp+h]
call    esi
mov     eax, [ebp+var_4c]
push    20h
mov     [ebp+pbmi.bmiheader.biwidth], eax
mov     eax, [ebp+cy]
pop     ebx
mov     [ebp+pbmi.bmiheader.biheight], eax
push    edi
lea     eax, [ebp+ppvbits]
push    edi
push    eax
lea     eax, [ebp+pbmi]
push    edi
push    eax
mov     [ebp+pbmi.bmiheader.bisize], 28h
push    [ebp+hdc]
mov     [ebp+pbmi.bmiheader.biplanes], 1
mov     [ebp+pbmi.bmiheader.bibitcount], bx
mov     [ebp+pbmi.bmiheader.bicompression], edi
mov     [ebp+pbmi.bmiheader.bisizeimage], edi
mov     [ebp+pbmi.bmiheader.bixpelspermeter], edi
mov     [ebp+pbmi.bmiheader.biypelspermeter], edi
mov     [ebp+pbmi.bmiheader.biclrused], edi
mov     [ebp+pbmi.bmiheader.biclrimportant], edi
call    ds:createdibsection
cmp     eax, edi
mov     [ebp+ho], eax
jz      loc_4033eb
push    eax
push    [ebp+hdc]
call    ds:selectobject
push    [ebp+hdc]
mov     [ebp+var_38], eax
call    ds:createcompatibledc
cmp     eax, edi
mov     [ebp+hdcsrc], eax
jz      loc_4033d8
lea     eax, [ebp+pbmi.bmicolors]
push    eax
push    18h
push    [ebp+ho]
call    esi
mov     eax, [ebp+var_5c]
push    4
cdq
pop     ecx
idiv    ecx
test    edx, edx
jz      short loc_403138
inc     [ebp+var_5c]
jmp     short loc_403126
push    [ebp+h]
push    [ebp+hdcsrc]
call    ds:selectobject
push    0cc0020h
push    edi
push    edi
mov     [ebp+var_34], eax
push    [ebp+hdcsrc]
push    [ebp+cy]
push    [ebp+var_4c]
push    edi
push    edi
push    [ebp+hdc]
call    ds:bitblt
push    660h
push    2
mov     [ebp+var_1c], 64h
call    ds:globalalloc
push    eax
mov     [ebp+hmem], eax
call    ds:globallock
mov     esi, eax
push    edi
push    edi
mov     [esi], ebx
mov     ebx, 7fffffffh
push    ebx
lea     eax, [esi+10h]
push    ebx
push    eax
mov     dword ptr [esi+4], 1
mov     [esi+0ch], edi
mov     [esi+8], edi
call    ds:setrect
xor     eax, eax
mov     al, byte ptr [ebp+arg_4+1]
movzx   ecx, byte ptr [ebp+arg_4]
mov     [ebp+var_2], al
mov     eax, [ebp+arg_4]
shr     eax, 10h
mov     [ebp+var_3], al
movzx   eax, byte ptr [ebp+arg_8]
add     ecx, eax
mov     eax, 0ffh
cmp     ecx, eax
mov     byte ptr [ebp+h+3], al
jg      short loc_4031ce
mov     byte ptr [ebp+h+3], cl
movzx   edx, [ebp+var_2]
xor     ecx, ecx
mov     [ebp+var_1], al
mov     cl, byte ptr [ebp+arg_8+1]
movzx   ecx, cl
add     ecx, edx
cmp     ecx, eax
jg      short loc_4031e6
mov     [ebp+var_1], cl
mov     ecx, [ebp+arg_8]
mov     byte ptr [ebp+arg_8+3], al
movzx   edx, [ebp+var_3]
shr     ecx, 10h
movzx   ecx, cl
add     ecx, edx
cmp     ecx, eax
jg      short loc_4031ff
mov     byte ptr [ebp+arg_8+3], cl
mov     eax, [ebp+var_60]
mov     [ebp+ytop], edi
dec     eax
imul    eax, [ebp+var_5c]
add     eax, [ebp+var_54]
cmp     [ebp+cy], edi
mov     [ebp+var_30], eax
jle     loc_403386
xor     edx, edx
cmp     [ebp+var_4c], edi
mov     [ebp+xright], edx
jle     loc_403371
mov     ecx, [ebp+var_1c]
add     ecx, 2
shl     ecx, 4
mov     [ebp+dwbytes], ecx
mov     [ebp+xleft], edx
lea     ecx, [eax+edx*4]
mov     edx, [ebp+xright]
mov     [ebp+ho], ecx
cmp     edx, [ebp+var_4c]
jge     loc_403361
mov     edx, [ecx]
sar     edx, 10h
cmp     dl, byte ptr [ebp+arg_4]
jb      short loc_403275
cmp     dl, byte ptr [ebp+h+3]
ja      short loc_403275
xor     edx, edx
mov     dl, [ecx+1]
cmp     dl, [ebp+var_2]
jb      short loc_403275
cmp     dl, [ebp+var_1]
ja      short loc_403275
mov     dl, [ecx]
cmp     dl, [ebp+var_3]
jb      short loc_403275
cmp     dl, byte ptr [ebp+arg_8+3]
jbe     short loc_403286
mov     ecx, [ebp+ho]
mov     edx, [ebp+var_4c]
add     ecx, 4
inc     [ebp+xright]
mov     [ebp+ho], ecx
cmp     [ebp+xright], edx
jl      short loc_403248
mov     ecx, [ebp+xright]
cmp     ecx, [ebp+xleft]
jle     loc_403361
mov     eax, [ebp+var_1c]
cmp     [esi+8], eax
jb      short loc_4032c8
push    [ebp+hmem]
call    ds:globalunlock
add     [ebp+dwbytes], 640h
add     [ebp+var_1c], 64h
push    2
push    [ebp+dwbytes]
push    [ebp+hmem]
call    ds:globalrealloc
push    eax
mov     [ebp+hmem], eax
call    ds:globallock
mov     esi, eax
mov     ecx, [ebp+ytop]
lea     eax, [ecx+1]
push    eax
mov     eax, [esi+8]
push    [ebp+xright]
inc     eax
inc     eax
push    ecx
push    [ebp+xleft]
shl     eax, 4
add     eax, esi
push    eax
call    ds:setrect
mov     eax, [ebp+xleft]
cmp     eax, [esi+10h]
jge     short loc_4032f2
mov     [esi+10h], eax
mov     eax, [ebp+ytop]
cmp     eax, [esi+14h]
jge     short loc_4032fd
mov     [esi+14h], eax
mov     ecx, [ebp+xright]
cmp     ecx, [esi+18h]
jle     short loc_403308
mov     [esi+18h], ecx
inc     eax
cmp     eax, [esi+1ch]
jle     short loc_403311
mov     [esi+1ch], eax
inc     dword ptr [esi+8]
cmp     dword ptr [esi+8], 7d0h
jnz     short loc_40335e
push    esi
push    [ebp+dwbytes]
push    edi
call    ds:extcreateregion
cmp     [ebp+hrgndst], edi
mov     [ebp+ho], eax
jz      short loc_40334a
push    2
push    eax
push    [ebp+hrgndst]
push    [ebp+hrgndst]
call    ds:combinergn
push    [ebp+ho]
call    ds:deleteobject
jmp     short loc_40334d
mov     [ebp+hrgndst], eax
push    edi
push    edi
push    ebx
lea     eax, [esi+10h]
push    ebx
push    eax
mov     [esi+8], edi
call    ds:setrect
mov     eax, [ebp+var_30]
mov     edx, [ebp+xright]
inc     edx
cmp     edx, [ebp+var_4c]
mov     [ebp+xright], edx
jl      loc_403233
sub     eax, [ebp+var_5c]
inc     [ebp+ytop]
mov     ecx, [ebp+ytop]
cmp     ecx, [ebp+cy]
mov     [ebp+var_30], eax
jl      loc_403219
mov     eax, [ebp+var_1c]
push    esi
add     eax, 2
shl     eax, 4
push    eax
push    edi
call    ds:extcreateregion
cmp     [ebp+hrgndst], edi
mov     esi, eax
jz      short loc_4033b7
push    2
push    esi
push    [ebp+hrgndst]
push    [ebp+hrgndst]
call    ds:combinergn
push    esi
call    ds:deleteobject
jmp     short loc_4033ba
mov     [ebp+hrgndst], esi
push    [ebp+hmem]
call    ds:globalfree
push    [ebp+var_34]
push    [ebp+hdcsrc]
call    ds:selectobject
push    [ebp+hdcsrc]
call    ds:deletedc
push    [ebp+var_38]
push    [ebp+hdc]
call    ds:selectobject
push    eax
call    ds:deleteobject
push    [ebp+hdc]
call    ds:deletedc
pop     esi
pop     ebx
mov     eax, [ebp+hrgndst]
pop     edi
leave
retn
mov     eax, offset off_423b50
retn
push    esi
mov     esi, ecx
call    sub_418f4c
mov     dword ptr [esi], offset off_423b68
mov     dword ptr [esi+50h], 1
mov     eax, esi
pop     esi
retn
mov     dword ptr [ecx], offset off_423b68
jmp     sub_420b7d
mov     eax, [esp+arg_0]
mov     [ecx+4ch], eax
retn    4
mov     eax, [ecx+4ch]
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
push    [ebp+arg_4]
push    [ebp+niddlgitem]
call    ?subclassdlgitem@cwnd@@qaehipav1@@z
test    eax, eax
jz      short loc_403464
mov     eax, [ebp+arg_c]
push    1
mov     [esi+3ch], eax
mov     eax, [ebp+arg_8]
mov     [esi+40h], eax
mov     eax, [ebp+arg_10]
mov     [esi+44h], eax
mov     eax, [ebp+arg_14]
mov     [esi+48h], eax
pop     eax
pop     esi
pop     ebp
retn    18h
push    ebp
mov     ebp, esp
sub     esp, 238h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     ebx, ecx
push    dword ptr [esi+18h]
call    sub_41f423
mov     [ebp+var_4], eax
mov     eax, [esi+10h]
mov     [ebp+var_8], eax
lea     edi, [esi+1ch]
mov     esi, ds:copyrect
lea     eax, [ebp+rcdst]
push    edi
push    eax
call    esi
lea     eax, [ebp+var_28]
push    edi
push    eax
call    esi
push    4
mov     ecx, ebx
pop     eax
add     [ebp+rcdst.left], eax
sub     [ebp+rcdst.right], eax
add     [ebp+rcdst.top], eax
sub     [ebp+rcdst.bottom], eax
lea     eax, [ebp+string]
push    200h
push    eax
call    sub_41bc18
push    dword ptr [ebx+40h]
lea     esi, [ebp+var_28]
mov     ecx, ebx
sub     esp, 10h
mov     edi, esp
movsd
movsd
push    [ebp+var_4]
movsd
movsd
call    sub_40379e
push    dword ptr [ebx+48h]
lea     esi, [ebp+var_28]
mov     ecx, ebx
sub     esp, 10h
mov     edi, esp
movsd
movsd
push    [ebp+var_4]
movsd
movsd
call    sub_403645
push    dword ptr [ebx+3ch]
lea     eax, [ebp+string]
lea     esi, [ebp+var_28]
mov     ecx, ebx
push    eax
sub     esp, 10h
mov     edi, esp
movsd
movsd
push    [ebp+var_4]
movsd
movsd
call    sub_4038e6
cmp     dword ptr [ebx+4ch], 1
jnz     short loc_40356d
push    dword ptr [ebx+40h]
lea     esi, [ebp+var_28]
mov     ecx, ebx
sub     esp, 10h
mov     edi, esp
movsd
movsd
push    [ebp+var_4]
movsd
movsd
call    sub_40379e
push    0ffffffffh
lea     esi, [ebp+var_28]
sub     esp, 10h
mov     ecx, ebx
mov     edi, esp
movsd
movsd
push    [ebp+var_4]
movsd
movsd
call    sub_403645
push    dword ptr [ebx+3ch]
lea     eax, [ebp+string]
lea     esi, [ebp+var_28]
mov     ecx, ebx
push    eax
sub     esp, 10h
mov     edi, esp
movsd
movsd
push    [ebp+var_4]
movsd
movsd
call    sub_4038e6
test    byte ptr [ebp+var_8], 10h
jz      loc_403618
cmp     dword ptr [ebx+50h], 0
jz      short loc_40358d
lea     eax, [ebp+rcdst]
push    eax
mov     eax, [ebp+arg_0]
push    dword ptr [eax+18h]
call    ds:drawfocusrect
test    byte ptr [ebp+var_8], 1
jz      loc_40363e
push    dword ptr [ebx+40h]
lea     esi, [ebp+var_28]
mov     ecx, ebx
sub     esp, 10h
mov     edi, esp
movsd
movsd
push    [ebp+var_4]
movsd
movsd
call    sub_40379e
push    0ffffffffh
lea     esi, [ebp+var_28]
sub     esp, 10h
mov     ecx, ebx
mov     edi, esp
movsd
movsd
push    [ebp+var_4]
movsd
movsd
call    sub_403645
lea     esi, [ebp+var_28]
lea     edi, [ebp+rc]
movsd
movsd
movsd
push    1
lea     eax, [ebp+rc]
push    1
push    eax
movsd
call    ds:offsetrect
push    dword ptr [ebx+3ch]
lea     eax, [ebp+string]
lea     esi, [ebp+rc]
mov     ecx, ebx
push    eax
sub     esp, 10h
mov     edi, esp
movsd
movsd
push    [ebp+var_4]
movsd
movsd
call    sub_4038e6
cmp     dword ptr [ebx+50h], 0
jz      short loc_40363e
lea     eax, [ebp+rcdst]
push    eax
mov     eax, [ebp+arg_0]
push    dword ptr [eax+18h]
call    ds:drawfocusrect
jmp     short loc_40363e
test    byte ptr [ebp+var_8], 4
jz      short loc_40363e
push    dword ptr [ebx+44h]
lea     eax, [ebp+string]
lea     esi, [ebp+var_28]
mov     ecx, ebx
push    eax
sub     esp, 10h
mov     edi, esp
movsd
movsd
push    [ebp+var_4]
movsd
movsd
call    sub_4038e6
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, [ebp+arg_14]
mov     [ebp+var_4], ecx
test    eax, eax
jge     short loc_40365c
neg     eax
mov     [ebp+var_8], eax
jmp     short loc_40365f
mov     [ebp+var_8], eax
and     [ebp+var_14], 0
test    eax, eax
jle     locret_40379a
push    ebx
push    esi
push    edi
mov     esi, 200h
mov     ebx, 10101h
mov     eax, [ebp+var_14]
push    3fh
lea     edi, [eax+1]
mov     eax, 0ffh
cdq
lea     ecx, [edi+1]
idiv    ecx
movzx   eax, al
mov     ecx, eax
or      ecx, esi
shl     ecx, 8
or      ecx, eax
shl     ecx, 8
or      ecx, eax
pop     eax
cdq
idiv    edi
add     eax, 0c0h
movzx   edx, al
mov     eax, edx
or      eax, esi
shl     eax, 8
or      eax, edx
shl     eax, 8
or      eax, edx
cmp     [ebp+var_8], 1
jnz     short loc_4036c6
mov     eax, 0ffffffh
mov     ecx, 808080h
cmp     [ebp+arg_14], 0
jge     short loc_4036d4
mov     [ebp+color], ecx
mov     [ebp+var_10], eax
jmp     short loc_4036da
mov     [ebp+color], eax
mov     [ebp+var_10], ecx
push    [ebp+color]
mov     ecx, [ebp+var_4]
push    [ebp+rc.top]
push    [ebp+rc.right]
push    [ebp+rc.top]
push    [ebp+rc.left]
push    [ebp+arg_0]
call    sub_40386a
push    [ebp+color]
mov     ecx, [ebp+var_4]
push    [ebp+rc.bottom]
push    [ebp+rc.left]
push    [ebp+rc.top]
push    [ebp+rc.left]
push    [ebp+arg_0]
call    sub_40386a
cmp     [ebp+arg_14], 0
jge     short loc_403745
mov     eax, [ebp+var_8]
lea     ecx, [eax-1]
cmp     [ebp+var_14], ecx
jnz     short loc_403745
cmp     eax, 1
jle     short loc_403745
mov     eax, [ebp+rc.bottom]
push    ebx
dec     eax
mov     ecx, [ebp+var_4]
push    eax
push    [ebp+rc.right]
push    eax
mov     eax, [ebp+rc.left]
inc     eax
push    eax
push    [ebp+arg_0]
call    sub_40386a
mov     eax, [ebp+rc.right]
push    ebx
dec     eax
jmp     short loc_403768
mov     eax, [ebp+rc.bottom]
push    [ebp+var_10]
dec     eax
mov     ecx, [ebp+var_4]
push    eax
push    [ebp+rc.right]
push    eax
mov     eax, [ebp+rc.left]
inc     eax
push    eax
push    [ebp+arg_0]
call    sub_40386a
mov     eax, [ebp+rc.right]
push    [ebp+var_10]
dec     eax
push    [ebp+rc.bottom]
mov     ecx, [ebp+rc.top]
inc     ecx
push    eax
push    ecx
mov     ecx, [ebp+var_4]
push    eax
push    [ebp+arg_0]
call    sub_40386a
push    0ffffffffh
lea     eax, [ebp+rc]
push    0ffffffffh
push    eax
call    ds:inflaterect
cmp     edi, [ebp+var_8]
mov     [ebp+var_14], edi
jl      loc_403678
pop     edi
pop     esi
pop     ebx
leave
retn    18h
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    [ebp+color]
and     [ebp+var_4], 0
mov     [ebp+var_8], offset ??_7cbrush@@6b@
call    ds:createsolidbrush
push    eax
lea     ecx, [ebp+var_8]
call    sub_41fbc4
lea     eax, [ebp+var_8]
neg     eax
sbb     eax, eax
and     eax, [ebp+var_4]
push    eax
lea     eax, [ebp+rc]
push    eax
mov     eax, [ebp+arg_0]
push    dword ptr [eax+4]
call    ds:fillrect
lea     ecx, [ebp+var_8]
mov     [ebp+var_8], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
leave
retn    18h
push    ebp
mov     ebp, esp
sub     esp, 10h
push    esi
and     dword ptr [ebp-4], 0
push    edi
mov     dword ptr [ebp-8], offset ??_7cpen@@6b@
push    dword ptr [ebp+1ch]
push    1
push    0
call    ds:createpen
push    eax
lea     ecx, [ebp-8]
call    sub_41fbc4
mov     esi, [ebp+8]
lea     eax, [ebp-8]
push    eax
mov     ecx, esi
call    sub_41f5cc
push    dword ptr [ebp+10h]
mov     edi, eax
lea     eax, [ebp-10h]
mov     ecx, esi
push    dword ptr [ebp+0ch]
push    eax
call    ?moveto@cdc@@qae?avcpoint@@hh@z
push    dword ptr [ebp+18h]
mov     ecx, esi
push    dword ptr [ebp+14h]
call    ?lineto@cdc@@qaehhh@z
push    edi
mov     ecx, esi
call    sub_41f5cc
lea     ecx, [ebp-8]
call    sub_41fc1b
lea     ecx, [ebp-8]
mov     dword ptr [ebp-8], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
pop     edi
pop     esi
leave
retn    18h
push    ebp
mov     ebp, esp
sub     esp, 10h
push    esi
and     [ebp+var_4], 0
push    edi
mov     [ebp+var_8], offset ??_7cpen@@6b@
push    [ebp+color]
push    1
push    0
call    ds:createpen
push    eax
lea     ecx, [ebp+var_8]
call    sub_41fbc4
mov     esi, [ebp+arg_0]
lea     eax, [ebp+var_8]
push    eax
mov     ecx, esi
call    sub_41f5cc
push    [ebp+arg_8]
mov     edi, eax
lea     eax, [ebp+var_10]
mov     ecx, esi
push    [ebp+arg_4]
push    eax
call    ?moveto@cdc@@qae?avcpoint@@hh@z
push    [ebp+arg_10]
mov     ecx, esi
push    [ebp+x]
call    ?lineto@cdc@@qaehhh@z
push    edi
mov     ecx, esi
call    sub_41f5cc
lea     ecx, [ebp+var_8]
call    sub_41fc1b
lea     ecx, [ebp+var_8]
mov     [ebp+var_8], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
pop     edi
pop     esi
leave
retn    18h
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    [ebp+arg_18]
mov     ecx, esi
mov     eax, [esi]
call    dword ptr [eax+30h]
push    1
mov     ecx, esi
mov     ebx, eax
call    sub_41f663
mov     edi, [ebp+arg_14]
lea     eax, [ebp+arg_4]
push    25h
push    eax
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
mov     edx, [esi]
not     ecx
dec     ecx
push    ecx
mov     ecx, esi
push    [ebp+arg_14]
call    dword ptr [edx+68h]
mov     eax, [esi]
push    ebx
mov     ecx, esi
call    dword ptr [eax+30h]
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    1ch
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_423b68
call    sub_420b7d
test    [esp+4+arg_0], 1
jz      short loc_403957
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
call    sub_418f4c
push    0ah
lea     ecx, [esi+80h]
mov     dword ptr [esi], offset ??_7cstatic@@6b@
call    sub_4186d8
mov     eax, off_42b8a0
lea     ecx, [esi+0bch]
mov     [esi+9ch], eax
xor     eax, eax
mov     edx, offset off_423818
mov     [ecx+4], eax
mov     [ecx], edx
lea     ecx, [esi+0c4h]
push    0fh
mov     [ecx+4], eax
mov     [ecx], edx
lea     ecx, [esi+0e0h]
mov     [ecx+4], eax
mov     dword ptr [ecx], offset off_423d48
lea     ecx, [esi+0e8h]
mov     [ecx+4], eax
mov     [ecx], edx
mov     ecx, 0ffffffh
or      dword ptr [esi+0b4h], 0ffffffffh
mov     [esi+54h], ecx
mov     [esi+58h], ecx
pop     ecx
mov     [esi+44h], eax
push    1
mov     [esi+68h], ecx
mov     [esi+0b8h], ecx
pop     ecx
mov     [esi+0dch], eax
mov     [esi+0a4h], eax
mov     [esi+0b0h], eax
mov     [esi+0ach], eax
mov     [esi+0fch], eax
mov     [esi+100h], eax
mov     [esi+104h], eax
mov     [esi+108h], eax
mov     dword ptr [esi], offset off_423c90
mov     dword ptr [esi+48h], 0ffh
mov     dword ptr [esi+4ch], 0ffffh
mov     dword ptr [esi+50h], 0ffff00h
mov     dword ptr [esi+5ch], 15h
mov     dword ptr [esi+60h], 13h
mov     dword ptr [esi+64h], 11h
mov     dword ptr [esi+70h], 46h
mov     dword ptr [esi+74h], 28h
mov     dword ptr [esi+78h], 0ah
mov     [esi+7ch], ecx
mov     [esi+0a0h], ecx
mov     [esi+0a8h], ecx
mov     [esi+0f8h], ecx
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ecx
push    edi
mov     edi, offset ??_7cgdiobject@@6b@
lea     ecx, [esi+0e8h]
mov     dword ptr [esi], offset off_423c90
mov     [ecx], edi
call    sub_41fc1b
lea     ecx, [esi+0e0h]
mov     [ecx], edi
call    sub_41fc1b
lea     ecx, [esi+0c4h]
mov     [ecx], edi
call    sub_41fc1b
lea     ecx, [esi+0bch]
mov     [ecx], edi
call    sub_41fc1b
lea     ecx, [esi+9ch]
call    sub_41c5b1
lea     ecx, [esi+80h]
call    sub_41874c
mov     ecx, esi
call    sub_420b23
pop     edi
pop     esi
retn
mov     eax, offset off_423c28
retn
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
cmp     [esi+8ch], ebx
jnz     short loc_403ae7
xor     eax, eax
jmp     short loc_403b49
cmp     [esi+0c8h], ebx
push    edi
lea     edi, [esi+0c8h]
jz      short loc_403b03
lea     ecx, [esi+0c4h]
call    sub_41fc1b
mov     [edi], ebx
mov     eax, [esi+7ch]
push    1
pop     edi
push    edi
push    esi
push    offset sub_404550
push    3ch
push    dword ptr [esi+eax*4+70h]
call    ds:timesetevent
mov     [esi+108h], eax
mov     eax, [esi+84h]
mov     [esi+0a4h], eax
mov     [esi+0a0h], edi
mov     [esi+0a8h], edi
mov     eax, edi
mov     [esi+0b0h], ebx
mov     [esi+0ach], ebx
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, ecx
push    edi
mov     eax, [esi+108h]
lea     edi, [esi+108h]
test    eax, eax
jz      short loc_403b67
push    eax
call    ds:timekillevent
and     dword ptr [edi], 0
cmp     dword ptr [esi+0c8h], 0
lea     edi, [esi+0c8h]
jz      short loc_403b87
lea     ecx, [esi+0c4h]
call    sub_41fc1b
and     dword ptr [edi], 0
pop     edi
pop     esi
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    [ebp+block]
mov     esi, ecx
call    __strdup
mov     ebx, eax
pop     ecx
test    ebx, ebx
mov     [ebp+block], ebx
jz      short loc_403c1e
push    edi
lea     ecx, [esi+80h]
call    ?removeall@cstringlist@@qaexxz
movsx   eax, [ebp+arg_4]
push    eax
push    ebx
call    _strchr
mov     edi, eax
pop     ecx
test    edi, edi
pop     ecx
jz      short loc_403bdf
and     byte ptr [edi], 0
push    ebx
lea     ecx, [esi+80h]
call    sub_4187e0
cmp     byte ptr [edi+1], 0ah
lea     ebx, [edi+1]
jnz     short loc_403baf
lea     ebx, [edi+2]
jmp     short loc_403baf
push    ebx
lea     ecx, [esi+80h]
call    sub_4187e0
push    [ebp+block]
call    _free
mov     eax, [esi+84h]
and     dword ptr [esi+0b0h], 0
and     dword ptr [esi+0ach], 0
pop     ecx
push    1
mov     [esi+0a4h], eax
pop     eax
pop     edi
mov     [esi+0a0h], eax
mov     [esi+0a8h], eax
pop     esi
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
mov     eax, off_42b8a0
push    esi
push    dword ptr [ebp+8]
mov     esi, ecx
lea     ecx, [ebp-4]
mov     [ebp-4], eax
call    ?loadstringa@cstring@@qaehi@z
test    eax, eax
jz      short loc_403c4f
push    dword ptr [ebp+0ch]
mov     ecx, esi
push    dword ptr [ebp-4]
call    sub_403b8a
lea     ecx, [ebp-4]
call    sub_41c5b1
pop     esi
leave
retn    8
mov     edx, [esp+arg_4]
mov     eax, [esp+arg_0]
test    edx, edx
jz      short loc_403c6c
mov     [ecx+eax*4+70h], edx
mov     [ecx+7ch], eax
retn    8
mov     edx, [esp+arg_0]
mov     eax, [esp+arg_4]
mov     [ecx+edx*4+44h], eax
retn    8
mov     edx, [esp+4]
mov     eax, [esp+8]
mov     [ecx+edx*4+5ch], eax
retn    8
mov     edx, [esp+4]
mov     al, [esp+8]
mov     [edx+ecx+6ch], al
retn    8
mov     eax, [esp+arg_0]
mov     [ecx+0fch], eax
retn    4
mov     eax, [esp+arg_0]
mov     [ecx+100h], eax
retn    4
push    ebp
mov     ebp, esp
sub     esp, 54h
push    esi
mov     esi, ecx
push    esi
lea     ecx, [ebp-54h]
call    ??0cpaintdc@@qae@pavcwnd@@@z
cmp     dword ptr [esi+108h], 0
pop     esi
lea     ecx, [ebp-54h]
call    ??1cpaintdc@@uae@xz
leave
retn
push    1
pop     eax
retn    4
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
mov     ebx, ecx
push    esi
push    edi
lea     ecx, [ebp+var_10]
call    ??0cdc@@qae@xz_0
mov     edi, [ebp+arg_0]
xor     esi, esi
cmp     edi, esi
jnz     short loc_403d03
xor     eax, eax
jmp     short loc_403d06
mov     eax, [edi+4]
push    eax
call    ds:createcompatibledc
push    eax
lea     ecx, [ebp+var_10]
call    sub_41f438
lea     eax, [ebx+0c4h]
cmp     eax, esi
jnz     short loc_403d24
xor     eax, eax
jmp     short loc_403d27
mov     eax, [eax+4]
push    eax
push    [ebp+hdc]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
mov     ebx, eax
mov     eax, [ebp+arg_4]
push    0cc0020h
push    esi
mov     ecx, [eax+0ch]
mov     edx, [eax+8]
sub     ecx, [eax+4]
sub     edx, [eax]
lea     eax, [ebp+var_10]
push    esi
neg     eax
sbb     eax, eax
and     eax, [ebp+hdc]
push    eax
push    ecx
push    edx
push    esi
push    esi
push    dword ptr [edi+4]
call    ds:bitblt
cmp     ebx, esi
jz      short loc_403d66
mov     esi, [ebx+4]
push    esi
push    [ebp+hdc]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
lea     ecx, [ebp+var_10]
call    sub_41f4b6
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 30h
mov     eax, [ebp+arg_c]
push    ebx
mov     ebx, ecx
xor     edx, edx
movzx   cx, al
mov     dl, ah
push    esi
shr     eax, 10h
test    byte ptr [ebx+0fch], 1
movzx   si, al
movzx   eax, cx
push    edi
mov     [ebp+var_1c], ebx
movzx   dx, dl
mov     [ebp+var_14], eax
jz      short loc_403dd8
fld     ds:flt_423d58
fild    [ebp+var_14]
movzx   eax, dx
fmul    st, st(1)
mov     [ebp+var_10], eax
movzx   eax, si
fstp    [ebp+var_8]
fild    [ebp+var_10]
mov     [ebp+var_c], eax
fmul    st, st(1)
fstp    [ebp+var_4]
fild    [ebp+var_c]
jmp     short loc_403e15
fld     ds:flt_423d58
mov     ecx, 0ffh
mov     edi, ecx
sub     edi, eax
mov     [ebp+arg_c], edi
fild    [ebp+arg_c]
movzx   eax, dx
fmul    st, st(1)
mov     edx, ecx
mov     [ebp+var_10], eax
sub     edx, eax
mov     [ebp+arg_c], edx
fstp    [ebp+var_8]
fild    [ebp+arg_c]
movzx   eax, si
fmul    st, st(1)
sub     ecx, eax
mov     [ebp+var_c], eax
mov     [ebp+arg_c], ecx
fstp    [ebp+var_4]
fild    [ebp+arg_c]
mov     edi, [ebp+arg_0]
fmul    st, st(1)
push    dword ptr [edi+8]
fstp    [ebp+arg_c]
fstp    st
call    ds:getbkcolor
mov     esi, [ebp+arg_8]
mov     [ebp+var_20], eax
mov     eax, [ebp+arg_4]
mov     ecx, [eax+8]
sub     ecx, [eax]
mov     eax, [esi]
shl     eax, 8
cdq
idiv    ecx
mov     [ebp+arg_0], ecx
fild    [ebp+arg_0]
fmul    ds:flt_423d54
fstp    [ebp+var_18]
mov     [ebp+arg_0], eax
fild    [ebp+arg_0]
fld     st
fmul    [ebp+var_18]
call    __ftol
cmp     eax, [esi+8]
jge     loc_403fad
mov     ecx, [ebp+arg_0]
inc     ecx
mov     [ebp+arg_4], ecx
cmp     [ebp+arg_4], 101h
jge     loc_403fad
fild    [ebp+arg_4]
mov     [ebp+rect.left], eax
mov     eax, [esi+4]
mov     [ebp+rect.top], eax
fmul    [ebp+var_18]
call    __ftol
mov     [ebp+rect.right], eax
mov     eax, [esi+0ch]
inc     eax
mov     [ebp+rect.bottom], eax
mov     eax, [ebx+0fch]
dec     eax
jz      loc_403f40
dec     eax
jz      short loc_403f10
dec     eax
jz      short loc_403eee
dec     eax
jnz     loc_403fa9
fld     st
fmul    [ebp+arg_c]
call    __ftol
fld     st
fmul    [ebp+var_4]
or      cl, 0ffh
xor     ebx, ebx
sub     cl, al
mov     bh, cl
call    __ftol
fmul    [ebp+var_8]
or      cl, 0ffh
sub     cl, al
mov     bl, cl
shl     ebx, 8
call    __ftol
or      cl, 0ffh
sub     cl, al
movzx   eax, cl
jmp     loc_403f7b
fld     st
fmul    [ebp+arg_c]
call    __ftol
fld     st
fmul    [ebp+var_4]
xor     ebx, ebx
mov     bh, al
call    __ftol
fmul    [ebp+var_8]
mov     bl, al
shl     ebx, 8
jmp     short loc_403f39
fld     st
fmul    [ebp+arg_c]
fiadd   [ebp+var_c]
call    __ftol
fld     st
fmul    [ebp+var_4]
xor     ebx, ebx
mov     bh, al
fiadd   [ebp+var_10]
call    __ftol
fmul    [ebp+var_8]
mov     bl, al
shl     ebx, 8
fiadd   [ebp+var_14]
call    __ftol
jmp     short loc_403f78
fild    [ebp+var_c]
fld     st(1)
fmul    [ebp+arg_c]
fsubp   st(1), st
call    __ftol
fild    [ebp+var_10]
fld     st(1)
fmul    [ebp+var_4]
xor     ebx, ebx
mov     bh, al
fsubp   st(1), st
call    __ftol
fild    [ebp+var_14]
fld     st(1)
fmul    [ebp+var_8]
mov     bl, al
shl     ebx, 8
fsubp   st(1), st
call    __ftol
fstp    st
movzx   eax, al
or      eax, ebx
mov     ecx, edi
push    eax
lea     eax, [ebp+rect]
push    eax
call    ?fillsolidrect@cdc@@qaexpbutagrect@@k@z
inc     [ebp+arg_0]
inc     [ebp+arg_4]
fild    [ebp+arg_0]
fld     st
fmul    [ebp+var_18]
call    __ftol
cmp     eax, [esi+8]
jge     short loc_403fad
mov     ebx, [ebp+var_1c]
jmp     loc_403e6d
fstp    st
jmp     short loc_403fb9
mov     eax, [edi]
push    [ebp+var_20]
mov     ecx, edi
fstp    st
call    dword ptr [eax+2ch]
pop     edi
pop     esi
pop     ebx
leave
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 68h
push    ebx
mov     ebx, ecx
push    esi
push    edi
lea     ecx, [ebp+var_38]
call    ??0cdc@@qae@xz_0
lea     ecx, [ebp+var_68]
call    ??0cdc@@qae@xz_0
mov     eax, [ebp+arg_0]
xor     edi, edi
cmp     eax, edi
jnz     short loc_403fe8
xor     eax, eax
jmp     short loc_403feb
mov     eax, [eax+4]
mov     esi, ds:createcompatibledc
push    eax
call    esi
push    eax
lea     ecx, [ebp+var_38]
call    sub_41f438
mov     eax, [ebp+arg_0]
cmp     eax, edi
jnz     short loc_404008
xor     eax, eax
jmp     short loc_40400b
mov     eax, [eax+4]
push    eax
call    esi
push    eax
lea     ecx, [ebp+var_68]
call    sub_41f438
cmp     [ebx+100h], edi
jz      short loc_404030
cmp     [ebx+0ech], edi
jz      short loc_404030
mov     [ebp+var_4], 0c0c0c0h
jmp     short loc_404036
mov     eax, [ebx+44h]
mov     [ebp+var_4], eax
cmp     [ebx+0c8h], edi
jnz     short loc_4040af
mov     esi, [ebp+lprcscroll]
lea     edi, [ebx+0c4h]
mov     eax, [esi+0ch]
mov     ecx, [esi+8]
sub     eax, [esi+4]
sub     ecx, [esi]
push    eax
mov     eax, [ebp+arg_0]
push    ecx
push    dword ptr [eax+4]
call    ds:createcompatiblebitmap
push    eax
mov     ecx, edi
call    sub_41fbc4
test    edi, edi
jz      short loc_40406f
mov     edi, [edi+4]
push    edi
push    [ebp+hdc]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
cmp     dword ptr [ebx+0fch], 0
mov     [ebp+h], eax
jz      short loc_4040a1
cmp     dword ptr [ebx+0ech], 0
jnz     short loc_4040a1
push    dword ptr [ebx+44h]
lea     eax, [ebp+var_38]
mov     ecx, ebx
push    esi
push    esi
push    eax
call    sub_403d7e
xor     edi, edi
jmp     short loc_4040cf
push    [ebp+var_4]
lea     ecx, [ebp+var_38]
push    esi
call    ?fillsolidrect@cdc@@qaexpbutagrect@@k@z
jmp     short loc_40409d
lea     eax, [ebx+0c4h]
cmp     eax, edi
jnz     short loc_4040bd
xor     eax, eax
jmp     short loc_4040c0
mov     eax, [eax+4]
push    eax
push    [ebp+hdc]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
mov     esi, [ebp+lprcscroll]
mov     [ebp+h], eax
mov     ecx, [ebp+lprcclip]
mov     eax, [ecx+8]
sub     eax, [ecx]
test    eax, eax
jle     short loc_40410e
mov     eax, [ebx+0b4h]
lea     edx, [ebp+rcupdate]
push    edx
push    edi
push    ecx
push    esi
push    eax
push    edi
push    [ebp+hdc]
mov     [ebp+psizl.cy], edi
mov     [ebp+psizl._cx], offset ??_7crgn@@6b@
call    ds:scrolldc
lea     ecx, [ebp+psizl]
mov     [ebp+psizl._cx], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
jmp     short loc_40412d
lea     edi, [ebp+rcupdate]
mov     eax, [ebx+0b4h]
movsd
movsd
movsd
cdq
xor     eax, edx
movsd
mov     ecx, [ebp+rcupdate.bottom]
mov     esi, [ebp+lprcscroll]
sub     eax, edx
sub     ecx, eax
xor     edi, edi
mov     [ebp+rcupdate.top], ecx
mov     eax, [ebx+0b4h]
mov     ecx, [ebx+9ch]
cdq
xor     eax, edx
mov     [ebp+var_24], edi
mov     [ebx+3ch], edi
mov     [ebx+40h], edi
lea     edi, [ebx+9ch]
sub     eax, edx
add     [ebx+0b0h], eax
xor     eax, eax
mov     [ebp+var_28], offset off_423d5c
cmp     [ecx-8], eax
jz      loc_4042ff
push    offset dword_42d19c
lea     ecx, [ebp+psizl.cy]
mov     [ebp+lprcscroll], eax
mov     [ebp+arg_0], eax
call    sub_41c61f
xor     eax, eax
push    offset substr
mov     ecx, edi
mov     [ebp+var_10], eax
mov     [ebp+var_c], eax
mov     [ebp+var_8], eax
call    sub_417e35
cmp     eax, 0ffffffffh
mov     [ebp+size], eax
jz      loc_4042dd
add     eax, 3
mov     ecx, [edi]
cmp     eax, [ecx-8]
jge     loc_4042dd
cmp     byte ptr [ecx+eax], 28h
jnz     short loc_4041b7
mov     [ebp+arg_0], 1
inc     eax
cmp     [ebp+arg_0], 1
jnz     short loc_4041eb
push    2ch
push    eax
push    ecx
mov     ecx, esp
push    edi
call    sub_41c326
call    sub_4044be
add     esp, 0ch
cmp     eax, 0ffffffffh
jz      loc_4042dd
mov     ecx, dword_42d198
inc     eax
mov     [ebp+var_10], ecx
mov     [ebp+arg_0], 2
cmp     [ebp+arg_0], 2
jnz     short loc_40421f
push    2ch
push    eax
push    ecx
mov     ecx, esp
push    edi
call    sub_41c326
call    sub_4044be
add     esp, 0ch
cmp     eax, 0ffffffffh
jz      loc_4042dd
mov     ecx, dword_42d198
inc     eax
mov     [ebp+var_c], ecx
mov     [ebp+arg_0], 3
cmp     [ebp+arg_0], 3
jnz     short loc_404256
push    29h
push    eax
push    ecx
mov     ecx, esp
push    edi
call    sub_41c326
call    sub_4044be
add     esp, 0ch
cmp     eax, 0ffffffffh
jz      loc_4042dd
mov     ecx, dword_42d198
inc     eax
mov     [ebp+var_8], ecx
mov     [ebp+lprcscroll], eax
mov     [ebp+arg_0], 4
cmp     [ebp+arg_0], 4
jz      short loc_404262
inc     eax
jmp     loc_40419e
movzx   ecx, byte ptr [ebp+var_10]
xor     eax, eax
push    edi
mov     ah, byte ptr [ebp+var_8]
mov     al, byte ptr [ebp+var_c]
shl     eax, 8
or      eax, ecx
lea     ecx, [ebp+arg_0]
mov     [ebx+58h], eax
call    sub_41c326
push    offset dword_42d1a0
mov     ecx, edi
call    ??4cstring@@qaeabv0@pbd@z
push    [ebp+size]
lea     eax, [ebp+size]
lea     ecx, [ebp+arg_0]
push    0
push    eax
call    sub_417cab
push    eax
mov     ecx, edi
call    sub_41c69e
lea     ecx, [ebp+size]
call    sub_41c5b1
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+arg_0]
mov     eax, [eax-8]
sub     eax, [ebp+lprcscroll]
push    eax
lea     eax, [ebp+lprcscroll]
push    [ebp+lprcscroll]
push    eax
call    sub_417cab
push    eax
mov     ecx, edi
call    ??ycstring@@qaeabv0@abv0@@z
lea     ecx, [ebp+lprcscroll]
call    sub_41c5b1
lea     ecx, [ebp+arg_0]
call    sub_41c5b1
lea     eax, [ebp+var_28]
mov     ecx, ebx
push    eax
lea     eax, [ebp+var_38]
push    dword ptr [ebx+58h]
push    3
push    0
push    0
push    eax
call    sub_404443
lea     ecx, [ebp+psizl.cy]
call    sub_41c5b1
xor     eax, eax
cmp     [ebx+0fch], eax
jz      short loc_404324
cmp     [ebx+0ech], eax
jnz     short loc_404324
push    dword ptr [ebx+44h]
lea     eax, [ebp+rcupdate]
mov     ecx, ebx
push    eax
lea     eax, [ebp+var_38]
push    esi
push    eax
call    sub_403d7e
jmp     short loc_404333
push    [ebp+var_4]
lea     eax, [ebp+rcupdate]
lea     ecx, [ebp+var_38]
push    eax
call    ?fillsolidrect@cdc@@qaexpbutagrect@@k@z
push    1
lea     ecx, [ebp+var_38]
call    sub_41f663
cmp     dword ptr [ebx+0dch], 0
jnz     loc_4043d4
cmp     [ebp+arg_c], 0
jz      short loc_40439b
mov     edi, [edi]
lea     eax, [ebp+psizl]
push    eax
push    dword ptr [edi-8]
push    edi
push    [ebp+hdc]
call    ds:gettextextentpoint32a
mov     ecx, [ebp+psizl._cx]
cmp     ecx, [ebx+104h]
jle     short loc_40439b
mov     eax, [esi+8]
sub     eax, [esi]
cmp     ecx, eax
jle     short loc_404379
mov     ecx, eax
mov     [ebx+104h], ecx
mov     eax, [esi+8]
sub     eax, [esi]
mov     esi, [ebp+lprcclip]
sub     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
mov     [esi], eax
add     eax, [ebx+104h]
mov     [esi+8], eax
jmp     short loc_40439e
mov     esi, [ebp+lprcclip]
lea     edi, [ebp+rc]
lea     ecx, [ebp+rc]
movsd
movsd
movsd
movsd
mov     eax, [ebp+rc.bottom]
push    821h
sub     eax, [ebx+0b0h]
push    ecx
mov     [ebp+rc.top], eax
mov     eax, [ebx+9ch]
push    dword ptr [eax-8]
push    eax
push    [ebp+hdc]
call    ds:drawtexta
and     dword ptr [ebx+0ach], 0
mov     ebx, [ebx+3ch]
test    ebx, ebx
jz      short loc_4043e4
push    ebx
lea     ecx, [ebp+var_38]
call    sub_41f5cc
mov     eax, [ebp+h]
test    eax, eax
jz      short loc_4043ee
mov     eax, [eax+4]
push    eax
push    [ebp+hdc]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
lea     ecx, [ebp+var_28]
mov     [ebp+var_28], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
lea     ecx, [ebp+var_68]
call    sub_41f4b6
lea     ecx, [ebp+var_38]
call    sub_41f4b6
pop     edi
pop     esi
pop     ebx
leave
retn    10h
push    esi
mov     esi, ecx
call    ?ondestroy@cwnd@@iaexxz
lea     ecx, [esi+80h]
call    ?removeall@cstringlist@@qaexxz
mov     esi, [esi+108h]
test    esi, esi
jz      short loc_404441
push    esi
call    ds:timekillevent
pop     esi
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_c]
push    ebx
push    esi
mov     esi, ecx
mov     ecx, [esi+eax*4+5ch]
push    edi
lea     eax, [esi+eax*4+5ch]
xor     edi, edi
push    edi
push    6
mov     [esi+0b8h], ecx
push    2
movzx   ecx, [ebp+arg_8]
push    edi
push    edi
push    edi
push    edi
mov     eax, [eax]
push    ecx
movzx   ecx, [ebp+arg_4]
push    ecx
push    2bch
push    edi
push    edi
push    edi
push    eax
call    ds:createfonta
mov     ecx, [ebp+arg_14]
push    eax
call    sub_41fbc4
mov     ebx, [ebp+arg_0]
push    [ebp+arg_10]
mov     [esi+40h], eax
mov     ecx, ebx
mov     eax, [ebx]
call    dword ptr [eax+30h]
mov     eax, [esi+3ch]
cmp     eax, edi
jz      short loc_4044aa
mov     edx, [ebx]
push    eax
mov     ecx, ebx
call    dword ptr [edx+28h]
mov     eax, [ebx]
push    [ebp+arg_14]
mov     ecx, ebx
call    dword ptr [eax+28h]
mov     [esi+3ch], eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    18h
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    offset dword_42d1a4
lea     ecx, [ebp+string]
call    sub_41c61f
mov     esi, dword ptr [ebp+src]
mov     eax, [ebp+arg_0]
cmp     esi, [eax-8]
jge     short loc_40453a
mov     al, [esi+eax]
cmp     al, byte ptr [ebp+endptr]
mov     [ebp+src], al
jz      short loc_404502
movsx   eax, al
push    eax
call    _isdigit
test    eax, eax
pop     ecx
jz      short loc_4044ff
push    dword ptr [ebp+src]
lea     ecx, [ebp+string]
call    sub_41c880
inc     esi
jmp     short loc_4044d3
and     [ebp+endptr], 0
lea     eax, [ebp+endptr]
push    0ah
push    eax
push    [ebp+string]
call    _strtoul
add     esp, 0ch
cmp     eax, 0ffh
mov     dword_42d198, eax
jle     short loc_404526
or      esi, 0ffffffffh
lea     ecx, [ebp+string]
call    sub_41c5b1
lea     ecx, [ebp+arg_0]
call    sub_41c5b1
mov     eax, esi
jmp     short loc_40454d
lea     ecx, [ebp+string]
call    sub_41c5b1
lea     ecx, [ebp+arg_0]
call    sub_41c5b1
or      eax, 0ffffffffh
pop     esi
leave
retn
mov     ecx, [esp+dwuser]
call    sub_40455c
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 38h
push    ebx
push    esi
push    edi
mov     ebx, ecx
xor     edi, edi
cmp     [ebx+0dch], edi
mov     [ebp+var_4], edi
jnz     short loc_4045ed
mov     esi, [ebx+0a0h]
lea     ecx, [ebx+0a0h]
mov     eax, esi
cdq
idiv    dword ptr [ebx+0b8h]
inc     esi
mov     [ecx], esi
test    edx, edx
jnz     short loc_4045ed
cmp     [ebx+0a4h], edi
push    1
pop     esi
mov     [ecx], esi
jz      short loc_4045ba
mov     eax, [ebx+0a4h]
mov     ecx, [eax]
add     eax, 8
mov     [ebx+0a4h], ecx
push    eax
lea     ecx, [ebx+9ch]
call    sub_41c69e
cmp     [ebx+0f8h], edi
lea     eax, [ebx+0f8h]
jz      short loc_4045cb
mov     [ebp+var_4], esi
cmp     [ebx+0a4h], edi
jnz     short loc_4045e1
mov     [eax], edi
mov     eax, [ebx+84h]
mov     [ebx+0a4h], eax
mov     [ebx+0b0h], edi
mov     [ebx+0ach], esi
push    ebx
lea     ecx, [ebp+var_38]
call    sub_41f9d0
lea     eax, [ebp+rect]
push    eax
push    dword ptr [ebx+1ch]
call    ds:getclientrect
mov     ecx, [ebx+104h]
mov     eax, [ebp+rect.right]
lea     esi, [ebp+rect]
lea     edi, [ebp+rcclip]
movsd
sub     eax, ecx
push    [ebp+var_4]
sub     eax, [ebp+rect.left]
movsd
cdq
movsd
sub     eax, edx
sar     eax, 1
movsd
mov     [ebp+rcclip.left], eax
add     ecx, eax
lea     eax, [ebp+rcclip]
mov     [ebp+rcclip.right], ecx
push    eax
lea     eax, [ebp+rect]
push    eax
lea     eax, [ebp+var_38]
push    eax
mov     ecx, ebx
call    sub_403fc0
lea     eax, [ebp+rcclip]
mov     ecx, ebx
push    eax
lea     eax, [ebp+rect]
push    eax
lea     eax, [ebp+var_38]
push    eax
call    sub_403ce3
lea     ecx, [ebp+var_38]
call    sub_41fa42
pop     edi
pop     esi
pop     ebx
leave
retn
push    esi
mov     esi, ecx
call    sub_403a6c
test    [esp+4+arg_0], 1
jz      short loc_404674
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
test    [esp+4+arg_0], 1
jz      short loc_404696
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    ebp
mov     ebp, esp
sub     esp, 7f0h
cmp     hwnd, 2a62642ah
jz      locret_40474e
mov     eax, [ebp+arg_8]
push    esi
mov     esi, [ebp+arg_4]
mov     [ebp+var_7f0], eax
mov     eax, [ebp+arg_18]
xor     ecx, ecx
mov     [ebp+var_7e8], eax
mov     eax, [ebp+arg_c]
push    edi
mov     [ebp+var_7ec], esi
test    esi, esi
mov     [ebp+var_7e4], eax
mov     edi, 7cfh
jbe     short loc_404708
mov     edx, [ebp+arg_0]
lea     eax, [ebp+var_7dc]
push    ebx
sub     edx, eax
lea     eax, [ebp+ecx+var_7dc]
inc     ecx
cmp     ecx, edi
mov     bl, [edx+eax]
mov     [eax], bl
jnb     short loc_404707
cmp     ecx, esi
jb      short loc_4046f2
pop     ebx
cmp     esi, edi
jb      short loc_404712
and     [ebp+var_d], 0
jmp     short loc_40471a
and     [ebp+esi+var_7dc], 0
mov     eax, [ebp+arg_14]
and     [ebp+lparam], 0
mov     [ebp+var_7e0], eax
lea     eax, [ebp+var_7f0]
mov     [ebp+var_4], eax
lea     eax, [ebp+lparam]
push    eax
mov     [ebp+var_8], 7e4h
push    [ebp+wparam]
push    4ah
push    hwnd
call    ds:sendmessagea
pop     edi
pop     esi
leave
retn
mov     eax, ecx
xor     edx, edx
xor     ecx, ecx
mov     [eax+38h], ecx
mov     dword ptr [eax], offset off_423d68
mov     [eax+4], edx
mov     [eax+34h], edx
mov     [eax+3ch], edx
retn
mov     dword ptr [ecx], offset off_423d68
jmp     sub_4047e9
push    ebx
push    esi
push    edi
mov     esi, ecx
call    sub_4047e9
lea     edx, [esi+8]
push    0bh
mov     ebx, [esp+10h+arg_4]
pop     ecx
xor     eax, eax
mov     edi, edx
rep stosd
mov     edi, [esp+0ch+arg_0]
push    eax
mov     ecx, edi
push    eax
imul    ecx, ebx
shl     ecx, 2
mov     [esi+1ch], ecx
lea     ecx, [esi+4]
push    ecx
push    eax
push    edx
push    eax
mov     dword ptr [edx], 28h
mov     [esi+0ch], edi
mov     [esi+10h], ebx
mov     word ptr [esi+14h], 1
mov     word ptr [esi+16h], 20h
mov     [esi+18h], eax
call    ds:createdibsection
test    eax, eax
mov     [esi+34h], eax
jz      short loc_4047d9
push    1
mov     [esi+38h], edi
mov     [esi+3ch], ebx
pop     eax
jmp     short loc_4047e3
xor     eax, eax
xor     ecx, ecx
mov     [esi+38h], eax
mov     [esi+3ch], ecx
pop     edi
pop     esi
pop     ebx
retn    8
push    esi
mov     esi, ecx
mov     eax, [esi+34h]
test    eax, eax
jz      short loc_4047fa
push    eax
call    ds:deleteobject
and     dword ptr [esi+34h], 0
xor     eax, eax
xor     ecx, ecx
push    1
mov     [esi+38h], eax
mov     [esi+3ch], ecx
pop     eax
pop     esi
retn
xor     eax, eax
lea     edx, [ecx+8]
push    eax
push    edx
push    dword ptr [ecx+4]
push    dword ptr [esp+18h]
push    eax
push    eax
push    eax
push    dword ptr [esp+28h]
push    dword ptr [esp+28h]
push    eax
push    eax
mov     eax, [esp+30h]
push    dword ptr [eax+4]
call    ds:setdibitstodevice
retn    0ch
xor     edx, edx
cmp     [ecx+34h], edx
jz      short locret_40486a
mov     eax, [esp+arg_4]
cmp     eax, edx
jnz     short loc_40484b
xor     eax, eax
jmp     short loc_40484e
mov     eax, [eax+4]
push    esi
lea     esi, [ecx+8]
push    edx
push    esi
push    dword ptr [ecx+4]
push    dword ptr [ecx+3ch]
push    edx
push    eax
mov     eax, [esp+1ch+arg_0]
push    dword ptr [eax+4]
call    ds:getdibits
pop     esi
retn    8
push    esi
mov     esi, ecx
push    edi
mov     edi, [esp+8+arg_0]
mov     eax, [esi+38h]
cmp     [edi+38h], eax
jnz     short loc_404885
mov     ecx, [edi+3ch]
cmp     ecx, [esi+3ch]
jz      short loc_404890
push    dword ptr [esi+3ch]
mov     ecx, edi
push    eax
call    sub_404774
mov     ecx, [esi+38h]
mov     edi, [edi+4]
imul    ecx, [esi+3ch]
mov     esi, [esi+4]
shl     ecx, 2
mov     eax, ecx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
pop     edi
pop     esi
retn    4
push    esi
mov     esi, [esp+8]
push    edi
mov     edi, ecx
mov     eax, [esi+38h]
cmp     [edi+38h], eax
jnz     short loc_4048cb
mov     ecx, [edi+3ch]
cmp     ecx, [esi+3ch]
jz      short loc_4048d6
push    dword ptr [esi+3ch]
mov     ecx, edi
push    eax
call    sub_404774
mov     ecx, [edi+3ch]
mov     esi, [esi+4]
imul    ecx, [edi+38h]
mov     edi, [edi+4]
shl     ecx, 2
mov     eax, ecx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
pop     edi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     edx, [eax+38h]
mov     esi, [eax+3ch]
cmp     [ecx+38h], edx
jnz     short loc_40497b
cmp     [ecx+3ch], esi
jnz     short loc_40497b
mov     esi, [ecx+3ch]
mov     edx, [eax+4]
imul    esi, [ecx+38h]
mov     eax, [ecx+4]
mov     ecx, esi
dec     esi
test    ecx, ecx
jz      short loc_40497b
push    edi
lea     edi, [esi+1]
movzx   esi, byte ptr [eax]
movzx   ecx, byte ptr [edx]
sub     ecx, esi
add     edx, 4
imul    ecx, [esp+8+arg_4]
shl     esi, 8
add     ecx, esi
movzx   esi, byte ptr [eax+1]
sar     ecx, 8
mov     [eax], cl
add     eax, 4
movzx   ecx, byte ptr [edx-3]
sub     ecx, esi
imul    ecx, [esp+8+arg_4]
shl     esi, 8
add     ecx, esi
movzx   esi, byte ptr [eax-2]
sar     ecx, 8
mov     [eax-3], cl
movzx   ecx, byte ptr [edx-2]
sub     ecx, esi
imul    ecx, [esp+8+arg_4]
shl     esi, 8
add     ecx, esi
sar     ecx, 8
mov     [eax-2], cl
dec     edi
jnz     short loc_404926
pop     edi
pop     esi
retn    8
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_423d68
call    sub_4047e9
test    [esp+4+arg_0], 1
jz      short loc_40499b
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, ecx
and     dword ptr [eax+4], 0
mov     dword ptr [eax], offset off_423d6c
retn
mov     dword ptr [ecx], offset off_423d6c
mov     ecx, [ecx+4]
test    ecx, ecx
jz      short locret_4049c1
push    ecx
call    drawdibclose
retn
push    esi
mov     esi, ecx
call    drawdibopen
mov     [esi+4], eax
pop     esi
retn
push    dword ptr [ecx+4]
call    drawdibclose
retn
push    ebp
mov     ebp, esp
push    dword ptr [ebp+20h]
push    dword ptr [ebp+1ch]
push    dword ptr [ebp+18h]
push    dword ptr [ebp+14h]
push    dword ptr [ebp+10h]
push    dword ptr [ebp+0ch]
push    dword ptr [ebp+8]
push    dword ptr [ecx+4]
call    drawdibbegin
pop     ebp
retn    1ch
push    dword ptr [ecx+4]
call    drawdibend
retn
push    ebp
mov     ebp, esp
push    dword ptr [ebp+34h]
push    dword ptr [ebp+30h]
push    dword ptr [ebp+2ch]
push    dword ptr [ebp+28h]
push    dword ptr [ebp+24h]
push    dword ptr [ebp+20h]
push    dword ptr [ebp+1ch]
push    dword ptr [ebp+18h]
push    dword ptr [ebp+14h]
push    dword ptr [ebp+10h]
push    dword ptr [ebp+0ch]
push    dword ptr [ebp+8]
push    dword ptr [ecx+4]
call    drawdibdraw
pop     ebp
retn    30h
push    ebp
mov     ebp, esp
push    [ebp+wflags]
mov     eax, [ebp+arg_0]
push    dword ptr [eax+3ch]
add     eax, 8
push    dword ptr [eax+30h]
push    0
push    0
push    dword ptr [eax-4]
push    eax
push    [ebp+dydst]
push    [ebp+dxdst]
push    [ebp+ydst]
push    [ebp+xdst]
push    [ebp+hdc]
push    dword ptr [ecx+4]
call    drawdibdraw
pop     ebp
retn    1ch
push    dword ptr [esp+0ch]
push    dword ptr [esp+0ch]
push    dword ptr [esp+0ch]
push    dword ptr [ecx+4]
call    drawdibgetbuffer
retn    0ch
push    dword ptr [esp+4]
call    drawdibprofiledisplay
retn    4
push    dword ptr [ecx+4]
call    drawdibgetpalette
retn
push    dword ptr [esp+4]
push    dword ptr [ecx+4]
call    drawdibsetpalette
retn    4
push    dword ptr [esp+10h]
push    dword ptr [esp+10h]
push    dword ptr [esp+10h]
push    dword ptr [ecx+4]
call    drawdibchangepalette
retn    10h
push    dword ptr [esp+8]
push    dword ptr [esp+8]
push    dword ptr [ecx+4]
call    drawdibrealize
retn    8
push    dword ptr [esp+4]
push    dword ptr [ecx+4]
call    drawdibstart
retn    4
push    dword ptr [ecx+4]
call    drawdibstop
retn
push    dword ptr [esp+4]
push    dword ptr [ecx+4]
call    drawdibtime
retn    4
push    esi
mov     esi, ecx
mov     eax, [esi+4]
mov     dword ptr [esi], offset off_423d6c
test    eax, eax
jz      short loc_404b0f
push    eax
call    drawdibclose
test    [esp+4+arg_0], 1
jz      short loc_404b1d
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    ebx
push    esi
push    edi
mov     esi, ecx
push    [esp+0ch+arg_0]
push    88h
call    ??0cdialog@@qae@ipavcwnd@@@z
lea     ecx, [esi+5ch]
call    sub_401000
lea     edi, [esi+98h]
mov     ecx, edi
call    sub_418f4c
mov     dword ptr [edi], offset ??_7cedit@@6b@
mov     eax, off_42b8a0
lea     edi, [esi+0d4h]
lea     ebx, [esi+0d8h]
mov     [edi], eax
mov     eax, off_42b8a0
mov     [ebx], eax
mov     eax, off_42b8a0
mov     [esi+0f0h], eax
mov     ecx, off_42b8a0
lea     eax, [esi+100h]
mov     [eax], ecx
mov     ecx, off_42b8a0
mov     [eax+4], ecx
mov     ecx, off_42b8a0
mov     [eax+8], ecx
lea     ecx, [esi+114h]
call    ??0ctooltipctrl@@qae@xz
push    offset dword_42d1a8
mov     ecx, edi
mov     dword ptr [esi], offset off_423df0
call    ??4cstring@@qaeabv0@pbd@z
push    offset dword_42d1ac
mov     ecx, ebx
call    ??4cstring@@qaeabv0@pbd@z
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
push    ebx
push    ebp
push    esi
mov     esi, ecx
push    edi
mov     edi, [esp+10h+arg_0]
lea     eax, [esi+5ch]
mov     ebp, 3f0h
push    eax
push    ebp
push    edi
call    ?ddx_control@@ygxpavcdataexchange@@haavcwnd@@@z
lea     eax, [esi+98h]
mov     ebx, 3ebh
push    eax
push    ebx
push    edi
call    ?ddx_control@@ygxpavcdataexchange@@haavcwnd@@@z
lea     eax, [esi+0d4h]
push    eax
push    ebx
push    edi
call    ?ddx_text@@ygxpavcdataexchange@@haavcstring@@@z
add     esi, 0d8h
push    esi
push    ebp
push    edi
call    ?ddx_text@@ygxpavcdataexchange@@haavcstring@@@z
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    4
mov     eax, offset off_423d70
retn
push    ebx
push    ebp
push    esi
push    edi
mov     ebx, ecx
call    ?oninitdialog@cdialog@@uaehxz
xor     ebp, ebp
cmp     ebx, ebp
jnz     short loc_404c36
mov     hdlg, ebp
jmp     short loc_404c3e
mov     eax, [ebx+1ch]
mov     hdlg, eax
cmp     dword_42f7f4, 2
jnz     loc_404cde
mov     eax, nnumberofbytestoread
mov     [ebx+0ech], eax
shl     eax, 2
push    eax
call    _malloc
push    dword ptr [ebx+0ech]
mov     [ebx+0e4h], eax
call    _malloc
mov     ecx, [ebx+0ech]
mov     edi, [ebx+0e4h]
shl     ecx, 2
mov     [ebx+0e8h], eax
mov     esi, lpbuffer
mov     eax, ecx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     ecx, [ebx+0ech]
mov     esi, dword_42d354
mov     edi, [ebx+0e8h]
mov     eax, ecx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
push    dword_42d354
call    _free
push    lpbuffer
mov     dword_42d354, ebp
call    _free
add     esp, 10h
mov     lpbuffer, ebp
push    20h
mov     esi, 3ebh
pop     edi
mov     ecx, ebx
push    edi
push    dword_42f860
push    ebp
push    esi
call    sub_41bad0
mov     ecx, eax
call    sub_41bb8f
push    edi
mov     ecx, ebx
push    dword_42f864
push    ebp
push    esi
call    sub_41bad0
mov     ecx, eax
call    sub_41bbc0
push    edi
add     esi, 5
push    dword_42f860
mov     ecx, ebx
push    ebp
push    esi
call    sub_41bad0
mov     ecx, eax
call    sub_41bb8f
push    edi
mov     ecx, ebx
push    dword_42f864
push    ebp
push    esi
call    sub_41bad0
mov     ecx, eax
call    sub_41bbc0
mov     al, byte_42d345
lea     edi, [ebx+98h]
mov     [ebx+0dch], al
mov     al, byte_42d344
mov     [ebx+0ddh], al
mov     eax, dword_42d340
push    1
mov     ecx, edi
mov     [ebx+0e0h], eax
call    ?showwindow@cwnd@@qaehh@z
lea     esi, [ebx+5ch]
push    1
mov     ecx, esi
call    ?showwindow@cwnd@@qaehh@z
lea     ecx, [ebx+0f0h]
push    offset dword_42f7f0
call    sub_41c69e
mov     eax, dword_42f7f4
lea     ecx, [ebx+100h]
mov     [ebx+0f4h], eax
mov     eax, dword_42f7f8
mov     [ebx+0f8h], eax
mov     eax, dword_42f7fc
push    offset dword_42f800
mov     [ebx+0fch], eax
call    sub_41c69e
push    offset dword_42f804
lea     ecx, [ebx+104h]
call    sub_41c69e
push    offset dword_42f808
lea     ecx, [ebx+108h]
call    sub_41c69e
mov     eax, dword_42f80c
mov     [ebx+10ch], eax
mov     eax, dword_42f810
mov     [ebx+110h], eax
mov     eax, [ebx+0f4h]
sub     eax, ebp
jz      loc_404ec5
dec     eax
jz      short loc_404e72
dec     eax
jnz     loc_404ed6
push    ebp
mov     ecx, edi
call    sub_41bcd7
push    5
mov     ecx, esi
call    ?showwindow@cwnd@@qaehh@z
cmp     [ebx+10ch], ebp
jz      short loc_404e41
push    ecx
lea     eax, [ebx+100h]
mov     ecx, esp
push    eax
call    sub_41c326
mov     ecx, esi
call    sub_401023
jmp     short loc_404e5b
lea     eax, [ebx+100h]
lea     ecx, [ebx+0d8h]
push    eax
call    sub_41c69e
push    ebp
mov     ecx, ebx
call    sub_41b129
push    dword ptr [ebx+110h]
push    ebp
push    443h
push    dword ptr [ebx+78h]
call    ds:sendmessagea
jmp     short loc_404ed6
push    ebp
mov     ecx, edi
call    sub_41bcd7
push    5
mov     ecx, esi
call    ?showwindow@cwnd@@qaehh@z
cmp     [ebx+0f8h], ebp
jz      short loc_404ea3
push    ecx
lea     eax, [ebx+0f0h]
mov     ecx, esp
push    eax
call    sub_41c326
mov     ecx, esi
call    sub_401023
jmp     short loc_404ebd
lea     eax, [ebx+0f0h]
lea     ecx, [ebx+0d8h]
push    eax
call    sub_41c69e
push    ebp
mov     ecx, ebx
call    sub_41b129
push    dword ptr [ebx+0fch]
jmp     short loc_404e61
push    5
mov     ecx, edi
call    sub_41bcd7
push    ebp
mov     ecx, esi
call    ?showwindow@cwnd@@qaehh@z
lea     esi, [ebx+114h]
push    ebp
push    ebx
mov     ecx, esi
call    sub_41839e
push    ebp
push    1
push    401h
push    dword ptr [ebx+130h]
call    ds:sendmessagea
mov     eax, dword_42d2f4
cmp     [eax-8], ebp
jz      short loc_404f4e
cmp     [ebx+0f4h], ebp
jnz     short loc_404f27
push    ebp
push    ebp
push    eax
push    3ebh
mov     ecx, ebx
call    sub_41bad0
push    eax
mov     ecx, esi
call    ?addtool@ctooltipctrl@@qaehpavcwnd@@pbdpbutagrect@@i@z
mov     eax, dword_42d2f4
mov     ecx, [ebx+0f4h]
cmp     ecx, 1
jz      short loc_404f37
cmp     ecx, 2
jnz     short loc_404f4e
push    ebp
push    ebp
push    eax
push    3f0h
mov     ecx, ebx
call    sub_41bad0
push    eax
mov     ecx, esi
call    ?addtool@ctooltipctrl@@qaehpavcwnd@@pbdpbutagrect@@i@z
push    1
pop     eax
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
retn
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     edi, ecx
push    offset dword_42d1b0
lea     ecx, [ebp-4]
call    sub_41c61f
lea     eax, [ebp-8]
mov     esi, ds:sendmessagea
push    eax
lea     eax, [ebp-0ch]
push    eax
push    0b0h
push    dword ptr [edi+0b4h]
xor     ebx, ebx
mov     [ebp-0ch], ebx
mov     [ebp-8], ebx
call    esi
push    1
mov     ecx, edi
call    sub_41b129
push    offset a0123456789
lea     ecx, [ebp-1ch]
call    sub_41c61f
cmp     byte ptr [edi+0dch], 3
jnz     short loc_404fbf
push    offset a0123456789_0
lea     ecx, [ebp-1ch]
call    ??4cstring@@qaeabv0@pbd@z
mov     eax, [edi+0d4h]
mov     [ebp-14h], ebx
lea     ebx, [edi+0d4h]
cmp     dword ptr [eax-8], 0
jle     short loc_405015
mov     ecx, [ebp-1ch]
and     dword ptr [ebp-10h], 0
cmp     dword ptr [ecx-8], 0
jle     short loc_405008
mov     eax, [ebx]
mov     edx, [ebp-14h]
mov     al, [eax+edx]
mov     edx, [ebp-10h]
cmp     al, [edx+ecx]
jnz     short loc_404ffd
push    eax
lea     ecx, [ebp-4]
call    sub_41c880
mov     ecx, [ebp-1ch]
inc     dword ptr [ebp-10h]
mov     eax, [ebp-10h]
cmp     eax, [ecx-8]
jl      short loc_404fe1
inc     dword ptr [ebp-14h]
mov     eax, [ebx]
mov     edx, [ebp-14h]
cmp     edx, [eax-8]
jl      short loc_404fd7
lea     eax, [ebp-4]
mov     ecx, ebx
push    eax
call    sub_41c69e
push    0
mov     ecx, edi
call    sub_41b129
push    dword ptr [ebp-8]
push    dword ptr [ebp-0ch]
push    0b1h
push    dword ptr [edi+0b4h]
call    esi
push    0
push    0
push    0b7h
push    dword ptr [edi+0b4h]
call    esi
push    offset dword_42d1b4
lea     ecx, [ebp-4]
call    ??4cstring@@qaeabv0@pbd@z
and     dword ptr [ebp-18h], 0
cmp     byte ptr [edi+0dch], 0
jnz     short loc_4050e2
mov     eax, [ebx]
lea     ecx, [ebp-18h]
push    0ah
push    ecx
push    eax
call    _strtoul
add     esp, 0ch
cmp     eax, 0ffh
jbe     short loc_4050e2
mov     eax, [ebx]
and     dword ptr [ebp-14h], 0
mov     ecx, [eax-8]
dec     ecx
test    ecx, ecx
jle     short loc_4050aa
mov     ecx, [ebp-14h]
mov     al, [eax+ecx]
lea     ecx, [ebp-4]
push    eax
call    sub_41c880
mov     eax, [ebx]
inc     dword ptr [ebp-14h]
mov     ecx, [eax-8]
dec     ecx
cmp     [ebp-14h], ecx
jl      short loc_40508d
lea     eax, [ebp-4]
mov     ecx, ebx
push    eax
call    sub_41c69e
push    0
mov     ecx, edi
call    sub_41b129
push    dword ptr [ebp-8]
push    dword ptr [ebp-0ch]
push    0b1h
push    dword ptr [edi+0b4h]
call    esi
push    0
push    0
push    0b7h
push    dword ptr [edi+0b4h]
call    esi
cmp     byte ptr [edi+0dch], 1
jnz     short loc_405166
mov     eax, [ebx]
lea     ecx, [ebp-18h]
push    0ah
push    ecx
push    eax
call    _strtoul
add     esp, 0ch
cmp     eax, 0ffffh
jbe     short loc_405166
mov     eax, [ebx]
and     dword ptr [ebp-14h], 0
mov     ecx, [eax-8]
dec     ecx
test    ecx, ecx
jle     short loc_40512e
mov     ecx, [ebp-14h]
mov     al, [eax+ecx]
lea     ecx, [ebp-4]
push    eax
call    sub_41c880
mov     eax, [ebx]
inc     dword ptr [ebp-14h]
mov     ecx, [eax-8]
dec     ecx
cmp     [ebp-14h], ecx
jl      short loc_405111
lea     eax, [ebp-4]
mov     ecx, ebx
push    eax
call    sub_41c69e
push    0
mov     ecx, edi
call    sub_41b129
push    dword ptr [ebp-8]
push    dword ptr [ebp-0ch]
push    0b1h
push    dword ptr [edi+0b4h]
call    esi
push    0
push    0
push    0b7h
push    dword ptr [edi+0b4h]
call    esi
cmp     byte ptr [edi+0dch], 2
jnz     short loc_4051eb
mov     eax, [ebx]
lea     ecx, [ebp-18h]
push    ecx
push    eax
call    _strtod
fcomp   ds:dbl_423ec0
pop     ecx
pop     ecx
fnstsw  ax
sahf
jbe     short loc_4051eb
mov     eax, [ebx]
and     dword ptr [ebp-14h], 0
mov     ecx, [eax-8]
dec     ecx
test    ecx, ecx
jle     short loc_4051b3
mov     ecx, [ebp-14h]
mov     al, [eax+ecx]
lea     ecx, [ebp-4]
push    eax
call    sub_41c880
mov     eax, [ebx]
inc     dword ptr [ebp-14h]
mov     ecx, [eax-8]
dec     ecx
cmp     [ebp-14h], ecx
jl      short loc_405196
lea     eax, [ebp-4]
mov     ecx, ebx
push    eax
call    sub_41c69e
push    0
mov     ecx, edi
call    sub_41b129
push    dword ptr [ebp-8]
push    dword ptr [ebp-0ch]
push    0b1h
push    dword ptr [edi+0b4h]
call    esi
push    0
push    0
push    0b7h
push    dword ptr [edi+0b4h]
call    esi
cmp     byte ptr [edi+0dch], 3
jnz     short loc_405270
mov     eax, [ebx]
lea     ecx, [ebp-18h]
push    ecx
push    eax
call    _strtod
fabs
fcomp   ds:dbl_423ec0
pop     ecx
pop     ecx
fnstsw  ax
sahf
jbe     short loc_405270
mov     eax, [ebx]
and     dword ptr [ebp-14h], 0
mov     ecx, [eax-8]
dec     ecx
test    ecx, ecx
jle     short loc_40523a
mov     ecx, [ebp-14h]
mov     al, [eax+ecx]
lea     ecx, [ebp-4]
push    eax
call    sub_41c880
mov     eax, [ebx]
inc     dword ptr [ebp-14h]
mov     ecx, [eax-8]
dec     ecx
cmp     [ebp-14h], ecx
jl      short loc_40521d
lea     eax, [ebp-4]
mov     ecx, ebx
push    eax
call    sub_41c69e
push    0
mov     ecx, edi
call    sub_41b129
push    dword ptr [ebp-8]
lea     ebx, [edi+0b4h]
push    dword ptr [ebp-0ch]
push    0b1h
push    dword ptr [ebx]
call    esi
push    0
push    0
push    0b7h
push    dword ptr [ebx]
call    esi
push    offset dword_42d1b8
lea     ecx, [ebp-4]
call    ??4cstring@@qaeabv0@pbd@z
push    0
mov     ecx, edi
call    sub_41b129
mov     ecx, edi
call    sub_4052a2
lea     ecx, [ebp-1ch]
call    sub_41c5b1
lea     ecx, [ebp-4]
call    sub_41c5b1
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     esi, ecx
push    1
call    sub_41b129
mov     al, byte_42f85c
push    eax
push    offset azweipetexe
call    sub_40d3d8
pop     ecx
xor     ebx, ebx
pop     ecx
push    eax
push    ebx
push    20h
call    ds:openprocess
cmp     eax, ebx
mov     [ebp+hprocess], eax
jz      loc_40538b
mov     al, [esi+0dch]
mov     [ebp+var_1], bl
cmp     al, bl
jnz     short loc_4052ee
mov     [ebp+var_1], 1
cmp     al, 1
jnz     short loc_4052f6
mov     [ebp+var_1], 2
cmp     al, 2
jnz     short loc_4052fe
mov     [ebp+var_1], 4
cmp     al, 3
jnz     short loc_405306
mov     [ebp+var_1], 4
cmp     al, 3
mov     eax, [esi+0d4h]
mov     [ebp+endptr], ebx
mov     [ebp+buffer], ebx
jnz     short loc_40532a
lea     ecx, [ebp+endptr]
push    ecx
push    eax
call    _strtod
fstp    [ebp+numberofbyteswritten]
mov     eax, [ebp+numberofbyteswritten]
pop     ecx
pop     ecx
jmp     short loc_405339
lea     ecx, [ebp+endptr]
push    0ah
push    ecx
push    eax
call    _strtoul
add     esp, 0ch
movzx   edi, [ebp+var_1]
mov     [ebp+buffer], eax
lea     eax, [ebp+numberofbyteswritten]
push    eax
lea     eax, [ebp+buffer]
push    edi
push    eax
push    dword ptr [esi+0e0h]
mov     [ebp+numberofbyteswritten], ebx
push    [ebp+hprocess]
call    ds:writeprocessmemory
cmp     esi, ebx
jnz     short loc_405363
xor     eax, eax
jmp     short loc_405366
mov     eax, [esi+1ch]
push    edi
push    dword ptr [esi+0e0h]
push    eax
push    ebx
push    2
lea     eax, [ebp+buffer]
push    [ebp+numberofbyteswritten]
push    eax
call    sub_40469c
add     esp, 1ch
push    [ebp+hprocess]
call    ds:closehandle
jmp     short loc_4053b8
cmp     esi, ebx
jnz     short loc_405393
xor     esi, esi
jmp     short loc_405396
mov     esi, [esi+1ch]
mov     edx, offset acantfoundthega_0
or      ecx, 0ffffffffh
mov     edi, edx
xor     eax, eax
repne scasb
push    ebx
push    ebx
not     ecx
push    esi
push    1
dec     ecx
push    2
push    ecx
push    edx
call    sub_40469c
add     esp, 1ch
pop     edi
pop     esi
pop     ebx
leave
retn
push    ecx
push    ecx
cmp     dword ptr [esp+0ch], 2
push    ebp
mov     ebp, ecx
jnz     loc_40545c
and     dword ptr [esp+8], 0
push    ebx
push    esi
mov     esi, ds:getfocus
push    edi
mov     dword ptr [esp+10h], 30h
mov     edi, 3ebh
push    dword ptr [esp+10h]
call    ds:getasynckeystate
test    ax, ax
jz      short loc_405415
call    esi
push    eax
call    sub_41936d
push    edi
mov     ecx, ebp
mov     ebx, eax
call    sub_41bad0
cmp     ebx, eax
jnz     short loc_405415
mov     dword ptr [esp+14h], 1
inc     dword ptr [esp+10h]
cmp     dword ptr [esp+10h], 6fh
jl      short loc_4053e8
push    8
call    ds:getasynckeystate
test    ax, ax
jz      short loc_40544b
call    esi
push    eax
call    sub_41936d
push    edi
mov     ecx, ebp
mov     esi, eax
call    sub_41bad0
cmp     esi, eax
jnz     short loc_40544b
mov     dword ptr [esp+14h], 1
cmp     dword ptr [esp+14h], 0
pop     edi
pop     esi
pop     ebx
jnz     short loc_40546a
mov     ecx, ebp
call    sub_405477
cmp     dword ptr [esp+10h], 5
jnz     short loc_40546a
mov     ecx, ebp
call    sub_40556a
mov     ecx, ebp
call    sub_4192d4
pop     ebp
pop     ecx
pop     ecx
retn    4
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     al, byte_42f85c
push    esi
push    edi
push    eax
mov     esi, ecx
push    offset azweipetexe
call    sub_40d3d8
pop     ecx
pop     ecx
push    eax
push    0
push    10h
call    ds:openprocess
mov     edi, eax
test    edi, edi
jz      loc_40553d
mov     al, [esi+0dch]
and     [ebp+buffer], 0
xor     cl, cl
test    al, al
jnz     short loc_4054ba
inc     cl
cmp     al, 1
jnz     short loc_4054c0
mov     cl, 2
cmp     al, 2
jnz     short loc_4054c6
mov     cl, 4
cmp     al, 3
jnz     short loc_4054cc
mov     cl, 4
lea     eax, [ebp+numberofbytesread]
and     [ebp+numberofbytesread], 0
push    eax
movzx   eax, cl
push    eax
lea     eax, [ebp+buffer]
push    eax
push    dword ptr [esi+0e0h]
push    edi
call    ds:readprocessmemory
cmp     byte ptr [esi+0dch], 3
jnz     short loc_40550d
fld     [ebp+buffer]
lea     eax, [ebp+string]
push    eax
push    7
push    ecx
push    ecx
fstp    [esp+34h+value]
call    __gcvt
add     esp, 10h
lea     eax, [ebp+string]
jmp     short loc_405521
lea     eax, [ebp+string]
push    0ah
push    eax
push    [ebp+buffer]
call    __ultoa
add     esp, 0ch
lea     eax, [ebp+string]
push    eax
lea     ecx, [esi+0d4h]
call    ??4cstring@@qaeabv0@pbd@z
push    0
mov     ecx, esi
call    sub_41b129
push    edi
call    ds:closehandle
pop     edi
pop     esi
leave
retn
push    esi
mov     esi, ecx
push    [esp+4+lparam]
push    0
push    407h
push    dword ptr [esi+130h]
call    ds:sendmessagea
push    [esp+4+lparam]
mov     ecx, esi
call    ?pretranslatemessage@cdialog@@uaehpautagmsg@@@z
pop     esi
retn    4
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, off_42b8a0
push    ebx
mov     [ebp+var_8], eax
mov     al, byte_42f85c
push    esi
push    edi
push    eax
mov     esi, ecx
push    offset azweipetexe
call    sub_40d3d8
pop     ecx
xor     edi, edi
pop     ecx
push    eax
push    edi
push    10h
call    ds:openprocess
cmp     eax, edi
mov     [ebp+hprocess], eax
jz      short loc_405604
cmp     [esi+0ech], edi
jbe     short loc_4055f7
mov     ecx, [esi+0e8h]
mov     eax, [esi+0e4h]
mov     bl, [edi+ecx]
mov     eax, [eax+edi*4]
lea     ecx, [ebp+numberofbytesread]
and     [ebp+buffer], 0
and     [ebp+numberofbytesread], 0
push    ecx
lea     ecx, [ebp+buffer]
push    1
push    ecx
push    eax
push    [ebp+hprocess]
call    ds:readprocessmemory
cmp     bl, [ebp+buffer]
jnz     short loc_4055e8
inc     edi
cmp     edi, [esi+0ech]
jb      short loc_4055aa
jmp     short loc_4055f7
lea     eax, [esi+108h]
lea     ecx, [ebp+var_8]
push    eax
call    sub_41c69e
push    [ebp+hprocess]
call    ds:closehandle
xor     edi, edi
jmp     short loc_405613
lea     eax, [esi+100h]
lea     ecx, [ebp+var_8]
push    eax
call    sub_41c69e
mov     eax, [ebp+var_8]
cmp     [eax-8], edi
jnz     short loc_40562a
lea     eax, [esi+104h]
lea     ecx, [ebp+var_8]
push    eax
call    sub_41c69e
cmp     [esi+10ch], edi
jz      short loc_405648
push    ecx
lea     eax, [ebp+var_8]
mov     ecx, esp
push    eax
call    sub_41c326
lea     ecx, [esi+5ch]
call    sub_401023
jmp     short loc_40565f
lea     eax, [ebp+var_8]
lea     ecx, [esi+0d8h]
push    eax
call    sub_41c69e
push    edi
mov     ecx, esi
call    sub_41b129
lea     ecx, [ebp+var_8]
call    sub_41c5b1
pop     edi
pop     esi
pop     ebx
leave
retn
push    esi
mov     esi, ecx
call    sub_405688
test    [esp+4+arg_0], 1
jz      short loc_405682
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
lea     ecx, [esi+114h]
call    ??1ctooltipctrl@@uae@xz
lea     ecx, [esi+100h]
call    sub_4056de
lea     ecx, [esi+0f0h]
call    sub_41c5b1
lea     ecx, [esi+0d8h]
call    sub_41c5b1
lea     ecx, [esi+0d4h]
call    sub_41c5b1
lea     ecx, [esi+98h]
call    sub_420be6
lea     ecx, [esi+5ch]
call    sub_401012
mov     ecx, esi
call    sub_41cb2f
pop     esi
retn
push    esi
mov     esi, ecx
lea     ecx, [esi+8]
call    sub_41c5b1
lea     ecx, [esi+4]
call    sub_41c5b1
mov     ecx, esi
call    sub_41c5b1
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_420be6
test    [esp+4+arg_0], 1
jz      short loc_405710
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
call    sub_405727
push    offset sub_405749
call    _atexit
pop     ecx
retn
push    0
mov     ecx, offset dword_42d1c8
call    unknown_libname_9
push    offset stru_42d1d0
mov     dword_42d1c8, offset off_423ee0
call    ds:initializecriticalsection
retn
test    byte_42d1c0, 1
jnz     short locret_405778
or      byte_42d1c0, 1
push    offset stru_42d1d0
mov     dword_42d1c8, offset off_423ee0
call    ds:deletecriticalsection
mov     ecx, offset dword_42d1c8
jmp     sub_40dfd6
retn
mov     eax, offset off_423ec8
retn
mov     dword ptr [ecx], offset off_423ef8
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
mov     esi, ecx
push    1
push    offset dword_42d1c8
lea     ecx, [ebp+var_c]
call    ??0csinglelock@@qae@pavcsyncobject@@h@z
push    esi
call    sub_4059db
pop     ecx
xor     eax, eax
lea     ecx, [ebp+var_c]
mov     [esi+4], eax
mov     [esi+8], eax
mov     [esi+0ch], eax
call    ?unlock@csinglelock@@qaehxz
pop     esi
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
mov     esi, ecx
push    1
push    offset dword_42d1c8
lea     ecx, [ebp+var_c]
call    ??0csinglelock@@qae@pavcsyncobject@@h@z
mov     eax, [ebp+arg_0]
push    esi
mov     [esi+4], eax
call    sub_405989
pop     ecx
lea     ecx, [ebp+var_c]
call    ?unlock@csinglelock@@qaehxz
pop     esi
leave
retn    4
push    ebp
mov     ebp, esp
mov     eax, ecx
mov     ecx, [eax+0ch]
test    ecx, ecx
jz      short loc_40581d
push    [ebp+lparam]
mov     eax, [ecx]
push    [ebp+wparam]
push    [ebp+msg]
call    dword ptr [eax+0ch]
jmp     short loc_405835
push    [ebp+lparam]
mov     ecx, [eax+4]
push    [ebp+wparam]
push    [ebp+msg]
push    dword ptr [ecx+1ch]
push    dword ptr [eax+8]
call    ds:callwindowproca
pop     ebp
retn    0ch
push    esi
mov     esi, ecx
call    ?afxgetthreadstate@@ygpav_afx_thread_state@@xz
push    dword ptr [eax+40h]
add     eax, 34h
mov     ecx, esi
push    dword ptr [eax+8]
push    dword ptr [eax+4]
call    sub_405801
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    ebx
push    esi
push    edi
call    ?afxgetthreadstate@@ygpav_afx_thread_state@@xz
mov     ebx, eax
mov     eax, [ebp+lpprevwndfunc]
add     ebx, 34h
push    7
pop     ecx
mov     esi, ebx
lea     edi, [ebp+var_1c]
rep movsd
mov     edi, [ebp+hwnd]
mov     [ebx+4], eax
mov     eax, [ebp+wparam]
mov     [ebx], edi
mov     [ebx+8], eax
mov     eax, [ebp+lparam]
mov     [ebx+0ch], eax
push    lpstring
push    edi
call    ds:getpropa
mov     esi, 82h
cmp     [ebp+lpprevwndfunc], esi
jnz     short loc_4058c1
mov     eax, [eax+8]
push    edi
mov     [ebp+lpprevwndfunc], eax
call    sub_405a53
pop     ecx
push    [ebp+lparam]
push    [ebp+wparam]
push    esi
push    edi
push    [ebp+lpprevwndfunc]
call    ds:callwindowproca
jmp     short loc_4058d1
push    [ebp+lparam]
mov     edx, [eax]
mov     ecx, eax
push    [ebp+wparam]
push    [ebp+lpprevwndfunc]
call    dword ptr [edx+0ch]
push    7
lea     esi, [ebp+var_1c]
pop     ecx
mov     edi, ebx
rep movsd
pop     edi
pop     esi
pop     ebx
leave
retn    10h
xor     eax, eax
cmp     [ecx+4], eax
setnz   al
retn
push    esi
mov     esi, ecx
push    lpstring
mov     eax, [esi+4]
mov     eax, [eax+1ch]
push    eax
call    ds:getpropa
xor     ecx, ecx
cmp     eax, esi
setz    cl
mov     eax, ecx
pop     esi
retn
push    esi
mov     esi, ecx
push    lpstring
mov     eax, [esi+4]
mov     eax, [eax+1ch]
push    eax
call    ds:getpropa
mov     ecx, [eax+0ch]
test    ecx, ecx
jz      short loc_40592d
mov     eax, ecx
jmp     short loc_405922
xor     ecx, ecx
cmp     eax, esi
setz    cl
mov     eax, ecx
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_4058eb
test    eax, eax
jnz     short loc_405960
mov     ecx, esi
call    sub_40590c
test    eax, eax
jnz     short loc_405960
mov     ecx, esi
call    sub_405964
cmp     eax, 1
jle     short loc_405960
push    1
pop     eax
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, [ecx+4]
push    esi
push    1
mov     eax, [eax+1ch]
pop     esi
push    lpstring
push    eax
call    ds:getpropa
mov     eax, [eax+0ch]
test    eax, eax
jz      short loc_405985
inc     esi
jmp     short loc_40597b
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, [esp+4+hdata]
push    lpstring
mov     eax, [esi+4]
mov     eax, [eax+1ch]
push    eax
call    ds:getpropa
push    esi
mov     [esi+0ch], eax
push    lpstring
mov     eax, [esi+4]
push    dword ptr [eax+1ch]
call    ds:setpropa
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_4059c3
mov     eax, [eax+8]
jmp     short loc_4059d6
mov     eax, [esi+4]
push    offset sub_405856
push    0fffffffch
push    dword ptr [eax+1ch]
call    ds:setwindowlonga
mov     [esi+8], eax
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     eax, [edi+4]
test    eax, eax
jz      short loc_4059eb
mov     eax, [eax+1ch]
push    lpstring
push    eax
call    ds:getpropa
mov     esi, eax
cmp     esi, edi
mov     eax, [esi+0ch]
jnz     short loc_405a3f
test    eax, eax
jz      short loc_405a1a
push    eax
mov     eax, [eax+4]
push    lpstring
push    dword ptr [eax+1ch]
call    ds:setpropa
jmp     short loc_405a50
push    lpstring
mov     eax, [esi+4]
push    dword ptr [eax+1ch]
call    ds:removepropa
push    dword ptr [esi+8]
mov     eax, [esi+4]
push    0fffffffch
push    dword ptr [eax+1ch]
call    ds:setwindowlonga
jmp     short loc_405a50
cmp     eax, edi
jz      short loc_405a4a
mov     esi, eax
mov     eax, [esi+0ch]
jmp     short loc_405a3f
mov     eax, [edi+0ch]
mov     [esi+0ch], eax
pop     edi
pop     esi
retn
push    lpstring
push    [esp+4+hwnd]
call    ds:getpropa
test    eax, eax
jz      short locret_405a70
mov     ecx, eax
call    sub_40579a
jmp     short sub_405a53
retn
push    lpstring
push    dword ptr [esp+8]
call    ds:getpropa
retn
push    1
pop     eax
retn    8
push    esi
mov     esi, ecx
lea     eax, [esi+8]
mov     dword ptr [esi], offset off_423ee0
push    eax
call    ds:deletecriticalsection
mov     ecx, esi
call    sub_40dfd6
test    [esp+4+arg_0], 1
jz      short loc_405acd
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    ebx
push    ebp
push    esi
push    edi
mov     esi, ecx
call    sub_418f4c
mov     ebx, ds:getsyscolor
lea     edi, [esi+84h]
mov     dword ptr [esi], offset ??_7cstatic@@6b@
push    8
and     dword ptr [edi+4], 0
mov     dword ptr [edi], offset off_423d5c
mov     eax, off_42b8a0
mov     [esi+8ch], eax
mov     dword ptr [esi], offset off_423f88
call    ebx
push    0fh
mov     [esi+3ch], eax
call    ebx
mov     ebp, ds:createsolidbrush
push    eax
call    ebp
mov     [esi+40h], eax
lea     eax, [esi+48h]
push    eax
push    3ch
push    11h
call    ds:getstockobject
push    eax
call    ds:getobjecta
lea     eax, [esi+48h]
push    eax
call    ds:createfontindirecta
push    eax
mov     ecx, edi
call    sub_41fbc4
xor     eax, eax
push    0fh
mov     [esi+94h], eax
mov     [esi+90h], eax
mov     dword ptr [esi+98h], 1
mov     [esi+0a0h], eax
mov     [esi+9ch], eax
mov     [esi+0a4h], eax
call    ebx
push    eax
call    ebp
mov     [esi+44h], eax
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
push    ebx
push    esi
mov     esi, ecx
push    edi
lea     edi, [esi+84h]
mov     dword ptr [esi], offset off_423f88
mov     ecx, edi
call    sub_41fc1b
mov     eax, [esi+40h]
mov     ebx, ds:deleteobject
test    eax, eax
jz      short loc_405bca
push    eax
call    ebx
mov     eax, [esi+44h]
test    eax, eax
jz      short loc_405bd4
push    eax
call    ebx
lea     ecx, [esi+8ch]
call    sub_41c5b1
mov     ecx, edi
mov     dword ptr [edi], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
mov     ecx, esi
call    sub_420b23
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+4]
push    esi
mov     esi, ecx
push    dword ptr [eax]
call    sub_41bbf1
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
push    105h
mov     esi, ecx
push    0
push    0
push    dword ptr [esi+1ch]
mov     [esi+3ch], eax
call    ds:redrawwindow
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
neg     eax
sbb     eax, eax
mov     esi, ecx
and     eax, 12ch
add     eax, 190h
mov     [esi+58h], eax
call    sub_405e38
push    105h
push    0
push    0
push    dword ptr [esi+1ch]
call    ds:redrawwindow
mov     eax, esi
pop     esi
retn    4
mov     al, [esp+arg_0]
push    esi
mov     esi, ecx
mov     [esi+5dh], al
call    sub_405e38
push    105h
push    0
push    0
push    dword ptr [esi+1ch]
call    ds:redrawwindow
mov     eax, esi
pop     esi
retn    4
mov     al, [esp+arg_0]
push    esi
mov     esi, ecx
mov     [esi+5ch], al
call    sub_405e38
push    105h
push    0
push    0
push    dword ptr [esi+1ch]
call    ds:redrawwindow
mov     eax, esi
pop     esi
retn    4
xor     eax, eax
push    esi
cmp     [esp+8], eax
mov     esi, ecx
push    20h
jnz     short loc_405cc5
push    eax
push    20000h
jmp     short loc_405ccb
push    20000h
push    eax
mov     ecx, esi
call    sub_41bbc0
mov     eax, esi
pop     esi
retn    4
xor     eax, eax
push    esi
cmp     [esp+8], eax
mov     esi, ecx
push    20h
jnz     short loc_405ced
push    eax
push    800000h
jmp     short loc_405cf3
push    800000h
push    eax
mov     ecx, esi
call    sub_41bb8f
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+4]
push    esi
mov     esi, ecx
neg     eax
mov     [esi+48h], eax
call    sub_405e38
push    105h
push    0
push    0
push    dword ptr [esi+1ch]
call    ds:redrawwindow
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
mov     eax, [esi+40h]
test    eax, eax
jz      short loc_405d3a
push    eax
call    ds:deleteobject
push    [esp+4+color]
call    ds:createsolidbrush
push    105h
push    0
push    0
mov     [esi+40h], eax
push    dword ptr [esi+1ch]
call    ds:redrawwindow
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
push    105h
mov     esi, ecx
push    0
push    0
push    dword ptr [esi+1ch]
mov     [esi+0a4h], eax
call    ds:redrawwindow
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+4]
push    ebx
push    esi
push    edi
mov     edi, [eax]
mov     ebx, ecx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
lea     edx, [ebx+64h]
mov     eax, ecx
mov     esi, edi
mov     edi, edx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     ecx, ebx
call    sub_405e38
push    105h
push    0
push    0
push    dword ptr [ebx+1ch]
call    ds:redrawwindow
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
retn    4
mov     eax, offset off_423f08
retn
cmp     dword ptr [esp+8], 6
push    esi
mov     esi, ecx
jnz     short loc_405e07
push    edi
mov     edi, [esp+0ch]
lea     ecx, [esi+84h]
mov     eax, [edi]
push    ecx
mov     ecx, edi
call    dword ptr [eax+28h]
mov     eax, [edi]
push    dword ptr [esi+3ch]
mov     ecx, edi
call    dword ptr [eax+30h]
push    1
mov     ecx, edi
call    sub_41f663
pop     edi
cmp     dword ptr [esi+9ch], 2
jnz     short loc_405e1e
cmp     dword ptr [esi+90h], 0
jnz     short loc_405e1e
mov     eax, [esi+44h]
jmp     short loc_405e34
cmp     dword ptr [esi+0a4h], 0
jz      short loc_405e31
push    5
call    ds:getstockobject
jmp     short loc_405e34
mov     eax, [esi+40h]
pop     esi
retn    8
push    esi
mov     esi, ecx
push    edi
lea     edi, [esi+84h]
mov     ecx, edi
call    sub_41fc1b
add     esi, 48h
push    esi
call    ds:createfontindirecta
push    eax
mov     ecx, edi
call    sub_41fbc4
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
push    edi
push    1
cmp     dword ptr [esi+94h], 0
pop     edi
jz      short loc_405e83
push    dword ptr [esi+8ch]
call    sub_41bbf1
push    edi
push    dword ptr [esi+1ch]
call    ds:killtimer
cmp     [esp+8+arg_0], 0
jz      short loc_405ebc
lea     eax, [esi+8ch]
mov     ecx, esi
push    eax
call    ?getwindowtexta@cwnd@@qbexaavcstring@@@z
and     dword ptr [esi+90h], 0
push    0
push    1f4h
push    edi
push    dword ptr [esi+1ch]
mov     [esi+94h], edi
call    ds:settimer
mov     [esi+9ch], edi
mov     eax, esi
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
cmp     dword ptr [esi+94h], 0
jz      short loc_405eda
push    1
push    dword ptr [esi+1ch]
call    ds:killtimer
cmp     [esp+4+arg_0], 0
jz      short loc_405f0e
and     dword ptr [esi+90h], 0
push    0
push    1f4h
push    1
push    dword ptr [esi+1ch]
mov     dword ptr [esi+94h], 1
call    ds:settimer
mov     dword ptr [esi+9ch], 2
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
xor     edx, edx
xor     ecx, ecx
cmp     [esi+90h], edx
lea     eax, [esi+90h]
setz    cl
mov     [eax], ecx
mov     eax, [esi+9ch]
dec     eax
jz      short loc_405f4e
dec     eax
jnz     short loc_405f66
push    edx
push    edx
push    dword ptr [esi+1ch]
call    ds:invalidaterect
push    dword ptr [esi+1ch]
call    ds:updatewindow
jmp     short loc_405f66
cmp     ecx, edx
jz      short loc_405f59
push    offset dword_42d1e8
jmp     short loc_405f5f
push    dword ptr [esi+8ch]
mov     ecx, esi
call    sub_41bbf1
mov     ecx, esi
call    sub_4192d4
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
mov     esi, ecx
xor     ecx, ecx
cmp     eax, ecx
mov     [esi+98h], eax
push    ecx
jz      short loc_405f8d
push    100h
push    ecx
jmp     short loc_405f93
push    ecx
push    100h
mov     ecx, esi
call    sub_41bb8f
mov     eax, esi
pop     esi
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     eax, off_42b8a0
push    esi
mov     [ebp-4], eax
lea     eax, [ebp-4]
mov     esi, ecx
push    eax
call    ?getwindowtexta@cwnd@@qbexaavcstring@@@z
mov     eax, [ebp-4]
xor     ecx, ecx
cmp     [eax-8], ecx
jz      short loc_405fd3
push    1
push    ecx
push    ecx
push    eax
push    offset aopen_0
push    ecx
call    ds:shellexecutea
mov     ecx, esi
call    sub_4192d4
lea     ecx, [ebp-4]
call    sub_41c5b1
pop     esi
leave
retn    0ch
mov     eax, [ecx+0a0h]
test    eax, eax
jz      short loc_405ffd
push    eax
call    ds:setcursor
push    1
pop     eax
jmp     short locret_406002
call    sub_4192d4
retn    0ch
mov     eax, ecx
mov     ecx, [esp+arg_0]
mov     [eax+0a0h], ecx
retn    4
push    esi
mov     esi, ecx
call    sub_405ba2
test    [esp+4+arg_0], 1
jz      short loc_40602a
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    ebp
mov     ebp, esp
sub     esp, 3ch
push    esi
push    edi
mov     esi, ecx
call    sub_418f4c
and     dword ptr [esi+40h], 0
lea     edi, [esi+3ch]
push    11h
mov     dword ptr [edi], offset off_423d5c
mov     dword ptr [esi], offset off_424060
mov     dword ptr [esi+48h], 0a3a352h
mov     dword ptr [esi+4ch], 676734h
mov     dword ptr [esi+50h], 0ffffffh
call    ds:getstockobject
push    eax
call    sub_41fbaf
lea     ecx, [ebp+pv]
mov     [esi+44h], eax
push    ecx
push    3ch
push    dword ptr [eax+4]
call    ds:getobjecta
lea     eax, [ebp+pv]
mov     [ebp+var_2c], 2bch
push    eax
call    ds:createfontindirecta
push    eax
mov     ecx, edi
call    sub_41fbc4
mov     eax, esi
pop     edi
pop     esi
leave
retn
push    esi
mov     esi, ecx
lea     ecx, [esi+3ch]
mov     dword ptr [esi], offset off_424060
mov     dword ptr [ecx], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
mov     ecx, esi
call    sub_420b7d
pop     esi
retn
mov     eax, offset off_424040
retn
push    ebp
mov     ebp, esp
sub     esp, 54h
mov     eax, off_42b8a0
push    ebx
mov     [ebp+var_4], eax
push    esi
lea     eax, [ebp+var_4]
push    edi
mov     edi, ecx
push    eax
call    ?getwindowtexta@cwnd@@qbexaavcstring@@@z
mov     ebx, [ebp+size]
push    dword ptr [ebx+18h]
call    sub_41f423
mov     esi, eax
add     ebx, 1ch
lea     eax, [ebp+rcdst]
push    ebx
push    eax
call    ds:copyrect
movzx   eax, byte ptr [edi+48h]
mov     [ebp+size], eax
xor     eax, eax
mov     al, [edi+49h]
mov     ecx, [ebp+rcdst.right]
fild    [ebp+size]
movzx   eax, al
fstp    qword ptr [ebp+mode]
mov     [ebp+size], eax
mov     eax, [edi+48h]
fild    [ebp+size]
shr     eax, 10h
movzx   eax, al
fstp    [ebp+var_1c]
mov     [ebp+size], eax
mov     eax, [ebp+rcdst.left]
fild    [ebp+size]
sub     ecx, eax
mov     [ebp+size], ecx
movzx   ecx, byte ptr [edi+4ch]
fstp    [ebp+var_14]
fild    [ebp+size]
mov     [ebp+size], ecx
xor     ecx, ecx
fild    [ebp+size]
mov     cl, [edi+4dh]
movzx   ecx, cl
fsub    qword ptr [ebp+mode]
mov     [ebp+size], ecx
mov     ecx, [edi+4ch]
shr     ecx, 10h
fdiv    st, st(1)
movzx   ecx, cl
fstp    [ebp+var_c]
fild    [ebp+size]
mov     [ebp+size], ecx
fsub    [ebp+var_1c]
fdiv    st, st(1)
fstp    [ebp+var_2c]
fild    [ebp+size]
fsub    [ebp+var_14]
fdiv    st, st(1)
fstp    [ebp+var_34]
fstp    st
cmp     eax, [ebp+rcdst.right]
jge     short loc_4061ef
mov     ecx, [ebp+rcdst.top]
mov     [ebp+rect.left], eax
fld     [ebp+var_14]
inc     eax
mov     [ebp+rect.top], ecx
mov     [ebp+size], eax
mov     [ebp+rect.right], eax
mov     eax, [ebp+rcdst.bottom]
mov     [ebp+rect.bottom], eax
call    __ftol
fld     [ebp+var_1c]
xor     ebx, ebx
mov     bh, al
call    __ftol
fld     qword ptr [ebp+mode]
mov     bl, al
shl     ebx, 8
call    __ftol
movzx   eax, al
or      ebx, eax
lea     eax, [ebp+rect]
push    ebx
push    eax
mov     ecx, esi
call    ?fillsolidrect@cdc@@qaexpbutagrect@@k@z
fld     [ebp+var_c]
fadd    qword ptr [ebp+mode]
mov     eax, [ebp+size]
fstp    qword ptr [ebp+mode]
fld     [ebp+var_2c]
fadd    [ebp+var_1c]
fstp    [ebp+var_1c]
fld     [ebp+var_34]
fadd    [ebp+var_14]
fstp    [ebp+var_14]
jmp     short loc_406182
push    1
mov     ecx, esi
call    sub_41f663
mov     [ebp+mode+4], eax
mov     eax, [esi]
lea     ebx, [edi+3ch]
mov     ecx, esi
push    ebx
call    dword ptr [eax+28h]
push    dword ptr [edi+50h]
mov     dword ptr [ebp+var_1c+4], eax
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+30h]
push    9
lea     ecx, [ebp+var_4]
mov     dword ptr [ebp+var_14+4], eax
call    sub_41c944
test    eax, eax
mov     [ebp+size], eax
jle     short loc_4062a5
mov     eax, [esi]
push    dword ptr [edi+44h]
mov     ecx, esi
call    dword ptr [eax+28h]
mov     eax, [ebp+var_4]
lea     ecx, [ebp+var_4]
mov     eax, [eax-8]
sub     eax, [ebp+size]
dec     eax
push    eax
lea     eax, [ebp+var_c+4]
push    eax
call    sub_417d41
push    2
mov     ecx, esi
call    sub_41f95f
mov     edi, eax
mov     eax, dword ptr [ebp+var_c+4]
mov     edx, [esi]
mov     ecx, esi
push    dword ptr [eax-8]
push    eax
mov     eax, [ebp+rcdst.top]
inc     eax
push    eax
mov     eax, [ebp+rcdst.right]
add     eax, 0fffffffeh
push    eax
call    dword ptr [edx+5ch]
push    edi
mov     ecx, esi
call    sub_41f95f
push    [ebp+size]
lea     eax, [ebp+size]
lea     ecx, [ebp+var_4]
push    eax
call    sub_417dbd
push    eax
lea     ecx, [ebp+var_4]
call    sub_41c69e
lea     ecx, [ebp+size]
call    sub_41c5b1
mov     eax, [esi]
push    ebx
mov     ecx, esi
call    dword ptr [eax+28h]
lea     ecx, [ebp+var_c+4]
call    sub_41c5b1
mov     eax, [ebp+var_4]
mov     edx, [esi]
mov     ecx, esi
push    dword ptr [eax-8]
push    eax
mov     eax, [ebp+rcdst.top]
inc     eax
push    eax
mov     eax, [ebp+rcdst.left]
add     eax, 2
push    eax
call    dword ptr [edx+5ch]
mov     eax, [esi]
push    dword ptr [ebp+var_14+4]
mov     ecx, esi
call    dword ptr [eax+30h]
mov     eax, [esi]
push    dword ptr [ebp+var_1c+4]
mov     ecx, esi
call    dword ptr [eax+28h]
push    [ebp+mode+4]
mov     ecx, esi
call    sub_41f663
lea     ecx, [ebp+var_4]
call    sub_41c5b1
pop     edi
pop     esi
pop     ebx
leave
retn    4
mov     eax, [esp+arg_0]
mov     [ecx+48h], eax
mov     eax, [esp+arg_4]
mov     [ecx+4ch], eax
mov     eax, [esp+arg_8]
mov     [ecx+50h], eax
retn    0ch
push    esi
mov     esi, ecx
call    sub_4060a6
test    [esp+4+arg_0], 1
jz      short loc_40631a
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    offset ataskbarcreated
call    ds:registerwindowmessagea
mov     dword_42d1ec, eax
retn
push    esi
mov     esi, ecx
call    ??0cdc@@qae@xz
xor     eax, eax
mov     dword ptr [esi], offset off_424138
mov     [esi+10h], eax
mov     [esi+14h], eax
mov     [esi+18h], eax
mov     [esi+1ch], eax
mov     [esi+20h], eax
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_424138
call    sub_4063e7
mov     ecx, esi
call    sub_405793
pop     esi
retn
push    esi
mov     esi, ecx
mov     ecx, [esp+0ch]
call    sub_41a98c
test    eax, eax
jz      short loc_40637e
push    eax
jmp     short loc_406382
push    dword ptr [esp+0ch]
mov     ecx, esi
call    sub_4057cf
mov     eax, [esp+8]
mov     [esi+10h], eax
pop     esi
retn    8
push    esi
push    edi
mov     esi, ecx
call    sub_4063e7
mov     edi, [esp+8+arg_4]
mov     eax, edi
shl     eax, 2
push    eax
call    sub_41c2f2
mov     [esi+14h], eax
xor     eax, eax
test    edi, edi
pop     ecx
jle     short loc_4063c8
mov     edx, [esp+8+arg_0]
mov     ecx, [esi+14h]
mov     edx, [edx+eax*4]
mov     [ecx+eax*4], edx
inc     eax
cmp     eax, edi
jl      short loc_4063b6
mov     eax, [esi+4]
push    0
push    [esp+0ch+uelapse]
mov     [esi+18h], edi
push    65h
push    dword ptr [eax+1ch]
call    ds:settimer
mov     [esi+1ch], eax
pop     edi
pop     esi
retn    0ch
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
cmp     [esi+1ch], edi
jz      short loc_40641f
mov     eax, [esi+4]
cmp     eax, edi
jz      short loc_40641c
jnz     short loc_4063ff
xor     eax, eax
jmp     short loc_406402
mov     eax, [eax+1ch]
push    eax
call    ds:iswindow
test    eax, eax
jz      short loc_40641c
push    dword ptr [esi+1ch]
mov     eax, [esi+4]
push    dword ptr [eax+1ch]
call    ds:killtimer
mov     [esi+1ch], edi
mov     eax, [esi+14h]
cmp     eax, edi
jz      short loc_406430
push    eax
call    ??3@yaxpax@z
pop     ecx
mov     [esi+14h], edi
mov     [esi+20h], edi
mov     [esi+18h], edi
pop     edi
pop     esi
retn
xor     eax, eax
cmp     [ecx+18h], eax
setnz   al
retn
mov     eax, [ecx+20h]
mov     ecx, [ecx+14h]
mov     eax, [ecx+eax*4]
retn
mov     eax, [esp+arg_0]
push    esi
xor     esi, esi
cmp     eax, dword_42d1ec
jnz     short loc_40646a
push    [esp+4+arg_8]
push    [esp+8+arg_4]
call    sub_4064c6
jmp     short loc_406486
cmp     eax, 113h
jnz     short loc_406481
cmp     [esp+4+arg_4], 65h
jnz     short loc_406481
push    65h
call    sub_40648e
jmp     short loc_406488
call    sub_405839
mov     esi, eax
mov     eax, esi
pop     esi
retn    0ch
mov     eax, [ecx+20h]
push    esi
inc     eax
cdq
idiv    dword ptr [ecx+18h]
mov     eax, [ecx+10h]
mov     [ecx+20h], edx
mov     dword ptr [eax+18h], 2
mov     eax, [ecx+20h]
mov     edx, [ecx+14h]
mov     esi, [ecx+10h]
mov     eax, [edx+eax*4]
mov     [esi+20h], eax
mov     eax, [ecx+10h]
add     eax, 0ch
push    eax
push    1
call    ds:shell_notifyicona
pop     esi
retn    4
push    esi
mov     esi, ecx
mov     ecx, [esi+10h]
cmp     dword ptr [ecx+68h], 0
jnz     short loc_4064df
call    sub_40655e
mov     ecx, [esi+10h]
call    sub_406581
xor     eax, eax
pop     esi
retn    8
mov     eax, offset off_424120
retn
push    esi
mov     esi, ecx
push    edi
lea     ecx, [esi+70h]
call    sub_406331
lea     eax, [esi+94h]
xor     edx, edx
push    16h
lea     edi, [esi+0ch]
mov     dword ptr [eax], offset ??_7cmenu@@6b@
mov     [eax+4], edx
pop     ecx
xor     eax, eax
mov     dword ptr [esi], offset off_424148
rep stosd
mov     [esi+64h], edx
mov     [esi+68h], edx
mov     [esi+6ch], edx
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_424148
call    sub_4065a3
lea     ecx, [esi+94h]
mov     dword ptr [ecx], offset ??_7cmenu@@6b@
call    sub_41d54c
add     esi, 70h
mov     ecx, esi
mov     dword ptr [esi], offset off_424138
call    sub_4063e7
mov     ecx, esi
call    sub_405793
pop     esi
retn
push    esi
mov     esi, ecx
cmp     dword ptr [esi+68h], 0
jnz     short loc_40657f
push    2
lea     ecx, [esi+0ch]
pop     eax
push    ecx
push    eax
mov     [esi+18h], eax
call    ds:shell_notifyicona
mov     dword ptr [esi+68h], 1
pop     esi
retn
push    esi
mov     esi, ecx
cmp     dword ptr [esi+68h], 0
jz      short loc_4065a1
lea     eax, [esi+0ch]
mov     dword ptr [esi+18h], 7
push    eax
push    0
call    ds:shell_notifyicona
and     dword ptr [esi+68h], 0
pop     esi
retn
push    esi
mov     esi, ecx
cmp     dword ptr [esi+64h], 0
jz      short loc_4065c0
and     dword ptr [esi+18h], 0
lea     eax, [esi+0ch]
push    eax
push    2
call    ds:shell_notifyicona
and     dword ptr [esi+64h], 0
pop     esi
retn
push    esi
mov     esi, ecx
push    edi
lea     edi, [esi+94h]
mov     ecx, edi
call    sub_41d54c
push    [esp+8+arg_0]
mov     ecx, edi
call    sub_41d4f5
push    0
push    dword ptr [esi+98h]
call    ds:getsubmenu
push    eax
call    sub_41d4c2
mov     edi, [esp+8+uitem]
cmp     edi, 7d0h
jz      short loc_40661b
push    1
push    edi
push    dword ptr [eax+4]
call    ds:setmenudefaultitem
mov     [esi+4], edi
pop     edi
pop     esi
retn    8
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, ecx
push    [ebp+arg_4]
lea     ecx, [ebx+94h]
call    sub_406a6e
test    eax, eax
jz      short loc_40665a
push    0
push    dword ptr [ebx+98h]
call    ds:getsubmenu
push    eax
call    sub_41d4c2
test    eax, eax
jnz     short loc_406661
xor     eax, eax
jmp     loc_4066f9
push    esi
push    edi
push    1
push    0
push    dword ptr [eax+4]
call    ds:setmenudefaultitem
mov     edi, [ebp+arg_0]
lea     esi, [ebx+70h]
mov     ecx, edi
call    sub_41a98c
test    eax, eax
jz      short loc_406684
push    eax
jmp     short loc_406685
push    edi
mov     ecx, esi
call    sub_4057cf
lea     edx, [ebx+0ch]
mov     [esi+10h], ebx
test    edi, edi
mov     [ebx+6ch], edi
mov     dword ptr [edx], 58h
jz      short loc_4066a2
mov     edi, [edi+1ch]
mov     eax, [ebp+arg_4]
mov     [ebx+10h], edi
mov     edi, [ebp+arg_8]
mov     [ebx+14h], eax
mov     eax, [ebp+arg_10]
or      ecx, 0ffffffffh
mov     [ebx+1ch], eax
mov     eax, [ebp+arg_c]
mov     [ebx+20h], eax
xor     eax, eax
mov     dword ptr [ebx+18h], 7
lea     esi, [ebx+24h]
repne scasb
not     ecx
sub     edi, ecx
mov     [ebp+arg_4], esi
mov     eax, ecx
mov     esi, edi
mov     edi, [ebp+arg_4]
push    edx
shr     ecx, 2
rep movsd
mov     ecx, eax
push    0
and     ecx, 3
rep movsb
call    ds:shell_notifyicona
mov     ecx, [ebp+arg_0]
pop     edi
mov     [ebx+64h], eax
mov     [ebx+8], ecx
pop     esi
pop     ebx
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_c]
push    [ebp+arg_18]
mov     esi, ecx
push    dword ptr [edi]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_40662a
push    [ebp+uelapse]
lea     ecx, [esi+70h]
mov     ebx, eax
push    [ebp+arg_10]
push    edi
call    sub_406394
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
pop     ebp
retn    1ch
mov     edx, ecx
cmp     dword ptr [edx+64h], 0
jnz     short loc_406742
xor     eax, eax
jmp     short locret_40677f
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
or      ecx, 0ffffffffh
xor     eax, eax
mov     dword ptr [edx+18h], 4
lea     ebx, [edx+24h]
repne scasb
not     ecx
sub     edi, ecx
add     edx, 0ch
mov     eax, ecx
mov     esi, edi
mov     edi, ebx
push    edx
shr     ecx, 2
rep movsd
mov     ecx, eax
push    1
and     ecx, 3
rep movsb
call    ds:shell_notifyicona
pop     edi
pop     esi
pop     ebx
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     eax, off_42b8a0
push    esi
push    dword ptr [ebp+8]
mov     esi, ecx
lea     ecx, [ebp-4]
mov     [ebp-4], eax
call    ?loadstringa@cstring@@qaehi@z
push    dword ptr [ebp-4]
mov     ecx, esi
call    sub_406736
lea     ecx, [ebp-4]
mov     esi, eax
call    sub_41c5b1
mov     eax, esi
pop     esi
leave
retn    4
push    esi
mov     esi, ecx
cmp     dword ptr [esi+64h], 0
jnz     short loc_4067c4
xor     eax, eax
jmp     short loc_4067e6
lea     ecx, [esi+70h]
call    sub_4063e7
mov     eax, [esp+4+arg_0]
mov     dword ptr [esi+18h], 2
mov     [esi+20h], eax
add     esi, 0ch
push    esi
push    1
call    ds:shell_notifyicona
pop     esi
retn    4
push    esi
mov     esi, ecx
push    dword ptr [esp+8]
call    sub_4069c2
pop     ecx
push    eax
mov     ecx, esi
call    sub_4067b7
pop     esi
retn    4
movzx   eax, word ptr [esp+4]
push    esi
mov     esi, ecx
push    eax
call    sub_4069c2
pop     ecx
push    eax
mov     ecx, esi
call    sub_4067b7
pop     esi
retn    4
push    esi
mov     esi, ecx
push    dword ptr [esp+8]
push    0
call    ds:loadicona
push    eax
mov     ecx, esi
call    sub_4067b7
pop     esi
retn    4
movzx   eax, word ptr [esp+4]
push    esi
push    eax
mov     esi, ecx
push    0
call    ds:loadicona
push    eax
mov     ecx, esi
call    sub_4067b7
pop     esi
retn    4
push    esi
push    edi
mov     edi, [esp+0ch]
mov     esi, ecx
push    dword ptr [edi]
call    sub_4067b7
test    eax, eax
jz      short loc_40687d
push    dword ptr [esp+14h]
lea     ecx, [esi+70h]
push    dword ptr [esp+14h]
push    edi
call    sub_406394
push    1
pop     eax
pop     edi
pop     esi
retn    0ch
cmp     dword ptr [ecx+64h], 0
jnz     short loc_40688c
xor     eax, eax
jmp     short locret_4068ad
mov     eax, [esp+4]
test    eax, eax
mov     [ecx+6ch], eax
jz      short loc_40689a
mov     eax, [eax+1ch]
and     dword ptr [ecx+18h], 0
mov     [ecx+10h], eax
add     ecx, 0ch
push    ecx
push    1
call    ds:shell_notifyicona
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     eax, off_42b8a0
cmp     dword ptr [ecx+64h], 0
mov     [ebp-4], eax
jz      short loc_4068ce
add     ecx, 24h
push    ecx
lea     ecx, [ebp-4]
call    ??4cstring@@qaeabv0@pbd@z
mov     ecx, [ebp+8]
lea     eax, [ebp-4]
push    eax
call    sub_41c326
lea     ecx, [ebp-4]
call    sub_41c5b1
mov     eax, [ebp+8]
leave
retn    4
xor     eax, eax
cmp     [ecx+64h], eax
jz      short locret_40690b
cmp     [ecx+88h], eax
jz      short loc_406908
lea     eax, [ecx+70h]
mov     ecx, [ecx+90h]
mov     eax, [eax+14h]
mov     eax, [eax+ecx*4]
retn
mov     eax, [ecx+20h]
retn
mov     eax, [ecx+6ch]
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
cmp     eax, [esi+14h]
jz      short loc_406933
xor     eax, eax
jmp     loc_4069bd
push    ebx
xor     ebx, ebx
push    edi
push    ebx
push    dword ptr [esi+98h]
call    ds:getsubmenu
push    eax
call    sub_41d4c2
cmp     [ebp+arg_4], 205h
mov     edi, eax
jnz     short loc_40698b
lea     eax, [ebp+point]
push    eax
call    ds:getcursorpos
push    dword ptr [esi+10h]
call    ds:setforegroundwindow
push    ebx
push    dword ptr [esi+10h]
push    ebx
push    [ebp+point.y]
push    [ebp+point.x]
push    ebx
push    dword ptr [edi+4]
call    ds:trackpopupmenu
push    ebx
push    ebx
push    ebx
push    dword ptr [esi+10h]
call    ds:postmessagea
jmp     short loc_4069b8
cmp     [ebp+arg_4], 203h
jnz     short loc_4069b8
mov     eax, [esi+4]
cmp     eax, 7d0h
jz      short loc_4069b8
push    eax
push    dword ptr [edi+4]
call    ds:getmenuitemid
push    ebx
push    eax
push    111h
push    dword ptr [esi+10h]
call    ds:sendmessagea
push    1
pop     eax
pop     edi
pop     ebx
pop     esi
leave
retn    8
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+0ch]
push    0
push    10h
push    10h
push    1
push    [esp+10h+name]
push    eax
call    ds:loadimagea
test    eax, eax
jnz     short locret_4069f9
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
push    [esp+name]
mov     eax, [eax+0ch]
push    eax
call    ds:loadicona
retn
movzx   eax, word ptr [esp+4]
push    eax
call    sub_4069c2
pop     ecx
retn
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_424138
call    sub_4063e7
mov     ecx, esi
call    sub_405793
test    [esp+4+arg_0], 1
jz      short loc_406a2a
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
call    sub_406526
test    [esp+4+arg_0], 1
jz      short loc_406a46
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset ??_7cmenu@@6b@
call    sub_41d54c
test    [esp+4+arg_0], 1
jz      short loc_406a68
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
movzx   ecx, [esp+4+arg_0]
mov     eax, [eax+0ch]
push    ecx
push    eax
call    ds:loadmenua
push    eax
mov     ecx, esi
call    sub_41d4f5
pop     esi
retn    4
push    ebx
push    ebp
push    esi
push    edi
mov     edi, [esp+10h+arg_0]
mov     ecx, edi
mov     eax, [edi]
call    dword ptr [eax+0ch]
push    10h
mov     ebp, eax
call    _malloc
mov     esi, eax
xor     ebx, ebx
cmp     esi, ebx
pop     ecx
jnz     short loc_406abc
push    ebx
push    ebx
push    offset aerrorallocatin
jmp     short loc_406b12
mov     eax, [edi]
push    0ch
push    esi
mov     ecx, edi
call    dword ptr [eax+34h]
cmp     dword ptr [esi], 46464952h
jz      short loc_406ade
push    ebx
push    ebx
push    offset awrongwaveforma
call    sub_4205e1
xor     edi, edi
jmp     short loc_406b44
cmp     dword ptr [esi+8], 45564157h
jz      short loc_406af0
push    ebx
push    ebx
push    offset awrongwaveforma_0
jmp     short loc_406ad5
mov     eax, [esi+4]
add     eax, 8
push    eax
call    _malloc
cmp     eax, ebx
pop     ecx
mov     [esi+0ch], eax
jnz     short loc_406b1b
push    esi
call    _free
pop     ecx
push    ebx
push    ebx
push    offset aerrorallocatin_0
call    sub_4205e1
xor     eax, eax
jmp     short loc_406b4d
mov     eax, [edi]
push    ebx
push    ebp
mov     ecx, edi
call    dword ptr [eax+28h]
cmp     eax, ebp
jnz     short loc_406ada
mov     ecx, [esi+4]
mov     eax, [edi]
add     ecx, 8
push    ecx
mov     ecx, edi
push    dword ptr [esi+0ch]
call    dword ptr [eax+34h]
push    dword ptr [esi+0ch]
call    ds:lockresource
mov     edi, eax
push    esi
call    _free
pop     ecx
mov     eax, edi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
push    esi
mov     esi, ecx
call    sub_418f4c
lea     ecx, [esi+0ba0h]
mov     dword ptr [esi], offset ??_7cstatic@@6b@
call    sub_404750
lea     ecx, [esi+0be0h]
call    sub_404750
lea     ecx, [esi+0c20h]
call    sub_404750
lea     ecx, [esi+0c60h]
call    sub_4049a1
mov     dword ptr [esi], offset off_4241a8
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ecx
lea     ecx, [esi+0c60h]
mov     dword ptr [esi], offset off_4241a8
call    sub_4049ae
lea     ecx, [esi+0c20h]
call    sub_404769
lea     ecx, [esi+0be0h]
call    sub_404769
lea     ecx, [esi+0ba0h]
call    sub_404769
mov     ecx, esi
call    sub_420b23
pop     esi
retn
mov     eax, offset off_424158
retn
push    ebp
mov     ebp, esp
sub     esp, 54h
push    esi
mov     esi, ecx
push    esi
lea     ecx, [ebp-54h]
call    ??0cpaintdc@@qae@pavcwnd@@@z
push    1000h
lea     eax, [ebp-54h]
push    dword ptr [esi+44h]
lea     ecx, [esi+0c60h]
neg     eax
push    dword ptr [esi+40h]
sbb     eax, eax
and     eax, [ebp-50h]
push    0
push    0
push    eax
lea     eax, [esi+0be0h]
push    eax
call    sub_404a38
lea     ecx, [ebp-54h]
call    ??1cpaintdc@@uae@xz
pop     esi
leave
retn
mov     ecx, [esp+dwuser]
cmp     dword ptr [ecx+3ch], 0
jz      short loc_406c36
cmp     dword_42b260, 0
jz      short locret_406c3b
call    sub_406c3e
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, ecx
push    edi
push    0fffffffeh
mov     ecx, [esi+44h]
pop     edi
mov     eax, ecx
cdq
idiv    edi
mov     [ebp+var_8], eax
mov     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
cmp     [ebp+var_8], eax
jge     loc_406d45
mov     ecx, [esi+40h]
push    0fffffffeh
mov     eax, ecx
pop     edi
cdq
idiv    edi
mov     [ebp+var_4], eax
mov     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
cmp     [ebp+var_4], eax
mov     [ebp+var_c], eax
jge     loc_406d3a
fild    [ebp+var_8]
mov     eax, [esi+0b94h]
fild    [ebp+var_4]
lea     edi, [esi+eax*4+5f4h]
lea     ebx, [esi+eax*4+54h]
fld     st(1)
fmul    dword ptr [edi]
fld     st(1)
fmul    dword ptr [ebx]
faddp   st(1), st
fmul    dword ptr [esi+0b98h]
call    __ftol
add     eax, 10h
cdq
fmul    dword ptr [edi]
idiv    dword ptr [esi+0bdch]
fld     st(1)
fmul    dword ptr [ebx]
fsubp   st(1), st
fmul    dword ptr [esi+0b98h]
mov     eax, edx
cdq
mov     ecx, eax
xor     ecx, edx
sub     ecx, edx
imul    ecx, [esi+0bd8h]
mov     [ebp+var_10], ecx
call    __ftol
add     eax, 10h
mov     ecx, [ebp+var_10]
cdq
idiv    dword ptr [esi+0bdch]
mov     edi, [esi+0ba4h]
mov     eax, edx
cdq
xor     eax, edx
sub     eax, edx
add     ecx, eax
mov     eax, [esi+44h]
cdq
sub     eax, edx
mov     edx, [esi+0be4h]
sar     eax, 1
add     eax, [ebp+var_8]
mov     ecx, [edi+ecx*4]
imul    eax, [esi+40h]
add     eax, [ebp+var_c]
add     eax, [ebp+var_4]
inc     [ebp+var_4]
mov     [edx+eax*4], ecx
mov     eax, [esi+40h]
cdq
sub     eax, edx
sar     eax, 1
cmp     [ebp+var_4], eax
mov     [ebp+var_c], eax
jl      loc_406c8b
fstp    st
inc     [ebp+var_8]
mov     eax, [esi+44h]
jmp     loc_406c59
mov     ecx, [esi+0c70h]
lea     eax, [esi+0b94h]
add     [eax], ecx
mov     ecx, [eax]
cmp     ecx, 168h
jl      short loc_406d60
and     dword ptr [eax], 0
fld     dword ptr [esi+0b98h]
fadd    dword ptr [esi+0b9ch]
lea     eax, [esi+0b98h]
fcom    dword ptr [esi+0c78h]
fst     dword ptr [eax]
fnstsw  ax
sahf
jb      short loc_406d91
fstp    st
fld     dword ptr [esi+0c7ch]
fchs
fstp    dword ptr [esi+0b9ch]
jmp     short loc_406da8
fcomp   ds:dbl_424260
fnstsw  ax
sahf
ja      short loc_406da8
mov     eax, [esi+0c7ch]
mov     [esi+0b9ch], eax
cmp     dword ptr [esi+4ch], 0
jz      short loc_406dd0
push    dword ptr [esi+0c74h]
lea     edi, [esi+0c20h]
lea     ebx, [esi+0be0h]
push    edi
mov     ecx, ebx
call    sub_4048f9
push    edi
mov     ecx, ebx
call    sub_40486d
push    105h
push    0
push    0
push    dword ptr [esi+1ch]
call    ds:redrawwindow
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
fild    [ebp+arg_14]
mov     eax, [ebp+arg_1c]
push    ebx
push    esi
mov     esi, ecx
fdivr   ds:flt_424274
mov     [esi+3ch], eax
mov     eax, [ebp+arg_18]
test    eax, eax
push    edi
fstp    dword ptr [esi+0c78h]
jz      short loc_406e21
lea     eax, [eax+eax*4]
shl     eax, 1
mov     [ebp+arg_1c], eax
fild    [ebp+arg_1c]
fdivr   ds:flt_424270
jmp     short loc_406e23
fldz
mov     eax, [ebp+arg_c]
mov     ebx, [ebp+arg_0]
fstp    dword ptr [esi+0c7ch]
mov     [esi+0c70h], eax
mov     eax, [ebp+arg_10]
mov     [esi+0c74h], eax
lea     eax, [ebp+pv]
push    eax
push    18h
push    dword ptr [ebx+4]
call    ds:getobjecta
lea     eax, [ebp+rect]
push    eax
push    dword ptr [esi+1ch]
call    ds:getclientrect
mov     ecx, [ebp+rect.bottom]
mov     eax, [ebp+rect.right]
sub     ecx, [ebp+rect.top]
sub     eax, [ebp+rect.left]
mov     [esi+44h], ecx
push    ecx
push    eax
lea     ecx, [esi+0be0h]
mov     [esi+40h], eax
call    sub_404774
push    dword ptr [esi+44h]
lea     ecx, [esi+0c20h]
push    dword ptr [esi+40h]
call    sub_404774
push    [ebp+var_20]
lea     edi, [esi+0ba0h]
mov     ecx, edi
push    [ebp+var_24]
call    sub_404774
and     [ebp+arg_1c], 0
lea     eax, [esi+5f4h]
fild    [ebp+arg_1c]
inc     [ebp+arg_1c]
fmul    ds:dbl_424268
fld     st
fcos
fstp    dword ptr [eax-5a0h]
fsin
fstp    dword ptr [eax]
add     eax, 4
cmp     [ebp+arg_1c], 168h
jl      short loc_406ea7
mov     eax, [ebp+arg_8]
push    dword ptr [esi+1ch]
and     dword ptr [esi+48h], 0
mov     [esi+0b94h], eax
mov     eax, [esi+0c78h]
mov     dword ptr [esi+4ch], 1
mov     [esi+0b98h], eax
mov     eax, [esi+0c7ch]
mov     [esi+0b9ch], eax
call    ds:getdc
push    eax
call    sub_41f423
push    ebx
push    eax
mov     ecx, edi
call    sub_404838
lea     ecx, [esi+0c60h]
call    sub_4049c2
mov     eax, [ebp+arg_4]
push    1
push    esi
push    offset sub_406c23
lea     eax, [eax+eax*4]
push    3ch
shl     eax, 1
push    eax
call    ds:timesetevent
mov     [esi+50h], eax
pop     edi
pop     esi
pop     ebx
leave
retn    20h
push    esi
mov     esi, ecx
call    ?ondestroy@cwnd@@iaexxz
mov     eax, [esi+50h]
test    eax, eax
jz      short loc_406f55
push    eax
call    ds:timekillevent
lea     ecx, [esi+0be0h]
call    sub_4047e9
lea     ecx, [esi+0ba0h]
call    sub_4047e9
lea     ecx, [esi+0c60h]
call    sub_4049cf
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_406b96
test    [esp+4+arg_0], 1
jz      short loc_406f8e
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    ebx
push    esi
push    edi
mov     esi, ecx
push    [esp+0ch+arg_0]
push    89h
call    ??0cdialog@@qae@ipavcwnd@@@z
lea     edi, [esi+5ch]
mov     ecx, edi
call    sub_418f4c
mov     ebx, offset ??_7cscrollbar@@6b@
mov     [edi], ebx
lea     edi, [esi+98h]
mov     ecx, edi
call    sub_418f4c
lea     ecx, [esi+0f0h]
mov     [edi], ebx
call    ??0ctooltipctrl@@qae@xz
mov     dword ptr [esi], offset off_4242e0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
push    esi
mov     esi, ecx
lea     eax, [esi+5ch]
push    eax
push    3eeh
push    [esp+0ch+arg_0]
call    ?ddx_control@@ygxpavcdataexchange@@haavcwnd@@@z
add     esi, 98h
push    esi
push    3ech
push    [esp+0ch+arg_0]
call    ?ddx_control@@ygxpavcdataexchange@@haavcwnd@@@z
pop     esi
retn    4
mov     eax, offset off_424278
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
and     dword ptr [ebp-8], 0
push    ebx
push    esi
push    edi
mov     esi, ecx
push    2
push    dword ptr [esi+0b4h]
call    ds:getscrollpos
mov     [ebp-4], eax
lea     eax, [ebp-10h]
push    eax
lea     eax, [ebp-0ch]
push    eax
push    2
push    dword ptr [esi+0b4h]
call    ds:getscrollrange
mov     eax, [ebp+8]
sub     eax, 0
jz      short loc_407083
dec     eax
jz      short loc_40707e
dec     eax
jz      short loc_407078
dec     eax
jz      short loc_407072
dec     eax
dec     eax
jz      short loc_40706d
dec     eax
jz      short loc_40708e
dec     eax
jnz     short loc_407086
mov     eax, [ebp-10h]
mov     [ebp-4], eax
jmp     short loc_407086
mov     eax, [ebp+0ch]
jmp     short loc_407068
add     dword ptr [ebp-4], 0ah
jmp     short loc_407086
sub     dword ptr [ebp-4], 0ah
jmp     short loc_407086
inc     dword ptr [ebp-4]
jmp     short loc_407086
dec     dword ptr [ebp-4]
mov     eax, [ebp-4]
cmp     eax, [ebp-0ch]
jge     short loc_407094
mov     eax, [ebp-0ch]
mov     [ebp-4], eax
mov     eax, [ebp-10h]
cmp     [ebp-4], eax
jle     short loc_40709f
mov     [ebp-4], eax
mov     edi, [esi+0d8h]
mov     ebx, [esi+0dch]
cmp     edi, ebx
mov     [ebp-14h], edi
jge     short loc_4070c8
fild    dword ptr [ebp-4]
fmul    dword ptr [esi+0ech]
fiadd   dword ptr [ebp-14h]
call    __ftol
mov     [ebp-8], eax
cmp     edi, ebx
jle     short loc_4070e0
fild    dword ptr [ebp-14h]
fild    dword ptr [ebp-4]
fmul    dword ptr [esi+0ech]
fsubp   st(1), st
call    __ftol
mov     [ebp-8], eax
mov     eax, [ebp-4]
cmp     eax, [ebp-0ch]
jnz     short loc_4070eb
mov     [ebp-8], edi
cmp     eax, [ebp-10h]
jnz     short loc_4070f3
mov     [ebp-8], ebx
push    dword ptr [ebp-8]
mov     ecx, esi
call    sub_4073e7
push    1
push    dword ptr [ebp-4]
push    2
push    dword ptr [esi+0b4h]
call    ds:setscrollpos
push    dword ptr [ebp+10h]
mov     ecx, esi
push    dword ptr [ebp+0ch]
push    dword ptr [ebp+8]
call    sub_41afb7
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 14h
and     dword ptr [ebp-8], 0
push    ebx
push    esi
push    edi
mov     esi, ecx
push    2
push    dword ptr [esi+78h]
call    ds:getscrollpos
mov     [ebp-4], eax
lea     eax, [ebp-10h]
push    eax
lea     eax, [ebp-0ch]
push    eax
push    2
push    dword ptr [esi+78h]
call    ds:getscrollrange
mov     eax, [ebp+8]
sub     eax, 0
jz      short loc_407190
dec     eax
jz      short loc_40718b
dec     eax
jz      short loc_407185
dec     eax
jz      short loc_40717f
dec     eax
dec     eax
jz      short loc_40717a
dec     eax
jz      short loc_40719b
dec     eax
jnz     short loc_407193
mov     eax, [ebp-10h]
mov     [ebp-4], eax
jmp     short loc_407193
mov     eax, [ebp+0ch]
jmp     short loc_407175
add     dword ptr [ebp-4], 0ah
jmp     short loc_407193
sub     dword ptr [ebp-4], 0ah
jmp     short loc_407193
inc     dword ptr [ebp-4]
jmp     short loc_407193
dec     dword ptr [ebp-4]
mov     eax, [ebp-4]
cmp     eax, [ebp-0ch]
jge     short loc_4071a1
mov     eax, [ebp-0ch]
mov     [ebp-4], eax
mov     eax, [ebp-10h]
cmp     [ebp-4], eax
jle     short loc_4071ac
mov     [ebp-4], eax
mov     edi, [esi+0d8h]
mov     ebx, [esi+0dch]
cmp     edi, ebx
mov     [ebp-14h], edi
jge     short loc_4071d5
fild    dword ptr [ebp-4]
fmul    dword ptr [esi+0ech]
fiadd   dword ptr [ebp-14h]
call    __ftol
mov     [ebp-8], eax
cmp     edi, ebx
jle     short loc_4071ed
fild    dword ptr [ebp-14h]
fild    dword ptr [ebp-4]
fmul    dword ptr [esi+0ech]
fsubp   st(1), st
call    __ftol
mov     [ebp-8], eax
mov     eax, [ebp-4]
cmp     eax, [ebp-0ch]
jnz     short loc_4071f8
mov     [ebp-8], edi
cmp     eax, [ebp-10h]
jnz     short loc_407200
mov     [ebp-8], ebx
push    dword ptr [ebp-8]
mov     ecx, esi
call    sub_4073e7
push    1
push    dword ptr [ebp-4]
push    2
push    dword ptr [esi+78h]
call    ds:setscrollpos
push    dword ptr [ebp+10h]
mov     ecx, esi
push    dword ptr [ebp+0ch]
push    dword ptr [ebp+8]
call    sub_41afb7
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
push    ebx
push    esi
push    edi
mov     esi, ecx
call    ?oninitdialog@cdialog@@uaehxz
xor     ebx, ebx
cmp     esi, ebx
jnz     short loc_407249
mov     hdlg, ebx
jmp     short loc_407251
mov     eax, [esi+1ch]
mov     hdlg, eax
mov     al, byte_42d2e0
lea     ecx, [esi+0d8h]
mov     [esi+0d4h], al
mov     al, byte_42d2d1
mov     [esi+0e4h], al
mov     eax, dword_42d2dc
mov     [ecx], eax
mov     edx, dword_42d2d8
lea     eax, [esi+0dch]
mov     [eax], edx
mov     eax, [eax]
mov     edx, dword_42d2d4
sub     eax, [ecx]
mov     [esi+0e0h], edx
mov     ecx, 7530h
cdq
xor     eax, edx
sub     eax, edx
mov     [esi+0e8h], eax
cmp     byte_42d2d0, bl
jnz     short loc_407320
cmp     eax, ecx
push    1
jge     short loc_4072c4
push    eax
push    ebx
push    2
push    dword ptr [esi+0b4h]
call    ds:setscrollrange
fld1
jmp     short loc_4072e0
push    ecx
push    ebx
push    2
push    dword ptr [esi+0b4h]
call    ds:setscrollrange
fild    dword ptr [esi+0e8h]
fmul    ds:dbl_4243b0
fstp    dword ptr [esi+0ech]
push    1
push    ebx
push    2
push    dword ptr [esi+0b4h]
call    ds:setscrollpos
lea     edi, [esi+98h]
push    1
mov     ecx, edi
call    ?showwindow@cwnd@@qaehh@z
push    5
mov     ecx, edi
call    sub_41bcd7
push    ebx
push    2
push    dword ptr [esi+0b4h]
call    ds:enablescrollbar
jmp     short loc_407385
cmp     eax, ecx
push    1
jge     short loc_407337
push    eax
push    ebx
push    2
push    dword ptr [esi+78h]
call    ds:setscrollrange
fld1
jmp     short loc_407350
push    ecx
push    ebx
push    2
push    dword ptr [esi+78h]
call    ds:setscrollrange
fild    dword ptr [esi+0e8h]
fmul    ds:dbl_4243b0
fstp    dword ptr [esi+0ech]
push    1
push    ebx
push    2
push    dword ptr [esi+78h]
call    ds:setscrollpos
lea     edi, [esi+5ch]
push    1
mov     ecx, edi
call    ?showwindow@cwnd@@qaehh@z
push    ebx
push    2
push    dword ptr [esi+78h]
call    ds:enablescrollbar
push    5
mov     ecx, edi
call    sub_41bcd7
lea     edi, [esi+0f0h]
push    ebx
push    esi
mov     ecx, edi
call    sub_41839e
push    ebx
push    1
push    401h
push    dword ptr [esi+10ch]
call    ds:sendmessagea
cmp     byte_42d2d0, bl
mov     eax, dword_42d2f4
jnz     short loc_4073c4
cmp     [eax-8], ebx
jz      short loc_4073e0
push    ebx
push    ebx
push    eax
push    3ech
jmp     short loc_4073d1
cmp     [eax-8], ebx
jz      short loc_4073e0
push    ebx
push    ebx
push    eax
push    3eeh
mov     ecx, esi
call    sub_41bad0
push    eax
mov     ecx, edi
call    ?addtool@ctooltipctrl@@qaehpavcwnd@@pbdpbutagrect@@i@z
push    1
pop     eax
pop     edi
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
push    ecx
mov     al, byte_42f85c
push    esi
push    edi
push    eax
mov     esi, ecx
push    offset azweipetexe
call    sub_40d3d8
pop     ecx
pop     ecx
push    eax
push    0
push    20h
call    ds:openprocess
mov     edi, eax
test    edi, edi
jz      short loc_407469
mov     al, [esi+0d4h]
xor     cl, cl
test    al, al
jnz     short loc_407420
inc     cl
cmp     al, 1
jnz     short loc_407426
mov     cl, 2
cmp     al, 2
jnz     short loc_40742c
mov     cl, 4
cmp     al, 3
jnz     short loc_40743f
mov     cl, 4
jnz     short loc_40743f
fild    [ebp+buffer]
fstp    [ebp+buffer]
mov     eax, [ebp+buffer]
jmp     short loc_407442
mov     eax, [ebp+buffer]
mov     [ebp+buffer], eax
lea     eax, [ebp+numberofbyteswritten]
push    eax
and     [ebp+numberofbyteswritten], 0
movzx   eax, cl
push    eax
lea     eax, [ebp+buffer]
push    eax
push    dword ptr [esi+0e0h]
push    edi
call    ds:writeprocessmemory
push    edi
call    ds:closehandle
pop     edi
pop     esi
leave
retn    4
push    esi
mov     esi, ecx
push    [esp+4+lparam]
push    0
push    407h
push    dword ptr [esi+10ch]
call    ds:sendmessagea
push    [esp+4+lparam]
mov     ecx, esi
call    ?pretranslatemessage@cdialog@@uaehpautagmsg@@@z
pop     esi
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ecx
cmp     dword ptr [ebp+8], 3
push    ebx
push    esi
push    edi
mov     esi, ecx
jnz     loc_407697
mov     al, byte_42f85c
push    eax
push    offset azweipetexe
call    sub_40d3d8
pop     ecx
xor     edi, edi
pop     ecx
push    eax
push    edi
push    10h
call    ds:openprocess
cmp     eax, edi
jz      loc_407697
mov     cl, [esi+0d4h]
xor     dl, dl
test    cl, cl
mov     [ebp+8], edi
jnz     short loc_4074e3
inc     dl
push    2
cmp     cl, 1
pop     ebx
jnz     short loc_4074ed
mov     dl, bl
cmp     cl, bl
jnz     short loc_4074f3
mov     dl, 4
cmp     cl, 3
jnz     short loc_4074fa
mov     dl, 4
lea     ecx, [ebp-4]
mov     [ebp-4], edi
push    ecx
movzx   ecx, dl
push    ecx
lea     ecx, [ebp+8]
push    ecx
push    dword ptr [esi+0e0h]
push    eax
call    ds:readprocessmemory
cmp     byte ptr [esi+0d4h], 3
jnz     short loc_40752c
fld     dword ptr [ebp+8]
call    __ftol
mov     [ebp+8], eax
jmp     short loc_40752f
mov     eax, [ebp+8]
cmp     byte_42d2d0, 0
push    1
jnz     loc_4075f6
sub     eax, [esi+0d8h]
mov     [ebp-8], eax
fild    dword ptr [ebp-8]
fdiv    dword ptr [esi+0ech]
call    __ftol
cdq
xor     eax, edx
mov     edi, ds:setscrollpos
sub     eax, edx
push    eax
push    ebx
push    dword ptr [esi+0b4h]
call    edi
mov     ecx, [esi+0e8h]
mov     eax, 7530h
cmp     ecx, eax
jge     short loc_4075ae
mov     edx, [esi+0dch]
cmp     [esi+0d8h], edx
jge     short loc_4075a9
cmp     [ebp+8], edx
jl      short loc_407598
push    1
push    ecx
push    ebx
push    dword ptr [esi+0b4h]
call    edi
mov     eax, [ebp+8]
cmp     eax, [esi+0d8h]
jg      loc_407697
jmp     short loc_4075e6
cmp     [ebp+8], edx
jmp     short loc_4075c9
mov     ecx, [esi+0dch]
cmp     [esi+0d8h], ecx
jge     short loc_4075c6
cmp     [ebp+8], ecx
jl      short loc_407598
push    1
push    eax
jmp     short loc_40758f
cmp     [ebp+8], ecx
jg      short loc_4075d7
push    1
push    eax
push    ebx
push    dword ptr [esi+0b4h]
call    edi
mov     eax, [ebp+8]
cmp     eax, [esi+0d8h]
jl      loc_407697
push    1
push    0
push    ebx
push    dword ptr [esi+0b4h]
jmp     loc_407695
sub     eax, [esi+0d8h]
mov     [ebp-8], eax
fild    dword ptr [ebp-8]
fdiv    dword ptr [esi+0ech]
call    __ftol
cdq
xor     eax, edx
mov     edi, ds:setscrollpos
sub     eax, edx
push    eax
push    ebx
push    dword ptr [esi+78h]
call    edi
mov     ecx, [esi+0e8h]
mov     eax, 7530h
cmp     ecx, eax
jge     short loc_40764b
mov     edx, [esi+0dch]
cmp     [esi+0d8h], edx
jge     short loc_407646
cmp     [ebp+8], edx
jl      short loc_407667
push    1
push    ecx
jmp     short loc_407661
cmp     [ebp+8], edx
jmp     short loc_407677
mov     ecx, [esi+0dch]
cmp     [esi+0d8h], ecx
jge     short loc_407674
cmp     [ebp+8], ecx
jl      short loc_407667
push    1
push    eax
push    ebx
push    dword ptr [esi+78h]
call    edi
mov     eax, [ebp+8]
cmp     eax, [esi+0d8h]
jg      short loc_407697
jmp     short loc_40768d
cmp     [ebp+8], ecx
jg      short loc_407682
push    1
push    eax
push    ebx
push    dword ptr [esi+78h]
call    edi
mov     eax, [ebp+8]
cmp     eax, [esi+0d8h]
jl      short loc_407697
push    1
push    0
push    ebx
push    dword ptr [esi+78h]
call    edi
mov     ecx, esi
call    sub_4192d4
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    esi
mov     esi, ecx
call    sub_4076c1
test    [esp+4+arg_0], 1
jz      short loc_4076bb
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
lea     ecx, [esi+0f0h]
call    ??1ctooltipctrl@@uae@xz
lea     ecx, [esi+98h]
call    sub_420c1e
lea     ecx, [esi+5ch]
call    sub_420c1e
mov     ecx, esi
call    sub_41cb2f
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_420c1e
test    [esp+4+arg_0], 1
jz      short loc_407701
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
call    sub_418f4c
and     dword ptr [esi+40h], 0
mov     dword ptr [esi+3ch], offset off_423818
mov     dword ptr [esi], offset off_424420
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ecx
lea     ecx, [esi+3ch]
mov     dword ptr [esi], offset off_424420
and     dword_42d1f0, 0
mov     dword ptr [ecx], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
mov     ecx, esi
call    ??1cwnd@@uae@xz
pop     esi
retn
mov     eax, offset off_4243b8
retn
mov     eax, [esp+arg_0]
mov     dword_42d1f4, eax
retn
cmp     dword_42d1f4, 0
jz      short locret_4077b9
cmp     dword_42d1f0, 0
jnz     short locret_4077b9
push    44h
call    sub_41c2f2
test    eax, eax
pop     ecx
jz      short loc_407784
mov     ecx, eax
call    sub_407707
mov     ecx, eax
jmp     short loc_407786
xor     ecx, ecx
push    [esp+arg_0]
mov     dword_42d1f0, ecx
call    sub_407818
test    eax, eax
jnz     short loc_4077ab
mov     ecx, dword_42d1f0
test    ecx, ecx
jz      short locret_4077b9
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
retn
mov     eax, dword_42d1f0
push    dword ptr [eax+1ch]
call    ds:updatewindow
retn
mov     ecx, dword_42d1f0
test    ecx, ecx
jz      short loc_407815
cmp     dword_42b268, 1
jnz     short loc_407815
mov     eax, [esp+arg_0]
mov     eax, [eax+4]
cmp     eax, 100h
jz      short loc_40780c
cmp     eax, 104h
jz      short loc_40780c
cmp     eax, 201h
jz      short loc_40780c
cmp     eax, 204h
jz      short loc_40780c
cmp     eax, 207h
jz      short loc_40780c
cmp     eax, 0a1h
jz      short loc_40780c
cmp     eax, 0a4h
jz      short loc_40780c
cmp     eax, 0a7h
jnz     short loc_407815
call    sub_40788f
push    1
pop     eax
retn
xor     eax, eax
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    edi
mov     edi, ecx
push    ho
lea     ecx, [edi+3ch]
call    sub_41fbc4
test    eax, eax
jz      short loc_40788a
push    ebx
lea     eax, [ebp+pv]
push    esi
push    eax
push    18h
push    dword ptr [edi+40h]
call    ds:getobjecta
mov     eax, [ebp+arg_0]
xor     esi, esi
cmp     eax, esi
jnz     short loc_407851
xor     ebx, ebx
jmp     short loc_407854
mov     ebx, [eax+1ch]
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
push    7f00h
push    esi
call    ds:loadcursora
push    esi
push    esi
push    ebx
push    [ebp+var_10]
push    [ebp+var_14]
push    esi
push    esi
push    90000000h
push    esi
push    esi
push    esi
push    eax
push    esi
call    ?afxregisterwndclass@@ygpbdipauhicon__@@pauhbrush__@@0@z
push    eax
push    esi
mov     ecx, edi
call    sub_4198f5
pop     esi
pop     ebx
pop     edi
leave
retn    4
push    esi
mov     esi, ecx
mov     eax, [esi]
call    dword ptr [eax+58h]
call    sub_4079ca
push    dword ptr [eax+1ch]
call    ds:updatewindow
lea     ecx, [esi+3ch]
call    sub_41fc1b
push    ho
call    ds:deleteobject
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_4192d4
cmp     eax, 0ffffffffh
jnz     short loc_4078d8
or      eax, eax
jmp     short loc_4078fc
push    0
mov     ecx, esi
call    ?centerwindow@cwnd@@qaexpav1@@z
mov     eax, dword_42b264
push    0
imul    eax, 3e8h
push    eax
push    4
push    dword ptr [esi+1ch]
call    ds:settimer
xor     eax, eax
pop     esi
retn    4
push    ebp
mov     ebp, esp
sub     esp, 7ch
push    esi
mov     esi, ecx
push    esi
lea     ecx, [ebp-7ch]
call    ??0cpaintdc@@qae@pavcwnd@@@z
lea     ecx, [ebp-10h]
call    ??0cdc@@qae@xz_0
lea     eax, [ebp-7ch]
neg     eax
sbb     eax, eax
and     eax, [ebp-78h]
push    eax
call    ds:createcompatibledc
push    eax
lea     ecx, [ebp-10h]
call    sub_41f438
test    eax, eax
jz      short loc_407993
lea     eax, [ebp-28h]
push    eax
push    18h
push    dword ptr [esi+40h]
call    ds:getobjecta
lea     eax, [esi+3ch]
test    eax, eax
jz      short loc_407951
mov     eax, [eax+4]
push    eax
push    dword ptr [ebp-0ch]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
mov     esi, eax
lea     eax, [ebp-10h]
neg     eax
sbb     eax, eax
push    0cc0020h
and     eax, [ebp-0ch]
push    0
push    0
push    eax
push    dword ptr [ebp-20h]
push    dword ptr [ebp-24h]
push    0
push    0
push    dword ptr [ebp-78h]
call    ds:bitblt
test    esi, esi
jz      short loc_40798a
mov     esi, [esi+4]
push    esi
push    dword ptr [ebp-0ch]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
lea     ecx, [ebp-10h]
call    sub_41f4b6
lea     ecx, [ebp-7ch]
call    ??1cpaintdc@@uae@xz
pop     esi
leave
retn
call    sub_40788f
retn    4
push    esi
mov     esi, ecx
call    sub_407724
test    [esp+4+arg_0], 1
jz      short loc_4079c4
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
call    ?afxgetthread@@ygpavcwinthread@@xz
test    eax, eax
jz      short loc_4079db
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+74h]
retn
xor     eax, eax
retn
push    esi
push    edi
mov     esi, ecx
call    sub_418f4c
push    0ah
lea     ecx, [esi+2fe4h]
pop     edi
mov     dword ptr [esi], offset ??_7cstatic@@6b@
push    edi
call    sub_4186d8
mov     eax, off_42b8a0
push    1
mov     [esi+3000h], eax
xor     eax, eax
movzx   ecx, al
mov     [esi+5ch], ecx
xor     ecx, ecx
mov     [esi+74h], eax
mov     cl, [esi+75h]
mov     [esi+78h], eax
mov     [esi+64h], eax
movzx   ecx, cl
mov     [esi+50h], eax
mov     [esi+54h], eax
pop     eax
mov     [esi+48h], edi
mov     [esi+4ch], eax
mov     [esi+3ch], eax
mov     [esi+44h], edi
mov     dword ptr [esi], offset off_424528
mov     dword ptr [esi+70h], 0c8c8c8h
mov     dword ptr [esi+6ch], 0ffffffh
mov     dword ptr [esi+40h], 646464h
mov     dword ptr [esi+7ch], 32h
mov     [esi+60h], ecx
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
lea     ecx, [esi+3000h]
mov     dword ptr [esi], offset off_424528
call    sub_41c5b1
lea     ecx, [esi+2fe4h]
call    sub_41874c
mov     ecx, esi
call    sub_420b23
pop     esi
retn
mov     eax, offset off_4244d8
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_c]
push    ebx
push    esi
mov     esi, ecx
mov     ecx, [ebp+arg_10]
push    edi
mov     [esi+40h], ecx
mov     ecx, [ebp+arg_18]
mov     [esi+70h], eax
mov     eax, [ebp+arg_14]
mov     [esi+7ch], ecx
mov     ecx, [ebp+arg_1c]
mov     [esi+6ch], eax
mov     eax, [ebp+arg_8]
mov     [esi+44h], ecx
mov     [esi+74h], eax
movzx   ecx, al
shr     eax, 10h
movzx   eax, al
mov     [esi+5ch], ecx
xor     ecx, ecx
mov     cl, [esi+75h]
mov     [esi+64h], eax
lea     eax, [ebp+rect]
movzx   ecx, cl
push    eax
mov     [esi+60h], ecx
push    dword ptr [esi+1ch]
call    ds:getclientrect
push    6
lea     eax, [esi+2f7ch]
pop     ecx
movzx   edx, byte ptr [esi+70h]
mov     [eax-4], edx
xor     edx, edx
mov     dl, [esi+71h]
movzx   edx, dl
mov     [eax], edx
mov     edx, [esi+70h]
shr     edx, 10h
movzx   edx, dl
mov     [eax+4], edx
add     eax, 0ch
dec     ecx
jnz     short loc_407aec
and     [ebp+arg_c], 0
cmp     dword ptr [esi+7ch], 0
jle     short loc_407b5d
lea     edi, [esi+90h]
mov     ebx, [ebp+rect.right]
sub     ebx, [ebp+rect.left]
call    _rand
cdq
idiv    ebx
mov     ebx, [ebp+rect.bottom]
sub     ebx, [ebp+rect.top]
mov     [edi-4], edx
call    _rand
cdq
idiv    ebx
mov     [edi], edx
call    _rand
push    6
add     edi, 0ch
cdq
pop     ecx
idiv    ecx
inc     edx
inc     [ebp+arg_c]
mov     eax, [ebp+arg_c]
mov     [edi-8], edx
cmp     eax, [esi+7ch]
jl      short loc_407b1f
mov     ecx, esi
call    sub_407f85
push    1
mov     edi, ds:timesetevent
pop     ebx
push    ebx
push    esi
push    offset loc_407b9f
push    0ah
push    [ebp+udelay]
call    edi
push    ebx
push    esi
push    offset loc_407bb3
push    0ah
push    [ebp+arg_4]
mov     [esi+80h], eax
call    edi
mov     [esi+84h], eax
mov     [esi+78h], ebx
pop     edi
pop     esi
pop     ebx
leave
retn    20h
mov     eax, [esp-4+arg_8]
push    1
push    0
push    dword ptr [eax+1ch]
call    ds:invalidaterect
retn    14h
push    esi
mov     esi, [esp+arg_8]
mov     ecx, esi
call    sub_40819f
push    1
push    0
push    dword ptr [esi+1ch]
call    ds:invalidaterect
pop     esi
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 80h
push    ebx
push    esi
mov     ebx, ecx
push    edi
push    ebx
lea     ecx, [ebp-80h]
call    ??0cpaintdc@@qae@pavcwnd@@@z
cmp     dword ptr [ebx+78h], 0
jz      loc_407d30
lea     eax, [ebp-1ch]
push    eax
push    dword ptr [ebx+1ch]
call    ds:getclientrect
and     dword ptr [ebp-8], 0
lea     ecx, [ebp-2ch]
mov     dword ptr [ebp-0ch], offset off_423818
call    ??0cdc@@qae@xz_0
lea     eax, [ebp-80h]
neg     eax
sbb     eax, eax
and     eax, [ebp-7ch]
push    eax
call    ds:createcompatibledc
push    eax
lea     ecx, [ebp-2ch]
call    sub_41f438
mov     eax, [ebp-10h]
mov     ecx, [ebp-14h]
sub     eax, [ebp-18h]
sub     ecx, [ebp-1ch]
push    eax
push    ecx
push    dword ptr [ebp-7ch]
call    ds:createcompatiblebitmap
push    eax
lea     ecx, [ebp-0ch]
call    sub_41fbc4
lea     eax, [ebp-0ch]
neg     eax
sbb     eax, eax
and     eax, [ebp-8]
push    eax
push    dword ptr [ebp-28h]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
push    dword ptr [ebx+74h]
mov     [ebp-4], eax
lea     eax, [ebp-1ch]
lea     ecx, [ebp-2ch]
push    eax
call    ?fillsolidrect@cdc@@qaexpbutagrect@@k@z
cmp     dword ptr [ebx+4ch], 1
jnz     short loc_407c8e
sub     esp, 10h
lea     esi, [ebp-1ch]
mov     edi, esp
lea     eax, [ebp-2ch]
movsd
movsd
movsd
push    ebx
push    eax
mov     ecx, ebx
movsd
call    sub_407d3d
sub     esp, 10h
lea     esi, [ebp-1ch]
mov     edi, esp
lea     eax, [ebp-2ch]
movsd
movsd
movsd
push    ebx
push    eax
mov     ecx, ebx
movsd
call    sub_407dd3
xor     esi, esi
cmp     [ebx+3ch], esi
jz      short loc_407cc6
sub     esp, 10h
lea     esi, [ebp-1ch]
mov     edi, esp
lea     eax, [ebp-2ch]
movsd
movsd
movsd
push    eax
mov     ecx, ebx
movsd
call    sub_407e58
xor     esi, esi
mov     ecx, [ebp-10h]
mov     edx, [ebp-14h]
sub     ecx, [ebp-18h]
sub     edx, [ebp-1ch]
lea     eax, [ebp-2ch]
push    0cc0020h
neg     eax
sbb     eax, eax
push    esi
and     eax, [ebp-28h]
push    esi
push    eax
push    ecx
push    edx
push    esi
push    esi
push    dword ptr [ebp-7ch]
call    ds:bitblt
mov     eax, [ebp-4]
cmp     eax, esi
jnz     short loc_407cfc
xor     eax, eax
jmp     short loc_407cff
mov     eax, [eax+4]
push    eax
push    dword ptr [ebp-28h]
call    ?selectgdiobject@cdc@@kgpavcgdiobject@@pauhdc__@@pax@z
lea     eax, [ebp-0ch]
neg     eax
sbb     eax, eax
and     eax, [ebp-8]
push    eax
call    ds:deleteobject
lea     ecx, [ebp-2ch]
call    sub_41f4b6
lea     ecx, [ebp-0ch]
mov     dword ptr [ebp-0ch], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
lea     ecx, [ebp-80h]
call    ??1cpaintdc@@uae@xz
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
push    edi
lea     esi, [ebp+arg_8]
lea     edi, [ebp+var_18]
mov     ebx, ecx
movsd
movsd
mov     eax, [ebx+3000h]
lea     ecx, [ebp+psizl]
movsd
push    ecx
movsd
push    dword ptr [eax-8]
mov     esi, [ebp+arg_0]
push    eax
push    dword ptr [esi+8]
call    ds:gettextextentpoint32a
mov     eax, [ebp+arg_14]
mov     edi, [ebp+psizl.cy]
sub     eax, [ebp+arg_c]
push    1
cdq
sub     eax, edx
mov     ecx, eax
mov     eax, edi
cdq
sub     eax, edx
sar     ecx, 1
sar     eax, 1
sub     ecx, eax
add     ecx, [ebp+arg_c]
mov     [ebp+var_14], ecx
add     edi, ecx
mov     ecx, esi
mov     [ebp+var_c], edi
call    sub_41f663
movzx   edx, byte ptr [ebx+5ch]
xor     ecx, ecx
mov     eax, [esi]
mov     ch, [ebx+64h]
mov     cl, [ebx+60h]
shl     ecx, 8
or      ecx, edx
push    ecx
mov     ecx, esi
call    dword ptr [eax+30h]
mov     ebx, [ebx+3000h]
mov     eax, [esi]
lea     ecx, [ebp+var_18]
push    821h
push    ecx
mov     ecx, esi
push    dword ptr [ebx-8]
push    ebx
call    dword ptr [eax+68h]
pop     edi
pop     esi
pop     ebx
leave
retn    18h
push    ebx
push    edi
push    1
mov     edi, ecx
pop     ebx
cmp     [edi+7ch], ebx
jle     short loc_407e40
push    esi
lea     esi, [edi+0a0h]
mov     eax, [esi]
sub     [esi-8], eax
cmp     dword ptr [esi-8], 0
jg      short loc_407dfc
mov     eax, [esp+0ch+arg_10]
sub     eax, [esp+0ch+arg_8]
mov     [esi-8], eax
mov     eax, [esi]
xor     edx, edx
lea     ecx, [eax+eax*2]
lea     eax, [eax+eax*2+0bdch]
mov     dl, [edi+eax*4]
lea     ecx, [edi+ecx*4]
mov     dh, [ecx+2f74h]
movzx   eax, byte ptr [ecx+2f6ch]
shl     edx, 8
or      edx, eax
mov     eax, [esp+0ch+arg_0]
push    edx
push    dword ptr [esi-4]
push    dword ptr [esi-8]
push    dword ptr [eax+4]
call    ds:setpixel
inc     ebx
add     esi, 0ch
cmp     ebx, [edi+7ch]
jl      short loc_407de6
pop     esi
pop     edi
pop     ebx
retn    18h
push    dword ptr [ecx+74h]
mov     ecx, [esp+8]
push    dword ptr [esp+10h]
call    ?fillsolidrect@cdc@@qaexpbutagrect@@k@z
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
push    esi
push    edi
lea     esi, [ebp+arg_4]
lea     edi, [ebp+rect]
mov     eax, [ebp+arg_8]
movsd
movsd
mov     ebx, ecx
movsd
add     eax, [ebx+44h]
push    dword ptr [ebx+40h]
mov     ecx, [ebp+arg_0]
movsd
mov     [ebp+rect.bottom], eax
lea     eax, [ebp+rect]
push    eax
call    ?fillsolidrect@cdc@@qaexpbutagrect@@k@z
lea     esi, [ebp+arg_4]
lea     edi, [ebp+ho]
movsd
mov     eax, [ebp+arg_10]
push    dword ptr [ebx+40h]
movsd
sub     eax, [ebx+44h]
mov     ecx, [ebp+arg_0]
movsd
movsd
mov     [ebp+var_c], eax
lea     eax, [ebp+ho]
push    eax
call    ?fillsolidrect@cdc@@qaexpbutagrect@@k@z
mov     esi, ds:deleteobject
lea     eax, [ebp+ho]
push    eax
call    esi
lea     eax, [ebp+rect]
push    eax
call    esi
pop     edi
pop     esi
pop     ebx
leave
retn    14h
push    esi
push    edi
mov     esi, ecx
call    ?ondestroy@cwnd@@iaexxz
mov     eax, [esi+80h]
mov     edi, ds:timekillevent
test    eax, eax
jz      short loc_407edc
push    eax
call    edi
mov     esi, [esi+84h]
test    esi, esi
jz      short loc_407ee9
push    esi
call    edi
pop     edi
pop     esi
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    [ebp+block]
mov     esi, ecx
call    __strdup
mov     ebx, eax
pop     ecx
test    ebx, ebx
mov     [ebp+block], ebx
jz      short loc_407f7c
push    edi
lea     ecx, [esi+2fe4h]
call    ?removeall@cstringlist@@qaexxz
movsx   eax, [ebp+arg_4]
push    eax
push    ebx
call    _strchr
mov     edi, eax
pop     ecx
test    edi, edi
pop     ecx
jz      short loc_407f41
and     byte ptr [edi], 0
push    ebx
lea     ecx, [esi+2fe4h]
call    sub_4187e0
cmp     byte ptr [edi+1], 0ah
lea     ebx, [edi+1]
jnz     short loc_407f11
lea     ebx, [edi+2]
jmp     short loc_407f11
push    ebx
lea     ecx, [esi+2fe4h]
call    sub_4187e0
push    [ebp+block]
call    _free
pop     ecx
lea     eax, [esi+3004h]
mov     ecx, [esi+2fe8h]
pop     edi
test    ecx, ecx
mov     [eax], ecx
jz      short loc_407f7c
mov     edx, [ecx]
add     ecx, 8
push    ecx
lea     ecx, [esi+3000h]
mov     [eax], edx
call    sub_41c69e
pop     esi
pop     ebx
pop     ebp
retn    8
retn    18h
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
mov     esi, ecx
push    edi
xor     ebx, ebx
mov     eax, [esi+3000h]
lea     edi, [esi+3000h]
cmp     [eax-8], ebx
jz      loc_408104
push    offset dword_42d1f8
lea     ecx, [ebp+var_18]
mov     [ebp+var_8], ebx
call    sub_41c61f
xor     eax, eax
push    offset argb_0
mov     ecx, edi
mov     [ebp+var_10], eax
mov     [ebp+var_c], eax
mov     [ebp+var_4], eax
call    sub_417e35
cmp     eax, 0ffffffffh
mov     [ebp+size], eax
jz      loc_4080fc
add     eax, 3
mov     ecx, [edi]
cmp     eax, [ecx-8]
jge     loc_4080fc
cmp     byte ptr [ecx+eax], 28h
jnz     short loc_407ff2
push    1
inc     eax
pop     ebx
cmp     ebx, 1
jnz     short loc_40801d
push    2ch
push    eax
push    ecx
mov     ecx, esp
push    edi
call    sub_41c326
mov     ecx, esi
call    sub_408109
cmp     eax, 0ffffffffh
jz      loc_4080fc
mov     ecx, [esi+68h]
push    2
mov     [ebp+var_10], ecx
inc     eax
pop     ebx
cmp     ebx, 2
jnz     short loc_408048
push    2ch
push    eax
push    ecx
mov     ecx, esp
push    edi
call    sub_41c326
mov     ecx, esi
call    sub_408109
cmp     eax, 0ffffffffh
jz      loc_4080fc
mov     ecx, [esi+68h]
push    3
mov     [ebp+var_c], ecx
inc     eax
pop     ebx
cmp     ebx, 3
jnz     short loc_408076
push    29h
push    eax
push    ecx
mov     ecx, esp
push    edi
call    sub_41c326
mov     ecx, esi
call    sub_408109
cmp     eax, 0ffffffffh
jz      loc_4080fc
mov     ecx, [esi+68h]
inc     eax
push    4
mov     [ebp+var_4], ecx
mov     [ebp+var_8], eax
pop     ebx
cmp     ebx, 4
jz      short loc_408081
inc     eax
jmp     loc_407fdd
movzx   ecx, byte ptr [ebp+var_10]
xor     eax, eax
push    edi
mov     ah, byte ptr [ebp+var_4]
mov     al, byte ptr [ebp+var_c]
shl     eax, 8
or      eax, ecx
lea     ecx, [ebp+var_4]
mov     [esi+6ch], eax
call    sub_41c326
push    offset dword_42d1fc
mov     ecx, edi
call    ??4cstring@@qaeabv0@pbd@z
push    [ebp+size]
lea     eax, [ebp+size]
lea     ecx, [ebp+var_4]
push    0
push    eax
call    sub_417cab
push    eax
mov     ecx, edi
call    sub_41c69e
lea     ecx, [ebp+size]
call    sub_41c5b1
mov     eax, [ebp+var_4]
lea     ecx, [ebp+var_4]
mov     eax, [eax-8]
sub     eax, [ebp+var_8]
push    eax
lea     eax, [ebp+size]
push    [ebp+var_8]
push    eax
call    sub_417cab
push    eax
mov     ecx, edi
call    ??ycstring@@qaeabv0@abv0@@z
lea     ecx, [ebp+size]
call    sub_41c5b1
lea     ecx, [ebp+var_4]
call    sub_41c5b1
lea     ecx, [ebp+var_18]
call    sub_41c5b1
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, ecx
push    offset dword_42d200
lea     ecx, [ebp+string]
call    sub_41c61f
mov     esi, dword ptr [ebp+src]
mov     eax, [ebp+arg_0]
cmp     esi, [eax-8]
jge     short loc_408186
mov     al, [esi+eax]
cmp     al, byte ptr [ebp+endptr]
mov     [ebp+src], al
jz      short loc_408150
movsx   eax, al
push    eax
call    _isdigit
test    eax, eax
pop     ecx
jz      short loc_40814d
push    dword ptr [ebp+src]
lea     ecx, [ebp+string]
call    sub_41c880
inc     esi
jmp     short loc_408121
and     [ebp+endptr], 0
lea     eax, [ebp+endptr]
push    0ah
push    eax
push    [ebp+string]
call    _strtoul
add     esp, 0ch
cmp     eax, 0ffh
mov     [edi+68h], eax
jle     short loc_408172
or      esi, 0ffffffffh
lea     ecx, [ebp+string]
call    sub_41c5b1
lea     ecx, [ebp+arg_0]
call    sub_41c5b1
mov     eax, esi
jmp     short loc_408199
lea     ecx, [ebp+string]
call    sub_41c5b1
lea     ecx, [ebp+arg_0]
call    sub_41c5b1
or      eax, 0ffffffffh
pop     edi
pop     esi
leave
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     eax, [esi+50h]
sub     eax, 0
jz      loc_4082e0
dec     eax
jz      loc_4082c3
dec     eax
jnz     loc_40838c
mov     al, [esi+6ch]
mov     cl, [esi+74h]
cmp     al, cl
mov     eax, [esi+48h]
jb      short loc_4081d4
sub     [esi+5ch], eax
jmp     short loc_4081d7
add     [esi+5ch], eax
mov     dx, [esi+74h]
mov     bx, [esi+6ch]
shr     dx, 8
shr     bx, 8
cmp     bl, dl
mov     [ebp+var_4], dx
mov     [ebp+var_2], bx
jb      short loc_4081f8
sub     [esi+60h], eax
jmp     short loc_4081fb
add     [esi+60h], eax
mov     edx, [esi+74h]
mov     ebx, [esi+6ch]
shr     edx, 10h
shr     ebx, 10h
cmp     bl, dl
jb      short loc_408210
sub     [esi+64h], eax
jmp     short loc_408213
add     [esi+64h], eax
cmp     [esi+6ch], cl
movzx   edi, cl
jb      short loc_408222
cmp     [esi+5ch], edi
jge     short loc_40822a
jmp     short loc_408227
cmp     [esi+5ch], edi
jle     short loc_40822a
mov     [esi+5ch], edi
mov     al, byte ptr [ebp+var_4]
cmp     byte ptr [ebp+var_2], al
movzx   ecx, al
jb      short loc_40823c
cmp     [esi+60h], ecx
jge     short loc_408244
jmp     short loc_408241
cmp     [esi+60h], ecx
jle     short loc_408244
mov     [esi+60h], ecx
cmp     bl, dl
movzx   eax, dl
jb      short loc_408252
cmp     [esi+64h], eax
jge     short loc_40825a
jmp     short loc_408257
cmp     [esi+64h], eax
jle     short loc_40825a
mov     [esi+64h], eax
cmp     [esi+5ch], edi
jnz     loc_40838c
cmp     [esi+60h], ecx
jnz     loc_40838c
cmp     [esi+64h], eax
jnz     loc_40838c
xor     edi, edi
cmp     [esi+3004h], edi
mov     [esi+50h], edi
jz      short loc_40829f
mov     eax, [esi+3004h]
mov     ecx, [eax]
add     eax, 8
mov     [esi+3004h], ecx
push    eax
lea     ecx, [esi+3000h]
call    sub_41c69e
mov     ecx, esi
call    sub_407f85
cmp     [esi+3004h], edi
jnz     loc_40838c
mov     eax, [esi+2fe8h]
mov     [esi+3004h], eax
jmp     loc_40838c
inc     dword ptr [esi+54h]
cmp     dword ptr [esi+54h], 0ah
jnz     loc_40838c
and     dword ptr [esi+54h], 0
mov     dword ptr [esi+50h], 2
jmp     loc_40838c
mov     cl, [esi+6ch]
mov     eax, [esi+48h]
cmp     cl, [esi+74h]
jb      short loc_4082f0
add     [esi+5ch], eax
jmp     short loc_4082f3
sub     [esi+5ch], eax
mov     dx, [esi+74h]
mov     bx, [esi+6ch]
shr     dx, 8
shr     bx, 8
cmp     bl, dl
mov     [ebp+var_4], dx
mov     [ebp+var_2], bx
jb      short loc_408314
add     [esi+60h], eax
jmp     short loc_408317
sub     [esi+60h], eax
mov     ebx, [esi+74h]
mov     edx, [esi+6ch]
shr     ebx, 10h
shr     edx, 10h
cmp     dl, bl
jb      short loc_40832c
add     [esi+64h], eax
jmp     short loc_40832f
sub     [esi+64h], eax
cmp     cl, [esi+74h]
movzx   edi, cl
jb      short loc_40833e
cmp     [esi+5ch], edi
jle     short loc_408346
jmp     short loc_408343
cmp     [esi+5ch], edi
jge     short loc_408346
mov     [esi+5ch], edi
mov     al, byte ptr [ebp+var_2]
cmp     al, byte ptr [ebp+var_4]
movzx   ecx, al
jb      short loc_408358
cmp     [esi+60h], ecx
jle     short loc_408360
jmp     short loc_40835d
cmp     [esi+60h], ecx
jge     short loc_408360
mov     [esi+60h], ecx
cmp     dl, bl
movzx   eax, dl
jb      short loc_40836e
cmp     [esi+64h], eax
jle     short loc_408376
jmp     short loc_408373
cmp     [esi+64h], eax
jge     short loc_408376
mov     [esi+64h], eax
cmp     [esi+5ch], edi
jnz     short loc_40838c
cmp     [esi+60h], ecx
jnz     short loc_40838c
cmp     [esi+64h], eax
jnz     short loc_40838c
mov     dword ptr [esi+50h], 1
pop     edi
pop     esi
pop     ebx
leave
retn
push    esi
mov     esi, ecx
call    sub_407a5f
test    [esp+4+arg_0], 1
jz      short loc_4083a7
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, offset off_4245e0
retn
push    esi
mov     esi, ecx
push    0
call    ??0cwinapp@@qae@pbd@z
mov     dword ptr [esi], offset off_424618
mov     eax, esi
pop     esi
retn
push    0
mov     ecx, offset dword_42d208
call    ??0cwinapp@@qae@pbd@z
push    offset sub_4083e9
mov     dword_42d208, offset off_424618
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42d208
jmp     sub_421976
push    ebp
mov     ebp, esp
mov     eax, 1174h
call    __alloca_probe
push    esi
mov     esi, ecx
call    ?afxinitrichedit@@yghxz
push    0
lea     ecx, [ebp+var_1174]
call    sub_4087dc
lea     eax, [ebp+var_1174]
lea     ecx, [ebp+var_1174]
mov     [esi+1ch], eax
call    sub_41cef9
lea     ecx, [ebp+var_1174]
call    sub_40847a
xor     eax, eax
pop     esi
leave
retn
push    esi
mov     esi, ecx
push    [esp+4+arg_0]
call    sub_4077ba
test    eax, eax
pop     ecx
jz      short loc_40844f
push    1
pop     eax
jmp     short loc_40845a
push    [esp+4+arg_0]
mov     ecx, esi
call    sub_41db03
pop     esi
retn    4
push    esi
mov     esi, ecx
call    sub_421976
test    [esp+4+arg_0], 1
jz      short loc_408474
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    ebx
push    ebp
push    esi
mov     esi, ecx
push    edi
mov     ebp, 0c8h
lea     ebx, [esi+7fch]
mov     edi, offset ??_7cgdiobject@@6b@
sub     ebx, 8
mov     ecx, ebx
mov     [ebx], edi
call    sub_41fc1b
dec     ebp
jnz     short loc_408490
lea     ecx, [esi+154h]
call    ??1ctooltipctrl@@uae@xz
lea     ecx, [esi+14ch]
mov     [ecx], edi
call    sub_41fc1b
lea     ecx, [esi+128h]
call    sub_41f4b6
lea     ecx, [esi+120h]
mov     [ecx], edi
call    sub_41fc1b
lea     ecx, [esi+84h]
call    sub_406526
mov     ecx, esi
lea     eax, [esi+5ch]
neg     ecx
sbb     ecx, ecx
and     ecx, eax
call    sub_40c501
mov     ecx, esi
call    sub_41cb2f
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
push    edi
xor     edi, edi
mov     lpdata, edi
call    sub_40857a
cmp     eax, edi
mov     ncount, eax
jz      short loc_40856a
mov     ecx, lpdata
cmp     ecx, edi
jz      short loc_40856a
push    esi
mov     esi, ds:extcreateregion
push    ecx
push    eax
push    edi
call    esi
mov     ecx, [esp+8+arg_0]
push    eax
call    sub_41fbc4
mov     eax, lpdata
mov     ecx, ncount
push    eax
push    ecx
push    edi
mov     dword_42f830, eax
call    esi
mov     ecx, [esp+8+arg_4]
push    eax
call    sub_41fbc4
push    dword_42f830
call    ??3@yaxpax@z
push    lpdata
call    ??3@yaxpax@z
pop     ecx
pop     ecx
push    1
pop     eax
pop     esi
pop     edi
retn
push    edi
push    edi
push    offset aerror
call    sub_4205e1
xor     eax, eax
pop     edi
retn
push    ebp
mov     ebp, esp
push    ecx
and     lpdata, 0
and     [ebp+size], 0
push    esi
lea     eax, [ebp+size]
mov     esi, offset pjbits
push    4
push    eax
mov     ecx, esi
call    sub_41e1e9
push    [ebp+size]
call    sub_41c2f2
test    eax, eax
pop     ecx
mov     lpdata, eax
jz      short loc_4085be
push    [ebp+size]
mov     ecx, esi
push    eax
call    sub_41e1e9
mov     eax, [ebp+size]
jmp     short loc_4085c0
xor     eax, eax
pop     esi
leave
retn
call    sub_4085d4
push    offset sub_4085e9
call    _atexit
pop     ecx
retn
mov     eax, off_42b8a0
mov     dword_42f800, eax
mov     dword_42f804, eax
mov     dword_42f808, eax
retn
mov     ecx, offset dword_42f800
jmp     sub_4056de
mov     eax, off_42b8a0
push    offset sub_408609
mov     dword_42f7f0, eax
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42f7f0
jmp     sub_41c5b1
mov     eax, off_42b8a0
push    offset sub_40862e
mov     lpfilename, eax
mov     dword_42f7e8, eax
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42f7e8
call    sub_41c5b1
mov     ecx, offset lpfilename
jmp     sub_41c5b1
call    sub_408653
push    offset sub_408668
call    _atexit
pop     ecx
retn
mov     eax, off_42b8a0
mov     lpfile, eax
mov     dword_42f6fc, eax
mov     dword_42f704, eax
retn
mov     ecx, offset dword_42f6f0
jmp     loc_40b7e9
mov     eax, off_42b8a0
push    offset sub_408688
mov     dword_42f6e4, eax
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42f6e4
jmp     sub_41c5b1
mov     eax, off_42b8a0
push    offset sub_4086ad
mov     lptext, eax
mov     dword_42f6d8, eax
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42f6d8
call    sub_41c5b1
mov     ecx, offset lptext
jmp     sub_41c5b1
mov     ecx, offset dword_42e6c0
call    sub_40b849
push    offset sub_4086d7
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42e6c0
jmp     sub_40b806
push    offset ahtkeyshkdll_0
mov     ecx, offset dword_42e658
call    sub_41c61f
push    offset sub_4086fc
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42e658
jmp     sub_41c5b1
mov     eax, off_42b8a0
push    offset sub_40871c
mov     dword_42d6a8, eax
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42d6a8
jmp     sub_41c5b1
mov     ecx, offset pjbits
call    sub_41dfba
push    offset sub_40873c
call    _atexit
pop     ecx
retn
mov     ecx, offset pjbits
jmp     ??1cfile@@uae@xz
and     dword_42d33c, 0
push    offset sub_408763
mov     dword_42d338, offset ??_7cbrush@@6b@
call    _atexit
pop     ecx
retn
mov     dword_42d338, offset ??_7cgdiobject@@6b@
mov     ecx, offset dword_42d338
jmp     sub_41fc1b
mov     eax, off_42b8a0
push    offset sub_40878d
mov     dword_42d330, eax
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42d330
jmp     sub_41c5b1
mov     eax, off_42b8a0
push    offset sub_4087ad
mov     dword_42d32c, eax
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42d32c
jmp     sub_41c5b1
push    offset dword_42f87c
mov     ecx, offset dword_42d2f4
call    sub_41c61f
push    offset sub_4087d2
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_42d2f4
jmp     sub_41c5b1
push    ebx
push    esi
push    edi
mov     esi, ecx
push    [esp+0ch+arg_0]
push    66h
call    ??0cdialog@@qae@ipavcwnd@@@z
lea     edi, [esi+5ch]
push    1
mov     ecx, edi
call    sub_40c4b6
lea     ecx, [esi+84h]
call    sub_4064eb
and     dword ptr [esi+124h], 0
lea     eax, [esi+120h]
lea     ecx, [esi+128h]
mov     dword ptr [eax], offset ??_7crgn@@6b@
call    ??0cdc@@qae@xz_0
and     dword ptr [esi+150h], 0
lea     eax, [esi+14ch]
mov     ebx, offset off_423818
lea     ecx, [esi+154h]
mov     [eax], ebx
call    ??0ctooltipctrl@@qae@xz
lea     eax, [esi+1bch]
mov     ecx, 0c8h
and     dword ptr [eax+4], 0
mov     dword ptr [eax], offset ??_7cgdiobject@@6b@
mov     [eax], ebx
add     eax, 8
dec     ecx
jnz     short loc_40884b
mov     dword ptr [esi], offset off_42488c
mov     dword ptr [edi], offset off_424858
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+0ch]
push    80h
push    eax
call    ds:loadicona
and     dword ptr [esi+138h], 0
mov     [esi+1ach], eax
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
mov     eax, offset off_4246b8
retn
push    ebx
push    ebp
push    esi
push    edi
mov     esi, ecx
call    ?oninitdialog@cdialog@@uaehxz
push    dword ptr [esi+1ach]
lea     edi, [esi+1ach]
mov     ebx, ds:sendmessagea
push    1
push    80h
push    dword ptr [esi+1ch]
call    ebx
push    dword ptr [edi]
xor     ebp, ebp
push    ebp
push    80h
push    dword ptr [esi+1ch]
call    ebx
cmp     esi, ebp
jnz     short loc_4088e0
xor     eax, eax
jmp     short loc_4088e3
mov     eax, [esi+1ch]
push    ebp
push    ebp
mov     edx, offset aoninitdialog
push    eax
mov     edi, edx
or      ecx, 0ffffffffh
xor     eax, eax
push    1
repne scasb
not     ecx
dec     ecx
push    1
push    ecx
push    edx
call    sub_40469c
add     esp, 1ch
cmp     esi, ebp
jnz     short loc_408911
mov     lparam, ebp
jmp     short loc_408919
mov     eax, [esi+1ch]
mov     lparam, eax
push    ebp
push    esi
lea     ecx, [esi+154h]
call    sub_41839e
push    ebp
push    1
pop     edi
push    edi
push    401h
push    dword ptr [esi+170h]
call    ebx
mov     ecx, esi
call    sub_409614
push    ebp
mov     ecx, esi
call    sub_41b129
push    105h
push    ebp
push    ebp
push    dword ptr [esi+1ch]
call    ds:redrawwindow
mov     ebx, offset azweipetexe
push    ebx
call    __strupr
cmp     dword_42f848, edi
pop     ecx
jnz     short loc_408974
mov     eax, [esi+5ch]
lea     ecx, [esi+5ch]
call    dword ptr [eax+8]
mov     eax, dword_42f6f0
cmp     eax, 3e8h
jz      short loc_40898f
push    5
push    pszsound[eax*4]
call    ds:sndplaysounda
cmp     dword_42f6f8, ebp
jz      short loc_4089b1
mov     eax, lpfile
cmp     [eax-8], ebp
jz      short loc_4089b1
push    edi
push    ebp
push    ebp
push    eax
push    offset aopen
push    ebp
call    ds:shellexecutea
cmp     dword_42f700, ebp
jz      short loc_4089c6
push    ebp
push    ebp
push    dword_42f6fc
call    sub_4205e1
cmp     dword_42f708, edi
jnz     short loc_4089ed
mov     al, byte_42f85c
push    eax
push    ebx
call    sub_40d3d8
pop     ecx
test    eax, eax
pop     ecx
jnz     short loc_4089ed
push    ebp
push    ebp
push    dword_42f704
call    sub_4205e1
mov     eax, edi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 64h
push    esi
mov     esi, ecx
push    dword ptr [esi+1ch]
call    ds:isiconic
test    eax, eax
jz      short loc_408a85
push    ebx
push    edi
push    esi
lea     ecx, [ebp-64h]
call    ??0cpaintdc@@qae@pavcwnd@@@z
lea     eax, [ebp-64h]
push    0
neg     eax
sbb     eax, eax
and     eax, [ebp-60h]
push    eax
push    27h
push    dword ptr [esi+1ch]
call    ds:sendmessagea
mov     edi, ds:getsystemmetrics
push    0bh
call    edi
push    0ch
mov     ebx, eax
call    edi
mov     edi, eax
lea     eax, [ebp-10h]
push    eax
push    dword ptr [esi+1ch]
call    ds:getclientrect
mov     eax, [ebp-4]
push    dword ptr [esi+1ach]
sub     eax, [ebp-0ch]
sub     eax, edi
inc     eax
cdq
sub     eax, edx
sar     eax, 1
push    eax
mov     eax, [ebp-8]
sub     eax, [ebp-10h]
sub     eax, ebx
inc     eax
cdq
sub     eax, edx
sar     eax, 1
push    eax
push    dword ptr [ebp-60h]
call    ds:drawicon
lea     ecx, [ebp-64h]
call    ??1cpaintdc@@uae@xz
pop     edi
pop     ebx
jmp     short loc_408a8c
mov     ecx, esi
call    sub_4192d4
pop     esi
leave
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     esi, ecx
push    1b8h
call    sub_41c2f2
xor     edi, edi
pop     ecx
cmp     eax, edi
jz      short loc_408ab9
push    edi
mov     ecx, eax
call    sub_401ff9
jmp     short loc_408abb
xor     eax, eax
push    esi
push    81h
mov     ecx, eax
mov     [esi+1b0h], eax
call    sub_41cb6d
mov     eax, dword_42f844
shl     eax, 2
cmp     byte ptr dword_42e338[eax], 0
jz      short loc_408af4
mov     ecx, [esi+1b0h]
mov     ecx, [ecx+1ch]
inc     dword_42f844
mov     dword_42e018[eax], ecx
push    edi
mov     esi, ds:setwindowpos
push    [ebp+cy]
push    [ebp+arg_c]
push    [ebp+y]
push    [ebp+x]
push    edi
push    hdlg
call    esi
push    [ebp+lpstring]
mov     edi, ds:getdlgitem
mov     ebx, 3e8h
push    ebx
push    hdlg
call    edi
push    eax
call    ds:setwindowtexta
push    ebx
push    hdlg
call    edi
xor     ecx, ecx
push    ecx
push    [ebp+cy]
push    [ebp+arg_c]
push    ecx
push    ecx
push    ecx
push    eax
call    esi
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_4]
mov     edx, [ebp+arg_c]
push    ebx
push    esi
mov     [ebp+var_10], eax
mov     esi, ecx
mov     ecx, [ebp+arg_8]
add     eax, edx
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_c], ecx
xor     ebx, ebx
add     ecx, eax
cmp     dword_42e680, ebx
push    edi
mov     [ebp+var_4], ecx
mov     edi, 50000000h
jnz     loc_408c4b
push    10ch
call    sub_41c2f2
cmp     eax, ebx
pop     ecx
jz      short loc_408b9f
mov     ecx, eax
call    sub_40395d
jmp     short loc_408ba1
xor     eax, eax
push    10h
lea     ecx, [ebp+var_10]
push    esi
push    ecx
push    edi
push    offset dword_42f880
mov     ecx, eax
mov     [esi+1168h], eax
call    sub_420b01
mov     ecx, [esi+1168h]
push    20h
push    dword_42f860
push    ebx
call    sub_41bb8f
mov     ecx, [esi+1168h]
push    20h
push    dword_42f864
push    ebx
call    sub_41bbc0
mov     ecx, [esi+1168h]
push    0dh
push    [ebp+block]
call    sub_403b8a
mov     eax, dword_42f83c
mov     ecx, [esi+1168h]
lea     eax, [eax+eax*4]
shl     eax, 1
push    eax
push    2
call    sub_403c5c
push    dword_42e688
mov     ecx, [esi+1168h]
push    ebx
call    sub_403c72
mov     ecx, [esi+1168h]
push    1
call    sub_403cac
cmp     dword_42f840, 1
jnz     short loc_408c40
mov     ecx, [esi+1168h]
push    1
call    sub_403c9f
mov     ecx, [esi+1168h]
call    sub_403ad5
cmp     dword_42e680, 1
jnz     loc_408cff
push    3008h
call    sub_41c2f2
cmp     eax, ebx
pop     ecx
jz      short loc_408c70
mov     ecx, eax
call    sub_4079de
jmp     short loc_408c72
xor     eax, eax
push    10h
lea     ecx, [ebp+var_10]
push    esi
push    ecx
push    edi
push    offset dword_42f884
mov     ecx, eax
mov     [esi+116ch], eax
call    sub_420b01
mov     ecx, [esi+116ch]
push    20h
push    dword_42f860
push    ebx
call    sub_41bb8f
mov     ecx, [esi+116ch]
push    20h
push    dword_42f864
push    ebx
call    sub_41bbc0
mov     ecx, [esi+116ch]
push    0dh
push    [ebp+block]
call    sub_407eec
push    dword_42e678
mov     ecx, [esi+116ch]
push    dword_42e67c
push    dword_42e668
push    dword_42e66c
push    dword_42e670
push    dword_42e674
push    dword_42e664
push    udelay
call    sub_407a8d
cmp     dword_42e680, 2
jnz     loc_408da7
push    0a4h
call    sub_41c2f2
cmp     eax, ebx
pop     ecx
jz      short loc_408d24
mov     ecx, eax
call    sub_401110
jmp     short loc_408d26
xor     eax, eax
push    10h
lea     ecx, [ebp+var_10]
push    esi
push    ecx
push    edi
push    offset dword_42f888
mov     ecx, eax
mov     [esi+1170h], eax
call    sub_420b01
mov     ecx, [esi+1170h]
push    20h
push    dword_42f860
push    ebx
call    sub_41bb8f
mov     ecx, [esi+1170h]
push    20h
push    dword_42f864
push    ebx
call    sub_41bbc0
push    dword_42f7dc
mov     ecx, [esi+1170h]
push    dword_42f7e0
push    28h
push    lpfilename
call    sub_401239
cmp     dword_42f7e4, ebx
jz      short loc_408da7
push    ecx
mov     ecx, esp
push    offset dword_42f7e8
call    sub_41c326
mov     ecx, [esi+1170h]
call    sub_4011dd
pop     edi
pop     esi
pop     ebx
leave
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_4]
mov     edx, [ebp+arg_c]
push    esi
mov     [ebp+var_10], eax
mov     esi, ecx
add     eax, edx
mov     ecx, [ebp+arg_8]
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_c], ecx
push    edi
add     ecx, eax
push    3ch
mov     [ebp+var_4], ecx
call    sub_41c2f2
mov     edi, eax
pop     ecx
test    edi, edi
jz      short loc_408df1
mov     ecx, edi
call    sub_418f4c
mov     dword ptr [edi], offset ??_7cbutton@@6b@
jmp     short loc_408df3
xor     edi, edi
mov     eax, dword_42f84c
push    0ch
push    esi
mov     [esi+eax*4+0e48h], edi
lea     eax, [ebp+var_10]
push    eax
mov     eax, dword_42f84c
push    50000007h
push    [ebp+arg_0]
mov     ecx, [esi+eax*4+0e48h]
call    sub_420b5b
mov     ecx, esi
call    ?getfont@cwnd@@qbepavcfont@@xz
mov     ecx, dword_42f84c
test    eax, eax
mov     ecx, [esi+ecx*4+0e48h]
jz      short loc_408e3a
mov     eax, [eax+4]
push    1
push    eax
push    30h
push    dword ptr [ecx+1ch]
call    ds:sendmessagea
mov     eax, dword_42f84c
push    20h
push    dword_42f860
mov     ecx, [esi+eax*4+0e48h]
push    0
call    sub_41bb8f
mov     eax, dword_42f84c
push    20h
push    dword_42f864
mov     ecx, [esi+eax*4+0e48h]
push    0
call    sub_41bbc0
inc     dword_42f84c
pop     edi
pop     esi
leave
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_4]
mov     edx, [ebp+arg_c]
push    esi
mov     [ebp+var_10], eax
mov     esi, ecx
add     eax, edx
mov     ecx, [ebp+arg_8]
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_c], ecx
add     ecx, eax
push    0a8h
mov     [ebp+var_4], ecx
call    sub_41c2f2
test    eax, eax
pop     ecx
jz      short loc_408ec7
mov     ecx, eax
call    sub_405af1
jmp     short loc_408ec9
xor     eax, eax
mov     ecx, dword_42f870
push    0ah
push    esi
mov     [esi+ecx*4+808h], eax
lea     eax, [ebp+var_10]
push    eax
mov     eax, dword_42f870
push    50000000h
push    [ebp+arg_0]
mov     ecx, [esi+eax*4+808h]
call    sub_420b01
mov     ecx, esi
call    ?getfont@cwnd@@qbepavcfont@@xz
mov     ecx, dword_42f870
test    eax, eax
mov     ecx, [esi+ecx*4+808h]
jz      short loc_408f11
mov     eax, [eax+4]
push    1
push    eax
push    30h
push    dword ptr [ecx+1ch]
call    ds:sendmessagea
mov     eax, dword_42f870
push    20h
push    dword_42f860
mov     ecx, [esi+eax*4+808h]
push    0
call    sub_41bb8f
mov     eax, dword_42f870
push    20h
push    dword_42f864
mov     ecx, [esi+eax*4+808h]
push    0
call    sub_41bbc0
movzx   eax, byte_42d318
push    eax
mov     eax, dword_42f870
mov     ecx, [esi+eax*4+808h]
call    sub_405c2d
movzx   eax, byte_42d319
push    eax
mov     eax, dword_42f870
mov     ecx, [esi+eax*4+808h]
call    sub_405c62
movzx   eax, byte_42d31a
push    eax
mov     eax, dword_42f870
mov     ecx, [esi+eax*4+808h]
call    sub_405c89
mov     eax, dword_42f870
push    color
mov     ecx, [esi+eax*4+808h]
call    sub_405d29
mov     eax, dword_42f870
push    dword_42d31c
mov     ecx, [esi+eax*4+808h]
call    sub_405c0b
mov     eax, dword_42f870
push    dword_42d314
mov     ecx, [esi+eax*4+808h]
call    sub_405d5f
mov     eax, dword_42d308
test    eax, eax
jz      short loc_409000
push    eax
mov     eax, dword_42f870
mov     ecx, [esi+eax*4+808h]
call    sub_405e5e
mov     eax, dword_42d30c
test    eax, eax
jz      short loc_40901b
push    eax
mov     eax, dword_42f870
mov     ecx, [esi+eax*4+808h]
call    sub_405ec3
mov     eax, dword_42f870
push    dword_42d310
mov     ecx, [esi+eax*4+808h]
call    sub_405f71
cmp     dword_42d310, 0
jz      short loc_409066
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+0ch]
push    8dh
push    eax
call    ds:loadcursora
push    eax
mov     eax, dword_42f870
mov     ecx, [esi+eax*4+808h]
call    sub_406005
inc     dword_42f870
pop     esi
leave
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_4]
mov     edx, [ebp+arg_c]
push    esi
mov     [ebp+var_10], eax
mov     esi, ecx
add     eax, edx
mov     ecx, [ebp+arg_8]
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_c], ecx
add     ecx, eax
push    54h
mov     [ebp+var_4], ecx
call    sub_41c2f2
test    eax, eax
pop     ecx
jz      short loc_4090ab
mov     ecx, eax
call    sub_406030
jmp     short loc_4090ad
xor     eax, eax
mov     ecx, dword_42f878
push    0ah
push    esi
mov     [esi+ecx*4+0b28h], eax
lea     eax, [ebp+var_10]
push    eax
mov     eax, dword_42f878
push    5000000bh
push    [ebp+arg_0]
mov     ecx, [esi+eax*4+0b28h]
call    sub_420b5b
push    dword_42d2fc
mov     eax, dword_42f878
push    dword_42d300
mov     ecx, [esi+eax*4+0b28h]
push    dword_42d304
call    sub_4062ec
mov     eax, dword_42f878
push    20h
push    dword_42f860
mov     ecx, [esi+eax*4+0b28h]
push    0
call    sub_41bb8f
mov     eax, dword_42f878
push    20h
push    dword_42f864
mov     ecx, [esi+eax*4+0b28h]
push    0
call    sub_41bbc0
mov     eax, dword_42f878
push    0
mov     ecx, [esi+eax*4+0b28h]
call    ?showwindow@cwnd@@qaehh@z
inc     dword_42f878
pop     esi
leave
retn    14h
push    ebx
push    ebp
push    esi
push    edi
mov     esi, ecx
push    16ch
call    sub_41c2f2
xor     edi, edi
pop     ecx
cmp     eax, edi
jz      short loc_409172
push    edi
mov     ecx, eax
call    sub_404b23
jmp     short loc_409174
xor     eax, eax
push    esi
push    88h
mov     ecx, eax
mov     [esi+1b4h], eax
call    sub_41cb6d
mov     ebp, [esp+10h+cy]
push    edi
push    ebp
mov     esi, ds:setwindowpos
push    [esp+18h+arg_8]
push    [esp+1ch+y]
push    [esp+20h+x]
push    edi
push    hdlg
call    esi
mov     ebx, ds:getdlgitem
push    3ebh
push    hdlg
call    ebx
push    edi
push    ebp
push    [esp+18h+arg_8]
push    edi
push    edi
push    edi
push    eax
call    esi
push    3f0h
push    hdlg
call    ebx
push    edi
push    ebp
push    [esp+18h+arg_8]
push    edi
push    edi
push    edi
push    eax
call    esi
cmp     byte_42d344, 1
mov     esi, ds:settimer
mov     ebx, 7d0h
jnz     short loc_409208
cmp     dword_42f7f4, edi
jnz     short loc_409208
push    edi
push    ebx
push    2
push    hdlg
call    esi
cmp     dword_42f7f4, 2
jnz     short loc_40921d
push    edi
push    ebx
push    5
push    hdlg
call    esi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    10h
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, ecx
push    148h
call    sub_41c2f2
xor     ebx, ebx
pop     ecx
cmp     eax, ebx
jz      short loc_409246
push    ebx
mov     ecx, eax
call    sub_406f94
jmp     short loc_409248
xor     eax, eax
push    esi
push    89h
mov     ecx, eax
mov     [esi+1b8h], eax
call    sub_41cb6d
push    ebx
mov     esi, ds:setwindowpos
push    [ebp+cy]
push    [ebp+arg_8]
push    [ebp+y]
push    [ebp+x]
push    ebx
push    hdlg
call    esi
cmp     byte_42d2d0, bl
jnz     short loc_409286
push    3ech
jmp     short loc_40928b
push    3eeh
push    hdlg
call    ds:getdlgitem
push    ebx
push    [ebp+cy]
push    [ebp+arg_8]
push    ebx
push    ebx
push    ebx
push    eax
call    esi
cmp     byte_42d2d1, 1
jnz     short loc_4092c1
push    ebx
push    7d0h
push    3
push    hdlg
call    ds:settimer
pop     esi
pop     ebx
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+arg_0]
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_8]
mov     [ebp+var_10], eax
mov     esi, ecx
add     eax, edi
mov     ecx, [ebp+arg_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+cy]
mov     [ebp+var_c], ecx
add     ecx, eax
xor     ebx, ebx
movzx   eax, [ebp+arg_14]
sub     eax, ebx
mov     [ebp+var_4], ecx
jz      loc_409567
dec     eax
jz      loc_40947e
dec     eax
jz      loc_4093c7
dec     eax
jnz     loc_40960d
push    124h
call    sub_41c2f2
cmp     eax, ebx
pop     ecx
jz      short loc_409329
mov     ecx, eax
call    sub_40b976
jmp     short loc_40932b
xor     eax, eax
push    0eh
lea     ecx, [ebp+var_10]
push    esi
push    ecx
push    5000010eh
push    ebx
mov     ecx, eax
mov     [esi+804h], eax
call    sub_420b01
push    2
mov     ecx, [esi+804h]
push    [ebp+cy]
push    edi
push    ebx
push    ebx
push    ebx
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
mov     ecx, [esi+804h]
push    20h
push    dword_42f860
push    ebx
call    sub_41bb8f
mov     ecx, [esi+804h]
push    20h
push    dword_42f864
push    ebx
call    sub_41bbc0
push    dword_42e690
mov     eax, dword_42e69c
mov     ecx, [esi+804h]
push    dword_42e6a4
lea     eax, [eax+eax*4]
shl     eax, 1
push    dword_42e698
push    eax
mov     eax, dword_42e6a0
lea     eax, [eax+eax*4]
shl     eax, 1
push    eax
mov     eax, dword_42f874
push    ebx
lea     eax, [esi+eax*8+1bch]
push    eax
call    sub_40bea8
jmp     loc_40960d
push    0c80h
call    sub_41c2f2
cmp     eax, ebx
pop     ecx
jz      short loc_4093df
mov     ecx, eax
call    sub_406b52
jmp     short loc_4093e1
xor     eax, eax
push    0eh
lea     ecx, [ebp+var_10]
push    esi
push    ecx
push    5000000eh
push    ebx
mov     ecx, eax
mov     [esi+800h], eax
call    sub_420b01
push    2
mov     ecx, [esi+800h]
push    [ebp+cy]
push    edi
push    ebx
push    ebx
push    ebx
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
mov     ecx, [esi+800h]
push    20h
push    dword_42f860
push    ebx
call    sub_41bb8f
mov     ecx, [esi+800h]
push    20h
push    dword_42f864
push    ebx
call    sub_41bbc0
push    dword_42e690
mov     eax, dword_42f874
mov     ecx, [esi+800h]
push    dword_42e6bc
lea     eax, [esi+eax*8+1bch]
push    dword_42e6b8
push    dword_42e6b4
push    dword_42e6b0
push    dword_42e6a8
push    dword_42e6ac
push    eax
call    sub_406de7
jmp     loc_40960d
push    40h
call    sub_41c2f2
cmp     eax, ebx
pop     ecx
jz      short loc_409493
mov     ecx, eax
call    sub_401dc7
jmp     short loc_409495
xor     eax, eax
push    0eh
lea     ecx, [ebp+var_10]
push    esi
push    ecx
push    5000000eh
push    ebx
mov     ecx, eax
mov     [esi+7fch], eax
call    sub_420b01
mov     eax, dword_42f874
lea     eax, [esi+eax*8+1bch]
cmp     eax, ebx
jnz     short loc_4094c3
xor     eax, eax
jmp     short loc_4094c6
mov     eax, [eax+4]
push    eax
mov     eax, [esi+7fch]
push    ebx
push    172h
push    dword ptr [eax+1ch]
call    ds:sendmessagea
push    2
mov     ecx, [esi+7fch]
push    [ebp+cy]
push    edi
push    ebx
push    ebx
push    ebx
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
mov     ecx, [esi+7fch]
push    20h
push    dword_42f860
push    ebx
call    sub_41bb8f
mov     ecx, [esi+7fch]
push    20h
push    dword_42f864
push    ebx
call    sub_41bbc0
mov     edi, [ebp+lpstring]
push    ecx
mov     ecx, esp
push    edi
call    sub_41c61f
mov     ecx, [esi+7fch]
call    sub_401e07
mov     ecx, [esi+7fch]
push    1
call    ?showwindow@cwnd@@qaehh@z
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
jz      loc_40960d
push    ebx
push    ebx
push    [ebp+lpstring]
lea     ecx, [esi+154h]
push    dword ptr [esi+7fch]
call    ?addtool@ctooltipctrl@@qaehpavcwnd@@pbdpbutagrect@@i@z
jmp     loc_40960d
push    40h
call    sub_41c2f2
cmp     eax, ebx
pop     ecx
jz      short loc_40957c
mov     ecx, eax
call    sub_401dc7
jmp     short loc_40957e
xor     eax, eax
push    0eh
lea     ecx, [ebp+var_10]
push    esi
push    ecx
push    5000000eh
push    ebx
mov     ecx, eax
mov     [esi+7fch], eax
call    sub_420b01
mov     eax, dword_42f874
lea     eax, [esi+eax*8+1bch]
cmp     eax, ebx
jnz     short loc_4095ac
xor     eax, eax
jmp     short loc_4095af
mov     eax, [eax+4]
push    eax
mov     eax, [esi+7fch]
push    ebx
push    172h
push    dword ptr [eax+1ch]
call    ds:sendmessagea
push    2
mov     ecx, [esi+7fch]
push    [ebp+cy]
push    edi
push    ebx
push    ebx
push    ebx
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
mov     ecx, [esi+7fch]
push    20h
push    dword_42f860
push    ebx
call    sub_41bb8f
mov     ecx, [esi+7fch]
push    20h
push    dword_42f864
push    ebx
call    sub_41bbc0
mov     ecx, [esi+7fch]
push    ebx
call    ?showwindow@cwnd@@qaehh@z
pop     edi
pop     esi
pop     ebx
leave
retn    18h
push    ebp
mov     ebp, esp
mov     eax, 55f8h
call    __alloca_probe
push    esi
push    edi
mov     edi, ecx
lea     ecx, [ebp+var_cc]
mov     [ebp+hwnd], edi
call    ??0cexception@@qae@xz
mov     eax, off_42b8a0
or      [ebp+var_c0], 0ffffffffh
xor     esi, esi
lea     ecx, [ebp+var_bc]
push    esi
mov     [ebp+var_bc], eax
mov     [ebp+var_cc], offset ??_7cfileexception@@6b@
mov     [ebp+var_c4], esi
call    ??4cstring@@qaeabv0@pbd@z
mov     ecx, edi
call    sub_40b289
test    eax, eax
push    esi
jnz     short loc_40968c
push    offset aerror1
push    offset acannotopenfile
mov     ecx, edi
call    sub_41a9cd
mov     ecx, edi
call    sub_41d1ff
jmp     loc_40ad02
push    ldistancetomove
mov     esi, offset pjbits
mov     ecx, esi
call    ?seek@cfile@@uaejji@z
lea     eax, [ebp+var_d8]
push    7
push    eax
mov     ecx, esi
call    sub_41e1e9
test    eax, eax
jz      loc_40acfb
push    ebx
push    4
pop     ebx
xor     eax, eax
lea     edi, [ebp+str2]
stosd
and     [ebp+var_d0], 0
push    7
stosd
lea     eax, [ebp+str2]
mov     ecx, esi
push    eax
call    sub_41e1e9
and     [ebp+var_28], 0
lea     eax, [ebp+str2]
push    7
push    eax
push    offset ascn
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     short loc_409756
push    ebx
push    offset dword_42b268
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42b264
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d6b0
mov     ecx, esi
call    sub_41e1e9
and     [ebp+var_4c], 0
lea     eax, [ebp+var_4c]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
push    0
push    offset ho
push    [ebp+var_4c]
mov     edi, offset pjbits
push    edi
call    sub_40d992
add     esp, 10h
cmp     eax, 1
jnz     short loc_40975b
push    eax
call    sub_407751
push    [ebp+hwnd]
call    sub_40775b
pop     ecx
pop     ecx
jmp     short loc_40975b
mov     edi, offset pjbits
lea     eax, [ebp+str2]
push    7
push    eax
push    offset awav
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     short loc_40978c
push    edi
call    sub_406a92
pop     ecx
mov     ecx, dword_42f86c
inc     dword_42f86c
mov     pszsound[ecx*4], eax
lea     eax, [ebp+str2]
push    7
push    eax
push    offset amis
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_409911
push    ebx
push    offset dword_42f6f0
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f6f8
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42f6f8, 0
jz      short loc_4097ea
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_6c]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset lpfile
call    sub_41c69e
lea     ecx, [ebp+var_6c]
call    sub_41c5b1
push    ebx
push    offset dword_42f700
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42f700, 0
jz      short loc_409820
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_70]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset dword_42f6fc
call    sub_41c69e
lea     ecx, [ebp+var_70]
call    sub_41c5b1
push    ebx
push    offset dword_42f708
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42f708, 0
jz      short loc_409856
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_80]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset dword_42f704
call    sub_41c69e
lea     ecx, [ebp+var_80]
call    sub_41c5b1
push    ebx
push    offset dword_42f6e0
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f6e8
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42f6e8, 0
jz      short loc_40989f
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_88]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset dword_42f6e4
call    sub_41c69e
lea     ecx, [ebp+var_88]
call    sub_41c5b1
push    ebx
push    offset dword_42f6d4
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42f6d4, 0
jz      short loc_4098db
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_90]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset lptext
call    sub_41c69e
lea     ecx, [ebp+var_90]
call    sub_41c5b1
push    ebx
push    offset dword_42f6dc
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42f6dc, 0
jz      short loc_409911
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_7c]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset dword_42f6d8
call    sub_41c69e
lea     ecx, [ebp+var_7c]
call    sub_41c5b1
lea     eax, [ebp+str2]
push    7
push    eax
push    offset acsm
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_409a9d
and     [ebp+block], eax
lea     eax, [ebp+block]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
xor     eax, eax
push    eax
push    eax
push    eax
push    edi
push    [ebp+block]
call    sub_40d8b5
mov     ecx, [ebp+hwnd]
add     esp, 14h
add     ecx, 14ch
push    eax
call    sub_41fbc4
push    ebx
push    offset dword_42d36c
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d368
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42d36c, 1
jnz     short loc_4099ca
mov     eax, [ebp+hwnd]
and     [ebp+var_44], 0
add     eax, 120h
mov     [ebp+var_48], offset ??_7crgn@@6b@
push    eax
lea     eax, [ebp+var_48]
push    eax
call    sub_4084f6
lea     eax, [ebp+var_48]
pop     ecx
neg     eax
sbb     eax, eax
pop     ecx
and     eax, [ebp+var_44]
push    1
push    eax
mov     eax, [ebp+hwnd]
push    dword ptr [eax+1ch]
call    ds:setwindowrgn
lea     ecx, [ebp+var_48]
mov     [ebp+var_48], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
jmp     loc_409a60
push    ebx
push    offset dword_42d364
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d360
mov     ecx, esi
call    sub_41e1e9
mov     eax, [ebp+hwnd]
add     eax, 14ch
test    eax, eax
jz      short loc_4099fb
mov     eax, [ebp+hwnd]
add     eax, 14ch
mov     eax, [eax+4]
push    dword_42d360
push    dword_42d364
push    eax
call    sub_403057
add     esp, 0ch
cmp     dword_42d368, 1
mov     [ebp+hrgn], eax
jnz     short loc_409a4f
mov     eax, [ebp+hwnd]
add     eax, 14ch
test    eax, eax
jz      short loc_409a2b
mov     eax, [eax+4]
push    dword_42d360
push    dword_42d364
push    eax
call    sub_403057
add     esp, 0ch
push    eax
mov     eax, [ebp+hwnd]
lea     ecx, [eax+120h]
call    sub_41fbc4
mov     eax, [ebp+hwnd]
push    1
push    [ebp+hrgn]
push    dword ptr [eax+1ch]
call    ds:setwindowrgn
lea     eax, [ebp+pv]
push    eax
mov     eax, [ebp+hwnd]
push    18h
push    dword ptr [eax+150h]
call    ds:getobjecta
push    2
mov     ecx, [ebp+hwnd]
push    [ebp+cy]
xor     eax, eax
push    [ebp+var_11c]
push    eax
push    eax
push    eax
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
mov     dword_42f858, 1
lea     eax, [ebp+str2]
push    7
push    eax
push    offset acap
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_409b89
mov     al, byte_42f88c
push    18h
mov     [ebp+string], al
pop     ecx
xor     eax, eax
lea     edi, [ebp+var_313]
rep stosd
stosw
stosb
xor     eax, eax
push    ebx
mov     [ebp+block], eax
mov     [ebp+hrgn], eax
mov     [ebp+size], eax
lea     eax, [ebp+block]
push    eax
mov     ecx, esi
call    sub_41e1e9
push    [ebp+block]
lea     eax, [ebp+string]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+hrgn]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
lea     eax, [ebp+size]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42b33c
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f838
mov     ecx, esi
call    sub_41e1e9
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+string]
push    eax
call    sub_41bbf1
cmp     dword_42f858, 0
jnz     short loc_409b84
mov     edi, [ebp+hwnd]
push    20h
push    [ebp+hrgn]
mov     ecx, edi
push    0
call    sub_41bb8f
push    20h
mov     ecx, edi
push    [ebp+size]
push    0
call    sub_41bbc0
push    20h
push    0
push    40000h
mov     ecx, edi
call    sub_41bb8f
push    20h
push    400000h
push    0
mov     ecx, edi
call    sub_41bb8f
mov     edi, offset pjbits
lea     eax, [ebp+str2]
push    7
push    eax
push    offset amdi
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     short loc_409bf9
lea     eax, [ebp+x]
push    8
push    eax
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e68c
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42f858, 0
jnz     short loc_409bf9
mov     eax, [ebp+hwnd]
test    eax, eax
jz      short loc_409bcd
mov     eax, [eax+1ch]
lea     ecx, [ebp+rect]
push    ecx
push    eax
call    ds:getwindowrect
push    2
mov     ecx, [ebp+hwnd]
push    [ebp+y]
push    [ebp+x]
push    [ebp+rect.top]
push    [ebp+rect.left]
push    0
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
lea     eax, [ebp+str2]
push    7
push    eax
push    offset atry
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_409dd5
push    ebx
push    offset uelapse
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e714
mov     ecx, esi
call    sub_41e1e9
and     [ebp+size], 0
cmp     dword_42e714, 0
jle     short loc_409c87
mov     [ebp+hrgn], offset dword_42e6c0
and     [ebp+block], 0
lea     eax, [ebp+block]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
push    edi
call    sub_40d59d
mov     [ebp+ho], eax
add     eax, 210h
push    eax
call    sub_40d835
pop     ecx
pop     ecx
mov     ecx, [ebp+hrgn]
push    [ebp+ho]
mov     [ecx], eax
call    ds:deleteobject
inc     [ebp+size]
mov     eax, [ebp+size]
add     [ebp+hrgn], ebx
cmp     eax, dword_42e714
jl      short loc_409c42
push    ebx
push    offset dword_42f398
mov     ecx, esi
call    sub_41e1e9
and     [ebp+hrgn], 0
cmp     dword_42f398, 0
jle     loc_409d8d
mov     [ebp+size], offset dword_42ed58
mov     edi, [ebp+size]
push    ebx
mov     ecx, esi
lea     eax, [edi-320h]
push    eax
call    sub_41e1e9
push    ebx
push    edi
mov     ecx, esi
call    sub_41e1e9
mov     al, byte_42f890
mov     ecx, 9c3h
mov     [ebp+var_2ee8], al
xor     eax, eax
lea     edi, [ebp+var_2ee7]
and     [ebp+nnumberofbytestoread], 0
rep stosd
stosw
stosb
lea     eax, [ebp+nnumberofbytestoread]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
push    [ebp+nnumberofbytestoread]
lea     eax, [ebp+var_2ee8]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+var_2ee8]
push    eax
mov     eax, [ebp+size]
lea     ecx, [eax-640h]
call    ??4cstring@@qaeabv0@pbd@z
lea     edi, [ebp+var_2ee8]
or      ecx, 0ffffffffh
xor     eax, eax
and     [ebp+nnumberofbytestoread], 0
repne scasb
not     ecx
mov     edx, ecx
lea     edi, [ebp+var_2ee8]
shr     ecx, 2
rep stosd
mov     ecx, edx
push    ebx
and     ecx, 3
rep stosb
lea     eax, [ebp+nnumberofbytestoread]
mov     ecx, esi
push    eax
call    sub_41e1e9
push    [ebp+nnumberofbytestoread]
lea     eax, [ebp+var_2ee8]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+var_2ee8]
push    eax
mov     eax, [ebp+size]
lea     ecx, [eax+320h]
call    ??4cstring@@qaeabv0@pbd@z
inc     [ebp+hrgn]
mov     eax, [ebp+hrgn]
add     [ebp+size], ebx
cmp     eax, dword_42f398
jl      loc_409cac
mov     edi, offset pjbits
push    ebx
push    offset uitem
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f3a0
mov     ecx, esi
call    sub_41e1e9
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_8c]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset dword_42f3a4
call    sub_41c69e
lea     ecx, [ebp+var_8c]
call    sub_41c5b1
mov     ecx, [ebp+hwnd]
call    sub_40b3c8
lea     eax, [ebp+str2]
push    7
push    eax
push    offset acur
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     short loc_409e1d
and     [ebp+ho], eax
lea     eax, [ebp+ho]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
push    edi
call    sub_40d59d
mov     edi, eax
lea     eax, [edi+210h]
push    eax
call    sub_40d835
pop     ecx
mov     dword_42f850, eax
pop     ecx
push    edi
call    ds:deleteobject
lea     eax, [ebp+str2]
push    7
push    eax
push    offset awop
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     short loc_409e42
push    1
push    offset byte_42f85c
mov     ecx, esi
call    sub_41e1e9
lea     eax, [ebp+str2]
push    7
push    eax
push    offset abut
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_40a1d1
mov     al, byte_42f894
push    18h
mov     [ebp+var_184], al
pop     ecx
xor     eax, eax
lea     edi, [ebp+var_183]
rep stosd
stosw
stosb
xor     eax, eax
push    ebx
mov     [ebp+block], eax
mov     nnumberofbytestoread, eax
mov     dword_42d348, eax
lea     eax, [ebp+block]
push    eax
mov     ecx, esi
call    sub_41e1e9
push    [ebp+block]
lea     eax, [ebp+var_184]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+var_184]
mov     ecx, offset dword_42d32c
push    eax
call    ??4cstring@@qaeabv0@pbd@z
lea     eax, [ebp+x]
push    10h
push    eax
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f860
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f864
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f3a8
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d328
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42d328, 1
jnz     short loc_409f6f
mov     al, byte_42f898
push    18h
mov     [ebp+var_1e8], al
pop     ecx
xor     eax, eax
lea     edi, [ebp+var_1e7]
rep stosd
stosw
and     [ebp+hrgn], 0
push    ebx
stosb
lea     eax, [ebp+hrgn]
mov     ecx, esi
push    eax
call    sub_41e1e9
push    [ebp+hrgn]
lea     eax, [ebp+var_1e8]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+var_1e8]
mov     ecx, offset dword_42d330
push    eax
call    ??4cstring@@qaeabv0@pbd@z
push    1
push    offset byte_42d6ac
mov     ecx, esi
call    sub_41e1e9
mov     eax, dword_42f868
push    1
mov     ecx, esi
lea     eax, byte_42f70c[eax]
push    eax
call    sub_41e1e9
push    offset dword_42f89c
mov     ecx, offset dword_42d2f4
call    ??4cstring@@qaeabv0@pbd@z
mov     al, byte_42f8a0
push    18h
mov     [ebp+var_24c], al
pop     ecx
xor     eax, eax
lea     edi, [ebp+var_24b]
rep stosd
and     [ebp+var_58], 0
push    ebx
stosw
stosb
lea     eax, [ebp+var_58]
mov     ecx, esi
push    eax
call    sub_41e1e9
push    [ebp+var_58]
lea     eax, [ebp+var_24c]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+var_24c]
mov     ecx, offset dword_42d2f4
push    eax
call    ??4cstring@@qaeabv0@pbd@z
push    ebx
push    offset dword_42d324
mov     ecx, esi
call    sub_41e1e9
push    1
push    offset byte_42d2e8
mov     ecx, esi
call    sub_41e1e9
cmp     byte_42d2e8, 0
jnz     short loc_40a009
push    ebx
push    offset dword_42d2ec
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d2f0
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d2e4
mov     ecx, esi
call    sub_41e1e9
mov     eax, dword_42f844
push    ebx
mov     ecx, esi
lea     eax, ds:42e338h[eax*4]
push    eax
call    sub_41e1e9
push    1
push    offset byte_42d6a0
mov     ecx, esi
call    sub_41e1e9
cmp     byte_42d6a0, 3
jnz     short loc_40a09e
push    ebx
push    offset dword_42d6a4
mov     ecx, esi
call    sub_41e1e9
mov     al, byte_42f8a4
mov     ecx, 9c3h
mov     [ebp+var_55f8], al
xor     eax, eax
lea     edi, [ebp+var_55f7]
and     [ebp+var_50], 0
rep stosd
stosw
stosb
lea     eax, [ebp+var_50]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
push    [ebp+var_50]
lea     eax, [ebp+var_55f8]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+var_55f8]
mov     ecx, offset dword_42d6a8
push    eax
call    ??4cstring@@qaeabv0@pbd@z
push    ebx
push    offset dword_42d690
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42d690, 1
jnz     short loc_40a122
and     [ebp+hrgn], 0
lea     eax, [ebp+hrgn]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
push    0
push    offset dword_42d69c
push    [ebp+hrgn]
mov     edi, offset pjbits
push    edi
call    sub_40d992
and     [ebp+hrgn], 0
add     esp, 10h
lea     eax, [ebp+hrgn]
mov     ecx, esi
push    ebx
push    eax
call    sub_41e1e9
push    0
push    offset dword_42d698
push    [ebp+hrgn]
push    edi
call    sub_40d992
and     [ebp+hrgn], 0
add     esp, 10h
lea     eax, [ebp+hrgn]
mov     ecx, esi
push    ebx
push    eax
call    sub_41e1e9
push    0
push    offset dword_42d694
push    [ebp+hrgn]
push    edi
call    sub_40d992
add     esp, 10h
push    ebx
push    offset nnumberofbytestoread
mov     ecx, esi
call    sub_41e1e9
mov     eax, nnumberofbytestoread
shl     eax, 2
push    eax
call    _malloc
push    nnumberofbytestoread
mov     lpbuffer, eax
call    _malloc
mov     dword_42d354, eax
mov     eax, nnumberofbytestoread
pop     ecx
pop     ecx
shl     eax, 2
push    eax
mov     ecx, esi
push    lpbuffer
call    sub_41e1e9
push    nnumberofbytestoread
mov     ecx, esi
push    dword_42d354
call    sub_41e1e9
push    ebx
push    offset dword_42d348
mov     ecx, esi
call    sub_41e1e9
mov     eax, dword_42d348
shl     eax, 4
push    eax
call    _malloc
pop     ecx
mov     dword_42d34c, eax
mov     ecx, dword_42d348
shl     ecx, 4
push    ecx
push    eax
mov     ecx, esi
call    sub_41e1e9
push    [ebp+var_18]
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_184]
push    [ebp+var_1c]
push    [ebp+y]
push    [ebp+x]
push    eax
call    sub_408a96
inc     dword_42f868
lea     eax, [ebp+str2]
push    7
push    eax
push    offset ahkd
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_40a336
and     [ebp+size], eax
lea     eax, [ebp+size]
push    ebx
push    eax
mov     ecx, esi
mov     dword_42f848, 1
call    sub_41e1e9
lea     eax, [ebp+buffer]
push    104h
push    eax
call    ds:getsystemdirectorya
push    0
lea     eax, [ebp+buffer]
push    dword_42e658
push    eax
lea     eax, [ebp+filename]
push    offset drive
push    eax
call    __makepath
add     esp, 14h
mov     ecx, esi
call    ?getposition@cfile@@ubekxz
mov     [ebp+ho], eax
lea     eax, [ebp+filename]
push    80h
push    eax
call    ds:setfileattributesa
lea     eax, [ebp+filename]
push    eax
call    _remove
pop     ecx
lea     ecx, [ebp+var_a4]
call    ??0cexception@@qae@xz
mov     eax, off_42b8a0
and     [ebp+var_9c], 0
or      [ebp+var_98], 0ffffffffh
mov     edi, offset ??_7cfileexception@@6b@
push    0
lea     ecx, [ebp+var_94]
mov     [ebp+var_94], eax
mov     [ebp+var_a4], edi
call    ??4cstring@@qaeabv0@pbd@z
lea     ecx, [ebp+var_e8]
call    sub_41dfba
lea     eax, [ebp+var_a4]
lea     ecx, [ebp+var_e8]
push    eax
lea     eax, [ebp+filename]
push    9041h
push    eax
call    ?open@cfile@@uaehpbdipavcfileexception@@@z
test    eax, eax
jz      short loc_40a308
push    [ebp+size]
call    _malloc
pop     ecx
mov     [ebp+block], eax
push    [ebp+size]
mov     ecx, esi
push    eax
call    sub_41e1e9
push    [ebp+size]
lea     ecx, [ebp+var_e8]
push    [ebp+block]
call    ?write@cfile@@uaexpbxi@z
lea     ecx, [ebp+var_e8]
call    ?close@cfile@@uaexxz
push    [ebp+block]
call    _free
pop     ecx
mov     eax, [ebp+size]
mov     ecx, [ebp+ho]
add     ecx, eax
push    0
push    ecx
mov     ecx, esi
call    ?seek@cfile@@uaejji@z
lea     ecx, [ebp+var_e8]
call    ??1cfile@@uae@xz
lea     ecx, [ebp+var_94]
mov     [ebp+var_a4], edi
call    sub_41c5b1
lea     eax, [ebp+str2]
push    7
push    eax
push    offset atxt
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_40a4a5
mov     al, byte_42f8ac
push    31h
mov     byte ptr [ebp+var_508], al
pop     ecx
xor     eax, eax
lea     edi, [ebp+var_508+1]
rep stosd
stosw
and     [ebp+block], 0
push    ebx
stosb
lea     eax, [ebp+block]
mov     ecx, esi
push    eax
call    sub_41e1e9
push    [ebp+block]
lea     eax, [ebp+var_508]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+x]
push    10h
push    eax
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f860
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f864
mov     ecx, esi
call    sub_41e1e9
and     [ebp+var_11], 0
lea     eax, [ebp+var_11]
push    1
push    eax
mov     ecx, esi
call    sub_41e1e9
cmp     [ebp+var_11], 0
push    ebx
jnz     loc_40a464
push    offset color
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d31c
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d314
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d308
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d30c
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d310
mov     ecx, esi
call    sub_41e1e9
push    1
push    offset byte_42d318
mov     ecx, esi
call    sub_41e1e9
push    1
push    offset byte_42d319
mov     ecx, esi
call    sub_41e1e9
push    1
push    offset byte_42d31a
mov     ecx, esi
call    sub_41e1e9
push    [ebp+var_18]
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_508]
push    [ebp+var_1c]
push    [ebp+y]
push    [ebp+x]
push    eax
call    sub_408e8a
jmp     short loc_40a4a5
push    offset dword_42d304
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d300
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d2fc
mov     ecx, esi
call    sub_41e1e9
push    [ebp+var_18]
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_508]
push    [ebp+var_1c]
push    [ebp+y]
push    [ebp+x]
push    eax
call    sub_409071
lea     eax, [ebp+str2]
push    7
push    eax
push    offset agrb
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_40a588
mov     al, byte_42f8b0
push    31h
mov     byte ptr [ebp+var_5d0], al
pop     ecx
xor     eax, eax
lea     edi, [ebp+var_5d0+1]
rep stosd
stosw
and     [ebp+block], 0
push    ebx
stosb
lea     eax, [ebp+block]
mov     ecx, esi
push    eax
call    sub_41e1e9
push    [ebp+block]
lea     eax, [ebp+var_5d0]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+x]
push    10h
push    eax
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f860
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f864
mov     ecx, esi
call    sub_41e1e9
mov     eax, dword_42f84c
push    ebx
mov     ecx, esi
lea     eax, ds:42dcf8h[eax*4]
push    eax
call    sub_41e1e9
mov     eax, dword_42f84c
shl     eax, 2
cmp     dword_42dcf8[eax], 0
jnz     short loc_40a56d
lea     eax, dword_42d9d8[eax]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
mov     eax, dword_42f84c
push    ebx
mov     ecx, esi
lea     eax, ds:42d6b8h[eax*4]
push    eax
call    sub_41e1e9
push    [ebp+var_18]
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_5d0]
push    [ebp+var_1c]
push    [ebp+y]
push    [ebp+x]
push    eax
call    sub_408dae
lea     eax, [ebp+str2]
push    7
push    eax
push    offset aedi
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_40a7ae
lea     eax, [ebp+x]
push    10h
push    eax
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f860
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f864
mov     ecx, esi
call    sub_41e1e9
push    1
push    offset byte_42d345
mov     ecx, esi
call    sub_41e1e9
push    1
push    offset byte_42d344
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d340
mov     ecx, esi
call    sub_41e1e9
push    offset dword_42f8b4
mov     ecx, offset dword_42d2f4
call    ??4cstring@@qaeabv0@pbd@z
mov     al, byte_42f8b8
push    18h
mov     [ebp+var_2b0], al
pop     ecx
xor     eax, eax
lea     edi, [ebp+var_2af]
rep stosd
and     [ebp+var_54], 0
push    ebx
stosw
stosb
lea     eax, [ebp+var_54]
mov     ecx, esi
push    eax
call    sub_41e1e9
push    [ebp+var_54]
lea     eax, [ebp+var_2b0]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+var_2b0]
mov     ecx, offset dword_42d2f4
push    eax
call    ??4cstring@@qaeabv0@pbd@z
push    ebx
push    offset dword_42f7f4
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42f7f4, 1
jnz     short loc_40a6a6
push    ebx
push    offset dword_42f7f8
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f7fc
mov     ecx, esi
call    sub_41e1e9
mov     ecx, [ebp+hwnd]
mov     edi, offset pjbits
lea     eax, [ebp+var_74]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset dword_42f7f0
call    sub_41c69e
lea     ecx, [ebp+var_74]
call    sub_41c5b1
jmp     short loc_40a6ab
mov     edi, offset pjbits
cmp     dword_42f7f4, 2
jnz     loc_40a79a
and     nnumberofbytestoread, 0
push    ebx
push    offset nnumberofbytestoread
mov     ecx, esi
call    sub_41e1e9
mov     eax, nnumberofbytestoread
shl     eax, 2
push    eax
call    _malloc
push    nnumberofbytestoread
mov     lpbuffer, eax
call    _malloc
mov     dword_42d354, eax
mov     eax, nnumberofbytestoread
pop     ecx
pop     ecx
shl     eax, 2
push    eax
mov     ecx, esi
push    lpbuffer
call    sub_41e1e9
push    nnumberofbytestoread
mov     ecx, esi
push    dword_42d354
call    sub_41e1e9
push    ebx
push    offset dword_42f80c
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f810
mov     ecx, esi
call    sub_41e1e9
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_84]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset dword_42f800
call    sub_41c69e
lea     ecx, [ebp+var_84]
call    sub_41c5b1
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_64]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset dword_42f804
call    sub_41c69e
lea     ecx, [ebp+var_64]
call    sub_41c5b1
mov     ecx, [ebp+hwnd]
lea     eax, [ebp+var_68]
push    edi
push    eax
call    sub_40b773
push    eax
mov     ecx, offset dword_42f808
call    sub_41c69e
lea     ecx, [ebp+var_68]
call    sub_41c5b1
push    [ebp+var_18]
mov     ecx, [ebp+hwnd]
push    [ebp+var_1c]
push    [ebp+y]
push    [ebp+x]
call    sub_409151
lea     eax, [ebp+str2]
push    7
push    eax
push    offset abmp
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_40a8ef
mov     al, byte_42f8bc
push    31h
mov     [ebp+var_440], al
pop     ecx
xor     eax, eax
lea     edi, [ebp+var_43f]
rep stosd
stosw
stosb
lea     eax, [ebp+block]
xor     edx, edx
and     [ebp+var_40], dl
push    ebx
push    eax
mov     ecx, esi
mov     [ebp+hrgn], edx
mov     [ebp+size], edx
mov     [ebp+block], edx
call    sub_41e1e9
lea     eax, [ebp+var_60]
push    0
push    eax
push    [ebp+block]
push    offset pjbits
call    sub_40d992
add     esp, 10h
cmp     eax, 1
jnz     short loc_40a81c
mov     [ebp+hrgn], eax
mov     eax, dword_42f874
mov     edi, [ebp+hwnd]
push    [ebp+var_60]
lea     ecx, [edi+eax*8+1bch]
call    sub_41fbc4
lea     eax, [ebp+x]
push    10h
push    eax
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f860
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f864
mov     ecx, esi
call    sub_41e1e9
lea     eax, [ebp+var_40]
push    1
push    eax
mov     ecx, esi
call    sub_41e1e9
movzx   eax, [ebp+var_40]
dec     eax
jz      short loc_40a89a
dec     eax
jz      short loc_40a891
dec     eax
jnz     short loc_40a8c6
push    10h
push    offset dword_42e698
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e690
mov     ecx, esi
call    sub_41e1e9
jmp     short loc_40a8c6
push    18h
push    offset dword_42e6a8
jmp     short loc_40a87b
and     [ebp+size], 0
lea     eax, [ebp+size]
push    ebx
push    eax
mov     ecx, esi
call    sub_41e1e9
push    [ebp+size]
lea     eax, [ebp+var_440]
mov     ecx, esi
push    eax
call    sub_41e1e9
mov     eax, [ebp+size]
and     [ebp+eax+var_440], 0
cmp     [ebp+hrgn], 1
jnz     short loc_40a8e9
push    dword ptr [ebp+var_40]
lea     eax, [ebp+var_440]
mov     ecx, edi
push    eax
push    [ebp+var_18]
push    [ebp+var_1c]
push    [ebp+y]
push    [ebp+x]
call    sub_4092c7
inc     dword_42f874
lea     eax, [ebp+str2]
push    7
push    eax
push    offset atsl
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_40abf9
lea     eax, [ebp+x]
push    10h
push    eax
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f860
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f864
mov     ecx, esi
call    sub_41e1e9
lea     eax, [ebp+var_3c]
xor     edi, edi
push    ebx
push    eax
mov     ecx, esi
mov     [ebp+var_3c], edi
call    sub_41e1e9
mov     eax, [ebp+var_3c]
inc     eax
push    eax
call    _malloc
pop     ecx
mov     [ebp+block], eax
push    [ebp+var_3c]
mov     ecx, esi
push    eax
call    sub_41e1e9
mov     eax, [ebp+var_3c]
mov     ecx, [ebp+block]
push    ebx
push    offset dword_42e684
and     byte ptr [ecx+eax], 0
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e680
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42e680, edi
jnz     short loc_40a9ae
push    ebx
push    offset dword_42f83c
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f840
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e688
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42e680, 1
jnz     short loc_40aa1f
push    ebx
push    offset udelay
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e664
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e668
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e66c
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e670
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e674
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e678
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42e67c
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42e680, 2
jnz     loc_40abd9
lea     eax, [ebp+size]
push    ebx
push    eax
mov     ecx, esi
mov     [ebp+size], edi
call    sub_41e1e9
mov     ecx, esi
call    ?getposition@cfile@@ubekxz
mov     ecx, [ebp+hwnd]
mov     [ebp+ho], eax
lea     eax, [ebp+var_78]
push    eax
call    sub_40b6a5
push    eax
mov     ecx, offset lpfilename
call    sub_41c69e
lea     ecx, [ebp+var_78]
call    sub_41c5b1
push    80h
push    lpfilename
call    ds:setfileattributesa
push    lpfilename
call    _remove
pop     ecx
lea     ecx, [ebp+var_b8]
call    ??0cexception@@qae@xz
mov     eax, off_42b8a0
or      [ebp+var_ac], 0ffffffffh
push    edi
lea     ecx, [ebp+var_a8]
mov     [ebp+var_a8], eax
mov     [ebp+var_b8], offset ??_7cfileexception@@6b@
mov     [ebp+var_b0], edi
call    ??4cstring@@qaeabv0@pbd@z
lea     ecx, [ebp+var_f8]
call    sub_41dfba
lea     eax, [ebp+var_b8]
lea     ecx, [ebp+var_f8]
push    eax
push    9041h
push    lpfilename
call    ?open@cfile@@uaehpbdipavcfileexception@@@z
test    eax, eax
jz      short loc_40ab22
push    [ebp+size]
call    _malloc
pop     ecx
mov     [ebp+hrgn], eax
push    [ebp+size]
mov     ecx, esi
push    eax
call    sub_41e1e9
push    [ebp+size]
lea     ecx, [ebp+var_f8]
push    [ebp+hrgn]
call    ?write@cfile@@uaexpbxi@z
lea     ecx, [ebp+var_f8]
call    ?close@cfile@@uaexxz
push    [ebp+hrgn]
call    _free
pop     ecx
mov     eax, [ebp+size]
mov     ecx, [ebp+ho]
add     ecx, eax
push    edi
push    ecx
mov     ecx, esi
call    ?seek@cfile@@uaejji@z
push    ebx
push    offset dword_42f7dc
mov     ecx, esi
call    sub_41e1e9
cmp     dword_42f7dc, edi
jz      short loc_40ab55
push    ebx
push    offset dword_42f7e0
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42f7e4
mov     ecx, esi
call    sub_41e1e9
push    offset dword_42f8c0
mov     ecx, offset dword_42f7e8
call    ??4cstring@@qaeabv0@pbd@z
cmp     dword_42f7e4, edi
jz      short loc_40abb9
lea     eax, [ebp+hrgn]
push    ebx
push    eax
mov     ecx, esi
mov     [ebp+hrgn], edi
call    sub_41e1e9
mov     eax, [ebp+hrgn]
inc     eax
push    eax
call    _malloc
pop     ecx
mov     edi, eax
push    [ebp+hrgn]
mov     ecx, esi
push    edi
call    sub_41e1e9
mov     eax, [ebp+hrgn]
push    edi
mov     ecx, offset dword_42f7e8
and     byte ptr [edi+eax], 0
call    ??4cstring@@qaeabv0@pbd@z
push    edi
call    _free
pop     ecx
lea     ecx, [ebp+var_f8]
call    ??1cfile@@uae@xz
lea     ecx, [ebp+var_a8]
mov     [ebp+var_b8], offset ??_7cfileexception@@6b@
call    sub_41c5b1
push    [ebp+var_18]
mov     ecx, [ebp+hwnd]
push    [ebp+var_1c]
push    [ebp+y]
push    [ebp+x]
push    [ebp+block]
call    sub_408b4d
push    [ebp+block]
call    _free
pop     ecx
lea     eax, [ebp+str2]
push    7
push    eax
push    offset ascl
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     loc_40ace2
lea     eax, [ebp+x]
push    10h
push    eax
mov     ecx, esi
call    sub_41e1e9
push    1
push    offset byte_42d2e0
mov     ecx, esi
call    sub_41e1e9
push    1
push    offset byte_42d2d1
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d2dc
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d2d8
mov     ecx, esi
call    sub_41e1e9
push    ebx
push    offset dword_42d2d4
mov     ecx, esi
call    sub_41e1e9
push    1
push    offset byte_42d2d0
mov     ecx, esi
call    sub_41e1e9
push    offset dword_42f8c4
mov     ecx, offset dword_42d2f4
call    ??4cstring@@qaeabv0@pbd@z
mov     al, byte_42f8c8
push    18h
mov     [ebp+var_378], al
pop     ecx
xor     eax, eax
lea     edi, [ebp+var_377]
rep stosd
and     [ebp+var_5c], 0
push    ebx
stosw
stosb
lea     eax, [ebp+var_5c]
mov     ecx, esi
push    eax
call    sub_41e1e9
push    [ebp+var_5c]
lea     eax, [ebp+var_378]
mov     ecx, esi
push    eax
call    sub_41e1e9
lea     eax, [ebp+var_378]
mov     ecx, offset dword_42d2f4
push    eax
call    ??4cstring@@qaeabv0@pbd@z
push    [ebp+var_18]
mov     ecx, [ebp+hwnd]
push    [ebp+var_1c]
push    [ebp+y]
push    [ebp+x]
call    sub_409224
lea     eax, [ebp+var_d8]
push    7
push    eax
mov     ecx, esi
call    sub_41e1e9
test    eax, eax
jnz     loc_4096ba
pop     ebx
mov     ecx, esi
call    ?close@cfile@@uaexxz
lea     ecx, [ebp+var_bc]
mov     [ebp+var_cc], offset ??_7cfileexception@@6b@
call    sub_41c5b1
pop     edi
pop     esi
leave
retn
push    ebp
mov     ebp, esp
cmp     dword ptr [ebp+10h], 6
push    ebx
push    esi
push    edi
mov     edi, [ebp+8]
mov     ebx, ecx
jnz     loc_40adb1
push    1
mov     ecx, edi
call    sub_41f663
mov     eax, dword_42f84c
xor     esi, esi
test    eax, eax
jle     short loc_40ad59
lea     ecx, [ebx+0e48h]
mov     edx, [ebp+0ch]
cmp     edx, [ecx]
jz      short loc_40ad6e
inc     esi
add     ecx, 4
cmp     esi, eax
jl      short loc_40ad4a
push    dword ptr [ebp+10h]
push    dword ptr [ebp+0ch]
mov     ecx, ebx
push    edi
call    ?onctlcolor@cdialog@@iaepauhbrush__@@pavcdc@@pavcwnd@@i@z
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    2
mov     ecx, edi
call    sub_41f663
shl     esi, 2
cmp     dword_42dcf8[esi], 0
jnz     short loc_40adad
mov     eax, [edi]
push    dword_42d9d8[esi]
mov     ecx, edi
call    dword ptr [eax+30h]
mov     eax, [edi]
push    dword_42d6b8[esi]
lea     esi, dword_42d6b8[esi]
mov     ecx, edi
call    dword ptr [eax+2ch]
push    dword ptr [esi]
call    ds:createsolidbrush
jmp     short loc_40ad67
push    6
jmp     short loc_40ad5c
cmp     dword ptr [ebp+10h], 1
jz      short loc_40ad59
cmp     dword ptr [ebp+10h], 2
jz      short loc_40ad59
mov     ecx, [ebp+8]
push    1
call    sub_41f663
push    dword_42b33c
jmp     short loc_40ada5
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_4192d4
cmp     dword_42e68c, 0
jnz     short loc_40ae02
movzx   eax, word ptr [ebp+10h]
movzx   ecx, word ptr [ebp+0ch]
shl     eax, 10h
or      eax, ecx
push    eax
push    2
push    0a1h
push    dword ptr [esi+1ch]
call    ds:postmessagea
cmp     dword_42f858, 1
jnz     short loc_40ae7f
cmp     dword_42d368, 1
jnz     short loc_40ae7f
push    0
call    ds:getdc
push    eax
lea     ecx, [esi+128h]
call    sub_41f438
mov     eax, [ebp+0ch]
push    dword ptr [esi+1ch]
mov     [esi+13ch], eax
mov     eax, [ebp+10h]
mov     dword ptr [esi+138h], 1
mov     [esi+140h], eax
call    ds:setcapture
push    eax
call    sub_41936d
lea     eax, [ebp+0ch]
push    eax
push    dword ptr [esi+1ch]
call    ds:clienttoscreen
push    dword ptr [ebp+10h]
mov     ecx, esi
push    dword ptr [ebp+0ch]
call    sub_40afab
mov     eax, [ebp+0ch]
mov     [esi+144h], eax
mov     eax, [ebp+10h]
mov     [esi+148h], eax
pop     esi
pop     ebp
retn    0ch
push    esi
mov     esi, ecx
push    [esp+4+lparam]
push    0
push    407h
push    dword ptr [esi+170h]
call    ds:sendmessagea
push    [esp+4+lparam]
mov     ecx, esi
call    ?pretranslatemessage@cdialog@@uaehpautagmsg@@@z
pop     esi
retn    4
push    esi
push    edi
xor     edi, edi
mov     esi, ecx
cmp     dword_42f858, edi
jz      short loc_40af3a
cmp     dword_42d368, edi
jz      short loc_40af3a
cmp     [esi+138h], edi
lea     eax, [esi+138h]
jz      short loc_40af3a
mov     [eax], edi
call    ds:releasecapture
push    dword ptr [esi+148h]
mov     ecx, esi
push    dword ptr [esi+144h]
call    sub_40afab
lea     ecx, [esi+128h]
call    sub_41f46f
push    eax
push    edi
call    ds:releasedc
lea     eax, [esp+10h]
push    eax
push    dword ptr [esi+1ch]
call    ds:clienttoscreen
mov     eax, [esp+14h]
push    5
sub     eax, [esi+140h]
push    edi
push    edi
mov     ecx, esi
push    eax
mov     eax, [esp+20h]
sub     eax, [esi+13ch]
push    eax
push    edi
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
push    5
mov     ecx, esi
call    sub_41bcd7
jmp     short loc_40af41
mov     ecx, esi
call    sub_4192d4
pop     edi
pop     esi
retn    0ch
xor     eax, eax
push    edi
cmp     dword_42f858, eax
mov     edi, ecx
jz      short loc_40afa0
cmp     dword_42d368, eax
jz      short loc_40afa0
cmp     [edi+138h], eax
jz      short loc_40afa0
lea     eax, [esp+0ch]
push    esi
push    eax
push    dword ptr [edi+1ch]
call    ds:clienttoscreen
push    dword ptr [edi+148h]
lea     esi, [edi+144h]
mov     ecx, edi
push    dword ptr [esi]
call    sub_40afab
mov     eax, [esp+10h]
mov     ecx, [esp+14h]
mov     [esi], eax
mov     [esi+4], ecx
push    ecx
push    eax
mov     ecx, edi
call    sub_40afab
pop     esi
jmp     short loc_40afa7
mov     ecx, edi
call    sub_4192d4
pop     edi
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    esi
push    edi
push    1
push    1
push    0
mov     esi, ecx
push    0
call    ds:createrectrgn
and     [ebp+hbr], 0
push    0ff0000h
mov     edi, eax
mov     [ebp+var_8], offset ??_7cbrush@@6b@
call    ds:createsolidbrush
push    eax
lea     ecx, [ebp+var_8]
call    sub_41fbc4
lea     eax, [esi+120h]
test    eax, eax
jz      short loc_40aff0
mov     eax, [eax+4]
push    5
push    0
push    eax
push    edi
call    ds:combinergn
mov     eax, [ebp+arg_4]
sub     eax, [esi+140h]
push    eax
mov     eax, [ebp+arg_0]
sub     eax, [esi+13ch]
push    eax
push    edi
call    ds:offsetrgn
add     esi, 12ch
push    6
push    dword ptr [esi]
call    ds:setrop2
push    2
push    2
push    [ebp+hbr]
push    edi
push    dword ptr [esi]
call    ds:framergn
lea     ecx, [ebp+var_8]
call    sub_41fc1b
push    edi
call    ds:deleteobject
lea     ecx, [ebp+var_8]
mov     [ebp+var_8], offset ??_7cgdiobject@@6b@
call    sub_41fc1b
pop     edi
pop     esi
leave
retn    8
push    ebp
mov     ebp, esp
sub     esp, 1ch
push    edi
xor     edi, edi
cmp     dword_42f858, edi
jnz     short loc_40b073
call    sub_4192d4
jmp     short loc_40b0ea
mov     eax, [ebp+8]
cmp     eax, edi
jnz     short loc_40b07f
mov     [ebp+8], edi
jmp     short loc_40b085
mov     eax, [eax+4]
mov     [ebp+8], eax
push    ebx
push    esi
lea     esi, [ecx+14ch]
cmp     esi, edi
jnz     short loc_40b095
xor     eax, eax
jmp     short loc_40b098
mov     eax, [esi+4]
lea     ecx, [ebp-1ch]
push    ecx
push    18h
push    eax
call    ds:getobjecta
push    edi
call    ds:createcompatibledc
cmp     esi, edi
mov     ebx, eax
jnz     short loc_40b0b6
xor     esi, esi
jmp     short loc_40b0b9
mov     esi, [esi+4]
push    esi
mov     esi, ds:selectobject
push    ebx
call    esi
push    0cc0020h
push    edi
push    edi
push    ebx
push    dword ptr [ebp-14h]
mov     [ebp-4], eax
push    dword ptr [ebp-18h]
push    edi
push    edi
push    dword ptr [ebp+8]
call    ds:bitblt
push    dword ptr [ebp-4]
push    ebx
call    esi
push    1
pop     eax
pop     esi
pop     ebx
pop     edi
leave
retn    4
push    esi
call    sub_4192d4
xor     esi, esi
cmp     dword_42f854, esi
jle     short loc_40b123
push    edi
mov     edi, offset dword_42d370
push    0
push    0
push    9c2h
push    dword ptr [edi]
call    ds:sendmessagea
inc     esi
add     edi, 4
cmp     esi, dword_42f854
jl      short loc_40b105
pop     edi
push    1
pop     eax
pop     esi
cmp     [esp+4], eax
jz      short loc_40b13d
cmp     dword ptr [esp+4], 2
jz      short loc_40b13d
and     dword_42b260, 0
jmp     short locret_40b142
mov     dword_42b260, eax
retn    0ch
call    sub_41d1ff
xor     eax, eax
retn    8
push    6
call    sub_41bcd7
xor     eax, eax
retn    8
push    esi
mov     esi, ecx
push    0
call    sub_41bcd7
cmp     dword_42f3a0, 0
jz      short loc_40b179
lea     ecx, [esi+84h]
call    sub_406581
xor     eax, eax
pop     esi
retn    8
mov     eax, dword_42f850
test    eax, eax
jz      short loc_40b194
push    eax
call    ds:setcursor
push    1
pop     eax
jmp     short locret_40b199
call    sub_4192d4
retn    0ch
push    ebx
push    ebp
push    esi
push    edi
mov     esi, ecx
call    ?ondestroy@cwnd@@iaexxz
mov     eax, dword_42f6e0
mov     ebx, ds:sndplaysounda
cmp     eax, 3e8h
jz      short loc_40b1c4
push    4
push    pszsound[eax*4]
call    ebx
xor     ebp, ebp
cmp     dword_42f6e8, ebp
jz      short loc_40b1db
push    ebp
push    ebp
push    dword_42f6e4
call    sub_4205e1
cmp     esi, ebp
jnz     short loc_40b1e3
xor     eax, eax
jmp     short loc_40b1e6
mov     eax, [esi+1ch]
push    ebp
push    ebp
mov     edx, offset aondestroy
push    eax
mov     edi, edx
or      ecx, 0ffffffffh
xor     eax, eax
push    1
repne scasb
not     ecx
dec     ecx
push    1
push    ecx
push    edx
call    sub_40469c
add     esp, 1ch
push    2
push    ebp
call    ebx
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
push    esi
mov     esi, ds:getasynckeystate
push    edi
push    10h
xor     edi, edi
call    esi
test    ax, ax
jz      short loc_40b22a
mov     edi, 100h
push    11h
call    esi
test    ax, ax
jz      short loc_40b239
or      edi, 200h
push    12h
call    esi
test    ax, ax
jz      short loc_40b248
or      edi, 400h
xor     esi, esi
cmp     dword_42f844, esi
jle     short loc_40b284
mov     ecx, [esp+8+arg_4]
movzx   eax, di
lea     edi, [eax+ecx]
cmp     dword_42e338[esi*4], edi
jnz     short loc_40b27b
push    0
push    0
push    16adh
push    dword_42e018[esi*4]
call    ds:postmessagea
inc     esi
cmp     esi, dword_42f844
jl      short loc_40b25c
pop     edi
pop     esi
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 528h
push    ebx
push    esi
push    edi
lea     ecx, [ebp+var_20]
call    ??0cexception@@qae@xz
mov     eax, off_42b8a0
or      [ebp+var_14], 0ffffffffh
xor     ebx, ebx
lea     ecx, [ebp+var_10]
push    ebx
mov     [ebp+var_10], eax
mov     [ebp+var_20], offset ??_7cfileexception@@6b@
mov     [ebp+var_18], ebx
call    ??4cstring@@qaeabv0@pbd@z
lea     eax, [ebp+filename]
push    104h
push    eax
push    ebx
call    ds:getmodulefilenamea
test    eax, eax
mov     edi, 8040h
mov     esi, offset pjbits
jz      short loc_40b2fe
lea     eax, [ebp+var_20]
mov     ecx, esi
push    eax
lea     eax, [ebp+filename]
push    edi
push    eax
call    ?open@cfile@@uaehpbdipavcfileexception@@@z
test    eax, eax
jz      short loc_40b2fe
push    1
pop     ebx
jmp     loc_40b3b2
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
push    dword ptr [eax+10h]
lea     ecx, [ebp+lpfilename]
call    sub_41c61f
push    offset aexe
lea     ecx, [ebp+lpfilename]
call    sub_41c859
lea     eax, [ebp+var_20]
mov     ecx, esi
push    eax
push    edi
push    [ebp+lpfilename]
call    ?open@cfile@@uaehpbdipavcfileexception@@@z
test    eax, eax
jz      short loc_40b333
push    1
pop     ebx
jmp     short loc_40b3aa
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
lea     ecx, [ebp+fullpath]
push    dword ptr [eax+8ch]
call    sub_41c61f
lea     eax, [ebp+ext]
push    eax
lea     eax, [ebp+var_428]
push    eax
lea     eax, [ebp+dir]
push    eax
lea     eax, [ebp+drive]
push    eax
push    [ebp+fullpath]
call    __splitpath
push    ebx
lea     eax, [ebp+dir]
push    [ebp+lpfilename]
push    eax
lea     eax, [ebp+drive]
push    eax
lea     eax, [ebp+buffer]
push    eax
call    __makepath
add     esp, 28h
lea     eax, [ebp+var_20]
mov     ecx, esi
push    eax
lea     eax, [ebp+buffer]
push    edi
push    eax
call    ?open@cfile@@uaehpbdipavcfileexception@@@z
test    eax, eax
jz      short loc_40b3a2
push    1
pop     ebx
lea     ecx, [ebp+fullpath]
call    sub_41c5b1
lea     ecx, [ebp+lpfilename]
call    sub_41c5b1
lea     ecx, [ebp+var_10]
mov     [ebp+var_20], offset ??_7cfileexception@@6b@
call    sub_41c5b1
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     edx, dword_42e714
mov     eax, ecx
push    ebx
push    esi
lea     ecx, [eax+84h]
cmp     edx, 1
mov     esi, offset dword_42e6c0
mov     [ebp+var_8], ecx
push    464h
jle     short loc_40b410
push    uelapse
mov     ebx, 8eh
push    edx
push    esi
push    dword_42f3a4
push    ebx
push    eax
call    sub_4066fe
test    eax, eax
jnz     short loc_40b446
jmp     short loc_40b431
push    dword_42e6c0
mov     ebx, 8eh
push    dword_42f3a4
push    ebx
push    eax
call    sub_40662a
test    eax, eax
jnz     short loc_40b446
mov     esi, offset dword_42e6c0
push    esi
call    ds:deleteobject
push    esi
call    _free
pop     ecx
xor     eax, eax
jmp     loc_40b516
push    edi
mov     edi, ds:deleteobject
push    esi
call    edi
push    esi
call    _free
pop     ecx
xor     esi, esi
push    ebx
lea     ecx, [ebp+var_10]
mov     [ebp+var_10], offset ??_7cmenu@@6b@
mov     [ebp+hmenu], esi
call    sub_406a6e
push    esi
push    [ebp+hmenu]
call    ds:getsubmenu
push    eax
call    sub_41d4c2
mov     ebx, eax
push    400h
push    esi
push    dword ptr [ebx+4]
call    ds:removemenu
cmp     dword_42f398, esi
jle     short loc_40b4c9
mov     eax, offset dword_42ea38
mov     [ebp+var_4], eax
jmp     short loc_40b4a2
mov     eax, [ebp+var_4]
mov     ecx, dword_42b25c
push    dword ptr [eax-320h]
add     ecx, esi
push    ecx
push    dword ptr [eax]
push    dword ptr [ebx+4]
call    ds:appendmenua
add     [ebp+var_4], 4
inc     esi
cmp     esi, dword_42f398
jl      short loc_40b49f
lea     ecx, [ebp+var_10]
call    sub_41d522
push    uitem
mov     ecx, [ebp+var_8]
mov     esi, eax
push    esi
call    sub_4065d3
lea     eax, [ebp+var_10]
neg     eax
sbb     eax, eax
and     eax, [ebp+hmenu]
push    eax
call    edi
push    esi
call    edi
cmp     dword_42f3a0, 0
pop     edi
jz      short loc_40b504
mov     ecx, [ebp+var_8]
call    sub_40655e
lea     ecx, [ebp+var_10]
mov     [ebp+var_10], offset ??_7cmenu@@6b@
call    sub_41d54c
push    1
pop     eax
pop     esi
pop     ebx
leave
retn
push    dword ptr [esp+8]
mov     eax, [ecx+84h]
add     ecx, 84h
push    dword ptr [esp+8]
call    dword ptr [eax+0ch]
retn    8
push    ebp
mov     ebp, esp
push    esi
xor     esi, esi
cmp     dword_42f398, esi
push    edi
mov     edi, ecx
jz      loc_40b5e8
cmp     [ebp+arg_c], esi
jnz     loc_40b5e8
mov     eax, [ebp+arg_0]
sub     eax, dword_42b25c
js      loc_40b5e5
cmp     eax, 64h
jg      short loc_40b5e5
cmp     [ebp+arg_4], esi
jnz     short loc_40b5e8
shl     eax, 2
mov     ecx, dword_42ed58[eax]
sub     ecx, esi
jz      short loc_40b5d3
dec     ecx
jz      short loc_40b5ca
dec     ecx
jz      short loc_40b5ad
dec     ecx
jz      short loc_40b58f
dec     ecx
jnz     short loc_40b5e0
push    6
mov     ecx, edi
call    sub_41bcd7
jmp     short loc_40b5e0
push    5
mov     ecx, edi
call    sub_41bcd7
cmp     dword_42f3a0, esi
jz      short loc_40b5e0
lea     ecx, [edi+84h]
call    sub_40655e
jmp     short loc_40b5e0
push    esi
mov     ecx, edi
call    sub_41bcd7
cmp     dword_42f3a0, esi
jz      short loc_40b5e0
lea     ecx, [edi+84h]
call    sub_406581
jmp     short loc_40b5e0
mov     ecx, edi
call    sub_41d1ff
jmp     short loc_40b5e0
push    esi
push    esi
push    dword_42f078[eax]
call    sub_4205e1
push    1
pop     eax
jmp     short loc_40b5fb
push    esi
jmp     short loc_40b5eb
push    [ebp+arg_c]
push    [ebp+buf1]
mov     ecx, edi
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_41ca8e
pop     edi
pop     esi
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 30h
mov     [ebp+var_8], ecx
push    ebx
push    esi
lea     ecx, [ebp+var_30]
call    ??0ccmdui@@qae@xz
mov     esi, [ebp+arg_0]
mov     ebx, ds:getmenuitemcount
and     [ebp+npos], 0
push    dword ptr [esi+4]
call    ebx
test    eax, eax
jbe     short loc_40b683
push    edi
push    [ebp+npos]
push    dword ptr [esi+4]
call    ds:getsubmenu
push    eax
call    sub_41d4c2
test    eax, eax
jnz     short loc_40b675
push    dword ptr [esi+4]
call    ebx
xor     edi, edi
mov     [ebp+var_10], eax
test    eax, eax
jbe     short loc_40b675
push    edi
mov     [ebp+var_28], edi
push    dword ptr [esi+4]
call    ds:getmenuitemid
push    0
lea     ecx, [ebp+var_30]
push    [ebp+var_8]
mov     [ebp+var_2c], eax
mov     [ebp+var_24], esi
call    sub_41c277
inc     edi
cmp     edi, [ebp+var_10]
jb      short loc_40b64f
push    dword ptr [esi+4]
inc     [ebp+npos]
call    ebx
cmp     [ebp+npos], eax
jb      short loc_40b62b
pop     edi
pop     esi
pop     ebx
leave
retn    4
cmp     dword_42f398, 0
jnz     short loc_40b699
call    sub_4192d4
jmp     short locret_40b6a2
push    dword ptr [esp+4]
call    sub_40b601
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, off_42b8a0
push    105h
lea     ecx, [ebp+var_8]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
mov     [ebp+filename], eax
call    sub_41c8ad
push    eax
push    104h
call    ds:gettemppatha
push    0ffffffffh
lea     ecx, [ebp+var_8]
call    ?releasebuffer@cstring@@qaexh@z
call    ds:gettickcount
push    eax
lea     eax, [ebp+var_c]
push    offset ptr
push    eax
call    sub_418176
add     esp, 0ch
push    64h
call    ds:sleep
lea     eax, [ebp+var_c]
push    eax
lea     eax, [ebp+var_8]
push    eax
lea     eax, [ebp+var_10]
push    eax
call    sub_41c794
push    eax
lea     ecx, [ebp+filename]
call    sub_41c69e
lea     ecx, [ebp+var_10]
call    sub_41c5b1
push    0
push    [ebp+filename]
call    __access
pop     ecx
test    eax, eax
pop     ecx
jz      short loc_40b6dc
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+filename]
push    eax
call    sub_41c326
lea     ecx, [ebp+filename]
call    sub_41c5b1
lea     ecx, [ebp+var_c]
call    sub_41c5b1
lea     ecx, [ebp+var_8]
call    sub_41c5b1
mov     eax, [ebp+arg_0]
leave
retn    4
cmp     dword_42f838, 0
jz      short loc_40b76d
push    dword ptr [esp+4]
call    ?onhelpinfo@cwnd@@iaehpautaghelpinfo@@@z
jmp     short locret_40b770
push    1
pop     eax
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    esi
push    edi
push    offset dword_42f8cc
lea     ecx, [ebp+var_8]
call    sub_41c61f
and     [ebp+buffer], 0
lea     eax, [ebp+buffer]
mov     esi, offset pjbits
push    4
push    eax
mov     ecx, esi
call    sub_41e1e9
mov     eax, [ebp+buffer]
inc     eax
push    eax
call    _malloc
pop     ecx
mov     edi, eax
push    [ebp+buffer]
mov     ecx, esi
push    edi
call    sub_41e1e9
mov     eax, [ebp+buffer]
push    edi
lea     ecx, [ebp+var_8]
and     byte ptr [edi+eax], 0
call    ??4cstring@@qaeabv0@pbd@z
push    edi
call    _free
pop     ecx
lea     eax, [ebp+var_8]
mov     ecx, [ebp+arg_0]
push    eax
call    sub_41c326
lea     ecx, [ebp+var_8]
call    sub_41c5b1
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
leave
retn    8
push    esi
mov     esi, ecx
lea     ecx, [esi+14h]
call    sub_41c5b1
lea     ecx, [esi+0ch]
call    sub_41c5b1
lea     ecx, [esi+4]
call    sub_41c5b1
pop     esi
retn
push    ebx
push    ebp
push    esi
mov     esi, ecx
push    edi
lea     ecx, [esi+0ce4h]
call    sub_41c5b1
mov     ebx, 0c8h
lea     edi, [esi+0cd8h]
mov     ebp, ebx
sub     edi, 4
mov     ecx, edi
call    sub_41c5b1
dec     ebp
jnz     short loc_40b824
add     esi, 378h
sub     esi, 4
mov     ecx, esi
call    sub_41c5b1
dec     ebx
jnz     short loc_40b837
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
mov     eax, ecx
mov     edx, 0c8h
push    esi
push    edi
lea     ecx, [eax+58h]
mov     esi, edx
mov     edi, off_42b8a0
mov     [ecx], edi
add     ecx, 4
dec     esi
jnz     short loc_40b857
lea     ecx, [eax+9b8h]
mov     esi, off_42b8a0
mov     [ecx], esi
add     ecx, 4
dec     edx
jnz     short loc_40b86b
mov     ecx, off_42b8a0
pop     edi
mov     [eax+0ce4h], ecx
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_40847a
test    [esp+4+arg_0], 1
jz      short loc_40b89e
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
lea     ecx, [esi+10h]
mov     dword ptr [esi], offset ??_7cfileexception@@6b@
call    sub_41c5b1
test    [esp+4+arg_0], 1
jz      short loc_40b8c3
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
sub     ecx, 5ch
jmp     sub_40b888
push    esi
mov     esi, ecx
call    sub_420b7d
test    [esp+4+arg_0], 1
jz      short loc_40b8fd
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, [esp+4]
and     eax, 7ffh
mov     eax, dword_4318d0[eax*4]
retn
mov     eax, [esp+4]
and     eax, 7ffh
mov     eax, dword_42f8d0[eax*4]
retn
push    ebp
mov     ebp, esp
push    ecx
and     [ebp+var_4], 0
push    esi
fld     ds:dbl_4249d8
fild    [ebp+var_4]
mov     eax, [ebp+var_4]
mov     esi, eax
fmul    ds:dbl_4249d0
shl     esi, 2
fld     st
fsin
fmul    st, st(2)
call    __ftol
fcos
mov     dword_4318d0[esi], eax
fmul    st, st(1)
call    __ftol
inc     [ebp+var_4]
mov     dword_42f8d0[esi], eax
cmp     [ebp+var_4], 800h
jl      short loc_40b934
fstp    st
pop     esi
leave
retn
push    esi
mov     esi, ecx
call    sub_418f4c
lea     ecx, [esi+48h]
mov     dword ptr [esi], offset ??_7cstatic@@6b@
call    sub_404750
lea     ecx, [esi+88h]
call    sub_404750
lea     ecx, [esi+0c8h]
call    sub_4049a1
and     dword ptr [esi+0d0h], 0
and     dword ptr [esi+104h], 0
mov     dword ptr [esi], offset off_4249e0
mov     dword ptr [esi+0e8h], 50h
mov     dword ptr [esi+0ech], 3ch
mov     dword ptr [esi+0f0h], 4000h
mov     dword ptr [esi+0f4h], 4
mov     dword ptr [esi+0f8h], 190h
mov     dword ptr [esi+0fch], 1eh
mov     dword ptr [esi+100h], 1
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ecx
lea     ecx, [esi+0c8h]
mov     dword ptr [esi], offset off_4249e0
call    sub_4049ae
lea     ecx, [esi+88h]
call    sub_404769
lea     ecx, [esi+48h]
call    sub_404769
mov     ecx, esi
call    sub_420b23
pop     esi
retn
mov     eax, offset off_424968
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
mov     esi, [ebp+arg_0]
imul    esi, [ecx+110h]
mov     edx, [ecx+40h]
push    edi
mov     edi, [ecx+10ch]
lea     eax, [edx+1]
lea     edi, [edi+esi*4]
mov     esi, [ecx+44h]
dec     esi
imul    esi, edx
cmp     eax, esi
mov     [ebp+var_c], esi
jge     loc_40bb44
push    ebx
mov     edx, [ecx+40h]
lea     edx, [eax+edx-2]
cmp     eax, edx
mov     [ebp+var_8], edx
jge     loc_40bb39
lea     edx, [edi+eax*4+4]
mov     [ebp+arg_0], edx
mov     esi, [ecx+40h]
imul    esi, [ecx+44h]
cmp     eax, esi
jg      short loc_40bad3
mov     edx, [edi+eax*4]
mov     ebx, [ebp+arg_0]
mov     [ebp+var_4], edx
sub     edx, [ebx]
mov     ebx, [ecx+40h]
add     ebx, eax
cmp     ebx, esi
jg      short loc_40bad3
mov     esi, [ebp+var_4]
sub     esi, [edi+ebx*4]
mov     ebx, eax
sar     edx, 3
sar     esi, 3
imul    esi, [ecx+40h]
add     ebx, esi
add     edx, ebx
cmp     edx, [ecx+110h]
jge     short loc_40bad3
test    edx, edx
jle     short loc_40bad3
mov     esi, [ecx+4ch]
mov     ebx, [ecx+8ch]
mov     edx, [esi+edx*4]
mov     [ebx+eax*4], edx
mov     esi, [ecx+40h]
add     [ebp+arg_0], 4
imul    esi, [ecx+44h]
inc     eax
cmp     eax, esi
jg      short loc_40bb28
mov     edx, [edi+eax*4]
mov     ebx, [ebp+arg_0]
mov     [ebp+var_4], edx
sub     edx, [ebx]
mov     ebx, [ecx+40h]
add     ebx, eax
cmp     ebx, esi
jg      short loc_40bb28
mov     esi, [ebp+var_4]
sub     esi, [edi+ebx*4]
mov     ebx, eax
sar     edx, 3
sar     esi, 3
imul    esi, [ecx+40h]
add     ebx, esi
add     edx, ebx
cmp     edx, [ecx+110h]
jge     short loc_40bb28
test    edx, edx
jle     short loc_40bb28
mov     esi, [ecx+4ch]
mov     ebx, [ecx+8ch]
mov     edx, [esi+edx*4]
mov     [ebx+eax*4], edx
add     [ebp+arg_0], 4
inc     eax
cmp     eax, [ebp+var_8]
jl      loc_40ba83
mov     esi, [ebp+var_c]
inc     eax
inc     eax
cmp     eax, esi
jl      loc_40ba6a
pop     ebx
pop     edi
pop     esi
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
mov     esi, [ebp+arg_0]
mov     eax, ecx
push    edi
imul    esi, [eax+110h]
mov     edi, [eax+10ch]
mov     ecx, [eax+40h]
lea     esi, [edi+esi*4]
lea     edx, [ecx+1]
mov     [ebp+var_4], esi
mov     esi, [eax+44h]
dec     esi
imul    esi, ecx
cmp     edx, esi
mov     [ebp+var_c], esi
jge     loc_40bc76
push    ebx
mov     ecx, [eax+40h]
lea     ecx, [edx+ecx-2]
cmp     edx, ecx
mov     [ebp+var_8], ecx
jge     loc_40bc6b
mov     ecx, [ebp+var_4]
lea     ecx, [ecx+edx*4+4]
mov     [ebp+arg_0], ecx
mov     ebx, [eax+40h]
imul    ebx, [eax+44h]
cmp     edx, ebx
jg      short loc_40bbfa
mov     ecx, [ebp+var_4]
mov     edi, [ebp+arg_0]
mov     ecx, [ecx+edx*4]
mov     esi, ecx
sub     esi, [edi]
mov     edi, [eax+40h]
add     edi, edx
cmp     edi, ebx
jg      short loc_40bbfa
mov     ebx, [ebp+var_4]
sub     ecx, [ebx+edi*4]
mov     edi, esi
mov     ebx, edx
sar     ecx, 3
imul    ecx, [eax+40h]
sar     edi, 3
add     ebx, ecx
add     edi, ebx
cmp     edi, [eax+110h]
jge     short loc_40bbfa
test    edi, edi
jle     short loc_40bbfa
mov     ecx, [ebp+arg_4]
mov     ebx, [eax+4ch]
sar     esi, cl
mov     ecx, [ebx+edi*4]
sub     ecx, esi
mov     esi, [eax+8ch]
mov     [esi+edx*4], ecx
mov     ebx, [eax+40h]
add     [ebp+arg_0], 4
imul    ebx, [eax+44h]
inc     edx
cmp     edx, ebx
jg      short loc_40bc5a
mov     ecx, [ebp+var_4]
mov     edi, [ebp+arg_0]
mov     ecx, [ecx+edx*4]
mov     esi, ecx
sub     esi, [edi]
mov     edi, [eax+40h]
add     edi, edx
cmp     edi, ebx
jg      short loc_40bc5a
mov     ebx, [ebp+var_4]
sub     ecx, [ebx+edi*4]
mov     edi, esi
mov     ebx, edx
sar     ecx, 3
imul    ecx, [eax+40h]
sar     edi, 3
add     ebx, ecx
add     edi, ebx
cmp     edi, [eax+110h]
jge     short loc_40bc5a
test    edi, edi
jle     short loc_40bc5a
mov     ecx, [ebp+arg_4]
mov     ebx, [eax+4ch]
sar     esi, cl
mov     ecx, [ebx+edi*4]
sub     ecx, esi
mov     esi, [eax+8ch]
mov     [esi+edx*4], ecx
add     [ebp+arg_0], 4
inc     edx
cmp     edx, [ebp+var_8]
jl      loc_40bb9f
mov     esi, [ebp+var_c]
inc     edx
inc     edx
cmp     edx, esi
jl      loc_40bb83
pop     ebx
pop     edi
pop     esi
leave
retn    8
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     eax, [edi+110h]
mov     edx, [edi+10ch]
mov     ebx, eax
mov     eax, [ebp+arg_0]
imul    ebx, eax
xor     eax, 1
mov     ecx, [edi+40h]
imul    eax, [edi+110h]
lea     ebx, [edx+ebx*4]
lea     esi, [ecx+1]
lea     edx, [edx+eax*4]
mov     eax, [edi+44h]
dec     eax
mov     [ebp+var_8], ebx
imul    eax, ecx
mov     [ebp+var_14], eax
cmp     esi, eax
jge     short loc_40bd3a
mov     ecx, [edi+40h]
lea     ecx, [esi+ecx-2]
cmp     esi, ecx
mov     [ebp+var_10], ecx
jge     short loc_40bd36
mov     eax, [ebp+var_8]
lea     eax, [eax+esi*4]
mov     [ebp+arg_0], eax
lea     eax, [edx+esi*4+4]
mov     [ebp+var_4], eax
mov     eax, [edi+40h]
mov     ecx, esi
sub     ecx, eax
lea     ebx, [eax+esi]
lea     eax, [edx+ebx*4]
mov     [ebp+var_c], eax
mov     eax, [edx+ecx*4-4]
add     eax, [edx+ecx*4+4]
add     eax, [edx+ebx*4+4]
mov     ebx, [ebp+var_4]
add     [ebp+var_4], 4
add     eax, [edx+ecx*4]
mov     ecx, [ebp+var_c]
add     eax, [ebx-8]
add     eax, [ecx-4]
add     eax, [ebx]
add     eax, [ecx]
mov     ecx, [ebp+arg_0]
sar     eax, 2
sub     eax, [ecx]
mov     ecx, [ebp+arg_4]
mov     ebx, eax
sar     ebx, cl
mov     ecx, [ebp+arg_0]
add     [ebp+arg_0], 4
sub     eax, ebx
inc     esi
cmp     esi, [ebp+var_10]
mov     [ecx], eax
jl      short loc_40bce0
mov     eax, [ebp+var_14]
inc     esi
inc     esi
jmp     short loc_40bcbe
pop     edi
pop     esi
pop     ebx
leave
retn    8
push    ebp
mov     ebp, esp
sub     esp, 1ch
fild    [ebp+arg_8]
push    ebx
push    esi
push    edi
mov     esi, [ebp+arg_8]
fdivr   ds:dbl_424a98
mov     edi, ecx
mov     ebx, [edi+44h]
sub     ebx, [ebp+arg_4]
cmp     [ebp+arg_0], 0
fld     st
fmul    st, st(1)
fstp    [ebp+var_18]
fstp    st
jge     short loc_40bd87
call    _rand
lea     ecx, [esi+esi]
mov     edx, ecx
mov     ecx, [edi+40h]
sub     ecx, edx
cdq
dec     ecx
idiv    ecx
lea     eax, [edx+esi+1]
mov     [ebp+arg_0], eax
test    ebx, ebx
jge     short loc_40bda0
call    _rand
mov     ebx, [edi+44h]
lea     ecx, [esi+esi]
sub     ebx, ecx
cdq
dec     ebx
idiv    ebx
lea     ebx, [edx+esi+1]
mov     eax, esi
mov     edx, [ebp+arg_0]
imul    eax, esi
mov     [ebp+var_10], eax
mov     eax, esi
neg     eax
sub     edx, esi
mov     ecx, eax
cmp     edx, 1
mov     [ebp+var_c], ecx
mov     [ebp+arg_4], esi
mov     [ebp+arg_8], eax
mov     [ebp+var_8], esi
jge     short loc_40bdd0
mov     edx, esi
sub     edx, [ebp+arg_0]
lea     ecx, [ecx+edx+1]
mov     [ebp+var_c], ecx
mov     ecx, ebx
sub     ecx, esi
cmp     ecx, 1
jge     short loc_40bde4
mov     ecx, esi
sub     ecx, ebx
lea     eax, [eax+ecx+1]
mov     [ebp+arg_8], eax
mov     eax, [edi+40h]
mov     ecx, [ebp+arg_0]
add     ecx, esi
lea     edx, [eax-1]
cmp     ecx, edx
jle     short loc_40bdfa
sub     eax, [ebp+arg_0]
dec     eax
mov     [ebp+arg_4], eax
mov     eax, [edi+44h]
lea     ecx, [ebx+esi]
lea     edx, [eax-1]
cmp     ecx, edx
jle     short loc_40be0d
sub     eax, ebx
dec     eax
mov     [ebp+var_8], eax
mov     ecx, [ebp+arg_8]
cmp     ecx, [ebp+var_8]
mov     [ebp+var_4], ecx
jge     loc_40bea1
mov     eax, [ebp+var_c]
cmp     eax, [ebp+arg_4]
mov     [ebp+arg_8], eax
jge     short loc_40be98
imul    ecx, ecx
mov     [ebp+var_1c], ecx
mov     eax, [ebp+arg_8]
imul    eax, eax
add     eax, ecx
cmp     eax, [ebp+var_10]
mov     [ebp+var_14], eax
jge     short loc_40be8d
fild    [ebp+var_14]
mov     eax, [ebp+var_4]
mov     ecx, [edi+110h]
imul    ecx, [ebp+arg_10]
fmul    [ebp+var_18]
fsqrt
add     eax, ebx
mov     edx, [ebp+arg_8]
imul    eax, [edi+40h]
add     edx, eax
mov     eax, [edi+10ch]
add     ecx, edx
add     ecx, [ebp+arg_0]
lea     esi, [eax+ecx*4]
call    __ftol
and     eax, 7ffh
mov     ecx, [ebp+var_1c]
mov     eax, dword_42f8d0[eax*4]
add     eax, 0ffffh
imul    eax, [ebp+arg_c]
sar     eax, 13h
add     [esi], eax
inc     [ebp+arg_8]
mov     eax, [ebp+arg_8]
cmp     eax, [ebp+arg_4]
jl      short loc_40be2d
mov     ecx, [ebp+var_4]
inc     ecx
jmp     loc_40be10
pop     edi
pop     esi
pop     ebx
leave
retn    14h
push    ebp
mov     ebp, esp
sub     esp, 38h
mov     eax, [ebp+arg_18]
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, ecx
push    edi
mov     [esi+3ch], eax
lea     eax, [ebp+pv]
push    eax
push    18h
push    dword ptr [ebx+4]
call    ds:getobjecta
mov     ecx, [ebp+var_30]
mov     eax, [ebp+var_34]
lea     edx, [esi+48h]
mov     [esi+118h], ecx
mov     [esi+44h], ecx
push    ecx
push    eax
mov     ecx, edx
mov     [esi+114h], eax
mov     [esi+40h], eax
call    sub_404774
push    dword ptr [esi+118h]
lea     ecx, [esi+88h]
push    dword ptr [esi+114h]
call    sub_404774
push    dword ptr [esi+1ch]
mov     edi, ds:getdc
call    edi
push    eax
call    sub_41f423
push    ebx
push    eax
lea     ecx, [esi+48h]
call    sub_404838
push    dword ptr [esi+1ch]
call    edi
push    eax
call    sub_41f423
push    ebx
push    eax
lea     ecx, [esi+88h]
call    sub_404838
xor     edi, edi
cmp     [ebp+arg_4], edi
jz      short loc_40bf8c
lea     eax, [ebp+rect]
push    eax
push    dword ptr [esi+1ch]
call    ds:getclientrect
lea     eax, [ebp+var_10]
push    eax
push    dword ptr [esi+1ch]
call    ds:getwindowrect
mov     eax, [esi+118h]
push    2
sub     eax, [ebp+var_10.top]
mov     ecx, esi
sub     eax, [ebp+rect.bottom]
add     eax, [ebp+rect.top]
add     eax, [ebp+var_10.bottom]
push    eax
mov     eax, [esi+114h]
sub     eax, [ebp+rect.right]
sub     eax, [ebp+var_10.left]
add     eax, [ebp+var_10.right]
add     eax, [ebp+rect.left]
push    eax
push    edi
push    edi
push    edi
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
mov     eax, [esi+118h]
imul    eax, [esi+114h]
shl     eax, 3
push    eax
call    _malloc
mov     [esi+10ch], eax
mov     eax, [esi+118h]
imul    eax, [esi+114h]
mov     [esi+110h], eax
call    sub_40b925
push    edi
call    _time
push    eax
call    _srand
add     esp, 0ch
call    _rand
mov     edi, 800h
cdq
mov     ecx, edi
idiv    ecx
mov     [esi+0d4h], edx
call    _rand
cdq
mov     ecx, edi
idiv    ecx
mov     [esi+0d8h], edx
call    _rand
cdq
idiv    edi
mov     ecx, [esi+118h]
mov     edi, [esi+10ch]
imul    ecx, [esi+114h]
shl     ecx, 3
xor     eax, eax
mov     [esi+0dch], edx
mov     edx, ecx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
mov     eax, [ebp+arg_10]
lea     ecx, [esi+0c8h]
mov     [esi+0f0h], eax
mov     eax, [ebp+arg_14]
mov     [esi+104h], eax
call    sub_4049c2
mov     edi, ds:timesetevent
push    1
push    esi
push    offset sub_40c185
push    3ch
push    [ebp+udelay]
call    edi
push    1
push    esi
push    offset sub_40c1b1
push    3ch
push    [ebp+arg_c]
mov     [esi+11ch], eax
call    edi
mov     [esi+120h], eax
pop     edi
pop     esi
pop     ebx
leave
retn    1ch
push    ebx
mov     ebx, ecx
mov     eax, [ebx+104h]
test    eax, eax
jz      short loc_40c098
dec     eax
push    eax
push    dword ptr [ebx+0d0h]
call    sub_40bb4a
jmp     short loc_40c0a5
push    dword ptr [ebx+0d0h]
mov     ecx, ebx
call    sub_40ba36
cmp     dword ptr [ebx+100h], 0
jz      short loc_40c0c7
mov     eax, [ebx+0d0h]
push    dword ptr [ebx+0f4h]
xor     eax, 1
mov     ecx, ebx
push    eax
call    sub_40bc7c
jmp     short loc_40c106
mov     eax, [ebx+0d0h]
mov     ecx, [ebx+44h]
push    esi
push    edi
mov     edi, [ebx+110h]
imul    ecx, [ebx+40h]
mov     esi, edi
mov     edx, [ebx+10ch]
imul    esi, eax
xor     eax, 1
imul    eax, edi
shl     ecx, 2
lea     edi, [edx+eax*4]
mov     eax, ecx
lea     esi, [edx+esi*4]
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
pop     edi
pop     esi
xor     dword ptr [ebx+0d0h], 1
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 64h
push    esi
mov     esi, ecx
push    esi
lea     ecx, [ebp-64h]
call    ??0cpaintdc@@qae@pavcwnd@@@z
lea     eax, [ebp-10h]
push    eax
push    dword ptr [esi+1ch]
call    ds:getclientrect
mov     edx, [ebp-8]
mov     ecx, [ebp-4]
sub     edx, [ebp-10h]
mov     eax, [esi+114h]
sub     ecx, [ebp-0ch]
cmp     edx, eax
jle     short loc_40c146
mov     edx, eax
mov     eax, [esi+118h]
cmp     ecx, eax
jle     short loc_40c152
mov     ecx, eax
lea     eax, [ebp-64h]
push    1000h
neg     eax
sbb     eax, eax
push    ecx
and     eax, [ebp-60h]
push    edx
push    0
push    0
push    eax
lea     eax, [esi+88h]
push    eax
lea     ecx, [esi+0c8h]
call    sub_404a38
lea     ecx, [ebp-64h]
call    ??1cpaintdc@@uae@xz
pop     esi
leave
retn
push    esi
mov     esi, [esp+4+dwuser]
cmp     dword ptr [esi+3ch], 0
jz      short loc_40c199
cmp     dword_42b260, 0
jz      short loc_40c1ad
mov     ecx, esi
call    sub_40c07c
push    1
push    0
push    dword ptr [esi+1ch]
call    ds:invalidaterect
pop     esi
retn    14h
mov     ecx, [esp+dwuser]
cmp     dword ptr [ecx+3ch], 0
jz      short loc_40c1c4
cmp     dword_42b260, 0
jz      short locret_40c1c9
call    sub_40c1cc
retn    14h
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, ecx
test    byte ptr [esi+0f0h], 1
jz      loc_40c3bd
mov     eax, [esi+0d4h]
push    ebx
mov     edx, eax
imul    eax, 41h
imul    edx, 15dh
push    edi
mov     ecx, [esi+40h]
sar     eax, 8
sar     edx, 8
mov     edi, 7ffh
and     eax, edi
and     edx, edi
mov     eax, dword_4318d0[eax*4]
mov     ebx, dword_4318d0[edx*4]
sar     ebx, 8
sar     eax, 8
imul    ebx, eax
lea     eax, [ecx-8]
cdq
sub     eax, edx
sar     eax, 1
imul    ebx, eax
mov     eax, ecx
cdq
sub     eax, edx
sar     ebx, 10h
sar     eax, 1
add     ebx, eax
mov     [esi+0e0h], ebx
mov     ebx, [esi+0d8h]
mov     eax, ebx
imul    eax, 179h
sar     eax, 8
and     eax, edi
mov     edx, dword_4318d0[eax*4]
mov     eax, ebx
imul    eax, 54h
sar     eax, 8
and     eax, edi
add     ebx, 0ch
sar     edx, 8
mov     eax, dword_4318d0[eax*4]
mov     [esi+0d8h], ebx
sar     eax, 8
imul    edx, eax
mov     eax, [esi+44h]
mov     edi, edx
add     eax, 0fffffff8h
cdq
sub     eax, edx
sar     eax, 1
imul    edi, eax
mov     eax, [esi+44h]
cdq
sub     eax, edx
sar     edi, 10h
sar     eax, 1
add     edi, eax
mov     eax, [esi+0d4h]
add     eax, 0dh
mov     [esi+0e4h], edi
test    byte ptr [esi+0f1h], 40h
mov     [esi+0d4h], eax
jz      loc_40c383
mov     edx, [esi+0d0h]
imul    ecx, edi
imul    edx, [esi+110h]
mov     eax, [esi+0e0h]
add     eax, ecx
mov     ecx, [esi+0f8h]
mov     [esi+108h], eax
add     edx, eax
mov     eax, [esi+10ch]
shl     ecx, 1
mov     [eax+edx*4], ecx
mov     eax, [esi+0d0h]
imul    eax, [esi+110h]
sub     eax, [esi+40h]
mov     ecx, [esi+10ch]
mov     edx, [esi+0f8h]
add     eax, [esi+108h]
mov     [ecx+eax*4], edx
mov     eax, [esi+0d0h]
imul    eax, [esi+110h]
mov     edx, [esi+108h]
mov     edi, [esi+40h]
mov     ecx, [esi+10ch]
mov     ebx, edx
sub     ebx, edi
add     edx, eax
add     ebx, eax
add     edx, edi
mov     eax, [ecx+ebx*4]
mov     [ecx+edx*4], eax
mov     eax, [esi+0d0h]
imul    eax, [esi+110h]
mov     ecx, [esi+108h]
add     ecx, eax
mov     eax, [esi+10ch]
mov     edx, ecx
add     edx, [esi+40h]
mov     edx, [eax+edx*4]
mov     [eax+ecx*4-4], edx
mov     eax, [esi+0d0h]
imul    eax, [esi+110h]
mov     ecx, [esi+108h]
add     eax, ecx
mov     ecx, [esi+10ch]
mov     edx, [ecx+eax*4-4]
mov     [ecx+eax*4+4], edx
jmp     short loc_40c3a3
push    dword ptr [esi+0d0h]
mov     ecx, esi
push    0fffff830h
push    4
push    dword ptr [esi+0e4h]
push    dword ptr [esi+0e0h]
call    sub_40bd41
mov     eax, [esi+0e0h]
pop     edi
mov     [esi+0e8h], eax
mov     eax, [esi+0e4h]
mov     [esi+0ech], eax
pop     ebx
test    byte ptr [esi+0f0h], 2
jz      short loc_40c427
call    _rand
mov     ecx, [esi+40h]
dec     ecx
cdq
dec     ecx
idiv    ecx
inc     edx
mov     [esi+0e0h], edx
call    _rand
mov     ecx, [esi+44h]
dec     ecx
cdq
dec     ecx
idiv    ecx
inc     edx
mov     [esi+0e4h], edx
call    _rand
mov     ecx, [esi+0f8h]
cdq
shl     ecx, 2
idiv    ecx
mov     eax, [esi+110h]
mov     ecx, [esi+0e4h]
imul    eax, [esi+0d0h]
imul    ecx, [esi+40h]
add     eax, ecx
mov     ecx, [esi+10ch]
add     eax, [esi+0e0h]
mov     [ecx+eax*4], edx
pop     esi
leave
retn
test    byte ptr [ecx+0f1h], 20h
jz      short locret_40c44d
push    dword ptr [ecx+0d0h]
push    0fffff830h
push    1
push    dword ptr [esp+18h]
push    dword ptr [esp+18h]
call    sub_40bd41
retn    0ch
push    esi
push    edi
mov     esi, ecx
call    ?ondestroy@cwnd@@iaexxz
mov     eax, [esi+11ch]
mov     edi, ds:timekillevent
test    eax, eax
jz      short loc_40c46c
push    eax
call    edi
mov     eax, [esi+120h]
test    eax, eax
jz      short loc_40c479
push    eax
call    edi
lea     ecx, [esi+48h]
call    sub_4047e9
lea     ecx, [esi+88h]
call    sub_4047e9
lea     ecx, [esi+0c8h]
call    sub_4049cf
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_40ba00
test    [esp+4+arg_0], 1
jz      short loc_40c4b0
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    ebx
push    esi
mov     esi, ecx
push    edi
push    0ah
lea     ecx, [esi+8]
call    sub_40ca51
mov     edi, ds:createeventa
xor     ebx, ebx
push    offset name
push    ebx
push    1
push    ebx
mov     dword ptr [esi], offset off_424b10
call    edi
push    offset aclientthreadki
push    ebx
push    ebx
push    ebx
mov     dword_4338dc, eax
call    edi
mov     ecx, esi
mov     hevent, eax
call    sub_40c5d3
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_424b10
call    sub_40c591
mov     ecx, esi
call    sub_40c62a
mov     ecx, esi
call    sub_40c6c3
lea     ecx, [esi+8]
mov     dword ptr [ecx], offset off_424b44
call    sub_40cc9e
pop     esi
retn
xor     eax, eax
cmp     [ecx+4], eax
setnz   al
retn
push    ecx
push    esi
mov     esi, ecx
mov     eax, [esi]
call    dword ptr [eax+20h]
cmp     dword ptr [esi+14h], 0
mov     eax, [esi]
jz      short loc_40c55e
lea     ecx, [esp+8+var_4]
push    ecx
mov     ecx, esi
call    dword ptr [eax+28h]
test    eax, eax
jnz     short loc_40c565
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+10h]
mov     eax, [esi]
push    0
mov     ecx, esi
call    dword ptr [eax+2ch]
pop     esi
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, ecx
cmp     dword ptr [esi+14h], 1
jnz     short loc_40c58e
mov     eax, [esi]
lea     ecx, [ebp+var_4]
push    ecx
mov     ecx, esi
call    dword ptr [eax+28h]
test    eax, eax
jz      short loc_40c58e
mov     eax, [esi]
push    [ebp+var_4]
mov     ecx, esi
call    dword ptr [eax+30h]
pop     esi
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    esi
mov     esi, ecx
mov     eax, [esi+14h]
neg     eax
sbb     eax, eax
test    eax, eax
mov     [ebp+var_4], eax
jz      short loc_40c5d0
push    edi
lea     edi, [esi+8]
lea     eax, [ebp+var_c]
mov     ecx, edi
push    eax
lea     eax, [ebp+var_8]
push    eax
lea     eax, [ebp+var_4]
push    eax
call    sub_40cb75
mov     eax, [esi]
push    [ebp+var_8]
mov     ecx, esi
call    dword ptr [eax+30h]
cmp     [ebp+var_4], 0
jnz     short loc_40c5ac
pop     edi
pop     esi
leave
retn
push    ebx
push    esi
push    edi
mov     edi, ecx
push    70h
call    sub_41c2f2
mov     esi, eax
xor     ebx, ebx
cmp     esi, ebx
pop     ecx
jz      short loc_40c604
mov     ecx, esi
call    ??0cwinthread@@qae@xz
push    edi
mov     ecx, esi
mov     dword ptr [esi], offset off_424b50
mov     [esi+6ch], ebx
call    sub_40c80a
mov     ecx, esi
jmp     short loc_40c606
xor     ecx, ecx
push    ebx
push    ebx
push    ebx
mov     [edi+24h], ecx
call    ?createthread@cwinthread@@qaehkipau_security_attributes@@@z
test    eax, eax
jnz     short loc_40c626
mov     ecx, [edi+24h]
cmp     ecx, ebx
jz      short loc_40c623
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
mov     [edi+24h], ebx
pop     edi
pop     esi
pop     ebx
retn
push    esi
mov     esi, ecx
mov     ecx, [esi+24h]
test    ecx, ecx
jz      short loc_40c65c
mov     eax, [ecx]
call    dword ptr [eax+80h]
mov     ecx, [esi+24h]
test    ecx, ecx
jz      short loc_40c64a
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
push    0ffffffffh
push    hevent
call    ds:waitforsingleobject
and     dword ptr [esi+24h], 0
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 208h
push    esi
lea     eax, [ebp+buffer]
push    104h
mov     esi, ecx
push    eax
call    ds:getsystemdirectorya
push    0
lea     eax, [ebp+buffer]
push    offset ahtkeyshkdll
push    eax
lea     eax, [ebp+libfilename]
push    offset byte_4338e0
push    eax
call    __makepath
add     esp, 14h
lea     eax, [ebp+libfilename]
push    eax
call    ds:loadlibrarya
mov     [esi+4], eax
pop     esi
test    eax, eax
jnz     short locret_40c6c1
push    eax
push    eax
lea     eax, [ebp+libfilename]
push    eax
call    sub_4205e1
leave
retn
push    esi
mov     esi, ecx
cmp     dword ptr [esi+4], 0
jz      short loc_40c6da
mov     eax, [esi]
call    dword ptr [eax+10h]
push    dword ptr [esi+4]
call    ds:freelibrary
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
push    [ebp+arg_0]
and     [ebp+var_4], 0
lea     eax, [ebp+var_4]
add     ecx, 8
push    eax
call    sub_40ca78
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     esi, offset aclientgetkeypr
lea     edi, [ebp+procname]
push    0ffffffffh
movsd
movsd
movsd
push    dword_4338dc
mov     ebx, ecx
movsd
movsb
call    ds:waitforsingleobject
mov     ecx, [ebx+4]
test    ecx, ecx
jz      short loc_40c762
test    eax, eax
jnz     short loc_40c762
lea     eax, [ebp+procname]
push    eax
push    ecx
call    ds:getprocaddress
test    eax, eax
jz      short loc_40c762
push    [ebp+dwthreadid]
push    dword ptr [ebx+4]
push    eax
push    2
call    ds:setwindowshookexa
test    eax, eax
jz      short loc_40c762
movzx   eax, ax
mov     esi, eax
lea     ecx, [ebx+8]
shl     esi, 10h
or      esi, eax
lea     eax, [ebp+dwthreadid]
push    eax
call    sub_40cabc
mov     [eax], esi
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
push    ecx
lea     eax, [ebp+var_4]
push    esi
push    eax
lea     esi, [ecx+8]
lea     eax, [ebp+arg_0]
mov     ecx, esi
push    eax
call    sub_40ca78
test    eax, eax
jz      short loc_40c79a
movzx   eax, [ebp+var_4]
push    eax
call    ds:unhookwindowshookex
lea     eax, [ebp+arg_0]
mov     ecx, esi
push    eax
call    sub_40cb31
pop     esi
leave
retn    4
push    esi
push    70h
call    sub_41c2f2
mov     esi, eax
pop     ecx
test    esi, esi
jz      short loc_40c7cc
mov     ecx, esi
call    ??0cwinthread@@qae@xz
and     dword ptr [esi+6ch], 0
push    0
mov     ecx, esi
mov     dword ptr [esi], offset off_424b50
call    sub_40c80a
mov     eax, esi
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, offset off_424aa0
retn
mov     eax, offset off_424ab8
retn
push    esi
mov     esi, ecx
call    ??0cwinthread@@qae@xz
push    dword ptr [esp+8]
and     dword ptr [esi+6ch], 0
mov     ecx, esi
mov     dword ptr [esi], offset off_424b50
call    sub_40c80a
mov     eax, esi
pop     esi
retn    4
mov     dword ptr [ecx], offset off_424b50
jmp     ??1cwinthread@@uae@xz
mov     eax, [esp+arg_0]
mov     [ecx+68h], eax
mov     ecx, [ecx+6ch]
test    ecx, ecx
jz      short locret_40c821
mov     edx, [ecx]
push    eax
call    dword ptr [edx+0b8h]
retn    4
push    esi
mov     esi, ecx
mov     ecx, [esi+6ch]
test    ecx, ecx
jz      short loc_40c845
mov     eax, [ecx]
call    dword ptr [eax+58h]
mov     ecx, [esi+6ch]
test    ecx, ecx
jz      short loc_40c841
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
and     dword ptr [esi+6ch], 0
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     esi, ecx
push    40h
mov     [ebp+var_4], ebx
call    sub_41c2f2
mov     edi, eax
pop     ecx
cmp     edi, ebx
jz      short loc_40c880
mov     eax, [esi+68h]
mov     ecx, edi
mov     [ebp+var_8], eax
call    sub_418f4c
mov     eax, [ebp+var_8]
mov     dword ptr [edi], offset off_424bd4
mov     [edi+3ch], eax
jmp     short loc_40c882
xor     edi, edi
cmp     edi, ebx
mov     [esi+6ch], edi
jz      short loc_40c8ca
push    ebx
push    ebx
push    ebx
push    ebx
call    ?afxregisterwndclass@@ygpbdipauhicon__@@pauhbrush__@@0@z
push    ebx
push    ebx
lea     ecx, [ebp+var_18]
push    ebx
push    ecx
mov     ecx, [esi+6ch]
push    0cf0000h
push    offset ahotkeyshook
push    eax
push    ebx
mov     [ebp+var_18], ebx
mov     [ebp+var_14], ebx
mov     [ebp+var_10], ebx
mov     [ebp+var_c], ebx
call    sub_4198ae
test    eax, eax
jz      short loc_40c8ca
mov     eax, [esi+6ch]
mov     [ebp+var_4], 1
mov     [esi+1ch], eax
push    dword_4338dc
call    ds:setevent
mov     eax, [ebp+var_4]
pop     edi
pop     esi
pop     ebx
leave
retn
push    esi
mov     esi, ecx
mov     eax, [esi+68h]
test    eax, eax
jz      short loc_40c8ec
and     dword ptr [eax+24h], 0
mov     ecx, [esi+6ch]
test    ecx, ecx
jz      short loc_40c8fe
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
and     dword ptr [esi+6ch], 0
mov     ecx, esi
call    sub_41d979
pop     esi
retn
push    hevent
call    ds:setevent
push    dword ptr [esp+4]
call    ??3@yaxpax@z
pop     ecx
retn
mov     eax, offset off_424ad8
retn
push    esi
mov     esi, ecx
call    sub_418f4c
mov     eax, [esp+8]
mov     dword ptr [esi], offset off_424bd4
mov     [esi+3ch], eax
mov     eax, esi
pop     esi
retn    4
mov     dword ptr [ecx], offset off_424bd4
jmp     ??1cwnd@@uae@xz
push    ebp
mov     ebp, esp
sub     esp, 28h
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
push    ebx
call    sub_4199bb
mov     [ebp+arg_0], eax
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     edi, [eax+8]
mov     esi, ds:getclassinfoa
lea     eax, [ebp+wndclass]
push    eax
push    offset classname
push    edi
call    esi
test    eax, eax
jnz     short loc_40c9a4
lea     eax, [ebp+wndclass]
push    eax
push    dword ptr [ebx+28h]
push    edi
call    esi
and     [ebp+wndclass.style], 0fffffffch
lea     eax, [ebp+wndclass]
push    eax
mov     [ebp+wndclass.lpszclassname], offset ahotkeyshookcla_0
call    sub_419f38
test    eax, eax
jnz     short loc_40c9a4
call    sub_41fc31
mov     eax, [ebp+arg_0]
pop     edi
mov     dword ptr [ebx+28h], offset ahotkeyshookcla_1
pop     esi
pop     ebx
leave
retn    4
mov     eax, [esp+arg_0]
mov     [ecx+3ch], eax
retn    4
mov     edx, [esp+arg_4]
test    edx, edx
jz      short loc_40c9df
mov     ecx, [ecx+3ch]
test    ecx, ecx
jz      short loc_40c9df
mov     eax, [edx+8]
push    esi
mov     esi, [ecx]
push    dword ptr [eax+4]
push    dword ptr [eax]
push    dword ptr [edx]
call    dword ptr [esi+14h]
pop     esi
push    1
pop     eax
retn    8
push    esi
mov     esi, ecx
call    sub_40c501
test    [esp+4+arg_0], 1
jz      short loc_40c9fb
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_424b50
call    ??1cwinthread@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_40ca29
push    hevent
call    ds:setevent
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_424bd4
call    ??1cwnd@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_40ca4b
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, ecx
xor     ecx, ecx
mov     [eax+4], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     ecx, [esp+arg_0]
mov     dword ptr [eax], offset off_424b44
mov     dword ptr [eax+8], 11h
mov     [eax+18h], ecx
retn    4
push    esi
mov     esi, [ecx+4]
test    esi, esi
jz      short loc_40caa8
mov     eax, [esp+4+arg_0]
push    edi
xor     edx, edx
mov     edi, [eax]
mov     eax, edi
shr     eax, 4
div     dword ptr [ecx+8]
mov     edx, [esi+edx*4]
test    edx, edx
jz      short loc_40caa1
cmp     [edx+8], edi
jz      short loc_40caa3
mov     edx, [edx]
jmp     short loc_40ca94
xor     edx, edx
test    edx, edx
pop     edi
jnz     short loc_40caac
xor     eax, eax
jmp     short loc_40cab8
mov     ecx, [esp+4+arg_4]
mov     eax, [edx+0ch]
push    1
mov     [ecx], eax
pop     eax
pop     esi
retn    8
mov     eax, [esp+arg_0]
push    ebx
push    esi
mov     esi, ecx
mov     ebx, [eax]
xor     edx, edx
mov     ecx, [esi+8]
mov     eax, ebx
shr     eax, 4
div     ecx
mov     ecx, [esi+4]
push    edi
test    ecx, ecx
mov     edi, edx
jz      short loc_40caf6
mov     eax, [ecx+edi*4]
test    eax, eax
jz      short loc_40caec
cmp     [eax+8], ebx
jz      short loc_40caee
mov     eax, [eax]
jmp     short loc_40cadf
xor     eax, eax
test    eax, eax
jnz     short loc_40cb28
test    ecx, ecx
jnz     short loc_40cb02
push    1
mov     ecx, esi
push    dword ptr [esi+8]
call    sub_40cce6
mov     ecx, esi
call    sub_40cd36
mov     ecx, [esp+0ch+arg_0]
mov     [eax+4], edi
mov     ecx, [ecx]
mov     [eax+8], ecx
mov     edx, [esi+4]
mov     ecx, edi
shl     ecx, 2
mov     edx, [edx+ecx]
mov     [eax], edx
mov     edx, [esi+4]
mov     [edx+ecx], eax
pop     edi
pop     esi
add     eax, 0ch
pop     ebx
retn    4
push    esi
mov     esi, [ecx+4]
test    esi, esi
push    edi
jz      short loc_40cb6e
mov     eax, [esp+8+arg_0]
xor     edx, edx
mov     edi, [eax]
mov     eax, edi
shr     eax, 4
div     dword ptr [ecx+8]
mov     eax, [esi+edx*4]
lea     edx, [esi+edx*4]
test    eax, eax
jz      short loc_40cb6e
cmp     [eax+8], edi
jz      short loc_40cb5f
mov     edx, eax
mov     eax, [eax]
jmp     short loc_40cb50
mov     esi, [eax]
push    eax
mov     [edx], esi
call    sub_40cd8b
push    1
pop     eax
jmp     short loc_40cb70
xor     eax, eax
pop     edi
pop     esi
retn    4
push    ebx
mov     ebx, [esp+4+arg_0]
push    esi
push    edi
mov     edx, [ebx]
cmp     edx, 0ffffffffh
jnz     short loc_40cb9d
mov     esi, [ecx+8]
xor     edi, edi
test    esi, esi
jbe     short loc_40cb9d
mov     eax, [ecx+4]
mov     edx, [eax]
test    edx, edx
jnz     short loc_40cb9d
inc     edi
add     eax, 4
cmp     edi, esi
jb      short loc_40cb8f
mov     esi, [edx]
test    esi, esi
jnz     short loc_40cbc2
mov     eax, [edx+4]
mov     edi, [ecx+8]
inc     eax
cmp     eax, edi
jnb     short loc_40cbc2
mov     ecx, [ecx+4]
lea     ecx, [ecx+eax*4]
mov     esi, [ecx]
test    esi, esi
jnz     short loc_40cbc2
inc     eax
add     ecx, 4
cmp     eax, edi
jb      short loc_40cbb4
mov     ecx, [esp+0ch+arg_4]
mov     [ebx], esi
mov     eax, [edx+8]
pop     edi
mov     [ecx], eax
mov     ecx, [esp+8+arg_8]
mov     eax, [edx+0ch]
pop     esi
mov     [ecx], eax
pop     ebx
retn    0ch
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+src]
push    edi
mov     edi, ecx
mov     eax, [esi+14h]
not     eax
test    al, 1
jz      short loc_40cc39
push    dword ptr [edi+0ch]
mov     ecx, esi
call    ?writecount@carchive@@qaexk@z
xor     ebx, ebx
cmp     [edi+0ch], ebx
jz      short loc_40cc75
cmp     [edi+8], ebx
jbe     short loc_40cc75
mov     eax, [edi+4]
mov     esi, [eax+ebx*4]
test    esi, esi
jz      short loc_40cc31
lea     eax, [esi+8]
push    1
push    eax
push    [ebp+src]
call    sub_40cda4
lea     eax, [esi+0ch]
push    1
push    eax
push    [ebp+src]
call    sub_40cda4
mov     esi, [esi]
jmp     short loc_40cc0d
inc     ebx
cmp     ebx, [edi+8]
jb      short loc_40cc07
jmp     short loc_40cc75
mov     ecx, esi
call    ?readcount@carchive@@qaekxz
mov     ecx, eax
dec     eax
test    ecx, ecx
jz      short loc_40cc75
lea     ebx, [eax+1]
lea     eax, [ebp+src]
push    1
push    eax
push    esi
call    sub_40cda4
lea     eax, [ebp+var_4]
push    1
push    eax
push    esi
call    sub_40cda4
lea     eax, [ebp+src]
mov     ecx, edi
push    eax
call    sub_40cabc
mov     ecx, [ebp+var_4]
dec     ebx
mov     [eax], ecx
jnz     short loc_40cc4a
pop     edi
pop     esi
pop     ebx
leave
retn    4
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_424b44
call    sub_40cc9e
test    [esp+4+arg_0], 1
jz      short loc_40cc98
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
mov     edx, [esi+4]
test    edx, edx
jz      short loc_40ccc5
mov     eax, [esi+8]
test    eax, eax
jbe     short loc_40ccc5
push    edi
mov     ecx, edx
mov     edi, eax
mov     eax, [ecx]
test    eax, eax
jz      short loc_40ccbe
mov     eax, [eax]
jmp     short loc_40ccb6
add     ecx, 4
dec     edi
jnz     short loc_40ccb4
pop     edi
push    edx
call    ??3@yaxpax@z
and     dword ptr [esi+4], 0
and     dword ptr [esi+0ch], 0
and     dword ptr [esi+10h], 0
pop     ecx
mov     ecx, [esi+14h]
call    ?freedatachain@cplex@@qaexxz
and     dword ptr [esi+14h], 0
pop     esi
retn
push    ebx
push    esi
mov     esi, ecx
mov     eax, [esi+4]
test    eax, eax
jz      short loc_40ccfc
push    eax
call    ??3@yaxpax@z
and     dword ptr [esi+4], 0
pop     ecx
cmp     [esp+8+arg_4], 0
mov     ebx, [esp+8+arg_0]
jz      short loc_40cd2e
push    edi
mov     edi, ebx
shl     edi, 2
push    edi
call    sub_41c2f2
pop     ecx
mov     edx, eax
mov     ecx, edi
mov     [esi+4], edx
mov     edi, edx
mov     edx, ecx
xor     eax, eax
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
pop     edi
mov     [esi+8], ebx
pop     esi
pop     ebx
retn    8
push    esi
mov     esi, ecx
push    edi
cmp     dword ptr [esi+10h], 0
jnz     short loc_40cd71
push    10h
lea     eax, [esi+14h]
push    dword ptr [esi+18h]
push    eax
call    ?create@cplex@@sgpau1@aapau1@ii@z
mov     ecx, [esi+18h]
add     eax, 4
mov     edx, ecx
shl     edx, 4
dec     ecx
test    ecx, ecx
lea     eax, [eax+edx-10h]
jl      short loc_40cd71
inc     ecx
mov     edx, [esi+10h]
mov     [eax], edx
mov     [esi+10h], eax
sub     eax, 10h
dec     ecx
jnz     short loc_40cd63
mov     ecx, [esi+10h]
mov     eax, [ecx]
inc     dword ptr [esi+0ch]
mov     [esi+10h], eax
lea     edi, [ecx+8]
xor     eax, eax
stosd
lea     edi, [ecx+0ch]
stosd
pop     edi
mov     eax, ecx
pop     esi
retn
mov     eax, [esp+arg_0]
mov     edx, [ecx+10h]
mov     [eax], edx
dec     dword ptr [ecx+0ch]
mov     [ecx+10h], eax
jnz     short locret_40cda1
call    sub_40cc9e
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     eax, [ecx+14h]
not     eax
test    al, 1
mov     eax, [ebp+arg_8]
jz      short loc_40cdc4
shl     eax, 2
push    eax
push    [ebp+src]
call    ?write@carchive@@qaexpbxi@z
jmp     short loc_40cdd0
shl     eax, 2
push    eax
push    [ebp+src]
call    sub_41fdc5
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 134h
and     [ebp+var_134], 0
push    ebx
push    esi
push    edi
push    49h
xor     eax, eax
cmp     [ebp+arg_4], eax
pop     ecx
lea     edi, [ebp+var_130]
rep stosd
jz      loc_40cef5
push    offset modulename
call    ds:getmodulehandlea
mov     edi, eax
test    edi, edi
jz      loc_40cef5
mov     esi, ds:getprocaddress
push    offset procname
push    edi
call    esi
push    offset aprocess32first
push    edi
mov     ebx, eax
call    esi
push    offset aprocess32next
push    edi
mov     [ebp+var_8], eax
call    esi
cmp     [ebp+var_8], 0
mov     [ebp+var_c], eax
jz      loc_40cef5
test    eax, eax
jz      loc_40cef5
test    ebx, ebx
jz      loc_40cef5
push    0
push    2
call    ebx
cmp     eax, 0ffffffffh
mov     [ebp+hobject], eax
jz      loc_40cef5
lea     ecx, [ebp+var_134]
xor     ebx, ebx
push    ecx
push    eax
mov     [ebp+var_134], 128h
call    [ebp+var_8]
test    eax, eax
jz      short loc_40cee6
mov     edi, [ebp+arg_0]
lea     eax, [ebp+string]
push    eax
call    ds:lstrlena
lea     esi, [ebp+eax+string]
cmp     byte ptr [esi], 5ch
jz      short loc_40cebb
lea     eax, [ebp+string]
cmp     esi, eax
jz      short loc_40cebb
lea     eax, [edi+10h]
push    esi
push    eax
call    ds:lstrcpya
dec     esi
jmp     short loc_40ce9e
mov     eax, [ebp+var_12c]
and     dword ptr [edi+8], 0
mov     [edi], eax
inc     ebx
add     edi, 154h
cmp     ebx, [ebp+arg_4]
jnb     short loc_40cee8
lea     eax, [ebp+var_134]
push    eax
push    [ebp+hobject]
call    [ebp+var_c]
test    eax, eax
jnz     short loc_40ce8a
jmp     short loc_40cee8
xor     ebx, ebx
push    [ebp+hobject]
call    ds:closehandle
mov     eax, ebx
jmp     short loc_40cef7
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 520h
mov     eax, [ebp+arg_4]
push    ebx
push    esi
dec     eax
push    edi
mov     [ebp+var_c], eax
push    9
push    offset asoftwaremicros
lea     eax, [ebp+subkey]
push    offset format
push    eax
call    _sprintf
add     esp, 10h
lea     eax, [ebp+phkresult]
xor     edi, edi
push    eax
push    20019h
lea     eax, [ebp+subkey]
push    edi
push    eax
push    80000002h
call    ds:regopenkeyexa
test    eax, eax
jnz     loc_40d262
lea     eax, [ebp+cbdata]
mov     ebx, ds:regqueryvalueexa
push    eax
lea     eax, [ebp+type]
push    edi
push    eax
push    edi
push    offset valuename
push    [ebp+phkresult]
call    ebx
test    eax, eax
jnz     loc_40d262
push    [ebp+cbdata]
call    _malloc
mov     esi, eax
pop     ecx
cmp     esi, edi
mov     [ebp+lpdata], esi
jz      loc_40d262
mov     ecx, [ebp+cbdata]
xor     eax, eax
mov     edx, ecx
mov     edi, esi
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
lea     eax, [ebp+cbdata]
push    eax
lea     eax, [ebp+type]
push    esi
push    eax
push    0
push    offset acounters_0
push    [ebp+phkresult]
call    ebx
test    eax, eax
jnz     loc_40d253
cmp     [esi], al
mov     ebx, esi
jz      loc_40d076
cmp     ebx, esi
jbe     short loc_40cfdc
lea     esi, [ebx-2]
movsx   eax, byte ptr [esi]
push    eax
call    _isdigit
test    eax, eax
pop     ecx
jz      short loc_40cfdc
dec     esi
jmp     short loc_40cfcb
push    offset aprocess
push    ebx
call    __strcmpi
pop     ecx
test    eax, eax
pop     ecx
jnz     short loc_40d029
lea     esi, [ebx-2]
movsx   eax, byte ptr [esi]
push    eax
call    _isdigit
test    eax, eax
pop     ecx
jz      short loc_40d001
dec     esi
jmp     short loc_40cff0
lea     edi, [esi+1]
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [ebp+subkey]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
jmp     short loc_40d059
push    offset aidprocess
push    ebx
call    __strcmpi
pop     ecx
test    eax, eax
pop     ecx
jnz     short loc_40d059
lea     esi, [ebx-2]
movsx   eax, byte ptr [esi]
push    eax
call    _isdigit
test    eax, eax
pop     ecx
jz      short loc_40d04e
dec     esi
jmp     short loc_40d03d
inc     esi
push    esi
call    _atol
pop     ecx
mov     [ebp+var_10], eax
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
mov     esi, [ebp+lpdata]
repne scasb
not     ecx
dec     ecx
cmp     [ebx+ecx+1], al
lea     ebx, [ebx+ecx+1]
jnz     loc_40cfc4
push    esi
call    _free
mov     eax, 0c800h
push    eax
mov     [ebp+cbdata], eax
call    _malloc
mov     edi, eax
xor     esi, esi
pop     ecx
cmp     edi, esi
pop     ecx
mov     [ebp+lpdata], edi
jz      loc_40d262
mov     ecx, [ebp+cbdata]
xor     eax, eax
mov     edx, ecx
shr     ecx, 2
rep stosd
mov     ecx, edx
and     ecx, 3
rep stosb
lea     eax, [ebp+cbdata]
push    eax
lea     eax, [ebp+type]
push    [ebp+lpdata]
push    eax
lea     eax, [ebp+subkey]
push    esi
push    eax
push    80000004h
call    ds:regqueryvalueexa
cmp     eax, esi
jnz     short loc_40d103
cmp     [ebp+cbdata], esi
jbe     loc_40d253
mov     ecx, [ebp+lpdata]
cmp     word ptr [ecx], 50h
jnz     loc_40d253
cmp     word ptr [ecx+2], 45h
jnz     loc_40d253
cmp     word ptr [ecx+4], 52h
jnz     loc_40d253
cmp     word ptr [ecx+6], 46h
jz      short loc_40d12c
cmp     eax, 0eah
jnz     loc_40d253
add     [ebp+cbdata], 6400h
push    [ebp+cbdata]
push    [ebp+lpdata]
call    _realloc
pop     ecx
mov     edi, eax
pop     ecx
mov     [ebp+lpdata], edi
jmp     loc_40d09b
mov     ecx, [ebp+lpdata]
mov     eax, [ecx+18h]
add     eax, ecx
mov     ecx, [eax+8]
mov     edx, [eax+20h]
add     ecx, eax
cmp     edx, esi
jbe     short loc_40d158
mov     edi, [ebp+var_10]
cmp     [ecx+4], edi
jz      short loc_40d152
add     ecx, 28h
inc     esi
cmp     esi, edx
jb      short loc_40d140
jmp     short loc_40d158
mov     ecx, [ecx+24h]
mov     [ebp+var_1c], ecx
mov     ecx, [eax+28h]
mov     edx, [ebp+var_c]
cmp     edx, ecx
mov     [ebp+arg_4], edx
jb      short loc_40d168
mov     [ebp+arg_4], ecx
mov     ebx, [eax+4]
add     ebx, eax
cmp     [ebp+arg_4], 0
jbe     loc_40d253
mov     eax, [ebp+arg_0]
add     eax, 10h
mov     [ebp+var_c], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_10], eax
mov     eax, [ebx+10h]
xor     ecx, ecx
push    ecx
push    ecx
lea     edx, [ebp+multibytestr]
push    104h
add     eax, ebx
push    edx
push    0ffffffffh
push    eax
push    ecx
push    ecx
call    ds:widechartomultibyte
test    eax, eax
jnz     short loc_40d1cb
mov     edi, offset aunknown
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, [ebp+var_c]
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
lea     edi, [ebp+multibytestr]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
add     ecx, 3
cmp     ecx, 104h
ja      short loc_40d219
lea     edi, [ebp+multibytestr]
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, [ebp+var_c]
shr     ecx, 2
rep movsd
mov     ecx, eax
xor     eax, eax
and     ecx, 3
rep movsb
mov     edi, [ebp+var_c]
or      ecx, 0ffffffffh
repne scasb
dec     edi
mov     esi, offset aexe_0
movsd
movsb
mov     ecx, [ebp+var_c]
mov     eax, [ebx]
mov     edx, [ebp+arg_0]
add     eax, ebx
and     dword ptr [ecx-8], 0
mov     ecx, [ebp+var_1c]
mov     ecx, [eax+ecx]
test    ecx, ecx
mov     [edx], ecx
jnz     short loc_40d239
mov     dword ptr [edx], 0fffffffeh
mov     ebx, [eax]
mov     ecx, 154h
add     [ebp+var_c], ecx
add     edx, ecx
add     ebx, eax
dec     [ebp+var_10]
mov     [ebp+arg_0], edx
jnz     loc_40d186
cmp     [ebp+lpdata], 0
jz      short loc_40d262
push    [ebp+lpdata]
call    _free
pop     ecx
push    [ebp+phkresult]
mov     esi, ds:regclosekey
call    esi
push    80000004h
call    esi
mov     eax, [ebp+arg_4]
pop     edi
pop     esi
pop     ebx
leave
retn
push    1
pop     eax
retn
push    ebp
mov     ebp, esp
sub     esp, 1ch
lea     eax, [ebp+tokenhandle]
push    esi
push    eax
push    28h
call    ds:getcurrentprocess
push    eax
call    ds:openprocesstoken
test    eax, eax
jnz     short loc_40d2ac
call    ds:getlasterror
push    eax
push    offset aopenprocesstok
jmp     short loc_40d310
lea     eax, [ebp+luid]
xor     esi, esi
push    eax
push    offset asedebugprivile
push    esi
call    ds:lookupprivilegevaluea
test    eax, eax
jnz     short loc_40d2d0
call    ds:getlasterror
push    eax
push    offset alookupprivileg
jmp     short loc_40d310
mov     eax, [ebp+luid.lowpart]
push    esi
mov     [ebp+newstate.privileges.luid.lowpart], eax
mov     eax, [ebp+luid.highpart]
mov     [ebp+newstate.privileges.luid.highpart], eax
push    esi
lea     eax, [ebp+newstate]
push    10h
push    eax
push    esi
push    [ebp+tokenhandle]
mov     [ebp+newstate.privilegecount], 1
mov     [ebp+newstate.privileges.attributes], 2
call    ds:adjusttokenprivileges
mov     esi, ds:getlasterror
call    esi
test    eax, eax
jz      short loc_40d31b
call    esi
push    eax
push    offset aadjusttokenpri
call    _printf
pop     ecx
xor     eax, eax
pop     ecx
jmp     short loc_40d31e
push    1
pop     eax
pop     esi
leave
retn
push    esi
mov     esi, [esp+4+arg_0]
push    esi
call    sub_40d365
movzx   eax, ax
add     eax, [esi]
pop     ecx
add     eax, esi
pop     esi
retn
mov     ecx, [esp+4]
mov     eax, [ecx+20h]
test    eax, eax
jnz     short locret_40d364
movzx   eax, word ptr [ecx+0eh]
dec     eax
jz      short loc_40d360
sub     eax, 3
jz      short loc_40d35b
sub     eax, 4
jz      short loc_40d356
xor     ax, ax
retn
mov     ax, 100h
retn
mov     ax, 10h
retn
mov     ax, 2
retn
mov     ecx, [esp+arg_0]
mov     eax, [ecx+20h]
test    eax, eax
jnz     short loc_40d393
movzx   eax, word ptr [ecx+0eh]
dec     eax
jz      short loc_40d390
sub     eax, 3
jz      short loc_40d38c
sub     eax, 4
jz      short loc_40d385
xor     eax, eax
jmp     short loc_40d393
mov     eax, 100h
jmp     short loc_40d393
push    10h
jmp     short loc_40d392
push    2
pop     eax
shl     eax, 2
retn
mov     ecx, [esp+arg_0]
movzx   eax, word ptr [ecx+0eh]
movzx   edx, word ptr [ecx+0ch]
imul    eax, edx
imul    eax, [ecx+4]
add     eax, 1fh
sar     eax, 3
and     al, 0fch
retn
push    offset dword_448d00
mov     ecx, offset str1
call    sub_41c61f
push    offset sub_40d3ce
call    _atexit
pop     ecx
retn
mov     ecx, offset str1
jmp     sub_41c5b1
push    ebp
mov     ebp, esp
sub     esp, 94h
push    ebx
xor     ebx, ebx
cmp     byte ptr [ebp+dwprocessid], bl
push    esi
push    edi
jnz     loc_40d4bc
push    24h
xor     eax, eax
pop     ecx
lea     edi, [ebp+versioninformation.dwmajorversion]
mov     [ebp+versioninformation.dwosversioninfosize], ebx
rep stosd
lea     eax, [ebp+dwprocessid]
push    eax
push    lparam
call    ds:getwindowthreadprocessid
lea     eax, [ebp+versioninformation]
mov     [ebp+versioninformation.dwosversioninfosize], 94h
push    eax
call    ds:getversionexa
mov     eax, [ebp+versioninformation.dwplatformid]
dec     eax
jz      short loc_40d441
dec     eax
jnz     short loc_40d4a7
mov     esi, offset sub_40cefc
mov     eax, offset sub_40d280
jmp     short loc_40d44b
mov     esi, offset sub_40cddc
mov     eax, offset sub_40d27c
call    eax
push    100h
push    offset dword_4338f0
call    esi
pop     ecx
xor     esi, esi
cmp     eax, ebx
pop     ecx
mov     dword_448cf4, eax
jbe     short loc_40d4a7
mov     ebx, offset byte_433900
mov     eax, [ebp+dwprocessid]
cmp     eax, [ebx-10h]
jz      short loc_40d498
mov     edi, [ebp+str1]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
push    ecx
push    ebx
call    __strupr
pop     ecx
push    eax
push    [ebp+str1]
call    _strncmp
add     esp, 0ch
test    eax, eax
jz      short loc_40d4ae
inc     esi
add     ebx, 154h
cmp     esi, dword_448cf4
jb      short loc_40d46b
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
imul    esi, 154h
mov     eax, dword_4338f0[esi]
jmp     short loc_40d4a9
cmp     byte ptr [ebp+dwprocessid], 1
jnz     short loc_40d4a7
push    offset dwprocessid
push    offset windowname
push    ebx
mov     dword_448cfc, ebx
mov     dwprocessid, ebx
call    ds:findwindowa
push    eax
call    ds:getwindowthreadprocessid
push    [ebp+str1]
mov     ecx, offset str1
call    ??4cstring@@qaeabv0@pbd@z
push    lparam
push    offset enumfunc
call    ds:enumwindows
mov     eax, dword_448cfc
jmp     short loc_40d4a9
push    ebp
mov     ebp, esp
sub     esp, 40h
push    esi
mov     esi, [ebp+hwnd]
push    4
push    esi
call    ds:getwindow
test    eax, eax
jnz     short loc_40d591
push    esi
call    ds:iswindowvisible
test    eax, eax
jz      short loc_40d591
cmp     lparam, esi
jz      short loc_40d591
push    ebx
push    edi
lea     eax, [ebp+string]
push    40h
push    eax
push    esi
call    ds:getwindowtexta
mov     edi, str1
or      ecx, 0ffffffffh
xor     eax, eax
mov     ebx, edi
repne scasb
not     ecx
dec     ecx
lea     eax, [ebp+string]
push    ecx
push    eax
call    __strupr
pop     ecx
push    eax
push    ebx
call    _strncmp
add     esp, 0ch
test    eax, eax
pop     edi
pop     ebx
jnz     short loc_40d591
push    offset dword_448cfc
push    esi
call    ds:getwindowthreadprocessid
mov     eax, dwprocessid
cmp     eax, dword_448cfc
jnz     short loc_40d599
and     dword_448cfc, 0
push    1
pop     eax
pop     esi
leave
retn    8
xor     eax, eax
jmp     short loc_40d594
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     ecx, esi
mov     eax, [esi]
call    dword ptr [eax+0ch]
push    238h
mov     [ebp+var_4], eax
call    _malloc
mov     edi, eax
xor     ebx, ebx
cmp     edi, ebx
pop     ecx
jnz     short loc_40d5e0
push    ebx
push    offset caption
push    offset text
push    lparam
call    ds:messageboxa
jmp     loc_40d765
push    esi
call    sub_40d793
cmp     eax, 0ffffffffh
pop     ecx
mov     [edi+20ch], eax
jnz     short loc_40d614
push    ebx
push    offset caption
push    offset awrongiconfile
push    lparam
call    ds:messageboxa
push    edi
call    _free
jmp     loc_40d764
lea     eax, [eax+eax*4]
lea     eax, ds:210h[eax*8]
push    eax
push    edi
call    _realloc
mov     esi, eax
pop     ecx
cmp     esi, ebx
pop     ecx
jnz     short loc_40d63a
push    ebx
push    offset caption
push    offset aerrorallocatin_2
jmp     short loc_40d5fd
mov     edi, ds:lstrcpya
mov     ebx, offset caption
lea     eax, [esi+4]
push    ebx
push    eax
call    edi
lea     eax, [esi+108h]
push    offset byte_448d0c
push    eax
call    edi
mov     eax, [esi+20ch]
shl     eax, 4
push    eax
call    _malloc
mov     edi, eax
pop     ecx
test    edi, edi
jnz     short loc_40d679
push    eax
push    ebx
push    offset aerrorallocatin_3
jmp     short loc_40d6a1
mov     edx, [esi+20ch]
mov     ecx, [ebp+arg_0]
shl     edx, 4
mov     eax, [ecx]
push    edx
push    edi
call    dword ptr [eax+34h]
mov     ecx, [esi+20ch]
shl     ecx, 4
cmp     eax, ecx
jz      short loc_40d6b3
push    0
push    ebx
push    offset aerrorreadingfi
push    lparam
call    ds:messageboxa
push    esi
jmp     loc_40d60a
push    dword ptr [edi+8]
call    _malloc
test    eax, eax
pop     ecx
mov     [esi+224h], eax
jnz     short loc_40d6e2
push    eax
push    ebx
push    offset aerrorallocatin_4
push    lparam
call    ds:messageboxa
push    esi
call    _free
push    edi
jmp     short loc_40d75e
mov     eax, [edi+8]
push    0
mov     [esi+228h], eax
mov     ecx, [edi+0ch]
mov     eax, [ebp+arg_0]
add     ecx, [ebp+var_4]
mov     eax, [eax]
push    ecx
mov     ecx, [ebp+arg_0]
call    dword ptr [eax+28h]
mov     ecx, [edi+0ch]
add     ecx, [ebp+var_4]
cmp     eax, ecx
jz      short loc_40d713
push    0
push    ebx
push    offset aerrorseekingin
jmp     short loc_40d6cd
mov     ecx, [ebp+arg_0]
push    dword ptr [edi+8]
mov     eax, [ecx]
push    dword ptr [esi+224h]
call    dword ptr [eax+34h]
cmp     eax, [edi+8]
jz      short loc_40d733
push    0
push    ebx
push    offset aerrorreadingfi_0
jmp     short loc_40d74b
lea     eax, [esi+210h]
push    eax
call    sub_40d7e2
test    eax, eax
pop     ecx
jnz     short loc_40d769
push    eax
push    ebx
push    offset aerrorconvertin
push    lparam
call    ds:messageboxa
push    edi
call    _free
push    esi
call    _free
pop     ecx
pop     ecx
xor     eax, eax
jmp     short loc_40d78e
movzx   eax, word ptr [edi+4]
mov     [esi+21ch], eax
push    edi
movzx   eax, word ptr [edi+6]
mov     [esi+220h], eax
call    _free
push    0
call    _free
pop     ecx
mov     eax, esi
pop     ecx
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    2
mov     eax, [esi]
pop     edi
lea     ecx, [ebp+arg_0+2]
push    edi
push    ecx
mov     ecx, esi
call    dword ptr [eax+34h]
cmp     eax, edi
jnz     short loc_40d7d5
cmp     word ptr [ebp+arg_0+2], 0
jnz     short loc_40d7d5
mov     eax, [esi]
lea     ecx, [ebp+arg_0+2]
push    edi
push    ecx
mov     ecx, esi
call    dword ptr [eax+34h]
cmp     eax, edi
jnz     short loc_40d7d5
mov     eax, [esi]
lea     ecx, [ebp+arg_0+2]
push    edi
push    ecx
mov     ecx, esi
call    dword ptr [eax+34h]
cmp     eax, edi
jz      short loc_40d7da
or      eax, 0ffffffffh
jmp     short loc_40d7de
movzx   eax, word ptr [ebp+arg_0+2]
pop     edi
pop     esi
pop     ebp
retn
push    esi
mov     esi, [esp+4+arg_0]
test    esi, esi
jnz     short loc_40d7ef
xor     eax, eax
pop     esi
retn
mov     ecx, [esi+14h]
mov     [esi+1ch], ecx
push    ecx
mov     eax, [ecx+4]
mov     [esi], eax
mov     eax, [ecx+8]
cdq
sub     eax, edx
sar     eax, 1
mov     [esi+4], eax
movzx   eax, word ptr [ecx+0eh]
movzx   edx, word ptr [ecx+0ch]
imul    eax, edx
mov     [esi+8], eax
call    sub_40d321
push    dword ptr [esi+1ch]
mov     [esi+20h], eax
call    sub_40d397
imul    eax, [esi+4]
add     eax, [esi+20h]
pop     ecx
pop     ecx
push    1
mov     [esi+24h], eax
pop     eax
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
push    esi
mov     esi, [ebp+arg_0]
test    esi, esi
jz      short loc_40d84a
mov     ecx, [esi+14h]
test    ecx, ecx
jnz     short loc_40d84e
xor     eax, eax
jmp     short loc_40d8b2
mov     eax, [ecx+8]
push    edi
cdq
sub     eax, edx
push    0
sar     eax, 1
push    eax
mov     edi, 30000h
push    dword ptr [ecx+4]
push    edi
push    1
push    dword ptr [esi+18h]
push    ecx
call    ds:createiconfromresourceex
test    eax, eax
jnz     short loc_40d88c
mov     ecx, [esi+1ch]
cmp     word ptr [ecx+0eh], 10h
jz      short loc_40d88c
push    edi
push    1
push    dword ptr [esi+18h]
push    dword ptr [esi+14h]
call    ds:createiconfromresource
lea     ecx, [ebp+piconinfo]
push    ecx
push    eax
call    ds:geticoninfo
mov     eax, [esi+0ch]
and     [ebp+piconinfo.ficon], 0
mov     [ebp+piconinfo.xhotspot], eax
mov     eax, [esi+10h]
mov     [ebp+piconinfo.yhotspot], eax
lea     eax, [ebp+piconinfo]
push    eax
call    ds:createiconindirect
pop     edi
pop     esi
leave
retn
offset          = dword ptr  18h
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
mov     esi, [ebp+ppvbits]
push    edi
mov     ecx, esi
mov     eax, [esi]
call    dword ptr [eax+0ch]
lea     ecx, [ebp+var_14]
mov     [ebp+var_4], eax
mov     eax, [esi]
push    0eh
push    ecx
mov     ecx, esi
call    dword ptr [eax+34h]
cmp     eax, 0eh
jnz     short loc_40d8f9
cmp     [ebp+var_14], 4d42h
jnz     short loc_40d8f9
mov     ebx, 42ch
push    ebx
push    0
call    ds:globalalloc
mov     edi, eax
test    edi, edi
jnz     short loc_40d900
xor     eax, eax
jmp     loc_40d98d
mov     eax, [esi]
push    ebx
push    edi
mov     ecx, esi
call    dword ptr [eax+34h]
push    [ebp+offset]
lea     eax, [ebp+ppvbits]
push    [ebp+hsection]
push    eax
push    0
push    edi
push    0
call    ds:createdibsection
mov     [ebp+offset], eax
mov     eax, [edi+20h]
test    eax, eax
jz      short loc_40d92c
mov     edx, eax
jmp     short loc_40d934
mov     cl, [edi+0eh]
push    1
pop     edx
shl     edx, cl
cmp     word ptr [edi+0eh], 8
jbe     short loc_40d94d
push    3
pop     ecx
cmp     [edi+10h], ecx
jz      short loc_40d945
xor     ecx, ecx
add     eax, ecx
lea     eax, [edi+eax*4+28h]
jmp     short loc_40d951
lea     eax, [edi+edx*4+28h]
mov     ecx, [ebp+var_4]
sub     eax, edi
add     eax, 0eh
push    0
mov     ebx, eax
mov     eax, [esi]
add     ecx, ebx
push    ecx
mov     ecx, esi
call    dword ptr [eax+28h]
mov     ecx, [ebp+arg_0]
mov     eax, [esi]
sub     ecx, ebx
push    ecx
mov     ecx, esi
push    [ebp+ppvbits]
call    dword ptr [eax+34h]
push    edi
call    ds:globalfree
mov     eax, [ebp+arg_8]
test    eax, eax
jz      short loc_40d98a
mov     ecx, [ebp+ppvbits]
mov     [eax], ecx
mov     eax, [ebp+offset]
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     eax, [ebp+arg_8]
push    ebx
push    esi
push    edi
mov     edi, [ebp+pjbits]
and     dword ptr [eax], 0
lea     ecx, [ebp+var_10]
push    0eh
mov     eax, [edi]
push    ecx
mov     ecx, edi
call    dword ptr [eax+34h]
cmp     eax, 0eh
jnz     short loc_40d9e7
cmp     [ebp+var_10], 4d42h
jnz     short loc_40d9e7
mov     eax, [ebp+arg_4]
lea     ebx, [eax-0eh]
push    ebx
push    0
call    ds:globalalloc
mov     esi, eax
test    esi, esi
jz      short loc_40d9e7
mov     eax, [edi]
push    ebx
push    esi
mov     ecx, edi
call    dword ptr [eax+34h]
cmp     eax, ebx
jz      short loc_40d9ee
push    esi
call    ds:globalfree
xor     eax, eax
jmp     loc_40dae6
mov     eax, [esi+20h]
xor     ebx, ebx
cmp     eax, ebx
jz      short loc_40d9fb
mov     edi, eax
jmp     short loc_40da03
mov     cl, [esi+0eh]
push    1
pop     edi
shl     edi, cl
cmp     word ptr [esi+0eh], 8
jbe     short loc_40da1c
push    3
pop     ecx
cmp     [esi+10h], ecx
jz      short loc_40da14
xor     ecx, ecx
add     eax, ecx
lea     eax, [esi+eax*4+28h]
jmp     short loc_40da20
lea     eax, [esi+edi*4+28h]
cmp     [ebp+hpal], ebx
mov     [ebp+pjbits], eax
jz      short loc_40da89
cmp     edi, 100h
jg      short loc_40da89
lea     eax, ds:8[edi*4]
push    eax
call    sub_41c2f2
mov     ebx, eax
pop     ecx
test    edi, edi
mov     word ptr [ebx], 300h
mov     [ebx+2], di
jle     short loc_40da70
lea     eax, [ebx+5]
lea     ecx, [esi+29h]
mov     dl, [ecx+1]
mov     [eax-1], dl
mov     dl, [ecx]
mov     [eax], dl
mov     dl, [ecx-1]
mov     [eax+1], dl
and     byte ptr [eax+2], 0
add     ecx, 4
add     eax, 4
dec     edi
jnz     short loc_40da53
push    ebx
call    ds:createpalette
mov     ecx, [ebp+hpal]
push    eax
call    sub_41fbc4
push    ebx
call    ??3@yaxpax@z
pop     ecx
xor     ebx, ebx
push    ebx
lea     ecx, [ebp+var_24]
call    sub_41f9d0
xor     edi, edi
cmp     [ebp+hpal], ebx
jz      short loc_40dab0
push    ebx
lea     ecx, [ebp+var_24]
push    [ebp+hpal]
call    ?selectpalette@cdc@@qaepavcpalette@@pav2@h@z
push    [ebp+hdc]
mov     edi, eax
call    ds:realizepalette
push    ebx
push    esi
push    [ebp+pjbits]
push    4
push    esi
push    [ebp+hdc]
call    ds:createdibitmap
mov     ecx, [ebp+arg_8]
cmp     edi, ebx
mov     [ecx], eax
jz      short loc_40dad4
push    ebx
push    edi
lea     ecx, [ebp+var_24]
call    ?selectpalette@cdc@@qaepavcpalette@@pav2@h@z
push    esi
call    ds:globalfree
lea     ecx, [ebp+var_24]
call    sub_41fa42
push    1
pop     eax
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebx
xor     ebx, ebx
cmp     dword_44a660, ebx
push    esi
push    edi
jz      short loc_40db9f
xor     eax, eax
cmp     dword_44a658, ebx
setnz   al
jmp     loc_40dc56
push    offset auser32
call    ds:getmodulehandlea
mov     edi, eax
cmp     edi, ebx
jz      short loc_40dc26
mov     esi, ds:getprocaddress
push    offset agetsystemmetri
push    edi
call    esi
cmp     eax, ebx
mov     dword_44a648, eax
jz      short loc_40dc26
push    offset amonitorfromwin
push    edi
call    esi
cmp     eax, ebx
mov     dword_44a64c, eax
jz      short loc_40dc26
push    offset amonitorfromrec
push    edi
call    esi
cmp     eax, ebx
mov     dword_44a650, eax
jz      short loc_40dc26
push    offset amonitorfrompoi
push    edi
call    esi
cmp     eax, ebx
mov     dword_44a654, eax
jz      short loc_40dc26
push    offset aenumdisplaymon
push    edi
call    esi
cmp     eax, ebx
mov     dword_44a65c, eax
jz      short loc_40dc26
push    offset agetmonitorinfo
push    edi
call    esi
cmp     eax, ebx
mov     dword_44a658, eax
jz      short loc_40dc26
push    1
pop     eax
mov     dword_44a660, eax
jmp     short loc_40dc56
mov     dword_44a648, ebx
mov     dword_44a64c, ebx
mov     dword_44a650, ebx
mov     dword_44a654, ebx
mov     dword_44a658, ebx
mov     dword_44a65c, ebx
mov     dword_44a660, 1
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
push    esi
push    edi
call    sub_40db82
test    eax, eax
jz      short loc_40dc75
push    [esp+8+arg_4]
push    [esp+0ch+arg_0]
call    dword_44a650
jmp     short loc_40dcab
test    byte ptr [esp+8+arg_4], 3
jnz     short loc_40dca6
mov     esi, [esp+8+arg_0]
xor     eax, eax
cmp     [esi+8], eax
jle     short loc_40dca2
cmp     [esi+0ch], eax
jle     short loc_40dca2
mov     edi, ds:getsystemmetrics
push    eax
call    edi
cmp     [esi], eax
jge     short loc_40dca2
push    1
call    edi
cmp     [esi+4], eax
jl      short loc_40dca6
xor     eax, eax
jmp     short loc_40dcab
mov     eax, 12340042h
pop     edi
pop     esi
retn    8
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
call    sub_40db82
test    eax, eax
jz      short loc_40dd3a
push    [ebp+arg_4]
push    [ebp+arg_0]
call    dword_44a658
jmp     short loc_40dda8
cmp     [ebp+arg_0], 12340042h
jnz     short loc_40dda6
mov     ebx, [ebp+arg_4]
xor     esi, esi
cmp     ebx, esi
jz      short loc_40dda6
cmp     dword ptr [ebx], 28h
jb      short loc_40dda6
lea     eax, [ebp+pvparam]
push    esi
push    eax
push    esi
push    30h
call    ds:systemparametersinfoa
test    eax, eax
jz      short loc_40dda6
push    edi
mov     [ebx+4], esi
mov     [ebx+8], esi
push    esi
mov     esi, ds:getsystemmetrics
call    esi
push    1
mov     [ebx+0ch], eax
call    esi
lea     edi, [ebx+14h]
lea     esi, [ebp+pvparam]
movsd
movsd
movsd
cmp     dword ptr [ebx], 48h
push    1
movsd
pop     esi
mov     [ebx+10h], eax
mov     [ebx+24h], esi
pop     edi
jb      short loc_40dda2
add     ebx, 28h
push    offset string2
push    ebx
call    ds:lstrcpya
mov     eax, esi
jmp     short loc_40dda8
xor     eax, eax
pop     esi
pop     ebx
leave
retn    8
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ecx, [eax+4]
jmp     sub_41c03e
push    esi
mov     esi, ecx
call    sub_41830b
test    [esp+4+arg_0], 1
jz      short loc_40ddf6
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
push    [esp+4+arg_0]
call    ??0cexception@@qae@h@z
mov     eax, [esp+4+arg_4]
and     dword ptr [esi+0ch], 0
and     dword ptr [esi+10h], 0
mov     [esi+94h], eax
mov     dword ptr [esi], offset ??_7cresourceexception@@6b@
mov     eax, esi
pop     esi
retn    8
push    esi
mov     esi, ecx
call    sub_40de42
test    [esp+4+arg_0], 1
jz      short loc_40de3c
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     dword ptr [ecx], offset ??_7cresourceexception@@6b@
retn
push    esi
mov     esi, ecx
push    [esp+4+arg_0]
call    ??0cexception@@qae@h@z
mov     eax, [esp+4+arg_4]
and     dword ptr [esi+0ch], 0
and     dword ptr [esi+10h], 0
mov     [esi+94h], eax
mov     dword ptr [esi], offset ??_7cuserexception@@6b@
mov     eax, esi
pop     esi
retn    8
push    esi
mov     esi, ecx
call    sub_40de8f
test    [esp+4+arg_0], 1
jz      short loc_40de89
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     dword ptr [ecx], offset ??_7cuserexception@@6b@
retn
push    [esp+y]
push    [esp+4+x]
push    dword ptr [ecx+4]
call    ds:ptvisible
retn    8
push    [esp+lprect]
push    dword ptr [ecx+4]
call    ds:rectvisible
retn    4
push    [esp+c]
push    [esp+4+lpstring]
push    [esp+8+y]
push    [esp+0ch+x]
push    dword ptr [ecx+4]
call    ds:textouta
retn    10h
push    [esp+format]
push    [esp+4+lprc]
push    [esp+8+cchtext]
push    [esp+0ch+lpchtext]
push    dword ptr [ecx+4]
call    ds:drawtexta
retn    10h
push    [esp+pvout]
push    [esp+4+pvin]
push    [esp+8+cjin]
push    [esp+0ch+iescape]
push    dword ptr [ecx+4]
call    ds:escape
retn    10h
mov     eax, [ecx]
jmp     dword ptr [eax+0c4h]
push    esi
mov     esi, ecx
call    sub_40dfd6
test    [esp+4+arg_0], 1
jz      short loc_40dfd0
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
mov     eax, [esi+4]
mov     dword ptr [esi], offset ??_7csyncobject@@6b@
test    eax, eax
jz      short loc_40dff1
push    eax
call    ds:closehandle
and     dword ptr [esi+4], 0
pop     esi
retn
push    esi
mov     esi, ecx
push    [esp+4+arg_0]
mov     ecx, [esi]
mov     eax, [ecx]
call    dword ptr [eax+0ch]
mov     [esi+8], eax
pop     esi
retn    4
push    [esp+lpstring]
add     ecx, 0ch
call    ??4cstring@@qaeabv0@pbd@z
retn    4
push    esi
mov     esi, ecx
push    [esp+4+arg_0]
call    ??0cexception@@qae@h@z
mov     eax, [esp+4+arg_4]
and     dword ptr [esi+0ch], 0
and     dword ptr [esi+10h], 0
mov     [esi+94h], eax
mov     dword ptr [esi], offset ??_7cmemoryexception@@6b@
mov     eax, esi
pop     esi
retn    8
push    esi
mov     esi, ecx
call    sub_40e0bb
test    [esp+4+arg_0], 1
jz      short loc_40e0b5
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     dword ptr [ecx], offset ??_7cmemoryexception@@6b@
retn
push    esi
mov     esi, ecx
push    [esp+4+arg_0]
call    ??0cexception@@qae@h@z
mov     eax, [esp+4+arg_4]
and     dword ptr [esi+0ch], 0
and     dword ptr [esi+10h], 0
mov     [esi+94h], eax
mov     dword ptr [esi], offset ??_7cnotsupportedexception@@6b@
mov     eax, esi
pop     esi
retn    8
push    esi
mov     esi, ecx
call    sub_40e108
test    [esp+4+arg_0], 1
jz      short loc_40e102
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     dword ptr [ecx], offset ??_7cnotsupportedexception@@6b@
retn
push    esi
mov     esi, ecx
call    sub_40e22f
test    [esp+4+arg_0], 1
jz      short loc_40e229
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422e76
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7chandlemap@@6b@
mov     [ebp+var_4], 1
call    sub_41ec32
and     byte ptr [ebp+var_4], 0
lea     ecx, [esi+20h]
call    sub_4189e5
or      [ebp+var_4], 0ffffffffh
lea     ecx, [esi+4]
call    sub_4189e5
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
mov     eax, [esp+arg_0]
push    esi
mov     esi, ecx
and     dword ptr [esi+0ch], 0
and     dword ptr [esi+8], 0
mov     [esi], eax
mov     eax, [esp+4+arg_4]
mov     [esi+4], eax
lea     eax, [esi+10h]
push    eax
call    ds:initializecriticalsection
mov     eax, esi
pop     esi
retn    8
push    esi
mov     esi, ecx
call    sub_40e2b3
add     esi, 10h
push    esi
call    ds:deletecriticalsection
pop     esi
retn
push    esi
mov     esi, ecx
push    edi
lea     edi, [esi+10h]
push    edi
call    ds:entercriticalsection
mov     ecx, [esi+8]
call    ?freedatachain@cplex@@qaexxz
and     dword ptr [esi+8], 0
and     dword ptr [esi+0ch], 0
push    edi
call    ds:leavecriticalsection
pop     edi
pop     esi
retn
mov     eax, offset loc_422ebc
call    __eh_prolog
sub     esp, 0ch
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     [ebp+var_10], esp
mov     [ebp+var_14], esi
lea     ebx, [esi+10h]
push    ebx
call    ds:entercriticalsection
cmp     dword ptr [esi+0ch], 0
jnz     short loc_40e334
push    dword ptr [esi]
and     [ebp+var_4], 0
lea     eax, [esi+8]
push    dword ptr [esi+4]
push    eax
call    ?create@cplex@@sgpau1@aapau1@ii@z
mov     ecx, [esi+4]
dec     ecx
mov     edx, ecx
imul    edx, [esi]
test    ecx, ecx
lea     eax, [edx+eax+4]
jl      short loc_40e334
inc     ecx
mov     edx, [esi+0ch]
mov     [eax], edx
mov     [esi+0ch], eax
sub     eax, [esi]
dec     ecx
jnz     short loc_40e327
mov     edi, [esi+0ch]
push    ebx
mov     eax, [edi]
mov     [esi+0ch], eax
call    ds:leavecriticalsection
mov     ecx, [ebp+var_c]
mov     eax, edi
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
leave
retn
mov     eax, [ebp+var_14]
add     eax, 10h
push    eax
call    ds:leavecriticalsection
push    0
push    0
call    __cxxthrowexception@8
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, ecx
test    edi, edi
jz      short loc_40e391
push    ebx
lea     ebx, [esi+10h]
push    ebx
call    ds:entercriticalsection
mov     eax, [esi+0ch]
push    ebx
mov     [edi], eax
mov     [esi+0ch], edi
call    ds:leavecriticalsection
pop     ebx
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
call    sub_40e3b2
test    [esp+4+arg_0], 1
jz      short loc_40e3ac
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422fa0
call    __eh_prolog
push    ecx
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7carchiveexception@@6b@
and     [ebp+var_4], 0
add     ecx, 0ch
call    sub_41c5b1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
push    19h
call    __amsg_exit
retn
pop     edi
pop     esi
pop     ebx
leave
retn    8
pop     ecx
or      dword ptr [ebp-4], 0ffffffffh
xor     eax, eax
mov     ecx, [ebp-10h]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
leave
retn    4
pop     esi
retn
pop     edi
retn
mov     eax, [esp+4]
mov     dl, byte_42c4f4
mov     cl, [eax]
test    cl, cl
jz      short loc_411dd7
cmp     cl, dl
jz      short loc_411dd7
mov     cl, [eax+1]
inc     eax
test    cl, cl
jnz     short loc_411dcb
mov     cl, [eax]
inc     eax
test    cl, cl
jz      short locret_411e08
mov     cl, [eax]
test    cl, cl
jz      short loc_411df1
cmp     cl, 65h
jz      short loc_411df1
cmp     cl, 45h
jz      short loc_411df1
inc     eax
jmp     short loc_411dde
mov     ecx, eax
dec     eax
cmp     byte ptr [eax], 30h
jz      short loc_411df3
cmp     [eax], dl
jnz     short loc_411dfe
dec     eax
mov     dl, [ecx]
inc     eax
inc     ecx
test    dl, dl
mov     [eax], dl
jnz     short loc_411dfe
retn
mov     eax, [esp+4]
fld     qword ptr [eax]
fcomp   ds:dbl_424260
fnstsw  ax
sahf
jb      short loc_411e1e
push    1
pop     eax
retn
xor     eax, eax
retn
push    esi
inc     ebx
xor     dh, [eax]
pop     eax
inc     ebx
xor     [eax], dh
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset stru_426b70
push    offset __except_handler3
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
push    ecx
push    ebx
push    esi
push    edi
mov     [ebp+ms_exc.old_esp], esp
and     [ebp+ms_exc.registration.trylevel], 0
mov     eax, off_42ca10
test    eax, eax
jz      short loc_414b85
mov     [ebp+ms_exc.registration.trylevel], 1
call    eax
push    1
pop     eax
retn
mov     esp, [ebp+ms_exc.old_esp]
and     [ebp+ms_exc.registration.trylevel], 0
or      [ebp+ms_exc.registration.trylevel], 0ffffffffh
call    $+5
jmp     ?terminate@@yaxxz
push    offset ?__cxxunhandledexceptionfilter@@ygjpau_exception_pointers@@@z
call    ds:setunhandledexceptionfilter
mov     lpfn, eax
retn
push    lpfn
call    ds:setunhandledexceptionfilter
retn
push    offset dword_42cb40
push    [esp+4+arg_4]
push    [esp+8+arg_0]
call    __ld12cvt
add     esp, 0ch
retn
push    offset dword_42cb58
push    [esp+4+arg_4]
push    [esp+8+arg_0]
call    __ld12cvt
add     esp, 0ch
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+arg_4]
push    eax
lea     eax, [ebp+var_c]
push    eax
call    ___strgtold12
push    [ebp+arg_0]
lea     eax, [ebp+var_c]
push    eax
call    sub_415b86
add     esp, 24h
leave
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+arg_4]
push    eax
lea     eax, [ebp+var_c]
push    eax
call    ___strgtold12
push    [ebp+arg_0]
lea     eax, [ebp+var_c]
push    eax
call    sub_415b9c
add     esp, 24h
leave
retn
push    1
call    _flsall
pop     ecx
retn
push    1
push    0
call    ?afxtermlocaldata@@ygxpauhinstance__@@h@z
call    sub_422412
jmp     ?afxtlsrelease@@ygxxz
jmp     $+5
push    600h
push    0
call    ?afxinitialize@@yghhk@z
push    offset sub_417c76
call    _atexit
pop     ecx
mov     byte_44b0dc, al
retn
mov     eax, offset loc_422a93
call    __eh_prolog
push    ecx
mov     edx, [ebp+arg_4]
and     [ebp+var_10], 0
test    edx, edx
jge     short loc_417cc3
xor     edx, edx
mov     eax, [ebp+size]
test    eax, eax
jge     short loc_417ccc
xor     eax, eax
push    esi
mov     esi, [ecx]
push    edi
lea     edi, [edx+eax]
mov     esi, [esi-8]
cmp     edi, esi
jle     short loc_417cde
mov     eax, esi
sub     eax, edx
cmp     edx, esi
jle     short loc_417ce4
xor     eax, eax
test    edx, edx
jnz     short loc_417cf7
cmp     eax, esi
jnz     short loc_417cf7
push    ecx
mov     ecx, [ebp+arg_0]
call    sub_41c326
jmp     short loc_417d2e
mov     esi, off_42b8a0
mov     [ebp+arg_4], esi
push    1
pop     esi
push    0
push    edx
push    eax
lea     eax, [ebp+arg_4]
push    eax
mov     [ebp+var_4], esi
call    sub_41c5db
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+arg_4]
push    eax
call    sub_41c326
and     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+arg_4]
mov     [ebp+var_10], esi
call    sub_41c5b1
mov     ecx, [ebp+var_c]
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     large fs:0, ecx
leave
retn    0ch
mov     eax, offset loc_422abf
call    __eh_prolog
push    ecx
mov     edx, [ebp+size]
and     [ebp+var_10], 0
test    edx, edx
jge     short loc_417d59
xor     edx, edx
mov     eax, [ecx]
cmp     edx, [eax-8]
jl      short loc_417d6e
push    ecx
mov     ecx, [ebp+arg_0]
call    sub_41c326
mov     eax, [ebp+arg_0]
jmp     short loc_417daf
push    esi
mov     esi, off_42b8a0
mov     [ebp+size], esi
mov     eax, [eax-8]
push    1
pop     esi
sub     eax, edx
push    0
push    eax
lea     eax, [ebp+size]
push    edx
push    eax
mov     [ebp+var_4], esi
call    sub_41c5db
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+size]
push    eax
call    sub_41c326
and     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+size]
mov     [ebp+var_10], esi
call    sub_41c5b1
mov     eax, [ebp+arg_0]
pop     esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn    8
mov     eax, offset loc_422aeb
call    __eh_prolog
push    ecx
mov     eax, [ebp+size]
and     [ebp+var_10], 0
test    eax, eax
jge     short loc_417dd5
xor     eax, eax
mov     edx, [ecx]
cmp     eax, [edx-8]
jl      short loc_417dea
push    ecx
mov     ecx, [ebp+arg_0]
call    sub_41c326
mov     eax, [ebp+arg_0]
jmp     short loc_417e27
mov     edx, off_42b8a0
push    esi
mov     [ebp+size], edx
push    1
pop     esi
push    0
push    0
push    eax
lea     eax, [ebp+size]
push    eax
mov     [ebp+var_4], esi
call    sub_41c5db
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+size]
push    eax
call    sub_41c326
and     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+size]
mov     [ebp+var_10], esi
call    sub_41c5b1
mov     eax, [ebp+arg_0]
pop     esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn    8
push    0
push    [esp+4+substr]
call    sub_417e43
retn    4
push    esi
mov     esi, ecx
mov     ecx, [esp+4+arg_4]
mov     eax, [esi]
cmp     ecx, [eax-8]
jg      short loc_417e63
push    [esp+4+substr]
add     eax, ecx
push    eax
call    __mbsstr
pop     ecx
test    eax, eax
pop     ecx
jnz     short loc_417e68
or      eax, 0ffffffffh
jmp     short loc_417e6a
sub     eax, [esi]
pop     esi
retn    8
sub     esp, 10h
and     [esp+10h+var_10], 0
push    ebp
mov     ebp, [esp+14h+arg_4]
push    esi
mov     esi, [esp+18h+ptr]
push    edi
mov     edi, ecx
mov     [esp+1ch+arglist], ebp
cmp     byte ptr [esi], 0
mov     [esp+1ch+var_8], edi
jz      loc_418147
push    ebx
cmp     byte ptr [esi], 25h
jnz     loc_418129
push    esi
call    __mbsinc
mov     esi, eax
pop     ecx
mov     al, [esi]
cmp     al, 25h
jz      loc_418129
xor     edi, edi
test    al, al
mov     [esp+20h+arg_4], edi
jz      short loc_417efb
cmp     al, 23h
jnz     short loc_417ec6
add     [esp+20h+var_10], 2
jmp     short loc_417ee6
cmp     al, 2ah
jnz     short loc_417ed6
mov     eax, [ebp+0]
add     ebp, 4
mov     [esp+20h+arg_4], eax
jmp     short loc_417ee6
cmp     al, 2dh
jz      short loc_417ee6
cmp     al, 2bh
jz      short loc_417ee6
cmp     al, 30h
jz      short loc_417ee6
cmp     al, 20h
jnz     short loc_417ef5
push    esi
call    __mbsinc
mov     esi, eax
pop     ecx
mov     al, [esi]
test    al, al
jnz     short loc_417ebb
cmp     [esp+20h+arg_4], edi
jnz     short loc_417f25
push    esi
call    _atoi
pop     ecx
mov     [esp+20h+arg_4], eax
mov     al, [esi]
test    al, al
jz      short loc_417f25
movsx   eax, al
push    eax
call    __ismbcdigit
test    eax, eax
pop     ecx
jz      short loc_417f25
push    esi
call    __mbsinc
pop     ecx
mov     esi, eax
jmp     short loc_417f06
xor     ebx, ebx
cmp     byte ptr [esi], 2eh
jnz     short loc_417f49
push    esi
call    __mbsinc
mov     esi, eax
pop     ecx
cmp     byte ptr [esi], 2ah
jnz     short loc_417f6f
mov     ebx, [ebp+0]
add     ebp, 4
push    esi
call    __mbsinc
pop     ecx
mov     esi, eax
and     [esp+20h+var_c], 0
push    3
push    offset str2
push    esi
call    __mbsnbcmp
add     esp, 0ch
test    eax, eax
jnz     short loc_417f97
add     esi, 3
mov     [esp+20h+var_c], 40000h
jmp     short loc_417fcd
push    esi
call    _atoi
pop     ecx
mov     ebx, eax
mov     al, [esi]
test    al, al
jz      short loc_417f49
movsx   eax, al
push    eax
call    __ismbcdigit
test    eax, eax
pop     ecx
jz      short loc_417f49
push    esi
call    __mbsinc
pop     ecx
mov     esi, eax
jmp     short loc_417f78
movsx   eax, byte ptr [esi]
sub     eax, 46h
jz      short loc_417fc4
sub     eax, 6
jz      short loc_417fc4
dec     eax
dec     eax
jz      short loc_417fc4
sub     eax, 1ah
jz      short loc_417fbc
sub     eax, 4
jnz     short loc_417fcd
mov     [esp+20h+var_c], 20000h
jmp     short loc_417fc4
mov     [esp+20h+var_c], 10000h
push    esi
call    __mbsinc
pop     ecx
mov     esi, eax
movsx   eax, byte ptr [esi]
or      eax, [esp+20h+var_c]
mov     ecx, 10063h
cmp     eax, ecx
jg      short loc_418055
jz      loc_418085
sub     eax, 43h
jz      loc_418085
push    10h
pop     ecx
sub     eax, ecx
jz      short loc_418072
sub     eax, ecx
jz      loc_418085
sub     eax, ecx
jz      loc_41808d
sub     eax, 0ffd0h
jz      short loc_418085
sub     eax, ecx
jz      short loc_41808d
movsx   eax, byte ptr [esi]
cmp     eax, 69h
jg      loc_4180e5
jz      loc_418110
sub     eax, 47h
jz      loc_4180db
sub     eax, 11h
jz      loc_418110
sub     eax, 0ch
jz      loc_418110
dec     eax
jz      loc_4180db
dec     eax
jz      loc_4180cb
dec     eax
jz      loc_4180db
jmp     loc_41811f
sub     eax, 10073h
jz      short loc_41808d
sub     eax, 0ffd0h
jz      short loc_418085
sub     eax, 10h
jz      short loc_418072
sub     eax, 10h
jz      short loc_418085
sub     eax, 10h
jnz     short loc_41800e
mov     eax, [ebp+0]
add     ebp, 4
test    eax, eax
jz      short loc_418097
push    eax
call    _wcslen
pop     ecx
jmp     short loc_4180a3
push    2
add     ebp, 4
pop     edi
jmp     short loc_4180b5
mov     eax, [ebp+0]
add     ebp, 4
test    eax, eax
jnz     short loc_41809c
push    6
pop     edi
jmp     short loc_4180b5
push    eax
call    ds:lstrlena
mov     edi, eax
cmp     edi, 1
jge     short loc_4180ad
push    1
pop     edi
test    edi, edi
jz      loc_41800e
test    ebx, ebx
jz      short loc_4180bf
cmp     edi, ebx
jl      short loc_4180bf
mov     edi, ebx
cmp     edi, [esp+20h+arg_4]
jg      short loc_41811f
mov     edi, [esp+20h+arg_4]
jmp     short loc_41811f
add     ebp, 8
mov     edi, 80h
lea     eax, [ebx+138h]
jmp     short loc_418108
add     ebp, 8
mov     edi, 80h
jmp     short loc_418102
sub     eax, 6eh
jz      short loc_41811c
dec     eax
jz      short loc_418110
dec     eax
jz      short loc_4180fc
sub     eax, 5
jz      short loc_418110
sub     eax, 3
jz      short loc_418110
jmp     short loc_41811f
add     ebp, 4
push    20h
pop     edi
mov     eax, [esp+20h+arg_4]
add     eax, ebx
cmp     eax, edi
jl      short loc_41811f
mov     edi, eax
jmp     short loc_41811f
test    byte ptr [esp+20h+var_c+2], 4
jz      short loc_4180fc
add     ebp, 8
jmp     short loc_4180ff
add     ebp, 4
add     [esp+20h+var_10], edi
mov     edi, [esp+20h+var_8]
jmp     short loc_418134
push    esi
call    __mbclen
add     [esp+24h+var_10], eax
pop     ecx
push    esi
call    __mbsinc
mov     esi, eax
pop     ecx
cmp     byte ptr [esi], 0
jnz     loc_417e95
pop     ebx
push    [esp+1ch+var_10]
mov     ecx, edi
call    sub_41c8ad
push    [esp+1ch+arglist]
push    [esp+20h+ptr]
push    dword ptr [edi]
call    _vsprintf
add     esp, 0ch
mov     ecx, edi
push    0ffffffffh
call    ?releasebuffer@cstring@@qaexh@z
pop     edi
pop     esi
pop     ebp
add     esp, 10h
retn    8
mov     ecx, [esp+arg_0]
lea     eax, [esp+arg_8]
push    eax
push    [esp+4+ptr]
call    sub_417e6e
retn
push    ebp
mov     ebp, esp
push    ecx
lea     eax, [ebp+pexceptionobject]
push    offset __ti5pavcmemoryexception@@
push    eax
mov     [ebp+pexceptionobject], offset dword_44a9b8
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
push    ecx
lea     eax, [ebp+pexceptionobject]
push    offset __ti5pavcnotsupportedexception@@
push    eax
mov     [ebp+pexceptionobject], offset dword_44a920
call    __cxxthrowexception@8
mov     eax, offset loc_422a3c
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7cricheditctrl@@6b@
and     [ebp+var_4], 0
call    sub_419be4
or      [ebp+var_4], 0ffffffffh
mov     ecx, esi
call    ??1cwnd@@uae@xz
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
mov     eax, offset off_425ea0
retn
push    esi
mov     esi, ecx
call    ??1ctooltipctrl@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_418398
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    ebx
push    esi
push    edi
mov     ebx, ecx
push    1000h
call    sub_41b72a
mov     edi, [esp+0ch+arg_0]
xor     esi, esi
cmp     edi, esi
jnz     short loc_4183bb
xor     eax, eax
jmp     short loc_4183be
mov     eax, [edi+1ch]
mov     ecx, [esp+0ch+arg_4]
push    esi
push    esi
push    eax
mov     eax, 80000000h
push    eax
push    eax
push    eax
or      ecx, eax
push    eax
push    ecx
push    esi
push    offset atooltipsclass3
push    esi
mov     ecx, ebx
call    sub_4198f5
cmp     eax, esi
jz      short loc_4183ed
cmp     edi, esi
jz      short loc_4183ea
mov     esi, [edi+1ch]
mov     [ebx+20h], esi
pop     edi
pop     esi
pop     ebx
retn    8
push    esi
mov     esi, ecx
mov     eax, [esi]
call    dword ptr [eax+58h]
test    esi, esi
jz      short loc_41844f
mov     eax, [esi]
push    1
mov     ecx, esi
call    dword ptr [eax+4]
push    1
pop     eax
pop     esi
retn
push    esi
mov     esi, ecx
mov     eax, [esi+20h]
mov     dword ptr [esi], offset ??_7_afx_richedit_state@@6b@
test    eax, eax
jz      short loc_418621
push    eax
call    ds:freelibrary
mov     ecx, esi
call    sub_420d0d
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_41860a
test    [esp+4+arg_0], 1
jz      short loc_41863f
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
call    nullsub_3
jmp     loc_418680
push    offset sub_41868c
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a91c
jmp     $+5
jmp     ??1cprocesslocalobject@@qae@xz
mov     eax, ecx
xor     ecx, ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+8], ecx
mov     [eax+4], ecx
mov     [eax+14h], ecx
mov     ecx, [esp+arg_0]
mov     dword ptr [eax], offset ??_7cstringlist@@6b@
mov     [eax+18h], ecx
retn    4
push    esi
mov     esi, ecx
call    sub_41874c
test    [esp+4+arg_0], 1
jz      short loc_418711
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422cbc
call    __eh_prolog
push    ecx
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7cstringlist@@6b@
and     [ebp+var_4], 0
call    ?removeall@cstringlist@@qaexxz
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
push    esi
mov     esi, ecx
push    edi
cmp     dword ptr [esi+10h], 0
jnz     short loc_4187ae
push    0ch
lea     eax, [esi+14h]
push    dword ptr [esi+18h]
push    eax
call    ?create@cplex@@sgpau1@aapau1@ii@z
mov     ecx, [esi+18h]
add     eax, 4
lea     edx, [ecx+ecx*2]
dec     ecx
test    ecx, ecx
lea     eax, [eax+edx*4-0ch]
jl      short loc_4187ae
inc     ecx
mov     edx, [esi+10h]
mov     [eax], edx
mov     [esi+10h], eax
sub     eax, 0ch
dec     ecx
jnz     short loc_4187a0
mov     edi, [esi+10h]
push    4
push    offset off_42b8a0
mov     eax, [edi]
mov     [esi+10h], eax
mov     eax, [esp+10h+arg_0]
mov     [edi+4], eax
mov     eax, [esp+10h+arg_4]
mov     [edi], eax
inc     dword ptr [esi+0ch]
lea     eax, [edi+8]
push    eax
call    _memcpy
add     esp, 0ch
mov     eax, edi
pop     edi
pop     esi
retn    8
mov     eax, offset loc_422cd0
call    __eh_prolog
push    esi
mov     esi, ecx
push    [ebp+lpstring]
lea     ecx, [ebp+lpstring]
call    sub_41c61f
and     [ebp+var_4], 0
push    eax
mov     ecx, esi
call    sub_418823
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+lpstring]
mov     esi, eax
call    sub_41c5b1
mov     ecx, [ebp+var_c]
mov     eax, esi
pop     esi
mov     large fs:0, ecx
leave
retn    4
push    esi
push    edi
mov     esi, ecx
push    0
push    dword ptr [esi+8]
call    sub_418775
push    [esp+8+arg_0]
mov     edi, eax
lea     ecx, [edi+8]
call    sub_41c69e
mov     eax, [esi+8]
test    eax, eax
jz      short loc_41884a
mov     [eax], edi
jmp     short loc_41884d
mov     [esi+4], edi
mov     [esi+8], edi
mov     eax, edi
pop     edi
pop     esi
retn    4
mov     eax, offset loc_422ce4
call    __eh_prolog
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
mov     eax, [edi+14h]
not     eax
test    al, 1
jz      short loc_418890
push    dword ptr [esi+0ch]
mov     ecx, edi
call    ?writecount@carchive@@qaexk@z
mov     esi, [esi+4]
test    esi, esi
jz      short loc_4188d4
lea     eax, [esi+8]
push    eax
push    edi
call    sub_41fc5d
mov     esi, [esi]
jmp     short loc_41887e
mov     ecx, edi
call    ?readcount@carchive@@qaekxz
mov     ecx, off_42b8a0
mov     [ebp+arg_0], ecx
and     [ebp+var_4], 0
mov     ecx, eax
dec     eax
test    ecx, ecx
jz      short loc_4188c8
push    ebx
lea     ebx, [eax+1]
lea     eax, [ebp+arg_0]
push    eax
push    edi
call    sub_41fd2d
lea     eax, [ebp+arg_0]
mov     ecx, esi
push    eax
call    sub_418823
dec     ebx
jnz     short loc_4188af
pop     ebx
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+arg_0]
call    sub_41c5b1
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
leave
retn    4
mov     eax, [esp+arg_0]
mov     edx, [ecx+10h]
mov     [eax], edx
dec     dword ptr [ecx+0ch]
mov     [ecx+10h], eax
jnz     short locret_418950
call    sub_41891a
retn    4
mov     eax, [ecx+4]
push    esi
mov     edx, [eax]
mov     esi, [eax+8]
test    edx, edx
mov     [ecx+4], edx
jz      short loc_418969
and     dword ptr [edx+4], 0
jmp     short loc_41896d
and     dword ptr [ecx+8], 0
push    eax
call    sub_41893a
mov     eax, esi
pop     esi
retn
mov     eax, ecx
xor     ecx, ecx
mov     [eax+4], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     ecx, [esp+arg_0]
mov     dword ptr [eax], offset ??_7cmapptrtoptr@@6b@
mov     dword ptr [eax+8], 11h
mov     [eax+18h], ecx
retn    4
push    esi
mov     esi, ecx
call    sub_4189e5
test    [esp+4+arg_0], 1
jz      short loc_4189b4
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422e88
call    __eh_prolog
push    ecx
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7cmapptrtoptr@@6b@
and     [ebp+var_4], 0
call    sub_4189ba
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
push    esi
mov     esi, ecx
cmp     dword ptr [esi+10h], 0
jnz     short loc_418a46
push    0ch
lea     eax, [esi+14h]
push    dword ptr [esi+18h]
push    eax
call    ?create@cplex@@sgpau1@aapau1@ii@z
mov     ecx, [esi+18h]
add     eax, 4
lea     edx, [ecx+ecx*2]
dec     ecx
test    ecx, ecx
lea     eax, [eax+edx*4-0ch]
jl      short loc_418a46
inc     ecx
mov     edx, [esi+10h]
mov     [eax], edx
mov     [esi+10h], eax
sub     eax, 0ch
dec     ecx
jnz     short loc_418a38
mov     eax, [esi+10h]
mov     ecx, [eax]
inc     dword ptr [esi+0ch]
mov     [esi+10h], ecx
and     dword ptr [eax+4], 0
and     dword ptr [eax+8], 0
pop     esi
retn
mov     eax, [esp+arg_0]
mov     edx, [ecx+10h]
mov     [eax], edx
dec     dword ptr [ecx+0ch]
mov     [ecx+10h], eax
jnz     short locret_418a71
call    sub_4189ba
retn    4
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
lea     eax, [ebp+arg_0]
push    eax
mov     esi, ecx
push    edi
call    sub_418a74
test    eax, eax
jnz     short loc_418b20
cmp     [esi+4], eax
jnz     short loc_418b02
push    1
mov     ecx, esi
push    dword ptr [esi+8]
call    sub_418c20
mov     ecx, esi
call    sub_418a0e
mov     [eax+4], edi
mov     ecx, [esi+4]
mov     edx, [ebp+arg_0]
mov     ecx, [ecx+edx*4]
mov     [eax], ecx
mov     ecx, [esi+4]
mov     edx, [ebp+arg_0]
mov     [ecx+edx*4], eax
pop     edi
add     eax, 8
pop     esi
pop     ebp
retn    4
push    esi
mov     esi, [ecx+4]
test    esi, esi
push    edi
jz      short loc_418b64
mov     edi, [esp+8+arg_0]
xor     edx, edx
mov     eax, edi
shr     eax, 4
div     dword ptr [ecx+8]
mov     eax, [esi+edx*4]
lea     edx, [esi+edx*4]
test    eax, eax
jz      short loc_418b64
cmp     [eax+4], edi
jz      short loc_418b55
mov     edx, eax
mov     eax, [eax]
jmp     short loc_418b46
mov     esi, [eax]
push    eax
mov     [edx], esi
call    sub_418a5b
push    1
pop     eax
jmp     short loc_418b66
xor     eax, eax
pop     edi
pop     esi
retn    4
mov     eax, [esp+arg_0]
push    esi
push    edi
mov     esi, [eax]
cmp     esi, 0ffffffffh
jnz     short loc_418b92
mov     edx, [ecx+8]
xor     edi, edi
test    edx, edx
jbe     short loc_418b92
mov     eax, [ecx+4]
mov     esi, [eax]
test    esi, esi
jnz     short loc_418b92
inc     edi
add     eax, 4
cmp     edi, edx
jb      short loc_418b84
mov     edi, [esi]
test    edi, edi
jnz     short loc_418bc0
mov     eax, [esi+4]
push    ebx
mov     ebx, [ecx+8]
xor     edx, edx
shr     eax, 4
div     ebx
inc     edx
cmp     edx, ebx
jnb     short loc_418bbf
mov     eax, [ecx+4]
lea     eax, [eax+edx*4]
mov     edi, [eax]
test    edi, edi
jnz     short loc_418bbf
inc     edx
add     eax, 4
cmp     edx, ebx
jb      short loc_418bb1
pop     ebx
mov     eax, [esp+8+arg_0]
mov     ecx, [esp+8+arg_4]
mov     [eax], edi
mov     eax, [esi+4]
mov     [ecx], eax
mov     ecx, [esp+8+arg_8]
mov     eax, [esi+8]
pop     edi
mov     [ecx], eax
pop     esi
retn    0ch
mov     eax, ecx
xor     ecx, ecx
mov     [eax+4], ecx
mov     [eax+0ch], ecx
mov     [eax+10h], ecx
mov     [eax+14h], ecx
mov     ecx, [esp+arg_0]
mov     dword ptr [eax], offset ??_7cmapstringtoptr@@6b@
mov     dword ptr [eax+8], 11h
mov     [eax+18h], ecx
retn    4
push    esi
mov     esi, ecx
call    sub_418cb7
test    [esp+4+arg_0], 1
jz      short loc_418c1a
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    ebx
push    esi
mov     esi, ecx
mov     eax, [esi+4]
test    eax, eax
jz      short loc_418c36
push    eax
call    ??3@yaxpax@z
and     dword ptr [esi+4], 0
pop     ecx
cmp     [esp+8+arg_4], 0
mov     ebx, [esp+8+arg_0]
jz      short loc_418c5d
push    edi
mov     edi, ebx
shl     edi, 2
push    edi
call    sub_41c2f2
push    edi
push    0
push    eax
mov     [esi+4], eax
call    _memset
add     esp, 10h
pop     edi
mov     [esi+8], ebx
pop     esi
pop     ebx
retn    8
mov     eax, offset loc_422ed0
call    __eh_prolog
push    ecx
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7cmapstringtoptr@@6b@
and     [ebp+var_4], 0
call    sub_418c65
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
push    esi
mov     esi, ecx
push    edi
cmp     dword ptr [esi+10h], 0
jnz     short loc_418d1b
push    10h
lea     eax, [esi+14h]
push    dword ptr [esi+18h]
push    eax
call    ?create@cplex@@sgpau1@aapau1@ii@z
mov     ecx, [esi+18h]
add     eax, 4
mov     edx, ecx
shl     edx, 4
dec     ecx
test    ecx, ecx
lea     eax, [eax+edx-10h]
jl      short loc_418d1b
inc     ecx
mov     edx, [esi+10h]
mov     [eax], edx
mov     [esi+10h], eax
sub     eax, 10h
dec     ecx
jnz     short loc_418d0d
mov     edi, [esi+10h]
push    4
push    offset off_42b8a0
mov     eax, [edi]
inc     dword ptr [esi+0ch]
mov     [esi+10h], eax
lea     eax, [edi+8]
push    eax
call    _memcpy
and     dword ptr [edi+0ch], 0
add     esp, 0ch
mov     eax, edi
pop     edi
pop     esi
retn
push    esi
push    edi
mov     edi, [esp+8+str2]
xor     eax, eax
mov     esi, edi
mov     dl, [edi]
test    dl, dl
jz      short loc_418d60
imul    eax, 21h
movsx   edx, dl
add     eax, edx
mov     dl, [esi+1]
inc     esi
jmp     short loc_418d4e
xor     edx, edx
div     dword ptr [ecx+8]
mov     eax, [esp+8+arg_4]
mov     [eax], edx
mov     eax, [ecx+4]
test    eax, eax
jz      short loc_418d91
mov     esi, [eax+edx*4]
test    esi, esi
jz      short loc_418d91
mov     eax, [esi+8]
push    edi
push    eax
call    __mbscmp
pop     ecx
test    eax, eax
pop     ecx
jz      short loc_418d8d
mov     esi, [esi]
jmp     short loc_418d75
mov     eax, esi
jmp     short loc_418d93
xor     eax, eax
pop     edi
pop     esi
retn    8
push    ebp
mov     ebp, esp
lea     eax, [ebp+str2]
push    eax
push    [ebp+str2]
call    sub_418d42
test    eax, eax
jz      short loc_418db6
mov     ecx, [ebp+arg_4]
mov     eax, [eax+0ch]
push    1
mov     [ecx], eax
pop     eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
lea     eax, [ebp+str2]
push    eax
push    [ebp+str2]
call    sub_418d42
test    eax, eax
jz      short loc_418dd8
mov     ecx, [ebp+arg_4]
mov     eax, [eax+8]
push    1
mov     [ecx], eax
pop     eax
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
push    esi
lea     eax, [ebp+var_4]
push    edi
push    eax
push    [ebp+str2]
mov     edi, ecx
call    sub_418d42
mov     esi, eax
test    esi, esi
jnz     short loc_418e35
cmp     [edi+4], eax
jnz     short loc_418e07
push    1
mov     ecx, edi
push    dword ptr [edi+8]
call    sub_418c20
mov     ecx, edi
call    sub_418ce0
push    [ebp+str2]
mov     esi, eax
mov     eax, [ebp+var_4]
lea     ecx, [esi+8]
mov     [esi+4], eax
call    ??4cstring@@qaeabv0@pbd@z
mov     eax, [edi+4]
mov     ecx, [ebp+var_4]
mov     eax, [eax+ecx*4]
mov     [esi], eax
mov     eax, [edi+4]
mov     ecx, [ebp+var_4]
mov     [eax+ecx*4], esi
lea     eax, [esi+0ch]
pop     edi
pop     esi
leave
retn    4
jmp     $+5
push    offset acommctrldragli
call    ds:registerwindowmessagea
mov     dword_44a644, eax
retn
call    sub_418e5e
jmp     loc_418e6b
push    0
mov     ecx, offset dword_44a608
call    sub_418f8a
retn
push    offset unknown_libname_11
call    _atexit
pop     ecx
retn
call    sub_418e9c
jmp     loc_418ea9
push    1
mov     ecx, offset dword_44a5c8
call    sub_418f8a
retn
push    offset unknown_libname_12
call    _atexit
pop     ecx
retn
call    sub_418eda
jmp     loc_418ee7
push    0ffffffffh
mov     ecx, offset dword_44a588
call    sub_418f8a
retn
push    offset unknown_libname_13
call    _atexit
pop     ecx
retn
call    sub_418f18
jmp     loc_418f25
push    0fffffffeh
mov     ecx, offset dword_44a548
call    sub_418f8a
retn
push    offset unknown_libname_14
call    _atexit
pop     ecx
retn
push    esi
mov     esi, ecx
call    sub_41bdbd
push    20h
lea     eax, [esi+1ch]
push    0
push    eax
mov     dword ptr [esi], offset ??_7cwnd@@6b@
call    _memset
add     esp, 0ch
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ecx
call    ??1cwnd@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_418f84
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    esi
push    edi
mov     esi, ecx
call    sub_41bdbd
lea     edi, [esi+1ch]
push    20h
push    0
push    edi
mov     dword ptr [esi], offset ??_7cwnd@@6b@
call    _memset
mov     eax, [esp+14h+arg_0]
add     esp, 0ch
mov     [edi], eax
mov     eax, esi
pop     edi
pop     esi
retn    4
mov     eax, offset loc_42292c
call    __eh_prolog
sub     esp, 34h
push    ebx
push    esi
push    edi
mov     ecx, offset dword_44a8d4
mov     [ebp+var_10], esp
push    offset ?createobject@?$cthreadlocal@v_afx_thread_state@@@@sgpavcnotrackobject@@xz
call    ?getdata@cthreadlocalobject@@qaepavcnotrackobject@@p6gpav2@xz@z
mov     ebx, eax
push    7
pop     ecx
lea     edi, [ebp+var_40]
lea     eax, [ebx+34h]
and     [ebp+var_4], 0
mov     esi, eax
mov     [ebp+var_14], ebx
rep movsd
mov     ecx, [ebp+arg_4]
mov     esi, [ebp+arg_8]
mov     edi, [ebp+arg_0]
mov     [eax], ecx
mov     eax, [ebp+arg_c]
cmp     esi, 2
mov     [ebx+3ch], eax
mov     eax, [ebp+arg_10]
mov     [ebx+38h], esi
mov     [ebx+40h], eax
jnz     short loc_419211
mov     ecx, [edi+34h]
test    ecx, ecx
jz      short loc_419211
mov     eax, [ecx]
push    0
call    dword ptr [eax+5ch]
and     [ebp+arg_0], 0
cmp     esi, 110h
jnz     short loc_41922b
lea     eax, [ebp+arg_0]
push    eax
lea     eax, [ebp+rect]
push    eax
push    edi
call    ?_afxpreinitdialog@@ygxpavcwnd@@pautagrect@@pak@z
push    [ebp+arg_10]
mov     eax, [edi]
mov     ecx, edi
push    [ebp+arg_c]
push    esi
call    dword ptr [eax+98h]
cmp     esi, 110h
mov     [ebp+arg_10], eax
jnz     short loc_419280
push    [ebp+arg_0]
lea     eax, [ebp+rect]
push    eax
push    edi
call    ?_afxpostinitdialog@@ygxpavcwnd@@abutagrect@@k@z
jmp     short loc_419280
call    ?afxgetthread@@ygpavcwinthread@@xz
mov     ecx, [ebp+var_14]
mov     edx, [eax]
add     ecx, 34h
push    ecx
mov     ecx, eax
push    [ebp+arg_4]
call    dword ptr [edx+6ch]
mov     ecx, [ebp+arg_4]
mov     [ebp+arg_10], eax
call    ?delete@cexception@@qaexxz
mov     eax, offset loc_41927d
retn
mov     ebx, [ebp+var_14]
push    7
mov     eax, [ebp+arg_10]
lea     edi, [ebx+34h]
pop     ecx
lea     esi, [ebp+var_40]
rep movsd
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
leave
retn    14h
push    esi
mov     esi, ecx
push    offset ?createobject@?$cthreadlocal@v_afx_thread_state@@@@sgpavcnotrackobject@@xz
mov     ecx, offset dword_44a8d4
call    ?getdata@cthreadlocalobject@@qaepavcnotrackobject@@p6gpav2@xz@z
push    dword ptr [eax+40h]
mov     edx, [esi]
mov     ecx, esi
push    dword ptr [eax+3ch]
push    dword ptr [eax+38h]
call    dword ptr [edx+0a0h]
pop     esi
retn
push    esi
push    edi
push    1
call    ?afxmaphwnd@@yapavchandlemap@@h@z
mov     esi, eax
push    [esp+8+arg_0]
mov     ecx, esi
call    ?fromhandle@chandlemap@@qaepavcobject@@pax@z
mov     edi, eax
push    esi
mov     ecx, edi
call    sub_41bd61
mov     eax, edi
pop     edi
pop     esi
retn    4
push    0
call    ?afxmaphwnd@@yapavchandlemap@@h@z
mov     ecx, eax
xor     eax, eax
test    ecx, ecx
jz      short locret_4193af
push    [esp+arg_0]
add     ecx, 4
call    ?getvalueat@cmapptrtoptr@@qbepaxpax@z
retn    4
push    ebx
mov     ebx, [esp+4+arg_0]
push    esi
mov     esi, ecx
test    ebx, ebx
jnz     short loc_4193c2
xor     eax, eax
jmp     short loc_4193e6
push    edi
push    1
call    ?afxmaphwnd@@yapavchandlemap@@h@z
mov     edi, eax
push    ebx
mov     [esi+1ch], ebx
lea     ecx, [edi+4]
call    sub_418ad9
push    edi
mov     ecx, esi
mov     [eax], esi
call    sub_41bd61
push    1
pop     eax
pop     edi
pop     esi
pop     ebx
retn    4
push    esi
mov     esi, ecx
push    edi
mov     edi, [esi+1ch]
test    edi, edi
jz      short loc_419410
push    0
call    ?afxmaphwnd@@yapavchandlemap@@h@z
test    eax, eax
jz      short loc_41940c
push    dword ptr [esi+1ch]
lea     ecx, [eax+4]
call    sub_418b29
and     dword ptr [esi+1ch], 0
and     dword ptr [esi+38h], 0
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, offset loc_42294c
call    __eh_prolog
sub     esp, 40h
push    ebx
push    esi
push    edi
mov     edi, [ebp+hwnd]
mov     esi, offset string
mov     [ebp+var_10], esp
push    esi
push    edi
call    ds:getpropa
and     [ebp+var_14], 0
and     [ebp+var_4], 0
mov     [ebp+lpprevwndfunc], eax
mov     eax, [ebp+msg]
push    1
sub     eax, 6
pop     ebx
jz      loc_419539
sub     eax, 1ah
jz      loc_419518
sub     eax, 62h
jz      short loc_4194f4
sub     eax, 8eh
jnz     loc_419557
push    edi
call    sub_41936d
mov     esi, eax
lea     eax, [ebp+var_1c]
push    eax
lea     eax, [ebp+rect]
push    eax
push    esi
call    ?_afxpreinitdialog@@ygxpavcwnd@@pautagrect@@pak@z
push    [ebp+lparam]
push    [ebp+wparam]
push    110h
push    edi
push    [ebp+lpprevwndfunc]
call    ds:callwindowproca
push    dword ptr [ebp+var_1c]
mov     [ebp+var_14], eax
lea     eax, [ebp+rect]
push    eax
push    esi
call    ?_afxpostinitdialog@@ygxpavcwnd@@abutagrect@@k@z
mov     ecx, [ebp+var_c]
mov     eax, [ebp+var_14]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
leave
retn    10h
push    [ebp+lpprevwndfunc]
push    0fffffffch
push    edi
call    ds:setwindowlonga
push    esi
push    edi
call    ds:removepropa
push    esi
call    ds:globalfindatoma
push    eax
call    ds:globaldeleteatom
jmp     short loc_419557
push    edi
call    sub_41936d
mov     ecx, [ebp+lparam]
shr     ecx, 10h
push    ecx
movsx   ecx, word ptr [ebp+lparam]
push    ecx
push    eax
call    ?_afxhandlesetcursor@@yghpavcwnd@@ii@z
xor     ebx, ebx
test    eax, eax
setz    bl
jmp     short loc_419553
push    [ebp+lparam]
call    sub_41936d
push    edi
mov     esi, eax
call    sub_41936d
push    esi
push    [ebp+wparam]
push    eax
call    ?_afxhandleactivate@@ygxpavcwnd@@i0@z
test    ebx, ebx
jz      short loc_4194e0
push    [ebp+lparam]
push    [ebp+wparam]
push    [ebp+msg]
push    edi
push    [ebp+lpprevwndfunc]
call    ds:callwindowproca
mov     [ebp+var_14], eax
jmp     loc_4194e0
mov     eax, [ebp+hwnd]
mov     [ebp+var_4c], eax
mov     eax, [ebp+msg]
mov     [ebp+var_48], eax
mov     eax, [ebp+wparam]
mov     [ebp+var_44], eax
mov     eax, [ebp+lparam]
mov     [ebp+var_40], eax
call    ?afxgetthread@@ygpavcwinthread@@xz
mov     edx, [eax]
lea     ecx, [ebp+var_4c]
push    ecx
mov     ecx, eax
push    [ebp+var_20]
call    dword ptr [edx+6ch]
mov     ecx, [ebp+var_20]
mov     [ebp+var_14], eax
call    ?delete@cexception@@qaexxz
mov     eax, offset loc_4194e0
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    offset ?createobject@?$cthreadlocal@v_afx_thread_state@@@@sgpavcnotrackobject@@xz
mov     ecx, offset dword_44a8d4
call    ?getdata@cthreadlocalobject@@qaepavcnotrackobject@@p6gpav2@xz@z
cmp     [ebp+ncode], 3
mov     [ebp+var_4], eax
jz      short loc_41965f
push    [ebp+lparam]
push    [ebp+wparam]
push    [ebp+ncode]
push    dword ptr [eax+2ch]
call    ds:callnexthookex
jmp     locret_41981c
mov     ecx, [ebp+lparam]
push    ebx
push    esi
mov     esi, [eax+14h]
push    edi
mov     edi, [ecx]
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
movzx   eax, byte ptr [eax+14h]
mov     ebx, [ebp+wparam]
mov     [ebp+var_8], eax
test    esi, esi
jnz     short loc_41968f
test    byte ptr [edi+23h], 40h
jnz     loc_4197f0
test    eax, eax
jnz     loc_4197f0
cmp     dword_44ab04, 0
jz      short loc_4196e4
push    0ffffffe6h
push    ebx
call    ds:getclasslonga
test    eax, 10000h
jnz     loc_4197f0
mov     eax, [edi+28h]
mov     ecx, eax
shr     ecx, 10h
test    cx, cx
jnz     short loc_4196d0
and     [ebp+buffer], cl
lea     eax, [ebp+buffer]
push    5
push    eax
mov     ax, [edi+28h]
push    eax
call    ds:globalgetatomnamea
lea     eax, [ebp+buffer]
push    offset aime
push    eax
call    ds:lstrcmpia
test    eax, eax
jz      loc_4197f0
test    esi, esi
jz      loc_419795
push    ebx
mov     ecx, esi
call    sub_4193b2
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+50h]
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+80h]
cmp     dword_44aaf4, 0
mov     [ebp+wparam], eax
jnz     short loc_419772
cmp     [ebp+var_8], 0
jnz     short loc_419772
mov     edi, dword_44aa90
test    edi, edi
jz      short loc_419772
cmp     dword ptr [edi+20h], 0
jz      short loc_419772
push    0
push    0
push    36fh
push    ebx
push    esi
call    sub_4191ac
test    eax, eax
mov     dword ptr [ebp+buffer], eax
jz      short loc_419772
call    ?afxgetafxwndproc@@ygp6gjpauhwnd__@@iij@zxz
push    0fffffffch
push    ebx
mov     [ebp+ncode], eax
call    ds:getwindowlonga
push    dword ptr [ebp+buffer]
mov     esi, eax
sub     esi, [ebp+ncode]
push    ebx
neg     esi
sbb     esi, esi
inc     esi
call    dword ptr [edi+20h]
test    esi, esi
jnz     short loc_41978c
push    [ebp+ncode]
push    0fffffffch
push    ebx
call    ds:setwindowlonga
jmp     short loc_419787
call    ?afxgetafxwndproc@@ygp6gjpauhwnd__@@iij@zxz
mov     esi, eax
push    esi
push    0fffffffch
push    ebx
call    ds:setwindowlonga
cmp     eax, esi
jz      short loc_41978c
mov     ecx, [ebp+wparam]
mov     [ecx], eax
mov     esi, [ebp+var_4]
and     dword ptr [esi+14h], 0
jmp     short loc_4197f3
push    0fffffffch
push    ebx
call    ds:getwindowlonga
test    eax, eax
mov     [ebp+ncode], eax
jz      short loc_4197f0
mov     edi, ds:getpropa
mov     esi, offset string
push    esi
push    ebx
call    edi
test    eax, eax
jnz     short loc_4197f0
push    [ebp+ncode]
push    esi
push    ebx
call    ds:setpropa
push    esi
push    ebx
call    edi
cmp     eax, [ebp+ncode]
jnz     short loc_4197f0
push    esi
call    ds:globaladdatoma
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+28h], 0
mov     eax, offset ?_afxgraybackgroundwndproc@@ygjpauhwnd__@@iij@z
jnz     short loc_4197e6
mov     eax, offset sub_41944f
push    eax
push    0fffffffch
push    ebx
call    ds:setwindowlonga
mov     esi, [ebp+var_4]
push    [ebp+lparam]
push    ebx
push    3
push    dword ptr [esi+2ch]
call    ds:callnexthookex
cmp     [ebp+var_8], 0
mov     edi, eax
jz      short loc_419817
push    dword ptr [esi+2ch]
call    ds:unhookwindowshookex
and     dword ptr [esi+2ch], 0
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_14]
push    esi
test    eax, eax
push    edi
jnz     short loc_4198be
xor     edi, edi
jmp     short loc_4198c1
mov     edi, [eax+1ch]
push    [ebp+arg_1c]
mov     eax, [ebp+arg_10]
push    [ebp+arg_18]
mov     edx, [eax+4]
mov     esi, [eax]
push    edi
mov     edi, [eax+0ch]
mov     eax, [eax+8]
sub     edi, edx
sub     eax, esi
push    edi
push    eax
push    edx
push    esi
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_4198f5
pop     edi
pop     esi
pop     ebp
retn    20h
push    ebp
mov     ebp, esp
sub     esp, 30h
mov     eax, [ebp+arg_0]
push    esi
mov     [ebp+dwexstyle], eax
mov     eax, [ebp+arg_4]
mov     [ebp+lpclassname], eax
mov     eax, [ebp+arg_8]
mov     [ebp+lpwindowname], eax
mov     eax, [ebp+arg_c]
mov     [ebp+dwstyle], eax
mov     eax, [ebp+arg_10]
mov     [ebp+x], eax
mov     eax, [ebp+arg_14]
mov     [ebp+y], eax
mov     eax, [ebp+arg_18]
mov     [ebp+nwidth], eax
mov     eax, [ebp+arg_1c]
mov     [ebp+nheight], eax
mov     eax, [ebp+arg_20]
mov     [ebp+hwndparent], eax
mov     eax, [ebp+arg_24]
mov     esi, ecx
mov     [ebp+hmenu], eax
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+8]
lea     ecx, [ebp+lpparam]
mov     [ebp+hinstance], eax
mov     eax, [ebp+arg_28]
mov     [ebp+lpparam], eax
mov     eax, [esi]
push    ecx
mov     ecx, esi
call    dword ptr [eax+5ch]
test    eax, eax
jnz     short loc_419968
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0a4h]
xor     eax, eax
jmp     short loc_4199b6
push    edi
push    esi
call    ?afxhookwindowcreate@@ygxpavcwnd@@@z
push    [ebp+lpparam]
push    [ebp+hinstance]
push    [ebp+hmenu]
push    [ebp+hwndparent]
push    [ebp+nheight]
push    [ebp+nwidth]
push    [ebp+y]
push    [ebp+x]
push    [ebp+dwstyle]
push    [ebp+lpwindowname]
push    [ebp+lpclassname]
push    [ebp+dwexstyle]
call    ds:createwindowexa
mov     edi, eax
call    ?afxunhookwindowcreate@@yghxz
test    eax, eax
jnz     short loc_4199ae
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0a4h]
xor     eax, eax
test    edi, edi
setnz   al
pop     edi
pop     esi
leave
retn    2ch
push    esi
mov     esi, [esp+4+arg_0]
cmp     dword ptr [esi+28h], 0
jnz     short loc_4199d4
push    1
call    sub_41b72a
mov     dword ptr [esi+28h], offset aafxwnd42s
push    1
pop     eax
pop     esi
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_10]
push    esi
test    eax, eax
push    edi
jnz     short loc_4199eb
xor     edi, edi
jmp     short loc_4199ee
mov     edi, [eax+1ch]
push    [ebp+arg_18]
mov     eax, [ebp+arg_c]
push    [ebp+arg_14]
mov     edx, [eax+4]
mov     esi, [eax]
push    edi
mov     edi, [eax+0ch]
mov     eax, [eax+8]
sub     edi, edx
sub     eax, esi
push    edi
push    eax
mov     eax, [ebp+arg_8]
push    edx
or      eax, 40000000h
push    esi
push    eax
push    [ebp+arg_4]
push    [ebp+arg_0]
push    0
call    sub_4198f5
pop     edi
pop     esi
pop     ebp
retn    1ch
push    ebp
mov     ebp, esp
sub     esp, 2ch
push    ebx
push    esi
push    edi
mov     esi, ecx
call    ?afxgetthread@@ygpavcwinthread@@xz
mov     edi, eax
xor     ebx, ebx
cmp     edi, ebx
jz      short loc_419b0c
cmp     [edi+1ch], esi
jnz     short loc_419b04
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
cmp     [eax+14h], bl
jnz     short loc_419b01
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
cmp     edi, [eax+4]
jnz     short loc_419afb
call    ?afxolecanexitapp@@yghxz
test    eax, eax
jz      short loc_419b01
push    ebx
call    ?afxpostquitmessage@@ygxh@z
mov     [edi+1ch], ebx
cmp     [edi+20h], esi
jnz     short loc_419b0c
mov     [edi+20h], ebx
mov     ecx, [esi+30h]
cmp     ecx, ebx
jz      short loc_419b1b
mov     eax, [ecx]
call    dword ptr [eax+50h]
mov     [esi+30h], ebx
mov     ecx, [esi+34h]
push    1
test    ecx, ecx
pop     ebx
jz      short loc_419b2b
mov     eax, [ecx]
push    ebx
call    dword ptr [eax+4]
and     dword ptr [esi+34h], 0
test    [esi+24h], bl
jz      short loc_419b80
call    ?afxgetthreadstate@@ygpav_afx_thread_state@@xz
mov     edi, [eax+0cch]
test    edi, edi
jz      short loc_419b80
cmp     dword ptr [edi+1ch], 0
jz      short loc_419b80
push    2ch
lea     eax, [ebp-2ch]
push    0
push    eax
call    _memset
mov     eax, [esi+1ch]
add     esp, 0ch
mov     [ebp-24h], eax
mov     [ebp-20h], eax
lea     eax, [ebp-2ch]
mov     dword ptr [ebp-2ch], 28h
push    eax
push    0
push    405h
mov     [ebp-28h], ebx
push    dword ptr [edi+1ch]
call    ds:sendmessagea
mov     edi, ds:getwindowlonga
push    0fffffffch
push    dword ptr [esi+1ch]
call    edi
mov     ecx, esi
mov     ebx, eax
call    sub_4192d4
push    0fffffffch
push    dword ptr [esi+1ch]
call    edi
cmp     eax, ebx
jnz     short loc_419bbd
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+80h]
mov     eax, [eax]
test    eax, eax
jz      short loc_419bbd
push    eax
push    0fffffffch
push    dword ptr [esi+1ch]
call    ds:setwindowlonga
mov     ecx, esi
call    sub_4193eb
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0a4h]
pop     edi
pop     esi
pop     ebx
leave
retn
cmp     dword ptr [ecx+1ch], 0
mov     eax, [ecx]
jz      short loc_419bde
jmp     dword ptr [eax+58h]
jmp     dword ptr [eax+0a4h]
push    esi
mov     esi, ecx
cmp     dword ptr [esi+1ch], 0
jnz     short loc_419bf1
xor     eax, eax
pop     esi
retn
push    ebx
push    edi
push    0
call    ?afxmaphwnd@@yapavchandlemap@@h@z
push    dword ptr [esi+1ch]
lea     ecx, [eax+4]
call    ?getvalueat@cmapptrtoptr@@qbepaxpax@z
mov     ecx, [esi+38h]
mov     edi, eax
test    ecx, ecx
jnz     short loc_419c19
push    dword ptr [esi+1ch]
call    ds:destroywindow
jmp     short loc_419c1e
mov     eax, [ecx]
call    dword ptr [eax+50h]
test    edi, edi
mov     ebx, eax
jnz     short loc_419c2b
mov     ecx, esi
call    sub_4193eb
mov     eax, ebx
pop     edi
pop     ebx
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     eax, [esi+28h]
test    eax, eax
jnz     short loc_419c60
mov     eax, [esi]
call    dword ptr [eax+80h]
mov     eax, [eax]
test    eax, eax
jnz     short loc_419c60
push    [ebp+lparam]
push    [ebp+wparam]
push    [ebp+msg]
push    dword ptr [esi+1ch]
call    ds:defwindowproca
jmp     short loc_419c73
push    [ebp+lparam]
push    [ebp+wparam]
push    [ebp+msg]
push    dword ptr [esi+1ch]
push    eax
call    ds:callwindowproca
pop     esi
pop     ebp
retn    0ch
lea     eax, [ecx+28h]
retn
push    esi
call    ?afxgetthreadstate@@ygpav_afx_thread_state@@xz
mov     esi, eax
mov     eax, [esi+0cch]
test    eax, eax
jz      short loc_419cc4
mov     eax, [eax+1ch]
test    eax, eax
jz      short loc_419cc4
push    0
push    0
push    401h
push    eax
call    ds:sendmessagea
cmp     [esp+4+arg_0], 0
mov     esi, [esi+108h]
jz      short loc_419cee
test    esi, esi
jz      short loc_419cee
push    1
call    ds:getkeystate
test    ax, ax
jl      short loc_419cee
mov     eax, [esi]
push    0ffffffffh
mov     ecx, esi
call    dword ptr [eax+0dch]
pop     esi
retn    4
push    esi
mov     esi, [esp+0ch]
push    edi
mov     edi, ecx
cmp     dword ptr [esi], 1
jnz     short loc_419dce
push    dword ptr [esi+14h]
call    sub_41d4d7
test    eax, eax
jz      short loc_419ddc
mov     edx, [eax]
push    esi
mov     ecx, eax
call    dword ptr [edx+0ch]
jmp     short loc_419de3
push    0
push    dword ptr [esi+14h]
call    sub_41ab8f
test    eax, eax
jnz     short loc_419de3
mov     ecx, edi
call    sub_4192d4
pop     edi
pop     esi
retn    8
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
push    edi
push    dword ptr [esi+4]
call    ds:getmenuitemcount
mov     ebx, eax
xor     edi, edi
test    ebx, ebx
jle     short loc_419eae
push    edi
push    dword ptr [esi+4]
call    ds:getsubmenu
push    eax
call    sub_41d4c2
test    eax, eax
jz      short loc_419e99
push    [esp+0ch+arg_4]
push    eax
call    sub_419e5d
test    eax, eax
jnz     short loc_419eb0
jmp     short loc_419ea9
push    edi
push    dword ptr [esi+4]
call    ds:getmenuitemid
cmp     eax, [esp+0ch+arg_4]
jz      short loc_419eb6
inc     edi
cmp     edi, ebx
jl      short loc_419e75
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn    8
push    dword ptr [esi+4]
call    sub_41d4d7
jmp     short loc_419eb0
push    esi
mov     esi, [esp+0ch]
push    edi
mov     edi, ecx
cmp     dword ptr [esi], 1
jnz     short loc_419f0d
push    offset ?createobject@?$cthreadlocal@v_afx_thread_state@@@@sgpavcnotrackobject@@xz
mov     ecx, offset dword_44a8d4
call    ?getdata@cthreadlocalobject@@qaepavcnotrackobject@@p6gpav2@xz@z
mov     ecx, [edi+1ch]
cmp     [eax+50h], ecx
jnz     short loc_419ee9
push    dword ptr [eax+54h]
jmp     short loc_419ef1
push    ecx
call    ds:getmenu
push    eax
call    sub_41d4c2
push    dword ptr [esi+8]
push    eax
call    sub_419e5d
test    eax, eax
jz      short loc_419f2c
mov     edx, [eax]
push    esi
mov     ecx, eax
call    dword ptr [edx+10h]
jmp     short loc_419f2c
mov     esi, [esi+4]
push    1
push    esi
push    dword ptr [edi+1ch]
call    ?getdescendantwindow@cwnd@@sgpav1@pauhwnd__@@hh@z
test    eax, eax
jz      short loc_419f2c
push    0
mov     ecx, eax
call    sub_41ab62
test    eax, eax
jnz     short loc_419f33
mov     ecx, edi
call    sub_4192d4
pop     edi
pop     esi
retn    8
mov     eax, offset loc_42296c
call    __eh_prolog
sub     esp, 30h
push    ebx
push    esi
mov     esi, [ebp+lpwndclass]
push    edi
lea     eax, [ebp+wndclass]
mov     [ebp+var_10], esp
push    eax
push    dword ptr [esi+24h]
push    dword ptr [esi+10h]
call    ds:getclassinfoa
test    eax, eax
jnz     short loc_419fb5
push    esi
call    ds:registerclassa
test    ax, ax
jnz     short loc_419f72
xor     eax, eax
jmp     short loc_419fb8
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
xor     ebx, ebx
cmp     [eax+14h], bl
jz      short loc_419fb5
push    1
call    sub_422460
mov     [ebp+var_4], ebx
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
push    dword ptr [esi+24h]
mov     esi, ds:lstrcata
lea     edi, [eax+34h]
push    edi
call    esi
lea     eax, [ebp+lpwndclass+2]
mov     byte ptr [ebp+lpwndclass+2], 0ah
push    eax
push    edi
mov     byte ptr [ebp+lpwndclass+3], bl
call    esi
or      [ebp+var_4], 0ffffffffh
push    1
call    ?afxunlockglobals@@ygxh@z
push    1
pop     eax
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
leave
retn    4
push    1
call    ?afxunlockglobals@@ygxh@z
xor     ebx, ebx
push    ebx
push    ebx
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+8]
push    esi
mov     esi, ecx
mov     [ebp-8], eax
mov     eax, [ebp+0ch]
push    offset ?createobject@?$cthreadlocal@v_afx_thread_state@@@@sgpavcnotrackobject@@xz
mov     ecx, offset dword_44a8d4
mov     [ebp-0ch], eax
call    ?getdata@cthreadlocalobject@@qaepavcnotrackobject@@p6gpav2@xz@z
mov     eax, [eax+38h]
lea     ecx, [ebp-0ch]
sub     eax, 132h
push    ecx
mov     [ebp-4], eax
mov     eax, [esi]
push    0
push    19h
mov     ecx, esi
call    dword ptr [eax+98h]
pop     esi
leave
retn    8
mov     eax, offset loc_422980
call    __eh_prolog
push    ecx
push    ebx
push    esi
mov     esi, ecx
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
mov     [ebp+var_10], eax
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ecx, [eax+4]
call    sub_41c029
mov     eax, [esi]
xor     ebx, ebx
mov     ecx, esi
mov     [ebp+var_4], ebx
call    dword ptr [eax+0b0h]
test    eax, eax
jz      short loc_41a117
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0f0h]
push    edi
mov     edi, ds:sendmessagea
push    ebx
push    ebx
push    1fh
push    dword ptr [esi+1ch]
call    edi
push    1
push    1
push    ebx
push    ebx
push    1fh
push    dword ptr [esi+1ch]
call    ?sendmessagetodescendants@cwnd@@sgxpauhwnd__@@iijhh@z
mov     ecx, esi
call    sub_41a964
push    ebx
mov     esi, eax
push    ebx
push    1fh
push    dword ptr [esi+1ch]
call    edi
push    1
push    1
push    ebx
push    ebx
push    1fh
push    dword ptr [esi+1ch]
call    ?sendmessagetodescendants@cwnd@@sgxpauhwnd__@@iijhh@z
call    ds:getcapture
cmp     eax, ebx
jz      short loc_41a16a
push    ebx
push    ebx
push    1fh
push    eax
call    edi
push    [ebp+dwdata]
mov     eax, [ebp+var_10]
push    [ebp+ucommand]
push    dword ptr [eax+8ch]
push    dword ptr [esi+1ch]
call    ds:winhelpa
test    eax, eax
pop     edi
jnz     short loc_41a194
push    0ffffffffh
push    ebx
push    0f107h
call    sub_420619
or      [ebp+var_4], 0ffffffffh
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ecx, [eax+4]
call    sub_41c03e
mov     ecx, [ebp+var_c]
pop     esi
pop     ebx
mov     large fs:0, ecx
leave
retn    8
mov     eax, offset off_424ce0
retn
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, ecx
lea     ecx, [ebp+var_4]
and     [ebp+var_4], 0
mov     eax, [esi]
push    ecx
push    [ebp+arg_8]
mov     ecx, esi
push    [ebp+arg_4]
push    [ebp+arg_0]
call    dword ptr [eax+9ch]
test    eax, eax
jnz     short loc_41a237
push    [ebp+arg_8]
mov     eax, [esi]
mov     ecx, esi
push    [ebp+arg_4]
push    [ebp+arg_0]
call    dword ptr [eax+0a0h]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
pop     esi
leave
retn    0ch
mov     eax, offset loc_4229a4
call    __eh_prolog
sub     esp, 54h
and     [ebp+var_10], 0
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
push    edi
cmp     ebx, 111h
mov     edi, ecx
jnz     short loc_41a278
push    [ebp+arg_8]
mov     eax, [edi]
push    [ebp+wparam]
call    dword ptr [eax+78h]
test    eax, eax
jz      loc_41a3c8
jmp     loc_41a695
cmp     ebx, 4eh
jnz     short loc_41a2a5
mov     eax, [ebp+arg_8]
cmp     dword ptr [eax], 0
jz      loc_41a3c8
mov     edx, [edi]
lea     ecx, [ebp+var_10]
push    ecx
push    eax
push    [ebp+wparam]
mov     ecx, edi
call    dword ptr [edx+7ch]
test    eax, eax
jnz     def_41a413
jmp     loc_41a3c8
mov     esi, [ebp+arg_8]
cmp     ebx, 6
jnz     short loc_41a2bd
push    esi
call    sub_41936d
push    eax
push    [ebp+wparam]
push    edi
call    ?_afxhandleactivate@@ygxpavcwnd@@i0@z
cmp     ebx, 20h
jnz     short loc_41a2da
mov     eax, esi
shr     eax, 10h
push    eax
movsx   eax, si
push    eax
push    edi
call    ?_afxhandlesetcursor@@yghpavcwnd@@ii@z
test    eax, eax
jnz     loc_41a695
mov     eax, [edi]
mov     ecx, edi
call    dword ptr [eax+28h]
mov     ecx, [ebp+arg_0]
mov     [ebp+var_14], eax
mov     ebx, eax
mov     eax, 1ffh
and     ebx, eax
and     ecx, eax
push    7
xor     ebx, ecx
call    sub_422460
mov     ecx, [ebp+arg_0]
lea     eax, [ebx+ebx*2]
cmp     ecx, dword_448d20[eax*4]
lea     ebx, ds:448d20h[eax*4]
mov     eax, [ebp+var_14]
jnz     short loc_41a340
cmp     eax, [ebx+8]
jnz     short loc_41a340
mov     ebx, [ebx+4]
push    7
mov     [ebp+arg_8], ebx
call    ?afxunlockglobals@@ygxh@z
test    ebx, ebx
jz      loc_41a3c8
cmp     [ebp+arg_0], 0c000h
jb      loc_41a3e8
jmp     loc_41a6cb
test    eax, eax
mov     [ebx], ecx
mov     [ebx+8], eax
jz      short loc_41a3bd
jmp     short loc_41a351
mov     eax, [ebp+var_14]
mov     ecx, [ebp+arg_0]
mov     edx, 0c000h
cmp     ecx, edx
jnb     short loc_41a370
push    0
push    0
push    ecx
push    dword ptr [eax+4]
call    unknown_libname_15
test    eax, eax
mov     [ebp+arg_8], eax
jnz     short loc_41a3db
jmp     short loc_41a3b1
mov     eax, [eax+4]
push    0
push    0
push    edx
push    eax
call    unknown_libname_15
test    eax, eax
mov     [ebp+arg_8], eax
jz      short loc_41a3b1
jmp     short loc_41a38a
mov     eax, [ebp+arg_8]
mov     ecx, [eax+10h]
mov     edx, [ebp+arg_0]
cmp     [ecx], edx
jz      loc_41a6be
push    0
push    0
add     eax, 18h
push    0c000h
push    eax
call    unknown_libname_15
test    eax, eax
mov     [ebp+arg_8], eax
jnz     short loc_41a387
mov     eax, [ebp+var_14]
mov     eax, [eax]
test    eax, eax
mov     [ebp+var_14], eax
jnz     short loc_41a34b
and     dword ptr [ebx+4], 0
push    7
call    ?afxunlockglobals@@ygxh@z
xor     eax, eax
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
pop     ebx
mov     large fs:0, ecx
leave
retn    10h
push    7
mov     [ebx+4], eax
call    ?afxunlockglobals@@ygxh@z
mov     ebx, [ebp+arg_8]
mov     ecx, [ebp+arg_8]
mov     ebx, [ebx+14h]
cmp     dword ptr [ecx+8], 1ah
mov     eax, [ecx+10h]
jnz     short loc_41a409
call    ds:getversion
mov     ecx, [ebp+arg_8]
cmp     al, 4
sbb     eax, eax
and     al, 0f0h
add     eax, 2fh
dec     eax
cmp     eax, 30h
ja      def_41a413
jmp     ds:jpt_41a413[eax*4]
push    [ebp+wparam]
call    sub_41f423
push    eax
jmp     loc_41a523
push    [ebp+wparam]
jmp     loc_41a523
mov     eax, esi
shr     eax, 10h
push    eax
movsx   eax, si
push    eax
push    [ebp+wparam]
call    sub_41936d
jmp     loc_41a53e
push    esi
push    [ebp+wparam]
call    sub_41936d
jmp     loc_41a658
lea     ecx, [ebp+var_24]
call    ??0cdc@@qae@xz_0
mov     eax, [esi+4]
and     [ebp+var_4], 0
lea     ecx, [ebp+var_60]
mov     [ebp+var_20], eax
call    sub_418f4c
mov     eax, [esi]
mov     esi, [esi+8]
push    eax
mov     byte ptr [ebp+var_4], 1
mov     [ebp+var_44], eax
call    sub_419394
test    eax, eax
jnz     short loc_41a4a1
mov     eax, [edi+34h]
test    eax, eax
jz      short loc_41a49e
push    [ebp+var_44]
lea     ecx, [eax+20h]
call    ?getvalueat@cmapptrtoptr@@qbepaxpax@z
test    eax, eax
jz      short loc_41a49e
mov     [ebp+var_28], eax
lea     eax, [ebp+var_60]
push    esi
push    eax
lea     eax, [ebp+var_24]
mov     ecx, edi
push    eax
call    ebx
and     [ebp+var_20], 0
and     [ebp+var_44], 0
and     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+var_60]
mov     [ebp+var_10], eax
call    ??1cwnd@@uae@xz
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_24]
jmp     short loc_41a4f9
lea     ecx, [ebp+var_24]
call    ??0cdc@@qae@xz_0
mov     eax, [esi+4]
push    dword ptr [esi+8]
mov     [ebp+var_20], eax
lea     eax, [ebp+var_24]
push    eax
mov     ecx, edi
mov     [ebp+var_4], 2
call    ebx
and     [ebp+var_20], 0
or      [ebp+var_4], 0ffffffffh
mov     [ebp+var_10], eax
lea     ecx, [ebp+var_24]
call    sub_41f4b6
jmp     def_41a413
mov     eax, [ebp+wparam]
shr     eax, 10h
push    eax
push    esi
call    sub_41936d
jmp     short loc_41a539
mov     eax, [ebp+wparam]
shr     eax, 10h
push    eax
movzx   eax, word ptr [ebp+wparam]
jmp     loc_41a658
push    esi
mov     ecx, edi
call    ebx
jmp     loc_41a6d6
push    esi
call    sub_41d4c2
push    eax
mov     eax, [ebp+wparam]
shr     eax, 10h
push    eax
movzx   eax, word ptr [ebp+wparam]
push    eax
mov     ecx, edi
call    ebx
jmp     loc_41a6d6
mov     ecx, edi
call    ebx
jmp     def_41a413
push    [ebp+wparam]
jmp     loc_41a662
mov     eax, esi
shr     eax, 10h
movsx   eax, ax
push    eax
movsx   eax, si
push    eax
jmp     loc_41a645
mov     eax, esi
shr     eax, 10h
push    eax
movzx   eax, si
jmp     loc_41a683
push    [ebp+wparam]
call    sub_41936d
push    eax
push    esi
call    sub_41936d
push    eax
xor     eax, eax
cmp     [edi+1ch], esi
setz    al
push    eax
jmp     loc_41a687
push    [ebp+wparam]
call    sub_41f423
push    eax
jmp     loc_41a662
push    [ebp+wparam]
call    sub_41d4c2
jmp     short loc_41a59f
mov     eax, esi
shr     eax, 10h
push    eax
movzx   eax, si
push    eax
push    [ebp+wparam]
call    sub_41d4c2
jmp     short loc_41a591
push    [ebp+wparam]
jmp     short loc_41a5c9
push    esi
call    sub_41936d
jmp     short loc_41a59f
mov     eax, esi
shr     eax, 10h
push    eax
movzx   eax, si
jmp     short loc_41a5e5
movsx   eax, si
shr     esi, 10h
movsx   ecx, si
push    ecx
push    eax
push    [ebp+wparam]
call    sub_41936d
jmp     short loc_41a591
push    esi
push    [ebp+wparam]
call    sub_41936d
jmp     loc_41a565
push    esi
call    sub_41936d
push    eax
jmp     short loc_41a642
mov     eax, [ebp+wparam]
shr     eax, 10h
push    eax
push    esi
call    sub_41936d
jmp     short loc_41a66f
mov     eax, [ebp+wparam]
movsx   edx, ax
shr     eax, 10h
cmp     dword ptr [ecx+10h], 1dh
mov     [ebp+arg_0], edx
movsx   eax, ax
mov     [ebp+wparam], eax
jnz     short loc_41a63d
push    esi
call    sub_41936d
push    eax
push    [ebp+wparam]
push    [ebp+arg_0]
jmp     short loc_41a687
push    eax
push    edx
jmp     short loc_41a645
push    esi
push    [ebp+wparam]
mov     ecx, edi
call    ebx
jmp     def_41a413
movsx   eax, si
shr     esi, 10h
movsx   ecx, si
push    ecx
push    eax
jmp     short loc_41a6d2
mov     ecx, edi
call    ebx
jmp     short loc_41a6d6
push    esi
mov     ecx, edi
call    ebx
jmp     short def_41a413
mov     eax, [ebp+wparam]
push    esi
shr     eax, 10h
push    eax
movzx   eax, word ptr [ebp+wparam]
jmp     loc_41a591
movsx   eax, si
shr     esi, 10h
movsx   ecx, si
push    ecx
push    eax
push    [ebp+wparam]
mov     ecx, edi
call    ebx
jmp     short def_41a413
push    esi
mov     ecx, edi
push    [ebp+wparam]
call    ebx
mov     [ebp+var_10], 1
jmp     short def_41a413
movzx   eax, si
shr     esi, 10h
push    esi
push    eax
mov     eax, [ebp+wparam]
mov     ecx, edi
shr     eax, 10h
push    eax
movzx   eax, word ptr [ebp+wparam]
push    eax
call    ebx
mov     [ebp+var_10], eax
jmp     loc_41a298
push    7
mov     [ebx+4], eax
call    ?afxunlockglobals@@ygxh@z
mov     ebx, [ebp+arg_8]
mov     ebx, [ebx+14h]
push    esi
push    [ebp+wparam]
mov     ecx, edi
call    ebx
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_c]
test    eax, eax
jz      short loc_41a6e5
mov     ecx, [ebp+var_10]
mov     [eax], ecx
push    1
pop     eax
jmp     loc_41a3ca
push    esi
mov     esi, ecx
call    ??0ccmdui@@qae@xz
mov     dword ptr [esi], offset ??_7ctestcmdui@@6b@
mov     dword ptr [esi+28h], 1
mov     eax, esi
pop     esi
retn
push    esi
push    edi
test    ecx, ecx
jz      short loc_41a91a
mov     eax, [ecx+1ch]
test    eax, eax
jz      short loc_41a91a
mov     edi, ds:getparent
push    eax
call    edi
push    eax
call    sub_41936d
mov     esi, eax
test    esi, esi
jz      short loc_41a91a
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0b0h]
test    eax, eax
jnz     short loc_41a916
push    dword ptr [esi+1ch]
jmp     short loc_41a8f5
mov     eax, esi
jmp     short loc_41a91c
xor     eax, eax
pop     edi
pop     esi
retn
test    ecx, ecx
jz      short loc_41a96f
mov     eax, [ecx+1ch]
test    eax, eax
jnz     short loc_41a972
xor     eax, eax
retn
push    esi
mov     esi, eax
push    esi
call    ?afxgetparentowner@@ygpauhwnd__@@pau1@@z
test    eax, eax
jz      short loc_41a984
mov     esi, eax
push    eax
jmp     short loc_41a976
push    esi
call    sub_41936d
pop     esi
retn
push    esi
mov     esi, ecx
test    esi, esi
jz      short loc_41a999
cmp     dword ptr [esi+1ch], 0
jnz     short loc_41a99d
xor     eax, eax
pop     esi
retn
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0b0h]
test    eax, eax
jnz     short loc_41a9b4
mov     ecx, esi
call    sub_41a8e1
mov     esi, eax
test    esi, esi
jz      short loc_41a9c9
mov     ecx, esi
call    sub_41a8e1
test    eax, eax
jz      short loc_41a9c9
mov     esi, eax
mov     ecx, eax
jmp     short loc_41a9ba
mov     eax, esi
pop     esi
retn
mov     eax, [esp+lpcaption]
push    esi
test    eax, eax
mov     esi, ecx
jnz     short loc_41a9e0
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+10h]
test    esi, esi
jnz     short loc_41a9e8
xor     ecx, ecx
jmp     short loc_41a9eb
mov     ecx, [esi+1ch]
push    [esp+4+utype]
push    eax
push    [esp+0ch+lptext]
push    ecx
call    ds:messageboxa
pop     esi
retn    0ch
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     esi, [edi]
test    esi, esi
jz      short loc_41ab5b
push    esi
call    sub_419394
test    eax, eax
jz      short loc_41ab45
mov     edx, [eax]
push    edi
mov     ecx, eax
call    dword ptr [edx+90h]
test    eax, eax
jnz     short loc_41ab56
cmp     esi, [esp+8+arg_0]
jz      short loc_41ab5b
push    esi
call    ds:getparent
mov     esi, eax
jmp     short loc_41ab28
push    1
pop     eax
jmp     short loc_41ab5d
xor     eax, eax
pop     edi
pop     esi
retn    8
push    esi
mov     esi, ecx
push    offset ?createobject@?$cthreadlocal@v_afx_thread_state@@@@sgpavcnotrackobject@@xz
mov     ecx, offset dword_44a8d4
call    ?getdata@cthreadlocalobject@@qaepavcnotrackobject@@p6gpav2@xz@z
push    [esp+4+arg_0]
mov     edx, [esi]
mov     ecx, esi
push    dword ptr [eax+40h]
push    dword ptr [eax+3ch]
push    dword ptr [eax+38h]
call    dword ptr [edx+0a8h]
pop     esi
retn    4
mov     eax, offset loc_4229b8
call    __eh_prolog
sub     esp, 3ch
push    esi
push    edi
push    0
call    ?afxmaphwnd@@yapavchandlemap@@h@z
test    eax, eax
jz      short loc_41ac15
mov     edi, [ebp+hwnd]
lea     esi, [eax+4]
push    edi
mov     ecx, esi
call    ?getvalueat@cmapptrtoptr@@qbepaxpax@z
test    eax, eax
jnz     short loc_41ac19
push    edi
call    ds:getparent
push    eax
mov     ecx, esi
call    ?getvalueat@cmapptrtoptr@@qbepaxpax@z
test    eax, eax
jz      short loc_41ac15
mov     eax, [eax+34h]
test    eax, eax
jz      short loc_41ac15
push    edi
lea     ecx, [eax+20h]
call    ?getvalueat@cmapptrtoptr@@qbepaxpax@z
mov     esi, eax
test    esi, esi
jz      short loc_41ac15
push    edi
lea     ecx, [ebp+var_48]
call    sub_418f8a
push    [ebp+arg_4]
and     [ebp+var_4], 0
lea     ecx, [ebp+var_48]
mov     [ebp+var_10], esi
call    sub_41ab62
and     [ebp+var_2c], 0
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_48]
mov     esi, eax
call    ??1cwnd@@uae@xz
mov     eax, esi
jmp     short loc_41ac23
xor     eax, eax
jmp     short loc_41ac23
push    [ebp+arg_4]
mov     ecx, eax
call    sub_41ab62
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
leave
retn    8
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
mov     edx, 111h
cmp     eax, edx
push    esi
ja      short loc_41ad0d
jz      short loc_41ace5
cmp     eax, 2bh
jb      loc_41ad38
cmp     eax, 2fh
jbe     short loc_41ad22
cmp     eax, 39h
jz      short loc_41ad22
cmp     eax, 4eh
jnz     short loc_41ad38
mov     eax, [ebp+arg_8]
mov     esi, [ebp+arg_c]
mov     [ebp+buf1], esi
mov     [ebp+var_4], eax
mov     edx, [eax+8]
xor     esi, esi
lea     eax, [ebp+buf1]
push    esi
push    eax
movzx   eax, dx
or      eax, 0bc4e0000h
push    eax
push    esi
call    sub_41bf09
jmp     loc_41ad71
mov     eax, [ebp+wparam]
xor     esi, esi
shr     eax, 10h
push    esi
or      eax, 0bd110000h
push    esi
push    eax
push    esi
call    sub_41bf09
test    eax, eax
jz      short loc_41ad6f
mov     ecx, [ebp+arg_c]
push    1
cmp     ecx, esi
pop     eax
jz      short loc_41ad71
mov     [ecx], eax
jmp     short loc_41ad71
cmp     eax, 114h
jb      short loc_41ad38
cmp     eax, 115h
jbe     short loc_41ad22
cmp     eax, 210h
jnz     short loc_41ad38
push    [ebp+arg_c]
add     eax, 0bc00h
push    [ebp+arg_8]
push    [ebp+wparam]
push    eax
call    sub_41a23f
jmp     short loc_41ad71
cmp     eax, 132h
jb      short loc_41ad6f
cmp     eax, 138h
ja      short loc_41ad6f
mov     edx, [ebp+wparam]
add     eax, 0fffffeceh
push    edi
mov     edi, [ebp+arg_c]
mov     [ebp+var_4], eax
lea     eax, [ebp+var_c]
push    edi
xor     esi, esi
push    eax
push    esi
push    0bc19h
mov     [ebp+buf1], edx
call    sub_41a23f
cmp     [edi], esi
pop     edi
jnz     short loc_41ad71
xor     eax, eax
pop     esi
leave
retn    10h
push    esi
mov     esi, ecx
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
test    eax, eax
jz      short loc_41ade3
cmp     [eax+1ch], esi
jnz     short loc_41ade3
mov     ecx, offset dword_44aa98
call    ?updatesyscolors@aux_data@@qaexxz
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
cmp     byte ptr [eax+14h], 0
jnz     short loc_41ae19
call    ?afxgetthread@@ygpavcwinthread@@xz
test    eax, eax
jz      short loc_41ae19
call    ?afxgetthread@@ygpavcwinthread@@xz
cmp     [eax+1ch], esi
jnz     short loc_41ae19
push    offset ?createobject@?$cprocesslocal@v_afx_ctl3d_state@@@@sgpavcnotrackobject@@xz
mov     ecx, offset dword_44aa90
call    sub_422102
mov     eax, [eax+1ch]
test    eax, eax
jz      short loc_41ae19
call    eax
mov     ecx, esi
call    sub_41bb5b
test    eax, 40000000h
jnz     short loc_41ae39
push    1
push    1
push    0
push    0
push    15h
push    dword ptr [esi+1ch]
call    ?sendmessagetodescendants@cwnd@@sgxpauhwnd__@@iijhh@z
mov     ecx, esi
call    sub_4192d4
pop     esi
retn
push    esi
push    edi
mov     edi, ecx
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
cmp     byte ptr [eax+14h], 0
jnz     short loc_41ae7e
push    offset ?createobject@?$cprocesslocal@v_afx_ctl3d_state@@@@sgpavcnotrackobject@@xz
mov     ecx, offset dword_44aa90
call    sub_422102
mov     esi, eax
call    ?afxgetthread@@ygpavcwinthread@@xz
test    eax, eax
jz      short loc_41ae7e
call    ?afxgetthread@@ygpavcwinthread@@xz
cmp     [eax+1ch], edi
jnz     short loc_41ae7e
mov     eax, [esi+24h]
test    eax, eax
jz      short loc_41ae7e
call    eax
and     dword ptr byte_448d0c+10h, 0
push    0
push    0
mov     ecx, edi
call    ?ondisplaychange@cwnd@@iaejij@z
pop     edi
pop     esi
retn    8
push    esi
mov     esi, ecx
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
test    eax, eax
jz      short loc_41aeb4
cmp     [eax+1ch], esi
jnz     short loc_41aeb4
push    dword ptr [esp+8]
mov     ecx, eax
call    ?devmodechange@cwinapp@@qaexpad@z
mov     ecx, esi
call    sub_41bb5b
test    eax, 40000000h
jnz     short loc_41aedc
call    ?getcurrentmessage@cwnd@@kgpbutagmsg@@xz
push    1
push    1
push    dword ptr [eax+0ch]
push    dword ptr [eax+8]
push    dword ptr [eax+4]
push    dword ptr [esi+1ch]
call    ?sendmessagetodescendants@cwnd@@sgxpauhwnd__@@iijhh@z
pop     esi
retn    4
mov     eax, offset loc_4229c4
call    __eh_prolog
sub     esp, 24h
push    ebx
push    esi
push    edi
mov     esi, ecx
mov     [ebp+var_10], esp
push    [ebp+arg_0]
lea     ecx, [ebp+var_2c]
push    esi
call    ??0cdataexchange@@qae@pavcwnd@@h@z
call    ?afxgetthreadstate@@ygpav_afx_thread_state@@xz
mov     edi, eax
and     [ebp+arg_0], 0
and     [ebp+var_4], 0
mov     [ebp+var_14], edi
mov     ecx, [edi+0b8h]
lea     eax, [edi+0b8h]
mov     [ebp+var_18], ecx
mov     ecx, [esi+1ch]
mov     [eax], ecx
mov     eax, [esi]
lea     ecx, [ebp+var_2c]
push    ecx
mov     ecx, esi
call    dword ptr [eax+84h]
mov     [ebp+arg_0], 1
jmp     short loc_41b1ae
mov     eax, offset loc_41b1ab
retn
mov     esi, [ebp+var_1c]
push    0f108h
push    30h
mov     ecx, esi
mov     eax, [esi]
call    dword ptr [eax+10h]
mov     ecx, esi
call    ?delete@cexception@@qaexxz
mov     eax, offset loc_41b1ab
retn
mov     edi, [ebp+var_14]
mov     eax, [ebp+var_18]
mov     ecx, [ebp+var_c]
mov     [edi+0b8h], eax
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 28h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
mov     ebx, ecx
test    esi, esi
mov     [ebp+var_4], 1
jz      loc_41b49c
push    edi
mov     edi, ds:senddlgitemmessagea
mov     cx, [esi]
test    cx, cx
jz      loc_41b495
inc     esi
inc     esi
mov     ax, [esi]
inc     esi
inc     esi
mov     edx, [esi]
add     esi, 4
cmp     ax, 1234h
mov     [ebp+arg_0], edx
jz      short loc_41b448
cmp     ax, 401h
jnz     short loc_41b437
mov     eax, 180h
jmp     short loc_41b46f
cmp     ax, 403h
jnz     short loc_41b442
mov     eax, 143h
cmp     ax, 401h
jnz     short loc_41b463
or      [ebp+var_24], 0ffffffffh
lea     eax, [ebp+var_28]
push    eax
push    0
mov     [ebp+var_28], 1
mov     [ebp+var_20], esi
push    401h
jmp     short loc_41b476
cmp     ax, 180h
jz      short loc_41b46f
cmp     ax, 143h
jnz     short loc_41b488
movzx   eax, ax
push    esi
push    0
push    eax
movzx   eax, cx
push    eax
push    dword ptr [ebx+1ch]
call    edi
cmp     eax, 0ffffffffh
jnz     short loc_41b488
and     [ebp+var_4], 0
add     esi, [ebp+arg_0]
cmp     [ebp+var_4], 0
jnz     loc_41b409
cmp     [ebp+var_4], 0
pop     edi
jz      short loc_41b4af
xor     eax, eax
push    eax
push    eax
push    eax
push    eax
push    364h
push    dword ptr [ebx+1ch]
call    ?sendmessagetodescendants@cwnd@@sgxpauhwnd__@@iijhh@z
mov     eax, [ebp+var_4]
pop     esi
pop     ebx
leave
retn    4
push    ebx
push    esi
mov     esi, offset acomctl32dll_0
push    edi
push    esi
call    ds:getmodulehandlea
push    esi
mov     edi, eax
call    ds:loadlibrarya
mov     ebx, eax
test    ebx, ebx
jz      short loc_41b724
push    offset ainitcommoncont
push    ebx
xor     esi, esi
call    ds:getprocaddress
test    eax, eax
jnz     short loc_41b6fe
mov     eax, [esp+0ch+arg_4]
mov     edi, 3fc0h
and     eax, edi
cmp     eax, [esp+0ch+arg_4]
jnz     short loc_41b71b
call    ds:initcommoncontrols
mov     esi, edi
jmp     short loc_41b71b
push    [esp+0ch+arg_0]
call    eax
test    eax, eax
jz      short loc_41b71b
mov     esi, [esp+0ch+arg_4]
test    edi, edi
jnz     short loc_41b71b
call    ds:initcommoncontrols
or      si, 3fc0h
push    ebx
call    ds:freelibrary
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    8
push    ebp
mov     ebp, esp
sub     esp, 34h
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     [ebp+var_4], eax
mov     eax, [eax+18h]
not     eax
and     [ebp+arg_0], eax
jnz     short loc_41b74a
push    1
pop     eax
jmp     locret_41b9dd
push    ebx
push    esi
push    edi
xor     edi, edi
push    28h
lea     eax, [ebp+wndclass]
push    edi
push    eax
xor     esi, esi
call    _memset
mov     eax, ds:defwindowproca
add     esp, 0ch
mov     [ebp+wndclass.lpfnwndproc], eax
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+8]
push    8
test    byte ptr [ebp+arg_0], 1
mov     [ebp+wndclass.hinstance], eax
mov     eax, dword_44aad8
pop     ebx
mov     [ebp+wndclass.hcursor], eax
mov     [ebp+var_c], ebx
jz      short loc_41b7a5
lea     eax, [ebp+wndclass]
mov     [ebp+wndclass.style], 0bh
push    eax
mov     [ebp+wndclass.lpszclassname], offset aafxwnd42s
call    sub_419f38
test    eax, eax
jz      short loc_41b7a5
push    1
pop     esi
test    byte ptr [ebp+arg_0], 20h
jz      short loc_41b7c6
or      byte ptr [ebp+wndclass.style], 8bh
lea     eax, [ebp+wndclass]
push    eax
mov     [ebp+wndclass.lpszclassname], offset aafxolecontrol4
call    sub_419f38
test    eax, eax
jz      short loc_41b7c6
or      esi, 20h
test    byte ptr [ebp+arg_0], 2
jz      short loc_41b7ed
lea     eax, [ebp+wndclass]
mov     [ebp+wndclass.style], edi
push    eax
mov     [ebp+wndclass.lpszclassname], offset aafxcontrolbar4
mov     [ebp+wndclass.hbrbackground], 10h
call    sub_419f38
test    eax, eax
jz      short loc_41b7ed
or      esi, 2
test    byte ptr [ebp+arg_0], 4
jz      short loc_41b813
push    7a01h
lea     eax, [ebp+wndclass]
push    offset aafxmdiframe42s
push    eax
mov     [ebp+wndclass.style], ebx
mov     [ebp+wndclass.hbrbackground], edi
call    unknown_libname_21
test    eax, eax
jz      short loc_41b813
or      esi, 4
test    byte ptr [ebp+arg_0], bl
jz      short loc_41b83f
push    7a02h
lea     eax, [ebp+wndclass]
push    offset aafxframeorview
push    eax
mov     [ebp+wndclass.style], 0bh
mov     [ebp+wndclass.hbrbackground], 6
call    unknown_libname_21
test    eax, eax
jz      short loc_41b83f
or      esi, ebx
test    byte ptr [ebp+arg_0], 10h
jz      short loc_41b862
lea     eax, [ebp+var_c]
push    3fc0h
push    eax
mov     [ebp+var_8], 0ffh
call    sub_41b6b3
or      esi, eax
and     word ptr [ebp+arg_0], 0c03fh
test    byte ptr [ebp+arg_0], 40h
jz      short loc_41b87c
lea     eax, [ebp+var_c]
push    40h
push    eax
mov     [ebp+var_8], 10h
call    sub_41b6b3
or      esi, eax
test    byte ptr [ebp+arg_0], 80h
jz      short loc_41b899
lea     eax, [ebp+var_c]
push    80h
push    eax
mov     [ebp+var_8], 2
call    sub_41b6b3
or      esi, eax
mov     eax, 100h
test    [ebp+arg_0], eax
jz      short loc_41b8b2
push    eax
lea     eax, [ebp+var_c]
push    eax
mov     [ebp+var_8], ebx
call    sub_41b6b3
or      esi, eax
mov     eax, 200h
test    [ebp+arg_0], eax
jz      short loc_41b8cf
push    eax
lea     eax, [ebp+var_c]
push    eax
mov     [ebp+var_8], 20h
call    sub_41b6b3
or      esi, eax
mov     ebx, 400h
test    [ebp+arg_0], ebx
jz      short loc_41b8ec
lea     eax, [ebp+var_c]
push    ebx
push    eax
mov     [ebp+var_8], 1
call    sub_41b6b3
or      esi, eax
mov     edi, 800h
test    [ebp+arg_0], edi
jz      short loc_41b909
lea     eax, [ebp+var_c]
push    edi
push    eax
mov     [ebp+var_8], 40h
call    sub_41b6b3
or      esi, eax
mov     eax, 1000h
test    [ebp+arg_0], eax
jz      short loc_41b926
push    eax
lea     eax, [ebp+var_c]
push    eax
mov     [ebp+var_8], 4
call    sub_41b6b3
or      esi, eax
mov     eax, 2000h
test    [ebp+arg_0], eax
jz      short loc_41b943
push    eax
lea     eax, [ebp+var_c]
push    eax
mov     [ebp+var_8], 80h
call    sub_41b6b3
or      esi, eax
mov     eax, 4000h
test    [ebp+arg_0], eax
jz      short loc_41b95c
push    eax
lea     eax, [ebp+var_c]
push    eax
mov     [ebp+var_8], edi
call    sub_41b6b3
or      esi, eax
mov     eax, 8000h
test    [ebp+arg_0], eax
jz      short loc_41b975
push    eax
lea     eax, [ebp+var_c]
push    eax
mov     [ebp+var_8], ebx
call    sub_41b6b3
or      esi, eax
mov     eax, 10000h
test    [ebp+arg_0], eax
jz      short loc_41b992
push    eax
lea     eax, [ebp+var_c]
push    eax
mov     [ebp+var_8], 200h
call    sub_41b6b3
or      esi, eax
mov     eax, 20000h
test    [ebp+arg_0], eax
jz      short loc_41b9af
push    eax
lea     eax, [ebp+var_c]
push    eax
mov     [ebp+var_8], 100h
call    sub_41b6b3
or      esi, eax
mov     ecx, [ebp+var_4]
mov     edx, 3fc0h
or      [ecx+18h], esi
mov     eax, [ecx+18h]
mov     edi, eax
and     edi, edx
cmp     edi, edx
jnz     short loc_41b9cd
or      al, 10h
or      esi, 10h
mov     [ecx+18h], eax
mov     eax, esi
pop     edi
and     eax, [ebp+arg_0]
pop     esi
pop     ebx
sub     eax, [ebp+arg_0]
neg     eax
sbb     eax, eax
inc     eax
leave
retn    4
push    esi
mov     esi, ecx
push    [esp+4+hwnd]
call    sub_4193b2
test    eax, eax
jz      short loc_41ba3f
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+50h]
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+80h]
mov     esi, eax
call    ?afxgetafxwndproc@@ygp6gjpauhwnd__@@iij@zxz
push    eax
push    0fffffffch
push    [esp+0ch+hwnd]
call    ds:setwindowlonga
cmp     dword ptr [esi], 0
jnz     short loc_41ba3c
mov     [esi], eax
push    1
pop     eax
pop     esi
retn    4
push    [esp+arg_0]
mov     ecx, offset dword_44a520
call    sub_40e36a
retn
push    [esp+arg_8]
mov     ecx, [ecx+34h]
push    [esp+4+arg_4]
mov     eax, [ecx]
push    [esp+8+arg_0]
call    dword ptr [eax+54h]
retn    0ch
mov     eax, [ecx+34h]
test    eax, eax
jnz     short loc_41baec
push    [esp+niddlgitem]
push    dword ptr [ecx+1ch]
call    ds:getdlgitem
push    eax
call    sub_41936d
jmp     short locret_41baf7
mov     edx, [eax]
push    [esp+niddlgitem]
mov     ecx, eax
call    dword ptr [edx+70h]
retn    4
mov     eax, [ecx+34h]
test    eax, eax
jnz     short loc_41bb16
push    [esp+niddlgitem]
push    dword ptr [ecx+1ch]
call    ds:getdlgitem
mov     ecx, [esp+arg_4]
mov     [ecx], eax
jmp     short locret_41bb25
push    [esp+arg_4]
mov     edx, [eax]
mov     ecx, eax
push    [esp+4+niddlgitem]
call    dword ptr [edx+6ch]
retn    8
mov     eax, [ecx+38h]
test    eax, eax
jnz     short loc_41bb6e
push    0fffffff0h
push    dword ptr [ecx+1ch]
call    ds:getwindowlonga
retn
mov     edx, [eax]
mov     ecx, eax
jmp     dword ptr [edx+70h]
mov     eax, [ecx+38h]
test    eax, eax
jnz     short loc_41bb88
push    0ffffffech
push    dword ptr [ecx+1ch]
call    ds:getwindowlonga
retn
mov     edx, [eax]
mov     ecx, eax
jmp     dword ptr [edx+74h]
push    ebp
mov     ebp, esp
mov     eax, [ecx+38h]
test    eax, eax
jnz     short loc_41bbac
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
push    dword ptr [ecx+1ch]
call    ?modifystyle@cwnd@@sghpauhwnd__@@kki@z
jmp     short loc_41bbbc
push    [ebp+arg_8]
mov     edx, [eax]
mov     ecx, eax
push    [ebp+arg_4]
push    [ebp+arg_0]
call    dword ptr [edx+78h]
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, [ecx+38h]
test    eax, eax
jnz     short loc_41bbdd
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
push    dword ptr [ecx+1ch]
call    ?modifystyleex@cwnd@@sghpauhwnd__@@kki@z
jmp     short loc_41bbed
push    [ebp+arg_8]
mov     edx, [eax]
mov     ecx, eax
push    [ebp+arg_4]
push    [ebp+arg_0]
call    dword ptr [edx+7ch]
pop     ebp
retn    0ch
mov     eax, [ecx+38h]
test    eax, eax
jnz     short loc_41bc07
push    [esp+lpstring]
push    dword ptr [ecx+1ch]
call    ds:setwindowtexta
jmp     short locret_41bc15
mov     edx, [eax]
push    [esp+lpstring]
mov     ecx, eax
call    dword ptr [edx+80h]
retn    4
mov     eax, [ecx+38h]
test    eax, eax
jnz     short loc_41bc32
push    [esp+nmaxcount]
push    [esp+4+lpstring]
push    dword ptr [ecx+1ch]
call    ds:getwindowtexta
jmp     short locret_41bc44
push    [esp+nmaxcount]
mov     edx, [eax]
mov     ecx, eax
push    [esp+4+lpstring]
call    dword ptr [edx+84h]
retn    8
mov     eax, [ecx+38h]
test    eax, eax
jnz     short loc_41bced
push    [esp+ncmdshow]
push    dword ptr [ecx+1ch]
call    ds:showwindow
jmp     short locret_41bcfb
mov     edx, [eax]
push    [esp+ncmdshow]
mov     ecx, eax
call    dword ptr [edx+0a0h]
retn    4
mov     eax, [ecx+38h]
test    eax, eax
jnz     short loc_41bd0f
push    dword ptr [ecx+1ch]
call    ds:iswindowenabled
retn
mov     edx, [eax]
mov     ecx, eax
jmp     dword ptr [edx+0a4h]
mov     eax, [ecx+38h]
test    eax, eax
jnz     short loc_41bd57
push    dword ptr [ecx+1ch]
call    ds:setfocus
push    eax
call    sub_41936d
retn
mov     edx, [eax]
mov     ecx, eax
jmp     dword ptr [edx+0ach]
push    esi
mov     esi, ecx
test    esi, esi
jz      short loc_41bd9a
cmp     dword ptr [esi+38h], 0
jnz     short loc_41bd9a
push    dword ptr [esi+1ch]
call    ds:getparent
push    eax
mov     eax, [esp+8+arg_0]
lea     ecx, [eax+4]
call    ?getvalueat@cmapptrtoptr@@qbepaxpax@z
test    eax, eax
jz      short loc_41bd9a
mov     eax, [eax+34h]
test    eax, eax
jz      short loc_41bd9a
mov     edx, [eax]
push    esi
mov     ecx, eax
call    dword ptr [edx+8ch]
pop     esi
retn    4
cmp     dword ptr [ecx+38h], 0
jnz     short locret_41bdba
mov     eax, [esp+arg_0]
mov     eax, [eax+34h]
test    eax, eax
jz      short locret_41bdba
mov     edx, [eax]
push    ecx
mov     ecx, eax
call    dword ptr [edx+8ch]
retn    4
mov     eax, ecx
push    1
pop     ecx
xor     edx, edx
mov     [eax+4], ecx
mov     [eax+8], edx
mov     [eax+0ch], edx
mov     [eax+10h], edx
mov     [eax+14h], ecx
mov     [eax+18h], edx
retn
mov     eax, offset loc_422a28
call    __eh_prolog
push    ecx
mov     [ebp+var_10], ecx
mov     eax, [ecx+10h]
and     [ebp+var_4], 0
add     ecx, 10h
test    eax, eax
jz      short loc_41bdf6
call    dword ptr [eax+1ch]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_18]
push    ebx
push    esi
push    1
test    eax, eax
pop     ebx
jz      short loc_41be21
mov     ecx, [ebp+arg_0]
mov     [eax], ecx
mov     ecx, [ebp+arg_c]
mov     [eax+4], ecx
jmp     loc_41bf01
mov     eax, [ebp+arg_14]
cmp     eax, 28h
ja      short loc_41be9a
jz      short loc_41be87
dec     eax
dec     eax
jz      short loc_41be82
sub     eax, 0ah
jz      short loc_41be7a
dec     eax
jz      short loc_41be75
sub     eax, 16h
jz      short loc_41be6a
sub     eax, 3
jz      short loc_41be57
dec     eax
jnz     short loc_41bead
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_0]
push    dword ptr [eax]
push    dword ptr [eax+4]
call    [ebp+arg_c]
jmp     loc_41beff
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_0]
push    dword ptr [eax]
push    dword ptr [eax+4]
call    [ebp+arg_c]
jmp     loc_41bf01
mov     ecx, [ebp+arg_0]
call    [ebp+arg_c]
jmp     loc_41beff
push    [ebp+arg_4]
jmp     short loc_41bebf
mov     ecx, [ebp+arg_0]
call    [ebp+arg_c]
jmp     short loc_41bf01
push    [ebp+arg_4]
jmp     short loc_41beb4
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_0]
push    dword ptr [eax]
push    dword ptr [eax+4]
push    [ebp+arg_4]
call    [ebp+arg_c]
jmp     short loc_41bf01
sub     eax, 29h
jz      short loc_41beee
sub     eax, 3
jz      short loc_41bee2
dec     eax
jz      short loc_41bec7
dec     eax
jz      short loc_41bebc
dec     eax
jz      short loc_41beb1
xor     eax, eax
jmp     short loc_41bf03
push    [ebp+arg_10]
mov     ecx, [ebp+arg_0]
call    [ebp+arg_c]
jmp     short loc_41beff
push    [ebp+arg_10]
mov     ecx, [ebp+arg_0]
call    [ebp+arg_c]
jmp     short loc_41bf01
push    [ebp+arg_4]
mov     esi, [ebp+arg_10]
mov     ecx, [ebp+arg_0]
push    esi
call    [ebp+arg_c]
xor     ebx, ebx
cmp     [esi+1ch], ebx
setz    bl
and     dword ptr [esi+1ch], 0
jmp     short loc_41bf01
mov     esi, [ebp+arg_10]
mov     ecx, [ebp+arg_0]
push    esi
call    [ebp+arg_c]
jmp     short loc_41bed4
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_0]
push    dword ptr [eax]
push    dword ptr [eax+4]
push    [ebp+arg_4]
call    [ebp+arg_c]
mov     ebx, eax
mov     eax, ebx
pop     esi
pop     ebx
pop     ebp
retn    1ch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    ebx
push    esi
push    edi
cmp     eax, 0fffffffeh
mov     edi, ecx
jnz     short loc_41bf3a
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
push    [ebp+arg_c]
mov     eax, [eax+1038h]
mov     ecx, eax
push    [ebp+buf1]
mov     edx, [eax]
push    [ebp+arg_0]
push    edi
call    dword ptr [edx+4]
jmp     loc_41c011
cmp     eax, 0fffffffdh
jnz     short loc_41bfba
mov     ebx, [ebp+buf1]
and     [ebp+arg_4], 0
mov     ecx, edi
mov     eax, [ebx+30h]
mov     [ebp+buf1], eax
mov     eax, [edi]
call    dword ptr [eax+2ch]
mov     edi, eax
test    edi, edi
jz      short loc_41bfb5
cmp     [ebp+arg_4], 0
jnz     short loc_41bfb5
mov     esi, [edi+4]
mov     eax, [esi+4]
test    eax, eax
jz      short loc_41bfb1
cmp     dword ptr [esi+8], 0
jz      short loc_41bfb1
cmp     [ebp+arg_4], 0
jnz     short loc_41bfb1
cmp     [ebp+arg_0], eax
jnz     short loc_41bfac
cmp     [ebp+buf1], 0
jnz     short loc_41bf87
cmp     dword ptr [esi], 0
jz      short loc_41bf9f
jmp     short loc_41bfac
mov     eax, [esi]
test    eax, eax
jz      short loc_41bfac
push    10h
push    eax
push    [ebp+buf1]
call    _memcmp
add     esp, 0ch
test    eax, eax
jnz     short loc_41bfac
mov     eax, [esi+8]
mov     [ebp+arg_4], 1
mov     [ebx+4], eax
add     esi, 0ch
jmp     short loc_41bf62
mov     edi, [edi]
jmp     short loc_41bf55
mov     eax, [ebp+arg_4]
jmp     short loc_41c011
cmp     eax, 0ffffffffh
jz      short loc_41bfcc
mov     ebx, eax
movzx   eax, ax
shr     ebx, 10h
mov     [ebp+arg_4], eax
jnz     short loc_41bfd1
mov     ebx, 111h
mov     eax, [edi]
mov     ecx, edi
call    dword ptr [eax+28h]
mov     esi, eax
test    esi, esi
jz      short loc_41c00f
push    [ebp+arg_0]
push    [ebp+arg_4]
push    ebx
push    dword ptr [esi+4]
call    unknown_libname_15
test    eax, eax
jnz     short loc_41bff5
mov     esi, [esi]
jmp     short loc_41bfda
push    [ebp+arg_c]
push    dword ptr [eax+10h]
push    [ebp+buf1]
push    dword ptr [eax+14h]
push    [ebp+arg_4]
push    [ebp+arg_0]
push    edi
call    sub_41be02
jmp     short loc_41c011
xor     eax, eax
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    10h
push    1
pop     eax
retn    4
xor     eax, eax
retn
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
push    1
mov     ecx, eax
mov     edx, [eax]
call    dword ptr [edx+90h]
retn
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
push    0ffffffffh
mov     ecx, eax
mov     edx, [eax]
call    dword ptr [edx+90h]
retn
mov     eax, offset dword_4252a0
retn
mov     eax, offset dword_4252c0
retn
mov     eax, offset dword_4252f0
retn
mov     eax, offset dword_425328
retn
push    esi
mov     esi, ecx
push    0dh
call    sub_422460
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+20h]
test    eax, eax
jz      short loc_41c087
mov     ecx, eax
call    ?unlock@ctypelibcache@@qaexxz
push    0dh
call    ?afxunlockglobals@@ygxh@z
test    esi, esi
jz      short loc_41c09b
mov     eax, [esi]
push    1
mov     ecx, esi
call    dword ptr [eax+4]
pop     esi
retn
push    1
pop     eax
retn
xor     eax, eax
retn    4
mov     eax, offset dword_425340
retn
mov     eax, offset dword_425350
retn
push    esi
mov     esi, ecx
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_41c108
cmp     dword ptr [esi+10h], 0
jnz     short loc_41c164
mov     ecx, [esp+4+arg_0]
neg     ecx
sbb     ecx, ecx
and     ecx, 0fffffffdh
add     ecx, 3
or      ch, 4
push    ecx
push    dword ptr [esi+8]
push    dword ptr [eax+4]
call    ds:enablemenuitem
jmp     short loc_41c15d
cmp     [esp+4+arg_0], 0
push    edi
jnz     short loc_41c150
mov     edi, [esi+14h]
call    ds:getfocus
cmp     eax, [edi+1ch]
jnz     short loc_41c150
push    dword ptr [edi+1ch]
call    ds:getparent
push    eax
call    sub_41936d
mov     ecx, [esi+14h]
test    ecx, ecx
jz      short loc_41c137
mov     ecx, [ecx+1ch]
push    0
push    ecx
push    dword ptr [eax+1ch]
call    ds:getnextdlgtabitem
push    eax
call    sub_41936d
mov     ecx, eax
call    sub_41bd40
push    [esp+8+arg_0]
mov     ecx, [esi+14h]
call    ?showwindow@cwnd@@qaehh@z
pop     edi
mov     dword ptr [esi+18h], 1
pop     esi
retn    4
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
xor     ecx, ecx
cmp     [esp+8+arg_0], edi
mov     eax, [esi]
setnz   cl
push    ecx
mov     ecx, esi
call    dword ptr [eax+4]
cmp     [esi+0ch], edi
jz      short loc_41c21b
cmp     [esi+10h], edi
jnz     short loc_41c21b
cmp     hbitmapchecked, edi
jnz     short loc_41c200
call    ?_afxloaddotbitmap@@ygxxz
cmp     hbitmapchecked, edi
jz      short loc_41c21b
push    hbitmapchecked
mov     eax, [esi+0ch]
push    edi
push    400h
push    dword ptr [esi+8]
push    dword ptr [eax+4]
call    ds:setmenuitembitmaps
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_41c264
cmp     dword ptr [esi+10h], 0
jnz     short loc_41c273
mov     ecx, [esi+8]
push    edi
mov     edi, 400h
push    edi
push    ecx
push    dword ptr [eax+4]
call    ds:getmenustate
push    [esp+8+lpnewitem]
and     ax, 0f6fbh
or      eax, edi
push    dword ptr [esi+4]
push    eax
mov     eax, [esi+0ch]
push    dword ptr [esi+8]
push    dword ptr [eax+4]
call    ds:modifymenua
pop     edi
jmp     short loc_41c273
push    [esp+4+lpnewitem]
mov     eax, [esi+14h]
push    dword ptr [eax+1ch]
call    ?afxsetwindowtext@@ygxpauhwnd__@@pbd@z
pop     esi
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
mov     eax, [esi+4]
cmp     eax, ebx
jz      short loc_41c2cf
cmp     ax, 0ffffh
jz      short loc_41c2cf
push    edi
mov     edi, [ebp+arg_0]
push    ebx
mov     [esi+18h], ebx
mov     edx, [edi]
push    esi
push    0ffffffffh
push    eax
mov     ecx, edi
call    dword ptr [edx+0ch]
cmp     [ebp+arg_4], ebx
mov     [ebp+arg_0], eax
jz      short loc_41c2c9
cmp     [esi+18h], ebx
jnz     short loc_41c2c9
mov     eax, [edi]
lea     ecx, [ebp+var_8]
push    ecx
push    esi
push    ebx
mov     ecx, edi
push    dword ptr [esi+4]
mov     [ebp+var_8], ebx
call    dword ptr [eax+0ch]
mov     edx, [esi]
push    eax
mov     ecx, esi
call    dword ptr [edx]
mov     eax, [ebp+arg_0]
pop     edi
jmp     short loc_41c2d2
push    1
pop     eax
pop     esi
pop     ebx
leave
retn    8
call    sub_4181f5
xor     eax, eax
retn
push    esi
push    edi
mov     edi, [esp+8+size]
push    edi
call    _malloc
mov     esi, eax
pop     ecx
test    esi, esi
jnz     short loc_41c316
mov     eax, off_42b89c
test    eax, eax
jz      short loc_41c316
push    edi
call    eax
test    eax, eax
pop     ecx
jnz     short loc_41c2f8
mov     eax, esi
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
mov     ecx, [esp+4+arg_0]
mov     eax, [ecx]
cmp     dword ptr [eax-0ch], 0
jl      short loc_41c343
mov     [esi], eax
add     eax, 0fffffff4h
push    eax
call    ds:interlockedincrement
jmp     short loc_41c353
mov     eax, off_42b8a0
mov     [esi], eax
push    dword ptr [ecx]
mov     ecx, esi
call    ??4cstring@@qaeabv0@pbd@z
mov     eax, esi
pop     esi
retn    4
call    sub_41c363
jmp     loc_41c372
push    40h
push    50h
mov     ecx, offset dword_44a710
call    sub_40e277
retn
push    offset sub_41c37e
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a710
jmp     loc_40e29f
call    sub_41c392
jmp     loc_41c3a4
push    40h
push    90h
mov     ecx, offset dword_44a6e8
call    sub_40e277
retn
push    offset sub_41c3b0
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a6e8
jmp     loc_40e29f
call    sub_41c3c4
jmp     loc_41c3d6
push    40h
push    110h
mov     ecx, offset dword_44a6c0
call    sub_40e277
retn
push    offset sub_41c3e2
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a6c0
jmp     loc_40e29f
call    sub_41c3f6
jmp     loc_41c408
push    40h
push    210h
mov     ecx, offset dword_44a698
call    sub_40e277
retn
push    offset sub_41c414
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a698
jmp     loc_40e29f
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
mov     ebx, ecx
test    esi, esi
jnz     short loc_41c433
mov     eax, off_42b8a0
mov     [ebx], eax
jmp     short loc_41c49b
push    edi
push    40h
pop     edi
cmp     esi, edi
jg      short loc_41c44a
mov     ecx, offset dword_44a710
call    sub_40e2db
mov     [eax+8], edi
jmp     short loc_41c487
mov     edi, 80h
cmp     esi, edi
jg      short loc_41c45a
mov     ecx, offset dword_44a6e8
jmp     short loc_41c440
mov     edi, 100h
cmp     esi, edi
jg      short loc_41c46a
mov     ecx, offset dword_44a6c0
jmp     short loc_41c440
mov     edi, 200h
cmp     esi, edi
jg      short loc_41c47a
mov     ecx, offset dword_44a698
jmp     short loc_41c440
lea     eax, [esi+0dh]
push    eax
call    sub_41c2f2
pop     ecx
mov     [eax+8], esi
mov     dword ptr [eax], 1
and     byte ptr [eax+esi+0ch], 0
mov     [eax+4], esi
add     eax, 0ch
mov     [ebx], eax
pop     edi
pop     esi
pop     ebx
retn    4
mov     eax, [ecx+8]
cmp     eax, 40h
jnz     short loc_41c4b4
push    ecx
mov     ecx, offset dword_44a710
call    sub_40e36a
retn
cmp     eax, 80h
jnz     short loc_41c4c3
push    ecx
mov     ecx, offset dword_44a6e8
jmp     short loc_41c4ae
cmp     eax, 100h
jnz     short loc_41c4d2
push    ecx
mov     ecx, offset dword_44a6c0
jmp     short loc_41c4ae
cmp     eax, 200h
push    ecx
jnz     short loc_41c4e1
mov     ecx, offset dword_44a698
jmp     short loc_41c4ae
call    ??3@yaxpax@z
pop     ecx
retn
push    esi
mov     esi, ecx
mov     eax, [esi]
lea     ecx, [eax-0ch]
cmp     ecx, off_42b8a4
jz      short loc_41c517
add     eax, 0fffffff4h
push    eax
call    ds:interlockeddecrement
test    eax, eax
jg      short loc_41c510
mov     ecx, [esi]
sub     ecx, 0ch
call    sub_41c4a0
mov     eax, off_42b8a0
mov     [esi], eax
pop     esi
retn
push    esi
mov     esi, [esp+4+lpaddend]
cmp     esi, off_42b8a4
jz      short loc_41c538
push    esi
call    ds:interlockeddecrement
test    eax, eax
jg      short loc_41c538
mov     ecx, esi
call    sub_41c4a0
pop     esi
retn    4
push    esi
mov     esi, ecx
mov     eax, [esi]
lea     ecx, [eax-0ch]
cmp     ecx, off_42b8a4
jz      short loc_41c5d9
add     eax, 0fffffff4h
push    eax
call    ds:interlockeddecrement
test    eax, eax
jg      short loc_41c5d9
mov     ecx, [esi]
sub     ecx, 0ch
call    sub_41c4a0
pop     esi
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_c]
push    ebx
mov     ebx, [ebp+size]
push    edi
add     eax, ebx
mov     edi, ecx
test    eax, eax
jnz     short loc_41c5fb
mov     eax, [ebp+arg_0]
mov     ecx, off_42b8a0
mov     [eax], ecx
jmp     short loc_41c619
push    esi
mov     esi, [ebp+arg_0]
push    eax
mov     ecx, esi
call    sub_41c41e
mov     eax, [edi]
push    ebx
add     eax, [ebp+arg_8]
push    eax
push    dword ptr [esi]
call    _memcpy
add     esp, 0ch
pop     esi
pop     edi
pop     ebx
pop     ebp
retn    10h
mov     eax, off_42b8a0
push    ebx
mov     ebx, [esp+4+lpstring]
push    esi
mov     esi, ecx
push    edi
test    ebx, ebx
mov     [esi], eax
jz      short loc_41c669
mov     eax, ebx
shr     eax, 10h
test    ax, ax
jnz     short loc_41c648
movzx   eax, bx
push    eax
call    ?loadstringa@cstring@@qaehi@z
jmp     short loc_41c669
push    ebx
call    ds:lstrlena
mov     edi, eax
test    edi, edi
jz      short loc_41c669
push    edi
mov     ecx, esi
call    sub_41c41e
push    edi
push    ebx
push    dword ptr [esi]
call    _memcpy
add     esp, 0ch
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn    4
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, ecx
mov     ecx, [esi]
mov     eax, [edi]
cmp     ecx, eax
jz      short loc_41c6e7
cmp     dword ptr [ecx-0ch], 0
jge     short loc_41c6bf
add     ecx, 0fffffff4h
cmp     ecx, off_42b8a4
jnz     short loc_41c6c5
cmp     dword ptr [eax-0ch], 0
jge     short loc_41c6d2
push    eax
mov     ecx, esi
push    dword ptr [eax-8]
call    ?assigncopy@cstring@@iaexhpbd@z
jmp     short loc_41c6e7
mov     ecx, esi
call    sub_41c4e8
mov     eax, [edi]
mov     [esi], eax
add     eax, 0fffffff4h
push    eax
call    ds:interlockedincrement
mov     eax, esi
pop     edi
pop     esi
retn    4
push    ebx
mov     ebx, [esp+4+arg_8]
push    esi
push    edi
mov     edi, [esp+0ch+size]
mov     esi, ecx
lea     eax, [edi+ebx]
test    eax, eax
jz      short loc_41c78e
push    eax
call    sub_41c41e
push    edi
push    [esp+10h+src]
push    dword ptr [esi]
call    _memcpy
mov     eax, [esi]
push    ebx
push    [esp+1ch+arg_c]
add     eax, edi
push    eax
call    _memcpy
add     esp, 18h
pop     edi
pop     esi
pop     ebx
retn    10h
mov     eax, offset loc_422a67
call    __eh_prolog
push    ecx
push    ecx
mov     eax, off_42b8a0
and     [ebp+var_14], 0
push    esi
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_4]
push    1
mov     eax, [eax]
mov     ecx, [ecx]
pop     esi
push    eax
mov     [ebp+var_4], esi
push    dword ptr [eax-8]
push    ecx
push    dword ptr [ecx-8]
lea     ecx, [ebp+var_10]
call    sub_41c756
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+var_10]
push    eax
call    sub_41c326
mov     [ebp+var_14], esi
and     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+var_10]
call    sub_41c5b1
mov     ecx, [ebp+var_c]
mov     eax, [ebp+arg_0]
pop     esi
mov     large fs:0, ecx
leave
retn    0ch
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+size]
test    edi, edi
mov     esi, ecx
jz      short loc_41c853
mov     eax, [esi]
cmp     dword ptr [eax-0ch], 1
lea     ebx, [eax-0ch]
jg      short loc_41c83d
mov     ecx, [eax-8]
lea     edx, [ecx+edi]
cmp     edx, [eax-4]
jg      short loc_41c83d
push    edi
add     ecx, eax
push    [esp+10h+src]
push    ecx
call    _memcpy
mov     eax, [esi]
add     esp, 0ch
add     [eax-8], edi
mov     eax, [esi]
mov     ecx, [eax-8]
and     byte ptr [ecx+eax], 0
jmp     short loc_41c853
push    [esp+0ch+src]
mov     ecx, esi
push    edi
push    eax
push    dword ptr [eax-8]
call    sub_41c756
push    ebx
call    sub_41c519
pop     edi
pop     esi
pop     ebx
retn    8
push    esi
push    edi
mov     edi, [esp+8+lpstring]
mov     esi, ecx
test    edi, edi
jnz     short loc_41c869
xor     eax, eax
jmp     short loc_41c870
push    edi
call    ds:lstrlena
push    edi
push    eax
mov     ecx, esi
call    sub_41c7fa
mov     eax, esi
pop     edi
pop     esi
retn    4
lea     eax, [esp+src]
push    esi
push    eax
mov     esi, ecx
push    1
call    sub_41c7fa
mov     eax, esi
pop     esi
retn    4
push    ebx
push    esi
mov     esi, ecx
mov     ecx, [esp+8+arg_0]
mov     eax, [esi]
cmp     dword ptr [eax-0ch], 1
lea     ebx, [eax-0ch]
jg      short loc_41c8c5
cmp     ecx, [eax-4]
jle     short loc_41c8f5
push    edi
mov     edi, [eax-8]
cmp     ecx, edi
jge     short loc_41c8cf
mov     ecx, edi
push    ecx
mov     ecx, esi
call    sub_41c41e
lea     eax, [edi+1]
push    eax
lea     eax, [ebx+0ch]
push    eax
push    dword ptr [esi]
call    _memcpy
mov     eax, [esi]
add     esp, 0ch
push    ebx
mov     [eax-8], edi
call    sub_41c519
pop     edi
mov     eax, [esi]
pop     esi
pop     ebx
retn    4
push    0
push    [esp+4+arg_0]
call    sub_41c952
retn    4
push    esi
mov     esi, ecx
mov     ecx, [esp+4+arg_4]
mov     eax, [esi]
cmp     ecx, [eax-8]
jge     short loc_41c974
add     eax, ecx
movzx   ecx, [esp+4+arg_0]
push    ecx
push    eax
call    __mbschr
pop     ecx
test    eax, eax
pop     ecx
jnz     short loc_41c979
or      eax, 0ffffffffh
jmp     short loc_41c97b
sub     eax, [esi]
pop     esi
retn    8
cmp     [esp+arg_4], 110h
jnz     short loc_41c9ea
push    [esp+arg_0]
call    sub_419394
push    eax
push    offset off_425c70
call    ?afxdynamicdowncast@@yapavcobject@@paucruntimeclass@@pav1@@z
pop     ecx
test    eax, eax
pop     ecx
jz      short loc_41c9e5
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+0bch]
jmp     short locret_41c9ec
push    1
pop     eax
jmp     short locret_41c9ec
xor     eax, eax
retn    10h
mov     eax, offset off_425c90
retn
push    esi
mov     esi, ecx
call    sub_41cb2f
test    [esp+4+arg_0], 1
jz      short loc_41cb29
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422c38
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7cdialog@@6b@
and     [ebp+var_4], 0
cmp     dword ptr [esi+1ch], 0
jz      short loc_41cb55
call    sub_419be4
or      [ebp+var_4], 0ffffffffh
mov     ecx, esi
call    ??1cwnd@@uae@xz
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
push    ebx
mov     ebx, [esp+4+lpname]
push    esi
mov     eax, ebx
push    edi
mov     edi, ecx
shr     eax, 10h
test    ax, ax
mov     [edi+40h], ebx
jnz     short loc_41cb8f
cmp     dword ptr [edi+3ch], 0
jnz     short loc_41cb8f
movzx   eax, bx
mov     [edi+3ch], eax
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     esi, [eax+0ch]
push    5
push    ebx
push    esi
call    ds:findresourcea
push    eax
push    esi
call    ds:loadresource
push    esi
mov     ecx, edi
push    [esp+10h+arg_4]
push    eax
call    ?createindirect@cdialog@@iaehpaxpavcwnd@@pauhinstance__@@@z
pop     edi
pop     esi
pop     ebx
retn    8
mov     eax, offset loc_422c54
call    __eh_prolog
sub     esp, 34h
push    ebx
push    esi
xor     ebx, ebx
push    edi
cmp     [ebp+hinstance], ebx
mov     esi, ecx
mov     [ebp+var_10], esp
mov     [ebp+var_24], esi
jnz     short loc_41cc34
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+8]
mov     [ebp+hinstance], eax
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     edi, [eax+1038h]
push    10h
mov     [ebp+var_28], edi
mov     [ebp+hmem], ebx
mov     [ebp+hwnd], ebx
mov     [ebp+var_4], ebx
call    sub_41b72a
push    3c000h
call    sub_41b72a
cmp     edi, ebx
jz      short loc_41cc87
mov     eax, [esi]
lea     ecx, [ebp+var_34]
push    ecx
mov     ecx, esi
call    dword ptr [eax+0b4h]
cmp     eax, ebx
jz      loc_41ce1f
push    [ebp+lptemplate]
mov     eax, [edi]
lea     ecx, [ebp+var_34]
push    ecx
mov     ecx, edi
call    dword ptr [eax+10h]
mov     [ebp+lptemplate], eax
cmp     [ebp+lptemplate], ebx
jz      loc_41ce1f
mov     eax, off_42b8a0
mov     [ebp+str1], eax
lea     eax, [ebp+var_20]
mov     byte ptr [ebp+var_4], 1
push    eax
lea     eax, [ebp+str1]
push    eax
mov     dword ptr [ebp+var_20], ebx
push    [ebp+lptemplate]
call    ?getfont@cdialogtemplate@@sahpbudlgtemplate@@aavcstring@@aag@z
add     esp, 0ch
xor     ecx, ecx
cmp     eax, ebx
setz    cl
mov     eax, ecx
cmp     eax, ebx
jnz     short loc_41cd12
push    2ah
call    ds:getsystemmetrics
test    eax, eax
jz      loc_41cd54
push    offset amsshelldlg
push    [ebp+str1]
call    __mbscmp
pop     ecx
test    eax, eax
pop     ecx
jz      short loc_41cd08
push    offset amssansserif
push    [ebp+str1]
call    __mbscmp
pop     ecx
test    eax, eax
pop     ecx
jz      short loc_41cd08
push    offset ahelv
push    [ebp+str1]
call    __mbscmp
pop     ecx
test    eax, eax
pop     ecx
jnz     short loc_41cd54
cmp     [ebp+var_20], 8
jnz     short loc_41cd12
mov     dword ptr [ebp+var_20], ebx
push    [ebp+lptemplate]
lea     ecx, [ebp+var_40]
call    ??0cdialogtemplate@@qae@pbudlgtemplate@@@z
push    dword ptr [ebp+var_20]
lea     ecx, [ebp+var_40]
mov     byte ptr [ebp+var_4], 2
call    ?setsystemfont@cdialogtemplate@@qaehg@z
lea     ecx, [ebp+var_40]
call    ?detach@?$ccomptrbase@uicustomdestinationlist@@@atl@@qaepauicustomdestinationlist@@xz
lea     ecx, [ebp+var_40]
mov     [ebp+hmem], eax
mov     byte ptr [ebp+var_4], 1
call    ??1initialthreadparam@umsfreevirtualprocessorroot@details@concurrency@@qae@xz
cmp     [ebp+hmem], ebx
jz      short loc_41cd54
push    [ebp+hmem]
call    ds:globallock
mov     [ebp+lptemplate], eax
or      dword ptr [esi+2ch], 0ffffffffh
or      dword ptr [esi+24h], 10h
push    esi
call    ?afxhookwindowcreate@@ygxpavcwnd@@@z
mov     eax, [ebp+arg_4]
cmp     eax, ebx
jnz     short loc_41cd6d
xor     eax, eax
jmp     short loc_41cd70
mov     eax, [eax+1ch]
push    ebx
push    offset dialogfunc
push    eax
push    [ebp+lptemplate]
push    [ebp+hinstance]
call    ds:createdialogindirectparama
lea     ecx, [ebp+str1]
mov     [ebp+hwnd], eax
mov     byte ptr [ebp+var_4], bl
call    sub_41c5b1
jmp     short loc_41cdb0
mov     ecx, [ebp+var_2c]
call    ?delete@cexception@@qaexxz
mov     eax, [ebp+var_24]
or      dword ptr [eax+2ch], 0ffffffffh
mov     eax, offset loc_41cda8
retn
mov     esi, [ebp+var_24]
mov     edi, [ebp+var_28]
xor     ebx, ebx
or      [ebp+var_4], 0ffffffffh
cmp     edi, ebx
jz      short loc_41cdd3
mov     eax, [edi]
lea     ecx, [ebp+var_34]
push    ecx
mov     ecx, edi
call    dword ptr [eax+14h]
cmp     [ebp+hwnd], ebx
jz      short loc_41cdd3
mov     eax, [esi]
push    ebx
mov     ecx, esi
call    dword ptr [eax+0b4h]
call    ?afxunhookwindowcreate@@yghxz
test    eax, eax
jnz     short loc_41cde6
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0a4h]
cmp     [ebp+hwnd], ebx
jz      short loc_41cdfd
test    byte ptr [esi+24h], 10h
jnz     short loc_41cdfd
push    [ebp+hwnd]
call    ds:destroywindow
mov     [ebp+hwnd], ebx
cmp     [ebp+hmem], ebx
jz      short loc_41ce14
push    [ebp+hmem]
call    ds:globalunlock
push    [ebp+hmem]
call    ds:globalfree
cmp     [ebp+hwnd], ebx
jnz     short loc_41ce23
test    byte ptr [esi+24h], 10h
jz      short loc_41ce23
xor     eax, eax
jmp     short loc_41ce26
push    1
pop     eax
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
leave
retn    0ch
push    esi
push    edi
mov     esi, ecx
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
test    eax, eax
jz      short loc_41ce96
push    0
mov     ecx, eax
call    sub_4204cc
mov     eax, [esi+50h]
test    eax, eax
jz      short loc_41cea0
mov     eax, [eax+1ch]
lea     ecx, [esi+54h]
push    ecx
push    eax
call    sub_420672
push    esi
mov     edi, eax
call    ?afxhookwindowcreate@@ygxpavcwnd@@@z
mov     eax, edi
pop     edi
pop     esi
retn
mov     eax, offset loc_422c60
call    __eh_prolog
sub     esp, 18h
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     [ebp+var_10], esp
mov     [ebp+var_1c], esi
mov     eax, [esi+48h]
mov     edi, [esi+44h]
mov     [ebp+lptemplate], eax
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
cmp     dword ptr [esi+40h], 0
mov     ebx, [eax+0ch]
jz      short loc_41cf46
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ebx, [eax+0ch]
push    5
push    dword ptr [esi+40h]
push    ebx
call    ds:findresourcea
push    eax
push    ebx
call    ds:loadresource
mov     edi, eax
test    edi, edi
jz      short loc_41cf54
push    edi
call    ds:lockresource
mov     [ebp+lptemplate], eax
cmp     [ebp+lptemplate], 0
jnz     short loc_41cf62
or      eax, 0ffffffffh
jmp     loc_41d04a
mov     ecx, esi
call    sub_41ce7d
mov     [ebp+hwnd], eax
call    ?afxunhookwindowcreate@@yghxz
xor     edi, edi
cmp     [ebp+hwnd], edi
mov     [ebp+var_20], edi
jz      short loc_41cf99
push    [ebp+hwnd]
call    ds:iswindowenabled
test    eax, eax
jz      short loc_41cf99
push    edi
push    [ebp+hwnd]
call    ds:enablewindow
mov     [ebp+var_20], 1
push    esi
mov     [ebp+var_4], edi
call    ?afxhookwindowcreate@@ygxpavcwnd@@@z
push    [ebp+hwnd]
call    sub_41936d
push    ebx
push    eax
push    [ebp+lptemplate]
mov     ecx, esi
call    sub_41cc0a
cmp     eax, edi
jz      short loc_41d00c
test    byte ptr [esi+24h], 10h
jz      short loc_41cfda
push    4
mov     ecx, esi
pop     ebx
call    sub_41bb5b
test    ah, 1
jz      short loc_41cfd2
push    5
pop     ebx
push    ebx
mov     ecx, esi
call    ?runmodalloop@cwnd@@qaehk@z
cmp     [esi+1ch], edi
jz      short loc_41d00c
push    97h
push    edi
push    edi
push    edi
push    edi
push    edi
mov     ecx, esi
call    ?setwindowpos@cwnd@@qaehpbv1@hhhhi@z
jmp     short loc_41d00c
mov     ecx, [ebp+var_24]
call    ?delete@cexception@@qaexxz
mov     eax, [ebp+var_1c]
or      dword ptr [eax+2ch], 0ffffffffh
mov     eax, offset loc_41d007
retn
mov     esi, [ebp+var_1c]
xor     edi, edi
or      [ebp+var_4], 0ffffffffh
cmp     [ebp+var_20], edi
jz      short loc_41d020
push    1
push    [ebp+hwnd]
call    ds:enablewindow
cmp     [ebp+hwnd], edi
jz      short loc_41d039
call    ds:getactivewindow
cmp     eax, [esi+1ch]
jnz     short loc_41d039
push    [ebp+hwnd]
call    ds:setactivewindow
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+58h]
mov     ecx, esi
call    ?postmodal@cdialog@@iaexxz
mov     eax, [esi+2ch]
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
leave
retn
push    esi
mov     esi, ecx
test    byte ptr [esi+24h], 18h
jz      short loc_41d06b
mov     eax, [esi]
push    [esp+4+nresult]
call    dword ptr [eax+74h]
push    [esp+4+nresult]
push    dword ptr [esi+1ch]
call    ds:enddialog
pop     esi
retn    4
push    esi
push    edi
push    dword ptr [esp+0ch]
mov     esi, ecx
mov     edi, [esi]
call    sub_41fbaf
push    eax
mov     ecx, esi
call    dword ptr [edi+0c0h]
mov     ecx, esi
call    sub_4192d4
pop     edi
pop     esi
retn    8
push    esi
mov     esi, ecx
push    edi
mov     eax, [esi]
call    dword ptr [eax+0cch]
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ecx, [eax+1038h]
test    ecx, ecx
jz      short loc_41d0ee
mov     eax, [esi+58h]
test    eax, eax
jz      short loc_41d0ee
mov     edx, [esi+4ch]
test    edx, edx
jz      short loc_41d0d3
mov     edi, [ecx]
push    eax
push    edx
push    esi
call    dword ptr [edi+1ch]
jmp     short loc_41d0dd
mov     edx, [ecx]
push    eax
push    dword ptr [esi+40h]
push    esi
call    dword ptr [edx+20h]
test    eax, eax
jnz     short loc_41d0ee
push    0ffffffffh
mov     ecx, esi
call    sub_41d059
xor     eax, eax
jmp     short loc_41d123
mov     ecx, esi
call    sub_4192d4
mov     edi, eax
test    edi, edi
jz      short loc_41d121
test    byte ptr [esi+25h], 1
jz      short loc_41d121
push    0
push    0
push    dword ptr [esi+1ch]
call    ds:getnextdlgtabitem
push    eax
call    sub_41936d
test    eax, eax
jz      short loc_41d121
mov     ecx, eax
call    sub_41bd40
xor     edi, edi
mov     eax, edi
pop     edi
pop     esi
retn    8
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    esi
push    edi
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
xor     edi, edi
cmp     [eax+4], edi
jnz     short loc_41d13f
xor     eax, eax
jmp     short loc_41d17a
call    sub_4079ca
cmp     eax, edi
mov     esi, 0e146h
jz      short loc_41d164
mov     edx, [eax]
lea     ecx, [ebp+var_8]
push    ecx
push    edi
push    edi
push    esi
mov     ecx, eax
call    dword ptr [edx+0ch]
test    eax, eax
jz      short loc_41d164
push    1
pop     eax
jmp     short loc_41d17a
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
lea     ecx, [ebp+var_8]
push    ecx
push    edi
mov     edx, [eax]
push    edi
push    esi
mov     ecx, eax
call    dword ptr [edx+0ch]
pop     edi
pop     esi
leave
retn
push    2
call    sub_41d059
retn
push    esi
push    edi
mov     edi, ecx
cmp     dword ptr [edi+40h], 0
mov     esi, [edi+48h]
mov     eax, [edi+44h]
jz      short loc_41d235
push    ebx
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ebx, [eax+0ch]
push    5
push    dword ptr [edi+40h]
push    ebx
call    ds:findresourcea
push    eax
push    ebx
call    ds:loadresource
pop     ebx
test    eax, eax
jz      short loc_41d242
push    eax
call    ds:lockresource
mov     esi, eax
push    1
test    esi, esi
pop     eax
jz      short loc_41d280
cmp     word ptr [esi+2], 0ffffh
mov     ecx, [esi]
jnz     short loc_41d260
mov     ecx, [esi+0ch]
mov     ax, [esi+12h]
mov     si, [esi+14h]
jmp     short loc_41d268
mov     ax, [esi+0ah]
mov     si, [esi+0ch]
test    cx, 1801h
jnz     short loc_41d27e
test    ax, ax
jnz     short loc_41d27e
test    si, si
jnz     short loc_41d27e
push    1
pop     eax
jmp     short loc_41d280
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+0ch]
test    esi, esi
jnz     short loc_41d2b1
mov     eax, [ecx+3ch]
test    eax, eax
jz      short loc_41d2cf
lea     esi, [eax+20000h]
test    esi, esi
jz      short loc_41d2cf
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
test    eax, eax
jz      short loc_41d2ca
mov     edx, [eax]
push    1
push    esi
mov     ecx, eax
call    dword ptr [edx+98h]
push    1
pop     eax
jmp     short loc_41d2d1
xor     eax, eax
pop     esi
retn    8
mov     eax, offset off_426018
retn
mov     eax, offset loc_422cf0
call    __eh_prolog
sub     esp, 0ch
push    ebx
push    esi
xor     eax, eax
push    edi
cmp     [ecx+0ch], eax
mov     [ebp+var_10], esp
jz      short loc_41d3f4
mov     [ebp+var_14], eax
mov     [ebp+var_4], eax
call    dword ptr [ecx+0ch]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
leave
retn
mov     ecx, [ebp+var_18]
call    ?delete@cexception@@qaexxz
mov     eax, offset loc_41d3f1
retn
push    esi
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
push    0
mov     esi, eax
call    sub_422460
lea     ecx, [esi+1ch]
push    [esp+4+arg_0]
call    ?addhead@csimplelist@@qaexpax@z
push    0
call    ?afxunlockglobals@@ygxh@z
pop     esi
retn    4
push    1
call    ?afxmaphmenu@@yapavchandlemap@@h@z
mov     ecx, eax
push    [esp+arg_0]
call    ?fromhandle@chandlemap@@qaepavcobject@@pax@z
retn    4
push    0
call    ?afxmaphmenu@@yapavchandlemap@@h@z
mov     ecx, eax
xor     eax, eax
test    ecx, ecx
jz      short locret_41d4f2
push    [esp+arg_0]
add     ecx, 4
call    ?getvalueat@cmapptrtoptr@@qbepaxpax@z
retn    4
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, ecx
test    edi, edi
jnz     short loc_41d505
xor     eax, eax
jmp     short loc_41d51d
push    1
call    ?afxmaphmenu@@yapavchandlemap@@h@z
push    edi
lea     ecx, [eax+4]
mov     [esi+4], edi
call    sub_418ad9
push    1
mov     [eax], esi
pop     eax
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
push    edi
mov     edi, [esi+4]
test    edi, edi
jz      short loc_41d543
push    0
call    ?afxmaphmenu@@yapavchandlemap@@h@z
test    eax, eax
jz      short loc_41d543
push    dword ptr [esi+4]
lea     ecx, [eax+4]
call    sub_418b29
and     dword ptr [esi+4], 0
mov     eax, edi
pop     edi
pop     esi
retn
cmp     dword ptr [ecx+4], 0
jnz     short loc_41d555
xor     eax, eax
retn
call    sub_41d522
push    eax
call    ds:destroymenu
retn
mov     eax, offset loc_422d2c
call    __eh_prolog
sub     esp, 48h
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
lea     ecx, [ebp+var_50]
mov     [ebp+var_10], esp
mov     esi, [edi+4]
mov     [ebp+var_14], esi
call    sub_418f4c
xor     ebx, ebx
mov     [ebp+var_4], ebx
mov     byte ptr [ebp+var_4], 1
call    ?afxgetthreadstate@@ygpav_afx_thread_state@@xz
mov     ecx, [edi]
mov     ecx, [ecx+4]
mov     [eax+4], ecx
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
push    offset sub_4215d7
lea     ecx, [eax+1070h]
call    ?getdata@cthreadlocalobject@@qaepavcnotrackobject@@p6gpav2@xz@z
mov     [eax+4], esi
call    ?afxinitthread@@ygxxz
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
cmp     eax, ebx
jz      short loc_41d619
cmp     [esi+1ch], ebx
jnz     short loc_41d619
mov     eax, [eax+1ch]
cmp     eax, ebx
jz      short loc_41d619
cmp     [eax+1ch], ebx
jz      short loc_41d619
push    dword ptr [eax+1ch]
lea     ecx, [ebp+var_50]
call    sub_4193b2
lea     eax, [ebp+var_50]
mov     [esi+1ch], eax
jmp     short loc_41d619
lea     ecx, [ebp+var_50]
call    sub_4193eb
mov     eax, [ebp+arg_0]
push    dword ptr [eax+10h]
mov     dword ptr [eax+18h], 1
call    ds:setevent
push    0
push    0ffffffffh
call    sub_41d6a5
push    dword ptr [edi+10h]
and     [ebp+var_4], 0
mov     ebx, [edi+14h]
call    ds:setevent
push    0ffffffffh
push    ebx
call    ds:waitforsingleobject
push    ebx
call    ds:closehandle
mov     eax, [esi+50h]
test    eax, eax
jz      short loc_41d648
push    dword ptr [esi+4ch]
call    eax
pop     ecx
jmp     short loc_41d65f
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+50h]
test    eax, eax
mov     eax, [esi]
mov     ecx, esi
jnz     short loc_41d65c
call    dword ptr [eax+68h]
jmp     short loc_41d65f
call    dword ptr [eax+54h]
lea     ecx, [ebp+var_50]
mov     esi, eax
call    sub_4193eb
push    1
push    esi
call    sub_41d6a5
push    esi
push    edi
call    ?afxgetmodulethreadstate@@ygpavafx_module_thread_state@@xz
mov     edi, eax
mov     esi, [edi+4]
test    esi, esi
jz      short loc_41d6d4
mov     eax, [esi+54h]
test    eax, eax
jz      short loc_41d6c2
push    0
push    1
call    eax
cmp     [esp+8+arg_4], 0
jz      short loc_41d6d0
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+78h]
and     dword ptr [edi+4], 0
push    0
call    sub_41d749
push    [esp+8+returncode]
call    __endthreadex
pop     ecx
pop     edi
pop     esi
retn    8
push    esi
call    ?afxlocktempmaps@@ygxxz
push    0ffffffffh
call    sub_41ea14
cmp     [esp+4+arg_0], 0
jnz     short loc_41d794
mov     ecx, offset dword_44a8d4
call    ?getdatana@cthreadlocalobject@@qaepavcnotrackobject@@xz
mov     esi, eax
test    esi, esi
jz      short loc_41d794
mov     ecx, [esi+0cch]
test    ecx, ecx
jz      short loc_41d794
mov     eax, [ecx]
call    dword ptr [eax+58h]
mov     ecx, [esi+0cch]
test    ecx, ecx
jz      short loc_41d78d
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
and     dword ptr [esi+0cch], 0
mov     ecx, dword_44aa54
pop     esi
test    ecx, ecx
jz      short locret_41d7aa
push    0
push    [esp+4+arg_0]
call    ?deletevalues@cthreadslotdata@@qaexpauhinstance__@@h@z
retn    4
cmp     dword ptr [ecx+24h], 0
jz      short locret_41d8a0
test    ecx, ecx
jz      short locret_41d8a0
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
retn
push    ecx
push    ebx
push    ebp
push    esi
push    edi
push    1
xor     ebx, ebx
mov     esi, ecx
pop     edi
mov     [esp+14h+var_4], ebx
cmp     edi, ebx
jz      short loc_41d8e1
lea     ebp, [esi+30h]
push    ebx
push    ebx
push    ebx
push    ebx
push    ebp
call    ds:peekmessagea
test    eax, eax
jnz     short loc_41d8e1
mov     eax, [esp+14h+var_4]
mov     edx, [esi]
inc     [esp+14h+var_4]
push    eax
mov     ecx, esi
call    dword ptr [edx+60h]
test    eax, eax
jnz     short loc_41d8dd
xor     edi, edi
cmp     edi, ebx
jnz     short loc_41d8b8
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+5ch]
test    eax, eax
jz      short loc_41d913
mov     eax, [esi]
lea     ebp, [esi+30h]
push    ebp
mov     ecx, esi
call    dword ptr [eax+64h]
test    eax, eax
jz      short loc_41d902
push    1
mov     [esp+18h+var_4], ebx
pop     edi
push    ebx
push    ebx
push    ebx
push    ebx
push    ebp
call    ds:peekmessagea
test    eax, eax
jnz     short loc_41d8e1
jmp     short loc_41d8b1
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+68h]
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
mov     eax, [esp+arg_0]
push    esi
push    edi
mov     esi, [eax+4]
cmp     esi, 200h
jz      short loc_41d94a
cmp     esi, 0a0h
jz      short loc_41d94a
cmp     esi, 0fh
jz      short loc_41d946
cmp     esi, 118h
jnz     short loc_41d971
xor     eax, eax
jmp     short loc_41d974
mov     edx, [eax+14h]
mov     edi, [eax+18h]
cmp     [ecx+5ch], edx
jnz     short loc_41d95f
cmp     [ecx+60h], edi
jnz     short loc_41d95f
cmp     esi, [ecx+64h]
jz      short loc_41d946
mov     edx, [eax+14h]
mov     esi, [eax+18h]
mov     [ecx+5ch], edx
mov     [ecx+60h], esi
mov     eax, [eax+4]
mov     [ecx+64h], eax
push    1
pop     eax
pop     edi
pop     esi
retn    4
mov     eax, [ecx+38h]
retn
push    ecx
mov     eax, [ecx]
push    ebx
push    ebp
push    esi
push    edi
mov     [esp+14h+var_4], ecx
call    dword ptr [eax+28h]
mov     esi, eax
xor     ebp, ebp
cmp     esi, ebp
jz      short loc_41daf9
mov     ebx, [esp+14h+arg_0]
mov     edi, 0c000h
mov     eax, [ebx+4]
cmp     eax, edi
jnb     short loc_41dac5
push    ebp
push    ebp
push    eax
push    dword ptr [esi+4]
call    unknown_libname_15
cmp     eax, ebp
jnz     short loc_41dae7
mov     esi, [esi]
cmp     esi, ebp
jnz     short loc_41daa7
jmp     short loc_41daf9
mov     eax, [esi+4]
push    ebp
push    ebp
push    edi
push    eax
call    unknown_libname_15
cmp     eax, ebp
jz      short loc_41dabd
mov     ecx, [eax+10h]
mov     ecx, [ecx]
cmp     ecx, [ebx+4]
jz      short loc_41dae7
push    ebp
push    ebp
push    edi
add     eax, 18h
jmp     short loc_41dacb
push    dword ptr [ebx+0ch]
mov     ecx, [esp+18h+var_4]
push    dword ptr [ebx+8]
call    dword ptr [eax+14h]
push    1
pop     eax
jmp     short loc_41dafb
xor     eax, eax
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn    4
push    esi
push    edi
mov     edi, [esp+8+arg_0]
cmp     dword ptr [edi], 0
jnz     short loc_41db18
push    edi
call    sub_41da88
test    eax, eax
jnz     short loc_41db31
call    sub_4079ca
mov     esi, eax
test    esi, esi
jz      short loc_41db26
mov     eax, [esi+1ch]
push    edi
push    eax
call    sub_41ab20
test    eax, eax
jz      short loc_41db36
push    1
pop     eax
jmp     short loc_41db5b
test    esi, esi
jz      short loc_41db59
push    dword ptr [edi]
call    sub_41936d
mov     ecx, eax
call    sub_41a964
cmp     eax, esi
jz      short loc_41db59
mov     eax, [esi]
push    edi
mov     ecx, esi
call    dword ptr [eax+90h]
jmp     short loc_41db5b
xor     eax, eax
pop     edi
pop     esi
retn    4
push    ebp
mov     ebp, esp
sub     esp, 20h
push    ebx
push    esi
mov     esi, [ebp+arg_4]
xor     ebx, ebx
cmp     esi, ebx
push    edi
mov     [ebp+var_4], ecx
jz      loc_41dd69
mov     eax, [ebp+arg_0]
sub     eax, ebx
jz      short loc_41dcbd
dec     eax
dec     eax
jz      short loc_41dc56
sub     eax, 7fffh
jmp     loc_41dd69
push    dword ptr [esi]
call    sub_41936d
cmp     eax, ebx
jz      short loc_41dcbd
mov     ecx, eax
call    sub_41a98c
mov     edi, eax
cmp     edi, ebx
jz      short loc_41dcbd
mov     ecx, edi
call    ?istracking@cframewnd@@qbehxz
test    eax, eax
jz      short loc_41dcbd
cmp     [edi+50h], ebx
jz      short loc_41dcbd
call    sub_4079ca
mov     ecx, [ebp+var_4]
cmp     [ecx+1ch], ebx
jz      short loc_41dcbd
mov     ecx, [esi+4]
cmp     ecx, 100h
jnz     short loc_41dc9c
cmp     dword ptr [esi+8], 0dh
jz      short loc_41dca4
cmp     ecx, 202h
jnz     short loc_41dcbd
push    ebx
push    0e146h
push    111h
push    dword ptr [eax+1ch]
call    ds:sendmessagea
jmp     loc_41dd5d
call    sub_4079ca
cmp     dword_44aaec, 333h
mov     edi, eax
jnb     short loc_41dcee
cmp     edi, ebx
jz      short loc_41dcee
push    esi
call    ?ishelpkey@@yghpautagmsg@@@z
test    eax, eax
jz      short loc_41dcee
push    ebx
push    0e146h
push    111h
push    dword ptr [edi+1ch]
jmp     short loc_41dcb2
cmp     [ebp+arg_0], ebx
jnz     short loc_41dd69
mov     eax, [ebp+var_4]
cmp     [eax+20h], ebx
jz      short loc_41dd69
mov     eax, [esi+4]
cmp     eax, 100h
jb      short loc_41dd69
cmp     eax, 108h
ja      short loc_41dd69
push    offset ?createobject@?$cthreadlocal@v_afx_thread_state@@@@sgpavcnotrackobject@@xz
mov     ecx, offset dword_44a8d4
call    ?getdata@cthreadlocalobject@@qaepavcnotrackobject@@p6gpav2@xz@z
mov     ebx, eax
cmp     dword ptr [ebx+0bch], 0
jnz     short loc_41dd69
push    7
lea     edi, [ebp+var_20]
pop     ecx
mov     dword ptr [ebx+0bch], 1
rep movsd
mov     esi, [ebp+var_4]
mov     ecx, [esi+20h]
call    sub_41bcfe
test    eax, eax
jz      short loc_41dd62
mov     eax, [esi]
lea     ecx, [ebp+var_20]
push    ecx
mov     ecx, esi
call    dword ptr [eax+58h]
test    eax, eax
jz      short loc_41dd62
and     dword ptr [ebx+0bch], 0
push    1
pop     eax
jmp     short loc_41dd6b
and     dword ptr [ebx+0bch], 0
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn    8
push    esi
mov     esi, ecx
xor     eax, eax
push    edi
push    eax
lea     edi, [esi+30h]
push    eax
push    eax
push    edi
call    ds:getmessagea
test    eax, eax
jz      short loc_41ddca
cmp     dword ptr [esi+34h], 36ah
jz      short loc_41ddc7
mov     eax, [esi]
push    edi
mov     ecx, esi
call    dword ptr [eax+58h]
test    eax, eax
jnz     short loc_41ddc7
push    edi
call    ds:translatemessage
push    edi
call    ds:dispatchmessagea
push    1
pop     eax
pop     edi
pop     esi
retn
mov     eax, offset off_4261f0
retn
push    esi
push    edi
mov     edi, ecx
call    sub_4079ca
mov     esi, eax
xor     eax, eax
push    eax
push    eax
push    36ah
mov     [edi+84h], eax
push    dword ptr [esi+1ch]
call    ds:postmessagea
push    [esp+8+arg_4]
mov     eax, [esi]
mov     ecx, esi
push    [esp+0ch+arg_0]
call    dword ptr [eax+6ch]
pop     edi
pop     esi
retn    8
mov     edx, [esp+arg_4]
push    esi
mov     eax, [edx+4]
mov     esi, eax
dec     esi
jz      short loc_41de95
sub     esi, 0eh
jz      short loc_41de95
push    ebx
xor     ebx, ebx
push    edi
cmp     eax, 111h
mov     edi, 0f108h
jnz     short loc_41de57
cmp     [edx+0ch], ebx
jnz     short loc_41de54
inc     edi
push    1
pop     ebx
mov     esi, [esp+0ch+arg_0]
push    offset off_4263f8
mov     ecx, esi
call    ?iskindof@cobject@@qbehpbucruntimeclass@@@z
test    eax, eax
jz      short loc_41de75
mov     eax, [esi]
push    edi
push    1030h
jmp     short loc_41de8a
push    offset off_425628
mov     ecx, esi
call    ?iskindof@cobject@@qbehpbucruntimeclass@@@z
test    eax, eax
jnz     short loc_41de8f
mov     eax, [esi]
push    edi
push    10h
mov     ecx, esi
call    dword ptr [eax+10h]
mov     eax, ebx
pop     edi
pop     ebx
jmp     short loc_41de9f
push    edx
push    [esp+8+arg_0]
call    unknown_libname_22
pop     esi
retn    8
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
test    edi, edi
jg      short loc_41def2
push    edi
call    ?onidle@cwinthread@@uaehj@z
mov     ecx, [esi+80h]
and     [ebp+arg_0], 0
test    ecx, ecx
jz      short loc_41deff
mov     eax, [ecx]
call    dword ptr [eax+10h]
test    eax, eax
mov     [ebp+arg_0], eax
jz      short loc_41deff
mov     ecx, [esi+80h]
lea     edx, [ebp+arg_0]
push    edx
mov     eax, [ecx]
call    dword ptr [eax+14h]
mov     edx, [eax]
mov     ecx, eax
call    dword ptr [edx+88h]
cmp     [ebp+arg_0], 0
jnz     short loc_41ded1
jmp     short loc_41deff
cmp     edi, 1
jnz     short loc_41deff
push    edi
mov     ecx, esi
call    ?onidle@cwinthread@@uaehj@z
xor     eax, eax
cmp     edi, 1
pop     edi
pop     esi
setl    al
pop     ebp
retn    4
mov     eax, ecx
mov     ecx, off_42b8a0
mov     [eax+0ch], ecx
or      dword ptr [eax+4], 0ffffffffh
and     dword ptr [eax+8], 0
mov     dword ptr [eax], offset ??_7cfile@@6b@
retn
push    esi
mov     esi, ecx
call    ??1cfile@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_41dfea
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, ecx
mov     ecx, off_42b8a0
mov     [eax+0ch], ecx
mov     ecx, [esp+arg_0]
and     dword ptr [eax+8], 0
mov     dword ptr [eax], offset ??_7cfile@@6b@
mov     [eax+4], ecx
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    edi
mov     ebx, ecx
push    10h
call    sub_41c2f2
test    eax, eax
pop     ecx
jz      short loc_41e078
push    0ffffffffh
mov     ecx, eax
call    sub_41dff0
mov     edi, eax
jmp     short loc_41e07a
xor     edi, edi
push    esi
mov     esi, ds:getcurrentprocess
push    2
push    0
lea     eax, [ebp+targethandle]
push    0
push    eax
call    esi
push    eax
push    dword ptr [ebx+4]
call    esi
push    eax
call    ds:duplicatehandle
test    eax, eax
pop     esi
jnz     short loc_41e0ba
test    edi, edi
jz      short loc_41e0ac
mov     eax, [edi]
push    1
mov     ecx, edi
call    dword ptr [eax+4]
push    0
call    ds:getlasterror
push    eax
call    unknown_libname_23
mov     eax, [ebp+targethandle]
mov     [edi+4], eax
mov     eax, [ebx+8]
mov     [edi+8], eax
mov     eax, edi
pop     edi
pop     ebx
leave
retn
push    0
push    [esp+4+nnumberofbytestolocklow]
push    0
push    [esp+0ch+dwfileoffsetlow]
push    dword ptr [ecx+4]
call    ds:lockfile
test    eax, eax
jnz     short locret_41e36e
push    eax
call    ds:getlasterror
push    eax
call    unknown_libname_23
retn    8
push    0
push    [esp+4+nnumberofbytestounlocklow]
push    0
push    [esp+0ch+dwfileoffsetlow]
push    dword ptr [ecx+4]
call    ds:unlockfile
test    eax, eax
jnz     short locret_41e397
push    eax
call    ds:getlasterror
push    eax
call    unknown_libname_23
retn    8
push    esi
mov     esi, ecx
push    0
mov     eax, [esi]
push    [esp+8+arg_0]
call    dword ptr [eax+28h]
push    dword ptr [esi+4]
call    ds:setendoffile
test    eax, eax
pop     esi
jnz     short locret_41e3c3
push    eax
call    ds:getlasterror
push    eax
call    unknown_libname_23
retn    4
push    ebx
push    esi
mov     esi, ecx
push    edi
push    1
push    0
mov     eax, [esi]
call    dword ptr [eax+28h]
mov     edi, eax
mov     eax, [esi]
push    2
push    0
mov     ecx, esi
call    dword ptr [eax+28h]
mov     ebx, eax
mov     eax, [esi]
push    0
push    edi
mov     ecx, esi
call    dword ptr [eax+28h]
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
retn
xor     eax, eax
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 204h
mov     eax, [ecx]
lea     edx, [ebp+var_4]
push    edx
lea     edx, [ebp+text]
push    200h
push    edx
call    dword ptr [eax+0ch]
test    eax, eax
jz      short loc_41e642
push    [ebp+var_4]
lea     eax, [ebp+text]
push    [ebp+utype]
push    eax
call    sub_4205e1
jmp     short locret_41e65d
cmp     [ebp+arg_4], 0
jnz     short loc_41e64f
mov     [ebp+arg_4], 0f020h
push    [ebp+var_4]
push    [ebp+utype]
push    [ebp+arg_4]
call    sub_420619
leave
retn    8
mov     eax, offset loc_422df4
call    __eh_prolog
push    ecx
mov     eax, [ebp+arg_8]
push    esi
push    edi
mov     esi, ecx
test    eax, eax
mov     edi, 0f1a0h
jz      short loc_41e6a4
mov     ecx, [esi+8]
add     ecx, edi
mov     [eax], ecx
mov     eax, off_42b8a0
mov     [ebp+lpstring2], eax
and     [ebp+var_4], 0
lea     eax, [esi+10h]
push    eax
lea     ecx, [ebp+arg_8]
call    sub_41c326
mov     eax, [ebp+arg_8]
mov     byte ptr [ebp+var_4], 1
cmp     dword ptr [eax-8], 0
jnz     short loc_41e6d6
push    0f006h
lea     ecx, [ebp+arg_8]
call    ?loadstringa@cstring@@qaehi@z
mov     eax, [esi+8]
push    [ebp+arg_8]
add     eax, edi
push    eax
lea     eax, [ebp+lpstring2]
push    eax
call    sub_4209a0
push    [ebp+imaxlength]
push    [ebp+lpstring2]
push    [ebp+lpstring1]
call    ds:lstrcpyna
and     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+arg_8]
call    sub_41c5b1
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+lpstring2]
call    sub_41c5b1
mov     ecx, [ebp+var_c]
push    1
pop     eax
pop     edi
pop     esi
mov     large fs:0, ecx
leave
retn    0ch
mov     eax, offset loc_422e1c
call    __eh_prolog
push    ecx
push    ecx
push    esi
push    14h
call    sub_41c2f2
mov     esi, eax
pop     ecx
mov     [ebp+block], esi
and     [ebp+var_4], 0
test    esi, esi
jz      short loc_41e775
mov     ecx, esi
call    ??0cexception@@qae@xz
mov     eax, off_42b8a0
lea     ecx, [esi+10h]
mov     [ecx], eax
mov     eax, [ebp+arg_0]
push    [ebp+lpstring]
mov     [esi+8], eax
mov     eax, [ebp+arg_4]
mov     byte ptr [ebp+var_4], 2
mov     dword ptr [esi], offset ??_7cfileexception@@6b@
mov     [esi+0ch], eax
call    ??4cstring@@qaeabv0@pbd@z
jmp     short loc_41e777
xor     esi, esi
or      [ebp+var_4], 0ffffffffh
lea     eax, [ebp+pexceptionobject]
push    offset __ti4pavcfileexception@@
push    eax
mov     [ebp+pexceptionobject], esi
call    __cxxthrowexception@8
pop     esi
mov     eax, [esp+arg_0]
mov     ecx, 10bh
cmp     eax, ecx
ja      loc_41e95b
jz      loc_41e843
cmp     eax, 3eh
ja      loc_41e84b
jz      loc_41e847
cmp     eax, 19h
ja      short loc_41e7df
jz      short loc_41e80c
cmp     eax, 18h
ja      def_41e7c3
jmp     ds:jpt_41e7c3[eax*4]
xor     eax, eax
jmp     locret_41e88f
push    4
jmp     loc_41e88e
push    2
jmp     loc_41e88e
cmp     eax, 27h
ja      short loc_41e830
jz      loc_41e8c7
cmp     eax, 20h
ja      short loc_41e814
jz      short loc_41e810
sub     eax, 1ah
jz      loc_41e8c3
dec     eax
jz      short loc_41e80c
dec     eax
dec     eax
jz      loc_41e892
dec     eax
jnz     def_41e7c3
push    9
jmp     short loc_41e88e
push    0bh
jmp     short loc_41e88e
sub     eax, 21h
jz      loc_41e923
dec     eax
jz      short loc_41e843
dec     eax
dec     eax
jz      short loc_41e7d1
dec     eax
dec     eax
jnz     def_41e7c3
push    0eh
jmp     short loc_41e88e
add     eax, 0ffffffcch
cmp     eax, 8
ja      def_41e7c3
jmp     ds:jpt_41e83c[eax*4]
push    3
jmp     short loc_41e88e
push    8
jmp     short loc_41e88e
cmp     eax, 6bh
ja      short loc_41e896
jz      short loc_41e7d8
cmp     eax, 47h
ja      short loc_41e873
jz      short loc_41e892
sub     eax, 40h
jz      short loc_41e892
dec     eax
jz      short loc_41e892
dec     eax
jz      short loc_41e8c3
dec     eax
jz      short loc_41e843
dec     eax
jz      loc_41e7d1
jmp     loc_41e952
sub     eax, 50h
jz      short loc_41e892
dec     eax
dec     eax
jz      short loc_41e892
sub     eax, 3
jz      short loc_41e843
dec     eax
jz      short loc_41e892
dec     eax
dec     eax
jnz     def_41e7c3
push    0ah
pop     eax
retn    4
push    5
jmp     short loc_41e88e
mov     ecx, 90h
cmp     eax, ecx
ja      short loc_41e8f0
jz      short loc_41e843
cmp     eax, 75h
ja      short loc_41e8cb
jz      short loc_41e88c
sub     eax, 6ch
jz      short loc_41e923
sub     eax, 3
jz      short loc_41e843
dec     eax
jz      short loc_41e8c7
dec     eax
jz      loc_41e7d1
dec     eax
jnz     def_41e7c3
push    6
jmp     short loc_41e88e
push    0dh
jmp     short loc_41e88e
sub     eax, 7bh
jz      loc_41e843
dec     eax
jz      loc_41e843
dec     eax
jz      loc_41e843
sub     eax, 6
jz      loc_41e80c
jmp     loc_41e805
mov     ecx, 0b6h
cmp     eax, ecx
ja      short loc_41e931
jz      short loc_41e8c3
sub     eax, 91h
jz      short loc_41e92a
sub     eax, 9
jz      loc_41e843
sub     eax, 7
jz      loc_41e843
sub     eax, 6
jz      short loc_41e923
sub     eax, 3
jnz     short def_41e7c3
jmp     loc_41e892
push    0ch
jmp     loc_41e88e
push    7
jmp     loc_41e88e
sub     eax, 0b7h
jz      loc_41e892
sub     eax, 8
jz      short loc_41e8c3
dec     eax
dec     eax
jz      loc_41e8c3
sub     eax, 0dh
jz      loc_41e843
dec     eax
dec     eax
jnz     short def_41e7c3
jmp     loc_41e843
sub     eax, 3e3h
jz      loc_41e88c
dec     eax
jz      loc_41e88c
dec     eax
jz      loc_41e88c
dec     eax
dec     eax
jz      loc_41e892
push    1
jmp     loc_41e88e
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
call    ?afxgetmodulethreadstate@@ygpavafx_module_thread_state@@xz
mov     ebx, eax
xor     esi, esi
mov     eax, [ebx+10h]
cmp     eax, esi
jz      loc_41eaff
dec     eax
cmp     eax, esi
mov     [ebx+10h], eax
jnz     loc_41eaff
cmp     [ebp+size], esi
jz      short loc_41ea81
cmp     [ebp+size], 0ffffffffh
jz      short loc_41ea59
call    ?afxgetthread@@ygpavcwinthread@@xz
cmp     eax, esi
jz      short loc_41ea59
mov     eax, [eax+54h]
cmp     eax, esi
jz      short loc_41ea59
push    esi
push    esi
call    eax
mov     ecx, [ebx+20h]
call    sub_41ec32
mov     ecx, [ebx+1ch]
call    sub_41ec32
mov     ecx, [ebx+18h]
call    sub_41ec32
mov     ecx, [ebx+14h]
call    sub_41ec32
mov     ecx, [ebx+24h]
call    sub_41ec32
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     edi, [eax+4]
push    offset ?createobject@?$cthreadlocal@v_afx_thread_state@@@@sgpavcnotrackobject@@xz
mov     ecx, offset dword_44a8d4
call    ?getdata@cthreadlocalobject@@qaepavcnotrackobject@@p6gpav2@xz@z
test    edi, edi
mov     esi, eax
jz      short loc_41eaff
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_41eab4
push    eax
call    __msize
cmp     eax, [edi+0b8h]
pop     ecx
jnb     short loc_41eaff
cmp     dword ptr [edi+0b8h], 0
jz      short loc_41eaff
mov     eax, [esi+0ch]
and     [ebp+size], 0
test    eax, eax
jz      short loc_41eadb
push    eax
call    __msize
push    dword ptr [esi+0ch]
mov     [ebp+size], eax
call    _free
pop     ecx
pop     ecx
push    dword ptr [edi+0b8h]
call    _malloc
test    eax, eax
pop     ecx
mov     [esi+0ch], eax
jnz     short loc_41eaff
cmp     [ebp+size], eax
jz      short loc_41eaff
push    [ebp+size]
call    _malloc
pop     ecx
mov     [esi+0ch], eax
xor     eax, eax
pop     edi
cmp     [ebx+10h], eax
pop     esi
pop     ebx
setnz   al
pop     ebp
retn    4
mov     eax, offset loc_422e4a
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
push    edi
push    0ah
lea     ecx, [esi+4]
mov     [ebp+var_10], esi
call    sub_418977
and     [ebp+var_4], 0
lea     edi, [esi+20h]
push    4
mov     ecx, edi
call    sub_418977
push    0
push    7
mov     ecx, edi
mov     byte ptr [ebp+var_4], 1
mov     dword ptr [esi], offset ??_7chandlemap@@6b@
call    sub_418c20
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     [esi+3ch], eax
mov     eax, [ebp+arg_4]
mov     [esi+40h], eax
mov     eax, [ebp+arg_8]
mov     [esi+44h], eax
mov     eax, esi
pop     edi
pop     esi
mov     large fs:0, ecx
leave
retn    0ch
mov     eax, [esp+arg_0]
cmp     word ptr [eax+2], 0ffffh
jnz     short loc_41ede7
add     eax, 1ah
jmp     short loc_41edea
add     eax, 12h
mov     cx, [eax]
push    2
cmp     cx, 0ffffh
pop     edx
jnz     short loc_41ee09
add     eax, 4
mov     cx, [eax]
cmp     cx, 0ffffh
jnz     short loc_41ee15
add     eax, 4
jmp     short loc_41ee21
add     eax, edx
test    cx, cx
jz      short loc_41edfa
mov     cx, [eax]
jmp     short loc_41ee09
add     eax, edx
test    cx, cx
jz      short loc_41ee21
mov     cx, [eax]
jmp     short loc_41ee15
mov     cx, [eax]
add     eax, edx
test    cx, cx
jnz     short loc_41ee21
retn
push    ebx
mov     ebx, [esp+4+arg_0]
xor     eax, eax
push    esi
cmp     word ptr [ebx+2], 0ffffh
push    ebx
setz    al
mov     esi, eax
call    sub_41edd6
cmp     word ptr [ebx+2], 0ffffh
pop     ecx
jnz     short loc_41ee53
mov     ecx, [ebx+0ch]
jmp     short loc_41ee55
mov     ecx, [ebx]
test    cl, 40h
jz      short loc_41ee74
mov     ecx, esi
push    edi
neg     ecx
sbb     ecx, ecx
and     ecx, 2
inc     ecx
lea     edi, [eax+ecx*2]
push    edi
call    _wcslen
pop     ecx
lea     eax, [edi+eax*2+2]
pop     edi
test    esi, esi
jz      short loc_41ee7e
mov     cx, [ebx+10h]
jmp     short loc_41ee82
mov     cx, [ebx+8]
test    cx, cx
jbe     short loc_41eedf
neg     esi
sbb     esi, esi
and     esi, 6
add     esi, 12h
movzx   edx, cx
add     eax, 3
and     al, 0fch
add     eax, esi
mov     cx, [eax]
cmp     cx, 0ffffh
jnz     short loc_41eeb7
add     eax, 4
mov     cx, [eax]
cmp     cx, 0ffffh
jnz     short loc_41eec6
add     eax, 4
jmp     short loc_41eed5
add     eax, 2
test    cx, cx
jz      short loc_41eea8
mov     cx, [eax]
inc     eax
inc     eax
jmp     short loc_41eeba
add     eax, 2
test    cx, cx
jz      short loc_41eed5
mov     cx, [eax]
inc     eax
inc     eax
jmp     short loc_41eec9
movzx   ecx, word ptr [eax]
dec     edx
lea     eax, [eax+ecx+2]
jnz     short loc_41ee94
sub     eax, ebx
pop     esi
pop     ebx
retn
push    ebp
mov     ebp, esp
sub     esp, 50h
push    edi
xor     edi, edi
cmp     [ecx+4], edi
mov     [ebp+var_8], ecx
jnz     short loc_41ef6b
xor     eax, eax
jmp     loc_41f068
push    ebx
push    esi
push    dword ptr [ecx]
call    ds:globallock
mov     ebx, eax
xor     ecx, ecx
mov     ax, [ebx+2]
cmp     ax, 0ffffh
setz    cl
cmp     ax, 0ffffh
mov     [ebp+var_4], ecx
jnz     short loc_41ef92
mov     eax, [ebx+0ch]
jmp     short loc_41ef94
mov     eax, [ebx]
mov     esi, [ebp+var_4]
and     eax, 40h
neg     esi
sbb     esi, esi
mov     [ebp+var_c], eax
and     esi, 2
inc     esi
shl     esi, 1
cmp     [ebp+var_4], edi
jz      short loc_41efb2
or      dword ptr [ebx+0ch], 40h
jmp     short loc_41efb5
or      dword ptr [ebx], 40h
lea     eax, [ebp+widecharstr]
push    20h
push    eax
push    0ffffffffh
push    [ebp+lpmultibytestr]
push    edi
push    edi
call    ds:multibytetowidechar
lea     eax, [esi+eax*2]
push    ebx
mov     [ebp+lpmultibytestr], eax
call    sub_41edd6
pop     ecx
mov     edi, eax
xor     ecx, ecx
mov     [ebp+var_10], edi
cmp     [ebp+var_c], ecx
jz      short loc_41efef
lea     eax, [edi+esi]
push    eax
call    _wcslen
pop     ecx
lea     ecx, [esi+eax*2+2]
mov     edx, [ebp+lpmultibytestr]
lea     eax, [ecx+edi+3]
and     al, 0fch
lea     edi, [edi+edx+3]
mov     [ebp+var_c], eax
and     edi, 0fffffffch
cmp     [ebp+var_4], 0
jz      short loc_41f00e
mov     dx, [ebx+10h]
jmp     short loc_41f012
mov     dx, [ebx+8]
cmp     [ebp+lpmultibytestr], ecx
jz      short loc_41f02f
test    dx, dx
jbe     short loc_41f02f
mov     ecx, [ebp+var_8]
sub     ebx, eax
add     ebx, [ecx+4]
push    ebx
push    eax
push    edi
call    _memcpy_0
add     esp, 0ch
mov     eax, [ebp+lpmultibytestr]
mov     ecx, [ebp+var_10]
mov     dx, [ebp+arg_4]
sub     eax, esi
push    eax
mov     [ecx], dx
lea     eax, [ebp+widecharstr]
add     ecx, esi
push    eax
push    ecx
call    _memcpy_0
mov     esi, [ebp+var_8]
sub     edi, [ebp+var_c]
add     esp, 0ch
push    dword ptr [esi]
add     [esi+4], edi
call    ds:globalunlock
and     dword ptr [esi+8], 0
push    1
pop     eax
pop     esi
pop     ebx
pop     edi
leave
retn    8
mov     eax, offset loc_422f1b
call    __eh_prolog
sub     esp, 120h
and     [ebp+var_14], 0
lea     eax, [ebp+var_12c]
push    esi
push    eax
call    ?getstatus@cfile@@qbehaaucfilestatus@@@z
mov     eax, off_42b8a0
mov     [ebp+var_10], eax
push    1
mov     eax, 100h
pop     esi
lea     ecx, [ebp+var_10]
push    eax
push    eax
mov     [ebp+var_4], esi
call    sub_41c8ad
push    eax
lea     eax, [ebp+string]
push    eax
call    ?afxgetfilename@@ygipbdpadi@z
push    0ffffffffh
lea     ecx, [ebp+var_10]
call    ?releasebuffer@cstring@@qaexh@z
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+var_10]
push    eax
call    sub_41c326
mov     [ebp+var_14], esi
and     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+var_10]
call    sub_41c5b1
mov     ecx, [ebp+var_c]
mov     eax, [ebp+arg_0]
pop     esi
mov     large fs:0, ecx
leave
retn    4
mov     eax, offset loc_422f47
call    __eh_prolog
sub     esp, 120h
and     [ebp+var_14], 0
lea     eax, [ebp+var_12c]
push    esi
push    eax
call    ?getstatus@cfile@@qbehaaucfilestatus@@@z
mov     eax, off_42b8a0
mov     [ebp+var_10], eax
push    1
mov     eax, 100h
pop     esi
lea     ecx, [ebp+var_10]
push    eax
push    eax
mov     [ebp+var_4], esi
call    sub_41c8ad
push    eax
lea     eax, [ebp+string]
push    eax
call    ?afxgetfiletitle@@ygipbdpadi@z
push    0ffffffffh
lea     ecx, [ebp+var_10]
call    ?releasebuffer@cstring@@qaexh@z
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+var_10]
push    eax
call    sub_41c326
mov     [ebp+var_14], esi
and     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+var_10]
call    sub_41c5b1
mov     ecx, [ebp+var_c]
mov     eax, [ebp+arg_0]
pop     esi
mov     large fs:0, ecx
leave
retn    4
push    ebx
push    esi
push    edi
or      ebx, 0ffffffffh
call    ?afxgetthread@@ygpavcwinthread@@xz
mov     esi, eax
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
push    [esp+0ch+arg_c]
mov     edi, [eax+4]
push    [esp+10h+arg_8]
push    [esp+14h+arg_4]
push    [esp+18h+arg_0]
call    sub_4225f2
test    eax, eax
jz      short loc_41f374
test    edi, edi
jz      short loc_41f34b
mov     eax, [edi]
mov     ecx, edi
call    dword ptr [eax+84h]
test    eax, eax
jz      short loc_41f374
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+50h]
test    eax, eax
jnz     short loc_41f36b
mov     ecx, [esi+1ch]
test    ecx, ecx
jz      short loc_41f362
mov     eax, [ecx]
call    dword ptr [eax+58h]
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+68h]
jmp     short loc_41f372
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+54h]
mov     ebx, eax
call    ?afxwinterm@@ygxxz
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
retn    10h
push    esi
mov     esi, ecx
call    sub_41f4b6
test    [esp+4+arg_0], 1
jz      short loc_41f3ab
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    1
call    ?afxmaphdc@@yapavchandlemap@@h@z
mov     ecx, eax
push    [esp+arg_0]
call    ?fromhandle@chandlemap@@qaepavcobject@@pax@z
retn    4
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, ecx
test    edi, edi
jnz     short loc_41f448
xor     eax, eax
jmp     short loc_41f46a
push    1
call    ?afxmaphdc@@yapavchandlemap@@h@z
push    edi
lea     ecx, [eax+4]
mov     [esi+4], edi
call    sub_418ad9
mov     [eax], esi
mov     eax, [esi]
push    dword ptr [esi+4]
mov     ecx, esi
call    dword ptr [eax+0ch]
push    1
pop     eax
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
push    edi
mov     edi, [esi+4]
test    edi, edi
jz      short loc_41f490
push    0
call    ?afxmaphdc@@yapavchandlemap@@h@z
test    eax, eax
jz      short loc_41f490
push    dword ptr [esi+4]
lea     ecx, [eax+4]
call    sub_418b29
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+14h]
and     dword ptr [esi+4], 0
mov     eax, edi
pop     edi
pop     esi
retn
cmp     dword ptr [ecx+4], 0
jnz     short loc_41f4a9
xor     eax, eax
retn
call    sub_41f46f
push    eax
call    ds:deletedc
retn
mov     eax, offset loc_422b14
call    __eh_prolog
push    ecx
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7cdc@@6b@
and     [ebp+var_4], 0
cmp     dword ptr [ecx+4], 0
jz      short loc_41f4e0
call    sub_41f46f
push    eax
call    ds:deletedc
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
push    edi
mov     edi, ds:savedc
mov     eax, [esi+8]
test    eax, eax
jz      short loc_41f523
push    eax
call    edi
mov     ebx, eax
mov     eax, [esi+4]
cmp     eax, [esi+8]
jz      short loc_41f535
push    eax
call    edi
test    eax, eax
jz      short loc_41f535
or      ebx, 0ffffffffh
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
retn
push    ebx
push    esi
push    edi
mov     esi, ecx
push    [esp+0ch+i]
call    ds:getstockobject
mov     ecx, [esi+4]
mov     edi, ds:selectobject
mov     ebx, eax
xor     eax, eax
cmp     ecx, [esi+8]
jz      short loc_41f5b5
push    ebx
push    ecx
call    edi
mov     esi, [esi+8]
test    esi, esi
jz      short loc_41f5c0
push    ebx
push    esi
call    edi
push    eax
call    sub_41fbaf
pop     edi
pop     esi
pop     ebx
retn    4
push    ebx
mov     ebx, [esp+4+arg_0]
push    esi
mov     esi, ecx
xor     eax, eax
push    edi
mov     ecx, [esi+4]
mov     edi, ds:selectobject
cmp     ecx, [esi+8]
jz      short loc_41f5f0
test    ebx, ebx
jz      short loc_41f5ec
mov     eax, [ebx+4]
push    eax
push    ecx
call    edi
mov     esi, [esi+8]
test    esi, esi
jz      short loc_41f606
test    ebx, ebx
jnz     short loc_41f5ff
xor     eax, eax
jmp     short loc_41f602
mov     eax, [ebx+4]
push    eax
push    esi
call    edi
push    eax
call    sub_41fbaf
pop     edi
pop     esi
pop     ebx
retn    4
push    esi
mov     esi, ecx
or      eax, 0ffffffffh
push    edi
mov     ecx, [esi+4]
mov     edi, ds:setbkcolor
cmp     ecx, [esi+8]
jz      short loc_41f650
push    [esp+8+color]
push    ecx
call    edi
mov     esi, [esi+8]
test    esi, esi
jz      short loc_41f65e
push    [esp+8+color]
push    esi
call    edi
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
xor     eax, eax
push    edi
mov     ecx, [esi+4]
mov     edi, ds:setbkmode
cmp     ecx, [esi+8]
jz      short loc_41f67e
push    [esp+8+mode]
push    ecx
call    edi
mov     esi, [esi+8]
test    esi, esi
jz      short loc_41f68c
push    [esp+8+mode]
push    esi
call    edi
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
or      eax, 0ffffffffh
push    edi
mov     ecx, [esi+4]
mov     edi, ds:settextcolor
cmp     ecx, [esi+8]
jz      short loc_41f6ad
push    [esp+8+color]
push    ecx
call    edi
mov     esi, [esi+8]
test    esi, esi
jz      short loc_41f6bb
push    [esp+8+color]
push    esi
call    edi
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
xor     eax, eax
push    edi
mov     ecx, [esi+4]
mov     edi, ds:setmapmode
cmp     ecx, [esi+8]
jz      short loc_41f6db
push    [esp+8+imode]
push    ecx
call    edi
mov     esi, [esi+8]
test    esi, esi
jz      short loc_41f6e9
push    [esp+8+imode]
push    esi
call    edi
pop     edi
pop     esi
retn    4
push    [esp+lprect]
push    dword ptr [ecx+4]
call    ds:getclipbox
retn    4
push    ebx
push    esi
mov     esi, ecx
or      ebx, 0ffffffffh
push    edi
mov     edi, ds:settextalign
mov     eax, [esi+4]
cmp     eax, [esi+8]
jz      short loc_41f97c
push    [esp+0ch+align]
push    eax
call    edi
mov     esi, [esi+8]
test    esi, esi
jz      short loc_41f98c
push    [esp+0ch+align]
push    esi
call    edi
mov     ebx, eax
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
retn    4
mov     eax, offset loc_422b28
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
call    ??0cdc@@qae@xz_0
mov     eax, [ebp+hwnd]
and     [ebp+var_4], 0
test    eax, eax
mov     dword ptr [esi], offset ??_7cclientdc@@6b@
jz      short loc_41f9fa
mov     eax, [eax+1ch]
push    eax
mov     [esi+10h], eax
call    ds:getdc
push    eax
mov     ecx, esi
call    sub_41f438
test    eax, eax
jnz     short loc_41fa15
call    sub_41fc31
mov     ecx, [ebp+var_c]
mov     eax, esi
pop     esi
mov     large fs:0, ecx
leave
retn    4
push    esi
mov     esi, ecx
call    sub_41fa42
test    [esp+4+arg_0], 1
jz      short loc_41fa3c
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422b3c
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7cclientdc@@6b@
and     [ebp+var_4], 0
call    sub_41f46f
push    eax
push    dword ptr [esi+10h]
call    ds:releasedc
or      [ebp+var_4], 0ffffffffh
mov     ecx, esi
call    sub_41f4b6
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
push    esi
mov     esi, ecx
call    ??1cpaintdc@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_41faf0
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    1
call    ?afxmaphgdiobj@@yapavchandlemap@@h@z
mov     ecx, eax
push    [esp+arg_0]
call    ?fromhandle@chandlemap@@qaepavcobject@@pax@z
retn    4
push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, ecx
test    edi, edi
jnz     short loc_41fbd4
xor     eax, eax
jmp     short loc_41fbec
push    1
call    ?afxmaphgdiobj@@yapavchandlemap@@h@z
push    edi
lea     ecx, [eax+4]
mov     [esi+4], edi
call    sub_418ad9
push    1
mov     [eax], esi
pop     eax
pop     edi
pop     esi
retn    4
push    esi
mov     esi, ecx
push    edi
mov     edi, [esi+4]
test    edi, edi
jz      short loc_41fc12
push    0
call    ?afxmaphgdiobj@@yapavchandlemap@@h@z
test    eax, eax
jz      short loc_41fc12
push    dword ptr [esi+4]
lea     ecx, [eax+4]
call    sub_418b29
and     dword ptr [esi+4], 0
mov     eax, edi
pop     edi
pop     esi
retn
cmp     dword ptr [ecx+4], 0
jnz     short loc_41fc24
xor     eax, eax
retn
call    sub_41fbf1
push    eax
call    ds:deleteobject
retn
push    ebp
mov     ebp, esp
push    ecx
lea     eax, [ebp+pexceptionobject]
push    offset __ti5pavcresourceexception@@
push    eax
mov     [ebp+pexceptionobject], offset dword_44a7e0
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
mov     eax, 0ffh
mov     ecx, [esi]
mov     edx, [ecx-8]
cmp     edx, eax
jge     short loc_41fc7f
mov     ecx, [ebp+arg_0]
mov     al, dl
push    eax
call    ??6carchive@@qaeaav0@e@z
jmp     short loc_41fcc0
mov     ecx, [ebp+arg_0]
cmp     edx, 0fffeh
push    eax
jge     short loc_41fca1
call    ??6carchive@@qaeaav0@e@z
mov     eax, [esi]
mov     ecx, [ebp+arg_0]
mov     ax, [eax-8]
push    eax
call    ??6carchive@@qaeaav0@g@z
jmp     short loc_41fcc0
call    ??6carchive@@qaeaav0@e@z
mov     ecx, [ebp+arg_0]
push    0ffffh
call    ??6carchive@@qaeaav0@g@z
mov     eax, [esi]
mov     ecx, [ebp+arg_0]
push    dword ptr [eax-8]
call    sub_40e159
mov     esi, [esi]
mov     ecx, [ebp+arg_0]
push    dword ptr [esi-8]
push    esi
call    ?write@carchive@@qaexpbxi@z
mov     eax, [ebp+arg_0]
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
xor     ebx, ebx
push    [ebp+arg_0]
call    ?readstringlength@@ygiaavcarchive@@@z
cmp     eax, 0ffffffffh
mov     [ebp+var_4], eax
jnz     short loc_41fd54
push    1
pop     ebx
push    [ebp+arg_0]
call    ?readstringlength@@ygiaavcarchive@@@z
mov     [ebp+var_4], eax
lea     esi, [ebx+1]
imul    esi, [ebp+var_4]
cmp     [ebp+var_4], 0
jnz     short loc_41fd6d
mov     ecx, [ebp+arg_4]
push    0
call    ?getbuffersetlength@cstring@@qaepadh@z
jmp     short loc_41fdbb
mov     edi, [ebp+arg_4]
lea     eax, [esi+ebx]
push    eax
mov     ecx, edi
call    ?getbuffersetlength@cstring@@qaepadh@z
mov     ecx, [ebp+arg_0]
push    esi
push    dword ptr [edi]
call    sub_41fdc5
cmp     eax, esi
jz      short loc_41fd93
push    0
push    3
call    sub_420383
test    ebx, ebx
jz      short loc_41fdbb
mov     eax, [edi]
mov     ecx, [ebp+var_4]
push    eax
and     word ptr [eax+ecx*2], 0
mov     ecx, off_42b8a0
mov     [edi], ecx
mov     ecx, edi
lea     esi, [eax-0ch]
call    ??4cstring@@qaeabv0@pbg@z
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, [ebp+arg_0]
pop     edi
pop     esi
pop     ebx
leave
retn    8
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, ecx
test    ebx, ebx
jnz     short loc_41fddc
xor     eax, eax
jmp     loc_41fece
mov     eax, [esi+24h]
push    edi
mov     edi, [esi+28h]
sub     edi, eax
cmp     ebx, edi
jnb     short loc_41fdeb
mov     edi, ebx
push    edi
push    eax
push    [ebp+arg_0]
call    _memcpy
add     [esi+24h], edi
add     [ebp+arg_0], edi
add     esp, 0ch
sub     ebx, edi
jz      loc_41fec8
mov     eax, ebx
xor     edx, edx
div     dword ptr [esi+1ch]
mov     edi, ebx
sub     edi, edx
and     [ebp+var_8], 0
mov     [ebp+var_4], edi
mov     ecx, [esi+20h]
push    [ebp+var_4]
mov     eax, [ecx]
push    [ebp+arg_0]
call    dword ptr [eax+34h]
add     [ebp+arg_0], eax
add     [ebp+var_8], eax
sub     [ebp+var_4], eax
test    eax, eax
jbe     short loc_41fe39
cmp     [ebp+var_4], 0
ja      short loc_41fe18
sub     ebx, [ebp+var_8]
cmp     [ebp+var_8], edi
jnz     loc_41fec8
xor     edi, edi
cmp     [esi+8], edi
jnz     short loc_41fe91
mov     eax, [esi+1ch]
mov     [ebp+var_4], ebx
cmp     ebx, eax
ja      short loc_41fe59
mov     [ebp+var_4], eax
mov     eax, [esi+2ch]
mov     [ebp+var_8], eax
mov     ecx, [esi+20h]
push    [ebp+var_4]
mov     eax, [ecx]
push    [ebp+var_8]
call    dword ptr [eax+34h]
add     [ebp+var_8], eax
sub     [ebp+var_4], eax
add     edi, eax
test    eax, eax
jbe     short loc_41fe83
cmp     [ebp+var_4], 0
jbe     short loc_41fe83
cmp     edi, ebx
jb      short loc_41fe5f
mov     eax, [esi+2ch]
mov     [esi+24h], eax
lea     ecx, [eax+edi]
mov     [esi+28h], ecx
jmp     short loc_41feab
mov     ecx, [esi+20h]
lea     eax, [esi+28h]
lea     edi, [esi+2ch]
push    eax
mov     edx, [ecx]
push    edi
push    dword ptr [esi+1ch]
push    0
call    dword ptr [edx+50h]
mov     eax, [edi]
mov     [esi+24h], eax
mov     edi, [esi+28h]
sub     edi, eax
cmp     ebx, edi
jnb     short loc_41feb6
mov     edi, ebx
push    edi
push    eax
push    [ebp+arg_0]
call    _memcpy
add     [esi+24h], edi
add     esp, 0ch
sub     ebx, edi
mov     eax, [ebp+arg_4]
pop     edi
sub     eax, ebx
pop     esi
pop     ebx
leave
retn    8
push    esi
mov     esi, ecx
push    edi
test    byte ptr [esi+14h], 1
jz      short loc_41ff8d
mov     edx, [esi+28h]
mov     eax, [esi+24h]
cmp     edx, eax
jz      short loc_41ff85
mov     ecx, [esi+20h]
sub     eax, edx
push    1
push    eax
mov     edi, [ecx]
call    dword ptr [edi+28h]
mov     eax, [esi+28h]
mov     [esi+24h], eax
jmp     short loc_41ffdd
mov     eax, [esi+24h]
mov     edx, [esi+2ch]
push    ebx
xor     ebx, ebx
cmp     [esi+8], ebx
lea     edi, [esi+2ch]
jnz     short loc_41ffb0
cmp     eax, edx
jz      short loc_41ffd7
mov     ecx, [esi+20h]
sub     eax, edx
push    eax
push    edx
mov     ebx, [ecx]
call    dword ptr [ebx+38h]
jmp     short loc_41ffd7
cmp     eax, edx
jz      short loc_41ffc5
mov     ecx, [esi+20h]
push    ebp
push    ebx
sub     eax, edx
mov     ebp, [ecx]
push    ebx
push    eax
push    2
call    dword ptr [ebp+50h]
pop     ebp
mov     ecx, [esi+20h]
lea     edx, [esi+28h]
push    edx
push    edi
push    dword ptr [esi+1ch]
mov     eax, [ecx]
push    1
call    dword ptr [eax+50h]
mov     eax, [edi]
pop     ebx
mov     [esi+24h], eax
pop     edi
pop     esi
retn
xor     eax, eax
pop     esi
retn
mov     eax, offset loc_422f64
call    __eh_prolog
push    ecx
mov     eax, [ebp+arg_8]
push    esi
push    edi
mov     esi, ecx
test    eax, eax
mov     edi, 0f1b0h
jz      short loc_420305
mov     ecx, [esi+8]
add     ecx, edi
mov     [eax], ecx
mov     eax, off_42b8a0
mov     [ebp+lpstring2], eax
and     [ebp+var_4], 0
lea     eax, [esi+0ch]
push    eax
lea     ecx, [ebp+arg_8]
call    sub_41c326
mov     eax, [ebp+arg_8]
mov     byte ptr [ebp+var_4], 1
cmp     dword ptr [eax-8], 0
jnz     short loc_420337
push    0f006h
lea     ecx, [ebp+arg_8]
call    ?loadstringa@cstring@@qaehi@z
mov     eax, [esi+8]
push    [ebp+arg_8]
add     eax, edi
push    eax
lea     eax, [ebp+lpstring2]
push    eax
call    sub_4209a0
push    [ebp+imaxlength]
push    [ebp+lpstring2]
push    [ebp+lpstring1]
call    ds:lstrcpyna
and     byte ptr [ebp+var_4], 0
lea     ecx, [ebp+arg_8]
call    sub_41c5b1
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+lpstring2]
call    sub_41c5b1
mov     ecx, [ebp+var_c]
push    1
pop     eax
pop     edi
pop     esi
mov     large fs:0, ecx
leave
retn    0ch
mov     eax, offset loc_422f8c
call    __eh_prolog
push    ecx
push    ecx
push    esi
push    10h
call    sub_41c2f2
mov     esi, eax
pop     ecx
mov     [ebp+block], esi
and     [ebp+var_4], 0
test    esi, esi
jz      short loc_4203d0
mov     ecx, esi
call    ??0cexception@@qae@xz
mov     eax, off_42b8a0
lea     ecx, [esi+0ch]
mov     [ecx], eax
mov     eax, [ebp+arg_0]
push    [ebp+lpstring]
mov     byte ptr [ebp+var_4], 2
mov     dword ptr [esi], offset ??_7carchiveexception@@6b@
mov     [esi+8], eax
call    ??4cstring@@qaeabv0@pbd@z
jmp     short loc_4203d2
xor     esi, esi
or      [ebp+var_4], 0ffffffffh
lea     eax, [ebp+pexceptionobject]
push    offset __ti4pavcarchiveexception@@
push    eax
mov     [ebp+pexceptionobject], esi
call    __cxxthrowexception@8
pop     esi
push    esi
call    sub_4079ca
mov     esi, eax
test    esi, esi
jz      short loc_4204f6
mov     eax, [esi]
mov     ecx, esi
call    dword ptr [eax+0b0h]
test    eax, eax
jz      short loc_4204f6
mov     ecx, [esi+68h]
test    ecx, ecx
jz      short loc_4204f6
mov     eax, [ecx]
push    [esp+4+arg_0]
call    dword ptr [eax+64h]
pop     esi
retn    4
push    ebp
mov     ebp, esp
sub     esp, 114h
push    ebx
push    esi
push    edi
xor     ebx, ebx
mov     edi, ecx
push    ebx
mov     [ebp+var_10], edi
call    sub_4204cc
lea     eax, [ebp+hwnd]
push    eax
push    ebx
call    sub_420672
xor     esi, esi
cmp     eax, ebx
mov     [ebp+var_c], eax
jz      short loc_42053e
push    ebx
push    ebx
push    376h
push    [ebp+hwnd]
call    ds:sendmessagea
cmp     eax, ebx
jz      short loc_42053e
mov     esi, eax
jmp     short loc_420548
cmp     edi, ebx
jz      short loc_420548
lea     esi, [edi+9ch]
cmp     esi, ebx
mov     [ebp+var_8], ebx
jz      short loc_420562
mov     eax, [esi]
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_8]
cmp     eax, ebx
jz      short loc_420562
add     eax, 30000h
mov     [esi], eax
mov     ebx, [ebp+utype]
test    bl, 0f0h
jnz     short loc_420581
mov     eax, ebx
and     eax, 0fh
cmp     eax, 1
jbe     short loc_42057e
cmp     eax, 2
jbe     short loc_420581
cmp     eax, 4
ja      short loc_420581
or      ebx, 30h
test    edi, edi
jz      short loc_42058a
mov     edi, [edi+78h]
jmp     short loc_4205a4
lea     eax, [ebp+filename]
push    104h
push    eax
push    0
lea     edi, [ebp+filename]
call    ds:getmodulefilenamea
push    ebx
push    edi
push    [ebp+lptext]
push    [ebp+var_c]
call    ds:messageboxa
test    esi, esi
mov     edi, eax
jz      short loc_4205bd
mov     eax, [ebp+var_8]
mov     [esi], eax
cmp     [ebp+hwnd], 0
jz      short loc_4205ce
push    1
push    [ebp+hwnd]
call    ds:enablewindow
mov     ecx, [ebp+var_10]
push    1
call    sub_4204cc
mov     eax, edi
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
push    ebp
mov     ebp, esp
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
test    eax, eax
jz      short loc_420605
push    [ebp+arg_8]
mov     edx, [eax]
mov     ecx, eax
push    [ebp+utype]
push    [ebp+lptext]
call    dword ptr [edx+8ch]
jmp     short loc_420615
push    [ebp+arg_8]
xor     ecx, ecx
push    [ebp+utype]
push    [ebp+lptext]
call    sub_4204fa
pop     ebp
retn    0ch
mov     eax, offset loc_422ca8
call    __eh_prolog
push    ecx
mov     eax, off_42b8a0
mov     [ebp+lptext], eax
push    [ebp+arg_0]
and     [ebp+var_4], 0
lea     ecx, [ebp+lptext]
call    ?loadstringa@cstring@@qaehi@z
mov     eax, [ebp+arg_8]
cmp     eax, 0ffffffffh
jnz     short loc_420646
mov     eax, [ebp+arg_0]
push    esi
push    eax
push    [ebp+utype]
push    [ebp+lptext]
call    sub_4205e1
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+lptext]
mov     esi, eax
call    sub_41c5b1
mov     ecx, [ebp+var_c]
mov     eax, esi
pop     esi
mov     large fs:0, ecx
leave
retn    0ch
push    ebx
mov     ebx, ds:getparent
push    ebp
mov     ebp, [esp+8+hwnd]
push    esi
push    edi
test    ebp, ebp
mov     esi, ebp
jnz     short loc_4206eb
call    unknown_libname_26
test    eax, eax
jnz     short loc_4206e4
call    sub_4079ca
test    eax, eax
jnz     short loc_4206e4
xor     esi, esi
test    esi, esi
mov     edi, esi
mov     eax, esi
jz      short loc_4206ab
push    eax
mov     edi, eax
call    ebx
test    eax, eax
jnz     short loc_4206a2
test    ebp, ebp
jnz     short loc_4206bc
test    esi, esi
jz      short loc_4206bc
push    esi
call    ds:getlastactivepopup
mov     esi, eax
mov     ebx, [esp+10h+arg_4]
test    ebx, ebx
jz      short loc_420705
test    edi, edi
jz      short loc_420702
push    edi
call    ds:iswindowenabled
test    eax, eax
jz      short loc_420702
cmp     edi, esi
jz      short loc_420702
push    0
push    edi
mov     [ebx], edi
call    ds:enablewindow
jmp     short loc_420705
mov     esi, [eax+1ch]
test    esi, esi
jz      short loc_42069a
push    0fffffff0h
push    esi
call    ds:getwindowlonga
test    eax, 40000000h
jz      short loc_42069a
push    esi
call    ebx
mov     esi, eax
jmp     short loc_4206e7
and     dword ptr [ebx], 0
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    8
mov     eax, [ecx+9ch]
push    esi
test    eax, eax
jz      short loc_420739
cmp     eax, 3f107h
jz      short loc_42075c
mov     edx, [ecx]
push    1
push    eax
call    dword ptr [edx+98h]
pop     esi
retn
call    sub_4079ca
mov     esi, eax
mov     ecx, esi
mov     eax, [esi]
call    dword ptr [eax+0b0h]
test    eax, eax
mov     ecx, esi
jnz     short loc_420757
call    ?onhelp@cwnd@@qaexxz
pop     esi
retn
call    sub_420a59
pop     esi
retn
mov     ecx, [ecx+80h]
test    ecx, ecx
jz      short loc_4207cc
mov     eax, [ecx]
jmp     dword ptr [eax+20h]
push    1
pop     eax
retn
mov     ecx, [ecx+0a8h]
test    ecx, ecx
jz      short locret_4207e3
mov     eax, [ecx]
push    [esp+arg_0]
call    dword ptr [eax+4]
retn    4
mov     ecx, [ecx+80h]
test    ecx, ecx
jz      short loc_42082f
mov     eax, [ecx]
push    [esp+arg_0]
call    dword ptr [eax+30h]
jmp     short locret_420831
xor     eax, eax
retn    4
mov     eax, [esp+4]
push    esi
lea     esi, [ecx+0a8h]
push    edi
lea     edi, [eax-0e110h]
mov     edx, [ecx]
mov     eax, [esi]
mov     eax, [eax+8]
mov     eax, [eax+edi*4]
push    eax
call    dword ptr [edx+7ch]
test    eax, eax
jnz     short loc_42085f
mov     ecx, [esi]
push    edi
mov     eax, [ecx]
call    dword ptr [eax]
push    1
pop     eax
pop     edi
pop     esi
retn    4
lea     eax, [esp+arg_8]
push    1
push    eax
push    [esp+8+uid]
push    [esp+0ch+arg_0]
call    ?afxformatstrings@@ygxaavcstring@@ipbqbdh@z
retn    0ch
push    esi
mov     esi, ecx
mov     eax, [esi+4ch]
test    eax, eax
jz      short loc_420a83
cmp     eax, 3f107h
jz      short loc_420a8a
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     eax, [eax+4]
push    1
push    dword ptr [esi+4ch]
mov     ecx, eax
mov     edx, [eax]
call    dword ptr [edx+98h]
pop     esi
retn
mov     ecx, esi
call    ?onhelp@cwnd@@qaexxz
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    esi
mov     esi, ecx
cmp     dword ptr [esi+7ch], 0
jz      short loc_420ad1
push    [ebp+lpappname]
call    ?getsectionkey@cwinapp@@qaepauhkey__@@pbd@z
mov     esi, eax
test    esi, esi
jz      short loc_420afc
push    edi
lea     eax, [ebp+data]
push    4
push    eax
push    4
push    0
push    [ebp+lpvaluename]
push    esi
call    ds:regsetvalueexa
push    esi
mov     edi, eax
call    ds:regclosekey
xor     eax, eax
test    edi, edi
setz    al
pop     edi
jmp     short loc_420afc
push    dword ptr [ebp+data]
lea     eax, [ebp+string]
push    offset ad
push    eax
call    ds:wsprintfa
add     esp, 0ch
lea     eax, [ebp+string]
push    dword ptr [esi+90h]
push    eax
push    [ebp+lpvaluename]
push    [ebp+lpappname]
call    ds:writeprivateprofilestringa
pop     esi
leave
retn    0ch
push    ebp
mov     ebp, esp
push    0
mov     eax, [ecx]
push    [ebp+arg_10]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
push    offset astatic
call    dword ptr [eax+54h]
pop     ebp
retn    14h
mov     eax, offset loc_422ba0
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7cstatic@@6b@
and     [ebp+var_4], 0
call    sub_419be4
or      [ebp+var_4], 0ffffffffh
mov     ecx, esi
call    ??1cwnd@@uae@xz
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
push    ebp
mov     ebp, esp
push    0
mov     eax, [ecx]
push    [ebp+arg_10]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
push    offset abutton
call    dword ptr [eax+54h]
pop     ebp
retn    14h
mov     eax, offset loc_422bb4
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7cbutton@@6b@
and     [ebp+var_4], 0
call    sub_419be4
or      [ebp+var_4], 0ffffffffh
mov     ecx, esi
call    ??1cwnd@@uae@xz
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
push    ebp
mov     ebp, esp
cmp     [ebp+arg_0], 2bh
jz      short loc_420bd4
push    [ebp+arg_c]
push    [ebp+lparam]
push    [ebp+wparam]
push    [ebp+arg_0]
call    ?onchildnotify@cwnd@@maehiijpaj@z
jmp     short loc_420be2
mov     eax, [ecx]
push    [ebp+lparam]
call    dword ptr [eax+0b8h]
push    1
pop     eax
pop     ebp
retn    10h
mov     eax, offset loc_422bc8
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7cedit@@6b@
and     [ebp+var_4], 0
call    sub_419be4
or      [ebp+var_4], 0ffffffffh
mov     ecx, esi
call    ??1cwnd@@uae@xz
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
mov     eax, offset loc_422bdc
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7cscrollbar@@6b@
and     [ebp+var_4], 0
call    sub_419be4
or      [ebp+var_4], 0ffffffffh
mov     ecx, esi
call    ??1cwnd@@uae@xz
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
push    offset dword_44a8c8
call    ?afxdeleteobject@@ygxpapax@z
retn
jmp     $+5
push    offset sub_420c56
call    _atexit
pop     ecx
mov     byte_44a8cc, al
retn
jmp     $+5
push    offset acommdlgfindrep
call    ds:registerwindowmessagea
mov     dword_44ad0c, eax
retn
mov     eax, ecx
mov     ecx, off_42b8a0
mov     [eax+0ch], ecx
mov     ecx, off_42b8a0
mov     [eax+10h], ecx
mov     dword ptr [eax], offset ??_7_afx_edit_state@@6b@
mov     dword ptr [eax+18h], 1
retn
push    esi
mov     esi, ecx
call    sub_420d0d
test    [esp+4+arg_0], 1
jz      short loc_420d07
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422eef
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7_afx_edit_state@@6b@
lea     ecx, [esi+10h]
mov     [ebp+var_4], 1
call    sub_41c5b1
and     byte ptr [ebp+var_4], 0
lea     ecx, [esi+0ch]
call    sub_41c5b1
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
mov     eax, offset off_424cc0
retn
mov     eax, offset loc_4229ee
call    __eh_prolog
push    ecx
push    esi
mov     ecx, offset dword_44a520
call    sub_40e2db
mov     esi, eax
mov     [ebp+var_10], esi
xor     eax, eax
cmp     esi, eax
mov     [ebp+var_4], eax
jz      short loc_420e24
mov     ecx, esi
call    sub_418f4c
mov     dword ptr [esi], offset ??_7ctempwnd@@6b@
mov     eax, esi
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
push    esi
mov     esi, ecx
call    j_??1cwnd@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_420e4b
push    esi
mov     ecx, offset dword_44a520
call    sub_40e36a
mov     eax, esi
pop     esi
retn    4
mov     eax, offset off_424c98
retn
call    sub_420e66
jmp     loc_420e75
push    40h
push    3ch
mov     ecx, offset dword_44a520
call    sub_40e277
retn
push    offset unknown_libname_28
call    _atexit
pop     ecx
retn
mov     eax, offset loc_422a15
call    __eh_prolog
push    ecx
push    10h
call    ??2cnotrackobject@@sgpaxi@z
mov     ecx, eax
mov     [ebp+hmem], ecx
xor     eax, eax
cmp     ecx, eax
mov     [ebp+var_4], eax
jz      short loc_420ef5
call    sub_421808
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
push    esi
mov     esi, ecx
call    sub_4221ca
test    [esp+4+arg_0], 1
jz      short loc_420f2b
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
mov     eax, offset off_425378
retn
call    sub_421021
jmp     loc_421030
push    40h
push    8
mov     ecx, offset dword_44a670
call    sub_40e277
retn
push    offset unknown_libname_29
call    _atexit
pop     ecx
retn
mov     eax, offset off_425650
retn
call    unknown_libname_30
jmp     loc_421079
push    offset sub_421085
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a7e0
jmp     sub_40de42
mov     eax, offset off_425628
retn
call    unknown_libname_31
jmp     loc_4210b1
push    offset sub_4210bd
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a748
jmp     sub_40de8f
push    10h
call    sub_41c2f2
test    eax, eax
pop     ecx
jz      short loc_4210db
mov     ecx, eax
call    ??0cdc@@qae@xz_0
retn
xor     eax, eax
retn
mov     eax, offset off_425608
retn
mov     eax, offset off_4255e0
retn
mov     eax, offset off_4255b8
retn
push    8
call    sub_41c2f2
test    eax, eax
pop     ecx
jz      short loc_421107
mov     dword ptr [eax], offset ??_7cgdiobject@@6b@
and     dword ptr [eax+4], 0
retn
xor     eax, eax
retn
mov     eax, offset off_425590
retn
mov     eax, offset off_425570
retn
mov     eax, offset off_425550
retn
mov     eax, offset off_425530
retn
mov     eax, offset off_425510
retn
mov     eax, offset off_4254e8
retn
mov     eax, offset off_4254c8
retn
push    esi
mov     ecx, offset dword_44a8a0
call    sub_40e2db
mov     esi, eax
test    esi, esi
jz      short loc_421156
mov     ecx, esi
call    ??0cdc@@qae@xz_0
mov     dword ptr [esi], offset ??_7ctempdc@@6b@
mov     eax, esi
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_42117a
test    [esp+4+arg_0], 1
jz      short loc_421174
push    esi
mov     ecx, offset dword_44a8a0
call    sub_40e36a
mov     eax, esi
pop     esi
retn    4
jmp     sub_41f4b6
mov     eax, offset off_4254a8
retn
mov     ecx, offset dword_44a878
call    sub_40e2db
test    eax, eax
jz      short loc_42119e
and     dword ptr [eax+4], 0
mov     dword ptr [eax], offset ??_7ctempgdiobject@@6b@
retn
xor     eax, eax
retn
push    esi
mov     esi, ecx
call    sub_4211c1
test    [esp+4+arg_0], 1
jz      short loc_4211bb
push    esi
mov     ecx, offset dword_44a878
call    sub_40e36a
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422b8c
call    __eh_prolog
push    ecx
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7cgdiobject@@6b@
and     [ebp+var_4], 0
call    sub_41fc1b
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
mov     eax, offset off_425480
retn
call    sub_4211fa
jmp     loc_421209
push    40h
push    10h
mov     ecx, offset dword_44a8a0
call    sub_40e277
retn
push    offset unknown_libname_32
call    _atexit
pop     ecx
retn
call    sub_42123a
jmp     loc_421249
push    40h
push    8
mov     ecx, offset dword_44a878
call    sub_40e277
retn
push    offset unknown_libname_33
call    _atexit
pop     ecx
retn
mov     eax, offset off_425928
retn
mov     eax, offset off_425908
retn
mov     eax, offset off_4258e8
retn
mov     eax, offset off_4258c0
retn
push    esi
mov     esi, ecx
call    sub_4212ba
test    [esp+4+arg_0], 1
jz      short loc_4212b4
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422bf0
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
push    edi
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7_afx_thread_state@@6b@
mov     ecx, [esi+0cch]
and     [ebp+var_4], 0
lea     edi, [esi+0cch]
test    ecx, ecx
jz      short loc_4212f8
mov     eax, [ecx]
call    dword ptr [eax+58h]
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_4212f8
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
mov     eax, [esi+30h]
mov     edi, ds:unhookwindowshookex
test    eax, eax
jz      short loc_421308
push    eax
call    edi
mov     eax, [esi+2ch]
test    eax, eax
jz      short loc_421312
push    eax
call    edi
mov     esi, [esi+0ch]
test    esi, esi
jz      short loc_421320
push    esi
call    _free
pop     ecx
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
leave
retn
call    nullsub_4
jmp     loc_421349
push    offset sub_421355
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a8d4
jmp     j_??1cthreadlocalobject@@qae@xz
push    esi
mov     esi, ecx
call    sub_4213dd
test    [esp+4+arg_0], 1
jz      short loc_4213d7
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422c12
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
push    edi
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7afx_module_state@@6b@
mov     ecx, [esi+1044h]
mov     [ebp+var_4], 1
test    ecx, ecx
jz      short loc_42140c
mov     eax, [ecx]
push    1
call    dword ptr [eax]
mov     ecx, [esi+106ch]
lea     edi, [esi+106ch]
test    ecx, ecx
jz      short loc_421435
mov     eax, [ecx]
lea     edx, [esi+1048h]
push    edx
call    dword ptr [eax+0ch]
mov     ecx, [edi]
test    ecx, ecx
jz      short loc_421435
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
and     byte ptr [ebp+var_4], 0
lea     ecx, [esi+1070h]
call    ??1cthreadlocalobject@@qae@xz
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
leave
retn
mov     eax, ecx
and     dword ptr [eax+8], 0
and     dword ptr [eax+0ch], 0
mov     dword ptr [eax], offset ??_7afx_module_thread_state@@6b@
mov     dword ptr [eax+0ch], 54h
mov     dword ptr [eax+28h], offset sub_41c2d8
retn
push    esi
mov     esi, ecx
call    sub_421491
test    [esp+4+arg_0], 1
jz      short loc_42148b
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422c24
call    __eh_prolog
push    ecx
push    ebx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7afx_module_thread_state@@6b@
mov     ecx, [esi+14h]
and     [ebp+var_4], 0
push    1
test    ecx, ecx
pop     ebx
jz      short loc_4214bc
mov     eax, [ecx]
push    ebx
call    dword ptr [eax]
mov     ecx, [esi+18h]
test    ecx, ecx
jz      short loc_4214c8
mov     eax, [ecx]
push    ebx
call    dword ptr [eax]
mov     ecx, [esi+1ch]
test    ecx, ecx
jz      short loc_4214d4
mov     eax, [ecx]
push    ebx
call    dword ptr [eax]
mov     ecx, [esi+20h]
test    ecx, ecx
jz      short loc_4214e0
mov     eax, [ecx]
push    ebx
call    dword ptr [eax]
mov     ecx, [esi+24h]
test    ecx, ecx
jz      short loc_4214ec
mov     eax, [ecx]
push    ebx
call    dword ptr [eax]
mov     ecx, [esi+38h]
test    ecx, ecx
jz      short loc_42150a
cmp     dword ptr [ecx+0ch], 0
jz      short loc_42150a
call    sub_418953
push    eax
call    ??3@yaxpax@z
pop     ecx
mov     ecx, [esi+38h]
jmp     short loc_4214f3
mov     ecx, [esi+30h]
test    ecx, ecx
jz      short loc_421517
mov     eax, [ecx]
push    ebx
call    dword ptr [eax+4]
mov     ecx, [esi+34h]
test    ecx, ecx
jz      short loc_421524
mov     eax, [ecx]
push    ebx
call    dword ptr [eax+4]
mov     ecx, [esi+38h]
test    ecx, ecx
jz      short loc_421531
mov     eax, [ecx]
push    ebx
call    dword ptr [eax+4]
mov     ecx, [ebp+var_c]
pop     esi
pop     ebx
mov     large fs:0, ecx
leave
retn
call    nullsub_5
jmp     loc_42154a
push    offset sub_421556
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a8d0
jmp     $+5
jmp     ??1cprocesslocalobject@@qae@xz
push    3ch
call    ??2cnotrackobject@@sgpaxi@z
test    eax, eax
jz      short loc_4215ea
mov     ecx, eax
call    sub_421457
retn
xor     eax, eax
retn
push    esi
push    1074h
call    ??2cnotrackobject@@sgpaxi@z
mov     esi, eax
test    esi, esi
jz      short loc_421611
push    1
mov     ecx, esi
call    ??0afx_module_state@@qae@h@z
mov     dword ptr [esi], offset ??_7_afx_base_module_state@@6b@
mov     eax, esi
pop     esi
retn
xor     eax, eax
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_421630
test    [esp+4+arg_0], 1
jz      short loc_42162a
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
jmp     sub_4213dd
mov     eax, offset off_425c70
retn
mov     eax, offset off_425e78
retn
push    1ch
call    sub_41c2f2
test    eax, eax
pop     ecx
jz      short loc_421657
push    0ah
mov     ecx, eax
call    sub_4186d8
retn
xor     eax, eax
retn
mov     eax, offset off_42bb90
retn
jmp     $+5
push    offset off_42bb90
call    sub_41d411
retn
mov     eax, offset off_426038
retn
mov     eax, offset off_426050
retn
push    8
call    sub_41c2f2
test    eax, eax
pop     ecx
jz      short loc_421693
mov     dword ptr [eax], offset ??_7cmenu@@6b@
and     dword ptr [eax+4], 0
retn
xor     eax, eax
retn
mov     eax, offset off_4260d0
retn
mov     ecx, offset dword_44a8e8
call    sub_40e2db
test    eax, eax
jz      short loc_4216b5
and     dword ptr [eax+4], 0
mov     dword ptr [eax], offset ??_7ctempmenu@@6b@
retn
xor     eax, eax
retn
push    esi
mov     esi, ecx
call    sub_4216d8
test    [esp+4+arg_0], 1
jz      short loc_4216d2
push    esi
mov     ecx, offset dword_44a8e8
call    sub_40e36a
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_422d18
call    __eh_prolog
push    ecx
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7cmenu@@6b@
and     [ebp+var_4], 0
call    sub_41d54c
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
mov     eax, offset off_4260a8
retn
call    sub_421711
jmp     loc_421720
push    40h
push    8
mov     ecx, offset dword_44a8e8
call    sub_40e277
retn
push    offset unknown_libname_34
call    _atexit
pop     ecx
retn
push    esi
mov     esi, ecx
call    ??1cwinthread@@uae@xz
test    [esp+4+arg_0], 1
jz      short loc_42175d
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
mov     eax, offset off_426120
retn
push    4
call    ??2cnotrackobject@@sgpaxi@z
test    eax, eax
jz      short loc_4217ea
mov     dword ptr [eax], offset ??_7_afx_ctl3d_thread@@6b@
retn
xor     eax, eax
retn
push    esi
mov     esi, ecx
call    sub_42220b
test    [esp+4+arg_0], 1
jz      short loc_421802
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
mov     eax, ecx
mov     dword ptr [eax], offset ??_7_afx_win_state@@6b@
retn
push    esi
mov     esi, ecx
call    sub_42281d
test    [esp+4+arg_0], 1
jz      short loc_421826
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
call    sub_421976
test    [esp+4+arg_0], 1
jz      short loc_42192c
push    esi
call    ??3@yaxpax@z
pop     ecx
mov     eax, esi
pop     esi
retn    4
push    1
pop     eax
retn
mov     eax, offset loc_422d90
call    __eh_prolog
push    ecx
push    ebx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7cwinapp@@6b@
mov     ecx, [esi+80h]
xor     ebx, ebx
cmp     ecx, ebx
mov     [ebp+var_4], ebx
jz      short loc_4219a4
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
mov     ecx, [esi+0a8h]
cmp     ecx, ebx
jz      short loc_4219b5
mov     eax, [ecx]
push    1
call    dword ptr [eax+14h]
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
cmp     [eax+14h], bl
jnz     short loc_4219ed
mov     ecx, dword_44a918
cmp     ecx, ebx
jz      short loc_4219d6
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
mov     dword_44a918, ebx
mov     ecx, dword_44a914
cmp     ecx, ebx
jz      short loc_4219ed
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
mov     dword_44a914, ebx
mov     eax, [esi+94h]
cmp     eax, ebx
jz      short loc_4219fd
push    eax
call    ?afxglobalfree@@ygxpax@z
mov     eax, [esi+98h]
cmp     eax, ebx
jz      short loc_421a0d
push    eax
call    ?afxglobalfree@@ygxpax@z
mov     ax, [esi+0b0h]
push    edi
mov     edi, ds:globaldeleteatom
cmp     ax, bx
jz      short loc_421a23
push    eax
call    edi
mov     ax, [esi+0b2h]
cmp     ax, bx
jz      short loc_421a32
push    eax
call    edi
mov     ecx, [esi+0ach]
pop     edi
cmp     ecx, ebx
jz      short loc_421a44
mov     eax, [ecx]
push    1
call    dword ptr [eax+4]
call    ?afxgetmodulestate@@ygpavafx_module_state@@xz
mov     ecx, [eax+10h]
cmp     ecx, [esi+78h]
jnz     short loc_421a54
mov     [eax+10h], ebx
cmp     [eax+4], esi
jnz     short loc_421a5c
mov     [eax+4], ebx
push    dword ptr [esi+78h]
call    _free
push    dword ptr [esi+7ch]
call    _free
push    dword ptr [esi+88h]
call    _free
push    dword ptr [esi+8ch]
call    _free
push    dword ptr [esi+90h]
call    _free
or      [ebp+var_4], 0ffffffffh
add     esp, 14h
mov     ecx, esi
mov     [esi+28h], ebx
call    ??1cwinthread@@uae@xz
mov     ecx, [ebp+var_c]
pop     esi
pop     ebx
mov     large fs:0, ecx
leave
retn
push    esi
mov     esi, ecx
mov     ecx, [esi+0a8h]
test    ecx, ecx
jz      short loc_421abe
mov     eax, [ecx]
call    dword ptr [eax+10h]
mov     eax, [esi+0b4h]
test    eax, eax
jz      short loc_421ada
push    eax
push    offset apreviewpages
push    offset appname
mov     ecx, esi
call    sub_420a8c
pop     esi
retn
mov     eax, offset off_4261d0
retn
call    nullsub_6
jmp     loc_421b23
push    offset sub_421b2f
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a910
jmp     loc_421560
mov     eax, offset off_426338
retn
mov     eax, offset off_4263f8
retn
call    unknown_libname_35
jmp     loc_421b61
push    offset sub_421b6d
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a9b8
jmp     sub_40e0bb
mov     eax, offset off_4263c8
retn
call    unknown_libname_36
jmp     loc_421b99
push    offset sub_421ba5
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44a920
jmp     sub_40e108
mov     eax, offset off_426480
retn
mov     edx, [ecx]
test    edx, edx
jnz     short loc_421bd2
xor     eax, eax
jmp     short locret_421c0b
push    esi
mov     esi, [esp+4+arg_0]
xor     eax, eax
cmp     edx, esi
jnz     short loc_421be7
mov     eax, [ecx+4]
mov     eax, [eax+esi]
mov     [ecx], eax
jmp     short loc_421c07
test    edx, edx
jz      short loc_421c0a
mov     ecx, [ecx+4]
push    edi
mov     edi, [ecx+edx]
cmp     edi, esi
jz      short loc_421bfc
mov     edx, edi
test    edx, edx
jnz     short loc_421bef
test    edx, edx
pop     edi
jz      short loc_421c0a
mov     eax, [ecx+esi]
mov     [ecx+edx], eax
push    1
pop     eax
pop     esi
retn    4
push    ecx
push    ecx
push    ebp
push    esi
mov     esi, ecx
push    edi
lea     eax, [esi+1ch]
push    eax
mov     [esp+18h+lpcriticalsection], eax
call    ds:entercriticalsection
mov     ebp, [esi+4]
mov     edi, [esi+8]
cmp     edi, ebp
jge     short loc_421d05
mov     eax, [esi+10h]
test    byte ptr [eax+edi*8], 1
jz      loc_421dbe
push    1
pop     edi
cmp     ebp, edi
jle     short loc_421d27
mov     eax, [esi+10h]
add     eax, 8
test    byte ptr [eax], 1
jz      short loc_421d1f
inc     edi
add     eax, 8
cmp     edi, ebp
jl      short loc_421d12
cmp     edi, ebp
jl      loc_421dbe
mov     eax, [esi+10h]
add     ebp, 20h
test    eax, eax
push    ebx
jnz     short loc_421d45
mov     eax, ebp
shl     eax, 3
push    eax
push    2002h
call    ds:globalalloc
jmp     short loc_421d67
push    eax
call    ds:globalhandle
mov     ebx, eax
push    ebx
call    ds:globalunlock
mov     eax, ebp
push    2002h
shl     eax, 3
push    eax
push    ebx
call    ds:globalrealloc
mov     ebx, ds:globallock
mov     [esp+18h+var_8], eax
test    eax, eax
jnz     short loc_421d90
push    dword ptr [esi+10h]
call    ds:globalhandle
push    eax
call    ebx
push    [esp+18h+lpcriticalsection]
call    ds:leavecriticalsection
call    sub_4181f5
push    [esp+18h+var_8]
call    ebx
mov     ebx, eax
mov     eax, [esi+4]
mov     ecx, eax
imul    ecx, 1fffffffh
add     ecx, ebp
lea     eax, [ebx+eax*8]
shl     ecx, 3
push    ecx
push    0
push    eax
call    _memset
add     esp, 0ch
mov     [esi+10h], ebx
mov     [esi+4], ebp
pop     ebx
cmp     edi, [esi+0ch]
jl      short loc_421dc9
lea     eax, [edi+1]
mov     [esi+0ch], eax
mov     eax, [esi+10h]
or      dword ptr [eax+edi*8], 1
push    [esp+14h+lpcriticalsection]
lea     eax, [eax+edi*8]
lea     eax, [edi+1]
mov     [esi+8], eax
call    ds:leavecriticalsection
mov     eax, edi
pop     edi
pop     esi
pop     ebp
pop     ecx
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
push    edi
push    dword ptr [esi]
call    ds:tlsgetvalue
mov     edi, eax
test    edi, edi
jz      short loc_421e79
mov     eax, [ebp+arg_0]
lea     ebx, [edi+8]
cmp     eax, [ebx]
jl      loc_421f1f
cmp     [ebp+arg_4], 0
jz      loc_421f1f
jmp     short loc_421ebb
push    10h
call    ??2cnotrackobject@@sgpaxi@z
test    eax, eax
jz      short loc_421e8e
mov     dword ptr [eax], offset ??_7cthreaddata@@6b@
mov     edi, eax
jmp     short loc_421e90
xor     edi, edi
and     dword ptr [edi+8], 0
and     dword ptr [edi+0ch], 0
lea     ebx, [edi+8]
lea     eax, [esi+1ch]
push    eax
mov     [ebp+var_4], edi
call    ds:entercriticalsection
push    edi
lea     ecx, [esi+14h]
call    ?addhead@csimplelist@@qaexpax@z
lea     eax, [esi+1ch]
push    eax
call    ds:leavecriticalsection
mov     eax, [edi+0ch]
test    eax, eax
jnz     short loc_421ed3
mov     eax, [esi+0ch]
shl     eax, 2
push    eax
push    0
call    ds:localalloc
jmp     short loc_421ee3
mov     ecx, [esi+0ch]
push    2
shl     ecx, 2
push    ecx
push    eax
call    ds:localrealloc
test    eax, eax
mov     [edi+0ch], eax
jnz     short loc_421eef
call    sub_4181f5
mov     eax, [ebx]
mov     ecx, eax
imul    ecx, 3fffffffh
add     ecx, [esi+0ch]
shl     ecx, 2
push    ecx
mov     ecx, [edi+0ch]
push    0
lea     eax, [ecx+eax*4]
push    eax
call    _memset
mov     eax, [esi+0ch]
add     esp, 0ch
mov     [ebx], eax
push    edi
push    dword ptr [esi]
call    ds:tlssetvalue
mov     eax, [edi+0ch]
mov     edx, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
pop     edi
pop     esi
mov     [eax+edx*4], ecx
pop     ebx
leave
retn    8
push    esi
mov     esi, ecx
call    nullsub_2
test    [esp+4+arg_0], 1
jz      short loc_421f47
push    esi
call    ??3cnotrackobject@@sgxpax@z
mov     eax, esi
pop     esi
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
push    1
mov     ebx, ecx
pop     edi
cmp     [esi+8], edi
mov     [ebp+var_4], edi
jle     short loc_421fa7
mov     eax, [ebp+arg_4]
test    eax, eax
jz      short loc_421f84
mov     ecx, [ebx+10h]
cmp     [ecx+edi*8+4], eax
jz      short loc_421f84
mov     eax, [esi+0ch]
cmp     dword ptr [eax+edi*4], 0
jz      short loc_421f9b
and     [ebp+var_4], 0
jmp     short loc_421f9b
mov     eax, [esi+0ch]
mov     ecx, [eax+edi*4]
test    ecx, ecx
jz      short loc_421f94
mov     eax, [ecx]
push    1
call    dword ptr [eax]
mov     eax, [esi+0ch]
and     dword ptr [eax+edi*4], 0
inc     edi
cmp     edi, [esi+8]
jl      short loc_421f65
cmp     [ebp+var_4], 0
jz      short loc_421fe0
lea     edi, [ebx+1ch]
push    edi
call    ds:entercriticalsection
push    esi
lea     ecx, [ebx+14h]
call    sub_421bc8
push    edi
call    ds:leavecriticalsection
push    dword ptr [esi+0ch]
call    ds:localfree
test    esi, esi
jz      short loc_421fd6
mov     eax, [esi]
push    1
mov     ecx, esi
call    dword ptr [eax]
push    0
push    dword ptr [ebx]
call    ds:tlssetvalue
pop     edi
pop     esi
pop     ebx
leave
retn    8
mov     eax, offset loc_422e28
call    __eh_prolog
push    ecx
push    ecx
push    ebx
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
mov     [ebp+var_10], esp
cmp     [esi], edi
jnz     short loc_42213a
push    10h
call    sub_422460
mov     [ebp+var_4], edi
cmp     [esi], edi
jnz     short loc_42212f
call    [ebp+arg_0]
mov     [esi], eax
or      [ebp+var_4], 0ffffffffh
push    10h
call    ?afxunlockglobals@@ygxh@z
mov     eax, [esi]
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
leave
retn    4
push    10h
call    ?afxunlockglobals@@ygxh@z
xor     edi, edi
push    edi
push    edi
call    __cxxthrowexception@8
mov     eax, offset off_4264c8
retn
mov     eax, offset loc_422e9c
call    __eh_prolog
push    ecx
push    esi
mov     esi, ecx
mov     [ebp+var_10], esi
mov     dword ptr [esi], offset ??_7_afx_ctl3d_state@@6b@
mov     eax, [esi+10h]
and     [ebp+var_4], 0
test    eax, eax
jz      short loc_4221f0
push    0
call    eax
mov     esi, [esi+8]
test    esi, esi
jz      short loc_4221fe
push    esi
call    ds:freelibrary
mov     ecx, [ebp+var_c]
pop     esi
mov     large fs:0, ecx
leave
retn
mov     eax, offset loc_422eb0
call    __eh_prolog
push    ecx
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7_afx_ctl3d_thread@@6b@
mov     eax, dword_44aa90
and     [ebp+var_4], 0
test    eax, eax
jz      short loc_422235
mov     eax, [eax+18h]
test    eax, eax
jz      short loc_422235
call    eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
call    nullsub_7
jmp     loc_42224c
push    offset sub_422258
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44aa8c
jmp     j_??1cthreadlocalobject@@qae@xz
call    nullsub_8
jmp     loc_42226d
push    offset sub_422279
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44aa90
jmp     loc_421560
call    sub_42228d
jmp     loc_422297
mov     ecx, offset dword_44aa98
jmp     ??0aux_data@@qae@xz
push    offset sub_4222a3
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44aa98
jmp     loc_42286d
jmp     $+5
call    ?afxinitdbcs@@yghxz
mov     dword_44ab04, eax
retn
cmp     dword_44ad04, 0
push    esi
jnz     short loc_42240b
push    1
pop     esi
mov     dword_44ad04, esi
call    ds:getversion
cmp     al, 4
jnb     short loc_4223f9
test    eax, 80000000h
jz      short loc_4223f9
mov     dword_44ad00, esi
jmp     short loc_42240b
and     dword_44ad00, 0
push    offset criticalsection
call    ds:initializecriticalsection
mov     eax, dword_44ad04
pop     esi
retn
cmp     dword_44ad04, 0
jz      short locret_42245f
dec     dword_44ad04
cmp     dword_44ad00, 0
jnz     short locret_42245f
push    ebx
push    esi
push    edi
mov     edi, ds:deletecriticalsection
push    offset criticalsection
call    edi
mov     esi, offset dword_44ab08
mov     ebx, offset stru_44ab68
cmp     dword ptr [esi], 0
jz      short loc_42244e
push    ebx
call    edi
dec     dword ptr [esi]
add     ebx, 18h
add     esi, 4
cmp     ebx, offset dword_44ad00
jl      short loc_422444
pop     edi
pop     esi
pop     ebx
retn
push    ebx
xor     ebx, ebx
cmp     dword_44ad04, ebx
jnz     short loc_422470
call    sub_4223cd
cmp     dword_44ad00, ebx
jnz     short loc_4224cc
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
cmp     dword_44ab08[edi*4], ebx
mov     ebx, ds:entercriticalsection
lea     esi, ds:44ab08h[edi*4]
jnz     short loc_4224bd
push    ebp
mov     ebp, offset criticalsection
push    ebp
call    ebx
cmp     dword ptr [esi], 0
jnz     short loc_4224b5
lea     eax, [edi+edi*2]
lea     eax, ds:44ab68h[eax*8]
push    eax
call    ds:initializecriticalsection
inc     dword ptr [esi]
push    ebp
call    ds:leavecriticalsection
pop     ebp
lea     eax, [edi+edi*2]
lea     eax, ds:44ab68h[eax*8]
push    eax
call    ebx
pop     edi
pop     esi
pop     ebx
retn    4
mov     eax, offset off_426508
retn
call    nullsub_9
jmp     loc_4225dc
push    offset sub_4225e8
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_44ad08
jmp     loc_421560
mov     eax, offset off_426580
retn
mov     eax, offset loc_422d68
call    __eh_prolog
push    ecx
mov     [ebp+var_10], ecx
mov     dword ptr [ecx], offset ??_7_afx_win_state@@6b@
and     [ebp+var_4], 0
add     ecx, 4
push    ecx
call    ?afxdeleteobject@@ygxpapax@z
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
leave
retn
add     ecx, 50h
push    ecx
call    ?afxdeleteobject@@ygxpapax@z
retn
mov     eax, offset stru_427c28
jmp     ___cxxframehandler
mov     eax, offset stru_427ca8
jmp     ___cxxframehandler
mov     eax, offset stru_427d28
jmp     ___cxxframehandler
lea     ecx, [ebp+var_8]
jmp     loc_40ddd2
mov     eax, offset stru_427d80
jmp     ___cxxframehandler
lea     ecx, [ebp+var_24]
jmp     sub_41f4b6
lea     ecx, [ebp+var_60]
jmp     ??1cwnd@@uae@xz
lea     ecx, [ebp+var_24]
jmp     sub_41f4b6
mov     eax, offset stru_427da8
jmp     ___cxxframehandler
lea     ecx, [ebp+var_48]
jmp     ??1cwnd@@uae@xz
mov     eax, offset stru_427de0
jmp     ___cxxframehandler
mov     eax, offset stru_427e08
jmp     ___cxxframehandler
push    [ebp+var_10]
call    sub_41baaa
pop     ecx
retn
mov     eax, offset stru_427e98
jmp     ___cxxframehandler
push    [ebp+hmem]
call    ??3cnotrackobject@@sgxpax@z
retn
mov     eax, offset stru_427ee8
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_427f10
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwnd@@uae@xz
mov     eax, offset stru_427f38
jmp     ___cxxframehandler
lea     ecx, [ebp+var_10]
jmp     sub_41c5b1
mov     eax, [ebp+var_14]
and     eax, 1
test    eax, eax
jz      locret_422a66
mov     ecx, [ebp+arg_0]
jmp     sub_41c5b1
retn
mov     eax, offset stru_427f60
jmp     ___cxxframehandler
mov     eax, [ebp+var_10]
and     eax, 1
test    eax, eax
jz      locret_422a8a
mov     ecx, [ebp+arg_0]
jmp     sub_41c5b1
retn
lea     ecx, [ebp+arg_4]
jmp     sub_41c5b1
mov     eax, offset stru_427f90
jmp     ___cxxframehandler
mov     eax, [ebp+var_10]
and     eax, 1
test    eax, eax
jz      locret_422ab6
mov     ecx, [ebp+arg_0]
jmp     sub_41c5b1
retn
lea     ecx, [ebp+size]
jmp     sub_41c5b1
mov     eax, offset stru_427fc0
jmp     ___cxxframehandler
mov     eax, [ebp+var_10]
and     eax, 1
test    eax, eax
jz      locret_422ae2
mov     ecx, [ebp+arg_0]
jmp     sub_41c5b1
retn
lea     ecx, [ebp+size]
jmp     sub_41c5b1
mov     eax, offset stru_427ff0
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_428048
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     sub_41f4b6
mov     eax, offset stru_428070
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     sub_41f4b6
mov     eax, offset stru_428098
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_428138
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwnd@@uae@xz
mov     eax, offset stru_428228
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwnd@@uae@xz
mov     eax, offset stru_428250
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwnd@@uae@xz
mov     eax, offset stru_428278
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwnd@@uae@xz
mov     eax, offset stru_4282a0
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_4282c8
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     ecx, [ebp+var_10]
add     ecx, 1070h
jmp     j_??1cthreadlocalobject@@qae@xz
mov     eax, offset stru_4282f0
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_428320
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwnd@@uae@xz
mov     eax, offset stru_428348
jmp     ___cxxframehandler
lea     ecx, [ebp+str1]
jmp     sub_41c5b1
lea     ecx, [ebp+var_40]
jmp     ??1initialthreadparam@umsfreevirtualprocessorroot@details@concurrency@@qae@xz
mov     eax, offset stru_428370
jmp     ___cxxframehandler
mov     eax, offset stru_4283d8
jmp     ___cxxframehandler
lea     ecx, [ebp+lptext]
jmp     sub_41c5b1
mov     eax, offset stru_428488
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_4284b0
jmp     ___cxxframehandler
lea     ecx, [ebp+lpstring]
jmp     sub_41c5b1
mov     eax, offset stru_4284d8
jmp     ___cxxframehandler
lea     ecx, [ebp+arg_0]
jmp     sub_41c5b1
mov     eax, offset stru_428500
jmp     ___cxxframehandler
mov     eax, offset stru_428528
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_4285a8
jmp     ___cxxframehandler
lea     ecx, [ebp+var_50]
jmp     ??1cwnd@@uae@xz
mov     eax, offset stru_4285d0
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_428680
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     ??1cwinthread@@uae@xz
mov     eax, offset stru_4286d0
jmp     ___cxxframehandler
lea     ecx, [ebp+lpstring2]
jmp     sub_41c5b1
lea     ecx, [ebp+arg_8]
jmp     sub_41c5b1
mov     eax, offset stru_428808
jmp     ___cxxframehandler
push    [ebp+block]
call    ?allocate@?$allocator@d@std@@qaepadi@z
retn
mov     ecx, [ebp+block]
jmp     nullsub_16
mov     ecx, [ebp+block]
add     ecx, 10h
jmp     sub_41c5b1
mov     eax, offset stru_428880
jmp     ___cxxframehandler
mov     eax, offset stru_4288b8
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
add     ecx, 4
jmp     sub_4189e5
mov     ecx, [ebp+var_10]
add     ecx, 20h
jmp     sub_4189e5
mov     eax, offset stru_428910
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
add     ecx, 4
jmp     sub_4189e5
mov     ecx, [ebp+var_10]
add     ecx, 20h
jmp     sub_4189e5
mov     eax, offset stru_428998
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_4289c8
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_4289f0
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_428a18
jmp     ___cxxframehandler
mov     eax, offset stru_428a40
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_428a98
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     ecx, [ebp+var_10]
add     ecx, 0ch
jmp     sub_41c5b1
mov     eax, offset stru_428ac0
jmp     ___cxxframehandler
lea     ecx, [ebp+var_10]
jmp     sub_41c5b1
mov     eax, [ebp+var_14]
and     eax, 1
test    eax, eax
jz      locret_422f1a
mov     ecx, [ebp+arg_0]
jmp     sub_41c5b1
retn
mov     eax, offset stru_428af0
jmp     ___cxxframehandler
lea     ecx, [ebp+var_10]
jmp     sub_41c5b1
mov     eax, [ebp+var_14]
and     eax, 1
test    eax, eax
jz      locret_422f46
mov     ecx, [ebp+arg_0]
jmp     sub_41c5b1
retn
mov     eax, offset stru_428b20
jmp     ___cxxframehandler
lea     ecx, [ebp+lpstring2]
jmp     sub_41c5b1
lea     ecx, [ebp+arg_8]
jmp     sub_41c5b1
mov     eax, offset stru_428b50
jmp     ___cxxframehandler
push    [ebp+block]
call    ?allocate@?$allocator@d@std@@qaepadi@z
retn
mov     ecx, [ebp+block]
jmp     nullsub_16
mov     ecx, [ebp+block]
add     ecx, 0ch
jmp     sub_41c5b1
mov     eax, offset stru_428bc8
jmp     ___cxxframehandler
mov     ecx, [ebp+var_10]
jmp     nullsub_16
mov     eax, offset stru_428c00
jmp     ___cxxframehandler
offset loc_41b187>