push    ebp
lea     ebp, [esp-70h]
sub     esp, 140h
push    ebx
push    esi
mov     esi, [ebp+70h+dwinitparam]
mov     eax, [esi+294h]
xor     ebx, ebx
inc     ebx
cmp     eax, ebx
push    edi
mov     edi, [esi+4a4h]
jnz     short loc_69ac1341
xor     eax, eax
cmp     [esi+0ah], bx
push    esi
setnz   al
push    offset dialogfunc
push    [ebp+70h+hwndparent]
add     eax, 898h
push    eax
push    edi
call    ds:dialogboxparamw
dec     eax
jz      loc_69ac140a
dec     eax
jnz     loc_69ac13fb
mov     [esi+298h], ebx
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     ebp, 70h
leave
retn    8
cmp     eax, 2
jnz     short loc_69ac13bb
push    esi
push    offset sub_69ac1522
push    [ebp+70h+hwndparent]
push    89ah
push    edi
call    ds:dialogboxparamw
dec     eax
jz      short loc_69ac13af
dec     eax
jz      short loc_69ac132f
sub     eax, 18dh
mov     dword ptr [esi+298h], 2
jz      short loc_69ac1335
mov     esi, ds:loadstringw
push    50h
lea     eax, [ebp+70h+buffer]
push    eax
push    9c4ah
push    edi
call    esi
push    50h
lea     eax, [ebp+70h+text]
push    eax
push    9c41h
push    edi
call    esi
push    0
lea     eax, [ebp+70h+buffer]
push    eax
lea     eax, [ebp+70h+text]
push    eax
push    [ebp+70h+hwndparent]
call    ds:messageboxw
jmp     short loc_69ac1335
mov     dword ptr [esi+294h], 3
jmp     short loc_69ac1414
cmp     eax, 3
jnz     loc_69ac1335
xor     eax, eax
cmp     [esi+0ah], bx
push    esi
setnz   al
push    offset sub_69ac1714
push    [ebp+70h+hwndparent]
add     eax, 89bh
push    eax
push    edi
call    ds:dialogboxparamw
dec     eax
jz      short loc_69ac1431
dec     eax
jz      loc_69ac132f
sub     eax, 18dh
jz      short loc_69ac1422
sub     eax, 476h
jz      short loc_69ac140a
mov     dword ptr [esi+298h], 2
jmp     loc_69ac1372
mov     dword ptr [esi+294h], 2
mov     eax, ebx
and     dword ptr [esi+298h], 0
jmp     loc_69ac1337
mov     dword ptr [esi+298h], 2
jmp     loc_69ac1335
xor     eax, eax
mov     [esi+294h], eax
jmp     short loc_69ac1416
xor     eax, eax
inc     eax
push    esi
mov     esi, [esp+4+dwinitparam]
and     dword ptr [esi+4c0h], 0
mov     [esi+294h], eax
mov     [esi+298h], eax
push    esi
push    [esp+8+hwndparent]
call    sub_69ac12de
test    eax, eax
jnz     short loc_69ac1456
push    esi
call    sub_69ac2cf9
mov     ax, [esi+298h]
pop     esi
retn    8
push    ebp
mov     ebp, esp
push    esi
xor     esi, esi
cmp     [ebp+arg_4], 110h
push    edi
mov     edi, [ebp+hwnd]
jz      short loc_69ac1493
push    8
push    edi
call    ds:getwindowlongw
mov     esi, eax
mov     eax, [ebp+arg_4]
sub     eax, 10h
jz      short loc_69ac14e9
sub     eax, 100h
jz      short loc_69ac14fe
dec     eax
jz      short loc_69ac14e0
sub     eax, 24h
jz      short loc_69ac14b1
dec     eax
jz      short loc_69ac14da
dec     eax
dec     eax
jnz     short loc_69ac14f2
test    esi, esi
jz      short loc_69ac14f2
push    0fh
call    ds:getsyscolor
push    eax
push    [ebp+arg_8]
call    ds:setbkcolor
push    1
push    [ebp+arg_8]
call    ds:setbkmode
mov     eax, [esi+0cdch]
jmp     short loc_69ac14f4
test    esi, esi
jz      short loc_69ac14f2
jmp     short loc_69ac14d2
mov     eax, [ebp+arg_8]
dec     eax
jz      short loc_69ac14fa
dec     eax
jnz     short loc_69ac14f2
push    2
push    edi
call    ds:enddialog
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn    10h
push    1
jmp     short loc_69ac14eb
push    [ebp+dwnewlong]
push    8
push    edi
call    ds:setwindowlongw
push    edi
call    sub_69ac40ef
push    1
push    edi
call    ds:getdlgitem
push    eax
call    ds:setfocus
jmp     short loc_69ac14f2
push    ebp
lea     ebp, [esp-68h]
sub     esp, 140h
push    ebx
push    esi
xor     esi, esi
cmp     [ebp+68h+arg_4], 110h
push    edi
jz      short loc_69ac1548
push    8
push    [ebp+68h+hwnd]
call    ds:getwindowlongw
mov     esi, eax
mov     eax, [ebp+68h+arg_4]
sub     eax, 10h
jz      loc_69ac16fd
sub     eax, 100h
jz      loc_69ac16d3
dec     eax
jz      short loc_69ac15ac
sub     eax, 24h
jz      short loc_69ac1572
dec     eax
jz      short loc_69ac15a2
dec     eax
dec     eax
jnz     loc_69ac1708
test    esi, esi
jz      loc_69ac1708
push    0fh
call    ds:getsyscolor
push    eax
push    [ebp+68h+arg_8]
call    ds:setbkcolor
push    1
push    [ebp+68h+arg_8]
call    ds:setbkmode
mov     eax, [esi+0cdch]
jmp     loc_69ac170a
test    esi, esi
jz      loc_69ac1708
jmp     short loc_69ac1597
test    esi, esi
jz      loc_69ac1708
mov     eax, [ebp+68h+arg_8]
dec     eax
jz      short loc_69ac161e
dec     eax
jnz     loc_69ac1708
cmp     dword ptr [esi+4c0h], 1
jnz     loc_69ac16fd
push    esi
call    sub_69ac3dca
cmp     ax, 1
jz      loc_69ac16fd
mov     edi, ds:loadstringw
push    50h
lea     eax, [ebp+68h+buffer]
push    eax
push    9c4ah
push    dword ptr [esi+4a4h]
call    edi
push    50h
lea     eax, [ebp+68h+text]
push    eax
push    9c42h
push    dword ptr [esi+4a4h]
call    edi
lea     eax, [ebp+68h+buffer]
push    0
push    eax
lea     eax, [ebp+68h+text]
jmp     loc_69ac16bf
mov     ax, [esi+0ah]
dec     ax
movsx   eax, ax
xor     edi, edi
test    eax, eax
mov     [ebp+68h+arg_8], 0cdah
mov     [ebp+68h+arg_4], eax
jl      short loc_69ac1680
xor     eax, eax
inc     eax
test    edi, edi
jnz     short loc_69ac1641
push    3
pop     eax
cmp     [ebp+68h+arg_4], edi
jnz     short loc_69ac1649
or      eax, 8
movsx   edx, word ptr [ebp+68h+arg_8]
lea     ecx, [edi+edi*2]
lea     ebx, [esi+ecx*2+10h]
movsx   ecx, word ptr [ebx]
sub     edx, ecx
jns     short loc_69ac1665
or      eax, 6
mov     [ebp+68h+arg_8], 0cdah
push    eax
push    esi
push    edi
call    sub_69ac3ac4
cmp     ax, 1
jnz     short loc_69ac1684
mov     ax, [ebx]
sub     word ptr [ebp+68h+arg_8], ax
inc     edi
cmp     edi, [ebp+68h+arg_4]
jle     short loc_69ac1637
push    1
jmp     short loc_69ac16ff
mov     edi, ds:loadstringw
push    50h
lea     eax, [ebp+68h+text]
push    eax
push    9c4ah
push    dword ptr [esi+4a4h]
call    edi
push    50h
lea     eax, [ebp+68h+buffer]
push    eax
push    9c42h
push    dword ptr [esi+4a4h]
call    edi
lea     eax, [ebp+68h+text]
push    0
push    eax
lea     eax, [ebp+68h+buffer]
push    eax
push    dword ptr [esi+29ch]
call    ds:messageboxw
push    18fh
jmp     short loc_69ac16ff
push    [ebp+68h+dwnewlong]
push    8
push    [ebp+68h+hwnd]
call    ds:setwindowlongw
push    [ebp+68h+hwnd]
call    sub_69ac40ef
push    1
push    [ebp+68h+hwnd]
call    ds:getdlgitem
push    eax
call    ds:setfocus
jmp     short loc_69ac1708
push    2
push    [ebp+68h+hwnd]
call    ds:enddialog
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     ebp, 68h
leave
retn    10h
push    ebp
lea     ebp, [esp-68h]
sub     esp, 3c0h
push    ebx
push    esi
push    edi
xor     esi, esi
and     [ebp+68h+var_4], esi
cmp     [ebp+68h+arg_4], 110h
push    5
pop     ebx
jz      short loc_69ac1752
push    8
push    [ebp+68h+hwnd]
call    ds:getwindowlongw
mov     esi, eax
test    esi, esi
jz      short loc_69ac1752
movsx   eax, word ptr [esi+0ah]
cmp     eax, ebx
mov     [ebp+68h+format], eax
jle     short loc_69ac1752
mov     [ebp+68h+var_4], ebx
mov     eax, [ebp+68h+arg_4]
sub     eax, 10h
jz      loc_69ac186c
sub     eax, 100h
jz      loc_69ac1938
dec     eax
jz      short loc_69ac17a4
sub     eax, 24h
jz      short loc_69ac177c
dec     eax
jz      short loc_69ac1799
dec     eax
dec     eax
jnz     loc_69ac1877
push    0fh
call    ds:getsyscolor
push    eax
push    [ebp+68h+arg_8]
call    ds:setbkcolor
push    1
push    [ebp+68h+arg_8]
call    ds:setbkmode
mov     eax, [esi+0cdch]
jmp     loc_69ac1879
mov     eax, [ebp+68h+arg_8]
dec     eax
jz      loc_69ac1883
dec     eax
jz      loc_69ac1857
sub     eax, 603h
jnz     loc_69ac1877
xor     edi, edi
inc     edi
cmp     [ebp+68h+format], edi
mov     [esi+4c0h], edi
jl      short loc_69ac17f9
lea     ebx, [ebp+68h+var_28]
mov     eax, [ebp+68h+var_4]
push    0
push    0
push    147h
lea     eax, [eax+edi+514h]
push    eax
push    [ebp+68h+hwnd]
call    ds:senddlgitemmessagew
mov     [ebx], ax
inc     edi
inc     ebx
inc     ebx
cmp     edi, [ebp+68h+format]
jle     short loc_69ac17d1
push    esi
lea     eax, [ebp+68h+var_28]
push    eax
xor     eax, eax
mov     ax, [esi+0ah]
push    eax
call    sub_69ac3c10
cmp     ax, 1
jz      short loc_69ac1850
mov     edi, ds:loadstringw
push    50h
lea     eax, [ebp+68h+buffer]
push    eax
push    9c4ah
push    dword ptr [esi+4a4h]
call    edi
push    50h
lea     eax, [ebp+68h+text]
push    eax
push    9c42h
push    dword ptr [esi+4a4h]
call    edi
lea     eax, [ebp+68h+buffer]
push    0
push    eax
lea     eax, [ebp+68h+text]
jmp     loc_69ac191a
push    605h
jmp     short loc_69ac186e
cmp     dword ptr [esi+4c0h], 1
jnz     short loc_69ac186c
push    esi
call    sub_69ac3dca
cmp     ax, 1
jnz     short loc_69ac18df
push    2
push    [ebp+68h+hwnd]
call    ds:enddialog
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     ebp, 68h
leave
retn    10h
xor     edi, edi
inc     edi
cmp     [ebp+68h+format], edi
mov     [esi+4c0h], edi
jl      short loc_69ac18bc
lea     ebx, [ebp+68h+var_28]
mov     eax, [ebp+68h+var_4]
push    0
push    0
push    147h
lea     eax, [eax+edi+514h]
push    eax
push    [ebp+68h+hwnd]
call    ds:senddlgitemmessagew
mov     [ebx], ax
inc     edi
inc     ebx
inc     ebx
cmp     edi, [ebp+68h+format]
jle     short loc_69ac1894
push    esi
lea     eax, [ebp+68h+var_28]
push    eax
xor     eax, eax
mov     ax, [esi+0ah]
push    eax
call    sub_69ac3c10
cmp     ax, 1
jnz     short loc_69ac18df
push    esi
call    sub_69ac3cf9
cmp     ax, 1
jz      short loc_69ac1931
mov     edi, ds:loadstringw
push    50h
lea     eax, [ebp+68h+text]
push    eax
push    9c4ah
push    dword ptr [esi+4a4h]
call    edi
push    50h
lea     eax, [ebp+68h+buffer]
push    eax
push    9c42h
push    dword ptr [esi+4a4h]
call    edi
lea     eax, [ebp+68h+text]
push    0
push    eax
lea     eax, [ebp+68h+buffer]
push    eax
push    dword ptr [esi+29ch]
call    ds:messageboxw
push    18fh
jmp     loc_69ac186e
push    1
jmp     loc_69ac186e
mov     esi, [ebp+68h+dwnewlong]
mov     edi, ds:setwindowlongw
push    esi
push    8
push    [ebp+68h+hwnd]
call    edi
push    [ebp+68h+hwnd]
call    sub_69ac40ef
movsx   eax, word ptr [esi+0ah]
cmp     eax, ebx
mov     [ebp+68h+format], eax
jle     short loc_69ac195f
mov     [ebp+68h+var_4], ebx
mov     ebx, ds:enablewindow
mov     esi, ds:getdlgitem
mov     eax, 3e9h
mov     [ebp+68h+arg_8], eax
mov     edx, [ebp+68h+var_4]
lea     ecx, [eax-3e8h]
inc     edx
cmp     ecx, edx
jl      short loc_69ac1993
mov     ecx, [ebp+68h+var_4]
mov     edx, [ebp+68h+format]
add     edx, ecx
lea     ecx, [eax-3e8h]
cmp     ecx, edx
jle     short loc_69ac19dd
push    0
add     eax, 12ch
push    eax
push    [ebp+68h+hwnd]
call    esi
push    eax
call    ebx
mov     eax, [ebp+68h+arg_8]
push    8000000h
push    0fffffff0h
add     eax, 12ch
push    eax
push    [ebp+68h+hwnd]
call    esi
push    eax
call    edi
push    0
push    [ebp+68h+arg_8]
push    [ebp+68h+hwnd]
call    esi
push    eax
call    ebx
push    8000000h
push    0fffffff0h
push    [ebp+68h+arg_8]
push    [ebp+68h+hwnd]
call    esi
push    eax
call    edi
mov     eax, [ebp+68h+arg_8]
inc     eax
lea     ecx, [eax-3e8h]
cmp     ecx, 0fh
mov     [ebp+68h+arg_8], eax
jle     short loc_69ac1973
mov     eax, [ebp+68h+format]
cmp     eax, 1
jl      loc_69ac1a8d
mov     ebx, [ebp+68h+var_4]
mov     ecx, [ebp+68h+dwnewlong]
mov     edi, ds:senddlgitemmessagew
add     ebx, 515h
add     ecx, 0ch
mov     [ebp+68h+var_4], ecx
mov     [ebp+68h+var_c], eax
mov     eax, [ebp+68h+var_4]
movsx   eax, word ptr [eax]
push    0
push    0
push    14bh
push    ebx
push    [ebp+68h+hwnd]
mov     [ebp+68h+arg_4], eax
call    edi
xor     eax, eax
inc     eax
cmp     [ebp+68h+arg_4], eax
mov     [ebp+68h+arg_8], eax
jl      short loc_69ac1a6d
push    [ebp+68h+arg_8]
lea     eax, [ebp+68h+string]
push    offset ad
push    eax
call    ds:swprintf
add     esp, 0ch
lea     eax, [ebp+68h+string]
push    eax
push    0ffffffffh
push    14ah
push    ebx
push    [ebp+68h+hwnd]
call    edi
inc     [ebp+68h+arg_8]
mov     eax, [ebp+68h+arg_8]
cmp     eax, [ebp+68h+arg_4]
jle     short loc_69ac1a36
mov     eax, [ebp+68h+arg_4]
cdq
push    0
sub     eax, edx
sar     eax, 1
push    eax
push    14eh
push    ebx
push    [ebp+68h+hwnd]
call    edi
add     [ebp+68h+var_4], 6
inc     ebx
dec     [ebp+68h+var_c]
jnz     short loc_69ac1a13
push    12ch
lea     eax, [ebp+68h+string]
push    eax
mov     ebx, 3f9h
push    ebx
push    [ebp+68h+hwnd]
call    esi
push    eax
call    ds:getwindowtextw
mov     edi, ds:loadstringw
push    4
lea     eax, [ebp+68h+var_14]
push    eax
mov     eax, [ebp+68h+dwnewlong]
push    9c73h
push    dword ptr [eax+4a4h]
call    edi
test    eax, eax
jz      short loc_69ac1b36
call    ds:getversion
cmp     al, 3
jnz     short loc_69ac1aeb
push    4
lea     eax, [ebp+68h+var_14]
push    eax
mov     eax, [ebp+68h+dwnewlong]
push    9c72h
push    dword ptr [eax+4a4h]
call    edi
cmp     [ebp+68h+format], 1
lea     eax, [ebp+68h+var_14]
push    eax
lea     eax, [ebp+68h+string]
jle     short loc_69ac1b11
push    [ebp+68h+format]
push    eax
lea     eax, [ebp+68h+string]
push    eax
call    ds:swprintf
add     esp, 10h
jmp     short loc_69ac1b22
push    eax
lea     eax, [ebp+68h+string]
push    eax
call    ds:swprintf
add     esp, 0ch
lea     eax, [ebp+68h+string]
push    eax
push    ebx
push    [ebp+68h+hwnd]
call    esi
push    eax
call    ds:setwindowtextw
push    1
push    [ebp+68h+hwnd]
call    esi
push    eax
call    ds:setfocus
jmp     loc_69ac1877
push    ebp
mov     ebp, esp
sub     esp, 140h
push    ebx
push    esi
xor     ebx, ebx
xor     esi, esi
cmp     [ebp+arg_4], 110h
push    edi
mov     edi, [ebp+hwnd]
jz      short loc_69ac1b70
push    8
push    edi
call    ds:getwindowlongw
mov     esi, eax
mov     eax, [ebp+arg_4]
sub     eax, 10h
jz      short loc_69ac1bca
sub     eax, 100h
jz      loc_69ac1c6f
dec     eax
jz      short loc_69ac1bc1
sub     eax, 24h
jz      short loc_69ac1b92
dec     eax
jz      short loc_69ac1bbb
dec     eax
dec     eax
jnz     short loc_69ac1bd3
cmp     esi, ebx
jz      short loc_69ac1bd3
push    0fh
call    ds:getsyscolor
push    eax
push    [ebp+hdc]
call    ds:setbkcolor
push    1
push    [ebp+hdc]
call    ds:setbkmode
mov     eax, [esi+0cdch]
jmp     short loc_69ac1bd5
cmp     esi, ebx
jz      short loc_69ac1bd3
jmp     short loc_69ac1bb3
mov     eax, [ebp+hdc]
dec     eax
jz      short loc_69ac1bdc
dec     eax
jnz     short loc_69ac1bd3
push    2
push    edi
call    ds:enddialog
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn    10h
cmp     esi, ebx
jz      short loc_69ac1bd3
cmp     [esi+4a8h], bx
jnz     short loc_69ac1bfb
cmp     [esi+4aah], bx
jnz     short loc_69ac1bfb
cmp     [esi+4ach], bx
jz      short loc_69ac1c0e
push    esi
mov     [esi+4b4h], bx
call    sub_69ac3f7d
cmp     ax, 1
jz      short loc_69ac1c68
mov     edi, ds:loadstringw
push    50h
lea     eax, [ebp+buffer]
push    eax
push    9c4ch
push    dword ptr [esi+4a4h]
call    edi
push    50h
lea     eax, [ebp+text]
push    eax
push    9c42h
push    dword ptr [esi+4a4h]
call    edi
push    ebx
lea     eax, [ebp+buffer]
push    eax
lea     eax, [ebp+text]
push    eax
push    dword ptr [esi+29ch]
call    ds:messageboxw
push    18fh
push    [ebp+hwnd]
jmp     loc_69ac1bcd
push    1
jmp     loc_69ac1bcc
push    [ebp+dwnewlong]
push    8
push    edi
call    ds:setwindowlongw
push    edi
call    sub_69ac40ef
push    1
push    edi
call    ds:getdlgitem
push    eax
call    ds:setfocus
jmp     loc_69ac1bd3
push    ebp
mov     ebp, esp
push    esi
xor     esi, esi
cmp     [ebp+arg_4], 110h
push    edi
mov     edi, [ebp+hwnd]
jz      short loc_69ac1cb4
push    8
push    edi
call    ds:getwindowlongw
mov     esi, eax
mov     eax, [ebp+arg_4]
sub     eax, 10h
jz      short loc_69ac1d0a
sub     eax, 100h
jz      short loc_69ac1d1f
dec     eax
jz      short loc_69ac1d01
sub     eax, 24h
jz      short loc_69ac1cd2
dec     eax
jz      short loc_69ac1cfb
dec     eax
dec     eax
jnz     short loc_69ac1d13
test    esi, esi
jz      short loc_69ac1d13
push    0fh
call    ds:getsyscolor
push    eax
push    [ebp+hdc]
call    ds:setbkcolor
push    1
push    [ebp+hdc]
call    ds:setbkmode
mov     eax, [esi+0cdch]
jmp     short loc_69ac1d15
test    esi, esi
jz      short loc_69ac1d13
jmp     short loc_69ac1cf3
mov     eax, [ebp+hdc]
dec     eax
jz      short loc_69ac1d1b
dec     eax
jnz     short loc_69ac1d13
push    2
push    edi
call    ds:enddialog
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn    10h
push    1
jmp     short loc_69ac1d0c
push    [ebp+dwnewlong]
push    8
push    edi
call    ds:setwindowlongw
push    edi
call    sub_69ac40ef
push    2
push    edi
call    ds:getdlgitem
push    eax
call    ds:setfocus
jmp     short loc_69ac1d13
push    ebp
mov     ebp, esp
sub     esp, 140h
push    ebx
mov     ebx, [ebp+hwnd]
push    esi
push    edi
xor     edi, edi
xor     esi, esi
cmp     [ebp+arg_4], 110h
jz      short loc_69ac1d6a
push    8
push    ebx
call    ds:getwindowlongw
mov     esi, eax
mov     eax, [ebp+arg_4]
sub     eax, 10h
jz      loc_69ac1ebf
sub     eax, 100h
jz      loc_69ac1ed5
dec     eax
jz      short loc_69ac1dce
sub     eax, 24h
jz      short loc_69ac1d94
dec     eax
jz      short loc_69ac1dc4
dec     eax
dec     eax
jnz     loc_69ac1ec8
cmp     esi, edi
jz      loc_69ac1ec8
push    0fh
call    ds:getsyscolor
push    eax
push    [ebp+hdc]
call    ds:setbkcolor
push    1
push    [ebp+hdc]
call    ds:setbkmode
mov     eax, [esi+0cdch]
jmp     loc_69ac1eca
cmp     esi, edi
jz      loc_69ac1ec8
jmp     short loc_69ac1db9
mov     eax, [ebp+hdc]
dec     eax
jz      loc_69ac1ed1
dec     eax
jz      loc_69ac1ead
sub     eax, 576h
jnz     loc_69ac1ec8
cmp     esi, edi
jz      loc_69ac1ec8
cmp     [esi+4ach], di
jnz     short loc_69ac1e45
mov     edi, ds:isdlgbuttonchecked
push    6a4h
push    ebx
call    edi
test    eax, eax
jz      short loc_69ac1e17
and     word ptr [esi+4b4h], 0
jmp     short loc_69ac1e4c
push    5fah
push    ebx
call    edi
test    eax, eax
jz      short loc_69ac1e2e
mov     word ptr [esi+4b4h], 1
jmp     short loc_69ac1e4c
push    5fbh
push    ebx
call    edi
test    eax, eax
jz      short loc_69ac1e4c
mov     word ptr [esi+4b4h], 2
jmp     short loc_69ac1e4c
mov     [esi+4b4h], di
push    esi
call    sub_69ac3e9d
cmp     ax, 1
jz      short loc_69ac1ed1
mov     edi, ds:loadstringw
push    50h
lea     eax, [ebp+buffer]
push    eax
push    9c4bh
push    dword ptr [esi+4a4h]
call    edi
push    50h
lea     eax, [ebp+text]
push    eax
push    9c42h
push    dword ptr [esi+4a4h]
call    edi
push    0
lea     eax, [ebp+buffer]
push    eax
lea     eax, [ebp+text]
push    eax
push    dword ptr [esi+29ch]
call    ds:messageboxw
push    18fh
jmp     short loc_69ac1ec1
cmp     esi, edi
jz      short loc_69ac1ec8
mov     [esi+4a8h], di
mov     [esi+4aah], di
push    2
push    ebx
call    ds:enddialog
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn    10h
push    1
jmp     short loc_69ac1ec1
mov     edi, [ebp+dwnewlong]
push    edi
push    8
push    ebx
call    ds:setwindowlongw
push    ebx
call    sub_69ac40ef
mov     esi, 6a4h
push    esi
mov     ebx, 5fbh
push    ebx
push    esi
push    [ebp+hwnd]
call    ds:checkradiobutton
push    1
push    esi
push    [ebp+hwnd]
mov     esi, ds:checkdlgbutton
call    esi
push    0
push    5fah
push    [ebp+hwnd]
call    esi
push    0
push    ebx
mov     ebx, [ebp+hwnd]
push    ebx
call    esi
xor     eax, eax
cmp     [edi+4b0h], eax
jz      short loc_69ac1f5d
mov     word ptr [edi+4a8h], 1
mov     word ptr [edi+4aah], 1
push    eax
push    578h
push    111h
push    ebx
mov     word ptr [edi+4ach], 1
call    ds:sendmessagew
jmp     loc_69ac1ec8
cmp     [edi+4a8h], ax
jz      short loc_69ac1f3d
cmp     [edi+4aah], ax
jz      short loc_69ac1f3d
push    578h
push    ebx
call    ds:getdlgitem
push    eax
call    ds:setfocus
jmp     loc_69ac1ec8
push    ebp
mov     ebp, esp
push    esi
xor     esi, esi
cmp     [ebp+arg_4], 110h
push    edi
mov     edi, [ebp+hwnd]
jz      short loc_69ac1fa5
push    8
push    edi
call    ds:getwindowlongw
mov     esi, eax
mov     eax, [ebp+arg_4]
sub     eax, 10h
jz      loc_69ac2035
sub     eax, 100h
jz      short loc_69ac2011
dec     eax
jz      short loc_69ac1ff6
sub     eax, 24h
jz      short loc_69ac1fc7
dec     eax
jz      short loc_69ac1ff0
dec     eax
dec     eax
jnz     short loc_69ac203e
test    esi, esi
jz      short loc_69ac203e
push    0fh
call    ds:getsyscolor
push    eax
push    [ebp+hdc]
call    ds:setbkcolor
push    1
push    [ebp+hdc]
call    ds:setbkmode
mov     eax, [esi+0cdch]
jmp     short loc_69ac2040
test    esi, esi
jz      short loc_69ac203e
jmp     short loc_69ac1fe8
mov     eax, [ebp+hdc]
dec     eax
jz      short loc_69ac200d
dec     eax
jz      short loc_69ac2035
sub     eax, 602h
jnz     short loc_69ac203e
push    604h
jmp     short loc_69ac2037
push    1
jmp     short loc_69ac2037
push    [ebp+dwnewlong]
push    8
push    edi
call    ds:setwindowlongw
push    edi
call    sub_69ac40ef
push    1
push    edi
call    ds:getdlgitem
push    eax
call    ds:setfocus
jmp     short loc_69ac203e
push    2
push    edi
call    ds:enddialog
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn    10h
mov     edx, [esp+arg_0]
push    esi
mov     esi, [edx]
cmp     esi, 0ch
jnz     short loc_69ac2066
mov     cx, [edx+0ah]
xor     eax, eax
cmp     cx, 18h
jz      short loc_69ac2061
inc     eax
shl     eax, cl
lea     eax, [eax+eax*2]
jmp     short loc_69ac2086
cmp     esi, 24h
mov     cx, [edx+0eh]
jb      short loc_69ac2074
mov     eax, [edx+20h]
jmp     short loc_69ac2076
xor     eax, eax
test    eax, eax
jnz     short loc_69ac2083
cmp     cx, 18h
jz      short loc_69ac2083
inc     eax
shl     eax, cl
shl     eax, 2
add     eax, esi
add     eax, edx
pop     esi
retn    4
sub     esp, 0a0h
push    ebx
push    ebp
push    0
lea     eax, [esp+0ach+reopenbuff]
push    eax
push    [esp+0b0h+lpfilename]
call    ds:openfile
mov     ebx, eax
test    ebx, ebx
mov     [esp+0a8h+hfile], ebx
jl      short loc_69ac20d7
push    0eh
lea     eax, [esp+0ach+buffer]
push    eax
push    ebx
call    ds:_lread
cmp     eax, 0eh
jnz     short loc_69ac20d0
cmp     [esp+0a8h+buffer], 4d42h
jz      short loc_69ac20de
push    ebx
call    ds:_lclose
xor     eax, eax
jmp     loc_69ac21bf
mov     ebp, [esp+0a8h+var_96]
push    esi
mov     esi, [esp+0ach+arg_4]
mov     eax, [esi+4c8h]
add     ebp, 0fffffff2h
test    eax, eax
push    edi
mov     edi, ds:globalhandle
jz      short loc_69ac211e
push    eax
call    edi
push    eax
call    ds:globalunlock
push    dword ptr [esi+4c8h]
call    edi
push    eax
call    ds:globalfree
and     dword ptr [esi+4c8h], 0
push    ebp
push    2
call    ds:globalalloc
push    eax
call    ds:globallock
test    eax, eax
mov     [esi+4c8h], eax
jnz     short loc_69ac2141
push    ebx
call    ds:_lclose
jmp     short loc_69ac21bb
and     [esp+0b0h+var_9c], 0
test    ebp, ebp
jbe     short loc_69ac2180
mov     eax, 8000h
cmp     ebp, eax
ja      short loc_69ac2155
mov     eax, ebp
movzx   ebx, ax
mov     eax, [esi+4c8h]
add     eax, [esp+0b0h+var_9c]
push    ebx
push    eax
push    [esp+0b8h+hfile]
call    ds:_lread
cmp     ebx, eax
jnz     short loc_69ac21ca
add     [esp+0b0h+var_9c], ebx
sub     ebp, ebx
test    ebp, ebp
ja      short loc_69ac214a
mov     ebx, [esp+0b0h+hfile]
push    ebx
call    ds:_lclose
mov     eax, [esi+4c8h]
mov     ecx, [eax]
cmp     ecx, 0ch
jb      short loc_69ac219b
jbe     short loc_69ac21bd
cmp     ecx, 10h
jnb     short loc_69ac21bd
push    eax
call    edi
push    eax
call    ds:globalunlock
push    dword ptr [esi+4c8h]
call    edi
push    eax
call    ds:globalfree
and     dword ptr [esi+4c8h], 0
xor     eax, eax
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 0a0h
retn    8
push    [esp+0b0h+hfile]
call    ds:_lclose
push    dword ptr [esi+4c8h]
jmp     short loc_69ac219c
push    ebp
mov     ebp, esp
sub     esp, 3ch
push    ebx
mov     ebx, ds:getsystemmetrics
push    esi
push    edi
push    0
call    ebx
push    1
mov     [ebp+var_14], eax
call    ebx
mov     edi, ds:getdlgitem
push    640h
push    [ebp+hdlg]
mov     [ebp+var_1c], eax
call    edi
mov     esi, ds:getwindowrect
lea     ecx, [ebp+rect]
push    ecx
push    eax
call    esi
mov     eax, [ebp+rect.right]
sub     eax, [ebp+rect.left]
mov     [ebp+x], eax
mov     eax, [ebp+rect.bottom]
sub     eax, [ebp+rect.top]
mov     [ebp+hwnd], eax
lea     eax, [ebp+rect]
push    eax
push    [ebp+hdlg]
call    esi
mov     eax, [ebp+arg_4]
xor     ecx, ecx
cmp     [ebp+x], eax
mov     [ebp+var_4], ecx
jge     short loc_69ac2247
sub     eax, [ebp+x]
add     [ebp+rect.right], eax
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_8]
cmp     [ebp+hwnd], eax
mov     [ebp+var_c], ecx
jge     short loc_69ac225b
sub     eax, [ebp+hwnd]
add     [ebp+rect.bottom], eax
mov     [ebp+var_c], eax
cmp     [ebp+var_4], ecx
jnz     short loc_69ac2269
cmp     [ebp+var_c], ecx
jz      loc_69ac2418
push    8
call    ebx
push    4
mov     [ebp+var_18], eax
call    ebx
mov     ecx, [ebp+var_18]
mov     ebx, [ebp+rect.bottom]
add     ecx, eax
mov     eax, [ebp+rect.left]
mov     [ebp+var_18], ecx
mov     ecx, [ebp+rect.right]
sub     eax, ecx
add     eax, [ebp+var_14]
sub     ecx, [ebp+rect.left]
cdq
sub     eax, edx
sar     eax, 1
mov     [ebp+x], eax
mov     eax, [ebp+rect.top]
sub     eax, ebx
add     eax, [ebp+var_1c]
sub     ebx, [ebp+rect.top]
push    4
push    ebx
mov     ebx, ds:setwindowpos
cdq
push    ecx
sub     eax, edx
sar     eax, 1
push    eax
push    [ebp+x]
mov     [ebp+var_14], eax
push    0
push    [ebp+hdlg]
call    ebx
push    640h
push    [ebp+hdlg]
call    edi
lea     ecx, [ebp+var_2c]
push    ecx
push    eax
mov     [ebp+hwnd], eax
call    esi
cmp     [ebp+var_4], 0
jz      short loc_69ac22e4
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+var_2c.left]
add     ecx, eax
mov     [ebp+var_2c.right], ecx
jmp     short loc_69ac22e7
mov     ecx, [ebp+var_2c.right]
cmp     [ebp+var_c], 0
mov     edx, [ebp+var_2c.top]
jz      short loc_69ac22fa
mov     eax, [ebp+arg_8]
add     eax, edx
mov     [ebp+var_2c.bottom], eax
jmp     short loc_69ac22fd
mov     eax, [ebp+var_2c.bottom]
sub     ecx, [ebp+var_2c.left]
push    2
sub     eax, edx
push    eax
push    ecx
xor     eax, eax
push    eax
push    eax
push    eax
push    [ebp+hwnd]
call    ebx
cmp     [ebp+var_4], 0
jz      short loc_69ac237e
push    708h
push    [ebp+hdlg]
call    edi
lea     ecx, [ebp+var_2c]
push    ecx
push    eax
mov     [ebp+hwnd], eax
call    esi
mov     eax, [ebp+var_2c.right]
add     eax, [ebp+var_4]
mov     ecx, [ebp+var_2c.bottom]
sub     ecx, [ebp+var_2c.top]
push    2
push    ecx
mov     [ebp+var_2c.right], eax
sub     eax, [ebp+var_2c.left]
push    eax
xor     eax, eax
push    eax
push    eax
push    eax
push    [ebp+hwnd]
call    ebx
push    709h
push    [ebp+hdlg]
call    edi
lea     ecx, [ebp+var_2c]
push    ecx
push    eax
mov     [ebp+hwnd], eax
call    esi
mov     eax, [ebp+var_2c.right]
add     eax, [ebp+var_4]
mov     ecx, [ebp+var_2c.bottom]
sub     ecx, [ebp+var_2c.top]
push    2
push    ecx
mov     [ebp+var_2c.right], eax
sub     eax, [ebp+var_2c.left]
push    eax
xor     eax, eax
push    eax
push    eax
push    eax
push    [ebp+hwnd]
call    ebx
push    6a5h
push    [ebp+hdlg]
call    edi
lea     ecx, [ebp+var_2c]
push    ecx
push    eax
mov     [ebp+hwnd], eax
call    esi
mov     eax, [ebp+x]
sub     [ebp+var_2c.left], eax
mov     ecx, [ebp+var_18]
mov     eax, [ebp+var_14]
add     eax, ecx
sub     [ebp+var_2c.top], eax
mov     eax, [ebp+var_4]
xor     ecx, ecx
cmp     eax, ecx
jz      short loc_69ac23b4
cdq
sub     eax, edx
sar     eax, 1
add     [ebp+var_2c.left], eax
mov     eax, [ebp+var_c]
cmp     eax, ecx
jz      short loc_69ac23be
add     [ebp+var_2c.top], eax
push    1
push    ecx
push    ecx
push    [ebp+var_2c.top]
push    [ebp+var_2c.left]
push    ecx
push    [ebp+hwnd]
call    ebx
push    1
push    [ebp+hdlg]
call    edi
mov     edi, eax
lea     eax, [ebp+var_2c]
push    eax
push    edi
call    esi
mov     eax, [ebp+x]
sub     [ebp+var_2c.left], eax
mov     ecx, [ebp+var_18]
mov     eax, [ebp+var_14]
add     eax, ecx
sub     [ebp+var_2c.top], eax
mov     eax, [ebp+var_4]
xor     ecx, ecx
cmp     eax, ecx
jz      short loc_69ac2400
cdq
sub     eax, edx
sar     eax, 1
add     [ebp+var_2c.left], eax
mov     eax, [ebp+var_c]
cmp     eax, ecx
jz      short loc_69ac240a
add     [ebp+var_2c.top], eax
push    1
push    ecx
push    ecx
push    [ebp+var_2c.top]
push    [ebp+var_2c.left]
push    ecx
push    edi
call    ebx
pop     edi
pop     esi
pop     ebx
leave
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 24h
and     [ebp+y1], 0
cmp     [ebp+hpal], 110h
push    ebx
mov     ebx, [ebp+hwnd]
push    esi
push    edi
jz      short loc_69ac2448
push    8
push    ebx
call    ds:getwindowlongw
mov     edi, eax
mov     [ebp+hwnd], edi
jmp     short loc_69ac244b
mov     edi, [ebp+hwnd]
mov     eax, [ebp+hpal]
sub     eax, 10h
jz      loc_69ac27a3
sub     eax, 1bh
jz      loc_69ac255e
sub     eax, 0e5h
jz      short loc_69ac24cb
dec     eax
jz      short loc_69ac24a2
sub     eax, 24h
jz      short loc_69ac247a
dec     eax
jz      short loc_69ac2497
dec     eax
dec     eax
jnz     loc_69ac27ac
push    0fh
call    ds:getsyscolor
push    eax
push    [ebp+hdc]
call    ds:setbkcolor
push    1
push    [ebp+hdc]
call    ds:setbkmode
mov     eax, [edi+0cdch]
jmp     loc_69ac27ae
mov     eax, [ebp+hdc]
dec     eax
jz      short loc_69ac24c4
dec     eax
jz      loc_69ac27a3
sub     eax, 6a3h
jnz     loc_69ac27ac
push    6a5h
jmp     loc_69ac27a5
push    1
jmp     loc_69ac27a5
mov     esi, [ebp+dwnewlong]
push    esi
push    8
push    ebx
call    ds:setwindowlongw
cmp     dword ptr [esi+4b8h], 0
push    ebx
jz      short loc_69ac2544
call    ds:getdc
mov     edi, [esi+4c8h]
push    edi
mov     [ebp+hdc], eax
call    sub_69ac2046
push    0
push    edi
push    eax
push    4
push    edi
push    [ebp+hdc]
call    ds:createdibitmap
mov     edi, eax
test    edi, edi
jz      short loc_69ac2532
lea     eax, [ebp+pv]
push    eax
push    18h
push    edi
call    ds:getobjectw
push    dword ptr [esi+24ch]
push    [ebp+var_20]
push    ebx
call    sub_69ac21dc
push    edi
call    ds:deleteobject
jmp     short loc_69ac2538
push    ebx
call    sub_69ac40ef
push    [ebp+hdc]
push    ebx
call    ds:releasedc
jmp     short loc_69ac2549
call    sub_69ac40ef
push    1
push    ebx
call    ds:getdlgitem
push    eax
call    ds:setfocus
jmp     loc_69ac27ac
mov     esi, [ebp+dwnewlong]
cmp     dword ptr [esi], 4
jnz     loc_69ac27ac
cmp     dword ptr [edi+4b8h], 0
jz      loc_69ac27ac
mov     ebx, [edi+4c8h]
movzx   eax, word ptr [ebx+0eh]
test    eax, eax
mov     [ebp+hpal], 1
jle     short loc_69ac2597
mov     ecx, [ebp+hpal]
add     ecx, ecx
dec     eax
mov     [ebp+hpal], ecx
jnz     short loc_69ac258c
mov     eax, [ebx+20h]
test    eax, eax
jz      short loc_69ac25a1
mov     [ebp+hpal], eax
mov     edi, ds:getdevicecaps
push    0ch
push    dword ptr [esi+18h]
call    edi
cmp     eax, 8
jg      loc_69ac264a
cmp     eax, 4
jle     loc_69ac264a
push    26h
push    dword ptr [esi+18h]
call    edi
test    ah, 1
jz      short loc_69ac264a
mov     eax, [ebp+hpal]
lea     eax, ds:4[eax*4]
push    eax
push    42h
call    ds:globalalloc
push    eax
call    ds:globallock
mov     edi, eax
test    edi, edi
mov     [ebp+hdc], edi
jz      loc_69ac27ac
mov     edx, [ebp+hpal]
test    edx, edx
mov     [edi+2], dx
mov     word ptr [edi], 300h
jle     short loc_69ac2626
lea     eax, [edi+5]
lea     ecx, [ebx+29h]
mov     bl, [ecx+1]
mov     [eax-1], bl
mov     bl, [ecx]
mov     [eax], bl
mov     bl, [ecx-1]
and     byte ptr [eax+2], 0
mov     [eax+1], bl
add     ecx, 4
add     eax, 4
dec     edx
jnz     short loc_69ac2609
push    edi
call    ds:createpalette
push    0
push    eax
push    dword ptr [esi+18h]
mov     [ebp+var_8], eax
call    ds:selectpalette
push    dword ptr [esi+18h]
mov     [ebp+hpal], eax
call    ds:realizepalette
jmp     short loc_69ac2667
and     [ebp+hdc], 0
cmp     [ebp+hpal], 10h
jle     short loc_69ac2667
push    0ch
push    dword ptr [esi+18h]
call    edi
cmp     eax, 4
jg      short loc_69ac2667
mov     [ebp+y1], 1
mov     ebx, [ebp+hwnd]
mov     edi, [ebx+4c8h]
push    edi
call    sub_69ac2046
push    0
push    edi
push    eax
push    4
push    edi
push    dword ptr [esi+18h]
call    ds:createdibitmap
mov     edi, eax
test    edi, edi
mov     [ebp+ho], edi
jz      loc_69ac2760
lea     eax, [ebp+pv]
push    eax
push    18h
push    edi
call    ds:getobjectw
test    byte ptr [esi+0ch], 3
jz      short loc_69ac2713
push    dword ptr [esi+18h]
call    ds:createcompatibledc
push    edi
mov     edi, ds:selectobject
push    eax
mov     [ebp+dwnewlong], eax
call    edi
test    eax, eax
mov     ebx, [ebx+24ch]
mov     [ebp+hwnd], eax
jz      short loc_69ac270a
cmp     [ebp+y1], 0
jz      short loc_69ac26d2
mov     [ebp+y1], ebx
mov     ecx, [esi+1ch]
mov     eax, [esi+24h]
push    0cc0020h
push    [ebp+y1]
sub     eax, ecx
sub     eax, [ebp+var_20]
push    0
push    [ebp+dwnewlong]
cdq
push    ebx
push    [ebp+var_20]
sub     eax, edx
push    dword ptr [esi+20h]
sar     eax, 1
add     eax, ecx
push    eax
push    dword ptr [esi+18h]
call    ds:bitblt
push    [ebp+hwnd]
push    [ebp+dwnewlong]
call    edi
push    [ebp+dwnewlong]
call    ds:deletedc
push    [ebp+ho]
mov     edi, ds:deleteobject
call    edi
xor     eax, eax
cmp     [ebp+hdc], eax
jz      loc_69ac27ac
cmp     [ebp+hpal], eax
jz      short loc_69ac273b
push    eax
push    [ebp+hpal]
push    dword ptr [esi+18h]
call    ds:selectpalette
push    [ebp+var_8]
call    edi
push    [ebp+hdc]
mov     esi, ds:globalhandle
call    esi
push    eax
call    ds:globalunlock
push    [ebp+hdc]
call    esi
push    eax
call    ds:globalfree
jmp     short loc_69ac27ac
cmp     [ebp+hdc], 0
jz      short loc_69ac27ac
push    [ebp+hdc]
mov     edi, ds:globalhandle
call    edi
push    eax
call    ds:globalunlock
push    [ebp+hdc]
call    edi
push    eax
call    ds:globalfree
cmp     [ebp+hpal], 0
jz      short loc_69ac2798
push    0
push    [ebp+hpal]
push    dword ptr [esi+18h]
call    ds:selectpalette
push    [ebp+var_8]
call    ds:deleteobject
jmp     short loc_69ac27ac
push    2
push    ebx
call    ds:enddialog
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn    10h
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+dwinitparam]
push    edi
mov     edi, ds:dialogboxparamw
push    esi
push    offset sub_69ac1c96
push    [ebp+hwndparent]
push    834h
push    dword ptr [esi+4a4h]
call    edi
dec     eax
jz      short loc_69ac27e8
dec     eax
jnz     short loc_69ac27ec
mov     [ebp+dwinitparam], 1
jmp     short loc_69ac27f3
and     [ebp+dwinitparam], 0
cmp     word ptr [ebp+dwinitparam], 0
jz      short loc_69ac27fc
mov     ax, word ptr [ebp+dwinitparam]
jmp     loc_69ac28a1
mov     ax, [esi+48h]
xor     ecx, ecx
push    ebx
mov     cl, al
xor     ebx, ebx
inc     ebx
push    esi
push    offset sub_69ac1d43
push    [ebp+hwndparent]
and     ecx, ebx
mov     [esi+4ach], cx
xor     ecx, ecx
mov     cl, al
sar     cl, 1
push    835h
push    dword ptr [esi+4a4h]
and     ecx, ebx
mov     [esi+4a8h], cx
xor     ecx, ecx
mov     cl, al
sar     cl, 2
sar     eax, 3
and     eax, ebx
mov     [esi+4b0h], eax
and     ecx, ebx
mov     [esi+4aah], cx
call    edi
dec     eax
jz      short loc_69ac2867
dec     eax
jz      short loc_69ac2863
sub     eax, 18dh
jnz     short loc_69ac286b
push    2
pop     eax
jmp     short loc_69ac28a0
mov     eax, ebx
jmp     short loc_69ac28a0
and     [ebp+dwinitparam], 0
push    esi
push    offset sub_69ac1f87
push    [ebp+hwndparent]
push    836h
push    dword ptr [esi+4a4h]
call    edi
dec     eax
jz      short loc_69ac2898
dec     eax
jz      short loc_69ac28a7
sub     eax, 602h
jnz     short loc_69ac289c
mov     dword ptr [esi+4bch], 2
and     [ebp+dwinitparam], 0
mov     ax, word ptr [ebp+dwinitparam]
pop     ebx
pop     edi
pop     esi
pop     ebp
retn    8
mov     [ebp+dwinitparam], ebx
jmp     short loc_69ac289c
push    ebp
mov     ebp, esp
sub     esp, 130h
push    ebx
mov     ebx, [ebp+dwinitparam]
mov     ax, [ebx+22ah]
xor     ecx, ecx
push    esi
mov     cl, al
xor     esi, esi
inc     esi
push    ebx
push    offset sub_69ac1b49
push    [ebp+hwndparent]
and     ecx, esi
mov     [ebx+4ach], cx
xor     ecx, ecx
mov     cl, al
sar     cl, 1
sar     al, 2
push    7d0h
push    dword ptr [ebx+4a4h]
and     ecx, esi
and     eax, esi
mov     [ebx+4a8h], cx
mov     [ebx+4aah], ax
call    ds:dialogboxparamw
dec     eax
jz      short loc_69ac2927
dec     eax
jz      short loc_69ac291f
sub     eax, 18dh
jnz     short loc_69ac292e
mov     [ebp+dwinitparam], 2
jmp     loc_69ac2a32
mov     [ebp+dwinitparam], esi
jmp     loc_69ac2a32
xor     eax, eax
mov     [ebp+dwinitparam], eax
jmp     short loc_69ac2930
xor     eax, eax
cmp     word ptr [ebp+dwinitparam], ax
jnz     loc_69ac2a32
push    edi
push    eax
push    eax
push    12ch
lea     ecx, [ebp+multibytestr]
push    ecx
push    0ffffffffh
lea     ecx, [ebx+2a0h]
push    ecx
push    eax
push    eax
call    ds:widechartomultibyte
or      ecx, 0ffffffffh
xor     eax, eax
lea     edi, [ebp+multibytestr]
repne scasb
or      ecx, 0ffffffffh
dec     edi
mov     esi, offset asc_69ac1168
movsw
lea     edi, [ebx+22ch]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
or      ecx, 0ffffffffh
mov     esi, edi
lea     edx, [ebp+multibytestr]
mov     edi, edx
mov     edx, eax
xor     eax, eax
repne scasb
mov     ecx, edx
shr     ecx, 2
dec     edi
rep movsd
mov     ecx, edx
push    ebx
lea     eax, [ebp+multibytestr]
and     ecx, 3
push    eax
rep movsb
call    sub_69ac208e
test    eax, eax
pop     edi
jz      short loc_69ac29c5
mov     dword ptr [ebx+4b8h], 1
mov     eax, 7d1h
jmp     short loc_69ac29d1
and     dword ptr [ebx+4b8h], 0
mov     eax, 7d2h
push    ebx
push    offset sub_69ac241f
push    [ebp+hwndparent]
push    eax
push    dword ptr [ebx+4a4h]
call    ds:dialogboxparamw
dec     eax
jz      short loc_69ac29fe
dec     eax
jz      short loc_69ac2a3c
sub     eax, 6a3h
jnz     short loc_69ac2a02
mov     dword ptr [ebx+4bch], 3
and     [ebp+dwinitparam], 0
mov     eax, [ebx+4c8h]
test    eax, eax
jz      short loc_69ac2a32
mov     esi, ds:globalhandle
push    eax
call    esi
push    eax
call    ds:globalunlock
push    dword ptr [ebx+4c8h]
call    esi
push    eax
call    ds:globalfree
and     dword ptr [ebx+4c8h], 0
mov     ax, word ptr [ebp+dwinitparam]
pop     esi
pop     ebx
leave
retn    8
mov     [ebp+dwinitparam], 1
jmp     short loc_69ac2a02
mov     eax, ecx
mov     ecx, offset dword_69ac116c
mov     [eax], ecx
mov     [eax+4], ecx
retn
push    esi
mov     esi, [esp+4+arg_0]
cmp     byte ptr [esi], 0
jz      short loc_69ac2a9f
push    ebx
push    edi
lea     ebx, [esi+1]
mov     al, [esi]
cmp     al, 20h
jz      short loc_69ac2a6f
cmp     al, 9
jz      short loc_69ac2a6f
inc     esi
inc     ebx
jmp     short loc_69ac2a98
or      ecx, 0ffffffffh
xor     eax, eax
mov     edi, ebx
repne scasb
not     ecx
dec     ecx
jz      short loc_69ac2a95
or      ecx, 0ffffffffh
mov     edi, ebx
repne scasb
not     ecx
dec     ecx
push    ecx
push    ebx
push    esi
call    ds:memmove
add     esp, 0ch
jmp     short loc_69ac2a98
and     byte ptr [esi], 0
cmp     byte ptr [esi], 0
jnz     short loc_69ac2a61
pop     edi
pop     ebx
pop     esi
retn    4
push    ebx
push    ebp
push    esi
mov     esi, [esp+0ch+str]
push    edi
xor     ebx, ebx
jmp     loc_69ac2b72
push    offset control
push    esi
call    ds:strcspn
cmp     eax, 190h
pop     ecx
pop     ecx
jnb     short loc_69ac2ad1
and     byte ptr [eax+esi], 0
lea     ebx, [ebx+eax+1]
jmp     short loc_69ac2ad5
lea     ebx, [ebx+edi+1]
push    0
push    ebx
push    [esp+18h+hfile]
call    ds:_llseek
or      ecx, 0ffffffffh
xor     eax, eax
xor     edx, edx
mov     edi, esi
repne scasb
not     ecx
dec     ecx
jz      short loc_69ac2b1a
mov     al, [edx+esi]
cmp     al, 80h
jb      short loc_69ac2afc
inc     edx
jmp     short loc_69ac2b09
cmp     al, 61h
jl      short loc_69ac2b09
cmp     al, 7ah
jg      short loc_69ac2b09
sub     al, 20h
mov     [edx+esi], al
or      ecx, 0ffffffffh
xor     eax, eax
inc     edx
mov     edi, esi
repne scasb
not     ecx
dec     ecx
cmp     edx, ecx
jb      short loc_69ac2af2
push    offset substr
push    esi
call    ds:strstr
test    eax, eax
pop     ecx
pop     ecx
jz      short loc_69ac2b2f
and     byte ptr [eax], 0
mov     ebp, esi
mov     al, [ebp+0]
cmp     al, 20h
jz      short loc_69ac2b3c
cmp     al, 9
jnz     short loc_69ac2b3f
inc     ebp
jmp     short loc_69ac2b31
mov     edi, [esp+10h+str2]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
push    ecx
push    [esp+14h+str2]
push    ebp
call    ds:strncmp
add     esp, 0ch
test    eax, eax
jnz     short loc_69ac2b72
push    offset asc_69ac1170
push    ebp
call    ds:strstr
test    eax, eax
pop     ecx
pop     ecx
jnz     short loc_69ac2b93
push    190h
push    esi
push    [esp+18h+hfile]
call    ds:_lread
mov     edi, eax
test    edi, edi
jnz     loc_69ac2ab2
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    0ch
xor     eax, eax
inc     eax
jmp     short loc_69ac2b8c
push    esi
push    edi
push    offset asc_69ac1170
push    [esp+0ch+str]
xor     esi, esi
xor     edi, edi
call    ds:strstr
pop     ecx
pop     ecx
jmp     short loc_69ac2be7
cmp     cl, 0dh
jz      short loc_69ac2bef
cmp     cl, 3bh
jz      short loc_69ac2bef
test    cl, cl
jz      short loc_69ac2bef
cmp     cl, 2ch
jnz     short loc_69ac2bc5
inc     edi
cmp     edi, [esp+8+arg_4]
jg      short loc_69ac2bef
jl      short loc_69ac2be7
cmp     cl, 30h
jl      short loc_69ac2be7
cmp     cl, 39h
jg      short loc_69ac2be7
and     cl, 0fh
movsx   cx, cl
lea     edx, [esi+esi*4]
shl     edx, 1
add     ecx, edx
mov     esi, ecx
inc     eax
mov     cl, [eax]
cmp     cl, 0ah
jnz     short loc_69ac2bb1
pop     edi
mov     ax, si
pop     esi
retn    8
push    esi
push    offset asc_69ac1170
push    [esp+8+str]
xor     esi, esi
call    ds:strstr
pop     ecx
pop     ecx
inc     eax
mov     cl, [eax]
cmp     cl, 20h
jz      short loc_69ac2c18
cmp     cl, 9
jnz     short loc_69ac2c38
cmp     cl, 0ah
jz      short loc_69ac2c2b
cmp     cl, 0dh
jz      short loc_69ac2c2b
cmp     cl, 3bh
jz      short loc_69ac2c2b
test    cl, cl
jnz     short loc_69ac2c0b
mov     eax, [esp+4+arg_4]
and     byte ptr [eax], 0
xor     eax, eax
pop     esi
retn    8
mov     edx, [esp+4+arg_4]
jmp     short loc_69ac2c65
cmp     cl, 9
jz      short loc_69ac2c6c
cmp     cl, 2ch
jz      short loc_69ac2c6c
cmp     cl, 0ah
jz      short loc_69ac2c6c
cmp     cl, 0dh
jz      short loc_69ac2c6c
cmp     cl, 3bh
jz      short loc_69ac2c6c
test    cl, cl
jz      short loc_69ac2c6c
mov     [esi+edx], cl
inc     esi
cmp     esi, 20h
jge     short loc_69ac2c75
inc     eax
mov     cl, [eax]
cmp     cl, 20h
jnz     short loc_69ac2c3e
and     byte ptr [esi+edx], 0
xor     eax, eax
inc     eax
jmp     short loc_69ac2c34
and     byte ptr [esi+edx], 0
jmp     short loc_69ac2c32
push    ebx
mov     ebx, ds:globalalloc
push    ebp
push    esi
push    edi
mov     edi, [esp+10h+arg_0]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
add     ecx, 3
push    ecx
push    42h
call    ebx
mov     ebp, ds:globallock
push    eax
call    ebp
test    eax, eax
mov     esi, [esp+10h+arg_8]
mov     [esi], eax
jz      short loc_69ac2ceb
mov     edi, [esp+10h+arg_4]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
add     ecx, 3
push    ecx
push    42h
call    ebx
push    eax
call    ebp
test    eax, eax
mov     [esi+4], eax
jnz     short loc_69ac2cef
push    dword ptr [esi]
mov     edi, ds:globalhandle
call    edi
push    eax
call    ds:globalunlock
push    dword ptr [esi]
call    edi
push    eax
call    ds:globalfree
and     dword ptr [esi], 0
xor     eax, eax
jmp     short loc_69ac2cf2
xor     eax, eax
inc     eax
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    0ch
push    ebx
mov     ebx, ds:globalunlock
push    ebp
mov     ebp, ds:globalfree
push    esi
mov     esi, [esp+0ch+arg_0]
mov     eax, [esi]
test    eax, eax
push    edi
mov     edi, ds:globalhandle
jz      short loc_69ac2d29
push    eax
call    edi
push    eax
call    ebx
push    dword ptr [esi]
call    edi
push    eax
call    ebp
and     dword ptr [esi], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_69ac2d42
push    eax
call    edi
push    eax
call    ebx
push    dword ptr [esi+4]
call    edi
push    eax
call    ebp
and     dword ptr [esi+4], 0
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    4
mov     ecx, [esp+arg_0]
jmp     short loc_69ac2d5e
mov     al, [ecx]
cmp     al, 61h
jl      short loc_69ac2d5d
cmp     al, 7ah
jg      short loc_69ac2d5d
sub     al, 20h
mov     [ecx], al
inc     ecx
cmp     byte ptr [ecx], 0
jnz     short loc_69ac2d4f
retn    4
mov     al, [esp+arg_0]
cmp     al, 30h
jb      short loc_69ac2d72
cmp     al, 39h
jbe     short loc_69ac2d7a
cmp     al, 41h
jb      short loc_69ac2d7f
cmp     al, 46h
ja      short loc_69ac2d7f
xor     eax, eax
inc     eax
jmp     short locret_69ac2d81
xor     eax, eax
retn    4
mov     al, [esp+arg_0]
cmp     al, 30h
jb      short loc_69ac2d98
cmp     al, 39h
ja      short loc_69ac2d98
movzx   eax, al
sub     eax, 30h
jmp     short locret_69ac2daa
cmp     al, 41h
jb      short loc_69ac2da8
cmp     al, 46h
ja      short loc_69ac2da8
movzx   eax, al
sub     eax, 37h
jmp     short locret_69ac2daa
xor     eax, eax
retn    4
push    ebp
mov     ebp, esp
sub     esp, 50ch
push    ebx
push    esi
push    edi
push    7f02h
xor     ebx, ebx
push    ebx
mov     [ebp+var_18], ecx
call    ds:loadcursorw
push    eax
call    ds:setcursor
push    40h
pop     ecx
push    ebx
push    ebx
mov     hcursor, eax
xor     eax, eax
push    0c8h
lea     edi, [ebp+var_3f4]
rep stosd
lea     eax, [ebp+multibytestr]
push    eax
push    0ffffffffh
push    [ebp+lpwidecharstr]
push    ebx
push    ebx
call    ds:widechartomultibyte
xor     eax, eax
or      ecx, 0ffffffffh
lea     edi, [ebp+multibytestr]
repne scasb
dec     edi
mov     esi, offset asc_69ac1168
movsw
or      ecx, 0ffffffffh
lea     edi, [ebp+multibytestr]
repne scasb
dec     edi
mov     esi, offset aepdxt
movsd
movsd
lea     eax, [ebp+var_50c]
movsd
push    eax
lea     eax, [ebp+multibytestr]
push    eax
movsb
call    ds:_findfirst
mov     esi, eax
cmp     esi, 0ffffffffh
pop     ecx
pop     ecx
jz      short loc_69ac2e47
xor     eax, eax
cmp     eax, ebx
jnz     loc_69ac2ee4
push    41h
pop     edi
lea     eax, [ebp+str]
push    offset asc_69ac11a8
push    eax
call    ds:strstr
cmp     eax, ebx
pop     ecx
pop     ecx
jz      short loc_69ac2ecc
movsx   ecx, byte ptr [eax-2]
cmp     ecx, 61h
movsx   eax, byte ptr [eax-1]
jl      short loc_69ac2e7a
sub     ecx, 20h
cmp     eax, 61h
jl      short loc_69ac2e82
sub     eax, 20h
push    30h
pop     edx
cmp     ecx, edx
jl      short loc_69ac2e8e
cmp     ecx, 39h
jle     short loc_69ac2e97
cmp     ecx, edi
jl      short loc_69ac2ecc
cmp     ecx, 46h
jg      short loc_69ac2ecc
cmp     eax, edx
jl      short loc_69ac2ea0
cmp     eax, 39h
jle     short loc_69ac2ea9
cmp     eax, edi
jl      short loc_69ac2ecc
cmp     eax, 46h
jg      short loc_69ac2ecc
cmp     ecx, edi
jl      short loc_69ac2eb2
sub     ecx, 37h
jmp     short loc_69ac2eb4
sub     ecx, edx
cmp     eax, edi
jl      short loc_69ac2ebd
sub     eax, 37h
jmp     short loc_69ac2ebf
sub     eax, edx
shl     ecx, 4
add     ecx, eax
mov     [ebp+ecx+var_3f4], 1
lea     eax, [ebp+var_50c]
push    eax
push    esi
call    ds:_findnext
test    eax, eax
pop     ecx
pop     ecx
jz      loc_69ac2e52
push    esi
call    ds:_findclose
or      [ebp+var_10], 0ffffffffh
pop     ecx
mov     [ebp+var_8], ebx
mov     eax, [ebp+var_8]
cmp     [ebp+eax+var_3f4], bl
jz      loc_69ac3160
push    ebx
push    ebx
push    0c8h
lea     eax, [ebp+multibytestr]
push    eax
push    0ffffffffh
push    [ebp+lpwidecharstr]
push    ebx
push    ebx
call    ds:widechartomultibyte
push    [ebp+var_8]
lea     eax, [ebp+buffer]
push    offset format
push    eax
call    ds:sprintf
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 0ch
lea     edi, [ebp+multibytestr]
repne scasb
or      ecx, 0ffffffffh
dec     edi
mov     esi, offset asc_69ac1168
movsw
lea     edi, [ebp+buffer]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
or      ecx, 0ffffffffh
mov     esi, edi
lea     edx, [ebp+multibytestr]
mov     edi, edx
mov     edx, eax
xor     eax, eax
repne scasb
mov     ecx, edx
shr     ecx, 2
dec     edi
rep movsd
mov     ecx, edx
push    ebx
lea     eax, [ebp+multibytestr]
and     ecx, 3
push    eax
rep movsb
call    ds:_lopen
cmp     eax, 0ffffffffh
mov     [ebp+hfile], eax
jnz     loc_69ac3021
push    ebx
push    ebx
push    0c8h
lea     eax, [ebp+multibytestr]
push    eax
push    0ffffffffh
push    [ebp+lpwidecharstr]
push    ebx
push    ebx
call    ds:widechartomultibyte
push    [ebp+var_8]
lea     eax, [ebp+buffer]
push    offset aepnuti02xdxt
push    eax
call    ds:sprintf
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 0ch
lea     edi, [ebp+multibytestr]
repne scasb
or      ecx, 0ffffffffh
dec     edi
mov     esi, offset asc_69ac1168
movsw
lea     edi, [ebp+buffer]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
or      ecx, 0ffffffffh
mov     esi, edi
lea     edx, [ebp+multibytestr]
mov     edi, edx
mov     edx, eax
xor     eax, eax
repne scasb
mov     ecx, edx
shr     ecx, 2
dec     edi
rep movsd
mov     ecx, edx
push    ebx
lea     eax, [ebp+multibytestr]
and     ecx, 3
push    eax
rep movsb
call    ds:_lopen
cmp     eax, 0ffffffffh
mov     [ebp+hfile], eax
jz      loc_69ac3160
push    100h
lea     eax, [ebp+var_1f4]
push    eax
push    [ebp+hfile]
xor     edi, edi
call    ds:_lread
mov     esi, eax
cmp     esi, ebx
jz      loc_69ac3157
jmp     short loc_69ac3047
mov     edi, [ebp+var_4]
lea     eax, [ebp+var_1f4]
push    offset control
push    eax
call    ds:strcspn
cmp     eax, 100h
pop     ecx
pop     ecx
jnb     short loc_69ac306f
mov     [ebp+eax+var_1f4], bl
lea     eax, [edi+eax+1]
jmp     short loc_69ac3073
lea     eax, [edi+esi+1]
push    ebx
push    eax
push    [ebp+hfile]
mov     [ebp+var_4], eax
call    ds:_llseek
or      ecx, 0ffffffffh
xor     eax, eax
lea     edi, [ebp+var_1f4]
repne scasb
not     ecx
dec     ecx
cmp     ecx, 7fh
jbe     short loc_69ac30a3
mov     [ebp+var_176], 0ah
mov     [ebp+var_175], bl
xor     eax, eax
mov     cl, [ebp+eax+var_1f4]
mov     [ebp+eax+str1], cl
inc     eax
cmp     cl, bl
jnz     short loc_69ac30a5
mov     ecx, [ebp+var_18]
lea     eax, [ebp+str1]
push    eax
call    sub_69ac2a52
push    5
lea     eax, [ebp+str1]
push    offset str2
push    eax
call    ds:strncmp
add     esp, 0ch
test    eax, eax
jnz     short loc_69ac3138
mov     edi, offset asc_69ac117c
lea     eax, [ebp+var_1f4]
push    edi
push    eax
call    ds:strstr
lea     esi, [eax+1]
push    edi
push    esi
call    ds:strcspn
mov     edi, [ebp+str2]
or      ecx, 0ffffffffh
mov     [ebp+var_14], eax
xor     eax, eax
repne scasb
not     ecx
dec     ecx
push    ecx
push    [ebp+str2]
push    esi
call    ds:strncmp
add     esp, 1ch
test    eax, eax
jnz     short loc_69ac3138
mov     edi, [ebp+str2]
or      ecx, 0ffffffffh
repne scasb
not     ecx
dec     ecx
cmp     [ebp+var_14], ecx
jnz     short loc_69ac3138
mov     eax, [ebp+var_8]
mov     [ebp+var_10], eax
push    100h
lea     eax, [ebp+var_1f4]
push    eax
push    [ebp+hfile]
call    ds:_lread
mov     esi, eax
cmp     esi, ebx
jnz     loc_69ac3044
push    [ebp+hfile]
call    ds:_lclose
inc     [ebp+var_8]
cmp     [ebp+var_8], 0ffh
jle     loc_69ac2ef3
push    hcursor
call    ds:setcursor
mov     eax, [ebp+var_10]
pop     edi
pop     esi
pop     ebx
leave
retn    8
push    ebx
push    offset asc_69ac1170
push    [esp+8+str]
xor     ebx, ebx
call    ds:strstr
pop     ecx
pop     ecx
mov     edx, eax
inc     edx
mov     al, [edx]
cmp     al, 20h
jz      short loc_69ac31a7
cmp     al, 9
jnz     short loc_69ac31bd
cmp     al, 0ah
jz      short loc_69ac31b7
cmp     al, 0dh
jz      short loc_69ac31b7
cmp     al, 3bh
jz      short loc_69ac31b7
test    al, al
jnz     short loc_69ac319c
xor     eax, eax
pop     ebx
retn    8
push    ebp
push    esi
push    edi
push    edx
call    sub_69ac2d49
mov     edi, edx
xor     ecx, ecx
test    ecx, ecx
jz      short loc_69ac31eb
mov     al, [edx]
cmp     al, 2ch
jz      short loc_69ac31e8
cmp     al, 20h
jz      short loc_69ac31e8
cmp     al, 0ah
jz      short loc_69ac31e8
cmp     al, 0dh
jz      short loc_69ac31e8
cmp     al, 3bh
jz      short loc_69ac31e8
test    al, al
jnz     short loc_69ac31eb
inc     ebx
xor     ecx, ecx
mov     al, [edx]
cmp     al, 0ah
jz      short loc_69ac320d
cmp     al, 0dh
jz      short loc_69ac320d
cmp     al, 3bh
jz      short loc_69ac320d
test    al, al
jz      short loc_69ac320d
push    eax
call    sub_69ac2d66
test    eax, eax
jz      short loc_69ac320a
xor     ecx, ecx
inc     ecx
inc     edx
jmp     short loc_69ac31ca
mov     esi, [esp+10h+arg_4]
mov     [esi+40h], bx
xor     ebx, ebx
xor     edx, edx
xor     ebp, ebp
test    ebp, ebp
jz      short loc_69ac3244
mov     al, [edi]
cmp     al, 2ch
jz      short loc_69ac3239
cmp     al, 20h
jz      short loc_69ac3239
cmp     al, 0ah
jz      short loc_69ac3239
cmp     al, 0dh
jz      short loc_69ac3239
cmp     al, 3bh
jz      short loc_69ac3239
test    al, al
jnz     short loc_69ac3244
movsx   eax, bx
mov     [eax+esi], dl
inc     ebx
xor     edx, edx
xor     ebp, ebp
mov     cl, [edi]
cmp     cl, 0ah
jz      short loc_69ac3274
cmp     cl, 0dh
jz      short loc_69ac3274
cmp     cl, 3bh
jz      short loc_69ac3274
test    cl, cl
jz      short loc_69ac3274
push    ecx
call    sub_69ac2d66
test    eax, eax
jz      short loc_69ac3271
push    ecx
call    sub_69ac2d84
shl     edx, 4
xor     ebp, ebp
add     edx, eax
inc     ebp
inc     edi
jmp     short loc_69ac321b
pop     edi
xor     eax, eax
pop     esi
inc     eax
pop     ebp
jmp     loc_69ac31b9
push    ebp
lea     ebp, [esp-68h]
sub     esp, 42ch
mov     eax, [ebp+68h+hfile]
push    ebx
mov     ebx, ecx
mov     ecx, [ebp+68h+hinstance]
push    esi
mov     esi, [ebp+68h+arg_8]
push    edi
mov     [ebx+4], ecx
mov     [ebx+0ch], esi
mov     [ebx], eax
mov     ecx, [esi+4a4h]
lea     edi, [esi+2a0h]
push    edi
mov     [ebp+68h+hinstance], ecx
push    eax
mov     ecx, ebx
call    sub_69ac2dad
cmp     eax, 0ffffffffh
mov     [ebp+68h+var_4], eax
jnz     short loc_69ac32ee
push    50h
lea     eax, [ebp+68h+buffer]
push    eax
push    9c40h
push    [ebp+68h+hinstance]
call    ds:loadstringw
push    0
push    [ebp+68h+lpcaption]
lea     eax, [ebp+68h+buffer]
push    eax
push    dword ptr [esi+29ch]
jmp     loc_69ac38be
xor     eax, eax
push    eax
push    eax
push    12ch
lea     ecx, [ebp+68h+multibytestr]
push    ecx
push    0ffffffffh
push    edi
push    eax
push    eax
call    ds:widechartomultibyte
push    [ebp+68h+var_4]
lea     eax, [ebp+68h+var_2c]
push    offset format
push    eax
call    ds:sprintf
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 0ch
lea     edi, [ebp+68h+multibytestr]
repne scasb
or      ecx, 0ffffffffh
dec     edi
mov     esi, offset asc_69ac1168
movsw
lea     edi, [ebp+68h+var_2c]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
or      ecx, 0ffffffffh
mov     esi, edi
lea     edx, [ebp+68h+multibytestr]
mov     edi, edx
mov     edx, eax
xor     eax, eax
repne scasb
mov     ecx, edx
shr     ecx, 2
dec     edi
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
xor     esi, esi
push    esi
lea     eax, [ebp+68h+multibytestr]
push    eax
call    ds:_lopen
cmp     eax, 0ffffffffh
mov     [ebp+68h+hfile], eax
jnz     loc_69ac3431
push    esi
push    esi
push    12ch
lea     eax, [ebp+68h+multibytestr]
push    eax
mov     eax, [ebp+68h+arg_8]
push    0ffffffffh
add     eax, 2a0h
push    eax
push    esi
push    esi
call    ds:widechartomultibyte
push    [ebp+68h+var_4]
lea     eax, [ebp+68h+var_2c]
push    offset aepnuti02xdxt
push    eax
call    ds:sprintf
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 0ch
lea     edi, [ebp+68h+multibytestr]
repne scasb
or      ecx, 0ffffffffh
dec     edi
mov     esi, offset asc_69ac1168
movsw
lea     edi, [ebp+68h+var_2c]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
or      ecx, 0ffffffffh
mov     esi, edi
mov     [ebp+68h+hfile], eax
xor     eax, eax
lea     edx, [ebp+68h+multibytestr]
mov     edi, edx
mov     edx, [ebp+68h+hfile]
repne scasb
mov     ecx, edx
shr     ecx, 2
dec     edi
rep movsd
push    eax
mov     ecx, edx
lea     eax, [ebp+68h+multibytestr]
and     ecx, 3
push    eax
rep movsb
call    ds:_lopen
cmp     eax, 0ffffffffh
mov     [ebp+68h+hfile], eax
jnz     short loc_69ac342f
push    50h
lea     eax, [ebp+68h+text]
push    eax
push    9c40h
push    [ebp+68h+hinstance]
call    ds:loadstringw
push    0
jmp     loc_69ac38ae
xor     esi, esi
push    dword ptr [ebx+0ch]
push    dword ptr [ebx+4]
push    dword ptr [ebx]
call    sub_69ac2c7b
test    eax, eax
jz      loc_69ac387d
mov     eax, [ebx+0ch]
mov     ecx, [ebx]
mov     edx, [eax]
mov     al, [ecx]
inc     ecx
mov     [edx], al
inc     edx
test    al, al
jnz     short loc_69ac344d
mov     eax, [ebx+0ch]
mov     ecx, [ebx+4]
mov     edx, [eax+4]
mov     al, [ecx]
inc     ecx
mov     [edx], al
inc     edx
test    al, al
jnz     short loc_69ac3460
mov     eax, [ebx+0ch]
mov     esi, offset asuper
lea     edi, [ebp+68h+str2]
movsd
movsw
xor     esi, esi
mov     [eax+8], si
lea     eax, [ebp+68h+str2]
push    eax
lea     eax, [ebp+68h+str]
push    eax
push    [ebp+68h+hfile]
call    sub_69ac2aa3
test    eax, eax
jz      short loc_69ac34b6
lea     eax, [ebp+68h+str]
push    offset aon
push    eax
call    ds:strstr
test    eax, eax
pop     ecx
pop     ecx
jz      short loc_69ac34b6
mov     eax, [ebx+0ch]
mov     word ptr [eax+8], 1
push    esi
push    esi
push    [ebp+68h+hfile]
call    ds:_llseek
mov     eax, [ebx+0ch]
mov     esi, offset ad4offcommand
lea     edi, [ebp+68h+str2]
movsd
movsd
movsd
movsb
or      word ptr [eax+290h], 0ffffh
lea     eax, [ebp+68h+str2]
push    eax
lea     eax, [ebp+68h+str]
push    eax
push    [ebp+68h+hfile]
call    sub_69ac2aa3
test    eax, eax
jz      short loc_69ac3504
mov     eax, [ebx+0ch]
add     eax, 250h
push    eax
lea     eax, [ebp+68h+str]
push    eax
call    sub_69ac3186
mov     esi, ds:_llseek
xor     edi, edi
push    edi
push    edi
push    [ebp+68h+hfile]
call    esi
mov     eax, ds:dword_69ac121c
mov     dword ptr [ebp+68h+str2], eax
mov     eax, ds:dword_69ac1220
mov     [ebp+68h+var_14], eax
lea     eax, [ebp+68h+str2]
push    eax
lea     eax, [ebp+68h+str]
push    eax
push    [ebp+68h+hfile]
call    sub_69ac2aa3
test    eax, eax
jz      loc_69ac3672
push    edi
lea     eax, [ebp+68h+str]
push    eax
call    sub_69ac2b98
mov     ecx, [ebx+0ch]
mov     [ecx+0ah], ax
mov     eax, [ebx+0ch]
mov     cx, [eax+0ah]
cmp     cx, di
jle     loc_69ac388a
cmp     cx, 0ah
jg      loc_69ac388a
push    edi
push    edi
push    [ebp+68h+hfile]
call    esi
mov     ecx, [ebx+0ch]
xor     eax, eax
cmp     [ecx+0ah], di
jle     loc_69ac363e
xor     esi, esi
inc     eax
push    eax
push    offset aitem
mov     [ebp+68h+var_4], eax
lea     eax, [ebp+68h+str2]
push    offset asd
push    eax
call    ds:sprintf
add     esp, 10h
lea     eax, [ebp+68h+str2]
push    eax
lea     eax, [ebp+68h+str]
push    eax
push    [ebp+68h+hfile]
call    sub_69ac2aa3
test    eax, eax
jz      loc_69ac3672
mov     eax, [ebx+0ch]
mov     [esi+eax+0ch], di
mov     eax, [ebx+0ch]
mov     [esi+eax+0eh], di
mov     eax, [ebx+0ch]
mov     [esi+eax+10h], di
push    edi
lea     eax, [ebp+68h+str]
push    eax
call    sub_69ac2b98
mov     ecx, [ebx+0ch]
mov     [esi+ecx+0ch], ax
push    1
lea     eax, [ebp+68h+str]
push    eax
call    sub_69ac2b98
mov     ecx, [ebx+0ch]
mov     [esi+ecx+0eh], ax
push    2
lea     eax, [ebp+68h+str]
push    eax
call    sub_69ac2b98
mov     ecx, [ebx+0ch]
mov     [esi+ecx+10h], ax
mov     eax, [ebx+0ch]
cmp     [esi+eax+0ch], di
jz      short loc_69ac3672
push    edi
push    edi
push    [ebp+68h+hfile]
call    ds:_llseek
mov     ecx, [ebx+0ch]
movsx   ecx, word ptr [ecx+0ah]
mov     eax, [ebp+68h+var_4]
add     esi, 6
cmp     eax, ecx
jl      loc_69ac3584
mov     eax, [ebx+0ch]
mov     esi, offset aheadclean
lea     edi, [ebp+68h+str2]
movsd
movsd
movsw
xor     esi, esi
mov     [eax+48h], si
lea     eax, [ebp+68h+str2]
push    eax
lea     eax, [ebp+68h+str]
push    eax
push    [ebp+68h+hfile]
call    sub_69ac2aa3
test    eax, eax
jnz     short loc_69ac367a
push    dword ptr [ebx+0ch]
jmp     loc_69ac37d7
push    dword ptr [ebx+0ch]
jmp     loc_69ac388b
mov     edi, ds:strstr
lea     eax, [ebp+68h+str]
push    offset aall
push    eax
call    edi
test    eax, eax
pop     ecx
pop     ecx
jz      short loc_69ac369b
mov     eax, [ebx+0ch]
or      byte ptr [eax+48h], 1
lea     eax, [ebp+68h+str]
push    offset ablack
push    eax
call    edi
test    eax, eax
pop     ecx
pop     ecx
jz      short loc_69ac36b6
mov     eax, [ebx+0ch]
or      byte ptr [eax+48h], 2
lea     eax, [ebp+68h+str]
push    offset acolor
push    eax
call    edi
test    eax, eax
pop     ecx
pop     ecx
jz      short loc_69ac36d1
mov     eax, [ebx+0ch]
or      byte ptr [eax+48h], 4
lea     eax, [ebp+68h+str]
push    offset aboth
push    eax
call    edi
test    eax, eax
pop     ecx
pop     ecx
jz      short loc_69ac36ec
mov     eax, [ebx+0ch]
or      byte ptr [eax+48h], 8
mov     eax, [ebx+0ch]
cmp     [eax+48h], si
jz      loc_69ac37d6
push    esi
push    esi
push    [ebp+68h+hfile]
call    ds:_llseek
mov     ecx, [ebx+0ch]
mov     esi, offset acleaningtime
lea     edi, [ebp+68h+str2]
movsd
movsd
movsd
xor     eax, eax
movsb
mov     [ecx+4ah], ax
mov     ecx, [ebx+0ch]
push    eax
mov     [ecx+0eah], ax
mov     ecx, [ebx+0ch]
push    eax
push    [ebp+68h+hfile]
mov     [ecx+18ah], ax
call    ds:_llseek
mov     eax, [ebx+0ch]
mov     esi, offset atestpattern
lea     edi, [ebp+68h+str2]
movsd
movsd
movsd
xor     esi, esi
mov     [eax+22ah], si
lea     eax, [ebp+68h+str2]
push    eax
lea     eax, [ebp+68h+str]
push    eax
push    [ebp+68h+hfile]
call    sub_69ac2aa3
test    eax, eax
jz      loc_69ac366a
mov     edi, ds:strstr
lea     eax, [ebp+68h+str]
push    offset aall
push    eax
call    edi
test    eax, eax
pop     ecx
pop     ecx
jz      short loc_69ac378e
mov     eax, [ebx+0ch]
or      byte ptr [eax+22ah], 1
lea     eax, [ebp+68h+str]
push    offset ablack
push    eax
call    edi
test    eax, eax
pop     ecx
pop     ecx
jz      short loc_69ac37ac
mov     eax, [ebx+0ch]
or      byte ptr [eax+22ah], 2
lea     eax, [ebp+68h+str]
push    offset acolor
push    eax
call    edi
test    eax, eax
pop     ecx
pop     ecx
jz      short loc_69ac37ca
mov     eax, [ebx+0ch]
or      byte ptr [eax+22ah], 4
mov     eax, [ebx+0ch]
cmp     [eax+22ah], si
jnz     short loc_69ac37ff
push    eax
call    sub_69ac2cf9
push    [ebp+68h+hfile]
call    ds:_lclose
push    50h
lea     eax, [ebp+68h+text]
push    eax
push    9c40h
push    [ebp+68h+hinstance]
call    ds:loadstringw
push    esi
jmp     loc_69ac38ae
push    esi
push    esi
push    [ebp+68h+hfile]
call    ds:_llseek
mov     eax, [ebx+0ch]
mov     esi, offset abitmapfile
lea     edi, [ebp+68h+str2]
movsd
movsd
movsw
movsb
and     byte ptr [eax+22ch], 0
lea     eax, [ebp+68h+str2]
push    eax
lea     eax, [ebp+68h+str]
push    eax
push    [ebp+68h+hfile]
call    sub_69ac2aa3
test    eax, eax
jz      short loc_69ac384d
mov     eax, [ebx+0ch]
add     eax, 22ch
push    eax
lea     eax, [ebp+68h+str]
push    eax
call    sub_69ac2bf7
xor     esi, esi
inc     esi
push    esi
lea     eax, [ebp+68h+str]
push    eax
call    sub_69ac2b98
mov     ecx, [ebx+0ch]
movsx   eax, ax
mov     [ecx+24ch], eax
mov     ebx, [ebx+0ch]
lea     eax, [ebx+24ch]
mov     ecx, 96h
cmp     [eax], ecx
jge     short loc_69ac387d
mov     [eax], ecx
push    [ebp+68h+hfile]
call    ds:_lclose
mov     eax, esi
jmp     short loc_69ac38c6
push    eax
call    sub_69ac2cf9
push    [ebp+68h+hfile]
call    ds:_lclose
push    50h
lea     eax, [ebp+68h+text]
push    eax
push    9c40h
push    [ebp+68h+hinstance]
call    ds:loadstringw
push    edi
push    [ebp+68h+lpcaption]
lea     eax, [ebp+68h+text]
push    eax
mov     eax, [ebp+68h+arg_8]
push    dword ptr [eax+29ch]
call    ds:messageboxw
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     ebp, 68h
leave
retn    10h
push    esi
mov     esi, [esp+4+arg_8]
push    esi
push    0
push    [esp+0ch+arg_4]
push    [esp+10h+pprintername]
call    sub_69ac4427
test    eax, eax
mov     [esi+4c4h], eax
jnz     short loc_69ac38f5
mov     ax, 0fffdh
jmp     short loc_69ac390e
push    esi
push    eax
call    sub_69ac44a9
xor     ecx, ecx
test    ax, ax
setnle  cl
lea     ecx, ds:0fffffffdh[ecx*4]
mov     ax, cx
pop     esi
retn    0ch
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_4]
test    bx, bx
jnz     short loc_69ac3927
mov     ax, 1
jmp     loc_69ac39fc
cmp     bx, 0ffffh
jnz     short loc_69ac3958
mov     eax, [ebp+arg_8]
lea     ecx, [eax+0cd8h]
xor     edx, edx
mov     dx, [ecx]
and     word ptr [ecx], 0
push    eax
lea     ecx, [eax+4d8h]
push    edx
push    ecx
push    dword ptr [eax+4c4h]
call    sub_69ac4509
jmp     loc_69ac39fc
cmp     [ebp+pbuf], 0
jnz     short loc_69ac3966
xor     ax, ax
jmp     loc_69ac39fc
push    esi
mov     esi, [ebp+arg_8]
xor     eax, eax
mov     ax, [esi+0cd8h]
movzx   ecx, ax
movsx   edx, bx
push    edi
add     ecx, edx
mov     edi, 800h
cmp     ecx, edi
jle     short loc_69ac39cd
push    esi
push    eax
lea     eax, [esi+4d8h]
push    eax
push    dword ptr [esi+4c4h]
call    sub_69ac4509
test    ax, ax
jg      short loc_69ac39a4
mov     ax, 0fffdh
jmp     short loc_69ac39fa
and     word ptr [esi+0cd8h], 0
jmp     short loc_69ac39c8
push    esi
push    edi
push    [ebp+pbuf]
push    dword ptr [esi+4c4h]
call    sub_69ac4509
test    ax, ax
jle     short loc_69ac399e
sub     ebx, edi
add     [ebp+pbuf], edi
cmp     bx, di
jg      short loc_69ac39ae
test    bx, bx
movzx   eax, word ptr [esi+0cd8h]
lea     eax, [eax+esi+4d8h]
jbe     short loc_69ac39ef
mov     ecx, [ebp+pbuf]
movzx   edi, bx
mov     dl, [ecx]
mov     [eax], dl
inc     eax
inc     ecx
dec     edi
jnz     short loc_69ac39e6
add     [esi+0cd8h], bx
mov     ax, 1
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    0ch
push    esi
mov     esi, [esp+4+arg_8]
push    esi
push    5
push    offset dword_69ac5044
call    sub_69ac3912
push    esi
push    1
lea     eax, [esp+0ch+pbuf]
push    eax
call    sub_69ac3912
push    esi
push    1
push    offset dword_69ac1240
call    sub_69ac3912
push    esi
push    1
lea     eax, [esp+0ch+arg_4]
push    eax
call    sub_69ac3912
pop     esi
retn    0ch
push    [esp+arg_4]
push    5
push    offset dword_69ac503c
call    sub_69ac3912
push    [esp+arg_4]
lea     eax, [esp+4+pbuf]
push    1
push    eax
call    sub_69ac3912
push    [esp+arg_4]
push    1
push    offset dword_69ac1240
call    sub_69ac3912
retn    8
push    edi
mov     edi, [esp+4+arg_0]
push    edi
push    0ffffffffh
push    0
call    sub_69ac3912
test    ax, ax
jg      short loc_69ac3a8b
mov     ax, 0fffdh
jmp     short loc_69ac3ac0
push    esi
push    edi
lea     esi, [edi+4c4h]
push    dword ptr [esi]
call    sub_69ac44d9
test    ax, ax
jg      short loc_69ac3aa5
mov     ax, 0fffdh
jmp     short loc_69ac3abf
push    edi
push    dword ptr [esi]
call    sub_69ac4476
xor     ecx, ecx
test    ax, ax
setnle  cl
lea     ecx, ds:0fffffffdh[ecx*4]
mov     ax, cx
pop     esi
pop     edi
retn    4
sub     esp, 0a4h
push    ebx
mov     bx, [esp+0a8h+arg_8]
push    esi
mov     esi, [esp+0ach+arg_4]
push    edi
xor     edi, edi
inc     edi
test    bl, 2
mov     [esp+0b0h+var_a4], edi
jnz     short loc_69ac3af1
test    bx, bx
jnz     loc_69ac3ba3
push    50h
lea     eax, [esp+0b4h+buffer]
push    eax
push    9c4ah
push    dword ptr [esi+4a4h]
call    ds:loadstringw
push    esi
lea     eax, [esp+0b4h+buffer]
push    eax
push    dword ptr [esi+4]
call    sub_69ac38d0
cmp     ax, di
mov     [esp+0b0h+var_a4], eax
jnz     loc_69ac3c04
xor     eax, eax
mov     ax, [esi+290h]
cmp     ax, 0ffffh
jz      short loc_69ac3b41
push    esi
push    eax
lea     eax, [esi+250h]
push    eax
call    sub_69ac3912
cmp     word ptr [esi+8], 0
jz      short loc_69ac3b55
push    esi
push    6
push    offset dword_69ac506c
call    sub_69ac3912
push    esi
push    4
push    offset dword_69ac507c
call    sub_69ac3912
test    bl, 4
jz      short loc_69ac3b73
push    esi
push    edi
push    offset dword_69ac1244
call    sub_69ac3912
push    ebp
mov     ebp, ds:lstrlena
push    esi
mov     edi, offset pbuf
push    edi
call    ebp
push    eax
push    edi
call    sub_69ac3912
push    esi
push    edi
call    ebp
push    eax
push    edi
call    sub_69ac3912
push    esi
push    0dh
push    offset ar
call    sub_69ac3912
pop     ebp
push    esi
push    dword ptr [esp+0b4h+pbuf]
call    sub_69ac3a3e
test    bl, 8
jnz     short loc_69ac3bba
test    bx, bx
jnz     short loc_69ac3bff
push    esi
push    4
push    offset asc_69ac5028
call    sub_69ac3912
push    esi
push    1
push    offset dword_69ac1244
call    sub_69ac3912
push    esi
push    4
push    offset dword_69ac507c
call    sub_69ac3912
cmp     word ptr [esi+8], 0
jz      short loc_69ac3bf5
push    esi
push    6
push    offset assk
call    sub_69ac3912
push    esi
call    sub_69ac3a71
mov     [esp+0b0h+var_a4], eax
mov     ax, word ptr [esp+0b0h+var_a4]
pop     edi
pop     esi
pop     ebx
add     esp, 0a4h
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 0a0h
push    esi
mov     esi, [ebp+arg_8]
push    50h
lea     eax, [ebp+buffer]
push    eax
push    9c4ah
push    dword ptr [esi+4a4h]
call    ds:loadstringw
push    esi
lea     eax, [ebp+buffer]
push    eax
push    dword ptr [esi+4]
call    sub_69ac38d0
cmp     ax, 1
jnz     loc_69ac3cf4
xor     eax, eax
mov     ax, [esi+290h]
cmp     ax, 0ffffh
jz      short loc_69ac3c6e
push    esi
push    eax
lea     eax, [esi+250h]
push    eax
call    sub_69ac3912
push    ebx
xor     ebx, ebx
cmp     [esi+8], bx
push    edi
jz      short loc_69ac3c85
push    esi
push    6
push    offset dword_69ac506c
call    sub_69ac3912
push    esi
push    4
mov     edi, offset dword_69ac507c
push    edi
call    sub_69ac3912
push    esi
push    0dh
push    offset ar
call    sub_69ac3912
movzx   eax, [ebp+arg_0]
test    eax, eax
jle     short loc_69ac3cc2
mov     eax, [ebp+arg_4]
movsx   eax, word ptr [eax+ebx*2]
inc     ax
push    esi
push    eax
push    ebx
call    sub_69ac3a01
movzx   eax, [ebp+arg_0]
inc     ebx
cmp     ebx, eax
jl      short loc_69ac3ca8
push    esi
push    4
push    offset asc_69ac5028
call    sub_69ac3912
push    esi
push    4
push    edi
call    sub_69ac3912
cmp     word ptr [esi+8], 0
pop     edi
pop     ebx
jz      short loc_69ac3cee
push    esi
push    6
push    offset assk
call    sub_69ac3912
push    esi
call    sub_69ac3a71
pop     esi
leave
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 0a0h
push    esi
mov     esi, [ebp+arg_0]
push    50h
lea     eax, [ebp+buffer]
push    eax
push    9c4ah
push    dword ptr [esi+4a4h]
call    ds:loadstringw
push    esi
lea     eax, [ebp+buffer]
push    eax
push    dword ptr [esi+4]
call    sub_69ac38d0
cmp     ax, 1
jnz     loc_69ac3dc5
xor     eax, eax
mov     ax, [esi+290h]
cmp     ax, 0ffffh
jz      short loc_69ac3d57
push    esi
push    eax
lea     eax, [esi+250h]
push    eax
call    sub_69ac3912
cmp     word ptr [esi+8], 0
jz      short loc_69ac3d6b
push    esi
push    6
push    offset dword_69ac506c
call    sub_69ac3912
push    edi
push    esi
push    4
mov     edi, offset dword_69ac507c
push    edi
call    sub_69ac3912
push    esi
push    0dh
push    offset ar
call    sub_69ac3912
push    esi
push    4
push    offset asv
call    sub_69ac3912
push    esi
push    4
push    offset asc_69ac5028
call    sub_69ac3912
push    esi
push    4
push    edi
call    sub_69ac3912
cmp     word ptr [esi+8], 0
pop     edi
jz      short loc_69ac3dbf
push    esi
push    6
push    offset assk
call    sub_69ac3912
push    esi
call    sub_69ac3a71
pop     esi
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0a0h
push    esi
mov     esi, [ebp+arg_0]
push    50h
lea     eax, [ebp+buffer]
push    eax
push    9c4ah
push    dword ptr [esi+4a4h]
call    ds:loadstringw
push    esi
lea     eax, [ebp+buffer]
push    eax
push    dword ptr [esi+4]
call    sub_69ac38d0
movsx   eax, ax
cmp     eax, 1
jnz     loc_69ac3e98
xor     eax, eax
mov     ax, [esi+290h]
cmp     ax, 0ffffh
jz      short loc_69ac3e2a
push    esi
push    eax
lea     eax, [esi+250h]
push    eax
call    sub_69ac3912
cmp     word ptr [esi+8], 0
jz      short loc_69ac3e3e
push    esi
push    6
push    offset dword_69ac506c
call    sub_69ac3912
push    edi
push    esi
push    4
mov     edi, offset dword_69ac507c
push    edi
call    sub_69ac3912
push    esi
push    0dh
push    offset ar
call    sub_69ac3912
push    esi
push    4
push    offset ald
call    sub_69ac3912
push    esi
push    4
push    offset asc_69ac5028
call    sub_69ac3912
push    esi
push    4
push    edi
call    sub_69ac3912
cmp     word ptr [esi+8], 0
pop     edi
jz      short loc_69ac3e92
push    esi
push    6
push    offset assk
call    sub_69ac3912
push    esi
call    sub_69ac3a71
pop     esi
leave
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0a0h
push    esi
mov     esi, [ebp+arg_0]
push    50h
lea     eax, [ebp+buffer]
push    eax
push    9c4bh
push    dword ptr [esi+4a4h]
call    ds:loadstringw
push    esi
lea     eax, [ebp+buffer]
push    eax
push    dword ptr [esi+4]
call    sub_69ac38d0
cmp     ax, 1
jnz     loc_69ac3f78
xor     eax, eax
mov     ax, [esi+290h]
cmp     ax, 0ffffh
jz      short loc_69ac3efb
push    esi
push    eax
lea     eax, [esi+250h]
push    eax
call    sub_69ac3912
cmp     word ptr [esi+8], 0
jz      short loc_69ac3f0f
push    esi
push    6
push    offset dword_69ac506c
call    sub_69ac3912
push    edi
push    esi
push    4
mov     edi, offset dword_69ac507c
push    edi
call    sub_69ac3912
push    esi
push    0dh
push    offset ar
call    sub_69ac3912
push    esi
push    5
push    offset dword_69ac504c
call    sub_69ac3912
push    esi
push    1
lea     eax, [esi+4b4h]
push    eax
call    sub_69ac3912
push    esi
push    4
push    offset asc_69ac5028
call    sub_69ac3912
push    esi
push    4
push    edi
call    sub_69ac3912
cmp     word ptr [esi+8], 0
pop     edi
jz      short loc_69ac3f72
push    esi
push    6
push    offset assk
call    sub_69ac3912
push    esi
call    sub_69ac3a71
pop     esi
leave
retn    4
sub     esp, 0a0h
push    esi
mov     esi, [esp+0a4h+arg_0]
push    50h
lea     eax, [esp+0a8h+buffer]
push    eax
push    9c4ch
push    dword ptr [esi+4a4h]
call    ds:loadstringw
push    esi
lea     eax, [esp+0a8h+buffer]
push    eax
push    dword ptr [esi+4]
call    sub_69ac38d0
cmp     ax, 1
jnz     loc_69ac40cf
xor     eax, eax
mov     ax, [esi+290h]
cmp     ax, 0ffffh
jz      short loc_69ac3fd8
push    esi
push    eax
lea     eax, [esi+250h]
push    eax
call    sub_69ac3912
cmp     word ptr [esi+8], 0
jz      short loc_69ac3fec
push    esi
push    6
push    offset dword_69ac506c
call    sub_69ac3912
push    esi
push    4
push    offset dword_69ac507c
call    sub_69ac3912
push    esi
push    0dh
push    offset ar
call    sub_69ac3912
cmp     word ptr [esi+8], 0
jz      short loc_69ac401a
push    esi
push    6
push    offset dword_69ac5064
call    sub_69ac3912
push    ebx
push    ebp
push    edi
push    esi
push    5
push    offset dword_69ac5054
call    sub_69ac3912
push    esi
push    1
lea     eax, [esi+4b4h]
push    eax
call    sub_69ac3912
push    esi
push    4
mov     ebp, offset asc_69ac5028
push    ebp
call    sub_69ac3912
mov     ebx, ds:lstrlena
push    esi
mov     edi, offset pbuf
push    edi
call    ebx
push    eax
push    edi
call    sub_69ac3912
push    esi
push    edi
call    ebx
push    eax
push    edi
call    sub_69ac3912
push    esi
push    0dh
push    offset ar
call    sub_69ac3912
push    esi
push    6
push    offset dword_69ac505c
call    sub_69ac3912
push    esi
push    4
push    offset ald
call    sub_69ac3912
push    esi
push    4
push    ebp
call    sub_69ac3912
push    esi
push    1
push    offset dword_69ac1244
call    sub_69ac3912
push    esi
push    4
push    offset dword_69ac507c
call    sub_69ac3912
cmp     word ptr [esi+8], 0
pop     edi
pop     ebp
pop     ebx
jz      short loc_69ac40c9
push    esi
push    6
push    offset assk
call    sub_69ac3912
push    esi
call    sub_69ac3a71
pop     esi
add     esp, 0a0h
retn    4
mov     eax, [esp+fdwreason]
dec     eax
jnz     short loc_69ac40e9
mov     eax, [esp+hinstdll]
mov     dword_69ac5084, eax
xor     eax, eax
inc     eax
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, ds:getsystemmetrics
push    0
call    esi
push    1
mov     ebx, eax
call    esi
mov     esi, eax
lea     eax, [ebp+rect]
push    eax
push    [ebp+hwnd]
call    ds:getwindowrect
movsx   eax, si
sub     eax, [ebp+rect.bottom]
push    5
add     eax, [ebp+rect.top]
push    0
cdq
sub     eax, edx
sar     eax, 1
movsx   eax, ax
push    0
push    eax
movsx   eax, bx
sub     eax, [ebp+rect.right]
add     eax, [ebp+rect.left]
cdq
sub     eax, edx
sar     eax, 1
movsx   eax, ax
push    eax
push    0
push    [ebp+hwnd]
call    ds:setwindowpos
pop     esi
pop     ebx
leave
retn    4
push    ebp
lea     ebp, [esp-74h]
sub     esp, 0a0h
push    ebx
push    esi
mov     esi, ds:loadstringw
push    edi
push    50h
lea     eax, [ebp+74h+buffer]
push    eax
mov     eax, [ebp+74h+arg_0]
push    9c4ah
push    dword ptr [eax+4a4h]
call    esi
mov     edi, ds:findwindoww
lea     eax, [ebp+74h+buffer]
push    eax
mov     ebx, offset classname
push    ebx
call    edi
test    eax, eax
jnz     short loc_69ac41b2
push    50h
lea     eax, [ebp+74h+buffer]
push    eax
mov     eax, [ebp+74h+arg_0]
push    9c4ch
push    dword ptr [eax+4a4h]
call    esi
lea     eax, [ebp+74h+buffer]
push    eax
push    ebx
call    edi
test    eax, eax
jz      short loc_69ac41b7
xor     eax, eax
inc     eax
jmp     short loc_69ac41da
push    50h
lea     eax, [ebp+74h+buffer]
push    eax
mov     eax, [ebp+74h+arg_0]
push    9c4bh
push    dword ptr [eax+4a4h]
call    esi
lea     eax, [ebp+74h+buffer]
push    eax
push    ebx
call    edi
neg     eax
sbb     eax, eax
neg     eax
pop     edi
pop     esi
pop     ebx
add     ebp, 74h
leave
retn    4
mov     eax, [esp+arg_0]
push    esi
push    edi
mov     edi, 200h
push    edi
lea     esi, [eax+2a0h]
push    esi
push    dword ptr [eax+4a0h]
call    ds:getmodulefilenamew
test    eax, eax
jz      short loc_69ac420b
cmp     eax, edi
jnz     short loc_69ac420f
xor     eax, eax
jmp     short loc_69ac4221
push    5ch
push    esi
call    ds:wcsrchr
and     word ptr [eax], 0
pop     ecx
xor     eax, eax
pop     ecx
inc     eax
pop     edi
pop     esi
retn    4
push    ebp
lea     ebp, [esp-64h]
sub     esp, 0b0h
push    ebx
push    esi
lea     ecx, [ebp+64h+var_10]
call    sub_69ac2a45
push    0ce0h
push    42h
call    ds:globalalloc
push    eax
call    ds:globallock
mov     esi, eax
xor     ebx, ebx
cmp     esi, ebx
jnz     short loc_69ac4260
mov     ax, 5
jmp     loc_69ac43d0
push    edi
xor     eax, eax
mov     ecx, 338h
mov     edi, esi
rep stosd
mov     eax, dword_69ac5084
lea     edi, [esi+4a0h]
push    esi
mov     [edi], eax
call    sub_69ac41e4
cmp     dword_69ac5088, ebx
mov     eax, [edi]
mov     [esi+4a4h], eax
jnz     loc_69ac43aa
push    esi
call    sub_69ac4151
test    eax, eax
jnz     loc_69ac43aa
mov     eax, [ebp+64h+arg_10]
mov     dword_69ac5088, 1
mov     [esi+4c8h], ebx
mov     [esi+4bch], eax
call    ds:getactivewindow
mov     [esi+29ch], eax
mov     eax, [esi+4bch]
dec     eax
jz      short loc_69ac42ef
dec     eax
jz      short loc_69ac42e2
dec     eax
jnz     short loc_69ac4306
push    50h
lea     eax, [ebp+64h+buffer]
push    eax
push    9c4bh
jmp     short loc_69ac42fa
push    50h
lea     eax, [ebp+64h+buffer]
push    eax
push    9c4ch
jmp     short loc_69ac42fa
push    50h
lea     eax, [ebp+64h+buffer]
push    eax
push    9c4ah
push    dword ptr [esi+4a4h]
call    ds:loadstringw
lea     eax, [ebp+64h+buffer]
push    eax
push    esi
push    [ebp+64h+hinstance]
lea     ecx, [ebp+64h+var_10]
push    [ebp+64h+hfile]
call    sub_69ac327f
test    eax, eax
jz      short loc_69ac439b
push    0fh
call    ds:getsyscolor
push    eax
call    ds:createsolidbrush
mov     [esi+0cdch], eax
jmp     short loc_69ac4380
mov     eax, [esi+4bch]
dec     eax
jz      short loc_69ac436b
dec     eax
jz      short loc_69ac4357
dec     eax
jnz     short loc_69ac4380
push    esi
push    dword ptr [esi+29ch]
mov     [esi+4bch], ebx
call    sub_69ac27b5
jmp     short loc_69ac437d
push    esi
push    dword ptr [esi+29ch]
mov     [esi+4bch], ebx
call    sub_69ac28ac
jmp     short loc_69ac437d
push    esi
push    dword ptr [esi+29ch]
mov     [esi+4bch], ebx
call    sub_69ac143b
mov     [ebp+64h+arg_10], eax
cmp     [esi+4bch], ebx
jnz     short loc_69ac4334
mov     eax, [esi+0cdch]
cmp     eax, ebx
jz      short loc_69ac43a2
push    eax
call    ds:deleteobject
jmp     short loc_69ac43a2
mov     [ebp+64h+arg_10], 3
mov     dword_69ac5088, ebx
jmp     short loc_69ac43b1
mov     [ebp+64h+arg_10], 2
mov     edi, ds:globalhandle
push    esi
call    edi
push    eax
call    ds:globalunlock
push    esi
call    edi
push    eax
call    ds:globalfree
mov     ax, word ptr [ebp+64h+arg_10]
pop     edi
pop     esi
pop     ebx
add     ebp, 64h
leave
retn    14h
push    1
push    [esp+4+arg_c]
push    [esp+8+arg_8]
push    [esp+0ch+hfile]
push    [esp+10h+hinstance]
call    sub_69ac4226
retn    10h
push    2
push    [esp+4+arg_c]
push    [esp+8+arg_8]
push    [esp+0ch+hfile]
push    [esp+10h+hinstance]
call    sub_69ac4226
retn    10h
push    3
push    [esp+4+arg_c]
push    [esp+8+arg_8]
push    [esp+0ch+hfile]
push    [esp+10h+hinstance]
call    sub_69ac4226
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    0
lea     eax, [ebp+pprintername]
push    eax
push    [ebp+pprintername]
call    openprintera
test    eax, eax
jz      short loc_69ac446a
mov     eax, [ebp+arg_4]
and     [ebp+var_8], 0
mov     dword ptr [ebp+pdocinfo], eax
lea     eax, [ebp+pdocinfo]
push    eax
push    1
push    [ebp+pprintername]
mov     [ebp+var_4], offset araw
call    startdocprinterw
test    eax, eax
jnz     short loc_69ac446f
push    [ebp+pprintername]
call    closeprinter
or      eax, 0ffffffffh
jmp     short locret_69ac4472
mov     eax, [ebp+pprintername]
leave
retn    10h
push    esi
mov     esi, [esp+4+hprinter]
push    edi
xor     edi, edi
push    esi
inc     edi
call    enddocprinter
test    eax, eax
push    esi
jnz     short loc_69ac4495
call    closeprinter
or      ax, 0ffffh
jmp     short loc_69ac44a4
call    closeprinter
test    eax, eax
jnz     short loc_69ac44a1
or      edi, 0ffffffffh
mov     ax, di
pop     edi
pop     esi
retn    8
push    esi
push    edi
mov     edi, [esp+8+hprinter]
push    edi
call    startpageprinter
mov     esi, eax
test    si, si
jnz     short loc_69ac44c8
push    edi
call    enddocprinter
push    edi
call    closeprinter
xor     eax, eax
test    si, si
setnz   al
pop     edi
pop     esi
lea     eax, [eax+eax-1]
retn    8
push    esi
push    edi
mov     edi, [esp+8+hprinter]
push    edi
call    endpageprinter
mov     esi, eax
test    si, si
jnz     short loc_69ac44f8
push    edi
call    enddocprinter
push    edi
call    closeprinter
xor     eax, eax
test    si, si
setnz   al
pop     edi
pop     esi
lea     eax, [eax+eax-1]
retn    8
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+hprinter]
lea     eax, [ebp+pcwritten]
push    eax
movsx   eax, word ptr [ebp+pcwritten]
push    eax
push    [ebp+pbuf]
push    esi
call    writeprinter
test    eax, eax
jnz     short loc_69ac453e
push    esi
call    endpageprinter
push    esi
call    enddocprinter
push    esi
call    closeprinter
or      ax, 0ffffh
jmp     short loc_69ac4542
mov     ax, word ptr [ebp+pcwritten]
pop     esi
pop     ebp
retn    10h