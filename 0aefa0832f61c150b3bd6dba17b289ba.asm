push    ebp
mov     ebp, esp
push    ecx
mov     eax, [ebp+arg_0]
mov     [ecx+4], eax
xor     eax, eax
mov     dword ptr [ecx], offset off_37aefc8c
mov     [ecx+18h], eax
mov     dword ptr [ecx+1ch], 0fh
mov     [ecx+8], al
mov     [ecx+20h], al
mov     eax, ecx
mov     [ebp+var_4], ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
mov     al, [ecx]
test    al, al
jz      short loc_37a1108a
mov     byte ptr [ebp+arg_0], al
push    [ebp+arg_0]
call    loc_37a110a1
add     esp, 4
inc     ecx
test    al, al
jnz     short loc_37a1108e
mov     al, [ecx]
mov     byte ptr [ebp+arg_0], al
test    al, al
jnz     short loc_37a11071
xor     al, al
pop     ebp
retn
mov     al, 1
pop     ebp
retn
mov     al, [esp+4]
mov     cl, 1eh
dec     al
cmp     cl, al
sbb     al, al
inc     al
retn
fnstsw  word ptr [ecx]
dec     edi
push    esi
mov     esi, [esp+4+arg_4]
push    edi
dec     dword ptr [esi]
mov     eax, [esi]
mov     byte ptr [eax], 0
mov     eax, [esp+8+arg_0]
xor     edx, edx
dec     dword ptr [esi]
push    0ah
pop     edi
div     edi
mov     ecx, [esi]
add     dl, 30h
mov     [ecx], dl
test    eax, eax
jnz     short loc_37a110c8
pop     edi
pop     esi
retn
lea     ecx, [ebp-58h]
call    loc_37a13d20
and     dword ptr [ebp-4], 0
push    esi
push    eax
lea     eax, [ebp-40h]
push    eax
call    sub_37a9c840
push    offset dword_37b6f578
push    eax
push    dword ptr [ebp+8]
mov     byte ptr [ebp-4], 1
call    sub_37a9c840
add     esp, 18h
lea     ecx, [ebp-40h]
call    sub_37a13cd0
lea     ecx, [ebp-58h]
jmp     loc_37a1148a
call    sub_37a13cd0
mov     ecx, [ebp-0ch]
mov     eax, [ebp+8]
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
lea     eax, [ebp+var_4]
mov     [ebp+var_4], eax
lea     eax, [ebp+var_4]
push    ebx
mov     ebx, [ebp+arg_4]
push    eax
mov     eax, [ebp+arg_4]
neg     eax
shr     ebx, 1fh
test    bl, bl
cmovz   eax, [ebp+arg_4]
push    eax
call    sub_37a110b7
mov     eax, [ebp+var_4]
test    bl, bl
pop     ecx
pop     ecx
pop     ebx
jz      short loc_37a114d7
dec     eax
mov     byte ptr [eax], 2dh
mov     ecx, [ebp+arg_0]
push    eax
call    loc_37a13d20
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
lea     eax, [ebp+var_4]
mov     [ebp+var_4], eax
lea     eax, [ebp+var_4]
push    eax
push    [ebp+arg_4]
call    sub_37a110b7
pop     ecx
pop     ecx
push    [ebp+var_4]
mov     ecx, [ebp+arg_0]
call    loc_37a13d20
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
movsd   xmm0, qword ptr [ebp+arg_4]
lea     eax, [ebp+buffer]
sub     esp, 20h
push    ecx
push    ecx
movsd   qword ptr [esp+28h+arglist], xmm0
push    offset format
push    20h
push    eax
call    sub_37a18540
lea     ecx, [ebp+buffer]
add     esp, 14h
lea     edx, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37a1153e
sub     ecx, edx
lea     eax, [ebp+ecx+arglist+7]
cmp     byte ptr [eax], 30h
jnz     short loc_37a11580
jmp     short loc_37a11558
cmp     byte ptr [eax], 30h
jnz     short loc_37a1155f
dec     eax
lea     ecx, [ebp+buffer]
cmp     eax, ecx
ja      short loc_37a11552
mov     edx, eax
jmp     short loc_37a11573
mov     cl, [eax]
cmp     cl, 2eh
jz      short loc_37a1157c
sub     cl, 30h
cmp     cl, 9
ja      short loc_37a11580
dec     eax
lea     ecx, [ebp+buffer]
cmp     eax, ecx
jnb     short loc_37a11563
jmp     short loc_37a11580
mov     byte ptr [edx+2], 0
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+buffer]
push    eax
call    loc_37a13d20
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp-4], ecx
mov     ecx, [ebp-4]
call    sub_37aa70f0
mov     eax, [ebp-4]
mov     dword ptr [eax], offset dword_37aeff54
mov     eax, [ebp-4]
or      dword ptr [eax+8], 0ffffffffh
mov     eax, [ebp-4]
and     dword ptr [eax+0ch], 0
mov     eax, [ebp-4]
mov     byte ptr [eax+10h], 0
mov     eax, [ebp-4]
and     dword ptr [eax+14h], 0
mov     eax, [ebp-4]
and     dword ptr [eax+18h], 0
mov     eax, [ebp-4]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset word_37ae0b2e
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 2ch
mov     [ebp-10h], ecx
mov     dword ptr [ebp-24h], 10h
mov     eax, [ebp-10h]
cmp     dword ptr [eax+8], 0ffffffffh
jnz     short loc_37a11972
mov     eax, [ebp-10h]
mov     dword ptr [eax+4], 57h
xor     al, al
jmp     loc_37a11a3e
lea     eax, [ebp-24h]
push    eax
lea     eax, [ebp-38h]
push    eax
mov     eax, [ebp-10h]
push    dword ptr [eax+8]
call    dword_37b711bc
mov     [ebp-18h], eax
cmp     dword ptr [ebp-18h], 0ffffffffh
jnz     short loc_37a119a2
call    dword_37b71124
mov     ecx, [ebp-10h]
mov     [ecx+4], eax
xor     al, al
jmp     loc_37a11a3e
push    dword ptr [ebp-34h]
call    dword_37b7116c
mov     [ebp-14h], eax
mov     eax, [ebp-10h]
cmp     dword ptr [eax+0ch], 0
jz      short loc_37a119f3
mov     eax, [ebp-10h]
mov     ecx, [ebp-14h]
cmp     ecx, [eax+0ch]
jz      short loc_37a119f3
mov     eax, [ebp-10h]
cmp     dword ptr [eax+14h], 0
jz      short loc_37a119dc
mov     eax, [ebp-10h]
push    dword ptr [eax+18h]
push    dword ptr [ebp-14h]
mov     eax, [ebp-10h]
call    dword ptr [eax+14h]
pop     ecx
pop     ecx
push    dword ptr [ebp-18h]
call    dword_37b711a4
mov     eax, [ebp-10h]
mov     dword ptr [eax+4], 5
xor     al, al
jmp     short loc_37a11a3e
cmp     dword ptr [ebp+0ch], 0
jz      short loc_37a11a01
mov     eax, [ebp+0ch]
mov     ecx, [ebp-14h]
mov     [eax], ecx
push    1ch
call    ??2@yapaxi@z
pop     ecx
mov     [ebp-1ch], eax
and     dword ptr [ebp-4], 0
cmp     dword ptr [ebp-1ch], 0
jz      short loc_37a11a26
push    dword ptr [ebp-18h]
mov     ecx, [ebp-1ch]
call    sub_37aa7100
mov     [ebp-20h], eax
jmp     short loc_37a11a2a
and     dword ptr [ebp-20h], 0
mov     eax, [ebp-20h]
mov     [ebp-28h], eax
or      dword ptr [ebp-4], 0ffffffffh
mov     eax, [ebp+8]
mov     ecx, [ebp-28h]
mov     [eax], ecx
mov     al, 1
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     ecx, [ebp+8]
mov     [eax+0ch], ecx
mov     eax, [ebp-4]
mov     ecx, [ebp+0ch]
mov     [eax+14h], ecx
mov     eax, [ebp-4]
mov     ecx, [ebp+10h]
mov     [eax+18h], ecx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     eax, [eax+8]
mov     [ebp-10h], eax
push    0ffffffffh
mov     eax, [ebp-4]
add     eax, 8
push    eax
call    ds:interlockedexchange
cmp     eax, 0ffffffffh
jnz     short loc_37a11aaa
mov     eax, [ebp-4]
mov     dword ptr [eax+4], 57h
xor     al, al
jmp     short loc_37a11ae5
push    dword ptr [ebp-10h]
call    dword_37b711a4
mov     [ebp-8], eax
cmp     dword ptr [ebp-8], 0
jz      short loc_37a11ac8
call    dword_37b71124
mov     ecx, [ebp-4]
mov     [ecx+4], eax
mov     eax, [ebp-4]
mov     byte ptr [eax+10h], 0
cmp     dword ptr [ebp-8], 0
jnz     short loc_37a11ade
mov     dword ptr [ebp-0ch], 1
jmp     short loc_37a11ae2
and     dword ptr [ebp-0ch], 0
mov     al, [ebp-0ch]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp-4], ecx
push    dword ptr [ebp+0ch]
push    dword ptr [ebp+8]
call    loc_37ae2e50
pop     ecx
push    eax
mov     eax, [ebp-4]
mov     eax, [eax]
mov     ecx, [ebp-4]
call    dword ptr [eax+24h]
mov     esp, ebp
pop     ebp
retn    8
pop     es
setalc
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp-4], ecx
push    0
push    1
push    2
call    dword_37b7118c
mov     ecx, [ebp-4]
mov     [ecx+8], eax
mov     eax, [ebp-4]
cmp     dword ptr [eax+8], 0ffffffffh
jnz     short loc_37a11bfc
call    dword_37b71124
mov     ecx, [ebp-4]
mov     [ecx+4], eax
xor     al, al
jmp     short loc_37a11bfe
mov     al, 1
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp-4], ecx
cmp     dword ptr [ebp+10h], 0ffffffffh
jz      short loc_37a11d95
push    dword ptr [ebp+10h]
mov     ecx, [ebp-4]
call    loc_37a11e2c
mov     [ebp-8], eax
cmp     dword ptr [ebp-8], 0
jnz     short loc_37a11d8a
xor     eax, eax
jmp     short loc_37a11dc1
cmp     dword ptr [ebp-8], 0ffffffffh
jnz     short loc_37a11d95
or      eax, 0ffffffffh
jmp     short loc_37a11dc1
push    0
push    dword ptr [ebp+0ch]
push    dword ptr [ebp+8]
mov     eax, [ebp-4]
push    dword ptr [eax+8]
call    dword_37b711cc
mov     [ebp-0ch], eax
cmp     dword ptr [ebp-0ch], 0
jge     short loc_37a11dbe
call    dword_37b71124
mov     ecx, [ebp-4]
mov     [ecx+4], eax
mov     eax, [ebp-0ch]
mov     esp, ebp
pop     ebp
retn    0ch
cmp     edx, [esi]
test    bl, al
aam     0beh
aad     42h
xlat
mov     eax, ds:7cb01726h
push    esp
jnz     short near ptr loc_37a11db8+1
stosd
aad     59h
xchg    eax, ebp
cwde
vpor    ymm0, ymm1, ymmword ptr [edi]
jg      short loc_37a11e2d
push    3bh
or      al, 29h
aas
push    esi
xor     ebx, ebp
retf    49d7h
test    eax, 94991a97h
aad     0f0h
lea     edx, [edx-2e6d9cb3h]
sbb     esi, 0ffffffd9h
mov     eax, 97745fb9h
xlat
push    ebp
sar     dword ptr [esi+13h], 1
ja      short near ptr loc_37a11e1f+5
mov     esp, 237a4cedh
xor     bl, [ebx+ebp*2+21h]
test    [eax+esi*8], ecx
xchg    dl, [edx]
mov     bh, [esi-4fbfe97dh]
mov     dl, [ebp+ebp*2-20fa4254h]
loope   loc_37a11dd5
dec     edi
mov     ebx, 0d3bd5cc4h
fld     st(5)
movsb
insd
mov     eax, ds:8775ad46h
inc     ecx
mov     cl, 0fch
sahf
cwde
cmps    byte ptr cs:[esi], byte ptr es:[edi]
mov     ecx, 523232beh
sub     esp, ebp
jg      short loc_37a11e08
movsd
sbb     bh, bh
mov     ecx, [ebx-63h]
insd
sbb     al, 60h
sub     [edx], cl
or      cl, [esi+esi]
cmp     ch, [eax-1]
div     bl
int     3
scasb
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     [ebp-4], ecx
push    0
push    dword ptr [ebp+0ch]
push    dword ptr [ebp+8]
mov     eax, [ebp-4]
push    dword ptr [eax+8]
call    dword_37b711c4
mov     [ebp-8], eax
cmp     dword ptr [ebp-8], 0
jge     short loc_37a11f17
call    dword_37b71124
mov     ecx, [ebp-4]
mov     [ecx+4], eax
mov     eax, [ebp-8]
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp-4], ecx
mov     eax, [ebp-4]
cmp     dword ptr [eax+8], 0ffffffffh
jnz     short loc_37a11f43
mov     eax, [ebp-4]
mov     dword ptr [eax+4], 57h
xor     al, al
jmp     loc_37a11fcf
push    0
push    0
push    0
push    0
call    ds:createeventa
mov     [ebp-8], eax
cmp     dword ptr [ebp-8], 0
jnz     short loc_37a11f64
call    ds:getlasterror
xor     al, al
jmp     short loc_37a11fcf
push    20h
push    dword ptr [ebp-8]
mov     eax, [ebp-4]
push    dword ptr [eax+8]
call    dword_37b7112c
push    dword ptr [ebp+8]
mov     eax, [ebp-4]
push    dword ptr [eax+8]
call    dword_37b7119c
mov     [ebp-0ch], eax
cmp     dword ptr [ebp-0ch], 0
jnz     short loc_37a11f9d
push    7d0h
push    dword ptr [ebp-8]
call    ds:waitforsingleobject
jmp     short loc_37a11fa9
call    ds:getlasterror
mov     ecx, [ebp-4]
mov     [ecx+4], eax
mov     eax, [ebp-4]
mov     byte ptr [eax+10h], 0
push    dword ptr [ebp-8]
call    ds:closehandle
cmp     dword ptr [ebp-0ch], 0
jnz     short loc_37a11fc8
mov     dword ptr [ebp-10h], 1
jmp     short loc_37a11fcc
and     dword ptr [ebp-10h], 0
mov     al, [ebp-10h]
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [esp+arg_0]
retn    4
dec     esp
xchg    eax, ecx
aaa
sar     dl, cl
ja      short loc_37a11f7b
loopne  loc_37a1200f
mov     eax, ds:0a11fe737h
aaa
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
mov     eax, dword_37b0b00c
sub     esp, 7ch
test    al, 1
jz      short loc_37a12032
lea     eax, [esp+7ch+var_7c]
push    eax
call    ds:getcurrenthwprofilea
test    eax, eax
jz      short loc_37a12032
lea     eax, [esp+7ch+var_78]
push    eax
call    sub_37a12310
add     esp, 4
add     eax, dword_37b0b008
mov     dword_37b0b008, eax
mov     eax, dword_37b0b00c
test    al, 2
jz      short loc_37a1209b
push    esi
call    ds:getcommandlinea
mov     ecx, eax
xor     esi, esi
mov     dl, [ecx]
test    dl, dl
jz      short loc_37a12094
nop     dword ptr [eax+00h]
cmp     dl, 21h
mov     eax, ecx
mov     dl, [ecx+1]
cmovnz  eax, esi
inc     ecx
mov     esi, eax
test    dl, dl
jnz     short loc_37a12050
test    esi, esi
jz      short loc_37a12094
mov     al, [esi+1]
inc     esi
xor     edx, edx
test    al, al
jz      short loc_37a12088
cmp     al, 20h
jz      short loc_37a12088
mov     ecx, edx
movsx   eax, al
or      ecx, 1
inc     esi
imul    ecx, eax
mov     al, [esi]
add     edx, ecx
test    al, al
jnz     short loc_37a12070
mov     eax, dword_37b0b008
add     eax, edx
mov     dword_37b0b008, eax
xor     eax, eax
pop     esi
add     esp, 7ch
retn
xor     eax, eax
add     esp, 7ch
retn
mov     eax, dword_37b48968
sub     esp, 0ch
push    edi
mov     edi, [esp+10h+arg_0]
test    eax, eax
jz      loc_37a12288
push    ebx
mov     ecx, offset dword_37b48970
push    ebp
mov     [esp+18h+var_8], ecx
push    esi
lea     eax, [eax+37a10000h]
mov     [esp+1ch+var_c], eax
mov     eax, [ecx-4]
test    eax, eax
jz      loc_37a12274
dec     eax
mov     [esp+1ch+var_4], eax
mov     eax, [edi]
cmp     eax, 270h
jnz     short loc_37a12140
lea     eax, [edi+8]
mov     esi, 270h
nop     dword ptr [eax+00h]
mov     edx, [eax-4]
lea     eax, [eax+4]
xor     edx, [eax-4]
and     edx, 7fffffffh
xor     edx, [eax-8]
mov     ecx, edx
and     cl, 1
movzx   ecx, cl
neg     ecx
sbb     ecx, ecx
shr     edx, 1
and     ecx, 9908b0dfh
xor     ecx, [eax+62ch]
xor     ecx, edx
mov     [eax+9b8h], ecx
sub     esi, 1
jnz     short loc_37a12100
mov     eax, [edi]
jmp     loc_37a12225
cmp     eax, 4e0h
jb      loc_37a12225
mov     eax, [edi+9c4h]
lea     ebx, [edi+9c4h]
mov     ebp, 0e3h
nop     dword ptr [eax+00h]
mov     ecx, [ebx+4]
lea     edx, [ebx+4]
xor     ecx, eax
and     ecx, 7fffffffh
xor     ecx, eax
mov     eax, ecx
and     al, 1
movzx   eax, al
neg     eax
sbb     eax, eax
shr     ecx, 1
and     eax, 9908b0dfh
xor     eax, [ebx+634h]
xor     eax, ecx
mov     [ebx-9c0h], eax
lea     ebx, [edx]
mov     eax, [edx]
sub     ebp, 1
jnz     short loc_37a12160
mov     eax, [edi+0d50h]
lea     ebx, [edi+0d50h]
mov     ebp, 18ch
nop     word ptr [eax+eax+00h]
mov     ecx, eax
lea     edx, [ebx+4]
xor     ecx, [edx]
and     ecx, 7fffffffh
xor     ecx, eax
mov     eax, ecx
and     al, 1
movzx   eax, al
neg     eax
sbb     eax, eax
shr     ecx, 1
and     eax, 9908b0dfh
xor     eax, [ebx-0d4ch]
xor     eax, ecx
mov     [ebx-9c0h], eax
lea     ebx, [edx]
mov     eax, [edx]
sub     ebp, 1
jnz     short loc_37a121b0
mov     ecx, [edi+1380h]
xor     ecx, [edi+4]
and     ecx, 7fffffffh
xor     ecx, [edi+1380h]
mov     eax, ecx
and     al, 1
movzx   eax, al
neg     eax
sbb     eax, eax
shr     ecx, 1
and     eax, 9908b0dfh
xor     eax, [edi+634h]
xor     eax, ecx
mov     [edi+9c0h], eax
xor     eax, eax
mov     dword ptr [edi], 0
mov     edx, [edi+eax*4+4]
inc     eax
mov     [edi], eax
mov     eax, edx
shr     eax, 0bh
and     eax, [edi+1384h]
xor     edx, eax
mov     eax, edx
and     eax, 0ff3a58adh
shl     eax, 7
xor     edx, eax
mov     ecx, edx
and     ecx, 0ffffdf8ch
shl     ecx, 0fh
xor     ecx, edx
mov     eax, ecx
shr     eax, 12h
xor     al, cl
mov     ecx, [esp+1ch+var_c]
add     [ecx], al
inc     ecx
mov     eax, [esp+1ch+var_4]
mov     [esp+1ch+var_c], ecx
test    eax, eax
jnz     loc_37a120e6
mov     ecx, [esp+1ch+var_8]
mov     eax, [ecx]
add     ecx, 8
mov     [esp+1ch+var_8], ecx
test    eax, eax
jnz     loc_37a120d1
pop     esi
pop     ebp
pop     ebx
xor     eax, eax
pop     edi
add     esp, 0ch
retn
mov     eax, 2710h
call    __alloca_probe
mov     eax, dword_37b0b008
lea     ecx, [esp+2710h+var_2710]
push    esi
push    eax
call    sub_37aad990
mov     esi, dword_37b0b008
and     esi, 7ffh
add     esi, 100h
jz      short loc_37a122d2
nop     dword ptr [eax]
lea     eax, [esp+2714h+var_2710]
push    eax
call    sub_37a120b0
add     esp, 4
sub     esi, 1
jnz     short loc_37a122c0
mov     eax, dword_37b0b00c
pop     esi
test    eax, 0ffff0000h
jz      short loc_37a12301
mov     eax, dword_37b0b00c
lea     ecx, [esp+2710h+var_1388]
push    eax
call    sub_37aad990
lea     eax, [esp+2710h+var_1388]
push    eax
call    sub_37a120b0
add     esp, 4
xor     eax, eax
add     esp, 2710h
retn
push    esi
mov     esi, [esp+4+arg_0]
xor     eax, eax
mov     cl, [esi]
test    cl, cl
jz      short loc_37a12339
nop     dword ptr [eax]
cmp     cl, 20h
jz      short loc_37a12339
mov     edx, eax
movsx   ecx, cl
or      edx, 1
inc     esi
imul    edx, ecx
mov     cl, [esi]
add     eax, edx
test    cl, cl
jnz     short loc_37a12320
pop     esi
retn
mov     dword_37b733dc, eax
call    _atexit
pop     ecx
retn
push    offset sub_37ae2fe0
call    _atexit
pop     ecx
retn
push    ebp
mov     ebp, esp
push    0
mov     ecx, offset dword_37b71e48
call    sub_37aac560
pop     ebp
retn
mov     ecx, offset dword_37b72010
call    ??0_init_locks@std@@qae@xz
push    offset sub_37ae303c
call    _atexit
pop     ecx
retn
push    offset sub_37ae3046
call    _atexit
pop     ecx
retn
push    offset sub_37ae3050
call    _atexit
pop     ecx
retn
push    offset sub_37ae305a
call    _atexit
pop     ecx
retn
mov     ecx, offset byte_37b72188
call    ??0_init_locks@std@@qae@xz
push    offset sub_37ae3064
call    _atexit
pop     ecx
retn
mov     ecx, offset dword_37b72454
call    sub_37ab1570
push    offset sub_37ae306e
call    _atexit
pop     ecx
retn
or      al, [eax]
mov     dword_37b728a0, eax
retn
push    offset stru_37b728a8
call    ds:initializeslisthead
retn
push    offset dword_37b73128
call    ?_initbadallocexception@__exceptionptr@@ca?av?$shared_ptr@v__exceptionptr@@@std@@xz
mov     [esp+4+var_4], (offset loc_37ae3080+2)
call    _atexit
pop     ecx
retn
mov     edx, dwsize
push    esi
mov     esi, 1
test    edx, edx
jz      short loc_37a124cb
push    edi
mov     edi, ds:virtualprotect
nop     word ptr [eax+eax+00000000h]
mov     ecx, dwsize[esi*4]
lea     eax, floldprotect[esi*4]
push    eax
mov     eax, [eax]
push    eax
push    ecx
add     [ecx-2800afc9h], ah
mov     edx, dword_37b0b018[esi*4]
lea     esi, [esi+3]
test    edx, edx
jnz     short loc_37a124a0
pop     edi
xor     eax, eax
pop     esi
retn
add     cl, [ebp+51h]
sub     [edi-13h], esi
call    near ptr 0bf689601h
mov     eax, ebp
aam     2ah
retn
mov     eax, [esp+arg_0]
lea     edx, [eax+1]
mov     cl, [eax]
inc     eax
test    cl, cl
jnz     short loc_37a12507
sub     eax, edx
retn
inc     ebx
dec     ebx
js      short loc_37a124b6
clc
movsd
add     ch, ch
jecxz   short near ptr loc_37a12579+1
sub     eax, 0e0a66d4h
icebp
xchg    eax, ecx
sar     byte ptr [edx+ecx*4+3dh], 1
xchg    eax, esi
or      eax, 0f5910229h
ror     dword ptr [edx], 1
mov     dh, 0b0h
hlt
dec     esi
loopne  loc_37a12529
setalc
dec     ebx
jnp     short near ptr loc_37a1252b+1
pop     ss
out     9bh, al
sub     dl, bh
jle     short near ptr loc_37a1259a+1
cmpsd
mov     edi, es
add     [ebx-292c1bc6h], cl
jno     short loc_37a12559
inc     ecx
sub     [edi-6f65a331h], cl
frstor  byte ptr [edi-66f1d99fh]
insd
sub     [ebx], edi
xchg    eax, ebp
jnz     short near ptr loc_37a125e7+1
mov     dh, [ebx]
xor     eax, 0bfcd51e5h
or      [ecx], ah
lodsd
pop     ds
push    es
mov     esi, 65d529fbh
push    ecx
mov     eax, [esp+arg_0]
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
mov     eax, [ebp+0ch]
push    ebx
push    esi
push    edi
mov     ebx, [eax]
mov     esi, ecx
push    0
mov     [esp+10h], esi
push    dword ptr [esi]
push    0
push    dword ptr [eax+4]
call    __allmul
push    0
push    dword ptr [esi+4]
mov     edi, eax
mov     [esp+1ch], edx
push    0
push    ebx
call    __allmul
mov     ecx, [esp+0ch]
mov     esi, eax
push    0
mov     [esp+14h], edx
push    dword ptr [ecx]
push    0
push    ebx
call    __allmul
mov     eax, [esp+0ch]
xor     ebx, ebx
add     edx, esi
adc     ebx, ebx
add     edx, edi
mov     edi, [ebp+0ch]
adc     ebx, 0
add     edx, 80000000h
adc     ebx, 0
xor     esi, esi
push    esi
push    dword ptr [eax+4]
push    esi
push    dword ptr [edi+4]
call    __allmul
mov     ecx, [esp+0ch]
add     ebx, eax
mov     eax, [ebp+8]
adc     esi, edx
add     ebx, [esp+10h]
mov     ecx, [ecx+8]
adc     esi, 0
add     ebx, [esp+14h]
mov     [eax], ebx
adc     esi, 0
add     ecx, 40h
add     ecx, [edi+8]
pop     edi
mov     [eax+4], esi
pop     esi
mov     [eax+8], ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [esp+4]
movups  xmm0, xmmword ptr [ecx]
movups  xmmword ptr [eax], xmm0
cmp     dword ptr [eax+4], 0
jl      short locret_37a126af
jg      short loc_37a12687
cmp     dword ptr [eax], 0
jb      short locret_37a126af
push    esi
mov     esi, [eax+8]
nop     dword ptr [eax+eax+00h]
mov     edx, [eax]
dec     esi
mov     ecx, [eax+4]
shld    ecx, edx, 1
add     edx, edx
mov     [eax+4], ecx
mov     [eax], edx
test    ecx, ecx
jg      short loc_37a12690
jl      short loc_37a126ab
test    edx, edx
jnb     short loc_37a12690
mov     [eax+8], esi
pop     esi
retn    4
mov     edi, edi
test    al, 43h
sbb     bh, [ecx-51h]
mov     ds:2fff627fh, al
xor     byte ptr [eax+70h], 0fah
xor     al, 2eh
cmp     eax, 49ac29cdh
mov     edx, 0f43fbba9h
das
xlat
mov     edx, 218112a3h
jl      short loc_37a1273c
and     ebp, esi
cmpsd
push    esi
adc     eax, [esi-27h]
shl     byte ptr [ebx], 71h
pop     ss
retf    49e3h
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
test    edi, edi
ja      loc_37a12a27
jb      short loc_37a128e8
cmp     esi, 5f5e100h
jnb     loc_37a12a27
cmp     esi, 2710h
jnb     short loc_37a12947
mov     ecx, [ebp+arg_8]
mov     eax, 51eb851fh
mul     esi
mov     edi, esi
shr     edx, 5
imul    eax, edx, 64h
sub     edi, eax
cmp     esi, 3e8h
jb      short loc_37a12916
mov     al, ds:byte_37b02540[edx*2]
mov     [ecx], al
inc     ecx
cmp     esi, 64h
jb      short loc_37a12925
mov     al, ds:byte_37b02541[edx*2]
mov     [ecx], al
inc     ecx
cmp     esi, 0ah
jb      short loc_37a12934
mov     al, ds:byte_37b02540[edi*2]
mov     [ecx], al
inc     ecx
mov     al, ds:byte_37b02541[edi*2]
mov     [ecx], al
lea     eax, [ecx+1]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, 0d1b71759h
mov     ecx, esi
mul     esi
mov     ebx, edx
shr     ebx, 0dh
imul    eax, ebx, 2710h
sub     ecx, eax
mov     eax, 51eb851fh
mul     ebx
mov     [esp+30h+var_1c], ecx
mov     eax, edx
shr     eax, 5
imul    ecx, eax, 64h
mov     [esp+30h+var_20], eax
mov     eax, 51eb851fh
mul     [esp+30h+var_1c]
sub     ebx, ecx
mov     eax, edx
mov     edx, [esp+30h+var_1c]
shr     eax, 5
mov     [esp+30h+var_18], eax
imul    eax, 64h
sub     edx, eax
test    edi, edi
jnz     short loc_37a129a2
cmp     esi, 989680h
jnb     short loc_37a129a2
mov     ecx, [ebp+arg_8]
jmp     short loc_37a129b3
mov     eax, [esp+30h+var_20]
mov     ecx, [ebp+arg_8]
mov     al, ds:byte_37b02540[eax*2]
mov     [ecx], al
inc     ecx
test    edi, edi
jnz     short loc_37a129bf
cmp     esi, 0f4240h
jb      short loc_37a129cd
mov     eax, [esp+30h+var_20]
mov     al, ds:byte_37b02541[eax*2]
mov     [ecx], al
inc     ecx
test    edi, edi
jnz     short loc_37a129d9
cmp     esi, 186a0h
jb      short loc_37a129e3
mov     al, ds:byte_37b02540[ebx*2]
mov     [ecx], al
inc     ecx
movzx   eax, ds:byte_37b02541[ebx*2]
mov     esi, [esp+30h+var_18]
mov     [ecx], al
movzx   eax, ds:byte_37b02540[esi*2]
mov     [ecx+1], al
movzx   eax, ds:byte_37b02541[esi*2]
mov     [ecx+2], al
movzx   eax, ds:byte_37b02540[edx*2]
mov     [ecx+3], al
movzx   eax, ds:byte_37b02541[edx*2]
mov     [ecx+4], al
lea     eax, [ecx+5]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     edi, 2386f2h
ja      loc_37a12c55
jb      short loc_37a12a41
cmp     esi, 6fc10000h
jnb     loc_37a12c55
push    0
push    5f5e100h
push    edi
push    esi
call    __aulldiv
imul    ecx, eax, 5f5e100h
mov     ebx, esi
mov     [esp+30h+var_24], eax
mov     eax, 0d1b71759h
sub     ebx, ecx
mov     ecx, [esp+30h+var_24]
mul     ecx
shr     edx, 0dh
imul    eax, edx, 2710h
mov     [esp+30h+var_20], edx
sub     ecx, eax
mov     eax, 51eb851fh
mul     edx
mov     [esp+30h+var_24], ecx
mov     eax, edx
mov     edx, [esp+30h+var_20]
shr     eax, 5
mov     [esp+30h+var_18], eax
imul    eax, 64h
sub     edx, eax
mov     eax, 51eb851fh
add     edx, edx
mov     [esp+30h+var_20], edx
mul     ecx
mov     eax, edx
shr     eax, 5
imul    ecx, eax, 64h
mov     [esp+30h+var_1c], eax
mov     eax, [esp+30h+var_24]
sub     eax, ecx
add     eax, eax
mov     [esp+30h+var_24], eax
mov     eax, 0d1b71759h
mul     ebx
mov     ecx, edx
shr     ecx, 0dh
imul    eax, ecx, 2710h
sub     ebx, eax
mov     eax, 51eb851fh
mul     ecx
mov     eax, edx
shr     eax, 5
mov     [esp+30h+var_14], eax
imul    eax, 64h
sub     ecx, eax
mov     eax, 51eb851fh
mul     ebx
add     ecx, ecx
mov     eax, edx
mov     [esp+30h+var_10], ecx
shr     eax, 5
mov     [esp+30h+var_4], eax
imul    eax, 64h
sub     ebx, eax
cmp     edi, 38d7eh
jb      short loc_37a12b22
ja      short loc_37a12b0f
cmp     esi, 0a4c68000h
jb      short loc_37a12b22
mov     edx, [esp+30h+var_18]
mov     ecx, [ebp+arg_8]
mov     al, ds:byte_37b02540[edx*2]
mov     [ecx], al
inc     ecx
jmp     short loc_37a12b29
mov     ecx, [ebp+arg_8]
mov     edx, [esp+30h+var_18]
cmp     edi, 5af3h
jb      short loc_37a12b45
ja      short loc_37a12b3b
cmp     esi, 107a4000h
jb      short loc_37a12b45
mov     al, ds:byte_37b02541[edx*2]
mov     [ecx], al
inc     ecx
cmp     edi, 918h
jb      short loc_37a12b66
ja      short loc_37a12b57
cmp     esi, 4e72a000h
jb      short loc_37a12b66
mov     edx, [esp+30h+var_20]
mov     al, ds:byte_37b02540[edx]
mov     [ecx], al
inc     ecx
jmp     short loc_37a12b6a
mov     edx, [esp+30h+var_20]
cmp     edi, 0e8h
jb      short loc_37a12b85
ja      short loc_37a12b7c
cmp     esi, 0d4a51000h
jb      short loc_37a12b85
mov     al, ds:byte_37b02541[edx]
mov     [ecx], al
inc     ecx
cmp     edi, 17h
jb      short loc_37a12ba4
ja      short loc_37a12b94
cmp     esi, 4876e800h
jb      short loc_37a12ba4
mov     edx, [esp+30h+var_1c]
mov     al, ds:byte_37b02540[edx*2]
mov     [ecx], al
inc     ecx
jmp     short loc_37a12ba8
mov     edx, [esp+30h+var_1c]
cmp     edi, 2
jb      short loc_37a12bc1
ja      short loc_37a12bb7
cmp     esi, 540be400h
jb      short loc_37a12bc1
mov     al, ds:byte_37b02541[edx*2]
mov     [ecx], al
inc     ecx
test    edi, edi
jnz     short loc_37a12bcd
cmp     esi, 3b9aca00h
jb      short loc_37a12bdc
mov     edx, [esp+30h+var_24]
mov     al, ds:byte_37b02540[edx]
mov     [ecx], al
inc     ecx
jmp     short loc_37a12be0
mov     edx, [esp+30h+var_24]
movzx   eax, ds:byte_37b02541[edx]
mov     edx, [esp+30h+var_14]
mov     [ecx], al
movzx   eax, ds:byte_37b02540[edx*2]
mov     [ecx+1], al
movzx   eax, ds:byte_37b02541[edx*2]
mov     edx, [esp+30h+var_10]
mov     [ecx+2], al
movzx   eax, ds:byte_37b02540[edx]
mov     [ecx+3], al
movzx   eax, ds:byte_37b02541[edx]
mov     edx, [esp+30h+var_4]
mov     [ecx+4], al
movzx   eax, ds:byte_37b02540[edx*2]
mov     [ecx+5], al
movzx   eax, ds:byte_37b02541[edx*2]
mov     [ecx+6], al
movzx   eax, ds:byte_37b02540[ebx*2]
mov     [ecx+7], al
movzx   eax, ds:byte_37b02541[ebx*2]
mov     [ecx+8], al
lea     eax, [ecx+9]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    2386f2h
push    6fc10000h
push    edi
push    esi
call    __aulldvrm
mov     edi, [ebp+arg_8]
mov     esi, ecx
mov     [esp+30h+var_4], ebx
mov     ebx, eax
mov     [esp+30h+var_20], esi
mov     [esp+30h+var_c], edx
lea     ecx, [edi+1]
mov     [esp+30h+var_24], ecx
cmp     ebx, 0ah
jnb     short loc_37a12c8f
add     bl, 30h
mov     [edi], bl
jmp     loc_37a12d18
cmp     ebx, 64h
jnb     short loc_37a12cab
movzx   eax, ds:byte_37b02540[ebx*2]
mov     [edi], al
movzx   eax, ds:byte_37b02541[ebx*2]
mov     [ecx], al
inc     ecx
jmp     short loc_37a12d14
mov     eax, 51eb851fh
mov     esi, ebx
mul     ebx
shr     edx, 5
imul    eax, edx, 64h
sub     esi, eax
cmp     ebx, 3e8h
jnb     short loc_37a12ce3
add     dl, 30h
mov     [edi], dl
movzx   eax, ds:byte_37b02540[esi*2]
mov     [ecx], al
movzx   eax, ds:byte_37b02541[esi*2]
mov     [ecx+1], al
add     ecx, 2
jmp     short loc_37a12d10
movzx   eax, ds:byte_37b02540[edx*2]
mov     [edi], al
movzx   eax, ds:byte_37b02541[edx*2]
mov     [ecx], al
movzx   eax, ds:byte_37b02540[esi*2]
mov     [ecx+1], al
movzx   eax, ds:byte_37b02541[esi*2]
mov     [ecx+2], al
add     ecx, 3
mov     esi, [esp+30h+var_20]
mov     [esp+30h+var_24], ecx
push    0
push    5f5e100h
push    [esp+38h+var_4]
push    esi
call    __aulldiv
mov     ebx, eax
mov     eax, 0d1b71759h
mul     ebx
imul    ecx, ebx, 5f5e100h
sub     esi, ecx
mov     ecx, edx
shr     ecx, 0dh
imul    eax, ecx, 2710h
mov     [esp+30h+var_20], esi
sub     ebx, eax
mov     eax, 51eb851fh
mul     ecx
mov     esi, edx
shr     esi, 5
imul    eax, esi, 64h
sub     ecx, eax
mov     eax, 51eb851fh
mul     ebx
add     ecx, ecx
mov     edi, edx
mov     [esp+30h+var_4], ecx
shr     edi, 5
imul    eax, edi, 64h
mov     [esp+30h+var_10], edi
mov     edi, [esp+30h+var_20]
sub     ebx, eax
mov     eax, 0d1b71759h
mul     edi
add     ebx, ebx
mov     [esp+30h+var_14], ebx
mov     ebx, edx
shr     ebx, 0dh
imul    eax, ebx, 2710h
sub     edi, eax
mov     eax, 51eb851fh
mul     ebx
mov     ecx, edx
shr     ecx, 5
imul    eax, ecx, 64h
sub     ebx, eax
mov     eax, 51eb851fh
mul     edi
shr     edx, 5
imul    eax, edx, 64h
sub     edi, eax
movzx   eax, ds:byte_37b02540[esi*2]
add     edi, edi
mov     [esp+30h+var_20], edi
mov     edi, [esp+30h+var_24]
inc     [esp+30h+var_24]
mov     [edi], al
movzx   eax, ds:byte_37b02541[esi*2]
mov     esi, [esp+30h+var_24]
mov     [esi], al
inc     esi
mov     [esp+30h+var_24], esi
mov     esi, [esp+30h+var_4]
mov     edi, [esp+30h+var_24]
inc     [esp+30h+var_24]
movzx   eax, ds:byte_37b02540[esi]
mov     [edi], al
movzx   eax, ds:byte_37b02541[esi]
mov     esi, [esp+30h+var_24]
mov     edi, [esp+30h+var_10]
mov     [esi], al
movzx   eax, ds:byte_37b02540[edi*2]
mov     [esi+1], al
add     esi, 2
movzx   eax, ds:byte_37b02541[edi*2]
mov     edi, esi
mov     [esp+30h+var_24], esi
mov     esi, [esp+30h+var_14]
mov     [edi], al
movzx   eax, ds:byte_37b02540[esi]
mov     [edi+1], al
movzx   eax, ds:byte_37b02541[esi]
mov     [edi+2], al
movzx   eax, ds:byte_37b02540[ecx*2]
mov     [edi+3], al
movzx   eax, ds:byte_37b02541[ecx*2]
mov     ecx, [esp+30h+var_20]
mov     [edi+4], al
movzx   eax, ds:byte_37b02540[ebx*2]
mov     [edi+5], al
movzx   eax, ds:byte_37b02541[ebx*2]
mov     [edi+6], al
movzx   eax, ds:byte_37b02540[edx*2]
mov     [edi+7], al
movzx   eax, ds:byte_37b02541[edx*2]
mov     [edi+8], al
movzx   eax, ds:byte_37b02540[ecx]
mov     [edi+9], al
movzx   eax, ds:byte_37b02541[ecx]
mov     [edi+0ah], al
lea     eax, [edi+0bh]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 44h
mov     ecx, [ebp+0ch]
xor     edx, edx
mov     eax, [ebp+10h]
push    ebx
mov     [esp+4], eax
mov     ebx, [ecx+8]
mov     eax, [ebp+14h]
neg     ebx
push    esi
mov     [esp+10h], eax
xor     esi, esi
mov     eax, ebx
mov     [esp+1ch], ebx
bts     edx, eax
cmp     eax, 20h
push    edi
mov     edi, [ecx+4]
cmovnb  esi, edx
xor     edx, esi
cmp     eax, 40h
mov     eax, [ebp+8]
cmovnb  esi, edx
mov     [esp+28h], edx
mov     [esp+24h], esi
mov     edx, edi
mov     esi, [ecx]
mov     ecx, esi
sub     ecx, [eax]
mov     [esp+2ch], ecx
mov     ecx, edi
sbb     ecx, [eax+4]
mov     eax, esi
mov     [esp+30h], ecx
mov     ecx, ebx
call    __aullshr
mov     ecx, [esp+24h]
mov     ebx, eax
mov     eax, [esp+28h]
add     eax, 0ffffffffh
mov     [esp+10h], ebx
mov     [esp+38h], eax
adc     ecx, 0ffffffffh
and     eax, esi
mov     [esp+3ch], ecx
and     ecx, edi
mov     [esp+34h], eax
mov     [esp+18h], ecx
mov     [esp+48h], eax
mov     [esp+4ch], ecx
cmp     ebx, 0ah
jnb     short loc_37a13005
mov     esi, 1
jmp     short loc_37a13067
cmp     ebx, 64h
jnb     short loc_37a13011
mov     esi, 2
jmp     short loc_37a13067
cmp     ebx, 3e8h
jnb     short loc_37a13020
mov     esi, 3
jmp     short loc_37a13067
cmp     ebx, 2710h
jnb     short loc_37a1302f
mov     esi, 4
jmp     short loc_37a13067
cmp     ebx, 186a0h
jnb     short loc_37a1303e
mov     esi, 5
jmp     short loc_37a13067
cmp     ebx, 0f4240h
jnb     short loc_37a1304d
mov     esi, 6
jmp     short loc_37a13067
cmp     ebx, 989680h
jnb     short loc_37a1305c
mov     esi, 7
jmp     short loc_37a13067
cmp     ebx, 5f5e100h
sbb     esi, esi
add     esi, 9
mov     edi, [ebp+1ch]
mov     dword ptr [edi], 0
dec     esi
xor     ecx, ecx
cmp     esi, 8
ja      def_37a1307c
jmp     ds:jpt_37a1307c[esi*4]
mov     eax, 55e63b89h
mul     ebx
mov     ecx, edx
shr     ecx, 19h
imul    eax, ecx, 0fa0a1f00h
add     ebx, eax
jmp     loc_37a1313d
mov     eax, 6b5fca6bh
mul     ebx
mov     ecx, edx
shr     ecx, 16h
imul    eax, ecx, 0ff676980h
add     ebx, eax
jmp     loc_37a1313d
mov     eax, 431bde83h
mul     ebx
mov     ecx, edx
shr     ecx, 12h
imul    eax, ecx, 0fff0bdc0h
add     ebx, eax
jmp     short loc_37a1313d
mov     ecx, ebx
mov     eax, 4f8b588fh
mul     ecx
sub     ecx, edx
shr     ecx, 1
add     ecx, edx
shr     ecx, 10h
imul    eax, ecx, 0fffe7960h
add     ebx, eax
jmp     short loc_37a1313d
mov     eax, 0d1b71759h
mul     ebx
mov     ecx, edx
shr     ecx, 0dh
imul    eax, ecx, 0ffffd8f0h
add     ebx, eax
jmp     short loc_37a1313d
mov     eax, 10624dd3h
mul     ebx
mov     ecx, edx
shr     ecx, 6
imul    eax, ecx, 0fffffc18h
add     ebx, eax
jmp     short loc_37a1313d
mov     eax, 51eb851fh
mul     ebx
mov     ecx, edx
shr     ecx, 5
imul    eax, ecx, -64h
add     ebx, eax
jmp     short loc_37a1313d
mov     eax, 0cccccccdh
mul     ebx
mov     ecx, edx
shr     ecx, 3
imul    eax, ecx, -0ah
add     ebx, eax
jmp     short loc_37a1313d
mov     ecx, ebx
xor     ebx, ebx
mov     [esp+10h], ebx
test    ecx, ecx
jnz     short loc_37a1314b
mov     eax, [edi]
test    eax, eax
jz      short loc_37a13160
mov     eax, [edi]
add     cl, 30h
mov     edx, [ebp+18h]
mov     [edx+eax], cl
inc     dword ptr [edi]
mov     eax, [edi]
mov     [esp+1ch], eax
jmp     short loc_37a13168
mov     dword ptr [esp+1ch], 0
movd    xmm0, dword ptr [esp+20h]
movd    xmm1, dword ptr [esp+10h]
mov     ecx, [ebp+14h]
psllq   xmm1, xmm0
movq    xmm0, qword ptr [esp+48h]
paddq   xmm1, xmm0
movq    qword ptr [esp+40h], xmm1
mov     edx, [esp+40h]
cmp     [esp+44h], ecx
jb      loc_37a13291
ja      short loc_37a131a5
cmp     edx, [esp+0ch]
jbe     loc_37a13291
test    esi, esi
jnz     loc_37a13070
mov     ebx, [esp+34h]
mov     edx, [esp+18h]
mov     [esp+34h], eax
mov     ecx, edx
mov     eax, ebx
shld    ecx, eax, 2
shl     eax, 2
add     ebx, eax
mov     eax, [esp+0ch]
mov     [esp+0ch], eax
adc     edx, ecx
mov     ecx, [esp+14h]
mov     [esp+14h], ecx
shld    ecx, eax, 2
shld    edx, ebx, 1
shl     eax, 2
add     ebx, ebx
mov     [esp+18h], edx
add     [esp+0ch], eax
mov     eax, [esp+0ch]
adc     [esp+14h], ecx
shld    dword ptr [esp+14h], eax, 1
mov     ecx, [esp+20h]
add     eax, eax
mov     [esp+0ch], eax
mov     eax, ebx
call    __aullshr
mov     ecx, [esp+1ch]
test    al, al
jnz     short loc_37a1321e
test    ecx, ecx
jnz     short loc_37a1321e
mov     eax, [esp+34h]
jmp     short loc_37a1322a
mov     edx, [ebp+18h]
add     al, 30h
mov     [ecx+edx], al
inc     dword ptr [edi]
mov     eax, [edi]
mov     edx, [esp+18h]
dec     esi
and     edx, [esp+3ch]
and     ebx, [esp+38h]
mov     [esp+1ch], eax
mov     [esp+18h], edx
cmp     edx, [esp+14h]
ja      loc_37a131b5
jb      short loc_37a13255
cmp     ebx, [esp+0ch]
jnb     loc_37a131b5
mov     eax, [ebp+20h]
add     [eax], esi
mov     eax, esi
neg     eax
cmp     eax, 9
jge     short loc_37a13275
lea     eax, ds:0[esi*4]
mov     ecx, offset dword_37b02408
sub     ecx, eax
mov     eax, [ecx]
jmp     short loc_37a13277
xor     eax, eax
mov     edx, [esp+30h]
mov     ecx, [esp+2ch]
push    edx
push    ecx
push    0
push    eax
call    __allmul
mov     ecx, eax
mov     eax, [esp+28h]
jmp     short loc_37a132cd
mov     ecx, [ebp+20h]
mov     ebx, edx
mov     eax, [esp+0ch]
xor     edx, edx
mov     [esp+0ch], eax
mov     eax, [ebp+14h]
add     [ecx], esi
mov     ecx, [esp+20h]
mov     [esp+14h], eax
mov     eax, [esp+44h]
mov     [esp+18h], eax
mov     eax, ds:dword_37b02408[esi*4]
call    __allshl
mov     ecx, [esp+2ch]
mov     [esp+24h], edx
mov     edx, [esp+30h]
push    edx
push    ecx
push    dword ptr [esp+2ch]
push    eax
push    dword ptr [esp+28h]
mov     eax, [edi]
push    ebx
push    dword ptr [esp+2ch]
push    dword ptr [esp+28h]
push    eax
push    dword ptr [ebp+18h]
call    nullsub_1
add     esp, 28h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
sbb     al, 63h
or      al, cl
jmp     near ptr 53dddfdah
repne sub al, 0e1h
movsb
dec     edx
dec     ebp
mov     edx, 771eaa48h
int     8fh
push    esi
mov     esi, ecx
push    dword ptr [esi+8]
call    j___free_base
push    1
push    dword ptr [esi+4]
call    sub_37ab1b25
add     esp, 0ch
pop     esi
retn
lds     ebp, [edi-40h]
add     ah, al
cwde
stosb
fxch7   st(2)
mov     ds:3c8c421ch, al
push    ebp
or      [esi+edi*8-33bb939ah], ebp
xor     eax, 0d67172bfh
add     [ebx], ecx
aad     19h
jz      short near ptr dword_37a1395c+0d0h
inc     esp
and     al, 4
mov     [ecx], eax
mov     eax, ecx
mov     dword ptr [ecx+4], 0
mov     dword ptr [ecx+8], 0
mov     dword ptr [ecx+0ch], 0
mov     dword ptr [ecx+10h], 0
mov     dword ptr [ecx+14h], 0
mov     dword ptr [ecx+18h], 100h
mov     dword ptr [ecx+1ch], 144h
mov     byte ptr [ecx+20h], 0
retn    0ch
lodsb
sub     cl, cl
mov     edx, 0abc06d4fh
pop     ebx
xor     eax, [edx]
mov     eax, 0b3036b48h
retn    5066h
push    esi
mov     esi, ecx
mov     ecx, [esi+0ch]
lea     eax, [ecx+1]
cmp     eax, [esi+10h]
jbe     short loc_37a13cba
push    1
mov     ecx, esi
call    sub_37a14c50
mov     ecx, [esi+0ch]
lea     eax, [ecx+1]
mov     [esi+0ch], eax
mov     byte ptr [ecx], 0
dec     dword ptr [esi+0ch]
mov     eax, [esi+8]
pop     esi
retn
push    esi
mov     esi, ecx
mov     ecx, [esi+14h]
cmp     ecx, 10h
jb      short loc_37a13d02
mov     eax, [esi]
inc     ecx
cmp     ecx, 1000h
jb      short loc_37a13cf8
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a13d15
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 0fh
mov     byte ptr [esi], 0
pop     esi
retn
call    __invalid_parameter_noinfo_noreturn
shl     dword ptr [ecx], 1
leave
jecxz   short loc_37a13d66
push    ebx
pop     edx
test    eax, 52777f02h
sub     esi, edi
or      [edx+4ch], dl
mov     dh, [ecx]
push    edi
mov     edi, [ecx+14h]
test    edi, edi
jz      short loc_37a13db0
mov     eax, [edi]
test    eax, eax
jz      short loc_37a13d9b
push    esi
mov     esi, eax
cmp     eax, [edi+8]
jz      short loc_37a13d8a
mov     esi, [eax+8]
push    eax
call    j___free_base
add     esp, 4
mov     [edi], esi
mov     eax, esi
test    esi, esi
jnz     short loc_37a13d71
test    esi, esi
jz      short loc_37a13d9a
cmp     esi, [edi+8]
jnz     short loc_37a13d9a
mov     dword ptr [esi+4], 0
pop     esi
push    1
push    dword ptr [edi+10h]
call    sub_37ab1b25
push    14h
push    edi
call    sub_37ab1b25
add     esp, 10h
pop     edi
retn
xchg    eax, edi
and     bl, [ebx]
xchg    dh, [eax+25h]
movsb
scasb
or      [esi+16404e51h], ecx
xacquire xchg    esp, [ecx-27h]
mov     [ecx], ah
adc     eax, 0a5735553h
into
adc     al, 22h
cdq
sti
iret
or      al, 7fh
rep jge short loc_37a13eb6
mov     fs, word ptr [ebx-3fh]
leave
into
fcom    qword ptr [ebx]
cmpsb
cld
jb      short loc_37a13efd
mov     ch, 66h
test    esp, edx
mov     dl, 23h
pop     edi
adc     [esi+ebp*8-5], ch
inc     eax
mov     dh, 0c4h
sub     dh, bl
pop     ebp
pop     ebp
sub     [ebx+esi], ch
mov     ebp, 6955a615h
mov     dh, 4bh
or      eax, 7aafcdb9h
xchg    eax, ecx
dec     esp
cmp     eax, 8d650bddh
xchg    eax, edi
xchg    eax, ebp
iret
push    ebx
push    esi
mov     esi, [esp+8+src]
mov     ebx, ecx
test    esi, esi
jnz     short loc_37a1401a
push    [esp+8+arg_8]
call    near ptr sub_37a140a0
pop     esi
pop     ebx
retn    0ch
mov     eax, [esp+8+arg_8]
test    eax, eax
jnz     short loc_37a14027
pop     esi
pop     ebx
retn    0ch
push    edi
mov     edi, [esp+0ch+arg_4]
lea     ecx, [eax+3]
add     edi, 3
and     ecx, 0fffffffch
and     edi, 0fffffffch
cmp     edi, ecx
jb      short loc_37a14044
pop     edi
mov     eax, esi
pop     esi
pop     ebx
retn    0ch
mov     edx, [ebx]
push    ebp
mov     ebp, [edx+4]
lea     eax, [edx+0ch]
sub     ebp, edi
add     eax, ebp
cmp     esi, eax
jnz     short loc_37a14068
lea     eax, [ecx+ebp]
cmp     eax, [edx]
ja      short loc_37a14068
pop     ebp
pop     edi
mov     [edx+4], eax
mov     eax, esi
pop     esi
pop     ebx
retn    0ch
push    ecx
mov     ecx, ebx
call    near ptr sub_37a140a0
mov     ebx, eax
test    ebx, ebx
jz      short loc_37a1408e
test    edi, edi
jz      short loc_37a14085
push    edi
push    esi
push    ebx
call    _memmove_0
add     esp, 0ch
pop     ebp
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
retn    0ch
pop     ebp
pop     edi
pop     esi
xor     eax, eax
pop     ebx
retn    0ch
add     eax, 23591167h
retf    2753h
push    offset loc_37adedd0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ebx
sub     esp, 2ch
mov     eax, [ebx+10h]
push    esi
sub     esp, 8
mov     esi, ecx
mov     edx, esp
lea     ecx, [ebp-38h]
mov     [edx], eax
mov     eax, [ebx+14h]
mov     [edx+4], eax
call    loc_37a13e40
mov     eax, [ebx+8]
xorps   xmm0, xmm0
mov     dword ptr [ebp-4], 0
movups  xmmword ptr [ebp-28h], xmm0
mov     [ebp-28h], eax
shr     eax, 1ah
not     eax
mov     dword ptr [ebp-24h], 0
and     eax, 20h
or      eax, 1d6h
mov     [ebp-1ah], ax
push    dword ptr [ebx+0ch]
lea     eax, [ebp-28h]
mov     byte ptr [ebp-4], 1
push    eax
lea     eax, [ebp-38h]
mov     ecx, esi
push    eax
call    sub_37a13dc0
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
mov     esp, ebx
pop     ebx
retn    10h
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 18h
push    esi
push    edi
mov     edi, ecx
movzx   ecx, word ptr [edi+0eh]
mov     eax, ecx
and     eax, 7
cmp     eax, 5
ja      def_37a141ef
jmp     ds:jpt_37a141ef[eax*4]
mov     esi, [ebp+arg_0]
mov     ecx, esi
push    0
call    sub_37a14950
mov     edx, [esi]
mov     eax, [edx+0ch]
add     eax, 4
cmp     eax, [edx+10h]
jbe     short loc_37a1421a
push    4
mov     ecx, edx
call    sub_37a14c50
mov     edx, [esi]
mov     ecx, [edx+0ch]
lea     eax, [ecx+1]
mov     [edx+0ch], eax
mov     byte ptr [ecx], 6eh
mov     edx, [esi]
mov     ecx, [edx+0ch]
lea     eax, [ecx+1]
mov     [edx+0ch], eax
mov     byte ptr [ecx], 75h
mov     edx, [esi]
mov     ecx, [edx+0ch]
lea     eax, [ecx+1]
mov     [edx+0ch], eax
mov     byte ptr [ecx], 6ch
mov     edx, [esi]
mov     ecx, [edx+0ch]
lea     eax, [ecx+1]
mov     [edx+0ch], eax
mov     al, 1
mov     byte ptr [ecx], 6ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, [ebp+arg_0]
push    0
call    loc_37a147e0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, [ebp+arg_0]
push    1
call    loc_37a147e0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     esi, [ebp+arg_0]
mov     ecx, esi
push    3
call    sub_37a14950
mov     ecx, [esi+10h]
lea     edx, [esi+4]
lea     eax, [ecx+8]
cmp     eax, [edx+10h]
jbe     short loc_37a142a7
push    1
mov     ecx, edx
call    sub_37a14ce0
mov     ecx, [esi+10h]
lea     edx, [esi+4]
lea     eax, [ecx+8]
mov     [edx+0ch], eax
mov     dword ptr [ecx], 0
mov     byte ptr [ecx+4], 0
mov     esi, [esi]
mov     ecx, [esi+0ch]
lea     eax, [ecx+1]
cmp     eax, [esi+10h]
jbe     short loc_37a142d0
push    1
mov     ecx, esi
call    sub_37a14c50
mov     ecx, [esi+0ch]
lea     eax, [ecx+1]
mov     [esi+0ch], eax
mov     byte ptr [ecx], 7bh
mov     eax, [edi]
mov     esi, [edi+8]
shl     eax, 5
add     eax, esi
cmp     esi, eax
jz      loc_37a14363
mov     eax, 1000h
mov     dx, [esi+0eh]
and     dx, ax
jz      short loc_37a1430a
movsx   eax, byte ptr [esi+0dh]
mov     ecx, 0dh
sub     ecx, eax
mov     dword ptr [esp+20h+var_14], ecx
jmp     short loc_37a14310
mov     eax, [esi]
mov     dword ptr [esp+20h+var_14], eax
test    dx, dx
jz      short loc_37a1431b
mov     dword ptr [esp+20h+var_14+4], esi
jmp     short loc_37a14322
mov     eax, [esi+8]
mov     dword ptr [esp+20h+var_14+4], eax
mov     ecx, [ebp+arg_0]
push    5
call    sub_37a14950
push    dword ptr [esp+20h+var_14]
mov     ecx, [ebp+arg_0]
push    dword ptr [esp+24h+var_14+4]
call    sub_37a149d0
test    al, al
jz      short loc_37a14396
push    [ebp+arg_0]
lea     ecx, [esi+10h]
call    sub_37a141d0
test    al, al
jz      short loc_37a14396
mov     eax, [edi]
add     esi, 20h
shl     eax, 5
add     eax, [edi+8]
cmp     esi, eax
mov     eax, 1000h
jnz     short loc_37a142f0
mov     eax, [ebp+arg_0]
add     dword ptr [eax+10h], 0fffffff8h
mov     esi, [eax]
mov     ecx, [esi+0ch]
lea     eax, [ecx+1]
cmp     eax, [esi+10h]
jbe     short loc_37a14383
push    1
mov     ecx, esi
call    sub_37a14c50
mov     ecx, [esi+0ch]
lea     eax, [ecx+1]
mov     [esi+0ch], eax
mov     al, 1
mov     byte ptr [ecx], 7dh
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
xor     al, al
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, [ebp+arg_0]
push    4
call    sub_37a14950
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+10h]
lea     esi, [ecx+4]
lea     eax, [edx+8]
cmp     eax, [esi+10h]
jbe     short loc_37a143ca
push    1
mov     ecx, esi
call    sub_37a14ce0
mov     edx, [esi+0ch]
mov     ecx, [ebp+arg_0]
lea     eax, [edx+8]
mov     [esi+0ch], eax
mov     dword ptr [edx], 0
mov     byte ptr [edx+4], 1
mov     esi, [ecx]
mov     edx, [esi+0ch]
lea     eax, [edx+1]
cmp     eax, [esi+10h]
jbe     short loc_37a143f6
push    1
mov     ecx, esi
call    sub_37a14c50
mov     edx, [esi+0ch]
mov     ecx, [ebp+arg_0]
lea     eax, [edx+1]
mov     [esi+0ch], eax
mov     byte ptr [edx], 5bh
mov     eax, [edi]
mov     esi, [edi+8]
shl     eax, 4
add     eax, esi
cmp     esi, eax
jz      short loc_37a14432
nop     dword ptr [eax]
push    ecx
mov     ecx, esi
call    sub_37a141d0
test    al, al
jz      loc_37a14396
mov     eax, [edi]
add     esi, 10h
mov     ecx, [ebp+arg_0]
shl     eax, 4
add     eax, [edi+8]
cmp     esi, eax
jnz     short loc_37a14410
mov     eax, [ebp+arg_0]
add     dword ptr [eax+10h], 0fffffff8h
mov     esi, [eax]
mov     ecx, [esi+0ch]
lea     eax, [ecx+1]
cmp     eax, [esi+10h]
jbe     short loc_37a14452
push    1
mov     ecx, esi
call    sub_37a14c50
mov     ecx, [esi+0ch]
lea     eax, [ecx+1]
mov     [esi+0ch], eax
mov     al, 1
mov     byte ptr [ecx], 5dh
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
test    ecx, 1000h
jz      short loc_37a1447e
movsx   eax, byte ptr [edi+0dh]
mov     ecx, 0dh
sub     ecx, eax
mov     dword ptr [esp+20h+var_14+4], ecx
jmp     short loc_37a14487
mov     eax, [edi]
mov     edi, [edi+8]
mov     dword ptr [esp+20h+var_14+4], eax
mov     ecx, [ebp+arg_0]
push    5
call    sub_37a14950
push    dword ptr [esp+24h+var_14]
mov     ecx, [ebp+arg_0]
push    edi
call    sub_37a149d0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     eax, ecx
shr     eax, 9
push    6
test    al, 1
jz      loc_37a145c7
movsd   xmm0, qword ptr [edi]
mov     esi, [ebp+arg_0]
mov     ecx, esi
movsd   [esp+24h+var_c+4], xmm0
call    sub_37a14950
movsd   xmm1, [esp+20h+var_c+4]
movsd   [esp+20h+var_14+4], xmm1
mov     eax, dword ptr [esp+20h+var_c]
and     eax, 7ff00000h
cmp     eax, 7ff00000h
jz      loc_37a14396
mov     edi, [esi]
mov     esi, [edi+0ch]
lea     eax, [esi+19h]
cmp     eax, [edi+10h]
jbe     short loc_37a14508
push    19h
mov     ecx, edi
call    sub_37a14c50
mov     esi, [edi+0ch]
movsd   xmm1, [esp+20h+var_c+4]
lea     eax, [esi+19h]
movsd   [esp+20h+var_c+4], xmm1
mov     edx, [esp+20h+var_4]
mov     ecx, dword ptr [esp+20h+var_c+4]
mov     [edi+0ch], eax
mov     edi, esi
mov     eax, [ebp+arg_0]
mov     eax, [eax+1ch]
mov     dword ptr [esp+20h+var_14+4], eax
mov     eax, edx
and     eax, 7fffffffh
or      ecx, eax
jnz     short loc_37a14568
and     edx, 80000000h
xor     eax, eax
or      eax, edx
jz      short loc_37a14545
mov     byte ptr [esi], 2dh
lea     edi, [esi+1]
mov     eax, [ebp+arg_0]
mov     word ptr [edi], 2e30h
mov     byte ptr [edi+2], 30h
add     edi, 3
sub     edi, esi
mov     eax, [eax]
sub     edi, 19h
add     [eax+0ch], edi
mov     al, 1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
xorps   xmm0, xmm0
comisd  xmm0, xmm1
jbe     short loc_37a1457e
xorps   xmm1, ds:xmmword_37b03be0
lea     edi, [esi+1]
mov     byte ptr [esi], 2dh
lea     eax, [esp+20h+var_14]
push    eax
lea     eax, [esp+24h+var_c+4]
push    eax
push    edi
sub     esp, 8
movsd   [esp+34h+var_38+4], xmm1
call    sub_37a13320
add     esp, 14h
push    [esp+8+arg_0]
push    dword ptr [esp+10h]
push    [esp+10h+arg_8]
push    edi
call    loc_37a13610
mov     edi, eax
add     esp, 10h
mov     eax, [ebp+arg_0]
sub     edi, esi
sub     edi, 19h
mov     eax, [eax]
add     [eax+0ch], edi
mov     al, 1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     al, cl
shr     al, 5
test    al, 1
jz      short loc_37a14631
mov     esi, [edi]
mov     edi, [ebp+arg_0]
mov     ecx, edi
call    sub_37a14950
mov     ecx, [edi]
mov     dword ptr [esp+20h+var_c+4], ecx
mov     edi, [ecx+0ch]
lea     eax, [edi+0bh]
cmp     eax, [ecx+10h]
jbe     short loc_37a145fb
push    0bh
call    sub_37a14c50
mov     ecx, dword ptr [esp+20h+var_c+4]
mov     edi, [ecx+0ch]
lea     eax, [edi+0bh]
mov     [ecx+0ch], eax
mov     eax, edi
test    esi, esi
jns     short loc_37a14610
not     esi
mov     byte ptr [edi], 2dh
lea     eax, [edi+1]
inc     esi
push    eax
push    esi
call    loc_37a126d0
mov     ecx, [ebp+arg_0]
sub     eax, edi
sub     eax, 0bh
add     esp, 8
mov     ecx, [ecx]
add     [ecx+0ch], eax
mov     al, 1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     al, cl
shr     al, 6
test    al, 1
jz      short loc_37a1468d
mov     eax, [edi]
mov     esi, [ebp+arg_0]
mov     ecx, esi
mov     dword ptr [esp+24h+var_c+4], eax
call    sub_37a14950
mov     esi, [esi]
mov     edi, [esi+0ch]
lea     eax, [edi+0ah]
cmp     eax, [esi+10h]
jbe     short loc_37a14663
push    0ah
mov     ecx, esi
call    sub_37a14c50
mov     edi, [esi+0ch]
push    edi
push    dword ptr [esp+24h+var_c+4]
lea     eax, [edi+0ah]
mov     [esi+0ch], eax
call    loc_37a126d0
mov     ecx, [ebp+arg_0]
sub     eax, edi
sub     eax, 0ah
add     esp, 8
mov     ecx, [ecx]
add     [ecx+0ch], eax
mov     al, 1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
shr     cl, 7
test    cl, 1
jz      loc_37a14718
mov     esi, [edi]
mov     ecx, [ebp+arg_0]
mov     edi, [edi+4]
call    sub_37a14950
mov     eax, [ebp+arg_0]
mov     edx, [eax]
mov     dword ptr [esp+20h+var_c+4], edx
mov     ecx, [edx+0ch]
mov     dword ptr [esp+20h+var_14+4], ecx
lea     eax, [ecx+15h]
cmp     eax, [edx+10h]
jbe     short loc_37a146d2
push    15h
mov     ecx, edx
call    sub_37a14c50
mov     edx, dword ptr [esp+20h+var_c+4]
mov     ecx, [edx+0ch]
mov     dword ptr [esp+20h+var_14+4], ecx
lea     eax, [ecx+15h]
mov     [edx+0ch], eax
mov     eax, ecx
test    edi, edi
jg      short loc_37a146f4
jl      short loc_37a146e4
test    esi, esi
jnb     short loc_37a146f4
not     esi
mov     byte ptr [ecx], 2dh
add     esi, 1
lea     eax, [ecx+1]
not     edi
adc     edi, 0
push    eax
push    edi
push    esi
call    sub_37a128c0
mov     ecx, [ebp+arg_0]
add     esp, 0ch
sub     eax, dword ptr [esp+20h+var_14+4]
sub     eax, 15h
mov     ecx, [ecx]
add     [ecx+0ch], eax
mov     al, 1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [edi]
mov     esi, [ebp+arg_0]
mov     ecx, esi
mov     dword ptr [esp+24h+var_14+4], eax
mov     eax, [edi+4]
mov     dword ptr [esp+24h+var_c+4], eax
call    sub_37a14950
mov     esi, [esi]
mov     edi, [esi+0ch]
lea     eax, [edi+14h]
cmp     eax, [esi+10h]
jbe     short loc_37a14748
push    14h
mov     ecx, esi
call    sub_37a14c50
mov     edi, [esi+0ch]
push    edi
push    dword ptr [esp+24h+var_c+4]
lea     eax, [edi+14h]
push    dword ptr [esp+28h+var_14+4]
mov     [esi+0ch], eax
call    sub_37a128c0
mov     ecx, [ebp+arg_0]
add     esp, 0ch
sub     eax, edi
sub     eax, 14h
mov     ecx, [ecx]
pop     edi
pop     esi
add     [ecx+0ch], eax
mov     al, 1
mov     esp, ebp
pop     ebp
retn    4
inc     edi
xchg    eax, ecx
lodsb
cmp     eax, 0e9bea911h
rcl     byte ptr [edi+0a8ffaaeh], cl
adc     eax, 49acdf19h
adc     [ecx], esp
in      eax, 0c4h
mov     ss, word ptr [edx+38h]
retf    0b435h
cmp     eax, eax
or      eax, 8ba06198h
in      al, 0d6h
daa
xchg    eax, edx
fcomi   st, st
pop     ss
cli
rol     dword ptr [edi], 44h
push    ss
mov     dh, 62h
enter   36a2h, 8fh
imul    ebx, esp, 0a29f1427h
retn    0e77bh
lodsd
wait
xor     ch, cl
pusha
movsd
stc
arpl    cs:[edx+766eb1e9h], dx
in      al, 73h
add     al, bh
inc     ecx
adc     [eax], al
retn
xor     ebp, [bp+di-21h]
popa
or      [edi+6556d7fch], esi
xor     eax, 6a619f89h
add     eax, cs:[ecx+edx*8+64e444aah]
loop    loc_37a148d1
dec     edx
aas
stosb
pop     ebx
mov     [eax], bl
mov     eax, 0d5150ef8h
into
out     0fah, eax
in      al, 1ah
rol     byte ptr [esi-4bc110f7h], 1
jmp     fword ptr [edi]
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 10h
mov     edx, [ebp+arg_4]
push    esi
push    edi
mov     edi, ecx
lea     eax, [edx+edx*2]
mov     [esp+18h+var_8], edi
lea     ecx, ds:2[eax*2]
mov     esi, [edi]
mov     eax, [esi+0ch]
add     eax, ecx
cmp     eax, [esi+10h]
jbe     short loc_37a14a07
push    ecx
mov     ecx, esi
call    sub_37a14c50
mov     esi, [edi]
mov     edx, [ebp+arg_4]
mov     ecx, [esi+0ch]
lea     eax, [ecx+1]
mov     [esi+0ch], eax
mov     byte ptr [ecx], 22h
mov     ecx, [ebp+arg_0]
mov     esi, ecx
mov     eax, esi
sub     eax, ecx
cmp     edx, 10h
jnb     short loc_37a14a28
cmp     eax, edx
jmp     loc_37a14b39
cmp     eax, edx
jnb     loc_37a14b40
add     ecx, edx
lea     edi, [esi+0fh]
mov     edx, ecx
and     edi, 0fffffff0h
and     edx, 0fffffff0h
mov     eax, esi
mov     [esp+18h+var_4], edx
cmp     edi, ecx
ja      loc_37a14b58
cmp     esi, edi
jz      short loc_37a14a8f
nop
mov     cl, [eax]
mov     [esp+18h+var_9], cl
cmp     cl, 20h
jl      loc_37a14b2d
cmp     cl, 22h
jz      loc_37a14b2d
cmp     cl, 5ch
jz      loc_37a14b2d
mov     ecx, [esp+18h+var_8]
inc     eax
mov     esi, [ecx]
mov     edx, [esi+0ch]
lea     ecx, [edx+1]
mov     [esi+0ch], ecx
mov     cl, [esp+18h+var_9]
mov     [edx], cl
cmp     eax, edi
jnz     short loc_37a14a50
mov     edx, [esp+18h+var_4]
movups  xmm4, ds:xmmword_37b0212c
movups  xmm5, ds:xmmword_37b02530
movups  xmm3, ds:xmmword_37b023f8
cmp     eax, edx
jz      loc_37a14b2d
mov     edi, [esp+18h+var_8]
movups  xmm2, xmmword ptr [eax]
mov     esi, [edi]
movaps  xmm1, xmm2
movaps  xmm0, xmm2
pcmpeqb xmm1, xmm5
pcmpeqb xmm0, xmm4
por     xmm1, xmm0
movaps  xmm0, xmm2
mov     edx, [esi+0ch]
pmaxub  xmm0, xmm3
pcmpeqb xmm0, xmm3
por     xmm1, xmm0
pmovmskb ecx, xmm1
movzx   ecx, cx
test    cx, cx
jnz     short loc_37a14af9
lea     ecx, [edx+10h]
add     eax, 10h
mov     [esi+0ch], ecx
movups  xmmword ptr [edx], xmm2
cmp     eax, [esp+18h+var_4]
jnz     short loc_37a14ab0
jmp     short loc_37a14b31
bsf     ecx, ecx
mov     [esp+18h+var_4], ecx
add     ecx, edx
mov     [esi+0ch], ecx
mov     ecx, [esp+18h+var_4]
test    ecx, ecx
jz      short loc_37a14b29
mov     edi, eax
mov     esi, ecx
sub     edi, edx
mov     cl, [edi+edx]
lea     edx, [edx+1]
mov     [edx-1], cl
sub     esi, 1
jnz     short loc_37a14b13
mov     edi, [esp+18h+var_8]
mov     ecx, [esp+18h+var_4]
add     eax, ecx
jmp     short loc_37a14b31
mov     edi, [esp+18h+var_8]
mov     esi, eax
sub     eax, [ebp+arg_0]
cmp     eax, [ebp+arg_4]
setb    al
test    al, al
jnz     short loc_37a14b5c
mov     edx, [edi]
pop     edi
pop     esi
mov     ecx, [edx+0ch]
lea     eax, [ecx+1]
mov     [edx+0ch], eax
mov     al, 1
mov     byte ptr [ecx], 22h
mov     esp, ebp
pop     ebp
retn    8
mov     edi, [esp+18h+var_8]
mov     al, [esi]
inc     esi
mov     edx, [edi]
mov     [esp+18h+var_9], al
movzx   eax, al
mov     [esp+18h+var_4], eax
mov     ecx, [edx+0ch]
cmp     ds:byte_37b02430[eax], 0
lea     eax, [ecx+1]
mov     [edx+0ch], eax
jz      loc_37a14c0b
mov     eax, [esp+18h+var_4]
mov     byte ptr [ecx], 5ch
mov     edx, [edi]
mov     al, ds:byte_37b02430[eax]
mov     [esp+18h+var_9], al
mov     ecx, [edx+0ch]
lea     eax, [ecx+1]
mov     [edx+0ch], eax
mov     al, [esp+18h+var_9]
mov     [ecx], al
mov     eax, [esp+18h+var_4]
cmp     ds:byte_37b02430[eax], 75h
jnz     short loc_37a14c11
mov     edx, [edi]
mov     ecx, [edx+0ch]
lea     eax, [ecx+1]
mov     [edx+0ch], eax
mov     byte ptr [ecx], 30h
mov     edx, [edi]
mov     ecx, [edx+0ch]
lea     eax, [ecx+1]
mov     [edx+0ch], eax
mov     eax, [esp+18h+var_4]
mov     byte ptr [ecx], 30h
mov     edx, [edi]
shr     eax, 4
mov     ecx, [edx+0ch]
mov     al, ds:byte_37b02610[eax]
mov     [esp+18h+var_9], al
lea     eax, [ecx+1]
mov     [edx+0ch], eax
mov     al, [esp+18h+var_9]
mov     [ecx], al
mov     edx, [edi]
mov     eax, [esp+18h+var_4]
and     eax, 0fh
mov     ecx, [edx+0ch]
mov     al, ds:byte_37b02610[eax]
mov     [esp+18h+var_9], al
lea     eax, [ecx+1]
mov     [edx+0ch], eax
mov     al, [esp+18h+var_9]
mov     [ecx], al
mov     edx, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
jmp     loc_37a14a18
mov     eax, [esp+arg_0]
or      edx, 0ffffffffh
lea     ecx, [eax+23h]
cmp     ecx, eax
cmovbe  ecx, edx
push    ecx
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      __invalid_parameter_noinfo_noreturn
lea     eax, [ecx+23h]
and     eax, 0ffffffe0h
mov     [eax-4], ecx
retn
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     ecx, [esi+8]
test    ecx, ecx
jnz     short loc_37a14c77
cmp     [esi], ecx
jnz     short loc_37a14c72
push    1
call    ??2@yapaxi@z
mov     ecx, [esi+8]
add     esp, 4
mov     [esi], eax
mov     [esi+4], eax
mov     edx, [esi+14h]
jmp     short loc_37a14c83
mov     edx, [esi+10h]
sub     edx, ecx
lea     eax, [edx+1]
shr     eax, 1
add     edx, eax
mov     ebx, [esi+0ch]
mov     edi, [esp+0ch+arg_0]
sub     ebx, ecx
add     edi, ebx
cmp     edx, edi
cmovnb  edi, edx
test    edi, edi
jnz     short loc_37a14cb6
push    ecx
call    j___free_base
xor     eax, eax
add     esp, 4
mov     [esi+8], eax
lea     ecx, [eax+ebx]
mov     eax, edi
pop     edi
mov     [esi+0ch], ecx
mov     [esi+10h], eax
pop     esi
pop     ebx
retn    4
push    edi
push    ecx
call    _realloc
add     esp, 8
mov     [esi+8], eax
lea     ecx, [eax+ebx]
add     eax, edi
pop     edi
mov     [esi+0ch], ecx
mov     [esi+10h], eax
pop     esi
pop     ebx
retn    4
hlt
xchg    eax, edi
xchg    edx, [ecx]
cmc
add     ebx, [ecx+eax*8+4eh]
add     eax, [ebx-49059467h]
pop     esp
fistp   dword ptr ds:98b1825eh
dec     esi
bound   ebp, [eax+10h]
test    eax, 0c3d80cd7h
aas
ror     dword ptr ds:0d884892dh, cl
push    ecx
mov     dh, 0d9h
nop
call    near ptr 50b27016h
scasd
jp      short loc_37a14d5b
inc     esp
lodsd
and     eax, 8a619604h
div     dword ptr [edi+1]
push    77f6262ah
xchg    eax, edx
outsd
xor     eax, [eax-34975b6bh]
xor     [edx+54h], eax
rep pop ecx
dec     edi
in      eax, 9fh
ror     dword ptr [edi], 1
sbb     al, 84h
leave
dec     edi
pop     esp
mov     edi, 19319436h
sub     [ebx+58h], bl
fsubr   dword ptr [edi]
int     3
mov     ch, 83h
ficomp  dword ptr [ecx]
mov     ebx, 108facc3h
bound   esp, [esi-6eh]
dec     eax
adc     eax, ebx
jnb     short loc_37a14dad
and     al, 98h
jl      short loc_37a14ce8
cmp     eax, 0bfc96117h
xchg    eax, esi
test    [ecx], edi
pop     esp
ja      short loc_37a14d1a
inc     edx
push    esp
inc     esi
add     al, 0d0h
popf
jbe     short loc_37a14d3d
imul    esp, [eax], 5ah
popf
fisub   word ptr [edx-3a1eb240h]
fbld    tbyte ptr [edi+9]
inc     ebp
pop     ds
and     bl, [esi]
out     0dbh, eax
mov     ch, [ecx]
xchg    eax, esi
push    esp
movsb
sub     bh, bh
nop
jp      short loc_37a14ded
push    ebx
pusha
int     3
dec     esp
adc     eax, [esp+24h+arg_229595df]
int     0d9h
dec     ebx
shr     dword ptr [edx-51e277c4h], 4fh
lea     ebx, [edi]
mov     edi, 1993fc1dh
idiv    dword ptr [ecx]
and     bh, ah
ficomp  word ptr [eax+5bdae745h]
in      eax, 14h
mov     bl, 0d1h
xor     ah, [edi+5cd9a4ah]
aam     9bh
imul    edi, ebx, 0b706e940h
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+arg_4]
push    ebx
push    esi
push    edi
cmp     eax, 5
ja      def_37a14de6
jmp     ds:jpt_37a14de6[eax*4]
mov     edi, [ebp+arg_0]
mov     esi, [edi]
mov     eax, esi
mov     ecx, [edi+4]
mov     edx, ecx
mov     ebx, esi
lock cmpxchg8b qword ptr [edi]
cmp     esi, eax
jnz     short loc_37a14df0
cmp     ecx, edx
jnz     short loc_37a14df0
mov     eax, esi
mov     edx, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+arg_0]
mov     esi, [edi]
mov     eax, esi
mov     ecx, [edi+4]
mov     edx, ecx
mov     ebx, esi
lock cmpxchg8b qword ptr [edi]
cmp     esi, eax
jnz     short loc_37a14e15
cmp     ecx, edx
jnz     short loc_37a14e15
mov     eax, esi
mov     edx, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+arg_0]
nop     word ptr [eax+eax+00h]
mov     esi, [edi]
mov     eax, esi
mov     ecx, [edi+4]
mov     edx, ecx
mov     ebx, esi
lock cmpxchg8b qword ptr [edi]
cmp     esi, eax
jnz     short loc_37a14e40
cmp     ecx, edx
jnz     short loc_37a14e40
mov     eax, esi
mov     edx, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
xor     eax, eax
xor     edx, edx
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37adedeb
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 8
push    esi
push    edi
mov     edi, ecx
push    50h
push    0
mov     [ebp-14h], edi
lea     esi, [edi+30h]
lea     eax, [esi+100h]
push    eax
call    _memset
push    100h
mov     dword ptr [esi+150h], 0
mov     byte ptr [esi+154h], 0
push    0
push    esi
mov     dword ptr [esi+158h], 0
mov     dword ptr [esi+15ch], 0
mov     dword ptr [esi+160h], 0
call    _memset
mov     dword ptr [ebp-4], 0
mov     edx, 8
mov     eax, dword_37b731f0
mov     ecx, [eax+2ch]
sub     ecx, [eax+28h]
sar     ecx, 2
mov     [edi+28h], ecx
lea     eax, [ecx+ecx*2]
xor     ecx, ecx
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx
mov     [ebp-10h], ecx
call    unknown_libname_13
mov     esi, eax
add     esp, 1ch
test    esi, esi
jz      short loc_37a14fbe
push    dword ptr [ebp-10h]
push    0
push    esi
call    _memset
add     esp, 0ch
jmp     short loc_37a14fc0
xor     esi, esi
xorps   xmm0, xmm0
mov     [edi], esi
push    80h
movsd   qword ptr [edi+8], xmm0
lea     eax, [edi+1b1h]
push    0
movups  xmmword ptr [edi+10h], xmm0
push    eax
movq    qword ptr [edi+20h], xmm0
call    _memset
mov     dl, [ebp+8]
add     esp, 0ch
mov     cl, dl
mov     al, 9
shr     cl, 4
cmp     al, cl
sbb     al, al
add     cl, 30h
and     al, 27h
and     dl, 0fh
add     al, cl
mov     [edi+1a0h], al
mov     al, 9
cmp     al, dl
sbb     al, al
add     dl, 30h
and     al, 27h
add     al, dl
mov     dl, [ebp+9]
mov     [edi+1a1h], al
mov     cl, dl
shr     cl, 4
mov     al, 9
cmp     al, cl
sbb     al, al
add     cl, 30h
and     al, 27h
and     dl, 0fh
add     al, cl
mov     [edi+1a2h], al
mov     al, 9
cmp     al, dl
sbb     al, al
add     dl, 30h
and     al, 27h
add     al, dl
mov     dl, [ebp+0ah]
mov     [edi+1a3h], al
mov     cl, dl
shr     cl, 4
mov     al, 9
cmp     al, cl
sbb     al, al
add     cl, 30h
and     al, 27h
and     dl, 0fh
add     al, cl
mov     [edi+1a4h], al
mov     al, 9
cmp     al, dl
sbb     al, al
add     dl, 30h
and     al, 27h
add     al, dl
mov     dl, [ebp+0bh]
mov     [edi+1a5h], al
mov     cl, dl
shr     cl, 4
mov     al, 9
cmp     al, cl
sbb     al, al
add     cl, 30h
and     al, 27h
and     dl, 0fh
add     al, cl
mov     [edi+1a6h], al
mov     al, 9
cmp     al, dl
sbb     al, al
and     al, 27h
add     dl, 30h
add     al, dl
mov     dl, [ebp+0ch]
mov     [edi+1a7h], al
mov     cl, dl
shr     cl, 4
mov     al, 9
cmp     al, cl
sbb     al, al
add     cl, 30h
and     al, 27h
and     dl, 0fh
add     al, cl
mov     [edi+1a8h], al
mov     al, 9
cmp     al, dl
sbb     al, al
add     dl, 30h
and     al, 27h
add     al, dl
mov     dl, [ebp+0dh]
mov     [edi+1a9h], al
mov     cl, dl
shr     cl, 4
mov     al, 9
cmp     al, cl
sbb     al, al
add     cl, 30h
and     al, 27h
and     dl, 0fh
add     al, cl
mov     [edi+1aah], al
mov     al, 9
cmp     al, dl
sbb     al, al
add     dl, 30h
and     al, 27h
add     al, dl
mov     dl, [ebp+0eh]
mov     [edi+1abh], al
mov     cl, dl
shr     cl, 4
mov     al, 9
cmp     al, cl
sbb     al, al
add     cl, 30h
and     al, 27h
and     dl, 0fh
add     al, cl
mov     [edi+1ach], al
mov     al, 9
cmp     al, dl
sbb     al, al
add     dl, 30h
and     al, 27h
add     al, dl
mov     dl, [ebp+0fh]
mov     [edi+1adh], al
mov     cl, dl
shr     cl, 4
mov     al, 9
cmp     al, cl
sbb     al, al
add     cl, 30h
and     al, 27h
and     dl, 0fh
add     al, cl
mov     ecx, [ebp-0ch]
mov     [edi+1aeh], al
mov     al, 9
cmp     al, dl
sbb     al, al
and     al, 27h
add     al, 30h
add     al, dl
mov     [edi+1afh], al
mov     eax, edi
pop     edi
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a151a0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 88h
push    esi
mov     esi, dword_37b731c8
lea     ecx, [ebp+var_94]
push    edi
push    0
push    400h
push    0
call    sub_37a13b50
xorps   xmm0, xmm0
mov     [ebp+var_4], 0
xor     eax, eax
movups  [ebp+var_38], xmm0
mov     word ptr [ebp+var_38+0eh], ax
lea     eax, [ebp+var_94]
mov     byte ptr [ebp+var_4], 1
movups  [ebp+var_94], xmm0
mov     edi, 3
mov     ecx, esi
push    eax
mov     word ptr [ebp+var_94+0eh], di
call    loc_37a158d0
lea     eax, [ebp+var_94]
push    eax
call    loc_37a159d0
lea     eax, [ebp+var_94]
mov     ecx, esi
push    eax
call    loc_37a15590
lea     eax, [ebp+var_94]
mov     ecx, esi
push    eax
call    sub_37a15d60
lea     eax, [ebp+var_94]
mov     ecx, esi
push    eax
call    sub_37a15360
lea     eax, [ebp+var_38]
xorps   xmm0, xmm0
push    eax
lea     eax, [ebp+var_94]
mov     ecx, esi
movups  [ebp+var_38], xmm0
push    eax
mov     word ptr [ebp+var_38+0eh], di
call    loc_37a16030
mov     esi, [ebp+var_84]
lea     ecx, [ebp+source+8]
sub     esp, 8
mov     eax, esp
mov     dword ptr [eax], offset aclient
mov     dword ptr [eax+4], 6
call    loc_37a13e40
push    esi
lea     eax, [ebp+var_38]
mov     byte ptr [ebp+var_4], 2
push    eax
lea     eax, [ebp+source+8]
push    eax
lea     ecx, [ebp+var_94]
call    sub_37a13dc0
xorps   xmm0, xmm0
mov     [ebp+var_14], 0
movups  xmmword ptr [ebp+source], xmm0
mov     [ebp+var_10], 1000h
lea     eax, [ebp+source]
mov     [ebp+var_48], 0
mov     [ebp+var_5c], eax
movups  xmmword ptr [ebp+block], xmm0
mov     [ebp+var_44], 100h
mov     [ebp+var_3c], 0
lea     eax, [ebp+var_5c]
mov     byte ptr [ebp+var_4], 4
push    eax
lea     ecx, [ebp+var_94]
mov     [ebp+var_40], 0ah
call    sub_37a141d0
mov     ecx, [ebp+source+0ch]
lea     eax, [ecx+1]
cmp     eax, [ebp+var_14]
jbe     short loc_37a15301
push    1
lea     ecx, [ebp+source]
call    sub_37a14c50
mov     ecx, [ebp+source+0ch]
lea     eax, [ecx+1]
mov     [ebp+source+0ch], eax
mov     byte ptr [ecx], 0
push    [ebp+source+8]
dec     [ebp+source+0ch]
call    __strdup
push    [ebp+block+8]
mov     esi, eax
call    j___free_base
push    1
push    [ebp+block+4]
call    sub_37ab1b25
push    [ebp+source+8]
call    j___free_base
push    1
push    [ebp+source+4]
call    sub_37ab1b25
add     esp, 1ch
lea     ecx, [ebp+var_94]
call    loc_37a13ae0
mov     ecx, [ebp+var_c]
mov     eax, esi
pop     edi
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37adee90
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 3ch
mov     eax, [ebp+arg_0]
xorps   xmm0, xmm0
push    esi
push    edi
movups  [ebp+var_28], xmm0
mov     edi, [eax+10h]
mov     eax, 3
mov     [ebp+var_10], edi
mov     word ptr [ebp+var_28+0eh], ax
lea     esi, [ecx+30h]
mov     [ebp+var_4], 0
cmp     byte ptr [esi], 0
mov     eax, esi
mov     [ebp+var_14], esi
jz      short loc_37a153b6
nop     word ptr [eax+eax+00h]
inc     eax
cmp     byte ptr [eax], 0
jnz     short loc_37a153b0
sub     esp, 8
sub     eax, esi
mov     ecx, esp
mov     [ecx], esi
mov     [ecx+4], eax
lea     ecx, [ebp+var_38]
call    loc_37a13e40
sub     esp, 8
lea     ecx, [ebp+var_48]
mov     eax, esp
mov     dword ptr [eax], offset apool
mov     dword ptr [eax+4], 4
call    loc_37a13e40
push    edi
lea     eax, [ebp+var_38]
mov     byte ptr [ebp+var_4], 2
push    eax
lea     eax, [ebp+var_48]
push    eax
lea     ecx, [ebp+var_28]
call    sub_37a13dc0
mov     ecx, esi
mov     byte ptr [ebp+var_4], 0
call    loc_37a16870
sub     esp, 8
mov     esi, eax
mov     ecx, esp
mov     dword ptr [ecx], offset auptime
mov     dword ptr [ecx+4], 6
lea     ecx, [ebp+var_48]
call    loc_37a13e40
mov     eax, esi
xorps   xmm0, xmm0
cdq
mov     edi, 0b6h
movups  [ebp+var_38], xmm0
mov     dword ptr [ebp+var_38], eax
test    esi, esi
mov     eax, edi
mov     dword ptr [ebp+var_38+4], edx
mov     ecx, 1f6h
cmovns  eax, ecx
mov     word ptr [ebp+var_38+0eh], ax
push    [ebp+var_10]
lea     eax, [ebp+var_38]
mov     byte ptr [ebp+var_4], 4
push    eax
lea     eax, [ebp+var_48]
push    eax
lea     ecx, [ebp+var_28]
call    sub_37a13dc0
mov     ecx, [ebp+var_14]
mov     byte ptr [ebp+var_4], 0
call    loc_37a16870
sub     esp, 8
mov     esi, eax
add     esi, dword_37b731cc
mov     ecx, esp
mov     dword ptr [ecx], offset dword_37afe79c
mov     dword ptr [ecx+4], 0ch
lea     ecx, [ebp+var_48]
call    loc_37a13e40
mov     eax, esi
xorps   xmm0, xmm0
cdq
test    esi, esi
movups  [ebp+var_38], xmm0
mov     dword ptr [ebp+var_38], eax
mov     eax, 1f6h
cmovns  edi, eax
mov     dword ptr [ebp+var_38+4], edx
mov     word ptr [ebp+var_38+0eh], di
mov     edi, [ebp+var_10]
mov     byte ptr [ebp+var_4], 6
push    edi
lea     eax, [ebp+var_38]
push    eax
lea     eax, [ebp+var_48]
push    eax
lea     ecx, [ebp+var_28]
call    sub_37a13dc0
mov     ecx, [ebp+var_14]
mov     byte ptr [ebp+var_4], 0
call    sub_37a168e0
sub     esp, 8
mov     esi, eax
mov     ecx, esp
mov     dword ptr [ecx], offset dword_37afe7ac
mov     dword ptr [ecx+4], 4
lea     ecx, [ebp+var_48]
call    loc_37a13e40
xorps   xmm0, xmm0
movups  [ebp+var_38], xmm0
mov     dword ptr [ebp+var_38], esi
shr     esi, 1ah
not     esi
mov     dword ptr [ebp+var_38+4], 0
and     esi, 20h
or      esi, 1d6h
mov     word ptr [ebp+var_38+0eh], si
push    edi
lea     eax, [ebp+var_38]
mov     byte ptr [ebp+var_4], 8
push    eax
lea     eax, [ebp+var_48]
push    eax
lea     ecx, [ebp+var_28]
call    sub_37a13dc0
sub     esp, 8
mov     byte ptr [ebp+var_4], 0
mov     eax, esp
lea     ecx, [ebp+var_28]
push    edi
push    dword_37b731d4
mov     dword ptr [eax], offset afailures
push    dword_37b731d0
mov     dword ptr [eax+4], 8
call    loc_37a16690
sub     esp, 8
lea     ecx, [ebp+var_48]
mov     eax, esp
mov     dword ptr [eax], offset aconnection
mov     dword ptr [eax+4], 0ah
call    loc_37a13e40
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+var_28]
push    edi
push    eax
lea     eax, [ebp+var_48]
mov     byte ptr [ebp+var_4], 9
push    eax
call    sub_37a13dc0
mov     ecx, [ebp+var_c]
pop     edi
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    es
dec     ebx
in      eax, dx
dec     edi
in      eax, 2
push    es
setalc
push    esp
cmps    dword ptr cs:[esi], dword ptr es:[edi]
setalc
loopne  loc_37a155d8
mov     esi, 2f93e245h
push    24h
bound   esi, [esi]
jmp     near ptr 3835f461h
or      al, 84h
cmp     [edx-5], bh
push    ecx
mov     edx, 5584157ah
mov     [ebp+67324232h], al
in      eax, dx
sbb     eax, [edi+3dh]
dec     ebx
add     [ecx-347e4d79h], edx
xchg    eax, esp
bound   edi, [eax+57h]
adc     cl, [esi-41h]
adc     bl, [eax-53614cbeh]
popa
push    0ffffffbdh
xlat
inc     eax
jle     short loc_37a158f2
leave
jbe     short loc_37a158ce
int     3
or      byte ptr [ebx], 0f4h
stosb
lock jnz short loc_37a15949
mov     [eax+3fh], cl
mov     edx, 0f4e1f5e4h
add     edx, es:[edx+51d70d0h]
test    bh, cl
lodsd
stosb
cli
call    far ptr 0c774h:8b2d1978h
add     [ecx+2ah], dh
cli
out     0ebh, al
leave
movsb
loop    loc_37a158a0
sub     ebp, [edx]
adc     al, 0e5h
movsd
popf
lodsb
push    ecx
hlt
sub     eax, 0e2622209h
push    ecx
pusha
cld
iret
mov     cl, 62h
inc     eax
inc     esp
inc     edx
jp      short loc_37a15905
push    0a038a38dh
cmpsb
pop     ebp
cmp     esi, esp
test    eax, 824a7e05h
sti
adc     [edi], cl
cmp     ebp, esp
les     esi, [ecx+62h]
push    ebp
xchg    eax, ebx
add     al, 0afh
push    ds
sbb     [edi+16h], al
push    ebx
xchg    eax, ecx
push    ebp
cdq
xor     bl, bl
test    [ecx+39h], cl
and     [eax], ebp
mov     ah, 2fh
stosd
xchg    ecx, [ecx+651c36f1h]
push    es
mov     [edx], cl
push    ebp
xchg    eax, esi
adc     al, 41h
add     ah, fs:[edx+5703a94bh]
jns     short loc_37a1593c
sub     ah, cl
cmpsb
jnp     short loc_37a15931
mov     edx, [eax+esi*2-9]
rcl     eax, 1
push    ss
cmp     ch, 0b7h
mov     esp, 83fcab1h
adc     [ebx+13723fd2h], bh
jns     short loc_37a15a15
fidiv   dword ptr [eax-55h]
test    [ebx-4dh], eax
inc     edi
rep jnb short loc_37a15a4c
sbb     eax, 0a445a36eh
aad     0a4h
jns     short loc_37a15a2d
add     [ebx], ah
ja      short near ptr loc_37a159cc+3
mov     [ecx], ah
popf
add     al, 7eh
dec     esp
push    ebx
cmp     ch, bh
fild    qword ptr [esi+46h]
adc     al, 0cfh
jbe     short near ptr loc_37a159f6+1
push    edi
pushf
mov     eax, 0aad58abh
movsd
adc     eax, [ecx+62h]
cmp     al, 74h
inc     edi
retn
cmp     bh, [edx-3e7b7ae1h]
pusha
xchg    esp, edi
push    esp
sbb     al, 0a3h
inc     edi
retn
push    esp
sub     ebp, esp
sub     [edx], al
xor     al, 48h
loopne  loc_37a15a2e
mov     esi, gs
leave
push    edx
pushf
idiv    dword ptr [ebx]
mov     ch, ah
cdq
sbb     ch, [eax-59h]
cdq
lahf
cwde
jns     short loc_37a15aa0
out     dx, al
pop     esp
dec     edi
aaa
xor     al, 8dh
xor     eax, 0d3395fdbh
pop     ebp
loop    near ptr dword_37a15a40
mov     [ebx-27h], ebp
add     [ebx-64h], edx
mov     al, ds:53c5d82eh
in      eax, 13h
outsb
or      al, 0fdh
dec     edx
movsd
sar     byte ptr [esi], cl
cmp     [esi-31ba8c39h], cl
or      [ecx+18h], edi
call    far ptr 0f8eeh:3dd9e8d6h
fist    word ptr [esi-3b20fcfdh]
mov     eax, ds:4b634f12h
dec     ebx
push    ecx
in      al, dx
mov     ebx, 7a9f84f0h
inc     edx
loope   loc_37a15b13
js      short near ptr dword_37a15a48
aam     0bdh
dec     ebx
test    eax, 9f90f71dh
jp      short near ptr loc_37a15a56+1
xchg    eax, ebx
push    edi
mov     cl, 60h
mov     ebx, 4192d780h
jo      short loc_37a15b4c
or      al, 0f4h
test    eax, 20ce01cdh
add     al, 2dh
test    eax, 0c689c438h
imul    ecx, [ebx-28b863abh], -58h
adc     [eax+98ce56fh], eax
mov     esi, 0ea717983h
test    [ebp-1dh], bl
jns     near ptr loc_37a15af2+3
pusha
mov     dh, bh
retf    0d9dch
fldl2t
rol     esi, 6fh
retn
bound   edx, [edi-6dbe4d37h]
adc     ebp, ebx
xor     dword ptr [edi+5ah], 0ffffffe5h
test    eax, 0c5b78499h
adc     ah, cl
xchg    dh, [edx]
and     ah, [ebx+67h]
sahf
sbb     ebx, [ebx+7ef58bbeh]
inc     ebx
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dword_37adf038
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 4ch
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     eax, ecx
xorps   xmm0, xmm0
mov     [ebp+var_10], eax
mov     ecx, 3
movups  [ebp+var_28], xmm0
mov     edi, [edi+10h]
mov     [ebp+var_14], edi
mov     word ptr [ebp+var_28+0eh], cx
mov     [ebp+var_4], 0
lea     ecx, [ebp+var_58]
mov     esi, [eax+180h]
sub     esp, 8
mov     eax, esp
mov     dword ptr [eax], offset adiffcurrent
mov     dword ptr [eax+4], 0ch
call    loc_37a13e40
xorps   xmm0, xmm0
movups  [ebp+var_38], xmm0
mov     dword ptr [ebp+var_38], esi
shr     esi, 1ah
not     esi
mov     dword ptr [ebp+var_38+4], 0
and     esi, 20h
or      esi, 1d6h
mov     word ptr [ebp+var_38+0eh], si
push    edi
lea     eax, [ebp+var_38]
mov     byte ptr [ebp+var_4], 2
push    eax
lea     eax, [ebp+var_58]
push    eax
lea     ecx, [ebp+var_28]
call    sub_37a13dc0
sub     esp, 8
mov     byte ptr [ebp+var_4], 0
mov     eax, esp
lea     ecx, [ebp+var_28]
push    edi
push    dword_37b731dc
mov     dword ptr [eax], offset asharesgood
push    dword_37b731d8
mov     dword ptr [eax+4], 0bh
call    loc_37a16690
mov     ecx, dword_37b731e0
sub     esp, 8
add     ecx, dword_37b731d8
mov     eax, esp
push    edi
mov     dword ptr [eax], offset dword_37afe894
mov     dword ptr [eax+4], 0ch
mov     eax, dword_37b731e4
adc     eax, dword_37b731dc
push    eax
push    ecx
lea     ecx, [ebp+var_28]
call    loc_37a16690
mov     ecx, [ebp+var_10]
add     ecx, 30h
mov     eax, [ecx+158h]
mov     esi, [ecx+15ch]
cmp     eax, esi
jnz     short loc_37a15e73
xor     esi, esi
jmp     short loc_37a15e82
sub     esi, eax
sar     esi, 1
call    loc_37a16870
xor     edx, edx
div     esi
mov     esi, eax
sub     esp, 8
mov     ecx, esp
mov     dword ptr [ecx], offset aavgtime
mov     dword ptr [ecx+4], 8
lea     ecx, [ebp+var_58]
call    loc_37a13e40
xorps   xmm0, xmm0
movups  [ebp+var_38], xmm0
mov     dword ptr [ebp+var_38], esi
shr     esi, 1ah
not     esi
mov     dword ptr [ebp+var_38+4], 0
and     esi, 20h
or      esi, 1d6h
mov     word ptr [ebp+var_38+0eh], si
push    edi
lea     eax, [ebp+var_38]
mov     byte ptr [ebp+var_4], 4
push    eax
lea     eax, [ebp+var_58]
push    eax
lea     ecx, [ebp+var_28]
call    sub_37a13dc0
sub     esp, 8
mov     byte ptr [ebp+var_4], 0
mov     eax, esp
push    5
push    offset dword_37b733c0
mov     dword ptr [eax], offset dword_37afe8b0
mov     dword ptr [eax+4], 0ah
call    sub_37a14dd0
add     esp, 8
lea     ecx, [ebp+var_28]
push    edi
push    edx
push    eax
call    loc_37a16690
sub     esp, 8
mov     eax, esp
push    5
push    offset dword_37b733c8
mov     dword ptr [eax], offset dword_37afe8bc
mov     dword ptr [eax+4], 0bh
call    sub_37a14dd0
add     esp, 8
lea     ecx, [ebp+var_28]
push    edi
push    edx
push    eax
call    loc_37a16690
xorps   xmm0, xmm0
mov     eax, 4
movups  [ebp+var_48], xmm0
mov     word ptr [ebp+var_48+0eh], ax
mov     edi, [ebp+var_10]
mov     eax, 116h
add     edi, 130h
mov     [ebp+var_10], 0ah
mov     esi, [edi+4]
xorps   xmm0, xmm0
mov     edx, [edi]
movups  [ebp+var_38], xmm0
mov     dword ptr [ebp+var_38], edx
mov     dword ptr [ebp+var_38+4], esi
mov     word ptr [ebp+var_38+0eh], ax
test    esi, esi
jl      short loc_37a15f7e
jg      short loc_37a15f75
test    edx, edx
jb      short loc_37a15f7e
mov     eax, 196h
mov     word ptr [ebp+var_38+0eh], ax
xor     ecx, ecx
or      ecx, esi
jnz     short loc_37a15f8c
or      ax, 40h
mov     word ptr [ebp+var_38+0eh], ax
and     edx, 80000000h
or      edx, esi
jnz     short loc_37a15f9e
or      ax, 20h
mov     word ptr [ebp+var_38+0eh], ax
mov     esi, [ebp+var_14]
lea     eax, [ebp+var_38]
push    esi
push    eax
lea     ecx, [ebp+var_48]
mov     byte ptr [ebp+var_4], 6
call    sub_37a163d0
add     edi, 8
mov     eax, 116h
sub     [ebp+var_10], 1
jnz     short loc_37a15f55
sub     esp, 8
lea     ecx, [ebp+var_58]
mov     eax, esp
mov     dword ptr [eax], offset abest
mov     dword ptr [eax+4], 4
call    loc_37a13e40
push    esi
lea     eax, [ebp+var_48]
mov     byte ptr [ebp+var_4], 7
push    eax
lea     eax, [ebp+var_58]
push    eax
lea     ecx, [ebp+var_28]
call    sub_37a13dc0
sub     esp, 8
lea     ecx, [ebp+var_58]
mov     eax, esp
mov     dword ptr [eax], offset aresults
mov     dword ptr [eax+4], 7
call    loc_37a13e40
mov     ecx, [ebp+arg_0]
lea     eax, [ebp+var_28]
push    esi
push    eax
lea     eax, [ebp+var_58]
mov     byte ptr [ebp+var_4], 8
push    eax
call    sub_37a13dc0
mov     ecx, [ebp+var_c]
pop     edi
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
js      short loc_37a1607e
jz      short near ptr loc_37a16014+2
retf    5f51h
or      al, 0d3h
nop
mov     ah, 0c6h
mov     al, 9bh
retn
push    ebx
mov     ebx, ecx
push    edi
mov     edx, [ebx]
mov     edi, [ebx+4]
cmp     edx, edi
jb      short loc_37a16411
push    esi
test    edi, edi
jnz     short loc_37a163e7
lea     esi, [edi+10h]
jmp     short loc_37a163f2
lea     esi, [edi+1]
shr     esi, 1
add     esi, edi
cmp     esi, edi
jbe     short loc_37a16410
mov     ecx, [esp+0ch+arg_4]
mov     eax, esi
shl     eax, 4
push    eax
shl     edi, 4
push    edi
push    dword ptr [ebx+8]
call    sub_37a14000
mov     edx, [ebx]
mov     [ebx+8], eax
mov     [ebx+4], esi
pop     esi
lea     eax, [edx+1]
xor     ecx, ecx
mov     [ebx], eax
mov     eax, [esp+8+arg_0]
shl     edx, 4
add     edx, [ebx+8]
pop     edi
movups  xmm0, xmmword ptr [eax]
movups  xmmword ptr [edx], xmm0
mov     [eax+0eh], cx
mov     eax, ebx
pop     ebx
retn    8
push    offset dword_37b027d0
call    sub_37ab022c
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jz      short loc_37a16519
mov     edx, [esi+8]
sub     edx, eax
and     edx, 0fffffffeh
cmp     edx, 1000h
jb      short loc_37a164fb
mov     ecx, [eax-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a1651b
mov     eax, ecx
push    edx
push    eax
call    sub_37ab1b25
mov     dword ptr [esi], 0
add     esp, 8
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
pop     esi
retn
call    __invalid_parameter_noinfo_noreturn
push    esi
mov     esi, ecx
push    edi
mov     edi, [esp+8+arg_0]
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
test    edi, edi
jnz     short loc_37a16557
pop     edi
xor     al, al
pop     esi
retn    4
cmp     edi, 7fffffffh
ja      short loc_37a165d4
add     edi, edi
cmp     edi, 1000h
jb      short loc_37a1659f
lea     eax, [edi+23h]
or      ecx, 0ffffffffh
cmp     eax, edi
cmovbe  eax, ecx
push    eax
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      short loc_37a165d9
lea     eax, [ecx+23h]
and     eax, 0ffffffe0h
mov     [eax-4], ecx
mov     [esi], eax
mov     [esi+4], eax
mov     eax, [esi]
add     eax, edi
mov     [esi+8], eax
mov     al, 1
pop     edi
pop     esi
retn    4
test    edi, edi
jz      short loc_37a165bf
push    edi
call    ??2@yapaxi@z
mov     [esi], eax
add     esp, 4
mov     [esi+4], eax
mov     eax, [esi]
add     eax, edi
mov     [esi+8], eax
mov     al, 1
pop     edi
pop     esi
retn    4
xor     eax, eax
mov     [esi], eax
mov     [esi+4], eax
mov     eax, [esi]
add     eax, edi
mov     [esi+8], eax
mov     al, 1
pop     edi
pop     esi
retn    4
call    sub_37a164c0
call    __invalid_parameter_noinfo_noreturn
push    ebx
mov     ebx, esp
sub     esp, 8
and     esp, 0fffffff8h
add     esp, 4
push    ebp
mov     ebp, [ebx+4]
mov     [esp+0ch+var_8], ebp
mov     ebp, esp
push    0ffffffffh
push    offset loc_37adedd0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ebx
sub     esp, 2ch
mov     eax, [ebx+8]
push    esi
sub     esp, 8
mov     esi, ecx
mov     edx, esp
lea     ecx, [ebp-38h]
mov     [edx], eax
mov     eax, [ebx+0ch]
mov     [edx+4], eax
call    loc_37a13e40
mov     ecx, [ebx+10h]
xorps   xmm0, xmm0
mov     eax, ecx
mov     dword ptr [ebp-4], 0
cdq
test    ecx, ecx
movups  xmmword ptr [ebp-28h], xmm0
mov     [ebp-28h], eax
mov     eax, 0b6h
mov     [ebp-24h], edx
mov     edx, 1f6h
cmovns  eax, edx
mov     [ebp-1ah], ax
push    dword ptr [ebx+14h]
lea     eax, [ebp-28h]
mov     byte ptr [ebp-4], 1
push    eax
lea     eax, [ebp-38h]
mov     ecx, esi
push    eax
call    sub_37a13dc0
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
mov     esp, ebx
pop     ebx
retn    10h
sbb     [ecx], cl
or      ebx, ecx
sub     eax, 235d5833h
pop     ss
retf
fidiv   dword ptr [edx]
adc     dword ptr [edi+487a8447h], 0ffffffd7h
xlat
and     ah, [ebx-5fh]
sub     al, 0f1h
mov     eax, offset dword_37b73660
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    dword ptr [ebp+0ch]
push    0
push    dword ptr [ebp+8]
push    edx
push    ecx
call    sub_37a16790
mov     ecx, [eax]
push    dword ptr [eax+4]
or      ecx, 2
push    ecx
call    sub_37abc637
or      ecx, 0ffffffffh
add     esp, 1ch
test    eax, eax
cmovs   eax, ecx
mov     esp, ebp
pop     ebp
retn
adc     bh, dl
rep test al, 0fbh
test    [edx-3ah], ebx
wait
inc     edx
push    eax
fnstcw  word ptr ds:7dfafc58h
pop     edi
jl      short loc_37a16782
dec     ebp
pop     ds
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     eax, ecx
push    edi
mov     [esp+10h], eax
mov     edi, [eax]
mov     ebx, edi
mov     esi, [eax+4]
mov     ecx, esi
add     ebx, [ebp+8]
mov     eax, edi
mov     [esp+14h], esi
mov     edx, esi
adc     ecx, [ebp+0ch]
mov     esi, [esp+10h]
lock cmpxchg8b qword ptr [esi]
mov     esi, [esp+14h]
cmp     edi, eax
mov     eax, [esp+10h]
jnz     short loc_37a16822
cmp     esi, edx
jnz     short loc_37a16822
add     edi, [ebp+8]
mov     eax, edi
adc     esi, [ebp+0ch]
pop     edi
mov     edx, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
add     eax, 0ef3c895h
sub     esp, 1ch
add     ecx, 158h
push    edi
mov     edi, [ecx+4]
sub     edi, [ecx]
sar     edi, 1
jnz     short loc_37a168fa
xor     eax, eax
pop     edi
add     esp, 1ch
retn
push    ebx
push    ebp
push    esi
push    ecx
lea     ecx, [esp+30h+src]
call    sub_37a16b60
mov     eax, [esp+2ch+src]
mov     esi, eax
mov     ebx, [esp+2ch+var_8]
shr     edi, 1
mov     [esp+2ch+var_1c], ebx
lea     ebp, [eax+edi*2]
mov     [esp+2ch+var_18], ebp
cmp     ebp, ebx
jz      loc_37a169d8
mov     eax, ebx
sub     eax, esi
and     eax, 0fffffffeh
cmp     eax, 40h
jle     short loc_37a1696a
mov     edi, [esp+2ch+var_18]
push    edi
push    ebx
mov     edx, esi
lea     ecx, [esp+34h+var_14]
call    sub_37a16bb0
mov     eax, [esp+34h+var_10]
add     esp, 8
cmp     eax, ebp
ja      short loc_37a16952
mov     esi, eax
jmp     short loc_37a1695e
mov     ebx, [esp+2ch+var_14]
mov     [esp+2ch+var_1c], ebx
cmp     ebx, ebp
jbe     short loc_37a169d8
mov     eax, ebx
sub     eax, esi
and     eax, 0fffffffeh
cmp     eax, 40h
jg      short loc_37a16936
cmp     esi, ebx
jz      short loc_37a169d8
lea     ecx, [esi+2]
mov     edi, ecx
cmp     edi, ebx
jz      short loc_37a169d8
movzx   eax, word ptr [edi]
mov     edx, edi
mov     ebp, eax
cmp     ax, [esi]
jnb     short loc_37a16997
mov     eax, edi
sub     eax, esi
push    eax
push    esi
push    ecx
call    _memmove
add     esp, 0ch
mov     [esi], bp
jmp     short loc_37a169ca
movzx   ebx, word ptr [edi-2]
lea     ecx, [edi-2]
cmp     ax, bx
mov     ebx, [esp+2ch+var_1c]
jnb     short loc_37a169c7
movzx   ebx, word ptr [ecx]
nop     word ptr [eax+eax+00h]
mov     [edx], bx
mov     edx, ecx
movzx   eax, word ptr [ecx-2]
sub     ecx, 2
mov     ebx, eax
cmp     bp, ax
jb      short loc_37a169b0
mov     ebx, [esp+2ch+var_1c]
mov     [edx], bp
add     edi, 2
lea     ecx, [esi+2]
cmp     edi, ebx
jnz     short loc_37a16977
mov     ebp, [esp+2ch+var_18]
mov     edx, [esp+2ch+src]
movzx   esi, word ptr [ebp+0]
test    edx, edx
jz      short loc_37a16a11
mov     ecx, [esp+2ch+var_4]
mov     eax, edx
sub     ecx, edx
and     ecx, 0fffffffeh
cmp     ecx, 1000h
jb      short loc_37a16a07
mov     edx, [edx-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a16a1b
push    ecx
push    edx
call    sub_37ab1b25
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
pop     ebx
pop     edi
add     esp, 1ch
retn
call    __invalid_parameter_noinfo_noreturn
push    ecx
push    esi
mov     esi, ecx
push    edi
mov     ecx, [esi+8]
mov     edi, [esi+4]
cmp     ecx, edi
jz      short loc_37a16a53
mov     eax, [esp+0ch+arg_0]
mov     ax, [eax]
mov     [edi], ax
add     dword ptr [esi+4], 2
pop     edi
pop     esi
pop     ecx
retn    4
mov     eax, [esi]
sub     edi, eax
sar     edi, 1
cmp     edi, 7fffffffh
jz      loc_37a16b46
sub     ecx, eax
mov     eax, 7fffffffh
sar     ecx, 1
mov     edx, ecx
shr     edx, 1
sub     eax, edx
push    ebp
lea     ebp, [edi+1]
cmp     ecx, eax
jbe     short loc_37a16a80
mov     eax, ebp
jmp     short loc_37a16a88
lea     eax, [edx+ecx]
cmp     eax, ebp
cmovb   eax, ebp
lea     ecx, [eax+eax]
mov     [esp+10h+var_4], ecx
push    ebx
cmp     eax, 7fffffffh
jbe     short loc_37a16a9c
or      ecx, 0ffffffffh
jmp     short loc_37a16aa4
cmp     ecx, 1000h
jb      short loc_37a16acb
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_37a16b4b
lea     ebx, [eax+23h]
and     ebx, 0ffffffe0h
mov     [ebx-4], eax
jmp     short loc_37a16ade
test    ecx, ecx
jz      short loc_37a16adc
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     ebx, eax
jmp     short loc_37a16ade
xor     ebx, ebx
mov     eax, [esp+14h+arg_0]
mov     ax, [eax]
mov     [ebx+edi*2], ax
mov     ecx, [esi]
mov     eax, [esi+4]
sub     eax, ecx
push    eax
push    ecx
push    ebx
call    _memmove
mov     eax, [esi]
add     esp, 0ch
test    eax, eax
jz      short loc_37a16b2d
mov     ecx, [esi+8]
sub     ecx, eax
and     ecx, 0fffffffeh
cmp     ecx, 1000h
jb      short loc_37a16b23
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a16b4b
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
lea     eax, [ebx+ebp*2]
mov     [esi], ebx
mov     [esi+4], eax
mov     eax, [esp+14h+var_4]
add     eax, ebx
pop     ebx
pop     ebp
pop     edi
mov     [esi+8], eax
pop     esi
pop     ecx
retn    4
call    sub_37a164c0
call    __invalid_parameter_noinfo_noreturn
push    ebx
mov     ebx, ecx
push    esi
mov     esi, [esp+8+arg_0]
mov     dword ptr [ebx], 0
mov     dword ptr [ebx+4], 0
mov     dword ptr [ebx+8], 0
mov     eax, [esi+4]
sub     eax, [esi]
sar     eax, 1
push    eax
call    sub_37a16530
test    al, al
jz      short loc_37a16ba9
mov     eax, [esi]
mov     esi, [esi+4]
push    edi
mov     edi, [ebx]
sub     esi, eax
push    esi
push    eax
push    edi
call    _memmove
add     esp, 0ch
lea     eax, [esi+edi]
mov     [ebx+4], eax
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
retn    4
sub     esp, 0ch
push    ebx
push    ebp
mov     ebp, [esp+14h+arg_0]
mov     ebx, edx
mov     eax, ebp
mov     [esp+14h+var_4], ecx
sub     eax, ebx
mov     [esp+14h+var_8], ebx
push    esi
sar     eax, 2
mov     ecx, ebx
push    edi
push    [esp+1ch+arg_4]
lea     esi, [ebx+eax*2]
lea     eax, [ebp-2]
mov     edx, esi
push    eax
call    sub_37a17090
add     esp, 8
lea     edi, [esi+2]
cmp     ebx, esi
jnb     short loc_37a16c0a
nop     word ptr [eax+eax+00h]
movzx   eax, word ptr [esi-2]
movzx   ecx, word ptr [esi]
cmp     ax, cx
jb      short loc_37a16c0a
cmp     cx, ax
jb      short loc_37a16c0a
lea     esi, [edx-2]
mov     edx, esi
cmp     ebx, esi
jb      short loc_37a16bf0
cmp     edi, ebp
jnb     short loc_37a16c25
movzx   ecx, word ptr [esi]
movzx   eax, word ptr [edi]
cmp     ax, cx
jb      short loc_37a16c25
cmp     cx, ax
jb      short loc_37a16c25
add     edi, 2
cmp     edi, ebp
jb      short loc_37a16c11
mov     eax, edi
mov     ebx, esi
mov     [esp+1ch+var_c], eax
nop     dword ptr [eax]
cmp     eax, ebp
jnb     short loc_37a16c5f
movzx   ecx, word ptr [esi]
movzx   edx, word ptr [eax]
cmp     cx, dx
jb      short loc_37a16c54
cmp     dx, cx
jb      short loc_37a16c5b
cmp     edi, eax
jz      short loc_37a16c51
movzx   ecx, word ptr [edi]
mov     [edi], dx
mov     [eax], cx
add     edi, 2
add     eax, 2
cmp     eax, ebp
jb      short loc_37a16c34
mov     [esp+1ch+var_c], eax
mov     ecx, [esp+1ch+var_8]
cmp     ebx, ecx
jbe     short loc_37a16ca8
lea     edx, [ebx-2]
mov     eax, ecx
nop     dword ptr [eax+00h]
movzx   ebp, word ptr [edx]
movzx   ecx, word ptr [esi]
cmp     bp, cx
jb      short loc_37a16c90
cmp     cx, bp
jb      short loc_37a16c9a
sub     esi, 2
cmp     esi, edx
jz      short loc_37a16c90
movzx   ecx, word ptr [esi]
mov     [esi], bp
mov     [edx], cx
sub     ebx, 2
sub     edx, 2
cmp     eax, ebx
jb      short loc_37a16c70
mov     ecx, [esp+1ch+var_8]
cmp     ebx, ecx
mov     eax, [esp+1ch+var_c]
mov     ebp, [esp+1ch+arg_0]
jnz     short loc_37a16cd8
cmp     eax, ebp
jz      short loc_37a16d1b
cmp     edi, eax
jz      short loc_37a16cbe
mov     cx, [edi]
movzx   edx, word ptr [esi]
mov     [esi], cx
mov     [edi], dx
mov     cx, [eax]
add     edi, 2
movzx   edx, word ptr [esi]
mov     [esi], cx
add     esi, 2
mov     [eax], dx
add     eax, 2
jmp     loc_37a16c29
add     ebx, 0fffffffeh
cmp     eax, ebp
jnz     short loc_37a16d07
sub     esi, 2
cmp     ebx, esi
jz      short loc_37a16cf2
mov     cx, [esi]
movzx   edx, word ptr [ebx]
mov     [ebx], cx
mov     [esi], dx
mov     cx, [edi-2]
sub     edi, 2
movzx   edx, word ptr [esi]
mov     [esi], cx
mov     [edi], dx
jmp     loc_37a16c30
movzx   edx, word ptr [eax]
mov     cx, [ebx]
mov     [eax], cx
add     eax, 2
mov     [ebx], dx
jmp     loc_37a16c29
mov     eax, [esp+1ch+var_4]
mov     [eax+4], edi
pop     edi
mov     [eax], esi
pop     esi
pop     ebp
pop     ebx
add     esp, 0ch
retn
sub     esp, 30h
push    ebx
push    ebp
push    esi
mov     esi, [esp+3ch+arg_0]
mov     ebp, ecx
push    edi
mov     edi, [esp+40h+arg_4]
mov     eax, esi
sub     eax, edi
mov     [esp+40h+var_28], edi
sar     eax, 3
cmp     eax, 20h
jle     loc_37a16fb6
test    ebp, ebp
jle     short loc_37a16dce
push    [esp+40h+arg_8]
lea     ecx, [esp+44h+var_8]
push    edi
push    esi
call    sub_37a17210
mov     esi, [esp+4ch+var_4]
mov     eax, ebp
mov     edi, [esp+4ch+var_8]
mov     edx, esi
mov     ecx, [esp+4ch+arg_4]
add     esp, 0ch
sar     eax, 2
sub     edx, ecx
sar     ebp, 1
and     edx, 0fffffff8h
add     ebp, eax
mov     eax, [esp+40h+arg_0]
mov     ebx, eax
sub     ebx, edi
and     ebx, 0fffffff8h
cmp     ebx, edx
mov     edx, [esp+40h+arg_8]
push    edx
jge     short loc_37a16dae
push    edi
push    eax
mov     ecx, ebp
call    sub_37a16d30
mov     edi, [esp+4ch+arg_4]
mov     [esp+4ch+arg_0], esi
jmp     short loc_37a16dbf
push    ecx
push    esi
mov     ecx, ebp
call    sub_37a16d30
mov     esi, [esp+4ch+arg_0]
mov     [esp+4ch+arg_4], edi
mov     eax, esi
add     esp, 0ch
sub     eax, edi
sar     eax, 3
cmp     eax, 20h
jg      short loc_37a16d55
mov     [esp+40h+var_28], edi
cmp     eax, 20h
jle     loc_37a16fb6
mov     ebx, esi
sub     ebx, edi
mov     eax, ebx
mov     [esp+40h+var_8], ebx
sar     eax, 3
mov     ecx, eax
mov     [esp+40h+var_18], eax
sar     ecx, 1
test    ecx, ecx
jle     loc_37a16f54
dec     eax
mov     edx, esi
mov     edi, eax
mov     [esp+40h+var_14], eax
sar     edi, 1
lea     eax, ds:8[ecx*8]
mov     [esp+40h+var_10], edi
sub     edx, eax
mov     eax, [edx+8]
add     edx, 8
dec     ecx
mov     [esp+40h+var_24], eax
mov     [esp+40h+var_1c], ecx
mov     ebp, ecx
mov     [esp+40h+var_c], edx
mov     ebx, ecx
mov     eax, [edx+4]
mov     [esp+40h+var_20], eax
mov     [esp+40h+var_2c], ebp
cmp     ecx, edi
jge     short loc_37a16e96
nop     word ptr [eax+eax+00000000h]
add     ebx, ebx
mov     ecx, esi
lea     eax, ds:10h[ebx*8]
sub     ecx, eax
mov     eax, [ecx-4]
cmp     eax, [ecx+4]
jb      short loc_37a16e65
ja      short loc_37a16e5e
mov     eax, [ecx-8]
cmp     eax, [ecx]
jb      short loc_37a16e65
mov     eax, 2
jmp     short loc_37a16e6a
mov     eax, 1
add     ebx, eax
mov     edx, esi
mov     ecx, esi
lea     eax, ds:8[ebx*8]
sub     edx, eax
lea     eax, ds:8[ebp*8]
sub     ecx, eax
mov     ebp, ebx
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+4]
mov     [ecx+4], eax
cmp     ebx, edi
jl      short loc_37a16e40
mov     [esp+40h+var_2c], ebx
cmp     ebx, edi
jnz     short loc_37a16ec6
mov     eax, [esp+40h+var_18]
test    al, 1
jnz     short loc_37a16ec6
shl     eax, 3
mov     edx, esi
sub     edx, eax
mov     ecx, esi
lea     eax, ds:8[ebp*8]
mov     ebp, [esp+40h+var_14]
sub     ecx, eax
mov     [esp+40h+var_2c], ebp
mov     eax, [edx]
mov     [ecx], eax
mov     eax, [edx+4]
mov     [ecx+4], eax
mov     edi, [esp+40h+var_1c]
lea     edx, [ebp-1]
sar     edx, 1
cmp     edi, ebp
jge     short loc_37a16f18
lea     eax, ds:8[edx*8]
mov     ecx, esi
sub     ecx, eax
mov     ebp, [ecx+4]
mov     ebx, [ecx]
cmp     ebp, [esp+40h+var_20]
ja      short loc_37a16f14
jb      short loc_37a16ef1
cmp     ebx, [esp+40h+var_24]
jnb     short loc_37a16f14
mov     eax, [esp+40h+var_2c]
mov     ecx, esi
lea     eax, ds:8[eax*8]
sub     ecx, eax
mov     [ecx+4], ebp
mov     ebp, edx
dec     edx
mov     [ecx], ebx
sar     edx, 1
mov     [esp+40h+var_2c], ebp
cmp     edi, ebp
jl      short loc_37a16ed3
jmp     short loc_37a16f18
mov     ebp, [esp+40h+var_2c]
mov     edi, [esp+40h+var_10]
lea     eax, ds:8[ebp*8]
mov     edx, [esp+40h+var_c]
mov     ecx, esi
sub     ecx, eax
mov     eax, [esp+40h+var_24]
mov     [ecx], eax
mov     eax, [esp+40h+var_20]
mov     [ecx+4], eax
mov     ecx, [esp+40h+var_1c]
test    ecx, ecx
jg      loc_37a16e10
mov     esi, [esp+40h+arg_0]
mov     edi, [esp+40h+var_28]
mov     ebx, [esp+40h+var_8]
mov     eax, [esp+40h+var_18]
cmp     eax, 2
jl      loc_37a1707b
nop     dword ptr [eax]
mov     eax, ebx
and     eax, 0fffffff8h
cmp     eax, 10h
jl      short loc_37a16f9c
mov     eax, [edi]
lea     edx, [ebx-8]
push    [esp+40h+arg_8]
mov     [esp+44h+var_8], eax
xor     ecx, ecx
mov     eax, [edi+4]
mov     [esp+44h+var_4], eax
mov     eax, [esi-8]
mov     [edi], eax
mov     eax, [esi-4]
mov     [edi+4], eax
lea     eax, [esp+44h+var_8]
push    eax
sar     edx, 3
push    esi
call    sub_37a17540
add     esp, 0ch
add     edi, 8
mov     eax, esi
sub     eax, edi
sub     ebx, 8
and     eax, 0fffffff8h
cmp     eax, 10h
jge     short loc_37a16f60
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
cmp     eax, 2
jl      loc_37a1707b
cmp     esi, edi
jz      loc_37a1707b
lea     ecx, [esi-8]
cmp     ecx, edi
jz      loc_37a1707b
lea     edx, [ecx-8]
mov     [esp+40h+var_28], ecx
mov     [esp+40h+var_2c], edx
nop     dword ptr [eax]
mov     ebp, [edx+4]
mov     eax, ecx
mov     ebx, [edx]
mov     edx, [esp+40h+var_28]
mov     [esp+40h+var_18], ebx
mov     [esp+40h+var_24], ebp
cmp     ebp, [edx+4]
mov     edx, [esp+40h+var_2c]
ja      short loc_37a17036
jb      short loc_37a1700b
mov     ebp, [esp+40h+var_28]
cmp     ebx, [ebp+0]
mov     ebp, [esp+40h+var_24]
jnb     short loc_37a17036
cmp     esi, ecx
jz      short loc_37a1702b
mov     eax, edx
mov     edx, [eax+8]
lea     eax, [eax+8]
mov     [eax-8], edx
mov     edx, [eax+4]
mov     [eax-4], edx
lea     edx, [eax+8]
cmp     edx, esi
jnz     short loc_37a17011
mov     edx, [esp+40h+var_2c]
mov     eax, [esp+40h+var_28]
mov     [eax], ebx
mov     [eax+4], ebp
jmp     short loc_37a17069
mov     ebp, [edx+0ch]
lea     edx, [edx+8]
mov     ebx, [edx]
cmp     [esp+40h+var_24], ebp
ja      short loc_37a17057
jb      short loc_37a1704c
cmp     [esp+40h+var_18], ebx
jnb     short loc_37a17057
mov     [eax-8], ebx
mov     [eax-4], ebp
lea     eax, [edx+8]
jmp     short loc_37a17036
mov     edx, [esp+40h+var_18]
mov     [eax-8], edx
mov     edx, [esp+40h+var_24]
mov     [eax-4], edx
mov     edx, [esp+40h+var_2c]
sub     ecx, 8
sub     edx, 8
mov     [esp+40h+var_2c], edx
cmp     ecx, edi
jnz     loc_37a16fe0
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
sub     esp, 0ch
push    ebx
push    esi
push    edi
mov     edi, [esp+18h+arg_0]
mov     eax, edi
sub     eax, ecx
sar     eax, 1
cmp     eax, 28h
jle     loc_37a171c9
inc     eax
sar     eax, 3
push    ebp
lea     ebx, ds:0[eax*4]
lea     ebp, [eax+eax]
mov     [esp+1ch+var_c], ebx
movzx   ebx, word ptr [ecx]
lea     esi, [ecx+ebp]
movzx   eax, word ptr [esi]
mov     [esp+1ch+var_8], ebx
mov     ebx, eax
mov     [esp+1ch+var_4], ebp
cmp     ax, word ptr [esp+1ch+var_8]
jnb     short loc_37a170e3
mov     ebx, [esp+1ch+var_8]
mov     [esi], bx
mov     [ecx], ax
movzx   ebx, word ptr [esi]
mov     eax, [esp+1ch+var_c]
movzx   eax, word ptr [eax+ecx]
cmp     ax, bx
jnb     short loc_37a1710d
mov     edi, [esp+1ch+var_c]
mov     [edi+ecx], bx
mov     edi, [esp+1ch+arg_0]
mov     [esi], ax
movzx   ebx, word ptr [ecx]
cmp     ax, bx
jnb     short loc_37a1710d
mov     [esi], bx
mov     [ecx], ax
movzx   eax, word ptr [edx]
mov     ecx, edx
sub     ecx, ebp
mov     ebx, eax
movzx   ebp, word ptr [ecx]
cmp     ax, bp
jnb     short loc_37a17127
mov     [edx], bp
mov     [ecx], ax
movzx   ebx, word ptr [edx]
mov     ebp, [esp+1ch+var_4]
movzx   eax, word ptr [edx+ebp]
cmp     ax, bx
jnb     short loc_37a17149
mov     [edx+ebp], bx
mov     [edx], ax
movzx   ebx, word ptr [ecx]
cmp     ax, bx
jnb     short loc_37a17149
mov     [edx], bx
mov     [ecx], ax
mov     ebx, edi
mov     ecx, edi
sub     ebx, [esp+1ch+var_c]
sub     ecx, ebp
movzx   ebp, word ptr [ebx]
movzx   eax, word ptr [ecx]
mov     [esp+1ch+arg_0], ebp
mov     ebp, eax
cmp     ax, word ptr [esp+1ch+arg_0]
jnb     short loc_37a17173
mov     ebp, [esp+1ch+arg_0]
mov     [ecx], bp
mov     [ebx], ax
movzx   ebp, word ptr [ecx]
movzx   eax, word ptr [edi]
cmp     ax, bp
jnb     short loc_37a1718f
mov     [edi], bp
mov     [ecx], ax
movzx   edi, word ptr [ebx]
cmp     ax, di
jnb     short loc_37a1718f
mov     [ecx], di
mov     [ebx], ax
movzx   eax, word ptr [edx]
movzx   ebx, word ptr [esi]
mov     edi, eax
pop     ebp
cmp     ax, bx
jnb     short loc_37a171a6
mov     [edx], bx
mov     [esi], ax
movzx   edi, word ptr [edx]
movzx   eax, word ptr [ecx]
cmp     ax, di
jnb     short loc_37a171fb
mov     [ecx], di
mov     [edx], ax
movzx   ecx, word ptr [esi]
cmp     ax, cx
jnb     short loc_37a171fb
pop     edi
mov     [edx], cx
mov     [esi], ax
pop     esi
pop     ebx
add     esp, 0ch
retn
movzx   eax, word ptr [edx]
movzx   ebx, word ptr [ecx]
mov     esi, eax
cmp     ax, bx
jnb     short loc_37a171df
mov     [edx], bx
mov     [ecx], ax
movzx   esi, word ptr [edx]
movzx   eax, word ptr [edi]
cmp     ax, si
jnb     short loc_37a171fb
mov     [edi], si
mov     [edx], ax
movzx   esi, word ptr [ecx]
cmp     ax, si
jnb     short loc_37a171fb
mov     [edx], si
mov     [ecx], ax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 14h
mov     eax, [esp+14h+arg_4]
push    ebx
push    ebp
push    esi
push    edi
mov     edi, [esp+24h+arg_0]
lea     esi, [eax+8]
push    [esp+24h+arg_8]
mov     [esp+28h+var_4], ecx
mov     edx, edi
sub     edx, eax
mov     [esp+28h+var_14], eax
sar     edx, 4
mov     ecx, edi
sub     ecx, esi
shl     edx, 3
mov     ebx, edi
sar     ecx, 3
sub     ebx, edx
mov     [esp+28h+var_10], edi
cmp     ecx, 28h
jle     short loc_37a172b2
inc     ecx
mov     eax, edi
sar     ecx, 3
mov     edx, ecx
shl     edx, 4
sub     eax, edx
mov     [esp+28h+var_c], edx
lea     ebp, ds:0[ecx*8]
push    eax
sub     edi, ebp
push    edi
push    [esp+30h+var_10]
call    sub_37a17670
push    [esp+34h+arg_8]
mov     ecx, ebx
lea     eax, [ebx+ebp]
sub     ecx, ebp
push    ecx
push    ebx
push    eax
call    sub_37a17670
mov     ecx, [esp+44h+var_14]
add     esi, ebp
mov     ebp, [esp+44h+arg_8]
add     ecx, 8
mov     eax, [esp+44h+var_c]
push    ebp
push    ecx
add     eax, ecx
push    esi
push    eax
call    sub_37a17670
push    ebp
push    esi
push    ebx
push    edi
call    sub_37a17670
mov     edi, [esp+64h+var_10]
add     esp, 40h
jmp     short loc_37a172bd
push    esi
push    ebx
push    edi
call    sub_37a17670
add     esp, 10h
lea     ecx, [ebx-8]
mov     eax, ebx
cmp     ebx, edi
jnb     short loc_37a172f5
mov     esi, ebx
mov     ebp, [ebx+4]
mov     eax, [ebx]
mov     edx, [ebx-8]
cmp     ebp, [ebx-4]
jb      short loc_37a172f3
ja      short loc_37a172db
cmp     eax, edx
jb      short loc_37a172f3
cmp     [ebx-4], ebp
jb      short loc_37a172f3
ja      short loc_37a172e6
cmp     edx, eax
jb      short loc_37a172f3
lea     ebx, [esi+8]
mov     esi, ebx
mov     eax, ebx
cmp     ebx, edi
jb      short loc_37a172c8
jmp     short loc_37a172f5
mov     eax, esi
cmp     [esp+24h+arg_4], ecx
jnb     short loc_37a1733a
mov     edx, [eax-8]
mov     edi, edx
mov     eax, [eax-4]
mov     [esp+24h+arg_8], eax
mov     eax, [esp+24h+var_14]
mov     [esp+24h+var_c], edx
nop
mov     ebp, [ecx-4]
lea     edx, [ecx-8]
mov     esi, [edx]
cmp     ebp, [esp+24h+arg_8]
jb      short loc_37a17336
ja      short loc_37a17324
cmp     esi, edi
jb      short loc_37a17336
cmp     [esp+24h+arg_8], ebp
jb      short loc_37a17336
ja      short loc_37a17330
cmp     edi, esi
jb      short loc_37a17336
mov     ecx, edx
cmp     eax, edx
jb      short loc_37a17310
mov     edi, [esp+24h+var_10]
mov     ebp, ecx
mov     eax, ebx
mov     [esp+24h+arg_8], ebp
mov     [esp+24h+var_c], eax
mov     esi, [esp+24h+var_14]
nop     word ptr [eax+eax+00h]
cmp     [esp+24h+arg_4], ebp
jnb     short loc_37a173b6
mov     eax, [ebp-4]
lea     edx, [ebp-8]
mov     edi, [edx]
mov     [esp+24h+arg_8], edx
mov     [esp+24h+var_8], eax
cmp     [ebx-4], eax
jb      short loc_37a173a4
ja      short loc_37a17372
cmp     [ebx-8], edi
jb      short loc_37a173a4
cmp     eax, [ebx-4]
jb      short loc_37a173aa
ja      short loc_37a1737e
cmp     edi, [ebx-8]
jb      short loc_37a173aa
cmp     ecx, ebp
jz      short loc_37a173a1
mov     edx, [ecx-8]
add     ecx, 0fffffff8h
mov     ebp, [ecx+4]
mov     [ecx], edi
mov     edi, [esp+24h+var_8]
mov     [ecx+4], edi
mov     edi, [esp+24h+arg_8]
mov     [edi], edx
mov     edx, edi
mov     [edx+4], ebp
jmp     short loc_37a173a4
sub     ecx, 8
mov     ebp, edx
cmp     esi, edx
jb      short loc_37a17356
mov     eax, [esp+24h+var_c]
mov     edi, [esp+24h+var_10]
mov     [esp+24h+arg_8], ebp
mov     edx, [esp+24h+arg_0]
cmp     eax, edx
jnb     short loc_37a17418
xchg    ax, ax
mov     ebp, [eax+4]
mov     edx, [eax]
mov     esi, [ebx-8]
mov     [esp+24h+var_c], ebp
cmp     ebp, [ebx-4]
jb      short loc_37a17403
ja      short loc_37a173d7
cmp     edx, esi
jb      short loc_37a17403
cmp     [ebx-4], ebp
jb      short loc_37a1740a
ja      short loc_37a173e2
cmp     esi, edx
jb      short loc_37a1740a
add     ebx, 8
lea     edx, [eax+8]
cmp     ebx, edx
jz      short loc_37a17403
mov     esi, [eax]
mov     edx, [ebx-8]
mov     ebp, [ebx-4]
mov     [ebx-8], esi
mov     esi, [esp+24h+var_c]
mov     [ebx-4], esi
mov     [eax], edx
mov     [eax+4], ebp
add     eax, 8
cmp     eax, edi
jb      short loc_37a173c0
mov     edx, [esp+24h+arg_0]
cmp     eax, edx
mov     esi, [esp+24h+var_14]
mov     [esp+24h+var_c], eax
mov     edx, [esp+24h+arg_8]
jnz     short loc_37a1748f
cmp     edx, [esp+24h+arg_4]
jz      loc_37a17520
cmp     ecx, edx
jz      short loc_37a17450
mov     edx, [ebx-4]
mov     ebp, [ebx-8]
mov     [esp+24h+var_8], edx
mov     edx, [ecx-8]
mov     [ebx-8], edx
mov     edx, [ecx-4]
mov     [ebx-4], edx
mov     edx, [esp+24h+var_8]
mov     [ecx-4], edx
mov     edx, [esp+24h+arg_8]
mov     [ecx-8], ebp
mov     ebp, [ebx-8]
add     edx, 0fffffff8h
mov     [esp+24h+arg_8], edx
sub     ecx, 8
mov     edx, [ebx-4]
add     ebx, 0fffffff8h
mov     [esp+24h+var_8], edx
mov     edx, [esp+24h+arg_8]
mov     edx, [edx]
mov     [ebx], edx
mov     edx, [esp+24h+arg_8]
mov     edx, [edx+4]
mov     [ebx+4], edx
mov     edx, [esp+24h+arg_8]
mov     [edx], ebp
mov     ebp, [esp+24h+arg_8]
mov     edx, [esp+24h+var_8]
mov     [ebp+4], edx
jmp     loc_37a17350
add     eax, 8
mov     [esp+24h+var_c], eax
cmp     edx, [esp+24h+arg_4]
jnz     short loc_37a174ef
add     ebx, 8
cmp     eax, ebx
jz      short loc_37a174c3
mov     edx, [eax-4]
mov     ebp, [eax-8]
mov     [esp+24h+var_8], edx
mov     edx, [ebx-8]
mov     [eax-8], edx
mov     edx, [ebx-4]
mov     [eax-4], edx
mov     edx, [esp+24h+var_8]
mov     [ebx-8], ebp
mov     [ebx-4], edx
mov     edx, [ebx-4]
add     ecx, 8
mov     ebp, [ebx-8]
mov     [esp+24h+var_8], edx
mov     edx, [ecx-8]
mov     [ebx-8], edx
mov     edx, [ecx-4]
mov     [ebx-4], edx
mov     edx, [esp+24h+var_8]
mov     [ecx-8], ebp
mov     ebp, [esp+24h+arg_8]
mov     [ecx-4], edx
jmp     loc_37a17350
mov     ebp, [edx-8]
add     edx, 0fffffff8h
mov     [esp+24h+arg_8], edx
mov     esi, [esp+24h+arg_8]
mov     edx, [edx+4]
mov     [esp+24h+var_8], edx
mov     edx, [eax-8]
mov     [esi], edx
mov     edx, [eax-4]
mov     [esi+4], edx
mov     edx, [esp+24h+var_8]
mov     [eax-8], ebp
mov     ebp, esi
mov     [eax-4], edx
jmp     loc_37a17346
mov     eax, [esp+24h+var_4]
pop     edi
pop     esi
pop     ebp
mov     [eax], ebx
mov     [eax+4], ecx
pop     ebx
add     esp, 14h
retn
sub     esp, 14h
mov     eax, [esp+14h+arg_0]
push    ebx
push    ebp
push    esi
push    edi
mov     edi, ecx
mov     [esp+24h+var_10], edx
lea     ecx, [edx-1]
mov     [esp+24h+var_14], eax
mov     ebx, ecx
mov     [esp+24h+var_8], eax
sar     ebx, 1
mov     ebp, edi
mov     [esp+24h+var_4], ebp
mov     esi, edi
mov     [esp+24h+var_c], ecx
cmp     edi, ebx
jge     short loc_37a175cc
add     esi, esi
mov     ecx, eax
lea     edx, ds:10h[esi*8]
sub     ecx, edx
mov     edx, [ecx-4]
cmp     edx, [ecx+4]
jb      short loc_37a17595
ja      short loc_37a1758e
mov     edx, [ecx-8]
cmp     edx, [ecx]
jb      short loc_37a17595
mov     ecx, 2
jmp     short loc_37a1759a
mov     ecx, 1
add     esi, ecx
mov     edx, eax
lea     ecx, ds:8[esi*8]
sub     edx, ecx
lea     ecx, ds:8[edi*8]
sub     eax, ecx
mov     edi, esi
mov     ecx, [edx]
mov     [eax], ecx
mov     ecx, [edx+4]
mov     [eax+4], ecx
mov     eax, [esp+24h+arg_0]
cmp     esi, ebx
jl      short loc_37a17570
mov     edx, [esp+24h+var_10]
mov     [esp+24h+var_14], eax
cmp     esi, ebx
jnz     short loc_37a175ff
test    dl, 1
jnz     short loc_37a175ff
lea     ecx, ds:0[edx*8]
mov     edx, eax
sub     edx, ecx
lea     ecx, ds:8[edi*8]
mov     edi, [esp+24h+var_c]
sub     eax, ecx
mov     ecx, [edx]
mov     [eax], ecx
mov     ecx, [edx+4]
mov     [eax+4], ecx
mov     eax, [esp+24h+arg_0]
mov     [esp+24h+var_14], eax
mov     ebx, [esp+24h+arg_4]
cmp     ebp, edi
jge     short loc_37a17654
mov     eax, [esp+24h+var_8]
nop     dword ptr [eax+eax+00h]
lea     esi, [edi-1]
mov     edx, eax
sar     esi, 1
lea     ecx, ds:8[esi*8]
sub     edx, ecx
mov     ecx, [edx+4]
mov     ebp, [edx]
mov     [esp+24h+arg_4], ecx
cmp     ecx, [ebx+4]
ja      short loc_37a17650
jb      short loc_37a17634
cmp     ebp, [ebx]
jnb     short loc_37a17650
lea     ecx, ds:8[edi*8]
mov     edx, eax
sub     edx, ecx
mov     edi, esi
mov     ecx, [esp+24h+arg_4]
mov     [edx], ebp
mov     [edx+4], ecx
cmp     [esp+24h+var_4], esi
jl      short loc_37a17610
mov     eax, [esp+24h+var_14]
lea     ecx, ds:8[edi*8]
sub     eax, ecx
mov     ecx, [ebx]
pop     edi
pop     esi
pop     ebp
mov     [eax], ecx
mov     ecx, [ebx+4]
mov     [eax+4], ecx
pop     ebx
add     esp, 14h
retn
mov     eax, [esp+arg_4]
mov     ecx, [esp+arg_0]
push    ebx
push    esi
mov     esi, [eax-4]
mov     ebx, [ecx-4]
mov     edx, [eax-8]
push    edi
mov     edi, [ecx-8]
cmp     esi, ebx
jb      short loc_37a17691
ja      short loc_37a176a7
cmp     edx, edi
jnb     short loc_37a176a7
mov     [eax-8], edi
mov     [eax-4], ebx
mov     [ecx-8], edx
mov     [ecx-4], esi
mov     edx, [eax-8]
mov     esi, [eax-4]
mov     eax, [esp+0ch+arg_4]
mov     edi, [esp+0ch+arg_8]
mov     ebx, [edi-4]
mov     ecx, [edi-8]
cmp     ebx, esi
ja      short loc_37a176eb
jb      short loc_37a176bb
cmp     ecx, edx
jnb     short loc_37a176eb
mov     [edi-8], edx
mov     [edi-4], esi
mov     [eax-8], ecx
mov     [eax-4], ebx
mov     esi, [esp+0ch+arg_0]
mov     edi, [esi-4]
mov     edx, [esi-8]
cmp     ebx, edi
ja      short loc_37a176eb
jb      short loc_37a176db
cmp     ecx, edx
jnb     short loc_37a176eb
mov     eax, [esp+0ch+arg_4]
mov     [eax-8], edx
mov     [eax-4], edi
mov     [esi-8], ecx
mov     [esi-4], ebx
pop     edi
pop     esi
pop     ebx
retn
jo      short loc_37a1768d
inc     ecx
outsd
adc     byte ptr [esi+5ac1322fh], 0bfh
fidivr  dword ptr ds:1f854d4eh[ebx]
cmp     ebp, [ecx]
stosb
ficomp  dword ptr [esi]
setalc
test    [edx-71h], esp
rol     dword ptr [edx+19479291h], cl
lahf
or      eax, 322abc8eh
shr     dword ptr [ecx], cl
mov     edx, 353e21ddh
stc
cmp     bh, [eax]
pushf
xor     al, 0bfh
dec     esp
and     edx, [esi-1c3e963bh]
pushf
cdq
jns     short near ptr dword_37a17758+6
or      al, 0e4h
rol     dword ptr [ecx-5dh], cl
mov     [esi+76h], ebp
inc     esi
xor     edx, esp
les     edi, [ecx]
mov     edx, 0f82a6407h
and     [ebp-444626f5h], cl
retn    24cdh
xchg    esi, [ebp-3ch]
push    cs
mov     bl, 0bdh
in      al, dx
lodsb
xor     al, 0e2h
mov     dh, 55h
dec     eax
xlat
pop     ebp
iret
sub     esp, 164h
push    ebx
push    ebp
push    esi
push    edi
push    0c8h
lea     eax, [esp+178h+var_15c]
mov     ebp, edx
push    0
push    eax
mov     [esp+180h+var_160], ebp
mov     ebx, ecx
call    _memset
add     esp, 0ch
cmp     ebp, 88h
jl      loc_37a182ee
mov     eax, 0f0f0f0f1h
lea     edi, [esp+174h+var_14c]
mul     ebp
sub     edi, ebx
lea     esi, [ebx+80h]
mov     ebp, edx
shr     ebp, 7
imul    eax, ebp, 0ffffff78h
add     [esp+174h+var_160], eax
lea     ecx, [esp+174h+var_15c]
xor     eax, eax
cmp     ecx, esi
ja      short loc_37a18249
lea     ecx, [esp+174h+var_dc]
cmp     ecx, ebx
jnb     short loc_37a182b0
lea     ecx, [esi-60h]
nop     dword ptr [eax+00h]
movups  xmm0, [esp+eax*8+174h+var_15c]
lea     ecx, [ecx+40h]
movups  xmm1, xmmword ptr [ecx-60h]
pxor    xmm1, xmm0
movups  [esp+eax*8+174h+var_15c], xmm1
movups  xmm0, [esp+eax*8+174h+var_14c]
movups  xmm1, xmmword ptr [ecx-50h]
pxor    xmm1, xmm0
movups  [esp+eax*8+174h+var_14c], xmm1
add     eax, 8
movups  xmm0, xmmword ptr [edi+ecx-50h]
movups  xmm1, xmmword ptr [ecx-40h]
pxor    xmm1, xmm0
movups  xmmword ptr [edi+ecx-50h], xmm1
movups  xmm0, xmmword ptr [edi+ecx-40h]
movups  xmm1, xmmword ptr [ecx-30h]
pxor    xmm1, xmm0
movups  xmmword ptr [edi+ecx-40h], xmm1
cmp     eax, 10h
jl      short loc_37a18250
cmp     eax, 11h
jge     short loc_37a182c6
nop     dword ptr [eax+eax+00000000h]
mov     ecx, [esi+eax*8-80h]
xor     dword ptr [esp+eax*8+174h+var_15c], ecx
mov     ecx, [esi+eax*8-7ch]
xor     dword ptr [esp+eax*8+174h+var_15c+4], ecx
inc     eax
cmp     eax, 11h
jl      short loc_37a182b0
lea     ecx, [esp+174h+var_15c]
call    sub_37a17760
add     ebx, 88h
add     esi, 88h
sub     edi, 88h
sub     ebp, 1
jnz     loc_37a18234
mov     ebp, [esp+174h+var_160]
push    ebp
lea     eax, [esp+178h+var_94]
push    ebx
push    eax
call    _memmove_0
add     esp, 0ch
mov     byte ptr [esp+ebp+174h+var_94], 1
mov     eax, ebp
not     eax
add     eax, 88h
push    eax
lea     eax, [esp+178h+var_94+1]
add     eax, ebp
push    0
push    eax
call    _memset
or      [esp+180h+var_d], 80h
add     esp, 0ch
xor     ecx, ecx
movups  xmm0, [esp+ecx*8+174h+var_15c]
movups  xmm1, [esp+ecx*8+174h+var_94]
pxor    xmm1, xmm0
movups  [esp+ecx*8+174h+var_15c], xmm1
movups  xmm0, [esp+ecx*8+174h+var_14c]
movups  xmm1, [esp+ecx*8+174h+var_84]
pxor    xmm1, xmm0
movups  [esp+ecx*8+174h+var_14c], xmm1
movups  xmm0, [esp+ecx*8+174h+var_13c]
movups  xmm1, [esp+ecx*8+174h+var_74]
pxor    xmm1, xmm0
movups  [esp+ecx*8+174h+var_13c], xmm1
movups  xmm0, [esp+ecx*8+174h+var_12c]
movups  xmm1, [esp+ecx*8+174h+var_64]
pxor    xmm1, xmm0
movups  [esp+ecx*8+174h+var_12c], xmm1
add     ecx, 8
cmp     ecx, 10h
jl      short loc_37a18330
cmp     ecx, 11h
jge     short loc_37a183c1
shl     ecx, 3
nop     dword ptr [eax+eax+00000000h]
mov     eax, dword ptr [esp+ecx+174h+var_94]
xor     dword ptr [esp+ecx+174h+var_15c], eax
mov     eax, dword ptr [esp+ecx+174h+var_94+4]
xor     dword ptr [esp+ecx+174h+var_15c+4], eax
add     ecx, 8
cmp     ecx, 88h
jl      short loc_37a183a0
lea     ecx, [esp+174h+var_15c]
call    sub_37a17760
push    0c8h
mov     eax, ecx
push    eax
push    [esp+17ch+arg_0]
call    _memmove_0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 164h
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 8
mov     eax, edx
mov     [esp+8+var_4], ecx
push    esi
mov     [esp+0ch+var_8], eax
push    edi
sub     eax, 0
jz      short loc_37a18426
sub     eax, 1
jz      short loc_37a1841f
sub     eax, 1
jz      short loc_37a18418
xor     eax, eax
jmp     short loc_37a1842b
mov     eax, 400000h
jmp     short loc_37a1842b
mov     eax, 100000h
jmp     short loc_37a1842b
mov     eax, 200000h
imul    eax, [ebp+arg_4]
mov     edi, [ebp+arg_0]
mov     ecx, eax
mov     dword ptr [edi+4], 0
and     ecx, 1fffffh
add     ecx, eax
mov     eax, ecx
mov     [edi+0ch], ecx
shr     eax, 15h
cmp     byte_37b684b0, 0
mov     [edi+8], eax
jnz     short loc_37a18469
push    1000h
push    ecx
call    sub_37ac1ec7
add     esp, 8
mov     [edi], eax
jmp     short loc_37a18490
push    4
push    20003000h
push    ecx
push    0
call    ds:virtualalloc
mov     [edi], eax
test    eax, eax
jz      short loc_37a18487
mov     eax, [edi+8]
mov     [edi+4], eax
jmp     short loc_37a18490
xor     dl, dl
mov     ecx, edi
call    sub_37a8a940
xor     esi, esi
cmp     [ebp+arg_4], esi
jbe     short loc_37a184f6
nop     word ptr [eax+eax+00000000h]
push    1000h
push    0f0h
call    sub_37ac1ec7
mov     ecx, [esp+18h+var_8]
add     esp, 8
mov     edx, eax
sub     ecx, 0
jz      short loc_37a184d9
sub     ecx, 1
jz      short loc_37a184d2
sub     ecx, 1
jz      short loc_37a184cb
xor     eax, eax
jmp     short loc_37a184de
mov     eax, 400000h
jmp     short loc_37a184de
mov     eax, 100000h
jmp     short loc_37a184de
mov     eax, 200000h
imul    eax, esi
add     eax, [edi]
mov     [edx+0e0h], eax
mov     eax, [esp+10h+var_4]
mov     [eax+esi*4], edx
inc     esi
cmp     esi, [ebp+arg_4]
jb      short loc_37a184a0
mov     eax, edi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    [ebp+arglist]
push    [ebp+locale]
push    [ebp+format]
push    [ebp+buffercount]
push    [ebp+buffer]
call    sub_37a16790
push    dword ptr [eax+4]
push    dword ptr [eax]
call    ___stdio_common_vsprintf_s
or      ecx, 0ffffffffh
add     esp, 1ch
test    eax, eax
cmovs   eax, ecx
mov     esp, ebp
pop     ebp
retn
lea     eax, [esp+arglist]
push    eax
push    0
push    [esp+8+format]
push    [esp+0ch+buffercount]
push    [esp+10h+buffer]
call    sub_37a18500
add     esp, 14h
retn
fld     ds:dbl_37b03bb0
retn
call    near ptr 0f498f6b8h
push    eax
test    al, 79h
pop     ecx
ficom   word ptr [ecx-4bh]
cmpsd
push    esp
pop     ds
arpl    [eax-62h], dx
popa
sub     al, 9dh
fimul   word ptr [ebp+1eh]
fisttp  dword ptr [edx-1c7228b2h]
lea     ebp, [ecx]
arpl    ds:0e1d9be44h, ax
pop     ds
dec     ecx
push    cs
dec     ecx
sar     dword ptr [ecx], 1
xchg    eax, edi
bound   ebx, [esi+ecx*2]
outsd
mov     esi, 46a00802h
sub     [esi-2f1d7cc5h], ebx
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, [ebp+8]
sub     esp, 14h
push    ebx
push    esi
mov     esi, ecx
push    edi
test    eax, eax
jnz     short loc_37a187a3
mov     [esi], eax
mov     dword ptr [esi+4], 0
mov     eax, esi
mov     dword ptr [esi+0d00h], 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
cmp     eax, 1
jz      loc_37a18856
mov     ecx, [esi+0d00h]
cmp     ecx, 1
jnz     short loc_37a187c5
cmp     [esi], ecx
jnz     short loc_37a187c5
cmp     dword ptr [esi+4], 0
jnz     short loc_37a187c5
mov     [esi], eax
jmp     short loc_37a18787
xor     ebx, ebx
xorps   xmm0, xmm0
movlpd  qword ptr [esp+10h], xmm0
mov     [esp+0ch], ebx
test    ecx, ecx
jz      short loc_37a18856
mov     ecx, [esp+14h]
mov     [esp+1ch], ecx
mov     ecx, [esp+10h]
mov     [esp+10h], ecx
push    0
push    eax
push    0
push    dword ptr [esi+ebx*8]
call    __allmul
push    0
push    dword ptr [ebp+8]
mov     ebx, eax
mov     edi, edx
mov     eax, [esp+14h]
add     ebx, [esp+18h]
push    0
adc     edi, [esp+28h]
push    dword ptr [esi+eax*8+4]
call    __allmul
add     eax, edi
adc     edx, 0
xor     ecx, ecx
or      ecx, ebx
mov     [esp+10h], edx
mov     ebx, [esp+0ch]
mov     [esi+ebx*8], ecx
xor     ecx, ecx
mov     [esi+ebx*8+4], eax
inc     ebx
mov     edi, [esi+0d00h]
mov     eax, [ebp+8]
mov     [esp+1ch], ecx
mov     [esp+0ch], ebx
cmp     ebx, edi
jb      short loc_37a187e8
test    edx, edx
jz      short loc_37a18856
mov     [esi+edi*8], edx
mov     [esi+edi*8+4], ecx
inc     dword ptr [esi+0d00h]
pop     edi
mov     eax, esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
mov     ds:0e8e519efh, al
js      short near ptr loc_37a1884c+3
or      eax, 0cb10a925h
jz      short near ptr loc_37a188d0+3
aad     96h
stosb
js      short loc_37a1888b
rcr     dh, cl
xor     al, [ecx-2b3e1d51h]
adc     eax, 0b3af6ea4h
insd
xchg    ebp, [ebp+28h]
lodsd
dec     ebp
cmpsb
out     dx, al
insd
jg      short near ptr loc_37a188a5+2
adc     esp, [eax]
sbb     eax, 0d3e2c15eh
cmp     [ebx], bl
and     dword ptr [eax-3e6fb599h], 49h
add     eax, [eax]
shl     eax, 1
sbb     eax, 31021cech
jb      short loc_37a1884c
popf
push    edx
add     dword ptr [edi], 6926d9dh
adc     [edi-5fh], esi
adc     ebp, edi
cwde
dec     ecx
xchg    eax, ebp
sbb     eax, edi
imul    eax, [esi], 3e136fd2h
sbb     eax, 0b37f470h
inc     esp
icebp
pop     ebx
xchg    ebx, [edi+17h]
pusha
pop     ecx
icebp
inc     ebp
int     70h
jnz     short loc_37a188d7
mov     ecx, 0dd8dabafh
lahf
js      short loc_37a18881
les     ebx, [edi]
or      [edx+ecx], eax
fistp   word ptr [ebp-58a3eea3h]
loop    near ptr loc_37a188b5+1
inc     esp
pushf
jge     short loc_37a18940
jmp     near ptr 388ab943h
setalc
adc     [ecx], edx
in      eax, dx
add     eax, 254a5223h
aam     19h
wait
retn
fisttp  dword ptr [edi+4bh]
jbe     short loc_37a189ee
rcr     dword ptr [ecx-5b81bb02h], 21h
add     [edx], ebp
dec     ebp
insb
jno     short near ptr byte_37a189e9
std
cld
push    esp
inc     edx
pop     edx
mov     cl, 86h
insd
cmc
jmp     near ptr 5c1774bfh
inc     ebx
shr     al, 59h
xchg    eax, esi
add     dl, 5ah
cmp     esi, 938b5456h
pusha
int     3
insd
in      eax, dx
pop     eax
add     ebx, ebp
mov     al, 5fh
shl     dword ptr [ecx+1f9e5c6eh], cl
mov     word ptr [eax], cs
fild    qword ptr [ebx-25h]
jz      short near ptr loc_37a18d13+1
xchg    eax, edi
add     eax, 0ca046d95h
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 1ch
mov     edx, [ebp+8]
xorps   xmm0, xmm0
push    ebx
push    esi
mov     esi, [ebp+0ch]
sub     esi, edx
movlpd  qword ptr [esp+1ch], xmm0
push    edi
xor     edi, edi
mov     [esp+18h], ecx
cmp     edx, [ebp+0ch]
mov     ebx, esi
mov     dword ptr [esp+10h], 0
cmova   ebx, edi
mov     [esp+1ch], esi
mov     edi, [esp+20h]
test    ebx, ebx
mov     [esp+14h], ebx
mov     ebx, [esp+24h]
jz      short loc_37a18d76
movsx   esi, byte ptr [edx]
mov     eax, edi
mov     ecx, ebx
xor     edx, edx
shld    ecx, eax, 2
sub     esi, 30h
shl     eax, 2
add     edi, eax
mov     eax, [esp+10h]
adc     ebx, ecx
shld    ebx, edi, 1
add     edi, edi
add     edi, esi
adc     ebx, edx
mov     edx, [ebp+8]
inc     eax
inc     edx
mov     [ebp+8], edx
mov     [esp+10h], eax
cmp     eax, [esp+14h]
jnz     short loc_37a18d37
mov     ecx, [esp+18h]
mov     esi, [esp+1ch]
cmp     dword ptr [ecx+0d00h], 1
jnz     short loc_37a18d9e
mov     eax, [ecx]
or      eax, [ecx+4]
jnz     short loc_37a18d9e
mov     [ecx], edi
mov     [ecx+4], ebx
mov     dword ptr [ecx+0d00h], 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    esi
push    esi
call    loc_37a189b0
mov     ecx, eax
call    loc_37a18870
mov     edx, eax
mov     [esp+1ch], edx
mov     ecx, [edx]
mov     esi, [edx+4]
mov     eax, esi
mov     [esp+10h], ecx
add     ecx, edi
mov     [edx], ecx
mov     ecx, [edx+0d00h]
adc     eax, ebx
mov     ebx, [esp+10h]
xor     edi, edi
mov     [edx+4], eax
lea     eax, [ecx-1]
test    eax, eax
jz      short loc_37a18e19
lea     eax, [edx+8]
nop     dword ptr [eax+00h]
cmp     [eax-4], esi
ja      short loc_37a18e3c
jb      short loc_37a18dec
cmp     [eax-8], ebx
jnb     short loc_37a18e3c
mov     ebx, [eax]
mov     edx, ebx
mov     esi, [eax+4]
add     edx, 1
mov     [eax], edx
mov     ecx, esi
mov     edx, [esp+1ch]
adc     ecx, 0
mov     [eax+4], ecx
inc     edi
add     eax, 8
mov     ecx, [edx+0d00h]
dec     ecx
cmp     edi, ecx
jb      short loc_37a18de0
mov     ecx, [edx+0d00h]
cmp     [edx+ecx*8-4], esi
ja      short loc_37a18e3c
jb      short loc_37a18e27
cmp     [edx+ecx*8-8], ebx
jnb     short loc_37a18e3c
mov     dword ptr [edx+ecx*8], 1
mov     dword ptr [edx+ecx*8+4], 0
inc     dword ptr [edx+0d00h]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [esp+0ch]
cmp     eax, 0fffffecch
jge     short loc_37a18e5e
fldz
retn
lea     ecx, ds:0[eax*8]
test    eax, eax
js      short loc_37a18e74
fld     ds:qword_37b02b00[ecx]
fmul    qword ptr [esp+4]
retn
fld     qword ptr [esp+4]
mov     eax, offset qword_37b02b00
sub     eax, ecx
fdiv    qword ptr [eax]
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, [ebp+arg_8]
cmp     eax, 0fffffecch
jge     short loc_37a18f02
movsd   xmm1, [ebp+arg_0]
add     eax, 134h
divsd   xmm1, ds:qword_37b03ba8
cmp     eax, 0fffffecch
jge     short loc_37a18ec8
xorps   xmm0, xmm0
movsd   [ebp+arg_0], xmm0
fld     [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
lea     ecx, ds:0[eax*8]
test    eax, eax
js      short loc_37a18eeb
movsd   xmm0, ds:qword_37b02b00[ecx]
mulsd   xmm0, xmm1
movsd   [ebp+arg_0], xmm0
fld     [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
mov     eax, offset qword_37b02b00
sub     eax, ecx
divsd   xmm1, qword ptr [eax]
movsd   [ebp+arg_0], xmm1
fld     [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
lea     ecx, ds:0[eax*8]
test    eax, eax
js      short loc_37a18f26
movsd   xmm0, ds:qword_37b02b00[ecx]
mulsd   xmm0, [ebp+arg_0]
movsd   [ebp+arg_0], xmm0
fld     [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
movsd   xmm0, [ebp+arg_0]
mov     eax, offset qword_37b02b00
sub     eax, ecx
divsd   xmm0, qword ptr [eax]
movsd   [ebp+arg_0], xmm0
fld     [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, 3444h
call    __alloca_probe
movsd   xmm0, qword ptr [ebp+8]
xor     eax, eax
push    ebx
mov     ebx, [ebp+14h]
push    esi
movsd   qword ptr [esp+1ch], xmm0
mov     ecx, [esp+20h]
mov     esi, [esp+1ch]
push    edi
mov     edi, ecx
and     edi, 7ff00000h
or      eax, edi
jnz     short loc_37a18f9f
mov     edx, ecx
mov     eax, esi
and     edx, 0fffffh
or      eax, edx
jz      short loc_37a18f9f
mov     [esp+18h], esi
mov     [esp+1ch], edx
jmp     short loc_37a18fbc
mov     edx, ecx
mov     [esp+18h], esi
and     edx, 0fffffh
mov     eax, edx
or      eax, 100000h
mov     [esp+1ch], eax
xor     eax, eax
or      eax, edi
jnz     short loc_37a18fc7
or      esi, edx
jz      short loc_37a18fc7
mov     ecx, 0fffffbceh
jmp     short loc_37a18fd6
shr     ecx, 14h
and     ecx, 7ffh
sub     ecx, 433h
lea     eax, [ecx-1]
mov     edi, ebx
neg     edi
mov     [esp+20h], eax
xor     eax, eax
test    ebx, ebx
cmovns  edi, eax
test    ebx, ebx
mov     [esp+10h], edi
cmovs   ebx, eax
test    ecx, ecx
js      short loc_37a18ffc
lea     eax, [edi+ecx]
mov     [esp+10h], eax
mov     eax, edi
mov     edx, edi
sub     eax, ecx
mov     esi, ebx
test    ecx, ecx
cmovs   edx, eax
mov     eax, ebx
sub     eax, ecx
mov     [esp+14h], edx
test    ecx, ecx
mov     ecx, [esp+20h]
cmovs   esi, eax
test    ecx, ecx
js      short loc_37a19024
add     edx, ecx
mov     [esp+14h], edx
mov     eax, [esp+10h]
mov     edx, [esp+10h]
sub     eax, ecx
test    ecx, ecx
cmovs   edx, eax
mov     eax, esi
sub     eax, ecx
mov     [esp+10h], edx
test    ecx, ecx
mov     ecx, [ebp+10h]
cmovs   esi, eax
mov     eax, edx
cmp     esi, edx
mov     [esp+20h], esi
cmovle  eax, esi
mov     esi, [esp+14h]
cmp     eax, esi
cmovle  esi, eax
mov     eax, [ecx+0d00h]
mov     [esp+1a38h], eax
shl     eax, 3
push    eax
push    ecx
lea     eax, [esp+0d40h]
push    eax
call    _memmove_0
mov     eax, [esp+2ch]
lea     ecx, [esp+0d44h]
add     esp, 0ch
sub     eax, esi
push    eax
push    ebx
call    loc_37a189b0
mov     ecx, eax
call    loc_37a18870
mov     eax, [esp+18h]
lea     ecx, [esp+30h]
mov     [esp+30h], eax
mov     eax, [esp+1ch]
mov     [esp+34h], eax
mov     eax, [esp+10h]
sub     eax, esi
mov     dword ptr [esp+0d30h], 1
push    eax
push    edi
call    loc_37a189b0
mov     ecx, eax
call    loc_37a18870
mov     eax, [esp+14h]
lea     ecx, [esp+1a40h]
sub     eax, esi
mov     dword ptr [esp+2740h], 1
push    eax
push    edi
mov     dword ptr [esp+1a48h], 1
mov     dword ptr [esp+1a4ch], 0
call    loc_37a189b0
mov     ecx, eax
call    loc_37a18870
lea     eax, [esp+30h]
mov     dword ptr [esp+3448h], 1
xorps   xmm0, xmm0
lea     ecx, [esp+0d38h]
push    eax
movlpd  qword ptr [esp+274ch], xmm0
call    loc_37a18c70
test    eax, eax
lea     edx, [esp+0d38h]
lea     ecx, [esp+30h]
xorps   xmm0, xmm0
cmovs   ecx, edx
movlpd  qword ptr [esp+28h], xmm0
lea     esi, [esp+30h]
cmovs   edx, esi
xor     esi, esi
mov     [esp+1ch], esi
mov     eax, [edx+0d00h]
mov     [esp+10h], eax
test    eax, eax
jz      loc_37a19200
mov     eax, [ecx+0d00h]
sub     edx, ecx
mov     edi, [esp+2ch]
mov     ebx, [esp+28h]
mov     [esp+20h], eax
lea     eax, [esp+2748h]
sub     eax, ecx
mov     [esp+18h], edx
mov     [esp+14h], eax
nop     dword ptr [eax+eax+00000000h]
mov     eax, [edx+ecx]
mov     edx, [edx+ecx+4]
sub     eax, ebx
sbb     edx, edi
cmp     esi, [esp+20h]
jnb     short loc_37a191a6
sub     eax, [ecx]
sbb     edx, [ecx+4]
mov     esi, [esp+18h]
cmp     edx, [esi+ecx+4]
jb      short loc_37a191c0
ja      short loc_37a191b7
cmp     eax, [esi+ecx]
jbe     short loc_37a191c0
mov     ebx, 1
xor     edi, edi
jmp     short loc_37a191d1
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     edi, [esp+2ch]
mov     ebx, [esp+28h]
mov     esi, [esp+14h]
mov     [esi+ecx], eax
or      eax, edx
mov     [esi+ecx+4], edx
mov     esi, [esp+1ch]
jz      short loc_37a191ee
lea     eax, [esi+1]
mov     [esp+3448h], eax
mov     edx, [esp+18h]
inc     esi
add     ecx, 8
mov     [esp+1ch], esi
cmp     esi, [esp+10h]
jb      short loc_37a19190
lea     eax, [esp+1a40h]
push    eax
lea     ecx, [esp+274ch]
call    loc_37a18c70
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     edx, [edi+35h]
popf
mov     al, 5eh
aaa
sar     ch, cl
retf
mov     bl, 74h
or      ebp, [edx]
popf
out     6, eax
sub     [esi+7ah], al
cmp     bh, [ebx]
push    esp
pushf
dec     esi
and     eax, 0ad27bc66h
or      esp, [eax-1eh]
dec     edx
push    edx
loopne  loc_37a19719
js      short loc_37a1970a
insb
hlt
xchg    eax, esi
or      eax, 20f5b783h
xchg    eax, edx
in      eax, 0a0h
ficomp  word ptr [ebp+4eh]
and     eax, 379c822bh
clc
imul    eax, [ecx+0f003983h], 0ccc3c094h
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
add     bh, al
inc     ecx
add     al, 0
mov     ecx, 9d04b353h
sbb     edi, [ebp-4e7d5b7h]
push    eax
das
push    ecx
push    edi
sbb     [edx+39h], esi
out     0dbh, eax
jno     short loc_37a1987c
cmpsd
loopne  loc_37a198b5
hlt
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a199d0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 44h
mov     eax, [ebp+arg_4]
push    esi
push    edi
mov     edi, ecx
mov     [ebp+var_10], edi
mov     [edi+1003ch], eax
lea     ecx, [edi+10060h]
mov     eax, [ebp+arg_8]
mov     [edi+10044h], eax
mov     eax, [ebp+arg_0]
mov     word ptr [edi+20h], 0
mov     dword ptr [edi+10040h], 0
mov     [edi+10048h], eax
mov     dword ptr [edi+1004ch], 1388h
mov     dword ptr [edi+10050h], 0ffffffffh
mov     dword ptr [edi+10054h], 0ffffffffh
mov     dword ptr [edi+10058h], 0
mov     dword ptr [edi+1005ch], 0
call    loc_37a1f4f0
lea     esi, [edi+10174h]
mov     dword ptr [edi+10168h], 0
mov     dword ptr [edi+1016ch], 0
mov     dword ptr [edi+10170h], 0
mov     [ebp+arg_4], esi
mov     dword ptr [esi], 0
mov     dword ptr [esi+4], 0
call    sub_37a1cbf0
mov     [esi], eax
mov     [ebp+var_4], 0
lea     ecx, [edi+10190h]
mov     dword ptr [edi+10180h], 0
mov     dword ptr [edi+10184h], 0
mov     dword ptr [edi+10188h], 0
mov     dword ptr [edi+1018ch], 0
call    sub_37a1fd10
push    40h
lea     eax, [edi+1024ch]
mov     byte ptr [ebp+var_4], 1
push    0
push    eax
mov     dword ptr [edi+10244h], 0
mov     dword ptr [edi+10248h], 0
call    _memset
push    dword_37b6ff2c
xorps   xmm0, xmm0
lea     eax, [edi+22h]
push    arglist
movups  xmmword ptr [edi+8022h], xmm0
mov     byte ptr [edi+8032h], 0
movups  xmmword ptr [edi], xmm0
push    offset ai64u
movups  xmmword ptr [edi+10h], xmm0
mov     [edi+101cch], eax
lea     eax, [edi+8033h]
mov     [edi+10038h], eax
lea     eax, [edi+8037h]
mov     [edi+10034h], eax
lea     eax, [ebp+source]
push    40h
push    eax
mov     [edi+101d0h], edi
mov     dword ptr [edi+4], 2
mov     dword ptr [edi+8], 1
mov     dword ptr [edi+0ch], 6
mov     dword ptr [edi+101c8h], 8000h
call    sub_37a18540
lea     eax, [ebp+source]
push    eax
call    __strdup
mov     edx, dword_37b734d0
add     esp, 24h
mov     [edi+10040h], eax
mov     [edi+10290h], edi
test    edx, edx
jnz     short loc_37a19baf
call    sub_37a94db0
test    eax, eax
jz      short loc_37a19ba0
xor     edx, edx
jmp     short loc_37a19baf
mov     dword_37b734d0, offset dword_37b734d8
mov     edx, offset dword_37b734d8
mov     [edi+10294h], edx
lea     ecx, [edi+102a0h]
mov     dword ptr [edi+10298h], 0dh
lea     eax, [edx+8]
mov     dword ptr [edi+102bch], 20h
mov     [ecx], eax
mov     eax, [edx+0ch]
mov     [edi+102a4h], eax
mov     [eax], ecx
mov     eax, edi
mov     [edx+0ch], ecx
mov     ecx, [ebp+var_c]
mov     dword ptr [edi+102a8h], 0ffffffffh
mov     dword ptr [edi+102e8h], 0
mov     dword ptr [edi+102d8h], 0
mov     dword ptr [edi+102dch], 0
pop     edi
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    0ch
push    esi
mov     esi, ecx
call    sub_37a1c940
push    40h
push    dword ptr [esi]
call    sub_37ab1b25
add     esp, 8
pop     esi
retn
push    ecx
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     eax, [esi+1016ch]
test    eax, eax
jz      short loc_37a19c99
cmp     eax, 1
jnz     loc_37a19d98
cmp     dword ptr [esi+10054h], 0
jg      short loc_37a19cc1
jl      short loc_37a19cad
cmp     dword ptr [esi+10050h], 0
jnb     short loc_37a19cc1
mov     dword ptr [esi+10050h], 0
mov     dword ptr [esi+10054h], 0
mov     edi, [esp+10h+arg_0]
test    edi, edi
jz      short loc_37a19cec
jns     short loc_37a19cd1
mov     edi, [esi+1004ch]
cmp     eax, 1
jz      loc_37a19d5d
mov     [esi+10170h], eax
mov     dword ptr [esi+1016ch], 1
jmp     short loc_37a19d5d
mov     ebx, [esi+101b4h]
cmp     eax, 2
jz      short loc_37a19d07
mov     [esi+10170h], eax
mov     dword ptr [esi+1016ch], 2
mov     ecx, dword_37b734d0
mov     dword ptr [esi+10180h], 0
mov     dword ptr [esi+10184h], 0
mov     dword ptr [esi+10168h], 0
test    ecx, ecx
jnz     short loc_37a19d4b
call    sub_37a94db0
test    eax, eax
jz      short loc_37a19d3c
xor     ecx, ecx
jmp     short loc_37a19d4b
mov     dword_37b734d0, offset dword_37b734d8
mov     ecx, offset dword_37b734d8
push    esi
push    ecx
push    ebx
push    ecx
lea     edx, [esi+101d0h]
call    loc_37a966a0
add     esp, 10h
mov     ecx, dword_37b734d0
test    ecx, ecx
jnz     short loc_37a19d83
call    sub_37a94db0
test    eax, eax
jz      short loc_37a19d74
xor     ecx, ecx
jmp     short loc_37a19d83
mov     dword_37b734d0, offset dword_37b734d8
mov     ecx, offset dword_37b734d8
mov     eax, edi
cdq
add     eax, [ecx+20h]
adc     edx, [ecx+24h]
mov     [esi+10180h], eax
mov     [esi+10184h], edx
pop     edi
pop     esi
pop     ebx
pop     ecx
retn    4
mov     eax, [esp+8]
sub     esp, 124h
push    ebx
push    ebp
mov     ebp, [esp+130h]
mov     ebx, ecx
push    esi
push    edi
cmp     word ptr [ebp+0eh], 3
jz      short loc_37a1a103
mov     dword ptr [eax], 2
xor     al, al
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 124h
retn    8
mov     al, [ebx+20h]
xorps   xmm0, xmm0
cmp     dword ptr [ebx+101a0h], 0ffffffffh
mov     [esp+29h], al
mov     eax, [ebx+10048h]
setz    byte ptr [esp+28h]
push    68h
mov     [esp+30h], eax
lea     eax, [esp+44h]
push    0
push    eax
mov     dword ptr [esp+3ch], 0ffffffffh
mov     dword ptr [esp+40h], 0
movlpd  qword ptr [esp+44h], xmm0
call    _memset
movups  xmm0, xmmword ptr [ebx+1024ch]
mov     eax, [ebx+1019ch]
add     esp, 0ch
mov     [esp+0a8h], eax
mov     eax, [ebx+101a0h]
movups  xmmword ptr [esp+0b0h], xmm0
push    40h
movups  xmm0, xmmword ptr [ebx+1025ch]
mov     [esp+0b0h], eax
lea     eax, [esp+0f4h]
push    0
movups  xmmword ptr [esp+0c8h], xmm0
push    eax
movups  xmm0, xmmword ptr [ebx+1026ch]
movups  xmmword ptr [esp+0dch], xmm0
movups  xmm0, xmmword ptr [ebx+1027ch]
movups  xmmword ptr [esp+0ech], xmm0
call    _memset
add     esp, 0ch
mov     ecx, ebp
push    offset dword_37afed28
call    near ptr sub_37a1cf50
mov     esi, eax
mov     edi, 1000h
test    [esi+0eh], di
jnz     short loc_37a1a1d0
mov     esi, [esi+8]
push    40h
lea     eax, [esp+0f4h]
push    0
push    eax
call    _memset
add     esp, 0ch
test    esi, esi
jz      loc_37a1a615
mov     ecx, esi
lea     edx, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37a1a1f1
sub     ecx, edx
cmp     ecx, 40h
jnb     loc_37a1a615
push    ecx
lea     eax, [esp+0f4h]
push    esi
push    eax
call    _memmove_0
add     esp, 0ch
mov     ecx, ebp
push    offset ablob
call    near ptr sub_37a1cf50
mov     ecx, eax
test    [ecx+0eh], di
jnz     short loc_37a1a22c
mov     ecx, [ecx+8]
test    ecx, ecx
jz      loc_37a1a5f8
mov     edx, ecx
lea     esi, [edx+1]
nop     dword ptr [eax+00000000h]
mov     al, [edx]
inc     edx
test    al, al
jnz     short loc_37a1a240
sub     edx, esi
mov     [esp+34h], edx
test    dl, 1
jnz     loc_37a1a5f8
shr     edx, 1
mov     [esp+34h], edx
cmp     edx, 4ch
jb      loc_37a1a5f8
cmp     edx, 60h
jnb     loc_37a1a5f8
lea     eax, [esp+48h]
add     edx, edx
push    eax
call    near ptr loc_37a1f56e+2
add     esp, 4
test    al, al
jz      loc_37a1a5f8
cmp     dword ptr [esp+6fh], 0
jz      short loc_37a1a2a1
mov     al, [esp+29h]
mov     edx, 1
test    al, al
movzx   ecx, al
cmovz   ecx, edx
mov     [esp+29h], cl
cmp     byte ptr [esp+28h], 0
jz      short loc_37a1a2bc
lea     ecx, [esp+28h]
call    loc_37a1f610
mov     edi, eax
mov     [esp+0ach], edi
jmp     short loc_37a1a2c3
mov     edi, [esp+0ach]
push    offset atarget
mov     ecx, ebp
call    near ptr sub_37a1cf50
mov     edx, eax
mov     eax, 1000h
test    [edx+0eh], ax
jnz     short loc_37a1a2df
mov     edx, [edx+8]
test    edx, edx
jz      loc_37a1a5db
mov     ecx, edx
lea     esi, [ecx+1]
nop     dword ptr [eax+00h]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37a1a2f0
sub     ecx, esi
cmp     ecx, 8
ja      short loc_37a1a362
push    ecx
push    edx
lea     eax, [esp+20h]
mov     dword ptr [esp+1ch], 0
push    eax
call    _memmove_0
add     esp, 0ch
lea     eax, [esp+14h]
mov     edx, 8
lea     ecx, [esp+18h]
push    eax
call    near ptr loc_37a1f56e+2
add     esp, 4
test    al, al
jz      loc_37a1a5db
mov     eax, [esp+14h]
test    eax, eax
jz      loc_37a1a5db
push    0
push    eax
push    0
push    0ffffffffh
call    __aulldiv
push    edx
push    eax
push    0ffffffffh
push    0ffffffffh
call    __aulldiv
mov     ecx, eax
mov     [esp+44h], edx
mov     [esp+40h], ecx
jmp     short loc_37a1a3ba
cmp     ecx, 10h
ja      loc_37a1a5db
push    ecx
push    edx
lea     eax, [esp+20h]
xorps   xmm0, xmm0
push    eax
movlpd  qword ptr [esp+4ch], xmm0
call    _memmove_0
add     esp, 0ch
lea     eax, [esp+40h]
mov     edx, 10h
lea     ecx, [esp+18h]
push    eax
call    near ptr loc_37a1f56e+2
add     esp, 4
test    al, al
jz      loc_37a1a5db
mov     ecx, [esp+40h]
mov     eax, ecx
mov     edx, [esp+44h]
or      eax, edx
jz      loc_37a1a5db
mov     edi, [esp+0ach]
push    edx
push    ecx
push    0ffffffffh
push    0ffffffffh
call    __aulldiv
mov     esi, [ebp+0]
mov     ecx, ebp
mov     [esp+38h], eax
and     al, 14h
push    offset dword_37afed40
shl     esi, 5
add     esi, [ebp+8]
push    eax
mov     [esp+44h], edx
call    loc_37a1cb30
cmp     [eax], esi
jz      short loc_37a1a457
push    offset aalgo
mov     ecx, ebp
call    near ptr sub_37a1cf50
mov     ecx, 1000h
test    [eax+0eh], cx
jnz     short loc_37a1a405
mov     eax, [eax+8]
push    eax
lea     ecx, [esp+0ach]
call    loc_37a176f0
mov     edi, [esp+0ach]
cmp     edi, 0ffffffffh
jnz     short loc_37a1a457
mov     eax, [esp+0a8h]
sub     eax, 0
jz      short loc_37a1a443
sub     eax, 1
jz      short loc_37a1a43c
sub     eax, 1
jz      short loc_37a1a438
or      edi, edi
jmp     short loc_37a1a450
xor     edi, edi
jmp     short loc_37a1a450
mov     edi, 1
jmp     short loc_37a1a450
cmp     byte ptr [esp+48h], 8
sbb     edi, edi
and     edi, 0fffffff9h
add     edi, 8
mov     [esp+0ach], edi
mov     esi, [ebp+0]
lea     eax, [esp+14h]
push    offset dword_37afed50
shl     esi, 5
mov     ecx, ebp
add     esi, [ebp+8]
push    eax
call    loc_37a1cb30
cmp     [eax], esi
jz      loc_37a1a4f5
push    offset dword_37afed58
mov     ecx, ebp
call    near ptr sub_37a1cf50
mov     ebp, eax
movzx   eax, word ptr [ebp+0eh]
mov     cl, al
mov     edx, eax
shr     cl, 5
test    cl, 1
jz      short loc_37a1a4b2
mov     eax, [ebp+0]
cmp     eax, 0ffffffffh
jl      short loc_37a1a4f5
cmp     eax, 1
jle     short loc_37a1a4ae
cmp     eax, 2
jnz     short loc_37a1a4f5
lea     edi, [eax+6]
jmp     short loc_37a1a4ee
mov     edi, eax
jmp     short loc_37a1a4ee
shr     eax, 0ah
test    al, 1
jz      short loc_37a1a4f5
test    edx, 1000h
jnz     short loc_37a1a4c4
mov     ebp, [ebp+8]
or      edi, 0ffffffffh
xor     esi, esi
mov     [esp+0ach], edi
push    ds:off_37afeb20[esi*4]
push    ebp
call    __stricmp
add     esp, 8
test    eax, eax
jz      short loc_37a1a4ec
inc     esi
cmp     esi, 9
jb      short loc_37a1a4d0
jmp     short loc_37a1a4f5
mov     edi, esi
mov     [esp+0ach], edi
mov     eax, [ebx+101a4h]
mov     ecx, [ebx+101a8h]
cmp     eax, ecx
jz      short loc_37a1a543
mov     edx, [esp+0a8h]
nop     dword ptr [eax+00h]
cmp     edx, [eax]
jnz     short loc_37a1a519
cmp     edi, [eax+4]
jz      short loc_37a1a543
add     eax, 8
cmp     eax, ecx
jnz     short loc_37a1a510
mov     ecx, [esp+13ch]
mov     dword ptr [ecx], 6
mov     ecx, ebx
call    near ptr sub_37a1a920
xor     al, al
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 124h
retn    8
lea     ecx, [ebx+10128h]
mov     esi, 3ch
lea     edx, [esp+0f0h]
mov     eax, [ecx]
cmp     eax, [edx]
jnz     short loc_37a1a5ae
add     ecx, 4
add     edx, 4
sub     esi, 4
jnb     short loc_37a1a555
lea     ecx, [ebx+10080h]
mov     esi, 5ch
lea     edx, [esp+48h]
mov     eax, [ecx]
cmp     eax, [edx]
jnz     short loc_37a1a5ae
add     ecx, 4
add     edx, 4
sub     esi, 4
jnb     short loc_37a1a575
mov     eax, [ebx+10188h]
or      eax, [ebx+1018ch]
jz      loc_37a1a623
mov     ecx, ebx
call    near ptr sub_37a1a920
xor     al, al
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 124h
retn    8
add     dword ptr [ebx+10188h], 1
lea     eax, [esp+28h]
push    eax
adc     dword ptr [ebx+1018ch], 0
lea     ecx, [ebx+10060h]
call    sub_37a1a640
mov     al, 1
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 124h
retn    8
mov     ecx, [esp+13ch]
mov     eax, 5
mov     [ecx], eax
xor     al, al
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 124h
retn    8
mov     ecx, [esp+13ch]
mov     eax, 4
mov     [ecx], eax
xor     al, al
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 124h
retn    8
mov     ecx, [esp+13ch]
mov     eax, 3
mov     [ecx], eax
pop     edi
pop     esi
pop     ebp
xor     al, al
pop     ebx
add     esp, 124h
retn    8
push    ebx
push    esi
mov     esi, ecx
mov     edx, 60h
push    edi
mov     edi, [esp+0ch+arg_0]
mov     ebx, edi
sub     ebx, esi
movzx   eax, byte ptr [edi]
mov     [esi], al
movzx   eax, byte ptr [edi+1]
mov     [esi+1], al
mov     eax, [edi+4]
mov     [esi+4], eax
mov     eax, [edi+8]
mov     [esi+8], eax
mov     eax, [edi+0ch]
mov     [esi+0ch], eax
mov     eax, [edi+10h]
mov     [esi+10h], eax
mov     eax, [edi+14h]
mov     [esi+14h], eax
mov     eax, [edi+18h]
mov     [esi+18h], eax
mov     eax, [edi+1ch]
mov     [esi+1ch], eax
lea     eax, [esi+20h]
nop     dword ptr [eax+eax+00h]
mov     cl, [ebx+eax]
lea     eax, [eax+1]
mov     [eax-1], cl
sub     edx, 1
jnz     short loc_37a1a690
mov     eax, [edi+80h]
mov     [esi+80h], eax
mov     eax, [edi+84h]
mov     [esi+84h], eax
mov     eax, esi
movups  xmm0, xmmword ptr [edi+88h]
movups  xmmword ptr [esi+88h], xmm0
movups  xmm0, xmmword ptr [edi+98h]
movups  xmmword ptr [esi+98h], xmm0
movups  xmm0, xmmword ptr [edi+0a8h]
movups  xmmword ptr [esi+0a8h], xmm0
movups  xmm0, xmmword ptr [edi+0b8h]
movups  xmmword ptr [esi+0b8h], xmm0
movups  xmm0, xmmword ptr [edi+0c8h]
movups  xmmword ptr [esi+0c8h], xmm0
movups  xmm0, xmmword ptr [edi+0d8h]
movups  xmmword ptr [esi+0d8h], xmm0
movups  xmm0, xmmword ptr [edi+0e8h]
movups  xmmword ptr [esi+0e8h], xmm0
movups  xmm0, xmmword ptr [edi+0f8h]
pop     edi
movups  xmmword ptr [esi+0f8h], xmm0
pop     esi
pop     ebx
retn    4
lea     ebp, [eax-710b25b9h]
hlt
mov     eax, 0d235b3afh
sub     bh, [eax]
add     [eax-68h], eax
test    ebx, ebx
sbb     ebp, ebx
cmp     edx, [ebp-1bh]
sub     dh, [ebx-33a78a32h]
retf
add     [ebx-5baaa2e5h], esp
sbb     bh, cl
cdq
sub     eax, 9f46b083h
fmul    dword ptr [edx+1da21feeh]
inc     ebp
dec     ecx
jg      short loc_37a1a9a1
dec     edx
or      al, 0e0h
xor     [ebp-62cd8846h], esi
cmp     al, ah
sbb     eax, 0b49b0ed7h
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 104h
push    esi
mov     esi, ecx
cmp     word ptr [esi+10198h], 50h
mov     eax, [esi+1016ch]
jnz     loc_37a1aab9
cmp     eax, 4
jz      short loc_37a1a9d8
mov     [esi+10170h], eax
mov     dword ptr [esi+1016ch], 4
push    dword_37b6ff38
lea     eax, [esp+10ch+buffer]
push    dword_37b6ff34
push    offset amozilla50compa
push    100h
push    eax
call    sub_37a18540
mov     eax, [esi+101b4h]
add     esp, 14h
push    0
push    1
push    eax
movsx   eax, byte ptr [eax]
push    eax
call    _isdigit
add     esp, 4
mov     edx, offset dword_37afedb8
test    eax, eax
mov     ecx, offset byte_37afe777
cmovz   ecx, edx
push    ecx
push    offset dword_37afedc0
push    7ffch
push    dword ptr [esi+10034h]
call    near ptr sub_37a167e0
add     esp, 14h
mov     ecx, esi
push    eax
call    sub_37a1a730
push    0
push    1
push    offset dword_37afeddc
push    7ffch
push    dword ptr [esi+10034h]
call    near ptr sub_37a167e0
add     esp, 0ch
mov     ecx, esi
push    eax
call    sub_37a1a730
push    0
push    1
push    offset aproxyconnectio
push    7ffch
push    dword ptr [esi+10034h]
call    near ptr sub_37a167e0
add     esp, 0ch
mov     ecx, esi
push    eax
call    sub_37a1a730
push    0
push    1
push    dword ptr [esi+101b4h]
push    offset dword_37afee14
push    7ffch
push    dword ptr [esi+10034h]
call    near ptr sub_37a167e0
add     esp, 10h
mov     ecx, esi
push    eax
call    sub_37a1a730
pop     esi
mov     esp, ebp
pop     ebp
retn
cmp     eax, 5
jz      short loc_37a1aace
mov     [esi+10170h], eax
mov     dword ptr [esi+1016ch], 5
call    near ptr sub_37a1aae0
pop     esi
mov     esp, ebp
pop     ebp
retn
int     3
int     3
int     3
int     3
int     3
int     3
int     3
adc     [ecx], edx
leave
rcr     dword ptr [edx+506f83d2h], cl
or      [edx+65h], eax
loope   locret_37a1ab6a
rep or [esi], ebp
loopne  near ptr loc_37a1aac4+1
xor     [eax+5d73ab2ah], ecx
sbb     eax, 485ead6ah
and     eax, 0b600f4f0h
and     edx, [edi-69a2d36eh]
jnb     short loc_37a1aafe
mov     ds:2de5fe6fh, eax
dec     ebp
xchg    eax, ebx
sahf
enter   4c67h, 0e2h
out     19h, eax
test    eax, 151c172eh
test    dl, ch
mov     [edx], ecx
loope   loc_37a1aad9
add     al, 9eh
jmp     near ptr 0b5f4e620h
inc     ebp
das
retf
retn
retn
inc     eax
push    esp
les     ebp, [eax-61h]
pop     esp
or      [edi+39h], dl
push    72h
mov     bl, 55h
retf
push    offset dword_37afef84
call    near ptr sub_37a1cf50
mov     ebx, eax
mov     eax, 1000h
test    [ebx+0eh], ax
jnz     short loc_37a1bbd2
mov     ebx, [ebx+8]
lea     eax, [esp+20h]
push    eax
lea     eax, [esp+30h]
lea     ebp, [edi+10174h]
push    eax
mov     ecx, ebp
call    sub_37a1c8e0
mov     esi, [esp+2ch]
cmp     esi, [ebp+0]
jz      loc_37a1bd00
cmp     byte_37b73394, 0
jnz     short loc_37a1bc5b
push    0
push    0
push    1
push    0
call    ds:createeventw
mov     ebp, eax
test    ebp, ebp
jz      loc_37a1c022
push    0
push    ebp
push    offset destination
call    ds:interlockedcompareexchange
mov     [esp+2ch], eax
test    eax, eax
jnz     short loc_37a1bc42
call    near ptr sub_37a94ce0
push    ebp
call    ds:setevent
mov     byte_37b73394, 1
jmp     short loc_37a1bc55
push    ebp
call    ds:closehandle
push    0ffffffffh
push    dword ptr [esp+30h]
call    ds:waitforsingleobject
lea     ebp, [edi+10174h]
movsd   xmm0, qword_37b733b8
ucomisd xmm0, ds:qword_37b03b50
lahf
test    ah, 44h
jp      short loc_37a1bc84
xorps   xmm0, xmm0
movlpd  qword ptr [esp+10h], xmm0
mov     edx, [esp+14h]
mov     eax, [esp+10h]
jmp     short loc_37a1bcc8
lea     eax, [esp+10h]
push    eax
call    ds:queryperformancecounter
test    eax, eax
jnz     short loc_37a1bca6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+10h], xmm0
mov     edx, [esp+14h]
mov     eax, [esp+10h]
jmp     short loc_37a1bcc8
mov     edx, [esp+14h]
mov     ecx, [esp+10h]
call    __ltod3
mulsd   xmm0, qword_37b733b8
mulsd   xmm0, ds:qword_37b03b88
call    __dtoul3
sub     eax, [esi+38h]
push    0
sbb     edx, [esi+3ch]
push    0f4240h
push    edx
push    eax
call    __aulldiv
mov     [esi+34h], edx
lea     edx, [esi+18h]
mov     [esi+30h], eax
mov     ecx, [edi+10044h]
push    ebx
push    edx
push    edi
mov     eax, [ecx]
call    dword ptr [eax+10h]
push    esi
lea     eax, [esp+30h]
mov     ecx, ebp
push    eax
call    sub_37a1cb80
cmp     dword ptr [esp+20h], 1
jnz     short loc_37a1bd0e
cmp     dword ptr [esp+24h], 0
jz      short loc_37a1bd56
test    ebx, ebx
jz      loc_37a1c018
push    0fh
push    offset dword_37afece8
push    ebx
call    __strnicmp
add     esp, 0ch
test    eax, eax
jz      short loc_37a1bd56
push    11h
push    offset ayouripisbanned
push    ebx
call    __strnicmp
add     esp, 0ch
test    eax, eax
jz      short loc_37a1bd56
push    1bh
push    offset aipaddresscurre
push    ebx
call    __strnicmp
add     esp, 0ch
test    eax, eax
jnz     loc_37a1c018
mov     ecx, edi
call    near ptr sub_37a1a920
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 0ch
retn    10h
mov     ebp, [esp+28h]
cmp     word ptr [ebp+0eh], 3
jnz     loc_37a1c018
cmp     dword ptr [esp+20h], 1
jnz     loc_37a1befa
cmp     dword ptr [esp+24h], 0
jnz     loc_37a1befa
push    offset dword_37afed60
mov     ecx, ebp
mov     dword ptr [esp+30h], 0ffffffffh
call    near ptr sub_37a1cf50
mov     esi, eax
mov     eax, 1000h
test    [esi+0eh], ax
jnz     short loc_37a1bdb0
mov     esi, [esi+8]
push    40h
lea     ebx, [edi+1024ch]
push    0
push    ebx
call    _memset
add     esp, 0ch
test    esi, esi
jz      short loc_37a1bd56
mov     ecx, esi
lea     edx, [ecx+1]
nop     dword ptr [eax+00h]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37a1bdd0
sub     ecx, edx
cmp     ecx, 40h
jnb     loc_37a1bd56
push    ecx
push    esi
push    ebx
call    _memmove_0
mov     al, [edi+10190h]
add     esp, 0ch
mov     [edi+20h], al
mov     ecx, ebp
mov     esi, [ebp+0]
lea     eax, [esp+28h]
shl     esi, 5
add     esi, [ebp+8]
push    offset aextensions
push    eax
call    loc_37a1cb30
cmp     [eax], esi
jz      short loc_37a1be88
push    offset aextensions_0
mov     ecx, ebp
call    near ptr sub_37a1cf50
cmp     word ptr [eax+0eh], 4
jnz     short loc_37a1be88
mov     ebx, [eax]
mov     esi, [eax+8]
shl     ebx, 4
add     ebx, esi
cmp     esi, ebx
jz      short loc_37a1be88
movzx   ecx, word ptr [esi+0eh]
mov     eax, ecx
shr     eax, 0ah
test    al, 1
jz      short loc_37a1be81
mov     eax, esi
test    ecx, 1000h
jnz     short loc_37a1be4f
mov     eax, [esi+8]
mov     ecx, offset dword_37afef74
mov     dl, [eax]
cmp     dl, [ecx]
jnz     short loc_37a1be74
test    dl, dl
jz      short loc_37a1be70
mov     dl, [eax+1]
cmp     dl, [ecx+1]
jnz     short loc_37a1be74
add     eax, 2
add     ecx, 2
test    dl, dl
jnz     short loc_37a1be54
xor     eax, eax
jmp     short loc_37a1be79
sbb     eax, eax
or      eax, 1
test    eax, eax
jnz     short loc_37a1be81
mov     byte ptr [edi+20h], 1
add     esi, 10h
cmp     esi, ebx
jnz     short loc_37a1be35
push    offset ajob
mov     ecx, ebp
call    near ptr sub_37a1cf50
lea     ecx, [esp+2ch]
push    ecx
push    eax
mov     ecx, edi
call    loc_37a1a0d0
mov     dword ptr [edi+10188h], 0
mov     dword ptr [edi+1018ch], 0
test    al, al
jz      loc_37a1bd56
mov     ecx, [edi+10044h]
mov     dword ptr [edi+10050h], 0
mov     dword ptr [edi+10054h], 0
push    edi
mov     eax, [ecx]
call    dword ptr [eax+0ch]
mov     ecx, [edi+10044h]
lea     eax, [edi+10060h]
push    eax
push    edi
mov     edx, [ecx]
call    dword ptr [edx+8]
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 0ch
retn    10h
lea     eax, [esp+20h]
push    eax
lea     eax, [esp+30h]
push    eax
lea     ecx, [edi+10174h]
call    sub_37a1c8e0
mov     esi, [esp+2ch]
cmp     esi, [edi+10174h]
jz      loc_37a1c018
cmp     byte_37b73394, 0
lea     ebx, [esi+18h]
jnz     short loc_37a1bf84
push    0
push    0
push    1
push    0
call    ds:createeventw
mov     ebx, eax
test    ebx, ebx
jz      loc_37a1c034
push    0
push    ebx
push    offset destination
call    ds:interlockedcompareexchange
mov     [esp+2ch], eax
test    eax, eax
jnz     short loc_37a1bf6e
call    near ptr sub_37a94ce0
push    ebx
call    ds:setevent
mov     byte_37b73394, 1
jmp     short loc_37a1bf81
push    ebx
call    ds:closehandle
push    0ffffffffh
push    dword ptr [esp+30h]
call    ds:waitforsingleobject
lea     ebx, [esi+18h]
movsd   xmm0, qword_37b733b8
ucomisd xmm0, ds:qword_37b03b50
lahf
test    ah, 44h
jp      short loc_37a1bfad
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     edx, [esp+24h]
mov     eax, [esp+20h]
jmp     short loc_37a1bfde
lea     eax, [esp+20h]
push    eax
call    ds:queryperformancecounter
test    eax, eax
jz      short loc_37a1bf9a
mov     edx, [esp+24h]
mov     ecx, [esp+20h]
call    __ltod3
mulsd   xmm0, qword_37b733b8
mulsd   xmm0, ds:qword_37b03b88
call    __dtoul3
sub     eax, [ebx+20h]
push    0
sbb     edx, [ebx+24h]
push    0f4240h
push    edx
push    eax
call    __aulldiv
mov     [ebx+18h], eax
mov     [ebx+1ch], edx
mov     ecx, [edi+10044h]
push    0
push    ebx
push    edi
mov     eax, [ecx]
call    dword ptr [eax+10h]
push    esi
lea     eax, [esp+30h]
push    eax
lea     ecx, [edi+10174h]
call    sub_37a1cb80
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 0ch
retn    10h
call    ds:getlasterror
mov     edx, offset dword_37b6934c
mov     ecx, eax
call    sub_37a958b0
call    ds:getlasterror
mov     edx, offset dword_37b6934c
mov     ecx, eax
call    sub_37a958b0
push    ecx
push    esi
mov     esi, ecx
push    edi
mov     ecx, [esi+8]
mov     edi, [esi+4]
cmp     ecx, edi
jz      short loc_37a1c771
mov     eax, [esp+0ch+arg_0]
mov     eax, [eax]
mov     [edi], eax
add     dword ptr [esi+4], 4
pop     edi
pop     esi
pop     ecx
retn    4
mov     eax, [esi]
sub     edi, eax
sar     edi, 2
cmp     edi, 3fffffffh
jz      loc_37a1c868
sub     ecx, eax
mov     eax, 3fffffffh
sar     ecx, 2
mov     edx, ecx
shr     edx, 1
sub     eax, edx
push    ebp
lea     ebp, [edi+1]
cmp     ecx, eax
jbe     short loc_37a1c7a0
mov     eax, ebp
jmp     short loc_37a1c7a8
lea     eax, [edx+ecx]
cmp     eax, ebp
cmovb   eax, ebp
lea     ecx, ds:0[eax*4]
mov     [esp+10h+var_4], ecx
push    ebx
cmp     eax, 3fffffffh
jbe     short loc_37a1c7c0
or      ecx, 0ffffffffh
jmp     short loc_37a1c7c8
cmp     ecx, 1000h
jb      short loc_37a1c7ef
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_37a1c86d
lea     ebx, [eax+23h]
and     ebx, 0ffffffe0h
mov     [ebx-4], eax
jmp     short loc_37a1c802
test    ecx, ecx
jz      short loc_37a1c800
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     ebx, eax
jmp     short loc_37a1c802
xor     ebx, ebx
mov     eax, [esp+14h+arg_0]
mov     eax, [eax]
mov     [ebx+edi*4], eax
mov     ecx, [esi]
mov     eax, [esi+4]
sub     eax, ecx
push    eax
push    ecx
push    ebx
call    _memmove
mov     eax, [esi]
add     esp, 0ch
test    eax, eax
jz      short loc_37a1c84f
mov     ecx, [esi+8]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_37a1c845
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a1c86d
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
lea     eax, [ebx+ebp*4]
mov     [esi], ebx
mov     [esi+4], eax
mov     eax, [esp+14h+var_4]
add     eax, ebx
pop     ebx
pop     ebp
pop     edi
mov     [esi+8], eax
pop     esi
pop     ecx
retn    4
call    sub_37a164c0
call    __invalid_parameter_noinfo_noreturn
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jz      short loc_37a1c8c9
mov     edx, [esi+8]
sub     edx, eax
and     edx, 0fffffffch
cmp     edx, 1000h
jb      short loc_37a1c8ab
mov     ecx, [eax-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a1c8cb
mov     eax, ecx
push    edx
push    eax
call    sub_37ab1b25
mov     dword ptr [esi], 0
add     esp, 8
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
pop     esi
retn
call    __invalid_parameter_noinfo_noreturn
push    esi
push    edi
mov     edi, [ecx]
mov     edx, edi
mov     eax, [edi+4]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1c92e
mov     ecx, [esp+8+arg_4]
mov     esi, [ecx]
mov     ecx, [ecx+4]
cmp     [eax+14h], ecx
jg      short loc_37a1c909
jl      short loc_37a1c904
cmp     [eax+10h], esi
jnb     short loc_37a1c909
mov     eax, [eax+8]
jmp     short loc_37a1c90d
mov     edx, eax
mov     eax, [eax]
cmp     byte ptr [eax+0dh], 0
jz      short loc_37a1c8f8
cmp     edx, edi
jz      short loc_37a1c92e
cmp     ecx, [edx+14h]
jl      short loc_37a1c92e
jg      short loc_37a1c923
cmp     esi, [edx+10h]
jb      short loc_37a1c92e
mov     eax, [esp+8+arg_0]
pop     edi
pop     esi
mov     [eax], edx
retn    8
mov     eax, [esp+8+arg_0]
mov     [eax], edi
pop     edi
pop     esi
retn    8
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
push    offset seh_37a9d570
push    eax
mov     large fs:0, esp
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     eax, [edi]
mov     ebx, [eax+4]
mov     esi, ebx
cmp     byte ptr [ebx+0dh], 0
jnz     short loc_37a1c991
nop     word ptr [eax+eax+00h]
push    dword ptr [esi+8]
mov     ecx, edi
call    sub_37a1ca90
mov     esi, [esi]
push    40h
push    ebx
call    sub_37ab1b25
add     esp, 8
mov     ebx, esi
cmp     byte ptr [esi+0dh], 0
jz      short loc_37a1c970
mov     eax, [edi]
mov     ecx, [ebp+var_c]
mov     [eax+4], eax
mov     eax, [edi]
mov     [eax], eax
mov     eax, [edi]
mov     [eax+8], eax
mov     dword ptr [edi+4], 0
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
jmp     sub_37a1cad0
cmp     dword ptr [ecx+14h], 10h
jb      short loc_37a1ca09
mov     eax, [ecx]
retn
mov     eax, ecx
retn
jnp     short near ptr loc_37a1c9a9+3
mov     ecx, 931e133bh
pop     ebp
frstor  byte ptr [edx-53h]
sub     ebp, [eax-17h]
movsb
adc     al, ah
xor     ch, [edi-29h]
not     byte ptr [edi-4bh]
scasd
cmp     al, 85h
imul    edx
scasb
enter   0ffff8f80h, 5eh
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+block]
mov     ebx, ecx
mov     esi, edi
cmp     byte ptr [edi+0dh], 0
jnz     short loc_37a1cac0
push    dword ptr [esi+8]
mov     ecx, ebx
call    sub_37a1ca90
mov     esi, [esi]
push    40h
push    edi
call    sub_37ab1b25
add     esp, 8
mov     edi, esi
cmp     byte ptr [esi+0dh], 0
jz      short loc_37a1caa1
pop     edi
pop     esi
pop     ebx
retn    4
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jz      short loc_37a1cb19
mov     edx, [esi+8]
sub     edx, eax
and     edx, 0fffffff8h
cmp     edx, 1000h
jb      short loc_37a1cafb
mov     ecx, [eax-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a1cb1b
mov     eax, ecx
push    edx
push    eax
call    sub_37ab1b25
mov     dword ptr [esi], 0
add     esp, 8
mov     dword ptr [esi+4], 0
mov     dword ptr [esi+8], 0
pop     esi
retn
call    __invalid_parameter_noinfo_noreturn
aaa
pop     eax
jo      short near ptr loc_37a1cb37+3
stc
xor     al, 0c9h
sbb     [ebp-0a31ccb0h], ch
or      ebp, [edi]
pop     edi
adc     dl, [edi]
push    edi
les     esp, [ecx+edx*4]
call    far ptr 0dff3h:0a7dd1ee8h
dec     ebp
cmp     [esi+75ac999fh], al
insd
out     dx, eax
in      eax, dx
and     cl, 73h
push    ebp
adc     [edi+eax*4-62h], ch
jbe     short loc_37a1cb9b
mov     eax, [esp+arg_4]
push    esi
push    edi
mov     edi, ecx
mov     esi, eax
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1cbd2
mov     edx, [eax+8]
cmp     byte ptr [edx+0dh], 0
jnz     short loc_37a1cbb1
mov     esi, edx
mov     edx, [esi]
cmp     byte ptr [edx+0dh], 0
jnz     short loc_37a1cbd2
mov     ecx, [edx]
mov     esi, edx
mov     edx, ecx
cmp     byte ptr [ecx+0dh], 0
jz      short loc_37a1cba3
jmp     short loc_37a1cbd2
mov     ecx, [eax+4]
cmp     byte ptr [ecx+0dh], 0
jnz     short loc_37a1cbd0
nop     word ptr [eax+eax+00h]
cmp     esi, [ecx+8]
jnz     short loc_37a1cbd0
mov     esi, ecx
mov     ecx, [ecx+4]
cmp     byte ptr [ecx+0dh], 0
jz      short loc_37a1cbc0
mov     esi, ecx
push    eax
mov     ecx, edi
call    sub_37a1cc10
push    40h
push    eax
call    sub_37ab1b25
mov     eax, [esp+10h+arg_0]
add     esp, 8
pop     edi
mov     [eax], esi
pop     esi
retn    8
push    40h
call    ??2@yapaxi@z
add     esp, 4
mov     [eax], eax
mov     [eax+4], eax
mov     [eax+8], eax
mov     word ptr [eax+0ch], 101h
retn
sub     esp, 8
mov     edx, [esp+8+arg_0]
push    ebx
push    ebp
mov     ebp, edx
mov     ebx, ecx
cmp     byte ptr [edx+0dh], 0
mov     [esp+10h+var_8], ebp
jnz     short loc_37a1cc71
mov     eax, [edx+8]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1cc4e
mov     edx, eax
mov     ecx, [edx]
cmp     byte ptr [ecx+0dh], 0
jnz     short loc_37a1cc6d
nop     word ptr [eax+eax+00h]
mov     eax, [ecx]
mov     edx, ecx
mov     ecx, eax
cmp     byte ptr [eax+0dh], 0
jz      short loc_37a1cc40
jmp     short loc_37a1cc6d
mov     eax, [edx+4]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1cc6b
cmp     edx, [eax+8]
jnz     short loc_37a1cc6b
mov     edx, eax
mov     [esp+10h+arg_0], edx
mov     eax, [eax+4]
cmp     byte ptr [eax+0dh], 0
jz      short loc_37a1cc57
mov     edx, eax
mov     [esp+10h+arg_0], edx
mov     eax, [ebp+0]
push    esi
push    edi
mov     edi, [ebp+8]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1cc94
cmp     byte ptr [edi+0dh], 0
jz      short loc_37a1cc89
mov     edi, eax
jmp     short loc_37a1cc94
mov     edi, [edx+8]
cmp     edx, ebp
jnz     loc_37a1cd14
cmp     byte ptr [edi+0dh], 0
mov     esi, [ebp+4]
jnz     short loc_37a1cca0
mov     [edi+4], esi
mov     eax, [ebx]
cmp     [eax+4], ebp
jnz     short loc_37a1ccac
mov     [eax+4], edi
jmp     short loc_37a1ccb7
cmp     [esi], ebp
jnz     short loc_37a1ccb4
mov     [esi], edi
jmp     short loc_37a1ccb7
mov     [esi+8], edi
mov     eax, [ebx]
cmp     [eax], ebp
jnz     short loc_37a1cce1
cmp     byte ptr [edi+0dh], 0
jz      short loc_37a1ccc7
mov     edx, esi
jmp     short loc_37a1ccdf
mov     ecx, [edi]
mov     edx, edi
cmp     byte ptr [ecx+0dh], 0
jnz     short loc_37a1ccdf
mov     eax, [ecx]
mov     edx, ecx
mov     ecx, eax
cmp     byte ptr [eax+0dh], 0
jz      short loc_37a1ccd1
mov     eax, [ebx]
mov     [eax], edx
mov     edx, [ebx]
cmp     [edx+8], ebp
jnz     loc_37a1cd6b
cmp     byte ptr [edi+0dh], 0
jz      short loc_37a1ccf9
mov     ecx, esi
mov     [edx+8], ecx
jmp     short loc_37a1cd6b
mov     eax, [edi+8]
mov     ecx, edi
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1cd0f
mov     ecx, eax
mov     eax, [ecx+8]
cmp     byte ptr [eax+0dh], 0
jz      short loc_37a1cd04
mov     [edx+8], ecx
jmp     short loc_37a1cd6b
mov     [eax+4], edx
mov     eax, [ebp+0]
mov     [edx], eax
cmp     edx, [ebp+8]
jnz     short loc_37a1cd25
mov     esi, edx
jmp     short loc_37a1cd3f
cmp     byte ptr [edi+0dh], 0
mov     esi, [edx+4]
jnz     short loc_37a1cd31
mov     [edi+4], esi
mov     [esi], edi
mov     eax, [ebp+8]
mov     [edx+8], eax
mov     eax, [ebp+8]
mov     [eax+4], edx
mov     eax, [ebx]
cmp     [eax+4], ebp
jnz     short loc_37a1cd4b
mov     [eax+4], edx
jmp     short loc_37a1cd59
mov     eax, [ebp+4]
cmp     [eax], ebp
jnz     short loc_37a1cd56
mov     [eax], edx
jmp     short loc_37a1cd59
mov     [eax+8], edx
mov     eax, [ebp+4]
mov     [edx+4], eax
mov     al, [ebp+0ch]
mov     cl, [edx+0ch]
mov     [edx+0ch], al
mov     [ebp+0ch], cl
cmp     byte ptr [ebp+0ch], 1
jnz     loc_37a1ce47
mov     eax, [ebx]
cmp     edi, [eax+4]
jz      loc_37a1ce43
cmp     byte ptr [edi+0ch], 1
mov     ebp, esi
jnz     loc_37a1ce3f
mov     ecx, [esi]
cmp     edi, ecx
jnz     short loc_37a1cdfc
mov     ecx, [esi+8]
cmp     byte ptr [ecx+0ch], 0
jnz     short loc_37a1cdae
mov     byte ptr [ecx+0ch], 1
mov     ecx, ebx
push    esi
mov     byte ptr [esi+0ch], 0
call    sub_37a1cf00
mov     ecx, [esi+8]
cmp     byte ptr [ecx+0dh], 0
jnz     short loc_37a1ce2f
mov     edx, [ecx]
cmp     byte ptr [edx+0ch], 1
jnz     short loc_37a1cdc5
mov     eax, [ecx+8]
cmp     byte ptr [eax+0ch], 1
jz      short loc_37a1ce2b
mov     eax, [ecx+8]
cmp     byte ptr [eax+0ch], 1
jnz     short loc_37a1cde1
mov     byte ptr [edx+0ch], 1
mov     byte ptr [ecx+0ch], 0
push    ecx
mov     ecx, ebx
call    sub_37a1cea0
mov     ecx, [esi+8]
mov     al, [esi+0ch]
mov     [ecx+0ch], al
mov     byte ptr [esi+0ch], 1
mov     eax, [ecx+8]
mov     ecx, ebx
push    esi
mov     byte ptr [eax+0ch], 1
call    sub_37a1cf00
jmp     short loc_37a1ce3f
cmp     byte ptr [ecx+0ch], 0
jnz     short loc_37a1ce14
mov     byte ptr [ecx+0ch], 1
mov     ecx, ebx
push    esi
mov     byte ptr [esi+0ch], 0
call    sub_37a1cea0
mov     ecx, [esi]
cmp     byte ptr [ecx+0dh], 0
jnz     short loc_37a1ce2f
mov     edx, [ecx+8]
cmp     byte ptr [edx+0ch], 1
jnz     short loc_37a1ce5e
mov     eax, [ecx]
cmp     byte ptr [eax+0ch], 1
jnz     short loc_37a1ce5e
mov     byte ptr [ecx+0ch], 0
mov     eax, [ebx]
mov     edi, ebp
mov     esi, [esi+4]
cmp     ebp, [eax+4]
jnz     loc_37a1cd80
mov     ebp, [esp+18h+var_8]
mov     byte ptr [edi+0ch], 1
mov     ecx, [ebx+4]
mov     eax, ebp
pop     edi
pop     esi
test    ecx, ecx
jz      short loc_37a1ce56
dec     ecx
mov     [ebx+4], ecx
pop     ebp
pop     ebx
add     esp, 8
retn    4
mov     eax, [ecx]
cmp     byte ptr [eax+0ch], 1
jnz     short loc_37a1ce78
mov     byte ptr [edx+0ch], 1
mov     byte ptr [ecx+0ch], 0
push    ecx
mov     ecx, ebx
call    sub_37a1cf00
mov     ecx, [esi]
mov     al, [esi+0ch]
mov     [ecx+0ch], al
mov     byte ptr [esi+0ch], 1
mov     eax, [ecx]
mov     ecx, ebx
push    esi
mov     byte ptr [eax+0ch], 1
call    sub_37a1cea0
jmp     short loc_37a1ce3f
mov     edx, [esp+arg_0]
push    esi
mov     esi, [edx]
mov     eax, [esi+8]
mov     [edx], eax
mov     eax, [esi+8]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1ceb8
mov     [eax+4], edx
mov     eax, [edx+4]
mov     [esi+4], eax
mov     eax, [ecx]
cmp     edx, [eax+4]
jnz     short loc_37a1ced2
mov     [eax+4], esi
mov     [esi+8], edx
mov     [edx+4], esi
pop     esi
retn    4
mov     eax, [edx+4]
cmp     edx, [eax+8]
jnz     short loc_37a1cee7
mov     [eax+8], esi
mov     [esi+8], edx
mov     [edx+4], esi
pop     esi
retn    4
mov     [eax], esi
mov     [esi+8], edx
mov     [edx+4], esi
pop     esi
retn    4
mov     edx, [esp+arg_0]
push    esi
mov     esi, [edx+8]
mov     eax, [esi]
mov     [edx+8], eax
mov     eax, [esi]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1cf18
mov     [eax+4], edx
mov     eax, [edx+4]
mov     [esi+4], eax
mov     eax, [ecx]
cmp     edx, [eax+4]
jnz     short loc_37a1cf31
mov     [eax+4], esi
mov     [esi], edx
mov     [edx+4], esi
pop     esi
retn    4
mov     eax, [edx+4]
cmp     edx, [eax]
jnz     short loc_37a1cf43
mov     [eax], esi
mov     [esi], edx
mov     [edx+4], esi
pop     esi
retn    4
mov     [eax+8], esi
mov     [esi], edx
mov     [edx+4], esi
pop     esi
retn    4
push    edi
sal     byte ptr [ebx+25h], 1
rcl     byte ptr ds:0cf75b152h, cl
test    eax, 8bc4e718h
aaa
cmp     [edx-69h], bl
sahf
or      [ecx+4ad54e69h], eax
jmp     short loc_37a1cf81
cwde
add     [ebx-526483dah], ebx
movsb
adc     byte ptr [ecx-0b302b94h], 22h
mov     esi, 90f4f8d0h
retf
cmpsb
mov     edx, 7eeaaf3ch
pop     ss
or      eax, 0e0f75c6ch
in      eax, 1ah
cmc
mov     esp, 0f95f41feh
jnz     short loc_37a1d0cf
xchg    eax, esi
and     ebx, eax
ja      short loc_37a1d0c9
inc     ecx
dec     edi
dec     eax
fsubr   qword ptr [eax-7]
mov     eax, 5236bfbfh
mul     dword ptr [ecx+10h]
push    esi
or      [edi-7ed73230h], bh
lds     eax, [ebx+eax-3bh]
mov     al, 0a0h
nop
mov     dl, 4eh
inc     edi
jmp     ebx
mov     edx, [esp+arg_4]
push    ebx
push    ebp
mov     ebp, [esp+8+src]
sub     edx, ebp
push    esi
push    edi
mov     edi, ecx
mov     esi, edx
sar     esi, 3
mov     ebx, [edi]
mov     ecx, [edi+8]
mov     eax, [edi+4]
sub     ecx, ebx
sub     eax, ebx
sar     ecx, 3
sar     eax, 3
cmp     esi, ecx
jbe     loc_37a1d348
cmp     esi, 1fffffffh
ja      loc_37a1d397
mov     edx, ecx
mov     eax, 1fffffffh
shr     edx, 1
sub     eax, edx
cmp     ecx, eax
ja      short loc_37a1d284
lea     eax, [edx+ecx]
cmp     eax, esi
cmovb   eax, esi
mov     esi, eax
test    ebx, ebx
jz      short loc_37a1d2b3
shl     ecx, 3
cmp     ecx, 1000h
jb      short loc_37a1d2a9
mov     edx, [ebx-4]
add     ecx, 23h
sub     ebx, edx
lea     eax, [ebx-4]
cmp     eax, 1fh
ja      loc_37a1d3a1
mov     ebx, edx
push    ecx
push    ebx
call    sub_37ab1b25
add     esp, 8
mov     dword ptr [edi], 0
mov     dword ptr [edi+4], 0
mov     dword ptr [edi+8], 0
test    esi, esi
jz      short loc_37a1d328
cmp     esi, 1fffffffh
ja      loc_37a1d39c
shl     esi, 3
cmp     esi, 1000h
jb      short loc_37a1d30b
lea     eax, [esi+23h]
or      ecx, 0ffffffffh
cmp     eax, esi
cmovbe  eax, ecx
push    eax
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      loc_37a1d3a1
lea     eax, [ecx+23h]
and     eax, 0ffffffe0h
mov     [eax-4], ecx
jmp     short loc_37a1d31c
test    esi, esi
jz      short loc_37a1d31a
push    esi
call    ??2@yapaxi@z
add     esp, 4
jmp     short loc_37a1d31c
xor     eax, eax
mov     [edi], eax
mov     [edi+4], eax
mov     eax, [edi]
add     eax, esi
mov     [edi+8], eax
mov     edx, [esp+10h+arg_4]
push    ecx
push    [esp+14h+arg_4]
push    ecx
push    dword ptr [edi]
mov     ecx, ebp
call    sub_37a1da50
add     esp, 10h
mov     [edi+4], eax
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    0ch
cmp     esi, eax
jbe     short loc_37a1d37f
lea     esi, ds:0[eax*8]
push    esi
push    ebp
push    ebx
call    _memmove
mov     edx, [esp+1ch+arg_4]
lea     ecx, [esi+ebp]
add     esp, 8
push    [esp+14h+arg_4]
push    ecx
push    dword ptr [edi+4]
call    sub_37a1da50
add     esp, 10h
mov     [edi+4], eax
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    0ch
push    edx
push    ebp
push    ebx
call    _memmove
add     esp, 0ch
lea     eax, [ebx+esi*8]
mov     [edi+4], eax
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    0ch
call    sub_37a164c0
call    sub_37a164c0
call    __invalid_parameter_noinfo_noreturn
mov     dword ptr [eax+2ch], 0
mov     dword ptr [eax+30h], 0
mov     dword ptr [eax+34h], 0
mov     dword ptr [eax+38h], 0
mov     dword ptr [eax+3ch], 0
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a1d470
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 10h
push    ebx
mov     ebx, ecx
mov     [ebp+var_4], 0
push    esi
push    edi
mov     [ebp+var_10], esp
cmp     dword ptr [ebx+4], 0
mov     esi, [ebx]
jnz     short loc_37a1d4c7
push    [ebp+block]
push    ecx
push    esi
mov     esi, [ebp+arg_0]
push    1
push    esi
call    sub_37a1d790
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
mov     ecx, [ebp+arg_4]
cmp     ecx, [esi]
jnz     short loc_37a1d511
mov     edx, [ebp+arg_8]
mov     eax, [edx+4]
cmp     eax, [ecx+14h]
jg      loc_37a1d6fb
jl      short loc_37a1d4ea
mov     eax, [edx]
cmp     eax, [ecx+10h]
jnb     loc_37a1d6fb
push    [ebp+block]
mov     esi, [ebp+arg_0]
push    ecx
push    ecx
push    1
push    esi
mov     ecx, ebx
call    sub_37a1d790
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
cmp     ecx, esi
jnz     short loc_37a1d55b
mov     ecx, [esi+8]
mov     edx, [ebp+arg_8]
mov     eax, [ecx+14h]
cmp     eax, [edx+4]
jg      loc_37a1d6fb
jl      short loc_37a1d534
mov     eax, [ecx+10h]
cmp     eax, [edx]
jnb     loc_37a1d6fb
push    [ebp+block]
mov     esi, [ebp+arg_0]
push    ecx
push    ecx
push    0
push    esi
mov     ecx, ebx
call    sub_37a1d790
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
mov     eax, [ebp+arg_8]
mov     edi, [ecx+14h]
mov     edx, [eax]
mov     eax, [eax+4]
mov     [ebp+var_14], eax
mov     eax, [ecx+10h]
mov     [ebp+var_18], edx
cmp     [ebp+var_14], edi
jg      loc_37a1d639
jl      short loc_37a1d582
cmp     edx, eax
jnb     loc_37a1d639
cmp     byte ptr [ecx+0dh], 0
mov     edx, ecx
jz      short loc_37a1d58f
mov     eax, [ecx+8]
jmp     short loc_37a1d5d1
mov     eax, [ecx]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1d5ad
mov     edx, [eax+8]
cmp     byte ptr [edx+0dh], 0
jnz     short loc_37a1d5d1
mov     eax, edx
mov     edx, [eax+8]
cmp     byte ptr [edx+0dh], 0
jz      short loc_37a1d5a0
jmp     short loc_37a1d5d1
mov     edi, [ecx+4]
cmp     byte ptr [edi+0dh], 0
jnz     short loc_37a1d5c5
cmp     edx, [edi]
jnz     short loc_37a1d5c5
mov     edx, edi
mov     edi, [edi+4]
cmp     byte ptr [edi+0dh], 0
jz      short loc_37a1d5b6
cmp     byte ptr [edx+0dh], 0
mov     eax, edx
cmovz   eax, edi
mov     edi, [ecx+14h]
mov     edx, [ebp+var_14]
cmp     [eax+14h], edx
jg      short loc_37a1d633
jl      short loc_37a1d5e3
mov     edx, [ebp+var_18]
cmp     [eax+10h], edx
jnb     short loc_37a1d636
mov     edx, [eax+8]
push    [ebp+block]
mov     esi, [ebp+arg_0]
push    ecx
cmp     byte ptr [edx+0dh], 0
jz      short loc_37a1d613
push    eax
push    0
push    esi
mov     ecx, ebx
call    sub_37a1d790
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    ecx
push    1
push    esi
mov     ecx, ebx
call    sub_37a1d790
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
mov     edx, [ebp+var_18]
mov     eax, [ecx+10h]
cmp     edi, [ebp+var_14]
jg      loc_37a1d6f8
jl      short loc_37a1d64c
cmp     eax, edx
jnb     loc_37a1d6f8
cmp     byte ptr [ecx+0dh], 0
mov     eax, ecx
jnz     short loc_37a1d692
mov     edx, [ecx+8]
cmp     byte ptr [edx+0dh], 0
jnz     short loc_37a1d675
mov     eax, edx
mov     edi, [eax]
cmp     byte ptr [edi+0dh], 0
jnz     short loc_37a1d692
mov     edx, [edi]
mov     eax, edi
mov     edi, edx
cmp     byte ptr [edx+0dh], 0
jz      short loc_37a1d667
jmp     short loc_37a1d692
mov     edx, [ecx+4]
cmp     byte ptr [edx+0dh], 0
jnz     short loc_37a1d690
xchg    ax, ax
cmp     eax, [edx+8]
jnz     short loc_37a1d690
mov     eax, edx
mov     edx, [edx+4]
cmp     byte ptr [edx+0dh], 0
jz      short loc_37a1d680
mov     eax, edx
cmp     eax, esi
jz      short loc_37a1d6a8
mov     edx, [ebp+var_14]
cmp     edx, [eax+14h]
jg      short loc_37a1d6f8
jl      short loc_37a1d6a8
mov     edx, [ebp+var_18]
cmp     edx, [eax+10h]
jnb     short loc_37a1d6f8
mov     edx, [ecx+8]
push    [ebp+block]
mov     esi, [ebp+arg_0]
push    ecx
cmp     byte ptr [edx+0dh], 0
jz      short loc_37a1d6d8
push    ecx
push    0
push    esi
mov     ecx, ebx
call    sub_37a1d790
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    eax
push    1
push    esi
mov     ecx, ebx
call    sub_37a1d790
mov     eax, esi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
mov     edx, [ebp+arg_8]
push    [ebp+block]
lea     eax, [ebp+var_1c]
mov     [ebp+var_4], 0ffffffffh
push    edx
push    ecx
push    eax
mov     ecx, ebx
call    sub_37a1d8f0
pop     edi
pop     esi
pop     ebx
mov     ecx, [eax]
mov     eax, [ebp+arg_0]
mov     [eax], ecx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    10h
push    [ebp+block]
call    sub_37a1d770
push    0
push    0
call    __cxxthrowexception@8
mov     ecx, [ecx]
mov     eax, [ecx+8]
mov     [ecx+0ch], eax
retn
push    esi
push    40h
mov     esi, ecx
call    ??2@yapaxi@z
mov     edx, [esi]
add     esp, 4
mov     [eax], edx
mov     edx, [esi]
mov     [eax+4], edx
mov     ecx, [esi]
mov     [eax+8], ecx
pop     esi
retn
push    40h
push    [esp+4+block]
call    sub_37ab1b25
add     esp, 8
retn    4
push    edi
mov     edi, ecx
mov     eax, [edi+4]
cmp     eax, 3fffffeh
jnb     loc_37a1d8db
push    ebx
mov     ebx, [esp+8+block]
inc     eax
mov     [edi+4], eax
mov     eax, [esp+8+arg_8]
push    esi
mov     [ebx+4], eax
mov     ecx, [edi]
cmp     eax, ecx
jnz     short loc_37a1d7c6
mov     [ecx+4], ebx
mov     eax, [edi]
mov     [eax], ebx
mov     eax, [edi]
mov     [eax+8], ebx
jmp     short loc_37a1d7e6
cmp     [esp+0ch+arg_4], 0
jz      short loc_37a1d7d9
mov     [eax], ebx
mov     ecx, [edi]
cmp     eax, [ecx]
jnz     short loc_37a1d7e6
mov     [ecx], ebx
jmp     short loc_37a1d7e6
mov     [eax+8], ebx
mov     ecx, [edi]
cmp     eax, [ecx+8]
jnz     short loc_37a1d7e6
mov     [ecx+8], ebx
mov     eax, [ebx+4]
mov     esi, ebx
cmp     byte ptr [eax+0ch], 0
jnz     loc_37a1d8c6
mov     eax, [esi+4]
mov     edx, [eax+4]
mov     ecx, [edx]
cmp     eax, ecx
jnz     short loc_37a1d83c
mov     ecx, [edx+8]
cmp     byte ptr [ecx+0ch], 0
jz      short loc_37a1d842
cmp     esi, [eax+8]
jnz     short loc_37a1d819
mov     esi, eax
mov     ecx, edi
push    esi
call    sub_37a1cf00
mov     eax, [esi+4]
mov     ecx, edi
mov     byte ptr [eax+0ch], 1
mov     eax, [esi+4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 0
mov     eax, [esi+4]
push    dword ptr [eax+4]
call    sub_37a1cea0
jmp     loc_37a1d8b9
cmp     byte ptr [ecx+0ch], 0
jnz     short loc_37a1d85c
mov     byte ptr [eax+0ch], 1
mov     byte ptr [ecx+0ch], 1
mov     eax, [esi+4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 0
mov     eax, [esi+4]
mov     esi, [eax+4]
jmp     short loc_37a1d8b9
cmp     esi, [eax]
jnz     short loc_37a1d86a
mov     esi, eax
mov     ecx, edi
push    esi
call    sub_37a1cea0
mov     eax, [esi+4]
mov     byte ptr [eax+0ch], 1
mov     eax, [esi+4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 0
mov     eax, [esi+4]
mov     ecx, [eax+4]
mov     edx, [ecx+8]
mov     eax, [edx]
mov     [ecx+8], eax
mov     eax, [edx]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1d894
mov     [eax+4], ecx
mov     eax, [ecx+4]
mov     [edx+4], eax
mov     eax, [edi]
cmp     ecx, [eax+4]
jnz     short loc_37a1d8a6
mov     [eax+4], edx
jmp     short loc_37a1d8b4
mov     eax, [ecx+4]
cmp     ecx, [eax]
jnz     short loc_37a1d8b1
mov     [eax], edx
jmp     short loc_37a1d8b4
mov     [eax+8], edx
mov     [edx], ecx
mov     [ecx+4], edx
mov     eax, [esi+4]
cmp     byte ptr [eax+0ch], 0
jz      loc_37a1d7f5
mov     eax, [edi]
pop     esi
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 1
mov     eax, [esp+8+arg_0]
mov     [eax], ebx
pop     ebx
pop     edi
retn    14h
push    [esp+4+block]
call    sub_37a1d770
push    offset amapsetttoolong
call    sub_37ab022c
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a1d8f0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 0ch
push    ebx
mov     ebx, ecx
mov     [ebp+var_4], 0
push    esi
push    edi
mov     dl, 1
mov     [ebp+var_10], esp
mov     ecx, [ebx]
mov     edi, ecx
mov     [ebp+var_18], ebx
mov     byte ptr [ebp+var_14], dl
mov     eax, [ecx+4]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1d95c
mov     esi, [ebp+arg_8]
mov     ebx, [esi]
mov     esi, [esi+4]
mov     edi, eax
cmp     esi, [eax+14h]
jg      short loc_37a1d94b
jl      short loc_37a1d945
cmp     ebx, [eax+10h]
jnb     short loc_37a1d94b
mov     eax, [eax]
mov     dl, 1
jmp     short loc_37a1d950
mov     eax, [eax+8]
xor     dl, dl
cmp     byte ptr [eax+0dh], 0
mov     byte ptr [ebp+var_14], dl
jz      short loc_37a1d937
mov     ebx, [ebp+var_18]
mov     esi, edi
test    dl, dl
jz      loc_37a1d9f2
cmp     edi, [ecx]
jnz     short loc_37a1d99a
push    [ebp+block]
push    ecx
push    edi
push    1
lea     eax, [ebp+arg_8]
mov     ecx, ebx
push    eax
call    sub_37a1d790
mov     ecx, [eax]
mov     eax, [ebp+arg_0]
mov     [eax], ecx
mov     byte ptr [eax+4], 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
cmp     byte ptr [edi+0dh], 0
jz      short loc_37a1d9a5
mov     esi, [edi+8]
jmp     short loc_37a1d9f2
mov     eax, [edi]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1d9cd
mov     esi, eax
mov     eax, [esi+8]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1d9f2
nop     dword ptr [eax+eax+00000000h]
mov     esi, eax
mov     eax, [esi+8]
cmp     byte ptr [eax+0dh], 0
jz      short loc_37a1d9c0
jmp     short loc_37a1d9f2
mov     eax, [edi+4]
cmp     byte ptr [eax+0dh], 0
jnz     short loc_37a1d9eb
mov     ecx, edi
mov     edx, eax
cmp     ecx, [eax]
jnz     short loc_37a1d9eb
mov     esi, eax
mov     ecx, edx
mov     eax, [eax+4]
cmp     byte ptr [eax+0dh], 0
jz      short loc_37a1d9d8
cmp     byte ptr [esi+0dh], 0
cmovz   esi, eax
mov     ecx, [ebp+arg_8]
mov     eax, [esi+14h]
cmp     eax, [ecx+4]
jg      short loc_37a1da13
jl      short loc_37a1da06
mov     eax, [esi+10h]
cmp     eax, [ecx]
jnb     short loc_37a1da13
push    [ebp+block]
push    ecx
push    edi
push    [ebp+var_14]
jmp     loc_37a1d971
push    40h
push    [ebp+block]
call    sub_37ab1b25
mov     eax, [ebp+arg_0]
add     esp, 8
mov     ecx, [ebp+var_c]
pop     edi
mov     [eax], esi
pop     esi
mov     byte ptr [eax+4], 0
mov     large fs:0, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    [ebp+block]
call    sub_37a1d770
push    0
push    0
call    __cxxthrowexception@8
mov     eax, [esp+arg_0]
push    esi
mov     esi, edx
cmp     ecx, esi
jz      short loc_37a1da74
nop     dword ptr [eax+eax+00h]
mov     edx, [ecx]
mov     [eax], edx
mov     edx, [ecx+4]
add     ecx, 8
mov     [eax+4], edx
add     eax, 8
cmp     ecx, esi
jnz     short loc_37a1da60
pop     esi
retn
jecxz   short near ptr loc_37a1da04+1
jnp     short loc_37a1dadd
test    [edx], edi
dec     ecx
dec     esi
daa
mov     ds:7135691eh, eax
xchg    eax, ebp
mov     ds:0d114c300h, eax
hlt
dec     ebp
xchg    eax, ebx
adc     [edi], bl
xor     [edi], bh
mov     bl, 0ddh
sub     al, 0cah
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 8
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, ecx
mov     ecx, [esi]
movsx   eax, byte ptr [ecx]
add     eax, 0ffffffdeh
cmp     eax, 59h
ja      def_37a1db18
movzx   eax, ds:byte_37a1dc5c[eax]
jmp     ds:jpt_37a1db18[eax*4]
lea     eax, [ecx+1]
mov     [esi], eax
cmp     byte ptr [eax], 75h
jnz     short loc_37a1db71
inc     eax
mov     [esi], eax
cmp     byte ptr [eax], 6ch
jnz     short loc_37a1db71
inc     eax
mov     [esi], eax
cmp     byte ptr [eax], 6ch
jnz     short loc_37a1db71
inc     eax
mov     [esi], eax
mov     esi, [ebp+arg_4]
mov     ecx, [esi+24h]
lea     eax, [ecx+10h]
cmp     eax, [esi+28h]
jbe     short loc_37a1db57
push    1
lea     ecx, [esi+18h]
call    loc_37a1f460
mov     ecx, [esi+24h]
lea     eax, [ecx+10h]
xorps   xmm0, xmm0
mov     [esi+24h], eax
xor     eax, eax
movups  xmmword ptr [ecx], xmm0
mov     [ecx+0eh], ax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
sub     eax, [esi+8]
mov     dword ptr [edi+18h], 3
mov     [edi+1ch], eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     eax, [ecx+1]
mov     [esi], eax
cmp     byte ptr [eax], 72h
jnz     short loc_37a1db71
inc     eax
mov     [esi], eax
cmp     byte ptr [eax], 75h
jnz     short loc_37a1db71
inc     eax
mov     [esi], eax
cmp     byte ptr [eax], 65h
jnz     short loc_37a1db71
push    1
mov     ecx, [ebp+arg_4]
inc     eax
mov     [esi], eax
call    sub_37a1ef90
test    al, al
jnz     loc_37a1dc38
mov     eax, [esi]
sub     eax, [esi+8]
mov     dword ptr [edi+18h], 10h
mov     [edi+1ch], eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
lea     eax, [ecx+1]
mov     [esi], eax
cmp     byte ptr [eax], 61h
jnz     short loc_37a1db71
inc     eax
mov     [esi], eax
cmp     byte ptr [eax], 6ch
jnz     short loc_37a1db71
inc     eax
mov     [esi], eax
cmp     byte ptr [eax], 73h
jnz     short loc_37a1db71
inc     eax
mov     [esi], eax
cmp     byte ptr [eax], 65h
jnz     short loc_37a1db71
push    0
jmp     short loc_37a1dba2
push    0
push    [ebp+arg_4]
mov     ecx, edi
push    esi
call    nullsub_3
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    [ebp+arg_4]
mov     ecx, edi
push    esi
call    near ptr sub_37a1e100
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    [ebp+arg_4]
mov     ecx, edi
push    esi
call    sub_37a1e300
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    [ebp+arg_4]
mov     ecx, edi
push    esi
call    sub_37a1e4a0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     edx, 2c2bdc38h
fdiv    st, st
cdq
xor     [ebx-45dcb18ah], dh
retf
push    ecx
push    ebx
push    ebp
mov     ebp, [esp+0ch+arg_4]
mov     ebx, ecx
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
inc     dword ptr [esi]
mov     edx, [ebp+24h]
lea     eax, [edx+10h]
cmp     eax, [ebp+28h]
jbe     short loc_37a1e329
push    1
lea     ecx, [ebp+18h]
call    loc_37a1f460
mov     edx, [ebp+24h]
lea     eax, [edx+10h]
xorps   xmm0, xmm0
mov     [ebp+24h], eax
mov     edi, 4
movups  xmmword ptr [edx], xmm0
push    esi
mov     ecx, ebx
mov     [edx+0eh], di
call    near ptr sub_37a1da80
cmp     dword ptr [ebx+18h], 0
jnz     loc_37a1e489
mov     eax, [esi]
cmp     byte ptr [eax], 5dh
jnz     short loc_37a1e37e
inc     eax
mov     [esi], eax
mov     eax, [ebp+24h]
mov     [eax-2], di
mov     dword ptr [eax-8], 0
mov     dword ptr [eax-0ch], 0
mov     dword ptr [eax-10h], 0
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn    8
push    ebp
push    esi
mov     ecx, ebx
xor     edi, edi
call    sub_37a1daf0
cmp     [ebx+18h], edi
jnz     loc_37a1e489
mov     ecx, [esi]
inc     edi
call    sub_37a198d0
mov     [esi], eax
cmp     byte ptr [eax], 2fh
jnz     short loc_37a1e3f5
inc     eax
mov     [esi], eax
mov     cl, [eax]
cmp     cl, 2ah
jnz     short loc_37a1e3ca
inc     eax
mov     [esi], eax
xchg    ax, ax
mov     cl, [eax]
test    cl, cl
jz      short loc_37a1e3e8
inc     eax
mov     [esi], eax
cmp     cl, 2ah
jnz     short loc_37a1e3b0
cmp     byte ptr [eax], 2fh
jnz     short loc_37a1e3b0
lea     ecx, [eax+1]
mov     [esi], ecx
jmp     short loc_37a1e395
cmp     cl, 2fh
jnz     short loc_37a1e3e8
inc     eax
mov     [esi], eax
mov     ecx, eax
mov     dl, [eax]
test    dl, dl
jz      short loc_37a1e395
lea     ecx, [eax+1]
mov     [esi], ecx
mov     eax, ecx
cmp     dl, 0ah
jnz     short loc_37a1e3d4
jmp     short loc_37a1e395
sub     eax, [esi+8]
mov     [ebx+1ch], eax
mov     dword ptr [ebx+18h], 11h
cmp     dword ptr [ebx+18h], 0
jnz     loc_37a1e489
mov     eax, [esi]
mov     cl, [eax]
cmp     cl, 2ch
jnz     short loc_37a1e451
inc     eax
mov     ecx, ebx
push    esi
mov     [esi], eax
call    near ptr sub_37a1da80
cmp     dword ptr [ebx+18h], 0
jnz     short loc_37a1e489
mov     eax, [esi]
cmp     byte ptr [eax], 5dh
jz      short loc_37a1e43b
push    ebp
push    esi
mov     ecx, ebx
call    sub_37a1daf0
cmp     dword ptr [ebx+18h], 0
jz      loc_37a1e392
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn    8
push    edi
mov     ecx, ebp
call    loc_37a1ebe0
test    al, al
jz      short loc_37a1e465
inc     dword ptr [esi]
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn    8
cmp     cl, 5dh
jnz     short loc_37a1e47c
inc     eax
mov     ecx, ebp
push    edi
mov     [esi], eax
call    loc_37a1ebe0
test    al, al
jnz     short loc_37a1e489
mov     eax, [esi]
sub     eax, [esi+8]
mov     dword ptr [ebx+18h], 10h
mov     [ebx+1ch], eax
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn    8
sub     eax, [esi+8]
mov     dword ptr [ebx+18h], 7
mov     [ebx+1ch], eax
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn    8
test    [ecx-31h], esi
or      eax, 7320939dh
sbb     al, 3bh
push    esi
and     byte ptr [edi+51024116h], 0e8h
mov     ch, 40h
lodsb
jmp     near ptr 0e80ae7e0h
lodsb
sti
fbstp   tbyte ptr [edx]
fistp   qword ptr [edx+6ah]
cmpsd
jbe     short loc_37a1ebfc
or      ebp, esi
pop     eax
outsd
loopne  nullsub_7
in      al, 0a5h
sbb     esi, ebx
push    eax
dec     eax
inc     eax
retn
repne mov [ebp-2ch], dl
mov     bh, 9ah
mov     esp, 0f21309fah
scasd
lodsd
aam     0
in      al, 0a2h
cmp     [esi+edx*8-61h], esi
push    ds
lock xchg eax, esi
iret
wait
rcl     byte ptr [eax-6468c79ch], cl
jmp     far ptr 24d9h:542cb218h
inc     esi
or      dl, ch
insb
mov     [ebx+ebx*8], ebx
jle     short loc_37a1ecf5
inc     ebx
push    esi
xchg    ax, cx
mov     ecx, esp
rcl     byte ptr [ebx], 1
pop     ebp
mov     ch, bl
jmp     dword ptr [eax+9]
insd
imul    edi, [edi-1dd4480ah], 93d8c2e7h
test    eax, 0a8062354h
std
xor     ecx, 9a44e6e7h
jz      short near ptr word_37a1ed1e
jge     short loc_37a1eda2
xchg    eax, ebx
sub     al, 55h
push    ecx
jge     short near ptr loc_37a1eda2+5
push    ecx
sub     ch, cl
push    edi
or      cl, [ebx]
xor     byte ptr [esi+52h], 34h
sub     ds:0ebd0038dh, esi
nop
jbe     short loc_37a1ecf8
lahf
loopne  near ptr loc_37a1ed2b+3
adc     [ebx-11h], cl
cmp     al, 0bbh
jb      short near ptr loc_37a1ed42+1
push    eax
lds     ecx, [ebp+36h]
xchg    eax, edi
sbb     [esi+3dh], ah
sbb     [ecx], ch
mov     ebp, 288a429ah
adc     [esi], dl
and     eax, 2581a44dh
and     [esi], dh
and     ebx, [edx]
imul    byte ptr [ecx]
popa
dec     ecx
sahf
adc     cl, [edi+edi+20h]
cmp     [edx-278c7170h], dh
out     45h, eax
lds     esp, [edx]
test    [ebx+2fb0f899h], eax
xor     ebp, [edx-3]
cmp     al, 0beh
cwde
push    ebx
shr     byte ptr [ebx+1025de8ch], cl
xor     [edi], ecx
int     6bh
mov     cl, 47h
fcomp   dword ptr [ecx+34015041h]
adc     edi, edx
xor     al, 7dh
mov     [ebx+19h], eax
sti
jl      short near ptr loc_37a1ed82+1
std
rcl     eax, 1
loope   loc_37a1edf5
retn    0f2f8h
cmp     ecx, [ebp-6368528h]
scasb
push    ebp
push    ecx
in      eax, dx
pop     esi
adc     eax, 0a5792d02h
pop     esp
adc     esp, ebx
sbb     eax, 1721a6a2h
hlt
mov     ds:0b9680441h, al
retn    0c491h
mov     [esi], ecx
pop     es
movsd
or      eax, edi
rcl     byte ptr [ebx-19a956b4h], cl
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
push    esi
lea     esi, [ecx+18h]
mov     ecx, [esi+0ch]
push    edi
lea     eax, [ecx+10h]
cmp     eax, [esi+10h]
jbe     short loc_37a1ee44
push    1
mov     ecx, esi
call    loc_37a1f460
mov     ecx, [esi+0ch]
mov     ebx, [ebp+arg_4]
lea     eax, [ecx+10h]
mov     [esi+0ch], eax
xorps   xmm0, xmm0
mov     esi, [ebp+arg_0]
mov     eax, 116h
mov     edx, eax
movups  xmmword ptr [ecx], xmm0
mov     [ecx], esi
mov     [ecx+4], ebx
mov     [ecx+0eh], ax
test    ebx, ebx
jl      short loc_37a1ee7b
jg      short loc_37a1ee70
test    esi, esi
jb      short loc_37a1ee7b
mov     eax, 196h
mov     [ecx+0eh], ax
mov     edx, eax
xor     eax, eax
movzx   edi, dx
or      eax, ebx
jnz     short loc_37a1ee8e
or      edx, 40h
mov     [ecx+0eh], dx
movzx   edi, dx
and     esi, 80000000h
mov     al, 1
or      esi, ebx
jnz     short loc_37a1eea1
or      edi, 20h
mov     [ecx+0eh], di
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
or      eax, 331db659h
int     3
or      [edi], ebx
inc     esi
cmp     al, 81h
add     [esi], bl
mov     ds:0a19c6b2ah, esi
cwde
insd
adc     edi, [eax+2ah]
nop
and     al, 4ch
fst     st
and     eax, 6bh
out     4ah, al
push    cs
hlt
fst     qword ptr [eax+0ce60994h]
mov     bl, [esi]
pop     esp
rcl     ah, 0e5h
sub     al, 0cfh
std
cmpsd
mov     ch, 0d9h
lock mov eax, [esi+634fb8e4h]
test    eax, 0bfaa48a8h
dec     ebp
lodsb
push    edx
xor     bh, [ebx]
cmp     edi, 2ch
js      short loc_37a1eefc
jmp     short loc_37a1eecf
dec     esp
mov     bl, 5ch
test    ds:0fbb37802h, dh
scasd
loopne  loc_37a1ef87
push    ecx
cmp     [esi+edi*2-3a6cdc8fh], bl
int     3
jg      short near ptr loc_37a1ef91+2
iret
das
push    eax
and     al, 4bh
mov     ds:0e9f34247h, eax
out     dx, al
mov     bh, 3ah
cmp     eax, 61fa98abh
mov     ecx, [esi+1dh]
xchg    eax, edx
xchg    eax, ebx
inc     ebp
pop     ss
stosb
wait
mov     edi, 0b0d222f4h
loop    loc_37a1efb6
aam     0d9h
xchg    eax, esp
getsec
retn    5278h
cmc
dec     ebp
aas
mov     cl, 2dh
pop     esi
jns     short loc_37a1efd1
popa
mov     ch, 0c1h
iret
inc     eax
push    eax
sbb     al, bl
xchg    eax, edi
sub     edi, ebx
into
xchg    esp, eax
fst     qword ptr [edi-10h]
jnz     short loc_37a1f00a
push    eax
fistp   dword ptr [edx+5ah]
dec     esi
jnz     short loc_37a1efcc
retn
lea     ebp, [ebx-75673773h]
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
push    ebx
mov     ebx, [ebp+0ch]
xorps   xmm0, xmm0
push    esi
mov     esi, ecx
push    edi
movups  xmmword ptr [esi], xmm0
cmp     ebx, 0dh
ja      short loc_37a1f03e
mov     eax, 1c05h
mov     edi, esi
mov     [esi+0eh], ax
mov     al, 0dh
sub     al, bl
mov     [esi+0dh], al
jmp     short loc_37a1f05a
mov     ecx, [ebp+10h]
mov     eax, 0c05h
mov     [esi+0eh], ax
lea     eax, [ebx+1]
push    eax
mov     [esi], ebx
call    near ptr sub_37a140a0
mov     edi, eax
mov     [esi+8], edi
push    ebx
push    dword ptr [ebp+8]
push    edi
call    _memmove_0
add     esp, 0ch
mov     byte ptr [edi+ebx], 0
mov     eax, esi
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
adc     ebx, [edi]
mov     byte ptr [edi+43h], 0c4h
cmc
wait
pop     ss
mov     cl, 0e7h
xchg    eax, ebx
cmp     [ebx+esi*4], esi
push    ebp
jno     short loc_37a1f0ac
mov     ch, 0dfh
mov     edx, [ebx-3ecf6dd8h]
fstp    dword ptr [ebx-3eh]
cmp     eax, 0e6c125ah
insd
scasb
push    edx
mov     ebp, 4fbbacb3h
hlt
pop     es
test    al, 4bh
mov     ah, 0d8h
mov     ebp, [esi-5bh]
add     esi, 0ce4f562fh
xchg    esp, gs:[edx+esi*8+0dh]
xor     [eax], bl
mov     bh, dl
retf    158h
push    es
test    eax, 0c0db131dh
push    0dde6baf5h
test    byte ptr [ebx], 0a0h
int     3
scasb
mov     eax, 0e254b40dh
push    ds
in      al, 6dh
sub     al, 27h
push    0c92ce7a3h
jnp     short loc_37a1f18f
mov     dh, 0f1h
sbb     ds:44300bb5h[esi*4], ebx
aas
test    al, 0e3h
lock
enter   0fffff0f5h, 0f3h
xchg    eax, ebp
xor     ecx, [ecx+41h]
pop     ss
adc     eax, 9e4bfc05h
lea     ebx, [edx-710e1d05h]
mov     ah, 4eh
int     0f2h
jmp     near ptr 648cf11fh
mov     byte ptr [ecx+791bb8ch], 99h
dec     edi
fldenv  byte ptr [eax-74dcde70h]
push    esp
and     al, 0fh
popf
mov     edx, 0b40e878bh
mov     eax, 0d79a95b7h
mov     al, ds:627da2e6h
cdq
mov     dl, 7bh
pop     edi
call    fword ptr [ecx]
xor     [edx-4c8f9703h], edi
sub     al, 0cdh
sti
cmp     cl, bh
pop     esi
sbb     eax, 453ca572h
pop     ecx
sub     [ebp+47h], cl
adc     [edi-2c57f037h], edi
and     [ecx], cl
sar     byte ptr [eax], 0a5h
cli
js      short near ptr loc_37a1f280+1
push    ebx
sbb     [ebx+7bh], esp
mov     dl, 18h
inc     ecx
loopne  loc_37a1f1f7
movs    byte ptr es:[edi], byte ptr es:[esi]
mov     eax, 0db7465dfh
pop     edi
fldenv  byte ptr [ebx+60h]
into
shl     dword ptr [ebp+ebx*4-45h], 1
jno     short loc_37a1f23e
mov     al, 2eh
fcmovne st, st(5)
mov     dh, 0b7h
scasd
int     3
pusha
dec     ebx
ficom   dword ptr [ebx-38h]
add     ebp, ebx
mov     cl, 0e6h
inc     esi
bound   esp, [ebx+edx*4+31h]
pop     eax
xchg    eax, edi
push    ebp
icebp
add     [edx+50fcd570h], esi
adc     edi, esi
das
retf    0b0f2h
lodsd
jz      short loc_37a1f302
loop    loc_37a1f308
push    ecx
cmp     ebx, [ebx-172b7e6h]
mov     dh, 26h
xchg    eax, esi
leave
sal     edi, cl
mov     ds:0e6ae9213h, al
and     al, 0a2h
cmp     eax, 9481d8b5h
mov     ch, 0d1h
pop     edx
push    0fffffff9h
xor     al, 2
js      short loc_37a1f320
jno     short loc_37a1f26c
inc     ebp
jp      short loc_37a1f255
aad     0beh
popa
xchg    eax, edx
jmp     fword ptr [edx-56701d9ch]
aaa
xlat
fcom    dword ptr [edi-1]
fldcw   word ptr [ecx-60h]
adc     cl, [ebx+19h]
mov     [ebp+17h], ah
enter   4707h, 68h
fnsave  byte ptr [ebp-7d577e00h]
loopne  near ptr byte_37a1f393
in      al, dx
and     [edi+eax*2+17h], al
cmp     al, [edx+1ah]
scasb
retf
sti
cmp     edx, edi
cmovnb  edi, edx
sub     ebx, ecx
test    edi, edi
jnz     short loc_37a1f43b
push    ecx
call    j___free_base
xor     eax, eax
add     esp, 4
mov     [esi+8], eax
lea     ecx, [eax+ebx]
mov     eax, edi
pop     edi
mov     [esi+0ch], ecx
mov     [esi+10h], eax
pop     esi
pop     ebx
retn    4
push    edi
push    ecx
call    _realloc
add     esp, 8
mov     [esi+8], eax
lea     ecx, [eax+ebx]
add     eax, edi
pop     edi
mov     [esi+0ch], ecx
mov     [esi+10h], eax
pop     esi
pop     ebx
retn    4
mov     ds:0bb8a4477h, al
pop     ds
js      short loc_37a1f413
test    al, 28h
out     1ah, al
sar     esi, 1
or      [edx], ebx
xor     bh, al
cmc
mov     ds:326c9430h, eax
test    eax, 3fe727cah
outsb
jge     short near ptr loc_37a1f46c+1
retf
pop     ebp
jz      short loc_37a1f51a
int     8bh
test    ds:1095c4e7h, esi
stosb
mov     al, 3eh
pop     es
dec     esp
xor     ebp, [esi-78h]
nop
push    edi
add     ebp, [ecx+694dfff1h]
in      al, 0
sbb     [edi+33h], edx
pavgw   mm1, qword ptr ds:[ebp+2ff696dch]
inc     byte ptr [esi+ebx*2-4fh]
leave
mov     edx, [eax]
cwde
wait
adc     bh, [edx]
inc     ecx
cmp     [ebp+2490674ch], dl
mov     [eax+edx*8+4cb32154h], dl
push    es
mov     bl, 0b6h
test    [edx+20h], esi
pop     dword ptr [eax+27h]
mov     edx, es
enter   40bah, 70h
and     esp, [edx]
test    al, 32h
mov     ebx, 987ad0c0h
pop     edx
imul    eax, ds:88a73d59h, 992d7dfh
lea     ebx, [ecx+6ch]
pop     esp
test    [esi+283e47dfh], esi
push    esp
xor     esp, edx
mov     ecx, 4892e8eeh
mov     bl, 75h
inc     ebx
sub     bh, cl
bswap   ebp
retf
jnb     short near ptr loc_37a1f615+1
stosd
mov     al, 0e7h
and     ah, [edi+7fe97e9h]
xor     al, 8eh
pop     ebx
dec     esp
repne mov eax, 0c783ffcdh
and     al, 8dh
dec     eax
sub     esp, ebx
out     dx, eax
mov     ebp, 0ae509b0h
mov     ebp, 26e94f40h
repne wait
mov     ch, 0ech
and     al, 0a8h
inc     esp
xchg    eax, edi
enter   5dbh, 0ech
and     cl, 0cah
adc     esp, [edi+11h]
outsd
mov     ebp, [ecx]
jns     short loc_37a1f6a9
lodsd
mov     word ptr [esp+edi*8], fs
ht jz   short near ptr loc_37a1f6aa+2
mov     cl, 81h
sbb     dword ptr [ebp-61h], 5eh
outsd
pop     edx
or      eax, 742a30aeh
dec     esp
imul    esp, [ecx], 6fh
loop    near ptr loc_37a1f61f+4
pop     edx
outsb
and     ah, [ecx]
jmp     far ptr 347eh:0d1548fdh
push    es
fdiv    dword ptr [eax+esi*4+0]
aaa
jz      short loc_37a1f6bb
push    4
push    esi
call    sub_37ab1b25
add     esp, 8
mov     eax, esi
pop     esi
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37adf3aa
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 10h
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     [ebp-10h], ebx
lea     eax, [ebx+4]
mov     dword ptr [ebp-4], 0
mov     [ebp-14h], eax
mov     dword ptr [eax], offset dword_37b034f0
push    50h
mov     dword ptr [eax], offset dword_37b034c0
lea     esi, [ebx+10h]
lea     eax, [esi+100h]
mov     dword ptr [ebx], offset dword_37b034e4
push    0
push    eax
call    _memset
push    100h
mov     dword ptr [esi+150h], 0
mov     byte ptr [esi+154h], 0
push    0
push    esi
mov     dword ptr [esi+158h], 0
mov     dword ptr [esi+15ch], 0
mov     dword ptr [esi+160h], 0
call    _memset
mov     byte ptr [ebp-4], 2
mov     edi, [ebp+8]
push    0
mov     [ebx+1e0h], edi
call    __time64
xor     eax, ebx
push    eax
call    _srand
mov     eax, [edi+64h]
add     esp, 20h
sub     eax, [edi+60h]
sar     eax, 2
mov     dword_37b73328, ebx
cmp     eax, 1
jbe     loc_37a1f84e
push    20h
call    ??2@yapaxi@z
mov     ebx, eax
add     esp, 4
mov     [ebp-1ch], ebx
mov     edx, dword_37b731f8
mov     [ebp-18h], edx
mov     dword ptr [ebx+4], offset off_37b03508
mov     esi, [ebp-14h]
mov     dword ptr [ebx], offset dword_37b0355c
mov     dword ptr [ebx+4], offset dword_37b03544
mov     dword ptr [ebx+8], 0ffffffffh
mov     dword ptr [ebx+0ch], 0
mov     [ebx+10h], esi
mov     dword ptr [ebx+14h], 0
mov     dword ptr [ebx+18h], 0
mov     dword ptr [ebx+1ch], 0
mov     byte ptr [ebp-4], 6
mov     eax, [edi+64h]
mov     ecx, eax
mov     esi, [edi+60h]
sub     ecx, esi
add     ecx, 3
xor     edi, edi
shr     ecx, 2
cmp     esi, eax
cmova   ecx, edi
mov     [ebp+8], ecx
test    ecx, ecx
jz      short loc_37a1f826
nop
push    edx
push    dword ptr [esi]
mov     ecx, ebx
call    sub_37a20db0
mov     edx, [ebp-18h]
lea     esi, [esi+4]
inc     edi
cmp     edi, [ebp+8]
jnz     short loc_37a1f810
mov     ecx, dword_37b684c0
test    ecx, ecx
jle     short loc_37a1f840
mov     eax, [ebx+18h]
sub     eax, [ebx+14h]
sar     eax, 2
cmp     ecx, eax
jge     short loc_37a1f840
mov     [ebx+0ch], ecx
mov     byte ptr [ebp-4], 2
mov     eax, [ebp-10h]
mov     [eax+8], ebx
mov     ebx, eax
jmp     short loc_37a1f87c
push    14h
call    ??2@yapaxi@z
add     esp, 4
mov     [ebp+8], eax
mov     byte ptr [ebp-4], 7
lea     esi, [ebx+4]
mov     ecx, [edi+60h]
push    esi
push    dword_37b731f8
push    dword ptr [ecx]
mov     ecx, eax
call    sub_37a20ff0
mov     byte ptr [ebp-4], 2
mov     [ebx+8], eax
mov     edx, dword_37b734d0
lea     esi, [ebx+180h]
mov     [esi], ebx
test    edx, edx
jnz     short loc_37a1f8aa
call    sub_37a94db0
test    eax, eax
jz      short loc_37a1f89b
xor     edx, edx
jmp     short loc_37a1f8aa
mov     dword_37b734d0, offset dword_37b734d8
mov     edx, offset dword_37b734d8
push    0
mov     [esi+4], edx
lea     ecx, [esi+10h]
mov     dword ptr [esi+8], 0dh
lea     eax, [edx+8]
mov     dword ptr [esi+2ch], 20h
mov     [ecx], eax
mov     eax, [edx+0ch]
push    3e8h
mov     [esi+14h], eax
push    0
mov     [eax], ecx
push    3e8h
mov     [edx+0ch], ecx
push    offset dword_37a1fcf0
push    esi
mov     dword ptr [esi+18h], 0ffffffffh
mov     dword ptr [esi+58h], 0
mov     dword ptr [esi+48h], 0
mov     dword ptr [esi+4ch], 0
call    sub_37a995c0
mov     ecx, [ebp-0ch]
add     esp, 18h
mov     eax, ebx
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ebx
push    ebp
push    esi
mov     esi, ecx
push    edi
mov     ecx, [esi+4]
mov     eax, [ecx]
mov     eax, [eax+4]
call    eax
test    al, al
jnz     loc_37a1fb67
add     esi, 0ch
mov     ecx, esi
call    loc_37a16870
add     dword_37b731cc, eax
push    100h
push    0
push    esi
mov     byte ptr [esi+154h], 0
call    _memset
add     esp, 0ch
mov     dword ptr [esi+150h], 0
add     dword_37b731d0, 1
mov     ecx, offset dword_37b732bc
mov     eax, [esi+158h]
adc     dword_37b731d4, 0
mov     [esi+15ch], eax
mov     eax, 1
xchg    eax, [ecx]
mov     ebp, offset dword_37b73330
nop     word ptr [eax+eax+00h]
mov     esi, dword_37b73330
mov     ebx, esi
mov     edi, dword_37b73334
add     ebx, 1
mov     ecx, edi
mov     eax, esi
adc     ecx, 0
mov     edx, edi
lock cmpxchg8b qword ptr [ebp+0]
cmp     esi, eax
jnz     short loc_37a1fb40
cmp     edi, edx
jnz     short loc_37a1fb40
pop     edi
pop     esi
pop     ebp
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 14h
cmp     dword ptr [ebp+14h], 0
push    ebx
push    esi
push    edi
mov     [esp+14h], ecx
jz      short loc_37a1fbad
add     dword_37b731e0, 1
adc     dword_37b731e4, 0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
mov     eax, [ebp+10h]
add     dword_37b731d8, 1
adc     dword_37b731dc, 0
mov     eax, [eax+8]
mov     [esp+10h], eax
mov     dword ptr [esp+18h], offset dword_37b733c8
nop     dword ptr [eax]
mov     esi, dword_37b733c8
mov     ebx, esi
mov     edi, dword_37b733cc
add     ebx, eax
mov     ecx, edi
mov     [esp+1ch], edi
adc     ecx, 0
mov     eax, esi
mov     edx, edi
mov     edi, [esp+18h]
lock cmpxchg8b qword ptr [edi]
mov     edi, [esp+1ch]
cmp     esi, eax
mov     eax, [esp+10h]
jnz     short loc_37a1fbd0
cmp     edi, edx
jnz     short loc_37a1fbd0
mov     ebx, [ebp+10h]
mov     edx, [esp+14h]
mov     ecx, [ebx+14h]
mov     eax, [ebx+10h]
cmp     ecx, [edx+158h]
jb      short loc_37a1fc53
ja      short loc_37a1fc24
cmp     eax, [edx+154h]
jbe     short loc_37a1fc53
push    dword ptr [esp+1ch]
mov     [edx+158h], ecx
lea     ecx, [edx+10ch]
mov     [edx+154h], eax
lea     eax, [edx+15ch]
push    ecx
push    eax
mov     ecx, 0ah
call    sub_37a16d30
mov     edx, [esp+20h]
add     esp, 0ch
cmp     dword ptr [ebx+1ch], 0
mov     eax, [ebx+18h]
ja      short loc_37a1fc66
cmp     eax, 0ffffh
movzx   eax, ax
jbe     short loc_37a1fc6b
mov     eax, 0ffffh
movzx   eax, ax
lea     ecx, [edx+164h]
mov     [esp+1ch], eax
lea     eax, [esp+1ch]
push    eax
call    sub_37a16a30
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     edx, dword_37b734d0
push    esi
mov     esi, ecx
test    edx, edx
jnz     short loc_37a1fcd1
call    sub_37a94db0
test    eax, eax
jz      short loc_37a1fcc2
mov     ecx, [esi+8]
xor     edx, edx
push    dword ptr [edx+24h]
mov     eax, [ecx]
push    dword ptr [edx+20h]
call    dword ptr [eax+1ch]
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     dword_37b734d0, offset dword_37b734d8
mov     edx, offset dword_37b734d8
mov     ecx, [esi+8]
push    dword ptr [edx+24h]
push    dword ptr [edx+20h]
mov     eax, [ecx]
call    dword ptr [eax+1ch]
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     word ptr [ecx], 0
mov     eax, 0d05h
mov     [ecx+8], ax
mov     eax, ecx
mov     dword ptr [ecx+4], 0
mov     dword ptr [ecx+0ch], 0ffffffffh
mov     dword ptr [ecx+10h], 0ffffffffh
mov     dword ptr [ecx+14h], 0
mov     dword ptr [ecx+18h], 0
mov     dword ptr [ecx+1ch], 0
mov     dword ptr [ecx+20h], 0
mov     dword ptr [ecx+24h], 0
mov     dword ptr [ecx+28h], 0
mov     dword ptr [ecx+2ch], 0
mov     dword ptr [ecx+30h], 0
mov     dword ptr [ecx+34h], 0
retn
sub     esp, 0ch
mov     edx, [ecx+0ch]
mov     [esp+4], edx
push    esi
mov     esi, [esp+14h]
mov     [esp+0ch], esi
cli
push    dword ptr [ebx+edi+33h]
shl     byte ptr [esi+0fh], 1fh
inc     esp
cmp     ds:dword_37afea38[eax], edx
jnz     short loc_37a1ff10
cmp     ds:dword_37afea3c[eax], esi
jz      short loc_37a1ff21
add     eax, 10h
cmp     eax, 0f0h
jb      short loc_37a1ff00
pop     esi
add     esp, 0ch
retn    4
cmp     [ecx+10h], esi
jz      short loc_37a1ff33
lea     eax, [esp+8]
add     ecx, 14h
push    eax
call    sub_37a20180
pop     esi
add     esp, 0ch
retn    4
test    al, 4ch
jl      short loc_37a1fef5
nop
adc     ah, [ecx+ebx*4]
cdq
dec     edx
cld
jns     short loc_37a1ff94
sub     ch, dh
cmp     [edi-520bc9bfh], ebx
lahf
push    ebp
xor     ch, [edi+49h]
and     eax, 98d9ea82h
sub     byte ptr [esi-3458746eh], 0cbh
add     [ebp+2dh], dh
rep test ecx, esp
stosd
rcr     dword ptr [ebp-5ah], cl
leave
adc     eax, 236c4b3ch
clc
pop     edi
and     [ebp-2eh], eax
mov     word ptr [ecx], fs
jno     short loc_37a1ff76
pop     esp
add     eax, 0cc16dd28h
cmp     dword ptr [esi-5bh], 6bh
and     edi, esi
int     0ddh
xor     [ecx], eax
add     ecx, [edx+4ch]
iret
pop     es
shl     byte ptr [eax+925ed68h], 1
dec     edi
rcl     dword ptr [ecx], cl
fcomp   dword ptr [edi-58h]
xchg    eax, ebx
or      [edi+18ba9cfbh], ebx
lodsd
mov     esi, 0f83a075bh
push    8530250h
mov     al, ds:991e97beh
retn
push    ebx
push    esi
push    edi
mov     edi, ecx
lea     edx, [edi+0ch]
mov     eax, [edi+14h]
mov     [edi+18h], eax
mov     esi, [edx]
cmp     esi, 0ffffffffh
jz      loc_37a20174
xor     eax, eax
nop     dword ptr [eax+eax+00h]
cmp     ds:dword_37afea38[eax], esi
jnz     short loc_37a20103
mov     ecx, ds:dword_37afea3c[eax]
cmp     ecx, [edx+4]
jz      short loc_37a20111
add     eax, 10h
cmp     eax, 0f0h
jb      short loc_37a200f0
pop     edi
pop     esi
pop     ebx
retn
push    edx
lea     ecx, [edi+14h]
call    sub_37a20180
push    8
mov     ecx, edi
call    loc_37a1fee0
push    1
mov     ecx, edi
call    loc_37a1fee0
push    0
mov     ecx, edi
call    loc_37a1fee0
push    3
mov     ecx, edi
call    loc_37a1fee0
push    2
mov     ecx, edi
call    loc_37a1fee0
push    4
mov     ecx, edi
call    loc_37a1fee0
push    5
mov     ecx, edi
call    loc_37a1fee0
push    6
mov     ecx, edi
call    loc_37a1fee0
push    7
mov     ecx, edi
call    loc_37a1fee0
push    0ffffffffh
mov     ecx, edi
call    loc_37a1fee0
pop     edi
pop     esi
pop     ebx
retn
push    ecx
push    ebx
push    ebp
push    esi
mov     esi, ecx
push    edi
mov     ecx, [esi+8]
mov     edi, [esi+4]
cmp     ecx, edi
jz      short loc_37a201ab
mov     edx, [esp+14h+arg_0]
mov     eax, [edx]
mov     [edi], eax
mov     eax, [edx+4]
mov     [edi+4], eax
add     dword ptr [esi+4], 8
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn    4
mov     eax, [esi]
sub     edi, eax
sar     edi, 3
cmp     edi, 1fffffffh
jz      loc_37a202a9
sub     ecx, eax
lea     ebp, [edi+1]
sar     ecx, 3
mov     eax, 1fffffffh
mov     edx, ecx
shr     edx, 1
sub     eax, edx
cmp     ecx, eax
jbe     short loc_37a201d9
mov     eax, ebp
jmp     short loc_37a201e1
lea     eax, [edx+ecx]
cmp     eax, ebp
cmovb   eax, ebp
lea     ecx, ds:0[eax*8]
mov     [esp+14h+var_4], ecx
cmp     eax, 1fffffffh
jbe     short loc_37a201f8
or      ecx, 0ffffffffh
jmp     short loc_37a20200
cmp     ecx, 1000h
jb      short loc_37a20227
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_37a202ae
lea     ebx, [eax+23h]
and     ebx, 0ffffffe0h
mov     [ebx-4], eax
jmp     short loc_37a2023a
test    ecx, ecx
jz      short loc_37a20238
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     ebx, eax
jmp     short loc_37a2023a
xor     ebx, ebx
mov     ecx, [esp+14h+arg_0]
push    ecx
push    [esp+18h+arg_0]
mov     eax, [ecx]
mov     [ebx+edi*8], eax
mov     eax, [ecx+4]
push    ecx
mov     [ebx+edi*8+4], eax
mov     edx, [esi+4]
mov     ecx, [esi]
push    ebx
call    sub_37a1da50
mov     eax, [esi]
add     esp, 10h
test    eax, eax
jz      short loc_37a20290
mov     ecx, [esi+8]
sub     ecx, eax
and     ecx, 0fffffff8h
cmp     ecx, 1000h
jb      short loc_37a20286
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a202ae
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
lea     eax, [ebx+ebp*8]
mov     [esi], ebx
mov     [esi+4], eax
mov     eax, [esp+14h+var_4]
add     eax, ebx
pop     edi
mov     [esi+8], eax
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn    4
call    sub_37a164c0
call    __invalid_parameter_noinfo_noreturn
test    [esp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_37b03508
jz      short loc_37a202fb
push    4
push    esi
call    sub_37ab1b25
add     esp, 8
mov     eax, esi
pop     esi
retn    4
mov     dword ptr [esi], offset dword_37b03520
jz      short loc_37a2034b
push    4
push    esi
call    sub_37ab1b25
add     esp, 8
mov     eax, esi
pop     esi
retn    4
mov     eax, [ecx+8]
shr     eax, 1fh
xor     al, 1
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset nullsub_5
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 8
push    ebx
push    esi
mov     esi, ecx
mov     [ebp-14h], esi
mov     dword ptr [esi], offset dword_37b0355c
mov     dword ptr [esi+4], offset dword_37b03544
mov     eax, [esi+18h]
mov     ebx, [esi+14h]
mov     [ebp-10h], eax
cmp     ebx, eax
jz      loc_37a204e3
push    edi
mov     esi, [ebx]
test    esi, esi
jz      loc_37a204d4
mov     dword ptr [ebp-4], 0
mov     ecx, esi
mov     dword ptr [esi+10180h], 0
mov     dword ptr [esi+10184h], 0
mov     dword ptr [esi+10050h], 0ffffffffh
mov     dword ptr [esi+10054h], 0ffffffffh
call    near ptr sub_37a1a920
lea     ecx, [esi+10290h]
xor     edx, edx
call    near ptr loc_37a9683c+4
push    dword ptr [esi+10040h]
call    j___free_base
mov     eax, dword_37b734d0
add     esp, 4
test    eax, eax
jnz     short loc_37a20451
call    sub_37a94db0
test    eax, eax
jz      short loc_37a20442
xor     eax, eax
jmp     short loc_37a20451
mov     dword_37b734d0, offset dword_37b734d8
mov     eax, offset dword_37b734d8
push    1
push    eax
call    loc_37a954e0
push    dword ptr [esi+101c4h]
call    j___free_base
push    dword ptr [esi+101c0h]
call    j___free_base
push    dword ptr [esi+101bch]
call    j___free_base
push    dword ptr [esi+101b8h]
call    j___free_base
push    dword ptr [esi+101b4h]
call    j___free_base
push    dword ptr [esi+101b0h]
call    j___free_base
add     esp, 20h
lea     ecx, [esi+101a4h]
call    sub_37a1cad0
lea     ecx, [esi+10174h]
call    sub_37a1c940
push    40h
push    dword ptr [esi+10174h]
call    sub_37ab1b25
push    esi
mov     dword ptr [ebp-4], 0ffffffffh
call    j_unknown_libname_64
mov     eax, [ebp-10h]
add     esp, 0ch
add     ebx, 4
cmp     ebx, eax
jnz     loc_37a203d1
mov     esi, [ebp-14h]
pop     edi
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_37a2052b
mov     ecx, [esi+1ch]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_37a2050c
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a20548
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
mov     dword ptr [esi+14h], 0
add     esp, 8
mov     dword ptr [esi+18h], 0
mov     dword ptr [esi+1ch], 0
mov     ecx, [ebp-0ch]
mov     dword ptr [esi+4], offset off_37b03508
mov     dword ptr [esi], offset dword_37b03520
pop     esi
pop     ebx
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
call    __invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
push    offset nullsub_5
push    eax
mov     large fs:0, esp
push    esi
push    edi
mov     edi, ecx
mov     [ebp+var_4], 0
mov     dword ptr [edi+10180h], 0
mov     dword ptr [edi+10184h], 0
mov     dword ptr [edi+10050h], 0ffffffffh
mov     dword ptr [edi+10054h], 0ffffffffh
call    near ptr sub_37a1a920
lea     ecx, [edi+10290h]
xor     edx, edx
call    near ptr loc_37a9683c+4
push    dword ptr [edi+10040h]
call    j___free_base
mov     eax, dword_37b734d0
add     esp, 4
test    eax, eax
jnz     short loc_37a205e0
call    sub_37a94db0
test    eax, eax
jz      short loc_37a205d1
xor     eax, eax
jmp     short loc_37a205e0
mov     dword_37b734d0, offset dword_37b734d8
mov     eax, offset dword_37b734d8
push    1
push    eax
call    loc_37a954e0
push    dword ptr [edi+101c4h]
call    j___free_base
push    dword ptr [edi+101c0h]
call    j___free_base
push    dword ptr [edi+101bch]
call    j___free_base
push    dword ptr [edi+101b8h]
call    j___free_base
push    dword ptr [edi+101b4h]
call    j___free_base
push    dword ptr [edi+101b0h]
call    j___free_base
add     esp, 20h
lea     ecx, [edi+101a4h]
call    sub_37a1cad0
lea     ecx, [edi+10174h]
call    sub_37a1c940
push    40h
push    dword ptr [edi+10174h]
call    sub_37ab1b25
push    edi
call    j_unknown_libname_64
mov     ecx, [ebp+var_c]
add     esp, 0ch
mov     eax, edi
mov     large fs:0, ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     edx, [ecx+8]
push    ebx
push    ebp
push    esi
push    edi
test    edx, edx
js      loc_37a207c8
mov     eax, [ecx+14h]
mov     edi, [eax+edx*4]
mov     edx, [ecx+10h]
lea     esi, [edi+10060h]
mov     eax, [edx]
mov     ebx, [eax+8]
cmp     eax, offset dword_37b034c0
jnz     loc_37a207f4
mov     eax, [esi+10h]
push    0ffffffffh
mov     [edx+15ch], eax
push    dword_37b73218
call    ds:waitforsingleobject
test    eax, eax
jnz     short loc_37a207d0
push    esi
mov     ecx, offset dword_37b698a0
call    sub_37a1a640
push    0
push    1
push    dword_37b73218
call    ds:releasesemaphore
test    eax, eax
jz      short loc_37a207e2
mov     ebp, offset dword_37b73330
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
mov     esi, dword_37b73330
mov     ebx, esi
mov     edi, dword_37b73334
add     ebx, 1
mov     ecx, edi
mov     eax, esi
adc     ecx, 0
mov     edx, edi
lock cmpxchg8b qword ptr [ebp+0]
cmp     esi, eax
jnz     short loc_37a20790
cmp     edi, edx
jnz     short loc_37a20790
xor     eax, eax
mov     ecx, offset dword_37b732bc
xchg    eax, [ecx]
pop     edi
pop     esi
pop     ebp
pop     ebx
mov     esp, ebp
pop     ebp
retn
pop     edi
pop     esi
pop     ebp
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    ds:getlasterror
mov     edx, offset awaitforsingleo
mov     ecx, eax
call    sub_37a958b0
call    ds:getlasterror
mov     edx, offset dword_37b693bc
mov     ecx, eax
call    sub_37a958b0
push    esi
push    edi
push    ecx
mov     ecx, edx
call    ebx
jmp     short loc_37a207c8
push    esi
mov     esi, ecx
push    edi
xor     edi, edi
mov     eax, [esi+18h]
sub     eax, [esi+14h]
sar     eax, 2
test    eax, eax
jz      short loc_37a20872
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
mov     eax, [esi+14h]
mov     ecx, [eax+edi*4]
mov     dword ptr [ecx+10180h], 0
mov     dword ptr [ecx+10184h], 0
mov     dword ptr [ecx+10050h], 0ffffffffh
mov     dword ptr [ecx+10054h], 0ffffffffh
call    near ptr sub_37a1a920
mov     eax, [esi+18h]
inc     edi
sub     eax, [esi+14h]
sar     eax, 2
cmp     edi, eax
jb      short loc_37a20820
pop     edi
mov     dword ptr [esi+0ch], 0
mov     dword ptr [esi+8], 0ffffffffh
pop     esi
retn
mov     [esi+0ch], edi
pop     edi
mov     dword ptr [esi+8], 0ffffffffh
pop     esi
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a20db0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
push    ebx
push    esi
push    edi
push    10h
push    102f0h
mov     ebx, ecx
call    sub_37ac1ec7
mov     esi, eax
add     esp, 8
mov     [ebp+var_10], esi
mov     [ebp+var_4], 0
test    esi, esi
jz      short loc_37a20e11
mov     edx, [ebx+18h]
lea     eax, [ebx+4]
sub     edx, [ebx+14h]
mov     ecx, ebx
sar     edx, 2
neg     ecx
sbb     ecx, ecx
and     ecx, eax
push    ecx
push    [ebp+source]
mov     ecx, esi
push    edx
call    sub_37a199d0
mov     esi, eax
jmp     short loc_37a20e13
xor     esi, esi
mov     edi, [ebp+arg_0]
mov     [ebp+var_4], 0ffffffffh
mov     [ebp+var_10], esi
test    edi, edi
jz      loc_37a20f9e
cmp     dword ptr [edi+24h], 0
jz      loc_37a20f9e
cmp     word ptr [edi+8], 0
jbe     loc_37a20f9e
movzx   eax, byte ptr [edi]
lea     ecx, [esi+101a4h]
mov     [esi+10190h], al
movzx   eax, byte ptr [edi+1]
mov     [esi+10191h], al
mov     eax, [edi+4]
mov     [esi+10194h], eax
mov     ax, [edi+8]
mov     [esi+10198h], ax
mov     eax, [edi+0ch]
mov     [esi+1019ch], eax
mov     eax, [edi+10h]
mov     [esi+101a0h], eax
lea     eax, [edi+14h]
cmp     ecx, eax
jz      short loc_37a20e90
push    [ebp+source]
push    dword ptr [eax+4]
push    dword ptr [eax]
call    sub_37a1d230
mov     eax, [edi+20h]
push    dword ptr [esi+101b0h]
mov     [ebp+source], eax
call    j___free_base
mov     eax, [ebp+source]
add     esp, 4
test    eax, eax
jz      short loc_37a20eb6
push    eax
call    __strdup
add     esp, 4
jmp     short loc_37a20eb8
xor     eax, eax
mov     [esi+101b0h], eax
mov     eax, [edi+24h]
push    dword ptr [esi+101b4h]
mov     [ebp+source], eax
call    j___free_base
mov     eax, [ebp+source]
add     esp, 4
test    eax, eax
jz      short loc_37a20ee4
push    eax
call    __strdup
add     esp, 4
jmp     short loc_37a20ee6
xor     eax, eax
mov     [esi+101b4h], eax
mov     eax, [edi+28h]
push    dword ptr [esi+101b8h]
mov     [ebp+source], eax
call    j___free_base
mov     eax, [ebp+source]
add     esp, 4
test    eax, eax
jz      short loc_37a20f12
push    eax
call    __strdup
add     esp, 4
jmp     short loc_37a20f14
xor     eax, eax
mov     [esi+101b8h], eax
mov     eax, [edi+2ch]
push    dword ptr [esi+101bch]
mov     [ebp+source], eax
call    j___free_base
mov     eax, [ebp+source]
add     esp, 4
test    eax, eax
jz      short loc_37a20f40
push    eax
call    __strdup
add     esp, 4
jmp     short loc_37a20f42
xor     eax, eax
mov     [esi+101bch], eax
mov     eax, [edi+30h]
push    dword ptr [esi+101c0h]
mov     [ebp+source], eax
call    j___free_base
mov     eax, [ebp+source]
add     esp, 4
test    eax, eax
jz      short loc_37a20f6e
push    eax
call    __strdup
add     esp, 4
jmp     short loc_37a20f70
xor     eax, eax
mov     [esi+101c0h], eax
push    dword ptr [esi+101c4h]
mov     edi, [edi+34h]
call    j___free_base
add     esp, 4
test    edi, edi
jz      short loc_37a20f96
push    edi
call    __strdup
add     esp, 4
jmp     short loc_37a20f98
xor     eax, eax
mov     [esi+101c4h], eax
mov     eax, dword_37b731f0
lea     ecx, [ebx+14h]
imul    eax, [eax+58h], 3e8h
mov     [esi+1004ch], eax
lea     eax, [ebp+var_10]
push    eax
call    sub_37a1c750
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
pop     ebx
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37adf40b
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
push    ebx
push    esi
mov     ebx, ecx
push    edi
mov     [ebp+var_10], ebx
lea     esi, [ebx+4]
mov     [ebp+var_4], 0
mov     dword ptr [esi], offset off_37b03508
mov     eax, [ebp+source]
push    10h
push    102f0h
mov     dword ptr [ebx], offset off_37b03580
mov     dword ptr [esi], offset dword_37b035a4
mov     byte ptr [ebx+8], 0
mov     [ebx+10h], eax
call    sub_37ac1ec7
add     esp, 8
mov     [ebp+source], eax
mov     byte ptr [ebp+var_4], 2
test    eax, eax
jz      short loc_37a21062
push    esi
push    [ebp+arg_4]
mov     ecx, eax
push    0
call    sub_37a199d0
mov     esi, eax
jmp     short loc_37a21064
xor     esi, esi
mov     edi, [ebp+arg_0]
mov     byte ptr [ebp+var_4], 1
mov     [ebx+0ch], esi
test    edi, edi
jz      loc_37a211ef
cmp     dword ptr [edi+24h], 0
jz      loc_37a211ef
cmp     word ptr [edi+8], 0
jbe     loc_37a211ef
movzx   eax, byte ptr [edi]
lea     ecx, [esi+101a4h]
mov     [esi+10190h], al
movzx   eax, byte ptr [edi+1]
mov     [esi+10191h], al
mov     eax, [edi+4]
mov     [esi+10194h], eax
mov     ax, [edi+8]
mov     [esi+10198h], ax
mov     eax, [edi+0ch]
mov     [esi+1019ch], eax
mov     eax, [edi+10h]
mov     [esi+101a0h], eax
lea     eax, [edi+14h]
cmp     ecx, eax
jz      short loc_37a210de
push    [ebp+source]
push    dword ptr [eax+4]
push    dword ptr [eax]
call    sub_37a1d230
mov     eax, [edi+20h]
push    dword ptr [esi+101b0h]
mov     [ebp+source], eax
call    j___free_base
mov     eax, [ebp+source]
add     esp, 4
test    eax, eax
jz      short loc_37a21104
push    eax
call    __strdup
add     esp, 4
jmp     short loc_37a21106
xor     eax, eax
mov     [esi+101b0h], eax
mov     eax, [edi+24h]
push    dword ptr [esi+101b4h]
mov     [ebp+source], eax
call    j___free_base
mov     eax, [ebp+source]
add     esp, 4
test    eax, eax
jz      short loc_37a21132
push    eax
call    __strdup
add     esp, 4
jmp     short loc_37a21134
xor     eax, eax
mov     [esi+101b4h], eax
mov     eax, [edi+28h]
push    dword ptr [esi+101b8h]
mov     [ebp+source], eax
call    j___free_base
mov     eax, [ebp+source]
add     esp, 4
test    eax, eax
jz      short loc_37a21160
push    eax
call    __strdup
add     esp, 4
jmp     short loc_37a21162
xor     eax, eax
mov     [esi+101b8h], eax
mov     eax, [edi+2ch]
push    dword ptr [esi+101bch]
mov     [ebp+source], eax
call    j___free_base
mov     eax, [ebp+source]
add     esp, 4
test    eax, eax
jz      short loc_37a2118e
push    eax
call    __strdup
add     esp, 4
jmp     short loc_37a21190
xor     eax, eax
mov     [esi+101bch], eax
mov     eax, [edi+30h]
push    dword ptr [esi+101c0h]
mov     [ebp+source], eax
call    j___free_base
mov     eax, [ebp+source]
add     esp, 4
test    eax, eax
jz      short loc_37a211bc
push    eax
call    __strdup
add     esp, 4
jmp     short loc_37a211be
xor     eax, eax
mov     [esi+101c0h], eax
push    dword ptr [esi+101c4h]
mov     edi, [edi+34h]
call    j___free_base
add     esp, 4
test    edi, edi
jz      short loc_37a211e4
push    edi
call    __strdup
add     esp, 4
jmp     short loc_37a211e6
xor     eax, eax
mov     [esi+101c4h], eax
mov     esi, [ebx+0ch]
mov     eax, dword_37b731f0
mov     ecx, [ebp+var_c]
pop     edi
imul    eax, [eax+58h], 3e8h
mov     [esi+1004ch], eax
mov     eax, ebx
pop     esi
pop     ebx
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    0ch
push    esi
mov     esi, ecx
mov     ecx, [esi+0ch]
mov     dword ptr [esi], offset off_37b03580
mov     dword ptr [esi+4], offset dword_37b035a4
test    ecx, ecx
jz      short loc_37a2123d
push    ecx
call    sub_37a20550
test    [esp+4+arg_0], 1
mov     dword ptr [esi+4], offset off_37b03508
mov     dword ptr [esi], offset dword_37b03520
jz      short loc_37a2125c
push    14h
push    esi
call    sub_37ab1b25
add     esp, 8
mov     eax, esi
pop     esi
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     ecx, [ecx+0ch]
push    esi
mov     edx, [ecx+10180h]
mov     eax, edx
mov     esi, [ecx+10184h]
or      eax, esi
jz      short loc_37a213fb
cmp     [ebp+arg_4], esi
jb      short loc_37a213fb
ja      short loc_37a213c9
cmp     [ebp+arg_0], edx
jb      short loc_37a213fb
mov     eax, [ecx+1016ch]
cmp     eax, 3
jz      short loc_37a213f6
cmp     eax, 5
jz      short loc_37a213f6
cmp     eax, 4
jz      short loc_37a213f6
cmp     eax, 2
jz      short loc_37a213f6
cmp     eax, 1
jnz     short loc_37a213fb
push    0
call    sub_37a19c80
pop     esi
mov     esp, ebp
pop     ebp
retn    8
call    near ptr sub_37a1a920
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     eax, ecx
cmp     byte ptr [eax+4], 0
jz      short loc_37a21428
mov     ecx, [eax+0ch]
mov     byte ptr [eax+4], 0
add     eax, 0fffffffch
push    eax
mov     edx, [ecx]
call    dword ptr [edx+0ch]
mov     eax, dword_37b731f0
mov     eax, [eax+54h]
cmp     eax, [esp+8]
jge     short loc_37a2146d
mov     eax, dword_37b734d0
test    eax, eax
jnz     short loc_37a21463
call    sub_37a94db0
test    eax, eax
jz      short loc_37a21454
xor     eax, eax
mov     dword ptr [eax+18h], 1
retn    8
mov     dword_37b734d0, offset dword_37b734d8
mov     eax, offset dword_37b734d8
mov     dword ptr [eax+18h], 1
retn    8
mov     ecx, [esp+4]
push    0ffffffffh
call    sub_37a19c80
retn    8
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
lea     edx, [ecx-4]
mov     ecx, [ecx+0ch]
push    ebx
mov     eax, [ecx]
push    esi
push    edi
mov     esi, [eax+8]
cmp     eax, offset dword_37b034c0
jnz     loc_37a21561
mov     esi, [ebp+0ch]
push    0ffffffffh
mov     eax, [esi+10h]
mov     [ecx+15ch], eax
push    dword_37b73218
call    ds:waitforsingleobject
test    eax, eax
jnz     loc_37a2153d
push    esi
mov     ecx, offset dword_37b698a0
call    sub_37a1a640
push    0
push    1
push    dword_37b73218
call    ds:releasesemaphore
test    eax, eax
jz      short loc_37a2154f
mov     dword ptr [esp+10h], offset dword_37b73330
nop     dword ptr [eax+eax+00h]
mov     esi, dword_37b73330
mov     ebx, esi
mov     edi, dword_37b73334
add     ebx, 1
mov     ecx, edi
mov     [esp+14h], edi
adc     ecx, 0
mov     eax, esi
mov     edx, edi
mov     edi, [esp+10h]
lock cmpxchg8b qword ptr [edi]
mov     edi, [esp+14h]
cmp     esi, eax
jnz     short loc_37a214f0
cmp     edi, edx
jnz     short loc_37a214f0
xor     eax, eax
mov     ecx, offset dword_37b732bc
xchg    eax, [ecx]
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
call    ds:getlasterror
mov     edx, offset awaitforsingleo
mov     ecx, eax
call    sub_37a958b0
call    ds:getlasterror
mov     edx, offset dword_37b693bc
mov     ecx, eax
call    sub_37a958b0
push    dword ptr [ebp+0ch]
push    dword ptr [ebp+8]
push    edx
call    esi
jmp     short loc_37a21534
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    [ebp+arg_4]
push    0
push    edx
push    ecx
call    sub_37a16790
push    dword ptr [eax+4]
push    dword ptr [eax]
call    sub_37abc5c0
add     esp, 18h
mov     esp, ebp
pop     ebp
retn
push    ecx
mov     edx, [esp+4+arg_4]
lea     eax, [esp+4+arg_8]
push    eax
push    ecx
mov     ecx, [esp+0ch+arg_0]
call    sub_37a215a0
add     esp, 8
pop     ecx
retn
mov     eax, dword_37b73388
retn
push    esi
mov     esi, ecx
mov     eax, [esi+18h]
test    eax, eax
jz      short loc_37a2182f
mov     ecx, [esi+20h]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_37a21810
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      loc_37a2188f
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
mov     dword ptr [esi+18h], 0
add     esp, 8
mov     dword ptr [esi+1ch], 0
mov     dword ptr [esi+20h], 0
push    edi
mov     edi, [esi+0ch]
test    edi, edi
jz      short loc_37a2188c
mov     ecx, [esi+14h]
mov     eax, 2aaaaaabh
sub     ecx, edi
imul    ecx
sar     edx, 2
mov     eax, edx
shr     eax, 1fh
add     eax, edx
lea     ecx, [eax+eax*2]
shl     ecx, 3
cmp     ecx, 1000h
jb      short loc_37a2186d
mov     edx, [edi-4]
add     ecx, 23h
sub     edi, edx
lea     eax, [edi-4]
cmp     eax, 1fh
ja      short loc_37a21894
mov     edi, edx
push    ecx
push    edi
call    sub_37ab1b25
mov     dword ptr [esi+0ch], 0
add     esp, 8
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 0
pop     edi
pop     esi
retn
call    __invalid_parameter_noinfo_noreturn
call    __invalid_parameter_noinfo_noreturn
mov     eax, dword_37b731f0
push    esi
mov     esi, ecx
xor     ecx, ecx
cmp     esi, eax
cmovz   eax, ecx
mov     dword_37b731f0, eax
mov     eax, [esi+60h]
test    eax, eax
jz      short loc_37a218fc
mov     ecx, [esi+68h]
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_37a218dd
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a21905
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
mov     dword ptr [esi+60h], 0
add     esp, 8
mov     dword ptr [esi+64h], 0
mov     dword ptr [esi+68h], 0
lea     ecx, [esi+10h]
pop     esi
jmp     loc_37a217e0
call    __invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 18h
push    ebx
mov     ebx, ecx
push    ebp
push    esi
push    edi
mov     eax, [ebx+60h]
mov     eax, [eax]
cmp     dword ptr [eax+24h], 0
jz      short loc_37a21e55
cmp     word ptr [eax+8], 0
jbe     short loc_37a21e55
mov     al, 1
jmp     short loc_37a21e57
xor     al, al
test    al, al
jz      loc_37a220e0
mov     ebp, [ebx+4ch]
cmp     [ebx+48h], ebp
jge     short loc_37a21e6a
mov     [ebx+48h], ebp
mov     eax, [ebx+0ch]
mov     [esp+18h], eax
test    eax, eax
jle     short loc_37a21e7a
cmp     eax, 0bh
jl      short loc_37a21e8f
mov     eax, dword_37b73344
shr     eax, 1
not     al
and     eax, 1
add     eax, eax
or      eax, 1
mov     [esp+18h], eax
dec     eax
cmp     eax, 9
ja      short def_37a21e95
jmp     ds:jpt_37a21e95[eax*4]
mov     ecx, 2
jmp     short loc_37a21ebd
mov     ecx, 3
jmp     short loc_37a21ebd
mov     ecx, 4
jmp     short loc_37a21ebd
mov     ecx, 5
jmp     short loc_37a21ebd
mov     ecx, 1
mov     eax, [ebx]
sub     eax, 0
jz      short loc_37a21ee0
sub     eax, 1
jz      short loc_37a21ed9
sub     eax, 1
jz      short loc_37a21ed2
xor     edi, edi
jmp     short loc_37a21ee5
mov     edi, 400000h
jmp     short loc_37a21ee5
mov     edi, 100000h
jmp     short loc_37a21ee5
mov     edi, 200000h
mov     edx, [ebx+48h]
imul    edi, ecx
shr     edi, 0ah
mov     ecx, edi
call    sub_37a8aae0
mov     esi, eax
mov     edx, ebp
mov     ecx, edi
mov     [ebx+38h], esi
call    sub_37a8aae0
mov     [ebx+3ch], eax
mov     ecx, dword_37b73388
cmp     esi, ecx
jle     short loc_37a21f1b
mov     [ebx+38h], ecx
mov     esi, ecx
mov     ecx, dword_37b73388
cmp     eax, ecx
jle     short loc_37a21f22
mov     [ebx+3ch], ecx
xor     edi, edi
mov     [ebx+18h], esi
mov     [esp+14h], edi
test    esi, esi
jz      loc_37a22047
mov     ebp, [esp+18h]
mov     eax, [ebx]
or      esi, 0ffffffffh
mov     [esp+20h], eax
mov     eax, [ebx+50h]
mov     [esp+24h], eax
mov     eax, [ebx+10h]
and     eax, [ebx+14h]
mov     [esp+1ch], esi
mov     [esp+18h], esi
cmp     eax, esi
jz      short loc_37a21f92
xor     edi, edi
xor     esi, esi
nop     dword ptr [eax]
xor     edx, edx
xor     ecx, ecx
mov     eax, esi
bts     edx, eax
cmp     eax, 20h
cmovnb  ecx, edx
xor     edx, ecx
cmp     eax, 40h
cmovnb  ecx, edx
and     edx, [ebx+10h]
and     ecx, [ebx+14h]
or      edx, ecx
jz      short loc_37a21f88
cmp     edi, [esp+14h]
jz      short loc_37a21fb3
inc     edi
inc     esi
cmp     esi, 40h
jb      short loc_37a21f60
mov     esi, [esp+1ch]
push    28h
call    ??2@yapaxi@z
add     esp, 4
mov     [esp+1ch], eax
cmp     ebp, 3
jz      short loc_37a21fbd
cmp     ebp, 4
jz      short loc_37a21fbd
cmp     ebp, 7
jg      short loc_37a21fbd
xor     dl, dl
jmp     short loc_37a21fbf
mov     dword ptr [esp+18h], 0
jmp     short loc_37a21f92
mov     dl, 1
lea     ecx, [ebp-1]
cmp     ecx, 9
ja      short def_37a21fc7
jmp     ds:jpt_37a21fc7[ecx*4]
mov     ecx, 2
jmp     short loc_37a21fef
mov     ecx, 3
jmp     short loc_37a21fef
mov     ecx, 4
jmp     short loc_37a21fef
mov     ecx, 5
jmp     short loc_37a21fef
mov     ecx, 1
mov     edi, [esp+20h]
mov     [eax+11h], dl
mov     edx, [esp+24h]
mov     [eax+4], edi
mov     edi, [esp+14h]
mov     [eax+14h], edx
mov     edx, [esp+18h]
mov     [eax+20h], ecx
lea     ecx, [ebx+28h]
mov     dword ptr [eax], offset dword_37b035bc
mov     [eax+8], ebp
mov     dword ptr [eax+0ch], 1
mov     byte ptr [eax+10h], 0
mov     [eax+18h], esi
mov     [eax+1ch], edx
mov     [eax+24h], edi
mov     [esp+24h], eax
lea     eax, [esp+24h]
push    eax
call    sub_37a1c750
inc     edi
mov     [esp+14h], edi
cmp     edi, [ebx+18h]
jb      loc_37a21f37
mov     eax, [ebx+64h]
xor     edx, edx
mov     edi, [ebx+60h]
mov     ecx, eax
sub     ecx, edi
xor     ebp, ebp
add     ecx, 3
shr     ecx, 2
cmp     edi, eax
cmova   ecx, edx
mov     [esp+24h], ecx
test    ecx, ecx
jz      short loc_37a220dc
mov     esi, [edi]
cmp     dword ptr [esi+24h], 0
jz      short loc_37a2207b
cmp     word ptr [esi+8], 0
jbe     short loc_37a2207b
mov     al, 1
jmp     short loc_37a2207d
xor     al, al
test    al, al
jz      short loc_37a220c7
mov     edx, [esi+0ch]
cmp     edx, 0ffffffffh
jz      short loc_37a220ad
xor     eax, eax
nop     dword ptr [eax+eax+00h]
cmp     ds:dword_37afea38[eax], edx
jnz     short loc_37a220a3
mov     ecx, ds:dword_37afea3c[eax]
cmp     ecx, [esi+10h]
jz      short loc_37a220bc
add     eax, 10h
cmp     eax, 0f0h
jb      short loc_37a22090
mov     eax, [ebx]
mov     ecx, esi
mov     [esi+0ch], eax
push    dword ptr [ebx+4]
call    loc_37a1ff40
mov     ecx, esi
call    sub_37a200d0
mov     ecx, [esp+24h]
cmp     byte ptr [ebx+44h], 0
jz      short loc_37a220d4
mov     dword ptr [esi+4], 1
inc     ebp
add     edi, 4
cmp     ebp, ecx
jnz     short loc_37a22068
mov     byte ptr [ebx+45h], 1
pop     edi
pop     esi
pop     ebp
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     dword ptr [esi], offset off_37b035e0
jz      short loc_37a222ab
push    4
push    esi
call    sub_37ab1b25
add     esp, 8
mov     eax, esi
pop     esi
retn    4
xor     eax, eax
retn
cli
jmp     short loc_37a2235d
sbb     [esi-4ah], ch
mov     [eax+605cbe1h], ecx
mov     esp, 976820a5h
leave
mov     ds:0b062528h, eax
mov     ds:3d45bfadh, al
xchg    eax, esi
pop     eax
popf
lahf
popf
xchg    ch, dl
in      eax, 8ch
or      ecx, [edx-5fad186dh]
pop     ebx
lds     ebp, [ebx+6d297291h]
test    eax, 8a0bca47h
adc     al, 0eah
pop     ebx
pop     es
xor     eax, 0e6b05eadh
push    cs
lds     ebp, [ecx]
lodsb
push    esp
pop     ebx
fdiv    dword ptr [eax+0fc92558h]
lahf
mov     ebp, 146146bh
push    edi
jecxz   short loc_37a22426
and     edi, [ebx-24h]
aaa
jmp     short loc_37a2247c
dec     ebp
adc     dl, [eax+eax*4+2ch]
xchg    eax, ebx
sbb     [edi-657efe87h], bh
cwde
sbb     [edi+55h], ch
stosd
in      eax, 50h
rol     byte ptr [eax+5bh], 1
loop    loc_37a223c1
dec     ebp
rcl     dword ptr [edx+6278be33h], 2dh
cmp     eax, 0a42d4ed4h
add     eax, 0b751cd95h
pop     esi
iret
jle     short near ptr loc_37a224c3+1
jl      short loc_37a223f8
push    edi
add     ch, [ebx-348be7ffh]
jmp     far ptr 5615h:0ece0439fh
cmp     [esi+0cee037bh], edx
xchg    eax, ecx
stosd
and     cl, [edi+49bc3897h]
js      short loc_37a22426
xor     edi, [eax+65h]
jno     short near ptr loc_37a224fb+0ah
sub     [edx+ecx*8+123f0385h], al
test    ds:4a542bd3h, ecx
pop     edi
nop
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 98h
push    esi
mov     esi, [ebp+arg_4]
lea     ecx, [esp+9ch+var_90]
xorps   xmm0, xmm0
mov     [esp+9ch+var_8], 0
push    edi
mov     edi, [ebp+arg_0]
and     esi, 1fffffffh
movaps  [esp+0a0h+var_60], xmm0
mov     edx, edi
push    esi
movaps  [esp+0a4h+var_90], xmm0
movaps  [esp+0a4h+var_80], xmm0
movaps  [esp+0a4h+var_70], xmm0
mov     dword ptr [esp+0a4h+var_60+0ch], 10000h
mov     [esp+0a4h+var_50], 0
mov     [esp+0a4h+var_4c], 0
mov     [esp+0a4h+var_4], 0
call    sub_37a8c030
mov     eax, esi
add     esp, 4
and     eax, 0ffffffc0h
cmp     eax, esi
jnb     short loc_37a2253b
mov     edx, [esp+98h]
xchg    ax, ax
mov     cl, [eax+edi]
inc     eax
mov     [esp+edx+58h], cl
mov     edx, [esp+98h]
inc     edx
mov     [esp+98h], edx
cmp     eax, esi
jl      short loc_37a22520
mov     edx, [ebp+10h]
lea     ecx, [esp+10h]
call    loc_37a8c380
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
sub     eax, 0c7d3b1f0h
movsb
pop     ss
adc     eax, 4516cda3h
add     al, 5ah
stc
and     bh, [ebp+ecx+46949af4h]
mov     ecx, [edi]
out     6ch, al
call    far ptr 74c7h:7cc5cdcch
xor     [esp+edi*2+arg_65], dl
mov     [ecx-45599598h], bh
in      eax, 66h
movsb
leave
inc     ecx
pavgb   mm1, qword ptr [edx+edx*8-52h]
mov     al, ds:0bacf32e9h
imul    edi, [edi-26h], 36h
hlt
in      eax, dx
das
stosd
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37adf533
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 3ch
push    esi
mov     dword ptr [ebp-10h], 0
xorps   xmm0, xmm0
push    edi
mov     edi, [ebp+8]
mov     eax, 3
mov     esi, ecx
movups  xmmword ptr [edi], xmm0
mov     [edi+0eh], ax
mov     eax, [ebp+0ch]
mov     dword ptr [ebp-4], 0
mov     dword ptr [ebp-10h], 1
mov     eax, [eax+10h]
mov     [ebp-14h], eax
mov     eax, [esi]
mov     edx, [eax+10h]
cmp     eax, offset dword_37b035bc
jnz     loc_37a228b8
mov     eax, [esi+20h]
sub     esp, 8
mov     [ebp+0ch], eax
mov     eax, esp
lea     ecx, [ebp-38h]
mov     dword ptr [eax], offset alowpowermode
mov     dword ptr [eax+4], 0eh
call    loc_37a13e40
mov     ecx, [ebp+0ch]
xorps   xmm0, xmm0
mov     eax, ecx
mov     dword ptr [ebp-4], 1
cdq
test    ecx, ecx
movups  xmmword ptr [ebp-28h], xmm0
mov     [ebp-28h], eax
mov     eax, 0b6h
mov     [ebp-24h], edx
mov     edx, 1f6h
cmovns  eax, edx
mov     [ebp-1ah], ax
push    dword ptr [ebp-14h]
lea     eax, [ebp-28h]
mov     byte ptr [ebp-4], 2
push    eax
lea     eax, [ebp-38h]
mov     ecx, edi
push    eax
call    sub_37a13dc0
mov     byte ptr [ebp-4], 0
mov     eax, [esi]
mov     edx, [eax+0ch]
cmp     eax, offset dword_37b035bc
jnz     loc_37a228c1
mov     eax, [esi+18h]
mov     edx, [esi+1ch]
and     eax, edx
cmp     eax, 0ffffffffh
jnz     short loc_37a2284f
xorps   xmm0, xmm0
mov     eax, 9
movups  xmmword ptr [ebp-28h], xmm0
mov     [ebp-1ah], ax
lea     esi, [ebp-28h]
mov     dword ptr [ebp-10h], 3
jmp     short loc_37a22874
mov     eax, [esi]
mov     edx, [eax+0ch]
cmp     eax, offset dword_37b035bc
jnz     short loc_37a228ca
mov     eax, [esi+18h]
mov     edx, [esi+1ch]
push    edx
push    eax
lea     ecx, [ebp-48h]
call    near ptr sub_37a1f080
mov     esi, eax
mov     dword ptr [ebp-10h], 5
sub     esp, 8
lea     ecx, [ebp-38h]
mov     eax, esp
mov     dword ptr [eax], offset dword_37aff41c
mov     dword ptr [eax+4], 0dh
call    loc_37a13e40
push    dword ptr [ebp-14h]
lea     eax, [ebp-38h]
mov     dword ptr [ebp-4], 5
push    esi
push    eax
mov     ecx, edi
call    sub_37a13dc0
mov     ecx, [ebp-0ch]
mov     eax, edi
pop     edi
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     ecx, esi
call    edx
jmp     loc_37a227b2
mov     ecx, esi
call    edx
jmp     loc_37a2282c
mov     ecx, esi
call    edx
jmp     short loc_37a22861
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 88h
mov     edx, [ebp+0ch]
push    esi
mov     esi, [ebp+14h]
push    edi
push    ecx
mov     ecx, [ebp+8]
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     esi, [esi]
mov     [esp+6ch], esi
mov     dword ptr [esp+40h], 80000h
mov     ecx, [esi+24h]
xor     ecx, [esi+4]
mov     eax, [esi+20h]
xor     eax, [esi]
mov     edi, [esi+0e0h]
mov     [esp+30h], eax
mov     [esp+34h], ecx
mov     [esp+70h], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+74h], ecx
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     [esp+38h], eax
mov     [esp+3ch], ecx
mov     [esp+78h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+7ch], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+60h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+64h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
movq    xmm0, qword ptr [esp+60h]
mov     esi, [esp+30h]
mov     [esp+64h], eax
lea     eax, [edi+8]
mov     [esp+60h], ecx
movq    xmm2, qword ptr [esp+60h]
mov     [esp+68h], edi
punpcklqdq xmm2, xmm0
mov     [esp+44h], eax
movq    xmm0, qword ptr [esp+78h]
mov     eax, esi
movq    xmm1, qword ptr [esp+70h]
and     eax, 1ffff0h
punpcklqdq xmm1, xmm0
xor     ecx, ecx
push    0
movups  xmm3, xmmword ptr [eax+edi]
aesenc  xmm3, xmm1
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+84h], xmm3
pxor    xmm0, xmm2
movups  xmmword ptr [eax+edi], xmm0
movaps  xmm0, xmm3
movd    eax, xmm3
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
mov     eax, ecx
mov     [esp+1ch], ecx
and     eax, 1ffff0h
mov     [esp+50h], edx
push    edx
push    0
lea     ecx, [eax+edi]
add     eax, [esp+50h]
mov     edi, [ecx]
mov     [esp+60h], ecx
mov     ecx, [ecx+4]
mov     [esp+20h], ecx
mov     ecx, [eax]
mov     [esp+64h], eax
mov     eax, [eax+4]
push    edi
mov     [esp+40h], edi
mov     [esp+6ch], ecx
mov     [esp+70h], eax
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+30h], eax
mov     edi, edx
push    0
push    dword ptr [esp+3ch]
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+20h]
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+28h]
add     eax, ecx
adc     edx, edi
mov     [esp+50h], edx
cmp     edx, edi
ja      short loc_37a22ad3
jb      short loc_37a22ac1
cmp     eax, ecx
jnb     short loc_37a22ad3
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a22aec
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     ecx, [esp+20h]
xor     edi, edi
mov     edx, [esp+48h]
add     edi, ecx
adc     eax, edx
mov     [esp+48h], eax
cmp     eax, edx
ja      short loc_37a22b1a
jb      short loc_37a22b08
cmp     edi, ecx
jnb     short loc_37a22b1a
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a22b33
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     eax, [esp+24h]
mov     [esp+28h], eax
mov     eax, [esp+20h]
mov     [esp+20h], eax
push    0
push    dword ptr [esp+50h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+50h]
mov     ecx, [esp+38h]
adc     edx, 0
movaps  xmm2, xmmword ptr [esp+80h]
add     eax, [esp+18h]
adc     edx, [esp+1ch]
add     eax, [esp+20h]
adc     edx, [esp+28h]
add     esi, eax
mov     eax, [esp+34h]
adc     eax, edx
mov     edx, [esp+3ch]
add     ecx, edi
mov     edi, [esp+54h]
adc     edx, [esp+48h]
mov     [edi], esi
xor     esi, [esp+30h]
mov     [edi+4], eax
mov     edi, [esp+58h]
xor     eax, [esp+14h]
mov     [esp+70h], esi
mov     [esp+34h], eax
mov     [edi], ecx
xor     ecx, [esp+5ch]
mov     [edi+4], edx
xor     edx, [esp+60h]
sub     dword ptr [esp+40h], 1
mov     edi, [esp+68h]
mov     [esp+74h], eax
mov     [esp+38h], ecx
mov     [esp+78h], ecx
mov     [esp+3ch], edx
mov     [esp+7ch], edx
jnz     loc_37a229f1
mov     esi, [esp+6ch]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    loc_37a7ed80
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 88h
mov     edx, [ebp+0ch]
push    esi
mov     esi, [ebp+14h]
push    edi
push    ecx
mov     ecx, [ebp+8]
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     esi, [esi]
mov     [esp+6ch], esi
mov     dword ptr [esp+3ch], 80000h
mov     ecx, [esi+24h]
xor     ecx, [esi+4]
mov     eax, [esi+20h]
xor     eax, [esi]
mov     edx, [esi+0e0h]
mov     [esp+2ch], eax
mov     [esp+30h], ecx
mov     [esp+70h], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+74h], ecx
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     [esp+34h], eax
mov     [esp+38h], ecx
mov     [esp+78h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+7ch], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+60h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+64h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
movq    xmm0, qword ptr [esp+60h]
mov     esi, [esp+2ch]
mov     [esp+64h], eax
lea     eax, [edx+8]
mov     [esp+60h], ecx
movq    xmm5, qword ptr [esp+60h]
mov     [esp+40h], edx
punpcklqdq xmm5, xmm0
mov     [esp+44h], eax
movq    xmm1, qword ptr [esp+78h]
mov     edi, esi
movq    xmm0, qword ptr [esp+70h]
and     edi, 1ffff0h
add     edi, edx
punpcklqdq xmm0, xmm1
push    edi
call    loc_37a22320
xor     ecx, ecx
movd    eax, xmm0
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+84h], xmm0
pxor    xmm1, xmm5
add     esp, 4
or      ecx, eax
movups  xmmword ptr [edi], xmm1
mov     eax, ecx
mov     [esp+10h], ecx
mov     ecx, [esp+40h]
and     eax, 1ffff0h
add     ecx, eax
movaps  xmm1, xmm0
add     eax, [esp+44h]
psrldq  xmm1, 4
movd    edx, xmm1
mov     edi, [ecx]
push    0
mov     [esp+58h], ecx
mov     ecx, [ecx+4]
push    edx
mov     [esp+14h], ecx
mov     ecx, [eax]
push    0
mov     [esp+64h], eax
mov     eax, [eax+4]
push    edi
mov     [esp+5ch], edx
mov     [esp+3ch], edi
mov     [esp+6ch], ecx
mov     [esp+70h], eax
call    __allmul
push    0
push    dword ptr [esp+14h]
mov     [esp+28h], eax
mov     edi, edx
push    0
push    dword ptr [esp+38h]
call    __allmul
push    0
push    dword ptr [esp+14h]
mov     [esp+20h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+20h]
add     eax, ecx
adc     edx, edi
mov     [esp+50h], edx
cmp     edx, edi
ja      short loc_37a233c8
jb      short loc_37a233b6
cmp     eax, ecx
jnb     short loc_37a233c8
mov     dword ptr [esp+10h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a233e1
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     ecx, [esp+24h]
mov     [esp+14h], ecx
mov     ecx, [esp+20h]
mov     [esp+10h], ecx
mov     ecx, [esp+18h]
xor     edi, edi
mov     edx, [esp+48h]
add     edi, ecx
adc     eax, edx
mov     [esp+48h], eax
cmp     eax, edx
ja      short loc_37a2340f
jb      short loc_37a233fd
cmp     edi, ecx
jnb     short loc_37a2340f
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a23428
xorps   xmm0, xmm0
movlpd  qword ptr [esp+18h], xmm0
mov     eax, [esp+1ch]
mov     [esp+20h], eax
mov     eax, [esp+18h]
mov     [esp+18h], eax
push    0
push    dword ptr [esp+50h]
push    0
push    dword ptr [esp+18h]
call    __allmul
add     eax, [esp+50h]
mov     ecx, [esp+34h]
adc     edx, 0
movaps  xmm5, xmmword ptr [esp+80h]
add     eax, [esp+10h]
adc     edx, [esp+14h]
add     eax, [esp+18h]
adc     edx, [esp+20h]
add     esi, eax
mov     eax, [esp+30h]
adc     eax, edx
mov     edx, [esp+38h]
add     ecx, edi
mov     edi, [esp+54h]
adc     edx, [esp+48h]
mov     [edi], esi
xor     esi, [esp+2ch]
mov     [edi+4], eax
mov     edi, [esp+58h]
xor     eax, [esp+0ch]
mov     [esp+70h], esi
mov     [esp+30h], eax
mov     [edi], ecx
xor     ecx, [esp+5ch]
mov     [edi+4], edx
xor     edx, [esp+60h]
sub     dword ptr [esp+3ch], 1
mov     [esp+38h], edx
mov     [esp+7ch], edx
mov     edx, [esp+40h]
mov     [esp+74h], eax
mov     [esp+34h], ecx
mov     [esp+78h], ecx
jnz     loc_37a232e1
mov     esi, [esp+6ch]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    sub_37a7fac0
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 1a8h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 4
jb      short loc_37a24376
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+0a4h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+8ch], ecx
mov     ecx, [edi+0e0h]
mov     [esp+84h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+88h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm4, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm3, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
movaps  xmmword ptr [esp+190h], xmm1
movq    xmm1, qword ptr [esp+8]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+130h], xmm4
movaps  xmmword ptr [esp+120h], xmm3
movaps  xmmword ptr [esp+1a0h], xmm1
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
movq    xmm1, qword ptr [esp+8]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [ebp+14h]
mov     [esp+8], ecx
movq    xmm6, qword ptr [esp+8]
punpcklqdq xmm6, xmm0
mov     edx, [eax+0ch]
movaps  xmmword ptr [esp+110h], xmm1
movd    esi, xmm4
mov     dword ptr [esp+54h], 0
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
movaps  xmmword ptr [esp+160h], xmm2
punpcklqdq xmm5, xmm0
movd    edx, xmm3
mov     dword ptr [esp+4ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+5ch], 0
movd    eax, xmm2
mov     dword ptr [esp+0ach], 0
mov     dword ptr [esp+94h], 80000h
nop     word ptr [eax+eax+00000000h]
mov     edi, [esp+0a4h]
and     ecx, 1ffff0h
add     ecx, [esp+84h]
and     eax, 1ffff0h
add     eax, [esp+88h]
and     edx, 1ffff0h
add     edx, [esp+8ch]
and     esi, 1ffff0h
movups  xmm0, xmmword ptr [edx]
movups  xmm7, xmmword ptr [esi+edi]
movaps  xmmword ptr [esp+140h], xmm0
movups  xmm0, xmmword ptr [ecx]
movaps  xmmword ptr [esp+150h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+170h], xmm0
aesenc  xmm7, xmm4
movaps  xmm4, xmmword ptr [esp+140h]
movaps  xmm0, xmm7
pxor    xmm0, xmmword ptr [esp+190h]
movups  xmmword ptr [esi+edi], xmm0
aesenc  xmm4, xmm3
movaps  xmm3, xmmword ptr [esp+150h]
movaps  xmm0, xmm4
pxor    xmm0, xmmword ptr [esp+1a0h]
movups  xmmword ptr [edx], xmm0
aesenc  xmm3, xmm1
movaps  xmm1, xmmword ptr [esp+170h]
movaps  xmm0, xmm3
pxor    xmm0, xmm6
movaps  xmmword ptr [esp+180h], xmm7
movups  xmmword ptr [ecx], xmm0
xor     ecx, ecx
aesenc  xmm1, xmm2
movaps  xmm0, xmm1
movaps  xmmword ptr [esp+140h], xmm4
pxor    xmm0, xmm5
movaps  xmmword ptr [esp+150h], xmm3
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm7
movd    eax, xmm7
psrldq  xmm0, 4
movd    esi, xmm0
movaps  xmm0, xmm4
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+1ch], ecx
and     ecx, 1ffff0h
add     ecx, edi
movd    dword ptr [esp+34h], xmm0
mov     [esp+50h], ecx
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+170h], xmm1
mov     [esp+64h], esi
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0c4h], eax
movd    eax, xmm4
mov     [esp+8], edi
psrldq  xmm0, 4
or      ecx, eax
mov     [esp+40h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+8ch]
mov     [esp+48h], ecx
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0dch], eax
movd    eax, xmm3
or      ecx, eax
mov     [esp+28h], ecx
and     ecx, 1ffff0h
movd    dword ptr [esp+38h], xmm0
add     ecx, [esp+84h]
xor     edx, edx
mov     [esp+58h], ecx
movaps  xmm0, xmm1
push    0
push    esi
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0f8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0fch], eax
movd    eax, xmm1
push    0
psrldq  xmm0, 4
or      edx, eax
movd    dword ptr [esp+9ch], xmm0
mov     ecx, edx
mov     [esp+48h], edx
and     ecx, 1ffff0h
add     ecx, [esp+94h]
push    edi
mov     [esp+0b8h], ecx
mov     eax, [ecx]
mov     [esp+0a8h], eax
mov     eax, [ecx+4]
mov     [esp+0ach], eax
mov     eax, [ecx+8]
mov     [esp+118h], eax
mov     eax, [ecx+0ch]
mov     [esp+11ch], eax
call    __allmul
push    0
push    dword ptr [esp+20h]
mov     [esp+20h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+20h]
mov     [esp+1ch], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+88h], edx
call    __allmul
mov     ecx, [esp+18h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a24893
jb      short loc_37a24881
cmp     eax, ecx
jnb     short loc_37a24893
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a248ac
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     ecx, [esp+24h]
mov     [esp+18h], ecx
mov     ecx, [esp+20h]
mov     [esp+20h], ecx
mov     edx, [esp+14h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0b8h], ecx
adc     eax, [esp+78h]
mov     [esp+0bch], eax
cmp     eax, [esp+78h]
ja      short loc_37a248e4
jb      short loc_37a248d2
cmp     ecx, edx
jnb     short loc_37a248e4
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a248fd
xorps   xmm0, xmm0
movlpd  qword ptr [esp+78h], xmm0
mov     eax, [esp+7ch]
mov     [esp+14h], eax
mov     eax, [esp+78h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+68h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+0b8h]
add     edi, eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [esp+50h]
adc     esi, edx
add     edi, [esp+1ch]
push    0
adc     esi, [esp+18h]
add     edi, [esp+24h]
push    dword ptr [esp+38h]
adc     esi, [esp+20h]
mov     [esp+0b8h], edi
mov     [esp+0bch], esi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0c8h]
paddq   xmm1, xmmword ptr [esp+138h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+188h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+140h], xmm2
movd    dword ptr [esp+88h], xmm2
mov     dword ptr [esp+64h], 0
movaps  xmmword ptr [esp+1a0h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+74h]
mov     [esp+60h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+78h]
mov     [esp+50h], eax
mov     [esp+74h], edx
call    __allmul
mov     ecx, [esp+50h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a249fb
jb      short loc_37a249e9
cmp     eax, ecx
jnb     short loc_37a249fb
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a24a14
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     ecx, [esp+54h]
mov     [esp+1ch], ecx
mov     ecx, [esp+50h]
mov     [esp+14h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0d0h], ecx
adc     eax, [esp+64h]
mov     [esp+0d4h], eax
cmp     eax, [esp+64h]
ja      short loc_37a24a4c
jb      short loc_37a24a3a
cmp     ecx, edx
jnb     short loc_37a24a4c
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a24a65
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+20h], eax
mov     eax, [esp+40h]
mov     [esp+18h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+38h]
push    esi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0d0h]
add     edi, eax
movq    xmm2, qword ptr [esp+68h]
mov     eax, [esp+48h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+24h]
add     edi, [esp+18h]
push    dword ptr [esp+3ch]
adc     esi, [esp+24h]
mov     [esp+0d0h], edi
mov     [esp+0d4h], esi
movq    xmm1, qword ptr [esp+0d0h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0e0h]
paddq   xmm1, xmmword ptr [esp+128h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+148h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+7ch]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+130h], xmm2
movd    dword ptr [esp+60h], xmm2
mov     dword ptr [esp+5ch], 0
movaps  xmmword ptr [esp+1b0h], xmm0
call    __allmul
mov     edi, [esp+28h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+7ch]
mov     [esp+58h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+80h]
mov     [esp+38h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a24b63
jb      short loc_37a24b51
cmp     eax, ecx
jnb     short loc_37a24b63
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a24b7c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+14h], ecx
mov     ecx, [esp+48h]
mov     [esp+20h], ecx
mov     edx, [esp+28h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e8h], ecx
adc     eax, [esp+40h]
mov     [esp+0ech], eax
cmp     eax, [esp+40h]
ja      short loc_37a24bb4
jb      short loc_37a24ba2
cmp     ecx, edx
jnb     short loc_37a24bb4
mov     dword ptr [esp+34h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a24bcd
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+18h], eax
mov     eax, [esp+28h]
mov     [esp+34h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+3ch]
push    esi
push    dword ptr [esp+80h]
call    __allmul
movq    xmm0, qword ptr [esp+0e8h]
add     edi, eax
movq    xmm2, qword ptr [esp+70h]
mov     eax, [esp+58h]
adc     esi, edx
add     edi, [esp+34h]
push    0
adc     esi, [esp+1ch]
add     edi, [esp+24h]
push    dword ptr [esp+94h]
adc     esi, [esp+1ch]
mov     [esp+0e8h], edi
mov     edi, [esp+0a0h]
mov     [esp+0ech], esi
movq    xmm1, qword ptr [esp+0e8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0f8h]
paddq   xmm1, xmmword ptr [esp+118h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+158h]
pxor    xmm2, xmm1
push    0
push    edi
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+120h], xmm2
movd    dword ptr [esp+58h], xmm2
mov     dword ptr [esp+6ch], 0
movaps  xmmword ptr [esp+190h], xmm0
call    __allmul
push    0
push    dword ptr [esp+40h]
mov     [esp+60h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+40h]
mov     edi, eax
mov     [esp+30h], edx
push    0
push    dword ptr [esp+0a8h]
call    __allmul
mov     ecx, edx
mov     edx, [esp+58h]
add     eax, edx
adc     ecx, esi
mov     [esp+58h], ecx
cmp     ecx, esi
ja      short loc_37a24cd6
jb      short loc_37a24cc4
cmp     eax, edx
jnb     short loc_37a24cd6
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+38h], 1
jmp     short loc_37a24cef
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+38h], ecx
mov     ecx, [esp+40h]
mov     [esp+3ch], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+100h], ecx
adc     eax, [esp+28h]
mov     [esp+104h], eax
cmp     eax, [esp+28h]
ja      short loc_37a24d1a
jb      short loc_37a24d11
cmp     ecx, edi
jnb     short loc_37a24d1a
mov     esi, 1
xor     edi, edi
jmp     short loc_37a24d2b
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     edi, [esp+2ch]
mov     esi, [esp+28h]
push    0
push    dword ptr [esp+94h]
push    0
push    dword ptr [esp+0a8h]
call    __allmul
add     eax, [esp+58h]
movq    xmm0, qword ptr [esp+100h]
movq    xmm2, qword ptr [esp+98h]
adc     edx, 0
add     eax, [esp+3ch]
movaps  xmm5, xmmword ptr [esp+170h]
adc     edx, [esp+38h]
add     eax, esi
movaps  xmm3, xmmword ptr [esp+120h]
movaps  xmm4, xmmword ptr [esp+130h]
adc     edx, edi
sub     dword ptr [esp+94h], 1
movaps  xmm6, xmmword ptr [esp+180h]
mov     ecx, [esp+48h]
mov     esi, [esp+78h]
mov     [esp+0f8h], eax
mov     eax, [esp+0a8h]
mov     [esp+0fch], edx
movq    xmm1, qword ptr [esp+0f8h]
mov     edx, [esp+50h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+160h]
movq    xmm0, qword ptr [esp+108h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+110h]
movaps  xmmword ptr [esp+160h], xmm2
movd    eax, xmm2
mov     dword ptr [esp+0ach], 0
jnz     loc_37a24620
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a7ed80
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a24e04
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 208h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 5
jb      short loc_37a24e66
mov     ecx, [ebp+14h]
mov     edx, [ecx]
mov     esi, [ecx+4]
mov     edi, [ecx+8]
mov     eax, [edx+0e0h]
mov     [esp+0bch], eax
mov     eax, [esi+0e0h]
mov     [esp+0ach], eax
mov     eax, [edi+0e0h]
mov     [esp+0b0h], eax
mov     eax, [ecx+0ch]
mov     eax, [eax+0e0h]
mov     [esp+0b4h], eax
mov     eax, [ecx+10h]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+10h], ecx
mov     eax, [eax+0e0h]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0b8h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm5, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
movq    xmm4, qword ptr [esp+10h]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
movaps  xmmword ptr [esp+200h], xmm1
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+190h], xmm5
movaps  xmmword ptr [esp+180h], xmm4
movaps  xmmword ptr [esp+0d0h], xmm1
xor     ecx, [edi+8]
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+10h], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     esi, [ebp+14h]
mov     [esp+10h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     edx, [esi+0ch]
mov     [esp+14h], eax
movq    xmm3, qword ptr [esp+10h]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
movaps  xmmword ptr [esp+70h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     edx, [esi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
movq    xmm7, qword ptr [esp+10h]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm2, qword ptr [esp+10h]
punpcklqdq xmm2, xmm0
movaps  xmmword ptr [esp+170h], xmm3
movaps  xmmword ptr [esp+160h], xmm1
movaps  xmmword ptr [esp+1e0h], xmm2
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm6, qword ptr [esp+10h]
punpcklqdq xmm6, xmm0
movd    edi, xmm5
mov     dword ptr [esp+44h], 0
movd    esi, xmm4
mov     dword ptr [esp+3ch], 0
movd    edx, xmm3
mov     dword ptr [esp+34h], 0
movd    ecx, xmm1
mov     dword ptr [esp+54h], 0
movd    eax, xmm2
mov     dword ptr [esp+0e4h], 0
mov     dword ptr [esp+0c4h], 80000h
and     esi, 1ffff0h
and     ecx, 1ffff0h
add     esi, [esp+0ach]
and     eax, 1ffff0h
add     ecx, [esp+0b4h]
and     edx, 1ffff0h
add     eax, [esp+0b8h]
and     edi, 1ffff0h
add     edx, [esp+0b0h]
movups  xmm0, xmmword ptr [esi]
add     edi, [esp+0bch]
movaps  xmmword ptr [esp+1b0h], xmm0
movups  xmm0, xmmword ptr [edx]
movaps  xmmword ptr [esp+1c0h], xmm0
movups  xmm0, xmmword ptr [ecx]
movaps  xmmword ptr [esp+1d0h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+1f0h], xmm0
movups  xmm0, xmmword ptr [edi]
aesenc  xmm0, xmm5
movaps  xmm5, xmmword ptr [esp+1b0h]
movaps  xmmword ptr [esp+1a0h], xmm0
pxor    xmm0, xmmword ptr [esp+200h]
movups  xmmword ptr [edi], xmm0
aesenc  xmm5, xmm4
movaps  xmm4, xmmword ptr [esp+1c0h]
movaps  xmm0, xmm5
pxor    xmm0, xmmword ptr [esp+0d0h]
movups  xmmword ptr [esi], xmm0
aesenc  xmm4, xmm3
movaps  xmm3, xmmword ptr [esp+1d0h]
movaps  xmm0, xmm4
pxor    xmm0, xmmword ptr [esp+70h]
movups  xmmword ptr [edx], xmm0
aesenc  xmm3, xmm1
movaps  xmm1, xmmword ptr [esp+1a0h]
movaps  xmm0, xmm3
pxor    xmm0, xmm7
movaps  xmmword ptr [esp+1b0h], xmm5
movaps  xmm7, xmmword ptr [esp+1f0h]
movups  xmmword ptr [ecx], xmm0
xor     ecx, ecx
aesenc  xmm7, xmm2
movaps  xmm0, xmm7
movaps  xmmword ptr [esp+1c0h], xmm4
pxor    xmm0, xmm6
movaps  xmmword ptr [esp+1d0h], xmm3
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
movaps  xmm0, xmm5
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+70h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0bch]
mov     [esp+40h], ecx
movaps  xmmword ptr [esp+1f0h], xmm7
mov     [esp+6ch], esi
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+14h], eax
mov     eax, [ecx+8]
mov     [esp+0f8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0fch], eax
movd    eax, xmm5
mov     [esp+10h], edi
movd    dword ptr [esp+24h], xmm0
or      ecx, eax
mov     [esp+20h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0ach]
mov     [esp+38h], ecx
mov     eax, [ecx]
mov     [esp+0c8h], eax
mov     eax, [ecx+4]
mov     [esp+0cch], eax
mov     eax, [ecx+8]
xor     edx, edx
mov     [esp+110h], eax
movaps  xmm0, xmm4
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+114h], eax
movd    eax, xmm4
psrldq  xmm0, 4
movd    dword ptr [esp+28h], xmm0
movaps  xmm0, xmm3
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+60h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0b0h]
mov     [esp+30h], ecx
push    0
movd    dword ptr [esp+30h], xmm0
movaps  xmm0, xmm7
mov     eax, [ecx]
mov     [esp+94h], eax
mov     eax, [ecx+4]
mov     [esp+98h], eax
mov     eax, [ecx+8]
mov     [esp+12ch], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+130h], eax
movd    eax, xmm3
push    esi
push    0
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+54h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0c0h]
mov     [esp+5ch], ecx
push    edi
movd    dword ptr [esp+0d0h], xmm0
mov     eax, [ecx]
mov     [esp+0a8h], eax
mov     eax, [ecx+4]
mov     [esp+0ach], eax
mov     eax, [ecx+8]
mov     [esp+150h], eax
mov     eax, [ecx+0ch]
mov     [esp+154h], eax
movd    eax, xmm7
or      edx, eax
mov     ecx, edx
mov     [esp+98h], edx
and     ecx, 1ffff0h
add     ecx, [esp+0c8h]
mov     [esp+0f0h], ecx
mov     eax, [ecx]
mov     [esp+0b0h], eax
mov     eax, [ecx+4]
mov     [esp+0b4h], eax
mov     eax, [ecx+8]
mov     [esp+168h], eax
mov     eax, [ecx+0ch]
mov     [esp+16ch], eax
call    __allmul
push    0
push    dword ptr [esp+74h]
mov     [esp+24h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+74h]
mov     edi, eax
mov     [esp+0d8h], edx
push    0
push    dword ptr [esp+20h]
call    __allmul
mov     ecx, eax
mov     eax, [esp+1ch]
add     ecx, eax
adc     edx, esi
mov     [esp+58h], edx
cmp     edx, esi
ja      short loc_37a254b9
jb      short loc_37a254a7
cmp     ecx, eax
jnb     short loc_37a254b9
mov     dword ptr [esp+70h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a254d2
xorps   xmm0, xmm0
movlpd  qword ptr [esp+70h], xmm0
mov     eax, [esp+74h]
mov     [esp+1ch], eax
mov     eax, [esp+70h]
mov     [esp+70h], eax
xor     eax, eax
add     eax, edi
mov     [esp+0f0h], eax
adc     ecx, [esp+0d0h]
mov     [esp+0f4h], ecx
cmp     ecx, [esp+0d0h]
ja      short loc_37a25503
jb      short loc_37a254fa
cmp     eax, edi
jnb     short loc_37a25503
mov     esi, 1
xor     edi, edi
jmp     short loc_37a2551d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0d0h], xmm0
mov     edi, [esp+0d4h]
mov     esi, [esp+0d0h]
push    0
push    dword ptr [esp+70h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+58h]
movq    xmm0, qword ptr [esp+0f0h]
movq    xmm2, qword ptr [esp+10h]
adc     edx, 0
add     eax, [esp+70h]
push    0
adc     edx, [esp+20h]
add     eax, esi
push    dword ptr [esp+28h]
adc     edx, edi
mov     [esp+0f0h], eax
mov     eax, [esp+48h]
mov     edi, [esp+0d0h]
mov     [esp+0f4h], edx
movq    xmm1, qword ptr [esp+0f0h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+100h]
paddq   xmm1, xmmword ptr [esp+198h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1a8h]
pxor    xmm2, xmm1
push    0
push    edi
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+1a0h], xmm2
movd    dword ptr [esp+7ch], xmm2
mov     dword ptr [esp+54h], 0
movaps  xmmword ptr [esp+210h], xmm0
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+48h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     edi, eax
mov     [esp+60h], edx
push    0
push    dword ptr [esp+0d8h]
call    __allmul
mov     ecx, edx
mov     edx, [esp+40h]
add     eax, edx
adc     ecx, esi
mov     [esp+40h], ecx
cmp     ecx, esi
ja      short loc_37a2561f
jb      short loc_37a2560d
cmp     eax, edx
jnb     short loc_37a2561f
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a25641
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0d0h], xmm0
mov     ecx, [esp+0d4h]
mov     [esp+1ch], ecx
mov     ecx, [esp+0d0h]
mov     [esp+20h], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+108h], ecx
adc     eax, [esp+58h]
mov     [esp+10ch], eax
cmp     eax, [esp+58h]
ja      short loc_37a2566c
jb      short loc_37a25663
cmp     ecx, edi
jnb     short loc_37a2566c
mov     esi, 1
xor     edi, edi
jmp     short loc_37a2567d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     edi, [esp+5ch]
mov     esi, [esp+58h]
push    0
push    dword ptr [esp+28h]
push    0
push    dword ptr [esp+0d8h]
call    __allmul
add     eax, [esp+40h]
movq    xmm0, qword ptr [esp+108h]
movq    xmm2, qword ptr [esp+0c8h]
adc     edx, 0
add     eax, [esp+20h]
push    0
adc     edx, [esp+20h]
add     eax, esi
push    dword ptr [esp+2ch]
adc     edx, edi
mov     [esp+108h], eax
mov     eax, [esp+40h]
mov     [esp+10ch], edx
movq    xmm1, qword ptr [esp+108h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+118h]
paddq   xmm1, xmmword ptr [esp+188h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1b8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+9ch]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+190h], xmm2
movd    dword ptr [esp+68h], xmm2
mov     dword ptr [esp+4ch], 0
movaps  xmmword ptr [esp+0e0h], xmm0
call    __allmul
mov     edi, [esp+60h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+9ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a0h]
mov     [esp+70h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a25786
jb      short loc_37a25774
cmp     eax, ecx
jnb     short loc_37a25786
mov     dword ptr [esp+24h], 0
mov     dword ptr [esp+20h], 1
jmp     short loc_37a2579f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+20h], ecx
mov     ecx, [esp+38h]
mov     [esp+24h], ecx
mov     edx, [esp+60h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+120h], ecx
adc     eax, [esp+40h]
mov     [esp+124h], eax
cmp     eax, [esp+40h]
ja      short loc_37a257d7
jb      short loc_37a257c5
cmp     ecx, edx
jnb     short loc_37a257d7
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+70h], 0
jmp     short loc_37a257f0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+70h], eax
mov     eax, [esp+60h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+2ch]
push    esi
push    dword ptr [esp+0a0h]
call    __allmul
movq    xmm0, qword ptr [esp+120h]
add     edi, eax
movq    xmm2, qword ptr [esp+90h]
mov     eax, [esp+30h]
adc     esi, edx
add     edi, [esp+24h]
push    0
adc     esi, [esp+24h]
add     edi, [esp+20h]
push    dword ptr [esp+30h]
adc     esi, [esp+78h]
mov     [esp+120h], edi
mov     [esp+124h], esi
movq    xmm1, qword ptr [esp+120h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+130h]
paddq   xmm1, xmmword ptr [esp+178h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1c8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+0a4h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+180h], xmm2
movd    dword ptr [esp+48h], xmm2
mov     dword ptr [esp+44h], 0
movaps  xmmword ptr [esp+80h], xmm0
call    __allmul
mov     edi, [esp+48h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0a4h]
mov     [esp+40h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a8h]
mov     [esp+58h], eax
mov     [esp+70h], edx
call    __allmul
mov     ecx, [esp+30h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a258fa
jb      short loc_37a258e8
cmp     eax, ecx
jnb     short loc_37a258fa
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a25913
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+24h], ecx
mov     ecx, [esp+30h]
mov     [esp+28h], ecx
mov     edx, [esp+48h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+138h], ecx
adc     eax, [esp+60h]
mov     [esp+13ch], eax
cmp     eax, [esp+60h]
ja      short loc_37a2594b
jb      short loc_37a25939
cmp     ecx, edx
jnb     short loc_37a2594b
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a25964
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     eax, [esp+4ch]
mov     [esp+1ch], eax
mov     eax, [esp+48h]
mov     [esp+20h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+30h]
push    esi
push    dword ptr [esp+0a8h]
call    __allmul
movq    xmm0, qword ptr [esp+138h]
add     edi, eax
movq    xmm2, qword ptr [esp+98h]
mov     eax, [esp+50h]
adc     esi, edx
add     edi, [esp+28h]
push    0
adc     esi, [esp+28h]
add     edi, [esp+24h]
push    dword ptr [esp+0c4h]
adc     esi, [esp+24h]
mov     [esp+138h], edi
mov     [esp+13ch], esi
movq    xmm1, qword ptr [esp+138h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+148h]
paddq   xmm1, xmmword ptr [esp+168h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1d8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+0ach]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+170h], xmm2
movd    dword ptr [esp+40h], xmm2
mov     dword ptr [esp+64h], 0
movaps  xmmword ptr [esp+1b0h], xmm0
call    __allmul
mov     edi, [esp+88h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0ach]
mov     [esp+60h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0b0h]
mov     [esp+98h], eax
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+50h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a25a77
jb      short loc_37a25a65
cmp     eax, ecx
jnb     short loc_37a25a77
mov     dword ptr [esp+2ch], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a25a90
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     ecx, [esp+54h]
mov     [esp+28h], ecx
mov     ecx, [esp+50h]
mov     [esp+2ch], ecx
mov     edx, [esp+88h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+150h], ecx
adc     eax, [esp+48h]
mov     [esp+154h], eax
cmp     eax, [esp+48h]
ja      short loc_37a25ac8
jb      short loc_37a25ab9
cmp     ecx, edx
jnb     short loc_37a25ac8
mov     esi, 1
mov     dword ptr [esp+24h], 0
jmp     short loc_37a25ae6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+88h], xmm0
mov     eax, [esp+8ch]
mov     esi, [esp+88h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+0c4h]
push    0
push    dword ptr [esp+0b0h]
call    __allmul
movq    xmm0, qword ptr [esp+150h]
add     eax, edi
movq    xmm2, qword ptr [esp+0a0h]
movaps  xmm6, xmmword ptr [esp+1f0h]
adc     edx, 0
add     eax, [esp+2ch]
movaps  xmm3, xmmword ptr [esp+170h]
adc     edx, [esp+28h]
add     eax, esi
movaps  xmm4, xmmword ptr [esp+180h]
adc     edx, [esp+24h]
sub     dword ptr [esp+0c4h], 1
movaps  xmm5, xmmword ptr [esp+190h]
movaps  xmm7, xmmword ptr [esp+1a0h]
mov     ecx, [esp+30h]
mov     esi, [esp+58h]
mov     edi, [esp+6ch]
mov     [esp+148h], eax
mov     eax, [esp+0e0h]
mov     [esp+14ch], edx
movq    xmm1, qword ptr [esp+148h]
mov     edx, [esp+38h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1e0h]
movq    xmm0, qword ptr [esp+158h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+160h]
movaps  xmmword ptr [esp+1e0h], xmm2
movd    eax, xmm2
mov     dword ptr [esp+0e4h], 0
jnz     loc_37a251a2
mov     edi, [ebp+10h]
xor     esi, esi
nop     dword ptr [eax+eax+00h]
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a7ed80
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 5
jb      short loc_37a25bd0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 148h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 3
jb      short loc_37a25c36
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     ecx, [edx+0e0h]
mov     [esp+70h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [edi+0e0h]
mov     [esp+74h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+78h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm2, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
movaps  xmmword ptr [esp+120h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+14h], eax
movq    xmm7, qword ptr [esp+10h]
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
punpcklqdq xmm7, xmm0
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+0d0h], xmm2
movaps  xmmword ptr [esp+0f0h], xmm1
movaps  xmmword ptr [esp+110h], xmm7
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+10h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
movq    xmm5, qword ptr [esp+10h]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm6, qword ptr [esp+10h]
movaps  xmmword ptr [esp+100h], xmm5
punpcklqdq xmm6, xmm0
movd    edx, xmm2
mov     dword ptr [esp+3ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+4ch], 0
movd    eax, xmm5
mov     dword ptr [esp+84h], 0
mov     dword ptr [esp+7ch], 80000h
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
and     eax, 1ffff0h
and     ecx, 1ffff0h
add     eax, [esp+78h]
and     edx, 1ffff0h
add     ecx, [esp+74h]
add     edx, [esp+70h]
mov     [esp+28h], eax
movups  xmm4, xmmword ptr [eax]
movups  xmm3, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [edx]
mov     [esp+1ch], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
mov     [esp+20h], edx
pshufd  xmm0, xmm1, 0aah
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
movd    edx, xmm0
pshufd  xmm0, xmm1, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+24h], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movd    xmm1, edx
punpckldq xmm1, xmm2
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm7, ecx
punpckldq xmm7, xmm0
movaps  xmmword ptr [esp+0e0h], xmm7
movaps  xmm0, xmmword ptr [esp+0e0h]
mov     eax, [esp+20h]
punpckldq xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+0d0h]
movaps  xmmword ptr [esp+0e0h], xmm0
pxor    xmm0, xmmword ptr [esp+120h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm3, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+1ch]
movd    xmm3, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+0f0h]
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+130h], xmm3
pxor    xmm0, xmmword ptr [esp+110h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm4, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm4
pshufd  xmm0, xmm4, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+28h]
movd    xmm3, ecx
xor     ecx, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
movaps  xmm1, xmmword ptr [esp+0e0h]
pxor    xmm3, xmm5
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+140h], xmm3
pxor    xmm0, xmm6
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
movd    eax, xmm1
xor     edx, edx
movaps  xmm1, xmmword ptr [esp+130h]
movaps  xmm0, xmm1
mov     [esp+54h], esi
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+20h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+70h]
mov     [esp+38h], ecx
push    0
movd    dword ptr [esp+38h], xmm0
movaps  xmm0, xmm3
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+18h], eax
mov     eax, [ecx+8]
mov     [esp+9ch], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0a0h], eax
movd    eax, xmm1
push    esi
push    0
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+4ch], ecx
and     ecx, 1ffff0h
add     ecx, [esp+80h]
mov     [esp+54h], ecx
push    edi
mov     [esp+20h], edi
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
mov     [esp+0c4h], eax
movd    eax, xmm3
movd    dword ptr [esp+34h], xmm0
or      edx, eax
mov     ecx, edx
mov     [esp+70h], edx
and     ecx, 1ffff0h
add     ecx, [esp+88h]
mov     [esp+90h], ecx
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0dch], eax
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+20h], eax
push    0
push    dword ptr [esp+20h]
mov     [esp+1ch], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a263ac
jb      short loc_37a2639a
cmp     eax, ecx
jnb     short loc_37a263ac
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a263c5
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+28h]
mov     [esp+20h], ecx
mov     edx, [esp+18h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+90h], ecx
adc     eax, [esp+0ch]
mov     [esp+94h], eax
cmp     eax, [esp+0ch]
ja      short loc_37a263fd
jb      short loc_37a263eb
cmp     ecx, edx
jnb     short loc_37a263fd
mov     dword ptr [esp+0ch], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a26416
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+18h], eax
mov     eax, [esp+28h]
mov     [esp+0ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+58h]
push    esi
push    dword ptr [esp+20h]
call    __allmul
movq    xmm0, qword ptr [esp+90h]
add     edi, eax
movq    xmm2, qword ptr [esp+10h]
mov     eax, [esp+38h]
adc     esi, edx
add     edi, [esp+20h]
push    0
adc     esi, [esp+20h]
add     edi, [esp+10h]
push    dword ptr [esp+38h]
adc     esi, [esp+20h]
mov     [esp+90h], edi
mov     [esp+94h], esi
movq    xmm1, qword ptr [esp+90h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0a0h]
paddq   xmm1, xmmword ptr [esp+0d8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+0e8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+0e0h], xmm2
movd    dword ptr [esp+30h], xmm2
mov     dword ptr [esp+4ch], 0
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+74h]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+78h]
mov     [esp+50h], eax
mov     [esp+64h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a26511
jb      short loc_37a264ff
cmp     eax, ecx
jnb     short loc_37a26511
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a2652a
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+38h]
mov     [esp+18h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0a8h], ecx
adc     eax, [esp+54h]
mov     [esp+0ach], eax
cmp     eax, [esp+54h]
ja      short loc_37a26562
jb      short loc_37a26550
cmp     ecx, edx
jnb     short loc_37a26562
mov     dword ptr [esp+0ch], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a2657b
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+28h], eax
mov     eax, [esp+40h]
mov     [esp+0ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+38h]
push    esi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0a8h]
add     edi, eax
movq    xmm2, qword ptr [esp+68h]
mov     eax, [esp+48h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+20h]
add     edi, [esp+10h]
push    dword ptr [esp+28h]
adc     esi, [esp+30h]
mov     [esp+0a8h], edi
mov     [esp+0ach], esi
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0b8h]
paddq   xmm1, xmmword ptr [esp+0f8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+138h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+64h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+100h], xmm2
movd    dword ptr [esp+2ch], xmm2
mov     dword ptr [esp+5ch], 0
movaps  xmmword ptr [esp+120h], xmm0
call    __allmul
mov     esi, [esp+60h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+64h]
mov     [esp+58h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+68h]
mov     [esp+70h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a26676
jb      short loc_37a26664
cmp     eax, ecx
jnb     short loc_37a26676
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+34h], 1
jmp     short loc_37a2668f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+34h], ecx
mov     ecx, [esp+48h]
mov     [esp+28h], ecx
mov     edx, [esp+60h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c0h], ecx
adc     eax, [esp+40h]
mov     [esp+0c4h], eax
cmp     eax, [esp+40h]
ja      short loc_37a266c7
jb      short loc_37a266b5
cmp     ecx, edx
jnb     short loc_37a266c7
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+0ch], 0
jmp     short loc_37a266e0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+0ch], eax
mov     eax, [esp+60h]
mov     [esp+18h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+28h]
push    edi
push    dword ptr [esp+68h]
call    __allmul
movq    xmm0, qword ptr [esp+0c0h]
add     esi, eax
mov     eax, [esp+80h]
movq    xmm5, qword ptr [esp+58h]
adc     edi, edx
add     esi, [esp+28h]
movaps  xmm6, xmmword ptr [esp+140h]
adc     edi, [esp+34h]
add     esi, [esp+18h]
mov     ecx, [esp+1ch]
adc     edi, [esp+0ch]
sub     dword ptr [esp+7ch], 1
mov     edx, [esp+20h]
mov     [esp+0b8h], esi
mov     [esp+0bch], edi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movq    xmm0, qword ptr [esp+0c8h]
punpcklqdq xmm5, xmm0
pxor    xmm5, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+100h], xmm5
movd    eax, xmm5
mov     dword ptr [esp+84h], 0
jnz     loc_37a25e40
mov     edi, [ebp+10h]
xor     esi, esi
nop     word ptr [eax+eax+00h]
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a7fac0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a26790
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
popa
pop     ss
retn
mov     ds:40d1bcech, al
lea     ecx, [ecx+76h]
sal     byte ptr [esi+4ah], 1
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 178h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a2cbab
push    60h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+8]
xor     esi, esi
mov     [esp+14h], eax
push    ecx
mov     ecx, [ebp+14h]
mov     edx, edi
push    dword ptr [ecx+esi*4]
mov     ecx, eax
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     eax, [esp+14h]
inc     esi
add     eax, edi
mov     [esp+14h], eax
cmp     esi, 3
jb      short loc_37a2cbb4
mov     eax, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     [esp+34h], edi
mov     ecx, [edx+0e0h]
mov     [esp+74h], ecx
mov     eax, [edi+0e0h]
mov     ecx, [esi+0e0h]
mov     edi, [ebp+8]
mov     [esp+7ch], eax
mov     eax, [ebp+8]
mov     [esp+78h], ecx
mov     ecx, [edx+0c0h]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
xor     eax, [edi+27h]
mov     [esp+0ch], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm2, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [ebp+0ch]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     [esp+8], ecx
movaps  xmmword ptr [esp+130h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     ecx, [eax+edx+23h]
xor     ecx, [esi+0c0h]
mov     eax, [eax+edx+27h]
xor     eax, [esi+0c4h]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
movaps  xmmword ptr [esp+120h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movaps  xmmword ptr [esp+140h], xmm1
movq    xmm1, qword ptr [esp+8]
movaps  xmmword ptr [esp+0d0h], xmm2
mov     eax, [esi+3ch]
xorps   xmm3, xmm3
xor     eax, [esi+1ch]
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     edi, [esp+34h]
mov     [esp+8], ecx
movq    xmm7, qword ptr [esp+8]
mov     ecx, [eax+edx*2+23h]
mov     eax, [eax+edx*2+27h]
xor     ecx, [edi+0c0h]
xor     eax, [edi+0c4h]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm6, qword ptr [esp+8]
movaps  xmmword ptr [esp+0f0h], xmm1
movaps  xmmword ptr [esp+110h], xmm7
movaps  xmmword ptr [esp+160h], xmm3
movaps  xmmword ptr [esp+100h], xmm5
punpcklqdq xmm6, xmm0
movd    edx, xmm2
mov     dword ptr [esp+3ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+4ch], 0
movd    eax, xmm5
mov     dword ptr [esp+84h], 0
mov     dword ptr [esp+34h], 80000h
nop     dword ptr [eax+eax+00h]
and     eax, 1ffff0h
and     ecx, 1ffff0h
add     eax, [esp+7ch]
and     edx, 1ffff0h
add     ecx, [esp+78h]
add     edx, [esp+74h]
mov     [esp+18h], eax
movups  xmm4, xmmword ptr [eax]
movups  xmm3, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [edx]
mov     [esp+1ch], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
mov     [esp+20h], edx
pshufd  xmm0, xmm1, 0aah
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
movd    edx, xmm0
pshufd  xmm0, xmm1, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+24h], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movd    xmm1, edx
punpckldq xmm1, xmm2
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm7, ecx
punpckldq xmm7, xmm0
movaps  xmmword ptr [esp+0e0h], xmm7
movaps  xmm0, xmmword ptr [esp+0e0h]
xor     ecx, ecx
punpckldq xmm0, xmm1
xor     esi, esi
pxor    xmm0, xmmword ptr [esp+0d0h]
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+0e0h], xmm0
pxor    xmm1, xmmword ptr [esp+120h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+20h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm3, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
xor     eax, eax
sar     edx, cl
mov     ecx, [esp+20h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
mov     edx, ds:dword_37affd40[ecx*4]
movzx   eax, al
movd    xmm2, edi
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm3, ecx
xor     ecx, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+0f0h]
movaps  xmm1, xmm3
movaps  xmmword ptr [esp+150h], xmm3
pxor    xmm1, xmmword ptr [esp+110h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+1ch]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm4, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+1ch]
and     edx, 3
shl     edx, 1ch
xor     eax, edi
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
mov     [esp+24h], edx
pshufd  xmm0, xmm4, 0ffh
movd    eax, xmm4
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm4, ecx
xor     ecx, ecx
punpckldq xmm4, xmm0
punpckldq xmm4, xmm1
pxor    xmm4, xmm5
movaps  xmm1, xmm4
movaps  xmmword ptr [esp+170h], xmm4
pxor    xmm1, xmm6
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+18h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
movaps  xmm1, xmmword ptr [esp+0e0h]
mov     al, dl
and     al, 1
movzx   ecx, dl
add     al, al
shr     ecx, 2
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
movaps  xmm0, xmm1
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+18h]
xor     eax, edi
and     edx, 3
psrldq  xmm0, 4
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
mov     [ecx+0ch], eax
movaps  xmm0, xmm3
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
xor     edx, edx
psrldq  xmm0, 4
push    0
or      ecx, eax
movd    dword ptr [esp+34h], xmm0
mov     [esp+1ch], ecx
movaps  xmm0, xmm4
and     ecx, 1ffff0h
psrldq  xmm0, 4
add     ecx, [esp+78h]
mov     [esp+3ch], ecx
push    esi
push    0
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+18h], eax
mov     eax, [ecx+8]
mov     [esp+0a4h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0a8h], eax
movd    eax, xmm3
push    edi
mov     [esp+64h], esi
or      ecx, eax
mov     [esp+18h], edi
mov     [esp+50h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+88h]
mov     [esp+58h], ecx
movd    dword ptr [esp+34h], xmm0
mov     eax, [ecx]
mov     [esp+70h], eax
mov     eax, [ecx+4]
mov     [esp+74h], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
mov     [esp+0c4h], eax
movd    eax, xmm4
or      edx, eax
mov     ecx, edx
mov     [esp+68h], edx
and     ecx, 1ffff0h
add     ecx, [esp+8ch]
mov     [esp+90h], ecx
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0dch], eax
call    __allmul
mov     [esp+28h], eax
mov     esi, edx
push    0
push    dword ptr [esp+1ch]
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+2ch], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a2d4f3
jb      short loc_37a2d4e1
cmp     eax, ecx
jnb     short loc_37a2d4f3
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a2d50c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+14h], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     edx, [esp+20h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+90h], ecx
adc     eax, [esp+1ch]
mov     [esp+94h], eax
cmp     eax, [esp+1ch]
ja      short loc_37a2d544
jb      short loc_37a2d532
cmp     ecx, edx
jnb     short loc_37a2d544
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a2d55d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+1ch], eax
mov     eax, [esp+28h]
mov     [esp+20h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+58h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+90h]
add     edi, eax
mov     eax, [esp+38h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+18h]
add     edi, [esp+24h]
push    dword ptr [esp+34h]
adc     esi, [esp+24h]
mov     [esp+90h], edi
mov     [esp+94h], esi
movq    xmm1, qword ptr [esp+90h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0d8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+44h], 0
pxor    xmm0, xmmword ptr [esp+138h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0a0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+0e8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+6ch]
movaps  xmmword ptr [esp+0e0h], xmm2
movd    dword ptr [esp+30h], xmm2
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+6ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+70h]
mov     [esp+50h], eax
mov     [esp+64h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a2d664
jb      short loc_37a2d652
cmp     eax, ecx
jnb     short loc_37a2d664
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a2d67d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+14h], ecx
mov     ecx, [esp+38h]
mov     [esp+18h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0a8h], ecx
adc     eax, [esp+54h]
mov     [esp+0ach], eax
cmp     eax, [esp+54h]
ja      short loc_37a2d6b5
jb      short loc_37a2d6a3
cmp     ecx, edx
jnb     short loc_37a2d6b5
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a2d6ce
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+28h], eax
mov     eax, [esp+40h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+34h]
push    esi
push    dword ptr [esp+70h]
call    __allmul
movq    xmm0, qword ptr [esp+0a8h]
add     edi, eax
mov     eax, [esp+48h]
movq    xmm2, qword ptr [esp+60h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+18h]
add     edi, [esp+20h]
push    dword ptr [esp+28h]
adc     esi, [esp+30h]
mov     [esp+0a8h], edi
mov     [esp+0ach], esi
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0f8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+54h], 0
pxor    xmm0, xmmword ptr [esp+148h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0b8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+158h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movaps  xmmword ptr [esp+100h], xmm2
movd    dword ptr [esp+2ch], xmm2
movaps  xmmword ptr [esp+120h], xmm0
call    __allmul
mov     esi, [esp+58h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+74h]
mov     [esp+58h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+78h]
mov     [esp+68h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a2d7d5
jb      short loc_37a2d7c3
cmp     eax, ecx
jnb     short loc_37a2d7d5
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a2d7ee
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+30h], ecx
mov     ecx, [esp+48h]
mov     [esp+28h], ecx
mov     edx, [esp+58h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c0h], ecx
adc     eax, [esp+40h]
mov     [esp+0c4h], eax
cmp     eax, [esp+40h]
ja      short loc_37a2d826
jb      short loc_37a2d814
cmp     ecx, edx
jnb     short loc_37a2d826
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a2d83f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     eax, [esp+5ch]
mov     [esp+14h], eax
mov     eax, [esp+58h]
mov     [esp+18h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+28h]
push    edi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0c0h]
add     esi, eax
mov     eax, [esp+80h]
movq    xmm5, qword ptr [esp+68h]
adc     edi, edx
add     esi, [esp+28h]
movaps  xmm6, xmmword ptr [esp+170h]
adc     edi, [esp+30h]
add     esi, [esp+18h]
mov     ecx, [esp+1ch]
adc     edi, [esp+14h]
sub     dword ptr [esp+34h], 1
mov     edx, [esp+20h]
mov     [esp+0b8h], esi
mov     [esp+0bch], edi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movaps  xmm0, xmm1
mov     dword ptr [esp+84h], 0
pxor    xmm0, xmmword ptr [esp+160h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0c8h]
punpcklqdq xmm5, xmm0
pxor    xmm5, xmm1
movaps  xmmword ptr [esp+100h], xmm5
movd    eax, xmm5
jnz     loc_37a2ce60
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a7fac0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a2d8f5
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
retn
pusha
mov     word ptr [edx+ecx*2-261435c0h], ds
retn
pop     ebp
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     edx, [ebp+0ch]
sub     esp, 98h
push    esi
push    edi
cmp     edx, 2bh
jnb     short loc_37a30339
mov     eax, [ebp+10h]
xorps   xmm0, xmm0
movups  xmmword ptr [eax], xmm0
movups  xmmword ptr [eax+10h], xmm0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+14h]
mov     esi, [ebp+8]
push    ecx
mov     ecx, esi
push    dword ptr [edi]
call    sub_37a181e0
mov     ecx, [edi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     edx, [edi]
mov     [esp+84h], edx
mov     dword ptr [esp+54h], 80000h
mov     eax, [edx+0c0h]
xor     eax, [esi+23h]
mov     ecx, [edx+2ch]
xor     ecx, [edx+0ch]
mov     [esp+78h], eax
mov     eax, [edx+0c4h]
xor     eax, [esi+27h]
mov     esi, [edx+20h]
xor     esi, [edx]
mov     edi, [edx+0e0h]
mov     [esp+7ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+50h], eax
mov     [esp+5ch], eax
mov     eax, [edx+28h]
xor     eax, [edx+8]
mov     [esp+1ch], ecx
mov     [esp+64h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+18h], eax
mov     [esp+60h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+40h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+44h], eax
mov     eax, [edx+34h]
movq    xmm0, qword ptr [esp+40h]
xor     eax, [edx+14h]
mov     [esp+40h], ecx
mov     [esp+44h], eax
movq    xmm2, qword ptr [esp+40h]
mov     [esp+2ch], edi
mov     [esp+58h], esi
punpcklqdq xmm2, xmm0
nop     dword ptr [eax+00000000h]
movq    xmm0, qword ptr [esp+60h]
mov     eax, esi
movq    xmm1, qword ptr [esp+58h]
and     eax, 1ffff0h
add     edi, eax
punpcklqdq xmm1, xmm0
xor     ecx, ecx
mov     [esp+20h], edi
push    0
movups  xmm3, xmmword ptr [edi]
aesenc  xmm3, xmm1
movaps  xmm1, xmm3
movaps  xmmword ptr [esp+94h], xmm3
pxor    xmm1, xmm2
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    dword ptr [edi+4], xmm0
or      ecx, eax
movhlps xmm1, xmm1
mov     [edi], ecx
movaps  xmm0, xmm1
movd    eax, xmm1
xor     edi, edi
psrldq  xmm0, 4
movd    dword ptr [esp+28h], xmm0
or      edi, eax
movd    eax, xmm0
mov     edx, edi
movaps  xmm0, xmm3
psrldq  xmm0, 4
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 3
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
xor     eax, [esp+28h]
and     edx, 3
mov     ecx, [esp+24h]
shl     edx, 1ch
xor     edx, edi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm3
movd    edx, xmm0
or      ecx, eax
mov     eax, ecx
mov     [esp+18h], ecx
mov     ecx, [esp+30h]
and     eax, 1ffff0h
add     ecx, eax
mov     [esp+70h], edx
mov     [esp+78h], ecx
push    edx
push    0
mov     edi, [ecx]
mov     ecx, [ecx+4]
mov     [esp+34h], ecx
mov     ecx, [esp+38h]
add     ecx, 8
mov     [esp+30h], edi
add     eax, ecx
mov     [esp+2ch], eax
push    edi
mov     ecx, [eax]
mov     eax, [eax+4]
mov     [esp+90h], ecx
mov     [esp+50h], eax
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+38h], eax
mov     edi, edx
push    0
push    dword ptr [esp+30h]
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+40h], eax
push    0
push    dword ptr [esp+34h]
mov     [esp+4ch], edx
call    __allmul
mov     ecx, eax
mov     eax, [esp+30h]
add     ecx, eax
adc     edx, edi
mov     [esp+70h], edx
cmp     edx, edi
ja      short loc_37a3055d
jb      short loc_37a3054b
cmp     ecx, eax
jnb     short loc_37a3055d
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+4ch], 1
jmp     short loc_37a30576
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     [esp+4ch], eax
mov     eax, [esp+30h]
mov     [esp+14h], eax
mov     edx, [esp+38h]
xor     eax, eax
mov     edi, [esp+3ch]
add     eax, edx
mov     [esp+38h], eax
adc     ecx, edi
mov     [esp+3ch], ecx
cmp     ecx, edi
ja      short loc_37a305a5
jb      short loc_37a30596
cmp     eax, edx
jnb     short loc_37a305a5
mov     edi, 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a305c3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+88h], xmm0
mov     eax, [esp+8ch]
mov     edi, [esp+88h]
mov     [esp+30h], eax
push    0
push    dword ptr [esp+70h]
push    0
push    dword ptr [esp+34h]
call    __allmul
add     eax, [esp+70h]
mov     ecx, [esp+74h]
adc     edx, 0
movaps  xmm2, xmmword ptr [esp+90h]
add     eax, [esp+14h]
adc     edx, [esp+4ch]
add     eax, edi
mov     edi, [esp+50h]
adc     edx, [esp+30h]
add     esi, eax
mov     eax, [esp+1ch]
adc     edi, edx
mov     [ecx], esi
mov     edx, [esp+18h]
add     edx, [esp+38h]
mov     [ecx+4], edi
mov     ecx, edx
adc     eax, [esp+3ch]
xor     ecx, [esp+78h]
xor     edi, [esp+28h]
xor     esi, [esp+24h]
mov     [esp+18h], edx
mov     edx, [esp+20h]
mov     [esp+1ch], eax
xor     eax, [esp+7ch]
mov     [esp+50h], edi
mov     [edx], ecx
mov     ecx, edx
mov     edx, [esp+18h]
xor     edx, [esp+80h]
mov     [esp+5ch], edi
mov     edi, [esp+2ch]
mov     [ecx+4], eax
mov     eax, [esp+1ch]
xor     eax, [esp+40h]
sub     dword ptr [esp+54h], 1
mov     [esp+58h], esi
mov     [esp+18h], edx
mov     [esp+60h], edx
mov     [esp+1ch], eax
mov     [esp+64h], eax
jnz     loc_37a30400
mov     esi, [esp+84h]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    loc_37a7ed80
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 168h
push    esi
push    edi
cmp     eax, 2bh
jnb     short loc_37a319cb
push    60h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 3
jb      short loc_37a319d0
mov     eax, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     [esp+34h], edi
mov     ecx, [edx+0e0h]
mov     [esp+70h], ecx
mov     eax, [edi+0e0h]
mov     ecx, [esi+0e0h]
mov     edi, [ebp+8]
mov     [esp+78h], eax
mov     eax, [ebp+8]
mov     [esp+74h], ecx
mov     ecx, [edx+0c0h]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
xor     eax, [edi+27h]
mov     [esp+14h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
movq    xmm0, qword ptr [esp+10h]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
movq    xmm3, qword ptr [esp+10h]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [ebp+0ch]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, edi
mov     [esp+10h], ecx
movq    xmm6, qword ptr [esp+10h]
punpcklqdq xmm6, xmm0
mov     ecx, [eax+edx+23h]
xor     ecx, [esi+0c0h]
mov     eax, [eax+edx+27h]
xor     eax, [esi+0c4h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
movaps  xmmword ptr [esp+130h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+140h], xmm1
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
movaps  xmmword ptr [esp+0e0h], xmm3
punpcklqdq xmm1, xmm0
mov     eax, [esi+3ch]
xorps   xmm2, xmm2
xor     eax, [esi+1ch]
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+10h], ecx
movq    xmm0, qword ptr [esp+10h]
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, edi
mov     edi, [esp+34h]
mov     [esp+10h], ecx
movq    xmm5, qword ptr [esp+10h]
mov     ecx, [eax+edx*2+23h]
xor     ecx, [edi+0c0h]
mov     eax, [eax+edx*2+27h]
xor     eax, [edi+0c4h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+14h], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+14h], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
movaps  xmmword ptr [esp+150h], xmm2
movq    xmm2, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm4, qword ptr [esp+10h]
movaps  xmmword ptr [esp+0d0h], xmm1
movaps  xmmword ptr [esp+100h], xmm2
punpcklqdq xmm4, xmm0
movd    esi, xmm3
mov     dword ptr [esp+3ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+4ch], 0
movd    eax, xmm2
mov     dword ptr [esp+84h], 0
mov     dword ptr [esp+34h], 80000h
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
and     eax, 1ffff0h
and     ecx, 1ffff0h
add     eax, [esp+78h]
and     esi, 1ffff0h
add     ecx, [esp+74h]
add     esi, [esp+70h]
mov     [esp+18h], eax
mov     [esp+1ch], ecx
movups  xmm0, xmmword ptr [ecx]
xor     ecx, ecx
movups  xmm7, xmmword ptr [esi]
movaps  xmmword ptr [esp+0f0h], xmm0
movups  xmm0, xmmword ptr [eax]
aesenc  xmm7, xmm3
movaps  xmmword ptr [esp+110h], xmm0
movaps  xmm1, xmm7
pxor    xmm1, xmm6
movaps  xmm3, xmmword ptr [esp+0f0h]
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    dword ptr [esi+4], xmm0
or      ecx, eax
movhlps xmm1, xmm1
mov     [esi], ecx
movaps  xmm0, xmm1
aesenc  xmm3, xmmword ptr [esp+0d0h]
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
movaps  xmm1, xmm3
mov     [esp+24h], esi
pxor    xmm1, xmm5
xor     esi, esi
movaps  xmmword ptr [esp+120h], xmm7
or      esi, eax
movaps  xmmword ptr [esp+0f0h], xmm3
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movaps  xmm0, xmm1
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 3
add     al, al
psrldq  xmm0, 4
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
xor     eax, eax
sar     edx, cl
xor     eax, edi
mov     ecx, [esp+24h]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     esi, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+1ch]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movzx   ecx, dl
shr     eax, 18h
shr     ecx, 3
mov     al, dl
and     ecx, 0ch
movaps  xmm5, xmmword ptr [esp+110h]
and     al, 1
add     al, al
mov     edx, 7531h
or      ecx, eax
xor     eax, eax
sar     edx, cl
xor     eax, edi
mov     ecx, [esp+1ch]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     esi, esi
aesenc  xmm5, xmm2
mov     [ecx+0ch], eax
movaps  xmm1, xmm5
mov     [ecx+8], edx
pxor    xmm1, xmm4
xor     ecx, ecx
movd    eax, xmm1
movaps  xmm0, xmm1
movaps  xmmword ptr [esp+110h], xmm5
psrldq  xmm0, 4
or      ecx, eax
movhlps xmm1, xmm1
mov     eax, [esp+18h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movaps  xmm0, xmm7
movd    eax, xmm1
psrldq  xmm0, 4
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 3
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+18h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
mov     [ecx+0ch], eax
movaps  xmm0, xmm3
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm7
psrldq  xmm0, 4
mov     [esp+54h], esi
or      ecx, eax
movd    dword ptr [esp+30h], xmm0
mov     [esp+18h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+70h]
mov     [esp+38h], ecx
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+14h], eax
mov     eax, [ecx+8]
mov     [esp+98h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+9ch], eax
movd    eax, xmm3
mov     [esp+10h], edi
or      ecx, eax
mov     [esp+40h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+74h]
xor     edx, edx
mov     [esp+48h], ecx
movaps  xmm0, xmm5
push    0
push    esi
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0b8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0bch], eax
movd    eax, xmm5
push    0
psrldq  xmm0, 4
or      edx, eax
movd    dword ptr [esp+88h], xmm0
mov     ecx, edx
mov     [esp+64h], edx
and     ecx, 1ffff0h
add     ecx, [esp+84h]
push    edi
mov     [esp+90h], ecx
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0dch], eax
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+20h]
mov     [esp+2ch], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a31f86
jb      short loc_37a31f74
cmp     eax, ecx
jnb     short loc_37a31f86
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a31f9f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+24h], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     edx, [esp+20h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+90h], ecx
adc     eax, [esp+1ch]
mov     [esp+94h], eax
cmp     eax, [esp+1ch]
ja      short loc_37a31fd7
jb      short loc_37a31fc5
cmp     ecx, edx
jnb     short loc_37a31fd7
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a31ff0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+20h], eax
mov     eax, [esp+28h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+58h]
push    esi
push    dword ptr [esp+20h]
call    __allmul
movq    xmm0, qword ptr [esp+90h]
add     edi, eax
mov     eax, [esp+38h]
movq    xmm2, qword ptr [esp+10h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+28h]
add     edi, [esp+20h]
push    dword ptr [esp+34h]
adc     esi, [esp+28h]
mov     [esp+90h], edi
mov     [esp+94h], esi
movq    xmm1, qword ptr [esp+90h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0e8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+44h], 0
pxor    xmm0, xmmword ptr [esp+138h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0a0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+128h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+6ch]
movaps  xmmword ptr [esp+0f0h], xmm2
movd    dword ptr [esp+34h], xmm2
movaps  xmmword ptr [esp+170h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+6ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+70h]
mov     [esp+50h], eax
mov     [esp+64h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a320f7
jb      short loc_37a320e5
cmp     eax, ecx
jnb     short loc_37a320f7
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a32110
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+18h], ecx
mov     ecx, [esp+38h]
mov     [esp+20h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0a8h], ecx
adc     eax, [esp+54h]
mov     [esp+0ach], eax
cmp     eax, [esp+54h]
ja      short loc_37a32148
jb      short loc_37a32136
cmp     ecx, edx
jnb     short loc_37a32148
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a32161
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+28h], eax
mov     eax, [esp+40h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+34h]
push    esi
push    dword ptr [esp+70h]
call    __allmul
movq    xmm0, qword ptr [esp+0a8h]
add     edi, eax
mov     eax, [esp+48h]
movq    xmm2, qword ptr [esp+60h]
adc     esi, edx
add     edi, [esp+20h]
push    0
adc     esi, [esp+1ch]
add     edi, [esp+20h]
push    dword ptr [esp+80h]
adc     esi, [esp+30h]
mov     [esp+0a8h], edi
mov     [esp+0ach], esi
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0d8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+54h], 0
pxor    xmm0, xmmword ptr [esp+148h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0b8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+0f8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movaps  xmmword ptr [esp+0e0h], xmm2
movd    dword ptr [esp+2ch], xmm2
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     esi, [esp+58h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+74h]
mov     [esp+58h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+78h]
mov     [esp+68h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a3226b
jb      short loc_37a32259
cmp     eax, ecx
jnb     short loc_37a3226b
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a32284
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+30h], ecx
mov     ecx, [esp+48h]
mov     [esp+28h], ecx
mov     edx, [esp+58h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c0h], ecx
adc     eax, [esp+40h]
mov     [esp+0c4h], eax
cmp     eax, [esp+40h]
ja      short loc_37a322bc
jb      short loc_37a322aa
cmp     ecx, edx
jnb     short loc_37a322bc
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a322d5
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     eax, [esp+5ch]
mov     [esp+18h], eax
mov     eax, [esp+58h]
mov     [esp+20h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+80h]
push    edi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0c0h]
add     esi, eax
mov     eax, [esp+80h]
movq    xmm2, qword ptr [esp+68h]
adc     edi, edx
add     esi, [esp+28h]
movaps  xmm4, xmmword ptr [esp+110h]
adc     edi, [esp+30h]
add     esi, [esp+20h]
movaps  xmm3, xmmword ptr [esp+0e0h]
adc     edi, [esp+18h]
sub     dword ptr [esp+34h], 1
movaps  xmm5, xmmword ptr [esp+120h]
movaps  xmm6, xmmword ptr [esp+160h]
mov     ecx, [esp+1ch]
mov     [esp+0b8h], esi
mov     esi, [esp+24h]
mov     [esp+0bch], edi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movaps  xmm0, xmm1
mov     dword ptr [esp+84h], 0
pxor    xmm0, xmmword ptr [esp+150h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0c8h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movaps  xmmword ptr [esp+100h], xmm2
movd    eax, xmm2
jnz     loc_37a31c70
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a7ed80
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a323a6
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 1d8h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a3242e
push    80h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+8]
xor     esi, esi
mov     [esp+1ch], eax
push    ecx
mov     ecx, [ebp+14h]
mov     edx, edi
push    dword ptr [ecx+esi*4]
mov     ecx, eax
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     eax, [esp+1ch]
inc     esi
add     eax, edi
mov     [esp+1ch], eax
cmp     esi, 4
jb      short loc_37a32437
mov     eax, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+8ch], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+94h], eax
mov     eax, [ebp+8]
mov     [esp+90h], ecx
mov     ecx, [edi+0e0h]
mov     [esp+9ch], ecx
mov     ecx, [edx+0c0h]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+34h], edi
mov     edi, [ebp+8]
xor     eax, [edi+27h]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm4, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [ebp+0ch]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     [esp+8], ecx
movaps  xmmword ptr [esp+1a0h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     ecx, [eax+edx+23h]
xor     ecx, [esi+0c0h]
mov     eax, [eax+edx+27h]
xor     eax, [esi+0c4h]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+0a0h], xmm1
xorps   xmm1, xmm1
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+140h], xmm4
movaps  xmmword ptr [esp+1b0h], xmm1
mov     [esp+0ch], eax
xorps   xmm1, xmm1
mov     eax, [esi+3ch]
xorps   xmm2, xmm2
xor     eax, [esi+1ch]
mov     [esp+8], ecx
movq    xmm3, qword ptr [esp+8]
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     esi, edi
mov     edi, [esp+34h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [esi+edx*2+27h]
xor     eax, [edi+0c4h]
mov     [esp+8], ecx
movq    xmm7, qword ptr [esp+8]
mov     ecx, [esi+edx*2+23h]
xor     ecx, [edi+0c0h]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
movaps  xmmword ptr [esp+1c0h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
lea     eax, [esi+edx*2]
mov     esi, [ebp+14h]
mov     [esp+8], ecx
mov     ecx, [edx+eax+23h]
movq    xmm6, qword ptr [esp+8]
mov     edx, [esi+0ch]
mov     esi, [ebp+0ch]
punpcklqdq xmm6, xmm0
movaps  xmmword ptr [esp+130h], xmm3
xor     ecx, [edx+0c0h]
mov     eax, [esi+eax+27h]
xor     eax, [edx+0c4h]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
punpcklqdq xmm2, xmm0
movaps  xmmword ptr [esp+150h], xmm1
movaps  xmmword ptr [esp+1d0h], xmm2
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
movaps  xmmword ptr [esp+180h], xmm2
punpcklqdq xmm5, xmm0
movd    esi, xmm4
mov     dword ptr [esp+4ch], 0
movd    edx, xmm3
mov     dword ptr [esp+5ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+44h], 0
movd    eax, xmm2
mov     dword ptr [esp+0bch], 0
mov     dword ptr [esp+34h], 80000h
nop
and     edx, 1ffff0h
and     eax, 1ffff0h
add     edx, [esp+90h]
and     ecx, 1ffff0h
add     eax, [esp+94h]
and     esi, 1ffff0h
add     ecx, [esp+9ch]
add     esi, [esp+8ch]
movups  xmm0, xmmword ptr [edx]
movaps  xmmword ptr [esp+120h], xmm0
movups  xmm0, xmmword ptr [ecx]
movaps  xmmword ptr [esp+170h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+190h], xmm0
movups  xmm0, xmmword ptr [esi]
aesenc  xmm0, xmm4
mov     [esp+14h], eax
movaps  xmm1, xmm0
pxor    xmm1, xmmword ptr [esp+0a0h]
movaps  xmmword ptr [esp+160h], xmm0
movaps  xmm0, xmm1
movaps  xmm4, xmmword ptr [esp+120h]
mov     [esp+18h], ecx
xor     ecx, ecx
psrldq  xmm0, 4
movd    dword ptr [esi+4], xmm0
movd    eax, xmm1
movhlps xmm1, xmm1
movaps  xmm0, xmm1
mov     [esp+20h], edx
or      ecx, eax
psrldq  xmm0, 4
mov     [esi], ecx
movd    edi, xmm0
movd    eax, xmm1
mov     [esp+1ch], esi
xor     esi, esi
aesenc  xmm4, xmm3
or      esi, eax
movaps  xmmword ptr [esp+120h], xmm4
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movaps  xmm1, xmm4
shr     eax, 18h
pxor    xmm1, xmm7
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 3
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+1ch]
xor     eax, edi
and     edx, 3
movaps  xmm0, xmm1
shl     edx, 1ch
xor     edx, esi
psrldq  xmm0, 4
mov     [ecx+0ch], eax
xor     esi, esi
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+20h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movaps  xmm3, xmmword ptr [esp+170h]
aesenc  xmm3, xmmword ptr [esp+150h]
shr     eax, 18h
movaps  xmm1, xmm3
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 3
add     al, al
movaps  xmmword ptr [esp+170h], xmm3
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
pxor    xmm1, xmm6
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+20h]
xor     eax, edi
and     edx, 3
movaps  xmm6, xmmword ptr [esp+190h]
shl     edx, 1ch
movaps  xmm0, xmm1
xor     edx, esi
psrldq  xmm0, 4
mov     [ecx+0ch], eax
xor     esi, esi
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
aesenc  xmm6, xmm2
or      ecx, eax
movaps  xmmword ptr [esp+190h], xmm6
mov     eax, [esp+18h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
movaps  xmm1, xmm6
pxor    xmm1, xmm5
movaps  xmm0, xmm1
or      esi, eax
psrldq  xmm0, 4
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 3
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+18h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     esi, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+14h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movaps  xmm1, xmmword ptr [esp+160h]
shr     eax, 18h
movaps  xmm0, xmm1
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 3
add     al, al
psrldq  xmm0, 4
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
xor     eax, eax
sar     edx, cl
xor     eax, edi
mov     ecx, [esp+14h]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
movaps  xmm0, xmm4
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
xor     edx, edx
psrldq  xmm0, 4
movd    dword ptr [esp+24h], xmm0
movaps  xmm0, xmm3
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+14h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+8ch]
mov     [esp+48h], ecx
movd    dword ptr [esp+30h], xmm0
movaps  xmm0, xmm6
mov     [esp+64h], esi
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+0d0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0d4h], eax
movd    eax, xmm4
mov     [esp+8], edi
psrldq  xmm0, 4
or      ecx, eax
mov     [esp+50h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+90h]
mov     [esp+58h], ecx
mov     eax, [ecx]
mov     [esp+70h], eax
mov     eax, [ecx+4]
mov     [esp+74h], eax
mov     eax, [ecx+8]
mov     [esp+0e8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0ech], eax
movd    eax, xmm3
or      ecx, eax
mov     [esp+38h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+9ch]
mov     [esp+40h], ecx
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+100h], eax
mov     eax, [ecx+0ch]
mov     [esp+104h], eax
movd    eax, xmm6
or      edx, eax
mov     [esp+68h], edx
mov     ecx, edx
movd    dword ptr [esp+98h], xmm0
and     ecx, 1ffff0h
add     ecx, [esp+94h]
push    0
push    esi
push    0
mov     eax, [ecx]
mov     [esp+8ch], eax
mov     eax, [ecx+4]
mov     [esp+90h], eax
mov     eax, [ecx+8]
mov     [esp+124h], eax
mov     eax, [ecx+0ch]
push    edi
mov     [esp+0c8h], ecx
mov     [esp+12ch], eax
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+0b0h], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a32bda
jb      short loc_37a32bc8
cmp     eax, ecx
jnb     short loc_37a32bda
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a32bf3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+18h], ecx
mov     ecx, [esp+28h]
mov     [esp+20h], ecx
mov     edx, [esp+1ch]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c8h], ecx
adc     eax, [esp+0a0h]
mov     [esp+0cch], eax
cmp     eax, [esp+0a0h]
ja      short loc_37a32c31
jb      short loc_37a32c1f
cmp     ecx, edx
jnb     short loc_37a32c31
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a32c53
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0a0h], xmm0
mov     eax, [esp+0a4h]
mov     [esp+1ch], eax
mov     eax, [esp+0a0h]
mov     [esp+14h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+68h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+0c8h]
add     edi, eax
mov     eax, [esp+48h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     edi, [esp+14h]
push    0
adc     esi, [esp+20h]
add     edi, [esp+24h]
push    dword ptr [esp+28h]
adc     esi, [esp+20h]
mov     [esp+0c8h], edi
mov     [esp+0cch], esi
movq    xmm1, qword ptr [esp+0c8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+148h]
movaps  xmm0, xmm1
mov     dword ptr [esp+54h], 0
pxor    xmm0, xmmword ptr [esp+1a8h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0d8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+168h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+7ch]
movaps  xmmword ptr [esp+150h], xmm2
movd    dword ptr [esp+2ch], xmm2
movaps  xmmword ptr [esp+0b0h], xmm0
call    __allmul
mov     edi, [esp+50h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+7ch]
mov     [esp+58h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+80h]
mov     [esp+60h], eax
mov     [esp+74h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a32d5d
jb      short loc_37a32d4b
cmp     eax, ecx
jnb     short loc_37a32d5d
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a32d76
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+28h], ecx
mov     ecx, [esp+48h]
mov     [esp+18h], ecx
mov     edx, [esp+50h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e0h], ecx
adc     eax, [esp+64h]
mov     [esp+0e4h], eax
cmp     eax, [esp+64h]
ja      short loc_37a32dae
jb      short loc_37a32d9c
cmp     ecx, edx
jnb     short loc_37a32dae
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a32dc7
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     eax, [esp+54h]
mov     [esp+20h], eax
mov     eax, [esp+50h]
mov     [esp+14h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+28h]
push    esi
push    dword ptr [esp+80h]
call    __allmul
movq    xmm0, qword ptr [esp+0e0h]
add     edi, eax
mov     eax, [esp+58h]
movq    xmm2, qword ptr [esp+70h]
adc     esi, edx
add     edi, [esp+14h]
push    0
adc     esi, [esp+24h]
add     edi, [esp+1ch]
push    dword ptr [esp+34h]
adc     esi, [esp+30h]
mov     [esp+0e0h], edi
mov     [esp+0e4h], esi
movq    xmm1, qword ptr [esp+0e0h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+138h]
movaps  xmm0, xmm1
mov     dword ptr [esp+64h], 0
pxor    xmm0, xmmword ptr [esp+1b8h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0f0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+128h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+84h]
movaps  xmmword ptr [esp+140h], xmm2
movd    dword ptr [esp+30h], xmm2
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     esi, [esp+38h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+84h]
mov     [esp+68h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+88h]
mov     [esp+48h], eax
mov     [esp+60h], edx
call    __allmul
mov     ecx, [esp+58h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a32eda
jb      short loc_37a32ec8
cmp     eax, ecx
jnb     short loc_37a32eda
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a32ef3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     ecx, [esp+5ch]
mov     [esp+24h], ecx
mov     ecx, [esp+58h]
mov     [esp+28h], ecx
mov     edx, [esp+38h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0f8h], ecx
adc     eax, [esp+50h]
mov     [esp+0fch], eax
cmp     eax, [esp+50h]
ja      short loc_37a32f2b
jb      short loc_37a32f19
cmp     ecx, edx
jnb     short loc_37a32f2b
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a32f44
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     eax, [esp+3ch]
mov     [esp+18h], eax
mov     eax, [esp+38h]
mov     [esp+14h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+34h]
push    edi
push    dword ptr [esp+88h]
call    __allmul
movq    xmm0, qword ptr [esp+0f8h]
add     esi, eax
mov     eax, [esp+40h]
movq    xmm2, qword ptr [esp+78h]
adc     edi, edx
add     esi, [esp+28h]
push    0
adc     edi, [esp+28h]
add     esi, [esp+18h]
push    dword ptr [esp+9ch]
adc     edi, [esp+20h]
mov     [esp+0f8h], esi
mov     [esp+0fch], edi
movq    xmm1, qword ptr [esp+0f8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+158h]
movaps  xmm0, xmm1
mov     dword ptr [esp+4ch], 0
pxor    xmm0, xmmword ptr [esp+1c8h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+108h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+178h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+8ch]
movaps  xmmword ptr [esp+160h], xmm2
movd    dword ptr [esp+28h], xmm2
movaps  xmmword ptr [esp+170h], xmm0
call    __allmul
mov     edi, [esp+68h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+8ch]
mov     [esp+50h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+90h]
mov     [esp+78h], eax
mov     [esp+48h], edx
call    __allmul
mov     ecx, [esp+40h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3305a
jb      short loc_37a33048
cmp     eax, ecx
jnb     short loc_37a3305a
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a33073
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+24h], ecx
mov     ecx, [esp+40h]
mov     [esp+28h], ecx
mov     edx, [esp+68h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+110h], ecx
adc     eax, [esp+38h]
mov     [esp+114h], eax
cmp     eax, [esp+38h]
ja      short loc_37a330a8
jb      short loc_37a33099
cmp     ecx, edx
jnb     short loc_37a330a8
mov     esi, 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a330bd
xorps   xmm0, xmm0
movlpd  qword ptr [esp+68h], xmm0
mov     eax, [esp+6ch]
mov     esi, [esp+68h]
mov     [esp+30h], eax
push    0
push    dword ptr [esp+9ch]
push    0
push    dword ptr [esp+90h]
call    __allmul
movq    xmm0, qword ptr [esp+110h]
add     eax, edi
movq    xmm2, qword ptr [esp+80h]
adc     edx, 0
movaps  xmm5, xmmword ptr [esp+190h]
add     eax, esi
movaps  xmm3, xmmword ptr [esp+130h]
movaps  xmm4, xmmword ptr [esp+140h]
adc     edx, [esp+30h]
add     eax, [esp+28h]
movaps  xmm6, xmmword ptr [esp+160h]
adc     edx, [esp+24h]
sub     dword ptr [esp+34h], 1
movaps  xmm7, xmmword ptr [esp+120h]
mov     ecx, [esp+18h]
mov     esi, [esp+1ch]
mov     [esp+108h], eax
mov     eax, [esp+0b8h]
mov     [esp+10ch], edx
movq    xmm1, qword ptr [esp+108h]
mov     edx, [esp+20h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+180h]
movaps  xmm0, xmm1
mov     dword ptr [esp+0bch], 0
pxor    xmm0, xmmword ptr [esp+1d0h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+118h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movaps  xmmword ptr [esp+180h], xmm2
movd    eax, xmm2
jnz     loc_37a327b0
mov     edi, [ebp+10h]
xor     esi, esi
nop
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a7ed80
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a331a0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     bh, 43h
retfw   0bd0fh
inc     eax
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     edx, [ebp+0ch]
sub     esp, 98h
push    esi
push    edi
cmp     edx, 2bh
jnb     short loc_37a38659
mov     eax, [ebp+10h]
xorps   xmm0, xmm0
movups  xmmword ptr [eax], xmm0
movups  xmmword ptr [eax+10h], xmm0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+14h]
mov     esi, [ebp+8]
push    ecx
mov     ecx, esi
push    dword ptr [edi]
call    sub_37a181e0
mov     ecx, [edi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     edx, [edi]
mov     [esp+84h], edx
mov     dword ptr [esp+54h], 40000h
mov     eax, [edx+0c0h]
xor     eax, [esi+23h]
mov     ecx, [edx+2ch]
xor     ecx, [edx+0ch]
mov     [esp+78h], eax
mov     eax, [edx+0c4h]
xor     eax, [esi+27h]
mov     esi, [edx+20h]
xor     esi, [edx]
mov     edi, [edx+0e0h]
mov     [esp+7ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+50h], eax
mov     [esp+5ch], eax
mov     eax, [edx+28h]
xor     eax, [edx+8]
mov     [esp+1ch], ecx
mov     [esp+64h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+18h], eax
mov     [esp+60h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+40h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+44h], eax
mov     eax, [edx+34h]
movq    xmm0, qword ptr [esp+40h]
xor     eax, [edx+14h]
mov     [esp+40h], ecx
mov     [esp+44h], eax
movq    xmm5, qword ptr [esp+40h]
mov     [esp+2ch], edi
mov     [esp+58h], esi
punpcklqdq xmm5, xmm0
nop     dword ptr [eax+00000000h]
movq    xmm1, qword ptr [esp+60h]
mov     eax, esi
movq    xmm0, qword ptr [esp+58h]
and     eax, 1ffff0h
add     edi, eax
punpcklqdq xmm0, xmm1
push    edi
mov     [esp+24h], edi
call    loc_37a22320
movaps  xmm3, xmm0
xor     ecx, ecx
movaps  xmm2, xmm3
movaps  xmmword ptr [esp+94h], xmm3
pxor    xmm2, xmm5
add     esp, 4
movd    eax, xmm2
movaps  xmm1, xmm2
movhlps xmm2, xmm2
psrldq  xmm1, 4
movaps  xmm0, xmm2
or      ecx, eax
movd    dword ptr [edi+4], xmm1
mov     [edi], ecx
xor     edi, edi
movd    eax, xmm2
psrldq  xmm0, 4
movd    dword ptr [esp+24h], xmm0
or      edi, eax
movd    eax, xmm0
mov     edx, edi
movaps  xmm0, xmm3
psrldq  xmm0, 4
shrd    edx, eax, 18h
push    0
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
xor     eax, [esp+28h]
and     edx, 3
mov     ecx, [esp+24h]
shl     edx, 1ch
xor     edx, edi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm3
movd    edx, xmm0
or      ecx, eax
mov     eax, ecx
mov     [esp+18h], ecx
mov     ecx, [esp+30h]
and     eax, 1ffff0h
add     ecx, eax
mov     [esp+70h], edx
mov     [esp+78h], ecx
push    edx
push    0
mov     edi, [ecx]
mov     ecx, [ecx+4]
mov     [esp+34h], ecx
mov     ecx, [esp+38h]
add     ecx, 8
mov     [esp+30h], edi
add     eax, ecx
mov     [esp+2ch], eax
push    edi
mov     ecx, [eax]
mov     eax, [eax+4]
mov     [esp+90h], ecx
mov     [esp+50h], eax
call    __allmul
mov     [esp+30h], eax
mov     edi, edx
push    0
push    dword ptr [esp+18h]
push    0
push    dword ptr [esp+30h]
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+40h], eax
push    0
push    dword ptr [esp+34h]
mov     [esp+4ch], edx
call    __allmul
mov     ecx, eax
mov     eax, [esp+30h]
add     ecx, eax
adc     edx, edi
mov     [esp+70h], edx
cmp     edx, edi
ja      short loc_37a38881
jb      short loc_37a3886f
cmp     ecx, eax
jnb     short loc_37a38881
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+4ch], 1
jmp     short loc_37a3889a
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     [esp+4ch], eax
mov     eax, [esp+30h]
mov     [esp+14h], eax
mov     edx, [esp+38h]
xor     eax, eax
mov     edi, [esp+3ch]
add     eax, edx
mov     [esp+38h], eax
adc     ecx, edi
mov     [esp+3ch], ecx
cmp     ecx, edi
ja      short loc_37a388c9
jb      short loc_37a388ba
cmp     eax, edx
jnb     short loc_37a388c9
mov     edi, 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a388e7
xorps   xmm0, xmm0
movlpd  qword ptr [esp+88h], xmm0
mov     eax, [esp+8ch]
mov     edi, [esp+88h]
mov     [esp+30h], eax
push    0
push    dword ptr [esp+70h]
push    0
push    dword ptr [esp+34h]
call    __allmul
add     eax, [esp+70h]
mov     ecx, [esp+74h]
adc     edx, 0
movaps  xmm5, xmmword ptr [esp+90h]
add     eax, [esp+14h]
adc     edx, [esp+4ch]
add     eax, edi
mov     edi, [esp+50h]
adc     edx, [esp+30h]
add     esi, eax
mov     eax, [esp+1ch]
adc     edi, edx
mov     [ecx], esi
mov     edx, [esp+18h]
add     edx, [esp+38h]
mov     [ecx+4], edi
mov     ecx, edx
adc     eax, [esp+3ch]
xor     ecx, [esp+78h]
xor     edi, [esp+28h]
xor     esi, [esp+24h]
mov     [esp+18h], edx
mov     edx, [esp+20h]
mov     [esp+1ch], eax
xor     eax, [esp+7ch]
mov     [esp+50h], edi
mov     [edx], ecx
mov     ecx, edx
mov     edx, [esp+18h]
xor     edx, [esp+80h]
mov     [esp+5ch], edi
mov     edi, [esp+2ch]
mov     [ecx+4], eax
mov     eax, [esp+1ch]
xor     eax, [esp+40h]
sub     dword ptr [esp+54h], 1
mov     [esp+58h], esi
mov     [esp+18h], edx
mov     [esp+60h], edx
mov     [esp+1ch], eax
mov     [esp+64h], eax
jnz     loc_37a38720
mov     esi, [esp+84h]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    sub_37a7fac0
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 1d8h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a39c0e
push    80h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+8]
xor     esi, esi
mov     [esp+1ch], eax
push    ecx
mov     ecx, [ebp+14h]
mov     edx, edi
push    dword ptr [ecx+esi*4]
mov     ecx, eax
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     eax, [esp+1ch]
inc     esi
add     eax, edi
mov     [esp+1ch], eax
cmp     esi, 4
jb      short loc_37a39c17
mov     eax, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+8ch], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+94h], eax
mov     eax, [ebp+8]
mov     [esp+90h], ecx
mov     ecx, [edi+0e0h]
mov     [esp+9ch], ecx
mov     ecx, [edx+0c0h]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+34h], edi
mov     edi, [ebp+8]
xor     eax, [edi+27h]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm4, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [ebp+0ch]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     [esp+8], ecx
movaps  xmmword ptr [esp+1a0h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     ecx, [eax+edx+23h]
xor     ecx, [esi+0c0h]
mov     eax, [eax+edx+27h]
xor     eax, [esi+0c4h]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+0a0h], xmm1
xorps   xmm1, xmm1
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+140h], xmm4
movaps  xmmword ptr [esp+1b0h], xmm1
mov     [esp+0ch], eax
xorps   xmm1, xmm1
mov     eax, [esi+3ch]
xorps   xmm2, xmm2
xor     eax, [esi+1ch]
mov     [esp+8], ecx
movq    xmm3, qword ptr [esp+8]
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     esi, edi
mov     edi, [esp+34h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [esi+edx*2+27h]
xor     eax, [edi+0c4h]
mov     [esp+8], ecx
movq    xmm7, qword ptr [esp+8]
mov     ecx, [esi+edx*2+23h]
xor     ecx, [edi+0c0h]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
movaps  xmmword ptr [esp+1c0h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
lea     eax, [esi+edx*2]
mov     esi, [ebp+14h]
mov     [esp+8], ecx
mov     ecx, [edx+eax+23h]
movq    xmm6, qword ptr [esp+8]
mov     edx, [esi+0ch]
mov     esi, [ebp+0ch]
punpcklqdq xmm6, xmm0
movaps  xmmword ptr [esp+130h], xmm3
xor     ecx, [edx+0c0h]
mov     eax, [esi+eax+27h]
xor     eax, [edx+0c4h]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
punpcklqdq xmm2, xmm0
movaps  xmmword ptr [esp+150h], xmm1
movaps  xmmword ptr [esp+1d0h], xmm2
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
movaps  xmmword ptr [esp+180h], xmm2
punpcklqdq xmm5, xmm0
movd    esi, xmm4
mov     dword ptr [esp+4ch], 0
movd    edx, xmm3
mov     dword ptr [esp+5ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+44h], 0
movd    eax, xmm2
mov     dword ptr [esp+0bch], 0
mov     dword ptr [esp+34h], 40000h
nop
and     edx, 1ffff0h
and     eax, 1ffff0h
add     edx, [esp+90h]
and     ecx, 1ffff0h
add     eax, [esp+94h]
and     esi, 1ffff0h
add     ecx, [esp+9ch]
add     esi, [esp+8ch]
movups  xmm0, xmmword ptr [edx]
movaps  xmmword ptr [esp+120h], xmm0
movups  xmm0, xmmword ptr [ecx]
movaps  xmmword ptr [esp+170h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+190h], xmm0
movups  xmm0, xmmword ptr [esi]
aesenc  xmm0, xmm4
mov     [esp+14h], eax
movaps  xmm1, xmm0
pxor    xmm1, xmmword ptr [esp+0a0h]
movaps  xmmword ptr [esp+160h], xmm0
movaps  xmm0, xmm1
movaps  xmm4, xmmword ptr [esp+120h]
mov     [esp+18h], ecx
xor     ecx, ecx
psrldq  xmm0, 4
movd    dword ptr [esi+4], xmm0
movd    eax, xmm1
movhlps xmm1, xmm1
movaps  xmm0, xmm1
mov     [esp+20h], edx
or      ecx, eax
psrldq  xmm0, 4
mov     [esi], ecx
movd    edi, xmm0
movd    eax, xmm1
mov     [esp+1ch], esi
xor     esi, esi
aesenc  xmm4, xmm3
or      esi, eax
movaps  xmmword ptr [esp+120h], xmm4
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movaps  xmm1, xmm4
shr     eax, 18h
pxor    xmm1, xmm7
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+1ch]
xor     eax, edi
and     edx, 3
movaps  xmm0, xmm1
shl     edx, 1ch
xor     edx, esi
psrldq  xmm0, 4
mov     [ecx+0ch], eax
xor     esi, esi
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+20h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movaps  xmm3, xmmword ptr [esp+170h]
aesenc  xmm3, xmmword ptr [esp+150h]
shr     eax, 18h
movaps  xmm1, xmm3
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
movaps  xmmword ptr [esp+170h], xmm3
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
pxor    xmm1, xmm6
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+20h]
xor     eax, edi
and     edx, 3
movaps  xmm6, xmmword ptr [esp+190h]
shl     edx, 1ch
movaps  xmm0, xmm1
xor     edx, esi
psrldq  xmm0, 4
mov     [ecx+0ch], eax
xor     esi, esi
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
aesenc  xmm6, xmm2
or      ecx, eax
movaps  xmmword ptr [esp+190h], xmm6
mov     eax, [esp+18h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
movaps  xmm1, xmm6
pxor    xmm1, xmm5
movaps  xmm0, xmm1
or      esi, eax
psrldq  xmm0, 4
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+18h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     esi, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+14h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movaps  xmm1, xmmword ptr [esp+160h]
shr     eax, 18h
movaps  xmm0, xmm1
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
psrldq  xmm0, 4
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
xor     eax, eax
sar     edx, cl
xor     eax, edi
mov     ecx, [esp+14h]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
movaps  xmm0, xmm4
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
xor     edx, edx
psrldq  xmm0, 4
movd    dword ptr [esp+24h], xmm0
movaps  xmm0, xmm3
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+14h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+8ch]
mov     [esp+48h], ecx
movd    dword ptr [esp+30h], xmm0
movaps  xmm0, xmm6
mov     [esp+64h], esi
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+0d0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0d4h], eax
movd    eax, xmm4
mov     [esp+8], edi
psrldq  xmm0, 4
or      ecx, eax
mov     [esp+50h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+90h]
mov     [esp+58h], ecx
mov     eax, [ecx]
mov     [esp+70h], eax
mov     eax, [ecx+4]
mov     [esp+74h], eax
mov     eax, [ecx+8]
mov     [esp+0e8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0ech], eax
movd    eax, xmm3
or      ecx, eax
mov     [esp+38h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+9ch]
mov     [esp+40h], ecx
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+100h], eax
mov     eax, [ecx+0ch]
mov     [esp+104h], eax
movd    eax, xmm6
or      edx, eax
mov     [esp+68h], edx
mov     ecx, edx
movd    dword ptr [esp+98h], xmm0
and     ecx, 1ffff0h
add     ecx, [esp+94h]
push    0
push    esi
push    0
mov     eax, [ecx]
mov     [esp+8ch], eax
mov     eax, [ecx+4]
mov     [esp+90h], eax
mov     eax, [ecx+8]
mov     [esp+124h], eax
mov     eax, [ecx+0ch]
push    edi
mov     [esp+0c8h], ecx
mov     [esp+12ch], eax
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+0b0h], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3a3ba
jb      short loc_37a3a3a8
cmp     eax, ecx
jnb     short loc_37a3a3ba
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a3a3d3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+18h], ecx
mov     ecx, [esp+28h]
mov     [esp+20h], ecx
mov     edx, [esp+1ch]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c8h], ecx
adc     eax, [esp+0a0h]
mov     [esp+0cch], eax
cmp     eax, [esp+0a0h]
ja      short loc_37a3a411
jb      short loc_37a3a3ff
cmp     ecx, edx
jnb     short loc_37a3a411
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a3a433
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0a0h], xmm0
mov     eax, [esp+0a4h]
mov     [esp+1ch], eax
mov     eax, [esp+0a0h]
mov     [esp+14h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+68h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+0c8h]
add     edi, eax
mov     eax, [esp+48h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     edi, [esp+14h]
push    0
adc     esi, [esp+20h]
add     edi, [esp+24h]
push    dword ptr [esp+28h]
adc     esi, [esp+20h]
mov     [esp+0c8h], edi
mov     [esp+0cch], esi
movq    xmm1, qword ptr [esp+0c8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+148h]
movaps  xmm0, xmm1
mov     dword ptr [esp+54h], 0
pxor    xmm0, xmmword ptr [esp+1a8h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0d8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+168h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+7ch]
movaps  xmmword ptr [esp+150h], xmm2
movd    dword ptr [esp+2ch], xmm2
movaps  xmmword ptr [esp+0b0h], xmm0
call    __allmul
mov     edi, [esp+50h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+7ch]
mov     [esp+58h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+80h]
mov     [esp+60h], eax
mov     [esp+74h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3a53d
jb      short loc_37a3a52b
cmp     eax, ecx
jnb     short loc_37a3a53d
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a3a556
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+28h], ecx
mov     ecx, [esp+48h]
mov     [esp+18h], ecx
mov     edx, [esp+50h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e0h], ecx
adc     eax, [esp+64h]
mov     [esp+0e4h], eax
cmp     eax, [esp+64h]
ja      short loc_37a3a58e
jb      short loc_37a3a57c
cmp     ecx, edx
jnb     short loc_37a3a58e
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a3a5a7
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     eax, [esp+54h]
mov     [esp+20h], eax
mov     eax, [esp+50h]
mov     [esp+14h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+28h]
push    esi
push    dword ptr [esp+80h]
call    __allmul
movq    xmm0, qword ptr [esp+0e0h]
add     edi, eax
mov     eax, [esp+58h]
movq    xmm2, qword ptr [esp+70h]
adc     esi, edx
add     edi, [esp+14h]
push    0
adc     esi, [esp+24h]
add     edi, [esp+1ch]
push    dword ptr [esp+34h]
adc     esi, [esp+30h]
mov     [esp+0e0h], edi
mov     [esp+0e4h], esi
movq    xmm1, qword ptr [esp+0e0h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+138h]
movaps  xmm0, xmm1
mov     dword ptr [esp+64h], 0
pxor    xmm0, xmmword ptr [esp+1b8h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0f0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+128h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+84h]
movaps  xmmword ptr [esp+140h], xmm2
movd    dword ptr [esp+30h], xmm2
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     esi, [esp+38h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+84h]
mov     [esp+68h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+88h]
mov     [esp+48h], eax
mov     [esp+60h], edx
call    __allmul
mov     ecx, [esp+58h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a3a6ba
jb      short loc_37a3a6a8
cmp     eax, ecx
jnb     short loc_37a3a6ba
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a3a6d3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     ecx, [esp+5ch]
mov     [esp+24h], ecx
mov     ecx, [esp+58h]
mov     [esp+28h], ecx
mov     edx, [esp+38h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0f8h], ecx
adc     eax, [esp+50h]
mov     [esp+0fch], eax
cmp     eax, [esp+50h]
ja      short loc_37a3a70b
jb      short loc_37a3a6f9
cmp     ecx, edx
jnb     short loc_37a3a70b
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a3a724
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     eax, [esp+3ch]
mov     [esp+18h], eax
mov     eax, [esp+38h]
mov     [esp+14h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+34h]
push    edi
push    dword ptr [esp+88h]
call    __allmul
movq    xmm0, qword ptr [esp+0f8h]
add     esi, eax
mov     eax, [esp+40h]
movq    xmm2, qword ptr [esp+78h]
adc     edi, edx
add     esi, [esp+28h]
push    0
adc     edi, [esp+28h]
add     esi, [esp+18h]
push    dword ptr [esp+9ch]
adc     edi, [esp+20h]
mov     [esp+0f8h], esi
mov     [esp+0fch], edi
movq    xmm1, qword ptr [esp+0f8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+158h]
movaps  xmm0, xmm1
mov     dword ptr [esp+4ch], 0
pxor    xmm0, xmmword ptr [esp+1c8h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+108h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+178h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+8ch]
movaps  xmmword ptr [esp+160h], xmm2
movd    dword ptr [esp+28h], xmm2
movaps  xmmword ptr [esp+170h], xmm0
call    __allmul
mov     edi, [esp+68h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+8ch]
mov     [esp+50h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+90h]
mov     [esp+78h], eax
mov     [esp+48h], edx
call    __allmul
mov     ecx, [esp+40h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3a83a
jb      short loc_37a3a828
cmp     eax, ecx
jnb     short loc_37a3a83a
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a3a853
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+24h], ecx
mov     ecx, [esp+40h]
mov     [esp+28h], ecx
mov     edx, [esp+68h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+110h], ecx
adc     eax, [esp+38h]
mov     [esp+114h], eax
cmp     eax, [esp+38h]
ja      short loc_37a3a888
jb      short loc_37a3a879
cmp     ecx, edx
jnb     short loc_37a3a888
mov     esi, 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a3a89d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+68h], xmm0
mov     eax, [esp+6ch]
mov     esi, [esp+68h]
mov     [esp+30h], eax
push    0
push    dword ptr [esp+9ch]
push    0
push    dword ptr [esp+90h]
call    __allmul
movq    xmm0, qword ptr [esp+110h]
add     eax, edi
movq    xmm2, qword ptr [esp+80h]
adc     edx, 0
movaps  xmm5, xmmword ptr [esp+190h]
add     eax, esi
movaps  xmm3, xmmword ptr [esp+130h]
movaps  xmm4, xmmword ptr [esp+140h]
adc     edx, [esp+30h]
add     eax, [esp+28h]
movaps  xmm6, xmmword ptr [esp+160h]
adc     edx, [esp+24h]
sub     dword ptr [esp+34h], 1
movaps  xmm7, xmmword ptr [esp+120h]
mov     ecx, [esp+18h]
mov     esi, [esp+1ch]
mov     [esp+108h], eax
mov     eax, [esp+0b8h]
mov     [esp+10ch], edx
movq    xmm1, qword ptr [esp+108h]
mov     edx, [esp+20h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+180h]
movaps  xmm0, xmm1
mov     dword ptr [esp+0bch], 0
pxor    xmm0, xmmword ptr [esp+1d0h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+118h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movaps  xmmword ptr [esp+180h], xmm2
movd    eax, xmm2
jnz     loc_37a39f90
mov     edi, [ebp+10h]
xor     esi, esi
nop
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a7ed80
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a3a980
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 178h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a3bb5b
push    60h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+8]
xor     esi, esi
mov     [esp+14h], eax
push    ecx
mov     ecx, [ebp+14h]
mov     edx, edi
push    dword ptr [ecx+esi*4]
mov     ecx, eax
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     eax, [esp+14h]
inc     esi
add     eax, edi
mov     [esp+14h], eax
cmp     esi, 3
jb      short loc_37a3bb64
mov     eax, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     [esp+34h], edi
mov     ecx, [edx+0e0h]
mov     [esp+74h], ecx
mov     eax, [edi+0e0h]
mov     ecx, [esi+0e0h]
mov     edi, [ebp+8]
mov     [esp+7ch], eax
mov     eax, [ebp+8]
mov     [esp+78h], ecx
mov     ecx, [edx+0c0h]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
xor     eax, [edi+27h]
mov     [esp+0ch], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm2, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [ebp+0ch]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     [esp+8], ecx
movaps  xmmword ptr [esp+130h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     ecx, [eax+edx+23h]
xor     ecx, [esi+0c0h]
mov     eax, [eax+edx+27h]
xor     eax, [esi+0c4h]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
movaps  xmmword ptr [esp+120h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movaps  xmmword ptr [esp+140h], xmm1
movq    xmm1, qword ptr [esp+8]
movaps  xmmword ptr [esp+0d0h], xmm2
mov     eax, [esi+3ch]
xorps   xmm3, xmm3
xor     eax, [esi+1ch]
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     edi, [esp+34h]
mov     [esp+8], ecx
movq    xmm7, qword ptr [esp+8]
mov     ecx, [eax+edx*2+23h]
mov     eax, [eax+edx*2+27h]
xor     ecx, [edi+0c0h]
xor     eax, [edi+0c4h]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm6, qword ptr [esp+8]
movaps  xmmword ptr [esp+0f0h], xmm1
movaps  xmmword ptr [esp+110h], xmm7
movaps  xmmword ptr [esp+160h], xmm3
movaps  xmmword ptr [esp+100h], xmm5
punpcklqdq xmm6, xmm0
movd    edx, xmm2
mov     dword ptr [esp+3ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+4ch], 0
movd    eax, xmm5
mov     dword ptr [esp+84h], 0
mov     dword ptr [esp+34h], 40000h
nop     dword ptr [eax+eax+00h]
and     eax, 1ffff0h
and     ecx, 1ffff0h
add     eax, [esp+7ch]
and     edx, 1ffff0h
add     ecx, [esp+78h]
add     edx, [esp+74h]
mov     [esp+18h], eax
movups  xmm4, xmmword ptr [eax]
movups  xmm3, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [edx]
mov     [esp+1ch], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
mov     [esp+20h], edx
pshufd  xmm0, xmm1, 0aah
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
movd    edx, xmm0
pshufd  xmm0, xmm1, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+24h], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movd    xmm1, edx
punpckldq xmm1, xmm2
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm7, ecx
punpckldq xmm7, xmm0
movaps  xmmword ptr [esp+0e0h], xmm7
movaps  xmm0, xmmword ptr [esp+0e0h]
xor     ecx, ecx
punpckldq xmm0, xmm1
xor     esi, esi
pxor    xmm0, xmmword ptr [esp+0d0h]
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+0e0h], xmm0
pxor    xmm1, xmmword ptr [esp+120h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+20h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm3, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
xor     eax, eax
sar     edx, cl
mov     ecx, [esp+20h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
mov     edx, ds:dword_37affd40[ecx*4]
movzx   eax, al
movd    xmm2, edi
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm3, ecx
xor     ecx, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+0f0h]
movaps  xmm1, xmm3
movaps  xmmword ptr [esp+150h], xmm3
pxor    xmm1, xmmword ptr [esp+110h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+1ch]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm4, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+1ch]
and     edx, 3
shl     edx, 1ch
xor     eax, edi
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
mov     [esp+24h], edx
pshufd  xmm0, xmm4, 0ffh
movd    eax, xmm4
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm4, ecx
xor     ecx, ecx
punpckldq xmm4, xmm0
punpckldq xmm4, xmm1
pxor    xmm4, xmm5
movaps  xmm1, xmm4
movaps  xmmword ptr [esp+170h], xmm4
pxor    xmm1, xmm6
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+18h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
movaps  xmm1, xmmword ptr [esp+0e0h]
mov     al, dl
and     al, 1
movzx   ecx, dl
add     al, al
shr     ecx, 2
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
movaps  xmm0, xmm1
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+18h]
xor     eax, edi
and     edx, 3
psrldq  xmm0, 4
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
mov     [ecx+0ch], eax
movaps  xmm0, xmm3
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
xor     edx, edx
psrldq  xmm0, 4
push    0
or      ecx, eax
movd    dword ptr [esp+34h], xmm0
mov     [esp+1ch], ecx
movaps  xmm0, xmm4
and     ecx, 1ffff0h
psrldq  xmm0, 4
add     ecx, [esp+78h]
mov     [esp+3ch], ecx
push    esi
push    0
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+18h], eax
mov     eax, [ecx+8]
mov     [esp+0a4h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0a8h], eax
movd    eax, xmm3
push    edi
mov     [esp+64h], esi
or      ecx, eax
mov     [esp+18h], edi
mov     [esp+50h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+88h]
mov     [esp+58h], ecx
movd    dword ptr [esp+34h], xmm0
mov     eax, [ecx]
mov     [esp+70h], eax
mov     eax, [ecx+4]
mov     [esp+74h], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
mov     [esp+0c4h], eax
movd    eax, xmm4
or      edx, eax
mov     ecx, edx
mov     [esp+68h], edx
and     ecx, 1ffff0h
add     ecx, [esp+8ch]
mov     [esp+90h], ecx
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0dch], eax
call    __allmul
mov     [esp+28h], eax
mov     esi, edx
push    0
push    dword ptr [esp+1ch]
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+2ch], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3c4a3
jb      short loc_37a3c491
cmp     eax, ecx
jnb     short loc_37a3c4a3
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a3c4bc
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+14h], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     edx, [esp+20h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+90h], ecx
adc     eax, [esp+1ch]
mov     [esp+94h], eax
cmp     eax, [esp+1ch]
ja      short loc_37a3c4f4
jb      short loc_37a3c4e2
cmp     ecx, edx
jnb     short loc_37a3c4f4
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a3c50d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+1ch], eax
mov     eax, [esp+28h]
mov     [esp+20h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+58h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+90h]
add     edi, eax
mov     eax, [esp+38h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+18h]
add     edi, [esp+24h]
push    dword ptr [esp+34h]
adc     esi, [esp+24h]
mov     [esp+90h], edi
mov     [esp+94h], esi
movq    xmm1, qword ptr [esp+90h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0d8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+44h], 0
pxor    xmm0, xmmword ptr [esp+138h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0a0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+0e8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+6ch]
movaps  xmmword ptr [esp+0e0h], xmm2
movd    dword ptr [esp+30h], xmm2
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+6ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+70h]
mov     [esp+50h], eax
mov     [esp+64h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3c614
jb      short loc_37a3c602
cmp     eax, ecx
jnb     short loc_37a3c614
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a3c62d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+14h], ecx
mov     ecx, [esp+38h]
mov     [esp+18h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0a8h], ecx
adc     eax, [esp+54h]
mov     [esp+0ach], eax
cmp     eax, [esp+54h]
ja      short loc_37a3c665
jb      short loc_37a3c653
cmp     ecx, edx
jnb     short loc_37a3c665
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a3c67e
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+28h], eax
mov     eax, [esp+40h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+34h]
push    esi
push    dword ptr [esp+70h]
call    __allmul
movq    xmm0, qword ptr [esp+0a8h]
add     edi, eax
mov     eax, [esp+48h]
movq    xmm2, qword ptr [esp+60h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+18h]
add     edi, [esp+20h]
push    dword ptr [esp+28h]
adc     esi, [esp+30h]
mov     [esp+0a8h], edi
mov     [esp+0ach], esi
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0f8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+54h], 0
pxor    xmm0, xmmword ptr [esp+148h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0b8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+158h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movaps  xmmword ptr [esp+100h], xmm2
movd    dword ptr [esp+2ch], xmm2
movaps  xmmword ptr [esp+120h], xmm0
call    __allmul
mov     esi, [esp+58h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+74h]
mov     [esp+58h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+78h]
mov     [esp+68h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a3c785
jb      short loc_37a3c773
cmp     eax, ecx
jnb     short loc_37a3c785
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a3c79e
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+30h], ecx
mov     ecx, [esp+48h]
mov     [esp+28h], ecx
mov     edx, [esp+58h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c0h], ecx
adc     eax, [esp+40h]
mov     [esp+0c4h], eax
cmp     eax, [esp+40h]
ja      short loc_37a3c7d6
jb      short loc_37a3c7c4
cmp     ecx, edx
jnb     short loc_37a3c7d6
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a3c7ef
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     eax, [esp+5ch]
mov     [esp+14h], eax
mov     eax, [esp+58h]
mov     [esp+18h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+28h]
push    edi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0c0h]
add     esi, eax
mov     eax, [esp+80h]
movq    xmm5, qword ptr [esp+68h]
adc     edi, edx
add     esi, [esp+28h]
movaps  xmm6, xmmword ptr [esp+170h]
adc     edi, [esp+30h]
add     esi, [esp+18h]
mov     ecx, [esp+1ch]
adc     edi, [esp+14h]
sub     dword ptr [esp+34h], 1
mov     edx, [esp+20h]
mov     [esp+0b8h], esi
mov     [esp+0bch], edi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movaps  xmm0, xmm1
mov     dword ptr [esp+84h], 0
pxor    xmm0, xmmword ptr [esp+160h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0c8h]
punpcklqdq xmm5, xmm0
pxor    xmm5, xmm1
movaps  xmmword ptr [esp+100h], xmm5
movd    eax, xmm5
jnz     loc_37a3be10
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a7fac0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a3c8a5
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 1e8h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a3c92e
push    80h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+8]
xor     esi, esi
mov     [esp+10h], eax
push    ecx
mov     ecx, [ebp+14h]
mov     edx, edi
push    dword ptr [ecx+esi*4]
mov     ecx, eax
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     eax, [esp+10h]
inc     esi
add     eax, edi
mov     [esp+10h], eax
cmp     esi, 4
jb      short loc_37a3c937
mov     eax, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+80h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+88h], eax
mov     eax, [ebp+8]
mov     [esp+8ch], ecx
mov     ecx, [edi+0e0h]
mov     [esp+84h], ecx
mov     ecx, [edx+0c0h]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+34h], edi
mov     edi, [ebp+8]
xor     eax, [edi+27h]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm3, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [ebp+0ch]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     [esp+8], ecx
movaps  xmmword ptr [esp+180h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     ecx, [eax+edx+23h]
xor     ecx, [esi+0c0h]
mov     eax, [eax+edx+27h]
xor     eax, [esi+0c4h]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+0a0h], xmm1
xorps   xmm1, xmm1
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+120h], xmm3
movaps  xmmword ptr [esp+190h], xmm1
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     esi, edi
mov     edi, [esp+34h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [esi+edx*2+27h]
xor     eax, [edi+0c4h]
mov     [esp+8], ecx
movq    xmm1, qword ptr [esp+8]
mov     ecx, [esi+edx*2+23h]
xor     ecx, [edi+0c0h]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
movaps  xmmword ptr [esp+170h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
movaps  xmmword ptr [esp+1b0h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
lea     eax, [esi+edx*2]
mov     esi, [ebp+14h]
mov     [esp+8], ecx
mov     ecx, [edx+eax+23h]
movq    xmm4, qword ptr [esp+8]
mov     edx, [esi+0ch]
mov     esi, [ebp+0ch]
punpcklqdq xmm4, xmm0
movaps  xmmword ptr [esp+90h], xmm4
xorps   xmm4, xmm4
xor     ecx, [edx+0c0h]
mov     eax, [esi+eax+27h]
xor     eax, [edx+0c4h]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
punpcklqdq xmm4, xmm0
movaps  xmmword ptr [esp+140h], xmm2
movaps  xmmword ptr [esp+150h], xmm1
movaps  xmmword ptr [esp+1d0h], xmm4
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm6, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm6, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm7, qword ptr [esp+8]
movaps  xmmword ptr [esp+160h], xmm6
punpcklqdq xmm7, xmm0
movd    esi, xmm3
mov     dword ptr [esp+4ch], 0
movd    edx, xmm2
mov     dword ptr [esp+3ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+54h], 0
movd    eax, xmm6
mov     dword ptr [esp+0b4h], 0
mov     dword ptr [esp+34h], 40000h
nop
and     eax, 1ffff0h
and     ecx, 1ffff0h
add     eax, [esp+88h]
and     esi, 1ffff0h
add     ecx, [esp+84h]
and     edx, 1ffff0h
add     esi, [esp+80h]
mov     [esp+14h], eax
movups  xmm5, xmmword ptr [eax]
movups  xmm4, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [esi]
add     edx, [esp+8ch]
mov     [esp+18h], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
movups  xmm3, xmmword ptr [edx]
mov     [esp+1ch], edx
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
pshufd  xmm0, xmm1, 0aah
movd    edx, xmm0
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
pshufd  xmm0, xmm1, 0ffh
movd    ecx, xmm0
mov     [esp+24h], esi
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
mov     [esp+20h], edx
movaps  xmmword ptr [esp+0b0h], xmm5
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm5, ecx
xor     esi, esi
punpckldq xmm5, xmm0
xor     ecx, ecx
movd    xmm1, edx
movaps  xmmword ptr [esp+130h], xmm5
movaps  xmm0, xmmword ptr [esp+130h]
punpckldq xmm1, xmm2
punpckldq xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+120h]
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+130h], xmm0
pxor    xmm1, xmmword ptr [esp+0a0h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+24h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm3, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
xor     eax, eax
sar     edx, cl
mov     ecx, [esp+24h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
movd    xmm2, edi
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm3, ecx
xor     ecx, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+140h]
movaps  xmm1, xmm3
movaps  xmmword ptr [esp+1a0h], xmm3
pxor    xmm1, xmmword ptr [esp+170h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+1ch]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm4, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+1ch]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     eax, edi
mov     [ecx+8], edx
mov     [ecx+0ch], eax
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     [esp+10h], ecx
mov     [esp+20h], edx
mov     eax, ecx
pshufd  xmm0, xmm4, 0ffh
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm4
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm4, ecx
xor     ecx, ecx
punpckldq xmm4, xmm0
punpckldq xmm4, xmm1
pxor    xmm4, xmmword ptr [esp+150h]
movaps  xmm1, xmm4
movaps  xmmword ptr [esp+1c0h], xmm4
pxor    xmm1, xmmword ptr [esp+90h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+18h]
xor     esi, esi
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
mov     [eax], ecx
movd    edi, xmm0
movd    eax, xmm1
or      esi, eax
movaps  xmm5, xmmword ptr [esp+0b0h]
mov     edx, esi
pshufd  xmm0, xmm5, 55h
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
xor     eax, eax
sar     edx, cl
mov     ecx, [esp+18h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm5, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm5
pshufd  xmm0, xmm5, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm5
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm5
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm5
movd    xmm1, edx
movd    xmm0, esi
xor     esi, esi
movzx   eax, al
movd    xmm2, edi
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm5, ecx
xor     ecx, ecx
punpckldq xmm5, xmm0
punpckldq xmm5, xmm1
pxor    xmm5, xmm6
movaps  xmm1, xmm5
movaps  xmmword ptr [esp+1e0h], xmm5
pxor    xmm1, xmm7
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+14h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
movaps  xmm1, xmmword ptr [esp+130h]
movaps  xmm0, xmm1
or      esi, eax
psrldq  xmm0, 4
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+14h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
mov     [ecx+0ch], eax
movaps  xmm0, xmm3
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
psrldq  xmm0, 4
mov     [esp+5ch], esi
or      ecx, eax
movd    dword ptr [esp+18h], xmm0
mov     [esp+14h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+80h]
mov     [esp+48h], ecx
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+0d0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0d4h], eax
movd    eax, xmm3
mov     [esp+8], edi
or      ecx, eax
mov     [esp+90h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+8ch]
mov     [esp+38h], ecx
mov     eax, [ecx]
xor     edx, edx
mov     [esp+70h], eax
movaps  xmm0, xmm4
mov     eax, [ecx+4]
mov     [esp+74h], eax
mov     eax, [ecx+8]
mov     [esp+0e8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0ech], eax
movd    eax, xmm4
psrldq  xmm0, 4
push    0
or      ecx, eax
movd    dword ptr [esp+34h], xmm0
mov     [esp+44h], ecx
movaps  xmm0, xmm5
and     ecx, 1ffff0h
psrldq  xmm0, 4
add     ecx, [esp+88h]
mov     [esp+54h], ecx
push    esi
push    0
mov     eax, [ecx]
mov     [esp+84h], eax
mov     eax, [ecx+4]
mov     [esp+88h], eax
mov     eax, [ecx+8]
mov     [esp+10ch], eax
mov     eax, [ecx+0ch]
mov     [esp+110h], eax
movd    eax, xmm5
push    edi
movd    dword ptr [esp+30h], xmm0
or      edx, eax
mov     ecx, edx
mov     [esp+70h], edx
and     ecx, 1ffff0h
add     ecx, [esp+98h]
mov     [esp+0c0h], ecx
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+128h], eax
mov     eax, [ecx+0ch]
mov     [esp+12ch], eax
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+18h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+0b0h], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3d58a
jb      short loc_37a3d578
cmp     eax, ecx
jnb     short loc_37a3d58a
mov     dword ptr [esp+24h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a3d5a3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+28h]
mov     [esp+24h], ecx
mov     edx, [esp+10h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c8h], ecx
adc     eax, [esp+0a0h]
mov     [esp+0cch], eax
cmp     eax, [esp+0a0h]
ja      short loc_37a3d5e1
jb      short loc_37a3d5cf
cmp     ecx, edx
jnb     short loc_37a3d5e1
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+10h], 0
jmp     short loc_37a3d603
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0a0h], xmm0
mov     eax, [esp+0a4h]
mov     [esp+10h], eax
mov     eax, [esp+0a0h]
mov     [esp+14h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+60h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+0c8h]
add     edi, eax
mov     eax, [esp+48h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     edi, [esp+14h]
push    0
adc     esi, [esp+14h]
add     edi, [esp+28h]
push    dword ptr [esp+1ch]
adc     esi, [esp+24h]
mov     [esp+0c8h], edi
mov     [esp+0cch], esi
movq    xmm1, qword ptr [esp+0c8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+128h]
movaps  xmm0, xmm1
mov     dword ptr [esp+54h], 0
pxor    xmm0, xmmword ptr [esp+188h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0d8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+138h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+7ch]
movaps  xmmword ptr [esp+130h], xmm2
movd    dword ptr [esp+34h], xmm2
movaps  xmmword ptr [esp+0b0h], xmm0
call    __allmul
mov     edi, [esp+90h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+7ch]
mov     [esp+58h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+80h]
mov     [esp+0a0h], eax
mov     [esp+6ch], edx
call    __allmul
mov     ecx, [esp+48h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3d713
jb      short loc_37a3d701
cmp     eax, ecx
jnb     short loc_37a3d713
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a3d72c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+28h], ecx
mov     ecx, [esp+48h]
mov     [esp+1ch], ecx
mov     edx, [esp+90h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e0h], ecx
adc     eax, [esp+5ch]
mov     [esp+0e4h], eax
cmp     eax, [esp+5ch]
ja      short loc_37a3d767
jb      short loc_37a3d755
cmp     ecx, edx
jnb     short loc_37a3d767
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+10h], 0
jmp     short loc_37a3d789
xorps   xmm0, xmm0
movlpd  qword ptr [esp+90h], xmm0
mov     eax, [esp+94h]
mov     [esp+10h], eax
mov     eax, [esp+90h]
mov     [esp+14h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+1ch]
push    esi
push    dword ptr [esp+80h]
call    __allmul
movq    xmm0, qword ptr [esp+0e0h]
add     edi, eax
mov     eax, [esp+38h]
movq    xmm2, qword ptr [esp+70h]
adc     esi, edx
add     edi, [esp+14h]
push    0
adc     esi, [esp+14h]
add     edi, [esp+20h]
push    dword ptr [esp+34h]
adc     esi, [esp+30h]
mov     [esp+0e0h], edi
mov     [esp+0e4h], esi
movq    xmm1, qword ptr [esp+0e0h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+148h]
movaps  xmm0, xmm1
mov     dword ptr [esp+44h], 0
pxor    xmm0, xmmword ptr [esp+198h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0f0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1a8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+84h]
movaps  xmmword ptr [esp+150h], xmm2
movd    dword ptr [esp+2ch], xmm2
movaps  xmmword ptr [esp+180h], xmm0
call    __allmul
mov     esi, [esp+40h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+84h]
mov     [esp+48h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+88h]
mov     [esp+50h], eax
mov     [esp+0a0h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a3d89f
jb      short loc_37a3d88d
cmp     eax, ecx
jnb     short loc_37a3d89f
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a3d8b8
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+14h], ecx
mov     ecx, [esp+38h]
mov     [esp+28h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0f8h], ecx
adc     eax, [esp+90h]
mov     [esp+0fch], eax
cmp     eax, [esp+90h]
ja      short loc_37a3d8f6
jb      short loc_37a3d8e4
cmp     ecx, edx
jnb     short loc_37a3d8f6
mov     dword ptr [esp+10h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a3d90f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+18h], eax
mov     eax, [esp+40h]
mov     [esp+10h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+34h]
push    edi
push    dword ptr [esp+88h]
call    __allmul
movq    xmm0, qword ptr [esp+0f8h]
add     esi, eax
mov     eax, [esp+50h]
movq    xmm2, qword ptr [esp+78h]
adc     edi, edx
add     esi, [esp+28h]
push    0
adc     edi, [esp+18h]
add     esi, [esp+14h]
push    dword ptr [esp+24h]
adc     edi, [esp+20h]
mov     [esp+0f8h], esi
mov     [esp+0fch], edi
movq    xmm1, qword ptr [esp+0f8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+158h]
movaps  xmm0, xmm1
mov     dword ptr [esp+5ch], 0
pxor    xmm0, xmmword ptr [esp+1b8h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+108h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1c8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movaps  xmmword ptr [esp+160h], xmm2
movd    dword ptr [esp+28h], xmm2
movaps  xmmword ptr [esp+0a0h], xmm0
call    __allmul
mov     edi, [esp+60h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+74h]
mov     [esp+60h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+78h]
mov     [esp+70h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+50h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3da19
jb      short loc_37a3da07
cmp     eax, ecx
jnb     short loc_37a3da19
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a3da32
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     ecx, [esp+54h]
mov     [esp+14h], ecx
mov     ecx, [esp+50h]
mov     [esp+28h], ecx
mov     edx, [esp+60h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+110h], ecx
adc     eax, [esp+40h]
mov     [esp+114h], eax
cmp     eax, [esp+40h]
ja      short loc_37a3da67
jb      short loc_37a3da58
cmp     ecx, edx
jnb     short loc_37a3da67
mov     esi, 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a3da7c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     esi, [esp+60h]
mov     [esp+30h], eax
push    0
push    dword ptr [esp+24h]
push    0
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+110h]
add     eax, edi
movq    xmm6, qword ptr [esp+68h]
adc     edx, 0
movaps  xmm7, xmmword ptr [esp+1e0h]
add     eax, esi
mov     ecx, [esp+18h]
mov     esi, [esp+24h]
adc     edx, [esp+30h]
add     eax, [esp+28h]
mov     [esp+108h], eax
adc     edx, [esp+14h]
sub     dword ptr [esp+34h], 1
mov     eax, [esp+0b0h]
mov     [esp+10ch], edx
movq    xmm1, qword ptr [esp+108h]
mov     edx, [esp+1ch]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+160h]
movaps  xmm0, xmm1
mov     dword ptr [esp+0b4h], 0
pxor    xmm0, xmmword ptr [esp+1d0h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+118h]
punpcklqdq xmm6, xmm0
pxor    xmm6, xmm1
movaps  xmmword ptr [esp+160h], xmm6
movd    eax, xmm6
jnz     loc_37a3ccc0
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a7fac0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a3db35
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 278h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a3dbbe
push    0a0h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+8]
xor     esi, esi
mov     [esp+18h], eax
push    ecx
mov     ecx, [ebp+14h]
mov     edx, edi
push    dword ptr [ecx+esi*4]
mov     ecx, eax
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     eax, [esp+18h]
inc     esi
add     eax, edi
mov     [esp+18h], eax
cmp     esi, 5
jb      short loc_37a3dbc7
mov     ecx, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [ecx]
mov     esi, [ecx+4]
mov     edi, [ecx+8]
mov     [esp+4ch], edi
mov     eax, [edx+0e0h]
mov     [esp+9ch], eax
mov     eax, [esi+0e0h]
mov     [esp+0ach], eax
mov     eax, [edi+0e0h]
mov     [esp+0a0h], eax
mov     eax, [ecx+0ch]
mov     edi, [ebp+8]
mov     eax, [eax+0e0h]
mov     [esp+0a4h], eax
mov     eax, [ecx+10h]
mov     ecx, [edx+0c0h]
mov     eax, [eax+0e0h]
mov     [esp+0a8h], eax
mov     eax, [ebp+8]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
xor     eax, [edi+27h]
mov     [esp+14h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
movq    xmm0, qword ptr [esp+10h]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
movq    xmm4, qword ptr [esp+10h]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, edi
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [ebp+0ch]
mov     [esp+10h], ecx
movaps  xmmword ptr [esp+1f0h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     ecx, [edx+eax+23h]
xor     ecx, [esi+0c0h]
mov     eax, [edx+eax+27h]
xor     eax, [esi+0c4h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
punpcklqdq xmm1, xmm0
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
movaps  xmmword ptr [esp+1d0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+170h], xmm4
movaps  xmmword ptr [esp+200h], xmm1
xor     ecx, [esi]
mov     edi, [esp+4ch]
mov     eax, [esi+24h]
xor     eax, [esi+4]
mov     [esp+14h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+10h], ecx
movq    xmm3, qword ptr [esp+10h]
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     esi, [ebp+0ch]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [edx+esi*2+27h]
xor     eax, [edi+0c4h]
mov     [esp+10h], ecx
movq    xmm1, qword ptr [esp+10h]
mov     ecx, [edx+esi*2+23h]
xor     ecx, [edi+0c0h]
mov     [esp+14h], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+10h], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
movaps  xmmword ptr [esp+1e0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
movq    xmm2, qword ptr [esp+10h]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     edi, [ebp+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
lea     eax, [edx+esi*2]
mov     edx, [edi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+eax+23h]
mov     eax, [esi+eax+27h]
xor     ecx, [edx+0c0h]
xor     eax, [edx+0c4h]
movaps  xmmword ptr [esp+220h], xmm1
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+0b0h], xmm1
xorps   xmm1, xmm1
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+190h], xmm3
movaps  xmmword ptr [esp+1a0h], xmm2
movaps  xmmword ptr [esp+240h], xmm1
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
movq    xmm0, qword ptr [esp+10h]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
movq    xmm1, qword ptr [esp+10h]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [ebp+8]
mov     [esp+10h], ecx
movq    xmm5, qword ptr [esp+10h]
punpcklqdq xmm5, xmm0
mov     ecx, [eax+esi*4+23h]
xor     ecx, [edx+0c0h]
mov     eax, [eax+esi*4+27h]
xor     eax, [edx+0c4h]
mov     [esp+10h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
movaps  xmmword ptr [esp+0c0h], xmm5
xorps   xmm5, xmm5
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm7, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+260h], xmm5
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm5, qword ptr [esp+10h]
punpcklqdq xmm5, xmm0
movaps  xmmword ptr [esp+1b0h], xmm1
movaps  xmmword ptr [esp+1c0h], xmm7
movaps  xmmword ptr [esp+0d0h], xmm5
movd    edi, xmm4
mov     dword ptr [esp+54h], 0
movd    esi, xmm3
mov     dword ptr [esp+5ch], 0
movd    edx, xmm2
mov     dword ptr [esp+64h], 0
movd    ecx, xmm1
mov     dword ptr [esp+74h], 0
movd    eax, xmm7
mov     dword ptr [esp+0e4h], 0
mov     dword ptr [esp+4ch], 40000h
nop     word ptr [eax+eax+00000000h]
and     eax, 1ffff0h
and     edi, 1ffff0h
add     eax, [esp+0a8h]
and     edx, 1ffff0h
add     edi, [esp+9ch]
and     ecx, 1ffff0h
add     edx, [esp+0a0h]
and     esi, 1ffff0h
add     ecx, [esp+0a4h]
movups  xmm6, xmmword ptr [eax]
movups  xmm1, xmmword ptr [edi]
movups  xmm4, xmmword ptr [edx]
movups  xmm5, xmmword ptr [ecx]
mov     [esp+28h], eax
mov     [esp+20h], edx
pshufd  xmm0, xmm1, 55h
movd    edx, xmm0
mov     [esp+34h], ecx
add     esi, [esp+0ach]
mov     eax, edx
mov     [esp+40h], edi
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
pshufd  xmm0, xmm1, 0aah
movd    dword ptr [esp+18h], xmm0
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movups  xmm3, xmmword ptr [esi]
pshufd  xmm0, xmm1, 0ffh
mov     [esp+38h], esi
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, [esp+18h]
shr     eax, 18h
mov     [esp+24h], edx
movaps  xmmword ptr [esp+0e0h], xmm6
xor     edi, ds:dword_37b00140[eax*4]
movd    eax, xmm0
movzx   eax, al
xor     edi, ds:dword_37aff540[eax*4]
movd    eax, xmm1
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm0
mov     esi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
xor     esi, ds:dword_37aff940[eax*4]
mov     eax, edx
mov     edx, [esp+18h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
mov     ecx, [esp+24h]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
movzx   eax, cl
shr     ecx, 8
movzx   ecx, cl
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+18h]
mov     ecx, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     ecx, ds:dword_37affd40[eax*4]
movd    eax, xmm0
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm0, esi
xor     esi, esi
movd    xmm1, edx
movd    xmm2, edi
movd    xmm6, ecx
xor     ecx, ecx
punpckldq xmm6, xmm0
movaps  xmmword ptr [esp+180h], xmm6
movaps  xmm0, xmmword ptr [esp+180h]
punpckldq xmm1, xmm2
punpckldq xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+170h]
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+180h], xmm0
pxor    xmm1, xmmword ptr [esp+1d0h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+40h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm3, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
xor     eax, eax
sar     edx, cl
mov     ecx, [esp+40h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+18h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+18h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
movd    xmm2, edi
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+18h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+18h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm3, ecx
xor     ecx, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+190h]
movaps  xmm1, xmm3
movaps  xmmword ptr [esp+210h], xmm3
pxor    xmm1, xmmword ptr [esp+1e0h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+38h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    eax, xmm1
movd    edi, xmm0
pshufd  xmm0, xmm4, 55h
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+38h]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     eax, edi
mov     [ecx+8], edx
mov     [ecx+0ch], eax
movd    ecx, xmm0
mov     [esp+18h], ecx
mov     eax, ecx
pshufd  xmm0, xmm4, 0aah
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm4
movd    edx, xmm0
pshufd  xmm0, xmm4, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+24h], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+18h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+18h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+18h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm4, ecx
xor     ecx, ecx
punpckldq xmm4, xmm0
punpckldq xmm4, xmm1
pxor    xmm4, xmmword ptr [esp+1a0h]
movaps  xmm1, xmm4
movaps  xmmword ptr [esp+230h], xmm4
pxor    xmm1, xmmword ptr [esp+0b0h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+20h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
psrldq  xmm0, 4
movd    edi, xmm0
xor     esi, esi
movd    eax, xmm1
pshufd  xmm0, xmm5, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
xor     eax, eax
sar     edx, cl
mov     ecx, [esp+20h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm5, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+18h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm5
pshufd  xmm0, xmm5, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm5
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+18h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm5
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+18h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+18h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm1, edx
movd    xmm2, edi
shr     eax, 18h
movd    xmm0, esi
xor     esi, esi
punpckldq xmm1, xmm2
movaps  xmm6, xmmword ptr [esp+0e0h]
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm5
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm5, ecx
xor     ecx, ecx
punpckldq xmm5, xmm0
punpckldq xmm5, xmm1
pxor    xmm5, xmmword ptr [esp+1b0h]
movaps  xmm1, xmm5
movaps  xmmword ptr [esp+250h], xmm5
pxor    xmm1, xmmword ptr [esp+0c0h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+34h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm6, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+34h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm6, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+18h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm6
pshufd  xmm0, xmm6, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm6
shr     eax, 10h
movzx   eax, al
mov     esi, ds:dword_37aff940[ecx*4]
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+18h]
shr     eax, 18h
movd    xmm2, edi
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm6
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+18h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+18h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm6
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm6, ecx
xor     ecx, ecx
punpckldq xmm6, xmm0
punpckldq xmm6, xmm1
pxor    xmm6, xmm7
movaps  xmm1, xmm6
movaps  xmmword ptr [esp+270h], xmm6
pxor    xmm1, xmmword ptr [esp+0d0h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+28h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+28h]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     eax, edi
mov     [ecx+8], edx
mov     [ecx+0ch], eax
xor     ecx, ecx
movaps  xmm1, xmmword ptr [esp+180h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
movaps  xmm0, xmm3
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+28h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+9ch]
mov     [esp+50h], ecx
movd    dword ptr [esp+38h], xmm0
movaps  xmm0, xmm4
psrldq  xmm0, 4
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+14h], eax
mov     eax, [ecx+8]
mov     [esp+108h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+10ch], eax
movd    eax, xmm3
movd    dword ptr [esp+34h], xmm0
movaps  xmm0, xmm5
psrldq  xmm0, 4
or      ecx, eax
movd    dword ptr [esp+3ch], xmm0
mov     [esp+0b0h], ecx
movaps  xmm0, xmm6
and     ecx, 1ffff0h
mov     [esp+20h], esi
add     ecx, [esp+0ach]
mov     [esp+58h], ecx
mov     [esp+10h], edi
psrldq  xmm0, 4
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+120h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+124h], eax
movd    eax, xmm4
or      ecx, eax
mov     [esp+0c0h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0a0h]
mov     [esp+60h], ecx
mov     eax, [ecx]
mov     [esp+80h], eax
mov     eax, [ecx+4]
mov     [esp+84h], eax
mov     eax, [ecx+8]
mov     [esp+138h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+13ch], eax
movd    eax, xmm5
or      ecx, eax
mov     [esp+68h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0a4h]
mov     [esp+70h], ecx
mov     eax, [ecx]
mov     [esp+88h], eax
mov     eax, [ecx+4]
mov     [esp+8ch], eax
mov     eax, [ecx+8]
mov     [esp+150h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+154h], eax
movd    eax, xmm6
or      ecx, eax
mov     [esp+0d0h], ecx
and     ecx, 1ffff0h
movd    dword ptr [esp+24h], xmm0
add     ecx, [esp+0a8h]
push    0
push    esi
push    0
mov     eax, [ecx]
mov     [esp+9ch], eax
mov     eax, [ecx+4]
mov     [esp+0a0h], eax
mov     eax, [ecx+8]
mov     [esp+174h], eax
mov     eax, [ecx+0ch]
push    edi
mov     [esp+0f0h], ecx
mov     [esp+17ch], eax
call    __allmul
push    0
push    dword ptr [esp+2ch]
mov     [esp+24h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+2ch]
mov     edi, eax
mov     [esp+48h], edx
push    0
push    dword ptr [esp+20h]
call    __allmul
mov     ecx, eax
mov     eax, [esp+1ch]
add     ecx, eax
adc     edx, esi
mov     [esp+1ch], edx
cmp     edx, esi
ja      short loc_37a3eb1d
jb      short loc_37a3eb0b
cmp     ecx, eax
jnb     short loc_37a3eb1d
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a3eb36
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+18h], eax
mov     eax, [esp+28h]
mov     [esp+28h], eax
xor     eax, eax
add     eax, edi
mov     [esp+100h], eax
adc     ecx, [esp+40h]
mov     [esp+104h], ecx
cmp     ecx, [esp+40h]
ja      short loc_37a3eb61
jb      short loc_37a3eb58
cmp     eax, edi
jnb     short loc_37a3eb61
mov     esi, 1
xor     edi, edi
jmp     short loc_37a3eb72
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     edi, [esp+44h]
mov     esi, [esp+40h]
push    0
push    dword ptr [esp+24h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+1ch]
movq    xmm0, qword ptr [esp+100h]
movq    xmm2, qword ptr [esp+10h]
adc     edx, 0
add     eax, esi
mov     dword ptr [esp+54h], 0
push    0
push    dword ptr [esp+3ch]
adc     edx, edi
add     eax, [esp+30h]
mov     [esp+100h], eax
adc     edx, [esp+20h]
mov     eax, [esp+58h]
mov     [esp+104h], edx
movq    xmm1, qword ptr [esp+100h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+178h]
movaps  xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+1f8h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+110h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+188h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+84h]
movaps  xmmword ptr [esp+180h], xmm2
movd    dword ptr [esp+50h], xmm2
movaps  xmmword ptr [esp+1e0h], xmm0
call    __allmul
mov     edi, [esp+0b0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+84h]
mov     [esp+60h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+88h]
mov     [esp+0c0h], eax
mov     [esp+2ch], edx
call    __allmul
mov     ecx, [esp+50h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3ec87
jb      short loc_37a3ec75
cmp     eax, ecx
jnb     short loc_37a3ec87
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+20h], 1
jmp     short loc_37a3eca0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     ecx, [esp+54h]
mov     [esp+20h], ecx
mov     ecx, [esp+50h]
mov     [esp+18h], ecx
mov     edx, [esp+0b0h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+118h], ecx
adc     eax, [esp+1ch]
mov     [esp+11ch], eax
cmp     eax, [esp+1ch]
ja      short loc_37a3ecd8
jb      short loc_37a3ecc9
cmp     ecx, edx
jnb     short loc_37a3ecd8
mov     esi, 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a3ecf6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0b0h], xmm0
mov     eax, [esp+0b4h]
mov     esi, [esp+0b0h]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+3ch]
push    0
push    dword ptr [esp+88h]
call    __allmul
movq    xmm0, qword ptr [esp+118h]
add     eax, edi
movq    xmm2, qword ptr [esp+78h]
adc     edx, 0
mov     dword ptr [esp+5ch], 0
add     eax, esi
push    0
adc     edx, [esp+2ch]
add     eax, [esp+1ch]
push    dword ptr [esp+38h]
adc     edx, [esp+28h]
mov     [esp+118h], eax
mov     eax, [esp+60h]
mov     [esp+11ch], edx
movq    xmm1, qword ptr [esp+118h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+198h]
movaps  xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+208h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+128h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+218h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+8ch]
movaps  xmmword ptr [esp+1a0h], xmm2
movd    dword ptr [esp+48h], xmm2
movaps  xmmword ptr [esp+1f0h], xmm0
call    __allmul
mov     edi, [esp+0c0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+8ch]
mov     [esp+68h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+90h]
mov     [esp+0d0h], eax
mov     [esp+0c0h], edx
call    __allmul
mov     ecx, [esp+58h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3ee11
jb      short loc_37a3edff
cmp     eax, ecx
jnb     short loc_37a3ee11
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a3ee2a
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     ecx, [esp+5ch]
mov     [esp+18h], ecx
mov     ecx, [esp+58h]
mov     [esp+28h], ecx
mov     edx, [esp+0c0h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+130h], ecx
adc     eax, [esp+0b0h]
mov     [esp+134h], eax
cmp     eax, [esp+0b0h]
ja      short loc_37a3ee6b
jb      short loc_37a3ee59
cmp     ecx, edx
jnb     short loc_37a3ee6b
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a3ee8d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0c0h], xmm0
mov     eax, [esp+0c4h]
mov     [esp+1ch], eax
mov     eax, [esp+0c0h]
mov     [esp+20h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+38h]
push    esi
push    dword ptr [esp+90h]
call    __allmul
movq    xmm0, qword ptr [esp+130h]
add     edi, eax
mov     eax, [esp+60h]
movq    xmm2, qword ptr [esp+80h]
adc     esi, edx
add     edi, [esp+28h]
push    0
adc     esi, [esp+1ch]
add     edi, [esp+24h]
push    dword ptr [esp+40h]
adc     esi, [esp+24h]
mov     [esp+130h], edi
mov     [esp+134h], esi
movq    xmm1, qword ptr [esp+130h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1a8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+6ch], 0
pxor    xmm0, xmmword ptr [esp+228h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+140h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+238h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+94h]
movaps  xmmword ptr [esp+1b0h], xmm2
movd    dword ptr [esp+30h], xmm2
movaps  xmmword ptr [esp+0c0h], xmm0
call    __allmul
mov     esi, [esp+68h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+94h]
mov     [esp+70h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+98h]
mov     [esp+78h], eax
mov     [esp+0d0h], edx
call    __allmul
mov     ecx, [esp+60h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a3efa6
jb      short loc_37a3ef94
cmp     eax, ecx
jnb     short loc_37a3efa6
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+34h], 1
jmp     short loc_37a3efbf
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     ecx, [esp+64h]
mov     [esp+34h], ecx
mov     ecx, [esp+60h]
mov     [esp+18h], ecx
mov     edx, [esp+68h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+148h], ecx
adc     eax, [esp+0c0h]
mov     [esp+14ch], eax
cmp     eax, [esp+0c0h]
ja      short loc_37a3effd
jb      short loc_37a3efeb
cmp     ecx, edx
jnb     short loc_37a3effd
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a3f016
xorps   xmm0, xmm0
movlpd  qword ptr [esp+68h], xmm0
mov     eax, [esp+6ch]
mov     [esp+28h], eax
mov     eax, [esp+68h]
mov     [esp+1ch], eax
xor     edi, edi
push    edi
push    dword ptr [esp+40h]
push    edi
push    dword ptr [esp+98h]
call    __allmul
movq    xmm0, qword ptr [esp+148h]
add     esi, eax
mov     eax, [esp+70h]
movq    xmm2, qword ptr [esp+88h]
adc     edi, edx
add     esi, [esp+1ch]
push    0
adc     edi, [esp+2ch]
add     esi, [esp+1ch]
push    dword ptr [esp+28h]
adc     edi, [esp+3ch]
mov     [esp+148h], esi
mov     [esp+14ch], edi
movq    xmm1, qword ptr [esp+148h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1b8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+7ch], 0
pxor    xmm0, xmmword ptr [esp+248h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+158h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+258h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+9ch]
movaps  xmmword ptr [esp+1c0h], xmm2
movd    dword ptr [esp+44h], xmm2
movaps  xmmword ptr [esp+0d0h], xmm0
call    __allmul
mov     edi, [esp+0d0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+9ch]
mov     [esp+80h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a0h]
mov     [esp+0e0h], eax
mov     [esp+78h], edx
call    __allmul
mov     ecx, [esp+70h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a3f135
jb      short loc_37a3f123
cmp     eax, ecx
jnb     short loc_37a3f135
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a3f14e
xorps   xmm0, xmm0
movlpd  qword ptr [esp+70h], xmm0
mov     ecx, [esp+74h]
mov     [esp+1ch], ecx
mov     ecx, [esp+70h]
mov     [esp+3ch], ecx
mov     edx, [esp+0d0h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+160h], ecx
adc     eax, [esp+68h]
mov     [esp+164h], eax
cmp     eax, [esp+68h]
ja      short loc_37a3f186
jb      short loc_37a3f177
cmp     ecx, edx
jnb     short loc_37a3f186
mov     esi, 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a3f1a4
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0d0h], xmm0
mov     eax, [esp+0d4h]
mov     esi, [esp+0d0h]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+28h]
push    0
push    dword ptr [esp+0a0h]
call    __allmul
movq    xmm0, qword ptr [esp+160h]
add     eax, edi
movq    xmm7, qword ptr [esp+90h]
adc     edx, 0
mov     ecx, [esp+34h]
add     eax, [esp+3ch]
mov     edi, [esp+40h]
adc     edx, [esp+1ch]
add     eax, esi
mov     esi, [esp+38h]
adc     edx, [esp+28h]
sub     dword ptr [esp+4ch], 1
mov     [esp+158h], eax
mov     eax, [esp+0e0h]
mov     [esp+15ch], edx
movq    xmm1, qword ptr [esp+158h]
mov     edx, [esp+20h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1c0h]
movaps  xmm0, xmm1
mov     dword ptr [esp+0e4h], 0
pxor    xmm0, xmmword ptr [esp+260h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+168h]
punpcklqdq xmm7, xmm0
movaps  xmm0, xmmword ptr [esp+270h]
pxor    xmm7, xmm1
movaps  xmmword ptr [esp+1c0h], xmm7
movd    eax, xmm7
movaps  xmmword ptr [esp+0d0h], xmm0
jnz     loc_37a3e030
mov     edi, [ebp+10h]
xor     esi, esi
nop
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a7fac0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 5
jb      short loc_37a3f270
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 88h
mov     edx, [ebp+0ch]
push    esi
mov     esi, [ebp+14h]
push    edi
push    ecx
mov     ecx, [ebp+8]
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     esi, [esi]
mov     [esp+6ch], esi
mov     dword ptr [esp+40h], 100000h
mov     ecx, [esi+24h]
xor     ecx, [esi+4]
mov     eax, [esi+20h]
xor     eax, [esi]
mov     edi, [esi+0e0h]
mov     [esp+30h], eax
mov     [esp+34h], ecx
mov     [esp+70h], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+74h], ecx
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     [esp+38h], eax
mov     [esp+3ch], ecx
mov     [esp+78h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+7ch], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+60h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+64h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
movq    xmm0, qword ptr [esp+60h]
mov     esi, [esp+30h]
mov     [esp+64h], eax
lea     eax, [edi+8]
mov     [esp+60h], ecx
movq    xmm2, qword ptr [esp+60h]
mov     [esp+68h], edi
punpcklqdq xmm2, xmm0
mov     [esp+44h], eax
movq    xmm0, qword ptr [esp+78h]
mov     eax, esi
movq    xmm1, qword ptr [esp+70h]
and     eax, 1ffff0h
punpcklqdq xmm1, xmm0
xor     ecx, ecx
push    0
movups  xmm3, xmmword ptr [eax+edi]
aesenc  xmm3, xmm1
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+84h], xmm3
pxor    xmm0, xmm2
movups  xmmword ptr [eax+edi], xmm0
movaps  xmm0, xmm3
movd    eax, xmm3
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
mov     eax, ecx
mov     [esp+1ch], ecx
and     eax, 1ffff0h
mov     [esp+50h], edx
push    edx
push    0
lea     ecx, [eax+edi]
add     eax, [esp+50h]
mov     edi, [ecx]
mov     [esp+60h], ecx
mov     ecx, [ecx+4]
mov     [esp+20h], ecx
mov     ecx, [eax]
mov     [esp+64h], eax
mov     eax, [eax+4]
push    edi
mov     [esp+40h], edi
mov     [esp+6ch], ecx
mov     [esp+70h], eax
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+30h], eax
mov     edi, edx
push    0
push    dword ptr [esp+3ch]
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+20h]
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+28h]
add     eax, ecx
adc     edx, edi
mov     [esp+50h], edx
cmp     edx, edi
ja      short loc_37a3f463
jb      short loc_37a3f451
cmp     eax, ecx
jnb     short loc_37a3f463
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a3f47c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     ecx, [esp+20h]
xor     edi, edi
mov     edx, [esp+48h]
add     edi, ecx
adc     eax, edx
mov     [esp+48h], eax
cmp     eax, edx
ja      short loc_37a3f4aa
jb      short loc_37a3f498
cmp     edi, ecx
jnb     short loc_37a3f4aa
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a3f4c3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     eax, [esp+24h]
mov     [esp+28h], eax
mov     eax, [esp+20h]
mov     [esp+20h], eax
push    0
push    dword ptr [esp+50h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+50h]
mov     ecx, [esp+38h]
adc     edx, 0
movaps  xmm2, xmmword ptr [esp+80h]
add     eax, [esp+18h]
adc     edx, [esp+1ch]
add     eax, [esp+20h]
adc     edx, [esp+28h]
add     esi, eax
mov     eax, [esp+34h]
adc     eax, edx
mov     edx, [esp+3ch]
add     ecx, edi
mov     edi, [esp+54h]
adc     edx, [esp+48h]
mov     [edi], esi
xor     esi, [esp+30h]
mov     [edi+4], eax
mov     edi, [esp+58h]
xor     eax, [esp+14h]
mov     [esp+70h], esi
mov     [esp+34h], eax
mov     [edi], ecx
xor     ecx, [esp+5ch]
mov     [edi+4], edx
xor     edx, [esp+60h]
sub     dword ptr [esp+40h], 1
mov     edi, [esp+68h]
mov     [esp+74h], eax
mov     [esp+38h], ecx
mov     [esp+78h], ecx
mov     [esp+3ch], edx
mov     [esp+7ch], edx
jnz     loc_37a3f381
mov     esi, [esp+6ch]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    loc_37a7ed80
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 88h
mov     edx, [ebp+0ch]
push    esi
mov     esi, [ebp+14h]
push    edi
push    ecx
mov     ecx, [ebp+8]
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     esi, [esi]
mov     [esp+6ch], esi
mov     dword ptr [esp+3ch], 100000h
mov     ecx, [esi+24h]
xor     ecx, [esi+4]
mov     eax, [esi+20h]
xor     eax, [esi]
mov     edx, [esi+0e0h]
mov     [esp+2ch], eax
mov     [esp+30h], ecx
mov     [esp+70h], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+74h], ecx
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     [esp+34h], eax
mov     [esp+38h], ecx
mov     [esp+78h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+7ch], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+60h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+64h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
movq    xmm0, qword ptr [esp+60h]
mov     esi, [esp+2ch]
mov     [esp+64h], eax
lea     eax, [edx+8]
mov     [esp+60h], ecx
movq    xmm5, qword ptr [esp+60h]
mov     [esp+40h], edx
punpcklqdq xmm5, xmm0
mov     [esp+44h], eax
movq    xmm1, qword ptr [esp+78h]
mov     edi, esi
movq    xmm0, qword ptr [esp+70h]
and     edi, 1ffff0h
add     edi, edx
punpcklqdq xmm0, xmm1
push    edi
call    loc_37a22320
xor     ecx, ecx
movd    eax, xmm0
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+84h], xmm0
pxor    xmm1, xmm5
add     esp, 4
or      ecx, eax
movups  xmmword ptr [edi], xmm1
mov     eax, ecx
mov     [esp+10h], ecx
mov     ecx, [esp+40h]
and     eax, 1ffff0h
add     ecx, eax
movaps  xmm1, xmm0
add     eax, [esp+44h]
psrldq  xmm1, 4
movd    edx, xmm1
mov     edi, [ecx]
push    0
mov     [esp+58h], ecx
mov     ecx, [ecx+4]
push    edx
mov     [esp+14h], ecx
mov     ecx, [eax]
push    0
mov     [esp+64h], eax
mov     eax, [eax+4]
push    edi
mov     [esp+5ch], edx
mov     [esp+3ch], edi
mov     [esp+6ch], ecx
mov     [esp+70h], eax
call    __allmul
push    0
push    dword ptr [esp+14h]
mov     [esp+28h], eax
mov     edi, edx
push    0
push    dword ptr [esp+38h]
call    __allmul
push    0
push    dword ptr [esp+14h]
mov     [esp+20h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+20h]
add     eax, ecx
adc     edx, edi
mov     [esp+50h], edx
cmp     edx, edi
ja      short loc_37a3fd58
jb      short loc_37a3fd46
cmp     eax, ecx
jnb     short loc_37a3fd58
mov     dword ptr [esp+10h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a3fd71
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     ecx, [esp+24h]
mov     [esp+14h], ecx
mov     ecx, [esp+20h]
mov     [esp+10h], ecx
mov     ecx, [esp+18h]
xor     edi, edi
mov     edx, [esp+48h]
add     edi, ecx
adc     eax, edx
mov     [esp+48h], eax
cmp     eax, edx
ja      short loc_37a3fd9f
jb      short loc_37a3fd8d
cmp     edi, ecx
jnb     short loc_37a3fd9f
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a3fdb8
xorps   xmm0, xmm0
movlpd  qword ptr [esp+18h], xmm0
mov     eax, [esp+1ch]
mov     [esp+20h], eax
mov     eax, [esp+18h]
mov     [esp+18h], eax
push    0
push    dword ptr [esp+50h]
push    0
push    dword ptr [esp+18h]
call    __allmul
add     eax, [esp+50h]
mov     ecx, [esp+34h]
adc     edx, 0
movaps  xmm5, xmmword ptr [esp+80h]
add     eax, [esp+10h]
adc     edx, [esp+14h]
add     eax, [esp+18h]
adc     edx, [esp+20h]
add     esi, eax
mov     eax, [esp+30h]
adc     eax, edx
mov     edx, [esp+38h]
add     ecx, edi
mov     edi, [esp+54h]
adc     edx, [esp+48h]
mov     [edi], esi
xor     esi, [esp+2ch]
mov     [edi+4], eax
mov     edi, [esp+58h]
xor     eax, [esp+0ch]
mov     [esp+70h], esi
mov     [esp+30h], eax
mov     [edi], ecx
xor     ecx, [esp+5ch]
mov     [edi+4], edx
xor     edx, [esp+60h]
sub     dword ptr [esp+3ch], 1
mov     [esp+38h], edx
mov     [esp+7ch], edx
mov     edx, [esp+40h]
mov     [esp+74h], eax
mov     [esp+34h], ecx
mov     [esp+78h], ecx
jnz     loc_37a3fc71
mov     esi, [esp+6ch]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    sub_37a7fac0
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 1a8h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 4
jb      short loc_37a40d06
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+0a4h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+8ch], ecx
mov     ecx, [edi+0e0h]
mov     [esp+84h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+88h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm4, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm3, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
movaps  xmmword ptr [esp+190h], xmm1
movq    xmm1, qword ptr [esp+8]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+130h], xmm4
movaps  xmmword ptr [esp+120h], xmm3
movaps  xmmword ptr [esp+1a0h], xmm1
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
movq    xmm1, qword ptr [esp+8]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [ebp+14h]
mov     [esp+8], ecx
movq    xmm6, qword ptr [esp+8]
punpcklqdq xmm6, xmm0
mov     edx, [eax+0ch]
movaps  xmmword ptr [esp+110h], xmm1
movd    esi, xmm4
mov     dword ptr [esp+54h], 0
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
movaps  xmmword ptr [esp+160h], xmm2
punpcklqdq xmm5, xmm0
movd    edx, xmm3
mov     dword ptr [esp+4ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+5ch], 0
movd    eax, xmm2
mov     dword ptr [esp+0ach], 0
mov     dword ptr [esp+94h], 100000h
nop     word ptr [eax+eax+00000000h]
mov     edi, [esp+0a4h]
and     ecx, 1ffff0h
add     ecx, [esp+84h]
and     eax, 1ffff0h
add     eax, [esp+88h]
and     edx, 1ffff0h
add     edx, [esp+8ch]
and     esi, 1ffff0h
movups  xmm0, xmmword ptr [edx]
movups  xmm7, xmmword ptr [esi+edi]
movaps  xmmword ptr [esp+140h], xmm0
movups  xmm0, xmmword ptr [ecx]
movaps  xmmword ptr [esp+150h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+170h], xmm0
aesenc  xmm7, xmm4
movaps  xmm4, xmmword ptr [esp+140h]
movaps  xmm0, xmm7
pxor    xmm0, xmmword ptr [esp+190h]
movups  xmmword ptr [esi+edi], xmm0
aesenc  xmm4, xmm3
movaps  xmm3, xmmword ptr [esp+150h]
movaps  xmm0, xmm4
pxor    xmm0, xmmword ptr [esp+1a0h]
movups  xmmword ptr [edx], xmm0
aesenc  xmm3, xmm1
movaps  xmm1, xmmword ptr [esp+170h]
movaps  xmm0, xmm3
pxor    xmm0, xmm6
movaps  xmmword ptr [esp+180h], xmm7
movups  xmmword ptr [ecx], xmm0
xor     ecx, ecx
aesenc  xmm1, xmm2
movaps  xmm0, xmm1
movaps  xmmword ptr [esp+140h], xmm4
pxor    xmm0, xmm5
movaps  xmmword ptr [esp+150h], xmm3
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm7
movd    eax, xmm7
psrldq  xmm0, 4
movd    esi, xmm0
movaps  xmm0, xmm4
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+1ch], ecx
and     ecx, 1ffff0h
add     ecx, edi
movd    dword ptr [esp+34h], xmm0
mov     [esp+50h], ecx
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+170h], xmm1
mov     [esp+64h], esi
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0c4h], eax
movd    eax, xmm4
mov     [esp+8], edi
psrldq  xmm0, 4
or      ecx, eax
mov     [esp+40h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+8ch]
mov     [esp+48h], ecx
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0dch], eax
movd    eax, xmm3
or      ecx, eax
mov     [esp+28h], ecx
and     ecx, 1ffff0h
movd    dword ptr [esp+38h], xmm0
add     ecx, [esp+84h]
xor     edx, edx
mov     [esp+58h], ecx
movaps  xmm0, xmm1
push    0
push    esi
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0f8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0fch], eax
movd    eax, xmm1
push    0
psrldq  xmm0, 4
or      edx, eax
movd    dword ptr [esp+9ch], xmm0
mov     ecx, edx
mov     [esp+48h], edx
and     ecx, 1ffff0h
add     ecx, [esp+94h]
push    edi
mov     [esp+0b8h], ecx
mov     eax, [ecx]
mov     [esp+0a8h], eax
mov     eax, [ecx+4]
mov     [esp+0ach], eax
mov     eax, [ecx+8]
mov     [esp+118h], eax
mov     eax, [ecx+0ch]
mov     [esp+11ch], eax
call    __allmul
push    0
push    dword ptr [esp+20h]
mov     [esp+20h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+20h]
mov     [esp+1ch], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+88h], edx
call    __allmul
mov     ecx, [esp+18h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a41223
jb      short loc_37a41211
cmp     eax, ecx
jnb     short loc_37a41223
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a4123c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     ecx, [esp+24h]
mov     [esp+18h], ecx
mov     ecx, [esp+20h]
mov     [esp+20h], ecx
mov     edx, [esp+14h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0b8h], ecx
adc     eax, [esp+78h]
mov     [esp+0bch], eax
cmp     eax, [esp+78h]
ja      short loc_37a41274
jb      short loc_37a41262
cmp     ecx, edx
jnb     short loc_37a41274
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a4128d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+78h], xmm0
mov     eax, [esp+7ch]
mov     [esp+14h], eax
mov     eax, [esp+78h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+68h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+0b8h]
add     edi, eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [esp+50h]
adc     esi, edx
add     edi, [esp+1ch]
push    0
adc     esi, [esp+18h]
add     edi, [esp+24h]
push    dword ptr [esp+38h]
adc     esi, [esp+20h]
mov     [esp+0b8h], edi
mov     [esp+0bch], esi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0c8h]
paddq   xmm1, xmmword ptr [esp+138h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+188h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+140h], xmm2
movd    dword ptr [esp+88h], xmm2
mov     dword ptr [esp+64h], 0
movaps  xmmword ptr [esp+1a0h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+74h]
mov     [esp+60h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+78h]
mov     [esp+50h], eax
mov     [esp+74h], edx
call    __allmul
mov     ecx, [esp+50h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a4138b
jb      short loc_37a41379
cmp     eax, ecx
jnb     short loc_37a4138b
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a413a4
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     ecx, [esp+54h]
mov     [esp+1ch], ecx
mov     ecx, [esp+50h]
mov     [esp+14h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0d0h], ecx
adc     eax, [esp+64h]
mov     [esp+0d4h], eax
cmp     eax, [esp+64h]
ja      short loc_37a413dc
jb      short loc_37a413ca
cmp     ecx, edx
jnb     short loc_37a413dc
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a413f5
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+20h], eax
mov     eax, [esp+40h]
mov     [esp+18h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+38h]
push    esi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0d0h]
add     edi, eax
movq    xmm2, qword ptr [esp+68h]
mov     eax, [esp+48h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+24h]
add     edi, [esp+18h]
push    dword ptr [esp+3ch]
adc     esi, [esp+24h]
mov     [esp+0d0h], edi
mov     [esp+0d4h], esi
movq    xmm1, qword ptr [esp+0d0h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0e0h]
paddq   xmm1, xmmword ptr [esp+128h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+148h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+7ch]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+130h], xmm2
movd    dword ptr [esp+60h], xmm2
mov     dword ptr [esp+5ch], 0
movaps  xmmword ptr [esp+1b0h], xmm0
call    __allmul
mov     edi, [esp+28h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+7ch]
mov     [esp+58h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+80h]
mov     [esp+38h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a414f3
jb      short loc_37a414e1
cmp     eax, ecx
jnb     short loc_37a414f3
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a4150c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+14h], ecx
mov     ecx, [esp+48h]
mov     [esp+20h], ecx
mov     edx, [esp+28h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e8h], ecx
adc     eax, [esp+40h]
mov     [esp+0ech], eax
cmp     eax, [esp+40h]
ja      short loc_37a41544
jb      short loc_37a41532
cmp     ecx, edx
jnb     short loc_37a41544
mov     dword ptr [esp+34h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a4155d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+18h], eax
mov     eax, [esp+28h]
mov     [esp+34h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+3ch]
push    esi
push    dword ptr [esp+80h]
call    __allmul
movq    xmm0, qword ptr [esp+0e8h]
add     edi, eax
movq    xmm2, qword ptr [esp+70h]
mov     eax, [esp+58h]
adc     esi, edx
add     edi, [esp+34h]
push    0
adc     esi, [esp+1ch]
add     edi, [esp+24h]
push    dword ptr [esp+94h]
adc     esi, [esp+1ch]
mov     [esp+0e8h], edi
mov     edi, [esp+0a0h]
mov     [esp+0ech], esi
movq    xmm1, qword ptr [esp+0e8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0f8h]
paddq   xmm1, xmmword ptr [esp+118h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+158h]
pxor    xmm2, xmm1
push    0
push    edi
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+120h], xmm2
movd    dword ptr [esp+58h], xmm2
mov     dword ptr [esp+6ch], 0
movaps  xmmword ptr [esp+190h], xmm0
call    __allmul
push    0
push    dword ptr [esp+40h]
mov     [esp+60h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+40h]
mov     edi, eax
mov     [esp+30h], edx
push    0
push    dword ptr [esp+0a8h]
call    __allmul
mov     ecx, edx
mov     edx, [esp+58h]
add     eax, edx
adc     ecx, esi
mov     [esp+58h], ecx
cmp     ecx, esi
ja      short loc_37a41666
jb      short loc_37a41654
cmp     eax, edx
jnb     short loc_37a41666
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+38h], 1
jmp     short loc_37a4167f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+38h], ecx
mov     ecx, [esp+40h]
mov     [esp+3ch], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+100h], ecx
adc     eax, [esp+28h]
mov     [esp+104h], eax
cmp     eax, [esp+28h]
ja      short loc_37a416aa
jb      short loc_37a416a1
cmp     ecx, edi
jnb     short loc_37a416aa
mov     esi, 1
xor     edi, edi
jmp     short loc_37a416bb
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     edi, [esp+2ch]
mov     esi, [esp+28h]
push    0
push    dword ptr [esp+94h]
push    0
push    dword ptr [esp+0a8h]
call    __allmul
add     eax, [esp+58h]
movq    xmm0, qword ptr [esp+100h]
movq    xmm2, qword ptr [esp+98h]
adc     edx, 0
add     eax, [esp+3ch]
movaps  xmm5, xmmword ptr [esp+170h]
adc     edx, [esp+38h]
add     eax, esi
movaps  xmm3, xmmword ptr [esp+120h]
movaps  xmm4, xmmword ptr [esp+130h]
adc     edx, edi
sub     dword ptr [esp+94h], 1
movaps  xmm6, xmmword ptr [esp+180h]
mov     ecx, [esp+48h]
mov     esi, [esp+78h]
mov     [esp+0f8h], eax
mov     eax, [esp+0a8h]
mov     [esp+0fch], edx
movq    xmm1, qword ptr [esp+0f8h]
mov     edx, [esp+50h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+160h]
movq    xmm0, qword ptr [esp+108h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+110h]
movaps  xmmword ptr [esp+160h], xmm2
movd    eax, xmm2
mov     dword ptr [esp+0ach], 0
jnz     loc_37a40fb0
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a7ed80
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a41794
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 208h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 5
jb      short loc_37a417f6
mov     ecx, [ebp+14h]
mov     edx, [ecx]
mov     esi, [ecx+4]
mov     edi, [ecx+8]
mov     eax, [edx+0e0h]
mov     [esp+0bch], eax
mov     eax, [esi+0e0h]
mov     [esp+0ach], eax
mov     eax, [edi+0e0h]
mov     [esp+0b0h], eax
mov     eax, [ecx+0ch]
mov     eax, [eax+0e0h]
mov     [esp+0b4h], eax
mov     eax, [ecx+10h]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+10h], ecx
mov     eax, [eax+0e0h]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0b8h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm5, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
movq    xmm4, qword ptr [esp+10h]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
movaps  xmmword ptr [esp+200h], xmm1
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+190h], xmm5
movaps  xmmword ptr [esp+180h], xmm4
movaps  xmmword ptr [esp+0d0h], xmm1
xor     ecx, [edi+8]
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+10h], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     esi, [ebp+14h]
mov     [esp+10h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     edx, [esi+0ch]
mov     [esp+14h], eax
movq    xmm3, qword ptr [esp+10h]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
movaps  xmmword ptr [esp+70h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     edx, [esi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
movq    xmm7, qword ptr [esp+10h]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm2, qword ptr [esp+10h]
punpcklqdq xmm2, xmm0
movaps  xmmword ptr [esp+170h], xmm3
movaps  xmmword ptr [esp+160h], xmm1
movaps  xmmword ptr [esp+1e0h], xmm2
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm6, qword ptr [esp+10h]
punpcklqdq xmm6, xmm0
movd    edi, xmm5
mov     dword ptr [esp+44h], 0
movd    esi, xmm4
mov     dword ptr [esp+3ch], 0
movd    edx, xmm3
mov     dword ptr [esp+34h], 0
movd    ecx, xmm1
mov     dword ptr [esp+54h], 0
movd    eax, xmm2
mov     dword ptr [esp+0e4h], 0
mov     dword ptr [esp+0c4h], 100000h
and     esi, 1ffff0h
and     ecx, 1ffff0h
add     esi, [esp+0ach]
and     eax, 1ffff0h
add     ecx, [esp+0b4h]
and     edx, 1ffff0h
add     eax, [esp+0b8h]
and     edi, 1ffff0h
add     edx, [esp+0b0h]
movups  xmm0, xmmword ptr [esi]
add     edi, [esp+0bch]
movaps  xmmword ptr [esp+1b0h], xmm0
movups  xmm0, xmmword ptr [edx]
movaps  xmmword ptr [esp+1c0h], xmm0
movups  xmm0, xmmword ptr [ecx]
movaps  xmmword ptr [esp+1d0h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+1f0h], xmm0
movups  xmm0, xmmword ptr [edi]
aesenc  xmm0, xmm5
movaps  xmm5, xmmword ptr [esp+1b0h]
movaps  xmmword ptr [esp+1a0h], xmm0
pxor    xmm0, xmmword ptr [esp+200h]
movups  xmmword ptr [edi], xmm0
aesenc  xmm5, xmm4
movaps  xmm4, xmmword ptr [esp+1c0h]
movaps  xmm0, xmm5
pxor    xmm0, xmmword ptr [esp+0d0h]
movups  xmmword ptr [esi], xmm0
aesenc  xmm4, xmm3
movaps  xmm3, xmmword ptr [esp+1d0h]
movaps  xmm0, xmm4
pxor    xmm0, xmmword ptr [esp+70h]
movups  xmmword ptr [edx], xmm0
aesenc  xmm3, xmm1
movaps  xmm1, xmmword ptr [esp+1a0h]
movaps  xmm0, xmm3
pxor    xmm0, xmm7
movaps  xmmword ptr [esp+1b0h], xmm5
movaps  xmm7, xmmword ptr [esp+1f0h]
movups  xmmword ptr [ecx], xmm0
xor     ecx, ecx
aesenc  xmm7, xmm2
movaps  xmm0, xmm7
movaps  xmmword ptr [esp+1c0h], xmm4
pxor    xmm0, xmm6
movaps  xmmword ptr [esp+1d0h], xmm3
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
movaps  xmm0, xmm5
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+70h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0bch]
mov     [esp+40h], ecx
movaps  xmmword ptr [esp+1f0h], xmm7
mov     [esp+6ch], esi
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+14h], eax
mov     eax, [ecx+8]
mov     [esp+0f8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0fch], eax
movd    eax, xmm5
mov     [esp+10h], edi
movd    dword ptr [esp+24h], xmm0
or      ecx, eax
mov     [esp+20h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0ach]
mov     [esp+38h], ecx
mov     eax, [ecx]
mov     [esp+0c8h], eax
mov     eax, [ecx+4]
mov     [esp+0cch], eax
mov     eax, [ecx+8]
xor     edx, edx
mov     [esp+110h], eax
movaps  xmm0, xmm4
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+114h], eax
movd    eax, xmm4
psrldq  xmm0, 4
movd    dword ptr [esp+28h], xmm0
movaps  xmm0, xmm3
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+60h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0b0h]
mov     [esp+30h], ecx
push    0
movd    dword ptr [esp+30h], xmm0
movaps  xmm0, xmm7
mov     eax, [ecx]
mov     [esp+94h], eax
mov     eax, [ecx+4]
mov     [esp+98h], eax
mov     eax, [ecx+8]
mov     [esp+12ch], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+130h], eax
movd    eax, xmm3
push    esi
push    0
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+54h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0c0h]
mov     [esp+5ch], ecx
push    edi
movd    dword ptr [esp+0d0h], xmm0
mov     eax, [ecx]
mov     [esp+0a8h], eax
mov     eax, [ecx+4]
mov     [esp+0ach], eax
mov     eax, [ecx+8]
mov     [esp+150h], eax
mov     eax, [ecx+0ch]
mov     [esp+154h], eax
movd    eax, xmm7
or      edx, eax
mov     ecx, edx
mov     [esp+98h], edx
and     ecx, 1ffff0h
add     ecx, [esp+0c8h]
mov     [esp+0f0h], ecx
mov     eax, [ecx]
mov     [esp+0b0h], eax
mov     eax, [ecx+4]
mov     [esp+0b4h], eax
mov     eax, [ecx+8]
mov     [esp+168h], eax
mov     eax, [ecx+0ch]
mov     [esp+16ch], eax
call    __allmul
push    0
push    dword ptr [esp+74h]
mov     [esp+24h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+74h]
mov     edi, eax
mov     [esp+0d8h], edx
push    0
push    dword ptr [esp+20h]
call    __allmul
mov     ecx, eax
mov     eax, [esp+1ch]
add     ecx, eax
adc     edx, esi
mov     [esp+58h], edx
cmp     edx, esi
ja      short loc_37a41e49
jb      short loc_37a41e37
cmp     ecx, eax
jnb     short loc_37a41e49
mov     dword ptr [esp+70h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a41e62
xorps   xmm0, xmm0
movlpd  qword ptr [esp+70h], xmm0
mov     eax, [esp+74h]
mov     [esp+1ch], eax
mov     eax, [esp+70h]
mov     [esp+70h], eax
xor     eax, eax
add     eax, edi
mov     [esp+0f0h], eax
adc     ecx, [esp+0d0h]
mov     [esp+0f4h], ecx
cmp     ecx, [esp+0d0h]
ja      short loc_37a41e93
jb      short loc_37a41e8a
cmp     eax, edi
jnb     short loc_37a41e93
mov     esi, 1
xor     edi, edi
jmp     short loc_37a41ead
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0d0h], xmm0
mov     edi, [esp+0d4h]
mov     esi, [esp+0d0h]
push    0
push    dword ptr [esp+70h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+58h]
movq    xmm0, qword ptr [esp+0f0h]
movq    xmm2, qword ptr [esp+10h]
adc     edx, 0
add     eax, [esp+70h]
push    0
adc     edx, [esp+20h]
add     eax, esi
push    dword ptr [esp+28h]
adc     edx, edi
mov     [esp+0f0h], eax
mov     eax, [esp+48h]
mov     edi, [esp+0d0h]
mov     [esp+0f4h], edx
movq    xmm1, qword ptr [esp+0f0h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+100h]
paddq   xmm1, xmmword ptr [esp+198h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1a8h]
pxor    xmm2, xmm1
push    0
push    edi
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+1a0h], xmm2
movd    dword ptr [esp+7ch], xmm2
mov     dword ptr [esp+54h], 0
movaps  xmmword ptr [esp+210h], xmm0
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+48h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     edi, eax
mov     [esp+60h], edx
push    0
push    dword ptr [esp+0d8h]
call    __allmul
mov     ecx, edx
mov     edx, [esp+40h]
add     eax, edx
adc     ecx, esi
mov     [esp+40h], ecx
cmp     ecx, esi
ja      short loc_37a41faf
jb      short loc_37a41f9d
cmp     eax, edx
jnb     short loc_37a41faf
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a41fd1
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0d0h], xmm0
mov     ecx, [esp+0d4h]
mov     [esp+1ch], ecx
mov     ecx, [esp+0d0h]
mov     [esp+20h], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+108h], ecx
adc     eax, [esp+58h]
mov     [esp+10ch], eax
cmp     eax, [esp+58h]
ja      short loc_37a41ffc
jb      short loc_37a41ff3
cmp     ecx, edi
jnb     short loc_37a41ffc
mov     esi, 1
xor     edi, edi
jmp     short loc_37a4200d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     edi, [esp+5ch]
mov     esi, [esp+58h]
push    0
push    dword ptr [esp+28h]
push    0
push    dword ptr [esp+0d8h]
call    __allmul
add     eax, [esp+40h]
movq    xmm0, qword ptr [esp+108h]
movq    xmm2, qword ptr [esp+0c8h]
adc     edx, 0
add     eax, [esp+20h]
push    0
adc     edx, [esp+20h]
add     eax, esi
push    dword ptr [esp+2ch]
adc     edx, edi
mov     [esp+108h], eax
mov     eax, [esp+40h]
mov     [esp+10ch], edx
movq    xmm1, qword ptr [esp+108h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+118h]
paddq   xmm1, xmmword ptr [esp+188h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1b8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+9ch]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+190h], xmm2
movd    dword ptr [esp+68h], xmm2
mov     dword ptr [esp+4ch], 0
movaps  xmmword ptr [esp+0e0h], xmm0
call    __allmul
mov     edi, [esp+60h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+9ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a0h]
mov     [esp+70h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a42116
jb      short loc_37a42104
cmp     eax, ecx
jnb     short loc_37a42116
mov     dword ptr [esp+24h], 0
mov     dword ptr [esp+20h], 1
jmp     short loc_37a4212f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+20h], ecx
mov     ecx, [esp+38h]
mov     [esp+24h], ecx
mov     edx, [esp+60h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+120h], ecx
adc     eax, [esp+40h]
mov     [esp+124h], eax
cmp     eax, [esp+40h]
ja      short loc_37a42167
jb      short loc_37a42155
cmp     ecx, edx
jnb     short loc_37a42167
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+70h], 0
jmp     short loc_37a42180
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+70h], eax
mov     eax, [esp+60h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+2ch]
push    esi
push    dword ptr [esp+0a0h]
call    __allmul
movq    xmm0, qword ptr [esp+120h]
add     edi, eax
movq    xmm2, qword ptr [esp+90h]
mov     eax, [esp+30h]
adc     esi, edx
add     edi, [esp+24h]
push    0
adc     esi, [esp+24h]
add     edi, [esp+20h]
push    dword ptr [esp+30h]
adc     esi, [esp+78h]
mov     [esp+120h], edi
mov     [esp+124h], esi
movq    xmm1, qword ptr [esp+120h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+130h]
paddq   xmm1, xmmword ptr [esp+178h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1c8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+0a4h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+180h], xmm2
movd    dword ptr [esp+48h], xmm2
mov     dword ptr [esp+44h], 0
movaps  xmmword ptr [esp+80h], xmm0
call    __allmul
mov     edi, [esp+48h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0a4h]
mov     [esp+40h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a8h]
mov     [esp+58h], eax
mov     [esp+70h], edx
call    __allmul
mov     ecx, [esp+30h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a4228a
jb      short loc_37a42278
cmp     eax, ecx
jnb     short loc_37a4228a
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a422a3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+24h], ecx
mov     ecx, [esp+30h]
mov     [esp+28h], ecx
mov     edx, [esp+48h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+138h], ecx
adc     eax, [esp+60h]
mov     [esp+13ch], eax
cmp     eax, [esp+60h]
ja      short loc_37a422db
jb      short loc_37a422c9
cmp     ecx, edx
jnb     short loc_37a422db
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a422f4
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     eax, [esp+4ch]
mov     [esp+1ch], eax
mov     eax, [esp+48h]
mov     [esp+20h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+30h]
push    esi
push    dword ptr [esp+0a8h]
call    __allmul
movq    xmm0, qword ptr [esp+138h]
add     edi, eax
movq    xmm2, qword ptr [esp+98h]
mov     eax, [esp+50h]
adc     esi, edx
add     edi, [esp+28h]
push    0
adc     esi, [esp+28h]
add     edi, [esp+24h]
push    dword ptr [esp+0c4h]
adc     esi, [esp+24h]
mov     [esp+138h], edi
mov     [esp+13ch], esi
movq    xmm1, qword ptr [esp+138h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+148h]
paddq   xmm1, xmmword ptr [esp+168h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1d8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+0ach]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+170h], xmm2
movd    dword ptr [esp+40h], xmm2
mov     dword ptr [esp+64h], 0
movaps  xmmword ptr [esp+1b0h], xmm0
call    __allmul
mov     edi, [esp+88h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0ach]
mov     [esp+60h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0b0h]
mov     [esp+98h], eax
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+50h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a42407
jb      short loc_37a423f5
cmp     eax, ecx
jnb     short loc_37a42407
mov     dword ptr [esp+2ch], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a42420
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     ecx, [esp+54h]
mov     [esp+28h], ecx
mov     ecx, [esp+50h]
mov     [esp+2ch], ecx
mov     edx, [esp+88h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+150h], ecx
adc     eax, [esp+48h]
mov     [esp+154h], eax
cmp     eax, [esp+48h]
ja      short loc_37a42458
jb      short loc_37a42449
cmp     ecx, edx
jnb     short loc_37a42458
mov     esi, 1
mov     dword ptr [esp+24h], 0
jmp     short loc_37a42476
xorps   xmm0, xmm0
movlpd  qword ptr [esp+88h], xmm0
mov     eax, [esp+8ch]
mov     esi, [esp+88h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+0c4h]
push    0
push    dword ptr [esp+0b0h]
call    __allmul
movq    xmm0, qword ptr [esp+150h]
add     eax, edi
movq    xmm2, qword ptr [esp+0a0h]
movaps  xmm6, xmmword ptr [esp+1f0h]
adc     edx, 0
add     eax, [esp+2ch]
movaps  xmm3, xmmword ptr [esp+170h]
adc     edx, [esp+28h]
add     eax, esi
movaps  xmm4, xmmword ptr [esp+180h]
adc     edx, [esp+24h]
sub     dword ptr [esp+0c4h], 1
movaps  xmm5, xmmword ptr [esp+190h]
movaps  xmm7, xmmword ptr [esp+1a0h]
mov     ecx, [esp+30h]
mov     esi, [esp+58h]
mov     edi, [esp+6ch]
mov     [esp+148h], eax
mov     eax, [esp+0e0h]
mov     [esp+14ch], edx
movq    xmm1, qword ptr [esp+148h]
mov     edx, [esp+38h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1e0h]
movq    xmm0, qword ptr [esp+158h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+160h]
movaps  xmmword ptr [esp+1e0h], xmm2
movd    eax, xmm2
mov     dword ptr [esp+0e4h], 0
jnz     loc_37a41b32
mov     edi, [ebp+10h]
xor     esi, esi
nop     dword ptr [eax+eax+00h]
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a7ed80
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 5
jb      short loc_37a42560
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 148h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 3
jb      short loc_37a425c6
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     ecx, [edx+0e0h]
mov     [esp+70h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [edi+0e0h]
mov     [esp+74h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+78h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm2, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
movaps  xmmword ptr [esp+120h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+14h], eax
movq    xmm7, qword ptr [esp+10h]
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
punpcklqdq xmm7, xmm0
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+0d0h], xmm2
movaps  xmmword ptr [esp+0f0h], xmm1
movaps  xmmword ptr [esp+110h], xmm7
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+10h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
movq    xmm5, qword ptr [esp+10h]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm6, qword ptr [esp+10h]
movaps  xmmword ptr [esp+100h], xmm5
punpcklqdq xmm6, xmm0
movd    edx, xmm2
mov     dword ptr [esp+3ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+4ch], 0
movd    eax, xmm5
mov     dword ptr [esp+84h], 0
mov     dword ptr [esp+7ch], 100000h
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
and     eax, 1ffff0h
and     ecx, 1ffff0h
add     eax, [esp+78h]
and     edx, 1ffff0h
add     ecx, [esp+74h]
add     edx, [esp+70h]
mov     [esp+28h], eax
movups  xmm4, xmmword ptr [eax]
movups  xmm3, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [edx]
mov     [esp+1ch], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
mov     [esp+20h], edx
pshufd  xmm0, xmm1, 0aah
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
movd    edx, xmm0
pshufd  xmm0, xmm1, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+24h], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movd    xmm1, edx
punpckldq xmm1, xmm2
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm7, ecx
punpckldq xmm7, xmm0
movaps  xmmword ptr [esp+0e0h], xmm7
movaps  xmm0, xmmword ptr [esp+0e0h]
mov     eax, [esp+20h]
punpckldq xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+0d0h]
movaps  xmmword ptr [esp+0e0h], xmm0
pxor    xmm0, xmmword ptr [esp+120h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm3, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+1ch]
movd    xmm3, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+0f0h]
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+130h], xmm3
pxor    xmm0, xmmword ptr [esp+110h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm4, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm4
pshufd  xmm0, xmm4, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+28h]
movd    xmm3, ecx
xor     ecx, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
movaps  xmm1, xmmword ptr [esp+0e0h]
pxor    xmm3, xmm5
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+140h], xmm3
pxor    xmm0, xmm6
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
movd    eax, xmm1
xor     edx, edx
movaps  xmm1, xmmword ptr [esp+130h]
movaps  xmm0, xmm1
mov     [esp+54h], esi
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+20h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+70h]
mov     [esp+38h], ecx
push    0
movd    dword ptr [esp+38h], xmm0
movaps  xmm0, xmm3
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+18h], eax
mov     eax, [ecx+8]
mov     [esp+9ch], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0a0h], eax
movd    eax, xmm1
push    esi
push    0
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+4ch], ecx
and     ecx, 1ffff0h
add     ecx, [esp+80h]
mov     [esp+54h], ecx
push    edi
mov     [esp+20h], edi
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
mov     [esp+0c4h], eax
movd    eax, xmm3
movd    dword ptr [esp+34h], xmm0
or      edx, eax
mov     ecx, edx
mov     [esp+70h], edx
and     ecx, 1ffff0h
add     ecx, [esp+88h]
mov     [esp+90h], ecx
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0dch], eax
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+20h], eax
push    0
push    dword ptr [esp+20h]
mov     [esp+1ch], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a42d3c
jb      short loc_37a42d2a
cmp     eax, ecx
jnb     short loc_37a42d3c
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a42d55
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+28h]
mov     [esp+20h], ecx
mov     edx, [esp+18h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+90h], ecx
adc     eax, [esp+0ch]
mov     [esp+94h], eax
cmp     eax, [esp+0ch]
ja      short loc_37a42d8d
jb      short loc_37a42d7b
cmp     ecx, edx
jnb     short loc_37a42d8d
mov     dword ptr [esp+0ch], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a42da6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+18h], eax
mov     eax, [esp+28h]
mov     [esp+0ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+58h]
push    esi
push    dword ptr [esp+20h]
call    __allmul
movq    xmm0, qword ptr [esp+90h]
add     edi, eax
movq    xmm2, qword ptr [esp+10h]
mov     eax, [esp+38h]
adc     esi, edx
add     edi, [esp+20h]
push    0
adc     esi, [esp+20h]
add     edi, [esp+10h]
push    dword ptr [esp+38h]
adc     esi, [esp+20h]
mov     [esp+90h], edi
mov     [esp+94h], esi
movq    xmm1, qword ptr [esp+90h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0a0h]
paddq   xmm1, xmmword ptr [esp+0d8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+0e8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+0e0h], xmm2
movd    dword ptr [esp+30h], xmm2
mov     dword ptr [esp+4ch], 0
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+74h]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+78h]
mov     [esp+50h], eax
mov     [esp+64h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a42ea1
jb      short loc_37a42e8f
cmp     eax, ecx
jnb     short loc_37a42ea1
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a42eba
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+38h]
mov     [esp+18h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0a8h], ecx
adc     eax, [esp+54h]
mov     [esp+0ach], eax
cmp     eax, [esp+54h]
ja      short loc_37a42ef2
jb      short loc_37a42ee0
cmp     ecx, edx
jnb     short loc_37a42ef2
mov     dword ptr [esp+0ch], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a42f0b
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+28h], eax
mov     eax, [esp+40h]
mov     [esp+0ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+38h]
push    esi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0a8h]
add     edi, eax
movq    xmm2, qword ptr [esp+68h]
mov     eax, [esp+48h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+20h]
add     edi, [esp+10h]
push    dword ptr [esp+28h]
adc     esi, [esp+30h]
mov     [esp+0a8h], edi
mov     [esp+0ach], esi
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0b8h]
paddq   xmm1, xmmword ptr [esp+0f8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+138h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+64h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+100h], xmm2
movd    dword ptr [esp+2ch], xmm2
mov     dword ptr [esp+5ch], 0
movaps  xmmword ptr [esp+120h], xmm0
call    __allmul
mov     esi, [esp+60h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+64h]
mov     [esp+58h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+68h]
mov     [esp+70h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a43006
jb      short loc_37a42ff4
cmp     eax, ecx
jnb     short loc_37a43006
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+34h], 1
jmp     short loc_37a4301f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+34h], ecx
mov     ecx, [esp+48h]
mov     [esp+28h], ecx
mov     edx, [esp+60h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c0h], ecx
adc     eax, [esp+40h]
mov     [esp+0c4h], eax
cmp     eax, [esp+40h]
ja      short loc_37a43057
jb      short loc_37a43045
cmp     ecx, edx
jnb     short loc_37a43057
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+0ch], 0
jmp     short loc_37a43070
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+0ch], eax
mov     eax, [esp+60h]
mov     [esp+18h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+28h]
push    edi
push    dword ptr [esp+68h]
call    __allmul
movq    xmm0, qword ptr [esp+0c0h]
add     esi, eax
mov     eax, [esp+80h]
movq    xmm5, qword ptr [esp+58h]
adc     edi, edx
add     esi, [esp+28h]
movaps  xmm6, xmmword ptr [esp+140h]
adc     edi, [esp+34h]
add     esi, [esp+18h]
mov     ecx, [esp+1ch]
adc     edi, [esp+0ch]
sub     dword ptr [esp+7ch], 1
mov     edx, [esp+20h]
mov     [esp+0b8h], esi
mov     [esp+0bch], edi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movq    xmm0, qword ptr [esp+0c8h]
punpcklqdq xmm5, xmm0
pxor    xmm5, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+100h], xmm5
movd    eax, xmm5
mov     dword ptr [esp+84h], 0
jnz     loc_37a427d0
mov     edi, [ebp+10h]
xor     esi, esi
nop     word ptr [eax+eax+00h]
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a7fac0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a43120
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     dh, 0bbh
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 228h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 5
jb      short loc_37a44146
mov     ecx, [ebp+14h]
mov     edx, [ecx]
mov     esi, [ecx+4]
mov     edi, [ecx+8]
mov     eax, [edx+0e0h]
mov     [esp+8ch], eax
mov     eax, [esi+0e0h]
mov     [esp+90h], eax
mov     eax, [edi+0e0h]
mov     [esp+0cch], eax
mov     eax, [ecx+0ch]
mov     eax, [eax+0e0h]
mov     [esp+94h], eax
mov     eax, [ecx+10h]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+8], ecx
mov     eax, [eax+0e0h]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+98h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm4, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm3, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
movaps  xmmword ptr [esp+1d0h], xmm1
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+170h], xmm4
movaps  xmmword ptr [esp+190h], xmm3
movaps  xmmword ptr [esp+1e0h], xmm1
xor     ecx, [edi+8]
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     esi, [ebp+14h]
mov     [esp+8], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     edx, [esi+0ch]
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
movaps  xmmword ptr [esp+0a0h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     edx, [esi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm7, qword ptr [esp+8]
movaps  xmmword ptr [esp+1a0h], xmm2
movaps  xmmword ptr [esp+1b0h], xmm1
movaps  xmmword ptr [esp+0b0h], xmm5
punpcklqdq xmm7, xmm0
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
punpcklqdq xmm5, xmm0
movaps  xmmword ptr [esp+1c0h], xmm7
movaps  xmmword ptr [esp+0d0h], xmm5
movd    edi, xmm4
mov     dword ptr [esp+5ch], 0
movd    esi, xmm3
mov     dword ptr [esp+64h], 0
movd    edx, xmm2
mov     dword ptr [esp+44h], 0
movd    ecx, xmm1
mov     dword ptr [esp+54h], 0
movd    eax, xmm7
mov     dword ptr [esp+0e4h], 0
mov     dword ptr [esp+9ch], 100000h
and     eax, 1ffff0h
and     edi, 1ffff0h
add     eax, [esp+98h]
and     edx, 1ffff0h
add     edi, [esp+8ch]
and     ecx, 1ffff0h
add     edx, [esp+0cch]
and     esi, 1ffff0h
add     ecx, [esp+94h]
movups  xmm6, xmmword ptr [eax]
movups  xmm1, xmmword ptr [edi]
movups  xmm4, xmmword ptr [edx]
movups  xmm5, xmmword ptr [ecx]
mov     [esp+34h], eax
mov     [esp+20h], edx
pshufd  xmm0, xmm1, 55h
movd    edx, xmm0
mov     [esp+28h], ecx
add     esi, [esp+90h]
mov     eax, edx
mov     [esp+38h], edi
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
pshufd  xmm0, xmm1, 0aah
movd    dword ptr [esp+14h], xmm0
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movups  xmm3, xmmword ptr [esi]
pshufd  xmm0, xmm1, 0ffh
mov     [esp+24h], esi
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
mov     [esp+1ch], edx
movaps  xmmword ptr [esp+0e0h], xmm6
xor     edi, ds:dword_37b00140[eax*4]
movd    eax, xmm0
movzx   eax, al
xor     edi, ds:dword_37aff540[eax*4]
movd    eax, xmm1
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm0
mov     esi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
xor     esi, ds:dword_37aff940[eax*4]
mov     eax, edx
mov     edx, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
mov     ecx, [esp+1ch]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
movzx   eax, cl
shr     ecx, 8
movzx   ecx, cl
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+14h]
mov     ecx, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     ecx, ds:dword_37affd40[eax*4]
movd    eax, xmm0
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+38h]
movd    xmm0, esi
movd    xmm2, edi
movd    xmm6, ecx
punpckldq xmm6, xmm0
movd    xmm1, edx
movaps  xmmword ptr [esp+180h], xmm6
movaps  xmm0, xmmword ptr [esp+180h]
punpckldq xmm1, xmm2
punpckldq xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+170h]
movaps  xmmword ptr [esp+180h], xmm0
pxor    xmm0, xmmword ptr [esp+1d0h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm3, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+1ch], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+1ch]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm3, ecx
mov     eax, [esp+24h]
punpckldq xmm3, xmm0
punpckldq xmm1, xmm2
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+190h]
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+1f0h], xmm3
pxor    xmm0, xmmword ptr [esp+1e0h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm4, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm4
pshufd  xmm0, xmm4, 0ffh
mov     [esp+1ch], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+1ch]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm4, ecx
punpckldq xmm4, xmm0
punpckldq xmm4, xmm1
pxor    xmm4, xmmword ptr [esp+1a0h]
movaps  xmmword ptr [esp+200h], xmm4
movaps  xmm0, xmm4
pxor    xmm0, xmmword ptr [esp+0a0h]
mov     eax, [esp+20h]
movaps  xmm6, xmmword ptr [esp+0e0h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm5, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm5, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm5
pshufd  xmm0, xmm5, 0ffh
mov     [esp+1ch], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm5
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm5
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+1ch]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm5
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+28h]
movd    xmm5, ecx
punpckldq xmm5, xmm0
punpckldq xmm5, xmm1
pxor    xmm5, xmmword ptr [esp+1b0h]
movaps  xmm0, xmm5
movaps  xmmword ptr [esp+210h], xmm5
pxor    xmm0, xmmword ptr [esp+0b0h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm6, 55h
movd    ecx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm6
pshufd  xmm0, xmm6, 0aah
movd    edx, xmm0
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
pshufd  xmm0, xmm6, 0ffh
movd    ecx, xmm0
mov     [esp+1ch], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm6
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm6
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+1ch]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm6
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+34h]
movd    xmm6, ecx
xor     ecx, ecx
punpckldq xmm6, xmm0
punpckldq xmm6, xmm1
movaps  xmm1, xmmword ptr [esp+180h]
pxor    xmm6, xmm7
movaps  xmm0, xmm6
movaps  xmmword ptr [esp+220h], xmm6
pxor    xmm0, xmmword ptr [esp+0d0h]
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
or      ecx, eax
mov     [esp+38h], ecx
and     ecx, 1ffff0h
mov     [esp+14h], esi
add     ecx, [esp+8ch]
movaps  xmm0, xmm3
mov     [esp+58h], ecx
xor     edx, edx
psrldq  xmm0, 4
movd    dword ptr [esp+20h], xmm0
movaps  xmm0, xmm4
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+108h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+10ch], eax
movd    eax, xmm3
psrldq  xmm0, 4
movd    dword ptr [esp+30h], xmm0
movaps  xmm0, xmm5
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+0a0h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+90h]
mov     [esp+60h], ecx
movd    dword ptr [esp+34h], xmm0
movaps  xmm0, xmm6
psrldq  xmm0, 4
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+120h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+124h], eax
movd    eax, xmm4
mov     [esp+8], edi
movd    dword ptr [esp+1ch], xmm0
or      ecx, eax
mov     [esp+0b0h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0cch]
mov     [esp+40h], ecx
mov     eax, [ecx]
mov     [esp+80h], eax
mov     eax, [ecx+4]
mov     [esp+84h], eax
mov     eax, [ecx+8]
mov     [esp+138h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+13ch], eax
movd    eax, xmm5
or      ecx, eax
mov     [esp+48h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+94h]
mov     [esp+50h], ecx
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+150h], eax
mov     eax, [ecx+0ch]
mov     [esp+154h], eax
movd    eax, xmm6
or      edx, eax
mov     ecx, edx
mov     [esp+0d0h], edx
and     ecx, 1ffff0h
add     ecx, [esp+98h]
mov     [esp+0e0h], ecx
mov     eax, [ecx]
mov     [esp+70h], eax
mov     eax, [ecx+4]
mov     [esp+74h], eax
mov     eax, [ecx+8]
push    0
push    esi
push    0
mov     [esp+174h], eax
mov     eax, [ecx+0ch]
push    edi
mov     [esp+17ch], eax
call    __allmul
push    0
push    dword ptr [esp+3ch]
mov     [esp+20h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+3ch]
mov     edi, eax
mov     [esp+30h], edx
push    0
push    dword ptr [esp+18h]
call    __allmul
mov     ecx, eax
mov     eax, [esp+18h]
add     ecx, eax
adc     edx, esi
mov     [esp+18h], edx
cmp     edx, esi
ja      short loc_37a44d81
jb      short loc_37a44d6f
cmp     ecx, eax
jnb     short loc_37a44d81
mov     dword ptr [esp+38h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a44d9a
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     eax, [esp+3ch]
mov     [esp+24h], eax
mov     eax, [esp+38h]
mov     [esp+38h], eax
xor     eax, eax
add     eax, edi
mov     [esp+100h], eax
adc     ecx, [esp+28h]
mov     [esp+104h], ecx
cmp     ecx, [esp+28h]
ja      short loc_37a44dc5
jb      short loc_37a44dbc
cmp     eax, edi
jnb     short loc_37a44dc5
mov     esi, 1
xor     edi, edi
jmp     short loc_37a44dd6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     edi, [esp+2ch]
mov     esi, [esp+28h]
push    0
push    dword ptr [esp+18h]
push    0
push    dword ptr [esp+18h]
call    __allmul
add     eax, [esp+18h]
movq    xmm0, qword ptr [esp+100h]
movq    xmm2, qword ptr [esp+8]
adc     edx, 0
add     eax, [esp+38h]
push    0
adc     edx, [esp+28h]
add     eax, esi
push    dword ptr [esp+24h]
adc     edx, edi
mov     [esp+100h], eax
mov     eax, [esp+60h]
mov     [esp+104h], edx
movq    xmm1, qword ptr [esp+100h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+110h]
paddq   xmm1, xmmword ptr [esp+178h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+188h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+84h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+180h], xmm2
movd    dword ptr [esp+48h], xmm2
mov     dword ptr [esp+6ch], 0
movaps  xmmword ptr [esp+1e0h], xmm0
call    __allmul
mov     edi, [esp+0a0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+84h]
mov     [esp+68h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+88h]
mov     [esp+0b0h], eax
mov     [esp+28h], edx
call    __allmul
mov     ecx, [esp+58h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a44edf
jb      short loc_37a44ecd
cmp     eax, ecx
jnb     short loc_37a44edf
mov     dword ptr [esp+24h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a44ef8
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     ecx, [esp+5ch]
mov     [esp+28h], ecx
mov     ecx, [esp+58h]
mov     [esp+24h], ecx
mov     edx, [esp+0a0h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+118h], ecx
adc     eax, [esp+18h]
mov     [esp+11ch], eax
cmp     eax, [esp+18h]
ja      short loc_37a44f30
jb      short loc_37a44f21
cmp     ecx, edx
jnb     short loc_37a44f30
mov     esi, 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a44f4e
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0a0h], xmm0
mov     eax, [esp+0a4h]
mov     esi, [esp+0a0h]
mov     [esp+14h], eax
push    0
push    dword ptr [esp+24h]
push    0
push    dword ptr [esp+88h]
call    __allmul
movq    xmm0, qword ptr [esp+118h]
add     eax, edi
movq    xmm2, qword ptr [esp+78h]
adc     edx, 0
mov     dword ptr [esp+64h], 0
add     eax, [esp+24h]
push    0
adc     edx, [esp+2ch]
add     eax, esi
push    dword ptr [esp+34h]
adc     edx, [esp+1ch]
mov     [esp+118h], eax
mov     eax, [esp+68h]
mov     [esp+11ch], edx
movq    xmm1, qword ptr [esp+118h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+128h]
paddq   xmm1, xmmword ptr [esp+198h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1f8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+8ch]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+1a0h], xmm2
movd    dword ptr [esp+34h], xmm2
movaps  xmmword ptr [esp+1f0h], xmm0
call    __allmul
mov     edi, [esp+0b0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+8ch]
mov     [esp+70h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+90h]
mov     [esp+0c0h], eax
mov     [esp+0b0h], edx
call    __allmul
mov     ecx, [esp+60h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a4505d
jb      short loc_37a4504b
cmp     eax, ecx
jnb     short loc_37a4505d
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a45076
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     ecx, [esp+64h]
mov     [esp+28h], ecx
mov     ecx, [esp+60h]
mov     [esp+20h], ecx
mov     edx, [esp+0b0h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+130h], ecx
adc     eax, [esp+0a0h]
mov     [esp+134h], eax
cmp     eax, [esp+0a0h]
ja      short loc_37a450b7
jb      short loc_37a450a5
cmp     ecx, edx
jnb     short loc_37a450b7
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a450d9
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0b0h], xmm0
mov     eax, [esp+0b4h]
mov     [esp+18h], eax
mov     eax, [esp+0b0h]
mov     [esp+14h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+34h]
push    esi
push    dword ptr [esp+90h]
call    __allmul
movq    xmm0, qword ptr [esp+130h]
add     edi, eax
movq    xmm2, qword ptr [esp+80h]
mov     eax, [esp+40h]
adc     esi, edx
add     edi, [esp+20h]
push    0
adc     esi, [esp+2ch]
add     edi, [esp+18h]
push    dword ptr [esp+38h]
adc     esi, [esp+20h]
mov     [esp+130h], edi
mov     [esp+134h], esi
movq    xmm1, qword ptr [esp+130h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+140h]
paddq   xmm1, xmmword ptr [esp+1a8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+208h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+1b0h], xmm2
movd    dword ptr [esp+30h], xmm2
mov     dword ptr [esp+54h], 0
movaps  xmmword ptr [esp+0b0h], xmm0
call    __allmul
mov     esi, [esp+48h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+74h]
mov     [esp+50h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+78h]
mov     [esp+58h], eax
mov     [esp+0c0h], edx
call    __allmul
mov     ecx, [esp+40h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a451dd
jb      short loc_37a451cb
cmp     eax, ecx
jnb     short loc_37a451dd
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a451f6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+30h], ecx
mov     ecx, [esp+40h]
mov     [esp+18h], ecx
mov     edx, [esp+48h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+148h], ecx
adc     eax, [esp+0b0h]
mov     [esp+14ch], eax
cmp     eax, [esp+0b0h]
ja      short loc_37a45234
jb      short loc_37a45222
cmp     ecx, edx
jnb     short loc_37a45234
mov     dword ptr [esp+28h], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a4524d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     eax, [esp+4ch]
mov     [esp+14h], eax
mov     eax, [esp+48h]
mov     [esp+28h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+38h]
push    edi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+148h]
add     esi, eax
movq    xmm2, qword ptr [esp+68h]
mov     eax, [esp+50h]
adc     edi, edx
add     esi, [esp+18h]
push    0
adc     edi, [esp+34h]
add     esi, [esp+2ch]
push    dword ptr [esp+20h]
adc     edi, [esp+1ch]
mov     [esp+148h], esi
mov     [esp+14ch], edi
movq    xmm1, qword ptr [esp+148h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+158h]
paddq   xmm1, xmmword ptr [esp+1b8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+218h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+7ch]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+1c0h], xmm2
movd    dword ptr [esp+38h], xmm2
mov     dword ptr [esp+64h], 0
movaps  xmmword ptr [esp+0c0h], xmm0
call    __allmul
mov     edi, [esp+0d0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+7ch]
mov     [esp+60h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+80h]
mov     [esp+0e0h], eax
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+50h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a45351
jb      short loc_37a4533f
cmp     eax, ecx
jnb     short loc_37a45351
mov     dword ptr [esp+34h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a4536a
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     ecx, [esp+54h]
mov     [esp+18h], ecx
mov     ecx, [esp+50h]
mov     [esp+34h], ecx
mov     edx, [esp+0d0h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+160h], ecx
adc     eax, [esp+48h]
mov     [esp+164h], eax
cmp     eax, [esp+48h]
ja      short loc_37a453a2
jb      short loc_37a45393
cmp     ecx, edx
jnb     short loc_37a453a2
mov     esi, 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a453c0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0d0h], xmm0
mov     eax, [esp+0d4h]
mov     esi, [esp+0d0h]
mov     [esp+30h], eax
push    0
push    dword ptr [esp+20h]
push    0
push    dword ptr [esp+80h]
call    __allmul
movq    xmm0, qword ptr [esp+160h]
add     eax, edi
movq    xmm7, qword ptr [esp+70h]
mov     ecx, [esp+28h]
adc     edx, 0
add     eax, [esp+34h]
mov     edi, [esp+38h]
adc     edx, [esp+18h]
add     eax, esi
mov     esi, [esp+24h]
adc     edx, [esp+30h]
sub     dword ptr [esp+9ch], 1
mov     [esp+158h], eax
mov     eax, [esp+0e0h]
mov     [esp+15ch], edx
movq    xmm1, qword ptr [esp+158h]
mov     edx, [esp+20h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+168h]
paddq   xmm1, xmmword ptr [esp+1c0h]
punpcklqdq xmm7, xmm0
movaps  xmm0, xmmword ptr [esp+220h]
pxor    xmm7, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+1c0h], xmm7
movd    eax, xmm7
mov     dword ptr [esp+0e4h], 0
movaps  xmmword ptr [esp+0d0h], xmm0
jnz     loc_37a44495
mov     edi, [ebp+10h]
xor     esi, esi
nop
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a7fac0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 5
jb      short loc_37a45480
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 0e8h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a4641b
push    40h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+14h]
mov     edx, edi
mov     esi, [ebp+8]
push    ecx
mov     ecx, esi
push    dword ptr [eax]
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 4
mov     edx, [ebp+0ch]
add     edi, esi
mov     ecx, edi
push    dword ptr [eax+4]
call    sub_37a181e0
mov     ecx, [ebp+14h]
add     esp, 8
mov     eax, [ecx]
mov     ecx, [ecx+4]
mov     [esp+9ch], eax
mov     [esp+8ch], ecx
mov     edx, [eax+0e0h]
mov     [esp+78h], edx
mov     edx, [ecx+0e0h]
mov     [esp+34h], edx
mov     edx, [eax+0c0h]
mov     eax, [eax+0c4h]
xor     eax, [esi+27h]
xor     edx, [esi+23h]
mov     [esp+0c0h], eax
mov     eax, [ecx+0c0h]
xor     eax, [edi+23h]
mov     [esp+0c8h], eax
mov     eax, [ecx+0c4h]
xor     eax, [edi+27h]
mov     edi, [esp+9ch]
mov     ecx, edi
mov     [esp+0c4h], edx
mov     edx, [esp+78h]
mov     [esp+0cch], eax
call    loc_37a7f150
mov     edx, [esp+34h]
mov     ecx, [esp+8ch]
call    loc_37a7f150
mov     edx, [esp+8ch]
mov     eax, [edi+20h]
xor     eax, [edi]
mov     ecx, [edi+24h]
xor     ecx, [edi+4]
mov     esi, [edx+20h]
xor     esi, [edx]
mov     [esp+28h], eax
mov     [esp+0a0h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+2ch], ecx
mov     [esp+0a4h], ecx
mov     ecx, [edi+2ch]
xor     ecx, [edi+0ch]
mov     [esp+94h], eax
mov     [esp+0b4h], eax
mov     eax, [edi+28h]
xor     eax, [edi+8]
mov     [esp+30h], ecx
mov     [esp+0ach], ecx
mov     ecx, [edx+2ch]
xor     ecx, [edx+0ch]
mov     [esp+6ch], eax
mov     [esp+0a8h], eax
mov     eax, [edx+28h]
xor     eax, [edx+8]
mov     [esp+74h], ecx
mov     [esp+0bch], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+70h], eax
mov     [esp+0b8h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+0b0h], esi
mov     [esp+20h], ecx
mov     [esp+24h], eax
movq    xmm0, qword ptr [esp+20h]
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+24h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+20h], ecx
movq    xmm5, qword ptr [esp+20h]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+24h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+20h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+20h]
mov     [esp+24h], eax
mov     eax, [esp+34h]
mov     [esp+20h], ecx
add     eax, 8
movq    xmm6, qword ptr [esp+20h]
punpcklqdq xmm6, xmm0
mov     [esp+20h], eax
mov     dword ptr [esp+98h], 80000h
mov     edi, [esp+28h]
movq    xmm1, qword ptr [esp+0a8h]
and     edi, 1ffff0h
add     edi, [esp+78h]
movq    xmm0, qword ptr [esp+0a0h]
punpcklqdq xmm0, xmm1
push    edi
mov     [esp+64h], edi
call    loc_37a22320
movq    xmm1, qword ptr [esp+0bch]
movaps  xmm7, xmm0
movq    xmm0, qword ptr [esp+0b4h]
mov     eax, esi
add     esp, 4
punpcklqdq xmm0, xmm1
and     eax, 1ffff0h
movaps  xmmword ptr [esp+0d0h], xmm7
add     eax, [esp+34h]
mov     [esp+18h], eax
push    eax
call    loc_37a22320
xor     ecx, ecx
movaps  xmm2, xmm7
pxor    xmm2, xmm5
movaps  xmm3, xmm0
movd    eax, xmm2
movaps  xmm1, xmm2
psrldq  xmm1, 4
add     esp, 4
movd    dword ptr [edi+4], xmm1
movaps  xmm1, xmm3
or      ecx, eax
movhlps xmm2, xmm2
mov     [edi], ecx
movaps  xmm0, xmm2
psrldq  xmm0, 4
xor     edi, edi
movd    eax, xmm2
pxor    xmm1, xmm6
movd    dword ptr [esp+1ch], xmm0
movaps  xmmword ptr [esp+0e0h], xmm3
or      edi, eax
movd    eax, xmm0
mov     edx, edi
movaps  xmm0, xmm1
psrldq  xmm0, 4
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
xor     eax, [esp+1ch]
and     edx, 3
mov     ecx, [esp+60h]
shl     edx, 1ch
xor     edx, edi
xor     edi, edi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+18h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    dword ptr [esp+1ch], xmm0
or      edi, eax
movd    eax, xmm0
mov     edx, edi
shrd    edx, eax, 18h
shr     eax, 18h
movaps  xmm0, xmm7
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
psrldq  xmm0, 4
and     ecx, 0ch
movd    dword ptr [esp+7ch], xmm0
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
xor     eax, [esp+1ch]
and     edx, 3
mov     ecx, [esp+18h]
movaps  xmm0, xmm3
shl     edx, 1ch
xor     edx, edi
psrldq  xmm0, 4
mov     edi, [esp+78h]
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm7
xor     edx, edx
push    0
push    dword ptr [esp+80h]
or      ecx, eax
movd    dword ptr [esp+24h], xmm0
movd    eax, xmm3
mov     [esp+88h], ecx
push    0
or      edx, eax
mov     eax, ecx
and     eax, 1ffff0h
mov     [esp+24h], edx
mov     edx, [eax+edi]
lea     ecx, [eax+edi]
add     edi, 8
mov     [esp+50h], ecx
mov     ecx, [ecx+4]
add     eax, edi
mov     [esp+20h], ecx
mov     [esp+48h], eax
push    edx
mov     ecx, [eax]
mov     eax, [eax+4]
mov     [esp+70h], edx
mov     [esp+58h], ecx
mov     [esp+5ch], eax
call    __allmul
push    0
push    dword ptr [esp+84h]
mov     [esp+60h], eax
mov     edi, edx
push    0
push    dword ptr [esp+6ch]
call    __allmul
push    0
push    dword ptr [esp+84h]
mov     [esp+58h], eax
push    0
push    dword ptr [esp+20h]
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+58h]
add     eax, ecx
adc     edx, edi
mov     [esp+90h], edx
cmp     edx, edi
ja      short loc_37a46826
jb      short loc_37a46811
cmp     eax, ecx
jnb     short loc_37a46826
mov     dword ptr [esp+80h], 0
mov     dword ptr [esp+38h], 1
jmp     short loc_37a46842
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     ecx, [esp+5ch]
mov     [esp+38h], ecx
mov     ecx, [esp+58h]
mov     [esp+80h], ecx
mov     edx, [esp+50h]
xor     edi, edi
mov     ecx, [esp+40h]
add     edi, edx
adc     eax, ecx
mov     [esp+40h], eax
cmp     eax, ecx
ja      short loc_37a46870
jb      short loc_37a4685e
cmp     edi, edx
jnb     short loc_37a46870
mov     dword ptr [esp+50h], 1
mov     dword ptr [esp+58h], 0
jmp     short loc_37a46889
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     eax, [esp+54h]
mov     [esp+58h], eax
mov     eax, [esp+50h]
mov     [esp+50h], eax
push    0
push    dword ptr [esp+80h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+90h]
mov     ecx, [esp+30h]
adc     edx, 0
add     eax, [esp+80h]
push    0
adc     edx, [esp+3ch]
add     eax, [esp+54h]
push    dword ptr [esp+20h]
adc     edx, [esp+60h]
add     [esp+30h], eax
mov     eax, [esp+74h]
adc     [esp+34h], edx
add     eax, edi
mov     edx, [esp+30h]
adc     ecx, [esp+48h]
mov     edi, [esp+34h]
mov     [esp+38h], ecx
mov     ecx, [esp+4ch]
mov     [esp+74h], eax
push    0
mov     [ecx], edx
mov     [ecx+4], edi
mov     ecx, eax
mov     eax, [esp+3ch]
xor     ecx, edx
xor     ecx, [esp+0d0h]
xor     eax, edi
mov     edi, [esp+48h]
xor     eax, [esp+0cch]
xor     edx, [esp+6ch]
mov     [esp+34h], edx
mov     [edi], ecx
mov     ecx, edi
mov     edi, [esp+38h]
xor     edi, [esp+20h]
mov     [esp+0ach], edx
mov     [ecx+4], eax
mov     eax, [esp+78h]
xor     eax, [esp+54h]
mov     ecx, [esp+40h]
mov     [esp+78h], eax
mov     [esp+0b4h], eax
mov     eax, [esp+3ch]
xor     eax, [esp+58h]
mov     [esp+3ch], eax
mov     [esp+0b8h], eax
mov     eax, [esp+24h]
and     eax, 1ffff0h
mov     [esp+38h], edi
add     ecx, eax
mov     [esp+0b0h], edi
add     eax, [esp+2ch]
mov     [esp+9ch], ecx
mov     [esp+5ch], eax
mov     edx, [ecx]
mov     ecx, [ecx+4]
mov     [esp+20h], ecx
mov     ecx, [eax]
mov     eax, [eax+4]
push    edx
mov     [esp+48h], edx
mov     [esp+50h], ecx
mov     [esp+8ch], eax
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+54h], eax
mov     edi, edx
push    0
push    dword ptr [esp+44h]
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+50h], eax
mov     [esp+4ch], edx
push    0
push    dword ptr [esp+20h]
call    __allmul
mov     ecx, edx
mov     edx, [esp+4ch]
add     eax, edx
adc     ecx, edi
mov     [esp+4ch], ecx
cmp     ecx, edi
ja      short loc_37a469f7
jb      short loc_37a469e5
cmp     eax, edx
jnb     short loc_37a469f7
mov     dword ptr [esp+60h], 0
mov     dword ptr [esp+3ch], 1
jmp     short loc_37a46a10
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     ecx, [esp+64h]
mov     [esp+3ch], ecx
mov     ecx, [esp+60h]
mov     [esp+60h], ecx
mov     edi, [esp+48h]
xor     ecx, ecx
mov     edx, [esp+44h]
add     ecx, edi
mov     [esp+48h], ecx
adc     eax, edx
mov     [esp+44h], eax
cmp     eax, edx
ja      short loc_37a46a3f
jb      short loc_37a46a30
cmp     ecx, edi
jnb     short loc_37a46a3f
mov     edi, 1
mov     dword ptr [esp+58h], 0
jmp     short loc_37a46a5d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+80h], xmm0
mov     eax, [esp+84h]
mov     edi, [esp+80h]
mov     [esp+58h], eax
push    0
push    dword ptr [esp+20h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+4ch]
mov     ecx, [esp+90h]
adc     edx, 0
movaps  xmm5, xmmword ptr [esp+0d0h]
add     eax, [esp+60h]
movaps  xmm6, xmmword ptr [esp+0e0h]
adc     edx, [esp+3ch]
add     eax, edi
mov     edi, [esp+94h]
adc     edx, [esp+58h]
add     esi, eax
mov     eax, [esp+74h]
adc     edi, edx
mov     [ecx], esi
mov     edx, [esp+70h]
add     edx, [esp+48h]
mov     [ecx+4], edi
mov     ecx, edx
adc     eax, [esp+44h]
xor     ecx, esi
xor     ecx, [esp+0c8h]
xor     esi, [esp+38h]
mov     [esp+70h], edx
mov     edx, [esp+50h]
mov     [esp+74h], eax
xor     eax, edi
xor     eax, [esp+0cch]
xor     edi, [esp+14h]
mov     [edx], ecx
mov     ecx, edx
mov     edx, [esp+70h]
xor     edx, [esp+40h]
mov     [esp+0b0h], esi
mov     [ecx+4], eax
mov     eax, [esp+74h]
xor     eax, [esp+7ch]
sub     dword ptr [esp+98h], 1
mov     [esp+94h], edi
mov     [esp+0b4h], edi
mov     [esp+70h], edx
mov     [esp+0b8h], edx
mov     [esp+74h], eax
mov     [esp+0bch], eax
jnz     loc_37a465e3
mov     edx, [esp+9ch]
mov     ecx, [esp+78h]
call    sub_37a7fac0
mov     edx, [esp+8ch]
mov     ecx, [esp+34h]
call    sub_37a7fac0
mov     ecx, [esp+9ch]
call    sub_37a17760
mov     ecx, [esp+8ch]
call    sub_37a17760
mov     edi, [ebp+14h]
mov     esi, [ebp+10h]
push    esi
push    0c8h
mov     eax, [edi]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
mov     ecx, [edi+4]
lea     eax, [esi+20h]
add     esp, 0ch
movzx   edx, byte ptr [ecx]
push    eax
and     edx, 3
push    0c8h
push    ecx
mov     eax, ds:funcs_37a22bf9[edx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 248h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a4847e
push    0a0h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+8]
xor     esi, esi
mov     [esp+20h], eax
push    ecx
mov     ecx, [ebp+14h]
mov     edx, edi
push    dword ptr [ecx+esi*4]
mov     ecx, eax
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     eax, [esp+20h]
inc     esi
add     eax, edi
mov     [esp+20h], eax
cmp     esi, 5
jb      short loc_37a48487
mov     ecx, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [ecx]
mov     esi, [ecx+4]
mov     edi, [ecx+8]
mov     [esp+3ch], edi
mov     eax, [edx+0e0h]
mov     [esp+98h], eax
mov     eax, [esi+0e0h]
mov     [esp+9ch], eax
mov     eax, [edi+0e0h]
mov     [esp+0ach], eax
mov     eax, [ecx+0ch]
mov     edi, [ebp+8]
mov     eax, [eax+0e0h]
mov     [esp+0a0h], eax
mov     eax, [ecx+10h]
mov     ecx, [edx+0c0h]
mov     eax, [eax+0e0h]
mov     [esp+0a4h], eax
mov     eax, [ebp+8]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
xor     eax, [edi+27h]
mov     [esp+0ch], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm5, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, edi
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [ebp+0ch]
mov     [esp+8], ecx
movaps  xmmword ptr [esp+200h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     ecx, [edx+eax+23h]
xor     ecx, [esi+0c0h]
mov     eax, [edx+eax+27h]
xor     eax, [esi+0c4h]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
punpcklqdq xmm1, xmm0
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
movaps  xmmword ptr [esp+1e0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
mov     [esp+8], ecx
mov     ecx, [esi+20h]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+170h], xmm5
movaps  xmmword ptr [esp+210h], xmm1
xor     ecx, [esi]
mov     edi, [esp+3ch]
mov     eax, [esi+24h]
xor     eax, [esi+4]
mov     [esp+0ch], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
movq    xmm4, qword ptr [esp+8]
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     esi, [ebp+0ch]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+esi*2+27h]
xor     eax, [edi+0c4h]
mov     [esp+8], ecx
movq    xmm1, qword ptr [esp+8]
mov     ecx, [edx+esi*2+23h]
xor     ecx, [edi+0c0h]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
movaps  xmmword ptr [esp+1f0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
movq    xmm3, qword ptr [esp+8]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     edi, [ebp+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
lea     eax, [edx+esi*2]
mov     edx, [edi+0ch]
mov     [esp+8], ecx
mov     ecx, [esi+eax+23h]
mov     eax, [esi+eax+27h]
xor     ecx, [edx+0c0h]
xor     eax, [edx+0c4h]
movaps  xmmword ptr [esp+220h], xmm1
movq    xmm1, qword ptr [esp+8]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+0b0h], xmm1
xorps   xmm1, xmm1
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+160h], xmm4
movaps  xmmword ptr [esp+150h], xmm3
movaps  xmmword ptr [esp+230h], xmm1
mov     eax, [edx+2ch]
xorps   xmm2, xmm2
xor     eax, [edx+0ch]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm1, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [ebp+8]
mov     [esp+8], ecx
movq    xmm7, qword ptr [esp+8]
punpcklqdq xmm7, xmm0
mov     ecx, [eax+esi*4+23h]
xor     ecx, [edx+0c0h]
mov     eax, [eax+esi*4+27h]
xor     eax, [edx+0c4h]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
movaps  xmmword ptr [esp+240h], xmm2
movq    xmm2, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm6, qword ptr [esp+8]
movaps  xmmword ptr [esp+140h], xmm1
movaps  xmmword ptr [esp+1c0h], xmm2
punpcklqdq xmm6, xmm0
movd    edi, xmm5
mov     dword ptr [esp+44h], 0
movd    esi, xmm4
mov     dword ptr [esp+4ch], 0
movd    edx, xmm3
mov     dword ptr [esp+5ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+6ch], 0
movd    eax, xmm2
mov     dword ptr [esp+0c4h], 0
mov     dword ptr [esp+3ch], 80000h
nop     word ptr [eax+eax+00000000h]
and     edx, 1ffff0h
and     ecx, 1ffff0h
add     edx, [esp+0ach]
and     eax, 1ffff0h
add     ecx, [esp+0a0h]
and     esi, 1ffff0h
add     eax, [esp+0a4h]
and     edi, 1ffff0h
add     esi, [esp+9ch]
add     edi, [esp+98h]
mov     [esp+18h], eax
mov     [esp+10h], ecx
movups  xmm0, xmmword ptr [esi]
movaps  xmmword ptr [esp+190h], xmm0
movups  xmm0, xmmword ptr [edx]
movaps  xmmword ptr [esp+1a0h], xmm0
movups  xmm0, xmmword ptr [ecx]
xor     ecx, ecx
movaps  xmmword ptr [esp+1b0h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+1d0h], xmm0
movups  xmm0, xmmword ptr [edi]
aesenc  xmm0, xmm5
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+180h], xmm0
pxor    xmm1, xmmword ptr [esp+1e0h]
movaps  xmm5, xmmword ptr [esp+190h]
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    dword ptr [edi+4], xmm0
movd    eax, xmm1
movhlps xmm1, xmm1
movaps  xmm0, xmm1
mov     [esp+34h], esi
or      ecx, eax
psrldq  xmm0, 4
mov     [edi], ecx
xor     esi, esi
movd    eax, xmm1
mov     [esp+20h], edi
movd    edi, xmm0
or      esi, eax
mov     [esp+28h], edx
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
aesenc  xmm5, xmm4
shr     eax, 18h
movaps  xmm1, xmm5
pxor    xmm1, xmmword ptr [esp+1f0h]
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
movaps  xmmword ptr [esp+190h], xmm5
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+20h]
and     edx, 3
xor     eax, edi
shl     edx, 1ch
xor     edx, esi
movaps  xmm0, xmm1
psrldq  xmm0, 4
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+34h]
xor     esi, esi
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
mov     [eax], ecx
movd    edi, xmm0
movaps  xmm4, xmmword ptr [esp+1a0h]
movd    eax, xmm1
aesenc  xmm4, xmm3
movaps  xmm1, xmm4
movaps  xmm3, xmmword ptr [esp+1b0h]
or      esi, eax
pxor    xmm1, xmmword ptr [esp+0b0h]
mov     edx, esi
movaps  xmmword ptr [esp+1a0h], xmm4
mov     eax, edi
movaps  xmm0, xmm1
shrd    edx, eax, 18h
psrldq  xmm0, 4
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+34h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     esi, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
aesenc  xmm3, xmmword ptr [esp+140h]
movhlps xmm1, xmm1
or      ecx, eax
movaps  xmmword ptr [esp+1b0h], xmm3
mov     eax, [esp+28h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
movaps  xmm1, xmm3
pxor    xmm1, xmm7
movaps  xmm0, xmm1
or      esi, eax
psrldq  xmm0, 4
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+28h]
and     edx, 3
xor     eax, edi
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+10h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
mov     [eax], ecx
movd    edi, xmm0
movaps  xmm7, xmmword ptr [esp+1d0h]
xor     esi, esi
movd    eax, xmm1
aesenc  xmm7, xmm2
movaps  xmm1, xmm7
movaps  xmmword ptr [esp+1d0h], xmm7
or      esi, eax
pxor    xmm1, xmm6
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movaps  xmm0, xmm1
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
psrldq  xmm0, 4
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
xor     eax, eax
sar     edx, cl
xor     eax, edi
mov     ecx, [esp+10h]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     esi, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+18h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
movaps  xmm1, xmmword ptr [esp+180h]
movaps  xmm0, xmm1
or      esi, eax
psrldq  xmm0, 4
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+18h]
and     edx, 3
xor     eax, edi
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
mov     [esp+10h], esi
or      ecx, eax
mov     [esp+18h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+98h]
mov     [esp+40h], ecx
mov     edi, [ecx]
mov     eax, [ecx+4]
mov     [esp+8], edi
mov     [esp+0ch], eax
mov     eax, [ecx+8]
movaps  xmm0, xmm5
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0dch], eax
movd    eax, xmm5
psrldq  xmm0, 4
movd    dword ptr [esp+34h], xmm0
movaps  xmm0, xmm4
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+0b0h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+9ch]
mov     [esp+48h], ecx
movd    dword ptr [esp+24h], xmm0
movaps  xmm0, xmm3
psrldq  xmm0, 4
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0f0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0f4h], eax
movd    eax, xmm4
push    0
movd    dword ptr [esp+3ch], xmm0
movaps  xmm0, xmm7
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+54h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0b0h]
mov     [esp+5ch], ecx
push    esi
push    0
mov     eax, [ecx]
mov     [esp+8ch], eax
mov     eax, [ecx+4]
mov     [esp+90h], eax
mov     eax, [ecx+8]
mov     [esp+114h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+118h], eax
movd    eax, xmm3
push    edi
movd    dword ptr [esp+0b8h], xmm0
or      ecx, eax
mov     [esp+70h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0b0h]
mov     [esp+78h], ecx
mov     eax, [ecx]
mov     [esp+98h], eax
mov     eax, [ecx+4]
mov     [esp+9ch], eax
mov     eax, [ecx+8]
mov     [esp+130h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+134h], eax
movd    eax, xmm7
or      ecx, eax
mov     [esp+80h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+0b4h]
mov     [esp+0d0h], ecx
mov     eax, [ecx]
mov     [esp+0a0h], eax
mov     eax, [ecx+4]
mov     [esp+0a4h], eax
mov     eax, [ecx+8]
mov     [esp+148h], eax
mov     eax, [ecx+0ch]
mov     [esp+14ch], eax
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+1ch], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     edi, eax
mov     [esp+30h], edx
push    0
push    dword ptr [esp+18h]
call    __allmul
mov     ecx, eax
mov     eax, [esp+14h]
add     ecx, eax
adc     edx, esi
mov     [esp+14h], edx
cmp     edx, esi
ja      short loc_37a48e12
jb      short loc_37a48e00
cmp     ecx, eax
jnb     short loc_37a48e12
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+20h], 1
jmp     short loc_37a48e2b
xorps   xmm0, xmm0
movlpd  qword ptr [esp+18h], xmm0
mov     eax, [esp+1ch]
mov     [esp+20h], eax
mov     eax, [esp+18h]
mov     [esp+18h], eax
xor     eax, eax
add     eax, edi
mov     [esp+0d0h], eax
adc     ecx, [esp+28h]
mov     [esp+0d4h], ecx
cmp     ecx, [esp+28h]
ja      short loc_37a48e56
jb      short loc_37a48e4d
cmp     eax, edi
jnb     short loc_37a48e56
mov     esi, 1
xor     edi, edi
jmp     short loc_37a48e67
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     edi, [esp+2ch]
mov     esi, [esp+28h]
push    0
push    dword ptr [esp+14h]
push    0
push    dword ptr [esp+18h]
call    __allmul
add     eax, [esp+14h]
movq    xmm0, qword ptr [esp+0d0h]
mov     ecx, [esp+40h]
adc     edx, 0
add     eax, [esp+18h]
movq    xmm2, qword ptr [esp+8]
adc     edx, [esp+20h]
add     eax, esi
mov     [esp+0c8h], eax
adc     edx, edi
mov     dword ptr [esp+44h], 0
mov     [esp+0cch], edx
movq    xmm1, qword ptr [esp+0c8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+170h]
movaps  xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+200h]
movups  xmmword ptr [ecx], xmm0
movq    xmm0, qword ptr [esp+0d8h]
mov     eax, [ecx]
xor     [ecx+8], eax
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
push    0
push    dword ptr [esp+38h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+188h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+84h]
movaps  xmmword ptr [esp+180h], xmm2
movd    dword ptr [esp+30h], xmm2
movaps  xmmword ptr [esp+1f0h], xmm0
call    __allmul
mov     edi, [esp+0b0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+84h]
mov     [esp+50h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+88h]
mov     [esp+0c0h], eax
mov     [esp+24h], edx
call    __allmul
mov     ecx, [esp+40h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a48f87
jb      short loc_37a48f75
cmp     eax, ecx
jnb     short loc_37a48f87
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a48fa0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+28h], ecx
mov     ecx, [esp+40h]
mov     [esp+18h], ecx
mov     edx, [esp+0b0h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e8h], ecx
adc     eax, [esp+14h]
mov     [esp+0ech], eax
cmp     eax, [esp+14h]
ja      short loc_37a48fd8
jb      short loc_37a48fc9
cmp     ecx, edx
jnb     short loc_37a48fd8
mov     esi, 1
mov     dword ptr [esp+10h], 0
jmp     short loc_37a48ff6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0b0h], xmm0
mov     eax, [esp+0b4h]
mov     esi, [esp+0b0h]
mov     [esp+10h], eax
push    0
push    dword ptr [esp+38h]
push    0
push    dword ptr [esp+88h]
call    __allmul
movq    xmm0, qword ptr [esp+0e8h]
add     eax, edi
mov     ecx, [esp+48h]
movq    xmm2, qword ptr [esp+78h]
adc     edx, 0
add     eax, [esp+18h]
push    0
adc     edx, [esp+2ch]
add     eax, esi
push    dword ptr [esp+28h]
adc     edx, [esp+18h]
mov     [esp+0e8h], eax
mov     [esp+0ech], edx
movq    xmm1, qword ptr [esp+0e8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+168h]
movaps  xmm0, xmm1
mov     dword ptr [esp+54h], 0
pxor    xmm0, xmmword ptr [esp+218h]
movups  xmmword ptr [ecx], xmm0
movq    xmm0, qword ptr [esp+0f8h]
mov     eax, [ecx]
xor     [ecx+8], eax
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+198h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+8ch]
movaps  xmmword ptr [esp+170h], xmm2
movd    dword ptr [esp+44h], xmm2
movaps  xmmword ptr [esp+200h], xmm0
call    __allmul
mov     edi, [esp+50h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+8ch]
mov     [esp+58h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+90h]
mov     [esp+60h], eax
mov     [esp+0c0h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a49116
jb      short loc_37a49104
cmp     eax, ecx
jnb     short loc_37a49116
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a4912f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+28h], ecx
mov     ecx, [esp+48h]
mov     [esp+18h], ecx
mov     edx, [esp+50h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+100h], ecx
adc     eax, [esp+0b0h]
mov     [esp+104h], eax
cmp     eax, [esp+0b0h]
ja      short loc_37a4916d
jb      short loc_37a4915b
cmp     ecx, edx
jnb     short loc_37a4916d
mov     dword ptr [esp+10h], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a49186
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     eax, [esp+54h]
mov     [esp+14h], eax
mov     eax, [esp+50h]
mov     [esp+10h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+28h]
push    esi
push    dword ptr [esp+90h]
call    __allmul
movq    xmm0, qword ptr [esp+100h]
add     edi, eax
mov     ecx, [esp+58h]
movq    xmm2, qword ptr [esp+80h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+2ch]
add     edi, [esp+14h]
push    dword ptr [esp+3ch]
adc     esi, [esp+1ch]
mov     [esp+100h], edi
mov     [esp+104h], esi
movq    xmm1, qword ptr [esp+100h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+158h]
movaps  xmm0, xmm1
mov     dword ptr [esp+64h], 0
pxor    xmm0, xmmword ptr [esp+228h]
movups  xmmword ptr [ecx], xmm0
movq    xmm0, qword ptr [esp+110h]
mov     eax, [ecx]
xor     [ecx+8], eax
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1a8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+94h]
movaps  xmmword ptr [esp+160h], xmm2
movd    dword ptr [esp+38h], xmm2
movaps  xmmword ptr [esp+0c0h], xmm0
call    __allmul
mov     esi, [esp+60h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+94h]
mov     [esp+68h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+98h]
mov     [esp+70h], eax
mov     [esp+60h], edx
call    __allmul
mov     ecx, [esp+58h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a492a7
jb      short loc_37a49295
cmp     eax, ecx
jnb     short loc_37a492a7
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a492c0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     ecx, [esp+5ch]
mov     [esp+24h], ecx
mov     ecx, [esp+58h]
mov     [esp+14h], ecx
mov     edx, [esp+60h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+118h], ecx
adc     eax, [esp+50h]
mov     [esp+11ch], eax
cmp     eax, [esp+50h]
ja      short loc_37a492f8
jb      short loc_37a492e6
cmp     ecx, edx
jnb     short loc_37a492f8
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+10h], 0
jmp     short loc_37a49311
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+10h], eax
mov     eax, [esp+60h]
mov     [esp+18h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+3ch]
push    edi
push    dword ptr [esp+98h]
call    __allmul
movq    xmm0, qword ptr [esp+118h]
add     esi, eax
mov     ecx, [esp+68h]
movq    xmm2, qword ptr [esp+88h]
adc     edi, edx
add     esi, [esp+14h]
push    0
adc     edi, [esp+28h]
add     esi, [esp+1ch]
push    dword ptr [esp+0ach]
adc     edi, [esp+18h]
mov     [esp+118h], esi
mov     [esp+11ch], edi
movq    xmm1, qword ptr [esp+118h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+148h]
movaps  xmm0, xmm1
mov     dword ptr [esp+74h], 0
pxor    xmm0, xmmword ptr [esp+238h]
movups  xmmword ptr [ecx], xmm0
movq    xmm0, qword ptr [esp+128h]
mov     eax, [ecx]
xor     [ecx+8], eax
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1b8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+9ch]
movaps  xmmword ptr [esp+150h], xmm2
movd    dword ptr [esp+20h], xmm2
movaps  xmmword ptr [esp+190h], xmm0
call    __allmul
mov     edi, [esp+70h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+9ch]
mov     [esp+78h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a0h]
mov     [esp+80h], eax
mov     [esp+70h], edx
call    __allmul
mov     ecx, [esp+68h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a49438
jb      short loc_37a49426
cmp     eax, ecx
jnb     short loc_37a49438
mov     dword ptr [esp+38h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a49451
xorps   xmm0, xmm0
movlpd  qword ptr [esp+68h], xmm0
mov     ecx, [esp+6ch]
mov     [esp+14h], ecx
mov     ecx, [esp+68h]
mov     [esp+38h], ecx
mov     edx, [esp+70h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+130h], ecx
adc     eax, [esp+60h]
mov     [esp+134h], eax
cmp     eax, [esp+60h]
ja      short loc_37a49486
jb      short loc_37a49477
cmp     ecx, edx
jnb     short loc_37a49486
mov     esi, 1
mov     dword ptr [esp+24h], 0
jmp     short loc_37a4949b
xorps   xmm0, xmm0
movlpd  qword ptr [esp+70h], xmm0
mov     eax, [esp+74h]
mov     esi, [esp+70h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+0ach]
push    0
push    dword ptr [esp+0a0h]
call    __allmul
movq    xmm0, qword ptr [esp+130h]
add     eax, edi
mov     ecx, [esp+0c0h]
movq    xmm2, qword ptr [esp+90h]
adc     edx, 0
add     eax, [esp+38h]
movaps  xmm6, xmmword ptr [esp+1d0h]
adc     edx, [esp+14h]
add     eax, esi
movaps  xmm3, xmmword ptr [esp+150h]
adc     edx, [esp+24h]
movaps  xmm4, xmmword ptr [esp+160h]
movaps  xmm5, xmmword ptr [esp+170h]
movaps  xmm7, xmmword ptr [esp+180h]
mov     esi, [esp+34h]
mov     edi, [esp+20h]
mov     [esp+128h], eax
mov     [esp+12ch], edx
movq    xmm1, qword ptr [esp+128h]
mov     edx, [esp+28h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1c0h]
movaps  xmm0, xmm1
mov     dword ptr [esp+0c4h], 0
pxor    xmm0, xmmword ptr [esp+240h]
movups  xmmword ptr [ecx], xmm0
mov     eax, [ecx]
xor     [ecx+8], eax
movq    xmm0, qword ptr [esp+138h]
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
sub     dword ptr [esp+3ch], 1
mov     ecx, [esp+10h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movaps  xmmword ptr [esp+1c0h], xmm2
movd    eax, xmm2
jnz     loc_37a488e0
mov     edi, [ebp+10h]
xor     esi, esi
nop     dword ptr [eax+00h]
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a7ed80
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 5
jb      short loc_37a49590
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 178h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a4960b
push    60h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+8]
xor     esi, esi
mov     [esp+14h], eax
push    ecx
mov     ecx, [ebp+14h]
mov     edx, edi
push    dword ptr [ecx+esi*4]
mov     ecx, eax
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     eax, [esp+14h]
inc     esi
add     eax, edi
mov     [esp+14h], eax
cmp     esi, 3
jb      short loc_37a49614
mov     eax, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     [esp+34h], edi
mov     ecx, [edx+0e0h]
mov     [esp+74h], ecx
mov     eax, [edi+0e0h]
mov     ecx, [esi+0e0h]
mov     edi, [ebp+8]
mov     [esp+7ch], eax
mov     eax, [ebp+8]
mov     [esp+78h], ecx
mov     ecx, [edx+0c0h]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
xor     eax, [edi+27h]
mov     [esp+0ch], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm2, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [ebp+0ch]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     [esp+8], ecx
movaps  xmmword ptr [esp+130h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     ecx, [eax+edx+23h]
xor     ecx, [esi+0c0h]
mov     eax, [eax+edx+27h]
xor     eax, [esi+0c4h]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
movaps  xmmword ptr [esp+120h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movaps  xmmword ptr [esp+140h], xmm1
movq    xmm1, qword ptr [esp+8]
movaps  xmmword ptr [esp+0d0h], xmm2
mov     eax, [esi+3ch]
xorps   xmm3, xmm3
xor     eax, [esi+1ch]
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     edi, [esp+34h]
mov     [esp+8], ecx
movq    xmm7, qword ptr [esp+8]
mov     ecx, [eax+edx*2+23h]
mov     eax, [eax+edx*2+27h]
xor     ecx, [edi+0c0h]
xor     eax, [edi+0c4h]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm6, qword ptr [esp+8]
movaps  xmmword ptr [esp+0f0h], xmm1
movaps  xmmword ptr [esp+110h], xmm7
movaps  xmmword ptr [esp+160h], xmm3
movaps  xmmword ptr [esp+100h], xmm5
punpcklqdq xmm6, xmm0
movd    edx, xmm2
mov     dword ptr [esp+3ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+4ch], 0
movd    eax, xmm5
mov     dword ptr [esp+84h], 0
mov     dword ptr [esp+34h], 80000h
nop     dword ptr [eax+eax+00h]
and     eax, 1ffff0h
and     ecx, 1ffff0h
add     eax, [esp+7ch]
and     edx, 1ffff0h
add     ecx, [esp+78h]
add     edx, [esp+74h]
mov     [esp+18h], eax
movups  xmm4, xmmword ptr [eax]
movups  xmm3, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [edx]
mov     [esp+1ch], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
mov     [esp+20h], edx
pshufd  xmm0, xmm1, 0aah
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
movd    edx, xmm0
pshufd  xmm0, xmm1, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+24h], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movd    xmm1, edx
punpckldq xmm1, xmm2
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm7, ecx
punpckldq xmm7, xmm0
movaps  xmmword ptr [esp+0e0h], xmm7
movaps  xmm0, xmmword ptr [esp+0e0h]
xor     ecx, ecx
punpckldq xmm0, xmm1
xor     esi, esi
pxor    xmm0, xmmword ptr [esp+0d0h]
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+0e0h], xmm0
pxor    xmm1, xmmword ptr [esp+120h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+20h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm3, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
xor     eax, eax
sar     edx, cl
mov     ecx, [esp+20h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
mov     edx, ds:dword_37affd40[ecx*4]
movzx   eax, al
movd    xmm2, edi
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm3, ecx
xor     ecx, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+0f0h]
movaps  xmm1, xmm3
movaps  xmmword ptr [esp+150h], xmm3
pxor    xmm1, xmmword ptr [esp+110h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+1ch]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm4, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+1ch]
and     edx, 3
shl     edx, 1ch
xor     eax, edi
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
mov     [esp+24h], edx
pshufd  xmm0, xmm4, 0ffh
movd    eax, xmm4
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm4, ecx
xor     ecx, ecx
punpckldq xmm4, xmm0
punpckldq xmm4, xmm1
pxor    xmm4, xmm5
movaps  xmm1, xmm4
movaps  xmmword ptr [esp+170h], xmm4
pxor    xmm1, xmm6
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+18h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
movaps  xmm1, xmmword ptr [esp+0e0h]
mov     al, dl
and     al, 1
movzx   ecx, dl
add     al, al
shr     ecx, 2
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
movaps  xmm0, xmm1
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+18h]
xor     eax, edi
and     edx, 3
psrldq  xmm0, 4
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
mov     [ecx+0ch], eax
movaps  xmm0, xmm3
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
xor     edx, edx
psrldq  xmm0, 4
push    0
or      ecx, eax
movd    dword ptr [esp+34h], xmm0
mov     [esp+1ch], ecx
movaps  xmm0, xmm4
and     ecx, 1ffff0h
psrldq  xmm0, 4
add     ecx, [esp+78h]
mov     [esp+3ch], ecx
push    esi
push    0
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+18h], eax
mov     eax, [ecx+8]
mov     [esp+0a4h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0a8h], eax
movd    eax, xmm3
push    edi
mov     [esp+64h], esi
or      ecx, eax
mov     [esp+18h], edi
mov     [esp+50h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+88h]
mov     [esp+58h], ecx
movd    dword ptr [esp+34h], xmm0
mov     eax, [ecx]
mov     [esp+70h], eax
mov     eax, [ecx+4]
mov     [esp+74h], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
mov     [esp+0c4h], eax
movd    eax, xmm4
or      edx, eax
mov     ecx, edx
mov     [esp+68h], edx
and     ecx, 1ffff0h
add     ecx, [esp+8ch]
mov     [esp+90h], ecx
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0dch], eax
call    __allmul
mov     [esp+28h], eax
mov     esi, edx
push    0
push    dword ptr [esp+1ch]
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+2ch], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a49f53
jb      short loc_37a49f41
cmp     eax, ecx
jnb     short loc_37a49f53
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a49f6c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+14h], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     edx, [esp+20h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+90h], ecx
adc     eax, [esp+1ch]
mov     [esp+94h], eax
cmp     eax, [esp+1ch]
ja      short loc_37a49fa4
jb      short loc_37a49f92
cmp     ecx, edx
jnb     short loc_37a49fa4
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a49fbd
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+1ch], eax
mov     eax, [esp+28h]
mov     [esp+20h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+58h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+90h]
add     edi, eax
mov     ecx, [esp+38h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+18h]
add     edi, [esp+24h]
push    dword ptr [esp+34h]
adc     esi, [esp+24h]
mov     [esp+90h], edi
mov     [esp+94h], esi
movq    xmm1, qword ptr [esp+90h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0d8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+44h], 0
pxor    xmm0, xmmword ptr [esp+138h]
movups  xmmword ptr [ecx], xmm0
movq    xmm0, qword ptr [esp+0a0h]
mov     eax, [ecx]
xor     [ecx+8], eax
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+0e8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+6ch]
movaps  xmmword ptr [esp+0e0h], xmm2
movd    dword ptr [esp+30h], xmm2
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+6ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+70h]
mov     [esp+50h], eax
mov     [esp+64h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a4a0cf
jb      short loc_37a4a0bd
cmp     eax, ecx
jnb     short loc_37a4a0cf
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a4a0e8
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+14h], ecx
mov     ecx, [esp+38h]
mov     [esp+18h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0a8h], ecx
adc     eax, [esp+54h]
mov     [esp+0ach], eax
cmp     eax, [esp+54h]
ja      short loc_37a4a120
jb      short loc_37a4a10e
cmp     ecx, edx
jnb     short loc_37a4a120
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a4a139
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+28h], eax
mov     eax, [esp+40h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+34h]
push    esi
push    dword ptr [esp+70h]
call    __allmul
movq    xmm0, qword ptr [esp+0a8h]
add     edi, eax
mov     ecx, [esp+48h]
movq    xmm2, qword ptr [esp+60h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+18h]
add     edi, [esp+20h]
push    dword ptr [esp+28h]
adc     esi, [esp+30h]
mov     [esp+0a8h], edi
mov     [esp+0ach], esi
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0f8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+54h], 0
pxor    xmm0, xmmword ptr [esp+148h]
movups  xmmword ptr [ecx], xmm0
movq    xmm0, qword ptr [esp+0b8h]
mov     eax, [ecx]
xor     [ecx+8], eax
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+158h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movaps  xmmword ptr [esp+100h], xmm2
movd    dword ptr [esp+2ch], xmm2
movaps  xmmword ptr [esp+120h], xmm0
call    __allmul
mov     esi, [esp+58h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+74h]
mov     [esp+58h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+78h]
mov     [esp+68h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a4a24b
jb      short loc_37a4a239
cmp     eax, ecx
jnb     short loc_37a4a24b
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a4a264
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+30h], ecx
mov     ecx, [esp+48h]
mov     [esp+28h], ecx
mov     edx, [esp+58h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c0h], ecx
adc     eax, [esp+40h]
mov     [esp+0c4h], eax
cmp     eax, [esp+40h]
ja      short loc_37a4a29c
jb      short loc_37a4a28a
cmp     ecx, edx
jnb     short loc_37a4a29c
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a4a2b5
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     eax, [esp+5ch]
mov     [esp+14h], eax
mov     eax, [esp+58h]
mov     [esp+18h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+28h]
push    edi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0c0h]
add     esi, eax
mov     ecx, [esp+80h]
movq    xmm5, qword ptr [esp+68h]
adc     edi, edx
add     esi, [esp+28h]
movaps  xmm6, xmmword ptr [esp+170h]
adc     edi, [esp+30h]
add     esi, [esp+18h]
mov     edx, [esp+20h]
adc     edi, [esp+14h]
mov     [esp+0b8h], esi
mov     [esp+0bch], edi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movaps  xmm0, xmm1
mov     dword ptr [esp+84h], 0
pxor    xmm0, xmmword ptr [esp+160h]
movups  xmmword ptr [ecx], xmm0
mov     eax, [ecx]
xor     [ecx+8], eax
movq    xmm0, qword ptr [esp+0c8h]
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
sub     dword ptr [esp+34h], 1
mov     ecx, [esp+1ch]
punpcklqdq xmm5, xmm0
pxor    xmm5, xmm1
movaps  xmmword ptr [esp+100h], xmm5
movd    eax, xmm5
jnz     loc_37a498c0
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a7fac0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a4a376
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
popa
ror     dword ptr [esi-5c151cb3h], cl
mov     eax, 9805dccch
sub     al, 0a6h
xchg    eax, ebx
xchg    eax, ebx
retf
retn
add     [esi], eax
sbb     eax, 0eee274dfh
cmpsd
mov     eax, 6d2efabbh
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 1d4h
mov     eax, [ebp+14h]
push    ebx
push    esi
mov     esi, [ebp+8]
push    edi
mov     edi, [ebp+0ch]
mov     edx, edi
push    ecx
push    dword ptr [eax]
mov     ecx, esi
call    sub_37a181e0
mov     eax, [ebp+14h]
lea     ecx, [esi+edi]
add     esp, 4
mov     edx, edi
push    dword ptr [eax+4]
call    sub_37a181e0
mov     eax, [ebp+14h]
xorps   xmm0, xmm0
push    300h
push    100h
mov     edi, [eax]
mov     esi, [eax+4]
mov     [esp+0f4h], edi
mov     [esp+9ch], esi
movq    xmm1, qword ptr [edi+60h]
mov     ecx, [edi+0e0h]
mov     eax, [esi+0e0h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+130h], xmm1
movq    xmm1, qword ptr [edi+68h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+160h], xmm1
movq    xmm1, qword ptr [esi+60h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+140h], xmm1
movq    xmm1, qword ptr [esi+68h]
punpcklqdq xmm1, xmm0
mov     [esp+2ch], ecx
mov     [esp+30h], eax
movaps  xmmword ptr [esp+180h], xmm1
call    __control87
mov     edx, [esp+2ch]
add     esp, 10h
mov     ecx, edi
call    sub_37a7ea40
mov     edx, [esp+20h]
mov     ecx, esi
call    sub_37a7ea40
mov     edx, [esi+20h]
xor     edx, [esi]
mov     eax, [edi+20h]
xor     eax, [edi]
mov     ecx, [edi+24h]
xor     ecx, [edi+4]
mov     esi, [esi+24h]
mov     [esp+0b4h], ecx
mov     [esp+0c4h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+88h], edx
mov     [esp+0d0h], edx
mov     edx, [edi+2ch]
xor     edx, [edi+0ch]
mov     [esp+6ch], eax
mov     [esp+0c0h], eax
mov     eax, [esp+8ch]
mov     [esp+9ch], ecx
mov     [esp+0c8h], ecx
mov     [esp+0a4h], edx
xor     esi, [eax+4]
mov     ecx, [eax+28h]
xor     ecx, [eax+8]
mov     [esp+0cch], edx
mov     edx, [eax+2ch]
xor     edx, [eax+0ch]
mov     [esp+70h], esi
mov     [esp+0d4h], esi
mov     [esp+74h], ecx
mov     [esp+4ch], edx
mov     [esp+0d8h], ecx
mov     ecx, [edi+38h]
mov     eax, edx
xor     ecx, [edi+18h]
mov     [esp+0dch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+10h], ecx
movq    xmm0, qword ptr [esp+10h]
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+5ch]
xor     eax, [edi+4ch]
mov     [esp+10h], ecx
movq    xmm4, qword ptr [esp+10h]
mov     ecx, [edi+58h]
xor     ecx, [edi+48h]
mov     [esp+14h], eax
mov     eax, [edi+54h]
xor     eax, [edi+44h]
mov     [esp+10h], ecx
mov     ecx, [edi+50h]
xor     ecx, [edi+40h]
mov     edi, [esp+8ch]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
movq    xmm5, qword ptr [esp+10h]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     edx, [esp+88h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [edi+5ch]
xor     eax, [edi+4ch]
mov     [esp+10h], ecx
movq    xmm3, qword ptr [esp+10h]
mov     ecx, [edi+58h]
xor     ecx, [edi+48h]
mov     [esp+14h], eax
mov     eax, [edi+54h]
mov     [esp+10h], ecx
mov     ecx, [edi+50h]
xor     ecx, [edi+40h]
xor     eax, [edi+44h]
mov     edi, [esp+1ch]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esp+20h]
mov     [esp+14h], eax
lea     eax, [edi+8]
movq    xmm6, qword ptr [esp+10h]
mov     [esp+0ech], eax
lea     eax, [ecx+8]
punpcklqdq xmm6, xmm0
mov     [esp+0e8h], eax
mov     eax, esi
movaps  xmmword ptr [esp+140h], xmm4
movaps  xmmword ptr [esp+190h], xmm5
movaps  xmmword ptr [esp+1d0h], xmm3
movaps  xmmword ptr [esp+1a0h], xmm6
mov     dword ptr [esp+0a0h], 80000h
mov     [esp+28h], edx
mov     esi, [esp+6ch]
and     edx, 1ffff0h
movq    xmm0, qword ptr [esp+0c8h]
add     edx, ecx
mov     ecx, [esp+6ch]
and     esi, 1ffff0h
movq    xmm1, qword ptr [esp+0c0h]
and     ecx, 1ffff0h
movq    xmm2, qword ptr [esp+0d0h]
add     esi, edi
movups  xmm7, xmmword ptr [edx]
mov     edi, [esp+1ch]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0d8h]
punpcklqdq xmm2, xmm0
movups  xmm0, xmmword ptr [esi]
mov     [esp+64h], eax
mov     eax, ecx
aesenc  xmm0, xmm1
xor     eax, 10h
mov     [esp+44h], edx
mov     edx, [esp+1ch]
add     edx, eax
movaps  xmmword ptr [esp+1b0h], xmm0
mov     eax, ecx
movaps  xmmword ptr [esp+180h], xmm2
xor     ecx, 30h
movaps  xmmword ptr [esp+160h], xmm1
xor     eax, 20h
aesenc  xmm7, xmm2
movups  xmm2, xmmword ptr [edx]
movups  xmm0, xmmword ptr [ecx+edi]
paddq   xmm2, xmm4
movups  xmm1, xmmword ptr [eax+edi]
paddq   xmm0, xmm5
movaps  xmm5, xmmword ptr [esp+1b0h]
paddq   xmm1, xmmword ptr [esp+160h]
movups  xmmword ptr [edx], xmm0
mov     edx, edi
mov     edi, [esp+44h]
movaps  xmm0, xmm5
pxor    xmm0, xmm4
movaps  xmmword ptr [esp+1c0h], xmm7
movups  xmmword ptr [eax+edx], xmm2
movups  xmmword ptr [ecx+edx], xmm1
mov     edx, [esp+20h]
movups  xmmword ptr [esi], xmm0
mov     esi, [esp+28h]
and     esi, 1ffff0h
mov     ecx, esi
mov     eax, esi
xor     eax, 20h
xor     esi, 30h
xor     ecx, 10h
movups  xmm1, xmmword ptr [eax+edx]
movups  xmm0, xmmword ptr [esi+edx]
movups  xmm2, xmmword ptr [ecx+edx]
paddq   xmm0, xmm6
paddq   xmm1, xmmword ptr [esp+180h]
paddq   xmm2, xmm3
movups  xmmword ptr [ecx+edx], xmm0
movaps  xmm0, xmm7
movups  xmmword ptr [eax+edx], xmm2
pxor    xmm0, xmm3
movups  xmmword ptr [esi+edx], xmm1
xor     ecx, ecx
movups  xmmword ptr [edi], xmm0
xor     edx, edx
movd    eax, xmm5
movaps  xmm0, xmm5
psrldq  xmm0, 4
movd    dword ptr [esp+3ch], xmm0
movaps  xmm0, xmm7
or      edx, eax
psrldq  xmm0, 4
movd    eax, xmm7
mov     [esp+2ch], edx
movd    dword ptr [esp+84h], xmm0
or      ecx, eax
mov     eax, edx
mov     [esp+48h], ecx
mov     ecx, [esp+0ech]
and     eax, 1ffff0h
movaps  xmm1, xmmword ptr [esp+120h]
add     ecx, eax
add     eax, [esp+1ch]
movaps  xmm0, xmm1
mov     edi, [esp+150h]
xor     esi, esi
mov     [esp+78h], ecx
mov     edx, [ecx]
mov     ecx, [ecx+4]
mov     [esp+58h], edx
mov     [esp+50h], ecx
xor     ecx, ecx
mov     [esp+44h], eax
movd    eax, xmm1
movaps  xmm1, xmm5
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
psrldq  xmm1, 8
mov     eax, [esp+44h]
xor     ecx, esi
xor     edx, edi
movaps  xmm0, xmm1
shld    esi, edi, 1
psrldq  xmm0, 4
xor     ecx, [eax]
add     edi, edi
xor     edx, [eax+4]
add     edi, [esp+2ch]
push    0
mov     [esp+2ch], ecx
and     edi, 7ffffffeh
mov     [esp+44h], edx
or      edi, 80000001h
movd    ecx, xmm0
xor     edx, edx
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     edi, ecx
mov     [esp+64h], ebx
xor     ecx, ecx
mov     [esp+64h], edx
add     ecx, eax
xorps   xmm0, xmm0
mov     [esp+0f0h], ecx
adc     edi, 0
add     ecx, [esp+2ch]
mov     [esp+0f4h], edi
mov     eax, ecx
adc     edi, [esp+3ch]
xor     edx, edx
movq    xmm1, qword ptr [esp+0f0h]
mov     [esp+24h], ecx
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
shr     ecx, 0ch
mov     [esp+0f8h], eax
mov     [esp+0fch], ecx
movq    xmm0, qword ptr [esp+0f8h]
movaps  xmmword ptr [esp+120h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     esi, eax
mov     edx, ecx
shrd    esi, edx, 14h
shr     edx, 14h
shrd    eax, ecx, 13h
shr     ecx, 13h
mov     [esp+38h], ecx
mov     [esp+0bch], ecx
mov     ecx, eax
mov     [esp+30h], eax
sub     ecx, esi
mov     [esp+0b8h], eax
mov     eax, [esp+38h]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a4d9b4
jb      short loc_37a4d998
cmp     eax, [esp+24h]
jnb     short loc_37a4d9b4
mov     edx, [esp+30h]
mov     eax, [esp+38h]
add     edx, 1
mov     [esp+0b8h], edx
adc     eax, 0
mov     [esp+0bch], eax
movq    xmm1, qword ptr [esp+0b8h]
xorps   xmm0, xmm0
mov     edi, [esp+28h]
push    0
push    dword ptr [esp+40h]
punpcklqdq xmm1, xmm0
push    0
push    edi
movaps  xmmword ptr [esp+160h], xmm1
call    __allmul
push    0
push    dword ptr [esp+30h]
mov     [esp+2ch], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+30h]
mov     [esp+3ch], eax
mov     edi, edx
push    0
push    dword ptr [esp+4ch]
call    __allmul
mov     ecx, edx
mov     edx, [esp+24h]
add     eax, edx
adc     ecx, esi
mov     [esp+5ch], ecx
cmp     ecx, esi
ja      short loc_37a4da33
jb      short loc_37a4da21
cmp     eax, edx
jnb     short loc_37a4da33
mov     dword ptr [esp+38h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a4da4c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     ecx, [esp+64h]
mov     [esp+30h], ecx
mov     ecx, [esp+60h]
mov     [esp+38h], ecx
mov     ecx, [esp+34h]
xor     esi, esi
add     esi, ecx
mov     [esp+100h], esi
adc     eax, edi
mov     [esp+90h], eax
mov     [esp+104h], eax
cmp     eax, edi
ja      short loc_37a4da87
jb      short loc_37a4da75
cmp     esi, ecx
jnb     short loc_37a4da87
mov     dword ptr [esp+34h], 1
mov     dword ptr [esp+24h], 0
jmp     short loc_37a4daa0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+24h], eax
mov     eax, [esp+60h]
mov     [esp+34h], eax
push    0
push    dword ptr [esp+40h]
push    0
push    dword ptr [esp+4ch]
call    __allmul
mov     ecx, [esp+1ch]
mov     edi, eax
add     edi, [esp+5ch]
mov     eax, [esp+2ch]
adc     edx, 0
movq    xmm0, qword ptr [esp+100h]
add     edi, [esp+38h]
adc     edx, [esp+30h]
add     edi, [esp+34h]
mov     [esp+0a8h], edi
adc     edx, [esp+24h]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+0ach], edx
add     ecx, eax
movq    xmm3, qword ptr [esp+0a8h]
mov     eax, [esp+2ch]
xor     eax, 20h
mov     [esp+5ch], ecx
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
movups  xmm2, xmmword ptr [ecx]
mov     ecx, [esp+1ch]
pxor    xmm2, xmm3
paddq   xmm2, xmmword ptr [esp+140h]
xor     edx, [eax+ecx+4]
xor     edi, [eax+ecx]
movups  xmm1, xmmword ptr [eax+ecx]
mov     [esp+24h], edx
mov     edx, [eax+ecx+8]
xor     edx, esi
paddq   xmm1, xmmword ptr [esp+160h]
mov     esi, [eax+ecx+0ch]
xor     esi, [esp+90h]
mov     [esp+34h], edx
mov     edx, [esp+2ch]
xor     edx, 30h
and     edx, 1ffff0h
mov     [esp+2ch], edx
movups  xmm0, xmmword ptr [edx+ecx]
mov     ecx, [esp+5ch]
paddq   xmm0, xmmword ptr [esp+190h]
movups  xmmword ptr [ecx], xmm0
mov     ecx, [esp+1ch]
movups  xmmword ptr [eax+ecx], xmm2
mov     eax, edx
mov     edx, [esp+0a4h]
movups  xmmword ptr [eax+ecx], xmm1
mov     eax, [esp+6ch]
mov     ecx, [esp+0b4h]
add     eax, edi
mov     edi, [esp+9ch]
adc     ecx, [esp+24h]
add     edi, [esp+34h]
adc     edx, esi
mov     esi, [esp+44h]
mov     [esi], eax
xor     eax, [esp+28h]
mov     [esi+4], ecx
mov     esi, [esp+78h]
xor     ecx, [esp+40h]
mov     [esp+6ch], eax
mov     [esp+0c0h], eax
mov     eax, [esp+48h]
mov     [esi], edi
xor     edi, [esp+58h]
mov     [esi+4], edx
xor     edx, [esp+50h]
and     eax, 1ffff0h
mov     [esp+0b4h], ecx
mov     [esp+0c4h], ecx
mov     ecx, [esp+0e8h]
mov     [esp+9ch], edi
mov     [esp+0c8h], edi
mov     [esp+0a4h], edx
mov     [esp+0cch], edx
mov     edx, [ecx+eax]
add     ecx, eax
movaps  xmm1, xmmword ptr [esp+130h]
xor     esi, esi
mov     edi, [esp+170h]
movaps  xmm0, xmm1
mov     [esp+2ch], edx
mov     edx, [esp+20h]
add     edx, eax
mov     [esp+5ch], ecx
mov     ecx, [ecx+4]
mov     [esp+38h], edx
mov     [esp+60h], ecx
xor     ecx, ecx
movd    eax, xmm1
movaps  xmm1, xmmword ptr [esp+1c0h]
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
mov     eax, [esp+38h]
xor     ecx, esi
psrldq  xmm1, 8
xor     edx, edi
movaps  xmm0, xmm1
shld    esi, edi, 1
xor     ecx, [eax]
xor     edx, [eax+4]
add     edi, edi
add     edi, [esp+48h]
psrldq  xmm0, 4
and     edi, 7ffffffeh
push    0
mov     [esp+40h], ecx
or      edi, 80000001h
mov     [esp+34h], edx
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     edi, [esp+84h]
xorps   xmm0, xmm0
mov     [esp+54h], ebx
mov     [esp+54h], edx
xor     edx, edx
add     edx, eax
mov     eax, [esp+48h]
mov     [esp+108h], edx
adc     ecx, 0
add     eax, edx
mov     [esp+10ch], ecx
movq    xmm1, qword ptr [esp+108h]
adc     edi, ecx
mov     [esp+50h], eax
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
xor     edx, edx
shr     ecx, 0ch
mov     [esp+110h], eax
mov     [esp+114h], ecx
movq    xmm0, qword ptr [esp+110h]
movaps  xmmword ptr [esp+130h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     esi, eax
mov     edx, ecx
shrd    esi, edx, 14h
shr     edx, 14h
shrd    eax, ecx, 13h
shr     ecx, 13h
mov     [esp+28h], ecx
mov     [esp+14h], ecx
mov     ecx, eax
mov     [esp+40h], eax
sub     ecx, esi
mov     [esp+10h], eax
mov     eax, [esp+28h]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a4dda2
jb      short loc_37a4dd8c
cmp     eax, [esp+50h]
jnb     short loc_37a4dda2
mov     edx, [esp+40h]
mov     eax, [esp+28h]
add     edx, 1
mov     [esp+10h], edx
adc     eax, 0
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+88h]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+48h]
movaps  xmmword ptr [esp+180h], xmm1
call    __allmul
mov     esi, [esp+48h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+48h]
mov     [esp+60h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+3ch]
mov     [esp+68h], eax
mov     [esp+88h], edx
call    __allmul
mov     ecx, [esp+50h]
mov     esi, eax
add     esi, ecx
mov     eax, edx
adc     eax, edi
mov     [esp+50h], eax
cmp     eax, edi
ja      short loc_37a4de28
jb      short loc_37a4de16
cmp     esi, ecx
jnb     short loc_37a4de28
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+44h], 1
jmp     short loc_37a4de4a
xorps   xmm0, xmm0
movlpd  qword ptr [esp+90h], xmm0
mov     eax, [esp+94h]
mov     [esp+44h], eax
mov     eax, [esp+90h]
mov     [esp+28h], eax
mov     edx, [esp+58h]
xor     eax, eax
add     eax, edx
mov     [esp+58h], eax
adc     esi, [esp+78h]
mov     [esp+118h], eax
mov     [esp+11ch], esi
cmp     esi, [esp+78h]
ja      short loc_37a4de86
jb      short loc_37a4de74
cmp     eax, edx
jnb     short loc_37a4de86
mov     dword ptr [esp+24h], 1
mov     dword ptr [esp+34h], 0
jmp     short loc_37a4de9f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+78h], xmm0
mov     eax, [esp+7ch]
mov     [esp+34h], eax
mov     eax, [esp+78h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+88h]
push    0
push    dword ptr [esp+3ch]
call    __allmul
mov     ecx, [esp+20h]
mov     edi, eax
add     edi, [esp+50h]
mov     eax, [esp+48h]
adc     edx, 0
movq    xmm0, qword ptr [esp+118h]
add     edi, [esp+28h]
adc     edx, [esp+44h]
add     edi, [esp+24h]
mov     [esp+0a8h], edi
adc     edx, [esp+34h]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+0ach], edx
add     ecx, eax
movq    xmm3, qword ptr [esp+0a8h]
mov     eax, [esp+48h]
xor     eax, 20h
mov     [esp+50h], ecx
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
movups  xmm2, xmmword ptr [ecx]
mov     ecx, [esp+20h]
pxor    xmm2, xmm3
paddq   xmm2, xmmword ptr [esp+1d0h]
xor     edi, [eax+ecx]
movups  xmm1, xmmword ptr [eax+ecx]
mov     [esp+78h], edi
mov     edi, ecx
paddq   xmm1, xmmword ptr [esp+180h]
xor     edx, [eax+edi+4]
mov     [esp+90h], edx
mov     edx, [edi+eax+8]
mov     edi, [edi+eax+0ch]
xor     edx, [esp+58h]
xor     edi, esi
mov     esi, [esp+48h]
xor     esi, 30h
and     esi, 1ffff0h
movups  xmm0, xmmword ptr [esi+ecx]
mov     ecx, [esp+50h]
paddq   xmm0, xmmword ptr [esp+1a0h]
movups  xmmword ptr [ecx], xmm0
mov     ecx, [esp+20h]
movups  xmmword ptr [eax+ecx], xmm2
movups  xmmword ptr [esi+ecx], xmm1
mov     esi, [esp+88h]
add     esi, [esp+78h]
mov     ecx, [esp+70h]
mov     eax, esi
adc     ecx, [esp+90h]
add     [esp+74h], edx
mov     edx, [esp+38h]
adc     [esp+4ch], edi
mov     edi, [esp+4ch]
mov     [esp+70h], ecx
mov     [edx], esi
mov     esi, ecx
mov     [edx+4], esi
mov     edx, [esp+5ch]
mov     esi, [esp+74h]
mov     [edx], esi
xor     esi, [esp+2ch]
mov     [edx+4], edi
mov     edx, [esp+3ch]
xor     edx, eax
mov     [esp+74h], esi
mov     eax, [esp+30h]
xor     eax, ecx
mov     [esp+88h], edx
xor     edi, [esp+60h]
mov     [esp+70h], eax
mov     [esp+0d0h], edx
mov     [esp+0d4h], eax
mov     [esp+0d8h], esi
mov     [esp+4ch], edi
sub     dword ptr [esp+0a0h], 1
movaps  xmm5, xmmword ptr [esp+140h]
movaps  xmm6, xmmword ptr [esp+1d0h]
movaps  xmm4, xmmword ptr [esp+1b0h]
movaps  xmm3, xmmword ptr [esp+1c0h]
mov     ecx, [esp+20h]
mov     [esp+0dch], edi
mov     edi, [esp+1ch]
movaps  xmmword ptr [esp+190h], xmm5
movaps  xmmword ptr [esp+1a0h], xmm6
movaps  xmmword ptr [esp+140h], xmm4
movaps  xmmword ptr [esp+1d0h], xmm3
mov     [esp+28h], edx
jnz     loc_37a4d6b6
mov     edx, [esp+0e4h]
mov     ecx, edi
call    loc_37a7ed80
mov     edx, [esp+8ch]
mov     ecx, [esp+20h]
call    loc_37a7ed80
mov     ecx, [esp+0e4h]
call    sub_37a17760
mov     ecx, [esp+8ch]
call    sub_37a17760
mov     edi, [ebp+14h]
mov     esi, [ebp+10h]
push    esi
push    0c8h
mov     eax, [edi]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
mov     ecx, [edi+4]
lea     eax, [esi+20h]
add     esp, 0ch
movzx   edx, byte ptr [ecx]
push    eax
and     edx, 3
push    0c8h
push    ecx
mov     eax, ds:funcs_37a22bf9[edx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 104h
mov     edx, [ebp+0ch]
push    ebx
push    esi
mov     esi, [ebp+14h]
push    edi
push    ecx
mov     ecx, [ebp+8]
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     esi, [esi]
xorps   xmm0, xmm0
push    300h
push    100h
mov     [esp+94h], esi
movq    xmm1, qword ptr [esi+60h]
mov     eax, [esi+0e0h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+0c0h], xmm1
movq    xmm1, qword ptr [esi+68h]
punpcklqdq xmm1, xmm0
mov     [esp+20h], eax
movaps  xmmword ptr [esp+0d0h], xmm1
call    __control87
mov     ecx, [esi+2ch]
add     esp, 10h
xor     ecx, [esi+0ch]
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     edx, [esi+20h]
xor     edx, [esi]
mov     edi, [esi+24h]
xor     edi, [esi+4]
mov     [esp+34h], ecx
mov     [esp+74h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+30h], eax
mov     [esp+70h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+18h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+1ch], eax
movq    xmm0, qword ptr [esp+18h]
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+18h], ecx
mov     ecx, [esi+58h]
xor     ecx, [esi+48h]
mov     [esp+1ch], eax
movq    xmm5, qword ptr [esp+18h]
mov     eax, [esi+5ch]
xor     eax, [esi+4ch]
mov     [esp+18h], ecx
mov     ecx, [esi+50h]
xor     ecx, [esi+40h]
mov     [esp+1ch], eax
mov     eax, [esi+54h]
xor     eax, [esi+44h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [esp+10h]
mov     [esp+1ch], eax
mov     eax, edi
movq    xmm6, qword ptr [esp+18h]
punpcklqdq xmm6, xmm0
mov     [esp+2ch], edi
mov     [esp+6ch], edi
mov     edi, edx
mov     [esp+60h], edx
mov     [esp+68h], edx
movaps  xmmword ptr [esp+0e0h], xmm5
movaps  xmmword ptr [esp+0d0h], xmm6
mov     dword ptr [esp+64h], 80000h
xchg    ax, ax
movq    xmm0, qword ptr [esp+70h]
mov     esi, edi
movq    xmm7, qword ptr [esp+68h]
and     esi, 1ffff0h
punpcklqdq xmm7, xmm0
add     esi, ecx
movaps  xmm0, xmm7
mov     [esp+8ch], eax
push    esi
movaps  xmmword ptr [esp+0f4h], xmm7
call    loc_37a22320
mov     edx, [esp+14h]
and     edi, 1ffff0h
movaps  xmm3, xmm0
mov     ecx, edi
xor     ecx, 10h
movaps  xmmword ptr [esp+104h], xmm3
mov     eax, edi
add     esp, 4
xor     edi, 30h
xor     eax, 20h
movups  xmm2, xmmword ptr [ecx+edx]
paddq   xmm2, xmm5
movups  xmm0, xmmword ptr [edi+edx]
movups  xmm1, xmmword ptr [eax+edx]
paddq   xmm0, xmm6
movups  xmmword ptr [ecx+edx], xmm0
paddq   xmm1, xmm7
movups  xmmword ptr [eax+edx], xmm2
xor     ecx, ecx
movups  xmmword ptr [edi+edx], xmm1
movaps  xmm0, xmm3
movaps  xmm1, xmmword ptr [esp+0b0h]
pxor    xmm0, xmm5
mov     edi, [esp+0c0h]
movups  xmmword ptr [esi], xmm0
movaps  xmm0, xmm3
movd    eax, xmm3
psrldq  xmm0, 4
movd    dword ptr [esp+40h], xmm0
movaps  xmm0, xmm1
or      ecx, eax
psrldq  xmm0, 4
mov     eax, ecx
mov     [esp+24h], ecx
lea     ecx, [edx+8]
and     eax, 1ffff0h
add     ecx, eax
add     edx, eax
mov     [esp+7ch], ecx
mov     [esp+3ch], edx
movd    eax, xmm1
movaps  xmm1, xmm3
mov     esi, [ecx]
mov     ecx, [ecx+4]
mov     [esp+88h], ecx
xor     ecx, ecx
or      ecx, eax
movd    edx, xmm0
mov     eax, [esp+3ch]
mov     [esp+80h], esi
xor     esi, esi
xor     edx, edi
psrldq  xmm1, 8
xor     ecx, esi
movaps  xmm0, xmm1
xor     edx, [eax+4]
xor     ecx, [eax]
shld    esi, edi, 1
mov     [esp+48h], edx
xor     edx, edx
add     edi, edi
movd    eax, xmm1
add     edi, [esp+24h]
psrldq  xmm0, 4
and     edi, 7ffffffeh
mov     [esp+44h], ecx
or      edx, eax
movd    ecx, xmm0
or      edi, 80000001h
push    0
push    edi
push    ecx
push    edx
call    __aulldvrm
mov     edi, [esp+40h]
xorps   xmm0, xmm0
mov     [esp+54h], ebx
mov     [esp+54h], edx
xor     edx, edx
add     edx, eax
mov     eax, [esp+24h]
mov     [esp+90h], edx
adc     ecx, 0
add     eax, edx
mov     [esp+94h], ecx
movq    xmm1, qword ptr [esp+90h]
adc     edi, ecx
mov     [esp+14h], eax
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
xor     edx, edx
shr     ecx, 0ch
mov     [esp+98h], eax
mov     [esp+9ch], ecx
movq    xmm0, qword ptr [esp+98h]
movaps  xmmword ptr [esp+0b0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     edx, ecx
mov     esi, eax
shrd    eax, ecx, 13h
shrd    esi, edx, 14h
shr     ecx, 13h
mov     [esp+28h], ecx
shr     edx, 14h
mov     [esp+1ch], ecx
mov     ecx, eax
mov     [esp+20h], eax
sub     ecx, esi
mov     [esp+18h], eax
mov     eax, [esp+28h]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a4e454
jb      short loc_37a4e43e
cmp     eax, [esp+14h]
jnb     short loc_37a4e454
mov     edx, [esp+20h]
mov     eax, [esp+28h]
add     edx, 1
mov     [esp+18h], edx
adc     eax, 0
mov     [esp+1ch], eax
movq    xmm1, qword ptr [esp+18h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+44h]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+50h]
movaps  xmmword ptr [esp+0d0h], xmm1
call    __allmul
mov     esi, [esp+24h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+50h]
mov     [esp+24h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+54h]
mov     [esp+48h], eax
mov     [esp+68h], edx
call    __allmul
mov     ecx, [esp+14h]
mov     esi, eax
add     esi, ecx
mov     eax, edx
adc     eax, edi
mov     [esp+4ch], eax
cmp     eax, edi
ja      short loc_37a4e4d4
jb      short loc_37a4e4c2
cmp     esi, ecx
jnb     short loc_37a4e4d4
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+20h], 1
jmp     short loc_37a4e4ed
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     eax, [esp+54h]
mov     [esp+20h], eax
mov     eax, [esp+50h]
mov     [esp+28h], eax
mov     edx, [esp+38h]
xor     eax, eax
add     eax, edx
mov     [esp+50h], eax
adc     esi, [esp+58h]
mov     [esp+0a0h], eax
mov     [esp+0a4h], esi
cmp     esi, [esp+58h]
ja      short loc_37a4e529
jb      short loc_37a4e517
cmp     eax, edx
jnb     short loc_37a4e529
mov     dword ptr [esp+38h], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a4e542
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     eax, [esp+5ch]
mov     [esp+14h], eax
mov     eax, [esp+58h]
mov     [esp+38h], eax
push    0
push    dword ptr [esp+44h]
push    0
push    dword ptr [esp+54h]
call    __allmul
mov     ecx, [esp+10h]
mov     edi, eax
add     edi, [esp+4ch]
mov     eax, [esp+24h]
adc     edx, 0
movq    xmm0, qword ptr [esp+0a0h]
add     edi, [esp+28h]
adc     edx, [esp+20h]
add     edi, [esp+38h]
mov     [esp+0a8h], edi
adc     edx, [esp+14h]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+0ach], edx
add     ecx, eax
movq    xmm3, qword ptr [esp+0a8h]
mov     eax, [esp+24h]
xor     eax, 20h
mov     [esp+4ch], ecx
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
movups  xmm2, xmmword ptr [ecx]
mov     ecx, [esp+10h]
pxor    xmm2, xmm3
paddq   xmm2, xmmword ptr [esp+0e0h]
xor     edi, [eax+ecx]
movups  xmm1, xmmword ptr [eax+ecx]
mov     [esp+58h], edi
mov     edi, ecx
paddq   xmm1, xmmword ptr [esp+0f0h]
xor     edx, [eax+edi+4]
mov     [esp+14h], edx
mov     edx, [eax+edi+8]
mov     edi, [eax+edi+0ch]
xor     edx, [esp+50h]
xor     edi, esi
mov     esi, [esp+24h]
xor     esi, 30h
and     esi, 1ffff0h
movups  xmm0, xmmword ptr [esi+ecx]
mov     ecx, [esp+4ch]
paddq   xmm0, xmmword ptr [esp+0d0h]
movups  xmmword ptr [ecx], xmm0
mov     ecx, [esp+10h]
movups  xmmword ptr [eax+ecx], xmm2
movups  xmmword ptr [esi+ecx], xmm1
mov     esi, [esp+60h]
add     esi, [esp+58h]
mov     ecx, [esp+2ch]
mov     eax, esi
adc     ecx, [esp+14h]
add     [esp+30h], edx
mov     edx, [esp+3ch]
adc     [esp+34h], edi
mov     edi, ecx
mov     [esp+2ch], ecx
mov     [edx], esi
mov     esi, [esp+30h]
mov     [edx+4], edi
mov     edx, [esp+7ch]
mov     edi, [esp+34h]
mov     [edx], esi
xor     esi, [esp+80h]
mov     [edx+4], edi
mov     edx, [esp+44h]
xor     edx, eax
mov     [esp+30h], esi
mov     eax, [esp+48h]
xor     eax, ecx
mov     [esp+60h], edx
xor     edi, [esp+88h]
mov     [esp+2ch], eax
mov     [esp+68h], edx
mov     [esp+6ch], eax
mov     [esp+70h], esi
mov     [esp+34h], edi
sub     dword ptr [esp+64h], 1
movaps  xmm6, xmmword ptr [esp+0e0h]
movaps  xmm5, xmmword ptr [esp+100h]
mov     ecx, [esp+10h]
mov     [esp+74h], edi
mov     edi, edx
movaps  xmmword ptr [esp+0d0h], xmm6
movaps  xmmword ptr [esp+0e0h], xmm5
jnz     loc_37a4e220
mov     esi, [ebp+14h]
mov     ecx, [esi]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a7fac0
mov     ecx, [esp+84h]
call    sub_37a17760
mov     eax, [esi]
push    dword ptr [ebp+10h]
push    0c8h
movzx   ecx, byte ptr [eax]
and     ecx, 3
push    eax
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 244h
push    ebx
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 3
jb      short loc_37a4f437
mov     eax, [ebp+14h]
xorps   xmm0, xmm0
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     ecx, [edx+0e0h]
movq    xmm1, qword ptr [edx+60h]
mov     eax, [edi+0e0h]
mov     [esp+50h], ecx
mov     ecx, [esi+0e0h]
mov     [esp+3ch], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
mov     [esp+68h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
movaps  xmmword ptr [esp+180h], xmm1
movq    xmm1, qword ptr [edx+68h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
movaps  xmmword ptr [esp+220h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+58h]
xor     ecx, [edx+48h]
mov     [esp+14h], eax
mov     eax, [edx+5ch]
xor     eax, [edx+4ch]
movaps  xmmword ptr [esp+140h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+50h]
xor     ecx, [edx+40h]
mov     [esp+14h], eax
mov     eax, [edx+54h]
xor     eax, [edx+44h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
movaps  xmmword ptr [esp+1b0h], xmm1
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
punpcklqdq xmm1, xmm0
xorps   xmm0, xmm0
movaps  xmmword ptr [esp+190h], xmm1
movq    xmm1, qword ptr [esi+60h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+1c0h], xmm1
movq    xmm1, qword ptr [esi+68h]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
punpcklqdq xmm1, xmm0
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+230h], xmm1
mov     eax, [esi+24h]
xor     eax, [esi+4]
mov     [esp+10h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+58h]
xor     ecx, [esi+48h]
mov     [esp+14h], eax
mov     eax, [esi+5ch]
xor     eax, [esi+4ch]
movaps  xmmword ptr [esp+130h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+50h]
xor     ecx, [esi+40h]
mov     [esp+14h], eax
mov     eax, [esi+54h]
xor     eax, [esi+44h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+14h], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
movaps  xmmword ptr [esp+1e0h], xmm1
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
xorps   xmm0, xmm0
mov     [esp+10h], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+14h], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
movaps  xmmword ptr [esp+1d0h], xmm1
movq    xmm1, qword ptr [edi+60h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+1f0h], xmm1
movq    xmm1, qword ptr [edi+68h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
movq    xmm2, qword ptr [esp+10h]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+58h]
xor     ecx, [edi+48h]
mov     [esp+14h], eax
movq    xmm4, qword ptr [esp+10h]
mov     eax, [edi+5ch]
punpcklqdq xmm4, xmm0
movaps  xmmword ptr [esp+240h], xmm1
movaps  xmmword ptr [esp+160h], xmm2
movaps  xmmword ptr [esp+210h], xmm4
xor     eax, [edi+4ch]
mov     [esp+10h], ecx
mov     ecx, [edi+50h]
xor     ecx, [edi+40h]
mov     [esp+14h], eax
mov     eax, [edi+54h]
movq    xmm0, qword ptr [esp+10h]
xor     eax, [edi+44h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
push    300h
push    100h
movaps  xmmword ptr [esp+208h], xmm1
call    __control87
mov     edx, [esp+58h]
add     esp, 8
mov     ecx, [esp+68h]
add     edx, 8
movaps  xmm5, xmmword ptr [esp+140h]
movaps  xmm4, xmmword ptr [esp+130h]
movaps  xmm3, xmmword ptr [esp+160h]
movaps  xmm6, xmmword ptr [esp+210h]
mov     [esp+0ach], edx
mov     edx, [esp+3ch]
add     edx, 8
movd    esi, xmm5
movd    eax, xmm4
movd    edi, xmm3
mov     [esp+0b0h], edx
lea     edx, [ecx+8]
mov     dword ptr [esp+34h], 0
mov     dword ptr [esp+34h], 0
mov     [esp+20h], esi
mov     [esp+58h], eax
mov     [esp+1ch], edi
mov     dword ptr [esp+34h], 0
mov     [esp+90h], edx
mov     dword ptr [esp+94h], 80000h
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
and     eax, 1ffff0h
and     edi, 1ffff0h
add     eax, [esp+3ch]
add     edi, ecx
mov     [esp+28h], eax
mov     edx, esi
and     edx, 1ffff0h
mov     [esp+24h], edi
add     edx, [esp+50h]
movups  xmm0, xmmword ptr [eax]
mov     eax, [esp+20h]
movaps  xmmword ptr [esp+150h], xmm0
and     eax, 1ffff0h
movups  xmm0, xmmword ptr [edi]
mov     edi, [esp+50h]
mov     [esp+20h], eax
xor     eax, 10h
movups  xmm2, xmmword ptr [eax+edi]
lea     ecx, [eax+edi]
mov     esi, [esp+20h]
mov     eax, [esp+20h]
xor     esi, 30h
paddq   xmm2, xmmword ptr [esp+1b0h]
xor     eax, 20h
movaps  xmmword ptr [esp+170h], xmm0
movups  xmm0, xmmword ptr [edx]
aesenc  xmm0, xmm5
movups  xmm1, xmmword ptr [eax+edi]
movaps  xmmword ptr [esp+1a0h], xmm0
paddq   xmm1, xmm5
movups  xmm0, xmmword ptr [esi+edi]
paddq   xmm0, xmmword ptr [esp+190h]
movups  xmmword ptr [ecx], xmm0
movaps  xmm0, xmmword ptr [esp+1a0h]
pxor    xmm0, xmmword ptr [esp+1b0h]
movups  xmmword ptr [eax+edi], xmm2
mov     eax, esi
mov     ecx, [esp+3ch]
movaps  xmm7, xmmword ptr [esp+150h]
aesenc  xmm7, xmm4
movups  xmmword ptr [eax+edi], xmm1
mov     edi, [esp+3ch]
movups  xmmword ptr [edx], xmm0
mov     edx, [esp+58h]
and     edx, 1ffff0h
mov     [esp+20h], esi
mov     esi, [esp+28h]
mov     eax, edx
xor     eax, 10h
movaps  xmmword ptr [esp+150h], xmm7
add     ecx, eax
mov     eax, edx
xor     edx, 30h
xor     eax, 20h
movups  xmm2, xmmword ptr [ecx]
movups  xmm0, xmmword ptr [edx+edi]
movups  xmm1, xmmword ptr [eax+edi]
paddq   xmm0, xmmword ptr [esp+1d0h]
movups  xmmword ptr [ecx], xmm0
mov     ecx, edi
movaps  xmm0, xmmword ptr [esp+1e0h]
paddq   xmm0, xmm2
movups  xmmword ptr [eax+ecx], xmm0
movaps  xmm0, xmm4
movaps  xmm4, xmmword ptr [esp+170h]
paddq   xmm0, xmm1
movups  xmmword ptr [edx+ecx], xmm0
movaps  xmm0, xmm7
pxor    xmm0, xmmword ptr [esp+1e0h]
mov     edx, [esp+68h]
movups  xmmword ptr [esi], xmm0
mov     esi, [esp+1ch]
and     esi, 1ffff0h
mov     ecx, esi
mov     eax, esi
xor     ecx, 10h
xor     eax, 20h
aesenc  xmm4, xmm3
movaps  xmmword ptr [esp+170h], xmm4
movups  xmm2, xmmword ptr [ecx+edx]
movups  xmm1, xmmword ptr [eax+edx]
mov     edi, [esp+24h]
xor     esi, 30h
paddq   xmm2, xmm6
paddq   xmm1, xmm3
movups  xmm0, xmmword ptr [esi+edx]
paddq   xmm0, xmmword ptr [esp+200h]
movups  xmmword ptr [ecx+edx], xmm0
xor     ecx, ecx
movups  xmmword ptr [eax+edx], xmm2
movaps  xmm0, xmm4
movups  xmmword ptr [esi+edx], xmm1
pxor    xmm0, xmm6
movaps  xmm1, xmmword ptr [esp+1a0h]
xor     esi, esi
movups  xmmword ptr [edi], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
movaps  xmm2, xmmword ptr [esp+180h]
psrldq  xmm0, 4
or      ecx, eax
movd    dword ptr [esp+54h], xmm0
mov     [esp+20h], ecx
movaps  xmm0, xmm7
and     ecx, 1ffff0h
psrldq  xmm0, 4
add     ecx, [esp+50h]
mov     [esp+1ch], ecx
movd    dword ptr [esp+5ch], xmm0
movaps  xmm0, xmm4
psrldq  xmm0, 4
mov     eax, [ecx+8]
mov     [esp+0d0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0d4h], eax
movd    eax, xmm7
movd    dword ptr [esp+8ch], xmm0
movaps  xmm0, xmm2
psrldq  xmm0, 4
or      ecx, eax
mov     [esp+70h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+3ch]
mov     [esp+40h], ecx
mov     eax, [ecx]
mov     edi, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0f8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0fch], eax
movd    eax, xmm4
mov     [esp+58h], edi
mov     edi, [esp+220h]
or      ecx, eax
mov     [esp+7ch], ecx
and     ecx, 1ffff0h
add     ecx, edx
movd    edx, xmm0
mov     [esp+0b4h], ecx
xor     edx, edi
mov     eax, [ecx]
mov     [esp+74h], eax
mov     eax, [ecx+4]
mov     [esp+78h], eax
mov     eax, [ecx+8]
mov     [esp+120h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+124h], eax
movd    eax, xmm2
or      ecx, eax
mov     eax, [esp+1ch]
xor     ecx, esi
xor     ecx, [eax]
xor     edx, [eax+4]
mov     [esp+28h], ecx
mov     [esp+38h], edx
mov     [esp+0d8h], ecx
mov     [esp+0dch], edx
shld    esi, edi, 1
psrldq  xmm1, 8
xor     edx, edx
add     edi, edi
movd    eax, xmm1
add     edi, [esp+20h]
movaps  xmm0, xmm1
psrldq  xmm0, 4
and     edi, 7ffffffeh
push    0
movd    ecx, xmm0
or      edi, 80000001h
push    edi
or      edx, eax
push    ecx
push    edx
call    __aulldvrm
mov     edi, ecx
mov     [esp+34h], ebx
xor     ecx, ecx
mov     [esp+34h], edx
add     ecx, eax
xorps   xmm0, xmm0
mov     [esp+0c0h], ecx
adc     edi, 0
add     ecx, [esp+20h]
mov     [esp+60h], ecx
mov     eax, ecx
mov     [esp+0c4h], edi
adc     edi, [esp+54h]
xor     edx, edx
movq    xmm1, qword ptr [esp+0c0h]
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
shr     ecx, 0ch
mov     [esp+0b8h], eax
mov     [esp+0bch], ecx
movq    xmm0, qword ptr [esp+0b8h]
movaps  xmmword ptr [esp+180h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     edx, ecx
mov     esi, eax
shrd    eax, ecx, 13h
shrd    esi, edx, 14h
shr     ecx, 13h
mov     [esp+24h], ecx
shr     edx, 14h
mov     [esp+9ch], ecx
mov     ecx, eax
mov     [esp+44h], eax
sub     ecx, esi
mov     [esp+98h], eax
mov     eax, [esp+24h]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a4fbd8
jb      short loc_37a4fbbc
cmp     eax, [esp+60h]
jnb     short loc_37a4fbd8
mov     edx, [esp+44h]
mov     eax, [esp+24h]
add     edx, 1
mov     [esp+98h], edx
adc     eax, 0
mov     [esp+9ch], eax
movq    xmm1, qword ptr [esp+98h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+58h]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+34h]
movaps  xmmword ptr [esp+230h], xmm1
call    __allmul
mov     edi, [esp+20h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+34h]
mov     [esp+70h], eax
call    __allmul
push    0
push    edi
mov     edi, [esp+40h]
push    0
push    edi
mov     [esp+54h], eax
mov     [esp+3ch], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+60h]
add     eax, edx
adc     ecx, esi
mov     [esp+38h], ecx
cmp     ecx, esi
ja      short loc_37a4fc5a
jb      short loc_37a4fc48
cmp     eax, edx
jnb     short loc_37a4fc5a
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a4fc73
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     ecx, [esp+64h]
mov     [esp+24h], ecx
mov     ecx, [esp+60h]
mov     [esp+28h], ecx
mov     esi, [esp+44h]
xor     ecx, ecx
mov     edx, [esp+2ch]
add     ecx, esi
mov     [esp+60h], ecx
adc     eax, edx
mov     [esp+0c8h], ecx
mov     [esp+2ch], eax
mov     [esp+0cch], eax
cmp     eax, edx
ja      short loc_37a4fcb0
jb      short loc_37a4fca1
cmp     ecx, esi
jnb     short loc_37a4fcb0
mov     esi, 1
mov     dword ptr [esp+44h], 0
jmp     short loc_37a4fcc5
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     esi, [esp+30h]
mov     [esp+44h], eax
push    0
push    dword ptr [esp+58h]
push    0
push    edi
call    __allmul
mov     ecx, eax
movq    xmm0, qword ptr [esp+0c8h]
add     ecx, [esp+38h]
mov     edi, edx
mov     eax, [esp+20h]
adc     edi, 0
mov     edx, [esp+50h]
add     ecx, [esp+28h]
mov     dword ptr [esp+34h], 0
adc     edi, [esp+24h]
add     ecx, esi
mov     esi, [esp+50h]
adc     edi, [esp+44h]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+48h], ecx
add     esi, eax
mov     [esp+4ch], edi
mov     eax, [esp+20h]
movq    xmm3, qword ptr [esp+48h]
xor     eax, 20h
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
add     edx, eax
movups  xmm2, xmmword ptr [esi]
pxor    xmm2, xmm3
movaps  xmm3, xmmword ptr [esp+1b0h]
paddq   xmm2, xmm3
xor     edi, [edx+4]
xor     ecx, [edx]
movups  xmm1, xmmword ptr [edx]
paddq   xmm1, xmmword ptr [esp+140h]
mov     [esp+4ch], edi
mov     edi, [esp+0ach]
mov     [esp+48h], ecx
mov     ecx, [edi+eax]
mov     eax, [edi+eax+4]
xor     eax, [esp+2ch]
xor     ecx, [esp+60h]
mov     [esp+84h], eax
mov     eax, [esp+20h]
mov     [esp+80h], ecx
xor     eax, 30h
mov     ecx, [esp+50h]
and     eax, 1ffff0h
mov     edi, [esp+230h]
movups  xmm0, xmmword ptr [eax+ecx]
paddq   xmm0, xmmword ptr [esp+190h]
movups  xmmword ptr [esi], xmm0
xor     esi, esi
movq    xmm0, qword ptr [esp+80h]
movups  xmmword ptr [edx], xmm2
movq    xmm2, qword ptr [esp+0d8h]
movups  xmmword ptr [eax+ecx], xmm1
xor     ecx, ecx
movq    xmm1, qword ptr [esp+48h]
mov     eax, [esp+1ch]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+140h]
movq    xmm0, qword ptr [esp+0d0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1a0h]
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+1c0h]
movaps  xmmword ptr [esp+1b0h], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
movaps  xmmword ptr [esp+140h], xmm2
xor     ecx, esi
movd    dword ptr [esp+20h], xmm2
movaps  xmmword ptr [esp+190h], xmm3
xor     edx, edi
mov     eax, [esp+6ch]
movaps  xmm1, xmmword ptr [esp+150h]
xor     eax, ecx
shld    esi, edi, 1
mov     [esp+6ch], eax
mov     [esp+100h], eax
add     edi, edi
mov     eax, [esp+58h]
add     edi, [esp+70h]
xor     eax, edx
psrldq  xmm1, 8
and     edi, 7ffffffeh
movaps  xmm0, xmm1
mov     [esp+58h], eax
psrldq  xmm0, 4
or      edi, 80000001h
push    0
mov     [esp+108h], eax
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     edi, [esp+5ch]
xorps   xmm0, xmm0
mov     [esp+34h], ebx
mov     [esp+34h], edx
xor     edx, edx
add     edx, eax
mov     eax, [esp+70h]
mov     [esp+0e0h], edx
adc     ecx, 0
add     eax, edx
mov     [esp+0e4h], ecx
movq    xmm1, qword ptr [esp+0e0h]
adc     edi, ecx
mov     [esp+2ch], eax
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
xor     edx, edx
shr     ecx, 0ch
mov     [esp+0e8h], eax
mov     [esp+0ech], ecx
movq    xmm0, qword ptr [esp+0e8h]
movaps  xmmword ptr [esp+1c0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     edx, ecx
mov     esi, eax
shrd    eax, ecx, 13h
shrd    esi, edx, 14h
shr     ecx, 13h
mov     [esp+1ch], ecx
shr     edx, 14h
mov     [esp+0a4h], ecx
mov     ecx, eax
sub     ecx, esi
mov     [esp+54h], eax
mov     [esp+0a0h], eax
mov     eax, [esp+1ch]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a4ff9b
jb      short loc_37a4ff7f
cmp     eax, [esp+2ch]
jnb     short loc_37a4ff9b
mov     edx, [esp+54h]
mov     eax, [esp+1ch]
add     edx, 1
mov     [esp+0a0h], edx
adc     eax, 0
mov     [esp+0a4h], eax
movq    xmm1, qword ptr [esp+0a0h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+60h]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+78h]
movaps  xmmword ptr [esp+240h], xmm1
call    __allmul
mov     edi, [esp+70h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+78h]
mov     [esp+3ch], eax
call    __allmul
push    0
push    edi
mov     edi, [esp+60h]
push    0
push    edi
mov     [esp+48h], eax
mov     [esp+70h], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+2ch]
add     eax, edx
adc     ecx, esi
mov     [esp+2ch], ecx
cmp     ecx, esi
ja      short loc_37a5001d
jb      short loc_37a5000b
cmp     eax, edx
jnb     short loc_37a5001d
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a50036
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+28h], ecx
mov     ecx, [esp+30h]
mov     [esp+1ch], ecx
mov     esi, [esp+38h]
xor     ecx, ecx
mov     edx, [esp+60h]
add     ecx, esi
mov     [esp+38h], ecx
adc     eax, edx
mov     [esp+0f0h], ecx
mov     [esp+60h], eax
mov     [esp+0f4h], eax
cmp     eax, edx
ja      short loc_37a50073
jb      short loc_37a50064
cmp     ecx, esi
jnb     short loc_37a50073
mov     esi, 1
mov     dword ptr [esp+24h], 0
jmp     short loc_37a50088
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     esi, [esp+30h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+60h]
push    0
push    edi
call    __allmul
mov     ecx, eax
movq    xmm0, qword ptr [esp+0f0h]
add     ecx, [esp+2ch]
mov     edi, edx
mov     eax, [esp+70h]
adc     edi, 0
mov     edx, [esp+3ch]
add     ecx, [esp+1ch]
mov     dword ptr [esp+34h], 0
adc     edi, [esp+28h]
add     ecx, esi
mov     esi, [esp+3ch]
adc     edi, [esp+24h]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+48h], ecx
add     esi, eax
mov     [esp+4ch], edi
mov     eax, [esp+70h]
movq    xmm3, qword ptr [esp+48h]
xor     eax, 20h
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
add     edx, eax
movups  xmm2, xmmword ptr [esi]
pxor    xmm2, xmm3
movaps  xmm3, xmmword ptr [esp+1e0h]
paddq   xmm2, xmm3
xor     edi, [edx+4]
xor     ecx, [edx]
movups  xmm1, xmmword ptr [edx]
paddq   xmm1, xmmword ptr [esp+130h]
mov     [esp+4ch], edi
mov     edi, [esp+0b0h]
mov     [esp+48h], ecx
mov     ecx, [edi+eax]
mov     eax, [edi+eax+4]
xor     eax, [esp+60h]
xor     ecx, [esp+38h]
mov     [esp+84h], eax
mov     eax, [esp+70h]
mov     [esp+80h], ecx
xor     eax, 30h
mov     ecx, [esp+3ch]
and     eax, 1ffff0h
mov     edi, [esp+240h]
movups  xmm0, xmmword ptr [eax+ecx]
paddq   xmm0, xmmword ptr [esp+1d0h]
movups  xmmword ptr [esi], xmm0
xor     esi, esi
movq    xmm0, qword ptr [esp+80h]
movups  xmmword ptr [edx], xmm2
movq    xmm2, qword ptr [esp+100h]
movups  xmmword ptr [eax+ecx], xmm1
xor     ecx, ecx
movq    xmm1, qword ptr [esp+48h]
mov     eax, [esp+40h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+130h]
movq    xmm0, qword ptr [esp+0f8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+150h]
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+1f0h]
movaps  xmmword ptr [esp+1e0h], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
movaps  xmmword ptr [esp+130h], xmm2
xor     ecx, esi
movd    dword ptr [esp+58h], xmm2
movaps  xmmword ptr [esp+1d0h], xmm3
xor     edx, edi
mov     eax, [esp+74h]
movaps  xmm1, xmmword ptr [esp+170h]
xor     eax, ecx
shld    esi, edi, 1
mov     [esp+74h], eax
mov     [esp+128h], eax
add     edi, edi
mov     eax, [esp+78h]
add     edi, [esp+7ch]
xor     eax, edx
psrldq  xmm1, 8
and     edi, 7ffffffeh
movaps  xmm0, xmm1
mov     [esp+78h], eax
psrldq  xmm0, 4
or      edi, 80000001h
push    0
mov     [esp+130h], eax
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     edi, [esp+8ch]
xorps   xmm0, xmm0
mov     [esp+34h], ebx
mov     [esp+34h], edx
xor     edx, edx
add     edx, eax
mov     eax, [esp+7ch]
mov     [esp+108h], edx
adc     ecx, 0
add     eax, edx
mov     [esp+10ch], ecx
movq    xmm1, qword ptr [esp+108h]
adc     edi, ecx
mov     [esp+40h], eax
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
xor     edx, edx
shr     ecx, 0ch
mov     [esp+110h], eax
mov     [esp+114h], ecx
movq    xmm0, qword ptr [esp+110h]
movaps  xmmword ptr [esp+1f0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     edx, ecx
mov     esi, eax
shrd    eax, ecx, 13h
shrd    esi, edx, 14h
shr     ecx, 13h
mov     [esp+1ch], ecx
shr     edx, 14h
mov     [esp+14h], ecx
mov     ecx, eax
sub     ecx, esi
mov     [esp+5ch], eax
mov     [esp+10h], eax
mov     eax, [esp+1ch]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a50355
jb      short loc_37a5033f
cmp     eax, [esp+40h]
jnb     short loc_37a50355
mov     edx, [esp+5ch]
mov     eax, [esp+1ch]
add     edx, 1
mov     [esp+10h], edx
adc     eax, 0
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+90h]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+80h]
movaps  xmmword ptr [esp+250h], xmm1
call    __allmul
mov     esi, [esp+7ch]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+80h]
mov     [esp+50h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+84h]
mov     [esp+3ch], eax
mov     [esp+48h], edx
call    __allmul
mov     ecx, [esp+40h]
mov     esi, eax
add     esi, ecx
mov     eax, edx
adc     eax, edi
mov     [esp+40h], eax
cmp     eax, edi
ja      short loc_37a503e1
jb      short loc_37a503cf
cmp     esi, ecx
jnb     short loc_37a503e1
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a503fa
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     [esp+28h], eax
mov     eax, [esp+30h]
mov     [esp+1ch], eax
mov     edx, [esp+2ch]
xor     eax, eax
mov     ecx, [esp+38h]
add     eax, edx
mov     [esp+2ch], eax
adc     esi, ecx
mov     [esp+118h], eax
mov     [esp+38h], esi
mov     [esp+11ch], esi
cmp     esi, ecx
ja      short loc_37a50437
jb      short loc_37a50428
cmp     eax, edx
jnb     short loc_37a50437
mov     edi, 1
mov     dword ptr [esp+24h], 0
jmp     short loc_37a5044c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     edi, [esp+30h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+90h]
push    0
push    dword ptr [esp+84h]
call    __allmul
mov     ecx, eax
mov     esi, [esp+90h]
add     ecx, [esp+40h]
mov     eax, edx
mov     edx, [esp+68h]
adc     eax, 0
movq    xmm0, qword ptr [esp+118h]
add     ecx, [esp+1ch]
movaps  xmm4, xmmword ptr [esp+210h]
adc     eax, [esp+28h]
add     ecx, edi
mov     edi, [esp+68h]
adc     eax, [esp+24h]
mov     [esp+4ch], eax
mov     [esp+40h], eax
mov     eax, [esp+7ch]
xor     eax, 10h
mov     [esp+48h], ecx
movq    xmm3, qword ptr [esp+48h]
and     eax, 1ffff0h
add     edi, eax
movaps  xmm6, xmmword ptr [esp+170h]
mov     eax, [esp+7ch]
xor     eax, 20h
movaps  xmm5, xmmword ptr [esp+140h]
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
add     edx, eax
movups  xmm2, xmmword ptr [edi]
pxor    xmm2, xmm3
mov     dword ptr [esp+34h], 0
movq    xmm3, qword ptr [esp+128h]
paddq   xmm2, xmm4
movaps  xmmword ptr [esp+210h], xmm6
xor     ecx, [edx]
movups  xmm1, xmmword ptr [edx]
mov     [esp+48h], ecx
mov     ecx, [esp+40h]
xor     ecx, [edx+4]
paddq   xmm1, xmmword ptr [esp+160h]
mov     [esp+4ch], ecx
mov     ecx, [esp+90h]
mov     ecx, [ecx+eax]
mov     eax, [esi+eax+4]
xor     eax, [esp+38h]
xor     ecx, [esp+2ch]
mov     [esp+84h], eax
mov     eax, [esp+7ch]
mov     esi, [esp+20h]
xor     eax, 30h
and     eax, 1ffff0h
mov     [esp+80h], ecx
sub     dword ptr [esp+94h], 1
mov     ecx, [esp+68h]
movups  xmm0, xmmword ptr [eax+ecx]
paddq   xmm0, xmmword ptr [esp+200h]
movups  xmmword ptr [edi], xmm0
movq    xmm0, qword ptr [esp+80h]
movups  xmmword ptr [edx], xmm2
movups  xmmword ptr [eax+ecx], xmm1
movq    xmm1, qword ptr [esp+48h]
mov     eax, [esp+0b4h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+160h]
movq    xmm0, qword ptr [esp+120h]
punpcklqdq xmm3, xmm0
pxor    xmm3, xmm1
movups  xmmword ptr [eax], xmm1
mov     eax, [esp+58h]
movd    edi, xmm3
movaps  xmmword ptr [esp+200h], xmm4
movaps  xmm4, xmmword ptr [esp+130h]
movaps  xmmword ptr [esp+160h], xmm3
mov     [esp+1ch], edi
jnz     loc_37a4f7e0
mov     edi, [ebp+10h]
xor     esi, esi
nop     dword ptr [eax+00h]
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a7ed80
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a505e0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 3b4h
push    ebx
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a7ea40
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 5
jb      short loc_37a51ea7
mov     ecx, [ebp+14h]
xorps   xmm0, xmm0
mov     edx, [ecx]
mov     esi, [ecx+4]
mov     edi, [ecx+8]
mov     eax, [edx+0e0h]
mov     [esp+54h], eax
mov     eax, [esi+0e0h]
mov     [esp+64h], eax
mov     eax, [edi+0e0h]
movq    xmm1, qword ptr [edx+60h]
mov     [esp+68h], eax
mov     eax, [ecx+0ch]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+290h], xmm1
movq    xmm1, qword ptr [edx+68h]
mov     eax, [eax+0e0h]
mov     [esp+6ch], eax
mov     eax, [ecx+10h]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+10h], ecx
mov     eax, [eax+0e0h]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+9ch], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
movaps  xmmword ptr [esp+370h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+58h]
xor     ecx, [edx+48h]
mov     [esp+14h], eax
mov     eax, [edx+5ch]
xor     eax, [edx+4ch]
movaps  xmmword ptr [esp+220h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+50h]
xor     ecx, [edx+40h]
punpcklqdq xmm1, xmm0
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+54h]
xor     eax, [edx+44h]
movaps  xmmword ptr [esp+230h], xmm1
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+2ch]
punpcklqdq xmm1, xmm0
xorps   xmm0, xmm0
movaps  xmmword ptr [esp+2a0h], xmm1
movq    xmm1, qword ptr [esi+60h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+2c0h], xmm1
movq    xmm1, qword ptr [esi+68h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+380h], xmm1
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [esi+24h]
xor     eax, [esi+4]
mov     [esp+10h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+58h]
xor     ecx, [esi+48h]
mov     [esp+14h], eax
mov     eax, [esi+5ch]
xor     eax, [esi+4ch]
movaps  xmmword ptr [esp+210h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+50h]
xor     ecx, [esi+40h]
mov     [esp+14h], eax
mov     eax, [esi+54h]
xor     eax, [esi+44h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+14h], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
movaps  xmmword ptr [esp+250h], xmm1
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
xorps   xmm0, xmm0
movaps  xmmword ptr [esp+2d0h], xmm1
movq    xmm1, qword ptr [edi+60h]
mov     [esp+10h], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
punpcklqdq xmm1, xmm0
mov     [esp+14h], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
movaps  xmmword ptr [esp+2e0h], xmm1
movq    xmm1, qword ptr [edi+68h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
movaps  xmmword ptr [esp+390h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+200h], xmm1
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     ecx, [edi+58h]
xor     ecx, [edi+48h]
mov     eax, [edi+5ch]
xor     eax, [edi+4ch]
mov     esi, [ebp+14h]
mov     [esp+10h], ecx
mov     ecx, [edi+50h]
xor     ecx, [edi+40h]
mov     edx, [esi+0ch]
mov     [esp+14h], eax
mov     eax, [edi+54h]
xor     eax, [edi+44h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
movaps  xmmword ptr [esp+300h], xmm1
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
xorps   xmm0, xmm0
movaps  xmmword ptr [esp+2f0h], xmm1
movq    xmm1, qword ptr [edx+60h]
punpcklqdq xmm1, xmm0
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
movaps  xmmword ptr [esp+310h], xmm1
movq    xmm1, qword ptr [edx+68h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
movaps  xmmword ptr [esp+3a0h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+58h]
xor     ecx, [edx+48h]
mov     [esp+14h], eax
mov     eax, [edx+5ch]
xor     eax, [edx+4ch]
movaps  xmmword ptr [esp+1f0h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+50h]
xor     ecx, [edx+40h]
mov     [esp+14h], eax
mov     eax, [edx+54h]
xor     eax, [edx+44h]
mov     edx, [esi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+330h], xmm1
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
xorps   xmm0, xmm0
movaps  xmmword ptr [esp+320h], xmm1
movq    xmm1, qword ptr [edx+60h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+340h], xmm1
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
movq    xmm1, qword ptr [edx+68h]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm2, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+58h]
xor     ecx, [edx+48h]
mov     [esp+14h], eax
mov     eax, [edx+5ch]
xor     eax, [edx+4ch]
movaps  xmmword ptr [esp+3b0h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+50h]
xor     ecx, [edx+40h]
mov     [esp+14h], eax
mov     eax, [edx+54h]
xor     eax, [edx+44h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+360h], xmm1
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
push    300h
push    100h
movaps  xmmword ptr [esp+278h], xmm2
movaps  xmmword ptr [esp+358h], xmm1
call    __control87
mov     ecx, [esp+5ch]
add     esp, 8
movaps  xmm7, xmmword ptr [esp+220h]
add     ecx, 8
movaps  xmm6, xmmword ptr [esp+210h]
movaps  xmm5, xmmword ptr [esp+200h]
movaps  xmm4, xmmword ptr [esp+1f0h]
movaps  xmm3, xmmword ptr [esp+270h]
mov     [esp+0fch], ecx
mov     ecx, [esp+64h]
add     ecx, 8
movd    edx, xmm7
movd    esi, xmm6
movd    edi, xmm5
mov     [esp+108h], ecx
mov     ecx, [esp+68h]
mov     dword ptr [esp+24h], 0
add     ecx, 8
mov     dword ptr [esp+24h], 0
mov     dword ptr [esp+24h], 0
mov     [esp+40h], edx
mov     dword ptr [esp+0cch], 0
mov     [esp+7ch], esi
mov     [esp+84h], edi
movd    dword ptr [esp+70h], xmm4
movd    dword ptr [esp+74h], xmm3
mov     dword ptr [esp+24h], 0
mov     eax, [esp+9ch]
mov     [esp+10ch], ecx
mov     ecx, [esp+6ch]
add     ecx, 8
mov     dword ptr [esp+0d4h], 80000h
add     eax, 8
mov     [esp+0f8h], ecx
mov     ecx, [esp+74h]
mov     [esp+100h], eax
nop     dword ptr [eax]
mov     eax, [esp+70h]
and     esi, 1ffff0h
add     esi, [esp+64h]
and     edi, 1ffff0h
add     edi, [esp+68h]
and     eax, 1ffff0h
add     eax, [esp+6ch]
and     ecx, 1ffff0h
add     ecx, [esp+9ch]
and     edx, 1ffff0h
movups  xmm0, xmmword ptr [esi]
add     edx, [esp+54h]
movaps  xmmword ptr [esp+240h], xmm0
movups  xmm0, xmmword ptr [edi]
movaps  xmmword ptr [esp+110h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+260h], xmm0
movups  xmm0, xmmword ptr [ecx]
mov     [esp+34h], edi
mov     edi, [esp+40h]
and     edi, 1ffff0h
mov     [esp+2ch], eax
movaps  xmmword ptr [esp+280h], xmm0
mov     eax, edi
movups  xmm0, xmmword ptr [edx]
xor     eax, 10h
aesenc  xmm0, xmm7
mov     [esp+78h], ecx
mov     ecx, [esp+54h]
add     ecx, eax
mov     [esp+40h], edi
mov     [esp+1ch], esi
mov     eax, edi
mov     edi, [esp+54h]
xor     eax, 20h
mov     esi, [esp+40h]
movups  xmm2, xmmword ptr [ecx]
xor     esi, 30h
paddq   xmm2, xmmword ptr [esp+230h]
movups  xmm1, xmmword ptr [eax+edi]
movaps  xmmword ptr [esp+2b0h], xmm0
paddq   xmm1, xmm7
movups  xmm0, xmmword ptr [esi+edi]
paddq   xmm0, xmmword ptr [esp+2a0h]
movups  xmmword ptr [ecx], xmm0
mov     ecx, edi
mov     edi, [esp+7ch]
movaps  xmm0, xmmword ptr [esp+2b0h]
and     edi, 1ffff0h
pxor    xmm0, xmmword ptr [esp+230h]
movaps  xmm7, xmmword ptr [esp+240h]
movups  xmmword ptr [eax+ecx], xmm2
mov     eax, esi
aesenc  xmm7, xmm6
mov     [esp+40h], esi
mov     esi, [esp+1ch]
movups  xmmword ptr [eax+ecx], xmm1
mov     ecx, edi
movups  xmmword ptr [edx], xmm0
mov     eax, edi
mov     edx, [esp+64h]
xor     ecx, 10h
xor     eax, 20h
movaps  xmmword ptr [esp+240h], xmm7
xor     edi, 30h
movups  xmm2, xmmword ptr [ecx+edx]
movups  xmm1, xmmword ptr [eax+edx]
movups  xmm0, xmmword ptr [edi+edx]
paddq   xmm1, xmm6
paddq   xmm0, xmmword ptr [esp+2d0h]
paddq   xmm2, xmmword ptr [esp+250h]
movups  xmmword ptr [ecx+edx], xmm0
movaps  xmm0, xmm7
pxor    xmm0, xmmword ptr [esp+250h]
movups  xmmword ptr [eax+edx], xmm2
movups  xmmword ptr [edi+edx], xmm1
mov     edx, [esp+84h]
movups  xmmword ptr [esi], xmm0
movaps  xmm0, xmmword ptr [esp+110h]
aesenc  xmm0, xmm5
movaps  xmmword ptr [esp+110h], xmm0
mov     esi, [esp+68h]
and     edx, 1ffff0h
mov     edi, [esp+34h]
mov     ecx, edx
xor     ecx, 10h
movaps  xmm6, xmmword ptr [esp+260h]
mov     eax, edx
mov     dword ptr [esp+24h], 0
xor     edx, 30h
mov     dword ptr [esp+24h], 0
xor     eax, 20h
movups  xmm2, xmmword ptr [ecx+esi]
paddq   xmm2, xmmword ptr [esp+300h]
movups  xmm0, xmmword ptr [edx+esi]
movups  xmm1, xmmword ptr [eax+esi]
paddq   xmm0, xmmword ptr [esp+2f0h]
paddq   xmm1, xmm5
movups  xmmword ptr [ecx+esi], xmm0
movups  xmmword ptr [eax+esi], xmm2
movaps  xmm0, xmmword ptr [esp+110h]
pxor    xmm0, xmmword ptr [esp+300h]
movups  xmmword ptr [edx+esi], xmm1
mov     esi, [esp+6ch]
mov     edx, [esp+70h]
movups  xmmword ptr [edi], xmm0
and     edx, 1ffff0h
movaps  xmm5, xmmword ptr [esp+280h]
mov     ecx, edx
xor     ecx, 10h
mov     eax, edx
xor     edx, 30h
xor     eax, 20h
aesenc  xmm6, xmm4
aesenc  xmm5, xmm3
movups  xmm2, xmmword ptr [ecx+esi]
movups  xmm0, xmmword ptr [edx+esi]
movups  xmm1, xmmword ptr [eax+esi]
paddq   xmm0, xmmword ptr [esp+320h]
paddq   xmm1, xmm4
paddq   xmm2, xmmword ptr [esp+330h]
movups  xmmword ptr [ecx+esi], xmm0
movaps  xmm0, xmm6
pxor    xmm0, xmmword ptr [esp+330h]
movups  xmmword ptr [eax+esi], xmm2
mov     eax, [esp+2ch]
movups  xmmword ptr [edx+esi], xmm1
mov     edx, [esp+74h]
mov     esi, [esp+9ch]
and     edx, 1ffff0h
movups  xmmword ptr [eax], xmm0
mov     ecx, edx
xor     ecx, 10h
movaps  xmmword ptr [esp+260h], xmm6
mov     eax, edx
movaps  xmmword ptr [esp+280h], xmm5
xor     edx, 30h
xor     eax, 20h
movups  xmm2, xmmword ptr [ecx+esi]
paddq   xmm2, xmmword ptr [esp+360h]
movups  xmm0, xmmword ptr [edx+esi]
movups  xmm1, xmmword ptr [eax+esi]
paddq   xmm0, xmmword ptr [esp+350h]
paddq   xmm1, xmm3
movups  xmmword ptr [ecx+esi], xmm0
movaps  xmm0, xmm5
pxor    xmm0, xmmword ptr [esp+360h]
xor     ecx, ecx
movups  xmmword ptr [eax+esi], xmm2
mov     eax, [esp+78h]
movups  xmmword ptr [edx+esi], xmm1
movaps  xmm1, xmmword ptr [esp+2b0h]
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    dword ptr [esp+0cch], xmm0
or      ecx, eax
mov     [esp+40h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+54h]
mov     [esp+1ch], ecx
mov     eax, [ecx+8]
movaps  xmm0, xmm7
mov     [esp+138h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+13ch], eax
movaps  xmm2, xmmword ptr [esp+110h]
movd    eax, xmm7
psrldq  xmm0, 4
movd    dword ptr [esp+80h], xmm0
movaps  xmm0, xmm2
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+0a0h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+64h]
mov     [esp+30h], ecx
movd    dword ptr [esp+88h], xmm0
movaps  xmm0, xmm6
psrldq  xmm0, 4
mov     eax, [ecx]
mov     edi, [ecx+4]
mov     [esp+0b8h], eax
mov     eax, [ecx+8]
mov     [esp+160h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+164h], eax
movd    eax, xmm2
mov     [esp+7ch], edi
movaps  xmm2, xmmword ptr [esp+290h]
or      ecx, eax
movd    dword ptr [esp+70h], xmm0
mov     [esp+0a8h], ecx
movaps  xmm0, xmm5
and     ecx, 1ffff0h
psrldq  xmm0, 4
add     ecx, [esp+68h]
mov     [esp+44h], ecx
movd    dword ptr [esp+74h], xmm0
movaps  xmm0, xmm2
mov     eax, [ecx]
mov     edi, [ecx+4]
mov     [esp+0a4h], eax
mov     eax, [ecx+8]
mov     [esp+188h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+18ch], eax
movd    eax, xmm6
mov     [esp+84h], edi
or      ecx, eax
mov     [esp+0b0h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+6ch]
mov     [esp+8ch], ecx
mov     eax, [ecx]
mov     edi, [ecx+4]
mov     [esp+0ach], eax
mov     eax, [ecx+8]
mov     [esp+1b0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+1b4h], eax
movd    eax, xmm5
mov     [esp+0c0h], edi
or      ecx, eax
mov     [esp+0bch], ecx
and     ecx, 1ffff0h
add     ecx, esi
xor     esi, esi
mov     [esp+104h], ecx
mov     eax, [ecx]
mov     edi, [ecx+4]
mov     [esp+0b4h], eax
mov     eax, [ecx+8]
mov     [esp+1d8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0c4h], edi
mov     edi, [esp+370h]
mov     [esp+1dch], eax
psrldq  xmm0, 4
xor     ecx, ecx
movd    eax, xmm2
movd    edx, xmm0
psrldq  xmm1, 8
or      ecx, eax
movaps  xmm0, xmm1
mov     eax, [esp+1ch]
xor     edx, edi
xor     ecx, esi
psrldq  xmm0, 4
shld    esi, edi, 1
push    0
xor     ecx, [eax]
add     edi, edi
xor     edx, [eax+4]
add     edi, [esp+44h]
mov     [esp+30h], ecx
and     edi, 7ffffffeh
mov     [esp+144h], ecx
or      edi, 80000001h
mov     [esp+38h], edx
mov     [esp+148h], edx
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     edi, ecx
mov     [esp+24h], ebx
xor     ecx, ecx
mov     [esp+24h], edx
add     ecx, eax
xorps   xmm0, xmm0
mov     [esp+1e8h], ecx
adc     edi, 0
add     ecx, [esp+40h]
mov     [esp+50h], ecx
mov     eax, ecx
mov     [esp+1ech], edi
adc     edi, [esp+0cch]
xor     edx, edx
movq    xmm1, qword ptr [esp+1e8h]
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
shr     ecx, 0ch
mov     [esp+128h], eax
mov     [esp+12ch], ecx
movq    xmm0, qword ptr [esp+128h]
movaps  xmmword ptr [esp+290h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     edx, ecx
mov     esi, eax
shrd    eax, ecx, 13h
shrd    esi, edx, 14h
shr     ecx, 13h
mov     [esp+78h], ecx
mov     [esp+0dch], ecx
mov     ecx, eax
shr     edx, 14h
sub     ecx, esi
mov     [esp+48h], eax
mov     [esp+0d8h], eax
mov     eax, [esp+78h]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a52a78
jb      short loc_37a52a5c
cmp     eax, [esp+50h]
jnb     short loc_37a52a78
mov     edx, [esp+48h]
mov     eax, [esp+78h]
add     edx, 1
mov     [esp+0d8h], edx
adc     eax, 0
mov     [esp+0dch], eax
mov     edi, [esp+0cch]
xorps   xmm0, xmm0
movq    xmm1, qword ptr [esp+0d8h]
push    0
push    edi
push    0
push    dword ptr [esp+38h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+380h], xmm1
call    __allmul
push    0
push    dword ptr [esp+44h]
mov     [esp+58h], eax
mov     esi, edx
push    0
push    dword ptr [esp+38h]
call    __allmul
push    0
push    dword ptr [esp+44h]
mov     [esp+50h], eax
push    0
push    dword ptr [esp+40h]
mov     [esp+5ch], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+50h]
add     eax, edx
adc     ecx, esi
mov     [esp+50h], ecx
cmp     ecx, esi
ja      short loc_37a52aff
jb      short loc_37a52aed
cmp     eax, edx
jnb     short loc_37a52aff
mov     dword ptr [esp+2ch], 0
mov     dword ptr [esp+78h], 1
jmp     short loc_37a52b18
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     ecx, [esp+5ch]
mov     [esp+78h], ecx
mov     ecx, [esp+58h]
mov     [esp+2ch], ecx
mov     esi, [esp+48h]
xor     ecx, ecx
mov     edx, [esp+4ch]
add     ecx, esi
mov     [esp+58h], ecx
adc     eax, edx
mov     [esp+130h], ecx
mov     [esp+4ch], eax
mov     [esp+134h], eax
cmp     eax, edx
ja      short loc_37a52b55
jb      short loc_37a52b46
cmp     ecx, esi
jnb     short loc_37a52b55
mov     esi, 1
mov     dword ptr [esp+48h], 0
jmp     short loc_37a52b6a
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     eax, [esp+24h]
mov     esi, [esp+20h]
mov     [esp+48h], eax
push    0
push    edi
push    0
push    dword ptr [esp+40h]
call    __allmul
mov     ecx, eax
movq    xmm0, qword ptr [esp+130h]
add     ecx, [esp+50h]
mov     edi, edx
mov     eax, [esp+40h]
adc     edi, 0
mov     edx, [esp+54h]
add     ecx, [esp+2ch]
mov     dword ptr [esp+0cch], 0
adc     edi, [esp+78h]
add     ecx, esi
mov     esi, [esp+54h]
adc     edi, [esp+48h]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+38h], ecx
add     esi, eax
mov     [esp+3ch], edi
mov     eax, [esp+40h]
movq    xmm3, qword ptr [esp+38h]
xor     eax, 20h
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
add     edx, eax
movups  xmm2, xmmword ptr [esi]
pxor    xmm2, xmm3
movaps  xmm3, xmmword ptr [esp+230h]
paddq   xmm2, xmm3
xor     edi, [edx+4]
xor     ecx, [edx]
movups  xmm1, xmmword ptr [edx]
paddq   xmm1, xmmword ptr [esp+220h]
mov     [esp+3ch], edi
mov     edi, [esp+0fch]
mov     [esp+38h], ecx
mov     ecx, [edi+eax]
mov     eax, [edi+eax+4]
xor     eax, [esp+4ch]
xor     ecx, [esp+58h]
mov     [esp+94h], eax
mov     eax, [esp+40h]
mov     [esp+90h], ecx
xor     eax, 30h
mov     ecx, [esp+54h]
and     eax, 1ffff0h
mov     edi, [esp+380h]
movups  xmm0, xmmword ptr [eax+ecx]
paddq   xmm0, xmmword ptr [esp+2a0h]
movups  xmmword ptr [esi], xmm0
xor     esi, esi
movq    xmm0, qword ptr [esp+90h]
movups  xmmword ptr [edx], xmm2
movq    xmm2, qword ptr [esp+140h]
movups  xmmword ptr [eax+ecx], xmm1
xor     ecx, ecx
movq    xmm1, qword ptr [esp+38h]
mov     eax, [esp+1ch]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+220h]
movq    xmm0, qword ptr [esp+138h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+2b0h]
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+2c0h]
movaps  xmmword ptr [esp+230h], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
movaps  xmmword ptr [esp+220h], xmm2
xor     ecx, esi
movd    dword ptr [esp+40h], xmm2
movaps  xmmword ptr [esp+2a0h], xmm3
xor     edx, edi
mov     eax, [esp+0b8h]
movaps  xmm1, xmmword ptr [esp+240h]
xor     eax, ecx
shld    esi, edi, 1
mov     [esp+0b8h], eax
mov     [esp+168h], eax
add     edi, edi
mov     eax, [esp+7ch]
add     edi, [esp+0a0h]
xor     eax, edx
psrldq  xmm1, 8
and     edi, 7ffffffeh
movaps  xmm0, xmm1
mov     [esp+7ch], eax
psrldq  xmm0, 4
or      edi, 80000001h
push    0
mov     [esp+170h], eax
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     edi, ecx
mov     [esp+24h], ebx
xor     ecx, ecx
mov     [esp+24h], edx
add     ecx, eax
xorps   xmm0, xmm0
mov     [esp+148h], ecx
adc     edi, 0
add     ecx, [esp+0a0h]
mov     [esp+58h], ecx
mov     eax, ecx
mov     [esp+14ch], edi
adc     edi, [esp+80h]
xor     edx, edx
movq    xmm1, qword ptr [esp+148h]
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
shr     ecx, 0ch
mov     [esp+150h], eax
mov     [esp+154h], ecx
movq    xmm0, qword ptr [esp+150h]
movaps  xmmword ptr [esp+2c0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     edx, ecx
mov     esi, eax
shrd    eax, ecx, 13h
shrd    esi, edx, 14h
shr     ecx, 13h
mov     [esp+1ch], ecx
shr     edx, 14h
mov     [esp+0e4h], ecx
mov     ecx, eax
sub     ecx, esi
mov     [esp+48h], eax
mov     [esp+0e0h], eax
mov     eax, [esp+1ch]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a52e52
jb      short loc_37a52e36
cmp     eax, [esp+58h]
jnb     short loc_37a52e52
mov     edx, [esp+48h]
mov     eax, [esp+1ch]
add     edx, 1
mov     [esp+0e0h], edx
adc     eax, 0
mov     [esp+0e4h], eax
movq    xmm1, qword ptr [esp+0e0h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+84h]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+0c4h]
movaps  xmmword ptr [esp+390h], xmm1
call    __allmul
mov     edi, [esp+0a0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0c4h]
mov     [esp+68h], eax
call    __allmul
push    0
push    edi
mov     edi, [esp+84h]
push    0
push    edi
mov     [esp+5ch], eax
mov     [esp+60h], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+58h]
add     eax, edx
adc     ecx, esi
mov     [esp+58h], ecx
cmp     ecx, esi
ja      short loc_37a52ee3
jb      short loc_37a52ed1
cmp     eax, edx
jnb     short loc_37a52ee3
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+34h], 1
jmp     short loc_37a52efc
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     ecx, [esp+24h]
mov     [esp+34h], ecx
mov     ecx, [esp+20h]
mov     [esp+1ch], ecx
mov     esi, [esp+4ch]
xor     ecx, ecx
mov     edx, [esp+50h]
add     ecx, esi
mov     [esp+4ch], ecx
adc     eax, edx
mov     [esp+158h], ecx
mov     [esp+50h], eax
mov     [esp+15ch], eax
cmp     eax, edx
ja      short loc_37a52f39
jb      short loc_37a52f2a
cmp     ecx, esi
jnb     short loc_37a52f39
mov     esi, 1
mov     dword ptr [esp+2ch], 0
jmp     short loc_37a52f4e
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     eax, [esp+24h]
mov     esi, [esp+20h]
mov     [esp+2ch], eax
push    0
push    dword ptr [esp+84h]
push    0
push    edi
call    __allmul
mov     ecx, eax
movq    xmm0, qword ptr [esp+158h]
add     ecx, [esp+58h]
mov     edi, edx
mov     eax, [esp+0a0h]
adc     edi, 0
mov     edx, [esp+64h]
add     ecx, [esp+1ch]
mov     dword ptr [esp+24h], 0
adc     edi, [esp+34h]
add     ecx, esi
mov     esi, [esp+64h]
adc     edi, [esp+2ch]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+38h], ecx
add     esi, eax
mov     [esp+3ch], edi
mov     eax, [esp+0a0h]
movq    xmm3, qword ptr [esp+38h]
xor     eax, 20h
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
add     edx, eax
movups  xmm2, xmmword ptr [esi]
pxor    xmm2, xmm3
movaps  xmm3, xmmword ptr [esp+250h]
paddq   xmm2, xmm3
xor     edi, [edx+4]
xor     ecx, [edx]
movups  xmm1, xmmword ptr [edx]
paddq   xmm1, xmmword ptr [esp+210h]
mov     [esp+3ch], edi
mov     edi, [esp+108h]
mov     [esp+38h], ecx
mov     ecx, [edi+eax]
mov     eax, [edi+eax+4]
xor     eax, [esp+50h]
xor     ecx, [esp+4ch]
mov     [esp+94h], eax
mov     eax, [esp+0a0h]
mov     [esp+90h], ecx
xor     eax, 30h
mov     ecx, [esp+64h]
and     eax, 1ffff0h
mov     edi, [esp+390h]
movups  xmm0, xmmword ptr [eax+ecx]
paddq   xmm0, xmmword ptr [esp+2d0h]
movups  xmmword ptr [esi], xmm0
xor     esi, esi
movq    xmm0, qword ptr [esp+90h]
movups  xmmword ptr [edx], xmm2
movq    xmm2, qword ptr [esp+168h]
movups  xmmword ptr [eax+ecx], xmm1
xor     ecx, ecx
movq    xmm1, qword ptr [esp+38h]
mov     eax, [esp+30h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+210h]
movq    xmm0, qword ptr [esp+160h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+240h]
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+2e0h]
movaps  xmmword ptr [esp+250h], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
movaps  xmmword ptr [esp+210h], xmm2
xor     ecx, esi
movd    dword ptr [esp+7ch], xmm2
movaps  xmmword ptr [esp+2d0h], xmm3
xor     edx, edi
mov     eax, [esp+0a4h]
movaps  xmm1, xmmword ptr [esp+110h]
xor     eax, ecx
shld    esi, edi, 1
mov     [esp+0a4h], eax
mov     [esp+190h], eax
add     edi, edi
mov     eax, [esp+84h]
add     edi, [esp+0a8h]
xor     eax, edx
psrldq  xmm1, 8
and     edi, 7ffffffeh
movaps  xmm0, xmm1
mov     [esp+84h], eax
psrldq  xmm0, 4
or      edi, 80000001h
push    0
mov     [esp+198h], eax
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     edi, ecx
mov     [esp+24h], ebx
xor     ecx, ecx
mov     [esp+24h], edx
add     ecx, eax
xorps   xmm0, xmm0
mov     [esp+170h], ecx
adc     edi, 0
add     ecx, [esp+0a8h]
mov     [esp+30h], ecx
mov     eax, ecx
mov     [esp+174h], edi
adc     edi, [esp+88h]
xor     edx, edx
movq    xmm1, qword ptr [esp+170h]
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
shr     ecx, 0ch
mov     [esp+178h], eax
mov     [esp+17ch], ecx
movq    xmm0, qword ptr [esp+178h]
movaps  xmmword ptr [esp+2e0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     edx, ecx
mov     esi, eax
shrd    eax, ecx, 13h
shrd    esi, edx, 14h
shr     ecx, 13h
mov     [esp+1ch], ecx
shr     edx, 14h
mov     [esp+0ech], ecx
mov     ecx, eax
sub     ecx, esi
mov     [esp+80h], eax
mov     [esp+0e8h], eax
mov     eax, [esp+1ch]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a5324b
jb      short loc_37a5322c
cmp     eax, [esp+30h]
jnb     short loc_37a5324b
mov     edx, [esp+80h]
mov     eax, [esp+1ch]
add     edx, 1
mov     [esp+0e8h], edx
adc     eax, 0
mov     [esp+0ech], eax
movq    xmm1, qword ptr [esp+0e8h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+8ch]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+0b0h]
movaps  xmmword ptr [esp+3a0h], xmm1
call    __allmul
mov     edi, [esp+0a8h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0b0h]
mov     [esp+40h], eax
call    __allmul
push    0
push    edi
mov     edi, [esp+8ch]
push    0
push    edi
mov     [esp+68h], eax
mov     [esp+5ch], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+30h]
add     eax, edx
adc     ecx, esi
mov     [esp+30h], ecx
cmp     ecx, esi
ja      short loc_37a532dc
jb      short loc_37a532ca
cmp     eax, edx
jnb     short loc_37a532dc
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+34h], 1
jmp     short loc_37a532f5
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     ecx, [esp+24h]
mov     [esp+34h], ecx
mov     ecx, [esp+20h]
mov     [esp+1ch], ecx
mov     esi, [esp+58h]
xor     ecx, ecx
mov     edx, [esp+4ch]
add     ecx, esi
mov     [esp+58h], ecx
adc     eax, edx
mov     [esp+180h], ecx
mov     [esp+4ch], eax
mov     [esp+184h], eax
cmp     eax, edx
ja      short loc_37a53332
jb      short loc_37a53323
cmp     ecx, esi
jnb     short loc_37a53332
mov     esi, 1
mov     dword ptr [esp+2ch], 0
jmp     short loc_37a53347
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     eax, [esp+24h]
mov     esi, [esp+20h]
mov     [esp+2ch], eax
push    0
push    dword ptr [esp+8ch]
push    0
push    edi
call    __allmul
mov     ecx, eax
movq    xmm0, qword ptr [esp+180h]
add     ecx, [esp+30h]
mov     edi, edx
mov     eax, [esp+0a8h]
adc     edi, 0
mov     edx, [esp+68h]
add     ecx, [esp+1ch]
mov     dword ptr [esp+24h], 0
adc     edi, [esp+34h]
add     ecx, esi
mov     esi, [esp+68h]
adc     edi, [esp+2ch]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+38h], ecx
add     esi, eax
mov     [esp+3ch], edi
mov     eax, [esp+0a8h]
movq    xmm3, qword ptr [esp+38h]
xor     eax, 20h
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
add     edx, eax
movups  xmm2, xmmword ptr [esi]
pxor    xmm2, xmm3
movaps  xmm3, xmmword ptr [esp+300h]
paddq   xmm2, xmm3
xor     edi, [edx+4]
xor     ecx, [edx]
movups  xmm1, xmmword ptr [edx]
paddq   xmm1, xmmword ptr [esp+200h]
mov     [esp+3ch], edi
mov     edi, [esp+10ch]
mov     [esp+38h], ecx
mov     ecx, [edi+eax]
mov     eax, [edi+eax+4]
xor     eax, [esp+4ch]
xor     ecx, [esp+58h]
mov     [esp+94h], eax
mov     eax, [esp+0a8h]
mov     [esp+90h], ecx
xor     eax, 30h
mov     ecx, [esp+68h]
and     eax, 1ffff0h
mov     edi, [esp+3a0h]
movups  xmm0, xmmword ptr [eax+ecx]
paddq   xmm0, xmmword ptr [esp+2f0h]
movups  xmmword ptr [esi], xmm0
xor     esi, esi
movq    xmm0, qword ptr [esp+90h]
movups  xmmword ptr [edx], xmm2
movq    xmm2, qword ptr [esp+190h]
movups  xmmword ptr [eax+ecx], xmm1
xor     ecx, ecx
movq    xmm1, qword ptr [esp+38h]
mov     eax, [esp+44h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+200h]
movq    xmm0, qword ptr [esp+188h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+110h]
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+310h]
movaps  xmmword ptr [esp+300h], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
movaps  xmmword ptr [esp+200h], xmm2
xor     ecx, esi
movd    dword ptr [esp+84h], xmm2
movaps  xmmword ptr [esp+2f0h], xmm3
xor     edx, edi
mov     eax, [esp+0ach]
movaps  xmm1, xmmword ptr [esp+260h]
xor     eax, ecx
shld    esi, edi, 1
mov     [esp+0ach], eax
mov     [esp+1b8h], eax
add     edi, edi
mov     eax, [esp+0c0h]
add     edi, [esp+0b0h]
xor     eax, edx
psrldq  xmm1, 8
and     edi, 7ffffffeh
movaps  xmm0, xmm1
mov     [esp+0c0h], eax
psrldq  xmm0, 4
or      edi, 80000001h
push    0
mov     [esp+1c0h], eax
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     edi, ecx
mov     [esp+24h], ebx
xor     ecx, ecx
mov     [esp+24h], edx
add     ecx, eax
xorps   xmm0, xmm0
mov     [esp+198h], ecx
adc     edi, 0
add     ecx, [esp+0b0h]
mov     [esp+44h], ecx
mov     eax, ecx
mov     [esp+19ch], edi
adc     edi, [esp+70h]
xor     edx, edx
movq    xmm1, qword ptr [esp+198h]
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
shr     ecx, 0ch
mov     [esp+1a0h], eax
mov     [esp+1a4h], ecx
movq    xmm0, qword ptr [esp+1a0h]
movaps  xmmword ptr [esp+310h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     edx, ecx
mov     esi, eax
shrd    eax, ecx, 13h
shrd    esi, edx, 14h
shr     ecx, 13h
mov     [esp+1ch], ecx
shr     edx, 14h
mov     [esp+0f4h], ecx
mov     ecx, eax
sub     ecx, esi
mov     [esp+88h], eax
mov     [esp+0f0h], eax
mov     eax, [esp+1ch]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a53644
jb      short loc_37a53625
cmp     eax, [esp+44h]
jnb     short loc_37a53644
mov     edx, [esp+88h]
mov     eax, [esp+1ch]
add     edx, 1
mov     [esp+0f0h], edx
adc     eax, 0
mov     [esp+0f4h], eax
movq    xmm1, qword ptr [esp+0f0h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+74h]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+0b8h]
movaps  xmmword ptr [esp+3b0h], xmm1
call    __allmul
mov     edi, [esp+0b0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0b8h]
mov     [esp+54h], eax
call    __allmul
push    0
push    edi
mov     edi, [esp+0c8h]
push    0
push    edi
mov     [esp+40h], eax
mov     [esp+68h], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+44h]
add     eax, edx
adc     ecx, esi
mov     [esp+44h], ecx
cmp     ecx, esi
ja      short loc_37a536d2
jb      short loc_37a536c0
cmp     eax, edx
jnb     short loc_37a536d2
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+34h], 1
jmp     short loc_37a536eb
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     ecx, [esp+24h]
mov     [esp+34h], ecx
mov     ecx, [esp+20h]
mov     [esp+1ch], ecx
mov     esi, [esp+30h]
xor     ecx, ecx
mov     edx, [esp+58h]
add     ecx, esi
mov     [esp+30h], ecx
adc     eax, edx
mov     [esp+1a8h], ecx
mov     [esp+58h], eax
mov     [esp+1ach], eax
cmp     eax, edx
ja      short loc_37a53728
jb      short loc_37a53719
cmp     ecx, esi
jnb     short loc_37a53728
mov     esi, 1
mov     dword ptr [esp+2ch], 0
jmp     short loc_37a5373d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     eax, [esp+24h]
mov     esi, [esp+20h]
mov     [esp+2ch], eax
push    0
push    dword ptr [esp+74h]
push    0
push    edi
call    __allmul
mov     ecx, eax
movq    xmm0, qword ptr [esp+1a8h]
add     ecx, [esp+44h]
mov     edi, edx
mov     eax, [esp+0b0h]
adc     edi, 0
mov     edx, [esp+6ch]
add     ecx, [esp+1ch]
mov     dword ptr [esp+24h], 0
adc     edi, [esp+34h]
add     ecx, esi
mov     esi, [esp+6ch]
adc     edi, [esp+2ch]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+38h], ecx
add     esi, eax
mov     [esp+3ch], edi
mov     eax, [esp+0b0h]
movq    xmm3, qword ptr [esp+38h]
xor     eax, 20h
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
add     edx, eax
movups  xmm2, xmmword ptr [esi]
pxor    xmm2, xmm3
movaps  xmm3, xmmword ptr [esp+330h]
paddq   xmm2, xmm3
xor     edi, [edx+4]
xor     ecx, [edx]
movups  xmm1, xmmword ptr [edx]
paddq   xmm1, xmmword ptr [esp+1f0h]
mov     [esp+3ch], edi
mov     edi, [esp+0f8h]
mov     [esp+38h], ecx
mov     ecx, [edi+eax]
mov     eax, [edi+eax+4]
xor     eax, [esp+58h]
xor     ecx, [esp+30h]
mov     [esp+94h], eax
mov     eax, [esp+0b0h]
mov     [esp+90h], ecx
xor     eax, 30h
mov     ecx, [esp+6ch]
and     eax, 1ffff0h
mov     edi, [esp+3b0h]
movups  xmm0, xmmword ptr [eax+ecx]
paddq   xmm0, xmmword ptr [esp+320h]
movups  xmmword ptr [esi], xmm0
xor     esi, esi
movq    xmm0, qword ptr [esp+90h]
movups  xmmword ptr [edx], xmm2
movq    xmm2, qword ptr [esp+1b8h]
movups  xmmword ptr [eax+ecx], xmm1
xor     ecx, ecx
movq    xmm1, qword ptr [esp+38h]
mov     eax, [esp+8ch]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1f0h]
movq    xmm0, qword ptr [esp+1b0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+260h]
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+340h]
movaps  xmmword ptr [esp+330h], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
movaps  xmmword ptr [esp+1f0h], xmm2
xor     ecx, esi
movd    dword ptr [esp+70h], xmm2
movaps  xmmword ptr [esp+320h], xmm3
xor     edx, edi
mov     eax, [esp+0b4h]
movaps  xmm1, xmmword ptr [esp+280h]
xor     eax, ecx
shld    esi, edi, 1
mov     [esp+0b4h], eax
mov     [esp+1e0h], eax
add     edi, edi
mov     eax, [esp+0c4h]
add     edi, [esp+0bch]
xor     eax, edx
psrldq  xmm1, 8
and     edi, 7ffffffeh
movaps  xmm0, xmm1
mov     [esp+0c4h], eax
psrldq  xmm0, 4
or      edi, 80000001h
push    0
mov     [esp+1e8h], eax
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     [esp+24h], ebx
xorps   xmm0, xmm0
mov     [esp+24h], edx
xor     edx, edx
add     edx, eax
mov     [esp+1c0h], edx
adc     ecx, 0
add     edx, [esp+0bch]
mov     [esp+1c4h], ecx
mov     eax, edx
adc     ecx, [esp+74h]
movq    xmm1, qword ptr [esp+1c0h]
mov     [esp+8ch], ecx
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
shr     ecx, 0ch
mov     [esp+1cch], ecx
xor     ecx, ecx
mov     [esp+1c8h], eax
movq    xmm0, qword ptr [esp+1c8h]
movaps  xmmword ptr [esp+340h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
mov     [esp+44h], edx
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
or      ecx, eax
mov     edi, ecx
mov     edx, esi
shrd    ecx, esi, 13h
shrd    edi, edx, 14h
shr     esi, 13h
shr     edx, 14h
mov     eax, esi
mov     [esp+30h], ecx
mov     [esp+10h], ecx
sub     ecx, edi
mov     [esp+14h], esi
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     edi, 0
adc     edx, 0fffffc02h
push    edx
push    edi
push    eax
push    ecx
call    __allmul
cmp     edx, [esp+8ch]
ja      short loc_37a53a1f
jb      short loc_37a53a0d
cmp     eax, [esp+44h]
jnb     short loc_37a53a1f
mov     eax, [esp+30h]
add     eax, 1
mov     [esp+10h], eax
adc     esi, 0
mov     [esp+14h], esi
movq    xmm1, qword ptr [esp+10h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+78h]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+0c0h]
movaps  xmmword ptr [esp+3c0h], xmm1
call    __allmul
mov     edi, [esp+0bch]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0c0h]
mov     [esp+9ch], eax
call    __allmul
push    0
push    edi
mov     edi, [esp+0cch]
push    0
push    edi
mov     [esp+54h], eax
mov     [esp+40h], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+8ch]
add     eax, edx
adc     ecx, esi
mov     [esp+8ch], ecx
cmp     ecx, esi
ja      short loc_37a53ab3
jb      short loc_37a53aa1
cmp     eax, edx
jnb     short loc_37a53ab3
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+34h], 1
jmp     short loc_37a53acc
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     ecx, [esp+24h]
mov     [esp+34h], ecx
mov     ecx, [esp+20h]
mov     [esp+1ch], ecx
mov     esi, [esp+44h]
xor     ecx, ecx
mov     edx, [esp+30h]
add     ecx, esi
mov     [esp+44h], ecx
adc     eax, edx
mov     [esp+1d0h], ecx
mov     [esp+30h], eax
mov     [esp+1d4h], eax
cmp     eax, edx
ja      short loc_37a53b09
jb      short loc_37a53afa
cmp     ecx, esi
jnb     short loc_37a53b09
mov     esi, 1
mov     dword ptr [esp+2ch], 0
jmp     short loc_37a53b1e
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     eax, [esp+24h]
mov     esi, [esp+20h]
mov     [esp+2ch], eax
push    0
push    dword ptr [esp+78h]
push    0
push    edi
call    __allmul
mov     ecx, eax
movq    xmm0, qword ptr [esp+1d0h]
add     ecx, [esp+8ch]
mov     edi, edx
mov     eax, [esp+0bch]
adc     edi, 0
mov     edx, [esp+9ch]
add     ecx, [esp+1ch]
movaps  xmm4, xmmword ptr [esp+360h]
adc     edi, [esp+34h]
add     ecx, esi
mov     esi, [esp+9ch]
adc     edi, [esp+2ch]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+38h], ecx
add     esi, eax
mov     [esp+3ch], edi
mov     eax, [esp+0bch]
movq    xmm3, qword ptr [esp+38h]
xor     eax, 20h
and     eax, 1ffff0h
movaps  xmm5, xmmword ptr [esp+200h]
add     edx, eax
movups  xmm2, xmmword ptr [esi]
movaps  xmm6, xmmword ptr [esp+210h]
movaps  xmm7, xmmword ptr [esp+220h]
punpcklqdq xmm3, xmm0
xor     edi, [edx+4]
pxor    xmm2, xmm3
xor     ecx, [edx]
paddq   xmm2, xmm4
movups  xmm1, xmmword ptr [edx]
paddq   xmm1, xmmword ptr [esp+270h]
mov     [esp+3ch], edi
mov     edi, [esp+100h]
movq    xmm3, qword ptr [esp+1e0h]
mov     [esp+38h], ecx
mov     dword ptr [esp+24h], 0
mov     ecx, [edi+eax]
mov     eax, [edi+eax+4]
xor     eax, [esp+30h]
xor     ecx, [esp+44h]
mov     [esp+94h], eax
mov     eax, [esp+0bch]
mov     edi, [esp+84h]
xor     eax, 30h
mov     [esp+90h], ecx
and     eax, 1ffff0h
sub     dword ptr [esp+0d4h], 1
mov     ecx, [esp+9ch]
movups  xmm0, xmmword ptr [eax+ecx]
paddq   xmm0, xmmword ptr [esp+350h]
movups  xmmword ptr [esi], xmm0
movq    xmm0, qword ptr [esp+90h]
mov     esi, [esp+7ch]
movups  xmmword ptr [edx], xmm2
mov     edx, [esp+40h]
movups  xmmword ptr [eax+ecx], xmm1
movq    xmm1, qword ptr [esp+38h]
mov     eax, [esp+104h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+1d8h]
paddq   xmm1, xmmword ptr [esp+270h]
punpcklqdq xmm3, xmm0
movaps  xmm0, xmmword ptr [esp+280h]
pxor    xmm3, xmm1
movd    ecx, xmm3
movaps  xmmword ptr [esp+350h], xmm4
movaps  xmm4, xmmword ptr [esp+1f0h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+270h], xmm3
mov     [esp+74h], ecx
movaps  xmmword ptr [esp+360h], xmm0
jnz     loc_37a52480
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a7ed80
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 5
jb      short loc_37a53cc2
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 254h
push    ebx
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    loc_37a7f150
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 3
jb      short loc_37a53d27
mov     eax, [ebp+14h]
xorps   xmm0, xmm0
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     ecx, [edx+0e0h]
movq    xmm1, qword ptr [edx+60h]
mov     eax, [edi+0e0h]
mov     [esp+70h], ecx
mov     ecx, [esi+0e0h]
mov     [esp+60h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+18h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
mov     [esp+74h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+1ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
movaps  xmmword ptr [esp+1a0h], xmm1
movq    xmm1, qword ptr [edx+68h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+1ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
movaps  xmmword ptr [esp+220h], xmm1
movq    xmm1, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+1ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [edx+58h]
xor     ecx, [edx+48h]
mov     [esp+1ch], eax
mov     eax, [edx+5ch]
xor     eax, [edx+4ch]
movaps  xmmword ptr [esp+160h], xmm1
movq    xmm1, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [edx+50h]
xor     ecx, [edx+40h]
mov     [esp+1ch], eax
mov     eax, [edx+54h]
xor     eax, [edx+44h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
movaps  xmmword ptr [esp+170h], xmm1
mov     [esp+1ch], eax
movq    xmm1, qword ptr [esp+18h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
punpcklqdq xmm1, xmm0
xorps   xmm0, xmm0
movaps  xmmword ptr [esp+1b0h], xmm1
movq    xmm1, qword ptr [esi+60h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+1c0h], xmm1
movq    xmm1, qword ptr [esi+68h]
mov     [esp+18h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
punpcklqdq xmm1, xmm0
mov     [esp+1ch], eax
movq    xmm0, qword ptr [esp+18h]
movaps  xmmword ptr [esp+230h], xmm1
mov     eax, [esi+24h]
xor     eax, [esi+4]
mov     [esp+18h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+1ch], eax
movq    xmm1, qword ptr [esp+18h]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+18h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+1ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [esi+58h]
xor     ecx, [esi+48h]
mov     [esp+1ch], eax
mov     eax, [esi+5ch]
xor     eax, [esi+4ch]
movaps  xmmword ptr [esp+150h], xmm1
movq    xmm1, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [esi+50h]
xor     ecx, [esi+40h]
mov     [esp+1ch], eax
mov     eax, [esi+54h]
xor     eax, [esi+44h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+1ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
movaps  xmmword ptr [esp+1e0h], xmm1
movq    xmm1, qword ptr [esp+18h]
punpcklqdq xmm1, xmm0
xorps   xmm0, xmm0
mov     [esp+18h], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+1ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
movaps  xmmword ptr [esp+1d0h], xmm1
movq    xmm1, qword ptr [edi+60h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+1f0h], xmm1
movq    xmm1, qword ptr [edi+68h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+1ch], eax
movq    xmm2, qword ptr [esp+18h]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+18h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+1ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+18h]
mov     [esp+18h], ecx
mov     ecx, [edi+58h]
xor     ecx, [edi+48h]
mov     [esp+1ch], eax
movq    xmm3, qword ptr [esp+18h]
mov     eax, [edi+5ch]
punpcklqdq xmm3, xmm0
movaps  xmmword ptr [esp+240h], xmm1
movaps  xmmword ptr [esp+190h], xmm2
movaps  xmmword ptr [esp+210h], xmm3
xor     eax, [edi+4ch]
mov     [esp+18h], ecx
mov     ecx, [edi+50h]
xor     ecx, [edi+40h]
mov     [esp+1ch], eax
mov     eax, [edi+54h]
movq    xmm0, qword ptr [esp+18h]
xor     eax, [edi+44h]
mov     [esp+18h], ecx
mov     [esp+1ch], eax
movq    xmm1, qword ptr [esp+18h]
punpcklqdq xmm1, xmm0
push    300h
push    100h
movaps  xmmword ptr [esp+208h], xmm1
call    __control87
mov     esi, [esp+78h]
add     esp, 8
mov     eax, [esp+60h]
add     esi, 8
mov     edi, [esp+74h]
add     eax, 8
movaps  xmm5, xmmword ptr [esp+190h]
movaps  xmm6, xmmword ptr [esp+160h]
mov     ecx, [esp+150h]
movd    edx, xmm5
mov     [esp+0bch], eax
lea     eax, [edi+8]
mov     dword ptr [esp+3ch], 0
movd    dword ptr [esp+44h], xmm6
mov     dword ptr [esp+9ch], 0
mov     [esp+64h], ecx
mov     [esp+28h], edx
mov     dword ptr [esp+3ch], 0
mov     [esp+0b8h], esi
mov     [esp+0c0h], eax
mov     dword ptr [esp+0a4h], 80000h
nop     word ptr [eax+eax+00000000h]
mov     eax, [esp+44h]
and     ecx, 1ffff0h
add     ecx, [esp+60h]
and     eax, 1ffff0h
add     eax, [esp+70h]
and     edx, 1ffff0h
mov     [esp+34h], eax
add     edx, edi
mov     [esp+68h], ecx
movups  xmm3, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [eax]
movups  xmm4, xmmword ptr [edx]
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
mov     [esp+78h], edx
pshufd  xmm0, xmm1, 0aah
mov     eax, ecx
mov     [esp+24h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
movd    edx, xmm0
pshufd  xmm0, xmm1, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+2ch], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+24h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+24h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+2ch]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+24h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movd    xmm1, edx
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm7, ecx
punpckldq xmm7, xmm0
movaps  xmmword ptr [esp+140h], xmm7
mov     edx, [esp+70h]
mov     esi, [esp+44h]
movaps  xmm0, xmmword ptr [esp+140h]
and     esi, 1ffff0h
punpckldq xmm1, xmm2
mov     ecx, esi
punpckldq xmm0, xmm1
xor     ecx, 10h
mov     eax, esi
pxor    xmm0, xmm6
xor     eax, 20h
movaps  xmmword ptr [esp+140h], xmm0
xor     esi, 30h
movups  xmm2, xmmword ptr [ecx+edx]
paddq   xmm2, xmmword ptr [esp+170h]
movups  xmm1, xmmword ptr [eax+edx]
movups  xmm0, xmmword ptr [esi+edx]
paddq   xmm1, xmm6
paddq   xmm0, xmmword ptr [esp+1b0h]
movups  xmmword ptr [ecx+edx], xmm0
movups  xmmword ptr [eax+edx], xmm2
mov     eax, [esp+34h]
movaps  xmm0, xmmword ptr [esp+140h]
pxor    xmm0, xmmword ptr [esp+170h]
movups  xmmword ptr [esi+edx], xmm1
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm3, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+24h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+2ch], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+24h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+24h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+2ch]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+24h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
mov     esi, [esp+64h]
shr     eax, 18h
and     esi, 1ffff0h
movd    xmm1, edx
mov     edx, [esp+60h]
movd    xmm2, edi
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
punpckldq xmm1, xmm2
mov     dword ptr [esp+3ch], 0
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, esi
xor     eax, 20h
movd    xmm6, ecx
mov     ecx, esi
punpckldq xmm6, xmm0
xor     esi, 30h
xor     ecx, 10h
punpckldq xmm6, xmm1
movups  xmm1, xmmword ptr [eax+edx]
pxor    xmm6, xmmword ptr [esp+150h]
movups  xmm0, xmmword ptr [esi+edx]
movups  xmm2, xmmword ptr [ecx+edx]
paddq   xmm0, xmmword ptr [esp+1d0h]
movups  xmmword ptr [ecx+edx], xmm0
movaps  xmm0, xmmword ptr [esp+1e0h]
paddq   xmm0, xmm2
movaps  xmmword ptr [esp+180h], xmm6
movups  xmmword ptr [eax+edx], xmm0
movaps  xmm0, xmmword ptr [esp+150h]
mov     eax, [esp+68h]
paddq   xmm0, xmm1
movups  xmmword ptr [esi+edx], xmm0
movaps  xmm0, xmmword ptr [esp+180h]
pxor    xmm0, xmmword ptr [esp+1e0h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm4, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+24h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm4
pshufd  xmm0, xmm4, 0ffh
mov     [esp+2ch], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+24h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
movd    xmm2, edi
mov     dword ptr [esp+3ch], 0
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+24h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+2ch]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+24h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
mov     edx, [esp+28h]
xor     ecx, ds:dword_37aff940[eax*4]
and     edx, 1ffff0h
movd    eax, xmm0
movd    xmm0, esi
mov     esi, [esp+74h]
shr     eax, 18h
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, edx
xor     eax, 20h
movd    xmm3, ecx
mov     ecx, edx
xor     ecx, 10h
punpckldq xmm3, xmm0
xor     edx, 30h
punpckldq xmm3, xmm1
movups  xmm1, xmmword ptr [eax+esi]
pxor    xmm3, xmm5
paddq   xmm1, xmm5
movaps  xmmword ptr [esp+250h], xmm3
movups  xmm2, xmmword ptr [ecx+esi]
movups  xmm0, xmmword ptr [edx+esi]
paddq   xmm0, xmmword ptr [esp+200h]
paddq   xmm2, xmmword ptr [esp+210h]
movups  xmmword ptr [ecx+esi], xmm0
movaps  xmm0, xmm3
pxor    xmm0, xmmword ptr [esp+210h]
xor     ecx, ecx
movups  xmmword ptr [eax+esi], xmm2
mov     eax, [esp+78h]
movaps  xmm2, xmmword ptr [esp+140h]
movups  xmmword ptr [edx+esi], xmm1
movaps  xmm1, xmmword ptr [esp+180h]
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm2
movd    eax, xmm2
psrldq  xmm0, 4
movd    dword ptr [esp+9ch], xmm0
movaps  xmm0, xmm1
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+48h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+70h]
mov     [esp+28h], ecx
movd    dword ptr [esp+64h], xmm0
mov     eax, [ecx+8]
mov     [esp+0e0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0e4h], eax
movd    eax, xmm1
or      ecx, eax
mov     [esp+80h], ecx
and     ecx, 1ffff0h
add     ecx, [esp+60h]
mov     [esp+6ch], ecx
mov     eax, [ecx]
mov     edi, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
movaps  xmm0, xmm3
movaps  xmm1, xmmword ptr [esp+1a0h]
mov     [esp+108h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+10ch], eax
movd    eax, xmm3
psrldq  xmm0, 4
movd    dword ptr [esp+78h], xmm0
movaps  xmm0, xmm1
or      ecx, eax
mov     [esp+90h], edi
mov     [esp+24h], ecx
and     ecx, 1ffff0h
add     ecx, esi
psrldq  xmm0, 4
mov     [esp+0c4h], ecx
xor     esi, esi
movd    edx, xmm0
push    0
mov     eax, [ecx]
mov     edi, [ecx+4]
mov     [esp+88h], eax
mov     eax, [ecx+8]
mov     [esp+134h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+138h], eax
movd    eax, xmm1
movaps  xmm1, xmm2
mov     [esp+98h], edi
mov     edi, [esp+224h]
xor     edx, edi
or      ecx, eax
psrldq  xmm1, 8
mov     eax, [esp+2ch]
xor     ecx, esi
shld    esi, edi, 1
movaps  xmm0, xmm1
add     edi, edi
psrldq  xmm0, 4
xor     ecx, [eax]
xor     edx, [eax+4]
add     edi, [esp+4ch]
mov     [esp+38h], ecx
and     edi, 7ffffffeh
mov     [esp+0ech], ecx
or      edi, 80000001h
mov     [esp+30h], edx
mov     [esp+0f0h], edx
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     edi, ecx
mov     [esp+3ch], ebx
xor     ecx, ecx
mov     [esp+3ch], edx
add     ecx, eax
xorps   xmm0, xmm0
mov     [esp+0d0h], ecx
adc     edi, 0
add     ecx, [esp+48h]
mov     [esp+0d4h], edi
mov     eax, ecx
adc     edi, [esp+9ch]
movq    xmm1, qword ptr [esp+0d0h]
mov     [esp+4ch], ecx
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
shr     ecx, 0ch
movaps  xmmword ptr [esp+1a0h], xmm1
xorps   xmm1, xmm1
mov     [esp+0c8h], eax
mov     [esp+0cch], ecx
movq    xmm0, qword ptr [esp+0c8h]
xor     edx, edx
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     edx, ecx
mov     esi, eax
shrd    eax, ecx, 13h
shrd    esi, edx, 14h
shr     ecx, 13h
mov     [esp+68h], ecx
shr     edx, 14h
mov     [esp+0ach], ecx
mov     ecx, eax
mov     [esp+44h], eax
sub     ecx, esi
mov     [esp+0a8h], eax
mov     eax, [esp+68h]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a54852
jb      short loc_37a54836
cmp     eax, [esp+4ch]
jnb     short loc_37a54852
mov     edx, [esp+44h]
mov     eax, [esp+68h]
add     edx, 1
mov     [esp+0a8h], edx
adc     eax, 0
mov     [esp+0ach], eax
mov     edi, [esp+9ch]
xorps   xmm0, xmm0
movq    xmm1, qword ptr [esp+0a8h]
push    0
push    edi
push    0
push    dword ptr [esp+40h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+230h], xmm1
call    __allmul
push    0
push    dword ptr [esp+4ch]
mov     [esp+54h], eax
mov     esi, edx
push    0
push    dword ptr [esp+40h]
call    __allmul
push    0
push    dword ptr [esp+4ch]
mov     [esp+4ch], eax
push    0
push    dword ptr [esp+38h]
mov     [esp+40h], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+4ch]
add     eax, edx
adc     ecx, esi
mov     [esp+4ch], ecx
cmp     ecx, esi
ja      short loc_37a548d9
jb      short loc_37a548c7
cmp     eax, edx
jnb     short loc_37a548d9
mov     dword ptr [esp+34h], 0
mov     dword ptr [esp+68h], 1
jmp     short loc_37a548f2
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     ecx, [esp+5ch]
mov     [esp+68h], ecx
mov     ecx, [esp+58h]
mov     [esp+34h], ecx
mov     esi, [esp+44h]
xor     ecx, ecx
mov     edx, [esp+30h]
add     ecx, esi
mov     [esp+58h], ecx
adc     eax, edx
mov     [esp+0d8h], ecx
mov     [esp+30h], eax
mov     [esp+0dch], eax
cmp     eax, edx
ja      short loc_37a5492f
jb      short loc_37a54920
cmp     ecx, esi
jnb     short loc_37a5492f
mov     esi, 1
mov     dword ptr [esp+44h], 0
jmp     short loc_37a54944
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     eax, [esp+3ch]
mov     esi, [esp+38h]
mov     [esp+44h], eax
push    0
push    edi
push    0
push    dword ptr [esp+38h]
call    __allmul
mov     ecx, eax
movq    xmm0, qword ptr [esp+0d8h]
add     ecx, [esp+4ch]
mov     edi, edx
mov     eax, [esp+48h]
adc     edi, 0
mov     edx, [esp+70h]
add     ecx, [esp+34h]
mov     dword ptr [esp+9ch], 0
adc     edi, [esp+68h]
add     ecx, esi
mov     esi, [esp+70h]
adc     edi, [esp+44h]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+50h], ecx
add     esi, eax
mov     [esp+54h], edi
mov     eax, [esp+48h]
movq    xmm3, qword ptr [esp+50h]
xor     eax, 20h
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
add     edx, eax
movups  xmm2, xmmword ptr [esi]
pxor    xmm2, xmm3
movaps  xmm3, xmmword ptr [esp+170h]
paddq   xmm2, xmm3
xor     edi, [edx+4]
xor     ecx, [edx]
movups  xmm1, xmmword ptr [edx]
paddq   xmm1, xmmword ptr [esp+160h]
mov     [esp+54h], edi
mov     edi, [esp+0b8h]
mov     [esp+50h], ecx
mov     ecx, [eax+edi]
mov     eax, [eax+edi+4]
xor     eax, [esp+30h]
xor     ecx, [esp+58h]
mov     [esp+8ch], eax
mov     eax, [esp+48h]
mov     [esp+88h], ecx
xor     eax, 30h
mov     ecx, [esp+70h]
and     eax, 1ffff0h
mov     edi, [esp+230h]
movups  xmm0, xmmword ptr [eax+ecx]
paddq   xmm0, xmmword ptr [esp+1b0h]
movups  xmmword ptr [esi], xmm0
xor     esi, esi
movq    xmm0, qword ptr [esp+88h]
movups  xmmword ptr [edx], xmm2
movq    xmm2, qword ptr [esp+0e8h]
movups  xmmword ptr [eax+ecx], xmm1
xor     ecx, ecx
movq    xmm1, qword ptr [esp+50h]
mov     eax, [esp+28h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+160h]
movq    xmm0, qword ptr [esp+0e0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+140h]
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+1c0h]
movaps  xmmword ptr [esp+170h], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
movaps  xmmword ptr [esp+160h], xmm2
xor     ecx, esi
movd    dword ptr [esp+44h], xmm2
movaps  xmmword ptr [esp+1b0h], xmm3
xor     edx, edi
mov     eax, [esp+7ch]
movaps  xmm1, xmmword ptr [esp+180h]
xor     eax, ecx
shld    esi, edi, 1
mov     [esp+7ch], eax
mov     [esp+110h], eax
add     edi, edi
mov     eax, [esp+90h]
add     edi, [esp+80h]
xor     eax, edx
psrldq  xmm1, 8
and     edi, 7ffffffeh
movaps  xmm0, xmm1
mov     [esp+90h], eax
psrldq  xmm0, 4
or      edi, 80000001h
push    0
mov     [esp+118h], eax
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     edi, [esp+64h]
xorps   xmm0, xmm0
mov     [esp+3ch], ebx
mov     [esp+3ch], edx
xor     edx, edx
add     edx, eax
mov     eax, [esp+80h]
mov     [esp+0f0h], edx
adc     ecx, 0
add     eax, edx
mov     [esp+0f4h], ecx
movq    xmm1, qword ptr [esp+0f0h]
adc     edi, ecx
mov     [esp+58h], eax
mov     ecx, edi
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
xor     edx, edx
shr     ecx, 0ch
mov     [esp+0f8h], eax
mov     [esp+0fch], ecx
movq    xmm0, qword ptr [esp+0f8h]
movaps  xmmword ptr [esp+1c0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    ecx, xmm0
or      edx, eax
mov     eax, edx
mov     edx, ecx
mov     esi, eax
shrd    eax, ecx, 13h
shrd    esi, edx, 14h
shr     ecx, 13h
mov     [esp+28h], ecx
shr     edx, 14h
mov     [esp+0b4h], ecx
mov     ecx, eax
sub     ecx, esi
mov     [esp+48h], eax
mov     [esp+0b0h], eax
mov     eax, [esp+28h]
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     esi, 0
adc     edx, 0fffffc02h
push    edx
push    esi
push    eax
push    ecx
call    __allmul
cmp     edx, edi
ja      short loc_37a54c29
jb      short loc_37a54c0d
cmp     eax, [esp+58h]
jnb     short loc_37a54c29
mov     edx, [esp+48h]
mov     eax, [esp+28h]
add     edx, 1
mov     [esp+0b0h], edx
adc     eax, 0
mov     [esp+0b4h], eax
movq    xmm1, qword ptr [esp+0b0h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+68h]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+88h]
movaps  xmmword ptr [esp+240h], xmm1
call    __allmul
mov     edi, [esp+80h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+88h]
mov     [esp+68h], eax
call    __allmul
push    0
push    edi
mov     edi, [esp+98h]
push    0
push    edi
mov     [esp+40h], eax
mov     [esp+5ch], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+58h]
add     eax, edx
adc     ecx, esi
mov     [esp+58h], ecx
cmp     ecx, esi
ja      short loc_37a54cb7
jb      short loc_37a54ca5
cmp     eax, edx
jnb     short loc_37a54cb7
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+2ch], 1
jmp     short loc_37a54cd0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+2ch], ecx
mov     ecx, [esp+38h]
mov     [esp+28h], ecx
mov     esi, [esp+30h]
xor     ecx, ecx
mov     edx, [esp+4ch]
add     ecx, esi
mov     [esp+30h], ecx
adc     eax, edx
mov     [esp+100h], ecx
mov     [esp+4ch], eax
mov     [esp+104h], eax
cmp     eax, edx
ja      short loc_37a54d0d
jb      short loc_37a54cfe
cmp     ecx, esi
jnb     short loc_37a54d0d
mov     esi, 1
mov     dword ptr [esp+34h], 0
jmp     short loc_37a54d22
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     eax, [esp+3ch]
mov     esi, [esp+38h]
mov     [esp+34h], eax
push    0
push    dword ptr [esp+68h]
push    0
push    edi
call    __allmul
mov     ecx, eax
movq    xmm0, qword ptr [esp+100h]
add     ecx, [esp+58h]
mov     edi, edx
mov     eax, [esp+80h]
adc     edi, 0
mov     edx, [esp+60h]
add     ecx, [esp+28h]
mov     dword ptr [esp+3ch], 0
adc     edi, [esp+2ch]
add     ecx, esi
mov     esi, [esp+60h]
adc     edi, [esp+34h]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+50h], ecx
add     esi, eax
mov     [esp+54h], edi
mov     eax, [esp+80h]
movq    xmm3, qword ptr [esp+50h]
xor     eax, 20h
and     eax, 1ffff0h
punpcklqdq xmm3, xmm0
add     edx, eax
movups  xmm2, xmmword ptr [esi]
pxor    xmm2, xmm3
movaps  xmm3, xmmword ptr [esp+1e0h]
paddq   xmm2, xmm3
xor     edi, [edx+4]
xor     ecx, [edx]
movups  xmm1, xmmword ptr [edx]
paddq   xmm1, xmmword ptr [esp+150h]
mov     [esp+54h], edi
mov     edi, [esp+0bch]
mov     [esp+50h], ecx
mov     ecx, [edi+eax]
mov     eax, [edi+eax+4]
xor     eax, [esp+4ch]
xor     ecx, [esp+30h]
mov     [esp+8ch], eax
mov     eax, [esp+80h]
mov     [esp+88h], ecx
xor     eax, 30h
mov     ecx, [esp+60h]
and     eax, 1ffff0h
mov     edi, [esp+240h]
movups  xmm0, xmmword ptr [eax+ecx]
paddq   xmm0, xmmword ptr [esp+1d0h]
movups  xmmword ptr [esi], xmm0
xor     esi, esi
movq    xmm0, qword ptr [esp+88h]
movups  xmmword ptr [edx], xmm2
movq    xmm2, qword ptr [esp+110h]
movups  xmmword ptr [eax+ecx], xmm1
xor     ecx, ecx
movq    xmm1, qword ptr [esp+50h]
mov     eax, [esp+6ch]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+150h]
movq    xmm0, qword ptr [esp+108h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+180h]
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+1f0h]
movaps  xmmword ptr [esp+1e0h], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
movaps  xmmword ptr [esp+150h], xmm2
xor     ecx, esi
movd    dword ptr [esp+64h], xmm2
movaps  xmmword ptr [esp+1d0h], xmm3
xor     edx, edi
mov     eax, [esp+84h]
movaps  xmm1, xmmword ptr [esp+250h]
xor     eax, ecx
shld    esi, edi, 1
mov     [esp+84h], eax
mov     [esp+138h], eax
add     edi, edi
mov     eax, [esp+94h]
add     edi, [esp+24h]
xor     eax, edx
psrldq  xmm1, 8
and     edi, 7ffffffeh
movaps  xmm0, xmm1
mov     [esp+94h], eax
psrldq  xmm0, 4
or      edi, 80000001h
push    0
mov     [esp+140h], eax
xor     edx, edx
movd    ecx, xmm0
movd    eax, xmm1
push    edi
push    ecx
or      edx, eax
push    edx
call    __aulldvrm
mov     [esp+3ch], ebx
xorps   xmm0, xmm0
mov     [esp+3ch], edx
xor     edx, edx
add     edx, eax
mov     eax, [esp+24h]
mov     [esp+118h], edx
adc     ecx, 0
add     eax, edx
mov     edx, [esp+78h]
adc     edx, ecx
mov     [esp+11ch], ecx
movq    xmm1, qword ptr [esp+118h]
mov     ecx, edx
mov     [esp+58h], eax
shrd    eax, ecx, 0ch
punpcklqdq xmm1, xmm0
shr     ecx, 0ch
mov     [esp+124h], ecx
xor     ecx, ecx
mov     [esp+120h], eax
movq    xmm0, qword ptr [esp+120h]
movaps  xmmword ptr [esp+1f0h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm0, xmm1
paddq   xmm0, ds:xmmword_37b03bc0
sqrtsd  xmm1, xmm0
mov     [esp+6ch], edx
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
or      ecx, eax
mov     edi, ecx
mov     edx, esi
shrd    ecx, esi, 13h
shrd    edi, edx, 14h
shr     esi, 13h
shr     edx, 14h
mov     eax, esi
mov     [esp+30h], ecx
mov     [esp+18h], ecx
sub     ecx, edi
mov     [esp+1ch], esi
sbb     eax, edx
add     ecx, 1
adc     eax, 0fffffc02h
add     edi, 0
adc     edx, 0fffffc02h
push    edx
push    edi
push    eax
push    ecx
call    __allmul
cmp     edx, [esp+6ch]
ja      short loc_37a54ff9
jb      short loc_37a54fe7
cmp     eax, [esp+58h]
jnb     short loc_37a54ff9
mov     eax, [esp+30h]
add     eax, 1
mov     [esp+18h], eax
adc     esi, 0
mov     [esp+1ch], esi
movq    xmm1, qword ptr [esp+18h]
xorps   xmm0, xmm0
push    0
push    dword ptr [esp+7ch]
punpcklqdq xmm1, xmm0
push    0
push    dword ptr [esp+90h]
movaps  xmmword ptr [esp+250h], xmm1
call    __allmul
mov     edi, [esp+24h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+90h]
mov     [esp+7ch], eax
call    __allmul
push    0
push    edi
mov     edi, [esp+9ch]
push    0
push    edi
mov     [esp+68h], eax
mov     [esp+40h], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+6ch]
add     eax, edx
adc     ecx, esi
mov     [esp+6ch], ecx
cmp     ecx, esi
ja      short loc_37a55081
jb      short loc_37a5506f
cmp     eax, edx
jnb     short loc_37a55081
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+2ch], 1
jmp     short loc_37a5509a
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+2ch], ecx
mov     ecx, [esp+38h]
mov     [esp+28h], ecx
mov     esi, [esp+58h]
xor     ecx, ecx
mov     edx, [esp+30h]
add     ecx, esi
mov     [esp+58h], ecx
adc     eax, edx
mov     [esp+128h], ecx
mov     [esp+30h], eax
mov     [esp+12ch], eax
cmp     eax, edx
ja      short loc_37a550d7
jb      short loc_37a550c8
cmp     ecx, esi
jnb     short loc_37a550d7
mov     esi, 1
mov     dword ptr [esp+34h], 0
jmp     short loc_37a550ec
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     eax, [esp+3ch]
mov     esi, [esp+38h]
mov     [esp+34h], eax
push    0
push    dword ptr [esp+7ch]
push    0
push    edi
call    __allmul
mov     ecx, eax
movq    xmm0, qword ptr [esp+128h]
add     ecx, [esp+6ch]
mov     edi, edx
mov     eax, [esp+24h]
adc     edi, 0
mov     edx, [esp+74h]
add     ecx, [esp+28h]
movq    xmm5, qword ptr [esp+138h]
adc     edi, [esp+2ch]
add     ecx, esi
mov     esi, [esp+74h]
adc     edi, [esp+34h]
xor     eax, 10h
and     eax, 1ffff0h
mov     [esp+50h], ecx
add     esi, eax
mov     [esp+54h], edi
mov     eax, [esp+24h]
movq    xmm3, qword ptr [esp+50h]
xor     eax, 20h
and     eax, 1ffff0h
movaps  xmm7, xmmword ptr [esp+250h]
add     edx, eax
movups  xmm2, xmmword ptr [esi]
movaps  xmm6, xmmword ptr [esp+160h]
punpcklqdq xmm3, xmm0
pxor    xmm2, xmm3
mov     dword ptr [esp+3ch], 0
xor     edi, [edx+4]
xor     ecx, [edx]
movups  xmm1, xmmword ptr [edx]
movaps  xmm3, xmmword ptr [esp+210h]
paddq   xmm1, xmmword ptr [esp+190h]
paddq   xmm2, xmm3
mov     [esp+54h], edi
mov     edi, [esp+0c0h]
mov     [esp+50h], ecx
movaps  xmmword ptr [esp+210h], xmm7
mov     ecx, [edi+eax]
mov     eax, [edi+eax+4]
xor     eax, [esp+30h]
mov     edi, [esp+74h]
xor     ecx, [esp+58h]
mov     [esp+8ch], eax
mov     eax, [esp+24h]
xor     eax, 30h
mov     [esp+88h], ecx
mov     ecx, [esp+64h]
and     eax, 1ffff0h
sub     dword ptr [esp+0a4h], 1
movups  xmm0, xmmword ptr [eax+edi]
paddq   xmm0, xmmword ptr [esp+200h]
movups  xmmword ptr [esi], xmm0
movq    xmm0, qword ptr [esp+88h]
movups  xmmword ptr [edx], xmm2
movups  xmmword ptr [eax+edi], xmm1
movq    xmm1, qword ptr [esp+50h]
mov     eax, [esp+0c4h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+190h]
movq    xmm0, qword ptr [esp+130h]
punpcklqdq xmm5, xmm0
pxor    xmm5, xmm1
movups  xmmword ptr [eax], xmm1
movd    edx, xmm5
movaps  xmmword ptr [esp+190h], xmm5
movaps  xmmword ptr [esp+200h], xmm3
mov     [esp+28h], edx
jnz     loc_37a540c0
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a7fac0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a55258
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
stos    dword ptr es:[di]
wait
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 88h
mov     edx, [ebp+0ch]
push    esi
mov     esi, [ebp+14h]
push    edi
push    ecx
mov     ecx, [ebp+8]
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    sub_37a80380
mov     esi, [esi]
mov     [esp+6ch], esi
mov     dword ptr [esp+40h], 40000h
mov     ecx, [esi+24h]
xor     ecx, [esi+4]
mov     eax, [esi+20h]
xor     eax, [esi]
mov     edi, [esi+0e0h]
mov     [esp+30h], eax
mov     [esp+34h], ecx
mov     [esp+70h], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+74h], ecx
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     [esp+38h], eax
mov     [esp+3ch], ecx
mov     [esp+78h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+7ch], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+60h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+64h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
movq    xmm0, qword ptr [esp+60h]
mov     esi, [esp+30h]
mov     [esp+64h], eax
lea     eax, [edi+8]
mov     [esp+60h], ecx
movq    xmm2, qword ptr [esp+60h]
mov     [esp+68h], edi
punpcklqdq xmm2, xmm0
mov     [esp+44h], eax
movq    xmm0, qword ptr [esp+78h]
mov     eax, esi
movq    xmm1, qword ptr [esp+70h]
and     eax, 0ffff0h
punpcklqdq xmm1, xmm0
xor     ecx, ecx
push    0
movups  xmm3, xmmword ptr [eax+edi]
aesenc  xmm3, xmm1
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+84h], xmm3
pxor    xmm0, xmm2
movups  xmmword ptr [eax+edi], xmm0
movaps  xmm0, xmm3
movd    eax, xmm3
psrldq  xmm0, 4
movd    edx, xmm0
or      ecx, eax
mov     eax, ecx
mov     [esp+1ch], ecx
and     eax, 0ffff0h
mov     [esp+50h], edx
push    edx
push    0
lea     ecx, [eax+edi]
add     eax, [esp+50h]
mov     edi, [ecx]
mov     [esp+60h], ecx
mov     ecx, [ecx+4]
mov     [esp+20h], ecx
mov     ecx, [eax]
mov     [esp+64h], eax
mov     eax, [eax+4]
push    edi
mov     [esp+40h], edi
mov     [esp+6ch], ecx
mov     [esp+70h], eax
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+30h], eax
mov     edi, edx
push    0
push    dword ptr [esp+3ch]
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+20h]
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+28h]
add     eax, ecx
adc     edx, edi
mov     [esp+50h], edx
cmp     edx, edi
ja      short loc_37a595a3
jb      short loc_37a59591
cmp     eax, ecx
jnb     short loc_37a595a3
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a595bc
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     ecx, [esp+20h]
xor     edi, edi
mov     edx, [esp+48h]
add     edi, ecx
adc     eax, edx
mov     [esp+48h], eax
cmp     eax, edx
ja      short loc_37a595ea
jb      short loc_37a595d8
cmp     edi, ecx
jnb     short loc_37a595ea
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a59603
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     eax, [esp+24h]
mov     [esp+28h], eax
mov     eax, [esp+20h]
mov     [esp+20h], eax
push    0
push    dword ptr [esp+50h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+50h]
mov     ecx, [esp+38h]
adc     edx, 0
movaps  xmm2, xmmword ptr [esp+80h]
add     eax, [esp+18h]
adc     edx, [esp+1ch]
add     eax, [esp+20h]
adc     edx, [esp+28h]
add     esi, eax
mov     eax, [esp+34h]
adc     eax, edx
mov     edx, [esp+3ch]
add     ecx, edi
mov     edi, [esp+54h]
adc     edx, [esp+48h]
mov     [edi], esi
xor     esi, [esp+30h]
mov     [edi+4], eax
mov     edi, [esp+58h]
xor     eax, [esp+14h]
mov     [esp+70h], esi
mov     [esp+34h], eax
mov     [edi], ecx
xor     ecx, [esp+5ch]
mov     [edi+4], edx
xor     edx, [esp+60h]
sub     dword ptr [esp+40h], 1
mov     edi, [esp+68h]
mov     [esp+74h], eax
mov     [esp+38h], ecx
mov     [esp+78h], ecx
mov     [esp+3ch], edx
mov     [esp+7ch], edx
jnz     loc_37a594c1
mov     esi, [esp+6ch]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    sub_37a806c0
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 0d8h
mov     eax, [ebp+14h]
push    esi
mov     esi, [ebp+8]
push    edi
mov     edi, [ebp+0ch]
mov     edx, edi
push    ecx
push    dword ptr [eax]
mov     ecx, esi
call    sub_37a181e0
mov     eax, [ebp+14h]
lea     ecx, [esi+edi]
add     esp, 4
mov     edx, edi
push    dword ptr [eax+4]
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     esi, [eax]
mov     edi, [eax+4]
mov     [esp+0b8h], esi
mov     [esp+0bch], edi
mov     ecx, [esi+0e0h]
mov     edx, ecx
mov     eax, [edi+0e0h]
mov     [esp+44h], ecx
mov     ecx, esi
mov     [esp+20h], eax
call    sub_37a80380
mov     edx, [esp+20h]
mov     ecx, edi
call    sub_37a80380
mov     eax, [esi+20h]
xor     eax, [esi]
mov     ecx, [esi+24h]
xor     ecx, [esi+4]
mov     [esp+54h], eax
mov     [esp+98h], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     edx, [edi+20h]
xor     edx, [edi]
mov     [esp+38h], ecx
mov     [esp+9ch], ecx
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     [esp+90h], eax
mov     [esp+0ach], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+40h], ecx
mov     [esp+0a4h], ecx
mov     ecx, [edi+2ch]
xor     ecx, [edi+0ch]
mov     [esp+3ch], eax
mov     [esp+0a0h], eax
mov     eax, [edi+28h]
xor     eax, [edi+8]
mov     [esp+84h], ecx
mov     [esp+0b4h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+94h], eax
mov     [esp+0b0h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+18h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+1ch], eax
mov     eax, [esi+34h]
movq    xmm0, qword ptr [esp+18h]
xor     eax, [esi+14h]
mov     [esp+18h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+1ch], eax
movq    xmm2, qword ptr [esp+18h]
mov     [esp+5ch], edx
mov     [esp+0a8h], edx
punpcklqdq xmm2, xmm0
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     esi, [esp+20h]
mov     [esp+18h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+1ch], eax
movq    xmm0, qword ptr [esp+18h]
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+18h], ecx
mov     [esp+1ch], eax
lea     eax, [esi+8]
movq    xmm3, qword ptr [esp+18h]
punpcklqdq xmm3, xmm0
mov     [esp+18h], eax
mov     dword ptr [esp+88h], 40000h
jmp     short loc_37a59874
mov     esi, [esp+20h]
mov     eax, [esp+54h]
and     edx, 0ffff0h
mov     ecx, [esp+44h]
and     eax, 0ffff0h
movq    xmm0, qword ptr [esp+0a0h]
xor     edi, edi
movq    xmm1, qword ptr [esp+98h]
movups  xmm5, xmmword ptr [edx+esi]
movups  xmm4, xmmword ptr [ecx+eax]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0b0h]
aesenc  xmm4, xmm1
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
movaps  xmm0, xmm4
pxor    xmm0, xmm2
movaps  xmmword ptr [esp+0c0h], xmm4
movups  xmmword ptr [ecx+eax], xmm0
aesenc  xmm5, xmm1
movd    eax, xmm4
movaps  xmm0, xmm5
pxor    xmm0, xmm3
movaps  xmmword ptr [esp+0d0h], xmm5
movups  xmmword ptr [edx+esi], xmm0
movaps  xmm0, xmm4
or      edi, eax
psrldq  xmm0, 4
movd    eax, xmm5
xor     esi, esi
movd    edx, xmm0
movaps  xmm0, xmm5
push    0
or      esi, eax
psrldq  xmm0, 4
mov     eax, edi
mov     [esp+5ch], esi
and     eax, 0ffff0h
mov     [esp+64h], edx
add     ecx, eax
movd    dword ptr [esp+90h], xmm0
mov     [esp+6ch], ecx
push    edx
push    0
mov     esi, [ecx]
mov     ecx, [ecx+4]
mov     [esp+20h], ecx
mov     ecx, [esp+50h]
add     ecx, 8
mov     [esp+54h], esi
add     eax, ecx
mov     [esp+78h], eax
push    esi
mov     ecx, [eax]
mov     eax, [eax+4]
mov     [esp+88h], ecx
mov     [esp+3ch], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+54h]
mov     [esp+40h], eax
mov     esi, edx
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+20h]
mov     [esp+20h], eax
mov     [esp+80h], edx
call    __allmul
mov     edi, eax
mov     ecx, edx
mov     eax, [esp+30h]
add     edi, eax
adc     ecx, esi
mov     [esp+64h], ecx
cmp     ecx, esi
ja      short loc_37a599bb
jb      short loc_37a599a9
cmp     edi, eax
jnb     short loc_37a599bb
mov     dword ptr [esp+24h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a599d4
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     [esp+28h], eax
mov     eax, [esp+30h]
mov     [esp+24h], eax
mov     ecx, [esp+10h]
xor     esi, esi
add     esi, ecx
adc     edi, [esp+70h]
cmp     edi, [esp+70h]
ja      short loc_37a599fe
jb      short loc_37a599ec
cmp     esi, ecx
jnb     short loc_37a599fe
mov     dword ptr [esp+10h], 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a59a17
xorps   xmm0, xmm0
movlpd  qword ptr [esp+70h], xmm0
mov     eax, [esp+74h]
mov     [esp+30h], eax
mov     eax, [esp+70h]
mov     [esp+10h], eax
push    0
push    dword ptr [esp+64h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+64h]
mov     ecx, [esp+54h]
adc     edx, 0
add     eax, [esp+24h]
push    0
adc     edx, [esp+2ch]
add     eax, [esp+14h]
push    dword ptr [esp+90h]
adc     edx, [esp+38h]
add     ecx, eax
mov     eax, [esp+70h]
adc     [esp+40h], edx
mov     edx, [esp+40h]
add     [esp+44h], esi
mov     esi, [esp+44h]
adc     [esp+48h], edi
mov     edi, [esp+48h]
mov     [eax], ecx
xor     ecx, [esp+50h]
mov     [eax+4], edx
mov     eax, [esp+74h]
xor     edx, [esp+1ch]
mov     [esp+5ch], ecx
mov     [esp+0a0h], ecx
mov     ecx, [esp+28h]
mov     [eax], esi
xor     esi, [esp+80h]
mov     [eax+4], edi
mov     eax, [esp+60h]
xor     edi, [esp+34h]
and     eax, 0ffff0h
add     ecx, eax
mov     [esp+40h], edx
add     eax, [esp+20h]
mov     [esp+0a4h], edx
mov     [esp+48h], edi
mov     edx, [ecx]
mov     [esp+0ach], edi
mov     edi, [ecx+4]
mov     [esp+70h], ecx
mov     ecx, [eax]
push    0
mov     [esp+70h], eax
mov     eax, [eax+4]
push    edx
mov     [esp+4ch], esi
mov     [esp+0b0h], esi
mov     [esp+34h], edx
mov     [esp+24h], edi
mov     [esp+70h], ecx
mov     [esp+80h], eax
call    __allmul
push    0
push    dword ptr [esp+5ch]
mov     [esp+34h], eax
mov     esi, edx
push    0
push    dword ptr [esp+30h]
call    __allmul
push    0
push    dword ptr [esp+5ch]
mov     [esp+80h], eax
push    0
push    edi
mov     [esp+7ch], edx
call    __allmul
mov     edi, eax
mov     ecx, edx
mov     eax, [esp+2ch]
add     edi, eax
adc     ecx, esi
mov     [esp+2ch], ecx
cmp     ecx, esi
ja      short loc_37a59b53
jb      short loc_37a59b41
cmp     edi, eax
jnb     short loc_37a59b53
mov     dword ptr [esp+48h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a59b6c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     eax, [esp+4ch]
mov     [esp+30h], eax
mov     eax, [esp+48h]
mov     [esp+48h], eax
mov     ecx, [esp+78h]
xor     esi, esi
add     esi, ecx
adc     edi, [esp+6ch]
cmp     edi, [esp+6ch]
ja      short loc_37a59b96
jb      short loc_37a59b84
cmp     esi, ecx
jnb     short loc_37a59b96
mov     dword ptr [esp+10h], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a59baf
xorps   xmm0, xmm0
movlpd  qword ptr [esp+78h], xmm0
mov     eax, [esp+7ch]
mov     [esp+28h], eax
mov     eax, [esp+78h]
mov     [esp+10h], eax
push    0
push    dword ptr [esp+90h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+2ch]
mov     ecx, [esp+5ch]
adc     edx, 0
movaps  xmm2, xmmword ptr [esp+0c0h]
add     eax, [esp+48h]
movaps  xmm3, xmmword ptr [esp+0d0h]
adc     edx, [esp+30h]
add     eax, [esp+10h]
adc     edx, [esp+28h]
add     ecx, eax
mov     eax, [esp+90h]
adc     eax, edx
mov     edx, [esp+94h]
add     edx, esi
mov     esi, [esp+84h]
adc     esi, edi
mov     edi, [esp+68h]
mov     [edi], ecx
xor     ecx, [esp+24h]
mov     [edi+4], eax
mov     edi, [esp+64h]
xor     eax, [esp+14h]
mov     [esp+5ch], ecx
mov     [esp+0a8h], ecx
mov     [edi], edx
xor     edx, [esp+60h]
mov     [edi+4], esi
xor     esi, [esp+70h]
sub     dword ptr [esp+88h], 1
mov     [esp+94h], edx
mov     [esp+0b0h], edx
mov     edx, ecx
mov     [esp+90h], eax
mov     [esp+0ach], eax
mov     [esp+84h], esi
mov     [esp+0b4h], esi
jnz     loc_37a59870
mov     edx, [esp+0b8h]
mov     ecx, [esp+44h]
call    sub_37a806c0
mov     edx, [esp+0bch]
mov     ecx, [esp+20h]
call    sub_37a806c0
mov     ecx, [esp+0b8h]
call    sub_37a17760
mov     ecx, [esp+0bch]
call    sub_37a17760
mov     edi, [ebp+14h]
mov     esi, [ebp+10h]
push    esi
push    0c8h
mov     eax, [edi]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
mov     ecx, [edi+4]
lea     eax, [esi+20h]
add     esp, 0ch
movzx   edx, byte ptr [ecx]
push    eax
and     edx, 3
push    0c8h
push    ecx
mov     eax, ds:funcs_37a22bf9[edx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 88h
mov     edx, [ebp+0ch]
push    esi
mov     esi, [ebp+14h]
push    edi
push    ecx
mov     ecx, [ebp+8]
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    sub_37a80a90
mov     esi, [esi]
mov     [esp+6ch], esi
mov     dword ptr [esp+3ch], 40000h
mov     ecx, [esi+24h]
xor     ecx, [esi+4]
mov     eax, [esi+20h]
xor     eax, [esi]
mov     edx, [esi+0e0h]
mov     [esp+2ch], eax
mov     [esp+30h], ecx
mov     [esp+70h], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+74h], ecx
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     [esp+34h], eax
mov     [esp+38h], ecx
mov     [esp+78h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+7ch], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+60h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+64h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
movq    xmm0, qword ptr [esp+60h]
mov     esi, [esp+2ch]
mov     [esp+64h], eax
lea     eax, [edx+8]
mov     [esp+60h], ecx
movq    xmm5, qword ptr [esp+60h]
mov     [esp+40h], edx
punpcklqdq xmm5, xmm0
mov     [esp+44h], eax
movq    xmm1, qword ptr [esp+78h]
mov     edi, esi
movq    xmm0, qword ptr [esp+70h]
and     edi, 0ffff0h
add     edi, edx
punpcklqdq xmm0, xmm1
push    edi
call    loc_37a22320
xor     ecx, ecx
movd    eax, xmm0
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+84h], xmm0
pxor    xmm1, xmm5
add     esp, 4
or      ecx, eax
movups  xmmword ptr [edi], xmm1
mov     eax, ecx
mov     [esp+10h], ecx
mov     ecx, [esp+40h]
and     eax, 0ffff0h
add     ecx, eax
movaps  xmm1, xmm0
add     eax, [esp+44h]
psrldq  xmm1, 4
movd    edx, xmm1
mov     edi, [ecx]
push    0
mov     [esp+58h], ecx
mov     ecx, [ecx+4]
push    edx
mov     [esp+14h], ecx
mov     ecx, [eax]
push    0
mov     [esp+64h], eax
mov     eax, [eax+4]
push    edi
mov     [esp+5ch], edx
mov     [esp+3ch], edi
mov     [esp+6ch], ecx
mov     [esp+70h], eax
call    __allmul
push    0
push    dword ptr [esp+14h]
mov     [esp+28h], eax
mov     edi, edx
push    0
push    dword ptr [esp+38h]
call    __allmul
push    0
push    dword ptr [esp+14h]
mov     [esp+20h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+20h]
add     eax, ecx
adc     edx, edi
mov     [esp+50h], edx
cmp     edx, edi
ja      short loc_37a59e98
jb      short loc_37a59e86
cmp     eax, ecx
jnb     short loc_37a59e98
mov     dword ptr [esp+10h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a59eb1
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     ecx, [esp+24h]
mov     [esp+14h], ecx
mov     ecx, [esp+20h]
mov     [esp+10h], ecx
mov     ecx, [esp+18h]
xor     edi, edi
mov     edx, [esp+48h]
add     edi, ecx
adc     eax, edx
mov     [esp+48h], eax
cmp     eax, edx
ja      short loc_37a59edf
jb      short loc_37a59ecd
cmp     edi, ecx
jnb     short loc_37a59edf
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a59ef8
xorps   xmm0, xmm0
movlpd  qword ptr [esp+18h], xmm0
mov     eax, [esp+1ch]
mov     [esp+20h], eax
mov     eax, [esp+18h]
mov     [esp+18h], eax
push    0
push    dword ptr [esp+50h]
push    0
push    dword ptr [esp+18h]
call    __allmul
add     eax, [esp+50h]
mov     ecx, [esp+34h]
adc     edx, 0
movaps  xmm5, xmmword ptr [esp+80h]
add     eax, [esp+10h]
adc     edx, [esp+14h]
add     eax, [esp+18h]
adc     edx, [esp+20h]
add     esi, eax
mov     eax, [esp+30h]
adc     eax, edx
mov     edx, [esp+38h]
add     ecx, edi
mov     edi, [esp+54h]
adc     edx, [esp+48h]
mov     [edi], esi
xor     esi, [esp+2ch]
mov     [edi+4], eax
mov     edi, [esp+58h]
xor     eax, [esp+0ch]
mov     [esp+70h], esi
mov     [esp+30h], eax
mov     [edi], ecx
xor     ecx, [esp+5ch]
mov     [edi+4], edx
xor     edx, [esp+60h]
sub     dword ptr [esp+3ch], 1
mov     [esp+38h], edx
mov     [esp+7ch], edx
mov     edx, [esp+40h]
mov     [esp+74h], eax
mov     [esp+34h], ecx
mov     [esp+78h], ecx
jnz     loc_37a59db1
mov     esi, [esp+6ch]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    sub_37a81400
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 0d8h
mov     eax, [ebp+14h]
push    esi
mov     esi, [ebp+8]
push    edi
mov     edi, [ebp+0ch]
mov     edx, edi
push    ecx
push    dword ptr [eax]
mov     ecx, esi
call    sub_37a181e0
mov     eax, [ebp+14h]
lea     ecx, [esi+edi]
add     esp, 4
mov     edx, edi
push    dword ptr [eax+4]
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     edi, [eax]
mov     esi, [eax+4]
mov     [esp+0bch], edi
mov     [esp+8ch], esi
mov     ecx, [edi+0e0h]
mov     edx, ecx
mov     eax, [esi+0e0h]
mov     [esp+44h], ecx
mov     ecx, edi
mov     [esp+20h], eax
call    sub_37a80a90
mov     edx, [esp+20h]
mov     ecx, esi
call    sub_37a80a90
mov     eax, [edi+20h]
mov     edx, esi
xor     eax, [edi]
mov     ecx, [edi+24h]
xor     ecx, [edi+4]
mov     esi, [edx+20h]
xor     esi, [edx]
mov     [esp+54h], eax
mov     [esp+98h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+38h], ecx
mov     [esp+9ch], ecx
mov     ecx, [edi+2ch]
xor     ecx, [edi+0ch]
mov     [esp+94h], eax
mov     [esp+0ach], eax
mov     eax, [edi+28h]
xor     eax, [edi+8]
mov     [esp+40h], ecx
mov     [esp+0a4h], ecx
mov     ecx, [edx+2ch]
xor     ecx, [edx+0ch]
mov     [esp+3ch], eax
mov     [esp+0a0h], eax
mov     eax, [edx+28h]
xor     eax, [edx+8]
mov     [esp+84h], ecx
mov     [esp+0b4h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+80h], eax
mov     [esp+0b0h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+18h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+1ch], eax
mov     eax, [edi+34h]
movq    xmm0, qword ptr [esp+18h]
xor     eax, [edi+14h]
mov     [esp+18h], ecx
mov     ecx, [edx+38h]
mov     [esp+1ch], eax
movq    xmm5, qword ptr [esp+18h]
mov     [esp+5ch], esi
mov     [esp+0a8h], esi
punpcklqdq xmm5, xmm0
xor     ecx, [edx+18h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+1ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+18h], ecx
movq    xmm0, qword ptr [esp+18h]
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+1ch], eax
mov     eax, [esp+20h]
mov     [esp+18h], ecx
add     eax, 8
movq    xmm6, qword ptr [esp+18h]
punpcklqdq xmm6, xmm0
mov     [esp+18h], eax
mov     dword ptr [esp+88h], 40000h
xchg    ax, ax
mov     edi, [esp+54h]
movq    xmm1, qword ptr [esp+0a0h]
and     edi, 0ffff0h
add     edi, [esp+44h]
movq    xmm0, qword ptr [esp+98h]
punpcklqdq xmm0, xmm1
push    edi
call    loc_37a22320
movq    xmm1, qword ptr [esp+0b4h]
movaps  xmm7, xmm0
movq    xmm0, qword ptr [esp+0ach]
add     esp, 4
and     esi, 0ffff0h
punpcklqdq xmm0, xmm1
add     esi, [esp+20h]
movaps  xmmword ptr [esp+0c0h], xmm7
push    esi
call    loc_37a22320
mov     ecx, [esp+48h]
movaps  xmm2, xmm0
movaps  xmm1, xmm7
movd    eax, xmm7
pxor    xmm1, xmm5
movaps  xmmword ptr [esp+0d4h], xmm2
movups  xmmword ptr [edi], xmm1
xor     edx, edx
xor     edi, edi
movaps  xmm1, xmm2
or      edi, eax
pxor    xmm1, xmm6
movd    eax, xmm2
add     esp, 4
movups  xmmword ptr [esi], xmm1
movaps  xmm0, xmm7
psrldq  xmm0, 4
or      edx, eax
movd    esi, xmm0
mov     eax, edi
mov     [esp+58h], edx
and     eax, 0ffff0h
movaps  xmm0, xmm2
add     ecx, eax
psrldq  xmm0, 4
mov     [esp+68h], ecx
push    0
push    esi
mov     edx, [ecx]
mov     ecx, [ecx+4]
mov     [esp+1ch], ecx
mov     ecx, [esp+4ch]
add     ecx, 8
mov     [esp+68h], esi
add     eax, ecx
movd    dword ptr [esp+98h], xmm0
push    0
mov     [esp+78h], eax
push    edx
mov     ecx, [eax]
mov     eax, [eax+4]
mov     [esp+58h], edx
mov     [esp+88h], ecx
mov     [esp+3ch], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+54h]
mov     [esp+40h], eax
mov     esi, edx
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+20h]
mov     [esp+20h], eax
mov     [esp+80h], edx
call    __allmul
mov     edi, eax
mov     ecx, edx
mov     eax, [esp+30h]
add     edi, eax
adc     ecx, esi
mov     [esp+64h], ecx
cmp     ecx, esi
ja      short loc_37a5a2b4
jb      short loc_37a5a2a2
cmp     edi, eax
jnb     short loc_37a5a2b4
mov     dword ptr [esp+24h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a5a2cd
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     [esp+28h], eax
mov     eax, [esp+30h]
mov     [esp+24h], eax
mov     ecx, [esp+10h]
xor     esi, esi
add     esi, ecx
adc     edi, [esp+70h]
cmp     edi, [esp+70h]
ja      short loc_37a5a2f7
jb      short loc_37a5a2e5
cmp     esi, ecx
jnb     short loc_37a5a2f7
mov     dword ptr [esp+10h], 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a5a310
xorps   xmm0, xmm0
movlpd  qword ptr [esp+70h], xmm0
mov     eax, [esp+74h]
mov     [esp+30h], eax
mov     eax, [esp+70h]
mov     [esp+10h], eax
push    0
push    dword ptr [esp+64h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+64h]
mov     ecx, [esp+54h]
adc     edx, 0
add     eax, [esp+24h]
push    0
adc     edx, [esp+2ch]
add     eax, [esp+14h]
push    dword ptr [esp+94h]
adc     edx, [esp+38h]
add     ecx, eax
mov     eax, [esp+70h]
adc     [esp+40h], edx
mov     edx, [esp+40h]
add     [esp+44h], esi
mov     esi, [esp+44h]
adc     [esp+48h], edi
mov     edi, [esp+48h]
mov     [eax], ecx
xor     ecx, [esp+50h]
mov     [eax+4], edx
mov     eax, [esp+74h]
xor     edx, [esp+1ch]
mov     [esp+5ch], ecx
mov     [esp+0a0h], ecx
mov     ecx, [esp+28h]
mov     [eax], esi
xor     esi, [esp+80h]
mov     [eax+4], edi
mov     eax, [esp+60h]
xor     edi, [esp+34h]
and     eax, 0ffff0h
add     ecx, eax
mov     [esp+40h], edx
add     eax, [esp+20h]
mov     [esp+0a4h], edx
mov     [esp+48h], edi
mov     edx, [ecx]
mov     [esp+0ach], edi
mov     edi, [ecx+4]
mov     [esp+70h], ecx
mov     ecx, [eax]
push    0
mov     [esp+70h], eax
mov     eax, [eax+4]
push    edx
mov     [esp+4ch], esi
mov     [esp+0b0h], esi
mov     [esp+34h], edx
mov     [esp+24h], edi
mov     [esp+70h], ecx
mov     [esp+80h], eax
call    __allmul
push    0
push    dword ptr [esp+5ch]
mov     [esp+34h], eax
mov     esi, edx
push    0
push    dword ptr [esp+30h]
call    __allmul
push    0
push    dword ptr [esp+5ch]
mov     [esp+80h], eax
push    0
push    edi
mov     [esp+7ch], edx
call    __allmul
mov     edi, eax
mov     ecx, edx
mov     eax, [esp+2ch]
add     edi, eax
adc     ecx, esi
mov     [esp+2ch], ecx
cmp     ecx, esi
ja      short loc_37a5a44c
jb      short loc_37a5a43a
cmp     edi, eax
jnb     short loc_37a5a44c
mov     dword ptr [esp+48h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a5a465
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     eax, [esp+4ch]
mov     [esp+30h], eax
mov     eax, [esp+48h]
mov     [esp+48h], eax
mov     ecx, [esp+78h]
xor     esi, esi
add     esi, ecx
adc     edi, [esp+6ch]
cmp     edi, [esp+6ch]
ja      short loc_37a5a48f
jb      short loc_37a5a47d
cmp     esi, ecx
jnb     short loc_37a5a48f
mov     dword ptr [esp+10h], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a5a4a8
xorps   xmm0, xmm0
movlpd  qword ptr [esp+78h], xmm0
mov     eax, [esp+7ch]
mov     [esp+28h], eax
mov     eax, [esp+78h]
mov     [esp+10h], eax
push    0
push    dword ptr [esp+94h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+2ch]
mov     ecx, [esp+5ch]
adc     edx, 0
movaps  xmm5, xmmword ptr [esp+0c0h]
add     eax, [esp+48h]
movaps  xmm6, xmmword ptr [esp+0d0h]
adc     edx, [esp+30h]
add     eax, [esp+10h]
adc     edx, [esp+28h]
add     ecx, eax
mov     eax, [esp+94h]
adc     eax, edx
mov     edx, [esp+80h]
add     edx, esi
mov     esi, [esp+84h]
adc     esi, edi
mov     edi, [esp+68h]
mov     [edi], ecx
xor     ecx, [esp+24h]
mov     [edi+4], eax
mov     edi, [esp+64h]
xor     eax, [esp+14h]
mov     [esp+5ch], ecx
mov     [esp+0a8h], ecx
mov     [edi], edx
xor     edx, [esp+60h]
mov     [edi+4], esi
xor     esi, [esp+70h]
sub     dword ptr [esp+88h], 1
mov     [esp+84h], esi
mov     [esp+0b4h], esi
mov     esi, ecx
mov     [esp+94h], eax
mov     [esp+0ach], eax
mov     [esp+80h], edx
mov     [esp+0b0h], edx
jnz     loc_37a5a160
mov     edx, [esp+0bch]
mov     ecx, [esp+44h]
call    sub_37a81400
mov     edx, [esp+8ch]
mov     ecx, [esp+20h]
call    sub_37a81400
mov     ecx, [esp+0bch]
call    sub_37a17760
mov     ecx, [esp+8ch]
call    sub_37a17760
mov     edi, [ebp+14h]
mov     esi, [ebp+10h]
push    esi
push    0c8h
mov     eax, [edi]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
mov     ecx, [edi+4]
lea     eax, [esi+20h]
add     esp, 0ch
movzx   edx, byte ptr [ecx]
push    eax
and     edx, 3
push    0c8h
push    ecx
mov     eax, ds:funcs_37a22bf9[edx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 1a8h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a80380
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 4
jb      short loc_37a5ae46
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+0a4h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+8ch], ecx
mov     ecx, [edi+0e0h]
mov     [esp+84h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+88h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm4, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm3, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
movaps  xmmword ptr [esp+190h], xmm1
movq    xmm1, qword ptr [esp+8]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+130h], xmm4
movaps  xmmword ptr [esp+120h], xmm3
movaps  xmmword ptr [esp+1a0h], xmm1
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
movq    xmm1, qword ptr [esp+8]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [ebp+14h]
mov     [esp+8], ecx
movq    xmm6, qword ptr [esp+8]
punpcklqdq xmm6, xmm0
mov     edx, [eax+0ch]
movaps  xmmword ptr [esp+110h], xmm1
movd    esi, xmm4
mov     dword ptr [esp+54h], 0
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
movaps  xmmword ptr [esp+160h], xmm2
punpcklqdq xmm5, xmm0
movd    edx, xmm3
mov     dword ptr [esp+4ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+5ch], 0
movd    eax, xmm2
mov     dword ptr [esp+0ach], 0
mov     dword ptr [esp+94h], 40000h
nop     word ptr [eax+eax+00000000h]
mov     edi, [esp+0a4h]
and     ecx, 0ffff0h
add     ecx, [esp+84h]
and     eax, 0ffff0h
add     eax, [esp+88h]
and     edx, 0ffff0h
add     edx, [esp+8ch]
and     esi, 0ffff0h
movups  xmm0, xmmword ptr [edx]
movups  xmm7, xmmword ptr [esi+edi]
movaps  xmmword ptr [esp+140h], xmm0
movups  xmm0, xmmword ptr [ecx]
movaps  xmmword ptr [esp+150h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+170h], xmm0
aesenc  xmm7, xmm4
movaps  xmm4, xmmword ptr [esp+140h]
movaps  xmm0, xmm7
pxor    xmm0, xmmword ptr [esp+190h]
movups  xmmword ptr [esi+edi], xmm0
aesenc  xmm4, xmm3
movaps  xmm3, xmmword ptr [esp+150h]
movaps  xmm0, xmm4
pxor    xmm0, xmmword ptr [esp+1a0h]
movups  xmmword ptr [edx], xmm0
aesenc  xmm3, xmm1
movaps  xmm1, xmmword ptr [esp+170h]
movaps  xmm0, xmm3
pxor    xmm0, xmm6
movaps  xmmword ptr [esp+180h], xmm7
movups  xmmword ptr [ecx], xmm0
xor     ecx, ecx
aesenc  xmm1, xmm2
movaps  xmm0, xmm1
movaps  xmmword ptr [esp+140h], xmm4
pxor    xmm0, xmm5
movaps  xmmword ptr [esp+150h], xmm3
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm7
movd    eax, xmm7
psrldq  xmm0, 4
movd    esi, xmm0
movaps  xmm0, xmm4
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+1ch], ecx
and     ecx, 0ffff0h
add     ecx, edi
movd    dword ptr [esp+34h], xmm0
mov     [esp+50h], ecx
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+170h], xmm1
mov     [esp+64h], esi
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0c4h], eax
movd    eax, xmm4
mov     [esp+8], edi
psrldq  xmm0, 4
or      ecx, eax
mov     [esp+40h], ecx
and     ecx, 0ffff0h
add     ecx, [esp+8ch]
mov     [esp+48h], ecx
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0dch], eax
movd    eax, xmm3
or      ecx, eax
mov     [esp+28h], ecx
and     ecx, 0ffff0h
movd    dword ptr [esp+38h], xmm0
add     ecx, [esp+84h]
xor     edx, edx
mov     [esp+58h], ecx
movaps  xmm0, xmm1
push    0
push    esi
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0f8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0fch], eax
movd    eax, xmm1
push    0
psrldq  xmm0, 4
or      edx, eax
movd    dword ptr [esp+9ch], xmm0
mov     ecx, edx
mov     [esp+48h], edx
and     ecx, 0ffff0h
add     ecx, [esp+94h]
push    edi
mov     [esp+0b8h], ecx
mov     eax, [ecx]
mov     [esp+0a8h], eax
mov     eax, [ecx+4]
mov     [esp+0ach], eax
mov     eax, [ecx+8]
mov     [esp+118h], eax
mov     eax, [ecx+0ch]
mov     [esp+11ch], eax
call    __allmul
push    0
push    dword ptr [esp+20h]
mov     [esp+20h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+20h]
mov     [esp+1ch], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+88h], edx
call    __allmul
mov     ecx, [esp+18h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5b363
jb      short loc_37a5b351
cmp     eax, ecx
jnb     short loc_37a5b363
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a5b37c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     ecx, [esp+24h]
mov     [esp+18h], ecx
mov     ecx, [esp+20h]
mov     [esp+20h], ecx
mov     edx, [esp+14h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0b8h], ecx
adc     eax, [esp+78h]
mov     [esp+0bch], eax
cmp     eax, [esp+78h]
ja      short loc_37a5b3b4
jb      short loc_37a5b3a2
cmp     ecx, edx
jnb     short loc_37a5b3b4
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a5b3cd
xorps   xmm0, xmm0
movlpd  qword ptr [esp+78h], xmm0
mov     eax, [esp+7ch]
mov     [esp+14h], eax
mov     eax, [esp+78h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+68h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+0b8h]
add     edi, eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [esp+50h]
adc     esi, edx
add     edi, [esp+1ch]
push    0
adc     esi, [esp+18h]
add     edi, [esp+24h]
push    dword ptr [esp+38h]
adc     esi, [esp+20h]
mov     [esp+0b8h], edi
mov     [esp+0bch], esi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0c8h]
paddq   xmm1, xmmword ptr [esp+138h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+188h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+140h], xmm2
movd    dword ptr [esp+88h], xmm2
mov     dword ptr [esp+64h], 0
movaps  xmmword ptr [esp+1a0h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+74h]
mov     [esp+60h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+78h]
mov     [esp+50h], eax
mov     [esp+74h], edx
call    __allmul
mov     ecx, [esp+50h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5b4cb
jb      short loc_37a5b4b9
cmp     eax, ecx
jnb     short loc_37a5b4cb
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a5b4e4
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     ecx, [esp+54h]
mov     [esp+1ch], ecx
mov     ecx, [esp+50h]
mov     [esp+14h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0d0h], ecx
adc     eax, [esp+64h]
mov     [esp+0d4h], eax
cmp     eax, [esp+64h]
ja      short loc_37a5b51c
jb      short loc_37a5b50a
cmp     ecx, edx
jnb     short loc_37a5b51c
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a5b535
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+20h], eax
mov     eax, [esp+40h]
mov     [esp+18h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+38h]
push    esi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0d0h]
add     edi, eax
movq    xmm2, qword ptr [esp+68h]
mov     eax, [esp+48h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+24h]
add     edi, [esp+18h]
push    dword ptr [esp+3ch]
adc     esi, [esp+24h]
mov     [esp+0d0h], edi
mov     [esp+0d4h], esi
movq    xmm1, qword ptr [esp+0d0h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0e0h]
paddq   xmm1, xmmword ptr [esp+128h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+148h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+7ch]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+130h], xmm2
movd    dword ptr [esp+60h], xmm2
mov     dword ptr [esp+5ch], 0
movaps  xmmword ptr [esp+1b0h], xmm0
call    __allmul
mov     edi, [esp+28h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+7ch]
mov     [esp+58h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+80h]
mov     [esp+38h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5b633
jb      short loc_37a5b621
cmp     eax, ecx
jnb     short loc_37a5b633
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a5b64c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+14h], ecx
mov     ecx, [esp+48h]
mov     [esp+20h], ecx
mov     edx, [esp+28h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e8h], ecx
adc     eax, [esp+40h]
mov     [esp+0ech], eax
cmp     eax, [esp+40h]
ja      short loc_37a5b684
jb      short loc_37a5b672
cmp     ecx, edx
jnb     short loc_37a5b684
mov     dword ptr [esp+34h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a5b69d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+18h], eax
mov     eax, [esp+28h]
mov     [esp+34h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+3ch]
push    esi
push    dword ptr [esp+80h]
call    __allmul
movq    xmm0, qword ptr [esp+0e8h]
add     edi, eax
movq    xmm2, qword ptr [esp+70h]
mov     eax, [esp+58h]
adc     esi, edx
add     edi, [esp+34h]
push    0
adc     esi, [esp+1ch]
add     edi, [esp+24h]
push    dword ptr [esp+94h]
adc     esi, [esp+1ch]
mov     [esp+0e8h], edi
mov     edi, [esp+0a0h]
mov     [esp+0ech], esi
movq    xmm1, qword ptr [esp+0e8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0f8h]
paddq   xmm1, xmmword ptr [esp+118h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+158h]
pxor    xmm2, xmm1
push    0
push    edi
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+120h], xmm2
movd    dword ptr [esp+58h], xmm2
mov     dword ptr [esp+6ch], 0
movaps  xmmword ptr [esp+190h], xmm0
call    __allmul
push    0
push    dword ptr [esp+40h]
mov     [esp+60h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+40h]
mov     edi, eax
mov     [esp+30h], edx
push    0
push    dword ptr [esp+0a8h]
call    __allmul
mov     ecx, edx
mov     edx, [esp+58h]
add     eax, edx
adc     ecx, esi
mov     [esp+58h], ecx
cmp     ecx, esi
ja      short loc_37a5b7a6
jb      short loc_37a5b794
cmp     eax, edx
jnb     short loc_37a5b7a6
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+38h], 1
jmp     short loc_37a5b7bf
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+38h], ecx
mov     ecx, [esp+40h]
mov     [esp+3ch], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+100h], ecx
adc     eax, [esp+28h]
mov     [esp+104h], eax
cmp     eax, [esp+28h]
ja      short loc_37a5b7ea
jb      short loc_37a5b7e1
cmp     ecx, edi
jnb     short loc_37a5b7ea
mov     esi, 1
xor     edi, edi
jmp     short loc_37a5b7fb
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     edi, [esp+2ch]
mov     esi, [esp+28h]
push    0
push    dword ptr [esp+94h]
push    0
push    dword ptr [esp+0a8h]
call    __allmul
add     eax, [esp+58h]
movq    xmm0, qword ptr [esp+100h]
movq    xmm2, qword ptr [esp+98h]
adc     edx, 0
add     eax, [esp+3ch]
movaps  xmm5, xmmword ptr [esp+170h]
adc     edx, [esp+38h]
add     eax, esi
movaps  xmm3, xmmword ptr [esp+120h]
movaps  xmm4, xmmword ptr [esp+130h]
adc     edx, edi
sub     dword ptr [esp+94h], 1
movaps  xmm6, xmmword ptr [esp+180h]
mov     ecx, [esp+48h]
mov     esi, [esp+78h]
mov     [esp+0f8h], eax
mov     eax, [esp+0a8h]
mov     [esp+0fch], edx
movq    xmm1, qword ptr [esp+0f8h]
mov     edx, [esp+50h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+160h]
movq    xmm0, qword ptr [esp+108h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+110h]
movaps  xmmword ptr [esp+160h], xmm2
movd    eax, xmm2
mov     dword ptr [esp+0ach], 0
jnz     loc_37a5b0f0
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a806c0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a5b8d4
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 208h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a80380
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 5
jb      short loc_37a5b936
mov     ecx, [ebp+14h]
mov     edx, [ecx]
mov     esi, [ecx+4]
mov     edi, [ecx+8]
mov     eax, [edx+0e0h]
mov     [esp+0bch], eax
mov     eax, [esi+0e0h]
mov     [esp+0ach], eax
mov     eax, [edi+0e0h]
mov     [esp+0b0h], eax
mov     eax, [ecx+0ch]
mov     eax, [eax+0e0h]
mov     [esp+0b4h], eax
mov     eax, [ecx+10h]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+10h], ecx
mov     eax, [eax+0e0h]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0b8h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm5, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
movq    xmm4, qword ptr [esp+10h]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
movaps  xmmword ptr [esp+200h], xmm1
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+190h], xmm5
movaps  xmmword ptr [esp+180h], xmm4
movaps  xmmword ptr [esp+0d0h], xmm1
xor     ecx, [edi+8]
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+10h], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     esi, [ebp+14h]
mov     [esp+10h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     edx, [esi+0ch]
mov     [esp+14h], eax
movq    xmm3, qword ptr [esp+10h]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
movaps  xmmword ptr [esp+70h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     edx, [esi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
movq    xmm7, qword ptr [esp+10h]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm2, qword ptr [esp+10h]
punpcklqdq xmm2, xmm0
movaps  xmmword ptr [esp+170h], xmm3
movaps  xmmword ptr [esp+160h], xmm1
movaps  xmmword ptr [esp+1e0h], xmm2
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm6, qword ptr [esp+10h]
punpcklqdq xmm6, xmm0
movd    edi, xmm5
mov     dword ptr [esp+44h], 0
movd    esi, xmm4
mov     dword ptr [esp+3ch], 0
movd    edx, xmm3
mov     dword ptr [esp+34h], 0
movd    ecx, xmm1
mov     dword ptr [esp+54h], 0
movd    eax, xmm2
mov     dword ptr [esp+0e4h], 0
mov     dword ptr [esp+0c4h], 40000h
and     esi, 0ffff0h
and     ecx, 0ffff0h
add     esi, [esp+0ach]
and     eax, 0ffff0h
add     ecx, [esp+0b4h]
and     edx, 0ffff0h
add     eax, [esp+0b8h]
and     edi, 0ffff0h
add     edx, [esp+0b0h]
movups  xmm0, xmmword ptr [esi]
add     edi, [esp+0bch]
movaps  xmmword ptr [esp+1b0h], xmm0
movups  xmm0, xmmword ptr [edx]
movaps  xmmword ptr [esp+1c0h], xmm0
movups  xmm0, xmmword ptr [ecx]
movaps  xmmword ptr [esp+1d0h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+1f0h], xmm0
movups  xmm0, xmmword ptr [edi]
aesenc  xmm0, xmm5
movaps  xmm5, xmmword ptr [esp+1b0h]
movaps  xmmword ptr [esp+1a0h], xmm0
pxor    xmm0, xmmword ptr [esp+200h]
movups  xmmword ptr [edi], xmm0
aesenc  xmm5, xmm4
movaps  xmm4, xmmword ptr [esp+1c0h]
movaps  xmm0, xmm5
pxor    xmm0, xmmword ptr [esp+0d0h]
movups  xmmword ptr [esi], xmm0
aesenc  xmm4, xmm3
movaps  xmm3, xmmword ptr [esp+1d0h]
movaps  xmm0, xmm4
pxor    xmm0, xmmword ptr [esp+70h]
movups  xmmword ptr [edx], xmm0
aesenc  xmm3, xmm1
movaps  xmm1, xmmword ptr [esp+1a0h]
movaps  xmm0, xmm3
pxor    xmm0, xmm7
movaps  xmmword ptr [esp+1b0h], xmm5
movaps  xmm7, xmmword ptr [esp+1f0h]
movups  xmmword ptr [ecx], xmm0
xor     ecx, ecx
aesenc  xmm7, xmm2
movaps  xmm0, xmm7
movaps  xmmword ptr [esp+1c0h], xmm4
pxor    xmm0, xmm6
movaps  xmmword ptr [esp+1d0h], xmm3
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
movaps  xmm0, xmm5
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+70h], ecx
and     ecx, 0ffff0h
add     ecx, [esp+0bch]
mov     [esp+40h], ecx
movaps  xmmword ptr [esp+1f0h], xmm7
mov     [esp+6ch], esi
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+14h], eax
mov     eax, [ecx+8]
mov     [esp+0f8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0fch], eax
movd    eax, xmm5
mov     [esp+10h], edi
movd    dword ptr [esp+24h], xmm0
or      ecx, eax
mov     [esp+20h], ecx
and     ecx, 0ffff0h
add     ecx, [esp+0ach]
mov     [esp+38h], ecx
mov     eax, [ecx]
mov     [esp+0c8h], eax
mov     eax, [ecx+4]
mov     [esp+0cch], eax
mov     eax, [ecx+8]
xor     edx, edx
mov     [esp+110h], eax
movaps  xmm0, xmm4
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+114h], eax
movd    eax, xmm4
psrldq  xmm0, 4
movd    dword ptr [esp+28h], xmm0
movaps  xmm0, xmm3
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+60h], ecx
and     ecx, 0ffff0h
add     ecx, [esp+0b0h]
mov     [esp+30h], ecx
push    0
movd    dword ptr [esp+30h], xmm0
movaps  xmm0, xmm7
mov     eax, [ecx]
mov     [esp+94h], eax
mov     eax, [ecx+4]
mov     [esp+98h], eax
mov     eax, [ecx+8]
mov     [esp+12ch], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+130h], eax
movd    eax, xmm3
push    esi
push    0
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+54h], ecx
and     ecx, 0ffff0h
add     ecx, [esp+0c0h]
mov     [esp+5ch], ecx
push    edi
movd    dword ptr [esp+0d0h], xmm0
mov     eax, [ecx]
mov     [esp+0a8h], eax
mov     eax, [ecx+4]
mov     [esp+0ach], eax
mov     eax, [ecx+8]
mov     [esp+150h], eax
mov     eax, [ecx+0ch]
mov     [esp+154h], eax
movd    eax, xmm7
or      edx, eax
mov     ecx, edx
mov     [esp+98h], edx
and     ecx, 0ffff0h
add     ecx, [esp+0c8h]
mov     [esp+0f0h], ecx
mov     eax, [ecx]
mov     [esp+0b0h], eax
mov     eax, [ecx+4]
mov     [esp+0b4h], eax
mov     eax, [ecx+8]
mov     [esp+168h], eax
mov     eax, [ecx+0ch]
mov     [esp+16ch], eax
call    __allmul
push    0
push    dword ptr [esp+74h]
mov     [esp+24h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+74h]
mov     edi, eax
mov     [esp+0d8h], edx
push    0
push    dword ptr [esp+20h]
call    __allmul
mov     ecx, eax
mov     eax, [esp+1ch]
add     ecx, eax
adc     edx, esi
mov     [esp+58h], edx
cmp     edx, esi
ja      short loc_37a5bf89
jb      short loc_37a5bf77
cmp     ecx, eax
jnb     short loc_37a5bf89
mov     dword ptr [esp+70h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a5bfa2
xorps   xmm0, xmm0
movlpd  qword ptr [esp+70h], xmm0
mov     eax, [esp+74h]
mov     [esp+1ch], eax
mov     eax, [esp+70h]
mov     [esp+70h], eax
xor     eax, eax
add     eax, edi
mov     [esp+0f0h], eax
adc     ecx, [esp+0d0h]
mov     [esp+0f4h], ecx
cmp     ecx, [esp+0d0h]
ja      short loc_37a5bfd3
jb      short loc_37a5bfca
cmp     eax, edi
jnb     short loc_37a5bfd3
mov     esi, 1
xor     edi, edi
jmp     short loc_37a5bfed
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0d0h], xmm0
mov     edi, [esp+0d4h]
mov     esi, [esp+0d0h]
push    0
push    dword ptr [esp+70h]
push    0
push    dword ptr [esp+20h]
call    __allmul
add     eax, [esp+58h]
movq    xmm0, qword ptr [esp+0f0h]
movq    xmm2, qword ptr [esp+10h]
adc     edx, 0
add     eax, [esp+70h]
push    0
adc     edx, [esp+20h]
add     eax, esi
push    dword ptr [esp+28h]
adc     edx, edi
mov     [esp+0f0h], eax
mov     eax, [esp+48h]
mov     edi, [esp+0d0h]
mov     [esp+0f4h], edx
movq    xmm1, qword ptr [esp+0f0h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+100h]
paddq   xmm1, xmmword ptr [esp+198h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1a8h]
pxor    xmm2, xmm1
push    0
push    edi
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+1a0h], xmm2
movd    dword ptr [esp+7ch], xmm2
mov     dword ptr [esp+54h], 0
movaps  xmmword ptr [esp+210h], xmm0
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+48h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     edi, eax
mov     [esp+60h], edx
push    0
push    dword ptr [esp+0d8h]
call    __allmul
mov     ecx, edx
mov     edx, [esp+40h]
add     eax, edx
adc     ecx, esi
mov     [esp+40h], ecx
cmp     ecx, esi
ja      short loc_37a5c0ef
jb      short loc_37a5c0dd
cmp     eax, edx
jnb     short loc_37a5c0ef
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a5c111
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0d0h], xmm0
mov     ecx, [esp+0d4h]
mov     [esp+1ch], ecx
mov     ecx, [esp+0d0h]
mov     [esp+20h], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+108h], ecx
adc     eax, [esp+58h]
mov     [esp+10ch], eax
cmp     eax, [esp+58h]
ja      short loc_37a5c13c
jb      short loc_37a5c133
cmp     ecx, edi
jnb     short loc_37a5c13c
mov     esi, 1
xor     edi, edi
jmp     short loc_37a5c14d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     edi, [esp+5ch]
mov     esi, [esp+58h]
push    0
push    dword ptr [esp+28h]
push    0
push    dword ptr [esp+0d8h]
call    __allmul
add     eax, [esp+40h]
movq    xmm0, qword ptr [esp+108h]
movq    xmm2, qword ptr [esp+0c8h]
adc     edx, 0
add     eax, [esp+20h]
push    0
adc     edx, [esp+20h]
add     eax, esi
push    dword ptr [esp+2ch]
adc     edx, edi
mov     [esp+108h], eax
mov     eax, [esp+40h]
mov     [esp+10ch], edx
movq    xmm1, qword ptr [esp+108h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+118h]
paddq   xmm1, xmmword ptr [esp+188h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1b8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+9ch]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+190h], xmm2
movd    dword ptr [esp+68h], xmm2
mov     dword ptr [esp+4ch], 0
movaps  xmmword ptr [esp+0e0h], xmm0
call    __allmul
mov     edi, [esp+60h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+9ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a0h]
mov     [esp+70h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5c256
jb      short loc_37a5c244
cmp     eax, ecx
jnb     short loc_37a5c256
mov     dword ptr [esp+24h], 0
mov     dword ptr [esp+20h], 1
jmp     short loc_37a5c26f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+20h], ecx
mov     ecx, [esp+38h]
mov     [esp+24h], ecx
mov     edx, [esp+60h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+120h], ecx
adc     eax, [esp+40h]
mov     [esp+124h], eax
cmp     eax, [esp+40h]
ja      short loc_37a5c2a7
jb      short loc_37a5c295
cmp     ecx, edx
jnb     short loc_37a5c2a7
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+70h], 0
jmp     short loc_37a5c2c0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+70h], eax
mov     eax, [esp+60h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+2ch]
push    esi
push    dword ptr [esp+0a0h]
call    __allmul
movq    xmm0, qword ptr [esp+120h]
add     edi, eax
movq    xmm2, qword ptr [esp+90h]
mov     eax, [esp+30h]
adc     esi, edx
add     edi, [esp+24h]
push    0
adc     esi, [esp+24h]
add     edi, [esp+20h]
push    dword ptr [esp+30h]
adc     esi, [esp+78h]
mov     [esp+120h], edi
mov     [esp+124h], esi
movq    xmm1, qword ptr [esp+120h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+130h]
paddq   xmm1, xmmword ptr [esp+178h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1c8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+0a4h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+180h], xmm2
movd    dword ptr [esp+48h], xmm2
mov     dword ptr [esp+44h], 0
movaps  xmmword ptr [esp+80h], xmm0
call    __allmul
mov     edi, [esp+48h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0a4h]
mov     [esp+40h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a8h]
mov     [esp+58h], eax
mov     [esp+70h], edx
call    __allmul
mov     ecx, [esp+30h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5c3ca
jb      short loc_37a5c3b8
cmp     eax, ecx
jnb     short loc_37a5c3ca
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a5c3e3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+24h], ecx
mov     ecx, [esp+30h]
mov     [esp+28h], ecx
mov     edx, [esp+48h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+138h], ecx
adc     eax, [esp+60h]
mov     [esp+13ch], eax
cmp     eax, [esp+60h]
ja      short loc_37a5c41b
jb      short loc_37a5c409
cmp     ecx, edx
jnb     short loc_37a5c41b
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a5c434
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     eax, [esp+4ch]
mov     [esp+1ch], eax
mov     eax, [esp+48h]
mov     [esp+20h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+30h]
push    esi
push    dword ptr [esp+0a8h]
call    __allmul
movq    xmm0, qword ptr [esp+138h]
add     edi, eax
movq    xmm2, qword ptr [esp+98h]
mov     eax, [esp+50h]
adc     esi, edx
add     edi, [esp+28h]
push    0
adc     esi, [esp+28h]
add     edi, [esp+24h]
push    dword ptr [esp+0c4h]
adc     esi, [esp+24h]
mov     [esp+138h], edi
mov     [esp+13ch], esi
movq    xmm1, qword ptr [esp+138h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+148h]
paddq   xmm1, xmmword ptr [esp+168h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1d8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+0ach]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+170h], xmm2
movd    dword ptr [esp+40h], xmm2
mov     dword ptr [esp+64h], 0
movaps  xmmword ptr [esp+1b0h], xmm0
call    __allmul
mov     edi, [esp+88h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0ach]
mov     [esp+60h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0b0h]
mov     [esp+98h], eax
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+50h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5c547
jb      short loc_37a5c535
cmp     eax, ecx
jnb     short loc_37a5c547
mov     dword ptr [esp+2ch], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a5c560
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     ecx, [esp+54h]
mov     [esp+28h], ecx
mov     ecx, [esp+50h]
mov     [esp+2ch], ecx
mov     edx, [esp+88h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+150h], ecx
adc     eax, [esp+48h]
mov     [esp+154h], eax
cmp     eax, [esp+48h]
ja      short loc_37a5c598
jb      short loc_37a5c589
cmp     ecx, edx
jnb     short loc_37a5c598
mov     esi, 1
mov     dword ptr [esp+24h], 0
jmp     short loc_37a5c5b6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+88h], xmm0
mov     eax, [esp+8ch]
mov     esi, [esp+88h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+0c4h]
push    0
push    dword ptr [esp+0b0h]
call    __allmul
movq    xmm0, qword ptr [esp+150h]
add     eax, edi
movq    xmm2, qword ptr [esp+0a0h]
movaps  xmm6, xmmword ptr [esp+1f0h]
adc     edx, 0
add     eax, [esp+2ch]
movaps  xmm3, xmmword ptr [esp+170h]
adc     edx, [esp+28h]
add     eax, esi
movaps  xmm4, xmmword ptr [esp+180h]
adc     edx, [esp+24h]
sub     dword ptr [esp+0c4h], 1
movaps  xmm5, xmmword ptr [esp+190h]
movaps  xmm7, xmmword ptr [esp+1a0h]
mov     ecx, [esp+30h]
mov     esi, [esp+58h]
mov     edi, [esp+6ch]
mov     [esp+148h], eax
mov     eax, [esp+0e0h]
mov     [esp+14ch], edx
movq    xmm1, qword ptr [esp+148h]
mov     edx, [esp+38h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1e0h]
movq    xmm0, qword ptr [esp+158h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmm1, xmmword ptr [esp+160h]
movaps  xmmword ptr [esp+1e0h], xmm2
movd    eax, xmm2
mov     dword ptr [esp+0e4h], 0
jnz     loc_37a5bc72
mov     edi, [ebp+10h]
xor     esi, esi
nop     dword ptr [eax+eax+00h]
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a806c0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 5
jb      short loc_37a5c6a0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 148h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a80a90
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 3
jb      short loc_37a5c706
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     ecx, [edx+0e0h]
mov     [esp+70h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [edi+0e0h]
mov     [esp+74h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+78h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm2, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
movaps  xmmword ptr [esp+120h], xmm1
movq    xmm1, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+14h], eax
movq    xmm7, qword ptr [esp+10h]
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
punpcklqdq xmm7, xmm0
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+0d0h], xmm2
movaps  xmmword ptr [esp+0f0h], xmm1
movaps  xmmword ptr [esp+110h], xmm7
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+10h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
movq    xmm5, qword ptr [esp+10h]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm6, qword ptr [esp+10h]
movaps  xmmword ptr [esp+100h], xmm5
punpcklqdq xmm6, xmm0
movd    edx, xmm2
mov     dword ptr [esp+3ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+4ch], 0
movd    eax, xmm5
mov     dword ptr [esp+84h], 0
mov     dword ptr [esp+7ch], 40000h
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
and     eax, 0ffff0h
and     ecx, 0ffff0h
add     eax, [esp+78h]
and     edx, 0ffff0h
add     ecx, [esp+74h]
add     edx, [esp+70h]
mov     [esp+28h], eax
movups  xmm4, xmmword ptr [eax]
movups  xmm3, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [edx]
mov     [esp+1ch], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
mov     [esp+20h], edx
pshufd  xmm0, xmm1, 0aah
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
movd    edx, xmm0
pshufd  xmm0, xmm1, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+24h], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movd    xmm1, edx
punpckldq xmm1, xmm2
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm7, ecx
punpckldq xmm7, xmm0
movaps  xmmword ptr [esp+0e0h], xmm7
movaps  xmm0, xmmword ptr [esp+0e0h]
mov     eax, [esp+20h]
punpckldq xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+0d0h]
movaps  xmmword ptr [esp+0e0h], xmm0
pxor    xmm0, xmmword ptr [esp+120h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm3, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+1ch]
movd    xmm3, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+0f0h]
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+130h], xmm3
pxor    xmm0, xmmword ptr [esp+110h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm4, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm4
pshufd  xmm0, xmm4, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+28h]
movd    xmm3, ecx
xor     ecx, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
movaps  xmm1, xmmword ptr [esp+0e0h]
pxor    xmm3, xmm5
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+140h], xmm3
pxor    xmm0, xmm6
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
movd    eax, xmm1
xor     edx, edx
movaps  xmm1, xmmword ptr [esp+130h]
movaps  xmm0, xmm1
mov     [esp+54h], esi
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+20h], ecx
and     ecx, 0ffff0h
add     ecx, [esp+70h]
mov     [esp+38h], ecx
push    0
movd    dword ptr [esp+38h], xmm0
movaps  xmm0, xmm3
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+18h], eax
mov     eax, [ecx+8]
mov     [esp+9ch], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0a0h], eax
movd    eax, xmm1
push    esi
push    0
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+4ch], ecx
and     ecx, 0ffff0h
add     ecx, [esp+80h]
mov     [esp+54h], ecx
push    edi
mov     [esp+20h], edi
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
mov     [esp+0c4h], eax
movd    eax, xmm3
movd    dword ptr [esp+34h], xmm0
or      edx, eax
mov     ecx, edx
mov     [esp+70h], edx
and     ecx, 0ffff0h
add     ecx, [esp+88h]
mov     [esp+90h], ecx
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0dch], eax
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+20h], eax
push    0
push    dword ptr [esp+20h]
mov     [esp+1ch], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5ce7c
jb      short loc_37a5ce6a
cmp     eax, ecx
jnb     short loc_37a5ce7c
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a5ce95
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+28h]
mov     [esp+20h], ecx
mov     edx, [esp+18h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+90h], ecx
adc     eax, [esp+0ch]
mov     [esp+94h], eax
cmp     eax, [esp+0ch]
ja      short loc_37a5cecd
jb      short loc_37a5cebb
cmp     ecx, edx
jnb     short loc_37a5cecd
mov     dword ptr [esp+0ch], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a5cee6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+18h], eax
mov     eax, [esp+28h]
mov     [esp+0ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+58h]
push    esi
push    dword ptr [esp+20h]
call    __allmul
movq    xmm0, qword ptr [esp+90h]
add     edi, eax
movq    xmm2, qword ptr [esp+10h]
mov     eax, [esp+38h]
adc     esi, edx
add     edi, [esp+20h]
push    0
adc     esi, [esp+20h]
add     edi, [esp+10h]
push    dword ptr [esp+38h]
adc     esi, [esp+20h]
mov     [esp+90h], edi
mov     [esp+94h], esi
movq    xmm1, qword ptr [esp+90h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0a0h]
paddq   xmm1, xmmword ptr [esp+0d8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+0e8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+0e0h], xmm2
movd    dword ptr [esp+30h], xmm2
mov     dword ptr [esp+4ch], 0
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+74h]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+78h]
mov     [esp+50h], eax
mov     [esp+64h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5cfe1
jb      short loc_37a5cfcf
cmp     eax, ecx
jnb     short loc_37a5cfe1
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a5cffa
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+38h]
mov     [esp+18h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0a8h], ecx
adc     eax, [esp+54h]
mov     [esp+0ach], eax
cmp     eax, [esp+54h]
ja      short loc_37a5d032
jb      short loc_37a5d020
cmp     ecx, edx
jnb     short loc_37a5d032
mov     dword ptr [esp+0ch], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a5d04b
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+28h], eax
mov     eax, [esp+40h]
mov     [esp+0ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+38h]
push    esi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0a8h]
add     edi, eax
movq    xmm2, qword ptr [esp+68h]
mov     eax, [esp+48h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+20h]
add     edi, [esp+10h]
push    dword ptr [esp+28h]
adc     esi, [esp+30h]
mov     [esp+0a8h], edi
mov     [esp+0ach], esi
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0b8h]
paddq   xmm1, xmmword ptr [esp+0f8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+138h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+64h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+100h], xmm2
movd    dword ptr [esp+2ch], xmm2
mov     dword ptr [esp+5ch], 0
movaps  xmmword ptr [esp+120h], xmm0
call    __allmul
mov     esi, [esp+60h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+64h]
mov     [esp+58h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+68h]
mov     [esp+70h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a5d146
jb      short loc_37a5d134
cmp     eax, ecx
jnb     short loc_37a5d146
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+34h], 1
jmp     short loc_37a5d15f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+34h], ecx
mov     ecx, [esp+48h]
mov     [esp+28h], ecx
mov     edx, [esp+60h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c0h], ecx
adc     eax, [esp+40h]
mov     [esp+0c4h], eax
cmp     eax, [esp+40h]
ja      short loc_37a5d197
jb      short loc_37a5d185
cmp     ecx, edx
jnb     short loc_37a5d197
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+0ch], 0
jmp     short loc_37a5d1b0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+0ch], eax
mov     eax, [esp+60h]
mov     [esp+18h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+28h]
push    edi
push    dword ptr [esp+68h]
call    __allmul
movq    xmm0, qword ptr [esp+0c0h]
add     esi, eax
mov     eax, [esp+80h]
movq    xmm5, qword ptr [esp+58h]
adc     edi, edx
add     esi, [esp+28h]
movaps  xmm6, xmmword ptr [esp+140h]
adc     edi, [esp+34h]
add     esi, [esp+18h]
mov     ecx, [esp+1ch]
adc     edi, [esp+0ch]
sub     dword ptr [esp+7ch], 1
mov     edx, [esp+20h]
mov     [esp+0b8h], esi
mov     [esp+0bch], edi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movq    xmm0, qword ptr [esp+0c8h]
punpcklqdq xmm5, xmm0
pxor    xmm5, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+100h], xmm5
movd    eax, xmm5
mov     dword ptr [esp+84h], 0
jnz     loc_37a5c910
mov     edi, [ebp+10h]
xor     esi, esi
nop     word ptr [eax+eax+00h]
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a81400
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a5d260
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 1b8h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a80a90
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 4
jb      short loc_37a5d2c6
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+8ch], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+98h], ecx
mov     ecx, [edi+0e0h]
mov     [esp+90h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+94h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm3, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
movq    xmm2, qword ptr [esp+10h]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+14h], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
movaps  xmmword ptr [esp+170h], xmm1
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+120h], xmm3
movaps  xmmword ptr [esp+140h], xmm2
movaps  xmmword ptr [esp+180h], xmm1
mov     [esp+14h], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+10h], ecx
movq    xmm0, qword ptr [esp+10h]
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+14h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
movq    xmm1, qword ptr [esp+10h]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [ebp+14h]
mov     [esp+10h], ecx
movq    xmm4, qword ptr [esp+10h]
punpcklqdq xmm4, xmm0
mov     edx, [eax+0ch]
movaps  xmmword ptr [esp+150h], xmm1
movaps  xmmword ptr [esp+0a0h], xmm4
movd    esi, xmm3
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm6, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm6, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm7, qword ptr [esp+10h]
movaps  xmmword ptr [esp+160h], xmm6
punpcklqdq xmm7, xmm0
mov     dword ptr [esp+44h], 0
movd    edx, xmm2
mov     dword ptr [esp+4ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+5ch], 0
movd    eax, xmm6
mov     dword ptr [esp+0b4h], 0
mov     dword ptr [esp+9ch], 40000h
nop
and     eax, 0ffff0h
and     ecx, 0ffff0h
add     eax, [esp+94h]
and     esi, 0ffff0h
add     ecx, [esp+90h]
and     edx, 0ffff0h
add     esi, [esp+8ch]
mov     [esp+3ch], eax
movups  xmm5, xmmword ptr [eax]
movups  xmm4, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [esi]
add     edx, [esp+98h]
mov     [esp+1ch], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
movups  xmm3, xmmword ptr [edx]
mov     [esp+24h], edx
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
pshufd  xmm0, xmm1, 0aah
movd    edx, xmm0
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
pshufd  xmm0, xmm1, 0ffh
movd    ecx, xmm0
mov     [esp+28h], esi
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
mov     [esp+20h], edx
movaps  xmmword ptr [esp+0b0h], xmm5
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+28h]
movd    xmm5, ecx
punpckldq xmm5, xmm0
movd    xmm1, edx
movaps  xmmword ptr [esp+130h], xmm5
movaps  xmm0, xmmword ptr [esp+130h]
punpckldq xmm1, xmm2
punpckldq xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+120h]
movaps  xmmword ptr [esp+130h], xmm0
pxor    xmm0, xmmword ptr [esp+170h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm3, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm3, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+140h]
mov     eax, [esp+24h]
movaps  xmm0, xmm3
pxor    xmm0, xmmword ptr [esp+180h]
movaps  xmmword ptr [esp+190h], xmm3
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm4, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm4
pshufd  xmm0, xmm4, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+1ch]
movd    xmm4, ecx
punpckldq xmm4, xmm0
punpckldq xmm4, xmm1
pxor    xmm4, xmmword ptr [esp+150h]
movaps  xmm0, xmm4
movaps  xmmword ptr [esp+1a0h], xmm4
pxor    xmm0, xmmword ptr [esp+0a0h]
movups  xmmword ptr [eax], xmm0
movaps  xmm5, xmmword ptr [esp+0b0h]
pshufd  xmm0, xmm5, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm5, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+0ch], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm5
pshufd  xmm0, xmm5, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm5
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+0ch]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm5
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+0ch]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+0ch]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm5
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+3ch]
movd    xmm5, ecx
xor     ecx, ecx
punpckldq xmm5, xmm0
punpckldq xmm5, xmm1
movaps  xmm1, xmmword ptr [esp+130h]
pxor    xmm5, xmm6
movaps  xmm0, xmm5
movaps  xmmword ptr [esp+1b0h], xmm5
pxor    xmm0, xmm7
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
movd    eax, xmm1
xor     edx, edx
movaps  xmm0, xmm3
mov     [esp+64h], esi
psrldq  xmm0, 4
or      ecx, eax
movd    dword ptr [esp+2ch], xmm0
mov     [esp+28h], ecx
movaps  xmm0, xmm4
and     ecx, 0ffff0h
psrldq  xmm0, 4
add     ecx, [esp+8ch]
mov     [esp+40h], ecx
push    0
movd    dword ptr [esp+40h], xmm0
movaps  xmm0, xmm5
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+18h], eax
mov     eax, [ecx+8]
mov     [esp+0d4h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0d8h], eax
movd    eax, xmm3
push    esi
push    0
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+0ach], ecx
and     ecx, 0ffff0h
add     ecx, [esp+0a4h]
mov     [esp+54h], ecx
push    edi
mov     [esp+20h], edi
mov     eax, [ecx]
mov     [esp+90h], eax
mov     eax, [ecx+4]
mov     [esp+94h], eax
mov     eax, [ecx+8]
mov     [esp+0f8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0fch], eax
movd    eax, xmm4
movd    dword ptr [esp+30h], xmm0
or      ecx, eax
mov     [esp+60h], ecx
and     ecx, 0ffff0h
add     ecx, [esp+0a0h]
mov     [esp+68h], ecx
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+110h], eax
mov     eax, [ecx+0ch]
mov     [esp+114h], eax
movd    eax, xmm5
or      edx, eax
mov     ecx, edx
mov     [esp+88h], edx
and     ecx, 0ffff0h
add     ecx, [esp+0a4h]
mov     [esp+0c0h], ecx
mov     eax, [ecx]
mov     [esp+80h], eax
mov     eax, [ecx+4]
mov     [esp+84h], eax
mov     eax, [ecx+8]
mov     [esp+128h], eax
mov     eax, [ecx+0ch]
mov     [esp+12ch], eax
call    __allmul
push    0
push    dword ptr [esp+2ch]
mov     [esp+38h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+2ch]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+20h]
mov     [esp+1ch], edx
call    __allmul
mov     ecx, [esp+30h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5dcad
jb      short loc_37a5dc9b
cmp     eax, ecx
jnb     short loc_37a5dcad
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a5dcc6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+24h], ecx
mov     ecx, [esp+30h]
mov     [esp+28h], ecx
mov     edx, [esp+1ch]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c8h], ecx
adc     eax, [esp+0ch]
mov     [esp+0cch], eax
cmp     eax, [esp+0ch]
ja      short loc_37a5dcfe
jb      short loc_37a5dcec
cmp     ecx, edx
jnb     short loc_37a5dcfe
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+0ch], 0
jmp     short loc_37a5dd17
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     [esp+0ch], eax
mov     eax, [esp+30h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+68h]
push    esi
push    dword ptr [esp+20h]
call    __allmul
movq    xmm0, qword ptr [esp+0c8h]
add     edi, eax
movq    xmm2, qword ptr [esp+10h]
mov     eax, [esp+40h]
adc     esi, edx
add     edi, [esp+28h]
push    0
adc     esi, [esp+28h]
add     edi, [esp+20h]
push    dword ptr [esp+30h]
adc     esi, [esp+14h]
mov     [esp+0c8h], edi
mov     [esp+0cch], esi
movq    xmm1, qword ptr [esp+0c8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0d8h]
paddq   xmm1, xmmword ptr [esp+128h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+138h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+8ch]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+130h], xmm2
movd    dword ptr [esp+38h], xmm2
mov     dword ptr [esp+54h], 0
movaps  xmmword ptr [esp+180h], xmm0
call    __allmul
mov     edi, [esp+0a0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+8ch]
mov     [esp+50h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+90h]
mov     [esp+0b0h], eax
mov     [esp+74h], edx
call    __allmul
mov     ecx, [esp+40h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5de21
jb      short loc_37a5de0f
cmp     eax, ecx
jnb     short loc_37a5de21
mov     dword ptr [esp+0ch], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a5de3a
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+30h], ecx
mov     ecx, [esp+40h]
mov     [esp+0ch], ecx
mov     edx, [esp+0a0h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e0h], ecx
adc     eax, [esp+64h]
mov     [esp+0e4h], eax
cmp     eax, [esp+64h]
ja      short loc_37a5de75
jb      short loc_37a5de63
cmp     ecx, edx
jnb     short loc_37a5de75
mov     dword ptr [esp+24h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a5de97
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0a0h], xmm0
mov     eax, [esp+0a4h]
mov     [esp+1ch], eax
mov     eax, [esp+0a0h]
mov     [esp+24h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+30h]
push    esi
push    dword ptr [esp+90h]
call    __allmul
movq    xmm0, qword ptr [esp+0e0h]
add     edi, eax
movq    xmm2, qword ptr [esp+80h]
mov     eax, [esp+48h]
adc     esi, edx
add     edi, [esp+24h]
push    0
adc     esi, [esp+20h]
add     edi, [esp+10h]
push    dword ptr [esp+40h]
adc     esi, [esp+38h]
mov     [esp+0e0h], edi
mov     [esp+0e4h], esi
movq    xmm1, qword ptr [esp+0e0h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+0f0h]
paddq   xmm1, xmmword ptr [esp+148h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+198h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+150h], xmm2
movd    dword ptr [esp+34h], xmm2
mov     dword ptr [esp+5ch], 0
movaps  xmmword ptr [esp+190h], xmm0
call    __allmul
mov     esi, [esp+50h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+74h]
mov     [esp+58h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+78h]
mov     [esp+60h], eax
mov     [esp+0b0h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a5df9b
jb      short loc_37a5df89
cmp     eax, ecx
jnb     short loc_37a5df9b
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+0ch], 1
jmp     short loc_37a5dfb4
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+0ch], ecx
mov     ecx, [esp+48h]
mov     [esp+1ch], ecx
mov     edx, [esp+50h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0f8h], ecx
adc     eax, [esp+0a0h]
mov     [esp+0fch], eax
cmp     eax, [esp+0a0h]
ja      short loc_37a5dff2
jb      short loc_37a5dfe0
cmp     ecx, edx
jnb     short loc_37a5dff2
mov     dword ptr [esp+30h], 1
mov     dword ptr [esp+2ch], 0
jmp     short loc_37a5e00b
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     eax, [esp+54h]
mov     [esp+2ch], eax
mov     eax, [esp+50h]
mov     [esp+30h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+40h]
push    edi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0f8h]
add     esi, eax
movq    xmm2, qword ptr [esp+68h]
mov     eax, [esp+58h]
adc     edi, edx
add     esi, [esp+30h]
push    0
adc     edi, [esp+30h]
add     esi, [esp+20h]
push    dword ptr [esp+24h]
adc     edi, [esp+14h]
mov     [esp+0f8h], esi
mov     [esp+0fch], edi
movq    xmm1, qword ptr [esp+0f8h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+108h]
paddq   xmm1, xmmword ptr [esp+158h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+1a8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+7ch]
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+160h], xmm2
movd    dword ptr [esp+2ch], xmm2
mov     dword ptr [esp+6ch], 0
movaps  xmmword ptr [esp+0b0h], xmm0
call    __allmul
mov     edi, [esp+78h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+7ch]
mov     [esp+68h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+80h]
mov     [esp+88h], eax
mov     [esp+60h], edx
call    __allmul
mov     ecx, [esp+58h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a5e10c
jb      short loc_37a5e0fa
cmp     eax, ecx
jnb     short loc_37a5e10c
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a5e125
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     ecx, [esp+5ch]
mov     [esp+30h], ecx
mov     ecx, [esp+58h]
mov     [esp+3ch], ecx
mov     edx, [esp+78h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+110h], ecx
adc     eax, [esp+50h]
mov     [esp+114h], eax
cmp     eax, [esp+50h]
ja      short loc_37a5e15a
jb      short loc_37a5e14b
cmp     ecx, edx
jnb     short loc_37a5e15a
mov     esi, 1
mov     dword ptr [esp+2ch], 0
jmp     short loc_37a5e16f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+78h], xmm0
mov     eax, [esp+7ch]
mov     esi, [esp+78h]
mov     [esp+2ch], eax
push    0
push    dword ptr [esp+24h]
push    0
push    dword ptr [esp+80h]
call    __allmul
movq    xmm0, qword ptr [esp+110h]
add     eax, edi
movq    xmm6, qword ptr [esp+70h]
movaps  xmm7, xmmword ptr [esp+1b0h]
adc     edx, 0
add     eax, [esp+3ch]
mov     ecx, [esp+1ch]
adc     edx, [esp+30h]
add     eax, esi
mov     esi, [esp+28h]
adc     edx, [esp+2ch]
sub     dword ptr [esp+9ch], 1
mov     [esp+108h], eax
mov     eax, [esp+0b0h]
mov     [esp+10ch], edx
movq    xmm1, qword ptr [esp+108h]
mov     edx, [esp+24h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+160h]
movq    xmm0, qword ptr [esp+118h]
punpcklqdq xmm6, xmm0
pxor    xmm6, xmm1
movups  xmmword ptr [eax], xmm1
movaps  xmmword ptr [esp+160h], xmm6
movd    eax, xmm6
mov     dword ptr [esp+0b4h], 0
jnz     loc_37a5d570
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a81400
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a5e222
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     edx, [ebp+0ch]
sub     esp, 98h
push    esi
push    edi
cmp     edx, 2bh
jnb     short loc_37a5f639
mov     eax, [ebp+10h]
xorps   xmm0, xmm0
movups  xmmword ptr [eax], xmm0
movups  xmmword ptr [eax+10h], xmm0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+14h]
mov     esi, [ebp+8]
push    ecx
mov     ecx, esi
push    dword ptr [edi]
call    sub_37a181e0
mov     ecx, [edi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    sub_37a80380
mov     edx, [edi]
mov     [esp+84h], edx
mov     dword ptr [esp+54h], 40000h
mov     eax, [edx+0c0h]
xor     eax, [esi+23h]
mov     ecx, [edx+2ch]
xor     ecx, [edx+0ch]
mov     [esp+78h], eax
mov     eax, [edx+0c4h]
xor     eax, [esi+27h]
mov     esi, [edx+20h]
xor     esi, [edx]
mov     edi, [edx+0e0h]
mov     [esp+7ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+50h], eax
mov     [esp+5ch], eax
mov     eax, [edx+28h]
xor     eax, [edx+8]
mov     [esp+1ch], ecx
mov     [esp+64h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+18h], eax
mov     [esp+60h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+40h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+44h], eax
mov     eax, [edx+34h]
movq    xmm0, qword ptr [esp+40h]
xor     eax, [edx+14h]
mov     [esp+40h], ecx
mov     [esp+44h], eax
movq    xmm2, qword ptr [esp+40h]
mov     [esp+2ch], edi
mov     [esp+58h], esi
punpcklqdq xmm2, xmm0
nop     dword ptr [eax+00000000h]
movq    xmm0, qword ptr [esp+60h]
mov     eax, esi
movq    xmm1, qword ptr [esp+58h]
and     eax, 0ffff0h
add     edi, eax
punpcklqdq xmm1, xmm0
xor     ecx, ecx
mov     [esp+20h], edi
push    0
movups  xmm3, xmmword ptr [edi]
aesenc  xmm3, xmm1
movaps  xmm1, xmm3
movaps  xmmword ptr [esp+94h], xmm3
pxor    xmm1, xmm2
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    dword ptr [edi+4], xmm0
or      ecx, eax
movhlps xmm1, xmm1
mov     [edi], ecx
movaps  xmm0, xmm1
movd    eax, xmm1
xor     edi, edi
psrldq  xmm0, 4
movd    dword ptr [esp+28h], xmm0
or      edi, eax
movd    eax, xmm0
mov     edx, edi
movaps  xmm0, xmm3
psrldq  xmm0, 4
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
xor     eax, [esp+28h]
and     edx, 3
mov     ecx, [esp+24h]
shl     edx, 1ch
xor     edx, edi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm3
movd    edx, xmm0
or      ecx, eax
mov     eax, ecx
mov     [esp+18h], ecx
mov     ecx, [esp+30h]
and     eax, 0ffff0h
add     ecx, eax
mov     [esp+70h], edx
mov     [esp+78h], ecx
push    edx
push    0
mov     edi, [ecx]
mov     ecx, [ecx+4]
mov     [esp+34h], ecx
mov     ecx, [esp+38h]
add     ecx, 8
mov     [esp+30h], edi
add     eax, ecx
mov     [esp+2ch], eax
push    edi
mov     ecx, [eax]
mov     eax, [eax+4]
mov     [esp+90h], ecx
mov     [esp+50h], eax
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+38h], eax
mov     edi, edx
push    0
push    dword ptr [esp+30h]
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+40h], eax
push    0
push    dword ptr [esp+34h]
mov     [esp+4ch], edx
call    __allmul
mov     ecx, eax
mov     eax, [esp+30h]
add     ecx, eax
adc     edx, edi
mov     [esp+70h], edx
cmp     edx, edi
ja      short loc_37a5f85d
jb      short loc_37a5f84b
cmp     ecx, eax
jnb     short loc_37a5f85d
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+4ch], 1
jmp     short loc_37a5f876
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     [esp+4ch], eax
mov     eax, [esp+30h]
mov     [esp+14h], eax
mov     edx, [esp+38h]
xor     eax, eax
mov     edi, [esp+3ch]
add     eax, edx
mov     [esp+38h], eax
adc     ecx, edi
mov     [esp+3ch], ecx
cmp     ecx, edi
ja      short loc_37a5f8a5
jb      short loc_37a5f896
cmp     eax, edx
jnb     short loc_37a5f8a5
mov     edi, 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a5f8c3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+88h], xmm0
mov     eax, [esp+8ch]
mov     edi, [esp+88h]
mov     [esp+30h], eax
push    0
push    dword ptr [esp+70h]
push    0
push    dword ptr [esp+34h]
call    __allmul
add     eax, [esp+70h]
mov     ecx, [esp+74h]
adc     edx, 0
movaps  xmm2, xmmword ptr [esp+90h]
add     eax, [esp+14h]
adc     edx, [esp+4ch]
add     eax, edi
mov     edi, [esp+50h]
adc     edx, [esp+30h]
add     esi, eax
mov     eax, [esp+1ch]
adc     edi, edx
mov     [ecx], esi
mov     edx, [esp+18h]
add     edx, [esp+38h]
mov     [ecx+4], edi
mov     ecx, edx
adc     eax, [esp+3ch]
xor     ecx, [esp+78h]
xor     edi, [esp+28h]
xor     esi, [esp+24h]
mov     [esp+18h], edx
mov     edx, [esp+20h]
mov     [esp+1ch], eax
xor     eax, [esp+7ch]
mov     [esp+50h], edi
mov     [edx], ecx
mov     ecx, edx
mov     edx, [esp+18h]
xor     edx, [esp+80h]
mov     [esp+5ch], edi
mov     edi, [esp+2ch]
mov     [ecx+4], eax
mov     eax, [esp+1ch]
xor     eax, [esp+40h]
sub     dword ptr [esp+54h], 1
mov     [esp+58h], esi
mov     [esp+18h], edx
mov     [esp+60h], edx
mov     [esp+1ch], eax
mov     [esp+64h], eax
jnz     loc_37a5f700
mov     esi, [esp+84h]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    sub_37a806c0
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 168h
push    esi
push    edi
cmp     eax, 2bh
jnb     short loc_37a60ccb
push    60h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a80380
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 3
jb      short loc_37a60cd0
mov     eax, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     [esp+34h], edi
mov     ecx, [edx+0e0h]
mov     [esp+70h], ecx
mov     eax, [edi+0e0h]
mov     ecx, [esi+0e0h]
mov     edi, [ebp+8]
mov     [esp+78h], eax
mov     eax, [ebp+8]
mov     [esp+74h], ecx
mov     ecx, [edx+0c0h]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
xor     eax, [edi+27h]
mov     [esp+14h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+10h], ecx
movq    xmm0, qword ptr [esp+10h]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
movq    xmm3, qword ptr [esp+10h]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [ebp+0ch]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, edi
mov     [esp+10h], ecx
movq    xmm6, qword ptr [esp+10h]
punpcklqdq xmm6, xmm0
mov     ecx, [eax+edx+23h]
xor     ecx, [esi+0c0h]
mov     eax, [eax+edx+27h]
xor     eax, [esi+0c4h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
movaps  xmmword ptr [esp+130h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
movaps  xmmword ptr [esp+140h], xmm1
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
movaps  xmmword ptr [esp+0e0h], xmm3
punpcklqdq xmm1, xmm0
mov     eax, [esi+3ch]
xorps   xmm2, xmm2
xor     eax, [esi+1ch]
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+10h], ecx
movq    xmm0, qword ptr [esp+10h]
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, edi
mov     edi, [esp+34h]
mov     [esp+10h], ecx
movq    xmm5, qword ptr [esp+10h]
mov     ecx, [eax+edx*2+23h]
xor     ecx, [edi+0c0h]
mov     eax, [eax+edx*2+27h]
xor     eax, [edi+0c4h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+14h], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+14h], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
movaps  xmmword ptr [esp+150h], xmm2
movq    xmm2, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     [esp+14h], eax
movq    xmm4, qword ptr [esp+10h]
movaps  xmmword ptr [esp+0d0h], xmm1
movaps  xmmword ptr [esp+100h], xmm2
punpcklqdq xmm4, xmm0
movd    esi, xmm3
mov     dword ptr [esp+3ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+4ch], 0
movd    eax, xmm2
mov     dword ptr [esp+84h], 0
mov     dword ptr [esp+34h], 40000h
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
and     eax, 0ffff0h
and     ecx, 0ffff0h
add     eax, [esp+78h]
and     esi, 0ffff0h
add     ecx, [esp+74h]
add     esi, [esp+70h]
mov     [esp+18h], eax
mov     [esp+1ch], ecx
movups  xmm0, xmmword ptr [ecx]
xor     ecx, ecx
movups  xmm7, xmmword ptr [esi]
movaps  xmmword ptr [esp+0f0h], xmm0
movups  xmm0, xmmword ptr [eax]
aesenc  xmm7, xmm3
movaps  xmmword ptr [esp+110h], xmm0
movaps  xmm1, xmm7
pxor    xmm1, xmm6
movaps  xmm3, xmmword ptr [esp+0f0h]
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    dword ptr [esi+4], xmm0
or      ecx, eax
movhlps xmm1, xmm1
mov     [esi], ecx
movaps  xmm0, xmm1
aesenc  xmm3, xmmword ptr [esp+0d0h]
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
movaps  xmm1, xmm3
mov     [esp+24h], esi
pxor    xmm1, xmm5
xor     esi, esi
movaps  xmmword ptr [esp+120h], xmm7
or      esi, eax
movaps  xmmword ptr [esp+0f0h], xmm3
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movaps  xmm0, xmm1
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
psrldq  xmm0, 4
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
xor     eax, eax
sar     edx, cl
xor     eax, edi
mov     ecx, [esp+24h]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     esi, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+1ch]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
movzx   ecx, dl
shr     eax, 18h
shr     ecx, 2
mov     al, dl
and     ecx, 0ch
movaps  xmm5, xmmword ptr [esp+110h]
and     al, 1
add     al, al
mov     edx, 7531h
or      ecx, eax
xor     eax, eax
sar     edx, cl
xor     eax, edi
mov     ecx, [esp+1ch]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     esi, esi
aesenc  xmm5, xmm2
mov     [ecx+0ch], eax
movaps  xmm1, xmm5
mov     [ecx+8], edx
pxor    xmm1, xmm4
xor     ecx, ecx
movd    eax, xmm1
movaps  xmm0, xmm1
movaps  xmmword ptr [esp+110h], xmm5
psrldq  xmm0, 4
or      ecx, eax
movhlps xmm1, xmm1
mov     eax, [esp+18h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movaps  xmm0, xmm7
movd    eax, xmm1
psrldq  xmm0, 4
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+18h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
mov     [ecx+0ch], eax
movaps  xmm0, xmm3
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm7
psrldq  xmm0, 4
mov     [esp+54h], esi
or      ecx, eax
movd    dword ptr [esp+30h], xmm0
mov     [esp+18h], ecx
and     ecx, 0ffff0h
add     ecx, [esp+70h]
mov     [esp+38h], ecx
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+14h], eax
mov     eax, [ecx+8]
mov     [esp+98h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+9ch], eax
movd    eax, xmm3
mov     [esp+10h], edi
or      ecx, eax
mov     [esp+40h], ecx
and     ecx, 0ffff0h
add     ecx, [esp+74h]
xor     edx, edx
mov     [esp+48h], ecx
movaps  xmm0, xmm5
push    0
push    esi
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0b8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0bch], eax
movd    eax, xmm5
push    0
psrldq  xmm0, 4
or      edx, eax
movd    dword ptr [esp+88h], xmm0
mov     ecx, edx
mov     [esp+64h], edx
and     ecx, 0ffff0h
add     ecx, [esp+84h]
push    edi
mov     [esp+90h], ecx
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0dch], eax
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+20h]
mov     [esp+2ch], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a61286
jb      short loc_37a61274
cmp     eax, ecx
jnb     short loc_37a61286
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a6129f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+24h], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     edx, [esp+20h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+90h], ecx
adc     eax, [esp+1ch]
mov     [esp+94h], eax
cmp     eax, [esp+1ch]
ja      short loc_37a612d7
jb      short loc_37a612c5
cmp     ecx, edx
jnb     short loc_37a612d7
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a612f0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+20h], eax
mov     eax, [esp+28h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+58h]
push    esi
push    dword ptr [esp+20h]
call    __allmul
movq    xmm0, qword ptr [esp+90h]
add     edi, eax
mov     eax, [esp+38h]
movq    xmm2, qword ptr [esp+10h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+28h]
add     edi, [esp+20h]
push    dword ptr [esp+34h]
adc     esi, [esp+28h]
mov     [esp+90h], edi
mov     [esp+94h], esi
movq    xmm1, qword ptr [esp+90h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0e8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+44h], 0
pxor    xmm0, xmmword ptr [esp+138h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0a0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+128h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+6ch]
movaps  xmmword ptr [esp+0f0h], xmm2
movd    dword ptr [esp+34h], xmm2
movaps  xmmword ptr [esp+170h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+6ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+70h]
mov     [esp+50h], eax
mov     [esp+64h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a613f7
jb      short loc_37a613e5
cmp     eax, ecx
jnb     short loc_37a613f7
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a61410
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+18h], ecx
mov     ecx, [esp+38h]
mov     [esp+20h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0a8h], ecx
adc     eax, [esp+54h]
mov     [esp+0ach], eax
cmp     eax, [esp+54h]
ja      short loc_37a61448
jb      short loc_37a61436
cmp     ecx, edx
jnb     short loc_37a61448
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a61461
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+28h], eax
mov     eax, [esp+40h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+34h]
push    esi
push    dword ptr [esp+70h]
call    __allmul
movq    xmm0, qword ptr [esp+0a8h]
add     edi, eax
mov     eax, [esp+48h]
movq    xmm2, qword ptr [esp+60h]
adc     esi, edx
add     edi, [esp+20h]
push    0
adc     esi, [esp+1ch]
add     edi, [esp+20h]
push    dword ptr [esp+80h]
adc     esi, [esp+30h]
mov     [esp+0a8h], edi
mov     [esp+0ach], esi
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0d8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+54h], 0
pxor    xmm0, xmmword ptr [esp+148h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0b8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+0f8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movaps  xmmword ptr [esp+0e0h], xmm2
movd    dword ptr [esp+2ch], xmm2
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     esi, [esp+58h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+74h]
mov     [esp+58h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+78h]
mov     [esp+68h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a6156b
jb      short loc_37a61559
cmp     eax, ecx
jnb     short loc_37a6156b
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a61584
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+30h], ecx
mov     ecx, [esp+48h]
mov     [esp+28h], ecx
mov     edx, [esp+58h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c0h], ecx
adc     eax, [esp+40h]
mov     [esp+0c4h], eax
cmp     eax, [esp+40h]
ja      short loc_37a615bc
jb      short loc_37a615aa
cmp     ecx, edx
jnb     short loc_37a615bc
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a615d5
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     eax, [esp+5ch]
mov     [esp+18h], eax
mov     eax, [esp+58h]
mov     [esp+20h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+80h]
push    edi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0c0h]
add     esi, eax
mov     eax, [esp+80h]
movq    xmm2, qword ptr [esp+68h]
adc     edi, edx
add     esi, [esp+28h]
movaps  xmm4, xmmword ptr [esp+110h]
adc     edi, [esp+30h]
add     esi, [esp+20h]
movaps  xmm3, xmmword ptr [esp+0e0h]
adc     edi, [esp+18h]
sub     dword ptr [esp+34h], 1
movaps  xmm5, xmmword ptr [esp+120h]
movaps  xmm6, xmmword ptr [esp+160h]
mov     ecx, [esp+1ch]
mov     [esp+0b8h], esi
mov     esi, [esp+24h]
mov     [esp+0bch], edi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movaps  xmm0, xmm1
mov     dword ptr [esp+84h], 0
pxor    xmm0, xmmword ptr [esp+150h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0c8h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movaps  xmmword ptr [esp+100h], xmm2
movd    eax, xmm2
jnz     loc_37a60f70
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a806c0
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a616a6
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 178h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a6367b
push    60h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+8]
xor     esi, esi
mov     [esp+14h], eax
push    ecx
mov     ecx, [ebp+14h]
mov     edx, edi
push    dword ptr [ecx+esi*4]
mov     ecx, eax
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a80a90
mov     eax, [esp+14h]
inc     esi
add     eax, edi
mov     [esp+14h], eax
cmp     esi, 3
jb      short loc_37a63684
mov     eax, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     [esp+34h], edi
mov     ecx, [edx+0e0h]
mov     [esp+74h], ecx
mov     eax, [edi+0e0h]
mov     ecx, [esi+0e0h]
mov     edi, [ebp+8]
mov     [esp+7ch], eax
mov     eax, [ebp+8]
mov     [esp+78h], ecx
mov     ecx, [edx+0c0h]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
xor     eax, [edi+27h]
mov     [esp+0ch], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm2, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [ebp+0ch]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     [esp+8], ecx
movaps  xmmword ptr [esp+130h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     ecx, [eax+edx+23h]
xor     ecx, [esi+0c0h]
mov     eax, [eax+edx+27h]
xor     eax, [esi+0c4h]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
movaps  xmmword ptr [esp+120h], xmm1
xorps   xmm1, xmm1
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movaps  xmmword ptr [esp+140h], xmm1
movq    xmm1, qword ptr [esp+8]
movaps  xmmword ptr [esp+0d0h], xmm2
mov     eax, [esi+3ch]
xorps   xmm3, xmm3
xor     eax, [esi+1ch]
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     edi, [esp+34h]
mov     [esp+8], ecx
movq    xmm7, qword ptr [esp+8]
mov     ecx, [eax+edx*2+23h]
mov     eax, [eax+edx*2+27h]
xor     ecx, [edi+0c0h]
xor     eax, [edi+0c4h]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm6, qword ptr [esp+8]
movaps  xmmword ptr [esp+0f0h], xmm1
movaps  xmmword ptr [esp+110h], xmm7
movaps  xmmword ptr [esp+160h], xmm3
movaps  xmmword ptr [esp+100h], xmm5
punpcklqdq xmm6, xmm0
movd    edx, xmm2
mov     dword ptr [esp+3ch], 0
movd    ecx, xmm1
mov     dword ptr [esp+4ch], 0
movd    eax, xmm5
mov     dword ptr [esp+84h], 0
mov     dword ptr [esp+34h], 40000h
nop     dword ptr [eax+eax+00h]
and     eax, 0ffff0h
and     ecx, 0ffff0h
add     eax, [esp+7ch]
and     edx, 0ffff0h
add     ecx, [esp+78h]
add     edx, [esp+74h]
mov     [esp+18h], eax
movups  xmm4, xmmword ptr [eax]
movups  xmm3, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [edx]
mov     [esp+1ch], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
mov     [esp+20h], edx
pshufd  xmm0, xmm1, 0aah
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
movd    edx, xmm0
pshufd  xmm0, xmm1, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+24h], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movd    xmm1, edx
punpckldq xmm1, xmm2
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm7, ecx
punpckldq xmm7, xmm0
movaps  xmmword ptr [esp+0e0h], xmm7
movaps  xmm0, xmmword ptr [esp+0e0h]
xor     ecx, ecx
punpckldq xmm0, xmm1
xor     esi, esi
pxor    xmm0, xmmword ptr [esp+0d0h]
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+0e0h], xmm0
pxor    xmm1, xmmword ptr [esp+120h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+20h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm3, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
xor     eax, eax
sar     edx, cl
mov     ecx, [esp+20h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+24h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
mov     edx, ds:dword_37affd40[ecx*4]
movzx   eax, al
movd    xmm2, edi
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm3, ecx
xor     ecx, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+0f0h]
movaps  xmm1, xmm3
movaps  xmmword ptr [esp+150h], xmm3
pxor    xmm1, xmmword ptr [esp+110h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+1ch]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
pshufd  xmm0, xmm4, 55h
or      esi, eax
mov     eax, edi
mov     edx, esi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+1ch]
and     edx, 3
shl     edx, 1ch
xor     eax, edi
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+14h], ecx
shr     eax, 10h
movzx   ecx, al
mov     [esp+24h], edx
pshufd  xmm0, xmm4, 0ffh
movd    eax, xmm4
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+14h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+14h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+14h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
xor     esi, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm4, ecx
xor     ecx, ecx
punpckldq xmm4, xmm0
punpckldq xmm4, xmm1
pxor    xmm4, xmm5
movaps  xmm1, xmm4
movaps  xmmword ptr [esp+170h], xmm4
pxor    xmm1, xmm6
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+18h]
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
mov     [eax], ecx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
or      esi, eax
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
movaps  xmm1, xmmword ptr [esp+0e0h]
mov     al, dl
and     al, 1
movzx   ecx, dl
add     al, al
shr     ecx, 2
and     ecx, 0ch
mov     edx, 7531h
or      ecx, eax
movaps  xmm0, xmm1
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+18h]
xor     eax, edi
and     edx, 3
psrldq  xmm0, 4
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
mov     [ecx+0ch], eax
movaps  xmm0, xmm3
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
xor     edx, edx
psrldq  xmm0, 4
push    0
or      ecx, eax
movd    dword ptr [esp+34h], xmm0
mov     [esp+1ch], ecx
movaps  xmm0, xmm4
and     ecx, 0ffff0h
psrldq  xmm0, 4
add     ecx, [esp+78h]
mov     [esp+3ch], ecx
push    esi
push    0
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+18h], eax
mov     eax, [ecx+8]
mov     [esp+0a4h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0a8h], eax
movd    eax, xmm3
push    edi
mov     [esp+64h], esi
or      ecx, eax
mov     [esp+18h], edi
mov     [esp+50h], ecx
and     ecx, 0ffff0h
add     ecx, [esp+88h]
mov     [esp+58h], ecx
movd    dword ptr [esp+34h], xmm0
mov     eax, [ecx]
mov     [esp+70h], eax
mov     eax, [ecx+4]
mov     [esp+74h], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
mov     [esp+0c4h], eax
movd    eax, xmm4
or      edx, eax
mov     ecx, edx
mov     [esp+68h], edx
and     ecx, 0ffff0h
add     ecx, [esp+8ch]
mov     [esp+90h], ecx
mov     eax, [ecx]
mov     [esp+78h], eax
mov     eax, [ecx+4]
mov     [esp+7ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
mov     [esp+0dch], eax
call    __allmul
mov     [esp+28h], eax
mov     esi, edx
push    0
push    dword ptr [esp+1ch]
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+2ch], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a63fc3
jb      short loc_37a63fb1
cmp     eax, ecx
jnb     short loc_37a63fc3
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a63fdc
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+14h], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     edx, [esp+20h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+90h], ecx
adc     eax, [esp+1ch]
mov     [esp+94h], eax
cmp     eax, [esp+1ch]
ja      short loc_37a64014
jb      short loc_37a64002
cmp     ecx, edx
jnb     short loc_37a64014
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a6402d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+1ch], eax
mov     eax, [esp+28h]
mov     [esp+20h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+58h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+90h]
add     edi, eax
mov     eax, [esp+38h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+18h]
add     edi, [esp+24h]
push    dword ptr [esp+34h]
adc     esi, [esp+24h]
mov     [esp+90h], edi
mov     [esp+94h], esi
movq    xmm1, qword ptr [esp+90h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0d8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+44h], 0
pxor    xmm0, xmmword ptr [esp+138h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0a0h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+0e8h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+6ch]
movaps  xmmword ptr [esp+0e0h], xmm2
movd    dword ptr [esp+30h], xmm2
movaps  xmmword ptr [esp+130h], xmm0
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+6ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+70h]
mov     [esp+50h], eax
mov     [esp+64h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a64134
jb      short loc_37a64122
cmp     eax, ecx
jnb     short loc_37a64134
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a6414d
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+14h], ecx
mov     ecx, [esp+38h]
mov     [esp+18h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0a8h], ecx
adc     eax, [esp+54h]
mov     [esp+0ach], eax
cmp     eax, [esp+54h]
ja      short loc_37a64185
jb      short loc_37a64173
cmp     ecx, edx
jnb     short loc_37a64185
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a6419e
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+28h], eax
mov     eax, [esp+40h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+34h]
push    esi
push    dword ptr [esp+70h]
call    __allmul
movq    xmm0, qword ptr [esp+0a8h]
add     edi, eax
mov     eax, [esp+48h]
movq    xmm2, qword ptr [esp+60h]
adc     esi, edx
add     edi, [esp+18h]
push    0
adc     esi, [esp+18h]
add     edi, [esp+20h]
push    dword ptr [esp+28h]
adc     esi, [esp+30h]
mov     [esp+0a8h], edi
mov     [esp+0ach], esi
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0f8h]
movaps  xmm0, xmm1
mov     dword ptr [esp+54h], 0
pxor    xmm0, xmmword ptr [esp+148h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0b8h]
punpcklqdq xmm2, xmm0
movaps  xmm0, xmmword ptr [esp+158h]
pxor    xmm2, xmm1
push    0
push    dword ptr [esp+74h]
movaps  xmmword ptr [esp+100h], xmm2
movd    dword ptr [esp+2ch], xmm2
movaps  xmmword ptr [esp+120h], xmm0
call    __allmul
mov     esi, [esp+58h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+74h]
mov     [esp+58h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+78h]
mov     [esp+68h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+48h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a642a5
jb      short loc_37a64293
cmp     eax, ecx
jnb     short loc_37a642a5
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a642be
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+30h], ecx
mov     ecx, [esp+48h]
mov     [esp+28h], ecx
mov     edx, [esp+58h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0c0h], ecx
adc     eax, [esp+40h]
mov     [esp+0c4h], eax
cmp     eax, [esp+40h]
ja      short loc_37a642f6
jb      short loc_37a642e4
cmp     ecx, edx
jnb     short loc_37a642f6
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a6430f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     eax, [esp+5ch]
mov     [esp+14h], eax
mov     eax, [esp+58h]
mov     [esp+18h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+28h]
push    edi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0c0h]
add     esi, eax
mov     eax, [esp+80h]
movq    xmm5, qword ptr [esp+68h]
adc     edi, edx
add     esi, [esp+28h]
movaps  xmm6, xmmword ptr [esp+170h]
adc     edi, [esp+30h]
add     esi, [esp+18h]
mov     ecx, [esp+1ch]
adc     edi, [esp+14h]
sub     dword ptr [esp+34h], 1
mov     edx, [esp+20h]
mov     [esp+0b8h], esi
mov     [esp+0bch], edi
movq    xmm1, qword ptr [esp+0b8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movaps  xmm0, xmm1
mov     dword ptr [esp+84h], 0
pxor    xmm0, xmmword ptr [esp+160h]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [esp+0c8h]
punpcklqdq xmm5, xmm0
pxor    xmm5, xmm1
movaps  xmmword ptr [esp+100h], xmm5
movd    eax, xmm5
jnz     loc_37a63930
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a81400
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a643c5
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 88h
mov     edx, [ebp+0ch]
push    esi
mov     esi, [ebp+14h]
push    edi
push    ecx
mov     ecx, [ebp+8]
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    sub_37a81cc0
mov     esi, [esi]
mov     [esp+6ch], esi
mov     dword ptr [esp+40h], 40000h
mov     eax, [esi+20h]
xor     eax, [esi]
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     edi, [esi+0e0h]
mov     edx, [esi+24h]
xor     edx, [esi+4]
mov     [esp+38h], eax
mov     [esp+70h], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+10h], eax
mov     [esp+78h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+3ch], ecx
mov     [esp+7ch], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+64h], eax
mov     eax, [esi+34h]
mov     [esp+60h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
xor     eax, [esi+14h]
movq    xmm0, qword ptr [esp+60h]
mov     esi, [esp+38h]
mov     [esp+64h], eax
lea     eax, [edi+8]
mov     [esp+60h], ecx
movq    xmm2, qword ptr [esp+60h]
mov     [esp+60h], eax
mov     eax, esi
mov     [esp+44h], edi
mov     [esp+0ch], edx
mov     [esp+74h], edx
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+78h]
and     eax, 3ffff0h
movq    xmm1, qword ptr [esp+70h]
xor     ecx, ecx
punpcklqdq xmm1, xmm0
push    0
movups  xmm3, xmmword ptr [eax+edi]
aesenc  xmm3, xmm1
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+84h], xmm3
pxor    xmm0, xmm2
movups  xmmword ptr [eax+edi], xmm0
movaps  xmm0, xmm3
movd    eax, xmm3
psrldq  xmm0, 4
movd    dword ptr [esp+24h], xmm0
or      ecx, eax
mov     eax, ecx
mov     [esp+20h], ecx
and     eax, 3ffff0h
mov     edx, [eax+edi]
lea     ecx, [eax+edi]
mov     [esp+3ch], ecx
mov     ecx, [ecx+4]
mov     [esp+1ch], ecx
lea     ecx, [edi+8]
mov     [esp+18h], edx
add     eax, ecx
mov     edx, [esp+24h]
push    edx
push    0
mov     ecx, [eax]
push    dword ptr [esp+20h]
mov     [esp+60h], eax
mov     eax, [eax+4]
mov     [esp+64h], ecx
mov     [esp+68h], eax
call    __allmul
push    0
push    dword ptr [esp+20h]
mov     [esp+38h], eax
mov     edi, edx
push    0
push    dword ptr [esp+20h]
call    __allmul
push    0
push    dword ptr [esp+20h]
mov     [esp+30h], eax
push    0
push    dword ptr [esp+24h]
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+30h]
add     eax, ecx
adc     edx, edi
mov     [esp+4ch], edx
cmp     edx, edi
ja      short loc_37a66f8a
jb      short loc_37a66f78
cmp     eax, ecx
jnb     short loc_37a66f8a
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a66fa3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+24h], ecx
mov     ecx, [esp+30h]
mov     [esp+1ch], ecx
mov     ecx, [esp+28h]
xor     edi, edi
mov     edx, [esp+48h]
add     edi, ecx
adc     eax, edx
mov     [esp+48h], eax
cmp     eax, edx
ja      short loc_37a66fd1
jb      short loc_37a66fbf
cmp     edi, ecx
jnb     short loc_37a66fd1
mov     dword ptr [esp+28h], 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a66fea
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+30h], eax
mov     eax, [esp+28h]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+24h]
push    0
push    dword ptr [esp+24h]
call    __allmul
add     eax, [esp+4ch]
mov     ecx, [esp+0ch]
adc     edx, 0
add     eax, [esp+1ch]
adc     edx, [esp+24h]
add     eax, [esp+28h]
adc     edx, [esp+30h]
add     esi, eax
mov     eax, esi
adc     ecx, edx
mov     edx, [esp+38h]
add     [esp+10h], edi
mov     edi, [esp+3ch]
adc     edi, [esp+48h]
mov     [edx], esi
mov     edx, ecx
mov     esi, [esp+38h]
mov     [esp+0ch], ecx
mov     [esi+4], edx
mov     esi, [esp+50h]
mov     edx, [esp+10h]
mov     [esi], edx
xor     edx, [esp+54h]
mov     [esi+4], edi
mov     esi, [esp+14h]
xor     esi, eax
xor     edi, [esp+58h]
mov     eax, [esp+18h]
xor     eax, ecx
mov     [esp+10h], edx
mov     ecx, [esp+44h]
mov     [esp+0ch], eax
mov     [esp+74h], eax
mov     eax, esi
and     eax, 3ffff0h
mov     [esp+78h], edx
mov     edx, [esp+60h]
add     ecx, eax
mov     [esp+70h], esi
mov     [esp+3ch], edi
mov     [esp+7ch], edi
mov     eax, [eax+edx]
mov     [esp+54h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
mov     [esp+64h], ecx
push    dword ptr [ecx]
call    __alldiv
movaps  xmm2, xmmword ptr [esp+80h]
mov     edi, eax
mov     eax, edx
mov     ecx, edi
mov     edx, [esp+58h]
xor     [edx+4], eax
xor     [edx], ecx
mov     eax, [esp+54h]
cdq
xor     eax, edi
sub     dword ptr [esp+40h], 1
mov     edi, [esp+44h]
jnz     loc_37a66ea3
mov     esi, [esp+6ch]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    sub_37a82360
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
or      [ecx-33405fceh], bl
rcr     dword ptr [ebx-1d6b2df0h], cl
or      ch, [ebp+20d8607ch]
retn
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 148h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a81cc0
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 3
jb      short loc_37a681f6
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     ecx, [edx+0e0h]
mov     [esp+48h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [edi+0e0h]
mov     [esp+34h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+4ch], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
movq    xmm7, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm3, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
movq    xmm4, qword ptr [esp+8]
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+100h], xmm5
movaps  xmmword ptr [esp+0f0h], xmm3
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     esi, [esp+48h]
mov     [esp+8], ecx
add     esi, 8
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
movq    xmm1, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8ch], esi
mov     esi, [esp+34h]
add     esi, 8
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+90h], esi
mov     esi, [esp+4ch]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
lea     edi, [esi+8]
movaps  xmmword ptr [esp+0e0h], xmm1
mov     [esp+94h], edi
mov     edi, [esp+34h]
punpcklqdq xmm2, xmm0
movd    edx, xmm5
mov     dword ptr [esp+24h], 0
movd    ecx, xmm3
mov     dword ptr [esp+2ch], 0
movd    eax, xmm1
mov     dword ptr [esp+7ch], 0
mov     dword ptr [esp+74h], 40000h
nop     dword ptr [eax]
and     eax, 3ffff0h
and     ecx, 3ffff0h
and     edx, 3ffff0h
add     edx, [esp+48h]
movups  xmm0, xmmword ptr [ecx+edi]
movaps  xmmword ptr [esp+110h], xmm0
movups  xmm0, xmmword ptr [eax+esi]
movups  xmm6, xmmword ptr [edx]
movaps  xmmword ptr [esp+120h], xmm0
aesenc  xmm6, xmm5
movaps  xmm5, xmmword ptr [esp+110h]
movaps  xmm0, xmm6
pxor    xmm0, xmm7
movaps  xmmword ptr [esp+130h], xmm6
movups  xmmword ptr [edx], xmm0
aesenc  xmm5, xmm3
movaps  xmm3, xmmword ptr [esp+120h]
movaps  xmm0, xmm5
pxor    xmm0, xmm4
movaps  xmmword ptr [esp+110h], xmm5
movups  xmmword ptr [ecx+edi], xmm0
xor     ecx, ecx
aesenc  xmm3, xmm1
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+120h], xmm3
pxor    xmm0, xmm2
movups  xmmword ptr [eax+esi], xmm0
xor     esi, esi
movd    eax, xmm6
movaps  xmm0, xmm6
psrldq  xmm0, 4
movd    edx, xmm0
movaps  xmm0, xmm5
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+38h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+48h]
mov     [esp+20h], ecx
movd    dword ptr [esp+3ch], xmm0
movaps  xmm0, xmm3
psrldq  xmm0, 4
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+0a8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0ach], eax
movd    eax, xmm5
mov     [esp+60h], edx
mov     [esp+8], edi
or      ecx, eax
movd    dword ptr [esp+70h], xmm0
mov     [esp+14h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+34h]
mov     [esp+28h], ecx
mov     eax, [ecx]
mov     [esp+80h], eax
mov     eax, [ecx+4]
mov     [esp+84h], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
mov     [esp+0c4h], eax
movd    eax, xmm3
or      esi, eax
mov     ecx, esi
mov     [esp+50h], esi
and     ecx, 3ffff0h
add     ecx, [esp+4ch]
mov     [esp+78h], ecx
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
push    0
push    edx
push    0
push    edi
mov     [esp+0ech], eax
call    __allmul
push    0
push    dword ptr [esp+3ch]
mov     [esp+20h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+3ch]
mov     edi, eax
mov     [esp+60h], edx
push    0
push    dword ptr [esp+18h]
call    __allmul
mov     ecx, [esp+18h]
add     eax, ecx
adc     edx, esi
mov     [esp+40h], edx
cmp     edx, esi
ja      short loc_37a685da
jb      short loc_37a685c8
cmp     eax, ecx
jnb     short loc_37a685da
mov     dword ptr [esp+38h], 0
mov     dword ptr [esp+10h], 1
jmp     short loc_37a685f3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+18h], xmm0
mov     ecx, [esp+1ch]
mov     [esp+10h], ecx
mov     ecx, [esp+18h]
mov     [esp+38h], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+0a0h], ecx
adc     eax, [esp+58h]
mov     [esp+0a4h], eax
cmp     eax, [esp+58h]
ja      short loc_37a68624
jb      short loc_37a68615
cmp     ecx, edi
jnb     short loc_37a68624
mov     edi, 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a68639
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     eax, [esp+5ch]
mov     edi, [esp+58h]
mov     [esp+18h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+64h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
mov     ecx, [esp+40h]
movq    xmm0, qword ptr [esp+0a0h]
add     ecx, eax
mov     eax, [esp+20h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     ecx, [esp+38h]
mov     edx, [esp+8ch]
adc     esi, [esp+10h]
add     ecx, edi
mov     [esp+98h], ecx
adc     esi, [esp+18h]
mov     ecx, [esp+48h]
mov     [esp+9ch], esi
movq    xmm1, qword ptr [esp+98h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movq    xmm0, qword ptr [esp+0a8h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+100h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+20h], ecx
mov     eax, [eax+edx]
mov     [esp+40h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+130h]
mov     edi, edx
mov     edx, [esp+20h]
mov     esi, eax
mov     eax, edi
movaps  xmmword ptr [esp+140h], xmm0
mov     edi, [esp+80h]
mov     ecx, esi
push    0
xor     [edx+4], eax
push    dword ptr [esp+40h]
xor     [edx], ecx
mov     eax, [esp+48h]
cdq
push    0
xor     eax, esi
push    edi
mov     [esp+68h], eax
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+28h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     edi, eax
mov     [esp+48h], edx
push    0
push    dword ptr [esp+90h]
call    __allmul
mov     ecx, [esp+20h]
add     eax, ecx
adc     edx, esi
mov     [esp+20h], edx
cmp     edx, esi
ja      short loc_37a6877b
jb      short loc_37a68769
cmp     eax, ecx
jnb     short loc_37a6877b
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a68794
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     ecx, [esp+64h]
mov     [esp+18h], ecx
mov     ecx, [esp+60h]
mov     [esp+14h], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+0b8h], ecx
adc     eax, [esp+40h]
mov     [esp+0bch], eax
cmp     eax, [esp+40h]
ja      short loc_37a687c5
jb      short loc_37a687b6
cmp     ecx, edi
jnb     short loc_37a687c5
mov     edi, 1
mov     dword ptr [esp+10h], 0
jmp     short loc_37a687da
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     edi, [esp+40h]
mov     [esp+10h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+40h]
push    esi
push    dword ptr [esp+90h]
call    __allmul
mov     ecx, [esp+20h]
movq    xmm0, qword ptr [esp+0b8h]
add     ecx, eax
mov     eax, [esp+28h]
movq    xmm2, qword ptr [esp+80h]
adc     esi, edx
add     ecx, [esp+14h]
mov     edx, [esp+90h]
adc     esi, [esp+18h]
add     ecx, edi
mov     [esp+0b0h], ecx
adc     esi, [esp+10h]
mov     ecx, [esp+34h]
mov     [esp+0b4h], esi
movq    xmm1, qword ptr [esp+0b0h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0f0h]
movq    xmm0, qword ptr [esp+0c0h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+0f0h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+28h], ecx
mov     eax, [eax+edx]
mov     [esp+20h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+110h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+130h], xmm0
mov     edx, [esp+28h]
mov     ecx, eax
push    0
push    dword ptr [esp+74h]
mov     [esp+48h], eax
mov     esi, edi
xor     [edx], esi
xor     [edx+4], ecx
mov     eax, [esp+28h]
cdq
push    0
push    dword ptr [esp+74h]
xor     eax, edi
xor     edx, ecx
mov     [esp+70h], eax
mov     [esp+3ch], edx
call    __allmul
mov     edi, [esp+50h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+74h]
mov     [esp+38h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+78h]
mov     [esp+60h], eax
mov     [esp+30h], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a68926
jb      short loc_37a68914
cmp     eax, ecx
jnb     short loc_37a68926
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+10h], 1
jmp     short loc_37a6893f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+10h], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     edx, [esp+50h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0d0h], ecx
adc     eax, [esp+20h]
mov     [esp+0d4h], eax
cmp     eax, [esp+20h]
ja      short loc_37a68977
jb      short loc_37a68965
cmp     ecx, edx
jnb     short loc_37a68977
mov     dword ptr [esp+3ch], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a68990
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     eax, [esp+54h]
mov     [esp+14h], eax
mov     eax, [esp+50h]
mov     [esp+3ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+74h]
push    esi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0d0h]
add     edi, eax
mov     eax, [esp+78h]
movq    xmm2, qword ptr [esp+68h]
adc     esi, edx
add     edi, [esp+3ch]
mov     edx, [esp+94h]
adc     esi, [esp+14h]
add     edi, [esp+18h]
mov     ecx, [esp+4ch]
adc     esi, [esp+10h]
mov     [esp+0c8h], edi
mov     [esp+0cch], esi
movq    xmm1, qword ptr [esp+0c8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0e0h]
movq    xmm0, qword ptr [esp+0d8h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+0e0h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+78h], ecx
mov     eax, [eax+edx]
mov     [esp+50h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm2, xmmword ptr [esp+120h]
mov     edi, eax
movaps  xmm1, xmmword ptr [esp+0e0h]
mov     eax, edx
mov     edx, [esp+78h]
mov     ecx, eax
mov     eax, [esp+50h]
mov     esi, edi
movaps  xmm3, xmmword ptr [esp+0f0h]
movaps  xmm4, xmmword ptr [esp+130h]
xor     [edx], esi
xor     [edx+4], ecx
movaps  xmm5, xmmword ptr [esp+100h]
movaps  xmm7, xmmword ptr [esp+140h]
mov     ecx, [esp+60h]
mov     esi, [esp+4ch]
cdq
mov     edx, [esp+58h]
xor     eax, edi
sub     dword ptr [esp+74h], 1
mov     edi, [esp+34h]
jnz     loc_37a68410
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a82360
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a68aa1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 218h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a81cc0
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 5
jb      short loc_37a69766
mov     ecx, [ebp+14h]
mov     edx, [ecx]
mov     esi, [ecx+4]
mov     edi, [ecx+8]
mov     eax, [edx+0e0h]
mov     [esp+78h], eax
mov     eax, [esi+0e0h]
mov     [esp+68h], eax
mov     eax, [edi+0e0h]
mov     [esp+6ch], eax
mov     eax, [ecx+0ch]
mov     eax, [eax+0e0h]
mov     [esp+70h], eax
mov     eax, [ecx+10h]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+8], ecx
mov     eax, [eax+0e0h]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+74h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm6, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm6, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
movaps  xmmword ptr [esp+200h], xmm1
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+1a0h], xmm6
movaps  xmmword ptr [esp+190h], xmm5
movaps  xmmword ptr [esp+90h], xmm1
xor     ecx, [edi+8]
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     esi, [ebp+14h]
mov     [esp+8], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     edx, [esi+0ch]
mov     [esp+0ch], eax
movq    xmm3, qword ptr [esp+8]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     edx, [esi+10h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
movq    xmm7, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+210h], xmm1
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+180h], xmm3
movaps  xmmword ptr [esp+170h], xmm2
movaps  xmmword ptr [esp+160h], xmm1
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [esp+78h]
add     ecx, 8
mov     [esp+0ch], eax
mov     eax, [esp+74h]
movq    xmm4, qword ptr [esp+8]
mov     [esp+0dch], ecx
mov     ecx, [esp+68h]
add     ecx, 8
punpcklqdq xmm4, xmm0
mov     [esp+0e0h], ecx
mov     ecx, [esp+6ch]
add     ecx, 8
movd    edi, xmm6
mov     [esp+0d8h], ecx
mov     ecx, [esp+70h]
add     ecx, 8
mov     dword ptr [esp+2ch], 0
add     eax, 8
mov     [esp+0e4h], ecx
mov     [esp+0d4h], eax
movd    esi, xmm5
mov     dword ptr [esp+44h], 0
movd    edx, xmm3
mov     dword ptr [esp+34h], 0
mov     dword ptr [esp+5ch], 0
mov     dword ptr [esp+0bch], 0
mov     dword ptr [esp+0b4h], 40000h
movd    eax, xmm1
movd    ecx, xmm2
nop     dword ptr [eax+00h]
and     ecx, 3ffff0h
and     esi, 3ffff0h
add     ecx, [esp+70h]
and     edx, 3ffff0h
add     esi, [esp+68h]
and     eax, 3ffff0h
add     edx, [esp+6ch]
and     edi, 3ffff0h
add     eax, [esp+74h]
add     edi, [esp+78h]
movups  xmm0, xmmword ptr [esi]
movaps  xmmword ptr [esp+1c0h], xmm0
movups  xmm0, xmmword ptr [edx]
movaps  xmmword ptr [esp+1d0h], xmm0
movups  xmm0, xmmword ptr [ecx]
movaps  xmmword ptr [esp+1e0h], xmm0
movups  xmm0, xmmword ptr [eax]
movaps  xmmword ptr [esp+1f0h], xmm0
movups  xmm0, xmmword ptr [edi]
aesenc  xmm0, xmm6
movaps  xmm6, xmmword ptr [esp+1c0h]
movaps  xmmword ptr [esp+1b0h], xmm0
pxor    xmm0, xmmword ptr [esp+200h]
movups  xmmword ptr [edi], xmm0
aesenc  xmm6, xmm5
movaps  xmm5, xmmword ptr [esp+1d0h]
movaps  xmm0, xmm6
pxor    xmm0, xmmword ptr [esp+90h]
movups  xmmword ptr [esi], xmm0
aesenc  xmm5, xmm3
movaps  xmm3, xmmword ptr [esp+1e0h]
movaps  xmm0, xmm5
pxor    xmm0, xmmword ptr [esp+210h]
movups  xmmword ptr [edx], xmm0
aesenc  xmm3, xmm2
movaps  xmm2, xmmword ptr [esp+1f0h]
movaps  xmm0, xmm3
pxor    xmm0, xmm7
movaps  xmmword ptr [esp+1c0h], xmm6
movups  xmmword ptr [ecx], xmm0
xor     ecx, ecx
aesenc  xmm2, xmm1
movaps  xmm1, xmmword ptr [esp+1b0h]
movaps  xmm0, xmm2
pxor    xmm0, xmm4
movaps  xmmword ptr [esp+1d0h], xmm5
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
movaps  xmm0, xmm6
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+20h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+78h]
mov     [esp+28h], ecx
movaps  xmmword ptr [esp+1e0h], xmm3
movaps  xmmword ptr [esp+1f0h], xmm2
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+0f8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0fch], eax
movd    eax, xmm6
mov     [esp+88h], edx
mov     [esp+8], edi
or      ecx, eax
movd    dword ptr [esp+1ch], xmm0
mov     [esp+18h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+68h]
mov     [esp+40h], ecx
mov     eax, [ecx]
mov     [esp+0c0h], eax
mov     eax, [ecx+4]
mov     [esp+0c4h], eax
mov     eax, [ecx+8]
movaps  xmm0, xmm5
mov     [esp+110h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+114h], eax
movd    eax, xmm5
psrldq  xmm0, 4
movd    dword ptr [esp+4ch], xmm0
movaps  xmm0, xmm3
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+60h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+6ch]
mov     [esp+30h], ecx
push    0
movd    dword ptr [esp+54h], xmm0
movaps  xmm0, xmm2
mov     eax, [ecx]
mov     [esp+0a4h], eax
mov     eax, [ecx+4]
mov     [esp+0a8h], eax
mov     eax, [ecx+8]
mov     [esp+12ch], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+130h], eax
movd    eax, xmm3
push    edx
push    0
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+44h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+7ch]
mov     [esp+64h], ecx
push    edi
movd    dword ptr [esp+8ch], xmm0
mov     eax, [ecx]
mov     [esp+0b8h], eax
mov     eax, [ecx+4]
mov     [esp+0bch], eax
mov     eax, [ecx+8]
mov     [esp+150h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+154h], eax
movd    eax, xmm2
or      ecx, eax
mov     [esp+64h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+84h]
mov     [esp+0c8h], ecx
mov     eax, [ecx]
mov     [esp+0d8h], eax
mov     eax, [ecx+4]
mov     [esp+0dch], eax
mov     eax, [ecx+8]
mov     [esp+168h], eax
mov     eax, [ecx+0ch]
mov     [esp+16ch], eax
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+1ch], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     edi, eax
mov     [esp+88h], edx
push    0
push    dword ptr [esp+18h]
call    __allmul
mov     ecx, eax
mov     eax, [esp+14h]
add     ecx, eax
adc     edx, esi
mov     [esp+90h], edx
cmp     edx, esi
ja      short loc_37a69de0
jb      short loc_37a69dce
cmp     ecx, eax
jnb     short loc_37a69de0
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a69df9
xorps   xmm0, xmm0
movlpd  qword ptr [esp+20h], xmm0
mov     eax, [esp+24h]
mov     [esp+14h], eax
mov     eax, [esp+20h]
mov     [esp+20h], eax
xor     eax, eax
add     eax, edi
mov     [esp+0f0h], eax
adc     ecx, [esp+80h]
mov     [esp+0f4h], ecx
cmp     ecx, [esp+80h]
ja      short loc_37a69e2a
jb      short loc_37a69e21
cmp     eax, edi
jnb     short loc_37a69e2a
mov     esi, 1
xor     edi, edi
jmp     short loc_37a69e44
xorps   xmm0, xmm0
movlpd  qword ptr [esp+80h], xmm0
mov     edi, [esp+84h]
mov     esi, [esp+80h]
push    0
push    dword ptr [esp+8ch]
push    0
push    dword ptr [esp+18h]
call    __allmul
add     eax, [esp+90h]
movq    xmm0, qword ptr [esp+0f0h]
movq    xmm2, qword ptr [esp+8]
adc     edx, 0
add     eax, [esp+20h]
mov     ecx, [esp+78h]
adc     edx, [esp+14h]
add     eax, esi
mov     [esp+0e8h], eax
mov     eax, [esp+28h]
adc     edx, edi
mov     [esp+0ech], edx
movq    xmm1, qword ptr [esp+0e8h]
mov     edx, [esp+0dch]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1a0h]
movq    xmm0, qword ptr [esp+0f8h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+1a0h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+28h], ecx
mov     eax, [edx+eax]
mov     [esp+90h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+1b0h]
mov     edi, edx
mov     edx, [esp+28h]
mov     esi, eax
mov     eax, edi
movaps  xmmword ptr [esp+200h], xmm0
mov     edi, [esp+0c0h]
mov     ecx, esi
push    0
xor     [edx+4], eax
push    dword ptr [esp+20h]
xor     [edx], ecx
mov     eax, [esp+98h]
cdq
push    0
xor     eax, esi
push    edi
mov     [esp+90h], eax
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+1ch]
mov     edi, eax
mov     [esp+98h], edx
push    0
push    dword ptr [esp+0d0h]
call    __allmul
mov     ecx, [esp+28h]
add     eax, ecx
adc     edx, esi
mov     [esp+28h], edx
cmp     edx, esi
ja      short loc_37a69f95
jb      short loc_37a69f83
cmp     eax, ecx
jnb     short loc_37a69f95
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a69fb7
xorps   xmm0, xmm0
movlpd  qword ptr [esp+88h], xmm0
mov     ecx, [esp+8ch]
mov     [esp+14h], ecx
mov     ecx, [esp+88h]
mov     [esp+18h], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+108h], ecx
adc     eax, [esp+90h]
mov     [esp+10ch], eax
cmp     eax, [esp+90h]
ja      short loc_37a69fe8
jb      short loc_37a69fdf
cmp     ecx, edi
jnb     short loc_37a69fe8
mov     esi, 1
xor     edi, edi
jmp     short loc_37a6a002
xorps   xmm0, xmm0
movlpd  qword ptr [esp+90h], xmm0
mov     edi, [esp+94h]
mov     esi, [esp+90h]
push    0
push    dword ptr [esp+20h]
push    0
push    dword ptr [esp+0d0h]
call    __allmul
add     eax, [esp+28h]
movq    xmm0, qword ptr [esp+108h]
movq    xmm2, qword ptr [esp+0c0h]
adc     edx, 0
add     eax, [esp+18h]
mov     ecx, [esp+68h]
adc     edx, [esp+14h]
add     eax, esi
mov     [esp+100h], eax
mov     eax, [esp+40h]
adc     edx, edi
mov     [esp+104h], edx
movq    xmm1, qword ptr [esp+100h]
mov     edx, [esp+0e0h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+190h]
movq    xmm0, qword ptr [esp+110h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+190h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+40h], ecx
mov     eax, [edx+eax]
mov     [esp+28h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+1c0h]
mov     edi, eax
mov     eax, edx
mov     esi, edi
mov     edx, [esp+40h]
mov     ecx, eax
push    0
push    dword ptr [esp+50h]
mov     [esp+98h], eax
xor     [edx], esi
xor     [edx+4], ecx
mov     eax, [esp+30h]
cdq
push    0
push    dword ptr [esp+0ach]
xor     eax, edi
movaps  xmmword ptr [esp+0a0h], xmm0
xor     edx, ecx
mov     [esp+98h], eax
mov     [esp+54h], edx
call    __allmul
mov     edi, [esp+60h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0ach]
mov     [esp+50h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0b0h]
mov     [esp+70h], eax
mov     [esp+38h], edx
call    __allmul
mov     ecx, [esp+40h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a6a15a
jb      short loc_37a6a148
cmp     eax, ecx
jnb     short loc_37a6a15a
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+20h], 1
jmp     short loc_37a6a173
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+20h], ecx
mov     ecx, [esp+40h]
mov     [esp+14h], ecx
mov     edx, [esp+60h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+120h], ecx
adc     eax, [esp+28h]
mov     [esp+124h], eax
cmp     eax, [esp+28h]
ja      short loc_37a6a1ab
jb      short loc_37a6a199
cmp     ecx, edx
jnb     short loc_37a6a1ab
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a6a1c4
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+18h], eax
mov     eax, [esp+60h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+50h]
push    esi
push    dword ptr [esp+0b0h]
call    __allmul
movq    xmm0, qword ptr [esp+120h]
add     edi, eax
mov     eax, [esp+30h]
movq    xmm2, qword ptr [esp+0a0h]
adc     esi, edx
add     edi, [esp+1ch]
mov     edx, [esp+0d8h]
adc     esi, [esp+18h]
add     edi, [esp+14h]
mov     ecx, [esp+6ch]
adc     esi, [esp+20h]
mov     [esp+118h], edi
mov     [esp+11ch], esi
movq    xmm1, qword ptr [esp+118h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+180h]
movq    xmm0, qword ptr [esp+128h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+180h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+30h], ecx
mov     eax, [edx+eax]
mov     [esp+60h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+1d0h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+210h], xmm0
mov     edx, [esp+30h]
mov     ecx, eax
push    0
push    dword ptr [esp+54h]
mov     [esp+48h], eax
mov     esi, edi
xor     [edx], esi
xor     [edx+4], ecx
mov     eax, [esp+68h]
cdq
push    0
push    dword ptr [esp+0b4h]
xor     eax, edi
xor     edx, ecx
mov     [esp+38h], eax
mov     [esp+44h], edx
call    __allmul
mov     edi, [esp+38h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0b4h]
mov     [esp+40h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0b8h]
mov     [esp+48h], eax
mov     [esp+70h], edx
call    __allmul
mov     ecx, [esp+30h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a6a317
jb      short loc_37a6a305
cmp     eax, ecx
jnb     short loc_37a6a317
mov     dword ptr [esp+4ch], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a6a330
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+1ch], ecx
mov     ecx, [esp+30h]
mov     [esp+4ch], ecx
mov     edx, [esp+38h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+138h], ecx
adc     eax, [esp+60h]
mov     [esp+13ch], eax
cmp     eax, [esp+60h]
ja      short loc_37a6a368
jb      short loc_37a6a356
cmp     ecx, edx
jnb     short loc_37a6a368
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a6a381
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     eax, [esp+3ch]
mov     [esp+14h], eax
mov     eax, [esp+38h]
mov     [esp+18h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+54h]
push    esi
push    dword ptr [esp+0b8h]
call    __allmul
movq    xmm0, qword ptr [esp+138h]
add     edi, eax
mov     eax, [esp+58h]
movq    xmm2, qword ptr [esp+0a8h]
adc     esi, edx
add     edi, [esp+4ch]
mov     edx, [esp+0e4h]
adc     esi, [esp+1ch]
add     edi, [esp+18h]
mov     ecx, [esp+70h]
adc     esi, [esp+14h]
mov     [esp+130h], edi
mov     [esp+134h], esi
movq    xmm1, qword ptr [esp+130h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+170h]
movq    xmm0, qword ptr [esp+140h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+170h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+58h], ecx
mov     eax, [edx+eax]
mov     [esp+38h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+1e0h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+1b0h], xmm0
mov     edx, [esp+58h]
mov     ecx, eax
mov     eax, [esp+38h]
mov     esi, edi
push    0
push    dword ptr [esp+80h]
xor     [edx], esi
xor     [edx+4], ecx
cdq
xor     eax, edi
mov     edi, [esp+0d0h]
push    0
push    edi
mov     [esp+30h], eax
call    __allmul
push    0
push    dword ptr [esp+58h]
mov     [esp+60h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+58h]
mov     edi, eax
mov     [esp+40h], edx
push    0
push    dword ptr [esp+0d8h]
call    __allmul
mov     ecx, edx
mov     edx, [esp+58h]
add     eax, edx
adc     ecx, esi
mov     [esp+58h], ecx
cmp     ecx, esi
ja      short loc_37a6a4cc
jb      short loc_37a6a4ba
cmp     eax, edx
jnb     short loc_37a6a4cc
mov     dword ptr [esp+54h], 0
mov     dword ptr [esp+50h], 1
jmp     short loc_37a6a4e5
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+50h], ecx
mov     ecx, [esp+30h]
mov     [esp+54h], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+150h], ecx
adc     eax, [esp+38h]
mov     [esp+154h], eax
cmp     eax, [esp+38h]
ja      short loc_37a6a510
jb      short loc_37a6a507
cmp     ecx, edi
jnb     short loc_37a6a510
mov     esi, 1
xor     edi, edi
jmp     short loc_37a6a521
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     edi, [esp+3ch]
mov     esi, [esp+38h]
push    0
push    dword ptr [esp+80h]
push    0
push    dword ptr [esp+0d8h]
call    __allmul
add     eax, [esp+58h]
movq    xmm0, qword ptr [esp+150h]
movq    xmm2, qword ptr [esp+0c8h]
adc     edx, 0
add     eax, [esp+54h]
mov     ecx, [esp+74h]
adc     edx, [esp+50h]
add     eax, esi
mov     [esp+148h], eax
mov     eax, [esp+0b8h]
adc     edx, edi
mov     [esp+14ch], edx
movq    xmm1, qword ptr [esp+148h]
mov     edx, [esp+0d4h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+160h]
movq    xmm0, qword ptr [esp+158h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+160h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+0b8h], ecx
mov     eax, [edx+eax]
mov     [esp+58h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm4, xmmword ptr [esp+1f0h]
mov     edi, eax
movaps  xmm1, xmmword ptr [esp+160h]
mov     eax, edx
mov     edx, [esp+0b8h]
mov     ecx, eax
mov     eax, [esp+58h]
mov     esi, edi
movaps  xmm2, xmmword ptr [esp+170h]
movaps  xmm3, xmmword ptr [esp+180h]
xor     [edx], esi
xor     [edx+4], ecx
movaps  xmm5, xmmword ptr [esp+190h]
movaps  xmm6, xmmword ptr [esp+1a0h]
movaps  xmm7, xmmword ptr [esp+1b0h]
mov     ecx, [esp+20h]
mov     esi, [esp+88h]
cdq
mov     edx, [esp+28h]
xor     eax, edi
sub     dword ptr [esp+0b4h], 1
mov     edi, [esp+80h]
jnz     loc_37a69ae0
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a82360
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 5
jb      short loc_37a6a654
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
pop     ebp
retn
retf
sub     bl, [ebx+0eh]
mov     al, 39h
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 1c8h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    near ptr sub_37a82e20
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 4
jb      short loc_37a6b366
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+64h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+58h], ecx
mov     ecx, [edi+0e0h]
mov     [esp+5ch], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+60h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm3, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
movaps  xmmword ptr [esp+0c0h], xmm1
movq    xmm1, qword ptr [esp+8]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+140h], xmm3
movaps  xmmword ptr [esp+160h], xmm2
movaps  xmmword ptr [esp+190h], xmm1
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
movq    xmm1, qword ptr [esp+8]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [ebp+14h]
mov     [esp+8], ecx
movq    xmm4, qword ptr [esp+8]
mov     edi, [esp+60h]
mov     edx, [eax+0ch]
punpcklqdq xmm4, xmm0
movaps  xmmword ptr [esp+170h], xmm1
movaps  xmmword ptr [esp+70h], xmm4
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm6, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
punpcklqdq xmm6, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [esp+64h]
add     eax, 8
mov     [esp+8], ecx
movq    xmm7, qword ptr [esp+8]
mov     [esp+0d4h], eax
mov     eax, [esp+58h]
add     eax, 8
movaps  xmmword ptr [esp+180h], xmm6
mov     [esp+0d8h], eax
mov     eax, [esp+5ch]
add     eax, 8
punpcklqdq xmm7, xmm0
mov     [esp+0dch], eax
lea     eax, [edi+8]
movd    esi, xmm3
mov     dword ptr [esp+34h], 0
movd    edx, xmm2
mov     dword ptr [esp+44h], 0
movd    ecx, xmm1
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+0a4h], 0
mov     [esp+0bch], eax
mov     dword ptr [esp+9ch], 40000h
movd    eax, xmm6
nop     dword ptr [eax+eax+00000000h]
and     eax, 3ffff0h
and     ecx, 3ffff0h
add     ecx, [esp+5ch]
add     eax, edi
mov     [esp+14h], eax
and     esi, 3ffff0h
add     esi, [esp+64h]
and     edx, 3ffff0h
add     edx, [esp+58h]
movups  xmm5, xmmword ptr [eax]
movups  xmm4, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [esi]
movups  xmm3, xmmword ptr [edx]
mov     [esp+18h], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
mov     [esp+1ch], edx
pshufd  xmm0, xmm1, 0aah
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
movd    edx, xmm0
pshufd  xmm0, xmm1, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+24h], esi
mov     [esp+20h], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
movaps  xmmword ptr [esp+0a0h], xmm5
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
movd    xmm5, ecx
punpckldq xmm5, xmm0
movd    xmm1, edx
movaps  xmmword ptr [esp+150h], xmm5
movaps  xmm0, xmmword ptr [esp+150h]
punpckldq xmm1, xmm2
punpckldq xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+140h]
movaps  xmmword ptr [esp+150h], xmm0
pxor    xmm0, xmmword ptr [esp+0c0h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm3, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm3, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+160h]
mov     eax, [esp+1ch]
movaps  xmm0, xmm3
pxor    xmm0, xmmword ptr [esp+190h]
movaps  xmmword ptr [esp+1a0h], xmm3
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm4, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm4
pshufd  xmm0, xmm4, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+18h]
movd    xmm4, ecx
punpckldq xmm4, xmm0
punpckldq xmm4, xmm1
pxor    xmm4, xmmword ptr [esp+170h]
movaps  xmm0, xmm4
movaps  xmmword ptr [esp+1b0h], xmm4
pxor    xmm0, xmmword ptr [esp+70h]
movups  xmmword ptr [eax], xmm0
movaps  xmm5, xmmword ptr [esp+0a0h]
pshufd  xmm0, xmm5, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm5, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm5
pshufd  xmm0, xmm5, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm5
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm5
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm5
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+14h]
movd    xmm5, ecx
xor     ecx, ecx
punpckldq xmm5, xmm0
punpckldq xmm5, xmm1
movaps  xmm1, xmmword ptr [esp+150h]
pxor    xmm5, xmm6
movaps  xmm0, xmm5
movaps  xmmword ptr [esp+1c0h], xmm5
pxor    xmm0, xmm7
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
movd    eax, xmm1
xor     edx, edx
movaps  xmm0, xmm3
mov     [esp+4ch], esi
psrldq  xmm0, 4
or      ecx, eax
movd    dword ptr [esp+10h], xmm0
mov     [esp+24h], ecx
movaps  xmm0, xmm4
and     ecx, 3ffff0h
psrldq  xmm0, 4
add     ecx, [esp+64h]
mov     [esp+30h], ecx
push    0
movd    dword ptr [esp+4ch], xmm0
movaps  xmm0, xmm5
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+10h], eax
mov     eax, [ecx+8]
mov     [esp+0f4h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0f8h], eax
movd    eax, xmm3
push    esi
push    0
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+7ch], ecx
and     ecx, 3ffff0h
add     ecx, [esp+64h]
mov     [esp+4ch], ecx
push    edi
mov     [esp+18h], edi
mov     eax, [ecx]
mov     [esp+90h], eax
mov     eax, [ecx+4]
mov     [esp+94h], eax
mov     eax, [ecx+8]
mov     [esp+118h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+11ch], eax
movd    eax, xmm4
movd    dword ptr [esp+30h], xmm0
or      ecx, eax
mov     [esp+60h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+6ch]
mov     [esp+48h], ecx
mov     eax, [ecx]
mov     [esp+98h], eax
mov     eax, [ecx+4]
mov     [esp+9ch], eax
mov     eax, [ecx+8]
mov     [esp+130h], eax
mov     eax, [ecx+0ch]
mov     [esp+134h], eax
movd    eax, xmm5
or      edx, eax
mov     ecx, edx
mov     [esp+78h], edx
and     ecx, 3ffff0h
add     ecx, [esp+70h]
mov     [esp+0b0h], ecx
mov     eax, [ecx]
mov     [esp+0a0h], eax
mov     eax, [ecx+4]
mov     [esp+0a4h], eax
mov     eax, [ecx+8]
mov     [esp+148h], eax
mov     eax, [ecx+0ch]
mov     [esp+14ch], eax
call    __allmul
push    0
push    dword ptr [esp+28h]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+28h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+0d0h], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a6bd63
jb      short loc_37a6bd51
cmp     eax, ecx
jnb     short loc_37a6bd63
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a6bd7c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+14h], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     edx, [esp+1ch]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e8h], ecx
adc     eax, [esp+0c0h]
mov     [esp+0ech], eax
cmp     eax, [esp+0c0h]
ja      short loc_37a6bdba
jb      short loc_37a6bda8
cmp     ecx, edx
jnb     short loc_37a6bdba
mov     dword ptr [esp+24h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a6bddc
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0c0h], xmm0
mov     eax, [esp+0c4h]
mov     [esp+1ch], eax
mov     eax, [esp+0c0h]
mov     [esp+24h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+50h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+0e8h]
add     edi, eax
mov     eax, [esp+30h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     edi, [esp+24h]
mov     edx, [esp+0d4h]
adc     esi, [esp+1ch]
add     edi, [esp+18h]
mov     ecx, [esp+64h]
adc     esi, [esp+14h]
mov     [esp+0e0h], edi
mov     [esp+0e4h], esi
movq    xmm1, qword ptr [esp+0e0h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+140h]
movq    xmm0, qword ptr [esp+0f0h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+140h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+30h], ecx
mov     eax, [eax+edx]
mov     [esp+4ch], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+150h]
mov     edi, edx
mov     edx, [esp+30h]
mov     esi, eax
push    0
push    dword ptr [esp+14h]
mov     eax, edi
movaps  xmmword ptr [esp+0c8h], xmm0
xor     [edx+4], eax
mov     ecx, esi
xor     [edx], ecx
mov     eax, [esp+54h]
cdq
push    0
push    dword ptr [esp+8ch]
xor     eax, esi
xor     edx, edi
mov     [esp+34h], eax
mov     [esp+44h], edx
call    __allmul
mov     edi, [esp+70h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+8ch]
mov     [esp+40h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+90h]
mov     [esp+80h], eax
mov     [esp+5ch], edx
call    __allmul
mov     ecx, [esp+30h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a6bf28
jb      short loc_37a6bf16
cmp     eax, ecx
jnb     short loc_37a6bf28
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a6bf41
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+28h], ecx
mov     ecx, [esp+30h]
mov     [esp+14h], ecx
mov     edx, [esp+70h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+100h], ecx
adc     eax, [esp+4ch]
mov     [esp+104h], eax
cmp     eax, [esp+4ch]
ja      short loc_37a6bf79
jb      short loc_37a6bf67
cmp     ecx, edx
jnb     short loc_37a6bf79
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a6bf92
xorps   xmm0, xmm0
movlpd  qword ptr [esp+70h], xmm0
mov     eax, [esp+74h]
mov     [esp+18h], eax
mov     eax, [esp+70h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+14h]
push    esi
push    dword ptr [esp+90h]
call    __allmul
movq    xmm0, qword ptr [esp+100h]
add     edi, eax
mov     eax, [esp+40h]
movq    xmm2, qword ptr [esp+80h]
adc     esi, edx
add     edi, [esp+1ch]
mov     edx, [esp+0d8h]
adc     esi, [esp+18h]
add     edi, [esp+14h]
mov     ecx, [esp+58h]
adc     esi, [esp+28h]
mov     [esp+0f8h], edi
mov     [esp+0fch], esi
movq    xmm1, qword ptr [esp+0f8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+160h]
movq    xmm0, qword ptr [esp+108h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+160h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+40h], ecx
mov     eax, [eax+edx]
mov     [esp+70h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+1a0h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+190h], xmm0
mov     edx, [esp+40h]
mov     ecx, eax
push    0
push    dword ptr [esp+4ch]
mov     [esp+38h], eax
mov     esi, edi
xor     [edx], esi
xor     [edx+4], ecx
mov     eax, [esp+78h]
cdq
push    0
push    dword ptr [esp+94h]
xor     eax, edi
xor     edx, ecx
mov     [esp+2ch], eax
mov     [esp+54h], edx
call    __allmul
mov     esi, [esp+50h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+94h]
mov     [esp+50h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+98h]
mov     [esp+60h], eax
mov     [esp+80h], edx
call    __allmul
mov     ecx, [esp+40h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a6c0e8
jb      short loc_37a6c0d6
cmp     eax, ecx
jnb     short loc_37a6c0e8
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+10h], 1
jmp     short loc_37a6c101
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+10h], ecx
mov     ecx, [esp+40h]
mov     [esp+14h], ecx
mov     edx, [esp+50h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+118h], ecx
adc     eax, [esp+70h]
mov     [esp+11ch], eax
cmp     eax, [esp+70h]
ja      short loc_37a6c139
jb      short loc_37a6c127
cmp     ecx, edx
jnb     short loc_37a6c139
mov     dword ptr [esp+28h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a6c152
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     eax, [esp+54h]
mov     [esp+18h], eax
mov     eax, [esp+50h]
mov     [esp+28h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+4ch]
push    edi
push    dword ptr [esp+98h]
call    __allmul
movq    xmm0, qword ptr [esp+118h]
add     esi, eax
mov     eax, [esp+38h]
movq    xmm2, qword ptr [esp+88h]
adc     edi, edx
add     esi, [esp+28h]
mov     edx, [esp+0dch]
adc     edi, [esp+18h]
add     esi, [esp+14h]
mov     ecx, [esp+5ch]
adc     edi, [esp+10h]
mov     [esp+110h], esi
mov     [esp+114h], edi
movq    xmm1, qword ptr [esp+110h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+170h]
movq    xmm0, qword ptr [esp+120h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+170h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+38h], ecx
mov     eax, [eax+edx]
mov     [esp+50h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+1b0h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+70h], xmm0
mov     edx, [esp+38h]
mov     ecx, eax
push    0
push    dword ptr [esp+24h]
mov     [esp+48h], eax
mov     esi, edi
xor     [edx], esi
xor     [edx+4], ecx
mov     eax, [esp+58h]
cdq
push    0
push    dword ptr [esp+9ch]
xor     eax, edi
xor     edx, ecx
mov     [esp+28h], eax
mov     [esp+4ch], edx
call    __allmul
mov     edi, [esp+68h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+9ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a0h]
mov     [esp+78h], eax
mov     [esp+60h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a6c2a2
jb      short loc_37a6c290
cmp     eax, ecx
jnb     short loc_37a6c2a2
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a6c2bb
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+14h], ecx
mov     ecx, [esp+38h]
mov     [esp+28h], ecx
mov     edx, [esp+68h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+130h], ecx
adc     eax, [esp+50h]
mov     [esp+134h], eax
cmp     eax, [esp+50h]
ja      short loc_37a6c2f0
jb      short loc_37a6c2e1
cmp     ecx, edx
jnb     short loc_37a6c2f0
mov     esi, 1
mov     dword ptr [esp+48h], 0
jmp     short loc_37a6c305
xorps   xmm0, xmm0
movlpd  qword ptr [esp+68h], xmm0
mov     eax, [esp+6ch]
mov     esi, [esp+68h]
mov     [esp+48h], eax
push    0
push    dword ptr [esp+24h]
push    0
push    dword ptr [esp+0a0h]
call    __allmul
movq    xmm0, qword ptr [esp+130h]
add     eax, edi
movq    xmm2, qword ptr [esp+90h]
adc     edx, 0
mov     ecx, [esp+60h]
add     eax, esi
adc     edx, [esp+48h]
add     eax, [esp+28h]
mov     [esp+128h], eax
adc     edx, [esp+14h]
mov     eax, [esp+0a0h]
mov     [esp+12ch], edx
movq    xmm1, qword ptr [esp+128h]
mov     edx, [esp+0bch]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+180h]
movq    xmm0, qword ptr [esp+138h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+180h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+0a0h], ecx
mov     eax, [eax+edx]
mov     [esp+68h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm7, xmmword ptr [esp+1c0h]
mov     edi, eax
movaps  xmm6, xmmword ptr [esp+180h]
mov     eax, edx
mov     edx, [esp+0a0h]
mov     ecx, eax
mov     [esp+38h], eax
mov     esi, edi
mov     eax, [esp+68h]
xor     [edx], esi
xor     [edx+4], ecx
mov     esi, [esp+24h]
cdq
xor     edx, ecx
xor     eax, edi
sub     dword ptr [esp+9ch], 1
mov     ecx, [esp+18h]
mov     edi, [esp+60h]
mov     [esp+0a4h], edx
mov     edx, [esp+1ch]
jnz     loc_37a6b640
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a83f30
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a6c414
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
repne retf
xlat
add     [edi-0ac232f1h], cl
pop     eax
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     edx, [ebp+0ch]
sub     esp, 0b8h
push    esi
push    edi
cmp     edx, 2bh
jnb     short loc_37a6d9f9
mov     eax, [ebp+10h]
xorps   xmm0, xmm0
movups  xmmword ptr [eax], xmm0
movups  xmmword ptr [eax+10h], xmm0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+14h]
mov     edi, [ebp+8]
push    ecx
mov     ecx, edi
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    sub_37a81cc0
mov     esi, [esi]
mov     [esp+0ach], esi
mov     dword ptr [esp+8ch], 40000h
mov     eax, [esi+0e0h]
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     [esp+20h], eax
mov     eax, [esi+0c0h]
xor     eax, [edi+23h]
mov     edx, [esi+24h]
xor     edx, [esi+4]
mov     [esp+0a4h], eax
mov     eax, [esi+0c4h]
xor     eax, [edi+27h]
mov     [esp+0a8h], eax
mov     eax, [esi+20h]
xor     eax, [esi]
mov     [esp+28h], eax
mov     [esp+90h], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+34h], eax
mov     [esp+38h], ecx
mov     [esp+98h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+9ch], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+40h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+44h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
movq    xmm0, qword ptr [esp+40h]
mov     esi, [esp+28h]
mov     [esp+44h], eax
mov     eax, esi
mov     [esp+40h], ecx
movq    xmm3, qword ptr [esp+40h]
mov     [esp+5ch], edx
mov     [esp+94h], edx
punpcklqdq xmm3, xmm0
nop     dword ptr [eax+eax+00000000h]
mov     edi, [esp+20h]
and     eax, 3ffff0h
movq    xmm0, qword ptr [esp+98h]
movq    xmm2, qword ptr [esp+90h]
mov     [esp+24h], eax
movups  xmm1, xmmword ptr [eax+edi]
pxor    xmm1, ds:xmmword_37b03bf0
punpcklqdq xmm2, xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
movaps  xmm0, xmm1
mov     [esp+10h], eax
movzx   ecx, al
movzx   eax, dh
psrldq  xmm0, 0ah
movaps  xmmword ptr [esp+40h], xmm1
mov     ecx, ds:dword_37aff540[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
psrldq  xmm1, 0fh
movaps  xmmword ptr [esp+60h], xmm2
movzx   eax, al
xor     ecx, ds:dword_37affd40[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm2
xor     eax, ecx
mov     ecx, [esp+10h]
xor     ecx, eax
mov     [esp+60h], eax
mov     [esp+10h], ecx
mov     [esp+40h], ecx
shr     ecx, 18h
movzx   eax, dl
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+48h]
movzx   eax, ah
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+4eh]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, [esp+64h]
xor     eax, ecx
xor     edx, eax
mov     [esp+64h], eax
mov     eax, [esp+10h]
mov     ecx, edx
shr     eax, 10h
movzx   eax, al
mov     [esp+28h], edx
shr     ecx, 18h
mov     edx, ds:dword_37affd40[eax*4]
mov     eax, [esp+48h]
xor     edx, ds:dword_37b00140[ecx*4]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
movzx   eax, byte ptr [esp+4dh]
xor     edx, ds:dword_37aff940[eax*4]
mov     eax, [esp+68h]
xor     eax, edx
mov     edx, [esp+48h]
xor     edx, eax
mov     [esp+68h], eax
mov     eax, [esp+10h]
shr     eax, 8
movzx   ecx, al
mov     eax, [esp+28h]
shr     eax, 10h
movzx   eax, al
mov     ecx, ds:dword_37aff940[ecx*4]
shr     edx, 18h
xor     ecx, ds:dword_37affd40[eax*4]
movzx   eax, byte ptr [esp+4ch]
xor     ecx, ds:dword_37b00140[edx*4]
xor     ecx, ds:dword_37aff540[eax*4]
xor     [esp+6ch], ecx
movaps  xmm2, xmmword ptr [esp+60h]
movaps  xmmword ptr [esp+0b0h], xmm2
xor     ecx, ecx
movaps  xmm1, xmm2
pxor    xmm1, xmm3
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+24h]
push    0
mov     [eax+edi], ecx
movd    dword ptr [eax+edi+4], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
xor     edi, edi
psrldq  xmm0, 4
movd    dword ptr [esp+2ch], xmm0
or      edi, eax
movd    eax, xmm0
mov     edx, edi
movaps  xmm0, xmm2
psrldq  xmm0, 4
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+28h]
and     edx, 3
xor     eax, [esp+2ch]
shl     edx, 1ch
xor     edx, edi
mov     edi, [esp+24h]
mov     [ecx+edi+0ch], eax
mov     [ecx+edi+8], edx
xor     ecx, ecx
movd    eax, xmm2
movd    edx, xmm0
or      ecx, eax
mov     eax, ecx
mov     [esp+40h], ecx
and     eax, 3ffff0h
mov     [esp+0a4h], edx
push    edx
push    0
mov     [esp+1ch], eax
mov     ecx, [eax+edi]
mov     [esp+84h], ecx
mov     ecx, [eax+edi+4]
push    dword ptr [esp+84h]
mov     [esp+34h], ecx
mov     ecx, [eax+edi+8]
mov     eax, [eax+edi+0ch]
mov     [esp+94h], ecx
mov     [esp+50h], eax
call    __allmul
push    0
push    dword ptr [esp+40h]
mov     [esp+30h], eax
mov     edi, edx
push    0
push    dword ptr [esp+84h]
call    __allmul
push    0
push    dword ptr [esp+40h]
mov     [esp+68h], eax
push    0
push    dword ptr [esp+30h]
mov     [esp+8ch], edx
call    __allmul
mov     ecx, [esp+28h]
add     eax, ecx
adc     edx, edi
mov     [esp+80h], edx
cmp     edx, edi
ja      short loc_37a6dd94
jb      short loc_37a6dd7f
cmp     eax, ecx
jnb     short loc_37a6dd94
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+88h], 1
jmp     short loc_37a6ddb0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+88h], ecx
mov     ecx, [esp+28h]
mov     [esp+3ch], ecx
mov     ecx, [esp+60h]
xor     edi, edi
mov     edx, [esp+7ch]
add     edi, ecx
adc     eax, edx
mov     [esp+7ch], eax
cmp     eax, edx
ja      short loc_37a6ddde
jb      short loc_37a6ddcc
cmp     edi, ecx
jnb     short loc_37a6ddde
mov     dword ptr [esp+60h], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a6ddf7
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+28h], eax
mov     eax, [esp+60h]
mov     [esp+60h], eax
push    0
push    dword ptr [esp+0a4h]
push    0
push    dword ptr [esp+30h]
call    __allmul
add     eax, [esp+80h]
mov     ecx, [esp+20h]
adc     edx, 0
add     eax, [esp+3ch]
adc     edx, [esp+88h]
add     eax, [esp+60h]
adc     edx, [esp+28h]
add     esi, eax
mov     eax, [esp+38h]
adc     edx, [esp+5ch]
add     [esp+34h], edi
mov     edi, [esp+10h]
adc     eax, [esp+7ch]
mov     [esp+38h], eax
mov     eax, [esp+10h]
mov     [esp+5ch], edx
mov     [eax+ecx], esi
mov     [eax+ecx+4], edx
mov     eax, edx
mov     edx, [esp+20h]
mov     ecx, esi
xor     ecx, [esp+34h]
xor     eax, [esp+38h]
xor     ecx, [esp+0a4h]
xor     eax, [esp+0a8h]
xor     esi, [esp+78h]
mov     [edx+edi+8], ecx
mov     ecx, edi
mov     edi, edx
mov     [esp+90h], esi
mov     edx, [esp+5ch]
xor     edx, [esp+24h]
mov     [esp+5ch], edx
mov     [edi+ecx+0ch], eax
mov     eax, [esp+38h]
xor     eax, [esp+40h]
mov     edi, [esp+34h]
xor     edi, [esp+84h]
mov     [esp+38h], eax
mov     [esp+9ch], eax
mov     eax, esi
and     eax, 3ffff0h
mov     [esp+94h], edx
mov     edx, [esp+20h]
lea     ecx, [eax+edx]
mov     [esp+34h], edi
mov     [esp+98h], edi
mov     [esp+40h], ecx
mov     eax, [edx+eax+8]
mov     [esp+84h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm3, xmmword ptr [esp+0b0h]
mov     edi, eax
mov     eax, edx
mov     ecx, edi
mov     edx, [esp+40h]
xor     [edx+4], eax
xor     [edx], ecx
mov     eax, [esp+84h]
cdq
xor     eax, edi
sub     dword ptr [esp+8ch], 1
jnz     loc_37a6dae0
mov     esi, [esp+0ach]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    sub_37a82360
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     edx, [ebp+0ch]
sub     esp, 0b8h
push    esi
push    edi
cmp     edx, 2bh
jnb     short loc_37a6eb79
mov     eax, [ebp+10h]
xorps   xmm0, xmm0
movups  xmmword ptr [eax], xmm0
movups  xmmword ptr [eax+10h], xmm0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     esi, [ebp+14h]
mov     edi, [ebp+8]
push    ecx
mov     ecx, edi
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    near ptr sub_37a82e20
mov     esi, [esi]
mov     [esp+0ach], esi
mov     dword ptr [esp+8ch], 40000h
mov     eax, [esi+0e0h]
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     [esp+20h], eax
mov     eax, [esi+0c0h]
xor     eax, [edi+23h]
mov     edx, [esi+24h]
xor     edx, [esi+4]
mov     [esp+0a4h], eax
mov     eax, [esi+0c4h]
xor     eax, [edi+27h]
mov     [esp+0a8h], eax
mov     eax, [esi+20h]
xor     eax, [esi]
mov     [esp+28h], eax
mov     [esp+90h], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+34h], eax
mov     [esp+38h], ecx
mov     [esp+98h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+9ch], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+40h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+44h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
movq    xmm0, qword ptr [esp+40h]
mov     esi, [esp+28h]
mov     [esp+44h], eax
mov     eax, esi
mov     [esp+40h], ecx
movq    xmm3, qword ptr [esp+40h]
mov     [esp+5ch], edx
mov     [esp+94h], edx
punpcklqdq xmm3, xmm0
nop     dword ptr [eax+eax+00000000h]
mov     edi, [esp+20h]
and     eax, 3ffff0h
movq    xmm0, qword ptr [esp+98h]
movq    xmm2, qword ptr [esp+90h]
mov     [esp+24h], eax
movups  xmm1, xmmword ptr [eax+edi]
pxor    xmm1, ds:xmmword_37b03bf0
punpcklqdq xmm2, xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
movaps  xmm0, xmm1
mov     [esp+10h], eax
movzx   ecx, al
movzx   eax, dh
psrldq  xmm0, 0ah
movaps  xmmword ptr [esp+40h], xmm1
mov     ecx, ds:dword_37aff540[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
psrldq  xmm1, 0fh
movaps  xmmword ptr [esp+60h], xmm2
movzx   eax, al
xor     ecx, ds:dword_37affd40[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm2
xor     eax, ecx
mov     ecx, [esp+10h]
xor     ecx, eax
mov     [esp+60h], eax
mov     [esp+10h], ecx
mov     [esp+40h], ecx
shr     ecx, 18h
movzx   eax, dl
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+48h]
movzx   eax, ah
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+4eh]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, [esp+64h]
xor     eax, ecx
xor     edx, eax
mov     [esp+64h], eax
mov     eax, [esp+10h]
mov     ecx, edx
shr     eax, 10h
movzx   eax, al
mov     [esp+28h], edx
shr     ecx, 18h
mov     edx, ds:dword_37affd40[eax*4]
mov     eax, [esp+48h]
xor     edx, ds:dword_37b00140[ecx*4]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
movzx   eax, byte ptr [esp+4dh]
xor     edx, ds:dword_37aff940[eax*4]
mov     eax, [esp+68h]
xor     eax, edx
mov     edx, [esp+48h]
xor     edx, eax
mov     [esp+68h], eax
mov     eax, [esp+10h]
shr     eax, 8
movzx   ecx, al
mov     eax, [esp+28h]
shr     eax, 10h
movzx   eax, al
mov     ecx, ds:dword_37aff940[ecx*4]
shr     edx, 18h
xor     ecx, ds:dword_37affd40[eax*4]
movzx   eax, byte ptr [esp+4ch]
xor     ecx, ds:dword_37b00140[edx*4]
xor     ecx, ds:dword_37aff540[eax*4]
xor     [esp+6ch], ecx
movaps  xmm2, xmmword ptr [esp+60h]
movaps  xmmword ptr [esp+0b0h], xmm2
xor     ecx, ecx
movaps  xmm1, xmm2
pxor    xmm1, xmm3
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+24h]
push    0
mov     [eax+edi], ecx
movd    dword ptr [eax+edi+4], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
xor     edi, edi
psrldq  xmm0, 4
movd    dword ptr [esp+2ch], xmm0
or      edi, eax
movd    eax, xmm0
mov     edx, edi
movaps  xmm0, xmm2
psrldq  xmm0, 4
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+28h]
and     edx, 3
xor     eax, [esp+2ch]
shl     edx, 1ch
xor     edx, edi
mov     edi, [esp+24h]
mov     [ecx+edi+0ch], eax
mov     [ecx+edi+8], edx
xor     ecx, ecx
movd    eax, xmm2
movd    edx, xmm0
or      ecx, eax
mov     eax, ecx
mov     [esp+40h], ecx
and     eax, 3ffff0h
mov     [esp+0a4h], edx
push    edx
push    0
mov     [esp+1ch], eax
mov     ecx, [eax+edi]
mov     [esp+84h], ecx
mov     ecx, [eax+edi+4]
push    dword ptr [esp+84h]
mov     [esp+34h], ecx
mov     ecx, [eax+edi+8]
mov     eax, [eax+edi+0ch]
mov     [esp+94h], ecx
mov     [esp+50h], eax
call    __allmul
push    0
push    dword ptr [esp+40h]
mov     [esp+30h], eax
mov     edi, edx
push    0
push    dword ptr [esp+84h]
call    __allmul
push    0
push    dword ptr [esp+40h]
mov     [esp+68h], eax
push    0
push    dword ptr [esp+30h]
mov     [esp+8ch], edx
call    __allmul
mov     ecx, [esp+28h]
add     eax, ecx
adc     edx, edi
mov     [esp+80h], edx
cmp     edx, edi
ja      short loc_37a6ef14
jb      short loc_37a6eeff
cmp     eax, ecx
jnb     short loc_37a6ef14
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+88h], 1
jmp     short loc_37a6ef30
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+88h], ecx
mov     ecx, [esp+28h]
mov     [esp+3ch], ecx
mov     ecx, [esp+60h]
xor     edi, edi
mov     edx, [esp+7ch]
add     edi, ecx
adc     eax, edx
mov     [esp+7ch], eax
cmp     eax, edx
ja      short loc_37a6ef5e
jb      short loc_37a6ef4c
cmp     edi, ecx
jnb     short loc_37a6ef5e
mov     dword ptr [esp+60h], 1
mov     dword ptr [esp+28h], 0
jmp     short loc_37a6ef77
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     eax, [esp+64h]
mov     [esp+28h], eax
mov     eax, [esp+60h]
mov     [esp+60h], eax
push    0
push    dword ptr [esp+0a4h]
push    0
push    dword ptr [esp+30h]
call    __allmul
add     eax, [esp+80h]
mov     ecx, [esp+20h]
adc     edx, 0
add     eax, [esp+3ch]
adc     edx, [esp+88h]
add     eax, [esp+60h]
adc     edx, [esp+28h]
add     esi, eax
mov     eax, [esp+38h]
adc     edx, [esp+5ch]
add     [esp+34h], edi
mov     edi, [esp+10h]
adc     eax, [esp+7ch]
mov     [esp+38h], eax
mov     eax, [esp+10h]
mov     [esp+5ch], edx
mov     [eax+ecx], esi
mov     [eax+ecx+4], edx
mov     eax, edx
mov     edx, [esp+20h]
mov     ecx, esi
xor     ecx, [esp+34h]
xor     eax, [esp+38h]
xor     ecx, [esp+0a4h]
xor     eax, [esp+0a8h]
xor     esi, [esp+78h]
mov     [edx+edi+8], ecx
mov     ecx, edi
mov     edi, edx
mov     [esp+90h], esi
mov     edx, [esp+5ch]
xor     edx, [esp+24h]
mov     [esp+5ch], edx
mov     [edi+ecx+0ch], eax
mov     eax, [esp+38h]
xor     eax, [esp+40h]
mov     edi, [esp+34h]
xor     edi, [esp+84h]
mov     [esp+38h], eax
mov     [esp+9ch], eax
mov     eax, esi
and     eax, 3ffff0h
mov     [esp+94h], edx
mov     edx, [esp+20h]
lea     ecx, [eax+edx]
mov     [esp+34h], edi
mov     [esp+98h], edi
mov     [esp+40h], ecx
mov     eax, [edx+eax+8]
mov     [esp+84h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm3, xmmword ptr [esp+0b0h]
mov     edi, eax
mov     eax, edx
mov     ecx, edi
mov     edx, [esp+40h]
xor     [edx+4], eax
xor     [edx], ecx
mov     eax, [esp+84h]
cdq
xor     eax, edi
sub     dword ptr [esp+8ch], 1
jnz     loc_37a6ec60
mov     esi, [esp+0ach]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    loc_37a83f30
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 118h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a6f11b
push    40h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+14h]
mov     edx, edi
mov     esi, [ebp+8]
push    ecx
mov     ecx, esi
push    dword ptr [eax]
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 4
mov     edx, [ebp+0ch]
add     edi, esi
mov     ecx, edi
push    dword ptr [eax+4]
call    sub_37a181e0
mov     edx, [ebp+14h]
add     esp, 8
mov     eax, [edx]
mov     [esp+0cch], eax
mov     ecx, [eax+0e0h]
mov     [esp+58h], ecx
mov     ecx, [edx+4]
mov     [esp+9ch], ecx
mov     edx, [ecx+0e0h]
mov     [esp+64h], edx
mov     edx, [eax+0c0h]
mov     eax, [eax+0c4h]
xor     eax, [esi+27h]
xor     edx, [esi+23h]
mov     [esp+0f4h], eax
mov     eax, [ecx+0c0h]
xor     eax, [edi+23h]
mov     [esp+0f8h], eax
mov     eax, [ecx+0c4h]
xor     eax, [edi+27h]
mov     edi, [esp+0cch]
mov     ecx, edi
mov     [esp+0f0h], edx
mov     edx, [esp+58h]
mov     [esp+0fch], eax
call    near ptr sub_37a82e20
mov     edx, [esp+64h]
mov     ecx, [esp+9ch]
call    near ptr sub_37a82e20
mov     ecx, [edi+24h]
xor     ecx, [edi+4]
mov     eax, [edi+20h]
xor     eax, [edi]
mov     [esp+7ch], ecx
mov     [esp+0d4h], ecx
mov     ecx, [esp+9ch]
mov     [esp+78h], eax
mov     [esp+0d0h], eax
mov     eax, [edi+28h]
mov     edx, [ecx+24h]
xor     edx, [ecx+4]
xor     eax, [edi+8]
mov     esi, [ecx+20h]
xor     esi, [ecx]
mov     [esp+0bch], edx
mov     [esp+0e4h], edx
mov     edx, [edi+2ch]
xor     edx, [edi+0ch]
mov     [esp+0ach], eax
mov     [esp+0d8h], eax
mov     eax, [ecx+28h]
xor     eax, [ecx+8]
mov     ecx, [ecx+2ch]
mov     [esp+90h], edx
mov     [esp+0dch], edx
mov     edx, [esp+9ch]
mov     [esp+94h], eax
mov     [esp+0e8h], eax
mov     eax, [edi+3ch]
xor     ecx, [edx+0ch]
mov     [esp+98h], ecx
mov     [esp+0ech], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
xor     eax, [edi+1ch]
mov     [esp+0e0h], esi
mov     [esp+40h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+44h], eax
movq    xmm0, qword ptr [esp+40h]
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     edi, edx
mov     edx, [esp+0bch]
movaps  xmm6, ds:xmmword_37b03bf0
mov     [esp+44h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+40h], ecx
movq    xmm3, qword ptr [esp+40h]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+44h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+40h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     edi, esi
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+40h]
mov     [esp+44h], eax
mov     eax, [esp+64h]
add     eax, 8
mov     [esp+40h], ecx
movq    xmm4, qword ptr [esp+40h]
mov     ecx, [esp+78h]
mov     [esp+0c4h], eax
mov     eax, [esp+7ch]
mov     [esp+44h], eax
punpcklqdq xmm4, xmm0
mov     dword ptr [esp+0c8h], 40000h
mov     [esp+44h], edx
nop     dword ptr [eax+eax+00h]
mov     eax, [esp+58h]
and     ecx, 3ffff0h
movq    xmm0, qword ptr [esp+0d8h]
movq    xmm2, qword ptr [esp+0d0h]
mov     [esp+6ch], ecx
movups  xmm1, xmmword ptr [ecx+eax]
punpcklqdq xmm2, xmm0
pxor    xmm1, xmm6
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
movaps  xmm0, xmm1
mov     [esp+10h], eax
movzx   ecx, al
movzx   eax, dh
psrldq  xmm0, 0ah
movaps  xmmword ptr [esp+40h], xmm1
mov     ecx, ds:dword_37aff540[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
psrldq  xmm1, 0fh
movaps  xmmword ptr [esp+80h], xmm2
movzx   eax, al
xor     ecx, ds:dword_37affd40[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm2
xor     eax, ecx
mov     ecx, [esp+10h]
xor     ecx, eax
mov     [esp+80h], eax
mov     [esp+10h], ecx
mov     [esp+40h], ecx
shr     ecx, 18h
movzx   eax, dl
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+48h]
movzx   eax, ah
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+4eh]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, [esp+84h]
xor     eax, ecx
xor     edx, eax
mov     [esp+84h], eax
mov     eax, [esp+10h]
mov     ecx, edx
shr     eax, 10h
movzx   eax, al
mov     [esp+68h], edx
mov     [esp+44h], edx
shr     ecx, 18h
mov     edx, ds:dword_37affd40[eax*4]
mov     eax, [esp+48h]
movzx   eax, al
xor     edx, ds:dword_37b00140[ecx*4]
xor     edx, ds:dword_37aff540[eax*4]
movzx   eax, byte ptr [esp+4dh]
xor     edx, ds:dword_37aff940[eax*4]
mov     eax, [esp+88h]
xor     eax, edx
mov     edx, [esp+48h]
xor     edx, eax
mov     [esp+88h], eax
mov     eax, [esp+68h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
shr     edx, 18h
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+4ch]
xor     ecx, ds:dword_37b00140[edx*4]
xor     ecx, ds:dword_37aff540[eax*4]
xor     [esp+8ch], ecx
movaps  xmm5, xmmword ptr [esp+80h]
mov     eax, [esp+64h]
and     edi, 3ffff0h
movq    xmm0, qword ptr [esp+0e8h]
movq    xmm2, qword ptr [esp+0e0h]
punpcklqdq xmm2, xmm0
movups  xmm1, xmmword ptr [edi+eax]
pxor    xmm1, xmm6
mov     [esp+2ch], edi
movaps  xmm0, xmm1
movaps  xmmword ptr [esp+80h], xmm1
psrldq  xmm0, 0fh
movd    eax, xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
movzx   ecx, al
movd    eax, xmm1
psrldq  xmm1, 0ah
movaps  xmmword ptr [esp+40h], xmm2
mov     ecx, ds:dword_37b00140[ecx*4]
mov     [esp+30h], eax
movzx   eax, al
mov     edi, [esp+30h]
mov     [esp+10h], edx
movaps  xmmword ptr [esp+100h], xmm5
xor     ecx, ds:dword_37aff540[eax*4]
movzx   eax, dh
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37affd40[eax*4]
movd    eax, xmm2
xor     eax, ecx
xor     edi, eax
mov     [esp+40h], eax
mov     ecx, edi
movzx   eax, dl
mov     edx, [esp+88h]
shr     ecx, 18h
mov     [esp+30h], edi
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37aff540[eax*4]
movzx   eax, dh
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+8eh]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, [esp+44h]
xor     eax, ecx
mov     ecx, [esp+10h]
xor     ecx, eax
mov     [esp+44h], eax
mov     [esp+10h], ecx
mov     eax, edi
shr     eax, 10h
movzx   eax, al
shr     ecx, 18h
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37affd40[eax*4]
movzx   eax, dl
xor     ecx, ds:dword_37aff540[eax*4]
movzx   eax, byte ptr [esp+8dh]
xor     ecx, ds:dword_37aff940[eax*4]
mov     eax, [esp+48h]
xor     eax, ecx
xor     edx, eax
mov     [esp+48h], eax
mov     eax, [esp+10h]
shr     eax, 10h
movzx   eax, al
shr     edx, 18h
mov     ecx, ds:dword_37b00140[edx*4]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, edi
shr     eax, 8
movzx   eax, al
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+8ch]
xor     ecx, ds:dword_37aff540[eax*4]
xor     [esp+4ch], ecx
movaps  xmm2, xmmword ptr [esp+40h]
movaps  xmmword ptr [esp+110h], xmm2
mov     edi, [esp+58h]
xor     ecx, ecx
movaps  xmm1, xmm5
pxor    xmm1, xmm3
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+6ch]
mov     [eax+edi], ecx
movd    dword ptr [eax+edi+4], xmm0
xor     edi, edi
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movaps  xmm1, xmm2
movd    dword ptr [esp+68h], xmm0
pxor    xmm1, xmm4
or      edi, eax
movd    eax, xmm0
mov     edx, edi
movaps  xmm0, xmm1
psrldq  xmm0, 4
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
xor     eax, [esp+68h]
and     edx, 3
mov     ecx, [esp+6ch]
shl     edx, 1ch
xor     edx, edi
mov     edi, [esp+58h]
mov     [ecx+edi+0ch], eax
mov     [ecx+edi+8], edx
xor     ecx, ecx
mov     edi, [esp+64h]
movd    eax, xmm1
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+2ch]
mov     [eax+edi], ecx
movd    dword ptr [eax+edi+4], xmm0
xor     edi, edi
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    dword ptr [esp+68h], xmm0
or      edi, eax
movd    eax, xmm0
mov     edx, edi
movaps  xmm0, xmm5
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+2ch]
and     edx, 3
shl     edx, 1ch
xor     edx, edi
mov     edi, [esp+64h]
xor     eax, [esp+68h]
mov     [ecx+edi+8], edx
mov     [ecx+edi+0ch], eax
xor     ecx, ecx
movd    eax, xmm5
xor     edx, edx
psrldq  xmm0, 4
movd    dword ptr [esp+6ch], xmm0
movaps  xmm0, xmm2
or      ecx, eax
psrldq  xmm0, 4
movd    eax, xmm2
mov     [esp+2ch], ecx
and     ecx, 3ffff0h
push    0
push    dword ptr [esp+70h]
or      edx, eax
mov     [esp+0b0h], ecx
mov     eax, [esp+60h]
add     eax, ecx
mov     [esp+18h], edx
push    0
mov     [esp+8ch], eax
movd    dword ptr [esp+74h], xmm0
mov     ecx, [eax+4]
mov     edx, [eax]
mov     [esp+3ch], ecx
mov     ecx, [eax+8]
mov     eax, [eax+0ch]
push    edx
mov     [esp+0c0h], edx
mov     [esp+70h], ecx
mov     [esp+6ch], eax
call    __allmul
push    0
push    dword ptr [esp+30h]
mov     [esp+7ch], eax
mov     edi, edx
push    0
push    dword ptr [esp+0bch]
call    __allmul
push    0
push    dword ptr [esp+30h]
mov     [esp+78h], eax
push    0
push    dword ptr [esp+3ch]
mov     [esp+0b4h], edx
call    __allmul
mov     ecx, [esp+74h]
add     eax, ecx
adc     edx, edi
mov     [esp+0c0h], edx
cmp     edx, edi
ja      short loc_37a6f803
jb      short loc_37a6f7ee
cmp     eax, ecx
jnb     short loc_37a6f803
mov     dword ptr [esp+2ch], 0
mov     dword ptr [esp+0a0h], 1
jmp     short loc_37a6f81f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+0a0h], ecx
mov     ecx, [esp+40h]
mov     [esp+2ch], ecx
mov     edx, [esp+70h]
xor     edi, edi
mov     ecx, [esp+0a4h]
add     edi, edx
adc     eax, ecx
mov     [esp+0a4h], eax
cmp     eax, ecx
ja      short loc_37a6f853
jb      short loc_37a6f841
cmp     edi, edx
jnb     short loc_37a6f853
mov     dword ptr [esp+70h], 1
mov     dword ptr [esp+74h], 0
jmp     short loc_37a6f86c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+74h], eax
mov     eax, [esp+40h]
mov     [esp+70h], eax
push    0
push    dword ptr [esp+70h]
push    0
push    dword ptr [esp+3ch]
call    __allmul
add     eax, [esp+0c0h]
mov     ecx, [esp+90h]
adc     edx, 0
add     eax, [esp+2ch]
adc     edx, [esp+0a0h]
add     eax, [esp+70h]
adc     edx, [esp+74h]
add     [esp+78h], eax
mov     eax, [esp+0ach]
adc     edx, [esp+7ch]
add     eax, edi
mov     [esp+7ch], edx
adc     ecx, [esp+0a4h]
mov     edx, [esp+78h]
mov     edi, [esp+7ch]
mov     [esp+90h], ecx
mov     ecx, [esp+80h]
mov     [esp+0ach], eax
mov     [ecx], edx
mov     [ecx+4], edi
mov     ecx, edx
mov     edx, [esp+58h]
xor     ecx, eax
xor     ecx, [esp+0f0h]
mov     eax, edi
xor     eax, [esp+90h]
mov     edi, [esp+0a8h]
xor     eax, [esp+0f4h]
mov     [edx+edi+8], ecx
mov     ecx, edx
mov     edx, edi
mov     edi, [esp+7ch]
xor     edi, [esp+30h]
mov     [esp+7ch], edi
mov     [esp+0d4h], edi
mov     [ecx+edx+0ch], eax
mov     eax, [esp+0ach]
xor     eax, [esp+60h]
mov     edx, [esp+78h]
xor     edx, [esp+0b0h]
mov     [esp+0ach], eax
mov     [esp+0d8h], eax
mov     eax, [esp+90h]
xor     eax, [esp+5ch]
mov     [esp+90h], eax
mov     [esp+0dch], eax
mov     eax, edx
and     eax, 3ffff0h
mov     [esp+78h], edx
mov     [esp+0d0h], edx
add     ecx, eax
mov     edx, [esp+58h]
mov     [esp+5ch], ecx
mov     eax, [eax+edx+8]
mov     [esp+60h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
mov     edi, eax
mov     eax, edx
mov     edx, [esp+5ch]
mov     ecx, edi
mov     [esp+80h], eax
xor     [edx+4], eax
xor     [edx], ecx
mov     eax, [esp+60h]
mov     ecx, [esp+10h]
cdq
xor     eax, edi
xor     edx, [esp+80h]
mov     [esp+6ch], eax
mov     [esp+44h], edx
mov     eax, [esp+64h]
and     ecx, 3ffff0h
add     eax, ecx
mov     [esp+0c0h], eax
push    0
push    dword ptr [esp+6ch]
mov     edx, [eax]
mov     eax, [eax+4]
mov     [esp+38h], eax
mov     eax, [esp+0cch]
add     eax, ecx
mov     [esp+34h], edx
push    0
mov     [esp+0ach], eax
push    edx
mov     ecx, [eax]
mov     eax, [eax+4]
mov     [esp+0b4h], ecx
mov     [esp+50h], eax
call    __allmul
push    0
push    dword ptr [esp+14h]
mov     [esp+64h], eax
mov     edi, edx
push    0
push    dword ptr [esp+38h]
call    __allmul
push    0
push    dword ptr [esp+14h]
mov     [esp+68h], eax
push    0
push    dword ptr [esp+3ch]
mov     [esp+90h], edx
call    __allmul
mov     ecx, edx
mov     edx, [esp+5ch]
add     eax, edx
adc     ecx, edi
mov     [esp+5ch], ecx
cmp     ecx, edi
ja      short loc_37a6fa76
jb      short loc_37a6fa5e
cmp     eax, edx
jnb     short loc_37a6fa76
mov     dword ptr [esp+0b0h], 0
mov     dword ptr [esp+0a8h], 1
jmp     short loc_37a6fa9e
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0b0h], xmm0
mov     ecx, [esp+0b4h]
mov     [esp+0a8h], ecx
mov     ecx, [esp+0b0h]
mov     [esp+0b0h], ecx
mov     edx, [esp+60h]
xor     edi, edi
add     edi, edx
adc     eax, [esp+80h]
mov     [esp+60h], eax
cmp     eax, [esp+80h]
ja      short loc_37a6fad2
jb      short loc_37a6fac0
cmp     edi, edx
jnb     short loc_37a6fad2
mov     dword ptr [esp+74h], 1
mov     dword ptr [esp+70h], 0
jmp     short loc_37a6faf4
xorps   xmm0, xmm0
movlpd  qword ptr [esp+80h], xmm0
mov     eax, [esp+84h]
mov     [esp+70h], eax
mov     eax, [esp+80h]
mov     [esp+74h], eax
push    0
push    dword ptr [esp+6ch]
push    0
push    dword ptr [esp+3ch]
call    __allmul
add     eax, [esp+5ch]
adc     edx, 0
add     eax, [esp+0b0h]
adc     edx, [esp+0a8h]
add     eax, [esp+74h]
adc     edx, [esp+70h]
add     esi, eax
mov     eax, [esp+98h]
mov     ecx, esi
adc     edx, [esp+0bch]
add     [esp+94h], edi
mov     edi, [esp+0a0h]
adc     eax, [esp+60h]
xor     ecx, [esp+94h]
xor     ecx, [esp+0f8h]
mov     [esp+98h], eax
mov     eax, [esp+0c0h]
mov     [eax], esi
xor     esi, [esp+2ch]
mov     [eax+4], edx
mov     eax, edx
xor     eax, [esp+98h]
xor     eax, [esp+0fch]
xor     edx, [esp+30h]
mov     [edi], ecx
mov     ecx, edi
mov     edi, [esp+94h]
xor     edi, [esp+0a4h]
mov     [esp+0bch], edx
mov     [ecx+4], eax
mov     eax, [esp+98h]
xor     eax, [esp+40h]
mov     ecx, [esp+64h]
mov     [esp+98h], eax
mov     [esp+0ech], eax
mov     eax, esi
and     eax, 3ffff0h
mov     [esp+0e4h], edx
mov     edx, [esp+0c4h]
add     ecx, eax
mov     [esp+0e0h], esi
mov     [esp+94h], edi
mov     [esp+0e8h], edi
mov     eax, [edx+eax]
mov     [esp+5ch], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
mov     [esp+4ch], ecx
push    dword ptr [ecx]
call    __alldiv
movaps  xmm3, xmmword ptr [esp+100h]
mov     edi, eax
movaps  xmm4, xmmword ptr [esp+110h]
mov     ecx, edx
movaps  xmm6, ds:xmmword_37b03bf0
mov     [esp+60h], eax
mov     eax, [esp+40h]
mov     [esp+80h], ecx
xor     [eax], edi
xor     [eax+4], ecx
mov     eax, [esp+5ch]
cdq
mov     edi, eax
xor     edx, ecx
xor     edi, [esp+60h]
sub     dword ptr [esp+0c8h], 1
mov     ecx, [esp+6ch]
mov     [esp+44h], edx
jnz     loc_37a6f320
mov     edx, [esp+0cch]
mov     ecx, [esp+58h]
call    loc_37a83f30
mov     edx, [esp+9ch]
mov     ecx, [esp+64h]
call    loc_37a83f30
mov     ecx, [esp+0cch]
call    sub_37a17760
mov     ecx, [esp+9ch]
call    sub_37a17760
mov     edi, [ebp+14h]
mov     esi, [ebp+10h]
push    esi
push    0c8h
mov     eax, [edi]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
mov     ecx, [edi+4]
lea     eax, [esi+20h]
add     esp, 0ch
movzx   edx, byte ptr [ecx]
push    eax
and     edx, 3
push    0c8h
push    ecx
mov     eax, ds:funcs_37a22bf9[edx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
icebp
xchg    eax, ebx
push    eax
add     ecx, [ebp+63645a00h]
xchg    eax, esi
cmc
jmp     dword ptr [ebp+edx*4-13h]
sbb     [eax-61cc340fh], ebx
dec     edi
add     al, 5dh
sub     ah, al
sbb     [ebx-1f90f37h], dl
push    ebp
mov     ecx, 98ea157bh
sbb     ah, [ecx+1bh]
xor     ds:0b428f392h, ebp
pop     ds
cmpsd
dec     ebp
sub     dh, ss:[edx+ecx*8]
pop     esi
retn
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 248h
push    esi
push    edi
mov     edi, [ebp+0ch]
cmp     edi, 2bh
jnb     short loc_37a74dae
push    80h
push    0
push    dword ptr [ebp+10h]
call    _memset
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, [ebp+8]
xor     esi, esi
mov     [esp+10h], eax
push    ecx
mov     ecx, [ebp+14h]
mov     edx, edi
push    dword ptr [ecx+esi*4]
mov     ecx, eax
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    near ptr sub_37a82e20
mov     eax, [esp+10h]
inc     esi
add     eax, edi
mov     [esp+10h], eax
cmp     esi, 4
jb      short loc_37a74db7
mov     eax, [ebp+14h]
xorps   xmm1, xmm1
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+0a8h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+0b4h], eax
mov     eax, [ebp+8]
mov     [esp+0ach], ecx
mov     ecx, [edi+0e0h]
mov     [esp+0b0h], ecx
mov     ecx, [edx+0c0h]
xor     ecx, [eax+23h]
mov     eax, [edx+0c4h]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0bch], edi
mov     edi, [ebp+8]
xor     eax, [edi+27h]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
movaps  xmmword ptr [esp+1e0h], xmm1
movq    xmm1, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     edx, [ebp+0ch]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, edi
mov     [esp+8], ecx
movq    xmm2, qword ptr [esp+8]
punpcklqdq xmm2, xmm0
mov     ecx, [eax+edx+23h]
xor     ecx, [esi+0c0h]
mov     eax, [eax+edx+27h]
xor     eax, [esi+0c4h]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
movaps  xmmword ptr [esp+100h], xmm2
xorps   xmm2, xmm2
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+180h], xmm1
movaps  xmmword ptr [esp+1f0h], xmm2
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm7, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
mov     esi, edi
mov     edi, [esp+0bch]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [esi+edx*2+27h]
xor     eax, [edi+0c4h]
mov     [esp+8], ecx
movq    xmm2, qword ptr [esp+8]
mov     ecx, [esi+edx*2+23h]
xor     ecx, [edi+0c0h]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
movaps  xmmword ptr [esp+1d0h], xmm2
xorps   xmm2, xmm2
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
movq    xmm6, qword ptr [esp+8]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm6, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
lea     eax, [esi+edx*2]
mov     esi, [ebp+14h]
mov     [esp+8], ecx
mov     ecx, [edx+eax+23h]
movaps  xmmword ptr [esp+210h], xmm2
mov     edx, [esi+0ch]
mov     esi, [ebp+0ch]
movq    xmm2, qword ptr [esp+8]
punpcklqdq xmm2, xmm0
xor     ecx, [edx+0c0h]
mov     eax, [esi+eax+27h]
xor     eax, [edx+0c4h]
mov     [esp+8], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
movaps  xmmword ptr [esp+0d0h], xmm2
xorps   xmm2, xmm2
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
punpcklqdq xmm2, xmm0
movaps  xmmword ptr [esp+1b0h], xmm7
movaps  xmmword ptr [esp+1a0h], xmm6
movaps  xmmword ptr [esp+230h], xmm2
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     edi, [esp+0b4h]
mov     [esp+8], ecx
movq    xmm5, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [esp+0a8h]
add     eax, 8
mov     [esp+8], ecx
movq    xmm2, qword ptr [esp+8]
mov     [esp+110h], eax
mov     eax, [esp+0ach]
add     eax, 8
punpcklqdq xmm2, xmm0
mov     [esp+114h], eax
mov     eax, [esp+0b0h]
add     eax, 8
movaps  xmmword ptr [esp+190h], xmm5
mov     [esp+118h], eax
lea     eax, [edi+8]
mov     [esp+11ch], eax
movaps  xmmword ptr [esp+0f0h], xmm2
movd    esi, xmm1
mov     dword ptr [esp+8ch], 0
movd    edx, xmm7
mov     dword ptr [esp+9ch], 0
movd    ecx, xmm6
mov     dword ptr [esp+94h], 0
mov     dword ptr [esp+64h], 0
mov     dword ptr [esp+0bch], 40000h
movd    eax, xmm5
nop     word ptr [eax+eax+00h]
and     eax, 3ffff0h
movaps  xmmword ptr [esp+70h], xmm1
add     eax, edi
and     ecx, 3ffff0h
add     ecx, [esp+0b0h]
and     edx, 3ffff0h
add     edx, [esp+0ach]
and     esi, 3ffff0h
add     esi, [esp+0a8h]
movups  xmm4, xmmword ptr [eax]
movups  xmm3, xmmword ptr [ecx]
movups  xmm2, xmmword ptr [edx]
movups  xmm1, xmmword ptr [esi]
pxor    xmm1, ds:xmmword_37b03bf0
mov     [esp+3ch], eax
movaps  xmm0, xmm1
mov     [esp+5ch], ecx
mov     [esp+20h], edx
movd    eax, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
movaps  xmm0, xmm1
mov     [esp+40h], eax
movzx   ecx, al
movzx   eax, dh
psrldq  xmm0, 0ah
movaps  xmmword ptr [esp+60h], xmm1
mov     ecx, ds:dword_37aff540[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
psrldq  xmm1, 0fh
mov     [esp+10h], esi
movzx   eax, al
xor     ecx, ds:dword_37affd40[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37b00140[eax*4]
mov     eax, [esp+180h]
xor     eax, ecx
mov     ecx, [esp+40h]
xor     ecx, eax
mov     [esp+70h], eax
mov     [esp+40h], ecx
mov     [esp+60h], ecx
shr     ecx, 18h
movzx   eax, dl
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+68h]
movzx   eax, ah
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+6eh]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, [esp+74h]
xor     eax, ecx
xor     edx, eax
mov     [esp+74h], eax
mov     eax, [esp+40h]
mov     ecx, edx
shr     eax, 10h
movzx   eax, al
mov     [esp+0b8h], edx
mov     [esp+64h], edx
shr     ecx, 18h
mov     edx, ds:dword_37affd40[eax*4]
mov     eax, [esp+68h]
movzx   eax, al
xor     edx, ds:dword_37b00140[ecx*4]
xor     edx, ds:dword_37aff540[eax*4]
movzx   eax, byte ptr [esp+6dh]
xor     edx, ds:dword_37aff940[eax*4]
mov     eax, [esp+78h]
xor     eax, edx
mov     edx, [esp+68h]
mov     [esp+78h], eax
xor     edx, eax
mov     eax, [esp+40h]
shr     eax, 8
movzx   ecx, al
mov     eax, [esp+0b8h]
shr     eax, 10h
mov     ecx, ds:dword_37aff940[ecx*4]
movzx   eax, al
shr     edx, 18h
xor     ecx, ds:dword_37affd40[eax*4]
xor     ecx, ds:dword_37b00140[edx*4]
movzx   eax, byte ptr [esp+6ch]
movaps  xmmword ptr [esp+60h], xmm7
xor     ecx, ds:dword_37aff540[eax*4]
xor     [esp+7ch], ecx
xor     ecx, ecx
movaps  xmm0, xmmword ptr [esp+70h]
movaps  xmm1, xmm0
movaps  xmmword ptr [esp+1c0h], xmm0
pxor    xmm1, xmmword ptr [esp+100h]
movaps  xmm0, xmm1
movd    eax, xmm1
psrldq  xmm0, 4
movd    dword ptr [esi+4], xmm0
or      ecx, eax
movhlps xmm1, xmm1
mov     [esi], ecx
movaps  xmm0, xmm1
psrldq  xmm0, 4
xor     esi, esi
movd    eax, xmm1
movaps  xmm1, ds:xmmword_37b03bf0
movd    edi, xmm0
pxor    xmm1, xmm2
or      esi, eax
movaps  xmmword ptr [esp+70h], xmm1
mov     edx, esi
movaps  xmm0, xmm1
mov     eax, edi
psrldq  xmm0, 4
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+10h]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    eax, xmm1
movd    edx, xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 0ah
mov     [esp+10h], eax
movzx   ecx, al
mov     esi, [esp+10h]
movzx   eax, dh
psrldq  xmm1, 0fh
mov     ecx, ds:dword_37aff540[ecx*4]
mov     [esp+40h], edx
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movzx   eax, al
xor     ecx, ds:dword_37affd40[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm7
xor     eax, ecx
xor     esi, eax
mov     [esp+60h], eax
mov     ecx, esi
movzx   eax, dl
shr     ecx, 18h
mov     [esp+10h], esi
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37aff540[eax*4]
mov     edx, [esp+78h]
movzx   eax, dh
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+7eh]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, [esp+64h]
xor     eax, ecx
mov     ecx, [esp+40h]
xor     ecx, eax
mov     [esp+64h], eax
mov     [esp+40h], ecx
mov     eax, esi
shr     eax, 10h
movzx   eax, al
shr     ecx, 18h
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37affd40[eax*4]
movzx   eax, dl
xor     ecx, ds:dword_37aff540[eax*4]
movzx   eax, byte ptr [esp+7dh]
xor     ecx, ds:dword_37aff940[eax*4]
mov     eax, [esp+68h]
xor     eax, ecx
xor     edx, eax
mov     [esp+68h], eax
mov     eax, [esp+40h]
shr     eax, 10h
movzx   eax, al
shr     edx, 18h
mov     ecx, ds:dword_37b00140[edx*4]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, esi
shr     eax, 8
xor     esi, esi
movzx   eax, al
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+7ch]
xor     ecx, ds:dword_37aff540[eax*4]
xor     [esp+6ch], ecx
xor     ecx, ecx
movaps  xmm2, xmmword ptr [esp+60h]
movaps  xmm1, xmm2
movaps  xmmword ptr [esp+200h], xmm2
pxor    xmm1, xmmword ptr [esp+1d0h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
movaps  xmmword ptr [esp+60h], xmm6
mov     eax, [esp+20h]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
movd    eax, xmm1
movaps  xmm1, ds:xmmword_37b03bf0
psrldq  xmm0, 4
pxor    xmm1, xmm3
or      esi, eax
movd    edi, xmm0
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
shr     ecx, 2
and     al, 1
and     ecx, 0ch
add     al, al
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+20h]
and     edx, 3
shl     edx, 1ch
xor     edx, esi
xor     eax, edi
mov     [ecx+8], edx
mov     [ecx+0ch], eax
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edx, xmm0
movaps  xmm0, xmm1
mov     [esp+20h], eax
movzx   ecx, al
movzx   eax, dh
mov     esi, [esp+20h]
psrldq  xmm0, 0ah
mov     ecx, ds:dword_37aff540[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movaps  xmmword ptr [esp+70h], xmm1
psrldq  xmm1, 0fh
movzx   eax, al
mov     [esp+10h], edx
xor     ecx, ds:dword_37affd40[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm6
xor     eax, ecx
xor     esi, eax
mov     [esp+60h], eax
mov     ecx, esi
movzx   eax, dl
mov     edx, [esp+78h]
shr     ecx, 18h
mov     [esp+20h], esi
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37aff540[eax*4]
movzx   eax, dh
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+7eh]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, [esp+64h]
xor     eax, ecx
mov     ecx, [esp+10h]
xor     ecx, eax
mov     [esp+64h], eax
mov     [esp+10h], ecx
mov     eax, esi
shr     eax, 10h
movzx   eax, al
shr     ecx, 18h
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37affd40[eax*4]
movzx   eax, dl
xor     ecx, ds:dword_37aff540[eax*4]
movzx   eax, byte ptr [esp+7dh]
xor     ecx, ds:dword_37aff940[eax*4]
mov     eax, [esp+68h]
xor     eax, ecx
xor     edx, eax
mov     [esp+68h], eax
mov     eax, [esp+10h]
shr     eax, 10h
movzx   eax, al
shr     edx, 18h
mov     ecx, ds:dword_37b00140[edx*4]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, esi
shr     eax, 8
movzx   eax, al
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+7ch]
xor     ecx, ds:dword_37aff540[eax*4]
xor     [esp+6ch], ecx
xor     ecx, ecx
movaps  xmm3, xmmword ptr [esp+60h]
movaps  xmm1, xmm3
movaps  xmmword ptr [esp+220h], xmm3
pxor    xmm1, xmmword ptr [esp+0d0h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
or      ecx, eax
mov     eax, [esp+5ch]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movhlps xmm1, xmm1
xor     esi, esi
movaps  xmm0, xmm1
movd    eax, xmm1
movaps  xmm1, ds:xmmword_37b03bf0
psrldq  xmm0, 4
pxor    xmm1, xmm4
or      esi, eax
movd    edi, xmm0
mov     edx, esi
movaps  xmmword ptr [esp+70h], xmm1
movaps  xmm0, xmm1
movaps  xmmword ptr [esp+60h], xmm5
mov     eax, edi
psrldq  xmm0, 4
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+5ch]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
mov     [ecx+0ch], eax
mov     [ecx+8], edx
movd    eax, xmm1
movd    edx, xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 0ah
mov     [esp+20h], eax
movzx   ecx, al
mov     esi, [esp+20h]
movzx   eax, dh
psrldq  xmm1, 0fh
mov     ecx, ds:dword_37aff540[ecx*4]
mov     [esp+10h], edx
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movzx   eax, al
xor     ecx, ds:dword_37affd40[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm5
xor     eax, ecx
xor     esi, eax
mov     [esp+60h], eax
mov     ecx, esi
movzx   eax, dl
mov     edx, [esp+78h]
shr     ecx, 18h
mov     [esp+20h], esi
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37aff540[eax*4]
movzx   eax, dh
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+7eh]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, [esp+64h]
xor     eax, ecx
mov     ecx, [esp+10h]
xor     ecx, eax
mov     [esp+64h], eax
mov     [esp+10h], ecx
mov     eax, esi
shr     ecx, 18h
shr     eax, 10h
movzx   eax, al
mov     ecx, ds:dword_37b00140[ecx*4]
xor     ecx, ds:dword_37affd40[eax*4]
movzx   eax, dl
xor     ecx, ds:dword_37aff540[eax*4]
movzx   eax, byte ptr [esp+7dh]
xor     ecx, ds:dword_37aff940[eax*4]
mov     eax, [esp+68h]
xor     eax, ecx
xor     edx, eax
mov     [esp+68h], eax
mov     eax, [esp+10h]
shr     eax, 10h
movzx   eax, al
shr     edx, 18h
mov     ecx, ds:dword_37b00140[edx*4]
xor     ecx, ds:dword_37affd40[eax*4]
mov     eax, esi
shr     eax, 8
xor     esi, esi
movzx   eax, al
xor     ecx, ds:dword_37aff940[eax*4]
movzx   eax, byte ptr [esp+7ch]
xor     ecx, ds:dword_37aff540[eax*4]
xor     [esp+6ch], ecx
xor     ecx, ecx
movaps  xmm4, xmmword ptr [esp+60h]
movaps  xmm1, xmm4
movaps  xmmword ptr [esp+240h], xmm4
pxor    xmm1, xmmword ptr [esp+0f0h]
movd    eax, xmm1
movaps  xmm0, xmm1
psrldq  xmm0, 4
movhlps xmm1, xmm1
or      ecx, eax
mov     eax, [esp+3ch]
mov     [eax], ecx
movd    dword ptr [eax+4], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    edi, xmm0
movd    eax, xmm1
movaps  xmm1, xmmword ptr [esp+1c0h]
movaps  xmm0, xmm1
or      esi, eax
psrldq  xmm0, 4
mov     edx, esi
mov     eax, edi
shrd    edx, eax, 18h
shr     eax, 18h
mov     al, dl
movzx   ecx, dl
and     al, 1
shr     ecx, 2
add     al, al
and     ecx, 0ch
or      ecx, eax
mov     edx, 7531h
sar     edx, cl
xor     eax, eax
mov     ecx, [esp+3ch]
xor     eax, edi
and     edx, 3
shl     edx, 1ch
xor     edx, esi
movd    esi, xmm0
mov     [ecx+0ch], eax
movaps  xmm0, xmm2
mov     [ecx+8], edx
xor     ecx, ecx
movd    eax, xmm1
mov     [esp+0a4h], esi
psrldq  xmm0, 4
or      ecx, eax
mov     [esp+10h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+0a8h]
mov     [esp+88h], ecx
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+130h], eax
mov     eax, [ecx+0ch]
mov     [esp+8], edi
mov     [esp+134h], eax
xor     ecx, ecx
movd    eax, xmm2
movd    dword ptr [esp+40h], xmm0
movaps  xmm0, xmm3
psrldq  xmm0, 4
or      ecx, eax
movd    dword ptr [esp+0a0h], xmm0
mov     [esp+0d0h], ecx
movaps  xmm0, xmm4
and     ecx, 3ffff0h
psrldq  xmm0, 4
add     ecx, [esp+0ach]
mov     [esp+98h], ecx
push    0
push    esi
mov     eax, [ecx]
mov     [esp+0d0h], eax
mov     eax, [ecx+4]
mov     [esp+0d4h], eax
mov     eax, [ecx+8]
mov     [esp+150h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+154h], eax
movd    eax, xmm3
push    0
push    edi
or      ecx, eax
movd    dword ptr [esp+0c8h], xmm0
mov     [esp+100h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+0c0h]
mov     [esp+0a0h], ecx
mov     eax, [ecx]
mov     [esp+0f8h], eax
mov     eax, [ecx+4]
mov     [esp+0fch], eax
mov     eax, [ecx+8]
mov     [esp+170h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+174h], eax
movd    eax, xmm4
or      ecx, eax
mov     [esp+80h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+0c4h]
mov     [esp+70h], ecx
mov     eax, [ecx]
mov     [esp+0d0h], eax
mov     eax, [ecx+4]
mov     [esp+0d4h], eax
mov     eax, [ecx+8]
mov     [esp+188h], eax
mov     eax, [ecx+0ch]
mov     [esp+18ch], eax
call    __allmul
push    0
push    dword ptr [esp+14h]
mov     [esp+88h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+14h]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+110h], edx
call    __allmul
mov     ecx, eax
mov     edi, edx
mov     eax, [esp+80h]
add     ecx, eax
adc     edi, esi
cmp     edi, esi
ja      short loc_37a75ab4
jb      short loc_37a75aa2
cmp     ecx, eax
jnb     short loc_37a75ab4
mov     dword ptr [esp+5ch], 0
mov     dword ptr [esp+3ch], 1
jmp     short loc_37a75ad6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+80h], xmm0
mov     eax, [esp+84h]
mov     [esp+3ch], eax
mov     eax, [esp+80h]
mov     [esp+5ch], eax
mov     edx, [esp+20h]
xor     eax, eax
add     eax, edx
mov     [esp+128h], eax
adc     ecx, [esp+100h]
mov     [esp+12ch], ecx
cmp     ecx, [esp+100h]
ja      short loc_37a75b14
jb      short loc_37a75b02
cmp     eax, edx
jnb     short loc_37a75b14
mov     dword ptr [esp+10h], 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a75b36
xorps   xmm0, xmm0
movlpd  qword ptr [esp+100h], xmm0
mov     eax, [esp+104h]
mov     [esp+20h], eax
mov     eax, [esp+100h]
mov     [esp+10h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+0a8h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+128h]
add     edi, eax
mov     ecx, [esp+88h]
adc     esi, edx
movq    xmm2, qword ptr [esp+8]
add     edi, [esp+10h]
mov     edx, [esp+110h]
adc     esi, [esp+20h]
add     edi, [esp+5ch]
mov     [esp+120h], edi
adc     esi, [esp+3ch]
mov     [esp+124h], esi
movq    xmm1, qword ptr [esp+120h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+180h]
movaps  xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+1e0h]
movups  xmmword ptr [ecx], xmm0
mov     eax, [ecx]
xor     [ecx+8], eax
movq    xmm0, qword ptr [esp+130h]
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
mov     ecx, [esp+0a8h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+180h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+88h], ecx
mov     eax, [edx+eax]
mov     [esp+0a4h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+1c0h]
mov     edi, edx
mov     edx, [esp+88h]
mov     esi, eax
push    0
push    dword ptr [esp+44h]
mov     eax, edi
movaps  xmmword ptr [esp+108h], xmm0
xor     [edx+4], eax
mov     ecx, esi
xor     [edx], ecx
mov     eax, [esp+0ach]
cdq
push    0
push    dword ptr [esp+0d4h]
xor     eax, esi
xor     edx, edi
mov     [esp+20h], eax
mov     [esp+9ch], edx
call    __allmul
mov     edi, [esp+0d0h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0d4h]
mov     [esp+98h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0d8h]
mov     [esp+0e0h], eax
mov     [esp+0b4h], edx
call    __allmul
mov     ecx, [esp+88h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a75cc0
jb      short loc_37a75cab
cmp     eax, ecx
jnb     short loc_37a75cc0
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+80h], 1
jmp     short loc_37a75ce5
xorps   xmm0, xmm0
movlpd  qword ptr [esp+88h], xmm0
mov     ecx, [esp+8ch]
mov     [esp+80h], ecx
mov     ecx, [esp+88h]
mov     [esp+3ch], ecx
mov     edx, [esp+0d0h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+140h], ecx
adc     eax, [esp+0a4h]
mov     [esp+144h], eax
cmp     eax, [esp+0a4h]
ja      short loc_37a75d26
jb      short loc_37a75d14
cmp     ecx, edx
jnb     short loc_37a75d26
mov     dword ptr [esp+20h], 1
mov     dword ptr [esp+5ch], 0
jmp     short loc_37a75d48
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0d0h], xmm0
mov     eax, [esp+0d4h]
mov     [esp+5ch], eax
mov     eax, [esp+0d0h]
mov     [esp+20h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+44h]
push    esi
push    dword ptr [esp+0d8h]
call    __allmul
movq    xmm0, qword ptr [esp+140h]
add     edi, eax
mov     ecx, [esp+98h]
adc     esi, edx
movq    xmm2, qword ptr [esp+0c8h]
add     edi, [esp+20h]
mov     edx, [esp+114h]
adc     esi, [esp+5ch]
add     edi, [esp+3ch]
mov     [esp+138h], edi
adc     esi, [esp+80h]
mov     [esp+13ch], esi
movq    xmm1, qword ptr [esp+138h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1b0h]
movaps  xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+1f0h]
movups  xmmword ptr [ecx], xmm0
mov     eax, [ecx]
xor     [ecx+8], eax
movq    xmm0, qword ptr [esp+148h]
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
mov     ecx, [esp+0ach]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+1b0h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+98h], ecx
mov     eax, [edx+eax]
mov     [esp+0d0h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+200h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+1d0h], xmm0
mov     edx, [esp+98h]
mov     ecx, eax
push    0
push    dword ptr [esp+0a4h]
mov     [esp+90h], eax
mov     esi, edi
xor     [edx], esi
xor     [edx+4], ecx
mov     eax, [esp+0d8h]
cdq
push    0
push    dword ptr [esp+0f4h]
xor     eax, edi
xor     edx, ecx
mov     [esp+30h], eax
mov     [esp+0ach], edx
call    __allmul
mov     esi, [esp+0f0h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+0f4h]
mov     [esp+0a8h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+0f8h]
mov     [esp+100h], eax
mov     [esp+0e0h], edx
call    __allmul
mov     ecx, [esp+98h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a75edf
jb      short loc_37a75ecd
cmp     eax, ecx
jnb     short loc_37a75edf
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+40h], 1
jmp     short loc_37a75f01
xorps   xmm0, xmm0
movlpd  qword ptr [esp+98h], xmm0
mov     ecx, [esp+9ch]
mov     [esp+40h], ecx
mov     ecx, [esp+98h]
mov     [esp+3ch], ecx
mov     edx, [esp+0f0h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+158h], ecx
adc     eax, [esp+0d0h]
mov     [esp+15ch], eax
cmp     eax, [esp+0d0h]
ja      short loc_37a75f45
jb      short loc_37a75f30
cmp     ecx, edx
jnb     short loc_37a75f45
mov     dword ptr [esp+80h], 1
mov     dword ptr [esp+5ch], 0
jmp     short loc_37a75f6a
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0f0h], xmm0
mov     eax, [esp+0f4h]
mov     [esp+5ch], eax
mov     eax, [esp+0f0h]
mov     [esp+80h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+0a4h]
push    edi
push    dword ptr [esp+0f8h]
call    __allmul
movq    xmm0, qword ptr [esp+158h]
add     esi, eax
mov     ecx, [esp+90h]
adc     edi, edx
movq    xmm2, qword ptr [esp+0e8h]
add     esi, [esp+80h]
mov     edx, [esp+118h]
adc     edi, [esp+5ch]
add     esi, [esp+3ch]
mov     [esp+150h], esi
adc     edi, [esp+40h]
mov     [esp+154h], edi
movq    xmm1, qword ptr [esp+150h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+1a0h]
movaps  xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+210h]
movups  xmmword ptr [ecx], xmm0
mov     eax, [ecx]
xor     [ecx+8], eax
movq    xmm0, qword ptr [esp+160h]
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
mov     ecx, [esp+0b0h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+1a0h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+90h], ecx
mov     eax, [edx+eax]
mov     [esp+0f0h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+220h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+0d0h], xmm0
mov     edx, [esp+90h]
mov     ecx, eax
push    0
push    dword ptr [esp+0bch]
mov     [esp+0a0h], eax
mov     esi, edi
xor     [edx], esi
xor     [edx+4], ecx
mov     eax, [esp+0f8h]
cdq
push    0
push    dword ptr [esp+0cch]
xor     eax, edi
xor     edx, ecx
mov     [esp+6ch], eax
mov     [esp+0a4h], edx
call    __allmul
mov     edi, [esp+70h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+0cch]
mov     [esp+0a0h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0d0h]
mov     [esp+80h], eax
mov     [esp+100h], edx
call    __allmul
mov     ecx, [esp+90h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a76104
jb      short loc_37a760ef
cmp     eax, ecx
jnb     short loc_37a76104
mov     dword ptr [esp+80h], 0
mov     dword ptr [esp+3ch], 1
jmp     short loc_37a76129
xorps   xmm0, xmm0
movlpd  qword ptr [esp+90h], xmm0
mov     ecx, [esp+94h]
mov     [esp+3ch], ecx
mov     ecx, [esp+90h]
mov     [esp+80h], ecx
mov     edx, [esp+70h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+170h], ecx
adc     eax, [esp+0f0h]
mov     [esp+174h], eax
cmp     eax, [esp+0f0h]
ja      short loc_37a76167
jb      short loc_37a76155
cmp     ecx, edx
jnb     short loc_37a76167
mov     esi, 1
mov     dword ptr [esp+0a0h], 0
jmp     short loc_37a7617f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+70h], xmm0
mov     eax, [esp+74h]
mov     esi, [esp+70h]
mov     [esp+0a0h], eax
push    0
push    dword ptr [esp+0bch]
push    0
push    dword ptr [esp+0d0h]
call    __allmul
movq    xmm0, qword ptr [esp+170h]
add     eax, edi
mov     ecx, [esp+60h]
adc     edx, 0
movq    xmm2, qword ptr [esp+0c0h]
add     eax, esi
adc     edx, [esp+0a0h]
add     eax, [esp+80h]
mov     [esp+168h], eax
adc     edx, [esp+3ch]
mov     [esp+16ch], edx
movq    xmm1, qword ptr [esp+168h]
mov     edx, [esp+11ch]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+190h]
movaps  xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+230h]
movups  xmmword ptr [ecx], xmm0
mov     eax, [ecx]
xor     [ecx+8], eax
movq    xmm0, qword ptr [esp+178h]
mov     eax, [ecx+4]
xor     [ecx+0ch], eax
mov     ecx, [esp+0b4h]
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+190h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+60h], ecx
mov     eax, [edx+eax]
mov     [esp+70h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+240h]
mov     edi, eax
movaps  xmm5, xmmword ptr [esp+190h]
mov     eax, edx
mov     edx, [esp+60h]
mov     ecx, eax
movaps  xmm6, xmmword ptr [esp+1a0h]
mov     esi, edi
movaps  xmm7, xmmword ptr [esp+1b0h]
movaps  xmm1, xmmword ptr [esp+180h]
xor     [edx], esi
xor     [edx+4], ecx
mov     esi, [esp+10h]
mov     [esp+90h], eax
mov     eax, [esp+70h]
cdq
xor     edx, ecx
movaps  xmmword ptr [esp+0f0h], xmm0
mov     ecx, [esp+5ch]
xor     eax, edi
sub     dword ptr [esp+0bch], 1
mov     edi, [esp+0b4h]
mov     [esp+64h], edx
mov     edx, [esp+20h]
jnz     loc_37a751a0
mov     edi, [ebp+10h]
xor     esi, esi
nop     dword ptr [eax+eax+00h]
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a83f30
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a762d0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 88h
mov     edx, [ebp+0ch]
push    esi
mov     esi, [ebp+14h]
push    edi
push    ecx
mov     ecx, [ebp+8]
push    dword ptr [esi]
call    sub_37a181e0
mov     ecx, [esi]
add     esp, 8
mov     edx, [ecx+0e0h]
call    sub_37a81cc0
mov     esi, [esi]
mov     [esp+6ch], esi
mov     dword ptr [esp+40h], 40000h
mov     eax, [esi+20h]
xor     eax, [esi]
mov     ecx, [esi+2ch]
xor     ecx, [esi+0ch]
mov     edi, [esi+0e0h]
mov     edx, [esi+24h]
xor     edx, [esi+4]
mov     [esp+38h], eax
mov     [esp+70h], eax
mov     eax, [esi+28h]
xor     eax, [esi+8]
mov     [esp+10h], eax
mov     [esp+78h], eax
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+3ch], ecx
mov     [esp+7ch], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+64h], eax
mov     eax, [esi+34h]
mov     [esp+60h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
xor     eax, [esi+14h]
movq    xmm0, qword ptr [esp+60h]
mov     esi, [esp+38h]
mov     [esp+64h], eax
lea     eax, [edi+8]
mov     [esp+60h], ecx
movq    xmm2, qword ptr [esp+60h]
mov     [esp+60h], eax
mov     eax, esi
mov     [esp+44h], edi
mov     [esp+0ch], edx
mov     [esp+74h], edx
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+78h]
and     eax, 3ffff0h
movq    xmm1, qword ptr [esp+70h]
xor     ecx, ecx
punpcklqdq xmm1, xmm0
push    0
movups  xmm3, xmmword ptr [eax+edi]
aesenc  xmm3, xmm1
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+84h], xmm3
pxor    xmm0, xmm2
movups  xmmword ptr [eax+edi], xmm0
movaps  xmm0, xmm3
movd    eax, xmm3
psrldq  xmm0, 4
movd    dword ptr [esp+24h], xmm0
or      ecx, eax
mov     eax, ecx
mov     [esp+20h], ecx
and     eax, 3ffff0h
mov     edx, [eax+edi]
lea     ecx, [eax+edi]
mov     [esp+3ch], ecx
mov     ecx, [ecx+4]
mov     [esp+1ch], ecx
lea     ecx, [edi+8]
mov     [esp+18h], edx
add     eax, ecx
mov     edx, [esp+24h]
push    edx
push    0
mov     ecx, [eax]
push    dword ptr [esp+20h]
mov     [esp+60h], eax
mov     eax, [eax+4]
mov     [esp+64h], ecx
mov     [esp+68h], eax
call    __allmul
push    0
push    dword ptr [esp+20h]
mov     [esp+38h], eax
mov     edi, edx
push    0
push    dword ptr [esp+20h]
call    __allmul
push    0
push    dword ptr [esp+20h]
mov     [esp+30h], eax
push    0
push    dword ptr [esp+24h]
mov     [esp+58h], edx
call    __allmul
mov     ecx, [esp+30h]
add     eax, ecx
adc     edx, edi
mov     [esp+4ch], edx
cmp     edx, edi
ja      short loc_37a77f9a
jb      short loc_37a77f88
cmp     eax, ecx
jnb     short loc_37a77f9a
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+24h], 1
jmp     short loc_37a77fb3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+24h], ecx
mov     ecx, [esp+30h]
mov     [esp+1ch], ecx
mov     ecx, [esp+28h]
xor     edi, edi
mov     edx, [esp+48h]
add     edi, ecx
adc     eax, edx
mov     [esp+48h], eax
cmp     eax, edx
ja      short loc_37a77fe1
jb      short loc_37a77fcf
cmp     edi, ecx
jnb     short loc_37a77fe1
mov     dword ptr [esp+28h], 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a77ffa
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     [esp+30h], eax
mov     eax, [esp+28h]
mov     [esp+28h], eax
push    0
push    dword ptr [esp+24h]
push    0
push    dword ptr [esp+24h]
call    __allmul
add     eax, [esp+4ch]
mov     ecx, [esp+0ch]
adc     edx, 0
add     eax, [esp+1ch]
adc     edx, [esp+24h]
add     eax, [esp+28h]
adc     edx, [esp+30h]
add     esi, eax
mov     eax, esi
adc     ecx, edx
mov     edx, [esp+38h]
add     [esp+10h], edi
mov     edi, [esp+3ch]
adc     edi, [esp+48h]
mov     [edx], esi
mov     edx, ecx
mov     esi, [esp+38h]
mov     [esp+0ch], ecx
mov     [esi+4], edx
mov     esi, [esp+50h]
mov     edx, [esp+10h]
mov     [esi], edx
xor     edx, [esp+54h]
mov     [esi+4], edi
mov     esi, [esp+14h]
xor     esi, eax
xor     edi, [esp+58h]
mov     eax, [esp+18h]
xor     eax, ecx
mov     [esp+10h], edx
mov     ecx, [esp+44h]
mov     [esp+0ch], eax
mov     [esp+74h], eax
mov     eax, esi
and     eax, 3ffff0h
mov     [esp+78h], edx
mov     edx, [esp+60h]
add     ecx, eax
mov     [esp+70h], esi
mov     [esp+3ch], edi
mov     [esp+7ch], edi
mov     eax, [eax+edx]
mov     [esp+54h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
mov     [esp+64h], ecx
push    dword ptr [ecx]
call    __alldiv
movaps  xmm2, xmmword ptr [esp+80h]
mov     edi, eax
mov     eax, edx
mov     ecx, edi
mov     edx, [esp+58h]
xor     [edx+4], eax
mov     eax, [esp+54h]
xor     [edx], ecx
not     eax
cdq
xor     eax, edi
sub     dword ptr [esp+40h], 1
mov     edi, [esp+44h]
jnz     loc_37a77eb3
mov     esi, [esp+6ch]
mov     edx, esi
mov     ecx, [esi+0e0h]
call    sub_37a82360
mov     ecx, esi
call    sub_37a17760
mov     ecx, [ebp+14h]
push    dword ptr [ebp+10h]
push    0c8h
mov     eax, [ecx]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 0d8h
mov     eax, [ebp+14h]
push    esi
mov     esi, [ebp+8]
push    edi
mov     edi, [ebp+0ch]
mov     edx, edi
push    ecx
push    dword ptr [eax]
mov     ecx, esi
call    sub_37a181e0
mov     eax, [ebp+14h]
lea     ecx, [esi+edi]
add     esp, 4
mov     edx, edi
push    dword ptr [eax+4]
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     edi, [eax]
mov     esi, [eax+4]
mov     [esp+0bch], edi
mov     [esp+70h], esi
mov     ecx, [edi+0e0h]
mov     edx, ecx
mov     eax, [esi+0e0h]
mov     [esp+24h], ecx
mov     ecx, edi
mov     [esp+1ch], eax
call    sub_37a81cc0
mov     edx, [esp+1ch]
mov     ecx, esi
call    sub_37a81cc0
mov     eax, [edi+20h]
xor     eax, [edi]
mov     ecx, [edi+24h]
xor     ecx, [edi+4]
mov     [esp+20h], eax
mov     [esp+98h], eax
mov     eax, esi
mov     [esp+18h], ecx
mov     [esp+9ch], ecx
mov     ecx, [edi+28h]
mov     edx, [eax+20h]
xor     edx, [eax]
xor     ecx, [edi+8]
mov     esi, [eax+24h]
xor     esi, [eax+4]
mov     [esp+68h], edx
mov     [esp+0a8h], edx
mov     edx, [edi+2ch]
xor     edx, [edi+0ch]
mov     [esp+44h], ecx
mov     [esp+0a0h], ecx
mov     ecx, [eax+28h]
xor     ecx, [eax+8]
mov     [esp+48h], edx
mov     [esp+0a4h], edx
mov     edx, [eax+2ch]
xor     edx, [eax+0ch]
mov     [esp+50h], ecx
mov     eax, edx
mov     [esp+0b0h], ecx
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0b4h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
movq    xmm0, qword ptr [esp+8]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm4, qword ptr [esp+8]
mov     [esp+4ch], esi
mov     [esp+0ach], esi
mov     [esp+6ch], edx
punpcklqdq xmm4, xmm0
mov     edi, [esp+70h]
mov     dword ptr [esp+88h], 40000h
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
movq    xmm0, qword ptr [esp+8]
mov     edi, [esp+20h]
mov     [esp+0ch], eax
mov     eax, [esp+24h]
mov     [esp+8], ecx
add     eax, 8
mov     ecx, [esp+1ch]
movq    xmm5, qword ptr [esp+8]
mov     [esp+8ch], eax
punpcklqdq xmm5, xmm0
lea     eax, [ecx+8]
mov     [esp+94h], eax
mov     eax, [esp+68h]
jmp     short loc_37a782e4
mov     ecx, [esp+1ch]
mov     edx, [esp+24h]
and     edi, 3ffff0h
movq    xmm0, qword ptr [esp+0a0h]
and     eax, 3ffff0h
movq    xmm1, qword ptr [esp+98h]
xor     esi, esi
punpcklqdq xmm1, xmm0
movups  xmm2, xmmword ptr [edi+edx]
movups  xmm3, xmmword ptr [eax+ecx]
movq    xmm0, qword ptr [esp+0b0h]
aesenc  xmm2, xmm1
movq    xmm1, qword ptr [esp+0a8h]
punpcklqdq xmm1, xmm0
movaps  xmm0, xmm2
pxor    xmm0, xmm4
movaps  xmmword ptr [esp+0c0h], xmm2
movups  xmmword ptr [edi+edx], xmm0
xor     edi, edi
aesenc  xmm3, xmm1
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+0d0h], xmm3
pxor    xmm0, xmm5
movups  xmmword ptr [eax+ecx], xmm0
movaps  xmm0, xmm2
movd    eax, xmm2
psrldq  xmm0, 4
movd    ecx, xmm0
movaps  xmm0, xmm3
or      esi, eax
psrldq  xmm0, 4
movd    eax, xmm3
push    0
push    ecx
or      edi, eax
mov     [esp+7ch], ecx
mov     eax, esi
mov     [esp+6ch], edi
and     eax, 3ffff0h
movd    dword ptr [esp+98h], xmm0
add     edx, eax
add     eax, [esp+94h]
mov     [esp+84h], edx
push    0
mov     [esp+38h], eax
mov     edi, [edx]
mov     edx, [edx+4]
mov     [esp+1ch], edx
mov     edx, [eax]
mov     eax, [eax+4]
push    edi
mov     [esp+68h], edi
mov     [esp+48h], edx
mov     [esp+18h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+64h]
mov     [esp+40h], eax
mov     edi, edx
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+1ch]
mov     [esp+24h], eax
mov     [esp+90h], edx
call    __allmul
mov     esi, eax
mov     ecx, edx
mov     eax, [esp+30h]
add     esi, eax
adc     ecx, edi
mov     [esp+78h], ecx
cmp     ecx, edi
ja      short loc_37a78425
jb      short loc_37a78413
cmp     esi, eax
jnb     short loc_37a78425
mov     dword ptr [esp+54h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a7843e
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     [esp+28h], eax
mov     eax, [esp+30h]
mov     [esp+54h], eax
mov     ecx, [esp+14h]
xor     edi, edi
add     edi, ecx
adc     esi, [esp+80h]
cmp     esi, [esp+80h]
ja      short loc_37a7846e
jb      short loc_37a7845c
cmp     edi, ecx
jnb     short loc_37a7846e
mov     dword ptr [esp+14h], 1
mov     dword ptr [esp+30h], 0
jmp     short loc_37a78490
xorps   xmm0, xmm0
movlpd  qword ptr [esp+80h], xmm0
mov     eax, [esp+84h]
mov     [esp+30h], eax
mov     eax, [esp+80h]
mov     [esp+14h], eax
push    0
push    dword ptr [esp+78h]
push    0
push    dword ptr [esp+1ch]
call    __allmul
add     eax, [esp+78h]
mov     ecx, [esp+20h]
adc     edx, 0
add     eax, [esp+54h]
adc     edx, [esp+28h]
add     eax, [esp+14h]
adc     edx, [esp+30h]
add     ecx, eax
mov     eax, ecx
mov     [esp+20h], ecx
adc     [esp+18h], edx
add     [esp+44h], edi
mov     edi, ecx
mov     edx, [esp+7ch]
adc     [esp+48h], esi
mov     esi, [esp+18h]
mov     ecx, [esp+24h]
mov     [edx], edi
mov     edi, [esp+48h]
mov     [edx+4], esi
mov     edx, [esp+2ch]
mov     esi, [esp+44h]
mov     [edx], esi
xor     esi, [esp+38h]
mov     [edx+4], edi
mov     edx, [esp+58h]
xor     edx, eax
xor     edi, [esp+8]
mov     eax, [esp+10h]
xor     eax, [esp+18h]
mov     [esp+18h], eax
mov     [esp+9ch], eax
mov     eax, edx
and     eax, 3ffff0h
mov     [esp+20h], edx
mov     [esp+98h], edx
add     ecx, eax
mov     edx, [esp+8ch]
mov     [esp+44h], esi
mov     [esp+0a0h], esi
mov     [esp+48h], edi
mov     eax, [eax+edx]
mov     [esp+38h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
mov     [esp+0b0h], edi
push    dword ptr [ecx]
mov     [esp+18h], ecx
call    __alldiv
mov     esi, eax
mov     edi, edx
mov     edx, [esp+8]
mov     eax, edi
mov     ecx, esi
xor     [edx+4], eax
xor     [edx], ecx
mov     eax, [esp+38h]
mov     ecx, [esp+64h]
not     eax
cdq
and     ecx, 3ffff0h
xor     eax, esi
mov     [esp+54h], eax
mov     eax, [esp+1ch]
add     eax, ecx
mov     [esp+7ch], eax
mov     edx, [eax]
mov     eax, [eax+4]
mov     [esp+10h], eax
mov     eax, [esp+94h]
add     eax, ecx
mov     [esp+28h], edx
mov     [esp+78h], eax
mov     ecx, [eax]
mov     eax, [eax+4]
push    0
push    dword ptr [esp+94h]
mov     [esp+7ch], ecx
push    0
push    edx
mov     [esp+90h], eax
call    __allmul
push    0
push    dword ptr [esp+68h]
mov     edi, eax
mov     esi, edx
push    0
push    dword ptr [esp+34h]
call    __allmul
push    0
push    dword ptr [esp+68h]
mov     [esp+10h], eax
push    0
push    dword ptr [esp+1ch]
mov     [esp+48h], edx
call    __allmul
add     eax, edi
mov     ecx, edx
adc     ecx, esi
mov     [esp+2ch], ecx
cmp     ecx, esi
ja      short loc_37a78622
jb      short loc_37a78610
cmp     eax, edi
jnb     short loc_37a78622
mov     dword ptr [esp+58h], 0
mov     dword ptr [esp+30h], 1
jmp     short loc_37a7863b
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     ecx, [esp+5ch]
mov     [esp+30h], ecx
mov     ecx, [esp+58h]
mov     [esp+58h], ecx
mov     edx, [esp+8]
xor     edi, edi
add     edi, edx
adc     eax, [esp+38h]
mov     [esp+8], eax
cmp     eax, [esp+38h]
ja      short loc_37a78666
jb      short loc_37a78657
cmp     edi, edx
jnb     short loc_37a78666
mov     esi, 1
mov     dword ptr [esp+14h], 0
jmp     short loc_37a7867b
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     eax, [esp+3ch]
mov     esi, [esp+38h]
mov     [esp+14h], eax
push    0
push    dword ptr [esp+94h]
push    0
push    dword ptr [esp+1ch]
call    __allmul
add     eax, [esp+2ch]
mov     ecx, [esp+4ch]
adc     edx, 0
add     eax, [esp+58h]
adc     edx, [esp+30h]
add     eax, esi
mov     esi, [esp+68h]
adc     edx, [esp+14h]
add     esi, eax
mov     eax, esi
adc     ecx, edx
mov     edx, [esp+7ch]
add     [esp+50h], edi
mov     edi, [esp+6ch]
adc     edi, [esp+8]
mov     [edx], esi
mov     esi, ecx
mov     [edx+4], esi
mov     edx, [esp+78h]
mov     esi, [esp+50h]
mov     [esp+4ch], ecx
mov     [edx], esi
mov     [edx+4], edi
mov     edx, [esp+28h]
xor     edx, eax
xor     esi, [esp+74h]
mov     eax, [esp+10h]
xor     edi, [esp+80h]
xor     eax, ecx
mov     ecx, [esp+1ch]
mov     [esp+4ch], eax
mov     [esp+0ach], eax
mov     eax, edx
and     eax, 3ffff0h
mov     [esp+68h], edx
mov     [esp+0a8h], edx
add     ecx, eax
mov     edx, [esp+94h]
mov     [esp+50h], esi
mov     [esp+0b0h], esi
mov     [esp+6ch], edi
mov     eax, [eax+edx]
mov     [esp+38h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
mov     [esp+0c0h], edi
push    dword ptr [ecx]
mov     [esp+18h], ecx
call    __alldiv
movaps  xmm4, xmmword ptr [esp+0c0h]
mov     edi, eax
movaps  xmm5, xmmword ptr [esp+0d0h]
mov     eax, edx
mov     edx, [esp+8]
mov     ecx, eax
mov     eax, [esp+38h]
mov     esi, edi
not     eax
xor     [edx], esi
xor     [edx+4], ecx
cdq
xor     eax, edi
sub     dword ptr [esp+88h], 1
mov     edi, [esp+54h]
jnz     loc_37a782e0
mov     edx, [esp+0bch]
mov     ecx, [esp+24h]
call    sub_37a82360
mov     edx, [esp+70h]
mov     ecx, [esp+1ch]
call    sub_37a82360
mov     ecx, [esp+0bch]
call    sub_37a17760
mov     ecx, [esp+70h]
call    sub_37a17760
mov     edi, [ebp+14h]
mov     esi, [ebp+10h]
push    esi
push    0c8h
mov     eax, [edi]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
mov     ecx, [edi+4]
lea     eax, [esi+20h]
add     esp, 0ch
movzx   edx, byte ptr [ecx]
push    eax
and     edx, 3
push    0c8h
push    ecx
mov     eax, ds:funcs_37a22bf9[edx*4]
call    eax
add     esp, 0ch
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 148h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a81cc0
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 3
jb      short loc_37a79216
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     ecx, [edx+0e0h]
mov     [esp+48h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [edi+0e0h]
mov     [esp+34h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+4ch], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm5, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
movq    xmm7, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm7, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm3, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
movq    xmm4, qword ptr [esp+8]
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
mov     [esp+8], ecx
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+8]
movaps  xmmword ptr [esp+100h], xmm5
movaps  xmmword ptr [esp+0f0h], xmm3
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     esi, [esp+48h]
mov     [esp+8], ecx
add     esi, 8
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
movq    xmm1, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8ch], esi
mov     esi, [esp+34h]
add     esi, 8
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+90h], esi
mov     esi, [esp+4ch]
mov     [esp+8], ecx
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
lea     edi, [esi+8]
movaps  xmmword ptr [esp+0e0h], xmm1
mov     [esp+94h], edi
mov     edi, [esp+34h]
punpcklqdq xmm2, xmm0
movd    edx, xmm5
mov     dword ptr [esp+24h], 0
movd    ecx, xmm3
mov     dword ptr [esp+2ch], 0
movd    eax, xmm1
mov     dword ptr [esp+7ch], 0
mov     dword ptr [esp+74h], 40000h
nop     dword ptr [eax]
and     eax, 3ffff0h
and     ecx, 3ffff0h
and     edx, 3ffff0h
add     edx, [esp+48h]
movups  xmm0, xmmword ptr [ecx+edi]
movaps  xmmword ptr [esp+110h], xmm0
movups  xmm0, xmmword ptr [eax+esi]
movups  xmm6, xmmword ptr [edx]
movaps  xmmword ptr [esp+120h], xmm0
aesenc  xmm6, xmm5
movaps  xmm5, xmmword ptr [esp+110h]
movaps  xmm0, xmm6
pxor    xmm0, xmm7
movaps  xmmword ptr [esp+130h], xmm6
movups  xmmword ptr [edx], xmm0
aesenc  xmm5, xmm3
movaps  xmm3, xmmword ptr [esp+120h]
movaps  xmm0, xmm5
pxor    xmm0, xmm4
movaps  xmmword ptr [esp+110h], xmm5
movups  xmmword ptr [ecx+edi], xmm0
xor     ecx, ecx
aesenc  xmm3, xmm1
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+120h], xmm3
pxor    xmm0, xmm2
movups  xmmword ptr [eax+esi], xmm0
xor     esi, esi
movd    eax, xmm6
movaps  xmm0, xmm6
psrldq  xmm0, 4
movd    edx, xmm0
movaps  xmm0, xmm5
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+38h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+48h]
mov     [esp+20h], ecx
movd    dword ptr [esp+3ch], xmm0
movaps  xmm0, xmm3
psrldq  xmm0, 4
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+0ch], eax
mov     eax, [ecx+8]
mov     [esp+0a8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0ach], eax
movd    eax, xmm5
mov     [esp+60h], edx
mov     [esp+8], edi
or      ecx, eax
movd    dword ptr [esp+70h], xmm0
mov     [esp+14h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+34h]
mov     [esp+28h], ecx
mov     eax, [ecx]
mov     [esp+80h], eax
mov     eax, [ecx+4]
mov     [esp+84h], eax
mov     eax, [ecx+8]
mov     [esp+0c0h], eax
mov     eax, [ecx+0ch]
mov     [esp+0c4h], eax
movd    eax, xmm3
or      esi, eax
mov     ecx, esi
mov     [esp+50h], esi
and     ecx, 3ffff0h
add     ecx, [esp+4ch]
mov     [esp+78h], ecx
mov     eax, [ecx]
mov     [esp+68h], eax
mov     eax, [ecx+4]
mov     [esp+6ch], eax
mov     eax, [ecx+8]
mov     [esp+0d8h], eax
mov     eax, [ecx+0ch]
push    0
push    edx
push    0
push    edi
mov     [esp+0ech], eax
call    __allmul
push    0
push    dword ptr [esp+3ch]
mov     [esp+20h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+3ch]
mov     edi, eax
mov     [esp+60h], edx
push    0
push    dword ptr [esp+18h]
call    __allmul
mov     ecx, [esp+18h]
add     eax, ecx
adc     edx, esi
mov     [esp+40h], edx
cmp     edx, esi
ja      short loc_37a795fa
jb      short loc_37a795e8
cmp     eax, ecx
jnb     short loc_37a795fa
mov     dword ptr [esp+38h], 0
mov     dword ptr [esp+10h], 1
jmp     short loc_37a79613
xorps   xmm0, xmm0
movlpd  qword ptr [esp+18h], xmm0
mov     ecx, [esp+1ch]
mov     [esp+10h], ecx
mov     ecx, [esp+18h]
mov     [esp+38h], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+0a0h], ecx
adc     eax, [esp+58h]
mov     [esp+0a4h], eax
cmp     eax, [esp+58h]
ja      short loc_37a79644
jb      short loc_37a79635
cmp     ecx, edi
jnb     short loc_37a79644
mov     edi, 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a79659
xorps   xmm0, xmm0
movlpd  qword ptr [esp+58h], xmm0
mov     eax, [esp+5ch]
mov     edi, [esp+58h]
mov     [esp+18h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+64h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
mov     ecx, [esp+40h]
movq    xmm0, qword ptr [esp+0a0h]
add     ecx, eax
mov     eax, [esp+20h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     ecx, [esp+38h]
mov     edx, [esp+8ch]
adc     esi, [esp+10h]
add     ecx, edi
mov     [esp+98h], ecx
adc     esi, [esp+18h]
mov     ecx, [esp+48h]
mov     [esp+9ch], esi
movq    xmm1, qword ptr [esp+98h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+100h]
movq    xmm0, qword ptr [esp+0a8h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+100h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+20h], ecx
mov     eax, [eax+edx]
mov     [esp+40h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+130h]
mov     edi, edx
mov     edx, [esp+20h]
mov     esi, eax
mov     eax, edi
movaps  xmmword ptr [esp+140h], xmm0
mov     edi, [esp+80h]
mov     ecx, esi
push    0
xor     [edx+4], eax
mov     eax, [esp+44h]
push    dword ptr [esp+40h]
xor     [edx], ecx
not     eax
cdq
push    0
xor     eax, esi
push    edi
mov     [esp+68h], eax
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     [esp+28h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+18h]
mov     edi, eax
mov     [esp+48h], edx
push    0
push    dword ptr [esp+90h]
call    __allmul
mov     ecx, [esp+20h]
add     eax, ecx
adc     edx, esi
mov     [esp+20h], edx
cmp     edx, esi
ja      short loc_37a7979d
jb      short loc_37a7978b
cmp     eax, ecx
jnb     short loc_37a7979d
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a797b6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+60h], xmm0
mov     ecx, [esp+64h]
mov     [esp+18h], ecx
mov     ecx, [esp+60h]
mov     [esp+14h], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+0b8h], ecx
adc     eax, [esp+40h]
mov     [esp+0bch], eax
cmp     eax, [esp+40h]
ja      short loc_37a797e7
jb      short loc_37a797d8
cmp     ecx, edi
jnb     short loc_37a797e7
mov     edi, 1
mov     dword ptr [esp+10h], 0
jmp     short loc_37a797fc
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     edi, [esp+40h]
mov     [esp+10h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+40h]
push    esi
push    dword ptr [esp+90h]
call    __allmul
mov     ecx, [esp+20h]
movq    xmm0, qword ptr [esp+0b8h]
add     ecx, eax
mov     eax, [esp+28h]
movq    xmm2, qword ptr [esp+80h]
adc     esi, edx
add     ecx, [esp+14h]
mov     edx, [esp+90h]
adc     esi, [esp+18h]
add     ecx, edi
mov     [esp+0b0h], ecx
adc     esi, [esp+10h]
mov     ecx, [esp+34h]
mov     [esp+0b4h], esi
movq    xmm1, qword ptr [esp+0b0h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0f0h]
movq    xmm0, qword ptr [esp+0c0h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+0f0h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+28h], ecx
mov     eax, [eax+edx]
mov     [esp+20h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+110h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+130h], xmm0
mov     edx, [esp+28h]
mov     ecx, eax
mov     [esp+40h], eax
mov     esi, edi
mov     eax, [esp+20h]
push    0
push    dword ptr [esp+74h]
xor     [edx], esi
not     eax
xor     [edx+4], ecx
cdq
push    0
push    dword ptr [esp+74h]
xor     eax, edi
xor     edx, ecx
mov     [esp+70h], eax
mov     [esp+3ch], edx
call    __allmul
mov     edi, [esp+50h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+74h]
mov     [esp+38h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+78h]
mov     [esp+60h], eax
mov     [esp+30h], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a7994a
jb      short loc_37a79938
cmp     eax, ecx
jnb     short loc_37a7994a
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a79963
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+14h], ecx
mov     ecx, [esp+28h]
mov     [esp+3ch], ecx
mov     edx, [esp+50h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0d0h], ecx
adc     eax, [esp+20h]
mov     [esp+0d4h], eax
cmp     eax, [esp+20h]
ja      short loc_37a7999b
jb      short loc_37a79989
cmp     ecx, edx
jnb     short loc_37a7999b
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+10h], 0
jmp     short loc_37a799b4
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     eax, [esp+54h]
mov     [esp+10h], eax
mov     eax, [esp+50h]
mov     [esp+18h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+74h]
push    esi
push    dword ptr [esp+78h]
call    __allmul
movq    xmm0, qword ptr [esp+0d0h]
add     edi, eax
mov     eax, [esp+78h]
movq    xmm2, qword ptr [esp+68h]
adc     esi, edx
add     edi, [esp+3ch]
mov     edx, [esp+94h]
adc     esi, [esp+14h]
add     edi, [esp+18h]
mov     ecx, [esp+4ch]
adc     esi, [esp+10h]
mov     [esp+0c8h], edi
mov     [esp+0cch], esi
movq    xmm1, qword ptr [esp+0c8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+0e0h]
movq    xmm0, qword ptr [esp+0d8h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+0e0h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+78h], ecx
mov     eax, [eax+edx]
mov     [esp+50h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm2, xmmword ptr [esp+120h]
mov     edi, eax
movaps  xmm1, xmmword ptr [esp+0e0h]
mov     eax, edx
mov     edx, [esp+78h]
mov     ecx, eax
mov     eax, [esp+50h]
mov     esi, edi
movaps  xmm3, xmmword ptr [esp+0f0h]
not     eax
movaps  xmm4, xmmword ptr [esp+130h]
xor     [edx], esi
xor     [edx+4], ecx
movaps  xmm5, xmmword ptr [esp+100h]
movaps  xmm7, xmmword ptr [esp+140h]
mov     ecx, [esp+60h]
mov     esi, [esp+4ch]
cdq
mov     edx, [esp+58h]
xor     eax, edi
sub     dword ptr [esp+74h], 1
mov     edi, [esp+34h]
jnz     loc_37a79430
mov     edi, [ebp+10h]
xor     esi, esi
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a82360
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 3
jb      short loc_37a79ac7
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 1b8h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    sub_37a81cc0
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 4
jb      short loc_37a79b36
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+78h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+6ch], ecx
mov     ecx, [edi+0e0h]
mov     [esp+70h], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+10h], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+74h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+14h], eax
movq    xmm0, qword ptr [esp+10h]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
movq    xmm5, qword ptr [esp+10h]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm5, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+14h], eax
movq    xmm1, qword ptr [esp+10h]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+10h], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+14h], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+14h], eax
movq    xmm4, qword ptr [esp+10h]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+10h], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+14h], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm4, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+10h], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+14h], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
movaps  xmmword ptr [esp+1a0h], xmm1
movq    xmm1, qword ptr [esp+10h]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+150h], xmm5
movaps  xmmword ptr [esp+140h], xmm4
movaps  xmmword ptr [esp+1b0h], xmm1
mov     [esp+14h], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+10h], ecx
movq    xmm0, qword ptr [esp+10h]
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+14h], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+10h], ecx
movq    xmm3, qword ptr [esp+10h]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+14h], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+10h], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [ebp+14h]
mov     [esp+10h], ecx
movq    xmm6, qword ptr [esp+10h]
mov     edi, [esp+74h]
mov     edx, [eax+0ch]
punpcklqdq xmm6, xmm0
movaps  xmmword ptr [esp+130h], xmm3
movd    esi, xmm5
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+14h], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+10h], ecx
movq    xmm0, qword ptr [esp+10h]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+14h], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+10h], ecx
movq    xmm1, qword ptr [esp+10h]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+14h], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+10h], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+10h]
mov     [esp+14h], eax
mov     eax, [esp+78h]
add     eax, 8
mov     [esp+10h], ecx
movq    xmm2, qword ptr [esp+10h]
mov     [esp+0b4h], eax
mov     eax, [esp+6ch]
add     eax, 8
movaps  xmmword ptr [esp+120h], xmm1
mov     [esp+0b0h], eax
mov     eax, [esp+70h]
add     eax, 8
punpcklqdq xmm2, xmm0
mov     [esp+0b8h], eax
lea     eax, [edi+8]
mov     [esp+0bch], eax
mov     dword ptr [esp+3ch], 0
movd    edx, xmm4
mov     dword ptr [esp+2ch], 0
movd    ecx, xmm3
mov     dword ptr [esp+64h], 0
mov     dword ptr [esp+0a4h], 0
mov     dword ptr [esp+9ch], 40000h
movd    eax, xmm1
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
and     ecx, 3ffff0h
and     eax, 3ffff0h
add     ecx, [esp+70h]
and     edx, 3ffff0h
add     edx, [esp+6ch]
and     esi, 3ffff0h
add     esi, [esp+78h]
movups  xmm0, xmmword ptr [edx]
movups  xmm7, xmmword ptr [esi]
movaps  xmmword ptr [esp+160h], xmm0
movups  xmm0, xmmword ptr [ecx]
movaps  xmmword ptr [esp+170h], xmm0
movups  xmm0, xmmword ptr [eax+edi]
movaps  xmmword ptr [esp+180h], xmm0
aesenc  xmm7, xmm5
movaps  xmm5, xmmword ptr [esp+160h]
movaps  xmm0, xmm7
pxor    xmm0, xmmword ptr [esp+1a0h]
movups  xmmword ptr [esi], xmm0
aesenc  xmm5, xmm4
movaps  xmm4, xmmword ptr [esp+170h]
movaps  xmm0, xmm5
pxor    xmm0, xmmword ptr [esp+1b0h]
movups  xmmword ptr [edx], xmm0
aesenc  xmm4, xmm3
movaps  xmm3, xmmword ptr [esp+180h]
movaps  xmm0, xmm4
pxor    xmm0, xmm6
movaps  xmmword ptr [esp+190h], xmm7
movups  xmmword ptr [ecx], xmm0
xor     ecx, ecx
aesenc  xmm3, xmm1
movaps  xmm0, xmm3
movaps  xmmword ptr [esp+160h], xmm5
pxor    xmm0, xmm2
movaps  xmmword ptr [esp+170h], xmm4
movups  xmmword ptr [eax+edi], xmm0
movaps  xmm0, xmm7
movd    eax, xmm7
psrldq  xmm0, 4
movd    edx, xmm0
movaps  xmm0, xmm5
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+20h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+78h]
mov     [esp+38h], ecx
movd    dword ptr [esp+54h], xmm0
movaps  xmm0, xmm4
psrldq  xmm0, 4
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+14h], eax
mov     eax, [ecx+8]
mov     [esp+0d0h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0d4h], eax
movd    eax, xmm5
movaps  xmmword ptr [esp+180h], xmm3
mov     [esp+24h], edx
or      ecx, eax
mov     [esp+10h], edi
mov     [esp+40h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+6ch]
mov     [esp+28h], ecx
movd    dword ptr [esp+58h], xmm0
mov     eax, [ecx]
mov     [esp+88h], eax
mov     eax, [ecx+4]
mov     [esp+8ch], eax
mov     eax, [ecx+8]
mov     [esp+0e8h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0ech], eax
movd    eax, xmm4
or      ecx, eax
mov     [esp+30h], ecx
and     ecx, 3ffff0h
xor     esi, esi
add     ecx, [esp+70h]
movaps  xmm0, xmm3
mov     [esp+60h], ecx
push    0
push    edx
mov     eax, [ecx]
mov     [esp+98h], eax
mov     eax, [ecx+4]
mov     [esp+9ch], eax
mov     eax, [ecx+8]
mov     [esp+108h], eax
mov     eax, [ecx+0ch]
mov     [esp+10ch], eax
movd    eax, xmm3
push    0
psrldq  xmm0, 4
or      esi, eax
movd    dword ptr [esp+88h], xmm0
mov     ecx, esi
mov     [esp+68h], esi
and     ecx, 3ffff0h
add     ecx, [esp+80h]
push    edi
mov     [esp+0b0h], ecx
mov     eax, [ecx]
mov     [esp+0b8h], eax
mov     eax, [ecx+4]
mov     [esp+0bch], eax
mov     eax, [ecx+8]
mov     [esp+128h], eax
mov     eax, [ecx+0ch]
mov     [esp+12ch], eax
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     [esp+20h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+24h]
mov     edi, eax
mov     [esp+88h], edx
push    0
push    dword ptr [esp+20h]
call    __allmul
mov     ecx, [esp+18h]
add     eax, ecx
adc     edx, esi
mov     [esp+18h], edx
cmp     edx, esi
ja      short loc_37a7a07b
jb      short loc_37a7a069
cmp     eax, ecx
jnb     short loc_37a7a07b
mov     dword ptr [esp+48h], 0
mov     dword ptr [esp+1ch], 1
jmp     short loc_37a7a094
xorps   xmm0, xmm0
movlpd  qword ptr [esp+48h], xmm0
mov     ecx, [esp+4ch]
mov     [esp+1ch], ecx
mov     ecx, [esp+48h]
mov     [esp+48h], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+0c8h], ecx
adc     eax, [esp+80h]
mov     [esp+0cch], eax
cmp     eax, [esp+80h]
ja      short loc_37a7a0cb
jb      short loc_37a7a0bc
cmp     ecx, edi
jnb     short loc_37a7a0cb
mov     edi, 1
mov     dword ptr [esp+20h], 0
jmp     short loc_37a7a0e9
xorps   xmm0, xmm0
movlpd  qword ptr [esp+80h], xmm0
mov     eax, [esp+84h]
mov     edi, [esp+80h]
mov     [esp+20h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+28h]
push    esi
push    dword ptr [esp+20h]
call    __allmul
mov     ecx, [esp+18h]
movq    xmm0, qword ptr [esp+0c8h]
add     ecx, eax
mov     eax, [esp+38h]
movq    xmm2, qword ptr [esp+10h]
adc     esi, edx
mov     edx, [esp+0b4h]
add     ecx, edi
adc     esi, [esp+20h]
add     ecx, [esp+48h]
mov     [esp+0c0h], ecx
adc     esi, [esp+1ch]
mov     ecx, [esp+78h]
mov     [esp+0c4h], esi
movq    xmm1, qword ptr [esp+0c0h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+150h]
movq    xmm0, qword ptr [esp+0d0h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+150h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+38h], ecx
mov     eax, [edx+eax]
mov     [esp+24h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+190h]
mov     edi, edx
mov     edx, [esp+38h]
mov     esi, eax
mov     eax, edi
movaps  xmmword ptr [esp+1a0h], xmm0
push    0
push    dword ptr [esp+58h]
xor     [edx+4], eax
mov     ecx, esi
mov     eax, [esp+2ch]
xor     [edx], ecx
not     eax
cdq
push    0
push    dword ptr [esp+94h]
xor     eax, esi
xor     edx, edi
mov     [esp+90h], eax
mov     [esp+4ch], edx
call    __allmul
mov     edi, [esp+40h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+94h]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+98h]
mov     [esp+50h], eax
mov     [esp+34h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a7a239
jb      short loc_37a7a227
cmp     eax, ecx
jnb     short loc_37a7a239
mov     dword ptr [esp+20h], 0
mov     dword ptr [esp+18h], 1
jmp     short loc_37a7a252
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+18h], ecx
mov     ecx, [esp+38h]
mov     [esp+20h], ecx
mov     edx, [esp+40h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e0h], ecx
adc     eax, [esp+24h]
mov     [esp+0e4h], eax
cmp     eax, [esp+24h]
ja      short loc_37a7a28a
jb      short loc_37a7a278
cmp     ecx, edx
jnb     short loc_37a7a28a
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+48h], 0
jmp     short loc_37a7a2a3
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     eax, [esp+44h]
mov     [esp+48h], eax
mov     eax, [esp+40h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+58h]
push    esi
push    dword ptr [esp+98h]
call    __allmul
movq    xmm0, qword ptr [esp+0e0h]
add     edi, eax
mov     eax, [esp+28h]
movq    xmm2, qword ptr [esp+88h]
adc     esi, edx
add     edi, [esp+1ch]
mov     edx, [esp+0b0h]
adc     esi, [esp+48h]
add     edi, [esp+20h]
mov     ecx, [esp+6ch]
adc     esi, [esp+18h]
mov     [esp+0d8h], edi
mov     [esp+0dch], esi
movq    xmm1, qword ptr [esp+0d8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+140h]
movq    xmm0, qword ptr [esp+0e8h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+140h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+28h], ecx
mov     eax, [edx+eax]
mov     [esp+40h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+160h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+1b0h], xmm0
mov     edx, [esp+28h]
mov     ecx, eax
mov     [esp+38h], eax
mov     esi, edi
mov     eax, [esp+40h]
push    0
push    dword ptr [esp+5ch]
xor     [edx], esi
not     eax
xor     [edx+4], ecx
cdq
push    0
push    dword ptr [esp+9ch]
xor     eax, edi
xor     edx, ecx
mov     [esp+34h], eax
mov     [esp+3ch], edx
call    __allmul
mov     edi, [esp+30h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+9ch]
mov     [esp+38h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a0h]
mov     [esp+40h], eax
mov     [esp+50h], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a7a3f8
jb      short loc_37a7a3e6
cmp     eax, ecx
jnb     short loc_37a7a3f8
mov     dword ptr [esp+1ch], 0
mov     dword ptr [esp+48h], 1
jmp     short loc_37a7a411
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+48h], ecx
mov     ecx, [esp+28h]
mov     [esp+1ch], ecx
mov     edx, [esp+30h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0f8h], ecx
adc     eax, [esp+40h]
mov     [esp+0fch], eax
cmp     eax, [esp+40h]
ja      short loc_37a7a449
jb      short loc_37a7a437
cmp     ecx, edx
jnb     short loc_37a7a449
mov     dword ptr [esp+18h], 1
mov     dword ptr [esp+54h], 0
jmp     short loc_37a7a462
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     eax, [esp+34h]
mov     [esp+54h], eax
mov     eax, [esp+30h]
mov     [esp+18h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+5ch]
push    esi
push    dword ptr [esp+0a0h]
call    __allmul
movq    xmm0, qword ptr [esp+0f8h]
add     edi, eax
mov     eax, [esp+60h]
movq    xmm2, qword ptr [esp+90h]
adc     esi, edx
add     edi, [esp+18h]
mov     edx, [esp+0b8h]
adc     esi, [esp+54h]
add     edi, [esp+1ch]
mov     ecx, [esp+70h]
adc     esi, [esp+48h]
mov     [esp+0f0h], edi
mov     [esp+0f4h], esi
movq    xmm1, qword ptr [esp+0f0h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+130h]
movq    xmm0, qword ptr [esp+100h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+130h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+60h], ecx
mov     eax, [edx+eax]
mov     [esp+30h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+170h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+190h], xmm0
mov     edx, [esp+60h]
mov     ecx, eax
mov     eax, [esp+30h]
mov     esi, edi
push    0
push    dword ptr [esp+80h]
xor     [edx], esi
not     eax
xor     [edx+4], ecx
cdq
xor     eax, edi
mov     edi, [esp+0b0h]
push    0
push    edi
mov     [esp+50h], eax
call    __allmul
push    0
push    dword ptr [esp+60h]
mov     [esp+68h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+60h]
mov     edi, eax
mov     [esp+38h], edx
push    0
push    dword ptr [esp+0b8h]
call    __allmul
mov     ecx, edx
mov     edx, [esp+60h]
add     eax, edx
adc     ecx, esi
mov     [esp+60h], ecx
cmp     ecx, esi
ja      short loc_37a7a5af
jb      short loc_37a7a59d
cmp     eax, edx
jnb     short loc_37a7a5af
mov     dword ptr [esp+5ch], 0
mov     dword ptr [esp+58h], 1
jmp     short loc_37a7a5c8
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+58h], ecx
mov     ecx, [esp+28h]
mov     [esp+5ch], ecx
xor     ecx, ecx
add     ecx, edi
mov     [esp+110h], ecx
adc     eax, [esp+30h]
mov     [esp+114h], eax
cmp     eax, [esp+30h]
ja      short loc_37a7a5f3
jb      short loc_37a7a5ea
cmp     ecx, edi
jnb     short loc_37a7a5f3
mov     esi, 1
xor     edi, edi
jmp     short loc_37a7a604
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     edi, [esp+34h]
mov     esi, [esp+30h]
push    0
push    dword ptr [esp+80h]
push    0
push    dword ptr [esp+0b8h]
call    __allmul
add     eax, [esp+60h]
movq    xmm0, qword ptr [esp+110h]
movq    xmm2, qword ptr [esp+0a8h]
adc     edx, 0
add     eax, esi
mov     ecx, [esp+74h]
adc     edx, edi
add     eax, [esp+5ch]
mov     [esp+108h], eax
adc     edx, [esp+58h]
mov     eax, [esp+0a0h]
mov     [esp+10ch], edx
movq    xmm1, qword ptr [esp+108h]
mov     edx, [esp+0bch]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+120h]
movq    xmm0, qword ptr [esp+118h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+120h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+0a0h], ecx
mov     eax, [edx+eax]
mov     [esp+60h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm2, xmmword ptr [esp+180h]
mov     edi, eax
movaps  xmm1, xmmword ptr [esp+120h]
mov     eax, edx
mov     edx, [esp+0a0h]
mov     ecx, eax
mov     eax, [esp+60h]
mov     esi, edi
movaps  xmm3, xmmword ptr [esp+130h]
not     eax
movaps  xmm4, xmmword ptr [esp+140h]
xor     [edx], esi
xor     [edx+4], ecx
movaps  xmm5, xmmword ptr [esp+150h]
movaps  xmm6, xmmword ptr [esp+190h]
mov     ecx, [esp+40h]
mov     esi, [esp+80h]
cdq
mov     edx, [esp+24h]
xor     eax, edi
sub     dword ptr [esp+9ch], 1
mov     edi, [esp+74h]
jnz     loc_37a79e10
mov     edi, [ebp+10h]
xor     esi, esi
xchg    ax, ax
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    sub_37a82360
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a7a730
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     eax, [ebp+0ch]
sub     esp, 1c8h
push    esi
push    edi
mov     edi, [ebp+8]
xor     esi, esi
push    ecx
mov     ecx, [ebp+14h]
mov     edx, eax
push    dword ptr [ecx+esi*4]
mov     ecx, edi
call    sub_37a181e0
mov     eax, [ebp+14h]
add     esp, 8
mov     ecx, [eax+esi*4]
mov     edx, [ecx+0e0h]
call    near ptr sub_37a82e20
mov     eax, [ebp+0ch]
inc     esi
add     edi, eax
cmp     esi, 4
jb      short loc_37a7c3b6
mov     eax, [ebp+14h]
mov     edx, [eax]
mov     esi, [eax+4]
mov     edi, [eax+8]
mov     eax, [eax+0ch]
mov     ecx, [edx+0e0h]
mov     [esp+64h], ecx
mov     ecx, [esi+0e0h]
mov     eax, [eax+0e0h]
mov     [esp+58h], ecx
mov     ecx, [edi+0e0h]
mov     [esp+5ch], ecx
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+8], ecx
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+60h], eax
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     [esp+0ch], eax
movq    xmm0, qword ptr [esp+8]
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
movq    xmm3, qword ptr [esp+8]
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
punpcklqdq xmm3, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+28h]
xor     ecx, [esi+8]
mov     [esp+0ch], eax
movq    xmm1, qword ptr [esp+8]
mov     eax, [esi+2ch]
xor     eax, [esi+0ch]
mov     [esp+8], ecx
mov     ecx, [esi+20h]
xor     ecx, [esi]
mov     [esp+0ch], eax
mov     eax, [esi+24h]
xor     eax, [esi+4]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [esi+38h]
xor     ecx, [esi+18h]
mov     [esp+0ch], eax
movq    xmm2, qword ptr [esp+8]
mov     eax, [esi+3ch]
xor     eax, [esi+1ch]
mov     [esp+8], ecx
mov     ecx, [esi+30h]
xor     ecx, [esi+10h]
mov     [esp+0ch], eax
mov     eax, [esi+34h]
xor     eax, [esi+14h]
punpcklqdq xmm2, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+8], ecx
mov     ecx, [edi+28h]
xor     ecx, [edi+8]
mov     [esp+0ch], eax
mov     eax, [edi+2ch]
xor     eax, [edi+0ch]
movaps  xmmword ptr [esp+0c0h], xmm1
movq    xmm1, qword ptr [esp+8]
punpcklqdq xmm1, xmm0
movaps  xmmword ptr [esp+140h], xmm3
movaps  xmmword ptr [esp+160h], xmm2
movaps  xmmword ptr [esp+190h], xmm1
mov     [esp+0ch], eax
mov     eax, [edi+24h]
xor     eax, [edi+4]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edi+20h]
xor     ecx, [edi]
mov     [esp+0ch], eax
mov     eax, [edi+3ch]
xor     eax, [edi+1ch]
mov     [esp+8], ecx
movq    xmm1, qword ptr [esp+8]
mov     ecx, [edi+38h]
xor     ecx, [edi+18h]
mov     [esp+0ch], eax
mov     eax, [edi+34h]
xor     eax, [edi+14h]
mov     [esp+8], ecx
mov     ecx, [edi+30h]
xor     ecx, [edi+10h]
punpcklqdq xmm1, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [ebp+14h]
mov     [esp+8], ecx
movq    xmm4, qword ptr [esp+8]
mov     edi, [esp+60h]
mov     edx, [eax+0ch]
punpcklqdq xmm4, xmm0
movaps  xmmword ptr [esp+170h], xmm1
movaps  xmmword ptr [esp+70h], xmm4
mov     eax, [edx+2ch]
xor     eax, [edx+0ch]
mov     ecx, [edx+28h]
xor     ecx, [edx+8]
mov     [esp+0ch], eax
mov     eax, [edx+24h]
xor     eax, [edx+4]
mov     [esp+8], ecx
movq    xmm0, qword ptr [esp+8]
mov     ecx, [edx+20h]
xor     ecx, [edx]
mov     [esp+0ch], eax
mov     eax, [edx+3ch]
xor     eax, [edx+1ch]
mov     [esp+8], ecx
movq    xmm6, qword ptr [esp+8]
mov     ecx, [edx+38h]
xor     ecx, [edx+18h]
mov     [esp+0ch], eax
mov     eax, [edx+34h]
xor     eax, [edx+14h]
mov     [esp+8], ecx
mov     ecx, [edx+30h]
xor     ecx, [edx+10h]
punpcklqdq xmm6, xmm0
movq    xmm0, qword ptr [esp+8]
mov     [esp+0ch], eax
mov     eax, [esp+64h]
add     eax, 8
mov     [esp+8], ecx
movq    xmm7, qword ptr [esp+8]
mov     [esp+0d4h], eax
mov     eax, [esp+58h]
add     eax, 8
movaps  xmmword ptr [esp+180h], xmm6
mov     [esp+0d8h], eax
mov     eax, [esp+5ch]
add     eax, 8
punpcklqdq xmm7, xmm0
mov     [esp+0dch], eax
lea     eax, [edi+8]
movd    esi, xmm3
mov     dword ptr [esp+34h], 0
movd    edx, xmm2
mov     dword ptr [esp+44h], 0
movd    ecx, xmm1
mov     dword ptr [esp+3ch], 0
mov     dword ptr [esp+0a4h], 0
mov     [esp+0bch], eax
mov     dword ptr [esp+9ch], 40000h
movd    eax, xmm6
nop     dword ptr [eax+eax+00000000h]
and     eax, 3ffff0h
and     ecx, 3ffff0h
add     ecx, [esp+5ch]
add     eax, edi
mov     [esp+14h], eax
and     esi, 3ffff0h
add     esi, [esp+64h]
and     edx, 3ffff0h
add     edx, [esp+58h]
movups  xmm5, xmmword ptr [eax]
movups  xmm4, xmmword ptr [ecx]
movups  xmm1, xmmword ptr [esi]
movups  xmm3, xmmword ptr [edx]
mov     [esp+18h], ecx
pshufd  xmm0, xmm1, 55h
movd    ecx, xmm0
mov     [esp+1ch], edx
pshufd  xmm0, xmm1, 0aah
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm1
movd    edx, xmm0
pshufd  xmm0, xmm1, 0ffh
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
mov     [esp+24h], esi
mov     [esp+20h], edx
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
movaps  xmmword ptr [esp+0a0h], xmm5
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm1
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm1
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm1
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+24h]
movd    xmm5, ecx
punpckldq xmm5, xmm0
movd    xmm1, edx
movaps  xmmword ptr [esp+150h], xmm5
movaps  xmm0, xmmword ptr [esp+150h]
punpckldq xmm1, xmm2
punpckldq xmm0, xmm1
pxor    xmm0, xmmword ptr [esp+140h]
movaps  xmmword ptr [esp+150h], xmm0
pxor    xmm0, xmmword ptr [esp+0c0h]
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm3, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm3, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm3
pshufd  xmm0, xmm3, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm3
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm3
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm3
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
movd    xmm3, ecx
punpckldq xmm3, xmm0
punpckldq xmm3, xmm1
pxor    xmm3, xmmword ptr [esp+160h]
mov     eax, [esp+1ch]
movaps  xmm0, xmm3
pxor    xmm0, xmmword ptr [esp+190h]
movaps  xmmword ptr [esp+1a0h], xmm3
movups  xmmword ptr [eax], xmm0
pshufd  xmm0, xmm4, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm4, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm4
pshufd  xmm0, xmm4, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm4
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm4
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm4
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+18h]
movd    xmm4, ecx
punpckldq xmm4, xmm0
punpckldq xmm4, xmm1
pxor    xmm4, xmmword ptr [esp+170h]
movaps  xmm0, xmm4
movaps  xmmword ptr [esp+1b0h], xmm4
pxor    xmm0, xmmword ptr [esp+70h]
movups  xmmword ptr [eax], xmm0
movaps  xmm5, xmmword ptr [esp+0a0h]
pshufd  xmm0, xmm5, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm5, 0aah
movd    edx, xmm0
mov     eax, ecx
mov     [esp+10h], ecx
shr     eax, 10h
movzx   ecx, al
movd    eax, xmm5
pshufd  xmm0, xmm5, 0ffh
mov     [esp+20h], edx
mov     edi, ds:dword_37affd40[ecx*4]
shr     eax, 8
movzx   eax, al
movd    ecx, xmm0
xor     edi, ds:dword_37aff940[eax*4]
mov     eax, edx
shr     eax, 18h
xor     edi, ds:dword_37b00140[eax*4]
movzx   eax, cl
xor     edi, ds:dword_37aff540[eax*4]
mov     eax, ecx
shr     eax, 8
movzx   ecx, al
movd    eax, xmm5
movd    xmm2, edi
mov     esi, ds:dword_37aff940[ecx*4]
shr     eax, 10h
movzx   eax, al
xor     esi, ds:dword_37affd40[eax*4]
mov     eax, [esp+10h]
shr     eax, 18h
xor     esi, ds:dword_37b00140[eax*4]
movzx   eax, dl
xor     esi, ds:dword_37aff540[eax*4]
movd    eax, xmm0
shr     eax, 10h
movzx   ecx, al
mov     eax, edx
shr     eax, 8
movzx   eax, al
mov     edx, ds:dword_37affd40[ecx*4]
xor     edx, ds:dword_37aff940[eax*4]
movd    eax, xmm5
shr     eax, 18h
xor     edx, ds:dword_37b00140[eax*4]
mov     eax, [esp+10h]
movzx   eax, al
xor     edx, ds:dword_37aff540[eax*4]
mov     eax, [esp+20h]
shr     eax, 10h
movzx   ecx, al
mov     eax, [esp+10h]
shr     eax, 8
movzx   eax, al
mov     ecx, ds:dword_37affd40[ecx*4]
movd    xmm1, edx
punpckldq xmm1, xmm2
xor     ecx, ds:dword_37aff940[eax*4]
movd    eax, xmm0
movd    xmm0, esi
shr     eax, 18h
xor     ecx, ds:dword_37b00140[eax*4]
movd    eax, xmm5
movzx   eax, al
xor     ecx, ds:dword_37aff540[eax*4]
mov     eax, [esp+14h]
movd    xmm5, ecx
xor     ecx, ecx
punpckldq xmm5, xmm0
punpckldq xmm5, xmm1
movaps  xmm1, xmmword ptr [esp+150h]
pxor    xmm5, xmm6
movaps  xmm0, xmm5
movaps  xmmword ptr [esp+1c0h], xmm5
pxor    xmm0, xmm7
movups  xmmword ptr [eax], xmm0
movaps  xmm0, xmm1
psrldq  xmm0, 4
movd    esi, xmm0
movd    eax, xmm1
xor     edx, edx
movaps  xmm0, xmm3
mov     [esp+4ch], esi
psrldq  xmm0, 4
or      ecx, eax
movd    dword ptr [esp+10h], xmm0
mov     [esp+24h], ecx
movaps  xmm0, xmm4
and     ecx, 3ffff0h
psrldq  xmm0, 4
add     ecx, [esp+64h]
mov     [esp+30h], ecx
push    0
movd    dword ptr [esp+4ch], xmm0
movaps  xmm0, xmm5
mov     eax, [ecx+4]
mov     edi, [ecx]
mov     [esp+10h], eax
mov     eax, [ecx+8]
mov     [esp+0f4h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+0f8h], eax
movd    eax, xmm3
push    esi
push    0
or      ecx, eax
psrldq  xmm0, 4
mov     [esp+7ch], ecx
and     ecx, 3ffff0h
add     ecx, [esp+64h]
mov     [esp+4ch], ecx
push    edi
mov     [esp+18h], edi
mov     eax, [ecx]
mov     [esp+90h], eax
mov     eax, [ecx+4]
mov     [esp+94h], eax
mov     eax, [ecx+8]
mov     [esp+118h], eax
mov     eax, [ecx+0ch]
xor     ecx, ecx
mov     [esp+11ch], eax
movd    eax, xmm4
movd    dword ptr [esp+30h], xmm0
or      ecx, eax
mov     [esp+60h], ecx
and     ecx, 3ffff0h
add     ecx, [esp+6ch]
mov     [esp+48h], ecx
mov     eax, [ecx]
mov     [esp+98h], eax
mov     eax, [ecx+4]
mov     [esp+9ch], eax
mov     eax, [ecx+8]
mov     [esp+130h], eax
mov     eax, [ecx+0ch]
mov     [esp+134h], eax
movd    eax, xmm5
or      edx, eax
mov     ecx, edx
mov     [esp+78h], edx
and     ecx, 3ffff0h
add     ecx, [esp+70h]
mov     [esp+0b0h], ecx
mov     eax, [ecx]
mov     [esp+0a0h], eax
mov     eax, [ecx+4]
mov     [esp+0a4h], eax
mov     eax, [ecx+8]
mov     [esp+148h], eax
mov     eax, [ecx+0ch]
mov     [esp+14ch], eax
call    __allmul
push    0
push    dword ptr [esp+28h]
mov     [esp+30h], eax
mov     esi, edx
push    0
push    edi
call    __allmul
push    0
push    dword ptr [esp+28h]
mov     [esp+24h], eax
push    0
push    dword ptr [esp+18h]
mov     [esp+0d0h], edx
call    __allmul
mov     ecx, [esp+28h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a7cdb3
jb      short loc_37a7cda1
cmp     eax, ecx
jnb     short loc_37a7cdb3
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a7cdcc
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     ecx, [esp+2ch]
mov     [esp+14h], ecx
mov     ecx, [esp+28h]
mov     [esp+18h], ecx
mov     edx, [esp+1ch]
xor     ecx, ecx
add     ecx, edx
mov     [esp+0e8h], ecx
adc     eax, [esp+0c0h]
mov     [esp+0ech], eax
cmp     eax, [esp+0c0h]
ja      short loc_37a7ce0a
jb      short loc_37a7cdf8
cmp     ecx, edx
jnb     short loc_37a7ce0a
mov     dword ptr [esp+24h], 1
mov     dword ptr [esp+1ch], 0
jmp     short loc_37a7ce2c
xorps   xmm0, xmm0
movlpd  qword ptr [esp+0c0h], xmm0
mov     eax, [esp+0c4h]
mov     [esp+1ch], eax
mov     eax, [esp+0c0h]
mov     [esp+24h], eax
xor     esi, esi
push    esi
push    dword ptr [esp+50h]
push    esi
push    dword ptr [esp+18h]
call    __allmul
movq    xmm0, qword ptr [esp+0e8h]
add     edi, eax
mov     eax, [esp+30h]
movq    xmm2, qword ptr [esp+8]
adc     esi, edx
add     edi, [esp+24h]
mov     edx, [esp+0d4h]
adc     esi, [esp+1ch]
add     edi, [esp+18h]
mov     ecx, [esp+64h]
adc     esi, [esp+14h]
mov     [esp+0e0h], edi
mov     [esp+0e4h], esi
movq    xmm1, qword ptr [esp+0e0h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+140h]
movq    xmm0, qword ptr [esp+0f0h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+140h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+30h], ecx
mov     eax, [eax+edx]
mov     [esp+4ch], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+150h]
mov     edi, edx
mov     edx, [esp+30h]
mov     esi, eax
mov     eax, edi
movaps  xmmword ptr [esp+0c0h], xmm0
push    0
push    dword ptr [esp+14h]
xor     [edx+4], eax
mov     ecx, esi
mov     eax, [esp+54h]
xor     [edx], ecx
not     eax
cdq
push    0
push    dword ptr [esp+8ch]
xor     eax, esi
xor     edx, edi
mov     [esp+34h], eax
mov     [esp+44h], edx
call    __allmul
mov     edi, [esp+70h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+8ch]
mov     [esp+40h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+90h]
mov     [esp+80h], eax
mov     [esp+5ch], edx
call    __allmul
mov     ecx, [esp+30h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a7cf7a
jb      short loc_37a7cf68
cmp     eax, ecx
jnb     short loc_37a7cf7a
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+28h], 1
jmp     short loc_37a7cf93
xorps   xmm0, xmm0
movlpd  qword ptr [esp+30h], xmm0
mov     ecx, [esp+34h]
mov     [esp+28h], ecx
mov     ecx, [esp+30h]
mov     [esp+14h], ecx
mov     edx, [esp+70h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+100h], ecx
adc     eax, [esp+4ch]
mov     [esp+104h], eax
cmp     eax, [esp+4ch]
ja      short loc_37a7cfcb
jb      short loc_37a7cfb9
cmp     ecx, edx
jnb     short loc_37a7cfcb
mov     dword ptr [esp+1ch], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a7cfe4
xorps   xmm0, xmm0
movlpd  qword ptr [esp+70h], xmm0
mov     eax, [esp+74h]
mov     [esp+18h], eax
mov     eax, [esp+70h]
mov     [esp+1ch], eax
xor     esi, esi
push    esi
push    dword ptr [esp+14h]
push    esi
push    dword ptr [esp+90h]
call    __allmul
movq    xmm0, qword ptr [esp+100h]
add     edi, eax
mov     eax, [esp+40h]
movq    xmm2, qword ptr [esp+80h]
adc     esi, edx
add     edi, [esp+1ch]
mov     edx, [esp+0d8h]
adc     esi, [esp+18h]
add     edi, [esp+14h]
mov     ecx, [esp+58h]
adc     esi, [esp+28h]
mov     [esp+0f8h], edi
mov     [esp+0fch], esi
movq    xmm1, qword ptr [esp+0f8h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+160h]
movq    xmm0, qword ptr [esp+108h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+160h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+40h], ecx
mov     eax, [eax+edx]
mov     [esp+70h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+1a0h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+190h], xmm0
mov     edx, [esp+40h]
mov     ecx, eax
mov     [esp+30h], eax
mov     esi, edi
mov     eax, [esp+70h]
push    0
push    dword ptr [esp+4ch]
xor     [edx], esi
not     eax
xor     [edx+4], ecx
cdq
push    0
push    dword ptr [esp+94h]
xor     eax, edi
xor     edx, ecx
mov     [esp+2ch], eax
mov     [esp+54h], edx
call    __allmul
mov     esi, [esp+50h]
mov     edi, edx
push    0
push    esi
push    0
push    dword ptr [esp+94h]
mov     [esp+50h], eax
call    __allmul
push    0
push    esi
push    0
push    dword ptr [esp+98h]
mov     [esp+60h], eax
mov     [esp+80h], edx
call    __allmul
mov     ecx, [esp+40h]
mov     esi, edx
add     eax, ecx
adc     esi, edi
cmp     esi, edi
ja      short loc_37a7d13c
jb      short loc_37a7d12a
cmp     eax, ecx
jnb     short loc_37a7d13c
mov     dword ptr [esp+14h], 0
mov     dword ptr [esp+10h], 1
jmp     short loc_37a7d155
xorps   xmm0, xmm0
movlpd  qword ptr [esp+40h], xmm0
mov     ecx, [esp+44h]
mov     [esp+10h], ecx
mov     ecx, [esp+40h]
mov     [esp+14h], ecx
mov     edx, [esp+50h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+118h], ecx
adc     eax, [esp+70h]
mov     [esp+11ch], eax
cmp     eax, [esp+70h]
ja      short loc_37a7d18d
jb      short loc_37a7d17b
cmp     ecx, edx
jnb     short loc_37a7d18d
mov     dword ptr [esp+28h], 1
mov     dword ptr [esp+18h], 0
jmp     short loc_37a7d1a6
xorps   xmm0, xmm0
movlpd  qword ptr [esp+50h], xmm0
mov     eax, [esp+54h]
mov     [esp+18h], eax
mov     eax, [esp+50h]
mov     [esp+28h], eax
xor     edi, edi
push    edi
push    dword ptr [esp+4ch]
push    edi
push    dword ptr [esp+98h]
call    __allmul
movq    xmm0, qword ptr [esp+118h]
add     esi, eax
mov     eax, [esp+38h]
movq    xmm2, qword ptr [esp+88h]
adc     edi, edx
add     esi, [esp+28h]
mov     edx, [esp+0dch]
adc     edi, [esp+18h]
add     esi, [esp+14h]
mov     ecx, [esp+5ch]
adc     edi, [esp+10h]
mov     [esp+110h], esi
mov     [esp+114h], edi
movq    xmm1, qword ptr [esp+110h]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+170h]
movq    xmm0, qword ptr [esp+120h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+170h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+38h], ecx
mov     eax, [eax+edx]
mov     [esp+50h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm0, xmmword ptr [esp+1b0h]
mov     edi, eax
mov     eax, edx
movaps  xmmword ptr [esp+70h], xmm0
mov     edx, [esp+38h]
mov     ecx, eax
mov     [esp+40h], eax
mov     esi, edi
mov     eax, [esp+50h]
push    0
push    dword ptr [esp+24h]
xor     [edx], esi
not     eax
xor     [edx+4], ecx
cdq
push    0
push    dword ptr [esp+9ch]
xor     eax, edi
xor     edx, ecx
mov     [esp+28h], eax
mov     [esp+4ch], edx
call    __allmul
mov     edi, [esp+68h]
mov     esi, edx
push    0
push    edi
push    0
push    dword ptr [esp+9ch]
mov     [esp+48h], eax
call    __allmul
push    0
push    edi
push    0
push    dword ptr [esp+0a0h]
mov     [esp+78h], eax
mov     [esp+60h], edx
call    __allmul
mov     ecx, [esp+38h]
mov     edi, edx
add     eax, ecx
adc     edi, esi
cmp     edi, esi
ja      short loc_37a7d2f8
jb      short loc_37a7d2e6
cmp     eax, ecx
jnb     short loc_37a7d2f8
mov     dword ptr [esp+28h], 0
mov     dword ptr [esp+14h], 1
jmp     short loc_37a7d311
xorps   xmm0, xmm0
movlpd  qword ptr [esp+38h], xmm0
mov     ecx, [esp+3ch]
mov     [esp+14h], ecx
mov     ecx, [esp+38h]
mov     [esp+28h], ecx
mov     edx, [esp+68h]
xor     ecx, ecx
add     ecx, edx
mov     [esp+130h], ecx
adc     eax, [esp+50h]
mov     [esp+134h], eax
cmp     eax, [esp+50h]
ja      short loc_37a7d346
jb      short loc_37a7d337
cmp     ecx, edx
jnb     short loc_37a7d346
mov     esi, 1
mov     dword ptr [esp+48h], 0
jmp     short loc_37a7d35b
xorps   xmm0, xmm0
movlpd  qword ptr [esp+68h], xmm0
mov     eax, [esp+6ch]
mov     esi, [esp+68h]
mov     [esp+48h], eax
push    0
push    dword ptr [esp+24h]
push    0
push    dword ptr [esp+0a0h]
call    __allmul
movq    xmm0, qword ptr [esp+130h]
add     eax, edi
movq    xmm2, qword ptr [esp+90h]
adc     edx, 0
mov     ecx, [esp+60h]
add     eax, esi
adc     edx, [esp+48h]
add     eax, [esp+28h]
mov     [esp+128h], eax
adc     edx, [esp+14h]
mov     eax, [esp+0a0h]
mov     [esp+12ch], edx
movq    xmm1, qword ptr [esp+128h]
mov     edx, [esp+0bch]
punpcklqdq xmm1, xmm0
paddq   xmm1, xmmword ptr [esp+180h]
movq    xmm0, qword ptr [esp+138h]
movups  xmmword ptr [eax], xmm1
punpcklqdq xmm2, xmm0
pxor    xmm2, xmm1
movd    eax, xmm2
movaps  xmmword ptr [esp+180h], xmm2
and     eax, 3ffff0h
add     ecx, eax
mov     [esp+0a0h], ecx
mov     eax, [eax+edx]
mov     [esp+68h], eax
or      eax, 5
cdq
push    edx
push    eax
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    __alldiv
movaps  xmm7, xmmword ptr [esp+1c0h]
mov     edi, eax
movaps  xmm6, xmmword ptr [esp+180h]
mov     eax, edx
mov     edx, [esp+0a0h]
mov     ecx, eax
mov     [esp+38h], eax
mov     esi, edi
mov     eax, [esp+68h]
not     eax
xor     [edx], esi
xor     [edx+4], ecx
mov     esi, [esp+24h]
cdq
xor     edx, ecx
xor     eax, edi
sub     dword ptr [esp+9ch], 1
mov     ecx, [esp+18h]
mov     edi, [esp+60h]
mov     [esp+0a4h], edx
mov     edx, [esp+1ch]
jnz     loc_37a7c690
mov     edi, [ebp+10h]
xor     esi, esi
nop     dword ptr [eax+00h]
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
mov     edx, ecx
mov     ecx, [ecx+0e0h]
call    loc_37a83f30
mov     eax, [ebp+14h]
mov     ecx, [eax+esi*4]
call    sub_37a17760
mov     ecx, [ebp+14h]
push    edi
push    0c8h
mov     eax, [ecx+esi*4]
push    eax
movzx   ecx, byte ptr [eax]
and     ecx, 3
mov     eax, ds:funcs_37a22bf9[ecx*4]
call    eax
inc     esi
add     esp, 0ch
add     edi, 20h
cmp     esi, 4
jb      short loc_37a7d470
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
retf
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 0a8h
lea     eax, [esp+0a8h+var_10]
push    esi
push    edi
push    eax
lea     eax, [esp+0b4h+var_20]
mov     edi, edx
push    eax
lea     eax, [esp+0b8h+var_30]
mov     esi, ecx
push    eax
lea     eax, [esp+0bch+var_40]
push    eax
lea     eax, [esp+0c0h+var_50]
push    eax
lea     eax, [esp+0c4h+var_60]
push    eax
lea     eax, [esp+0c8h+var_70]
push    eax
lea     eax, [esp+0cch+var_80]
push    eax
lea     eax, [esp+0d0h+var_90]
push    eax
lea     edx, [esp+0d4h+var_a0]
call    sub_37a859f0
movups  xmm0, xmmword ptr [esi+40h]
lea     eax, [edi+20h]
movups  xmm1, xmmword ptr [esi+50h]
add     esp, 24h
movups  xmm2, xmmword ptr [esi+60h]
mov     ecx, 4000h
movups  xmm3, xmmword ptr [esi+70h]
movups  xmm4, xmmword ptr [esi+80h]
movups  xmm5, xmmword ptr [esi+90h]
movups  xmm6, xmmword ptr [esi+0a0h]
movups  xmm7, xmmword ptr [esi+0b0h]
nop     dword ptr [eax+eax+00000000h]
aesenc  xmm0, [esp+0b0h+var_a0]
aesenc  xmm1, [esp+0b0h+var_a0]
aesenc  xmm2, [esp+0b0h+var_a0]
aesenc  xmm3, [esp+0b0h+var_a0]
aesenc  xmm4, [esp+0b0h+var_a0]
aesenc  xmm5, [esp+0b0h+var_a0]
aesenc  xmm6, [esp+0b0h+var_a0]
aesenc  xmm7, [esp+0b0h+var_a0]
aesenc  xmm0, [esp+0b0h+var_90]
aesenc  xmm1, [esp+0b0h+var_90]
aesenc  xmm2, [esp+0b0h+var_90]
aesenc  xmm3, [esp+0b0h+var_90]
aesenc  xmm4, [esp+0b0h+var_90]
aesenc  xmm5, [esp+0b0h+var_90]
aesenc  xmm6, [esp+0b0h+var_90]
aesenc  xmm7, [esp+0b0h+var_90]
aesenc  xmm0, [esp+0b0h+var_80]
aesenc  xmm1, [esp+0b0h+var_80]
aesenc  xmm2, [esp+0b0h+var_80]
aesenc  xmm3, [esp+0b0h+var_80]
aesenc  xmm4, [esp+0b0h+var_80]
aesenc  xmm5, [esp+0b0h+var_80]
aesenc  xmm6, [esp+0b0h+var_80]
aesenc  xmm7, [esp+0b0h+var_80]
aesenc  xmm0, [esp+0b0h+var_70]
aesenc  xmm1, [esp+0b0h+var_70]
aesenc  xmm2, [esp+0b0h+var_70]
aesenc  xmm3, [esp+0b0h+var_70]
aesenc  xmm4, [esp+0b0h+var_70]
aesenc  xmm5, [esp+0b0h+var_70]
aesenc  xmm6, [esp+0b0h+var_70]
aesenc  xmm7, [esp+0b0h+var_70]
aesenc  xmm0, [esp+0b0h+var_60]
aesenc  xmm1, [esp+0b0h+var_60]
aesenc  xmm2, [esp+0b0h+var_60]
aesenc  xmm3, [esp+0b0h+var_60]
aesenc  xmm4, [esp+0b0h+var_60]
aesenc  xmm5, [esp+0b0h+var_60]
aesenc  xmm6, [esp+0b0h+var_60]
aesenc  xmm7, [esp+0b0h+var_60]
aesenc  xmm0, [esp+0b0h+var_50]
aesenc  xmm1, [esp+0b0h+var_50]
aesenc  xmm2, [esp+0b0h+var_50]
aesenc  xmm3, [esp+0b0h+var_50]
aesenc  xmm4, [esp+0b0h+var_50]
aesenc  xmm5, [esp+0b0h+var_50]
aesenc  xmm6, [esp+0b0h+var_50]
aesenc  xmm7, [esp+0b0h+var_50]
aesenc  xmm0, [esp+0b0h+var_40]
aesenc  xmm1, [esp+0b0h+var_40]
aesenc  xmm2, [esp+0b0h+var_40]
aesenc  xmm3, [esp+0b0h+var_40]
aesenc  xmm4, [esp+0b0h+var_40]
aesenc  xmm5, [esp+0b0h+var_40]
aesenc  xmm6, [esp+0b0h+var_40]
aesenc  xmm7, [esp+0b0h+var_40]
aesenc  xmm0, [esp+0b0h+var_30]
aesenc  xmm1, [esp+0b0h+var_30]
aesenc  xmm2, [esp+0b0h+var_30]
aesenc  xmm3, [esp+0b0h+var_30]
aesenc  xmm4, [esp+0b0h+var_30]
aesenc  xmm5, [esp+0b0h+var_30]
aesenc  xmm6, [esp+0b0h+var_30]
aesenc  xmm7, [esp+0b0h+var_30]
aesenc  xmm0, [esp+0b0h+var_20]
aesenc  xmm0, [esp+0b0h+var_10]
aesenc  xmm1, [esp+0b0h+var_20]
aesenc  xmm2, [esp+0b0h+var_20]
aesenc  xmm3, [esp+0b0h+var_20]
aesenc  xmm4, [esp+0b0h+var_20]
aesenc  xmm5, [esp+0b0h+var_20]
aesenc  xmm6, [esp+0b0h+var_20]
aesenc  xmm7, [esp+0b0h+var_20]
aesenc  xmm1, [esp+0b0h+var_10]
aesenc  xmm2, [esp+0b0h+var_10]
aesenc  xmm3, [esp+0b0h+var_10]
aesenc  xmm4, [esp+0b0h+var_10]
aesenc  xmm5, [esp+0b0h+var_10]
aesenc  xmm6, [esp+0b0h+var_10]
aesenc  xmm7, [esp+0b0h+var_10]
movups  xmmword ptr [eax-20h], xmm0
movups  xmmword ptr [eax-10h], xmm1
lea     eax, [eax+80h]
movups  xmmword ptr [eax-80h], xmm2
movups  xmmword ptr [eax-70h], xmm3
movups  xmmword ptr [eax-60h], xmm4
movups  xmmword ptr [eax-50h], xmm5
movups  xmmword ptr [eax-40h], xmm6
movups  xmmword ptr [eax-30h], xmm7
sub     ecx, 1
jnz     loc_37a7ead0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
and     [esi], edx
adc     eax, 0bc1485d9h
mov     ah, 7fh
mov     dh, 0c5h
add     ah, dh
push    0fffffff4h
jo      short near ptr loc_37a7ed0c+6
mov     ds:1a7e9170h, eax
jz      short loc_37a7ed7b
add     cl, [edx-55h]
push    edx
sub     al, 0b9h
or      al, 0b5h
cmc
push    eax
xor     eax, 58e1b8abh
adc     edx, ebx
jnp     short loc_37a7f1d1
call    near ptr 9f547ea8h
mov     edx, 378d4018h
cwde
fld     tbyte ptr [edx+5b0bf8dbh]
mov     ds:0f866f25bh, al
std
inc     si
xor     al, ds:98a21c5h
jmp     far ptr 9c53h:0eec6b0beh
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 124h
push    ebx
push    esi
push    edi
lea     eax, [esp+130h+var_a0]
mov     esi, edx
push    eax
lea     eax, [esp+134h+var_10]
mov     edi, ecx
push    eax
lea     eax, [esp+138h+var_20]
push    eax
lea     eax, [esp+13ch+var_30]
push    eax
lea     eax, [esp+140h+var_40]
push    eax
lea     eax, [esp+144h+var_50]
push    eax
lea     eax, [esp+148h+var_60]
push    eax
lea     eax, [esp+14ch+var_70]
push    eax
lea     eax, [esp+150h+var_80]
push    eax
lea     ecx, [esi+20h]
lea     edx, [esp+154h+var_90]
call    sub_37a85a90
movups  xmm0, xmmword ptr [esi+0b0h]
add     esp, 24h
movups  xmm5, xmmword ptr [esi+40h]
add     edi, 20h
movups  xmm6, xmmword ptr [esi+50h]
mov     ebx, 4000h
movups  xmm7, xmmword ptr [esi+60h]
movups  xmm1, xmmword ptr [esi+70h]
movups  xmm2, xmmword ptr [esi+80h]
movups  xmm3, xmmword ptr [esi+90h]
movups  xmm4, xmmword ptr [esi+0a0h]
movaps  [esp+130h+var_e0], xmm0
jmp     short loc_37a7fb84
movaps  xmm1, [esp+130h+var_120]
movaps  xmm2, [esp+130h+var_110]
movaps  xmm3, [esp+130h+var_100]
movaps  xmm4, [esp+130h+var_f0]
movups  xmm0, xmmword ptr [edi-20h]
lea     eax, [esp+130h+var_d0]
pxor    xmm0, xmm5
movaps  xmm5, [esp+130h+var_90]
movaps  [esp+130h+var_d0], xmm0
movups  xmm0, xmmword ptr [edi-10h]
pxor    xmm0, xmm6
movaps  [esp+130h+var_c0], xmm0
movups  xmm0, xmmword ptr [edi]
pxor    xmm0, xmm7
movaps  [esp+130h+var_b0], xmm0
movups  xmm0, xmmword ptr [edi+10h]
pxor    xmm0, xmm1
movaps  [esp+130h+var_120], xmm0
movups  xmm0, xmmword ptr [edi+20h]
pxor    xmm0, xmm2
movaps  [esp+130h+var_110], xmm0
movups  xmm0, xmmword ptr [edi+30h]
pxor    xmm0, xmm3
movaps  [esp+130h+var_100], xmm0
movups  xmm0, xmmword ptr [edi+40h]
pxor    xmm0, xmm4
movaps  [esp+130h+var_f0], xmm0
movups  xmm0, xmmword ptr [edi+50h]
pxor    xmm0, [esp+130h+var_e0]
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_80]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  [esp+134h+var_d0], xmm0
add     esp, 4
movaps  xmm0, xmm5
lea     eax, [esp+130h+var_c0]
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_70]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_60]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_50]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_40]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_30]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
lea     eax, [esp+130h+var_c0]
movaps  [esp+130h+var_d0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_20]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  [esp+134h+var_100], xmm0
add     esp, 4
movaps  xmm0, xmm5
lea     eax, [esp+130h+var_f0]
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_10]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm7, [esp+134h+var_a0]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm7
push    eax
call    loc_37a22320
add     esp, 4
lea     eax, [esp+130h+var_c0]
movaps  xmm5, xmm0
movaps  xmm0, xmm7
push    eax
call    loc_37a22320
add     esp, 4
lea     eax, [esp+130h+var_b0]
movaps  xmm6, xmm0
movaps  xmm0, xmm7
push    eax
call    loc_37a22320
movaps  xmm7, xmm0
lea     eax, [esp+134h+var_120]
movaps  xmm0, [esp+134h+var_a0]
add     esp, 4
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
movaps  xmm0, [esp+130h+var_a0]
lea     eax, [esp+130h+var_110]
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
movaps  xmm0, [esp+130h+var_a0]
lea     eax, [esp+130h+var_100]
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
movaps  xmm0, [esp+130h+var_a0]
lea     eax, [esp+130h+var_f0]
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
movaps  xmm0, [esp+130h+var_a0]
lea     eax, [esp+130h+var_e0]
push    eax
call    loc_37a22320
add     esp, 4
lea     edi, [edi+80h]
movaps  xmm1, xmm0
movaps  [esp+130h+var_e0], xmm1
sub     ebx, 1
jnz     loc_37a7fb70
movaps  xmm0, [esp+130h+var_120]
movups  xmmword ptr [esi+40h], xmm5
movups  xmmword ptr [esi+50h], xmm6
movups  xmmword ptr [esi+60h], xmm7
movups  xmmword ptr [esi+70h], xmm0
movaps  xmm0, [esp+130h+var_110]
movups  xmmword ptr [esi+80h], xmm0
movaps  xmm0, [esp+130h+var_100]
movups  xmmword ptr [esi+90h], xmm0
movaps  xmm0, [esp+130h+var_f0]
movups  xmmword ptr [esi+0a0h], xmm0
pop     edi
movups  xmmword ptr [esi+0b0h], xmm1
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 0a8h
lea     eax, [esp+0a8h+var_10]
push    esi
push    edi
push    eax
lea     eax, [esp+0b4h+var_20]
mov     edi, edx
push    eax
lea     eax, [esp+0b8h+var_30]
mov     esi, ecx
push    eax
lea     eax, [esp+0bch+var_40]
push    eax
lea     eax, [esp+0c0h+var_50]
push    eax
lea     eax, [esp+0c4h+var_60]
push    eax
lea     eax, [esp+0c8h+var_70]
push    eax
lea     eax, [esp+0cch+var_80]
push    eax
lea     eax, [esp+0d0h+var_90]
push    eax
lea     edx, [esp+0d4h+var_a0]
call    sub_37a859f0
movups  xmm0, xmmword ptr [esi+40h]
lea     eax, [edi+20h]
movups  xmm1, xmmword ptr [esi+50h]
add     esp, 24h
movups  xmm2, xmmword ptr [esi+60h]
mov     ecx, 2000h
movups  xmm3, xmmword ptr [esi+70h]
movups  xmm4, xmmword ptr [esi+80h]
movups  xmm5, xmmword ptr [esi+90h]
movups  xmm6, xmmword ptr [esi+0a0h]
movups  xmm7, xmmword ptr [esi+0b0h]
nop     dword ptr [eax+eax+00000000h]
aesenc  xmm0, [esp+0b0h+var_a0]
aesenc  xmm1, [esp+0b0h+var_a0]
aesenc  xmm2, [esp+0b0h+var_a0]
aesenc  xmm3, [esp+0b0h+var_a0]
aesenc  xmm4, [esp+0b0h+var_a0]
aesenc  xmm5, [esp+0b0h+var_a0]
aesenc  xmm6, [esp+0b0h+var_a0]
aesenc  xmm7, [esp+0b0h+var_a0]
aesenc  xmm0, [esp+0b0h+var_90]
aesenc  xmm1, [esp+0b0h+var_90]
aesenc  xmm2, [esp+0b0h+var_90]
aesenc  xmm3, [esp+0b0h+var_90]
aesenc  xmm4, [esp+0b0h+var_90]
aesenc  xmm5, [esp+0b0h+var_90]
aesenc  xmm6, [esp+0b0h+var_90]
aesenc  xmm7, [esp+0b0h+var_90]
aesenc  xmm0, [esp+0b0h+var_80]
aesenc  xmm1, [esp+0b0h+var_80]
aesenc  xmm2, [esp+0b0h+var_80]
aesenc  xmm3, [esp+0b0h+var_80]
aesenc  xmm4, [esp+0b0h+var_80]
aesenc  xmm5, [esp+0b0h+var_80]
aesenc  xmm6, [esp+0b0h+var_80]
aesenc  xmm7, [esp+0b0h+var_80]
aesenc  xmm0, [esp+0b0h+var_70]
aesenc  xmm1, [esp+0b0h+var_70]
aesenc  xmm2, [esp+0b0h+var_70]
aesenc  xmm3, [esp+0b0h+var_70]
aesenc  xmm4, [esp+0b0h+var_70]
aesenc  xmm5, [esp+0b0h+var_70]
aesenc  xmm6, [esp+0b0h+var_70]
aesenc  xmm7, [esp+0b0h+var_70]
aesenc  xmm0, [esp+0b0h+var_60]
aesenc  xmm1, [esp+0b0h+var_60]
aesenc  xmm2, [esp+0b0h+var_60]
aesenc  xmm3, [esp+0b0h+var_60]
aesenc  xmm4, [esp+0b0h+var_60]
aesenc  xmm5, [esp+0b0h+var_60]
aesenc  xmm6, [esp+0b0h+var_60]
aesenc  xmm7, [esp+0b0h+var_60]
aesenc  xmm0, [esp+0b0h+var_50]
aesenc  xmm1, [esp+0b0h+var_50]
aesenc  xmm2, [esp+0b0h+var_50]
aesenc  xmm3, [esp+0b0h+var_50]
aesenc  xmm4, [esp+0b0h+var_50]
aesenc  xmm5, [esp+0b0h+var_50]
aesenc  xmm6, [esp+0b0h+var_50]
aesenc  xmm7, [esp+0b0h+var_50]
aesenc  xmm0, [esp+0b0h+var_40]
aesenc  xmm1, [esp+0b0h+var_40]
aesenc  xmm2, [esp+0b0h+var_40]
aesenc  xmm3, [esp+0b0h+var_40]
aesenc  xmm4, [esp+0b0h+var_40]
aesenc  xmm5, [esp+0b0h+var_40]
aesenc  xmm6, [esp+0b0h+var_40]
aesenc  xmm7, [esp+0b0h+var_40]
aesenc  xmm0, [esp+0b0h+var_30]
aesenc  xmm1, [esp+0b0h+var_30]
aesenc  xmm2, [esp+0b0h+var_30]
aesenc  xmm3, [esp+0b0h+var_30]
aesenc  xmm4, [esp+0b0h+var_30]
aesenc  xmm5, [esp+0b0h+var_30]
aesenc  xmm6, [esp+0b0h+var_30]
aesenc  xmm7, [esp+0b0h+var_30]
aesenc  xmm0, [esp+0b0h+var_20]
aesenc  xmm0, [esp+0b0h+var_10]
aesenc  xmm1, [esp+0b0h+var_20]
aesenc  xmm2, [esp+0b0h+var_20]
aesenc  xmm3, [esp+0b0h+var_20]
aesenc  xmm4, [esp+0b0h+var_20]
aesenc  xmm5, [esp+0b0h+var_20]
aesenc  xmm6, [esp+0b0h+var_20]
aesenc  xmm7, [esp+0b0h+var_20]
aesenc  xmm1, [esp+0b0h+var_10]
aesenc  xmm2, [esp+0b0h+var_10]
aesenc  xmm3, [esp+0b0h+var_10]
aesenc  xmm4, [esp+0b0h+var_10]
aesenc  xmm5, [esp+0b0h+var_10]
aesenc  xmm6, [esp+0b0h+var_10]
aesenc  xmm7, [esp+0b0h+var_10]
movups  xmmword ptr [eax-20h], xmm0
movups  xmmword ptr [eax-10h], xmm1
lea     eax, [eax+80h]
movups  xmmword ptr [eax-80h], xmm2
movups  xmmword ptr [eax-70h], xmm3
movups  xmmword ptr [eax-60h], xmm4
movups  xmmword ptr [eax-50h], xmm5
movups  xmmword ptr [eax-40h], xmm6
movups  xmmword ptr [eax-30h], xmm7
sub     ecx, 1
jnz     loc_37a80410
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 128h
push    esi
push    edi
lea     eax, [esp+130h+var_70]
mov     edi, edx
push    eax
lea     eax, [esp+134h+var_60]
mov     esi, ecx
push    eax
lea     eax, [esp+138h+var_50]
push    eax
lea     eax, [esp+13ch+var_40]
push    eax
lea     eax, [esp+140h+var_30]
push    eax
lea     eax, [esp+144h+var_20]
push    eax
lea     eax, [esp+148h+var_10]
push    eax
lea     eax, [esp+14ch+var_100]
push    eax
lea     eax, [esp+150h+var_110]
push    eax
lea     ecx, [edi+20h]
lea     edx, [esp+154h+var_120]
call    sub_37a859f0
movups  xmm0, xmmword ptr [edi+40h]
lea     eax, [esi+20h]
movaps  xmm1, [esp+154h+var_70]
add     esp, 24h
movaps  xmm2, [esp+130h+var_60]
mov     ecx, 2000h
movaps  xmm3, [esp+130h+var_50]
movaps  xmm4, [esp+130h+var_40]
movaps  xmm5, [esp+130h+var_30]
movaps  xmm6, [esp+130h+var_20]
movaps  xmm7, [esp+130h+var_10]
movaps  [esp+130h+var_f0], xmm0
movups  xmm0, xmmword ptr [edi+50h]
movaps  [esp+130h+var_e0], xmm0
movups  xmm0, xmmword ptr [edi+60h]
movaps  [esp+130h+var_d0], xmm0
movups  xmm0, xmmword ptr [edi+70h]
movaps  [esp+130h+var_c0], xmm0
movups  xmm0, xmmword ptr [edi+80h]
movaps  [esp+130h+var_b0], xmm0
movups  xmm0, xmmword ptr [edi+90h]
movaps  [esp+130h+var_a0], xmm0
movups  xmm0, xmmword ptr [edi+0a0h]
movaps  [esp+130h+var_90], xmm0
movups  xmm0, xmmword ptr [edi+0b0h]
movaps  [esp+130h+var_80], xmm0
movups  xmm0, xmmword ptr [eax-20h]
pxor    xmm0, [esp+130h+var_f0]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, xmm7
aesenc  xmm0, xmm6
aesenc  xmm0, xmm5
aesenc  xmm0, xmm4
aesenc  xmm0, xmm3
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
movaps  [esp+130h+var_f0], xmm0
movups  xmm0, xmmword ptr [eax-10h]
pxor    xmm0, [esp+130h+var_e0]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, xmm7
aesenc  xmm0, xmm6
aesenc  xmm0, xmm5
aesenc  xmm0, xmm4
aesenc  xmm0, xmm3
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
movaps  [esp+130h+var_e0], xmm0
movups  xmm0, xmmword ptr [eax]
pxor    xmm0, [esp+130h+var_d0]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, xmm7
aesenc  xmm0, xmm6
aesenc  xmm0, xmm5
aesenc  xmm0, xmm4
aesenc  xmm0, xmm3
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
movaps  [esp+130h+var_d0], xmm0
movups  xmm0, xmmword ptr [eax+10h]
pxor    xmm0, [esp+130h+var_c0]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, xmm7
aesenc  xmm0, xmm6
aesenc  xmm0, xmm5
aesenc  xmm0, xmm4
aesenc  xmm0, xmm3
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
movaps  [esp+130h+var_c0], xmm0
movups  xmm0, xmmword ptr [eax+20h]
pxor    xmm0, [esp+130h+var_b0]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, xmm7
aesenc  xmm0, xmm6
aesenc  xmm0, xmm5
aesenc  xmm0, xmm4
aesenc  xmm0, xmm3
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
movaps  [esp+130h+var_b0], xmm0
movups  xmm0, xmmword ptr [eax+30h]
pxor    xmm0, [esp+130h+var_a0]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, xmm7
aesenc  xmm0, xmm6
aesenc  xmm0, xmm5
aesenc  xmm0, xmm4
aesenc  xmm0, xmm3
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
movaps  [esp+130h+var_a0], xmm0
movups  xmm0, xmmword ptr [eax+40h]
pxor    xmm0, [esp+130h+var_90]
aesenc  xmm0, [esp+130h+var_120]
lea     eax, [eax+80h]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, xmm7
aesenc  xmm0, xmm6
aesenc  xmm0, xmm5
aesenc  xmm0, xmm4
aesenc  xmm0, xmm3
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
movaps  [esp+130h+var_90], xmm0
movups  xmm0, xmmword ptr [eax-30h]
pxor    xmm0, [esp+130h+var_80]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, xmm7
aesenc  xmm0, xmm6
aesenc  xmm0, xmm5
aesenc  xmm0, xmm4
aesenc  xmm0, xmm3
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
movaps  [esp+130h+var_80], xmm0
sub     ecx, 1
jnz     loc_37a807c3
movaps  xmm0, [esp+130h+var_f0]
movups  xmmword ptr [edi+40h], xmm0
movaps  xmm0, [esp+130h+var_e0]
movups  xmmword ptr [edi+50h], xmm0
movaps  xmm0, [esp+130h+var_d0]
movups  xmmword ptr [edi+60h], xmm0
movaps  xmm0, [esp+130h+var_c0]
movups  xmmword ptr [edi+70h], xmm0
movaps  xmm0, [esp+130h+var_b0]
movups  xmmword ptr [edi+80h], xmm0
movaps  xmm0, [esp+130h+var_a0]
movups  xmmword ptr [edi+90h], xmm0
movaps  xmm0, [esp+130h+var_90]
movups  xmmword ptr [edi+0a0h], xmm0
movaps  xmm0, [esp+130h+var_80]
movups  xmmword ptr [edi+0b0h], xmm0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
imul    esi, [ecx-22h], 0b52e5757h
xchg    eax, ecx
cli
sti
sub     ebp, [ecx]
add     bl, [edx-173d3008h]
pop     esp
iret
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 124h
push    ebx
push    esi
push    edi
lea     eax, [esp+130h+var_a0]
mov     esi, edx
push    eax
lea     eax, [esp+134h+var_10]
mov     edi, ecx
push    eax
lea     eax, [esp+138h+var_20]
push    eax
lea     eax, [esp+13ch+var_30]
push    eax
lea     eax, [esp+140h+var_40]
push    eax
lea     eax, [esp+144h+var_50]
push    eax
lea     eax, [esp+148h+var_60]
push    eax
lea     eax, [esp+14ch+var_70]
push    eax
lea     eax, [esp+150h+var_80]
push    eax
lea     ecx, [esi+20h]
lea     edx, [esp+154h+var_90]
call    sub_37a85a90
movups  xmm0, xmmword ptr [esi+0b0h]
add     esp, 24h
movups  xmm5, xmmword ptr [esi+40h]
add     edi, 20h
movups  xmm6, xmmword ptr [esi+50h]
mov     ebx, 2000h
movups  xmm7, xmmword ptr [esi+60h]
movups  xmm1, xmmword ptr [esi+70h]
movups  xmm2, xmmword ptr [esi+80h]
movups  xmm3, xmmword ptr [esi+90h]
movups  xmm4, xmmword ptr [esi+0a0h]
movaps  [esp+130h+var_e0], xmm0
jmp     short loc_37a814c4
movaps  xmm1, [esp+130h+var_120]
movaps  xmm2, [esp+130h+var_110]
movaps  xmm3, [esp+130h+var_100]
movaps  xmm4, [esp+130h+var_f0]
movups  xmm0, xmmword ptr [edi-20h]
lea     eax, [esp+130h+var_d0]
pxor    xmm0, xmm5
movaps  xmm5, [esp+130h+var_90]
movaps  [esp+130h+var_d0], xmm0
movups  xmm0, xmmword ptr [edi-10h]
pxor    xmm0, xmm6
movaps  [esp+130h+var_c0], xmm0
movups  xmm0, xmmword ptr [edi]
pxor    xmm0, xmm7
movaps  [esp+130h+var_b0], xmm0
movups  xmm0, xmmword ptr [edi+10h]
pxor    xmm0, xmm1
movaps  [esp+130h+var_120], xmm0
movups  xmm0, xmmword ptr [edi+20h]
pxor    xmm0, xmm2
movaps  [esp+130h+var_110], xmm0
movups  xmm0, xmmword ptr [edi+30h]
pxor    xmm0, xmm3
movaps  [esp+130h+var_100], xmm0
movups  xmm0, xmmword ptr [edi+40h]
pxor    xmm0, xmm4
movaps  [esp+130h+var_f0], xmm0
movups  xmm0, xmmword ptr [edi+50h]
pxor    xmm0, [esp+130h+var_e0]
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_80]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  [esp+134h+var_d0], xmm0
add     esp, 4
movaps  xmm0, xmm5
lea     eax, [esp+130h+var_c0]
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_70]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_60]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_50]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_40]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_30]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
lea     eax, [esp+130h+var_c0]
movaps  [esp+130h+var_d0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_20]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  [esp+134h+var_100], xmm0
add     esp, 4
movaps  xmm0, xmm5
lea     eax, [esp+130h+var_f0]
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm5, [esp+134h+var_10]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_d0], xmm0
lea     eax, [esp+130h+var_c0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_c0], xmm0
lea     eax, [esp+130h+var_b0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_b0], xmm0
lea     eax, [esp+130h+var_120]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
lea     eax, [esp+130h+var_110]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
lea     eax, [esp+130h+var_100]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
lea     eax, [esp+130h+var_f0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
lea     eax, [esp+130h+var_e0]
movaps  xmm0, xmm5
push    eax
call    loc_37a22320
movaps  xmm7, [esp+134h+var_a0]
lea     eax, [esp+134h+var_d0]
add     esp, 4
movaps  [esp+130h+var_e0], xmm0
movaps  xmm0, xmm7
push    eax
call    loc_37a22320
add     esp, 4
lea     eax, [esp+130h+var_c0]
movaps  xmm5, xmm0
movaps  xmm0, xmm7
push    eax
call    loc_37a22320
add     esp, 4
lea     eax, [esp+130h+var_b0]
movaps  xmm6, xmm0
movaps  xmm0, xmm7
push    eax
call    loc_37a22320
movaps  xmm7, xmm0
lea     eax, [esp+134h+var_120]
movaps  xmm0, [esp+134h+var_a0]
add     esp, 4
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_120], xmm0
movaps  xmm0, [esp+130h+var_a0]
lea     eax, [esp+130h+var_110]
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_110], xmm0
movaps  xmm0, [esp+130h+var_a0]
lea     eax, [esp+130h+var_100]
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_100], xmm0
movaps  xmm0, [esp+130h+var_a0]
lea     eax, [esp+130h+var_f0]
push    eax
call    loc_37a22320
add     esp, 4
movaps  [esp+130h+var_f0], xmm0
movaps  xmm0, [esp+130h+var_a0]
lea     eax, [esp+130h+var_e0]
push    eax
call    loc_37a22320
add     esp, 4
lea     edi, [edi+80h]
movaps  xmm1, xmm0
movaps  [esp+130h+var_e0], xmm1
sub     ebx, 1
jnz     loc_37a814b0
movaps  xmm0, [esp+130h+var_120]
movups  xmmword ptr [esi+40h], xmm5
movups  xmmword ptr [esi+50h], xmm6
movups  xmmword ptr [esi+60h], xmm7
movups  xmmword ptr [esi+70h], xmm0
movaps  xmm0, [esp+130h+var_110]
movups  xmmword ptr [esi+80h], xmm0
movaps  xmm0, [esp+130h+var_100]
movups  xmmword ptr [esi+90h], xmm0
movaps  xmm0, [esp+130h+var_f0]
movups  xmmword ptr [esi+0a0h], xmm0
pop     edi
movups  xmmword ptr [esi+0b0h], xmm1
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 128h
push    esi
push    edi
lea     eax, [esp+130h+var_90]
mov     edi, edx
push    eax
lea     eax, [esp+134h+var_a0]
mov     esi, ecx
push    eax
lea     eax, [esp+138h+var_b0]
push    eax
lea     eax, [esp+13ch+var_c0]
push    eax
lea     eax, [esp+140h+var_d0]
push    eax
lea     eax, [esp+144h+var_e0]
push    eax
lea     eax, [esp+148h+var_f0]
push    eax
lea     eax, [esp+14ch+var_100]
push    eax
lea     eax, [esp+150h+var_110]
push    eax
lea     edx, [esp+154h+var_120]
call    sub_37a859f0
movups  xmm0, xmmword ptr [esi+0a0h]
add     esp, 24h
movups  xmm2, xmmword ptr [esi+40h]
mov     eax, 10h
movups  xmm6, xmmword ptr [esi+50h]
movups  xmm5, xmmword ptr [esi+60h]
movups  xmm4, xmmword ptr [esi+70h]
movups  xmm3, xmmword ptr [esi+80h]
movups  xmm1, xmmword ptr [esi+90h]
movaps  [esp+130h+var_70], xmm0
movups  xmm0, xmmword ptr [esi+0b0h]
jmp     short loc_37a81d80
movaps  xmm0, [esp+130h+var_80]
movaps  xmm6, [esp+130h+var_60]
movaps  xmm5, [esp+130h+var_40]
movaps  xmm4, [esp+130h+var_30]
movaps  xmm3, [esp+130h+var_20]
movaps  xmm1, [esp+130h+var_10]
aesenc  xmm2, [esp+130h+var_120]
aesenc  xmm2, [esp+130h+var_110]
aesenc  xmm1, [esp+130h+var_120]
aesenc  xmm2, [esp+130h+var_100]
aesenc  xmm5, [esp+130h+var_120]
aesenc  xmm1, [esp+130h+var_110]
aesenc  xmm2, [esp+130h+var_f0]
aesenc  xmm5, [esp+130h+var_110]
aesenc  xmm1, [esp+130h+var_100]
aesenc  xmm2, [esp+130h+var_e0]
aesenc  xmm5, [esp+130h+var_100]
aesenc  xmm1, [esp+130h+var_f0]
aesenc  xmm2, [esp+130h+var_d0]
aesenc  xmm6, [esp+130h+var_120]
aesenc  xmm5, [esp+130h+var_f0]
aesenc  xmm4, [esp+130h+var_120]
aesenc  xmm3, [esp+130h+var_120]
aesenc  xmm1, [esp+130h+var_e0]
aesenc  xmm2, [esp+130h+var_c0]
aesenc  xmm6, [esp+130h+var_110]
aesenc  xmm5, [esp+130h+var_e0]
aesenc  xmm4, [esp+130h+var_110]
aesenc  xmm3, [esp+130h+var_110]
aesenc  xmm1, [esp+130h+var_d0]
aesenc  xmm2, [esp+130h+var_b0]
aesenc  xmm6, [esp+130h+var_100]
aesenc  xmm5, [esp+130h+var_d0]
aesenc  xmm4, [esp+130h+var_100]
aesenc  xmm3, [esp+130h+var_100]
aesenc  xmm1, [esp+130h+var_c0]
aesenc  xmm2, [esp+130h+var_a0]
aesenc  xmm6, [esp+130h+var_f0]
aesenc  xmm5, [esp+130h+var_c0]
aesenc  xmm4, [esp+130h+var_f0]
aesenc  xmm3, [esp+130h+var_f0]
aesenc  xmm1, [esp+130h+var_b0]
aesenc  xmm2, [esp+130h+var_90]
aesenc  xmm6, [esp+130h+var_e0]
aesenc  xmm5, [esp+130h+var_b0]
aesenc  xmm4, [esp+130h+var_e0]
aesenc  xmm3, [esp+130h+var_e0]
aesenc  xmm6, [esp+130h+var_d0]
aesenc  xmm5, [esp+130h+var_a0]
aesenc  xmm4, [esp+130h+var_d0]
aesenc  xmm3, [esp+130h+var_d0]
aesenc  xmm6, [esp+130h+var_c0]
aesenc  xmm4, [esp+130h+var_c0]
aesenc  xmm3, [esp+130h+var_c0]
aesenc  xmm6, [esp+130h+var_b0]
aesenc  xmm4, [esp+130h+var_b0]
aesenc  xmm3, [esp+130h+var_b0]
aesenc  xmm6, [esp+130h+var_a0]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
movaps  xmm7, xmm2
movaps  xmm2, [esp+130h+var_90]
aesenc  xmm0, [esp+130h+var_f0]
aesenc  xmm5, xmm2
aesenc  xmm0, [esp+130h+var_e0]
movaps  [esp+130h+var_60], xmm5
movaps  xmm5, [esp+130h+var_a0]
aesenc  xmm1, xmm5
aesenc  xmm1, xmm2
aesenc  xmm4, xmm5
aesenc  xmm3, xmm5
aesenc  xmm6, xmm2
aesenc  xmm4, xmm2
aesenc  xmm3, xmm2
movaps  xmm2, xmm1
movaps  xmm1, [esp+130h+var_70]
aesenc  xmm1, [esp+130h+var_120]
aesenc  xmm1, [esp+130h+var_110]
aesenc  xmm1, [esp+130h+var_100]
aesenc  xmm1, [esp+130h+var_f0]
aesenc  xmm1, [esp+130h+var_e0]
aesenc  xmm1, [esp+130h+var_d0]
aesenc  xmm1, [esp+130h+var_c0]
aesenc  xmm1, [esp+130h+var_b0]
aesenc  xmm1, xmm5
aesenc  xmm1, [esp+130h+var_90]
movaps  [esp+130h+var_80], xmm7
movaps  xmm5, xmm6
pxor    xmm5, xmm7
movaps  [esp+130h+var_50], xmm5
movaps  xmm5, [esp+130h+var_60]
movaps  xmm7, xmm5
pxor    xmm7, xmm6
movaps  xmm6, xmm4
movaps  [esp+130h+var_60], xmm7
pxor    xmm6, xmm5
movaps  [esp+130h+var_40], xmm6
movaps  xmm5, xmm3
pxor    xmm5, xmm4
movaps  xmm4, xmm2
movaps  [esp+130h+var_30], xmm5
pxor    xmm4, xmm3
movaps  [esp+130h+var_20], xmm4
movaps  xmm3, xmm1
pxor    xmm3, xmm2
movaps  [esp+130h+var_10], xmm3
aesenc  xmm0, [esp+130h+var_d0]
aesenc  xmm0, [esp+130h+var_c0]
aesenc  xmm0, [esp+130h+var_b0]
aesenc  xmm0, [esp+130h+var_a0]
aesenc  xmm0, [esp+130h+var_90]
movaps  xmm2, xmm0
pxor    xmm2, xmm1
movaps  xmm1, [esp+130h+var_80]
movaps  [esp+130h+var_70], xmm2
pxor    xmm1, xmm0
movaps  xmm2, [esp+130h+var_50]
movaps  [esp+130h+var_80], xmm1
sub     eax, 1
jnz     loc_37a81d50
movaps  xmm0, [esp+130h+var_50]
lea     eax, [edi+20h]
movaps  xmm2, [esp+130h+var_70]
mov     ecx, 8000h
nop     word ptr [eax+eax+00000000h]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm7, [esp+130h+var_120]
aesenc  xmm6, [esp+130h+var_120]
aesenc  xmm5, [esp+130h+var_120]
aesenc  xmm4, [esp+130h+var_120]
aesenc  xmm3, [esp+130h+var_120]
aesenc  xmm2, [esp+130h+var_120]
aesenc  xmm1, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm7, [esp+130h+var_110]
aesenc  xmm6, [esp+130h+var_110]
aesenc  xmm5, [esp+130h+var_110]
aesenc  xmm4, [esp+130h+var_110]
aesenc  xmm3, [esp+130h+var_110]
aesenc  xmm2, [esp+130h+var_110]
aesenc  xmm1, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm7, [esp+130h+var_100]
aesenc  xmm6, [esp+130h+var_100]
aesenc  xmm5, [esp+130h+var_100]
aesenc  xmm4, [esp+130h+var_100]
aesenc  xmm3, [esp+130h+var_100]
aesenc  xmm2, [esp+130h+var_100]
aesenc  xmm1, [esp+130h+var_100]
aesenc  xmm0, [esp+130h+var_f0]
aesenc  xmm7, [esp+130h+var_f0]
aesenc  xmm6, [esp+130h+var_f0]
aesenc  xmm5, [esp+130h+var_f0]
aesenc  xmm4, [esp+130h+var_f0]
aesenc  xmm3, [esp+130h+var_f0]
aesenc  xmm2, [esp+130h+var_f0]
aesenc  xmm1, [esp+130h+var_f0]
aesenc  xmm0, [esp+130h+var_e0]
aesenc  xmm7, [esp+130h+var_e0]
aesenc  xmm6, [esp+130h+var_e0]
aesenc  xmm5, [esp+130h+var_e0]
aesenc  xmm4, [esp+130h+var_e0]
aesenc  xmm3, [esp+130h+var_e0]
aesenc  xmm2, [esp+130h+var_e0]
aesenc  xmm1, [esp+130h+var_e0]
aesenc  xmm0, [esp+130h+var_d0]
aesenc  xmm7, [esp+130h+var_d0]
aesenc  xmm6, [esp+130h+var_d0]
aesenc  xmm5, [esp+130h+var_d0]
aesenc  xmm4, [esp+130h+var_d0]
aesenc  xmm3, [esp+130h+var_d0]
aesenc  xmm2, [esp+130h+var_d0]
aesenc  xmm1, [esp+130h+var_d0]
aesenc  xmm0, [esp+130h+var_c0]
aesenc  xmm7, [esp+130h+var_c0]
aesenc  xmm6, [esp+130h+var_c0]
aesenc  xmm5, [esp+130h+var_c0]
aesenc  xmm4, [esp+130h+var_c0]
aesenc  xmm3, [esp+130h+var_c0]
aesenc  xmm2, [esp+130h+var_c0]
aesenc  xmm1, [esp+130h+var_c0]
aesenc  xmm0, [esp+130h+var_b0]
aesenc  xmm7, [esp+130h+var_b0]
aesenc  xmm6, [esp+130h+var_b0]
aesenc  xmm5, [esp+130h+var_b0]
aesenc  xmm4, [esp+130h+var_b0]
aesenc  xmm3, [esp+130h+var_b0]
aesenc  xmm2, [esp+130h+var_b0]
aesenc  xmm1, [esp+130h+var_b0]
aesenc  xmm0, [esp+130h+var_a0]
aesenc  xmm0, [esp+130h+var_90]
aesenc  xmm7, [esp+130h+var_a0]
aesenc  xmm6, [esp+130h+var_a0]
aesenc  xmm5, [esp+130h+var_a0]
aesenc  xmm4, [esp+130h+var_a0]
aesenc  xmm3, [esp+130h+var_a0]
aesenc  xmm2, [esp+130h+var_a0]
aesenc  xmm1, [esp+130h+var_a0]
aesenc  xmm7, [esp+130h+var_90]
aesenc  xmm6, [esp+130h+var_90]
aesenc  xmm5, [esp+130h+var_90]
aesenc  xmm4, [esp+130h+var_90]
aesenc  xmm3, [esp+130h+var_90]
aesenc  xmm2, [esp+130h+var_90]
aesenc  xmm1, [esp+130h+var_90]
movups  xmmword ptr [eax-20h], xmm0
movups  xmmword ptr [eax-10h], xmm7
lea     eax, [eax+80h]
movups  xmmword ptr [eax-80h], xmm6
movups  xmmword ptr [eax-70h], xmm5
movups  xmmword ptr [eax-60h], xmm4
movups  xmmword ptr [eax-50h], xmm3
movups  xmmword ptr [eax-40h], xmm2
movups  xmmword ptr [eax-30h], xmm1
sub     ecx, 1
jnz     loc_37a820b0
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 128h
push    esi
push    edi
lea     eax, [esp+130h+var_80]
mov     edi, edx
push    eax
lea     eax, [esp+134h+var_70]
mov     esi, ecx
push    eax
lea     eax, [esp+138h+var_a0]
push    eax
lea     eax, [esp+13ch+var_c0]
push    eax
lea     eax, [esp+140h+var_d0]
push    eax
lea     eax, [esp+144h+var_e0]
push    eax
lea     eax, [esp+148h+var_f0]
push    eax
lea     eax, [esp+14ch+var_100]
push    eax
lea     eax, [esp+150h+var_110]
push    eax
lea     ecx, [edi+20h]
lea     edx, [esp+154h+var_120]
call    sub_37a859f0
movups  xmm0, xmmword ptr [edi+70h]
add     esp, 24h
movups  xmm1, xmmword ptr [edi+40h]
add     esi, 20h
movups  xmm2, xmmword ptr [edi+50h]
mov     eax, esi
movups  xmm3, xmmword ptr [edi+60h]
mov     ecx, 8000h
movaps  [esp+130h+var_60], xmm0
movups  xmm0, xmmword ptr [edi+80h]
movaps  [esp+130h+var_50], xmm0
movups  xmm0, xmmword ptr [edi+90h]
movaps  [esp+130h+var_40], xmm0
movups  xmm0, xmmword ptr [edi+0a0h]
movaps  [esp+130h+var_30], xmm0
movups  xmm0, xmmword ptr [edi+0b0h]
movaps  [esp+130h+var_b0], xmm0
jmp     short loc_37a82428
movaps  xmm1, [esp+130h+var_20]
movups  xmm7, xmmword ptr [eax-20h]
movups  xmm6, xmmword ptr [eax-10h]
pxor    xmm7, xmm1
aesenc  xmm7, [esp+130h+var_120]
aesenc  xmm7, [esp+130h+var_110]
aesenc  xmm7, [esp+130h+var_100]
aesenc  xmm7, [esp+130h+var_f0]
aesenc  xmm7, [esp+130h+var_e0]
movaps  xmm5, [esp+130h+var_d0]
pxor    xmm6, xmm2
aesenc  xmm6, [esp+130h+var_120]
aesenc  xmm6, [esp+130h+var_110]
aesenc  xmm6, [esp+130h+var_100]
aesenc  xmm6, [esp+130h+var_f0]
aesenc  xmm6, [esp+130h+var_e0]
movaps  xmm2, [esp+130h+var_c0]
movaps  xmm4, [esp+130h+var_a0]
aesenc  xmm7, xmm5
aesenc  xmm7, [esp+130h+var_c0]
aesenc  xmm6, xmm5
movups  xmm5, xmmword ptr [eax]
pxor    xmm5, xmm3
movaps  xmm1, [esp+130h+var_70]
aesenc  xmm5, [esp+130h+var_120]
aesenc  xmm5, [esp+130h+var_110]
aesenc  xmm5, [esp+130h+var_100]
aesenc  xmm5, [esp+130h+var_f0]
aesenc  xmm5, [esp+130h+var_e0]
aesenc  xmm5, [esp+130h+var_d0]
movups  xmm3, xmmword ptr [eax+20h]
pxor    xmm3, [esp+130h+var_50]
aesenc  xmm3, [esp+130h+var_120]
aesenc  xmm3, [esp+130h+var_110]
aesenc  xmm3, [esp+130h+var_100]
aesenc  xmm3, [esp+130h+var_f0]
aesenc  xmm3, [esp+130h+var_e0]
aesenc  xmm3, [esp+130h+var_d0]
aesenc  xmm5, xmm2
aesenc  xmm6, xmm2
aesenc  xmm5, xmm4
aesenc  xmm7, xmm4
aesenc  xmm6, xmm4
movups  xmm4, xmmword ptr [eax+10h]
pxor    xmm4, [esp+130h+var_60]
aesenc  xmm4, [esp+130h+var_120]
aesenc  xmm4, [esp+130h+var_110]
aesenc  xmm4, [esp+130h+var_100]
aesenc  xmm4, [esp+130h+var_f0]
aesenc  xmm4, [esp+130h+var_e0]
aesenc  xmm4, [esp+130h+var_d0]
movaps  xmm0, [esp+130h+var_80]
aesenc  xmm4, xmm2
aesenc  xmm3, xmm2
movups  xmm2, xmmword ptr [eax+30h]
pxor    xmm2, [esp+130h+var_40]
aesenc  xmm2, [esp+130h+var_120]
aesenc  xmm2, [esp+130h+var_110]
aesenc  xmm2, [esp+130h+var_100]
aesenc  xmm2, [esp+130h+var_f0]
aesenc  xmm2, [esp+130h+var_e0]
aesenc  xmm2, [esp+130h+var_d0]
aesenc  xmm2, [esp+130h+var_c0]
aesenc  xmm5, xmm1
aesenc  xmm5, xmm0
movaps  [esp+130h+var_90], xmm5
movaps  xmm5, [esp+130h+var_a0]
aesenc  xmm4, xmm5
aesenc  xmm3, xmm5
aesenc  xmm2, xmm5
aesenc  xmm7, xmm1
aesenc  xmm6, xmm1
aesenc  xmm4, xmm1
aesenc  xmm3, xmm1
aesenc  xmm2, xmm1
movups  xmm1, xmmword ptr [eax+40h]
pxor    xmm1, [esp+130h+var_30]
aesenc  xmm7, xmm0
aesenc  xmm6, xmm0
aesenc  xmm4, xmm0
aesenc  xmm3, xmm0
aesenc  xmm2, xmm0
lea     eax, [eax+80h]
aesenc  xmm1, [esp+130h+var_120]
aesenc  xmm1, [esp+130h+var_110]
aesenc  xmm1, [esp+130h+var_100]
aesenc  xmm1, [esp+130h+var_f0]
aesenc  xmm1, [esp+130h+var_e0]
aesenc  xmm1, [esp+130h+var_d0]
aesenc  xmm1, [esp+130h+var_c0]
aesenc  xmm1, xmm5
movaps  xmm5, xmm6
pxor    xmm5, xmm7
movaps  [esp+130h+var_20], xmm5
movaps  xmm5, xmm3
pxor    xmm5, xmm4
movaps  [esp+130h+var_60], xmm5
aesenc  xmm1, [esp+130h+var_70]
aesenc  xmm1, xmm0
movups  xmm0, xmmword ptr [eax-30h]
pxor    xmm0, [esp+130h+var_b0]
movaps  [esp+130h+var_b0], xmm7
movaps  xmm7, [esp+130h+var_90]
pxor    xmm7, xmm6
movaps  xmm6, xmm4
pxor    xmm6, [esp+130h+var_90]
movaps  xmm4, xmm2
movaps  [esp+130h+var_10], xmm7
pxor    xmm4, xmm3
movaps  [esp+130h+var_90], xmm6
movaps  xmm3, xmm1
movaps  [esp+130h+var_50], xmm4
pxor    xmm3, xmm2
movaps  [esp+130h+var_40], xmm3
movaps  xmm3, [esp+130h+var_90]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, [esp+130h+var_f0]
aesenc  xmm0, [esp+130h+var_e0]
aesenc  xmm0, [esp+130h+var_d0]
aesenc  xmm0, [esp+130h+var_c0]
aesenc  xmm0, [esp+130h+var_a0]
aesenc  xmm0, [esp+130h+var_70]
aesenc  xmm0, [esp+130h+var_80]
movaps  xmm2, xmm0
pxor    xmm2, xmm1
movaps  xmm1, [esp+130h+var_b0]
movaps  [esp+130h+var_30], xmm2
pxor    xmm1, xmm0
movaps  xmm2, [esp+130h+var_10]
movaps  [esp+130h+var_b0], xmm1
sub     ecx, 1
jnz     loc_37a82420
mov     eax, 8000h
nop     dword ptr [eax]
movups  xmm7, xmmword ptr [esi-20h]
pxor    xmm7, [esp+130h+var_20]
aesenc  xmm7, [esp+130h+var_120]
aesenc  xmm7, [esp+130h+var_110]
movups  xmm6, xmmword ptr [esi-10h]
pxor    xmm6, [esp+130h+var_10]
aesenc  xmm6, [esp+130h+var_120]
aesenc  xmm6, [esp+130h+var_110]
movups  xmm5, xmmword ptr [esi]
pxor    xmm5, [esp+130h+var_90]
aesenc  xmm5, [esp+130h+var_120]
aesenc  xmm5, [esp+130h+var_110]
aesenc  xmm5, [esp+130h+var_100]
aesenc  xmm7, [esp+130h+var_100]
aesenc  xmm6, [esp+130h+var_100]
aesenc  xmm5, [esp+130h+var_f0]
aesenc  xmm7, [esp+130h+var_f0]
aesenc  xmm6, [esp+130h+var_f0]
aesenc  xmm5, [esp+130h+var_e0]
aesenc  xmm7, [esp+130h+var_e0]
aesenc  xmm6, [esp+130h+var_e0]
aesenc  xmm5, [esp+130h+var_d0]
aesenc  xmm7, [esp+130h+var_d0]
movaps  xmm4, [esp+130h+var_c0]
aesenc  xmm6, [esp+130h+var_d0]
movups  xmm3, xmmword ptr [esi+20h]
pxor    xmm3, [esp+130h+var_50]
aesenc  xmm3, [esp+130h+var_120]
aesenc  xmm3, [esp+130h+var_110]
movaps  xmm1, [esp+130h+var_70]
movaps  xmm2, [esp+130h+var_a0]
aesenc  xmm3, [esp+130h+var_100]
movaps  xmm0, [esp+130h+var_80]
aesenc  xmm3, [esp+130h+var_f0]
aesenc  xmm3, [esp+130h+var_e0]
aesenc  xmm3, [esp+130h+var_d0]
aesenc  xmm5, xmm4
aesenc  xmm7, xmm4
aesenc  xmm6, xmm4
movups  xmm4, xmmword ptr [esi+10h]
pxor    xmm4, [esp+130h+var_60]
aesenc  xmm4, [esp+130h+var_120]
aesenc  xmm4, [esp+130h+var_110]
aesenc  xmm4, [esp+130h+var_100]
aesenc  xmm4, [esp+130h+var_f0]
aesenc  xmm4, [esp+130h+var_e0]
aesenc  xmm4, [esp+130h+var_d0]
aesenc  xmm5, xmm2
aesenc  xmm7, [esp+130h+var_a0]
aesenc  xmm6, xmm2
aesenc  xmm5, xmm1
aesenc  xmm5, xmm0
movaps  [esp+130h+var_90], xmm5
movaps  xmm5, [esp+130h+var_c0]
aesenc  xmm4, xmm5
aesenc  xmm4, xmm2
aesenc  xmm3, xmm5
aesenc  xmm3, xmm2
movups  xmm2, xmmword ptr [esi+30h]
pxor    xmm2, [esp+130h+var_40]
aesenc  xmm2, [esp+130h+var_120]
aesenc  xmm2, [esp+130h+var_110]
aesenc  xmm2, [esp+130h+var_100]
aesenc  xmm2, [esp+130h+var_f0]
aesenc  xmm2, [esp+130h+var_e0]
aesenc  xmm2, [esp+130h+var_d0]
aesenc  xmm2, xmm5
aesenc  xmm2, [esp+130h+var_a0]
aesenc  xmm7, xmm1
aesenc  xmm6, xmm1
aesenc  xmm4, xmm1
aesenc  xmm3, xmm1
aesenc  xmm2, xmm1
movups  xmm1, xmmword ptr [esi+40h]
pxor    xmm1, [esp+130h+var_30]
aesenc  xmm1, [esp+130h+var_120]
aesenc  xmm7, xmm0
aesenc  xmm6, xmm0
aesenc  xmm4, xmm0
aesenc  xmm3, xmm0
aesenc  xmm2, xmm0
lea     esi, [esi+80h]
movaps  xmm5, xmm6
pxor    xmm5, xmm7
movaps  [esp+130h+var_20], xmm5
movaps  xmm5, xmm3
pxor    xmm5, xmm4
movaps  [esp+130h+var_60], xmm5
aesenc  xmm1, [esp+130h+var_110]
aesenc  xmm1, [esp+130h+var_100]
aesenc  xmm1, [esp+130h+var_f0]
aesenc  xmm1, [esp+130h+var_e0]
aesenc  xmm1, [esp+130h+var_d0]
aesenc  xmm1, [esp+130h+var_c0]
aesenc  xmm1, [esp+130h+var_a0]
aesenc  xmm1, [esp+130h+var_70]
aesenc  xmm1, xmm0
movups  xmm0, xmmword ptr [esi-30h]
pxor    xmm0, [esp+130h+var_b0]
movaps  [esp+130h+var_b0], xmm7
movaps  xmm7, [esp+130h+var_90]
pxor    xmm7, xmm6
movaps  xmm6, xmm4
pxor    xmm6, [esp+130h+var_90]
movaps  xmm4, xmm2
movaps  [esp+130h+var_10], xmm7
pxor    xmm4, xmm3
movaps  [esp+130h+var_90], xmm6
movaps  xmm3, xmm1
movaps  [esp+130h+var_50], xmm4
pxor    xmm3, xmm2
movaps  [esp+130h+var_40], xmm3
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, [esp+130h+var_f0]
aesenc  xmm0, [esp+130h+var_e0]
aesenc  xmm0, [esp+130h+var_d0]
aesenc  xmm0, [esp+130h+var_c0]
aesenc  xmm0, [esp+130h+var_a0]
aesenc  xmm0, [esp+130h+var_70]
aesenc  xmm0, [esp+130h+var_80]
movaps  xmm2, xmm0
pxor    xmm2, xmm1
movaps  xmm1, [esp+130h+var_b0]
movaps  [esp+130h+var_30], xmm2
pxor    xmm1, xmm0
movaps  [esp+130h+var_b0], xmm1
sub     eax, 1
jnz     loc_37a82770
mov     eax, 10h
nop     dword ptr [eax+eax+00h]
movaps  xmm0, [esp+130h+var_90]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, [esp+130h+var_f0]
aesenc  xmm0, [esp+130h+var_e0]
movaps  xmm5, [esp+130h+var_d0]
aesenc  xmm0, xmm5
movaps  xmm4, [esp+130h+var_c0]
aesenc  xmm0, xmm4
movaps  xmm7, [esp+130h+var_20]
aesenc  xmm7, [esp+130h+var_120]
aesenc  xmm7, [esp+130h+var_110]
aesenc  xmm7, [esp+130h+var_100]
movaps  xmm3, [esp+130h+var_a0]
aesenc  xmm0, xmm3
movaps  xmm6, [esp+130h+var_10]
aesenc  xmm6, [esp+130h+var_120]
aesenc  xmm6, [esp+130h+var_110]
aesenc  xmm6, [esp+130h+var_100]
movaps  xmm2, [esp+130h+var_70]
aesenc  xmm0, xmm2
aesenc  xmm7, [esp+130h+var_f0]
aesenc  xmm6, [esp+130h+var_f0]
movaps  xmm1, [esp+130h+var_80]
aesenc  xmm0, xmm1
aesenc  xmm7, [esp+130h+var_e0]
aesenc  xmm6, [esp+130h+var_e0]
aesenc  xmm7, xmm5
aesenc  xmm6, xmm5
movaps  xmm5, xmm0
movaps  xmm0, [esp+130h+var_60]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, [esp+130h+var_f0]
aesenc  xmm0, [esp+130h+var_e0]
aesenc  xmm0, [esp+130h+var_d0]
aesenc  xmm0, xmm4
aesenc  xmm0, xmm3
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
aesenc  xmm7, xmm4
aesenc  xmm6, xmm4
movaps  xmm4, xmm0
movaps  [esp+130h+var_90], xmm5
movaps  xmm0, [esp+130h+var_50]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, [esp+130h+var_f0]
aesenc  xmm0, [esp+130h+var_e0]
aesenc  xmm0, [esp+130h+var_d0]
aesenc  xmm0, [esp+130h+var_c0]
aesenc  xmm0, xmm3
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
aesenc  xmm7, xmm3
aesenc  xmm6, xmm3
movaps  xmm3, xmm0
movaps  xmm0, [esp+130h+var_40]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, [esp+130h+var_f0]
aesenc  xmm0, [esp+130h+var_e0]
aesenc  xmm0, [esp+130h+var_d0]
aesenc  xmm0, [esp+130h+var_c0]
aesenc  xmm0, [esp+130h+var_a0]
aesenc  xmm0, xmm2
aesenc  xmm0, xmm1
aesenc  xmm7, xmm2
aesenc  xmm6, xmm2
movaps  xmm2, xmm0
movaps  xmm0, [esp+130h+var_30]
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, [esp+130h+var_f0]
aesenc  xmm7, xmm1
aesenc  xmm6, xmm1
movaps  xmm5, xmm6
pxor    xmm5, xmm7
movaps  [esp+130h+var_20], xmm5
movaps  xmm5, xmm3
pxor    xmm5, xmm4
movaps  [esp+130h+var_60], xmm5
aesenc  xmm0, [esp+130h+var_e0]
aesenc  xmm0, [esp+130h+var_d0]
aesenc  xmm0, [esp+130h+var_c0]
aesenc  xmm0, [esp+130h+var_a0]
aesenc  xmm0, [esp+130h+var_70]
aesenc  xmm0, xmm1
movaps  xmm1, xmm0
movaps  xmm0, [esp+130h+var_b0]
movaps  [esp+130h+var_b0], xmm7
movaps  xmm7, [esp+130h+var_90]
pxor    xmm7, xmm6
movaps  xmm6, xmm4
pxor    xmm6, [esp+130h+var_90]
movaps  xmm4, xmm2
movaps  [esp+130h+var_10], xmm7
pxor    xmm4, xmm3
movaps  [esp+130h+var_90], xmm6
movaps  xmm3, xmm1
movaps  [esp+130h+var_50], xmm4
pxor    xmm3, xmm2
movaps  [esp+130h+var_40], xmm3
aesenc  xmm0, [esp+130h+var_120]
aesenc  xmm0, [esp+130h+var_110]
aesenc  xmm0, [esp+130h+var_100]
aesenc  xmm0, [esp+130h+var_f0]
aesenc  xmm0, [esp+130h+var_e0]
aesenc  xmm0, [esp+130h+var_d0]
aesenc  xmm0, [esp+130h+var_c0]
aesenc  xmm0, [esp+130h+var_a0]
aesenc  xmm0, [esp+130h+var_70]
aesenc  xmm0, [esp+130h+var_80]
movaps  xmm2, xmm0
pxor    xmm2, xmm1
movaps  xmm1, [esp+130h+var_b0]
movaps  [esp+130h+var_30], xmm2
pxor    xmm1, xmm0
movaps  [esp+130h+var_b0], xmm1
sub     eax, 1
jnz     loc_37a82ac0
movaps  xmm0, [esp+130h+var_20]
movups  xmmword ptr [edi+40h], xmm0
movups  xmmword ptr [edi+50h], xmm7
movups  xmmword ptr [edi+60h], xmm6
movups  xmmword ptr [edi+70h], xmm5
movups  xmmword ptr [edi+80h], xmm4
movups  xmmword ptr [edi+90h], xmm3
movups  xmmword ptr [edi+0a0h], xmm2
movups  xmmword ptr [edi+0b0h], xmm1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
sbb     [edi+ebx*8-20239495h], ebx
push    ss
rcr     byte ptr [ebp+77h], cl
inc     esi
inc     ebx
clc
xchg    eax, ebx
cmp     eax, 0c3d13c30h
and     ebp, [ebx]
dec     ebx
and     [ecx+40h], bh
mov     ch, 33h
push    eax
adc     ds:0f64965dbh, esp
lodsb
dec     edi
dec     ebp
retf    7db5h
sbb     [edi+edi*8], cl
adc     eax, [esi-7a67bb21h]
daa
pop     ebp
or      al, 95h
add     eax, 0dfd68ab7h
rep retn 2cdeh
jz      short loc_37a83ebc
or      al, 50h
call    near ptr 0b936380eh
pop     ecx
pop     ds
or      dh, bh
dec     ebx
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 20h
movups  xmm1, xmmword ptr [ecx]
movups  xmm0, xmmword ptr [ecx+10h]
lea     ecx, [esp+20h+var_20]
mov     eax, [ebp+arg_0]
movups  xmmword ptr [edx], xmm1
lea     edx, [esp+20h+var_10]
movaps  [esp+20h+var_20], xmm1
movaps  [esp+20h+var_10], xmm0
movups  xmmword ptr [eax], xmm0
call    loc_37a85c80
mov     eax, [ebp+arg_4]
movaps  xmm0, [esp+20h+var_20]
movups  xmmword ptr [eax], xmm0
mov     eax, [ebp+arg_8]
movaps  xmm0, [esp+20h+var_10]
movups  xmmword ptr [eax], xmm0
call    sub_37a85e30
mov     eax, [ebp+arg_c]
movaps  xmm0, [esp+20h+var_20]
movups  xmmword ptr [eax], xmm0
mov     eax, [ebp+arg_10]
movaps  xmm0, [esp+20h+var_10]
movups  xmmword ptr [eax], xmm0
call    sub_37a85fe0
mov     eax, [ebp+arg_14]
movaps  xmm0, [esp+20h+var_20]
movups  xmmword ptr [eax], xmm0
mov     eax, [ebp+arg_18]
movaps  xmm0, [esp+20h+var_10]
movups  xmmword ptr [eax], xmm0
call    loc_37a86190
mov     eax, [ebp+arg_1c]
movaps  xmm0, [esp+20h+var_20]
movups  xmmword ptr [eax], xmm0
mov     eax, [ebp+arg_20]
movaps  xmm0, [esp+20h+var_10]
movups  xmmword ptr [eax], xmm0
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 20h
movups  xmm1, xmmword ptr [ecx]
mov     eax, [ebp+arg_0]
movups  xmm0, xmmword ptr [ecx+10h]
lea     ecx, [esp+20h+var_20]
movups  xmmword ptr [edx], xmm1
lea     edx, [esp+20h+var_10]
movaps  [esp+20h+var_20], xmm1
movaps  [esp+20h+var_10], xmm0
movups  xmmword ptr [eax], xmm0
call    loc_37a85b40
mov     eax, [ebp+arg_4]
lea     edx, [esp+20h+var_10]
movaps  xmm0, [esp+20h+var_20]
lea     ecx, [esp+20h+var_20]
movups  xmmword ptr [eax], xmm0
mov     eax, [ebp+arg_8]
movaps  xmm0, [esp+20h+var_10]
movups  xmmword ptr [eax], xmm0
call    sub_37a85cf0
mov     eax, [ebp+arg_c]
lea     edx, [esp+20h+var_10]
movaps  xmm0, [esp+20h+var_20]
lea     ecx, [esp+20h+var_20]
movups  xmmword ptr [eax], xmm0
mov     eax, [ebp+arg_10]
movaps  xmm0, [esp+20h+var_10]
movups  xmmword ptr [eax], xmm0
call    near ptr sub_37a85ea0
mov     eax, [ebp+arg_14]
lea     edx, [esp+1ch+var_10+4]
movaps  xmm0, [esp+1ch+var_20+4]
lea     ecx, [esp+1ch+var_20+4]
movups  xmmword ptr [eax], xmm0
mov     eax, [ebp+arg_18]
movaps  xmm0, [esp+1ch+var_10+4]
movups  xmmword ptr [eax], xmm0
call    sub_37a86050
mov     eax, [ebp+24h]
movaps  xmm0, xmmword ptr [esp]
movups  xmmword ptr [eax], xmm0
mov     eax, [ebp+28h]
movaps  xmm0, xmmword ptr [esp+10h]
movups  xmmword ptr [eax], xmm0
mov     esp, ebp
pop     ebp
retn
enter   690bh, 4dh
cmp     al, 55h
jno     short near ptr loc_37a85b85+1
add     eax, 1434633dh
xchg    eax, ebx
cli
fisubr  word ptr [ebx+7f0b6eech]
call    far ptr 0d5a3h:0d33ee2d5h
adc     edi, eax
mov     al, 0deh
das
push    ebx
and     eax, 296dca82h
add     ebx, [ebx-73h]
xchg    eax, ebx
movsb
stc
dec     edi
adc     dh, [edx+ebp*2+73h]
add     eax, 0fb5887bdh
dec     edi
mov     ebp, 7f627fb4h
cmp     [ebx-7c6184fch], bh
bsf     ebx, [bp+di+5b4dh]
add     dh, [esp]
sub     [eax], ah
int     23h
in      al, 3dh
outsb
shr     dword ptr [ecx-0ah], 1
xchg    eax, esi
inc     esp
adc     edi, [eax-1bh]
into
inc     edx
push    ecx
push    ebx
add     eax, 333934aah
imul    ebx, [esi], -0dh
adc     edi, [ebp+67428fcbh]
jnb     short loc_37a85b9e
jge     short loc_37a85c26
jnz     short loc_37a85c22
sahf
pop     eax
adc     al, 7ah
out     0, eax
hlt
lock cwde
jnp     short loc_37a85c22
pop     edi
pop     es
pop     ecx
lock push 3c4a2258h
retn    0a675h
push    cs
outsd
nop
sub     ch, bh
push    ebx
mov     ebx, edx
push    esi
push    edi
mov     edi, ecx
movups  xmm6, xmmword ptr [ebx]
pshufd  xmm0, xmm6, 55h
movd    ecx, xmm0
pshufd  xmm0, xmm6, 0ffh
movups  xmm5, xmmword ptr [edi]
mov     eax, ecx
pslldq  xmm5, 4
shr     eax, 10h
movaps  xmm4, xmm5
movzx   eax, al
pxor    xmm4, xmmword ptr [edi]
pslldq  xmm5, 4
movzx   esi, ds:byte_37aff440[eax]
mov     eax, ecx
shr     eax, 18h
movzx   eax, ds:byte_37aff440[eax]
shl     eax, 8
or      esi, eax
mov     eax, ecx
shr     eax, 8
movzx   eax, al
shl     esi, 8
movzx   eax, ds:byte_37aff440[eax]
or      esi, eax
movzx   eax, cl
movd    ecx, xmm0
shl     esi, 8
movzx   eax, ds:byte_37aff440[eax]
or      esi, eax
mov     eax, ecx
shr     eax, 10h
movzx   eax, al
movd    xmm2, esi
movzx   edx, ds:byte_37aff440[eax]
mov     eax, ecx
shr     eax, 18h
movzx   eax, ds:byte_37aff440[eax]
shl     eax, 8
or      edx, eax
mov     eax, ecx
shr     eax, 8
movzx   eax, al
shl     edx, 8
movzx   eax, ds:byte_37aff440[eax]
or      edx, eax
movzx   eax, cl
shl     edx, 8
movzx   eax, ds:byte_37aff440[eax]
or      edx, eax
mov     eax, esi
mov     ecx, edx
ror     eax, 8
ror     ecx, 8
xor     eax, 2
xor     ecx, 2
movd    xmm0, edx
punpckldq xmm2, xmm0
movd    xmm1, eax
movd    xmm3, ecx
punpckldq xmm1, xmm3
punpckldq xmm2, xmm1
movaps  xmm1, xmm5
pxor    xmm1, xmm4
pslldq  xmm5, 4
pshufd  xmm0, xmm2, 0ffh
pxor    xmm1, xmm5
pxor    xmm0, xmm1
movups  xmmword ptr [edi], xmm0
call    loc_37a86200
movaps  xmm2, xmm6
pshufd  xmm3, xmm0, 0aah
pslldq  xmm2, 4
movaps  xmm1, xmm2
pslldq  xmm2, 4
pxor    xmm1, xmm6
movaps  xmm0, xmm2
pxor    xmm0, xmm1
pslldq  xmm2, 4
pxor    xmm0, xmm2
pop     edi
pxor    xmm0, xmm3
pop     esi
movups  xmmword ptr [ebx], xmm0
pop     ebx
retn
movups  xmm2, xmmword ptr [ecx]
movups  xmm3, xmmword ptr [edx]
pslldq  xmm2, 4
movaps  xmm1, xmm2
pslldq  xmm2, 4
pxor    xmm1, xmmword ptr [ecx]
movaps  xmm4, xmm2
pxor    xmm4, xmm1
pslldq  xmm2, 4
pxor    xmm4, xmm2
movaps  xmm2, xmm3
aeskeygenassist xmm0, xmm3, 2
pshufd  xmm0, xmm0, 0ffh
pxor    xmm4, xmm0
pslldq  xmm2, 4
movaps  xmm0, xmm2
movups  xmmword ptr [ecx], xmm4
pslldq  xmm2, 4
pxor    xmm0, xmm3
movaps  xmm1, xmm2
pslldq  xmm2, 4
pxor    xmm1, xmm0
aeskeygenassist xmm0, xmm4, 0
pxor    xmm1, xmm2
pshufd  xmm0, xmm0, 0aah
pxor    xmm1, xmm0
movups  xmmword ptr [edx], xmm1
retn
and     al, 4bh
pop     eax
or      eax, 0b9f19983h
dec     edi
inc     ebp
and     al, 0e7h
mov     al, 0e1h
lodsd
dec     ebp
and     al, al
adc     ch, [esi-6bh]
loop    loc_37a85e89
cmpsd
scasd
mov     gs, [esp+eax*2-4+var_3d51ad45]
and     edx, [eax+eax*4]
out     dx, al
and     eax, 9324cba8h
enter   75a5h, 3dh
and     esp, [ebx+edi*8+7dh]
rcr     dword ptr [edi], cl
sub     ecx, edi
or      al, 0ebh
retf
movups  xmm2, xmmword ptr [ecx]
movups  xmm3, xmmword ptr [edx]
pslldq  xmm2, 4
movaps  xmm1, xmm2
pslldq  xmm2, 4
pxor    xmm1, xmmword ptr [ecx]
movaps  xmm4, xmm2
pxor    xmm4, xmm1
pslldq  xmm2, 4
pxor    xmm4, xmm2
movaps  xmm2, xmm3
aeskeygenassist xmm0, xmm3, 4
pshufd  xmm0, xmm0, 0ffh
pxor    xmm4, xmm0
pslldq  xmm2, 4
movaps  xmm0, xmm2
movups  xmmword ptr [ecx], xmm4
pslldq  xmm2, 4
pxor    xmm0, xmm3
movaps  xmm1, xmm2
pslldq  xmm2, 4
pxor    xmm1, xmm0
aeskeygenassist xmm0, xmm4, 0
pxor    xmm1, xmm2
pshufd  xmm0, xmm0, 0aah
pxor    xmm1, xmm0
movups  xmmword ptr [edx], xmm1
retn
xchg    eax, ebp
xchg    al, bl
push    gs
mov     dl, 32h
hlt
int     3
mov     edx, 0b8a438c1h
xor     [ebx+edx*8+6fh], bl
dec     esp
mov     ebp, 25199573h
in      al, dx
xrelease xchg    eax, esi
cmpsb
in      eax, 0d1h
rcr     byte ptr [edx-5620dd49h], 0c5h
mov     bl, ah
adc     [ebp+43h], dl
add     al, 8
and     eax, 0a333596eh
bound   ebx, [edx-6bd4df79h]
jo      short loc_37a860f4
sahf
sbb     al, 5dh
dec     esi
pop     eax
pop     eax
aad     70h
imul    dword ptr [edi-5f866159h]
imul    byte ptr [esp+esi*2-77b0a0f9h]
rol     dword ptr [edi-26b4d4d9h], cl
dec     edx
jp      short near ptr loc_37a8608e+1
add     al, ch
in      al, dx
cmp     [ecx-3e0b1770h], cl
inc     eax
jg      short loc_37a86083
sal     ebx, 1
iret
inc     byte ptr [esp+550fe3bh]
xor     eax, 7074a659h
or      ch, bl
mov     cl, 1fh
movsd
sub     al, 39h
out     0aah, al
pop     edi
push    esp
dec     ecx
sal     byte ptr [esi+16h], cl
inc     ecx
das
pop     ss
jnb     short loc_37a860d4
push    esi
mov     [ebx+3ah], dl
pusha
push    esi
adc     bl, al
jg      short near ptr loc_37a861a8+1
aad     0afh
call    far ptr 71d2h:0c6f73da0h
fidivr  dword ptr [esi]
mov     fs, word ptr [esi+73h]
add     ch, [eax-5a23f1a3h]
jo      short near ptr loc_37a8615b+6
pop     esp
outsd
sti
int     59h
jb      short near ptr loc_37a86102+1
lea     esi, [ecx-17fd75abh]
dec     eax
imul    edi, [esi+0c12f469h], -3
lahf
sal     byte ptr [esi-0c758254h], cl
add     ebx, [esi]
rcl     dword ptr [edi-33h], 1
add     bh, [ebp-37h]
icebp
xlat
jge     short loc_37a86146
cmpsb
lea     eax, [esp-80h]
mov     esp, 6651c103h
int     3
jp      short loc_37a8620e
into
fninit
or      ecx, 0f0841acah
das
xor     al, 0d1h
mov     al, 26h
movsb
rcpps   xmm5, xmmword ptr ds:4cbd070h
sbb     al, 5
dec     dword ptr [edi+19ec233h]
push    esi
jg      short near ptr loc_37a861a8+3
cmp     ecx, [ebx+7eh]
clc
mov     ch, 1dh
inc     edx
nop
jns     short near ptr 622eh
out     dx, eax
mov     al, 3ch
inc     ebx
xor     [eax], esp
cmc
out     0d9h, eax
setalc
cmpsb
pusha
pop     ss
jp      short loc_37a86197
out     85h, al
sub     esp, 54h
push    ebx
push    ebp
mov     ebp, ecx
lea     ecx, [esp+5ch+var_c]
push    esi
push    edi
mov     [esp+64h+var_50], ebp
call    near ptr dword_37a862d0
push    0
push    0f4240h
push    dword ptr [eax+4]
push    dword ptr [eax]
call    __alldiv
mov     ecx, [esp+64h+arg_0]
xorps   xmm0, xmm0
mov     [esp+64h+var_1c], eax
mov     ebx, 1
mov     eax, [ebp+0ch]
movlpd  [esp+64h+var_2c], xmm0
movlpd  [esp+64h+var_3c], xmm0
mov     edi, dword ptr [esp+64h+var_3c+4]
mov     eax, [eax+ecx*4]
mov     [esp+64h+var_20], eax
mov     eax, [ebp+14h]
mov     [esp+64h+var_18], edx
mov     edx, dword ptr [esp+64h+var_2c+4]
movlpd  [esp+64h+var_44], xmm0
mov     esi, [eax+ecx*4]
mov     ecx, dword ptr [esp+64h+var_2c]
mov     eax, dword ptr [esp+64h+var_3c]
mov     ebp, dword ptr [esp+64h+var_44+4]
movlpd  [esp+64h+var_c], xmm0
mov     [esp+64h+var_30], edx
mov     edx, dword ptr [esp+64h+var_c+4]
mov     dword ptr [esp+64h+var_2c], ecx
mov     ecx, dword ptr [esp+64h+var_c]
mov     [esp+64h+var_48], edi
mov     edi, dword ptr [esp+64h+var_44]
mov     dword ptr [esp+64h+var_14], esi
mov     [esp+64h+var_4c], eax
mov     [esp+64h+var_54], edi
mov     dword ptr [esp+64h+var_44], edx
mov     dword ptr [esp+64h+var_3c], ecx
mov     ecx, [esp+64h+var_20]
sub     ecx, ebx
and     ecx, 0fffh
mov     edx, [esi+ecx*8]
mov     eax, edx
mov     esi, [esi+ecx*8+4]
or      eax, esi
jz      short loc_37a86499
mov     eax, edi
or      eax, ebp
jnz     short loc_37a86445
mov     eax, [esp+64h+var_50]
mov     ebp, esi
mov     edi, [esp+64h+arg_0]
mov     [esp+64h+var_54], edx
mov     eax, [eax+10h]
mov     eax, [eax+edi*4]
mov     edi, [eax+ecx*8]
mov     eax, [eax+ecx*8+4]
mov     dword ptr [esp+64h+var_3c], edi
mov     dword ptr [esp+64h+var_44], eax
mov     edi, [esp+64h+var_1c]
mov     eax, [esp+64h+var_18]
sub     edi, edx
sbb     eax, esi
test    eax, eax
ja      short loc_37a864ba
jb      short loc_37a8645f
cmp     edi, 9c4h
ja      short loc_37a864ba
mov     eax, [esp+64h+var_50]
inc     ebx
mov     edi, [esp+64h+var_54]
mov     [esp+64h+var_4c], edx
mov     edx, [esp+64h+arg_0]
mov     eax, [eax+10h]
mov     [esp+64h+var_48], esi
mov     esi, dword ptr [esp+64h+var_14]
mov     eax, [eax+edx*4]
mov     edx, [eax+ecx*8]
mov     eax, [eax+ecx*8+4]
mov     dword ptr [esp+64h+var_2c], edx
mov     [esp+64h+var_30], eax
cmp     ebx, 1000h
jb      loc_37a86403
push    offset byte_37afe7b2
call    sub_37ac27a8
fstp    [esp+68h+var_c]
movsd   xmm0, [esp+68h+var_c]
add     esp, 4
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 54h
retn    8
mov     ebx, [esp+64h+var_4c]
mov     eax, ebx
mov     edi, [esp+64h+var_48]
or      eax, edi
jz      short loc_37a86499
mov     esi, [esp+64h+var_54]
mov     eax, esi
or      eax, ebp
jz      short loc_37a86499
mov     ecx, esi
mov     eax, ebp
sub     ecx, ebx
sbb     eax, edi
or      ecx, eax
jnz     short loc_37a864ff
push    offset byte_37afe7b3
call    sub_37ac27a8
fstp    [esp+68h+var_c]
movsd   xmm0, [esp+68h+var_c]
add     esp, 4
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 54h
retn    8
mov     edx, dword ptr [esp+64h+var_44]
mov     ecx, dword ptr [esp+64h+var_3c]
call    __ultod3
mov     edx, [esp+64h+var_30]
mov     ecx, dword ptr [esp+64h+var_2c]
movsd   [esp+64h+var_14], xmm0
call    __ultod3
movsd   xmm1, [esp+64h+var_14]
mov     edx, ebp
subsd   xmm1, xmm0
mov     ecx, esi
movsd   [esp+64h+var_14], xmm1
call    __ultod3
mov     edx, edi
movsd   [esp+64h+var_c], xmm0
mov     ecx, ebx
call    __ultod3
movsd   xmm1, [esp+64h+var_c]
subsd   xmm1, xmm0
movsd   xmm0, [esp+64h+var_14]
pop     edi
pop     esi
pop     ebp
pop     ebx
divsd   xmm1, ds:qword_37b03b80
divsd   xmm0, xmm1
add     esp, 54h
retn    8
lea     eax, [ecx+20h]
push    0
push    eax
call    sub_37a14dd0
add     esp, 8
retn
lea     eax, [ecx+28h]
push    0
push    eax
call    sub_37a14dd0
add     esp, 8
retn
push    ebx
mov     ebx, esp
sub     esp, 8
and     esp, 0fffffff0h
add     esp, 4
push    ebp
mov     ebp, [ebx+4]
mov     [esp+4], ebp
mov     ebp, esp
push    0ffffffffh
push    offset loc_37adf548
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ebx
sub     esp, 2ch
push    esi
push    dword ptr [ebx+8]
mov     esi, ecx
mov     [ebp-14h], esi
call    sub_37a897d0
mov     dword ptr [ebp-4], 0
lea     ecx, [esi+0c0h]
mov     dword ptr [esi], offset off_37b03ac8
call    loc_37a1f4f0
lea     ecx, [esi+230h]
call    loc_37a1f4f0
mov     ecx, [esi+40h]
mov     eax, [ecx]
cmp     eax, offset dword_37b035bc
jnz     short loc_37a8666f
mov     eax, [ecx+4]
lea     edx, [ebp-30h]
push    1
push    edx
lea     ecx, [esi+50h]
mov     edx, eax
call    sub_37a183f0
mov     ecx, [ebp-0ch]
add     esp, 8
movups  xmm0, xmmword ptr [eax]
mov     eax, esi
movups  xmmword ptr [esi+10h], xmm0
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
mov     esp, ebx
pop     ebx
retn    4
mov     eax, [eax+4]
call    eax
jmp     short loc_37a8663f
push    esi
mov     esi, ecx
mov     ecx, [esi+40h]
mov     eax, [ecx]
cmp     eax, offset dword_37b035bc
jnz     loc_37a867ab
mov     eax, [ecx+4]
test    eax, eax
jnz     loc_37a8672a
push    offset dword_37b00610
push    eax
mov     ecx, esi
call    sub_37a86b90
test    al, al
jz      loc_37a867a7
push    offset dword_37b00a38
push    1
mov     ecx, esi
call    sub_37a86b90
test    al, al
jz      loc_37a867a7
push    offset dword_37b00570
push    8
mov     ecx, esi
call    sub_37a86b90
test    al, al
jz      loc_37a867a7
push    offset dword_37b00b78
push    3
mov     ecx, esi
call    sub_37a86b90
test    al, al
jz      loc_37a867a7
push    offset dword_37b00c18
push    4
mov     ecx, esi
call    sub_37a86b90
test    al, al
jz      loc_37a867a7
push    offset dword_37b00ad8
push    6
mov     ecx, esi
call    sub_37a86b90
test    al, al
jz      loc_37a867a7
push    offset dword_37b00df8
push    7
jmp     short loc_37a86798
mov     ecx, [esi+40h]
mov     eax, [ecx]
cmp     eax, offset dword_37b035bc
jnz     short loc_37a867b3
mov     eax, [ecx+4]
cmp     eax, 1
jnz     short loc_37a86759
push    offset dword_37b00d58
push    0
mov     ecx, esi
call    sub_37a86b90
test    al, al
jz      short loc_37a867a7
push    offset dword_37b00750
push    1
jmp     short loc_37a86798
mov     ecx, [esi+40h]
mov     eax, [ecx]
cmp     eax, offset dword_37b035bc
jnz     short loc_37a867b8
mov     eax, [ecx+4]
cmp     eax, 2
jnz     short loc_37a867a7
push    offset dword_37b006b0
push    0
mov     ecx, esi
call    sub_37a86b90
test    al, al
jz      short loc_37a867a7
push    offset dword_37b00998
push    5
mov     ecx, esi
call    sub_37a86b90
test    al, al
jz      short loc_37a867a7
push    offset dword_37b00cb8
push    2
mov     ecx, esi
call    sub_37a86b90
test    al, al
jz      short loc_37a867a7
mov     al, 1
pop     esi
retn
xor     al, al
pop     esi
retn
call    dword ptr [eax+4]
jmp     loc_37a86696
call    dword ptr [eax+4]
jmp     short loc_37a86739
call    dword ptr [eax+4]
jmp     short loc_37a86768
retf
mov     eax, [esp+arg_0]
push    esi
mov     esi, [ecx+40h]
mov     edx, [esi+4]
lea     eax, [eax+edx*8]
add     eax, edx
lea     edx, [eax+eax*4]
mov     eax, [esi+8]
lea     eax, [eax+edx*2]
mov     edx, ds:funcs_37a878c4[eax*4]
test    edx, edx
jz      short loc_37a86beb
lea     eax, [ecx+50h]
push    eax
lea     esi, [ecx+340h]
push    esi
push    4ch
push    offset dword_37b007f0
call    edx
mov     ecx, [esp+14h+arg_4]
add     esp, 10h
mov     edx, 1ch
mov     eax, [esi]
cmp     eax, [ecx]
jnz     short loc_37a86beb
add     esi, 4
add     ecx, 4
sub     edx, 4
jnb     short loc_37a86bd4
mov     al, 1
pop     esi
retn    8
xor     al, al
pop     esi
retn    8
cmc
icebp
fimul   dword ptr [eax+2a8812b5h]
inc     esp
dec     edi
pushf
adc     eax, edx
popf
dec     ebx
cmp     bl, [eax+7dh]
or      al, [ebp-7eh]
retf
mov     dh, 61h
add     [eax-6c407098h], edi
retn
test    edx, edx
jz      short loc_37a8738b
lea     eax, [ecx+50h]
push    eax
lea     esi, [ecx+400h]
push    esi
push    4ch
push    offset dword_37b007f0
call    edx
mov     ecx, [esp+1ch]
add     esp, 10h
mov     edx, 3ch
mov     eax, [esi]
cmp     eax, [ecx]
jnz     short loc_37a8738b
add     esi, 4
add     ecx, 4
sub     edx, 4
jnb     short loc_37a87374
mov     al, 1
pop     esi
retn    8
xor     al, al
pop     esi
retn    8
aam     0dfh
ror     byte ptr [ebp+688eef8dh], 0cbh
retn
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
sub     esp, 0d4h
push    ebx
push    esi
push    edi
mov     edi, ecx
push    0
push    offset dword_37b73330
call    sub_37a14dd0
add     esp, 8
test    edx, edx
jnz     short loc_37a87790
test    eax, eax
jz      loc_37a87b03
nop     dword ptr [eax+00h]
mov     eax, dword_37b732bc
cmp     eax, 1
jz      short loc_37a877c0
cmp     dword_37b684c4, 0
mov     eax, dword_37b731f0
jnz     short loc_37a877ad
mov     eax, [eax+3ch]
jmp     short loc_37a877b0
mov     eax, [eax+38h]
cmp     [edi+4], eax
jb      loc_37a87856
nop     dword ptr [eax+00000000h]
call    __xtime_get_ticks
add     eax, 1e8480h
push    0
push    64h
adc     edx, 0
push    edx
push    eax
call    __allmul
push    0
push    3b9aca00h
mov     esi, eax
push    edx
push    esi
call    __alldiv
mov     [esp+20h], eax
imul    eax, 3b9aca00h
mov     [esp+24h], edx
sub     esi, eax
lea     eax, [esp+40h]
mov     [esp+28h], esi
movaps  xmm0, xmmword ptr [esp+20h]
push    eax
movaps  xmmword ptr [esp+44h], xmm0
call    __thrd_sleep
mov     eax, dword_37b732bc
add     esp, 4
cmp     eax, 1
jz      short loc_37a877c0
cmp     dword_37b684c4, 0
mov     eax, dword_37b731f0
jnz     short loc_37a87830
mov     eax, [eax+3ch]
jmp     short loc_37a87833
mov     eax, [eax+38h]
cmp     [edi+4], eax
jnb     short loc_37a877c0
push    0
push    offset dword_37b73330
call    sub_37a14dd0
add     esp, 8
or      eax, edx
jz      loc_37a87b03
mov     ecx, edi
call    loc_37a87ba0
mov     esi, [edi+38h]
mov     ebx, [edi+3ch]
push    0
push    offset dword_37b73330
call    sub_37a14dd0
add     esp, 8
cmp     eax, esi
jnz     loc_37a87af7
cmp     edx, ebx
jnz     loc_37a87af7
mov     eax, [edi+30h]
and     eax, 7
or      eax, 0
jnz     short loc_37a8788d
mov     ecx, edi
call    sub_37a898c0
mov     edx, [edi+40h]
lea     ebx, [edi+4c0h]
mov     eax, [edx+4]
lea     eax, [eax+eax*8]
add     eax, [edi+434h]
lea     ecx, [eax+eax*4]
mov     eax, [edx+8]
lea     ecx, [eax+ecx*2]
lea     eax, [edi+50h]
push    eax
push    ebx
push    dword ptr [edi+3bch]
lea     eax, [edi+290h]
push    eax
mov     eax, ds:funcs_37a878c4[ecx*4]
call    eax
add     esp, 10h
xor     esi, esi
mov     [esp+14h], esi
nop
mov     eax, [ebx+1ch]
cmp     eax, [edi+3cch]
ja      loc_37a87a22
jb      short loc_37a878f0
mov     eax, [ebx+18h]
cmp     eax, [edi+3c8h]
jnb     loc_37a87a22
movups  xmm0, xmmword ptr [edi+478h]
mov     eax, [edi+3b4h]
mov     [esp+6ch], eax
mov     eax, [edi+3c0h]
movups  xmmword ptr [esp+0a0h], xmm0
mov     [esp+70h], eax
movups  xmm0, xmmword ptr [edi+488h]
mov     eax, [edi+3bch]
imul    eax, esi
movups  xmmword ptr [esp+0b0h], xmm0
push    offset dword_37b73230
movups  xmm0, xmmword ptr [edi+498h]
movups  xmmword ptr [esp+0c4h], xmm0
movups  xmm0, xmmword ptr [edi+4a8h]
mov     eax, [eax+edi+2b7h]
mov     [esp+78h], eax
mov     eax, [edi+430h]
movups  xmmword ptr [esp+0d4h], xmm0
mov     [esp+9ch], eax
movups  xmm0, xmmword ptr [ebx]
mov     eax, [edi+434h]
mov     [esp+0a0h], eax
movups  xmmword ptr [esp+7ch], xmm0
movups  xmm0, xmmword ptr [ebx+10h]
movups  xmmword ptr [esp+8ch], xmm0
call    ds:entercriticalsection
mov     eax, dword_37b733dc
lea     edx, [esp+6ch]
push    edx
mov     [esp+1ch], eax
mov     ecx, [eax+4]
push    ecx
push    eax
mov     [esp+28h], ecx
call    sub_37a8a5f0
mov     edx, dword_37b733e0
mov     ecx, 2108420h
sub     ecx, edx
cmp     ecx, 1
jb      loc_37a87b1c
mov     ecx, [esp+18h]
inc     edx
mov     dword_37b733e0, edx
push    offset dword_37b73230
mov     [ecx+4], eax
mov     ecx, [esp+20h]
mov     [ecx], eax
call    ds:leavecriticalsection
cmp     dword_37b73250, 1
mov     edx, dword_37b7324c
jnz     short loc_37a87a22
mov     ch, 1
mov     esi, offset dword_37b732b8
mov     al, [esi]
mov     cl, al
or      cl, ch
lock cmpxchg [esi], cl
jnz     short loc_37a879f6
test    al, al
jnz     short loc_37a87a1e
push    offset dword_37b73298
push    0
push    0
push    dword ptr [edx+1ch]
call    ds:postqueuedcompletionstatus
test    eax, eax
jz      loc_37a87b0a
mov     esi, [esp+14h]
mov     eax, [edi+3bch]
add     ebx, 20h
imul    eax, esi
inc     esi
mov     [esp+14h], esi
inc     dword ptr [eax+edi+2b7h]
cmp     esi, 3
jb      loc_37a878d0
add     dword ptr [edi+30h], 3
mov     ecx, edi
adc     dword ptr [edi+34h], 0
mov     eax, dword_37b684c4
neg     eax
sbb     eax, eax
neg     eax
inc     eax
push    eax
call    sub_37a89960
mov     eax, dword_37b732bc
cmp     eax, 1
jz      loc_37a87771
cmp     dword_37b684c4, 0
mov     eax, dword_37b731f0
jnz     short loc_37a87a80
mov     eax, [eax+3ch]
jmp     short loc_37a87a83
mov     eax, [eax+38h]
cmp     [edi+4], eax
jnb     loc_37a87771
cmp     dword_37b684c4, 0
jnz     short loc_37a87aed
call    __xtime_get_ticks
add     eax, 0c350h
push    0
push    64h
adc     edx, 0
push    edx
push    eax
call    __allmul
push    0
push    3b9aca00h
mov     esi, eax
push    edx
push    esi
call    __alldiv
mov     [esp+30h], eax
imul    eax, 3b9aca00h
mov     [esp+34h], edx
sub     esi, eax
lea     eax, [esp+50h]
mov     [esp+38h], esi
movaps  xmm0, xmmword ptr [esp+30h]
push    eax
movaps  xmmword ptr [esp+54h], xmm0
call    __thrd_sleep
add     esp, 4
jmp     loc_37a87856
call    __thrd_yield
jmp     loc_37a87856
mov     ecx, edi
call    loc_37a87ba0
jmp     loc_37a87771
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    ds:getlasterror
mov     edx, offset dword_37b6902c
mov     ecx, eax
call    sub_37a958b0
push    offset alistttoolong
call    sub_37ab022c
mov     ds:7e8d5ee2h, eax
jg      short loc_37a87bb8
movsb
and     [edi], dl
pop     ebx
xchg    esi, [ecx]
fimul   dword ptr ds:6eb21037h
push    ebx
lodsb
aaa
fcmove  st, st(2)
mov     edi, 0e2d03ffh
sbb     ebp, [ecx+7ba47282h]
mov     edx, 9bafa502h
cmp     al, 47h
and     [ecx+ecx-6a4e465ch], cl
or      al, 0d2h
cmp     eax, offset dword_37b035bc
jnz     loc_37a87fab
mov     eax, [ecx+4]
test    eax, eax
jnz     loc_37a87f2a
push    offset dword_37b00610
push    eax
mov     ecx, esi
call    loc_37a88390
test    al, al
jz      loc_37a87fa7
push    offset dword_37b00a38
push    1
mov     ecx, esi
call    loc_37a88390
test    al, al
jz      loc_37a87fa7
push    offset dword_37b00570
push    8
mov     ecx, esi
call    loc_37a88390
test    al, al
jz      loc_37a87fa7
push    offset dword_37b00b78
push    3
mov     ecx, esi
call    loc_37a88390
test    al, al
jz      loc_37a87fa7
push    offset dword_37b00c18
push    4
mov     ecx, esi
call    loc_37a88390
test    al, al
jz      loc_37a87fa7
push    offset dword_37b00ad8
push    6
mov     ecx, esi
call    loc_37a88390
test    al, al
jz      loc_37a87fa7
push    offset dword_37b00df8
push    7
jmp     short loc_37a87f98
mov     ecx, [esi+40h]
mov     eax, [ecx]
cmp     eax, offset dword_37b035bc
jnz     short loc_37a87fb3
mov     eax, [ecx+4]
cmp     eax, 1
jnz     short loc_37a87f59
push    offset dword_37b00d58
push    0
mov     ecx, esi
call    loc_37a88390
test    al, al
jz      short loc_37a87fa7
push    offset dword_37b00750
push    1
jmp     short loc_37a87f98
mov     ecx, [esi+40h]
mov     eax, [ecx]
cmp     eax, offset dword_37b035bc
jnz     short loc_37a87fb8
mov     eax, [ecx+4]
cmp     eax, 2
jnz     short loc_37a87fa7
push    offset dword_37b006b0
push    0
mov     ecx, esi
call    loc_37a88390
test    al, al
jz      short loc_37a87fa7
push    offset dword_37b00998
push    5
mov     ecx, esi
call    loc_37a88390
test    al, al
jz      short loc_37a87fa7
push    offset dword_37b00cb8
push    2
mov     ecx, esi
call    loc_37a88390
test    al, al
jz      short loc_37a87fa7
mov     al, 1
pop     esi
retn
xor     al, al
pop     esi
retn
call    dword ptr [eax+4]
jmp     loc_37a87e96
call    dword ptr [eax+4]
jmp     short loc_37a87f39
call    dword ptr [eax+4]
jmp     short loc_37a87f68
xchg    eax, edi
adc     byte ptr [ebp-6432594ah], 0e0h
add     eax, 8887c707h
lodsd
out     dx, al
rcr     dword ptr [edx], 39h
mov     ds:0ca870fc1h, eax
push    edi
push    0d5282dfbh
test    edx, edx
jz      short loc_37a88c7b
lea     eax, [ecx+50h]
push    eax
lea     esi, [ecx+650h]
push    esi
push    4ch
push    offset dword_37b007f0
call    edx
mov     ecx, [esp+1ch]
add     esp, 10h
mov     edx, 9ch
mov     eax, [esi]
cmp     eax, [ecx]
jnz     short loc_37a88c7b
add     esi, 4
add     ecx, 4
sub     edx, 4
jnb     short loc_37a88c64
mov     al, 1
pop     esi
retn    8
xor     al, al
pop     esi
retn    8
inc     eax
add     ebp, esp
sbb     dl, ah
pop     eax
mov     ds:0a3fc2237h, al
mov     esi, 0cfa865dch
push    esi
imul    edx, [edi], 60h
retf
cmp     dword ptr [edi+14h], 0
mov     eax, [edi+10h]
jz      short loc_37a89292
push    8000h
push    0
push    eax
call    ds:virtualfree
jmp     short loc_37a8929b
push    eax
call    j_unknown_libname_64
add     esp, 4
push    ebx
push    esi
lea     esi, [edi+50h]
mov     ebx, 3
push    dword ptr [esi]
call    j_unknown_libname_64
add     esp, 4
lea     esi, [esi+4]
sub     ebx, 1
jnz     short loc_37a892a5
test    byte ptr [esp+10h], 1
pop     esi
mov     dword ptr [edi], offset off_37b03aac
pop     ebx
jz      short loc_37a892d4
push    520h
push    edi
call    sub_37ab1b25
add     esp, 8
mov     eax, edi
pop     edi
retn    4
cmp     dword ptr [edi+14h], 0
mov     eax, [edi+10h]
jz      short loc_37a895b2
push    8000h
push    0
push    eax
call    ds:virtualfree
jmp     short loc_37a895bb
push    eax
call    j_unknown_libname_64
add     esp, 4
push    ebx
push    esi
lea     esi, [edi+50h]
mov     ebx, 5
push    dword ptr [esi]
call    j_unknown_libname_64
add     esp, 4
lea     esi, [esi+4]
sub     ebx, 1
jnz     short loc_37a895c5
test    byte ptr [esp+10h], 1
pop     esi
mov     dword ptr [edi], offset off_37b03aac
pop     ebx
jz      short loc_37a895f4
push    6f0h
push    edi
call    sub_37ab1b25
add     esp, 8
mov     eax, edi
pop     edi
retn    4
push    ebx
push    ebp
push    esi
push    edi
mov     edi, [esp+14h]
mov     ebp, ecx
mov     esi, edi
mov     eax, ebp
sub     esi, ebp
mov     edx, 1e0h
mov     cl, [esi+eax]
lea     eax, [eax+1]
mov     [eax-1], cl
sub     edx, 1
jnz     short loc_37a89615
movzx   eax, byte ptr [edi+1e0h]
lea     esi, [ebp+1e0h]
add     edi, 1e0h
mov     [esi], al
mov     ebx, edi
lea     ecx, [esi+20h]
sub     ebx, esi
mov     edx, 60h
movzx   eax, byte ptr [edi+1]
mov     [esi+1], al
mov     eax, [edi+4]
mov     [esi+4], eax
mov     eax, [edi+8]
mov     [esi+8], eax
mov     eax, [edi+0ch]
mov     [esi+0ch], eax
mov     eax, [edi+10h]
mov     [esi+10h], eax
mov     eax, [edi+14h]
mov     [esi+14h], eax
mov     eax, [edi+18h]
mov     [esi+18h], eax
mov     eax, [edi+1ch]
mov     [esi+1ch], eax
mov     al, [ebx+ecx]
lea     ecx, [ecx+1]
mov     [ecx-1], al
sub     edx, 1
jnz     short loc_37a89675
mov     eax, [edi+80h]
mov     [esi+80h], eax
mov     eax, [edi+84h]
mov     [esi+84h], eax
mov     eax, ebp
movups  xmm0, xmmword ptr [edi+88h]
movups  xmmword ptr [esi+88h], xmm0
movups  xmm0, xmmword ptr [edi+98h]
movups  xmmword ptr [esi+98h], xmm0
movups  xmm0, xmmword ptr [edi+0a8h]
movups  xmmword ptr [esi+0a8h], xmm0
movups  xmm0, xmmword ptr [edi+0b8h]
movups  xmmword ptr [esi+0b8h], xmm0
movups  xmm0, xmmword ptr [edi+0c8h]
movups  xmmword ptr [esi+0c8h], xmm0
movups  xmm0, xmmword ptr [edi+0d8h]
movups  xmmword ptr [esi+0d8h], xmm0
movups  xmm0, xmmword ptr [edi+0e8h]
movups  xmmword ptr [esi+0e8h], xmm0
movups  xmm0, xmmword ptr [edi+0f8h]
pop     edi
movups  xmmword ptr [esi+0f8h], xmm0
pop     esi
pop     ebp
pop     ebx
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
push    ecx
mov     eax, [ebp+14h]
push    ebx
push    esi
push    edi
sub     eax, 0
jz      short loc_37a89798
sub     eax, 3
jz      short loc_37a8976b
sub     eax, 2
jnz     loc_37a897c6
mov     ecx, [ebp+10h]
mov     eax, [ebp+8]
mov     esi, [eax]
mov     edi, [eax+4]
mov     eax, esi
mov     [esp+0ch], edi
mov     edx, edi
mov     ebx, [ebp+0ch]
mov     edi, [ebp+8]
lock cmpxchg8b qword ptr [edi]
mov     edi, [esp+0ch]
cmp     esi, eax
jnz     short loc_37a89743
cmp     edi, edx
jnz     short loc_37a89743
jmp     short loc_37a897c6
mov     ecx, [ebp+10h]
xchg    ax, ax
mov     eax, [ebp+8]
mov     esi, [eax]
mov     edi, [eax+4]
mov     eax, esi
mov     [esp+0ch], edi
mov     edx, edi
mov     ebx, [ebp+0ch]
mov     edi, [ebp+8]
lock cmpxchg8b qword ptr [edi]
mov     edi, [esp+0ch]
cmp     esi, eax
jnz     short loc_37a89770
cmp     edi, edx
jnz     short loc_37a89770
jmp     short loc_37a897c6
mov     ecx, [ebp+10h]
nop     dword ptr [eax+eax+00h]
mov     eax, [ebp+8]
mov     esi, [eax]
mov     edi, [eax+4]
mov     eax, esi
mov     [esp+0ch], edi
mov     edx, edi
mov     ebx, [ebp+0ch]
mov     edi, [ebp+8]
lock cmpxchg8b qword ptr [edi]
mov     edi, [esp+0ch]
cmp     esi, eax
jnz     short loc_37a897a0
cmp     edi, edx
jnz     short loc_37a897a0
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a897d0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
push    esi
mov     esi, ecx
push    edi
mov     [ebp+var_10], esi
mov     edi, [ebp+arg_0]
mov     [ebp+var_4], 0
mov     dword ptr [esi], offset off_37b03ae4
mov     ecx, [edi+10h]
mov     eax, [ecx]
cmp     eax, offset dword_37b035bc
jnz     short loc_37a89886
mov     eax, [ecx+24h]
mov     [esi+4], eax
mov     eax, [edi+4]
mov     [esi+8], eax
mov     eax, [edi+8]
mov     [esi+0ch], eax
mov     dword ptr [esi+20h], 0
mov     dword ptr [esi+24h], 0
mov     dword ptr [esi+28h], 0
mov     dword ptr [esi+2ch], 0
mov     dword ptr [esi+30h], 0
mov     dword ptr [esi+34h], 0
mov     dword ptr [esi+38h], 0
mov     dword ptr [esi+3ch], 0
mov     eax, [edi+10h]
push    0ffffffffh
mov     [esi+40h], eax
mov     dword ptr [esi+44h], 1
call    ds:getcurrentthread
push    eax
call    ds:setthreadpriority
mov     ecx, [ebp+var_c]
mov     eax, esi
pop     edi
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    4
call    dword ptr [eax+18h]
jmp     short loc_37a8980f
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 20h
push    ebx
push    ebp
mov     ebx, ecx
lea     ecx, [esp+28h+var_8]
push    esi
push    edi
mov     [esp+30h+var_14], ebx
call    near ptr dword_37a862d0
push    0
push    0f4240h
push    dword ptr [eax+4]
push    dword ptr [eax]
call    __alldiv
mov     ecx, [ebx+30h]
lea     ebp, [ebx+20h]
mov     [esp+30h+var_10], eax
mov     eax, [ebx+34h]
mov     [esp+30h+var_c], edx
mov     [esp+30h+var_1c], ecx
mov     [esp+30h+var_18], eax
mov     esi, [ebp+0]
mov     eax, esi
mov     edi, [ebp+4]
mov     edx, edi
mov     ebx, ecx
mov     ecx, [esp+30h+var_18]
lock cmpxchg8b qword ptr [ebp+0]
mov     ecx, [esp+30h+var_1c]
cmp     esi, eax
jnz     short loc_37a89906
cmp     edi, edx
jnz     short loc_37a89906
mov     ebp, [esp+30h+var_14]
add     ebp, 28h
xchg    ax, ax
mov     esi, [ebp+0]
mov     eax, esi
mov     edi, [ebp+4]
mov     edx, edi
mov     ebx, [esp+30h+var_10]
mov     ecx, [esp+30h+var_c]
lock cmpxchg8b qword ptr [ebp+0]
cmp     esi, eax
jnz     short loc_37a89930
cmp     edi, edx
jnz     short loc_37a89930
pop     edi
pop     esi
pop     ebp
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [esp+arg_0]
cmp     edx, [ecx+44h]
jz      locret_37a899ed
mov     [ecx+44h], edx
cmp     edx, 0ffffffffh
jz      short locret_37a899ed
dec     edx
mov     eax, 0fffffff1h
cmp     edx, 4
ja      short def_37a89980
jmp     ds:jpt_37a89980[edx*4]
or      eax, 0ffffffffh
push    eax
call    ds:getcurrentthread
push    eax
call    ds:setthreadpriority
retn    4
xor     eax, eax
push    eax
call    ds:getcurrentthread
push    eax
call    ds:setthreadpriority
retn    4
mov     eax, 1
push    eax
call    ds:getcurrentthread
push    eax
call    ds:setthreadpriority
retn    4
mov     eax, 2
push    eax
call    ds:getcurrentthread
push    eax
call    ds:setthreadpriority
retn    4
mov     eax, 0fh
push    eax
call    ds:getcurrentthread
push    eax
call    ds:setthreadpriority
retn    4
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 18h
mov     eax, dword_37b733d4
push    ebx
mov     ebx, dword_37b733d0
mov     [esp+14h], eax
push    ebp
push    esi
push    edi
cmp     ebx, eax
jz      loc_37a8a355
mov     edi, [ebx]
mov     esi, [edi]
test    esi, esi
jz      loc_37a8a401
mov     eax, [esi]
mov     eax, [eax+10h]
cmp     eax, offset sub_37a865c0
jnz     loc_37a8a409
lea     eax, [esi+28h]
push    0
push    eax
call    sub_37a14dd0
add     esp, 8
mov     [esp+10h], eax
mov     eax, [esi]
mov     [esp+18h], edx
mov     eax, [eax+0ch]
cmp     eax, offset sub_37a865b0
jnz     loc_37a8a412
lea     eax, [esi+20h]
push    0
push    eax
call    sub_37a14dd0
add     esp, 8
mov     ecx, [edi+10h]
mov     esi, eax
mov     ebp, edx
mov     eax, [ecx]
cmp     eax, offset dword_37b035bc
jnz     loc_37a8a41b
mov     edx, [ecx+24h]
mov     edi, dword_37b7322c
add     ebx, 4
mov     ecx, [edi+0ch]
mov     eax, [edi+10h]
mov     ecx, [ecx+edx*4]
mov     eax, [eax+edx*4]
mov     [eax+ecx*8], esi
mov     esi, [esp+10h]
mov     [eax+ecx*8+4], ebp
mov     eax, [edi+14h]
mov     eax, [eax+edx*4]
mov     [eax+ecx*8], esi
mov     esi, [esp+18h]
mov     [eax+ecx*8+4], esi
inc     ecx
mov     eax, [edi+0ch]
and     ecx, 0fffh
mov     [eax+edx*4], ecx
cmp     ebx, [esp+20h]
jnz     loc_37a8a2a4
jmp     short loc_37a8a35b
mov     edi, dword_37b7322c
mov     eax, dword_37b732c0
mov     ecx, eax
and     ecx, 0fh
add     eax, 1
mov     dword_37b732c0, eax
adc     dword_37b732c4, 0
or      ecx, 0
jnz     loc_37a8a401
xor     esi, esi
xorps   xmm0, xmm0
movsd   qword ptr [esp+20h], xmm0
cmp     [edi+8], esi
jle     short loc_37a8a3d8
nop     dword ptr [eax]
push    ecx
push    esi
mov     ecx, edi
call    sub_37a86360
lea     eax, [esp+18h]
movsd   qword ptr [esp+10h], xmm0
push    eax
movsd   qword ptr [esp+1ch], xmm0
call    __dtest
add     esp, 4
cmp     ax, 0ffffh
jnz     short loc_37a8a3cc
movsd   xmm0, qword ptr [esp+10h]
addsd   xmm0, qword ptr [esp+20h]
movsd   qword ptr [esp+20h], xmm0
jmp     short loc_37a8a3d2
movsd   xmm0, qword ptr [esp+20h]
inc     esi
cmp     esi, [edi+8]
jl      short loc_37a8a390
lea     eax, [esp+18h]
movsd   qword ptr [esp+18h], xmm0
push    eax
call    __dtest
add     esp, 4
cmp     ax, 0ffffh
jnz     short loc_37a8a401
movsd   xmm1, qword ptr [esp+20h]
comisd  xmm1, qword ptr [edi]
jbe     short loc_37a8a401
movsd   qword ptr [edi], xmm1
pop     edi
pop     esi
pop     ebp
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ecx, esi
call    eax
jmp     loc_37a8a2ce
mov     ecx, esi
call    eax
jmp     loc_37a8a2f4
call    dword ptr [eax+18h]
mov     edx, eax
jmp     loc_37a8a30b
mov     ecx, dword_37b733d8
push    esi
mov     esi, dword_37b733d4
cmp     ecx, esi
jz      short loc_37a8a454
mov     eax, [esp+8]
mov     eax, [eax]
mov     [esi], eax
add     dword_37b733d4, 4
pop     esi
retn    4
mov     eax, dword_37b733d0
sub     esi, eax
sar     esi, 2
cmp     esi, 3fffffffh
jz      loc_37a8a55d
sub     ecx, eax
mov     eax, 3fffffffh
sar     ecx, 2
mov     edx, ecx
shr     edx, 1
sub     eax, edx
push    ebx
lea     ebx, [esi+1]
cmp     ecx, eax
jbe     short loc_37a8a486
mov     eax, ebx
jmp     short loc_37a8a48e
lea     eax, [edx+ecx]
cmp     eax, ebx
cmovb   eax, ebx
push    ebp
lea     ebp, ds:0[eax*4]
mov     ecx, ebp
push    edi
cmp     eax, 3fffffffh
jbe     short loc_37a8a4a5
or      ecx, 0ffffffffh
jmp     short loc_37a8a4ad
cmp     ecx, 1000h
jb      short loc_37a8a4d4
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_37a8a562
lea     edi, [eax+23h]
and     edi, 0ffffffe0h
mov     [edi-4], eax
jmp     short loc_37a8a4e7
test    ecx, ecx
jz      short loc_37a8a4e5
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     edi, eax
jmp     short loc_37a8a4e7
xor     edi, edi
mov     eax, [esp+14h]
mov     eax, [eax]
mov     [edi+esi*4], eax
mov     ecx, dword_37b733d0
mov     eax, dword_37b733d4
sub     eax, ecx
push    eax
push    ecx
push    edi
call    _memmove
mov     eax, dword_37b733d0
add     esp, 0ch
test    eax, eax
jz      short loc_37a8a540
mov     ecx, dword_37b733d8
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_37a8a536
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a8a562
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
lea     eax, [edi+ebx*4]
mov     dword_37b733d0, edi
mov     dword_37b733d4, eax
lea     eax, [edi+ebp]
pop     edi
pop     ebp
pop     ebx
mov     dword_37b733d8, eax
pop     esi
retn    4
call    sub_37a164c0
call    __invalid_parameter_noinfo_noreturn
push    edi
mov     edi, ecx
mov     eax, [edi]
mov     edx, [eax]
mov     [eax], eax
mov     eax, [edi]
mov     [eax+4], eax
mov     dword ptr [edi+4], 0
mov     eax, [edi]
cmp     edx, eax
jz      short loc_37a8a5a6
push    esi
nop     dword ptr [eax+00h]
mov     esi, [edx]
push    7ch
push    edx
call    sub_37ab1b25
mov     eax, [edi]
add     esp, 8
mov     edx, esi
cmp     esi, eax
jnz     short loc_37a8a590
pop     esi
push    7ch
push    eax
call    sub_37ab1b25
add     esp, 8
pop     edi
retn
push    7ch
call    ??2@yapaxi@z
mov     ecx, [esp+4+arg_0]
add     esp, 4
test    ecx, ecx
jnz     short loc_37a8a5de
mov     ecx, eax
mov     edx, eax
mov     [eax], ecx
mov     [eax+4], edx
retn    8
mov     edx, [esp+arg_4]
mov     [eax], ecx
mov     [eax+4], edx
retn    8
push    esi
push    edi
push    [esp+8+arg_4]
push    [esp+0ch+arg_0]
call    sub_37a8a5c0
mov     esi, [esp+8+arg_8]
mov     ecx, 1dh
lea     edi, [eax+8]
rep movsd
pop     edi
pop     esi
retn    0ch
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 6f0h
push    esi
push    edi
push    540h
lea     eax, [esp+1bch]
push    0
push    eax
call    _memset
push    1b0h
lea     eax, [esp+18h]
push    0
push    eax
call    _memset
lea     eax, [esp+1d0h]
push    eax
call    sub_37aae0d0
lea     eax, [esp+24h]
push    eax
lea     eax, [esp+1d8h]
push    eax
call    sub_37aadc70
push    3fh
lea     eax, [esp+40h]
push    eax
push    offset dword_37b73348
call    _strncpy
mov     eax, [esp+128h]
add     esp, 30h
mov     dword_37b73388, eax
cdq
idiv    dword ptr [esp+0f4h]
mov     esi, eax
mov     dword_37b684c8, esi
mov     edi, esi
test    esi, esi
jnz     short loc_37a8a6b5
mov     esi, 1
mov     dword_37b684c8, esi
mov     edi, esi
mov     edx, [esp+108h]
mov     eax, edi
imul    eax, [esp+0f0h]
mov     dword_37b7333c, eax
test    edx, edx
jle     short loc_37a8a6d6
mov     ecx, edi
imul    ecx, edx
jmp     short loc_37a8a6d8
xor     ecx, ecx
mov     dword_37b73338, ecx
mov     ecx, [esp+58h]
cmp     ecx, 1
jnz     short loc_37a8a711
mov     ecx, [esp+0e8h]
add     ecx, 0ffffffebh
cmp     ecx, 1
ja      short loc_37a8a746
cdq
sub     eax, edx
mov     byte_37b7332c, 1
mov     esi, eax
sar     esi, 1
imul    esi, edi
imul    esi, [esp+104h]
jmp     short loc_37a8a75b
test    ecx, ecx
jnz     short loc_37a8a746
cmp     dword ptr [esp+0e8h], 6
jnz     short loc_37a8a746
mov     ecx, [esp+0ech]
cmp     ecx, 0eh
jz      short loc_37a8a735
cmp     ecx, 0fh
jz      short loc_37a8a735
cmp     ecx, 17h
jnz     short loc_37a8a746
cmp     eax, 1
jle     short loc_37a8a741
cdq
sub     eax, edx
sar     eax, 1
jmp     short loc_37a8a746
mov     eax, 1
mov     ecx, [esp+104h]
test    ecx, ecx
jle     short loc_37a8a759
imul    esi, eax
imul    esi, ecx
jmp     short loc_37a8a75b
xor     esi, esi
cmp     byte ptr [esp+8fh], 0
mov     eax, dword_37b73344
mov     dword_37b73340, esi
jz      short loc_37a8a778
or      eax, 2
mov     dword_37b73344, eax
cmp     byte ptr [esp+0bch], 0
jz      short loc_37a8a78a
or      eax, 4
mov     dword_37b73344, eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
out     dx, al
retn
jmp     dword ptr [ebp+5eh]
push    ebp
mov     ebp, esp
and     esp, 0fffffff0h
mov     al, [ebp+8]
sub     esp, 38h
mov     byte_37b684b0, al
push    esi
push    edi
test    al, al
jz      loc_37a8a92e
call    sub_37a8a790
test    eax, eax
jnz     loc_37a8a927
lea     eax, [esp+10h]
xor     esi, esi
push    eax
push    8
call    ds:getcurrentprocess
push    eax
call    dword_37b71000
cmp     eax, 1
jnz     loc_37a8a92e
lea     eax, [esp+0ch]
mov     [esp+0ch], esi
push    eax
push    esi
push    esi
push    1
push    dword ptr [esp+20h]
call    dword_37b71058
mov     eax, [esp+0ch]
test    eax, eax
jz      short loc_37a8a885
push    eax
push    40h
call    ds:localalloc
mov     esi, eax
mov     eax, [esp+0ch]
lea     ecx, [esp+0ch]
push    ecx
push    eax
push    esi
push    1
push    dword ptr [esp+20h]
call    dword_37b71058
push    dword ptr [esp+10h]
call    ds:closehandle
test    esi, esi
jz      loc_37a8a92e
lea     eax, [esp+14h]
xorps   xmm0, xmm0
push    eax
push    0f0fffh
lea     eax, [esp+28h]
movaps  xmmword ptr [esp+28h], xmm0
push    eax
xor     edi, edi
movq    qword ptr [esp+3ch], xmm0
push    edi
call    dword_37b71094
test    eax, eax
jnz     short loc_37a8a913
mov     dword ptr [esp+18h], 2c002ah
mov     eax, [esp+18h]
push    1
mov     [esp+1ch], eax
lea     eax, [esp+1ch]
push    eax
push    dword ptr [esi]
mov     dword ptr [esp+28h], offset aselockmemorypr
push    dword ptr [esp+20h]
call    dword_37b7109c
push    dword ptr [esp+14h]
test    eax, eax
mov     ecx, 1
cmovz   edi, ecx
call    dword_37b710a4
push    esi
call    ds:localfree
test    edi, edi
jz      short loc_37a8a92e
call    sub_37a8a790
test    eax, eax
jz      short loc_37a8a92e
or      dword_37b731ec, 1
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
push    esi
mov     esi, ecx
mov     dword ptr [esi+4], 0
test    dl, dl
jz      short loc_37a8a969
push    4
push    20003000h
push    dword ptr [esi+0ch]
push    0
call    ds:virtualalloc
mov     [esi], eax
test    eax, eax
jnz     short loc_37a8a97d
mov     [esi+4], eax
push    1000h
push    dword ptr [esi+0ch]
call    sub_37ac1ec7
add     esp, 8
mov     [esi], eax
pop     esi
retn
mov     eax, [esi+8]
mov     [esi+4], eax
pop     esi
retn
sub     esp, 0ch
push    ebx
push    ebp
push    esi
push    edi
mov     edi, dword_37b73388
mov     ebp, edx
mov     ebx, ecx
cmp     edi, 1
jnz     short loc_37a8ab00
mov     eax, edi
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 0ch
retn
mov     ecx, dword_37b73338
mov     eax, dword_37b73340
test    ecx, ecx
jz      short loc_37a8ab1e
cmp     byte_37b7332c, 0
jz      short loc_37a8ab1c
add     eax, ecx
jmp     short loc_37a8ab1e
mov     eax, ecx
test    eax, eax
jz      short loc_37a8ab32
xor     edx, edx
div     ebx
shr     ebx, 1
cmp     edx, ebx
lea     esi, [eax+1]
cmovb   esi, eax
jmp     short loc_37a8ab3b
mov     eax, edi
cdq
sub     eax, edx
mov     esi, eax
sar     esi, 1
mov     ecx, edi
movd    xmm0, edi
shr     ecx, 1
lea     edx, [esi+1]
cmp     edx, ecx
mov     edx, edi
cvtdq2pd xmm0, xmm0
sbb     ecx, ecx
neg     ecx
inc     ecx
add     ecx, esi
cmp     ecx, edi
cmovbe  edx, ecx
shr     edi, 1fh
mov     eax, edx
shr     eax, 1fh
addsd   xmm0, ds:qword_37b03bd0[edi*8]
cvtpd2ps xmm2, xmm0
movd    xmm0, edx
cvtdq2pd xmm0, xmm0
addsd   xmm0, ds:qword_37b03bd0[eax*8]
cvtpd2ps xmm1, xmm0
movd    xmm0, ebp
divss   xmm1, xmm2
cvtdq2ps xmm0, xmm0
mulss   xmm1, ds:dword_37b03b90
comiss  xmm1, xmm0
jbe     short loc_37a8abd5
movd    xmm1, ebp
sub     esp, 8
cvtdq2pd xmm1, xmm1
cvtps2pd xmm0, xmm2
divsd   xmm1, ds:qword_37b03b70
mulsd   xmm1, xmm0
movsd   [esp+24h+var_c], xmm1
fld     [esp+24h+var_c]
fstp    [esp+24h+x]
call    _ceil
fstp    [esp+24h+var_c]
cvttsd2si edx, [esp+24h+var_c]
add     esp, 8
mov     eax, 1
pop     edi
cmp     edx, eax
pop     esi
cmovb   edx, eax
pop     ebp
mov     eax, edx
pop     ebx
add     esp, 0ch
retn
and     dword ptr [ecx-4355dfceh], 0c0e7d18ch
retn
sal     dword ptr [ebx-5bh], 0b9h
mov     ch, 8dh
mov     bl, 0f9h
adc     [ecx+90f4633h], cl
cwde
retf
retf
push    cs
push    ds
popa
or      eax, [edi+61c49316h]
fcomp   dword ptr [esi+ebx*8]
sub     eax, 0b7ab31fah
retn
test    [edx-45h], ecx
mov     edi, 749ea7e9h
push    0ffffffd2h
xchg    ch, [eax]
sti
sub     ds:0b6b7be83h, dl
mov     al, 0dfh
mov     dl, 7dh
cwde
inc     edi
out     8ah, al
call    far ptr 3cf4h:0df4e7e42h
adc     dword ptr [ebp-4f1b3a0fh], 0fffffff1h
stosb
pushf
movsd
fidiv   word ptr [eax-20h]
hlt
pop     es
loop    near ptr loc_37a8c3ad+2
mov     edi, 6fa242bbh
sbb     [esi], bl
sub     ah, dl
mov     esp, 5ff7084bh
push    esi
mov     esp, 0b90bc508h
movsd
push    ebx
adc     ah, dh
into
push    ds
cld
inc     edx
stc
sbb     eax, 70fc4958h
cmc
jns     short near ptr loc_37a8c3b3+1
dec     edi
and     al, 0bfh
les     ebp, [ecx+1bh]
pop     ebx
jp      short loc_37a8c405
jnb     short loc_37a8c400
push    es
sub     [esi-5eh], edx
aas
push    esp
insb
loope   loc_37a8c3a1
loopne  loc_37a8c363
mov     ebp, 577a69cah
mov     ebp, 161380bbh
jl      short near ptr loc_37a8c3b7+4
rol     dl, 0bch
sal     edi, cl
pop     edx
enter   0ffffe3d3h, 0bch
sub     dword ptr [ebx+1e82cad7h], 0a6a012f7h
or      cl, [edx+4eh]
xchg    cl, [ebp-51h]
setalc
cmc
xchg    eax, ebx
push    ecx
pop     ds
retn
sar     ch, cl
retf
int     64h
retf
sub     esp, 0c8h
push    ebx
push    ebp
push    esi
push    edi
mov     [esp+0d8h+var_84], ecx
lea     esi, [edx+2]
xor     edi, edi
movzx   edx, byte ptr [esi-2]
lea     esi, [esi+4]
movzx   eax, byte ptr [esi-5]
shl     edx, 8
or      edx, eax
movzx   eax, byte ptr [esi-4]
shl     edx, 8
or      edx, eax
movzx   eax, byte ptr [esi-3]
shl     edx, 8
or      edx, eax
mov     [esp+edi*4+0d8h+var_80], edx
inc     edi
cmp     edi, 10h
jb      short loc_37a8c673
mov     eax, [ecx]
mov     edi, 0a4093822h
mov     [esp+0d8h+var_b0], eax
mov     eax, [ecx+4]
mov     [esp+0d8h+var_a8], eax
mov     eax, [ecx+8]
mov     [esp+0d8h+var_b4], eax
mov     eax, [ecx+0ch]
mov     [esp+0d8h+var_b8], eax
mov     eax, [ecx+14h]
mov     [esp+0d8h+var_ac], eax
mov     eax, [ecx+1ch]
mov     esi, [ecx+10h]
mov     edx, [ecx+18h]
mov     [esp+0d8h+var_c0], eax
mov     eax, [ecx+20h]
xor     eax, 243f6a88h
mov     [esp+0d8h+var_c8], esi
mov     [esp+0d8h+var_9c], eax
mov     eax, [ecx+24h]
xor     eax, 85a308d3h
mov     [esp+0d8h+var_bc], edx
mov     [esp+0d8h+var_a0], eax
mov     eax, [ecx+28h]
xor     eax, 13198a2eh
mov     [esp+0d8h+var_90], 82efa98h
mov     [esp+0d8h+var_98], eax
mov     eax, [ecx+2ch]
xor     eax, 3707344h
mov     [esp+0d8h+var_8c], 0ec4e6c89h
cmp     dword ptr [ecx+3ch], 0
mov     [esp+0d8h+var_94], eax
mov     eax, 299f31d0h
mov     [esp+0d8h+var_a4], eax
jnz     short loc_37a8c756
mov     eax, [ecx+30h]
mov     edi, eax
xor     eax, 299f31d0h
xor     edi, 0a4093822h
mov     [esp+0d8h+var_a4], eax
mov     eax, [ecx+34h]
mov     edx, eax
xor     edx, 82efa98h
xor     eax, 0ec4e6c89h
mov     [esp+0d8h+var_90], edx
mov     [esp+0d8h+var_8c], eax
mov     ecx, [esp+0d8h+var_a4]
xor     ebp, ebp
mov     [esp+0d8h+var_c4], ebp
mov     eax, [esp+0d8h+var_c4]
movzx   ebp, ss:byte_37b01781[ebp]
mov     edx, [esp+0d8h+var_b0]
movzx   ebx, ds:byte_37b01780[eax]
mov     eax, [esp+ebx*4+0d8h+var_80]
xor     eax, ds:dword_37b01860[ebp*4]
add     eax, esi
add     edx, eax
mov     esi, edx
xor     esi, edi
mov     edi, [esp+0d8h+var_9c]
rol     esi, 10h
add     edi, esi
mov     eax, edi
xor     eax, [esp+0d8h+var_c8]
ror     eax, 0ch
mov     [esp+0d8h+var_c8], eax
mov     eax, ds:dword_37b01860[ebx*4]
xor     eax, [esp+ebp*4+0d8h+var_80]
mov     ebx, [esp+0d8h+var_c8]
add     eax, ebx
add     eax, edx
mov     [esp+0d8h+var_b0], eax
xor     eax, esi
ror     eax, 8
mov     [esp+0d8h+var_88], eax
add     eax, edi
xor     ebx, eax
mov     [esp+0d8h+var_9c], eax
mov     eax, [esp+0d8h+var_c4]
mov     edi, [esp+0d8h+var_a0]
ror     ebx, 7
mov     [esp+0d8h+var_c8], ebx
movzx   edx, ds:byte_37b01783[eax]
movzx   ebx, ds:byte_37b01782[eax]
shl     edx, 2
mov     [esp+0d8h+var_a4], edx
mov     eax, [esp+ebx*4+0d8h+var_80]
xor     eax, ds:dword_37b01860[edx]
add     eax, [esp+0d8h+var_ac]
mov     edx, [esp+0d8h+var_a8]
add     edx, eax
mov     eax, ds:dword_37b01860[ebx*4]
mov     ebx, [esp+0d8h+var_a4]
mov     esi, edx
xor     esi, ecx
rol     esi, 10h
add     edi, esi
xor     eax, [esp+ebx+0d8h+var_80]
mov     ebp, edi
xor     ebp, [esp+0d8h+var_ac]
add     eax, edx
ror     ebp, 0ch
add     eax, ebp
mov     ebx, [esp+0d8h+var_98]
mov     [esp+0d8h+var_a8], eax
xor     eax, esi
mov     esi, [esp+0d8h+var_bc]
ror     eax, 8
mov     [esp+0d8h+var_a4], eax
add     eax, edi
mov     ecx, eax
xor     eax, ebp
ror     eax, 7
mov     [esp+0d8h+var_ac], eax
mov     eax, [esp+0d8h+var_c4]
movzx   edx, ds:byte_37b01785[eax]
movzx   ebp, ds:byte_37b01784[eax]
shl     edx, 2
mov     [esp+0d8h+var_a0], edx
mov     eax, [esp+ebp*4+0d8h+var_80]
xor     eax, ds:dword_37b01860[edx]
mov     edx, [esp+0d8h+var_b4]
add     eax, esi
add     edx, eax
mov     edi, edx
xor     edi, [esp+0d8h+var_90]
rol     edi, 10h
add     ebx, edi
xor     esi, ebx
ror     esi, 0ch
mov     eax, ds:dword_37b01860[ebp*4]
mov     ebp, [esp+0d8h+var_a0]
xor     eax, [esp+ebp+0d8h+var_80]
add     eax, edx
add     eax, esi
mov     [esp+0d8h+var_b4], eax
xor     eax, edi
ror     eax, 8
mov     [esp+0d8h+var_a0], eax
add     eax, ebx
mov     [esp+0d8h+var_98], eax
xor     eax, esi
ror     eax, 7
mov     [esp+0d8h+var_bc], eax
mov     eax, [esp+0d8h+var_c4]
mov     esi, [esp+0d8h+var_94]
movzx   edi, ds:byte_37b01786[eax]
movzx   ebp, ds:byte_37b01787[eax]
mov     eax, [esp+edi*4+0d8h+var_80]
xor     eax, ds:dword_37b01860[ebp*4]
add     eax, [esp+0d8h+var_c0]
add     eax, [esp+0d8h+var_b8]
mov     edi, ds:dword_37b01860[edi*4]
mov     edx, eax
xor     edx, [esp+0d8h+var_8c]
xor     edi, [esp+ebp*4+0d8h+var_80]
add     edi, eax
rol     edx, 10h
add     esi, edx
mov     ebx, esi
xor     ebx, [esp+0d8h+var_c0]
ror     ebx, 0ch
add     edi, ebx
mov     ebp, edi
mov     [esp+0d8h+var_b8], edi
xor     ebp, edx
mov     edx, [esp+0d8h+var_b8]
ror     ebp, 8
lea     eax, [esi+ebp]
mov     [esp+0d8h+var_94], eax
xor     eax, ebx
mov     ebx, [esp+0d8h+var_c4]
ror     eax, 7
mov     [esp+0d8h+var_c0], eax
movzx   esi, ds:byte_37b0178e[ebx]
movzx   edi, ds:byte_37b0178f[ebx]
mov     eax, [esp+esi*4+0d8h+var_80]
xor     eax, ds:dword_37b01860[edi*4]
add     eax, [esp+0d8h+var_c8]
add     edx, eax
mov     eax, [esp+0d8h+var_c8]
mov     [esp+0d8h+var_b8], edx
xor     edx, [esp+0d8h+var_a0]
rol     edx, 10h
add     ecx, edx
xor     eax, ecx
ror     eax, 0ch
mov     [esp+0d8h+var_c8], eax
mov     eax, ds:dword_37b01860[esi*4]
xor     eax, [esp+edi*4+0d8h+var_80]
mov     esi, [esp+0d8h+var_c8]
add     eax, esi
mov     edi, [esp+0d8h+var_b8]
add     edi, eax
mov     eax, edi
mov     [esp+0d8h+var_b8], edi
xor     eax, edx
mov     [esp+0d8h+var_34], edi
movzx   edi, ds:byte_37b0178d[ebx]
ror     eax, 8
add     ecx, eax
mov     [esp+0d8h+var_90], eax
xor     esi, ecx
mov     [esp+0d8h+var_8], eax
ror     esi, 7
mov     [esp+0d8h+var_c8], esi
mov     [esp+0d8h+var_30], esi
movzx   esi, ds:byte_37b0178c[ebx]
mov     [esp+0d8h+var_a0], ecx
mov     [esp+0d8h+var_1c], ecx
mov     eax, [esp+esi*4+0d8h+var_80]
xor     eax, ds:dword_37b01860[edi*4]
mov     ecx, [esp+0d8h+var_c0]
add     eax, ecx
mov     edx, [esp+0d8h+var_b4]
add     edx, eax
mov     ebx, [esp+0d8h+var_9c]
mov     eax, ds:dword_37b01860[esi*4]
xor     eax, [esp+edi*4+0d8h+var_80]
mov     [esp+0d8h+var_b4], edx
xor     edx, [esp+0d8h+var_a4]
rol     edx, 10h
add     ebx, edx
xor     ecx, ebx
ror     ecx, 0ch
add     eax, ecx
mov     [esp+0d8h+var_c0], ecx
mov     ecx, [esp+0d8h+var_b4]
add     ecx, eax
mov     eax, [esp+0d8h+var_c0]
mov     [esp+0d8h+var_b4], ecx
mov     [esp+0d8h+var_38], ecx
xor     ecx, edx
mov     edx, [esp+0d8h+var_b0]
ror     ecx, 8
add     ebx, ecx
xor     eax, ebx
mov     [esp+0d8h+var_9c], ebx
ror     eax, 7
mov     [esp+0d8h+var_c0], eax
mov     [esp+0d8h+var_24], eax
mov     eax, [esp+0d8h+var_c4]
mov     [esp+0d8h+var_20], ebx
mov     ebx, [esp+0d8h+var_98]
movzx   esi, ds:byte_37b01788[eax]
movzx   edi, ds:byte_37b01789[eax]
mov     eax, [esp+esi*4+0d8h+var_80]
xor     eax, ds:dword_37b01860[edi*4]
add     eax, [esp+0d8h+var_ac]
add     edx, eax
mov     eax, ds:dword_37b01860[esi*4]
xor     eax, [esp+edi*4+0d8h+var_80]
mov     [esp+0d8h+var_b0], edx
xor     edx, ebp
mov     ebp, [esp+0d8h+var_ac]
mov     esi, [esp+0d8h+var_b0]
rol     edx, 10h
add     ebx, edx
xor     ebp, ebx
ror     ebp, 0ch
add     eax, ebp
add     esi, eax
mov     eax, esi
mov     [esp+0d8h+var_b0], esi
xor     eax, edx
mov     [esp+0d8h+var_40], esi
mov     edx, [esp+0d8h+var_a8]
ror     eax, 8
add     ebx, eax
mov     [esp+0d8h+var_8c], eax
xor     ebp, ebx
mov     [esp+0d8h+var_4], eax
ror     ebp, 7
mov     [esp+0d8h+var_ac], ebp
mov     [esp+0d8h+var_2c], ebp
mov     ebp, [esp+0d8h+var_c4]
mov     [esp+0d8h+var_98], ebx
mov     [esp+0d8h+var_18], ebx
mov     ebx, [esp+0d8h+var_94]
movzx   esi, ss:byte_37b0178a[ebp]
movzx   edi, ss:byte_37b0178b[ebp]
mov     eax, [esp+esi*4+0d8h+var_80]
xor     eax, ds:dword_37b01860[edi*4]
add     eax, [esp+0d8h+var_bc]
add     edx, eax
mov     eax, [esp+0d8h+var_bc]
mov     [esp+0d8h+var_a8], edx
xor     edx, [esp+0d8h+var_88]
rol     edx, 10h
add     ebx, edx
xor     eax, ebx
ror     eax, 0ch
mov     [esp+0d8h+var_bc], eax
add     ebp, 10h
mov     eax, ds:dword_37b01860[esi*4]
xor     eax, [esp+edi*4+0d8h+var_80]
mov     esi, [esp+0d8h+var_bc]
add     eax, esi
mov     edi, [esp+0d8h+var_a8]
add     edi, eax
mov     [esp+0d8h+var_c4], ebp
mov     [esp+0d8h+var_a8], edi
mov     [esp+0d8h+var_3c], edi
xor     edi, edx
ror     edi, 8
add     ebx, edi
xor     esi, ebx
mov     [esp+0d8h+var_94], ebx
ror     esi, 7
mov     [esp+0d8h+var_bc], esi
mov     [esp+0d8h+var_28], esi
mov     esi, [esp+0d8h+var_c8]
mov     [esp+0d8h+var_14], ebx
cmp     ebp, 0e0h
jb      loc_37a8c760
mov     esi, 2
mov     [esp+0d8h+var_c], ecx
mov     ecx, [esp+0d8h+var_84]
mov     [esp+0d8h+var_10], edi
lea     edi, [esp+0d8h+var_3c]
lea     ebx, [esi+2]
nop     dword ptr [eax+00000000h]
lea     eax, [esi-2]
and     eax, 7
lea     edi, [edi+10h]
lea     edx, [ecx+eax*4]
mov     eax, [edi-14h]
xor     [edx], eax
lea     eax, [esi-1]
and     eax, 7
lea     edx, [ecx+eax*4]
mov     eax, [edi-10h]
xor     [edx], eax
mov     eax, esi
and     eax, 7
lea     edx, [ecx+eax*4]
mov     eax, [edi-0ch]
xor     [edx], eax
lea     eax, [esi+1]
and     eax, 7
add     esi, 4
lea     edx, [ecx+eax*4]
mov     eax, [edi-8]
xor     [edx], eax
sub     ebx, 1
jnz     short loc_37a8cb80
mov     eax, [ecx+20h]
xor     [ecx], eax
mov     eax, [ecx+24h]
xor     [ecx+4], eax
mov     eax, [ecx+28h]
xor     [ecx+8], eax
mov     eax, [ecx+2ch]
xor     [ecx+0ch], eax
mov     eax, [ecx+20h]
xor     [ecx+10h], eax
mov     eax, [ecx+24h]
xor     [ecx+14h], eax
mov     eax, [ecx+28h]
xor     [ecx+18h], eax
mov     eax, [ecx+2ch]
xor     [ecx+1ch], eax
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 0c8h
retn
mov     dword ptr [ecx], 6a09e667h
mov     dword ptr [ecx+4], 0bb67ae85h
mov     dword ptr [ecx+8], 3c6ef372h
mov     dword ptr [ecx+0ch], 0a54ff53ah
mov     dword ptr [ecx+10h], 510e527fh
mov     dword ptr [ecx+14h], 9b05688ch
mov     dword ptr [ecx+18h], 1f83d9abh
mov     dword ptr [ecx+1ch], 5be0cd19h
mov     dword ptr [ecx+3ch], 0
mov     dword ptr [ecx+38h], 0
mov     dword ptr [ecx+34h], 0
mov     dword ptr [ecx+30h], 0
mov     dword ptr [ecx+2ch], 0
mov     dword ptr [ecx+28h], 0
mov     dword ptr [ecx+24h], 0
mov     dword ptr [ecx+20h], 0
retn
sub     esp, 0ch
push    ebx
mov     ebx, [esp+14h]
push    ebp
push    esi
mov     esi, ecx
mov     ebp, edx
mov     ecx, 40h
push    edi
mov     edi, [esp+24h]
mov     edx, [esi+38h]
sar     edx, 3
sub     ecx, edx
mov     [esp+14h], edx
mov     [esp+18h], ecx
test    edx, edx
jz      short loc_37a8ccef
mov     [esp+10h], ebx
mov     eax, edi
shrd    dword ptr [esp+10h], eax, 3
mov     eax, [esp+10h]
and     eax, 3fh
cmp     eax, ecx
jb      short loc_37a8ccef
push    ecx
lea     eax, [esi+40h]
add     eax, edx
push    ebp
push    eax
call    _memmove_0
add     esp, 0ch
add     dword ptr [esi+30h], 200h
jnz     short loc_37a8cccf
inc     dword ptr [esi+34h]
lea     edx, [esi+40h]
mov     ecx, esi
call    sub_37a8c660
mov     eax, [esp+18h]
add     ebp, eax
shl     eax, 3
cdq
sub     ebx, eax
mov     dword ptr [esp+14h], 0
sbb     edi, edx
test    edi, edi
jnz     short loc_37a8cd00
cmp     ebx, 200h
jb      short loc_37a8cd2f
nop     dword ptr [eax+eax+00h]
add     dword ptr [esi+30h], 200h
jnz     short loc_37a8cd0c
inc     dword ptr [esi+34h]
mov     edx, ebp
mov     ecx, esi
call    sub_37a8c660
add     ebp, 40h
add     ebx, 0fffffe00h
adc     edi, 0ffffffffh
test    edi, edi
ja      short loc_37a8cd00
jb      short loc_37a8cd42
cmp     ebx, 200h
jnb     short loc_37a8cd00
test    edi, edi
jnz     short loc_37a8cd42
test    ebx, ebx
jnz     short loc_37a8cd42
pop     edi
mov     [esi+38h], ebx
pop     esi
pop     ebp
pop     ebx
add     esp, 0ch
retn
mov     eax, ebx
shrd    eax, edi, 3
shr     edi, 3
mov     edi, [esp+14h]
push    eax
push    ebp
lea     eax, [edi+40h]
add     eax, esi
push    eax
call    _memmove_0
add     esp, 0ch
lea     eax, [ebx+edi*8]
mov     [esi+38h], eax
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 0ch
retn
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     ebp, [esp+28h]
mov     [esp+1ch], eax
mov     [esp+10h], ebp
nop     dword ptr [eax+00000000h]
mov     edx, [ecx+ebp*8+80h]
lea     ebx, ds:0[ebx*4]
mov     eax, [ecx+ebp*8+84h]
not     edx
mov     [ecx+ebp*8+80h], edx
not     eax
mov     [ecx+ebp*8+84h], eax
add     ebx, ebp
mov     edx, [ecx+ebp*8+90h]
mov     eax, [ecx+ebp*8+94h]
not     edx
mov     [ecx+ebp*8+90h], edx
not     eax
mov     [ecx+ebp*8+94h], eax
mov     edx, [ecx+ebp*8+60h]
mov     eax, [ecx+ebp*8+64h]
not     edx
and     edx, ds:dword_37b018a0[ebx*8]
not     eax
and     eax, ds:dword_37b018a4[ebx*8]
xor     [ecx+ebp*8+20h], edx
xor     [ecx+ebp*8+24h], eax
mov     edx, [ecx+ebp*8+70h]
mov     eax, [ecx+ebp*8+74h]
not     edx
and     edx, ds:dword_37b018b0[ebx*8]
not     eax
and     eax, ds:dword_37b018b4[ebx*8]
xor     [ecx+ebp*8+30h], edx
xor     [ecx+ebp*8+34h], eax
mov     esi, [ecx+ebp*8+24h]
mov     edx, [ecx+ebp*8+44h]
mov     eax, [ecx+ebp*8+40h]
and     edx, esi
xor     edx, ds:dword_37b018a4[ebx*8]
mov     edi, [ecx+ebp*8+20h]
and     eax, edi
xor     eax, ds:dword_37b018a0[ebx*8]
mov     ebp, [ecx+ebp*8+50h]
mov     [esp+24h], edx
mov     edx, [esp+10h]
mov     [esp+18h], eax
mov     eax, [ecx+edx*8+54h]
and     eax, [ecx+edx*8+34h]
and     ebp, [ecx+edx*8+30h]
xor     eax, ds:dword_37b018b4[ebx*8]
xor     ebp, ds:dword_37b018b0[ebx*8]
mov     edx, [ecx+edx*8+80h]
mov     ebx, [esp+10h]
mov     [esp+28h], eax
and     edx, [ecx+ebx*8+60h]
mov     eax, [ecx+ebx*8+84h]
xor     edx, edi
and     eax, [ecx+ebx*8+64h]
xor     eax, esi
mov     esi, ebx
mov     [ecx+esi*8+20h], edx
mov     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+44h]
not     edx
and     edx, [ecx+esi*8+60h]
not     eax
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
mov     eax, [ecx+esi*8+54h]
not     edx
and     edx, [ecx+esi*8+70h]
not     eax
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     edx, [ecx+esi*8+60h]
and     edx, [ecx+esi*8+20h]
mov     eax, [ecx+esi*8+64h]
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+40h], edx
xor     [ecx+esi*8+44h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+30h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+50h], edx
xor     [ecx+esi*8+54h], eax
mov     edx, [ecx+esi*8+80h]
mov     eax, [ecx+esi*8+84h]
not     edx
and     edx, [ecx+esi*8+20h]
not     eax
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+60h], edx
xor     [ecx+esi*8+64h], eax
mov     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+94h]
not     edx
and     edx, [ecx+esi*8+30h]
not     eax
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+70h], edx
xor     [ecx+esi*8+74h], eax
mov     edx, [ecx+esi*8+80h]
or      edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+84h]
or      eax, [ecx+esi*8+44h]
xor     [ecx+esi*8+20h], edx
xor     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+50h]
or      edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+54h]
or      eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
and     edx, [ecx+esi*8+60h]
mov     eax, [ecx+esi*8+44h]
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
and     edx, [ecx+esi*8+70h]
mov     eax, [ecx+esi*8+54h]
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     ebx, [esp+24h]
mov     eax, ebx
and     eax, [ecx+esi*8+24h]
mov     edx, [esp+18h]
and     edx, [ecx+esi*8+20h]
xor     [ecx+esi*8+40h], edx
mov     edx, ebp
xor     [ecx+esi*8+44h], eax
and     edx, [ecx+esi*8+30h]
mov     edi, [esp+10h]
mov     esi, [esp+28h]
mov     eax, esi
and     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+50h], edx
mov     edx, edi
mov     edi, [esp+18h]
xor     [ecx+edx*8+54h], eax
xor     [ecx+edx*8+60h], edi
mov     edi, edx
xor     [ecx+edi*8+64h], ebx
xor     [ecx+edi*8+70h], ebp
xor     [ecx+edi*8+74h], esi
mov     eax, [ecx+edi*8+40h]
xor     [ecx+edi*8+30h], eax
mov     eax, [ecx+edi*8+44h]
xor     [ecx+edi*8+34h], eax
mov     eax, [ecx+edi*8+60h]
xor     [ecx+edi*8+50h], eax
mov     eax, [ecx+edi*8+64h]
xor     [ecx+edi*8+54h], eax
mov     edx, [ecx+edi*8+80h]
xor     edx, [ecx+edi*8+70h]
xor     edx, [ecx+edi*8+20h]
mov     eax, [ecx+edi*8+84h]
xor     eax, [ecx+edi*8+74h]
xor     eax, [ecx+edi*8+24h]
mov     [ecx+edi*8+74h], eax
mov     [ecx+edi*8+70h], edx
mov     eax, [ecx+edi*8+20h]
xor     [ecx+edi*8+90h], eax
mov     eax, [ecx+edi*8+24h]
xor     [ecx+edi*8+94h], eax
mov     eax, [ecx+edi*8+50h]
xor     [ecx+edi*8+20h], eax
mov     eax, [ecx+edi*8+54h]
xor     [ecx+edi*8+24h], eax
mov     eax, [ecx+edi*8+70h]
xor     [ecx+edi*8+40h], eax
mov     eax, [ecx+edi*8+74h]
xor     [ecx+edi*8+44h], eax
mov     edx, [ecx+edi*8+60h]
xor     edx, [ecx+edi*8+90h]
mov     eax, [ecx+edi*8+64h]
xor     eax, [ecx+edi*8+94h]
xor     eax, [ecx+edi*8+34h]
xor     edx, [ecx+edi*8+30h]
mov     [ecx+edi*8+64h], eax
mov     [ecx+edi*8+60h], edx
mov     eax, [ecx+edi*8+30h]
xor     [ecx+edi*8+80h], eax
mov     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+84h], eax
mov     ebp, [ecx+edi*8+30h]
mov     esi, ebp
mov     ebx, [ecx+edi*8+34h]
mov     eax, ebp
mov     edi, ebx
mov     edx, ebx
shrd    esi, edi, 1
shld    edx, eax, 1
shr     edi, 1
xor     edi, edx
add     eax, eax
xor     esi, eax
and     edi, 55555555h
mov     eax, [esp+10h]
and     esi, 55555555h
shld    ebx, ebp, 1
xor     edi, ebx
add     ebp, ebp
mov     [ecx+eax*8+34h], edi
xor     esi, ebp
mov     [ecx+eax*8+30h], esi
mov     ebx, [ecx+eax*8+54h]
mov     edi, ebx
mov     ebp, [ecx+eax*8+50h]
mov     edx, ebx
mov     esi, ebp
mov     eax, ebp
shrd    esi, edi, 1
shld    edx, eax, 1
shr     edi, 1
add     eax, eax
xor     edi, edx
xor     esi, eax
and     edi, 55555555h
mov     eax, [esp+10h]
and     esi, 55555555h
shld    ebx, ebp, 1
add     ebp, ebp
xor     edi, ebx
xor     esi, ebp
mov     [ecx+eax*8+54h], edi
mov     [ecx+eax*8+50h], esi
mov     ebp, [ecx+eax*8+70h]
mov     esi, ebp
mov     ebx, [ecx+eax*8+74h]
mov     edi, ebx
shrd    esi, edi, 1
mov     eax, ebp
shr     edi, 1
mov     edx, ebx
shld    edx, eax, 1
shld    ebx, ebp, 1
xor     edi, edx
add     eax, eax
xor     esi, eax
and     edi, 55555555h
mov     eax, [esp+10h]
xor     edi, ebx
and     esi, 55555555h
add     ebp, ebp
xor     esi, ebp
mov     [ecx+eax*8+74h], edi
mov     [ecx+eax*8+70h], esi
mov     ebx, [ecx+eax*8+94h]
mov     edi, ebx
mov     ebp, [ecx+eax*8+90h]
mov     edx, ebx
mov     eax, ebp
mov     esi, ebp
shrd    esi, edi, 1
shld    edx, eax, 1
shld    ebx, ebp, 1
add     eax, eax
shr     edi, 1
xor     esi, eax
add     ebp, ebp
and     esi, 55555555h
xor     edi, edx
xor     esi, ebp
and     edi, 55555555h
mov     ebp, [esp+10h]
xor     edi, ebx
mov     [ecx+ebp*8+90h], esi
mov     [ecx+ebp*8+94h], edi
add     ebp, 1
mov     [esp+10h], ebp
adc     dword ptr [esp+1ch], 0
jnz     short loc_37a8d468
mov     ebx, [esp+14h]
cmp     ebp, 2
jb      loc_37a8cfe0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     ebp, [esp+28h]
mov     [esp+18h], eax
mov     [esp+10h], ebp
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
mov     edx, [ecx+ebp*8+80h]
mov     eax, [ecx+ebp*8+84h]
not     edx
mov     [ecx+ebp*8+80h], edx
not     eax
mov     [ecx+ebp*8+84h], eax
mov     edx, [ecx+ebp*8+90h]
mov     eax, [ecx+ebp*8+94h]
not     edx
mov     [ecx+ebp*8+90h], edx
not     eax
mov     [ecx+ebp*8+94h], eax
mov     edx, [ecx+ebp*8+60h]
mov     eax, [esp+14h]
not     edx
lea     ebx, ds:0[eax*4]
mov     eax, [ecx+ebp*8+64h]
not     eax
add     ebx, ebp
and     eax, ds:dword_37b018c4[ebx*8]
and     edx, ds:dword_37b018c0[ebx*8]
xor     [ecx+ebp*8+20h], edx
xor     [ecx+ebp*8+24h], eax
mov     edx, [ecx+ebp*8+70h]
mov     eax, [ecx+ebp*8+74h]
not     edx
and     edx, ds:dword_37b018d0[ebx*8]
not     eax
and     eax, ds:dword_37b018d4[ebx*8]
xor     [ecx+ebp*8+30h], edx
xor     [ecx+ebp*8+34h], eax
mov     esi, [ecx+ebp*8+24h]
mov     edx, [ecx+ebp*8+44h]
mov     eax, [ecx+ebp*8+40h]
and     edx, esi
xor     edx, ds:dword_37b018c4[ebx*8]
mov     edi, [ecx+ebp*8+20h]
and     eax, edi
xor     eax, ds:dword_37b018c0[ebx*8]
mov     ebp, [ecx+ebp*8+50h]
mov     [esp+28h], edx
mov     edx, [esp+10h]
mov     [esp+1ch], eax
mov     eax, [ecx+edx*8+54h]
and     eax, [ecx+edx*8+34h]
and     ebp, [ecx+edx*8+30h]
xor     eax, ds:dword_37b018d4[ebx*8]
xor     ebp, ds:dword_37b018d0[ebx*8]
mov     edx, [ecx+edx*8+80h]
mov     ebx, [esp+10h]
mov     [esp+24h], eax
and     edx, [ecx+ebx*8+60h]
mov     eax, [ecx+ebx*8+84h]
xor     edx, edi
and     eax, [ecx+ebx*8+64h]
xor     eax, esi
mov     esi, ebx
mov     [ecx+esi*8+20h], edx
mov     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+44h]
not     edx
and     edx, [ecx+esi*8+60h]
not     eax
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
mov     eax, [ecx+esi*8+54h]
not     edx
and     edx, [ecx+esi*8+70h]
not     eax
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     edx, [ecx+esi*8+60h]
and     edx, [ecx+esi*8+20h]
mov     eax, [ecx+esi*8+64h]
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+40h], edx
xor     [ecx+esi*8+44h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+30h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+50h], edx
xor     [ecx+esi*8+54h], eax
mov     edx, [ecx+esi*8+80h]
mov     eax, [ecx+esi*8+84h]
not     edx
and     edx, [ecx+esi*8+20h]
not     eax
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+60h], edx
xor     [ecx+esi*8+64h], eax
mov     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+94h]
not     edx
and     edx, [ecx+esi*8+30h]
not     eax
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+70h], edx
xor     [ecx+esi*8+74h], eax
mov     edx, [ecx+esi*8+80h]
or      edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+84h]
or      eax, [ecx+esi*8+44h]
xor     [ecx+esi*8+20h], edx
xor     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+50h]
or      edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+54h]
or      eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
and     edx, [ecx+esi*8+60h]
mov     eax, [ecx+esi*8+44h]
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
and     edx, [ecx+esi*8+70h]
mov     eax, [ecx+esi*8+54h]
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     ebx, [esp+28h]
mov     eax, ebx
and     eax, [ecx+esi*8+24h]
mov     edx, [esp+1ch]
and     edx, [ecx+esi*8+20h]
xor     [ecx+esi*8+40h], edx
mov     edx, ebp
xor     [ecx+esi*8+44h], eax
and     edx, [ecx+esi*8+30h]
mov     edi, [esp+10h]
mov     esi, [esp+24h]
mov     eax, esi
and     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+50h], edx
mov     edx, edi
mov     edi, [esp+1ch]
xor     [ecx+edx*8+54h], eax
xor     [ecx+edx*8+60h], edi
mov     edi, edx
xor     [ecx+edi*8+64h], ebx
xor     [ecx+edi*8+70h], ebp
xor     [ecx+edi*8+74h], esi
mov     eax, [ecx+edi*8+40h]
xor     [ecx+edi*8+30h], eax
mov     eax, [ecx+edi*8+44h]
xor     [ecx+edi*8+34h], eax
mov     eax, [ecx+edi*8+60h]
xor     [ecx+edi*8+50h], eax
mov     eax, [ecx+edi*8+64h]
xor     [ecx+edi*8+54h], eax
mov     edx, [ecx+edi*8+80h]
xor     edx, [ecx+edi*8+70h]
xor     edx, [ecx+edi*8+20h]
mov     eax, [ecx+edi*8+84h]
xor     eax, [ecx+edi*8+74h]
xor     eax, [ecx+edi*8+24h]
mov     [ecx+edi*8+74h], eax
mov     [ecx+edi*8+70h], edx
mov     eax, [ecx+edi*8+20h]
xor     [ecx+edi*8+90h], eax
mov     eax, [ecx+edi*8+24h]
xor     [ecx+edi*8+94h], eax
mov     eax, [ecx+edi*8+50h]
xor     [ecx+edi*8+20h], eax
mov     eax, [ecx+edi*8+54h]
xor     [ecx+edi*8+24h], eax
mov     eax, [ecx+edi*8+70h]
xor     [ecx+edi*8+40h], eax
mov     eax, [ecx+edi*8+74h]
xor     [ecx+edi*8+44h], eax
mov     edx, [ecx+edi*8+60h]
xor     edx, [ecx+edi*8+90h]
mov     eax, [ecx+edi*8+64h]
xor     eax, [ecx+edi*8+94h]
xor     eax, [ecx+edi*8+34h]
xor     edx, [ecx+edi*8+30h]
mov     [ecx+edi*8+64h], eax
mov     [ecx+edi*8+60h], edx
mov     eax, [ecx+edi*8+30h]
xor     [ecx+edi*8+80h], eax
mov     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+84h], eax
mov     ebp, [ecx+edi*8+30h]
mov     esi, ebp
mov     ebx, [ecx+edi*8+34h]
mov     eax, ebp
mov     edi, ebx
mov     edx, ebx
shrd    esi, edi, 2
shld    edx, eax, 2
shr     edi, 2
xor     edi, edx
shl     eax, 2
xor     esi, eax
and     edi, 33333333h
mov     eax, [esp+10h]
and     esi, 33333333h
shld    ebx, ebp, 2
xor     edi, ebx
shl     ebp, 2
mov     [ecx+eax*8+34h], edi
xor     esi, ebp
mov     [ecx+eax*8+30h], esi
mov     ebx, [ecx+eax*8+54h]
mov     edi, ebx
mov     ebp, [ecx+eax*8+50h]
mov     edx, ebx
mov     esi, ebp
mov     eax, ebp
shrd    esi, edi, 2
shld    edx, eax, 2
shr     edi, 2
shld    ebx, ebp, 2
shl     eax, 2
xor     edi, edx
xor     esi, eax
shl     ebp, 2
mov     eax, [esp+10h]
and     esi, 33333333h
and     edi, 33333333h
xor     esi, ebp
xor     edi, ebx
mov     [ecx+eax*8+54h], edi
mov     [ecx+eax*8+50h], esi
mov     ebp, [ecx+eax*8+70h]
mov     esi, ebp
mov     ebx, [ecx+eax*8+74h]
mov     edi, ebx
shrd    esi, edi, 2
shr     edi, 2
mov     eax, ebp
mov     edx, ebx
shld    edx, eax, 2
shld    ebx, ebp, 2
xor     edi, edx
shl     eax, 2
xor     esi, eax
shl     ebp, 2
mov     eax, [esp+10h]
and     edi, 33333333h
xor     edi, ebx
and     esi, 33333333h
xor     esi, ebp
mov     [ecx+eax*8+74h], edi
mov     [ecx+eax*8+70h], esi
mov     ebx, [ecx+eax*8+94h]
mov     edi, ebx
mov     ebp, [ecx+eax*8+90h]
mov     edx, ebx
mov     eax, ebp
mov     esi, ebp
shrd    esi, edi, 2
shld    edx, eax, 2
shld    ebx, ebp, 2
shl     eax, 2
xor     esi, eax
shr     edi, 2
shl     ebp, 2
and     esi, 33333333h
xor     edi, edx
xor     esi, ebp
mov     ebp, [esp+10h]
and     edi, 33333333h
xor     edi, ebx
mov     [ecx+ebp*8+90h], esi
mov     [ecx+ebp*8+94h], edi
add     ebp, 1
mov     [esp+10h], ebp
adc     dword ptr [esp+18h], 0
jnz     short loc_37a8d924
cmp     ebp, 2
jb      loc_37a8d490
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     ebp, [esp+28h]
mov     [esp+18h], eax
mov     [esp+10h], ebp
nop     dword ptr [eax]
mov     edx, [ecx+ebp*8+80h]
mov     eax, [ecx+ebp*8+84h]
not     edx
mov     [ecx+ebp*8+80h], edx
not     eax
mov     [ecx+ebp*8+84h], eax
mov     edx, [ecx+ebp*8+90h]
mov     eax, [ecx+ebp*8+94h]
not     edx
mov     [ecx+ebp*8+90h], edx
not     eax
mov     [ecx+ebp*8+94h], eax
mov     edx, [ecx+ebp*8+60h]
mov     eax, [esp+14h]
not     edx
lea     ebx, ds:0[eax*4]
mov     eax, [ecx+ebp*8+64h]
not     eax
add     ebx, ebp
and     eax, ds:dword_37b018e4[ebx*8]
and     edx, ds:dword_37b018e0[ebx*8]
xor     [ecx+ebp*8+20h], edx
xor     [ecx+ebp*8+24h], eax
mov     edx, [ecx+ebp*8+70h]
mov     eax, [ecx+ebp*8+74h]
not     edx
and     edx, ds:dword_37b018f0[ebx*8]
not     eax
and     eax, ds:dword_37b018f4[ebx*8]
xor     [ecx+ebp*8+30h], edx
xor     [ecx+ebp*8+34h], eax
mov     esi, [ecx+ebp*8+24h]
mov     edx, [ecx+ebp*8+44h]
mov     eax, [ecx+ebp*8+40h]
and     edx, esi
xor     edx, ds:dword_37b018e4[ebx*8]
mov     edi, [ecx+ebp*8+20h]
and     eax, edi
xor     eax, ds:dword_37b018e0[ebx*8]
mov     ebp, [ecx+ebp*8+50h]
mov     [esp+28h], edx
mov     edx, [esp+10h]
mov     [esp+1ch], eax
mov     eax, [ecx+edx*8+54h]
and     eax, [ecx+edx*8+34h]
and     ebp, [ecx+edx*8+30h]
xor     eax, ds:dword_37b018f4[ebx*8]
xor     ebp, ds:dword_37b018f0[ebx*8]
mov     edx, [ecx+edx*8+80h]
mov     ebx, [esp+10h]
mov     [esp+24h], eax
and     edx, [ecx+ebx*8+60h]
mov     eax, [ecx+ebx*8+84h]
xor     edx, edi
and     eax, [ecx+ebx*8+64h]
xor     eax, esi
mov     esi, ebx
mov     [ecx+esi*8+20h], edx
mov     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+44h]
not     edx
and     edx, [ecx+esi*8+60h]
not     eax
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
mov     eax, [ecx+esi*8+54h]
not     edx
and     edx, [ecx+esi*8+70h]
not     eax
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     edx, [ecx+esi*8+60h]
and     edx, [ecx+esi*8+20h]
mov     eax, [ecx+esi*8+64h]
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+40h], edx
xor     [ecx+esi*8+44h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+30h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+50h], edx
xor     [ecx+esi*8+54h], eax
mov     edx, [ecx+esi*8+80h]
mov     eax, [ecx+esi*8+84h]
not     edx
and     edx, [ecx+esi*8+20h]
not     eax
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+60h], edx
xor     [ecx+esi*8+64h], eax
mov     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+94h]
not     edx
and     edx, [ecx+esi*8+30h]
not     eax
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+70h], edx
xor     [ecx+esi*8+74h], eax
mov     edx, [ecx+esi*8+80h]
or      edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+84h]
or      eax, [ecx+esi*8+44h]
xor     [ecx+esi*8+20h], edx
xor     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+50h]
or      edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+54h]
or      eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
and     edx, [ecx+esi*8+60h]
mov     eax, [ecx+esi*8+44h]
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
and     edx, [ecx+esi*8+70h]
mov     eax, [ecx+esi*8+54h]
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     ebx, [esp+28h]
mov     eax, ebx
and     eax, [ecx+esi*8+24h]
mov     edx, [esp+1ch]
and     edx, [ecx+esi*8+20h]
xor     [ecx+esi*8+40h], edx
mov     edx, ebp
xor     [ecx+esi*8+44h], eax
and     edx, [ecx+esi*8+30h]
mov     edi, [esp+10h]
mov     esi, [esp+24h]
mov     eax, esi
and     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+50h], edx
mov     edx, edi
mov     edi, [esp+1ch]
xor     [ecx+edx*8+54h], eax
xor     [ecx+edx*8+60h], edi
mov     edi, edx
xor     [ecx+edi*8+64h], ebx
xor     [ecx+edi*8+70h], ebp
xor     [ecx+edi*8+74h], esi
mov     eax, [ecx+edi*8+40h]
xor     [ecx+edi*8+30h], eax
mov     eax, [ecx+edi*8+44h]
xor     [ecx+edi*8+34h], eax
mov     eax, [ecx+edi*8+60h]
xor     [ecx+edi*8+50h], eax
mov     eax, [ecx+edi*8+64h]
xor     [ecx+edi*8+54h], eax
mov     edx, [ecx+edi*8+80h]
xor     edx, [ecx+edi*8+70h]
xor     edx, [ecx+edi*8+20h]
mov     eax, [ecx+edi*8+84h]
xor     eax, [ecx+edi*8+74h]
xor     eax, [ecx+edi*8+24h]
mov     [ecx+edi*8+74h], eax
mov     [ecx+edi*8+70h], edx
mov     eax, [ecx+edi*8+20h]
xor     [ecx+edi*8+90h], eax
mov     eax, [ecx+edi*8+24h]
xor     [ecx+edi*8+94h], eax
mov     eax, [ecx+edi*8+50h]
xor     [ecx+edi*8+20h], eax
mov     eax, [ecx+edi*8+54h]
xor     [ecx+edi*8+24h], eax
mov     eax, [ecx+edi*8+70h]
xor     [ecx+edi*8+40h], eax
mov     eax, [ecx+edi*8+74h]
xor     [ecx+edi*8+44h], eax
mov     edx, [ecx+edi*8+60h]
xor     edx, [ecx+edi*8+90h]
mov     eax, [ecx+edi*8+64h]
xor     eax, [ecx+edi*8+94h]
xor     eax, [ecx+edi*8+34h]
xor     edx, [ecx+edi*8+30h]
mov     [ecx+edi*8+64h], eax
mov     [ecx+edi*8+60h], edx
mov     eax, [ecx+edi*8+30h]
xor     [ecx+edi*8+80h], eax
mov     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+84h], eax
mov     ebp, [ecx+edi*8+30h]
mov     esi, ebp
mov     ebx, [ecx+edi*8+34h]
mov     eax, ebp
mov     edi, ebx
mov     edx, ebx
shrd    esi, edi, 4
shld    edx, eax, 4
shr     edi, 4
xor     edi, edx
shl     eax, 4
xor     esi, eax
and     edi, 0f0f0f0fh
mov     eax, [esp+10h]
and     esi, 0f0f0f0fh
shld    ebx, ebp, 4
xor     edi, ebx
shl     ebp, 4
mov     [ecx+eax*8+34h], edi
xor     esi, ebp
mov     [ecx+eax*8+30h], esi
mov     ebx, [ecx+eax*8+54h]
mov     edi, ebx
mov     ebp, [ecx+eax*8+50h]
mov     edx, ebx
mov     esi, ebp
mov     eax, ebp
shrd    esi, edi, 4
shld    edx, eax, 4
shr     edi, 4
shld    ebx, ebp, 4
shl     eax, 4
xor     edi, edx
xor     esi, eax
shl     ebp, 4
mov     eax, [esp+10h]
and     esi, 0f0f0f0fh
and     edi, 0f0f0f0fh
xor     esi, ebp
xor     edi, ebx
mov     [ecx+eax*8+54h], edi
mov     [ecx+eax*8+50h], esi
mov     ebp, [ecx+eax*8+70h]
mov     esi, ebp
mov     ebx, [ecx+eax*8+74h]
mov     edi, ebx
shrd    esi, edi, 4
shr     edi, 4
mov     eax, ebp
mov     edx, ebx
shld    edx, eax, 4
shld    ebx, ebp, 4
xor     edi, edx
shl     eax, 4
xor     esi, eax
shl     ebp, 4
mov     eax, [esp+10h]
and     edi, 0f0f0f0fh
xor     edi, ebx
and     esi, 0f0f0f0fh
xor     esi, ebp
mov     [ecx+eax*8+74h], edi
mov     [ecx+eax*8+70h], esi
mov     ebx, [ecx+eax*8+94h]
mov     edi, ebx
mov     ebp, [ecx+eax*8+90h]
mov     edx, ebx
mov     eax, ebp
mov     esi, ebp
shrd    esi, edi, 4
shld    edx, eax, 4
shld    ebx, ebp, 4
shl     eax, 4
xor     esi, eax
shr     edi, 4
shl     ebp, 4
and     esi, 0f0f0f0fh
xor     edi, edx
xor     esi, ebp
mov     ebp, [esp+10h]
and     edi, 0f0f0f0fh
xor     edi, ebx
mov     [ecx+ebp*8+90h], esi
mov     [ecx+ebp*8+94h], edi
add     ebp, 1
mov     [esp+10h], ebp
adc     dword ptr [esp+18h], 0
jnz     short loc_37a8ddd4
cmp     ebp, 2
jb      loc_37a8d940
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     ebp, [esp+28h]
mov     [esp+18h], eax
mov     [esp+10h], ebp
nop     dword ptr [eax]
mov     edx, [ecx+ebp*8+80h]
mov     eax, [ecx+ebp*8+84h]
not     edx
mov     [ecx+ebp*8+80h], edx
not     eax
mov     [ecx+ebp*8+84h], eax
mov     edx, [ecx+ebp*8+90h]
mov     eax, [ecx+ebp*8+94h]
not     edx
mov     [ecx+ebp*8+90h], edx
not     eax
mov     [ecx+ebp*8+94h], eax
mov     edx, [ecx+ebp*8+60h]
mov     eax, [esp+14h]
not     edx
lea     ebx, ds:0[eax*4]
mov     eax, [ecx+ebp*8+64h]
not     eax
add     ebx, ebp
and     eax, ds:dword_37b01904[ebx*8]
and     edx, ds:dword_37b01900[ebx*8]
xor     [ecx+ebp*8+20h], edx
xor     [ecx+ebp*8+24h], eax
mov     edx, [ecx+ebp*8+70h]
mov     eax, [ecx+ebp*8+74h]
not     edx
and     edx, ds:dword_37b01910[ebx*8]
not     eax
and     eax, ds:dword_37b01914[ebx*8]
xor     [ecx+ebp*8+30h], edx
xor     [ecx+ebp*8+34h], eax
mov     esi, [ecx+ebp*8+24h]
mov     edx, [ecx+ebp*8+44h]
mov     eax, [ecx+ebp*8+40h]
and     edx, esi
xor     edx, ds:dword_37b01904[ebx*8]
mov     edi, [ecx+ebp*8+20h]
and     eax, edi
xor     eax, ds:dword_37b01900[ebx*8]
mov     ebp, [ecx+ebp*8+50h]
mov     [esp+28h], edx
mov     edx, [esp+10h]
mov     [esp+1ch], eax
mov     eax, [ecx+edx*8+54h]
and     eax, [ecx+edx*8+34h]
and     ebp, [ecx+edx*8+30h]
xor     eax, ds:dword_37b01914[ebx*8]
xor     ebp, ds:dword_37b01910[ebx*8]
mov     edx, [ecx+edx*8+80h]
mov     ebx, [esp+10h]
mov     [esp+24h], eax
and     edx, [ecx+ebx*8+60h]
mov     eax, [ecx+ebx*8+84h]
xor     edx, edi
and     eax, [ecx+ebx*8+64h]
xor     eax, esi
mov     esi, ebx
mov     [ecx+esi*8+20h], edx
mov     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+44h]
not     edx
and     edx, [ecx+esi*8+60h]
not     eax
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
mov     eax, [ecx+esi*8+54h]
not     edx
and     edx, [ecx+esi*8+70h]
not     eax
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     edx, [ecx+esi*8+60h]
and     edx, [ecx+esi*8+20h]
mov     eax, [ecx+esi*8+64h]
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+40h], edx
xor     [ecx+esi*8+44h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+30h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+50h], edx
xor     [ecx+esi*8+54h], eax
mov     edx, [ecx+esi*8+80h]
mov     eax, [ecx+esi*8+84h]
not     edx
and     edx, [ecx+esi*8+20h]
not     eax
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+60h], edx
xor     [ecx+esi*8+64h], eax
mov     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+94h]
not     edx
and     edx, [ecx+esi*8+30h]
not     eax
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+70h], edx
xor     [ecx+esi*8+74h], eax
mov     edx, [ecx+esi*8+80h]
or      edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+84h]
or      eax, [ecx+esi*8+44h]
xor     [ecx+esi*8+20h], edx
xor     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+50h]
or      edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+54h]
or      eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
and     edx, [ecx+esi*8+60h]
mov     eax, [ecx+esi*8+44h]
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
and     edx, [ecx+esi*8+70h]
mov     eax, [ecx+esi*8+54h]
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     ebx, [esp+28h]
mov     eax, ebx
and     eax, [ecx+esi*8+24h]
mov     edx, [esp+1ch]
and     edx, [ecx+esi*8+20h]
xor     [ecx+esi*8+40h], edx
mov     edx, ebp
xor     [ecx+esi*8+44h], eax
and     edx, [ecx+esi*8+30h]
mov     edi, [esp+10h]
mov     esi, [esp+24h]
mov     eax, esi
and     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+50h], edx
mov     edx, edi
mov     edi, [esp+1ch]
xor     [ecx+edx*8+54h], eax
xor     [ecx+edx*8+60h], edi
mov     edi, edx
xor     [ecx+edi*8+64h], ebx
xor     [ecx+edi*8+70h], ebp
xor     [ecx+edi*8+74h], esi
mov     eax, [ecx+edi*8+40h]
xor     [ecx+edi*8+30h], eax
mov     eax, [ecx+edi*8+44h]
xor     [ecx+edi*8+34h], eax
mov     eax, [ecx+edi*8+60h]
xor     [ecx+edi*8+50h], eax
mov     eax, [ecx+edi*8+64h]
xor     [ecx+edi*8+54h], eax
mov     edx, [ecx+edi*8+80h]
xor     edx, [ecx+edi*8+70h]
xor     edx, [ecx+edi*8+20h]
mov     eax, [ecx+edi*8+84h]
xor     eax, [ecx+edi*8+74h]
xor     eax, [ecx+edi*8+24h]
mov     [ecx+edi*8+74h], eax
mov     [ecx+edi*8+70h], edx
mov     eax, [ecx+edi*8+20h]
xor     [ecx+edi*8+90h], eax
mov     eax, [ecx+edi*8+24h]
xor     [ecx+edi*8+94h], eax
mov     eax, [ecx+edi*8+50h]
xor     [ecx+edi*8+20h], eax
mov     eax, [ecx+edi*8+54h]
xor     [ecx+edi*8+24h], eax
mov     eax, [ecx+edi*8+70h]
xor     [ecx+edi*8+40h], eax
mov     eax, [ecx+edi*8+74h]
xor     [ecx+edi*8+44h], eax
mov     edx, [ecx+edi*8+60h]
xor     edx, [ecx+edi*8+90h]
mov     eax, [ecx+edi*8+64h]
xor     eax, [ecx+edi*8+94h]
xor     eax, [ecx+edi*8+34h]
xor     edx, [ecx+edi*8+30h]
mov     [ecx+edi*8+64h], eax
mov     [ecx+edi*8+60h], edx
mov     eax, [ecx+edi*8+30h]
xor     [ecx+edi*8+80h], eax
mov     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+84h], eax
mov     ebp, [ecx+edi*8+30h]
mov     esi, ebp
mov     ebx, [ecx+edi*8+34h]
mov     eax, ebp
mov     edi, ebx
mov     edx, ebx
shrd    esi, edi, 8
shld    edx, eax, 8
shr     edi, 8
xor     edi, edx
shl     eax, 8
xor     esi, eax
and     edi, 0ff00ffh
mov     eax, [esp+10h]
and     esi, 0ff00ffh
shld    ebx, ebp, 8
xor     edi, ebx
shl     ebp, 8
mov     [ecx+eax*8+34h], edi
xor     esi, ebp
mov     [ecx+eax*8+30h], esi
mov     ebx, [ecx+eax*8+54h]
mov     edi, ebx
mov     ebp, [ecx+eax*8+50h]
mov     edx, ebx
mov     esi, ebp
mov     eax, ebp
shrd    esi, edi, 8
shld    edx, eax, 8
shr     edi, 8
shld    ebx, ebp, 8
shl     eax, 8
xor     edi, edx
xor     esi, eax
shl     ebp, 8
mov     eax, [esp+10h]
and     esi, 0ff00ffh
and     edi, 0ff00ffh
xor     esi, ebp
xor     edi, ebx
mov     [ecx+eax*8+54h], edi
mov     [ecx+eax*8+50h], esi
mov     ebp, [ecx+eax*8+70h]
mov     esi, ebp
mov     ebx, [ecx+eax*8+74h]
mov     edi, ebx
shrd    esi, edi, 8
shr     edi, 8
mov     eax, ebp
mov     edx, ebx
shld    edx, eax, 8
shld    ebx, ebp, 8
xor     edi, edx
shl     eax, 8
xor     esi, eax
shl     ebp, 8
mov     eax, [esp+10h]
and     edi, 0ff00ffh
xor     edi, ebx
and     esi, 0ff00ffh
xor     esi, ebp
mov     [ecx+eax*8+74h], edi
mov     [ecx+eax*8+70h], esi
mov     ebx, [ecx+eax*8+94h]
mov     edi, ebx
mov     ebp, [ecx+eax*8+90h]
mov     edx, ebx
mov     eax, ebp
mov     esi, ebp
shrd    esi, edi, 8
shld    edx, eax, 8
shld    ebx, ebp, 8
shl     eax, 8
xor     esi, eax
shr     edi, 8
shl     ebp, 8
and     esi, 0ff00ffh
xor     edi, edx
xor     esi, ebp
mov     ebp, [esp+10h]
and     edi, 0ff00ffh
xor     edi, ebx
mov     [ecx+ebp*8+90h], esi
mov     [ecx+ebp*8+94h], edi
add     ebp, 1
mov     [esp+10h], ebp
adc     dword ptr [esp+18h], 0
jnz     short loc_37a8e284
cmp     ebp, 2
jb      loc_37a8ddf0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     ebp, [esp+28h]
mov     [esp+18h], eax
mov     [esp+10h], ebp
nop     dword ptr [eax]
mov     edx, [ecx+ebp*8+80h]
mov     eax, [ecx+ebp*8+84h]
not     edx
mov     [ecx+ebp*8+80h], edx
not     eax
mov     [ecx+ebp*8+84h], eax
mov     edx, [ecx+ebp*8+90h]
mov     eax, [ecx+ebp*8+94h]
not     edx
mov     [ecx+ebp*8+90h], edx
not     eax
mov     [ecx+ebp*8+94h], eax
mov     edx, [ecx+ebp*8+60h]
mov     eax, [esp+14h]
not     edx
lea     ebx, ds:0[eax*4]
mov     eax, [ecx+ebp*8+64h]
not     eax
add     ebx, ebp
and     eax, ds:dword_37b01924[ebx*8]
and     edx, ds:dword_37b01920[ebx*8]
xor     [ecx+ebp*8+20h], edx
xor     [ecx+ebp*8+24h], eax
mov     edx, [ecx+ebp*8+70h]
mov     eax, [ecx+ebp*8+74h]
not     edx
and     edx, ds:dword_37b01930[ebx*8]
not     eax
and     eax, ds:dword_37b01934[ebx*8]
xor     [ecx+ebp*8+30h], edx
xor     [ecx+ebp*8+34h], eax
mov     esi, [ecx+ebp*8+24h]
mov     edx, esi
and     edx, [ecx+ebp*8+44h]
xor     edx, ds:dword_37b01924[ebx*8]
mov     edi, [ecx+ebp*8+20h]
mov     eax, edi
and     eax, [ecx+ebp*8+40h]
xor     eax, ds:dword_37b01920[ebx*8]
mov     ebp, [ecx+ebp*8+50h]
mov     [esp+28h], edx
mov     edx, [esp+10h]
mov     [esp+1ch], eax
mov     eax, [ecx+edx*8+54h]
and     eax, [ecx+edx*8+34h]
and     ebp, [ecx+edx*8+30h]
xor     eax, ds:dword_37b01934[ebx*8]
xor     ebp, ds:dword_37b01930[ebx*8]
mov     edx, [ecx+edx*8+80h]
mov     ebx, [esp+10h]
mov     [esp+24h], eax
and     edx, [ecx+ebx*8+60h]
mov     eax, [ecx+ebx*8+84h]
xor     edx, edi
and     eax, [ecx+ebx*8+64h]
xor     eax, esi
mov     esi, ebx
mov     [ecx+esi*8+20h], edx
mov     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+44h]
not     edx
and     edx, [ecx+esi*8+60h]
not     eax
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
mov     eax, [ecx+esi*8+54h]
not     edx
and     edx, [ecx+esi*8+70h]
not     eax
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     edx, [ecx+esi*8+60h]
and     edx, [ecx+esi*8+20h]
mov     eax, [ecx+esi*8+64h]
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+40h], edx
xor     [ecx+esi*8+44h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+30h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+50h], edx
xor     [ecx+esi*8+54h], eax
mov     edx, [ecx+esi*8+80h]
mov     eax, [ecx+esi*8+84h]
not     edx
and     edx, [ecx+esi*8+20h]
not     eax
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+60h], edx
xor     [ecx+esi*8+64h], eax
mov     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+94h]
not     edx
and     edx, [ecx+esi*8+30h]
not     eax
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+70h], edx
xor     [ecx+esi*8+74h], eax
mov     edx, [ecx+esi*8+80h]
or      edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+84h]
or      eax, [ecx+esi*8+44h]
xor     [ecx+esi*8+20h], edx
xor     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+50h]
or      edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+54h]
or      eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
and     edx, [ecx+esi*8+60h]
mov     eax, [ecx+esi*8+44h]
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
and     edx, [ecx+esi*8+70h]
mov     eax, [ecx+esi*8+54h]
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     ebx, [esp+28h]
mov     eax, ebx
and     eax, [ecx+esi*8+24h]
mov     edx, [esp+1ch]
and     edx, [ecx+esi*8+20h]
xor     [ecx+esi*8+40h], edx
mov     edx, ebp
xor     [ecx+esi*8+44h], eax
and     edx, [ecx+esi*8+30h]
mov     edi, [esp+10h]
mov     esi, [esp+24h]
mov     eax, esi
and     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+50h], edx
mov     edx, edi
mov     edi, [esp+1ch]
xor     [ecx+edx*8+54h], eax
xor     [ecx+edx*8+60h], edi
mov     edi, edx
xor     [ecx+edi*8+64h], ebx
xor     [ecx+edi*8+70h], ebp
xor     [ecx+edi*8+74h], esi
mov     eax, [ecx+edi*8+40h]
xor     [ecx+edi*8+30h], eax
mov     eax, [ecx+edi*8+44h]
xor     [ecx+edi*8+34h], eax
mov     eax, [ecx+edi*8+60h]
xor     [ecx+edi*8+50h], eax
mov     eax, [ecx+edi*8+64h]
xor     [ecx+edi*8+54h], eax
mov     edx, [ecx+edi*8+80h]
xor     edx, [ecx+edi*8+70h]
xor     edx, [ecx+edi*8+20h]
mov     eax, [ecx+edi*8+84h]
xor     eax, [ecx+edi*8+74h]
xor     eax, [ecx+edi*8+24h]
mov     [ecx+edi*8+74h], eax
mov     [ecx+edi*8+70h], edx
mov     eax, [ecx+edi*8+20h]
xor     [ecx+edi*8+90h], eax
mov     eax, [ecx+edi*8+24h]
xor     [ecx+edi*8+94h], eax
mov     eax, [ecx+edi*8+50h]
xor     [ecx+edi*8+20h], eax
mov     eax, [ecx+edi*8+54h]
xor     [ecx+edi*8+24h], eax
mov     eax, [ecx+edi*8+70h]
xor     [ecx+edi*8+40h], eax
mov     eax, [ecx+edi*8+74h]
xor     [ecx+edi*8+44h], eax
mov     edx, [ecx+edi*8+60h]
xor     edx, [ecx+edi*8+90h]
xor     edx, [ecx+edi*8+30h]
mov     eax, [ecx+edi*8+64h]
xor     eax, [ecx+edi*8+94h]
xor     eax, [ecx+edi*8+34h]
mov     [ecx+edi*8+64h], eax
mov     [ecx+edi*8+60h], edx
mov     eax, [ecx+edi*8+30h]
xor     [ecx+edi*8+80h], eax
mov     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+84h], eax
mov     ebp, [ecx+edi*8+30h]
mov     esi, ebp
mov     ebx, [ecx+edi*8+34h]
mov     eax, ebp
mov     edi, ebx
mov     edx, ebx
shrd    esi, edi, 10h
shld    edx, eax, 10h
shr     edi, 10h
xor     edi, edx
shl     eax, 10h
mov     edx, [esp+10h]
xor     esi, eax
shld    ebx, ebp, 10h
and     edi, 0ffffh
movzx   eax, si
xor     edi, ebx
shl     ebp, 10h
mov     [ecx+edx*8+34h], edi
xor     eax, ebp
mov     [ecx+edx*8+30h], eax
mov     ebp, [ecx+edx*8+50h]
mov     esi, ebp
mov     ebx, [ecx+edx*8+54h]
mov     eax, ebp
mov     edi, ebx
mov     edx, ebx
shrd    esi, edi, 10h
shld    edx, eax, 10h
shr     edi, 10h
shl     eax, 10h
xor     edi, edx
mov     edx, [esp+10h]
xor     esi, eax
shld    ebx, ebp, 10h
and     edi, 0ffffh
movzx   eax, si
shl     ebp, 10h
xor     edi, ebx
xor     eax, ebp
mov     [ecx+edx*8+54h], edi
mov     [ecx+edx*8+50h], eax
mov     ebp, [ecx+edx*8+70h]
mov     esi, ebp
mov     ebx, [ecx+edx*8+74h]
mov     edi, ebx
shrd    esi, edi, 10h
shr     edi, 10h
mov     eax, ebp
mov     edx, ebx
shld    edx, eax, 10h
shld    ebx, ebp, 10h
xor     edi, edx
shl     eax, 10h
mov     edx, [esp+10h]
xor     esi, eax
and     edi, 0ffffh
shl     ebp, 10h
xor     edi, ebx
movzx   eax, si
xor     eax, ebp
mov     [ecx+edx*8+74h], edi
mov     [ecx+edx*8+70h], eax
mov     ebp, [ecx+edx*8+90h]
mov     esi, ebp
mov     ebx, [ecx+edx*8+94h]
mov     eax, ebp
mov     edx, ebx
mov     edi, ebx
shld    edx, eax, 10h
shrd    esi, edi, 10h
shl     eax, 10h
shld    ebx, ebp, 10h
xor     esi, eax
shr     edi, 10h
shl     ebp, 10h
xor     edi, edx
movzx   eax, si
and     edi, 0ffffh
xor     eax, ebp
xor     edi, ebx
mov     ebp, [esp+10h]
mov     [ecx+ebp*8+90h], eax
mov     [ecx+ebp*8+94h], edi
add     ebp, 1
mov     [esp+10h], ebp
adc     dword ptr [esp+18h], 0
jnz     short loc_37a8e728
cmp     ebp, 2
jb      loc_37a8e2a0
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     ebp, [esp+28h]
mov     [esp+18h], eax
mov     [esp+10h], ebp
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
mov     edx, [ecx+ebp*8+80h]
mov     eax, [ecx+ebp*8+84h]
not     edx
mov     [ecx+ebp*8+80h], edx
not     eax
mov     [ecx+ebp*8+84h], eax
mov     edx, [ecx+ebp*8+90h]
mov     eax, [ecx+ebp*8+94h]
not     edx
mov     [ecx+ebp*8+90h], edx
not     eax
mov     [ecx+ebp*8+94h], eax
mov     edx, [ecx+ebp*8+60h]
mov     eax, [esp+14h]
not     edx
lea     ebx, ds:0[eax*4]
mov     eax, [ecx+ebp*8+64h]
not     eax
add     ebx, ebp
and     eax, ds:dword_37b01944[ebx*8]
and     edx, ds:dword_37b01940[ebx*8]
xor     [ecx+ebp*8+20h], edx
xor     [ecx+ebp*8+24h], eax
mov     edx, [ecx+ebp*8+70h]
mov     eax, [ecx+ebp*8+74h]
not     edx
and     edx, ds:dword_37b01950[ebx*8]
not     eax
and     eax, ds:dword_37b01954[ebx*8]
xor     [ecx+ebp*8+30h], edx
xor     [ecx+ebp*8+34h], eax
mov     esi, [ecx+ebp*8+24h]
mov     edx, esi
and     edx, [ecx+ebp*8+44h]
xor     edx, ds:dword_37b01944[ebx*8]
mov     edi, [ecx+ebp*8+20h]
mov     eax, edi
and     eax, [ecx+ebp*8+40h]
xor     eax, ds:dword_37b01940[ebx*8]
mov     ebp, [ecx+ebp*8+50h]
mov     [esp+28h], edx
mov     edx, [esp+10h]
mov     [esp+1ch], eax
mov     eax, [ecx+edx*8+54h]
and     eax, [ecx+edx*8+34h]
and     ebp, [ecx+edx*8+30h]
xor     eax, ds:dword_37b01954[ebx*8]
xor     ebp, ds:dword_37b01950[ebx*8]
mov     edx, [ecx+edx*8+80h]
mov     ebx, [esp+10h]
mov     [esp+24h], eax
and     edx, [ecx+ebx*8+60h]
mov     eax, [ecx+ebx*8+84h]
xor     edx, edi
and     eax, [ecx+ebx*8+64h]
xor     eax, esi
mov     esi, ebx
mov     [ecx+esi*8+20h], edx
mov     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+44h]
not     edx
and     edx, [ecx+esi*8+60h]
not     eax
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
mov     eax, [ecx+esi*8+54h]
not     edx
and     edx, [ecx+esi*8+70h]
not     eax
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     edx, [ecx+esi*8+60h]
and     edx, [ecx+esi*8+20h]
mov     eax, [ecx+esi*8+64h]
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+40h], edx
xor     [ecx+esi*8+44h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+30h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+50h], edx
xor     [ecx+esi*8+54h], eax
mov     edx, [ecx+esi*8+80h]
mov     eax, [ecx+esi*8+84h]
not     edx
and     edx, [ecx+esi*8+20h]
not     eax
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+60h], edx
xor     [ecx+esi*8+64h], eax
mov     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+94h]
not     edx
and     edx, [ecx+esi*8+30h]
not     eax
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+70h], edx
xor     [ecx+esi*8+74h], eax
mov     edx, [ecx+esi*8+80h]
or      edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+84h]
or      eax, [ecx+esi*8+44h]
xor     [ecx+esi*8+20h], edx
xor     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+50h]
or      edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+54h]
or      eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
and     edx, [ecx+esi*8+60h]
mov     eax, [ecx+esi*8+44h]
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
and     edx, [ecx+esi*8+70h]
mov     eax, [ecx+esi*8+54h]
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     ebx, [esp+28h]
mov     eax, ebx
and     eax, [ecx+esi*8+24h]
mov     edx, [esp+1ch]
and     edx, [ecx+esi*8+20h]
xor     [ecx+esi*8+40h], edx
mov     edx, ebp
xor     [ecx+esi*8+44h], eax
and     edx, [ecx+esi*8+30h]
mov     edi, [esp+10h]
mov     esi, [esp+24h]
mov     eax, esi
and     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+50h], edx
mov     edx, edi
mov     edi, [esp+1ch]
xor     [ecx+edx*8+54h], eax
xor     [ecx+edx*8+60h], edi
xor     [ecx+edx*8+64h], ebx
xor     [ecx+edx*8+70h], ebp
mov     ebp, edx
xor     [ecx+ebp*8+74h], esi
mov     eax, [ecx+ebp*8+40h]
xor     [ecx+ebp*8+30h], eax
mov     eax, [ecx+ebp*8+44h]
xor     [ecx+ebp*8+34h], eax
mov     eax, [ecx+ebp*8+60h]
xor     [ecx+ebp*8+50h], eax
mov     eax, [ecx+ebp*8+64h]
xor     [ecx+ebp*8+54h], eax
mov     edx, [ecx+ebp*8+80h]
xor     edx, [ecx+ebp*8+70h]
xor     edx, [ecx+ebp*8+20h]
mov     eax, [ecx+ebp*8+84h]
xor     eax, [ecx+ebp*8+74h]
xor     eax, [ecx+ebp*8+24h]
mov     [ecx+ebp*8+74h], eax
mov     [ecx+ebp*8+70h], edx
mov     eax, [ecx+ebp*8+20h]
xor     [ecx+ebp*8+90h], eax
mov     eax, [ecx+ebp*8+24h]
xor     [ecx+ebp*8+94h], eax
mov     eax, [ecx+ebp*8+50h]
xor     [ecx+ebp*8+20h], eax
mov     eax, [ecx+ebp*8+54h]
xor     [ecx+ebp*8+24h], eax
mov     eax, [ecx+ebp*8+70h]
xor     [ecx+ebp*8+40h], eax
mov     eax, [ecx+ebp*8+74h]
xor     [ecx+ebp*8+44h], eax
mov     edx, [ecx+ebp*8+60h]
xor     edx, [ecx+ebp*8+90h]
mov     eax, [ecx+ebp*8+64h]
xor     eax, [ecx+ebp*8+94h]
xor     eax, [ecx+ebp*8+34h]
xor     edx, [ecx+ebp*8+30h]
mov     [ecx+ebp*8+64h], eax
mov     [ecx+ebp*8+60h], edx
mov     eax, [ecx+ebp*8+30h]
xor     [ecx+ebp*8+80h], eax
mov     eax, [ecx+ebp*8+34h]
xor     [ecx+ebp*8+84h], eax
xor     eax, eax
or      eax, [ecx+ebp*8+30h]
mov     edx, [ecx+ebp*8+34h]
mov     [ecx+ebp*8+34h], eax
xor     eax, eax
mov     [ecx+ebp*8+30h], edx
or      eax, [ecx+ebp*8+50h]
mov     edx, [ecx+ebp*8+54h]
mov     [ecx+ebp*8+54h], eax
xor     eax, eax
mov     [ecx+ebp*8+50h], edx
or      eax, [ecx+ebp*8+70h]
mov     edx, [ecx+ebp*8+74h]
mov     [ecx+ebp*8+74h], eax
xor     eax, eax
mov     [ecx+ebp*8+70h], edx
or      eax, [ecx+ebp*8+90h]
mov     edx, [ecx+ebp*8+94h]
mov     [ecx+ebp*8+90h], edx
mov     [ecx+ebp*8+94h], eax
add     ebp, 1
mov     [esp+10h], ebp
adc     dword ptr [esp+18h], 0
jnz     short loc_37a8eb18
cmp     ebp, 2
jb      loc_37a8e750
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     eax, [esp+2ch]
mov     ebp, [esp+28h]
mov     [esp+18h], eax
mov     [esp+10h], ebp
nop     dword ptr [eax+00h]
nop     word ptr [eax+eax+00000000h]
mov     edx, [ecx+ebp*8+80h]
mov     eax, [ecx+ebp*8+84h]
not     edx
mov     [ecx+ebp*8+80h], edx
not     eax
mov     [ecx+ebp*8+84h], eax
mov     edx, [ecx+ebp*8+90h]
mov     eax, [ecx+ebp*8+94h]
not     edx
mov     [ecx+ebp*8+90h], edx
not     eax
mov     [ecx+ebp*8+94h], eax
mov     edx, [ecx+ebp*8+60h]
mov     eax, [esp+14h]
not     edx
lea     ebx, ds:0[eax*4]
mov     eax, [ecx+ebp*8+64h]
not     eax
add     ebx, ebp
and     eax, ds:dword_37b01964[ebx*8]
and     edx, ds:dword_37b01960[ebx*8]
xor     [ecx+ebp*8+20h], edx
xor     [ecx+ebp*8+24h], eax
mov     edx, [ecx+ebp*8+70h]
mov     eax, [ecx+ebp*8+74h]
not     edx
and     edx, ds:dword_37b01970[ebx*8]
not     eax
and     eax, ds:dword_37b01974[ebx*8]
xor     [ecx+ebp*8+30h], edx
xor     [ecx+ebp*8+34h], eax
mov     esi, [ecx+ebp*8+24h]
mov     edx, esi
and     edx, [ecx+ebp*8+44h]
xor     edx, ds:dword_37b01964[ebx*8]
mov     edi, [ecx+ebp*8+20h]
mov     eax, edi
and     eax, [ecx+ebp*8+40h]
xor     eax, ds:dword_37b01960[ebx*8]
mov     ebp, [ecx+ebp*8+50h]
mov     [esp+28h], edx
mov     edx, [esp+10h]
mov     [esp+1ch], eax
mov     eax, [ecx+edx*8+54h]
and     eax, [ecx+edx*8+34h]
and     ebp, [ecx+edx*8+30h]
xor     eax, ds:dword_37b01974[ebx*8]
xor     ebp, ds:dword_37b01970[ebx*8]
mov     edx, [ecx+edx*8+80h]
mov     ebx, [esp+10h]
mov     [esp+24h], eax
and     edx, [ecx+ebx*8+60h]
mov     eax, [ecx+ebx*8+84h]
xor     edx, edi
and     eax, [ecx+ebx*8+64h]
xor     eax, esi
mov     esi, ebx
mov     [ecx+esi*8+20h], edx
mov     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+44h]
not     edx
and     edx, [ecx+esi*8+60h]
not     eax
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
mov     eax, [ecx+esi*8+54h]
not     edx
and     edx, [ecx+esi*8+70h]
not     eax
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     edx, [ecx+esi*8+60h]
and     edx, [ecx+esi*8+20h]
mov     eax, [ecx+esi*8+64h]
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+40h], edx
xor     [ecx+esi*8+44h], eax
mov     edx, [ecx+esi*8+70h]
and     edx, [ecx+esi*8+30h]
mov     eax, [ecx+esi*8+74h]
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+50h], edx
xor     [ecx+esi*8+54h], eax
mov     edx, [ecx+esi*8+80h]
mov     eax, [ecx+esi*8+84h]
not     edx
and     edx, [ecx+esi*8+20h]
not     eax
and     eax, [ecx+esi*8+24h]
xor     [ecx+esi*8+60h], edx
xor     [ecx+esi*8+64h], eax
mov     edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+94h]
not     edx
and     edx, [ecx+esi*8+30h]
not     eax
and     eax, [ecx+esi*8+34h]
xor     [ecx+esi*8+70h], edx
xor     [ecx+esi*8+74h], eax
mov     edx, [ecx+esi*8+80h]
or      edx, [ecx+esi*8+40h]
mov     eax, [ecx+esi*8+84h]
or      eax, [ecx+esi*8+44h]
xor     [ecx+esi*8+20h], edx
xor     [ecx+esi*8+24h], eax
mov     edx, [ecx+esi*8+50h]
or      edx, [ecx+esi*8+90h]
mov     eax, [ecx+esi*8+54h]
or      eax, [ecx+esi*8+94h]
xor     [ecx+esi*8+30h], edx
xor     [ecx+esi*8+34h], eax
mov     edx, [ecx+esi*8+40h]
and     edx, [ecx+esi*8+60h]
mov     eax, [ecx+esi*8+44h]
and     eax, [ecx+esi*8+64h]
xor     [ecx+esi*8+80h], edx
xor     [ecx+esi*8+84h], eax
mov     edx, [ecx+esi*8+50h]
and     edx, [ecx+esi*8+70h]
mov     eax, [ecx+esi*8+54h]
and     eax, [ecx+esi*8+74h]
xor     [ecx+esi*8+90h], edx
xor     [ecx+esi*8+94h], eax
mov     ebx, [esp+28h]
mov     eax, ebx
and     eax, [ecx+esi*8+24h]
mov     edx, [esp+1ch]
and     edx, [ecx+esi*8+20h]
xor     [ecx+esi*8+40h], edx
mov     edx, ebp
xor     [ecx+esi*8+44h], eax
and     edx, [ecx+esi*8+30h]
mov     edi, [esp+10h]
mov     esi, [esp+24h]
mov     eax, esi
and     eax, [ecx+edi*8+34h]
xor     [ecx+edi*8+50h], edx
mov     edx, edi
mov     edi, [esp+1ch]
xor     [ecx+edx*8+54h], eax
xor     [ecx+edx*8+60h], edi
xor     [ecx+edx*8+64h], ebx
xor     [ecx+edx*8+70h], ebp
mov     ebp, edx
xor     [ecx+ebp*8+74h], esi
mov     eax, [ecx+ebp*8+40h]
xor     [ecx+ebp*8+30h], eax
mov     eax, [ecx+ebp*8+44h]
xor     [ecx+ebp*8+34h], eax
mov     eax, [ecx+ebp*8+60h]
xor     [ecx+ebp*8+50h], eax
mov     eax, [ecx+ebp*8+64h]
xor     [ecx+ebp*8+54h], eax
mov     edx, [ecx+ebp*8+80h]
xor     edx, [ecx+ebp*8+70h]
mov     eax, [ecx+ebp*8+84h]
xor     eax, [ecx+ebp*8+74h]
xor     eax, [ecx+ebp*8+24h]
xor     edx, [ecx+ebp*8+20h]
mov     [ecx+ebp*8+74h], eax
mov     [ecx+ebp*8+70h], edx
mov     eax, [ecx+ebp*8+20h]
xor     [ecx+ebp*8+90h], eax
mov     eax, [ecx+ebp*8+24h]
xor     [ecx+ebp*8+94h], eax
mov     eax, [ecx+ebp*8+50h]
xor     [ecx+ebp*8+20h], eax
mov     eax, [ecx+ebp*8+54h]
xor     [ecx+ebp*8+24h], eax
mov     eax, [ecx+ebp*8+70h]
xor     [ecx+ebp*8+40h], eax
mov     eax, [ecx+ebp*8+74h]
xor     [ecx+ebp*8+44h], eax
mov     edx, [ecx+ebp*8+60h]
xor     edx, [ecx+ebp*8+90h]
mov     eax, [ecx+ebp*8+64h]
xor     eax, [ecx+ebp*8+94h]
xor     eax, [ecx+ebp*8+34h]
xor     edx, [ecx+ebp*8+30h]
mov     [ecx+ebp*8+60h], edx
mov     [ecx+ebp*8+64h], eax
mov     eax, [ecx+ebp*8+30h]
xor     [ecx+ebp*8+80h], eax
mov     eax, [ecx+ebp*8+34h]
xor     [ecx+ebp*8+84h], eax
add     ebp, 1
mov     [esp+10h], ebp
adc     dword ptr [esp+18h], 0
jnz     short loc_37a8eeb4
cmp     ebp, 2
jb      loc_37a8eb40
mov     ebp, 1
mov     dword ptr [esp+1ch], 0
lea     esi, [ebp+2]
mov     edx, ebp
shl     esi, 4
add     esi, ecx
shl     edx, 4
add     edx, ecx
add     ebp, 2
adc     dword ptr [esp+1ch], 0
mov     edi, [esi]
mov     eax, [edx+28h]
mov     ebx, [esi+4]
mov     [esi], eax
mov     eax, [edx+2ch]
mov     [esi+4], eax
mov     [edx+28h], edi
mov     [edx+2ch], ebx
jnz     short loc_37a8eef5
cmp     ebp, 8
jb      short loc_37a8eec1
mov     ebx, [esp+14h]
add     ebx, 7
mov     [esp+14h], ebx
adc     dword ptr [esp+20h], 0
jnz     short loc_37a8ef10
cmp     ebx, 2ah
jb      loc_37a8cfc0
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 24h
retn
movups  xmmword ptr [ebp+10h], xmm0
movups  xmm0, xmmword ptr [ebx+90h]
movups  xmmword ptr [ebp+20h], xmm0
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
cmp     eax, 200h
jnz     short loc_37a8f18a
movups  xmm0, xmmword ptr [ebx+60h]
movups  xmmword ptr [ebp+0], xmm0
movups  xmm0, xmmword ptr [ebx+70h]
movups  xmmword ptr [ebp+10h], xmm0
movups  xmm0, xmmword ptr [ebx+80h]
movups  xmmword ptr [ebp+20h], xmm0
movups  xmm0, xmmword ptr [ebx+90h]
movups  xmmword ptr [ebp+30h], xmm0
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
pop     ecx
retn
into
mov     ds:1958f650h, al
mov     esp, 36872c77h
sub     [edi+68h], ch
jbe     short loc_37a8f148
stosb
insb
adc     bl, [edi]
retn
mov     [esi+58h], ecx
lea     edx, [esi+58h]
push    8
push    1
mov     ecx, esi
mov     dword ptr [esi+5ch], 0
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+0ch], 0
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 0ff000000h
mov     dword ptr [esi+4], 0
call    sub_37a8f1a0
mov     eax, ebx
mov     ecx, 40h
sub     eax, ebp
cmp     eax, 40h
cmovnb  eax, ecx
push    eax
mov     eax, [esp+24h]
add     eax, ebp
push    edi
push    eax
call    _memmove_0
movups  xmm0, xmmword ptr [esp+30h]
mov     ecx, [esp+28h]
add     esp, 14h
inc     ecx
movups  xmmword ptr [edi], xmm0
mov     ebp, ecx
mov     [esp+14h], ecx
movups  xmm0, xmmword ptr [esp+2ch]
shl     ebp, 6
movups  xmmword ptr [edi+10h], xmm0
movups  xmm0, xmmword ptr [esp+3ch]
movups  xmmword ptr [edi+20h], xmm0
movups  xmm0, xmmword ptr [esp+4ch]
movups  xmmword ptr [edi+30h], xmm0
cmp     ebp, ebx
jb      loc_37a93ac7
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 4ch
retn
push    esi
call    __errno
mov     esi, [eax]
mov     eax, [esp+8]
add     eax, 0ffffffe0h
push    eax
call    dword_37b69020
add     esp, 4
call    __errno
mov     [eax], esi
pop     esi
retn
movzx   eax, byte ptr [ecx+3]
sub     esp, 10h
push    esi
push    edi
push    eax
movzx   eax, byte ptr [ecx+2]
mov     edi, edx
push    eax
movzx   eax, byte ptr [ecx+1]
push    eax
movzx   eax, byte ptr [ecx]
push    eax
push    offset unk_37b02034
lea     eax, [esp+1ch]
push    10h
push    eax
call    near ptr sub_37a167e0
add     esp, 1ch
test    eax, eax
jle     short loc_37a93bf6
mov     esi, [esp+1ch]
cmp     eax, esi
jnb     short loc_37a93bf6
push    esi
lea     eax, [esp+0ch]
push    eax
push    edi
call    _strncpy
add     esp, 0ch
mov     byte ptr [edi+esi-1], 0
xor     eax, eax
pop     edi
pop     esi
add     esp, 10h
retn
pop     edi
mov     eax, 0fffff029h
pop     esi
add     esp, 10h
retn
adc     byte ptr [ebx+5bh], 63h
and     [ebp-352cf77eh], al
add     eax, 0e25a1b07h
xlat
xor     [ecx], ebp
and     eax, [esp+0]
adc     ebp, [ebx+esi*2-3094789bh]
outsb
aas
hlt
mov     [ebp-3ce81877h], dh
and     cl, cl
push    esp
add     [esi-11ebb562h], ecx
xchg    eax, esp
retf
mov     word_37b73720, ax
push    ebx
push    esi
push    edi
push    0
mov     edi, offset dword_37b69854
movq    qword_37b73730, xmm0
call    ds:htons
push    25h
push    edi
mov     word_37b73722, ax
call    _strchr
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jz      short loc_37a94496
mov     esi, ebx
mov     eax, 27h
sub     esi, edi
cmp     esi, 28h
cmovnb  esi, eax
lea     eax, [esp+10h]
push    esi
push    edi
push    eax
call    _memmove_0
lea     eax, [ebx+1]
mov     byte ptr [esp+esi+1ch], 0
push    eax
lea     edi, [esp+20h]
call    sub_37ac151e
add     esp, 10h
mov     dword_37b73738, eax
push    25h
push    edi
mov     ebx, edi
call    _strchr
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_37a944d4
sub     esi, edi
lea     ebx, [esp+38h]
cmp     esi, 2dh
jle     short loc_37a944c0
pop     edi
pop     esi
mov     eax, 0fffff019h
pop     ebx
add     esp, 5ch
retn
push    esi
lea     eax, [esp+3ch]
push    edi
push    eax
call    _memmove_0
add     esp, 0ch
mov     byte ptr [esp+esi+38h], 0
mov     edx, offset dword_37b73728
mov     ecx, ebx
call    sub_37a93cd0
pop     edi
pop     esi
pop     ebx
add     esp, 5ch
retn
push    ecx
mov     eax, dword_37b734d0
test    eax, eax
jnz     short loc_37a94556
call    sub_37a94db0
test    eax, eax
jz      short loc_37a94547
xor     eax, eax
pop     ecx
retn
mov     dword_37b734d0, offset dword_37b734d8
mov     eax, offset dword_37b734d8
pop     ecx
retn
push    edi
mov     edi, [esp+8]
lea     eax, [edi+10h]
cmp     eax, [eax]
jz      short loc_37a94573
mov     eax, 0fffff00eh
pop     edi
retn
mov     eax, [edi+8]
lea     ecx, [edi+8]
cmp     eax, ecx
jz      short loc_37a9458c
nop     dword ptr [eax]
test    byte ptr [eax+1ch], 80h
jz      short loc_37a9456c
mov     eax, [eax]
cmp     eax, ecx
jnz     short loc_37a94580
push    ebx
push    ebp
push    esi
push    offset stru_37b735d8
call    ds:entercriticalsection
mov     edx, dword_37b735f4
xor     ecx, ecx
mov     ebx, dword_37b734d4
test    edx, edx
jle     short loc_37a945ba
nop     dword ptr [eax+00h]
cmp     [ebx+ecx*4], edi
jz      short loc_37a945ba
inc     ecx
cmp     ecx, edx
jl      short loc_37a945b0
cmp     ecx, edx
jz      short loc_37a9463a
mov     eax, [ebx+edx*4-4]
mov     [ebx+ecx*4], eax
lea     ecx, [edx-1]
mov     dword ptr [ebx+edx*4-4], 0
mov     dword_37b735f4, ecx
test    ecx, ecx
jnz     short loc_37a94604
mov     dword_37b735f0, ecx
call    __errno
push    ebx
mov     esi, [eax]
call    dword_37b69020
add     esp, 4
call    __errno
mov     dword_37b734d4, 0
mov     [eax], esi
jmp     short loc_37a9463a
mov     eax, dword_37b735f0
cmp     eax, 20h
jl      short loc_37a9463a
cdq
sub     eax, edx
mov     esi, eax
sar     esi, 1
cmp     ecx, esi
jge     short loc_37a9463a
lea     ecx, ds:0[esi*4]
push    ecx
push    ebx
call    dword_37b69018
add     esp, 8
test    eax, eax
jz      short loc_37a9463a
mov     dword_37b734d4, eax
mov     dword_37b735f0, esi
push    offset stru_37b735d8
call    ds:leavecriticalsection
mov     ecx, [edi+0b4h]
mov     eax, ecx
and     eax, 60h
mov     dword ptr [edi+94h], 0
cmp     al, 60h
jz      short loc_37a9466d
mov     eax, [edi+8ch]
inc     dword ptr [eax+4]
mov     ecx, [edi+0b4h]
mov     eax, [edi+98h]
and     ecx, 0ffffffbfh
or      ecx, 1
mov     [edi+0b4h], ecx
mov     ecx, [edi+9ch]
mov     [ecx], eax
mov     ecx, [edi+98h]
mov     eax, [edi+9ch]
mov     [ecx+4], eax
mov     eax, [edi+8ch]
dec     dword ptr [eax+4]
or      dword ptr [edi+0b4h], 2
mov     ecx, [edi+94h]
test    ecx, ecx
jz      short loc_37a946bc
lea     eax, [edi+88h]
push    eax
call    ecx
add     esp, 4
mov     ebp, ds:closesocket
lea     esi, [edi+4ch]
mov     ebx, 3
nop     word ptr [eax+eax+00h]
mov     eax, [esi]
test    eax, eax
jz      short loc_37a946de
cmp     eax, 0ffffffffh
jz      short loc_37a946de
push    eax
call    ebp
add     esi, 4
sub     ebx, 1
jnz     short loc_37a946d0
lea     esi, [edi+70h]
push    esi
call    ds:entercriticalsection
push    esi
call    ds:leavecriticalsection
push    esi
call    ds:deletecriticalsection
push    dword ptr [edi+1ch]
call    ds:closehandle
mov     eax, dword_37b734d0
xor     ecx, ecx
cmp     edi, eax
pop     esi
pop     ebp
cmovz   eax, ecx
pop     ebx
mov     dword_37b734d0, eax
xor     eax, eax
pop     edi
retn
mov     dword ptr [edx+2ch], 20h
lea     eax, [ecx+8]
mov     [edx+4], ecx
mov     dword ptr [edx+8], 1
mov     [edx+10h], eax
mov     eax, [ecx+0ch]
push    esi
lea     esi, [edx+10h]
mov     [edx+14h], eax
mov     [eax], esi
mov     eax, [esp+4+arg_0]
mov     [ecx+0ch], esi
mov     dword ptr [edx+18h], 0ffffffffh
mov     [edx+6ch], eax
mov     byte ptr [edx+70h], 0
mov     dword ptr [edx+34h], 10h
mov     dword ptr [edx+50h], 0
mov     [edx+30h], edx
mov     eax, [edx+2ch]
pop     esi
test    al, 40h
jnz     short loc_37a94781
or      eax, 40h
mov     [edx+2ch], eax
test    al, 20h
jz      short loc_37a94781
mov     eax, [edx+4]
inc     dword ptr [eax+4]
xor     eax, eax
retn
sub     esp, 0ch
push    ebx
mov     ebx, ecx
push    ebp
push    esi
push    edi
mov     eax, [ebx+28h]
test    eax, eax
jnz     short loc_37a947a8
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 0ch
retn
mov     ecx, [eax+38h]
mov     ebp, ecx
mov     [esp+14h], ecx
mov     dword ptr [ebx+28h], 0
test    ecx, ecx
jz      loc_37a94c86
mov     edx, ds:setsockopt
mov     eax, [ebp+38h]
mov     esi, ebp
xor     ebp, ebp
cmp     eax, ecx
cmovnz  ebp, eax
mov     eax, [esi+4]
add     eax, 0fffffffeh
cmp     eax, 0fh
ja      def_37a947e1
jmp     ds:jpt_37a947e1[eax*4]
mov     edx, [esi]
cmp     dword ptr [edx+8], 0ch
jnz     def_37a947e1
push    esi
mov     ecx, ebx
call    sub_37a98ad0
jmp     loc_37a94c71
mov     edx, [esi+44h]
cmp     dword ptr [edx+8], 0ch
jnz     def_37a947e1
push    esi
mov     ecx, ebx
call    loc_37a98dc0
jmp     loc_37a94c71
mov     edi, [esi]
cmp     dword ptr [edi+8], 0ch
jnz     def_37a947e1
mov     ecx, [esi+3ch]
cmp     ecx, 0ffffffffh
jnz     short loc_37a94895
mov     eax, [edi+2ch]
test    eax, 800h
jz      loc_37a948fd
mov     ecx, eax
and     ecx, 0fffff7ffh
add     dword ptr [edi+40h], 0ffffffffh
mov     [edi+2ch], ecx
jnz     short loc_37a94869
test    cl, 1
jnz     short loc_37a94869
test    al, 40h
jz      short loc_37a94869
and     eax, 0fffff7bfh
mov     [edi+2ch], eax
test    al, 20h
jz      short loc_37a94869
mov     eax, [edi+4]
dec     dword ptr [eax+4]
mov     eax, [edi+88h]
mov     [esp+18h], eax
test    eax, eax
jz      loc_37a948fd
mov     ecx, [esi+20h]
call    sub_37a9a200
mov     ecx, eax
call    sub_37a95940
push    eax
push    edi
call    dword ptr [esp+20h]
add     esp, 8
jmp     short loc_37a948fd
cmp     dword ptr [esi+20h], 0
jl      short loc_37a948db
push    4
lea     eax, [edi+90h]
push    eax
push    700bh
push    0ffffh
push    ecx
call    edx
test    eax, eax
jnz     short loc_37a948db
mov     eax, [edi+0a0h]
mov     [esi+168h], eax
mov     eax, [edi+88h]
mov     [edi+0a0h], esi
test    eax, eax
jz      short loc_37a948fd
push    0
push    edi
call    eax
add     esp, 8
jmp     short loc_37a948fd
push    dword ptr [esi+3ch]
call    ds:closesocket
mov     dword ptr [esi+3ch], 0ffffffffh
test    dword ptr [edi+2ch], 800h
jz      short loc_37a948fd
mov     edx, esi
mov     ecx, edi
call    sub_37a98510
mov     ecx, [edi+3ch]
mov     eax, [edi+2ch]
dec     ecx
mov     [edi+3ch], ecx
test    al, 1
jz      loc_37a94c74
test    ecx, ecx
jnz     loc_37a94c74
mov     ecx, [esp+14h]
test    al, 8
jnz     def_37a947e1
or      eax, 8
mov     [edi+2ch], eax
mov     eax, [ebx+2ch]
mov     [edi+28h], eax
mov     [ebx+2ch], edi
jmp     def_37a947e1
mov     edi, [esi+40h]
cmp     dword ptr [edi+8], 0ch
jnz     def_37a947e1
add     dword ptr [edi+40h], 0ffffffffh
jnz     short loc_37a94965
mov     eax, [edi+2ch]
test    al, 1
jnz     short loc_37a94965
test    al, 40h
jz      short loc_37a94965
and     eax, 0ffffffbfh
mov     [edi+2ch], eax
test    al, 20h
jz      short loc_37a94965
mov     eax, [edi+4]
dec     dword ptr [eax+4]
mov     ecx, [esi+0ch]
mov     eax, [esi+8]
mov     dword ptr [esp+18h], 0
mov     [ecx], eax
mov     ecx, [esi+8]
mov     eax, [esi+0ch]
mov     [ecx+4], eax
mov     ecx, [esi+20h]
test    ecx, ecx
js      short loc_37a949e0
push    0
push    0
push    7010h
push    0ffffh
push    dword ptr [edi+90h]
call    edx
test    eax, eax
jnz     short loc_37a949d8
or      dword ptr [edi+2ch], 19000h
mov     [edi+88h], eax
mov     [edi+64h], eax
mov     [edi+80h], eax
mov     [edi+8ch], eax
mov     eax, [esp+18h]
mov     dword ptr [edi+48h], 0eh
mov     dword ptr [edi+84h], 0ffffffffh
mov     [edi+44h], edi
inc     dword ptr [ebx+58h]
jmp     short loc_37a949e5
call    ds:wsagetlasterror
jmp     short loc_37a949e5
call    sub_37a9a200
mov     ecx, eax
call    sub_37a95940
push    eax
mov     eax, [esi+3ch]
push    esi
call    eax
mov     ecx, [edi+3ch]
add     esp, 8
mov     eax, [edi+2ch]
dec     ecx
mov     [edi+3ch], ecx
test    al, 1
jz      loc_37a94c74
test    ecx, ecx
jnz     loc_37a94c74
mov     ecx, [esp+14h]
test    al, 8
jnz     def_37a947e1
or      eax, 8
mov     [edi+2ch], eax
mov     eax, [ebx+2ch]
mov     [edi+28h], eax
mov     [ebx+2ch], edi
jmp     def_37a947e1
mov     edx, [esi+3ch]
mov     ecx, ebx
push    esi
call    sub_37a96ba0
jmp     loc_37a94c71
mov     edx, [esi]
mov     ecx, ebx
push    esi
call    loc_37a99a60
jmp     loc_37a94c71
mov     edi, [esi+3ch]
mov     eax, [esi+34h]
sub     [edi+30h], eax
dec     dword ptr [edi+34h]
add     dword ptr [edi+40h], 0ffffffffh
jnz     short loc_37a94a7c
mov     eax, [edi+2ch]
test    al, 1
jnz     short loc_37a94a7c
test    al, 40h
jz      short loc_37a94a7c
and     eax, 0ffffffbfh
mov     [edi+2ch], eax
test    al, 20h
jz      short loc_37a94a7c
mov     eax, [edi+4]
dec     dword ptr [eax+4]
mov     ecx, [esi+0ch]
mov     eax, [esi+8]
mov     [ecx], eax
mov     ecx, [esi+8]
mov     eax, [esi+0ch]
mov     [ecx+4], eax
mov     eax, [esi+40h]
mov     [esp+18h], eax
test    eax, eax
jz      short loc_37a94ab6
mov     ecx, [esi+20h]
xor     eax, eax
test    ecx, ecx
jns     short loc_37a94aa6
call    sub_37a9a200
mov     ecx, eax
call    sub_37a95940
push    eax
push    esi
call    dword ptr [esp+20h]
add     esp, 8
mov     ecx, [edi+3ch]
mov     eax, [edi+2ch]
dec     ecx
mov     [edi+3ch], ecx
test    al, 1
jz      loc_37a94c74
test    ecx, ecx
jnz     loc_37a94c74
test    al, 8
jnz     loc_37a94c74
or      eax, 8
mov     [edi+2ch], eax
mov     eax, [ebx+2ch]
mov     [edi+28h], eax
mov     [ebx+2ch], edi
jmp     loc_37a94c74
mov     ecx, [esi]
mov     eax, [ecx+2ch]
mov     byte ptr [ecx+70h], 0
test    al, 1
jz      short loc_37a94b15
test    al, 8
jnz     loc_37a94c74
or      eax, 8
mov     [ecx+2ch], eax
mov     eax, [ebx+2ch]
mov     [ecx+28h], eax
mov     [ebx+2ch], ecx
jmp     loc_37a94c74
mov     eax, [ecx+6ch]
test    eax, eax
jz      loc_37a94c74
push    ecx
call    eax
jmp     loc_37a94c71
mov     esi, [esi]
push    0
lea     eax, [esi+84h]
push    eax
call    ds:interlockedexchange
cmp     eax, [esi+34h]
jnz     short loc_37a94b48
push    eax
mov     eax, [esi+30h]
push    esi
call    eax
add     esp, 8
mov     ecx, [esi+2ch]
test    ecx, 100h
jz      short loc_37a94b5f
push    esi
call    loc_37a97d70
mov     ecx, [esi+2ch]
add     esp, 4
mov     eax, ecx
and     al, 9
cmp     al, 1
jnz     loc_37a94c74
or      ecx, 8
mov     [esi+2ch], ecx
mov     eax, [ebx+2ch]
mov     [esi+28h], eax
mov     [ebx+2ch], esi
jmp     loc_37a94c74
mov     edi, [esi]
test    dword ptr [edi+2ch], 2000000h
jnz     short loc_37a94b99
push    esi
mov     edx, edi
mov     ecx, ebx
call    near ptr nullsub_8
jmp     loc_37a94c71
lea     eax, [edi+80h]
cmp     esi, eax
jnz     short loc_37a94bb2
mov     al, [edi+0fah]
mov     byte ptr [edi+0f8h], 0
jmp     short loc_37a94bcd
lea     eax, [edi+0bch]
cmp     esi, eax
jnz     def_37a947e1
mov     al, [edi+0fbh]
mov     byte ptr [edi+0f9h], 0
mov     ecx, [esi+20h]
mov     dl, [edi+0fch]
test    ecx, ecx
jns     short loc_37a94bf8
test    dl, dl
jz      short loc_37a94c15
push    ecx
call    dword_37b73774
push    0
mov     ecx, eax
mov     byte ptr [edi+0fch], 0
call    sub_37a95940
push    eax
jmp     short loc_37a94c0c
mov     ecx, [esi+24h]
movzx   eax, al
not     eax
and     ecx, eax
movzx   eax, dl
and     ecx, eax
jz      short loc_37a94c15
push    ecx
push    0
mov     eax, [edi+30h]
push    edi
call    eax
add     esp, 0ch
mov     dh, [edi+0f9h]
mov     dl, [edi+0f8h]
movzx   ecx, dl
movzx   eax, dh
or      ecx, eax
not     ecx
test    [edi+0fch], cl
jz      short loc_37a94c3e
mov     edx, edi
mov     ecx, ebx
call    sub_37a97640
jmp     short loc_37a94c74
mov     eax, [edi+2ch]
test    al, 1
jz      short loc_37a94c74
test    dl, dl
jnz     short loc_37a94c74
test    dh, dh
jnz     short loc_37a94c74
mov     ecx, [esp+14h]
test    al, 8
jnz     short def_37a947e1
or      eax, 8
mov     [edi+2ch], eax
mov     eax, [ebx+2ch]
mov     [edi+28h], eax
mov     [ebx+2ch], edi
jmp     short def_37a947e1
push    dword ptr [esi]
mov     edx, esi
mov     ecx, ebx
call    loc_37a95e70
add     esp, 4
mov     ecx, [esp+14h]
mov     edx, ds:setsockopt
test    ebp, ebp
jnz     loc_37a947c6
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
add     esp, 0ch
retn
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
or      ch, al
push    ss
push    ebp
xchg    eax, esi
push    ebx
test    al, 0e5h
pop     eax
dec     esi
fidiv   dword ptr ds:2c8f9cb5h
wait
pop     esi
push    edx
sahf
jb      short near ptr jpt_37a947e1+2ah
test    dword ptr ds:0c3428cb3h, 3ff9d42eh
pop     ecx
sbb     es:[ecx+19h], bh
pop     edi
xor     [esi+79h], esi
retf    3016h
cmp     byte_37b73394, 0
push    esi
push    edi
jnz     short loc_37a94e0c
push    0
push    0
push    1
push    0
call    ds:createeventw
mov     esi, eax
test    esi, esi
jz      loc_37a95014
push    0
push    esi
push    offset destination
call    ds:interlockedcompareexchange
mov     edi, eax
test    edi, edi
jnz     short loc_37a94dfc
call    near ptr sub_37a94ce0
push    esi
call    ds:setevent
mov     byte_37b73394, 1
jmp     short loc_37a94e0c
push    esi
call    ds:closehandle
push    0ffffffffh
push    edi
call    ds:waitforsingleobject
push    1
push    0
push    0
push    0ffffffffh
call    ds:createiocompletionport
mov     hobject, eax
test    eax, eax
jnz     short loc_37a94e32
call    ds:getlasterror
mov     ecx, eax
pop     edi
pop     esi
jmp     sub_37a95940
xorps   xmm0, xmm0
mov     ecx, offset dword_37b734d8
movlpd  qword_37b734f8, xmm0
call    sub_37a990a0
xorps   xmm0, xmm0
mov     dword_37b73540, offset dword_37b73540
push    offset criticalsection
mov     dword_37b73544, offset dword_37b73540
mov     dword_37b734e0, offset dword_37b734e0
mov     dword_37b734e4, offset dword_37b734e0
mov     dword_37b734e8, offset dword_37b734e8
mov     dword_37b734ec, offset dword_37b734e8
mov     dword_37b734dc, 0
mov     dword_37b73500, 0
mov     dword_37b73504, 0
mov     dword_37b73508, 0
mov     dword_37b73510, 0
mov     dword_37b7350c, 0
movups  xmmword_37b73514, xmm0
mov     dword_37b7352c, 0
movq    qword_37b73524, xmm0
mov     dword_37b73530, 0
mov     dword_37b73534, 0
movlpd  qword_37b73538, xmm0
mov     dword_37b734f0, 0
call    ds:initializecriticalsection
push    offset dword_37a942a0
mov     edx, offset dword_37b73560
mov     ecx, offset dword_37b734d8
call    sub_37a94720
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_37a94fa3
test    byte ptr dword_37b7358c, 20h
jz      short loc_37a94f4f
mov     eax, dword_37b7358c
and     eax, 0ffffffdfh
mov     dword_37b7358c, eax
test    al, 1
jnz     short loc_37a94f4f
test    al, 40h
jz      short loc_37a94f4f
mov     eax, dword_37b73564
dec     dword ptr [eax+4]
or      dword_37b7358c, 80h
push    offset stru_37b735d8
call    ds:entercriticalsection
mov     eax, dword_37b735f4
mov     esi, dword_37b735f0
cmp     eax, esi
jnz     short loc_37a94ff1
add     esi, 8
lea     eax, ds:0[esi*4]
push    eax
push    dword_37b734d4
call    dword_37b69018
mov     edx, eax
add     esp, 8
test    edx, edx
jnz     short loc_37a94fc9
push    offset stru_37b735d8
call    ds:leavecriticalsection
mov     esi, 0eh
push    offset criticalsection
call    ds:deletecriticalsection
push    hobject
call    ds:closehandle
mov     hobject, 0ffffffffh
mov     eax, esi
pop     edi
pop     esi
retn
mov     edi, dword_37b735f0
mov     dword_37b734d4, edx
cmp     edi, esi
jge     short loc_37a94fe4
mov     ecx, esi
sub     ecx, edi
xor     eax, eax
lea     edi, [edx+edi*4]
rep stosd
mov     eax, dword_37b735f4
mov     dword_37b735f0, esi
jmp     short loc_37a94ff7
mov     edx, dword_37b734d4
mov     dword ptr [edx+eax*4], offset dword_37b734d8
inc     eax
push    offset stru_37b735d8
mov     dword_37b735f4, eax
call    ds:leavecriticalsection
pop     edi
xor     eax, eax
pop     esi
retn
call    ds:getlasterror
mov     edx, offset dword_37b6934c
mov     ecx, eax
call    sub_37a958b0
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 3ch
push    ebx
push    esi
mov     esi, [ebp+0ch]
xor     ecx, ecx
push    edi
mov     edi, [ebp+8]
mov     eax, esi
push    esi
mov     dword ptr [esp+18h], 0
add     eax, [edi+20h]
mov     [esp+14h], eax
lea     eax, [esp+10h]
adc     ecx, [edi+24h]
push    eax
lea     eax, [esp+28h]
mov     [esp+24h], ecx
push    eax
lea     eax, [esp+30h]
push    eax
push    dword ptr [edi+1ch]
call    ds:getqueuedcompletionstatus
mov     ecx, [esp+0ch]
xorps   xmm1, xmm1
movsd   xmm0, ds:qword_37b03b80
mov     edx, ds:queryperformancecounter
movsd   qword ptr [esp+38h], xmm1
movsd   qword ptr [esp+40h], xmm0
mov     [esp+18h], edx
test    ecx, ecx
jnz     loc_37a9520a
mov     ebx, 1
rol     ebx, 0
nop     word ptr [eax+eax+00h]
call    ds:getlasterror
cmp     eax, 102h
jnz     loc_37a95297
test    esi, esi
jz      loc_37a95290
movsd   xmm0, qword_37b733b8
ucomisd xmm0, qword ptr [esp+38h]
lahf
test    ah, 44h
jp      short loc_37a95160
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     edx, [esp+2ch]
mov     eax, [esp+28h]
jmp     short loc_37a951a0
lea     eax, [esp+30h]
push    eax
call    dword ptr [esp+1ch]
test    eax, eax
jnz     short loc_37a95180
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     edx, [esp+2ch]
mov     eax, [esp+28h]
jmp     short loc_37a951a0
mov     edx, [esp+34h]
mov     ecx, [esp+30h]
call    __ltod3
mulsd   xmm0, qword_37b733b8
mulsd   xmm0, qword ptr [esp+40h]
call    __dtoul3
mov     [edi+20h], eax
mov     [edi+24h], edx
cmp     [esp+1ch], edx
jb      loc_37a95290
mov     ecx, [esp+10h]
ja      short loc_37a951be
cmp     ecx, eax
jbe     loc_37a95290
mov     esi, ecx
mov     ecx, [esp+14h]
sub     esi, eax
test    ecx, ecx
jz      short loc_37a951d0
mov     eax, ebx
ror     eax, 1
jmp     short loc_37a951d2
xor     eax, eax
add     esi, eax
rol     ebx, 1
push    esi
lea     eax, [esp+10h]
inc     ecx
push    eax
lea     eax, [esp+28h]
mov     [esp+1ch], ecx
push    eax
lea     eax, [esp+30h]
push    eax
push    dword ptr [edi+1ch]
call    ds:getqueuedcompletionstatus
mov     ecx, [esp+0ch]
test    ecx, ecx
jz      loc_37a95120
movsd   xmm1, qword ptr [esp+38h]
mov     edx, [esp+18h]
add     ecx, 0ffffffe0h
mov     dword ptr [ecx+38h], 0
mov     eax, [edi+28h]
test    eax, eax
jz      short loc_37a95229
mov     eax, [eax+38h]
mov     [ecx+38h], eax
mov     eax, [edi+28h]
mov     [eax+38h], ecx
jmp     short loc_37a9522c
mov     [ecx+38h], ecx
mov     [edi+28h], ecx
movsd   xmm0, qword_37b733b8
ucomisd xmm0, xmm1
lahf
test    ah, 44h
jp      short loc_37a9525f
xorps   xmm0, xmm0
movlpd  qword ptr [esp+28h], xmm0
mov     edx, [esp+2ch]
mov     eax, [esp+28h]
mov     [edi+20h], eax
mov     [edi+24h], edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     eax, [esp+38h]
push    eax
call    edx
test    eax, eax
jz      short loc_37a95241
mov     edx, [esp+3ch]
mov     ecx, [esp+38h]
call    __ltod3
mulsd   xmm0, qword_37b733b8
mulsd   xmm0, qword ptr [esp+40h]
call    __dtoul3
mov     [edi+20h], eax
mov     [edi+24h], edx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    ds:getlasterror
mov     edx, offset agetqueuedcompl
mov     ecx, eax
call    sub_37a958b0
aas
outsb
dec     eax
push    ebx
pop     es
cmp     ah, [ecx-19h]
mov     edi, 0ceb33c64h
and     ecx, [edi]
push    esi
cmp     al, 80h
nop
jge     short near ptr loc_37a954f7+5
push    ebp
cld
xor     ebp, ds:0dee444a5h
jmp     near ptr 9477e3dbh
mov     eax, [esp+8]
cmp     eax, 7
jz      short loc_37a9584e
cmp     eax, 12h
jnz     short loc_37a958a1
push    esi
push    offset stru_37b735d8
call    ds:entercriticalsection
mov     ecx, dword_37b735f4
xor     esi, esi
test    ecx, ecx
jle     short loc_37a95895
push    edi
mov     edi, ds:postqueuedcompletionstatus
nop     dword ptr [eax]
mov     eax, dword_37b734d4
mov     eax, [eax+esi*4]
mov     eax, [eax+1ch]
cmp     eax, 0ffffffffh
jz      short loc_37a9588f
push    0
push    0
push    0
push    eax
call    edi
mov     ecx, dword_37b735f4
inc     esi
cmp     esi, ecx
jl      short loc_37a95870
pop     edi
push    offset stru_37b735d8
call    ds:leavecriticalsection
pop     esi
xor     eax, eax
retn    0ch
sub     esp, 8
push    ebx
push    esi
push    edi
push    0
push    0
lea     eax, [esp+1ch+buffer]
mov     dword ptr [esp+1ch+buffer], 0
push    eax
push    400h
mov     edi, ecx
mov     ebx, edx
push    edi
push    0
push    1300h
call    ds:formatmessagea
mov     eax, dword ptr [esp+14h+buffer]
mov     esi, offset aunknownerror
test    eax, eax
push    2
cmovnz  esi, eax
call    ___acrt_iob_func
add     esp, 4
push    esi
push    edi
test    ebx, ebx
jz      short loc_37a9590d
push    ebx
push    offset dword_37b690ac
push    eax
call    sub_37a215d0
add     esp, 14h
jmp     short loc_37a9591b
push    offset ads
push    eax
call    sub_37a215d0
add     esp, 10h
mov     eax, dword ptr [esp+14h+buffer]
test    eax, eax
jz      short loc_37a9592a
push    eax
call    ds:localfree
call    ds:debugbreak
call    _abort
test    ecx, ecx
jg      short loc_37a95947
mov     eax, ecx
retn
cmp     ecx, 10bh
jg      loc_37a959e6
jz      loc_37a95b18
dec     ecx
cmp     ecx, 0e8h
ja      loc_37a95b12
movzx   eax, ds:byte_37a95b7c[ecx]
jmp     ds:jpt_37a9596d[eax*4]
mov     eax, 0fffff00dh
retn
mov     eax, 0fffff00eh
retn
mov     eax, 0fffff013h
retn
mov     eax, 0fffff015h
retn
mov     eax, 0fffff016h
retn
mov     eax, 0fffff01eh
retn
mov     eax, 0fffff020h
retn
mov     eax, 0fffff027h
retn
mov     eax, 0fffff029h
retn
mov     eax, 0fffff02dh
retn
mov     eax, 0fffff02fh
retn
mov     eax, 0fffff001h
retn
mov     eax, 0fffff030h
retn
mov     eax, 0fffff031h
retn
mov     eax, 0fffff035h
retn
mov     eax, 0fffff039h
retn
mov     eax, 0fffff03bh
retn
mov     eax, 0fffff01ch
retn
mov     eax, 0fffff003h
retn
cmp     ecx, 1128h
jg      loc_37a95aab
jz      loc_37a95b18
cmp     ecx, 3e3h
jg      short loc_37a95a22
jz      short loc_37a95a1c
cmp     ecx, 115h
jz      short loc_37a959a4
cmp     ecx, 2e4h
jnz     loc_37a95b12
mov     eax, 0fffff004h
retn
mov     eax, 0fffff00fh
retn
cmp     ecx, 522h
jg      short loc_37a95a76
jz      short loc_37a959bc
add     ecx, 0fffffc1ah
cmp     ecx, 0eeh
ja      loc_37a95b12
movzx   eax, byte ptr ds:dword_37a95c94[ecx]
jmp     ds:dword_37a95c68[eax*4]
mov     eax, 0fffff004h
retn
mov     eax, 0fffff010h
retn
mov     eax, 0fffff011h
retn
mov     eax, 0fffff012h
retn
mov     eax, 0fffff017h
retn
mov     eax, 0fffff01ah
retn
mov     eax, 0fffff022h
retn
cmp     ecx, 781h
jg      short loc_37a95a9d
jz      short loc_37a95a97
sub     ecx, 571h
jz      short loc_37a95a6a
sub     ecx, 47h
jnz     loc_37a95b12
mov     eax, 0fffff019h
retn
mov     eax, 0fffff01dh
retn
cmp     ecx, 8cah
jnz     short loc_37a95b12
mov     eax, 0fffff02bh
retn
cmp     ecx, 2af9h
jg      short loc_37a95b0a
jz      short loc_37a95b18
add     ecx, 0ffffd8ech
cmp     ecx, 3dh
ja      short loc_37a95b12
movzx   eax, ds:byte_37a95de4[ecx]
jmp     ds:off_37a95d84[eax*4]
mov     eax, 0fffff005h
retn
mov     eax, 0fffff006h
retn
mov     eax, 0fffff007h
retn
mov     eax, 0fffff008h
retn
mov     eax, 0fffff00ch
retn
mov     eax, 0fffff01bh
retn
mov     eax, 0fffff01fh
retn
mov     eax, 0fffff024h
retn
mov     eax, 0fffff02eh
retn
mov     eax, 0fffff033h
retn
cmp     ecx, 2afch
jz      short loc_37a95b18
mov     eax, 0fffff002h
retn
mov     eax, 0fffff026h
retn
retf
pop     esi
test    al, 0b9h
inc     ebx
jno     short loc_37a95e4b
push    edi
mov     byte ptr [esi-1b12c987h], 95h
scasd
loop    near ptr loc_37a95e8f+1
push    ebp
add     al, 0bah
pop     ecx
cld
insd
das
fldcw   word ptr [eax-6364341ch]
dec     ebx
mov     esp, 8d57320h
adc     dl, ah
dec     ebp
idiv    byte ptr [eax-1880c43fh]
dec     ebp
jge     short loc_37a95e77
inc     esp
repne push edx
mov     cl, 18h
and     al, [ebx]
pusha
push    ds
pop     ds
push    esi
fidiv   dword ptr [ecx+17h]
or      edi, [edi-66f91125h]
xchg    eax, esi
clc
xor     [eax-3], bh
adc     ecx, 45h
add     eax, 4b5b4ed2h
movsd
jns     short loc_37a95e12
jb      short loc_37a95e5b
ror     byte ptr [edx+48h], 1
or      [edx-395f8bd6h], ecx
in      al, dx
add     dh, dl
mov     al, 0b9h
xchg    eax, ebx
inc     esp
or      al, 0ddh
and     [ebx-7c82b16eh], ch
adc     [ebp-35a7c6d9h], cl
jge     short loc_37a95e25
lodsd
xor     ebp, [edi]
enter   2e8fh, 5
push    ecx
jnb     near ptr 3b7621ceh
add     al, 0b8h
sbb     al, [eax+6bc33a73h]
repne bound esp, [ecx-0ch]
and     [edx+edi*4+730c5cd7h], bl
js      short near ptr loc_37a95ebf+3
push    ds
pop     di
mov     ah, [edx]
out     dx, eax
call    small far ptr 0a8bfh:0f82h
jb      short near ptr loc_37a95e91+2
test    eax, 0fd4017c1h
out     dx, al
jg      short near ptr loc_37a95ea8+4
lds     ecx, [ebx-53h]
cmp     [ecx+1bc7e782h], dl
push    es
lock add [ebp-3828f4c2h], eax
sub     [ecx-27106ddh], cl
push    edi
and     al, 69h
fsubr   dword ptr [ecx]
and     bh, [ecx-4fh]
leave
rep and byte ptr [edx-7615970bh], 0cbh
cmp     [eax-293beaf6h], eax
dec     edx
mov     cl, 0fh
aad     0c5h
jnb     short loc_37a95f57
in      al, 2dh
mov     ecx, gs
ror     esp, 2
rol     al, 65h
cmp     al, 1bh
jnb     short loc_37a95efa
scasd
and     dh, ds:0ddc38d31h
or      al, 0d1h
stosd
mov     ecx, 0bafa4fe8h
mov     eax, 0f8c32d4bh
inc     edx
xlat
mov     cl, 31h
mov     ecx, 10f22dceh
sbb     ebx, [ebx]
adc     eax, 0a057fa47h
sub     eax, 224db722h
loopne  loc_37a95f98
mov     ecx, [esi+43h]
jz      short near ptr loc_37a95f57+2
lodsd
aad     25h
mov     cl, [edx]
daa
mov     eax, [edi]
fiadd   word ptr [ecx]
pop     esi
cld
outs    dx, byte ptr ss:[esi]
inc     edx
sub     cl, cl
popf
push    ds
jg      short loc_37a95fdf
arpl    [ecx-3b9183b5h], ax
std
js      short near ptr loc_37a95f63+3
fst     st(3)
xor     [edi+edi*8-38h], edx
jnp     short loc_37a95f8b
daa
mov     bh, dh
jnp     short near ptr loc_37a95fe0+2
cmpsd
outsb
lock jge short loc_37a96014
or      al, 36h
inc     edx
dec     ebp
inc     ecx
dec     esp
mov     ebp, 318df0afh
scasd
mov     ebp, ecx
push    edx
sub     dword ptr [ebx+51h], 0ffffffb9h
retn    5cc5h
popa
or      [ecx+3eaa5ff7h], edx
outsb
jns     short loc_37a96023
dec     esi
inc     eax
add     al, 0b3h
cmp     eax, 22b2223fh
and     [esi+30ccf202h], edi
xor     ch, 9fh
ja      short loc_37a95fc1
sbb     dh, [ebx]
add     edx, 0ffffffafh
pop     ebp
push    ds
mov     bh, 9
or      eax, 0a275de99h
and     al, 0eah
test    byte ptr [eax+6a00c653h], 0fdh
cmp     dl, bl
rcl     ebp, cl
push    edx
jo      short near ptr loc_37a95fb2+1
loop    loc_37a95fd7
cmp     [edx], cl
pop     ecx
in      eax, dx
push    ebp
cmp     al, bh
arpl    [esi+7a000768h], si
and     [esp+eax-50h], cl
out     dx, eax
popf
in      al, 98h
dec     esp
or      eax, ebp
cwde
pop     esi
push    ebp
mov     edi, 0e4317f46h
xchg    eax, ebp
add     ah, al
jno     short loc_37a960a0
adc     [ebp+7], esi
cmp     cl, [ecx+ebp-708b4dbbh]
dec     ebp
std
or      ch, [edx]
inc     esp
xor     esi, ecx
add     al, [ebx+720d2f32h]
ja      short near ptr loc_37a960d0+4
movsb
loop    loc_37a960d0
adc     cl, 7dh
mov     edx, 8923ad99h
hlt
xchg    eax, edx
insb
cmp     dh, [esp+ebx+42h]
cmp     al, 41h
movsb
repne inc esi
rol     byte ptr [eax+esi*2+28h], 3ch
mov     eax, 0c992d266h
xor     al, 4ch
stosb
mov     ecx, 0beb502dah
push    ebp
int     3
jbe     short near ptr loc_37a96057+3
in      al, 0e5h
iret
push    ebp
call    off_37b69014
add     esp, 4
mov     [esp+18h], eax
test    eax, eax
jz      loc_37a9664c
mov     edi, [ebx+64h]
mov     esi, eax
test    edi, edi
jz      loc_37a96647
mov     ebp, ds:widechartomultibyte
mov     eax, [edi+4]
lea     ecx, [esi+10h]
mov     [esi+4], eax
mov     eax, [edi+8]
mov     [esi+8], eax
mov     eax, [edi+0ch]
mov     [esi+0ch], eax
mov     eax, [edi]
mov     [esi], eax
mov     eax, [edi+10h]
mov     [esp+24h], ecx
mov     [ecx], eax
lea     ecx, [esi+14h]
mov     [esp+10h], ecx
mov     dword ptr [ecx], 0
lea     ecx, [esi+18h]
mov     [esp+20h], ecx
mov     dword ptr [ecx], 0
lea     ecx, [esi+1ch]
add     esi, 20h
mov     [esp+14h], ecx
mov     dword ptr [ecx], 0
test    eax, eax
jz      short loc_37a965e2
push    eax
push    dword ptr [edi+18h]
push    esi
call    _memmove_0
mov     eax, [esp+2ch]
add     esp, 0ch
mov     [eax], esi
mov     eax, [esp+24h]
mov     eax, [eax]
add     eax, 3
and     eax, 0fffffffch
add     esi, eax
mov     eax, [edi+14h]
test    eax, eax
jz      short loc_37a9661f
push    0
push    0
push    0
push    0
push    0ffffffffh
push    eax
push    0
push    0fde9h
call    ebp
push    0
push    0
push    eax
push    esi
push    0ffffffffh
push    dword ptr [edi+14h]
push    0
push    0fde9h
call    ebp
mov     ecx, [esp+10h]
add     eax, 3
and     eax, 0fffffffch
mov     [ecx], esi
add     esi, eax
mov     edi, [edi+1ch]
test    edi, edi
jz      short loc_37a96643
mov     eax, [esp+14h]
mov     [eax], esi
jmp     loc_37a96571
add     dh, bl
mov     eax, [esp+18h]
mov     [ebx+68h], eax
jmp     short loc_37a96653
mov     dword ptr [ebx+6ch], 0fffff442h
mov     eax, [ebx+64h]
test    eax, eax
jz      short loc_37a96668
push    eax
call    ds:freeaddrinfow
mov     dword ptr [ebx+64h], 0
mov     ecx, [ebx+0ch]
mov     eax, [ebx+8]
mov     [ecx], eax
mov     ecx, [ebx+8]
mov     eax, [ebx+0ch]
mov     [ecx+4], eax
mov     eax, [ebx+54h]
test    eax, eax
jz      short loc_37a9668c
push    dword ptr [ebx+68h]
push    dword ptr [ebx+6ch]
push    ebx
call    eax
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 0ch
retn
pop     ds
dec     eax
push    ss
sti
jl      short loc_37a9663a
mul     dword ptr [edi+eax*2+52h]
test    dh, ah
pop     ecx
pop     ebx
leave
or      al, 24h
mov     dh, al
ficomp  word ptr [eax]
jbe     short loc_37a96709
retn
inc     edi
mov     ss, word ptr [edi-72e991c5h]
popf
pusha
sar     ah, cl
inc     edx
imul    edx, [ebx+eax], 5e1952dch
sub     edi, ebx
and     ecx, [eax+76f5b5c9h]
adc     al, 4bh
jno     short loc_37a96763
jmp     near ptr 8b5c56d0h
inc     ebp
jo      short near ptr loc_37a96796+1
push    cs
fimul   word ptr [esi]
dec     edx
add     esi, esi
ldmxcsr dword ptr [edi-73h]
mov     bh, 5dh
pop     ds
mov     ds:0eb7591aeh, eax
xchg    eax, ecx
inc     edi
out     dx, eax
into
pslld   mm5, qword ptr [ecx-32h]
fild    qword ptr [edx-13h]
push    edi
mov     cl, 1eh
pop     es
leave
or      ah, al
inc     ecx
cmp     esi, [ecx+2789d061h]
jo      short loc_37a967e9
cmp     ch, [edi-5dh]
jg      short locret_37a967bc
adc     [ecx], esp
cwde
leave
jle     short loc_37a96746
mov     [eax+6dca8419h], bl
popf
jo      short loc_37a96741
xor     ecx, [esi]
imul    edx, [edx+25fd0d11h], 9a359266h
push    ebp
push    eax
daa
setnbe  bh
rcr     dl, cl
pop     edx
pop     esp
call    near ptr 247640bh
cmpsb
loop    near ptr loc_37a96768+5
rcl     dword ptr [edx], 0b7h
retn
xchg    eax, ebp
setalc
jz      short near ptr loc_37a96814+1
or      eax, edi
cli
or      al, 5
rcl     cl, 0c7h
inc     ebx
int     0d3h
mov     ecx, 64463a76h
mov     ebx, 4fb4aa36h
int     0f9h
mov     ebp, 58ad94a4h
movsb
fidiv   word ptr [edi]
xor     edi, esi
movsb
xor     al, [esi]
nop
fdivr   dword ptr [ebp-2eh]
xor     esi, esp
mov     al, ds:1c92c6a2h
arpl    bp, ax
adc     ebx, [esi+18h]
smsw    word ptr [ecx]
int     3
mov     ch, ah
mov     edx, 4a84a58dh
in      al, dx
in      al, 9ah
into
call    far ptr 5384h:5dcf07dh
push    esi
add     eax, 0d6b297b1h
jmp     near ptr 1591cb1bh
repne retf
sub     esp, 8
push    ebx
push    ebp
mov     ebx, edx
push    esi
mov     esi, ecx
push    edi
add     dword ptr [ebx+40h], 0ffffffffh
mov     [esp+18h+var_4], esi
jnz     short loc_37a96bd0
mov     eax, [ebx+2ch]
test    al, 1
jnz     short loc_37a96bd0
test    al, 40h
jz      short loc_37a96bd0
and     eax, 0ffffffbfh
mov     [ebx+2ch], eax
test    al, 20h
jz      short loc_37a96bd0
mov     eax, [ebx+4]
dec     dword ptr [eax+4]
mov     ebp, [esp+18h+arg_0]
mov     ecx, [ebp+0ch]
mov     eax, [ebp+8]
mov     [ecx], eax
mov     ecx, [ebp+8]
mov     eax, [ebp+0ch]
mov     [ecx+4], eax
test    dword ptr [ebx+2ch], 8000h
jz      loc_37a96cda
push    60h
call    off_37b69014
mov     esi, [ebx+4]
mov     edi, eax
mov     [ebx+0a0h], edi
lea     edx, [edi+10h]
add     esp, 4
mov     [edi+4], esi
lea     ecx, [esi+8]
mov     dword ptr [edi+8], 0dh
mov     dword ptr [edi+2ch], 20h
mov     [edx], ecx
mov     eax, [esi+0ch]
mov     [edi+14h], eax
mov     [eax], edx
mov     [esi+0ch], edx
mov     dword ptr [edi+18h], 0ffffffffh
mov     dword ptr [edi+58h], 0
mov     dword ptr [edi+48h], 0
mov     dword ptr [edi+4ch], 0
mov     eax, [ebx+0a0h]
mov     [eax], ebx
mov     ecx, [ebx+0a0h]
mov     eax, [ecx+2ch]
test    al, 20h
jz      short loc_37a96c71
and     eax, 0ffffffdfh
mov     [ecx+2ch], eax
test    al, 1
jnz     short loc_37a96c71
test    al, 40h
jz      short loc_37a96c71
mov     eax, [ecx+4]
dec     dword ptr [eax+4]
test    dword ptr [ebx+2ch], 20000h
jz      short loc_37a96c9a
mov     eax, [ebx+0a0h]
test    eax, eax
jz      short loc_37a96c9a
push    0
push    0
push    0
push    32h
push    offset dword_37a96d10
push    eax
call    sub_37a995c0
add     esp, 18h
mov     esi, [esp+18h+var_4]
mov     eax, [ebp+40h]
test    eax, eax
jz      short loc_37a96cad
push    0
push    ebp
call    eax
add     esp, 8
mov     ecx, [ebx+3ch]
mov     eax, [ebx+2ch]
dec     ecx
mov     [ebx+3ch], ecx
test    al, 1
jz      short loc_37a96cd2
test    ecx, ecx
jnz     short loc_37a96cd2
test    al, 8
jnz     short loc_37a96cd2
or      eax, 8
mov     [ebx+2ch], eax
mov     eax, [esi+2ch]
mov     [ebx+28h], eax
mov     [esi+2ch], ebx
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 8
retn
mov     eax, [ebx+18h]
cmp     eax, 0ffffffffh
jnz     short loc_37a96cf0
push    dword ptr [ebx+94h]
call    ds:closehandle
jmp     short loc_37a96cf9
push    eax
call    sub_37ac2d74
add     esp, 4
mov     dword ptr [ebx+18h], 0ffffffffh
mov     dword ptr [ebx+94h], 0ffffffffh
jmp     short loc_37a96c9e
push    es
inc     edx
mov     word ptr [edi-18331115h], ds
mov     edi, 1d49f7eeh
cmpsd
sbb     al, 0dfh
push    esi
call    __errno
push    dword ptr [esp+8]
mov     esi, [eax]
call    dword_37b69020
add     esp, 4
call    __errno
mov     [eax], esi
pop     esi
retn
push    ebp
push    edi
mov     edi, ecx
mov     ebp, edx
cmp     byte ptr [edi], 0
jnz     short loc_37a96e27
push    esi
push    0
push    0
push    1
push    0
call    ds:createeventw
mov     esi, eax
test    esi, esi
jz      short loc_37a96e2a
push    ebx
push    0
push    esi
lea     eax, [edi+4]
push    eax
call    ds:interlockedcompareexchange
mov     ebx, eax
test    ebx, ebx
jnz     short loc_37a96e15
call    ebp
push    esi
call    ds:setevent
pop     ebx
pop     esi
mov     byte ptr [edi], 1
pop     edi
pop     ebp
retn
push    esi
call    ds:closehandle
push    0ffffffffh
push    ebx
call    ds:waitforsingleobject
pop     ebx
pop     esi
pop     edi
pop     ebp
retn
call    ds:getlasterror
mov     edx, offset dword_37b6934c
mov     ecx, eax
call    sub_37a958b0
push    ebx
mov     ebx, ds:entercriticalsection
push    ebp
push    esi
push    edi
mov     [esp+10h], eax
mov     eax, dword_37b73488
push    offset dword_37b7346c
mov     [esp+18h], eax
call    ebx
inc     dword_37b73468
mov     ebp, ds:leavecriticalsection
push    offset dword_37b7346c
call    ebp
push    offset dword_37b73490
call    ebp
push    0ffffffffh
push    0
lea     eax, [esp+18h]
push    eax
push    2
call    ds:waitformultipleobjects
push    offset dword_37b7346c
mov     esi, eax
call    ebx
mov     ecx, dword_37b73468
dec     ecx
mov     dword_37b73468, ecx
cmp     esi, 1
jnz     short loc_37a97074
test    ecx, ecx
jnz     short loc_37a97074
mov     edi, esi
jmp     short loc_37a97076
xor     edi, edi
push    offset dword_37b7346c
call    ebp
test    edi, edi
jz      short loc_37a9708d
push    dword_37b73488
call    ds:resetevent
push    offset dword_37b73490
call    ebx
test    esi, esi
jz      short loc_37a970b2
cmp     esi, 1
jz      short loc_37a970b2
cmp     esi, 102h
jnz     short loc_37a970bc
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffff039h
pop     ebx
add     esp, 8
retn
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 8
retn
call    _abort
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 24h
push    ebx
mov     ebx, [ebp+8]
push    esi
push    edi
mov     esi, [ebx]
test    byte ptr [esi+0fch], 1
jz      short loc_37a9750b
mov     dword ptr [esp+10h], 1
mov     eax, [esi+34h]
mov     [esp+14h], eax
jmp     short loc_37a97513
mov     dword ptr [esp+10h], 0
test    byte ptr [esi+0fch], 2
jz      short loc_37a9753c
mov     dword ptr [esp+18h], 1
mov     eax, [esi+34h]
mov     [esp+1ch], eax
mov     dword ptr [esp+20h], 1
mov     eax, [esi+34h]
mov     [esp+24h], eax
jmp     short loc_37a9754c
mov     dword ptr [esp+18h], 0
mov     dword ptr [esp+20h], 0
lea     eax, [esp+28h]
mov     dword ptr [esp+28h], 0b4h
push    eax
lea     eax, [esp+24h]
mov     dword ptr [esp+30h], 0
push    eax
lea     eax, [esp+20h]
push    eax
lea     eax, [esp+1ch]
push    eax
push    1
call    ds:select
mov     ecx, eax
cmp     ecx, 0ffffffffh
jnz     short loc_37a975b9
mov     edi, ds:wsagetlasterror
call    edi
test    eax, eax
jg      short loc_37a9758f
call    edi
jmp     short loc_37a97599
call    edi
movzx   eax, ax
or      eax, 80070000h
mov     [esi+0a0h], eax
lea     eax, [ebx+20h]
push    eax
mov     eax, [esi+4]
push    0
push    0
push    dword ptr [eax+1ch]
call    ds:postqueuedcompletionstatus
test    eax, eax
jz      short loc_37a9760e
jmp     short loc_37a97603
xor     al, al
test    ecx, ecx
jle     short loc_37a975df
cmp     dword ptr [esp+10h], 0
mov     ecx, 1
movzx   eax, al
cmova   eax, ecx
cmp     dword ptr [esp+18h], 0
ja      short loc_37a975dd
cmp     dword ptr [esp+20h], 0
jbe     short loc_37a975df
or      al, 2
lea     ecx, [ebx+20h]
movzx   eax, al
push    ecx
mov     dword ptr [ecx], 0
mov     [ebx+24h], eax
mov     eax, [esi+4]
push    0
push    0
push    dword ptr [eax+1ch]
call    ds:postqueuedcompletionstatus
test    eax, eax
jz      short loc_37a97620
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
call    ds:getlasterror
mov     edx, offset dword_37b693dc
mov     ecx, eax
call    sub_37a958b0
call    ds:getlasterror
mov     edx, offset dword_37b693f8
mov     ecx, eax
call    sub_37a958b0
hlt
retn
sub     esp, 8ch
push    ebx
push    ebp
push    esi
push    edi
push    offset stru_37b73630
mov     edi, ecx
xor     ebx, ebx
call    ds:entercriticalsection
mov     esi, dword_37b733ac
xor     edx, edx
test    esi, esi
jz      short loc_37a97bbd
mov     eax, [esi+34h]
cmp     edi, eax
jl      short loc_37a97bb4
jg      short loc_37a97baf
cmp     [esi+4], ebx
ja      short loc_37a97bb4
lea     eax, [esp+9ch+var_8c]
cmp     eax, esi
jb      short loc_37a97bb4
cmp     eax, esi
jbe     short loc_37a97bbf
mov     esi, [esi+3ch]
jmp     short loc_37a97bb9
mov     edx, esi
mov     esi, [esi+38h]
test    esi, esi
jnz     short loc_37a97b95
mov     esi, edx
test    esi, esi
jz      loc_37a97c69
mov     ebp, ds:interlockedexchange
nop     dword ptr [eax]
cmp     [esi+34h], edi
jnz     loc_37a97c69
push    edi
lea     eax, [esi+84h]
push    eax
call    ebp
test    dword ptr [esi+2ch], 200h
jnz     short loc_37a97c1f
test    eax, eax
jnz     short loc_37a97c08
lea     eax, [esi+68h]
push    eax
mov     eax, [esi+4]
push    0
push    0
push    dword ptr [eax+1ch]
call    ds:postqueuedcompletionstatus
test    eax, eax
jz      short loc_37a97c81
mov     eax, [esi+2ch]
mov     ebx, 1
test    eax, 100h
jz      short loc_37a97c1f
or      eax, 200h
mov     [esi+2ch], eax
mov     eax, [esi+3ch]
test    eax, eax
jz      short loc_37a97c3b
mov     esi, eax
mov     eax, [esi+38h]
test    eax, eax
jz      short loc_37a97c61
nop
mov     esi, eax
mov     eax, [esi+38h]
test    eax, eax
jnz     short loc_37a97c30
jmp     short loc_37a97c61
mov     eax, [esi+40h]
test    eax, eax
jz      short loc_37a97c5e
cmp     esi, [eax+38h]
jnz     short loc_37a97c50
mov     esi, eax
jmp     short loc_37a97c61
cmp     esi, [eax+3ch]
jnz     short loc_37a97c5e
mov     esi, eax
mov     eax, [esi+40h]
test    eax, eax
jnz     short loc_37a97c50
mov     esi, [esi+40h]
test    esi, esi
jnz     loc_37a97bd0
push    offset stru_37b73630
call    ds:leavecriticalsection
pop     edi
pop     esi
pop     ebp
mov     eax, ebx
pop     ebx
add     esp, 8ch
retn
call    ds:getlasterror
mov     edx, offset apostqueuedcomp
mov     ecx, eax
call    sub_37a958b0
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
mov     eax, [ebp+8]
sub     eax, 0
jz      short loc_37a97cef
sub     eax, 1
jz      short loc_37a97cdf
sub     eax, 1
jnz     short loc_37a97cd7
lea     ecx, [eax+1]
call    sub_37a97b70
test    eax, eax
jz      short loc_37a97cd7
push    0ffffffffh
call    ds:sleep
mov     eax, 1
mov     esp, ebp
pop     ebp
retn    4
xor     eax, eax
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, 15h
call    sub_37a97b70
mov     esp, ebp
pop     ebp
retn    4
mov     ecx, 2
call    sub_37a97b70
mov     esp, ebp
pop     ebp
retn    4
add     ch, [edi]
push    0ffffff8ah
sbb     [eax+41h], ebx
sbb     al, 1bh
mov     ah, [ebp-3f83409ah]
lodsd
mov     ebp, 14f338fdh
or      eax, [eax+40h]
sub     eax, 67a200c6h
jnz     short loc_37a97dd7
adc     ebp, [ebx]
stosd
inc     edx
mov     esi, 2eb1cea6h
wait
dec     ebx
mov     ch, 71h
test    ebp, eax
sbb     dh, bh
das
sbb     dword ptr [ebp-6ah], 0ffffffd9h
daa
xchg    eax, esp
shl     dword ptr [esi], cl
inc     esi
xor     eax, 403a35f7h
bound   ebp, [esi-5d636dd9h]
mov     word ptr [ebp+ebx*8-21h], fs
out     0e1h, eax
ja      short loc_37a97e0f
dec     ebp
repne or eax, 7eae6c82h
push    1089a893h
push    ecx
adc     al, 68h
iret
push    ecx
out     5bh, eax
test    al, 0ffh
sbb     eax, 0cfe07c42h
rol     eax, 1
icebp
out     58h, al
and     bl, dh
pop     ds
arpl    [ebx+edx*2+6fh], bx
push    5fh
pop     esp
ror     dword ptr [ecx], 0d6h
ror     bl, 1
push    0cb6f302ch
retf    903ah
cmc
daa
enter   0ffff9b5fh, 2dh
retn
sal     dword ptr [ebx+3fh], 1
imul    ebx, edi, 0d7425aaeh
mov     esi, edx
repne retf
push    ecx
call    ds:setsockopt
cmp     eax, 0ffffffffh
jnz     short loc_37a9806c
call    ds:wsagetlasterror
pop     ecx
retn
xor     eax, eax
pop     ecx
retn
sal     cl, cl
add     al, 0dbh
mov     eax, ds:47e898a0h
retf
fild    word ptr [esi]
retf
and     al, 14h
sbb     bh, ch
xchg    eax, ebp
jecxz   short loc_37a98515
fst     qword ptr [eax+39cded35h]
mov     esi, 0d067963eh
cmp     eax, 913d5828h
cmpsb
pop     edx
jb      short loc_37a9853b
rcl     dh, 0e9h
adc     edx, ebx
setalc
add     eax, 31ab7429h
mov     cl, 0f0h
sbb     al, 0fah
popa
cmp     [esi+4280df22h], dl
cmp     al, 35h
sub     ah, [ecx]
pop     esp
imul    ebp, esi, 0bca5dc2eh
std
adc     esi, eax
push    ecx
push    ebx
push    ebp
push    esi
push    edi
mov     edi, ecx
mov     esi, edx
push    0
push    1
mov     eax, [edi+2ch]
mov     ebx, [edi+4]
and     eax, 1000000h
neg     eax
sbb     eax, eax
and     eax, 15h
add     eax, 2
push    eax
call    ds:socket
mov     ebp, eax
cmp     ebp, 0ffffffffh
jnz     short loc_37a98592
mov     ebp, ds:wsagetlasterror
call    ebp
test    eax, eax
jg      short loc_37a98550
call    ebp
jmp     short loc_37a9855a
call    ebp
movzx   eax, ax
or      eax, 80070000h
mov     [esi+20h], eax
mov     dword ptr [esi+38h], 0
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_37a98583
mov     eax, [eax+38h]
mov     [esi+38h], eax
mov     eax, [ebx+28h]
mov     [eax+38h], esi
mov     [ebx+28h], esi
inc     dword ptr [edi+3ch]
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
mov     [esi+38h], esi
mov     [ebx+28h], esi
inc     dword ptr [edi+3ch]
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
push    0
push    1
push    ebp
call    ds:sethandleinformation
test    eax, eax
jnz     short loc_37a98604
call    ds:getlasterror
test    eax, eax
mov     eax, ds:getlasterror
jg      short loc_37a985b4
call    eax
jmp     short loc_37a985be
call    eax
movzx   eax, ax
or      eax, 80070000h
mov     [esi+20h], eax
mov     dword ptr [esi+38h], 0
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_37a985ee
mov     eax, [eax+38h]
mov     [esi+38h], eax
mov     eax, [ebx+28h]
push    ebp
mov     [eax+38h], esi
mov     [ebx+28h], esi
inc     dword ptr [edi+3ch]
call    ds:closesocket
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
mov     [esi+38h], esi
mov     [ebx+28h], esi
inc     dword ptr [edi+3ch]
push    ebp
call    ds:closesocket
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
lea     ecx, [esi+20h]
xorps   xmm0, xmm0
movups  xmmword ptr [ecx], xmm0
mov     dword ptr [ecx+10h], 0
test    dword ptr [edi+2ch], 100000h
jz      short loc_37a98629
mov     eax, [esi+160h]
or      eax, 1
mov     [esi+30h], eax
push    ecx
lea     eax, [esp+18h+var_4]
push    eax
push    80h
push    80h
push    0
lea     eax, [esi+40h]
push    eax
mov     eax, [edi+0a4h]
push    ebp
push    dword ptr [edi+90h]
call    eax
test    eax, eax
jz      short loc_37a98670
test    dword ptr [edi+2ch], 40000h
jz      short loc_37a986d2
mov     [esi+3ch], ebp
mov     edx, esi
inc     dword ptr [edi+3ch]
mov     ecx, ebx
call    sub_37a97fe0
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
call    ds:getlasterror
cmp     eax, 3e5h
jz      short loc_37a986d2
call    ds:wsagetlasterror
test    eax, eax
mov     eax, ds:wsagetlasterror
jg      short loc_37a98690
call    eax
jmp     short loc_37a9869a
call    eax
movzx   eax, ax
or      eax, 80070000h
mov     edx, esi
mov     [esi+20h], eax
mov     ecx, ebx
call    sub_37a97fe0
inc     dword ptr [edi+3ch]
push    ebp
call    ds:closesocket
test    dword ptr [edi+2ch], 100000h
jz      short loc_37a98734
push    dword ptr [esi+30h]
call    ds:closehandle
pop     edi
mov     dword ptr [esi+160h], 0
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
mov     [esi+3ch], ebp
inc     dword ptr [edi+3ch]
test    dword ptr [edi+2ch], 100000h
jz      short loc_37a98734
cmp     dword ptr [esi+164h], 0ffffffffh
lea     eax, [esi+164h]
jnz     short loc_37a98734
push    4
push    0ffffffffh
push    esi
push    offset callback
push    dword ptr [esi+160h]
push    eax
call    ds:registerwaitforsingleobject
test    eax, eax
jnz     short loc_37a98734
mov     ebp, ds:getlasterror
call    ebp
test    eax, eax
jg      short loc_37a9871b
call    ebp
jmp     short loc_37a98725
call    ebp
movzx   eax, ax
or      eax, 80070000h
mov     edx, esi
mov     [esi+20h], eax
mov     ecx, ebx
call    sub_37a97fe0
inc     dword ptr [edi+3ch]
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
sub     esp, 14h
push    ebx
push    ebp
push    esi
push    edi
mov     edi, edx
mov     dword ptr [esp+1ch], offset byte_37b7332f
mov     ebx, ecx
mov     dword ptr [esp+18h], 0
xorps   xmm0, xmm0
lea     esi, [edi+44h]
lea     ecx, [esi+20h]
movups  xmmword ptr [ecx], xmm0
mov     dword ptr [ecx+10h], 0
or      dword ptr [edi+2ch], 80000h
movups  xmmword ptr [ecx], xmm0
mov     dword ptr [ecx+10h], 0
test    dword ptr [edi+2ch], 100000h
jz      short loc_37a98791
mov     eax, [esi+3ch]
or      eax, 1
mov     [esi+30h], eax
push    0
push    ecx
lea     eax, [esp+18h]
mov     dword ptr [esp+18h], 0
push    eax
lea     eax, [esp+20h]
push    eax
push    1
lea     eax, [esp+2ch]
push    eax
push    dword ptr [edi+90h]
call    ds:wsarecv
mov     ebp, ds:getlasterror
test    eax, eax
jnz     short loc_37a98816
mov     eax, [edi+2ch]
test    eax, 40000h
jz      loc_37a98875
or      eax, 20000h
mov     [edi+2ch], eax
mov     eax, [esp+14h]
mov     [esi+24h], eax
inc     dword ptr [edi+3ch]
mov     dword ptr [esi+38h], 0
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_37a98808
mov     eax, [eax+38h]
mov     [esi+38h], eax
mov     eax, [ebx+28h]
mov     [eax+38h], esi
mov     [ebx+28h], esi
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
mov     [esi+38h], esi
mov     [ebx+28h], esi
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
call    ebp
cmp     eax, 3e5h
jz      short loc_37a98875
mov     ebp, ds:wsagetlasterror
call    ebp
test    eax, eax
jg      short loc_37a9882f
call    ebp
jmp     short loc_37a98839
call    ebp
movzx   eax, ax
or      eax, 80070000h
mov     [esi+20h], eax
mov     dword ptr [esi+38h], 0
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_37a98864
mov     eax, [eax+38h]
mov     [esi+38h], eax
mov     eax, [ebx+28h]
mov     [eax+38h], esi
mov     [ebx+28h], esi
inc     dword ptr [edi+3ch]
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
mov     [esi+38h], esi
mov     [ebx+28h], esi
inc     dword ptr [edi+3ch]
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
or      dword ptr [edi+2ch], 20000h
inc     dword ptr [edi+3ch]
test    dword ptr [edi+2ch], 100000h
jz      short loc_37a988db
cmp     dword ptr [esi+40h], 0ffffffffh
lea     eax, [esi+40h]
jnz     short loc_37a988db
push    4
push    0ffffffffh
push    esi
push    offset callback
push    dword ptr [esi+3ch]
push    eax
call    ds:registerwaitforsingleobject
test    eax, eax
jnz     short loc_37a988db
call    ebp
test    eax, eax
jg      short loc_37a988c5
call    ebp
mov     edx, esi
mov     [esi+20h], eax
mov     ecx, ebx
call    sub_37a97fe0
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
call    ebp
movzx   eax, ax
mov     edx, esi
or      eax, 80070000h
mov     ecx, ebx
mov     [esi+20h], eax
call    sub_37a97fe0
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
mov     ah, 28h
xchg    eax, ebx
mov     bl, 93h
jmp     far ptr 590dh:0afd323b6h
popf
fistp   qword ptr [ebx+5206de05h]
int     3
mov     al, ds:0f4a449cbh
lahf
jbe     short loc_37a98db7
dec     eax
pop     es
sal     dword ptr [edx], 1
mov     eax, 0f4024a7fh
rcl     ecx, 1
mov     ebx, 0afe376afh
fistp   qword ptr [ecx-19h]
or      esp, ebp
cmc
inc     ebp
in      eax, dx
inc     ebp
push    ebx
lahf
aad     3dh
pop     ebx
dec     edi
rol     dword ptr [eax], cl
scasd
lodsb
add     [edx], ebp
cwde
mov     ebx, 9a9bdf9ch
mov     gs, word ptr [edi-76f1f757h]
ja      short loc_37a98d93
inc     ecx
adc     ah, [edi]
wait
and     byte ptr [edi], 36h
cmpsb
jecxz   short near ptr loc_37a98e02+1
les     ebx, [esi]
xor     [ecx], ebp
cmp     esp, [ebp-6f301e27h]
scasb
sub     byte ptr [edx-7dh], 0e2h
xor     al, 7eh
adc     bl, bh
cmp     dh, [eax+eax*4-6dh]
fucomi  st, st(1)
cld
xchg    eax, esi
pop     eax
push    edi
fisttp  word ptr [eax]
scasd
mov     edx, 0c85f3788h
inc     ecx
inc     ecx
jns     short loc_37a98eb2
stc
push    esp
enter   1104h, 0a1h
pop     ds
lodsb
dec     esp
imul    edi, [ebx+29h], 29h
dec     edi
jle     short loc_37a98f32
test    dword ptr [eax+ebp*2-5e625f39h], 7e9a2ef4h
push    esp
sbb     eax, 0e79595d4h
pop     ebp
loope   near ptr loc_37a98f52+1
mov     bh, 15h
xor     cl, [ebx-383abd01h]
push    ebx
in      al, dx
pop     eax
bnd jg short loc_37a98f1f
sbb     eax, 1ef9589ah
push    esp
repne leave
and     [ecx+6eh], esi
mov     al, 3ch
nop
icebp
les     ebp, [ebx+3ch]
cmp     al, 89h
jb      short loc_37a98f6e
mov     edx, 12740618h
mov     dl, 0a6h
add     ch, ch
sub     ah, [ecx+eax-22h]
retn    1e20h
mov     ebp, ds:closesocket
mov     ebx, 1
push    esi
mov     esi, edx
mov     ecx, [esi+2ch]
and     ecx, 40000000h
test    dword ptr [esi+2ch], 20000h
jz      short loc_37a98f74
test    ecx, ecx
jnz     short loc_37a98f65
push    ebx
push    dword ptr [esi+90h]
call    ds:shutdown
jmp     short loc_37a98fc8
mov     ecx, esi
call    loc_37a98ec0
test    eax, eax
jnz     short loc_37a98fc8
xor     ebx, ebx
jmp     short loc_37a98fc8
test    ecx, ecx
jz      short loc_37a98fc8
cmp     dword ptr [esi+98h], 0
jz      short loc_37a98fc8
mov     ecx, esi
call    loc_37a98ec0
test    eax, eax
jz      short loc_37a98fc8
push    edi
xor     edi, edi
nop
mov     ebx, [esi+98h]
mov     eax, [ebx+edi+3ch]
cmp     eax, 0ffffffffh
jz      short loc_37a98fb4
cmp     dword ptr [ebx+edi+20h], 103h
jnz     short loc_37a98fb4
push    eax
call    ebp
mov     dword ptr [ebx+edi+3ch], 0ffffffffh
add     edi, 16ch
cmp     edi, 2d80h
jb      short loc_37a98f90
mov     ebx, 1
pop     edi
mov     ecx, [esi+2ch]
test    ecx, 100h
jz      short loc_37a99003
and     ecx, 0fffffeffh
add     dword ptr [esi+40h], 0ffffffffh
mov     edx, ecx
mov     [esi+2ch], ecx
mov     eax, ecx
jnz     short loc_37a99003
test    dl, 1
jnz     short loc_37a99003
test    al, 40h
jz      short loc_37a99003
and     ecx, 0ffffffbfh
mov     [esi+2ch], ecx
test    cl, 20h
jz      short loc_37a99003
mov     eax, [esi+4]
dec     dword ptr [eax+4]
mov     ecx, [esi+2ch]
test    ecx, 800h
jz      short loc_37a99039
mov     eax, ecx
and     eax, 0fffff7ffh
add     dword ptr [esi+40h], 0ffffffffh
mov     [esi+2ch], eax
mov     ecx, eax
jnz     short loc_37a99039
test    al, 1
jnz     short loc_37a99039
test    al, 40h
jz      short loc_37a99039
and     ecx, 0ffffffbfh
mov     [esi+2ch], ecx
test    cl, 20h
jz      short loc_37a99039
mov     eax, [esi+4]
dec     dword ptr [eax+4]
mov     ecx, [esi+2ch]
test    ebx, ebx
jz      short loc_37a99059
push    dword ptr [esi+90h]
call    ebp
or      dword ptr [esi+2ch], 20000000h
mov     ecx, [esi+2ch]
mov     dword ptr [esi+90h], 0ffffffffh
and     ecx, 0fffe7fffh
mov     eax, ecx
mov     [esi+2ch], ecx
and     eax, 60h
cmp     al, 60h
jz      short loc_37a99074
mov     eax, [esi+4]
inc     dword ptr [eax+4]
mov     ecx, [esi+2ch]
and     ecx, 0ffffffbfh
or      ecx, 1
cmp     dword ptr [esi+3ch], 0
mov     [esi+2ch], ecx
jnz     short loc_37a9909a
mov     edx, [esi+4]
test    cl, 8
jnz     short loc_37a9909a
or      ecx, 8
mov     [esi+2ch], ecx
mov     eax, [edx+2ch]
mov     [esi+28h], eax
mov     [edx+2ch], esi
pop     esi
pop     ebp
pop     ebx
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
movsd   xmm0, qword_37b733b8
sub     esp, 0ch
ucomisd xmm0, ds:qword_37b03b50
push    esi
mov     esi, ecx
lahf
test    ah, 44h
jp      short loc_37a990de
xorps   xmm0, xmm0
movlpd  qword ptr [esp+10h+performancecount], xmm0
mov     edx, dword ptr [esp+10h+performancecount+4]
mov     eax, dword ptr [esp+10h+performancecount]
mov     [esi+20h], eax
mov     [esi+24h], edx
pop     esi
mov     esp, ebp
pop     ebp
retn
lea     eax, [esp+10h+performancecount]
push    eax
call    ds:queryperformancecounter
test    eax, eax
jz      short loc_37a990c2
mov     edx, dword ptr [esp+10h+performancecount+4]
mov     ecx, dword ptr [esp+10h+performancecount]
call    __ltod3
mulsd   xmm0, qword_37b733b8
mulsd   xmm0, ds:qword_37b03b80
call    __dtoul3
mov     [esi+20h], eax
mov     [esi+24h], edx
pop     esi
mov     esp, ebp
pop     ebp
retn
out     0e3h, al
leave
sal     byte ptr [ebx-5cc707f9h], 70h
inc     esi
aam     5ah
or      [ebx], ah
iret
test    esi, esi
jz      short loc_37a992e6
cmp     dword ptr [esi+3ch], 0
jnz     loc_37a99562
cmp     esi, [edi]
jz      loc_37a99562
mov     ecx, [edx+30h]
cmp     ecx, esi
jnz     loc_37a993c4
mov     ecx, [edx+34h]
cmp     dword ptr [ecx+3ch], 1
jnz     short loc_37a9934a
mov     dword ptr [ecx+3ch], 0
mov     ecx, [edx+34h]
mov     dword ptr [edx+3ch], 1
mov     eax, [ecx+30h]
mov     [edx+34h], eax
test    eax, eax
jz      short loc_37a99323
mov     eax, [ecx+30h]
mov     [eax+38h], edx
mov     eax, [edx+38h]
mov     [ecx+38h], eax
test    eax, eax
jz      short loc_37a9933f
mov     eax, [edx+38h]
cmp     edx, [eax+30h]
jnz     short loc_37a9933a
mov     [eax+30h], ecx
jmp     short loc_37a99341
mov     [eax+34h], ecx
jmp     short loc_37a99341
mov     [edi], ecx
mov     [ecx+30h], edx
mov     [edx+38h], ecx
mov     ecx, [edx+34h]
mov     esi, [ecx+30h]
test    esi, esi
jz      short loc_37a99357
cmp     dword ptr [esi+3ch], 0
jnz     short loc_37a9936c
mov     eax, [ecx+34h]
test    eax, eax
jz      loc_37a99434
cmp     dword ptr [eax+3ch], 0
jz      loc_37a99434
mov     eax, [ecx+34h]
test    eax, eax
jz      short loc_37a9937d
cmp     dword ptr [eax+3ch], 0
jnz     loc_37a99455
test    esi, esi
jz      short loc_37a9938b
mov     dword ptr [esi+3ch], 0
mov     esi, [ecx+30h]
mov     dword ptr [ecx+3ch], 1
mov     eax, [esi+34h]
mov     [ecx+30h], eax
test    eax, eax
jz      short loc_37a993a2
mov     eax, [esi+34h]
mov     [eax+38h], ecx
mov     eax, [ecx+38h]
mov     [esi+38h], eax
test    eax, eax
jz      loc_37a9944a
mov     eax, [ecx+38h]
cmp     ecx, [eax+30h]
jnz     loc_37a99445
mov     [eax+30h], esi
jmp     loc_37a9944c
cmp     dword ptr [ecx+3ch], 1
jnz     short loc_37a99412
mov     dword ptr [ecx+3ch], 0
mov     ecx, [edx+30h]
mov     dword ptr [edx+3ch], 1
mov     eax, [ecx+34h]
mov     [edx+30h], eax
test    eax, eax
jz      short loc_37a993eb
mov     eax, [ecx+34h]
mov     [eax+38h], edx
mov     eax, [edx+38h]
mov     [ecx+38h], eax
test    eax, eax
jz      short loc_37a99407
mov     eax, [edx+38h]
cmp     edx, [eax+30h]
jnz     short loc_37a99402
mov     [eax+30h], ecx
jmp     short loc_37a99409
mov     [eax+34h], ecx
jmp     short loc_37a99409
mov     [edi], ecx
mov     [ecx+34h], edx
mov     [edx+38h], ecx
mov     ecx, [edx+30h]
mov     eax, [ecx+30h]
test    eax, eax
jz      short loc_37a99423
cmp     dword ptr [eax+3ch], 0
jnz     loc_37a994b5
mov     esi, [ecx+34h]
test    esi, esi
jz      short loc_37a99434
cmp     dword ptr [esi+3ch], 0
jnz     loc_37a994b5
mov     dword ptr [ecx+3ch], 1
mov     esi, edx
mov     edx, [edx+38h]
jmp     loc_37a992d8
mov     [eax+34h], esi
jmp     short loc_37a9944c
mov     [edi], esi
mov     [esi+34h], ecx
mov     [ecx+38h], esi
mov     ecx, [edx+34h]
mov     eax, [edx+3ch]
mov     [ecx+3ch], eax
mov     dword ptr [edx+3ch], 0
mov     eax, [ecx+34h]
test    eax, eax
jz      short loc_37a99470
mov     dword ptr [eax+3ch], 0
mov     ecx, [edx+34h]
mov     eax, [ecx+30h]
mov     [edx+34h], eax
test    eax, eax
jz      short loc_37a99483
mov     eax, [ecx+30h]
mov     [eax+38h], edx
mov     eax, [edx+38h]
mov     [ecx+38h], eax
test    eax, eax
jz      short loc_37a994ab
mov     eax, [edx+38h]
cmp     edx, [eax+30h]
jnz     short loc_37a994a0
mov     [eax+30h], ecx
mov     [ecx+30h], edx
jmp     loc_37a9955d
mov     [eax+34h], ecx
mov     [ecx+30h], edx
jmp     loc_37a9955d
mov     [edi], ecx
mov     [ecx+30h], edx
jmp     loc_37a9955d
test    eax, eax
jz      short loc_37a994bf
cmp     dword ptr [eax+3ch], 0
jnz     short loc_37a9950e
mov     esi, [ecx+34h]
test    esi, esi
jz      short loc_37a994d0
mov     dword ptr [esi+3ch], 0
mov     esi, [ecx+34h]
mov     dword ptr [ecx+3ch], 1
mov     eax, [esi+30h]
mov     [ecx+34h], eax
test    eax, eax
jz      short loc_37a994e7
mov     eax, [esi+30h]
mov     [eax+38h], ecx
mov     eax, [ecx+38h]
mov     [esi+38h], eax
test    eax, eax
jz      short loc_37a99503
mov     eax, [ecx+38h]
cmp     ecx, [eax+30h]
jnz     short loc_37a994fe
mov     [eax+30h], esi
jmp     short loc_37a99505
mov     [eax+34h], esi
jmp     short loc_37a99505
mov     [edi], esi
mov     [esi+30h], ecx
mov     [ecx+38h], esi
mov     ecx, [edx+30h]
mov     eax, [edx+3ch]
mov     [ecx+3ch], eax
mov     dword ptr [edx+3ch], 0
mov     eax, [ecx+30h]
test    eax, eax
jz      short loc_37a99529
mov     dword ptr [eax+3ch], 0
mov     ecx, [edx+30h]
mov     eax, [ecx+34h]
mov     [edx+30h], eax
test    eax, eax
jz      short loc_37a9953c
mov     eax, [ecx+34h]
mov     [eax+38h], edx
mov     eax, [edx+38h]
mov     [ecx+38h], eax
test    eax, eax
jz      short loc_37a99558
mov     eax, [edx+38h]
cmp     edx, [eax+30h]
jnz     short loc_37a99553
mov     [eax+30h], ecx
jmp     short loc_37a9955a
mov     [eax+34h], ecx
jmp     short loc_37a9955a
mov     [edi], ecx
mov     [ecx+34h], edx
mov     [edx+38h], ecx
mov     esi, [edi]
test    esi, esi
jz      short loc_37a9956d
mov     dword ptr [esi+3ch], 0
pop     edi
pop     esi
retn
mov     edx, [esp+4]
push    esi
mov     esi, [esp+0ch]
lea     ecx, [esi+10h]
lea     eax, [edx+8]
mov     [esi+4], edx
mov     dword ptr [esi+8], 0dh
mov     dword ptr [esi+2ch], 20h
mov     [ecx], eax
mov     eax, [edx+0ch]
mov     [esi+14h], eax
mov     [eax], ecx
xor     eax, eax
mov     [edx+0ch], ecx
mov     dword ptr [esi+18h], 0ffffffffh
mov     dword ptr [esi+58h], 0
mov     dword ptr [esi+48h], 0
mov     dword ptr [esi+4ch], 0
pop     esi
retn
push    ebp
mov     ebp, esp
and     esp, 0fffffff8h
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, [ebp+arg_4]
mov     ebx, [esi+4]
mov     [esp+18h+var_8], ebx
test    edi, edi
jnz     short loc_37a995e9
mov     eax, 0fffff019h
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, [esi+2ch]
mov     ecx, ebx
test    dl, 40h
jz      short loc_37a99600
mov     ecx, esi
call    loc_37a99740
mov     edx, [esi+2ch]
mov     ecx, [esi+4]
mov     [esi+58h], edi
mov     edi, [ebx+20h]
add     edi, [ebp+arg_8]
mov     ebx, [ebx+24h]
adc     ebx, [ebp+arg_c]
cmp     ebx, [ebp+arg_c]
ja      short loc_37a99621
jb      short loc_37a9961b
cmp     edi, [ebp+arg_8]
jnb     short loc_37a99621
or      edi, 0ffffffffh
or      ebx, 0ffffffffh
mov     eax, [ebp+arg_10]
mov     [esi+48h], eax
mov     eax, [ebp+arg_14]
mov     [esi+40h], edi
mov     [esi+44h], ebx
mov     [esi+4ch], eax
test    dl, 40h
jnz     short loc_37a99649
or      edx, 40h
mov     [esi+2ch], edx
test    dl, 20h
jz      short loc_37a99649
inc     dword ptr [ecx+4]
mov     ecx, [esi+4]
mov     eax, [ecx+60h]
mov     edi, [esp+18h+var_8]
mov     [esi+50h], eax
mov     eax, [ecx+64h]
mov     [esi+54h], eax
add     dword ptr [ecx+60h], 1
adc     dword ptr [ecx+64h], 0
add     edi, 30h
xor     ebx, ebx
mov     [esp+18h+var_4], edi
xor     ecx, ecx
mov     eax, [edi]
test    eax, eax
jz      short loc_37a996e1
mov     edi, [esi+40h]
mov     edx, [eax+44h]
mov     ebx, eax
mov     ecx, [eax+40h]
mov     [esp+18h+var_8], ebx
cmp     [esi+44h], edx
jb      short loc_37a996d3
ja      short loc_37a996c2
cmp     edi, ecx
jb      short loc_37a996d3
cmp     [esi+44h], edx
ja      short loc_37a996c2
jb      short loc_37a99697
cmp     edi, ecx
ja      short loc_37a996c2
mov     ebx, [esi+54h]
mov     edi, [eax+54h]
mov     edx, [esi+50h]
mov     ecx, [eax+50h]
cmp     ebx, edi
jb      short loc_37a996cc
ja      short loc_37a996bb
cmp     edx, ecx
jb      short loc_37a996cc
cmp     ebx, edi
jb      loc_37a99736
ja      short loc_37a996bb
cmp     edx, ecx
jbe     short loc_37a99736
mov     edi, [esi+40h]
mov     ebx, [esp+18h+var_8]
mov     eax, [eax+34h]
mov     ecx, 1
jmp     short loc_37a996d9
mov     edi, [esi+40h]
mov     ebx, [esp+18h+var_8]
mov     eax, [eax+30h]
or      ecx, 0ffffffffh
test    eax, eax
jnz     short loc_37a99675
mov     edi, [esp+18h+var_4]
mov     [esi+38h], ebx
mov     dword ptr [esi+34h], 0
mov     dword ptr [esi+30h], 0
mov     dword ptr [esi+3ch], 1
test    ebx, ebx
jz      short loc_37a9972b
test    ecx, ecx
jns     short loc_37a99716
mov     edx, esi
mov     [ebx+30h], esi
mov     ecx, edi
call    sub_37a99120
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, esi
mov     [ebx+34h], esi
mov     ecx, edi
call    sub_37a99120
xor     eax, eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edx, esi
mov     [edi], esi
mov     ecx, edi
call    sub_37a99120
pop     edi
pop     esi
xor     eax, eax
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     ebp, 105737eh
push    esi
xchg    eax, ebp
movsb
retf    529fh
cmp     byte ptr [esi-74a1a24eh], 0bch
xchg    eax, ecx
xchg    eax, edx
xor     [edx], ebp
push    ds
and     [edx-26db7a76h], bh
push    edx
add     [eax], esi
xchg    eax, esi
sbb     ebp, ebp
push    0a367e5bdh
jno     short loc_37a9982a
into
or      edx, eax
jb      short loc_37a997da
xchg    eax, ebx
aam     70h
bound   edi, [ebp-0f7aede9h]
dec     esi
mov     cl, 0ech
movsb
adc     [eax], bl
mov     word ptr [edi+2dh], es
nop
rol     dword ptr [edx-170814a9h], 0a2h
out     3eh, eax
add     [edi+9], ah
push    cs
popf
test    [eax-623929c8h], ecx
loop    loc_37a9981d
leave
pop     ebp
ficomp  word ptr [edi-53006752h]
cmp     [ecx+2fh], edi
lds     eax, ds:331154f5h
adc     ebx, ebx
jnp     short loc_37a9986d
popf
sbb     esi, ebx
pop     ds
stc
test    ch, ah
push    0
xorps   xmm0, xmm0
mov     dword ptr [esp+1ch], 0
mov     ebx, ecx
mov     dword ptr [esp+14h], 2
lea     esi, [edi+44h]
movups  xmmword ptr [esi+20h], xmm0
lea     eax, [esi+20h]
mov     dword ptr [eax+10h], 0
or      dword ptr [edi+2ch], 80000h
push    eax
lea     eax, [esp+18h]
push    eax
lea     eax, [esp+20h]
push    eax
push    1
lea     eax, [esp+2ch]
push    eax
push    dword ptr [edi+38h]
mov     eax, [edi+114h]
call    eax
test    eax, eax
jnz     short loc_37a999e4
mov     eax, [edi+2ch]
test    eax, 40000h
jz      loc_37a99a47
or      eax, 20000h
mov     [edi+2ch], eax
mov     eax, [esp+14h]
mov     [esi+24h], eax
inc     dword ptr [edi+3ch]
mov     dword ptr [esi+38h], 0
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_37a999d6
mov     eax, [eax+38h]
mov     [esi+38h], eax
mov     eax, [ebx+28h]
mov     [eax+38h], esi
mov     [ebx+28h], esi
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
mov     [esi+38h], esi
mov     [ebx+28h], esi
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
call    ds:getlasterror
cmp     eax, 3e5h
jz      short loc_37a99a47
mov     ebp, ds:wsagetlasterror
call    ebp
test    eax, eax
jg      short loc_37a99a01
call    ebp
jmp     short loc_37a99a0b
call    ebp
movzx   eax, ax
or      eax, 80070000h
mov     [esi+20h], eax
mov     dword ptr [esi+38h], 0
mov     eax, [ebx+28h]
test    eax, eax
jz      short loc_37a99a36
mov     eax, [eax+38h]
mov     [esi+38h], eax
mov     eax, [ebx+28h]
mov     [eax+38h], esi
mov     [ebx+28h], esi
inc     dword ptr [edi+3ch]
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
mov     [esi+38h], esi
mov     [ebx+28h], esi
inc     dword ptr [edi+3ch]
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
or      dword ptr [edi+2ch], 20000h
inc     dword ptr [edi+3ch]
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
or      [edi+1a5d7d85h], edx
jmp     short loc_37a99a6a
repne push ebp
call    far ptr 2d2h:0fef38f0fh
jnb     short loc_37a99ad0
and     bh, [eax+edx*8]
mov     ebp, 67c80c9bh
outsb
cmp     ebp, 0f74d44b0h
push    ds
pop     edx
mul     dword ptr [ecx+40629d25h]
adc     eax, 0b7a41b83h
cmpsb
sbb     [ebx+39h], bh
lodsb
pop     es
push    edi
cwde
push    ds
scasb
or      [esi+66h], esp
mov     esi, 71788527h
retn
clc
pcmpeqd mm7, mm6
aad     97h
sbb     eax, [ebp-6a642d92h]
ficomp  word ptr [edx-6ch]
add     esi, [edx+748fad0fh]
dec     ebx
pop     ecx
retf
mov     edx, ecx
cmp     edx, 0c0000002h
jg      short loc_37a9a21e
jz      short loc_37a9a269
cmp     edx, 80000005h
jnz     def_37a9a244
mov     eax, 2738h
retn
cmp     edx, 0c0000120h
jg      short loc_37a9a275
jz      loc_37a9a302
lea     eax, [edx+3ffffffbh]
cmp     eax, 0cbh
ja      def_37a9a244
movzx   eax, ds:byte_37a9a390[eax]
jmp     ds:jpt_37a9a244[eax*4]
mov     eax, 2736h
retn
mov     eax, 271eh
retn
mov     eax, 2733h
retn
mov     eax, 2742h
retn
mov     eax, 274ah
retn
mov     eax, 273dh
retn
mov     eax, 271dh
retn
cmp     edx, 0c0000236h
jg      short loc_37a9a2bc
jz      short loc_37a9a2b6
lea     eax, [edx+3ffffed3h]
cmp     eax, 0e2h
ja      def_37a9a244
movzx   eax, ds:byte_37a9a480[eax]
jmp     ds:jpt_37a9a297[eax*4]
mov     eax, 2747h
retn
mov     eax, 2740h
retn
mov     eax, 2749h
retn
mov     eax, 2741h
retn
mov     eax, 274dh
retn
cmp     edx, 0c000023ch
jg      short loc_37a9a2d4
jz      short loc_37a9a2f6
cmp     edx, 0c0000237h
jnz     short def_37a9a244
mov     eax, 2775h
retn
cmp     edx, 0c000a012h
jg      short loc_37a9a30e
jz      short loc_37a9a308
lea     eax, [edx+3ffffdc3h]
cmp     eax, 4
ja      short def_37a9a244
jmp     ds:jpt_37a9a2e9[eax*4]
mov     eax, 2745h
retn
mov     eax, 2743h
retn
mov     eax, 2751h
retn
mov     eax, 2714h
retn
mov     eax, 2746h
retn
mov     eax, edx
sub     eax, 0
jz      short loc_37a9a353
sub     eax, 102h
jz      short loc_37a9a34d
sub     eax, 1
jz      short loc_37a9a347
test    edx, 0c0000000h
mov     eax, edx
setnz   cl
and     eax, 70000h
cmp     eax, 70000h
setz    al
test    al, cl
jz      short loc_37a9a341
movzx   eax, dx
retn
mov     eax, 2726h
retn
mov     eax, 3e5h
retn
mov     eax, 274ch
retn
xor     eax, eax
retn
add     [ebp+edi*4-17h], eax
call    far ptr 0f139h:0dd88255ch
int     62h
sbb     [ebx], dh
pop     ebx
xchg    eax, ecx
xchg    eax, esp
sal     bh, 1
xor     eax, 1a8281ceh
loopne  loc_37a9a6a0
and     al, 1dh
das
and     cl, al
mov     dl, 0c3h
jno     short loc_37a9a666
inc     eax
retn
add     eax, edi
jnb     short loc_37a9a6df
xor     ds:0ba1380a1h, esi
neg     dword ptr [edx+79h]
push    esp
std
jl      short loc_37a9a736
ror     dword ptr [esi], 8ah
lahf
mov     eax, ss:564e55e2h
lodsd
push    ecx
jmp     short loc_37a9a746
fyl2x
sbb     cl, bh
into
pop     ecx
wait
hlt
cmpsd
jnz     short near ptr byte_37a9a6db
push    cs
jz      short loc_37a9a702
clc
jno     short near ptr byte_37a9a72b
xor     esi, ecx
inc     edx
jbe     short loc_37a9a72d
xchg    eax, esi
ja      short near ptr byte_37a9a7bc
popa
mov     [edx+ecx+1d3b3a19h], edx
shr     dword ptr [ecx+edx], cl
jle     short loc_37a9a7bf
rcl     dword ptr [edi-1], 1
pop     edi
sbb     al, [edi]
sahf
add     [esi+ebp], bl
test    al, 7ch
pop     ebp
out     dx, eax
jnz     near ptr loc_37a9a7bf+4
xchg    eax, ecx
insb
ja      short near ptr loc_37a9a79d+1
daa
xor     al, 0ach
mov     eax, 0a98c226h
push    es
jns     short loc_37a9a746
mov     esp, 47b99362h
out     dx, eax
push    es
push    esi
adc     al, 0b2h
adc     ebp, [esi]
rcr     byte ptr [ebx+0ch], cl
jmp     dword ptr [ecx]
xor     eax, 0d0702e01h
sbb     ch, dl
pusha
out     2dh, eax
setalc
fisubr  dword ptr [edi+8]
push    eax
loope   loc_37a9a784
or      edx, [ecx-1beca330h]
add     al, 0dfh
wait
setalc
scasb
jmp     near ptr 0e4f83df8h
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     edx, [ebp+8]
mov     eax, 7fffffffh
push    ebx
mov     ebx, ecx
push    esi
push    edi
mov     ecx, [ebx+10h]
sub     eax, ecx
mov     [ebp-8], ecx
cmp     eax, edx
jb      loc_37a9a8cc
mov     eax, [ebx+14h]
lea     edi, [ecx+edx]
push    edi
mov     ecx, ebx
mov     [ebp+8], eax
call    loc_37a14910
mov     esi, eax
lea     ecx, [esi+1]
push    ecx
call    near ptr sub_37a14790
cmp     dword ptr [ebp+8], 10h
pop     ecx
mov     ecx, [ebp-8]
mov     [ebx+10h], edi
mov     [ebp-4], eax
mov     [ebx+14h], esi
lea     edi, [eax+ecx]
push    ecx
jb      short loc_37a9a8a1
mov     esi, [ebx]
push    esi
push    eax
call    _memmove_0
push    dword ptr [ebp+14h]
push    dword ptr [ebp+10h]
push    edi
call    _memmove_0
mov     eax, [ebp+14h]
add     esp, 18h
mov     [ebp+10h], esi
mov     byte ptr [edi+eax], 0
mov     eax, [ebp+8]
inc     eax
mov     [ebp+14h], eax
cmp     eax, 1000h
jb      short loc_37a9a896
lea     eax, [ebp+14h]
push    eax
lea     eax, [ebp+10h]
push    eax
call    sub_37a12570
mov     eax, [ebp+14h]
mov     esi, [ebp+10h]
pop     ecx
pop     ecx
push    eax
push    esi
call    sub_37ab1b25
pop     ecx
pop     ecx
jmp     short loc_37a9a8bc
push    ebx
push    eax
call    _memmove_0
mov     esi, [ebp+14h]
push    esi
push    dword ptr [ebp+10h]
push    edi
call    _memmove_0
add     esp, 18h
mov     byte ptr [edi+esi], 0
mov     eax, [ebp-4]
pop     edi
mov     [ebx], eax
mov     eax, ebx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
call    sub_37a14900
int     3
push    ebp
mov     ebp, esp
mov     eax, [ebp+0ch]
push    edi
mov     edi, [ebp+14h]
cmp     edi, eax
cmovb   eax, edi
push    eax
push    dword ptr [ebp+10h]
push    dword ptr [ebp+8]
call    _memcmp
add     esp, 0ch
test    eax, eax
jnz     short loc_37a9a902
cmp     edi, [ebp+0ch]
jbe     short loc_37a9a8fe
or      eax, 0ffffffffh
jmp     short loc_37a9a902
sbb     eax, eax
neg     eax
pop     edi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+10h]
mov     eax, [ebp+0ch]
push    esi
cmp     ecx, eax
jnb     short loc_37a9a932
mov     esi, [ebp+8]
sub     eax, ecx
push    eax
movsx   eax, byte ptr [ebp+14h]
push    eax
lea     eax, [esi+ecx]
push    eax
call    _memchr
add     esp, 0ch
test    eax, eax
jz      short loc_37a9a932
sub     eax, esi
jmp     short loc_37a9a935
or      eax, 0ffffffffh
pop     esi
pop     ebp
retn
cmovp   ebp, [ecx-57h]
cmp     edx, [ecx+3fh]
popa
and     [ebx+41h], ecx
or      eax, 0f66545edh
aaa
sbb     [esi-1feebd55h], eax
lds     esi, [ebp-76h]
xlat
call    __eh_prolog
push    ecx
mov     ecx, [ebp+0ch]
mov     [ebp-10h], ecx
push    dword ptr [ebp+10h]
xor     eax, eax
mov     [ebp-4], eax
mov     [ecx+10h], eax
mov     [ecx+14h], eax
call    loc_37a9ae8d
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     ecx, [ebp+0ch]
pop     ebp
jmp     sub_37a13cd0
dec     edi
movsb
or      byte ptr [esi+ebp*2-1441d30ch], 6
insd
inc     esi
nop
mov     ch, 49h
retf
push    esi
mov     esi, ecx
call    sub_37a9aeef
push    8
push    dword ptr [esi]
call    sub_37ab1b25
and     dword ptr [esi], 0
pop     ecx
pop     ecx
pop     esi
retn
push    esi
mov     esi, ecx
call    sub_37a9af72
push    8
push    dword ptr [esi]
call    sub_37ab1b25
and     dword ptr [esi], 0
pop     ecx
pop     ecx
pop     esi
retn
push    ebx
cld
out     0f7h, eax
inc     eax
mov     bl, 2ah
mov     dl, 0e2h
aaa
in      eax, 7dh
clc
jns     short near ptr loc_37a9ac4f+2
or      eax, 471f089h
insb
pop     ebx
jnb     short near ptr dword_37a9acd0+3
push    edi
mov     edi, 6901a742h
push    cs
xchg    eax, ebx
inc     ebx
out     dx, al
xchg    eax, ecx
hlt
cld
push    esi
mov     esi, ecx
lea     ecx, [esi+54h]
call    sub_37a13cd0
lea     ecx, [esi+28h]
call    sub_37a13cd0
lea     ecx, [esi+14h]
call    sub_37a9ac0f
mov     ecx, esi
pop     esi
jmp     loc_37a9abf7
sbb     esi, eax
cmp     [edi+61h], ah
imul    byte ptr [edi-75d81197h]
pushf
call    far ptr 627fh:2808c60h
adc     [esi+32h], esi
mov     [edi-40a6be62h], cl
add     ebx, [edi+471d58eh]
sti
push    0ffffff82h
enter   28c0h, 4ah
pop     ecx
or      [esp+esi-45199798h], ch
sub     al, 0efh
inc     ecx
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
mov     esi, ecx
cmp     esi, eax
jz      short loc_37a9ad42
cmp     dword ptr [eax+14h], 10h
mov     ecx, eax
jb      short loc_37a9ad37
mov     ecx, [eax]
push    dword ptr [eax+10h]
push    ecx
mov     ecx, esi
call    loc_37a13e90
mov     eax, esi
pop     esi
pop     ebp
retn    4
or      eax, 868d36c9h
aad     45h
fild    word ptr [eax-7eh]
lods    byte ptr cs:[esi]
or      edi, [edi-4ca160h]
lodsd
and     al, [esi+7bh]
jnb     short near ptr dword_37a9add8+3
stosd
jg      short loc_37a9ad26
pop     es
inc     edx
sub     al, 0dah
fstp    qword ptr [edx+3930cc05h]
adc     dl, [edx+17h]
jno     short loc_37a9ad10
xchg    eax, ebp
pop     es
mov     ebp, 7c9bf28bh
xchg    bh, cl
push    esp
test    [ecx], dh
xor     al, 0f3h
dec     ecx
setalc
das
fstp    dword ptr [edi]
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+8]
push    edi
mov     edi, 7ffffffeh
or      edx, 7
mov     eax, edi
cmp     edx, edi
ja      short loc_37a9add1
push    esi
mov     esi, [ecx+14h]
mov     ecx, esi
shr     ecx, 1
sub     eax, ecx
cmp     esi, eax
jbe     short loc_37a9adc7
mov     eax, edi
jmp     short loc_37a9add0
add     ecx, esi
cmp     edx, ecx
cmovb   edx, ecx
mov     eax, edx
pop     esi
pop     edi
pop     ebp
retn    4
xchg    eax, esp
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    esi
push    edi
mov     edi, ecx
mov     [ebp+var_8], edi
mov     esi, [edi]
test    esi, esi
jz      short loc_37a9ae6e
push    ebx
mov     ebx, [edi+4]
cmp     esi, ebx
jz      short loc_37a9ae34
push    18h
pop     edi
mov     ecx, esi
call    sub_37a13cd0
add     esi, edi
cmp     esi, ebx
jnz     short loc_37a9ae22
mov     edi, [ebp+var_8]
mov     esi, [edi]
mov     eax, [edi+8]
sub     eax, esi
mov     [ebp+var_8], esi
push    18h
cdq
pop     ecx
idiv    ecx
pop     ebx
imul    eax, 18h
mov     [ebp+var_4], eax
cmp     eax, 1000h
jb      short loc_37a9ae65
lea     eax, [ebp+var_4]
push    eax
lea     eax, [ebp+var_8]
push    eax
call    sub_37a12570
mov     eax, [ebp+var_4]
mov     esi, [ebp+var_8]
pop     ecx
pop     ecx
push    eax
push    esi
call    sub_37ab1b25
pop     ecx
pop     ecx
imul    eax, [ebp+arg_4], 18h
mov     ecx, [ebp+arg_0]
mov     [edi], ecx
add     eax, ecx
mov     [edi+4], eax
imul    eax, [ebp+arg_8], 18h
add     eax, ecx
mov     [edi+8], eax
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    0ch
push    edx
les     ecx, [ecx+60h]
stc
xchg    ah, [ecx-3a378ba5h]
or      al, [eax-53h]
bsr     edx, [edx+11389739h]
into
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    esi
mov     esi, ecx
mov     eax, [esi+10h]
jmp     short loc_37a9af08
sub     eax, 1
mov     [esi+10h], eax
jnz     short loc_37a9af08
and     dword ptr [esi+0ch], 0
test    eax, eax
jnz     short loc_37a9aefc
push    edi
mov     edi, [esi+8]
jmp     short loc_37a9af28
mov     eax, [esi+4]
dec     edi
cmp     dword ptr [eax+edi*4], 0
jz      short loc_37a9af28
push    10h
push    dword ptr [eax+edi*4]
call    sub_37ab1b25
pop     ecx
pop     ecx
test    edi, edi
jnz     short loc_37a9af12
mov     ecx, [esi+4]
pop     edi
test    ecx, ecx
jz      short loc_37a9af65
mov     eax, [esi+8]
shl     eax, 2
mov     [ebp+var_4], eax
mov     [ebp+var_8], ecx
cmp     eax, 1000h
jb      short loc_37a9af5c
lea     eax, [ebp+var_4]
push    eax
lea     eax, [ebp+var_8]
push    eax
call    sub_37a12570
mov     eax, [ebp+var_4]
pop     ecx
pop     ecx
mov     ecx, [ebp+var_8]
push    eax
push    ecx
call    sub_37ab1b25
pop     ecx
pop     ecx
and     dword ptr [esi+8], 0
and     dword ptr [esi+4], 0
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
jmp     short loc_37a9af86
mov     ecx, esi
call    sub_37a9b68b
cmp     [esi+10h], ebx
jnz     short loc_37a9af7f
push    edi
mov     edi, [esi+8]
jmp     short loc_37a9afa6
mov     eax, [esi+4]
dec     edi
cmp     [eax+edi*4], ebx
jz      short loc_37a9afa6
push    28h
push    dword ptr [eax+edi*4]
call    sub_37ab1b25
pop     ecx
pop     ecx
test    edi, edi
jnz     short loc_37a9af91
mov     ecx, [esi+4]
pop     edi
test    ecx, ecx
jz      short loc_37a9afe3
mov     eax, [esi+8]
shl     eax, 2
mov     [ebp+var_4], eax
mov     [ebp+var_8], ecx
cmp     eax, 1000h
jb      short loc_37a9afda
lea     eax, [ebp+var_4]
push    eax
lea     eax, [ebp+var_8]
push    eax
call    sub_37a12570
mov     eax, [ebp+var_4]
pop     ecx
pop     ecx
mov     ecx, [ebp+var_8]
push    eax
push    ecx
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     [esi+8], ebx
mov     [esi+4], ebx
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
call    far ptr 7076h:0f3c25fbbh
dec     eax
pop     eax
dec     esi
pop     eax
mov     eax, 0bf0e2b5dh
rcr     byte ptr [ebx+2ah], cl
call    far ptr 0cb8dh:0ea7b0bcch
arpl    ds:32b843f8h, sp
mov     cl, al
aas
xchg    eax, ebx
in      eax, 0e8h
fdivr   dword ptr [eax]
loop    loc_37a9b023
lodsb
setalc
sub     [edi+edx], al
mov     bl, 8ah
pop     ecx
inc     esp
xchg    eax, edi
fsub    dword ptr [esi]
dec     edx
xor     byte ptr [eax+38h], 34h
and     eax, 14287507h
out     0f8h, eax
push    esp
push    ss
or      esp, eax
xor     ecx, [eax]
xchg    eax, edx
xchg    eax, edx
adc     dl, [ebx+10h]
jb      short $+2
sbb     al, 1bh
imul    ecx, [ebx+6b344ec2h], 28h
insb
sbb     byte ptr [esi+5a2bda03h], 2dh
jmp     near ptr 0eaf683dch
push    offset dword_37aefc94
call    sub_37ab024c
lea     ecx, [ebx+ebx*2-7]
test    ebx, 76daa347h
mov     ebx, 0a45df6ebh
in      al, dx
xor     al, 21h
rcr     bl, 1
sahf
xor     eax, 0f733bf9ch
or      ds:6489f8f5h, dl
jp      short near ptr loc_37a9b08e+2
jb      short loc_37a9b15c
wait
mov     ah, 1dh
lodsb
xchg    eax, edx
sbb     eax, 86c77b67h
mov     al, ds:9e190db8h
sbb     ebx, esi
add     [ebp+ecx*2-6afcbefh], esp
sbb     [ebx+0ah], esp
mov     dh, 0e9h
pop     edx
inc     ecx
daa
xchg    eax, ebx
imul    ecx, 3ch
movsb
ror     byte ptr [eax-26e42a2dh], 1ah
and     al, 0b7h
pusha
push    0eb6ef5cfh
sub     al, 56h
cmp     cl, ch
mov     edi, 0cf8174dah
push    0add1e288h
add     [edi+65h], dl
sub     [eax+edi*4+20h], ch
xor     [ebp+24h], esp
or      dword ptr [esi], 5fe72ba8h
xor     ecx, [edi]
jle     short near ptr loc_37a9b1a9+2
push    ss
loopne  near ptr loc_37a9b15c+1
out     dx, eax
push    ss
int     3
xor     esp, 17h
aam     0fch
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    edi
mov     edi, ecx
cmp     eax, [edi+14h]
ja      short loc_37a9b1df
cmp     dword ptr [edi+14h], 8
push    ebx
push    esi
mov     ebx, edi
jb      short loc_37a9b1c0
mov     ebx, [edi]
lea     esi, [eax+eax]
mov     [edi+10h], eax
push    esi
push    [ebp+src]
push    ebx
call    _memmove
add     esp, 0ch
xor     eax, eax
mov     [esi+ebx], ax
mov     eax, edi
pop     esi
pop     ebx
jmp     short loc_37a9b1ef
push    [ebp+src]
mov     byte ptr [ebp+arg_4], 0
push    [ebp+arg_4]
push    eax
call    loc_37a9a67f
pop     edi
pop     ebp
retn    8
pop     esi
pop     ebx
retn
sbb     ebp, 767f6ac1h
retn    428bh
pop     esp
push    ebp
mov     ebp, esp
imul    eax, [ebp+arg_4], 18h
mov     ecx, [ebp+block]
mov     [ebp+block], ecx
mov     [ebp+arg_4], eax
cmp     eax, 1000h
jb      short loc_37a9b2a1
lea     eax, [ebp+arg_4]
push    eax
lea     eax, [ebp+block]
push    eax
call    sub_37a12570
mov     eax, [ebp+arg_4]
pop     ecx
pop     ecx
mov     ecx, [ebp+block]
push    eax
push    ecx
call    sub_37ab1b25
pop     ecx
pop     ecx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
push    offset byte_37adf870
push    eax
mov     eax, [ebp+0ch]
mov     large fs:0, esp
sub     esp, 28h
cmp     dword ptr [eax+14h], 10h
mov     ecx, [eax+10h]
jb      short loc_37a9b2d9
mov     eax, [eax]
push    esi
push    ecx
push    eax
lea     ecx, [ebp-34h]
call    sub_37ae3130
push    0
push    0
push    0
lea     ecx, [ebp-24h]
mov     dword ptr [ebp-4], 0
call    sub_37ae30a0
push    dword ptr [ebp+18h]
lea     eax, [ebp-34h]
mov     byte ptr [ebp-4], 1
push    dword ptr [ebp+14h]
push    dword ptr [ebp+10h]
push    eax
lea     eax, [ebp-24h]
push    eax
call    loc_37ae3980
mov     esi, [ebp+8]
add     esp, 14h
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 0fh
mov     byte ptr [esi], 0
test    eax, eax
jnz     loc_37a9b464
mov     ecx, [esi+14h]
mov     eax, [ebp-24h]
push    ebx
mov     ebx, [ebp-1ch]
mov     [ebp-10h], eax
mov     [ebp-14h], ecx
push    edi
cmp     ebx, ecx
ja      short loc_37a9b367
mov     edi, esi
cmp     ecx, 10h
jb      short loc_37a9b350
mov     edi, [esi]
push    ebx
push    eax
push    edi
mov     [esi+10h], ebx
call    _memmove
add     esp, 0ch
mov     byte ptr [edi+ebx], 0
jmp     loc_37a9b436
cmp     ebx, 7fffffffh
ja      loc_37a9b490
mov     edi, ebx
or      edi, 0fh
cmp     edi, 7fffffffh
jbe     short loc_37a9b387
mov     edi, 7fffffffh
jmp     short loc_37a9b3a5
mov     edx, ecx
mov     eax, 7fffffffh
shr     edx, 1
sub     eax, edx
cmp     ecx, eax
jbe     short loc_37a9b39d
mov     edi, 7fffffffh
jmp     short loc_37a9b3a5
lea     eax, [edx+ecx]
cmp     edi, eax
cmovb   edi, eax
mov     [ebp+0ch], edi
inc     edi
cmp     edi, 1000h
jb      short loc_37a9b3d8
lea     eax, [edi+23h]
or      ecx, 0ffffffffh
cmp     eax, edi
cmovbe  eax, ecx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_37a9b495
lea     edi, [eax+23h]
and     edi, 0ffffffe0h
mov     [edi-4], eax
jmp     short loc_37a9b3eb
test    edi, edi
jz      short loc_37a9b3e9
push    edi
call    ??2@yapaxi@z
add     esp, 4
mov     edi, eax
jmp     short loc_37a9b3eb
xor     edi, edi
mov     eax, [ebp+0ch]
push    ebx
push    dword ptr [ebp-10h]
mov     [esi+10h], ebx
push    edi
mov     [esi+14h], eax
call    _memmove_0
mov     ecx, [ebp-14h]
add     esp, 0ch
mov     byte ptr [edi+ebx], 0
cmp     ecx, 10h
jb      short loc_37a9b434
mov     eax, [esi]
inc     ecx
cmp     ecx, 1000h
jb      short loc_37a9b42a
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a9b495
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
mov     [esi], edi
lea     ecx, [ebp-24h]
mov     byte ptr [ebp-4], 2
call    loc_37ae3c00
lea     ecx, [ebp-34h]
mov     dword ptr [ebp-4], 3
call    loc_37ae3c00
pop     edi
pop     ebx
mov     eax, esi
pop     esi
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [ebp-24h]
mov     byte ptr [ebp-4], 4
call    loc_37ae3c00
lea     ecx, [ebp-34h]
mov     dword ptr [ebp-4], 5
call    loc_37ae3c00
mov     ecx, [ebp-0ch]
mov     eax, esi
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
call    sub_37a14900
call    __invalid_parameter_noinfo_noreturn
aad     41h
mov     bh, dh
xor     edx, esp
push    esi
mov     esi, ecx
mov     eax, [esi+10h]
mov     edx, [esi+0ch]
dec     eax
add     edx, eax
mov     eax, [esi+8]
dec     eax
and     edx, eax
mov     eax, [esi+4]
mov     ecx, [eax+edx*4]
lea     ecx, [ecx+0ch]
call    sub_37a13cd0
sub     dword ptr [esi+10h], 1
jnz     short loc_37a9b6b5
and     dword ptr [esi+0ch], 0
pop     esi
retn
mov     eax, [ecx]
retn
jg      short loc_37a9b743
xchg    eax, esi
rcr     dl, 0d8h
jbe     short near ptr loc_37a9b754+4
push    ecx
mov     eax, 90e50a60h
dec     ebp
mov     eax, [ecx+4]
xor     eax, [esp+arg_0]
and     eax, 0ff0000h
xor     [ecx+4], eax
retn    4
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
int     3
xor     al, [eax-52h]
int     3
call    near ptr 0c3c9acf7h
sub     bh, [ebx+edx*8-4c01b5e4h]
mov     eax, [ecx+4]
movzx   edx, [esp+arg_4]
and     eax, 0ffff0000h
shl     edx, 8
or      edx, eax
movzx   eax, [esp+arg_0]
or      edx, eax
mov     [ecx+4], edx
retn    8
push    0ffffffabh
cmp     [edi], cl
mov     ds:0f805f50ch, eax
jo      short loc_37a9b7ac
mov     edx, 3f2a5fb2h
mov     eax, [ecx+8]
retn
out     78h, al
xchg    eax, esi
cmp     [edx+1cbfa792h], edi
inc     ebp
mov     bl, 0a3h
pop     esp
movzx   eax, byte ptr [ecx+5]
retn
jmp     __time64
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
and     dword ptr [eax+10h], 0
mov     eax, [ebp+var_4]
and     dword ptr [eax+14h], 0
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9baf5
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 1ch
mov     [ebp+var_14], ecx
mov     eax, [ebp+arg_0]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_24], eax
lea     eax, [ebp+var_d]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
and     dword ptr [eax+10h], 0
mov     eax, [ebp+var_18]
and     dword ptr [eax+14h], 0
and     [ebp+var_4], 0
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    loc_37a9ae8d
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9d570
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 0ch
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
and     dword ptr [eax+10h], 0
mov     eax, [ebp+var_14]
and     dword ptr [eax+14h], 0
mov     ecx, [ebp+var_10]
call    loc_37a13e70
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
xchg    eax, edx
push    ecx
xchg    bh, [ebp-42cfa70h]
in      eax, dx
fnstenv byte ptr [eax]
jns     short loc_37a9bc0d
icebp
ror     byte ptr [ecx+12748052h], 0ebh
sub     eax, 4a548209h
mov     ch, 31h
mov     al, ds:0e4713bdh
shl     ebx, 1
push    ecx
ja      short near ptr loc_37a9bc52+2
sub     eax, 0b82f0b50h
dec     edi
mov     cl, 6dh
jnb     short near ptr loc_37a9bb8f+2
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37adfa1c
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 1ch
mov     [ebp+var_14], ecx
mov     eax, [ebp+arg_0]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_24], eax
lea     eax, [ebp+var_d]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
and     dword ptr [eax+10h], 0
mov     eax, [ebp+var_18]
and     dword ptr [eax+14h], 0
and     [ebp+var_4], 0
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9c0bf
or      dword ptr [ebp-4], 0ffffffffh
mov     eax, [ebp-14h]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
adc     ds:9c11c8e0h, cl
cmp     al, 0a2h
ror     dword ptr [ebx+39a57e47h], 0c1h
test    al, 0d4h
jns     short near ptr loc_37a9bc2b+1
pushf
xchg    eax, esi
stosd
dec     ebp
inc     ecx
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9bd7b
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
mov     [ebp+var_10], ecx
and     [ebp+var_4], 0
mov     ecx, [ebp+var_10]
add     ecx, 1ech
call    sub_37a13cd0
mov     [ebp+var_4], 1
mov     ecx, [ebp+var_10]
add     ecx, 1d4h
call    sub_37a13cd0
mov     [ebp+var_4], 2
mov     ecx, [ebp+var_10]
add     ecx, 1bch
call    sub_37a13cd0
mov     [ebp+var_4], 3
mov     ecx, [ebp+var_10]
add     ecx, 1b0h
call    sub_37a9afef
mov     dword ptr [ebp-4], 4
mov     ecx, [ebp-10h]
add     ecx, 1a4h
call    sub_37a9afef
mov     dword ptr [ebp-4], 5
mov     ecx, [ebp-10h]
add     ecx, 198h
call    sub_37a9afef
mov     dword ptr [ebp-4], 6
mov     ecx, [ebp-10h]
add     ecx, 18ch
call    sub_37a9afef
mov     dword ptr [ebp-4], 7
mov     ecx, [ebp-10h]
add     ecx, 13ch
call    sub_37a13cd0
mov     dword ptr [ebp-4], 8
mov     ecx, [ebp-10h]
add     ecx, 124h
call    sub_37a13cd0
mov     dword ptr [ebp-4], 9
mov     ecx, [ebp-10h]
add     ecx, 10ch
call    sub_37a13cd0
or      dword ptr [ebp-4], 0ffffffffh
mov     ecx, [ebp-10h]
add     ecx, 0d8h
call    sub_37ada217
mov     dword ptr [ebp-4], 0ah
mov     ecx, [ebp-10h]
add     ecx, 0c0h
call    sub_37a13cd0
mov     dword ptr [ebp-4], 0bh
mov     ecx, [ebp-10h]
add     ecx, 0a8h
call    sub_37a13cd0
mov     dword ptr [ebp-4], 0ch
mov     ecx, [ebp-10h]
add     ecx, 90h
call    sub_37a13cd0
mov     dword ptr [ebp-4], 0dh
mov     ecx, [ebp-10h]
add     ecx, 78h
call    sub_37a13cd0
mov     dword ptr [ebp-4], 0eh
mov     ecx, [ebp-10h]
add     ecx, 60h
call    sub_37a13cd0
mov     dword ptr [ebp-4], 0fh
mov     ecx, [ebp-10h]
add     ecx, 48h
call    sub_37a13cd0
mov     dword ptr [ebp-4], 10h
mov     ecx, [ebp-10h]
add     ecx, 30h
call    sub_37a13cd0
or      dword ptr [ebp-4], 0ffffffffh
mov     ecx, [ebp-10h]
add     ecx, 10h
call    sub_37aec3cd
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aa5038
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
mov     [ebp+var_10], ecx
mov     ecx, [ebp+var_10]
add     ecx, 40h
call    sub_37aec3cd
mov     ecx, [ebp+var_10]
add     ecx, 30h
call    sub_37aec3cd
and     [ebp+var_4], 0
mov     ecx, [ebp+var_10]
add     ecx, 10h
call    sub_37a13cd0
or      [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    edx
insb
cmc
push    ebp
mov     ebp, esp
sub     esp, 28h
push    esi
push    edi
mov     [ebp-10h], ecx
mov     eax, [ebp+8]
mov     [ebp-0ch], eax
mov     eax, [ebp-0ch]
mov     [ebp-1ch], eax
mov     eax, [ebp-10h]
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
mov     [ebp-18h], eax
mov     eax, [ebp-18h]
mov     [ebp-24h], eax
mov     eax, [ebp-1ch]
mov     [ebp-20h], eax
push    6
pop     ecx
mov     esi, [ebp-20h]
mov     edi, [ebp-24h]
rep movsd
mov     eax, [ebp+8]
mov     [ebp-28h], eax
mov     eax, [ebp-28h]
mov     [ebp-8], eax
mov     eax, [ebp-8]
and     dword ptr [eax+10h], 0
mov     eax, [ebp-8]
mov     dword ptr [eax+14h], 7
xor     eax, eax
mov     [ebp-2], ax
push    2
pop     eax
imul    eax, 0
mov     ecx, [ebp-8]
mov     dx, [ebp-2]
mov     [ecx+eax], dx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn    8
mov     cl, 1bh
in      eax, 5ah
xor     eax, 604ae3h
pop     edi
cmpsd
icebp
jmp     far ptr 0c14eh:1710f8bh
or      ebx, [eax-14ca9690h]
mov     edi, 2045f290h
out     8fh, al
and     dword ptr [esi-618a4ad1h], 0ffffff95h
sub     ah, [eax+6f4f2d21h]
push    edi
jmp     far ptr 0ba26h:11b764feh
add     eax, 716927edh
stos    dword ptr es:[edi]
mov     bl, 0b3h
pop     ss
push    ebp
stosb
bound   ebp, [edi+1091f2aeh]
and     edx, [edi-77h]
jnz     short near ptr loc_37a9c289+1
xor     al, 4bh
in      al, dx
aam     0a8h
dec     edi
cmpsd
pop     ecx
movsd
cld
inc     ebp
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp+var_14], ecx
mov     eax, [ebp+arg_0]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+14h], 8
jb      short loc_37a9c33c
mov     [ebp+var_8], 1
jmp     short loc_37a9c340
and     [ebp+var_8], 0
movzx   eax, byte ptr [ebp+var_8]
test    eax, eax
jz      short loc_37a9c350
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
push    dword ptr [eax+10h]
push    [ebp+var_c]
mov     ecx, [ebp+var_14]
call    loc_37a9c367
mov     esp, ebp
pop     ebp
retn    4
add     eax, 819f3402h
fld     qword ptr [edi+199e23ffh]
popf
xchg    bh, [ebx+ebx*8+46h]
push    esp
cwde
cld
push    esp
mov     cl, 0bdh
push    ebx
out     dx, eax
fidivr  dword ptr [ecx+edi*4-7f4cd60fh]
push    esp
push    ebx
push    ebx
test    al, 75h
sub     ecx, ebx
js      short loc_37a9c3b7
jb      short loc_37a9c3ed
dec     edx
xor     al, 55h
aaa
adc     bl, [eax]
cmp     ch, cl
enter   7721h, 0c8h
cwde
jnz     short loc_37a9c37a
call    far ptr 90d4h:4282272ah
jb      short near ptr loc_37a9c3f2+1
aas
push    esi
int     3
in      eax, dx
loope   loc_37a9c3d9
in      eax, dx
retn
cmp     eax, 32c59558h
cmp     al, 21h
int     3
push    edx
cmpsd
arpl    sp, cx
wait
xchg    eax, ecx
xchg    eax, edx
fdiv    st, st
daa
out     dx, al
int     3
cli
push    es
xor     eax, 0d677386dh
cmpsd
xor     esp, [ecx-5ch]
add     cl, bl
cli
insb
scasd
cmpsd
stos    dword ptr es:[edi]
mov     edx, 9918343ch
js      short loc_37a9c3c5
das
or      eax, 432c28ebh
adc     eax, [eax+0fe28e58h]
sbb     dh, dl
push    cs
aaa
and     ah, [eax+62b651b5h]
push    cs
rol     esp, cl
mov     edi, 0ec6058a1h
shr     ebx, 39h
imul    edx, [ecx], 0cf995e0h
in      al, 0c4h
push    ds
and     ecx, [eax-8]
xchg    eax, edi
retn    57cbh
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+14h], 8
jb      short loc_37a9c492
mov     [ebp+var_8], 1
jmp     short loc_37a9c496
and     [ebp+var_8], 0
movzx   eax, byte ptr [ebp+var_8]
test    eax, eax
jz      short loc_37a9c4a6
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     esp, ebp
pop     ebp
retn
mov     ecx, [esp+arg_0]
push    0
push    0
call    sub_37a9c6a2
mov     ecx, [esp-556ah+arg_5572]
push    eax
push    0
call    loc_37a9bffc
push    eax
call    loc_37adc218
add     esp, 10h
retn
cld
shr     byte ptr [ebp+5], cl
push    ecx
out     dx, eax
movsb
and     [ecx+ebp*2], ebp
xor     dl, bh
hlt
cmp     al, [eax]
dec     ebx
lock mov esp, 22a3c87ch
inc     esp
sahf
iret
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     [ebp-10h], ecx
mov     eax, [ebp-10h]
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
mov     [ebp-18h], eax
mov     eax, [ebp-18h]
mov     [ebp-4], eax
mov     eax, [ebp-4]
mov     [ebp-0ch], eax
mov     eax, [ebp-4]
cmp     dword ptr [eax+14h], 8
jb      short loc_37a9c663
mov     dword ptr [ebp-8], 1
jmp     short loc_37a9c667
and     dword ptr [ebp-8], 0
movzx   eax, byte ptr [ebp-8]
test    eax, eax
jz      short loc_37a9c677
mov     eax, [ebp-4]
mov     eax, [eax]
mov     [ebp-0ch], eax
mov     eax, [ebp-4]
mov     eax, [eax+10h]
mov     ecx, [ebp-0ch]
lea     eax, [ecx+eax*2]
mov     [ebp-1ch], eax
mov     eax, [ebp+8]
mov     ecx, [ebp-1ch]
mov     [eax], ecx
push    dword ptr [ebp-4]
mov     ecx, [ebp+8]
call    nullsub_2
mov     eax, [ebp+8]
mov     esp, ebp
pop     ebp
retn    4
add     eax, 5a34fedah
jnz     short near ptr locret_37a9c69f+2
retn    5572h
push    ebp
mov     ebp, esp
sub     esp, 38h
mov     [ebp-1ch], ecx
mov     eax, [ebp-1ch]
mov     [ebp-20h], eax
mov     eax, [ebp-20h]
mov     [ebp-38h], eax
mov     dword ptr [ebp-8], 7fffffffh
mov     dword ptr [ebp-4], 8
mov     eax, [ebp-8]
cmp     eax, [ebp-4]
jnb     short loc_37a9c6f4
lea     eax, [ebp-4]
mov     [ebp-0ch], eax
jmp     short loc_37a9c6fa
lea     eax, [ebp-8]
mov     [ebp-0ch], eax
mov     eax, [ebp-0ch]
mov     [ebp-24h], eax
mov     eax, [ebp-24h]
mov     [ebp-28h], eax
mov     eax, [ebp-28h]
mov     eax, [eax]
mov     [ebp-2ch], eax
mov     eax, [ebp-2ch]
dec     eax
mov     [ebp-10h], eax
call    near ptr dword_37a124d0
mov     [ebp-14h], eax
mov     eax, [ebp-10h]
cmp     eax, [ebp-14h]
jnb     short loc_37a9c72d
lea     eax, [ebp-10h]
mov     [ebp-18h], eax
jmp     short loc_37a9c733
lea     eax, [ebp-14h]
mov     [ebp-18h], eax
mov     eax, [ebp-18h]
mov     [ebp-30h], eax
mov     eax, [ebp-30h]
mov     [ebp-34h], eax
mov     eax, [ebp-34h]
mov     eax, [eax]
mov     esp, ebp
pop     ebp
retn
dec     ecx
xchg    eax, ecx
clc
jge     short loc_37a9c720
daa
pop     edx
scasb
jge     short near ptr byte_37a9c79d+1
or      al, 6bh
add     ebp, ecx
or      bh, [ebx+1fh]
shl     dword ptr [ebp+62b9e39eh], 6dh
in      eax, 0b8h
xor     ah, cl
cmp     [ecx], ebp
xchg    eax, edi
outsd
xor     eax, esp
sub     bl, [edi+35h]
mov     ah, 58h
mov     esp, 0e3b64282h
xchg    eax, edx
sub     esi, ebx
sbb     al, 1dh
mov     ebx, 29df7380h
mov     bl, [ebp-40h]
insb
pop     ds
mov     ah, 53h
mov     al, 0cch
xor     [ebp-53h], ebx
lods    byte ptr fs:[esi]
mov     esi, 746991dh
aad     68h
mov     ah, 0b5h
and     bl, cl
pushf
cmp     bl, [ebx+ecx*8-53h]
sti
mov     edi, 0fe3f6744h
movsd
and     eax, eax
or      bl, [eax+edi*2-47f60c5ah]
stosd
imul    dword ptr [edi]
xchg    eax, ecx
enter   44ach, 7eh
pusha
cmp     al, 0edh
sub     edi, 0e3b7ded0h
xchg    eax, edx
pop     ebx
xor     byte ptr [edi], 7ch
xchg    eax, esp
jge     short loc_37a9c78b
movsd
das
stc
add     edx, [esi-0fh]
mov     esi, 78719fe8h
jnb     short loc_37a9c7db
mov     ds:0a7f648ddh, eax
push    es
or      eax, 8bb9044bh
inc     esp
and     al, 0ch
add     eax, eax
mov     [esp+4548h+size], eax
jmp     _memmove_0
mov     eax, [esp+0ch]
add     eax, eax
mov     [esp+0ch], eax
jmp     _memmove
inc     esi
pop     ds
fsubr   dword ptr [edx]
aas
jno     short loc_37a9c875
bound   ecx, [edi+3dh]
retf    36d7h
movsb
call    far ptr 8df6h:868c7f91h
repne loop near ptr loc_37a9c8f7+1
aaa
jb      short loc_37a9c8fa
inc     eax
stc
iret
push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_4]
push    esi
mov     esi, ecx
push    edi
lea     edx, [esi+1]
nop     dword ptr [eax]
mov     al, [esi]
inc     esi
test    al, al
jnz     short loc_37a9c8f0
mov     edi, [ebp+src]
sub     esi, edx
mov     eax, [edi+14h]
mov     edx, [edi+10h]
sub     eax, edx
cmp     esi, eax
ja      short loc_37a9c978
cmp     dword ptr [edi+14h], 10h
lea     eax, [edx+esi]
push    ebx
mov     [edi+10h], eax
mov     ebx, edi
jb      short loc_37a9c919
mov     ebx, [edi]
lea     eax, [esi+ecx]
cmp     eax, ebx
jbe     short loc_37a9c93d
lea     eax, [ebx+edx]
cmp     ecx, eax
ja      short loc_37a9c93d
cmp     ebx, ecx
ja      short loc_37a9c934
mov     [ebp+src], 0
jmp     short loc_37a9c940
mov     eax, ebx
sub     eax, ecx
mov     [ebp+src], eax
jmp     short loc_37a9c940
mov     [ebp+src], esi
lea     eax, [edx+1]
push    eax
lea     eax, [ebx+esi]
push    ebx
push    eax
call    _memmove
push    [ebp+src]
push    [ebp+arg_4]
push    ebx
call    _memmove_0
mov     ecx, [ebp+src]
mov     eax, esi
sub     eax, ecx
push    eax
lea     eax, [ecx+esi]
add     eax, [ebp+arg_4]
push    eax
lea     eax, [ebx+ecx]
push    eax
call    _memmove_0
add     esp, 24h
pop     ebx
jmp     short loc_37a9c98d
push    esi
push    ecx
push    0
mov     byte ptr [ebp+src], 0
mov     ecx, edi
push    [ebp+src]
push    esi
call    loc_37a9c9f0
mov     edi, eax
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+10h], 0
mov     dword ptr [eax+14h], 0
movups  xmm0, xmmword ptr [edi]
movups  xmmword ptr [eax], xmm0
movq    xmm0, qword ptr [edi+10h]
movq    qword ptr [eax+10h], xmm0
mov     dword ptr [edi+10h], 0
mov     dword ptr [edi+14h], 0fh
mov     byte ptr [edi], 0
pop     edi
pop     esi
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
mov     dword ptr [eax], offset off_37aefd68
mov     dword ptr [eax+4], 5
mov     eax, 1
pop     ebp
retn    0ch
ja      short loc_37a9c979
sbb     ah, [edi]
enter   4b81h, 6ch
das
mov     ch, 15h
out     91h, al
scasb
or      al, 57h
jz      short loc_37a9c98b
jg      short near ptr loc_37a9c9e3+4
adc     [ebp+3c11b56dh], ecx
push    ss
enter   0ffffa0a2h, 0f3h
sbb     eax, 4fcb5acbh
mov     edx, 65efe538h
jnz     short near ptr loc_37a9ca28+1
aas
ficomp  dword ptr [ebp-63h]
dec     ebx
push    eax
inc     edi
sub     edx, [edx+0]
jecxz   short loc_37a9ca48
or      [edi+1eh], eax
mov     ds:0d268234dh, eax
popa
push    esi
jmp     short near ptr loc_37a9c9d6+4
call    near ptr 2a1329d1h
iret
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, ecx
mov     ecx, 7fffffffh
mov     eax, ecx
push    esi
mov     esi, [ebp+arg_0]
mov     edx, [ebx+10h]
sub     eax, edx
mov     [ebp+size], edx
push    edi
cmp     eax, esi
jb      loc_37a9cc9d
lea     eax, [edx+esi]
mov     esi, [ebx+14h]
mov     edi, eax
mov     [ebp+var_8], eax
or      edi, 0fh
mov     [ebp+arg_0], esi
cmp     edi, ecx
jbe     short loc_37a9cb9e
mov     edi, ecx
jmp     short loc_37a9cbb6
mov     eax, esi
shr     eax, 1
sub     ecx, eax
cmp     esi, ecx
jbe     short loc_37a9cbaf
mov     edi, 7fffffffh
jmp     short loc_37a9cbb6
add     eax, esi
cmp     edi, eax
cmovb   edi, eax
lea     ecx, [edi+1]
cmp     ecx, 1000h
jb      short loc_37a9cbeb
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_37a9cca2
mov     edx, [ebp+size]
lea     esi, [eax+23h]
and     esi, 0ffffffe0h
mov     [esi-4], eax
jmp     short loc_37a9cc01
test    ecx, ecx
jz      short loc_37a9cbff
push    ecx
call    ??2@yapaxi@z
mov     edx, [ebp+size]
add     esp, 4
mov     esi, eax
jmp     short loc_37a9cc01
xor     esi, esi
mov     eax, [ebp+var_8]
mov     [ebx+10h], eax
mov     eax, [ebp+arg_c]
mov     [ebx+14h], edi
lea     edi, [esi+edx]
add     eax, edi
mov     [ebp+var_8], edi
cmp     [ebp+arg_0], 10h
mov     [ebp+size], eax
push    edx
jb      short loc_37a9cc74
mov     edi, [ebx]
push    edi
push    esi
call    _memmove_0
push    [ebp+arg_c]
push    [ebp+src]
push    [ebp+var_8]
call    _memmove_0
mov     eax, [ebp+size]
add     esp, 18h
mov     ecx, [ebp+arg_0]
inc     ecx
mov     byte ptr [eax], 0
cmp     ecx, 1000h
jb      short loc_37a9cc5d
mov     edx, [edi-4]
add     ecx, 23h
sub     edi, edx
lea     eax, [edi-4]
cmp     eax, 1fh
ja      short loc_37a9cca2
mov     edi, edx
push    ecx
push    edi
call    sub_37ab1b25
add     esp, 8
mov     [ebx], esi
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    ebx
push    esi
call    _memmove_0
push    [ebp+arg_c]
push    [ebp+src]
push    edi
call    _memmove_0
mov     eax, [ebp+size]
add     esp, 18h
mov     byte ptr [eax], 0
mov     eax, ebx
pop     edi
mov     [ebx], esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
call    sub_37a14900
call    __invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, ecx
mov     ecx, 7fffffffh
mov     eax, ecx
push    esi
mov     esi, [ebp+arg_0]
mov     edx, [ebx+10h]
sub     eax, edx
mov     [ebp+size], edx
push    edi
cmp     eax, esi
jb      loc_37a9cdf4
lea     eax, [edx+esi]
mov     esi, [ebx+14h]
mov     edi, eax
mov     [ebp+var_8], eax
or      edi, 0fh
mov     [ebp+arg_0], esi
cmp     edi, ecx
jbe     short loc_37a9ccee
mov     edi, ecx
jmp     short loc_37a9cd06
mov     eax, esi
shr     eax, 1
sub     ecx, eax
cmp     esi, ecx
jbe     short loc_37a9ccff
mov     edi, 7fffffffh
jmp     short loc_37a9cd06
add     eax, esi
cmp     edi, eax
cmovb   edi, eax
lea     ecx, [edi+1]
cmp     ecx, 1000h
jb      short loc_37a9cd3b
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_37a9cdf9
mov     edx, [ebp+size]
lea     esi, [eax+23h]
and     esi, 0ffffffe0h
mov     [esi-4], eax
jmp     short loc_37a9cd51
test    ecx, ecx
jz      short loc_37a9cd4f
push    ecx
call    ??2@yapaxi@z
mov     edx, [ebp+size]
add     esp, 4
mov     esi, eax
jmp     short loc_37a9cd51
xor     esi, esi
mov     eax, [ebp+var_8]
mov     [ebx+10h], eax
movsx   eax, byte ptr [ebp+val]
mov     [ebp+val], eax
mov     eax, [ebp+arg_8]
mov     [ebx+14h], edi
lea     edi, [esi+edx]
add     eax, edi
mov     [ebp+var_8], edi
cmp     [ebp+arg_0], 10h
mov     [ebp+size], eax
push    edx
jb      short loc_37a9cdcb
mov     edi, [ebx]
push    edi
push    esi
call    _memmove_0
push    [ebp+arg_8]
push    [ebp+val]
push    [ebp+var_8]
call    _memset
mov     eax, [ebp+size]
add     esp, 18h
mov     ecx, [ebp+arg_0]
inc     ecx
mov     byte ptr [eax], 0
cmp     ecx, 1000h
jb      short loc_37a9cdb4
mov     edx, [edi-4]
add     ecx, 23h
sub     edi, edx
lea     eax, [edi-4]
cmp     eax, 1fh
ja      short loc_37a9cdf9
mov     edi, edx
push    ecx
push    edi
call    sub_37ab1b25
add     esp, 8
mov     [ebx], esi
mov     eax, ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    ebx
push    esi
call    _memmove_0
push    [ebp+arg_8]
push    [ebp+val]
push    edi
call    _memset
mov     eax, [ebp+size]
add     esp, 18h
mov     byte ptr [eax], 0
mov     eax, ebx
pop     edi
mov     [ebx], esi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
call    sub_37a14900
call    __invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9ce00
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 60h
push    esi
push    edi
push    0
lea     ecx, [ebp+var_1c]
mov     [ebp+var_10], 0
call    ??0_lockit@std@@qae@h@z
mov     edi, dword_37b720f8
mov     eax, dword_37b71c38
mov     [ebp+var_4], 0
mov     [ebp+var_18], eax
test    edi, edi
jnz     short loc_37a9ce76
push    edi
lea     ecx, [ebp+var_14]
call    ??0_lockit@std@@qae@h@z
cmp     dword_37b720f8, edi
jnz     short loc_37a9ce68
mov     eax, dword_37b720e4
inc     eax
mov     dword_37b720e4, eax
mov     dword_37b720f8, eax
lea     ecx, [ebp+var_14]
call    ??1_lockit@std@@qae@xz
mov     edi, dword_37b720f8
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx+4]
cmp     edi, [ecx+0ch]
jnb     short loc_37a9ce91
mov     eax, [ecx+8]
mov     esi, [eax+edi*4]
test    esi, esi
jnz     loc_37a9cf9a
jmp     short loc_37a9ce93
xor     esi, esi
cmp     byte ptr [ecx+14h], 0
jz      short loc_37a9cea9
call    sub_37ab0745
cmp     edi, [eax+0ch]
jnb     short loc_37a9ceb1
mov     eax, [eax+8]
mov     esi, [eax+edi*4]
test    esi, esi
jnz     loc_37a9cf9a
mov     eax, [ebp+var_18]
test    eax, eax
jz      short loc_37a9cebf
mov     esi, eax
jmp     loc_37a9cf9a
push    18h
call    ??2@yapaxi@z
mov     esi, eax
add     esp, 4
mov     [ebp+var_18], esi
mov     byte ptr [ebp+var_4], 1
test    esi, esi
jz      loc_37a9cf70
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
test    eax, eax
jnz     short loc_37a9ceeb
mov     edi, offset locale
jmp     short loc_37a9cef5
mov     edi, [eax+18h]
test    edi, edi
jnz     short loc_37a9cef5
lea     edi, [eax+1ch]
push    0
lea     ecx, [ebp+var_6c]
call    ??0_lockit@std@@qae@h@z
mov     [ebp+var_68], 0
mov     [ebp+var_64], 0
mov     [ebp+var_60], 0
mov     [ebp+var_5c], 0
xor     eax, eax
mov     [ebp+var_58], 0
mov     [ebp+var_54], ax
mov     [ebp+var_50], eax
mov     [ebp+var_4c], ax
mov     [ebp+var_48], eax
mov     [ebp+var_44], al
mov     [ebp+var_40], eax
mov     [ebp+var_3c], al
mov     byte ptr [ebp+var_4], 8
test    edi, edi
jz      short loc_37a9cfb4
lea     eax, [ebp+var_6c]
push    edi
push    eax
call    ?_locinfo_ctor@_locinfo@std@@saxpav12@pbd@z
lea     eax, [ebp+var_38]
mov     [ebp+var_10], 1
push    eax
mov     dword ptr [esi+4], 0
mov     dword ptr [esi], offset dword_37aefd00
call    __getctype
add     esp, 0ch
movups  xmm0, xmmword ptr [eax]
movups  xmmword ptr [esi+8], xmm0
jmp     short loc_37a9cf72
xor     esi, esi
test    byte ptr [ebp+var_10], 1
mov     byte ptr [ebp+var_4], 0
jz      short loc_37a9cf84
lea     ecx, [ebp+var_6c]
call    sub_37a9d4a0
mov     dword_37b71c38, esi
mov     ecx, esi
mov     edx, [esi]
call    dword ptr [edx+4]
push    esi
call    ?_facet_register@std@@yaxpav_facet_base@1@@z
add     esp, 4
lea     ecx, [ebp+var_1c]
call    ??1_lockit@std@@qae@xz
mov     ecx, [ebp+var_c]
mov     eax, esi
pop     edi
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    offset abadlocalename
lea     ecx, [ebp+pexceptionobject]
call    loc_37a9d380
push    offset pthrowinfo
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dword_37adfcf0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 54h
push    esi
push    edi
mov     edi, ecx
lea     ecx, [ebp-30h]
mov     [ebp-10h], edi
push    dword ptr [ebp+10h]
call    sub_37a9baf5
mov     eax, [ebp+8]
mov     esi, [ebp+0ch]
mov     [ebp-10h], eax
mov     [ebp+10h], esi
mov     ecx, [ebp-20h]
mov     dword ptr [ebp-4], 0
test    ecx, ecx
jz      short loc_37a9d05f
mov     edx, [ebp-1ch]
mov     eax, edx
sub     eax, ecx
push    2
push    offset dword_37aefd54
cmp     eax, 2
jb      short loc_37a9d04e
cmp     edx, 10h
lea     esi, [ebp-30h]
lea     eax, [ecx+2]
cmovnb  esi, [ebp-30h]
add     esi, ecx
mov     [ebp-20h], eax
push    esi
call    _memmove
mov     byte ptr [esi+2], 0
add     esp, 0ch
mov     esi, [ebp+10h]
jmp     short loc_37a9d05f
mov     byte ptr [ebp+10h], 0
lea     ecx, [ebp-30h]
push    dword ptr [ebp+10h]
push    2
call    sub_37a9cb60
push    dword ptr [ebp-10h]
mov     eax, [esi]
lea     ecx, [ebp-48h]
push    ecx
mov     ecx, esi
call    dword ptr [eax+8]
cmp     dword ptr [ebp-34h], 10h
lea     edx, [ebp-48h]
mov     ecx, [ebp-38h]
cmovnb  edx, [ebp-48h]
mov     eax, [ebp-1ch]
mov     esi, [ebp-20h]
sub     eax, esi
mov     byte ptr [ebp-4], 1
mov     [ebp+10h], ecx
push    ecx
push    edx
cmp     ecx, eax
ja      short loc_37a9d0b5
cmp     dword ptr [ebp-1ch], 10h
lea     eax, [ecx+esi]
mov     [ebp-20h], eax
lea     eax, [ebp-30h]
cmovnb  eax, [ebp-30h]
add     esi, eax
push    esi
call    _memmove
mov     eax, [ebp+10h]
add     esp, 0ch
mov     byte ptr [esi+eax], 0
jmp     short loc_37a9d0c5
mov     byte ptr [ebp+10h], 0
push    dword ptr [ebp+10h]
push    ecx
lea     ecx, [ebp-30h]
call    sub_37a9cb60
mov     edx, [ebp-34h]
cmp     edx, 10h
jb      short loc_37a9d0f9
mov     ecx, [ebp-48h]
inc     edx
mov     eax, ecx
cmp     edx, 1000h
jb      short loc_37a9d0ef
mov     ecx, [ecx-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      loc_37a9d1ac
push    edx
push    ecx
call    sub_37ab1b25
add     esp, 8
movups  xmm1, xmmword ptr [ebp-30h]
lea     ecx, [ebp-60h]
mov     dword ptr [edi], offset dword_37aefcb0
movq    xmm0, qword ptr [ebp-20h]
movq    qword ptr [ebp-50h], xmm0
xorps   xmm0, xmm0
cmp     dword ptr [ebp-4ch], 10h
movd    eax, xmm1
movq    qword ptr [edi+4], xmm0
movups  xmmword ptr [ebp-60h], xmm1
cmovnb  ecx, eax
mov     dword ptr [ebp-20h], 0
lea     eax, [edi+4]
mov     dword ptr [ebp-1ch], 0fh
push    eax
lea     eax, [ebp-18h]
mov     byte ptr [ebp-30h], 0
push    eax
mov     [ebp-18h], ecx
mov     byte ptr [ebp-14h], 1
call    ___std_exception_copy
mov     edx, [ebp-4ch]
add     esp, 8
mov     dword ptr [edi], offset off_37aefcd0
cmp     edx, 10h
jb      short loc_37a9d186
mov     ecx, [ebp-60h]
inc     edx
mov     eax, ecx
cmp     edx, 1000h
jb      short loc_37a9d17c
mov     ecx, [ecx-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a9d1b1
push    edx
push    ecx
call    sub_37ab1b25
add     esp, 8
mov     eax, [ebp+8]
mov     ecx, [ebp-0ch]
mov     [edi+0ch], eax
mov     eax, [ebp+0ch]
mov     [edi+10h], eax
mov     eax, edi
mov     dword ptr [edi], offset dword_37aefd4c
pop     edi
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    0ch
call    __invalid_parameter_noinfo_noreturn
call    __invalid_parameter_noinfo_noreturn
push    esi
mov     esi, [esp+8]
xorps   xmm0, xmm0
push    edi
mov     edi, ecx
lea     eax, [edi+4]
push    eax
mov     dword ptr [edi], offset dword_37aefcb0
movq    qword ptr [eax], xmm0
lea     eax, [esi+4]
push    eax
call    ___std_exception_copy
mov     dword ptr [edi], offset dword_37aefd4c
add     esp, 8
mov     eax, [esi+0ch]
mov     [edi+0ch], eax
mov     eax, [esi+10h]
mov     [edi+10h], eax
mov     eax, edi
pop     edi
pop     esi
retn    4
jnz     short loc_37a9d20a
imul    esi, [eax], 75h
jecxz   short loc_37a9d1dc
push    ss
popa
mov     eax, [ebp-78h]
stc
inc     eax
jnz     short loc_37a9d263
inc     esp
sub     bh, al
fxch    st(4)
cmp     eax, 8d8ce3c2h
and     eax, 8e7a2d7ch
fbstp   tbyte ptr [ecx]
leave
rol     dword ptr [esi-6235ab88h], 57h
retf
jz      short near ptr loc_37a9d20b+1
mov     esi, 0e755d8d3h
aaa
adc     eax, 3a5bf30eh
ja      short loc_37a9d2e1
aas
retf    48beh
add     [ebx+4cc50beah], esp
cli
jnp     short loc_37a9d223
mov     ds:92eeddah, al
push    edi
jle     short loc_37a9d2c4
dec     esp
fisub   dword ptr ds:0d0f87342h
ja      short loc_37a9d2db
inc     eax
jb      short loc_37a9d2c4
add     [esi+3641e2f3h], cl
hlt
adc     edx, [eax-1]
cwde
xchg    dh, [edi-7980714ch]
sbb     dh, [esi-55a9fe3fh]
imul    ebp, [esi], 8b50acd8h
push    edi
jz      short loc_37a9d26e
xchg    eax, esi
mov     al, 43h
and     [ebx+4b5ca6bch], ebp
add     al, 0ch
xor     al, 0cbh
not     dword ptr ds:9becb3f8h
push    edi
mov     ecx, 66245861h
insd
rep jl short near ptr loc_37a9d29d+6
lodsd
add     dword ptr [edi-27h], 2ah
stosb
jle     short loc_37a9d2dc
sub     ecx, [ecx]
jb      short loc_37a9d37c
lock push cs
pop     esi
bound   edx, [ecx]
dec     dword ptr [ecx+79429617h]
mov     ch, 0c9h
repne lahf
jnb     short near ptr loc_37a9d2d5+3
cdq
arpl    [esi-76abcee6h], dx
pusha
xchg    eax, esp
add     bh, [ebx+78881d7fh]
cwde
jo      short near ptr byte_37a9d399
dec     edi
out     53h, eax
inc     eax
dec     eax
movq    qword ptr [eax], xmm0
mov     eax, [esp+0ch]
add     eax, 4
push    eax
call    ___std_exception_copy
add     esp, 8
mov     dword ptr [esi], offset off_37aefcd0
mov     eax, esi
pop     esi
retn    4
mov     edi, 834c9179h
mov     ds, word ptr [ebp+edi-1ae459e3h]
cmc
or      dh, [esi-7d394a7ch]
mov     esi, [ebp-1cd3e90dh]
movq    qword ptr [eax], xmm0
lea     eax, [esi+4]
push    eax
call    ___std_exception_copy
mov     dword ptr [edi], offset dword_37aefd4c
add     esp, 8
mov     eax, [esi+0ch]
mov     [edi+0ch], eax
mov     eax, [esi+10h]
mov     [edi+10h], eax
mov     eax, edi
mov     dword ptr [edi], offset dword_37aefd5c
pop     edi
pop     esi
retn    4
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
push    offset seh_37a9d570
push    eax
mov     large fs:0, esp
push    esi
mov     esi, ecx
push    esi
call    ?_locinfo_dtor@_locinfo@std@@saxpav12@@z
mov     eax, [esi+2ch]
add     esp, 4
test    eax, eax
jz      short loc_37a9d4d4
push    eax
call    j___free_base
add     esp, 4
mov     dword ptr [esi+2ch], 0
mov     eax, [esi+24h]
test    eax, eax
jz      short loc_37a9d4eb
push    eax
call    j___free_base
add     esp, 4
mov     dword ptr [esi+24h], 0
mov     eax, [esi+1ch]
test    eax, eax
jz      short loc_37a9d502
push    eax
call    j___free_base
add     esp, 4
mov     dword ptr [esi+1ch], 0
mov     eax, [esi+14h]
test    eax, eax
jz      short loc_37a9d519
push    eax
call    j___free_base
add     esp, 4
mov     dword ptr [esi+14h], 0
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_37a9d530
push    eax
call    j___free_base
add     esp, 4
mov     dword ptr [esi+0ch], 0
mov     eax, [esi+4]
test    eax, eax
jz      short loc_37a9d547
push    eax
call    j___free_base
add     esp, 4
mov     ecx, esi
mov     dword ptr [esi+4], 0
call    ??1_lockit@std@@qae@xz
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
push    offset seh_37a9d570
push    eax
mov     large fs:0, esp
mov     ecx, [ecx]
mov     eax, [ecx]
mov     eax, [eax+4]
mov     ecx, [eax+ecx+38h]
test    ecx, ecx
jz      short loc_37a9d59c
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
push    offset seh_37a9d570
push    eax
mov     large fs:0, esp
mov     ecx, [ecx+4]
test    ecx, ecx
jz      short loc_37a9d600
mov     eax, [ecx]
call    dword ptr [eax+8]
test    eax, eax
jz      short loc_37a9d600
mov     edx, [eax]
mov     ecx, eax
push    1
call    dword ptr [edx]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
push    offset seh_37aa5038
push    eax
mov     large fs:0, esp
push    esi
mov     esi, ecx
call    j____uncaught_exceptions
test    eax, eax
jnz     short loc_37a9d63b
mov     ecx, [esi]
call    sub_37a9db40
mov     ecx, [esi]
mov     [ebp+var_4], 0
mov     eax, [ecx]
mov     eax, [eax+4]
mov     ecx, [eax+ecx+38h]
test    ecx, ecx
jz      short loc_37a9d656
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
test    [esp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset dword_37aefd30
jz      short loc_37a9d70b
push    8
push    esi
call    sub_37ab1b25
add     esp, 8
mov     eax, esi
pop     esi
retn    4
push    esi
mov     esi, ecx
lea     eax, [esi+4]
mov     dword ptr [esi], offset dword_37aefcb0
push    eax
call    ___std_exception_destroy
add     esp, 4
test    [esp+4+arg_0], 1
jz      short loc_37a9d747
push    14h
push    esi
call    sub_37ab1b25
add     esp, 8
mov     eax, esi
pop     esi
retn    4
push    esi
push    edi
mov     edi, ecx
mov     eax, [edi+10h]
mov     esi, [edi]
inc     eax
push    eax
push    esi
push    edi
call    _memmove_0
mov     ecx, [edi+14h]
add     esp, 0ch
inc     ecx
cmp     ecx, 1000h
jb      short loc_37a9d7b3
mov     edx, [esi-4]
add     ecx, 23h
sub     esi, edx
lea     eax, [esi-4]
cmp     eax, 1fh
ja      short loc_37a9d7c7
mov     esi, edx
push    ecx
push    esi
call    sub_37ab1b25
add     esp, 8
mov     dword ptr [edi+14h], 0fh
pop     edi
pop     esi
retn
call    __invalid_parameter_noinfo_noreturn
or      eax, 0ffffffffh
lock xadd [ecx+4], eax
mov     eax, 0
cmovz   eax, ecx
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
mov     esi, ecx
mov     eax, 1
push    edi
mov     edi, [ebp+arg_0]
mov     [ebp+var_8], esi
mov     edx, [esi+8]
test    edx, edx
cmovnz  eax, edx
xchg    ax, ax
mov     ebx, eax
sub     ebx, edx
cmp     ebx, edi
jb      short loc_37a9d81d
cmp     eax, 8
jnb     short loc_37a9d830
mov     ecx, 0fffffffh
sub     ecx, eax
cmp     ecx, eax
jb      loc_37a9d97a
add     eax, eax
jmp     short loc_37a9d810
mov     edi, [esi+0ch]
lea     ecx, ds:0[eax*4]
shr     edi, 2
mov     [ebp+var_c], edi
cmp     eax, 3fffffffh
jbe     short loc_37a9d84c
or      ecx, 0ffffffffh
jmp     short loc_37a9d854
cmp     ecx, 1000h
jb      short loc_37a9d87b
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_37a9d975
lea     edx, [eax+23h]
and     edx, 0ffffffe0h
mov     [edx-4], eax
jmp     short loc_37a9d88e
test    ecx, ecx
jz      short loc_37a9d88c
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     edx, eax
jmp     short loc_37a9d88e
xor     edx, edx
mov     eax, [esi+4]
mov     esi, [esi+8]
shl     edi, 2
shl     esi, 2
mov     [ebp+size], edi
mov     [ebp+arg_0], edx
lea     ecx, [eax+edi]
add     edi, edx
sub     esi, ecx
add     esi, eax
push    esi
push    ecx
push    edi
call    _memmove
lea     eax, [esi+edi]
add     esp, 0ch
mov     esi, [ebp+var_8]
mov     edi, [ebp+var_c]
mov     [ebp+var_10], eax
mov     edx, [esi+4]
cmp     edi, ebx
ja      short loc_37a9d8fc
lea     ecx, ds:0[edi*4]
push    ecx
push    edx
push    eax
call    _memmove
mov     eax, ebx
sub     eax, edi
mov     edi, [ebp+size]
shl     eax, 2
push    eax
mov     eax, [ebp+var_10]
add     eax, edi
push    0
push    eax
call    _memset
push    edi
mov     edi, [ebp+arg_0]
push    0
push    edi
call    _memset
jmp     short loc_37a9d932
lea     edi, ds:0[ebx*4]
push    edi
push    edx
push    eax
call    _memmove
mov     esi, [esi+4]
lea     eax, [edi+esi]
sub     esi, eax
add     esi, [ebp+size]
push    esi
push    eax
push    [ebp+arg_0]
call    _memmove
push    edi
mov     edi, [ebp+arg_0]
push    0
lea     eax, [esi+edi]
push    eax
call    _memset
mov     esi, [ebp+var_8]
mov     eax, [esi+4]
add     esp, 24h
test    eax, eax
jz      short loc_37a9d966
mov     ecx, [esi+8]
shl     ecx, 2
cmp     ecx, 1000h
jb      short loc_37a9d95c
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a9d975
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
mov     [esi+4], edi
add     [esi+8], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
call    __invalid_parameter_noinfo_noreturn
mov     ecx, esi
call    sub_37a9dbc0
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, ecx
mov     eax, 1
push    edi
mov     edi, [ebp+arg_0]
mov     [ebp+var_8], esi
mov     edx, [esi+8]
test    edx, edx
cmovnz  eax, edx
xchg    ax, ax
mov     ebx, eax
sub     ebx, edx
cmp     ebx, edi
jb      short loc_37a9d9bd
cmp     eax, 8
jnb     short loc_37a9d9d0
mov     ecx, 6666666h
sub     ecx, eax
cmp     ecx, eax
jb      loc_37a9db1b
add     eax, eax
jmp     short loc_37a9d9b0
mov     edi, [esi+0ch]
lea     ecx, ds:0[eax*4]
mov     [ebp+var_4], edi
cmp     eax, 3fffffffh
jbe     short loc_37a9d9e9
or      ecx, 0ffffffffh
jmp     short loc_37a9d9f1
cmp     ecx, 1000h
jb      short loc_37a9da18
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
add     esp, 4
test    eax, eax
jz      loc_37a9db16
lea     edx, [eax+23h]
and     edx, 0ffffffe0h
mov     [edx-4], eax
jmp     short loc_37a9da2b
test    ecx, ecx
jz      short loc_37a9da29
push    ecx
call    ??2@yapaxi@z
add     esp, 4
mov     edx, eax
jmp     short loc_37a9da2b
xor     edx, edx
mov     eax, [esi+4]
mov     esi, [esi+8]
shl     edi, 2
shl     esi, 2
mov     [ebp+arg_0], edx
lea     ecx, [eax+edi]
add     edi, edx
sub     esi, ecx
add     esi, eax
push    esi
push    ecx
push    edi
call    _memmove
mov     ecx, [ebp+var_4]
lea     eax, [esi+edi]
mov     esi, [ebp+var_8]
add     esp, 0ch
mov     [ebp+var_c], eax
mov     edx, [esi+4]
cmp     ecx, ebx
ja      short loc_37a9da94
lea     edi, ds:0[ecx*4]
push    edi
push    edx
push    eax
call    _memmove
mov     eax, ebx
sub     eax, [ebp+var_4]
shl     eax, 2
push    eax
mov     eax, [ebp+var_c]
add     eax, edi
push    0
push    eax
call    _memset
push    edi
mov     edi, [ebp+arg_0]
push    0
push    edi
call    _memset
jmp     short loc_37a9dad3
lea     edi, ds:0[ebx*4]
push    edi
push    edx
push    eax
call    _memmove
mov     esi, [esi+4]
mov     edx, [ebp+var_4]
lea     eax, [edi+esi]
sub     esi, eax
lea     ecx, ds:0[edx*4]
add     esi, ecx
push    esi
push    eax
push    [ebp+arg_0]
call    _memmove
push    edi
mov     edi, [ebp+arg_0]
push    0
lea     eax, [esi+edi]
push    eax
call    _memset
mov     esi, [ebp+var_8]
mov     eax, [esi+4]
add     esp, 24h
test    eax, eax
jz      short loc_37a9db07
mov     ecx, [esi+8]
shl     ecx, 2
cmp     ecx, 1000h
jb      short loc_37a9dafd
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a9db16
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
mov     [esi+4], edi
add     [esi+8], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
call    __invalid_parameter_noinfo_noreturn
mov     ecx, esi
call    sub_37a9dbc0
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9db40
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
mov     [ebp+var_4], 0
push    edi
mov     [ebp+var_10], esp
mov     eax, [esi]
mov     eax, [eax+4]
cmp     dword ptr [eax+esi+0ch], 0
jnz     short loc_37a9db9f
test    byte ptr [eax+esi+14h], 2
jz      short loc_37a9db9f
mov     ecx, [eax+esi+38h]
mov     eax, [ecx]
call    dword ptr [eax+34h]
cmp     eax, 0ffffffffh
jnz     short loc_37a9db9f
mov     eax, [esi]
push    0
mov     ecx, [eax+4]
mov     eax, [ecx+esi+0ch]
add     ecx, esi
or      eax, 4
push    eax
call    sub_37a9dbd0
mov     ecx, [ebp+var_c]
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset loc_37a9db9f
retn
push    offset dword_37aefdf8
call    sub_37ab022c
mov     eax, [esp+arg_0]
sub     esp, 1ch
and     eax, 17h
mov     [ecx+0ch], eax
mov     ecx, [ecx+10h]
and     ecx, eax
jz      short loc_37a9dbfd
cmp     [esp+1ch+arg_4], 0
jnz     short loc_37a9dc03
lea     eax, [esp+1ch+pexceptionobject]
push    1
push    eax
test    cl, 4
jnz     short loc_37a9dc0c
test    cl, 2
jz      short loc_37a9dc58
jmp     short loc_37a9dc32
add     esp, 1ch
retn    8
push    0
push    0
call    __cxxthrowexception@8
call    sub_37a9df00
add     esp, 8
lea     ecx, [esp+1ch+var_14]
push    eax
push    offset dword_37aefdb0
call    loc_37a9d280
push    offset stru_37b06d44
lea     eax, [esp+28h+pexceptionobject]
push    eax
call    __cxxthrowexception@8
call    sub_37a9df00
add     esp, 8
lea     ecx, [esp+1ch+var_14]
push    eax
push    offset dword_37aefdc8
call    loc_37a9d280
push    offset stru_37b06d44
lea     eax, [esp+28h+pexceptionobject]
push    eax
call    __cxxthrowexception@8
call    sub_37a9df00
add     esp, 8
lea     ecx, [esp+1ch+var_14]
push    eax
push    offset dword_37aefde0
call    loc_37a9d280
push    offset stru_37b06d44
lea     eax, [esp+28h+pexceptionobject]
push    eax
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
push    offset seh_37a9de20
push    eax
mov     large fs:0, esp
sub     esp, 8
push    esi
mov     esi, ecx
mov     eax, [esi]
mov     eax, [eax+4]
mov     ecx, [eax+esi+38h]
test    ecx, ecx
jz      loc_37a9dee8
mov     eax, [ecx]
mov     [ebp+var_14], esi
call    dword ptr [eax+4]
mov     edx, [esi]
mov     ecx, [edx+4]
mov     eax, edx
mov     [ebp+var_4], 0
cmp     dword ptr [ecx+esi+0ch], 0
jnz     short loc_37a9de7f
mov     ecx, [ecx+esi+3ch]
test    ecx, ecx
jz      short loc_37a9de7f
cmp     ecx, esi
jz      short loc_37a9de7f
call    sub_37a9de20
mov     eax, [esi]
mov     ecx, [eax+4]
mov     eax, [ecx+esi+0ch]
test    eax, eax
setz    [ebp+var_10]
mov     [ebp+var_4], 1
test    eax, eax
jnz     short loc_37a9debb
mov     ecx, [ecx+esi+38h]
mov     eax, [ecx]
call    dword ptr [eax+34h]
cmp     eax, 0ffffffffh
jnz     short loc_37a9debb
mov     eax, [esi]
push    0
mov     ecx, [eax+4]
mov     eax, [ecx+esi+0ch]
add     ecx, esi
or      eax, 4
push    eax
call    sub_37a9dbd0
mov     [ebp+var_4], 2
call    j____uncaught_exceptions
test    eax, eax
jnz     short loc_37a9ded2
mov     ecx, esi
call    sub_37a9db40
mov     eax, [esi]
mov     byte ptr [ebp+var_4], 3
mov     eax, [eax+4]
mov     ecx, [eax+esi+38h]
test    ecx, ecx
jz      short loc_37a9dee8
mov     eax, [ecx]
call    dword ptr [eax+8]
mov     ecx, [ebp+var_c]
mov     eax, esi
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    offset dword_37b71c40
push    offset sub_37a9c9d0
push    offset dword_37b71c3c
call    ?_execute_once@std@@yahaauonce_flag@1@p6ghpax1papax@z1@z
add     esp, 0ch
test    eax, eax
jz      _terminate
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
mov     [eax], ecx
mov     dword ptr [eax+4], offset dword_37b71c40
retn
push    ebp
mov     ebp, esp
sub     esp, 8
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, ecx
push    edi
mov     edi, [esi+10h]
mov     [ebp+var_8], edi
cmp     edi, ebx
ja      loc_37a9e114
mov     edx, [esi+14h]
mov     [ebp+arg_0], edx
cmp     edx, ebx
jz      loc_37a9e114
jnb     loc_37a9e105
mov     ecx, ebx
mov     eax, 7fffffffh
sub     ecx, edi
sub     eax, edi
cmp     eax, ecx
jb      loc_37a9e11d
mov     edi, ebx
or      edi, 0fh
cmp     edi, 7fffffffh
jbe     short loc_37a9e027
mov     edi, 7fffffffh
jmp     short loc_37a9e045
mov     ecx, edx
mov     eax, 7fffffffh
shr     ecx, 1
sub     eax, ecx
cmp     edx, eax
jbe     short loc_37a9e03d
mov     edi, 7fffffffh
jmp     short loc_37a9e045
lea     eax, [ecx+edx]
cmp     edi, eax
cmovb   edi, eax
lea     ecx, [edi+1]
cmp     ecx, 1000h
jb      short loc_37a9e07c
lea     eax, [ecx+23h]
or      edx, 0ffffffffh
cmp     eax, ecx
cmovbe  eax, edx
push    eax
call    ??2@yapaxi@z
mov     ecx, eax
add     esp, 4
test    ecx, ecx
jz      loc_37a9e122
mov     edx, [ebp+arg_0]
lea     eax, [ecx+23h]
and     eax, 0ffffffe0h
mov     [eax-4], ecx
jmp     short loc_37a9e090
test    ecx, ecx
jz      short loc_37a9e08e
push    ecx
call    ??2@yapaxi@z
mov     edx, [ebp+arg_0]
add     esp, 4
jmp     short loc_37a9e090
xor     eax, eax
mov     [esi+10h], ebx
mov     ebx, [ebp+var_8]
mov     [ebp+var_4], eax
mov     [esi+14h], edi
lea     ecx, [ebx+1]
push    ecx
cmp     edx, 10h
jb      short loc_37a9e0ea
mov     edi, [esi]
push    edi
push    eax
call    _memmove_0
mov     ecx, [ebp+arg_0]
add     esp, 0ch
inc     ecx
cmp     ecx, 1000h
jb      short loc_37a9e0cf
mov     edx, [edi-4]
add     ecx, 23h
sub     edi, edx
lea     eax, [edi-4]
cmp     eax, 1fh
ja      short loc_37a9e122
mov     edi, edx
push    ecx
push    edi
call    sub_37ab1b25
mov     eax, [ebp+var_4]
add     esp, 8
mov     [esi], eax
mov     [esi+10h], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    esi
push    eax
call    _memmove_0
mov     eax, [ebp+var_4]
add     esp, 0ch
mov     [esi], eax
mov     [esi+10h], ebx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
cmp     ebx, 10h
jnb     short loc_37a9e114
cmp     edx, 10h
jb      short loc_37a9e114
call    sub_37a9d780
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
call    sub_37a14900
call    __invalid_parameter_noinfo_noreturn
push    ebp
mov     ebp, esp
mov     edx, [ebp+arg_0]
push    esi
mov     esi, [ecx+10h]
cmp     edx, esi
ja      short loc_37a9e152
mov     [ecx+10h], edx
cmp     dword ptr [ecx+14h], 10h
jb      short loc_37a9e149
mov     ecx, [ecx]
mov     byte ptr [ecx+edx], 0
pop     esi
pop     ebp
retn    8
push    ebx
mov     ebx, [ecx+14h]
mov     eax, ebx
push    edi
mov     edi, edx
sub     eax, esi
sub     edi, esi
cmp     edi, eax
ja      short loc_37a9e189
mov     [ecx+10h], edx
cmp     ebx, 10h
jb      short loc_37a9e16d
mov     ecx, [ecx]
movsx   eax, byte ptr [ebp+val]
add     esi, ecx
push    edi
push    eax
push    esi
call    _memset
add     esp, 0ch
mov     byte ptr [esi+edi], 0
pop     edi
pop     ebx
pop     esi
pop     ebp
retn    8
push    [ebp+val]
mov     byte ptr [ebp+arg_0], 0
push    edi
push    [ebp+arg_0]
push    edi
call    sub_37a9ccb0
pop     edi
pop     ebx
pop     esi
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_0]
push    esi
mov     esi, ecx
push    edi
mov     ecx, [esi+10h]
cmp     ebx, ecx
jbe     short loc_37a9e23d
mov     edx, [esi+8]
lea     eax, [ecx+1]
cmp     edx, eax
ja      short loc_37a9e1d8
push    1
mov     ecx, esi
call    sub_37a9d990
mov     edx, [esi+8]
lea     eax, [edx-1]
and     [esi+0ch], eax
mov     ecx, [esi+10h]
mov     eax, [esi+8]
add     ecx, [esi+0ch]
dec     eax
and     ecx, eax
mov     eax, [esi+4]
cmp     dword ptr [eax+ecx*4], 0
lea     edi, ds:0[ecx*4]
jnz     short loc_37a9e20d
push    28h
call    ??2@yapaxi@z
mov     ecx, [esi+4]
add     esp, 4
mov     [edi+ecx], eax
mov     eax, [esi+4]
mov     eax, [edi+eax]
xorps   xmm0, xmm0
movups  xmmword ptr [eax], xmm0
movups  xmmword ptr [eax+10h], xmm0
movq    qword ptr [eax+20h], xmm0
mov     dword ptr [eax+1ch], 0
mov     dword ptr [eax+20h], 0fh
mov     byte ptr [eax+0ch], 0
inc     dword ptr [esi+10h]
mov     ecx, [esi+10h]
cmp     ecx, ebx
jb      short loc_37a9e1c2
cmp     ebx, ecx
jnb     short loc_37a9e2a8
nop
mov     eax, [esi+0ch]
dec     eax
add     ecx, eax
mov     eax, [esi+8]
dec     eax
and     ecx, eax
mov     eax, [esi+4]
mov     edi, [eax+ecx*4]
mov     ecx, [edi+20h]
cmp     ecx, 10h
jb      short loc_37a9e282
mov     eax, [edi+0ch]
inc     ecx
cmp     ecx, 1000h
jb      short loc_37a9e278
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37a9e2af
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
mov     dword ptr [edi+1ch], 0
mov     dword ptr [edi+20h], 0fh
mov     byte ptr [edi+0ch], 0
add     dword ptr [esi+10h], 0ffffffffh
jnz     short loc_37a9e2a1
mov     dword ptr [esi+0ch], 0
mov     ecx, [esi+10h]
cmp     ebx, ecx
jb      short loc_37a9e240
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    4
call    __invalid_parameter_noinfo_noreturn
mov     eax, offset dword_37b71c30
retn
lea     eax, [esp+arglist]
push    eax
push    0
push    [esp+8+format]
push    0ffffffffh
push    [esp+10h+buffer]
call    sub_37a9e2d0
push    dword ptr [eax+4]
push    dword ptr [eax]
call    ___stdio_common_vsscanf
add     esp, 1ch
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dword_37adff68
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 10h
mov     [ebp+var_10], ecx
mov     eax, [ebp+arg_8]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
and     dword ptr [eax+10h], 0
mov     eax, [ebp+var_14]
and     dword ptr [eax+14h], 0
and     [ebp+var_4], 0
mov     ecx, [ebp+var_10]
call    loc_37a13e70
mov     eax, [ebp+arg_0]
cmp     eax, [ebp+arg_4]
jz      short loc_37a9e36f
mov     eax, [ebp+arg_4]
sub     eax, [ebp+arg_0]
push    eax
call    sub_37a125a0
pop     ecx
push    eax
push    [ebp+arg_0]
mov     ecx, [ebp+var_10]
call    loc_37a13e90
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9e386
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     [ebp+var_10], esp
mov     [ebp+var_18], ecx
mov     eax, [ebp+arg_4]
mov     [ebp+var_1c], eax
mov     eax, [ebp+arg_0]
mov     [ebp+var_20], eax
push    [ebp+var_1c]
lea     eax, [ebp+var_11]
push    eax
mov     ecx, [ebp+var_18]
call    sub_37a9e419
and     [ebp+var_4], 0
mov     byte ptr [ebp+var_4], 1
push    [ebp+var_24]
push    [ebp+arg_0]
mov     ecx, [ebp+var_18]
call    sub_37a9e51c
jmp     short loc_37a9e3f5
mov     ecx, [ebp+var_18]
call    sub_37aa0cdf
push    0
push    0
call    __cxxthrowexception@8
mov     eax, offset loc_37a9e3fb
retn
and     [ebp+var_4], 0
jmp     short loc_37a9e3ff
and     dword ptr [ebp-4], 0
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_18]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     [ebp+var_c], ecx
mov     eax, [ebp+arg_4]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_24], eax
lea     eax, [ebp+var_1]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     al, [eax]
mov     [ebp+var_8], al
mov     eax, [ebp+var_1c]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
and     dword ptr [eax], 0
mov     eax, [ebp+var_10]
and     dword ptr [eax+4], 0
mov     ecx, [ebp+var_c]
call    sub_37aa01ae
mov     eax, [ebp+var_c]
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9e46c
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 1ch
push    ebx
push    esi
push    edi
mov     [ebp+var_10], esp
mov     [ebp+var_18], ecx
mov     ecx, [ebp+var_18]
call    sub_37aa006d
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     byte ptr [eax+0ch], 0
mov     eax, [ebp+var_14]
mov     byte ptr [eax+0dh], 0
and     [ebp+var_4], 0
mov     eax, [ebp+arg_0]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_14]
add     eax, 10h
mov     [ebp+var_28], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_2c], eax
push    [ebp+var_24]
push    [ebp+var_28]
push    [ebp+var_2c]
call    sub_37a9fb3a
add     esp, 0ch
jmp     short loc_37a9e4fc
push    [ebp+var_14]
mov     ecx, [ebp+var_18]
call    sub_37aa08bd
push    0
push    0
call    __cxxthrowexception@8
mov     eax, offset loc_37a9e502
retn
or      [ebp+var_4], 0ffffffffh
jmp     short loc_37a9e506
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 100h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_3c], eax
mov     eax, [ebp+arg_0]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     eax, [eax]
add     eax, 4
mov     [ebp+var_40], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_2c]
mov     [ebp+var_30], eax
mov     eax, [ebp+var_30]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_34]
mov     [ebp+var_38], eax
mov     eax, [ebp+var_38]
mov     eax, [eax]
add     eax, 4
mov     [ebp+var_44], eax
push    [ebp+arg_4]
mov     eax, [ebp+var_3c]
push    dword ptr [eax]
mov     eax, [ebp+var_40]
push    dword ptr [eax]
mov     ecx, [ebp+var_4]
call    sub_37a9e821
mov     ecx, [ebp+var_44]
mov     [ecx], eax
mov     eax, [ebp+arg_0]
mov     [ebp+var_48], eax
mov     eax, [ebp+var_48]
mov     [ebp+var_4c], eax
mov     eax, [ebp+var_4c]
mov     [ebp+var_50], eax
mov     eax, [ebp+var_50]
add     eax, 4
mov     [ebp+var_54], eax
mov     eax, [ebp+var_54]
mov     eax, [eax]
mov     [ebp+var_68], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_58], eax
mov     eax, [ebp+var_58]
mov     [ebp+var_5c], eax
mov     eax, [ebp+var_5c]
mov     [ebp+var_60], eax
mov     eax, [ebp+var_60]
add     eax, 4
mov     [ebp+var_64], eax
mov     eax, [ebp+var_64]
mov     ecx, [ebp+var_68]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_6c], eax
mov     eax, [ebp+var_6c]
mov     [ebp+var_70], eax
mov     eax, [ebp+var_70]
mov     [ebp+var_74], eax
mov     eax, [ebp+var_74]
mov     [ebp+var_78], eax
mov     eax, [ebp+var_78]
mov     eax, [eax]
mov     eax, [eax+4]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     loc_37a9e742
mov     eax, [ebp+var_4]
mov     [ebp+var_7c], eax
mov     eax, [ebp+var_7c]
mov     [ebp+var_80], eax
mov     eax, [ebp+var_80]
mov     [ebp+var_84], eax
mov     eax, [ebp+var_84]
mov     [ebp+var_88], eax
mov     eax, [ebp+var_88]
mov     eax, [eax]
add     eax, 4
mov     [ebp+var_8c], eax
mov     eax, [ebp+var_8c]
mov     eax, [eax]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37a9e666
mov     eax, [ebp+var_8]
mov     eax, [eax]
mov     [ebp+var_8], eax
jmp     short loc_37a9e64f
mov     eax, [ebp+var_4]
mov     [ebp+var_90], eax
mov     eax, [ebp+var_90]
mov     [ebp+var_94], eax
mov     eax, [ebp+var_94]
mov     [ebp+var_98], eax
mov     eax, [ebp+var_98]
mov     [ebp+var_9c], eax
mov     eax, [ebp+var_9c]
mov     eax, [eax]
mov     ecx, [ebp+var_8]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_a0], eax
mov     eax, [ebp+var_a0]
mov     [ebp+var_a4], eax
mov     eax, [ebp+var_a4]
mov     [ebp+var_a8], eax
mov     eax, [ebp+var_a8]
mov     [ebp+var_ac], eax
mov     eax, [ebp+var_ac]
mov     eax, [eax]
add     eax, 4
mov     [ebp+var_b0], eax
mov     eax, [ebp+var_b0]
mov     eax, [eax]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37a9e702
mov     eax, [ebp+var_c]
mov     eax, [eax+8]
mov     [ebp+var_c], eax
jmp     short loc_37a9e6e9
mov     eax, [ebp+var_4]
mov     [ebp+var_b4], eax
mov     eax, [ebp+var_b4]
mov     [ebp+var_b8], eax
mov     eax, [ebp+var_b8]
mov     [ebp+var_bc], eax
mov     eax, [ebp+var_bc]
mov     [ebp+var_c0], eax
mov     eax, [ebp+var_c0]
mov     eax, [eax]
mov     ecx, [ebp+var_c]
mov     [eax+8], ecx
jmp     loc_37a9e81b
mov     eax, [ebp+var_4]
mov     [ebp+var_c4], eax
mov     eax, [ebp+var_c4]
mov     [ebp+var_c8], eax
mov     eax, [ebp+var_c8]
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_cc]
mov     [ebp+var_e0], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_d0], eax
mov     eax, [ebp+var_d0]
mov     [ebp+var_d4], eax
mov     eax, [ebp+var_d4]
mov     [ebp+var_d8], eax
mov     eax, [ebp+var_d8]
mov     [ebp+var_dc], eax
mov     eax, [ebp+var_dc]
mov     eax, [eax]
mov     ecx, [ebp+var_e0]
mov     ecx, [ecx]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_e4], eax
mov     eax, [ebp+var_e4]
mov     [ebp+var_e8], eax
mov     eax, [ebp+var_e8]
mov     [ebp+var_ec], eax
mov     eax, [ebp+var_ec]
mov     [ebp+var_100], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_f0], eax
mov     eax, [ebp+var_f0]
mov     [ebp+var_f4], eax
mov     eax, [ebp+var_f4]
mov     [ebp+var_f8], eax
mov     eax, [ebp+var_f8]
mov     [ebp+var_fc], eax
mov     eax, [ebp+var_fc]
mov     eax, [eax]
mov     ecx, [ebp+var_100]
mov     ecx, [ecx]
mov     [eax+8], ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9e821
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 24h
push    ebx
push    esi
push    edi
mov     [ebp+var_10], esp
mov     [ebp+var_18], ecx
mov     eax, [ebp+var_18]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_2c]
mov     eax, [eax]
mov     [ebp+var_1c], eax
mov     eax, [ebp+arg_0]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     loc_37a9e915
mov     eax, [ebp+arg_0]
add     eax, 10h
push    eax
mov     ecx, [ebp+var_18]
call    sub_37a9e46c
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     ecx, [ebp+arg_4]
mov     [eax+4], ecx
mov     eax, [ebp+var_14]
mov     ecx, [ebp+arg_0]
mov     cl, [ecx+0ch]
mov     [eax+0ch], cl
mov     eax, [ebp+var_1c]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37a9e8ad
mov     eax, [ebp+var_14]
mov     [ebp+var_1c], eax
and     [ebp+var_4], 0
push    [ebp+arg_8]
push    [ebp+var_14]
mov     eax, [ebp+arg_0]
push    dword ptr [eax]
mov     ecx, [ebp+var_18]
call    sub_37a9e821
mov     [ebp+var_30], eax
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_30]
mov     [eax], ecx
push    [ebp+arg_8]
push    [ebp+var_14]
mov     eax, [ebp+arg_0]
push    dword ptr [eax+8]
mov     ecx, [ebp+var_18]
call    sub_37a9e821
mov     [ebp+var_34], eax
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_34]
mov     [eax+8], ecx
jmp     short loc_37a9e90b
push    [ebp+var_1c]
mov     ecx, [ebp+var_18]
call    sub_37aa0221
push    0
push    0
call    __cxxthrowexception@8
mov     eax, offset loc_37a9e911
retn
or      [ebp+var_4], 0ffffffffh
jmp     short loc_37a9e915
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_1c]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aed7c1
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
mov     eax, [ebp+arg_0]
mov     [ebp+block], eax
jmp     short loc_37a9e955
mov     eax, [ebp+block]
add     eax, 18h
mov     [ebp+block], eax
mov     eax, [ebp+block]
cmp     eax, [ebp+arg_4]
jz      short loc_37a9e98a
and     [ebp+var_4], 0
mov     ecx, [ebp+block]
call    sub_37a13cd0
mov     ecx, [ebp+block]
call    @_guard_check_icall_nop@4
or      [ebp+var_4], 0ffffffffh
xor     eax, eax
and     eax, 1
jz      short loc_37a9e988
push    18h
push    [ebp+block]
call    sub_37ab1b25
pop     ecx
pop     ecx
jmp     short loc_37a9e94c
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9d570
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 14h
mov     eax, [ebp+arg_4]
mov     [ebp+var_18], eax
mov     eax, [ebp+arg_4]
add     eax, 4
mov     [ebp+var_1c], eax
mov     eax, [ebp+arg_4]
add     eax, 8
mov     [ebp+var_20], eax
xor     eax, eax
inc     eax
imul    eax, 28h
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_4]
mov     [ebp+block], eax
cmp     [ebp+var_10], 1000h
jb      short loc_37a9e9f2
lea     eax, [ebp+var_10]
push    eax
lea     eax, [ebp+block]
push    eax
call    sub_37a12570
pop     ecx
pop     ecx
push    [ebp+var_10]
push    [ebp+block]
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0e8h
mov     [ebp+var_8], ecx
mov     eax, [ebp+var_8]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_e0], eax
mov     [ebp+var_1c], 6666666h
mov     eax, [ebp+var_1c]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
add     eax, 4
mov     [ebp+var_30], eax
mov     eax, [ebp+var_2c]
dec     eax
mov     ecx, [ebp+var_30]
cmp     eax, [ecx]
ja      short loc_37a9ea76
push    [ebp+arg_10]
mov     ecx, [ebp+var_8]
call    sub_37aa01e0
push    offset amapsetttoolong
call    sub_37ab022c
mov     eax, [ebp+arg_c]
mov     [ebp+var_e4], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_e8]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_34]
mov     [ebp+var_38], eax
mov     eax, [ebp+var_38]
mov     [ebp+var_3c], eax
mov     eax, [ebp+var_3c]
add     eax, 4
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     eax, [eax]
inc     eax
mov     ecx, [ebp+var_10]
mov     [ecx], eax
mov     eax, [ebp+var_c]
mov     ecx, [ebp+arg_8]
mov     [eax+4], ecx
mov     eax, [ebp+var_8]
mov     [ebp+var_40], eax
mov     eax, [ebp+var_40]
mov     [ebp+var_44], eax
mov     eax, [ebp+var_44]
mov     [ebp+var_48], eax
mov     eax, [ebp+var_48]
mov     [ebp+var_4c], eax
mov     eax, [ebp+var_4c]
mov     ecx, [ebp+arg_8]
cmp     ecx, [eax]
jnz     short loc_37a9eb4c
mov     eax, [ebp+var_8]
mov     [ebp+var_50], eax
mov     eax, [ebp+var_50]
mov     [ebp+var_54], eax
mov     eax, [ebp+var_54]
mov     [ebp+var_58], eax
mov     eax, [ebp+var_58]
mov     [ebp+var_5c], eax
mov     eax, [ebp+var_5c]
mov     eax, [eax]
mov     ecx, [ebp+var_c]
mov     [eax+4], ecx
mov     eax, [ebp+var_8]
mov     [ebp+var_60], eax
mov     eax, [ebp+var_60]
mov     [ebp+var_64], eax
mov     eax, [ebp+var_64]
mov     [ebp+var_68], eax
mov     eax, [ebp+var_68]
mov     [ebp+var_6c], eax
mov     eax, [ebp+var_6c]
mov     eax, [eax]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
mov     eax, [ebp+var_8]
mov     [ebp+var_70], eax
mov     eax, [ebp+var_70]
mov     [ebp+var_74], eax
mov     eax, [ebp+var_74]
mov     [ebp+var_78], eax
mov     eax, [ebp+var_78]
mov     [ebp+var_7c], eax
mov     eax, [ebp+var_7c]
mov     eax, [eax]
mov     ecx, [ebp+var_c]
mov     [eax+8], ecx
jmp     loc_37a9ec52
movzx   eax, [ebp+arg_4]
test    eax, eax
jz      short loc_37a9ebd1
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
mov     eax, [ebp+var_8]
mov     [ebp+var_80], eax
mov     eax, [ebp+var_80]
mov     [ebp+var_84], eax
mov     eax, [ebp+var_84]
mov     [ebp+var_88], eax
mov     eax, [ebp+var_88]
mov     [ebp+var_8c], eax
mov     eax, [ebp+var_8c]
mov     eax, [eax]
mov     ecx, [ebp+arg_8]
cmp     ecx, [eax]
jnz     short loc_37a9ebcc
mov     eax, [ebp+var_8]
mov     [ebp+var_90], eax
mov     eax, [ebp+var_90]
mov     [ebp+var_94], eax
mov     eax, [ebp+var_94]
mov     [ebp+var_98], eax
mov     eax, [ebp+var_98]
mov     [ebp+var_9c], eax
mov     eax, [ebp+var_9c]
mov     eax, [eax]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
jmp     loc_37a9ec52
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+var_c]
mov     [eax+8], ecx
mov     eax, [ebp+var_8]
mov     [ebp+var_a0], eax
mov     eax, [ebp+var_a0]
mov     [ebp+var_a4], eax
mov     eax, [ebp+var_a4]
mov     [ebp+var_a8], eax
mov     eax, [ebp+var_a8]
mov     [ebp+var_ac], eax
mov     eax, [ebp+var_ac]
mov     eax, [eax]
mov     ecx, [ebp+arg_8]
cmp     ecx, [eax+8]
jnz     short loc_37a9ec52
mov     eax, [ebp+var_8]
mov     [ebp+var_b0], eax
mov     eax, [ebp+var_b0]
mov     [ebp+var_b4], eax
mov     eax, [ebp+var_b4]
mov     [ebp+var_b8], eax
mov     eax, [ebp+var_b8]
mov     [ebp+var_bc], eax
mov     eax, [ebp+var_bc]
mov     eax, [eax]
mov     ecx, [ebp+var_c]
mov     [eax+8], ecx
mov     eax, [ebp+var_c]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
movsx   eax, byte ptr [eax+0ch]
test    eax, eax
jnz     loc_37a9eda9
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     eax, [eax+4]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+4]
cmp     ecx, [eax]
jnz     loc_37a9ed16
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     eax, [eax+4]
mov     eax, [eax+8]
mov     [ebp+arg_8], eax
mov     eax, [ebp+arg_8]
movsx   eax, byte ptr [eax+0ch]
test    eax, eax
jnz     short loc_37a9ecc7
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+arg_8]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 0
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     eax, [eax+4]
mov     [ebp+var_4], eax
jmp     short loc_37a9ed11
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     ecx, [ebp+var_4]
cmp     ecx, [eax+8]
jnz     short loc_37a9ece9
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     [ebp+var_4], eax
push    [ebp+var_4]
mov     ecx, [ebp+var_8]
call    sub_37aa0900
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 0
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
push    dword ptr [eax+4]
mov     ecx, [ebp+var_8]
call    sub_37aa0c14
jmp     loc_37a9eda4
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     eax, [eax+4]
mov     eax, [eax]
mov     [ebp+arg_8], eax
mov     eax, [ebp+arg_8]
movsx   eax, byte ptr [eax+0ch]
test    eax, eax
jnz     short loc_37a9ed5b
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+arg_8]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 0
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     eax, [eax+4]
mov     [ebp+var_4], eax
jmp     short loc_37a9eda4
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     ecx, [ebp+var_4]
cmp     ecx, [eax]
jnz     short loc_37a9ed7c
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     [ebp+var_4], eax
push    [ebp+var_4]
mov     ecx, [ebp+var_8]
call    sub_37aa0c14
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 0
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
push    dword ptr [eax+4]
mov     ecx, [ebp+var_8]
call    sub_37aa0900
jmp     loc_37a9ec58
mov     eax, [ebp+var_8]
mov     [ebp+var_c0], eax
mov     eax, [ebp+var_c0]
mov     [ebp+var_c4], eax
mov     eax, [ebp+var_c4]
mov     [ebp+var_c8], eax
mov     eax, [ebp+var_c8]
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_cc]
mov     eax, [eax]
mov     eax, [eax+4]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_8]
mov     [ebp+var_d0], eax
mov     eax, [ebp+var_d0]
mov     [ebp+var_d4], eax
mov     eax, [ebp+var_d4]
mov     [ebp+var_d8], eax
mov     eax, [ebp+var_d8]
mov     [ebp+var_dc], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
push    [ebp+var_dc]
mov     ecx, [ebp+arg_0]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    14h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9ee31
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 19ch
push    ebx
push    esi
push    edi
mov     [ebp+var_10], esp
mov     [ebp+var_14], ecx
and     [ebp+var_18], 0
mov     byte ptr [ebp+var_28], 0
and     [ebp+var_4], 0
mov     eax, [ebp+var_14]
mov     [ebp+var_44], eax
mov     eax, [ebp+var_44]
mov     [ebp+var_48], eax
mov     eax, [ebp+var_48]
mov     [ebp+var_4c], eax
mov     eax, [ebp+var_4c]
add     eax, 4
mov     [ebp+var_50], eax
mov     eax, [ebp+var_50]
mov     eax, [eax]
mov     [ebp+var_54], eax
cmp     [ebp+var_54], 0
jnz     short loc_37a9eed1
mov     eax, [ebp+arg_8]
mov     [ebp+var_64], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_58], eax
mov     eax, [ebp+var_58]
mov     [ebp+var_5c], eax
mov     eax, [ebp+var_5c]
mov     [ebp+var_60], eax
mov     eax, [ebp+var_60]
mov     [ebp+var_68], eax
push    [ebp+arg_c]
push    [ebp+var_64]
mov     eax, [ebp+var_68]
push    dword ptr [eax]
push    1
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
jmp     loc_37a9f656
xor     eax, eax
jz      loc_37a9f290
lea     eax, [ebp+var_160]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37aa0dd8
mov     [ebp+var_6c], eax
mov     eax, [ebp+var_6c]
mov     ecx, [ebp+arg_4]
cmp     ecx, [eax]
jnz     short loc_37a9eefe
mov     [ebp+var_2c], 1
jmp     short loc_37a9ef02
and     [ebp+var_2c], 0
movzx   eax, byte ptr [ebp+var_2c]
test    eax, eax
jz      short loc_37a9ef65
mov     eax, [ebp+arg_4]
add     eax, 10h
mov     [ebp+var_74], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_70], eax
mov     eax, [ebp+var_70]
mov     [ebp+var_164], eax
push    [ebp+arg_8]
mov     ecx, [ebp+var_74]
call    sub_37aec9f1
mov     [ebp+var_24], al
movzx   eax, [ebp+var_24]
test    eax, eax
jnz     short loc_37a9ef5c
mov     eax, [ebp+arg_8]
mov     [ebp+var_78], eax
push    [ebp+arg_c]
push    [ebp+var_78]
push    [ebp+arg_4]
push    1
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
mov     byte ptr [ebp+var_28], 1
jmp     loc_37a9f28b
lea     eax, [ebp+var_168]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37aa1002
mov     [ebp+var_7c], eax
mov     eax, [ebp+var_7c]
mov     ecx, [ebp+arg_4]
cmp     ecx, [eax]
jnz     short loc_37a9ef8a
mov     [ebp+var_30], 1
jmp     short loc_37a9ef8e
and     [ebp+var_30], 0
movzx   eax, byte ptr [ebp+var_30]
test    eax, eax
jz      loc_37a9f075
mov     eax, [ebp+var_14]
mov     [ebp+var_80], eax
mov     eax, [ebp+var_80]
mov     [ebp+var_84], eax
mov     eax, [ebp+var_84]
mov     [ebp+var_88], eax
mov     eax, [ebp+var_88]
mov     [ebp+var_8c], eax
mov     eax, [ebp+var_8c]
mov     eax, [eax]
add     eax, 8
mov     [ebp+var_90], eax
mov     eax, [ebp+var_90]
mov     eax, [eax]
add     eax, 10h
mov     [ebp+var_98], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_94], eax
mov     eax, [ebp+var_94]
mov     [ebp+var_16c], eax
push    [ebp+var_98]
mov     ecx, [ebp+arg_8]
call    sub_37aec9f1
mov     [ebp+var_19], al
movzx   eax, [ebp+var_19]
test    eax, eax
jnz     short loc_37a9f070
mov     eax, [ebp+arg_8]
mov     [ebp+var_a8], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_9c], eax
mov     eax, [ebp+var_9c]
mov     [ebp+var_a0], eax
mov     eax, [ebp+var_a0]
mov     [ebp+var_a4], eax
mov     eax, [ebp+var_a4]
mov     [ebp+var_ac], eax
push    [ebp+arg_c]
push    [ebp+var_a8]
mov     eax, [ebp+var_ac]
mov     eax, [eax]
push    dword ptr [eax+8]
push    0
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
jmp     loc_37a9f28b
mov     eax, [ebp+arg_4]
add     eax, 10h
mov     [ebp+var_b4], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_b0], eax
mov     eax, [ebp+var_b0]
mov     [ebp+var_170], eax
push    [ebp+arg_8]
mov     ecx, [ebp+var_b4]
call    sub_37aec9f1
mov     [ebp+var_1a], al
movzx   eax, [ebp+var_1a]
test    eax, eax
jnz     loc_37a9f164
mov     eax, [ebp+arg_4]
mov     [ebp+var_18], eax
lea     ecx, [ebp+var_18]
call    sub_37a9fdb2
mov     eax, [ebp+var_18]
add     eax, 10h
mov     [ebp+var_bc], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_b8], eax
mov     eax, [ebp+var_b8]
mov     [ebp+var_174], eax
push    [ebp+var_bc]
mov     ecx, [ebp+arg_8]
call    sub_37aec9f1
mov     [ebp+var_1b], al
movzx   eax, [ebp+var_1b]
test    eax, eax
jnz     short loc_37a9f164
mov     eax, [ebp+var_18]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37a9f135
mov     eax, [ebp+arg_8]
mov     [ebp+var_c0], eax
push    [ebp+arg_c]
push    [ebp+var_c0]
push    [ebp+var_18]
push    0
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
jmp     short loc_37a9f15f
mov     eax, [ebp+arg_8]
mov     [ebp+var_c4], eax
push    [ebp+arg_c]
push    [ebp+var_c4]
push    [ebp+arg_4]
push    1
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
jmp     loc_37a9f28b
mov     eax, [ebp+arg_4]
add     eax, 10h
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_c8], eax
mov     eax, [ebp+var_c8]
mov     [ebp+var_178], eax
push    [ebp+var_cc]
mov     ecx, [ebp+arg_8]
call    sub_37aec9f1
mov     [ebp+var_1c], al
movzx   eax, [ebp+var_1c]
test    eax, eax
jnz     loc_37a9f287
mov     eax, [ebp+arg_4]
mov     [ebp+var_18], eax
lea     ecx, [ebp+var_18]
call    sub_37a9fd22
lea     eax, [ebp+var_17c]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37aa1002
mov     [ebp+var_d0], eax
mov     eax, [ebp+var_d0]
mov     ecx, [ebp+var_18]
cmp     ecx, [eax]
jnz     short loc_37a9f1db
mov     [ebp+var_34], 1
jmp     short loc_37a9f1df
and     [ebp+var_34], 0
movzx   eax, byte ptr [ebp+var_34]
test    eax, eax
jnz     short loc_37a9f221
mov     eax, [ebp+var_18]
add     eax, 10h
mov     [ebp+var_d8], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_d4], eax
mov     eax, [ebp+var_d4]
mov     [ebp+var_180], eax
push    [ebp+arg_8]
mov     ecx, [ebp+var_d8]
call    sub_37aec9f1
mov     [ebp+var_1d], al
movzx   eax, [ebp+var_1d]
test    eax, eax
jnz     short loc_37a9f287
mov     eax, [ebp+arg_4]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37a9f25b
mov     eax, [ebp+arg_8]
mov     [ebp+var_dc], eax
push    [ebp+arg_c]
push    [ebp+var_dc]
push    [ebp+arg_4]
push    0
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
jmp     short loc_37a9f285
mov     eax, [ebp+arg_8]
mov     [ebp+var_e0], eax
push    [ebp+arg_c]
push    [ebp+var_e0]
push    [ebp+var_18]
push    1
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
jmp     short loc_37a9f28b
mov     byte ptr [ebp+var_28], 1
jmp     loc_37a9f656
lea     eax, [ebp+var_184]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37aa0dd8
mov     [ebp+var_e4], eax
mov     eax, [ebp+var_e4]
mov     ecx, [ebp+arg_4]
cmp     ecx, [eax]
jnz     short loc_37a9f2bb
mov     [ebp+var_38], 1
jmp     short loc_37a9f2bf
and     [ebp+var_38], 0
movzx   eax, byte ptr [ebp+var_38]
test    eax, eax
jz      short loc_37a9f330
mov     eax, [ebp+arg_4]
add     eax, 10h
mov     [ebp+var_ec], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_e8], eax
mov     eax, [ebp+var_e8]
mov     [ebp+var_188], eax
push    [ebp+var_ec]
mov     ecx, [ebp+arg_8]
call    sub_37aec9f1
mov     [ebp+var_1e], al
movzx   eax, [ebp+var_1e]
test    eax, eax
jz      short loc_37a9f32b
mov     eax, [ebp+arg_8]
mov     [ebp+var_f0], eax
push    [ebp+arg_c]
push    [ebp+var_f0]
push    [ebp+arg_4]
push    1
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
jmp     loc_37a9f656
lea     eax, [ebp+var_18c]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37aa1002
mov     [ebp+var_f4], eax
mov     eax, [ebp+var_f4]
mov     ecx, [ebp+arg_4]
cmp     ecx, [eax]
jnz     short loc_37a9f35b
mov     [ebp+var_3c], 1
jmp     short loc_37a9f35f
and     [ebp+var_3c], 0
movzx   eax, byte ptr [ebp+var_3c]
test    eax, eax
jz      loc_37a9f44c
mov     eax, [ebp+var_14]
mov     [ebp+var_f8], eax
mov     eax, [ebp+var_f8]
mov     [ebp+var_fc], eax
mov     eax, [ebp+var_fc]
mov     [ebp+var_100], eax
mov     eax, [ebp+var_100]
mov     [ebp+var_104], eax
mov     eax, [ebp+var_104]
mov     eax, [eax]
add     eax, 8
mov     [ebp+var_108], eax
mov     eax, [ebp+var_108]
mov     eax, [eax]
add     eax, 10h
mov     [ebp+var_110], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_10c], eax
mov     eax, [ebp+var_10c]
mov     [ebp+var_190], eax
push    [ebp+arg_8]
mov     ecx, [ebp+var_110]
call    sub_37aec9f1
mov     [ebp+var_1f], al
movzx   eax, [ebp+var_1f]
test    eax, eax
jz      short loc_37a9f447
mov     eax, [ebp+arg_8]
mov     [ebp+var_120], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_114], eax
mov     eax, [ebp+var_114]
mov     [ebp+var_118], eax
mov     eax, [ebp+var_118]
mov     [ebp+var_11c], eax
mov     eax, [ebp+var_11c]
mov     [ebp+var_124], eax
push    [ebp+arg_c]
push    [ebp+var_120]
mov     eax, [ebp+var_124]
mov     eax, [eax]
push    dword ptr [eax+8]
push    0
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
jmp     loc_37a9f656
mov     eax, [ebp+arg_4]
add     eax, 10h
mov     [ebp+var_12c], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_128], eax
mov     eax, [ebp+var_128]
mov     [ebp+var_194], eax
push    [ebp+var_12c]
mov     ecx, [ebp+arg_8]
call    sub_37aec9f1
mov     [ebp+var_20], al
movzx   eax, [ebp+var_20]
test    eax, eax
jz      loc_37a9f53b
mov     eax, [ebp+arg_4]
mov     [ebp+var_18], eax
lea     ecx, [ebp+var_18]
call    sub_37a9fdb2
mov     eax, [ebp+var_18]
add     eax, 10h
mov     [ebp+var_134], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_130], eax
mov     eax, [ebp+var_130]
mov     [ebp+var_198], eax
push    [ebp+arg_8]
mov     ecx, [ebp+var_134]
call    sub_37aec9f1
mov     [ebp+var_21], al
movzx   eax, [ebp+var_21]
test    eax, eax
jz      short loc_37a9f53b
mov     eax, [ebp+var_18]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37a9f50c
mov     eax, [ebp+arg_8]
mov     [ebp+var_138], eax
push    [ebp+arg_c]
push    [ebp+var_138]
push    [ebp+var_18]
push    0
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
jmp     short loc_37a9f536
mov     eax, [ebp+arg_8]
mov     [ebp+var_13c], eax
push    [ebp+arg_c]
push    [ebp+var_13c]
push    [ebp+arg_4]
push    1
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     loc_37a9f6aa
jmp     loc_37a9f656
mov     eax, [ebp+arg_4]
add     eax, 10h
mov     [ebp+var_144], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_140], eax
mov     eax, [ebp+var_140]
mov     [ebp+var_19c], eax
push    [ebp+arg_8]
mov     ecx, [ebp+var_144]
call    sub_37aec9f1
mov     [ebp+var_22], al
movzx   eax, [ebp+var_22]
test    eax, eax
jz      loc_37a9f656
mov     eax, [ebp+arg_4]
mov     [ebp+var_18], eax
lea     ecx, [ebp+var_18]
call    sub_37a9fd22
lea     eax, [ebp+var_1a0]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37aa1002
mov     [ebp+var_148], eax
mov     eax, [ebp+var_148]
mov     ecx, [ebp+var_18]
cmp     ecx, [eax]
jnz     short loc_37a9f5b2
mov     [ebp+var_40], 1
jmp     short loc_37a9f5b6
and     [ebp+var_40], 0
movzx   eax, byte ptr [ebp+var_40]
test    eax, eax
jnz     short loc_37a9f5f8
mov     eax, [ebp+var_18]
add     eax, 10h
mov     [ebp+var_150], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_14c], eax
mov     eax, [ebp+var_14c]
mov     [ebp+var_1a4], eax
push    [ebp+var_150]
mov     ecx, [ebp+arg_8]
call    sub_37aec9f1
mov     [ebp+var_23], al
movzx   eax, [ebp+var_23]
test    eax, eax
jz      short loc_37a9f656
mov     eax, [ebp+arg_4]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37a9f62f
mov     eax, [ebp+arg_8]
mov     [ebp+var_154], eax
push    [ebp+arg_c]
push    [ebp+var_154]
push    [ebp+arg_4]
push    0
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     short loc_37a9f6aa
jmp     short loc_37a9f656
mov     eax, [ebp+arg_8]
mov     [ebp+var_158], eax
push    [ebp+arg_c]
push    [ebp+var_158]
push    [ebp+var_18]
push    1
push    [ebp+arg_0]
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     eax, [ebp+arg_0]
jmp     short loc_37a9f6aa
jmp     short loc_37a9f672
push    [ebp+arg_c]
mov     ecx, [ebp+var_14]
call    sub_37aa01e0
push    0
push    0
call    __cxxthrowexception@8
mov     eax, offset loc_37a9f678
retn
or      [ebp+var_4], 0ffffffffh
jmp     short loc_37a9f67c
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+arg_8]
mov     [ebp+var_15c], eax
push    [ebp+arg_c]
push    [ebp+var_15c]
push    [ebp+var_28]
lea     eax, [ebp+var_1ac]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37a9f6bd
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9f6bd
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 0cch
push    ebx
push    esi
push    edi
mov     [ebp+var_10], esp
mov     [ebp+var_14], ecx
and     [ebp+var_4], 0
mov     eax, [ebp+var_14]
mov     [ebp+var_3c], eax
mov     eax, [ebp+var_3c]
mov     [ebp+var_40], eax
mov     eax, [ebp+var_40]
mov     [ebp+var_44], eax
mov     eax, [ebp+var_44]
mov     [ebp+var_48], eax
mov     eax, [ebp+var_48]
mov     eax, [eax]
mov     eax, [eax+4]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_4c], eax
mov     eax, [ebp+var_4c]
mov     [ebp+var_50], eax
mov     eax, [ebp+var_50]
mov     [ebp+var_54], eax
mov     eax, [ebp+var_54]
mov     [ebp+var_58], eax
mov     eax, [ebp+var_58]
mov     eax, [eax]
mov     [ebp+var_28], eax
mov     byte ptr [ebp+var_24], 1
mov     eax, [ebp+var_20]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     loc_37a9f7d7
mov     eax, [ebp+var_20]
mov     [ebp+var_28], eax
movzx   eax, [ebp+arg_4]
test    eax, eax
jz      short loc_37a9f78a
mov     eax, [ebp+var_14]
mov     [ebp+var_5c], eax
mov     eax, [ebp+var_5c]
mov     [ebp+var_c4], eax
push    [ebp+arg_8]
mov     ecx, [ebp+var_20]
add     ecx, 10h
call    sub_37aec9f1
mov     [ebp+var_1b], al
movzx   eax, [ebp+var_1b]
test    eax, eax
jnz     short loc_37a9f77e
mov     [ebp+var_30], 1
jmp     short loc_37a9f782
and     [ebp+var_30], 0
mov     al, byte ptr [ebp+var_30]
mov     byte ptr [ebp+var_24], al
jmp     short loc_37a9f7b1
mov     eax, [ebp+var_14]
mov     [ebp+var_60], eax
mov     eax, [ebp+var_60]
mov     [ebp+var_c8], eax
mov     eax, [ebp+var_20]
add     eax, 10h
push    eax
mov     ecx, [ebp+arg_8]
call    sub_37aec9f1
mov     [ebp+var_15], al
mov     al, [ebp+var_15]
mov     byte ptr [ebp+var_24], al
movzx   eax, byte ptr [ebp+var_24]
test    eax, eax
jz      short loc_37a9f7c3
mov     eax, [ebp+var_20]
mov     eax, [eax]
mov     [ebp+var_34], eax
jmp     short loc_37a9f7cc
mov     eax, [ebp+var_20]
mov     eax, [eax+8]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_34]
mov     [ebp+var_20], eax
jmp     loc_37a9f730
xor     eax, eax
jz      short loc_37a9f837
mov     [ebp+var_16], 1
mov     eax, [ebp+arg_8]
mov     [ebp+var_64], eax
push    [ebp+arg_c]
push    [ebp+var_64]
push    [ebp+var_28]
push    [ebp+var_24]
lea     eax, [ebp+var_cc]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     [ebp+var_68], eax
mov     eax, [ebp+var_68]
mov     [ebp+var_6c], eax
mov     eax, [ebp+var_6c]
mov     [ebp+var_70], eax
mov     eax, [ebp+var_70]
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
lea     eax, [ebp+var_16]
mov     [ebp+var_74], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_74]
mov     cl, [ecx]
mov     [eax+4], cl
mov     eax, [ebp+arg_0]
jmp     loc_37a9fa3d
jmp     loc_37a9fa17
mov     eax, [ebp+var_14]
mov     [ebp+var_78], eax
mov     eax, [ebp+var_78]
mov     [ebp+var_7c], eax
mov     eax, [ebp+var_7c]
mov     [ebp+var_80], eax
mov     eax, [ebp+var_80]
mov     [ebp+var_84], eax
mov     eax, [ebp+var_28]
mov     [ebp+var_2c], eax
push    [ebp+var_84]
lea     ecx, [ebp+var_2c]
call    nullsub_2
movzx   eax, byte ptr [ebp+var_24]
test    eax, eax
jnz     short loc_37a9f873
jmp     loc_37a9f928
lea     eax, [ebp+var_d0]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37aa0dd8
mov     [ebp+var_88], eax
mov     eax, [ebp+var_88]
mov     ecx, [ebp+var_2c]
cmp     ecx, [eax]
jnz     short loc_37a9f89e
mov     [ebp+var_38], 1
jmp     short loc_37a9f8a2
and     [ebp+var_38], 0
movzx   eax, byte ptr [ebp+var_38]
test    eax, eax
jz      short loc_37a9f920
mov     [ebp+var_17], 1
mov     eax, [ebp+arg_8]
mov     [ebp+var_8c], eax
push    [ebp+arg_c]
push    [ebp+var_8c]
push    [ebp+var_28]
push    1
lea     eax, [ebp+var_d4]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     [ebp+var_90], eax
mov     eax, [ebp+var_90]
mov     [ebp+var_94], eax
mov     eax, [ebp+var_94]
mov     [ebp+var_98], eax
mov     eax, [ebp+var_98]
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
lea     eax, [ebp+var_17]
mov     [ebp+var_9c], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_9c]
mov     cl, [ecx]
mov     [eax+4], cl
mov     eax, [ebp+arg_0]
jmp     loc_37a9fa3d
jmp     short loc_37a9f928
lea     ecx, [ebp+var_2c]
call    sub_37a9fdb2
mov     eax, [ebp+var_2c]
add     eax, 10h
mov     [ebp+var_a4], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_a0], eax
mov     eax, [ebp+var_a0]
mov     [ebp+var_d8], eax
push    [ebp+arg_8]
mov     ecx, [ebp+var_a4]
call    sub_37aec9f1
mov     [ebp+var_18], al
movzx   eax, [ebp+var_18]
test    eax, eax
jz      short loc_37a9f9d6
mov     [ebp+var_19], 1
mov     eax, [ebp+arg_8]
mov     [ebp+var_a8], eax
push    [ebp+arg_c]
push    [ebp+var_a8]
push    [ebp+var_28]
push    [ebp+var_24]
lea     eax, [ebp+var_dc]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37a9ea0d
mov     [ebp+var_ac], eax
mov     eax, [ebp+var_ac]
mov     [ebp+var_b0], eax
mov     eax, [ebp+var_b0]
mov     [ebp+var_b4], eax
mov     eax, [ebp+var_b4]
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
lea     eax, [ebp+var_19]
mov     [ebp+var_b8], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_b8]
mov     cl, [ecx]
mov     [eax+4], cl
mov     eax, [ebp+arg_0]
jmp     short loc_37a9fa3d
jmp     short loc_37a9fa17
push    [ebp+arg_c]
mov     ecx, [ebp+var_14]
call    sub_37aa01e0
mov     [ebp+var_1a], 0
lea     eax, [ebp+var_2c]
mov     [ebp+var_bc], eax
mov     eax, [ebp+var_bc]
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
lea     eax, [ebp+var_1a]
mov     [ebp+var_c0], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c0]
mov     cl, [ecx]
mov     [eax+4], cl
mov     eax, [ebp+arg_0]
jmp     short loc_37a9fa3d
jmp     short loc_37a9fa33
push    [ebp+arg_c]
mov     ecx, [ebp+var_14]
call    sub_37aa01e0
push    0
push    0
call    __cxxthrowexception@8
mov     eax, offset loc_37a9fa39
retn
or      [ebp+var_4], 0ffffffffh
jmp     short loc_37a9fa3d
or      [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 34h
mov     [ebp+var_8], ecx
mov     eax, [ebp+var_8]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     eax, [eax]
mov     eax, [eax+4]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_2c]
mov     eax, [eax]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37a9fae3
mov     eax, [ebp+var_8]
mov     [ebp+var_30], eax
mov     eax, [ebp+var_30]
mov     [ebp+var_34], eax
push    [ebp+arg_0]
mov     ecx, [ebp+var_4]
add     ecx, 10h
call    sub_37aec9f1
movzx   eax, al
test    eax, eax
jz      short loc_37a9fad3
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
mov     [ebp+var_4], eax
jmp     short loc_37a9fae1
mov     eax, [ebp+var_4]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     [ebp+var_4], eax
jmp     short loc_37a9fa9c
mov     eax, [ebp+var_c]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     eax, [ebp+arg_0]
mov     [ebp+var_14], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_8]
mov     [ebp+var_c], eax
xor     eax, eax
mov     [ebp+var_1], al
mov     al, [ebp+var_1]
mov     byte ptr [ebp+var_5], al
push    ecx
mov     [ebp+var_1c], esp
push    [ebp+var_5]
push    [ebp+arg_c]
push    [ebp+var_c]
push    [ebp+var_10]
push    [ebp+var_14]
call    loc_37a9a940
add     esp, 18h
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+arg_8], eax
mov     eax, [ebp+arg_8]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9fb3a
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 0ch
push    [ebp+arg_4]
push    18h
call    loc_37a124e0
pop     ecx
pop     ecx
mov     [ebp+var_10], eax
and     [ebp+var_4], 0
mov     eax, [ebp+arg_8]
mov     [ebp+var_14], eax
push    [ebp+var_14]
mov     ecx, [ebp+var_10]
call    loc_37aebd7e
mov     byte ptr [ebp+var_4], 1
mov     eax, [ebp+var_14]
add     eax, 8
push    eax
mov     ecx, [ebp+var_10]
add     ecx, 8
call    loc_37aebe87
mov     byte ptr [ebp+var_4], 0
mov     eax, [ebp+var_10]
mov     [ebp+var_18], eax
or      [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
leave
push    esp
popa
arpl    [ecx+6b67d4cbh], bx
or      al, 77h
shl     esp, 0f7h
fsub    st(2), st
lock retn 2bdh
xchg    eax, edx
imul    edx, esp, 0bcd17c8ch
test    eax, 545bd298h
dec     eax
xchg    dl, [edi+esi+5fc5ad1h]
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     [ebp-0ch], ecx
mov     eax, [ebp-0ch]
mov     [ebp-18h], eax
lea     eax, [ebp-1]
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
mov     al, [eax]
mov     [ebp-8], al
mov     eax, [ebp-18h]
mov     [ebp-1ch], eax
mov     eax, [ebp-1ch]
mov     [ebp-10h], eax
mov     eax, [ebp-10h]
and     dword ptr [eax], 0
mov     eax, [ebp-10h]
and     dword ptr [eax+4], 0
mov     ecx, [ebp-0ch]
call    sub_37aa01ae
mov     eax, [ebp-0ch]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     [ebp-8], ecx
mov     eax, [ebp+8]
mov     [ebp-0ch], eax
mov     eax, [ebp-0ch]
mov     [ebp-10h], eax
mov     eax, [ebp-10h]
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
mov     [ebp-24h], eax
mov     eax, [ebp-8]
mov     [ebp-18h], eax
mov     eax, [ebp-18h]
mov     [ebp-4], eax
mov     eax, [ebp-4]
and     dword ptr [eax], 0
mov     eax, [ebp-4]
and     dword ptr [eax+4], 0
mov     eax, [ebp-4]
and     dword ptr [eax+8], 0
xor     eax, eax
mov     [ebp-1ch], al
mov     eax, [ebp+8]
mov     [ebp-20h], eax
push    dword ptr [ebp-1ch]
push    dword ptr [ebp-20h]
mov     ecx, [ebp-8]
call    sub_37aa09c8
mov     eax, [ebp-8]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9d570
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
mov     [ebp+var_10], ecx
mov     ecx, [ebp+var_10]
call    sub_37aa0cdf
mov     ecx, [ebp+var_10]
call    sub_37a9fcb8
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     eax, [eax]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_24], eax
push    [ebp+var_20]
push    [ebp+var_24]
call    sub_37a9e998
pop     ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37a9fd3a
jmp     short loc_37a9fdab
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37a9fd76
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     eax, [eax+8]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37a9fd6c
mov     eax, [ebp+var_8]
mov     eax, [eax]
mov     [ebp+var_8], eax
jmp     short loc_37a9fd55
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_8]
mov     [eax], ecx
jmp     short loc_37a9fdab
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     eax, [eax+4]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37a9fda3
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
mov     eax, [eax]
cmp     eax, [ecx+8]
jnz     short loc_37a9fda3
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
jmp     short loc_37a9fd76
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37a9fdd7
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     ecx, [ebp+var_4]
mov     eax, [eax+8]
mov     [ecx], eax
jmp     short loc_37a9fe56
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37a9fe13
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     eax, [eax]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37a9fe09
mov     eax, [ebp+var_8]
mov     eax, [eax+8]
mov     [ebp+var_8], eax
jmp     short loc_37a9fdf0
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_8]
mov     [eax], ecx
jmp     short loc_37a9fe56
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     eax, [eax+4]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37a9fe3f
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
mov     eax, [eax]
cmp     eax, [ecx]
jnz     short loc_37a9fe3f
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
jmp     short loc_37a9fe13
mov     eax, [ebp+var_4]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37a9fe4e
jmp     short loc_37a9fe56
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn
xlat
inc     edx
out     94h, al
enter   0dffh, 7fh
test    edi, edi
add     cl, dh
push    ebx
test    [ebx+36h], eax
fsub    qword ptr [edx-0fe68766h]
dec     ebp
in      eax, 69h
mov     dl, 16h
rcr     ebp, cl
push    esi
mov     ecx, 363bed88h
pushf
adc     al, 3eh
leave
dec     edi
into
cmp     eax, esi
sti
in      al, dx
sahf
dec     esp
lea     ebp, [ecx+79892c12h]
wait
jmp     short small near ptr 0ff0ah
jp      short loc_37a9fe83
pushf
lodsd
adc     al, 0f7h
cwde
xchg    eax, edx
sahf
pop     esi
retf
div     byte ptr [edi+6239feb1h]
jl      short loc_37a9fec3
jge     short loc_37a9fed2
push    es
int     24h
mov     edi, 287e7a59h
stosd
ror     dword ptr [ebp+111625eeh], 0d2h
cmp     eax, 48bb4eafh
movsd
cmpsb
push    ecx
xor     eax, 9cbe4c9eh
fstp8   st(2)
lock insd
cmp     eax, 0e71ca3eh
inc     ecx
in      al, 33h
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+block], ecx
mov     ecx, [ebp+block]
call    sub_37aec4bd
mov     eax, [ebp+arg_0]
and     eax, 1
jz      short loc_37a9ff4b
push    4
push    [ebp+block]
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     eax, [ebp+block]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    (offset loc_37ae005c+1)
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 44h
push    ebx
push    esi
push    edi
mov     [ebp+var_10], esp
mov     [ebp+var_1c], ecx
mov     eax, [ebp+var_1c]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_18], eax
push    1
mov     ecx, [ebp+var_18]
call    sub_37aa0d20
mov     [ebp+var_14], eax
and     [ebp+var_4], 0
mov     eax, [ebp+var_14]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     [ebp+var_2c], eax
push    [ebp+var_2c]
push    4
call    loc_37a124e0
pop     ecx
pop     ecx
mov     [ebp+var_30], eax
lea     eax, [ebp+var_14]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_30]
mov     ecx, [ebp+var_34]
mov     ecx, [ecx]
mov     [eax], ecx
mov     eax, [ebp+var_14]
add     eax, 4
mov     [ebp+var_38], eax
mov     eax, [ebp+var_38]
mov     [ebp+var_3c], eax
push    [ebp+var_3c]
push    4
call    loc_37a124e0
pop     ecx
pop     ecx
mov     [ebp+var_40], eax
lea     eax, [ebp+var_14]
mov     [ebp+var_44], eax
mov     eax, [ebp+var_40]
mov     ecx, [ebp+var_44]
mov     ecx, [ecx]
mov     [eax], ecx
mov     eax, [ebp+var_14]
add     eax, 8
mov     [ebp+var_48], eax
mov     eax, [ebp+var_48]
mov     [ebp+var_4c], eax
push    [ebp+var_4c]
push    4
call    loc_37a124e0
pop     ecx
pop     ecx
mov     [ebp+var_50], eax
lea     eax, [ebp+var_14]
mov     [ebp+var_54], eax
mov     eax, [ebp+var_50]
mov     ecx, [ebp+var_54]
mov     ecx, [ecx]
mov     [eax], ecx
jmp     short loc_37aa0041
push    1
push    [ebp+var_14]
mov     ecx, [ebp+var_18]
call    sub_37aa0fc1
push    0
push    0
call    __cxxthrowexception@8
mov     eax, offset loc_37aa0047
retn
or      [ebp+var_4], 0ffffffffh
jmp     short loc_37aa004b
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_14]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_14]
mov     byte ptr [eax+0dh], 1
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aa006d
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 68h
push    ebx
push    esi
push    edi
mov     [ebp+var_10], esp
mov     [ebp+var_18], ecx
mov     eax, [ebp+var_18]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_1c], eax
push    1
mov     ecx, [ebp+var_1c]
call    sub_37aa0d20
mov     [ebp+var_14], eax
and     [ebp+var_4], 0
mov     eax, [ebp+var_18]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_2c]
mov     [ebp+var_30], eax
mov     eax, [ebp+var_30]
mov     [ebp+var_38], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_34], eax
push    [ebp+var_34]
push    4
call    loc_37a124e0
pop     ecx
pop     ecx
mov     [ebp+var_3c], eax
mov     eax, [ebp+var_38]
mov     [ebp+var_40], eax
mov     eax, [ebp+var_3c]
mov     ecx, [ebp+var_40]
mov     ecx, [ecx]
mov     [eax], ecx
mov     eax, [ebp+var_18]
mov     [ebp+var_44], eax
mov     eax, [ebp+var_44]
mov     [ebp+var_48], eax
mov     eax, [ebp+var_48]
mov     [ebp+var_4c], eax
mov     eax, [ebp+var_4c]
mov     [ebp+var_54], eax
mov     eax, [ebp+var_14]
add     eax, 4
mov     [ebp+var_50], eax
push    [ebp+var_50]
push    4
call    loc_37a124e0
pop     ecx
pop     ecx
mov     [ebp+var_58], eax
mov     eax, [ebp+var_54]
mov     [ebp+var_5c], eax
mov     eax, [ebp+var_58]
mov     ecx, [ebp+var_5c]
mov     ecx, [ecx]
mov     [eax], ecx
mov     eax, [ebp+var_18]
mov     [ebp+var_60], eax
mov     eax, [ebp+var_60]
mov     [ebp+var_64], eax
mov     eax, [ebp+var_64]
mov     [ebp+var_68], eax
mov     eax, [ebp+var_68]
mov     [ebp+var_70], eax
mov     eax, [ebp+var_14]
add     eax, 8
mov     [ebp+var_6c], eax
push    [ebp+var_6c]
push    4
call    loc_37a124e0
pop     ecx
pop     ecx
mov     [ebp+var_74], eax
mov     eax, [ebp+var_70]
mov     [ebp+var_78], eax
mov     eax, [ebp+var_74]
mov     ecx, [ebp+var_78]
mov     ecx, [ecx]
mov     [eax], ecx
jmp     short loc_37aa0190
push    1
push    [ebp+var_14]
mov     ecx, [ebp+var_1c]
call    sub_37aa0fc1
push    0
push    0
call    __cxxthrowexception@8
mov     eax, offset loc_37aa0196
retn
or      [ebp+var_4], 0ffffffffh
jmp     short loc_37aa019a
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     ecx, [ebp+var_4]
call    sub_37a9ff54
mov     ecx, [ebp+var_14]
mov     [ecx], eax
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_14], eax
mov     eax, [ebp+arg_0]
add     eax, 10h
mov     [ebp+var_10], eax
push    0
mov     ecx, [ebp+var_10]
call    loc_37a9fef1
push    [ebp+arg_0]
push    [ebp+var_14]
call    sub_37a9e998
pop     ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     [ebp+var_8], ecx
mov     eax, [ebp+arg_0]
mov     [ebp+var_4], eax
jmp     short loc_37aa0238
mov     eax, [ebp+var_4]
mov     [ebp+arg_0], eax
mov     eax, [ebp+var_4]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37aa028d
mov     eax, [ebp+var_4]
push    dword ptr [eax+8]
mov     ecx, [ebp+var_8]
call    sub_37aa0221
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_18], eax
mov     eax, [ebp+arg_0]
add     eax, 10h
mov     [ebp+var_14], eax
push    0
mov     ecx, [ebp+var_14]
call    loc_37a9fef1
push    [ebp+arg_0]
push    [ebp+var_18]
call    sub_37a9e998
pop     ecx
pop     ecx
jmp     short loc_37aa0232
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0f0h
mov     [ebp+var_14], ecx
mov     eax, [ebp+arg_0]
mov     [ebp+var_10], eax
lea     ecx, [ebp+arg_0]
call    sub_37a9fd22
mov     eax, [ebp+var_10]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37aa02cb
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
mov     [ebp+var_c], eax
jmp     short loc_37aa02f2
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37aa02e3
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     [ebp+var_c], eax
jmp     short loc_37aa02f2
mov     eax, [ebp+arg_0]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
cmp     eax, [ebp+var_10]
jnz     loc_37aa04a1
mov     eax, [ebp+var_10]
mov     eax, [eax+4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_c]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37aa031b
mov     eax, [ebp+var_c]
mov     ecx, [ebp+var_8]
mov     [eax+4], ecx
mov     eax, [ebp+var_14]
mov     [ebp+var_38], eax
mov     eax, [ebp+var_38]
mov     [ebp+var_3c], eax
mov     eax, [ebp+var_3c]
mov     [ebp+var_40], eax
mov     eax, [ebp+var_40]
mov     [ebp+var_44], eax
mov     eax, [ebp+var_44]
mov     eax, [eax]
mov     eax, [eax+4]
cmp     eax, [ebp+var_10]
jnz     short loc_37aa0365
mov     eax, [ebp+var_14]
mov     [ebp+var_48], eax
mov     eax, [ebp+var_48]
mov     [ebp+var_4c], eax
mov     eax, [ebp+var_4c]
mov     [ebp+var_50], eax
mov     eax, [ebp+var_50]
mov     [ebp+var_54], eax
mov     eax, [ebp+var_54]
mov     eax, [eax]
mov     ecx, [ebp+var_c]
mov     [eax+4], ecx
jmp     short loc_37aa0382
mov     eax, [ebp+var_8]
mov     eax, [eax]
cmp     eax, [ebp+var_10]
jnz     short loc_37aa0379
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
jmp     short loc_37aa0382
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_c]
mov     [eax+8], ecx
mov     eax, [ebp+var_14]
mov     [ebp+var_58], eax
mov     eax, [ebp+var_58]
mov     [ebp+var_5c], eax
mov     eax, [ebp+var_5c]
mov     [ebp+var_60], eax
mov     eax, [ebp+var_60]
mov     [ebp+var_64], eax
mov     eax, [ebp+var_64]
mov     eax, [eax]
mov     eax, [eax]
cmp     eax, [ebp+var_10]
jnz     short loc_37aa03fe
mov     eax, [ebp+var_c]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37aa03b9
mov     eax, [ebp+var_8]
mov     [ebp+var_28], eax
jmp     short loc_37aa03dc
mov     eax, [ebp+var_c]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37aa03d6
mov     eax, [ebp+var_1c]
mov     eax, [eax]
mov     [ebp+var_1c], eax
jmp     short loc_37aa03bf
mov     eax, [ebp+var_1c]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_68], eax
mov     eax, [ebp+var_68]
mov     [ebp+var_6c], eax
mov     eax, [ebp+var_6c]
mov     [ebp+var_70], eax
mov     eax, [ebp+var_70]
mov     [ebp+var_74], eax
mov     eax, [ebp+var_74]
mov     eax, [eax]
mov     ecx, [ebp+var_28]
mov     [eax], ecx
mov     eax, [ebp+var_14]
mov     [ebp+var_78], eax
mov     eax, [ebp+var_78]
mov     [ebp+var_7c], eax
mov     eax, [ebp+var_7c]
mov     [ebp+var_80], eax
mov     eax, [ebp+var_80]
mov     [ebp+var_84], eax
mov     eax, [ebp+var_84]
mov     eax, [eax]
mov     eax, [eax+8]
cmp     eax, [ebp+var_10]
jnz     short loc_37aa049c
mov     eax, [ebp+var_c]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37aa043c
mov     eax, [ebp+var_8]
mov     [ebp+var_2c], eax
jmp     short loc_37aa0461
mov     eax, [ebp+var_c]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37aa045b
mov     eax, [ebp+var_20]
mov     eax, [eax+8]
mov     [ebp+var_20], eax
jmp     short loc_37aa0442
mov     eax, [ebp+var_20]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_88], eax
mov     eax, [ebp+var_88]
mov     [ebp+var_8c], eax
mov     eax, [ebp+var_8c]
mov     [ebp+var_90], eax
mov     eax, [ebp+var_90]
mov     [ebp+var_94], eax
mov     eax, [ebp+var_94]
mov     eax, [eax]
mov     ecx, [ebp+var_2c]
mov     [eax+8], ecx
jmp     loc_37aa0604
mov     eax, [ebp+var_10]
mov     eax, [eax]
mov     ecx, [ebp+var_4]
mov     [eax+4], ecx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_10]
mov     ecx, [ecx]
mov     [eax], ecx
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_4]
cmp     ecx, [eax+8]
jnz     short loc_37aa04c9
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
jmp     short loc_37aa0506
mov     eax, [ebp+var_4]
mov     eax, [eax+4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_c]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37aa04e6
mov     eax, [ebp+var_c]
mov     ecx, [ebp+var_8]
mov     [eax+4], ecx
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_10]
mov     ecx, [ecx+8]
mov     [eax+8], ecx
mov     eax, [ebp+var_10]
mov     eax, [eax+8]
mov     ecx, [ebp+var_4]
mov     [eax+4], ecx
mov     eax, [ebp+var_14]
mov     [ebp+var_98], eax
mov     eax, [ebp+var_98]
mov     [ebp+var_9c], eax
mov     eax, [ebp+var_9c]
mov     [ebp+var_a0], eax
mov     eax, [ebp+var_a0]
mov     [ebp+var_a4], eax
mov     eax, [ebp+var_a4]
mov     eax, [eax]
mov     eax, [eax+4]
cmp     eax, [ebp+var_10]
jnz     short loc_37aa0580
mov     eax, [ebp+var_14]
mov     [ebp+var_a8], eax
mov     eax, [ebp+var_a8]
mov     [ebp+var_ac], eax
mov     eax, [ebp+var_ac]
mov     [ebp+var_b0], eax
mov     eax, [ebp+var_b0]
mov     [ebp+var_b4], eax
mov     eax, [ebp+var_b4]
mov     eax, [eax]
mov     ecx, [ebp+var_4]
mov     [eax+4], ecx
jmp     short loc_37aa05a6
mov     eax, [ebp+var_10]
mov     eax, [eax+4]
mov     eax, [eax]
cmp     eax, [ebp+var_10]
jnz     short loc_37aa059a
mov     eax, [ebp+var_10]
mov     eax, [eax+4]
mov     ecx, [ebp+var_4]
mov     [eax], ecx
jmp     short loc_37aa05a6
mov     eax, [ebp+var_10]
mov     eax, [eax+4]
mov     ecx, [ebp+var_4]
mov     [eax+8], ecx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_10]
mov     ecx, [ecx+4]
mov     [eax+4], ecx
mov     eax, [ebp+var_10]
add     eax, 0ch
mov     [ebp+var_34], eax
mov     eax, [ebp+var_4]
add     eax, 0ch
mov     [ebp+var_30], eax
mov     eax, [ebp+var_30]
mov     [ebp+var_b8], eax
mov     eax, [ebp+var_b8]
mov     al, [eax]
mov     [ebp+var_15], al
mov     eax, [ebp+var_34]
mov     [ebp+var_bc], eax
mov     eax, [ebp+var_30]
mov     ecx, [ebp+var_bc]
mov     cl, [ecx]
mov     [eax], cl
lea     eax, [ebp+var_15]
mov     [ebp+var_c0], eax
mov     eax, [ebp+var_34]
mov     ecx, [ebp+var_c0]
mov     cl, [ecx]
mov     [eax], cl
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax+0ch]
cmp     eax, 1
jnz     loc_37aa0838
jmp     short loc_37aa061f
mov     eax, [ebp+var_c]
mov     eax, [eax+4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_c4], eax
mov     eax, [ebp+var_c4]
mov     [ebp+var_c8], eax
mov     eax, [ebp+var_c8]
mov     [ebp+var_cc], eax
mov     eax, [ebp+var_cc]
mov     [ebp+var_d0], eax
mov     eax, [ebp+var_d0]
mov     eax, [eax]
mov     ecx, [ebp+var_c]
cmp     ecx, [eax+4]
jz      loc_37aa0831
mov     eax, [ebp+var_c]
movsx   eax, byte ptr [eax+0ch]
cmp     eax, 1
jnz     loc_37aa0831
mov     eax, [ebp+var_8]
mov     ecx, [ebp+var_c]
cmp     ecx, [eax]
jnz     loc_37aa075b
mov     eax, [ebp+var_8]
mov     eax, [eax+8]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
movsx   eax, byte ptr [eax+0ch]
test    eax, eax
jnz     short loc_37aa06b4
mov     eax, [ebp+var_4]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_8]
mov     byte ptr [eax+0ch], 0
push    [ebp+var_8]
mov     ecx, [ebp+var_14]
call    sub_37aa0900
mov     eax, [ebp+var_8]
mov     eax, [eax+8]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37aa06ca
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
jmp     loc_37aa0756
mov     eax, [ebp+var_4]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0ch]
cmp     eax, 1
jnz     short loc_37aa06f6
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0ch]
cmp     eax, 1
jnz     short loc_37aa06f6
mov     eax, [ebp+var_4]
mov     byte ptr [eax+0ch], 0
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
jmp     short loc_37aa0756
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0ch]
cmp     eax, 1
jnz     short loc_37aa0729
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_4]
mov     byte ptr [eax+0ch], 0
push    [ebp+var_4]
mov     ecx, [ebp+var_14]
call    sub_37aa0c14
mov     eax, [ebp+var_8]
mov     eax, [eax+8]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_8]
mov     cl, [ecx+0ch]
mov     [eax+0ch], cl
mov     eax, [ebp+var_8]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
mov     byte ptr [eax+0ch], 1
push    [ebp+var_8]
mov     ecx, [ebp+var_14]
call    sub_37aa0900
jmp     loc_37aa0831
jmp     loc_37aa082c
mov     eax, [ebp+var_8]
mov     eax, [eax]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
movsx   eax, byte ptr [eax+0ch]
test    eax, eax
jnz     short loc_37aa078f
mov     eax, [ebp+var_4]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_8]
mov     byte ptr [eax+0ch], 0
push    [ebp+var_8]
mov     ecx, [ebp+var_14]
call    sub_37aa0c14
mov     eax, [ebp+var_8]
mov     eax, [eax]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jz      short loc_37aa07a5
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
jmp     loc_37aa082c
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0ch]
cmp     eax, 1
jnz     short loc_37aa07d1
mov     eax, [ebp+var_4]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0ch]
cmp     eax, 1
jnz     short loc_37aa07d1
mov     eax, [ebp+var_4]
mov     byte ptr [eax+0ch], 0
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
jmp     short loc_37aa082c
mov     eax, [ebp+var_4]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0ch]
cmp     eax, 1
jnz     short loc_37aa0803
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_4]
mov     byte ptr [eax+0ch], 0
push    [ebp+var_4]
mov     ecx, [ebp+var_14]
call    sub_37aa0900
mov     eax, [ebp+var_8]
mov     eax, [eax]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_8]
mov     cl, [ecx+0ch]
mov     [eax+0ch], cl
mov     eax, [ebp+var_8]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     byte ptr [eax+0ch], 1
push    [ebp+var_8]
mov     ecx, [ebp+var_14]
call    sub_37aa0c14
jmp     short loc_37aa0831
jmp     loc_37aa0616
mov     eax, [ebp+var_c]
mov     byte ptr [eax+0ch], 1
mov     eax, [ebp+var_14]
mov     [ebp+var_d4], eax
mov     eax, [ebp+var_d4]
mov     [ebp+var_d8], eax
mov     eax, [ebp+var_d8]
mov     [ebp+var_dc], eax
mov     eax, [ebp+var_dc]
add     eax, 4
mov     [ebp+var_e0], eax
mov     eax, [ebp+var_e0]
cmp     dword ptr [eax], 0
jbe     short loc_37aa08b4
mov     eax, [ebp+var_f0]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_e4], eax
mov     eax, [ebp+var_e4]
mov     [ebp+var_e8], eax
mov     eax, [ebp+var_e8]
mov     [ebp+var_ec], eax
mov     eax, [ebp+var_ec]
add     eax, 4
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     eax, [eax]
dec     eax
mov     ecx, [ebp+var_24]
mov     [ecx], eax
mov     eax, [ebp+var_10]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_10], eax
push    [ebp+arg_0]
push    [ebp+var_10]
call    sub_37a9e998
pop     ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     [ebp-8], eax
mov     eax, [ebp-8]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     [ebp+var_8], ecx
mov     eax, [ebp+arg_0]
mov     eax, [eax+8]
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx]
mov     [eax+8], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37aa0935
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
mov     [eax+4], ecx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx+4]
mov     [eax+4], ecx
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
cmp     ecx, [eax+4]
jnz     short loc_37aa098b
mov     eax, [ebp+var_8]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     eax, [eax]
mov     ecx, [ebp+var_4]
mov     [eax+4], ecx
jmp     short loc_37aa09b1
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
mov     ecx, [ebp+arg_0]
cmp     ecx, [eax]
jnz     short loc_37aa09a5
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
mov     ecx, [ebp+var_4]
mov     [eax], ecx
jmp     short loc_37aa09b1
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
mov     ecx, [ebp+var_4]
mov     [eax+8], ecx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     [eax], ecx
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_4]
mov     [eax+4], ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 80h
mov     [ebp+var_4], ecx
mov     eax, [ebp+arg_0]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_14], eax
push    [ebp+var_10]
mov     ecx, [ebp+var_14]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     ecx, [ebp+var_2c]
mov     ecx, [ecx]
mov     [eax], ecx
mov     eax, [ebp+arg_0]
mov     [ebp+var_30], eax
mov     eax, [ebp+var_30]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_34]
add     eax, 4
mov     [ebp+var_44], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_38], eax
mov     eax, [ebp+var_38]
mov     [ebp+var_3c], eax
mov     eax, [ebp+var_3c]
add     eax, 4
mov     [ebp+var_40], eax
mov     eax, [ebp+var_40]
mov     ecx, [ebp+var_44]
mov     ecx, [ecx]
mov     [eax], ecx
mov     eax, [ebp+arg_0]
mov     [ebp+var_48], eax
mov     eax, [ebp+var_48]
mov     [ebp+var_4c], eax
mov     eax, [ebp+var_4c]
add     eax, 8
mov     [ebp+var_5c], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_50], eax
mov     eax, [ebp+var_50]
mov     [ebp+var_54], eax
mov     eax, [ebp+var_54]
add     eax, 8
mov     [ebp+var_58], eax
mov     eax, [ebp+var_58]
mov     ecx, [ebp+var_5c]
mov     ecx, [ecx]
mov     [eax], ecx
mov     eax, [ebp+arg_0]
mov     [ebp+var_60], eax
mov     eax, [ebp+var_60]
mov     [ebp+var_64], eax
mov     eax, [ebp+var_64]
mov     [ebp+var_68], eax
mov     eax, [ebp+var_68]
and     dword ptr [eax], 0
mov     eax, [ebp+arg_0]
mov     [ebp+var_6c], eax
mov     eax, [ebp+var_6c]
mov     [ebp+var_70], eax
mov     eax, [ebp+var_70]
add     eax, 4
mov     [ebp+var_74], eax
mov     eax, [ebp+var_74]
and     dword ptr [eax], 0
mov     eax, [ebp+arg_0]
mov     [ebp+var_78], eax
mov     eax, [ebp+var_78]
mov     [ebp+var_7c], eax
mov     eax, [ebp+var_7c]
add     eax, 8
mov     [ebp+var_80], eax
mov     eax, [ebp+var_80]
and     dword ptr [eax], 0
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37ae0071
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 5ch
push    ebx
push    esi
push    edi
mov     [ebp-10h], esp
mov     [ebp-1ch], ecx
mov     eax, [ebp-1ch]
mov     [ebp-24h], eax
mov     eax, [ebp-24h]
mov     [ebp-28h], eax
mov     eax, [ebp-28h]
add     eax, 4
mov     [ebp-34h], eax
mov     eax, [ebp-1ch]
mov     [ebp-2ch], eax
mov     eax, [ebp-2ch]
mov     [ebp-30h], eax
mov     eax, [ebp-30h]
mov     [ebp-38h], eax
mov     eax, [ebp-34h]
mov     ecx, [ebp-38h]
mov     eax, [eax]
sub     eax, [ecx]
cdq
push    18h
pop     ecx
idiv    ecx
mov     [ebp-6ch], eax
mov     eax, [ebp-1ch]
mov     [ebp-3ch], eax
mov     eax, [ebp-3ch]
mov     [ebp-40h], eax
push    dword ptr [ebp+8]
mov     ecx, [ebp-40h]
call    sub_37aa0d7c
mov     [ebp-20h], eax
and     dword ptr [ebp-4], 0
mov     eax, [ebp-1ch]
mov     [ebp-44h], eax
mov     eax, [ebp-44h]
mov     [ebp-48h], eax
mov     eax, [ebp-48h]
add     eax, 4
mov     [ebp-54h], eax
mov     eax, [ebp-1ch]
mov     [ebp-4ch], eax
mov     eax, [ebp-4ch]
mov     [ebp-50h], eax
mov     eax, [ebp-50h]
mov     [ebp-58h], eax
mov     eax, [ebp-54h]
mov     eax, [eax]
mov     [ebp-64h], eax
mov     eax, [ebp-58h]
mov     eax, [eax]
mov     [ebp-68h], eax
xor     eax, eax
mov     [ebp-11h], al
mov     al, [ebp-11h]
mov     [ebp-18h], al
mov     eax, [ebp-1ch]
mov     [ebp-5ch], eax
mov     eax, [ebp-5ch]
mov     [ebp-60h], eax
push    dword ptr [ebp-60h]
push    dword ptr [ebp-20h]
push    dword ptr [ebp-64h]
push    dword ptr [ebp-68h]
call    sub_37a9faec
add     esp, 10h
jmp     short loc_37aa0be6
movsd
add     eax, 404fe625h
sbb     eax, [eax]
retf    63c5h
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     [ebp+var_8], ecx
mov     eax, [ebp+arg_0]
mov     eax, [eax]
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+8]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
movsx   eax, byte ptr [eax+0dh]
test    eax, eax
jnz     short loc_37aa0c4a
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
mov     ecx, [ebp+arg_0]
mov     [eax+4], ecx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     ecx, [ecx+4]
mov     [eax+4], ecx
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
cmp     ecx, [eax+4]
jnz     short loc_37aa0ca0
mov     eax, [ebp+var_8]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     eax, [eax]
mov     ecx, [ebp+var_4]
mov     [eax+4], ecx
jmp     short loc_37aa0cc7
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
mov     ecx, [ebp+arg_0]
cmp     ecx, [eax+8]
jnz     short loc_37aa0cbc
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
mov     ecx, [ebp+var_4]
mov     [eax+8], ecx
jmp     short loc_37aa0cc7
mov     eax, [ebp+arg_0]
mov     eax, [eax+4]
mov     ecx, [ebp+var_4]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     [eax+8], ecx
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_4]
mov     [eax+4], ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     [ebp+var_4], ecx
lea     eax, [ebp+var_10]
push    eax
mov     ecx, [ebp+var_4]
call    sub_37aa1002
mov     eax, [eax]
mov     [ebp+var_8], eax
lea     eax, [ebp+var_14]
push    eax
mov     ecx, [ebp+var_4]
call    sub_37aa0dd8
mov     eax, [eax]
mov     [ebp+var_c], eax
push    [ebp+var_8]
push    [ebp+var_c]
lea     eax, [ebp+var_18]
push    eax
mov     ecx, [ebp+var_4]
call    sub_37aa105f
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp+var_c], ecx
mov     [ebp+var_10], 6666666h
imul    eax, [ebp+arg_0], 28h
mov     [ebp+size], eax
cmp     [ebp+arg_0], 6666666h
jbe     short loc_37aa0d44
or      [ebp+size], 0ffffffffh
cmp     [ebp+size], 1000h
jb      short loc_37aa0d5b
push    [ebp+size]
call    sub_37a14c20
pop     ecx
mov     [ebp+var_8], eax
jmp     short loc_37aa0d73
cmp     [ebp+size], 0
jz      short loc_37aa0d6f
push    [ebp+size]
call    j_??2@yapaxi@z
pop     ecx
mov     [ebp+var_8], eax
jmp     short loc_37aa0d73
and     [ebp+var_8], 0
mov     eax, [ebp+var_8]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp+var_c], ecx
mov     [ebp+var_10], 0aaaaaaah
imul    eax, [ebp+arg_0], 18h
mov     [ebp+size], eax
cmp     [ebp+arg_0], 0aaaaaaah
jbe     short loc_37aa0da0
or      [ebp+size], 0ffffffffh
cmp     [ebp+size], 1000h
jb      short loc_37aa0db7
push    [ebp+size]
call    sub_37a14c20
pop     ecx
mov     [ebp+var_8], eax
jmp     short loc_37aa0dcf
cmp     [ebp+size], 0
jz      short loc_37aa0dcb
push    [ebp+size]
call    j_??2@yapaxi@z
pop     ecx
mov     [ebp+var_8], eax
jmp     short loc_37aa0dcf
and     [ebp+var_8], 0
mov     eax, [ebp+var_8]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     eax, [eax]
mov     eax, [eax]
mov     [ebp+var_24], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_24]
mov     [eax], ecx
push    [ebp+var_28]
mov     ecx, [ebp+arg_0]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
add     eax, 8
mov     [ebp+var_18], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_18]
mov     ecx, [ebp+var_1c]
mov     eax, [eax]
sub     eax, [ecx]
cdq
push    18h
pop     ecx
idiv    ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9d570
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 84h
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     eax, [eax]
push    dword ptr [eax+4]
mov     ecx, [ebp+var_10]
call    sub_37aa0221
mov     eax, [ebp+var_10]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_2c]
mov     [ebp+var_40], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_30], eax
mov     eax, [ebp+var_30]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_34]
mov     [ebp+var_38], eax
mov     eax, [ebp+var_38]
mov     [ebp+var_3c], eax
mov     eax, [ebp+var_3c]
mov     eax, [eax]
mov     ecx, [ebp+var_40]
mov     ecx, [ecx]
mov     [eax+4], ecx
mov     eax, [ebp+var_10]
mov     [ebp+var_44], eax
mov     eax, [ebp+var_44]
mov     [ebp+var_48], eax
mov     eax, [ebp+var_48]
mov     [ebp+var_4c], eax
mov     eax, [ebp+var_4c]
mov     [ebp+var_60], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_50], eax
mov     eax, [ebp+var_50]
mov     [ebp+var_54], eax
mov     eax, [ebp+var_54]
mov     [ebp+var_58], eax
mov     eax, [ebp+var_58]
mov     [ebp+var_5c], eax
mov     eax, [ebp+var_5c]
mov     eax, [eax]
mov     ecx, [ebp+var_60]
mov     ecx, [ecx]
mov     [eax], ecx
mov     eax, [ebp+var_10]
mov     [ebp+var_64], eax
mov     eax, [ebp+var_64]
mov     [ebp+var_68], eax
mov     eax, [ebp+var_68]
mov     [ebp+var_6c], eax
mov     eax, [ebp+var_6c]
mov     [ebp+var_80], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_70], eax
mov     eax, [ebp+var_70]
mov     [ebp+var_74], eax
mov     eax, [ebp+var_74]
mov     [ebp+var_78], eax
mov     eax, [ebp+var_78]
mov     [ebp+var_7c], eax
mov     eax, [ebp+var_7c]
mov     eax, [eax]
mov     ecx, [ebp+var_80]
mov     ecx, [ecx]
mov     [eax+8], ecx
mov     eax, [ebp+var_10]
mov     [ebp+var_84], eax
mov     eax, [ebp+var_84]
mov     [ebp+var_88], eax
mov     eax, [ebp+var_88]
mov     [ebp+var_8c], eax
mov     eax, [ebp+var_8c]
add     eax, 4
mov     [ebp+var_90], eax
mov     eax, [ebp+var_90]
and     dword ptr [eax], 0
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_c], ecx
imul    eax, [ebp+arg_4], 28h
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
mov     [ebp+block], eax
cmp     [ebp+var_4], 1000h
jb      short loc_37aa0fef
lea     eax, [ebp+var_4]
push    eax
lea     eax, [ebp+block]
push    eax
call    sub_37a12570
pop     ecx
pop     ecx
push    [ebp+var_4]
push    [ebp+block]
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     eax, [eax]
mov     [ebp+var_24], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_24]
mov     [eax], ecx
push    [ebp+var_28]
mov     ecx, [ebp+arg_0]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 44h
mov     [ebp+var_4], ecx
lea     eax, [ebp+var_3c]
push    eax
mov     ecx, [ebp+var_4]
call    sub_37aa0dd8
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     ecx, [ebp+arg_4]
cmp     ecx, [eax]
jnz     short loc_37aa108a
mov     [ebp+var_8], 1
jmp     short loc_37aa108e
and     [ebp+var_8], 0
movzx   eax, byte ptr [ebp+var_8]
test    eax, eax
jz      short loc_37aa10e4
lea     eax, [ebp+var_40]
push    eax
mov     ecx, [ebp+var_4]
call    sub_37aa1002
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     ecx, [ebp+arg_8]
cmp     ecx, [eax]
jnz     short loc_37aa10b8
mov     [ebp+var_c], 1
jmp     short loc_37aa10bc
and     [ebp+var_c], 0
movzx   eax, byte ptr [ebp+var_c]
test    eax, eax
jz      short loc_37aa10e4
mov     ecx, [ebp+var_4]
call    sub_37aa0e7b
push    [ebp+arg_0]
mov     ecx, [ebp+var_4]
call    sub_37aa0dd8
mov     eax, [ebp+arg_0]
jmp     loc_37aa116f
jmp     loc_37aa116f
mov     eax, [ebp+arg_4]
cmp     eax, [ebp+arg_8]
jnz     short loc_37aa10f5
mov     [ebp+var_10], 1
jmp     short loc_37aa10f9
and     [ebp+var_10], 0
movzx   eax, byte ptr [ebp+var_10]
test    eax, eax
jnz     short loc_37aa110a
mov     [ebp+var_14], 1
jmp     short loc_37aa110e
and     [ebp+var_14], 0
movzx   eax, byte ptr [ebp+var_14]
test    eax, eax
jz      short loc_37aa113b
mov     eax, [ebp+arg_4]
mov     [ebp+var_20], eax
lea     ecx, [ebp+arg_4]
call    sub_37a9fd22
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
push    [ebp+var_24]
lea     eax, [ebp+var_44]
push    eax
mov     ecx, [ebp+var_4]
call    sub_37aa1175
jmp     short loc_37aa10e4
mov     eax, [ebp+var_4]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_2c]
mov     [ebp+var_30], eax
mov     eax, [ebp+var_30]
mov     [ebp+var_38], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_34], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_34]
mov     [eax], ecx
push    [ebp+var_38]
mov     ecx, [ebp+arg_0]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 30h
mov     [ebp+var_4], ecx
mov     eax, [ebp+arg_4]
mov     [ebp+var_c], eax
lea     ecx, [ebp+var_c]
call    sub_37a9fd22
push    [ebp+arg_4]
mov     ecx, [ebp+var_4]
call    sub_37aa0293
mov     [ebp+var_8], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_8]
add     eax, 10h
mov     [ebp+var_18], eax
push    0
mov     ecx, [ebp+var_18]
call    loc_37a9fef1
push    [ebp+var_8]
push    [ebp+var_1c]
call    sub_37a9e998
pop     ecx
pop     ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     [ebp+var_30], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_2c], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_2c]
mov     [eax], ecx
push    [ebp+var_30]
mov     ecx, [ebp+arg_0]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 30h
mov     [ebp+var_4], ecx
push    [ebp+arg_4]
lea     eax, [ebp+var_8]
push    eax
mov     ecx, [ebp+var_4]
call    sub_37aa12a9
lea     eax, [ebp+var_28]
push    eax
mov     ecx, [ebp+var_4]
call    sub_37aa1002
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_8]
cmp     ecx, [eax]
jnz     short loc_37aa1240
mov     [ebp+var_c], 1
jmp     short loc_37aa1244
and     [ebp+var_c], 0
movzx   eax, byte ptr [ebp+var_c]
test    eax, eax
jnz     short loc_37aa1281
mov     eax, [ebp+var_8]
add     eax, 10h
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_2c], eax
push    [ebp+var_1c]
mov     ecx, [ebp+arg_4]
call    sub_37aec9f1
movzx   eax, al
test    eax, eax
jnz     short loc_37aa1281
mov     eax, [ebp+var_8]
mov     [ebp+var_20], eax
lea     eax, [ebp+var_20]
mov     [ebp+var_10], eax
jmp     short loc_37aa1290
lea     eax, [ebp+var_30]
push    eax
mov     ecx, [ebp+var_4]
call    sub_37aa1002
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_18], eax
push    [ebp+arg_4]
mov     ecx, [ebp+var_4]
call    sub_37a9fa50
mov     [ebp+var_14], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_14]
mov     [eax], ecx
push    [ebp+var_18]
mov     ecx, [ebp+arg_0]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    8
clc
sbb     eax, 0f4be26b3h
aad     0feh
mov     edx, 0c211a320h
fisttp  qword ptr [eax+ebx*4]
xor     esi, [eax-2e5c9aadh]
stosb
mov     cl, 60h
pop     edi
out     68h, eax
aas
dec     byte ptr [edx+7ch]
pop     eax
jle     loc_37aa1395
insb
and     eax, 16471eech
adc     esp, [eax-1bcf3794h]
sub     byte ptr [eax+eax+1fd1e0a9h], 0e1h
inc     ecx
pop     eax
jo      short loc_37aa13ae
call    near ptr 2ccd842dh
sbb     bh, [esi-5]
push    edi
mov     edx, 5cab29c9h
dec     edx
xchg    eax, ebx
stosb
inc     esp
mov     al, ds:0c8e47f6h
xor     edi, [ebp-200bdb54h]
pop     esp
or      cl, [ebp-8]
iret
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     [ebp-8], eax
mov     eax, [ebp-8]
mov     [ebp-0ch], eax
mov     eax, [ebp-0ch]
mov     [ebp-10h], eax
mov     eax, [ebp-10h]
add     eax, 4
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
mov     eax, [eax]
mov     esp, ebp
pop     ebp
retn
int     3
int     3
push    [esp-0ch+arglist]
push    0
push    [esp-4+format]
push    [esp+buffercount]
push    [esp+4+buffer]
call    sub_37a16790
push    dword ptr [eax+4]
push    dword ptr [eax]
call    ___stdio_common_vsprintf_s
or      ecx, 0ffffffffh
add     esp, 1ch
test    eax, eax
cmovs   eax, ecx
retn
mov     eax, offset loc_37ae00e4
call    __eh_prolog
sub     esp, 20h
mov     ecx, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
lea     edx, [ecx+1]
mov     [ebp+var_10], esp
xor     esi, esi
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37aa13fb
mov     eax, [edi]
sub     ecx, edx
mov     [ebp+var_18], ecx
mov     eax, [eax+4]
mov     ebx, [eax+edi+20h]
mov     eax, [eax+edi+24h]
cmp     eax, esi
jl      short loc_37aa142e
jg      short loc_37aa1428
cmp     ebx, esi
jbe     short loc_37aa142e
cmp     eax, esi
jl      short loc_37aa142e
jg      short loc_37aa1428
cmp     ebx, ecx
jbe     short loc_37aa142e
sub     ebx, ecx
sbb     eax, esi
jmp     short loc_37aa143c
xorps   xmm0, xmm0
movlpd  [ebp+var_20], xmm0
mov     eax, dword ptr [ebp+var_20+4]
mov     ebx, dword ptr [ebp+var_20]
push    edi
lea     ecx, [ebp+var_2c]
mov     [ebp+var_14], eax
call    sub_37aa17a5
cmp     [ebp+var_28], 0
mov     [ebp+var_4], esi
jnz     short loc_37aa1459
push    4
pop     ecx
jmp     loc_37aa153c
mov     ecx, [edi]
mov     byte ptr [ebp+var_4], 1
mov     eax, [ecx+4]
mov     eax, [eax+edi+14h]
and     eax, 1c0h
cmp     eax, 40h
jz      short loc_37aa14aa
mov     eax, [ebp+var_14]
cmp     eax, esi
jl      short loc_37aa14a8
jg      short loc_37aa147d
cmp     ebx, esi
jbe     short loc_37aa14a8
mov     eax, [edi]
mov     ecx, [eax+4]
mov     al, [ecx+edi+40h]
mov     ecx, [ecx+edi+38h]
mov     byte ptr [ebp+var_20+4], al
push    dword ptr [ebp+var_20+4]
call    sub_37aa1955
cmp     eax, 0ffffffffh
jz      short loc_37aa14f0
mov     eax, [ebp+var_14]
add     ebx, 0ffffffffh
adc     eax, 0ffffffffh
mov     [ebp+var_14], eax
jmp     short loc_37aa1473
mov     ecx, [edi]
mov     eax, [ecx+4]
push    esi
push    [ebp+var_18]
mov     ecx, [eax+edi+38h]
push    [ebp+arg_4]
mov     eax, [ecx]
call    dword ptr [eax+24h]
cmp     eax, [ebp+var_18]
jnz     short loc_37aa14f0
cmp     edx, esi
jnz     short loc_37aa14f0
mov     eax, [ebp+var_14]
cmp     eax, esi
jl      short loc_37aa1503
jg      short loc_37aa14d3
cmp     ebx, esi
jbe     short loc_37aa1503
mov     eax, [edi]
mov     ecx, [eax+4]
mov     al, [ecx+edi+40h]
mov     ecx, [ecx+edi+38h]
mov     byte ptr [ebp+var_20+4], al
push    dword ptr [ebp+var_20+4]
call    sub_37aa1955
cmp     eax, 0ffffffffh
jnz     short loc_37aa14f5
push    4
pop     ecx
jmp     short loc_37aa1505
mov     eax, [ebp+var_14]
add     ebx, 0ffffffffh
adc     eax, 0ffffffffh
mov     [ebp+var_14], eax
jmp     short loc_37aa14c9
mov     ecx, esi
mov     eax, [edi]
mov     eax, [eax+4]
mov     [eax+edi+20h], esi
mov     [eax+edi+24h], esi
jmp     short loc_37aa1539
mov     edx, [ebp+arg_0]
push    1
mov     eax, [edx]
mov     ecx, [eax+4]
add     ecx, edx
mov     eax, [ecx+0ch]
or      eax, 4
push    eax
call    sub_37aa1870
mov     eax, offset loc_37aa1532
retn
mov     edi, [ebp+arg_0]
xor     esi, esi
mov     ecx, esi
mov     [ebp+var_4], esi
mov     eax, [edi]
mov     eax, [eax+4]
add     eax, edi
test    ecx, ecx
jz      short loc_37aa1555
mov     edx, [eax+0ch]
or      edx, ecx
mov     ecx, eax
push    esi
push    edx
call    sub_37aa1870
lea     ecx, [ebp+var_2c]
call    sub_37a9d610
mov     ecx, [ebp+var_c]
mov     eax, edi
pop     edi
pop     esi
mov     large fs:0, ecx
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     eax, offset byte_37ae00f6
call    __eh_prolog
sub     esp, 14h
push    ebx
push    esi
mov     esi, [ebp+8]
push    edi
xor     edi, edi
mov     [ebp-10h], esp
mov     [ebp-14h], edi
mov     eax, [esi]
mov     eax, [eax+4]
mov     ebx, [eax+esi+20h]
cmp     [eax+esi+24h], edi
jl      short loc_37aa15ab
jg      short loc_37aa15a0
cmp     ebx, edi
jbe     short loc_37aa15ab
mov     eax, [ebp+10h]
cmp     ebx, eax
jbe     short loc_37aa15ab
sub     ebx, eax
jmp     short loc_37aa15ad
mov     ebx, edi
push    esi
lea     ecx, [ebp-20h]
call    sub_37aa17a5
cmp     byte ptr [ebp-1ch], 0
mov     [ebp-4], edi
jnz     short loc_37aa15c7
push    4
pop     ecx
jmp     near ptr loc_37aa1692+2
mov     ecx, [esi]
mov     byte ptr [ebp-4], 1
mov     eax, [ecx+4]
mov     eax, [eax+esi+14h]
and     eax, 1c0h
cmp     eax, 40h
jz      short loc_37aa160c
test    ebx, ebx
jz      short loc_37aa160a
mov     eax, [esi]
mov     ecx, [eax+4]
mov     al, [ecx+esi+40h]
mov     ecx, [ecx+esi+38h]
mov     [ebp-18h], al
push    dword ptr [ebp-18h]
call    sub_37aa1955
cmp     eax, 0ffffffffh
jnz     short loc_37aa1607
push    4
pop     eax
mov     [ebp-14h], eax
jmp     short loc_37aa1628
dec     ebx
jmp     short loc_37aa15de
mov     ecx, [esi]
mov     eax, [ecx+4]
push    edi
push    dword ptr [ebp+10h]
mov     ecx, [eax+esi+38h]
push    dword ptr [ebp+0ch]
mov     eax, [ecx]
call    dword ptr [eax+24h]
cmp     eax, [ebp+10h]
jnz     short loc_37aa1654
cmp     edx, edi
jnz     short loc_37aa1654
test    ebx, ebx
jz      short loc_37aa1659
mov     eax, [esi]
mov     ecx, [eax+4]
mov     al, [ecx+esi+40h]
mov     ecx, [ecx+esi+38h]
mov     [ebp-18h], al
push    dword ptr [ebp-18h]
call    sub_37aa1955
cmp     eax, 0ffffffffh
jnz     short loc_37aa1651
mov     ecx, [ebp-14h]
or      ecx, 4
jmp     short loc_37aa165c
dec     ebx
jmp     short loc_37aa1628
push    4
pop     ecx
jmp     short loc_37aa165c
mov     ecx, [ebp-14h]
mov     eax, [esi]
mov     eax, [eax+4]
mov     [eax+esi+20h], edi
mov     [eax+esi+24h], edi
jmp     short loc_37aa1691
dec     esp
mov     esp, 0b76c50f7h
cmpsb
fnstenv byte ptr [esi]
sbb     dl, [ebp+1d50b44h]
sbb     gs:[edx+74efc7efh], esp
push    esi
pop     ebp
push    cs
inc     esp
out     36h, eax
cmpsb
add     [edi-58c9a5d1h], ah
add     ch, dl
mov     edx, [esp+arg_0]
push    esi
mov     esi, ecx
mov     [esi], edx
mov     eax, [edx]
mov     eax, [eax+4]
mov     ecx, [eax+edx+38h]
test    ecx, ecx
jz      short loc_37aa179f
mov     eax, [ecx]
call    dword ptr [eax+4]
mov     eax, esi
pop     esi
retn    4
mov     eax, offset loc_37ae0108
call    __eh_prolog
push    ecx
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     edi, ecx
push    esi
mov     [ebp+var_10], edi
call    sub_37aa1784
mov     edx, [esi]
mov     eax, edx
and     [ebp+var_4], 0
mov     ecx, [edx+4]
cmp     dword ptr [ecx+esi+0ch], 0
jnz     short loc_37aa17e5
mov     ecx, [ecx+esi+3ch]
test    ecx, ecx
jz      short loc_37aa17e5
cmp     ecx, esi
jz      short loc_37aa17e5
call    sub_37a9de20
mov     eax, [esi]
mov     eax, [eax+4]
mov     ecx, [ebp+var_c]
cmp     dword ptr [eax+esi+0ch], 0
setz    al
mov     [edi+4], al
mov     eax, edi
pop     edi
pop     esi
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
popa
movsd
inc     edx
jmp     near ptr 4aa79fd9h
mov     edx, [esp+arg_0]
mov     eax, edx
push    [esp+arg_4]
or      eax, 4
cmp     dword ptr [ecx+38h], 0
cmovz   edx, eax
push    edx
call    sub_37a9dbd0
retn    8
xor     eax, [edx]
cmp     [ebp+31h], edx
loopne  loc_37aa181d
arpl    ax, dx
xchg    eax, esi
add     ebp, [esp+ebx*8+var_5f442969]
pop     eax
retf    7330h
mov     ebp, esi
stosb
inc     ecx
retn
mov     eax, [ecx+20h]
xor     edx, edx
push    ebx
mov     bl, [esp+4+arg_0]
push    esi
cmp     [eax], edx
jz      short loc_37aa1969
mov     eax, [ecx+30h]
mov     edx, [eax]
movzx   esi, bl
test    edx, edx
jle     short loc_37aa1983
mov     eax, [ecx+30h]
dec     dword ptr [eax]
mov     ecx, [ecx+20h]
mov     edx, [ecx]
lea     eax, [edx+1]
mov     [ecx], eax
mov     [edx], bl
jmp     short loc_37aa198b
mov     eax, [ecx]
push    esi
call    dword ptr [eax+0ch]
mov     esi, eax
mov     eax, esi
pop     esi
pop     ebx
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
mov     [ebp+var_8], ecx
mov     eax, [ebp+var_8]
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_4]
mov     dword ptr [ecx+10h], 0
mov     edx, [ebp+var_4]
mov     dword ptr [edx+14h], 0
mov     eax, [ebp+var_8]
mov     esp, ebp
pop     ebp
retn    8
sub     esp, edi
fnsave  byte ptr [esi-58h]
mov     esi, 6ae55fb4h
add     dword ptr [ecx-7ch], 6dec27feh
cmp     bl, [ebp+18h]
lods    dword ptr es:[esi]
sub     [esi], esp
and     al, 2fh
stc
popf
inc     esp
jmp     near ptr 0e394b04h
push    0ffffffffh
push    offset seh_37ae1e3a
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 130h
mov     [ebp+68h], ecx
mov     eax, [ebp+78h]
sub     eax, [ebp+74h]
cdq
mov     ecx, 18h
idiv    ecx
push    eax
call    sub_37a125a0
add     esp, 4
mov     [ebp+60h], eax
mov     edx, [ebp+68h]
mov     [ebp+0ch], edx
mov     eax, [ebp+0ch]
mov     [ebp+8], eax
mov     ecx, [ebp+8]
call    @_guard_check_icall_nop@4
mov     ecx, [ebp+68h]
mov     [ebp+4], ecx
mov     edx, [ebp+4]
mov     [ebp+0], edx
mov     eax, [ebp+0]
add     eax, 4
mov     [ebp-18h], eax
mov     ecx, [ebp+68h]
mov     [ebp-10h], ecx
mov     edx, [ebp-10h]
mov     [ebp-14h], edx
mov     eax, [ebp-14h]
mov     [ebp-1ch], eax
mov     ecx, [ebp-18h]
mov     edx, [ebp-1ch]
mov     eax, [ecx]
sub     eax, [edx]
cdq
mov     ecx, 18h
idiv    ecx
mov     [ebp+18h], eax
mov     edx, [ebp+68h]
mov     [ebp-20h], edx
mov     eax, [ebp-20h]
mov     [ebp-24h], eax
mov     ecx, [ebp-24h]
add     ecx, 8
mov     [ebp-30h], ecx
mov     edx, [ebp+68h]
mov     [ebp-28h], edx
mov     eax, [ebp-28h]
mov     [ebp-2ch], eax
mov     ecx, [ebp-2ch]
mov     [ebp-34h], ecx
mov     edx, [ebp-30h]
mov     eax, [ebp-34h]
mov     ecx, [edx]
sub     ecx, [eax]
mov     eax, ecx
cdq
mov     ecx, 18h
idiv    ecx
mov     [ebp+20h], eax
mov     edx, [ebp+60h]
cmp     edx, [ebp+20h]
jbe     loc_37aa1de7
mov     eax, [ebp+68h]
mov     [ebp-38h], eax
mov     ecx, [ebp-38h]
mov     [ebp-130h], ecx
mov     dword ptr [ebp+30h], 0aaaaaaah
call    near ptr dword_37a124d0
mov     [ebp+2ch], eax
mov     edx, [ebp+30h]
cmp     edx, [ebp+2ch]
jnb     short loc_37aa1bb8
lea     eax, [ebp+30h]
mov     [ebp+28h], eax
jmp     short loc_37aa1bbe
lea     ecx, [ebp+2ch]
mov     [ebp+28h], ecx
mov     edx, [ebp+28h]
mov     [ebp-3ch], edx
mov     eax, [ebp-3ch]
mov     [ebp-40h], eax
mov     ecx, [ebp-40h]
mov     edx, [ecx]
mov     [ebp-44h], edx
mov     eax, [ebp+60h]
cmp     eax, [ebp-44h]
jbe     short loc_37aa1bdf
call    sub_37a164c0
mov     ecx, [ebp+68h]
call    sub_37aa0e37
mov     [ebp+54h], eax
mov     ecx, [ebp+68h]
call    sub_37aa12f4
mov     ecx, [ebp+54h]
shr     ecx, 1
sub     eax, ecx
cmp     [ebp+54h], eax
jbe     short loc_37aa1c06
mov     edx, [ebp+60h]
mov     [ebp+40h], edx
jmp     short loc_37aa1c27
mov     eax, [ebp+54h]
shr     eax, 1
add     eax, [ebp+54h]
mov     [ebp+24h], eax
mov     ecx, [ebp+24h]
cmp     ecx, [ebp+60h]
jnb     short loc_37aa1c21
mov     edx, [ebp+60h]
mov     [ebp+40h], edx
jmp     short loc_37aa1c27
mov     eax, [ebp+24h]
mov     [ebp+40h], eax
mov     ecx, [ebp+68h]
mov     [ebp-48h], ecx
mov     edx, [ebp-48h]
mov     [ebp-4ch], edx
mov     eax, [ebp-4ch]
mov     [ebp-50h], eax
mov     ecx, [ebp-50h]
cmp     dword ptr [ecx], 0
jz      loc_37aa1d3c
mov     edx, [ebp+68h]
mov     [ebp-54h], edx
mov     eax, [ebp-54h]
mov     [ebp-58h], eax
mov     ecx, [ebp-58h]
add     ecx, 4
mov     [ebp-64h], ecx
mov     edx, [ebp+68h]
mov     [ebp-5ch], edx
mov     eax, [ebp-5ch]
mov     [ebp-60h], eax
mov     ecx, [ebp-60h]
mov     [ebp-68h], ecx
mov     edx, [ebp-64h]
mov     eax, [edx]
mov     [ebp-74h], eax
mov     ecx, [ebp-68h]
mov     edx, [ecx]
mov     [ebp-70h], edx
mov     eax, [ebp+68h]
mov     [ebp-6ch], eax
mov     ecx, [ebp-6ch]
mov     [ebp-134h], ecx
mov     edx, [ebp-70h]
mov     [ebp+5ch], edx
jmp     short loc_37aa1c9c
mov     eax, [ebp+5ch]
add     eax, 18h
mov     [ebp+5ch], eax
mov     ecx, [ebp+5ch]
cmp     ecx, [ebp-74h]
jz      short loc_37aa1cd1
mov     dword ptr [ebp-4], 0
mov     ecx, [ebp+5ch]
call    sub_37a13cd0
mov     dword ptr [ebp-4], 0ffffffffh
xor     edx, edx
and     edx, 1
jz      short loc_37aa1ccf
push    18h
mov     eax, [ebp+5ch]
push    eax
call    sub_37ab1b25
add     esp, 8
jmp     short loc_37aa1c93
mov     ecx, [ebp+68h]
mov     [ebp-78h], ecx
mov     edx, [ebp-78h]
mov     [ebp-7ch], edx
mov     eax, [ebp-7ch]
mov     [ebp-84h], eax
mov     ecx, [ebp+68h]
mov     [ebp-80h], ecx
mov     edx, [ebp-80h]
mov     [ebp-138h], edx
mov     eax, [ebp-84h]
mov     ecx, [eax]
mov     [ebp-88h], ecx
imul    edx, [ebp+20h], 18h
mov     [ebp+44h], edx
mov     eax, [ebp-88h]
mov     [ebp+1ch], eax
cmp     dword ptr [ebp+44h], 1000h
jb      short loc_37aa1d2c
lea     ecx, [ebp+44h]
push    ecx
lea     edx, [ebp+1ch]
push    edx
call    sub_37a12570
add     esp, 8
mov     eax, [ebp+44h]
push    eax
mov     ecx, [ebp+1ch]
push    ecx
call    sub_37ab1b25
add     esp, 8
mov     edx, [ebp+40h]
push    edx
mov     ecx, [ebp+68h]
call    loc_37aa3b00
mov     eax, [ebp+68h]
mov     [ebp-8ch], eax
mov     ecx, [ebp-8ch]
mov     [ebp-90h], ecx
mov     edx, [ebp-90h]
mov     [ebp-94h], edx
mov     eax, [ebp-94h]
mov     ecx, [eax]
mov     [ebp-0a0h], ecx
mov     edx, [ebp+68h]
mov     [ebp-98h], edx
mov     eax, [ebp-98h]
mov     [ebp-9ch], eax
mov     ecx, [ebp-9ch]
push    ecx
mov     edx, [ebp-0a0h]
push    edx
mov     eax, [ebp+78h]
push    eax
mov     ecx, [ebp+74h]
push    ecx
call    loc_37aa2d60
add     esp, 10h
mov     [ebp-0b0h], eax
mov     edx, [ebp+68h]
mov     [ebp-0a4h], edx
mov     eax, [ebp-0a4h]
mov     [ebp-0a8h], eax
mov     ecx, [ebp-0a8h]
add     ecx, 4
mov     [ebp-0ach], ecx
mov     edx, [ebp-0ach]
mov     eax, [ebp-0b0h]
mov     [edx], eax
jmp     loc_37aa2098
mov     ecx, [ebp+60h]
cmp     ecx, [ebp+18h]
jbe     loc_37aa1f2a
mov     edx, [ebp+74h]
mov     [ebp+3ch], edx
imul    eax, [ebp+18h], 18h
add     eax, [ebp+3ch]
mov     [ebp+3ch], eax
mov     ecx, [ebp+3ch]
mov     [ebp+14h], ecx
mov     edx, [ebp+68h]
mov     [ebp-0b4h], edx
mov     eax, [ebp-0b4h]
mov     [ebp-0b8h], eax
mov     ecx, [ebp-0b8h]
mov     [ebp-0bch], ecx
mov     edx, [ebp-0bch]
mov     eax, [edx]
mov     [ebp-0c0h], eax
mov     ecx, [ebp+74h]
mov     [ebp-0c4h], ecx
xor     edx, edx
mov     [ebp+67h], dl
mov     al, [ebp+67h]
mov     [ebp+4bh], al
mov     ecx, [ebp-0c0h]
mov     [ebp+38h], ecx
mov     edx, [ebp-0c4h]
mov     [ebp+50h], edx
jmp     short loc_37aa1e72
mov     eax, [ebp+38h]
add     eax, 18h
mov     [ebp+38h], eax
mov     ecx, [ebp+50h]
add     ecx, 18h
mov     [ebp+50h], ecx
mov     edx, [ebp+50h]
cmp     edx, [ebp+14h]
jz      short loc_37aa1e88
mov     eax, [ebp+50h]
push    eax
mov     ecx, [ebp+38h]
call    sub_37a9ad20
jmp     short loc_37aa1e60
mov     ecx, [ebp+68h]
mov     [ebp-0c8h], ecx
mov     edx, [ebp-0c8h]
mov     [ebp-0cch], edx
mov     eax, [ebp-0cch]
add     eax, 4
mov     [ebp-0d0h], eax
mov     ecx, [ebp-0d0h]
mov     edx, [ecx]
mov     [ebp-0dch], edx
mov     eax, [ebp+68h]
mov     [ebp-0d4h], eax
mov     ecx, [ebp-0d4h]
mov     [ebp-0d8h], ecx
mov     edx, [ebp-0d8h]
push    edx
mov     eax, [ebp-0dch]
push    eax
mov     ecx, [ebp+78h]
push    ecx
mov     edx, [ebp+14h]
push    edx
call    loc_37aa2d60
add     esp, 10h
mov     [ebp-0ech], eax
mov     eax, [ebp+68h]
mov     [ebp-0e0h], eax
mov     ecx, [ebp-0e0h]
mov     [ebp-0e4h], ecx
mov     edx, [ebp-0e4h]
add     edx, 4
mov     [ebp-0e8h], edx
mov     eax, [ebp-0e8h]
mov     ecx, [ebp-0ech]
mov     [eax], ecx
jmp     loc_37aa2098
mov     edx, [ebp+68h]
mov     [ebp-0f0h], edx
mov     eax, [ebp-0f0h]
mov     [ebp-0f4h], eax
mov     ecx, [ebp-0f4h]
mov     [ebp-0f8h], ecx
imul    edx, [ebp+60h], 18h
mov     eax, [ebp-0f8h]
add     edx, [eax]
mov     [ebp+10h], edx
mov     ecx, [ebp+68h]
mov     [ebp-0fch], ecx
mov     edx, [ebp-0fch]
mov     [ebp-100h], edx
mov     eax, [ebp-100h]
mov     [ebp-104h], eax
mov     ecx, [ebp-104h]
mov     edx, [ecx]
mov     [ebp-108h], edx
mov     eax, [ebp+74h]
mov     [ebp-10ch], eax
xor     ecx, ecx
mov     [ebp+66h], cl
mov     dl, [ebp+66h]
mov     [ebp+4ah], dl
mov     eax, [ebp-108h]
mov     [ebp+34h], eax
mov     ecx, [ebp-10ch]
mov     [ebp+4ch], ecx
jmp     short loc_37aa1fc3
mov     edx, [ebp+34h]
add     edx, 18h
mov     [ebp+34h], edx
mov     eax, [ebp+4ch]
add     eax, 18h
mov     [ebp+4ch], eax
mov     ecx, [ebp+4ch]
cmp     ecx, [ebp+78h]
jz      short loc_37aa1fd9
mov     edx, [ebp+4ch]
push    edx
mov     ecx, [ebp+34h]
call    sub_37a9ad20
jmp     short loc_37aa1fb1
mov     eax, [ebp+68h]
mov     [ebp-110h], eax
mov     ecx, [ebp-110h]
mov     [ebp-114h], ecx
mov     edx, [ebp-114h]
add     edx, 4
mov     [ebp-118h], edx
mov     eax, [ebp-118h]
mov     ecx, [eax]
mov     [ebp-120h], ecx
mov     edx, [ebp+68h]
mov     [ebp-11ch], edx
mov     eax, [ebp-11ch]
mov     [ebp-13ch], eax
mov     ecx, [ebp+10h]
mov     [ebp+58h], ecx
jmp     short loc_37aa2031
mov     edx, [ebp+58h]
add     edx, 18h
mov     [ebp+58h], edx
mov     eax, [ebp+58h]
cmp     eax, [ebp-120h]
jz      short loc_37aa2069
mov     dword ptr [ebp-4], 1
mov     ecx, [ebp+58h]
call    sub_37a13cd0
mov     dword ptr [ebp-4], 0ffffffffh
xor     ecx, ecx
and     ecx, 1
jz      short loc_37aa2067
push    18h
mov     edx, [ebp+58h]
push    edx
call    sub_37ab1b25
add     esp, 8
jmp     short loc_37aa2028
mov     eax, [ebp+68h]
mov     [ebp-124h], eax
mov     ecx, [ebp-124h]
mov     [ebp-128h], ecx
mov     edx, [ebp-128h]
add     edx, 4
mov     [ebp-12ch], edx
mov     eax, [ebp-12ch]
mov     ecx, [ebp+10h]
mov     [eax], ecx
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
add     ebp, 6ch
mov     esp, ebp
pop     ebp
retn    0ch
mov     al, 0b4h
rol     ebx, cl
adc     dword ptr [edx+65h], 19h
rcl     dword ptr [eax+50c8e624h], 0a1h
push    ds
in      eax, dx
movsb
mov     al, ds:72be5e25h
dec     edx
wait
test    [edi], al
mov     cl, 0
jnz     short near ptr loc_37aa20cf+3
mov     esi, 0c3bff8c9h
dec     ecx
adc     eax, 9b4f0599h
dec     ebx
add     ebp, esi
stosb
mov     [esi+ecx*2+59h], ah
sub     dh, [esi-52fd4070h]
scasd
xor     [edx+5bh], bl
push    ebx
loopne  near ptr loc_37aa2103+2
add     [ebp+30d90851h], al
lea     eax, [esi+371afa27h]
jns     short loc_37aa2133
fsubr   dword ptr ds:0ddd7ecaeh
mov     esi, [edx-21h]
test    [edx-5d575abh], dh
out     0c3h, eax
leave
adc     eax, 0e541b992h
clc
sbb     ch, [esi]
rol     dword ptr [esi-4ah], 0c0h
xchg    eax, esp
mov     ds:1740b859h, eax
cmp     ch, dh
aas
inc     ebx
in      eax, 52h
ror     byte ptr [esi+eax*4+6dh], 0c1h
push    0ah
dec     eax
jl      short loc_37aa2115
dec     esi
hlt
call    near ptr 6504ff1bh
inc     ecx
or      ch, [ebp-0e4ea7beh]
test    edi, ecx
push    esp
retn    9bb6h
push    45h
test    ds:3763cbf7h, edi
pop     ebp
pusha
xchg    eax, esp
cmp     [esi], esi
fisttp  word ptr [edx]
retf
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dword_37ae01a8
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 28h
mov     eax, [ebp+0ch]
sub     eax, [ebp+8]
cdq
mov     ecx, 18h
idiv    ecx
mov     [ebp-14h], eax
mov     edx, [ebp-14h]
sar     edx, 1
mov     [ebp-10h], edx
cmp     dword ptr [ebp-10h], 0
jle     short loc_37aa246b
mov     eax, [ebp-10h]
sub     eax, 1
mov     [ebp-10h], eax
imul    ecx, [ebp-10h], 18h
add     ecx, [ebp+8]
mov     [ebp-18h], ecx
mov     edx, [ebp-18h]
push    edx
lea     ecx, [ebp-34h]
call    ??0?$basic_string@du?$char_traits@d@std@@v?$allocator@d@2@@std@@qae@$$qav01@@z
mov     dword ptr [ebp-4], 0
lea     eax, [ebp-34h]
mov     [ebp-1ch], eax
movzx   ecx, byte ptr [ebp+10h]
push    ecx
mov     edx, [ebp-1ch]
push    edx
mov     eax, [ebp-14h]
push    eax
mov     ecx, [ebp-10h]
push    ecx
mov     edx, [ebp+8]
push    edx
call    near ptr sub_37aa2940
add     esp, 14h
mov     dword ptr [ebp-4], 1
lea     ecx, [ebp-34h]
call    sub_37a13cd0
mov     dword ptr [ebp-4], 0ffffffffh
jmp     short loc_37aa2404
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+8]
push    eax
mov     ecx, [ebp+0ch]
call    sub_37a9c4d3
test    eax, eax
jge     short loc_37aa249f
mov     dword ptr [ebp-8], 1
jmp     short loc_37aa24a6
mov     dword ptr [ebp-8], 0
mov     cl, [ebp-8]
mov     [ebp-1], cl
movzx   edx, byte ptr [ebp-1]
test    edx, edx
jz      short loc_37aa24c0
mov     eax, [ebp+8]
push    eax
mov     ecx, [ebp+0ch]
call    sub_37aa4690
mov     ecx, [ebp+0ch]
push    ecx
mov     ecx, [ebp+10h]
call    sub_37a9c4d3
test    eax, eax
jge     short loc_37aa24d9
mov     dword ptr [ebp-0ch], 1
jmp     short loc_37aa24e0
mov     dword ptr [ebp-0ch], 0
mov     dl, [ebp-0ch]
mov     [ebp-2], dl
movzx   eax, byte ptr [ebp-2]
test    eax, eax
jz      short loc_37aa2534
mov     ecx, [ebp+0ch]
push    ecx
mov     ecx, [ebp+10h]
call    sub_37aa4690
mov     edx, [ebp+8]
push    edx
mov     ecx, [ebp+0ch]
call    sub_37a9c4d3
test    eax, eax
jge     short loc_37aa2513
mov     dword ptr [ebp-10h], 1
jmp     short loc_37aa251a
mov     dword ptr [ebp-10h], 0
mov     al, [ebp-10h]
mov     [ebp-3], al
movzx   ecx, byte ptr [ebp-3]
test    ecx, ecx
jz      short loc_37aa2534
mov     edx, [ebp+8]
push    edx
mov     ecx, [ebp+0ch]
call    sub_37aa4690
mov     esp, ebp
pop     ebp
retn
sbb     al, 0b3h
inc     ecx
dec     ebx
outsd
push    eax
cmp     [ecx+ebx+26467c4ah], dh
wait
adc     eax, 8418e901h
ja      short loc_37aa2997
or      ah, al
xor     al, 79h
aam     0bch
mov     eax, ds:24ed4ae0h
xor     [edi-20h], edi
mov     [ebp+0ch], bh
cmp     eax, 849284d5h
rcl     cl, 1
outsb
stosd
js      short loc_37aa28fe
sub     [ecx-2bh], ch
insd
js      short loc_37aa2961
sti
sbb     [ebx-8], bl
jbe     short loc_37aa2908
retf
mov     [ebp-275c19ach], dl
cli
dec     ebp
sub     edi, esp
fld     dword ptr ds:8c56e85dh
fst     dword ptr [esi]
jmp     fword ptr [ebx]
and     dl, es:[edx]
int     3
xor     al, 47h
mov     eax, [ecx+ecx-68h]
sbb     al, 94h
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, [ebp+8]
mov     [ebp-0ch], eax
mov     ecx, [ebp+0ch]
mov     [ebp-10h], ecx
mov     edx, [ebp-0ch]
cmp     edx, [ebp-10h]
jnz     short loc_37aa2bbc
jmp     short loc_37aa2c11
mov     eax, [ebp-0ch]
mov     [ebp-8], eax
mov     dword ptr [ebp-4], 1
jmp     short loc_37aa2bd4
mov     ecx, [ebp-4]
add     ecx, 1
mov     [ebp-4], ecx
mov     edx, [ebp-8]
add     edx, 18h
mov     [ebp-8], edx
mov     eax, [ebp-8]
cmp     eax, [ebp-10h]
jz      short loc_37aa2c11
mov     ecx, [ebp-4]
add     ecx, 1
push    ecx
mov     ecx, [ebp+10h]
call    sub_37aa3990
mov     [ebp-14h], eax
mov     edx, [ebp-14h]
cmp     edx, [ebp-4]
jz      short loc_37aa2c0f
imul    eax, [ebp-14h], 18h
add     eax, [ebp-0ch]
push    eax
mov     ecx, [ebp-8]
call    sub_37aa4690
jmp     short loc_37aa2bcb
mov     esp, ebp
pop     ebp
retn
imul    eax, [ebx-35h], 62665b18h
xchg    eax, ebp
push    bx
ffreep  st(5)
lodsb
inc     ecx
sahf
mov     eax, 0e8d21efah
jp      short loc_37aa2d99
fmul    st, st(2)
mov     cl, 0b7h
mov     cl, 16h
scasb
sub     dword ptr [ebx], 4bh
fldenv  byte ptr [edi]
inc     ebp
push    edx
mov     eax, ds:0d1b07680h
mov     ds:3401161ah, al
cmp     bh, [esi+392091d4h]
outsb
int     9bh
sub     eax, 293e854eh
ja      short near ptr loc_37aa2df4+1
in      al, 0f8h
mov     edx, 0fbc8996bh
xor     al, 7fh
adc     ebx, [ecx+0ah]
pop     ebx
inc     edi
insd
add     dword ptr [ecx], 913d1f99h
cmp     bl, bl
push    ebp
fldenv  byte ptr [edi]
jle     short near ptr loc_37aa2dd1+2
xchg    dh, [ebp+4e1ef4c6h]
or      al, 0eah
jp      loc_37aa2dbe
movsd
popa
jnp     short loc_37aa2d75
cli
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37ae01e1
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 14h
push    ebx
push    esi
push    edi
mov     [ebp-10h], esp
mov     eax, [ebp+10h]
mov     [ebp-20h], eax
mov     dword ptr [ebp-4], 0
jmp     short loc_37aa2e03
mov     ecx, [ebp+10h]
add     ecx, 18h
mov     [ebp+10h], ecx
mov     edx, [ebp+8]
add     edx, 18h
mov     [ebp+8], edx
mov     eax, [ebp+8]
cmp     eax, [ebp+0ch]
jz      short loc_37aa2e41
mov     ecx, [ebp+10h]
push    ecx
push    18h
call    loc_37a124e0
add     esp, 8
mov     [ebp-18h], eax
mov     byte ptr [ebp-4], 1
mov     edx, [ebp+8]
mov     [ebp-14h], edx
mov     eax, [ebp-14h]
push    eax
mov     ecx, [ebp-18h]
call    sub_37a9baf5
mov     [ebp-1ch], eax
mov     ecx, [ebp-1ch]
mov     [ebp-24h], ecx
mov     byte ptr [ebp-4], 0
jmp     short loc_37aa2df1
jmp     short loc_37aa2e66
cwde
cmp     cl, [eax+79h]
retf    468h
push    0ffffffffh
push    offset seh_37aa2e98
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
sub     esp, 138h
push    ebx
push    esi
push    edi
mov     [ebp-10h], esp
mov     [ebp+68h], ecx
mov     eax, [ebp+68h]
mov     [ebp+8], eax
mov     ecx, [ebp+8]
mov     [ebp+4], ecx
mov     edx, [ebp+4]
mov     [ebp+0], edx
mov     eax, [ebp+0]
mov     ecx, [ebp+78h]
sub     ecx, [eax]
mov     eax, ecx
cdq
mov     ecx, 18h
idiv    ecx
mov     [ebp+54h], eax
mov     edx, [ebp+68h]
mov     [ebp-14h], edx
mov     eax, [ebp-14h]
mov     [ebp-18h], eax
mov     ecx, [ebp-18h]
add     ecx, 4
mov     [ebp-1ch], ecx
mov     edx, [ebp-1ch]
mov     eax, [ebp+78h]
cmp     eax, [edx]
jnz     short loc_37aa2f09
mov     byte ptr [ebp+67h], 1
jmp     short loc_37aa2f0d
mov     byte ptr [ebp+67h], 0
mov     cl, [ebp+67h]
mov     [ebp+66h], cl
mov     edx, [ebp+68h]
mov     [ebp-20h], edx
mov     eax, [ebp-20h]
mov     [ebp-0d8h], eax
mov     ecx, [ebp+68h]
mov     [ebp-24h], ecx
mov     edx, [ebp-24h]
mov     [ebp-28h], edx
mov     eax, [ebp-28h]
add     eax, 8
mov     [ebp-34h], eax
mov     ecx, [ebp+68h]
mov     [ebp-2ch], ecx
mov     edx, [ebp-2ch]
mov     [ebp-30h], edx
mov     eax, [ebp-30h]
add     eax, 4
mov     [ebp-38h], eax
mov     ecx, [ebp-34h]
mov     edx, [ebp-38h]
mov     eax, [ecx]
cmp     eax, [edx]
jz      short loc_37aa2f61
mov     dword ptr [ebp+28h], 1
jmp     short loc_37aa2f68
mov     dword ptr [ebp+28h], 0
mov     cl, [ebp+28h]
mov     [ebp+5fh], cl
movzx   edx, byte ptr [ebp+5fh]
test    edx, edx
jnz     loc_37aa32c2
mov     eax, [ebp+68h]
mov     [ebp-3ch], eax
mov     ecx, [ebp-3ch]
mov     [ebp-40h], ecx
mov     edx, [ebp-40h]
add     edx, 4
mov     [ebp-4ch], edx
mov     eax, [ebp+68h]
mov     [ebp-44h], eax
mov     ecx, [ebp-44h]
mov     [ebp-48h], ecx
mov     edx, [ebp-48h]
mov     [ebp-50h], edx
mov     eax, [ebp-4ch]
mov     ecx, [ebp-50h]
mov     eax, [eax]
sub     eax, [ecx]
cdq
mov     ecx, 18h
idiv    ecx
mov     [ebp+18h], eax
mov     edx, [ebp+68h]
mov     [ebp-54h], edx
mov     eax, [ebp-54h]
mov     [ebp-120h], eax
mov     dword ptr [ebp+24h], 0aaaaaaah
call    near ptr dword_37a124d0
mov     [ebp+20h], eax
mov     ecx, [ebp+24h]
cmp     ecx, [ebp+20h]
jnb     short loc_37aa2fe4
lea     edx, [ebp+24h]
mov     [ebp+1ch], edx
jmp     short loc_37aa2fea
lea     eax, [ebp+20h]
mov     [ebp+1ch], eax
mov     ecx, [ebp+1ch]
mov     [ebp-58h], ecx
mov     edx, [ebp-58h]
mov     [ebp-5ch], edx
mov     eax, [ebp-5ch]
mov     ecx, [eax]
mov     [ebp-60h], ecx
mov     edx, [ebp+18h]
cmp     edx, [ebp-60h]
jnz     short loc_37aa300b
call    sub_37a164c0
mov     eax, [ebp+18h]
add     eax, 1
mov     [ebp+4ch], eax
mov     ecx, [ebp+68h]
call    sub_37aa0e37
mov     [ebp+50h], eax
mov     esi, [ebp+50h]
shr     esi, 1
mov     ecx, [ebp+68h]
call    sub_37aa12f4
sub     eax, esi
cmp     [ebp+50h], eax
jbe     short loc_37aa303b
mov     ecx, [ebp+4ch]
mov     [ebp+58h], ecx
jmp     short loc_37aa305c
mov     edx, [ebp+50h]
shr     edx, 1
add     edx, [ebp+50h]
mov     [ebp+14h], edx
mov     eax, [ebp+14h]
cmp     eax, [ebp+4ch]
jnb     short loc_37aa3056
mov     ecx, [ebp+4ch]
mov     [ebp+58h], ecx
jmp     short loc_37aa305c
mov     edx, [ebp+14h]
mov     [ebp+58h], edx
mov     eax, [ebp+68h]
mov     [ebp-64h], eax
mov     ecx, [ebp-64h]
mov     [ebp-68h], ecx
mov     edx, [ebp+58h]
push    edx
mov     ecx, [ebp-68h]
call    sub_37aa0d7c
mov     [ebp+60h], eax
imul    eax, [ebp+54h], 18h
mov     ecx, [ebp+60h]
lea     edx, [ecx+eax+18h]
mov     [ebp+10h], edx
mov     eax, [ebp+10h]
mov     [ebp+38h], eax
mov     dword ptr [ebp-4], 0
mov     ecx, [ebp+7ch]
mov     [ebp-70h], ecx
imul    edx, [ebp+54h], 18h
add     edx, [ebp+60h]
mov     [ebp-6ch], edx
mov     eax, [ebp-6ch]
push    eax
push    18h
call    loc_37a124e0
add     esp, 8
mov     [ebp-78h], eax
mov     byte ptr [ebp-4], 1
mov     ecx, [ebp-70h]
mov     [ebp-74h], ecx
mov     edx, [ebp-74h]
push    edx
mov     ecx, [ebp-78h]
call    sub_37a9baf5
mov     [ebp-7ch], eax
mov     eax, [ebp-7ch]
mov     [ebp-124h], eax
mov     byte ptr [ebp-4], 0
imul    ecx, [ebp+54h], 18h
add     ecx, [ebp+60h]
mov     [ebp+38h], ecx
movzx   edx, byte ptr [ebp+66h]
test    edx, edx
jz      loc_37aa3190
mov     eax, [ebp+68h]
mov     [ebp-80h], eax
mov     ecx, [ebp-80h]
mov     [ebp-84h], ecx
mov     edx, [ebp-84h]
add     edx, 4
mov     [ebp-90h], edx
mov     eax, [ebp+68h]
mov     [ebp-88h], eax
mov     ecx, [ebp-88h]
mov     [ebp-8ch], ecx
mov     edx, [ebp-8ch]
mov     [ebp-94h], edx
mov     eax, [ebp-90h]
mov     ecx, [eax]
mov     [ebp-0a0h], ecx
mov     edx, [ebp-94h]
mov     eax, [edx]
mov     [ebp-0a4h], eax
xor     ecx, ecx
mov     [ebp+5eh], cl
mov     dl, [ebp+5eh]
mov     [ebp+40h], dl
mov     eax, [ebp+68h]
mov     [ebp-98h], eax
mov     ecx, [ebp-98h]
mov     [ebp-9ch], ecx
mov     edx, [ebp-9ch]
push    edx
mov     eax, [ebp+60h]
push    eax
mov     ecx, [ebp-0a0h]
push    ecx
mov     edx, [ebp-0a4h]
push    edx
call    sub_37a9faec
add     esp, 10h
jmp     loc_37aa3265
mov     eax, [ebp+68h]
mov     [ebp-0a8h], eax
mov     ecx, [ebp-0a8h]
mov     [ebp-0ach], ecx
mov     edx, [ebp-0ach]
mov     [ebp-0b0h], edx
mov     eax, [ebp-0b0h]
mov     ecx, [eax]
mov     [ebp-0bch], ecx
mov     edx, [ebp+68h]
mov     [ebp-0b4h], edx
mov     eax, [ebp-0b4h]
mov     [ebp-0b8h], eax
mov     ecx, [ebp-0b8h]
push    ecx
mov     edx, [ebp+60h]
push    edx
mov     eax, [ebp+78h]
push    eax
mov     ecx, [ebp-0bch]
push    ecx
call    sub_37a9faec
add     esp, 10h
mov     edx, [ebp+60h]
mov     [ebp+38h], edx
mov     eax, [ebp+68h]
mov     [ebp-0c0h], eax
mov     ecx, [ebp-0c0h]
mov     [ebp-0c4h], ecx
mov     edx, [ebp-0c4h]
add     edx, 4
mov     [ebp-0c8h], edx
mov     eax, [ebp-0c8h]
mov     ecx, [eax]
mov     [ebp-0d4h], ecx
mov     edx, [ebp+68h]
mov     [ebp-0cch], edx
mov     eax, [ebp-0cch]
mov     [ebp-0d0h], eax
mov     ecx, [ebp-0d0h]
push    ecx
imul    edx, [ebp+54h], 18h
mov     eax, [ebp+60h]
lea     ecx, [eax+edx+18h]
push    ecx
mov     edx, [ebp-0d4h]
push    edx
mov     eax, [ebp+78h]
push    eax
call    sub_37a9faec
add     esp, 10h
jmp     short loc_37aa3299
mov     ecx, [ebp+10h]
push    ecx
mov     edx, [ebp+38h]
push    edx
mov     ecx, [ebp+68h]
call    sub_37a9c1f9
mov     eax, [ebp+58h]
push    eax
mov     ecx, [ebp+60h]
push    ecx
mov     ecx, [ebp-0d8h]
call    sub_37a9b275
push    0
push    0
call    __cxxthrowexception@8
mov     eax, offset loc_37aa32a2
retn
mov     dword ptr [ebp-4], 0ffffffffh
jmp     short loc_37aa32a9
mov     dword ptr [ebp-4], 0ffffffffh
mov     edx, [ebp+58h]
push    edx
mov     eax, [ebp+4ch]
push    eax
mov     ecx, [ebp+60h]
push    ecx
mov     ecx, [ebp+68h]
call    sub_37a9ae05
jmp     loc_37aa348e
movzx   edx, byte ptr [ebp+66h]
test    edx, edx
jz      short loc_37aa32e7
mov     eax, [ebp+7ch]
mov     [ebp-0dch], eax
mov     ecx, [ebp-0dch]
push    ecx
mov     ecx, [ebp+68h]
call    loc_37aa20b0
jmp     loc_37aa348e
mov     edx, [ebp+7ch]
mov     [ebp+0ch], edx
mov     eax, [ebp+0ch]
mov     [ebp-0e0h], eax
mov     ecx, [ebp-0e0h]
mov     [ebp-128h], ecx
lea     edx, [ebp+3fh]
mov     [ebp-0e4h], edx
mov     eax, [ebp-0e4h]
push    eax
movzx   ecx, byte ptr [ebp+3eh]
push    ecx
lea     ecx, [ebp-148h]
call    sub_37aa19a0
mov     dword ptr [ebp-4], 3
mov     edx, [ebp+0ch]
push    edx
lea     ecx, [ebp-148h]
call    loc_37a9ae8d
mov     dword ptr [ebp-4], 0ffffffffh
mov     eax, [ebp+68h]
mov     [ebp-0e8h], eax
mov     ecx, [ebp-0e8h]
mov     [ebp-0ech], ecx
mov     edx, [ebp-0ech]
add     edx, 4
mov     [ebp-0f0h], edx
mov     eax, [ebp-0f0h]
mov     ecx, [eax]
mov     [ebp+48h], ecx
mov     edx, 18h
imul    eax, edx, -1
add     eax, [ebp+48h]
mov     [ebp-0f4h], eax
mov     ecx, [ebp+48h]
push    ecx
push    18h
call    loc_37a124e0
add     esp, 8
mov     [ebp-0fch], eax
mov     edx, [ebp-0f4h]
mov     [ebp-0f8h], edx
mov     eax, [ebp-0f8h]
push    eax
mov     ecx, [ebp-0fch]
call    ??0?$basic_string@du?$char_traits@d@std@@v?$allocator@d@2@@std@@qae@$$qav01@@z
mov     ecx, [ebp-12ch]
mov     [ebp+34h], ecx
mov     edx, [ebp+68h]
mov     [ebp-100h], edx
mov     eax, [ebp-100h]
mov     [ebp-104h], eax
mov     ecx, [ebp-104h]
add     ecx, 4
mov     [ebp+34h], ecx
mov     edx, [ebp+34h]
mov     eax, [edx]
add     eax, 18h
mov     ecx, [ebp+34h]
mov     [ecx], eax
mov     edx, [ebp+48h]
mov     [ebp-108h], edx
mov     eax, [ebp+78h]
mov     [ebp-10ch], eax
xor     ecx, ecx
mov     [ebp+5dh], cl
mov     dl, [ebp+5dh]
mov     [ebp+3dh], dl
mov     eax, [ebp-108h]
mov     [ebp+30h], eax
mov     ecx, [ebp+48h]
sub     ecx, 18h
mov     [ebp+44h], ecx
mov     edx, [ebp-10ch]
mov     [ebp-110h], edx
mov     eax, [ebp-110h]
cmp     eax, [ebp+44h]
jz      short loc_37aa345a
mov     ecx, [ebp+44h]
sub     ecx, 18h
mov     [ebp+44h], ecx
mov     edx, [ebp+30h]
sub     edx, 18h
mov     [ebp+30h], edx
mov     eax, [ebp+44h]
mov     [ebp-114h], eax
mov     ecx, [ebp-114h]
push    ecx
mov     ecx, [ebp+30h]
call    loc_37a9aceb
jmp     short loc_37aa3423
lea     edx, [ebp-148h]
mov     [ebp-118h], edx
mov     eax, [ebp-118h]
push    eax
mov     ecx, [ebp+78h]
call    loc_37a9aceb
mov     dword ptr [ebp-4], 4
lea     ecx, [ebp-148h]
call    sub_37a13cd0
mov     dword ptr [ebp-4], 0ffffffffh
lea     ecx, [ebp-130h]
push    ecx
mov     ecx, [ebp+68h]
call    sub_37aa4020
mov     [ebp-11ch], eax
mov     edx, [ebp-11ch]
mov     eax, [edx]
mov     [ebp+2ch], eax
imul    ecx, [ebp+54h], 18h
add     ecx, [ebp+2ch]
mov     [ebp+2ch], ecx
mov     edx, [ebp+2ch]
mov     eax, [ebp+74h]
mov     [eax], edx
mov     eax, [ebp+74h]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
pop     edi
pop     esi
pop     ebx
add     ebp, 6ch
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+8]
mov     [ebp-0ch], eax
mov     ecx, [ebp+0ch]
mov     [ebp-8], ecx
mov     dl, [ebp+10h]
mov     [ebp-1], dl
movzx   eax, byte ptr [ebp-1]
push    eax
mov     eax, [ebp-8]
sub     eax, [ebp-0ch]
cdq
mov     ecx, 18h
idiv    ecx
push    eax
mov     edx, [ebp-8]
push    edx
mov     eax, [ebp-0ch]
push    eax
call    loc_37aa2c20
add     esp, 10h
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, [ebp+0ch]
mov     [ebp-8], eax
mov     ecx, [ebp+10h]
mov     [ebp-10h], ecx
mov     edx, [ebp-8]
cmp     edx, [ebp-10h]
jz      loc_37aa35da
mov     eax, [ebp-8]
mov     [ebp-0ch], eax
jmp     short loc_37aa354c
mov     ecx, [ebp-8]
mov     [ebp-0ch], ecx
mov     edx, [ebp-8]
add     edx, 18h
mov     [ebp-8], edx
mov     eax, [ebp-8]
cmp     eax, [ebp-10h]
jz      short loc_37aa35da
mov     ecx, [ebp-8]
push    ecx
mov     ecx, [ebp-0ch]
call    loc_37aa3ce0
mov     [ebp-1], al
movzx   edx, byte ptr [ebp-1]
test    edx, edx
jz      short loc_37aa35d5
mov     eax, [ebp-8]
add     eax, 18h
mov     [ebp-8], eax
mov     ecx, [ebp-8]
cmp     ecx, [ebp-10h]
jz      short loc_37aa35b9
mov     edx, [ebp-8]
push    edx
mov     ecx, [ebp-0ch]
call    loc_37aa3ce0
mov     [ebp-2], al
movzx   eax, byte ptr [ebp-2]
test    eax, eax
jnz     short loc_37aa35b7
mov     ecx, [ebp-0ch]
add     ecx, 18h
mov     [ebp-0ch], ecx
mov     edx, [ebp-8]
mov     [ebp-14h], edx
mov     eax, [ebp-14h]
push    eax
mov     ecx, [ebp-0ch]
call    loc_37a9aceb
jmp     short loc_37aa3574
mov     ecx, [ebp-0ch]
add     ecx, 18h
mov     [ebp-0ch], ecx
mov     edx, [ebp-0ch]
mov     [ebp+10h], edx
mov     eax, [ebp+10h]
mov     ecx, [ebp+8]
mov     [ecx], eax
mov     eax, [ebp+8]
jmp     short loc_37aa35eb
jmp     loc_37aa3546
mov     edx, [ebp-10h]
mov     [ebp+10h], edx
mov     eax, [ebp+10h]
mov     ecx, [ebp+8]
mov     [ecx], eax
mov     eax, [ebp+8]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     ecx, [ebp+8]
mov     [eax], ecx
mov     edx, [ebp-4]
mov     dword ptr [edx+4], 20h
mov     eax, [ebp-4]
mov     dword ptr [eax+8], 0ffffffffh
jmp     short loc_37aa3623
mov     ecx, [ebp-4]
mov     edx, [ecx+8]
shr     edx, 1
mov     eax, [ebp-4]
mov     [eax+8], edx
or      ecx, 0ffffffffh
mov     edx, [ebp-4]
cmp     ecx, [edx+8]
jnb     short loc_37aa363f
mov     eax, [ebp-4]
mov     ecx, [eax+4]
sub     ecx, 1
mov     edx, [ebp-4]
mov     [edx+4], ecx
jmp     short loc_37aa3615
mov     eax, [ebp-4]
mov     esp, ebp
pop     ebp
retn    4
setalc
cli
adc     cl, ah
push    ss
mov     ds:0d0a5e339h, al
retf
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aa3820
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
mov     [ebp+var_10], ecx
mov     [ebp+var_4], 0
mov     ecx, [ebp+var_10]
add     ecx, 48h
call    sub_37a13cd0
mov     [ebp+var_4], 1
mov     ecx, [ebp+var_10]
add     ecx, 30h
call    sub_37a13cd0
mov     [ebp+var_4], 2
mov     ecx, [ebp+var_10]
add     ecx, 18h
call    sub_37a13cd0
mov     [ebp+var_4], 3
mov     ecx, [ebp+var_10]
call    sub_37a13cd0
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp+var_c], ecx
mov     [ebp+var_8], 0
mov     [ebp+var_4], 0
mov     eax, [ebp+arg_0]
sub     eax, 1
cmp     [ebp+var_4], eax
jnb     short loc_37aa3a1d
mov     ecx, [ebp+var_c]
mov     ecx, [ecx+4]
sub     ecx, 1
mov     edx, [ebp+var_8]
shl     edx, cl
mov     [ebp+var_8], edx
mov     eax, [ebp+var_8]
shl     eax, 1
mov     [ebp+var_8], eax
mov     ecx, [ebp+var_c]
mov     ecx, [ecx]
call    sub_37aa3a60
mov     [ebp+var_10], eax
mov     edx, [ebp+var_c]
mov     eax, [ebp+var_10]
cmp     eax, [edx+8]
ja      short loc_37aa39eb
mov     ecx, [ebp+var_10]
mov     [ebp+var_14], ecx
jmp     short loc_37aa39ed
jmp     short loc_37aa39cb
mov     edx, [ebp+var_8]
or      edx, [ebp+var_14]
mov     [ebp+var_8], edx
mov     eax, [ebp+var_c]
mov     ecx, [eax+4]
sub     ecx, 1
mov     edx, [ebp+var_4]
shl     edx, cl
mov     [ebp+var_4], edx
mov     eax, [ebp+var_4]
shl     eax, 1
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_c]
mov     edx, [ebp+var_4]
or      edx, [ecx+8]
mov     [ebp+var_4], edx
jmp     short loc_37aa39a7
mov     eax, [ebp+var_8]
xor     edx, edx
div     [ebp+arg_0]
mov     ecx, eax
mov     eax, [ebp+var_4]
xor     edx, edx
div     [ebp+arg_0]
cmp     ecx, eax
jb      short loc_37aa3a45
mov     eax, [ebp+var_4]
xor     edx, edx
div     [ebp+arg_0]
mov     eax, [ebp+arg_0]
sub     eax, 1
cmp     edx, eax
jnz     short loc_37aa3a51
mov     eax, [ebp+var_8]
xor     edx, edx
div     [ebp+arg_0]
mov     eax, edx
jmp     short loc_37aa3a56
jmp     loc_37aa3999
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
mov     [ebp+var_8], ecx
mov     eax, [ebp+var_8]
cmp     dword ptr [eax], 270h
jnz     short loc_37aa3a7e
mov     ecx, [ebp+var_8]
call    sub_37aa3f30
jmp     short loc_37aa3a91
mov     ecx, [ebp+var_8]
cmp     dword ptr [ecx], 4e0h
jb      short loc_37aa3a91
mov     ecx, [ebp+var_8]
call    sub_37aa3db0
mov     edx, [ebp+var_8]
mov     eax, [edx]
mov     ecx, [ebp+var_8]
mov     edx, [ecx+eax*4+4]
mov     [ebp+var_4], edx
mov     eax, [ebp+var_8]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_8]
mov     [edx], ecx
mov     eax, [ebp+var_4]
shr     eax, 0bh
mov     ecx, [ebp+var_8]
and     eax, [ecx+1384h]
xor     eax, [ebp+var_4]
mov     [ebp+var_4], eax
mov     edx, [ebp+var_4]
shl     edx, 7
and     edx, 9d2c5680h
xor     edx, [ebp+var_4]
mov     [ebp+var_4], edx
mov     eax, [ebp+var_4]
shl     eax, 0fh
and     eax, 0efc60000h
xor     eax, [ebp+var_4]
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_4]
shr     ecx, 12h
xor     ecx, [ebp+var_4]
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn
and     ebp, [esi+7]
sar     esp, 0bfh
stosb
or      dh, dh
mov     ah, 36h
or      al, 18h
out     0c5h, al
push    cs
lodsb
int     8ch
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     [ebp+var_14], ecx
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     ecx, [ebp+var_18]
mov     [ebp+var_8], ecx
mov     [ebp+var_1], 0
mov     edx, [ebp+var_8]
mov     eax, [ebp+arg_0]
mov     [edx+10h], eax
mov     ecx, [ebp+var_8]
mov     [ebp+var_10], ecx
mov     edx, [ebp+var_8]
cmp     dword ptr [edx+14h], 10h
jb      short loc_37aa3caa
mov     [ebp+var_c], 1
jmp     short loc_37aa3cb1
mov     [ebp+var_c], 0
movzx   eax, byte ptr [ebp+var_c]
test    eax, eax
jz      short loc_37aa3cc1
mov     ecx, [ebp+var_8]
mov     edx, [ecx]
mov     [ebp+var_10], edx
lea     eax, [ebp+var_1]
push    eax
mov     ecx, [ebp+var_10]
add     ecx, [ebp+arg_0]
push    ecx
call    sub_37a12550
add     esp, 8
mov     esp, ebp
pop     ebp
retn    4
inc     edi
jno     short near ptr loc_37aa3ce3+3
or      ebp, [edi+edi+76h]
lahf
cmp     ebx, eax
not     byte ptr [edx+esi*2]
out     8bh, al
pop     esp
xchg    eax, esi
sbb     eax, 9abbf5a9h
dec     ebp
scas    dword ptr es:[edi]
pop     ebp
mov     ebx, 6fad51f1h
loope   loc_37aa3d3e
sub     [edi-458d52fah], al
rcl     dword ptr [edx-372e2b3h], 93h
pop     ebx
stc
jnb     short loc_37aa3d37
jp      short near ptr loc_37aa3d5f+1
rol     byte ptr [edi-77fb516h], 1
cwde
adc     dl, [ebx]
aaa
jz      short loc_37aa3cd1
mov     ch, 31h
not     byte ptr [edx-375e0a2ah]
push    6e431388h
rol     byte ptr [edx+0d6d519ah], 1
or      eax, 0da4a8e00h
xchg    eax, ecx
add     al, 2
test    al, 0ah
les     esi, [ebp+2b4986a3h]
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     [ebp+var_8], ecx
mov     [ebp+var_4], 0
jmp     short loc_37aa3dcb
mov     eax, [ebp+var_4]
add     eax, 1
mov     [ebp+var_4], eax
cmp     [ebp+var_4], 0e3h
jge     short loc_37aa3e37
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     eax, [edx+ecx*4+9c4h]
and     eax, 80000000h
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     ecx, [edx+ecx*4+9c8h]
and     ecx, 7fffffffh
or      eax, ecx
mov     [ebp+var_c], eax
mov     edx, [ebp+var_c]
and     edx, 1
jz      short loc_37aa3e0f
mov     [ebp+var_10], 9908b0dfh
jmp     short loc_37aa3e16
mov     [ebp+var_10], 0
mov     eax, [ebp+var_c]
shr     eax, 1
xor     eax, [ebp+var_10]
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
xor     eax, [edx+ecx*4+0ff8h]
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     [edx+ecx*4+4], eax
jmp     short loc_37aa3dc2
jmp     short loc_37aa3e42
mov     eax, [ebp+var_4]
add     eax, 1
mov     [ebp+var_4], eax
cmp     [ebp+var_4], 26fh
jge     short loc_37aa3eae
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     eax, [edx+ecx*4+9c4h]
and     eax, 80000000h
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     ecx, [edx+ecx*4+9c8h]
and     ecx, 7fffffffh
or      eax, ecx
mov     [ebp+var_14], eax
mov     edx, [ebp+var_14]
and     edx, 1
jz      short loc_37aa3e86
mov     [ebp+var_18], 9908b0dfh
jmp     short loc_37aa3e8d
mov     [ebp+var_18], 0
mov     eax, [ebp+var_14]
shr     eax, 1
xor     eax, [ebp+var_18]
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
xor     eax, [edx+ecx*4-388h]
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     [edx+ecx*4+4], eax
jmp     short loc_37aa3e39
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_8]
mov     edx, [ecx+eax*4+9c4h]
and     edx, 80000000h
mov     eax, 4
imul    ecx, eax, 0
mov     eax, [ebp+var_8]
mov     ecx, [eax+ecx+4]
and     ecx, 7fffffffh
or      edx, ecx
mov     [ebp+var_1c], edx
mov     edx, [ebp+var_1c]
and     edx, 1
jz      short loc_37aa3eec
mov     [ebp+var_20], 9908b0dfh
jmp     short loc_37aa3ef3
mov     [ebp+var_20], 0
mov     eax, [ebp+var_1c]
shr     eax, 1
xor     eax, [ebp+var_20]
mov     ecx, 4
imul    edx, ecx, 18ch
mov     ecx, [ebp+var_8]
xor     eax, [ecx+edx+4]
mov     edx, [ebp+var_4]
mov     ecx, [ebp+var_8]
mov     [ecx+edx*4+4], eax
mov     edx, [ebp+var_8]
mov     dword ptr [edx], 0
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp+var_8], ecx
mov     [ebp+var_4], 270h
jmp     short loc_37aa3f4b
mov     eax, [ebp+var_4]
add     eax, 1
mov     [ebp+var_4], eax
cmp     [ebp+var_4], 4e0h
jge     short loc_37aa3fb7
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     eax, [edx+ecx*4-9bch]
and     eax, 80000000h
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     ecx, [edx+ecx*4-9b8h]
and     ecx, 7fffffffh
or      eax, ecx
mov     [ebp+var_c], eax
mov     edx, [ebp+var_c]
and     edx, 1
jz      short loc_37aa3f8f
mov     [ebp+var_10], 9908b0dfh
jmp     short loc_37aa3f96
mov     [ebp+var_10], 0
mov     eax, [ebp+var_c]
shr     eax, 1
xor     eax, [ebp+var_10]
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
xor     eax, [edx+ecx*4-388h]
mov     ecx, [ebp+var_4]
mov     edx, [ebp+var_8]
mov     [edx+ecx*4+4], eax
jmp     short loc_37aa3f42
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
mov     ecx, [ebp+var_8]
mov     [ebp+var_c], ecx
mov     edx, [ebp+var_c]
mov     [ebp+var_20], edx
mov     eax, [ebp+var_4]
mov     [ebp+var_10], eax
mov     ecx, [ebp+var_10]
mov     [ebp+var_14], ecx
mov     edx, [ebp+var_14]
mov     [ebp+var_18], edx
mov     eax, [ebp+var_18]
mov     ecx, [eax]
mov     [ebp+var_1c], ecx
mov     edx, [ebp+arg_0]
mov     eax, [ebp+var_1c]
mov     [edx], eax
mov     ecx, [ebp+var_20]
push    ecx
mov     ecx, [ebp+arg_0]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    4
mov     eax, dword_37b7333c
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     [ebp-8], eax
mov     ecx, [ebp-8]
mov     [ebp-0ch], ecx
mov     edx, [ebp-0ch]
mov     [ebp-20h], edx
mov     eax, [ebp-4]
mov     [ebp-10h], eax
mov     ecx, [ebp-10h]
mov     [ebp-14h], ecx
mov     edx, [ebp-14h]
add     edx, 4
mov     [ebp-18h], edx
mov     eax, [ebp-18h]
mov     ecx, [eax]
mov     [ebp-1ch], ecx
mov     edx, [ebp+8]
mov     eax, [ebp-1ch]
mov     [edx], eax
mov     ecx, [ebp-20h]
push    ecx
mov     ecx, [ebp+8]
call    nullsub_2
mov     eax, [ebp+8]
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [esp+arg_0]
mov     cl, [eax]
mov     eax, [esp+arg_4]
cmp     cl, [eax]
setz    al
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aed7c1
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 70h
mov     [ebp+var_14], ecx
mov     eax, [ebp+arg_4]
cmp     eax, [ebp+arg_8]
jz      loc_37aa4241
mov     ecx, [ebp+var_14]
mov     [ebp+var_28], ecx
mov     edx, [ebp+var_28]
mov     [ebp+var_2c], edx
mov     eax, [ebp+var_2c]
add     eax, 4
mov     [ebp+var_78], eax
mov     ecx, [ebp+var_14]
mov     [ebp+var_30], ecx
mov     edx, [ebp+var_30]
mov     [ebp+var_34], edx
mov     eax, [ebp+var_34]
add     eax, 4
mov     [ebp+var_38], eax
mov     ecx, [ebp+arg_4]
mov     [ebp+var_3c], ecx
mov     edx, [ebp+var_38]
mov     eax, [edx]
mov     [ebp+var_44], eax
mov     ecx, [ebp+arg_8]
mov     [ebp+var_40], ecx
xor     edx, edx
mov     [ebp+var_d], dl
mov     al, [ebp+var_d]
mov     [ebp+var_e], al
mov     ecx, [ebp+var_3c]
mov     [ebp+var_20], ecx
mov     edx, [ebp+var_40]
mov     [ebp+var_1c], edx
jmp     short loc_37aa4193
mov     eax, [ebp+var_20]
add     eax, 18h
mov     [ebp+var_20], eax
mov     ecx, [ebp+var_1c]
add     ecx, 18h
mov     [ebp+var_1c], ecx
mov     edx, [ebp+var_1c]
cmp     edx, [ebp+var_44]
jz      short loc_37aa41af
mov     eax, [ebp+var_1c]
mov     [ebp+var_48], eax
mov     ecx, [ebp+var_48]
push    ecx
mov     ecx, [ebp+var_20]
call    loc_37a9aceb
jmp     short loc_37aa4181
mov     edx, [ebp+var_20]
mov     [ebp+var_24], edx
mov     eax, [ebp+var_14]
mov     [ebp+var_4c], eax
mov     ecx, [ebp+var_4c]
mov     [ebp+var_50], ecx
mov     edx, [ebp+var_50]
add     edx, 4
mov     [ebp+var_54], edx
mov     eax, [ebp+var_54]
mov     ecx, [eax]
mov     [ebp+var_5c], ecx
mov     edx, [ebp+var_14]
mov     [ebp+var_58], edx
mov     eax, [ebp+var_58]
mov     [ebp+var_7c], eax
mov     ecx, [ebp+var_24]
mov     [ebp+block], ecx
jmp     short loc_37aa41ef
mov     edx, [ebp+block]
add     edx, 18h
mov     [ebp+block], edx
mov     eax, [ebp+block]
cmp     eax, [ebp+var_5c]
jz      short loc_37aa4224
mov     [ebp+var_4], 0
mov     ecx, [ebp+block]
call    sub_37a13cd0
mov     [ebp+var_4], 0ffffffffh
xor     ecx, ecx
and     ecx, 1
jz      short loc_37aa4222
push    18h
mov     edx, [ebp+block]
push    edx
call    sub_37ab1b25
add     esp, 8
jmp     short loc_37aa41e6
mov     eax, [ebp+var_14]
mov     [ebp+var_60], eax
mov     ecx, [ebp+var_60]
mov     [ebp+var_64], ecx
mov     edx, [ebp+var_64]
add     edx, 4
mov     [ebp+var_68], edx
mov     eax, [ebp+var_68]
mov     ecx, [ebp+var_24]
mov     [eax], ecx
mov     edx, [ebp+var_14]
mov     [ebp+var_6c], edx
mov     eax, [ebp+var_6c]
mov     [ebp+var_70], eax
mov     ecx, [ebp+var_70]
mov     [ebp+var_74], ecx
mov     edx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     [edx], eax
mov     ecx, [ebp+var_74]
push    ecx
mov     ecx, [ebp+arg_0]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     [ebp-20h], ecx
mov     eax, [ebp-20h]
mov     [ebp-24h], eax
mov     ecx, [ebp-24h]
mov     [ebp-8], ecx
mov     edx, [ebp-8]
mov     [ebp-0ch], edx
mov     eax, [ebp-8]
cmp     dword ptr [eax+14h], 10h
jb      short loc_37aa42ad
mov     dword ptr [ebp-10h], 1
jmp     short loc_37aa42b4
mov     dword ptr [ebp-10h], 0
movzx   ecx, byte ptr [ebp-10h]
test    ecx, ecx
jz      short loc_37aa42c4
mov     edx, [ebp-8]
mov     eax, [edx]
mov     [ebp-0ch], eax
mov     cl, [ebp+8]
mov     [ebp-4], cl
mov     edx, [ebp-8]
mov     eax, [edx+10h]
mov     [ebp-14h], eax
mov     ecx, [ebp+0ch]
cmp     ecx, [ebp-14h]
jnb     short loc_37aa4309
lea     edx, [ebp-4]
push    edx
mov     eax, [ebp-14h]
sub     eax, [ebp+0ch]
push    eax
mov     ecx, [ebp-0ch]
add     ecx, [ebp+0ch]
push    ecx
call    loc_37aa4320
add     esp, 0ch
mov     [ebp-18h], eax
cmp     dword ptr [ebp-18h], 0
jz      short loc_37aa4309
mov     edx, [ebp-18h]
sub     edx, [ebp-0ch]
mov     [ebp-1ch], edx
jmp     short loc_37aa4310
mov     dword ptr [ebp-1ch], 0ffffffffh
mov     eax, [ebp-1ch]
mov     esp, ebp
pop     ebp
retn    8
ror     dword ptr [ecx], 68h
or      ds:47e5ceadh, esp
int     0e5h
sub     al, [ebx+8]
fdiv    dword ptr [ebp+303554dch]
add     dh, 65h
loop    near ptr loc_37aa4335+1
cwde
pop     edx
dec     esi
mov     bl, [ebx+5c5d0794h]
ficomp  word ptr [edi-3bh]
out     19h, al
sal     byte ptr [eax+esi*2], 0ddh
jnb     short near ptr loc_37aa43ce+1
repne push edx
jnz     short loc_37aa4368
inc     ebx
xor     eax, [ebp+esi*8+10d8223bh]
imul    ebx, [edx], -70h
dec     edx
into
mov     ebx, 120bab45h
push    esi
sbb     al, 8
mov     eax, [esi+4951f51dh]
pop     ss
inc     esi
sub     [ebp-25h], esi
or      al, 2dh
adc     [ecx-19ccb94dh], ah
mov     ecx, 0cc724bc7h
jnz     short loc_37aa4349
and     eax, 2fa61158h
scasd
xlat
in      eax, 3ch
jmp     near ptr 0f1f35282h
jbe     short loc_37aa435b
call    far ptr 2e83h:0e49b5e80h
in      eax, 68h
push    ebx
cmp     ebx, [ebx+2ec9ab34h]
mov     al, ds:7ee8c5e6h
push    0c162fa31h
push    0e3181bd3h
push    esi
jo      short near ptr loc_37aa4445+2
jbe     short near ptr loc_37aa441d+2
mov     ch, [ebp-77ea3fb0h]
cmp     al, 28h
dec     ebx
inc     ecx
std
pop     edx
add     dword ptr [edi], 5ah
insb
jp      short loc_37aa43a9
xchg    eax, ebx
pop     ecx
cmp     al, 9bh
sub     bh, 0f2h
cmp     [edx+64h], dh
dec     eax
jnp     short loc_37aa43cc
sub     [ecx], bh
mov     edi, 15c1d3d4h
xchg    eax, ecx
mov     edi, 0f56a19f7h
xchg    edx, [edx-5ch]
cmp     [edx+2ah], ebp
push    ss
sti
add     [ecx+6eh], esp
or      [ebx+3e163532h], esp
dec     esi
sub     [esp+ebp*2-73e3f7d3h], edi
stosb
mov     eax, 6e344cb6h
mov     ebp, 3aaf7523h
mov     ebx, 0fc6bb5bch
sub     [ecx+esi-58h], bh
outsd
stosd
call    near ptr 6af54c30h
ja      short loc_37aa4414
mov     ebx, 43dd946eh
cmp     esp, [ecx+28c2162ch]
adc     eax, 5776ec86h
loopne  loc_37aa43ef
sub     al, 6ah
enter   52f2h, 0c6h
sahf
jnb     short near ptr loc_37aa444e+2
cmp     dl, bl
sub     al, 0d1h
in      eax, dx
arpl    [ecx+ecx], dx
retf    16d7h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aed7c1
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 2ch
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     [ebp+var_1c], eax
mov     ecx, [ebp+var_1c]
mov     [ebp+var_20], ecx
mov     edx, [ebp+var_20]
add     edx, 4
mov     [ebp+var_24], edx
mov     eax, [ebp+var_24]
mov     ecx, [eax]
sub     ecx, 18h
mov     [ebp+block], ecx
mov     edx, [ebp+var_10]
mov     [ebp+var_28], edx
mov     eax, [ebp+var_28]
mov     [ebp+var_34], eax
mov     [ebp+var_4], 0
mov     ecx, [ebp+block]
call    sub_37a13cd0
mov     [ebp+var_4], 0ffffffffh
xor     ecx, ecx
and     ecx, 1
jz      short loc_37aa44e5
push    18h
mov     edx, [ebp+block]
push    edx
call    sub_37ab1b25
add     esp, 8
mov     eax, [ebp+var_38]
mov     [ebp+var_14], eax
mov     ecx, [ebp+var_10]
mov     [ebp+var_2c], ecx
mov     edx, [ebp+var_2c]
mov     [ebp+var_30], edx
mov     eax, [ebp+var_30]
add     eax, 4
mov     [ebp+var_14], eax
mov     ecx, [ebp+var_14]
mov     edx, [ecx]
sub     edx, 18h
mov     eax, [ebp+var_14]
mov     [eax], edx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp-0ch], ecx
mov     eax, 4
imul    ecx, eax, 0
mov     edx, [ebp-0ch]
mov     eax, [ebp+8]
mov     [edx+ecx+4], eax
mov     ecx, [ebp+8]
mov     [ebp-8], ecx
mov     dword ptr [ebp-4], 1
jmp     short loc_37aa4553
mov     edx, [ebp-4]
add     edx, 1
mov     [ebp-4], edx
cmp     dword ptr [ebp-4], 270h
jge     short loc_37aa4586
mov     eax, [ebp-8]
shr     eax, 1eh
xor     eax, [ebp-8]
imul    eax, [ebp+0ch]
mov     ecx, [ebp-4]
add     ecx, eax
mov     [ebp-10h], ecx
mov     edx, [ebp-4]
mov     eax, [ebp-0ch]
mov     ecx, [ebp-10h]
mov     [eax+edx*4+4], ecx
mov     edx, [ebp-10h]
mov     [ebp-8], edx
jmp     short loc_37aa454a
mov     eax, [ebp-0ch]
mov     dword ptr [eax], 270h
mov     esp, ebp
pop     ebp
retn    8
int     3
inc     ecx
aad     7
jnz     short loc_37aa466f
iret
call    near ptr 0fa0a8e33h
add     esi, [ebx-5a2efdd8h]
or      [esi], eax
pop     esp
jmp     eax
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_4]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     eax, [eax+10h]
mov     [ebp+var_c], eax
push    [ebp+var_c]
mov     ecx, [ebp+arg_4]
call    sub_37aa583b
push    eax
push    [ebp+arg_0]
call    loc_37aa1570
add     esp, 0ch
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset word_37ae092a
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 34h
and     dword ptr [ebp-10h], 0
lea     ecx, [ebp-40h]
call    sub_37a9bb65
and     dword ptr [ebp-4], 0
mov     eax, [ebp+0ch]
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
mov     [ebp-18h], eax
mov     eax, [ebp-18h]
mov     eax, [eax+10h]
mov     [ebp-24h], eax
mov     eax, [ebp+10h]
mov     [ebp-1ch], eax
mov     eax, [ebp-1ch]
mov     [ebp-20h], eax
mov     eax, [ebp-20h]
mov     eax, [eax+10h]
mov     [ebp-28h], eax
mov     eax, [ebp-24h]
add     eax, [ebp-28h]
push    eax
lea     ecx, [ebp-40h]
call    sub_37a9dfd0
push    dword ptr [ebp+0ch]
lea     ecx, [ebp-40h]
call    sub_37a9b0cc
push    dword ptr [ebp+10h]
lea     ecx, [ebp-40h]
call    sub_37a9b0cc
lea     eax, [ebp-40h]
push    eax
mov     ecx, [ebp+8]
call    ??0?$basic_string@du?$char_traits@d@std@@v?$allocator@d@2@@std@@qae@$$qav01@@z
mov     eax, [ebp-10h]
or      eax, 1
mov     [ebp-10h], eax
mov     dword ptr [ebp-4], 1
lea     ecx, [ebp-40h]
call    sub_37a13cd0
or      dword ptr [ebp-4], 0ffffffffh
mov     eax, [ebp+8]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dword_37ae01a8
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 28h
and     [ebp+var_10], 0
lea     ecx, [ebp+src]
call    sub_37a9bb65
and     [ebp+var_4], 0
mov     eax, [ebp+arg_4]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     eax, [eax+10h]
mov     [ebp+var_1c], eax
push    [ebp+arg_8]
call    sub_37a12500
pop     ecx
add     eax, [ebp+var_1c]
push    eax
call    sub_37a125a0
pop     ecx
push    eax
lea     ecx, [ebp+src]
call    sub_37a9dfd0
push    [ebp+arg_4]
lea     ecx, [ebp+src]
call    sub_37a9b0cc
push    [ebp+arg_8]
call    sub_37a12500
pop     ecx
push    eax
call    sub_37a125a0
pop     ecx
push    eax
push    [ebp+arg_8]
lea     ecx, [ebp+src]
call    near ptr loc_37a9b0e7+2
lea     eax, [ebp+src]
push    eax
mov     ecx, [ebp+arg_0]
call    ??0?$basic_string@du?$char_traits@d@std@@v?$allocator@d@2@@std@@qae@$$qav01@@z
mov     eax, [ebp+var_10]
or      eax, 1
mov     [ebp+var_10], eax
mov     [ebp+var_4], 1
lea     ecx, [ebp+src]
call    sub_37a13cd0
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 38h
mov     eax, [ebp+0ch]
mov     [ebp-10h], eax
mov     eax, [ebp+10h]
mov     [ebp-0ch], eax
xor     eax, eax
mov     [ebp-1], al
mov     al, [ebp-1]
mov     [ebp-3], al
mov     eax, [ebp+14h]
mov     [ebp-28h], eax
mov     eax, [ebp+18h]
mov     [ebp-24h], eax
mov     eax, [ebp-28h]
mov     [ebp-30h], eax
mov     eax, [ebp-24h]
mov     [ebp-2ch], eax
mov     eax, [ebp-0ch]
mov     [ebp-18h], eax
mov     eax, [ebp-10h]
mov     [ebp-14h], eax
xor     eax, eax
mov     [ebp-2], al
mov     al, [ebp-2]
mov     [ebp-4], al
mov     eax, [ebp-30h]
mov     [ebp-20h], eax
mov     eax, [ebp-2ch]
mov     [ebp-1ch], eax
mov     eax, [ebp-14h]
mov     [ebp-8], eax
jmp     short loc_37aa4987
mov     eax, [ebp-8]
add     eax, 18h
mov     [ebp-8], eax
mov     eax, [ebp-8]
cmp     eax, [ebp-18h]
jz      short loc_37aa499c
push    dword ptr [ebp-8]
lea     ecx, [ebp-20h]
call    near ptr loc_37aa5184+1
jmp     short loc_37aa497e
mov     eax, [ebp-20h]
mov     [ebp-38h], eax
mov     eax, [ebp-1ch]
mov     [ebp-34h], eax
mov     eax, [ebp-38h]
mov     [ebp+14h], eax
mov     eax, [ebp-34h]
mov     [ebp+18h], eax
mov     eax, [ebp+14h]
mov     ecx, [ebp+18h]
mov     edx, [ebp+8]
mov     [edx], eax
mov     [edx+4], ecx
mov     eax, [ebp+8]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, [ebp+arg_10]
cmp     eax, [ebp+arg_4]
ja      short loc_37aa4b8c
mov     eax, [ebp+arg_4]
sub     eax, [ebp+arg_10]
cmp     [ebp+arg_8], eax
jbe     short loc_37aa4b91
or      eax, 0ffffffffh
jmp     short loc_37aa4c00
cmp     [ebp+arg_10], 0
jnz     short loc_37aa4b9c
mov     eax, [ebp+arg_8]
jmp     short loc_37aa4c00
mov     eax, [ebp+arg_4]
sub     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_0]
lea     eax, [ecx+eax+1]
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
add     eax, [ebp+arg_8]
mov     [ebp+var_4], eax
jmp     short loc_37aa4bbe
mov     eax, [ebp+var_4]
inc     eax
mov     [ebp+var_4], eax
push    [ebp+arg_c]
mov     eax, [ebp+var_8]
sub     eax, [ebp+var_4]
push    eax
push    [ebp+var_4]
call    loc_37aa4320
add     esp, 0ch
mov     [ebp+var_4], eax
cmp     [ebp+var_4], 0
jnz     short loc_37aa4be1
or      eax, 0ffffffffh
jmp     short loc_37aa4c00
push    [ebp+arg_10]
push    [ebp+arg_c]
push    [ebp+var_4]
call    sub_37a9c5d0
add     esp, 0ch
test    eax, eax
jnz     short loc_37aa4bfe
mov     eax, [ebp+var_4]
sub     eax, [ebp+arg_0]
jmp     short loc_37aa4c00
jmp     short loc_37aa4bb7
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     [ebp+var_c], ecx
mov     eax, [ebp+arg_8]
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_c]
mov     [ebp+var_1c], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_0]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_10]
sub     eax, [ebp+var_4]
mov     [ebp+var_20], eax
lea     eax, [ebp+var_14]
push    eax
mov     ecx, [ebp+var_c]
call    sub_37aa57d8
lea     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     ecx, [ebp+var_4]
sub     ecx, [eax]
mov     [ebp+var_24], ecx
mov     eax, [ebp+var_1c]
sub     eax, [ebp+var_8]
push    eax
push    [ebp+var_8]
push    [ebp+var_20]
push    [ebp+var_24]
mov     ecx, [ebp+var_c]
call    sub_37aa6054
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, [ebp+arg_c]
mov     [ebp+var_18], eax
xor     eax, eax
mov     [ebp+var_1], al
mov     al, [ebp+var_1]
mov     [ebp+var_3], al
mov     eax, [ebp+arg_4]
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_8]
mov     [ebp+var_14], eax
xor     eax, eax
mov     [ebp+var_2], al
mov     al, [ebp+var_2]
mov     [ebp+var_4], al
mov     eax, [ebp+arg_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_c], eax
jmp     short loc_37aa4cb3
mov     eax, [ebp+var_8]
inc     eax
mov     [ebp+var_8], eax
mov     eax, [ebp+var_c]
inc     eax
mov     [ebp+var_c], eax
mov     eax, [ebp+var_8]
cmp     eax, [ebp+var_14]
jz      short loc_37aa4ccd
mov     eax, [ebp+var_8]
movsx   eax, byte ptr [eax]
push    eax
call    [ebp+arg_10]
pop     ecx
mov     ecx, [ebp+var_c]
mov     [ecx], al
jmp     short loc_37aa4ca5
mov     eax, [ebp+var_c]
mov     [ebp+arg_c], eax
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aa4ce2
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 0ch
mov     [ebp+var_10], ecx
and     [ebp+var_18], 0
cmp     [ebp+arg_8], 0
jz      short loc_37aa4d3a
mov     eax, [ebp+var_10]
mov     dword ptr [eax], offset dword_37aefe74
mov     eax, [ebp+var_10]
add     eax, 8
mov     [ebp+var_14], eax
mov     ecx, [ebp+var_14]
call    loc_37aa4f50
mov     eax, [ebp+var_14]
mov     dword ptr [eax], offset off_37aefe68
and     [ebp+var_4], 0
mov     eax, [ebp+var_18]
or      eax, 1
mov     [ebp+var_18], eax
mov     eax, [ebp+var_10]
mov     eax, [eax]
mov     eax, [eax+4]
mov     ecx, [ebp+var_10]
mov     dword ptr [ecx+eax], offset off_37aefe70
mov     eax, [ebp+var_10]
mov     eax, [eax]
mov     eax, [eax+4]
sub     eax, 8
mov     ecx, [ebp+var_10]
mov     ecx, [ecx]
mov     ecx, [ecx+4]
mov     edx, [ebp+var_10]
mov     [edx+ecx-4], eax
push    [ebp+arg_4]
push    [ebp+arg_0]
mov     eax, [ebp+var_10]
mov     eax, [eax]
mov     ecx, [ebp+var_10]
add     ecx, [eax+4]
call    sub_37aa5ac1
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_10]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    (offset loc_37ae0980+1)
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 0ch
mov     [ebp-10h], ecx
and     dword ptr [ebp-18h], 0
cmp     dword ptr [ebp+0ch], 0
jz      short loc_37aa4deb
mov     eax, [ebp-10h]
mov     dword ptr [eax], offset dword_37aeff04
mov     eax, [ebp-10h]
add     eax, 50h
mov     [ebp-14h], eax
mov     ecx, [ebp-14h]
call    loc_37aa4f50
mov     eax, [ebp-14h]
mov     dword ptr [eax], offset off_37aefe68
and     dword ptr [ebp-4], 0
mov     eax, [ebp-18h]
or      eax, 1
mov     [ebp-18h], eax
push    0
push    0
mov     eax, [ebp-10h]
add     eax, 4
push    eax
mov     ecx, [ebp-10h]
call    sub_37aa4ce2
mov     dword ptr [ebp-4], 1
mov     eax, [ebp-10h]
mov     eax, [eax]
mov     eax, [eax+4]
mov     ecx, [ebp-10h]
mov     dword ptr [ecx+eax], offset off_37aeff00
mov     eax, [ebp-10h]
mov     eax, [eax]
mov     eax, [eax+4]
sub     eax, 50h
mov     ecx, [ebp-10h]
mov     ecx, [ecx]
mov     ecx, [ecx+4]
mov     edx, [ebp-10h]
mov     [edx+ecx-4], eax
mov     eax, [ebp+8]
or      eax, 2
push    eax
mov     ecx, [ebp-10h]
add     ecx, 4
call    near ptr sub_37aa4ea6
or      dword ptr [ebp-4], 0ffffffffh
mov     eax, [ebp-10h]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     dword ptr [eax], offset off_37aefe80
push    8
call    ??2@yapaxi@z
pop     ecx
mov     [ebp-8], eax
cmp     dword ptr [ebp-8], 0
jz      short loc_37aa4e8a
mov     ecx, [ebp-8]
call    sub_37aa4f60
mov     [ebp-0ch], eax
jmp     short loc_37aa4e8e
and     dword ptr [ebp-0ch], 0
mov     eax, [ebp-4]
mov     ecx, [ebp-0ch]
mov     [eax+34h], ecx
mov     ecx, [ebp-4]
call    sub_37aa5431
mov     eax, [ebp-4]
mov     esp, ebp
pop     ebp
retn
in      al, dx
movsd
call    near ptr 0b8d92c5eh
inc     esi
inc     ecx
or      byte ptr [ebx-22h], 12h
xor     dword ptr [ebx-0f878abah], 1fh
xor     [edx-53016aa6h], ah
js      short loc_37aa4f31
lea     esi, [edi-793a6c82h]
wait
xchg    eax, edi
and     eax, [ebp-725715bfh]
test    [ecx], ah
sbb     eax, 0f7f86f8bh
mov     ch, 0c1h
out     dx, eax
mov     eax, ds:20ea6f9h
jle     short loc_37aa4ecc
and     dl, al
fisub   word ptr [ebx]
pop     es
adc     dh, cl
xor     al, 53h
xor     edi, edi
xchg    eax, ecx
push    ecx
lea     edi, [ecx+4913de4ch]
iret
cmpsb
inc     edx
outsb
sbb     esp, eax
retf
mov     al, ds:873bdbbfh
cwde
push    es
movsd
insb
sub     al, 0fch
mov     dl, 92h
hlt
retn
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     dword ptr [eax], offset off_37aefe68
mov     ecx, [ebp-4]
call    sub_37aa5150
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     eax, [eax-8]
mov     eax, [eax+4]
mov     ecx, [ebp-4]
mov     dword ptr [ecx+eax-8], offset off_37aefe70
mov     eax, [ebp-4]
mov     eax, [eax-8]
mov     eax, [eax+4]
sub     eax, 8
mov     ecx, [ebp-4]
mov     ecx, [ecx-8]
mov     ecx, [ecx+4]
mov     edx, [ebp-4]
mov     [edx+ecx-0ch], eax
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aa5038
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 0ch
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     eax, [eax-50h]
mov     eax, [eax+4]
mov     ecx, [ebp+var_10]
mov     dword ptr [ecx+eax-50h], offset off_37aeff00
mov     eax, [ebp+var_10]
mov     eax, [eax-50h]
mov     eax, [eax+4]
sub     eax, 50h
mov     ecx, [ebp+var_10]
mov     ecx, [ecx-50h]
mov     ecx, [ecx+4]
mov     edx, [ebp+var_10]
mov     [edx+ecx-54h], eax
mov     eax, [ebp+var_10]
sub     eax, 4ch
mov     [ebp+var_18], eax
and     [ebp+var_4], 0
mov     eax, [ebp+var_18]
mov     dword ptr [eax], offset off_37aefec0
mov     ecx, [ebp+var_18]
call    nullsub_4
mov     ecx, [ebp+var_18]
call    sub_37aa50f7
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_10]
sub     eax, 48h
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     eax, [eax-8]
mov     eax, [eax+4]
mov     ecx, [ebp+var_14]
mov     dword ptr [ecx+eax-8], offset off_37aefe70
mov     eax, [ebp+var_14]
mov     eax, [eax-8]
mov     eax, [eax+4]
sub     eax, 8
mov     ecx, [ebp+var_14]
mov     ecx, [ecx-8]
mov     ecx, [ecx+4]
mov     edx, [ebp+var_14]
mov     [edx+ecx-0ch], eax
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp+var_8], ecx
mov     eax, [ebp+var_8]
mov     dword ptr [eax], offset off_37aefe80
mov     eax, [ebp+var_8]
mov     eax, [eax+34h]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+block], eax
cmp     [ebp+block], 0
jz      short loc_37aa5148
mov     eax, [ebp+var_14]
mov     [ebp+var_c], eax
mov     ecx, [ebp+block]
call    sub_37a9d5d0
xor     eax, eax
inc     eax
and     eax, 1
jz      short loc_37aa5140
push    8
push    [ebp+block]
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     eax, [ebp+block]
mov     [ebp+var_c], eax
jmp     short loc_37aa514c
and     [ebp+var_c], 0
mov     esp, ebp
pop     ebp
retn
adc     eax, 5d1811e8h
das
test    dword ptr [edx], 4c92b80fh
neg     byte ptr ds:0f1414c86h
push    edi
mov     bh, 0c7h
std
push    cs
mov     eax, 879b4e08h
lods    dword ptr gs:[esi]
push    edx
pop     fs
pop     esp
nop
dec     ebx
rcr     ah, 0feh
dec     ebp
call    near ptr 616a1bffh
arpl    [edx-38h], bx
sbb     [eax], ecx
and     [ebp-75h], edx
in      al, dx
push    ecx
mov     [ebp-4], ecx
push    dword ptr [ebp+8]
mov     eax, [ebp-4]
push    dword ptr [eax+4]
call    sub_37aa4779
pop     ecx
pop     ecx
mov     eax, [ebp-4]
cmp     dword ptr [eax], 0
jz      short loc_37aa51b6
mov     eax, [ebp-4]
push    dword ptr [eax]
mov     eax, [ebp-4]
push    dword ptr [eax+4]
call    sub_37aa13dd
pop     ecx
pop     ecx
mov     eax, [ebp-4]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_8], ecx
mov     eax, [ebp+var_8]
add     eax, 8
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     eax, [eax-8]
mov     eax, [eax+4]
mov     ecx, [ebp+var_4]
mov     dword ptr [ecx+eax-8], offset off_37aefe70
mov     eax, [ebp+var_4]
mov     eax, [eax-8]
mov     eax, [eax+4]
sub     eax, 8
mov     ecx, [ebp+var_4]
mov     ecx, [ecx-8]
mov     ecx, [ecx+4]
mov     edx, [ebp+var_4]
mov     [edx+ecx-0ch], eax
mov     eax, [ebp+var_8]
add     eax, 8
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     dword ptr [eax], offset off_37aefe68
mov     ecx, [ebp+var_c]
call    sub_37aa5150
mov     esp, ebp
pop     ebp
retn
imul    ebx, [ebx-9], 60cd1343h
mov     fs, word ptr [ebp+5fh]
pop     ecx
call    fword ptr [edx+1bh]
aaa
retf
adc     al, 3eh
sub     ecx, [edx]
cmp     al, 20h
scasb
dec     esi
pop     ebp
das
sub     ecx, [ecx-4]
jmp     sub_37aa5295
loope   loc_37aa5246
cmpsd
push    esp
add     esi, [edx]
aad     11h
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+block], ecx
mov     eax, [ebp+block]
mov     dword ptr [eax], offset off_37aefe68
mov     ecx, [ebp+block]
call    sub_37aa5150
mov     eax, [ebp+arg_0]
and     eax, 1
jz      short loc_37aa528c
push    48h
push    [ebp+block]
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     eax, [ebp+block]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
mov     ecx, [ebp+var_4]
sub     ecx, 8
call    sub_37aa51bf
mov     eax, [ebp+arg_0]
and     eax, 1
jz      short loc_37aa52bf
push    50h
mov     eax, [ebp+var_4]
sub     eax, 8
push    eax
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     eax, [ebp+var_4]
sub     eax, 8
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp-4], ecx
mov     ecx, [ebp-4]
sub     ecx, 50h
call    near ptr sub_37aa521f
mov     eax, [ebp+8]
and     eax, 1
jz      short loc_37aa52f8
push    98h
mov     eax, [ebp-4]
sub     eax, 50h
push    eax
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     eax, [ebp-4]
sub     eax, 50h
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+block], ecx
mov     ecx, [ebp+block]
call    sub_37aa50f7
mov     eax, [ebp+arg_0]
and     eax, 1
jz      short loc_37aa5327
push    38h
push    [ebp+block]
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     eax, [ebp+block]
mov     esp, ebp
pop     ebp
retn    4
mov     ebp, 0ee5beffh
dec     esi
mov     ds:94ef1b0dh, eax
retf
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+2ch]
mov     eax, [eax]
dec     eax
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+2ch]
mov     [ecx], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
inc     eax
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+1ch]
mov     [ecx], eax
mov     eax, [ebp+var_8]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
add     eax, 4
mov     ecx, [ebp+var_4]
mov     [ecx+0ch], eax
mov     eax, [ebp+var_4]
add     eax, 8
mov     ecx, [ebp+var_4]
mov     [ecx+10h], eax
mov     eax, [ebp+var_4]
add     eax, 14h
mov     ecx, [ebp+var_4]
mov     [ecx+1ch], eax
mov     eax, [ebp+var_4]
add     eax, 18h
mov     ecx, [ebp+var_4]
mov     [ecx+20h], eax
mov     eax, [ebp+var_4]
add     eax, 24h
mov     ecx, [ebp+var_4]
mov     [ecx+2ch], eax
mov     eax, [ebp+var_4]
add     eax, 28h
mov     ecx, [ebp+var_4]
mov     [ecx+30h], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+10h]
and     dword ptr [eax], 0
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
and     dword ptr [eax], 0
xor     eax, eax
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+30h]
mov     [ecx], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+0ch]
and     dword ptr [eax], 0
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
and     dword ptr [eax], 0
xor     eax, eax
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+2ch]
mov     [ecx], eax
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
push    offset seh_37aed7c1
push    eax
mov     large fs:0, esp
push    esi
mov     esi, ecx
push    edi
push    0
push    0
mov     dword ptr [esi+30h], 0
mov     dword ptr [esi+8], 0
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 201h
mov     dword ptr [esi+18h], 6
mov     dword ptr [esi+1ch], 0
mov     dword ptr [esi+20h], 0
mov     dword ptr [esi+24h], 0
mov     dword ptr [esi+28h], 0
mov     dword ptr [esi+2ch], 0
call    sub_37a9dbd0
push    8
call    ??2@yapaxi@z
mov     edi, eax
add     esp, 4
test    edi, edi
jz      short loc_37aa5692
push    1
mov     [ebp+var_4], 0
call    ?_init@locale@std@@capav_locimp@12@_n@z
mov     [edi+4], eax
add     esp, 4
mov     [esi+30h], edi
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     ecx, [ebp+var_c]
mov     dword ptr [esi+30h], 0
pop     edi
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     eax, [eax+30h]
mov     eax, [eax]
dec     eax
mov     ecx, [ebp-4]
mov     ecx, [ecx+30h]
mov     [ecx], eax
mov     eax, [ebp-4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp-8], eax
mov     eax, [ebp-4]
mov     eax, [eax+20h]
mov     eax, [eax]
inc     eax
mov     ecx, [ebp-4]
mov     ecx, [ecx+20h]
mov     [ecx], eax
mov     eax, [ebp-8]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+14h], 10h
jb      short loc_37aa580b
mov     [ebp+var_8], 1
jmp     short loc_37aa580f
and     [ebp+var_8], 0
movzx   eax, byte ptr [ebp+var_8]
test    eax, eax
jz      short loc_37aa581f
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     [ebp+var_c], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
push    [ebp+var_4]
mov     ecx, [ebp+arg_0]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    4
cmp     al, 5ch
pop     ds
lodsb
adc     ebx, edx
jnp     short loc_37aa58ab
scasb
wait
cmp     dl, [edx]
push    edi
or      al, 17h
add     al, 3
movsd
mov     edx, 288973bch
adc     ecx, esi
add     dh, ch
in      al, dx
mov     esp, 0ed290e45h
mov     ds:6e9ace05h, al
outsd
jge     short loc_37aa5884
add     esp, [eax-2ah]
mov     al, 0edh
jmp     near ptr 0e2b6063eh
push    ebp
mov     ebp, esp
sub     esp, 1ch
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_4], eax
mov     eax, [ebp+var_4]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+14h], 10h
jb      short loc_37aa58b6
mov     [ebp+var_8], 1
jmp     short loc_37aa58ba
and     [ebp+var_8], 0
movzx   eax, byte ptr [ebp+var_8]
test    eax, eax
jz      short loc_37aa58ca
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
add     ecx, [eax+10h]
mov     [ebp+var_1c], ecx
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_1c]
mov     [eax], ecx
push    [ebp+var_4]
mov     ecx, [ebp+arg_0]
call    nullsub_2
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    4
cmp     al, 65h
xchg    eax, edi
mov     dl, 7dh
insd
adc     al, 3
stosb
sar     dword ptr [ecx+7ad13414h], cl
dec     byte ptr [ebx-74fbdbbch]
or      [ebx+3b082444h], cl
or      [edi], cl
xchg    eax, esp
rol     bl, 0c3h
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp-10h], ecx
mov     eax, [ebp-10h]
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
mov     [ebp-4], eax
mov     eax, [ebp-4]
mov     [ebp-0ch], eax
mov     eax, [ebp-4]
cmp     dword ptr [eax+14h], 10h
jb      short loc_37aa5a27
mov     dword ptr [ebp-8], 1
jmp     short loc_37aa5a2b
and     dword ptr [ebp-8], 0
movzx   eax, byte ptr [ebp-8]
test    eax, eax
jz      short loc_37aa5a3b
mov     eax, [ebp-4]
mov     eax, [eax]
mov     [ebp-0ch], eax
push    dword ptr [ebp+8]
call    sub_37a12500
pop     ecx
push    eax
push    dword ptr [ebp+8]
push    dword ptr [ebp+0ch]
mov     eax, [ebp-4]
push    dword ptr [eax+10h]
push    dword ptr [ebp-0ch]
call    sub_37aa4b74
add     esp, 14h
mov     esp, ebp
pop     ebp
retn    8
mov     esp, 2f2554c2h
inc     edx
adc     ecx, [esp-31h]
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     [ebp+var_4], ecx
and     [ebp+var_8], 0
mov     ecx, [ebp+var_4]
call    sub_37aa55f0
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     [eax+38h], ecx
mov     eax, [ebp+var_4]
and     dword ptr [eax+3ch], 0
push    20h
mov     ecx, [ebp+var_4]
call    sub_37aa6d8b
mov     ecx, [ebp+var_4]
mov     [ecx+40h], al
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+38h], 0
jnz     short loc_37aa5b0a
push    0
push    4
mov     ecx, [ebp+var_4]
call    sub_37aa695f
movzx   eax, [ebp+arg_4]
test    eax, eax
jz      short loc_37aa5b1b
push    [ebp+var_4]
call    ?_addstd@ios_base@std@@saxpav12@@z
pop     ecx
mov     esp, ebp
pop     ebp
retn    8
mov     eax, [esp+4]
xor     ecx, ecx
mov     eax, [eax]
cmp     eax, 0ffffffffh
cmovz   eax, ecx
retn
aam     80h
not     byte ptr [edi+44h]
inc     eax
test    edx, edi
loop    near ptr byte_37aa6051
sub     al, 9fh
int     0fbh
cmp     [edx-3c11d34ah], cl
bound   eax, [edx-24h]
test    al, 4ah
and     eax, [edi]
xchg    eax, ebx
adc     [edx-52h], dx
les     edx, [ecx-13cc96f7h]
rcl     byte ptr [edi], 37h
retn
icebp
and     [ecx-80h], ebp
jle     short loc_37aa5fda
sbb     ebx, [ecx]
mov     [eax], ebx
mov     gs, word ptr [esi]
pop     es
dec     esi
push    ds
sbb     [eax], dl
jg      short loc_37aa6095
sbb     eax, 63d8e94dh
daa
retn
pop     es
jmp     far ptr 8099h:0ea38c026h
and     al, 2
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_4], ecx
mov     eax, ds:dword_37af26f8
mov     [ebp+var_c], eax
mov     eax, ds:dword_37af26fc
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
mov     ecx, [ebp+var_8]
mov     [eax+4], ecx
mov     eax, [ebp+arg_0]
and     dword ptr [eax+8], 0
and     dword ptr [eax+0ch], 0
xor     eax, eax
mov     ecx, [ebp+arg_0]
add     ecx, 10h
mov     [ecx], eax
mov     [ecx+4], eax
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    14h
push    ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_4], ecx
mov     eax, ds:dword_37af26f8
mov     [ebp+var_c], eax
mov     eax, ds:dword_37af26fc
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
mov     ecx, [ebp+var_8]
mov     [eax+4], ecx
mov     eax, [ebp+arg_0]
and     dword ptr [eax+8], 0
and     dword ptr [eax+0ch], 0
xor     eax, eax
mov     ecx, [ebp+arg_0]
add     ecx, 10h
mov     [ecx], eax
mov     [ecx+4], eax
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    20h
push    ebp
mov     ebp, esp
sub     esp, 60h
mov     [ebp+var_4], ecx
mov     eax, [ebp+arg_4]
add     eax, [ebp+arg_c]
mov     ecx, [ebp+arg_8]
adc     ecx, [ebp+arg_10]
mov     [ebp+var_50], eax
mov     [ebp+var_4c], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_14], eax
cmp     [ebp+var_14], 0
jz      short loc_37aa6700
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+38h]
cmp     eax, [ebp+var_18]
jnb     short loc_37aa6700
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_1c]
mov     [eax+38h], ecx
mov     eax, [ebp+var_50]
cmp     eax, ds:dword_37af26f8
jnz     short loc_37aa671b
mov     eax, [ebp+var_4c]
cmp     eax, ds:dword_37af26fc
jnz     short loc_37aa671b
jmp     loc_37aa6920
mov     eax, [ebp+arg_1c]
and     eax, 1
jz      loc_37aa6850
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_20], eax
cmp     [ebp+var_20], 0
jz      loc_37aa6850
cmp     [ebp+var_4c], 0
jl      loc_37aa683b
jg      short loc_37aa6752
cmp     [ebp+var_50], 0
jb      loc_37aa683b
mov     eax, [ebp+var_4]
mov     eax, [eax+0ch]
mov     eax, [eax]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+38h]
sub     eax, [ebp+var_24]
cdq
mov     [ebp+var_58], eax
mov     [ebp+var_54], edx
mov     eax, [ebp+var_4c]
cmp     eax, [ebp+var_54]
jg      loc_37aa683b
jl      short loc_37aa6787
mov     eax, [ebp+var_50]
cmp     eax, [ebp+var_58]
ja      loc_37aa683b
mov     eax, [ebp+var_4]
mov     eax, [eax+0ch]
mov     eax, [eax]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_28]
sub     eax, [ebp+var_2c]
cdq
add     eax, [ebp+var_50]
adc     edx, [ebp+var_4c]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+2ch]
mov     eax, [eax]
sub     eax, [ebp+var_8]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+2ch]
mov     [ecx], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
add     eax, [ebp+var_8]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+1ch]
mov     [ecx], eax
mov     eax, [ebp+arg_1c]
and     eax, 2
jz      short loc_37aa6839
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_30], eax
cmp     [ebp+var_30], 0
jz      short loc_37aa6839
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+30h]
mov     eax, [eax]
add     eax, [ecx]
mov     [ebp+var_38], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+10h]
mov     eax, [eax]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+10h]
mov     ecx, [ebp+var_34]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
mov     eax, [ebp+var_38]
sub     eax, [ebp+var_c]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+30h]
mov     [ecx], eax
jmp     short loc_37aa684b
mov     eax, ds:dword_37af26f8
mov     [ebp+var_50], eax
mov     eax, ds:dword_37af26fc
mov     [ebp+var_4c], eax
jmp     loc_37aa6920
mov     eax, [ebp+arg_1c]
and     eax, 2
jz      loc_37aa6910
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_3c], eax
cmp     [ebp+var_3c], 0
jz      loc_37aa6910
cmp     [ebp+var_4c], 0
jl      loc_37aa68fe
jg      short loc_37aa6883
cmp     [ebp+var_50], 0
jb      short loc_37aa68fe
mov     eax, [ebp+var_4]
mov     eax, [eax+0ch]
mov     eax, [eax]
mov     [ebp+var_40], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+38h]
sub     eax, [ebp+var_40]
cdq
mov     [ebp+var_60], eax
mov     [ebp+var_5c], edx
mov     eax, [ebp+var_4c]
cmp     eax, [ebp+var_5c]
jg      short loc_37aa68fe
jl      short loc_37aa68b0
mov     eax, [ebp+var_50]
cmp     eax, [ebp+var_60]
ja      short loc_37aa68fe
mov     eax, [ebp+var_4]
mov     eax, [eax+0ch]
mov     eax, [eax]
mov     [ebp+var_44], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_48], eax
mov     eax, [ebp+var_44]
sub     eax, [ebp+var_48]
cdq
add     eax, [ebp+var_50]
adc     edx, [ebp+var_4c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+30h]
mov     eax, [eax]
sub     eax, [ebp+var_10]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+30h]
mov     [ecx], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
add     eax, [ebp+var_10]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+20h]
mov     [ecx], eax
jmp     short loc_37aa690e
mov     eax, ds:dword_37af26f8
mov     [ebp+var_50], eax
mov     eax, ds:dword_37af26fc
mov     [ebp+var_4c], eax
jmp     short loc_37aa6920
mov     eax, ds:dword_37af26f8
mov     [ebp+var_50], eax
mov     eax, ds:dword_37af26fc
mov     [ebp+var_4c], eax
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+var_50]
mov     [eax], ecx
mov     ecx, [ebp+var_4c]
mov     [eax+4], ecx
mov     eax, [ebp+arg_0]
and     dword ptr [eax+8], 0
and     dword ptr [eax+0ch], 0
xor     eax, eax
mov     ecx, [ebp+arg_0]
add     ecx, 10h
mov     [ecx], eax
mov     [ecx+4], eax
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    20h
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_4], ecx
cmp     [ebp+arg_0], 0
jz      short loc_37aa69a4
mov     ecx, [ebp+var_4]
call    loc_37aa6050
or      eax, [ebp+arg_0]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+38h], 0
jnz     short loc_37aa6990
mov     eax, [ebp+var_8]
or      eax, 4
mov     [ebp+var_c], eax
jmp     short loc_37aa6996
mov     eax, [ebp+var_8]
mov     [ebp+var_c], eax
push    [ebp+arg_4]
push    [ebp+var_c]
mov     ecx, [ebp+var_4]
call    sub_37a9dbd0
mov     esp, ebp
pop     ebp
retn    8
mov     al, 0ebh
dec     ecx
sbb     dl, dh
xor     al, 9fh
leave
xchg    eax, ebp
jns     short loc_37aa69b1
pusha
pop     edi
or      [ecx], ebx
cld
nop
inc     esp
mov     bh, 0fh
sub     eax, edi
aam     0b8h
les     esi, [eax+1663ccd1h]
popf
fadd    st(4), st
pop     ds
bnd retn
fild    dword ptr [edi-597861abh]
cdq
sub     al, 44h
add     eax, 2bde5016h
retf
add     [esi+66h], ch
jecxz   short near ptr loc_37aa6be6+2
add     bl, [edx+0ah]
mov     eax, ds:0ffb73d61h
mov     eax, [esp+arg_0]
movzx   eax, byte ptr [eax]
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     ecx, [ebp+var_4]
call    dword ptr [eax+18h]
mov     [ebp+var_c], eax
call    sub_37aa5900
mov     [ebp+var_10], eax
lea     eax, [ebp+var_c]
push    eax
lea     eax, [ebp+var_10]
push    eax
call    near ptr loc_37aa590f+1
pop     ecx
pop     ecx
movzx   eax, al
test    eax, eax
jz      short loc_37aa6c17
call    sub_37aa5900
mov     [ebp+var_8], eax
jmp     short loc_37aa6c29
mov     ecx, [ebp+var_4]
call    sub_37aa53f5
push    eax
call    sub_37aa6bd0
pop     ecx
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
call    sub_37aa5900
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 38h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_c], eax
cmp     [ebp+var_c], 0
jnz     short loc_37aa6c69
call    sub_37aa5900
jmp     loc_37aa6d87
jmp     loc_37aa6d87
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+2ch]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+1ch]
mov     ecx, [ecx]
add     ecx, [eax]
cmp     [ebp+var_10], ecx
jnb     short loc_37aa6ca7
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_14], eax
push    [ebp+var_14]
call    sub_37aa6bd0
pop     ecx
jmp     loc_37aa6d87
jmp     loc_37aa6d87
mov     eax, [ebp+var_4]
mov     eax, [eax+3ch]
and     eax, 4
jnz     short loc_37aa6cf7
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_18], eax
cmp     [ebp+var_18], 0
jz      short loc_37aa6cf7
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_1c]
cmp     eax, [ebp+var_20]
ja      short loc_37aa6d06
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+38h]
cmp     eax, [ebp+var_24]
ja      short loc_37aa6d06
call    sub_37aa5900
jmp     loc_37aa6d87
jmp     loc_37aa6d87
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+38h]
cmp     eax, [ebp+var_28]
jnb     short loc_37aa6d30
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_2c]
mov     [eax+38h], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+0ch]
mov     eax, [eax]
mov     [ebp+var_30], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+38h]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+0ch]
mov     ecx, [ebp+var_30]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     ecx, [ebp+var_8]
mov     [eax], ecx
mov     eax, [ebp+var_34]
sub     eax, [ebp+var_8]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+2ch]
mov     [ecx], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_38], eax
push    [ebp+var_38]
call    sub_37aa6bd0
pop     ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aa6d8b
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 1ch
mov     [ebp+var_10], ecx
and     [ebp+var_20], 0
lea     eax, [ebp+var_28]
push    eax
mov     ecx, [ebp+var_10]
call    loc_37aa5a70
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_18], eax
and     [ebp+var_4], 0
push    [ebp+var_18]
call    sub_37a9ce00
pop     ecx
mov     [ebp+var_1c], eax
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_28]
call    sub_37a9d5d0
push    [ebp+arg_0]
mov     ecx, [ebp+var_1c]
call    sub_37aa6e00
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [ecx]
mov     eax, [eax+20h]
jmp     eax
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     [ebp+var_4], ecx
xorps   xmm0, xmm0
movlpd  [ebp+var_28], xmm0
cmp     [ebp+arg_8], 0
jl      loc_37aa6f6e
jg      short loc_37aa6e2e
cmp     [ebp+arg_4], 0
jbe     loc_37aa6f6e
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
cmp     dword ptr [eax], 0
jz      short loc_37aa6e46
mov     eax, [ebp+var_4]
mov     eax, [eax+2ch]
mov     eax, [eax]
mov     [ebp+var_8], eax
jmp     short loc_37aa6e4a
and     [ebp+var_8], 0
mov     eax, [ebp+var_8]
cdq
mov     [ebp+var_20], eax
mov     [ebp+var_1c], edx
cmp     [ebp+var_1c], 0
jl      loc_37aa6eff
jg      short loc_37aa6e6a
cmp     [ebp+var_20], 0
jbe     loc_37aa6eff
mov     eax, [ebp+arg_8]
cmp     eax, [ebp+var_1c]
jg      short loc_37aa6e88
jl      short loc_37aa6e7c
mov     eax, [ebp+arg_4]
cmp     eax, [ebp+var_20]
jnb     short loc_37aa6e88
mov     eax, [ebp+arg_4]
mov     [ebp+var_20], eax
mov     eax, [ebp+arg_8]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
mov     [ebp+var_14], eax
push    [ebp+var_20]
push    [ebp+var_14]
push    [ebp+arg_0]
call    loc_37a12520
add     esp, 0ch
mov     eax, [ebp+var_20]
add     eax, [ebp+arg_0]
mov     [ebp+arg_0], eax
mov     eax, dword ptr [ebp+var_28]
add     eax, [ebp+var_20]
mov     ecx, dword ptr [ebp+var_28+4]
adc     ecx, [ebp+var_1c]
mov     dword ptr [ebp+var_28], eax
mov     dword ptr [ebp+var_28+4], ecx
mov     eax, [ebp+arg_4]
sub     eax, [ebp+var_20]
mov     ecx, [ebp+arg_8]
sbb     ecx, [ebp+var_1c]
mov     [ebp+arg_4], eax
mov     [ebp+arg_8], ecx
mov     eax, [ebp+var_20]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+2ch]
mov     eax, [eax]
sub     eax, [ebp+var_c]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+2ch]
mov     [ecx], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+1ch]
mov     eax, [eax]
add     eax, [ebp+var_c]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+1ch]
mov     [ecx], eax
jmp     short loc_37aa6f69
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     ecx, [ebp+var_4]
call    dword ptr [eax+1ch]
mov     [ebp+var_10], eax
call    sub_37aa5900
mov     [ebp+var_18], eax
lea     eax, [ebp+var_10]
push    eax
lea     eax, [ebp+var_18]
push    eax
call    near ptr loc_37aa590f+1
pop     ecx
pop     ecx
movzx   eax, al
test    eax, eax
jz      short loc_37aa6f2f
jmp     short loc_37aa6f6e
jmp     short loc_37aa6f69
lea     eax, [ebp+var_10]
push    eax
call    loc_37aa6bc0
pop     ecx
mov     ecx, [ebp+arg_0]
mov     [ecx], al
mov     eax, [ebp+arg_0]
inc     eax
mov     [ebp+arg_0], eax
mov     eax, dword ptr [ebp+var_28]
add     eax, 1
mov     ecx, dword ptr [ebp+var_28+4]
adc     ecx, 0
mov     dword ptr [ebp+var_28], eax
mov     dword ptr [ebp+var_28+4], ecx
mov     eax, [ebp+arg_4]
sub     eax, 1
mov     ecx, [ebp+arg_8]
sbb     ecx, 0
mov     [ebp+arg_4], eax
mov     [ebp+arg_8], ecx
jmp     loc_37aa6e18
mov     eax, dword ptr [ebp+var_28]
mov     edx, dword ptr [ebp+var_28+4]
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     [ebp+var_4], ecx
xorps   xmm0, xmm0
movlpd  [ebp+var_28], xmm0
cmp     [ebp+arg_8], 0
jl      loc_37aa70dc
jg      short loc_37aa6fa1
cmp     [ebp+arg_4], 0
jbe     loc_37aa70dc
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
cmp     dword ptr [eax], 0
jz      short loc_37aa6fb9
mov     eax, [ebp+var_4]
mov     eax, [eax+30h]
mov     eax, [eax]
mov     [ebp+var_8], eax
jmp     short loc_37aa6fbd
and     [ebp+var_8], 0
mov     eax, [ebp+var_8]
cdq
mov     [ebp+var_20], eax
mov     [ebp+var_1c], edx
cmp     [ebp+var_1c], 0
jl      loc_37aa7072
jg      short loc_37aa6fdd
cmp     [ebp+var_20], 0
jbe     loc_37aa7072
mov     eax, [ebp+arg_8]
cmp     eax, [ebp+var_1c]
jg      short loc_37aa6ffb
jl      short loc_37aa6fef
mov     eax, [ebp+arg_4]
cmp     eax, [ebp+var_20]
jnb     short loc_37aa6ffb
mov     eax, [ebp+arg_4]
mov     [ebp+var_20], eax
mov     eax, [ebp+arg_8]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
mov     [ebp+var_10], eax
push    [ebp+var_20]
push    [ebp+arg_0]
push    [ebp+var_10]
call    loc_37a12520
add     esp, 0ch
mov     eax, [ebp+var_20]
add     eax, [ebp+arg_0]
mov     [ebp+arg_0], eax
mov     eax, dword ptr [ebp+var_28]
add     eax, [ebp+var_20]
mov     ecx, dword ptr [ebp+var_28+4]
adc     ecx, [ebp+var_1c]
mov     dword ptr [ebp+var_28], eax
mov     dword ptr [ebp+var_28+4], ecx
mov     eax, [ebp+arg_4]
sub     eax, [ebp+var_20]
mov     ecx, [ebp+arg_8]
sbb     ecx, [ebp+var_1c]
mov     [ebp+arg_4], eax
mov     [ebp+arg_8], ecx
mov     eax, [ebp+var_20]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+30h]
mov     eax, [eax]
sub     eax, [ebp+var_c]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+30h]
mov     [ecx], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+20h]
mov     eax, [eax]
add     eax, [ebp+var_c]
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+20h]
mov     [ecx], eax
jmp     short loc_37aa70d7
push    [ebp+arg_0]
call    sub_37aa6bd0
pop     ecx
push    eax
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     ecx, [ebp+var_4]
call    dword ptr [eax+0ch]
mov     [ebp+var_14], eax
call    sub_37aa5900
mov     [ebp+var_18], eax
lea     eax, [ebp+var_14]
push    eax
lea     eax, [ebp+var_18]
push    eax
call    near ptr loc_37aa590f+1
pop     ecx
pop     ecx
movzx   eax, al
test    eax, eax
jz      short loc_37aa70ac
jmp     short loc_37aa70dc
jmp     short loc_37aa70d7
mov     eax, [ebp+arg_0]
inc     eax
mov     [ebp+arg_0], eax
mov     eax, dword ptr [ebp+var_28]
add     eax, 1
mov     ecx, dword ptr [ebp+var_28+4]
adc     ecx, 0
mov     dword ptr [ebp+var_28], eax
mov     dword ptr [ebp+var_28+4], ecx
mov     eax, [ebp+arg_4]
sub     eax, 1
mov     ecx, [ebp+arg_8]
sbb     ecx, 0
mov     [ebp+arg_4], eax
mov     [ebp+arg_8], ecx
jmp     loc_37aa6f8b
mov     eax, dword ptr [ebp+var_28]
mov     edx, dword ptr [ebp+var_28+4]
mov     esp, ebp
pop     ebp
retn    0ch
push    edi
bound   ecx, ds:0feaa203h[edx*2]
inc     eax
retf
push    ecx
mov     eax, [esp+4+arg_0]
mov     [ecx+8], eax
mov     eax, ecx
mov     [esp+4+var_4], ecx
mov     dword ptr [ecx+4], 0
mov     dword ptr [ecx], offset dword_37aeff54
pop     ecx
retn    4
push    ebp
mov     ebp, esp
sub     esp, 58h
mov     [ebp+var_8], ecx
mov     eax, [ebp+var_8]
movzx   ecx, word ptr [eax+0eh]
and     ecx, 7
mov     [ebp+var_14], ecx
cmp     [ebp+var_14], 5
ja      def_37aa7363
mov     edx, [ebp+var_14]
jmp     ds:jpt_37aa7363[edx*4]
mov     ecx, [ebp+arg_0]
call    sub_37a1efd0
jmp     loc_37aa7662
push    0
mov     ecx, [ebp+arg_0]
call    sub_37a1ef90
jmp     loc_37aa7662
push    1
mov     ecx, [ebp+arg_0]
call    sub_37a1ef90
jmp     loc_37aa7662
mov     ecx, [ebp+arg_0]
call    loc_37a1ece0
movzx   eax, al
test    eax, eax
jnz     short loc_37aa73ab
xor     al, al
jmp     loc_37aa7662
mov     ecx, [ebp+var_8]
mov     edx, [ecx+8]
mov     [ebp+var_2c], edx
mov     eax, [ebp+var_2c]
mov     [ebp+var_c], eax
jmp     short loc_37aa73c5
mov     ecx, [ebp+var_c]
add     ecx, 20h
mov     [ebp+var_c], ecx
mov     edx, [ebp+var_8]
mov     eax, [edx+8]
mov     [ebp+var_30], eax
mov     ecx, [ebp+var_8]
mov     edx, [ecx]
shl     edx, 5
add     edx, [ebp+var_30]
mov     [ebp+var_34], edx
mov     eax, [ebp+var_34]
mov     [ebp+var_38], eax
mov     ecx, [ebp+var_c]
cmp     ecx, [ebp+var_38]
jz      short loc_37aa73f3
mov     [ebp+var_18], 1
jmp     short loc_37aa73fa
mov     [ebp+var_18], 0
movzx   edx, byte ptr [ebp+var_18]
test    edx, edx
jz      loc_37aa7492
mov     eax, [ebp+var_c]
mov     [ebp+var_3c], eax
mov     ecx, [ebp+var_3c]
movzx   edx, word ptr [ecx+0eh]
and     edx, 800h
jz      short loc_37aa7421
mov     [ebp+var_1], 1
jmp     short loc_37aa7425
mov     [ebp+var_1], 0
mov     eax, [ebp+var_c]
mov     [ebp+var_40], eax
mov     ecx, [ebp+var_c]
mov     [ebp+var_44], ecx
mov     ecx, [ebp+var_40]
call    sub_37a148a0
mov     [ebp+var_48], eax
mov     ecx, [ebp+var_44]
call    loc_37a148c0
mov     [ebp+var_4c], eax
movzx   edx, [ebp+var_1]
push    edx
mov     eax, [ebp+var_48]
push    eax
mov     ecx, [ebp+var_4c]
push    ecx
mov     ecx, [ebp+arg_0]
call    loc_37a1ed20
movzx   edx, al
test    edx, edx
jnz     short loc_37aa746a
xor     al, al
jmp     loc_37aa7662
mov     eax, [ebp+var_c]
mov     [ebp+var_50], eax
mov     ecx, [ebp+arg_0]
push    ecx
mov     ecx, [ebp+var_50]
add     ecx, 10h
call    sub_37aa7340
movzx   edx, al
test    edx, edx
jnz     short loc_37aa748d
xor     al, al
jmp     loc_37aa7662
jmp     loc_37aa73bc
mov     eax, [ebp+var_8]
mov     ecx, [eax]
push    ecx
mov     ecx, [ebp+arg_0]
call    sub_37a1ec80
jmp     loc_37aa7662
mov     ecx, [ebp+arg_0]
call    loc_37a1ec40
movzx   edx, al
test    edx, edx
jnz     short loc_37aa74bb
xor     al, al
jmp     loc_37aa7662
mov     eax, [ebp+var_8]
mov     ecx, [eax+8]
mov     [ebp+var_54], ecx
mov     edx, [ebp+var_54]
mov     [ebp+var_10], edx
jmp     short loc_37aa74d5
mov     eax, [ebp+var_10]
add     eax, 10h
mov     [ebp+var_10], eax
mov     ecx, [ebp+var_8]
mov     edx, [ecx+8]
mov     [ebp+var_58], edx
mov     eax, [ebp+var_8]
mov     ecx, [eax]
shl     ecx, 4
add     ecx, [ebp+var_58]
cmp     [ebp+var_10], ecx
jz      short loc_37aa750a
mov     edx, [ebp+arg_0]
push    edx
mov     ecx, [ebp+var_10]
call    sub_37aa7340
movzx   eax, al
test    eax, eax
jnz     short loc_37aa7508
xor     al, al
jmp     loc_37aa7662
jmp     short loc_37aa74cc
mov     ecx, [ebp+var_8]
mov     edx, [ecx]
push    edx
mov     ecx, [ebp+arg_0]
call    loc_37a1ebe0
jmp     loc_37aa7662
mov     eax, [ebp+var_8]
movzx   ecx, word ptr [eax+0eh]
and     ecx, 800h
jz      short loc_37aa7532
mov     [ebp+var_2], 1
jmp     short loc_37aa7536
mov     [ebp+var_2], 0
movzx   edx, [ebp+var_2]
push    edx
mov     ecx, [ebp+var_8]
call    sub_37a148a0
push    eax
mov     ecx, [ebp+var_8]
call    loc_37a148c0
push    eax
mov     ecx, [ebp+arg_0]
call    loc_37a1ed20
jmp     loc_37aa7662
mov     eax, [ebp+var_8]
movzx   ecx, word ptr [eax+0eh]
and     ecx, 200h
jz      short loc_37aa7572
mov     [ebp+var_1c], 1
jmp     short loc_37aa7579
mov     [ebp+var_1c], 0
movzx   edx, byte ptr [ebp+var_1c]
test    edx, edx
jz      short loc_37aa75a2
mov     eax, [ebp+var_8]
sub     esp, 8
movsd   xmm0, qword ptr [eax]
movsd   [esp+60h+var_60], xmm0
mov     ecx, [ebp+arg_0]
call    sub_37a1edd0
jmp     loc_37aa7662
jmp     loc_37aa7662
mov     ecx, [ebp+var_8]
movzx   edx, word ptr [ecx+0eh]
and     edx, 20h
jz      short loc_37aa75b7
mov     [ebp+var_20], 1
jmp     short loc_37aa75be
mov     [ebp+var_20], 0
movzx   eax, byte ptr [ebp+var_20]
test    eax, eax
jz      short loc_37aa75de
mov     ecx, [ebp+var_8]
mov     edx, [ecx]
push    edx
mov     ecx, [ebp+arg_0]
call    sub_37a1ef40
jmp     loc_37aa7662
jmp     loc_37aa7662
mov     eax, [ebp+var_8]
movzx   ecx, word ptr [eax+0eh]
and     ecx, 40h
jz      short loc_37aa75f3
mov     [ebp+var_24], 1
jmp     short loc_37aa75fa
mov     [ebp+var_24], 0
movzx   edx, byte ptr [ebp+var_24]
test    edx, edx
jz      short loc_37aa7614
mov     eax, [ebp+var_8]
mov     ecx, [eax]
push    ecx
mov     ecx, [ebp+arg_0]
call    sub_37a1eef0
jmp     short loc_37aa7662
jmp     short loc_37aa7662
mov     edx, [ebp+var_8]
movzx   eax, word ptr [edx+0eh]
and     eax, 80h
jz      short loc_37aa762b
mov     [ebp+var_28], 1
jmp     short loc_37aa7632
mov     [ebp+var_28], 0
movzx   ecx, byte ptr [ebp+var_28]
test    ecx, ecx
jz      short loc_37aa7650
mov     edx, [ebp+var_8]
mov     eax, [edx+4]
push    eax
mov     ecx, [edx]
push    ecx
mov     ecx, [ebp+arg_0]
call    loc_37a1eeb0
jmp     short loc_37aa7662
jmp     short loc_37aa7662
mov     edx, [ebp+var_8]
mov     eax, [edx+4]
push    eax
mov     ecx, [edx]
push    ecx
mov     ecx, [ebp+arg_0]
call    sub_37a1ee20
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 38h
mov     [ebp-8], ecx
mov     eax, [ebp+8]
push    eax
lea     ecx, [ebp-10h]
push    ecx
mov     ecx, [ebp-8]
call    sub_37a1d130
mov     edx, [ebp-8]
mov     eax, [edx+8]
mov     [ebp-18h], eax
mov     ecx, [ebp-8]
mov     edx, [ecx]
shl     edx, 5
add     edx, [ebp-18h]
mov     [ebp-1ch], edx
mov     eax, [ebp-1ch]
mov     [ebp-24h], eax
lea     ecx, [ebp-28h]
mov     [ebp-20h], ecx
mov     edx, [ebp-20h]
mov     eax, [ebp-24h]
mov     [edx], eax
mov     ecx, [ebp-10h]
cmp     ecx, [ebp-28h]
jz      short loc_37aa76d5
mov     dword ptr [ebp-0ch], 1
jmp     short loc_37aa76dc
mov     dword ptr [ebp-0ch], 0
mov     dl, [ebp-0ch]
mov     [ebp-1], dl
movzx   eax, byte ptr [ebp-1]
test    eax, eax
jz      short loc_37aa7726
lea     ecx, [ebp-14h]
mov     [ebp-2ch], ecx
mov     edx, [ebp-2ch]
mov     eax, [ebp-10h]
mov     [edx], eax
mov     ecx, 1
shl     ecx, 5
add     ecx, [ebp-14h]
mov     [ebp-30h], ecx
mov     edx, [ebp-30h]
mov     [ebp-34h], edx
mov     eax, [ebp-34h]
push    eax
mov     ecx, [ebp-14h]
push    ecx
lea     edx, [ebp-38h]
push    edx
mov     ecx, [ebp-8]
call    sub_37aac790
mov     al, 1
jmp     short loc_37aa7728
jmp     short loc_37aa7728
xor     al, al
mov     esp, ebp
pop     ebp
retn    4
dec     ebx
cmp     eax, [eax-43h]
dec     ecx
mov     dl, 0d0h
pop     es
mov     ch, 9dh
pop     esp
inc     esi
imul    ebp, [ebx+2], 0ba93ef10h
adc     dword ptr [ecx], 0ffffff86h
fisttp  word ptr [eax+7ed65b32h]
and     [edx], ebp
fadd    qword ptr [ecx]
pop     eax
ror     byte ptr [edi-25f199d3h], 1
test    eax, edi
jmp     near ptr 0d3b6626ah
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     [ebp-10h], ecx
mov     eax, [ebp+8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-7], dl
mov     eax, [ebp+8]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+8]
mov     [edx], ecx
mov     eax, [ebp+8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-4], dl
movsx   eax, byte ptr [ebp-4]
cmp     eax, 75h
jnz     short loc_37aa8532
mov     ecx, [ebp+8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-8], al
mov     ecx, [ebp+8]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+8]
mov     [eax], edx
mov     byte ptr [ebp-1], 1
jmp     short loc_37aa8536
jmp     short loc_37aa8536
mov     byte ptr [ebp-1], 0
movzx   ecx, byte ptr [ebp-1]
test    ecx, ecx
jz      loc_37aa8612
mov     edx, [ebp+8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp-5], cl
movsx   edx, byte ptr [ebp-5]
cmp     edx, 6ch
jnz     short loc_37aa8574
mov     eax, [ebp+8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-9], dl
mov     eax, [ebp+8]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+8]
mov     [edx], ecx
mov     byte ptr [ebp-2], 1
jmp     short loc_37aa8578
jmp     short loc_37aa8578
mov     byte ptr [ebp-2], 0
movzx   eax, byte ptr [ebp-2]
test    eax, eax
jz      loc_37aa8612
mov     ecx, [ebp+8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-6], al
movsx   ecx, byte ptr [ebp-6]
cmp     ecx, 6ch
jnz     short loc_37aa85b6
mov     edx, [ebp+8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp-0ah], cl
mov     edx, [ebp+8]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+8]
mov     [ecx], eax
mov     byte ptr [ebp-3], 1
jmp     short loc_37aa85ba
jmp     short loc_37aa85ba
mov     byte ptr [ebp-3], 0
movzx   edx, byte ptr [ebp-3]
test    edx, edx
jz      short loc_37aa8612
mov     ecx, [ebp+0ch]
call    sub_37a1efd0
movzx   eax, al
test    eax, eax
jnz     short loc_37aa8610
mov     ecx, [ebp+8]
mov     edx, [ebp+8]
mov     eax, [ecx]
sub     eax, [edx+4]
mov     [ebp-14h], eax
mov     ecx, [ebp-14h]
push    ecx
push    10h
mov     ecx, [ebp-10h]
add     ecx, 18h
call    sub_37a198c0
xor     edx, edx
jnz     short loc_37aa85d1
mov     ecx, [ebp-10h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   eax, al
test    eax, eax
jz      short loc_37aa8608
jmp     short loc_37aa8651
xor     ecx, ecx
jnz     short loc_37aa85f4
xor     edx, edx
jnz     short loc_37aa85d1
jmp     short loc_37aa8651
mov     eax, [ebp+8]
mov     ecx, [ebp+8]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp-18h], edx
mov     eax, [ebp-18h]
push    eax
push    3
mov     ecx, [ebp-10h]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aa8612
mov     ecx, [ebp-10h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aa8649
jmp     short loc_37aa8651
xor     eax, eax
jnz     short loc_37aa8635
xor     ecx, ecx
jnz     short loc_37aa8612
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aa8660
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 1c8h
push    esi
mov     [ebp+var_18], ecx
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     edx, [eax+4]
mov     [ebp+var_4c], ecx
mov     [ebp+var_48], edx
mov     eax, [ebp+arg_0]
mov     [ebp+var_44], eax
mov     [ebp+var_4], 0
lea     ecx, [ebp+var_4c]
mov     [ebp+var_10], ecx
mov     byte ptr [ebp+var_4], 1
mov     edx, [ebp+var_10]
mov     [ebp+var_158], edx
mov     eax, [ebp+var_158]
mov     ecx, [ebp+var_158]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp+var_94], edx
xorps   xmm0, xmm0
movsd   [ebp+var_54], xmm0
mov     [ebp+var_36], 0
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_7a], dl
movsx   eax, [ebp+var_7a]
cmp     eax, 2dh
jnz     short loc_37aa871a
mov     ecx, [ebp+var_10]
mov     [ebp+var_b0], ecx
mov     edx, [ebp+var_b0]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_a3], cl
mov     edx, [ebp+var_b0]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+var_b0]
mov     [ecx], eax
mov     [ebp+var_13], 1
jmp     short loc_37aa871e
jmp     short loc_37aa871e
mov     [ebp+var_13], 0
mov     [ebp+var_1c], 0
xorps   xmm0, xmm0
movlpd  [ebp+var_24], xmm0
mov     [ebp+var_14], 0
mov     [ebp+var_3c], 0
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_87], cl
movsx   edx, [ebp+var_87]
cmp     edx, 30h
jnz     short loc_37aa8789
mov     [ebp+var_1c], 0
mov     eax, [ebp+var_10]
mov     [ebp+var_b4], eax
mov     ecx, [ebp+var_b4]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_a4], al
mov     ecx, [ebp+var_b4]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_b4]
mov     [eax], edx
jmp     loc_37aa8ee9
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_88], al
movsx   ecx, [ebp+var_88]
cmp     ecx, 31h
jl      loc_37aa8974
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_89], cl
movsx   edx, [ebp+var_89]
cmp     edx, 39h
jg      loc_37aa8974
mov     eax, [ebp+var_10]
mov     [ebp+var_b8], eax
mov     ecx, [ebp+var_b8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_8a], al
mov     ecx, [ebp+var_b8]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_b8]
mov     [eax], edx
movsx   ecx, [ebp+var_8a]
sub     ecx, 30h
mov     [ebp+var_1c], ecx
movzx   edx, [ebp+var_13]
test    edx, edx
jz      loc_37aa88c9
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_8b], dl
movsx   eax, [ebp+var_8b]
cmp     eax, 30h
jl      loc_37aa88c4
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_8c], al
movsx   ecx, [ebp+var_8c]
cmp     ecx, 39h
jg      loc_37aa88c4
cmp     [ebp+var_1c], 0ccccccch
jb      short loc_37aa887e
cmp     [ebp+var_1c], 0ccccccch
jnz     short loc_37aa886d
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_8d], cl
movsx   edx, [ebp+var_8d]
cmp     edx, 38h
jle     short loc_37aa887e
mov     eax, [ebp+var_1c]
xor     ecx, ecx
mov     dword ptr [ebp+var_24], eax
mov     dword ptr [ebp+var_24+4], ecx
mov     [ebp+var_14], 1
jmp     short loc_37aa88c4
mov     edx, [ebp+var_10]
mov     [ebp+var_bc], edx
mov     eax, [ebp+var_bc]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_55], dl
mov     eax, [ebp+var_bc]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_bc]
mov     [edx], ecx
imul    eax, [ebp+var_1c], 0ah
movsx   ecx, [ebp+var_55]
lea     edx, [eax+ecx-30h]
mov     [ebp+var_1c], edx
mov     eax, [ebp+var_3c]
add     eax, 1
mov     [ebp+var_3c], eax
jmp     loc_37aa8808
jmp     loc_37aa896f
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_56], al
movsx   ecx, [ebp+var_56]
cmp     ecx, 30h
jl      loc_37aa896f
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_57], cl
movsx   edx, [ebp+var_57]
cmp     edx, 39h
jg      short loc_37aa896f
cmp     [ebp+var_1c], 19999999h
jb      short loc_37aa8929
cmp     [ebp+var_1c], 19999999h
jnz     short loc_37aa8918
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_58], dl
movsx   eax, [ebp+var_58]
cmp     eax, 35h
jle     short loc_37aa8929
mov     ecx, [ebp+var_1c]
xor     edx, edx
mov     dword ptr [ebp+var_24], ecx
mov     dword ptr [ebp+var_24+4], edx
mov     [ebp+var_14], 1
jmp     short loc_37aa896f
mov     eax, [ebp+var_10]
mov     [ebp+var_c0], eax
mov     ecx, [ebp+var_c0]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_59], al
mov     ecx, [ebp+var_c0]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_c0]
mov     [eax], edx
imul    ecx, [ebp+var_1c], 0ah
movsx   edx, [ebp+var_59]
lea     eax, [ecx+edx-30h]
mov     [ebp+var_1c], eax
mov     ecx, [ebp+var_3c]
add     ecx, 1
mov     [ebp+var_3c], ecx
jmp     loc_37aa88c9
jmp     loc_37aa8ee9
xor     edx, edx
jz      loc_37aa8e79
mov     [ebp+var_36], 1
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_5a], dl
movsx   eax, [ebp+var_5a]
cmp     eax, 4eh
jnz     short loc_37aa89c7
mov     ecx, [ebp+var_10]
mov     [ebp+var_c4], ecx
mov     edx, [ebp+var_c4]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_a5], cl
mov     edx, [ebp+var_c4]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+var_c4]
mov     [ecx], eax
mov     [ebp+var_26], 1
jmp     short loc_37aa89cb
jmp     short loc_37aa89cb
mov     [ebp+var_26], 0
movzx   edx, [ebp+var_26]
test    edx, edx
jz      loc_37aa8a8a
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_5b], dl
movsx   eax, [ebp+var_5b]
cmp     eax, 61h
jnz     short loc_37aa8a1e
mov     ecx, [ebp+var_10]
mov     [ebp+var_c8], ecx
mov     edx, [ebp+var_c8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_a6], cl
mov     edx, [ebp+var_c8]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+var_c8]
mov     [ecx], eax
mov     [ebp+var_27], 1
jmp     short loc_37aa8a22
jmp     short loc_37aa8a22
mov     [ebp+var_27], 0
movzx   edx, [ebp+var_27]
test    edx, edx
jz      short loc_37aa8a8a
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_5c], dl
movsx   eax, [ebp+var_5c]
cmp     eax, 4eh
jnz     short loc_37aa8a71
mov     ecx, [ebp+var_10]
mov     [ebp+var_cc], ecx
mov     edx, [ebp+var_cc]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_a7], cl
mov     edx, [ebp+var_cc]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+var_cc]
mov     [ecx], eax
mov     [ebp+var_28], 1
jmp     short loc_37aa8a75
jmp     short loc_37aa8a75
mov     [ebp+var_28], 0
movzx   edx, [ebp+var_28]
test    edx, edx
jz      short loc_37aa8a8a
call    loc_37a18570
fstp    [ebp+var_54]
jmp     loc_37aa8e77
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_5d], dl
movsx   eax, [ebp+var_5d]
cmp     eax, 49h
jnz     short loc_37aa8ad1
mov     ecx, [ebp+var_10]
mov     [ebp+var_d0], ecx
mov     edx, [ebp+var_d0]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_a8], cl
mov     edx, [ebp+var_d0]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+var_d0]
mov     [ecx], eax
mov     [ebp+var_29], 1
jmp     short loc_37aa8ad5
jmp     short loc_37aa8ad5
mov     [ebp+var_29], 0
movzx   edx, [ebp+var_29]
test    edx, edx
jz      loc_37aa8e07
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_5e], dl
movsx   eax, [ebp+var_5e]
cmp     eax, 6eh
jnz     short loc_37aa8b28
mov     ecx, [ebp+var_10]
mov     [ebp+var_d4], ecx
mov     edx, [ebp+var_d4]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_a9], cl
mov     edx, [ebp+var_d4]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+var_d4]
mov     [ecx], eax
mov     [ebp+var_2a], 1
jmp     short loc_37aa8b2c
jmp     short loc_37aa8b2c
mov     [ebp+var_2a], 0
movzx   edx, [ebp+var_2a]
test    edx, edx
jz      loc_37aa8e07
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_5f], dl
movsx   eax, [ebp+var_5f]
cmp     eax, 66h
jnz     short loc_37aa8b7f
mov     ecx, [ebp+var_10]
mov     [ebp+var_d8], ecx
mov     edx, [ebp+var_d8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_111], cl
mov     edx, [ebp+var_d8]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+var_d8]
mov     [ecx], eax
mov     [ebp+var_2b], 1
jmp     short loc_37aa8b83
jmp     short loc_37aa8b83
mov     [ebp+var_2b], 0
movzx   edx, [ebp+var_2b]
test    edx, edx
jz      loc_37aa8e07
movzx   eax, [ebp+var_13]
test    eax, eax
jz      short loc_37aa8bbb
call    sub_37a18560
fstp    [ebp+var_1d4]
movsd   xmm0, [ebp+var_1d4]
xorps   xmm0, ds:xmmword_37b03be0
movsd   [ebp+var_1cc], xmm0
jmp     short loc_37aa8bc6
call    sub_37a18560
fstp    [ebp+var_1cc]
movsd   xmm0, [ebp+var_1cc]
movsd   [ebp+var_54], xmm0
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_60], al
movsx   ecx, [ebp+var_60]
cmp     ecx, 69h
jnz     loc_37aa8e05
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_61], cl
movsx   edx, [ebp+var_61]
cmp     edx, 69h
jnz     short loc_37aa8c31
mov     eax, [ebp+var_10]
mov     [ebp+var_dc], eax
mov     ecx, [ebp+var_dc]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_131], al
mov     ecx, [ebp+var_dc]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_dc]
mov     [eax], edx
mov     [ebp+var_2c], 1
jmp     short loc_37aa8c35
jmp     short loc_37aa8c35
mov     [ebp+var_2c], 0
movzx   ecx, [ebp+var_2c]
test    ecx, ecx
jz      loc_37aa8d95
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_62], cl
movsx   edx, [ebp+var_62]
cmp     edx, 6eh
jnz     short loc_37aa8c88
mov     eax, [ebp+var_10]
mov     [ebp+var_e0], eax
mov     ecx, [ebp+var_e0]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_132], al
mov     ecx, [ebp+var_e0]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_e0]
mov     [eax], edx
mov     [ebp+var_2d], 1
jmp     short loc_37aa8c8c
jmp     short loc_37aa8c8c
mov     [ebp+var_2d], 0
movzx   ecx, [ebp+var_2d]
test    ecx, ecx
jz      loc_37aa8d95
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_63], cl
movsx   edx, [ebp+var_63]
cmp     edx, 69h
jnz     short loc_37aa8cdf
mov     eax, [ebp+var_10]
mov     [ebp+var_e4], eax
mov     ecx, [ebp+var_e4]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_99], al
mov     ecx, [ebp+var_e4]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_e4]
mov     [eax], edx
mov     [ebp+var_2e], 1
jmp     short loc_37aa8ce3
jmp     short loc_37aa8ce3
mov     [ebp+var_2e], 0
movzx   ecx, [ebp+var_2e]
test    ecx, ecx
jz      loc_37aa8d95
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_64], cl
movsx   edx, [ebp+var_64]
cmp     edx, 74h
jnz     short loc_37aa8d36
mov     eax, [ebp+var_10]
mov     [ebp+var_e8], eax
mov     ecx, [ebp+var_e8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_9a], al
mov     ecx, [ebp+var_e8]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_e8]
mov     [eax], edx
mov     [ebp+var_2f], 1
jmp     short loc_37aa8d3a
jmp     short loc_37aa8d3a
mov     [ebp+var_2f], 0
movzx   ecx, [ebp+var_2f]
test    ecx, ecx
jz      short loc_37aa8d95
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_65], cl
movsx   edx, [ebp+var_65]
cmp     edx, 79h
jnz     short loc_37aa8d89
mov     eax, [ebp+var_10]
mov     [ebp+var_ec], eax
mov     ecx, [ebp+var_ec]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_9b], al
mov     ecx, [ebp+var_ec]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_ec]
mov     [eax], edx
mov     [ebp+var_30], 1
jmp     short loc_37aa8d8d
jmp     short loc_37aa8d8d
mov     [ebp+var_30], 0
movzx   ecx, [ebp+var_30]
test    ecx, ecx
jnz     short loc_37aa8e05
mov     edx, [ebp+var_10]
mov     [ebp+var_15c], edx
mov     eax, [ebp+var_15c]
mov     ecx, [ebp+var_15c]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp+var_1a4], edx
mov     eax, [ebp+var_1a4]
push    eax
push    3
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aa8d95
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aa8dfd
mov     byte ptr [ebp+var_4], 0
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_4c]
mov     ecx, [ebp+var_48]
mov     edx, [ebp+var_44]
mov     [edx], eax
mov     [edx+4], ecx
jmp     loc_37aa9b9b
xor     eax, eax
jnz     short loc_37aa8dcd
xor     ecx, ecx
jnz     short loc_37aa8d95
jmp     short loc_37aa8e77
mov     edx, [ebp+var_10]
mov     [ebp+var_160], edx
mov     eax, [ebp+var_160]
mov     ecx, [ebp+var_160]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp+var_1a8], edx
mov     eax, [ebp+var_1a8]
push    eax
push    3
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aa8e07
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aa8e6f
mov     byte ptr [ebp+var_4], 0
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_4c]
mov     ecx, [ebp+var_48]
mov     edx, [ebp+var_44]
mov     [edx], eax
mov     [edx+4], ecx
jmp     loc_37aa9b9b
xor     eax, eax
jnz     short loc_37aa8e3f
xor     ecx, ecx
jnz     short loc_37aa8e07
jmp     short loc_37aa8ee9
mov     edx, [ebp+var_10]
mov     [ebp+var_140], edx
mov     eax, [ebp+var_140]
mov     ecx, [ebp+var_140]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp+var_1ac], edx
mov     eax, [ebp+var_1ac]
push    eax
push    3
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aa8e79
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aa8ee1
mov     byte ptr [ebp+var_4], 0
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_4c]
mov     ecx, [ebp+var_48]
mov     edx, [ebp+var_44]
mov     [edx], eax
mov     [edx+4], ecx
jmp     loc_37aa9b9b
xor     eax, eax
jnz     short loc_37aa8eb1
xor     ecx, ecx
jnz     short loc_37aa8e79
mov     [ebp+var_12], 0
movzx   edx, [ebp+var_14]
test    edx, edx
jz      loc_37aa90ba
movzx   eax, [ebp+var_13]
test    eax, eax
jz      loc_37aa8fe2
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_66], al
movsx   ecx, [ebp+var_66]
cmp     ecx, 30h
jl      loc_37aa8fdd
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_67], cl
movsx   edx, [ebp+var_67]
cmp     edx, 39h
jg      loc_37aa8fdd
cmp     dword ptr [ebp+var_24+4], 0ccccccch
jb      short loc_37aa8f82
ja      short loc_37aa8f47
cmp     dword ptr [ebp+var_24], 0cccccccch
jb      short loc_37aa8f82
cmp     dword ptr [ebp+var_24], 0cccccccch
jnz     short loc_37aa8f6c
cmp     dword ptr [ebp+var_24+4], 0ccccccch
jnz     short loc_37aa8f6c
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_68], dl
movsx   eax, [ebp+var_68]
cmp     eax, 38h
jle     short loc_37aa8f82
mov     edx, dword ptr [ebp+var_24+4]
mov     ecx, dword ptr [ebp+var_24]
call    __ultod3
movsd   [ebp+var_54], xmm0
mov     [ebp+var_12], 1
jmp     short loc_37aa8fdd
mov     ecx, [ebp+var_10]
mov     [ebp+var_f0], ecx
mov     edx, [ebp+var_f0]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_69], cl
mov     edx, [ebp+var_f0]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+var_f0]
mov     [ecx], eax
push    0
push    0ah
mov     edx, dword ptr [ebp+var_24+4]
push    edx
mov     eax, dword ptr [ebp+var_24]
push    eax
call    __allmul
movsx   ecx, [ebp+var_69]
sub     ecx, 30h
xor     esi, esi
add     eax, ecx
adc     edx, esi
mov     dword ptr [ebp+var_24], eax
mov     dword ptr [ebp+var_24+4], edx
mov     edx, [ebp+var_3c]
add     edx, 1
mov     [ebp+var_3c], edx
jmp     loc_37aa8f05
jmp     loc_37aa90ba
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_6a], dl
movsx   eax, [ebp+var_6a]
cmp     eax, 30h
jl      loc_37aa90ba
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_6b], al
movsx   ecx, [ebp+var_6b]
cmp     ecx, 39h
jg      loc_37aa90ba
cmp     dword ptr [ebp+var_24+4], 19999999h
jb      short loc_37aa905f
ja      short loc_37aa9024
cmp     dword ptr [ebp+var_24], 99999999h
jb      short loc_37aa905f
cmp     dword ptr [ebp+var_24], 99999999h
jnz     short loc_37aa9049
cmp     dword ptr [ebp+var_24+4], 19999999h
jnz     short loc_37aa9049
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_6c], cl
movsx   edx, [ebp+var_6c]
cmp     edx, 35h
jle     short loc_37aa905f
mov     edx, dword ptr [ebp+var_24+4]
mov     ecx, dword ptr [ebp+var_24]
call    __ultod3
movsd   [ebp+var_54], xmm0
mov     [ebp+var_12], 1
jmp     short loc_37aa90ba
mov     eax, [ebp+var_10]
mov     [ebp+var_f4], eax
mov     ecx, [ebp+var_f4]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_6d], al
mov     ecx, [ebp+var_f4]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_f4]
mov     [eax], edx
push    0
push    0ah
mov     ecx, dword ptr [ebp+var_24+4]
push    ecx
mov     edx, dword ptr [ebp+var_24]
push    edx
call    __allmul
movsx   ecx, [ebp+var_6d]
sub     ecx, 30h
xor     esi, esi
add     eax, ecx
adc     edx, esi
mov     dword ptr [ebp+var_24], eax
mov     dword ptr [ebp+var_24+4], edx
mov     edx, [ebp+var_3c]
add     edx, 1
mov     [ebp+var_3c], edx
jmp     loc_37aa8fe2
movzx   eax, [ebp+var_12]
test    eax, eax
jz      loc_37aa91a2
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_6e], al
movsx   ecx, [ebp+var_6e]
cmp     ecx, 30h
jl      loc_37aa91a2
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_6f], cl
movsx   edx, [ebp+var_6f]
cmp     edx, 39h
jg      loc_37aa91a2
movsd   xmm0, [ebp+var_54]
comisd  xmm0, ds:qword_37b03ba0
jb      short loc_37aa9153
mov     eax, [ebp+var_94]
push    eax
push    0dh
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aa9103
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aa914b
mov     byte ptr [ebp+var_4], 0
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_4c]
mov     ecx, [ebp+var_48]
mov     edx, [ebp+var_44]
mov     [edx], eax
mov     [edx+4], ecx
jmp     loc_37aa9b9b
xor     eax, eax
jnz     short loc_37aa911b
xor     ecx, ecx
jnz     short loc_37aa9103
mov     edx, [ebp+var_10]
mov     [ebp+var_f8], edx
mov     eax, [ebp+var_f8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_70], dl
mov     eax, [ebp+var_f8]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_f8]
mov     [edx], ecx
movsd   xmm0, [ebp+var_54]
mulsd   xmm0, ds:qword_37b03b68
movsx   eax, [ebp+var_70]
sub     eax, 30h
cvtsi2sd xmm1, eax
addsd   xmm0, xmm1
movsd   [ebp+var_54], xmm0
jmp     loc_37aa90c6
mov     [ebp+var_98], 0
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_71], al
movsx   ecx, [ebp+var_71]
cmp     ecx, 2eh
jnz     short loc_37aa91f3
mov     edx, [ebp+var_10]
mov     [ebp+var_fc], edx
mov     eax, [ebp+var_fc]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_9c], dl
mov     eax, [ebp+var_fc]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_fc]
mov     [edx], ecx
mov     [ebp+var_31], 1
jmp     short loc_37aa91f7
jmp     short loc_37aa91f7
mov     [ebp+var_31], 0
movzx   eax, [ebp+var_31]
test    eax, eax
jz      loc_37aa93cc
mov     [ebp+var_150], 0
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_72], al
movsx   ecx, [ebp+var_72]
cmp     ecx, 30h
jl      short loc_37aa9233
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_73], cl
movsx   edx, [ebp+var_73]
cmp     edx, 39h
jle     short loc_37aa92a3
mov     eax, [ebp+var_10]
mov     [ebp+var_144], eax
mov     ecx, [ebp+var_144]
mov     edx, [ebp+var_144]
mov     eax, [ecx]
sub     eax, [edx+4]
mov     [ebp+var_1b0], eax
mov     ecx, [ebp+var_1b0]
push    ecx
push    0eh
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    sub_37a198c0
xor     edx, edx
jnz     short loc_37aa9233
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   eax, al
test    eax, eax
jz      short loc_37aa929b
mov     byte ptr [ebp+var_4], 0
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_4c]
mov     edx, [ebp+var_48]
mov     eax, [ebp+var_44]
mov     [eax], ecx
mov     [eax+4], edx
jmp     loc_37aa9b9b
xor     ecx, ecx
jnz     short loc_37aa926b
xor     edx, edx
jnz     short loc_37aa9233
movzx   eax, [ebp+var_12]
test    eax, eax
jnz     short loc_37aa92f2
movzx   ecx, [ebp+var_14]
test    ecx, ecx
jz      short loc_37aa92c7
mov     edx, dword ptr [ebp+var_24]
mov     [ebp+var_168], edx
mov     eax, dword ptr [ebp+var_24+4]
mov     [ebp+var_164], eax
jmp     short loc_37aa92d8
mov     ecx, [ebp+var_1c]
xor     edx, edx
mov     [ebp+var_168], ecx
mov     [ebp+var_164], edx
mov     edx, [ebp+var_164]
mov     ecx, [ebp+var_168]
call    __ultod3
movsd   [ebp+var_54], xmm0
mov     [ebp+var_12], 1
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_74], dl
movsx   eax, [ebp+var_74]
cmp     eax, 30h
jl      loc_37aa93ca
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_75], al
movsx   ecx, [ebp+var_75]
cmp     ecx, 39h
jg      loc_37aa93ca
cmp     [ebp+var_3c], 11h
jge     short loc_37aa9399
mov     edx, [ebp+var_10]
mov     [ebp+var_100], edx
mov     eax, [ebp+var_100]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_76], dl
mov     eax, [ebp+var_100]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_100]
mov     [edx], ecx
movsd   xmm0, [ebp+var_54]
mulsd   xmm0, ds:qword_37b03b68
movsx   eax, [ebp+var_76]
sub     eax, 30h
cvtsi2sd xmm1, eax
addsd   xmm0, xmm1
movsd   [ebp+var_54], xmm0
mov     ecx, [ebp+var_98]
sub     ecx, 1
mov     [ebp+var_98], ecx
movsd   xmm0, [ebp+var_54]
comisd  xmm0, ds:qword_37b03b50
jbe     short loc_37aa9397
mov     edx, [ebp+var_3c]
add     edx, 1
mov     [ebp+var_3c], edx
jmp     short loc_37aa93c5
mov     eax, [ebp+var_10]
mov     [ebp+var_104], eax
mov     ecx, [ebp+var_104]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_9d], al
mov     ecx, [ebp+var_104]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_104]
mov     [eax], edx
jmp     loc_37aa92f2
jmp     short loc_37aa93d6
mov     [ebp+var_150], 0
mov     [ebp+var_40], 0
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_77], al
movsx   ecx, [ebp+var_77]
cmp     ecx, 65h
jnz     short loc_37aa9424
mov     edx, [ebp+var_10]
mov     [ebp+var_108], edx
mov     eax, [ebp+var_108]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_9e], dl
mov     eax, [ebp+var_108]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_108]
mov     [edx], ecx
mov     [ebp+var_32], 1
jmp     short loc_37aa9428
jmp     short loc_37aa9428
mov     [ebp+var_32], 0
movzx   eax, [ebp+var_32]
test    eax, eax
jnz     short loc_37aa9487
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_78], al
movsx   ecx, [ebp+var_78]
cmp     ecx, 45h
jnz     short loc_37aa9477
mov     edx, [ebp+var_10]
mov     [ebp+var_10c], edx
mov     eax, [ebp+var_10c]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_9f], dl
mov     eax, [ebp+var_10c]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_10c]
mov     [edx], ecx
mov     [ebp+var_33], 1
jmp     short loc_37aa947b
jmp     short loc_37aa947b
mov     [ebp+var_33], 0
movzx   eax, [ebp+var_33]
test    eax, eax
jz      loc_37aa983d
movzx   ecx, [ebp+var_12]
test    ecx, ecx
jnz     short loc_37aa94d6
movzx   edx, [ebp+var_14]
test    edx, edx
jz      short loc_37aa94ab
mov     eax, dword ptr [ebp+var_24]
mov     [ebp+var_170], eax
mov     ecx, dword ptr [ebp+var_24+4]
mov     [ebp+var_16c], ecx
jmp     short loc_37aa94bc
mov     edx, [ebp+var_1c]
xor     eax, eax
mov     [ebp+var_170], edx
mov     [ebp+var_16c], eax
mov     edx, [ebp+var_16c]
mov     ecx, [ebp+var_170]
call    __ultod3
movsd   [ebp+var_54], xmm0
mov     [ebp+var_12], 1
mov     [ebp+var_25], 0
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_79], al
movsx   ecx, [ebp+var_79]
cmp     ecx, 2bh
jnz     short loc_37aa9521
mov     edx, [ebp+var_10]
mov     [ebp+var_110], edx
mov     eax, [ebp+var_110]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_a0], dl
mov     eax, [ebp+var_110]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_110]
mov     [edx], ecx
mov     [ebp+var_34], 1
jmp     short loc_37aa9525
jmp     short loc_37aa9525
mov     [ebp+var_34], 0
movzx   eax, [ebp+var_34]
test    eax, eax
jz      short loc_37aa952f
jmp     short loc_37aa958c
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_85], al
movsx   ecx, [ebp+var_85]
cmp     ecx, 2dh
jnz     short loc_37aa957c
mov     edx, [ebp+var_10]
mov     [ebp+var_130], edx
mov     eax, [ebp+var_130]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_a1], dl
mov     eax, [ebp+var_130]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_130]
mov     [edx], ecx
mov     [ebp+var_35], 1
jmp     short loc_37aa9580
jmp     short loc_37aa9580
mov     [ebp+var_35], 0
movzx   eax, [ebp+var_35]
test    eax, eax
jz      short loc_37aa958c
mov     [ebp+var_25], 1
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_7b], al
movsx   ecx, [ebp+var_7b]
cmp     ecx, 30h
jl      loc_37aa97bd
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_7c], cl
movsx   edx, [ebp+var_7c]
cmp     edx, 39h
jg      loc_37aa97bd
mov     eax, [ebp+var_10]
mov     [ebp+var_118], eax
mov     ecx, [ebp+var_118]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_7d], al
mov     ecx, [ebp+var_118]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_118]
mov     [eax], edx
movsx   ecx, [ebp+var_7d]
sub     ecx, 30h
mov     [ebp+var_40], ecx
movzx   edx, [ebp+var_25]
test    edx, edx
jz      loc_37aa96d2
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_7e], dl
movsx   eax, [ebp+var_7e]
cmp     eax, 30h
jl      loc_37aa96cd
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_7f], al
movsx   ecx, [ebp+var_7f]
cmp     ecx, 39h
jg      loc_37aa96cd
mov     edx, [ebp+var_10]
mov     [ebp+var_11c], edx
mov     eax, [ebp+var_11c]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_80], dl
mov     eax, [ebp+var_11c]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_11c]
mov     [edx], ecx
imul    eax, [ebp+var_40], 0ah
movsx   ecx, [ebp+var_80]
lea     edx, [eax+ecx-30h]
mov     [ebp+var_40], edx
cmp     [ebp+var_40], 0ccccccch
jl      short loc_37aa96c8
mov     eax, [ebp+var_10]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_81], dl
movsx   eax, [ebp+var_81]
cmp     eax, 30h
jl      short loc_37aa96c8
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_82], al
movsx   ecx, [ebp+var_82]
cmp     ecx, 39h
jg      short loc_37aa96c8
mov     edx, [ebp+var_10]
mov     [ebp+var_120], edx
mov     eax, [ebp+var_120]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_a2], dl
mov     eax, [ebp+var_120]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_120]
mov     [edx], ecx
jmp     short loc_37aa9668
jmp     loc_37aa95f9
jmp     loc_37aa97bb
mov     eax, 134h
sub     eax, [ebp+var_98]
mov     [ebp+var_1b4], eax
mov     ecx, [ebp+var_10]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_83], al
movsx   ecx, [ebp+var_83]
cmp     ecx, 30h
jl      loc_37aa97bb
mov     edx, [ebp+var_10]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_84], cl
movsx   edx, [ebp+var_84]
cmp     edx, 39h
jg      loc_37aa97bb
mov     eax, [ebp+var_10]
mov     [ebp+var_124], eax
mov     ecx, [ebp+var_124]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_8e], al
mov     ecx, [ebp+var_124]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+var_124]
mov     [eax], edx
imul    ecx, [ebp+var_40], 0ah
movsx   edx, [ebp+var_8e]
lea     eax, [ecx+edx-30h]
mov     [ebp+var_40], eax
mov     ecx, [ebp+var_40]
cmp     ecx, [ebp+var_1b4]
jle     short loc_37aa97b6
mov     edx, [ebp+var_94]
push    edx
push    0dh
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    sub_37a198c0
xor     eax, eax
jnz     short loc_37aa9766
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aa97ae
mov     byte ptr [ebp+var_4], 0
mov     [ebp+var_4], 0ffffffffh
mov     edx, [ebp+var_4c]
mov     eax, [ebp+var_48]
mov     ecx, [ebp+var_44]
mov     [ecx], edx
mov     [ecx+4], eax
jmp     loc_37aa9b9b
xor     edx, edx
jnz     short loc_37aa977e
xor     eax, eax
jnz     short loc_37aa9766
jmp     loc_37aa96e3
jmp     short loc_37aa982d
mov     ecx, [ebp+var_10]
mov     [ebp+var_148], ecx
mov     edx, [ebp+var_148]
mov     eax, [ebp+var_148]
mov     ecx, [edx]
sub     ecx, [eax+4]
mov     [ebp+var_1bc], ecx
mov     edx, [ebp+var_1bc]
push    edx
push    0fh
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    sub_37a198c0
xor     eax, eax
jnz     short loc_37aa97bd
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aa9825
mov     byte ptr [ebp+var_4], 0
mov     [ebp+var_4], 0ffffffffh
mov     edx, [ebp+var_4c]
mov     eax, [ebp+var_48]
mov     ecx, [ebp+var_44]
mov     [ecx], edx
mov     [ecx+4], eax
jmp     loc_37aa9b9b
xor     edx, edx
jnz     short loc_37aa97f5
xor     eax, eax
jnz     short loc_37aa97bd
movzx   ecx, [ebp+var_25]
test    ecx, ecx
jz      short loc_37aa983d
mov     edx, [ebp+var_40]
neg     edx
mov     [ebp+var_40], edx
mov     [ebp+var_11], 1
xor     eax, eax
jz      loc_37aa99c3
xor     ecx, ecx
jz      short loc_37aa98a9
mov     [ebp+var_1b8], 0
mov     edx, [ebp+var_10]
mov     [ebp+var_14c], edx
mov     eax, [ebp+var_14c]
mov     ecx, [ebp+var_14c]
mov     edx, [eax]
sub     edx, [ecx+4]
sub     edx, [ebp+var_94]
mov     [ebp+var_17c], edx
mov     eax, [ebp+var_1b8]
mov     [ebp+var_180], eax
push    0
mov     ecx, [ebp+var_17c]
push    ecx
mov     edx, [ebp+var_180]
push    edx
mov     ecx, [ebp+arg_4]
call    loc_37a1ed20
mov     [ebp+var_11], al
jmp     loc_37aa99be
mov     [ebp+var_128], 0
mov     [ebp+var_178], 0
mov     [ebp+var_174], 0
mov     eax, [ebp+var_18]
mov     [ebp+var_13c], eax
mov     [ebp+var_138], 0
mov     ecx, [ebp+var_128]
mov     [ebp+var_184], ecx
mov     edx, [ebp+var_128]
sub     edx, 1
mov     [ebp+var_128], edx
cmp     [ebp+var_184], 0
jz      short loc_37aa9930
mov     eax, [ebp+var_178]
mov     cl, [eax]
mov     [ebp+var_86], cl
mov     edx, [ebp+var_178]
add     edx, 1
mov     [ebp+var_178], edx
movzx   eax, [ebp+var_86]
push    eax
lea     ecx, [ebp+var_13c]
call    sub_37a1eba0
jmp     short loc_37aa98da
push    0
lea     ecx, [ebp+var_13c]
call    sub_37a1eba0
mov     ecx, [ebp+var_138]
mov     [ebp+var_188], ecx
mov     edx, [ebp+var_13c]
mov     [ebp+var_12c], edx
mov     eax, [ebp+var_12c]
mov     ecx, [eax+0ch]
sub     ecx, [ebp+var_188]
mov     edx, [ebp+var_12c]
mov     [edx+0ch], ecx
mov     eax, [ebp+var_12c]
mov     ecx, [eax+0ch]
mov     [ebp+var_18c], ecx
mov     edx, [ebp+var_18c]
mov     [ebp+var_198], edx
mov     eax, [ebp+var_138]
mov     [ebp+var_190], eax
mov     ecx, [ebp+var_190]
sub     ecx, 1
mov     [ebp+var_194], ecx
push    1
mov     edx, [ebp+var_194]
push    edx
mov     eax, [ebp+var_198]
push    eax
mov     ecx, [ebp+arg_4]
call    loc_37a1ed20
mov     [ebp+var_11], al
jmp     loc_37aa9b2d
mov     [ebp+var_19c], 0
mov     [ebp+var_1a0], 0
movzx   ecx, [ebp+var_12]
test    ecx, ecx
jz      loc_37aa9a9a
mov     edx, [ebp+var_40]
add     edx, [ebp+var_98]
mov     [ebp+var_154], edx
xor     eax, eax
jz      short loc_37aa9a30
mov     ecx, [ebp+var_40]
push    ecx
mov     edx, [ebp+var_150]
push    edx
mov     eax, [ebp+var_19c]
push    eax
mov     ecx, [ebp+var_1a0]
push    ecx
mov     edx, [ebp+var_154]
push    edx
sub     esp, 8
movsd   xmm0, [ebp+var_54]
movsd   [esp+1fch+var_1fc], xmm0
call    sub_37a19720
add     esp, 1ch
fstp    [ebp+var_54]
jmp     short loc_37aa9a4f
mov     eax, [ebp+var_154]
push    eax
sub     esp, 8
movsd   xmm0, [ebp+var_54]
movsd   [esp+1ech+var_1ec], xmm0
call    sub_37a18e90
add     esp, 0ch
fstp    [ebp+var_54]
movzx   ecx, [ebp+var_13]
test    ecx, ecx
jz      short loc_37aa9a6d
movsd   xmm0, [ebp+var_54]
xorps   xmm0, ds:xmmword_37b03be0
movsd   [ebp+var_1c4], xmm0
jmp     short loc_37aa9a7a
movsd   xmm0, [ebp+var_54]
movsd   [ebp+var_1c4], xmm0
sub     esp, 8
movsd   xmm0, [ebp+var_1c4]
movsd   [esp+1e8h+var_1ec+4], xmm0
mov     ecx, [ebp+arg_4]
call    sub_37a1edd0
mov     [ebp+var_11], al
jmp     loc_37aa9b2d
movzx   edx, [ebp+var_36]
test    edx, edx
jz      short loc_37aa9abc
sub     esp, 8
movsd   xmm0, [ebp+var_54]
movsd   [esp+1e8h+var_1ec+4], xmm0
mov     ecx, [ebp+arg_4]
call    sub_37a1edd0
mov     [ebp+var_11], al
jmp     short loc_37aa9b2d
movzx   eax, [ebp+var_14]
test    eax, eax
jz      short loc_37aa9b00
movzx   ecx, [ebp+var_13]
test    ecx, ecx
jz      short loc_37aa9aeb
mov     edx, dword ptr [ebp+var_24]
not     edx
mov     eax, dword ptr [ebp+var_24+4]
not     eax
add     edx, 1
adc     eax, 0
push    eax
push    edx
mov     ecx, [ebp+arg_4]
call    loc_37a1eeb0
mov     [ebp+var_11], al
jmp     short loc_37aa9afe
mov     ecx, dword ptr [ebp+var_24+4]
push    ecx
mov     edx, dword ptr [ebp+var_24]
push    edx
mov     ecx, [ebp+arg_4]
call    sub_37a1ee20
mov     [ebp+var_11], al
jmp     short loc_37aa9b2d
movzx   eax, [ebp+var_13]
test    eax, eax
jz      short loc_37aa9b1e
mov     ecx, [ebp+var_1c]
not     ecx
add     ecx, 1
push    ecx
mov     ecx, [ebp+arg_4]
call    sub_37a1ef40
mov     [ebp+var_11], al
jmp     short loc_37aa9b2d
mov     edx, [ebp+var_1c]
push    edx
mov     ecx, [ebp+arg_4]
call    sub_37a1eef0
mov     [ebp+var_11], al
movzx   eax, [ebp+var_11]
test    eax, eax
jnz     short loc_37aa9b82
mov     ecx, [ebp+var_94]
push    ecx
push    10h
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    sub_37a198c0
xor     edx, edx
jnz     short loc_37aa9b35
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   eax, al
test    eax, eax
jz      short loc_37aa9b7a
mov     byte ptr [ebp+var_4], 0
mov     [ebp+var_4], 0ffffffffh
mov     ecx, [ebp+var_4c]
mov     edx, [ebp+var_48]
mov     eax, [ebp+var_44]
mov     [eax], ecx
mov     [eax+4], edx
jmp     short loc_37aa9b9b
xor     ecx, ecx
jnz     short loc_37aa9b4d
xor     edx, edx
jnz     short loc_37aa9b35
mov     byte ptr [ebp+var_4], 0
mov     [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_4c]
mov     ecx, [ebp+var_48]
mov     edx, [ebp+var_44]
mov     [edx], eax
mov     [edx+4], ecx
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
pop     esi
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 38h
mov     [ebp-14h], ecx
mov     eax, [ebp+8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-8], dl
mov     eax, [ebp+8]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+8]
mov     [edx], ecx
mov     ecx, [ebp+0ch]
call    loc_37a1ece0
movzx   eax, al
test    eax, eax
jnz     short loc_37aa9c21
mov     ecx, [ebp+8]
mov     edx, [ebp+8]
mov     eax, [ecx]
sub     eax, [edx+4]
mov     [ebp-20h], eax
mov     ecx, [ebp-20h]
push    ecx
push    10h
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     edx, edx
jnz     short loc_37aa9bdf
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   eax, al
test    eax, eax
jz      short loc_37aa9c19
jmp     loc_37aaa033
xor     ecx, ecx
jnz     short loc_37aa9c02
xor     edx, edx
jnz     short loc_37aa9bdf
mov     eax, [ebp+8]
push    eax
mov     ecx, [ebp-14h]
call    sub_37aaafb0
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aa9c44
jmp     loc_37aaa033
xor     edx, edx
jnz     short loc_37aa9c2d
mov     eax, [ebp+8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-3], dl
movsx   eax, byte ptr [ebp-3]
cmp     eax, 7dh
jnz     short loc_37aa9c7a
mov     ecx, [ebp+8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-9], al
mov     ecx, [ebp+8]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+8]
mov     [eax], edx
mov     byte ptr [ebp-1], 1
jmp     short loc_37aa9c7e
jmp     short loc_37aa9c7e
mov     byte ptr [ebp-1], 0
movzx   ecx, byte ptr [ebp-1]
test    ecx, ecx
jz      short loc_37aa9cde
push    0
mov     ecx, [ebp+0ch]
call    sub_37a1ec80
movzx   edx, al
test    edx, edx
jnz     short loc_37aa9cd9
mov     eax, [ebp+8]
mov     ecx, [ebp+8]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp-24h], edx
mov     eax, [ebp-24h]
push    eax
push    10h
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aa9c97
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aa9cd1
jmp     loc_37aaa033
xor     eax, eax
jnz     short loc_37aa9cba
xor     ecx, ecx
jnz     short loc_37aa9c97
jmp     loc_37aaa033
mov     dword ptr [ebp-18h], 0
mov     edx, [ebp+8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp-4], cl
movsx   edx, byte ptr [ebp-4]
cmp     edx, 22h
jz      short loc_37aa9d3a
mov     eax, [ebp+8]
mov     ecx, [ebp+8]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp-28h], edx
mov     eax, [ebp-28h]
push    eax
push    4
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aa9cf8
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aa9d32
jmp     loc_37aaa033
xor     eax, eax
jnz     short loc_37aa9d1b
xor     ecx, ecx
jnz     short loc_37aa9cf8
push    1
mov     edx, [ebp+0ch]
push    edx
mov     eax, [ebp+8]
push    eax
mov     ecx, [ebp-14h]
call    near ptr dword_37aaa200
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aa9d63
jmp     loc_37aaa033
xor     edx, edx
jnz     short loc_37aa9d4c
mov     eax, [ebp+8]
push    eax
mov     ecx, [ebp-14h]
call    sub_37aaafb0
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aa9d8a
jmp     loc_37aaa033
xor     edx, edx
jnz     short loc_37aa9d73
mov     eax, [ebp+8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-5], dl
movsx   eax, byte ptr [ebp-5]
cmp     eax, 3ah
jnz     short loc_37aa9dc0
mov     ecx, [ebp+8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-0ah], al
mov     ecx, [ebp+8]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+8]
mov     [eax], edx
mov     byte ptr [ebp-2], 1
jmp     short loc_37aa9dc4
jmp     short loc_37aa9dc4
mov     byte ptr [ebp-2], 0
movzx   ecx, byte ptr [ebp-2]
test    ecx, ecx
jnz     short loc_37aa9e0e
mov     edx, [ebp+8]
mov     eax, [ebp+8]
mov     ecx, [edx]
sub     ecx, [eax+4]
mov     [ebp-2ch], ecx
mov     edx, [ebp-2ch]
push    edx
push    5
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     eax, eax
jnz     short loc_37aa9dcc
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aa9e06
jmp     loc_37aaa033
xor     edx, edx
jnz     short loc_37aa9def
xor     eax, eax
jnz     short loc_37aa9dcc
mov     ecx, [ebp+8]
push    ecx
mov     ecx, [ebp-14h]
call    sub_37aaafb0
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aa9e31
jmp     loc_37aaa033
xor     eax, eax
jnz     short loc_37aa9e1a
mov     ecx, [ebp+0ch]
push    ecx
mov     edx, [ebp+8]
push    edx
mov     ecx, [ebp-14h]
call    near ptr sub_37aaadf0
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   eax, al
test    eax, eax
jz      short loc_37aa9e5c
jmp     loc_37aaa033
xor     ecx, ecx
jnz     short loc_37aa9e45
mov     edx, [ebp+8]
push    edx
mov     ecx, [ebp-14h]
call    sub_37aaafb0
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   eax, al
test    eax, eax
jz      short loc_37aa9e83
jmp     loc_37aaa033
xor     ecx, ecx
jnz     short loc_37aa9e6c
mov     edx, [ebp-18h]
add     edx, 1
mov     [ebp-18h], edx
mov     eax, [ebp+8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-6], dl
mov     al, [ebp-6]
mov     [ebp-1ch], al
cmp     byte ptr [ebp-1ch], 2ch
jz      short loc_37aa9eb1
cmp     byte ptr [ebp-1ch], 7dh
jz      short loc_37aa9ef4
jmp     loc_37aa9f65
mov     ecx, [ebp+8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-0bh], al
mov     ecx, [ebp+8]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+8]
mov     [eax], edx
mov     ecx, [ebp+8]
push    ecx
mov     ecx, [ebp-14h]
call    sub_37aaafb0
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aa9eeb
jmp     loc_37aaa033
xor     eax, eax
jnz     short loc_37aa9ed4
jmp     loc_37aa9fa7
mov     ecx, [ebp+8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-0ch], al
mov     ecx, [ebp+8]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+8]
mov     [eax], edx
mov     ecx, [ebp-18h]
push    ecx
mov     ecx, [ebp+0ch]
call    sub_37a1ec80
movzx   edx, al
test    edx, edx
jnz     short loc_37aa9f60
mov     eax, [ebp+8]
mov     ecx, [ebp+8]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp-30h], edx
mov     eax, [ebp-30h]
push    eax
push    10h
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aa9f1e
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aa9f58
jmp     loc_37aaa033
xor     eax, eax
jnz     short loc_37aa9f41
xor     ecx, ecx
jnz     short loc_37aa9f1e
jmp     loc_37aaa033
mov     edx, [ebp+8]
mov     eax, [ebp+8]
mov     ecx, [edx]
sub     ecx, [eax+4]
mov     [ebp-34h], ecx
mov     edx, [ebp-34h]
push    edx
push    6
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     eax, eax
jnz     short loc_37aa9f65
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aa9f9f
jmp     loc_37aaa033
xor     edx, edx
jnz     short loc_37aa9f88
xor     eax, eax
jnz     short loc_37aa9f65
mov     ecx, 80h
test    ecx, ecx
jz      short loc_37aaa02e
mov     edx, [ebp+8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp-7], cl
movsx   edx, byte ptr [ebp-7]
cmp     edx, 7dh
jnz     short loc_37aaa02e
mov     eax, [ebp-18h]
push    eax
mov     ecx, [ebp+0ch]
call    sub_37a1ec80
movzx   ecx, al
test    ecx, ecx
jnz     short loc_37aaa015
mov     edx, [ebp+8]
mov     eax, [ebp+8]
mov     ecx, [edx]
sub     ecx, [eax+4]
mov     [ebp-38h], ecx
mov     edx, [ebp-38h]
push    edx
push    10h
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     eax, eax
jnz     short loc_37aa9fd6
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aaa00d
jmp     short loc_37aaa033
xor     edx, edx
jnz     short loc_37aa9ff9
xor     eax, eax
jnz     short loc_37aa9fd6
mov     ecx, [ebp+8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-0dh], al
mov     ecx, [ebp+8]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+8]
mov     [eax], edx
jmp     short loc_37aaa033
jmp     loc_37aa9ce5
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 38h
mov     [ebp-14h], ecx
mov     ecx, [ebp+8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-1], al
movsx   ecx, byte ptr [ebp-1]
cmp     ecx, 5ch
jnz     loc_37aaaad0
mov     edx, [ebp+8]
mov     eax, [ebp+8]
mov     ecx, [edx]
sub     ecx, [eax+4]
mov     [ebp-1ch], ecx
mov     edx, [ebp+8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp-8], cl
mov     edx, [ebp+8]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+8]
mov     [ecx], eax
mov     edx, [ebp+8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp-2], cl
mov     edx, 1
test    edx, edx
jz      short loc_37aaa8d7
movzx   eax, byte ptr [ebp-2]
movsx   ecx, ds:byte_37af1960[eax]
test    ecx, ecx
jz      short loc_37aaa8d7
mov     edx, [ebp+8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp-9], cl
mov     edx, [ebp+8]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+8]
mov     [ecx], eax
movzx   edx, byte ptr [ebp-2]
movzx   eax, ds:byte_37af1960[edx]
push    eax
mov     ecx, [ebp+0ch]
call    sub_37a1eba0
jmp     loc_37aaaacb
movsx   ecx, byte ptr [ebp-2]
cmp     ecx, 75h
jnz     loc_37aaaa97
mov     edx, [ebp+8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp-0ah], cl
mov     edx, [ebp+8]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+8]
mov     [ecx], eax
mov     edx, [ebp-1ch]
push    edx
mov     eax, [ebp+8]
push    eax
mov     ecx, [ebp-14h]
call    sub_37aa83e0
mov     [ebp-18h], eax
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aaa925
jmp     loc_37aaac64
xor     edx, edx
jnz     short loc_37aaa90e
cmp     dword ptr [ebp-18h], 0d800h
jb      loc_37aaaa85
cmp     dword ptr [ebp-18h], 0dbffh
ja      loc_37aaaa85
mov     eax, [ebp+8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-5], dl
movsx   eax, byte ptr [ebp-5]
cmp     eax, 5ch
jnz     short loc_37aaa975
mov     ecx, [ebp+8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-0bh], al
mov     ecx, [ebp+8]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+8]
mov     [eax], edx
mov     byte ptr [ebp-3], 1
jmp     short loc_37aaa979
jmp     short loc_37aaa979
mov     byte ptr [ebp-3], 0
movzx   ecx, byte ptr [ebp-3]
test    ecx, ecx
jz      short loc_37aaa9bf
mov     edx, [ebp+8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp-6], cl
movsx   edx, byte ptr [ebp-6]
cmp     edx, 75h
jnz     short loc_37aaa9b3
mov     eax, [ebp+8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-0ch], dl
mov     eax, [ebp+8]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+8]
mov     [edx], ecx
mov     byte ptr [ebp-4], 1
jmp     short loc_37aaa9b7
jmp     short loc_37aaa9b7
mov     byte ptr [ebp-4], 0
movzx   eax, byte ptr [ebp-4]
test    eax, eax
jnz     short loc_37aaa9f3
mov     ecx, [ebp-1ch]
push    ecx
push    9
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     edx, edx
jnz     short loc_37aaa9bf
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   eax, al
test    eax, eax
jz      short loc_37aaa9eb
jmp     loc_37aaac64
xor     ecx, ecx
jnz     short loc_37aaa9d4
xor     edx, edx
jnz     short loc_37aaa9bf
mov     eax, [ebp-1ch]
push    eax
mov     ecx, [ebp+8]
push    ecx
mov     ecx, [ebp-14h]
call    sub_37aa83e0
mov     [ebp-20h], eax
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aaaa1d
jmp     loc_37aaac64
xor     eax, eax
jnz     short loc_37aaaa06
cmp     dword ptr [ebp-20h], 0dc00h
jb      short loc_37aaaa33
cmp     dword ptr [ebp-20h], 0dfffh
jbe     short loc_37aaaa67
mov     ecx, [ebp-1ch]
push    ecx
push    9
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     edx, edx
jnz     short loc_37aaaa33
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   eax, al
test    eax, eax
jz      short loc_37aaaa5f
jmp     loc_37aaac64
xor     ecx, ecx
jnz     short loc_37aaaa48
xor     edx, edx
jnz     short loc_37aaaa33
mov     eax, [ebp-18h]
sub     eax, 0d800h
shl     eax, 0ah
mov     ecx, [ebp-20h]
sub     ecx, 0dc00h
or      eax, ecx
add     eax, 10000h
mov     [ebp-18h], eax
mov     edx, [ebp-18h]
push    edx
mov     eax, [ebp+0ch]
push    eax
call    loc_37a1f290
add     esp, 8
jmp     short loc_37aaaacb
mov     ecx, [ebp-1ch]
push    ecx
push    0ah
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     edx, edx
jnz     short loc_37aaaa97
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   eax, al
test    eax, eax
jz      short loc_37aaaac3
jmp     loc_37aaac64
xor     ecx, ecx
jnz     short loc_37aaaaac
xor     edx, edx
jnz     short loc_37aaaa97
jmp     loc_37aaac5f
movsx   eax, byte ptr [ebp-1]
cmp     eax, 22h
jnz     short loc_37aaab04
mov     ecx, [ebp+8]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-0dh], al
mov     ecx, [ebp+8]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+8]
mov     [eax], edx
push    0
mov     ecx, [ebp+0ch]
call    sub_37a1eba0
jmp     loc_37aaac64
jmp     loc_37aaac5f
movsx   ecx, byte ptr [ebp-1]
cmp     ecx, 20h
jnb     loc_37aaaba4
movsx   edx, byte ptr [ebp-1]
test    edx, edx
jnz     short loc_37aaab5d
mov     eax, [ebp+8]
mov     ecx, [ebp+8]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp-30h], edx
mov     eax, [ebp-30h]
push    eax
push    0bh
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aaab19
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aaab53
jmp     loc_37aaac64
xor     eax, eax
jnz     short loc_37aaab3c
xor     ecx, ecx
jnz     short loc_37aaab19
jmp     short loc_37aaab9f
mov     edx, [ebp+8]
mov     eax, [ebp+8]
mov     ecx, [edx]
sub     ecx, [eax+4]
mov     [ebp-34h], ecx
mov     edx, [ebp-34h]
push    edx
push    0ah
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     eax, eax
jnz     short loc_37aaab5d
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aaab97
jmp     loc_37aaac64
xor     edx, edx
jnz     short loc_37aaab80
xor     eax, eax
jnz     short loc_37aaab5d
jmp     loc_37aaac5f
mov     ecx, [ebp+8]
mov     edx, [ebp+8]
mov     eax, [ecx]
sub     eax, [edx+4]
mov     [ebp-38h], eax
xor     ecx, ecx
jz      short loc_37aaabe5
mov     edx, [ebp+0ch]
push    edx
mov     eax, [ebp+8]
push    eax
call    loc_37aabc40
add     esp, 8
movzx   ecx, al
test    ecx, ecx
jnz     short loc_37aaabd6
mov     dword ptr [ebp-24h], 1
jmp     short loc_37aaabdd
mov     dword ptr [ebp-24h], 0
mov     edx, [ebp-24h]
mov     [ebp-2ch], edx
jmp     short loc_37aaac28
mov     eax, [ebp+8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-7], dl
mov     eax, [ebp+8]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+8]
mov     [edx], ecx
movzx   eax, byte ptr [ebp-7]
push    eax
mov     ecx, [ebp+0ch]
call    sub_37a1eba0
mov     ecx, 1
test    ecx, ecx
jnz     short loc_37aaac1b
mov     dword ptr [ebp-28h], 1
jmp     short loc_37aaac22
mov     dword ptr [ebp-28h], 0
mov     edx, [ebp-28h]
mov     [ebp-2ch], edx
cmp     dword ptr [ebp-2ch], 0
jz      short loc_37aaac5f
mov     eax, [ebp-38h]
push    eax
push    0ch
mov     ecx, [ebp-14h]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aaac2e
mov     ecx, [ebp-14h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aaac57
jmp     short loc_37aaac64
xor     eax, eax
jnz     short loc_37aaac43
xor     ecx, ecx
jnz     short loc_37aaac2e
jmp     loc_37aaa849
mov     esp, ebp
pop     ebp
retn    8
mov     esi, 2438c78ch
xor     esi, ebp
dec     eax
rep in al, dx
jno     short loc_37aaae1c
dec     edi
push    edx
int     3
or      [eax+3eh], ebx
mov     ecx, 0d4f52803h
sbb     eax, 0d86db3fch
mov     dl, 3
das
pop     esp
adc     eax, [ebp-2eh]
or      [edi], dl
rcl     bl, 0bfh
sub     [edx], ebx
fldenv  byte ptr [edi+12a8ae9eh]
jz      short loc_37aaade8
push    ss
adc     eax, 0daabd332h
add     [esi], dl
sti
dec     ebx
adc     [ecx+21ed5ee2h], bh
xchg    eax, esp
mov     ebp, 0d06b8d99h
in      eax, dx
inc     ebx
stc
and     dword ptr [esi], 3ah
fisub   word ptr [ebx-2c825110h]
shl     dword ptr [esi+5b767d4fh], 0bdh
ficomp  dword ptr [ecx]
pop     esi
div     byte ptr [eax-6f0db785h]
mov     al, 16h
sbb     eax, edi
repne pop ebx
jle     short loc_37aaae76
dec     esp
dec     ebp
les     esi, [eax+eax*8+32h]
push    edi
iret
cmc
cmp     esi, [esi+2f0330b2h]
cmp     eax, 0cabcba0ah
int     3
push    esi
cmp     eax, 358014feh
jbe     short loc_37aaae09
push    es
push    ecx
rol     byte ptr [ecx+261963e6h], 83h
leave
adc     ah, ch
cld
or      [ebx-5ah], edi
mov     ebp, 41e76858h
and     ebx, [ebx-50b3a151h]
xchg    esp, [edi+ebx*8-36f080e3h]
xlat
inc     edi
fiadd   word ptr [ebx]
pop     eax
retf    12a5h
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     edx, [eax+4]
mov     [ebp+var_14], ecx
mov     [ebp+var_10], edx
mov     eax, [ebp+arg_0]
mov     [ebp+var_c], eax
lea     ecx, [ebp+var_14]
mov     [ebp+var_8], ecx
mov     edx, [ebp+var_8]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_1], cl
movsx   edx, [ebp+var_1]
cmp     edx, 20h
jz      short loc_37aaaf7e
movsx   eax, [ebp+var_1]
cmp     eax, 0ah
jz      short loc_37aaaf7e
movsx   ecx, [ebp+var_1]
cmp     ecx, 0dh
jz      short loc_37aaaf7e
movsx   edx, [ebp+var_1]
cmp     edx, 9
jnz     short loc_37aaaf97
mov     eax, [ebp+var_8]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_2], dl
mov     eax, [ebp+var_8]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+var_8]
mov     [edx], ecx
jmp     short loc_37aaaf50
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_10]
mov     edx, [ebp+var_c]
mov     [edx], eax
mov     [edx+4], ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     [ebp+var_18], ecx
mov     eax, [ebp+arg_0]
push    eax
call    sub_37aaaf30
add     esp, 4
mov     ecx, 20h
test    ecx, ecx
jz      loc_37aab221
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_6], cl
movsx   edx, [ebp+var_6]
cmp     edx, 2fh
jnz     short loc_37aab004
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_e], dl
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+arg_0]
mov     [edx], ecx
mov     [ebp+var_1], 1
jmp     short loc_37aab008
jmp     short loc_37aab008
mov     [ebp+var_1], 0
movzx   eax, [ebp+var_1]
test    eax, eax
jz      loc_37aab221
mov     ecx, [ebp+arg_0]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_7], al
movsx   ecx, [ebp+var_7]
cmp     ecx, 2ah
jnz     short loc_37aab046
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_f], cl
mov     edx, [ebp+arg_0]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
mov     [ebp+var_2], 1
jmp     short loc_37aab04a
jmp     short loc_37aab04a
mov     [ebp+var_2], 0
movzx   edx, [ebp+var_2]
test    edx, edx
jz      loc_37aab15d
mov     eax, 1
test    eax, eax
jz      loc_37aab158
mov     ecx, [ebp+arg_0]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_8], al
movsx   ecx, [ebp+var_8]
test    ecx, ecx
jnz     short loc_37aab0bc
mov     edx, [ebp+arg_0]
mov     eax, [ebp+arg_0]
mov     ecx, [edx]
sub     ecx, [eax+4]
mov     [ebp+var_1c], ecx
mov     edx, [ebp+var_1c]
push    edx
push    11h
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    sub_37a198c0
xor     eax, eax
jnz     short loc_37aab075
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   ecx, al
test    ecx, ecx
jz      short loc_37aab0af
jmp     loc_37aab221
xor     edx, edx
jnz     short loc_37aab098
xor     eax, eax
jnz     short loc_37aab075
jmp     loc_37aab153
mov     ecx, [ebp+arg_0]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_9], al
movsx   ecx, [ebp+var_9]
cmp     ecx, 2ah
jnz     short loc_37aab0ee
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_10], cl
mov     edx, [ebp+arg_0]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
mov     [ebp+var_3], 1
jmp     short loc_37aab0f2
jmp     short loc_37aab0f2
mov     [ebp+var_3], 0
movzx   edx, [ebp+var_3]
test    edx, edx
jz      short loc_37aab13c
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_a], dl
movsx   eax, [ebp+var_a]
cmp     eax, 2fh
jnz     short loc_37aab12c
mov     ecx, [ebp+arg_0]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_11], al
mov     ecx, [ebp+arg_0]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+arg_0]
mov     [eax], edx
mov     [ebp+var_4], 1
jmp     short loc_37aab130
jmp     short loc_37aab130
mov     [ebp+var_4], 0
movzx   ecx, [ebp+var_4]
test    ecx, ecx
jz      short loc_37aab13a
jmp     short loc_37aab158
jmp     short loc_37aab153
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_12], cl
mov     edx, [ebp+arg_0]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
jmp     loc_37aab056
jmp     loc_37aab210
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_b], cl
movsx   edx, [ebp+var_b]
cmp     edx, 2fh
jnz     short loc_37aab18f
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp+var_13], dl
mov     eax, [ebp+arg_0]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+arg_0]
mov     [edx], ecx
mov     [ebp+var_5], 1
jmp     short loc_37aab193
jmp     short loc_37aab193
mov     [ebp+var_5], 0
movzx   eax, [ebp+var_5]
test    eax, eax
jz      short loc_37aab1d1
mov     ecx, [ebp+arg_0]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp+var_c], al
movsx   ecx, [ebp+var_c]
test    ecx, ecx
jz      short loc_37aab1cf
mov     edx, [ebp+arg_0]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp+var_d], cl
mov     edx, [ebp+arg_0]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+arg_0]
mov     [ecx], eax
movsx   edx, [ebp+var_d]
cmp     edx, 0ah
jz      short loc_37aab1cf
jmp     short loc_37aab19b
jmp     short loc_37aab210
mov     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_0]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp+var_20], edx
mov     eax, [ebp+var_20]
push    eax
push    11h
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aab1d1
mov     ecx, [ebp+var_18]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aab208
jmp     short loc_37aab221
xor     eax, eax
jnz     short loc_37aab1f4
xor     ecx, ecx
jnz     short loc_37aab1d1
mov     edx, [ebp+arg_0]
push    edx
call    sub_37aaaf30
add     esp, 4
jmp     loc_37aaafd2
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 60h
mov     [ebp-10h], ecx
mov     eax, [ebp+10h]
mov     [ebp-14h], eax
mov     ecx, [ebp-14h]
sub     ecx, 2
mov     [ebp-14h], ecx
cmp     dword ptr [ebp-14h], 0ah
ja      def_37aab255
mov     edx, [ebp-14h]
jmp     ds:jpt_37aab255[edx*4]
mov     eax, [ebp+10h]
jmp     loc_37aab660
mov     eax, [ebp+8]
mov     [ebp-18h], eax
cmp     dword ptr [ebp+8], 9
jz      short loc_37aab276
cmp     dword ptr [ebp+8], 0bh
jnz     short loc_37aab27f
mov     dword ptr [ebp-18h], 0ah
jmp     short loc_37aab28c
cmp     dword ptr [ebp+8], 5
jnz     short loc_37aab28c
mov     dword ptr [ebp-18h], 6
push    1
mov     ecx, [ebp-10h]
call    sub_37a1f160
mov     ecx, [ebp-18h]
mov     [eax], ecx
push    1
mov     ecx, [ebp-10h]
call    sub_37a1f160
mov     dword ptr [eax], 0
cmp     dword ptr [ebp+10h], 3
jnz     short loc_37aab2be
mov     ecx, [ebp+18h]
call    loc_37a1ece0
mov     [ebp-1], al
jmp     short loc_37aab2c9
mov     ecx, [ebp+18h]
call    loc_37a1ec40
mov     [ebp-1], al
mov     dl, [ebp-1]
mov     [ebp-2], dl
movzx   eax, byte ptr [ebp-2]
test    eax, eax
jnz     short loc_37aab306
mov     ecx, [ebp+14h]
mov     edx, [ebp+14h]
mov     eax, [ecx]
sub     eax, [edx+4]
mov     [ebp-3ch], eax
mov     ecx, [ebp-3ch]
push    ecx
push    10h
mov     ecx, [ebp-10h]
add     ecx, 18h
call    sub_37a198c0
xor     edx, edx
jnz     short loc_37aab2d7
mov     eax, 2
jmp     loc_37aab660
jmp     short loc_37aab325
mov     eax, [ebp+14h]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-5], dl
mov     eax, [ebp+14h]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+14h]
mov     [edx], ecx
mov     eax, [ebp+10h]
jmp     loc_37aab660
push    1
mov     eax, [ebp+18h]
push    eax
mov     ecx, [ebp+14h]
push    ecx
mov     ecx, [ebp-10h]
call    near ptr dword_37aaa200
mov     ecx, [ebp-10h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aab355
mov     eax, 2
jmp     loc_37aab660
jmp     short loc_37aab35d
mov     eax, [ebp+10h]
jmp     loc_37aab660
mov     eax, [ebp+14h]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-6], dl
mov     eax, [ebp+14h]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+14h]
mov     [edx], ecx
mov     eax, [ebp+10h]
jmp     loc_37aab660
mov     eax, [ebp+18h]
push    eax
mov     ecx, [ebp+14h]
push    ecx
mov     ecx, [ebp-10h]
call    near ptr sub_37aaadf0
mov     ecx, [ebp-10h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aab3a8
mov     eax, 2
jmp     loc_37aab660
mov     eax, [ebp+10h]
jmp     loc_37aab660
mov     eax, [ebp+18h]
push    eax
mov     ecx, [ebp+14h]
push    ecx
mov     ecx, [ebp-10h]
call    near ptr sub_37aaadf0
mov     ecx, [ebp-10h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   edx, al
test    edx, edx
jz      short loc_37aab3dc
mov     eax, 2
jmp     loc_37aab660
mov     eax, [ebp+10h]
jmp     loc_37aab660
mov     eax, [ebp+14h]
mov     ecx, [eax]
mov     dl, [ecx]
mov     [ebp-7], dl
mov     eax, [ebp+14h]
mov     ecx, [eax]
add     ecx, 1
mov     edx, [ebp+14h]
mov     [edx], ecx
mov     eax, [ebp-10h]
mov     ecx, [eax+0ch]
sub     ecx, 4
mov     [ebp-40h], ecx
mov     edx, [ebp-40h]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp-10h]
mov     edx, [ecx+0ch]
mov     [edx-4], eax
mov     eax, [ebp+10h]
jmp     loc_37aab660
xor     eax, eax
jz      short loc_37aab451
mov     ecx, [ebp+14h]
mov     edx, [ebp+14h]
mov     eax, [ecx]
sub     eax, [edx+4]
mov     [ebp-44h], eax
mov     ecx, [ebp-44h]
push    ecx
push    4
mov     ecx, [ebp-10h]
add     ecx, 18h
call    sub_37a198c0
xor     edx, edx
jnz     short loc_37aab424
mov     eax, 2
jmp     loc_37aab660
mov     eax, [ebp-10h]
mov     [ebp-1ch], eax
mov     ecx, 1
shl     ecx, 2
mov     edx, [ebp-1ch]
mov     eax, [edx+0ch]
sub     eax, ecx
mov     ecx, [ebp-1ch]
mov     [ecx+0ch], eax
mov     edx, [ebp-1ch]
mov     eax, [edx+0ch]
mov     [ebp-48h], eax
mov     ecx, [ebp-48h]
mov     edx, [ecx]
mov     [ebp-24h], edx
cmp     dword ptr [ebp+8], 6
jnz     short loc_37aab48d
mov     eax, [ebp-24h]
add     eax, 1
mov     [ebp-24h], eax
mov     ecx, [ebp-10h]
mov     [ebp-20h], ecx
mov     edx, 1
shl     edx, 2
mov     eax, [ebp-20h]
mov     ecx, [eax+0ch]
sub     ecx, edx
mov     edx, [ebp-20h]
mov     [edx+0ch], ecx
mov     eax, [ebp-20h]
mov     ecx, [eax+0ch]
mov     [ebp-4ch], ecx
mov     edx, [ebp-4ch]
mov     eax, [edx]
mov     [ebp-28h], eax
cmp     dword ptr [ebp-28h], 0
jnz     short loc_37aab4c7
mov     dword ptr [ebp-28h], 1
mov     ecx, [ebp-24h]
push    ecx
mov     ecx, [ebp+18h]
call    sub_37a1ec80
mov     [ebp-3], al
movzx   edx, byte ptr [ebp-3]
test    edx, edx
jnz     short loc_37aab50d
mov     eax, [ebp+14h]
mov     ecx, [ebp+14h]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp-50h], edx
mov     eax, [ebp-50h]
push    eax
push    10h
mov     ecx, [ebp-10h]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aab4de
mov     eax, 2
jmp     loc_37aab660
jmp     short loc_37aab52c
mov     edx, [ebp+14h]
mov     eax, [edx]
mov     cl, [eax]
mov     [ebp-8], cl
mov     edx, [ebp+14h]
mov     eax, [edx]
add     eax, 1
mov     ecx, [ebp+14h]
mov     [ecx], eax
mov     eax, [ebp-28h]
jmp     loc_37aab660
xor     edx, edx
jz      short loc_37aab55d
mov     eax, [ebp+14h]
mov     ecx, [ebp+14h]
mov     edx, [eax]
sub     edx, [ecx+4]
mov     [ebp-54h], edx
mov     eax, [ebp-54h]
push    eax
push    3
mov     ecx, [ebp-10h]
add     ecx, 18h
call    sub_37a198c0
xor     ecx, ecx
jnz     short loc_37aab530
mov     eax, 2
jmp     loc_37aab660
mov     edx, [ebp-10h]
mov     [ebp-2ch], edx
mov     eax, 1
shl     eax, 2
mov     ecx, [ebp-2ch]
mov     edx, [ecx+0ch]
sub     edx, eax
mov     eax, [ebp-2ch]
mov     [eax+0ch], edx
mov     ecx, [ebp-2ch]
mov     edx, [ecx+0ch]
mov     [ebp-58h], edx
mov     eax, [ebp-58h]
mov     ecx, [eax]
mov     [ebp-34h], ecx
cmp     dword ptr [ebp+8], 0ah
jnz     short loc_37aab599
mov     edx, [ebp-34h]
add     edx, 1
mov     [ebp-34h], edx
mov     eax, [ebp-10h]
mov     [ebp-30h], eax
mov     ecx, 1
shl     ecx, 2
mov     edx, [ebp-30h]
mov     eax, [edx+0ch]
sub     eax, ecx
mov     ecx, [ebp-30h]
mov     [ecx+0ch], eax
mov     edx, [ebp-30h]
mov     eax, [edx+0ch]
mov     [ebp-5ch], eax
mov     ecx, [ebp-5ch]
mov     edx, [ecx]
mov     [ebp-38h], edx
cmp     dword ptr [ebp-38h], 0
jnz     short loc_37aab5d3
mov     dword ptr [ebp-38h], 1
mov     eax, [ebp-34h]
push    eax
mov     ecx, [ebp+18h]
call    loc_37a1ebe0
mov     [ebp-4], al
movzx   ecx, byte ptr [ebp-4]
test    ecx, ecx
jnz     short loc_37aab616
mov     edx, [ebp+14h]
mov     eax, [ebp+14h]
mov     ecx, [edx]
sub     ecx, [eax+4]
mov     [ebp-60h], ecx
mov     edx, [ebp-60h]
push    edx
push    10h
mov     ecx, [ebp-10h]
add     ecx, 18h
call    sub_37a198c0
xor     eax, eax
jnz     short loc_37aab5ea
mov     eax, 2
jmp     short loc_37aab660
jmp     short def_37aab255
mov     ecx, [ebp+14h]
mov     edx, [ecx]
mov     al, [edx]
mov     [ebp-9], al
mov     ecx, [ebp+14h]
mov     edx, [ecx]
add     edx, 1
mov     eax, [ebp+14h]
mov     [eax], edx
mov     eax, [ebp-38h]
jmp     short loc_37aab660
mov     ecx, [ebp+18h]
push    ecx
mov     edx, [ebp+14h]
push    edx
mov     ecx, [ebp-10h]
call    near ptr sub_37aaadf0
mov     ecx, [ebp-10h]
add     ecx, 18h
call    ??b?$shared_ptr@$$cbu_exception_record@@@std@@qbe_nxz
movzx   eax, al
test    eax, eax
jz      short loc_37aab65b
mov     eax, 2
jmp     short loc_37aab660
mov     eax, 1
mov     esp, ebp
pop     ebp
retn    14h
lodsb
xor     eax, 7402a211h
cmp     [ecx+47h], esp
mov     esi, 373293c5h
shl     byte ptr [ebx-70h], 88h
lodsd
jl      near ptr 124b7c35h
outs    dx, byte ptr fs:[esi]
push    cs
add     dword ptr [edx+229f521ch], 3dh
mov     cl, 2fh
mov     ds:162a403ch, eax
pop     ss
rcr     bh, 0c7h
fxch7   st(7)
xchg    edi, ecx
fsub    dword ptr [edi+edx-1d09138dh]
push    ebx
xlat
lodsd
xchg    eax, ebp
dec     ebx
mov     edx, 437cf23eh
push    ebx
pop     ss
or      ss:[ecx-1cd1c4ach], bl
insd
mov     dl, 83h
and     [ebx], eax
sbb     ecx, edx
push    ebp
mov     ebp, esp
sub     esp, 20h
cmp     dword ptr [ebp+18h], 0
jnz     short loc_37aac2f8
mov     eax, [ebp+0ch]
cmp     eax, [ebp+10h]
jnb     short loc_37aac2dc
lea     ecx, [ebp+0ch]
mov     [ebp-8], ecx
jmp     short loc_37aac2e2
lea     edx, [ebp+10h]
mov     [ebp-8], edx
mov     eax, [ebp-8]
mov     [ebp-14h], eax
mov     ecx, [ebp-14h]
mov     [ebp-18h], ecx
mov     edx, [ebp-18h]
mov     eax, [edx]
jmp     loc_37aac38b
mov     eax, [ebp+18h]
cmp     eax, [ebp+0ch]
ja      loc_37aac388
mov     ecx, [ebp+0ch]
sub     ecx, [ebp+18h]
mov     [ebp-0ch], ecx
mov     edx, [ebp-0ch]
cmp     edx, [ebp+10h]
jnb     short loc_37aac31d
lea     eax, [ebp-0ch]
mov     [ebp-10h], eax
jmp     short loc_37aac323
lea     ecx, [ebp+10h]
mov     [ebp-10h], ecx
mov     edx, [ebp-10h]
mov     [ebp-1ch], edx
mov     eax, [ebp-1ch]
mov     [ebp-20h], eax
mov     ecx, [ebp-20h]
mov     edx, [ebp+8]
add     edx, [ecx]
mov     [ebp-4], edx
jmp     short loc_37aac345
mov     eax, [ebp-4]
sub     eax, 1
mov     [ebp-4], eax
mov     ecx, [ebp+14h]
push    ecx
mov     edx, [ebp-4]
push    edx
call    sub_37aa40f0
add     esp, 8
movzx   eax, al
test    eax, eax
jz      short loc_37aac37c
mov     ecx, [ebp+18h]
push    ecx
mov     edx, [ebp+14h]
push    edx
mov     eax, [ebp-4]
push    eax
call    sub_37a9c5d0
add     esp, 0ch
test    eax, eax
jnz     short loc_37aac37c
mov     eax, [ebp-4]
sub     eax, [ebp+8]
jmp     short loc_37aac38b
mov     ecx, [ebp-4]
cmp     ecx, [ebp+8]
jnz     short loc_37aac386
jmp     short loc_37aac388
jmp     short loc_37aac33c
or      eax, 0ffffffffh
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37ae0c23
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 14h
mov     [ebp-10h], ecx
xor     eax, eax
mov     ecx, [ebp-10h]
mov     [ecx], eax
mov     [ecx+4], eax
mov     [ecx+8], eax
mov     [ecx+0ch], eax
mov     edx, [ebp-10h]
mov     eax, [ebp+8]
mov     cx, ds:word_37b0211c[eax*2]
mov     [edx+0eh], cx
cmp     dword ptr [ebp+8], 5
jnz     short loc_37aac3e9
mov     edx, 0dh
mov     eax, 1
imul    ecx, eax, 0dh
mov     eax, [ebp-10h]
mov     [eax+ecx], dl
mov     dword ptr [ebp-4], 0
mov     ecx, [ebp-10h]
mov     edx, [ebp+0ch]
mov     [ecx+10h], edx
mov     eax, [ebp-10h]
mov     dword ptr [eax+14h], 0
mov     ecx, [ebp-10h]
add     ecx, 18h
mov     [ebp-18h], ecx
mov     edx, [ebp-18h]
mov     eax, [ebp+14h]
mov     [edx], eax
mov     ecx, [ebp-18h]
mov     dword ptr [ecx+4], 0
mov     edx, [ebp-18h]
mov     dword ptr [edx+8], 0
mov     eax, [ebp-18h]
mov     dword ptr [eax+0ch], 0
mov     ecx, [ebp-18h]
mov     dword ptr [ecx+10h], 0
mov     edx, [ebp-18h]
mov     eax, [ebp+10h]
mov     [edx+14h], eax
mov     byte ptr [ebp-4], 1
mov     ecx, [ebp-10h]
add     ecx, 30h
call    loc_37a126c0
mov     ecx, [ebp-10h]
cmp     dword ptr [ecx+10h], 0
jnz     short loc_37aac4c8
push    14h
call    ??2@yapaxi@z
add     esp, 4
mov     [ebp-14h], eax
cmp     dword ptr [ebp-14h], 0
jz      short loc_37aac4a9
mov     edx, [ebp-14h]
mov     dword ptr [edx], 0
mov     eax, [ebp-14h]
mov     dword ptr [eax+4], 10000h
mov     ecx, [ebp-14h]
mov     dword ptr [ecx+8], 0
mov     edx, [ebp-14h]
mov     dword ptr [edx+0ch], 0
mov     eax, [ebp-14h]
mov     dword ptr [eax+10h], 0
mov     ecx, [ebp-14h]
mov     [ebp-1ch], ecx
jmp     short loc_37aac4b0
mov     dword ptr [ebp-1ch], 0
mov     edx, [ebp-1ch]
mov     [ebp-20h], edx
mov     eax, [ebp-10h]
mov     ecx, [ebp-20h]
mov     [eax+10h], ecx
mov     edx, [ebp-10h]
mov     eax, [ebp-20h]
mov     [edx+14h], eax
mov     dword ptr [ebp-4], 0ffffffffh
mov     eax, [ebp-10h]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    10h
mov     eax, [esp+arg_0]
mov     [ecx], eax
mov     eax, ecx
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp-8], ecx
mov     eax, [ebp-8]
mov     [ebp-0ch], eax
mov     ecx, [ebp-0ch]
mov     [ebp-4], ecx
mov     edx, [ebp-4]
mov     dword ptr [edx], 0
mov     eax, [ebp-4]
mov     dword ptr [eax+4], 0
mov     ecx, [ebp-4]
mov     dword ptr [ecx+8], 0
mov     eax, [ebp-8]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp-4], ecx
mov     eax, [ebp+8]
mov     [ebp-8], eax
mov     ecx, [ebp-4]
call    @_guard_check_icall_nop@4
xor     ecx, ecx
and     ecx, 1
jz      short loc_37aac5fc
push    10h
mov     edx, [ebp-4]
push    edx
call    sub_37ab1b25
add     esp, 8
mov     eax, [ebp-8]
mov     ecx, [ebp-4]
mov     edx, [eax]
mov     [ecx], edx
mov     edx, [eax+4]
mov     [ecx+4], edx
mov     edx, [eax+8]
mov     [ecx+8], edx
mov     eax, [eax+0ch]
mov     [ecx+0ch], eax
xor     ecx, ecx
mov     edx, [ebp-8]
mov     [edx+0eh], cx
mov     ecx, [ebp-4]
call    sub_37a13d60
mov     eax, [ebp-4]
mov     ecx, [ebp+8]
mov     edx, [ecx+10h]
mov     [eax+10h], edx
mov     eax, [ebp-4]
mov     ecx, [ebp+8]
mov     edx, [ecx+14h]
mov     [eax+14h], edx
mov     eax, [ebp+8]
add     eax, 18h
mov     [ebp-0ch], eax
mov     ecx, [ebp-0ch]
push    ecx
mov     ecx, [ebp-4]
add     ecx, 18h
call    sub_37aac6a0
mov     edx, [ebp+8]
mov     eax, [edx+30h]
mov     ecx, [edx+34h]
mov     edx, [ebp-4]
mov     [edx+30h], eax
mov     [edx+34h], ecx
mov     eax, [ebp+8]
mov     dword ptr [eax+10h], 0
mov     ecx, [ebp+8]
mov     dword ptr [ecx+14h], 0
lea     ecx, [ebp-14h]
call    loc_37a126c0
mov     edx, [eax]
mov     eax, [eax+4]
mov     ecx, [ebp+8]
mov     [ecx+30h], edx
mov     [ecx+34h], eax
mov     eax, [ebp-4]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
mov     [ebp+var_4], ecx
mov     eax, [ebp+arg_0]
cmp     eax, [ebp+var_4]
jz      loc_37aac75c
mov     ecx, [ebp+var_4]
mov     edx, [ecx+8]
push    edx
call    j_j___free_base
add     esp, 4
mov     eax, [ebp+var_4]
mov     ecx, [eax+4]
mov     [ebp+block], ecx
push    1
mov     edx, [ebp+block]
push    edx
call    sub_37ab1b25
add     esp, 8
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     edx, [ecx]
mov     [eax], edx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+4]
mov     [eax+4], edx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+8]
mov     [eax+8], edx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+0ch]
mov     [eax+0ch], edx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+10h]
mov     [eax+10h], edx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     edx, [ecx+14h]
mov     [eax+14h], edx
mov     eax, [ebp+arg_0]
mov     dword ptr [eax], 0
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx+4], 0
mov     edx, [ebp+arg_0]
mov     dword ptr [edx+8], 0
mov     eax, [ebp+arg_0]
mov     dword ptr [eax+0ch], 0
mov     ecx, [ebp+arg_0]
mov     dword ptr [ecx+10h], 0
mov     edx, [ebp+arg_0]
mov     dword ptr [edx+14h], 0
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn    4
mov     eax, [esp+4]
mov     edx, eax
xchg    edx, [ecx]
retn    4
mov     eax, 1
lock xadd [ecx], eax
retn    4
push    ebp
mov     ebp, esp
sub     esp, 4ch
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     ecx, [eax+8]
mov     [ebp+var_18], ecx
mov     edx, [ebp+var_18]
mov     [ebp+var_20], edx
lea     eax, [ebp+var_24]
mov     [ebp+var_1c], eax
mov     ecx, [ebp+var_1c]
mov     edx, [ebp+var_20]
mov     [ecx], edx
mov     eax, [ebp+arg_4]
sub     eax, [ebp+var_24]
sar     eax, 5
mov     [ebp+var_2c], eax
mov     ecx, [ebp+var_4]
mov     edx, [ecx+8]
mov     [ebp+var_28], edx
mov     eax, [ebp+var_28]
mov     [ebp+var_30], eax
mov     ecx, [ebp+var_2c]
shl     ecx, 5
add     ecx, [ebp+var_30]
mov     [ebp+var_34], ecx
mov     edx, [ebp+var_34]
mov     [ebp+var_10], edx
mov     eax, [ebp+var_10]
mov     [ebp+var_8], eax
jmp     short loc_37aac7f4
mov     ecx, [ebp+var_8]
add     ecx, 20h
mov     [ebp+var_8], ecx
mov     edx, [ebp+var_8]
cmp     edx, [ebp+arg_8]
jz      short loc_37aac805
mov     [ebp+var_14], 1
jmp     short loc_37aac80c
mov     [ebp+var_14], 0
movzx   eax, byte ptr [ebp+var_14]
test    eax, eax
jz      short loc_37aac844
mov     ecx, [ebp+var_8]
mov     [ebp+block], ecx
mov     ecx, [ebp+block]
add     ecx, 10h
call    @_guard_check_icall_nop@4
mov     ecx, [ebp+block]
call    @_guard_check_icall_nop@4
xor     edx, edx
and     edx, 1
jz      short loc_37aac842
push    20h
mov     eax, [ebp+block]
push    eax
call    sub_37ab1b25
add     esp, 8
jmp     short loc_37aac7eb
mov     ecx, [ebp+var_4]
mov     edx, [ecx+8]
mov     [ebp+var_38], edx
mov     eax, [ebp+var_4]
mov     ecx, [eax]
shl     ecx, 5
add     ecx, [ebp+var_38]
mov     [ebp+var_3c], ecx
mov     edx, [ebp+var_3c]
mov     [ebp+var_40], edx
mov     eax, [ebp+var_40]
sub     eax, [ebp+arg_8]
sar     eax, 5
mov     [ebp+var_44], eax
mov     ecx, [ebp+arg_8]
mov     [ebp+src], ecx
mov     edx, [ebp+var_10]
mov     [ebp+var_4c], edx
mov     eax, [ebp+var_44]
shl     eax, 5
push    eax
mov     ecx, [ebp+src]
push    ecx
mov     edx, [ebp+var_4c]
push    edx
call    _memmove
add     esp, 0ch
mov     eax, [ebp+arg_8]
sub     eax, [ebp+arg_4]
sar     eax, 5
mov     ecx, [ebp+var_4]
mov     edx, [ecx]
sub     edx, eax
mov     eax, [ebp+var_4]
mov     [eax], edx
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+var_10]
mov     [ecx], edx
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 18h
mov     [ebp-10h], ecx
mov     eax, [ebp-10h]
mov     [ebp-14h], eax
mov     ecx, [ebp-14h]
mov     [ebp-18h], ecx
mov     edx, [ebp-18h]
mov     [ebp-4], edx
mov     eax, [ebp-4]
mov     [ebp-0ch], eax
mov     ecx, [ebp-4]
cmp     dword ptr [ecx+14h], 8
jb      short loc_37aaca03
mov     dword ptr [ebp-8], 1
jmp     short loc_37aaca0a
mov     dword ptr [ebp-8], 0
movzx   edx, byte ptr [ebp-8]
test    edx, edx
jz      short loc_37aaca1a
mov     eax, [ebp-4]
mov     ecx, [eax]
mov     [ebp-0ch], ecx
mov     edx, [ebp+8]
mov     eax, [ebp-0ch]
mov     [edx], eax
mov     ecx, [ebp-4]
push    ecx
mov     ecx, [ebp+8]
call    nullsub_2
mov     eax, [ebp+8]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp-14h], ecx
mov     eax, [ebp+0ch]
mov     [ebp-10h], eax
mov     ecx, [ebp-10h]
mov     [ebp-4], ecx
mov     edx, [ebp-4]
mov     [ebp-0ch], edx
mov     eax, [ebp-4]
cmp     dword ptr [eax+14h], 10h
jb      short loc_37aacabd
mov     dword ptr [ebp-8], 1
jmp     short loc_37aacac4
mov     dword ptr [ebp-8], 0
movzx   ecx, byte ptr [ebp-8]
test    ecx, ecx
jz      short loc_37aacad4
mov     edx, [ebp-4]
mov     eax, [edx]
mov     [ebp-0ch], eax
mov     ecx, [ebp-4]
mov     edx, [ecx+10h]
push    edx
mov     eax, [ebp-0ch]
push    eax
mov     ecx, [ebp+8]
push    ecx
mov     ecx, [ebp-14h]
call    near ptr sub_37aa188d
mov     esp, ebp
pop     ebp
retn    8
push    esi
mov     esi, dword_37b731f0
test    esi, esi
jz      short loc_37aacb1d
mov     ecx, esi
call    sub_37a218a0
push    70h
push    esi
call    sub_37ab1b25
add     esp, 8
mov     dword_37b731f0, 0
pop     esi
retn
push    ebp
mov     ebp, esp
sub     esp, 130h
cmp     [ebp+arg_10], 0
jz      loc_37aacd13
mov     eax, [ebp+arg_8]
cmp     eax, [ebp+arg_4]
jnb     loc_37aacd13
push    100h
push    0
lea     eax, [ebp+var_130]
push    eax
call    _memset
add     esp, 0ch
mov     eax, [ebp+arg_c]
mov     [ebp+var_18], eax
jmp     short loc_37aacbe7
mov     eax, [ebp+var_18]
inc     eax
inc     eax
mov     [ebp+var_18], eax
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
lea     eax, [ecx+eax*2]
cmp     [ebp+var_18], eax
jz      short loc_37aacc1e
mov     eax, [ebp+var_18]
mov     ax, [eax]
mov     [ebp+var_8], ax
movzx   eax, [ebp+var_8]
cmp     eax, 100h
jb      short loc_37aacc10
mov     [ebp+var_1], 0
jmp     short loc_37aacc22
movzx   eax, byte ptr [ebp+var_8]
mov     [ebp+eax+var_130], 1
jmp     short loc_37aacbdf
mov     [ebp+var_1], 1
movzx   eax, [ebp+var_1]
test    eax, eax
jnz     short loc_37aacca3
xor     eax, eax
mov     [ebp+var_2], al
mov     al, [ebp+var_2]
mov     [ebp+var_1c], al
cmp     [ebp+arg_10], 0
jz      short loc_37aacc9a
mov     eax, [ebp+arg_8]
cmp     eax, [ebp+arg_4]
jnb     short loc_37aacc9a
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
lea     eax, [ecx+eax*2]
mov     [ebp+var_28], eax
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
lea     eax, [ecx+eax*2]
mov     [ebp+var_10], eax
jmp     short loc_37aacc65
mov     eax, [ebp+var_10]
inc     eax
inc     eax
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
cmp     eax, [ebp+var_28]
jnb     short loc_37aacc9a
push    [ebp+arg_10]
mov     eax, [ebp+var_10]
movzx   eax, word ptr [eax]
push    eax
push    [ebp+arg_c]
call    loc_37aad7c0
add     esp, 0ch
mov     [ebp+var_2c], eax
cmp     [ebp+var_2c], 0
jz      short loc_37aacc98
mov     eax, [ebp+var_10]
sub     eax, [ebp+arg_0]
sar     eax, 1
mov     [ebp+var_20], eax
jmp     short loc_37aacc9e
jmp     short loc_37aacc5d
or      [ebp+var_20], 0ffffffffh
mov     eax, [ebp+var_20]
jmp     short loc_37aacd16
mov     eax, [ebp+arg_4]
mov     ecx, [ebp+arg_0]
lea     eax, [ecx+eax*2]
mov     [ebp+var_30], eax
mov     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_0]
lea     eax, [ecx+eax*2]
mov     [ebp+var_14], eax
jmp     short loc_37aaccc5
mov     eax, [ebp+var_14]
inc     eax
inc     eax
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
cmp     eax, [ebp+var_30]
jnb     short loc_37aacd13
mov     eax, [ebp+var_14]
mov     ax, [eax]
mov     [ebp+var_c], ax
movzx   eax, [ebp+var_c]
cmp     eax, 100h
jnb     short loc_37aaccfb
movzx   eax, [ebp+var_c]
movzx   eax, [ebp+eax+var_130]
test    eax, eax
jz      short loc_37aaccfb
mov     [ebp+var_24], 1
jmp     short loc_37aaccff
and     [ebp+var_24], 0
movzx   eax, byte ptr [ebp+var_24]
test    eax, eax
jz      short loc_37aacd11
mov     eax, [ebp+var_14]
sub     eax, [ebp+arg_0]
sar     eax, 1
jmp     short loc_37aacd16
jmp     short loc_37aaccbd
or      eax, 0ffffffffh
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 12ch
cmp     [ebp+arg_10], 0
jz      loc_37aace55
cmp     [ebp+arg_4], 0
jz      loc_37aace55
push    100h
push    0
lea     eax, [ebp+var_12c]
push    eax
call    _memset
add     esp, 0ch
mov     eax, [ebp+arg_c]
mov     [ebp+var_14], eax
jmp     short loc_37aacd5d
mov     eax, [ebp+var_14]
inc     eax
inc     eax
mov     [ebp+var_14], eax
mov     eax, [ebp+arg_10]
mov     ecx, [ebp+arg_c]
lea     eax, [ecx+eax*2]
cmp     [ebp+var_14], eax
jz      short loc_37aacd94
mov     eax, [ebp+var_14]
mov     ax, [eax]
mov     [ebp+var_8], ax
movzx   eax, [ebp+var_8]
cmp     eax, 100h
jb      short loc_37aacd86
mov     [ebp+var_1], 0
jmp     short loc_37aacd98
movzx   eax, byte ptr [ebp+var_8]
mov     [ebp+eax+var_12c], 1
jmp     short loc_37aacd55
mov     [ebp+var_1], 1
movzx   eax, [ebp+var_1]
test    eax, eax
jnz     short loc_37aacdc4
xor     eax, eax
mov     byte ptr [ebp+var_24], al
push    [ebp+var_24]
push    [ebp+arg_10]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_37aace5c
add     esp, 18h
jmp     loc_37aace58
mov     eax, [ebp+arg_4]
dec     eax
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
cmp     eax, [ebp+arg_8]
jnb     short loc_37aacddb
lea     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
jmp     short loc_37aacde1
lea     eax, [ebp+arg_8]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_2c]
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
lea     eax, [ecx+eax*2]
mov     [ebp+var_10], eax
jmp     short loc_37aace05
mov     eax, [ebp+var_10]
dec     eax
dec     eax
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     ax, [eax]
mov     [ebp+var_c], ax
movzx   eax, [ebp+var_c]
cmp     eax, 100h
jnb     short loc_37aace33
movzx   eax, [ebp+var_c]
movzx   eax, [ebp+eax+var_12c]
test    eax, eax
jz      short loc_37aace33
mov     [ebp+var_20], 1
jmp     short loc_37aace37
and     [ebp+var_20], 0
movzx   eax, byte ptr [ebp+var_20]
test    eax, eax
jz      short loc_37aace49
mov     eax, [ebp+var_10]
sub     eax, [ebp+arg_0]
sar     eax, 1
jmp     short loc_37aace58
mov     eax, [ebp+var_10]
cmp     eax, [ebp+arg_0]
jnz     short loc_37aace53
jmp     short loc_37aace55
jmp     short loc_37aacdfd
or      eax, 0ffffffffh
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
cmp     [ebp+arg_10], 0
jz      short loc_37aacee3
cmp     [ebp+arg_4], 0
jz      short loc_37aacee3
mov     eax, [ebp+arg_4]
dec     eax
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
cmp     eax, [ebp+arg_8]
jnb     short loc_37aace85
lea     eax, [ebp+var_8]
mov     [ebp+var_c], eax
jmp     short loc_37aace8b
lea     eax, [ebp+arg_8]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     eax, [eax]
mov     ecx, [ebp+arg_0]
lea     eax, [ecx+eax*2]
mov     [ebp+var_4], eax
jmp     short loc_37aaceaf
mov     eax, [ebp+var_4]
dec     eax
dec     eax
mov     [ebp+var_4], eax
push    [ebp+arg_10]
mov     eax, [ebp+var_4]
movzx   eax, word ptr [eax]
push    eax
push    [ebp+arg_c]
call    loc_37aad7c0
add     esp, 0ch
mov     [ebp+var_18], eax
cmp     [ebp+var_18], 0
jz      short loc_37aaced7
mov     eax, [ebp+var_4]
sub     eax, [ebp+arg_0]
sar     eax, 1
jmp     short loc_37aacee6
mov     eax, [ebp+var_4]
cmp     eax, [ebp+arg_0]
jnz     short loc_37aacee1
jmp     short loc_37aacee3
jmp     short loc_37aacea7
or      eax, 0ffffffffh
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     [ebp-4], ecx
mov     eax, [ebp+8]
mov     [ebp-14h], eax
mov     eax, [ebp-4]
cmp     eax, [ebp-14h]
jz      short loc_37aad214
xor     eax, eax
jz      short loc_37aad1b3
mov     ecx, [ebp-4]
call    ?_tidy_deallocate@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaexxz
mov     eax, [ebp+8]
mov     [ebp-18h], eax
mov     eax, [ebp-18h]
mov     [ebp-24h], eax
mov     eax, [ebp-4]
mov     [ebp-1ch], eax
mov     eax, [ebp-1ch]
mov     [ebp-28h], eax
mov     eax, [ebp+8]
mov     [ebp-20h], eax
mov     eax, [ebp-20h]
mov     [ebp-8], eax
mov     eax, [ebp-8]
mov     [ebp-10h], eax
mov     eax, [ebp-8]
cmp     dword ptr [eax+14h], 8
jb      short loc_37aad1ef
mov     dword ptr [ebp-0ch], 1
jmp     short loc_37aad1f3
and     dword ptr [ebp-0ch], 0
movzx   eax, byte ptr [ebp-0ch]
test    eax, eax
jz      short loc_37aad203
mov     eax, [ebp-8]
mov     eax, [eax]
mov     [ebp-10h], eax
mov     eax, [ebp-8]
push    dword ptr [eax+10h]
push    dword ptr [ebp-10h]
mov     ecx, [ebp-4]
call    sub_37a9b1a6
mov     eax, [ebp-4]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 14h
mov     [ebp-10h], ecx
mov     eax, [ebp-10h]
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
mov     [ebp-4], eax
mov     eax, [ebp-4]
mov     [ebp-0ch], eax
mov     eax, [ebp-4]
cmp     dword ptr [eax+14h], 8
jb      short loc_37aad24a
mov     dword ptr [ebp-8], 1
jmp     short loc_37aad24e
and     dword ptr [ebp-8], 0
movzx   eax, byte ptr [ebp-8]
test    eax, eax
jz      short loc_37aad25e
mov     eax, [ebp-4]
mov     eax, [eax]
mov     [ebp-0ch], eax
mov     eax, [ebp+8]
mov     ecx, [ebp-0ch]
lea     eax, [ecx+eax*2]
mov     esp, ebp
pop     ebp
retn    4
scasb
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     [ebp-0ch], eax
mov     eax, [ebp-4]
cmp     dword ptr [eax+14h], 8
jb      short loc_37aad2f2
mov     dword ptr [ebp-8], 1
jmp     short loc_37aad2f6
and     dword ptr [ebp-8], 0
movzx   eax, byte ptr [ebp-8]
test    eax, eax
jz      short loc_37aad306
mov     eax, [ebp-4]
mov     eax, [eax]
mov     [ebp-0ch], eax
mov     eax, [ebp-0ch]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    offset dword_37aefc94
call    sub_37ab024c
push    ebp
mov     ebp, esp
sub     esp, 24h
mov     [ebp-1ch], ecx
mov     eax, [ebp-1ch]
mov     [ebp-20h], eax
mov     eax, [ebp-20h]
mov     [ebp-4], eax
mov     eax, [ebp-4]
mov     [ebp-8], eax
mov     eax, [ebp-4]
cmp     dword ptr [eax+14h], 8
jb      short loc_37aad564
mov     dword ptr [ebp-0ch], 1
jmp     short loc_37aad568
and     dword ptr [ebp-0ch], 0
movzx   eax, byte ptr [ebp-0ch]
test    eax, eax
jz      short loc_37aad578
mov     eax, [ebp-4]
mov     eax, [eax]
mov     [ebp-8], eax
mov     ax, [ebp+8]
mov     [ebp-24h], ax
mov     eax, [ebp-4]
mov     eax, [eax+10h]
mov     [ebp-10h], eax
mov     eax, [ebp+0ch]
cmp     eax, [ebp-10h]
jnb     short loc_37aad5c3
mov     eax, [ebp-10h]
sub     eax, [ebp+0ch]
push    eax
push    dword ptr [ebp-24h]
mov     eax, [ebp+0ch]
mov     ecx, [ebp-8]
lea     eax, [ecx+eax*2]
push    eax
call    loc_37aad7c0
add     esp, 0ch
mov     [ebp-14h], eax
cmp     dword ptr [ebp-14h], 0
jz      short loc_37aad5c3
mov     eax, [ebp-14h]
sub     eax, [ebp-8]
sar     eax, 1
mov     [ebp-18h], eax
jmp     short loc_37aad5c7
or      dword ptr [ebp-18h], 0ffffffffh
mov     eax, [ebp-18h]
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     [ebp-1ch], ecx
mov     eax, [ebp-1ch]
mov     [ebp-20h], eax
mov     eax, [ebp-20h]
mov     [ebp-8], eax
mov     eax, [ebp+8]
mov     [ebp-24h], eax
mov     eax, [ebp-24h]
mov     [ebp-4], eax
mov     eax, [ebp-4]
mov     [ebp-14h], eax
mov     eax, [ebp-4]
cmp     dword ptr [eax+14h], 8
jb      short loc_37aad609
mov     dword ptr [ebp-0ch], 1
jmp     short loc_37aad60d
and     dword ptr [ebp-0ch], 0
movzx   eax, byte ptr [ebp-0ch]
test    eax, eax
jz      short loc_37aad61d
mov     eax, [ebp-4]
mov     eax, [eax]
mov     [ebp-14h], eax
mov     eax, [ebp-8]
mov     [ebp-18h], eax
mov     eax, [ebp-8]
cmp     dword ptr [eax+14h], 8
jb      short loc_37aad635
mov     dword ptr [ebp-10h], 1
jmp     short loc_37aad639
and     dword ptr [ebp-10h], 0
movzx   eax, byte ptr [ebp-10h]
test    eax, eax
jz      short loc_37aad649
mov     eax, [ebp-8]
mov     eax, [eax]
mov     [ebp-18h], eax
push    dword ptr [ebp-28h]
mov     eax, [ebp-4]
push    dword ptr [eax+10h]
push    dword ptr [ebp-14h]
push    dword ptr [ebp+0ch]
mov     eax, [ebp-8]
push    dword ptr [eax+10h]
push    dword ptr [ebp-18h]
call    sub_37aacd1a
add     esp, 18h
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     [ebp-18h], ecx
mov     eax, [ebp-18h]
mov     [ebp-1ch], eax
mov     eax, [ebp-1ch]
mov     [ebp-0ch], eax
mov     eax, [ebp+8]
mov     [ebp-8], eax
mov     eax, [ebp-8]
add     eax, 2
mov     [ebp-20h], eax
mov     eax, [ebp-8]
mov     ax, [eax]
mov     [ebp-2], ax
add     dword ptr [ebp-8], 2
cmp     word ptr [ebp-2], 0
jnz     short loc_37aad693
mov     eax, [ebp-8]
sub     eax, [ebp-20h]
sar     eax, 1
mov     [ebp-24h], eax
mov     eax, [ebp-24h]
mov     [ebp-28h], eax
mov     eax, [ebp-0ch]
mov     [ebp-14h], eax
mov     eax, [ebp-0ch]
cmp     dword ptr [eax+14h], 8
jb      short loc_37aad6d1
mov     dword ptr [ebp-10h], 1
jmp     short loc_37aad6d5
and     dword ptr [ebp-10h], 0
movzx   eax, byte ptr [ebp-10h]
test    eax, eax
jz      short loc_37aad6e5
mov     eax, [ebp-0ch]
mov     eax, [eax]
mov     [ebp-14h], eax
push    dword ptr [ebp-2ch]
push    dword ptr [ebp-28h]
push    dword ptr [ebp+8]
push    dword ptr [ebp+0ch]
mov     eax, [ebp-0ch]
push    dword ptr [eax+10h]
push    dword ptr [ebp-14h]
call    sub_37aacd1a
add     esp, 18h
mov     esp, ebp
pop     ebp
retn    8
test    dword ptr [ecx], 20000h
jz      short loc_37aad721
cmp     dword ptr [ecx+0ch], 0
jz      short loc_37aad721
mov     al, 1
retn
xor     al, al
retn
add     [ebx-3b7c0037h], al
sbb     al, 85h
ror     byte ptr [edi], 48h
rol     ebx, 0cch
int     3
int     3
push    dword ptr [esp+8]
push    0
push    dword ptr [esp+0ch]
push    0
push    0
call    sub_37a16790
mov     ecx, [eax]
push    dword ptr [eax+4]
or      ecx, 2
push    ecx
call    sub_37abc67f
or      ecx, 0ffffffffh
add     esp, 1ch
test    eax, eax
cmovs   eax, ecx
retn
push    dword ptr [esp+10h]
push    0
push    dword ptr [esp+14h]
push    dword ptr [esp+14h]
push    dword ptr [esp+14h]
call    sub_37a16790
push    dword ptr [eax+4]
push    dword ptr [eax]
call    ___stdio_common_vswprintf_s
or      ecx, 0ffffffffh
add     esp, 1ch
test    eax, eax
cmovs   eax, ecx
retn
jz      short loc_37aad750
rep or [edx+ebx*4-6e2e7e99h], esi
mov     al, 34h
wait
aas
xor     [ecx+2ah], ebx
sbb     esi, [ebp+3eh]
in      al, dx
jo      short loc_37aad7c0
stc
inc     ecx
loop    near ptr loc_37aad766+1
and     eax, 5543ab39h
das
std
dec     edx
pop     edi
das
pop     ds
or      al, [ebp-2eh]
xchg    eax, ebx
imul    esi, [ebp-31b0daaeh], 6e57d455h
in      eax, 89h
jz      short near ptr loc_37aad789+2
popf
xor     dword ptr [ebp-6eh], 652ab0b2h
int     3
push    cs
inc     ecx
push    0ffffffbeh
bound   ecx, [esi+7eh]
mov     dh, 71h
jb      short loc_37aad81e
xor     eax, 0f7f264c7h
xchg    eax, esp
sub     [ebx+3eh], al
push    1
fimul   word ptr es:[edx-4]
mov     ds:0e7c6fed3h, eax
inc     ebx
pusha
outsb
sub     edx, [eax-9fb1031h]
and     al, [ebx+66h]
sal     al, cl
and     [ebx-10h], bl
mov     dl, 0abh
lahf
xchg    eax, ecx
adc     bl, [ecx+3bcfbf2eh]
sahf
push    ecx
popa
sub     byte ptr [edi], 0bdh
xchg    eax, ebp
xor     al, 0bdh
sal     edi, 1
jns     short near ptr loc_37aad7ec+5
push    ebp
mov     ebp, esp
mov     edx, [ebp+8]
push    esi
lea     esi, [edx+2]
mov     ax, [edx]
add     edx, 2
test    ax, ax
jnz     short loc_37aad8a8
push    dword ptr [ebp+8]
sub     edx, esi
sar     edx, 1
push    edx
push    dword ptr [ebp+8]
push    dword ptr [ebp+0ch]
push    dword ptr [ecx+4]
push    dword ptr [ecx]
call    sub_37aacba2
add     esp, 18h
pop     esi
pop     ebp
retn    8
aaa
sub     eax, 37a10000h
push    eax
call    sub_37ae9610
add     esp, 4
retn
mov     eax, 37a10000h
sub     eax, 37a10000h
push    esi
push    eax
call    sub_37ae9610
mov     edx, dwsize
add     esp, 4
mov     esi, 1
test    edx, edx
jz      short loc_37aad98b
push    edi
mov     edi, ds:virtualprotect
nop     word ptr [eax+eax+00h]
mov     ecx, dwsize[esi*4]
lea     eax, floldprotect[esi*4]
push    eax
mov     eax, [eax]
push    eax
push    ecx
lea     eax, [edx+37a10000h]
push    eax
call    edi
mov     edx, dword_37b0b018[esi*4]
lea     esi, [esi+3]
test    edx, edx
jnz     short loc_37aad960
pop     edi
xor     eax, eax
pop     esi
retn
mov     edx, [esp+arg_0]
push    esi
push    edi
mov     dword ptr [ecx+1384h], 0ffffffffh
lea     edi, [ecx+8]
mov     [ecx+4], edx
mov     esi, 1
nop     dword ptr [eax+eax+00h]
mov     eax, edx
lea     edi, [edi+4]
shr     eax, 1eh
xor     eax, edx
pop     es
insb
add     edx, esi
inc     esi
mov     [edi-4], edx
cmp     esi, 270h
jl      short loc_37aad9b0
pop     edi
mov     dword ptr [ecx], 270h
mov     eax, ecx
pop     esi
retn    4
jb      short loc_37aad9be
push    edi
cdq
int     3
cmp     [eax-6dh], edx
and     dh, [ebp-55f5db95h]
mov     esi, 7806af3dh
into
movs    dword ptr es:[edi], dword ptr fs:[esi]
out     0dfh, eax
pop     ds
xchg    eax, ebx
int     3
inc     esi
or      [ecx-51h], bh
sub     ebx, [ebp-5]
daa
and     eax, 899a34e0h
mov     bl, 45h
cmp     cl, bh
mov     ah, 0ch
retf
sub     esp, 18h
lea     eax, [esp+18h+var_18]
push    eax
push    [esp+1ch+arg_4]
push    [esp+20h+arg_0]
call    near ptr sub_37aad9f0
add     esp, 24h
retn
sub     esp, 12ch
push    ebx
push    ebp
push    esi
push    edi
push    40h
lea     eax, [esp+0dch]
push    0
push    eax
call    _memset
mov     eax, dword_37b676b0
add     esp, 0ch
mov     [esp+1ch], eax
movzx   eax, byte_37b676b4
mov     [esp+20h], al
xor     eax, eax
mov     [esp+21h], ax
mov     [esp+23h], al
mov     eax, dword_37b676d0
mov     [esp+30h], eax
movzx   eax, byte_37b676d4
mov     [esp+34h], al
xor     eax, eax
mov     [esp+35h], ax
mov     [esp+37h], al
mov     eax, dword_37b676f0
movq    xmm0, qword_37b676a8
mov     [esp+44h], eax
movzx   eax, byte_37b676f4
mov     [esp+48h], al
xor     eax, eax
mov     [esp+49h], ax
mov     [esp+4bh], al
mov     eax, dword_37b67710
mov     [esp+58h], eax
movzx   eax, byte_37b67714
mov     [esp+5ch], al
xor     eax, eax
mov     [esp+5dh], ax
mov     [esp+5fh], al
mov     eax, dword_37b67730
mov     [esp+6ch], eax
movzx   eax, byte_37b67734
mov     [esp+70h], al
xor     eax, eax
movq    qword ptr [esp+14h], xmm0
movq    xmm0, qword_37b676c8
mov     [esp+71h], ax
mov     [esp+73h], al
mov     eax, dword_37b67750
movq    qword ptr [esp+28h], xmm0
movq    xmm0, qword_37b676e8
mov     [esp+80h], eax
movzx   eax, byte_37b67754
movq    qword ptr [esp+3ch], xmm0
movq    xmm0, qword_37b67708
mov     [esp+84h], al
xor     eax, eax
movq    qword ptr [esp+50h], xmm0
movq    xmm0, qword_37b67728
mov     [esp+85h], ax
mov     [esp+87h], al
mov     eax, dword_37b67770
movq    qword ptr [esp+64h], xmm0
movq    xmm0, qword_37b67748
mov     [esp+94h], eax
movzx   eax, byte_37b67774
movq    qword ptr [esp+78h], xmm0
movq    xmm0, qword_37b67768
mov     [esp+98h], al
xor     eax, eax
mov     dword ptr [esp+10h], 0
mov     dword ptr [esp+24h], 1
mov     dword ptr [esp+38h], 2
mov     dword ptr [esp+4ch], 3
mov     dword ptr [esp+60h], 4
mov     dword ptr [esp+74h], 5
mov     dword ptr [esp+88h], 6
movq    qword ptr [esp+8ch], xmm0
mov     [esp+99h], ax
mov     [esp+9bh], al
mov     dword ptr [esp+9ch], 7
mov     eax, dword_37b67790
lea     ebx, [esp+14h]
movq    xmm0, qword_37b67788
mov     ebp, [esp+140h]
mov     esi, [esp+144h]
mov     [esp+0a8h], eax
movzx   eax, byte_37b67794
mov     [esp+0ach], al
xor     eax, eax
mov     [esp+0adh], ax
mov     [esp+0afh], al
mov     eax, dword_37b677b0
mov     [esp+0bch], eax
movzx   eax, byte_37b677b4
mov     [esp+0c0h], al
xor     eax, eax
mov     [esp+0c1h], ax
mov     [esp+0c3h], al
mov     eax, dword_37b677d0
mov     [esp+0d0h], eax
movzx   eax, byte_37b677d4
mov     [esp+0d4h], al
xor     eax, eax
movq    qword ptr [esp+0a0h], xmm0
xor     edi, edi
movq    xmm0, qword_37b677a8
mov     [esp+0d5h], ax
mov     [esp+0d7h], al
mov     eax, [ebp+4]
movq    qword ptr [esp+0b4h], xmm0
movq    xmm0, qword_37b677c8
mov     [esi], eax
mov     eax, [ebp+0ch]
mov     [esi+4], eax
mov     eax, [ebp+8]
mov     [esi+8], eax
mov     dword ptr [esp+0b0h], 8
mov     dword ptr [esp+0c4h], 9
movq    qword ptr [esp+0c8h], xmm0
mov     byte ptr [esi+0ch], 0
nop     dword ptr [eax]
mov     eax, ebx
mov     ecx, esi
mov     dl, [ecx]
cmp     dl, [eax]
jnz     short loc_37aadf64
test    dl, dl
jz      short loc_37aadf60
mov     dl, [ecx+1]
cmp     dl, [eax+1]
jnz     short loc_37aadf64
add     ecx, 2
add     eax, 2
test    dl, dl
jnz     short loc_37aadf44
xor     eax, eax
jmp     short loc_37aadf69
sbb     eax, eax
or      eax, 1
test    eax, eax
jz      short loc_37aadf7b
inc     edi
add     ebx, 14h
cmp     edi, 0ah
jl      short loc_37aadf40
or      ebx, 0ffffffffh
jmp     short loc_37aadf82
lea     eax, [edi+edi*4]
mov     ebx, [esp+eax*4+10h]
mov     [esi+50h], ebx
cmp     ebx, 0ffffffffh
jnz     short loc_37aadfa2
pop     edi
pop     esi
pop     ebp
lea     eax, [ebx-6]
mov     dword_37b71e50, 0fffffff9h
pop     ebx
add     esp, 12ch
retn
cmp     dword ptr [ebp+0], 1
jl      short loc_37aae004
mov     edx, [ebp+10h]
shr     edx, 8
and     edx, 0fh
mov     [esi+0d4h], edx
mov     eax, [ebp+10h]
shr     eax, 4
and     eax, 0fh
mov     [esi+0d8h], eax
mov     eax, [ebp+10h]
and     eax, 0fh
mov     [esi+0dch], eax
mov     eax, [ebp+10h]
mov     ecx, eax
shr     ecx, 10h
shr     eax, 14h
and     ecx, 0fh
movzx   eax, al
cmp     ebx, 1
jnz     short loc_37aadfed
cmp     edx, 0fh
jb      short loc_37aadfef
add     edx, eax
mov     [esi+0e0h], edx
shl     ecx, 4
add     ecx, [esi+0d8h]
mov     [esi+0e4h], ecx
mov     eax, [ebp+200h]
sub     eax, 8000000h
cmp     eax, 4
jl      short loc_37aae087
lea     ecx, [esp+0dch]
mov     edi, 3
lea     edx, [ebp+224h]
mov     eax, [edx-4]
lea     ecx, [ecx+10h]
mov     [ecx-14h], eax
lea     edx, [edx+10h]
mov     eax, [edx-10h]
mov     [ecx-10h], eax
mov     eax, [edx-0ch]
mov     [ecx-0ch], eax
mov     eax, [edx-8]
mov     [ecx-8], eax
sub     edi, 1
jnz     short loc_37aae026
xor     eax, eax
mov     byte ptr [esp+108h], 0
cmp     byte ptr [esp+0d8h], 20h
jnz     short loc_37aae06b
nop     dword ptr [eax]
inc     eax
cmp     byte ptr [esp+eax+0d8h], 20h
jz      short loc_37aae060
lea     ecx, [esp+0d8h]
add     eax, ecx
push    40h
push    eax
lea     eax, [esi+10h]
push    eax
call    _strncpy
add     esp, 0ch
mov     byte ptr [esi+40h], 0
push    esi
push    ebp
call    sub_37aae240
add     esp, 8
lea     eax, [esp+118h]
push    eax
call    ds:getsysteminfo
mov     eax, [esp+12ch]
pop     edi
mov     [esi+0f0h], eax
xor     eax, eax
pop     esi
pop     ebp
mov     dword_37b71e50, 0
pop     ebx
add     esp, 12ch
retn
sbb     eax, 0d35b62d3h
std
loopne  loc_37aae0b1
jl      short loc_37aae14e
adc     ax, 4456h
mov     [ebp+4cbf808h], ch
rcr     byte ptr [edx+ebp], 59h
out     6dh, eax
fsubr   qword ptr [esi+12a8bbd6h]
jno     short near ptr loc_37aae0bc+4
adc     [ebx-1ch], ecx
movsb
arpl    [ecx], si
jmp     near ptr 6d5db885h
push    edi
wait
in      al, 3bh
cmp     [eax+55ee0374h], esi
dec     edx
scasw
add     dword ptr [edi], 9a65d6ah
push    ebx
hlt
sub     esp, 178h
push    esi
push    edi
mov     [esp+180h+var_b8], 0
mov     [esp+180h+var_b4], 0
mov     [esp+180h+var_b0], 1
mov     [esp+180h+var_ac], 1
mov     [esp+180h+var_a8], 2
mov     [esp+180h+var_a4], 2
mov     [esp+180h+var_a0], 3
mov     [esp+180h+var_9c], 3
mov     [esp+180h+var_98], 4
mov     [esp+180h+var_94], 4
mov     [esp+180h+var_90], 5
mov     [esp+180h+var_8c], 5
mov     [esp+180h+var_88], 6
mov     [esp+180h+var_84], 6
mov     [esp+180h+var_80], 7
mov     [esp+180h+var_7c], 7
mov     [esp+180h+var_78], 8
mov     [esp+180h+var_74], 8
mov     [esp+180h+var_70], 9
mov     [esp+180h+var_6c], 9
mov     [esp+180h+var_68], 0bh
mov     [esp+180h+var_64], 0bh
mov     [esp+180h+var_60], 0ch
mov     [esp+180h+var_5c], 0ah
mov     [esp+180h+var_58], 0dh
mov     [esp+180h+var_54], 0ch
mov     [esp+180h+var_50], 0eh
mov     [esp+180h+var_4c], 0dh
mov     [esp+180h+var_48], 0fh
mov     [esp+180h+var_44], 0eh
mov     [esp+180h+var_40], 10h
mov     [esp+180h+var_3c], 0fh
mov     [esp+180h+var_38], 11h
mov     [esp+180h+var_34], 10h
mov     [esp+180h+var_30], 13h
mov     [esp+180h+var_2c], 12h
mov     [esp+180h+var_28], 17h
mov     [esp+180h+var_24], 15h
mov     [esp+180h+var_20], 18h
mov     [esp+180h+var_1c], 16h
mov     [esp+180h+var_18], 19h
mov     [esp+180h+var_14], 17h
mov     [esp+180h+var_10], 1ah
mov     [esp+180h+var_c], 18h
mov     [esp+180h+var_8], 1ch
mov     [esp+180h+var_4], 1ah
mov     [esp+180h+var_138], 0
mov     [esp+180h+var_134], 1eh
mov     [esp+180h+var_130], 1
mov     [esp+180h+var_12c], 1fh
mov     [esp+180h+var_128], 3
mov     [esp+180h+var_124], 21h
mov     [esp+180h+var_120], 9
mov     [esp+180h+var_11c], 27h
mov     [esp+180h+var_118], 0ch
mov     [esp+180h+var_114], 54h
mov     [esp+180h+var_110], 0dh
mov     [esp+180h+var_10c], 29h
mov     [esp+180h+var_108], 13h
mov     [esp+180h+var_104], 2dh
mov     [esp+180h+var_100], 14h
mov     [esp+180h+var_fc], 2eh
mov     [esp+180h+var_f8], 16h
mov     [esp+180h+var_f4], 31h
mov     [esp+180h+var_f0], 17h
mov     [esp+180h+var_ec], 32h
mov     [esp+180h+var_e8], 19h
mov     [esp+180h+var_e4], 33h
mov     [esp+180h+var_e0], 1ah
mov     [esp+180h+var_dc], 34h
mov     [esp+180h+var_d8], 1bh
mov     [esp+180h+var_d4], 35h
mov     [esp+180h+var_d0], 1ch
mov     [esp+180h+var_cc], 36h
mov     [esp+180h+var_c8], 1dh
mov     [esp+180h+var_c4], 57h
mov     [esp+180h+var_c0], 1eh
mov     [esp+180h+var_bc], 58h
mov     [esp+180h+var_168], 3
mov     edi, [esp+180h+arg_0]
mov     esi, [esp+180h+arg_4]
mov     [esp+180h+var_164], 5fh
mov     [esp+180h+var_160], 5
mov     eax, [edi]
mov     [esp+180h+var_15c], 5eh
mov     [esp+180h+var_158], 8
mov     [esp+180h+var_154], 60h
mov     [esp+180h+var_150], 0bh
mov     [esp+180h+var_14c], 2fh
mov     [esp+180h+var_148], 1bh
mov     [esp+180h+var_144], 3ch
mov     [esp+180h+var_140], 1dh
mov     [esp+180h+var_13c], 3dh
mov     [esp+180h+var_178], 0
mov     [esp+180h+var_174], 3eh
mov     [esp+180h+var_170], 8
mov     [esp+180h+var_16c], 52h
cmp     eax, 1
jb      short loc_37aae635
push    esi
push    dword ptr [edi+1ch]
lea     eax, [esp+188h+var_b8]
push    17h
push    eax
call    loc_37aafef0
push    esi
push    dword ptr [edi+18h]
lea     eax, [esp+198h+var_138]
push    10h
push    eax
call    loc_37aafef0
mov     eax, [edi]
add     esp, 20h
cmp     eax, 7
jb      short loc_37aae64d
push    esi
push    dword ptr [edi+74h]
lea     eax, [esp+188h+var_168]
push    3
push    eax
call    loc_37aafef0
add     esp, 10h
mov     eax, [edi+200h]
cmp     eax, 80000001h
jb      short loc_37aae689
push    esi
push    dword ptr [edi+21ch]
lea     eax, [esp+188h+var_150]
push    3
push    eax
call    loc_37aafef0
push    esi
push    dword ptr [edi+218h]
lea     eax, [esp+198h+var_178]
push    1
push    eax
call    loc_37aafef0
mov     eax, [edi+200h]
add     esp, 20h
cmp     eax, 80000007h
jb      short loc_37aae6a6
push    esi
push    dword ptr [edi+27ch]
lea     eax, [esp+188h+var_170]
push    1
push    eax
call    loc_37aafef0
add     esp, 10h
cmp     byte ptr [esi+6bh], 0
jz      short loc_37aae704
mov     eax, [esi+50h]
sub     eax, 0
jz      short loc_37aae6e2
sub     eax, 1
jnz     short loc_37aae704
mov     eax, [esi+0e0h]
cmp     eax, 10h
jl      short loc_37aae6f9
cmp     eax, 11h
mov     eax, 80h
jnz     short loc_37aae6fe
mov     eax, 40h
pop     edi
mov     [esi+168h], eax
pop     esi
add     esp, 178h
retn
cmp     dword ptr [esi+0d4h], 6
jnz     short loc_37aae6f9
cmp     dword ptr [esi+0e4h], 0fh
mov     eax, 80h
jge     short loc_37aae6fe
mov     eax, 40h
mov     [esi+168h], eax
pop     edi
pop     esi
add     esp, 178h
retn
add     eax, offset dword_37af1aa0
movups  xmmword ptr [esp+0ch], xmm0
movaps  xmm0, ds:xmmword_37af1ab0
movups  xmmword ptr [esp+1ch], xmm0
movaps  xmm0, ds:xmmword_37af1ac0
movups  xmmword ptr [esp+2ch], xmm0
movaps  xmm0, ds:xmmword_37af1ad0
movups  xmmword ptr [esp+3ch], xmm0
cmp     ecx, 80000005h
jb      short loc_37aaeabe
movzx   eax, byte ptr [edi+25bh]
mov     [esi+0f4h], eax
movzx   eax, byte ptr [edi+25ah]
mov     [esi+108h], eax
movzx   eax, byte ptr [edi+258h]
mov     [esi+118h], eax
movzx   eax, byte ptr [edi+25fh]
mov     [esi+0f8h], eax
cmp     ecx, 80000006h
jb      short loc_37aaeb3b
movzx   eax, word ptr [edi+26ah]
mov     [esi+0fch], eax
mov     eax, [edi+268h]
shr     eax, 0ch
and     eax, 0fh
mov     eax, [esp+eax*4+0ch]
mov     [esi+10ch], eax
movzx   eax, byte ptr [edi+268h]
mov     [esi+11ch], eax
mov     eax, [edi+26ch]
shr     eax, 12h
test    eax, eax
jz      short loc_37aaeb31
shl     eax, 9
mov     [esi+100h], eax
mov     eax, [edi+26ch]
shr     eax, 0ch
and     eax, 0fh
mov     eax, [esp+eax*4+0ch]
mov     [esi+110h], eax
movzx   eax, byte ptr [edi+26ch]
mov     [esi+120h], eax
jmp     short loc_37aaeb3b
mov     dword ptr [esi+100h], 0
or      ebx, 0ffffffffh
or      ecx, ebx
cmp     dword ptr [edi], 1
jb      short loc_37aaeb5a
cmp     dword ptr [edi+200h], 8
movzx   ebx, byte ptr [edi+16h]
jb      short loc_37aaeb5a
movzx   ecx, byte ptr [edi+288h]
inc     ecx
cmp     byte ptr [esi+6eh], 0
jz      short loc_37aaebb7
cmp     ecx, 1
jle     short loc_37aaeb8e
mov     eax, ecx
cdq
sub     eax, edx
sar     eax, 1
cmp     dword ptr [esi+0e0h], 17h
pop     edi
cmovl   eax, ecx
mov     [esi+0e8h], eax
xor     eax, eax
mov     [esi+0ech], ebx
pop     esi
pop     ebx
add     esp, 108h
retn
mov     eax, 2
cmp     ebx, eax
pop     edi
cmovge  eax, ebx
mov     ebx, eax
mov     eax, 1
mov     [esi+0e8h], eax
xor     eax, eax
mov     [esi+0ech], ebx
pop     esi
pop     ebx
add     esp, 108h
retn
mov     dword ptr [esi+0e8h], 1
xor     eax, eax
pop     edi
mov     dword ptr [esi+0ech], 1
pop     esi
pop     ebx
add     esp, 108h
retn
push    edx
pop     ebx
inc     esp
dec     esp
rep jmp near ptr 7472a514h
jb      short loc_37aafea2
daa
test    [edi+edx*2], edi
out     dx, eax
push    es
out     1ch, eax
mov     ecx, [esp+4]
mov     edx, [esp+8]
and     ecx, [esp+0ch]
and     edx, [esp+10h]
cmp     ecx, [esp+0ch]
jnz     short loc_37aafee2
cmp     edx, [esp+10h]
jnz     short loc_37aafee2
mov     eax, 1
retn
xor     eax, eax
retn
out     0f7h, eax
stosd
mov     ds:7eff82c3h, eax
cmp     [eax], ecx
mov     ds:12057801h, eax
inc     eax
add     byte ptr [edi+5c0f5d6bh], 2ah
xor     [edi+403c5430h], ebp
push    eax
insb
rcl     dh, 1
add     [si-6], bh
movsb
fld     dword ptr [esi+28h]
sub     eax, 735f167bh
jb      short near ptr loc_37aaff11+1
cdq
loopne  loc_37aafeb6
loopne  loc_37aaff7e
mov     ch, 5dh
push    es
fisttp  qword ptr [edi+588b3de4h]
shl     dword ptr [edi+4b0c2566h], 1
in      al, 67h
scasb
inc     ebx
scasd
xchg    eax, ebx
inc     ebx
xchg    eax, ebx
mov     esi, esp
call    far ptr 5c8bh:530cec83h
and     al, 14h
mov     edx, ebx
push    ebp
push    esi
push    edi
lea     ecx, [edx+1]
mov     al, [edx]
inc     edx
test    al, al
jnz     short loc_37aaff50
mov     edi, [esp+24h]
sub     edx, ecx
mov     ebp, edi
mov     [esp+18h], edx
lea     ecx, [ebp+1]
mov     al, [ebp+0]
inc     ebp
test    al, al
jnz     short loc_37aaff66
sub     ebp, ecx
xor     ecx, ecx
mov     [esp+14h], ecx
test    edx, edx
jle     loc_37ab004e
mov     eax, [esp+18h]
mov     dl, [ebx+ecx]
add     ebx, ecx
mov     [esp+13h], dl
test    dl, dl
jz      loc_37ab002f
mov     al, [edi]
cmp     dl, al
jz      short loc_37ab0001
cmp     al, 2eh
jz      short loc_37ab0001
cmp     al, 23h
jnz     short loc_37aaffb9
movsx   eax, dl
push    eax
call    _isdigit
add     esp, 4
test    eax, eax
jnz     short loc_37ab0001
mov     dl, [esp+13h]
mov     ecx, [esp+14h]
cmp     byte ptr [edi], 5bh
jnz     short loc_37ab002b
mov     cl, [edi+1]
mov     eax, 1
test    cl, cl
jz      short loc_37aaffde
nop     word ptr [eax+eax+00h]
cmp     cl, 5dh
jz      short loc_37aaffde
mov     cl, [eax+edi+1]
inc     eax
test    cl, cl
jnz     short loc_37aaffd0
cmp     byte ptr [eax+edi], 0
jz      short loc_37ab0027
mov     ecx, 1
cmp     eax, ecx
jle     short loc_37ab0027
nop     dword ptr [eax]
cmp     [ecx+edi], dl
jz      short loc_37aafffc
inc     ecx
cmp     ecx, eax
jl      short loc_37aafff0
jmp     short loc_37ab0027
cmp     eax, 0fffffffeh
jz      short loc_37ab0027
xor     esi, esi
test    ebp, ebp
jle     short loc_37ab0023
lea     eax, [esi+edi]
push    eax
movzx   eax, byte ptr [ebx]
push    eax
call    loc_37ab0060
add     esp, 8
cmp     eax, 0ffffffffh
jz      short loc_37ab0023
add     esi, eax
inc     ebx
cmp     esi, ebp
jl      short loc_37ab0007
cmp     esi, ebp
jz      short loc_37ab0041
mov     ecx, [esp+14h]
mov     eax, [esp+18h]
inc     ecx
mov     [esp+14h], ecx
cmp     ecx, eax
jge     short loc_37ab004e
mov     ebx, [esp+20h]
jmp     loc_37aaff82
mov     eax, [esp+14h]
pop     edi
pop     esi
pop     ebp
inc     eax
pop     ebx
add     esp, 0ch
retn
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 0ch
retn
scasd
jmp     ds:createtoolhelp32snapshot
jmp     ds:process32firstw
jmp     ds:process32nextw
jmp     ds:module32firstw
jmp     ds:module32nextw
push    ebp
mov     ebp, esp
push    esi
push    dword ptr [ebp+8]
mov     esi, ecx
call    loc_37a9d200
mov     dword ptr [esi], offset off_37af1bac
mov     eax, esi
pop     esi
pop     ebp
retn    4
and     dword ptr [ecx+4], 0
mov     eax, ecx
and     dword ptr [ecx+8], 0
mov     dword ptr [ecx+4], offset abadallocation
mov     dword ptr [ecx], offset off_37af1bac
retn
push    ebp
mov     ebp, esp
push    esi
push    dword ptr [ebp+8]
mov     esi, ecx
call    loc_37a9d200
mov     dword ptr [esi], offset off_37af1bd4
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    [ebp+arg_0]
mov     esi, ecx
mov     [ebp+var_4], esi
call    ??0exception@std@@qae@qbd@z
mov     dword ptr [esi], offset off_37af1bd4
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    dword ptr [ebp+8]
mov     esi, ecx
call    loc_37a9d200
mov     dword ptr [esi], offset off_37af1bc8
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    esi
push    dword ptr [ebp+8]
mov     esi, ecx
call    loc_37a9d200
mov     dword ptr [esi], offset off_37af1be0
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
push    esi
push    [ebp+arg_0]
mov     esi, ecx
mov     [ebp+var_4], esi
call    ??0exception@std@@qae@qbd@z
mov     dword ptr [esi], offset off_37af1be0
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     ecx, [ebp+pexceptionobject]
push    [ebp+arg_0]
call    sub_37ab0187
push    offset stru_37b095c8
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     ecx, [ebp+pexceptionobject]
push    [ebp+arg_0]
call    sub_37ab01de
push    offset stru_37b09604
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
or      eax, 0ffffffffh
lock xadd dword_37b67b70, eax
jns     short locret_37ab02f0
push    esi
mov     esi, offset stru_37b72018
push    esi
call    __mtxdst
add     esi, 18h
pop     ecx
cmp     esi, offset dword_37b720d8
jl      short loc_37ab02dd
pop     esi
retn
mov     eax, dword_37b720dc
retn
push    ebp
mov     ebp, esp
push    [ebp+lpcriticalsection]
call    ds:leavecriticalsection
pop     ebp
retn
push    esi
mov     esi, ecx
call    sub_37ab15c3
mov     eax, 37a10000h
mov     dword ptr [esi], 38h
lea     ecx, [esi+14h]
mov     [esi+8], eax
mov     [esi+4], eax
mov     dword ptr [esi+0ch], 0e00h
mov     dword ptr [esi+10h], offset dword_37af4bf8
call    sub_37ab15fc
test    eax, eax
jns     short loc_37ab15bf
call    ds:isdebuggerpresent
test    eax, eax
jz      short loc_37ab15b8
push    offset outputstring
call    ds:outputdebugstringw
mov     byte_37b71b20, 1
mov     eax, esi
pop     esi
retn
push    esi
push    edi
mov     esi, ecx
xor     edi, edi
push    18h
push    edi
lea     eax, [esi+14h]
push    eax
call    _memset
add     esp, 0ch
mov     [esi+2ch], edi
mov     [esi+30h], edi
mov     eax, esi
mov     [esi+34h], edi
pop     edi
pop     esi
retn
push    esi
mov     esi, ecx
lea     eax, [esi+14h]
push    eax
call    ds:deletecriticalsection
lea     ecx, [esi+2ch]
pop     esi
jmp     loc_37ab1627
push    esi
xor     esi, esi
push    esi
push    esi
push    ecx
call    near ptr loc_37a9a66a+6
add     esp, 0ch
test    eax, eax
jnz     short loc_37ab1623
call    ds:getlasterror
mov     esi, eax
test    esi, esi
jle     short loc_37ab1623
movzx   esi, si
or      esi, 80070000h
mov     eax, esi
pop     esi
retn
push    esi
mov     esi, ecx
cmp     dword ptr [esi], 0
jz      short loc_37ab163a
push    dword ptr [esi]
call    j___free_base
and     dword ptr [esi], 0
pop     ecx
and     dword ptr [esi+4], 0
and     dword ptr [esi+8], 0
pop     esi
retn
push    ebp
mov     ebp, esp
mov     edx, [ebp+8]
push    edi
mov     edi, ecx
mov     dword ptr [edi], offset off_37af4c8c
mov     eax, [edx+4]
mov     [edi+4], eax
mov     ecx, [edx+8]
mov     [edi+8], ecx
mov     dword ptr [edi+0ch], 0
test    ecx, ecx
jz      short loc_37ab1687
mov     eax, [ecx]
push    esi
push    ecx
mov     esi, [eax+4]
mov     ecx, esi
call    j_@_guard_check_icall_nop@4
call    esi
pop     esi
mov     eax, edi
pop     edi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    edi
mov     edi, ecx
mov     ecx, [ebp+arg_4]
mov     dword ptr [edi], offset off_37af4c8c
mov     [edi+4], eax
mov     [edi+8], ecx
mov     dword ptr [edi+0ch], 0
test    ecx, ecx
jz      short loc_37ab16ca
cmp     [ebp+arg_8], 0
jz      short loc_37ab16ca
mov     eax, [ecx]
push    esi
push    ecx
mov     esi, [eax+4]
mov     ecx, esi
call    j_@_guard_check_icall_nop@4
call    esi
pop     esi
mov     eax, edi
pop     edi
pop     ebp
retn    0ch
push    edi
mov     edi, ecx
mov     ecx, [edi+8]
mov     dword ptr [edi], offset off_37af4c8c
test    ecx, ecx
jz      short loc_37ab1701
mov     eax, [ecx]
push    esi
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    j_@_guard_check_icall_nop@4
call    esi
pop     esi
mov     eax, [edi+0ch]
pop     edi
test    eax, eax
jz      short locret_37ab1710
push    eax
call    ds:localfree
retn
push    ebp
mov     ebp, esp
push    edi
mov     edi, ecx
mov     ecx, [edi+8]
mov     dword ptr [edi], offset off_37af4c8c
test    ecx, ecx
jz      short loc_37ab1744
mov     eax, [ecx]
push    esi
push    ecx
mov     esi, [eax+8]
mov     ecx, esi
call    j_@_guard_check_icall_nop@4
call    esi
pop     esi
mov     eax, [edi+0ch]
test    eax, eax
jz      short loc_37ab1752
push    eax
call    ds:localfree
test    [ebp+arg_0], 1
jz      short loc_37ab1763
push    10h
push    edi
call    sub_37ab1b25
add     esp, 8
mov     eax, edi
pop     edi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 10h
lea     ecx, [ebp+pexceptionobject]
push    0
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_37ab1690
push    offset stru_37b09698
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
call    ___acrt_thread_detach
call    ___vcrt_thread_detach
mov     al, 1
retn
push    ebp
mov     ebp, esp
push    [ebp+block]
call    j_j___free_base
pop     ecx
pop     ebp
retn
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_37af4c94
jz      short loc_37ab1bb0
push    0ch
push    esi
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    dword ptr [ebp+8]
call    j_j_j___free_base
pop     ecx
pop     ebp
retn
mov     ecx, 1
movsd   xmm5, ds:qword_37af4d18
jmp     short __dtol3_nan
cmp     cl, 40h
jnb     short retsign
cmp     cl, 20h
jnb     short more32_1
shrd    eax, edx, cl
sar     edx, cl
retn
mov     eax, edx
sar     edx, 1fh
and     cl, 1fh
sar     eax, cl
retn
sar     edx, 1fh
mov     eax, edx
retn
xor     eax, eax
inc     eax
retn
and     dword_37b724ec, 0
retn
push    ebp
mov     ebp, esp
push    esi
push    dword ptr [ebp+8]
mov     esi, ecx
call    loc_37a9d200
mov     dword ptr [esi], offset off_37af4d6c
mov     eax, esi
pop     esi
pop     ebp
retn    4
and     dword ptr [ecx+4], 0
mov     eax, ecx
and     dword ptr [ecx+8], 0
mov     dword ptr [ecx+4], offset abadarraynewlen
mov     dword ptr [ecx], offset off_37af4d6c
retn
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     ecx, [ebp+pexceptionobject]
call    sub_37ab011d
push    offset stru_37b09574
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
push    ebp
mov     ebp, esp
sub     esp, 0ch
lea     ecx, [ebp+pexceptionobject]
call    sub_37ab2bf6
push    offset stru_37b097ac
lea     eax, [ebp+pexceptionobject]
push    eax
call    __cxxthrowexception@8
push    offset listhead
call    ds:initializeslisthead
retn
push    offset listhead
call    ___std_type_info_destroy_list
pop     ecx
retn
mov     eax, offset dword_37b736f0
retn
push    ebx
push    esi
mov     esi, offset dword_37b052e4
mov     ebx, offset dword_37b052e4
cmp     esi, ebx
jnb     short loc_37ab2d45
push    edi
mov     edi, [esi]
test    edi, edi
jz      short loc_37ab2d3d
mov     ecx, edi
call    j_@_guard_check_icall_nop@4
call    edi
add     esi, 4
cmp     esi, ebx
jb      short loc_37ab2d2e
pop     edi
pop     esi
pop     ebx
retn
push    ebx
push    esi
mov     esi, offset dword_37b052ec
mov     ebx, offset dword_37b052ec
cmp     esi, ebx
jnb     short loc_37ab2d70
push    edi
mov     edi, [esi]
test    edi, edi
jz      short loc_37ab2d68
mov     ecx, edi
call    j_@_guard_check_icall_nop@4
call    edi
add     esi, 4
cmp     esi, ebx
jb      short loc_37ab2d59
pop     edi
pop     esi
pop     ebx
retn
push    ecx
call    ds:deletecriticalsection
retn
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     dword_37b72898, 1
push    esi
push    offset dword_37b728a0
call    dword ptr ds:loc_37a11fee
mov     esi, eax
lea     eax, [ebp-8]
xor     esi, ___security_cookie
push    eax
push    eax
push    eax
lea     eax, [ebp-10h]
push    eax
call    ds:getcurrentthread
push    eax
call    ds:getthreadtimes
test    eax, eax
jz      short loc_37ab3058
mov     eax, [ebp-0ch]
xor     eax, [ebp-10h]
xor     esi, eax
mov     eax, esi
pop     esi
mov     esp, ebp
pop     ebp
retn
jmp     _terminate
pop     ebx
mov     esp, ebp
pop     ebp
retn    8
push    esi
inc     ebx
xor     dh, [eax]
pop     eax
inc     ebx
xor     [eax], dh
push    ebp
mov     ebp, esp
push    esi
push    dword ptr [ebp+8]
mov     esi, ecx
call    loc_37a9d200
mov     dword ptr [esi], offset off_37af54c0
mov     eax, esi
pop     esi
pop     ebp
retn    4
and     dword ptr [ecx+4], 0
mov     eax, ecx
and     dword ptr [ecx+8], 0
mov     dword ptr [ecx+4], offset abadexception
mov     dword ptr [ecx], offset off_37af54c0
retn
mov     edi, edi
push    ebp
push    dword ptr [esp+8]
call    ___except_validate_jump_buffer
add     esp, 4
mov     ecx, [esp+8]
mov     ebp, [ecx]
push    dword ptr [ecx+1ch]
push    dword ptr [ecx+18h]
push    dword ptr [ecx+28h]
call    __local_unwind4
add     esp, 0ch
pop     ebp
retn    4
mov     edi, edi
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_0]
mov     ecx, offset dword_37b72a68
call    unknown_libname_20
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_11b4f7b0d3157825a5656a18eba1ae27_@@aav_lambda_b51c0495177f500e782686251704ae76_@@v_lambda_cf89b47920b5017557bfe891e78aca36_@@@?$__crt_seh_guarded_call@i@@qaei$$qav_lambda_11b4f7b0d3157825a5656a18eba1ae27_@@aav_lambda_b51c0495177f500e782686251704ae76_@@$$qav_lambda_cf89b47920b5017557bfe891e78aca36_@@@z
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 484h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
cmp     [ebp+arg_10], 0
mov     eax, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_c]
mov     [ebp+var_460], eax
jnz     short loc_37ab96d8
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_37ab97e9
test    ebx, ebx
jz      short loc_37ab96e0
test    eax, eax
jz      short loc_37ab96c0
push    esi
push    edi
push    [ebp+arg_14]
lea     ecx, [ebp+var_484]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     ecx, [ebp+arg_0]
lea     edi, [ebp+var_470]
xor     eax, eax
xor     edx, edx
stosd
stosd
stosd
stosd
mov     eax, ecx
mov     edi, [ebp+var_460]
and     eax, 2
mov     [ebp+var_474], eax
or      eax, edx
mov     [ebp+var_470], edi
mov     [ebp+var_46c], ebx
mov     [ebp+var_468], edx
jnz     short loc_37ab9732
mov     [ebp+var_464], dl
test    edi, edi
jnz     short loc_37ab9739
mov     [ebp+var_464], 1
push    [ebp+arg_18]
lea     eax, [ebp+var_470]
mov     [ebp+var_460], eax
lea     eax, [ebp+var_480]
push    eax
push    [ebp+arg_10]
lea     eax, [ebp+var_460]
push    [ebp+arg_4]
push    ecx
push    eax
lea     ecx, [ebp+var_45c]
call    unknown_libname_28
lea     ecx, [ebp+var_45c]
call    sub_37aba628
mov     esi, eax
test    edi, edi
jz      short loc_37ab97c4
mov     eax, [ebp+arg_0]
xor     ecx, ecx
and     eax, 1
or      eax, ecx
jz      short loc_37ab97a1
test    ebx, ebx
jnz     short loc_37ab978d
test    esi, esi
jnz     short loc_37ab97fc
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_37ab97c1
test    esi, esi
js      short loc_37ab97c4
cmp     esi, ebx
jbe     short loc_37ab97c4
jmp     short loc_37ab97fc
mov     eax, [ebp+var_474]
or      eax, ecx
jz      short loc_37ab97f8
test    ebx, ebx
jz      short loc_37ab97c4
test    esi, esi
jns     short loc_37ab97b7
mov     [edi], cl
jmp     short loc_37ab97c4
mov     eax, [ebp+var_468]
cmp     eax, ebx
jz      short loc_37ab980e
mov     [edi+eax], cl
lea     ecx, [ebp+var_41c]
call    ??1formatting_buffer@__crt_stdio_output@@qae@xz
cmp     [ebp+var_478], 0
jz      short loc_37ab97e5
mov     ecx, [ebp+var_484]
and     dword ptr [ecx+350h], 0fffffffdh
pop     edi
mov     eax, esi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    ebx, ebx
jnz     short loc_37ab9801
or      esi, 0ffffffffh
jmp     short loc_37ab97c4
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_37ab97c1
push    0fffffffeh
pop     esi
mov     [edi+ebx-1], cl
jmp     short loc_37ab97c4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 484h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
cmp     [ebp+arg_10], 0
mov     eax, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_c]
mov     [ebp+var_460], eax
jnz     short loc_37ab9854
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_37ab996b
test    ebx, ebx
jz      short loc_37ab985c
test    eax, eax
jz      short loc_37ab983c
push    esi
push    edi
push    [ebp+arg_14]
lea     ecx, [ebp+var_484]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     ecx, [ebp+arg_0]
lea     edi, [ebp+var_470]
xor     eax, eax
xor     edx, edx
stosd
stosd
stosd
stosd
mov     eax, ecx
mov     edi, [ebp+var_460]
and     eax, 2
mov     [ebp+var_474], eax
or      eax, edx
mov     [ebp+var_470], edi
mov     [ebp+var_46c], ebx
mov     [ebp+var_468], edx
jnz     short loc_37ab98ae
mov     [ebp+var_464], dl
test    edi, edi
jnz     short loc_37ab98b5
mov     [ebp+var_464], 1
push    [ebp+arg_18]
lea     eax, [ebp+var_470]
mov     [ebp+var_460], eax
lea     eax, [ebp+var_480]
push    eax
push    [ebp+arg_10]
lea     eax, [ebp+var_460]
push    [ebp+arg_4]
push    ecx
push    eax
lea     ecx, [ebp+var_45c]
call    unknown_libname_29
lea     ecx, [ebp+var_45c]
call    sub_37aba86c
mov     esi, eax
test    edi, edi
jz      short loc_37ab9946
mov     eax, [ebp+arg_0]
and     eax, 1
or      eax, 0
jz      short loc_37ab991c
test    ebx, ebx
jnz     short loc_37ab9908
test    esi, esi
jnz     short loc_37ab997e
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_37ab9940
test    esi, esi
js      short loc_37ab9946
cmp     esi, ebx
jbe     short loc_37ab9946
jmp     short loc_37ab997e
mov     eax, [ebp+var_474]
or      eax, 0
jz      short loc_37ab997a
test    ebx, ebx
jz      short loc_37ab9946
test    esi, esi
jns     short loc_37ab9936
xor     eax, eax
mov     [edi], ax
jmp     short loc_37ab9946
mov     eax, [ebp+var_468]
cmp     eax, ebx
jz      short loc_37ab9990
xor     ecx, ecx
mov     [edi+eax*2], cx
lea     ecx, [ebp+var_41c]
call    ??1formatting_buffer@__crt_stdio_output@@qae@xz
cmp     [ebp+var_478], 0
jz      short loc_37ab9967
mov     ecx, [ebp+var_484]
and     dword ptr [ecx+350h], 0fffffffdh
pop     edi
mov     eax, esi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    ebx, ebx
jnz     short loc_37ab9983
or      esi, 0ffffffffh
jmp     short loc_37ab9946
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_37ab9940
push    0fffffffeh
pop     esi
xor     eax, eax
mov     [edi+ebx*2-2], ax
jmp     short loc_37ab9946
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 484h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
cmp     [ebp+arg_10], 0
mov     eax, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_c]
mov     [ebp+var_460], eax
jnz     short loc_37ab99d9
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_37ab9aea
test    ebx, ebx
jz      short loc_37ab99e1
test    eax, eax
jz      short loc_37ab99c1
push    esi
push    edi
push    [ebp+arg_14]
lea     ecx, [ebp+var_484]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     ecx, [ebp+arg_0]
lea     edi, [ebp+var_470]
xor     eax, eax
xor     edx, edx
stosd
stosd
stosd
stosd
mov     eax, ecx
mov     edi, [ebp+var_460]
and     eax, 2
mov     [ebp+var_474], eax
or      eax, edx
mov     [ebp+var_470], edi
mov     [ebp+var_46c], ebx
mov     [ebp+var_468], edx
jnz     short loc_37ab9a33
mov     [ebp+var_464], dl
test    edi, edi
jnz     short loc_37ab9a3a
mov     [ebp+var_464], 1
push    [ebp+arg_18]
lea     eax, [ebp+var_470]
mov     [ebp+var_460], eax
lea     eax, [ebp+var_480]
push    eax
push    [ebp+arg_10]
lea     eax, [ebp+var_460]
push    [ebp+arg_4]
push    ecx
push    eax
lea     ecx, [ebp+var_45c]
call    unknown_libname_28
lea     ecx, [ebp+var_45c]
call    sub_37aba750
mov     esi, eax
test    edi, edi
jz      short loc_37ab9ac5
mov     eax, [ebp+arg_0]
xor     ecx, ecx
and     eax, 1
or      eax, ecx
jz      short loc_37ab9aa2
test    ebx, ebx
jnz     short loc_37ab9a8e
test    esi, esi
jnz     short loc_37ab9afd
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_37ab9ac2
test    esi, esi
js      short loc_37ab9ac5
cmp     esi, ebx
jbe     short loc_37ab9ac5
jmp     short loc_37ab9afd
mov     eax, [ebp+var_474]
or      eax, ecx
jz      short loc_37ab9af9
test    ebx, ebx
jz      short loc_37ab9ac5
test    esi, esi
jns     short loc_37ab9ab8
mov     [edi], cl
jmp     short loc_37ab9ac5
mov     eax, [ebp+var_468]
cmp     eax, ebx
jz      short loc_37ab9b0f
mov     [edi+eax], cl
lea     ecx, [ebp+var_41c]
call    ??1formatting_buffer@__crt_stdio_output@@qae@xz
cmp     [ebp+var_478], 0
jz      short loc_37ab9ae6
mov     ecx, [ebp+var_484]
and     dword ptr [ecx+350h], 0fffffffdh
pop     edi
mov     eax, esi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    ebx, ebx
jnz     short loc_37ab9b02
or      esi, 0ffffffffh
jmp     short loc_37ab9ac5
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_37ab9ac2
push    0fffffffeh
pop     esi
mov     [edi+ebx-1], cl
jmp     short loc_37ab9ac5
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 484h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
cmp     [ebp+arg_10], 0
mov     eax, [ebp+arg_8]
push    ebx
mov     ebx, [ebp+arg_c]
mov     [ebp+var_460], eax
jnz     short loc_37ab9b55
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_37ab9c6c
test    ebx, ebx
jz      short loc_37ab9b5d
test    eax, eax
jz      short loc_37ab9b3d
push    esi
push    edi
push    [ebp+arg_14]
lea     ecx, [ebp+var_484]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
mov     ecx, [ebp+arg_0]
lea     edi, [ebp+var_470]
xor     eax, eax
xor     edx, edx
stosd
stosd
stosd
stosd
mov     eax, ecx
mov     edi, [ebp+var_460]
and     eax, 2
mov     [ebp+var_474], eax
or      eax, edx
mov     [ebp+var_470], edi
mov     [ebp+var_46c], ebx
mov     [ebp+var_468], edx
jnz     short loc_37ab9baf
mov     [ebp+var_464], dl
test    edi, edi
jnz     short loc_37ab9bb6
mov     [ebp+var_464], 1
push    [ebp+arg_18]
lea     eax, [ebp+var_470]
mov     [ebp+var_460], eax
lea     eax, [ebp+var_480]
push    eax
push    [ebp+arg_10]
lea     eax, [ebp+var_460]
push    [ebp+arg_4]
push    ecx
push    eax
lea     ecx, [ebp+var_45c]
call    unknown_libname_29
lea     ecx, [ebp+var_45c]
call    sub_37aba99c
mov     esi, eax
test    edi, edi
jz      short loc_37ab9c47
mov     eax, [ebp+arg_0]
and     eax, 1
or      eax, 0
jz      short loc_37ab9c1d
test    ebx, ebx
jnz     short loc_37ab9c09
test    esi, esi
jnz     short loc_37ab9c7f
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_37ab9c41
test    esi, esi
js      short loc_37ab9c47
cmp     esi, ebx
jbe     short loc_37ab9c47
jmp     short loc_37ab9c7f
mov     eax, [ebp+var_474]
or      eax, 0
jz      short loc_37ab9c7b
test    ebx, ebx
jz      short loc_37ab9c47
test    esi, esi
jns     short loc_37ab9c37
xor     eax, eax
mov     [edi], ax
jmp     short loc_37ab9c47
mov     eax, [ebp+var_468]
cmp     eax, ebx
jz      short loc_37ab9c91
xor     ecx, ecx
mov     [edi+eax*2], cx
lea     ecx, [ebp+var_41c]
call    ??1formatting_buffer@__crt_stdio_output@@qae@xz
cmp     [ebp+var_478], 0
jz      short loc_37ab9c68
mov     ecx, [ebp+var_484]
and     dword ptr [ecx+350h], 0fffffffdh
pop     edi
mov     eax, esi
pop     esi
mov     ecx, [ebp+var_4]
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
test    ebx, ebx
jnz     short loc_37ab9c84
or      esi, 0ffffffffh
jmp     short loc_37ab9c47
mov     eax, [ebp+var_468]
cmp     eax, ebx
jnz     short loc_37ab9c41
push    0fffffffeh
pop     esi
xor     eax, eax
mov     [edi+ebx*2-2], ax
jmp     short loc_37ab9c47
mov     edi, edi
push    esi
mov     esi, ecx
lea     ecx, [esi+448h]
call    unknown_libname_51
test    al, al
jnz     short loc_37aba525
or      eax, 0ffffffffh
pop     esi
retn
push    ebx
xor     ebx, ebx
cmp     [esi+10h], ebx
jnz     loc_37aba5ec
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_37aba602
mov     [esi+38h], ebx
mov     [esi+1ch], ebx
jmp     loc_37aba5d9
inc     dword ptr [esi+10h]
cmp     [esi+18h], ebx
jl      loc_37aba5ec
push    dword ptr [esi+1ch]
movzx   eax, byte ptr [esi+31h]
mov     ecx, esi
push    eax
call    unknown_libname_31
mov     [esi+1ch], eax
cmp     eax, 8
jz      short loc_37aba531
cmp     eax, 7
ja      short def_37aba57c
jmp     ds:jpt_37aba57c[eax*4]
mov     ecx, esi
call    sub_37abab36
jmp     short loc_37aba5d1
or      dword ptr [esi+28h], 0ffffffffh
mov     [esi+24h], ebx
mov     [esi+30h], bl
mov     [esi+20h], ebx
mov     [esi+2ch], ebx
mov     [esi+3ch], bl
jmp     short loc_37aba5d9
mov     ecx, esi
call    unknown_libname_37
jmp     short loc_37aba5d1
mov     ecx, esi
call    sub_37abb81e
jmp     short loc_37aba5d1
mov     [esi+28h], ebx
jmp     short loc_37aba5d9
mov     ecx, esi
call    sub_37abacc4
jmp     short loc_37aba5d1
mov     ecx, esi
call    sub_37abad15
jmp     short loc_37aba5d1
mov     ecx, esi
call    sub_37abb163
test    al, al
jz      def_37aba57c
mov     eax, [esi+10h]
mov     al, [eax]
mov     [esi+31h], al
test    al, al
jnz     loc_37aba554
inc     dword ptr [esi+10h]
inc     dword ptr [esi+450h]
cmp     dword ptr [esi+450h], 2
jnz     loc_37aba549
mov     eax, [esi+18h]
pop     ebx
pop     esi
retn
mov     edi, edi
push    esi
mov     esi, ecx
lea     ecx, [esi+448h]
call    unknown_libname_22
test    al, al
jnz     short loc_37aba641
or      eax, 0ffffffffh
pop     esi
retn
push    ebx
xor     ebx, ebx
cmp     [esi+10h], ebx
jnz     loc_37aba717
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_37aba72d
mov     [esi+38h], ebx
mov     [esi+1ch], ebx
jmp     loc_37aba6f5
inc     dword ptr [esi+10h]
cmp     [esi+18h], ebx
jl      loc_37aba708
push    dword ptr [esi+1ch]
movzx   eax, byte ptr [esi+31h]
mov     ecx, esi
push    eax
call    unknown_libname_32
mov     [esi+1ch], eax
cmp     eax, 8
jz      short loc_37aba64d
cmp     eax, 7
ja      short def_37aba698
jmp     ds:jpt_37aba698[eax*4]
mov     ecx, esi
call    sub_37abab55
jmp     short loc_37aba6ed
or      dword ptr [esi+28h], 0ffffffffh
mov     [esi+24h], ebx
mov     [esi+30h], bl
mov     [esi+20h], ebx
mov     [esi+2ch], ebx
mov     [esi+3ch], bl
jmp     short loc_37aba6f5
mov     ecx, esi
call    unknown_libname_37
jmp     short loc_37aba6ed
mov     ecx, esi
call    sub_37abb81e
jmp     short loc_37aba6ed
mov     [esi+28h], ebx
jmp     short loc_37aba6f5
mov     ecx, esi
call    sub_37abacc4
jmp     short loc_37aba6ed
mov     ecx, esi
call    sub_37abae7e
jmp     short loc_37aba6ed
mov     ecx, esi
call    sub_37abb392
test    al, al
jz      def_37aba698
mov     eax, [esi+10h]
mov     al, [eax]
mov     [esi+31h], al
test    al, al
jnz     loc_37aba670
inc     dword ptr [esi+10h]
mov     ecx, esi
call    unknown_libname_52
test    al, al
jz      def_37aba698
inc     dword ptr [esi+450h]
cmp     dword ptr [esi+450h], 2
jnz     loc_37aba665
mov     eax, [esi+18h]
pop     ebx
pop     esi
retn
mov     edi, edi
push    esi
mov     esi, ecx
lea     ecx, [esi+448h]
call    unknown_libname_22
test    al, al
jnz     short loc_37aba769
or      eax, 0ffffffffh
pop     esi
retn
push    ebx
xor     ebx, ebx
cmp     [esi+10h], ebx
jnz     loc_37aba830
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_37aba846
mov     [esi+38h], ebx
mov     [esi+1ch], ebx
jmp     loc_37aba81d
inc     dword ptr [esi+10h]
cmp     [esi+18h], ebx
jl      loc_37aba830
push    dword ptr [esi+1ch]
movzx   eax, byte ptr [esi+31h]
mov     ecx, esi
push    eax
call    unknown_libname_31
mov     [esi+1ch], eax
cmp     eax, 8
jz      short loc_37aba775
cmp     eax, 7
ja      short def_37aba7c0
jmp     ds:jpt_37aba7c0[eax*4]
mov     ecx, esi
call    sub_37abab55
jmp     short loc_37aba815
or      dword ptr [esi+28h], 0ffffffffh
mov     [esi+24h], ebx
mov     [esi+30h], bl
mov     [esi+20h], ebx
mov     [esi+2ch], ebx
mov     [esi+3ch], bl
jmp     short loc_37aba81d
mov     ecx, esi
call    unknown_libname_37
jmp     short loc_37aba815
mov     ecx, esi
call    sub_37abb81e
jmp     short loc_37aba815
mov     [esi+28h], ebx
jmp     short loc_37aba81d
mov     ecx, esi
call    sub_37abacc4
jmp     short loc_37aba815
mov     ecx, esi
call    sub_37abae7e
jmp     short loc_37aba815
mov     ecx, esi
call    sub_37abb392
test    al, al
jz      def_37aba7c0
mov     eax, [esi+10h]
mov     al, [eax]
mov     [esi+31h], al
test    al, al
jnz     loc_37aba798
inc     dword ptr [esi+10h]
inc     dword ptr [esi+450h]
cmp     dword ptr [esi+450h], 2
jnz     loc_37aba78d
mov     eax, [esi+18h]
pop     ebx
pop     esi
retn
mov     edi, edi
push    esi
mov     esi, ecx
lea     ecx, [esi+448h]
call    unknown_libname_22
test    al, al
jnz     short loc_37aba885
or      eax, 0ffffffffh
pop     esi
retn
push    ebx
xor     ebx, ebx
cmp     [esi+10h], ebx
jnz     loc_37aba960
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_37aba976
mov     [esi+38h], ebx
mov     [esi+1ch], ebx
jmp     loc_37aba93a
add     dword ptr [esi+10h], 2
cmp     [esi+18h], ebx
jl      loc_37aba951
push    dword ptr [esi+1ch]
movzx   eax, word ptr [esi+32h]
mov     ecx, esi
push    eax
call    unknown_libname_33
mov     [esi+1ch], eax
cmp     eax, 8
jz      short loc_37aba891
cmp     eax, 7
ja      short def_37aba8dd
jmp     ds:jpt_37aba8dd[eax*4]
mov     ecx, esi
call    sub_37abab74
jmp     short loc_37aba932
or      dword ptr [esi+28h], 0ffffffffh
mov     [esi+24h], ebx
mov     [esi+30h], bl
mov     [esi+20h], ebx
mov     [esi+2ch], ebx
mov     [esi+3ch], bl
jmp     short loc_37aba93a
mov     ecx, esi
call    unknown_libname_38
jmp     short loc_37aba932
mov     ecx, esi
call    sub_37abb849
jmp     short loc_37aba932
mov     [esi+28h], ebx
jmp     short loc_37aba93a
mov     ecx, esi
call    sub_37abacec
jmp     short loc_37aba932
mov     ecx, esi
call    sub_37abafe7
jmp     short loc_37aba932
mov     ecx, esi
call    sub_37abb5c1
test    al, al
jz      def_37aba8dd
mov     eax, [esi+10h]
movzx   eax, word ptr [eax]
mov     [esi+32h], ax
test    ax, ax
jnz     loc_37aba8b4
add     dword ptr [esi+10h], 2
mov     ecx, esi
call    unknown_libname_52
test    al, al
jz      def_37aba8dd
inc     dword ptr [esi+450h]
cmp     dword ptr [esi+450h], 2
jnz     loc_37aba8a9
mov     eax, [esi+18h]
pop     ebx
pop     esi
retn
mov     edi, edi
push    esi
mov     esi, ecx
lea     ecx, [esi+448h]
call    unknown_libname_22
test    al, al
jnz     short loc_37aba9b5
or      eax, 0ffffffffh
pop     esi
retn
push    ebx
xor     ebx, ebx
cmp     [esi+10h], ebx
jnz     loc_37abaa81
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     loc_37abaa97
mov     [esi+38h], ebx
mov     [esi+1ch], ebx
jmp     loc_37abaa6a
add     dword ptr [esi+10h], 2
cmp     [esi+18h], ebx
jl      loc_37abaa81
push    dword ptr [esi+1ch]
movzx   eax, word ptr [esi+32h]
mov     ecx, esi
push    eax
call    unknown_libname_34
mov     [esi+1ch], eax
cmp     eax, 8
jz      short loc_37aba9c1
cmp     eax, 7
ja      short def_37abaa0d
jmp     ds:jpt_37abaa0d[eax*4]
mov     ecx, esi
call    sub_37abab74
jmp     short loc_37abaa62
or      dword ptr [esi+28h], 0ffffffffh
mov     [esi+24h], ebx
mov     [esi+30h], bl
mov     [esi+20h], ebx
mov     [esi+2ch], ebx
mov     [esi+3ch], bl
jmp     short loc_37abaa6a
mov     ecx, esi
call    unknown_libname_38
jmp     short loc_37abaa62
mov     ecx, esi
call    sub_37abb849
jmp     short loc_37abaa62
mov     [esi+28h], ebx
jmp     short loc_37abaa6a
mov     ecx, esi
call    sub_37abacec
jmp     short loc_37abaa62
mov     ecx, esi
call    sub_37abafe7
jmp     short loc_37abaa62
mov     ecx, esi
call    sub_37abb5c1
test    al, al
jz      def_37abaa0d
mov     eax, [esi+10h]
movzx   eax, word ptr [eax]
mov     [esi+32h], ax
test    ax, ax
jnz     loc_37aba9e4
add     dword ptr [esi+10h], 2
inc     dword ptr [esi+450h]
cmp     dword ptr [esi+450h], 2
jnz     loc_37aba9d9
mov     eax, [esi+18h]
pop     ebx
pop     esi
retn
call    sub_37abab93
test    al, al
jnz     short loc_37abab52
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
retn
mov     al, 1
retn
call    sub_37ababbd
test    al, al
jnz     short loc_37abab71
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
retn
mov     al, 1
retn
call    unknown_libname_39
test    al, al
jnz     short loc_37abab90
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
retn
mov     al, 1
retn
mov     edi, edi
push    esi
push    0
mov     esi, ecx
call    unknown_libname_40
test    al, al
jnz     short loc_37ababa5
pop     esi
retn
lea     eax, [esi+18h]
push    eax
movzx   eax, byte ptr [esi+31h]
lea     ecx, [esi+448h]
push    eax
call    ?write_character@?$stream_output_adapter@d@__crt_stdio_output@@qbexdqah@z
mov     al, 1
pop     esi
retn
mov     edi, edi
push    esi
push    0
mov     esi, ecx
call    unknown_libname_41
test    al, al
jnz     short loc_37ababcf
pop     esi
retn
lea     eax, [esi+18h]
push    eax
movzx   eax, byte ptr [esi+31h]
lea     ecx, [esi+448h]
push    eax
call    ?write_character@?$string_output_adapter@d@__crt_stdio_output@@qbe_ndqah@z
mov     al, 1
pop     esi
retn
cmp     byte ptr [ecx+31h], 2ah
jz      short loc_37abacd4
lea     eax, [ecx+28h]
push    eax
call    unknown_libname_35
retn
add     dword ptr [ecx+14h], 4
mov     eax, [ecx+14h]
mov     eax, [eax-4]
mov     [ecx+28h], eax
test    eax, eax
jns     short loc_37abace9
or      dword ptr [ecx+28h], 0ffffffffh
mov     al, 1
retn
cmp     word ptr [ecx+32h], 2ah
jz      short loc_37abacfd
lea     eax, [ecx+28h]
push    eax
call    unknown_libname_36
retn
add     dword ptr [ecx+14h], 4
mov     eax, [ecx+14h]
mov     eax, [eax-4]
mov     [ecx+28h], eax
test    eax, eax
jns     short loc_37abad12
or      dword ptr [ecx+28h], 0ffffffffh
mov     al, 1
retn
mov     al, [ecx+31h]
cmp     al, 46h
jnz     short loc_37abad36
mov     eax, [ecx]
and     eax, 8
or      eax, 0
jnz     loc_37abae7b
mov     dword ptr [ecx+1ch], 7
jmp     sub_37abb163
cmp     al, 4eh
jnz     short loc_37abad60
mov     eax, [ecx]
push    8
pop     edx
and     eax, edx
or      eax, 0
jnz     loc_37abae7b
mov     [ecx+1ch], edx
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
retn
cmp     dword ptr [ecx+2ch], 0
jnz     short loc_37abad4d
movsx   eax, al
cmp     eax, 6ah
jg      loc_37abae30
jz      loc_37abae27
cmp     eax, 49h
jz      short loc_37abadcc
cmp     eax, 4ch
jz      short loc_37abadc0
cmp     eax, 54h
jz      short loc_37abadb4
cmp     eax, 68h
jnz     loc_37abae7b
mov     eax, [ecx+10h]
cmp     byte ptr [eax], 68h
jnz     short loc_37abada8
inc     eax
mov     dword ptr [ecx+2ch], 1
mov     [ecx+10h], eax
jmp     loc_37abae7b
mov     dword ptr [ecx+2ch], 2
jmp     loc_37abae7b
mov     dword ptr [ecx+2ch], 0dh
jmp     loc_37abae7b
mov     dword ptr [ecx+2ch], 8
jmp     loc_37abae7b
mov     edx, [ecx+10h]
mov     al, [edx]
cmp     al, 33h
jnz     short loc_37abaded
cmp     byte ptr [edx+1], 32h
jnz     short loc_37abaded
lea     eax, [edx+2]
mov     dword ptr [ecx+2ch], 0ah
mov     [ecx+10h], eax
jmp     loc_37abae7b
cmp     al, 36h
jnz     short loc_37abae06
cmp     byte ptr [edx+1], 34h
jnz     short loc_37abae06
lea     eax, [edx+2]
mov     dword ptr [ecx+2ch], 0bh
mov     [ecx+10h], eax
jmp     short loc_37abae7b
cmp     al, 64h
jz      short loc_37abae1e
cmp     al, 69h
jz      short loc_37abae1e
cmp     al, 6fh
jz      short loc_37abae1e
cmp     al, 75h
jz      short loc_37abae1e
cmp     al, 78h
jz      short loc_37abae1e
cmp     al, 58h
jnz     short loc_37abae7b
mov     dword ptr [ecx+2ch], 9
jmp     short loc_37abae7b
mov     dword ptr [ecx+2ch], 5
jmp     short loc_37abae7b
cmp     eax, 6ch
jz      short loc_37abae5f
cmp     eax, 74h
jz      short loc_37abae56
cmp     eax, 77h
jz      short loc_37abae4d
cmp     eax, 7ah
jnz     short loc_37abae7b
mov     dword ptr [ecx+2ch], 6
jmp     short loc_37abae7b
mov     dword ptr [ecx+2ch], 0ch
jmp     short loc_37abae7b
mov     dword ptr [ecx+2ch], 7
jmp     short loc_37abae7b
mov     eax, [ecx+10h]
cmp     byte ptr [eax], 6ch
jnz     short loc_37abae74
inc     eax
mov     dword ptr [ecx+2ch], 4
mov     [ecx+10h], eax
jmp     short loc_37abae7b
mov     dword ptr [ecx+2ch], 3
mov     al, 1
retn
mov     al, [ecx+31h]
cmp     al, 46h
jnz     short loc_37abae9f
mov     eax, [ecx]
and     eax, 8
or      eax, 0
jnz     loc_37abafe4
mov     dword ptr [ecx+1ch], 7
jmp     sub_37abb392
cmp     al, 4eh
jnz     short loc_37abaec9
mov     eax, [ecx]
push    8
pop     edx
and     eax, edx
or      eax, 0
jnz     loc_37abafe4
mov     [ecx+1ch], edx
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
retn
cmp     dword ptr [ecx+2ch], 0
jnz     short loc_37abaeb6
movsx   eax, al
cmp     eax, 6ah
jg      loc_37abaf99
jz      loc_37abaf90
cmp     eax, 49h
jz      short loc_37abaf35
cmp     eax, 4ch
jz      short loc_37abaf29
cmp     eax, 54h
jz      short loc_37abaf1d
cmp     eax, 68h
jnz     loc_37abafe4
mov     eax, [ecx+10h]
cmp     byte ptr [eax], 68h
jnz     short loc_37abaf11
inc     eax
mov     dword ptr [ecx+2ch], 1
mov     [ecx+10h], eax
jmp     loc_37abafe4
mov     dword ptr [ecx+2ch], 2
jmp     loc_37abafe4
mov     dword ptr [ecx+2ch], 0dh
jmp     loc_37abafe4
mov     dword ptr [ecx+2ch], 8
jmp     loc_37abafe4
mov     edx, [ecx+10h]
mov     al, [edx]
cmp     al, 33h
jnz     short loc_37abaf56
cmp     byte ptr [edx+1], 32h
jnz     short loc_37abaf56
lea     eax, [edx+2]
mov     dword ptr [ecx+2ch], 0ah
mov     [ecx+10h], eax
jmp     loc_37abafe4
cmp     al, 36h
jnz     short loc_37abaf6f
cmp     byte ptr [edx+1], 34h
jnz     short loc_37abaf6f
lea     eax, [edx+2]
mov     dword ptr [ecx+2ch], 0bh
mov     [ecx+10h], eax
jmp     short loc_37abafe4
cmp     al, 64h
jz      short loc_37abaf87
cmp     al, 69h
jz      short loc_37abaf87
cmp     al, 6fh
jz      short loc_37abaf87
cmp     al, 75h
jz      short loc_37abaf87
cmp     al, 78h
jz      short loc_37abaf87
cmp     al, 58h
jnz     short loc_37abafe4
mov     dword ptr [ecx+2ch], 9
jmp     short loc_37abafe4
mov     dword ptr [ecx+2ch], 5
jmp     short loc_37abafe4
cmp     eax, 6ch
jz      short loc_37abafc8
cmp     eax, 74h
jz      short loc_37abafbf
cmp     eax, 77h
jz      short loc_37abafb6
cmp     eax, 7ah
jnz     short loc_37abafe4
mov     dword ptr [ecx+2ch], 6
jmp     short loc_37abafe4
mov     dword ptr [ecx+2ch], 0ch
jmp     short loc_37abafe4
mov     dword ptr [ecx+2ch], 7
jmp     short loc_37abafe4
mov     eax, [ecx+10h]
cmp     byte ptr [eax], 6ch
jnz     short loc_37abafdd
inc     eax
mov     dword ptr [ecx+2ch], 4
mov     [ecx+10h], eax
jmp     short loc_37abafe4
mov     dword ptr [ecx+2ch], 3
mov     al, 1
retn
movzx   eax, word ptr [ecx+32h]
cmp     eax, 46h
jnz     short loc_37abb00a
mov     eax, [ecx]
and     eax, 8
or      eax, 0
jnz     loc_37abb160
mov     dword ptr [ecx+1ch], 7
jmp     sub_37abb5c1
cmp     eax, 4eh
jnz     short loc_37abb035
mov     eax, [ecx]
push    8
pop     edx
and     eax, edx
or      eax, 0
jnz     loc_37abb160
mov     [ecx+1ch], edx
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
retn
cmp     dword ptr [ecx+2ch], 0
jnz     short loc_37abb022
cmp     eax, 6ah
jg      loc_37abb111
jz      loc_37abb108
cmp     eax, 49h
jz      short loc_37abb0a2
cmp     eax, 4ch
jz      short loc_37abb096
cmp     eax, 54h
jz      short loc_37abb08a
push    68h
pop     edx
cmp     eax, edx
jnz     loc_37abb160
mov     eax, [ecx+10h]
cmp     [eax], dx
jnz     short loc_37abb07e
add     eax, 2
mov     dword ptr [ecx+2ch], 1
mov     [ecx+10h], eax
jmp     loc_37abb160
mov     dword ptr [ecx+2ch], 2
jmp     loc_37abb160
mov     dword ptr [ecx+2ch], 0dh
jmp     loc_37abb160
mov     dword ptr [ecx+2ch], 8
jmp     loc_37abb160
mov     edx, [ecx+10h]
movzx   eax, word ptr [edx]
cmp     eax, 33h
jnz     short loc_37abb0c6
cmp     word ptr [edx+2], 32h
jnz     short loc_37abb0c6
lea     eax, [edx+4]
mov     dword ptr [ecx+2ch], 0ah
mov     [ecx+10h], eax
jmp     loc_37abb160
cmp     eax, 36h
jnz     short loc_37abb0e1
cmp     word ptr [edx+2], 34h
jnz     short loc_37abb0e1
lea     eax, [edx+4]
mov     dword ptr [ecx+2ch], 0bh
mov     [ecx+10h], eax
jmp     short loc_37abb160
cmp     eax, 64h
jz      short loc_37abb0ff
cmp     eax, 69h
jz      short loc_37abb0ff
cmp     eax, 6fh
jz      short loc_37abb0ff
cmp     eax, 75h
jz      short loc_37abb0ff
cmp     eax, 78h
jz      short loc_37abb0ff
cmp     eax, 58h
jnz     short loc_37abb160
mov     dword ptr [ecx+2ch], 9
jmp     short loc_37abb160
mov     dword ptr [ecx+2ch], 5
jmp     short loc_37abb160
push    6ch
pop     edx
cmp     eax, edx
jz      short loc_37abb142
cmp     eax, 74h
jz      short loc_37abb139
cmp     eax, 77h
jz      short loc_37abb130
cmp     eax, 7ah
jnz     short loc_37abb160
mov     dword ptr [ecx+2ch], 6
jmp     short loc_37abb160
mov     dword ptr [ecx+2ch], 0ch
jmp     short loc_37abb160
mov     dword ptr [ecx+2ch], 7
jmp     short loc_37abb160
mov     eax, [ecx+10h]
cmp     [eax], dx
jnz     short loc_37abb159
add     eax, 2
mov     dword ptr [ecx+2ch], 4
mov     [ecx+10h], eax
jmp     short loc_37abb160
mov     dword ptr [ecx+2ch], 3
mov     al, 1
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
inc     ebx
xor     ecx, ecx
movsx   eax, byte ptr [esi+31h]
cmp     eax, 64h
jg      short loc_37abb1e7
jz      loc_37abb214
cmp     eax, 58h
jg      short loc_37abb1c4
jz      short loc_37abb1bf
cmp     eax, 41h
jz      loc_37abb224
cmp     eax, 43h
jz      short loc_37abb1d4
cmp     eax, 44h
jle     short loc_37abb1b8
cmp     eax, 47h
jle     loc_37abb224
cmp     eax, 53h
jnz     short loc_37abb1b8
mov     ecx, esi
call    unknown_libname_49
test    al, al
jnz     loc_37abb257
xor     al, al
jmp     loc_37abb38c
push    ebx
push    10h
jmp     short loc_37abb21b
sub     eax, 5ah
jz      short loc_37abb1de
sub     eax, 7
jz      short loc_37abb224
dec     eax
sub     eax, 1
jnz     short loc_37abb1b8
push    ecx
mov     ecx, esi
call    unknown_libname_46
jmp     short loc_37abb1b0
mov     ecx, esi
call    unknown_libname_42
jmp     short loc_37abb1b0
cmp     eax, 70h
jg      short loc_37abb239
jz      short loc_37abb22d
cmp     eax, 67h
jle     short loc_37abb224
cmp     eax, 69h
jz      short loc_37abb214
cmp     eax, 6eh
jz      short loc_37abb20b
cmp     eax, 6fh
jnz     short loc_37abb1b8
mov     ecx, esi
call    sub_37abbf49
jmp     short loc_37abb1b0
mov     ecx, esi
call    unknown_libname_48
jmp     short loc_37abb1b0
or      dword ptr [esi+20h], 10h
push    ecx
push    0ah
mov     ecx, esi
call    sub_37abbd8b
jmp     short loc_37abb1b0
mov     ecx, esi
call    unknown_libname_44
jmp     short loc_37abb1b0
mov     ecx, esi
call    sub_37abbf68
jmp     loc_37abb1b0
sub     eax, 73h
jz      loc_37abb1a9
dec     eax
sub     eax, 1
jz      short loc_37abb218
sub     eax, 3
jnz     loc_37abb1b8
push    ecx
jmp     loc_37abb1c0
cmp     byte ptr [esi+30h], 0
jz      short loc_37abb264
mov     al, bl
jmp     loc_37abb38c
mov     edx, [esi+20h]
xor     eax, eax
push    edi
mov     [ebp+var_4], ax
mov     edi, eax
mov     [ebp+var_2], al
mov     eax, edx
shr     eax, 4
test    bl, al
jz      short loc_37abb2a3
mov     eax, edx
shr     eax, 6
test    bl, al
jz      short loc_37abb28b
mov     byte ptr [ebp+var_4], 2dh
jmp     short loc_37abb2a1
test    bl, dl
jz      short loc_37abb295
mov     byte ptr [ebp+var_4], 2bh
jmp     short loc_37abb2a1
mov     eax, edx
shr     eax, 1
test    bl, al
jz      short loc_37abb2a3
mov     byte ptr [ebp+var_4], 20h
mov     edi, ebx
mov     cl, [esi+31h]
cmp     cl, 78h
jz      short loc_37abb2b0
cmp     cl, 58h
jnz     short loc_37abb2b9
mov     eax, edx
shr     eax, 5
test    bl, al
jnz     short loc_37abb2bb
xor     bl, bl
cmp     cl, 61h
jz      short loc_37abb2c9
cmp     cl, 41h
jz      short loc_37abb2c9
xor     al, al
jmp     short loc_37abb2cb
mov     al, 1
test    bl, bl
jnz     short loc_37abb2d3
test    al, al
jz      short loc_37abb2fa
mov     byte ptr [ebp+edi+var_4], 30h
cmp     cl, 58h
jz      short loc_37abb2e6
cmp     cl, 41h
jz      short loc_37abb2e6
xor     al, al
jmp     short loc_37abb2e8
mov     al, 1
test    al, al
setz    al
dec     al
and     al, 0e0h
add     al, 78h
mov     byte ptr [ebp+edi+var_4+1], al
add     edi, 2
mov     ebx, [esi+24h]
sub     ebx, [esi+38h]
sub     ebx, edi
test    dl, 0ch
jnz     short loc_37abb31d
lea     eax, [esi+18h]
push    eax
push    ebx
lea     eax, [esi+448h]
push    20h
push    eax
call    ??$write_multiple_characters@v?$stream_output_adapter@d@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$stream_output_adapter@d@0@dhqah@z
add     esp, 10h
push    dword ptr [esi+0ch]
lea     eax, [esi+18h]
push    eax
push    edi
lea     eax, [ebp+var_4]
lea     ecx, [esi+448h]
push    eax
call    ?write_string@?$stream_output_adapter@d@__crt_stdio_output@@qbexqbdhqah1@z
mov     ecx, [esi+20h]
lea     edi, [esi+18h]
mov     eax, ecx
shr     eax, 3
test    al, 1
jz      short loc_37abb35e
shr     ecx, 2
test    cl, 1
jnz     short loc_37abb35e
push    edi
push    ebx
lea     eax, [esi+448h]
push    30h
push    eax
call    ??$write_multiple_characters@v?$stream_output_adapter@d@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$stream_output_adapter@d@0@dhqah@z
add     esp, 10h
push    0
mov     ecx, esi
call    unknown_libname_53
cmp     dword ptr [edi], 0
jl      short loc_37abb389
mov     eax, [esi+20h]
shr     eax, 2
test    al, 1
jz      short loc_37abb389
push    edi
push    ebx
lea     eax, [esi+448h]
push    20h
push    eax
call    ??$write_multiple_characters@v?$stream_output_adapter@d@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$stream_output_adapter@d@0@dhqah@z
add     esp, 10h
mov     al, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
inc     ebx
xor     ecx, ecx
movsx   eax, byte ptr [esi+31h]
cmp     eax, 64h
jg      short loc_37abb416
jz      loc_37abb443
cmp     eax, 58h
jg      short loc_37abb3f3
jz      short loc_37abb3ee
cmp     eax, 41h
jz      loc_37abb453
cmp     eax, 43h
jz      short loc_37abb403
cmp     eax, 44h
jle     short loc_37abb3e7
cmp     eax, 47h
jle     loc_37abb453
cmp     eax, 53h
jnz     short loc_37abb3e7
mov     ecx, esi
call    unknown_libname_49
test    al, al
jnz     loc_37abb486
xor     al, al
jmp     loc_37abb5bb
push    ebx
push    10h
jmp     short loc_37abb44a
sub     eax, 5ah
jz      short loc_37abb40d
sub     eax, 7
jz      short loc_37abb453
dec     eax
sub     eax, 1
jnz     short loc_37abb3e7
push    ecx
mov     ecx, esi
call    unknown_libname_46
jmp     short loc_37abb3df
mov     ecx, esi
call    unknown_libname_42
jmp     short loc_37abb3df
cmp     eax, 70h
jg      short loc_37abb468
jz      short loc_37abb45c
cmp     eax, 67h
jle     short loc_37abb453
cmp     eax, 69h
jz      short loc_37abb443
cmp     eax, 6eh
jz      short loc_37abb43a
cmp     eax, 6fh
jnz     short loc_37abb3e7
mov     ecx, esi
call    sub_37abbf49
jmp     short loc_37abb3df
mov     ecx, esi
call    unknown_libname_48
jmp     short loc_37abb3df
or      dword ptr [esi+20h], 10h
push    ecx
push    0ah
mov     ecx, esi
call    sub_37abbd8b
jmp     short loc_37abb3df
mov     ecx, esi
call    unknown_libname_44
jmp     short loc_37abb3df
mov     ecx, esi
call    sub_37abbf68
jmp     loc_37abb3df
sub     eax, 73h
jz      loc_37abb3d8
dec     eax
sub     eax, 1
jz      short loc_37abb447
sub     eax, 3
jnz     loc_37abb3e7
push    ecx
jmp     loc_37abb3ef
cmp     byte ptr [esi+30h], 0
jz      short loc_37abb493
mov     al, bl
jmp     loc_37abb5bb
mov     edx, [esi+20h]
xor     eax, eax
push    edi
mov     [ebp+src], ax
mov     edi, eax
mov     [ebp+var_2], al
mov     eax, edx
shr     eax, 4
test    bl, al
jz      short loc_37abb4d2
mov     eax, edx
shr     eax, 6
test    bl, al
jz      short loc_37abb4ba
mov     byte ptr [ebp+src], 2dh
jmp     short loc_37abb4d0
test    bl, dl
jz      short loc_37abb4c4
mov     byte ptr [ebp+src], 2bh
jmp     short loc_37abb4d0
mov     eax, edx
shr     eax, 1
test    bl, al
jz      short loc_37abb4d2
mov     byte ptr [ebp+src], 20h
mov     edi, ebx
mov     cl, [esi+31h]
cmp     cl, 78h
jz      short loc_37abb4df
cmp     cl, 58h
jnz     short loc_37abb4e8
mov     eax, edx
shr     eax, 5
test    bl, al
jnz     short loc_37abb4ea
xor     bl, bl
cmp     cl, 61h
jz      short loc_37abb4f8
cmp     cl, 41h
jz      short loc_37abb4f8
xor     al, al
jmp     short loc_37abb4fa
mov     al, 1
test    bl, bl
jnz     short loc_37abb502
test    al, al
jz      short loc_37abb529
mov     byte ptr [ebp+edi+src], 30h
cmp     cl, 58h
jz      short loc_37abb515
cmp     cl, 41h
jz      short loc_37abb515
xor     al, al
jmp     short loc_37abb517
mov     al, 1
test    al, al
setz    al
dec     al
and     al, 0e0h
add     al, 78h
mov     byte ptr [ebp+edi+src+1], al
add     edi, 2
mov     ebx, [esi+24h]
sub     ebx, [esi+38h]
sub     ebx, edi
test    dl, 0ch
jnz     short loc_37abb54c
lea     eax, [esi+18h]
push    eax
push    ebx
lea     eax, [esi+448h]
push    20h
push    eax
call    ??$write_multiple_characters@v?$string_output_adapter@d@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@d@0@dhqah@z
add     esp, 10h
push    dword ptr [esi+0ch]
lea     eax, [esi+18h]
push    eax
push    edi
lea     eax, [ebp+src]
lea     ecx, [esi+448h]
push    eax
call    ?write_string@?$string_output_adapter@d@__crt_stdio_output@@qbexqbdhqah1@z
mov     ecx, [esi+20h]
lea     edi, [esi+18h]
mov     eax, ecx
shr     eax, 3
test    al, 1
jz      short loc_37abb58d
shr     ecx, 2
test    cl, 1
jnz     short loc_37abb58d
push    edi
push    ebx
lea     eax, [esi+448h]
push    30h
push    eax
call    ??$write_multiple_characters@v?$string_output_adapter@d@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@d@0@dhqah@z
add     esp, 10h
push    0
mov     ecx, esi
call    unknown_libname_54
cmp     dword ptr [edi], 0
jl      short loc_37abb5b8
mov     eax, [esi+20h]
shr     eax, 2
test    al, 1
jz      short loc_37abb5b8
push    edi
push    ebx
lea     eax, [esi+448h]
push    20h
push    eax
call    ??$write_multiple_characters@v?$string_output_adapter@d@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@d@0@dhqah@z
add     esp, 10h
mov     al, 1
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    ebx
push    esi
mov     esi, ecx
xor     ebx, ebx
push    41h
pop     edx
push    58h
movzx   eax, word ptr [esi+32h]
pop     ecx
cmp     eax, 64h
jg      short loc_37abb653
jz      loc_37abb680
cmp     eax, ecx
jg      short loc_37abb630
jz      short loc_37abb62a
cmp     eax, edx
jz      loc_37abb690
cmp     eax, 43h
jz      short loc_37abb640
cmp     eax, 44h
jle     short loc_37abb623
cmp     eax, 47h
jle     loc_37abb690
cmp     eax, 53h
jnz     short loc_37abb623
mov     ecx, esi
call    sub_37abbff3
test    al, al
jnz     loc_37abb6c3
xor     al, al
jmp     loc_37abb80e
push    1
push    10h
jmp     short loc_37abb687
sub     eax, 5ah
jz      short loc_37abb64a
sub     eax, 7
jz      short loc_37abb690
dec     eax
sub     eax, 1
jnz     short loc_37abb623
push    ebx
mov     ecx, esi
call    unknown_libname_47
jmp     short loc_37abb61b
mov     ecx, esi
call    unknown_libname_43
jmp     short loc_37abb61b
cmp     eax, 70h
jg      short loc_37abb6a5
jz      short loc_37abb699
cmp     eax, 67h
jle     short loc_37abb690
cmp     eax, 69h
jz      short loc_37abb680
cmp     eax, 6eh
jz      short loc_37abb677
cmp     eax, 6fh
jnz     short loc_37abb623
mov     ecx, esi
call    sub_37abbf49
jmp     short loc_37abb61b
mov     ecx, esi
call    unknown_libname_48
jmp     short loc_37abb61b
or      dword ptr [esi+20h], 10h
push    ebx
push    0ah
mov     ecx, esi
call    sub_37abbd8b
jmp     short loc_37abb61b
mov     ecx, esi
call    unknown_libname_45
jmp     short loc_37abb61b
mov     ecx, esi
call    sub_37abbf68
jmp     loc_37abb61b
sub     eax, 73h
jz      loc_37abb614
dec     eax
sub     eax, 1
jz      short loc_37abb684
sub     eax, 3
jnz     loc_37abb623
push    ebx
jmp     loc_37abb62c
cmp     [esi+30h], bl
jnz     loc_37abb80c
mov     edx, [esi+20h]
xor     ecx, ecx
push    edi
mov     eax, edx
mov     [ebp+src], ebx
shr     eax, 4
inc     ecx
mov     [ebp+var_8], bx
push    20h
pop     edi
test    cl, al
jz      short loc_37abb70e
mov     eax, edx
shr     eax, 6
test    cl, al
jz      short loc_37abb6f8
push    2dh
pop     eax
mov     word ptr [ebp+src], ax
jmp     short loc_37abb70c
test    cl, dl
jz      short loc_37abb700
push    2bh
jmp     short loc_37abb6f1
mov     eax, edx
shr     eax, 1
test    cl, al
jz      short loc_37abb70e
mov     word ptr [ebp+src], di
mov     ebx, ecx
movzx   ecx, word ptr [esi+32h]
cmp     ecx, 78h
jz      short loc_37abb71f
push    58h
pop     eax
cmp     cx, ax
jnz     short loc_37abb72c
mov     eax, edx
shr     eax, 5
test    al, 1
jz      short loc_37abb72c
mov     ah, 1
jmp     short loc_37abb72e
xor     ah, ah
cmp     ecx, 61h
jz      short loc_37abb73f
push    41h
pop     edi
cmp     cx, di
jz      short loc_37abb73f
xor     al, al
jmp     short loc_37abb741
mov     al, 1
push    30h
pop     edi
test    ah, ah
jnz     short loc_37abb74c
test    al, al
jz      short loc_37abb77c
push    58h
pop     eax
mov     word ptr [ebp+ebx*2+src], di
cmp     cx, ax
jz      short loc_37abb765
push    41h
pop     eax
cmp     cx, ax
jz      short loc_37abb765
xor     al, al
jmp     short loc_37abb767
mov     al, 1
test    al, al
setz    al
dec     al
and     al, 0e0h
add     al, 78h
cbw
mov     word ptr [ebp+ebx*2+src+2], ax
add     ebx, 2
mov     edi, [esi+24h]
sub     edi, [esi+38h]
sub     edi, ebx
test    dl, 0ch
jnz     short loc_37abb79f
lea     eax, [esi+18h]
push    eax
push    edi
lea     eax, [esi+448h]
push    20h
push    eax
call    ??$write_multiple_characters@v?$string_output_adapter@_w@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@_w@0@dhqah@z
add     esp, 10h
push    dword ptr [esi+0ch]
lea     eax, [esi+18h]
push    eax
push    ebx
lea     eax, [ebp+src]
lea     ecx, [esi+448h]
push    eax
call    ?write_string@?$string_output_adapter@_w@__crt_stdio_output@@qbexqb_whqah1@z
mov     ecx, [esi+20h]
lea     ebx, [esi+18h]
mov     eax, ecx
shr     eax, 3
test    al, 1
jz      short loc_37abb7e0
shr     ecx, 2
test    cl, 1
jnz     short loc_37abb7e0
push    ebx
push    edi
lea     eax, [esi+448h]
push    30h
push    eax
call    ??$write_multiple_characters@v?$string_output_adapter@_w@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@_w@0@dhqah@z
add     esp, 10h
push    0
mov     ecx, esi
call    unknown_libname_55
cmp     dword ptr [ebx], 0
jl      short loc_37abb80b
mov     eax, [esi+20h]
shr     eax, 2
test    al, 1
jz      short loc_37abb80b
push    ebx
push    edi
lea     eax, [esi+448h]
push    20h
push    eax
call    ??$write_multiple_characters@v?$string_output_adapter@_w@__crt_stdio_output@@d@__crt_stdio_output@@yaxabv?$string_output_adapter@_w@0@dhqah@z
add     esp, 10h
pop     edi
mov     al, 1
mov     ecx, [ebp+var_4]
pop     esi
xor     ecx, ebp
pop     ebx
call    @__security_check_cookie@4
mov     esp, ebp
pop     ebp
retn
cmp     byte ptr [ecx+31h], 2ah
jz      short loc_37abb82e
lea     eax, [ecx+24h]
push    eax
call    unknown_libname_35
retn
add     dword ptr [ecx+14h], 4
mov     eax, [ecx+14h]
mov     eax, [eax-4]
mov     [ecx+24h], eax
test    eax, eax
jns     short loc_37abb846
or      dword ptr [ecx+20h], 4
neg     dword ptr [ecx+24h]
mov     al, 1
retn
cmp     word ptr [ecx+32h], 2ah
jz      short loc_37abb85a
lea     eax, [ecx+24h]
push    eax
call    unknown_libname_36
retn
add     dword ptr [ecx+14h], 4
mov     eax, [ecx+14h]
mov     eax, [eax-4]
mov     [ecx+24h], eax
test    eax, eax
jns     short loc_37abb872
or      dword ptr [ecx+20h], 4
neg     dword ptr [ecx+24h]
mov     al, 1
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
mov     esi, ecx
push    dword ptr [esi+2ch]
call    ?to_integer_size@__crt_stdio_output@@yaiw4length_modifier@1@@z
pop     ecx
mov     ebx, eax
mov     ecx, ebx
sub     ecx, 1
jz      short loc_37abbe1e
sub     ecx, 1
jz      short loc_37abbe01
dec     ecx
sub     ecx, 1
jz      short loc_37abbde4
sub     ecx, 4
jz      short loc_37abbdcd
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     al, al
jmp     loc_37abbecf
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 8
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
mov     ecx, [eax-8]
mov     edx, [eax-4]
jmp     short loc_37abbe3c
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 4
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
jz      short loc_37abbdfa
mov     eax, [eax-4]
jmp     short loc_37abbe39
mov     ecx, [eax-4]
xor     edx, edx
jmp     short loc_37abbe3c
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 4
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
jz      short loc_37abbe18
movsx   eax, word ptr [eax-4]
jmp     short loc_37abbe39
movzx   eax, word ptr [eax-4]
jmp     short loc_37abbe39
mov     eax, [esi+20h]
add     dword ptr [esi+14h], 4
shr     eax, 4
test    al, 1
mov     eax, [esi+14h]
jz      short loc_37abbe35
movsx   eax, byte ptr [eax-4]
jmp     short loc_37abbe39
movzx   eax, byte ptr [eax-4]
cdq
mov     ecx, eax
push    edi
mov     edi, [esi+20h]
mov     eax, edi
shr     eax, 4
test    al, 1
jz      short loc_37abbe60
test    edx, edx
jg      short loc_37abbe60
jl      short loc_37abbe53
test    ecx, ecx
jnb     short loc_37abbe60
neg     ecx
adc     edx, 0
neg     edx
or      edi, 40h
mov     [esi+20h], edi
cmp     dword ptr [esi+28h], 0
pop     edi
jge     short loc_37abbe70
mov     dword ptr [esi+28h], 1
jmp     short loc_37abbe81
and     dword ptr [esi+20h], 0fffffff7h
mov     eax, 200h
cmp     [esi+28h], eax
jle     short loc_37abbe81
mov     [esi+28h], eax
mov     eax, ecx
or      eax, edx
jnz     short loc_37abbe8b
and     dword ptr [esi+20h], 0ffffffdfh
push    [ebp+arg_4]
push    [ebp+arg_0]
cmp     ebx, 8
jnz     short loc_37abbea1
push    edx
push    ecx
mov     ecx, esi
call    unknown_libname_25
jmp     short loc_37abbea9
push    ecx
mov     ecx, esi
call    unknown_libname_24
mov     eax, [esi+20h]
shr     eax, 7
test    al, 1
jz      short loc_37abbecd
cmp     dword ptr [esi+38h], 0
jz      short loc_37abbec1
mov     eax, [esi+34h]
cmp     byte ptr [eax], 30h
jz      short loc_37abbecd
dec     dword ptr [esi+34h]
mov     ecx, [esi+34h]
mov     byte ptr [ecx], 30h
inc     dword ptr [esi+38h]
mov     al, 1
pop     esi
pop     ebx
pop     ebp
retn    8
mov     edx, [ecx+20h]
mov     eax, edx
shr     eax, 5
test    al, 1
jz      short loc_37abbf5e
or      edx, 80h
mov     [ecx+20h], edx
push    0
push    8
call    sub_37abbd8b
retn
push    1
push    10h
mov     dword ptr [ecx+28h], 8
mov     dword ptr [ecx+2ch], 0ah
call    sub_37abbd8b
retn
mov     edi, edi
push    ebx
push    esi
mov     esi, ecx
push    edi
add     dword ptr [esi+14h], 4
mov     eax, [esi+14h]
mov     edi, [esi+28h]
mov     ebx, [eax-4]
mov     [esi+34h], ebx
cmp     edi, 0ffffffffh
jnz     short loc_37abc014
mov     edi, 7fffffffh
push    dword ptr [esi+2ch]
movzx   eax, word ptr [esi+32h]
push    eax
push    dword ptr [esi+4]
push    dword ptr [esi]
call    ??$is_wide_character_specifier@_w@__crt_stdio_output@@ya_n_k_ww4length_modifier@0@@z
add     esp, 10h
test    al, al
jz      short loc_37abc049
test    ebx, ebx
jnz     short loc_37abc038
mov     dword ptr [esi+34h], offset anull_0
push    edi
push    dword ptr [esi+34h]
mov     byte ptr [esi+3ch], 1
call    _wcsnlen
pop     ecx
pop     ecx
jmp     short loc_37abc05e
test    ebx, ebx
jnz     short loc_37abc054
mov     dword ptr [esi+34h], offset anull
push    0
push    edi
mov     ecx, esi
call    unknown_libname_50
pop     edi
mov     [esi+38h], eax
mov     al, 1
pop     esi
pop     ebx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, [ebp+arg_14]
mov     edx, [ebp+arg_8]
mov     ecx, [ebp+arg_c]
mov     [ebp+var_10], eax
mov     eax, [ebp+arg_10]
mov     [ebp+var_8], eax
mov     eax, [ebp+arg_0]
mov     [ebp+var_18], eax
mov     eax, [ebp+arg_4]
mov     [ebp+var_c], ecx
mov     [ebp+var_4], edx
mov     [ebp+var_14], eax
test    edx, edx
jnz     short loc_37abc605
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
jmp     short loc_37abc633
test    ecx, ecx
jz      short loc_37abc5f0
lea     eax, [ebp+var_4]
mov     [ebp+var_2c], eax
lea     eax, [ebp+var_8]
mov     [ebp+var_28], eax
lea     eax, [ebp+var_18]
mov     [ebp+var_24], eax
lea     eax, [ebp+var_c]
mov     [ebp+var_20], eax
lea     eax, [ebp+var_10]
mov     [ebp+var_1c], eax
lea     eax, [ebp+var_2c]
push    eax
push    edx
call    sub_37ab9670
pop     ecx
pop     ecx
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_18]
push    [ebp+arg_14]
push    [ebp+arg_10]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_37ab9999
add     esp, 1ch
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_18]
push    [ebp+arg_14]
push    [ebp+arg_10]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
call    sub_37ab9b15
add     esp, 1ch
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_10]
mov     ecx, [ebp+arg_0]
push    [ebp+arg_c]
push    [ebp+arg_8]
push    [ebp+arg_4]
call    unknown_libname_58
mov     eax, [ebp+arg_0]
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 24h
push    esi
mov     esi, [ebp+arg_4]
mov     ecx, esi
push    edi
call    unknown_libname_61
test    al, al
jnz     short loc_37abcb05
push    7
pop     eax
jmp     loc_37abcf46
mov     eax, [esi+10h]
mov     ecx, esi
mov     [ebp+var_18], eax
mov     eax, [esi+14h]
push    ebx
mov     [ebp+var_14], eax
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     ebx, [ebp+locale]
lea     ecx, [ebp+var_7]
mov     [ebp+var_20], ecx
lea     ecx, [ebp+var_18]
mov     [ebp+var_24], esi
mov     [ebp+var_1c], ecx
jmp     short loc_37abcb34
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
push    ebx
mov     byte ptr [ebp+var_7], al
movzx   eax, al
push    8
push    eax
call    __ischartype_l
add     esp, 0ch
test    eax, eax
jnz     short loc_37abcb2d
mov     cl, byte ptr [ebp+var_7]
mov     edx, [ebp+arg_8]
cmp     cl, 2dh
setz    al
mov     [edx+308h], al
cmp     cl, 2dh
jz      short loc_37abcb66
cmp     cl, 2bh
jnz     short loc_37abcb72
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
mov     byte ptr [ebp+var_7], cl
cmp     cl, 49h
jz      loc_37abcf32
cmp     cl, 69h
jz      loc_37abcf32
cmp     cl, 4eh
jz      loc_37abcf20
cmp     cl, 6eh
jz      loc_37abcf20
xor     ebx, ebx
mov     [ebp+var_1], bl
cmp     cl, 30h
jnz     short loc_37abcbe3
mov     eax, [esi+14h]
mov     ecx, esi
mov     edi, [esi+10h]
mov     [ebp+var_10], eax
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     byte ptr [ebp+var_c], al
cmp     al, 78h
jz      short loc_37abcbca
cmp     al, 58h
jz      short loc_37abcbca
push    [ebp+var_c]
mov     ecx, esi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaexd@z
mov     cl, byte ptr [ebp+var_7]
jmp     short loc_37abcbe3
mov     ecx, esi
mov     [ebp+var_1], 1
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
mov     [ebp+var_18], edi
mov     eax, [ebp+var_10]
mov     byte ptr [ebp+var_7], cl
mov     [ebp+var_14], eax
mov     edx, [ebp+arg_8]
mov     [ebp+var_c], ebx
mov     [ebp+var_2], bl
lea     edi, [edx+8]
cmp     cl, 30h
jnz     short loc_37abcc0c
mov     [ebp+var_2], 1
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
mov     byte ptr [ebp+var_7], cl
cmp     cl, 30h
jz      short loc_37abcbf8
mov     edx, [ebp+arg_8]
xor     ebx, ebx
cmp     [ebp+var_1], bl
setz    bl
dec     ebx
and     ebx, 6
add     ebx, 9
mov     [ebp+var_10], ebx
mov     al, cl
sub     al, 30h
cmp     al, 9
ja      short loc_37abcc2e
movsx   eax, cl
sub     eax, 30h
jmp     short loc_37abcc51
mov     al, cl
sub     al, 61h
cmp     al, 19h
ja      short loc_37abcc3e
movsx   eax, cl
sub     eax, 57h
jmp     short loc_37abcc51
mov     al, cl
sub     al, 41h
cmp     al, 19h
ja      short loc_37abcc4e
movsx   eax, cl
sub     eax, 37h
jmp     short loc_37abcc51
or      eax, 0ffffffffh
cmp     eax, ebx
ja      short loc_37abcc7a
lea     ecx, [edx+308h]
mov     [ebp+var_2], 1
cmp     edi, ecx
jz      short loc_37abcc66
mov     [edi], al
inc     edi
inc     [ebp+var_c]
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     edx, [ebp+arg_8]
mov     cl, al
mov     byte ptr [ebp+var_7], cl
jmp     short loc_37abcc1e
mov     eax, [ebp+locale]
push    0
pop     ebx
mov     eax, [eax]
mov     eax, [eax+88h]
mov     eax, [eax]
cmp     cl, [eax]
jnz     loc_37abcd2a
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     edx, [ebp+arg_8]
mov     cl, al
mov     byte ptr [ebp+var_7], cl
lea     eax, [edx+8]
cmp     edi, eax
jnz     short loc_37abcccc
cmp     cl, 30h
jnz     short loc_37abcccc
mov     ebx, [ebp+var_c]
mov     [ebp+var_2], 1
mov     ecx, esi
dec     ebx
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
mov     byte ptr [ebp+var_7], cl
cmp     cl, 30h
jz      short loc_37abccb4
mov     edx, [ebp+arg_8]
mov     [ebp+var_c], ebx
mov     ebx, [ebp+var_10]
mov     al, cl
sub     al, 30h
cmp     al, 9
ja      short loc_37abccdf
movsx   eax, cl
sub     eax, 30h
jmp     short loc_37abcd02
mov     al, cl
sub     al, 61h
cmp     al, 19h
ja      short loc_37abccef
movsx   eax, cl
sub     eax, 57h
jmp     short loc_37abcd02
mov     al, cl
sub     al, 41h
cmp     al, 19h
ja      short loc_37abccff
movsx   eax, cl
sub     eax, 37h
jmp     short loc_37abcd02
or      eax, 0ffffffffh
cmp     eax, ebx
ja      short loc_37abcd28
lea     ecx, [edx+308h]
mov     [ebp+var_2], 1
cmp     edi, ecx
jz      short loc_37abcd17
mov     [edi], al
inc     edi
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     edx, [ebp+arg_8]
mov     cl, al
mov     byte ptr [ebp+var_7], cl
jmp     short loc_37abcccf
xor     ebx, ebx
cmp     [ebp+var_2], 0
jnz     short loc_37abcd54
lea     ecx, [ebp+var_24]
call    ??r_lambda_24bca0711811e6233a81aece93ea4a83_@@qbe_nxz
test    al, al
jz      loc_37abcefb
xor     eax, eax
cmp     [ebp+var_1], al
setz    al
dec     eax
and     eax, 0fffffffbh
add     eax, 7
jmp     loc_37abcf45
push    [ebp+var_7]
mov     ecx, esi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaexd@z
mov     eax, [esi+10h]
mov     ecx, esi
mov     [ebp+var_18], eax
mov     eax, [esi+14h]
mov     [ebp+var_14], eax
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     byte ptr [ebp+var_7], al
mov     cl, bl
cmp     al, 45h
jz      short loc_37abcd8b
cmp     al, 50h
jz      short loc_37abcd86
cmp     al, 65h
jz      short loc_37abcd8b
cmp     al, 70h
jnz     short loc_37abcd92
mov     cl, [ebp+var_1]
jmp     short loc_37abcd92
cmp     [ebp+var_1], 0
setz    cl
test    cl, cl
jz      loc_37abcea7
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
cmp     cl, 2dh
mov     byte ptr [ebp+var_7], cl
setz    [ebp+var_3]
cmp     cl, 2bh
jz      short loc_37abcdb7
cmp     cl, 2dh
jnz     short loc_37abcdc3
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
mov     byte ptr [ebp+var_7], cl
mov     [ebp+var_2], bl
cmp     cl, 30h
jnz     short loc_37abcde0
mov     [ebp+var_2], 1
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
mov     byte ptr [ebp+var_7], cl
cmp     cl, 30h
jz      short loc_37abcdcf
mov     al, cl
sub     al, 30h
cmp     al, 9
ja      short loc_37abcdf0
movsx   eax, cl
sub     eax, 30h
jmp     short loc_37abce13
mov     al, cl
sub     al, 61h
cmp     al, 19h
ja      short loc_37abce00
movsx   eax, cl
sub     eax, 57h
jmp     short loc_37abce13
mov     al, cl
sub     al, 41h
cmp     al, 19h
ja      short loc_37abce10
movsx   eax, cl
sub     eax, 37h
jmp     short loc_37abce13
or      eax, 0ffffffffh
cmp     eax, 0ah
jnb     short loc_37abce3c
imul    ebx, 0ah
mov     [ebp+var_2], 1
add     ebx, eax
cmp     ebx, 1450h
jg      short loc_37abce37
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
mov     byte ptr [ebp+var_7], cl
jmp     short loc_37abcde0
mov     ebx, 1451h
mov     al, cl
sub     al, 30h
cmp     al, 9
ja      short loc_37abce4c
movsx   eax, cl
sub     eax, 30h
jmp     short loc_37abce6f
mov     al, cl
sub     al, 61h
cmp     al, 19h
ja      short loc_37abce5c
movsx   eax, cl
sub     eax, 57h
jmp     short loc_37abce6f
mov     al, cl
sub     al, 41h
cmp     al, 19h
ja      short loc_37abce6c
movsx   eax, cl
sub     eax, 37h
jmp     short loc_37abce6f
or      eax, 0ffffffffh
cmp     eax, 0ah
jnb     short loc_37abce82
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
mov     byte ptr [ebp+var_7], cl
jmp     short loc_37abce3c
cmp     [ebp+var_3], 0
jz      short loc_37abce8a
neg     ebx
mov     al, [ebp+var_2]
test    al, al
jnz     short loc_37abcea7
lea     ecx, [ebp+var_24]
call    ??r_lambda_24bca0711811e6233a81aece93ea4a83_@@qbe_nxz
test    al, al
jz      short loc_37abcefb
mov     ecx, esi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     byte ptr [ebp+var_7], al
push    [ebp+var_7]
mov     ecx, esi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaexd@z
mov     esi, [ebp+arg_8]
lea     edx, [esi+8]
cmp     edi, edx
jz      short loc_37abcf1b
cmp     byte ptr [edi-1], 0
jnz     short loc_37abcec6
dec     edi
cmp     edi, edx
jnz     short loc_37abcebb
cmp     edi, edx
jz      short loc_37abcf1b
cmp     ebx, 1450h
jg      short loc_37abcef7
cmp     ebx, 0ffffebb0h
jl      short loc_37abcf07
mov     cl, [ebp+var_1]
xor     eax, eax
test    cl, cl
setz    al
dec     eax
and     eax, 3
inc     eax
imul    eax, [ebp+var_c]
add     ebx, eax
cmp     ebx, 1450h
jle     short loc_37abceff
push    9
jmp     short loc_37abcf1d
push    7
jmp     short loc_37abcf1d
cmp     ebx, 0ffffebb0h
jge     short loc_37abcf0b
push    8
jmp     short loc_37abcf1d
sub     edi, edx
mov     [esi], ebx
xor     eax, eax
mov     [esi+4], edi
test    cl, cl
setnz   al
jmp     short loc_37abcf45
push    2
pop     eax
jmp     short loc_37abcf45
push    [ebp+var_14]
lea     eax, [ebp+var_7]
push    [ebp+var_18]
push    esi
push    eax
call    sub_37abd00d
jmp     short loc_37abcf42
push    [ebp+var_14]
lea     eax, [ebp+var_7]
push    [ebp+var_18]
push    esi
push    eax
call    sub_37abcf4c
add     esp, 10h
pop     ebx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
mov     ebx, [ebp+arg_0]
lea     eax, [ebp+arg_8]
push    esi
xor     esi, esi
mov     [ebp+var_8], eax
push    edi
mov     edi, [ebp+arg_4]
mov     eax, esi
mov     [ebp+var_10], edi
mov     [ebp+var_c], ebx
mov     [ebp+var_4], esi
mov     cl, [ebx]
cmp     cl, ds:byte_37af68b8[eax]
jz      short loc_37abcf82
cmp     cl, ds:byte_37af68bc[eax]
jnz     short loc_37abcfe9
mov     ecx, edi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
mov     eax, [ebp+var_4]
inc     eax
mov     [ebx], cl
mov     [ebp+var_4], eax
cmp     eax, 3
jnz     short loc_37abcf70
push    ecx
mov     ecx, edi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaexd@z
mov     eax, [edi+10h]
mov     ecx, edi
mov     [ebp+arg_8], eax
mov     eax, [edi+14h]
mov     [ebp+arg_c], eax
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     [ebx], al
mov     al, [ebx]
cmp     al, ds:byte_37af68c0[esi]
jz      short loc_37abcfc8
cmp     al, ds:byte_37af68c8[esi]
jnz     short loc_37abcff5
mov     ecx, edi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
inc     esi
mov     [ebx], al
cmp     esi, 5
jnz     short loc_37abcfb6
push    eax
mov     ecx, edi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaexd@z
push    3
pop     eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
lea     ecx, [ebp+var_10]
call    ??r_lambda_24bca0711811e6233a81aece93ea4a83_@@qbe_nxz
push    7
jmp     short loc_37abcfe1
lea     ecx, [ebp+var_10]
call    ??r_lambda_24bca0711811e6233a81aece93ea4a83_@@qbe_nxz
xor     ecx, ecx
test    al, al
setz    cl
lea     eax, ds:3[ecx*4]
jmp     short loc_37abcfe2
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, [ebp+arg_0]
lea     eax, [ebp+arg_8]
push    edi
mov     edi, [ebp+arg_4]
xor     ebx, ebx
mov     [ebp+var_c], edi
mov     [ebp+var_8], esi
mov     [ebp+var_4], eax
mov     al, [esi]
cmp     al, ds:byte_37af68d0[ebx]
jz      short loc_37abd03e
cmp     al, ds:byte_37af68d4[ebx]
jnz     short loc_37abd088
mov     ecx, edi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
inc     ebx
mov     [esi], al
cmp     ebx, 3
jnz     short loc_37abd02c
push    eax
mov     ecx, edi
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaexd@z
mov     eax, [edi+10h]
mov     ecx, edi
mov     [ebp+arg_8], eax
mov     eax, [edi+14h]
mov     [ebp+arg_c], eax
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     [esi], al
cmp     al, 28h
jz      short loc_37abd097
lea     ecx, [ebp+var_c]
call    ??r_lambda_24bca0711811e6233a81aece93ea4a83_@@qbe_nxz
movzx   eax, al
neg     eax
sbb     eax, eax
and     eax, 0fffffffdh
add     eax, 7
jmp     loc_37abd118
lea     ecx, [ebp+var_c]
call    ??r_lambda_24bca0711811e6233a81aece93ea4a83_@@qbe_nxz
push    7
jmp     loc_37abd117
mov     ecx, edi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
push    edi
push    esi
mov     [esi], al
call    sub_37abd159
pop     ecx
pop     ecx
test    al, al
jz      short loc_37abd0b1
push    5
jmp     short loc_37abd0c0
push    edi
push    esi
call    sub_37abd11f
pop     ecx
pop     ecx
test    al, al
jz      short loc_37abd0d0
push    6
movzx   edx, byte ptr [esi]
mov     ecx, edi
pop     ebx
push    edx
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaexd@z
mov     eax, ebx
jmp     short loc_37abd118
cmp     byte ptr [esi], 29h
jz      short loc_37abd115
mov     al, [esi]
test    al, al
jz      short loc_37abd10c
movsx   ecx, al
lea     eax, [ecx-30h]
cmp     eax, 9
jbe     short loc_37abd0ff
lea     eax, [ecx-61h]
cmp     eax, 19h
jbe     short loc_37abd0ff
lea     eax, [ecx-41h]
cmp     eax, 19h
jbe     short loc_37abd0ff
cmp     ecx, 5fh
jnz     loc_37abd06e
mov     ecx, edi
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     [esi], al
cmp     al, 29h
jnz     short loc_37abd0d5
cmp     byte ptr [esi], 29h
jnz     loc_37abd06e
push    4
pop     eax
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ebx
mov     al, [edi]
cmp     al, ds:byte_37af68e8[esi]
jz      short loc_37abd140
cmp     al, ds:byte_37af68ec[esi]
jnz     short loc_37abd152
mov     ecx, [ebp+arg_4]
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
inc     esi
mov     [edi], al
cmp     esi, 4
jnz     short loc_37abd12e
mov     bl, 1
pop     edi
pop     esi
mov     al, bl
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ebx
push    esi
xor     ebx, ebx
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ebx
mov     al, [edi]
cmp     al, ds:byte_37af68d8[esi]
jz      short loc_37abd17a
cmp     al, ds:byte_37af68e0[esi]
jnz     short loc_37abd18c
mov     ecx, [ebp+arg_4]
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
inc     esi
mov     [edi], al
cmp     esi, 5
jnz     short loc_37abd168
mov     bl, 1
pop     edi
pop     esi
mov     al, bl
pop     ebx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 40h
lea     ecx, [ebp+arg_4]
push    esi
push    edi
call    unknown_libname_61
test    al, al
jz      short loc_37abd3de
mov     edi, [ebp+arg_24]
test    edi, edi
jz      short loc_37abd3e9
cmp     edi, 2
jl      short loc_37abd3ce
cmp     edi, 24h
jle     short loc_37abd3e9
call    __errno
mov     dword ptr [eax], 16h
call    __invalid_parameter_noinfo
xor     eax, eax
mov     edx, eax
mov     esi, eax
jmp     loc_37abd63d
push    ebx
push    [ebp+arg_0]
lea     ecx, [ebp+var_40]
call    ??0_localeupdate@@qae@qau__crt_locale_pointers@@@z
xor     eax, eax
lea     ecx, [ebp+arg_4]
mov     [ebp+var_8], eax
mov     esi, eax
mov     eax, [ebp+arg_14]
mov     [ebp+var_30], eax
mov     eax, [ebp+arg_18]
mov     [ebp+var_2c], eax
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     bl, al
lea     eax, [ebp+locale]
push    eax
push    8
movzx   ecx, bl
push    ecx
jmp     short loc_37abd432
lea     ecx, [ebp+arg_4]
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     bl, al
lea     eax, [ebp+locale]
push    eax
push    8
movzx   eax, bl
push    eax
mov     byte ptr [ebp+var_4], bl
call    __ischartype_l
add     esp, 0ch
test    eax, eax
jnz     short loc_37abd41e
cmp     [ebp+arg_28], al
setnz   al
mov     [ebp+var_c], eax
cmp     bl, 2dh
jnz     short loc_37abd457
or      eax, 2
mov     [ebp+var_c], eax
jmp     short loc_37abd45c
cmp     bl, 2bh
jnz     short loc_37abd469
lea     ecx, [ebp+arg_4]
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     bl, al
mov     byte ptr [ebp+var_4], bl
or      ecx, 0ffffffffh
mov     [ebp+var_10], ecx
test    edi, edi
jz      short loc_37abd478
cmp     edi, 10h
jnz     short loc_37abd4f3
mov     al, bl
sub     al, 30h
cmp     al, 9
ja      short loc_37abd488
movsx   eax, bl
add     eax, 0ffffffd0h
jmp     short loc_37abd4aa
mov     al, bl
sub     al, 61h
cmp     al, 19h
ja      short loc_37abd498
movsx   eax, bl
add     eax, 0ffffffa9h
jmp     short loc_37abd4aa
mov     al, bl
sub     al, 41h
cmp     al, 19h
ja      short loc_37abd4a8
movsx   eax, bl
add     eax, 0ffffffc9h
jmp     short loc_37abd4aa
mov     eax, ecx
test    eax, eax
jz      short loc_37abd4b7
test    edi, edi
jnz     short loc_37abd4f3
push    0ah
pop     edi
jmp     short loc_37abd4f3
lea     ecx, [ebp+arg_4]
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     byte ptr [ebp+var_18], al
cmp     al, 78h
jz      short loc_37abd4de
cmp     al, 58h
jz      short loc_37abd4de
test    edi, edi
jnz     short loc_37abd4d1
push    8
pop     edi
push    [ebp+var_18]
lea     ecx, [ebp+arg_4]
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaexd@z
jmp     short loc_37abd4f0
test    edi, edi
jnz     short loc_37abd4e5
push    10h
pop     edi
lea     ecx, [ebp+arg_4]
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     byte ptr [ebp+var_4], al
or      ecx, 0ffffffffh
mov     eax, edi
cdq
push    edx
push    eax
push    ecx
push    ecx
mov     [ebp+var_28], eax
mov     [ebp+var_24], edx
call    __aulldvrm
mov     [ebp+var_20], ecx
mov     cl, byte ptr [ebp+var_4]
mov     [ebp+var_1c], ebx
mov     ebx, [ebp+var_c]
mov     [ebp+var_14], eax
mov     [ebp+var_18], edx
mov     al, cl
sub     al, 30h
cmp     al, 9
ja      short loc_37abd527
movsx   edx, cl
add     edx, 0ffffffd0h
jmp     short loc_37abd54a
mov     al, cl
sub     al, 61h
cmp     al, 19h
ja      short loc_37abd537
movsx   edx, cl
add     edx, 0ffffffa9h
jmp     short loc_37abd54a
mov     al, cl
sub     al, 41h
cmp     al, 19h
ja      short loc_37abd547
movsx   edx, cl
add     edx, 0ffffffc9h
jmp     short loc_37abd54a
or      edx, 0ffffffffh
mov     [ebp+var_c], edx
cmp     edx, 0ffffffffh
jz      short loc_37abd5b0
cmp     edx, edi
jnb     short loc_37abd5b0
mov     ecx, [ebp+var_8]
or      ebx, 8
cmp     esi, [ebp+var_18]
jb      short loc_37abd586
mov     eax, [ebp+var_14]
ja      short loc_37abd56a
cmp     ecx, eax
jb      short loc_37abd586
cmp     ecx, eax
jnz     short loc_37abd581
cmp     esi, [ebp+var_18]
jnz     short loc_37abd581
xor     eax, eax
cmp     eax, [ebp+var_1c]
jb      short loc_37abd586
ja      short loc_37abd581
cmp     edx, [ebp+var_20]
jbe     short loc_37abd586
or      ebx, 4
jmp     short loc_37abd59e
push    esi
push    ecx
push    [ebp+var_24]
push    [ebp+var_28]
call    __allmul
add     eax, [ebp+var_c]
mov     esi, edx
mov     [ebp+var_8], eax
adc     esi, 0
lea     ecx, [ebp+arg_4]
call    ?get@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaedxz
mov     cl, al
mov     byte ptr [ebp+var_4], cl
jmp     loc_37abd517
push    [ebp+var_4]
lea     ecx, [ebp+arg_4]
call    ?unget@?$input_adapter_character_source@v?$string_input_adapter@d@__crt_stdio_input@@@__crt_strtox@@qaexd@z
test    bl, 8
jnz     short loc_37abd5d7
push    [ebp+var_2c]
lea     ecx, [ebp+arg_4]
push    [ebp+var_30]
call    unknown_libname_59
xor     eax, eax
mov     [ebp+var_10], eax
mov     esi, eax
jmp     short loc_37abd617
mov     edi, [ebp+var_8]
push    esi
push    edi
push    ebx
call    ??$is_overflow_condition@_k@__crt_strtox@@ya_ni_k@z
add     esp, 0ch
test    al, al
jz      short loc_37abd61c
call    __errno
mov     dword ptr [eax], 22h
test    bl, 1
jnz     short loc_37abd602
or      eax, 0ffffffffh
mov     edi, eax
mov     esi, eax
jmp     short loc_37abd628
test    bl, 2
jz      short loc_37abd612
and     [ebp+var_10], 0
mov     esi, 80000000h
jmp     short loc_37abd617
mov     esi, 7fffffffh
mov     edx, [ebp+var_10]
jmp     short loc_37abd62a
test    bl, 2
jz      short loc_37abd628
neg     edi
adc     esi, 0
neg     esi
mov     edx, edi
cmp     [ebp+var_34], 0
pop     ebx
jz      short loc_37abd63b
mov     eax, [ebp+var_40]
and     dword ptr [eax+350h], 0fffffffdh
xor     eax, eax
mov     edi, [ebp+arg_1c]
test    edi, edi
jz      short loc_37abd64e
mov     ecx, [ebp+arg_14]
or      ecx, [ebp+arg_18]
jnz     short loc_37abd64e
mov     [edi], al
mov     eax, edx
mov     edx, esi
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    1
push    0ah
push    ecx
push    ecx
mov     eax, esp
push    0
push    [ebp+arg_0]
push    eax
call    unknown_libname_21
add     esp, 0ch
push    0
call    ??$parse_integer@kv?$c_string_character_source@d@__crt_strtox@@@__crt_strtox@@yakqau__crt_locale_pointers@@v?$c_string_character_source@d@0@h_n@z
add     esp, 14h
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
pop     ebp
jmp     $+5
mov     edi, edi
push    ebp
mov     ebp, esp
push    0
push    [ebp+arg_4]
push    [ebp+arg_0]
call    unknown_libname_65
add     esp, 0ch
pop     ebp
retn
mov     al, 1
retn
fld     ds:dbl_37af81a0
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_123407a5e2ac06da108355a851863b7a_@@aav_lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec_@@v_lambda_ae55bdf541ad94d75914d381c370e64d_@@@?$__crt_seh_guarded_call@h@@qaeh$$qav_lambda_123407a5e2ac06da108355a851863b7a_@@aav_lambda_2fe9b910cf3cbf4a0ab98a02ba45b3ec_@@$$qav_lambda_ae55bdf541ad94d75914d381c370e64d_@@@z
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebp+arg_0]
cmp     esi, 0fffffffeh
jnz     short loc_37ac2d98
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 9
jmp     short loc_37ac2deb
test    esi, esi
js      short loc_37ac2dd3
cmp     esi, dword_37b73010
jnb     short loc_37ac2dd3
mov     eax, esi
mov     edx, esi
and     eax, 3fh
sar     edx, 6
imul    ecx, eax, 30h
mov     eax, dword_37b72e10[edx*4]
test    byte ptr [eax+ecx+28h], 1
jz      short loc_37ac2dd3
lea     eax, [ebp+arg_0]
mov     [ebp+var_4], eax
lea     eax, [ebp+var_4]
push    eax
push    esi
call    sub_37ac2d4c
pop     ecx
pop     ecx
jmp     short loc_37ac2dee
call    ___doserrno
and     dword ptr [eax], 0
call    __errno
mov     dword ptr [eax], 9
call    __invalid_parameter_noinfo
or      eax, 0ffffffffh
pop     esi
mov     esp, ebp
pop     ebp
retn
mov     eax, offset dword_37b72a90
retn
push    esi
push    edi
mov     edi, offset dword_37b72a98
xor     esi, esi
push    0
push    0fa0h
push    edi
call    ___acrt_initializecriticalsectionex@12
test    eax, eax
jz      short loc_37ac3cbf
inc     dword_37b72bd0
add     esi, 18h
add     edi, 18h
cmp     esi, 138h
jb      short loc_37ac3c96
mov     al, 1
jmp     short loc_37ac3cc9
push    0
call    ___acrt_uninitialize_locks
pop     ecx
xor     al, al
pop     edi
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
pop     ebp
jmp     $+5
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
test    esi, esi
jz      short loc_37ac48bd
push    0ffffffe0h
xor     edx, edx
pop     eax
div     esi
cmp     eax, [ebp+arg_8]
jnb     short loc_37ac48bd
call    __errno
mov     dword ptr [eax], 0ch
xor     eax, eax
jmp     short loc_37ac48ff
push    ebx
mov     ebx, [ebp+block]
push    edi
test    ebx, ebx
jz      short loc_37ac48d1
push    ebx
call    __msize
pop     ecx
mov     edi, eax
jmp     short loc_37ac48d3
xor     edi, edi
imul    esi, [ebp+arg_8]
push    esi
push    ebx
call    __realloc_base
mov     ebx, eax
pop     ecx
pop     ecx
test    ebx, ebx
jz      short loc_37ac48fb
cmp     edi, esi
jnb     short loc_37ac48fb
sub     esi, edi
lea     eax, [ebx+edi]
push    esi
push    0
push    eax
call    _memset
add     esp, 0ch
pop     edi
mov     eax, ebx
pop     ebx
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_37b72be0, eax
pop     ebp
retn
mov     eax, dword_37b72bdc
retn
mov     eax, dword_37b72cf4
test    eax, eax
jnz     short locret_37ac5011
cmp     dword_37b72cf0, eax
jnz     short loc_37ac4ff7
xor     eax, eax
retn
call    ??$common_initialize_environment_nolock@_w@@yahxz
test    eax, eax
jnz     short loc_37ac4ff4
call    ??$initialize_environment_by_cloning_nolock@_w@@yahxz
neg     eax
sbb     eax, eax
not     eax
and     eax, dword_37b72cf4
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax]
cmp     eax, dword_37b72cfc
jz      short loc_37ac538b
push    eax
call    unknown_libname_66
pop     ecx
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     eax, [eax]
cmp     eax, dword_37b72cf8
jz      short loc_37ac53a6
push    eax
call    unknown_libname_66
pop     ecx
pop     ebp
retn
jmp     sub_37ac4fe3
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_0fef6fff2b5e6b53303c9058db11ae1f_@@aav_lambda_082c17da81b0962e08c0587ee0fac50c_@@v_lambda_fa6e051aed0a38726081083cc7c328e9_@@@?$__crt_seh_guarded_call@pad@@qaepad$$qav_lambda_0fef6fff2b5e6b53303c9058db11ae1f_@@aav_lambda_082c17da81b0962e08c0587ee0fac50c_@@$$qav_lambda_fa6e051aed0a38726081083cc7c328e9_@@@z_0
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_0fef6fff2b5e6b53303c9058db11ae1f_@@aav_lambda_082c17da81b0962e08c0587ee0fac50c_@@v_lambda_fa6e051aed0a38726081083cc7c328e9_@@@?$__crt_seh_guarded_call@pad@@qaepad$$qav_lambda_0fef6fff2b5e6b53303c9058db11ae1f_@@aav_lambda_082c17da81b0962e08c0587ee0fac50c_@@$$qav_lambda_fa6e051aed0a38726081083cc7c328e9_@@@z
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+function]
push    offset stru_37b72d00
call    __register_onexit_function
pop     ecx
pop     ecx
pop     ebp
retn
push    offset off_37b67dd0
mov     ecx, offset dword_37b72d20
call    unknown_libname_20
mov     al, 1
retn
call    ___dcrt_uninitialize_environments_nolock
mov     al, 1
retn
push    0
call    ___vcrt_uninitialize
pop     ecx
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_0]
mov     ecx, offset dword_37b72d18
call    unknown_libname_20
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_51b6e8b1eb166f2a3faf91f424b38130_@@aav_lambda_6250bd4b2a391816dd638c3bf72b0bcb_@@v_lambda_0b5a4a3e68152e1d9b943535f5f47bed_@@@?$__crt_seh_guarded_call@x@@qaex$$qav_lambda_51b6e8b1eb166f2a3faf91f424b38130_@@aav_lambda_6250bd4b2a391816dd638c3bf72b0bcb_@@$$qav_lambda_0b5a4a3e68152e1d9b943535f5f47bed_@@@z
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_3518db117f0e7cdb002338c5d3c47b6c_@@aav_lambda_b2ea41f6bbb362cd97d94c6828d90b61_@@v_lambda_abdedf541bb04549bc734292b4a045d4_@@@?$__crt_seh_guarded_call@x@@qaex$$qav_lambda_3518db117f0e7cdb002338c5d3c47b6c_@@aav_lambda_b2ea41f6bbb362cd97d94c6828d90b61_@@$$qav_lambda_abdedf541bb04549bc734292b4a045d4_@@@z
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_5b71d36f03204c0beab531769a5b5694_@@aav_lambda_be2b3da3f62db62e9dad5dc70221a656_@@v_lambda_8f9ce462984622f9bf76b59e2aaaf805_@@@?$__crt_seh_guarded_call@x@@qaex$$qav_lambda_5b71d36f03204c0beab531769a5b5694_@@aav_lambda_be2b3da3f62db62e9dad5dc70221a656_@@$$qav_lambda_8f9ce462984622f9bf76b59e2aaaf805_@@@z
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_9df27f884b057bc3edfc946cb5b7cf47_@@aav_lambda_e69574bed617af4e071282c136b37893_@@v_lambda_cc0d902bcbbeb830f749456577db4721_@@@?$__crt_seh_guarded_call@x@@qaex$$qav_lambda_9df27f884b057bc3edfc946cb5b7cf47_@@aav_lambda_e69574bed617af4e071282c136b37893_@@$$qav_lambda_cc0d902bcbbeb830f749456577db4721_@@@z
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
mov     eax, [esi]
cmp     eax, dword_37b72d20
jz      short loc_37ac6b0b
mov     ecx, [ebp+arg_0]
mov     eax, dword_37b67f5c
test    [ecx+350h], eax
jnz     short loc_37ac6b0b
call    ___acrt_update_thread_locale_data
mov     [esi], eax
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_4]
mov     eax, [esi]
cmp     eax, off_37b68480
jz      short loc_37ac6b38
mov     ecx, [ebp+arg_0]
mov     eax, dword_37b67f5c
test    [ecx+350h], eax
jnz     short loc_37ac6b38
call    ___acrt_update_thread_multibyte_data
mov     [esi], eax
pop     esi
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_c76fdea48760d5f9368b465f31df4405_@@aav_lambda_e378711a6f6581bf7f0efd7cdf97f5d9_@@v_lambda_e927a58b2a85c081d733e8c6192ae2d2_@@@?$__crt_seh_guarded_call@x@@qaex$$qav_lambda_c76fdea48760d5f9368b465f31df4405_@@aav_lambda_e378711a6f6581bf7f0efd7cdf97f5d9_@@$$qav_lambda_e927a58b2a85c081d733e8c6192ae2d2_@@@z
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
push    esi
push    edi
push    0b8h
push    1
mov     edi, ecx
call    __calloc_base
mov     esi, eax
mov     eax, [edi]
push    0
mov     [eax], esi
call    __free_base
add     esp, 0ch
test    esi, esi
jz      short loc_37ac6c37
mov     eax, [edi]
mov     [ebp+var_14], eax
mov     eax, [edi+4]
mov     [ebp+var_10], eax
mov     eax, [edi+8]
mov     [ebp+var_c], eax
mov     eax, [edi+0ch]
mov     [ebp+var_8], eax
mov     eax, [edi+10h]
mov     [ebp+var_4], eax
lea     eax, [ebp+var_14]
push    eax
push    4
call    sub_37ac6bb9
pop     ecx
pop     ecx
pop     edi
pop     esi
mov     esp, ebp
pop     ebp
retn
xor     eax, eax
mov     ecx, offset dword_37b72d1c
inc     eax
xchg    eax, [ecx]
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_9227be29367c048ad7fd93a717dcb1a1_@@aav_lambda_a463b7b0560cfcaf9b17f27c6ef46564_@@v_lambda_ccea11b5727ccf69be64f5f5d9a08d9f_@@@?$__crt_seh_guarded_call@h@@qaeh$$qav_lambda_9227be29367c048ad7fd93a717dcb1a1_@@aav_lambda_a463b7b0560cfcaf9b17f27c6ef46564_@@$$qav_lambda_ccea11b5727ccf69be64f5f5d9a08d9f_@@@z
mov     esp, ebp
pop     ebp
retn
push    esi
xor     esi, esi
mov     eax, dword_37b72e10[esi]
test    eax, eax
jz      short loc_37ac953f
push    eax
call    ___acrt_lowio_destroy_handle_array
and     dword_37b72e10[esi], 0
pop     ecx
add     esi, 4
cmp     esi, 200h
jb      short loc_37ac9527
mov     al, 1
pop     esi
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_a048d3beccc847880fc8490e18b82769_@@aav_lambda_ec61778202f4f5fc7e7711acc23c3bca_@@v_lambda_f7496a158712204296dd6628a163878e_@@@?$__crt_seh_guarded_call@p6axh@z@@qaep6axh@z$$qav_lambda_a048d3beccc847880fc8490e18b82769_@@aav_lambda_ec61778202f4f5fc7e7711acc23c3bca_@@$$qav_lambda_f7496a158712204296dd6628a163878e_@@@z
mov     esp, ebp
pop     ebp
retn
mov     eax, dword_37b730ec
retn
mov     eax, dword_37b730f0
retn
and     hheap, 0
mov     al, 1
retn
push    0ah
call    isprocessorfeaturepresent
mov     dword_37b736fc, eax
xor     eax, eax
retn
mov     byte ptr [ebp-90h], 0feh
or      ch, ch
jnz     short negytox
fxch    st(1)
fyl2x
jmp     short ff2x
call    _isinttos
or      eax, eax
jz      short negytoxerror
xor     ch, ch
cmp     eax, 2
jz      short evenexp
not     ch
fxch    st(1)
fabs
jmp     short ffxtoy
jmp     __rtonepop
jmp     __rtindfpop
fstp    st
fstp    st
fld     ds:tbyte_37af8280
mov     byte ptr [ebp-90h], 2
retn
fldln2
fxch    st(1)
ftst
fstsw   word ptr [ebp-0a0h]
wait
test    byte ptr [ebp-9fh], 41h
jnz     short negytoxerror
fyl2x
retn
mov     byte ptr [ebp-90h], 2
fstp    st
fld     ds:tbyte_37af828a
retn
or      cl, cl
jnz     short tranindfnpop
retn
fldlg2
jmp     short ffyl2xm
fldln2
fxch    st(1)
or      cl, cl
jnz     short negytoxerror
fyl2x
retn
jmp     __rtonepop
call    _isinttos
fstp    st
fstp    st
or      cl, cl
jnz     short _rtfor0toneg
fldz
cmp     eax, 1
jnz     short zerotoxdone
or      ch, ch
jz      short zerotoxdone
fchs
mov     byte ptr [ebp-90h], 2
fld     ds:tbyte_37af8280
cmp     eax, 1
jnz     short zerotoxdone
or      ch, ch
jz      short zerotoxdone
fchs
jmp     short zerotoxdone
fstp    st
fstp    st
jmp     __rtindfnpop
fstp    st
fstp    st
fld     ds:tbyte_37af8280
mov     byte ptr [ebp-90h], 3
retn
push    esi
sub     esp, 74h
mov     esi, esp
push    esi
sub     esp, 8
fstp    qword ptr [esp]
sub     esp, 8
fstp    qword ptr [esp]
fsave   byte ptr [esi+8]
call    __powhlp
add     esp, 14h
frstor  byte ptr [esi+8]
fld     qword ptr [esi]
add     esp, 74h
pop     esi
test    eax, eax
jz      short noerror
jmp     __rttosnpopde
call    __rttosnpopde
call    __rttosnpopde
jmp     short __rtnospop
fstp    st
fstp    st
fstp    st
fldz
test    ch, ch
jz      short dont_change_zerosign
fchs
fstp    st
fxch    st(1)
fstp    tbyte ptr [ebp-9eh]
fld     tbyte ptr [ebp-9eh]
test    byte ptr [ebp-97h], 40h
jz      short _tossnan2
mov     byte ptr [ebp-90h], 0
jmp     short _tosnan2ret
mov     byte ptr [ebp-90h], 0
faddp   st(1), st
retn
fstp    tbyte ptr [ebp-9eh]
fld     tbyte ptr [ebp-9eh]
test    byte ptr [ebp-97h], 40h
jz      short _snan2
fxch    st(1)
fstp    tbyte ptr [ebp-9eh]
fld     tbyte ptr [ebp-9eh]
test    byte ptr [ebp-97h], 40h
jz      short _snan2
mov     byte ptr [ebp-90h], 0
jmp     short _nan2ret
mov     byte ptr [ebp-90h], 1
faddp   st(1), st
retn
fstp    st
fstp    st
fld     ds:tbyte_37af82e0
cmp     byte ptr [ebp-90h], 0
jg      short retj
fstp    st
fstp    st
fld     ds:tbyte_37af82f4
or      ch, ch
jz      short dont_change_sign
fchs
or      cl, cl
jz      short retinf
fld     ds:dbl_37af8306
fmulp   st(1), st
or      cl, cl
jz      short chsifnegret
fchs
mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    edi
mov     esi, ecx
call    unknown_libname_71
mov     edi, eax
test    edi, edi
jz      short loc_37acc729
push    [ebp+block]
call    __free_base
pop     ecx
mov     eax, edi
jmp     short loc_37acc737
mov     ecx, [esi+4]
mov     eax, [ebp+block]
mov     [ecx], eax
add     dword ptr [esi+4], 4
xor     eax, eax
pop     edi
pop     esi
pop     ebp
retn    4
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_c76fdea48760d5f9368b465f31df4405_@@aav_lambda_e378711a6f6581bf7f0efd7cdf97f5d9_@@v_lambda_e927a58b2a85c081d733e8c6192ae2d2_@@@?$__crt_seh_guarded_call@x@@qaex$$qav_lambda_c76fdea48760d5f9368b465f31df4405_@@aav_lambda_e378711a6f6581bf7f0efd7cdf97f5d9_@@$$qav_lambda_e927a58b2a85c081d733e8c6192ae2d2_@@@z_0
mov     esp, ebp
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
push    [ebp+arg_0]
mov     ecx, offset dword_37b7311c
call    unknown_libname_20
pop     ebp
retn
mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     eax, [ebp+arg_0]
lea     ecx, [ebp+var_1]
mov     [ebp+var_8], eax
mov     [ebp+var_c], eax
lea     eax, [ebp+var_8]
push    eax
push    [ebp+arg_4]
lea     eax, [ebp+var_c]
push    eax
call    ??$?rv_lambda_61cee617f5178ae960314fd4d05640a0_@@aav_lambda_6978c1fb23f02e42e1d9e99668cc68aa_@@v_lambda_9cd88cf8ad10232537feb2133f08c833_@@@?$__crt_seh_guarded_call@h@@qaeh$$qav_lambda_61cee617f5178ae960314fd4d05640a0_@@aav_lambda_6978c1fb23f02e42e1d9e99668cc68aa_@@$$qav_lambda_9cd88cf8ad10232537feb2133f08c833_@@@z
mov     esp, ebp
pop     ebp
retn
jmp     short __ceil_default
push    ebp
mov     ebp, esp
test    [ebp+arg_0], 1
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_37afe6e4
jz      short loc_37ad2a73
push    0ch
push    esi
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     eax, esi
pop     esi
pop     ebp
retn    4
xor     eax, eax
retn    4
pop     ds
dec     esp
rol     byte ptr [ebx], cl
fucomi  st, st(5)
cwde
push    edi
or      al, 0bch
mov     ch, dl
and     dh, [edi+28h]
arpl    ds:0bead4a99h, di
and     [ebx-1], ebp
fist    dword ptr [esi]
jecxz   short loc_37ad368e
mov     esp, 0e8fe28f5h
xchg    eax, esi
sub     [edx], dl
shr     byte ptr [ecx+6], 0adh
xchg    eax, esi
mov     bh, 4eh
pop     ecx
mov     bl, 42h
xchg    eax, ebp
sbb     edi, [edx+5bh]
js      short near ptr loc_37ad36e2+3
movlps  xmm3, qword ptr [esi]
or      al, 0f4h
mov     [esi-801a7bh], bh
push    es
retn    9f02h
jp      short loc_37ad36b8
stc
push    55h
mov     esp, 7a031875h
nop
sub     eax, 9b81d764h
fdivr   dword ptr [edi+33h]
stosd
sub     esp, eax
test    al, 65h
xor     al, 0e3h
jg      short near ptr loc_37ad37e1+2
pop     esp
pop     esi
mov     ebx, cs
bnd jle short loc_37ad3709
push    esi
jl      short loc_37ad37c3
dec     ebx
jns     short loc_37ad37e9
call    near ptr 0d4bc0dbah
bound   eax, [ebx-4ah]
mov     al, 46h
daa
adc     eax, 0be858f0fh
jmp     short $+2
mov     ebp, 7803907ah
lds     edx, [bx+si+18h]
push    edi
sbb     eax, 73af0e0eh
icebp
sub     edx, ecx
aad     98h
call    far ptr 0cb7fh:610f0cceh
scasd
jno     short near ptr loc_37ad37d2+1
insb
mov     ch, 4dh
mov     cl, 3bh
pop     si
std
xchg    eax, esp
cwde
stosb
mov     [edx+1c44cf78h], ecx
out     89h, al
test    eax, 724ac0b1h
xchg    eax, edx
sahf
jnz     short near ptr loc_37ad37e1+5
push    edi
push    5b93074ah
stosb
or      al, 35h
movsd
jmp     near ptr 0f731063bh
jnb     short near ptr dword_37ad401c+2
cmpsd
ja      short near ptr dword_37ad401c+23h
shr     dword ptr [ecx-78h], 0d7h
and     eax, 2bf156e9h
retf
rol     byte ptr [eax], cl
sbb     ecx, esp
mov     esp, 0b2466842h
in      eax, dx
call    near ptr 0f09b4202h
or      [eax-80h], cl
ror     dword ptr [esi-14e1de5eh], 33h
push    esp
sub     cl, [ecx-6]
cmpsd
popa
enter   0ffffc82bh, 28h
retn    7bd9h
adc     eax, 0dd0e8bf2h
pop     ebp
jb      short loc_37ad4286
lds     edx, [eax]
dec     esi
xchg    eax, ebx
dec     esi
pop     edi
mov     ebx, 0a0ef1a8ah
fld     dword ptr [eax+edx*4-37ddd10ch]
inc     edi
dec     edi
and     eax, 0aaaa43d9h
lodsb
cld
cmp     cl, [eax-3dh]
std
xor     al, 6ah
lodsb
mov     al, 33h
enter   0ffffd7e5h, 4fh
xor     al, 0bh
test    esp, edi
push    ecx
dec     edx
sar     dword ptr [ebp+1bh], 0b5h
inc     esi
les     ebx, [eax+15h]
adc     [ecx], esp
wait
and     [eax+ebp*4], ebp
cld
jmp     far ptr 28bah:938d107dh
stosd
dec     eax
push    ebp
jge     short loc_37ad42b6
push    cs
pop     edi
pop     edi
cld
ja      short loc_37ad42af
out     dx, al
int     3
icebp
lodsb
stosd
adc     eax, 7e7bc56fh
test    al, 0e6h
add     [eax], esp
jno     short loc_37ad4339
xor     al, 1ah
outsb
lodsb
mov     esi, 1be1b2a7h
jnb     short loc_37ad42ff
push    dword ptr [edi]
sbb     [esp-14h], edx
test    eax, 0cedf97ddh
dec     edx
nop
sti
mov     ds:6c3b028ah, al
jl      short loc_37ad4382
add     ecx, [ebx]
icebp
out     27h, al
cmp     al, 0eh
in      al, 7bh
cli
mov     [edx-2ah], bh
cmpsd
aaa
sahf
push    es
wait
add     ah, [ecx-5eb16ah]
add     al, 57h
js      short loc_37ad43ba
mov     ah, 0d4h
push    ebp
cld
shr     byte ptr [ebx-60h], cl
xor     eax, 0dcbc6616h
cmp     eax, 0b74af454h
int     8ah
fst     dword ptr [esi+ecx*2+54h]
dec     ebx
mov     word ptr [ebx], ss
jmp     short loc_37ad4307
cmc
and     eax, 58c193cfh
sub     cl, gs:[ecx]
enter   0ffff944bh, 47h
cmp     al, 8fh
sbb     [ebp-4ah], ah
retn    79dah
xor     ah, [eax+22h]
fxam
sub     dl, bl
imul    dword ptr [esi]
inc     eax
dec     eax
scasb
push    ebp
mov     ebp, esp
sub     esp, 6ch
xor     eax, eax
push    ebx
push    esi
push    edi
lea     edi, [ebp-10h]
xor     ebx, ebx
stosd
push    44h
push    ebx
stosd
stosd
stosd
lea     eax, [ebp-6ch]
push    eax
call    _memset
add     esp, 0ch
cmp     [ebp+10h], ebx
jz      short loc_37ad4931
mov     edi, [ebp+10h]
lea     esi, [ebp-10h]
movsd
movsd
movsd
movsd
mov     eax, [ebp+0ch]
push    8
pop     edi
mov     dword ptr [ebp-6ch], 44h
cmp     [eax+14h], edi
jb      short loc_37ad4945
mov     eax, [eax]
mov     esi, [ebp+8]
mov     ecx, esi
cmp     [esi+14h], edi
jb      short loc_37ad4951
mov     ecx, [esi]
push    eax
push    ecx
lea     eax, [ebp-28h]
push    offset dword_37b6eed8
push    eax
call    sub_37adbc1d
push    44h
lea     eax, [ebp-6ch]
push    ebx
push    eax
call    _memset
add     esp, 1ch
mov     dword ptr [ebp-6ch], 44h
cmp     [ebp-14h], edi
lea     eax, [ebp-28h]
cmovnb  eax, [ebp-28h]
cmp     [esi+14h], edi
jb      short loc_37ad4988
mov     esi, [esi]
lea     ecx, [ebp-10h]
push    ecx
lea     ecx, [ebp-6ch]
push    ecx
push    ebx
push    ebx
push    400h
push    ebx
push    ebx
push    ebx
push    eax
push    esi
call    ds:createprocessw
test    eax, eax
jnz     short loc_37ad49ae
call    ds:getlasterror
mov     ebx, eax
test    ebx, ebx
jnz     short loc_37ad49d3
cmp     [ebp+10h], ebx
jnz     short loc_37ad49c9
push    dword ptr [ebp-0ch]
mov     esi, ds:closehandle
call    esi
push    dword ptr [ebp-10h]
call    esi
jmp     short loc_37ad49d3
mov     edi, [ebp+10h]
lea     esi, [ebp-10h]
movsd
movsd
movsd
movsd
lea     ecx, [ebp-28h]
call    ?_tidy_deallocate@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaexxz
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
mov     esp, ebp
pop     ebp
retn
jl      short loc_37ad4d26
pop     esi
dec     ecx
adc     esp, [esi+2f802f24h]
push    ebp
mov     ds:62881577h, eax
mov     edx, 33a09108h
mov     edx, 325e91d4h
out     0a9h, al
aaa
xor     cl, [eax+edx*8]
adc     byte ptr ds:0cdf1a200h, 0e6h
lds     edi, [edx+37h]
and     al, 63h
or      [edx], ebp
xchg    eax, edx
push    esi
jnb     short loc_37ad4d16
xor     byte ptr [eax+2dh], 0e7h
mov     ah, 29h
retf
or      [edi+73h], ebx
test    al, 0a7h
mov     ecx, 87ab1c88h
xchg    eax, edx
fucom   st
retn
aas
xchg    eax, ebp
add     [edx-1ah], al
xchg    eax, ebp
push    ecx
xlat
jl      short loc_37ad4cee
inc     ecx
dec     edi
add     al, 39h
mov     eax, 2d542fe4h
xor     ah, dl
movsb
outsd
inc     edx
ror     dh, 38h
wait
ror     byte ptr [edi], 1
inc     ebp
cmp     al, 0bch
sti
xor     eax, edi
loope   loc_37ad4cd4
inc     ecx
bnd jns short loc_37ad4cfc
push    esp
add     al, 1ah
imul    edx, [edx], -51h
sbb     eax, 91de2c39h
mov     al, 70h
pusha
pop     ebp
sal     dword ptr [esi-46h], cl
add     [edx+esi*2+197a3b6h], ah
popf
pushf
pushf
in      al, dx
mov     ecx, 0bb9b2ac3h
cdq
xor     edx, ecx
mov     dh, 0feh
hlt
jbe     short loc_37ad4d5e
sub     dword ptr [eax+66fb523dh], 54c03a96h
sub     al, 0a2h
outsd
xchg    eax, edi
rcr     bl, 1
les     edi, ds:294d4f86h
cmp     [ebp+63955318h], cl
dec     edi
dec     ecx
wait
pop     edi
retn
retf
fisttp  word ptr [ecx-80h]
mov     edi, 0deb07de2h
mov     dword ptr [ebp-19d38d01h], 808b2bb5h
xor     al, 29h
mov     edx, 0a4d2ba21h
cmp     ebx, [esi+ebp*4-6a951d2ah]
cmp     ecx, esi
pop     es
adc     cl, ch
add     edx, esi
retf
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37ae0e8f
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 0b8h
mov     eax, dword_37b6ff08
mov     ecx, [eax+154h]
mov     [ebp-60h], ecx
lea     edx, [ebp-7ch]
push    edx
mov     ecx, [ebp+8]
call    sub_37aed1b2
mov     dword ptr [ebp-4], 0
lea     eax, [ebp-7ch]
mov     [ebp-20h], eax
mov     ecx, [ebp-20h]
mov     [ebp-24h], ecx
mov     edx, [ebp-24h]
mov     [ebp-28h], edx
mov     eax, [ebp-28h]
mov     [ebp-2ch], eax
mov     ecx, [ebp-2ch]
mov     edx, [ecx]
mov     [ebp-18h], edx
mov     eax, [ebp-20h]
mov     [ebp-30h], eax
mov     ecx, [ebp-30h]
mov     [ebp-34h], ecx
mov     edx, [ebp-34h]
add     edx, 4
mov     [ebp-38h], edx
mov     eax, [ebp-38h]
mov     ecx, [eax]
mov     [ebp-3ch], ecx
jmp     short loc_37ad65f7
mov     edx, [ebp-18h]
add     edx, 18h
mov     [ebp-18h], edx
mov     eax, [ebp-18h]
cmp     eax, [ebp-3ch]
jz      loc_37ad679d
mov     ecx, [ebp-18h]
mov     [ebp-10h], ecx
mov     edx, [ebp-10h]
push    edx
mov     ecx, [ebp+8]
call    near ptr loc_37aec7fa+1
mov     [ebp-14h], eax
mov     ecx, [ebp-14h]
call    near ptr sub_37aed495
movzx   eax, al
test    eax, eax
jz      short loc_37ad6649
push    offset dword_37b7000c
mov     ecx, [ebp-10h]
call    sub_37a9b243
test    eax, eax
jnz     short loc_37ad6644
mov     ecx, [ebp-14h]
push    ecx
call    loc_37ad6830
add     esp, 4
jmp     loc_37ad6798
mov     ecx, [ebp-14h]
call    sub_37aed4d2
movzx   edx, al
test    edx, edx
jz      loc_37ad6702
lea     eax, [ebp-0c4h]
push    eax
mov     ecx, [ebp-14h]
call    sub_37aece2a
mov     [ebp-40h], eax
mov     ecx, [ebp-40h]
mov     [ebp-4ch], ecx
mov     byte ptr [ebp-4], 1
mov     edx, [ebp-10h]
mov     [ebp-44h], edx
mov     eax, [ebp-44h]
mov     [ebp-64h], eax
lea     ecx, [ebp-19h]
mov     [ebp-68h], ecx
lea     edx, [ebp-94h]
mov     [ebp-48h], edx
mov     ecx, [ebp-48h]
call    near ptr loc_37a148df+1
mov     byte ptr [ebp-4], 2
mov     eax, [ebp-10h]
push    eax
lea     ecx, [ebp-94h]
call    loc_37a9ae8d
mov     byte ptr [ebp-4], 1
lea     ecx, [ebp-94h]
mov     [ebp-50h], ecx
mov     byte ptr [ebp-4], 3
mov     edx, [ebp-4ch]
push    edx
mov     eax, [ebp-50h]
push    eax
call    sub_37a9c4b0
add     esp, 4
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad4330
mov     byte ptr [ebp-4], 4
lea     ecx, [ebp-94h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 5
lea     ecx, [ebp-0c4h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 0
jmp     loc_37ad65ee
mov     ecx, [ebp-14h]
call    sub_37aed3b8
movzx   ecx, al
test    ecx, ecx
jz      loc_37ad6798
mov     edx, [ebp-10h]
mov     [ebp-54h], edx
mov     eax, [ebp-54h]
mov     [ebp-6ch], eax
lea     ecx, [ebp-1ah]
mov     [ebp-70h], ecx
lea     edx, [ebp-0ach]
mov     [ebp-58h], edx
mov     ecx, [ebp-58h]
call    near ptr loc_37a148df+1
mov     byte ptr [ebp-4], 6
mov     eax, [ebp-10h]
push    eax
lea     ecx, [ebp-0ach]
call    loc_37a9ae8d
mov     byte ptr [ebp-4], 0
lea     ecx, [ebp-0ach]
mov     [ebp-5ch], ecx
mov     byte ptr [ebp-4], 7
mov     ecx, [ebp-14h]
call    loc_37aecfd8
xor     edx, edx
push    edx
push    eax
mov     eax, [ebp-5ch]
push    eax
call    sub_37a9c4b0
add     esp, 4
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad465a
mov     byte ptr [ebp-4], 8
lea     ecx, [ebp-0ach]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 0
jmp     loc_37ad65ee
jmp     loc_37ad65ee
mov     dword ptr [ebp-4], 9
lea     ecx, [ebp-7ch]
call    sub_37a9afef
mov     dword ptr [ebp-4], 0ffffffffh
mov     ecx, dword_37b6ff08
mov     edx, [ecx+180h]
xor     eax, eax
push    eax
push    edx
push    offset dword_37b71d48
call    loc_37a99880
add     esp, 0ch
mov     ecx, dword_37b6ff08
mov     edx, [ebp-60h]
cmp     edx, [ecx+154h]
jz      short loc_37ad6814
mov     eax, dword_37b6ff08
imul    ecx, [eax+154h], 3ch
imul    edx, ecx, 3ch
imul    eax, edx, 3e8h
xor     ecx, ecx
push    ecx
push    eax
push    offset dword_37b71ce8
call    loc_37a99880
add     esp, 0ch
push    offset dword_37b71ce8
call    near ptr sub_37a99830
add     esp, 4
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
sbb     eax, 0bd8c191dh
mov     bh, 0dah
sub     ch, al
fdivr   dword ptr [ebx]
pop     esp
add     cl, [edx+36h]
mov     cl, 0d7h
cdq
adc     bh, dl
cmp     cl, [esi-1eh]
jl      short loc_37ad67ff
adc     al, 9
jge     short loc_37ad6889
sub     al, 63h
movsb
dec     edx
ficomp  dword ptr fs:[edx+7ch]
enter   0ffff98ffh, 0bdh
mov     bh, 0a3h
mov     edx, 37e497f8h
in      eax, dx
adc     [ecx+46608520h], bl
inc     edx
test    [esi+74616756h], ebp
setalc
in      al, dx
cmpsd
pop     eax
mov     ah, 23h
stosd
rol     dh, cl
mov     [ebx], ebx
push    ds
retf    4e34h
inc     ebp
rol     dword ptr [ecx-466af31eh], cl
std
das
cmp     [edi-1ch], ecx
pop     ds
aaa
xor     dh, [ecx-2]
adc     ebx, [ebp-38h]
add     eax, 5ec75d0bh
outsd
rcr     byte ptr [edx+3070f2dah], cl
xor     dl, [ecx+53h]
mov     ebp, 28b2c804h
mov     ecx, 0b2299d68h
add     [edi], dh
call    near ptr 6d2018f4h
and     byte ptr [ebx], 1ah
popa
mov     ebp, 0d106e253h
sbb     al, 0beh
stos    byte ptr es:[edi]
xor     dl, [edx-693c60a4h]
retf
stc
jmp     dword ptr [ecx+3c1fd1e1h]
xchg    bl, ds:67aa6359h
psubusw mm3, qword ptr [ecx+0]
in      al, 7eh
push    ss
jl      short loc_37ad9932
mov     dh, 34h
std
mov     ch, 5ah
lodsb
ja      short near ptr loc_37ad99ae+1
dec     esi
stosb
xor     al, 45h
dec     esi
ficomp  dword ptr [edi-7d9ce05ah]
sar     byte ptr [esp], cl
int     23h
mov     dh, 83h
xor     eax, 9df5751bh
sbb     dword ptr [eax-7f7ccc38h], 23h
xor     al, 31h
add     ecx, [esi]
pop     eax
les     ebx, [ecx-36a4e10dh]
sbb     [ecx+edi+53da7ce8h], ebp
dec     edi
sub     dh, [eax-2a827610h]
repne out dx, eax
outsd
dec     edx
jmp     near ptr 0c3e66812h
lodsd
retf
cmp     [ebx+63h], ebx
dec     byte ptr [eax-0eh]
xchg    eax, ecx
emms
dec     dword ptr [edx+eax*8-4e9259e7h]
mov     [ecx-44h], dh
fsubr   qword ptr [edx-58h]
pop     edi
lodsb
push    0fffffff2h
fistp   dword ptr [ebp+ecx+609fee4h]
pop     esp
add     eax, 0b552feffh
push    2259b940h
add     eax, 119ff3cch
push    esi
jz      short loc_37ada229
xlat
rcr     dword ptr [ebx+ebx*2], cl
inc     edi
sub     esp, gs:[ebx-605eabdbh]
add     esp, [ebx]
dec     edx
and     eax, [ebx+18h]
sub     byte ptr [ebx], 95h
jbe     short loc_37ada1b3
mov     ebx, ebp
push    small 0cbbfh
pushf
idiv    edx
mov     [ebp-72h], ecx
mov     ebx, eax
pop     ss
outsd
mov     ebp, [edi+1ah]
mov     ebp, 5b596c18h
retn
mov     ds:0b9f50ef6h, al
aad     3
retn
add     dword ptr [esi], 0b7f8a559h
mov     ch, 0b3h
dec     eax
sbb     [ecx-50h], ebp
inc     edi
xor     al, 84h
out     0a2h, al
aad     3dh
retf    601fh
mov     ebp, [ecx+461d9440h]
fsubr   dword ptr ds:4eb10d7fh
jp      short loc_37adb0da
dec     esp
mov     ecx, 56f013fah
pop     ds
pop     es
xchg    ebx, [ecx+2dh]
mul     dl
and     esp, eax
cmp     [edi], ebp
push    edi
and     al, ah
mov     esp, 52eb36cbh
clc
or      ah, ch
loope   loc_37adb7fc
ror     eax, cl
fldcw   word ptr [ebx-71h]
hlt
add     [esi-5460479h], ecx
or      eax, 0ec3e1cdh
lea     eax, [esi+5ch]
outsd
inc     edi
popf
or      [esi+4fh], bl
out     dx, al
test    eax, 0d2361cbdh
xor     [ecx], dh
xor     eax, 57718411h
rcr     esp, cl
inc     esp
popa
adc     [ecx-34h], al
imul    esp, [edx+ebp*2-67h], 0d169b357h
scasb
cdq
push    eax
xor     eax, 4504fc99h
js      short loc_37adb7ba
retn
xor     eax, 1547a6b0h
lahf
or      [eax], ch
jns     short near ptr loc_37adbbe8+4
sbb     edi, [edi+6f74c26fh]
test    dword ptr [ecx-64898663h], 85800a67h
jmp     near ptr 1fe18c8h
adc     eax, 0c9a23fc5h
imul    dh
add     [eax+58h], esi
retn
add     ch, ah
push    esp
sbb     al, 0edh
scasd
mov     al, 6eh
push    ebx
add     [eax+37h], ecx
mov     bh, 0fdh
call    near ptr 5bbe09a1h
xchg    eax, ecx
mov     eax, esi
lea     esp, [edx+348b8d4ch]
stosb
aaa
push    502522a1h
mov     esi, 981262c6h
sbb     [ebx+ebp*4+73d723cdh], dh
insd
bound   ecx, [esi+ebp*4-3f1345d1h]
inc     edx
ja      short near ptr loc_37add189+2
dec     edx
movsb
inc     edx
aas
aad     37h
inc     esi
xchg    eax, esi
fdiv    st(4), st
inc     esi
sbb     eax, 0aceb2b59h
repne cmp cl, [ebx+19h]
sbb     dh, [ebx-5ch]
mov     edi, 938bf0cah
fld     qword ptr [edx-14h]
dec     esp
push    edx
xchg    eax, ecx
cvtpi2ps xmm5, qword ptr [edx]
insd
std
stosb
arpl    [ebp-6e0c10b5h], cx
dec     ecx
rcr     edi, cl
outsd
mov     al, 84h
mov     [esi+5adbdf1eh], edx
wait
cmpsd
push    edx
lock retn 0bbc8h
jmp     far ptr 0d8ffh:0bf94f06bh
dec     ebx
dec     ebp
ffree   st(6)
cmc
adc     [edi], eax
push    eax
retf
lodsb
jp      short loc_37add78d
rcr     dword ptr ds:0d8b253a4h, 1
daa
sub     eax, 2cb43b8dh
lds     edi, [esi+5546503ah]
jl      short near ptr loc_37add830+1
mov     ecx, 93bd7698h
loop    loc_37add82a
out     0e2h, eax
mov     dh, 78h
lodsd
jb      short near ptr loc_37add82c+2
mov     ch, 0ebh
adc     [edx], ecx
fisub   word ptr [edx+5eh]
inc     ebx
les     ebx, ds:0abbf43e3h
pop     esi
jnz     short near ptr loc_37add895+1
test    [esi], bl
sbb     [edi+75h], esi
xchg    eax, edx
push    ds
inc     ecx
and     eax, 4999087h
sub     [ecx-5dh], eax
xchg    edx, edx
mov     [edi+5c8b8584h], al
ja      short loc_37add802
cmp     bh, bh
inc     esp
std
aaa
sub     eax, 77d7e3ffh
sbb     [ebx], dh
fmul    st, st
inc     edi
xchg    eax, esp
inc     ebx
inc     ebx
lodsb
imul    edi, ds:26aba2h, 1ch
mov     esp, 0d52ee3b5h
call    far ptr 1afah:0c8ac40cbh
xor     edi, ecx
in      eax, 0d6h
loope   loc_37add900
out     dx, eax
ror     dword ptr [eax+0eac70e4h], cl
mov     eax, ds:766604a1h
sub     edx, [ecx]
mov     byte ptr [ecx], 0cbh
daa
and     al, 4eh
mov     dh, 0f2h
mov     ah, 0b0h
in      eax, dx
add     [ecx], ecx
mov     cl, [eax+eax*2-6ch]
rep sbb [edi+ebx*2], edi
or      al, 5bh
or      al, 80h
and     eax, 0aea5d779h
mov     bl, [eax]
jnp     short loc_37add83b
fsub    st(4), st
dec     edx
movsb
aam     6fh
mov     al, 15h
cmp     [ecx+eax*8-261e27aah], al
xchg    eax, esi
pop     ebp
pop     edx
and     [ebp-524e5507h], ebx
mov     eax, ds:3b3b61f5h
inc     edx
and     byte ptr [esi], 0bch
sbb     [esi], ebx
sbb     eax, eax
mov     al, 68h
loopne  loc_37add91a
inc     esi
or      ecx, ebx
and     al, [esi-70h]
fmul    qword ptr [ecx-65994f8h]
inc     esi
adc     dword ptr gs:[ebp+ebx*2+39313fffh], 46h
xchg    ecx, ds:9d5ab60bh
loope   loc_37add906
inc     esp
test    eax, 9a81dfd2h
cmpsd
aaa
stosb
xor     [eax-39h], dh
sbb     ecx, [ecx]
std
mov     eax, 3fcbe3a7h
jo      short loc_37add902
inc     ebp
sbb     [ecx+eax*2+5dh], ebx
loop    loc_37add89d
rep push ss
push    ebx
add     eax, 0ba4cef38h
cmovle  ebp, edi
push    ecx
jno     short loc_37add977
cmp     eax, ecx
aad     23h
out     81h, eax
aad     0d2h
or      ds:3e402633h, edi
inc     ebx
in      eax, 34h
popa
fimul   word ptr [eax-30h]
daa
pop     es
mov     cl, [ecx+eax*2+17f369e7h]
out     24h, al
sub     ah, dl
mul     byte ptr [edx+ecx*4+9]
leave
push    esi
xlat
ficom   dword ptr [eax+43h]
push    edi
cmpsb
in      eax, 9eh
mov     bl, 5dh
add     eax, edi
inc     edi
retn    0b166h
sub     eax, 4e766d83h
jno     short near ptr loc_37add93d+3
insd
xchg    eax, esp
mov     eax, ds:77de9b8ah
cmpsd
jns     short near ptr loc_37add91a+3
and     bh, bh
xchg    eax, edx
or      eax, 4960d69dh
dec     eax
xchg    eax, esp
retf
retf
sbb     eax, 51430434h
lea     edx, [edi]
fcom    st(6)
int     3
jmp     fword ptr [edi-48ae6b62h]
retn
retn
push    ebp
mov     ebp, esp
sub     esp, 18h
lea     eax, [ebp-18h]
push    eax
call    ds:getlocaltime
lea     eax, [ebp-8]
push    eax
lea     eax, [ebp-18h]
push    eax
call    ds:systemtimetofiletime
add     dword ptr [ebp-8], 0b2d05e00h
lea     eax, [ebp-18h]
push    eax
adc     dword ptr [ebp-4], 0
lea     eax, [ebp-8]
push    eax
call    ds:filetimetosystemtime
movzx   eax, word ptr [ebp-0eh]
push    eax
movzx   eax, word ptr [ebp-10h]
push    eax
movzx   eax, word ptr [ebp-12h]
push    eax
movzx   eax, word ptr [ebp-16h]
push    eax
movzx   eax, word ptr [ebp-18h]
push    eax
push    offset dword_37b71ab8
push    dword ptr [ebp+8]
call    loc_37adbbe8
mov     eax, [ebp+8]
add     esp, 1ch
mov     esp, ebp
pop     ebp
retn
push    238h
mov     eax, [ebp-10h]
push    eax
call    sub_37ab1b25
add     esp, 8
retn
jmp     ___cxxframehandler3
jmp     ___cxxframehandler3
mov     eax, offset dword_37b0539c
jmp     ___cxxframehandler3
mov     eax, offset stru_37b053c8
jmp     ___cxxframehandler3
mov     eax, offset dword_37b05428
jmp     ___cxxframehandler3
mov     eax, offset dword_37b05580
jmp     ___cxxframehandler3
mov     eax, offset dword_37b055c8
jmp     ___cxxframehandler3
jmp     ___cxxframehandler3
mov     eax, offset dword_37b0578c
jmp     ___cxxframehandler3
jmp     ___cxxframehandler3
mov     eax, offset stru_37b059ec
jmp     ___cxxframehandler3
mov     eax, offset stru_37b05a10
jmp     ___cxxframehandler3
mov     eax, offset stru_37b05a68
jmp     ___cxxframehandler3
movsd
stosd
fld     st(2)
and     bl, ah
xchg    eax, ebx
retn
cmc
mov     ds:5d74f61h, ebx
retn
jmp     ___cxxframehandler3
mov     eax, offset dword_37b05e44
jmp     ___cxxframehandler3
push    dword ptr [ebp+0ch]
push    dword ptr [ebp-10h]
call    @_guard_check_icall_nop@4
pop     ecx
pop     ecx
retn
mov     eax, offset dword_37b06328
jmp     ___cxxframehandler3
jmp     ___cxxframehandler3
jmp     ___cxxframehandler3
lock inc ebp
push    edx
mov     dl, 2dh
lea     ecx, [ebp-24h]
jmp     sub_37a13cd0
cwde
adc     al, 67h
dec     eax
dec     edx
mov     ecx, [ebp-14h]
jmp     unknown_libname_3
mov     eax, offset dword_37b06454
jmp     ___cxxframehandler3
mov     eax, offset stru_37b065a0
jmp     ___cxxframehandler3
mov     eax, offset stru_37b06430
jmp     ___cxxframehandler3
sti
jmp     dword ptr [ebp-2694e475h]
mov     eax, offset stru_37b068b0
jmp     ___cxxframehandler3
mov     eax, offset stru_37b06c88
jmp     ___cxxframehandler3
mov     edx, eax
and     al, 59h
rcl     dword ptr [ebx+77h], 6bh
mov     esp, 0abccf824h
add     ah, [esi-157a8292h]
test    ebp, ebx
push    edx
aas
pop     edi
lea     ecx, [ebp-3ch]
jmp     sub_37a13cd0
mov     eax, offset dword_37b06afc
jmp     ___cxxframehandler3
lea     ecx, [ebp-28h]
jmp     sub_37a13cd0
mov     eax, offset stru_37b06ccc
jmp     ___cxxframehandler3
mov     eax, offset stru_37b070e0
jmp     ___cxxframehandler3
mov     eax, offset stru_37b07138
jmp     ___cxxframehandler3
mov     eax, offset stru_37b071e8
jmp     ___cxxframehandler3
mov     eax, offset stru_37b07190
jmp     ___cxxframehandler3
mov     eax, offset stru_37b07274
jmp     ___cxxframehandler3
push    [ebp+arg_4]
push    [ebp+var_10]
call    @_guard_check_icall_nop@4
pop     ecx
pop     ecx
retn
mov     ecx, [ebp+var_10]
jmp     loc_37aec32a
mov     eax, offset stru_37b0721c
jmp     ___cxxframehandler3
fistp   ds:qword_37b06fa4[eax]
jmp     ___cxxframehandler3
mov     eax, offset stru_37b06ffc
jmp     ___cxxframehandler3
or      al, 60h
retn
cld
sti
jmp     dword ptr [ebx]
pop     ecx
retn
mov     eax, offset stru_37b0738c
jmp     ___cxxframehandler3
mov     eax, offset stru_37b073b8
jmp     ___cxxframehandler3
mov     ah, 0aeh
mul     al
cmp     eax, 0aee14233h
jmp     edi
mov     eax, offset dword_37b07cf8
jmp     ___cxxframehandler3
mov     eax, [ebp+10h]
push    eax
mov     eax, [ebp-18h]
push    eax
call    @_guard_check_icall_nop@4
add     esp, 8
retn
mov     eax, offset stru_37b07c9c
jmp     ___cxxframehandler3
mov     ecx, [ebp-10h]
add     ecx, 10h
jmp     sub_37a13cd0
mov     eax, offset dword_37b07bec
jmp     ___cxxframehandler3
mov     eax, offset dword_37b0752c
jmp     ___cxxframehandler3
mov     eax, offset dword_37b074c4
jmp     ___cxxframehandler3
ficom   dword ptr [edx+49e01cfeh]
cld
dec     esp
lea     ecx, [ebp-188h]
jmp     loc_37aa3760
lea     ecx, [ebp-3ch]
jmp     sub_37a13cd0
mov     eax, offset stru_37b08068
jmp     ___cxxframehandler3
adc     bh, ds:byte_37b0809c[eax]
jmp     ___cxxframehandler3
mov     ecx, [ebp-14h]
jmp     sub_37aa50f7
mov     bh, ds:byte_37b07de0[eax]
jmp     ___cxxframehandler3
leave
js      short loc_37ae0b12
imul    ebx, edx, -60h
sahf
retn
fmul    st, st(5)
add     [edi+esi*2-3bf54c93h], bh
mov     ch, 81h
add     cl, [esi+18c8a28dh]
lahf
lea     ecx, [ebp-74h]
jmp     @_guard_check_icall_nop@4
mov     eax, offset dword_37b080ec
jmp     ___cxxframehandler3
lea     ecx, [ebp+var_28]
jmp     sub_37a9d5d0
mov     eax, offset stru_37b0803c
jmp     ___cxxframehandler3
push    1ch
push    dword ptr [ebp-1ch]
call    sub_37ab1b25
pop     ecx
pop     ecx
retn
mov     eax, offset dword_37b08468
jmp     ___cxxframehandler3
movsd
aam     0a4h
retf
mov     eax, offset dword_37b08d5c
jmp     ___cxxframehandler3
mov     eax, offset dword_37b08c7c
jmp     ___cxxframehandler3
jmp     ___cxxframehandler3
lea     ecx, [ebp-30h]
jmp     sub_37a13cd0
jmp     ___cxxframehandler3
push    0f8h
mov     eax, [ebp-10h]
push    eax
call    sub_37ab1b25
add     esp, 8
retn
mov     eax, offset dword_37b08888
jmp     ___cxxframehandler3
jmp     ___cxxframehandler3
mov     eax, 0deb4e183h
lea     ecx, [ebp-5ch]
jmp     sub_37a13cd0
mov     eax, offset dword_37b090a0
jmp     ___cxxframehandler3
jmp     ___cxxframehandler3
and     al, 80h
mov     eax, offset dword_37b09490
jmp     ___cxxframehandler3
mov     eax, offset dword_37b09550
jmp     ___cxxframehandler3
jmp     ___cxxframehandler3
push    ebp
mov     ebp, esp
sub     esp, 74h
and     dword ptr [ebp-0ch], 0
mov     eax, [ebp+0ch]
mov     [ebp-10h], eax
mov     eax, [ebp-10h]
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
mov     [ebp-18h], eax
mov     eax, [ebp-18h]
mov     [ebp-1ch], eax
mov     eax, [ebp-1ch]
mov     eax, [eax]
mov     [ebp-8], eax
mov     eax, [ebp-10h]
mov     [ebp-20h], eax
mov     eax, [ebp-20h]
mov     [ebp-24h], eax
mov     eax, [ebp-24h]
add     eax, 4
mov     [ebp-28h], eax
mov     eax, [ebp-28h]
mov     eax, [eax]
mov     [ebp-2ch], eax
jmp     short loc_37ae1a6b
mov     eax, [ebp-8]
add     eax, 18h
mov     [ebp-8], eax
mov     eax, [ebp-8]
cmp     eax, [ebp-2ch]
jz      loc_37ae1b7c
mov     eax, [ebp-8]
mov     [ebp-4], eax
mov     eax, [ebp+10h]
mov     [ebp-30h], eax
mov     eax, [ebp-30h]
mov     [ebp-34h], eax
mov     eax, [ebp-34h]
mov     eax, [eax+10h]
mov     [ebp-38h], eax
push    dword ptr [ebp-38h]
mov     ecx, [ebp+10h]
call    sub_37a1ca00
push    eax
mov     ecx, [ebp-4]
call    sub_37a1ca00
push    eax
call    __strnicmp
add     esp, 0ch
test    eax, eax
jnz     loc_37ae1b77
mov     eax, [ebp-4]
mov     [ebp-3ch], eax
mov     eax, [ebp-3ch]
mov     [ebp-40h], eax
mov     eax, [ebp-40h]
mov     eax, [eax+10h]
mov     [ebp-50h], eax
mov     eax, [ebp+10h]
mov     [ebp-44h], eax
mov     eax, [ebp-44h]
mov     [ebp-48h], eax
mov     eax, [ebp-48h]
mov     eax, [eax+10h]
mov     [ebp-4ch], eax
mov     eax, [ebp-4ch]
inc     eax
inc     eax
cmp     [ebp-50h], eax
jbe     loc_37ae1b77
mov     eax, [ebp+10h]
mov     [ebp-54h], eax
mov     eax, [ebp-54h]
mov     [ebp-58h], eax
mov     eax, [ebp-58h]
mov     eax, [eax+10h]
mov     [ebp-5ch], eax
push    dword ptr [ebp-5ch]
mov     ecx, [ebp-4]
call    loc_37a9bffc
movsx   eax, byte ptr [eax]
cmp     eax, 3ah
jnz     short loc_37ae1b77
mov     eax, [ebp+10h]
mov     [ebp-60h], eax
mov     eax, [ebp-60h]
mov     [ebp-64h], eax
mov     eax, [ebp-64h]
mov     eax, [eax+10h]
mov     [ebp-68h], eax
mov     eax, [ebp-68h]
inc     eax
push    eax
mov     ecx, [ebp-4]
call    loc_37a9bffc
movsx   eax, byte ptr [eax]
cmp     eax, 20h
jnz     short loc_37ae1b77
mov     eax, [ebp+10h]
mov     [ebp-6ch], eax
mov     eax, [ebp-6ch]
mov     [ebp-70h], eax
mov     eax, [ebp-70h]
mov     eax, [eax+10h]
mov     [ebp-74h], eax
push    0ffffffffh
mov     eax, [ebp-74h]
inc     eax
inc     eax
push    eax
push    dword ptr [ebp+8]
mov     ecx, [ebp-4]
call    loc_37aa45f0
mov     eax, [ebp-0ch]
or      eax, 1
mov     [ebp-0ch], eax
mov     eax, [ebp+8]
jmp     short loc_37ae1b90
jmp     loc_37ae1a62
mov     ecx, [ebp+8]
call    sub_37a9bb65
mov     eax, [ebp-0ch]
or      eax, 1
mov     [ebp-0ch], eax
mov     eax, [ebp+8]
mov     esp, ebp
pop     ebp
retn
push    edi
cmp     ecx, [edx-2344abf6h]
push    ss
retf
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37ae1e3a
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 9ch
mov     [ebp+var_14], ecx
mov     ecx, [ebp+arg_0]
call    sub_37a1ca00
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
test    eax, eax
jz      short loc_37ae1eab
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 3ah
jz      short loc_37ae1eab
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 40h
jz      short loc_37ae1eab
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 2fh
jz      short loc_37ae1eab
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 3fh
jz      short loc_37ae1eab
mov     eax, [ebp+var_10]
inc     eax
mov     [ebp+var_10], eax
jmp     short loc_37ae1e6c
lea     eax, [ebp+var_19]
push    eax
push    [ebp+var_10]
push    [ebp+var_18]
lea     ecx, [ebp+var_90]
call    sub_37a9e304
mov     [ebp+var_24], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_24]
mov     [ebp+var_28], eax
push    [ebp+var_28]
mov     ecx, [ebp+var_2c]
call    loc_37a9aceb
and     [ebp+var_4], 0
lea     ecx, [ebp+var_90]
call    sub_37a13cd0
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
mov     [ebp+var_30], eax
mov     eax, [ebp+var_10]
inc     eax
mov     [ebp+var_10], eax
cmp     [ebp+var_30], 3ah
jnz     short loc_37ae1f2f
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
mov     [ebp+var_34], eax
mov     eax, [ebp+var_10]
inc     eax
mov     [ebp+var_10], eax
cmp     [ebp+var_34], 2fh
jnz     short loc_37ae1f2f
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
mov     [ebp+var_38], eax
mov     eax, [ebp+var_10]
inc     eax
mov     [ebp+var_10], eax
cmp     [ebp+var_38], 2fh
jz      short loc_37ae1f36
xor     al, al
jmp     loc_37ae2189
mov     eax, [ebp+var_10]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
test    eax, eax
jz      short loc_37ae1f7b
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 3ah
jz      short loc_37ae1f7b
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 40h
jz      short loc_37ae1f7b
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 2fh
jz      short loc_37ae1f7b
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 3fh
jz      short loc_37ae1f7b
mov     eax, [ebp+var_10]
inc     eax
mov     [ebp+var_10], eax
jmp     short loc_37ae1f3c
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 40h
jnz     short loc_37ae1f8d
xor     al, al
jmp     loc_37ae2189
lea     eax, [ebp+var_1a]
push    eax
push    [ebp+var_10]
push    [ebp+var_18]
lea     ecx, [ebp+var_a8]
call    sub_37a9e304
mov     [ebp+var_3c], eax
mov     eax, [ebp+var_14]
add     eax, 18h
mov     [ebp+var_44], eax
mov     eax, [ebp+var_3c]
mov     [ebp+var_40], eax
push    [ebp+var_40]
mov     ecx, [ebp+var_44]
call    loc_37a9aceb
mov     [ebp+var_4], 1
lea     ecx, [ebp+var_a8]
call    sub_37a13cd0
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 3ah
jz      short loc_37ae1feb
mov     eax, [ebp+var_14]
mov     ecx, [ebp+arg_4]
mov     [eax+60h], ecx
jmp     short loc_37ae2023
mov     eax, [ebp+var_14]
and     dword ptr [eax+60h], 0
mov     eax, [ebp+var_10]
inc     eax
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
push    eax
call    _isdigit
pop     ecx
test    eax, eax
jz      short loc_37ae2023
mov     eax, [ebp+var_14]
imul    eax, [eax+60h], 0ah
mov     ecx, [ebp+var_10]
movsx   ecx, byte ptr [ecx]
lea     eax, [eax+ecx-30h]
mov     ecx, [ebp+var_14]
mov     [ecx+60h], eax
jmp     short loc_37ae1ff2
mov     eax, [ebp+var_14]
cmp     dword ptr [eax+60h], 0
jz      short loc_37ae204c
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
test    eax, eax
jz      short loc_37ae2053
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 2fh
jz      short loc_37ae2053
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 3fh
jz      short loc_37ae2053
xor     al, al
jmp     loc_37ae2189
mov     eax, [ebp+var_10]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
test    eax, eax
jz      short loc_37ae2077
mov     eax, [ebp+var_10]
movsx   eax, byte ptr [eax]
cmp     eax, 3fh
jz      short loc_37ae2077
mov     eax, [ebp+var_10]
inc     eax
mov     [ebp+var_10], eax
jmp     short loc_37ae2059
mov     eax, [ebp+var_10]
sub     eax, [ebp+var_18]
jz      short loc_37ae20c3
mov     eax, [ebp+var_14]
add     eax, 30h
mov     [ebp+var_20], eax
lea     eax, [ebp+var_54]
push    eax
mov     ecx, [ebp+var_20]
call    sub_37aa5883
mov     eax, [eax]
mov     [ebp+var_48], eax
lea     eax, [ebp+var_58]
push    eax
mov     ecx, [ebp+var_20]
call    sub_37aa57d8
mov     eax, [eax]
mov     [ebp+var_4c], eax
push    [ebp+var_10]
push    [ebp+var_18]
push    [ebp+var_48]
push    [ebp+var_4c]
mov     ecx, [ebp+var_20]
call    sub_37aa4c04
mov     [ebp+var_50], eax
jmp     short loc_37ae20e9
push    offset dword_37b6faf0
call    sub_37a12500
pop     ecx
push    eax
call    sub_37a125a0
pop     ecx
push    eax
push    offset dword_37b6faf0
mov     ecx, [ebp+var_14]
add     ecx, 30h
call    loc_37a13e90
mov     [ebp+var_50], eax
push    [ebp+var_10]
call    sub_37a12500
pop     ecx
push    eax
call    sub_37a125a0
pop     ecx
push    eax
push    [ebp+var_10]
mov     ecx, [ebp+var_14]
add     ecx, 48h
call    loc_37a13e90
push    offset _tolower
lea     eax, [ebp+var_5c]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37aa57d8
push    dword ptr [eax]
lea     eax, [ebp+var_60]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37aa5883
push    dword ptr [eax]
lea     eax, [ebp+var_64]
push    eax
mov     ecx, [ebp+var_14]
call    sub_37aa57d8
push    dword ptr [eax]
lea     eax, [ebp+var_68]
push    eax
call    sub_37aa4c69
add     esp, 14h
push    offset _tolower
lea     eax, [ebp+var_6c]
push    eax
mov     ecx, [ebp+var_14]
add     ecx, 18h
call    sub_37aa57d8
push    dword ptr [eax]
lea     eax, [ebp+var_70]
push    eax
mov     ecx, [ebp+var_14]
add     ecx, 18h
call    sub_37aa5883
push    dword ptr [eax]
lea     eax, [ebp+var_74]
push    eax
mov     ecx, [ebp+var_14]
add     ecx, 18h
call    sub_37aa57d8
push    dword ptr [eax]
lea     eax, [ebp+var_78]
push    eax
call    sub_37aa4c69
add     esp, 14h
mov     al, 1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     [ebp+var_4], ecx
cmp     [ebp+arg_0], 0
jz      short loc_37ae21d1
cmp     [ebp+arg_4], 0
jnz     short loc_37ae21e2
mov     eax, [ebp+var_4]
mov     dword ptr [eax+4], 57h
xor     eax, eax
jmp     loc_37ae234e
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+0f0h], 0
jz      short loc_37ae222d
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_4]
mov     eax, [eax+0f0h]
sub     eax, [ecx+0ech]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_c]
cmp     eax, [ebp+arg_4]
jge     short loc_37ae2213
lea     eax, [ebp+var_c]
mov     [ebp+var_10], eax
jmp     short loc_37ae2219
lea     eax, [ebp+arg_4]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_20], eax
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     eax, [ebp+var_24]
mov     eax, [eax]
mov     [ebp+arg_4], eax
cmp     [ebp+arg_4], 0
jge     short loc_37ae223a
xor     eax, eax
jmp     loc_37ae234e
and     [ebp+var_8], 0
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+0dch], 0
jnz     short loc_37ae2286
cmp     [ebp+arg_8], 0ffffffffh
jz      short loc_37ae2258
mov     eax, [ebp+arg_8]
mov     [ebp+var_14], eax
jmp     short loc_37ae2264
mov     eax, [ebp+var_4]
mov     eax, [eax+0e0h]
mov     [ebp+var_14], eax
push    [ebp+var_14]
push    [ebp+arg_4]
push    [ebp+arg_0]
mov     ecx, [ebp+var_4]
add     ecx, 90h
mov     eax, [ebp+var_4]
mov     eax, [eax+90h]
call    dword ptr [eax]
mov     [ebp+var_8], eax
jmp     short loc_37ae2303
mov     eax, [ebp+var_4]
mov     eax, [eax+0dch]
mov     [ebp+var_18], eax
mov     eax, [ebp+var_18]
cmp     eax, [ebp+arg_4]
jge     short loc_37ae22a2
lea     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
jmp     short loc_37ae22a8
lea     eax, [ebp+arg_4]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_2c]
mov     eax, [eax]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_4]
mov     eax, [eax+0dch]
sub     eax, [ebp+var_8]
mov     ecx, [ebp+var_4]
mov     [ecx+0dch], eax
push    [ebp+var_8]
push    0
mov     ecx, [ebp+var_4]
add     ecx, 0ach
call    loc_37a1ca10
push    eax
push    [ebp+arg_0]
call    _memmove_0
add     esp, 0ch
push    [ebp+var_8]
push    0
mov     ecx, [ebp+var_4]
add     ecx, 0ach
call    near ptr loc_37aa591e+2
cmp     [ebp+var_8], 0
jge     short loc_37ae2324
mov     ecx, [ebp+var_4]
add     ecx, 90h
mov     eax, [ebp+var_4]
mov     eax, [eax+90h]
call    dword ptr [eax+4]
mov     ecx, [ebp+var_4]
mov     [ecx+4], eax
cmp     [ebp+var_8], 0
jle     short loc_37ae234b
mov     eax, [ebp+var_4]
cmp     dword ptr [eax+0f0h], 0
jz      short loc_37ae234b
mov     eax, [ebp+var_4]
mov     eax, [eax+0ech]
add     eax, [ebp+var_8]
mov     ecx, [ebp+var_4]
mov     [ecx+0ech], eax
mov     eax, [ebp+var_8]
mov     esp, ebp
pop     ebp
retn    0ch
pop     esp
movsd
retf
sub     al, 1ch
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset loc_37ae0aeb
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 0a8h
and     dword ptr [ebp-18h], 0
push    offset dword_37b6faf4
push    dword ptr [ebp+0ch]
lea     eax, [ebp-0b4h]
push    eax
call    sub_37aa4862
add     esp, 0ch
mov     [ebp-20h], eax
mov     eax, [ebp-20h]
mov     [ebp-24h], eax
and     dword ptr [ebp-4], 0
push    dword ptr [ebp+10h]
mov     ecx, [ebp-24h]
call    sub_37a9b0cc
mov     [ebp-28h], eax
mov     eax, [ebp-28h]
mov     [ebp-2ch], eax
push    dword ptr [ebp-2ch]
lea     ecx, [ebp-9ch]
call    ??0?$basic_string@du?$char_traits@d@std@@v?$allocator@d@2@@std@@qae@$$qav01@@z
mov     eax, [ebp-18h]
or      eax, 2
mov     [ebp-18h], eax
mov     byte ptr [ebp-4], 3
lea     ecx, [ebp-0b4h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 2
mov     eax, [ebp+8]
mov     [ebp-1ch], eax
mov     eax, [ebp-1ch]
mov     [ebp-30h], eax
mov     eax, [ebp-30h]
mov     [ebp-34h], eax
mov     eax, [ebp-34h]
mov     [ebp-38h], eax
mov     eax, [ebp-38h]
mov     eax, [eax]
mov     [ebp-14h], eax
mov     eax, [ebp-1ch]
mov     [ebp-3ch], eax
mov     eax, [ebp-3ch]
mov     [ebp-40h], eax
mov     eax, [ebp-40h]
add     eax, 4
mov     [ebp-44h], eax
mov     eax, [ebp-44h]
mov     eax, [eax]
mov     [ebp-48h], eax
jmp     short loc_37ae2d0e
mov     eax, [ebp-14h]
add     eax, 18h
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
cmp     eax, [ebp-48h]
jz      loc_37ae2e12
mov     eax, [ebp-14h]
mov     [ebp-10h], eax
mov     eax, [ebp+0ch]
mov     [ebp-4ch], eax
mov     eax, [ebp-4ch]
mov     [ebp-50h], eax
mov     eax, [ebp-50h]
mov     eax, [eax+10h]
mov     [ebp-54h], eax
push    dword ptr [ebp-54h]
mov     ecx, [ebp+0ch]
call    sub_37a1ca00
push    eax
mov     ecx, [ebp-10h]
call    sub_37a1ca00
push    eax
call    __strnicmp
add     esp, 0ch
test    eax, eax
jnz     loc_37ae2e0d
mov     eax, [ebp-10h]
mov     [ebp-58h], eax
mov     eax, [ebp-58h]
mov     [ebp-5ch], eax
mov     eax, [ebp-5ch]
mov     eax, [eax+10h]
mov     [ebp-6ch], eax
mov     eax, [ebp+0ch]
mov     [ebp-60h], eax
mov     eax, [ebp-60h]
mov     [ebp-64h], eax
mov     eax, [ebp-64h]
mov     eax, [eax+10h]
mov     [ebp-68h], eax
mov     eax, [ebp-68h]
inc     eax
inc     eax
cmp     [ebp-6ch], eax
jbe     short loc_37ae2e0d
mov     eax, [ebp+0ch]
mov     [ebp-70h], eax
mov     eax, [ebp-70h]
mov     [ebp-74h], eax
mov     eax, [ebp-74h]
mov     eax, [eax+10h]
mov     [ebp-78h], eax
push    dword ptr [ebp-78h]
mov     ecx, [ebp-10h]
call    loc_37a1ca10
movsx   eax, byte ptr [eax]
cmp     eax, 3ah
jnz     short loc_37ae2e0d
mov     eax, [ebp+0ch]
mov     [ebp-7ch], eax
mov     eax, [ebp-7ch]
mov     [ebp-80h], eax
mov     eax, [ebp-80h]
mov     eax, [eax+10h]
mov     [ebp-84h], eax
mov     eax, [ebp-84h]
inc     eax
push    eax
mov     ecx, [ebp-10h]
call    loc_37a1ca10
movsx   eax, byte ptr [eax]
cmp     eax, 20h
jnz     short loc_37ae2e0d
lea     eax, [ebp-9ch]
push    eax
mov     ecx, [ebp-10h]
call    sub_37a9ad20
mov     dword ptr [ebp-4], 4
lea     ecx, [ebp-9ch]
call    sub_37a13cd0
or      dword ptr [ebp-4], 0ffffffffh
jmp     short loc_37ae2e37
jmp     loc_37ae2d05
lea     eax, [ebp-9ch]
push    eax
mov     ecx, [ebp+8]
call    near ptr sub_37a9a9a4
mov     dword ptr [ebp-4], 5
lea     ecx, [ebp-9ch]
call    sub_37a13cd0
or      dword ptr [ebp-4], 0ffffffffh
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
popa
jbe     short near ptr loc_37ae2e0d+3
cli
cmp     dword ptr [esi-6ah], 1e976bbah
push    ebp
mov     ebp, esp
sub     esp, 190h
movzx   eax, byte_37b69a42
test    eax, eax
jz      short loc_37ae2f48
mov     al, 1
jmp     short loc_37ae2f6e
lea     ecx, [ebp-190h]
push    ecx
push    101h
call    dword_37b71114
test    eax, eax
jnz     short loc_37ae2f6c
mov     byte_37b69a42, 1
mov     al, byte_37b69a42
jmp     short loc_37ae2f6e
xor     al, al
mov     esp, ebp
pop     ebp
retn
mov     eax, dword_37b733dc
mov     ecx, [eax]
mov     [eax], eax
mov     eax, dword_37b733dc
mov     [eax+4], eax
mov     eax, dword_37b733dc
mov     dword_37b733e0, 0
cmp     ecx, eax
jz      short loc_37ae2fce
push    esi
mov     esi, [ecx]
push    7ch
push    ecx
call    sub_37ab1b25
mov     eax, dword_37b733dc
add     esp, 8
mov     ecx, esi
cmp     esi, eax
jnz     short loc_37ae2fb5
pop     esi
push    7ch
push    eax
call    sub_37ab1b25
add     esp, 8
retn
mov     eax, dword_37b733d0
test    eax, eax
jz      short locret_37ae3036
mov     ecx, dword_37b733d8
sub     ecx, eax
and     ecx, 0fffffffch
cmp     ecx, 1000h
jb      short loc_37ae300e
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37ae3037
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
mov     dword_37b733d0, 0
mov     dword_37b733d4, 0
mov     dword_37b733d8, 0
retn
jmp     __invalid_parameter_noinfo_noreturn
mov     ecx, offset dword_37b72010
jmp     unknown_libname_10
mov     ecx, offset byte_37b72104
jmp     ??1_fac_tidy_reg_t@std@@qae@xz
mov     ecx, offset dword_37b720fc
jmp     sub_37a9d5d0
mov     ecx, offset byte_37b72189
jmp     ??1_init_atexit@@qae@xz
mov     ecx, offset byte_37b72188
jmp     unknown_libname_10
mov     ecx, offset dword_37b72454
jmp     loc_37ab15e6
adc     al, [esi]
or      eax, 3f674083h
dec     edx
adc     [ebp-75h], esi
or      eax, offset dword_37b7312c
test    ecx, ecx
jnz     ?_decref@_ref_count_base@std@@qaexxz
retn
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_4]
mov     [eax], ecx
mov     edx, [ebp+arg_0]
and     edx, 0ffh
mov     eax, [ebp+arg_0]
and     eax, 0ffh
shl     eax, 8
or      edx, eax
mov     ecx, [ebp+var_4]
mov     [ecx+4], edx
mov     edx, [ebp+var_4]
mov     dword ptr [edx+8], 0
mov     eax, [ebp+var_4]
mov     dword ptr [eax+0ch], 0
cmp     [ebp+arg_4], 0
jz      short loc_37ae310a
mov     ecx, [ebp+var_4]
mov     edx, [ebp+arg_8]
mov     [ecx+0ch], edx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_8]
mov     [eax+8], ecx
mov     edx, [ebp+var_4]
mov     eax, [edx+4]
or      eax, 1000000h
mov     ecx, [ebp+var_4]
mov     [ecx+4], eax
jmp     short loc_37ae311c
cmp     [ebp+arg_8], 0
jz      short loc_37ae311c
mov     edx, [ebp+arg_8]
push    edx
mov     ecx, [ebp+var_4]
call    near ptr sub_37ae50d0
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
sub     esp, 8
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     [eax], ecx
mov     edx, [ebp+var_4]
mov     dword ptr [edx+4], 1000000h
cmp     [ebp+arg_4], 0ffffffffh
jz      short loc_37ae3165
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_4]
mov     [eax+8], ecx
mov     edx, [ebp+var_4]
mov     eax, [ebp+arg_4]
mov     [edx+0ch], eax
jmp     short loc_37ae31a7
mov     ecx, [ebp+var_4]
mov     dword ptr [ecx+8], 0
mov     edx, [ebp+arg_0]
movsx   eax, byte ptr [edx]
mov     [ebp+var_8], eax
mov     ecx, [ebp+arg_0]
add     ecx, 1
mov     [ebp+arg_0], ecx
cmp     [ebp+var_8], 0
jz      short loc_37ae3198
mov     edx, [ebp+var_4]
mov     eax, [edx+8]
add     eax, 1
mov     ecx, [ebp+var_4]
mov     [ecx+8], eax
jmp     short loc_37ae316f
mov     edx, [ebp+var_4]
mov     eax, [edx+8]
add     eax, 1
mov     ecx, [ebp+var_4]
mov     [ecx+0ch], eax
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     dword ptr [eax+4], 0
mov     ecx, [ebp-4]
mov     edx, [ebp+8]
mov     [ecx+8], edx
mov     eax, [ebp-4]
mov     ecx, [ebp+0ch]
mov     [eax+0ch], ecx
mov     edx, [ebp-4]
mov     dword ptr [edx+10h], 0
mov     eax, [ebp-4]
mov     ecx, [ebp+10h]
mov     [eax+14h], ecx
mov     edx, [ebp-4]
mov     eax, [ebp+0ch]
mov     [edx+28h], eax
mov     ecx, [ebp-4]
mov     dword ptr [ecx+2ch], 0
mov     edx, [ebp-4]
mov     dword ptr [edx+30h], 0
mov     eax, [ebp-4]
mov     dword ptr [eax+34h], 0
xor     ecx, ecx
mov     edx, [ebp-4]
add     edx, 18h
mov     [edx], ecx
mov     [edx+4], ecx
mov     [edx+8], ecx
mov     [edx+0ch], ecx
xor     eax, eax
mov     ecx, [ebp-4]
mov     [ecx], eax
mov     edx, [ebp+8]
and     edx, 800000h
jnz     short loc_37ae323c
mov     eax, [ebp-4]
mov     dword ptr [eax+30h], 10000000h
mov     eax, [ebp-4]
mov     esp, ebp
pop     ebp
retn    0ch
pusha
jz      short loc_37ae3940
cmp     dh, ch
sub     [esi+ecx*8+78d587a2h], ch
sbb     eax, 50f2ca2h
add     [esi+24h], bl
sbb     dword ptr [edi+edx+0bh], 0ffffffb0h
jno     short loc_37ae39c9
sbb     [ecx+ecx*8-67h], dl
aad     13h
adc     [edx-28h], ecx
push    ebx
mov     cl, 56h
lahf
mov     dl, 0cfh
sub     [ecx+77h], dl
das
call    far ptr 14b4h:21c5dba4h
push    esi
mov     cl, 0d8h
call    near ptr 0d9cd6064h
loopne  near ptr loc_37ae397e+1
pop     ss
movsb
jg      short loc_37ae394d
mov     eax, ebx
loopne  near ptr loc_37ae3988+1
jb      short loc_37ae3923
push    es
mov     esi, [ebx]
rcr     byte ptr [ebp-4dh], 1
mov     edx, 56e4e7afh
popf
imul    ebx, [ebx-6fh], -0eh
mov     dh, 51h
test    eax, 8e5c8b61h
out     4eh, al
imul    edi, [edx-3d88349bh], -2dh
xchg    esi, [ecx-6b8b3e55h]
and     eax, 0a401c711h
dec     edx
mov     al, 0abh
aaa
push    ebp
loopne  loc_37ae39c6
popf
call    fword ptr [edx]
add     al, 75h
inc     esi
imul    ebx, [ebp+444d3a71h], -9
loop    loc_37ae3a45
xor     al, 29h
push    eax
sal     ah, 0e6h
cdq
fldenv  byte ptr [edi+edx*8-5]
inc     dword ptr [edx]
jmp     far ptr 960dh:0dc619ae9h
fild    qword ptr [ebx+5ba66970h]
loop    loc_37ae39d2
sub     [edi+8], ebx
pop     ebp
push    edx
out     dx, al
mov     edx, 9c380b5eh
mov     ch, 0f8h
and     al, 86h
sub     al, 9eh
outsd
xor     al, 29h
call    far ptr 86b8h:0c5ac1100h
mov     cx, 283eh
sbb     esi, eax
sti
pop     es
movsb
inc     ebp
adc     al, 0a2h
or      eax, 59c69b81h
retf    0b403h
sar     dword ptr [edx+37h], 61h
outsd
jle     short near ptr loc_37ae3c11+5
adc     esi, ecx
mov     dl, 55h
push    ds
mov     bl, 2
int     3
xor     al, 0e7h
rcr     dword ptr [ecx-2150d2d7h], 1
cmp     byte ptr [ebx+2ch], 0c4h
mov     eax, cs
call    near ptr 7e12bbadh
pop     eax
or      [ebx-70667748h], ebp
cli
ja      short near ptr loc_37ae3c0c+1
fst     dword ptr ds:1430a514h
adc     esp, [ebx]
xchg    eax, ebp
rcl     cl, 1
hlt
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     ecx, [eax+30h]
and     ecx, 0ff000000h
jz      short loc_37ae4591
cmp     dword ptr [ebp+8], 0
jz      short loc_37ae455c
mov     edx, 4
imul    eax, edx, 0
mov     ecx, [ebp+8]
mov     edx, [ecx+eax]
add     edx, 1
mov     eax, 4
imul    ecx, eax, 0
mov     eax, [ebp+8]
mov     [eax+ecx], edx
mov     ecx, [ebp-4]
mov     edx, [ecx+30h]
sub     edx, 1000000h
mov     [ebp-8], edx
mov     eax, [ebp-4]
mov     ecx, [ebp-8]
mov     [eax+30h], ecx
mov     edx, [ebp-8]
and     edx, 0ff000000h
shr     edx, 18h
mov     eax, 10h
sub     eax, edx
mov     ecx, [ebp-4]
movzx   eax, byte ptr [ecx+eax+17h]
jmp     short loc_37ae45ff
mov     edx, [ebp-4]
mov     ecx, [edx+28h]
call    sub_37a9b700
mov     [ebp-0ch], eax
mov     eax, [ebp-4]
mov     ecx, [eax+28h]
call    sub_37a9b780
mov     ecx, [ebp-4]
mov     edx, [ecx+2ch]
cmp     edx, [eax]
jb      short loc_37ae45b8
xor     eax, eax
jmp     short loc_37ae45ff
cmp     dword ptr [ebp+8], 0
jz      short loc_37ae45dd
mov     eax, 4
imul    ecx, eax, 0
mov     edx, [ebp+8]
mov     eax, [edx+ecx]
add     eax, 1
mov     ecx, 4
imul    edx, ecx, 0
mov     ecx, [ebp+8]
mov     [ecx+edx], eax
mov     edx, [ebp-4]
mov     eax, [edx+2ch]
mov     ecx, [ebp-0ch]
movzx   edx, byte ptr [ecx+eax]
mov     [ebp-10h], edx
mov     eax, [ebp-4]
mov     ecx, [eax+2ch]
add     ecx, 1
mov     edx, [ebp-4]
mov     [edx+2ch], ecx
mov     eax, [ebp-10h]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     eax, [ebp+18h]
add     eax, 2000h
mov     [ebp-4], eax
mov     ecx, [ebp-4]
push    ecx
call    _malloc
add     esp, 4
mov     [ebp-0ch], eax
lea     edx, [ebp-4]
push    edx
mov     eax, [ebp-0ch]
push    eax
mov     ecx, [ebp+14h]
push    ecx
mov     edx, [ebp+10h]
push    edx
call    sub_37ae4c30
add     esp, 10h
mov     [ebp-10h], eax
cmp     dword ptr [ebp-10h], 0
jl      short loc_37ae472c
mov     eax, [ebp+8]
mov     ecx, [eax+28h]
mov     [ebp-8], ecx
mov     edx, [ebp-4]
push    edx
mov     ecx, [ebp-8]
call    near ptr sub_37ae50d0
mov     ecx, [ebp-8]
call    sub_37a9b780
mov     ecx, [ebp-4]
mov     [eax], ecx
mov     edx, [ebp-4]
push    edx
mov     eax, [ebp-0ch]
push    eax
mov     ecx, [ebp-8]
call    sub_37a9b700
push    eax
call    _memmove_0
add     esp, 0ch
mov     ecx, [ebp-0ch]
push    ecx
call    j___free_base
add     esp, 4
cmp     dword ptr [ebp-10h], 0
jge     short loc_37ae4743
or      eax, 0ffffffffh
jmp     short loc_37ae4745
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, 40040h
call    __alloca_probe
mov     eax, [ebp+8]
mov     [ebp-8], eax
mov     ecx, [ebp-8]
add     ecx, [ebp+0ch]
mov     [ebp-1ch], ecx
mov     edx, [ebp+10h]
mov     [ebp-4], edx
cmp     dword ptr [ebp+14h], 0
jz      short loc_37ae4785
mov     eax, [ebp+14h]
mov     ecx, [ebp-4]
add     ecx, [eax]
mov     [ebp-28h], ecx
jmp     short loc_37ae478c
mov     dword ptr [ebp-28h], 0
mov     edx, [ebp-28h]
mov     [ebp-24h], edx
cmp     dword ptr [ebp+14h], 0
jnz     short loc_37ae47a2
mov     eax, 0fffffffeh
jmp     loc_37ae4c26
cmp     dword ptr [ebp+8], 0
jnz     short loc_37ae47c8
cmp     dword ptr [ebp+0ch], 0
jz      short loc_37ae47b8
mov     eax, 0fffffffeh
jmp     loc_37ae4c26
mov     eax, [ebp+14h]
mov     dword ptr [eax], 0
xor     eax, eax
jmp     loc_37ae4c26
cmp     dword ptr [ebp+10h], 0
jnz     short loc_37ae47f7
cmp     dword ptr [ebp+14h], 0
jz      short loc_37ae47de
mov     eax, 0fffffffeh
jmp     loc_37ae4c26
mov     ecx, [ebp+14h]
push    ecx
mov     edx, [ebp+0ch]
push    edx
mov     eax, [ebp+8]
push    eax
call    loc_37ae4e80
add     esp, 0ch
jmp     loc_37ae4c26
push    40000h
push    0
lea     ecx, [ebp-40040h]
push    ecx
call    _memset
add     esp, 0ch
mov     dword ptr [ebp-0ch], 0
mov     edx, [ebp-4]
add     edx, 1
mov     [ebp-4], edx
mov     eax, 1
imul    ecx, eax, 0
mov     edx, [ebp-8]
movzx   eax, byte ptr [edx+ecx]
shl     eax, 8
mov     ecx, 1
shl     ecx, 0
mov     edx, [ebp-8]
movzx   ecx, byte ptr [edx+ecx]
or      eax, ecx
mov     [ebp-14h], eax
mov     edx, [ebp-8]
add     edx, 2
cmp     edx, [ebp-1ch]
jnb     loc_37ae4b7c
mov     eax, [ebp-14h]
shl     eax, 8
mov     ecx, 1
shl     ecx, 1
mov     edx, [ebp-8]
movzx   ecx, byte ptr [edx+ecx]
or      eax, ecx
mov     [ebp-14h], eax
mov     edx, [ebp-14h]
shr     edx, 8
sub     edx, [ebp-14h]
and     edx, 0ffffh
lea     eax, [ebp+edx*4-40040h]
mov     [ebp-2ch], eax
mov     ecx, [ebp-2ch]
mov     edx, [ecx]
mov     [ebp-18h], edx
mov     eax, [ebp-2ch]
mov     ecx, [ebp-8]
mov     [eax], ecx
mov     edx, [ebp-18h]
cmp     edx, [ebp-8]
jnb     loc_37ae4b18
mov     eax, [ebp-8]
sub     eax, [ebp-18h]
sub     eax, 1
mov     [ebp-20h], eax
cmp     dword ptr [ebp-20h], 2000h
jnb     loc_37ae4b18
mov     ecx, [ebp-8]
add     ecx, 4
cmp     ecx, [ebp-1ch]
jnb     loc_37ae4b18
mov     edx, [ebp-18h]
cmp     edx, [ebp+8]
jbe     loc_37ae4b18
mov     eax, 1
imul    ecx, eax, 0
mov     edx, [ebp-18h]
movzx   eax, byte ptr [edx+ecx]
mov     ecx, 1
imul    edx, ecx, 0
mov     ecx, [ebp-8]
movzx   edx, byte ptr [ecx+edx]
cmp     eax, edx
jnz     loc_37ae4b18
mov     eax, 1
shl     eax, 0
mov     ecx, [ebp-18h]
movzx   edx, byte ptr [ecx+eax]
mov     eax, 1
shl     eax, 0
mov     ecx, [ebp-8]
movzx   eax, byte ptr [ecx+eax]
cmp     edx, eax
jnz     loc_37ae4b18
mov     ecx, 1
shl     ecx, 1
mov     edx, [ebp-18h]
movzx   eax, byte ptr [edx+ecx]
mov     ecx, 1
shl     ecx, 1
mov     edx, [ebp-8]
movzx   ecx, byte ptr [edx+ecx]
cmp     eax, ecx
jnz     loc_37ae4b18
mov     dword ptr [ebp-10h], 3
mov     edx, [ebp-1ch]
sub     edx, [ebp-8]
sub     edx, 2
cmp     edx, 108h
jle     short loc_37ae4965
mov     dword ptr [ebp-30h], 108h
jmp     short loc_37ae4971
mov     eax, [ebp-1ch]
sub     eax, [ebp-8]
sub     eax, 2
mov     [ebp-30h], eax
mov     ecx, [ebp-30h]
mov     [ebp-40h], ecx
cmp     dword ptr [ebp-0ch], 0
jnz     short loc_37ae4986
mov     dword ptr [ebp-34h], 1
jmp     short loc_37ae498d
mov     dword ptr [ebp-34h], 0
mov     edx, [ebp-4]
sub     edx, [ebp-34h]
add     edx, 4
cmp     edx, [ebp-24h]
jb      short loc_37ae49a5
mov     eax, 0fffffffch
jmp     loc_37ae4c26
mov     eax, [ebp-0ch]
sub     eax, 1
mov     ecx, [ebp-0ch]
neg     ecx
mov     edx, [ebp-4]
mov     [edx+ecx-1], al
cmp     dword ptr [ebp-0ch], 0
jnz     short loc_37ae49c6
mov     dword ptr [ebp-38h], 1
jmp     short loc_37ae49cd
mov     dword ptr [ebp-38h], 0
mov     eax, [ebp-4]
sub     eax, [ebp-38h]
mov     [ebp-4], eax
mov     ecx, [ebp-10h]
cmp     ecx, [ebp-40h]
jnb     short loc_37ae49ff
mov     edx, [ebp-18h]
add     edx, [ebp-10h]
movzx   eax, byte ptr [edx]
mov     ecx, [ebp-8]
add     ecx, [ebp-10h]
movzx   edx, byte ptr [ecx]
cmp     eax, edx
jnz     short loc_37ae49ff
mov     eax, [ebp-10h]
add     eax, 1
mov     [ebp-10h], eax
jmp     short loc_37ae49d6
mov     ecx, [ebp-10h]
sub     ecx, 2
mov     [ebp-10h], ecx
cmp     dword ptr [ebp-10h], 7
jnb     short loc_37ae4a3d
mov     edx, [ebp-20h]
shr     edx, 8
mov     eax, [ebp-10h]
shl     eax, 5
add     edx, eax
mov     ecx, [ebp-4]
mov     [ecx], dl
mov     edx, [ebp-4]
add     edx, 1
mov     [ebp-4], edx
mov     eax, [ebp-4]
mov     cl, [ebp-20h]
mov     [eax], cl
mov     edx, [ebp-4]
add     edx, 1
mov     [ebp-4], edx
jmp     short loc_37ae4a7f
mov     eax, [ebp-20h]
shr     eax, 8
movzx   ecx, al
add     ecx, 0e0h
mov     edx, [ebp-4]
mov     [edx], cl
mov     eax, [ebp-4]
add     eax, 1
mov     [ebp-4], eax
mov     ecx, [ebp-10h]
sub     ecx, 7
mov     edx, [ebp-4]
mov     [edx], cl
mov     eax, [ebp-4]
add     eax, 1
mov     [ebp-4], eax
mov     ecx, [ebp-4]
mov     dl, [ebp-20h]
mov     [ecx], dl
mov     eax, [ebp-4]
add     eax, 1
mov     [ebp-4], eax
mov     dword ptr [ebp-0ch], 0
mov     ecx, [ebp-4]
add     ecx, 1
mov     [ebp-4], ecx
mov     edx, [ebp-10h]
mov     eax, [ebp-8]
lea     ecx, [eax+edx+1]
mov     [ebp-8], ecx
mov     edx, [ebp-8]
add     edx, 3
cmp     edx, [ebp-1ch]
jb      short loc_37ae4ab5
mov     eax, [ebp-8]
add     eax, 1
mov     [ebp-8], eax
jmp     loc_37ae4b7c
mov     ecx, 1
imul    edx, ecx, 0
mov     eax, [ebp-8]
movzx   ecx, byte ptr [eax+edx]
shl     ecx, 8
mov     edx, 1
shl     edx, 0
mov     eax, [ebp-8]
movzx   edx, byte ptr [eax+edx]
or      ecx, edx
mov     [ebp-14h], ecx
mov     eax, [ebp-14h]
shl     eax, 8
mov     ecx, 1
shl     ecx, 1
mov     edx, [ebp-8]
movzx   ecx, byte ptr [edx+ecx]
or      eax, ecx
mov     [ebp-14h], eax
mov     edx, [ebp-14h]
shr     edx, 8
sub     edx, [ebp-14h]
and     edx, 0ffffh
mov     eax, [ebp-8]
mov     [ebp+edx*4-40040h], eax
mov     ecx, [ebp-8]
add     ecx, 1
mov     [ebp-8], ecx
jmp     short loc_37ae4b77
mov     edx, [ebp-4]
cmp     edx, [ebp-24h]
jb      short loc_37ae4b2a
mov     eax, 0fffffffch
jmp     loc_37ae4c26
mov     eax, [ebp-0ch]
add     eax, 1
mov     [ebp-0ch], eax
mov     ecx, [ebp-4]
mov     edx, [ebp-8]
mov     al, [edx]
mov     [ecx], al
mov     ecx, [ebp-4]
add     ecx, 1
mov     [ebp-4], ecx
mov     edx, [ebp-8]
add     edx, 1
mov     [ebp-8], edx
cmp     dword ptr [ebp-0ch], 20h
jnz     short loc_37ae4b77
mov     eax, [ebp-0ch]
sub     eax, 1
mov     ecx, [ebp-0ch]
neg     ecx
mov     edx, [ebp-4]
mov     [edx+ecx-1], al
mov     dword ptr [ebp-0ch], 0
mov     eax, [ebp-4]
add     eax, 1
mov     [ebp-4], eax
jmp     loc_37ae4843
mov     ecx, [ebp-4]
add     ecx, 3
cmp     ecx, [ebp-24h]
jbe     short loc_37ae4b91
mov     eax, 0fffffffch
jmp     loc_37ae4c26
mov     edx, [ebp-8]
cmp     edx, [ebp-1ch]
jnb     short loc_37ae4be8
mov     eax, [ebp-0ch]
add     eax, 1
mov     [ebp-0ch], eax
mov     ecx, [ebp-4]
mov     edx, [ebp-8]
mov     al, [edx]
mov     [ecx], al
mov     ecx, [ebp-4]
add     ecx, 1
mov     [ebp-4], ecx
mov     edx, [ebp-8]
add     edx, 1
mov     [ebp-8], edx
cmp     dword ptr [ebp-0ch], 20h
jnz     short loc_37ae4be6
mov     eax, [ebp-0ch]
sub     eax, 1
mov     ecx, [ebp-0ch]
neg     ecx
mov     edx, [ebp-4]
mov     [edx+ecx-1], al
mov     dword ptr [ebp-0ch], 0
mov     eax, [ebp-4]
add     eax, 1
mov     [ebp-4], eax
jmp     short loc_37ae4b91
mov     ecx, [ebp-0ch]
sub     ecx, 1
mov     edx, [ebp-0ch]
neg     edx
mov     eax, [ebp-4]
mov     [eax+edx-1], cl
cmp     dword ptr [ebp-0ch], 0
jnz     short loc_37ae4c09
mov     dword ptr [ebp-3ch], 1
jmp     short loc_37ae4c10
mov     dword ptr [ebp-3ch], 0
mov     ecx, [ebp-4]
sub     ecx, [ebp-3ch]
mov     [ebp-4], ecx
mov     edx, [ebp-4]
sub     edx, [ebp+10h]
mov     eax, [ebp+14h]
mov     [eax], edx
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
sub     esp, 2ch
mov     eax, [ebp+arg_0]
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_4]
add     ecx, [ebp+arg_4]
mov     [ebp+var_18], ecx
mov     edx, [ebp+arg_8]
mov     [ebp+var_8], edx
cmp     [ebp+arg_c], 0
jz      short loc_37ae4c5e
mov     eax, [ebp+arg_c]
mov     ecx, [ebp+var_8]
add     ecx, [eax]
mov     [ebp+var_1c], ecx
jmp     short loc_37ae4c65
mov     [ebp+var_1c], 0
mov     edx, [ebp+var_1c]
mov     [ebp+var_20], edx
cmp     [ebp+arg_c], 0
jnz     short loc_37ae4c7b
mov     eax, 0fffffffeh
jmp     loc_37ae4e76
cmp     [ebp+arg_0], 0
jnz     short loc_37ae4ca1
cmp     [ebp+arg_4], 0
jz      short loc_37ae4c91
mov     eax, 0fffffffeh
jmp     loc_37ae4e76
mov     eax, [ebp+arg_c]
mov     dword ptr [eax], 0
xor     eax, eax
jmp     loc_37ae4e76
cmp     [ebp+arg_8], 0
jnz     short loc_37ae4cd0
cmp     [ebp+arg_c], 0
jz      short loc_37ae4cb7
mov     eax, 0fffffffeh
jmp     loc_37ae4e76
mov     ecx, [ebp+arg_c]
push    ecx
mov     edx, [ebp+arg_4]
push    edx
mov     eax, [ebp+arg_0]
push    eax
call    loc_37ae4e80
add     esp, 0ch
jmp     loc_37ae4e76
mov     [ebp+var_28], 0
mov     ecx, [ebp+var_4]
movzx   edx, byte ptr [ecx]
mov     [ebp+var_c], edx
mov     eax, [ebp+var_4]
add     eax, 1
mov     [ebp+var_4], eax
cmp     [ebp+var_c], 20h
jnb     short loc_37ae4d57
mov     ecx, [ebp+var_c]
add     ecx, 1
mov     [ebp+var_c], ecx
mov     edx, [ebp+var_8]
add     edx, [ebp+var_c]
cmp     edx, [ebp+var_20]
jbe     short loc_37ae4d16
mov     eax, [ebp+var_4]
sub     eax, 1
mov     [ebp+var_4], eax
jmp     loc_37ae4e40
jmp     loc_37ae4e40
mov     ecx, [ebp+var_4]
add     ecx, [ebp+var_c]
cmp     ecx, [ebp+var_18]
jbe     short loc_37ae4d2b
mov     eax, 0fffffffdh
jmp     loc_37ae4e76
mov     edx, [ebp+var_8]
mov     eax, [ebp+var_4]
mov     cl, [eax]
mov     [edx], cl
mov     edx, [ebp+var_8]
add     edx, 1
mov     [ebp+var_8], edx
mov     eax, [ebp+var_4]
add     eax, 1
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_c]
sub     ecx, 1
mov     [ebp+var_c], ecx
jnz     short loc_37ae4d2b
jmp     loc_37ae4e25
mov     edx, [ebp+var_c]
shr     edx, 5
mov     [ebp+var_10], edx
mov     eax, [ebp+var_c]
and     eax, 1fh
shl     eax, 8
mov     ecx, [ebp+var_8]
sub     ecx, eax
sub     ecx, 1
mov     [ebp+var_14], ecx
cmp     [ebp+var_10], 7
jnz     short loc_37ae4d8f
mov     edx, [ebp+var_4]
movzx   eax, byte ptr [edx]
add     eax, [ebp+var_10]
mov     [ebp+var_10], eax
mov     ecx, [ebp+var_4]
add     ecx, 1
mov     [ebp+var_4], ecx
mov     edx, [ebp+var_10]
add     edx, 2
mov     [ebp+var_10], edx
mov     eax, [ebp+var_8]
add     eax, [ebp+var_10]
cmp     eax, [ebp+var_20]
jbe     short loc_37ae4dc6
cmp     [ebp+var_10], 9
jb      short loc_37ae4db2
mov     [ebp+var_24], 2
jmp     short loc_37ae4db9
mov     [ebp+var_24], 1
mov     ecx, [ebp+var_4]
sub     ecx, [ebp+var_24]
mov     [ebp+var_4], ecx
jmp     short loc_37ae4e40
jmp     short loc_37ae4e40
mov     edx, [ebp+var_4]
cmp     edx, [ebp+var_18]
jb      short loc_37ae4dd8
mov     eax, 0fffffffdh
jmp     loc_37ae4e76
mov     eax, [ebp+var_4]
movzx   ecx, byte ptr [eax]
mov     edx, [ebp+var_14]
sub     edx, ecx
mov     [ebp+var_14], edx
mov     eax, [ebp+var_4]
add     eax, 1
mov     [ebp+var_4], eax
mov     ecx, [ebp+var_14]
cmp     ecx, [ebp+arg_8]
jnb     short loc_37ae4dfe
mov     eax, 0fffffffdh
jmp     short loc_37ae4e76
mov     edx, [ebp+var_8]
mov     eax, [ebp+var_14]
mov     cl, [eax]
mov     [edx], cl
mov     edx, [ebp+var_8]
add     edx, 1
mov     [ebp+var_8], edx
mov     eax, [ebp+var_14]
add     eax, 1
mov     [ebp+var_14], eax
mov     ecx, [ebp+var_10]
sub     ecx, 1
mov     [ebp+var_10], ecx
jnz     short loc_37ae4dfe
mov     edx, [ebp+var_4]
cmp     edx, [ebp+var_18]
jb      loc_37ae4cd7
mov     eax, [ebp+var_8]
sub     eax, [ebp+arg_8]
mov     ecx, [ebp+arg_c]
mov     [ecx], eax
xor     eax, eax
jmp     short loc_37ae4e76
lea     edx, [ebp+var_28]
push    edx
mov     eax, [ebp+var_4]
sub     eax, [ebp+arg_0]
mov     ecx, [ebp+arg_4]
sub     ecx, eax
push    ecx
mov     edx, [ebp+var_4]
push    edx
call    loc_37ae4e80
add     esp, 0ch
mov     [ebp+var_2c], eax
cmp     [ebp+var_2c], 0
jl      short loc_37ae4e73
mov     eax, [ebp+var_8]
sub     eax, [ebp+arg_8]
add     eax, [ebp+var_28]
mov     ecx, [ebp+arg_c]
mov     [ecx], eax
mov     eax, [ebp+var_2c]
mov     esp, ebp
pop     ebp
retn
pusha
lodsd
test    bl, 0bfh
cmp     al, 4eh
clc
adc     [ebp+esi-19h], ch
sahf
cmp     [ebp-157d3cc5h], edx
ja      short loc_37ae4ea4
pop     ebp
retf    0ff97h
nop
dec     edx
pop     ecx
cmpsb
ror     al, 7
sub     ds:614e5be9h, dh
pop     eax
and     edx, ecx
clc
inc     edx
adc     esi, 0ffffffe2h
outsb
inc     ebp
cmp     eax, [edi+3fh]
jz      short loc_37ae4ebb
inc     esp
in      al, 93h
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
movzx   eax, [ebp+arg_0]
push    eax
mov     ecx, [ebp+var_4]
mov     ecx, [ecx+28h]
call    sub_37a9b750
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 8
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     ecx, [eax+30h]
and     ecx, 0ff000000h
jz      short loc_37ae5041
mov     edx, [ebp-4]
mov     eax, [edx+30h]
sub     eax, 1000000h
mov     [ebp-8], eax
mov     ecx, [ebp-4]
mov     edx, [ebp-8]
mov     [ecx+30h], edx
mov     eax, [ebp-8]
and     eax, 0ff000000h
shr     eax, 18h
mov     ecx, 10h
sub     ecx, eax
mov     edx, [ebp-4]
mov     al, [ebp+8]
mov     [edx+ecx+17h], al
mov     al, 1
jmp     loc_37ae50ca
mov     ecx, [ebp-4]
mov     edx, [ecx+20h]
and     edx, 10000h
jz      short loc_37ae508e
mov     eax, [ebp-4]
cmp     dword ptr [eax+14h], 0
jz      short loc_37ae508e
mov     ecx, [ebp-4]
mov     edx, [ecx+20h]
and     edx, 10000h
push    edx
mov     eax, [ebp-4]
mov     ecx, [eax+14h]
call    sub_37a9b730
mov     ecx, [ebp-4]
mov     edx, [ecx+20h]
push    edx
mov     eax, [ebp-4]
mov     ecx, [eax+14h]
call    loc_37a9b7a0
mov     ecx, [ebp-4]
mov     edx, [ebp-4]
mov     eax, [edx+14h]
mov     [ecx+28h], eax
mov     ecx, [ebp-4]
mov     edx, [ecx+20h]
push    edx
mov     eax, [ebp-4]
mov     ecx, [eax+0ch]
call    sub_37a9b730
mov     ecx, [ebp-4]
mov     edx, [ecx+20h]
push    edx
mov     eax, [ebp-4]
mov     ecx, [eax+0ch]
call    loc_37a9b720
push    eax
mov     ecx, [ebp-4]
mov     ecx, [ecx+0ch]
call    sub_37a9b760
mov     edx, [ebp+8]
push    edx
mov     ecx, [ebp-4]
call    sub_37ae4f50
mov     esp, ebp
pop     ebp
retn    4
jnz     short loc_37ae5082
cmp     ch, [eax]
cmp     al, 45h
sub     eax, [ebx-78fe480fh]
and     al, 0aeh
mov     esi, 2e225120h
cmp     eax, 0e26c07cdh
fisubr  word ptr [ebp+3bh]
idiv    byte ptr [ebx]
lea     edi, [ebx]
xlat
pop     ebp
retf
retf
cmc
push    ebp
lea     ebp, [esp-68h]
sub     esp, 68h
push    0ffffffffh
push    (offset loc_37adfab1+1)
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 60h
and     [ebp+68h+var_8], 0
lea     ecx, [ebp+68h+var_24]
call    loc_37a9bc83
and     [ebp+68h+var_6c], 0
push    3
lea     eax, [ebp+68h+var_8c]
push    eax
call    sub_37add61c
pop     ecx
pop     ecx
mov     [ebp+68h+var_28], eax
mov     eax, [ebp+68h+var_28]
mov     [ebp+68h+var_2c], eax
push    [ebp+68h+var_2c]
lea     ecx, [ebp+68h+var_24]
call    loc_37a9ad49
mov     byte ptr [ebp+68h+var_6c], 1
lea     ecx, [ebp+68h+var_8c]
call    ?_tidy_deallocate@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaexxz
mov     byte ptr [ebp+68h+var_6c], 0
lea     eax, [ebp+68h+var_24]
mov     [ebp+68h+var_30], eax
mov     eax, [ebp+68h+var_30]
mov     [ebp+68h+var_34], eax
mov     eax, [ebp+68h+var_34]
mov     eax, [eax+10h]
mov     [ebp+68h+var_38], eax
cmp     [ebp+68h+var_38], 0
jnz     short loc_37ae5314
push    0
lea     eax, [ebp+68h+var_a4]
push    eax
call    sub_37add61c
pop     ecx
pop     ecx
mov     [ebp+68h+var_3c], eax
push    [ebp+68h+var_3c]
lea     ecx, [ebp+68h+var_24]
call    loc_37a9ad49
mov     byte ptr [ebp+68h+var_6c], 2
lea     ecx, [ebp+68h+var_a4]
call    ?_tidy_deallocate@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaexxz
mov     byte ptr [ebp+68h+var_6c], 0
lea     eax, [ebp+68h+var_24]
mov     [ebp+68h+var_40], eax
mov     eax, [ebp+68h+var_40]
mov     [ebp+68h+var_44], eax
mov     eax, [ebp+68h+var_44]
mov     eax, [eax+10h]
mov     [ebp+68h+var_48], eax
cmp     [ebp+68h+var_48], 0
jnz     short loc_37ae5371
mov     byte ptr [ebp+68h+var_6c], 3
mov     eax, [ebp+68h+arg_0]
mov     [ebp+68h+var_4c], eax
mov     ecx, [ebp+68h+var_4c]
call    sub_37a9bad9
mov     ecx, [ebp+68h+arg_0]
call    loc_37a9c271
mov     byte ptr [ebp+68h+var_6c], 0
mov     eax, [ebp+68h+var_8]
or      eax, 1
mov     [ebp+68h+var_8], eax
mov     [ebp+68h+var_6c], 4
lea     ecx, [ebp+68h+var_24]
call    ?_tidy_deallocate@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaexxz
or      [ebp+68h+var_6c], 0ffffffffh
mov     eax, [ebp+68h+arg_0]
jmp     loc_37ae549a
lea     ecx, [ebp+68h+var_24]
call    sub_37a9c424
movzx   eax, word ptr [eax]
cmp     eax, 5ch
jz      short loc_37ae538b
push    5ch
lea     ecx, [ebp+68h+var_24]
call    loc_37a9c748
mov     eax, dword_37b6ff08
add     eax, 60h
push    eax
lea     eax, [ebp+68h+var_bc]
push    eax
call    sub_37a9c7f0
pop     ecx
pop     ecx
mov     [ebp+68h+var_50], eax
mov     eax, [ebp+68h+var_50]
mov     [ebp+68h+var_54], eax
mov     byte ptr [ebp+68h+var_6c], 5
push    [ebp+68h+var_54]
lea     ecx, [ebp+68h+var_24]
call    sub_37a9c30f
mov     byte ptr [ebp+68h+var_6c], 6
lea     ecx, [ebp+68h+var_bc]
call    ?_tidy_deallocate@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaexxz
mov     byte ptr [ebp+68h+var_6c], 0
push    5ch
lea     ecx, [ebp+68h+var_24]
call    loc_37a9c748
mov     eax, dword_37b6ff08
add     eax, 48h
push    eax
lea     eax, [ebp+68h+var_d4]
push    eax
call    sub_37a9c7f0
pop     ecx
pop     ecx
mov     [ebp+68h+var_58], eax
mov     eax, [ebp+68h+var_58]
mov     [ebp+68h+var_5c], eax
mov     byte ptr [ebp+68h+var_6c], 7
push    [ebp+68h+var_5c]
lea     ecx, [ebp+68h+var_24]
call    sub_37a9c30f
mov     byte ptr [ebp+68h+var_6c], 8
lea     ecx, [ebp+68h+var_d4]
call    ?_tidy_deallocate@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaexxz
mov     byte ptr [ebp+68h+var_6c], 0
cmp     dword_37b6ff34, 6
jnb     short loc_37ae5465
mov     [ebp+68h+var_4], offset dword_37b6f030
mov     eax, [ebp+68h+var_4]
add     eax, 2
mov     [ebp+68h+var_60], eax
mov     eax, [ebp+68h+var_4]
mov     ax, [eax]
mov     [ebp+68h+var_a], ax
add     [ebp+68h+var_4], 2
cmp     [ebp+68h+var_a], 0
jnz     short loc_37ae5426
mov     eax, [ebp+68h+var_4]
sub     eax, [ebp+68h+var_60]
sar     eax, 1
mov     [ebp+68h+var_64], eax
mov     eax, [ebp+68h+var_64]
mov     [ebp+68h+var_68], eax
push    [ebp+68h+var_68]
call    sub_37a125a0
pop     ecx
push    eax
push    offset dword_37b6f030
lea     ecx, [ebp+68h+var_24]
call    loc_37a9c367
jmp     short loc_37ae546f
push    2eh
lea     ecx, [ebp+68h+var_24]
call    loc_37a9c748
lea     eax, [ebp+68h+var_24]
push    eax
mov     ecx, [ebp+68h+arg_0]
call    loc_37a9bbb6
mov     eax, [ebp+68h+var_8]
or      eax, 1
mov     [ebp+68h+var_8], eax
mov     [ebp+68h+var_6c], 9
lea     ecx, [ebp+68h+var_24]
call    ?_tidy_deallocate@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaexxz
or      [ebp+68h+var_6c], 0ffffffffh
mov     eax, [ebp+68h+arg_0]
mov     ecx, [ebp+68h+var_74]
mov     large fs:0, ecx
add     ebp, 68h
mov     esp, ebp
pop     ebp
retn
retn
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37adfc4b
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 50h
push    dword ptr [ebp+8]
lea     ecx, [ebp-44h]
call    sub_37a9bc13
and     dword ptr [ebp-4], 0
lea     eax, [ebp-5ch]
push    eax
call    sub_37ae526d
adc     eax, offset movefilew
test    eax, eax
jnz     short loc_37ae607a
push    0
mov     ecx, [ebp+8]
call    sub_37a9c465
push    eax
lea     ecx, [ebp-44h]
call    sub_37a9c465
push    eax
call    ds:copyfilew
test    eax, eax
jnz     short loc_37ae607a
mov     dword ptr [ebp-28h], 0ffffffbeh
mov     dword ptr [ebp-4], 4
lea     ecx, [ebp-44h]
call    ?_tidy_deallocate@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaexxz
or      dword ptr [ebp-4], 0ffffffffh
mov     eax, [ebp-28h]
jmp     short loc_37ae6094
and     dword ptr [ebp-2ch], 0
mov     dword ptr [ebp-4], 5
lea     ecx, [ebp-44h]
call    ?_tidy_deallocate@?$basic_string@_wu?$char_traits@_w@std@@v?$allocator@_w@2@@std@@qaexxz
or      dword ptr [ebp-4], 0ffffffffh
mov     eax, [ebp-2ch]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset word_37ae0236
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 10h
mov     [ebp-10h], ecx
mov     eax, [ebp-10h]
mov     ecx, [ebp+8]
mov     [eax], ecx
mov     edx, [ebp-10h]
mov     dword ptr [edx+8], 0
mov     dword ptr [edx+0ch], 0
mov     eax, [ebp-10h]
add     eax, 10h
mov     [ebp-18h], eax
mov     dword ptr [ebp-4], 0
mov     ecx, [ebp-18h]
mov     [ebp-1ch], ecx
mov     edx, [ebp-1ch]
mov     [ebp-14h], edx
mov     eax, [ebp-14h]
mov     dword ptr [eax+10h], 0
mov     ecx, [ebp-14h]
mov     dword ptr [ecx+14h], 0
mov     ecx, [ebp-18h]
call    loc_37a13e70
mov     dword ptr [ebp-4], 1
mov     edx, [ebp-10h]
mov     dword ptr [edx+28h], 0
push    0
mov     ecx, [ebp-10h]
add     ecx, 30h
call    sub_37aec1f7
mov     byte ptr [ebp-4], 2
push    0
mov     ecx, [ebp-10h]
add     ecx, 40h
call    sub_37aec1f7
mov     dword ptr [ebp-4], 0ffffffffh
mov     eax, [ebp-10h]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
push    offset dword_37b6f5ec
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-694h]
call    sub_37aec3cd
mov     ecx, [ebp+7ch]
push    ecx
mov     edx, [ebp+78h]
push    edx
push    offset dword_37b6f608
lea     eax, [ebp-824h]
push    eax
call    loc_37adbbe8
add     esp, 10h
mov     [ebp-48h], eax
mov     ecx, [ebp-48h]
mov     [ebp-4ch], ecx
mov     byte ptr [ebp-4], 15h
mov     edx, [ebp-4ch]
push    edx
lea     ecx, [ebp-6a4h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 16h
lea     eax, [ebp-6a4h]
push    eax
push    offset dword_37b6f5fc
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 15h
lea     ecx, [ebp-6a4h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 17h
lea     ecx, [ebp-824h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    100007ch
lea     ecx, [ebp-6b4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 18h
lea     ecx, [ebp-6b4h]
push    ecx
push    offset dword_37b6f610
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-6b4h]
call    sub_37aec3cd
push    1
lea     ecx, [ebp-6c4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 19h
lea     edx, [ebp-6c4h]
push    edx
push    offset dword_37b6f618
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-6c4h]
call    sub_37aec3cd
push    0
lea     ecx, [ebp-2b4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 1ah
lea     eax, [ebp-2b4h]
push    eax
push    offset dword_37b6f620
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-2b4h]
call    sub_37aec3cd
push    7ch
lea     ecx, [ebp-2c4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 1bh
lea     ecx, [ebp-2c4h]
push    ecx
push    offset dword_37b6f628
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-2c4h]
call    sub_37aec3cd
imul    edx, dword_37b6ff34, 64h
add     edx, dword_37b6ff38
push    edx
lea     ecx, [ebp-2d4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 1ch
lea     eax, [ebp-2d4h]
push    eax
push    offset dword_37b6f630
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-2d4h]
call    sub_37aec3cd
mov     ecx, dword_37b6ff4c
push    ecx
lea     ecx, [ebp-2e4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 1dh
lea     edx, [ebp-2e4h]
push    edx
push    offset dword_37b6f638
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-2e4h]
call    sub_37aec3cd
cmp     dword_37b6ff44, 0
jz      short loc_37ae6769
mov     byte ptr [ebp+57h], 1
jmp     short loc_37ae676d
mov     byte ptr [ebp+57h], 0
movzx   eax, byte ptr [ebp+57h]
push    eax
lea     ecx, [ebp-2f4h]
call    sub_37aec2f7
mov     byte ptr [ebp-4], 1eh
lea     ecx, [ebp-2f4h]
push    ecx
push    offset dword_37b6f648
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-2f4h]
call    sub_37aec3cd
mov     edx, dword_37b6ff50
push    edx
lea     ecx, [ebp-304h]
call    sub_37aec131
mov     byte ptr [ebp-4], 1fh
lea     eax, [ebp-304h]
push    eax
push    offset dword_37b6f64c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-304h]
call    sub_37aec3cd
mov     ecx, dword_37b6ff54
push    ecx
lea     ecx, [ebp-314h]
call    sub_37aec131
mov     byte ptr [ebp-4], 20h
lea     edx, [ebp-314h]
push    edx
push    offset dword_37b6f658
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-314h]
call    sub_37aec3cd
push    0
call    unknown_libname_23
add     esp, 4
push    eax
lea     ecx, [ebp-324h]
call    sub_37aec131
mov     byte ptr [ebp-4], 21h
lea     eax, [ebp-324h]
push    eax
push    offset dword_37b6f664
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-324h]
call    sub_37aec3cd
call    sub_37a14d90
push    eax
lea     ecx, [ebp-334h]
call    sub_37aec19b
mov     byte ptr [ebp-4], 22h
lea     ecx, [ebp-334h]
push    ecx
push    offset dword_37b6f670
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-334h]
call    sub_37aec3cd
call    sub_37aa4080
push    eax
lea     ecx, [ebp-344h]
call    sub_37aec131
mov     byte ptr [ebp-4], 23h
lea     edx, [ebp-344h]
push    edx
push    offset dword_37b6f67c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-344h]
call    sub_37aec3cd
call    sub_37a215f0
push    eax
lea     ecx, [ebp-354h]
call    sub_37aec131
mov     byte ptr [ebp-4], 24h
lea     eax, [ebp-354h]
push    eax
push    offset dword_37b6f688
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-354h]
call    sub_37aec3cd
call    loc_37add144
push    eax
lea     ecx, [ebp-364h]
call    sub_37aec131
mov     byte ptr [ebp-4], 25h
lea     ecx, [ebp-364h]
push    ecx
push    offset dword_37b6f694
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-364h]
call    sub_37aec3cd
call    loc_37aa4430
push    eax
lea     ecx, [ebp-374h]
call    sub_37aec131
mov     byte ptr [ebp-4], 26h
lea     edx, [ebp-374h]
push    edx
push    offset dword_37b6f6a0
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-374h]
call    sub_37aec3cd
call    near ptr loc_37aa443f+1
push    eax
lea     ecx, [ebp-384h]
call    sub_37aec131
mov     byte ptr [ebp-4], 27h
lea     eax, [ebp-384h]
push    eax
push    offset dword_37b6f6a8
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-384h]
call    sub_37aec3cd
push    0
push    100000h
mov     ecx, dword_37b71ddc
push    ecx
mov     edx, dword_37b71dd8
push    edx
call    __aulldiv
push    eax
lea     ecx, [ebp-394h]
call    sub_37aec131
mov     byte ptr [ebp-4], 28h
lea     eax, [ebp-394h]
push    eax
push    offset dword_37b6f6b0
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-394h]
call    sub_37aec3cd
call    sub_37a14d70
movzx   ecx, al
test    ecx, ecx
jz      short loc_37ae6a52
mov     dword ptr [ebp+30h], offset byte_37b6f5d7
jmp     short loc_37ae6a59
mov     dword ptr [ebp+30h], offset dword_37b6f6c4
call    loc_37a14d80
movzx   edx, al
test    edx, edx
jz      short loc_37ae6a6e
mov     dword ptr [ebp+2ch], offset word_37b6f5fa
jmp     short loc_37ae6a75
mov     dword ptr [ebp+2ch], offset dword_37b6f6c8
mov     eax, [ebp+30h]
push    eax
mov     ecx, [ebp+2ch]
push    ecx
call    near ptr loc_37a14d9a+6
push    eax
call    sub_37a14d90
push    eax
push    offset dword_37b6f6cc
lea     edx, [ebp-83ch]
push    edx
call    loc_37adbbe8
add     esp, 18h
mov     [ebp-50h], eax
mov     eax, [ebp-50h]
mov     [ebp-54h], eax
mov     byte ptr [ebp-4], 29h
mov     ecx, [ebp-54h]
push    ecx
lea     ecx, [ebp-3a4h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 2ah
lea     edx, [ebp-3a4h]
push    edx
push    offset dword_37b6f6c0
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 29h
lea     ecx, [ebp-3a4h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 2bh
lea     ecx, [ebp-83ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
mov     eax, dword_37b6ff08
mov     ecx, dword_37b6ff08
mov     eax, [eax+170h]
imul    eax, [ecx+154h]
xor     edx, edx
mov     ecx, 18h
div     ecx
push    eax
lea     ecx, [ebp-3b4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 2ch
lea     edx, [ebp-3b4h]
push    edx
push    offset dword_37b6f6e4
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-3b4h]
call    sub_37aec3cd
mov     eax, dword_37b6ff08
mov     ecx, [eax+174h]
push    ecx
lea     ecx, [ebp-3c4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 2dh
lea     edx, [ebp-3c4h]
push    edx
push    offset dword_37b6f6f0
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-3c4h]
call    sub_37aec3cd
cmp     dword_37b6ff40, 3000h
jb      short loc_37ae6bac
mov     byte ptr [ebp+56h], 1
jmp     short loc_37ae6bb0
mov     byte ptr [ebp+56h], 0
movzx   eax, byte ptr [ebp+56h]
push    eax
lea     ecx, [ebp-3d4h]
call    sub_37aec2f7
mov     byte ptr [ebp-4], 2eh
lea     ecx, [ebp-3d4h]
push    ecx
push    offset dword_37b6f700
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-3d4h]
call    sub_37aec3cd
lea     edx, [ebp-250h]
push    edx
lea     ecx, [ebp-3e4h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 2fh
lea     eax, [ebp-3e4h]
push    eax
push    offset dword_37b6f70c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-3e4h]
call    sub_37aec3cd
call    sub_37ad4d90
push    eax
lea     ecx, [ebp-3f4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 30h
lea     ecx, [ebp-3f4h]
push    ecx
push    offset dword_37b6f714
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-3f4h]
call    sub_37aec3cd
call    sub_37ad4d40
push    eax
lea     ecx, [ebp-404h]
call    sub_37aec131
mov     byte ptr [ebp-4], 31h
lea     edx, [ebp-404h]
push    edx
push    offset dword_37b6f71c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-404h]
call    sub_37aec3cd
cmp     dword ptr [ebp+28h], 0
jle     short loc_37ae6cbb
mov     dword ptr [ebp+24h], 0
jmp     short loc_37ae6cc1
mov     eax, [ebp+28h]
mov     [ebp+24h], eax
mov     ecx, [ebp+24h]
push    ecx
lea     ecx, [ebp-414h]
call    sub_37aec131
mov     byte ptr [ebp-4], 32h
lea     edx, [ebp-414h]
push    edx
push    offset dword_37b6f728
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-414h]
call    sub_37aec3cd
mov     eax, dword_37b6ff10
push    eax
lea     ecx, [ebp-424h]
call    sub_37aec0fe
mov     byte ptr [ebp-4], 33h
lea     ecx, [ebp-424h]
push    ecx
push    offset dword_37b6f734
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-424h]
call    sub_37aec3cd
mov     edx, dword_37b6ff18
mov     eax, dword_37b6ff1c
and     eax, 7fffffffh
push    eax
push    edx
push    offset dword_37b6f754
lea     ecx, [ebp-854h]
push    ecx
call    loc_37adbbe8
add     esp, 10h
mov     [ebp-58h], eax
mov     edx, [ebp-58h]
mov     [ebp-5ch], edx
mov     byte ptr [ebp-4], 34h
mov     eax, [ebp-5ch]
push    eax
lea     ecx, [ebp-434h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 35h
lea     ecx, [ebp-434h]
push    ecx
push    offset dword_37b6f744
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 34h
lea     ecx, [ebp-434h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 36h
lea     ecx, [ebp-854h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f768
lea     ecx, [ebp-73ch]
call    loc_37a13d20
mov     byte ptr [ebp-4], 37h
push    0
lea     edx, [ebp-73ch]
push    edx
mov     ecx, dword_37b6ff08
add     ecx, 0d8h
call    near ptr sub_37adabf9
push    eax
lea     ecx, [ebp-444h]
call    sub_37aec131
mov     byte ptr [ebp-4], 38h
lea     eax, [ebp-444h]
push    eax
push    offset dword_37b6f75c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 37h
lea     ecx, [ebp-444h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 39h
lea     ecx, [ebp-73ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f77c
lea     ecx, [ebp-884h]
call    loc_37a13d20
mov     [ebp-60h], eax
mov     ecx, [ebp-60h]
mov     [ebp-64h], ecx
mov     byte ptr [ebp-4], 3ah
mov     edx, [ebp-64h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-86ch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-68h], eax
mov     ecx, [ebp-68h]
mov     [ebp-6ch], ecx
mov     byte ptr [ebp-4], 3bh
mov     edx, [ebp-6ch]
push    edx
lea     ecx, [ebp-454h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 3ch
lea     eax, [ebp-454h]
push    eax
push    offset dword_37b6f76c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 3bh
lea     ecx, [ebp-454h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 3dh
lea     ecx, [ebp-86ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 3eh
lea     ecx, [ebp-884h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f79c
lea     ecx, [ebp-8b4h]
call    loc_37a13d20
mov     [ebp-70h], eax
mov     ecx, [ebp-70h]
mov     [ebp-74h], ecx
mov     byte ptr [ebp-4], 3fh
mov     edx, [ebp-74h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-89ch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-78h], eax
mov     ecx, [ebp-78h]
mov     [ebp-7ch], ecx
mov     byte ptr [ebp-4], 40h
mov     edx, [ebp-7ch]
push    edx
lea     ecx, [ebp-464h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 41h
lea     eax, [ebp-464h]
push    eax
push    offset dword_37b6f78c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 40h
lea     ecx, [ebp-464h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 42h
lea     ecx, [ebp-89ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 43h
lea     ecx, [ebp-8b4h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f7bc
lea     ecx, [ebp-8e4h]
call    loc_37a13d20
mov     [ebp-80h], eax
mov     ecx, [ebp-80h]
mov     [ebp-84h], ecx
mov     byte ptr [ebp-4], 44h
mov     edx, [ebp-84h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-8cch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-88h], eax
mov     ecx, [ebp-88h]
mov     [ebp-8ch], ecx
mov     byte ptr [ebp-4], 45h
mov     edx, [ebp-8ch]
push    edx
lea     ecx, [ebp-474h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 46h
lea     eax, [ebp-474h]
push    eax
push    offset dword_37b6f7ac
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 45h
lea     ecx, [ebp-474h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 47h
lea     ecx, [ebp-8cch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 48h
lea     ecx, [ebp-8e4h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f7d8
lea     ecx, [ebp-914h]
call    loc_37a13d20
mov     [ebp-90h], eax
mov     ecx, [ebp-90h]
mov     [ebp-94h], ecx
mov     byte ptr [ebp-4], 49h
mov     edx, [ebp-94h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-8fch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-98h], eax
mov     ecx, [ebp-98h]
mov     [ebp-9ch], ecx
mov     byte ptr [ebp-4], 4ah
mov     edx, [ebp-9ch]
push    edx
lea     ecx, [ebp-484h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 4bh
lea     eax, [ebp-484h]
push    eax
push    offset dword_37b6f7cc
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 4ah
lea     ecx, [ebp-484h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 4ch
lea     ecx, [ebp-8fch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 4dh
lea     ecx, [ebp-914h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f7e8
lea     ecx, [ebp-944h]
call    loc_37a13d20
mov     [ebp-0a0h], eax
mov     ecx, [ebp-0a0h]
mov     [ebp-0a4h], ecx
mov     byte ptr [ebp-4], 4eh
mov     edx, [ebp-0a4h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-92ch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-0a8h], eax
mov     ecx, [ebp-0a8h]
mov     [ebp-0ach], ecx
mov     byte ptr [ebp-4], 4fh
mov     edx, [ebp-0ach]
push    edx
lea     ecx, [ebp-494h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 50h
lea     eax, [ebp-494h]
push    eax
push    offset dword_37b6f7dc
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 4fh
lea     ecx, [ebp-494h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 51h
lea     ecx, [ebp-92ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 52h
lea     ecx, [ebp-944h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f7fc
lea     ecx, [ebp-974h]
call    loc_37a13d20
mov     [ebp-0b0h], eax
mov     ecx, [ebp-0b0h]
mov     [ebp-0b4h], ecx
mov     byte ptr [ebp-4], 53h
mov     edx, [ebp-0b4h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-95ch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-0b8h], eax
mov     ecx, [ebp-0b8h]
mov     [ebp-0bch], ecx
mov     byte ptr [ebp-4], 54h
mov     edx, [ebp-0bch]
push    edx
lea     ecx, [ebp-4a4h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 55h
lea     eax, [ebp-4a4h]
push    eax
push    offset dword_37b6f7ec
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 54h
lea     ecx, [ebp-4a4h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 56h
lea     ecx, [ebp-95ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 57h
lea     ecx, [ebp-974h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f818
lea     ecx, [ebp-9a4h]
call    loc_37a13d20
mov     [ebp-0c0h], eax
mov     ecx, [ebp-0c0h]
mov     [ebp-0c4h], ecx
mov     byte ptr [ebp-4], 58h
mov     edx, [ebp-0c4h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-98ch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-0c8h], eax
mov     ecx, [ebp-0c8h]
mov     [ebp-0cch], ecx
mov     byte ptr [ebp-4], 59h
mov     edx, [ebp-0cch]
push    edx
lea     ecx, [ebp-4b4h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 5ah
lea     eax, [ebp-4b4h]
push    eax
push    offset dword_37b6f80c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 59h
lea     ecx, [ebp-4b4h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 5bh
lea     ecx, [ebp-98ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 5ch
lea     ecx, [ebp-9a4h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f830
lea     ecx, [ebp-9d4h]
call    loc_37a13d20
mov     [ebp-0d0h], eax
mov     ecx, [ebp-0d0h]
mov     [ebp-0d4h], ecx
mov     byte ptr [ebp-4], 5dh
mov     edx, [ebp-0d4h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-9bch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-0d8h], eax
mov     ecx, [ebp-0d8h]
mov     [ebp-0dch], ecx
mov     byte ptr [ebp-4], 5eh
mov     edx, [ebp-0dch]
push    edx
lea     ecx, [ebp-4c4h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 5fh
lea     eax, [ebp-4c4h]
push    eax
push    offset dword_37b6f824
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 5eh
lea     ecx, [ebp-4c4h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 60h
lea     ecx, [ebp-9bch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 61h
lea     ecx, [ebp-9d4h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f84c
lea     ecx, [ebp-0a04h]
call    loc_37a13d20
mov     [ebp-0e0h], eax
mov     ecx, [ebp-0e0h]
mov     [ebp-0e4h], ecx
mov     byte ptr [ebp-4], 62h
mov     edx, [ebp-0e4h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-9ech]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-0e8h], eax
mov     ecx, [ebp-0e8h]
mov     [ebp-0ech], ecx
mov     byte ptr [ebp-4], 63h
mov     edx, [ebp-0ech]
push    edx
lea     ecx, [ebp-4d4h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 64h
lea     eax, [ebp-4d4h]
push    eax
push    offset dword_37b6f83c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 63h
lea     ecx, [ebp-4d4h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 65h
lea     ecx, [ebp-9ech]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 66h
lea     ecx, [ebp-0a04h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f868
lea     ecx, [ebp-0a34h]
call    loc_37a13d20
mov     [ebp-0f0h], eax
mov     ecx, [ebp-0f0h]
mov     [ebp-0f4h], ecx
mov     byte ptr [ebp-4], 67h
mov     edx, [ebp-0f4h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-0a1ch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-0f8h], eax
mov     ecx, [ebp-0f8h]
mov     [ebp-0fch], ecx
mov     byte ptr [ebp-4], 68h
mov     edx, [ebp-0fch]
push    edx
lea     ecx, [ebp-4e4h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 69h
lea     eax, [ebp-4e4h]
push    eax
push    offset dword_37b6f85c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 68h
lea     ecx, [ebp-4e4h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 6ah
lea     ecx, [ebp-0a1ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 6bh
lea     ecx, [ebp-0a34h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f878
lea     ecx, [ebp-0a64h]
call    loc_37a13d20
mov     [ebp-100h], eax
mov     ecx, [ebp-100h]
mov     [ebp-104h], ecx
mov     byte ptr [ebp-4], 6ch
mov     edx, [ebp-104h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-0a4ch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-108h], eax
mov     ecx, [ebp-108h]
mov     [ebp-10ch], ecx
mov     byte ptr [ebp-4], 6dh
mov     edx, [ebp-10ch]
push    edx
lea     ecx, [ebp-4f4h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 6eh
lea     eax, [ebp-4f4h]
push    eax
push    offset dword_37b6f874
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 6dh
lea     ecx, [ebp-4f4h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 6fh
lea     ecx, [ebp-0a4ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 70h
lea     ecx, [ebp-0a64h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    2
lea     ecx, [ebp-504h]
call    sub_37aec0fe
mov     byte ptr [ebp-4], 71h
lea     ecx, [ebp-504h]
push    ecx
push    offset dword_37b6f87c
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-504h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+188h]
push    eax
lea     ecx, [ebp-514h]
call    sub_37aec131
mov     byte ptr [ebp-4], 72h
lea     ecx, [ebp-514h]
push    ecx
push    offset dword_37b6f88c
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-514h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+178h]
push    eax
lea     ecx, [ebp-524h]
call    sub_37aec131
mov     byte ptr [ebp-4], 73h
lea     ecx, [ebp-524h]
push    ecx
push    offset dword_37b6f898
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-524h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+17ch]
push    eax
lea     ecx, [ebp-534h]
call    sub_37aec131
mov     byte ptr [ebp-4], 74h
lea     ecx, [ebp-534h]
push    ecx
push    offset dword_37b6f8a8
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-534h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+180h]
push    eax
lea     ecx, [ebp-544h]
call    sub_37aec131
mov     byte ptr [ebp-4], 75h
lea     ecx, [ebp-544h]
push    ecx
push    offset dword_37b6f8bc
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-544h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+184h]
push    eax
lea     ecx, [ebp-554h]
call    sub_37aec131
mov     byte ptr [ebp-4], 76h
lea     ecx, [ebp-554h]
push    ecx
push    offset dword_37b6f8d0
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-554h]
call    sub_37aec3cd
push    offset dword_37b6f8e8
lea     ecx, [ebp-0a94h]
call    loc_37a13d20
mov     [ebp-110h], eax
mov     edx, [ebp-110h]
mov     [ebp-114h], edx
mov     byte ptr [ebp-4], 77h
mov     eax, [ebp-114h]
push    eax
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     ecx, [ebp-0a7ch]
push    ecx
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-118h], eax
mov     edx, [ebp-118h]
mov     [ebp-11ch], edx
mov     byte ptr [ebp-4], 78h
mov     eax, [ebp-11ch]
push    eax
lea     ecx, [ebp-564h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 79h
lea     ecx, [ebp-564h]
push    ecx
push    offset dword_37b6f8dc
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 78h
lea     ecx, [ebp-564h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 7ah
lea     ecx, [ebp-0a7ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 7bh
lea     ecx, [ebp-0a94h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6f8f8
lea     ecx, [ebp-0ac4h]
call    loc_37a13d20
mov     [ebp-120h], eax
mov     edx, [ebp-120h]
mov     [ebp-124h], edx
mov     byte ptr [ebp-4], 7ch
mov     eax, [ebp-124h]
push    eax
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     ecx, [ebp-0aach]
push    ecx
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-128h], eax
mov     edx, [ebp-128h]
mov     [ebp-12ch], edx
mov     byte ptr [ebp-4], 7dh
mov     eax, [ebp-12ch]
push    eax
lea     ecx, [ebp-574h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 7eh
lea     ecx, [ebp-574h]
push    ecx
push    offset dword_37b6f8ec
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 7dh
lea     ecx, [ebp-574h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 7fh
lea     ecx, [ebp-0aach]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 80h
lea     ecx, [ebp-0ac4h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
mov     edx, dword_37b6ff18
mov     eax, dword_37b6ff1c
and     eax, 7fffffffh
push    eax
push    edx
push    offset dword_37b6f914
lea     ecx, [ebp-0adch]
push    ecx
call    loc_37adbbe8
add     esp, 10h
mov     [ebp-130h], eax
mov     edx, [ebp-130h]
mov     [ebp-134h], edx
mov     byte ptr [ebp-4], 81h
mov     eax, [ebp-134h]
push    eax
lea     ecx, [ebp-584h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 82h
lea     ecx, [ebp-584h]
push    ecx
push    offset acompilationid
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 81h
lea     ecx, [ebp-584h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 83h
lea     ecx, [ebp-0adch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
mov     edx, dword_37b6ff08
mov     eax, [edx+154h]
push    eax
lea     ecx, [ebp-594h]
call    sub_37aec131
mov     byte ptr [ebp-4], 84h
lea     ecx, [ebp-594h]
push    ecx
push    offset dword_37b6f91c
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-594h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+158h]
push    eax
lea     ecx, [ebp-5a4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 85h
lea     ecx, [ebp-5a4h]
push    ecx
push    offset dword_37b6f930
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-5a4h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+15ch]
push    eax
lea     ecx, [ebp-5b4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 86h
lea     ecx, [ebp-5b4h]
push    ecx
push    offset dword_37b6f944
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-5b4h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+168h]
push    eax
lea     ecx, [ebp-5c4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 87h
lea     ecx, [ebp-5c4h]
push    ecx
push    offset dword_37b6f950
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-5c4h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+160h]
push    eax
lea     ecx, [ebp-5d4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 88h
lea     ecx, [ebp-5d4h]
push    ecx
push    offset dword_37b6f95c
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-5d4h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+164h]
push    eax
lea     ecx, [ebp-5e4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 89h
lea     ecx, [ebp-5e4h]
push    ecx
push    offset dword_37b6f96c
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-5e4h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
mov     eax, [edx+16ch]
push    eax
lea     ecx, [ebp-5f4h]
call    sub_37aec131
mov     byte ptr [ebp-4], 8ah
lea     ecx, [ebp-5f4h]
push    ecx
push    offset dword_37b6f980
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-5f4h]
call    sub_37aec3cd
mov     edx, dword_37b6ff08
add     edx, 124h
push    edx
lea     ecx, [ebp-604h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 8bh
lea     eax, [ebp-604h]
push    eax
push    offset dword_37b6f990
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-604h]
call    sub_37aec3cd
mov     ecx, dword_37b6ff08
add     ecx, 198h
push    ecx
lea     edx, [ebp-0af4h]
push    edx
call    loc_37adb768
add     esp, 8
mov     [ebp-138h], eax
mov     eax, [ebp-138h]
mov     [ebp-13ch], eax
mov     byte ptr [ebp-4], 8ch
mov     ecx, [ebp-13ch]
push    ecx
lea     ecx, [ebp-614h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 8dh
lea     edx, [ebp-614h]
push    edx
push    offset dword_37b6f99c
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 8ch
lea     ecx, [ebp-614h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 8eh
lea     ecx, [ebp-0af4h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
mov     eax, dword_37b6ff08
add     eax, 18ch
push    eax
lea     ecx, [ebp-0b0ch]
push    ecx
call    loc_37adb768
add     esp, 8
mov     [ebp-140h], eax
mov     edx, [ebp-140h]
mov     [ebp-144h], edx
mov     byte ptr [ebp-4], 8fh
mov     eax, [ebp-144h]
push    eax
lea     ecx, [ebp-624h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 90h
lea     ecx, [ebp-624h]
push    ecx
push    offset dword_37b6f9b0
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 8fh
lea     ecx, [ebp-624h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 91h
lea     ecx, [ebp-0b0ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
mov     edx, dword_37b6ff08
add     edx, 1a4h
push    edx
lea     eax, [ebp-0b24h]
push    eax
call    loc_37adb768
add     esp, 8
mov     [ebp-148h], eax
mov     ecx, [ebp-148h]
mov     [ebp-14ch], ecx
mov     byte ptr [ebp-4], 92h
mov     edx, [ebp-14ch]
push    edx
lea     ecx, [ebp-634h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 93h
lea     eax, [ebp-634h]
push    eax
push    offset dword_37b6f9c0
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 92h
lea     ecx, [ebp-634h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 94h
lea     ecx, [ebp-0b24h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
mov     ecx, [ebp+74h]
add     ecx, 30h
call    near ptr sub_37aed495
movzx   ecx, al
test    ecx, ecx
jz      short loc_37ae7dcf
mov     edx, [ebp+74h]
add     edx, 30h
push    edx
mov     eax, [ebp+60h]
push    eax
call    sub_37ae9510
add     esp, 8
mov     ecx, dword_37b6ff08
add     ecx, 13ch
mov     [ebp-150h], ecx
mov     edx, [ebp-150h]
mov     [ebp-154h], edx
mov     eax, [ebp-154h]
mov     [ebp-158h], eax
mov     ecx, [ebp-158h]
mov     edx, [ecx+10h]
mov     [ebp-15ch], edx
cmp     dword ptr [ebp-15ch], 0
jz      loc_37ae7f96
push    7
lea     ecx, [ebp-644h]
call    sub_37aec1f7
mov     byte ptr [ebp-4], 96h
lea     eax, [ebp-6dch]
mov     [ebp-160h], eax
mov     ecx, [ebp-160h]
mov     [ebp+20h], ecx
mov     edx, [ebp+20h]
mov     dword ptr [edx+10h], 0
mov     eax, [ebp+20h]
mov     dword ptr [eax+14h], 0
lea     ecx, [ebp-6dch]
call    loc_37a13e70
mov     byte ptr [ebp-4], 95h
lea     ecx, [ebp-6dch]
mov     [ebp-164h], ecx
mov     byte ptr [ebp-4], 97h
mov     edx, [ebp-164h]
push    edx
lea     eax, [ebp-644h]
push    eax
mov     ecx, dword_37b6ff08
add     ecx, 13ch
push    ecx
lea     edx, [ebp-754h]
push    edx
call    loc_37ad3757
add     esp, 10h
mov     byte ptr [ebp-4], 9ah
lea     ecx, [ebp-6dch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 99h
push    0
lea     ecx, [ebp-1f0h]
call    sub_37aec1f7
mov     byte ptr [ebp-4], 9bh
lea     ecx, [ebp-0cfch]
call    loc_37ae9650
mov     [ebp-168h], eax
mov     eax, [ebp-168h]
mov     [ebp-16ch], eax
mov     byte ptr [ebp-4], 9ch
mov     ecx, [ebp+5ch]
or      ecx, 1
mov     [ebp+5ch], ecx
push    0
lea     edx, [ebp-1f0h]
push    edx
lea     eax, [ebp-754h]
push    eax
mov     ecx, [ebp-16ch]
call    sub_37aea840
movzx   ecx, al
test    ecx, ecx
jz      short loc_37ae7f23
lea     ecx, [ebp-1f0h]
call    near ptr sub_37aed495
movzx   edx, al
test    edx, edx
jz      short loc_37ae7f23
mov     dword ptr [ebp+1ch], 1
jmp     short loc_37ae7f2a
mov     dword ptr [ebp+1ch], 0
mov     al, [ebp+1ch]
mov     [ebp+4fh], al
mov     dword ptr [ebp-4], 9bh
mov     ecx, [ebp+5ch]
and     ecx, 1
jz      short loc_37ae7f4e
and     dword ptr [ebp+5ch], 0fffffffeh
lea     ecx, [ebp-0cfch]
call    sub_37a9ac99
movzx   edx, byte ptr [ebp+4fh]
test    edx, edx
jz      short loc_37ae7f69
lea     eax, [ebp-1f0h]
push    eax
mov     ecx, [ebp+60h]
push    ecx
call    sub_37ae9510
add     esp, 8
mov     byte ptr [ebp-4], 99h
lea     ecx, [ebp-1f0h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 9dh
lea     ecx, [ebp-754h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-644h]
call    sub_37aec3cd
mov     edx, [ebp+74h]
mov     [ebp+18h], edx
mov     eax, [ebp+18h]
mov     ecx, [ebp+18h]
mov     edx, [eax+8]
or      edx, [ecx+0ch]
jz      short loc_37ae7fb0
mov     byte ptr [ebp+55h], 0
jmp     short loc_37ae7fb4
mov     byte ptr [ebp+55h], 1
mov     al, [ebp+55h]
mov     [ebp+4eh], al
push    offset dword_37b6f9d0
mov     ecx, [ebp+60h]
call    sub_37aed45f
movzx   ecx, al
test    ecx, ecx
jnz     short loc_37ae800c
movzx   edx, byte ptr [ebp+4eh]
push    edx
lea     ecx, [ebp-654h]
call    sub_37aec2f7
mov     byte ptr [ebp-4], 9eh
lea     eax, [ebp-654h]
push    eax
push    offset dword_37b6f9d8
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-654h]
call    sub_37aec3cd
mov     ecx, [ebp+74h]
cmp     dword ptr [ecx], 1
jz      short loc_37ae8028
mov     edx, [ebp+74h]
cmp     dword ptr [edx], 2
jz      short loc_37ae8028
mov     eax, [ebp+74h]
cmp     dword ptr [eax], 4
jnz     loc_37ae8280
push    offset dword_37b6f9e0
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     [ebp+40h], eax
push    offset dword_37b6fa00
lea     ecx, [ebp-0b54h]
call    loc_37a13d20
mov     [ebp-170h], eax
mov     ecx, [ebp-170h]
mov     [ebp-174h], ecx
mov     byte ptr [ebp-4], 9fh
mov     edx, [ebp-174h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-0b3ch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-178h], eax
mov     ecx, [ebp-178h]
mov     [ebp-17ch], ecx
mov     byte ptr [ebp-4], 0a0h
mov     edx, [ebp-17ch]
push    edx
lea     ecx, [ebp-664h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 0a1h
lea     eax, [ebp-664h]
push    eax
push    offset dword_37b6f9f0
mov     ecx, [ebp+40h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 0a0h
lea     ecx, [ebp-664h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 0a2h
lea     ecx, [ebp-0b3ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 0a3h
lea     ecx, [ebp-0b54h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6fa24
lea     ecx, [ebp-0b84h]
call    loc_37a13d20
mov     [ebp-180h], eax
mov     ecx, [ebp-180h]
mov     [ebp-184h], ecx
mov     byte ptr [ebp-4], 0a4h
mov     edx, [ebp-184h]
push    edx
call    sub_37a9c4b0
add     esp, 4
push    eax
lea     eax, [ebp-0b6ch]
push    eax
mov     ecx, dword_37b6ff08
call    loc_37ad3fff
mov     [ebp-188h], eax
mov     ecx, [ebp-188h]
mov     [ebp-18ch], ecx
mov     byte ptr [ebp-4], 0a5h
mov     edx, [ebp-18ch]
push    edx
lea     ecx, [ebp-674h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 0a6h
lea     eax, [ebp-674h]
push    eax
push    offset dword_37b6fa10
mov     ecx, [ebp+40h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 0a5h
lea     ecx, [ebp-674h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 0a7h
lea     ecx, [ebp-0b6ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 0a8h
lea     ecx, [ebp-0b84h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
mov     ecx, [ebp+74h]
mov     [ebp+14h], ecx
mov     edx, [ebp+14h]
mov     eax, [ebp+14h]
mov     ecx, [edx+8]
or      ecx, [eax+0ch]
jz      loc_37ae825e
mov     edx, [ebp+74h]
mov     eax, [edx+8]
mov     ecx, [edx+0ch]
and     ecx, 7fffffffh
push    ecx
push    eax
push    offset dword_37b6fa48
lea     edx, [ebp-0b9ch]
push    edx
call    loc_37adbbe8
add     esp, 10h
mov     [ebp-190h], eax
mov     eax, [ebp-190h]
mov     [ebp-194h], eax
mov     byte ptr [ebp-4], 0a9h
mov     ecx, [ebp-194h]
push    ecx
lea     ecx, [ebp-684h]
call    near ptr sub_37aec085
mov     byte ptr [ebp-4], 0aah
lea     edx, [ebp-684h]
push    edx
push    offset dword_37b6fa38
mov     ecx, [ebp+40h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 0a9h
lea     ecx, [ebp-684h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 0abh
lea     ecx, [ebp-0b9ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
push    offset dword_37b6fa58
mov     ecx, [ebp+60h]
call    sub_37aec7e1
push    eax
push    offset dword_37b6fa50
mov     ecx, [ebp+40h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
lea     eax, [ebp-6f4h]
mov     [ebp+48h], eax
mov     ecx, [ebp+48h]
mov     dword ptr [ecx], 0
mov     edx, [ebp+48h]
mov     dword ptr [edx+4], 0
mov     eax, [ebp+48h]
mov     dword ptr [eax+8], 0
mov     ecx, [ebp+48h]
mov     dword ptr [ecx+0ch], 0
mov     edx, [ebp+48h]
mov     dword ptr [edx+10h], 0
mov     eax, [ebp+48h]
mov     dword ptr [eax+14h], 1000h
mov     byte ptr [ebp-4], 0ach
lea     ecx, [ebp-6f4h]
mov     [ebp-2a4h], ecx
lea     edx, [ebp-2a0h]
mov     [ebp+44h], edx
mov     eax, [ebp+44h]
mov     dword ptr [eax], 0
mov     ecx, [ebp+44h]
mov     dword ptr [ecx+4], 0
mov     edx, [ebp+44h]
mov     dword ptr [edx+8], 0
mov     eax, [ebp+44h]
mov     dword ptr [eax+0ch], 0
mov     ecx, [ebp+44h]
mov     dword ptr [ecx+10h], 0
mov     edx, 20h
shl     edx, 3
mov     eax, [ebp+44h]
mov     [eax+14h], edx
mov     dword ptr [ebp-288h], 144h
mov     byte ptr [ebp-284h], 0
mov     byte ptr [ebp-4], 0adh
mov     dword ptr [ebp-288h], 0ah
push    0
lea     ecx, [ebp-200h]
call    sub_37aec1f7
mov     byte ptr [ebp-4], 0aeh
lea     ecx, [ebp-2a4h]
push    ecx
mov     ecx, offset dword_37b71e10
call    sub_37a141d0
lea     ecx, [ebp-6f4h]
call    sub_37a13ca0
push    eax
lea     ecx, [ebp-76ch]
call    loc_37a13d20
mov     byte ptr [ebp-4], 0afh
mov     edx, [ebp+5ch]
or      edx, 2
mov     [ebp+5ch], edx
lea     ecx, [ebp-0d6ch]
call    loc_37ae9650
mov     [ebp-198h], eax
mov     eax, [ebp-198h]
mov     [ebp-19ch], eax
mov     dword ptr [ebp-4], 0b0h
mov     ecx, [ebp+5ch]
or      ecx, 4
mov     [ebp+5ch], ecx
push    0
lea     edx, [ebp-200h]
push    edx
lea     eax, [ebp-76ch]
push    eax
mov     ecx, [ebp-19ch]
call    sub_37aea840
movzx   ecx, al
test    ecx, ecx
jz      short loc_37ae83eb
lea     ecx, [ebp-200h]
call    near ptr sub_37aed495
movzx   edx, al
test    edx, edx
jz      short loc_37ae83eb
mov     dword ptr [ebp+10h], 1
jmp     short loc_37ae83f2
mov     dword ptr [ebp+10h], 0
mov     al, [ebp+10h]
mov     [ebp+4dh], al
mov     dword ptr [ebp-4], 0afh
mov     ecx, [ebp+5ch]
and     ecx, 4
jz      short loc_37ae8416
and     dword ptr [ebp+5ch], 0fffffffbh
lea     ecx, [ebp-0d6ch]
call    sub_37a9ac99
mov     dword ptr [ebp-4], 0aeh
mov     edx, [ebp+5ch]
and     edx, 2
jz      short loc_37ae8434
and     dword ptr [ebp+5ch], 0fffffffdh
lea     ecx, [ebp-76ch]
call    sub_37a13cd0
movzx   eax, byte ptr [ebp+4dh]
test    eax, eax
jz      short loc_37ae8457
lea     ecx, [ebp-200h]
push    ecx
push    offset dword_37b6fa60
mov     ecx, [ebp+58h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     byte ptr [ebp-4], 0adh
lea     ecx, [ebp-200h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 0ach
lea     ecx, [ebp-2a4h]
call    sub_37a13a80
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-6f4h]
call    sub_37a13a60
mov     edx, [ebp+74h]
cmp     dword ptr [edx], 20h
jnz     loc_37ae85c7
push    0
push    0
call    near ptr dword_37a137bc+54h
add     esp, 8
mov     [ebp+38h], eax
cmp     dword ptr [ebp+38h], 0
jz      loc_37ae85c7
push    0
lea     ecx, [ebp-210h]
call    sub_37aec1f7
mov     byte ptr [ebp-4], 0b1h
mov     eax, [ebp+38h]
push    eax
lea     ecx, [ebp-784h]
call    loc_37a13d20
mov     byte ptr [ebp-4], 0b2h
mov     ecx, [ebp+5ch]
or      ecx, 8
mov     [ebp+5ch], ecx
lea     ecx, [ebp-0ddch]
call    loc_37ae9650
mov     [ebp-1a0h], eax
mov     edx, [ebp-1a0h]
mov     [ebp-1a4h], edx
mov     dword ptr [ebp-4], 0b3h
mov     eax, [ebp+5ch]
or      eax, 10h
mov     [ebp+5ch], eax
push    0
lea     ecx, [ebp-210h]
push    ecx
lea     edx, [ebp-784h]
push    edx
mov     ecx, [ebp-1a4h]
call    sub_37aea840
movzx   eax, al
test    eax, eax
jz      short loc_37ae8540
lea     ecx, [ebp-210h]
call    near ptr sub_37aed495
movzx   ecx, al
test    ecx, ecx
jz      short loc_37ae8540
mov     dword ptr [ebp+0ch], 1
jmp     short loc_37ae8547
mov     dword ptr [ebp+0ch], 0
mov     dl, [ebp+0ch]
mov     [ebp+4ch], dl
mov     dword ptr [ebp-4], 0b2h
mov     eax, [ebp+5ch]
and     eax, 10h
jz      short loc_37ae856b
and     dword ptr [ebp+5ch], 0ffffffefh
lea     ecx, [ebp-0ddch]
call    sub_37a9ac99
mov     dword ptr [ebp-4], 0b1h
mov     ecx, [ebp+5ch]
and     ecx, 8
jz      short loc_37ae8589
and     dword ptr [ebp+5ch], 0fffffff7h
lea     ecx, [ebp-784h]
call    sub_37a13cd0
movzx   edx, byte ptr [ebp+4ch]
test    edx, edx
jz      short loc_37ae85ac
lea     eax, [ebp-210h]
push    eax
push    offset dword_37b6fa68
mov     ecx, [ebp+60h]
call    sub_37aec7e1
mov     ecx, eax
call    nullsub_6
mov     ecx, [ebp+38h]
push    ecx
call    j___free_base
add     esp, 4
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-210h]
call    sub_37aec3cd
push    2
lea     ecx, [ebp-0c68h]
call    sub_37a11000
mov     [ebp-1a8h], eax
mov     edx, [ebp-1a8h]
mov     [ebp-1ach], edx
mov     byte ptr [ebp-4], 0b4h
mov     eax, [ebp-1ach]
mov     [ebp+8], eax
lea     ecx, [ebp-220h]
push    ecx
lea     edx, [ebp-0bb4h]
push    edx
mov     eax, [ebp+8]
mov     edx, [eax]
mov     ecx, [ebp+8]
mov     eax, [edx+4]
call    eax
mov     [ebp-1b0h], eax
mov     ecx, [ebp-1b0h]
mov     [ebp-1b4h], ecx
mov     byte ptr [ebp-4], 0b5h
push    0
push    0cc847ddfh
push    10000h
mov     edx, [ebp-1b4h]
push    edx
lea     eax, [ebp-7b4h]
push    eax
call    loc_37a9b4a0
add     esp, 14h
mov     byte ptr [ebp-4], 0b7h
lea     ecx, [ebp-0bb4h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 0b8h
lea     ecx, [ebp-0c68h]
call    loc_37a9ac40
push    2
lea     ecx, [ebp-0c8ch]
call    sub_37a11000
mov     [ebp-1b8h], eax
mov     ecx, [ebp-1b8h]
mov     [ebp-1bch], ecx
mov     byte ptr [ebp-4], 0b9h
mov     edx, [ebp-1bch]
mov     [ebp+4], edx
lea     eax, [ebp-268h]
push    eax
lea     ecx, [ebp-0bcch]
push    ecx
mov     edx, [ebp+4]
mov     eax, [edx]
mov     ecx, [ebp+4]
mov     edx, [eax+4]
call    edx
mov     [ebp-1c0h], eax
mov     eax, [ebp-1c0h]
mov     [ebp-1c4h], eax
mov     byte ptr [ebp-4], 0bah
push    0
push    0cc847ddfh
push    10000h
mov     ecx, [ebp-1c4h]
push    ecx
lea     edx, [ebp-79ch]
push    edx
call    loc_37a9b4a0
add     esp, 14h
mov     byte ptr [ebp-4], 0bch
lea     ecx, [ebp-0bcch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 0bdh
lea     ecx, [ebp-0c8ch]
call    loc_37a9ac40
mov     eax, [ebp+6ch]
add     eax, 30h
mov     [ebp-1c8h], eax
lea     ecx, [ebp-280h]
push    ecx
mov     ecx, [ebp-1c8h]
call    sub_37a9ad20
lea     edx, [ebp-220h]
push    edx
mov     ecx, [ebp+74h]
add     ecx, 40h
call    nullsub_6
mov     eax, [ebp+74h]
cmp     dword ptr [eax], 10h
jz      loc_37ae8820
lea     ecx, [ebp-7b4h]
push    ecx
push    offset dword_37b6fa70
lea     edx, [ebp-0be4h]
push    edx
call    sub_37aa19d0
add     esp, 0ch
mov     [ebp-1cch], eax
mov     eax, [ebp-1cch]
push    eax
mov     ecx, [ebp+6ch]
add     ecx, 48h
call    near ptr dword_37aa3fc0+30h
lea     ecx, [ebp-0be4h]
call    sub_37a13cd0
lea     ecx, [ebp-79ch]
push    ecx
push    offset dword_37b6fa74
lea     edx, [ebp-0bfch]
push    edx
call    sub_37aa19d0
add     esp, 0ch
mov     [ebp-1d0h], eax
mov     eax, [ebp-1d0h]
mov     [ebp-1d4h], eax
mov     byte ptr [ebp-4], 0beh
mov     ecx, [ebp-1d4h]
push    ecx
mov     ecx, [ebp+6ch]
add     ecx, 48h
call    sub_37a9b0cc
mov     byte ptr [ebp-4], 0bdh
lea     ecx, [ebp-0bfch]
call    sub_37a13cd0
mov     edx, [ebp+7ch]
push    edx
mov     eax, [ebp+78h]
push    eax
push    offset dword_37b6fa78
lea     ecx, [ebp-0c14h]
push    ecx
call    loc_37adbbe8
add     esp, 10h
mov     [ebp-1d8h], eax
mov     edx, [ebp-1d8h]
mov     [ebp-1dch], edx
mov     byte ptr [ebp-4], 0bfh
mov     eax, [ebp-1dch]
push    eax
mov     ecx, [ebp+6ch]
add     ecx, 48h
call    sub_37a9b0cc
mov     byte ptr [ebp-4], 0bdh
lea     ecx, [ebp-0c14h]
call    sub_37a13cd0
mov     ecx, [ebp+6ch]
add     ecx, 30h
call    sub_37a1ca00
push    eax
mov     ecx, [ebp+6ch]
add     ecx, 18h
call    sub_37a1ca00
push    eax
push    offset dword_37b6fa84
lea     ecx, [ebp-0c2ch]
push    ecx
call    loc_37adbbe8
add     esp, 10h
mov     [ebp-1e0h], eax
mov     edx, [ebp-1e0h]
push    edx
mov     ecx, [ebp+6ch]
call    near ptr dword_37aa3fc0+30h
lea     ecx, [ebp-0c2ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 0b8h
lea     ecx, [ebp-79ch]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 10h
lea     ecx, [ebp-7b4h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 0ah
lea     ecx, [ebp-238h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 8
lea     ecx, [ebp-250h]
call    sub_37a13cd0
mov     byte ptr [ebp-4], 7
lea     ecx, [ebp-268h]
call    sub_37aec3cd
mov     byte ptr [ebp-4], 4
lea     ecx, [ebp-220h]
call    sub_37aec3cd
mov     dword ptr [ebp-4], 0ffffffffh
lea     ecx, [ebp-280h]
call    sub_37a13cd0
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
add     ebp, 64h
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dword_37ae08f8
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 38h
lea     eax, [ebp+var_44]
push    eax
mov     ecx, [ebp+arg_4]
call    sub_37aed1b2
mov     [ebp+var_4], 0
lea     ecx, [ebp+var_44]
mov     [ebp+var_1c], ecx
mov     edx, [ebp+var_1c]
mov     [ebp+var_20], edx
mov     eax, [ebp+var_20]
mov     [ebp+var_24], eax
mov     ecx, [ebp+var_24]
mov     [ebp+var_28], ecx
mov     edx, [ebp+var_28]
mov     eax, [edx]
mov     [ebp+var_10], eax
mov     ecx, [ebp+var_1c]
mov     [ebp+var_2c], ecx
mov     edx, [ebp+var_2c]
mov     [ebp+var_30], edx
mov     eax, [ebp+var_30]
add     eax, 4
mov     [ebp+var_34], eax
mov     ecx, [ebp+var_34]
mov     edx, [ecx]
mov     [ebp+var_38], edx
jmp     short loc_37ae9586
mov     eax, [ebp+var_10]
add     eax, 18h
mov     [ebp+var_10], eax
mov     ecx, [ebp+var_10]
cmp     ecx, [ebp+var_38]
jz      short loc_37ae95e6
mov     edx, [ebp+var_10]
mov     [ebp+var_18], edx
mov     eax, [ebp+var_18]
push    eax
mov     ecx, [ebp+arg_4]
call    near ptr loc_37aec7fa+1
mov     [ebp+var_14], eax
mov     ecx, [ebp+var_14]
call    near ptr sub_37aed495
movzx   ecx, al
test    ecx, ecx
jz      short loc_37ae95cd
mov     edx, [ebp+var_14]
push    edx
mov     eax, [ebp+var_18]
push    eax
mov     ecx, [ebp+arg_0]
call    sub_37aec5d4
push    eax
call    sub_37ae9510
add     esp, 8
jmp     short loc_37ae957d
mov     ecx, [ebp+var_14]
push    ecx
mov     edx, [ebp+var_18]
push    edx
mov     ecx, [ebp+arg_0]
call    sub_37aec5d4
mov     ecx, eax
call    nullsub_6
jmp     short loc_37ae957d
mov     [ebp+var_4], 1
lea     ecx, [ebp+var_44]
call    sub_37a9afef
mov     dword ptr [ebp-4], 0ffffffffh
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
mov     eax, dword_37b71e4c
mov     ecx, dword_37b0b070[eax*4]
inc     eax
test    ecx, ecx
jz      short loc_37ae9642
mov     edx, [esp+arg_0]
nop     word ptr [eax+eax+00000000h]
add     [ecx+37a10000h], edx
mov     ecx, dword_37b0b070[eax*4]
inc     eax
test    ecx, ecx
jnz     short loc_37ae9630
mov     dword_37b71e4c, eax
xor     eax, eax
retn
dec     ebp
wait
fdivr   st, st
xor     [edi-477b889bh], ecx
test    eax, 0efd83507h
inc     eax
jns     short loc_37ae96c5
dec     edi
dec     ecx
sbb     eax, 0d1d51973h
retn
mov     edx, 4c88feadh
push    eax
jno     short loc_37ae9729
aaa
pop     ebp
mov     edx, 7fe5e645h
lodsd
dec     eax
scasd
push    esi
jnb     short loc_37ae9664
or      ch, dl
or      ah, ch
leave
and     eax, 213373efh
cmp     dl, [edx+ebx*2-37997b0eh]
jmp     short locret_37ae9672
cmpsb
dec     edi
imul    byte ptr [eax+48h]
stosd
or      ch, cl
mov     ah, 0ddh
add     byte ptr [edi+20h], 0eh
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
push    offset seh_37ae9740
push    eax
mov     large fs:0, esp
sub     esp, 30h
cmp     [ebp+arg_8], 1
push    ebx
mov     ebx, ecx
jnz     short loc_37ae97d8
mov     edx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     [ebp+var_14], 0
mov     [ebp+var_10], 0fh
mov     byte ptr [ebp+block], 0
cmp     edx, eax
jz      short loc_37ae978c
sub     eax, edx
lea     ecx, [ebp+block]
push    eax
push    edx
call    loc_37a13e90
mov     ecx, [ebx+50h]
lea     eax, [ebp+block]
push    1
push    eax
mov     [ebp+var_4], 0
call    sub_37aed7c1
mov     edx, [ebp+var_10]
cmp     edx, 10h
jb      loc_37ae98ad
mov     ecx, [ebp+block]
inc     edx
mov     eax, ecx
cmp     edx, 1000h
jb      loc_37ae98a3
mov     ecx, [ecx-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      loc_37ae98be
jmp     loc_37ae98a3
mov     ecx, [ebx+64h]
add     ebx, 54h
test    ecx, ecx
jz      short loc_37ae9843
push    edi
mov     edi, offset dword_37b6f20c
lea     edx, [edi+1]
nop     dword ptr [eax+eax+00h]
mov     al, [edi]
inc     edi
test    al, al
jnz     short loc_37ae97f0
sub     edi, edx
mov     edx, [ebx+14h]
mov     eax, edx
sub     eax, ecx
cmp     edi, eax
ja      short loc_37ae982d
lea     eax, [ecx+edi]
mov     [ebx+10h], eax
mov     eax, ebx
cmp     edx, 10h
jb      short loc_37ae9813
mov     eax, [ebx]
push    esi
push    edi
lea     esi, [eax+ecx]
push    offset dword_37b6f20c
push    esi
call    _memmove
add     esp, 0ch
mov     byte ptr [esi+edi], 0
pop     esi
jmp     short loc_37ae9842
push    edi
push    offset dword_37b6f20c
mov     byte ptr [ebp+arg_8], 0
mov     ecx, ebx
push    [ebp+arg_8]
push    edi
call    sub_37a9cb60
pop     edi
mov     ecx, [ebp+arg_0]
mov     eax, [ebp+arg_4]
mov     [ebp+var_2c], 0
mov     [ebp+var_28], 0fh
mov     byte ptr [ebp+var_3c], 0
cmp     ecx, eax
jz      short loc_37ae986b
sub     eax, ecx
push    eax
push    ecx
lea     ecx, [ebp+var_3c]
call    loc_37a13e90
lea     eax, [ebp+var_3c]
mov     [ebp+var_4], 1
push    eax
mov     ecx, ebx
call    sub_37a9b0cc
mov     edx, [ebp+var_28]
cmp     edx, 10h
jb      short loc_37ae98ad
mov     ecx, [ebp+var_3c]
inc     edx
mov     eax, ecx
cmp     edx, 1000h
jb      short loc_37ae98a3
mov     ecx, [ecx-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37ae98c3
push    edx
push    ecx
call    sub_37ab1b25
add     esp, 8
mov     ecx, [ebp+var_c]
pop     ebx
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    0ch
call    __invalid_parameter_noinfo_noreturn
call    __invalid_parameter_noinfo_noreturn
int     3
int     3
int     3
int     3
int     3
xchg    eax, edi
xchg    eax, ebx
std
xlat
cmp     al, [edi-6263d0bch]
sub     edi, [edi]
adc     ah, [ebp+75f44befh]
jnb     short loc_37ae98cb
mov     ah, 0b4h
pop     ss
movsb
sahf
and     ah, bl
push    ebp
mov     ebp, esp
push    0ffffffffh
push    (offset loc_37adfd98+1)
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
push    ecx
mov     dword ptr [ebp-10h], 0
push    ebx
push    esi
mov     esi, [ebp+8]
mov     dword ptr [esi+10h], 0
mov     dword ptr [esi+14h], 0fh
mov     byte ptr [esi], 0
mov     ebx, [ebp+0ch]
mov     dword ptr [ebp-4], 0
mov     dword ptr [ebp-10h], 1
cmp     ebx, 7fh
ja      short loc_37ae9a89
push    0
push    1
mov     ecx, esi
call    sub_37a9e130
cmp     dword ptr [esi+14h], 10h
mov     eax, esi
jb      loc_37ae9b9e
mov     eax, [esi]
mov     [eax], bl
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
cmp     ebx, 7ffh
ja      short loc_37ae9ad6
push    0
push    2
mov     ecx, esi
call    sub_37a9e130
cmp     dword ptr [esi+14h], 10h
mov     ecx, esi
jb      short loc_37ae9aa6
mov     ecx, [esi]
mov     al, bl
and     al, 3fh
or      al, 80h
mov     [ecx+1], al
mov     eax, esi
cmp     dword ptr [esi+14h], 10h
jb      short loc_37ae9ab9
mov     eax, [esi]
shr     ebx, 6
and     bl, 1fh
or      bl, 0c0h
mov     [eax], bl
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
cmp     ebx, 0ffffh
ja      short loc_37ae9b39
push    0
push    3
mov     ecx, esi
call    sub_37a9e130
cmp     dword ptr [esi+14h], 10h
mov     ecx, esi
jb      short loc_37ae9af3
mov     ecx, [esi]
mov     al, bl
and     al, 3fh
or      al, 80h
mov     [ecx+2], al
mov     ecx, esi
cmp     dword ptr [esi+14h], 10h
jb      short loc_37ae9b06
mov     ecx, [esi]
mov     eax, ebx
shr     eax, 6
and     al, 3fh
or      al, 80h
mov     [ecx+1], al
mov     eax, esi
cmp     dword ptr [esi+14h], 10h
jb      short loc_37ae9b1c
mov     eax, [esi]
shr     ebx, 0ch
and     bl, 0fh
or      bl, 0e0h
mov     [eax], bl
mov     eax, esi
pop     esi
pop     ebx
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
cmp     ebx, 10ffffh
ja      short loc_37ae9ba0
push    0
push    4
mov     ecx, esi
call    sub_37a9e130
cmp     dword ptr [esi+14h], 10h
mov     ecx, esi
jb      short loc_37ae9b56
mov     ecx, [esi]
mov     al, bl
and     al, 3fh
or      al, 80h
mov     [ecx+3], al
mov     ecx, esi
cmp     dword ptr [esi+14h], 10h
jb      short loc_37ae9b69
mov     ecx, [esi]
mov     eax, ebx
shr     eax, 6
and     al, 3fh
or      al, 80h
mov     [ecx+2], al
mov     ecx, esi
cmp     dword ptr [esi+14h], 10h
jb      short loc_37ae9b7f
mov     ecx, [esi]
mov     eax, ebx
shr     eax, 0ch
and     al, 3fh
or      al, 80h
mov     [ecx+1], al
mov     eax, esi
cmp     dword ptr [esi+14h], 10h
jb      short loc_37ae9b95
mov     eax, [esi]
shr     ebx, 12h
and     bl, 7
or      bl, 0f0h
mov     [eax], bl
mov     ecx, [ebp-0ch]
mov     eax, esi
pop     esi
pop     ebx
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dword_37adfdd0
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 68h
push    ebx
push    esi
push    edi
mov     edi, [ebp+8]
xorps   xmm0, xmm0
mov     ebx, ecx
movsd   qword ptr [ebp-14h], xmm0
mov     eax, [edi+8]
mov     esi, eax
mov     edx, [edi+4]
sub     esi, edx
cmp     esi, 20h
jg      short loc_37ae9c23
push    esi
push    edx
lea     eax, [ebp-74h]
push    eax
call    _memmove_0
lea     eax, [ebp-14h]
mov     byte ptr [ebp+esi-74h], 0
push    eax
lea     eax, [ebp-74h]
push    offset dword_37b6f2c8
push    eax
call    sub_37a9e2e0
add     esp, 18h
mov     esi, eax
jmp     short loc_37ae9c9b
mov     dword ptr [ebp-2ch], 0
mov     ecx, 0fh
mov     [ebp-28h], ecx
mov     byte ptr [ebp-3ch], 0
cmp     edx, eax
jz      short loc_37ae9c49
sub     eax, edx
lea     ecx, [ebp-3ch]
push    eax
push    edx
call    loc_37a13e90
mov     ecx, [ebp-28h]
cmp     ecx, 10h
lea     eax, [ebp-3ch]
lea     ecx, [ebp-14h]
cmovnb  eax, [ebp-3ch]
push    ecx
push    offset dword_37b6f2cc
push    eax
call    sub_37a9e2e0
mov     edx, [ebp-28h]
add     esp, 0ch
mov     esi, eax
cmp     edx, 10h
jb      short loc_37ae9c9b
mov     ecx, [ebp-3ch]
inc     edx
mov     eax, ecx
cmp     edx, 1000h
jb      short loc_37ae9c91
mov     ecx, [ecx-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      loc_37ae9e6b
push    edx
push    ecx
call    sub_37ab1b25
add     esp, 8
cmp     esi, 1
jz      loc_37ae9de1
mov     eax, [edi+8]
mov     ecx, [edi+4]
mov     dword ptr [ebp-2ch], 0
mov     dword ptr [ebp-28h], 0fh
mov     byte ptr [ebp-3ch], 0
cmp     ecx, eax
jz      short loc_37ae9ccc
sub     eax, ecx
push    eax
push    ecx
lea     ecx, [ebp-3ch]
call    loc_37a13e90
lea     eax, [ebp-3ch]
mov     dword ptr [ebp-4], 0
push    eax
lea     eax, [ebp-6ch]
push    offset dword_37b6f2e4
push    eax
call    sub_37a9c8e0
push    offset dword_37b6f2d0
push    eax
lea     eax, [ebp-54h]
mov     byte ptr [ebp-4], 1
push    eax
call    sub_37a9c840
add     esp, 18h
push    0
push    edi
push    eax
mov     ecx, ebx
mov     byte ptr [ebp-4], 2
call    loc_37ae98d0
mov     edx, [ebp-40h]
mov     bl, al
cmp     edx, 10h
jb      short loc_37ae9d40
mov     ecx, [ebp-54h]
inc     edx
mov     eax, ecx
cmp     edx, 1000h
jb      short loc_37ae9d36
mov     ecx, [ecx-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      loc_37ae9e70
push    edx
push    ecx
call    sub_37ab1b25
add     esp, 8
mov     edx, [ebp-58h]
mov     dword ptr [ebp-44h], 0
mov     dword ptr [ebp-40h], 0fh
mov     byte ptr [ebp-54h], 0
cmp     edx, 10h
jb      short loc_37ae9d86
mov     ecx, [ebp-6ch]
inc     edx
mov     eax, ecx
cmp     edx, 1000h
jb      short loc_37ae9d7c
mov     ecx, [ecx-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      loc_37ae9e75
push    edx
push    ecx
call    sub_37ab1b25
add     esp, 8
mov     edx, [ebp-28h]
mov     dword ptr [ebp-5ch], 0
mov     dword ptr [ebp-58h], 0fh
mov     byte ptr [ebp-6ch], 0
cmp     edx, 10h
jb      short loc_37ae9dcc
mov     ecx, [ebp-3ch]
inc     edx
mov     eax, ecx
cmp     edx, 1000h
jb      short loc_37ae9dc2
mov     ecx, [ecx-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      loc_37ae9e7a
push    edx
push    ecx
call    sub_37ab1b25
add     esp, 8
pop     edi
pop     esi
mov     al, bl
pop     ebx
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
movsd   xmm0, qword ptr [ebp-14h]
lea     ecx, [ebp-24h]
sub     esp, 8
movsd   qword ptr [esp], xmm0
call    sub_37aec164
mov     eax, [ebx]
xor     ecx, ecx
mov     edx, [ebx+10h]
mov     esi, [ebx+0ch]
mov     dword ptr [ebp-4], 3
test    eax, eax
jz      short loc_37ae9e13
mov     eax, [eax]
test    eax, eax
jz      short loc_37ae9e13
mov     ecx, [eax]
dec     esi
xor     eax, eax
add     esi, edx
test    ecx, ecx
jz      short loc_37ae9e24
mov     ecx, [ecx]
test    ecx, ecx
jz      short loc_37ae9e24
mov     eax, [ecx]
test    eax, eax
jnz     short loc_37ae9e2c
xor     ecx, ecx
jmp     short loc_37ae9e2e
mov     ecx, [eax]
lea     eax, [ebp-24h]
mov     edx, esi
push    eax
mov     eax, [ecx+8]
and     esi, 3
mov     ecx, [ecx+4]
dec     eax
shr     edx, 2
and     edx, eax
mov     ecx, [ecx+edx*4]
mov     ecx, [ecx+esi*4]
call    nullsub_6
lea     ecx, [ebp-24h]
call    sub_37aec3cd
mov     ecx, [ebp-0ch]
mov     al, 1
pop     edi
pop     esi
pop     ebx
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
call    __invalid_parameter_noinfo_noreturn
call    __invalid_parameter_noinfo_noreturn
call    __invalid_parameter_noinfo_noreturn
call    __invalid_parameter_noinfo_noreturn
jecxz   short near ptr loc_37aea24d+1
jnz     short near ptr loc_37aea2aa+1
aad     0ceh
add     dword ptr [edx+5eh], 68h
mov     tr0, edx
xor     [esp+eax*8], edi
icebp
in      al, 0fdh
in      eax, dx
jnp     short loc_37aea26b
aas
rcl     dword ptr [esi], 69h
mov     ecx, 0a997a08ah
repne loopne loc_37aea2c1
inc     esi
push    esp
or      bl, [eax]
sbb     eax, 0e951b9d4h
arpl    [ebx+2529393ah], ax
xlat
dec     ebx
cld
inc     ebp
test    al, 26h
dec     ecx
or      esi, ds:92d82a04h
mov     dh, 0d2h
or      eax, 52ebff39h
sbb     byte ptr [esi+5bh], 9dh
xchg    eax, edx
mov     al, ds:0cfaaa976h
push    edx
lahf
out     2fh, al
out     dx, al
adc     dl, bl
pop     es
call    eax
and     [eax-6bh], bh
mov     eax, 9740ac5ah
mov     esi, 4d222f01h
jnb     short loc_37aea263
jg      short loc_37aea329
sub     dword ptr [ecx], 45h
enter   63a8h, 0edh
retf
add     al, 0a1h
scas    dword ptr es:[di]
mov     ebx, 84d3f956h
cmp     eax, 0b8cd4b9h
pushf
adc     eax, 29582279h
cmp     eax, [ebx-4ff71475h]
ficom   dword ptr [eax+4dee13d1h]
add     [ebp+0dh], ecx
push    eax
loopne  near ptr loc_37aea2c5+3
mov     esp, 19b9e74fh
shl     esp, 1
pop     eax
pop     esp
retn
movsb
sti
mov     ch, 2ah
inc     ecx
mov     esp, gs
jns     short near ptr loc_37aea338+2
and     eax, 68a076b9h
das
add     [ebx+46h], edx
in      eax, dx
adc     al, 5ch
lock pop ecx
out     dx, al
xor     eax, 4a6cee32h
or      eax, 98f45f3bh
inc     esi
jge     short loc_37aea332
inc     edx
or      al, 0b1h
and     gs:[ebp-5cd59f7fh], esi
cmp     al, 0c1h
mov     edx, edi
loop    loc_37aea379
out     0b1h, al
adc     dword ptr [edi-4], 0ffffff8ah
call    near ptr 0cce364h
arpl    [ecx+esi*8+9ef29fh], cx
sub     ebx, [edi+77h]
dec     edx
loope   loc_37aea3ac
xchg    eax, ebp
pop     eax
call    far ptr 0a21bh:53333b84h
add     dl, [ecx]
into
enter   5c84h, 31h
aaa
pop     ds
lodsb
cmp     esp, [edi-43h]
insd
jge     short loc_37aea337
pusha
jle     short loc_37aea387
sbb     cl, [edi-3bh]
push    esp
fbstp   tbyte ptr [ecx-74h]
lock cld
pop     edi
lock or [ebp-3d186a83h], esp
clc
aas
and     cl, ds:50cb6413h
mov     bl, 62h
popa
mov     ds:1dbbdfb3h, eax
adc     eax, [ecx-75h]
inc     esp
xor     [esi-327c63cfh], ecx
mov     esp, [eax-31a5a769h]
inc     ebx
setalc
stosd
scasb
sahf
jmp     short near ptr loc_37aea379+5
push    ebp
mov     ebp, esp
push    ebx
mov     ebx, ecx
push    esi
mov     esi, [ebp+0ch]
push    edi
mov     eax, [ebx+44h]
mov     edi, [ebx+48h]
sub     eax, edi
cmp     eax, esi
jge     short loc_37aea800
pop     edi
pop     esi
xor     al, al
pop     ebx
pop     ebp
retn    8
mov     edx, esi
test    esi, esi
jz      short loc_37aea823
mov     eax, [ebp+8]
sub     edi, eax
lea     ecx, [eax+esi]
xchg    ax, ax
mov     al, [edi+ecx-1]
lea     ecx, [ecx-1]
dec     edx
cmp     al, [ecx]
jnz     short loc_37aea7f7
test    edx, edx
jnz     short loc_37aea810
mov     edi, [ebx+48h]
lea     eax, [edi+esi]
pop     edi
mov     [ebx+48h], eax
mov     al, 1
pop     esi
pop     ebx
pop     ebp
retn    8
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
push    esi
push    edi
mov     edi, ecx
lea     esi, [edi+28h]
cmp     esi, eax
jz      short loc_37aea866
cmp     dword ptr [eax+14h], 10h
mov     edx, eax
jb      short loc_37aea85b
mov     edx, [eax]
push    dword ptr [eax+10h]
mov     ecx, esi
push    edx
call    loc_37a13e90
cmp     dword ptr [esi+14h], 10h
jb      short loc_37aea86e
mov     esi, [esi]
push    [ebp+arg_8]
mov     eax, [edi+38h]
mov     ecx, edi
push    [ebp+arg_4]
add     eax, esi
push    eax
push    esi
call    sub_37aea890
pop     edi
pop     esi
pop     ebp
retn    0ch
push    ebp
mov     ebp, esp
mov     eax, large fs:0
push    0ffffffffh
mov     edx, [ebp+arg_0]
push    offset dword_37adfea8
push    eax
mov     eax, [ebp+arg_4]
mov     large fs:0, esp
sub     esp, 24h
push    ebx
push    esi
mov     esi, ecx
xor     ecx, ecx
push    edi
cmp     [esi+6ch], cl
mov     [esi+44h], eax
movzx   eax, [ebp+arg_c]
cmovnz  ecx, eax
mov     [esi+40h], edx
mov     [esi+6eh], cl
mov     ecx, offset byte_37b6f180
mov     [esi+48h], edx
mov     dword ptr [esi+4ch], 0
mov     dword ptr [esi+50h], 0
lea     edx, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37aea8e4
sub     ecx, edx
push    ecx
push    offset byte_37b6f180
lea     ecx, [esi+54h]
call    loc_37a13e90
lea     ecx, [esi+14h]
call    sub_37a9af72
mov     ecx, [esi+10h]
test    ecx, ecx
jz      short loc_37aea923
nop     word ptr [eax+eax+00h]
add     ecx, 0ffffffffh
mov     [esi+10h], ecx
jnz     short loc_37aea91f
mov     dword ptr [esi+0ch], 0
test    ecx, ecx
jnz     short loc_37aea910
mov     eax, [esi+0ch]
add     eax, ecx
test    al, 3
jnz     short loc_37aea940
lea     eax, [ecx+4]
shr     eax, 2
cmp     [esi+8], eax
ja      short loc_37aea940
push    1
mov     ecx, esi
call    sub_37a9d7f0
mov     eax, [esi+8]
lea     eax, ds:0ffffffffh[eax*4]
and     [esi+0ch], eax
mov     ebx, [esi+10h]
add     ebx, [esi+0ch]
mov     eax, [esi+8]
mov     ecx, ebx
dec     eax
shr     ecx, 2
and     ecx, eax
mov     eax, [esi+4]
cmp     dword ptr [eax+ecx*4], 0
lea     edi, ds:0[ecx*4]
jnz     short loc_37aea981
push    10h
call    ??2@yapaxi@z
mov     ecx, [esi+4]
add     esp, 4
mov     [edi+ecx], eax
mov     eax, [esi+4]
mov     eax, [edi+eax]
and     ebx, 3
mov     edi, [ebp+arg_8]
mov     ecx, esi
mov     [eax+ebx*4], edi
inc     dword ptr [esi+10h]
call    sub_37aeb4f0
mov     bl, al
mov     ecx, esi
lea     eax, [ebp-18h]
push    eax
call    loc_37aeba80
cmp     byte ptr [esi+6eh], 0
jz      short loc_37aea9bd
cmp     dword ptr [esi+64h], 0
lea     ecx, [esi+54h]
jz      short loc_37aea9bd
push    2
push    ecx
mov     ecx, edi
call    sub_37aed7c1
cmp     byte ptr [esi+6dh], 0
jz      loc_37aeaa5c
mov     ecx, edi
call    loc_37aed37b
test    al, al
jnz     loc_37aeaa5c
mov     ecx, edi
call    near ptr sub_37aed495
test    al, al
jnz     short loc_37aeaa5c
mov     eax, [ebp+8]
mov     ecx, offset dword_37b6f188
mov     [ebp-14h], eax
mov     eax, [ebp+0ch]
mov     dword ptr [ebp-18h], 0dh
mov     [ebp-10h], eax
lea     edx, [ecx+1]
mov     dword ptr [ebp-20h], 0
mov     dword ptr [ebp-1ch], 0fh
mov     byte ptr [ebp-30h], 0
xchg    ax, ax
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37aeaa10
sub     ecx, edx
push    ecx
push    offset dword_37b6f188
lea     ecx, [ebp-30h]
call    loc_37a13e90
push    0
lea     eax, [ebp-18h]
mov     dword ptr [ebp-4], 0
push    eax
lea     eax, [ebp-30h]
mov     ecx, esi
push    eax
call    loc_37ae98d0
lea     ecx, [ebp-30h]
call    sub_37a13cd0
pop     edi
pop     esi
xor     al, al
pop     ebx
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    10h
mov     ecx, [ebp-0ch]
mov     al, bl
pop     edi
pop     esi
pop     ebx
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    10h
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     edi, ecx
mov     ecx, [edi+48h]
mov     esi, [edi+44h]
lea     ebx, [ecx-1]
cmp     ecx, esi
jz      short loc_37aeadbc
mov     dl, [ecx]
inc     ecx
mov     [ebp-1], dl
mov     [edi+48h], ecx
cmp     dl, 2ah
jnz     short loc_37aeadc5
cmp     ecx, esi
jz      short loc_37aeadab
mov     edx, ecx
cmp     edx, esi
jz      short loc_37aeada1
mov     al, [edx]
lea     ecx, [edx+1]
mov     [edi+48h], ecx
mov     edx, ecx
cmp     al, 2ah
jnz     short loc_37aeada1
cmp     byte ptr [ecx], 2fh
jz      short loc_37aeada7
mov     ecx, edx
cmp     edx, esi
jnz     short loc_37aead8e
cmp     ecx, esi
jnz     short loc_37aeadaf
xor     dl, dl
jmp     short loc_37aeadb7
mov     dl, [ecx]
lea     eax, [ecx+1]
mov     [edi+48h], eax
cmp     dl, 2fh
jz      short loc_37aeade2
pop     edi
pop     esi
xor     al, al
pop     ebx
mov     esp, ebp
pop     ebp
retn
cmp     dl, 2fh
jnz     short loc_37aeadbc
cmp     ecx, esi
jz      short loc_37aeade5
mov     al, [ecx]
inc     ecx
mov     [edi+48h], ecx
cmp     al, 0dh
jz      short loc_37aeade5
cmp     al, 0ah
jz      short loc_37aeade5
cmp     ecx, esi
jnz     short loc_37aeadce
jmp     short loc_37aeade5
mov     dl, [ebp-1]
cmp     byte ptr [edi+6eh], 0
jz      short loc_37aeae39
mov     eax, [edi+4ch]
xor     esi, esi
test    eax, eax
jz      short loc_37aeae2d
cmp     eax, ebx
jnb     short loc_37aeae09
mov     cl, [eax]
cmp     cl, 0ah
jz      short loc_37aeae2d
cmp     cl, 0dh
jz      short loc_37aeae2d
inc     eax
cmp     eax, ebx
jb      short loc_37aeadf8
cmp     dl, 2ah
jnz     short loc_37aeae28
mov     edx, [edi+48h]
mov     eax, ebx
cmp     ebx, edx
jnb     short loc_37aeae28
mov     cl, [eax]
cmp     cl, 0ah
jz      short loc_37aeae2d
cmp     cl, 0dh
jz      short loc_37aeae2d
inc     eax
cmp     eax, edx
jb      short loc_37aeae17
mov     esi, 1
push    esi
push    dword ptr [edi+48h]
mov     ecx, edi
push    ebx
call    sub_37ae9740
pop     edi
pop     esi
mov     al, 1
pop     ebx
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset dword_37adff08
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 58h
push    ebx
push    esi
push    edi
mov     esi, ecx
mov     dword ptr [ebp-54h], 0
mov     dword ptr [ebp-50h], 0fh
mov     byte ptr [ebp-64h], 0
push    7
lea     ecx, [ebp-44h]
mov     dword ptr [ebp-4], 0
call    sub_37aec1f7
mov     ebx, eax
mov     edi, [esi+0ch]
xor     ecx, ecx
mov     eax, [esi]
dec     edi
mov     edx, [esi+10h]
mov     byte ptr [ebp-4], 1
test    eax, eax
jz      short loc_37aeaeb0
mov     eax, [eax]
test    eax, eax
jz      short loc_37aeaeb0
mov     ecx, [eax]
add     edi, edx
xor     eax, eax
test    ecx, ecx
jz      short loc_37aeaec0
mov     ecx, [ecx]
test    ecx, ecx
jz      short loc_37aeaec0
mov     eax, [ecx]
test    eax, eax
jnz     short loc_37aeaec8
xor     edx, edx
jmp     short loc_37aeaeca
mov     edx, [eax]
mov     ecx, [edx+8]
mov     eax, edi
shr     eax, 2
dec     ecx
and     ecx, eax
and     edi, 3
mov     eax, [edx+4]
push    ebx
mov     eax, [eax+ecx*4]
mov     ecx, [eax+edi*4]
call    nullsub_6
lea     ecx, [ebp-44h]
mov     byte ptr [ebp-4], 0
call    sub_37aec3cd
lea     eax, [ebp-1ch]
mov     ecx, esi
push    eax
call    loc_37aeb260
test    al, al
jz      loc_37aeb0e6
mov     eax, [ebp-1ch]
mov     cl, 1
cmp     eax, 0ch
jnz     short loc_37aeaf35
test    cl, cl
jz      loc_37aeb0e6
lea     eax, [ebp-1ch]
mov     ecx, esi
push    eax
call    loc_37aeb260
mov     cl, al
mov     eax, [ebp-1ch]
cmp     eax, 0ch
jz      short loc_37aeaf10
test    cl, cl
jz      loc_37aeb0e6
cmp     eax, 2
jz      loc_37aeb21b
cmp     eax, 5
jnz     loc_37aeb0e6
mov     ecx, offset word_37b6f182
lea     edx, [ecx+1]
nop
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37aeaf50
sub     ecx, edx
push    ecx
push    offset word_37b6f182
lea     ecx, [ebp-64h]
call    loc_37a13e90
lea     eax, [ebp-64h]
mov     ecx, esi
push    eax
lea     eax, [ebp-1ch]
push    eax
call    loc_37aea240
mov     ecx, esi
test    al, al
jz      loc_37aeb20d
lea     eax, [ebp-40h]
push    eax
call    loc_37aeb260
test    al, al
jz      loc_37aeb1b3
cmp     dword ptr [ebp-40h], 0bh
jnz     loc_37aeb1b3
mov     eax, [esi+10h]
xor     ecx, ecx
add     eax, [esi+0ch]
mov     edx, [esi]
test    edx, edx
jz      short loc_37aeafb1
mov     edx, [edx]
test    edx, edx
jz      short loc_37aeafb1
mov     ecx, [edx]
lea     edi, [eax-1]
xor     eax, eax
test    ecx, ecx
jz      short loc_37aeafc2
mov     ecx, [ecx]
test    ecx, ecx
jz      short loc_37aeafc2
mov     eax, [ecx]
test    eax, eax
jnz     short loc_37aeafca
xor     edx, edx
jmp     short loc_37aeafcc
mov     edx, [eax]
mov     ecx, [edx+8]
mov     eax, edi
dec     ecx
shr     eax, 2
and     ecx, eax
and     edi, 3
mov     eax, [edx+4]
mov     eax, [eax+ecx*4]
lea     ecx, [ebp-64h]
push    ecx
mov     ecx, [eax+edi*4]
call    sub_37aec5d4
mov     edx, [esi+0ch]
mov     [ebp-10h], eax
mov     eax, [esi+10h]
lea     ecx, [edx+eax]
test    cl, 3
jnz     short loc_37aeb014
add     eax, 4
shr     eax, 2
cmp     [esi+8], eax
ja      short loc_37aeb014
push    1
mov     ecx, esi
call    sub_37a9d7f0
mov     edx, [esi+0ch]
mov     eax, [esi+8]
lea     eax, ds:0ffffffffh[eax*4]
and     eax, edx
mov     [esi+0ch], eax
mov     edi, [esi+10h]
mov     ecx, [esi+8]
add     edi, eax
mov     eax, edi
dec     ecx
shr     eax, 2
and     ecx, eax
mov     eax, [esi+4]
lea     ebx, ds:0[ecx*4]
cmp     dword ptr [ebx+eax], 0
jnz     short loc_37aeb056
push    10h
call    ??2@yapaxi@z
mov     ecx, [esi+4]
add     esp, 4
mov     [ebx+ecx], eax
mov     eax, [esi+4]
mov     eax, [eax+ebx]
and     edi, 3
mov     ecx, [ebp-10h]
mov     [eax+edi*4], ecx
mov     ecx, esi
inc     dword ptr [esi+10h]
call    sub_37aeb4f0
add     dword ptr [esi+10h], 0ffffffffh
jnz     short loc_37aeb079
mov     dword ptr [esi+0ch], 0
mov     ecx, esi
test    al, al
jz      loc_37aeb20d
lea     eax, [ebp-28h]
push    eax
call    loc_37aeb260
test    al, al
jz      loc_37aeb176
mov     eax, [ebp-28h]
cmp     eax, 2
jz      short loc_37aeb0aa
cmp     eax, 0ah
jz      short loc_37aeb0aa
cmp     eax, 0ch
jnz     loc_37aeb176
mov     cl, 1
cmp     eax, 0ch
jnz     short loc_37aeb0ca
test    cl, cl
jz      short loc_37aeb0ca
lea     eax, [ebp-28h]
mov     ecx, esi
push    eax
call    loc_37aeb260
mov     cl, al
mov     eax, [ebp-28h]
cmp     eax, 0ch
jz      short loc_37aeb0b1
cmp     eax, 2
jz      loc_37aeb225
lea     eax, [ebp-1ch]
mov     ecx, esi
push    eax
call    loc_37aeb260
test    al, al
jnz     loc_37aeaf06
mov     ecx, offset dword_37b6f264
mov     dword ptr [ebp-3ch], 0
mov     dword ptr [ebp-38h], 0fh
mov     byte ptr [ebp-4ch], 0
lea     edx, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37aeb100
sub     ecx, edx
push    ecx
push    offset dword_37b6f264
lea     ecx, [ebp-4ch]
call    loc_37a13e90
mov     byte ptr [ebp-4], 4
lea     eax, [ebp-1ch]
push    0
push    eax
lea     eax, [ebp-4ch]
mov     ecx, esi
push    eax
call    loc_37ae98d0
push    2
mov     ecx, esi
call    sub_37aeb930
lea     ecx, [ebp-4ch]
mov     bl, al
call    sub_37a13cd0
mov     edx, [ebp-50h]
cmp     edx, 10h
jb      loc_37aeb236
mov     ecx, [ebp-64h]
inc     edx
mov     eax, ecx
cmp     edx, 1000h
jb      loc_37aeb22c
mov     ecx, [ecx-4]
add     edx, 23h
sub     eax, ecx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      loc_37aeb24b
jmp     loc_37aeb22c
mov     ecx, offset dword_37b6f238
mov     dword ptr [ebp-3ch], 0
mov     dword ptr [ebp-38h], 0fh
mov     byte ptr [ebp-4ch], 0
lea     edx, [ecx+1]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37aeb190
sub     ecx, edx
push    ecx
push    offset dword_37b6f238
lea     ecx, [ebp-4ch]
call    loc_37a13e90
mov     byte ptr [ebp-4], 3
lea     eax, [ebp-28h]
jmp     loc_37aeb11e
mov     ecx, offset dword_37b6f210
mov     dword ptr [ebp-24h], 0
mov     dword ptr [ebp-20h], 0fh
mov     byte ptr [ebp-34h], 0
lea     edx, [ecx+1]
nop     dword ptr [eax]
mov     al, [ecx]
inc     ecx
test    al, al
jnz     short loc_37aeb1d0
sub     ecx, edx
push    ecx
push    offset dword_37b6f210
lea     ecx, [ebp-34h]
call    loc_37a13e90
push    0
lea     eax, [ebp-40h]
mov     byte ptr [ebp-4], 2
push    eax
lea     eax, [ebp-34h]
mov     ecx, esi
push    eax
call    loc_37ae98d0
push    2
mov     ecx, esi
call    sub_37aeb930
lea     ecx, [ebp-34h]
jmp     loc_37aeb138
push    2
call    sub_37aeb930
mov     bl, al
jmp     loc_37aeb13f
cmp     dword ptr [ebp-54h], 0
jnz     loc_37aeb0e6
mov     bl, 1
jmp     loc_37aeb13f
push    edx
push    ecx
call    sub_37ab1b25
add     esp, 8
mov     ecx, [ebp-0ch]
mov     al, bl
pop     edi
pop     esi
pop     ebx
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
call    __invalid_parameter_noinfo_noreturn
jbe     short near ptr loc_37aeb1e7+1
cli
push    es
adc     eax, 0f1894f2ah
mov     ecx, 585a933h
out     dx, eax
cli
mov     edi, 7eede0edh
jp      short near ptr loc_37aeb20f+3
and     bl, [ecx-18c0bd00h]
pop     es
sub     al, 1
leave
add     eax, 0ae36bf79h
aas
int     3
sbb     edx, [esi]
mov     dl, 0b5h
or      eax, 0d2376208h
mov     dh, 4dh
outsb
adc     edi, ecx
lodsd
pop     eax
jo      short loc_37aeb2bb
mov     edx, 8f754017h
mov     cl, 10h
xchg    eax, ecx
xchg    eax, esp
xchg    eax, ebp
mov     bl, 0fh
xlat
enter   0ffffbd2bh, 2
jns     short near ptr 0b282h
mov     ds:7c5ff33ah, al
mov     eax, 9d09fff4h
jno     short near ptr loc_37aeb2ff+3
pop     eax
mov     ecx, 177b8dc4h
pusha
xchg    eax, edx
in      eax, 0bah
mov     bl, 63h
cwde
insb
jno     short near ptr loc_37aeb30c+1
fstp    qword ptr [ecx]
adc     eax, 0a1855059h
lodsb
mov     edx, 0d090e91eh
cmp     cl, cs:[edx-540aaf57h]
mov     ch, 2ah
inc     edx
in      al, 8ch
mov     ah, 3
mov     ebp, 0abcae21h
insd
push    ds
rol     dword ptr [edx], cl
call    near ptr 27ac44a5h
neg     dword ptr [ebp+5161a1b6h]
mov     cl, 0a2h
xchg    eax, esi
sub     [ebx], al
and     byte ptr [ebx+45h], 12h
xor     ah, [ecx]
xor     al, 15h
sub     edx, [esi+3]
cmp     al, 4ch
mov     [esi+28h], cl
das
retf
fsqrt
cmp     al, 97h
xchg    eax, ebp
into
push    7
push    esp
pop     ecx
test    byte ptr [edi-2bd3a7e9h], 67h
out     dx, eax
xor     ebp, [eax+3bh]
or      eax, 0f294ff11h
mov     esp, 0ac7e07b9h
mov     al, ds:0baab707dh
loope   loc_37aeb523
sbb     [eax-5fh], ch
cmp     edx, ecx
add     byte ptr [ebx-26e8d2f0h], 7dh
xor     dword ptr [ebx-3c8c91c0h], 0ffffff92h
mov     ds:6ddc2392h, eax
sub     bl, dh
call    near ptr 0a0ae9398h
sahf
mov     dl, 0f0h
dec     esi
dec     esp
lodsd
jmp     far ptr 0cf55h:0e1c8579dh
push    ebp
mov     ebp, esp
sub     esp, 0ch
push    ebx
push    esi
mov     esi, ecx
push    edi
mov     ebx, [esi+24h]
xchg    ax, ax
lea     eax, [ebp+var_c]
mov     ecx, esi
push    eax
call    loc_37aeb260
test    al, al
jnz     loc_37aeba49
mov     ecx, [esi+24h]
lea     edi, [esi+14h]
cmp     ebx, ecx
jbe     loc_37aeb9df
mov     edx, [esi+1ch]
lea     eax, [ecx+1]
cmp     edx, eax
ja      short loc_37aeb977
push    1
mov     ecx, edi
call    sub_37a9d990
mov     edx, [esi+1ch]
lea     eax, [edx-1]
and     [esi+20h], eax
mov     ecx, [esi+24h]
mov     eax, [esi+1ch]
add     ecx, [esi+20h]
dec     eax
and     ecx, eax
mov     eax, [esi+18h]
lea     edi, ds:0[ecx*4]
cmp     dword ptr [edi+eax], 0
jnz     short loc_37aeb9ac
push    28h
call    ??2@yapaxi@z
mov     ecx, [esi+18h]
add     esp, 4
mov     [edi+ecx], eax
mov     eax, [esi+18h]
mov     eax, [edi+eax]
xorps   xmm0, xmm0
lea     edi, [esi+14h]
movups  xmmword ptr [eax], xmm0
movups  xmmword ptr [eax+10h], xmm0
movq    qword ptr [eax+20h], xmm0
mov     dword ptr [eax+1ch], 0
mov     dword ptr [eax+20h], 0fh
mov     byte ptr [eax+0ch], 0
inc     dword ptr [esi+24h]
mov     ecx, [esi+24h]
cmp     ecx, ebx
jb      short loc_37aeb961
cmp     ebx, ecx
jnb     short loc_37aeba49
mov     eax, [esi+20h]
dec     eax
add     ecx, eax
mov     eax, [esi+1ch]
dec     eax
and     ecx, eax
mov     eax, [esi+18h]
mov     edi, [eax+ecx*4]
mov     ecx, [edi+20h]
cmp     ecx, 10h
jb      short loc_37aeba23
mov     eax, [edi+0ch]
inc     ecx
cmp     ecx, 1000h
jb      short loc_37aeba19
mov     edx, [eax-4]
add     ecx, 23h
sub     eax, edx
add     eax, 0fffffffch
cmp     eax, 1fh
ja      short loc_37aeba6d
mov     eax, edx
push    ecx
push    eax
call    sub_37ab1b25
add     esp, 8
mov     dword ptr [edi+1ch], 0
mov     dword ptr [edi+20h], 0fh
mov     byte ptr [edi+0ch], 0
add     dword ptr [esi+24h], 0ffffffffh
jnz     short loc_37aeba42
mov     dword ptr [esi+20h], 0
mov     ecx, [esi+24h]
cmp     ebx, ecx
jb      short loc_37aeb9e1
mov     eax, [ebp+var_c]
cmp     eax, [ebp+arg_0]
jz      short loc_37aeba59
test    eax, eax
jnz     loc_37aeb940
push    ebx
lea     ecx, [esi+14h]
call    sub_37a9e1b0
pop     edi
pop     esi
xor     al, al
pop     ebx
mov     esp, ebp
pop     ebp
retn    4
call    __invalid_parameter_noinfo_noreturn
jnp     short near ptr loc_37aeba53+1
sbb     ch, [esp+ecx*2]
jnp     short loc_37aebae5
and     byte ptr ds:7ce4a247h, 8
les     edi, [eax-76edfa6ch]
sbb     al, 46h
mov     al, ds:0cf32804dh
mov     ah, 16h
sbb     ecx, ebx
jle     short loc_37aebaa9
out     0ddh, eax
jb      short near ptr loc_37aeba51+1
movsb
jg      short near ptr locret_37aeba6a+1
pop     ds
pop     ebx
add     [ecx+75h], ebp
popf
lock inc esi
adc     eax, 607dc3b1h
sahf
popa
cmpsd
pop     esi
inc     ecx
movsd
stosb
retf    9ec6h
mov     ah, 0ech
xchg    eax, esi
push    esp
aad     0abh
mov     bh, al
lodsd
sub     [eax], ebx
daa
ficom   dword ptr [esi+36h]
mov     dl, 0d3h
jp      short near ptr loc_37aebd82+1
cmp     ch, al
fidivr  word ptr [esi+5fh]
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
and     dword ptr [eax], 0
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     [eax+4], ecx
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_4], ecx
cmp     [ebp+arg_4], 1
jnz     short loc_37aebe53
call    sub_37aedaad
mov     eax, [eax]
mov     [ebp+var_8], eax
push    [ebp+arg_0]
mov     eax, [ebp+var_8]
mov     eax, [eax]
mov     ecx, [ebp+var_8]
call    dword ptr [eax+4]
mov     [ebp+var_c], eax
jmp     short loc_37aebe59
mov     eax, [ebp+arg_0]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_4]
mov     ecx, [ebp+var_c]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_4]
mov     [eax+4], ecx
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn    8
mov     edi, [ecx]
punpcklbw mm6, dword ptr [ebx-16h]
xchg    eax, ecx
mov     dh, 1eh
mov     edx, 5b50740ah
push    edi
xor     al, 0dch
xor     [ebx+72a58d34h], ebp
inc     byte ptr [ecx]
push    esp
das
sti
in      al, dx
in      al, dx
mov     esi, 3c1af7e3h
setalc
clc
xor     esp, [esi+6ah]
mov     ah, [edi+3dh]
in      eax, 0b2h
rcl     dword ptr [eax+12h], cl
lodsb
add     [ecx+714df998h], ebp
jnz     short loc_37aebec6
icebp
sub     byte ptr [esi], 3eh
pushf
int     0d7h
xor     [edi+edx-1e9419b5h], ch
jl      short loc_37aebe73
dec     eax
pop     ebp
sbb     al, 6ch
inc     esp
cdq
sal     eax, 1
add     [esi-0bh], al
add     ch, [ebp-40h]
nop
lodsd
pop     esp
jecxz   short near ptr loc_37aebeb2+2
popf
clc
push    86b0c33fh
js      short near ptr loc_37aebec6+1
mov     ch, bl
add     ch, [ebx-76h]
pop     edx
or      al, 86h
sbb     al, 0afh
add     ebx, [esi+3bh]
mov     cl, 92h
out     dx, eax
insb
or      edx, edx
or      eax, 39815cdfh
test    gs:[ebx+edx*8+24h], ah
inc     esi
aas
dec     eax
push    ebx
cmp     [edx-71h], edx
retf    0e53bh
cmc
xlat
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
and     eax, 0ffffff00h
or      eax, 1
mov     ecx, [ebp+var_4]
mov     [ecx+8], eax
mov     eax, [ebp+var_4]
and     dword ptr [eax+0ch], 0
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
and     eax, 0ffffff00h
or      eax, 2
mov     ecx, [ebp+var_4]
mov     [ecx+8], eax
mov     eax, [ebp+var_4]
and     dword ptr [eax+0ch], 0
mov     eax, [ebp+var_4]
mov     ecx, [ebp+arg_0]
mov     [eax], ecx
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn    4
jmp     fword ptr [edi+esi+3043cd0fh]
daa
jnz     short loc_37aec210
scasd
fisttp  dword ptr [ebp+7a4a8b0ch]
and     cl, [esi+30h]
xchg    eax, edi
push    ss
inc     ebx
mov     esi, 6fcba3b1h
das
dec     esi
xchg    edi, ebp
xchg    eax, esp
movhps  xmm0, qword ptr ds:0c63d7e0ch
pop     ds
xlat
dec     edx
loop    loc_37aec20f
adc     [ebp+2a8affch], bh
or      [eax], ch
lodsd
enter   0ffff8223h, 40h
inc     eax
add     [esi+15h], dh
dec     edi
add     ebp, [ebx-156f4e7dh]
jmp     far ptr 0fb7ah:79091ea6h
xor     ch, al
sar     byte ptr [esi-4ch], 1
jl      short loc_37aec1ae
das
mov     dh, 5eh
popa
mov     dl, [esi+29e94846h]
mov     [esi+ecx*4-0fb0f8d8h], ecx
dec     ecx
test    eax, 9ce48bc6h
inc     esp
xchg    eax, esp
pop     ebp
call    near ptr 0b3f920f5h
mov     bl, [ebp+18h]
leave
mov     [edi-18h], ah
and     edx, esp
dec     ebx
jp      short near ptr loc_37aec23a+1
jns     short near ptr loc_37aec202+5
push    eax
wait
movsd
pop     ebp
pop     edx
lahf
pop     esp
adc     ebx, esi
adc     edx, [eax+351899b0h]
mov     ah, 0f0h
jo      short near ptr loc_37aec1be+2
push    edi
dec     dword ptr [edi+7c2ecbbah]
adc     [eax+2dh], ebp
lodsb
jecxz   short near ptr loc_37aec234+2
sbb     al, [edi-7227410bh]
loop    loc_37aec274
push    0ffffffbfh
rcr     dword ptr [edx], cl
jz      short near ptr loc_37aec259+1
jb      short near ptr loc_37aec208+4
mov     esp, 32e375b9h
mov     ecx, 0d31b622eh
rcl     ebp, 69h
xchg    eax, ebp
sub     ah, bh
rcr     dword ptr [edx], cl
imul    esi, edi, -10h
popf
pusha
cmp     eax, 1152183h
fcomip  st, st(1)
pushf
call    far ptr 21f5h:0d7cf3749h
sbb     al, 53h
add     [eax+132d78b0h], dh
dec     ebp
jmp     short near ptr loc_37aec224+1
retf
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
and     eax, 0ffffff00h
or      eax, 5
mov     ecx, [ebp+var_4]
mov     [ecx+8], eax
mov     eax, [ebp+var_4]
and     dword ptr [eax+0ch], 0
mov     eax, [ebp+var_4]
mov     cl, [ebp+arg_0]
mov     [eax], cl
mov     eax, [ebp+var_4]
mov     esp, ebp
pop     ebp
retn    4
jp      short near ptr word_37aec2d2
sub     [ebp+var_71], ecx
xchg    ecx, [ecx-29h]
push    edx
leave
jecxz   short near ptr loc_37aec385+1
and     al, ch
mov     dl, 70h
aam     38h
sbb     dword ptr [ebx-3ch], 99af87b2h
sahf
dec     ebp
test    [eax+3ch], ecx
mov     edi, ds:649dcf6ch
cmpsd
lock push esp
pop     edi
jz      short near ptr loc_37aec416+1
int     3
out     98h, eax
cmp     [eax-4c1c34bbh], esp
add     [ebx+48h], edi
mov     dh, 0ffh
movsd
jnz     short near ptr loc_37aec380+1
dec     edx
dec     ebp
sbb     dl, ah
xchg    eax, ecx
adc     al, 42h
or      cl, cl
cmp     bh, al
retn    3397h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37a9d570
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 28h
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
mov     [ebp+var_18], eax
cmp     [ebp+var_18], 4
jz      short loc_37aec410
cmp     [ebp+var_18], 5
jle     short loc_37aec47e
cmp     [ebp+var_18], 7
jle     short loc_37aec43c
jmp     short loc_37aec47e
jmp     short loc_37aec47e
mov     eax, [ebp+var_10]
mov     eax, [eax+8]
shl     eax, 17h
sar     eax, 1fh
test    eax, eax
jz      short loc_37aec43a
call    sub_37aedaad
mov     eax, [eax]
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_10]
push    dword ptr [eax]
mov     eax, [ebp+var_1c]
mov     eax, [eax]
mov     ecx, [ebp+var_1c]
call    dword ptr [eax+10h]
jmp     short loc_37aec47e
mov     eax, [ebp+var_10]
mov     eax, [eax]
mov     [ebp+var_28], eax
mov     eax, [ebp+var_28]
mov     [ebp+block], eax
cmp     [ebp+block], 0
jz      short loc_37aec47a
mov     eax, [ebp+var_34]
mov     [ebp+var_20], eax
mov     ecx, [ebp+block]
call    sub_37a9fc7e
xor     eax, eax
inc     eax
and     eax, 1
jz      short loc_37aec472
push    8
push    [ebp+block]
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     eax, [ebp+block]
mov     [ebp+var_20], eax
jmp     short loc_37aec47e
and     [ebp+var_20], 0
mov     eax, [ebp+var_10]
cmp     dword ptr [eax+0ch], 0
jz      short loc_37aec4af
mov     eax, [ebp+var_10]
mov     eax, [eax+0ch]
mov     [ebp+var_2c], eax
mov     eax, [ebp+var_2c]
mov     [ebp+var_24], eax
cmp     [ebp+var_24], 0
jz      short loc_37aec4ab
push    3
mov     ecx, [ebp+var_24]
call    loc_37a9fe5d
mov     [ebp+var_30], eax
jmp     short loc_37aec4af
and     [ebp+var_30], 0
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn
jecxz   short loc_37aec50c
int     3
and     al, 56h
push    ecx
stc
enter   0ffffd6e7h, 9fh
test    al, 96h
mov     eax, 32fd3567h
in      al, 5ah
dec     ebp
repne dec ecx
out     6fh, al
dec     ecx
xchg    eax, edx
mov     ecx, 0f937cf84h
push    0ffffffe4h
mov     al, 0ech
xor     dword ptr [edi], 2f569287h
rep or al, 69h
push    esi
popa
dec     ebx
xchg    eax, ebx
test    [esi+ebx-7eh], esp
sub     al, dh
mov     ch, 67h
dec     edi
xor     eax, 24b0cc79h
jmp     near ptr 88e1831h
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aed7c1
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 10h
mov     [ebp+var_1c], ecx
and     [ebp+var_4], 0
mov     eax, [ebp+arg_0]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     ecx, [ebp+var_14]
call    sub_37a1ca00
mov     [ebp+var_18], eax
or      [ebp+var_4], 0ffffffffh
push    [ebp+var_18]
mov     ecx, [ebp+var_1c]
call    sub_37aec7e1
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37ae0041
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 7ch
mov     [ebp-14h], ecx
mov     eax, [ebp-14h]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
test    eax, eax
jnz     short loc_37aec688
push    6
lea     ecx, [ebp-70h]
call    sub_37aec1f7
mov     [ebp-28h], eax
mov     eax, [ebp-28h]
mov     [ebp-2ch], eax
and     dword ptr [ebp-4], 0
push    dword ptr [ebp-2ch]
mov     ecx, [ebp-14h]
call    nullsub_6
or      dword ptr [ebp-4], 0ffffffffh
lea     ecx, [ebp-70h]
call    sub_37aec3cd
push    dword ptr [ebp+8]
lea     ecx, [ebp-60h]
call    sub_37aebe08
mov     dword ptr [ebp-4], 1
lea     eax, [ebp-60h]
push    eax
lea     eax, [ebp-10h]
push    eax
mov     eax, [ebp-14h]
mov     ecx, [eax]
call    sub_37aa12a9
lea     eax, [ebp-58h]
push    eax
mov     eax, [ebp-14h]
mov     ecx, [eax]
call    sub_37aa1002
mov     [ebp-30h], eax
mov     eax, [ebp-30h]
mov     ecx, [ebp-10h]
cmp     ecx, [eax]
jnz     short loc_37aec6d0
mov     dword ptr [ebp-18h], 1
jmp     short loc_37aec6d4
and     dword ptr [ebp-18h], 0
movzx   eax, byte ptr [ebp-18h]
test    eax, eax
jnz     short loc_37aec6e5
mov     dword ptr [ebp-1ch], 1
jmp     short loc_37aec6e9
and     dword ptr [ebp-1ch], 0
movzx   eax, byte ptr [ebp-1ch]
test    eax, eax
jz      short loc_37aec72a
mov     eax, [ebp-10h]
add     eax, 10h
mov     [ebp-34h], eax
lea     eax, [ebp-60h]
push    eax
mov     ecx, [ebp-34h]
call    near ptr loc_37aec52e+1
movzx   eax, al
test    eax, eax
jz      short loc_37aec72a
mov     eax, [ebp-10h]
add     eax, 18h
mov     [ebp-38h], eax
or      dword ptr [ebp-4], 0ffffffffh
lea     ecx, [ebp-60h]
call    loc_37aec32a
mov     eax, [ebp-38h]
jmp     loc_37aec7d1
lea     eax, [ebp-60h]
mov     [ebp-3ch], eax
push    dword ptr [ebp-3ch]
lea     ecx, [ebp-88h]
call    loc_37aebd7e
mov     byte ptr [ebp-4], 2
mov     dword ptr [ebp-40h], offset dword_37b69a58
push    dword ptr [ebp-40h]
lea     ecx, [ebp-80h]
call    loc_37aebe87
mov     byte ptr [ebp-4], 3
mov     eax, [ebp-10h]
mov     [ebp-4ch], eax
mov     eax, [ebp-14h]
mov     eax, [eax]
mov     [ebp-24h], eax
lea     eax, [ebp-88h]
mov     [ebp-44h], eax
mov     eax, [ebp-44h]
mov     [ebp-48h], eax
push    dword ptr [ebp-48h]
mov     ecx, [ebp-24h]
call    sub_37a9e46c
mov     [ebp-20h], eax
push    dword ptr [ebp-20h]
mov     eax, [ebp-20h]
add     eax, 10h
push    eax
push    dword ptr [ebp-4ch]
lea     eax, [ebp-50h]
push    eax
mov     ecx, [ebp-24h]
call    sub_37a9ee31
mov     eax, [ebp-50h]
mov     [ebp-10h], eax
mov     eax, [ebp-10h]
add     eax, 18h
mov     [ebp-54h], eax
mov     byte ptr [ebp-4], 1
lea     ecx, [ebp-80h]
call    sub_37aec3cd
lea     ecx, [ebp-88h]
call    loc_37aec32a
or      dword ptr [ebp-4], 0ffffffffh
lea     ecx, [ebp-60h]
call    loc_37aec32a
mov     eax, [ebp-54h]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
pop     eax
cld
out     0, eax
cmpsd
pushf
xchg    eax, ebp
jp      short loc_37aec7fa
push    ebp
rol     ebx, 4ah
mov     cl, 11h
repne fxch4 st(5)
xchg    eax, ecx
out     dx, al
xor     eax, 0c8573d1h
mov     ecx, 6aec8b55h
jmp     fword ptr (byte_37aedfff-37aee06fh)[eax]
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37ae0053
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 28h
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
test    eax, eax
jnz     short loc_37aec88b
mov     eax, offset dword_37b69a58
jmp     loc_37aec911
push    [ebp+arg_0]
lea     ecx, [ebp+var_34]
call    sub_37aebe08
and     [ebp+var_4], 0
lea     eax, [ebp+var_34]
push    eax
lea     eax, [ebp+var_28]
push    eax
mov     eax, [ebp+var_10]
mov     ecx, [eax]
call    sub_37aa1206
mov     eax, [eax]
mov     [ebp+var_18], eax
lea     eax, [ebp+var_2c]
push    eax
mov     eax, [ebp+var_10]
mov     ecx, [eax]
call    sub_37aa1002
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     ecx, [ebp+var_18]
cmp     ecx, [eax]
jnz     short loc_37aec8d5
mov     [ebp+var_14], 1
jmp     short loc_37aec8d9
and     [ebp+var_14], 0
movzx   eax, byte ptr [ebp+var_14]
test    eax, eax
jz      short loc_37aec8f9
mov     [ebp+var_20], offset dword_37b69a58
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_34]
call    loc_37aec32a
mov     eax, [ebp+var_20]
jmp     short loc_37aec911
mov     eax, [ebp+var_18]
add     eax, 18h
mov     [ebp+var_24], eax
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_34]
call    loc_37aec32a
mov     eax, [ebp+var_24]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset byte_37ae0053
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 28h
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
test    eax, eax
jnz     short loc_37aec959
mov     eax, offset dword_37b69a58
jmp     loc_37aec9e1
push    0
push    [ebp+arg_0]
lea     ecx, [ebp+var_34]
call    sub_37aebe27
and     [ebp+var_4], 0
lea     eax, [ebp+var_34]
push    eax
lea     eax, [ebp+var_28]
push    eax
mov     eax, [ebp+var_10]
mov     ecx, [eax]
call    sub_37aa1206
mov     eax, [eax]
mov     [ebp+var_18], eax
lea     eax, [ebp+var_2c]
push    eax
mov     eax, [ebp+var_10]
mov     ecx, [eax]
call    sub_37aa1002
mov     [ebp+var_1c], eax
mov     eax, [ebp+var_1c]
mov     ecx, [ebp+var_18]
cmp     ecx, [eax]
jnz     short loc_37aec9a5
mov     [ebp+var_14], 1
jmp     short loc_37aec9a9
and     [ebp+var_14], 0
movzx   eax, byte ptr [ebp+var_14]
test    eax, eax
jz      short loc_37aec9c9
mov     [ebp+var_20], offset dword_37b69a58
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_34]
call    loc_37aec32a
mov     eax, [ebp+var_20]
jmp     short loc_37aec9e1
mov     eax, [ebp+var_18]
add     eax, 18h
mov     [ebp+var_24], eax
or      [ebp+var_4], 0ffffffffh
lea     ecx, [ebp+var_34]
call    loc_37aec32a
mov     eax, [ebp+var_24]
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 20h
mov     [ebp+var_10], ecx
mov     eax, [ebp+var_10]
cmp     dword ptr [eax], 0
jz      short loc_37aeca72
mov     eax, [ebp+arg_0]
mov     eax, [eax]
mov     [ebp+var_c], eax
mov     eax, [ebp+var_10]
mov     eax, [eax]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_8]
mov     al, [eax]
mov     [ebp+var_1], al
mov     ecx, [ebp+var_c]
cmp     al, [ecx]
jnz     short loc_37aeca4c
cmp     [ebp+var_1], 0
jz      short loc_37aeca46
mov     eax, [ebp+var_8]
mov     al, [eax+1]
mov     [ebp+var_2], al
mov     ecx, [ebp+var_c]
cmp     al, [ecx+1]
jnz     short loc_37aeca4c
add     [ebp+var_8], 2
add     [ebp+var_c], 2
cmp     [ebp+var_2], 0
jnz     short loc_37aeca12
and     [ebp+var_14], 0
jmp     short loc_37aeca54
sbb     eax, eax
or      eax, 1
mov     [ebp+var_14], eax
mov     eax, [ebp+var_14]
mov     [ebp+var_20], eax
cmp     [ebp+var_20], 0
jge     short loc_37aeca69
mov     [ebp+var_18], 1
jmp     short loc_37aeca6d
and     [ebp+var_18], 0
mov     al, byte ptr [ebp+var_18]
jmp     short loc_37aeca90
mov     eax, [ebp+var_10]
mov     ecx, [ebp+arg_0]
mov     eax, [eax+4]
cmp     eax, [ecx+4]
jge     short loc_37aeca89
mov     [ebp+var_1c], 1
jmp     short loc_37aeca8d
and     [ebp+var_1c], 0
mov     al, byte ptr [ebp+var_1c]
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+block], ecx
mov     eax, [ebp+block]
mov     dword ptr [eax], offset off_37b69a6c
mov     ecx, [ebp+block]
call    sub_37aec4bd
mov     eax, [ebp+arg_0]
and     eax, 1
jz      short loc_37aecac2
push    4
push    [ebp+block]
call    sub_37ab1b25
pop     ecx
pop     ecx
mov     eax, [ebp+block]
mov     esp, ebp
pop     ebp
retn    4
inc     edi
retf
push    ebp
mov     ebp, esp
mov     dword_37b71c48, offset off_37aefe10
mov     dword_37b71c48, offset off_37b69a6c
push    offset loc_37aecb3d
call    _atexit
pop     ecx
pop     ebp
retn
cmp     esi, [ecx]
fdiv    dword ptr [eax+6b3735aeh]
add     al, 99h
push    ebp
mov     ebp, esp
mov     ecx, offset dword_37b69a58
call    sub_37aec3cd
pop     ebp
retn
push    es
cld
loop    loc_37aecb08
stosb
lds     edi, [esi+0]
jns     short near ptr loc_37aecb03+3
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
mov     [ebp+var_8], eax
cmp     [ebp+var_8], 7
ja      def_37aecd83
mov     eax, [ebp+var_8]
jmp     ds:jpt_37aecd83[eax*4]
xor     eax, eax
jmp     short loc_37aece04
mov     eax, [ebp+var_4]
mov     eax, [eax]
jmp     short loc_37aece04
mov     eax, [ebp+var_4]
cmp     dword ptr [eax], 7fffffffh
jb      short loc_37aecda5
call    _abort
mov     eax, [ebp+var_4]
mov     eax, [eax]
jmp     short loc_37aece04
mov     eax, [ebp+var_4]
movsd   xmm0, qword ptr [eax]
comisd  xmm0, ds:qword_37aefe30
jb      short loc_37aecdce
mov     eax, [ebp+var_4]
movsd   xmm0, ds:qword_37aefe28
comisd  xmm0, qword ptr [eax]
jnb     short loc_37aecdd3
call    _abort
mov     eax, [ebp+var_4]
cvttsd2si eax, qword ptr [eax]
jmp     short loc_37aece04
mov     eax, [ebp+var_4]
movzx   eax, byte ptr [eax]
test    eax, eax
jz      short loc_37aecdef
mov     [ebp+var_c], 1
jmp     short loc_37aecdf3
and     [ebp+var_c], 0
mov     eax, [ebp+var_c]
jmp     short loc_37aece04
xor     eax, eax
inc     eax
jz      short def_37aecd83
call    _abort
xor     eax, eax
mov     esp, ebp
pop     ebp
retn
or      al, 0dch
push    ebp
mov     ebp, esp
sub     esp, 114h
mov     [ebp+var_8], ecx
and     [ebp+var_4], 0
mov     eax, [ebp+var_8]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
mov     [ebp+var_c], eax
cmp     [ebp+var_c], 0
jz      short loc_37aece7e
cmp     [ebp+var_c], 1
jz      loc_37aecf07
cmp     [ebp+var_c], 2
jz      loc_37aecf40
cmp     [ebp+var_c], 3
jz      loc_37aecf76
cmp     [ebp+var_c], 4
jz      short loc_37aece9c
cmp     [ebp+var_c], 5
jz      short loc_37aeced1
jmp     loc_37aecfb9
push    offset byte_37b699d0
mov     ecx, [ebp+arg_0]
call    loc_37a13d20
mov     eax, [ebp+var_4]
or      eax, 1
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
jmp     loc_37aecfd2
mov     eax, [ebp+var_8]
cmp     dword ptr [eax], 0
jz      short loc_37aeceae
mov     eax, [ebp+var_8]
mov     eax, [eax]
mov     [ebp+var_10], eax
jmp     short loc_37aeceb5
mov     [ebp+var_10], offset byte_37b699d1
push    [ebp+var_10]
mov     ecx, [ebp+arg_0]
call    loc_37a13d20
mov     eax, [ebp+var_4]
or      eax, 1
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
jmp     loc_37aecfd2
mov     eax, [ebp+var_8]
movzx   eax, byte ptr [eax]
test    eax, eax
jz      short loc_37aecee4
mov     [ebp+var_14], offset atrue
jmp     short loc_37aeceeb
mov     [ebp+var_14], offset afalse
push    [ebp+var_14]
mov     ecx, [ebp+arg_0]
call    loc_37a13d20
mov     eax, [ebp+var_4]
or      eax, 1
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
jmp     loc_37aecfd2
mov     eax, [ebp+var_8]
push    dword ptr [eax]
push    offset dword_37b699e4
lea     eax, [ebp+var_114]
push    eax
call    sub_37a9fbab
add     esp, 0ch
lea     eax, [ebp+var_114]
push    eax
mov     ecx, [ebp+arg_0]
call    loc_37a13d20
mov     eax, [ebp+var_4]
or      eax, 1
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
jmp     loc_37aecfd2
mov     eax, [ebp+var_8]
push    dword ptr [eax]
push    offset dword_37b699e8
lea     eax, [ebp+var_114]
push    eax
call    sub_37a9fbab
add     esp, 0ch
lea     eax, [ebp+var_114]
push    eax
mov     ecx, [ebp+arg_0]
call    loc_37a13d20
mov     eax, [ebp+var_4]
or      eax, 1
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
jmp     short loc_37aecfd2
mov     eax, [ebp+var_8]
cvtsd2ss xmm0, qword ptr [eax]
cvtss2sd xmm0, xmm0
push    ecx
push    ecx
movsd   [esp+11ch+var_11c], xmm0
push    offset dword_37b699ec
lea     eax, [ebp+var_114]
push    eax
call    sub_37a9fbab
add     esp, 10h
lea     eax, [ebp+var_114]
push    eax
mov     ecx, [ebp+arg_0]
call    loc_37a13d20
mov     eax, [ebp+var_4]
or      eax, 1
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
jmp     short loc_37aecfd2
push    offset word_37b699d2
mov     ecx, [ebp+arg_0]
call    loc_37a13d20
mov     eax, [ebp+var_4]
or      eax, 1
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
mov     esp, ebp
pop     ebp
retn    4
cld
jmp     short loc_37aed01a
mov     [eax-10h], esp
mov     bh, 0b2h
jl      short near ptr loc_37aecfc9+2
xchg    eax, edi
push    es
cmp     [edi], ebx
shl     dword ptr [ebp+19493ca7h], cl
sal     byte ptr [ecx], cl
dec     eax
test    [eax-46h], bh
clc
neg     edi
mov     al, [edi+3dh]
nop
daa
fldenv  byte ptr [eax-42h]
in      al, dx
leave
mov     dl, 0e8h
scasd
pop     esi
inc     esp
setalc
dec     edi
retn
jmp     dword ptr [ecx+79h]
jmp     near ptr 0b019310eh
dec     ecx
test    [ebx+6], edi
jp      short locret_37aed37d
sbb     al, 0bdh
lodsd
push    esp
ror     edx, 0e3h
xchg    eax, ebp
inc     esi
mov     ah, 18h
xchg    ebp, [edi+ebx*4-2ec2609ah]
icebp
xor     dl, [ebx]
fsubp   st(1), st
fucom   st(1)
xor     eax, 0c4e65b5eh
xchg    eax, esi
inc     ecx
sub     dh, [ecx]
shr     dword ptr [edi+42h], 1
cwde
jp      short loc_37aed312
js      short loc_37aed358
leave
repne mov al, ds:9432h
out     0b6h, al
fild    dword ptr [ebx-783cc3f1h]
xor     [ecx+6fd1cbfeh], cl
jb      short loc_37aed342
ficom   dword ptr [edi]
popf
cli
ror     byte ptr [ebp+37h], 1
mov     ebx, 0aad8b0afh
and     [edx], edi
and     ah, [ebx+7df9550ah]
aaa
mov     ecx, 5944dbb0h
xchg    eax, esi
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
cmp     eax, 1
jz      short loc_37aed3f9
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
cmp     eax, 2
jz      short loc_37aed3f9
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
cmp     eax, 5
jz      short loc_37aed3f9
and     [ebp+var_8], 0
jmp     short loc_37aed400
mov     [ebp+var_8], 1
mov     al, byte ptr [ebp+var_8]
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aed7c1
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 10h
mov     [ebp+var_1c], ecx
and     [ebp+var_4], 0
mov     eax, [ebp+arg_0]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     ecx, [ebp+var_14]
call    sub_37a1ca00
mov     [ebp-18h], eax
or      dword ptr [ebp-4], 0ffffffffh
push    dword ptr [ebp-18h]
mov     ecx, [ebp-1ch]
call    sub_37aed45f
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
sub     esp, 0ch
mov     [ebp+var_8], ecx
push    [ebp+arg_0]
mov     ecx, [ebp+var_8]
call    sub_37aec921
mov     [ebp+var_c], eax
cmp     [ebp+var_c], offset dword_37b69a58
jz      short loc_37aed488
mov     [ebp+var_4], 1
jmp     short loc_37aed48c
and     [ebp+var_4], 0
mov     al, byte ptr [ebp+var_4]
mov     esp, ebp
pop     ebp
retn    4
inc     ebx
mov     esp, 0c20b2e40h
test    byte ptr [esi+1ah], 7ch
sbb     al, al
jp      short loc_37aed4c2
fisub   word ptr [edx-2ffa1be8h]
sbb     esi, edx
loope   loc_37aed43d
int     3
push    ecx
jle     short loc_37aed50a
mov     dh, 6fh
retf    97deh
adc     [ebp-0f457406h], dl
retf
sar     dl, 1
movsd
dec     ebp
and     bh, dl
hlt
push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     [ebp+var_8], ecx
mov     eax, [ebp+var_8]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
cmp     eax, 4
jnz     short loc_37aed4f4
mov     [ebp+var_4], 1
jmp     short loc_37aed4f8
and     [ebp+var_4], 0
mov     al, byte ptr [ebp+var_4]
mov     esp, ebp
pop     ebp
retn
xlat
xchg    eax, ebp
lds     edi, es:[edx+1df83bbdh]
daa
jg      short loc_37aed577
mov     ds:49f08747h, eax
lea     edx, [ebp-75h]
in      al, dx
push    ecx
mov     [ebp-4], ecx
push    dword ptr [ebp+8]
mov     eax, [ebp-4]
mov     eax, [eax]
mov     ecx, [ebp-4]
call    dword ptr [eax+10h]
mov     esp, ebp
pop     ebp
retn    4
test    [ebp-3eh], bh
push    ebp
mov     ebp, esp
push    0ffffffffh
push    (offset loc_37ae00ba+1)
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 84h
mov     [ebp-14h], ecx
mov     eax, [ebp-14h]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
test    eax, eax
jnz     short loc_37aed5b8
push    7
lea     ecx, [ebp-90h]
call    sub_37aec1f7
mov     [ebp-34h], eax
mov     eax, [ebp-34h]
mov     [ebp-38h], eax
and     dword ptr [ebp-4], 0
push    dword ptr [ebp-38h]
mov     ecx, [ebp-14h]
call    nullsub_6
or      dword ptr [ebp-4], 0ffffffffh
lea     ecx, [ebp-90h]
call    sub_37aec3cd
movzx   eax, byte ptr [ebp+0ch]
test    eax, eax
jz      short loc_37aed5c6
and     dword ptr [ebp-18h], 0
jmp     short loc_37aed5cd
mov     dword ptr [ebp-18h], 2
push    dword ptr [ebp-18h]
push    dword ptr [ebp+8]
lea     ecx, [ebp-30h]
call    sub_37aebe27
mov     dword ptr [ebp-4], 1
lea     eax, [ebp-30h]
push    eax
lea     eax, [ebp-10h]
push    eax
mov     eax, [ebp-14h]
mov     ecx, [eax]
call    sub_37aa12a9
lea     eax, [ebp-68h]
push    eax
mov     eax, [ebp-14h]
mov     ecx, [eax]
call    sub_37aa1002
mov     [ebp-3ch], eax
mov     eax, [ebp-3ch]
mov     ecx, [ebp-10h]
cmp     ecx, [eax]
jnz     short loc_37aed618
mov     dword ptr [ebp-1ch], 1
jmp     short loc_37aed61c
and     dword ptr [ebp-1ch], 0
movzx   eax, byte ptr [ebp-1ch]
test    eax, eax
jnz     short loc_37aed62d
mov     dword ptr [ebp-20h], 1
jmp     short loc_37aed631
and     dword ptr [ebp-20h], 0
movzx   eax, byte ptr [ebp-20h]
test    eax, eax
jz      short loc_37aed672
mov     eax, [ebp-10h]
add     eax, 10h
mov     [ebp-40h], eax
lea     eax, [ebp-30h]
push    eax
mov     ecx, [ebp-40h]
call    near ptr loc_37aec52e+1
movzx   eax, al
test    eax, eax
jz      short loc_37aed672
mov     eax, [ebp-10h]
add     eax, 18h
mov     [ebp-44h], eax
or      dword ptr [ebp-4], 0ffffffffh
lea     ecx, [ebp-30h]
call    loc_37aec32a
mov     eax, [ebp-44h]
jmp     loc_37aed716
lea     eax, [ebp-30h]
mov     [ebp-48h], eax
push    dword ptr [ebp-48h]
lea     ecx, [ebp-80h]
call    loc_37aebd7e
mov     byte ptr [ebp-4], 2
mov     dword ptr [ebp-4ch], offset dword_37b69a58
push    dword ptr [ebp-4ch]
lea     ecx, [ebp-78h]
call    loc_37aebe87
mov     byte ptr [ebp-4], 3
mov     eax, [ebp-10h]
mov     [ebp-58h], eax
mov     eax, [ebp-14h]
mov     eax, [eax]
mov     [ebp-28h], eax
lea     eax, [ebp-80h]
mov     [ebp-50h], eax
mov     eax, [ebp-50h]
mov     [ebp-54h], eax
push    dword ptr [ebp-54h]
mov     ecx, [ebp-28h]
call    sub_37a9e46c
mov     [ebp-24h], eax
push    dword ptr [ebp-24h]
mov     eax, [ebp-24h]
add     eax, 10h
push    eax
push    dword ptr [ebp-58h]
lea     eax, [ebp-5ch]
push    eax
mov     ecx, [ebp-28h]
call    sub_37a9ee31
mov     eax, [ebp-5ch]
mov     [ebp-10h], eax
mov     eax, [ebp-10h]
add     eax, 18h
mov     [ebp-60h], eax
mov     eax, [ebp-60h]
mov     [ebp-64h], eax
mov     byte ptr [ebp-4], 1
lea     ecx, [ebp-78h]
call    sub_37aec3cd
lea     ecx, [ebp-80h]
call    loc_37aec32a
or      dword ptr [ebp-4], 0ffffffffh
lea     ecx, [ebp-30h]
call    loc_37aec32a
mov     eax, [ebp-64h]
mov     ecx, [ebp-0ch]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
cmp     dword ptr [eax], 0
jz      short loc_37aed751
call    sub_37aedaad
mov     eax, [eax]
mov     [ebp+var_8], eax
mov     eax, [ebp+var_4]
push    dword ptr [eax]
mov     eax, [ebp+var_8]
mov     eax, [eax]
mov     ecx, [ebp+var_8]
call    dword ptr [eax+10h]
mov     eax, [ebp+var_4]
cmp     dword ptr [eax], 7fffffffh
jb      short loc_37aed774
call    sub_37aed14d
mov     eax, [eax]
mov     [ebp+var_c], eax
push    [ebp+arg_0]
mov     eax, [ebp+var_c]
mov     eax, [eax]
mov     ecx, [ebp+var_c]
call    dword ptr [eax+10h]
xor     eax, eax
inc     eax
imul    eax, 0
mov     ecx, [ebp+arg_0]
movsx   eax, byte ptr [ecx+eax]
test    eax, eax
jz      short loc_37aed79c
xor     eax, eax
inc     eax
imul    eax, 0
mov     ecx, [ebp+arg_0]
movsx   eax, byte ptr [ecx+eax]
cmp     eax, 2fh
jz      short loc_37aed79c
call    _abort
call    sub_37aedaad
mov     eax, [eax]
mov     [ebp+var_10], eax
push    0ffffffffh
push    [ebp+arg_0]
mov     eax, [ebp+var_10]
mov     eax, [eax]
mov     ecx, [ebp+var_10]
call    dword ptr [eax+0ch]
mov     ecx, [ebp+var_4]
mov     [ecx], eax
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset seh_37aed7c1
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 10h
mov     [ebp+var_1c], ecx
and     [ebp+var_4], 0
mov     eax, [ebp+arg_0]
mov     [ebp+var_10], eax
mov     eax, [ebp+var_10]
mov     [ebp+var_14], eax
mov     ecx, [ebp+var_14]
call    sub_37a1ca00
mov     [ebp+var_18], eax
or      [ebp+var_4], 0ffffffffh
push    [ebp+arg_4]
push    [ebp+var_18]
mov     ecx, [ebp+var_1c]
call    sub_37aed81c
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
push    0ffffffffh
push    offset word_37ae00d2
mov     eax, large fs:0
push    eax
mov     large fs:0, esp
sub     esp, 10h
mov     [ebp+var_14], ecx
mov     eax, [ebp+var_14]
cmp     dword ptr [eax+0ch], 0
jnz     short loc_37aed89d
push    10h
call    unknown_libname_13
pop     ecx
mov     [ebp+var_10], eax
and     [ebp+var_4], 0
cmp     [ebp+var_10], 0
jz      short loc_37aed886
mov     eax, [ebp+var_10]
mov     dword ptr [eax], 3
push    offset loc_37aec380
push    offset loc_37aebe73
push    3
push    4
mov     eax, [ebp+var_10]
add     eax, 4
push    eax
call    ??_l@ygxpaxiip6ex0@z1@z
mov     eax, [ebp+var_10]
add     eax, 4
mov     [ebp+var_18], eax
jmp     short loc_37aed88a
and     [ebp+var_18], 0
mov     eax, [ebp+var_18]
mov     [ebp+var_1c], eax
or      [ebp+var_4], 0ffffffffh
mov     eax, [ebp+var_14]
mov     ecx, [ebp+var_1c]
mov     [eax+0ch], ecx
push    [ebp+arg_0]
mov     eax, [ebp+var_14]
mov     eax, [eax+0ch]
mov     ecx, [ebp+arg_4]
lea     ecx, [eax+ecx*4]
call    sub_37aed726
mov     ecx, [ebp+var_c]
mov     large fs:0, ecx
mov     esp, ebp
pop     ebp
retn    8
push    ebp
mov     ebp, esp
sub     esp, 28h
mov     [ebp-4], ecx
mov     eax, [ebp-4]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
mov     [ebp-10h], eax
mov     eax, [ebp+8]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
and     eax, 0ffh
mov     ecx, [ebp-4]
mov     ecx, [ecx+8]
and     ecx, 0ffffff00h
or      ecx, eax
mov     eax, [ebp-4]
mov     [eax+8], ecx
mov     eax, [ebp-10h]
and     eax, 0ffh
mov     ecx, [ebp+8]
mov     ecx, [ecx+8]
and     ecx, 0ffffff00h
or      ecx, eax
mov     eax, [ebp+8]
mov     [eax+8], ecx
mov     eax, [ebp+8]
mov     [ebp-0ch], eax
mov     eax, [ebp-4]
mov     [ebp-8], eax
mov     eax, [ebp-8]
mov     [ebp-14h], eax
mov     eax, [ebp-14h]
mov     ecx, [eax]
mov     eax, [eax+4]
mov     [ebp-28h], ecx
mov     [ebp-24h], eax
mov     eax, [ebp-0ch]
mov     [ebp-18h], eax
mov     eax, [ebp-18h]
mov     ecx, [eax]
mov     eax, [eax+4]
mov     edx, [ebp-8]
mov     [edx], ecx
mov     [edx+4], eax
lea     eax, [ebp-28h]
mov     [ebp-1ch], eax
mov     eax, [ebp-1ch]
mov     ecx, [eax]
mov     eax, [eax+4]
mov     edx, [ebp-0ch]
mov     [edx], ecx
mov     [edx+4], eax
mov     eax, [ebp-4]
mov     eax, [eax+8]
shl     eax, 17h
sar     eax, 1fh
mov     [ebp-20h], eax
mov     eax, [ebp+8]
mov     eax, [eax+8]
shl     eax, 17h
sar     eax, 1fh
and     eax, 1
shl     eax, 8
mov     ecx, [ebp-4]
mov     ecx, [ecx+8]
and     ecx, 0fffffeffh
or      ecx, eax
mov     eax, [ebp-4]
mov     [eax+8], ecx
mov     eax, [ebp-20h]
and     eax, 1
shl     eax, 8
mov     ecx, [ebp+8]
mov     ecx, [ecx+8]
and     ecx, 0fffffeffh
or      ecx, eax
mov     eax, [ebp+8]
mov     [eax+8], ecx
mov     esp, ebp
pop     ebp
retn    4
push    ebp
mov     ebp, esp
push    ecx
mov     [ebp+var_4], ecx
mov     eax, [ebp+var_4]
mov     eax, [eax+8]
shl     eax, 18h
sar     eax, 18h
mov     esp, ebp
pop     ebp
retn
push    ebp
mov     ebp, esp
mov     eax, offset dword_37b699f8
pop     ebp
retn
offset __catch$?callunexpected@@yaxpbu_s_estypelist@@@z$0>
offset __catch$?_copyexception@__exceptionptr@@sa?av?$shared_ptr@v__exceptionptr@@@std@@pbxpbu_s_throwinfo@@_n@z$0>
offset __catch$?_copyexception@__exceptionptr@@sa?av?$shared_ptr@v__exceptionptr@@@std@@pbxpbu_s_throwinfo@@_n@z$1>
offset __catch$?_callcopyctor@__exceptionptr@@abexpax0iqbu_s_catchabletype@@@z$0>
offset __catch$??$allocate_shared@v__exceptionptr@@u?$_staticallocator@h@@aapauehexceptionrecord@@_n@std@@ya?av?$shared_ptr@v__exceptionptr@@@0@abu?$_staticallocator@h@@aapauehexceptionrecord@@$$qa_n@z$0>