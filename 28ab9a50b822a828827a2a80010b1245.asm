push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
cmp     dword_41cec4, 0
jz      short loc_401031
jmp     short loc_401031
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     ecx, [esp+arg_4]
mov     eax, ecx
dec     eax
jz      short loc_40105a
dec     eax
jz      short loc_401053
mov     eax, 80000000h
jmp     short loc_40105f
mov     eax, 0c0000000h
jmp     short loc_40105f
mov     eax, 40000000h
xor     edx, edx
push    0
cmp     ecx, 1
push    80h
push    3
push    0
setnz   dl
push    edx
push    eax
mov     eax, [esp+18h+lpfilename]
push    eax
call    ds:createfilea
cmp     eax, 0ffffffffh
jnz     short locret_40108d
call    ds:getlasterror
or      eax, 0ffffffffh
retn
mov     eax, [esp+lpfilename]
push    0
push    80h
push    2
push    0
push    0
push    40000000h
push    eax
call    ds:createfilea
cmp     eax, 0ffffffffh
jnz     short locret_4010bb
call    ds:getlasterror
or      eax, 0ffffffffh
retn
mov     ecx, [esp+lpbuffer]
mov     edx, [esp+hfile]
push    esi
mov     esi, [esp+4+nnumberofbytestoread]
lea     eax, [esp+4+nnumberofbytestoread]
push    0
push    eax
push    esi
push    ecx
push    edx
call    ds:readfile
test    eax, eax
jnz     short loc_4010ee
call    ds:getlasterror
mov     eax, 1
pop     esi
retn
mov     ecx, [esp+4+nnumberofbytestoread]
xor     eax, eax
cmp     ecx, esi
pop     esi
setnz   al
retn
mov     ecx, [esp+lpbuffer]
mov     edx, [esp+hfile]
push    esi
mov     esi, [esp+4+nnumberofbytestowrite]
lea     eax, [esp+4+nnumberofbytestowrite]
push    0
push    eax
push    esi
push    ecx
push    edx
call    ds:writefile
test    eax, eax
jnz     short loc_40112e
call    ds:getlasterror
mov     eax, 2
pop     esi
retn
mov     eax, [esp+4+nnumberofbytestowrite]
sub     eax, esi
pop     esi
neg     eax
sbb     eax, eax
and     eax, 3
retn
mov     eax, [esp+hfile]
push    1
push    0
push    0
push    eax
call    ds:setfilepointer
retn
mov     eax, [esp+ldistancetomove]
mov     ecx, [esp+hfile]
push    0
push    0
push    eax
push    ecx
call    ds:setfilepointer
retn
mov     eax, [esp+ldistancetomove]
mov     ecx, [esp+hfile]
push    1
push    0
push    eax
push    ecx
call    ds:setfilepointer
retn
mov     eax, [esp+ldistancetomove]
mov     ecx, [esp+hfile]
push    2
push    0
push    eax
push    ecx
call    ds:setfilepointer
retn
push    ebx
push    ebp
push    esi
mov     esi, [esp+0ch+hfile]
push    edi
mov     edi, ds:setfilepointer
push    1
push    0
push    0
push    esi
call    edi
push    2
push    0
push    0
push    esi
mov     ebx, eax
call    edi
push    0
push    0
push    ebx
push    esi
mov     ebp, eax
call    edi
pop     edi
mov     eax, ebp
pop     esi
pop     ebp
pop     ebx
retn
push    ebx
push    ebp
mov     ebx, [esp+8+hfile]
push    esi
mov     esi, [esp+0ch+buffer]
xor     ebp, ebp
push    edi
mov     cl, [esi+2]
mov     eax, [esi+4]
test    cl, 1
mov     [esp+10h+buffer], eax
jz      short loc_401233
lea     eax, [esp+10h+buffer]
push    4
push    eax
push    ebx
call    sub_4010c0
mov     ebp, eax
mov     eax, [esp+1ch+buffer]
add     esp, 0ch
mov     ecx, [esp+10h+arg_c]
test    ecx, ecx
jz      short loc_40123d
mov     [ecx], eax
test    ebp, ebp
jnz     short loc_4012b8
mov     edi, [esp+10h+arg_8]
push    edi
push    eax
call    sub_4020e0
add     esp, 8
test    eax, eax
jnz     short loc_40125d
pop     edi
pop     esi
pop     ebp
mov     eax, 5
pop     ebx
retn
mov     al, [esi+2]
mov     ecx, [esi+4]
test    al, 1
jz      short loc_401295
mov     edx, [esp+10h+buffer]
mov     eax, [edi]
sub     ecx, 4
push    ecx
push    edx
push    ebx
push    eax
call    sub_403570
add     esp, 10h
test    eax, eax
jz      short loc_4012b8
push    edi
mov     esi, 1fh
call    sub_402160
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
mov     edx, [edi]
push    ecx
push    edx
push    ebx
call    sub_4010c0
mov     esi, eax
add     esp, 0ch
test    esi, esi
jz      short loc_4012b1
push    edi
call    sub_402160
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
pop     edi
mov     eax, ebp
pop     esi
pop     ebp
pop     ebx
retn
mov     eax, [esp+hobject]
push    eax
call    ds:closehandle
retn
push    esi
mov     esi, [esp+4+filename]
push    edi
push    2
push    esi
xor     edi, edi
call    __access
add     esp, 8
test    eax, eax
jz      short loc_401366
cmp     dword_41cedc, 0dh
jz      short loc_4012f5
pop     edi
xor     eax, eax
pop     esi
retn
push    180h
push    esi
call    __chmod
push    2
push    esi
call    __access
add     esp, 10h
test    eax, eax
jz      short loc_401322
cmp     dword_41cedc, 0dh
jnz     short loc_401322
mov     edi, 1
mov     eax, edi
pop     edi
pop     esi
retn
push    2
push    esi
call    sub_401040
add     esp, 8
cmp     eax, 0ffffffffh
jnz     short loc_40134a
push    100h
push    esi
mov     edi, 1
call    __chmod
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
retn
push    eax
call    sub_4012c0
add     esp, 4
push    100h
push    esi
call    __chmod
add     esp, 8
mov     eax, edi
pop     edi
pop     esi
retn
push    2
push    esi
call    sub_401040
add     esp, 8
cmp     eax, 0ffffffffh
jnz     short loc_401380
mov     edi, 1
mov     eax, edi
pop     edi
pop     esi
retn
push    eax
call    sub_4012c0
add     esp, 4
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 10h
mov     eax, [esp+10h+arg_4]
mov     edx, [esp+10h+arg_c]
mov     ecx, [esp+10h+arg_8]
mov     [esp+10h+rect.left], eax
add     eax, edx
mov     [esp+10h+rect.top], ecx
mov     [esp+10h+rect.right], eax
mov     eax, [esp+10h+arg_10]
add     ecx, eax
push    esi
mov     esi, [esp+14h+hdc]
mov     [esp+14h+rect.bottom], ecx
mov     ecx, [esp+14h+color]
push    ecx
push    esi
call    ds:setbkcolor
push    0
push    0
lea     edx, [esp+1ch+rect]
push    0
push    edx
push    2
push    0
push    0
push    esi
call    ds:exttextouta
pop     esi
add     esp, 10h
retn
push    esi
mov     esi, [esp+4+plpal]
push    edi
xor     edi, edi
cmp     word ptr [esi+0eh], 8
jnz     loc_4014e5
lea     eax, [esp+8+plpal]
push    eax
push    404h
call    sub_4020e0
add     esp, 8
test    eax, eax
jz      loc_4014e5
mov     ecx, [esp+8+plpal]
push    ebx
mov     word ptr [ecx], 300h
mov     edx, [esp+0ch+plpal]
lea     ecx, [esi+28h]
mov     word ptr [edx+2], 100h
mov     eax, [esp+0ch+plpal]
add     eax, 4
xor     esi, esi
mov     edx, 4
mov     bl, [ecx+2]
cmp     esi, 0ah
mov     [eax], bl
mov     bl, [ecx+1]
mov     [eax+1], bl
mov     bl, [ecx]
mov     [eax+2], bl
mov     byte ptr [eax+3], 0
jl      short loc_401463
cmp     esi, 0f6h
jl      short loc_401466
mov     [eax+3], dl
inc     esi
add     eax, edx
add     ecx, edx
cmp     esi, 100h
jl      short loc_401442
mov     esi, [esp+0ch+hdc]
mov     edi, ds:getdevicecaps
push    0eh
push    esi
call    edi
push    0ch
push    esi
mov     ebx, eax
call    edi
imul    ebx, eax
cmp     ebx, 8
pop     ebx
jnz     short loc_4014c6
push    26h
push    esi
call    edi
test    ah, 1
jz      short loc_4014c6
mov     ecx, [esp+8+plpal]
mov     edi, ds:getsystempaletteentries
add     ecx, 4
push    ecx
push    0ah
push    0
push    esi
call    edi
mov     edx, [esp+8+plpal]
add     edx, 3dch
push    edx
push    0ah
push    0f6h
push    esi
call    edi
mov     eax, [esp+8+plpal]
push    eax
call    ds:createpalette
lea     ecx, [esp+8+plpal]
mov     esi, eax
push    ecx
call    sub_402160
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
retn
mov     eax, edi
pop     edi
pop     esi
retn
sub     esp, 60h
mov     eax, [esp+60h+arg_8]
push    ebx
push    ebp
xor     ebx, ebx
xor     ebp, ebp
push    esi
cmp     eax, ebx
push    edi
mov     [esp+70h+ho], ebx
mov     [esp+70h+lpbits], ebp
jz      short loc_401514
add     eax, 0eh
mov     [esp+70h+lpbits], eax
mov     ebp, eax
mov     esi, [esp+70h+hwnd]
lea     eax, [esp+70h+rect]
push    eax
push    esi
call    ds:getclientrect
lea     ecx, [esp+70h+paint]
push    ecx
push    esi
call    ds:beginpaint
mov     edi, eax
cmp     edi, ebx
jz      loc_4016ed
mov     esi, ds:getdevicecaps
push    0eh
push    edi
mov     [esp+78h+arg_8], ebx
call    esi
mov     edx, eax
push    0ch
push    edi
mov     [esp+78h+h], edx
call    esi
mov     edx, [esp+70h+h]
imul    edx, eax
cmp     edx, 8
jg      short loc_4015a3
cmp     ebp, ebx
jz      short loc_401580
cmp     word ptr [ebp+0eh], 8
jnz     short loc_401580
push    ebp
push    edi
call    sub_4013f0
add     esp, 8
cmp     eax, ebx
mov     [esp+70h+ho], eax
jnz     short loc_40158f
push    edi
call    ds:createhalftonepalette
cmp     eax, ebx
mov     [esp+70h+ho], eax
jz      short loc_4015a3
push    ebx
push    eax
push    edi
call    ds:selectpalette
push    edi
mov     [esp+74h+hpal], eax
call    ds:realizepalette
push    edi
call    ds:createcompatibledc
mov     esi, eax
cmp     esi, ebx
jz      loc_401689
mov     eax, [esp+70h+rect.bottom]
mov     edx, [esp+70h+rect.top]
mov     ecx, [esp+70h+rect.right]
mov     ebx, [esp+70h+rect.left]
sub     eax, edx
sub     ecx, ebx
push    eax
push    ecx
push    edi
call    ds:createcompatiblebitmap
mov     ebx, eax
test    ebx, ebx
jz      loc_40167a
mov     ebp, ds:selectobject
push    ebx
push    esi
call    ebp
mov     ecx, [esp+70h+arg_4]
mov     [esp+70h+h], eax
lea     edx, [esp+70h+paint.rcpaint]
lea     eax, [esp+70h+rect]
push    edx
push    eax
push    ecx
push    esi
call    sub_401710
mov     eax, [esp+80h+lpbits]
add     esp, 10h
test    eax, eax
jz      short loc_40161f
mov     edx, [esp+70h+arg_4]
mov     ecx, [edx]
lea     edx, [esp+70h+rect]
push    ecx
push    edx
push    eax
push    esi
call    sub_401ab0
add     esp, 10h
mov     eax, [esp+70h+arg_10]
mov     ecx, [esp+70h+lpchtext]
push    eax
push    ecx
push    esi
call    sub_401cb0
mov     eax, [esp+7ch+paint.rcpaint.top]
mov     ecx, [esp+7ch+paint.rcpaint.left]
mov     edx, [esp+7ch+paint.rcpaint.bottom]
add     esp, 0ch
sub     edx, eax
push    0cc0020h
push    eax
push    ecx
push    esi
push    edx
mov     edx, [esp+84h+paint.rcpaint.right]
sub     edx, ecx
push    edx
push    eax
push    ecx
push    edi
call    ds:bitblt
mov     eax, [esp+70h+h]
mov     [esp+70h+arg_8], 1
push    eax
push    esi
call    ebp
push    ebx
call    ds:deleteobject
mov     ebp, [esp+70h+lpbits]
push    esi
call    ds:deletedc
mov     eax, [esp+70h+arg_8]
test    eax, eax
jnz     short loc_4016d0
mov     esi, [esp+70h+arg_4]
lea     ecx, [esp+70h+paint.rcpaint]
lea     edx, [esp+70h+rect]
push    ecx
push    edx
push    esi
push    edi
call    sub_401710
add     esp, 10h
test    ebp, ebp
jz      short loc_4016b7
mov     eax, [esi]
lea     ecx, [esp+70h+rect]
push    eax
push    ecx
push    ebp
push    edi
call    sub_401ab0
add     esp, 10h
mov     edx, [esp+70h+arg_10]
mov     eax, [esp+70h+lpchtext]
push    edx
push    eax
push    edi
call    sub_401cb0
add     esp, 0ch
mov     esi, [esp+70h+ho]
test    esi, esi
jz      short loc_4016ed
mov     ecx, [esp+70h+hpal]
push    1
push    ecx
push    edi
call    ds:selectpalette
push    esi
call    ds:deleteobject
mov     eax, [esp+70h+hwnd]
lea     edx, [esp+70h+paint]
push    edx
push    eax
call    ds:endpaint
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 60h
retn
mov     eax, [esp+arg_4]
sub     esp, 54h
mov     cl, [eax]
push    ebx
push    ebp
push    esi
test    cl, 4
push    edi
jnz     short loc_40175e
mov     eax, [eax+4]
push    eax
call    ds:createsolidbrush
mov     edi, [esp+64h+hdc]
mov     ebx, ds:selectobject
mov     esi, eax
push    esi
push    edi
call    ebx
mov     ecx, [esp+64h+lprc]
push    esi
push    ecx
push    edi
mov     ebp, eax
call    ds:fillrect
push    ebp
push    edi
call    ebx
push    esi
call    ds:deleteobject
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 54h
retn
mov     cl, [eax+4]
mov     edi, [esp+64h+arg_8]
mov     byte ptr [esp+64h+var_54], cl
xor     ecx, ecx
mov     cl, [eax+5]
mov     edx, [edi+4]
mov     byte ptr [esp+64h+arg_8], cl
mov     ecx, [eax+4]
shr     ecx, 10h
mov     [esp+64h+var_40], edx
mov     edx, [esp+64h+var_54]
mov     byte ptr [esp+64h+arg_4], cl
xor     ecx, ecx
mov     cl, [eax+8]
and     edx, 0ffh
mov     ebx, [eax+8]
sub     ecx, edx
mov     edx, [esp+64h+arg_8]
mov     [esp+64h+var_38], ecx
xor     ecx, ecx
mov     esi, [edi+0ch]
mov     cl, [eax+9]
mov     eax, [esp+64h+arg_4]
mov     ebp, ds:getdevicecaps
and     ecx, 0ffh
and     edx, 0ffh
and     eax, 0ffh
sub     ecx, edx
push    0eh
shr     ebx, 10h
mov     [esp+68h+var_3c], ecx
mov     ecx, [esp+68h+hdc]
and     ebx, 0ffh
push    ecx
sub     ebx, eax
mov     [esp+6ch+var_48], esi
mov     [esp+6ch+var_4c], ebx
mov     [esp+6ch+var_50], 0ffffffffh
call    ebp
mov     edx, eax
mov     eax, [esp+64h+hdc]
push    0ch
push    eax
mov     [esp+6ch+h], edx
call    ebp
mov     ecx, [esp+64h+h]
imul    ecx, eax
cmp     ecx, 8
jle     loc_4019a2
mov     eax, dword_41ce4c
test    eax, eax
jnz     loc_4019a2
push    0e8h
push    42h
call    ds:globalalloc
mov     ebp, eax
push    ebp
mov     [esp+68h+h], ebp
call    ds:globallock
mov     ecx, 8
mov     dword ptr [eax], 28h
mov     [eax+4], ecx
mov     [eax+8], ecx
mov     word ptr [eax+0ch], 1
mov     word ptr [eax+0eh], 18h
mov     dword ptr [eax+14h], 0c0h
mov     ecx, [edi+8]
lea     edx, [eax+28h]
mov     eax, [edi]
mov     [esp+64h+rc.right], ecx
xor     ecx, ecx
test    esi, esi
mov     [esp+64h+var_34], edx
mov     [esp+64h+rc.left], eax
mov     [esp+64h+var_50], ecx
jle     loc_40198c
mov     ebp, esi
imul    ebp, esi
jmp     short loc_401883
mov     ebx, [esp+64h+var_4c]
mov     edx, [esp+64h+var_40]
lea     edi, [esp+64h+var_20]
mov     [esp+64h+lprc], 8
lea     eax, [ecx+edx]
mov     [esp+64h+rc.top], eax
add     eax, 8
mov     [esp+64h+rc.bottom], eax
jmp     short loc_4018ab
mov     esi, [esp+64h+var_48]
mov     ebx, [esp+64h+var_4c]
cmp     esi, ecx
jl      short loc_4018b1
mov     esi, ecx
imul    esi, esi
mov     eax, esi
add     ecx, 8
imul    eax, ebx
cdq
idiv    ebp
mov     bl, byte ptr [esp+64h+arg_4]
add     edi, 4
add     al, bl
xor     ebx, ebx
mov     bh, al
mov     eax, esi
imul    eax, [esp+64h+var_3c]
cdq
idiv    ebp
add     al, byte ptr [esp+64h+arg_8]
mov     bl, al
mov     eax, esi
imul    eax, [esp+64h+var_38]
cdq
idiv    ebp
mov     dl, byte ptr [esp+64h+var_54]
shl     ebx, 8
add     al, dl
and     eax, 0ffh
or      ebx, eax
mov     eax, [esp+64h+lprc]
mov     [edi-4], ebx
dec     eax
mov     [esp+64h+lprc], eax
jnz     short loc_4018a3
mov     eax, [esp+64h+var_34]
mov     esi, offset dword_4180e0
mov     edi, 8
mov     ecx, [esi]
add     esi, 4
mov     ecx, [esp+ecx*4+64h+var_20]
mov     edx, ecx
shr     edx, 10h
mov     [eax], dl
xor     edx, edx
inc     eax
mov     dl, ch
mov     [eax], dl
inc     eax
mov     [eax], cl
inc     eax
dec     edi
jnz     short loc_401912
cmp     esi, offset ablue
jl      short loc_40190d
mov     eax, [esp+64h+h]
push    0
push    eax
call    ds:createdibpatternbrush
mov     edi, [esp+64h+hdc]
mov     esi, eax
push    esi
push    edi
call    ds:selectobject
lea     ecx, [esp+64h+rc]
push    esi
push    ecx
push    edi
mov     ebx, eax
call    ds:fillrect
push    ebx
push    edi
call    ds:selectobject
push    esi
call    ds:deleteobject
mov     ecx, [esp+64h+var_50]
mov     esi, [esp+64h+var_48]
add     ecx, 8
cmp     ecx, esi
mov     [esp+64h+var_50], ecx
jl      loc_40187f
mov     ebp, [esp+64h+h]
push    ebp
call    ds:globalunlock
push    ebp
call    ds:globalfree
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 54h
retn
mov     eax, [esp+64h+lprc]
mov     ecx, [eax+8]
mov     edi, [eax+4]
mov     edx, [eax]
mov     [esp+64h+rc.right], ecx
mov     ecx, [eax+0ch]
mov     [esp+64h+rc.left], edx
cmp     edi, ecx
jg      loc_401aa5
mov     ebp, esi
imul    ebp, esi
mov     edx, [esp+64h+var_40]
mov     esi, edi
imul    esi, edi
lea     eax, [edi+edx]
mov     cl, byte ptr [esp+64h+arg_4]
mov     [esp+64h+rc.top], eax
inc     eax
mov     [esp+64h+rc.bottom], eax
mov     eax, esi
imul    eax, ebx
cdq
idiv    ebp
add     al, cl
xor     ecx, ecx
mov     ch, al
mov     eax, esi
imul    eax, [esp+64h+var_3c]
cdq
idiv    ebp
add     al, byte ptr [esp+64h+arg_8]
mov     cl, al
mov     eax, esi
imul    eax, [esp+64h+var_38]
cdq
idiv    ebp
mov     dl, byte ptr [esp+64h+var_54]
shl     ecx, 8
add     al, dl
and     eax, 0ffh
or      ecx, eax
mov     eax, [esp+64h+var_50]
mov     esi, ecx
cmp     esi, eax
jz      short loc_401a64
cmp     eax, 0ffffffffh
jz      short loc_401a41
mov     edx, [esp+64h+var_48]
mov     eax, [esp+64h+hdc]
push    edx
push    eax
call    ds:selectobject
mov     ecx, [esp+64h+h]
push    ecx
call    ds:deleteobject
push    esi
mov     [esp+68h+var_50], esi
call    ds:createsolidbrush
mov     edx, [esp+64h+hdc]
mov     esi, eax
push    esi
push    edx
mov     [esp+6ch+h], esi
call    ds:selectobject
mov     [esp+64h+var_48], eax
jmp     short loc_401a68
mov     esi, [esp+64h+h]
mov     ecx, [esp+64h+hdc]
lea     eax, [esp+64h+rc]
push    esi
push    eax
push    ecx
call    ds:fillrect
mov     edx, [esp+64h+lprc]
inc     edi
cmp     edi, [edx+0ch]
jle     loc_4019c6
cmp     [esp+64h+var_50], 0ffffffffh
jz      short loc_401aa5
mov     eax, [esp+64h+var_48]
mov     ecx, [esp+64h+hdc]
push    eax
push    ecx
call    ds:selectobject
push    esi
call    ds:deleteobject
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 54h
retn
push    ebx
push    ebp
push    esi
mov     esi, [esp+0ch+lpbits]
push    edi
mov     ecx, [esi+20h]
lea     eax, [esi+28h]
test    ecx, ecx
jz      short loc_401ad0
shl     cx, 2
and     ecx, 0ffffh
add     eax, ecx
jmp     short loc_401ae2
mov     cl, [esi+0eh]
mov     edx, 4
shl     edx, cl
and     edx, 0ffffh
add     eax, edx
mov     edx, [esp+10h+arg_c]
mov     [esp+10h+lpbits], eax
test    dl, 40h
jz      short loc_401b58
mov     edi, [esp+10h+mode]
mov     ebp, [edi+4]
mov     eax, [edi+0ch]
cmp     ebp, eax
jge     loc_401ca2
mov     ebx, [edi]
mov     eax, [edi+8]
cmp     ebx, eax
jge     short loc_401b47
mov     eax, [esi+4]
mov     edx, [esp+10h+lpbits]
mov     ecx, [esi+8]
push    0cc0020h
push    0
push    esi
push    edx
push    ecx
push    eax
push    0
mov     edx, [esp+2ch+hdc]
push    0
push    ecx
mov     ecx, [edi]
push    eax
mov     eax, [edi+4]
add     ecx, ebx
add     eax, ebp
push    eax
push    ecx
push    edx
call    ds:stretchdibits
mov     eax, [esi+4]
mov     ecx, [edi+8]
add     ebx, eax
cmp     ebx, ecx
jl      short loc_401b0d
mov     ecx, [esi+8]
mov     eax, [edi+0ch]
add     ebp, ecx
cmp     ebp, eax
jl      short loc_401b01
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
test    dl, 20h
jz      loc_401c11
mov     edi, [esp+10h+mode]
mov     ecx, [esi+4]
mov     [esp+10h+arg_c], 0
mov     ebx, [edi+8]
mov     ebp, [edi]
mov     edx, [edi+4]
sub     ebx, ebp
mov     ebp, [edi+0ch]
sub     ebp, edx
cmp     ebx, ecx
jnz     short loc_401b88
cmp     ebp, [esi+8]
jz      short loc_401bb6
mov     eax, [esp+10h+hdc]
push    4
push    eax
mov     [esp+18h+arg_c], 1
call    ds:setstretchbltmode
mov     ecx, [esp+10h+hdc]
push    0
push    0
push    0
push    ecx
mov     [esp+20h+mode], eax
call    ds:setbrushorgex
mov     eax, [esp+10h+lpbits]
mov     edx, [esi+8]
push    0cc0020h
push    0
mov     ecx, [edi+4]
push    esi
push    eax
mov     eax, [esi+4]
mov     esi, [esp+20h+hdc]
push    edx
mov     edx, [edi]
push    eax
push    0
push    0
push    ebp
push    ebx
push    ecx
push    edx
push    esi
call    ds:stretchdibits
mov     eax, [esp+10h+arg_c]
test    eax, eax
jz      loc_401ca2
mov     eax, [esp+10h+mode]
test    eax, eax
jz      loc_401ca2
push    eax
push    esi
call    ds:setstretchbltmode
push    0
push    0
push    0
push    esi
call    ds:setbrushorgex
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
mov     ebp, [esp+10h+mode]
mov     eax, [ebp+0ch]
mov     ecx, [ebp+4]
mov     edi, [ebp+0]
mov     ebx, eax
sub     ebx, ecx
mov     [esp+10h+mode], eax
test    dh, 1
jz      short loc_401c40
mov     eax, [ebp+8]
mov     edx, [esi+4]
sub     eax, edx
sub     eax, edi
cdq
sub     eax, edx
sar     eax, 1
mov     edi, eax
mov     eax, [esp+10h+mode]
mov     edx, [esp+10h+arg_c]
test    dh, 2
jz      short loc_401c51
mov     edi, [ebp+8]
mov     edx, [esi+4]
sub     edi, edx
mov     edx, [esp+10h+arg_c]
test    dh, 10h
jz      short loc_401c6c
mov     edx, [esi+8]
mov     eax, ebx
sub     eax, edx
cdq
sub     eax, edx
mov     ecx, eax
mov     eax, [esp+10h+mode]
sar     ecx, 1
mov     edx, [esp+10h+arg_c]
test    dh, 20h
jz      short loc_401c7a
sub     eax, [esi+8]
mov     ecx, eax
mov     eax, [esi+8]
mov     edx, [esi+4]
push    0cc0020h
push    0
push    esi
mov     esi, [esp+1ch+lpbits]
push    esi
push    eax
push    edx
push    0
push    0
push    eax
mov     eax, [esp+34h+hdc]
push    edx
push    ecx
push    edi
push    eax
call    ds:stretchdibits
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
sub     esp, 14h
push    ebx
push    ebp
mov     ebp, [esp+1ch+lpchtext]
test    ebp, ebp
jz      loc_401dbf
cmp     byte ptr [ebp+0], 0
jz      loc_401dbf
mov     ebx, [esp+1ch+h]
test    ebx, ebx
jz      loc_401dbf
push    edi
mov     edi, ebp
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
mov     [esp+20h+h], eax
lea     eax, [ebx+0ch]
dec     ecx
push    eax
mov     [esp+24h+lpchtext], ecx
call    ds:createfontindirecta
mov     edi, [esp+20h+hdc]
mov     [esp+20h+ho], eax
test    eax, eax
jz      short loc_401d0e
push    eax
push    edi
call    ds:selectobject
mov     [esp+20h+h], eax
push    esi
push    1
push    edi
call    ds:setbkmode
mov     esi, [ebx+8]
push    0
neg     esi
sbb     esi, esi
mov     [esp+28h+rc.left], 0eh
and     esi, 2
add     esi, 900h
call    ds:getsystemmetrics
sub     eax, 0eh
push    1
mov     [esp+28h+rc.right], eax
mov     [esp+28h+rc.top], 0eh
call    ds:getsystemmetrics
mov     ecx, [ebx]
sub     eax, 0eh
push    ecx
push    edi
mov     [esp+2ch+rc.bottom], eax
call    ds:settextcolor
mov     eax, [esp+24h+lpchtext]
lea     edx, [esp+24h+rc]
push    esi
push    edx
push    eax
push    ebp
push    edi
call    ds:drawtexta
mov     ecx, [ebx+4]
mov     eax, 0ah
push    ecx
push    edi
mov     [esp+2ch+rc.left], eax
mov     [esp+2ch+rc.top], eax
call    ds:settextcolor
mov     eax, [esp+24h+lpchtext]
lea     edx, [esp+24h+rc]
push    esi
push    edx
push    eax
push    ebp
push    edi
call    ds:drawtexta
mov     eax, [esp+24h+h]
pop     esi
test    eax, eax
jz      short loc_401daf
push    eax
push    edi
call    ds:selectobject
mov     eax, [esp+20h+ho]
pop     edi
test    eax, eax
jz      short loc_401dbf
push    eax
call    ds:deleteobject
pop     ebp
pop     ebx
add     esp, 14h
retn
mov     eax, [esp+hdlg]
push    3f1h
push    eax
mov     hdlg, eax
call    ds:getdlgitem
push    640000h
push    0
push    401h
push    eax
mov     hwnd, eax
call    ds:sendmessagea
retn
sub     esp, 8
push    esi
mov     esi, [esp+0ch+wparam]
cmp     esi, 64h
jbe     short loc_401e12
mov     esi, 64h
mov     eax, hdlg
mov     dword_41cc20, esi
test    eax, eax
jz      short loc_401e55
push    esi
lea     eax, [esp+10h+str]
push    offset ad
push    eax
call    ds:wsprintfa
mov     edx, hdlg
add     esp, 0ch
lea     ecx, [esp+0ch+str]
push    ecx
push    3f2h
push    edx
call    ds:getdlgitem
push    eax
call    sub_405680
add     esp, 8
mov     eax, hwnd
test    eax, eax
jz      short loc_401e6d
push    0
push    esi
push    402h
push    eax
call    ds:sendmessagea
pop     esi
add     esp, 8
retn
push    ecx
mov     eax, hdlg
test    eax, eax
jz      short loc_401f00
lea     eax, [esp+4+str]
push    eax
push    104h
call    sub_4020e0
add     esp, 8
test    eax, eax
jz      short loc_401f00
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
or      ecx, 0ffffffffh
xor     eax, eax
push    1eh
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, [esp+10h+str]
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, [esp+10h+str]
push    eax
call    sub_401f10
mov     ecx, [esp+14h+str]
mov     edx, hdlg
add     esp, 8
push    ecx
push    3f0h
push    edx
call    ds:getdlgitem
push    eax
call    sub_405680
lea     eax, [esp+14h+str]
push    eax
call    sub_402160
add     esp, 0ch
pop     edi
pop     esi
pop     ecx
retn
push    ebx
push    ebp
mov     ebp, [esp+8+str]
push    esi
push    edi
mov     edi, ebp
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
mov     eax, [esp+10h+arg_4]
not     ecx
dec     ecx
cmp     ecx, eax
jbe     loc_401fcd
push    5ch
push    ebp
call    _strchr
mov     esi, eax
add     esp, 8
test    esi, esi
jz      loc_401fcd
push    5ch
push    ebp
call    _strrchr
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jz      short loc_401fcd
sub     eax, esi
cmp     eax, 4
jl      short loc_401fcd
mov     edx, esi
mov     ecx, ebx
sub     ecx, edx
inc     esi
cmp     ecx, 4
jl      short loc_401fa0
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
mov     eax, edx
dec     ecx
sub     eax, ebp
add     ecx, eax
mov     eax, [esp+10h+arg_4]
cmp     ecx, eax
jnb     short loc_401fa0
lea     esi, [edx+1]
push    5ch
push    esi
call    _strchr
mov     edx, eax
add     esp, 8
test    edx, edx
jz      short loc_401fa0
mov     ecx, ebx
sub     ecx, edx
cmp     ecx, 4
jge     short loc_401f69
mov     byte ptr [esi], 2eh
inc     esi
mov     edi, ebx
or      ecx, 0ffffffffh
mov     byte ptr [esi], 2eh
inc     esi
xor     eax, eax
mov     byte ptr [esi], 2eh
lea     edx, [esi+1]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
push    ebx
push    ebp
mov     ebp, [esp+8+str]
push    esi
push    edi
push    2eh
push    ebp
call    _strrchr
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jz      short loc_40202c
push    5ch
push    ebx
call    _strchr
add     esp, 8
test    eax, eax
jnz     short loc_40202c
mov     edi, [esp+10h+arg_4]
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, ebx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
mov     edi, [esp+10h+arg_4]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edx, ecx
mov     edi, ebp
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
mov     edx, [esp+arg_0]
push    edi
cmp     byte ptr [edx], 0
jz      short loc_4020ab
mov     edi, edx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
cmp     byte ptr [ecx+edx-1], 5ch
jz      short loc_4020ab
mov     edi, offset asc_41829c
or      ecx, 0ffffffffh
xor     eax, eax
push    ebx
repne scasb
not     ecx
sub     edi, ecx
push    esi
mov     esi, edi
mov     ebx, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, ebx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
pop     esi
pop     ebx
pop     edi
retn
mov     edx, [esp+arg_0]
push    edi
mov     edi, edx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
pop     edi
cmp     ecx, 3
jle     short locret_4020d3
cmp     byte ptr [ecx+edx-1], 5ch
jnz     short locret_4020d3
mov     byte ptr [ecx+edx-1], 0
retn
push    esi
mov     esi, [esp+4+size]
push    esi
call    _malloc
add     esp, 4
test    eax, eax
jnz     short loc_402100
call    sub_41210c
push    esi
call    _malloc
add     esp, 4
mov     ecx, [esp+4+arg_4]
xor     edx, edx
test    eax, eax
setnz   dl
mov     [ecx], eax
mov     eax, edx
pop     esi
retn
push    esi
mov     esi, [esp+4+size]
push    1
push    esi
call    sub_412212
add     esp, 8
test    eax, eax
jnz     short loc_402144
call    sub_41210c
push    1
push    esi
call    sub_412212
add     esp, 8
mov     ecx, [esp+4+arg_4]
xor     edx, edx
test    eax, eax
setnz   dl
mov     [ecx], eax
mov     eax, edx
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_0]
mov     eax, [esi]
test    eax, eax
jz      short loc_40217a
push    eax
call    sub_4122c3
add     esp, 4
mov     dword ptr [esi], 0
pop     esi
retn
mov     eax, [esp+arg_4]
sub     esp, 124h
push    ebp
or      ebp, 0ffffffffh
test    eax, eax
push    edi
jz      short loc_402199
mov     dword ptr [eax], 1
mov     edi, [esp+12ch+arg_0]
test    edi, edi
jz      loc_40230e
cmp     byte ptr [edi], 0
jz      loc_40230e
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
push    ebx
push    esi
lea     edx, [esp+134h+rootpathname]
mov     eax, ecx
mov     esi, edi
mov     edi, edx
mov     bl, 5ch
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
cmp     [esp+134h+var_107], 3ah
jnz     short loc_4021e8
cmp     [esp+134h+var_106], bl
jnz     short loc_4021e8
mov     [esp+134h+var_105], 0
push    offset libfilename
call    ds:loadlibrarya
mov     esi, eax
test    esi, esi
jz      loc_402284
push    offset procname
push    esi
call    ds:getprocaddress
mov     edi, eax
test    edi, edi
jz      short loc_40226d
cmp     [esp+134h+rootpathname], bl
jnz     short loc_402227
cmp     [esp+134h+var_107], bl
jnz     short loc_402227
lea     ecx, [esp+134h+rootpathname]
push    ecx
call    sub_402060
jmp     short loc_402231
lea     edx, [esp+134h+rootpathname]
push    edx
call    sub_4020b0
add     esp, 4
lea     eax, [esp+134h+sectorspercluster]
lea     ecx, [esp+134h+bytespersector]
lea     edx, [esp+134h+totalnumberofclusters]
push    eax
push    ecx
lea     eax, [esp+13ch+rootpathname]
push    edx
push    eax
call    edi
test    eax, eax
jz      short loc_40226d
mov     ebp, [esp+134h+var_11c]
cmp     ebp, 400h
jb      short loc_402261
mov     ebp, 0fffffffeh
jmp     short loc_40226d
mov     ecx, [esp+134h+totalnumberofclusters]
shl     ebp, 16h
shr     ecx, 0ah
add     ebp, ecx
push    esi
call    ds:freelibrary
cmp     ebp, 0ffffffffh
jz      short loc_402284
mov     eax, [esp+134h+arg_4]
test    eax, eax
jz      short loc_402301
mov     al, [esp+134h+rootpathname]
mov     [esp+134h+numberoffreeclusters], 0
cmp     al, bl
mov     al, [esp+134h+var_107]
jnz     short loc_40229c
cmp     al, bl
jz      short loc_4022a9
cmp     al, 3ah
jnz     short loc_4022a9
mov     [esp+134h+var_106], bl
mov     [esp+134h+var_105], 0
lea     edx, [esp+134h+totalnumberofclusters]
lea     eax, [esp+134h+numberoffreeclusters]
push    edx
lea     ecx, [esp+138h+bytespersector]
push    eax
lea     edx, [esp+13ch+sectorspercluster]
push    ecx
lea     eax, [esp+140h+rootpathname]
push    edx
push    eax
call    ds:getdiskfreespacea
test    eax, eax
jz      short loc_402301
mov     ecx, [esp+134h+bytespersector]
mov     eax, [esp+134h+sectorspercluster]
cmp     ebp, 0ffffffffh
jnz     short loc_4022e9
mov     ebp, eax
imul    ebp, ecx
shr     ebp, 8
imul    ebp, [esp+134h+numberoffreeclusters]
shr     ebp, 2
mov     edx, [esp+134h+arg_4]
test    edx, edx
jz      short loc_402301
imul    eax, ecx
add     eax, 3ffh
shr     eax, 0ah
mov     [edx], eax
pop     esi
pop     ebx
mov     eax, ebp
pop     edi
pop     ebp
add     esp, 124h
retn
pop     edi
or      eax, 0ffffffffh
pop     ebp
add     esp, 124h
retn
push    ecx
push    ebx
push    ebp
push    esi
mov     esi, [esp+10h+arg_0]
push    edi
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
add     ecx, 3
push    1
push    ecx
mov     [esp+1ch+var_4], 0
call    sub_412212
mov     ebp, eax
add     esp, 8
test    ebp, ebp
jnz     short loc_402359
pop     edi
pop     esi
pop     ebp
or      eax, 0ffffffffh
pop     ebx
pop     ecx
retn
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
push    5ch
repne scasb
not     ecx
sub     edi, ecx
push    ebp
mov     eax, ecx
mov     esi, edi
mov     edi, ebp
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
call    _strrchr
add     esp, 8
test    eax, eax
jz      short loc_40238b
mov     byte ptr [eax+1], 0
cmp     byte ptr [ebp+0], 5ch
jnz     short loc_40239f
cmp     byte ptr [ebp+1], 5ch
jnz     short loc_40239f
lea     ecx, [ebp+2]
push    5ch
push    ecx
jmp     short loc_4023b6
cmp     byte ptr [ebp+1], 3ah
jnz     short loc_4023b3
cmp     byte ptr [ebp+2], 5ch
jnz     short loc_4023b3
lea     edx, [ebp+3]
push    5ch
push    edx
jmp     short loc_4023b6
push    5ch
push    ebp
call    _strchr
add     esp, 8
mov     esi, eax
push    1
push    104h
call    sub_412212
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     short loc_4023e7
push    ebp
call    sub_4122c3
add     esp, 4
or      eax, 0ffffffffh
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
test    esi, esi
mov     edi, ebp
jz      short loc_402446
mov     eax, esi
sub     eax, edi
push    eax
push    edi
push    ebx
call    _strncat
push    ebx
call    __chdir
add     esp, 10h
test    eax, eax
jz      short loc_402428
push    ebx
call    __mkdir
add     esp, 4
test    eax, eax
jnz     short loc_402420
push    ebx
call    __chdir
add     esp, 4
test    eax, eax
jz      short loc_402428
mov     [esp+14h+var_4], 1
mov     edi, esi
inc     esi
push    5ch
push    esi
call    _strchr
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_402498
mov     eax, [esp+14h+var_4]
test    eax, eax
jz      short loc_4023ed
jmp     short loc_402498
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
push    ebx
mov     edx, ecx
mov     esi, edi
mov     edi, ebx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
call    sub_4020b0
push    ebx
call    __chdir
add     esp, 8
test    eax, eax
jz      short loc_402498
push    ebx
call    __mkdir
add     esp, 4
test    eax, eax
jnz     short loc_402490
push    ebx
call    __chdir
add     esp, 4
test    eax, eax
jz      short loc_402498
mov     [esp+14h+var_4], 1
push    ebx
call    sub_4122c3
push    ebp
call    sub_4122c3
mov     eax, [esp+1ch+var_4]
add     esp, 8
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
mov     eax, [esp+arg_4]
sub     esp, 104h
dec     eax
push    ebx
push    esi
push    edi
jz      short loc_402531
dec     eax
jnz     short loc_402523
mov     eax, [esp+110h+path]
xor     esi, esi
test    eax, eax
jz      short loc_40250d
mov     ecx, [esp+110h+pidl]
lea     eax, [esp+110h+pszpath]
push    eax
push    ecx
call    ds:shgetpathfromidlista
test    eax, eax
jl      short loc_40250d
lea     edi, [esp+110h+pszpath]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
mov     esi, ecx
neg     esi
sbb     esi, esi
neg     esi
mov     edx, [esp+110h+hwnd]
push    esi
push    0
push    465h
push    edx
call    ds:sendmessagea
pop     edi
pop     esi
xor     eax, eax
pop     ebx
add     esp, 104h
retn    10h
mov     ebx, [esp+110h+path]
test    ebx, ebx
jz      short loc_402523
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
xor     esi, esi
repne scasb
not     ecx
push    ebp
mov     ebp, [esp+114h+hwnd]
dec     ecx
jz      short loc_402584
push    ebx
call    __chdir
add     esp, 4
test    eax, eax
jnz     short loc_402584
push    ebx
push    1
push    466h
push    ebp
call    ds:sendmessagea
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
mov     esi, ecx
neg     esi
sbb     esi, esi
neg     esi
push    esi
push    0
push    465h
push    ebp
call    ds:sendmessagea
pop     ebp
pop     edi
pop     esi
xor     eax, eax
pop     ebx
add     esp, 104h
retn    10h
sub     esp, 24h
lea     eax, [esp+24h+ppmalloc]
push    ebx
push    eax
xor     ebx, ebx
call    ds:shgetmalloc
test    eax, eax
jl      loc_40264c
push    esi
push    edi
mov     ecx, 8
xor     eax, eax
lea     edi, [esp+30h+bi]
push    1
rep stosd
mov     ecx, [esp+34h+arg_0]
mov     edi, [esp+34h+pszpath]
push    7
mov     [esp+38h+bi.hwndowner], ecx
mov     [esp+38h+bi.pszdisplayname], edi
call    sub_4036a0
add     esp, 8
lea     edx, [esp+30h+bi]
mov     [esp+30h+bi.lpsztitle], eax
mov     [esp+30h+bi.ulflags], 40h
push    edx
mov     [esp+34h+bi.lpfn], offset sub_4024c0
mov     [esp+34h+bi.lparam], edi
call    ds:shbrowseforfoldera
mov     esi, eax
test    esi, esi
jz      short loc_402639
push    edi
push    esi
call    ds:shgetpathfromidlista
test    eax, eax
jl      short loc_40262e
mov     ebx, 1
mov     eax, [esp+30h+ppmalloc]
push    esi
push    eax
mov     ecx, [eax]
call    dword ptr [ecx+14h]
mov     eax, [esp+30h+ppmalloc]
push    eax
mov     edx, [eax]
call    dword ptr [edx+8]
pop     edi
mov     eax, ebx
pop     esi
pop     ebx
add     esp, 24h
retn
mov     eax, ebx
pop     ebx
add     esp, 24h
retn
sub     esp, 208h
push    ebx
mov     ebx, [esp+20ch+lpfile]
push    edi
push    5
push    0
push    0
push    ebx
push    offset operation
push    0
call    ds:shellexecutea
cmp     eax, 20h
ja      loc_40273a
mov     ecx, [esp+210h+lpsubkey]
lea     eax, [esp+210h+string1]
push    eax
push    ecx
push    80000000h
call    sub_402750
add     esp, 0ch
test    eax, eax
jnz     loc_40273a
mov     edi, ds:lstrcata
lea     edx, [esp+210h+string1]
push    offset string2
push    edx
call    edi
lea     eax, [esp+210h+string1]
lea     ecx, [esp+210h+string1]
push    eax
push    ecx
push    80000000h
call    sub_402750
add     esp, 0ch
test    eax, eax
jnz     short loc_40273a
push    esi
lea     edx, [esp+214h+string1]
push    offset substr
push    edx
call    _strstr
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     short loc_40271d
lea     eax, [esp+214h+string1]
push    offset a1_0
push    eax
call    _strstr
mov     esi, eax
add     esp, 8
test    esi, esi
jnz     short loc_40271d
lea     ecx, [esp+214h+string1]
push    ecx
call    ds:lstrlena
lea     esi, [esp+eax+214h+var_209]
jmp     short loc_402720
mov     byte ptr [esi], 0
push    offset asc_4182c4
push    esi
call    edi
push    ebx
push    esi
call    edi
lea     edx, [esp+214h+string1]
push    5
push    edx
call    ds:winexec
pop     esi
pop     edi
pop     ebx
add     esp, 208h
retn
mov     ecx, [esp+lpsubkey]
mov     edx, [esp+hkey]
lea     eax, [esp+lpsubkey]
push    esi
push    eax
push    1
push    0
push    ecx
push    edx
call    ds:regopenkeyexa
mov     esi, eax
test    esi, esi
jnz     short loc_402799
mov     ecx, [esp+4+lpdata]
mov     edx, [esp+4+lpsubkey]
lea     eax, [esp+4+hkey]
mov     [esp+4+hkey], 104h
push    eax
push    ecx
push    esi
push    edx
call    ds:regqueryvaluea
mov     eax, [esp+4+lpsubkey]
push    eax
call    ds:regclosekey
mov     eax, esi
pop     esi
retn
sub     esp, 20ch
lea     eax, [esp+20ch+string1]
push    esi
push    edi
mov     edi, [esp+214h+lpfilename]
push    208h
push    eax
push    edi
call    sub_402870
add     esp, 0ch
push    edi
call    ds:addfontresourcea
mov     al, [esp+214h+string1]
test    al, al
jz      short loc_40284a
push    5ch
push    edi
call    _strrchr
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_4027e5
inc     esi
jmp     short loc_4027e7
mov     esi, edi
lea     ecx, [esp+214h+string1]
push    offset atruetype
push    ecx
call    ds:lstrcata
mov     ecx, dword_41ce50
mov     eax, offset subkey
test    ecx, ecx
jz      short loc_40280b
mov     eax, offset asoftwaremicros_1
lea     edx, [esp+214h+phkresult]
push    edx
push    eax
push    80000002h
call    ds:regopenkeya
test    eax, eax
jnz     short loc_40284a
mov     edi, esi
or      ecx, 0ffffffffh
repne scasb
not     ecx
dec     ecx
push    ecx
mov     ecx, [esp+218h+phkresult]
push    esi
push    1
push    eax
lea     eax, [esp+224h+string1]
push    eax
push    ecx
call    ds:regsetvalueexa
mov     edx, [esp+214h+phkresult]
push    edx
call    ds:regclosekey
push    0
push    0
push    1dh
push    0ffffh
call    ds:sendmessagea
pop     edi
pop     esi
add     esp, 20ch
retn
mov     eax, [esp+lpfilename]
sub     esp, 44h
push    ebx
mov     ebx, [esp+48h+lpbuffer]
push    esi
push    0
push    eax
mov     byte ptr [ebx], 0
call    sub_401040
mov     esi, eax
add     esp, 8
cmp     esi, 0ffffffffh
jz      loc_402a86
push    ebp
push    edi
lea     ecx, [esp+54h+buffer]
push    0ch
push    ecx
push    esi
call    sub_4010c0
mov     eax, [esp+60h+var_18]
xor     edx, edx
mov     edi, eax
mov     dh, al
and     edi, 0ffffh
and     edx, 0ffffh
shr     edi, 8
add     esp, 0ch
or      edi, edx
mov     ebp, 0
jbe     loc_402a7b
cmp     ebp, 28h
jnb     loc_402a7b
lea     eax, [esp+54h+var_2c]
push    10h
push    eax
push    esi
call    sub_4010c0
add     esp, 0ch
test    eax, eax
jnz     loc_402a7b
cmp     [esp+54h+var_2c], 656d616eh
jz      short loc_40290f
inc     ebp
cmp     ebp, edi
jb      short loc_4028ce
push    esi
call    sub_4012c0
add     esp, 4
pop     edi
pop     ebp
pop     esi
pop     ebx
add     esp, 44h
retn
mov     eax, [esp+54h+var_24]
mov     ecx, eax
mov     edx, eax
and     ecx, 0ff0000h
shr     edx, 10h
or      ecx, edx
mov     edx, eax
and     edx, 0ff00h
shl     eax, 10h
or      edx, eax
shr     ecx, 8
shl     edx, 8
or      ecx, edx
push    ecx
push    esi
call    sub_401160
lea     eax, [esp+5ch+var_44]
push    6
push    eax
push    esi
call    sub_4010c0
mov     eax, [esp+68h+var_42]
xor     ecx, ecx
mov     cl, ah
add     esp, 14h
mov     ch, al
mov     eax, ecx
mov     dx, ax
add     eax, 0ffffh
test    dx, dx
jz      loc_402a7b
and     eax, 0ffffh
inc     eax
mov     [esp+54h+lpbuffer], eax
lea     eax, [esp+54h+var_3c]
push    0ch
push    eax
push    esi
call    sub_4010c0
push    esi
call    sub_401140
mov     edi, eax
mov     ax, [esp+64h+var_3c]
xor     ecx, ecx
add     esp, 10h
mov     cl, ah
mov     ch, al
cmp     cx, 1
jnz     loc_402a6c
mov     ax, [esp+54h+var_36]
xor     edx, edx
mov     dl, ah
mov     dh, al
cmp     dx, 4
jnz     loc_402a6c
mov     eax, [esp+54h+var_24]
xor     ecx, ecx
mov     ebp, eax
mov     edx, eax
and     ebp, 0ff0000h
shr     edx, 10h
or      ebp, edx
mov     edx, eax
and     edx, 0ff00h
shl     eax, 10h
or      edx, eax
mov     eax, [esp+54h+var_42+2]
shr     ebp, 8
shl     edx, 8
or      ebp, edx
mov     edx, eax
and     edx, 0ffffh
mov     ch, al
mov     eax, [esp+54h+var_32]
and     ecx, 0ffffh
shr     edx, 8
or      edx, ecx
mov     ecx, eax
add     ebp, edx
xor     edx, edx
and     ecx, 0ffffh
mov     dh, al
shr     ecx, 8
and     edx, 0ffffh
or      ecx, edx
add     ebp, ecx
push    ebp
push    esi
call    sub_401160
mov     eax, [esp+28h]
xor     edx, edx
mov     ecx, eax
mov     dh, al
and     ecx, 0ffffh
and     edx, 0ffffh
shr     ecx, 8
or      ecx, edx
push    ecx
push    ebx
push    esi
call    sub_4010c0
mov     eax, [esp+34h]
xor     edx, edx
mov     ecx, eax
mov     dh, al
and     ecx, 0ffffh
and     edx, 0ffffh
shr     ecx, 8
or      ecx, edx
push    edi
push    esi
mov     byte ptr [ecx+ebx], 0
call    sub_401160
add     esp, 1ch
mov     eax, [esp+54h+lpbuffer]
dec     eax
mov     [esp+54h+lpbuffer], eax
jnz     loc_402975
push    esi
call    sub_4012c0
add     esp, 4
pop     edi
pop     ebp
pop     esi
pop     ebx
add     esp, 44h
retn
sub     esp, 20ch
lea     eax, [esp+20ch+string1]
push    esi
mov     esi, [esp+210h+lpfilename]
push    208h
push    eax
push    esi
call    sub_402870
add     esp, 0ch
push    esi
call    ds:removefontresourcea
mov     al, [esp+210h+string1]
test    al, al
jz      short loc_402b1f
push    5ch
push    esi
call    _strrchr
add     esp, 8
lea     ecx, [esp+210h+string1]
push    offset atruetype
push    ecx
call    ds:lstrcata
mov     ecx, dword_41ce50
mov     eax, offset subkey
test    ecx, ecx
jz      short loc_402aef
mov     eax, offset asoftwaremicros_1
lea     edx, [esp+210h+phkresult]
push    edx
push    eax
push    80000002h
call    ds:regopenkeya
test    eax, eax
jnz     short loc_402b1f
mov     ecx, [esp+210h+phkresult]
lea     eax, [esp+210h+string1]
push    eax
push    ecx
call    ds:regdeletevaluea
mov     edx, [esp+210h+phkresult]
push    edx
call    ds:regclosekey
push    0
push    0
push    1dh
push    0ffffh
call    ds:sendmessagea
pop     esi
add     esp, 20ch
retn
mov     eax, dword_41cc10
test    eax, eax
jz      short locret_402b4d
push    1
call    eax
retn
mov     ecx, [esp+exitcode]
mov     edx, [esp+arg_0]
sub     esp, 1ch
lea     eax, [esp+1ch+exitcode]
push    eax
push    ecx
push    edx
call    sub_402bc0
add     esp, 0ch
test    eax, eax
jz      short loc_402bb8
mov     eax, [esp+1ch+arg_8]
test    eax, eax
jz      short loc_402baf
lea     eax, [esp+1ch+exitcode]
push    eax
call    sub_402ca0
add     esp, 4
test    eax, eax
jz      short loc_402baf
push    esi
mov     esi, ds:peekmessagea
push    0
push    0
push    0
lea     ecx, [esp+2ch+msg]
push    0
push    ecx
call    esi
lea     edx, [esp+20h+exitcode]
push    edx
call    sub_402ca0
add     esp, 4
test    eax, eax
jnz     short loc_402b8e
pop     esi
mov     eax, 1
add     esp, 1ch
retn
xor     eax, eax
add     esp, 1ch
retn
sub     esp, 54h
push    ebx
push    ebp
push    edi
push    208h
call    _malloc
mov     ebp, eax
xor     ebx, ebx
add     esp, 4
cmp     ebp, ebx
jnz     short loc_402be4
pop     edi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 54h
retn
mov     eax, [esp+60h+arg_4]
push    esi
cmp     eax, ebx
jz      short loc_402c08
cmp     [eax], bl
jz      short loc_402c08
push    eax
mov     eax, [esp+68h+arg_0]
push    eax
push    offset ass
push    ebp
call    ds:wsprintfa
add     esp, 10h
jmp     short loc_402c29
mov     edi, [esp+64h+arg_0]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, ebp
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
lea     eax, [esp+64h+processinformation]
mov     edi, [esp+64h+arg_8]
lea     ecx, [esp+64h+startupinfo]
push    eax
push    ecx
push    ebx
push    ebx
push    20h
push    1
push    ebx
push    ebx
push    ebp
push    ebx
mov     [edi], ebx
mov     [esp+8ch+startupinfo.cb], 44h
mov     [esp+8ch+startupinfo.lpreserved], ebx
mov     [esp+8ch+startupinfo.lpdesktop], ebx
mov     [esp+8ch+startupinfo.lptitle], ebx
mov     [esp+8ch+startupinfo.dwflags], ebx
mov     [esp+8ch+startupinfo.cbreserved2], bx
mov     [esp+8ch+startupinfo.lpreserved2], ebx
call    ds:createprocessa
push    ebp
mov     esi, eax
call    sub_4122c3
add     esp, 4
cmp     esi, ebx
pop     esi
jnz     short loc_402c83
pop     edi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 54h
retn
mov     edx, [esp+60h+processinformation.hprocess]
mov     eax, 1
mov     [edi], edx
pop     edi
pop     ebp
pop     ebx
add     esp, 54h
retn
mov     ecx, [esp+exitcode]
lea     eax, [esp+exitcode]
push    eax
mov     edx, [ecx]
push    edx
call    ds:getexitcodeprocess
test    eax, eax
jnz     short loc_402cb7
retn
mov     ecx, [esp+exitcode]
xor     eax, eax
cmp     ecx, 103h
setz    al
retn
call    sub_402ce0
jmp     ds:initcommoncontrols
push    offset auxthemedll
call    ds:loadlibrarya
test    eax, eax
mov     hlibmodule, eax
jz      short locret_402d05
push    offset asetthemeapppro
push    eax
call    ds:getprocaddress
mov     dword_41cc10, eax
retn
mov     eax, ho
test    eax, eax
jz      short loc_402d20
push    eax
call    ds:deleteobject
jmp     loc_402d30
mov     eax, hlibmodule
test    eax, eax
jz      short locret_402d4a
push    eax
call    ds:freelibrary
mov     hlibmodule, 0
retn
sub     esp, 3ch
mov     ecx, 0eh
xor     eax, eax
push    ebp
push    esi
push    edi
lea     edi, [esp+48h+var_38]
rep stosd
push    38h
lea     eax, [esp+4ch+var_38]
push    offset a113
push    eax
xor     esi, esi
xor     ebp, ebp
call    sub_40f650
mov     ecx, eax
add     esp, 0ch
and     ecx, 0ffh
or      ch, 10h
test    eax, eax
mov     dword_41cdf4, ecx
jz      short loc_402da2
xor     edx, edx
cmp     eax, 0fffffffch
setz    dl
inc     edx
pop     edi
pop     esi
mov     eax, edx
pop     ebp
add     esp, 3ch
retn
push    ebx
push    2000h
call    _malloc
add     esp, 4
mov     [esp+4ch+lpbuffer], eax
test    eax, eax
jz      loc_402f45
push    3000h
call    _malloc
mov     ebp, eax
add     esp, 4
test    ebp, ebp
jz      loc_402f45
mov     eax, [esp+4ch+nnumberofbytestoread]
test    eax, eax
jz      loc_402f4a
mov     ebx, [esp+4ch+arg_10]
cmp     eax, 2000h
mov     edi, eax
jb      short loc_402df1
mov     edi, 2000h
sub     eax, edi
push    1
mov     [esp+50h+nnumberofbytestoread], eax
mov     eax, [esp+50h+lpbuffer]
push    edi
lea     ecx, [esp+54h+arg_4]
push    eax
push    ecx
call    sub_406f40
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     loc_402f3e
mov     edx, [esp+4ch+lpbuffer]
mov     [esp+4ch+var_34], edi
test    edi, edi
mov     [esp+4ch+var_38], edx
mov     [esp+4ch+var_28], eax
jz      loc_402f09
test    esi, esi
jnz     loc_402f4a
lea     eax, [esp+4ch+var_38]
push    esi
push    eax
mov     [esp+54h+var_2c], ebp
mov     [esp+54h+var_28], 3000h
call    sub_40f670
add     esp, 8
test    eax, eax
jz      short loc_402e5d
cmp     eax, 1
jnz     loc_402f1a
mov     eax, [esp+4ch+var_28]
cmp     eax, 3000h
jz      loc_402efd
mov     esi, 3000h
sub     esi, eax
mov     eax, [esp+4ch+arg_c]
test    eax, eax
jz      short loc_402e7d
add     [eax], esi
test    ebx, ebx
jz      short loc_402ee8
mov     ecx, [ebx]
mov     edx, esi
shr     edx, 2
mov     eax, ebp
jz      short loc_402ecd
mov     edi, edx
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
dec     edi
jnz     short loc_402e8e
mov     edx, esi
and     edx, 3
jbe     short loc_402ee6
mov     edi, ecx
shr     edi, 1fh
lea     edi, [edi+ecx*2]
xor     ecx, ecx
mov     cl, [eax]
add     ecx, edi
inc     eax
dec     edx
jnz     short loc_402ed4
mov     [ebx], ecx
mov     eax, [esp+4ch+hfile]
push    esi
push    ebp
push    eax
call    sub_401100
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     short loc_402f37
mov     eax, [esp+4ch+var_34]
test    eax, eax
jnz     loc_402e2e
test    esi, esi
jnz     short loc_402f4a
mov     eax, [esp+4ch+nnumberofbytestoread]
test    eax, eax
jz      short loc_402f4a
jmp     loc_402de3
mov     ecx, dword_41cdf4
and     eax, 0ffh
or      ah, 11h
mov     esi, 1
or      ecx, eax
mov     dword_41cdf4, ecx
jmp     short loc_402f4a
mov     esi, 4
jmp     short loc_402f4a
mov     esi, 3
jmp     short loc_402f4a
mov     esi, 2
lea     ecx, [esp+4ch+var_38]
push    ecx
call    sub_40f4f0
add     esp, 4
test    eax, eax
pop     ebx
jz      short loc_402f72
test    esi, esi
jnz     short loc_402f72
and     eax, 0ffh
mov     esi, 1
or      ah, 12h
mov     dword_41cdf4, eax
test    ebp, ebp
jz      short loc_402f7f
push    ebp
call    sub_4122c3
add     esp, 4
mov     eax, [esp+48h+lpbuffer]
test    eax, eax
jz      short loc_402f90
push    eax
call    sub_4122c3
add     esp, 4
test    esi, esi
jnz     short loc_402f9a
mov     dword_41cdf4, esi
mov     eax, esi
pop     edi
pop     esi
pop     ebp
add     esp, 3ch
retn
sub     esp, 34h
xor     eax, eax
mov     ecx, 0ch
push    ebx
push    ebp
push    esi
push    edi
lea     edi, [esp+44h+var_30]
push    eax
rep stosd
push    eax
lea     eax, [esp+4ch+var_30]
push    eax
xor     esi, esi
xor     ebx, ebx
call    sub_40c010
mov     ebp, eax
mov     ecx, ebp
and     ecx, 0ffh
or      ch, 20h
test    ebp, ebp
mov     dword_41cdf4, ecx
jz      short loc_402ffc
xor     eax, eax
cmp     ebp, 0fffffffdh
pop     edi
pop     esi
setz    al
pop     ebp
inc     eax
pop     ebx
add     esp, 34h
retn
push    2000h
call    _malloc
add     esp, 4
mov     [esp+44h+lpbuffer], eax
test    eax, eax
jz      loc_4031a8
push    3000h
call    _malloc
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_4031a8
mov     eax, [esp+44h+nnumberofbytestoread]
test    eax, eax
jz      loc_4031ad
jmp     short loc_40303e
mov     eax, [esp+44h+nnumberofbytestoread]
cmp     eax, 2000h
mov     edi, eax
jb      short loc_40304c
mov     edi, 2000h
mov     edx, [esp+44h+lpbuffer]
sub     eax, edi
mov     [esp+44h+nnumberofbytestoread], eax
push    1
push    edi
lea     eax, [esp+4ch+arg_4]
push    edx
push    eax
call    sub_406f40
mov     esi, eax
add     esp, 10h
test    esi, esi
jnz     loc_4031a1
mov     ecx, [esp+44h+lpbuffer]
mov     [esp+44h+var_2c], edi
test    edi, edi
mov     [esp+44h+var_30], ecx
jz      loc_40318a
test    esi, esi
jnz     loc_40318a
lea     edx, [esp+44h+var_30]
mov     [esp+44h+var_20], ebx
push    edx
mov     [esp+48h+var_1c], 3000h
call    sub_40c120
mov     ebp, eax
test    ebp, ebp
jz      short loc_4030b2
cmp     ebp, 4
jnz     loc_40316d
mov     eax, [esp+44h+var_1c]
cmp     eax, 3000h
jz      loc_40315a
mov     esi, 3000h
sub     esi, eax
mov     eax, [esp+44h+arg_c]
test    eax, eax
jz      short loc_4030d2
add     [eax], esi
mov     ecx, [esp+44h+arg_10]
test    ecx, ecx
jz      short loc_403145
mov     ecx, [ecx]
mov     edx, esi
shr     edx, 2
mov     eax, ebx
jz      short loc_403126
mov     edi, edx
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
dec     edi
jnz     short loc_4030e7
mov     edx, esi
and     edx, 3
jbe     short loc_40313f
mov     edi, ecx
shr     edi, 1fh
lea     edi, [edi+ecx*2]
xor     ecx, ecx
mov     cl, [eax]
add     ecx, edi
inc     eax
dec     edx
jnz     short loc_40312d
mov     eax, [esp+44h+arg_10]
mov     [eax], ecx
mov     ecx, [esp+44h+hfile]
push    esi
push    ebx
push    ecx
call    sub_401100
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     short loc_403185
cmp     ebp, 4
jz      short loc_4031ad
mov     eax, [esp+44h+var_2c]
test    eax, eax
jnz     loc_403085
jmp     short loc_40318a
mov     edx, ebp
mov     esi, 1
and     edx, 0ffh
or      dh, 21h
mov     dword_41cdf4, edx
jmp     short loc_40318a
mov     esi, 4
cmp     ebp, 4
jz      short loc_4031ad
test    esi, esi
jnz     short loc_4031ad
mov     eax, [esp+44h+nnumberofbytestoread]
test    eax, eax
jnz     loc_40303a
jmp     short loc_4031ad
mov     esi, 3
jmp     short loc_4031ad
mov     esi, 2
lea     eax, [esp+44h+var_30]
push    eax
call    sub_40ce00
test    eax, eax
jz      short loc_4031d1
test    esi, esi
jnz     short loc_4031d1
and     eax, 0ffh
mov     esi, 1
or      ah, 22h
mov     dword_41cdf4, eax
test    ebx, ebx
jz      short loc_4031de
push    ebx
call    sub_4122c3
add     esp, 4
mov     eax, [esp+44h+lpbuffer]
test    eax, eax
jz      short loc_4031ef
push    eax
call    sub_4122c3
add     esp, 4
test    esi, esi
jnz     short loc_4031f9
mov     dword_41cdf4, esi
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 34h
retn
push    ecx
push    esi
push    edi
mov     edi, [esp+0ch+arg_c]
mov     byte ptr [esp+0ch+buffer], 0
test    edi, edi
jz      short loc_403226
mov     dword ptr [edi], 0
mov     esi, [esp+0ch+arg_10]
test    esi, esi
jz      short loc_403234
mov     dword ptr [esi], 0
push    1
lea     eax, [esp+10h+buffer]
push    1
lea     ecx, [esp+14h+hfile]
push    eax
push    ecx
call    sub_406f40
add     esp, 10h
test    eax, eax
jnz     short loc_4032b4
mov     eax, [esp+0ch+arg_8]
dec     eax
cmp     eax, 0ffffffffh
jnz     short loc_403265
mov     edx, [esp+0ch+hfile]
push    edx
call    sub_4011c0
add     esp, 4
test    eax, eax
jnz     short loc_40326d
pop     edi
pop     esi
pop     ecx
retn
mov     ecx, [esp+0ch+buffer]
and     ecx, 0ffh
dec     ecx
jz      short loc_40329f
dec     ecx
jz      short loc_403286
pop     edi
mov     eax, 1
pop     esi
pop     ecx
retn
mov     ecx, [esp+0ch+arg_0]
push    esi
push    edi
push    eax
mov     eax, [esp+18h+hfile]
push    eax
push    ecx
call    sub_402fb0
add     esp, 14h
pop     edi
pop     esi
pop     ecx
retn
mov     edx, [esp+0ch+hfile]
push    esi
push    edi
push    eax
mov     eax, [esp+18h+arg_0]
push    edx
push    eax
call    sub_402d50
add     esp, 14h
pop     edi
pop     esi
pop     ecx
retn
sub     esp, 38h
mov     ecx, 0eh
xor     eax, eax
push    ebx
push    edi
lea     edi, [esp+40h+var_38]
push    38h
rep stosd
lea     eax, [esp+44h+var_38]
push    offset a113
push    eax
xor     ebx, ebx
call    sub_40f650
mov     ecx, eax
add     esp, 0ch
and     ecx, 0ffh
or      ch, 30h
test    eax, eax
mov     dword_41cdf4, ecx
jz      short loc_40330e
xor     edx, edx
cmp     eax, 0fffffffch
setz    dl
inc     edx
pop     edi
mov     eax, edx
pop     ebx
add     esp, 38h
retn
push    ebp
push    esi
push    2000h
call    _malloc
mov     ebp, eax
add     esp, 4
test    ebp, ebp
jz      loc_4033b4
mov     edi, [esp+48h+nnumberofbytestoread]
mov     eax, [esp+48h+arg_0]
mov     ecx, [esp+48h+arg_8]
mov     [esp+48h+var_2c], eax
test    edi, edi
mov     [esp+48h+var_28], ecx
jz      short loc_4033b9
cmp     edi, 2000h
mov     esi, edi
jb      short loc_40334e
mov     esi, 2000h
push    1
push    esi
lea     edx, [esp+50h+arg_4]
push    ebp
push    edx
sub     edi, esi
call    sub_406f40
mov     ebx, eax
add     esp, 10h
test    ebx, ebx
jnz     short loc_4033ad
test    esi, esi
mov     [esp+48h+var_38], ebp
mov     [esp+48h+var_34], esi
jz      short loc_403393
lea     eax, [esp+48h+var_38]
push    0
push    eax
call    sub_40f670
add     esp, 8
test    eax, eax
jz      short loc_40338b
cmp     eax, 1
jnz     short loc_403399
mov     eax, [esp+48h+var_34]
test    eax, eax
jnz     short loc_403373
test    edi, edi
jz      short loc_4033b9
jmp     short loc_40333f
and     eax, 0ffh
mov     ebx, 1
or      ah, 31h
mov     dword_41cdf4, eax
jmp     short loc_4033b9
mov     ebx, 3
jmp     short loc_4033b9
mov     ebx, 2
lea     ecx, [esp+48h+var_38]
push    ecx
call    sub_40f4f0
add     esp, 4
test    eax, eax
jz      short loc_4033e0
test    ebx, ebx
jnz     short loc_4033e0
and     eax, 0ffh
mov     ebx, 1
or      ah, 32h
mov     dword_41cdf4, eax
test    ebp, ebp
jz      short loc_4033ed
push    ebp
call    sub_4122c3
add     esp, 4
pop     esi
pop     ebp
test    ebx, ebx
jnz     short loc_4033f9
mov     dword_41cdf4, ebx
mov     eax, ebx
pop     edi
pop     ebx
add     esp, 38h
retn
sub     esp, 34h
xor     eax, eax
mov     ecx, 0ch
push    ebx
push    edi
lea     edi, [esp+3ch+var_30]
push    eax
rep stosd
push    eax
lea     eax, [esp+44h+var_30]
push    eax
xor     ebx, ebx
call    sub_40c010
mov     edi, eax
mov     ecx, edi
and     ecx, 0ffh
or      ch, 40h
test    edi, edi
mov     dword_41cdf4, ecx
jz      short loc_403456
xor     eax, eax
cmp     edi, 0fffffffdh
setz    al
pop     edi
inc     eax
pop     ebx
add     esp, 34h
retn
push    ebp
push    esi
push    2000h
call    _malloc
add     esp, 4
mov     [esp+44h+lpbuffer], eax
test    eax, eax
jz      loc_403514
mov     ebp, [esp+44h+nnumberofbytestoread]
mov     edx, [esp+44h+arg_0]
mov     eax, [esp+44h+arg_8]
mov     [esp+44h+var_20], edx
test    ebp, ebp
mov     [esp+44h+var_1c], eax
jz      loc_403519
cmp     ebp, 2000h
mov     esi, ebp
jb      short loc_40349c
mov     esi, 2000h
mov     ecx, [esp+44h+lpbuffer]
push    1
push    esi
lea     edx, [esp+4ch+arg_4]
push    ecx
push    edx
sub     ebp, esi
call    sub_406f40
mov     ebx, eax
add     esp, 10h
test    ebx, ebx
jnz     short loc_40350d
mov     eax, [esp+44h+lpbuffer]
mov     [esp+44h+var_2c], esi
test    esi, esi
mov     [esp+44h+var_30], eax
jz      short loc_4034fe
lea     ecx, [esp+44h+var_30]
push    ecx
call    sub_40c120
mov     edi, eax
cmp     edi, 4
jz      short loc_403519
test    edi, edi
jnz     short loc_4034e8
mov     eax, [esp+44h+var_2c]
test    eax, eax
jnz     short loc_4034c9
jmp     short loc_403507
mov     edx, edi
mov     ebx, 1
and     edx, 0ffh
or      dh, 41h
mov     dword_41cdf4, edx
cmp     edi, 4
jz      short loc_403519
test    ebx, ebx
jnz     short loc_403519
test    ebp, ebp
jnz     short loc_40348d
jmp     short loc_403519
mov     ebx, 3
jmp     short loc_403519
mov     ebx, 2
lea     eax, [esp+44h+var_30]
push    eax
call    sub_40ce00
pop     esi
pop     ebp
test    eax, eax
jz      short loc_40353f
test    ebx, ebx
jnz     short loc_40353f
and     eax, 0ffh
mov     ebx, 1
or      ah, 42h
mov     dword_41cdf4, eax
mov     eax, [esp+3ch+lpbuffer]
test    eax, eax
jz      short loc_403550
push    eax
call    sub_4122c3
add     esp, 4
test    ebx, ebx
jnz     short loc_40355a
mov     dword_41cdf4, ebx
mov     eax, ebx
pop     edi
pop     ebx
add     esp, 34h
retn
push    ecx
push    1
lea     eax, [esp+8+buffer]
push    1
lea     ecx, [esp+0ch+hfile]
push    eax
push    ecx
mov     byte ptr [esp+14h+buffer], 0
call    sub_406f40
add     esp, 10h
test    eax, eax
jnz     short loc_4035f6
mov     eax, [esp+4+arg_c]
dec     eax
cmp     eax, 0ffffffffh
jnz     short loc_4035a7
mov     edx, [esp+4+hfile]
push    edx
call    sub_4011c0
add     esp, 4
test    eax, eax
jnz     short loc_4035ad
pop     ecx
retn
mov     ecx, [esp+4+buffer]
and     ecx, 0ffh
dec     ecx
jz      short loc_4035de
dec     ecx
jz      short loc_4035c4
mov     eax, 1
pop     ecx
retn
mov     ecx, [esp+4+hfile]
mov     edx, [esp+4+arg_0]
push    eax
mov     eax, [esp+8+arg_8]
push    eax
push    ecx
push    edx
call    sub_403410
add     esp, 10h
pop     ecx
retn
mov     ecx, [esp+4+hfile]
mov     edx, [esp+4+arg_0]
push    eax
mov     eax, [esp+8+arg_8]
push    eax
push    ecx
push    edx
call    sub_4032c0
add     esp, 10h
pop     ecx
retn
mov     eax, [esp+hwnd]
push    ebp
push    esi
push    edi
test    eax, eax
jz      short loc_40364f
mov     ebp, [esp+0ch+wparam]
test    ebp, ebp
jz      short loc_40364f
mov     edi, ds:getwindow
push    5
push    eax
call    edi
mov     esi, eax
test    esi, esi
jz      short loc_40364f
push    ebx
mov     ebx, ds:sendmessagea
push    0
push    ebp
push    30h
push    esi
call    ebx
push    2
push    esi
call    edi
mov     esi, eax
test    esi, esi
jnz     short loc_40363b
pop     ebx
pop     edi
pop     esi
pop     ebp
retn
push    esi
mov     esi, hwndparent
test    esi, esi
jnz     short loc_403671
mov     esi, dword_41ce8c
mov     eax, [esp+4+utype]
push    eax
push    0
push    7
call    sub_4036a0
mov     ecx, [esp+10h+lptext]
add     esp, 8
push    eax
push    ecx
push    esi
call    ds:messageboxa
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
cmp     eax, 0ah
jge     short loc_4036e4
mov     ecx, dword_41cdbc
mov     edx, [ecx+eax*4+3eh]
test    edx, edx
jz      short loc_4036e4
mov     ax, [edx]
mov     esi, [esp+4+arg_4]
add     edx, 2
cmp     si, ax
jnb     short loc_4036e4
test    esi, esi
jle     short loc_4036e0
push    edi
mov     edi, edx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
dec     esi
lea     edx, [edx+ecx+1]
jnz     short loc_4036cc
pop     edi
mov     eax, edx
pop     esi
retn
mov     eax, offset string
pop     esi
retn
mov     eax, [esp+arg_0]
push    eax
push    7
call    sub_4036a0
add     esp, 8
test    eax, eax
jz      short loc_40371b
cmp     byte ptr [eax], 0
jz      short loc_40371b
push    24h
push    eax
call    sub_403660
add     esp, 8
cmp     eax, 6
jz      short loc_40371b
xor     eax, eax
retn
mov     eax, [esp+arg_4]
test    eax, eax
jz      short loc_403742
push    eax
push    7
call    sub_4036a0
add     esp, 8
test    eax, eax
jz      short loc_403742
cmp     byte ptr [eax], 0
jz      short loc_403742
push    40h
push    eax
call    sub_403660
add     esp, 8
mov     eax, 1
retn
mov     ecx, dword_41cc74
mov     eax, dword_41cc70
push    esi
push    edi
xor     edi, edi
xor     esi, esi
test    ecx, ecx
jbe     short loc_4037a8
mov     edx, [eax+16h]
mov     ecx, edx
and     ecx, 7000000h
jz      short loc_40378a
cmp     ecx, 1000000h
jz      short loc_403782
cmp     ecx, 2000000h
jnz     short loc_4037a0
test    edx, 80000000h
jnz     short loc_4037a0
push    eax
inc     esi
call    sub_4037b0
mov     ecx, dword_41cc74
add     esp, 4
cmp     esi, ecx
jnb     short loc_4037a8
jmp     short loc_403765
pop     edi
mov     eax, 1
pop     esi
retn
mov     eax, edi
pop     edi
pop     esi
retn
mov     ecx, [esp+arg_0]
xor     eax, eax
mov     ax, [ecx]
add     eax, ecx
retn
mov     eax, dword_41ceb0
sub     esp, 8
test    eax, eax
push    edi
jnz     loc_403a44
mov     eax, dword_41cc74
mov     edi, dword_41cc70
test    eax, eax
mov     [esp+0ch+var_4], 0
mov     [esp+0ch+var_8], edi
jbe     loc_403a44
push    ebx
push    ebp
push    esi
jmp     short loc_4037f9
mov     edi, [esp+18h+var_8]
mov     ecx, [edi+16h]
mov     eax, [esp+18h+arg_4]
mov     esi, ecx
shr     esi, 1bh
and     esi, 1
jz      short loc_403815
cmp     eax, 1
jz      loc_403a1e
jmp     short loc_40381e
cmp     eax, 2
jz      loc_403a1e
mov     eax, [esp+18h+arg_0]
mov     edx, ecx
and     edx, 7000000h
cmp     edx, eax
jnz     loc_403a1e
cmp     eax, 3000000h
ja      short loc_403876
jz      short loc_403881
cmp     eax, 1000000h
jz      short loc_403849
cmp     eax, 2000000h
jnz     short loc_403896
mov     eax, [esp+18h+arg_8]
test    eax, eax
jz      short loc_403868
mov     eax, dword_41ceb4
test    eax, eax
jz      short loc_403896
test    ecx, 80000000h
jnz     loc_403a1e
jmp     short loc_403896
test    ecx, 80000000h
jz      loc_403a1e
jmp     short loc_403896
cmp     eax, 4000000h
jnz     short loc_403896
test    esi, esi
jnz     short loc_403896
mov     eax, [esp+18h+arg_8]
test    eax, eax
jz      short loc_403896
mov     eax, dword_41ceb4
test    eax, eax
jnz     loc_403a1e
push    edi
call    sub_4083e0
add     esp, 4
test    esi, esi
jz      short loc_40390c
mov     eax, lpexistingfilename
push    0
push    eax
call    sub_401040
add     esp, 8
cmp     eax, 0ffffffffh
jz      loc_403a1e
push    eax
call    sub_4012c0
mov     ecx, lpexistingfilename
push    2eh
push    ecx
call    _strrchr
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     short loc_4038df
mov     esi, off_41809c
mov     edx, oldfilename
mov     eax, lpexistingfilename
push    104h
push    edx
push    eax
call    ds:getshortpathnamea
mov     ecx, oldfilename
push    esi
push    ecx
call    sub_402660
add     esp, 8
jmp     loc_403a1e
mov     edx, phkresult
push    edx
call    sub_4020b0
mov     eax, phkresult
add     esp, 4
push    eax
call    ds:setcurrentdirectorya
mov     ecx, phkresult
push    ecx
call    sub_402060
mov     edx, oldfilename
mov     eax, lpexistingfilename
add     esp, 4
push    104h
push    edx
push    eax
call    ds:getshortpathnamea
push    8
push    edi
call    sub_403a50
mov     ebx, eax
add     esp, 8
mov     ebp, ebx
cmp     byte ptr [ebx], 0
jz      short loc_403985
push    0ffdch
push    ebx
push    0
call    sub_407890
lea     esi, [eax+1]
push    esi
call    _malloc
mov     ebp, eax
push    esi
push    ebx
push    ebp
call    sub_407890
add     esp, 1ch
test    dword ptr [edi+16h], 10000000h
jz      short loc_4039a2
mov     ecx, oldfilename
push    1
push    ebp
push    ecx
call    sub_402b50
add     esp, 0ch
jmp     short loc_403a11
cmp     byte ptr [ebp+0], 30h
jz      short loc_403a03
mov     edi, offset asc_4182c4
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, oldfilename
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, ebp
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, oldfilename
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, [esp+18h+var_8]
mov     eax, oldfilename
push    1
push    eax
call    ds:winexec
cmp     ebp, ebx
jz      short loc_403a1e
push    ebp
call    sub_4122c3
add     esp, 4
mov     esi, [esp+18h+var_4]
push    edi
inc     esi
mov     [esp+1ch+var_4], esi
call    sub_4037b0
mov     [esp+1ch+var_8], eax
mov     eax, dword_41cc74
add     esp, 4
cmp     esi, eax
jb      loc_4037f5
pop     esi
pop     ebp
pop     ebx
pop     edi
add     esp, 8
retn
mov     eax, [esp+arg_0]
lea     edx, [eax+1eh]
mov     eax, [eax+16h]
test    al, 6
jz      short loc_403a61
add     edx, 14h
test    al, 8
jz      short loc_403a68
add     edx, 18h
push    esi
mov     esi, [esp+4+arg_4]
test    esi, esi
jle     short loc_403a8a
push    edi
mov     edi, edx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
dec     esi
lea     edx, [edx+ecx+1]
jnz     short loc_403a72
pop     edi
mov     eax, edx
pop     esi
retn
mov     eax, edx
pop     esi
retn
mov     eax, [esp+arg_4]
sub     esp, 0ch
cmp     eax, 4eh
push    ebx
push    esi
jnz     loc_403c10
mov     esi, [esp+14h+arg_c]
cmp     dword ptr [esi], 0
jz      loc_403c10
mov     eax, [esi+8]
cmp     eax, 70bh
jz      short loc_403ac4
cmp     eax, 702h
jnz     loc_403c10
push    1
push    1f4h
call    sub_412212
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jz      loc_403c10
mov     eax, [esi]
push    edi
push    12bh
push    ebx
push    eax
call    ds:getclassnamea
push    offset arichedit_0
push    ebx
mov     byte ptr [ebx+8], 0
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     loc_403bfe
mov     eax, [esi+8]
sub     eax, 702h
jz      loc_403bdc
sub     eax, 9
jnz     loc_403bfe
cmp     dword ptr [esi+0ch], 202h
jnz     loc_403bfe
mov     ecx, [esi+18h]
mov     edx, [esi]
push    ecx
push    edx
call    sub_4055c0
add     esp, 8
test    eax, eax
jnz     short loc_403b6f
mov     eax, [esi+18h]
mov     ecx, [esi+1ch]
lea     edx, [esp+18h+lparam]
mov     [esp+18h+lparam], eax
mov     eax, [esi]
push    edx
push    0
push    44bh
push    eax
mov     [esp+28h+var_8], ecx
mov     [esp+28h+var_4], ebx
call    ds:sendmessagea
test    eax, eax
jz      loc_403bfe
jmp     short loc_403b7e
push    1f4h
push    eax
push    ebx
call    sub_407890
add     esp, 0ch
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
cmp     ecx, 4
jl      short loc_403bbc
lea     eax, [ecx+ebx-4]
mov     cl, [ecx+ebx-4]
cmp     cl, 2eh
jnz     short loc_403bbc
test    eax, eax
jz      short loc_403bbc
push    eax
push    ebx
call    sub_402660
add     esp, 8
push    ebx
call    sub_4122c3
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
push    offset ahtm
push    ebx
call    sub_402660
add     esp, 8
push    ebx
call    sub_4122c3
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
mov     ecx, [esi]
mov     edi, ds:sendmessagea
push    0
push    0ffffffffh
push    0b1h
push    ecx
call    edi
mov     edx, [esi]
push    0
push    1
push    43fh
push    edx
call    edi
push    ebx
call    sub_4122c3
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
pop     esi
xor     eax, eax
pop     ebx
add     esp, 0ch
retn
mov     eax, [esp+hwnd]
push    1
push    0
push    eax
call    ds:setwindowlonga
mov     eax, 1
retn
push    ebp
push    esi
mov     esi, [esp+8+hwnd]
push    edi
push    0ffffffebh
push    esi
call    ds:getwindowlonga
mov     ebp, eax
test    ebp, ebp
jnz     short loc_403c5c
pop     edi
pop     esi
pop     ebp
retn    10h
mov     edi, [esp+0ch+msg]
cmp     edi, 7
jz      short loc_403cb7
cmp     edi, 0fh
jz      short loc_403c6f
cmp     edi, 14h
jnz     short loc_403cd6
push    esi
call    ds:iswindowenabled
test    eax, eax
jnz     short loc_403cd6
push    ebx
mov     ebx, ds:enablewindow
push    1
push    esi
call    ebx
mov     eax, [esp+10h+lparam]
mov     ecx, [esp+10h+wparam]
push    eax
push    ecx
push    edi
push    esi
push    ebp
call    ds:callwindowproca
push    0
push    esi
mov     ebp, eax
call    ebx
cmp     edi, 0fh
pop     ebx
jnz     short loc_403caf
push    0
push    esi
call    ds:validaterect
pop     edi
mov     eax, ebp
pop     esi
pop     ebp
retn    10h
push    0
push    0
push    43bh
push    esi
call    ds:sendmessagea
test    eax, 80000h
jz      short loc_403cd6
pop     edi
pop     esi
xor     eax, eax
pop     ebp
retn    10h
mov     edx, [esp+0ch+lparam]
mov     eax, [esp+0ch+wparam]
push    edx
push    eax
push    edi
push    esi
push    ebp
call    ds:callwindowproca
pop     edi
pop     esi
pop     ebp
retn    10h
mov     eax, [esp+arg_4]
test    eax, eax
jle     locret_403e57
push    ebx
push    ebp
push    esi
mov     esi, [esp+0ch+arg_8]
push    edi
mov     [esp+10h+arg_4], eax
xor     eax, eax
mov     ax, [esi]
dec     eax
cmp     eax, 0eh
ja      def_403d1f
xor     ecx, ecx
mov     cl, ds:byte_403e70[eax]
jmp     ds:jpt_403d1f[ecx*4]
mov     ebp, offset classname
jmp     short loc_403d55
mov     ebp, offset aedit
jmp     short loc_403d55
mov     ebp, offset abutton
jmp     short loc_403d55
mov     ebp, offset amsctlsprogress
jmp     short loc_403d55
mov     eax, dword_41ce2c
mov     ebp, offset arichedit20a
test    eax, eax
jnz     short loc_403d55
mov     ebp, offset arichedit
test    ebp, ebp
jz      def_403d1f
mov     ebx, hinstance
mov     edi, [esi+14h]
mov     ecx, [esi+1ch]
mov     edx, [esi+10h]
mov     eax, [esi+18h]
push    0
push    ebx
xor     ebx, ebx
mov     bx, [esi+2]
sub     ecx, edi
push    ebx
mov     ebx, [esp+1ch+hwndparent]
sub     eax, edx
push    ebx
push    ecx
push    eax
mov     eax, [esi+8]
push    edi
push    edx
mov     edx, [esi+4]
push    edx
push    offset windowname
push    ebp
push    eax
call    ds:createwindowexa
mov     edi, eax
test    edi, edi
jz      def_403d1f
mov     eax, wparam
test    eax, eax
jz      short loc_403dbd
mov     ebx, ds:sendmessagea
push    0
push    eax
push    30h
push    edi
call    ebx
jmp     short loc_403dc3
mov     ebx, ds:sendmessagea
cmp     word ptr [esi], 0fh
jnz     short def_403d1f
mov     ebp, ds:setwindowlonga
push    offset sub_403c40
push    0fffffffch
push    edi
call    ebp
push    eax
push    0ffffffebh
push    edi
call    ebp
mov     cl, [esi+0ch]
mov     eax, [esp+10h+lparam]
test    cl, 1
jz      short loc_403df1
mov     eax, [esp+10h+arg_10]
jmp     short loc_403dfe
cmp     eax, 0ffffffffh
jnz     short loc_403e03
push    0fh
call    ds:getsyscolor
cmp     eax, 0ffffffffh
jz      short loc_403e0e
push    eax
push    0
push    443h
push    edi
call    ebx
mov     eax, dword_41ce2c
xor     ebp, ebp
test    eax, eax
jz      short loc_403e2a
push    0
push    1
push    45bh
push    edi
mov     ebp, 4000000h
call    ebx
test    byte ptr [esi+0ch], 1
jnz     short loc_403e36
or      ebp, 80000h
push    ebp
push    0
push    445h
push    edi
call    ebx
mov     eax, [esp+10h+arg_4]
add     esi, 20h
dec     eax
mov     [esp+10h+arg_4], eax
jnz     loc_403d08
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
push    esi
mov     esi, [esp+4+hwnd]
test    esi, esi
push    edi
jz      short loc_403ead
mov     edi, ds:getwindow
push    5
push    esi
call    edi
test    eax, eax
jz      short loc_403ead
push    ebx
mov     ebx, ds:destroywindow
push    eax
call    ebx
push    5
push    esi
call    edi
test    eax, eax
jnz     short loc_403ea0
pop     ebx
pop     edi
pop     esi
retn
sub     esp, 0ch
mov     eax, [esp+0ch+lpbits]
push    ebx
push    esi
push    edi
xor     edi, edi
cmp     eax, 0ffffffffh
mov     [esp+18h+ho], edi
mov     [esp+18h+hpal], edi
jnz     short loc_403edf
mov     esi, ds:getsyscolor
push    10h
call    esi
push    14h
mov     ebx, eax
call    esi
mov     [esp+18h+color], eax
jmp     short loc_403f13
mov     ebx, eax
xor     ecx, ecx
shr     ebx, 10h
and     ebx, 0ffh
mov     cl, ah
and     ebx, 0fffffffeh
and     ecx, 0ffh
shl     ebx, 8
and     ecx, 0fffffffeh
and     eax, 0ffh
or      ebx, ecx
mov     [esp+18h+color], 0ffffffh
shl     ebx, 7
shr     eax, 1
or      ebx, eax
mov     esi, [esp+18h+hdc]
push    ebp
mov     ebp, [esp+1ch+arg_c]
cmp     ebp, edi
jz      loc_40407b
mov     edi, [esp+1ch+lpbmi]
mov     cx, [edi+0eh]
lea     edx, [edi+28h]
cmp     cx, 8
mov     [esp+1ch+lpbits], edx
ja      loc_403fd1
mov     eax, [edi+20h]
test    eax, eax
jz      short loc_403f57
shl     ax, 2
and     eax, 0ffffh
mov     ecx, edx
add     ecx, eax
mov     [esp+1ch+lpbits], ecx
jmp     short loc_403f6e
mov     eax, [esp+1ch+lpbits]
mov     edx, 4
shl     edx, cl
and     edx, 0ffffh
add     eax, edx
mov     [esp+1ch+lpbits], eax
mov     ebp, ds:getdevicecaps
push    0eh
push    esi
call    ebp
mov     edx, eax
push    0ch
push    esi
mov     [esp+24h+hdc], edx
call    ebp
mov     ecx, [esp+1ch+hdc]
imul    ecx, eax
cmp     ecx, 8
jg      short loc_403fcd
cmp     word ptr [edi+0eh], 8
jnz     short loc_403fa9
push    edi
push    esi
call    sub_4013f0
add     esp, 8
mov     [esp+1ch+ho], eax
test    eax, eax
jnz     short loc_403fb8
push    esi
call    ds:createhalftonepalette
test    eax, eax
mov     [esp+1ch+ho], eax
jz      short loc_403fcd
push    0
push    eax
push    esi
call    ds:selectpalette
push    esi
mov     [esp+20h+hpal], eax
call    ds:realizepalette
mov     ebp, [esp+1ch+arg_c]
mov     edx, [esp+1ch+lpbits]
mov     eax, [edi+8]
mov     ecx, [edi+4]
push    0cc0020h
push    0
push    edi
push    edx
push    eax
push    ecx
push    0
push    0
push    eax
mov     eax, [ebp+4]
push    ecx
mov     ecx, [ebp+0]
push    eax
push    ecx
push    esi
call    ds:stretchdibits
mov     eax, [esp+1ch+arg_18]
test    eax, eax
jz      short loc_40407b
mov     ecx, [esp+1ch+arg_c]
mov     edi, [ebp+0]
mov     ebp, [ebp+4]
push    ebx
mov     eax, [ecx+8]
mov     ecx, [ecx+0ch]
sub     eax, edi
sub     ecx, ebp
mov     [esp+20h+lpbits], eax
dec     eax
push    1
push    eax
push    ebp
push    edi
push    esi
mov     [esp+34h+arg_c], ecx
call    sub_401390
mov     edx, [esp+34h+arg_c]
push    ebx
dec     edx
push    edx
push    1
push    ebp
push    edi
push    esi
call    sub_401390
mov     eax, [esp+4ch+color]
mov     edx, [esp+4ch+arg_c]
mov     ecx, [esp+4ch+lpbits]
push    eax
push    1
lea     eax, [edx+ebp-1]
push    ecx
push    eax
push    edi
push    esi
call    sub_401390
mov     ecx, [esp+64h+color]
mov     edx, [esp+64h+arg_c]
mov     eax, [esp+64h+lpbits]
add     esp, 48h
push    ecx
push    edx
push    1
lea     ecx, [eax+edi-1]
push    ebp
push    ecx
push    esi
call    sub_401390
add     esp, 18h
mov     edi, [esp+1ch+arg_10]
pop     ebp
test    edi, edi
jz      short loc_4040ea
mov     eax, [edi]
mov     ecx, [edi+8]
lea     edx, [eax+2]
cmp     ecx, edx
jnz     short loc_4040bb
mov     ecx, [edi+4]
mov     edx, [edi+0ch]
sub     edx, ecx
push    ebx
push    edx
push    1
push    ecx
push    eax
push    esi
call    sub_401390
mov     eax, [edi+4]
mov     edx, [edi+0ch]
mov     ecx, [esp+30h+color]
sub     edx, eax
push    ecx
push    edx
push    1
push    eax
mov     eax, [edi+8]
dec     eax
jmp     short loc_4040e0
push    ebx
sub     ecx, eax
push    1
push    ecx
mov     ecx, [edi+4]
push    ecx
push    eax
push    esi
call    sub_401390
mov     edx, [esp+30h+color]
mov     eax, [edi]
mov     ecx, [edi+8]
push    edx
mov     edx, [edi+0ch]
sub     ecx, eax
push    1
dec     edx
push    ecx
push    edx
push    eax
push    esi
call    sub_401390
add     esp, 30h
mov     edi, [esp+18h+ho]
test    edi, edi
jz      short loc_404107
mov     eax, [esp+18h+hpal]
push    1
push    eax
push    esi
call    ds:selectpalette
push    edi
call    ds:deleteobject
pop     edi
pop     esi
pop     ebx
add     esp, 0ch
retn
sub     esp, 78h
push    ebx
push    esi
push    edi
mov     edi, [esp+84h+arg_4]
cmp     edi, 132h
ja      loc_404327
jz      loc_404347
mov     eax, edi
sub     eax, 0fh
jz      short loc_4041a8
sub     eax, 73h
jz      short loc_404160
sub     eax, 8eh
jnz     short loc_40417e
mov     eax, [esp+84h+hwnd]
push    0
push    eax
call    ds:showwindow
pop     edi
pop     esi
mov     eax, 1
pop     ebx
add     esp, 78h
retn    10h
mov     eax, dword_41ce60
xor     esi, esi
cmp     eax, esi
jz      short loc_404178
push    eax
call    ds:deleteobject
mov     dword_41ce60, esi
mov     dword_41ce80, esi
mov     ebx, [esp+84h+hwnd]
mov     edx, [esp+84h+arg_c]
mov     eax, [esp+84h+hdc]
push    edx
push    eax
push    edi
push    ebx
call    sub_403a90
add     esp, 10h
pop     edi
pop     esi
pop     ebx
add     esp, 78h
retn    10h
mov     ebx, [esp+84h+hwnd]
lea     ecx, [esp+84h+paint]
push    ecx
push    ebx
call    ds:beginpaint
test    eax, eax
jz      short loc_404185
mov     edx, dword_41cde0
mov     eax, dword_41ce04
push    ebp
xor     esi, esi
mov     ebp, [edx+eax*4+7eh]
cmp     ebp, esi
jz      loc_404315
mov     eax, [ebp+0]
xor     edi, edi
test    ah, 1
mov     [esp+88h+var_78], esi
mov     [esp+88h+var_74], esi
jz      short loc_40420a
lea     edx, [esp+88h+rect]
lea     ecx, [esp+88h+rect]
push    edx
push    ebx
mov     [esp+90h+var_78], ecx
call    ds:getclientrect
mov     eax, [esp+88h+rect.bottom]
add     eax, 0fffffffeh
mov     [esp+88h+rect.top], eax
mov     ecx, [ebp+28h]
test    ecx, ecx
jz      loc_4042e8
mov     eax, dword_41cddc
mov     edx, [eax+ecx*4]
test    edx, edx
jz      loc_4042e8
mov     edi, [ebp+0]
lea     ecx, [esp+88h+var_60]
mov     esi, eax
push    ecx
shr     edi, 0ah
push    ebx
add     esi, edx
and     edi, 1
call    ds:getclientrect
mov     ebx, [esp+88h+var_60.right]
xor     eax, eax
mov     edx, [esp+88h+var_60.left]
mov     ecx, ebx
mov     [esp+88h+var_6c], eax
mov     [esp+88h+var_70], eax
sub     ecx, edx
mov     edx, [esi+4]
cmp     edx, ecx
mov     [esp+88h+var_68], edx
jl      short loc_404263
mov     [esp+88h+var_68], ecx
mov     ecx, [esp+88h+var_60.bottom]
mov     edx, [esp+88h+var_60.top]
sub     ecx, edx
mov     edx, [esi+8]
cmp     edx, ecx
mov     [esp+88h+var_64], edx
jl      short loc_40427c
mov     [esp+88h+var_64], ecx
mov     edx, [ebp+0]
xor     ecx, ecx
test    dh, 2
jz      short loc_4042a4
mov     eax, [esp+88h+var_60.bottom]
mov     edx, [esi+8]
sub     eax, edx
mov     edx, [esp+88h+var_60.top]
sub     eax, edx
cdq
sub     eax, edx
sar     eax, 1
test    eax, eax
mov     [esp+88h+var_6c], eax
jle     short loc_4042a4
mov     ecx, eax
mov     edx, [ebp+0]
test    dh, 8
jz      short loc_4042b9
sub     ebx, [esi+4]
sub     ebx, ecx
mov     ecx, [esp+88h+var_60.left]
sub     ebx, ecx
jmp     short loc_4042bb
mov     ebx, ecx
mov     [esp+88h+var_70], ebx
mov     edx, [esi+4]
add     edx, ebx
mov     ebx, [esp+88h+hwnd]
mov     [esp+88h+var_68], edx
mov     ecx, [esi+8]
add     ecx, eax
lea     eax, [esp+88h+var_70]
lea     edx, [esp+88h+var_70]
mov     [esp+88h+var_64], ecx
test    eax, eax
mov     [esp+88h+var_74], edx
jnz     short loc_4042f0
mov     eax, [esp+88h+var_78]
test    eax, eax
jz      short loc_40430e
mov     ecx, [ebp+20h]
mov     edx, [esp+88h+var_78]
mov     eax, [esp+88h+var_74]
push    edi
push    ecx
mov     ecx, [esp+90h+paint.hdc]
push    edx
push    eax
push    esi
push    ecx
push    ebx
call    sub_403eb0
add     esp, 1ch
mov     edi, [esp+88h+arg_4]
lea     edx, [esp+88h+paint]
push    edx
push    ebx
call    ds:endpaint
pop     ebp
jmp     loc_404185
cmp     edi, 135h
jb      loc_40417e
cmp     edi, 136h
jbe     short loc_404347
cmp     edi, 138h
jnz     loc_40417e
mov     eax, dword_41cde0
mov     ecx, dword_41ce04
mov     esi, [eax+ecx*4+7eh]
test    esi, esi
jz      loc_40417e
mov     eax, [esi+20h]
or      ebx, 0ffffffffh
cmp     eax, ebx
jnz     short loc_404371
cmp     [esi+24h], ebx
jz      loc_40417e
mov     eax, [esi+24h]
mov     edi, [esp+84h+hdc]
cmp     eax, ebx
jz      short loc_404387
push    eax
push    edi
call    ds:settextcolor
mov     esi, [esi+20h]
cmp     esi, ebx
jz      short loc_404396
push    esi
push    edi
call    ds:setbkcolor
mov     eax, dword_41ce60
pop     edi
pop     esi
pop     ebx
add     esp, 78h
retn    10h
sub     esp, 78h
push    ebp
push    esi
mov     esi, [esp+80h+arg_4]
push    edi
cmp     esi, 132h
ja      loc_4045ae
jz      loc_4045ce
mov     eax, esi
sub     eax, 0fh
jz      short loc_404448
sub     eax, 73h
jz      short loc_404400
sub     eax, 8eh
jnz     short loc_40441e
mov     eax, [esp+84h+hwnd]
push    0
push    eax
call    ds:showwindow
pop     edi
pop     esi
mov     eax, 1
pop     ebp
add     esp, 78h
retn    10h
mov     eax, dword_41ce64
xor     edi, edi
cmp     eax, edi
jz      short loc_404418
push    eax
call    ds:deleteobject
mov     dword_41ce64, edi
mov     dword_41ce7c, edi
mov     ebp, [esp+84h+hwnd]
mov     eax, [esp+84h+arg_c]
mov     ecx, [esp+84h+hdc]
push    eax
push    ecx
push    esi
push    ebp
call    sub_403a90
add     esp, 10h
pop     edi
pop     esi
pop     ebp
add     esp, 78h
retn    10h
mov     ebp, [esp+84h+hwnd]
lea     ecx, [esp+84h+paint]
push    ecx
push    ebp
call    ds:beginpaint
test    eax, eax
jz      short loc_404425
mov     edx, dword_41cde0
mov     eax, dword_41ce04
push    ebx
xor     edi, edi
mov     ebx, [edx+eax*4+7eh]
cmp     ebx, edi
jz      loc_40459c
mov     al, [ebx]
xor     esi, esi
test    al, 10h
mov     [esp+88h+var_78], edi
mov     [esp+88h+var_74], edi
jz      short loc_4044a8
lea     edx, [esp+88h+rect]
lea     ecx, [esp+88h+rect]
push    edx
push    ebp
mov     [esp+90h+var_78], ecx
call    ds:getclientrect
mov     eax, [esp+88h+rect.right]
add     eax, 0fffffffeh
mov     [esp+88h+rect.left], eax
mov     ecx, [ebx+18h]
test    ecx, ecx
jz      loc_40456f
mov     eax, dword_41cddc
mov     edx, [eax+ecx*4]
test    edx, edx
jz      loc_40456f
mov     edi, [ebx]
lea     ecx, [esp+88h+var_60]
mov     esi, eax
push    ecx
shr     edi, 6
push    ebp
add     esi, edx
and     edi, 1
call    ds:getclientrect
mov     ebp, [esp+88h+var_60.left]
xor     eax, eax
mov     [esp+88h+var_6c], eax
mov     [esp+88h+var_70], eax
mov     eax, [esp+88h+var_60.right]
mov     edx, [esi+4]
mov     ecx, eax
mov     [esp+88h+var_68], edx
sub     ecx, ebp
cmp     edx, ecx
jl      short loc_404500
mov     [esp+88h+var_68], ecx
mov     ecx, [esp+88h+var_60.bottom]
mov     edx, [esp+88h+var_60.top]
sub     ecx, edx
mov     edx, [esi+8]
cmp     edx, ecx
mov     [esp+88h+var_64], edx
jl      short loc_404519
mov     [esp+88h+var_64], ecx
test    byte ptr [ebx], 20h
jz      short loc_404558
sub     eax, [esi+4]
sub     eax, ebp
cdq
sub     eax, edx
mov     edx, [esp+88h+var_60.top]
mov     ecx, eax
mov     eax, [esp+88h+var_60.bottom]
sar     ecx, 1
mov     [esp+88h+var_70], ecx
mov     ebp, [esi+8]
sub     eax, ebp
sub     eax, edx
cdq
sub     eax, edx
sar     eax, 1
mov     [esp+88h+var_6c], eax
mov     edx, [esi+4]
add     edx, ecx
mov     [esp+88h+var_68], edx
mov     ecx, [esi+8]
add     ecx, eax
mov     [esp+88h+var_64], ecx
mov     ebp, [esp+88h+hwnd]
lea     eax, [esp+88h+var_70]
lea     edx, [esp+88h+var_70]
test    eax, eax
mov     [esp+88h+var_74], edx
jnz     short loc_404577
mov     eax, [esp+88h+var_78]
test    eax, eax
jz      short loc_404595
mov     ecx, [ebx+14h]
mov     edx, [esp+88h+var_78]
mov     eax, [esp+88h+var_74]
push    edi
push    ecx
mov     ecx, [esp+90h+paint.hdc]
push    edx
push    eax
push    esi
push    ecx
push    ebp
call    sub_403eb0
add     esp, 1ch
mov     esi, [esp+88h+arg_4]
lea     edx, [esp+88h+paint]
push    edx
push    ebp
call    ds:endpaint
pop     ebx
jmp     loc_404425
cmp     esi, 135h
jb      loc_40441e
cmp     esi, 136h
jbe     short loc_4045ce
cmp     esi, 138h
jnz     loc_40441e
mov     eax, dword_41cde0
mov     ecx, dword_41ce04
mov     eax, [eax+ecx*4+7eh]
test    eax, eax
jz      loc_40441e
mov     eax, [eax+14h]
cmp     eax, 0ffffffffh
jz      loc_40441e
mov     edx, [esp+84h+hdc]
push    eax
push    edx
call    ds:setbkcolor
mov     eax, dword_41ce64
pop     edi
pop     esi
pop     ebp
add     esp, 78h
retn    10h
sub     esp, 50h
push    ebx
mov     ebx, [esp+54h+hdlg]
push    ebp
mov     ebp, [esp+58h+lparam]
push    esi
mov     esi, [esp+5ch+arg_4]
push    edi
mov     edi, [esp+60h+wparam]
cmp     esi, 111h
ja      loc_404824
cmp     esi, 111h
jz      loc_404798
mov     eax, esi
sub     eax, 0fh
jz      loc_404734
sub     eax, 73h
jz      loc_4046fa
sub     eax, 8eh
jnz     def_404833
mov     eax, dword_41cde0
mov     esi, [eax+54h]
push    esi
call    ds:createsolidbrush
mov     dword_41ce68, eax
mov     eax, dword_41cde0
push    0ffffffffh
push    esi
mov     ecx, [eax+60h]
mov     edx, [eax+5ch]
add     ecx, eax
mov     esi, ebx
push    ecx
push    edx
push    esi
call    sub_403cf0
push    0
push    8
call    sub_4036a0
mov     edi, ds:setdlgitemtexta
add     esp, 1ch
push    eax
push    415h
push    esi
call    edi
push    1
push    8
call    sub_4036a0
add     esp, 8
push    eax
push    1
push    esi
call    edi
push    2
push    8
call    sub_4036a0
add     esp, 8
push    eax
push    2
push    esi
call    edi
mov     eax, dword_41cde0
push    4
mov     ecx, [eax+58h]
mov     edx, [eax+0ch]
mov     eax, [eax+10h]
push    ecx
sub     eax, ecx
push    edx
push    eax
push    0
push    0
push    esi
call    ds:setwindowpos
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
add     esp, 50h
retn    10h
mov     eax, dword_41ce68
test    eax, eax
jz      short loc_404714
push    eax
call    ds:deleteobject
mov     dword_41ce68, 0
mov     dword_41ce74, 0
push    ebp
push    edi
push    esi
push    ebx
call    sub_403a90
add     esp, 10h
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 50h
retn    10h
lea     ecx, [esp+60h+paint]
push    ecx
push    ebx
call    ds:beginpaint
test    eax, eax
jz      short def_404833
mov     edx, dword_41cde0
test    byte ptr [edx+14h], 1
jz      short loc_40478a
lea     eax, [esp+60h+rect]
push    eax
push    ebx
call    ds:getclientrect
mov     edx, dword_41cde0
push    0
mov     ecx, [esp+64h+rect.top]
add     ecx, 2
mov     [esp+64h+rect.bottom], ecx
mov     eax, [edx+54h]
mov     edx, [esp+64h+paint.hdc]
lea     ecx, [esp+64h+rect]
push    eax
push    ecx
push    0
push    0
push    edx
push    ebx
call    sub_403eb0
add     esp, 1ch
lea     eax, [esp+60h+paint]
push    eax
push    ebx
call    ds:endpaint
jmp     short def_404833
mov     eax, dword_41ce78
test    eax, eax
jz      short loc_4047b7
push    ebp
push    edi
push    111h
push    eax
call    ds:sendmessagea
test    eax, eax
jnz     def_404833
mov     ecx, edi
and     ecx, 0ffffh
mov     eax, ecx
dec     eax
jz      short loc_404819
dec     eax
jz      short loc_4047d3
sub     eax, 413h
jz      short loc_404819
jmp     def_404833
mov     eax, dword_41ced0
test    ah, 1
jz      short loc_4047ec
mov     dword_41ce48, 2
jmp     def_404833
push    0fh
push    0eh
call    sub_4036f0
add     esp, 8
test    eax, eax
jz      def_404833
mov     dword_41ce48, 2
mov     dword_41ce1c, 1
jmp     def_404833
mov     dword_41ce48, ecx
jmp     def_404833
lea     eax, [esi-132h]
cmp     eax, 6
ja      def_404833
jmp     ds:jpt_404833[eax*4]
mov     ecx, dword_41cde0
mov     eax, [ecx+54h]
cmp     eax, 0ffffffffh
jz      def_404833
mov     edx, [esp+60h+wparam]
push    eax
push    edx
call    ds:setbkcolor
mov     eax, dword_41ce68
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 50h
retn    10h
push    ebx
push    ebp
mov     ebp, [esp+8+arg_4]
push    esi
push    edi
lea     eax, [ebp-82h]
cmp     eax, 0b6h
ja      def_4048b1
xor     ecx, ecx
mov     cl, ds:byte_404a70[eax]
jmp     ds:jpt_4048b1[ecx*4]
mov     edx, dword_41cde0
mov     eax, dword_41ce04
mov     esi, [edx+eax*4+7eh]
mov     ebx, [esi+4]
cmp     ebx, 0ffffffffh
jz      short loc_4048d2
push    ebx
jmp     short loc_4048db
push    0fh
call    ds:getsyscolor
push    eax
mov     ebp, ds:createsolidbrush
call    ebp
mov     dword_41ce70, eax
mov     edi, [esi+0ch]
cmp     edi, 0ffffffffh
jz      short loc_4048f3
push    edi
jmp     short loc_4048fc
push    5
call    ds:getsyscolor
push    eax
call    ebp
mov     dword_41ce6c, eax
xor     edx, edx
mov     eax, [esp+10h+hwndparent]
push    edi
mov     dword_41ce78, eax
mov     ecx, [esi+30h]
mov     dx, [esi+2ch]
add     ecx, esi
push    ebx
push    ecx
push    edx
push    eax
call    sub_403cf0
mov     ecx, dword_41cde0
mov     eax, [esi+1ch]
mov     esi, [esi+10h]
add     esp, 14h
mov     edx, [ecx+10h]
mov     ebp, [ecx+58h]
mov     ecx, [ecx+0ch]
sub     edx, ebp
sub     edx, eax
push    4
sub     ecx, esi
push    edx
mov     edx, dword_41ce78
push    ecx
push    eax
push    esi
push    0
push    edx
call    ds:setwindowpos
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
retn    10h
mov     eax, dword_41ce70
mov     esi, ds:deleteobject
xor     edi, edi
cmp     eax, edi
jz      short loc_40497a
push    eax
call    esi
mov     dword_41ce70, edi
mov     eax, dword_41ce6c
cmp     eax, edi
jz      short loc_40498c
push    eax
call    esi
mov     dword_41ce6c, edi
mov     dword_41ce78, edi
mov     ecx, [esp+10h+arg_c]
mov     edx, [esp+10h+hdc]
mov     eax, [esp+10h+hwndparent]
push    ecx
push    edx
push    ebp
push    eax
call    sub_403a90
add     esp, 10h
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    10h
mov     eax, dword_41cde0
mov     ecx, dword_41ce04
mov     esi, [eax+ecx*4+7eh]
test    esi, esi
jz      short def_4048b1
mov     eax, [esi+0ch]
or      ebx, 0ffffffffh
cmp     eax, ebx
jnz     short loc_4049d3
cmp     [esi+8], ebx
jz      short def_4048b1
mov     eax, [esi+8]
mov     edi, [esp+10h+hdc]
cmp     eax, ebx
jz      short loc_4049e6
push    eax
push    edi
call    ds:settextcolor
mov     esi, [esi+0ch]
cmp     esi, ebx
jz      short loc_4049f5
push    esi
push    edi
call    ds:setbkcolor
mov     eax, dword_41ce6c
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    10h
mov     edx, dword_41cde0
mov     eax, dword_41ce04
mov     esi, [edx+eax*4+7eh]
test    esi, esi
jz      def_4048b1
mov     eax, [esi+4]
or      ebx, 0ffffffffh
cmp     eax, ebx
jnz     short loc_404a2b
cmp     [esi+8], ebx
jz      def_4048b1
mov     eax, [esi+8]
mov     edi, [esp+10h+hdc]
cmp     eax, ebx
jz      short loc_404a3e
push    eax
push    edi
call    ds:settextcolor
mov     esi, [esi+4]
cmp     esi, ebx
jz      short loc_404a4d
push    esi
push    edi
call    ds:setbkcolor
mov     eax, dword_41ce70
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    10h
sub     esp, 1ch
lea     eax, [esp+1ch+msg]
push    0
push    0
push    0
push    0
push    eax
call    ds:peekmessagea
test    eax, eax
jz      loc_404c1d
push    ebx
mov     ebx, ds:translatemessage
push    ebp
mov     ebp, ds:dispatchmessagea
push    esi
mov     esi, ds:isdialogmessagea
push    edi
mov     edi, ds:getmessagea
push    0
push    0
lea     ecx, [esp+34h+msg]
push    0
push    ecx
call    edi
test    eax, eax
jnz     short loc_404b87
mov     dword_41ce48, 2
jmp     short loc_404bfe
mov     eax, hwndparent
test    eax, eax
jz      short loc_404b9c
lea     edx, [esp+2ch+msg]
push    edx
push    eax
call    esi
test    eax, eax
jnz     short loc_404bfe
mov     eax, dword_41ce08
test    eax, eax
jz      short loc_404bb1
lea     ecx, [esp+2ch+msg]
push    ecx
push    eax
call    esi
test    eax, eax
jnz     short loc_404bfe
mov     eax, dword_41ce74
test    eax, eax
jz      short loc_404bc6
lea     edx, [esp+2ch+msg]
push    edx
push    eax
call    esi
test    eax, eax
jnz     short loc_404bfe
mov     eax, dword_41ce80
test    eax, eax
jz      short loc_404bdb
lea     ecx, [esp+2ch+msg]
push    ecx
push    eax
call    esi
test    eax, eax
jnz     short loc_404bfe
mov     eax, dword_41ce7c
test    eax, eax
jz      short loc_404bf0
lea     edx, [esp+2ch+msg]
push    edx
push    eax
call    esi
test    eax, eax
jnz     short loc_404bfe
lea     eax, [esp+2ch+msg]
push    eax
call    ebx
lea     ecx, [esp+2ch+msg]
push    ecx
call    ebp
push    0
push    0
push    0
lea     edx, [esp+38h+msg]
push    0
push    edx
call    ds:peekmessagea
test    eax, eax
jnz     loc_404b6a
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 1ch
retn
push    ecx
mov     eax, dword_41cde0
mov     ecx, dword_41ce04
push    ebx
push    esi
mov     ebx, [eax+ecx*4+7eh]
mov     eax, dword_41ce60
push    edi
xor     edi, edi
cmp     eax, edi
jz      short loc_404c5b
push    eax
call    ds:deleteobject
mov     dword_41ce60, edi
mov     edx, dword_41ce80
push    edx
call    sub_403e80
mov     eax, [ebx+1ch]
add     esp, 4
cmp     eax, edi
jz      loc_404df8
mov     esi, [ebx+20h]
cmp     esi, 0ffffffffh
jz      short loc_404c80
push    esi
jmp     short loc_404c89
push    0fh
call    ds:getsyscolor
push    eax
call    ds:createsolidbrush
mov     edx, dword_41ce80
mov     dword_41ce60, eax
mov     eax, [ebx+34h]
push    ebp
xor     ecx, ecx
push    0ffffffffh
mov     cx, [ebx+2eh]
add     eax, ebx
push    esi
push    eax
push    ecx
push    edx
call    sub_403cf0
mov     eax, dword_41ce04
push    edi
push    eax
xor     ebp, ebp
call    sub_4036a0
mov     cl, [eax]
add     esp, 1ch
cmp     cl, 3ch
mov     [esp+14h+var_4], eax
jz      loc_404d63
mov     edi, eax
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
add     ecx, 7
push    ecx
call    _malloc
mov     ebp, eax
or      ecx, 0ffffffffh
mov     edi, offset ab_0
xor     eax, eax
add     esp, 4
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, ebp
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, [esp+14h+var_4]
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     [esp+14h+var_4], ebp
mov     esi, edi
mov     edx, ecx
mov     edi, ebp
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, offset ab
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edx, ecx
mov     edi, ebp
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
mov     eax, ebp
and     ecx, 3
rep movsb
xor     edi, edi
mov     esi, ds:getdlgitem
push    eax
mov     eax, dword_41ce80
push    416h
push    eax
call    esi
push    eax
call    sub_405680
mov     ecx, dword_41ce04
push    1
push    ecx
call    sub_4036a0
mov     edx, dword_41ce80
add     esp, 10h
push    eax
push    417h
push    edx
call    esi
push    eax
call    sub_405680
add     esp, 8
cmp     ebp, edi
jz      short loc_404db3
push    ebp
call    sub_4122c3
add     esp, 4
mov     ecx, [ebx+1ch]
mov     edx, dword_41cde0
mov     eax, [ebx+10h]
push    4
push    ecx
mov     ecx, [edx+0ch]
mov     edx, dword_41ce80
sub     ecx, eax
push    ecx
push    edi
push    eax
push    edi
push    edx
call    ds:setwindowpos
mov     eax, dword_41ce80
mov     esi, ds:showwindow
push    5
push    eax
call    esi
mov     ecx, dword_41ce80
push    ecx
call    ds:updatewindow
pop     ebp
jmp     short loc_404e08
mov     edx, dword_41ce80
mov     esi, ds:showwindow
push    edi
push    edx
call    esi
mov     eax, dword_41ce64
cmp     eax, edi
jz      short loc_404e1e
push    eax
call    ds:deleteobject
mov     dword_41ce64, edi
cmp     [ebx+10h], edi
jz      short loc_404e7c
mov     eax, [ebx+14h]
cmp     eax, 0ffffffffh
jnz     short loc_404e33
push    0fh
call    ds:getsyscolor
push    eax
call    ds:createsolidbrush
mov     dword_41ce64, eax
mov     eax, dword_41cde0
push    4
mov     ecx, [eax+10h]
mov     edx, [eax+58h]
mov     eax, dword_41ce7c
sub     ecx, edx
mov     edx, [ebx+10h]
push    ecx
push    edx
push    edi
push    edi
push    edi
push    eax
call    ds:setwindowpos
mov     ecx, dword_41ce7c
push    5
push    ecx
call    esi
mov     edx, dword_41ce7c
push    edx
call    ds:updatewindow
jmp     short loc_404e85
mov     eax, dword_41ce7c
push    edi
push    eax
call    esi
mov     ecx, dword_41ce80
mov     ebx, ds:iswindowvisible
push    ecx
call    ebx
mov     esi, ds:invalidaterect
test    eax, eax
jz      short loc_404eaa
mov     edx, dword_41ce80
push    1
push    edi
push    edx
call    esi
mov     eax, dword_41ce7c
push    eax
call    ebx
test    eax, eax
jz      short loc_404ec2
mov     ecx, dword_41ce7c
push    1
push    edi
push    ecx
call    esi
mov     edx, [esp+10h+lpdialogfunc]
mov     eax, hwndparent
mov     ecx, hinstance
push    edi
push    edx
push    eax
push    70h
push    ecx
mov     dword_41ce48, edi
call    ds:createdialogparama
mov     esi, eax
cmp     esi, edi
jz      short loc_404f2c
cmp     dword_41ce48, edi
jnz     short loc_404f1c
call    sub_404b30
cmp     dword_41ce48, edi
jnz     short loc_404f1c
cmp     dword_41cc50, edi
jz      short loc_404ef1
call    sub_4089d0
test    eax, eax
jnz     short loc_404f14
call    sub_407f80
cmp     dword_41ce48, edi
jz      short loc_404ef1
push    esi
call    ds:destroywindow
mov     eax, dword_41ce48
cmp     eax, edi
jnz     short loc_404f31
mov     eax, 2
pop     edi
pop     esi
pop     ebx
pop     ecx
retn
mov     eax, dword_418030
push    esi
or      esi, 0ffffffffh
cmp     ax, 0ffffh
jz      short loc_404f56
and     eax, 0ffffh
jmp     short loc_404f68
mov     ecx, dword_41cec8
mov     edx, dword_41cdbc
xor     eax, eax
mov     al, [ecx+edx+32h]
mov     dword_41ce04, eax
mov     eax, lpdialogfunc[eax*4]
push    eax
call    sub_404c30
mov     ecx, eax
mov     eax, dword_418030
add     esp, 4
cmp     ax, 0ffffh
jnz     loc_40502d
dec     ecx
jz      short loc_404fb3
dec     ecx
jz      loc_405027
sub     ecx, 413h
jnz     short loc_40501a
mov     ecx, dword_41cec8
test    ecx, ecx
jle     short loc_40501a
dec     ecx
mov     dword_41cec8, ecx
jmp     short loc_40501a
mov     ecx, dword_41cec8
mov     edx, dword_41cdbc
inc     ecx
mov     dword_41cec8, ecx
mov     cl, [ecx+edx+32h]
cmp     cl, 0ffh
jz      short loc_405027
cmp     cl, 6
jnz     short loc_404ff7
cmp     dword_41ce04, 5
jz      short loc_404ff7
test    byte ptr [edx+2], 20h
jz      short loc_404ff7
mov     ecx, dword_41cebc
test    ecx, ecx
jnz     short loc_404ff7
call    sub_409310
mov     eax, dword_418030
mov     edx, dword_41cec8
mov     ecx, dword_41cdbc
cmp     byte ptr [edx+ecx+32h], 6
jnz     short loc_40501a
test    byte ptr [ecx+2], 40h
jz      short loc_40501a
mov     ecx, dword_41cebc
test    ecx, ecx
jz      short loc_405027
cmp     dword_41ce04, esi
jz      short loc_40502d
jmp     loc_404f49
mov     dword_41ce04, esi
pop     esi
retn
mov     eax, [esp+arg_4]
push    eax
push    7
call    sub_4036a0
mov     cl, [eax]
add     esp, 8
test    cl, cl
mov     edx, eax
jz      short loc_40505a
cmp     cl, 25h
jnz     short loc_405052
cmp     byte ptr [edx+1], 73h
jz      short loc_405080
mov     cl, [edx+1]
inc     edx
test    cl, cl
jnz     short loc_405047
push    esi
push    edi
mov     edi, eax
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, [esp+8+arg_0]
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
pop     edi
pop     esi
retn
mov     ecx, dword_41ceac
mov     edx, [esp+arg_0]
push    ecx
push    eax
push    edx
call    ds:wsprintfa
add     esp, 0ch
retn
push    ebx
push    ebp
mov     ebp, [esp+8+arg_4]
push    esi
mov     esi, [esp+0ch+lpbuffer]
push    edi
mov     ebx, 1
push    esi
push    104h
call    ds:gettemppatha
push    esi
call    sub_402060
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 4
repne scasb
not     ecx
dec     ecx
push    ebx
add     ecx, esi
push    ebp
push    ecx
call    ds:wsprintfa
push    0
push    esi
call    sub_401040
add     esp, 14h
cmp     eax, 0ffffffffh
jz      short loc_4050fb
push    eax
call    sub_4012c0
add     esp, 4
or      eax, 0ffffffffh
jmp     short loc_405109
push    esi
call    sub_401090
add     esp, 4
cmp     eax, 0ffffffffh
jnz     short loc_405112
inc     ebx
cmp     ebx, 3e7h
jl      short loc_4050b1
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
sub     esp, 8
mov     eax, [esp+8+hfile]
push    ebx
push    edi
push    eax
xor     edi, edi
call    sub_4011c0
lea     ecx, [esp+14h+lpbuffer]
mov     ebx, eax
push    ecx
push    4000h
mov     [esp+1ch+var_4], edi
call    sub_4020e0
add     esp, 0ch
test    eax, eax
jz      loc_40521f
cmp     ebx, edi
jz      loc_4051fc
push    ebp
mov     ebp, [esp+14h+lpbuffer]
push    esi
cmp     ebx, 4000h
mov     esi, ebx
jb      short loc_40516e
mov     esi, 4000h
mov     edx, [esp+18h+hfile]
push    esi
push    ebp
push    edx
call    sub_4010c0
mov     ebp, [esp+24h+lpbuffer]
mov     edx, esi
add     esp, 0ch
mov     eax, ebp
shr     edx, 2
mov     ecx, edi
jz      short loc_4051cd
mov     edi, edx
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
dec     edi
jnz     short loc_40518e
mov     edx, esi
and     edx, 3
jbe     short loc_4051e6
mov     edi, ecx
shr     edi, 1fh
lea     edi, [edi+ecx*2]
xor     ecx, ecx
mov     cl, [eax]
add     ecx, edi
inc     eax
dec     edx
jnz     short loc_4051d4
mov     edi, ecx
mov     ecx, [esp+18h+var_4]
add     ecx, esi
sub     ebx, esi
mov     [esp+18h+var_4], ecx
jnz     loc_40515f
pop     esi
pop     ebp
lea     eax, [esp+10h+lpbuffer]
push    eax
call    sub_402160
mov     ecx, [esp+14h+arg_4]
mov     edx, [esp+14h+arg_8]
add     esp, 4
mov     [ecx], edi
mov     dword ptr [edx], 0
pop     edi
pop     ebx
add     esp, 8
retn
mov     eax, [esp+10h+arg_4]
mov     ecx, [esp+10h+arg_8]
mov     [eax], edi
mov     [ecx], edi
pop     edi
pop     ebx
add     esp, 8
retn
sub     esp, 428h
push    ebx
push    ebp
push    esi
lea     eax, [esp+434h+ppv]
push    edi
push    eax
push    offset riid
push    1
push    0
push    offset rclsid
mov     [esp+44ch+var_41c], 0
call    ds:cocreateinstance
test    eax, eax
jl      loc_40552f
mov     eax, [esp+438h+ppv]
mov     ebx, [esp+438h+arg_0]
push    ebx
push    eax
mov     ecx, [eax]
call    dword ptr [ecx+50h]
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [esp+438h+str]
repne scasb
not     ecx
sub     edi, ecx
push    5ch
mov     eax, ecx
mov     esi, edi
mov     edi, edx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
lea     ecx, [esp+43ch+str]
push    ecx
call    _strrchr
add     esp, 8
test    eax, eax
jz      short loc_4052cd
mov     byte ptr [eax], 0
mov     eax, [esp+438h+ppv]
lea     ecx, [esp+438h+str]
mov     edx, [eax]
push    ecx
push    eax
call    dword ptr [edx+24h]
mov     eax, [esp+438h+arg_8]
test    eax, eax
jz      short loc_4052e8
cmp     byte ptr [eax], 0
jz      short loc_4052e8
mov     ecx, [esp+438h+ppv]
push    eax
push    ecx
mov     edx, [ecx]
call    dword ptr [edx+2ch]
mov     edx, [esp+438h+arg_10]
mov     eax, [esp+438h+arg_c]
test    edx, edx
jnz     short loc_405303
test    eax, eax
jz      short loc_40531a
cmp     byte ptr [eax], 0
jz      short loc_40531a
test    eax, eax
jz      short loc_40530c
cmp     byte ptr [eax], 0
jnz     short loc_40530e
mov     eax, ebx
mov     ecx, [esp+438h+ppv]
push    edx
push    eax
push    ecx
mov     esi, [ecx]
call    dword ptr [esi+44h]
mov     eax, [esp+438h+ppv]
lea     edx, [esp+438h+var_420]
push    edx
push    offset dword_4164d4
mov     ecx, [eax]
push    eax
call    dword ptr [ecx]
mov     ebp, [esp+438h+lpmultibytestr]
mov     esi, eax
test    esi, esi
mov     [esp+438h+var_424], esi
jl      loc_405454
lea     eax, [esp+438h+widecharstr]
push    104h
push    eax
push    0ffffffffh
push    ebp
push    0
push    0
call    ds:multibytetowidechar
mov     eax, [esp+438h+var_420]
lea     edx, [esp+438h+widecharstr]
push    1
push    edx
mov     ecx, [eax]
push    eax
call    dword ptr [ecx+18h]
test    eax, eax
mov     [esp+438h+var_424], eax
jl      loc_405446
mov     eax, [esp+438h+var_420]
lea     edx, [esp+438h+lpwidecharstr]
push    edx
push    eax
mov     ecx, [eax]
call    dword ptr [ecx+20h]
test    eax, eax
jl      loc_40543e
mov     eax, [esp+438h+lpwidecharstr]
test    eax, eax
jz      loc_40543e
push    0
push    0
lea     ecx, [esp+440h+multibytestr]
push    104h
push    ecx
push    0ffffffffh
push    eax
push    0
push    0
call    ds:widechartomultibyte
lea     edx, [esp+438h+ppmalloc]
push    edx
push    1
call    ds:cogetmalloc
test    eax, eax
jl      short loc_4053dd
mov     eax, [esp+438h+ppmalloc]
mov     edx, [esp+438h+lpwidecharstr]
push    edx
push    eax
mov     ecx, [eax]
call    dword ptr [ecx+14h]
push    2eh
push    ebp
call    _strrchr
mov     ebx, eax
lea     eax, [esp+440h+multibytestr]
push    2eh
push    eax
call    _strrchr
add     esp, 10h
mov     edx, eax
test    ebx, ebx
jz      short loc_405446
test    edx, edx
jz      short loc_405446
mov     edi, edx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
mov     edi, ebx
mov     esi, ecx
or      ecx, 0ffffffffh
repne scasb
not     ecx
dec     ecx
cmp     esi, ecx
ja      short loc_405446
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, ebx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
jmp     short loc_405446
mov     [esp+438h+var_41c], 1
mov     eax, [esp+438h+var_420]
push    eax
mov     ecx, [eax]
call    dword ptr [ecx+8]
mov     esi, [esp+438h+var_424]
mov     eax, [esp+438h+ppv]
push    eax
mov     edx, [eax]
call    dword ptr [edx+8]
mov     eax, [esp+438h+var_41c]
test    eax, eax
jz      loc_40552d
push    0
push    ebp
call    sub_401040
add     esp, 8
cmp     eax, 0ffffffffh
jnz     loc_405524
or      ecx, eax
mov     edi, ebp
xor     eax, eax
repne scasb
not     ecx
dec     ecx
sub     ecx, 4
js      loc_40552d
lea     ebx, [ecx+ebp]
push    offset alnk
push    ebx
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     loc_40552d
mov     edi, offset apif
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
push    0
mov     eax, ecx
mov     esi, edi
mov     edi, ebx
push    ebp
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
call    sub_401040
add     esp, 8
cmp     eax, 0ffffffffh
jz      short loc_4054f3
push    eax
call    sub_4012c0
mov     eax, [esp+43ch+var_424]
add     esp, 4
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 428h
retn
mov     edi, offset alnk
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, [esp+438h+var_424]
mov     edx, ecx
mov     esi, edi
mov     edi, ebx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 428h
retn
push    eax
call    sub_4012c0
add     esp, 4
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 428h
retn
mov     eax, dword_41cc28
push    esi
test    eax, eax
push    edi
jnz     short loc_405563
push    1a0h
push    1
call    sub_412212
add     esp, 8
mov     dword_41cc28, eax
test    eax, eax
jz      short loc_40559c
mov     edi, [esp+8+arg_0]
xor     esi, esi
mov     edx, eax
mov     ecx, [edx]
test    ecx, ecx
jz      short loc_40557e
cmp     ecx, edi
jz      short loc_40559f
inc     esi
add     edx, 8
cmp     esi, 32h
jl      short loc_40556b
mov     ecx, [esp+8+arg_4]
mov     [eax+esi*8], edi
mov     eax, dword_41cc28
mov     [eax+esi*8+4], ecx
mov     edx, dword_41cc28
mov     dword ptr [edx+esi*8+8], 0
pop     edi
pop     esi
retn
mov     eax, [eax+esi*8+4]
push    eax
call    sub_4122c3
mov     edx, dword_41cc28
mov     ecx, [esp+0ch+arg_4]
add     esp, 4
mov     [edx+esi*8+4], ecx
pop     edi
pop     esi
retn
mov     eax, dword_41cc28
push    esi
test    eax, eax
push    edi
jz      short loc_4055eb
mov     esi, [esp+8+arg_0]
xor     edx, edx
mov     ecx, [eax]
test    ecx, ecx
jz      short loc_4055eb
cmp     ecx, esi
jnz     short loc_4055e2
mov     ecx, [eax+4]
test    ecx, ecx
jnz     short loc_4055f0
inc     edx
add     eax, 8
cmp     edx, 32h
jl      short loc_4055d1
pop     edi
xor     eax, eax
pop     esi
retn
mov     eax, [ecx]
cmp     eax, 0ffffffffh
jz      short loc_4055eb
mov     esi, [esp+8+arg_4]
cmp     esi, eax
lea     edx, [ecx+4]
jz      short loc_405621
mov     edi, edx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
add     ecx, 3
and     ecx, 0fffffffch
add     ecx, edx
mov     eax, [ecx]
cmp     eax, 0ffffffffh
jnz     short loc_4055fb
pop     edi
xor     eax, eax
pop     esi
retn
pop     edi
mov     eax, edx
pop     esi
retn
mov     ecx, dword_41cc28
test    ecx, ecx
jz      short locret_405679
push    esi
xor     esi, esi
cmp     dword ptr [esi+ecx], 0
jz      short loc_405665
mov     eax, [esi+ecx+4]
test    eax, eax
jz      short loc_40565a
push    eax
call    sub_4122c3
mov     ecx, dword_41cc28
add     esp, 4
add     esi, 8
cmp     esi, 190h
jl      short loc_40563d
push    ecx
call    sub_4122c3
add     esp, 4
mov     dword_41cc28, 0
pop     esi
retn
sub     esp, 7ch
mov     ecx, [esp+7ch+hwnd]
xor     eax, eax
cmp     ecx, eax
mov     [esp+7ch+var_70], eax
mov     [esp+7ch+count], eax
mov     [esp+7ch+var_68], eax
jz      loc_405be5
push    ebx
push    ebp
push    esi
push    edi
mov     esi, [esp+8ch+str]
mov     ecx, 0bh
or      eax, 0ffffffffh
lea     edi, [esp+8ch+var_3c]
rep stosd
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
add     ecx, 4
mov     eax, 0aaaaaaabh
mul     ecx
shr     edx, 2
shl     edx, 4
push    edx
call    _malloc
mov     [esp+90h+var_58], eax
mov     ebp, eax
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
add     ecx, 4
push    ecx
call    _malloc
mov     [esp+94h+lpmem], eax
mov     [esp+94h+var_5c], eax
mov     dword ptr [eax], 0ffffffffh
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
push    ecx
call    _malloc
mov     ebx, eax
push    3ch
push    esi
mov     [esp+0a0h+lpstring], eax
mov     byte ptr [eax], 0
mov     [esp+0a0h+var_7c], ebx
call    _strchr
mov     edx, eax
add     esp, 14h
test    edx, edx
mov     [esp+8ch+lparam], edx
jz      loc_4057ee
jmp     short loc_40573f
mov     edx, [esp+8ch+lparam]
mov     eax, edx
mov     edi, ebx
sub     eax, esi
mov     ecx, eax
mov     ebx, ecx
shr     ecx, 2
rep movsd
mov     ecx, ebx
and     ecx, 3
rep movsb
mov     ecx, [esp+8ch+var_7c]
mov     esi, offset off_4163a4
add     ecx, eax
xor     ebx, ebx
mov     [esp+8ch+var_7c], ecx
jmp     short loc_40576c
mov     edx, [esp+8ch+lparam]
mov     edi, [esi-4]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
mov     eax, [esi-4]
not     ecx
dec     ecx
push    ecx
push    eax
push    edx
call    __strnicmp
add     esp, 0ch
test    eax, eax
jz      loc_4059d6
mov     edx, [esi]
or      ecx, 0ffffffffh
mov     edi, edx
xor     eax, eax
repne scasb
mov     eax, [esp+8ch+lparam]
not     ecx
dec     ecx
push    ecx
push    edx
push    eax
call    __strnicmp
add     esp, 0ch
test    eax, eax
jz      loc_405a86
add     esi, 10h
inc     ebx
cmp     esi, offset awaremicrosoftw
jl      short loc_405768
mov     eax, [esp+8ch+var_7c]
mov     edx, [esp+8ch+lparam]
mov     byte ptr [eax], 3ch
inc     eax
mov     [esp+8ch+var_7c], eax
lea     esi, [edx+1]
push    3ch
push    esi
call    _strchr
mov     ebx, [esp+94h+var_7c]
add     esp, 8
test    eax, eax
mov     [esp+8ch+lparam], eax
jnz     loc_40573b
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [esp+8ch+var_3c]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, ebx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
xor     eax, eax
rep movsb
mov     ecx, [edx]
cmp     ecx, 0ffffffffh
jz      short loc_405847
mov     esi, [esp+8ch+lpstring]
mov     [ebp+0], eax
add     ebp, 4
mov     [ebp+0], ecx
mov     ecx, ebx
add     ebp, 4
sub     ecx, esi
mov     [ebp+0], ecx
mov     ecx, [esp+8ch+var_68]
add     ebp, 4
mov     [ebp+0], ecx
mov     ecx, [esp+8ch+var_70]
add     ebp, 4
inc     ecx
mov     [esp+8ch+var_70], ecx
inc     eax
add     edx, 4
cmp     eax, 0bh
jl      short loc_405813
mov     edx, [esp+8ch+lpstring]
mov     ebx, [esp+8ch+hwnd]
push    edx
push    ebx
call    ds:setwindowtexta
lea     eax, [esp+8ch+classname]
push    13h
push    eax
push    ebx
call    ds:getclassnamea
lea     ecx, [esp+8ch+classname]
push    offset arichedit20a
push    ecx
call    __strcmpi
add     esp, 8
test    eax, eax
jz      short loc_4058a1
lea     edx, [esp+8ch+classname]
push    offset arichedit
push    edx
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     loc_405bb6
mov     eax, dword_41cde0
mov     ecx, dword_41ce04
or      esi, 0ffffffffh
mov     edi, [eax+ecx*4+7eh]
test    edi, edi
jz      short loc_4058d4
push    ebx
call    ds:getparent
cmp     eax, dword_41ce80
jnz     short loc_4058c9
mov     esi, [edi+24h]
cmp     eax, dword_41ce78
jnz     short loc_4058d4
mov     esi, [edi+8]
mov     eax, [esp+8ch+var_70]
test    eax, eax
jnz     short loc_4058e5
cmp     esi, 0ffffffffh
jz      loc_405bb6
mov     ebp, ds:sendmessagea
push    0
push    0
push    43bh
push    ebx
call    ebp
mov     edi, eax
and     eax, 80000h
mov     [esp+8ch+count], edi
mov     [esp+8ch+source], eax
jz      short loc_40591b
mov     edx, edi
and     edx, 0fff7ffffh
push    edx
push    0
push    445h
push    ebx
call    ebp
cmp     esi, 0ffffffffh
jz      short loc_405973
lea     eax, [esp+8ch+lparam]
mov     [esp+8ch+lparam], 0
push    eax
push    0
push    437h
push    ebx
mov     [esp+9ch+var_74], 7fffffffh
call    ebp
mov     ecx, 0fh
xor     eax, eax
lea     edi, [esp+8ch+var_3c]
rep stosd
lea     ecx, [esp+8ch+var_3c]
mov     [esp+8ch+var_3c], 3ch
push    ecx
push    1
push    444h
push    ebx
mov     [esp+9ch+var_38], 40000000h
mov     [esp+9ch+var_28], esi
call    ebp
mov     edi, [esp+8ch+count]
mov     eax, [esp+8ch+var_70]
test    eax, eax
jbe     loc_405b79
mov     edx, [esp+8ch+var_58]
mov     [esp+8ch+var_68], eax
lea     esi, [edx+8]
mov     ecx, [esi-4]
mov     eax, [esi]
mov     edx, [esi-8]
mov     [esp+8ch+lparam], ecx
mov     [esp+8ch+var_74], eax
mov     ecx, 0fh
xor     eax, eax
lea     edi, [esp+8ch+var_3c]
shl     edx, 4
rep stosd
mov     eax, ds:dword_4163a8[edx]
mov     [esp+8ch+var_3c], 3ch
cmp     eax, 40000000h
mov     [esp+8ch+var_38], eax
jnz     loc_405b2b
mov     ecx, ds:dword_4163ac[edx]
mov     [esp+8ch+var_28], ecx
jmp     loc_405b45
mov     eax, [esp+ebx*4+8ch+var_3c]
or      ecx, 0ffffffffh
cmp     eax, ecx
jnz     short loc_4059ef
mov     edx, [esp+8ch+var_7c]
mov     eax, [esp+8ch+lpstring]
sub     edx, eax
mov     [esp+ebx*4+8ch+var_3c], edx
mov     eax, ebx
shl     eax, 4
mov     edi, ds:off_4163a0[eax]
xor     eax, eax
repne scasb
not     ecx
dec     ecx
mov     esi, ecx
mov     ecx, [esp+8ch+lparam]
add     esi, ecx
cmp     ebx, 4
jnz     short loc_405a3e
mov     al, [esi]
xor     ecx, ecx
cmp     al, 3eh
mov     [esp+8ch+count], ecx
mov     [esp+8ch+source], esi
jz      short loc_405a2f
test    al, al
jz      short loc_405a2b
mov     al, [esi+1]
inc     esi
inc     ecx
cmp     al, 3eh
jnz     short loc_405a1e
mov     [esp+8ch+count], ecx
cmp     byte ptr [esi], 3eh
jnz     loc_4057d3
inc     esi
jmp     loc_4057d3
cmp     ebx, 5
jnz     loc_4057d3
mov     al, [esi]
xor     ecx, ecx
cmp     al, 3eh
mov     [esp+8ch+var_68], ecx
jz      short loc_405a77
test    al, al
jz      short loc_405a77
cmp     al, 30h
jl      short loc_405a6f
cmp     al, 39h
jg      short loc_405a6f
movsx   edx, al
lea     ecx, [ecx+ecx*4]
lea     eax, [edx+ecx*2-30h]
mov     [esp+8ch+var_68], eax
mov     ecx, eax
mov     al, [esi+1]
inc     esi
cmp     al, 3eh
jnz     short loc_405a53
cmp     byte ptr [esi], 3eh
jnz     loc_4057d3
inc     esi
jmp     loc_4057d3
mov     eax, [esp+ebx*4+8ch+var_3c]
cmp     eax, 0ffffffffh
jz      loc_4057c0
mov     ecx, [esp+8ch+var_7c]
mov     edi, [esp+8ch+lpstring]
mov     [ebp+0], ebx
add     ebp, 4
mov     edx, [esp+8ch+var_68]
sub     ecx, edi
mov     [ebp+0], eax
add     ebp, 4
mov     [ebp+0], ecx
mov     ecx, [esp+8ch+var_70]
add     ebp, 4
mov     [ebp+0], edx
add     ebp, 4
inc     ecx
cmp     ebx, 4
mov     [esp+8ch+var_70], ecx
jnz     short loc_405b07
mov     edi, [esp+8ch+count]
test    edi, edi
jz      short loc_405b07
mov     esi, [esp+8ch+var_5c]
mov     eax, [esp+8ch+var_2c]
mov     ecx, [esp+8ch+source]
push    edi
mov     [esi], eax
add     esi, ebx
push    ecx
push    esi
call    _strncpy
mov     byte ptr [esi+edi], 0
add     edi, ebx
and     edi, 0fffffffch
add     esp, 0ch
add     esi, edi
mov     [esp+8ch+count], 0
mov     [esp+8ch+var_5c], esi
mov     dword ptr [esi], 0ffffffffh
or      ecx, 0ffffffffh
xor     eax, eax
mov     [esp+ebx*4+8ch+var_3c], ecx
shl     ebx, 4
mov     edi, ds:off_4163a4[ebx]
repne scasb
mov     eax, [esp+8ch+lparam]
not     ecx
dec     ecx
mov     esi, ecx
add     esi, eax
jmp     loc_4057d3
cmp     eax, 80000000h
jnz     short loc_405b41
mov     eax, [esi+4]
lea     edx, [eax+eax*4]
shl     edx, 2
mov     [esp+8ch+var_30], edx
jmp     short loc_405b45
mov     [esp+8ch+var_34], eax
lea     eax, [esp+8ch+lparam]
push    eax
push    0
push    437h
push    ebx
call    ebp
lea     ecx, [esp+8ch+var_3c]
push    ecx
push    1
push    444h
push    ebx
call    ebp
mov     eax, [esp+8ch+var_68]
add     esi, 10h
dec     eax
mov     [esp+8ch+var_68], eax
jnz     loc_40598a
mov     edi, [esp+8ch+count]
mov     eax, [esp+8ch+source]
test    eax, eax
jz      short loc_405b8c
push    edi
push    0
push    445h
push    ebx
call    ebp
push    0
push    0ffffffffh
push    0b1h
push    ebx
call    ebp
mov     esi, [esp+8ch+lpmem]
mov     eax, [esp+8ch+var_5c]
cmp     eax, esi
jz      short loc_405bba
push    esi
push    ebx
call    sub_405540
add     esp, 8
mov     [esp+8ch+lpmem], 0
mov     esi, [esp+8ch+lpmem]
mov     edx, [esp+8ch+lpstring]
push    edx
call    sub_4122c3
add     esp, 4
test    esi, esi
jz      short loc_405bd4
push    esi
call    sub_4122c3
add     esp, 4
mov     eax, [esp+8ch+var_58]
push    eax
call    sub_4122c3
add     esp, 4
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 7ch
retn
mov     eax, [esp+lpstring]
push    ebx
push    ebp
push    esi
push    edi
mov     dword_41ce08, eax
call    sub_405630
mov     ecx, dword_41ce04
push    0
push    ecx
call    sub_4036a0
push    0
push    7
mov     ebx, eax
call    sub_4036a0
mov     edx, dword_41ce8c
mov     ebp, ds:setwindowtexta
add     esp, 10h
mov     edi, eax
push    edi
push    edx
call    ebp
cmp     byte ptr [ebx], 0
jz      loc_405d22
mov     eax, dword_41cde0
test    byte ptr [eax], 2
mov     ecx, dword_41cdbc
mov     eax, [ecx+2]
jz      short loc_405c70
test    eax, 20000000h
jz      short loc_405c62
mov     edx, hwndparent
push    ebx
push    edx
call    ebp
jmp     loc_405d22
mov     eax, hwndparent
push    edi
push    eax
call    ebp
jmp     loc_405d22
test    eax, 20000000h
jz      loc_405d22
lea     edx, [esp+10h+lpstring]
push    edx
push    400h
call    sub_402120
add     esp, 8
test    eax, eax
jz      loc_405d22
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, [esp+10h+lpstring]
shr     ecx, 2
rep movsd
mov     ecx, eax
xor     eax, eax
and     ecx, 3
rep movsb
mov     edi, offset asc_418398
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, [esp+10h+lpstring]
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, ebx
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, [esp+10h+lpstring]
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, [esp+10h+lpstring]
mov     ecx, dword_41ce8c
push    eax
push    ecx
call    ebp
lea     edx, [esp+10h+lpstring]
push    edx
call    sub_402160
add     esp, 4
mov     ebx, ds:getdlgitem
mov     esi, 2
mov     ecx, dword_41ce08
lea     eax, [esi+3e6h]
push    eax
push    ecx
call    ebx
mov     edi, eax
test    edi, edi
jz      short loc_405d5a
mov     edx, dword_41ce04
push    esi
push    edx
call    sub_4036a0
push    eax
push    edi
call    sub_405680
add     esp, 10h
inc     esi
lea     eax, [esi-2]
cmp     eax, 4
jl      short loc_405d2d
push    0
push    1
call    sub_405e20
push    1
push    2
call    sub_405e20
push    2
push    4
call    sub_405e20
mov     eax, [esp+28h+arg_4]
add     esp, 18h
cmp     word ptr dword_418030, 0ffffh
pop     edi
pop     esi
pop     ebp
pop     ebx
jz      short loc_405d97
or      ah, 1
mov     ecx, dword_41ce04
test    ecx, ecx
jnz     short loc_405da3
and     al, 0feh
push    eax
call    sub_405db0
pop     ecx
retn
mov     eax, dword_41ce74
push    ebx
push    esi
push    edi
mov     edi, ds:getdlgitem
push    415h
push    eax
call    edi
mov     ebx, [esp+0ch+arg_0]
test    bl, 1
mov     dword_41ced0, ebx
jz      short loc_405dd9
push    1
jmp     short loc_405ddb
push    0
mov     esi, ds:enablewindow
push    eax
call    esi
mov     edx, dword_41ce74
mov     ecx, ebx
shr     ecx, 1
and     ecx, 1
push    ecx
push    1
push    edx
call    edi
push    eax
call    esi
mov     eax, dword_41ce74
shr     ebx, 2
and     ebx, 1
push    ebx
push    2
push    eax
call    edi
push    eax
call    esi
pop     edi
pop     esi
pop     ebx
retn
mov     eax, [esp+arg_4]
push    eax
push    8
call    sub_4036a0
mov     ecx, [esp+8+arg_0]
add     esp, 8
dec     ecx
jz      short loc_405e4c
dec     ecx
jz      short loc_405e45
sub     ecx, 2
jnz     short locret_405e67
mov     ecx, 2
jmp     short loc_405e51
mov     ecx, 1
jmp     short loc_405e51
mov     ecx, 415h
push    eax
push    ecx
mov     ecx, dword_41ce74
push    ecx
call    ds:getdlgitem
push    eax
call    ds:setwindowtexta
retn
mov     eax, [esp+arg_4]
cmp     eax, 110h
jz      short loc_405e93
mov     ecx, [esp+arg_c]
mov     edx, [esp+hdc]
push    ecx
push    edx
push    eax
mov     eax, [esp+0ch+lpstring]
push    eax
call    sub_404890
retn    10h
mov     ecx, [esp+arg_c]
mov     edx, [esp+hdc]
push    esi
mov     esi, [esp+4+lpstring]
push    ecx
push    edx
push    110h
push    esi
call    sub_404890
push    6
push    esi
call    sub_405bf0
mov     eax, dword_41ce74
add     esp, 8
push    1
push    eax
call    ds:getdlgitem
push    eax
call    ds:setfocus
xor     eax, eax
pop     esi
retn    10h
mov     eax, [esp+arg_4]
cmp     eax, 110h
jz      short loc_405f03
mov     ecx, [esp+arg_c]
mov     edx, [esp+hdc]
push    ecx
push    edx
push    eax
mov     eax, [esp+0ch+lpstring]
push    eax
call    sub_404890
retn    10h
mov     ecx, [esp+arg_c]
mov     edx, [esp+hdc]
push    esi
mov     esi, [esp+4+lpstring]
push    ecx
push    edx
push    110h
push    esi
call    sub_404890
push    7
push    esi
call    sub_405bf0
push    3
push    1
call    sub_4036a0
mov     cl, [eax]
mov     esi, ds:getdlgitem
add     esp, 10h
test    cl, cl
jz      short loc_405f4f
push    eax
mov     eax, dword_41ce74
push    1
push    eax
call    esi
push    eax
call    ds:setwindowtexta
mov     ecx, dword_41ce74
push    1
push    ecx
call    esi
push    eax
call    ds:setfocus
xor     eax, eax
pop     esi
retn    10h
mov     edx, [esp+arg_4]
mov     eax, edx
sub     eax, 110h
jz      short loc_405fe2
mov     ecx, [esp+hdc]
dec     eax
jnz     short loc_405f95
mov     eax, ecx
and     eax, 0ffffh
sub     eax, 3eah
jz      short loc_405fc6
dec     eax
jz      short loc_405fa9
mov     eax, [esp+arg_c]
push    eax
push    ecx
mov     ecx, [esp+8+hdlg]
push    edx
push    ecx
call    sub_404890
retn    10h
mov     edx, dword_41ce74
push    0
push    1
push    edx
call    ds:getdlgitem
push    eax
call    ds:enablewindow
xor     eax, eax
retn    10h
mov     eax, dword_41ce74
push    1
push    1
push    eax
call    ds:getdlgitem
push    eax
call    ds:enablewindow
xor     eax, eax
retn    10h
mov     ecx, [esp+arg_c]
mov     edx, [esp+hdc]
push    esi
mov     esi, [esp+4+hdlg]
push    ecx
push    edx
push    110h
push    esi
call    sub_404890
push    5
push    esi
call    sub_405bf0
add     esp, 8
push    3ebh
push    3ebh
push    3eah
push    esi
call    ds:checkradiobutton
mov     eax, dword_41ce74
push    2
push    eax
call    ds:getdlgitem
push    eax
call    ds:setfocus
xor     eax, eax
pop     esi
retn    10h
sub     esp, 154h
mov     ecx, phkresult
push    ebx
push    esi
lea     eax, [esp+15ch+var_150]
push    edi
xor     esi, esi
push    eax
push    ecx
mov     [esp+168h+var_154], esi
mov     [esp+168h+var_14c], esi
mov     [esp+168h+var_150], esi
call    sub_402180
mov     ecx, [esp+168h+var_150]
mov     edi, dword_41cc70
mov     ebx, eax
mov     eax, dword_41cc74
add     esp, 8
mov     [esp+160h+var_144], ebx
shl     ecx, 0ah
cmp     eax, esi
mov     [esp+160h+var_150], ecx
mov     dword_41cecc, esi
mov     [esp+160h+var_148], esi
jbe     loc_40617c
push    ebp
mov     ebx, [edi+16h]
test    bh, 3
jnz     loc_406152
mov     edx, [edi+0eh]
lea     eax, [edx+ecx-1]
xor     edx, edx
div     ecx
mov     esi, eax
mov     eax, [esp+164h+var_14c]
imul    esi, ecx
cmp     esi, eax
jbe     short loc_4060c2
mov     [esp+164h+var_14c], esi
mov     eax, dword_41cdbc
test    byte ptr [eax], 1
jz      short loc_4060d7
cmp     dword ptr [edi+1ah], 3
jz      short loc_4060d7
test    bl, 1
jz      short loc_40614e
push    edi
call    sub_4083e0
mov     eax, lpexistingfilename
add     esp, 4
cmp     byte ptr [eax], 0
jz      short loc_406152
lea     ecx, [esp+164h+findfiledata]
push    ecx
push    eax
call    ds:findfirstfilea
mov     ebp, eax
cmp     ebp, 0ffffffffh
jz      short loc_40614e
mov     ecx, [esp+164h+var_150]
mov     edx, [esp+164h+findfiledata.nfilesizelow]
lea     eax, [edx+ecx-1]
xor     edx, edx
div     ecx
imul    eax, ecx
cmp     esi, eax
jbe     short loc_406120
sub     esi, eax
mov     eax, [esp+164h+var_154]
add     eax, esi
mov     [esp+164h+var_154], eax
push    ebp
call    ds:findclose
cmp     dword ptr [edi+1ah], 3
jnz     short loc_406135
mov     eax, [edi+16h]
or      al, 80h
mov     [edi+16h], eax
test    byte ptr [esp+164h+findfiledata.dwfileattributes], 1
jz      short loc_406152
cmp     dword ptr [edi+1ah], 3
jz      short loc_406152
mov     dword_41cecc, 1
jmp     short loc_406152
add     [esp+164h+var_154], esi
mov     esi, [esp+164h+var_148]
push    edi
inc     esi
mov     [esp+168h+var_148], esi
call    sub_4037b0
mov     ecx, [esp+168h+var_150]
mov     edi, eax
mov     eax, dword_41cc74
add     esp, 4
cmp     esi, eax
jb      loc_40609a
mov     ebx, [esp+164h+var_144]
pop     ebp
cmp     ebx, 0ffffffffh
jz      short loc_4061ac
mov     eax, [esp+160h+var_14c]
xor     edx, edx
mov     esi, [esp+160h+var_154]
lea     eax, [ecx+eax-1]
div     ecx
imul    eax, ecx
add     eax, esi
shr     eax, 0ah
cmp     eax, ebx
jb      short loc_4061ac
pop     edi
pop     esi
mov     eax, 1
pop     ebx
add     esp, 154h
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebx
add     esp, 154h
retn
mov     ecx, phkresult
sub     esp, 68h
lea     eax, [esp+68h+var_68]
push    eax
push    ecx
call    sub_402180
add     esp, 8
cmp     eax, 0ffffffffh
jnz     short loc_4061de
xor     eax, eax
push    ebx
add     eax, 3ffh
push    ebp
push    esi
shr     eax, 0ah
push    edi
push    eax
push    8
push    3
call    sub_4036a0
mov     ebp, ds:wsprintfa
add     esp, 8
lea     edx, [esp+7ch+str]
push    eax
push    edx
call    ebp
mov     ecx, [esp+84h+hdlg]
add     esp, 0ch
lea     eax, [esp+78h+str]
push    eax
push    3fbh
push    ecx
call    ds:getdlgitem
push    eax
call    sub_405680
mov     ecx, [esp+80h+var_68]
mov     eax, dword_41cc74
mov     esi, dword_41cc70
add     esp, 8
shl     ecx, 0ah
xor     ebx, ebx
xor     edi, edi
test    eax, eax
mov     [esp+78h+var_68], ecx
jbe     short loc_406272
jmp     short loc_40624d
mov     ecx, [esp+78h+var_68]
mov     edx, [esi+0eh]
push    esi
lea     eax, [edx+ecx-1]
xor     edx, edx
div     ecx
imul    eax, ecx
add     ebx, eax
inc     edi
call    sub_4037b0
mov     esi, eax
mov     eax, dword_41cc74
add     esp, 4
cmp     edi, eax
jb      short loc_406249
add     ebx, 0fffffh
shr     ebx, 14h
push    ebx
push    8
push    3
call    sub_4036a0
add     esp, 8
push    eax
lea     eax, [esp+80h+str]
push    eax
call    ebp
mov     edx, [esp+84h+hdlg]
add     esp, 0ch
lea     ecx, [esp+78h+str]
push    ecx
push    3f8h
push    edx
call    ds:getdlgitem
push    eax
call    sub_405680
add     esp, 8
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 68h
retn
push    ecx
mov     eax, phkresult
push    eax
call    sub_4020b0
mov     eax, phkresult
add     esp, 4
cmp     byte ptr [eax], 0
jnz     short loc_4062e0
mov     eax, 5
pop     ecx
retn
mov     edx, lpexistingfilename
lea     ecx, [esp+4+filepart]
push    edi
push    ecx
push    edx
push    104h
push    eax
mov     [esp+18h+filepart], 0
call    ds:getfullpathnamea
mov     edi, lpexistingfilename
cmp     byte ptr [edi], 0
jz      short loc_40632f
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
push    esi
mov     eax, ecx
mov     esi, edi
mov     edi, phkresult
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
pop     esi
mov     ecx, phkresult
push    ecx
call    __chdir
add     esp, 4
test    eax, eax
pop     edi
jz      short loc_4063bd
push    6
push    7
call    sub_4036a0
mov     cl, [eax]
add     esp, 8
test    cl, cl
jz      short loc_406374
mov     ecx, dword_41ceb8
test    ecx, ecx
jnz     short loc_406374
push    24h
push    eax
call    sub_403660
add     esp, 8
cmp     eax, 6
jz      short loc_406374
or      eax, 0ffffffffh
pop     ecx
retn
mov     edx, phkresult
push    edx
call    sub_402060
mov     eax, dword_41ceb0
add     esp, 4
test    eax, eax
jnz     short loc_4063cb
mov     eax, phkresult
push    eax
call    sub_402320
mov     ecx, phkresult
push    ecx
call    sub_4020b0
mov     edx, phkresult
push    edx
call    __chdir
add     esp, 0ch
test    eax, eax
jz      short loc_4063bd
mov     eax, 5
pop     ecx
retn
mov     eax, phkresult
push    eax
call    sub_402060
add     esp, 4
xor     eax, eax
pop     ecx
retn
mov     eax, [esp+arg_4]
push    ebx
push    ebp
push    esi
sub     eax, 110h
push    edi
jz      loc_406681
mov     ebp, [esp+10h+hdlg]
dec     eax
jnz     loc_406665
cmp     word ptr dword_418030, 0ffffh
jz      short loc_40640d
mov     eax, [esp+10h+hdc]
cmp     ax, 3edh
jz      short loc_40640d
cmp     ax, 3ech
jnz     loc_406665
mov     eax, [esp+10h+hdc]
and     eax, 0ffffh
dec     eax
jz      loc_4064f8
sub     eax, 3ebh
jz      loc_4064d2
dec     eax
jnz     loc_406665
mov     eax, phkresult
push    104h
push    eax
push    3ech
push    ebp
call    ds:getdlgitemtexta
mov     edi, phkresult
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, oldfilename
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, oldfilename
push    eax
push    ebp
call    sub_4025b0
add     esp, 8
cmp     eax, 1
jnz     loc_406665
mov     edi, oldfilename
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, phkresult
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, phkresult
push    eax
call    sub_4020b0
mov     ecx, phkresult
add     esp, 4
push    ecx
push    3ech
push    ebp
call    ds:setdlgitemtexta
jmp     loc_406665
mov     edx, phkresult
push    104h
push    edx
push    3ech
push    ebp
call    ds:getdlgitemtexta
push    ebp
call    sub_4061c0
add     esp, 4
jmp     loc_406665
mov     eax, phkresult
push    104h
push    eax
push    3ech
push    ebp
call    ds:getdlgitemtexta
call    sub_4062c0
test    eax, eax
jz      short loc_406543
cmp     eax, 0ffffffffh
jz      short loc_406533
push    40h
push    eax
push    7
call    sub_4036a0
add     esp, 8
push    eax
call    sub_403660
add     esp, 8
push    ebp
call    sub_403c20
add     esp, 4
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    10h
mov     edi, 1
push    4
push    7
mov     dword_41ce24, edi
call    sub_4036a0
mov     esi, ds:getdlgitem
add     esp, 8
push    eax
push    3e9h
push    ebp
call    esi
push    eax
call    sub_405680
mov     ebx, ds:setdlgitemtexta
add     esp, 8
push    offset string
push    3eah
push    ebp
call    ebx
push    offset string
push    3ebh
push    ebp
call    ebx
call    sub_406040
push    3
push    3
mov     ebx, eax
call    sub_4036a0
add     esp, 8
push    eax
push    3e9h
push    ebp
call    esi
push    eax
call    sub_405680
push    4
push    3
call    sub_4036a0
add     esp, 10h
push    eax
push    3eah
push    ebp
call    esi
push    eax
call    sub_405680
push    5
push    3
call    sub_4036a0
add     esp, 10h
push    eax
push    3ebh
push    ebp
call    esi
push    eax
call    sub_405680
add     esp, 8
test    bl, 1
jz      short loc_40661e
push    24h
push    0bh
push    7
call    sub_4036a0
add     esp, 8
push    eax
call    sub_403660
add     esp, 8
cmp     eax, 6
jz      short loc_40661e
push    ebp
call    sub_403c20
add     esp, 4
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    10h
test    bl, 2
jz      short loc_40665f
push    400h
call    _malloc
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_40664f
push    0ah
push    esi
call    sub_405030
push    20h
push    esi
call    sub_403660
push    esi
call    sub_4122c3
add     esp, 14h
push    ebp
call    sub_403c20
add     esp, 4
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    10h
mov     dword_41ce28, edi
mov     ecx, [esp+10h+arg_c]
mov     edx, [esp+10h+hdc]
mov     eax, [esp+10h+arg_4]
push    ecx
push    edx
push    eax
push    ebp
call    sub_404890
pop     edi
pop     esi
pop     ebp
pop     ebx
retn    10h
mov     ecx, [esp+10h+arg_c]
mov     edx, [esp+10h+hdc]
mov     esi, [esp+10h+hdlg]
push    ecx
push    edx
push    110h
push    esi
call    sub_404890
push    7
push    esi
call    sub_405bf0
mov     eax, phkresult
push    eax
call    sub_4020b0
mov     ecx, phkresult
mov     ebx, ds:setdlgitemtexta
add     esp, 0ch
push    ecx
push    3ech
push    esi
call    ebx
mov     edx, phkresult
push    edx
call    sub_402060
xor     ebp, ebp
push    6
push    3
mov     dword_41ce28, ebp
mov     dword_41ce24, ebp
call    sub_4036a0
mov     edi, ds:getdlgitem
add     esp, 0ch
push    eax
push    3f9h
push    esi
call    edi
push    eax
call    sub_405680
push    7
push    3
call    sub_4036a0
add     esp, 10h
push    eax
push    3fah
push    esi
call    edi
push    eax
call    sub_405680
push    esi
call    sub_4061c0
add     esp, 0ch
push    offset source
push    3edh
push    esi
call    ebx
mov     eax, dword_41cdbc
test    byte ptr [eax], 2
jnz     short loc_40677a
push    ebp
push    1
push    0cfh
push    3ech
push    esi
call    ds:senddlgitemmessagea
push    ebp
push    3edh
push    esi
call    edi
push    eax
call    ds:enablewindow
mov     ecx, dword_41ce74
push    1
push    ecx
call    edi
push    eax
call    ds:setfocus
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
retn    10h
mov     edx, phkresult
cmp     byte ptr [edx], 0
jnz     short loc_40679d
push    3ech
push    esi
call    edi
push    eax
call    ds:setfocus
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
retn    10h
mov     eax, dword_41ce74
push    1
push    eax
call    edi
push    eax
call    ds:setfocus
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
retn    10h
push    esi
push    edi
mov     edi, [esp+8+arg_4]
mov     eax, edi
sub     eax, 110h
jz      short loc_406833
mov     esi, [esp+8+str]
dec     eax
jnz     short loc_40681d
mov     eax, esi
and     eax, 0ffffh
dec     eax
jnz     short loc_40681d
mov     eax, dword_41cecc
test    eax, eax
jz      short loc_40681d
push    7
push    7
call    sub_4036a0
mov     cl, [eax]
add     esp, 8
test    cl, cl
jz      short loc_40681d
push    24h
push    eax
call    sub_403660
add     esp, 8
cmp     eax, 7
jnz     short loc_40681d
mov     eax, [esp+8+hdlg]
push    eax
call    sub_403c20
add     esp, 4
pop     edi
pop     esi
retn    10h
mov     ecx, [esp+8+arg_c]
mov     edx, [esp+8+hdlg]
push    ecx
push    esi
push    edi
push    edx
call    sub_404890
pop     edi
pop     esi
retn    10h
mov     eax, [esp+8+arg_c]
mov     ecx, [esp+8+str]
mov     esi, [esp+8+hdlg]
push    eax
push    ecx
push    110h
push    esi
call    sub_404890
push    7
push    esi
call    sub_405bf0
lea     edx, [esp+10h+str]
push    edx
push    400h
call    sub_402120
mov     edi, ds:getdlgitem
add     esp, 10h
test    eax, eax
jz      short loc_4068cb
mov     eax, phkresult
push    eax
call    sub_4020b0
mov     ecx, phkresult
add     esp, 4
push    ecx
push    3
push    4
call    sub_4036a0
mov     edx, [esp+14h+str]
add     esp, 8
push    eax
push    edx
call    ds:wsprintfa
mov     eax, phkresult
push    eax
call    sub_402060
mov     ecx, [esp+18h+str]
add     esp, 10h
push    ecx
push    3e9h
push    esi
call    edi
push    eax
call    sub_405680
lea     edx, [esp+10h+str]
push    edx
call    sub_402160
add     esp, 0ch
push    3
push    2
call    sub_405e20
mov     eax, dword_41ce74
add     esp, 8
push    1
push    eax
call    edi
push    eax
call    ds:setfocus
pop     edi
xor     eax, eax
pop     esi
retn    10h
mov     eax, dword_41cc70
sub     esp, 14h
mov     dword_41cc48, eax
mov     eax, dword_41ce28
push    esi
push    edi
xor     esi, esi
mov     edi, 1
cmp     eax, esi
mov     dword_41cebc, esi
mov     dword_41cc4c, 0ffffffffh
mov     dword_41cc44, esi
mov     dword_41ce24, edi
jnz     short loc_406980
call    sub_4062c0
cmp     eax, esi
mov     dword_41cebc, eax
jnz     short loc_406972
call    sub_406040
test    al, 1
jz      short loc_406954
pop     edi
mov     dword_41cebc, 0bh
xor     eax, eax
pop     esi
add     esp, 14h
retn
test    al, 2
jz      short loc_40696a
pop     edi
mov     dword_41cebc, 0ah
xor     eax, eax
pop     esi
add     esp, 14h
retn
cmp     dword_41cebc, esi
jz      short loc_40697a
pop     edi
xor     eax, eax
pop     esi
add     esp, 14h
retn
mov     dword_41ce28, edi
push    ebx
mov     edi, dword_41cc54
push    ebp
mov     ebp, dword_41cc74
mov     eax, ebp
shr     eax, 1
mov     [esp+24h+var_10], eax
jnz     loc_406a32
mov     eax, dword_41cc58
mov     edx, edi
xor     ecx, ecx
shr     edx, 2
jz      short loc_4069eb
mov     esi, edx
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
dec     esi
jnz     short loc_4069ac
mov     edx, edi
and     edx, 3
jbe     short loc_406a04
mov     esi, ecx
xor     ebx, ebx
mov     bl, [eax]
shr     esi, 1fh
lea     ecx, [esi+ecx*2]
add     ecx, ebx
inc     eax
dec     edx
jnz     short loc_4069f2
mov     eax, dword_41cdbc
xor     esi, esi
mov     dword_41cdc0, esi
xor     ecx, 7d39ec5ah
cmp     ecx, [eax+22h]
jnz     short loc_406a26
mov     dword_41cdc0, 1
cmp     ecx, [eax+0ah]
jnz     short loc_406a32
xor     dword_41cdc0, 1
mov     ebx, dword_41cc70
cmp     ebp, esi
mov     [esp+24h+var_8], esi
jbe     loc_406be0
jmp     short loc_406a4c
mov     edi, dword_41cc54
mov     eax, [ebx+16h]
mov     [esp+24h+var_14], eax
mov     eax, [esp+24h+var_10]
dec     eax
mov     [esp+24h+var_10], eax
jnz     loc_406afa
mov     eax, dword_41cc58
mov     edx, edi
xor     ecx, ecx
shr     edx, 2
jz      short loc_406ab1
mov     esi, edx
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
dec     esi
jnz     short loc_406a72
and     edi, 3
mov     edx, edi
jbe     short loc_406aca
mov     esi, ecx
shr     esi, 1fh
lea     esi, [esi+ecx*2]
xor     ecx, ecx
mov     cl, [eax]
add     ecx, esi
inc     eax
dec     edx
jnz     short loc_406ab8
mov     eax, dword_41cdbc
mov     dword_41cdc0, 0
xor     ecx, 7d39ec5ah
cmp     ecx, [eax+22h]
jnz     short loc_406aee
mov     dword_41cdc0, 1
cmp     ecx, [eax+0ah]
jnz     short loc_406afa
xor     dword_41cdc0, 1
mov     eax, [esp+24h+var_14]
test    ah, 3
jnz     loc_406bbf
test    byte ptr [ebx+2], 2
jnz     loc_406bbf
push    ebx
call    sub_4083e0
mov     esi, eax
mov     al, byte ptr [esp+28h+var_14]
add     esp, 4
test    al, 40h
jz      short loc_406b44
mov     eax, lpexistingfilename
push    0
push    eax
call    sub_401040
add     esp, 8
cmp     eax, 0ffffffffh
jz      short loc_406b44
push    eax
call    sub_4012c0
add     esp, 4
jmp     short loc_406bbf
mov     eax, lpexistingfilename
cmp     byte ptr [eax], 0
jz      short loc_406bbf
test    esi, esi
jz      short loc_406ba3
push    0
push    eax
mov     [esp+2ch+var_c], 0
call    sub_401040
mov     esi, eax
add     esp, 8
cmp     esi, 0ffffffffh
jz      short loc_406b98
push    esi
call    sub_4011c0
mov     ecx, [ebx+0eh]
add     esp, 4
cmp     eax, ecx
jnz     short loc_406b8f
lea     ecx, [esp+24h+var_4]
lea     edx, [esp+24h+var_c]
push    ecx
push    edx
push    esi
call    sub_405120
add     esp, 0ch
push    esi
call    sub_4012c0
add     esp, 4
mov     eax, [esp+24h+var_c]
mov     ecx, [ebx+12h]
cmp     eax, ecx
jz      short loc_406bbf
test    byte ptr [esp+24h+var_14], 6
jz      short loc_406bbf
push    ebx
call    sub_408700
add     esp, 4
test    eax, eax
jnz     short loc_406bbf
mov     eax, [ebx+16h]
or      al, 40h
mov     [ebx+16h], eax
mov     esi, [esp+24h+var_8]
push    ebx
inc     esi
mov     [esp+28h+var_8], esi
call    sub_4037b0
mov     ebx, eax
mov     eax, dword_41cc74
add     esp, 4
cmp     esi, eax
jb      loc_406a46
mov     edi, lpfilename
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
push    eax
mov     edx, ecx
mov     esi, edi
mov     edi, lpfilename
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, lpfilename
push    eax
call    sub_401040
add     esp, 8
cmp     eax, 0ffffffffh
mov     hfile, eax
pop     ebp
pop     ebx
jnz     short loc_406c43
mov     ecx, lpfilename
mov     dword_41cebc, 10h
push    ecx
call    sub_406c70
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
add     esp, 14h
retn
mov     edx, dword_41cc6c
add     edx, 4
push    edx
push    eax
call    sub_401160
add     esp, 8
mov     eax, 1
mov     dword_41cc50, eax
pop     edi
pop     esi
add     esp, 14h
retn
push    esi
push    edi
mov     edi, [esp+8+arg_0]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, dword_41ceac
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
pop     edi
pop     esi
retn
mov     eax, hfile
sub     esp, 210h
push    ebx
push    ebp
push    esi
push    edi
push    eax
xor     edi, edi
xor     ebp, ebp
call    sub_4012c0
mov     eax, nnumberofbytestoread
mov     ebx, ds:wsprintfa
add     esp, 4
cmp     eax, edi
mov     hfile, 0ffffffffh
jz      short loc_406cdf
mov     ebp, dword_41cc64
sub     ebp, eax
jmp     short loc_406d1c
mov     eax, dword_41cc44
lea     ecx, [esp+220h+var_210]
inc     eax
push    eax
push    offset ad22d
push    ecx
mov     dword_41cc44, eax
call    ebx
mov     eax, lpfilename
lea     edx, [esp+22ch+var_210]
push    edx
push    eax
call    sub_401fe0
mov     ecx, dword_41cc64
mov     eax, dword_41cc68
add     esp, 14h
add     eax, ecx
mov     dword_41cc68, eax
mov     eax, lpfilename
lea     edx, [esp+220h+findfiledata]
push    edx
push    eax
call    ds:findfirstfilea
cmp     eax, 0ffffffffh
jz      short loc_406d3c
push    eax
call    ds:findclose
mov     ecx, lpfilename
push    edi
push    ecx
call    sub_401040
add     esp, 8
cmp     eax, 0ffffffffh
mov     hfile, eax
jnz     short loc_406da6
cmp     dword_41cc40, edi
jz      loc_406e1c
mov     edx, dword_41cc44
inc     edx
push    edx
push    1ch
push    7
call    sub_4036a0
add     esp, 8
push    eax
lea     eax, [esp+228h+text]
push    eax
call    ebx
lea     ecx, [esp+22ch+text]
push    41h
push    ecx
call    sub_403660
add     esp, 14h
cmp     eax, 1
jz      short loc_406d1c
push    edi
push    0dh
call    sub_4036f0
add     esp, 8
test    eax, eax
jnz     short loc_406df4
jmp     loc_406d1c
push    4
push    offset dword_41cc64
push    eax
mov     dword_41cc64, edi
call    sub_4010c0
mov     esi, eax
add     esp, 0ch
cmp     esi, edi
jz      short loc_406de1
mov     edx, hfile
mov     dword_41cc64, edi
push    edx
call    sub_4012c0
add     esp, 4
mov     hfile, 0ffffffffh
mov     eax, dword_41cc64
cmp     esi, edi
mov     nnumberofbytestoread, eax
jz      short loc_406e27
jmp     loc_406d1c
mov     dword_41ce48, 2
mov     dword_41cebc, 0fh
call    sub_407f60
mov     dword_41ce1c, 1
mov     eax, hfile
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 210h
retn
cmp     ebp, edi
jz      short loc_406e17
mov     ecx, hfile
push    ebp
push    ecx
call    sub_401180
mov     edx, hfile
push    edx
call    sub_401140
add     ebp, 4
add     esp, 0ch
cmp     eax, ebp
jz      short loc_406e17
mov     eax, hfile
mov     dword_41cc64, edi
push    eax
mov     nnumberofbytestoread, edi
call    sub_4012c0
add     esp, 4
or      eax, 0ffffffffh
mov     hfile, eax
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 210h
retn
mov     eax, dword_41cc64
mov     ecx, dword_41cc68
push    esi
mov     esi, [esp+4+arg_0]
push    edi
add     eax, ecx
xor     edi, edi
cmp     esi, eax
jb      short loc_406eba
mov     nnumberofbytestoread, edi
call    sub_406ca0
cmp     eax, 0ffffffffh
jz      short loc_406f08
mov     edx, dword_41cc64
mov     eax, dword_41cc68
add     edx, eax
cmp     esi, edx
jnb     short loc_406e99
mov     ecx, dword_41cc68
mov     eax, dword_41cc44
sub     esi, ecx
cmp     eax, edi
jnz     short loc_406ed1
add     esi, dword_41cc6c
mov     edx, hfile
push    edx
call    sub_401140
mov     ecx, hfile
mov     edi, eax
lea     eax, [esi+4]
push    eax
push    ecx
call    sub_401160
mov     edx, nnumberofbytestoread
sub     edi, esi
add     esp, 0ch
lea     eax, [edx+edi-4]
mov     nnumberofbytestoread, eax
pop     edi
xor     eax, eax
pop     esi
retn
cmp     dword_41cc40, edi
jnz     short loc_406f2b
mov     ecx, lpfilename
mov     dword_41cebc, 12h
push    ecx
call    sub_406c70
add     esp, 4
jmp     short loc_406eba
pop     edi
mov     eax, 0fh
pop     esi
retn
push    ecx
mov     ecx, hfile
push    ebx
mov     ebx, [esp+8+lpbuffer]
push    ebp
mov     ebp, [esp+0ch+arg_0]
push    esi
xor     esi, esi
push    edi
mov     eax, [ebp+0]
mov     edi, [esp+14h+nnumberofbytestoread]
cmp     eax, ecx
mov     [esp+14h+var_4], esi
jnz     loc_406ff4
cmp     edi, esi
jbe     loc_407001
test    esi, esi
jnz     loc_407001
mov     eax, nnumberofbytestoread
cmp     edi, eax
ja      short loc_406f97
mov     eax, [ebp+0]
push    edi
push    ebx
push    eax
call    sub_4010c0
mov     esi, eax
add     esp, 0ch
test    esi, esi
jz      short loc_406fe4
jmp     short loc_406fde
test    eax, eax
jbe     short loc_406fb4
mov     ecx, [ebp+0]
push    eax
push    ebx
push    ecx
call    sub_4010c0
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     short loc_406fde
mov     eax, nnumberofbytestoread
mov     edx, [esp+14h+var_4]
sub     edi, eax
add     edx, eax
add     ebx, eax
mov     [esp+14h+var_4], edx
mov     nnumberofbytestoread, 0
call    sub_406ca0
cmp     eax, 0ffffffffh
mov     [ebp+0], eax
jnz     short loc_406fde
mov     esi, 1
test    edi, edi
jbe     short loc_407001
jmp     short loc_406f70
mov     eax, nnumberofbytestoread
sub     eax, edi
xor     edi, edi
mov     nnumberofbytestoread, eax
jmp     short loc_407001
push    edi
push    ebx
push    eax
call    sub_4010c0
add     esp, 0ch
mov     esi, eax
mov     eax, dword_41ce0c
sub     eax, edi
test    eax, eax
mov     dword_41ce0c, eax
jg      short loc_407020
mov     dword_41ce0c, 1000h
call    sub_404b30
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
mov     eax, [esp+arg_0]
push    esi
sub     eax, 2
jz      short loc_40708e
dec     eax
jz      short loc_407074
dec     eax
jz      short loc_40705a
mov     eax, [esp+4+arg_4]
mov     esi, 1fh
test    eax, eax
jz      short loc_4070a8
push    eax
call    sub_406c70
add     esp, 4
mov     eax, esi
pop     esi
retn
mov     eax, [esp+4+arg_8]
mov     esi, 13h
test    eax, eax
jz      short loc_4070a8
push    eax
call    sub_406c70
add     esp, 4
mov     eax, esi
pop     esi
retn
mov     eax, [esp+4+arg_4]
mov     esi, 12h
test    eax, eax
jz      short loc_4070a8
push    eax
call    sub_406c70
add     esp, 4
mov     eax, esi
pop     esi
retn
mov     eax, [esp+4+arg_4]
mov     esi, 0ch
test    eax, eax
jz      short loc_4070a8
push    eax
call    sub_406c70
add     esp, 4
mov     eax, esi
pop     esi
retn
push    offset string
call    sub_406c70
add     esp, 4
mov     eax, esi
pop     esi
retn
mov     edx, phkresult
push    esi
push    edi
mov     edi, edx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
mov     eax, lpexistingfilename
not     ecx
dec     ecx
mov     esi, ecx
push    esi
push    edx
push    eax
call    __strnicmp
add     esp, 0ch
test    eax, eax
jnz     short loc_407158
mov     ecx, lpexistingfilename
push    5ch
add     esi, ecx
push    esi
call    _strrchr
mov     edx, eax
add     esp, 8
test    edx, edx
jnz     short loc_40710d
mov     eax, offset dword_4180a0
jmp     loc_4071bc
mov     byte ptr [edx], 0
mov     eax, oldfilename
push    ebx
mov     edi, esi
mov     byte ptr [eax], 2eh
mov     ecx, oldfilename
mov     byte ptr [ecx+1], 5ch
mov     eax, oldfilename
or      ecx, 0ffffffffh
lea     ebx, [eax+2]
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, ebx
pop     ebx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, oldfilename
lea     esi, [edx+1]
mov     byte ptr [edx], 5ch
jmp     short loc_4071bc
mov     ecx, lpexistingfilename
push    5ch
push    ecx
call    _strrchr
mov     edx, eax
add     esp, 8
test    edx, edx
jz      short loc_4071a6
mov     byte ptr [edx], 0
mov     edi, lpexistingfilename
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, oldfilename
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, oldfilename
lea     esi, [edx+1]
mov     byte ptr [edx], 5ch
jmp     short loc_4071bc
mov     esi, lpexistingfilename
or      ecx, 0ffffffffh
mov     edi, esi
xor     eax, eax
repne scasb
not     ecx
dec     ecx
lea     eax, [ecx+esi-1]
mov     edi, [esp+8+hfile]
push    eax
push    edi
call    sub_4071f0
push    esi
push    edi
call    sub_4071f0
lea     ecx, [esp+18h+buffer]
push    1
push    ecx
push    edi
call    sub_401100
mov     edx, oldfilename
add     esp, 1ch
pop     edi
mov     byte ptr [edx], 0
pop     esi
retn
push    esi
mov     esi, [esp+4+buffer]
push    edi
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
mov     edi, [esp+8+hfile]
lea     eax, [esp+8+buffer]
not     ecx
push    2
dec     ecx
push    eax
push    edi
mov     [esp+14h+buffer], ecx
call    sub_401100
mov     eax, [esp+14h+buffer]
add     esp, 0ch
test    ax, ax
jz      short loc_407233
and     eax, 0ffffh
push    eax
push    esi
push    edi
call    sub_401100
add     esp, 0ch
pop     edi
pop     esi
retn
push    ecx
mov     ecx, [esp+4+csidl]
lea     eax, [esp+4+csidl]
push    esi
xor     esi, esi
push    eax
push    ecx
push    esi
call    ds:shgetspecialfolderlocation
test    eax, eax
jnz     short loc_4072a6
mov     eax, [esp+8+csidl]
test    eax, eax
jz      short loc_4072a6
mov     edx, [esp+8+pszpath]
push    edx
push    eax
call    ds:shgetpathfromidlista
test    eax, eax
jz      short loc_407276
mov     esi, 1
lea     eax, [esp+8+ppmalloc]
push    eax
call    ds:shgetmalloc
test    eax, eax
jnz     short loc_4072a6
mov     eax, [esp+8+ppmalloc]
test    eax, eax
jz      short loc_4072a6
mov     ecx, [esp+8+csidl]
test    ecx, ecx
jz      short loc_4072a0
mov     edx, [eax]
push    ecx
push    eax
call    dword ptr [edx+14h]
mov     eax, [esp+8+ppmalloc]
mov     ecx, [eax]
push    eax
call    dword ptr [ecx+8]
mov     eax, esi
pop     esi
pop     ecx
retn
sub     esp, 108h
push    ebp
push    esi
mov     esi, [esp+110h+string1]
push    edi
push    0ch
push    offset astartmenu
push    esi
mov     [esp+120h+buffer], 0
mov     ebp, 2
call    __strnicmp
add     esp, 0ch
test    eax, eax
jnz     short loc_4072f7
mov     al, [esi+0ch]
add     esi, 0ch
cmp     al, 5ch
mov     ebp, 0bh
jnz     short loc_4072ee
inc     esi
cmp     byte ptr [esi], 0
jnz     short loc_40733f
xor     esi, esi
jmp     short loc_407368
push    offset astartup
push    esi
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     short loc_407312
mov     ebp, 7
xor     esi, esi
jmp     short loc_407368
push    9
push    offset string1
push    esi
call    __strnicmp
add     esp, 0ch
test    eax, eax
jnz     short loc_40733f
mov     al, [esi+9]
add     esi, 9
cmp     al, 5ch
mov     ebp, 10h
jnz     short loc_407336
inc     esi
cmp     byte ptr [esi], 0
jnz     short loc_40733f
xor     esi, esi
jmp     short loc_407368
test    esi, esi
jz      short loc_407368
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
test    ecx, ecx
jle     short loc_407368
mov     dl, [esp+114h+buffer]
cmp     byte ptr [eax+esi], 5ch
jnz     short loc_40735f
inc     dl
inc     eax
cmp     eax, ecx
jl      short loc_407357
mov     [esp+114h+buffer], dl
lea     eax, [esp+114h+path]
push    ebp
push    eax
call    sub_407240
add     esp, 8
test    esi, esi
jz      short loc_4073b7
cmp     byte ptr [esi], 0
jz      short loc_4073b7
lea     ecx, [esp+114h+path]
push    ecx
call    sub_402060
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 4
repne scasb
not     ecx
sub     edi, ecx
lea     edx, [esp+114h+path]
mov     esi, edi
mov     ebp, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, ebp
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, ebp
and     ecx, 3
rep movsb
lea     eax, [esp+114h+path]
push    eax
call    sub_4020b0
lea     ecx, [esp+118h+path]
push    ecx
call    __chdir
add     esp, 8
test    eax, eax
jz      short loc_4073fb
lea     edx, [esp+114h+path]
push    edx
call    sub_402060
lea     eax, [esp+118h+path]
push    eax
call    sub_402320
lea     ecx, [esp+11ch+path]
push    ecx
call    __chdir
add     esp, 0ch
test    eax, eax
jnz     loc_4074d2
lea     edx, [esp+114h+path]
push    edx
call    sub_402060
lea     edi, [esp+118h+path]
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [esp+118h+path]
repne scasb
mov     edi, [esp+118h+arg_8]
not     ecx
dec     ecx
mov     ebp, ecx
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, edx
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     eax, [esp+118h+arg_14]
mov     ecx, edx
mov     edx, [esp+118h+arg_c]
and     ecx, 3
rep movsb
mov     ecx, [esp+118h+arg_10]
push    eax
push    ecx
mov     ecx, [esp+120h+arg_0]
lea     eax, [esp+120h+path]
push    edx
push    eax
push    ecx
call    sub_405240
add     esp, 18h
test    eax, eax
jl      short loc_4074d2
mov     esi, [esp+114h+hfile]
cmp     esi, 0ffffffffh
jz      short loc_4074be
test    ebp, ebp
jz      short loc_407489
mov     [esp+ebp+114h+buffer], 0
lea     edx, [esp+114h+buffer]
push    1
push    edx
push    esi
call    sub_401100
lea     eax, [esp+120h+path]
push    eax
push    esi
call    sub_4071f0
lea     ecx, [esp+ebp+128h+path]
push    ecx
push    esi
call    sub_4071f0
add     esp, 1ch
mov     eax, 1
pop     edi
pop     esi
pop     ebp
add     esp, 108h
retn
call    sub_401000
pop     edi
pop     esi
mov     eax, 1
pop     ebp
add     esp, 108h
retn
pop     edi
pop     esi
xor     eax, eax
pop     ebp
add     esp, 108h
retn
push    ebx
mov     ebx, [esp+4+str]
push    ebp
mov     ebp, [esp+8+arg_4]
test    ebp, ebp
mov     byte ptr [ebx], 0
jz      loc_407596
cmp     byte ptr [ebp+0], 0
jz      loc_407596
mov     eax, [esp+8+arg_8]
push    esi
test    ah, 1
push    edi
jz      short loc_407541
mov     edi, lpfilename
or      ecx, 0ffffffffh
xor     eax, eax
push    5ch
repne scasb
not     ecx
sub     edi, ecx
push    ebx
mov     eax, ecx
mov     esi, edi
mov     edi, ebx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
call    _strrchr
add     esp, 8
test    eax, eax
jz      short loc_407564
mov     byte ptr [eax], 0
jmp     short loc_407564
mov     edi, phkresult
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, ebx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
push    ebx
call    sub_402060
mov     edi, ebp
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 4
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edx, ecx
mov     edi, ebx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
sub     esp, 12ch
mov     eax, dword_41cc74
push    esi
xor     esi, esi
push    edi
mov     edi, dword_41cc70
cmp     eax, esi
mov     [esp+134h+var_12c], esi
mov     [esp+134h+buffer], si
mov     [esp+134h+var_124], esi
mov     [esp+134h+var_126], si
mov     [esp+134h+var_11c], esi
jbe     loc_40787f
push    ebx
push    ebp
jmp     short loc_4075d9
xor     esi, esi
mov     ecx, [edi+16h]
mov     eax, ecx
shr     eax, 16h
and     eax, 1
mov     [esp+13ch+var_118], eax
mov     eax, dword_41ce54
test    ecx, eax
jz      loc_4077fd
push    2
push    edi
call    sub_403a50
mov     ebx, eax
push    5
push    edi
mov     [esp+14ch+var_10c], ebx
call    sub_403a50
mov     cl, [ebx]
add     esp, 10h
test    cl, cl
mov     [esp+13ch+var_120], eax
jnz     short loc_40761d
cmp     byte ptr [eax], 0
jz      short loc_407667
push    edi
call    sub_4083e0
add     esp, 4
cmp     [esp+13ch+buffer], si
jnz     short loc_407667
mov     esi, [esp+13ch+hfile]
cmp     esi, 0ffffffffh
jz      short loc_407667
push    esi
call    sub_401140
mov     [esp+140h+ldistancetomove], eax
lea     eax, [esp+140h+buffer]
push    8
push    eax
push    esi
mov     [esp+14ch+buffer], 1236h
call    sub_401100
lea     ecx, [esp+14ch+var_12c]
push    4
push    ecx
push    esi
call    sub_401100
add     esp, 1ch
cmp     byte ptr [ebx], 0
jz      loc_407757
push    1
push    edi
call    sub_403a50
push    3
push    edi
mov     ebp, eax
call    sub_403a50
mov     esi, eax
push    4
push    edi
mov     [esp+154h+var_108], esi
call    sub_403a50
mov     edx, [edi+16h]
push    edx
push    eax
lea     eax, [esp+15ch+str]
push    eax
call    sub_4074e0
add     esp, 24h
mov     ebx, esi
test    esi, esi
jz      short loc_4076d6
cmp     byte ptr [esi], 0
jz      short loc_4076d6
push    0ffdch
push    esi
push    0
call    sub_407890
inc     eax
push    eax
mov     [esp+14ch+count], eax
call    _malloc
mov     ecx, [esp+14ch+count]
mov     ebx, eax
push    ecx
push    esi
push    ebx
call    sub_407890
add     esp, 1ch
push    3bh
push    ebp
call    _strchr
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_4076ea
mov     byte ptr [esi], 0
mov     edx, [esp+13ch+hfile]
mov     eax, [esp+13ch+var_118]
xor     ecx, ecx
push    edx
mov     cx, [edi+4]
push    eax
mov     eax, [esp+144h+var_10c]
lea     edx, [esp+144h+str]
push    ecx
mov     ecx, lpexistingfilename
push    edx
push    ebx
push    eax
push    ebp
push    ecx
call    sub_4072b0
add     esp, 20h
test    esi, esi
jz      short loc_40772b
lea     ebp, [esi+1]
mov     byte ptr [esi], 3bh
cmp     byte ptr [ebp+0], 0
jnz     short loc_40772b
xor     esi, esi
cmp     [esp+13ch+hfile], 0ffffffffh
jz      short loc_40773f
test    eax, eax
jz      short loc_40773f
inc     [esp+13ch+var_12c]
jmp     short loc_407744
call    sub_40bf70
test    esi, esi
jnz     short loc_4076d6
cmp     ebx, [esp+13ch+var_108]
jz      short loc_407757
push    ebx
call    sub_4122c3
add     esp, 4
mov     edx, [esp+13ch+var_120]
cmp     byte ptr [edx], 0
jz      loc_4077fd
push    6
push    edi
call    sub_403a50
push    7
push    edi
mov     esi, eax
call    sub_403a50
mov     ecx, [edi+16h]
lea     edx, [esp+14ch+str]
push    ecx
push    eax
push    edx
call    sub_4074e0
add     esp, 1ch
mov     ebp, esi
test    esi, esi
jz      short loc_4077b6
cmp     byte ptr [esi], 0
jz      short loc_4077b6
push    0ffdch
push    esi
push    0
call    sub_407890
lea     ebx, [eax+1]
push    ebx
call    _malloc
mov     ebp, eax
push    ebx
push    esi
push    ebp
call    sub_407890
add     esp, 1ch
mov     ebx, [esp+13ch+hfile]
mov     eax, [esp+13ch+var_118]
mov     edx, [esp+13ch+var_120]
push    ebx
push    eax
mov     eax, lpexistingfilename
lea     ecx, [esp+144h+str]
push    0
push    ecx
push    ebp
push    edx
push    offset string1
push    eax
call    sub_4072b0
add     esp, 20h
test    eax, eax
jz      short loc_4077f0
cmp     ebx, 0ffffffffh
jz      short loc_4077f0
inc     [esp+13ch+var_12c]
cmp     ebp, esi
jz      short loc_4077fd
push    ebp
call    sub_4122c3
add     esp, 4
mov     esi, [esp+13ch+var_11c]
push    edi
inc     esi
mov     [esp+140h+var_11c], esi
call    sub_4037b0
mov     edi, eax
mov     eax, dword_41cc74
add     esp, 4
cmp     esi, eax
jb      loc_4075d7
cmp     [esp+13ch+buffer], 0
pop     ebp
pop     ebx
jz      short loc_40787f
mov     esi, [esp+134h+hfile]
push    esi
call    sub_401140
mov     ecx, eax
mov     eax, [esp+138h+ldistancetomove]
mov     edx, 0fffffff8h
push    eax
sub     edx, eax
push    esi
add     ecx, edx
mov     [esp+140h+var_124], ecx
call    sub_401160
mov     eax, [esp+140h+var_124]
add     esp, 0ch
test    eax, eax
jz      short loc_40787f
lea     eax, [esp+134h+buffer]
push    8
push    eax
push    esi
call    sub_401100
lea     ecx, [esp+140h+var_12c]
push    4
push    ecx
push    esi
call    sub_401100
push    0
push    esi
call    sub_4011a0
add     esp, 20h
pop     edi
pop     esi
add     esp, 12ch
retn
sub     esp, 24h
lea     eax, [esp+24h+var_20]
push    esi
mov     esi, [esp+28h+phkresult]
push    edi
push    eax
push    0ffdch
call    sub_402120
add     esp, 8
test    eax, eax
jnz     short loc_4078da
mov     eax, [esp+2ch+destination]
test    eax, eax
jz      short loc_4078c6
mov     ecx, [esp+2ch+count]
push    ecx
push    esi
push    eax
call    _strncpy
add     esp, 0ch
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
pop     edi
mov     eax, ecx
pop     esi
add     esp, 24h
retn
push    ebx
push    ebp
mov     ebp, [esp+34h+var_20]
push    23h
push    esi
call    _strchr
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jz      loc_407c15
mov     eax, ebx
mov     edi, ebp
sub     eax, esi
push    23h
mov     ecx, eax
add     ebp, eax
mov     edx, ecx
lea     eax, [ebx+1]
shr     ecx, 2
rep movsd
mov     ecx, edx
push    eax
and     ecx, 3
rep movsb
mov     byte ptr [ebp+0], 0
call    _strchr
add     esp, 8
test    eax, eax
jz      loc_407c31
mov     edx, eax
mov     esi, ebx
sub     edx, ebx
mov     edi, ebp
push    offset awindows
push    ebp
lea     ecx, [edx+1]
mov     ebx, ecx
shr     ecx, 2
rep movsd
mov     ecx, ebx
and     ecx, 3
inc     eax
rep movsb
mov     byte ptr [edx+ebp+1], 0
mov     [esp+3ch+str], eax
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     short loc_40796d
push    104h
push    ebp
call    ds:getwindowsdirectorya
jmp     loc_407bdb
push    offset asystem
push    ebp
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     short loc_407990
push    104h
push    ebp
call    ds:getsystemdirectorya
jmp     loc_407bdb
push    offset acommonfiles
push    ebp
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     loc_407a4e
lea     ecx, [esp+34h+phkresult]
push    ecx
push    offset asoftwaremicros_0
push    80000002h
call    ds:regopenkeya
test    eax, eax
jnz     loc_407bdb
mov     ecx, [esp+34h+phkresult]
mov     esi, ds:regqueryvalueexa
lea     edx, [esp+34h+cbdata]
mov     [esp+34h+type], eax
push    edx
lea     eax, [esp+38h+type]
push    ebp
push    eax
push    0
push    offset valuename
push    ecx
mov     [esp+4ch+cbdata], 104h
call    esi
test    eax, eax
jz      short loc_407a3e
mov     ecx, [esp+34h+phkresult]
lea     edx, [esp+34h+cbdata]
push    edx
lea     eax, [esp+38h+type]
push    ebp
push    eax
push    0
push    offset aprogramfilesdi
push    ecx
call    esi
push    ebp
call    sub_402060
mov     edi, offset acommonfiles
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 4
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edx, ecx
mov     edi, ebp
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, [esp+34h+phkresult]
push    eax
call    ds:regclosekey
jmp     loc_407bdb
push    offset aprogramfiles
push    ebp
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     short loc_407ab6
lea     ecx, [esp+34h+hkey]
push    ecx
push    offset asoftwaremicros_0
push    80000002h
call    ds:regopenkeya
test    eax, eax
jnz     loc_407bdb
mov     ecx, [esp+34h+hkey]
lea     edx, [esp+34h+type]
mov     [esp+34h+cbdata], eax
push    edx
lea     eax, [esp+38h+cbdata]
push    ebp
push    eax
push    0
push    offset aprogramfilesdi
push    ecx
mov     [esp+4ch+type], 104h
call    ds:regqueryvalueexa
mov     edx, [esp+34h+hkey]
push    edx
call    ds:regclosekey
jmp     loc_407bdb
push    offset amydocuments
push    ebp
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     short loc_407ad8
push    5
push    ebp
call    sub_407240
add     esp, 8
jmp     loc_407bdb
push    offset aappdata
push    ebp
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     short loc_407afa
push    1ah
push    ebp
call    sub_407240
add     esp, 8
jmp     loc_407bdb
push    offset ainstalldir
push    ebp
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     short loc_407b32
mov     edi, phkresult
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, ebp
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
jmp     loc_407bdb
push    offset asourcedir
push    ebp
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     short loc_407b79
mov     edi, lpfilename
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
push    5ch
mov     edx, ecx
mov     esi, edi
mov     edi, ebp
push    ebp
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
call    _strrchr
add     esp, 8
test    eax, eax
jz      short loc_407bdb
mov     byte ptr [eax], 0
jmp     short loc_407bdb
push    offset adate
push    ebp
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     short loc_407bd7
lea     eax, [esp+34h+systemtime]
push    eax
call    ds:getlocaltime
mov     eax, dword ptr [esp+34h+systemtime.wyear]
mov     edx, dword ptr [esp+34h+systemtime.wmonth]
and     eax, 0ffffh
and     edx, 0ffffh
lea     eax, [eax+eax*4]
lea     ecx, [eax+eax*4]
lea     eax, [edx+ecx*4]
mov     ecx, dword ptr [esp+34h+systemtime.wday]
and     ecx, 0ffffh
lea     eax, [eax+eax*4]
lea     eax, [eax+eax*4]
lea     edx, [ecx+eax*4]
push    edx
push    offset alu
push    ebp
call    ds:wsprintfa
add     esp, 0ch
jmp     short loc_407bdb
mov     byte ptr [ebp+0], 0
cmp     byte ptr [ebp+0], 0
jz      short loc_407bf8
push    ebp
call    sub_4020b0
mov     edi, ebp
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 4
repne scasb
not     ecx
dec     ecx
add     ebp, ecx
mov     eax, [esp+34h+str]
push    23h
push    eax
call    _strchr
mov     esi, [esp+3ch+str]
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jnz     loc_4078f5
mov     edi, esi
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, ebp
shr     ecx, 2
rep movsd
mov     ecx, edx
jmp     short loc_407c4b
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, ebp
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
xor     eax, eax
rep movsb
mov     edi, ebp
or      ecx, 0ffffffffh
repne scasb
mov     esi, [esp+34h+var_20]
mov     edi, [esp+34h+destination]
not     ecx
dec     ecx
add     ebp, ecx
sub     ebp, esi
test    edi, edi
jz      short loc_407c91
mov     ecx, [esp+34h+count]
test    ecx, ecx
jz      short loc_407c91
test    ebp, ebp
mov     [edi], al
jz      short loc_407c91
lea     eax, [ebp+1]
cmp     eax, ecx
jnb     short loc_407c83
mov     ecx, eax
mov     edx, ecx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
lea     eax, [esp+34h+var_20]
push    eax
call    sub_402160
add     esp, 4
mov     eax, ebp
pop     ebp
pop     ebx
pop     edi
pop     esi
add     esp, 24h
retn
mov     eax, lpexistingfilename
push    esi
push    eax
call    ds:loadlibrarya
mov     esi, eax
cmp     esi, 20h
jb      short loc_407ceb
mov     eax, [esp+4+arg_0]
test    eax, eax
mov     eax, offset adllregisterser
jnz     short loc_407cd6
mov     eax, offset adllunregisters
push    eax
push    esi
call    ds:getprocaddress
test    eax, eax
jz      short loc_407ce4
call    eax
push    esi
call    ds:freelibrary
pop     esi
retn
mov     edx, lpexistingfilename
sub     esp, 2ach
or      ecx, 0ffffffffh
xor     eax, eax
push    esi
push    edi
mov     edi, edx
repne scasb
not     ecx
dec     ecx
mov     esi, ecx
cmp     esi, 4
jle     loc_407e0e
lea     eax, [edx+esi-4]
push    offset areg
push    eax
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     short loc_407d45
mov     ecx, [esp+2b4h+arg_0]
cmp     word ptr [ecx+2], 1f4h
jz      loc_407f4b
mov     edi, offset aregedits
jmp     short loc_407d7d
mov     ecx, lpexistingfilename
push    offset atlb
lea     edx, [ecx+esi-4]
push    edx
call    __strcmpi
add     esp, 8
test    eax, eax
jnz     loc_407e0e
mov     eax, [esp+2b4h+arg_0]
cmp     word ptr [eax+2], 1f4h
jz      loc_407f4b
mov     edi, offset aregtlibq
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
push    1
mov     edx, ecx
mov     esi, edi
mov     edi, oldfilename
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, lpexistingfilename
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, oldfilename
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, offset asc_4184c0
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, oldfilename
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, oldfilename
push    eax
call    ds:winexec
pop     edi
pop     esi
add     esp, 2ach
retn
mov     ecx, [esp+2b4h+arg_0]
mov     ax, [ecx+2]
cmp     ax, 1f4h
jnz     loc_407f35
lea     edx, [esp+2b4h+phkresult]
push    edx
push    offset asoftwaremicros
push    80000002h
call    ds:regcreatekeya
test    eax, eax
jnz     loc_407f4b
mov     eax, dword_41cc2c
cmp     eax, 64h
jge     loc_407f21
mov     esi, ds:wsprintfa
mov     edi, ds:regqueryvalueexa
push    eax
push    offset aiclaunch
lea     eax, [esp+2bch+valuename]
push    offset as33d
push    eax
call    esi
mov     eax, dword_41cc2c
add     esp, 10h
inc     eax
lea     ecx, [esp+2b4h+cbdata]
mov     dword_41cc2c, eax
lea     edx, [esp+2b4h+data]
push    ecx
lea     eax, [esp+2b8h+type]
push    edx
mov     edx, [esp+2bch+phkresult]
push    eax
lea     ecx, [esp+2c0h+valuename]
push    0
push    ecx
push    edx
mov     [esp+2cch+type], 0
mov     [esp+2cch+cbdata], 168h
call    edi
test    eax, eax
jnz     short loc_407ec9
mov     eax, dword_41cc2c
cmp     eax, 64h
jl      short loc_407e5a
mov     ecx, [esp+2b4h+phkresult]
push    ecx
call    ds:regclosekey
pop     edi
pop     esi
add     esp, 2ach
retn
mov     ecx, lpexistingfilename
lea     eax, [esp+2b4h+szshortpath]
push    104h
push    eax
push    ecx
call    ds:getshortpathnamea
lea     edx, [esp+2b4h+szshortpath]
lea     eax, [esp+2b4h+data]
push    edx
push    offset aregsvr32ss
push    eax
call    esi
lea     edi, [esp+2c0h+data]
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 0ch
repne scasb
not     ecx
dec     ecx
lea     edx, [esp+2b4h+valuename]
push    ecx
lea     ecx, [esp+2b8h+data]
push    ecx
push    1
push    eax
mov     eax, [esp+2c4h+phkresult]
push    edx
push    eax
call    ds:regsetvalueexa
mov     ecx, [esp+2b4h+phkresult]
push    ecx
call    ds:regclosekey
pop     edi
pop     esi
add     esp, 2ach
retn
cmp     ax, 17h
jz      short loc_407f41
cmp     ax, 19h
jnz     short loc_407f4b
push    1
call    sub_407cb0
add     esp, 4
pop     edi
pop     esi
add     esp, 2ach
retn
mov     eax, hfile
cmp     eax, 0ffffffffh
jz      short loc_407f73
push    eax
call    sub_4012c0
add     esp, 4
mov     dword_41cc50, 0
retn
mov     eax, hfile
sub     esp, 17ch
cmp     eax, 0ffffffffh
jz      short loc_407f99
push    eax
call    sub_4012c0
add     esp, 4
mov     eax, dword_41cebc
push    esi
xor     esi, esi
cmp     eax, esi
jnz     loc_40833f
mov     eax, lpdata
push    edi
cmp     byte ptr [eax], 0
jz      loc_408242
push    ebx
push    ebp
push    2
push    eax
call    sub_401040
mov     ebp, eax
push    esi
push    ebp
call    sub_4011a0
push    ebp
call    sub_401140
mov     ebx, eax
mov     eax, phkresult
push    eax
mov     [esp+1a4h+var_170], 1235h
mov     [esp+1a4h+var_16e], si
mov     [esp+1a4h+var_16c], esi
call    sub_402060
lea     ecx, [esp+1a4h+buffer]
push    4
push    ecx
push    ebp
mov     [esp+1b0h+buffer], esi
call    sub_401100
mov     eax, dword_41cc74
mov     edi, dword_41cc70
add     esp, 24h
cmp     eax, esi
mov     [esp+18ch+phkresult], esi
jbe     loc_4080c9
push    edi
call    sub_4083e0
mov     edx, lpexistingfilename
add     esp, 4
cmp     byte ptr [edx], 0
jz      short loc_4080a4
mov     ecx, [edi+16h]
test    ch, 2
jz      short loc_408038
push    esi
jmp     short loc_408092
mov     ax, [edi+2]
cmp     ax, 17h
jz      short loc_408054
cmp     ax, 19h
jz      short loc_408054
cmp     ax, 1f4h
jz      short loc_408054
cmp     ax, 1f5h
jnz     short loc_4080a4
test    cl, 80h
jnz     short loc_4080a4
mov     eax, [edi+1ah]
mov     [esp+18ch+var_178], 0
cmp     eax, esi
jz      short loc_40806f
test    ch, 4
jz      short loc_40806f
mov     [esp+18ch+var_178], 1
test    cl, 1
jz      short loc_408079
or      [esp+18ch+var_178], 8
cmp     eax, 3
jnz     short loc_408083
or      [esp+18ch+var_178], 2
test    ch, 10h
jz      short loc_40808d
or      [esp+18ch+var_178], 4
mov     eax, dword ptr [esp+18ch+var_178]
push    eax
push    ebp
call    sub_4070c0
mov     eax, [esp+194h+buffer]
add     esp, 8
inc     eax
mov     [esp+18ch+buffer], eax
mov     eax, [esp+18ch+phkresult]
push    edi
inc     eax
mov     [esp+190h+phkresult], eax
call    sub_4037b0
mov     ecx, [esp+190h+phkresult]
mov     edi, eax
mov     eax, dword_41cc74
add     esp, 4
cmp     ecx, eax
jb      loc_408019
push    ebp
call    sub_401140
sub     eax, ebx
add     ebx, 0fffffff8h
push    ebx
push    ebp
mov     [esp+198h+var_16c], eax
call    sub_401160
lea     edx, [esp+198h+var_170]
push    8
push    edx
push    ebp
call    sub_401100
lea     eax, [esp+1a4h+buffer]
push    4
push    eax
push    ebp
call    sub_401100
mov     ecx, [esp+1b0h+var_16c]
add     ecx, 0fffffffch
push    ecx
push    ebp
call    sub_401180
push    ebp
call    sub_4075a0
mov     eax, dword_41cdbc
add     esp, 30h
mov     ebx, [eax+6]
cmp     ebx, esi
jz      loc_4081ed
cmp     byte ptr [ebx], 0
jz      loc_4081ed
test    byte ptr [eax], 20h
jz      loc_4081ed
mov     edi, offset asoftwaremicros_3
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [esp+18ch+subkey]
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
lea     edx, [esp+18ch+subkey]
shr     ecx, 2
rep movsd
mov     ecx, eax
xor     eax, eax
and     ecx, 3
rep movsb
mov     edi, ebx
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, edx
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
lea     eax, [esp+18ch+phkresult]
and     ecx, 3
push    eax
rep movsb
lea     ecx, [esp+190h+subkey]
push    ecx
push    80000002h
call    ds:regcreatekeya
test    eax, eax
jnz     short loc_4081eb
mov     edi, ebx
or      ecx, 0ffffffffh
repne scasb
mov     edx, [esp+18ch+phkresult]
mov     esi, ds:regsetvalueexa
not     ecx
dec     ecx
push    ecx
push    ebx
push    1
push    eax
push    offset adisplayname
push    edx
call    esi
mov     edx, lpdata
or      ecx, 0ffffffffh
mov     edi, edx
xor     eax, eax
repne scasb
not     ecx
dec     ecx
push    ecx
push    edx
push    1
push    eax
mov     eax, [esp+19ch+phkresult]
push    offset auninstallstrin
push    eax
call    esi
mov     ecx, [esp+18ch+phkresult]
push    ecx
call    ds:regclosekey
xor     esi, esi
mov     ecx, dword_41cea4
mov     eax, dword_41ccbc[ecx*4]
cmp     eax, esi
jz      short loc_408210
mov     edx, nnumberofbytestowrite[ecx*4]
push    edx
push    eax
push    ebp
call    sub_401100
add     esp, 0ch
push    ebp
call    sub_401140
lea     eax, [esp+190h+var_170]
push    8
push    eax
push    ebp
mov     [esp+19ch+var_170], 7f7fh
mov     [esp+19ch+var_16e], 2
mov     [esp+19ch+var_16c], esi
call    sub_401100
push    ebp
call    sub_4012c0
add     esp, 14h
pop     ebp
pop     ebx
jmp     short loc_40824c
push    0ffffffffh
call    sub_4075a0
add     esp, 4
cmp     dword_41ceb0, esi
jnz     loc_40832e
mov     ecx, phkresult
push    ecx
call    sub_4020b0
mov     edx, dword_41cdbc
add     esp, 4
test    byte ptr [edx], 4
jz      short loc_4082e4
cmp     [edx+16h], esi
jz      short loc_4082e4
mov     edi, phkresult
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
mov     eax, [edx+12h]
not     ecx
dec     ecx
mov     edi, ecx
inc     edi
cmp     eax, 10h
jb      short loc_408299
mov     eax, hkey
jmp     short loc_4082a0
mov     eax, dword_418044[eax*4]
mov     edx, [edx+16h]
lea     ecx, [esp+184h+phkresult]
push    ecx
push    edx
push    eax
call    ds:regcreatekeya
test    eax, eax
jnz     short loc_4082de
mov     eax, phkresult
mov     ecx, dword_41cdbc
push    edi
push    eax
mov     edx, [ecx+1ah]
mov     eax, [esp+18ch+phkresult]
push    1
push    esi
push    edx
push    eax
call    ds:regsetvalueexa
mov     ecx, [esp+184h+phkresult]
push    ecx
call    ds:regclosekey
mov     edx, dword_41cdbc
test    byte ptr [edx], 8
jz      short loc_40831f
mov     ecx, [edx+26h]
cmp     ecx, esi
jz      short loc_40831f
mov     eax, [edx+2ah]
cmp     eax, esi
jz      short loc_40831f
mov     edx, [edx+2eh]
cmp     edx, esi
jz      short loc_40831f
mov     edi, ds:writeprivateprofilestringa
push    ecx
mov     ecx, phkresult
push    ecx
push    edx
push    eax
call    edi
mov     edx, dword_41cdbc
mov     eax, [edx+26h]
push    eax
push    esi
push    esi
push    esi
call    edi
mov     ecx, phkresult
push    ecx
call    sub_402060
add     esp, 4
push    1
push    esi
push    1000000h
call    sub_4037c0
add     esp, 0ch
pop     edi
cmp     word ptr dword_418030, 0ffffh
jnz     short loc_408354
push    6
call    sub_408370
add     esp, 4
mov     dword_41cc50, esi
pop     esi
add     esp, 17ch
retn
mov     edx, dword_41cdbc
xor     ecx, ecx
push    esi
mov     al, [edx+32h]
cmp     al, 0ffh
jz      short loc_4083a9
mov     esi, [esp+4+arg_0]
and     eax, 0ffh
cmp     eax, esi
jz      short loc_408398
mov     al, [edx+ecx+33h]
inc     ecx
cmp     al, 0ffh
jnz     short loc_408384
pop     esi
retn
dec     ecx
push    2
mov     dword_41cec8, ecx
call    sub_4083b0
add     esp, 4
pop     esi
retn
mov     eax, [esp+arg_0]
dec     eax
jz      short loc_4083d5
dec     eax
jz      short loc_4083ca
sub     eax, 2
jnz     short locret_4083df
mov     dword_41ce48, 2
retn
mov     dword_41ce48, 1
retn
mov     dword_41ce48, 415h
retn
sub     esp, 10h
push    ebx
push    ebp
push    esi
push    edi
mov     edi, phkresult
or      ecx, 0ffffffffh
xor     eax, eax
mov     ebp, [esp+20h+arg_0]
repne scasb
not     ecx
sub     edi, ecx
mov     [esp+20h+var_c], 0
mov     eax, ecx
mov     esi, edi
mov     edi, lpexistingfilename
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, [ebp+16h]
test    ah, 1
jz      short loc_40849a
mov     edi, lpfilename
or      ecx, 0ffffffffh
xor     eax, eax
push    5ch
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, lpexistingfilename
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, lpexistingfilename
push    eax
call    _strrchr
mov     ebx, eax
add     esp, 8
test    ebx, ebx
jz      short loc_408462
inc     ebx
jmp     short loc_408468
mov     ebx, lpexistingfilename
push    0
push    ebp
call    sub_403a50
mov     edi, eax
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 8
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, ebx
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 10h
retn
mov     edi, 1
push    0
push    ebp
mov     [esp+28h+var_10], edi
call    sub_403a50
mov     esi, eax
push    5ch
push    esi
call    _strrchr
mov     ebp, eax
xor     ebx, ebx
add     esp, 10h
cmp     ebp, ebx
jz      short loc_4084c3
inc     ebp
jmp     short loc_4084c5
mov     ebp, esi
mov     ecx, [esp+20h+arg_0]
mov     eax, [ecx+1ah]
cmp     eax, 0ah
ja      def_4084d5
jmp     ds:jpt_4084d5[eax*4]
mov     eax, lpexistingfilename
push    104h
push    eax
call    ds:getwindowsdirectorya
jmp     def_4084d5
push    9
push    ecx
call    sub_403a50
mov     edi, eax
or      ecx, 0ffffffffh
xor     eax, eax
push    104h
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, lpexistingfilename
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, lpexistingfilename
push    eax
push    eax
call    sub_407890
add     esp, 14h
jmp     def_4084d5
mov     eax, lpexistingfilename
push    14h
push    eax
call    sub_407240
add     esp, 8
mov     [esp+20h+var_c], edi
jmp     def_4084d5
mov     ecx, lpexistingfilename
push    10h
push    ecx
call    sub_407240
add     esp, 8
jmp     def_4084d5
mov     edx, lpexistingfilename
push    5
push    edx
call    sub_407240
add     esp, 8
mov     [esp+20h+var_10], ebx
jmp     def_4084d5
mov     eax, lpexistingfilename
push    1ah
push    eax
call    sub_407240
add     esp, 8
mov     [esp+20h+var_10], ebx
jmp     def_4084d5
push    edi
push    30ch
call    sub_412212
mov     ebx, eax
add     esp, 8
test    ebx, ebx
lea     esi, [ebx+208h]
jnz     short loc_4085c9
mov     ecx, lpexistingfilename
push    104h
push    ecx
call    ds:getsystemdirectorya
jmp     def_4084d5
mov     edx, lpexistingfilename
push    edx
call    sub_4020b0
add     esp, 4
mov     edi, 104h
push    edi
push    esi
call    ds:getwindowsdirectorya
lea     eax, [esp+20h+pudestdirlen]
lea     ecx, [esp+20h+pucurdirlen]
push    eax
mov     eax, lpexistingfilename
push    ebx
lea     edx, [ebx+104h]
push    ecx
push    edx
push    eax
push    esi
push    ebp
push    1
mov     [esp+40h+pudestdirlen], edi
mov     [esp+40h+pucurdirlen], edi
call    verfindfilea
test    al, 2
jnz     short loc_40861a
mov     [esp+20h+var_c], 1
cmp     byte ptr [ebx], 0
jz      short loc_408644
mov     edi, ebx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, lpexistingfilename
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
jmp     short loc_408651
mov     eax, lpexistingfilename
push    edi
push    eax
call    ds:getsystemdirectorya
push    ebx
call    sub_4122c3
add     esp, 4
mov     ecx, lpexistingfilename
push    ecx
call    sub_402060
mov     eax, [esp+24h+var_10]
add     esp, 4
test    eax, eax
jz      short loc_408675
mov     edi, ebp
jmp     short loc_408686
mov     eax, [esp+20h+arg_0]
push    0
push    eax
call    sub_403a50
add     esp, 8
mov     edi, eax
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, lpexistingfilename
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     eax, [esp+20h+var_c]
mov     ecx, edx
and     ecx, 3
test    eax, eax
rep movsb
jz      short loc_4086c5
mov     eax, lpexistingfilename
push    eax
call    sub_4012d0
add     esp, 4
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 10h
retn
sub     esp, 0ch
lea     eax, [esp+0ch+arg_0]
push    ebp
push    esi
mov     esi, [esp+14h+arg_0]
push    eax
push    800h
mov     ebp, 1
call    sub_402120
add     esp, 8
test    eax, eax
jnz     short loc_40872c
mov     eax, ebp
pop     esi
pop     ebp
add     esp, 0ch
retn
mov     edx, lpexistingfilename
lea     ecx, [esp+14h+dwhandle]
push    ebx
push    ecx
push    edx
call    getfileversioninfosizea
test    eax, eax
mov     [esp+18h+dwlen], eax
jz      loc_408881
push    eax
call    _malloc
mov     ebx, eax
add     esp, 4
test    ebx, ebx
jz      loc_408881
mov     eax, [esp+18h+dwlen]
mov     ecx, [esp+18h+dwhandle]
mov     edx, lpexistingfilename
push    edi
push    ebx
push    eax
push    ecx
push    edx
call    getfileversioninfoa
test    eax, eax
jz      loc_408877
mov     al, [esi+16h]
mov     edi, ds:wsprintfa
test    al, 2
jz      short loc_408807
lea     eax, [esp+1ch+dwlen]
lea     ecx, [esp+1ch+lpbuffer]
push    eax
push    ecx
push    offset subblock
push    ebx
call    verqueryvaluea
test    eax, eax
jz      short loc_408807
mov     edx, [esp+1ch+lpbuffer]
mov     ecx, [esi+1eh]
mov     eax, [edx+8]
cmp     eax, ecx
ja      short loc_4087bd
jnz     short loc_408807
mov     edx, [edx+0ch]
mov     eax, [esi+22h]
cmp     edx, eax
jbe     short loc_408807
push    1dh
push    7
call    sub_4036a0
mov     cl, [eax]
add     esp, 8
test    cl, cl
jz      loc_408875
mov     ecx, dword_41ceb8
test    ecx, ecx
jnz     loc_408875
mov     ecx, lpexistingfilename
mov     edx, [esp+1ch+arg_0]
push    ecx
push    eax
push    edx
call    edi
mov     eax, [esp+28h+arg_0]
push    124h
push    eax
call    sub_403660
add     esp, 14h
cmp     eax, 6
jnz     short loc_408875
mov     eax, dword_41ceb8
test    eax, eax
jnz     short loc_408877
test    byte ptr [esi+16h], 4
jz      short loc_408877
lea     ecx, [esp+1ch+dwlen]
lea     edx, [esp+1ch+lpbuffer]
push    ecx
push    edx
push    offset avarfileinfotra
push    ebx
call    verqueryvaluea
test    eax, eax
jz      short loc_408877
mov     ecx, [esp+1ch+lpbuffer]
xor     eax, eax
mov     ax, [ecx]
mov     ecx, [esi+2eh]
cmp     ecx, eax
jz      short loc_408877
push    1eh
push    7
call    sub_4036a0
add     esp, 8
test    eax, eax
jz      short loc_408877
mov     edx, lpexistingfilename
push    edx
push    eax
mov     eax, [esp+24h+arg_0]
push    eax
call    edi
mov     ecx, [esp+28h+arg_0]
push    124h
push    ecx
call    sub_403660
add     esp, 14h
cmp     eax, 6
jz      short loc_408877
xor     ebp, ebp
push    ebx
call    sub_4122c3
add     esp, 4
pop     edi
lea     edx, [esp+18h+arg_0]
push    edx
call    sub_402160
add     esp, 4
mov     eax, ebp
pop     ebx
pop     esi
pop     ebp
add     esp, 0ch
retn
mov     eax, dword_41cc3c
push    esi
test    eax, eax
jz      short loc_4088b1
mov     eax, 1
pop     esi
retn
push    400h
call    _malloc
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_4088ff
mov     eax, lpexistingfilename
push    edi
push    eax
push    20h
push    7
call    sub_4036a0
add     esp, 8
push    eax
push    esi
call    ds:wsprintfa
push    24h
push    esi
call    sub_403660
push    esi
mov     edi, eax
call    sub_4122c3
add     esp, 18h
cmp     edi, 6
pop     edi
jnz     short loc_4088ff
mov     eax, 1
pop     esi
retn
mov     ecx, lpexistingfilename
mov     dword_41cebc, 15h
push    ecx
call    sub_406c70
add     esp, 4
xor     eax, eax
pop     esi
retn
sub     esp, 10h
lea     eax, [esp+10h+phkresult]
push    eax
push    0f003fh
push    0
push    offset asoftwaremicros_2
push    80000002h
call    ds:regopenkeyexa
test    eax, eax
jnz     loc_4089c9
lea     ecx, [esp+10h+cbdata]
lea     edx, [esp+10h+data]
push    ecx
mov     ecx, lpexistingfilename
lea     eax, [esp+14h+type]
push    edx
mov     edx, [esp+18h+phkresult]
push    eax
push    0
push    ecx
push    edx
mov     dword ptr [esp+28h+data], 1
mov     [esp+28h+type], 4
mov     [esp+28h+cbdata], 4
call    ds:regqueryvalueexa
test    eax, eax
jnz     short loc_40898c
inc     dword ptr [esp+10h+data]
jmp     short loc_40899c
mov     dword ptr [esp+10h+data], 1
mov     [esp+10h+type], 4
mov     eax, [esp+10h+cbdata]
mov     edx, [esp+10h+type]
lea     ecx, [esp+10h+data]
push    eax
mov     eax, lpexistingfilename
push    ecx
mov     ecx, [esp+18h+phkresult]
push    edx
push    0
push    eax
push    ecx
call    ds:regsetvalueexa
mov     edx, [esp+10h+phkresult]
push    edx
call    ds:regclosekey
add     esp, 10h
retn
sub     esp, 28h
mov     eax, oldfilename
push    ebx
push    ebp
push    esi
xor     esi, esi
push    edi
mov     [esp+38h+var_14], esi
mov     byte ptr [eax], 0
mov     eax, dword_41cc4c
mov     ecx, dword_41cc74
inc     eax
mov     [esp+38h+var_24], esi
cmp     eax, ecx
mov     [esp+38h+var_28], 0ffffffffh
mov     dword_41cc4c, eax
jnb     loc_40903c
jmp     short loc_408a0e
xor     esi, esi
mov     ebp, dword_41cc48
push    ebp
call    sub_4037b0
xor     ebx, ebx
mov     dword_41cc48, eax
mov     bx, [ebp+2]
push    ebp
mov     [esp+40h+var_1c], ebx
mov     [ebp+2], si
call    sub_4083e0
mov     edi, lpexistingfilename
mov     [esp+40h+var_18], eax
add     esp, 8
cmp     byte ptr [edi], 0
jz      loc_408bad
test    bl, 2
jz      loc_408ad5
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, lpdata
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, dword_41cdbc
test    byte ptr [eax], 10h
jz      short loc_408acf
mov     ecx, lpexistingfilename
push    0
push    ecx
call    sub_401040
mov     esi, eax
add     esp, 8
cmp     esi, 0ffffffffh
jz      short loc_408ac7
push    0fffffff8h
push    esi
call    sub_4011a0
lea     edx, [esp+40h+buffer]
push    8
push    edx
push    esi
call    sub_4010c0
push    esi
call    sub_4012c0
add     esp, 18h
cmp     [esp+38h+buffer], 7f7fh
jnz     short loc_408ac7
test    [esp+38h+var_6], 2
jnz     loc_408bad
mov     eax, lpdata
mov     byte ptr [eax], 30h
mov     edi, lpexistingfilename
mov     eax, dword_41cc4c
xor     edx, edx
lea     eax, [eax+eax*4+5]
lea     eax, [eax+eax*4]
shl     eax, 2
div     dword_41cc74
mov     [esp+38h+wparam], eax
mov     eax, [ebp+16h]
test    ah, 1
jnz     loc_40900d
test    dword_41ce54, eax
jz      loc_40900d
test    ah, 2
jnz     loc_408bcb
test    al, 40h
mov     ebx, 1
jz      short loc_408b3b
push    0
push    edi
call    sub_401040
add     esp, 8
cmp     eax, 0ffffffffh
jz      short loc_408b35
push    eax
call    sub_4012c0
add     esp, 4
jmp     short loc_408b94
mov     edi, lpexistingfilename
mov     eax, [esp+38h+var_18]
test    eax, eax
jz      short loc_408b96
push    0
push    edi
mov     [esp+40h+var_20], 0
call    sub_401040
mov     esi, eax
add     esp, 8
cmp     esi, 0ffffffffh
jz      short loc_408b89
push    esi
call    sub_4011c0
mov     ecx, [ebp+0eh]
add     esp, 4
cmp     eax, ecx
jnz     short loc_408b80
lea     ecx, [esp+38h+var_c]
lea     edx, [esp+38h+var_20]
push    ecx
push    edx
push    esi
call    sub_405120
add     esp, 0ch
push    esi
call    sub_4012c0
add     esp, 4
mov     eax, [esp+38h+var_20]
mov     ecx, [ebp+12h]
cmp     eax, ecx
jnz     short loc_408b96
xor     ebx, ebx
test    ebx, ebx
mov     dword_41cebc, 0
jz      short loc_408bd9
mov     eax, dword_41cdc0
test    eax, eax
jnz     short loc_408bec
mov     eax, dword_41cc4c
mov     ecx, dword_41cc74
inc     eax
cmp     eax, ecx
mov     dword_41cc4c, eax
jb      loc_408a0c
jmp     loc_40903c
push    edi
call    sub_402320
add     esp, 4
jmp     loc_40900d
mov     edi, [esp+38h+var_28]
mov     bl, byte ptr [esp+38h+var_1c]
mov     word ptr [ebp+2], 1f5h
jmp     loc_408f51
push    2
push    5
call    sub_4036a0
add     esp, 8
test    eax, eax
jz      short loc_408c10
cmp     byte ptr [eax], 0
jz      short loc_408c10
mov     ecx, lpexistingfilename
push    ecx
call    sub_401e80
add     esp, 4
mov     edx, lpexistingfilename
push    edx
call    sub_402320
mov     edi, lpexistingfilename
or      ecx, 0ffffffffh
xor     eax, eax
push    offset aa
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, oldfilename
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     ecx, oldfilename
push    ecx
call    sub_401fe0
mov     edx, oldfilename
push    0
push    edx
call    sub_401040
add     esp, 14h
cmp     eax, 0ffffffffh
jz      short loc_408caa
push    eax
call    sub_4012c0
mov     esi, oldfilename
or      ecx, 0ffffffffh
mov     edi, esi
xor     eax, eax
repne scasb
not     ecx
dec     ecx
mov     edi, esi
push    eax
mov     dl, [ecx+esi-1]
or      ecx, 0ffffffffh
inc     dl
repne scasb
not     ecx
dec     ecx
mov     [ecx+esi-1], dl
mov     eax, oldfilename
push    eax
call    sub_401040
add     esp, 0ch
cmp     eax, 0ffffffffh
jnz     short loc_408c6a
mov     ecx, oldfilename
push    ecx
call    sub_401090
mov     edi, eax
add     esp, 4
cmp     edi, 0ffffffffh
mov     [esp+38h+var_28], edi
jnz     short loc_408ce2
mov     edx, oldfilename
mov     dword_41cebc, 11h
push    edx
call    sub_406c70
add     esp, 4
jmp     loc_409026
mov     bl, byte ptr [esp+38h+var_1c]
test    bl, 2
jz      loc_408dae
mov     ecx, dword_41cdc8
test    ecx, ecx
jz      loc_408e85
mov     eax, dword_41cdc4
test    eax, eax
jz      loc_408e85
push    eax
push    ecx
push    edi
call    sub_401100
add     esp, 0ch
mov     dword_41cebc, eax
test    eax, eax
jnz     loc_409026
mov     eax, [ebp+6]
push    eax
call    sub_406e80
add     esp, 4
mov     dword_41cebc, eax
test    eax, eax
jnz     loc_409026
mov     ecx, [ebp+0ah]
mov     edx, hfile
push    eax
push    eax
push    ecx
push    edx
push    edi
call    sub_403210
mov     esi, eax
mov     eax, dword_41ce48
add     esp, 14h
test    esi, esi
jz      short loc_408d90
cmp     eax, 2
jz      loc_409026
push    0
push    ebp
call    sub_403a50
add     esp, 8
push    eax
push    0
push    ebp
call    sub_403a50
add     esp, 8
push    eax
push    esi
call    sub_407030
add     esp, 0ch
mov     dword_41cebc, eax
jmp     loc_409026
cmp     eax, 2
jz      loc_409026
push    edi
call    sub_4012c0
add     esp, 4
or      edi, 0ffffffffh
mov     [esp+38h+var_28], edi
jmp     loc_408e85
mov     eax, [ebp+6]
push    eax
call    sub_406e80
add     esp, 4
mov     dword_41cebc, eax
test    eax, eax
jnz     loc_409026
mov     eax, [ebp+0ah]
lea     ecx, [esp+38h+var_20]
lea     edx, [esp+38h+var_1c]
push    ecx
mov     ecx, hfile
push    edx
push    eax
push    ecx
push    edi
call    sub_403210
mov     esi, eax
mov     eax, dword_41ce48
add     esp, 14h
test    esi, esi
jz      short loc_408e24
cmp     eax, 2
jz      loc_409026
push    0
push    ebp
call    sub_403a50
add     esp, 8
push    eax
push    0
push    ebp
call    sub_403a50
add     esp, 8
push    eax
push    esi
call    sub_407030
add     esp, 0ch
mov     dword_41cebc, eax
jmp     loc_409026
cmp     eax, 2
jz      loc_409026
mov     eax, [ebp+16h]
test    al, 8
jz      short loc_408e4e
test    al, 6
lea     eax, [ebp+32h]
jnz     short loc_408e3e
lea     eax, [ebp+1eh]
lea     edx, [eax+10h]
lea     ecx, [eax+8]
push    edx
push    ecx
push    eax
push    edi
call    ds:setfiletime
push    edi
call    sub_4012c0
mov     edx, [esp+3ch+var_1c]
mov     eax, [ebp+0eh]
add     esp, 4
or      edi, 0ffffffffh
cmp     edx, eax
mov     [esp+38h+var_28], edi
jnz     short loc_408e74
mov     eax, [esp+38h+var_20]
mov     ecx, [ebp+12h]
cmp     eax, ecx
jz      short loc_408e85
call    sub_4088a0
test    eax, eax
jz      loc_40903c
mov     edi, [esp+38h+var_28]
cmp     dword ptr [ebp+1ah], 3
jnz     short loc_408ec3
mov     ecx, lpexistingfilename
push    0
push    ecx
call    sub_401040
add     esp, 8
cmp     eax, 0ffffffffh
jz      short loc_408ec3
push    eax
call    sub_4012c0
mov     edx, lpexistingfilename
push    edx
call    sub_402a90
mov     eax, lpexistingfilename
push    eax
call    sub_4012d0
add     esp, 0ch
jmp     short loc_408ec7
mov     eax, [esp+38h+var_18]
test    eax, eax
jz      short loc_408ef3
mov     ecx, oldfilename
mov     edx, lpexistingfilename
push    ecx
push    edx
call    sub_40a5c0
mov     dword_41ceb4, 1
add     esp, 8
mov     word ptr [ebp+2], 1f4h
jmp     short loc_408f02
mov     eax, oldfilename
push    eax
push    ebp
call    sub_409070
add     esp, 8
mov     ax, [ebp+2]
cmp     ax, 1bh
jnz     short loc_408f2a
mov     ecx, lpexistingfilename
mov     dword_41cebc, 16h
push    ecx
call    sub_406c70
add     esp, 4
jmp     loc_409026
test    bl, 4
jz      short loc_408f51
cmp     ax, 1f4h
push    100h
jnz     short loc_408f43
mov     edx, oldfilename
push    edx
jmp     short loc_408f49
mov     eax, lpexistingfilename
push    eax
call    __chmod
add     esp, 8
mov     eax, dword_41cebc
test    eax, eax
jnz     loc_409026
mov     ecx, oldfilename
test    bl, 2
mov     byte ptr [ecx], 0
jz      short loc_408f72
mov     word ptr [ebp+2], 0
mov     eax, [ebp+1ah]
test    eax, eax
jz      short loc_408fa2
mov     eax, [ebp+16h]
test    ah, 4
jz      short loc_408fa2
mov     ax, [ebp+2]
cmp     ax, 17h
jz      short loc_408f9d
cmp     ax, 19h
jz      short loc_408f9d
cmp     ax, 1f5h
jz      short loc_408f9d
cmp     ax, 1f4h
jnz     short loc_408fa2
call    sub_408920
cmp     dword ptr [ebp+1ah], 3
jnz     short loc_408fc7
mov     ax, [ebp+2]
cmp     ax, 17h
jz      short loc_408fb8
cmp     ax, 19h
jnz     short loc_408fc7
mov     edx, lpexistingfilename
push    edx
call    sub_4027a0
add     esp, 4
mov     eax, [ebp+16h]
test    ah, 10h
jz      short loc_408fff
mov     eax, dword_41cdfc
test    eax, eax
jz      short loc_408fe0
cmp     word ptr [ebp+2], 1f5h
jz      short loc_408ff6
mov     ax, [ebp+2]
cmp     ax, 17h
jz      short loc_408ff6
cmp     ax, 19h
jz      short loc_408ff6
cmp     ax, 1f4h
jnz     short loc_408fff
push    ebp
call    sub_407cf0
add     esp, 4
mov     eax, [ebp+16h]
test    ah, 8
jz      short loc_40900d
mov     dword_41cc5c, ebp
mov     eax, [esp+38h+wparam]
push    eax
call    sub_401e00
mov     edi, [esp+3ch+var_28]
add     esp, 4
mov     [esp+38h+var_24], 1
cmp     edi, 0ffffffffh
jz      short loc_409034
push    edi
call    sub_4012c0
add     esp, 4
mov     eax, [esp+38h+var_24]
test    eax, eax
jnz     short loc_40904f
mov     eax, oldfilename
cmp     byte ptr [eax], 0
jz      short loc_40904f
push    eax
call    _remove
add     esp, 4
mov     eax, [esp+38h+var_14]
pop     edi
pop     esi
pop     ebp
test    eax, eax
pop     ebx
jz      short loc_409068
lea     ecx, [esp+28h+var_14]
push    ecx
call    sub_402160
add     esp, 4
mov     eax, [esp+28h+var_24]
add     esp, 28h
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
push    2
mov     word ptr [edi+2], 1bh
mov     eax, lpexistingfilename
push    eax
call    __access
add     esp, 8
test    eax, eax
jz      loc_40912a
cmp     dword_41cedc, 0dh
jnz     loc_40912a
mov     ecx, lpexistingfilename
push    180h
push    ecx
call    __chmod
mov     edx, lpexistingfilename
push    edx
call    _remove
mov     esi, [esp+18h+oldfilename]
add     esp, 0ch
test    eax, eax
jz      short loc_409100
push    esi
push    edi
call    sub_4091a0
add     esp, 8
cmp     eax, 4
jnz     loc_40918d
mov     eax, lpexistingfilename
push    180h
push    eax
call    __chmod
mov     ecx, lpexistingfilename
push    ecx
call    _remove
add     esp, 0ch
test    eax, eax
jnz     short loc_4090ca
mov     edx, lpexistingfilename
push    edx
push    esi
call    _rename
mov     eax, lpexistingfilename
push    100h
push    eax
call    __chmod
add     esp, 10h
mov     word ptr [edi+2], 17h
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, lpexistingfilename
push    ecx
call    _remove
mov     ebx, [esp+10h+oldfilename]
mov     esi, eax
add     esp, 4
test    esi, esi
jz      short loc_409170
cmp     dword_41cedc, 0dh
jnz     short loc_409170
push    ebx
push    edi
call    sub_4091a0
add     esp, 8
cmp     eax, 4
jnz     short loc_40918d
mov     edx, lpexistingfilename
push    edx
call    _remove
mov     esi, eax
add     esp, 4
test    esi, esi
jnz     short loc_409143
mov     eax, lpexistingfilename
push    eax
push    ebx
call    _rename
add     esp, 8
neg     esi
sbb     esi, esi
and     esi, 2
add     esi, 17h
mov     [edi+2], si
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 10h
mov     eax, lpexistingfilename
push    edi
push    0
push    eax
mov     [esp+1ch+var_4], 0
call    sub_401040
mov     edi, eax
add     esp, 8
cmp     edi, 0ffffffffh
mov     [esp+14h+hfile], edi
jz      loc_4092de
push    ebx
push    esi
push    edi
call    sub_4011c0
mov     ecx, [esp+20h+arg_0]
mov     esi, eax
add     esp, 4
mov     [esp+1ch+var_10], esi
cmp     esi, [ecx+0eh]
jnz     loc_4092aa
mov     edx, [esp+1ch+filename]
push    0
push    edx
call    sub_401040
mov     ebx, eax
add     esp, 8
cmp     ebx, 0ffffffffh
mov     [esp+1ch+var_8], ebx
jz      loc_4092aa
push    ebp
push    4000h
call    _malloc
mov     ebp, eax
add     esp, 4
test    ebp, ebp
jz      loc_4092a0
test    esi, esi
jz      short loc_409287
jmp     short loc_409229
mov     esi, [esp+20h+var_10]
cmp     esi, 2000h
mov     ebx, esi
jb      short loc_409238
mov     ebx, 2000h
mov     eax, [esp+20h+hfile]
push    ebx
push    ebp
push    eax
call    sub_4010c0
add     esp, 0ch
test    eax, eax
jnz     short loc_409283
mov     ecx, [esp+20h+var_8]
lea     edi, [ebp+2000h]
push    ebx
push    edi
push    ecx
call    sub_4010c0
add     esp, 0ch
test    eax, eax
jnz     short loc_409283
mov     ecx, 800h
mov     esi, ebp
xor     edx, edx
repe cmpsd
jnz     short loc_40927f
mov     eax, [esp+20h+var_10]
sub     eax, ebx
mov     [esp+20h+var_10], eax
jnz     short loc_409225
jmp     short loc_409287
mov     esi, [esp+20h+var_10]
test    esi, esi
jnz     short loc_40928f
mov     [esp+20h+var_4], 1
push    ebp
call    sub_4122c3
mov     edi, [esp+24h+hfile]
mov     ebx, [esp+24h+var_8]
add     esp, 4
push    ebx
call    sub_4012c0
add     esp, 4
pop     ebp
push    edi
call    sub_4012c0
mov     eax, [esp+20h+var_4]
add     esp, 4
test    eax, eax
pop     esi
pop     ebx
jz      short loc_4092de
mov     eax, [esp+14h+filename]
push    eax
call    _remove
mov     ecx, [esp+18h+arg_0]
add     esp, 4
mov     eax, 5
mov     word ptr [ecx+2], 17h
pop     edi
add     esp, 10h
retn
mov     edx, [esp+14h+filename]
mov     eax, lpexistingfilename
push    edx
push    eax
call    sub_40a5c0
mov     ecx, [esp+1ch+arg_0]
add     esp, 8
mov     dword_41ceb4, 1
mov     eax, 5
mov     word ptr [ecx+2], 1f4h
pop     edi
add     esp, 10h
retn
sub     esp, 1ch
call    sub_4068f0
test    eax, eax
jz      short loc_409398
call    sub_4089d0
test    eax, eax
jz      short loc_409393
push    ebx
mov     ebx, ds:translatemessage
push    ebp
mov     ebp, ds:dispatchmessagea
push    esi
mov     esi, ds:peekmessagea
push    edi
mov     edi, ds:getmessagea
push    0
push    0
push    0
lea     eax, [esp+38h+msg]
push    0
push    eax
call    esi
test    eax, eax
jz      short loc_409386
push    0
push    0
lea     ecx, [esp+34h+msg]
push    0
push    ecx
call    edi
test    eax, eax
jz      short loc_409373
lea     edx, [esp+2ch+msg]
push    edx
call    ebx
lea     eax, [esp+2ch+msg]
push    eax
call    ebp
push    0
push    0
push    0
lea     ecx, [esp+38h+msg]
push    0
push    ecx
call    esi
test    eax, eax
jnz     short loc_409354
call    sub_4089d0
test    eax, eax
jnz     short loc_409341
pop     edi
pop     esi
pop     ebp
pop     ebx
call    sub_407f80
add     esp, 1ch
retn
mov     edx, [esp+arg_4]
mov     eax, edx
sub     eax, 110h
jz      short loc_409421
mov     ecx, [esp+hdc]
dec     eax
jnz     short loc_4093d4
mov     eax, ecx
and     eax, 0ffffh
sub     eax, 2
jnz     short loc_4093d4
cmp     word ptr dword_418030, 0ffffh
jnz     short loc_4093d4
mov     eax, dword_41ce14
test    eax, eax
jz      short loc_4093e8
mov     eax, [esp+arg_c]
push    eax
push    ecx
mov     ecx, [esp+8+hdlg]
push    edx
push    ecx
call    sub_404890
retn    10h
push    0fh
push    0dh
call    sub_4036f0
add     esp, 8
test    eax, eax
jz      short loc_409411
mov     dword_41ce48, 2
call    sub_407f60
mov     dword_41ce1c, 1
mov     edx, [esp+hdlg]
push    edx
call    sub_403c20
add     esp, 4
retn    10h
mov     eax, [esp+arg_c]
mov     ecx, [esp+hdc]
push    esi
mov     esi, [esp+4+hdlg]
push    eax
push    ecx
push    110h
push    esi
call    sub_404890
push    4
push    esi
call    sub_405bf0
push    esi
call    sub_401dd0
push    5
push    4
call    sub_405e20
mov     edx, dword_41ce74
add     esp, 14h
push    2
push    edx
call    ds:getdlgitem
push    eax
call    ds:setfocus
cmp     word ptr dword_418030, 0ffffh
pop     esi
jz      short loc_40947c
xor     eax, eax
retn    10h
call    sub_4068f0
test    eax, eax
mov     eax, 1
jnz     short locret_40948f
mov     dword_41ce48, eax
retn    10h
mov     edx, [esp+arg_4]
sub     esp, 20h
mov     eax, edx
sub     eax, 110h
push    esi
jz      loc_409559
mov     ecx, [esp+24h+arg_8]
dec     eax
jnz     short loc_40951c
mov     eax, ecx
and     eax, 0ffffh
cmp     eax, 3f6h
jg      short loc_409515
jz      short loc_4094f3
test    eax, eax
jle     short loc_40951c
cmp     eax, 2
jg      short loc_40951c
mov     eax, [esp+24h+hdlg]
mov     dword_41ce48, 2
push    eax
call    sub_403c20
add     esp, 4
pop     esi
add     esp, 20h
retn    10h
push    1
push    2
push    4000000h
call    sub_4037c0
mov     ecx, [esp+30h+hdlg]
push    ecx
call    sub_403c20
add     esp, 10h
pop     esi
add     esp, 20h
retn    10h
cmp     eax, 3f7h
jz      short loc_409534
mov     eax, [esp+24h+hwnd]
push    eax
push    ecx
mov     ecx, [esp+2ch+hdlg]
push    edx
push    ecx
call    sub_404890
pop     esi
add     esp, 20h
retn    10h
mov     esi, [esp+24h+hdlg]
push    3f7h
push    esi
call    ds:isdlgbuttonchecked
push    esi
mov     ucheck, eax
call    sub_403c20
add     esp, 4
pop     esi
add     esp, 20h
retn    10h
push    9
push    6
call    sub_4036a0
mov     cl, [eax]
add     esp, 8
test    cl, cl
jz      short loc_409575
mov     dword_41ceb4, 1
mov     eax, dword_41cebc
test    eax, eax
jz      short loc_409588
mov     dword_41ceb4, 0
mov     edx, [esp+24h+hwnd]
mov     eax, [esp+24h+arg_8]
mov     esi, [esp+24h+hdlg]
push    ebx
push    ebp
push    edi
push    edx
push    eax
push    110h
push    esi
call    sub_404890
push    104h
push    esi
call    sub_405bf0
add     esp, 8
push    offset string
push    3ebh
push    esi
call    ds:setdlgitemtexta
mov     ebp, ds:getdlgitem
push    3f6h
push    esi
call    ebp
mov     edi, ds:showwindow
test    eax, eax
mov     [esp+30h+arg_8], eax
jz      short loc_4095e4
push    0
push    eax
call    edi
push    3f7h
push    esi
call    ebp
mov     ebx, eax
test    ebx, ebx
jz      short loc_40960a
mov     ecx, ucheck
push    ecx
push    3f7h
push    esi
call    ds:checkdlgbutton
push    0
push    ebx
call    edi
mov     edx, dword_41ce08
push    3e8h
push    edx
call    ebp
mov     [esp+30h+hwnd], eax
mov     eax, dword_41cebc
test    eax, eax
jnz     short loc_409678
mov     ecx, dword_41cc74
mov     eax, dword_41cc70
test    ecx, ecx
mov     [esp+30h+hdlg], 0
jbe     loc_409914
cmp     word ptr [eax+2], 1bh
jz      loc_409708
mov     ecx, [esp+30h+hdlg]
push    eax
inc     ecx
mov     [esp+34h+hdlg], ecx
call    sub_4037b0
mov     ecx, [esp+34h+hdlg]
mov     edx, dword_41cc74
add     esp, 4
cmp     ecx, edx
jb      short loc_409640
mov     eax, dword_41cebc
test    eax, eax
jz      loc_409914
mov     eax, [esp+30h+hwnd]
mov     ebx, ds:getwindowrect
lea     edx, [esp+30h+rect]
push    edx
push    eax
call    ebx
lea     ecx, [esp+30h+var_10]
push    ecx
push    3eah
push    esi
call    ebp
push    eax
call    ebx
push    0
push    3e9h
push    esi
call    ebp
push    eax
call    edi
push    0
push    3eah
push    esi
call    ebp
push    eax
call    edi
push    6
mov     edx, [esp+34h+var_10.bottom]
mov     edi, [esp+34h+rect.top]
mov     eax, [esp+34h+rect.right]
mov     ecx, [esp+34h+rect.left]
mov     esi, [esp+34h+hwnd]
sub     edx, edi
sub     eax, ecx
push    edx
push    eax
push    0
push    0
push    0
push    esi
call    ds:setwindowpos
cmp     dword_41cebc, 0fh
jnz     short loc_409717
push    0fh
push    7
call    sub_4036a0
push    eax
push    esi
call    sub_405680
add     esp, 10h
mov     dword_41ce1c, 1
jmp     loc_409a74
mov     dword_41cebc, 16h
jmp     loc_409678
lea     ecx, [esp+30h+hdlg]
push    ecx
push    800h
call    sub_402120
add     esp, 8
test    eax, eax
jz      loc_409905
mov     eax, dword_41cebc
mov     ebx, ds:wsprintfa
cmp     eax, 3e8h
jnz     loc_4097e3
mov     edx, [esp+30h+hdlg]
mov     edi, dword_41ceac
or      ecx, 0ffffffffh
xor     eax, eax
add     edx, 400h
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
shr     ecx, 2
rep movsd
mov     ecx, eax
xor     eax, eax
and     ecx, 3
push    eax
rep movsb
mov     ecx, [esp+34h+hdlg]
mov     edi, offset asc_418550
push    1f4h
lea     edx, [ecx+400h]
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, edx
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edx, [esp+38h+hdlg]
or      ecx, 0ffffffffh
lea     edi, [edx+400h]
repne scasb
not     ecx
dec     ecx
lea     eax, [ecx+edx+400h]
mov     ecx, dwmessageid
push    eax
push    0
push    ecx
push    0
push    1000h
call    ds:formatmessagea
jmp     loc_4098ca
cmp     eax, 1fh
jnz     loc_4098b7
mov     edx, [esp+30h+hdlg]
mov     edi, dword_41ceac
or      ecx, 0ffffffffh
xor     eax, eax
add     edx, 400h
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     esi, [esp+30h+hdlg]
mov     al, [esi+400h]
lea     edx, [esi+400h]
test    al, al
jz      short loc_40985f
mov     edi, offset asc_418550
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
mov     edx, eax
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     esi, [esp+30h+hdlg]
mov     eax, dword_41cebc
lea     edi, [esi+400h]
push    eax
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
lea     ecx, [ecx+esi+400h]
push    ecx
call    sub_405030
mov     eax, dword_41cdf4
add     esp, 8
test    eax, eax
jz      short loc_4098ca
mov     edx, [esp+30h+hdlg]
push    eax
or      ecx, 0ffffffffh
xor     eax, eax
lea     edi, [edx+400h]
push    offset aerror44x
repne scasb
not     ecx
dec     ecx
lea     edx, [ecx+edx+400h]
push    edx
call    ebx
add     esp, 0ch
jmp     short loc_4098ca
push    eax
mov     eax, [esp+34h+hdlg]
add     eax, 400h
push    eax
call    sub_405030
add     esp, 8
mov     ecx, [esp+30h+hdlg]
add     ecx, 400h
push    ecx
push    5
push    6
call    sub_4036a0
mov     edx, [esp+3ch+hdlg]
add     esp, 8
push    eax
push    edx
call    ebx
mov     eax, [esp+3ch+hdlg]
mov     ecx, [esp+3ch+hwnd]
push    eax
push    ecx
call    sub_405680
lea     edx, [esp+44h+hdlg]
push    edx
call    sub_402160
add     esp, 18h
mov     dword_41ce1c, 1
jmp     loc_409a74
mov     eax, dword_41cdbc
mov     [esp+30h+hdlg], 0
test    byte ptr [eax], 40h
jz      short loc_409958
push    6
push    6
call    sub_4036a0
add     esp, 8
test    eax, eax
jz      short loc_409958
cmp     byte ptr [eax], 0
jz      short loc_409958
mov     ecx, [esp+30h+arg_8]
push    eax
push    ecx
call    ds:setwindowtexta
push    1
mov     edx, [esp+34h+arg_8]
push    edx
call    edi
mov     [esp+30h+hdlg], 1
mov     eax, dword_41ceb4
test    eax, eax
jnz     loc_409a4f
mov     eax, dword_41cdbc
test    byte ptr [eax], 80h
jz      loc_409a4f
push    7
push    6
call    sub_4036a0
add     esp, 8
test    eax, eax
jz      loc_409a4f
cmp     byte ptr [eax], 0
jz      loc_409a4f
push    eax
push    ebx
call    ds:setwindowtexta
push    1
push    ebx
call    edi
mov     eax, [esp+30h+hdlg]
test    eax, eax
jnz     loc_409a4f
push    3
push    6
call    sub_4036a0
add     esp, 8
test    eax, eax
jz      short loc_4099c2
cmp     byte ptr [eax], 0
jnz     loc_409a4f
mov     edx, [esp+30h+arg_8]
lea     ecx, [esp+30h+rect]
push    ecx
push    edx
call    ds:getwindowrect
mov     edi, [esp+30h+rect.top]
lea     eax, [esp+30h+rect]
push    eax
push    ebx
call    ds:getwindowrect
mov     eax, [esp+30h+rect.top]
mov     ecx, [esp+30h+rect.bottom]
sub     edi, eax
add     ecx, edi
add     eax, edi
mov     [esp+30h+rect.bottom], ecx
lea     ecx, [esp+30h+rect]
push    ecx
push    esi
mov     [esp+38h+rect.top], eax
call    ds:screentoclient
push    5
push    0
mov     edx, [esp+38h+rect.top]
mov     eax, [esp+38h+rect.left]
push    0
push    edx
push    eax
push    0
push    ebx
call    ds:setwindowpos
push    4
push    6
call    sub_4036a0
add     esp, 8
push    eax
push    3e9h
push    esi
call    ebp
push    eax
call    sub_405680
add     esp, 8
push    offset string
push    3eah
push    esi
call    ebp
push    eax
call    ds:setwindowtexta
push    offset string
push    3ebh
push    esi
call    ebp
push    eax
call    ds:setwindowtexta
push    1
push    0
push    2000000h
call    sub_4037c0
add     esp, 0ch
mov     ecx, dword_41ce74
push    2
push    ecx
call    ebp
push    eax
call    ds:setfocus
pop     edi
pop     ebp
pop     ebx
xor     eax, eax
pop     esi
add     esp, 20h
retn    10h
xor     eax, eax
retn    10h
mov     ecx, [esp+arg_4]
mov     eax, ecx
sub     eax, 110h
jz      short loc_409b00
dec     eax
mov     eax, [esp+arg_8]
jnz     short loc_409ad0
cmp     ax, 1
jz      short loc_409ae7
cmp     ax, 2
jz      short loc_409ae7
mov     edx, [esp+arg_c]
push    edx
push    eax
mov     eax, [esp+8+hdlg]
push    ecx
push    eax
call    sub_403a90
add     esp, 10h
retn    10h
mov     ecx, [esp+hdlg]
and     eax, 0ffffh
push    eax
push    ecx
call    ds:enddialog
mov     eax, 1
retn    10h
mov     edx, wparam
push    esi
mov     esi, [esp+4+hdlg]
push    edi
push    edx
push    esi
call    sub_403610
push    0
push    7
call    sub_4036a0
add     esp, 10h
push    eax
push    esi
call    ds:setwindowtexta
push    6
push    8
call    sub_4036a0
mov     edi, ds:setdlgitemtexta
add     esp, 8
push    eax
push    1
push    esi
call    edi
push    2
push    8
call    sub_4036a0
add     esp, 8
push    eax
push    2
push    esi
call    edi
push    8
push    6
call    sub_4036a0
add     esp, 8
push    eax
push    3e8h
push    esi
call    ds:getdlgitem
push    eax
call    sub_405680
add     esp, 8
mov     eax, 1
pop     edi
pop     esi
retn    10h
sub     esp, 10h
push    ebx
push    esi
mov     ebx, [esp+18h+lparam]
mov     esi, [esp+18h+wparam]
push    edi
mov     edi, [esp+1ch+arg_4]
lea     eax, [edi-82h]
cmp     eax, 90h
ja      def_409bab
xor     ecx, ecx
mov     cl, ds:byte_409e9c[eax]
jmp     ds:jpt_409bab[ecx*4]
mov     edx, dword_41cde0
push    ebp
mov     ebp, [esp+20h+hwnd]
xor     esi, esi
mov     hwndparent, ebp
mov     cl, [edx]
xor     eax, eax
xor     edi, edi
test    cl, 2
jz      loc_409c8c
mov     eax, dword_41ce8c
lea     edx, [esp+20h+rect]
push    edx
push    eax
call    ds:getwindowrect
mov     edi, [esp+20h+rect.right]
mov     ebx, [esp+20h+rect.left]
mov     eax, dword_41cde0
mov     edx, [esp+20h+rect.top]
sub     edi, ebx
mov     ebx, [esp+20h+rect.bottom]
mov     [esp+20h+rect.top], esi
mov     [esp+20h+rect.left], esi
mov     ecx, [eax+0ch]
sub     ebx, edx
mov     [esp+20h+rect.right], ecx
mov     edx, [eax+10h]
push    esi
push    esi
lea     eax, [esp+28h+rect]
push    80c80080h
push    eax
mov     [esp+30h+rect.bottom], edx
call    ds:adjustwindowrectex
mov     esi, [esp+20h+rect.left]
mov     ecx, [esp+20h+rect.right]
mov     edx, [esp+20h+rect.top]
sub     ecx, esi
mov     esi, [esp+20h+rect.bottom]
mov     eax, ecx
sub     esi, edx
cdq
sub     eax, edx
sub     edi, ecx
mov     edx, eax
mov     eax, dword_41ce44
sar     edx, 1
sub     eax, edx
cmp     eax, edi
mov     edx, eax
jl      short loc_409c54
mov     edx, edi
test    edx, edx
jge     short loc_409c5c
xor     edi, edi
jmp     short loc_409c62
cmp     eax, edi
jge     short loc_409c62
mov     edi, eax
mov     eax, esi
sub     ebx, esi
cdq
sub     eax, edx
mov     edx, eax
mov     eax, dword_41ce40
sar     edx, 1
sub     eax, edx
cmp     eax, ebx
mov     edx, eax
jl      short loc_409c7c
mov     edx, ebx
test    edx, edx
jge     short loc_409c84
xor     eax, eax
jmp     short loc_409c92
cmp     eax, ebx
jl      short loc_409c92
mov     eax, ebx
jmp     short loc_409c92
mov     ecx, [edx+0ch]
mov     esi, [edx+10h]
push    4
push    esi
push    ecx
push    eax
push    edi
push    0
push    ebp
call    ds:setwindowpos
mov     eax, dword_41cde0
add     eax, 18h
push    eax
call    ds:createfontindirecta
mov     edi, dword_41cc54
xor     ecx, ecx
mov     edx, edi
mov     wparam, eax
mov     eax, dword_41cc58
shr     edx, 2
jz      short loc_409d0a
mov     esi, edx
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
dec     esi
jnz     short loc_409ccb
and     edi, 3
mov     edx, edi
jbe     short loc_409d23
mov     esi, ecx
xor     ebx, ebx
mov     bl, [eax]
shr     esi, 1fh
lea     ecx, [esi+ecx*2]
add     ecx, ebx
inc     eax
dec     edx
jnz     short loc_409d11
mov     eax, dword_41cdbc
xor     ecx, 7d39ec5ah
cmp     ecx, [eax+22h]
jz      short loc_409d63
cmp     ecx, [eax+0ah]
jz      short loc_409d63
mov     edx, dword_41cde0
xor     eax, eax
mov     ecx, [edx+60h]
mov     esi, [edx+5ch]
add     ecx, edx
test    esi, esi
jle     short loc_409d63
add     ecx, 2
mov     word ptr [ecx], 2
mov     edx, dword_41cde0
inc     eax
add     ecx, 20h
cmp     eax, [edx+5ch]
jl      short loc_409d4f
mov     eax, hinstance
mov     esi, ds:createdialogparama
push    0
push    offset dialogfunc
push    ebp
push    84h
push    eax
call    esi
mov     ecx, hinstance
push    0
push    offset sub_4043b0
push    ebp
push    84h
push    ecx
mov     dword_41ce80, eax
call    esi
mov     edx, hinstance
push    0
push    offset sub_404610
push    ebp
push    70h
push    edx
mov     dword_41ce7c, eax
call    esi
push    0
push    1
push    86h
push    ebp
mov     dword_41ce74, eax
call    ds:postmessagea
pop     ebp
pop     edi
pop     esi
mov     eax, 1
pop     ebx
add     esp, 10h
retn    10h
mov     eax, wparam
test    eax, eax
jz      def_409bab
push    eax
call    ds:deleteobject
mov     wparam, 0
jmp     short def_409bab
mov     eax, esi
and     eax, 0fff0h
sub     eax, 0f020h
jz      short loc_409e4a
sub     eax, 40h
jnz     short def_409bab
mov     eax, dword_41ce74
test    eax, eax
jz      short loc_409e3e
push    0
push    2
push    111h
push    eax
call    ds:postmessagea
push    0
push    0
mov     eax, [esp+24h+hwnd]
push    eax
call    ds:setwindowlonga
pop     edi
pop     esi
mov     eax, 1
pop     ebx
add     esp, 10h
retn    10h
mov     dword_41ce48, 2
jmp     short def_409bab
mov     ecx, dword_41ce8c
push    6
push    ecx
call    ds:showwindow
jmp     short def_409bab
mov     edx, dword_41ce74
push    ebx
push    esi
push    111h
push    edx
call    ds:postmessagea
mov     eax, [esp+1ch+hwnd]
push    ebx
push    esi
push    edi
push    eax
call    sub_403a90
add     esp, 10h
pop     edi
pop     esi
pop     ebx
add     esp, 10h
retn    10h
push    ebp
mov     ebp, esp
sub     esp, 10h
push    ebx
push    esi
push    edi
mov     eax, [ebp+msg]
mov     [ebp+var_4], eax
cmp     [ebp+var_4], 82h
ja      short loc_409f66
cmp     [ebp+var_4], 82h
jz      loc_40a0a8
cmp     [ebp+var_4], 0fh
jz      short loc_409fba
cmp     [ebp+var_4], 1ch
jz      short loc_409f8c
jmp     loc_40a0b0
mov     ecx, [ebp+var_4]
mov     [ebp+var_8], ecx
sub     [ebp+var_8], 112h
cmp     [ebp+var_8], 0
jz      loc_40a02d
sub     [ebp+var_8], 1
cmp     [ebp+var_8], 0
jz      short loc_409fb1
jmp     loc_40a0b0
cmp     hwndparent, 0
jz      short loc_409fac
push    0
mov     edx, [ebp+wparam]
push    edx
push    86h
mov     eax, hwndparent
push    eax
call    ds:postmessagea
jmp     loc_40a0b0
xor     eax, eax
jmp     eax
jmp     loc_40a0b0
mov     ecx, dword_41cde0
mov     edx, [ecx]
and     edx, 2
test    edx, edx
jnz     short loc_409fce
jmp     loc_40a0b0
mov     eax, [ebp+hwnd]
push    eax
call    ds:isiconic
test    eax, eax
jnz     short loc_40a028
mov     ecx, dword_41cdd0
push    ecx
mov     edx, lpchtext
push    edx
mov     eax, dword_41cdd8
push    eax
mov     ecx, dword_41cde0
push    ecx
mov     edx, [ebp+hwnd]
push    edx
call    sub_4014f0
add     esp, 14h
cmp     hwndparent, 0
jz      short loc_40a021
push    400h
push    0
push    0
mov     eax, hwndparent
push    eax
call    ds:redrawwindow
xor     eax, eax
jmp     loc_40a0c6
jmp     loc_40a0b0
mov     ecx, [ebp+wparam]
and     ecx, 0fff0h
mov     [ebp+var_c], ecx
mov     edx, [ebp+var_c]
mov     [ebp+var_10], edx
sub     [ebp+var_10], 0f030h
cmp     [ebp+var_10], 0
jz      short loc_40a065
sub     [ebp+var_10], 30h
cmp     [ebp+var_10], 0
jz      short loc_40a075
sub     [ebp+var_10], 0c0h
cmp     [ebp+var_10], 0
jz      short loc_40a065
jmp     short loc_40a0a6
push    1
mov     eax, hwndparent
push    eax
call    ds:showwindow
jmp     short loc_40a0a6
cmp     dword_41ce74, 0
jz      short loc_40a098
push    0
push    2
push    111h
mov     ecx, dword_41ce74
push    ecx
call    ds:postmessagea
xor     eax, eax
jmp     short loc_40a0c6
mov     dword_41ce48, 2
xor     eax, eax
jmp     short loc_40a0c6
jmp     short loc_40a0b0
push    0
call    ds:postquitmessage
mov     edx, [ebp+lparam]
push    edx
mov     eax, [ebp+wparam]
push    eax
mov     ecx, [ebp+msg]
push    ecx
mov     edx, [ebp+hwnd]
push    edx
call    ds:defwindowproca
pop     edi
pop     esi
pop     ebx
mov     esp, ebp
pop     ebp
retn    10h
mov     edx, dword_41cea4
push    esi
cmp     edx, 0ffffffffh
push    edi
jz      short loc_40a105
mov     edi, phkresult
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, dword_41ccfc[edx*4]
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     eax, [esp+8+arg_0]
xor     edx, edx
mov     dword_41cea4, eax
mov     dword_41cc74, edx
mov     ecx, dword_41cd7c[eax*4]
mov     dword_41cc70, edx
cmp     ecx, edx
jz      short loc_40a138
mov     edx, [ecx]
add     ecx, 4
mov     dword_41cc74, edx
mov     dword_41cc70, ecx
mov     ecx, dword_41cd3c[eax*4]
mov     edi, dword_41ccfc[eax*4]
mov     dword_41cdbc, ecx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, phkresult
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
pop     edi
pop     esi
retn
push    ecx
push    ebx
push    ebp
push    esi
mov     esi, [esp+10h+hfile]
push    edi
push    3f4h
push    esi
mov     [esp+1ch+var_4], 0
call    sub_401160
push    esi
call    sub_4011c0
add     esp, 0ch
cmp     eax, 3094ch
jge     short loc_40a1a9
push    esi
call    sub_4011c0
add     esp, 4
mov     edi, eax
jmp     short loc_40a1ae
mov     edi, 3094ch
mov     eax, lpbuffer
test    eax, eax
jnz     short loc_40a1d0
lea     eax, [edi+8]
push    offset lpbuffer
push    eax
call    sub_402120
add     esp, 8
test    eax, eax
jz      loc_40a2eb
mov     ecx, lpbuffer
push    edi
push    ecx
push    esi
call    sub_4010c0
mov     ebx, lpbuffer
add     esp, 0ch
xor     esi, esi
mov     edx, [ebx]
lea     eax, [ebx+8]
test    edi, edi
mov     dword_41cc58, eax
mov     dword_41cc54, edx
jbe     loc_40a2eb
mov     ebp, dword_41cc78
mov     cx, [eax]
cmp     cx, 7777h
jnz     short loc_40a22c
cmp     dword ptr [eax+2], 48295467h
jz      loc_40a2d7
cmp     cx, cx
jnz     short loc_40a22c
cmp     dword ptr [eax+2], 696c632eh
jz      short loc_40a25b
test    edx, edx
jbe     short loc_40a24b
mov     ecx, ebp
shr     ecx, 1fh
lea     ebp, [ecx+ebp*2]
xor     ecx, ecx
mov     dword_41cc78, ebp
mov     cl, [eax]
add     ebp, ecx
dec     edx
mov     dword_41cc78, ebp
inc     eax
inc     esi
cmp     esi, edi
jb      short loc_40a207
mov     eax, [esp+14h+var_4]
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
xor     ecx, ecx
mov     ebp, eax
cmp     esi, edi
mov     dword_41cc78, ecx
mov     dword_41cc58, ebp
jnb     short loc_40a2eb
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dword_41cc78, ecx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     dword_41cc78, ecx
cmp     word ptr [eax], 7777h
jnz     short loc_40a29a
cmp     dword ptr [eax+2], 696c632eh
jz      short loc_40a2a9
inc     esi
cmp     esi, edi
jb      short loc_40a26f
mov     eax, [esp+14h+var_4]
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
mov     ecx, eax
sub     ecx, ebp
cmp     esi, edi
mov     dword_41cc54, ecx
jnb     short loc_40a2eb
cmp     word ptr [eax], 7777h
jnz     short loc_40a2c7
cmp     dword ptr [eax+2], 48295467h
jz      short loc_40a2d7
inc     eax
inc     esi
cmp     esi, edi
jb      short loc_40a2b7
mov     eax, [esp+14h+var_4]
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
sub     eax, ebx
mov     [esp+14h+var_4], 1
add     eax, 3fah
mov     ldistancetomove, eax
mov     eax, [esp+14h+var_4]
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
push    esi
push    offset dword_41cddc
call    sub_402160
push    offset dword_41cdd8
call    sub_402160
push    offset dword_41cdc8
call    sub_402160
push    offset dword_41cdd0
call    sub_402160
push    offset lpchtext
call    sub_402160
push    offset lpbuffer
call    sub_402160
push    offset dword_41cde0
call    sub_402160
mov     eax, dword_41cea0
add     esp, 1ch
xor     esi, esi
test    eax, eax
jle     short loc_40a396
lea     eax, ds:41cd7ch[esi*4]
push    eax
call    sub_402160
lea     ecx, ds:41cd3ch[esi*4]
push    ecx
call    sub_402160
lea     edx, ds:41ccfch[esi*4]
push    edx
call    sub_402160
lea     eax, ds:41ccbch[esi*4]
push    eax
call    sub_402160
mov     eax, dword_41cea0
add     esp, 10h
inc     esi
cmp     esi, eax
jl      short loc_40a355
pop     esi
retn
push    ebx
push    esi
mov     esi, [esp+8+arg_0]
xor     ebx, ebx
cmp     esi, ebx
push    edi
jz      loc_40a4e8
mov     al, [esi]
cmp     al, bl
jz      loc_40a4e8
cmp     al, 20h
jnz     short loc_40a3c7
mov     al, [esi+1]
inc     esi
cmp     al, 20h
jz      short loc_40a3bf
mov     edi, 1
mov     al, [esi]
cmp     al, 2dh
jz      short loc_40a3da
cmp     al, 2fh
jnz     loc_40a4e8
mov     al, [esi+1]
inc     esi
movsx   eax, al
push    eax
inc     esi
call    _toupper
add     eax, 0ffffffbeh
add     esp, 4
cmp     eax, 14h
ja      def_40a3ff
xor     ecx, ecx
mov     cl, ds:byte_40a50c[eax]
jmp     ds:jpt_40a3ff[ecx*4]
mov     dword_41ce20, ebx
mov     al, [esi]
cmp     al, 30h
jl      def_40a3ff
cmp     al, 39h
jg      def_40a3ff
movsx   eax, al
sub     eax, 30h
inc     esi
mov     dword_41ce20, eax
mov     cl, [esi]
cmp     cl, 30h
jl      def_40a3ff
cmp     cl, 39h
jg      short def_40a3ff
lea     edx, [eax+eax*4]
movsx   eax, cl
lea     ecx, [eax+edx*2-30h]
mov     dword_41ce20, ecx
jmp     short def_40a3ff
movsx   edx, byte ptr [esi]
push    edx
call    _toupper
add     esp, 4
cmp     eax, 45h
jnz     short def_40a3ff
movsx   eax, byte ptr [esi+1]
push    eax
call    _toupper
add     esp, 4
cmp     eax, 4ch
jnz     short def_40a3ff
mov     dword_41cc40, edi
jmp     short def_40a3ff
mov     ucheck, ebx
jmp     short def_40a3ff
mov     al, [esi]
cmp     al, bl
jz      short loc_40a489
cmp     al, 20h
jnz     short def_40a3ff
mov     dword_41cc3c, edi
jmp     short def_40a3ff
mov     ecx, lpfilename
push    104h
push    ecx
push    esi
call    sub_40a530
add     esp, 0ch
mov     esi, eax
jmp     short def_40a3ff
mov     dword_41cdfc, edi
jmp     short def_40a3ff
mov     dword_41ce00, edi
mov     al, [esi]
cmp     al, 20h
jz      short loc_40a4d2
cmp     al, bl
jz      short loc_40a4d2
cmp     al, 2dh
jz      short loc_40a4d2
cmp     al, 2fh
jz      short loc_40a4d2
mov     al, [esi+1]
inc     esi
cmp     al, 20h
jnz     short loc_40a4be
cmp     byte ptr [esi], 20h
jnz     loc_40a3cc
mov     al, [esi+1]
inc     esi
cmp     al, 20h
jz      short loc_40a4db
jmp     loc_40a3cc
pop     edi
pop     esi
pop     ebx
retn
mov     edx, [esp+arg_4]
mov     eax, [esp+arg_0]
push    esi
xor     esi, esi
mov     byte ptr [edx], 0
mov     cl, [eax]
cmp     cl, 20h
push    edi
jnz     short loc_40a54f
mov     cl, [eax+1]
inc     eax
cmp     cl, 20h
jz      short loc_40a546
mov     cl, [eax]
cmp     cl, 22h
jnz     short loc_40a58a
mov     cl, [eax+1]
mov     edi, [esp+8+arg_8]
inc     eax
cmp     cl, 22h
jz      short loc_40a57a
test    cl, cl
jz      short loc_40a57a
cmp     esi, edi
jge     short loc_40a572
mov     [edx], cl
inc     edx
inc     eax
inc     esi
jmp     short loc_40a573
inc     eax
mov     cl, [eax]
cmp     cl, 22h
jnz     short loc_40a563
cmp     esi, edi
jge     short loc_40a581
mov     byte ptr [edx], 0
cmp     byte ptr [eax], 22h
jnz     short loc_40a5b1
pop     edi
inc     eax
pop     esi
retn
mov     edi, [esp+8+arg_8]
cmp     cl, 20h
jz      short loc_40a5aa
test    cl, cl
jz      short loc_40a5aa
cmp     esi, edi
jge     short loc_40a5a2
mov     [edx], cl
inc     edx
inc     eax
inc     esi
jmp     short loc_40a5a3
inc     eax
mov     cl, [eax]
cmp     cl, 20h
jnz     short loc_40a593
cmp     esi, edi
jge     short loc_40a5b1
mov     byte ptr [edx], 0
pop     edi
pop     esi
retn
mov     eax, dword_41ce50
sub     esp, 318h
test    eax, eax
push    ebx
push    esi
push    edi
jz      short loc_40a613
mov     eax, [esp+324h+lpnewfilename]
test    eax, eax
jnz     short loc_40a5f8
push    4
push    eax
mov     eax, [esp+32ch+lpexistingfilename]
push    eax
call    ds:movefileexa
pop     edi
pop     esi
pop     ebx
add     esp, 318h
retn
mov     ecx, [esp+324h+lpexistingfilename]
push    5
push    eax
push    ecx
call    ds:movefileexa
pop     edi
pop     esi
pop     ebx
add     esp, 318h
retn
mov     eax, [esp+324h+lpexistingfilename]
mov     edi, ds:getshortpathnamea
lea     edx, [esp+324h+szshortpath]
push    104h
push    edx
push    eax
call    edi
mov     esi, [esp+324h+lpnewfilename]
test    esi, esi
jz      short loc_40a64b
lea     ecx, [esp+324h+keyname]
push    104h
push    ecx
push    esi
call    edi
lea     edx, [esp+324h+buffer]
push    104h
push    edx
call    ds:getwindowsdirectorya
lea     eax, [esp+324h+buffer]
push    offset awininitini
push    eax
call    ds:lstrcata
test    esi, esi
jz      short loc_40a6a8
mov     esi, ds:writeprivateprofilestringa
lea     ecx, [esp+324h+buffer]
lea     edx, [esp+324h+szshortpath]
push    ecx
lea     eax, [esp+328h+keyname]
push    edx
push    eax
push    offset appname
call    esi
lea     ecx, [esp+324h+buffer]
push    ecx
push    0
push    0
push    0
call    esi
pop     edi
pop     esi
pop     ebx
add     esp, 318h
retn
mov     esi, ds:writeprivateprofilestringa
lea     edx, [esp+324h+buffer]
lea     eax, [esp+324h+szshortpath]
push    edx
push    eax
push    offset keyname
push    offset appname
call    esi
lea     ecx, [esp+324h+buffer]
push    ecx
push    0
push    0
push    0
call    esi
lea     edx, [esp+324h+buffer]
push    2
push    edx
call    sub_401040
mov     ebx, eax
add     esp, 8
cmp     ebx, 0ffffffffh
jz      loc_40a7c8
push    ebp
push    ebx
call    sub_4011c0
mov     ebp, eax
lea     eax, [esp+32ch+lpbuffer]
push    eax
mov     [esp+330h+nnumberofbytestowrite], ebp
lea     ecx, [ebp+200h]
push    ecx
call    sub_4020e0
add     esp, 0ch
test    eax, eax
jz      loc_40a7be
mov     edx, [esp+328h+lpbuffer]
push    ebp
push    edx
push    ebx
call    sub_4010c0
add     esp, 0ch
test    eax, eax
jnz     loc_40a7b1
mov     edx, [esp+328h+lpbuffer]
add     ebp, 0fffffffch
test    ebp, ebp
jbe     short loc_40a7b1
mov     eax, 0fffffffeh
sub     eax, edx
mov     [esp+328h+var_310], eax
cmp     byte ptr [edx], 78h
jnz     short loc_40a780
cmp     byte ptr [edx+1], 79h
jnz     short loc_40a780
cmp     byte ptr [edx+2], 7ah
jnz     short loc_40a780
cmp     byte ptr [edx+3], 3dh
jnz     short loc_40a780
lea     edi, [esp+328h+szshortpath]
or      ecx, 0ffffffffh
xor     eax, eax
lea     esi, [edx+4]
repne scasb
not     ecx
dec     ecx
lea     edi, [esp+328h+szshortpath]
xor     eax, eax
repe cmpsb
jz      short loc_40a78b
mov     eax, [esp+328h+var_310]
inc     edx
lea     ecx, [eax+edx+2]
cmp     ecx, ebp
jb      short loc_40a744
jmp     short loc_40a7b1
push    0
push    ebx
mov     byte ptr [edx], 4eh
mov     byte ptr [edx+1], 55h
mov     byte ptr [edx+2], 4ch
call    sub_401160
mov     edx, [esp+330h+nnumberofbytestowrite]
mov     eax, [esp+330h+lpbuffer]
push    edx
push    eax
push    ebx
call    sub_401100
add     esp, 14h
lea     ecx, [esp+328h+lpbuffer]
push    ecx
call    sub_402160
add     esp, 4
push    ebx
call    sub_4012c0
add     esp, 4
pop     ebp
pop     edi
pop     esi
pop     ebx
add     esp, 318h
retn
sub     esp, 14ch
mov     eax, oldfilename
push    ebx
push    ebp
push    esi
push    edi
push    offset ainstdexe
push    eax
xor     ebx, ebx
xor     ebp, ebp
call    sub_4050a0
mov     edi, eax
add     esp, 8
cmp     edi, 0ffffffffh
mov     [esp+15ch+phkresult], edi
jz      loc_40ab4f
mov     ecx, lpfilename
push    ebx
push    ecx
call    sub_401040
mov     esi, eax
add     esp, 8
cmp     esi, 0ffffffffh
jz      loc_40ab46
cmp     [esp+15ch+arg_4], ebx
jz      short loc_40a83f
mov     ebx, size
jmp     loc_40a8d6
push    esi
call    sub_40a170
add     esp, 4
test    eax, eax
jz      loc_40ab4f
mov     edx, ldistancetomove
push    edx
push    esi
call    sub_401160
add     esp, 8
mov     word ptr [esp+15ch+type], bx
mov     ebp, 7f7fh
lea     eax, [esp+15ch+type]
push    8
push    eax
push    esi
call    sub_4010c0
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     loc_40ab5c
mov     eax, [esp+15ch+var_144]
test    eax, eax
jnz     short loc_40a893
cmp     word ptr [esp+15ch+type], bp
jnz     short loc_40a86a
push    esi
call    sub_401140
mov     edx, [esp+160h+var_144]
add     esp, 4
add     eax, edx
cmp     word ptr [esp+15ch+type], bp
jz      short loc_40a8bc
push    eax
push    esi
call    sub_401160
add     esp, 8
cmp     word ptr [esp+15ch+type], bp
jnz     short loc_40a86a
jmp     short loc_40a8ca
push    esi
call    sub_401140
mov     ebx, eax
add     esp, 4
add     ebx, 4
test    edi, edi
jnz     loc_40ab5c
mov     edi, [esp+15ch+phkresult]
test    ebx, ebx
jz      loc_40ab5c
push    0
push    esi
call    sub_401160
lea     ecx, [esp+164h+lpbuffer]
push    ecx
push    ebx
call    sub_4020e0
add     esp, 10h
test    eax, eax
jz      short loc_40a91d
mov     edx, [esp+15ch+lpbuffer]
push    ebx
push    edx
push    esi
call    sub_4010c0
mov     eax, [esp+168h+lpbuffer]
push    ebx
push    eax
push    edi
call    sub_401100
lea     ecx, [esp+174h+lpbuffer]
push    ecx
call    sub_402160
add     esp, 1ch
push    esi
call    sub_4012c0
push    edi
call    sub_4012c0
mov     eax, [esp+164h+arg_4]
add     esp, 8
test    eax, eax
jz      loc_40aa9a
mov     edx, dword_41cea4
or      ecx, 0ffffffffh
inc     edx
xor     eax, eax
push    edx
mov     edx, oldfilename
mov     edi, edx
mov     ebx, ds:wsprintfa
repne scasb
not     ecx
dec     ecx
push    offset abddel
add     ecx, edx
push    ecx
call    ebx
mov     eax, ucheck
xor     ebp, ebp
add     esp, 0ch
cmp     eax, ebp
jnz     short loc_40a9a1
mov     edi, offset an
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, oldfilename
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, lpexistingfilename
mov     ecx, oldfilename
mov     edi, 104h
push    edi
push    eax
push    ecx
call    ds:getshortpathnamea
lea     edx, [esp+15ch+phkresult]
push    edx
push    offset asoftwaremicros
push    80000002h
call    ds:regcreatekeya
test    eax, eax
jnz     loc_40ab36
mov     eax, dword_41cc2c
cmp     eax, 64h
jge     loc_40aa7f
mov     esi, ds:regqueryvalueexa
push    eax
push    offset aiclaunch
lea     eax, [esp+164h+valuename]
push    offset as33d
push    eax
call    ebx
mov     eax, dword_41cc2c
add     esp, 10h
inc     eax
lea     ecx, [esp+15ch+cbdata]
mov     dword_41cc2c, eax
lea     edx, [esp+15ch+data]
push    ecx
lea     eax, [esp+160h+type]
push    edx
mov     edx, [esp+164h+phkresult]
push    eax
lea     ecx, [esp+168h+valuename]
push    ebp
push    ecx
push    edx
mov     [esp+174h+type], ebp
mov     [esp+174h+cbdata], edi
call    esi
test    eax, eax
jnz     short loc_40aa58
mov     eax, dword_41cc2c
cmp     eax, 64h
jl      short loc_40a9eb
mov     edx, [esp+15ch+phkresult]
push    edx
call    ds:regclosekey
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
add     esp, 14ch
retn
mov     edx, oldfilename
or      ecx, 0ffffffffh
mov     edi, edx
xor     eax, eax
repne scasb
not     ecx
dec     ecx
lea     eax, [esp+15ch+valuename]
push    ecx
mov     ecx, [esp+160h+phkresult]
push    edx
push    1
push    ebp
push    eax
push    ecx
call    ds:regsetvalueexa
mov     edx, [esp+15ch+phkresult]
push    edx
call    ds:regclosekey
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
add     esp, 14ch
retn
or      ecx, 0ffffffffh
mov     edi, offset as
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, oldfilename
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, lpfilename
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, oldfilename
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     edi, offset adel
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, oldfilename
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     eax, [esp+15ch+ucmdshow]
mov     ecx, edx
and     ecx, 3
push    eax
rep movsb
mov     ecx, oldfilename
push    ecx
call    ds:winexec
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
add     esp, 14ch
retn
push    edi
call    sub_4012c0
add     esp, 4
pop     edi
mov     eax, ebp
pop     esi
pop     ebp
pop     ebx
add     esp, 14ch
retn
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 14ch
retn
sub     esp, 230h
mov     eax, [esp+230h+hinstance]
push    ebx
xor     ebx, ebx
push    eax
mov     [esp+238h+var_22c], ebx
mov     [esp+238h+var_230], ebx
call    sub_40af70
add     esp, 4
test    eax, eax
jnz     short loc_40ab9f
pop     ebx
add     esp, 230h
retn    10h
push    esi
mov     esi, ds:getsystemmetrics
push    edi
push    ebx
call    esi
push    1
mov     dword_41ce3c, eax
call    esi
mov     dword_41ce38, eax
mov     ecx, [esp+23ch+lpcmdline]
push    ecx
call    sub_40a3a0
mov     eax, dword_41cc40
mov     esi, ds:getmodulefilenamea
add     esp, 4
cmp     eax, ebx
jz      short loc_40abfb
mov     edx, lpexistingfilename
mov     eax, hinstance
push    104h
push    edx
push    eax
call    esi
mov     ecx, lpexistingfilename
push    ecx
push    ebx
call    sub_40a5c0
add     esp, 8
cmp     dword_41ce20, ebx
jnz     short loc_40ac0b
cmp     dword_41ce18, ebx
jz      short loc_40ac29
call    sub_40b410
cmp     eax, ebx
mov     [esp+23ch+var_22c], eax
jz      loc_40aee3
mov     eax, dword_41ce20
cmp     eax, ebx
jnz     loc_40ae93
call    sub_40b1e0
test    eax, eax
jz      loc_40aee3
mov     eax, dword_41cc40
mov     edi, [esp+23ch+nshowcmd]
cmp     eax, ebx
jnz     short loc_40aca0
mov     edx, lpexistingfilename
mov     eax, hinstance
push    104h
push    edx
push    eax
call    esi
mov     eax, lpexistingfilename
mov     cl, [eax]
cmp     cl, 5ch
jnz     short loc_40ac6b
cmp     [eax+1], cl
jz      short loc_40ac7d
cmp     cl, bl
jz      short loc_40ac7d
cmp     byte ptr [eax+1], 3ah
jnz     short loc_40ac7d
mov     [eax+3], bl
mov     eax, lpexistingfilename
push    eax
call    ds:getdrivetypea
cmp     eax, 2
jz      short loc_40ac8e
cmp     eax, 5
jnz     short loc_40aca0
push    ebx
push    edi
call    sub_40a7e0
add     esp, 8
test    eax, eax
jnz     loc_40aedc
cmp     [esp+23ch+var_22c], ebx
jnz     short loc_40acb7
call    sub_40b410
cmp     eax, ebx
mov     [esp+23ch+var_22c], eax
jz      loc_40aee3
cmp     dword_41ceb8, ebx
jz      short loc_40acc6
call    sub_409310
jmp     short loc_40ace9
mov     ecx, dword_41cde0
test    byte ptr [ecx+14h], 2
jnz     short loc_40acd7
call    sub_402b40
call    sub_40b260
test    eax, eax
jz      loc_40aee3
call    sub_404f40
cmp     dword_41ceb0, ebx
jnz     short loc_40ad32
cmp     dword_41cebc, ebx
jnz     short loc_40ad32
mov     eax, dword_41cc5c
cmp     eax, ebx
jz      short loc_40ad32
push    eax
call    sub_4083e0
mov     edx, lpexistingfilename
add     esp, 4
lea     eax, [esp+23ch+cmdline]
push    edx
push    offset arundll32deskcp
push    eax
call    ds:wsprintfa
add     esp, 0ch
lea     ecx, [esp+23ch+cmdline]
push    1
push    ecx
call    ds:winexec
mov     eax, dword_41ce8c
cmp     eax, ebx
jz      short loc_40ad43
push    ebx
push    eax
call    ds:showwindow
cmp     dword_41ceb4, ebx
jz      loc_40add6
cmp     dword_41cebc, ebx
jnz     short loc_40add6
cmp     dword_41ceb0, ebx
jnz     short loc_40ad7b
cmp     dword_41ce1c, ebx
jnz     short loc_40ad7b
call    sub_403750
test    eax, eax
jz      short loc_40ad7b
push    1
push    edi
call    sub_40a7e0
add     esp, 8
cmp     dword_41ceb8, ebx
jnz     short loc_40add6
mov     edx, hwndparent
mov     eax, hinstance
push    ebx
push    offset sub_409ab0
push    edx
push    83h
push    eax
call    ds:dialogboxparama
cmp     eax, 1
jnz     short loc_40add6
cmp     dword_41ceb0, ebx
jnz     short loc_40add6
cmp     dword_41ce50, ebx
jz      loc_40af22
lea     ecx, [esp+23ch+tokenhandle]
push    ecx
push    28h
call    ds:getcurrentprocess
push    eax
call    ds:openprocesstoken
test    eax, eax
jnz     loc_40aeed
mov     eax, dword_41ce8c
cmp     eax, ebx
jz      short loc_40ae30
push    eax
call    ds:destroywindow
mov     esi, ds:getmessagea
push    ebx
push    ebx
lea     edx, [esp+244h+msg]
push    ebx
push    edx
call    esi
test    eax, eax
jz      short loc_40ae24
mov     edi, ds:translatemessage
push    ebp
mov     ebp, ds:dispatchmessagea
lea     eax, [esp+240h+msg]
push    eax
call    edi
lea     ecx, [esp+240h+msg]
push    ecx
call    ebp
push    ebx
push    ebx
lea     edx, [esp+248h+msg]
push    ebx
push    edx
call    esi
test    eax, eax
jnz     short loc_40ae07
pop     ebp
mov     dword_41ce8c, ebx
mov     hwndparent, ebx
cmp     dword_41ceb0, ebx
jnz     loc_40af2b
cmp     dword_41ceb4, ebx
jnz     loc_40af2b
cmp     dword_41ce1c, ebx
jnz     loc_40af2b
cmp     dword_41cebc, ebx
jnz     loc_40af2b
push    1
push    ebx
push    3000000h
call    sub_4037c0
mov     eax, ucheck
add     esp, 0ch
cmp     eax, ebx
jz      loc_40af2b
push    1
push    1
push    4000000h
call    sub_4037c0
add     esp, 0ch
jmp     loc_40af2b
dec     eax
push    eax
call    sub_40a0d0
push    ebx
push    ebx
push    1000000h
call    sub_4037c0
push    ebx
push    ebx
push    2000000h
call    sub_4037c0
push    ebx
push    ebx
push    3000000h
call    sub_4037c0
mov     eax, ucheck
add     esp, 28h
cmp     eax, ebx
jz      short loc_40af2b
push    ebx
push    1
push    4000000h
call    sub_4037c0
add     esp, 0ch
jmp     short loc_40af2b
call    sub_40b170
jmp     short loc_40af2b
mov     [esp+23ch+var_230], 0ffffffffh
jmp     short loc_40af2b
lea     eax, [esp+23ch+msg.message]
push    eax
push    offset name
push    ebx
call    ds:lookupprivilegevaluea
push    ebx
push    ebx
mov     edx, [esp+244h+tokenhandle]
lea     ecx, [esp+244h+msg]
push    ebx
push    ecx
push    ebx
push    edx
mov     [esp+254h+msg.hwnd], 1
mov     [esp+254h+msg.lparam], 2
call    ds:adjusttokenprivileges
push    ebx
push    2
call    ds:exitwindowsex
mov     eax, [esp+23ch+var_22c]
pop     edi
cmp     eax, ebx
pop     esi
jz      short loc_40af3a
call    sub_40a300
call    sub_40b170
cmp     [esp+234h+var_230], ebx
jnz     short loc_40af4e
mov     eax, dword_41cebc
mov     [esp+234h+var_230], eax
cmp     dword_41ceb4, ebx
jz      short loc_40af5e
mov     [esp+234h+var_230], 0fffffffeh
mov     eax, [esp+234h+var_230]
pop     ebx
add     esp, 230h
retn    10h
sub     esp, 94h
push    esi
push    edi
push    0
push    offset ainstitclass
call    ds:findwindowa
mov     esi, eax
test    esi, esi
jz      short loc_40afc5
push    ebx
push    esi
call    ds:getlastactivepopup
mov     ebx, ds:bringwindowtotop
push    esi
mov     edi, eax
call    ebx
push    esi
call    ds:isiconic
test    eax, eax
jz      short loc_40afb2
push    9
push    esi
call    ds:showwindow
cmp     esi, edi
jz      short loc_40afb9
push    edi
call    ebx
pop     ebx
pop     edi
xor     eax, eax
pop     esi
add     esp, 94h
retn
mov     eax, [esp+9ch+arg_0]
mov     dword_41cea4, 0ffffffffh
mov     hinstance, eax
call    ds:getversion
xor     ecx, ecx
lea     edi, [esp+9ch+versioninformation]
mov     cl, ah
lea     edx, [esp+9ch+versioninformation]
mov     ch, al
xor     eax, eax
mov     word_41ce58, cx
mov     ecx, 25h
mov     esi, 2000h
push    edx
rep stosd
mov     [esp+0a0h+versioninformation.dwosversioninfosize], 94h
mov     dword_41ce54, esi
call    ds:getversionexa
test    eax, eax
mov     edi, 1
jz      loc_40b0a9
mov     eax, [esp+9ch+versioninformation.dwplatformid]
dec     eax
jz      short loc_40b075
dec     eax
jnz     short loc_40b0a9
mov     eax, [esp+9ch+versioninformation.dwmajorversion]
xor     ecx, ecx
cmp     eax, 4
mov     dword_41ce50, edi
setz    cl
cmp     eax, 5
mov     dword_41ce54, 10000h
mov     dword_41ce4c, ecx
jb      short loc_40b0a9
mov     eax, [esp+9ch+versioninformation.dwminorversion]
mov     dword_41ce54, 40000h
test    eax, eax
jnz     short loc_40b0a9
mov     dword_41ce54, 20000h
jmp     short loc_40b0a9
mov     eax, [esp+9ch+versioninformation.dwmajorversion]
mov     dword_41ce54, esi
cmp     eax, 4
jnz     short loc_40b09d
mov     eax, [esp+9ch+versioninformation.dwminorversion]
cmp     eax, 5ah
jnb     short loc_40b09f
test    eax, eax
jbe     short loc_40b0a9
mov     dword_41ce54, 4000h
jmp     short loc_40b0a9
jbe     short loc_40b0a9
mov     dword_41ce54, 8000h
push    0
call    ds:oleinitialize
call    sub_402cd0
mov     esi, ds:loadlibrarya
push    offset ariched20dll
call    esi
test    eax, eax
mov     dword_41ce30, eax
jnz     short loc_40b0da
push    offset ariched32dll
call    esi
mov     dword_41ce30, eax
jmp     short loc_40b0e0
mov     dword_41ce2c, edi
push    offset lpfilename
push    104h
call    sub_402120
push    offset lpfilename
push    104h
call    sub_402120
push    offset phkresult
push    104h
call    sub_402120
push    offset lpexistingfilename
push    208h
call    sub_402120
push    offset oldfilename
push    104h
call    sub_402120
push    offset dword_41ceac
push    104h
call    sub_402120
push    offset lpdata
push    104h
call    sub_402120
mov     edx, lpfilename
mov     eax, hinstance
add     esp, 38h
push    104h
push    edx
push    eax
call    ds:getmodulefilenamea
mov     eax, edi
pop     edi
pop     esi
add     esp, 94h
retn
push    offset lpfilename
call    sub_402160
push    offset lpfilename
call    sub_402160
push    offset phkresult
call    sub_402160
push    offset lpexistingfilename
call    sub_402160
push    offset oldfilename
call    sub_402160
push    offset dword_41ceac
call    sub_402160
push    offset lpdata
call    sub_402160
mov     eax, dword_41ce30
add     esp, 1ch
test    eax, eax
jz      short loc_40b1c9
push    eax
call    ds:freelibrary
call    sub_405630
call    sub_402d10
jmp     ds:oleuninitialize
sub     esp, 28h
mov     eax, hinstance
push    320h
push    eax
mov     [esp+30h+wndclass.style], 3
mov     [esp+30h+wndclass.lpfnwndproc], offset sub_409f30
mov     [esp+30h+wndclass.cbclsextra], 0
mov     [esp+30h+wndclass.cbwndextra], 0
mov     [esp+30h+wndclass.hinstance], eax
call    ds:loadicona
push    7f00h
push    0
mov     [esp+30h+wndclass.hicon], eax
call    ds:loadcursora
push    5
mov     [esp+2ch+wndclass.hcursor], eax
call    ds:getstockobject
mov     [esp+28h+wndclass.hbrbackground], eax
lea     eax, [esp+28h+wndclass]
push    eax
mov     [esp+2ch+wndclass.lpszmenuname], 0
mov     [esp+2ch+wndclass.lpszclassname], offset ainstitclass
call    ds:registerclassa
and     eax, 0ffffh
add     esp, 28h
retn
sub     esp, 14h
mov     eax, dword_41cde0
push    ebx
push    ebp
push    esi
push    edi
xor     ebx, ebx
xor     edi, edi
mov     [esp+24h+rect.top], ebx
mov     [esp+24h+rect.left], edi
mov     ecx, [eax]
test    cl, 2
jnz     loc_40b30f
mov     ecx, [eax+0ch]
push    edi
mov     [esp+28h+rect.right], ecx
mov     edx, [eax+10h]
push    edi
lea     eax, [esp+2ch+rect]
push    0ca0000h
push    eax
mov     [esp+34h+dwstyle], 0ca0000h
mov     [esp+34h+rect.bottom], edx
call    ds:adjustwindowrectex
mov     eax, dword_41ce3c
mov     ecx, [esp+24h+rect.right]
mov     edi, [esp+24h+rect.left]
sub     eax, ecx
add     eax, edi
mov     esi, [esp+24h+rect.bottom]
cdq
sub     eax, edx
mov     edx, ebx
sar     eax, 1
mov     ebx, [esp+24h+rect.top]
sets    dl
dec     edx
and     edx, eax
mov     eax, dword_41ce38
sub     eax, esi
mov     ebp, edx
add     eax, ebx
cdq
sub     eax, edx
mov     edx, 0
sar     eax, 1
sets    dl
dec     edx
add     edi, ebp
and     eax, edx
add     ecx, ebp
add     ebx, eax
add     esi, eax
mov     eax, [esp+24h+dwstyle]
mov     [esp+24h+rect.left], edi
mov     [esp+24h+rect.right], ecx
mov     [esp+24h+rect.top], ebx
mov     [esp+24h+rect.bottom], esi
mov     ebp, 70h
jmp     short loc_40b348
test    cl, 10h
mov     eax, 2cf0000h
jnz     short loc_40b325
mov     [esp+24h+dwstyle], 82000000h
mov     eax, [esp+24h+dwstyle]
test    cl, 8
jz      short loc_40b32f
or      eax, 1000000h
mov     ecx, dword_41ce3c
mov     esi, dword_41ce38
mov     [esp+24h+rect.right], ecx
mov     [esp+24h+rect.bottom], esi
mov     ebp, 71h
mov     edx, hinstance
push    0
push    edx
push    0
sub     esi, ebx
push    0
sub     ecx, edi
push    esi
push    ecx
push    ebx
push    edi
push    eax
push    0
push    7
call    sub_4036a0
add     esp, 8
push    eax
push    offset ainstitclass
push    0
call    ds:createwindowexa
mov     ecx, eax
test    ecx, ecx
mov     dword_41ce8c, ecx
jnz     short loc_40b38c
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 14h
retn
mov     eax, dword_41ce3c
push    0
cdq
sub     eax, edx
push    offset sub_409b80
sar     eax, 1
mov     dword_41ce44, eax
mov     eax, dword_41ce38
cdq
sub     eax, edx
and     ebp, 0ffffh
sar     eax, 1
mov     dword_41ce40, eax
mov     eax, hinstance
push    ecx
push    ebp
push    eax
call    ds:createdialogparama
test    eax, eax
mov     hwndparent, eax
jnz     short loc_40b3e5
mov     ecx, dword_41ce8c
push    ecx
call    ds:destroywindow
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 14h
retn
mov     edx, dword_41ce8c
push    1
push    edx
call    ds:showwindow
mov     eax, dword_41ce8c
push    eax
call    ds:updatewindow
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
add     esp, 14h
retn
sub     esp, 38h
push    ebx
push    ebp
push    esi
push    edi
mov     edi, lpfilename
or      ecx, 0ffffffffh
xor     ebp, ebp
xor     eax, eax
mov     [esp+48h+var_30], ecx
mov     [esp+48h+var_18], ebp
mov     [esp+48h+var_34], ecx
push    ebp
repne scasb
not     ecx
sub     edi, ecx
mov     [esp+4ch+var_24], ebp
mov     eax, ecx
mov     esi, edi
mov     edi, lpfilename
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     ecx, lpfilename
push    ecx
call    sub_401040
mov     ebx, eax
add     esp, 8
cmp     ebx, 0ffffffffh
mov     [esp+48h+var_1c], ebx
jnz     short loc_40b475
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 38h
retn
push    ebx
call    sub_40a170
add     esp, 4
test    eax, eax
jnz     short loc_40b495
push    ebx
call    sub_4012c0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 38h
retn
mov     edx, ldistancetomove
push    edx
push    ebx
call    sub_401160
add     esp, 8
mov     word ptr [esp+48h+buffer], bp
mov     esi, [esp+48h+var_30]
mov     edi, 1
lea     eax, [esp+48h+buffer]
push    8
push    eax
push    ebx
call    sub_4010c0
mov     ebp, eax
add     esp, 0ch
test    ebp, ebp
mov     [esp+48h+var_38], ebp
jnz     loc_40ba73
mov     eax, [esp+48h+var_4]
test    eax, eax
jnz     short loc_40b4e2
cmp     word ptr [esp+48h+buffer], 7f7fh
jnz     short loc_40b4b3
push    ebx
call    sub_401140
mov     ecx, [esp+4ch+var_4]
add     esp, 4
add     eax, ecx
mov     [esp+48h+ldistancetomove], eax
mov     eax, [esp+48h+buffer]
and     eax, 0ffffh
cmp     eax, 7f7fh
jg      def_40b51d
jz      loc_40b9c1
add     eax, 0ffffebcbh
cmp     eax, 10h
ja      def_40b51d
jmp     ds:jpt_40b51d[eax*4]
lea     ecx, [esp+48h+var_14]
lea     edx, [esp+48h+buffer]
push    ecx
push    offset dword_41cde0
push    edx
push    ebx
call    sub_401200
add     esp, 10h
mov     [esp+48h+var_38], eax
test    eax, eax
jnz     loc_40ba73
mov     ebp, [esp+48h+var_14]
mov     edi, dword_41cde0
mov     ecx, dword_41cc60
mov     edx, ebp
shr     edx, 2
mov     eax, edi
jz      short loc_40b5a2
mov     esi, edx
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
mov     edx, ecx
shr     edx, 1fh
lea     ecx, [edx+ecx*2]
xor     edx, edx
mov     dl, [eax]
add     ecx, edx
inc     eax
dec     esi
jnz     short loc_40b563
and     ebp, 3
mov     edx, ebp
jbe     short loc_40b5bb
mov     esi, ecx
shr     esi, 1fh
lea     esi, [esi+ecx*2]
xor     ecx, ecx
mov     cl, [eax]
add     ecx, esi
inc     eax
dec     edx
jnz     short loc_40b5a9
mov     dword_41cc60, ecx
xor     eax, eax
mov     ecx, [eax+edi+7eh]
test    ecx, ecx
jz      short loc_40b5d7
add     ecx, edi
mov     [eax+edi+7eh], ecx
mov     edi, dword_41cde0
add     eax, 4
cmp     eax, 28h
jl      short loc_40b5c3
mov     eax, [edi]
test    ah, 40h
jz      loc_40ba42
mov     ecx, dword_41ce00
test    ecx, ecx
jz      short loc_40b5fe
and     ah, 0bfh
mov     [edi], eax
jmp     loc_40ba42
mov     dword_41ceb8, 1
jmp     loc_40ba42
push    0
lea     eax, [esp+4ch+buffer]
push    offset lpchtext
push    eax
push    ebx
call    sub_401200
mov     edx, lpchtext
add     esp, 10h
mov     ebp, eax
test    edx, edx
mov     [esp+48h+var_38], ebp
jz      def_40b51d
mov     edi, edx
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
dec     ecx
mov     edi, ecx
jz      def_40b51d
mov     esi, edi
mov     eax, edx
mov     edx, dword_41cc60
shr     esi, 2
jz      short loc_40b69c
mov     ecx, edx
shr     ecx, 1fh
lea     edx, [ecx+edx*2]
xor     ecx, ecx
mov     cl, [eax]
add     edx, ecx
inc     eax
mov     ecx, edx
shr     ecx, 1fh
lea     edx, [ecx+edx*2]
xor     ecx, ecx
mov     cl, [eax]
add     edx, ecx
inc     eax
mov     ecx, edx
shr     ecx, 1fh
lea     edx, [ecx+edx*2]
xor     ecx, ecx
mov     cl, [eax]
add     edx, ecx
inc     eax
mov     ecx, edx
shr     ecx, 1fh
lea     edx, [ecx+edx*2]
xor     ecx, ecx
mov     cl, [eax]
add     edx, ecx
inc     eax
dec     esi
jnz     short loc_40b659
mov     ebp, [esp+48h+var_38]
and     edi, 3
mov     ecx, edi
jbe     short loc_40b6b9
mov     esi, edx
shr     esi, 1fh
lea     esi, [esi+edx*2]
xor     edx, edx
mov     dl, [eax]
add     edx, esi
inc     eax
dec     ecx
jnz     short loc_40b6a3
mov     ebp, [esp+48h+var_38]
mov     dword_41cc60, edx
jmp     def_40b51d
push    0
lea     edx, [esp+4ch+buffer]
push    offset dword_41cdd0
push    edx
push    ebx
call    sub_401200
mov     ebp, eax
add     esp, 10h
mov     [esp+48h+var_38], ebp
jmp     def_40b51d
mov     eax, dword_41ce20
test    eax, eax
jnz     def_40b51d
push    0
push    offset dword_41cddc
lea     eax, [esp+50h+buffer]
push    eax
push    ebx
call    sub_401200
mov     ebp, eax
add     esp, 10h
mov     [esp+48h+var_38], ebp
jmp     def_40b51d
mov     eax, dword_41ce20
test    eax, eax
jnz     def_40b51d
lea     ecx, [esp+48h+lpmem]
push    0
lea     edx, [esp+4ch+buffer]
push    ecx
push    edx
push    ebx
mov     [esp+58h+lpmem], 0
call    sub_401200
add     esp, 10h
mov     [esp+48h+var_38], eax
test    eax, eax
jnz     loc_40ba73
mov     eax, [esp+48h+lpmem]
mov     esi, ds:getsystemmetrics
push    0
mov     ebx, [eax]
lea     edi, [eax+4]
mov     [esp+4ch+var_10], ebx
call    esi
push    1
mov     ebp, eax
call    esi
xor     esi, esi
test    ebx, ebx
jle     short loc_40b7cd
mov     ecx, [edi]
mov     edx, [edi+4]
add     edi, 4
add     edi, 4
cmp     ecx, ebp
jnz     short loc_40b77d
cmp     edx, eax
jz      short loc_40b7c9
cmp     [esp+48h+var_34], 0ffffffffh
jz      short loc_40b7b2
cmp     ecx, ebp
jge     short loc_40b79a
cmp     edx, eax
jge     short loc_40b79a
cmp     ecx, [esp+48h+var_2c]
jle     short loc_40b7be
cmp     edx, [esp+48h+var_28]
jle     short loc_40b7be
jmp     short loc_40b7b2
cmp     ecx, [esp+48h+var_2c]
jge     short loc_40b7a6
cmp     edx, [esp+48h+var_28]
jl      short loc_40b7b2
cmp     [esp+48h+var_2c], ebp
jge     short loc_40b7be
cmp     [esp+48h+var_28], eax
jge     short loc_40b7be
mov     [esp+48h+var_34], esi
mov     [esp+48h+var_2c], ecx
mov     [esp+48h+var_28], edx
mov     ecx, [esp+48h+var_10]
inc     esi
cmp     esi, ecx
jl      short loc_40b76a
jmp     short loc_40b7cd
mov     [esp+48h+var_34], esi
mov     eax, [esp+48h+lpmem]
push    eax
call    sub_4122c3
mov     ebx, [esp+4ch+var_1c]
add     esp, 4
jmp     loc_40ba42
mov     eax, dword_41ce20
test    eax, eax
jnz     def_40b51d
mov     eax, [esp+48h+var_34]
test    eax, eax
jz      short loc_40b802
dec     eax
mov     [esp+48h+var_34], eax
jmp     def_40b51d
push    0
lea     ecx, [esp+4ch+buffer]
push    offset dword_41cdd8
push    ecx
push    ebx
call    sub_401200
mov     ebp, eax
add     esp, 10h
mov     [esp+48h+var_38], ebp
mov     [esp+48h+var_34], 0ffffffffh
jmp     def_40b51d
mov     eax, [esp+48h+var_30]
push    0
inc     eax
lea     edx, [esp+4ch+buffer]
mov     [esp+4ch+var_30], eax
lea     esi, ds:41cd3ch[eax*4]
push    esi
push    edx
push    ebx
call    sub_401200
add     esp, 10h
mov     [esp+48h+var_38], eax
test    eax, eax
jnz     loc_40ba73
mov     ebp, [esi]
mov     eax, [ebp+6]
test    eax, eax
jz      short loc_40b865
add     eax, ebp
mov     [ebp+6], eax
mov     eax, [ebp+0eh]
test    eax, eax
jz      short loc_40b871
add     eax, ebp
mov     [ebp+0eh], eax
mov     eax, [ebp+1eh]
test    eax, eax
jz      short loc_40b87d
add     eax, ebp
mov     [ebp+1eh], eax
mov     eax, [ebp+16h]
test    eax, eax
jz      short loc_40b889
add     eax, ebp
mov     [ebp+16h], eax
mov     eax, [ebp+1ah]
test    eax, eax
jz      short loc_40b895
add     eax, ebp
mov     [ebp+1ah], eax
mov     eax, [ebp+26h]
test    eax, eax
jz      short loc_40b8a1
add     eax, ebp
mov     [ebp+26h], eax
mov     eax, [ebp+2ah]
test    eax, eax
jz      short loc_40b8ad
add     eax, ebp
mov     [ebp+2ah], eax
mov     eax, [ebp+2eh]
test    eax, eax
jz      short loc_40b8b9
add     eax, ebp
mov     [ebp+2eh], eax
mov     eax, [esp+48h+var_30]
lea     ebx, ds:41ccfch[eax*4]
push    ebx
push    104h
call    sub_4020e0
add     esp, 8
test    eax, eax
jz      loc_40ba67
push    ebp
call    sub_40bb40
mov     edi, phkresult
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 4
repne scasb
not     ecx
sub     edi, ecx
lea     eax, [ebp+3eh]
mov     edx, ecx
mov     esi, edi
mov     edi, [ebx]
shr     ecx, 2
rep movsd
mov     ecx, edx
mov     edx, 0ah
and     ecx, 3
rep movsb
mov     ecx, [eax]
test    ecx, ecx
jz      short loc_40b918
add     ecx, ebp
mov     [eax], ecx
add     eax, 4
dec     edx
jnz     short loc_40b90e
mov     ebx, [esp+48h+var_1c]
jmp     loc_40ba42
lea     eax, ds:41cd7ch[esi*4]
push    0
lea     ecx, [esp+4ch+buffer]
push    eax
push    ecx
push    ebx
call    sub_401200
mov     ebp, eax
add     esp, 10h
mov     [esp+48h+var_38], ebp
jmp     def_40b51d
lea     edx, ds:41cc7ch[esi*4]
lea     eax, ds:41ccbch[esi*4]
push    edx
lea     ecx, [esp+4ch+buffer]
push    eax
push    ecx
push    ebx
call    sub_401200
mov     ebp, eax
add     esp, 10h
mov     [esp+48h+var_38], ebp
jmp     def_40b51d
push    2
push    offset dword_418030
push    ebx
mov     dword_41ceb0, edi
call    sub_4010c0
mov     ebp, eax
add     esp, 0ch
test    ebp, ebp
mov     [esp+48h+var_38], ebp
jnz     loc_40ba3a
lea     edx, [esp+48h+var_18]
push    2
push    edx
push    ebx
call    sub_4010c0
mov     ebp, eax
add     esp, 0ch
mov     [esp+48h+var_38], ebp
jmp     loc_40ba3a
push    offset dword_41cdc4
push    offset dword_41cdc8
jmp     loc_40b6f8
push    ebx
call    sub_401140
mov     dword_41cc6c, eax
push    4
add     eax, 4
push    offset dword_41cc64
push    ebx
mov     size, eax
call    sub_4010c0
mov     ecx, dword_41cc64
mov     ebp, eax
mov     eax, dword_41ce20
add     esp, 10h
test    eax, eax
mov     [esp+48h+var_38], ebp
mov     nnumberofbytestoread, ecx
mov     dword_41cc68, 0
push    ebx
jz      short loc_40ba1e
call    sub_4011c0
mov     ecx, size
add     esp, 4
cmp     ecx, eax
jnz     short def_40b51d
jmp     short loc_40ba3a
call    sub_4011c0
mov     edx, dword_41cc6c
mov     ecx, dword_41cc64
add     esp, 4
lea     edx, [ecx+edx+4]
cmp     edx, eax
ja      short def_40b51d
mov     [esp+48h+var_24], edi
test    ebp, ebp
jnz     short loc_40ba73
cmp     word ptr [esp+48h+buffer], 7f7fh
jz      short loc_40ba73
mov     eax, [esp+48h+ldistancetomove]
push    eax
push    ebx
call    sub_401160
add     esp, 8
cmp     word ptr [esp+48h+buffer], 7f7fh
jz      short loc_40ba73
jmp     loc_40b4aa
mov     ebx, [esp+48h+var_1c]
mov     [esp+48h+var_38], 0ch
push    ebx
call    sub_4012c0
mov     eax, [esp+4ch+var_38]
add     esp, 4
test    eax, eax
jz      short loc_40ba8e
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 38h
retn
mov     edx, [esp+48h+var_18]
mov     ecx, [esp+48h+var_30]
and     edx, 0ffffh
inc     ecx
push    edx
mov     dword_41cea0, ecx
call    sub_40a0d0
mov     eax, [esp+4ch+var_24]
add     esp, 4
test    eax, eax
jnz     short loc_40bae8
push    1fh
push    7
call    sub_4036a0
add     esp, 8
test    eax, eax
jz      short loc_40bade
cmp     byte ptr [eax], 0
jz      short loc_40bade
mov     ecx, dword_41ceb8
test    ecx, ecx
jnz     short loc_40bade
push    40h
push    eax
call    sub_403660
add     esp, 8
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 38h
retn
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
add     esp, 38h
retn
mov     eax, oldfilename
sub     esp, 8
push    ebx
mov     ebx, [esp+0ch+phkresult]
mov     byte ptr [eax], 0
push    ebp
mov     eax, [ebx+1eh]
xor     ebp, ebp
push    esi
push    edi
test    eax, eax
jz      short loc_40bb99
push    offset aparent
push    eax
call    __strcmpi
add     esp, 8
test    eax, eax
jz      short loc_40bb94
mov     edi, [ebx+1eh]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, phkresult
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
jmp     short loc_40bb99
mov     ebp, 1
mov     eax, [ebx+16h]
test    eax, eax
jz      short loc_40bc04
mov     ecx, [ebx+12h]
cmp     ecx, 10h
jb      short loc_40bbb0
mov     ecx, hkey
jmp     short loc_40bbb7
mov     ecx, dword_418044[ecx*4]
lea     edx, [esp+18h+phkresult]
push    edx
push    20019h
push    0
push    eax
push    ecx
call    ds:regopenkeyexa
test    eax, eax
jnz     short loc_40bc04
mov     ecx, oldfilename
lea     eax, [esp+18h+cbdata]
push    eax
mov     eax, [ebx+1ah]
lea     edx, [esp+1ch+type]
push    ecx
mov     ecx, [esp+20h+phkresult]
push    edx
push    0
push    eax
push    ecx
mov     [esp+30h+cbdata], 104h
call    ds:regqueryvalueexa
mov     edx, [esp+18h+phkresult]
push    edx
call    ds:regclosekey
mov     edx, oldfilename
cmp     byte ptr [edx], 0
jnz     short loc_40bc86
mov     eax, [ebx+26h]
test    eax, eax
jz      short loc_40bc7d
mov     eax, [ebx+2ah]
test    eax, eax
jz      short loc_40bc7d
mov     eax, [ebx+2eh]
test    eax, eax
jz      short loc_40bc7d
mov     edi, phkresult
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, edx
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
mov     ecx, [ebx+26h]
mov     edx, phkresult
mov     eax, oldfilename
push    ecx
mov     ecx, [ebx+2eh]
push    104h
push    edx
mov     edx, [ebx+2ah]
push    eax
push    ecx
push    edx
call    ds:getprivateprofilestringa
test    eax, eax
jnz     short loc_40bc77
mov     eax, oldfilename
mov     byte ptr [eax], 0
mov     edx, oldfilename
cmp     byte ptr [edx], 0
jz      loc_40bd49
push    edx
call    __chdir
add     esp, 4
test    eax, eax
jz      short loc_40bcef
mov     ecx, oldfilename
push    5ch
push    ecx
call    _strrchr
mov     esi, eax
add     esp, 8
test    esi, esi
jz      short loc_40bce7
lea     edx, [esi+1]
push    2eh
push    edx
call    _strchr
add     esp, 8
test    eax, eax
jz      short loc_40bcdc
mov     byte ptr [esi], 0
mov     eax, oldfilename
push    eax
call    __chdir
add     esp, 4
test    eax, eax
jz      short loc_40bcef
mov     ecx, oldfilename
mov     byte ptr [ecx], 0
jmp     short loc_40bcef
mov     edx, oldfilename
mov     byte ptr [edx], 0
jmp     short loc_40bcef
mov     eax, oldfilename
mov     byte ptr [eax], 0
mov     eax, oldfilename
cmp     byte ptr [eax], 0
jz      short loc_40bd49
test    ebp, ebp
jz      short loc_40bd0f
push    5ch
push    eax
call    _strrchr
add     esp, 8
test    eax, eax
jz      short loc_40bd0f
mov     byte ptr [eax], 0
mov     edi, oldfilename
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, phkresult
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
mov     eax, phkresult
cmp     byte ptr [eax], 0
jz      short loc_40bd4e
push    eax
call    sub_40bd70
add     esp, 4
mov     eax, phkresult
push    104h
push    eax
push    eax
call    sub_407890
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 8
retn
sub     esp, 248h
lea     eax, [esp+248h+filename]
push    ebx
push    ebp
push    esi
mov     esi, [esp+254h+fullpath]
push    edi
push    0
push    0
push    0
push    eax
push    esi
call    __splitpath
lea     edi, [esp+26ch+filename]
or      ecx, 0ffffffffh
xor     eax, eax
add     esp, 14h
repne scasb
not     ecx
dec     ecx
mov     ebx, ecx
add     ebx, esi
cmp     byte ptr [ebx], 5ch
jnz     short loc_40bdb4
mov     al, [ebx+1]
inc     ebx
cmp     al, 5ch
jz      short loc_40bdac
push    5ch
push    ebx
call    _strchr
mov     ebp, eax
add     esp, 8
test    ebp, ebp
jz      loc_40be83
mov     edi, offset asc_41829c
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [esp+258h+filename]
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     edi, edx
mov     edx, ecx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, edx
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
lea     edi, [esp+258h+filename]
or      ecx, 0ffffffffh
repne scasb
not     ecx
mov     eax, ebp
dec     ecx
sub     eax, ebx
lea     esi, [esp+ecx+258h+filename]
push    eax
push    ebx
push    esi
mov     [esp+264h+var_248], esi
call    _strncpy
add     esp, 0ch
lea     ecx, [esp+258h+findfiledata]
sub     esi, ebx
lea     edx, [esp+258h+filename]
push    ecx
push    edx
mov     byte ptr [esi+ebp], 0
call    ds:findfirstfilea
mov     edx, eax
cmp     edx, 0ffffffffh
jz      loc_40bf56
lea     edi, [esp+258h+findfiledata.cfilename]
or      ecx, 0ffffffffh
xor     eax, eax
push    edx
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, [esp+25ch+var_248]
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
call    ds:findclose
lea     ebx, [ebp+1]
push    5ch
push    ebx
call    _strchr
mov     ebp, eax
add     esp, 8
test    ebp, ebp
jnz     loc_40bdc9
mov     edi, offset asc_41829c
or      ecx, 0ffffffffh
xor     eax, eax
lea     edx, [esp+258h+filename]
repne scasb
not     ecx
sub     edi, ecx
mov     esi, edi
mov     ebp, ecx
mov     edi, edx
or      ecx, 0ffffffffh
repne scasb
mov     ecx, ebp
dec     edi
shr     ecx, 2
rep movsd
mov     ecx, ebp
and     ecx, 3
rep movsb
lea     edi, [esp+258h+filename]
or      ecx, 0ffffffffh
repne scasb
not     ecx
dec     ecx
mov     edi, ebx
lea     ebp, [esp+ecx+258h+filename]
or      ecx, 0ffffffffh
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, ebp
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
lea     ecx, [esp+258h+filename]
push    ecx
call    sub_4020b0
add     esp, 4
lea     edx, [esp+258h+findfiledata]
lea     eax, [esp+258h+filename]
push    edx
push    eax
call    ds:findfirstfilea
mov     edx, eax
cmp     edx, 0ffffffffh
jz      short loc_40bf56
lea     edi, [esp+258h+findfiledata.cfilename]
or      ecx, 0ffffffffh
xor     eax, eax
push    edx
repne scasb
not     ecx
sub     edi, ecx
mov     eax, ecx
mov     esi, edi
mov     edi, ebp
shr     ecx, 2
rep movsd
mov     ecx, eax
and     ecx, 3
rep movsb
call    ds:findclose
lea     edi, [esp+258h+filename]
or      ecx, 0ffffffffh
xor     eax, eax
repne scasb
not     ecx
sub     edi, ecx
mov     edx, ecx
mov     esi, edi
mov     edi, [esp+258h+fullpath]
shr     ecx, 2
rep movsd
mov     ecx, edx
and     ecx, 3
rep movsb
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 248h
retn
push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
cmp     dword_41cec4, 0
jz      short loc_40bfa9
jmp     short loc_40bfa9
pop     edi
pop     esi
pop     ebx
pop     ebp
retn
mov     eax, 1
retn
mov     eax, [esp+arg_4]
imul    eax, [esp+arg_8]
push    eax
call    _malloc
add     esp, 4
retn
mov     eax, [esp+lpmem]
test    eax, eax
jz      short locret_40c00f
push    eax
call    sub_4122c3
pop     ecx
retn
push    ebx
push    ebp
push    esi
push    edi
call    sub_40bfd0
test    eax, eax
jnz     short loc_40c029
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffffff7h
pop     ebx
retn    0ch
mov     esi, [esp+10h+arg_0]
xor     edi, edi
cmp     esi, edi
jz      loc_40c0de
mov     ebx, [esp+10h+arg_8]
cmp     ebx, edi
jz      short loc_40c048
cmp     ebx, 1
jnz     loc_40c0de
mov     ebp, [esp+10h+arg_4]
cmp     ebp, edi
jl      loc_40c0de
cmp     ebp, 4
jg      loc_40c0de
cmp     [esi+24h], edi
jnz     short loc_40c069
mov     dword ptr [esi+24h], offset sub_40bfe0
cmp     [esi+28h], edi
jnz     short loc_40c075
mov     dword ptr [esi+28h], offset sub_40c000
mov     eax, [esi+2ch]
push    1
push    0fa74h
push    eax
call    dword ptr [esi+24h]
add     esp, 0ch
cmp     eax, edi
jnz     short loc_40c096
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffffffdh
pop     ebx
retn    0ch
mov     [eax], esi
mov     [esi+20h], eax
mov     dword ptr [eax+4], 0ah
mov     [eax+20h], edi
mov     [eax+1ch], edi
mov     [eax+0c64h], edi
mov     [esi+8], edi
mov     [esi+0ch], edi
mov     [esi+18h], edi
mov     [esi+1ch], edi
mov     [eax+0c54h], edi
mov     [eax+0c50h], edi
mov     [eax+0c4ch], edi
mov     [eax+2ch], edi
pop     edi
mov     [eax+30h], ebp
pop     esi
mov     [eax+28h], bl
pop     ebp
xor     eax, eax
pop     ebx
retn    0ch
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffffffeh
pop     ebx
retn    0ch
push    esi
mov     esi, [esp+4+arg_4]
push    edi
mov     edi, [esp+8+arg_0]
xor     eax, eax
mov     edx, 100h
lea     ecx, [edx+eax]
sar     ecx, 1
cmp     edi, [esi+ecx*4]
jl      short loc_40c10f
mov     eax, ecx
jmp     short loc_40c111
mov     edx, ecx
mov     ecx, edx
sub     ecx, eax
cmp     ecx, 1
jnz     short loc_40c101
pop     edi
pop     esi
retn
mov     eax, [esp+arg_0]
push    esi
test    eax, eax
jnz     short loc_40c132
mov     eax, 0fffffffeh
pop     esi
retn    4
mov     esi, [eax+20h]
test    esi, esi
jnz     short loc_40c142
mov     eax, 0fffffffeh
pop     esi
retn    4
cmp     [esi], eax
jz      short loc_40c14f
mov     eax, 0fffffffeh
pop     esi
retn    4
mov     eax, [esi+4]
cmp     eax, 1
jz      loc_40c1e4
cmp     eax, 2
jnz     short loc_40c1c5
mov     al, [esi+28h]
push    esi
test    al, al
jz      short loc_40c16f
call    sub_40c730
jmp     short loc_40c174
call    sub_40c220
mov     eax, [esi+0fa40h]
mov     ecx, [esi+440h]
add     esp, 4
inc     eax
cmp     ecx, eax
jnz     short loc_40c1f4
mov     eax, [esi+0ch]
test    eax, eax
jnz     short loc_40c1f4
mov     ecx, [esi+0c60h]
mov     eax, [esi+0c58h]
not     ecx
cmp     ecx, eax
mov     [esi+0c60h], ecx
jnz     short loc_40c1eb
mov     eax, [esi+0c64h]
mov     dword ptr [esi+4], 0eh
mov     edx, eax
add     eax, eax
shr     edx, 1fh
or      edx, eax
xor     edx, ecx
mov     [esi+0c64h], edx
cmp     dword ptr [esi+4], 0ah
jl      short loc_40c14f
push    esi
call    sub_40ce90
add     esp, 4
cmp     eax, 4
jz      short loc_40c1fa
cmp     dword ptr [esi+4], 2
jnz     short loc_40c211
jmp     loc_40c14f
or      eax, 0ffffffffh
pop     esi
retn    4
mov     eax, 0fffffffch
pop     esi
retn    4
xor     eax, eax
pop     esi
retn    4
mov     eax, [esi+0c64h]
mov     ecx, [esi+0c5ch]
sub     eax, ecx
neg     eax
sbb     eax, eax
and     al, 0f8h
add     eax, 4
pop     esi
retn    4
mov     eax, [esp+arg_0]
sub     esp, 1ch
mov     cl, [eax+10h]
push    ebx
push    ebp
push    esi
test    cl, cl
push    edi
jz      loc_40c4f7
mov     ecx, [eax]
mov     edx, [ecx+14h]
test    edx, edx
jz      loc_40c608
mov     edx, [eax+0ch]
test    edx, edx
jz      short loc_40c2a6
mov     ecx, [ecx+10h]
mov     dl, [eax+8]
xor     ebx, ebx
mov     [ecx], dl
mov     ecx, [eax+0c60h]
mov     bl, [eax+8]
mov     edx, ecx
mov     ebp, [eax+0ch]
shr     edx, 18h
xor     edx, ebx
shl     ecx, 8
mov     edx, dword_4185f8[edx*4]
xor     edx, ecx
mov     ecx, [eax]
dec     ebp
mov     [eax+0c60h], edx
mov     [eax+0ch], ebp
mov     ebx, [ecx+10h]
inc     ebx
mov     [ecx+10h], ebx
mov     ecx, [eax]
mov     edi, [ecx+14h]
dec     edi
mov     [ecx+14h], edi
mov     ecx, [eax]
mov     esi, [ecx+18h]
inc     esi
mov     [ecx+18h], esi
mov     ecx, [eax]
mov     edx, [ecx+18h]
test    edx, edx
jnz     short loc_40c236
inc     dword ptr [ecx+1ch]
jmp     short loc_40c236
mov     ecx, [eax+0fa40h]
mov     esi, [eax+440h]
lea     ebx, [ecx+1]
cmp     esi, ebx
jz      loc_40c608
mov     cl, [eax+3ch]
mov     ebp, [eax+0c4ch]
mov     edx, [eax+38h]
mov     dword ptr [eax+0ch], 1
mov     [eax+8], cl
mov     ecx, [ebp+edx*4+0]
mov     [eax+38h], ecx
mov     dl, cl
shr     ecx, 8
mov     [eax+38h], ecx
mov     ecx, [eax+14h]
test    ecx, ecx
jnz     short loc_40c309
mov     ecx, [eax+18h]
mov     edi, dword_4189f8[ecx*4]
inc     ecx
cmp     ecx, 200h
mov     [eax+14h], edi
mov     [eax+18h], ecx
jnz     short loc_40c309
mov     dword ptr [eax+18h], 0
mov     edi, [eax+14h]
dec     edi
cmp     edi, 1
mov     [eax+14h], edi
setz    cl
xor     dl, cl
inc     esi
cmp     esi, ebx
mov     byte ptr [esp+2ch+arg_0], dl
mov     [eax+440h], esi
jz      loc_40c236
mov     ecx, [esp+2ch+arg_0]
mov     edx, [eax+3ch]
and     ecx, 0ffh
cmp     ecx, edx
jz      short loc_40c344
mov     [eax+3ch], ecx
jmp     loc_40c236
mov     edx, [eax+38h]
mov     dword ptr [eax+0ch], 2
mov     ecx, [ebp+edx*4+0]
mov     [eax+38h], ecx
mov     dl, cl
shr     ecx, 8
test    edi, edi
mov     [eax+38h], ecx
jnz     short loc_40c381
mov     ecx, [eax+18h]
mov     edi, dword_4189f8[ecx*4]
inc     ecx
cmp     ecx, 200h
mov     [eax+14h], edi
mov     [eax+18h], ecx
jnz     short loc_40c381
mov     dword ptr [eax+18h], 0
mov     edi, [eax+14h]
dec     edi
cmp     edi, 1
mov     [eax+14h], edi
setz    cl
xor     dl, cl
inc     esi
cmp     esi, ebx
mov     byte ptr [esp+2ch+arg_0], dl
mov     [eax+440h], esi
jz      loc_40c236
mov     ecx, [esp+2ch+arg_0]
mov     edx, [eax+3ch]
and     ecx, 0ffh
cmp     ecx, edx
jz      short loc_40c3bc
mov     [eax+3ch], ecx
jmp     loc_40c236
mov     edx, [eax+38h]
mov     dword ptr [eax+0ch], 3
mov     ecx, [ebp+edx*4+0]
mov     [eax+38h], ecx
mov     dl, cl
shr     ecx, 8
test    edi, edi
mov     [eax+38h], ecx
jnz     short loc_40c3f9
mov     ecx, [eax+18h]
mov     edi, dword_4189f8[ecx*4]
inc     ecx
cmp     ecx, 200h
mov     [eax+14h], edi
mov     [eax+18h], ecx
jnz     short loc_40c3f9
mov     dword ptr [eax+18h], 0
mov     edi, [eax+14h]
dec     edi
cmp     edi, 1
mov     [eax+14h], edi
setz    cl
xor     dl, cl
inc     esi
cmp     esi, ebx
mov     byte ptr [esp+2ch+arg_0], dl
mov     [eax+440h], esi
jz      loc_40c236
mov     ecx, [esp+2ch+arg_0]
mov     edx, [eax+3ch]
and     ecx, 0ffh
cmp     ecx, edx
jz      short loc_40c434
mov     [eax+3ch], ecx
jmp     loc_40c236
mov     edx, [eax+38h]
mov     ecx, [ebp+edx*4+0]
mov     dl, cl
mov     [eax+38h], ecx
mov     byte ptr [esp+2ch+arg_0], dl
xor     edx, edx
shr     ecx, 8
cmp     edi, edx
mov     [eax+38h], ecx
jnz     short loc_40c46c
mov     ecx, [eax+18h]
mov     edi, dword_4189f8[ecx*4]
inc     ecx
cmp     ecx, 200h
mov     [eax+14h], edi
mov     [eax+18h], ecx
jnz     short loc_40c46c
mov     [eax+18h], edx
mov     ecx, [eax+14h]
mov     edi, [esp+2ch+arg_0]
dec     ecx
inc     esi
cmp     ecx, 1
mov     [eax+14h], ecx
setz    bl
and     ebx, 0ffh
and     edi, 0ffh
xor     ebx, edi
mov     edi, [eax+38h]
add     ebx, 4
mov     [eax+440h], esi
mov     [eax+0ch], ebx
mov     edi, [ebp+edi*4+0]
xor     ebx, ebx
mov     [eax+38h], edi
mov     bl, [eax+38h]
mov     [eax+3ch], ebx
mov     ebx, edi
shr     ebx, 8
cmp     ecx, edx
mov     [eax+38h], ebx
jnz     short loc_40c4d2
mov     ecx, [eax+18h]
mov     edi, dword_4189f8[ecx*4]
inc     ecx
cmp     ecx, 200h
mov     [eax+14h], edi
mov     [eax+18h], ecx
jnz     short loc_40c4d2
mov     [eax+18h], edx
mov     ebx, [eax+14h]
xor     edx, edx
dec     ebx
mov     ecx, ebx
mov     [eax+14h], ebx
cmp     ecx, 1
mov     ecx, [eax+3ch]
setz    dl
xor     ecx, edx
inc     esi
mov     [eax+3ch], ecx
mov     [eax+440h], esi
jmp     loc_40c236
mov     ebx, [eax]
mov     cl, [eax+8]
mov     edx, [eax+440h]
mov     edi, [eax+0c60h]
mov     ebp, [ebx+10h]
mov     ebx, [ebx+14h]
mov     esi, [eax+0ch]
mov     [esp+2ch+var_1c], ebx
mov     [esp+2ch+var_4], ebx
mov     ebx, [eax+0fa40h]
mov     byte ptr [esp+2ch+var_10], cl
mov     ecx, [eax+0c4ch]
mov     [esp+2ch+var_18], edx
mov     edx, [eax+3ch]
inc     ebx
mov     [esp+2ch+var_c], ecx
mov     ecx, [eax+38h]
mov     [esp+2ch+var_14], ebp
mov     ebp, [esp+2ch+var_18]
mov     [esp+2ch+var_8], ebx
test    esi, esi
jle     short loc_40c59a
mov     ebx, [esp+2ch+var_1c]
test    ebx, ebx
jz      short loc_40c5a2
cmp     esi, 1
jz      loc_40c63f
mov     ebp, [esp+2ch+var_14]
mov     bl, byte ptr [esp+2ch+var_10]
mov     [ebp+0], bl
mov     ebp, [esp+2ch+var_10]
mov     ebx, edi
and     ebp, 0ffh
shr     ebx, 18h
xor     ebx, ebp
mov     ebp, [esp+2ch+var_14]
shl     edi, 8
mov     ebx, dword_4185f8[ebx*4]
xor     edi, ebx
mov     ebx, [esp+2ch+var_1c]
dec     esi
inc     ebp
dec     ebx
mov     [esp+2ch+var_14], ebp
mov     ebp, [esp+2ch+var_18]
mov     [esp+2ch+var_1c], ebx
jmp     short loc_40c548
cmp     ebp, [esp+2ch+var_8]
jnz     short loc_40c610
xor     esi, esi
mov     ebx, [eax]
mov     ebx, [ebx+18h]
mov     [esp+2ch+arg_0], ebx
mov     ebp, ebx
mov     ebx, [esp+2ch+var_1c]
sub     ebp, ebx
mov     ebx, [esp+2ch+var_4]
add     ebp, ebx
mov     ebx, [eax]
mov     [ebx+18h], ebp
mov     ebx, [eax]
mov     ebp, [esp+2ch+arg_0]
cmp     [ebx+18h], ebp
jnb     short loc_40c5cc
inc     dword ptr [ebx+1ch]
mov     bl, byte ptr [esp+2ch+var_10]
mov     [eax+3ch], edx
mov     edx, [esp+2ch+var_c]
mov     [eax+0ch], esi
mov     esi, [esp+2ch+var_18]
mov     [eax+38h], ecx
mov     ecx, [eax]
mov     [eax+0c4ch], edx
mov     edx, [esp+2ch+var_14]
mov     [eax+0c60h], edi
mov     [eax+8], bl
mov     [eax+440h], esi
mov     [ecx+10h], edx
mov     eax, [eax]
mov     ecx, [esp+2ch+var_1c]
mov     [eax+14h], ecx
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 1ch
retn
mov     esi, [esp+2ch+var_c]
mov     byte ptr [esp+2ch+var_10], dl
mov     ecx, [esi+ecx*4]
mov     byte ptr [esp+2ch+arg_0], cl
mov     esi, [esp+2ch+arg_0]
shr     ecx, 8
and     esi, 0ffh
inc     ebp
cmp     esi, edx
mov     [esp+2ch+var_18], ebp
jz      short loc_40c639
mov     edx, esi
jmp     short loc_40c63f
cmp     ebp, [esp+2ch+var_8]
jnz     short loc_40c68f
mov     esi, [esp+2ch+var_1c]
test    esi, esi
jnz     short loc_40c651
mov     esi, 1
jmp     loc_40c5a2
mov     esi, [esp+2ch+var_14]
mov     bl, byte ptr [esp+2ch+var_10]
mov     [esi], bl
mov     esi, [esp+2ch+var_10]
mov     ebx, edi
and     esi, 0ffh
shr     ebx, 18h
xor     ebx, esi
shl     edi, 8
mov     esi, dword_4185f8[ebx*4]
mov     ebx, [esp+2ch+var_14]
xor     edi, esi
mov     esi, [esp+2ch+var_1c]
inc     ebx
dec     esi
mov     [esp+2ch+var_14], ebx
mov     [esp+2ch+var_1c], esi
jmp     loc_40c59a
mov     ebx, [esp+2ch+var_c]
mov     esi, 2
mov     ecx, [ebx+ecx*4]
mov     ebx, [esp+2ch+var_8]
mov     byte ptr [esp+2ch+arg_0], cl
shr     ecx, 8
inc     ebp
cmp     ebp, ebx
mov     [esp+2ch+var_18], ebp
jz      loc_40c544
mov     ebx, [esp+2ch+arg_0]
and     ebx, 0ffh
cmp     ebx, edx
jz      short loc_40c6c8
mov     edx, ebx
jmp     loc_40c544
mov     ebx, [esp+2ch+var_c]
mov     esi, 3
mov     ecx, [ebx+ecx*4]
mov     ebx, [esp+2ch+var_8]
mov     byte ptr [esp+2ch+arg_0], cl
shr     ecx, 8
inc     ebp
cmp     ebp, ebx
mov     [esp+2ch+var_18], ebp
jz      loc_40c544
mov     ebx, [esp+2ch+arg_0]
and     ebx, 0ffh
cmp     ebx, edx
jz      short loc_40c701
mov     edx, ebx
jmp     loc_40c544
mov     edx, [esp+2ch+var_c]
mov     ecx, [edx+ecx*4]
mov     esi, ecx
shr     ecx, 8
and     esi, 0ffh
mov     ecx, [edx+ecx*4]
add     esi, 4
mov     edx, ecx
and     edx, 0ffh
shr     ecx, 8
add     ebp, 2
mov     [esp+2ch+var_18], ebp
jmp     loc_40c544
push    ebx
push    ebp
push    esi
mov     esi, [esp+0ch+arg_0]
push    edi
mov     ebx, 1
mov     al, [esi+10h]
test    al, al
jz      loc_40cb3c
mov     eax, [esi]
mov     ecx, [eax+14h]
test    ecx, ecx
jz      loc_40cdf2
mov     ecx, [esi+0ch]
test    ecx, ecx
jz      short loc_40c7b8
mov     eax, [eax+10h]
mov     cl, [esi+8]
mov     [eax], cl
mov     eax, [esi+0c60h]
mov     edx, eax
xor     ecx, ecx
mov     cl, [esi+8]
shr     edx, 18h
xor     edx, ecx
shl     eax, 8
mov     edx, dword_4185f8[edx*4]
xor     edx, eax
mov     eax, [esi+0ch]
dec     eax
mov     [esi+0c60h], edx
mov     [esi+0ch], eax
mov     eax, [esi]
mov     ebp, [eax+10h]
inc     ebp
mov     [eax+10h], ebp
mov     eax, [esi]
mov     edi, [eax+14h]
dec     edi
mov     [eax+14h], edi
mov     eax, [esi]
mov     edx, [eax+18h]
inc     edx
mov     [eax+18h], edx
mov     eax, [esi]
mov     ecx, [eax+18h]
test    ecx, ecx
jnz     short loc_40c748
inc     dword ptr [eax+1ch]
jmp     short loc_40c748
mov     eax, [esi+0fa40h]
mov     ecx, [esi+440h]
inc     eax
cmp     ecx, eax
jz      loc_40cdf2
mov     edx, [esi+38h]
mov     cl, [esi+3ch]
lea     edi, [esi+444h]
mov     [esi+0ch], ebx
push    edi
push    edx
mov     [esi+8], cl
call    sub_40c0f0
mov     edx, [esi+38h]
mov     ebx, [esi+0c54h]
mov     ebp, edx
xor     ecx, ecx
shr     ebp, 1
add     esp, 8
mov     cl, [ebx+ebp]
xor     ebp, ebp
mov     ebx, ecx
mov     cl, dl
and     cl, 1
shl     cl, 2
shr     ebx, cl
mov     ecx, [esi+0c50h]
mov     bp, [ecx+edx*2]
mov     ecx, [esi+14h]
and     ebx, 0fh
shl     ebx, 10h
or      ebx, ebp
test    ecx, ecx
mov     [esi+38h], ebx
jnz     short loc_40c845
mov     ecx, [esi+18h]
mov     edx, dword_4189f8[ecx*4]
inc     ecx
cmp     ecx, 200h
mov     [esi+14h], edx
mov     [esi+18h], ecx
jnz     short loc_40c845
mov     dword ptr [esi+18h], 0
mov     ecx, [esi+14h]
mov     ebx, 1
dec     ecx
mov     edx, [esi+0fa40h]
mov     ebp, ecx
mov     [esi+14h], ecx
cmp     ebp, ebx
setz    cl
xor     al, cl
mov     byte ptr [esp+10h+arg_0], al
mov     eax, [esi+440h]
inc     eax
inc     edx
cmp     eax, edx
mov     [esi+440h], eax
jz      loc_40c748
mov     eax, [esp+10h+arg_0]
mov     ecx, [esi+3ch]
and     eax, 0ffh
cmp     eax, ecx
jz      short loc_40c892
mov     [esi+3ch], eax
jmp     loc_40c748
mov     eax, [esi+38h]
push    edi
push    eax
mov     dword ptr [esi+0ch], 2
call    sub_40c0f0
mov     edx, [esi+38h]
mov     ebx, [esi+0c54h]
mov     ebp, edx
xor     ecx, ecx
shr     ebp, 1
add     esp, 8
mov     cl, [ebx+ebp]
xor     ebp, ebp
mov     ebx, ecx
mov     cl, dl
and     cl, 1
shl     cl, 2
shr     ebx, cl
mov     ecx, [esi+0c50h]
mov     bp, [ecx+edx*2]
mov     ecx, [esi+14h]
and     ebx, 0fh
shl     ebx, 10h
or      ebx, ebp
test    ecx, ecx
mov     [esi+38h], ebx
jnz     short loc_40c902
mov     ecx, [esi+18h]
mov     edx, dword_4189f8[ecx*4]
inc     ecx
cmp     ecx, 200h
mov     [esi+14h], edx
mov     [esi+18h], ecx
jnz     short loc_40c902
mov     dword ptr [esi+18h], 0
mov     ecx, [esi+14h]
mov     ebx, 1
dec     ecx
mov     edx, [esi+0fa40h]
mov     ebp, ecx
mov     [esi+14h], ecx
cmp     ebp, ebx
setz    cl
xor     al, cl
mov     byte ptr [esp+10h+arg_0], al
mov     eax, [esi+440h]
inc     eax
inc     edx
cmp     eax, edx
mov     [esi+440h], eax
jz      loc_40c748
mov     eax, [esp+10h+arg_0]
mov     ecx, [esi+3ch]
and     eax, 0ffh
cmp     eax, ecx
jz      short loc_40c94f
mov     [esi+3ch], eax
jmp     loc_40c748
mov     eax, [esi+38h]
push    edi
push    eax
mov     dword ptr [esi+0ch], 3
call    sub_40c0f0
mov     edx, [esi+38h]
mov     ebx, [esi+0c54h]
mov     ebp, edx
xor     ecx, ecx
shr     ebp, 1
add     esp, 8
mov     cl, [ebx+ebp]
xor     ebp, ebp
mov     ebx, ecx
mov     cl, dl
and     cl, 1
shl     cl, 2
shr     ebx, cl
mov     ecx, [esi+0c50h]
mov     bp, [ecx+edx*2]
mov     ecx, [esi+14h]
and     ebx, 0fh
shl     ebx, 10h
or      ebx, ebp
test    ecx, ecx
mov     [esi+38h], ebx
jnz     short loc_40c9bf
mov     ecx, [esi+18h]
mov     edx, dword_4189f8[ecx*4]
inc     ecx
cmp     ecx, 200h
mov     [esi+14h], edx
mov     [esi+18h], ecx
jnz     short loc_40c9bf
mov     dword ptr [esi+18h], 0
mov     ecx, [esi+14h]
mov     ebx, 1
dec     ecx
mov     edx, [esi+0fa40h]
mov     ebp, ecx
mov     [esi+14h], ecx
cmp     ebp, ebx
setz    cl
xor     al, cl
mov     byte ptr [esp+10h+arg_0], al
mov     eax, [esi+440h]
inc     eax
inc     edx
cmp     eax, edx
mov     [esi+440h], eax
jz      loc_40c748
mov     eax, [esp+10h+arg_0]
mov     ecx, [esi+3ch]
and     eax, 0ffh
cmp     eax, ecx
jz      short loc_40ca0c
mov     [esi+3ch], eax
jmp     loc_40c748
mov     eax, [esi+38h]
push    edi
push    eax
call    sub_40c0f0
mov     edx, [esi+0c54h]
mov     byte ptr [esp+18h+arg_0], al
mov     eax, [esi+38h]
xor     ecx, ecx
mov     ebp, eax
add     esp, 8
shr     ebp, 1
mov     cl, [edx+ebp]
xor     ebp, ebp
mov     edx, ecx
mov     cl, al
and     cl, bl
shl     cl, 2
shr     edx, cl
mov     ecx, [esi+0c50h]
mov     bp, [ecx+eax*2]
mov     eax, [esi+14h]
and     edx, 0fh
shl     edx, 10h
or      edx, ebp
test    eax, eax
mov     [esi+38h], edx
jnz     short loc_40ca77
mov     eax, [esi+18h]
mov     edx, dword_4189f8[eax*4]
inc     eax
cmp     eax, 200h
mov     [esi+14h], edx
mov     [esi+18h], eax
jnz     short loc_40ca77
mov     dword ptr [esi+18h], 0
mov     eax, [esi+14h]
mov     ebp, [esi+440h]
mov     ecx, [esp+10h+arg_0]
dec     eax
inc     ebp
mov     edx, [esi+38h]
cmp     eax, ebx
mov     [esi+14h], eax
setz    al
and     eax, 0ffh
and     ecx, 0ffh
xor     eax, ecx
push    edi
add     eax, 4
push    edx
mov     [esi+440h], ebp
mov     [esi+0ch], eax
call    sub_40c0f0
mov     edx, [esi+38h]
mov     edi, [esi+0c54h]
mov     ebp, edx
xor     ecx, ecx
shr     ebp, 1
mov     [esi+3ch], eax
add     esp, 8
mov     cl, [edi+ebp]
xor     ebp, ebp
mov     edi, ecx
mov     cl, dl
and     cl, bl
shl     cl, 2
shr     edi, cl
mov     ecx, [esi+0c50h]
mov     bp, [ecx+edx*2]
mov     ecx, [esi+14h]
and     edi, 0fh
shl     edi, 10h
or      edi, ebp
test    ecx, ecx
mov     [esi+38h], edi
jnz     short loc_40cb12
mov     ecx, [esi+18h]
mov     edx, dword_4189f8[ecx*4]
inc     ecx
cmp     ecx, 200h
mov     [esi+14h], edx
mov     [esi+18h], ecx
jnz     short loc_40cb12
mov     dword ptr [esi+18h], 0
mov     ebp, [esi+14h]
xor     edx, edx
dec     ebp
mov     ecx, ebp
mov     [esi+14h], ebp
cmp     ecx, ebx
setz    dl
xor     edx, eax
mov     eax, [esi+440h]
inc     eax
mov     [esi+3ch], edx
mov     [esi+440h], eax
jmp     loc_40c748
mov     [esi+3ch], eax
mov     eax, [esi]
mov     ecx, [eax+14h]
test    ecx, ecx
jz      loc_40cdf2
mov     ecx, [esi+0ch]
test    ecx, ecx
jz      short loc_40cbac
mov     eax, [eax+10h]
mov     cl, [esi+8]
mov     [eax], cl
mov     eax, [esi+0c60h]
mov     edx, eax
xor     ecx, ecx
mov     cl, [esi+8]
shr     edx, 18h
xor     edx, ecx
shl     eax, 8
mov     edx, dword_4185f8[edx*4]
xor     edx, eax
mov     eax, [esi+0ch]
dec     eax
mov     [esi+0c60h], edx
mov     [esi+0ch], eax
mov     eax, [esi]
mov     ebp, [eax+10h]
inc     ebp
mov     [eax+10h], ebp
mov     eax, [esi]
mov     edi, [eax+14h]
dec     edi
mov     [eax+14h], edi
mov     eax, [esi]
mov     edx, [eax+18h]
inc     edx
mov     [eax+18h], edx
mov     eax, [esi]
mov     ecx, [eax+18h]
test    ecx, ecx
jnz     short loc_40cb3c
inc     dword ptr [eax+1ch]
jmp     short loc_40cb3c
mov     eax, [esi+0fa40h]
mov     ecx, [esi+440h]
inc     eax
cmp     ecx, eax
jz      loc_40cdf2
mov     edx, [esi+38h]
mov     cl, [esi+3ch]
lea     edi, [esi+444h]
mov     [esi+0ch], ebx
push    edi
push    edx
mov     [esi+8], cl
call    sub_40c0f0
mov     edx, [esi+0c54h]
mov     byte ptr [esp+18h+arg_0], al
mov     eax, [esi+38h]
xor     ecx, ecx
mov     ebp, eax
add     esp, 8
shr     ebp, 1
mov     cl, [edx+ebp]
xor     ebp, ebp
mov     edx, ecx
mov     cl, al
and     cl, bl
shl     cl, 2
shr     edx, cl
mov     ecx, [esi+0c50h]
mov     bp, [ecx+eax*2]
mov     eax, [esi+440h]
and     edx, 0fh
shl     edx, 10h
or      edx, ebp
inc     eax
mov     [esi+38h], edx
mov     edx, [esi+0fa40h]
inc     edx
mov     [esi+440h], eax
cmp     eax, edx
jz      loc_40cb3c
mov     eax, [esp+10h+arg_0]
mov     ecx, [esi+3ch]
and     eax, 0ffh
cmp     eax, ecx
jnz     loc_40cb39
mov     eax, [esi+38h]
push    edi
push    eax
mov     dword ptr [esi+0ch], 2
call    sub_40c0f0
mov     edx, [esi+0c54h]
mov     byte ptr [esp+18h+arg_0], al
mov     eax, [esi+38h]
xor     ecx, ecx
mov     ebp, eax
add     esp, 8
shr     ebp, 1
mov     cl, [edx+ebp]
xor     ebp, ebp
mov     edx, ecx
mov     cl, al
and     cl, bl
shl     cl, 2
shr     edx, cl
mov     ecx, [esi+0c50h]
mov     bp, [ecx+eax*2]
mov     eax, [esi+440h]
and     edx, 0fh
shl     edx, 10h
or      edx, ebp
inc     eax
mov     [esi+38h], edx
mov     edx, [esi+0fa40h]
inc     edx
mov     [esi+440h], eax
cmp     eax, edx
jz      loc_40cb3c
mov     eax, [esp+10h+arg_0]
mov     ecx, [esi+3ch]
and     eax, 0ffh
cmp     eax, ecx
jnz     loc_40cb39
mov     eax, [esi+38h]
push    edi
push    eax
mov     dword ptr [esi+0ch], 3
call    sub_40c0f0
mov     edx, [esi+0c54h]
mov     byte ptr [esp+18h+arg_0], al
mov     eax, [esi+38h]
xor     ecx, ecx
mov     ebp, eax
add     esp, 8
shr     ebp, 1
mov     cl, [edx+ebp]
xor     ebp, ebp
mov     edx, ecx
mov     cl, al
and     cl, bl
shl     cl, 2
shr     edx, cl
mov     ecx, [esi+0c50h]
mov     bp, [ecx+eax*2]
mov     eax, [esi+440h]
and     edx, 0fh
shl     edx, 10h
or      edx, ebp
inc     eax
mov     [esi+38h], edx
mov     edx, [esi+0fa40h]
inc     edx
mov     [esi+440h], eax
cmp     eax, edx
jz      loc_40cb3c
mov     eax, [esp+10h+arg_0]
mov     ecx, [esi+3ch]
and     eax, 0ffh
cmp     eax, ecx
jnz     loc_40cb39
mov     eax, [esi+38h]
push    edi
push    eax
call    sub_40c0f0
mov     edx, [esi+0c54h]
mov     byte ptr [esp+18h+arg_0], al
mov     eax, [esi+38h]
xor     ecx, ecx
mov     ebp, eax
push    edi
shr     ebp, 1
mov     cl, [edx+ebp]
xor     ebp, ebp
mov     edx, ecx
mov     cl, al
and     cl, bl
shl     cl, 2
shr     edx, cl
mov     ecx, [esi+0c50h]
mov     bp, [ecx+eax*2]
and     edx, 0fh
shl     edx, 10h
or      edx, ebp
mov     [esi+38h], edx
mov     edx, [esi+440h]
mov     eax, [esi+38h]
inc     edx
mov     [esi+440h], edx
mov     edx, [esp+1ch+arg_0]
and     edx, 0ffh
push    eax
add     edx, 4
mov     [esi+0ch], edx
call    sub_40c0f0
mov     edx, [esi+0c54h]
mov     [esi+3ch], eax
mov     eax, [esi+38h]
xor     ecx, ecx
mov     edi, eax
add     esp, 10h
shr     edi, 1
mov     cl, [edi+edx]
xor     edi, edi
mov     edx, ecx
mov     cl, al
and     cl, bl
shl     cl, 2
shr     edx, cl
mov     ecx, [esi+0c50h]
mov     di, [ecx+eax*2]
mov     eax, [esi+440h]
and     edx, 0fh
shl     edx, 10h
or      edx, edi
inc     eax
mov     [esi+38h], edx
mov     [esi+440h], eax
jmp     loc_40cb3c
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
push    esi
mov     esi, [esp+4+arg_0]
test    esi, esi
push    edi
jnz     short loc_40ce14
pop     edi
mov     eax, 0fffffffeh
pop     esi
retn    4
mov     edi, [esi+20h]
test    edi, edi
jnz     short loc_40ce25
pop     edi
mov     eax, 0fffffffeh
pop     esi
retn    4
cmp     [edi], esi
jz      short loc_40ce33
pop     edi
mov     eax, 0fffffffeh
pop     esi
retn    4
mov     eax, [edi+0c4ch]
test    eax, eax
jz      short loc_40ce48
push    eax
mov     eax, [esi+2ch]
push    eax
call    dword ptr [esi+28h]
add     esp, 8
mov     eax, [edi+0c50h]
test    eax, eax
jz      short loc_40ce5d
mov     ecx, [esi+2ch]
push    eax
push    ecx
call    dword ptr [esi+28h]
add     esp, 8
mov     edi, [edi+0c54h]
test    edi, edi
jz      short loc_40ce72
mov     edx, [esi+2ch]
push    edi
push    edx
call    dword ptr [esi+28h]
add     esp, 8
mov     eax, [esi+20h]
mov     ecx, [esi+2ch]
push    eax
push    ecx
call    dword ptr [esi+28h]
add     esp, 8
mov     dword ptr [esi+20h], 0
xor     eax, eax
pop     edi
pop     esi
retn    4
sub     esp, 78h
push    ebx
push    ebp
push    esi
mov     esi, [esp+84h+arg_0]
push    edi
xor     edi, edi
mov     eax, [esi+4]
mov     ebp, [esi]
cmp     eax, 0ah
jnz     loc_40cf3e
mov     [esi+0fa14h], edi
mov     [esi+0fa18h], edi
mov     [esi+0fa1ch], edi
mov     [esi+0fa20h], edi
mov     [esi+0fa24h], edi
mov     [esi+0fa28h], edi
mov     [esi+0fa2ch], edi
mov     [esi+0fa30h], edi
mov     [esi+0fa34h], edi
mov     [esi+0fa38h], edi
mov     [esi+0fa3ch], edi
mov     [esi+0fa40h], edi
mov     [esi+0fa44h], edi
mov     [esi+0fa48h], edi
mov     [esi+0fa4ch], edi
mov     [esi+0fa50h], edi
mov     [esi+0fa54h], edi
mov     [esi+0fa58h], edi
mov     [esi+0fa5ch], edi
mov     [esi+0fa60h], edi
mov     [esi+0fa64h], edi
mov     [esi+0fa68h], edi
mov     [esi+0fa6ch], edi
mov     [esi+0fa70h], edi
mov     eax, [esi+0fa14h]
mov     ecx, [esi+0fa18h]
mov     edx, [esi+0fa1ch]
mov     [esp+88h+var_74], eax
mov     eax, [esi+0fa20h]
mov     [esp+88h+var_6c], ecx
mov     ecx, [esi+0fa24h]
mov     [esp+88h+var_3c], eax
mov     eax, [esi+0fa2ch]
mov     [esp+88h+var_5c], edx
mov     edx, [esi+0fa28h]
mov     [esp+88h+var_1c], eax
mov     eax, [esi+0fa38h]
mov     [esp+88h+var_2c], ecx
mov     ecx, [esi+0fa30h]
mov     [esp+88h+var_4c], eax
mov     eax, [esi+0fa44h]
mov     [esp+88h+var_54], edx
mov     edx, [esi+0fa34h]
mov     [esp+88h+var_38], ecx
mov     ecx, [esi+0fa3ch]
mov     [esp+88h+var_68], eax
mov     eax, [esi+0fa50h]
mov     [esp+88h+var_50], edx
mov     edx, [esi+0fa40h]
mov     [esp+88h+var_28], ecx
mov     ecx, [esi+0fa48h]
mov     [esp+88h+var_4], eax
mov     eax, [esi+0fa60h]
mov     ebx, [esi+0fa54h]
mov     [esp+88h+var_70], edx
mov     edx, [esi+0fa4ch]
mov     [esp+88h+var_34], ecx
mov     ecx, [esi+0fa58h]
mov     [esp+88h+var_20], eax
mov     eax, [esi+0fa6ch]
mov     [esp+88h+var_58], edx
mov     edx, [esi+0fa5ch]
mov     [esp+88h+var_64], ecx
mov     ecx, [esi+0fa64h]
mov     [esp+88h+var_44], eax
mov     eax, [esi+4]
mov     [esp+88h+var_24], edx
mov     edx, [esi+0fa68h]
mov     [esp+88h+var_30], ecx
mov     ecx, [esi+0fa70h]
add     eax, 0fffffff6h
mov     [esp+88h+var_78], ebx
cmp     eax, 28h
mov     [esp+88h+var_48], edx
mov     [esp+88h+var_40], ecx
ja      def_40d040
jmp     ds:jpt_40d040[eax*4]
mov     dword ptr [esi+4], 0ah
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d09f
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d04e
inc     dword ptr [eax+0ch]
jmp     short loc_40d04e
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 42h
jz      short loc_40d0c7
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffbh
jmp     loc_40f1b4
mov     dword ptr [esi+4], 0bh
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d11f
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d0ce
inc     dword ptr [eax+0ch]
jmp     short loc_40d0ce
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 5ah
jz      short loc_40d147
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffbh
jmp     loc_40f1b4
mov     dword ptr [esi+4], 0ch
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d19f
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d14e
inc     dword ptr [eax+0ch]
jmp     short loc_40d14e
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 68h
jz      short loc_40d1c7
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffbh
jmp     loc_40f1b4
mov     dword ptr [esi+4], 0dh
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d21f
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d1ce
inc     dword ptr [eax+0ch]
jmp     short loc_40d1ce
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     eax, 31h
mov     [esi+24h], eax
jl      loc_40d0b9
cmp     eax, 39h
jg      loc_40d0b9
add     eax, 0ffffffd0h
mov     cl, [esi+28h]
mov     [esi+24h], eax
push    1
lea     eax, [eax+eax*4]
test    cl, cl
lea     eax, [eax+eax*4]
lea     eax, [eax+eax*4]
lea     eax, [eax+eax*4]
jz      short loc_40d2b0
mov     ecx, [ebp+2ch]
lea     eax, [eax+eax*4]
shl     eax, 6
push    eax
push    ecx
call    dword ptr [ebp+24h]
mov     [esi+0c50h], eax
mov     eax, [esi+24h]
push    1
lea     eax, [eax+eax*4]
lea     eax, [eax+eax*4]
lea     eax, [eax+eax*4]
lea     eax, [eax+eax*4]
lea     edx, [eax+eax*4]
mov     eax, [ebp+2ch]
shl     edx, 5
inc     edx
sar     edx, 1
push    edx
push    eax
call    dword ptr [ebp+24h]
mov     ecx, [esi+0c50h]
add     esp, 18h
test    ecx, ecx
mov     [esi+0c54h], eax
jz      short loc_40d2cb
jmp     short loc_40d2c7
mov     edx, [ebp+2ch]
lea     ecx, [eax+eax*4]
shl     ecx, 7
push    ecx
push    edx
call    dword ptr [ebp+24h]
add     esp, 0ch
mov     [esi+0c4ch], eax
test    eax, eax
jnz     short loc_40d2d9
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffdh
jmp     loc_40f1b4
mov     dword ptr [esi+4], 0eh
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d331
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d2e0
inc     dword ptr [eax+0ch]
jmp     short loc_40d2e0
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 17h
jz      loc_40ece9
cmp     al, 31h
jz      short loc_40d361
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+4], 0fh
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d3b9
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d368
inc     dword ptr [eax+0ch]
jmp     short loc_40d368
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 41h
jz      short loc_40d3e1
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+4], 10h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d439
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d3e8
inc     dword ptr [eax+0ch]
jmp     short loc_40d3e8
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 59h
jz      short loc_40d461
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+4], 11h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d4b9
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d468
inc     dword ptr [eax+0ch]
jmp     short loc_40d468
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 26h
jz      short loc_40d4e1
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+4], 12h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d539
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d4e8
inc     dword ptr [eax+0ch]
jmp     short loc_40d4e8
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 53h
jz      short loc_40d561
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+4], 13h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d5b9
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d568
inc     dword ptr [eax+0ch]
jmp     short loc_40d568
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 59h
jz      short loc_40d5e1
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     eax, [esi+2ch]
mov     dword ptr [esi+0c58h], 0
inc     eax
mov     [esi+2ch], eax
mov     dword ptr [esi+4], 14h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d64a
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d5f9
inc     dword ptr [eax+0ch]
jmp     short loc_40d5f9
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     ecx, [esi+0c58h]
mov     [esi+20h], edx
shl     ecx, 8
and     eax, 0ffh
and     eax, 0ffh
or      ecx, eax
mov     [esi+0c58h], ecx
mov     dword ptr [esi+4], 15h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d6ce
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d67d
inc     dword ptr [eax+0ch]
jmp     short loc_40d67d
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     ecx, [esi+0c58h]
mov     [esi+20h], edx
shl     ecx, 8
and     eax, 0ffh
and     eax, 0ffh
or      ecx, eax
mov     [esi+0c58h], ecx
mov     dword ptr [esi+4], 16h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d752
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d701
inc     dword ptr [eax+0ch]
jmp     short loc_40d701
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     ecx, [esi+0c58h]
mov     [esi+20h], edx
shl     ecx, 8
and     eax, 0ffh
and     eax, 0ffh
or      ecx, eax
mov     [esi+0c58h], ecx
mov     dword ptr [esi+4], 17h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d7d6
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d785
inc     dword ptr [eax+0ch]
jmp     short loc_40d785
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     ecx, [esi+0c58h]
mov     [esi+20h], edx
shl     ecx, 8
and     eax, 0ffh
and     eax, 0ffh
or      ecx, eax
mov     [esi+0c58h], ecx
mov     dword ptr [esi+4], 18h
mov     ecx, [esi+20h]
cmp     ecx, 1
jge     short loc_40d85a
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d809
inc     dword ptr [eax+0ch]
jmp     short loc_40d809
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
mov     dword ptr [esi+34h], 0
lea     ecx, [edx-1]
shr     eax, cl
and     eax, 1
dec     edx
mov     [esi+20h], edx
mov     [esi+10h], al
mov     dword ptr [esi+4], 19h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d8ce
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d87d
inc     dword ptr [eax+0ch]
jmp     short loc_40d87d
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     ecx, [esi+34h]
mov     [esi+20h], edx
shl     ecx, 8
and     eax, 0ffh
and     eax, 0ffh
or      ecx, eax
mov     [esi+34h], ecx
mov     dword ptr [esi+4], 1ah
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d94c
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40d8fb
inc     dword ptr [eax+0ch]
jmp     short loc_40d8fb
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     ecx, [esi+34h]
mov     [esi+20h], edx
shl     ecx, 8
and     eax, 0ffh
and     eax, 0ffh
or      ecx, eax
mov     [esi+34h], ecx
mov     dword ptr [esi+4], 1bh
xor     ebp, ebp
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40d9c8
mov     eax, [esi]
cmp     [eax+4], ebp
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
cmp     [eax+8], ebp
jnz     short loc_40d97b
inc     dword ptr [eax+0ch]
jmp     short loc_40d97b
mov     eax, [esi+20h]
mov     edx, [esi+1ch]
lea     ecx, [eax-8]
add     eax, 0fffffff8h
shr     edx, cl
mov     [esi+20h], eax
mov     eax, [esi+34h]
shl     eax, 8
and     edx, 0ffh
and     edx, 0ffh
or      eax, edx
mov     [esi+34h], eax
jge     short loc_40da00
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     ecx, [esi+24h]
lea     ecx, [ecx+ecx*4]
lea     ecx, [ecx+ecx*4]
lea     ecx, [ecx+ecx*4]
lea     ecx, [ecx+ecx*4]
lea     ecx, [ecx+ecx*4]
shl     ecx, 5
add     ecx, 0ah
cmp     eax, ecx
jle     short loc_40da2a
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     [esp+88h+var_74], ebp
jmp     loc_40dabd
mov     dword ptr [esi+4], 1ch
xor     ebp, ebp
mov     ecx, [esi+20h]
cmp     ecx, 1
jge     short loc_40da89
mov     eax, [esi]
cmp     [eax+4], ebp
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
cmp     [eax+8], ebp
jnz     short loc_40da3c
inc     dword ptr [eax+0ch]
jmp     short loc_40da3c
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-1]
shr     eax, cl
and     eax, 1
dec     edx
cmp     al, 1
mov     [esi+20h], edx
jnz     short loc_40daad
mov     eax, [esp+88h+var_74]
mov     byte ptr [eax+esi+0d6ch], 1
jmp     short loc_40dab9
mov     ecx, [esp+88h+var_74]
mov     byte ptr [ecx+esi+0d6ch], 0
inc     [esp+88h+var_74]
mov     eax, [esp+88h+var_74]
mov     edx, 10h
cmp     eax, edx
jl      loc_40da33
lea     edi, [esi+0c6ch]
mov     ecx, 40h
xor     eax, eax
mov     [esp+88h+var_74], ebp
rep stosd
jmp     loc_40db83
mov     dword ptr [esi+4], 1dh
xor     ebp, ebp
mov     ecx, [esi+20h]
cmp     ecx, 1
jge     short loc_40db3c
mov     eax, [esi]
cmp     [eax+4], ebp
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
cmp     [eax+8], ebp
jnz     short loc_40daef
inc     dword ptr [eax+0ch]
jmp     short loc_40daef
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-1]
shr     eax, cl
and     eax, 1
dec     edx
cmp     al, 1
mov     [esi+20h], edx
jnz     short loc_40db67
mov     eax, [esp+88h+var_74]
mov     ecx, [esp+88h+var_6c]
shl     eax, 4
add     eax, ecx
mov     byte ptr [eax+esi+0c6ch], 1
mov     eax, [esp+88h+var_6c]
mov     edx, 10h
inc     eax
mov     [esp+88h+var_6c], eax
cmp     [esp+88h+var_6c], edx
jl      loc_40dae6
inc     [esp+88h+var_74]
mov     eax, [esp+88h+var_74]
cmp     eax, edx
jge     short loc_40db9c
mov     cl, [eax+esi+0d6ch]
test    cl, cl
jz      short loc_40db7f
mov     [esp+88h+var_6c], ebp
jmp     short loc_40db75
push    esi
call    sub_40f360
mov     eax, [esi+0c68h]
add     esp, 4
cmp     eax, ebp
jnz     short loc_40dbbd
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
add     eax, 2
mov     [esp+88h+var_3c], eax
mov     dword ptr [esi+4], 1eh
mov     ecx, [esi+20h]
cmp     ecx, 3
jge     short loc_40dc1c
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40dbcb
inc     dword ptr [eax+0ch]
jmp     short loc_40dbcb
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-3]
add     edx, 0fffffffdh
shr     eax, cl
mov     [esi+20h], edx
and     eax, 7
cmp     eax, 2
mov     [esp+88h+var_2c], eax
jl      short loc_40dc3e
cmp     eax, 6
jle     short loc_40dc4c
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+4], 1fh
xor     ebp, ebp
mov     ecx, [esi+20h]
cmp     ecx, 0fh
jge     short loc_40dca2
mov     eax, [esi]
cmp     [eax+4], ebp
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
cmp     [eax+8], ebp
jnz     short loc_40dc55
inc     dword ptr [eax+0ch]
jmp     short loc_40dc55
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-0fh]
add     edx, 0fffffff1h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 7fffh
mov     edi, eax
cmp     eax, 1
mov     [esp+88h+var_54], edi
jge     short loc_40dcd1
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     [esp+88h+var_74], ebp
jmp     loc_40dd7d
mov     dword ptr [esi+4], 20h
xor     ebp, ebp
mov     ecx, [esi+20h]
cmp     ecx, 1
jge     short loc_40dd30
mov     eax, [esi]
cmp     [eax+4], ebp
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
cmp     [eax+8], ebp
jnz     short loc_40dce3
inc     dword ptr [eax+0ch]
jmp     short loc_40dce3
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-1]
shr     eax, cl
and     eax, 1
dec     edx
test    al, al
mov     [esi+20h], edx
jz      short loc_40dd65
mov     eax, [esp+88h+var_6c]
mov     ecx, [esp+88h+var_2c]
inc     eax
cmp     eax, ecx
mov     [esp+88h+var_6c], eax
jl      short loc_40dcda
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     eax, [esp+88h+var_74]
mov     cl, byte ptr [esp+88h+var_6c]
mov     edi, [esp+88h+var_54]
mov     [eax+esi+650eh], cl
inc     eax
mov     [esp+88h+var_74], eax
cmp     [esp+88h+var_74], edi
jge     short loc_40dd8c
mov     [esp+88h+var_6c], ebp
jmp     loc_40dcda
mov     edx, [esp+88h+var_2c]
xor     cl, cl
cmp     edx, ebp
jle     short loc_40ddaf
xor     eax, eax
mov     byte ptr [esp+eax+88h+var_c], cl
inc     cl
mov     byte ptr [esp+88h+var_5c], cl
mov     eax, [esp+88h+var_5c]
and     eax, 0ffh
cmp     eax, edx
jl      short loc_40dd98
cmp     edi, ebp
mov     [esp+88h+var_74], ebp
jle     short loc_40de02
mov     ebp, [esp+88h+var_54]
mov     edx, [esp+88h+var_74]
mov     dl, [esi+edx+650eh]
mov     byte ptr [esp+88h+var_5c], dl
mov     eax, [esp+88h+var_5c]
and     eax, 0ffh
test    dl, dl
mov     bl, byte ptr [esp+eax+88h+var_c]
lea     ecx, [esp+eax+88h+var_c]
jbe     short loc_40ddea
mov     edi, eax
mov     al, [ecx-1]
mov     [ecx], al
dec     ecx
dec     edi
jnz     short loc_40dde1
mov     eax, [esp+88h+var_74]
mov     byte ptr [esp+88h+var_c], bl
mov     [eax+esi+1ebch], bl
inc     eax
cmp     eax, ebp
mov     [esp+88h+var_74], eax
jl      short loc_40ddbb
mov     [esp+88h+var_5c], 0
jmp     loc_40df47
mov     dword ptr [esi+4], 23h
mov     ecx, [esi+20h]
cmp     ecx, 1
jge     short loc_40de67
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40de16
inc     dword ptr [eax+0ch]
jmp     short loc_40de16
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-1]
shr     eax, cl
and     eax, 1
dec     edx
test    al, al
mov     eax, [esp+88h+var_58]
mov     [esi+20h], edx
jnz     short loc_40de84
inc     eax
jmp     short loc_40de85
dec     eax
mov     [esp+88h+var_58], eax
mov     eax, [esp+88h+var_58]
cmp     eax, 1
jl      loc_40ef5b
cmp     eax, 14h
jg      loc_40ef5b
mov     dword ptr [esi+4], 22h
mov     ecx, [esi+20h]
cmp     ecx, 1
jge     short loc_40def7
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40dea6
inc     dword ptr [eax+0ch]
jmp     short loc_40dea6
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-1]
shr     eax, cl
and     eax, 1
dec     edx
test    al, al
mov     [esi+20h], edx
jnz     loc_40de0f
mov     eax, [esp+88h+var_5c]
mov     ecx, eax
shl     ecx, 7
add     ecx, eax
mov     eax, [esp+88h+var_74]
lea     edx, [eax+ecx*2]
mov     cl, byte ptr [esp+88h+var_58]
inc     eax
mov     [edx+esi+0ab60h], cl
mov     [esp+88h+var_74], eax
mov     edx, [esp+88h+var_74]
mov     eax, [esp+88h+var_3c]
cmp     edx, eax
jl      loc_40de89
inc     [esp+88h+var_5c]
mov     eax, [esp+88h+var_2c]
mov     ecx, [esp+88h+var_5c]
cmp     ecx, eax
jge     short loc_40dfd0
mov     dword ptr [esi+4], 21h
mov     ecx, [esi+20h]
cmp     ecx, 5
jge     short loc_40dfab
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40df5a
inc     dword ptr [eax+0ch]
jmp     short loc_40df5a
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
mov     [esp+88h+var_74], 0
lea     ecx, [edx-5]
shr     eax, cl
and     eax, 1fh
add     edx, 0fffffffbh
mov     [esi+20h], edx
mov     [esp+88h+var_58], eax
jmp     loc_40df33
test    eax, eax
mov     [esp+88h+var_5c], 0
jle     loc_40e06f
lea     ecx, [esi+0f9fch]
lea     edi, [esi+0c99ch]
mov     [esp+88h+var_1c], ecx
lea     ebx, [esi+0ab60h]
mov     [esp+88h+var_28], eax
mov     [esp+88h+var_5c], eax
mov     eax, [esp+88h+var_3c]
xor     ecx, ecx
xor     edx, edx
mov     ebp, 20h
test    eax, eax
jle     short loc_40e029
xor     eax, eax
mov     al, [ebx+edx]
cmp     eax, ecx
jle     short loc_40e01a
mov     ecx, eax
cmp     eax, ebp
jge     short loc_40e020
mov     ebp, eax
mov     eax, [esp+88h+var_3c]
inc     edx
cmp     edx, eax
jl      short loc_40e00f
mov     edx, [esp+88h+var_3c]
lea     eax, [edi+1830h]
push    edx
push    ecx
push    ebp
push    ebx
push    eax
lea     ecx, [edi-1830h]
push    edi
push    ecx
call    sub_40f3a0
mov     eax, [esp+0a4h+var_1c]
add     esp, 1ch
add     ebx, 102h
add     edi, 408h
mov     [eax], ebp
add     eax, 4
mov     [esp+88h+var_1c], eax
mov     eax, [esp+88h+var_28]
dec     eax
mov     [esp+88h+var_28], eax
jnz     short loc_40dffe
mov     eax, [esi+0c68h]
xor     ebp, ebp
inc     eax
lea     edi, [esi+40h]
mov     [esp+88h+var_1c], eax
mov     eax, [esi+24h]
mov     ecx, 100h
mov     edx, 0fh
lea     eax, [eax+eax*4]
mov     [esp+88h+var_50], ebp
mov     [esp+88h+var_74], 100h
mov     [esp+88h+var_38], edx
lea     eax, [eax+eax*4]
lea     eax, [eax+eax*4]
lea     eax, [eax+eax*4]
lea     eax, [eax+eax*4]
shl     eax, 5
mov     [esp+88h+var_28], eax
xor     eax, eax
rep stosd
mov     eax, 0fffh
lea     edi, [esi+1eb8h]
mov     ecx, 0fh
shl     dl, 4
mov     bl, cl
add     bl, dl
mov     [eax+esi+0e7ch], bl
dec     eax
dec     ecx
jns     short loc_40e0c9
lea     edx, [eax+1]
mov     [edi], edx
mov     edx, [esp+88h+var_38]
dec     edx
sub     edi, 4
cmp     edx, ebp
mov     [esp+88h+var_38], edx
jge     short loc_40e0c1
mov     eax, [esp+88h+var_54]
mov     [esp+88h+var_70], ebp
cmp     eax, ebp
mov     [esp+88h+var_38], ebp
jg      short loc_40e10b
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
xor     eax, eax
mov     [esp+88h+var_50], 31h
mov     al, [esi+1ebch]
mov     edx, eax
mov     [esp+88h+var_20], eax
mov     ecx, [esi+eax*4+0f9fch]
shl     edx, 7
add     edx, eax
mov     [esp+88h+var_30], ecx
mov     [esp+88h+var_78], ecx
lea     eax, [esi+edx*8]
lea     edx, [eax+0b16ch]
mov     [esp+88h+var_48], edx
lea     edx, [eax+0e1cch]
add     eax, 0c99ch
mov     [esp+88h+var_40], edx
mov     [esp+88h+var_44], eax
mov     ebx, [esp+88h+var_78]
mov     dword ptr [esi+4], 24h
mov     ecx, [esi+20h]
cmp     ecx, ebx
jge     short loc_40e1b0
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40ece2
mov     edi, [eax]
mov     ebp, [esi+1ch]
xor     edx, edx
add     ecx, 8
mov     dl, [edi]
mov     [esi+20h], ecx
shl     ebp, 8
or      ebp, edx
mov     [esi+1ch], ebp
mov     ebp, [eax]
inc     ebp
mov     [eax], ebp
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40e160
inc     dword ptr [eax+0ch]
jmp     short loc_40e160
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
sub     edx, ebx
mov     edi, 1
mov     ecx, edx
mov     [esi+20h], edx
shr     eax, cl
mov     ecx, ebx
shl     edi, cl
dec     edi
and     eax, edi
mov     [esp+88h+var_64], eax
jmp     loc_40e255
mov     ebx, [esp+88h+var_78]
mov     dword ptr [esi+4], 25h
mov     ecx, [esi+20h]
cmp     ecx, 1
jge     short loc_40e230
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40ece2
mov     edi, [eax]
mov     ebp, [esi+1ch]
xor     edx, edx
add     ecx, 8
mov     dl, [edi]
mov     [esi+20h], ecx
shl     ebp, 8
or      ebp, edx
mov     [esi+1ch], ebp
mov     ebp, [eax]
inc     ebp
mov     [eax], ebp
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40e1df
inc     dword ptr [eax+0ch]
jmp     short loc_40e1df
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-1]
shr     eax, cl
mov     ecx, [esp+88h+var_64]
and     eax, 1
dec     edx
mov     [esi+20h], edx
lea     edx, [ecx+ecx]
or      edx, eax
mov     [esp+88h+var_24], eax
mov     [esp+88h+var_64], edx
mov     eax, edx
cmp     ebx, 14h
jle     short loc_40e264
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     ecx, [esp+88h+var_48]
cmp     eax, [ecx+ebx*4]
jle     short loc_40e277
inc     ebx
mov     [esp+88h+var_78], ebx
jmp     loc_40e1d8
mov     edx, [esp+88h+var_44]
sub     eax, [edx+ebx*4]
js      short loc_40e28b
cmp     eax, 102h
jl      loc_40e346
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     ebx, [esp+88h+var_78]
mov     dword ptr [esi+4], 29h
mov     ecx, [esi+20h]
cmp     ecx, 1
jge     short loc_40e2f1
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40ece2
mov     edi, [eax]
mov     ebp, [esi+1ch]
xor     edx, edx
add     ecx, 8
mov     dl, [edi]
mov     [esi+20h], ecx
shl     ebp, 8
or      ebp, edx
mov     [esi+1ch], ebp
mov     ebp, [eax]
inc     ebp
mov     [eax], ebp
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40e2a0
inc     dword ptr [eax+0ch]
jmp     short loc_40e2a0
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-1]
shr     eax, cl
mov     ecx, [esp+88h+var_64]
and     eax, 1
dec     edx
mov     [esi+20h], edx
lea     edx, [ecx+ecx]
mov     [esp+88h+var_24], eax
or      eax, edx
mov     [esp+88h+var_64], eax
cmp     ebx, 14h
jle     short loc_40e323
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     ecx, [esp+88h+var_48]
cmp     eax, [ecx+ebx*4]
jle     short loc_40e336
inc     ebx
mov     [esp+88h+var_78], ebx
jmp     loc_40e299
mov     edx, [esp+88h+var_44]
sub     eax, [edx+ebx*4]
js      short loc_40e319
cmp     eax, 102h
jge     short loc_40e319
mov     ecx, [esp+88h+var_40]
mov     edx, [ecx+eax*4]
mov     [esp+88h+var_4c], edx
mov     ecx, [esp+88h+var_4c]
mov     eax, [esp+88h+var_1c]
cmp     ecx, eax
jz      loc_40e926
test    ecx, ecx
jz      loc_40e655
cmp     ecx, 1
jz      loc_40e655
mov     eax, [esp+88h+var_28]
mov     edx, [esp+88h+var_70]
cmp     edx, eax
jl      short loc_40e388
mov     edi, 0fffffffch
jmp     loc_40f1b4
dec     ecx
cmp     ecx, 10h
jnb     loc_40e444
mov     edi, [esi+1e7ch]
cmp     ecx, 3
mov     [esp+88h+var_c], edi
lea     eax, [edi+ecx]
mov     dl, [eax+esi+0e7ch]
mov     byte ptr [esp+88h+var_60], dl
jbe     short loc_40e41f
lea     edx, [esi+0e7bh]
mov     edi, esi
sub     edi, edx
add     eax, edx
add     edi, 0e7ch
mov     [esp+88h+var_18], edi
mov     edi, esi
sub     edi, edx
lea     ebp, [edi+0e7ah]
mov     edi, esi
sub     edi, edx
add     edi, 0e78h
mov     [esp+88h+var_10], edi
mov     edi, esi
sub     edi, edx
add     edi, 0e79h
mov     [esp+88h+var_14], edi
mov     edi, ecx
shr     edi, 2
mov     ebx, [esp+88h+var_18]
mov     dl, [eax]
sub     ecx, 4
mov     [ebx+eax], dl
mov     dl, [eax+ebp]
mov     [eax], dl
mov     edx, [esp+88h+var_14]
mov     bl, [edx+eax]
mov     [eax+ebp], bl
mov     ebx, [esp+88h+var_10]
mov     bl, [ebx+eax]
mov     [edx+eax], bl
sub     eax, 4
dec     edi
jnz     short loc_40e3f0
mov     edi, [esp+88h+var_c]
test    ecx, ecx
jbe     short loc_40e434
lea     eax, [edi+esi+0e7ch]
mov     dl, [ecx+eax-1]
mov     [ecx+eax], dl
dec     ecx
jnz     short loc_40e42a
mov     al, byte ptr [esp+88h+var_60]
mov     [edi+esi+0e7ch], al
jmp     loc_40e503
mov     edx, ecx
and     ecx, 0fh
shr     edx, 4
mov     ebp, [esi+edx*4+1e7ch]
lea     edi, [esi+edx*4+1e7ch]
add     ecx, ebp
cmp     ecx, ebp
mov     bl, [ecx+esi+0e7ch]
mov     byte ptr [esp+88h+var_60], bl
jle     short loc_40e480
mov     al, [ecx+esi+0e7bh]
mov     [ecx+esi+0e7ch], al
mov     eax, [edi]
dec     ecx
cmp     ecx, eax
jg      short loc_40e46b
mov     ecx, [edi]
inc     ecx
test    edx, edx
mov     [edi], ecx
jle     short loc_40e4ab
mov     eax, edi
mov     edi, edx
mov     edx, [eax]
add     eax, 0fffffffch
dec     edx
dec     edi
mov     [eax+4], edx
mov     ecx, edx
mov     edx, [eax]
mov     dl, [esi+edx+0e8bh]
mov     [ecx+esi+0e7ch], dl
jnz     short loc_40e48d
mov     ecx, [esi+1e7ch]
dec     ecx
mov     eax, ecx
mov     [esi+1e7ch], ecx
mov     [eax+esi+0e7ch], bl
mov     eax, [esi+1e7ch]
test    eax, eax
jnz     short loc_40e503
mov     eax, 0fffh
lea     ecx, [esi+1eb8h]
mov     ebp, 10h
mov     edi, 0fh
mov     ebx, [ecx]
mov     edx, edi
add     edx, ebx
dec     eax
dec     edi
mov     dl, [edx+esi+0e7ch]
mov     [eax+esi+0e7dh], dl
jns     short loc_40e4e0
lea     edx, [eax+1]
mov     [ecx], edx
sub     ecx, 4
dec     ebp
jnz     short loc_40e4db
mov     eax, [esp+88h+var_60]
xor     ecx, ecx
and     eax, 0ffh
mov     cl, [eax+esi+0d7ch]
lea     eax, [eax+esi+0d7ch]
mov     edx, [esi+ecx*4+40h]
lea     ecx, [esi+ecx*4+40h]
inc     edx
mov     [ecx], edx
mov     cl, [esi+28h]
test    cl, cl
jz      short loc_40e542
movzx   dx, byte ptr [eax]
mov     eax, [esi+0c50h]
mov     ecx, [esp+88h+var_70]
mov     [eax+ecx*2], dx
jmp     short loc_40e553
mov     ecx, [esp+88h+var_70]
xor     edx, edx
mov     dl, [eax]
mov     eax, [esi+0c4ch]
mov     [eax+ecx*4], edx
mov     ecx, [esp+88h+var_70]
inc     ecx
mov     [esp+88h+var_70], ecx
mov     ecx, [esp+88h+var_50]
test    ecx, ecx
jnz     short loc_40e5c9
mov     eax, [esp+88h+var_38]
mov     ecx, [esp+88h+var_54]
inc     eax
cmp     eax, ecx
mov     [esp+88h+var_38], eax
jl      short loc_40e583
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
xor     edx, edx
mov     ecx, 32h
mov     dl, [eax+esi+1ebch]
mov     eax, edx
mov     [esp+88h+var_20], eax
mov     edx, [esi+eax*4+0f9fch]
mov     [esp+88h+var_30], edx
mov     edx, eax
shl     edx, 7
add     edx, eax
lea     eax, [esi+edx*8]
lea     edx, [eax+0b16ch]
mov     [esp+88h+var_48], edx
lea     edx, [eax+0e1cch]
add     eax, 0c99ch
mov     [esp+88h+var_40], edx
mov     [esp+88h+var_44], eax
mov     eax, [esp+88h+var_30]
dec     ecx
mov     [esp+88h+var_50], ecx
mov     [esp+88h+var_78], eax
mov     ebx, [esp+88h+var_78]
mov     dword ptr [esi+4], 28h
mov     ecx, [esi+20h]
cmp     ecx, ebx
jge     short loc_40e631
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40ece2
mov     edi, [eax]
mov     ebp, [esi+1ch]
xor     edx, edx
add     ecx, 8
mov     dl, [edi]
mov     [esi+20h], ecx
shl     ebp, 8
or      ebp, edx
mov     [esi+1ch], ebp
mov     ebp, [eax]
inc     ebp
mov     [eax], ebp
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40e5e1
inc     dword ptr [eax+0ch]
jmp     short loc_40e5e1
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
sub     edx, ebx
mov     edi, 1
mov     ecx, edx
mov     [esi+20h], edx
shr     eax, cl
mov     ecx, ebx
shl     edi, cl
dec     edi
and     eax, edi
mov     [esp+88h+var_64], eax
jmp     loc_40e314
mov     [esp+88h+var_68], 0ffffffffh
mov     [esp+88h+var_34], 1
mov     eax, [esp+88h+var_4c]
test    eax, eax
jnz     short loc_40e67d
mov     eax, [esp+88h+var_34]
mov     ecx, [esp+88h+var_68]
add     ecx, eax
mov     [esp+88h+var_68], ecx
jmp     short loc_40e691
cmp     eax, 1
jnz     short loc_40e691
mov     ecx, [esp+88h+var_68]
mov     edx, [esp+88h+var_34]
lea     eax, [ecx+edx*2]
mov     [esp+88h+var_68], eax
mov     ecx, [esp+88h+var_34]
lea     edx, [ecx+ecx]
mov     ecx, [esp+88h+var_50]
test    ecx, ecx
mov     [esp+88h+var_34], edx
jnz     short loc_40e705
mov     eax, [esp+88h+var_38]
mov     ecx, [esp+88h+var_54]
inc     eax
cmp     eax, ecx
mov     [esp+88h+var_38], eax
jl      short loc_40e6bf
mov     edi, 0fffffffch
jmp     loc_40f1b4
xor     edx, edx
mov     ecx, 32h
mov     dl, [eax+esi+1ebch]
mov     eax, edx
mov     [esp+88h+var_20], eax
mov     edx, [esi+eax*4+0f9fch]
mov     [esp+88h+var_30], edx
mov     edx, eax
shl     edx, 7
add     edx, eax
lea     eax, [esi+edx*8]
lea     edx, [eax+0b16ch]
mov     [esp+88h+var_48], edx
lea     edx, [eax+0e1cch]
add     eax, 0c99ch
mov     [esp+88h+var_40], edx
mov     [esp+88h+var_44], eax
mov     ebx, [esp+88h+var_30]
dec     ecx
mov     [esp+88h+var_50], ecx
mov     [esp+88h+var_78], ebx
jmp     short loc_40e718
mov     ebx, [esp+88h+var_78]
mov     dword ptr [esi+4], 26h
mov     ecx, [esi+20h]
cmp     ecx, ebx
jge     short loc_40e76f
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40ece2
mov     edi, [eax]
mov     ebp, [esi+1ch]
xor     edx, edx
add     ecx, 8
mov     dl, [edi]
mov     [esi+20h], ecx
shl     ebp, 8
or      ebp, edx
mov     [esi+1ch], ebp
mov     ebp, [eax]
inc     ebp
mov     [eax], ebp
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40e71f
inc     dword ptr [eax+0ch]
jmp     short loc_40e71f
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
sub     edx, ebx
mov     edi, 1
mov     ecx, edx
mov     [esi+20h], edx
shr     eax, cl
mov     ecx, ebx
shl     edi, cl
dec     edi
and     eax, edi
mov     [esp+88h+var_64], eax
cmp     ebx, 14h
jle     short loc_40e79d
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     ecx, [esp+88h+var_48]
cmp     eax, [ecx+ebx*4]
jle     loc_40e837
inc     ebx
mov     [esp+88h+var_78], ebx
jmp     short loc_40e7b5
mov     ebx, [esp+88h+var_78]
mov     dword ptr [esi+4], 27h
mov     ecx, [esi+20h]
cmp     ecx, 1
jge     short loc_40e80d
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40ece2
mov     edi, [eax]
mov     ebp, [esi+1ch]
xor     edx, edx
add     ecx, 8
mov     dl, [edi]
mov     [esi+20h], ecx
shl     ebp, 8
or      ebp, edx
mov     [esi+1ch], ebp
mov     ebp, [eax]
inc     ebp
mov     [eax], ebp
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40e7bc
inc     dword ptr [eax+0ch]
jmp     short loc_40e7bc
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-1]
shr     eax, cl
mov     ecx, [esp+88h+var_64]
and     eax, 1
dec     edx
mov     [esi+20h], edx
lea     edx, [ecx+ecx]
or      edx, eax
mov     [esp+88h+var_24], eax
mov     [esp+88h+var_64], edx
mov     eax, edx
jmp     loc_40e78e
mov     ecx, [esp+88h+var_44]
sub     eax, [ecx+ebx*4]
js      loc_40e319
cmp     eax, 102h
jge     loc_40e319
mov     edx, [esp+88h+var_40]
mov     eax, [edx+eax*4]
test    eax, eax
mov     [esp+88h+var_4c], eax
jz      loc_40e665
cmp     eax, 1
jz      loc_40e665
mov     eax, [esi+1e7ch]
xor     ecx, ecx
mov     edx, [esp+88h+var_68]
mov     cl, [eax+esi+0e7ch]
inc     edx
mov     [esp+88h+var_68], edx
mov     cl, [ecx+esi+0d7ch]
mov     byte ptr [esp+88h+var_60], cl
mov     eax, [esp+88h+var_60]
and     eax, 0ffh
mov     ebp, [esi+eax*4+40h]
add     ebp, edx
mov     [esi+eax*4+40h], ebp
cmp     byte ptr [esi+28h], 0
jz      short loc_40e8ed
test    edx, edx
jle     loc_40e351
mov     eax, [esp+88h+var_70]
cmp     eax, [esp+88h+var_28]
jge     short loc_40e8db
mov     ebp, [esi+0c50h]
inc     eax
movzx   di, cl
mov     [ebp+eax*2-2], di
dec     edx
test    edx, edx
jg      short loc_40e8b3
mov     [esp+88h+var_68], edx
mov     [esp+88h+var_70], eax
jmp     loc_40e351
mov     [esp+88h+var_68], edx
mov     [esp+88h+var_70], eax
mov     edi, 0fffffffch
jmp     loc_40f1b4
test    edx, edx
jle     loc_40e351
mov     edx, [esp+88h+var_68]
mov     edi, [esp+88h+var_28]
mov     ecx, [esp+88h+var_70]
cmp     ecx, edi
jge     loc_40e319
mov     ebp, [esi+0c4ch]
inc     ecx
dec     edx
mov     [esp+88h+var_70], ecx
mov     [ebp+ecx*4-4], eax
mov     [esp+88h+var_68], edx
test    edx, edx
jg      short loc_40e901
jmp     loc_40e351
mov     eax, [esi+34h]
xor     ecx, ecx
cmp     eax, ecx
jl      loc_40e319
mov     edi, [esp+88h+var_70]
cmp     eax, edi
jge     loc_40e319
lea     eax, [esi+448h]
mov     [esi+0ch], ecx
mov     [esi+8], cl
mov     [esi+444h], ecx
mov     dword ptr [esi+0c60h], 0ffffffffh
mov     dword ptr [esi+4], 2
mov     ecx, eax
mov     edx, 100h
mov     ebp, [ecx-408h]
mov     [ecx], ebp
add     ecx, 4
dec     edx
jnz     short loc_40e969
mov     ecx, 100h
mov     edx, [eax-4]
mov     ebp, [eax]
add     ebp, edx
mov     [eax], ebp
add     eax, 4
dec     ecx
jnz     short loc_40e97c
mov     al, [esi+28h]
test    al, al
jz      loc_40ec03
lea     eax, [esi+848h]
mov     ecx, 101h
mov     edx, [eax-404h]
mov     [eax], edx
add     eax, 4
dec     ecx
jnz     short loc_40e9a1
xor     eax, eax
test    edi, edi
jle     short loc_40ea2f
mov     ecx, [esi+0c50h]
mov     dl, [ecx+eax*2]
lea     ecx, [ecx+eax*2]
mov     byte ptr [esp+88h+var_60], dl
mov     edx, [esp+88h+var_60]
and     edx, 0ffh
test    al, 1
lea     edi, [esi+edx*4+848h]
mov     dx, [esi+edx*4+848h]
mov     [ecx], dx
mov     ecx, eax
jnz     short loc_40ea04
mov     edx, [esi+0c54h]
sar     ecx, 1
lea     ebp, [edx+ecx]
mov     ecx, [edi]
sar     ecx, 10h
mov     dl, [ebp+0]
and     dl, 0f0h
or      cl, dl
mov     [ebp+0], cl
jmp     short loc_40ea21
mov     edx, [esi+0c54h]
sar     ecx, 1
lea     ebp, [edx+ecx]
mov     ecx, [edi]
sar     ecx, 0ch
mov     dl, [ebp+0]
xor     dl, cl
and     dl, 0fh
xor     dl, cl
mov     [ebp+0], dl
mov     ebx, [edi]
mov     ecx, [esp+88h+var_70]
inc     ebx
inc     eax
cmp     eax, ecx
mov     [edi], ebx
jl      short loc_40e9b5
mov     edx, [esi+34h]
mov     ecx, [esi+0c54h]
mov     eax, edx
xor     ebx, ebx
sar     eax, 1
xor     edi, edi
mov     [esp+88h+var_74], edx
mov     bl, [eax+ecx]
mov     cl, dl
and     cl, 1
mov     eax, ebx
shl     cl, 2
shr     eax, cl
mov     ecx, [esi+0c50h]
mov     di, [ecx+edx*2]
and     eax, 0fh
shl     eax, 10h
or      eax, edi
mov     [esp+88h+var_6c], eax
mov     eax, [esp+88h+var_6c]
mov     ecx, [esi+0c50h]
mov     edx, eax
mov     ebx, eax
lea     edi, [ecx+eax*2]
mov     eax, [esi+0c54h]
sar     edx, 1
xor     ecx, ecx
and     ebx, 1
mov     cl, [edx+eax]
xor     ebp, ebp
mov     eax, ecx
mov     cl, bl
shl     cl, 2
shr     eax, cl
xor     ecx, ecx
mov     [esp+88h+var_c], edi
mov     cx, [edi]
and     eax, 0fh
shl     eax, 10h
or      eax, ecx
mov     cx, word ptr [esp+88h+var_74]
mov     [edi], cx
mov     ecx, [esi+0c54h]
cmp     ebx, ebp
lea     edi, [edx+ecx]
mov     ecx, [esp+88h+var_74]
jnz     short loc_40eacd
mov     dl, [edi]
sar     ecx, 10h
and     dl, 0f0h
or      cl, dl
mov     [edi], cl
jmp     short loc_40eadb
mov     dl, [edi]
sar     ecx, 0ch
xor     dl, cl
and     dl, 0fh
xor     dl, cl
mov     [edi], dl
mov     ecx, [esp+88h+var_6c]
mov     [esp+88h+var_6c], eax
mov     eax, [esi+34h]
mov     [esp+88h+var_74], ecx
cmp     ecx, eax
jnz     loc_40ea69
mov     ecx, eax
mov     al, [esi+10h]
test    al, al
mov     [esi+38h], ecx
mov     [esi+440h], ebp
jz      loc_40eba5
lea     eax, [esi+444h]
mov     [esi+14h], ebp
push    eax
push    ecx
mov     [esi+18h], ebp
call    sub_40c0f0
mov     edx, [esi+38h]
mov     edi, [esi+0c54h]
mov     ecx, edx
xor     ebx, ebx
shr     ecx, 1
mov     [esi+3ch], eax
add     esp, 8
mov     bl, [ecx+edi]
mov     cl, dl
and     cl, 1
xor     edi, edi
shl     cl, 2
shr     ebx, cl
mov     ecx, [esi+0c50h]
mov     di, [ecx+edx*2]
mov     edx, [esi+440h]
mov     ecx, [esi+14h]
and     ebx, 0fh
shl     ebx, 10h
or      ebx, edi
inc     edx
cmp     ecx, ebp
mov     [esi+38h], ebx
mov     [esi+440h], edx
jnz     short loc_40eb84
mov     ecx, [esi+18h]
mov     edx, dword_4189f8[ecx*4]
inc     ecx
cmp     ecx, 200h
mov     [esi+14h], edx
mov     [esi+18h], ecx
jnz     short loc_40eb84
mov     [esi+18h], ebp
mov     ebx, [esi+14h]
xor     edx, edx
dec     ebx
mov     ecx, ebx
mov     [esi+14h], ebx
mov     ebx, [esp+88h+var_78]
cmp     ecx, 1
setz    dl
xor     edx, eax
xor     edi, edi
mov     [esi+3ch], edx
jmp     loc_40f1b4
lea     eax, [esi+444h]
push    eax
push    ecx
call    sub_40c0f0
mov     edx, [esi+0c54h]
mov     [esi+3ch], eax
mov     eax, [esi+38h]
xor     ebx, ebx
mov     ecx, eax
add     esp, 8
shr     ecx, 1
mov     bl, [ecx+edx]
mov     cl, al
and     cl, 1
xor     edx, edx
shl     cl, 2
shr     ebx, cl
mov     ecx, [esi+0c50h]
mov     dx, [ecx+eax*2]
mov     eax, [esi+440h]
and     ebx, 0fh
shl     ebx, 10h
or      ebx, edx
inc     eax
mov     [esi+38h], ebx
mov     ebx, [esp+88h+var_78]
mov     [esi+440h], eax
xor     edi, edi
jmp     loc_40f1b4
xor     ebp, ebp
xor     edx, edx
cmp     edi, ebp
mov     [esp+88h+var_74], edx
jle     short loc_40ec4f
mov     ecx, [esi+0c4ch]
mov     al, [ecx+edx*4]
mov     byte ptr [esp+88h+var_60], al
mov     eax, [esp+88h+var_60]
and     eax, 0ffh
mov     edi, [esi+eax*4+444h]
lea     eax, [esi+eax*4+444h]
lea     ecx, [ecx+edi*4]
mov     edi, edx
shl     edi, 8
or      [ecx], edi
mov     edi, [eax]
inc     edi
inc     edx
mov     [eax], edi
mov     eax, [esp+88h+var_70]
cmp     edx, eax
jl      short loc_40ec0f
mov     [esp+88h+var_74], edx
mov     eax, [esi+0c4ch]
mov     ecx, [esi+34h]
mov     edx, [eax+ecx*4]
mov     cl, [esi+10h]
shr     edx, 8
test    cl, cl
mov     [esi+38h], edx
mov     [esi+440h], ebp
jz      short loc_40ecc0
mov     ecx, edx
mov     [esi+14h], ebp
mov     [esi+18h], ebp
mov     edx, [eax+ecx*4]
xor     eax, eax
mov     edi, edx
mov     [esi+38h], edx
shr     edi, 8
mov     [esi+38h], edi
mov     al, dl
mov     edi, 1
mov     [esi+3ch], eax
mov     [esi+440h], edi
mov     ecx, dword_4189f8
mov     edx, ecx
mov     [esi+14h], ecx
dec     edx
mov     [esi+18h], edi
mov     [esi+14h], edx
mov     eax, edx
xor     edx, edx
cmp     eax, edi
mov     eax, [esi+3ch]
setz    dl
xor     eax, edx
xor     edi, edi
mov     [esi+3ch], eax
jmp     loc_40f1b4
mov     ecx, [esi+38h]
mov     edx, [eax+ecx*4]
xor     eax, eax
mov     al, dl
mov     [esi+38h], edx
mov     [esi+3ch], eax
mov     eax, edx
shr     eax, 8
mov     [esi+38h], eax
mov     dword ptr [esi+440h], 1
xor     edi, edi
jmp     loc_40f1b4
mov     dword ptr [esi+4], 2ah
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40ed41
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40ecf0
inc     dword ptr [eax+0ch]
jmp     short loc_40ecf0
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 72h
jz      short loc_40ed69
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+4], 2bh
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40edc1
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40ed70
inc     dword ptr [eax+0ch]
jmp     short loc_40ed70
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 45h
jz      short loc_40ede9
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+4], 2ch
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40ee41
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40edf0
inc     dword ptr [eax+0ch]
jmp     short loc_40edf0
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 38h
jz      short loc_40ee69
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+4], 2dh
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40eec1
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40ee70
inc     dword ptr [eax+0ch]
jmp     short loc_40ee70
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 50h
jz      short loc_40eee9
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+4], 2eh
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40ef41
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40eef0
inc     dword ptr [eax+0ch]
jmp     short loc_40eef0
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     [esi+20h], edx
and     eax, 0ffh
cmp     al, 90h
jz      short loc_40ef69
mov     ebx, [esp+88h+var_78]
mov     edi, 0fffffffch
jmp     loc_40f1b4
mov     dword ptr [esi+0c5ch], 0
mov     dword ptr [esi+4], 2fh
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40efcb
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40ef7a
inc     dword ptr [eax+0ch]
jmp     short loc_40ef7a
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     ecx, [esi+0c5ch]
mov     [esi+20h], edx
shl     ecx, 8
and     eax, 0ffh
and     eax, 0ffh
or      ecx, eax
mov     [esi+0c5ch], ecx
mov     dword ptr [esi+4], 30h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40f04f
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40effe
inc     dword ptr [eax+0ch]
jmp     short loc_40effe
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     ecx, [esi+0c5ch]
mov     [esi+20h], edx
shl     ecx, 8
and     eax, 0ffh
and     eax, 0ffh
or      ecx, eax
mov     [esi+0c5ch], ecx
mov     dword ptr [esi+4], 31h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40f0d3
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40f082
inc     dword ptr [eax+0ch]
jmp     short loc_40f082
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     ecx, [esi+0c5ch]
mov     [esi+20h], edx
shl     ecx, 8
and     eax, 0ffh
and     eax, 0ffh
or      ecx, eax
mov     [esi+0c5ch], ecx
mov     dword ptr [esi+4], 32h
mov     ecx, [esi+20h]
cmp     ecx, 8
jge     short loc_40f153
mov     eax, [esi]
mov     edx, [eax+4]
test    edx, edx
jz      short loc_40f191
mov     edi, [eax]
mov     edx, [esi+1ch]
xor     ebx, ebx
add     ecx, 8
mov     bl, [edi]
mov     [esi+20h], ecx
shl     edx, 8
or      edx, ebx
mov     [esi+1ch], edx
mov     ebx, [eax]
inc     ebx
mov     [eax], ebx
mov     eax, [esi]
mov     edi, [eax+4]
dec     edi
mov     [eax+4], edi
mov     eax, [esi]
mov     edx, [eax+8]
inc     edx
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [eax+8]
test    ecx, ecx
jnz     short loc_40f106
inc     dword ptr [eax+0ch]
jmp     short loc_40f106
mov     edx, [esi+20h]
mov     eax, [esi+1ch]
mov     ebx, [esp+88h+var_78]
mov     dword ptr [esi+4], 1
lea     ecx, [edx-8]
add     edx, 0fffffff8h
shr     eax, cl
mov     ecx, [esi+0c5ch]
mov     [esi+20h], edx
shl     ecx, 8
mov     edi, 4
and     eax, 0ffh
and     eax, 0ffh
or      ecx, eax
mov     [esi+0c5ch], ecx
jmp     short loc_40f1b4
mov     ebx, [esp+88h+var_78]
xor     edi, edi
jmp     short loc_40f1b4
mov     ebx, [esp+88h+var_78]
push    0fa1h
call    nullsub_1
push    0fa2h
call    nullsub_1
add     esp, 8
mov     edx, [esp+88h+var_74]
mov     eax, [esp+88h+var_6c]
mov     ecx, [esp+88h+var_5c]
mov     [esi+0fa14h], edx
mov     edx, [esp+88h+var_3c]
mov     [esi+0fa18h], eax
mov     eax, [esp+88h+var_2c]
mov     [esi+0fa1ch], ecx
mov     ecx, [esp+88h+var_54]
mov     [esi+0fa20h], edx
mov     edx, [esp+88h+var_1c]
mov     [esi+0fa24h], eax
mov     eax, [esp+88h+var_38]
mov     [esi+0fa28h], ecx
mov     ecx, [esp+88h+var_50]
mov     [esi+0fa2ch], edx
mov     edx, [esp+88h+var_4c]
mov     [esi+0fa30h], eax
mov     eax, [esp+88h+var_28]
mov     [esi+0fa34h], ecx
mov     ecx, [esp+88h+var_70]
mov     [esi+0fa38h], edx
mov     edx, [esp+88h+var_68]
mov     [esi+0fa3ch], eax
mov     eax, [esp+88h+var_34]
mov     [esi+0fa40h], ecx
mov     ecx, [esp+88h+var_58]
mov     [esi+0fa44h], edx
mov     edx, [esp+88h+var_4]
mov     [esi+0fa48h], eax
mov     eax, [esp+88h+var_64]
mov     [esi+0fa4ch], ecx
mov     ecx, [esp+88h+var_24]
mov     [esi+0fa58h], eax
mov     eax, [esp+88h+var_30]
mov     [esi+0fa50h], edx
mov     edx, [esp+88h+var_20]
mov     [esi+0fa64h], eax
mov     eax, [esp+88h+var_40]
mov     [esi+0fa5ch], ecx
mov     ecx, [esp+88h+var_48]
mov     [esi+0fa60h], edx
mov     edx, [esp+88h+var_44]
mov     [esi+0fa70h], eax
mov     eax, edi
mov     [esi+0fa54h], ebx
mov     [esi+0fa68h], ecx
mov     [esi+0fa6ch], edx
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 78h
retn
mov     eax, [esp+arg_0]
xor     ecx, ecx
mov     dword ptr [eax+0c68h], 0
mov     dl, [eax+ecx+0c6ch]
test    dl, dl
jz      short loc_40f395
mov     edx, [eax+0c68h]
mov     [eax+edx+0d7ch], cl
mov     edx, [eax+0c68h]
inc     edx
mov     [eax+0c68h], edx
inc     ecx
cmp     ecx, 100h
jl      short loc_40f370
retn
mov     eax, [esp+arg_10]
push    ebx
mov     ebx, [esp+4+arg_18]
push    ebp
mov     ebp, [esp+8+arg_14]
push    esi
xor     esi, esi
push    edi
cmp     eax, ebp
mov     edi, eax
jg      short loc_40f3e6
xor     eax, eax
test    ebx, ebx
jle     short loc_40f3e1
mov     ecx, [esp+10h+arg_8]
lea     ecx, [ecx+esi*4]
mov     ebx, [esp+10h+arg_c]
xor     edx, edx
mov     dl, [eax+ebx]
cmp     edx, edi
jnz     short loc_40f3d8
mov     [ecx], eax
inc     esi
add     ecx, 4
mov     ebx, [esp+10h+arg_18]
inc     eax
cmp     eax, ebx
jl      short loc_40f3c5
inc     edi
cmp     edi, ebp
jle     short loc_40f3b8
mov     edx, [esp+10h+arg_4]
mov     ecx, 17h
xor     eax, eax
mov     edi, edx
test    ebx, ebx
rep stosd
jle     short loc_40f412
mov     esi, [esp+10h+arg_c]
xor     ecx, ecx
mov     cl, [eax+esi]
mov     edi, [edx+ecx*4+4]
lea     ecx, [edx+ecx*4+4]
inc     edi
inc     eax
cmp     eax, ebx
mov     [ecx], edi
jl      short loc_40f3f9
lea     eax, [edx+4]
mov     ecx, 16h
mov     esi, [eax-4]
mov     ebx, [eax]
add     ebx, esi
mov     [eax], ebx
add     eax, 4
dec     ecx
jnz     short loc_40f41a
mov     ebx, [esp+10h+arg_0]
mov     ecx, 17h
xor     eax, eax
mov     edi, ebx
rep stosd
mov     ecx, [esp+10h+arg_10]
xor     esi, esi
cmp     ecx, ebp
jg      short loc_40f470
lea     eax, [edx+ecx*4]
mov     edi, ebx
mov     ebx, [esp+10h+arg_10]
mov     ecx, ebp
sub     ecx, ebx
sub     edi, edx
inc     ecx
mov     ebx, [eax+4]
sub     ebx, [eax]
add     eax, 4
add     esi, ebx
lea     ebx, [esi-1]
mov     [edi+eax-4], ebx
shl     esi, 1
dec     ecx
jnz     short loc_40f452
mov     ebx, [esp+10h+arg_0]
mov     ecx, [esp+10h+arg_10]
inc     ecx
cmp     ecx, ebp
jg      short loc_40f495
sub     ebp, ecx
lea     eax, [edx+ecx*4]
lea     edx, [ebx+ecx*4-4]
inc     ebp
mov     ecx, [edx]
mov     ebx, [eax]
add     edx, 4
add     eax, 4
lea     ecx, [ecx+ecx+2]
sub     ecx, ebx
dec     ebp
mov     [eax-4], ecx
jnz     short loc_40f47f
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
mov     eax, [esp+arg_0]
xor     edx, edx
cmp     eax, edx
jz      short loc_40f4dc
mov     ecx, [eax+1ch]
cmp     ecx, edx
jz      short loc_40f4dc
push    esi
mov     [eax+14h], edx
mov     [eax+8], edx
mov     [eax+18h], edx
mov     esi, [ecx+0ch]
push    edx
neg     esi
sbb     esi, esi
push    eax
and     esi, 7
mov     [ecx], esi
mov     eax, [eax+1ch]
mov     ecx, [eax+14h]
push    ecx
call    sub_40faa0
add     esp, 0ch
xor     eax, eax
pop     esi
retn
mov     eax, 0fffffffeh
retn
push    esi
mov     esi, [esp+4+arg_0]
test    esi, esi
jz      short loc_40f531
mov     eax, [esi+1ch]
test    eax, eax
jz      short loc_40f531
mov     ecx, [esi+24h]
test    ecx, ecx
jz      short loc_40f531
mov     eax, [eax+14h]
test    eax, eax
jz      short loc_40f518
push    esi
push    eax
call    sub_4108c0
add     esp, 8
mov     eax, [esi+1ch]
mov     ecx, [esi+28h]
push    eax
push    ecx
call    dword ptr [esi+24h]
add     esp, 8
mov     dword ptr [esi+1ch], 0
xor     eax, eax
pop     esi
retn
mov     eax, 0fffffffeh
pop     esi
retn
mov     eax, [esp+arg_8]
push    esi
push    edi
xor     edi, edi
cmp     eax, edi
jz      loc_40f646
mov     al, [eax]
mov     cl, byte ptr a113
cmp     al, cl
jnz     loc_40f646
cmp     [esp+8+arg_c], 38h
jnz     loc_40f646
mov     esi, [esp+8+arg_0]
cmp     esi, edi
jnz     short loc_40f57b
pop     edi
mov     eax, 0fffffffeh
pop     esi
retn
mov     eax, [esi+20h]
mov     [esi+18h], edi
cmp     eax, edi
jnz     short loc_40f58f
mov     dword ptr [esi+20h], offset loc_410a30
mov     [esi+28h], edi
cmp     [esi+24h], edi
jnz     short loc_40f59b
mov     dword ptr [esi+24h], offset sub_410a50
mov     ecx, [esi+28h]
push    18h
push    1
push    ecx
call    dword ptr [esi+20h]
add     esp, 0ch
cmp     eax, edi
mov     [esi+1ch], eax
jnz     short loc_40f5b8
pop     edi
mov     eax, 0fffffffch
pop     esi
retn
mov     ecx, [esp+8+arg_4]
mov     [eax+14h], edi
mov     edx, [esi+1ch]
cmp     ecx, edi
mov     [edx+0ch], edi
jge     short loc_40f5d5
mov     eax, [esi+1ch]
neg     ecx
mov     dword ptr [eax+0ch], 1
cmp     ecx, 8
jl      short loc_40f635
cmp     ecx, 0fh
jg      short loc_40f635
mov     edx, [esi+1ch]
mov     eax, 1
shl     eax, cl
mov     [edx+10h], ecx
mov     ecx, [esi+1ch]
mov     edx, [ecx+0ch]
neg     edx
sbb     edx, edx
push    eax
not     edx
and     edx, offset sub_410900
push    edx
push    esi
call    sub_40fb20
mov     ecx, [esi+1ch]
add     esp, 0ch
mov     [ecx+14h], eax
mov     edx, [esi+1ch]
push    esi
cmp     [edx+14h], edi
jnz     short loc_40f628
call    sub_40f4f0
add     esp, 4
mov     eax, 0fffffffch
pop     edi
pop     esi
retn
call    sub_40f4a0
add     esp, 4
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
call    sub_40f4f0
add     esp, 4
mov     eax, 0fffffffeh
pop     edi
pop     esi
retn
pop     edi
mov     eax, 0fffffffah
pop     esi
retn
mov     eax, [esp+arg_8]
mov     ecx, [esp+arg_4]
mov     edx, [esp+arg_0]
push    eax
push    ecx
push    0fh
push    edx
call    sub_40f540
add     esp, 10h
retn
push    ebx
push    ebp
push    esi
mov     esi, [esp+0ch+arg_0]
test    esi, esi
push    edi
jz      def_40f6c0
mov     eax, [esi+1ch]
test    eax, eax
jz      def_40f6c0
cmp     dword ptr [esi], 0
jz      def_40f6c0
mov     edx, [esp+10h+arg_4]
xor     ebx, ebx
cmp     edx, 4
mov     edi, 0fffffffbh
setnz   bl
dec     ebx
mov     ebp, 5
and     ebx, 0fffffffbh
mov     [esp+10h+arg_4], ebx
mov     eax, [esi+1ch]
mov     ecx, [eax]
cmp     ecx, 0dh
ja      def_40f6c0
jmp     ds:jpt_40f6c0[ecx*4]
mov     ecx, [esi+4]
test    ecx, ecx
jz      loc_40f937
dec     ecx
xor     edx, edx
mov     [esi+4], ecx
mov     ecx, [esi+8]
inc     ecx
mov     edi, ebx
mov     [esi+8], ecx
mov     ecx, [esi]
mov     dl, [ecx]
mov     [eax+4], edx
mov     eax, [esi+1ch]
mov     edx, [esi]
mov     ecx, [eax+4]
and     ecx, 0fh
inc     edx
cmp     cl, 8
mov     [esi], edx
jz      short loc_40f710
mov     dword ptr [eax], 0dh
mov     edx, [esi+1ch]
mov     dword ptr [esi+18h], offset aunknowncompres
mov     [edx+4], ebp
jmp     short loc_40f6b2
mov     ecx, [eax+4]
mov     edx, [eax+10h]
shr     ecx, 4
add     ecx, 8
cmp     ecx, edx
jbe     short loc_40f738
mov     dword ptr [eax], 0dh
mov     edx, [esi+1ch]
mov     dword ptr [esi+18h], offset ainvalidwindows
mov     [edx+4], ebp
jmp     loc_40f6b2
mov     dword ptr [eax], 1
mov     eax, [esi+4]
test    eax, eax
jz      loc_40f937
dec     eax
xor     ecx, ecx
mov     [esi+4], eax
mov     eax, [esi+8]
inc     eax
mov     edi, ebx
mov     ebx, [esi+1ch]
mov     [esi+8], eax
mov     eax, [esi]
xor     edx, edx
mov     ebp, 1fh
mov     cl, [eax]
inc     eax
mov     [esi], eax
mov     eax, [ebx+4]
shl     eax, 8
add     eax, ecx
div     ebp
test    edx, edx
jz      short loc_40f798
mov     dword ptr [ebx], 0dh
mov     eax, [esi+1ch]
mov     ebx, [esp+10h+arg_4]
mov     ebp, 5
mov     dword ptr [esi+18h], offset aincorrectheade
mov     [eax+4], ebp
jmp     loc_40f6b2
test    cl, 20h
jnz     loc_40f91e
mov     dword ptr [ebx], 7
mov     ebx, [esp+10h+arg_4]
mov     ebp, 5
jmp     loc_40f6b2
mov     ecx, [eax+14h]
push    edi
push    esi
push    ecx
call    sub_40fbc0
mov     edi, eax
add     esp, 0ch
cmp     edi, 0fffffffdh
jnz     short loc_40f7e2
mov     edx, [esi+1ch]
mov     dword ptr [edx], 0dh
mov     eax, [esi+1ch]
mov     dword ptr [eax+4], 0
jmp     loc_40f6b2
test    edi, edi
jnz     short loc_40f7e8
mov     edi, ebx
cmp     edi, 1
jnz     loc_40f937
mov     eax, [esi+1ch]
mov     edi, ebx
mov     edx, [eax+14h]
lea     ecx, [eax+4]
push    ecx
push    esi
push    edx
call    sub_40faa0
mov     eax, [esi+1ch]
add     esp, 0ch
mov     ecx, [eax+0ch]
test    ecx, ecx
jz      short loc_40f81c
mov     dword ptr [eax], 0ch
jmp     loc_40f6b2
mov     dword ptr [eax], 8
mov     eax, [esi+4]
test    eax, eax
jz      loc_40f937
dec     eax
mov     edx, [esi+1ch]
mov     [esi+4], eax
mov     eax, [esi+8]
inc     eax
xor     ecx, ecx
mov     [esi+8], eax
mov     eax, [esi]
mov     edi, ebx
mov     cl, [eax]
shl     ecx, 18h
mov     [edx+8], ecx
mov     eax, [esi]
inc     eax
mov     [esi], eax
mov     eax, [esi+1ch]
mov     dword ptr [eax], 9
mov     eax, [esi+4]
test    eax, eax
jz      loc_40f937
mov     edx, [esi+8]
mov     ecx, [esi]
dec     eax
inc     edx
mov     [esi+8], edx
mov     [esi+4], eax
mov     eax, [esi+1ch]
xor     edx, edx
mov     dl, [ecx]
mov     edi, ebx
mov     ecx, [eax+8]
shl     edx, 10h
add     ecx, edx
mov     [eax+8], ecx
mov     eax, [esi]
inc     eax
mov     [esi], eax
mov     eax, [esi+1ch]
mov     dword ptr [eax], 0ah
mov     eax, [esi+4]
test    eax, eax
jz      loc_40f937
mov     edx, [esi+8]
mov     ecx, [esi]
dec     eax
inc     edx
mov     [esi+8], edx
mov     [esi+4], eax
mov     eax, [esi+1ch]
xor     edx, edx
mov     dl, [ecx]
mov     edi, ebx
mov     ecx, [eax+8]
shl     edx, 8
add     ecx, edx
mov     [eax+8], ecx
mov     eax, [esi]
inc     eax
mov     [esi], eax
mov     eax, [esi+1ch]
mov     dword ptr [eax], 0bh
mov     eax, [esi+4]
test    eax, eax
jz      short loc_40f937
mov     edx, [esi+8]
mov     ecx, [esi]
dec     eax
inc     edx
mov     [esi+4], eax
mov     eax, [esi+1ch]
mov     [esi+8], edx
xor     edx, edx
mov     dl, [ecx]
mov     ecx, [eax+8]
add     ecx, edx
mov     edi, ebx
mov     [eax+8], ecx
mov     eax, [esi]
inc     eax
mov     [esi], eax
mov     eax, [esi+1ch]
mov     ecx, [eax+4]
mov     edx, [eax+8]
cmp     ecx, edx
jz      loc_40fa4a
mov     dword ptr [eax], 0dh
mov     edx, [esi+1ch]
mov     dword ptr [esi+18h], offset aincorrectdatac
mov     [edx+4], ebp
jmp     loc_40f6b2
mov     eax, [esi+1ch]
mov     ebx, [esp+10h+arg_4]
mov     ebp, 5
mov     dword ptr [eax], 2
mov     eax, [esi+4]
test    eax, eax
jnz     short loc_40f93e
mov     eax, edi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
mov     edx, [esi+8]
mov     ecx, [esi]
dec     eax
inc     edx
mov     [esi+8], edx
xor     edx, edx
mov     [esi+4], eax
mov     dl, [ecx]
mov     eax, [esi+1ch]
mov     edi, ebx
shl     edx, 18h
mov     [eax+8], edx
mov     eax, [esi]
mov     ecx, [esi+1ch]
inc     eax
mov     [esi], eax
mov     dword ptr [ecx], 3
mov     eax, [esi+4]
test    eax, eax
jnz     short loc_40f976
mov     eax, edi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
mov     edx, [esi]
dec     eax
mov     [esi+4], eax
mov     eax, [esi+8]
inc     eax
xor     ecx, ecx
mov     [esi+8], eax
mov     eax, [esi+1ch]
mov     cl, [edx]
mov     edi, ebx
mov     edx, [eax+8]
shl     ecx, 10h
add     edx, ecx
mov     [eax+8], edx
mov     eax, [esi]
mov     edx, [esi+1ch]
inc     eax
mov     [esi], eax
mov     dword ptr [edx], 4
mov     eax, [esi+4]
test    eax, eax
jnz     short loc_40f9b3
mov     eax, edi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
mov     ecx, [esi]
dec     eax
mov     [esi+4], eax
mov     eax, [esi+8]
inc     eax
xor     edx, edx
mov     [esi+8], eax
mov     eax, [esi+1ch]
mov     dl, [ecx]
mov     edi, ebx
mov     ecx, [eax+8]
shl     edx, 8
add     ecx, edx
mov     [eax+8], ecx
mov     eax, [esi]
inc     eax
mov     [esi], eax
mov     eax, [esi+1ch]
mov     [eax], ebp
mov     eax, [esi+4]
test    eax, eax
jnz     short loc_40f9ec
mov     eax, edi
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
mov     edx, [esi+8]
mov     ecx, [esi]
dec     eax
inc     edx
mov     [esi+4], eax
mov     eax, [esi+1ch]
mov     [esi+8], edx
xor     edx, edx
mov     dl, [ecx]
mov     ecx, [eax+8]
add     ecx, edx
pop     edi
mov     [eax+8], ecx
mov     eax, [esi]
inc     eax
mov     [esi], eax
mov     eax, [esi+1ch]
mov     ecx, [eax+8]
mov     [esi+30h], ecx
pop     esi
mov     dword ptr [eax], 6
pop     ebp
mov     eax, 2
pop     ebx
retn
mov     edx, [esi+1ch]
mov     dword ptr [edx], 0dh
mov     eax, [esi+1ch]
mov     dword ptr [esi+18h], offset aneeddictionary
mov     dword ptr [eax+4], 0
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffffffeh
pop     ebx
retn
mov     ecx, [esi+1ch]
mov     dword ptr [ecx], 0ch
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
retn
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffffffdh
pop     ebx
retn
mov     eax, [esp+arg_8]
push    esi
mov     esi, [esp+4+arg_0]
push    edi
test    eax, eax
jz      short loc_40fab3
mov     ecx, [esi+3ch]
mov     [eax], ecx
mov     eax, [esi]
mov     edi, [esp+8+arg_4]
cmp     eax, 4
jz      short loc_40fac3
cmp     eax, 5
jnz     short loc_40fad1
mov     edx, [esi+0ch]
mov     eax, [edi+28h]
push    edx
push    eax
call    dword ptr [edi+24h]
add     esp, 8
cmp     dword ptr [esi], 6
jnz     short loc_40fae3
mov     ecx, [esi+4]
push    edi
push    ecx
call    sub_411250
add     esp, 8
mov     eax, [esi+28h]
mov     dword ptr [esi], 0
mov     [esi+34h], eax
mov     [esi+30h], eax
mov     eax, [esi+38h]
mov     dword ptr [esi+1ch], 0
test    eax, eax
mov     dword ptr [esi+20h], 0
jz      short loc_40fb18
push    0
push    0
push    0
call    eax
mov     [esi+3ch], eax
add     esp, 0ch
mov     [edi+30h], eax
pop     edi
pop     esi
retn
push    ebx
push    esi
push    edi
mov     edi, [esp+0ch+arg_0]
push    40h
push    1
mov     eax, [edi+28h]
push    eax
call    dword ptr [edi+20h]
mov     esi, eax
add     esp, 0ch
test    esi, esi
jnz     short loc_40fb3f
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [edi+28h]
push    5a0h
push    8
push    ecx
call    dword ptr [edi+20h]
add     esp, 0ch
mov     [esi+24h], eax
test    eax, eax
jnz     short loc_40fb68
mov     edx, [edi+28h]
push    esi
push    edx
call    dword ptr [edi+24h]
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ebx, [esp+0ch+arg_8]
mov     eax, [edi+28h]
push    ebx
push    1
push    eax
call    dword ptr [edi+20h]
add     esp, 0ch
mov     [esi+28h], eax
test    eax, eax
jnz     short loc_40fb9c
mov     ecx, [esi+24h]
mov     edx, [edi+28h]
push    ecx
push    edx
call    dword ptr [edi+24h]
mov     eax, [edi+28h]
push    esi
push    eax
call    dword ptr [edi+24h]
add     esp, 10h
xor     eax, eax
pop     edi
pop     esi
pop     ebx
retn
mov     ecx, [esp+0ch+arg_4]
push    0
add     eax, ebx
push    edi
push    esi
mov     [esi+2ch], eax
mov     [esi+38h], ecx
mov     dword ptr [esi], 0
call    sub_40faa0
add     esp, 0ch
mov     eax, esi
pop     edi
pop     esi
pop     ebx
retn
sub     esp, 30h
mov     eax, [esp+30h+arg_4]
push    ebx
mov     ebx, [esp+34h+arg_0]
push    ebp
mov     ecx, [eax]
mov     edx, [eax+4]
mov     eax, [ebx+20h]
mov     ebp, [ebx+1ch]
mov     [esp+38h+var_30], ecx
mov     ecx, [ebx+34h]
mov     [esp+38h+var_28], eax
mov     eax, [ebx+30h]
push    esi
cmp     ecx, eax
push    edi
mov     [esp+40h+var_2c], edx
mov     [esp+40h+arg_0], ecx
jnb     short loc_40fbf9
sub     eax, ecx
dec     eax
jmp     short loc_40fbfe
mov     eax, [ebx+2ch]
sub     eax, ecx
mov     [esp+40h+var_24], eax
mov     eax, [ebx]
cmp     eax, 9
ja      def_40fc0d
jmp     ds:jpt_40fc0d[eax*4]
mov     esi, [esp+40h+var_28]
cmp     ebp, 3
jnb     short loc_40fc59
mov     eax, [esp+40h+var_2c]
mov     edi, [esp+40h+var_30]
test    eax, eax
jz      loc_410334
xor     ecx, ecx
dec     eax
mov     cl, [edi]
mov     [esp+40h+arg_8], 0
mov     edx, ecx
mov     ecx, ebp
shl     edx, cl
add     ebp, 8
mov     [esp+40h+var_2c], eax
or      esi, edx
inc     edi
cmp     ebp, 3
mov     [esp+40h+var_28], esi
mov     [esp+40h+var_30], edi
jb      short loc_40fc25
jmp     short loc_40fc5d
mov     edi, [esp+40h+var_30]
mov     eax, esi
and     eax, 7
mov     ecx, eax
shr     eax, 1
and     ecx, 1
cmp     eax, 3
mov     [ebx+18h], ecx
ja      short def_40fc71
jmp     ds:jpt_40fc71[eax*4]
sub     ebp, 3
mov     dword ptr [ebx], 1
mov     ecx, ebp
and     ecx, 7
shr     esi, 3
shr     esi, cl
sub     ebp, ecx
mov     [esp+40h+var_28], esi
jmp     def_40fc71
mov     edx, [esp+40h+arg_4]
lea     eax, [esp+40h+var_1c]
push    edx
lea     ecx, [esp+44h+var_18]
push    eax
lea     edx, [esp+48h+var_14]
push    ecx
lea     eax, [esp+4ch+var_10]
push    edx
push    eax
call    sub_411980
mov     ecx, [esp+54h+arg_4]
mov     edx, [esp+54h+var_1c]
mov     eax, [esp+54h+var_18]
push    ecx
mov     ecx, [esp+58h+var_14]
push    edx
mov     edx, [esp+5ch+var_10]
push    eax
push    ecx
push    edx
call    sub_410a60
add     esp, 28h
mov     [ebx+4], eax
test    eax, eax
jz      loc_410373
shr     esi, 3
mov     [esp+40h+var_28], esi
sub     ebp, 3
mov     dword ptr [ebx], 6
jmp     def_40fc71
shr     esi, 3
mov     [esp+40h+var_28], esi
sub     ebp, 3
mov     dword ptr [ebx], 3
jmp     def_40fc71
mov     esi, [esp+40h+var_28]
mov     edi, [esp+40h+var_2c]
mov     eax, [esp+40h+var_30]
cmp     ebp, 20h
jnb     short loc_40fd47
xor     edx, edx
cmp     edi, edx
jz      loc_4103fe
xor     ecx, ecx
mov     [esp+40h+arg_8], edx
mov     cl, [eax]
dec     edi
mov     edx, ecx
mov     ecx, ebp
shl     edx, cl
add     ebp, 8
mov     [esp+40h+var_2c], edi
or      esi, edx
inc     eax
cmp     ebp, 20h
mov     [esp+40h+var_30], eax
jb      short loc_40fd1b
mov     edx, esi
mov     ecx, esi
not     edx
and     ecx, 0ffffh
shr     edx, 10h
xor     edx, ecx
jnz     loc_410439
xor     ebp, ebp
mov     eax, ecx
cmp     eax, ebp
mov     [ebx+4], ecx
mov     [esp+40h+var_28], ebp
jz      loc_40fe9b
mov     eax, 2
mov     [ebx], eax
jmp     def_40fc71
mov     edi, [esp+40h+var_2c]
test    edi, edi
jz      loc_41047e
mov     ecx, [esp+40h+var_24]
test    ecx, ecx
jnz     loc_40fe36
mov     ecx, [ebx+2ch]
mov     edx, [esp+40h+arg_0]
cmp     edx, ecx
jnz     short loc_40fdc5
mov     eax, [ebx+30h]
mov     esi, [ebx+28h]
cmp     eax, esi
jz      short loc_40fdc5
mov     edx, esi
cmp     edx, eax
mov     [esp+40h+arg_0], edx
jnb     short loc_40fdbb
sub     eax, edx
dec     eax
mov     ecx, eax
jmp     short loc_40fdbd
sub     ecx, edx
test    ecx, ecx
mov     [esp+40h+var_24], ecx
jnz     short loc_40fe36
mov     eax, [esp+40h+arg_8]
mov     edi, [esp+40h+arg_4]
push    eax
push    edi
push    ebx
mov     [ebx+34h], edx
call    sub_4119b0
mov     edx, [ebx+34h]
mov     esi, [ebx+30h]
add     esp, 0ch
cmp     edx, esi
mov     [esp+40h+arg_8], eax
mov     [esp+40h+arg_0], edx
jnb     short loc_40fdf4
mov     ecx, esi
sub     ecx, edx
dec     ecx
jmp     short loc_40fdf9
mov     ecx, [ebx+2ch]
sub     ecx, edx
mov     eax, [ebx+2ch]
mov     [esp+40h+var_24], ecx
cmp     edx, eax
mov     [esp+40h+var_20], eax
jnz     short loc_40fe2a
mov     eax, [ebx+28h]
cmp     esi, eax
jz      short loc_40fe2a
mov     edx, eax
cmp     edx, esi
mov     [esp+40h+arg_0], edx
jnb     short loc_40fe20
sub     esi, edx
dec     esi
mov     ecx, esi
jmp     short loc_40fe26
mov     ecx, [esp+40h+var_20]
sub     ecx, edx
mov     [esp+40h+var_24], ecx
test    ecx, ecx
jz      loc_4104c5
mov     edi, [esp+40h+var_2c]
mov     eax, [ebx+4]
mov     [esp+40h+arg_8], 0
cmp     eax, edi
jbe     short loc_40fe47
mov     eax, edi
cmp     eax, ecx
jbe     short loc_40fe4d
mov     eax, ecx
mov     esi, [esp+40h+var_30]
mov     edi, [esp+40h+arg_0]
mov     ecx, eax
mov     edx, ecx
shr     ecx, 2
rep movsd
mov     ecx, edx
mov     edx, [esp+40h+var_24]
and     ecx, 3
sub     edx, eax
rep movsb
mov     ecx, [esp+40h+var_30]
mov     edi, [esp+40h+var_2c]
mov     esi, [esp+40h+arg_0]
add     ecx, eax
mov     [esp+40h+var_30], ecx
mov     ecx, [ebx+4]
sub     edi, eax
add     esi, eax
sub     ecx, eax
mov     [esp+40h+var_2c], edi
mov     [esp+40h+arg_0], esi
mov     [esp+40h+var_24], edx
mov     [ebx+4], ecx
jnz     def_40fc71
mov     eax, [ebx+18h]
neg     eax
sbb     eax, eax
and     eax, 7
mov     [ebx], eax
jmp     def_40fc71
mov     edi, [esp+40h+var_28]
cmp     ebp, 0eh
jnb     short loc_40feeb
mov     esi, [esp+40h+var_2c]
mov     eax, [esp+40h+var_30]
test    esi, esi
jz      loc_410504
xor     ecx, ecx
dec     esi
mov     cl, [eax]
mov     [esp+40h+arg_8], 0
mov     edx, ecx
mov     ecx, ebp
shl     edx, cl
add     ebp, 8
mov     [esp+40h+var_2c], esi
or      edi, edx
inc     eax
cmp     ebp, 0eh
mov     [esp+40h+var_30], eax
jb      short loc_40febd
mov     eax, edi
and     eax, 3fffh
mov     ecx, eax
mov     [ebx+4], eax
and     ecx, 1fh
cmp     ecx, 1dh
ja      loc_410583
mov     edx, eax
and     edx, 3e0h
cmp     edx, 3a0h
ja      loc_410583
mov     esi, [esp+40h+arg_4]
push    4
shr     eax, 5
and     eax, 1fh
lea     eax, [eax+ecx+102h]
mov     ecx, [esi+28h]
push    eax
push    ecx
call    dword ptr [esi+20h]
add     esp, 0ch
mov     [ebx+0ch], eax
test    eax, eax
jz      loc_410547
shr     edi, 0eh
sub     ebp, 0eh
mov     dword ptr [ebx+8], 0
mov     dword ptr [ebx], 4
jmp     short loc_40ff5d
mov     edi, [esp+40h+var_28]
mov     esi, [esp+40h+arg_4]
mov     edx, [ebx+4]
mov     eax, [ebx+8]
shr     edx, 0ah
add     edx, 4
cmp     eax, edx
jnb     short loc_40ffdb
cmp     ebp, 3
jnb     short loc_40ffaa
mov     eax, [esp+40h+var_30]
mov     ecx, [esp+40h+var_2c]
test    ecx, ecx
jz      loc_4105d0
mov     edx, ecx
xor     ecx, ecx
mov     cl, [eax]
dec     edx
mov     [esp+40h+var_2c], edx
mov     edx, ecx
mov     ecx, ebp
add     ebp, 8
shl     edx, cl
mov     [esp+40h+arg_8], 0
or      edi, edx
inc     eax
cmp     ebp, 3
mov     [esp+40h+var_30], eax
jb      short loc_40ff76
mov     ecx, [ebx+8]
mov     eax, edi
and     eax, 7
sub     ebp, 3
mov     edx, ds:dword_4164e8[ecx*4]
mov     ecx, [ebx+0ch]
shr     edi, 3
mov     [ecx+edx*4], eax
mov     edx, [ebx+8]
inc     edx
mov     [ebx+8], edx
mov     eax, edx
mov     edx, [ebx+4]
shr     edx, 0ah
add     edx, 4
cmp     eax, edx
jb      short loc_40ff6d
mov     ecx, [ebx+8]
mov     eax, 13h
cmp     ecx, eax
jnb     short loc_410008
mov     ecx, [ebx+8]
mov     edx, ds:dword_4164e8[ecx*4]
mov     ecx, [ebx+0ch]
mov     dword ptr [ecx+edx*4], 0
mov     edx, [ebx+8]
inc     edx
mov     ecx, edx
mov     [ebx+8], edx
cmp     ecx, eax
jb      short loc_40ffe7
mov     edx, [ebx+24h]
push    esi
lea     ecx, [ebx+14h]
lea     eax, [ebx+10h]
push    edx
mov     edx, [ebx+0ch]
push    ecx
push    eax
push    edx
mov     dword ptr [eax], 7
call    sub_411270
add     esp, 14h
mov     [esp+40h+var_28], eax
test    eax, eax
jnz     loc_41060f
mov     [ebx+8], eax
mov     dword ptr [ebx], 5
jmp     short loc_410046
mov     edi, [esp+40h+var_28]
mov     esi, [esp+40h+arg_4]
mov     eax, [ebx+4]
mov     ecx, [ebx+8]
mov     edx, eax
and     eax, 1fh
shr     edx, 5
and     edx, 1fh
lea     eax, [edx+eax+102h]
cmp     ecx, eax
jnb     loc_4101f1
mov     eax, [ebx+10h]
cmp     ebp, eax
jnb     short loc_4100a8
mov     ecx, [esp+40h+var_2c]
test    ecx, ecx
jz      loc_410629
mov     edx, ecx
xor     ecx, ecx
dec     edx
mov     [esp+40h+arg_8], 0
mov     [esp+40h+var_2c], edx
mov     edx, [esp+40h+var_30]
mov     cl, [edx]
mov     edx, ecx
mov     ecx, ebp
shl     edx, cl
mov     ecx, [esp+40h+var_30]
add     ebp, 8
or      edi, edx
inc     ecx
cmp     ebp, eax
mov     [esp+40h+var_30], ecx
jb      short loc_41006d
mov     eax, dword_41a5d8[eax*4]
mov     ecx, [ebx+14h]
and     eax, edi
xor     edx, edx
mov     dl, [ecx+eax*8+1]
lea     eax, [ecx+eax*8]
mov     [esp+40h+var_28], edx
mov     eax, [eax+4]
cmp     eax, 10h
mov     [esp+40h+var_c], eax
jnb     short loc_4100e5
mov     ecx, edx
sub     ebp, edx
mov     edx, [ebx+0ch]
shr     edi, cl
mov     ecx, [ebx+8]
mov     [edx+ecx*4], eax
mov     eax, [ebx+8]
inc     eax
jmp     loc_4101ce
cmp     eax, 12h
mov     ecx, 7
jz      short loc_4100f2
lea     ecx, [eax-0eh]
sub     eax, 12h
mov     [esp+40h+var_24], ecx
neg     eax
sbb     eax, eax
add     ecx, edx
and     al, 0f8h
mov     [esp+40h+var_20], ecx
add     eax, 0bh
cmp     ebp, ecx
jnb     short loc_41014f
mov     ecx, [esp+40h+var_2c]
test    ecx, ecx
jz      loc_410629
mov     edx, ecx
xor     ecx, ecx
dec     edx
mov     [esp+40h+arg_8], 0
mov     [esp+40h+var_2c], edx
mov     edx, [esp+40h+var_30]
mov     cl, [edx]
mov     edx, ecx
mov     ecx, ebp
shl     edx, cl
mov     ecx, [esp+40h+var_30]
add     ebp, 8
or      edi, edx
inc     ecx
mov     [esp+40h+var_30], ecx
mov     ecx, [esp+40h+var_20]
cmp     ebp, ecx
jb      short loc_41010c
mov     edx, [esp+40h+var_28]
mov     ecx, edx
shr     edi, cl
mov     ecx, [esp+40h+var_24]
mov     ecx, dword_41a5d8[ecx*4]
and     ecx, edi
add     eax, ecx
mov     ecx, [esp+40h+var_24]
shr     edi, cl
add     ecx, edx
mov     [esp+40h+var_28], eax
sub     ebp, ecx
mov     ecx, [ebx+8]
mov     [esp+40h+var_24], ecx
mov     ecx, [ebx+4]
mov     edx, ecx
and     ecx, 1fh
shr     edx, 5
and     edx, 1fh
lea     ecx, [edx+ecx+102h]
mov     edx, [esp+40h+var_24]
add     eax, edx
cmp     eax, ecx
ja      loc_410668
cmp     [esp+40h+var_c], 10h
jnz     short loc_4101b5
mov     eax, edx
cmp     eax, 1
jb      loc_410668
mov     ecx, [ebx+0ch]
mov     ecx, [ecx+eax*4-4]
jmp     short loc_4101bb
mov     eax, [esp+40h+var_24]
xor     ecx, ecx
mov     edx, [ebx+0ch]
inc     eax
mov     [edx+eax*4-4], ecx
mov     edx, [esp+40h+var_28]
dec     edx
mov     [esp+40h+var_28], edx
jnz     short loc_4101bb
mov     [ebx+8], eax
mov     eax, [ebx+4]
mov     ecx, [ebx+8]
mov     edx, eax
shr     edx, 5
and     edx, 1fh
and     eax, 1fh
lea     eax, [edx+eax+102h]
cmp     ecx, eax
jb      loc_410066
mov     ecx, [ebx+24h]
mov     eax, [ebx+4]
push    esi
push    ecx
lea     edx, [esp+48h+var_8]
lea     ecx, [esp+48h+var_4]
push    edx
push    ecx
lea     edx, [esp+50h+var_24]
lea     ecx, [esp+50h+var_20]
push    edx
mov     edx, [ebx+0ch]
push    ecx
mov     ecx, eax
shr     ecx, 5
and     ecx, 1fh
and     eax, 1fh
inc     ecx
push    edx
add     eax, 101h
push    ecx
push    eax
mov     dword ptr [ebx+14h], 0
mov     [esp+64h+var_20], 9
mov     [esp+64h+var_24], 6
call    sub_4117f0
mov     edx, [ebx+0ch]
mov     [esp+64h+var_28], eax
mov     eax, [esi+28h]
push    edx
push    eax
call    dword ptr [esi+24h]
mov     eax, [esp+6ch+var_28]
add     esp, 2ch
test    eax, eax
jnz     loc_4106bc
mov     ecx, [esp+40h+var_8]
mov     edx, [esp+40h+var_4]
mov     eax, [esp+40h+var_24]
push    esi
push    ecx
mov     ecx, [esp+48h+var_20]
push    edx
push    eax
push    ecx
call    sub_410a60
add     esp, 14h
test    eax, eax
jz      loc_410708
mov     [ebx+4], eax
mov     dword ptr [ebx], 6
jmp     short loc_410296
mov     edi, [esp+40h+var_28]
mov     esi, [esp+40h+arg_4]
mov     eax, [esp+40h+var_30]
mov     edx, [esp+40h+var_2c]
mov     [ebx+20h], edi
mov     [ebx+1ch], ebp
mov     edi, [esi]
mov     ecx, eax
mov     [esi+4], edx
mov     edx, [esi+8]
sub     ecx, edi
mov     [esi], eax
mov     eax, [esp+40h+arg_8]
add     edx, ecx
mov     [esi+8], edx
mov     edx, [esp+40h+arg_0]
push    eax
push    esi
push    ebx
mov     [ebx+34h], edx
call    sub_410aa0
add     esp, 0ch
cmp     eax, 1
jnz     loc_410798
mov     ecx, [ebx+4]
push    esi
push    ecx
mov     [esp+48h+arg_8], 0
call    sub_411250
mov     eax, [ebx+20h]
mov     ecx, [ebx+34h]
mov     edi, [esi]
mov     edx, [esi+4]
mov     ebp, [ebx+1ch]
mov     [esp+48h+var_28], eax
mov     eax, [ebx+30h]
add     esp, 8
cmp     ecx, eax
mov     [esp+40h+var_30], edi
mov     [esp+40h+var_2c], edx
mov     [esp+40h+arg_0], ecx
jnb     short loc_410315
sub     eax, ecx
dec     eax
jmp     short loc_41031a
mov     eax, [ebx+2ch]
sub     eax, ecx
mov     [esp+40h+var_24], eax
mov     eax, [ebx+18h]
test    eax, eax
jnz     loc_410744
mov     dword ptr [ebx], 0
jmp     def_40fc71
mov     eax, [esp+40h+arg_4]
mov     [ebx+20h], esi
mov     [ebx+1ch], ebp
mov     ecx, edi
mov     edx, [eax]
mov     ebp, [eax+8]
sub     ecx, edx
mov     edx, [esp+40h+arg_0]
add     ebp, ecx
mov     ecx, [esp+40h+arg_8]
push    ecx
push    eax
mov     dword ptr [eax+4], 0
mov     [eax+8], ebp
mov     [eax], edi
push    ebx
mov     [ebx+34h], edx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+40h+arg_4]
mov     edx, [esp+40h+var_2c]
mov     [ebx+20h], esi
mov     [ebx+1ch], ebp
mov     ebp, [eax+8]
mov     [eax+4], edx
mov     edx, [eax]
mov     ecx, edi
sub     ecx, edx
mov     edx, [esp+40h+arg_0]
add     ebp, ecx
push    0fffffffch
push    eax
mov     [eax+8], ebp
mov     [eax], edi
push    ebx
mov     [ebx+34h], edx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+40h+arg_4]
mov     ecx, [esp+40h+var_2c]
mov     dword ptr [ebx], 9
add     ebp, 0fffffffdh
shr     esi, 3
mov     dword ptr [eax+18h], offset ainvalidblockty
mov     [ebx+20h], esi
mov     [ebx+1ch], ebp
mov     ebp, [eax+8]
mov     [eax+4], ecx
mov     ecx, [eax]
mov     edx, edi
push    0fffffffdh
sub     edx, ecx
mov     ecx, [esp+44h+arg_0]
add     ebp, edx
push    eax
mov     [eax+8], ebp
mov     [eax], edi
push    ebx
mov     [ebx+34h], ecx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     ecx, [esp+40h+arg_4]
mov     [ebx+20h], esi
mov     [ebx+1ch], ebp
mov     esi, [ecx]
mov     ebp, [ecx+8]
mov     [ecx+4], edx
mov     edx, eax
sub     edx, esi
mov     [ecx], eax
mov     eax, [esp+40h+arg_0]
add     ebp, edx
mov     edx, [esp+40h+arg_8]
mov     [ecx+8], ebp
push    edx
push    ecx
push    ebx
mov     [ebx+34h], eax
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     ecx, [esp+40h+arg_4]
mov     dword ptr [ebx], 9
mov     edx, eax
push    0fffffffdh
mov     dword ptr [ecx+18h], offset ainvalidstoredb
mov     [ebx+20h], esi
mov     [ebx+1ch], ebp
mov     esi, [ecx]
mov     ebp, [ecx+8]
sub     edx, esi
add     ebp, edx
mov     [ecx], eax
mov     eax, [esp+44h+arg_0]
push    ecx
mov     [ecx+4], edi
mov     [ecx+8], ebp
push    ebx
mov     [ebx+34h], eax
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     ecx, [esp+40h+var_28]
mov     eax, [esp+40h+arg_4]
mov     [ebx+20h], ecx
mov     ecx, [esp+40h+var_30]
mov     [ebx+1ch], ebp
mov     esi, [eax]
mov     ebp, [eax+8]
mov     edx, ecx
sub     edx, esi
mov     [eax], ecx
mov     ecx, [esp+40h+arg_0]
add     ebp, edx
mov     edx, [esp+40h+arg_8]
mov     dword ptr [eax+4], 0
push    edx
push    eax
mov     [eax+8], ebp
push    ebx
mov     [ebx+34h], ecx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+40h+var_28]
mov     ecx, [esp+40h+var_2c]
mov     [ebx+20h], eax
mov     eax, [esp+40h+var_30]
mov     [ebx+1ch], ebp
mov     ebp, [edi]
mov     esi, [edi+8]
mov     [edi+4], ecx
mov     ecx, eax
mov     [edi], eax
sub     ecx, ebp
add     esi, ecx
mov     [edi+8], esi
mov     [ebx+34h], edx
mov     edx, [esp+40h+arg_8]
push    edx
push    edi
push    ebx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+40h+arg_4]
mov     ecx, [esp+40h+var_30]
mov     [ebx+20h], edi
mov     [ebx+1ch], ebp
mov     esi, [eax]
mov     ebp, [eax+8]
mov     edx, ecx
mov     [eax], ecx
mov     ecx, [esp+40h+arg_0]
sub     edx, esi
add     ebp, edx
mov     edx, [esp+40h+arg_8]
push    edx
push    eax
mov     dword ptr [eax+4], 0
mov     [eax+8], ebp
push    ebx
mov     [ebx+34h], ecx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+40h+var_2c]
mov     [ebx+20h], edi
mov     [ebx+1ch], ebp
mov     edi, [esi]
mov     edx, [esi+8]
mov     [esi+4], eax
mov     eax, [esp+40h+var_30]
push    0fffffffch
mov     ecx, eax
push    esi
sub     ecx, edi
mov     [esi], eax
add     edx, ecx
push    ebx
mov     [esi+8], edx
mov     edx, [esp+4ch+arg_0]
mov     [ebx+34h], edx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+40h+arg_4]
mov     ecx, [esp+40h+var_2c]
mov     dword ptr [ebx], 9
push    0fffffffdh
mov     dword ptr [eax+18h], offset atoomanylengtho
mov     [ebx+20h], edi
mov     [ebx+1ch], ebp
mov     esi, [eax]
mov     ebp, [eax+8]
mov     [eax+4], ecx
mov     ecx, [esp+44h+var_30]
push    eax
mov     edx, ecx
mov     [eax], ecx
mov     ecx, [esp+48h+arg_0]
sub     edx, esi
add     ebp, edx
push    ebx
mov     [eax+8], ebp
mov     [ebx+34h], ecx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+40h+var_30]
mov     [ebx+20h], edi
mov     [ebx+1ch], ebp
mov     edi, [esi]
mov     ecx, [esi+8]
mov     edx, eax
sub     edx, edi
mov     [esi], eax
mov     eax, [esp+40h+arg_0]
add     ecx, edx
mov     [esi+8], ecx
mov     ecx, [esp+40h+arg_8]
push    ecx
push    esi
mov     dword ptr [esi+4], 0
push    ebx
mov     [ebx+34h], eax
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     edx, [ebx+0ch]
mov     eax, [esi+28h]
push    edx
push    eax
call    dword ptr [esi+24h]
mov     eax, [esp+48h+var_28]
add     esp, 8
cmp     eax, 0fffffffdh
jmp     loc_4106c1
mov     eax, [esp+40h+var_30]
mov     [ebx+20h], edi
mov     [ebx+1ch], ebp
mov     edi, [esi]
mov     ecx, [esi+8]
mov     edx, eax
sub     edx, edi
mov     [esi], eax
mov     eax, [esp+40h+arg_0]
add     ecx, edx
mov     [esi+8], ecx
mov     ecx, [esp+40h+arg_8]
push    ecx
push    esi
mov     dword ptr [esi+4], 0
push    ebx
mov     [ebx+34h], eax
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     edx, [ebx+0ch]
mov     eax, [esi+28h]
push    edx
push    eax
call    dword ptr [esi+24h]
mov     eax, [esp+48h+var_30]
mov     ecx, [esp+48h+var_2c]
mov     dword ptr [ebx], 9
mov     dword ptr [esi+18h], offset ainvalidbitleng
mov     [ebx+20h], edi
mov     [ebx+1ch], ebp
mov     edi, [esi]
mov     edx, eax
mov     [esi+4], ecx
mov     ecx, [esi+8]
sub     edx, edi
mov     [esi], eax
mov     eax, [esp+48h+arg_0]
add     ecx, edx
push    0fffffffdh
push    esi
mov     [esi+8], ecx
push    ebx
mov     [ebx+34h], eax
call    sub_4119b0
add     esp, 14h
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
cmp     [esp+40h+var_28], 0fffffffdh
jnz     short loc_4106c9
mov     dword ptr [ebx], 9
mov     eax, [esp+40h+var_30]
mov     ecx, [esp+40h+var_2c]
mov     [ebx+20h], edi
mov     [ebx+1ch], ebp
mov     edi, [esi]
mov     edx, eax
mov     [esi+4], ecx
mov     ecx, [esi+8]
sub     edx, edi
mov     [esi], eax
mov     eax, [esp+40h+arg_0]
add     ecx, edx
mov     [esi+8], ecx
mov     ecx, [esp+40h+var_28]
push    ecx
push    esi
push    ebx
mov     [ebx+34h], eax
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     eax, [esp+40h+var_30]
mov     edx, [esp+40h+var_2c]
mov     [ebx+20h], edi
mov     [ebx+1ch], ebp
mov     edi, [esi]
mov     ecx, eax
mov     [esi+4], edx
mov     edx, [esi+8]
sub     ecx, edi
push    0fffffffch
add     edx, ecx
push    esi
mov     [esi+8], edx
mov     edx, [esp+48h+arg_0]
mov     [esi], eax
push    ebx
mov     [ebx+34h], edx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     dword ptr [ebx], 7
jmp     short loc_410758
mov     ecx, [esp+40h+arg_0]
mov     edi, [esp+40h+var_30]
mov     esi, [esp+40h+arg_4]
mov     eax, [esp+40h+arg_8]
mov     [ebx+34h], ecx
push    eax
push    esi
push    ebx
call    sub_4119b0
mov     ecx, [ebx+34h]
mov     edx, [ebx+30h]
add     esp, 0ch
cmp     edx, ecx
jz      short loc_4107ab
mov     edx, [esp+40h+var_28]
mov     [ebx+1ch], ebp
mov     [ebx+20h], edx
mov     edx, [esp+40h+var_2c]
mov     ebp, [esi]
mov     [esi+4], edx
mov     edx, edi
mov     [esi], edi
sub     edx, ebp
mov     ebp, [esi+8]
add     ebp, edx
mov     [esi+8], ebp
mov     [ebx+34h], ecx
push    eax
push    esi
push    ebx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     dword ptr [ebx], 8
jmp     short loc_4107bf
mov     ecx, [esp+40h+arg_0]
mov     edi, [esp+40h+var_30]
mov     esi, [esp+40h+arg_4]
mov     eax, [esp+40h+var_28]
mov     edx, [esp+40h+var_2c]
mov     [ebx+20h], eax
mov     [ebx+1ch], ebp
mov     ebp, [esi]
mov     eax, edi
mov     [esi+4], edx
mov     edx, [esi+8]
sub     eax, ebp
push    1
add     edx, eax
push    esi
mov     [esi+8], edx
mov     [esi], edi
push    ebx
mov     [ebx+34h], ecx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     ecx, [esp+40h+var_28]
mov     eax, [esp+40h+arg_4]
mov     edx, [esp+40h+var_2c]
mov     [ebx+20h], ecx
mov     ecx, [esp+40h+var_30]
mov     [ebx+1ch], ebp
mov     esi, [eax]
mov     ebp, [eax+8]
mov     [eax+4], edx
mov     edx, ecx
sub     edx, esi
mov     [eax], ecx
mov     ecx, [esp+40h+arg_0]
add     ebp, edx
push    0fffffffdh
push    eax
mov     [eax+8], ebp
push    ebx
mov     [ebx+34h], ecx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
mov     edx, [esp+40h+var_28]
mov     eax, [esp+40h+arg_4]
mov     ecx, [esp+40h+var_2c]
mov     [ebx+20h], edx
mov     [ebx+1ch], ebp
mov     esi, [eax]
mov     ebp, [eax+8]
mov     [eax+4], ecx
mov     ecx, [esp+40h+var_30]
push    0fffffffeh
mov     edx, ecx
mov     [eax], ecx
mov     ecx, [esp+44h+arg_0]
sub     edx, esi
add     ebp, edx
push    eax
mov     [eax+8], ebp
push    ebx
mov     [ebx+34h], ecx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 30h
retn
push    esi
mov     esi, [esp+4+arg_4]
push    edi
mov     edi, [esp+8+arg_0]
push    0
push    esi
push    edi
call    sub_40faa0
mov     eax, [edi+28h]
mov     ecx, [esi+28h]
push    eax
push    ecx
call    dword ptr [esi+24h]
mov     edx, [edi+24h]
mov     eax, [esi+28h]
push    edx
push    eax
call    dword ptr [esi+24h]
mov     ecx, [esi+28h]
push    edi
push    ecx
call    dword ptr [esi+24h]
add     esp, 24h
xor     eax, eax
pop     edi
pop     esi
retn
push    esi
mov     esi, [esp+4+arg_4]
push    edi
mov     edi, [esp+8+arg_0]
mov     ecx, edi
and     ecx, 0ffffh
shr     edi, 10h
test    esi, esi
jnz     short loc_410921
pop     edi
mov     eax, 1
pop     esi
retn
push    ebx
mov     ebx, [esp+0ch+arg_8]
test    ebx, ebx
jbe     loc_410a23
push    ebp
cmp     ebx, 15b0h
mov     eax, ebx
jb      short loc_41093e
mov     eax, 15b0h
sub     ebx, eax
cmp     eax, 10h
jl      loc_4109f0
mov     ebp, eax
shr     ebp, 4
mov     edx, ebp
neg     edx
shl     edx, 4
add     eax, edx
xor     edx, edx
mov     dl, [esi]
add     esi, 10h
add     ecx, edx
xor     edx, edx
mov     dl, [esi-0fh]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-0eh]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-0dh]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-0ch]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-0bh]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-0ah]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-9]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-8]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-7]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-6]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-5]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-4]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-3]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-2]
add     edi, ecx
add     ecx, edx
xor     edx, edx
mov     dl, [esi-1]
add     edi, ecx
add     ecx, edx
add     edi, ecx
dec     ebp
jnz     loc_410957
test    eax, eax
jz      short loc_410a00
xor     edx, edx
mov     dl, [esi]
add     ecx, edx
inc     esi
add     edi, ecx
dec     eax
jnz     short loc_4109f4
mov     eax, ecx
xor     edx, edx
mov     ecx, 0fff1h
div     ecx
mov     eax, edi
mov     edi, 0fff1h
mov     ecx, edx
xor     edx, edx
div     edi
test    ebx, ebx
mov     edi, edx
ja      loc_41092f
pop     ebp
mov     eax, edi
pop     ebx
shl     eax, 10h
pop     edi
or      eax, ecx
pop     esi
retn
mov     eax, [esp+0ch]
mov     ecx, [esp+8]
push    eax
push    ecx
call    sub_412212
add     esp, 8
retn
mov     eax, [esp+lpmem]
push    eax
call    sub_4122c3
pop     ecx
retn
mov     eax, [esp+arg_10]
push    1ch
push    1
mov     ecx, [eax+28h]
push    ecx
call    dword ptr [eax+20h]
add     esp, 0ch
test    eax, eax
jz      short locret_410a98
mov     dl, [esp+arg_0]
mov     cl, [esp+arg_4]
mov     [eax+10h], dl
mov     edx, [esp+arg_8]
mov     [eax+11h], cl
mov     ecx, [esp+arg_c]
mov     dword ptr [eax], 0
mov     [eax+14h], edx
mov     [eax+18h], ecx
retn
sub     esp, 10h
push    ebx
push    ebp
push    esi
mov     esi, [esp+1ch+arg_0]
push    edi
mov     edi, [esp+20h+arg_4]
mov     edx, [esi+20h]
mov     eax, [esi+4]
mov     ecx, [edi+4]
mov     ebp, [edi]
mov     ebx, [esi+1ch]
mov     [esp+20h+arg_4], ecx
mov     ecx, [esi+30h]
mov     [esp+20h+arg_0], edx
mov     edx, [esi+34h]
mov     [esp+20h+var_10], eax
cmp     edx, ecx
jnb     short loc_410ad8
sub     ecx, edx
dec     ecx
jmp     short loc_410add
mov     ecx, [esi+2ch]
sub     ecx, edx
mov     [esp+20h+var_c], ecx
mov     ecx, [eax]
cmp     ecx, 9
ja      def_410aec
jmp     ds:jpt_410aec[ecx*4]
cmp     [esp+20h+var_c], 102h
jb      loc_410b9d
cmp     [esp+20h+arg_4], 0ah
jb      loc_410b9d
mov     eax, [esp+20h+arg_0]
mov     ecx, [esp+20h+arg_4]
mov     [esi+20h], eax
mov     [esi+1ch], ebx
mov     ebx, [edi]
mov     eax, ebp
mov     [edi+4], ecx
mov     ecx, [edi+8]
sub     eax, ebx
mov     [edi], ebp
add     ecx, eax
mov     eax, [esp+20h+var_10]
mov     [edi+8], ecx
mov     [esi+34h], edx
mov     ecx, [eax+18h]
mov     edx, [eax+14h]
push    edi
push    esi
push    ecx
push    edx
xor     ecx, ecx
xor     edx, edx
mov     cl, [eax+11h]
mov     dl, [eax+10h]
push    ecx
push    edx
call    sub_411af0
mov     ecx, [edi+4]
mov     edx, [esi+20h]
mov     ebp, [edi]
mov     ebx, [esi+1ch]
mov     [esp+38h+arg_4], ecx
mov     ecx, [esi+30h]
mov     [esp+38h+arg_0], edx
mov     edx, [esi+34h]
add     esp, 18h
cmp     edx, ecx
mov     [esp+20h+arg_8], eax
jnb     short loc_410b78
sub     ecx, edx
dec     ecx
jmp     short loc_410b7d
mov     ecx, [esi+2ch]
sub     ecx, edx
test    eax, eax
mov     [esp+20h+var_c], ecx
jz      short loc_410b9d
mov     ecx, [esp+20h+var_10]
dec     eax
neg     eax
sbb     eax, eax
and     eax, 2
add     eax, 7
mov     [ecx], eax
mov     eax, ecx
jmp     loc_410ae1
mov     eax, [esp+20h+var_10]
xor     ecx, ecx
mov     cl, [eax+10h]
mov     dword ptr [eax], 1
mov     [eax+0ch], ecx
mov     ecx, [eax+14h]
mov     [eax+8], ecx
mov     eax, [eax+0ch]
cmp     ebx, eax
mov     [esp+20h+var_8], eax
jnb     short loc_410bf8
mov     eax, [esp+20h+arg_4]
test    eax, eax
jz      loc_411049
dec     eax
mov     ecx, ebx
mov     [esp+20h+arg_4], eax
xor     eax, eax
mov     al, [ebp+0]
add     ebx, 8
shl     eax, cl
mov     ecx, [esp+20h+arg_0]
mov     [esp+20h+arg_8], 0
or      ecx, eax
mov     eax, [esp+20h+var_8]
inc     ebp
cmp     ebx, eax
mov     [esp+20h+arg_0], ecx
jb      short loc_410bc0
mov     ecx, dword_41a5d8[eax*4]
mov     eax, [esp+20h+arg_0]
and     ecx, eax
mov     eax, [esp+20h+var_10]
mov     eax, [eax+8]
lea     eax, [eax+ecx*8]
xor     ecx, ecx
mov     [esp+20h+var_8], eax
mov     cl, [eax+1]
mov     eax, [esp+20h+arg_0]
shr     eax, cl
mov     [esp+20h+var_4], ecx
mov     [esp+20h+arg_0], eax
mov     eax, ecx
sub     ebx, eax
mov     eax, [esp+20h+var_8]
xor     ecx, ecx
mov     cl, [eax]
test    ecx, ecx
jnz     short loc_410c4b
mov     ecx, [eax+4]
mov     eax, [esp+20h+var_10]
mov     [eax+8], ecx
mov     dword ptr [eax], 6
jmp     loc_410ae1
test    cl, 10h
jz      short loc_410c6f
mov     eax, [esp+20h+var_10]
and     ecx, 0fh
mov     [eax+8], ecx
mov     ecx, [esp+20h+var_8]
mov     ecx, [ecx+4]
mov     dword ptr [eax], 2
mov     [eax+4], ecx
jmp     loc_410ae1
test    cl, 40h
jnz     short loc_410c91
mov     eax, [esp+20h+var_10]
mov     [eax+0ch], ecx
mov     eax, [esp+20h+var_8]
mov     ecx, [eax+4]
lea     ecx, [eax+ecx*8]
mov     eax, [esp+20h+var_10]
mov     [eax+8], ecx
jmp     loc_410ae1
mov     eax, [esp+20h+var_10]
test    cl, 20h
jz      loc_41103a
mov     dword ptr [eax], 7
jmp     loc_410ae1
mov     eax, [eax+8]
cmp     ebx, eax
mov     [esp+20h+var_8], eax
jnb     short loc_410cec
mov     eax, [esp+20h+arg_4]
test    eax, eax
jz      loc_411049
dec     eax
mov     ecx, ebx
mov     [esp+20h+arg_4], eax
xor     eax, eax
mov     al, [ebp+0]
add     ebx, 8
shl     eax, cl
mov     ecx, [esp+20h+arg_0]
mov     [esp+20h+arg_8], 0
or      ecx, eax
mov     eax, [esp+20h+var_8]
inc     ebp
cmp     ebx, eax
mov     [esp+20h+arg_0], ecx
jb      short loc_410cb4
mov     ecx, dword_41a5d8[eax*4]
mov     eax, [esp+20h+arg_0]
and     ecx, eax
mov     eax, [esp+20h+var_10]
add     [eax+4], ecx
mov     ecx, [esp+20h+var_8]
mov     eax, [esp+20h+arg_0]
shr     eax, cl
mov     [esp+20h+arg_0], eax
mov     eax, ecx
sub     ebx, eax
mov     eax, [esp+20h+var_10]
xor     ecx, ecx
mov     cl, [eax+11h]
mov     dword ptr [eax], 3
mov     [eax+0ch], ecx
mov     ecx, [eax+18h]
mov     [eax+8], ecx
mov     eax, [eax+0ch]
cmp     ebx, eax
mov     [esp+20h+var_8], eax
jnb     short loc_410d6d
mov     eax, [esp+20h+arg_4]
test    eax, eax
jz      loc_411049
dec     eax
mov     ecx, ebx
mov     [esp+20h+arg_4], eax
xor     eax, eax
mov     al, [ebp+0]
add     ebx, 8
shl     eax, cl
mov     ecx, [esp+20h+arg_0]
mov     [esp+20h+arg_8], 0
or      ecx, eax
mov     eax, [esp+20h+var_8]
inc     ebp
cmp     ebx, eax
mov     [esp+20h+arg_0], ecx
jb      short loc_410d35
mov     ecx, dword_41a5d8[eax*4]
mov     eax, [esp+20h+arg_0]
and     ecx, eax
mov     eax, [esp+20h+var_10]
mov     eax, [eax+8]
lea     eax, [eax+ecx*8]
xor     ecx, ecx
mov     [esp+20h+var_8], eax
mov     cl, [eax+1]
mov     eax, [esp+20h+arg_0]
shr     eax, cl
mov     [esp+20h+var_4], ecx
sub     ebx, ecx
xor     ecx, ecx
mov     [esp+20h+arg_0], eax
mov     eax, [esp+20h+var_8]
mov     cl, [eax]
test    cl, 10h
jz      short loc_410dc9
mov     eax, [esp+20h+var_10]
and     ecx, 0fh
mov     [eax+8], ecx
mov     ecx, [esp+20h+var_8]
mov     ecx, [ecx+4]
mov     dword ptr [eax], 4
mov     [eax+0ch], ecx
jmp     loc_410ae1
test    cl, 40h
jnz     loc_411084
jmp     loc_410c74
mov     eax, [eax+8]
cmp     ebx, eax
mov     [esp+20h+var_8], eax
jnb     short loc_410e1a
mov     eax, [esp+20h+arg_4]
test    eax, eax
jz      loc_411049
dec     eax
mov     ecx, ebx
mov     [esp+20h+arg_4], eax
xor     eax, eax
mov     al, [ebp+0]
add     ebx, 8
shl     eax, cl
mov     ecx, [esp+20h+arg_0]
mov     [esp+20h+arg_8], 0
or      ecx, eax
mov     eax, [esp+20h+var_8]
inc     ebp
cmp     ebx, eax
mov     [esp+20h+arg_0], ecx
jb      short loc_410de2
mov     ecx, dword_41a5d8[eax*4]
mov     eax, [esp+20h+arg_0]
and     ecx, eax
mov     eax, [esp+20h+var_10]
add     [eax+0ch], ecx
mov     ecx, [esp+20h+var_8]
mov     eax, [esp+20h+arg_0]
shr     eax, cl
mov     [esp+20h+arg_0], eax
mov     eax, ecx
sub     ebx, eax
mov     eax, [esp+20h+var_10]
mov     dword ptr [eax], 5
mov     eax, [esi+28h]
mov     ecx, edx
sub     ecx, eax
mov     eax, [esp+20h+var_10]
mov     eax, [eax+0ch]
cmp     ecx, eax
jnb     short loc_410e73
mov     eax, [esi+2ch]
mov     ecx, [esi+28h]
sub     eax, ecx
mov     ecx, [esp+20h+var_10]
sub     eax, [ecx+0ch]
add     eax, edx
mov     [esp+20h+var_4], eax
jmp     short loc_410e7b
mov     ecx, edx
sub     ecx, eax
mov     [esp+20h+var_4], ecx
mov     eax, [esp+20h+var_10]
mov     ecx, [eax+4]
test    ecx, ecx
jz      loc_410f6c
mov     ecx, [esp+20h+var_c]
test    ecx, ecx
jnz     loc_410f2b
mov     eax, [esi+2ch]
cmp     edx, eax
mov     [esp+20h+var_8], eax
jnz     short loc_410ec4
mov     eax, [esi+30h]
mov     ecx, [esi+28h]
cmp     eax, ecx
jz      short loc_410ec4
mov     edx, ecx
cmp     edx, eax
jnb     short loc_410eb6
sub     eax, edx
dec     eax
jmp     short loc_410ebc
mov     eax, [esp+20h+var_8]
sub     eax, edx
test    eax, eax
mov     [esp+20h+var_c], eax
jnz     short loc_410f27
mov     [esi+34h], edx
mov     edx, [esp+20h+arg_8]
push    edx
push    edi
push    esi
call    sub_4119b0
mov     edx, [esi+34h]
mov     [esp+2ch+arg_8], eax
mov     eax, [esi+30h]
add     esp, 0ch
cmp     edx, eax
jnb     short loc_410eeb
mov     ecx, eax
sub     ecx, edx
dec     ecx
jmp     short loc_410ef0
mov     ecx, [esi+2ch]
sub     ecx, edx
mov     [esp+20h+var_c], ecx
mov     ecx, [esi+2ch]
cmp     edx, ecx
mov     [esp+20h+var_8], ecx
jnz     short loc_410f1b
mov     ecx, [esi+28h]
cmp     eax, ecx
jz      short loc_410f1b
mov     edx, ecx
cmp     edx, eax
jnb     short loc_410f11
sub     eax, edx
dec     eax
jmp     short loc_410f17
mov     eax, [esp+20h+var_8]
sub     eax, edx
mov     [esp+20h+var_c], eax
mov     eax, [esp+20h+var_c]
test    eax, eax
jz      loc_4110cd
mov     eax, [esp+20h+var_10]
mov     ecx, [esp+20h+var_4]
inc     edx
mov     [esp+20h+arg_8], 0
mov     cl, [ecx]
mov     [edx-1], cl
mov     ecx, [esp+20h+var_4]
inc     ecx
mov     [esp+20h+var_4], ecx
mov     ecx, [esp+20h+var_c]
dec     ecx
mov     [esp+20h+var_c], ecx
mov     ecx, [esp+20h+var_4]
cmp     ecx, [esi+2ch]
jnz     short loc_410f5f
mov     ecx, [esi+28h]
mov     [esp+20h+var_4], ecx
mov     ecx, [eax+4]
dec     ecx
mov     [eax+4], ecx
jnz     loc_410e8a
mov     dword ptr [eax], 0
jmp     loc_410ae1
mov     ecx, [esp+20h+var_c]
test    ecx, ecx
jnz     loc_411018
mov     eax, [esi+2ch]
cmp     edx, eax
mov     [esp+20h+var_8], eax
jnz     short loc_410fb1
mov     eax, [esi+30h]
mov     ecx, [esi+28h]
cmp     eax, ecx
jz      short loc_410fb1
mov     edx, ecx
cmp     edx, eax
jnb     short loc_410fa3
sub     eax, edx
dec     eax
jmp     short loc_410fa9
mov     eax, [esp+20h+var_8]
sub     eax, edx
test    eax, eax
mov     [esp+20h+var_c], eax
jnz     short loc_411014
mov     [esi+34h], edx
mov     edx, [esp+20h+arg_8]
push    edx
push    edi
push    esi
call    sub_4119b0
mov     edx, [esi+34h]
mov     [esp+2ch+arg_8], eax
mov     eax, [esi+30h]
add     esp, 0ch
cmp     edx, eax
jnb     short loc_410fd8
mov     ecx, eax
sub     ecx, edx
dec     ecx
jmp     short loc_410fdd
mov     ecx, [esi+2ch]
sub     ecx, edx
mov     [esp+20h+var_c], ecx
mov     ecx, [esi+2ch]
cmp     edx, ecx
mov     [esp+20h+var_8], ecx
jnz     short loc_411008
mov     ecx, [esi+28h]
cmp     eax, ecx
jz      short loc_411008
mov     edx, ecx
cmp     edx, eax
jnb     short loc_410ffe
sub     eax, edx
dec     eax
jmp     short loc_411004
mov     eax, [esp+20h+var_8]
sub     eax, edx
mov     [esp+20h+var_c], eax
mov     eax, [esp+20h+var_c]
test    eax, eax
jz      loc_4110cd
mov     eax, [esp+20h+var_10]
mov     cl, [eax+8]
mov     [esp+20h+arg_8], 0
mov     [edx], cl
mov     ecx, [esp+20h+var_c]
inc     edx
dec     ecx
mov     [esp+20h+var_c], ecx
mov     dword ptr [eax], 0
jmp     loc_410ae1
mov     dword ptr [eax], 9
mov     dword ptr [edi+18h], offset ainvalidliteral
jmp     short loc_411095
mov     eax, [esp+20h+arg_0]
mov     [esi+1ch], ebx
mov     [esi+20h], eax
mov     ebx, [edi]
mov     eax, [edi+8]
mov     ecx, ebp
sub     ecx, ebx
mov     dword ptr [edi+4], 0
add     eax, ecx
mov     [edi], ebp
mov     [edi+8], eax
mov     [esi+34h], edx
mov     edx, [esp+20h+arg_8]
push    edx
push    edi
push    esi
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+var_10]
mov     dword ptr [eax], 9
mov     dword ptr [edi+18h], offset ainvaliddistanc
mov     ecx, [esp+20h+arg_0]
mov     eax, [esp+20h+arg_4]
mov     [esi+20h], ecx
mov     [esi+1ch], ebx
mov     ebx, [edi]
mov     ecx, ebp
mov     [edi+4], eax
mov     eax, [edi+8]
sub     ecx, ebx
push    0fffffffdh
add     eax, ecx
push    edi
mov     [edi+8], eax
mov     [edi], ebp
push    esi
mov     [esi+34h], edx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+arg_0]
mov     ecx, [esp+20h+arg_4]
mov     [esi+20h], eax
mov     [esi+1ch], ebx
mov     ebx, [edi]
mov     eax, ebp
mov     [edi+4], ecx
mov     ecx, [edi+8]
sub     eax, ebx
mov     [edi], ebp
add     ecx, eax
mov     [edi+8], ecx
mov     ecx, [esp+20h+arg_8]
push    ecx
push    edi
push    esi
mov     [esi+34h], edx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 10h
retn
cmp     ebx, 7
jbe     short loc_41111a
mov     ecx, [esp+20h+arg_4]
sub     ebx, 8
inc     ecx
dec     ebp
mov     [esp+20h+arg_4], ecx
mov     [esi+34h], edx
mov     edx, [esp+20h+arg_8]
push    edx
push    edi
push    esi
call    sub_4119b0
mov     edx, [esi+34h]
mov     ecx, [esi+30h]
add     esp, 0ch
cmp     ecx, edx
jz      short loc_41116d
mov     ecx, [esp+20h+arg_0]
mov     [esi+1ch], ebx
mov     [esi+20h], ecx
mov     ecx, [esp+20h+arg_4]
mov     ebx, [edi]
mov     [edi+4], ecx
mov     ecx, ebp
push    eax
sub     ecx, ebx
mov     ebx, [edi+8]
add     ebx, ecx
push    edi
mov     [edi+8], ebx
mov     [edi], ebp
push    esi
mov     [esi+34h], edx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+var_10]
mov     dword ptr [eax], 8
mov     ecx, [esp+20h+arg_0]
mov     eax, [esp+20h+arg_4]
mov     [esi+20h], ecx
mov     [esi+1ch], ebx
mov     ebx, [edi]
mov     ecx, ebp
mov     [edi+4], eax
mov     eax, [edi+8]
sub     ecx, ebx
push    1
add     eax, ecx
push    edi
mov     [edi+8], eax
mov     [edi], ebp
push    esi
mov     [esi+34h], edx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+20h+arg_0]
mov     ecx, [esp+20h+arg_4]
mov     [esi+20h], eax
mov     [esi+1ch], ebx
mov     ebx, [edi]
mov     eax, ebp
mov     [edi+4], ecx
mov     ecx, [edi+8]
sub     eax, ebx
push    0fffffffdh
add     ecx, eax
push    edi
mov     [edi+8], ecx
mov     [edi], ebp
push    esi
mov     [esi+34h], edx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 10h
retn
mov     ecx, [esp+20h+arg_0]
mov     eax, [esp+20h+arg_4]
mov     [esi+20h], ecx
mov     [esi+1ch], ebx
mov     ebx, [edi]
mov     ecx, ebp
mov     [edi+4], eax
mov     eax, [edi+8]
sub     ecx, ebx
push    0fffffffeh
add     eax, ecx
push    edi
mov     [edi+8], eax
mov     [edi], ebp
push    esi
mov     [esi+34h], edx
call    sub_4119b0
add     esp, 0ch
pop     edi
pop     esi
pop     ebp
pop     ebx
add     esp, 10h
retn
mov     eax, [esp+arg_0]
push    eax
mov     eax, [esp+4+arg_4]
mov     ecx, [eax+28h]
push    ecx
call    dword ptr [eax+24h]
add     esp, 8
retn
push    ecx
push    ebx
push    edi
mov     edi, [esp+0ch+arg_10]
push    4
push    13h
mov     [esp+14h+var_4], 0
mov     eax, [edi+28h]
push    eax
call    dword ptr [edi+20h]
mov     ebx, eax
add     esp, 0ch
test    ebx, ebx
jnz     short loc_41129c
pop     edi
mov     eax, 0fffffffch
pop     ebx
pop     ecx
retn
mov     edx, [esp+0ch+arg_c]
mov     eax, [esp+0ch+arg_8]
push    ebp
mov     ebp, [esp+10h+arg_4]
push    esi
lea     ecx, [esp+14h+var_4]
push    ebx
push    ecx
mov     ecx, [esp+1ch+arg_0]
push    edx
push    ebp
push    eax
push    0
push    0
push    13h
push    13h
push    ecx
call    sub_411320
mov     esi, eax
add     esp, 28h
cmp     esi, 0fffffffdh
jnz     short loc_4112e9
mov     edx, [edi+28h]
push    ebx
push    edx
mov     dword ptr [edi+18h], offset aoversubscribed
call    dword ptr [edi+24h]
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
pop     edi
pop     ebx
pop     ecx
retn
cmp     esi, 0fffffffbh
jz      short loc_4112f4
cmp     dword ptr [ebp+0], 0
jnz     short loc_411300
mov     dword ptr [edi+18h], offset aincompletedyna
mov     esi, 0fffffffdh
mov     edx, [edi+28h]
push    ebx
push    edx
call    dword ptr [edi+24h]
add     esp, 8
mov     eax, esi
pop     esi
pop     ebp
pop     edi
pop     ebx
pop     ecx
retn
sub     esp, 100h
mov     ecx, [esp+100h+arg_0]
push    ebx
push    ebp
push    esi
mov     esi, [esp+10ch+arg_4]
push    edi
xor     edi, edi
mov     edx, esi
mov     [esp+110h+var_bc], edi
mov     [esp+110h+var_b8], edi
mov     [esp+110h+var_b4], edi
mov     [esp+110h+var_b0], edi
mov     [esp+110h+var_ac], edi
mov     [esp+110h+var_a8], edi
mov     [esp+110h+var_a4], edi
mov     [esp+110h+var_a0], edi
mov     [esp+110h+var_9c], edi
mov     [esp+110h+var_98], edi
mov     [esp+110h+var_94], edi
mov     [esp+110h+var_90], edi
mov     [esp+110h+var_8c], edi
mov     [esp+110h+var_88], edi
mov     [esp+110h+var_84], edi
mov     [esp+110h+var_80], edi
mov     eax, [ecx]
add     ecx, 4
mov     ebp, [esp+eax*4+110h+var_bc]
lea     eax, [esp+eax*4+110h+var_bc]
inc     ebp
dec     edx
mov     [eax], ebp
jnz     short loc_41138b
cmp     [esp+110h+var_bc], esi
jnz     short loc_4113c3
mov     ecx, [esp+110h+arg_14]
mov     edx, [esp+110h+arg_18]
mov     [ecx], edi
mov     [edx], edi
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 100h
retn
mov     ebx, [esp+110h+arg_18]
mov     ecx, 1
lea     eax, [esp+110h+var_b8]
mov     ebp, [ebx]
mov     [esp+110h+var_100], ebp
cmp     [eax], edi
jnz     short loc_4113e6
inc     ecx
add     eax, 4
cmp     ecx, 0fh
jbe     short loc_4113d9
mov     eax, ecx
cmp     ebp, ecx
mov     [esp+110h+var_fc], eax
jnb     short loc_4113f6
mov     [esp+110h+var_100], ecx
mov     ebp, ecx
mov     edx, 0fh
lea     esi, [esp+110h+var_80]
cmp     [esi], edi
jnz     short loc_41140e
dec     edx
sub     esi, 4
cmp     edx, edi
jnz     short loc_411402
cmp     ebp, edx
mov     [esp+110h+var_e4], edx
jbe     short loc_41141c
mov     [esp+110h+var_100], edx
mov     ebp, edx
mov     esi, 1
mov     [ebx], ebp
shl     esi, cl
cmp     ecx, edx
jnb     short loc_41143b
lea     ebx, [esp+ecx*4+110h+var_bc]
sub     esi, [ebx]
js      short loc_411456
inc     ecx
add     ebx, 4
shl     esi, 1
cmp     ecx, edx
jb      short loc_41142d
lea     ecx, ds:0[edx*4]
mov     [esp+110h+var_f0], ecx
mov     ebx, [esp+ecx+110h+var_bc]
lea     ecx, [esp+ecx+110h+var_bc]
sub     esi, ebx
mov     [esp+110h+var_cc], esi
jns     short loc_411466
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffffffdh
pop     ebx
add     esp, 100h
retn
add     ebx, esi
mov     [esp+110h+var_78], edi
mov     [ecx], ebx
xor     ecx, ecx
dec     edx
jz      short loc_411489
xor     ebx, ebx
add     ecx, [esp+ebx+110h+var_b8]
add     ebx, 4
dec     edx
mov     [esp+ebx+110h+var_78], ecx
jnz     short loc_411478
mov     edx, [esp+110h+arg_0]
xor     ebx, ebx
mov     ecx, [edx]
add     edx, 4
cmp     ecx, edi
mov     [esp+110h+var_f4], edx
jz      short loc_4114c2
mov     edx, [esp+ecx*4+110h+var_7c]
mov     esi, [esp+110h+arg_24]
lea     ecx, [esp+ecx*4+110h+var_7c]
mov     [esi+edx*4], ebx
mov     esi, [esp+110h+var_cc]
inc     edx
mov     [ecx], edx
mov     edx, [esp+110h+var_f4]
mov     ecx, [esp+110h+arg_4]
inc     ebx
cmp     ebx, ecx
jb      short loc_411492
mov     ecx, [esp+110h+var_f0]
mov     ebx, ebp
neg     ebx
mov     edx, [esp+ecx+110h+var_7c]
mov     ecx, [esp+110h+arg_24]
mov     [esp+110h+var_f4], ecx
mov     ecx, [esp+110h+var_e4]
cmp     eax, ecx
mov     [esp+110h+arg_4], edx
mov     [esp+110h+var_d8], edi
mov     [esp+110h+var_7c], edi
mov     [esp+110h+var_f8], 0ffffffffh
mov     [esp+110h+var_3c], edi
mov     [esp+110h+var_d0], edi
mov     [esp+110h+var_d4], edi
jg      loc_4117b6
mov     esi, [esp+110h+var_dc]
lea     edx, [eax-1]
lea     ecx, [esp+eax*4+110h+var_bc]
mov     [esp+110h+var_f0], edx
mov     [esp+110h+var_e8], ecx
mov     edx, [esp+110h+var_e8]
mov     edx, [edx]
mov     ecx, edx
dec     edx
test    ecx, ecx
mov     [esp+110h+var_ec], edx
jz      loc_41178b
jmp     short loc_41154b
mov     edx, [esp+110h+var_ec]
lea     ecx, [ebx+ebp]
cmp     eax, ecx
jle     loc_411668
inc     edx
mov     [esp+110h+var_c0], edx
jmp     short loc_411565
mov     ebp, [esp+110h+var_100]
mov     eax, [esp+110h+var_fc]
mov     edx, [esp+110h+var_f8]
add     ebx, ebp
inc     edx
add     ecx, ebp
mov     [esp+110h+var_f8], edx
mov     edx, [esp+110h+var_e4]
sub     edx, ebx
mov     [esp+110h+var_c8], ecx
cmp     edx, ebp
jbe     short loc_411582
mov     edx, ebp
mov     edi, [esp+110h+var_c0]
mov     ecx, eax
sub     ecx, ebx
mov     eax, 1
shl     eax, cl
cmp     eax, edi
jbe     short loc_4115c0
mov     ebp, [esp+110h+var_ec]
or      edi, 0ffffffffh
sub     edi, ebp
mov     ebp, [esp+110h+var_e8]
add     eax, edi
cmp     ecx, edx
jnb     short loc_4115c0
inc     ecx
cmp     ecx, edx
jnb     short loc_4115c0
mov     edi, [ebp+4]
add     ebp, 4
shl     eax, 1
cmp     eax, edi
jbe     short loc_4115c0
sub     eax, edi
inc     ecx
cmp     ecx, edx
jb      short loc_4115ad
mov     ebp, [esp+110h+arg_20]
mov     edx, 1
shl     edx, cl
mov     eax, [ebp+0]
mov     [esp+110h+var_d4], edx
add     edx, eax
cmp     edx, 5a0h
ja      loc_4117d9
mov     edi, [esp+110h+arg_1c]
mov     [ebp+0], edx
mov     edx, [esp+110h+var_f8]
lea     eax, [edi+eax*8]
mov     edi, [esp+110h+var_f8]
test    edx, edx
lea     edi, [esp+edi*4+110h+var_3c]
mov     [esp+110h+var_d0], eax
mov     [esp+110h+var_c4], edi
mov     [edi], eax
jz      short loc_41164b
mov     edi, [esp+110h+var_d8]
mov     eax, [esp+110h+var_100]
mov     esi, [esp+110h+var_d0]
mov     byte ptr [esp+110h+var_e0], cl
mov     ecx, ebx
mov     [esp+edx*4+110h+var_7c], edi
mov     edx, [esp+110h+var_c4]
mov     byte ptr [esp+110h+var_e0+1], al
sub     ecx, eax
mov     eax, edi
shr     eax, cl
mov     ecx, [edx-4]
mov     edx, [esp+110h+var_e0]
sub     esi, ecx
sar     esi, 3
sub     esi, eax
mov     [ecx+eax*8], edx
mov     [ecx+eax*8+4], esi
jmp     short loc_411658
mov     ecx, [esp+110h+arg_14]
mov     edi, [esp+110h+var_d8]
mov     [ecx], eax
mov     ecx, [esp+110h+var_c8]
mov     eax, [esp+110h+var_fc]
cmp     eax, ecx
jg      loc_41155d
mov     ecx, [esp+110h+arg_24]
mov     dl, al
mov     ebp, [esp+110h+var_f4]
sub     dl, bl
mov     byte ptr [esp+110h+var_e0+1], dl
mov     edx, [esp+110h+arg_4]
lea     ecx, [ecx+edx*4]
cmp     ebp, ecx
jb      short loc_411690
mov     byte ptr [esp+110h+var_e0], 0c0h
jmp     short loc_4116d9
mov     esi, [ebp+0]
mov     ecx, [esp+110h+arg_8]
cmp     esi, ecx
jnb     short loc_4116b2
cmp     esi, 100h
sbb     dl, dl
and     dl, 0a0h
add     dl, 60h
mov     byte ptr [esp+110h+var_e0], dl
jmp     short loc_4116d2
sub     esi, ecx
mov     ecx, [esp+110h+arg_10]
shl     esi, 2
mov     dl, [esi+ecx]
mov     ecx, [esp+110h+arg_c]
add     dl, 50h
mov     esi, [esi+ecx]
mov     byte ptr [esp+110h+var_e0], dl
add     ebp, 4
mov     [esp+110h+var_f4], ebp
mov     ecx, eax
mov     edx, 1
sub     ecx, ebx
mov     eax, edi
shl     edx, cl
mov     ecx, ebx
shr     eax, cl
cmp     eax, [esp+110h+var_d4]
jnb     short loc_411711
mov     ecx, [esp+110h+var_d0]
lea     ecx, [ecx+eax*8]
mov     ebp, [esp+110h+var_e0]
add     eax, edx
mov     [ecx], ebp
lea     ebp, ds:0[edx*8]
mov     [ecx+4], esi
add     ecx, ebp
cmp     eax, [esp+110h+var_d4]
jb      short loc_4116f7
mov     ecx, [esp+110h+var_f0]
mov     eax, 1
shl     eax, cl
test    edi, eax
jz      short loc_411728
xor     edi, eax
shr     eax, 1
test    edi, eax
jnz     short loc_411720
mov     edx, [esp+110h+var_f8]
mov     ebp, 1
mov     ecx, ebx
xor     edi, eax
shl     ebp, cl
mov     ecx, [esp+edx*4+110h+var_7c]
lea     eax, [esp+edx*4+110h+var_7c]
mov     [esp+110h+var_d8], edi
dec     ebp
and     ebp, edi
cmp     ebp, ecx
jz      short loc_411770
mov     ebp, [esp+110h+var_100]
dec     edx
sub     ebx, ebp
mov     ebp, 1
mov     ecx, ebx
sub     eax, 4
shl     ebp, cl
mov     ecx, [eax]
dec     ebp
and     ebp, edi
cmp     ebp, ecx
jnz     short loc_411750
mov     [esp+110h+var_f8], edx
mov     eax, [esp+110h+var_ec]
mov     ebp, [esp+110h+var_100]
mov     edx, eax
dec     eax
mov     [esp+110h+var_ec], eax
mov     eax, [esp+110h+var_fc]
test    edx, edx
jnz     loc_411547
mov     ecx, [esp+110h+var_e8]
mov     edx, [esp+110h+var_f0]
add     ecx, 4
inc     eax
mov     [esp+110h+var_e8], ecx
mov     ecx, [esp+110h+var_e4]
inc     edx
cmp     eax, ecx
mov     [esp+110h+var_fc], eax
mov     [esp+110h+var_f0], edx
jle     loc_411530
mov     esi, [esp+110h+var_cc]
xor     edi, edi
cmp     esi, edi
jz      loc_4113b6
cmp     [esp+110h+var_e4], 1
jz      loc_4113b6
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffffffbh
pop     ebx
add     esp, 100h
retn
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffffffch
pop     ebx
add     esp, 100h
retn
push    ecx
push    ebx
mov     ebx, [esp+8+arg_20]
push    ebp
push    esi
mov     eax, [ebx+28h]
push    edi
push    4
push    120h
push    eax
mov     [esp+20h+var_4], 0
call    dword ptr [ebx+20h]
mov     edi, eax
add     esp, 0ch
test    edi, edi
jnz     short loc_411823
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffffffch
pop     ebx
pop     ecx
retn
mov     edx, [esp+14h+arg_1c]
mov     eax, [esp+14h+arg_c]
mov     ebp, [esp+14h+arg_0]
lea     ecx, [esp+14h+var_4]
push    edi
push    ecx
mov     ecx, [esp+1ch+arg_14]
push    edx
mov     edx, [esp+20h+arg_8]
push    eax
push    ecx
push    offset dword_4165e0
push    offset dword_416564
push    101h
push    ebp
push    edx
call    sub_411320
mov     esi, eax
add     esp, 28h
test    esi, esi
jnz     loc_411936
mov     eax, [esp+14h+arg_c]
cmp     dword ptr [eax], 0
jz      loc_41195a
mov     edx, [esp+14h+arg_1c]
mov     eax, [esp+14h+arg_10]
lea     ecx, [esp+14h+var_4]
push    edi
push    ecx
mov     ecx, [esp+1ch+arg_18]
push    edx
mov     edx, [esp+20h+arg_4]
push    eax
mov     eax, [esp+24h+arg_8]
push    ecx
push    offset dword_4166d4
push    offset dword_41665c
push    esi
lea     ecx, [eax+ebp*4]
push    edx
push    ecx
call    sub_411320
mov     esi, eax
add     esp, 28h
test    esi, esi
jnz     short loc_4118cf
mov     edx, [esp+14h+arg_10]
cmp     dword ptr [edx], 0
jnz     short loc_4118bc
cmp     ebp, 101h
ja      short loc_411917
mov     eax, [ebx+28h]
push    edi
push    eax
call    dword ptr [ebx+24h]
add     esp, 8
xor     eax, eax
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
cmp     esi, 0fffffffdh
jnz     short loc_4118ee
mov     ecx, [ebx+28h]
push    edi
push    ecx
mov     dword ptr [ebx+18h], offset aoversubscribed_0
call    dword ptr [ebx+24h]
add     esp, 8
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
cmp     esi, 0fffffffbh
jnz     short loc_411912
mov     ecx, [ebx+28h]
push    edi
push    ecx
mov     dword ptr [ebx+18h], offset aincompletedist
mov     esi, 0fffffffdh
call    dword ptr [ebx+24h]
add     esp, 8
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
cmp     esi, 0fffffffch
jz      short loc_411923
mov     dword ptr [ebx+18h], offset aemptydistancet
mov     esi, 0fffffffdh
mov     ecx, [ebx+28h]
push    edi
push    ecx
call    dword ptr [ebx+24h]
add     esp, 8
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
cmp     esi, 0fffffffdh
jnz     short loc_411955
mov     edx, [ebx+28h]
push    edi
push    edx
mov     dword ptr [ebx+18h], offset aoversubscribed_1
call    dword ptr [ebx+24h]
add     esp, 8
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
cmp     esi, 0fffffffch
jz      short loc_411966
mov     dword ptr [ebx+18h], offset aincompletelite
mov     esi, 0fffffffdh
mov     edx, [ebx+28h]
push    edi
push    edx
call    dword ptr [ebx+24h]
add     esp, 8
mov     eax, esi
pop     edi
pop     esi
pop     ebp
pop     ebx
pop     ecx
retn
mov     eax, [esp+arg_0]
mov     ecx, dword_4193e0
mov     edx, [esp+arg_4]
mov     [eax], ecx
mov     eax, dword_4193e4
mov     ecx, [esp+arg_8]
mov     [edx], eax
mov     edx, [esp+arg_c]
xor     eax, eax
mov     dword ptr [ecx], offset dword_4193e8
mov     dword ptr [edx], offset dword_41a3e8
retn
push    ecx
push    ebx
mov     ebx, [esp+8+arg_0]
push    ebp
push    esi
mov     esi, [esp+10h+arg_4]
mov     ebp, [ebx+34h]
push    edi
mov     edi, [ebx+30h]
mov     eax, [esi+0ch]
cmp     edi, ebp
mov     [esp+14h+var_4], eax
mov     [esp+14h+arg_0], edi
jbe     short loc_4119d5
mov     ebp, [ebx+2ch]
mov     eax, [esi+10h]
sub     ebp, edi
cmp     ebp, eax
jbe     short loc_4119e0
mov     ebp, eax
test    ebp, ebp
jz      short loc_4119f3
cmp     [esp+14h+arg_8], 0fffffffbh
jnz     short loc_4119f3
mov     [esp+14h+arg_8], 0
mov     edx, [esi+14h]
sub     eax, ebp
add     edx, ebp
mov     [esi+10h], eax
mov     [esi+14h], edx
mov     eax, [ebx+38h]
test    eax, eax
jz      short loc_411a18
mov     ecx, [ebx+3ch]
push    ebp
push    edi
push    ecx
call    eax
mov     [ebx+3ch], eax
add     esp, 0ch
mov     [esi+30h], eax
mov     ecx, ebp
mov     esi, edi
mov     edi, [esp+14h+var_4]
mov     edx, ecx
shr     ecx, 2
rep movsd
mov     eax, [esp+14h+arg_0]
mov     ecx, edx
and     ecx, 3
add     eax, ebp
rep movsb
mov     edi, [esp+14h+var_4]
mov     ecx, [ebx+2ch]
add     edi, ebp
cmp     eax, ecx
mov     [esp+14h+var_4], edi
jnz     loc_411aca
mov     eax, [ebx+34h]
mov     esi, [ebx+28h]
cmp     eax, ecx
mov     [esp+14h+arg_0], esi
jnz     short loc_411a5a
mov     [ebx+34h], esi
mov     edi, [esp+14h+arg_4]
mov     ebp, [ebx+34h]
sub     ebp, esi
mov     eax, [edi+10h]
cmp     ebp, eax
jbe     short loc_411a6c
mov     ebp, eax
test    ebp, ebp
jz      short loc_411a7f
cmp     [esp+14h+arg_8], 0fffffffbh
jnz     short loc_411a7f
mov     [esp+14h+arg_8], 0
mov     edx, [edi+14h]
sub     eax, ebp
add     edx, ebp
mov     [edi+10h], eax
mov     [edi+14h], edx
mov     eax, [ebx+38h]
test    eax, eax
jz      short loc_411aa4
mov     ecx, [ebx+3ch]
push    ebp
push    esi
push    ecx
call    eax
mov     [ebx+3ch], eax
add     esp, 0ch
mov     [edi+30h], eax
mov     eax, [esp+14h+var_4]
mov     ecx, ebp
mov     edx, ecx
mov     edi, eax
shr     ecx, 2
rep movsd
add     eax, ebp
mov     ecx, edx
mov     [esp+14h+var_4], eax
mov     eax, [esp+14h+arg_0]
and     ecx, 3
add     eax, ebp
rep movsb
mov     [esp+14h+arg_0], eax
mov     ecx, [esp+14h+arg_4]
mov     edx, [esp+14h+var_4]
pop     edi
pop     esi
mov     [ecx+0ch], edx
mov     [ebx+30h], eax
mov     eax, [esp+0ch+arg_8]
pop     ebp
pop     ebx
pop     ecx
retn
sub     esp, 14h
mov     ecx, [esp+14h+arg_10]
push    ebx
push    ebp
push    esi
mov     ebx, [ecx+34h]
mov     esi, [ecx+30h]
mov     edx, [ecx+20h]
push    edi
mov     edi, [esp+24h+arg_14]
cmp     ebx, esi
mov     [esp+24h+var_10], ebx
mov     eax, [edi+4]
mov     ebp, [edi]
mov     [esp+24h+var_14], eax
mov     eax, [ecx+1ch]
jnb     short loc_411b25
sub     esi, ebx
dec     esi
mov     [esp+24h+var_c], esi
jmp     short loc_411b2e
mov     ecx, [ecx+2ch]
sub     ecx, ebx
mov     [esp+24h+var_c], ecx
mov     ecx, [esp+24h+arg_0]
mov     ecx, dword_41a5d8[ecx*4]
mov     [esp+24h+var_8], ecx
mov     ecx, [esp+24h+arg_4]
mov     ecx, dword_41a5d8[ecx*4]
mov     [esp+24h+var_4], ecx
cmp     eax, 14h
jnb     short loc_411b70
mov     ecx, [esp+24h+var_14]
dec     ecx
mov     [esp+24h+var_14], ecx
xor     ecx, ecx
mov     cl, [ebp+0]
mov     esi, ecx
mov     ecx, eax
shl     esi, cl
add     eax, 8
or      edx, esi
inc     ebp
cmp     eax, 14h
jb      short loc_411b51
mov     ecx, [esp+24h+var_8]
mov     esi, [esp+24h+arg_8]
and     ecx, edx
xor     ebx, ebx
mov     bl, [esi+ecx*8]
lea     esi, [esi+ecx*8]
test    ebx, ebx
jz      loc_411d28
xor     ecx, ecx
mov     cl, [esi+1]
shr     edx, cl
sub     eax, ecx
mov     [esp+24h+arg_4], ecx
test    bl, 10h
jnz     short loc_411bd5
test    bl, 40h
jnz     loc_411dcf
mov     ecx, dword_41a5d8[ebx*4]
mov     ebx, [esi+4]
and     ecx, edx
add     ecx, ebx
xor     ebx, ebx
mov     bl, [esi+ecx*8]
lea     esi, [esi+ecx*8]
test    ebx, ebx
jz      loc_411d28
xor     ecx, ecx
mov     cl, [esi+1]
shr     edx, cl
sub     eax, ecx
mov     [esp+24h+arg_4], ecx
test    bl, 10h
jz      short loc_411b9c
and     ebx, 0fh
sub     eax, ebx
mov     ecx, dword_41a5d8[ebx*4]
and     ecx, edx
add     ecx, [esi+4]
mov     [esp+24h+arg_0], ecx
mov     ecx, ebx
shr     edx, cl
cmp     eax, 0fh
jnb     short loc_411c12
mov     ecx, [esp+24h+var_14]
dec     ecx
mov     [esp+24h+var_14], ecx
xor     ecx, ecx
mov     cl, [ebp+0]
mov     esi, ecx
mov     ecx, eax
shl     esi, cl
add     eax, 8
or      edx, esi
inc     ebp
cmp     eax, 0fh
jb      short loc_411bf3
mov     ecx, [esp+24h+var_4]
mov     esi, [esp+24h+arg_c]
and     ecx, edx
xor     ebx, ebx
mov     bl, [esi+ecx*8]
lea     esi, [esi+ecx*8]
xor     ecx, ecx
mov     cl, [esi+1]
shr     edx, cl
sub     eax, ecx
mov     [esp+24h+arg_4], ecx
test    bl, 10h
jnz     short loc_411c67
test    bl, 40h
jnz     loc_411d62
mov     ecx, dword_41a5d8[ebx*4]
mov     ebx, [esi+4]
and     ecx, edx
add     ecx, ebx
xor     ebx, ebx
mov     bl, [esi+ecx*8]
lea     esi, [esi+ecx*8]
xor     ecx, ecx
mov     cl, [esi+1]
shr     edx, cl
sub     eax, ecx
mov     [esp+24h+arg_4], ecx
test    bl, 10h
jz      short loc_411c36
and     ebx, 0fh
cmp     eax, ebx
jnb     short loc_411c8c
mov     edi, [esp+24h+var_14]
xor     ecx, ecx
mov     cl, [ebp+0]
dec     edi
mov     [esp+24h+var_14], edi
mov     edi, ecx
mov     ecx, eax
add     eax, 8
shl     edi, cl
or      edx, edi
inc     ebp
cmp     eax, ebx
jb      short loc_411c6e
mov     edi, dword_41a5d8[ebx*4]
mov     ecx, [esi+4]
mov     esi, [esp+24h+var_c]
and     edi, edx
add     edi, ecx
mov     ecx, ebx
shr     edx, cl
mov     ecx, [esp+24h+arg_0]
sub     eax, ebx
sub     esi, ecx
mov     ecx, [esp+24h+arg_10]
mov     [esp+24h+var_c], esi
mov     esi, [ecx+28h]
mov     ecx, [esp+24h+var_10]
mov     ebx, ecx
sub     ebx, esi
cmp     ebx, edi
jb      short loc_411ce0
mov     esi, ecx
sub     esi, edi
mov     edi, [esp+24h+arg_0]
inc     ecx
mov     bl, [esi]
inc     esi
mov     [ecx-1], bl
inc     ecx
mov     bl, [esi]
inc     esi
mov     [ecx-1], bl
sub     edi, 2
mov     [esp+24h+arg_0], edi
jmp     short loc_411d0d
sub     esi, ecx
mov     ebx, [esp+24h+arg_0]
add     esi, edi
mov     edi, esi
mov     esi, [esp+24h+arg_10]
mov     esi, [esi+2ch]
sub     esi, edi
cmp     ebx, edi
jbe     short loc_411d0d
sub     ebx, edi
mov     [esp+24h+arg_0], ebx
mov     bl, [esi]
mov     [ecx], bl
inc     ecx
inc     esi
dec     edi
jnz     short loc_411cfd
mov     esi, [esp+24h+arg_10]
mov     esi, [esi+28h]
mov     bl, [esi]
mov     edi, [esp+24h+arg_0]
mov     [ecx], bl
inc     ecx
inc     esi
dec     edi
mov     [esp+24h+arg_0], edi
jnz     short loc_411d0d
mov     edi, [esp+24h+arg_14]
mov     [esp+24h+var_10], ecx
jmp     short loc_411d48
xor     ecx, ecx
mov     cl, [esi+1]
shr     edx, cl
sub     eax, ecx
mov     cl, [esi+4]
mov     esi, [esp+24h+var_10]
mov     [esi], cl
mov     ecx, [esp+24h+var_c]
inc     esi
dec     ecx
mov     [esp+24h+var_10], esi
mov     [esp+24h+var_c], ecx
mov     ecx, [esp+24h+var_c]
mov     ebx, [esp+24h+var_14]
cmp     ecx, 102h
jb      short loc_411d84
cmp     ebx, 0ah
jb      short loc_411d84
jmp     loc_411b4c
mov     ecx, [edi+4]
mov     ebx, [esp+24h+var_14]
mov     esi, eax
sub     ecx, ebx
shr     esi, 3
cmp     esi, ecx
mov     dword ptr [edi+18h], offset ainvaliddistanc
jnb     loc_411e41
jmp     loc_411e3f
mov     ecx, [edi+4]
mov     esi, eax
sub     ecx, ebx
shr     esi, 3
cmp     esi, ecx
jnb     short loc_411d94
mov     ecx, esi
mov     esi, [esp+24h+arg_10]
sub     ebp, ecx
mov     [esi+20h], edx
lea     edx, ds:0[ecx*8]
sub     eax, edx
add     ecx, ebx
mov     [esi+1ch], eax
mov     edx, [edi]
mov     eax, ebp
mov     [edi+4], ecx
mov     ecx, [edi+8]
sub     eax, edx
add     ecx, eax
mov     [edi], ebp
mov     [edi+8], ecx
mov     ecx, [esp+24h+var_10]
mov     [esi+34h], ecx
pop     edi
pop     esi
pop     ebp
xor     eax, eax
pop     ebx
add     esp, 14h
retn
test    bl, 20h
jz      short loc_411e26
mov     ecx, [edi+4]
mov     ebx, [esp+24h+var_14]
mov     esi, eax
sub     ecx, ebx
shr     esi, 3
cmp     esi, ecx
jnb     short loc_411de8
mov     ecx, esi
mov     esi, [esp+24h+arg_10]
sub     ebp, ecx
mov     [esi+20h], edx
lea     edx, ds:0[ecx*8]
sub     eax, edx
add     ecx, ebx
mov     [esi+1ch], eax
mov     edx, [edi]
mov     eax, ebp
mov     [edi+4], ecx
mov     ecx, [edi+8]
sub     eax, edx
add     ecx, eax
mov     [edi], ebp
mov     [edi+8], ecx
mov     ecx, [esp+24h+var_10]
mov     [esi+34h], ecx
pop     edi
pop     esi
pop     ebp
mov     eax, 1
pop     ebx
add     esp, 14h
retn
mov     ecx, [edi+4]
mov     ebx, [esp+24h+var_14]
mov     esi, eax
sub     ecx, ebx
shr     esi, 3
cmp     esi, ecx
mov     dword ptr [edi+18h], offset ainvalidliteral
jnb     short loc_411e41
mov     ecx, esi
mov     esi, [esp+24h+arg_10]
sub     ebp, ecx
mov     [esi+20h], edx
lea     edx, ds:0[ecx*8]
sub     eax, edx
add     ecx, ebx
mov     [esi+1ch], eax
mov     edx, [edi]
mov     eax, ebp
mov     [edi+4], ecx
mov     ecx, [edi+8]
sub     eax, edx
add     ecx, eax
mov     [edi], ebp
mov     [edi+8], ecx
mov     ecx, [esp+24h+var_10]
mov     [esi+34h], ecx
pop     edi
pop     esi
pop     ebp
mov     eax, 0fffffffdh
pop     ebx
add     esp, 14h
retn
mov     eax, dword_41d3e8
cmp     eax, 3
jnz     short loc_41211d
call    ___sbh_heapmin
jmp     short loc_41212a
cmp     eax, 2
jnz     short loc_41212a
push    20h
call    sub_4138a4
pop     ecx
push    0
push    hheap
call    ds:heapcompact
test    eax, eax
jnz     short loc_41215d
call    ds:getlasterror
push    78h
pop     ecx
cmp     eax, ecx
jnz     short loc_412159
mov     dword_41cee0, ecx
mov     dword_41cedc, 28h
or      eax, 0ffffffffh
retn
xor     eax, eax
retn
mov     eax, dword_41d3e8
push    esi
mov     esi, [esp+4+arg_0]
cmp     eax, 3
jnz     short loc_4121c2
cmp     esi, dword_41d3e0
ja      short loc_4121f4
push    esi
call    ___sbh_alloc_block
test    eax, eax
pop     ecx
jz      short loc_4121f4
pop     esi
retn
cmp     eax, 2
jnz     short loc_4121f4
mov     eax, [esp+4+arg_0]
test    eax, eax
jz      short loc_4121d7
lea     esi, [eax+0fh]
and     esi, 0fffffff0h
jmp     short loc_4121da
push    10h
pop     esi
cmp     esi, dword_41c7c4
ja      short loc_412201
mov     eax, esi
shr     eax, 4
push    eax
call    sub_413a02
test    eax, eax
pop     ecx
jnz     short loc_412210
jmp     short loc_412201
test    esi, esi
jnz     short loc_4121fb
push    1
pop     esi
add     esi, 0fh
and     esi, 0fffffff0h
push    esi
push    0
push    hheap
call    ds:heapalloc
pop     esi
retn
push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+size]
imul    esi, [ebp+arg_4]
cmp     esi, 0ffffffe0h
push    edi
mov     [ebp+size], esi
ja      short loc_412233
test    esi, esi
jnz     short loc_41222d
push    1
pop     esi
add     esi, 0fh
and     esi, 0fffffff0h
xor     edi, edi
cmp     esi, 0ffffffe0h
ja      short loc_412292
mov     eax, dword_41d3e8
cmp     eax, 3
jnz     short loc_41225e
mov     eax, [ebp+size]
cmp     eax, dword_41d3e0
ja      short loc_41227d
push    eax
call    ___sbh_alloc_block
mov     edi, eax
pop     ecx
test    edi, edi
jnz     short loc_4122a8
jmp     short loc_41227d
cmp     eax, 2
jnz     short loc_41227d
cmp     esi, dword_41c7c4
ja      short loc_41227d
mov     eax, esi
shr     eax, 4
push    eax
call    sub_413a02
mov     edi, eax
pop     ecx
test    edi, edi
jnz     short loc_4122bc
push    esi
push    8
push    hheap
call    ds:heapalloc
mov     edi, eax
test    edi, edi
jnz     short loc_4122b6
cmp     dword_41cf38, 0
jz      short loc_4122b6
push    esi
call    __callnewh
test    eax, eax
pop     ecx
jz      short loc_4122bf
jmp     short loc_412233
push    [ebp+size]
push    0
push    edi
call    _memset
add     esp, 0ch
mov     eax, edi
pop     edi
pop     esi
pop     ebp
retn
push    esi
jmp     short loc_4122ab
xor     eax, eax
jmp     short loc_4122b8
push    ebp
mov     ebp, esp
push    ecx
push    esi
mov     esi, [ebp+lpmem]
test    esi, esi
jz      short loc_412329
mov     eax, dword_41d3e8
cmp     eax, 3
jnz     short loc_4122ef
push    esi
call    ___sbh_find_block
pop     ecx
test    eax, eax
push    esi
jz      short loc_41231b
push    eax
call    sub_412e5b
pop     ecx
pop     ecx
jmp     short loc_412329
cmp     eax, 2
jnz     short loc_41231a
lea     eax, [ebp+lpmem]
push    eax
lea     eax, [ebp+var_4]
push    eax
push    esi
call    sub_413966
add     esp, 0ch
test    eax, eax
jz      short loc_41231a
push    eax
push    [ebp+lpmem]
push    [ebp+var_4]
call    sub_4139bd
add     esp, 0ch
jmp     short loc_412329
push    esi
push    0
push    hheap
call    ds:heapfree
pop     esi
leave
retn
pop     ecx
pop     ecx
retn
retn
push    esi
mov     esi, [esp+4+arg_0]
push    0
and     dword ptr [esi], 0
call    ds:getmodulehandlea
cmp     word ptr [eax], 5a4dh
jnz     short loc_412c41
mov     ecx, [eax+3ch]
test    ecx, ecx
jz      short loc_412c41
add     eax, ecx
mov     cl, [eax+1ah]
mov     [esi], cl
mov     al, [eax+1bh]
mov     [esi+1], al
pop     esi
retn
push    ebp
mov     ebp, esp
mov     eax, 122ch
call    __alloca_probe
lea     eax, [ebp+versioninformation]
push    ebx
push    eax
mov     [ebp+versioninformation.dwosversioninfosize], 94h
call    ds:getversionexa
test    eax, eax
jz      short loc_412c86
cmp     [ebp+versioninformation.dwplatformid], 2
jnz     short loc_412c86
cmp     [ebp+versioninformation.dwmajorversion], 5
jb      short loc_412c86
push    1
pop     eax
jmp     loc_412d88
lea     eax, [ebp+buffer]
push    1090h
push    eax
push    offset amsvcrtheapsele
call    ds:getenvironmentvariablea
test    eax, eax
jz      loc_412d75
xor     ebx, ebx
lea     ecx, [ebp+buffer]
cmp     [ebp+buffer], bl
jz      short loc_412cc8
mov     al, [ecx]
cmp     al, 61h
jl      short loc_412cc3
cmp     al, 7ah
jg      short loc_412cc3
sub     al, 20h
mov     [ecx], al
inc     ecx
cmp     [ecx], bl
jnz     short loc_412cb5
lea     eax, [ebp+buffer]
push    16h
push    eax
push    offset str1
call    _strncmp
add     esp, 0ch
test    eax, eax
jnz     short loc_412cea
lea     eax, [ebp+buffer]
jmp     short loc_412d33
lea     eax, [ebp+filename]
push    104h
push    eax
push    ebx
call    ds:getmodulefilenamea
cmp     [ebp+filename], bl
lea     ecx, [ebp+filename]
jz      short loc_412d1e
mov     al, [ecx]
cmp     al, 61h
jl      short loc_412d19
cmp     al, 7ah
jg      short loc_412d19
sub     al, 20h
mov     [ecx], al
inc     ecx
cmp     [ecx], bl
jnz     short loc_412d0b
lea     eax, [ebp+filename]
push    eax
lea     eax, [ebp+buffer]
push    eax
call    _strstr
pop     ecx
pop     ecx
cmp     eax, ebx
jz      short loc_412d75
push    2ch
push    eax
call    _strchr
pop     ecx
cmp     eax, ebx
pop     ecx
jz      short loc_412d75
inc     eax
mov     ecx, eax
cmp     [eax], bl
jz      short loc_412d5a
cmp     byte ptr [ecx], 3bh
jnz     short loc_412d55
mov     [ecx], bl
jmp     short loc_412d56
inc     ecx
cmp     [ecx], bl
jnz     short loc_412d4c
push    0ah
push    ebx
push    eax
call    _strtol
add     esp, 0ch
cmp     eax, 2
jz      short loc_412d88
cmp     eax, 3
jz      short loc_412d88
cmp     eax, 1
jz      short loc_412d88
lea     eax, [ebp+var_4]
push    eax
call    sub_412c16
cmp     [ebp+var_4], 6
pop     ecx
sbb     eax, eax
add     eax, 3
pop     ebx
leave
retn
xor     eax, eax
push    0
cmp     [esp+4+arg_0], eax
push    1000h
setz    al
push    eax
call    ds:heapcreate
test    eax, eax
mov     hheap, eax
jz      short loc_412de1
call    sub_412c43
cmp     eax, 3
mov     dword_41d3e8, eax
jnz     short loc_412dc7
push    3f8h
call    ___sbh_heap_init
pop     ecx
jmp     short loc_412dd1
cmp     eax, 2
jnz     short loc_412de4
call    sub_41370a
test    eax, eax
jnz     short loc_412de4
push    hheap
call    ds:heapdestroy
xor     eax, eax
retn
push    1
pop     eax
retn
push    ebp
mov     ebp, esp
sub     esp, 10h
mov     ecx, [ebp+arg_0]
push    ebx
push    esi
mov     esi, [ebp+arg_4]
mov     eax, [ecx+10h]
push    edi
mov     edi, esi
add     esi, 0fffffffch
sub     edi, [ecx+0ch]
shr     edi, 0fh
mov     ecx, edi
imul    ecx, 204h
lea     ecx, [ecx+eax+144h]
mov     [ebp+var_10], ecx
mov     ecx, [esi]
dec     ecx
test    cl, 1
mov     [ebp+var_4], ecx
jnz     loc_41317f
mov     edx, [ecx+esi]
lea     ebx, [ecx+esi]
mov     [ebp+var_c], edx
mov     edx, [esi-4]
mov     [ebp+var_8], edx
mov     edx, [ebp+var_c]
test    dl, 1
mov     [ebp+arg_4], ebx
jnz     short loc_412f31
sar     edx, 4
dec     edx
cmp     edx, 3fh
jbe     short loc_412ebf
push    3fh
pop     edx
mov     ecx, [ebx+4]
cmp     ecx, [ebx+8]
jnz     short loc_412f13
cmp     edx, 20h
jnb     short loc_412eea
mov     ebx, 80000000h
mov     ecx, edx
shr     ebx, cl
lea     ecx, [edx+eax+4]
not     ebx
and     [eax+edi*4+44h], ebx
dec     byte ptr [ecx]
jnz     short loc_412f0b
mov     ecx, [ebp+arg_0]
and     [ecx], ebx
jmp     short loc_412f0b
lea     ecx, [edx-20h]
mov     ebx, 80000000h
shr     ebx, cl
lea     ecx, [edx+eax+4]
not     ebx
and     [eax+edi*4+0c4h], ebx
dec     byte ptr [ecx]
jnz     short loc_412f0b
mov     ecx, [ebp+arg_0]
and     [ecx+4], ebx
mov     ecx, [ebp+var_4]
mov     ebx, [ebp+arg_4]
jmp     short loc_412f16
mov     ecx, [ebp+var_4]
mov     edx, [ebx+8]
mov     ebx, [ebx+4]
add     ecx, [ebp+var_c]
mov     [edx+4], ebx
mov     edx, [ebp+arg_4]
mov     [ebp+var_4], ecx
mov     ebx, [edx+4]
mov     edx, [edx+8]
mov     [ebx+8], edx
mov     edx, ecx
sar     edx, 4
dec     edx
cmp     edx, 3fh
jbe     short loc_412f3f
push    3fh
pop     edx
mov     ebx, [ebp+var_8]
and     ebx, 1
mov     [ebp+var_c], ebx
jnz     loc_412fe2
sub     esi, [ebp+var_8]
mov     ebx, [ebp+var_8]
sar     ebx, 4
push    3fh
mov     [ebp+arg_4], esi
dec     ebx
pop     esi
cmp     ebx, esi
jbe     short loc_412f64
mov     ebx, esi
add     ecx, [ebp+var_8]
mov     edx, ecx
mov     [ebp+var_4], ecx
sar     edx, 4
dec     edx
cmp     edx, esi
jbe     short loc_412f76
mov     edx, esi
cmp     ebx, edx
jz      short loc_412fdd
mov     ecx, [ebp+arg_4]
mov     esi, [ecx+4]
cmp     esi, [ecx+8]
jnz     short loc_412fc5
cmp     ebx, 20h
jnb     short loc_412fa6
mov     esi, 80000000h
mov     ecx, ebx
shr     esi, cl
not     esi
and     [eax+edi*4+44h], esi
dec     byte ptr [ebx+eax+4]
jnz     short loc_412fc5
mov     ecx, [ebp+arg_0]
and     [ecx], esi
jmp     short loc_412fc5
lea     ecx, [ebx-20h]
mov     esi, 80000000h
shr     esi, cl
not     esi
and     [eax+edi*4+0c4h], esi
dec     byte ptr [ebx+eax+4]
jnz     short loc_412fc5
mov     ecx, [ebp+arg_0]
and     [ecx+4], esi
mov     ecx, [ebp+arg_4]
mov     esi, [ecx+8]
mov     ecx, [ecx+4]
mov     [esi+4], ecx
mov     ecx, [ebp+arg_4]
mov     esi, [ecx+4]
mov     ecx, [ecx+8]
mov     [esi+8], ecx
mov     esi, [ebp+arg_4]
jmp     short loc_412fe5
mov     ebx, [ebp+arg_0]
cmp     [ebp+var_c], 0
jnz     short loc_412ff3
cmp     ebx, edx
jz      loc_413074
mov     ecx, [ebp+var_10]
mov     ebx, [ecx+edx*8+4]
lea     ecx, [ecx+edx*8]
mov     [esi+4], ebx
mov     [esi+8], ecx
mov     [ecx+4], esi
mov     ecx, [esi+4]
mov     [ecx+8], esi
mov     ecx, [esi+4]
cmp     ecx, [esi+8]
jnz     short loc_413074
mov     cl, [edx+eax+4]
cmp     edx, 20h
mov     byte ptr [ebp+arg_4+3], cl
inc     cl
mov     [edx+eax+4], cl
jnb     short loc_41304b
cmp     byte ptr [ebp+arg_4+3], 0
jnz     short loc_41303a
mov     ebx, 80000000h
mov     ecx, edx
shr     ebx, cl
mov     ecx, [ebp+arg_0]
or      [ecx], ebx
mov     ebx, 80000000h
mov     ecx, edx
shr     ebx, cl
lea     eax, [eax+edi*4+44h]
or      [eax], ebx
jmp     short loc_413074
cmp     byte ptr [ebp+arg_4+3], 0
jnz     short loc_413061
lea     ecx, [edx-20h]
mov     ebx, 80000000h
shr     ebx, cl
mov     ecx, [ebp+arg_0]
or      [ecx+4], ebx
lea     ecx, [edx-20h]
mov     edx, 80000000h
shr     edx, cl
lea     eax, [eax+edi*4+0c4h]
or      [eax], edx
mov     eax, [ebp+var_4]
mov     [esi], eax
mov     [eax+esi-4], eax
mov     eax, [ebp+var_10]
dec     dword ptr [eax]
jnz     loc_41317f
mov     eax, dword_41d3d4
test    eax, eax
jz      loc_413171
mov     ecx, dword_41d3cc
mov     esi, ds:virtualfree
shl     ecx, 0fh
add     ecx, [eax+0ch]
mov     ebx, 8000h
push    4000h
push    ebx
push    ecx
call    esi
mov     ecx, dword_41d3cc
mov     eax, dword_41d3d4
mov     edx, 80000000h
shr     edx, cl
or      [eax+8], edx
mov     eax, dword_41d3d4
mov     ecx, dword_41d3cc
mov     eax, [eax+10h]
and     dword ptr [eax+ecx*4+0c4h], 0
mov     eax, dword_41d3d4
mov     eax, [eax+10h]
dec     byte ptr [eax+43h]
mov     eax, dword_41d3d4
mov     ecx, [eax+10h]
cmp     byte ptr [ecx+43h], 0
jnz     short loc_413102
and     dword ptr [eax+4], 0fffffffeh
mov     eax, dword_41d3d4
cmp     dword ptr [eax+8], 0ffffffffh
jnz     short loc_413171
push    ebx
push    0
push    dword ptr [eax+0ch]
call    esi
mov     eax, dword_41d3d4
push    dword ptr [eax+10h]
push    0
push    hheap
call    ds:heapfree
mov     eax, dword_41d3d8
mov     edx, lpmem
lea     eax, [eax+eax*4]
shl     eax, 2
mov     ecx, eax
mov     eax, dword_41d3d4
sub     ecx, eax
lea     ecx, [ecx+edx-14h]
push    ecx
lea     ecx, [eax+14h]
push    ecx
push    eax
call    _memcpy
mov     eax, [ebp+arg_0]
add     esp, 0ch
dec     dword_41d3d8
cmp     eax, dword_41d3d4
jbe     short loc_413167
sub     [ebp+arg_0], 14h
mov     eax, lpmem
mov     dword_41d3d0, eax
mov     eax, [ebp+arg_0]
mov     dword_41d3cc, edi
mov     dword_41d3d4, eax
pop     edi
pop     esi
pop     ebx
leave
retn
cmp     dword_41a7b0, 0ffffffffh
push    ebx
push    ebp
push    esi
push    edi
jnz     short loc_41371e
mov     esi, offset off_41a7a0
jmp     short loc_41373b
push    2020h
push    0
push    hheap
call    ds:heapalloc
mov     esi, eax
test    esi, esi
jz      loc_413847
mov     ebp, ds:virtualalloc
push    4
push    2000h
push    400000h
push    0
call    ebp
mov     edi, eax
test    edi, edi
jz      loc_413830
push    4
mov     ebx, 10000h
push    1000h
push    ebx
push    edi
call    ebp
test    eax, eax
jz      loc_413822
mov     eax, offset off_41a7a0
cmp     esi, eax
jnz     short loc_41379a
cmp     off_41a7a0, 0
jnz     short loc_41378a
mov     off_41a7a0, eax
cmp     off_41a7a4, 0
jnz     short loc_4137af
mov     off_41a7a4, eax
jmp     short loc_4137af
mov     [esi], eax
mov     eax, off_41a7a4
mov     [esi+4], eax
mov     off_41a7a4, esi
mov     eax, [esi+4]
mov     [eax], esi
lea     eax, [edi+400000h]
lea     ecx, [esi+98h]
mov     [esi+14h], eax
lea     eax, [esi+18h]
mov     [esi+0ch], ecx
mov     [esi+10h], edi
mov     [esi+8], eax
xor     ebp, ebp
mov     ecx, 0f1h
xor     edx, edx
cmp     ebp, 10h
setnl   dl
dec     edx
and     edx, ecx
dec     edx
inc     ebp
mov     [eax], edx
mov     [eax+4], ecx
add     eax, 8
cmp     ebp, 400h
jl      short loc_4137d1
push    ebx
push    0
push    edi
call    _memset
add     esp, 0ch
mov     eax, [esi+10h]
add     eax, ebx
cmp     edi, eax
jnb     short loc_41381e
or      byte ptr [edi+0f8h], 0ffh
lea     eax, [edi+8]
mov     [edi], eax
mov     dword ptr [edi+4], 0f0h
add     edi, 1000h
jmp     short loc_4137fa
mov     eax, esi
jmp     short loc_413849
push    8000h
push    0
push    edi
call    ds:virtualfree
cmp     esi, offset off_41a7a0
jz      short loc_413847
push    esi
push    0
push    hheap
call    ds:heapfree
xor     eax, eax
pop     edi
pop     esi
pop     ebp
pop     ebx
retn
push    esi
mov     esi, [esp+4+lpmem]
push    8000h
push    0
push    dword ptr [esi+10h]
call    ds:virtualfree
cmp     off_41c7c0, esi
jnz     short loc_413873
mov     eax, [esi+4]
mov     off_41c7c0, eax
cmp     esi, offset off_41a7a0
jz      short loc_41389b
mov     eax, [esi+4]
mov     ecx, [esi]
push    esi
push    0
mov     [eax], ecx
mov     eax, [esi]
mov     ecx, [esi+4]
mov     [eax+4], ecx
push    hheap
call    ds:heapfree
pop     esi
retn
or      dword_41a7b0, 0ffffffffh
pop     esi
retn
push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
mov     esi, off_41a7a4
push    edi
cmp     dword ptr [esi+10h], 0ffffffffh
jz      loc_41394f
and     [ebp+var_4], 0
lea     edi, [esi+2010h]
mov     ebx, 3ff000h
cmp     dword ptr [edi], 0f0h
jnz     short loc_41390b
mov     eax, ebx
push    4000h
add     eax, [esi+10h]
push    1000h
push    eax
call    ds:virtualfree
test    eax, eax
jz      short loc_41390b
or      dword ptr [edi], 0ffffffffh
dec     dword_41cf34
mov     eax, [esi+0ch]
test    eax, eax
jz      short loc_413900
cmp     eax, edi
jbe     short loc_413903
mov     [esi+0ch], edi
inc     [ebp+var_4]
dec     [ebp+arg_0]
jz      short loc_413918
sub     ebx, 1000h
sub     edi, 8
test    ebx, ebx
jge     short loc_4138ca
cmp     [ebp+var_4], 0
mov     ecx, esi
mov     esi, [esi+4]
jz      short loc_41394f
cmp     dword ptr [ecx+18h], 0ffffffffh
jnz     short loc_41394f
push    1
lea     eax, [ecx+20h]
pop     edx
cmp     dword ptr [eax], 0ffffffffh
jnz     short loc_413940
inc     edx
add     eax, 8
cmp     edx, 400h
jl      short loc_41392f
cmp     edx, 400h
jnz     short loc_41394f
push    ecx
call    sub_41384e
pop     ecx
cmp     esi, off_41a7a4
jz      short loc_413961
cmp     [ebp+arg_0], 0
jg      loc_4138b1
pop     edi
pop     esi
pop     ebx
leave
retn
mov     eax, [esp+arg_0]
mov     edx, offset off_41a7a0
push    esi
mov     ecx, edx
cmp     eax, [ecx+10h]
jbe     short loc_41397c
cmp     eax, [ecx+14h]
jb      short loc_413984
mov     ecx, [ecx]
cmp     ecx, edx
jz      short loc_4139b9
jmp     short loc_413972
test    al, 0fh
jnz     short loc_4139b9
mov     esi, eax
mov     edx, 100h
and     esi, 0fffh
cmp     esi, edx
jb      short loc_4139b9
mov     esi, [esp+4+arg_4]
mov     [esi], ecx
mov     esi, [esp+4+arg_8]
mov     ecx, eax
and     cx, 0f000h
sub     eax, ecx
mov     [esi], ecx
sub     eax, edx
pop     esi
sar     eax, 4
lea     eax, [eax+ecx+8]
retn
xor     eax, eax
pop     esi
retn
mov     eax, [esp+arg_0]
mov     ecx, [esp+arg_4]
sub     ecx, [eax+10h]
sar     ecx, 0ch
lea     eax, [eax+ecx*8+18h]
mov     ecx, [esp+arg_8]
movzx   edx, byte ptr [ecx]
add     [eax], edx
and     byte ptr [ecx], 0
cmp     dword ptr [eax], 0f0h
mov     dword ptr [eax+4], 0f1h
jnz     short locret_413a01
inc     dword_41cf34
cmp     dword_41cf34, 20h
jnz     short locret_413a01
push    10h
call    sub_4138a4
pop     ecx
retn
push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    ebx
push    esi
mov     esi, off_41c7c0
push    edi
mov     edx, [esi+10h]
cmp     edx, 0ffffffffh
jz      loc_413abb
mov     edi, [esi+8]
lea     ecx, [esi+2018h]
mov     eax, edi
sub     eax, esi
sub     eax, 18h
sar     eax, 3
shl     eax, 0ch
add     eax, edx
cmp     edi, ecx
mov     [ebp+var_4], eax
jnb     short loc_413a75
mov     ecx, [edi]
mov     ebx, [ebp+arg_0]
cmp     ecx, ebx
jl      short loc_413a5e
cmp     [edi+4], ebx
jbe     short loc_413a5e
push    ebx
push    ecx
push    eax
call    sub_413c0a
add     esp, 0ch
test    eax, eax
jnz     short loc_413acd
mov     eax, [ebp+var_4]
mov     [edi+4], ebx
add     edi, 8
lea     ecx, [esi+2018h]
add     eax, 1000h
cmp     edi, ecx
mov     [ebp+var_4], eax
jb      short loc_413a3b
jmp     short loc_413a78
mov     ebx, [ebp+arg_0]
mov     eax, [esi+8]
mov     ecx, [esi+10h]
lea     edi, [esi+18h]
mov     [ebp+val], eax
cmp     edi, eax
mov     [ebp+var_4], ecx
jnb     short loc_413abe
mov     eax, [edi]
cmp     eax, ebx
jl      short loc_413aaa
cmp     [edi+4], ebx
jbe     short loc_413aaa
push    ebx
push    eax
push    [ebp+var_4]
call    sub_413c0a
add     esp, 0ch
test    eax, eax
jnz     short loc_413acd
mov     [edi+4], ebx
add     [ebp+var_4], 1000h
add     edi, 8
cmp     edi, [ebp+val]
jb      short loc_413a8b
jmp     short loc_413abe
mov     ebx, [ebp+arg_0]
mov     esi, [esi]
cmp     esi, off_41c7c0
jz      short loc_413add
jmp     loc_413a10
mov     off_41c7c0, esi
sub     [edi], ebx
mov     [esi+8], edi
jmp     loc_413c05
mov     eax, offset off_41a7a0
mov     edi, eax
cmp     dword ptr [edi+10h], 0ffffffffh
jz      short loc_413af0
cmp     dword ptr [edi+0ch], 0
jnz     short loc_413afc
mov     edi, [edi]
cmp     edi, eax
jz      loc_413bd1
jmp     short loc_413ae4
mov     ebx, [edi+0ch]
and     [ebp+var_4], 0
mov     esi, ebx
mov     eax, ebx
sub     esi, edi
sub     esi, 18h
sar     esi, 3
shl     esi, 0ch
add     esi, [edi+10h]
cmp     dword ptr [ebx], 0ffffffffh
jnz     short loc_413b2b
cmp     [ebp+var_4], 10h
jge     short loc_413b2b
add     eax, 8
inc     [ebp+var_4]
cmp     dword ptr [eax], 0ffffffffh
jz      short loc_413b1a
mov     eax, [ebp+var_4]
push    4
shl     eax, 0ch
push    1000h
push    eax
push    esi
mov     [ebp+val], eax
call    ds:virtualalloc
cmp     eax, esi
jnz     loc_413c03
push    0
push    [ebp+val]
push    esi
call    _memset
mov     edx, [ebp+var_4]
add     esp, 0ch
test    edx, edx
mov     ecx, ebx
jle     short loc_413b92
lea     eax, [esi+4]
mov     [ebp+var_4], edx
or      byte ptr [eax+0f4h], 0ffh
lea     edx, [eax+4]
mov     [eax-4], edx
mov     edx, 0f0h
mov     [eax], edx
mov     [ecx], edx
mov     dword ptr [ecx+4], 0f1h
add     eax, 1000h
add     ecx, 8
dec     [ebp+var_4]
jnz     short loc_413b68
mov     off_41c7c0, edi
lea     eax, [edi+2018h]
cmp     ecx, eax
jnb     short loc_413bae
cmp     dword ptr [ecx], 0ffffffffh
jz      short loc_413bac
add     ecx, 8
jmp     short loc_413b9e
cmp     ecx, eax
sbb     eax, eax
and     eax, ecx
mov     [edi+0ch], eax
mov     eax, [ebp+arg_0]
mov     [esi+8], al
mov     [edi+8], ebx
sub     [ebx], eax
sub     [esi+4], eax
lea     ecx, [esi+eax+8]
lea     eax, [esi+100h]
mov     [esi], ecx
jmp     short loc_413c05
call    sub_41370a
test    eax, eax
jz      short loc_413c03
mov     ecx, [eax+10h]
mov     [ecx+8], bl
lea     edx, [ecx+ebx+8]
mov     off_41c7c0, eax
mov     [ecx], edx
mov     edx, 0f0h
sub     edx, ebx
mov     [ecx+4], edx
movzx   edx, bl
sub     [eax+18h], edx
lea     eax, [ecx+100h]
jmp     short loc_413c05
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
push    ebp
mov     ebp, esp
push    ecx
mov     ecx, [ebp+arg_0]
mov     edx, [ebp+arg_8]
push    ebx
push    esi
mov     esi, [ecx+4]
push    edi
mov     edi, [ecx]
lea     ebx, [ecx+0f8h]
cmp     esi, edx
mov     [ebp+var_4], edi
mov     eax, edi
mov     [ebp+arg_0], ebx
jb      short loc_413c4f
lea     eax, [edi+edx]
mov     [edi], dl
cmp     eax, ebx
jnb     short loc_413c3e
add     [ecx], edx
sub     [ecx+4], edx
jmp     short loc_413c47
and     dword ptr [ecx+4], 0
lea     eax, [ecx+8]
mov     [ecx], eax
lea     eax, [edi+8]
jmp     loc_413d1d
add     esi, edi
cmp     byte ptr [esi], 0
jz      short loc_413c58
mov     eax, esi
lea     esi, [eax+edx]
cmp     esi, ebx
jnb     short loc_413ca2
mov     bl, [eax]
test    bl, bl
jnz     short loc_413c95
push    1
lea     ebx, [eax+1]
pop     esi
cmp     byte ptr [ebx], 0
jnz     short loc_413c74
inc     ebx
inc     esi
jmp     short loc_413c6b
cmp     esi, edx
jnb     short loc_413cc6
cmp     eax, [ebp+var_4]
jnz     short loc_413c82
mov     [ecx+4], esi
jmp     short loc_413c8e
sub     [ebp+arg_4], esi
cmp     [ebp+arg_4], edx
jb      loc_413d27
mov     edi, [ebp+var_4]
mov     eax, ebx
jmp     short loc_413c9a
movzx   esi, bl
add     eax, esi
lea     esi, [eax+edx]
cmp     esi, [ebp+arg_0]
jb      short loc_413c5f
lea     esi, [ecx+8]
cmp     esi, edi
jnb     short loc_413d27
lea     eax, [esi+edx]
cmp     eax, [ebp+arg_0]
jnb     short loc_413d27
mov     al, [esi]
test    al, al
jnz     short loc_413cf7
push    1
lea     ebx, [esi+1]
pop     eax
cmp     byte ptr [ebx], 0
jnz     short loc_413ce7
inc     ebx
inc     eax
jmp     short loc_413cbd
lea     ebx, [eax+edx]
cmp     ebx, [ebp+arg_0]
jnb     short loc_413cd7
sub     esi, edx
mov     [ecx], ebx
mov     [ecx+4], esi
jmp     short loc_413ce0
and     dword ptr [ecx+4], 0
lea     esi, [ecx+8]
mov     [ecx], esi
mov     [eax], dl
add     eax, 8
jmp     short loc_413d1d
cmp     eax, edx
jnb     short loc_413cfe
sub     [ebp+arg_4], eax
cmp     [ebp+arg_4], edx
jb      short loc_413d27
mov     esi, ebx
jmp     short loc_413ca5
movzx   eax, al
add     esi, eax
jmp     short loc_413ca5
lea     ebx, [esi+edx]
cmp     ebx, [ebp+arg_0]
jnb     short loc_413d0f
sub     eax, edx
mov     [ecx], ebx
mov     [ecx+4], eax
jmp     short loc_413d18
and     dword ptr [ecx+4], 0
lea     eax, [ecx+8]
mov     [ecx], eax
mov     [esi], dl
lea     eax, [esi+8]
imul    ecx, 0fh
shl     eax, 4
sub     eax, ecx
jmp     short loc_413d29
xor     eax, eax
pop     edi
pop     esi
pop     ebx
leave
retn
push    esi
inc     ebx
xor     dh, [eax]
pop     eax
inc     ebx
xor     [eax], dh